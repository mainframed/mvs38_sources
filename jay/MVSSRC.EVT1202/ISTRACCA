         TITLE 'ISTRACCA - RAS ADD PROCEDURE'                           00001000
* 5735-RC2 COPYRIGHT IBM CORP 1977                                      00002000
* LICENSED MATERIAL - PROGRAM PROPERTY OF IBM                           00003000
* REFER TO COPYRIGHT INSTRUCTIONS FORM NUMBER G120-2083                 00004000
ISTRACCA CSECT ,                                                   0002 00005000
@MAINENT DS    0H                                                  0002 00006000
         USING *,@15                                               0002 00007000
         B     @PROLOG                                             0002 00008000
         DC    AL1(16)                                             0002 00009000
         DC    C'ISTRACCA  78.337'                                 0002 00010000
         DROP  @15                                                      00011000
@PROLOG  STM   @14,@12,12(@13)                                     0002 00012000
         BALR  @12,0                                               0002 00013000
@PSTART  DS    0H                                                  0002 00014000
         USING @PSTART,@12                                         0002 00015000
         PRINT OFF                                                      00016000
         PRINT ON                                                       00017000
*   ISTQAPTR=CCAVPQAB;              /* OBTAIN QAB PTR FROM PLIST     */ 00018000
         L     ISTQAPTR,CCAVPQAB(,CCARPLST)                        0024 00019000
*   PFXPTR=CCAVCBAD;                /* OBTAIN CB PTR FROM PLIST      */ 00020000
         L     PFXPTR,CCAVCBAD(,CCARPLST)                          0025 00021000
*   RFY                                                            0026 00022000
*     CCARPLST UNRSTD;                                             0026 00023000
*   IF QABCT=0                      /* IF Q IS EMPTY                 */ 00024000
*/* QUEUE EMPTY CASE                                                 */ 00025000
*                                                                  0027 00026000
*     THEN                                                         0027 00027000
         LH    @07,QABCT(,ISTQAPTR)                                0027 00028000
         LTR   @07,@07                                             0027 00029000
         BNZ   @RF00027                                            0027 00030000
*     DO;                           /* ADD CB AS ONLY CB OF Q        */ 00031000
*       QABFIRST=PFXPTR;            /* QABFIRST PTRS TO INPUT CB     */ 00032000
         ST    PFXPTR,QABFIRST(,ISTQAPTR)                          0029 00033000
*       QABLAST=PFXPTR;             /* QABLAST PTRS TO INPUT CB      */ 00034000
         ST    PFXPTR,QABLAST(,ISTQAPTR)                           0030 00035000
*       CCARBKAD=PFXPTR+QABBCKDS;   /* GET CB BCKPTR LOC             */ 00036000
         LR    CCARBKAD,PFXPTR                                     0031 00037000
         AH    CCARBKAD,QABBCKDS(,ISTQAPTR)                        0031 00038000
*       CCAVBCKP=ISTQAPTR;          /* CB BCKPTR PTS TO QAB          */ 00039000
         STCM  ISTQAPTR,15,CCAVBCKP(CCARBKAD)                      0032 00040000
*       CCARFWAD=PFXPTR+QABFWDDS;   /* GET CB FWDPTR LOC             */ 00041000
         LR    CCARFWAD,PFXPTR                                     0033 00042000
         AH    CCARFWAD,QABFWDDS(,ISTQAPTR)                        0033 00043000
*       CCAVFWDP=ISTQAPTR;          /* CB FWDPTR PTS TO QAB          */ 00044000
         STCM  ISTQAPTR,15,CCAVFWDP(CCARFWAD)                      0034 00045000
*     END;                                                         0035 00046000
*   ELSE                                                           0036 00047000
*CCALQNEM:                                                         0036 00048000
*     DO;                                                          0036 00049000
         B     @RC00027                                            0036 00050000
@RF00027 DS    0H                                                  0036 00051000
CCALQNEM DS    0H                                                  0037 00052000
*       IF QABFIFO='1'B             /* Q ATTRIBUTE =FIFO ?           */ 00053000
*/* FIFO QUEUE CASE                                                  */ 00054000
*                                                                  0037 00055000
*         THEN                                                     0037 00056000
         TM    QABFIFO(ISTQAPTR),B'00010000'                       0037 00057000
         BNO   @RF00037                                            0037 00058000
*         CCARPVCB=QABLAST;         /* SET PREVIOUS CB=LAST Q ELM    */ 00059000
         L     CCARPVCB,QABLAST(,ISTQAPTR)                         0038 00060000
*       ELSE                                                       0039 00061000
*         IF QABLIFO='1'B           /* Q ATTRIBUTE =LIFO ?           */ 00062000
*/* LIFO QUEUE CASE                                                  */ 00063000
*                                                                  0039 00064000
*           THEN                                                   0039 00065000
         B     @RC00037                                            0039 00066000
@RF00037 TM    QABLIFO(ISTQAPTR),B'00100000'                       0039 00067000
         BNO   @RF00039                                            0039 00068000
*           CCARPVCB=ISTQAPTR;      /* SET PREVIOUS CB=QAB           */ 00069000
         LR    CCARPVCB,ISTQAPTR                                   0040 00070000
*/* PRIORITY QUEUE CASE                                              */ 00071000
*                                                                  0041 00072000
*         ELSE                                                     0041 00073000
*CCALPRTQ:                                                         0041 00074000
*           DO;                                                    0041 00075000
         B     @RC00039                                            0041 00076000
@RF00039 DS    0H                                                  0041 00077000
CCALPRTQ DS    0H                                                  0042 00078000
*             CCARQELM=QABFIRST;    /* GET FIRST CB                  */ 00079000
*                                                                  0042 00080000
         L     CCARQELM,QABFIRST(,ISTQAPTR)                        0042 00081000
*             /*******************************************************/ 00082000
*             /*                                                     */ 00083000
*             /* IS INPUT CB PRIORITY GTER EXISTING PRIORITY         */ 00084000
*             /*                                                     */ 00085000
*             /*******************************************************/ 00086000
*                                                                  0043 00087000
*             RFY                                                  0043 00088000
*               PTYDSREG RSTD;                                     0043 00089000
*CCALLOOP:                                                         0044 00090000
*             PTYDSREG=QABPTYDS+1;                                 0044 00091000
CCALLOOP LA    PTYDSREG,1                                          0044 00092000
         AH    PTYDSREG,QABPTYDS(,ISTQAPTR)                        0044 00093000
*             IF CCAVCBPA(PTYDSREG)>CCAVCBPB(PTYDSREG) THEN        0045 00094000
         LR    @09,PFXPTR                                          0045 00095000
         ALR   @09,PTYDSREG                                        0045 00096000
         BCTR  @09,0                                               0045 00097000
         LR    @07,CCARQELM                                        0045 00098000
         ALR   @07,PTYDSREG                                        0045 00099000
         BCTR  @07,0                                               0045 00100000
         CLC   CCAVCBPA(1,@09),CCAVCBPB(@07)                       0045 00101000
         BNH   @RF00045                                            0045 00102000
*               DO;                                                0046 00103000
*                 CCARBKAD=CCARQELM+QABBCKDS;/* GET BCKPTR LOC OF CB    00104000
*                                      COMPARED                      */ 00105000
         LR    CCARBKAD,CCARQELM                                   0047 00106000
         AH    CCARBKAD,QABBCKDS(,ISTQAPTR)                        0047 00107000
*                 CCARPVCB=CCAVBCKP;/* SET PREVIOUS CB=BACKPTR IN CB    00108000
*                                      COMPARED                      */ 00109000
         ICM   CCARPVCB,15,CCAVBCKP(CCARBKAD)                      0048 00110000
*               END;                                               0049 00111000
*             ELSE                                                 0050 00112000
*               DO;                                                0050 00113000
         B     @RC00045                                            0050 00114000
@RF00045 DS    0H                                                  0051 00115000
*                 CCARFWAD=CCARQELM+QABFWDDS;/* GET FWD PTR LOC OF Q    00116000
*                                      ELEMENT                       */ 00117000
*                                                                  0051 00118000
         LR    CCARFWAD,CCARQELM                                   0051 00119000
         AH    CCARFWAD,QABFWDDS(,ISTQAPTR)                        0051 00120000
*                 /***************************************************/ 00121000
*                 /*                                                 */ 00122000
*                 /* END OF Q IF FWDPTR OF Q ELM=QAB ADDR            */ 00123000
*                 /*                                                 */ 00124000
*                 /***************************************************/ 00125000
*                                                                  0052 00126000
*                 IF CCAVFWDP=ISTQAPTR/* END OF Q?                   */ 00127000
*                   THEN                                           0052 00128000
         ICM   @09,15,CCAVFWDP(CCARFWAD)                           0052 00129000
         CR    ISTQAPTR,@09                                        0052 00130000
         BNE   @RF00052                                            0052 00131000
*                   CCARPVCB=CCARQELM;/* YES,PVCB=Q ELM              */ 00132000
*                 ELSE                                             0054 00133000
*                   DO;                                            0054 00134000
         B     @RC00052                                            0054 00135000
@RF00052 DS    0H                                                  0055 00136000
*                     CCARQELM=CCAVFWDP;/* GET NEXT CB               */ 00137000
         ICM   CCARQELM,15,CCAVFWDP(CCARFWAD)                      0055 00138000
*                     GOTO CCALLOOP;/* LOOP TO SEARCH Q              */ 00139000
         B     CCALLOOP                                            0056 00140000
*                   END;                                           0057 00141000
*               END;                                               0058 00142000
@RC00052 DS    0H                                                  0059 00143000
*           END CCALPRTQ;           /* END OF PRTY CASE              */ 00144000
@RC00045 DS    0H                                                  0060 00145000
*       CALL CCAPADCB;              /* CALL CHAIN CB ROUTINE         */ 00146000
@RC00039 DS    0H                                                  0060 00147000
@RC00037 BAL   @14,CCAPADCB                                        0060 00148000
*     END CCALQNEM;                                                0061 00149000
*   QABCT=QABCT+1;                  /* INCREMENT COUNT IN QAB        */ 00150000
@RC00027 LA    @09,1                                               0062 00151000
         AH    @09,QABCT(,ISTQAPTR)                                0062 00152000
         STH   @09,QABCT(,ISTQAPTR)                                0062 00153000
*   RETURN CODE(0);                 /* SET RC FOR SUCCESSFUL ADD     */ 00154000
         SLR   @15,@15                                             0063 00155000
         L     @14,12(,@13)                                        0063 00156000
         LM    @00,@12,20(@13)                                     0063 00157000
         BR    @14                                                 0063 00158000
*CCAPADCB:                                                         0064 00159000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0064 00160000
*                                                                  0064 00161000
CCAPADCB DS    0H                                                  0065 00162000
*/*                                                                  */ 00163000
*/*  FUNCTION : THIS SUBROUTINE CHAINS A CONTROL BLOCK TO THE QUEUE  */ 00164000
*/*                                                                  */ 00165000
*/*  INPUT : R2 - POINTER TO QAB                                     */ 00166000
*/*          R3 - POINTER TO CONTROL BLOCK TO BE ADDED(INPUT CB)     */ 00167000
*/*          R4 - POINTER TO PREVIOUS CONTROL BLOCK                  */ 00168000
*/*                                                                  */ 00169000
*/*  OUTPUT : NONE                                                   */ 00170000
*/*                                                                  */ 00171000
*                                                                  0065 00172000
*   CCARBKAD=PFXPTR+QABBCKDS;       /* GET BCKPTR LOC OF INPUT CB    */ 00173000
         LR    CCARBKAD,PFXPTR                                     0065 00174000
         AH    CCARBKAD,QABBCKDS(,ISTQAPTR)                        0065 00175000
*   CCAVBCKP=CCARPVCB;              /* SET INPUT CB BCKPTR=PREVCB    */ 00176000
         STCM  CCARPVCB,15,CCAVBCKP(CCARBKAD)                      0066 00177000
*/* IF FORWARD PTR OF PREVIOUS CB=QAB PTR,THEN PREVIOUS CB IS LAST   */ 00178000
*/* CONTROL BLOCK OF QUEUE. INPUT CB IS TO BE ADDED AT BOTTOM OF Q   */ 00179000
*                                                                  0067 00180000
*   CCARFWAD=CCARPVCB+QABFWDDS;     /* GET FWDPTR IN PREVIOUS CB     */ 00181000
         LR    CCARFWAD,CCARPVCB                                   0067 00182000
         AH    CCARFWAD,QABFWDDS(,ISTQAPTR)                        0067 00183000
*   IF CCAVFWDP=ISTQAPTR            /* PREVCB FWDPTR=QAB ADDR?       */ 00184000
*     THEN                                                         0068 00185000
         ICM   @09,15,CCAVFWDP(CCARFWAD)                           0068 00186000
         CR    ISTQAPTR,@09                                        0068 00187000
         BNE   @RF00068                                            0068 00188000
*     QABLAST=PFXPTR;               /* YES,ADD CB AS LAST ELM        */ 00189000
         ST    PFXPTR,QABLAST(,ISTQAPTR)                           0069 00190000
*   ELSE                            /* NO,IT IS NOT FIFO             */ 00191000
*     DO;                                                          0070 00192000
         B     @RC00068                                            0070 00193000
@RF00068 DS    0H                                                  0071 00194000
*       CCARNXCB=CCAVFWDP;          /* NEXTCB PTR=PREVCB FWDPTR      */ 00195000
         ICM   CCARNXCB,15,CCAVFWDP(CCARFWAD)                      0071 00196000
*       CCARBKAD=CCARNXCB+QABBCKDS; /* GET NEXT CB BCKPTR LOC        */ 00197000
         LR    CCARBKAD,CCARNXCB                                   0072 00198000
         AH    CCARBKAD,QABBCKDS(,ISTQAPTR)                        0072 00199000
*       CCAVBCKP=PFXPTR;            /* NEXTCB BCKPTR=INPUT CBAD      */ 00200000
         STCM  PFXPTR,15,CCAVBCKP(CCARBKAD)                        0073 00201000
*     END;                                                         0074 00202000
*                                                                  0074 00203000
*/* IF PREVCB IS QAB,THEN INPUT CB IS TO BE ADDED ON TOP OF THE Q    */ 00204000
*                                                                  0075 00205000
*   IF CCARPVCB=ISTQAPTR            /* PREVIOUS CB=QAB ?             */ 00206000
*     THEN                          /* YES,ADD CB AS 1ST BK OF Q     */ 00207000
@RC00068 CR    CCARPVCB,ISTQAPTR                                   0075 00208000
         BNE   @RF00075                                            0075 00209000
*     DO;                                                          0076 00210000
*       CCARFWAD=PFXPTR+QABFWDDS;   /* GET INPUT CB FWDPTR LOC       */ 00211000
         LR    CCARFWAD,PFXPTR                                     0077 00212000
         AH    CCARFWAD,QABFWDDS(,ISTQAPTR)                        0077 00213000
*       CCAVFWDP=QABFIRST;          /* SET FWD PTR OF INPUT CB       */ 00214000
         MVC   CCAVFWDP(4,CCARFWAD),QABFIRST(ISTQAPTR)             0078 00215000
*       QABFIRST=PFXPTR;            /* QABFIRST PTS TO INPUT CB      */ 00216000
         ST    PFXPTR,QABFIRST(,ISTQAPTR)                          0079 00217000
*     END;                                                         0080 00218000
*   ELSE                            /* CB IS NOT ADDED ON TOP OF Q   */ 00219000
*     DO;                                                          0081 00220000
         B     @RC00075                                            0081 00221000
@RF00075 DS    0H                                                  0082 00222000
*       CCARFWAD=CCARPVCB+QABFWDDS; /* GET PREVCB FWDPTR LOC         */ 00223000
         LH    @09,QABFWDDS(,ISTQAPTR)                             0082 00224000
         LR    CCARFWAD,CCARPVCB                                   0082 00225000
         ALR   CCARFWAD,@09                                        0082 00226000
*       CCARNXCB=CCAVFWDP;          /* NEXT CB=PREVCB FWDPTR         */ 00227000
         ICM   CCARNXCB,15,CCAVFWDP(CCARFWAD)                      0083 00228000
*       CCAVFWDP=PFXPTR;            /* PREVCB FWD PTR=INPUT CB       */ 00229000
         STCM  PFXPTR,15,CCAVFWDP(CCARFWAD)                        0084 00230000
*       CCARFWAD=PFXPTR+QABFWDDS;   /* GET INPUT CB FWDPTR LOC       */ 00231000
         ALR   @09,PFXPTR                                          0085 00232000
         LR    CCARFWAD,@09                                        0085 00233000
*       CCAVFWDP=CCARNXCB;          /* NEW CB FWDPTR PTRS TO NEXT    */ 00234000
         STCM  CCARNXCB,15,CCAVFWDP(CCARFWAD)                      0086 00235000
*     END;                          /* CB                            */ 00236000
*   END CCAPADCB;                   /* END OF SUBROUTINE ADDCB       */ 00237000
@EL00002 DS    0H                                                  0088 00238000
@EF00002 DS    0H                                                  0088 00239000
@ER00002 BR    @14                                                 0088 00240000
*   DO;                             /* TPEPILOG                      */ 00241000
*     GEN(PRINT OFF);                                              0090 00242000
         PRINT OFF                                                      00243000
*     GEN(PRINT ON);                                               0091 00244000
         PRINT ON                                                       00245000
*   END;                            /* TPEPILOG                      */ 00246000
*   END ISTRACCA;                   /* END OF ADD PROCEDURE          */ 00247000
@EL00001 DS    0H                                                  0093 00248000
@EF00001 DS    0H                                                  0093 00249000
@ER00001 LM    @14,@12,12(@13)                                     0093 00250000
         BR    @14                                                 0093 00251000
@DATA    DS    0H                                                       00252000
@DATD    DSECT                                                          00253000
         DS    0F                                                       00254000
ISTRACCA CSECT                                                          00255000
         DS    0F                                                       00256000
@DATD    DSECT                                                          00257000
         DS    0D                                                       00258000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                00259000
@ENDDATD EQU   *                                                        00260000
ISTRACCA CSECT                                                          00261000
         DS    0F                                                       00262000
@SIZDATD DC    AL1(0)                                                   00263000
         DC    AL3(@ENDDATD-@DATD)                                      00264000
         DS    0D                                                       00265000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       00266000
@01      EQU   01                                                       00267000
@02      EQU   02                                                       00268000
@03      EQU   03                                                       00269000
@04      EQU   04                                                       00270000
@05      EQU   05                                                       00271000
@06      EQU   06                                                       00272000
@07      EQU   07                                                       00273000
@08      EQU   08                                                       00274000
@09      EQU   09                                                       00275000
@10      EQU   10                                                       00276000
@11      EQU   11                                                       00277000
@12      EQU   12                                                       00278000
@13      EQU   13                                                       00279000
@14      EQU   14                                                       00280000
@15      EQU   15                                                       00281000
CCARPLST EQU   @01                                                      00282000
ISTQAPTR EQU   @02                                                      00283000
PFXPTR   EQU   @03                                                      00284000
CCARPVCB EQU   @04                                                      00285000
CCARQELM EQU   @04                                                      00286000
PTYDSREG EQU   @08                                                      00287000
CCARBKAD EQU   @06                                                      00288000
CCARFWAD EQU   @06                                                      00289000
CCARNXCB EQU   @05                                                      00290000
ISTPFX   EQU   0                                                        00291000
PFXID    EQU   ISTPFX                                                   00292000
ISTQAB   EQU   0                                                        00293000
QABCT    EQU   ISTQAB+4                                                 00294000
QABFIRST EQU   ISTQAB+8                                                 00295000
QABLAST  EQU   ISTQAB+12                                                00296000
QABATTR  EQU   ISTQAB+16                                                00297000
QABATTR2 EQU   QABATTR+1                                                00298000
QABLIFO  EQU   QABATTR2                                                 00299000
QABFIFO  EQU   QABATTR2                                                 00300000
QABPTYDS EQU   ISTQAB+18                                                00301000
QABFWDDS EQU   ISTQAB+20                                                00302000
QABBCKDS EQU   ISTQAB+22                                                00303000
CCAVPLST EQU   0                                                        00304000
CCAVPQAB EQU   CCAVPLST                                                 00305000
CCAVCBAD EQU   CCAVPLST+4                                               00306000
CCAVCBPA EQU   0                                                        00307000
CCAVCBPB EQU   0                                                        00308000
CCAVFWDP EQU   0                                                        00309000
CCAVBCKP EQU   0                                                        00310000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    00311000
@NM00006 EQU   QABATTR2                                                 00312000
@NM00005 EQU   QABATTR2                                                 00313000
@NM00004 EQU   QABATTR2                                                 00314000
@NM00003 EQU   QABATTR2                                                 00315000
QABPRTY  EQU   QABATTR2                                                 00316000
@NM00002 EQU   QABATTR2                                                 00317000
QABATTR1 EQU   QABATTR                                                  00318000
@NM00001 EQU   ISTQAB+6                                                 00319000
QABID    EQU   ISTQAB                                                   00320000
PFXBCK   EQU   ISTPFX+12                                                00321000
PFXFWD   EQU   ISTPFX+8                                                 00322000
PFXLNG   EQU   ISTPFX+5                                                 00323000
PFXPRTY  EQU   ISTPFX+4                                                 00324000
PFXCBID  EQU   PFXID                                                    00325000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      00326000
@RC00075 EQU   @EL00002                                                 00327000
@ENDDATA EQU   *                                                        00328000
         END   ISTRACCA,(C'PLS0854',0702,78337)                         00329000
