ACCT     TITLE 'HASP SMF INTERFACE ROUTINE'                    @OZ18212 21002000
*********************************************************************** 21004000
*                                                                     * 21006000
* MODULE NAME = HASPACCT                                              * 21008000
*                                                                     * 21010000
* DESCRIPTIVE NAME = HASPACCT                                         * 21012000
*                                                                     * 21014000
* COPYRIGHT = NONE                                                    * 21016100
*                                                                     * 21018000
* STATUS = OS/VS2 MVS   --  SEE &VERSION (BELOW) FOR JES2 LEVEL       * 21020000
*                                                                     * 21022000
* FUNCTION = THE HASPACCT ROUTINE IS A SUBTASK OF JES2 WHICH WRITES   * 21024000
*            SMF RECORDS, POINTED TO BY $SMFBUSY, USING SVC 83.       * 21026000
*            IF THE HASP SMF BUFFER CONTAINS A JMR (JOB LOG, OR       * 21028000
*            COMMON EXIT PARAMETER LIST), THEN THE ROUTINE BRANCHES   * 21030000
*            TO THE IEFUJP CSECT, THEN WRITES THE TYPE 26 RECORD      * 21032000
*            ONLY IF THE RETURN CODE SO INDICATES.  HASPACCT PUTS     * 21034000
*            FREED HASP SMF BUFFERS ON THE $SMFFREE QUEUE AND         * 21036000
*            CONTINUES PROCESSING BUFFERS UNITL THERE ARE NONE LEFT   * 21038000
*            ON THE BUSY QUEUE, THEN IT WAITS TO BE POSTED BY JES2.   * 21040000
*                                                                     * 21042000
* NOTES = SEE BELOW                                                   * 21044000
*                                                                     * 21046000
*    DEPENDENCIES = SMFWTM MACRO TO WRITE SMF RECORDS TO MAN DATA SET * 21048000
*                                                                     * 21050000
*    RESTRICTIONS = NONE                                              * 21052000
*                                                                     * 21054000
*    REGISTER CONVENTIONS = R1   =         SMF BUFFER ADDRESSABILITY  * 21056000
*                           R3   = WB    = JMR BUFFER ADDRESS         * 21058000
*                           R6   = WE    = SMF BUFFER ADDRESS         * 21060000
*                           R11  = BASE1 = HCT ADDRESSABILITY         * 21062000
*                           R12  = BASE2 = HASPACCT BASE REGISTER     * 21064000
*                           R13  = SAVE  = SAVE AREA                  * 21066000
*                           R14  = LINK  = RETURN ADDRESS             * 21068000
*                           R15  =         ENTRY POINT                * 21070000
*                                                                     * 21072000
*    PATCH LABEL = NONE                                               * 21074000
*                                                                     * 21076000
* MODULE TYPE = PROCEDURE ( CSECT TYPE )                              * 21078000
*                                                                     * 21080000
*    PROCESSOR = ASSEMBLER F                                          * 21082000
*                                                                     * 21084000
*    MODULE SIZE = SEE $DLENGTH MACRO EXPANSION(S) AT END OF ASSEMBLY * 21086000
*                                                                     * 21090000
*    ATTRIBUTES = READ ONLY, SERIALLY REUSABLE                        * 21092000
*                                                                     * 21094000
* ENTRY POINT = HASPACCT                                              * 21096000
*                                                                     * 21098000
*    PURPOSE = SEE FUNCTION                                           * 21100000
*                                                                     * 21102000
*    LINKAGE = R1  = ADDRESS HASP ECB (AT INITIAL ENTRY)              * 21104000
*              R13 = CALLERS SAVE AREA                                * 21106000
*              R14 = RETURN ADDRESS                                   * 21108000
*              R15 = ENTRY POINT                                      * 21110000
*                                                                     * 21112000
* INPUT = AT INITIAL ENTRY, HASP ECB TO BE POSTED, SUBSEQUENTLY       * 21114000
*         $SMFBUSY CELL IN HCT AS POINTER TO SMF RECORDS              * 21116000
*                                                                     * 21118000
* OUTPUT = SMFWTM TO WRITE HASP SMF RECORDS AND ADDING FREE SMF       * 21120000
*          BUFFERS TO $SMFFREE CELL IN HCT.                           * 21122000
*                                                                     * 21124000
* EXIT-NORMAL = RETURN TO CALLER USING RETURN MACRO                   * 21126000
*                                                                     * 21128000
* EXIT-ERROR = NONE                                                   * 21130000
*                                                                     * 21132000
* EXTERNAL REFERENCES = SEE BELOW                                     * 21134000
*                                                                     * 21136000
*    ROUTINES = NONE                                                  * 21138000
*                                                                     * 21140000
*    DATA AREAS = SEE BELOW                                           * 21142000
*                                                                     * 21144000
*    CONTROL BLOCKS = SEE $HASPCB MACRO EXPANSION                     * 21146000
*                                                                     * 21148000
* TABLES = SEE BELOW                                                  * 21150000
*                                                                     * 21152000
* MACROS = POST, NULL, RETURN, WAIT, SMFWTM, $$POST, $DLENGTH         * 21154000
*                                                                     * 21156000
* CHANGE ACTIVITY                                                     * 21158000
*                                                                     * 21158100
*     RELEASE 4.0 = NONE                                              * 21158300
*                                                                     * 21158400
*     RELEASE 4.1 = NONE                                              * 21158500
*                                                                     * 21160000
*********************************************************************** 21162000
         TITLE 'HASP CONTROL BLOCK GENERATION MACRO'                    21164000
*                                                                       21166000
*****    $HASPCB   *****           GENERATE HASP CONTROL BLOCKS         21168000
*                                                                       21170000
         SPACE 1                                                        21172000
         MACRO                                                          21174000
         $HASPCB &DOC=NO,&LIST=NO                                       21176000
         GBLC  &PRINT,&GEN,&DATA                                        21178000
         PUSH  PRINT                                                    21180000
         PRINT &PRINT                                                   21182000
         $SVT  DOC=&DOC            GENERATE HASP SSVT DSECT             21188000
         $HCT  DOC=&DOC            GENERATE HASP HCT DSECT              21190000
         $BUFFER DOC=&DOC          GENERATE HASP BUFFER DSECT           21192000
         $SMF  DOC=&DOC            GENERATE HASP SMF DSECT              21194000
         $JCT  DOC=&DOC            GENERATE HASP JCT DSECT              21196000
         SPACE 1                                                        21198000
         POP   PRINT                                                    21200000
         PRINT &GEN,&DATA          SET ASSEMBLY PRINT OPTIONS           21202000
         MEND                                                           21204000
         TITLE 'HASP ACCOUNTING ROUTINE'                                21210000
         SPACE 5                                                        21212000
HASPACCT START 0                   HASP ACCOUNTING ROUTINE              21214000
         SPACE 5                                                        21216000
         COPY  $HASPGEN            COPY HASPGEN PARAMETERS              21218000
         TITLE 'HASP ACCOUNTING ROUTINE'                                21222000
         SPACE 5                                                        21224000
HASPACCT $ENTRY CSECT=YES,BASE=R15 PROVIDE PROCESSOR ENTRY POINT        21226000
         DROP  R15                 KILL ENTRY ADDRESSABILITY            21228000
         SPACE 5                                                        21230000
*                                                                       21232000
*                             DOCUMENTATION OPTIONS FOR THIS ASSEMBLY   21234000
*                                                                       21236000
         SPACE 3                                                        21238000
        $SYSPARM (OFF,GEN,NODATA,NO,NO)                                 21240000
         SPACE 5                                                        21242000
*                                                                       21244000
*                             GENERATE HASP CONTROL BLOCKS              21246000
*                                                                       21248000
         SPACE 3                                                        21250000
        $HASPCB DOC=&DOC,LIST=&LIST  GENERATE HASP CONTROL BLOCKS       21252000
         TITLE 'HASP ACCOUNTING ROUTINE FOR SMF'                        21254000
ABEGIN   STM   R14,R12,12(R13)     SAVE REGISTERS                       21258000
         BALR  BASE2,0             ESTABLISH BASE                       21260000
         USING *,BASE2                                                  21262000
         LR    BASE1,R1            RELOAD HCT ADDRESS                R4 21263000
         USING SMFDSECT,R1         SMF BUFFER ADDRESSABILITY            21264000
         GETMAIN R,LV=20*4         GET SAVE AREA                     R4 21265000
         ST    R13,4(,R1)          STORE BACKWARD POINTER            R4 21266000
         LR    WC,R13                                                   21268000
         LR    R13,R1              ADDRESS MY SAVE AREA              R4 21270000
         USING ASVDSECT,R13        PROVIDE SAVE AREA ADDRESSABILITY  R4 21271000
         ST    R13,8(WC)           STORE FORWARD POINTER                21272000
         POST  $PSMFECB            POST HASP INITIALIZATION          R4 21276000
         B     AWAIT               WAIT FOR HASP POST FOR WORK          21278000
AENDQ    NULL  END OF $SMFBUSY QUEUE                                    21280000
         TM    $STATUS,$SYSEXIT    TEST FOR WITHDRAWAL OF HASP          21282000
         BZ    AWAIT               NO                                   21284000
         L     R13,ASAVAREA+4      RETURN AFTER $PHASP COMMAND          21286000
         RETURN (14,12),RC=0                                            21288000
AWAIT    LA    R1,$ACCTECB         WAIT TO BE POSTED FOR WORK BY HASP   21290000
         WAIT  ECB=(1)                                                  21292000
         XC    $ACCTECB,$ACCTECB   RESET POST ECB                       21294000
*    REMOVE A SMF BUFFER FROM $SMFBUSY                                  21296000
AFREESMF NULL                                                           21298000
* REMOVE SMF BUFFER FROM END OF $SMFBUSY CHAIN                          21300000
         SR    WB,WB               ZERO JMR BUF. ADDR REGISTER          21302000
ARECYCLE C     WB,$SMFBUSY         IS THE BUSY CHAIN EMPTY              21304000
         BZ    AENDQ               YES                                  21306000
         LA    R1,$SMFBUSY         ADDRESS OF BUFFERS QUEUED            21308000
ARETRY   LR    WA,R1               SAVE POINTER TO PREVIOUS BUFFER      21310000
         L     R1,SMFCHAIN         GET NEXT BUFFER ON CHAIN             21312000
         C     WB,SMFCHAIN         IS THIS THE END OF THE CHAIN         21314000
         BNE   ARETRY              NO                                   21316000
         CS    R1,WB,0(WA)         UPDATE CHAIN POINTER                 21318000
         BNE   ARECYCLE            IF CHAIN CHANGED, RETRY SEARCH       21320000
         LR    WE,R1               SAVE FOR AUNQSMF                     21322000
         CLI   SMFTYPE,SMFJMRTP    IS BUFFER JMR                        21324000
         BNE   AWRITSMF            NO                                   21326000
         MVI   SMFTYPE,SMFRECTP    REINITIALIZE SMFTYPE                 21328000
         LR    WB,R1               SAVE R1 ADDR FOR AUNQSMF             21330000
         L     WE,JMRCHAIN         SAVE PURGE RECORD PTR. FOR AUNQ      21332000
         LA    WD,SMFJMR           SET UP ADDR OF JMR                   21334000
         ST    WD,APRGPARM         PUT ADDR INTO PARMLIST FOR IEFUJP    21336000
         LA    R1,SMFRDW-SMFDSECT(WE)   BEGINNING OF PURGE RECORD       21338000
         ST    R1,APRGREC          PUT ADDR PURGE RECORD IN PARMLIST    21340000
         LA    R1,APRGPARM         PUT ADDR. OF PARM. LIST IN R1        21342000
         L     R15,$SSVT           ADDRESS OF SSVT                      21344000
         USING SSVT,R15            $SSVT ADDRESSABILITY                 21346000
         L     R15,$SVSMFJP        ADDRESS OF IEFUJP                    21348000
         DROP  R15                 DROP SSVT ADDRESSABILITY             21350000
         BALR  LINK,R15            CALL IEFUJP                          21352000
         C     R15,=F'4'           WRITE SMF RECORD                     21354000
         BE    AUNQSMF             NO                                   21356000
         LR    R1,WE               SET UP SMF RECORD ADDR. IN R1        21358000
AWRITSMF TM    SMF26FLG,SMFNO26    SHOULD RECORD BE WRITTEN             21360000
         BO    AUNQSMF             NO                                   21362000
         LA    R1,SMFRDW-SMFDSECT(R1)   DISP. OF RECORD IN SMF BUF      21364000
         SMFWTM (1)                WRITE SMF RECORD                     21366000
AUNQSMF  NULL                      RETURN BUFFERS TO $SMFFREE           21368000
         LR    R1,WE               GET SMF RECORD BUFFER ADDRESS        21370000
         NI    SMF26FLG,X'FE'      TURN OFF ANY NO WRITE INDICATOR      21372000
* PLACE SMF BUFFER(S) ON BEGINNING OF $SMFFREE CHAIN                    21374000
         L     WD,$SMFFREE         SAVE $SMFFREE FOR POST               21376000
AFREBUF  ST    WD,SMFCHAIN         RETURN SMF RECORD BUFFER TO          21378000
         CS    WD,R1,$SMFFREE         FREE CHAIN                        21380000
         BNE   AFREBUF             IF CHAIN CHANGED, RETRY STORE        21382000
         LTR   WB,WB               IS THERE A JMR BUFFER TO BE FREED    21384000
         BZ    APOST               NO                                   21386000
         LR    R1,WB                                                    21388000
         L     WA,$SMFFREE         RETURN JMR BUFFER TO FREE CHAIN      21390000
AFREJMR  ST    WA,SMFCHAIN         UPDATE POINTER                       21392000
         CS    WA,R1,$SMFFREE      UPDATE $SMFFREE                      21394000
         BNE   AFREJMR             IF CHAIN CHANGED, RETRY STORE        21396000
APOST    NULL                                                           21398000
         LTR   WD,WD               WAS $SMFFREE EMPTY$                  21400000
         BNZ   AFREESMF            GO CHECK FOR MORE WORK               21402000
        $$POST TYPE=SMF,R11=HCT    $$POST HASP FOR SMF                  21404000
         B     AFREESMF            GO CHECK FOR MORE WORK               21406000
         EJECT                                                       R4 21406500
ASVDSECT DSECT                     SAVE AREA DSECT                   R4 21407000
ASAVAREA DS    18F                 SAVE AREA                            21408000
*    THE FOLLOWING PARAMETER LIST IS POINTED TO IN R1 WHEN IEFUJP       21410000
*    IS CALLED- IT POINTS TO THE EXIT PARAMETER LIST(JMR)&PURGE RECORD  21412000
APRGPARM DS    F                   POINTER TO JMR DATA(JOB LOG)         21414000
APRGREC  DS    F                   POINTER TO RDW FOR PURGE REC.        21416000
HASPACCT CSECT                     END OF SAVE AREA DSECT            R4 21417000
         LTORG                                                          21418000
$DLENGTH $DLENGTH                  COMPUTE CONTROL SECTION LENGTH       21420000
APARNUM  DC    CL5'32566'          APAR NUMBER                          21440498
         END                                                            21440500
