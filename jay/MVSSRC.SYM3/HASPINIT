INIT     TITLE 'HASP INITIALIZATION -- PROLOG'                          40000500
*********************************************************************** 40001000
*                                                                     * 40001500
* MODULE NAME = HASJES20 ( HASPINIT CSECT )                           * 40002000
*                                                                     * 40002500
* DESCRIPTIVE NAME = HASPINIT CSECT OF JES2 MAIN MODULE               * 40003000
*                                                                     * 40003500
* COPYRIGHT = NONE                                                    * 40004100
*                                                                     * 40004700
* STATUS = OS/VS2 MVS   --  SEE &VERSION (BELOW) FOR JES2 LEVEL       * 40005000
*                                                                     * 40005500
* FUNCTION = THE HASPINIT CSECT INITIALIZES THE JES2 SUBSYSTEM AND    * 40006000
*            SUBSYSTEM INTERFACES AND RETURNS CONTROL TO HASPNUC.     * 40006500
*            THE FUNCTIONS OF THIS MODULE ARE AS FOLLOWS --           * 40007000
*                                                                     * 40007500
*              1.  TO OBTAIN THE INITIALIZATION OPTIONS FROM THE      * 40008000
*                  OPERATOR OR FROM THE PARM PARAMETER ON THE EXEC    * 40008500
*                  CARD AND CONVERT THE OPTIONS SPECIFIED INTO STATUS * 40009000
*                  BITS.                                              * 40009500
*                                                                     * 40010000
*              2.  TO READ AND PROCESS THE JES2 INITIALIZATION        * 40010500
*                  PARAMETER DATA SET.                                * 40011000
*                                                                     * 40011500
*              3.  TO SCAN THE DIRECT ACCESS DEVICES AND TO IDENTIFY  * 40012000
*                  AND ALLOCATE THE ELIGIBLE SPOOLING VOLUMES.        * 40012500
*                                                                     * 40013000
*              4.  TO EXAMINE AND INITIALIZE THE SPOOLING VOLUMES     * 40013500
*                  FOR JES2 PROCESSING.                               * 40014000
*                                                                     * 40014500
*              5.  TO CONSTRUCT AND INITIALIZE THE SUBSYSTEM INTER-   * 40015000
*                  FACE CONTROL BLOCKS, SUCH AS THE SSCT AND SSVT.    * 40015500
*                                                                     * 40016000
*              6.  TO SCAN THE UNIT RECORD DEVICES AND REMOTE JOB     * 40016500
*                  ENTRY LINES, AND TO LOCATE AND ALLOCATE THE        * 40017000
*                  ELIGIBLE AND/OR SPECIFIED DEVICES TO JES2.         * 40017500
*                                                                     * 40018000
*              7.  TO ATTACH THE JES2 SUB-TASKS, AND TO LOCATE THE    * 40018500
*                  EXIT ROUTINES.                                     * 40019000
*                                                                     * 40019500
*              8.  TO INITIATE SMF PROCESSING BY GENERATING A TYPE 47 * 40020000
*                  SMF RECORD.                                        * 40020500
*                                                                     * 40021000
*              9.  TO CREATE, OR OBTAIN FROM SPOOL, THE JES2 JOB      * 40021500
*                  QUEUE AND JOB OUTPUT TABLE.                        * 40022000
*                                                                     * 40022500
*             10.  TO CONSTRUCT AND/OR INITIALIZE THE JES2 CONTROL    * 40023000
*                  BLOCKS, SUCH AS THE HCT, THE DCT'S, THE DCB'S, THE * 40023500
*                  DEB'S, THE BUFFERS, ETC.                           * 40024000
*                                                                     * 40024500
*                                                                     * 40025000
*                                                                     * 40025500
*                                                                     * 40026000
*                                                                     * 40026500
*                                                                     * 40027000
*                                                                     * 40027500
* NOTES = SEE BELOW                                                   * 40028000
*                                                                     * 40028500
*    DEPENDENCIES = EXCP ACCESS METHOD                                * 40029000
*                   DYNAMIC ALLOCATION                                * 40029500
*                   DIRECT-ACCESS DEVICE SPACE MANAGEMENT             * 40030000
*                   MVS SUBSYSTEM INTERFACES                          * 40030500
*                   MISCELLANEOUS STANDARD SUPERVISOR SERVICES        * 40031000
*                                                                     * 40031500
*    RESTRICTIONS = NONE                                              * 40032000
*                                                                     * 40032500
*    REGISTER CONVENTIONS = R0          = WORK REGISTER               * 40033000
*                           R1          = WORK REGISTER               * 40033500
*                           R2  = WA    = WORK REGISTER               * 40034000
*                           R3  = WB    = WORK REGISTER               * 40034500
*                           R4  = WC    = WORK REGISTER               * 40035000
*                           R5  = WD    = WORK REGISTER               * 40035500
*                           R6  = WE    = WORK REGISTER               * 40036000
*                           R7  = WF    = WORK REGISTER               * 40036500
*                           R8  = BASE3 = BASE/WORK REGISTER          * 40037000
*                           R9          = UNUSED                      * 40037500
*                           R10 = JCT   = WORK REGISTER               * 40038000
*                           R11 = BASE1 = ADDRESS OF HCT              * 40038500
*                           R12 = BASE2 = LOCAL ADDRESSABILITY        * 40039000
*                           R13 = SAVE  = ADDRESS OF SAVE AREA        * 40039500
*                           R14 = LINK  = LINK REGISTER               * 40040000
*                           R15         = WORK REGISTER               * 40040500
*                                                                     * 40041000
*    PATCH LABEL = NONE                                               * 40041500
*                                                                     * 40042000
* MODULE TYPE = PROCEDURE, TABLE ( CSECT TYPE )                       * 40042500
*                                                                     * 40043000
*    PROCESSOR = ASSEMBLER F                                          * 40043500
*                                                                     * 40044000
*    MODULE SIZE = SEE $DLENGTH MACRO EXPANSION(S) AT END OF ASSEMBLY * 40044500
*                                                                     * 40045000
*    ATTRIBUTES = NOT REUSABLE                                        * 40045500
*                                                                     * 40046000
* ENTRY POINT = HASPINIT                                              * 40046500
*                                                                     * 40047000
*    PURPOSE = SEE FUNCTION                                           * 40047500
*                                                                     * 40048000
*    LINKAGE = STANDARD OS/VS PROGRAM LINKAGE                         * 40048500
*                                                                     * 40049000
* INPUT = R1  = ADDRESS OF JCL EXEC CARD PARAMETER CONTROL BLOCK      * 40049500
*         R13 = ADDRESS OF SAVE AREA                                  * 40050000
*         R14 = RETURN ADDRESS                                        * 40050500
*         R15 = ADDRESS OF ENTRY POINT                                * 40051000
*                                                                     * 40051500
* OUTPUT = SEE EXIT                                                   * 40052000
*                                                                     * 40052500
*                                                                     * 40053000
*                                                                     * 40053500
*                                                                     * 40054000
*                                                                     * 40054500
* EXIT-NORMAL = RETURN TO CALLER (HASPNUC)                            * 40055000
*                                                                     * 40055500
* EXIT-ERROR = TO SYSTEM VIA BACK CHAINING SAVE AREAS WITH ALL        * 40056000
*              REGISTERS RESTORED TO ORIGINAL ENTRY VALUES            * 40056500
*              EXCEPT R15 WHICH CONTAINS A COMPLETION CODE OF 20      * 40057000
*                                                                     * 40057500
* EXTERNAL REFERENCES = SEE BELOW                                     * 40058000
*                                                                     * 40058500
*    ROUTINES = EXCP, DYNAMIC ALLOCATE, OBTAIN, WTO/WTOR, GETMAIN,    * 40059000
*               MISCELLANEOUS JES2 SERVICE ROUTINES IN HASPNUC, AND   * 40059500
*               MISCELLANEOUS STANDARD SUPERVISOR SERVICE ROUTINES    * 40060000
*                                                                     * 40060500
*    DATA AREAS = SEE $HASPCB MACRO EXPANSION                         * 40061000
*                                                                     * 40061500
*    CONTROL BLOCKS = SEE $HASPCB MACRO EXPANSION                     * 40062000
*                                                                     * 40062500
* TABLES = NONE                                                       * 40063000
*                                                                     * 40063500
* MACROS = SEE $HASPCB MACRO FOR CONTROL BLOCK MACROS USED            * 40064000
*                                                                     * 40064100
* CHANGE ACTIVITY                                                     * 40064200
*                                                                     * 40064300
*     RELEASE 4.0 = OZ00577,OZ02406,OZ03313,OZ03316,OZ04304,OZ04327,  * 40064500
*                   OZ04328,OZ04336,OZ04987,OZ05760,OZ06759,OZ07455,  * 40064600
*                   OZ09023,OZ09027,OZ09068                           * 40064700
*                                                                     * 40064800
*     RELEASE 4.1 = OZ10378,OZ11752,OZ11782,OZ11798,OZ11799,OZ11802,  * 40064900
*                   OZ12290,OZ12303,OZ13249,OZ14428,OZ14890,OZ14903,  * 40065000
*                   OZ15293,OZ15839                                   * 40065100
*                                                                     * 40066500
*********************************************************************** 40067000
         TITLE 'HASP INITIALIZATION -- CONTROL BLOCK GENERATION MACRO DC40067500
               EFINITIONS'                                              40068000
*                                                                       40068500
***** $HASPCB *****           GENERATE HASP CONTROL BLOCKS              40069000
*                                                                       40069500
         MACRO                                                          40070000
         $HASPCB &DOC=NO,&LIST=NO                                       40070500
         GBLC  &PRINT,&GEN,&DATA                                        40071000
         PUSH  PRINT                                                    40071500
         PRINT &PRINT                                                   40072000
         $PSA  LIST=&LIST          GENERATE OS PSA DSECT                40072500
         $CVT  LIST=&LIST          GENERATE OS CVT DSECT                40073000
         $JESCT LIST=&LIST         GENERATE OS JESCT DSECT              40073500
         $SSCT LIST=&LIST          GENERATE OS SSCT DSECT               40074000
         $SSIB LIST=&LIST          GENERATE OS SSIB DSECT               40074500
         $ASCB LIST=&LIST          GENERATE OS ASCB DSECT               40075000
         $ASVT LIST=&LIST          GENERATE OS ASVT DSECT               40075500
         $SRB  LIST=&LIST          GENERATE OS SRB DSECT                40076000
         $TCB  LIST=&LIST          GENERATE OS TCB DSECT                40076500
         $JSCB LIST=&LIST          GENERATE OS JSCB DSECT               40077000
         $DCB  LIST=&LIST          GENERATE OS DCB DSECT                40077500
         $DEB  LIST=&LIST          GENERATE OS DEB DSECT                40078000
         $IOSB LIST=&LIST          GENERATE OS IOSB DSECT               40078500
         $UCB  LIST=&LIST          GENERATE OS UCB DSECT                40079000
         $NEL  LIST=&LIST          GENERATE OS NEL DSECT             R4 40079500
         $UCM  LIST=&LIST          GENERATE OS UCM DSECT                40080000
         $IOCM LIST=&LIST          GENERATE OS IOCM DSECT               40080500
         $ATB  LIST=&LIST          GENERATE OS ATB DSECT                40081000
         $RPL  LIST=&LIST          GENERATE OS RPL DSECT             R4 40082000
         $CPT  DOC=&DOC            GENERATE HASP CPT DSECT          R41 40082100
         $SMCA LIST=&LIST          GENERATE OS SMCA DSECT            R4 40083000
         $TED  DOC=&DOC            GENERATE HASP TED DSECT              40083500
         $TGB  DOC=&DOC            GENERATE HASP TGB DSECT              40084000
         $TGM  DOC=&DOC            GENERATE HASP TGM DSECT              40084500
         $TAB  DOC=&DOC            GENERATE HASP TAB DSECT           R4 40085000
         $PCIE DOC=&DOC            GENERATE HASP PCIE DSECT          R4 40085500
         $SVT  DOC=&DOC            GENERATE HASP SSVT DSECT             40086000
         $HCT  DOC=&DOC            GENERATE HASP HCT DSECT              40086500
         $PCE  DOC=&DOC            GENERATE HASP PCE DSECT              40087000
         $BUFFER DOC=&DOC          GENERATE HASP BUFFER DSECT           40087500
         $BPM  DOC=&DOC            GENERATE HASP BPM DSECT           R4 40088000
         $CMB  DOC=&DOC            GENERATE HASP CMB DSECT              40088500
         $SMF  DOC=&DOC            GENERATE HASP SMF DSECT              40089000
         $JQE  DOC=&DOC            GENERATE HASP JQE DSECT              40089500
         $JOE  DOC=&DOC            GENERATE HASP JOE DSECT              40090000
         $JOT  DOC=&DOC            GENERATE HASP JOT DSECT              40090500
         $QSE  DOC=&DOC            GENERATE HASP QSE DSECT              40091000
         $JQB  DOC=&DOC            GENERATE HASP JQB DSECT              40091500
         $JCT  DOC=&DOC            GENERATE HASP JCT DSECT              40092000
         $PDDB DOC=&DOC            GENERATE HASP PDDB DSECT          R4 40092500
         $IOT  DOC=&DOC            GENERATE HASP IOT DSECT           R4 40093000
         $CAT  DOC=&DOC            GENERATE HASP CAT DSECT              40093500
         $SCAT DOC=&DOC            GENERATE HASP SCAT DSECT             40094000
         $RAT  DOC=&DOC            GENERATE HASP RAT DSECT              40094500
         $RDT  DOC=&DOC            GENERATE HASP RDT DSECT           R4 40095000
         $DCT  DOC=&DOC            GENERATE HASP DCT DSECT              40095500
         $TQE  DOC=&DOC            GENERATE HASP TQE DSECT           R4 40096000
         $CCA  DOC=&DOC            GENERATE HASP CCA DSECT           R4 40096500
         $HQR  DOC=&DOC            GENERATE HASP HQR DSECT           R4 40097000
         $HQT  DOC=&DOC            GENERATE HASP HQT DSECT           R4 40097500
         $PIT  DOC=&DOC            GENERATE HASP PIT DSECT              40098000
         $CSA  DOC=&DOC            GENERATE HASP CSA DSECT           R4 40098500
         $ACT  DOC=&DOC            GENERATE HASP ACT DSECT           R4 40099000
         $FMH  DOC=&DOC                                        @OZ29180 40099100
         $ICE  DOC=&DOC            GENERATE HASP ICE DSECT           R4 40100000
         $SPL  DOC=&DOC            GENERATE HASP SPL DSECT           R4 40104000
         $RDRWORK DOC=&DOC         GENERATE HASP RDRWORK DSECT       R4 40104500
         $CNVWORK DOC=&DOC         GENERATE HASP CNVWORK DSECT       R4 40105000
         $OUTWORK DOC=&DOC         GENERATE HASP OUTWORK DSECT       R4 40105500
         $PPPWORK DOC=&DOC         GENERATE HASP PPPWORK DSECT       R4 40106000
         $COMWORK DOC=&DOC         GENERATE HASP COMWORK DSECT          40106500
         $MLMWORK DOC=&DOC         GENERATE HASP MLMWORK DSECT       R4 40107000
         $RCPWORK DOC=&DOC         GENERATE HASP RCPWORK DSECT       R4 40107500
         $CKPWORK DOC=&DOC         GENERATE HASP CKPWORK DSECT      R41 40107600
         $WARMWRK DOC=&DOC         GENERATE HASP WARMWRK DSECT       R4 40108000
         $COM  DOC=&DOC,LIST=&LIST GENERATE HASP COM DSECT              40111500
         $MODMAP DOC=&DOC          GENERATE HASP MODMAP DSECT        R4 40112000
         $PTE  DOC=&DOC            GENERATE HASP PTE DSECT          R41 40112500
         POP   PRINT                                                R41 40112600
         PRINT &GEN,&DATA          SET ASSEMBLY PRINT OPTIONS       R41 40112700
         MEND                                                       R41 40112800
         EJECT                                                      R41 40112900
*                                                                   R41 40113000
*****    $PTE    *****             MAP PARAMETER TABLE ENTRY        R41 40113100
*                                                                   R41 40113200
*                                                                   R41 40113300
         SPACE 1                                                    R41 40113400
         MACRO                                                      R41 40113500
         $PTE  &DOC=NO                                              R41 40113600
         TITLE 'HASP PARAMETER TABLE ENTRY (PTE) DSECT'             R41 40113700
PTEDSECT DSECT                     PARAMETER TABLE ENTRY DSECT      R41 40113800
PTEKEY   DS    CL8                 KEYWORD                          R41 40113900
PTEKEYLN DS    AL1                 KEYWORD LENGTH                   R41 40114000
PTEFLDLN DS    AL1                 FIELD LENGTH                     R41 40114100
PTEDISPL DS    Y                   FIELD DISPLACEMENT               R41 40114200
PTEFLG1  DS    X                   ENTRY FLAGS                      R41 40114300
PTEPRTN  DS    AL3                 PROCESSING ROUTINE ADDRESS       R41 40114400
PTEFLG2  DS    X                   RESERVED FOR FUTURE USE          R41 40114500
PTEDRTN  DS    AL3                 DISPLAY ROUTINE ADDRESS          R41 40114600
PTELOVAL DS    0H                  LOWER LIMIT / MINIMUM LENGTH     R41 40114700
PTESWNO  DS    B                   BINARY SWITCH 'OFF' INFO         R41 40114800
PTESWYES DS    B                   BINARY SWITCH 'ON'  INFO         R41 40114900
         DS    H                   RESERVED FOR FUTURE USE          R41 40115000
PTEHIVAL DS    F                   UPPER LIMIT / MAXIMUM LENGTH     R41 40115100
PTELENG  EQU   *-PTEDSECT          PARAMETER TABLE ENTRY LENGTH     R41 40115200
&SYSECT  CSECT                     END OF PTE DSECT                 R41 40115300
         SPACE 3                                                    R41 40115400
*                                                                   R41 40115500
*                             PTEFLG1                               R41 40115600
*                                                                   R41 40115700
         SPACE 1                                                    R41 40115800
PTE1SHOW EQU   X'80'               FIELD VALUE IS DISPLAYABLE       R41 40115900
PTE1OPT  EQU   X'40'               ENTRY DEFINES BINARY SWITCH      R41 40116000
PTE1NUM  EQU   X'20'               FIELD VALUE IS NUMERIC           R41 40116100
PTE1CHAR EQU   X'10'               FIELD VALUE IS EBCDIC            R41 40116200
PTE1SUB  EQU   X'08'               STATEMENT CONTAINS SUBPARAMETERS R41 40116300
PTE1RSV5 EQU   X'04'               RESERVED FOR FUTURE USE          R41 40116400
PTE1RSV6 EQU   X'02'               RESERVED FOR FUTURE USE          R41 40116500
PTE1RSV7 EQU   X'01'               RESERVED FOR FUTURE USE          R41 40116600
         MEND                                                       R41 40116700
         TITLE 'HASP INITIALIZATION -- TABLE AND ELEMENT GENERATION MACC40116800
               RO DEFINITIONS'                                      R41 40116900
*                                                                       40117000
***** $SCNTBL *****           GENERATE SCAN TABLE ENTRY                 40117100
*                                                                       40117200
*                                                                       40117300
         MACRO                                                          40117400
&NAME    $SCNTBL &CODE,&MASK,&DISP,&FLAGS,&RTN                 @OZ29180 40117500
         GBLC  &PRINT,&SCNBASE                                          40118000
         LCLC  &KEY                                                     40118500
         AIF   ('&RTN' NE '').EE                               @OZ29180 40118600
         AIF   ('&MASK' NE '').B                                        40119000
         AIF   ('&NAME' EQ '').F                                        40119500
         AIF   ('&PRINT' NE 'OFF').A                                    40120000
         PUSH  PRINT                                                    40120500
         PRINT NOGEN                                                    40121000
.A       ANOP                                                           40121500
&NAME    DS    0F                                                       40122000
&SCNBASE SETC  '&CODE'             SET OUTPUT TABLE BASE                40122500
         MEXIT                                                          40123000
.B       AIF   ('&NAME' EQ '').C                                        40123500
&NAME    DS    0F                                                       40124000
.C       AIF   ('&FLAGS' EQ '').D                                       40124500
&KEY     SETC  '        &CODE'(K'&CODE+1,8)                             40125000
         DC    CL8'&KEY',AL1(&FLAGS,0),AL2(&DISP-&SCNBASE)     @OZ29180 40125500
         DC    AL1(&MASK),AL3(0)                               @OZ29180 40125600
         MEXIT                                                          40126000
.D       AIF   ('&CODE(1)' EQ '').E                                     40126500
&KEY     SETC  '        &CODE(1)'(K'&CODE(1)+1,8)                       40127000
         DC    CL8'&KEY',AL1(NSCFLMSK,0),AL2(&DISP-&SCNBASE)   @OZ29180 40127500
         DC    AL1(&MASK),AL3(0)                               @OZ29180 40127600
.E       AIF   (N'&CODE LE 1).G                                         40128000
&KEY     SETC  '        &CODE(2)'(K'&CODE(2)+1,8)                       40128500
         DC    CL8'&KEY',AL1(NSCFLCOM,0),AL2(&DISP-&SCNBASE)   @OZ29180 40129000
         DC    AL1(&MASK),AL3(0)                               @OZ29180 40129100
         MEXIT                                                          40129500
.EE      ANOP                                                  @OZ29180 40129600
&KEY     SETC  '        &CODE'(K'&CODE+1,8)                    @OZ29180 40129700
         DC    CL8'&KEY',AL1(0,NSCFLRTN),AL3(&RTN),AL3(0)      @OZ29180 40129800
         MEXIT                                                 @OZ29180 40129900
.F       DC    X'FF'               INDICATE END OF SCAN TABLE           40130000
         AIF   ('&PRINT' NE 'OFF').G                                    40130500
         POP   PRINT                                                    40131000
.G       MEND                                                           40131500
         EJECT                                                      R41 40131600
*                                                                   R41 40131700
*****    $PTENT    *****           GENERATE PARAMETER TABLE ENTRY   R41 40131800
*                                                                   R41 40131900
*                                                                   R41 40132000
         MACRO                                                      R41 40132100
&NAME    $PTENT &LNG,&KEY,&RTN,&FLGS,&FLN,&LOC,&RANGE,&FLAG=,       R41C40132200
               &DISPLAY=0                                           R41 40132300
         GBLC  &PRINT                                               R41 40132400
         LCLA  &A,&KL                                               R41 40132500
         LCLC  &C,&D,&FL,&FLX,&LOCN,&N,&O,&OPT,&R,&S,&SHOW          R41 40132600
&FL      SETC  '0'                                                  R41 40132700
&LOCN    SETC  '0'                                                  R41 40132800
         AIF   ('&KEY' EQ '').K    MUST SUPPLY KEYWORD              R41 40132900
&KL      SETA  K'&KEY              SET DEFAULT KEY LENGTH           R41 40133000
         AIF   ('&DISPLAY' EQ '0').A  BR IF NO DISPLAY ROUTINE      R41 40133100
&D       SETC  '+PTE1SHOW'         INDICATE DISPLAYABLE             R41 40133200
.A       AIF   ('&KEY'(1,2) NE '&&').B  BR IF NOT &&...             R41 40133300
&KL      SETA  &KL-1               COUNT ONLY 1 &                   R41 40133400
&D       SETC  '+PTE1SHOW'         INDICATE DISPLAYABLE             R41 40133500
&N       SETC  '+PTE1NUM'          INDICATE NUMERIC                 R41 40133600
&R       SETC  'NPLNUM'            DEFAULT FOR NUMERIC              R41 40133700
&SHOW    SETC  'NPLSHNUM'          DEFAULT FOR NUMERIC DISPLAY      R41 40133800
.B       AIF   ('&LNG' EQ '').C    BR IF LENGTH NOT SPECIFIED       R41 40133900
&KL      SETA  &LNG                USE SUPPLIED KEY LENGTH          R41 40134000
.C       AIF   (&A EQ N'&FLGS).J   BR IF ALL SUBPARMS PROCESSED     R41 40134100
&A       SETA  &A+1                COUNT TO NEXT SUBPARAMETER       R41 40134200
         AIF   ('&FLGS(&A)' NE 'SHOW').D                            R41 40134300
&D       SETC  '+PTE1SHOW'         INDICATE DISPLAYABLE             R41 40134400
         AGO   .C                  BR TO TEST NEXT SUBPARAMETER     R41 40134500
.D       AIF   ('&FLGS(&A)' NE 'NOSHOW').E                          R41 40134600
&D       SETC  ''                  INDICATE NOT DISPLAYABLE         R41 40134700
         AGO   .C                  BR TO TEST NEXT SUBPARAMETER     R41 40134800
.E       AIF   ('&FLGS(&A)' NE 'EBCDIC').F                          R41 40134900
&C       SETC  '+PTE1CHAR'         INDICATE EBCDIC FIELD            R41 40135000
&N       SETC  ''                  INDICATE NOT NUMERIC             R41 40135100
&R       SETC  'NPLCHAR'           DEFAULT FOR EBCDIC               R41 40135200
&SHOW    SETC  'NPLSHCH'           DEFAULT FOR EBCDIC DISPLAY       R41 40135300
         AGO   .C                  BR TO TEST NEXT SUBPARAMETER     R41 40135400
.F       AIF   ('&FLGS(&A)' NE 'NUMERIC').G                         R41 40135500
&N       SETC  '+PTE1NUM'          INDICATE NUMERIC                 R41 40135600
&C       SETC  ''                  INDICATE NOT EBCDIC              R41 40135700
&R       SETC  'NPLNUM'            DEFAULT FOR NUMERIC              R41 40135800
&SHOW    SETC  'NPLSHNUM'          DEFAULT FOR NUMERIC DISPLAY      R41 40135900
         AGO   .C                  BR TO TEST NEXT SUBPARAMETER     R41 40136000
.G       AIF   ('&FLGS(&A)' NE 'SWITCH').H                          R41 40136100
&O       SETC  '+PTE1OPT'          INDICATE BINARY SWITCH           R41 40136200
&N       SETC  ''                  INDICATE NOT NUMERIC             R41 40136300
&C       SETC  ''                  INDICATE NOT EBCDIC              R41 40136400
&R       SETC  'NPLSWICH'          DEFAULT FOR BINARY SWITCH        R41 40136500
&SHOW    SETC  'NPLSHOPT'          DEFAULT FOR BINARY SW DISPLAY    R41 40136600
         AGO   .C                  BR TO TEST NEXT SUBPARAMETER     R41 40136700
.H       AIF   ('&FLGS(&A)' NE 'SUBPARMS').I                        R41 40136800
&C       SETC  ''                  INDICATE NOT EBCDIC              R41 40136900
&N       SETC  ''                  INDICATE NOT NUMERIC             R41 40137000
&O       SETC  ''                  INDICATE NOT SWITCH              R41 40137100
         AGO   .C                  BR TO TEST NEXT SUBPARAMETER     R41 40137200
.I       MNOTE 8,'INVALID PARAMETER SPECIFICATION'                  R41 40137300
         MEXIT                                                      R41 40137400
.J       AIF   ('&N' NE '').K      BR IF NUMERIC                    R41 40137500
         AIF   ('&C' EQ '').M      BR IF NOT EBCDIC                 R41 40137600
         AIF   ('&RANGE' EQ '').N  BR IF DEFAULT LIMITS             R41 40137700
.K       AIF   (N'&RANGE EQ 2).N   BR IF LOWER/UPPER LIMITS         R41 40137800
.L       MNOTE 8,'MISSING (SUB)PARAMETER'                           R41 40137900
         MEXIT                                                      R41 40138000
.M       AIF   ('&O' NE '').N      BR IF BINARY SWITCH              R41 40138100
&S       SETC  '+PTE1SUB'          INDICATE PARM HAS SUBPARAMETERS  R41 40138200
&SHOW    SETC  '0'                 DEFAULT FOR SUBPARAMETER DISPLAY R41 40138300
         AIF   ('&RTN' EQ '').L    PARM WITH SUBPARMS REQUIRES RTN  R41 40138400
.N       AIF   ('&RTN' EQ '').P    BR IF RTN NOT SPECIFIED          R41 40138500
&R       SETC  '&RTN'              USE SUPPLIED ROUTINE ADDRESS     R41 40138600
.P       AIF   ('&S' NE '').T      BR IF SUBPARAMETERS              R41 40138700
         AIF   ('&LOC' EQ '0').T   BR IF ADDR TO BE SET LATER       R41 40138800
&LOCN    SETC  '&KEY'(3,K'&KEY-2)  STRIP OFF AMPERSANDS             R41 40138900
&LOCN    SETC  '$&LOCN'            REPLACE WITH $                   R41 40139000
         AIF   ('&O' EQ '').R      BR IF NOT BINARY SWITCH          R41 40139100
&OPT     SETC  '&LOCN'             DEFAULT FOR SWITCH 'ON'          R41 40139200
         AIF   ('&FLAG' EQ '').Q   BR IF FLAG NOT SPECIFIED         R41 40139300
&OPT     SETC  '&FLAG'             USE SUPPLIED FLAG                R41 40139400
.Q       AIF   ('&LOC' EQ '').L    MUST SPECIFY FIELD FOR SWITCH    R41 40139500
.R       AIF   ('&LOC' EQ '').S    BR IF FIELD NOT SPECIFIED        R41 40139600
&LOCN    SETC  '&LOC'              USE SUPPLIED FIELD NAME          R41 40139700
.S       ANOP                                                       R41 40139800
&FL      SETC  'L''&LOCN'          DEFAULT FIELD LENGTH             R41 40139900
&LOCN    SETC  '&LOCN.-HCTDSECT'   CONVERT TO FIELD OFFSET IN HCT   R41 40140000
.T       AIF   ('&FLN' EQ '').U    BR IF FLD LENGTH NOT SPECIFIED   R41 40140100
&FL      SETC  '&FLN'              USE SUPPLIED FIELD LENGTH        R41 40140200
.U       AIF   ('&DISPLAY' EQ '0').V  BR IF NO SPECIAL DISPLAY RTN  R41 40140300
&SHOW    SETC  '&DISPLAY'             USE SUPPLIED DISPLAY RTN ADDR R41 40140400
.V       ANOP                                                       R41 40140500
&NAME    DC    CL8'&KEY',AL1(&KL)                                   R41 40140600
         DC    AL1(&FL),Y(&LOCN)                                    R41 40140700
&FLX     SETC  '&D&O&N&C&S'                                         R41 40140800
&FLX     SETC  '&FLX'(2,K'&FLX-1)                                   R41 40140900
         DC    AL1(&FLX),AL3(&R)                                    R41 40141000
         DC    AL1(0),AL3(&SHOW)                                    R41 40141100
         AIF   ('&O' EQ '').X      BR IF NOT BINARY SWITCH          R41 40141200
         DC    AL1(255-&OPT,&OPT),AL2(0),A(0)                       R41 40141300
         MEXIT                                                      R41 40141400
.X       AIF   ('&S' NE '').Z      BR IF SUBPARAMETERS              R41 40141500
         AIF   ('&C' EQ '' OR '&RANGE' NE '').Y                     R41 40141600
         DC    AL2(&FL,0),A(&FL)                                    R41 40141700
         MEXIT                                                      R41 40141800
.Y       ANOP                                                       R41 40141900
         DC    AL2(&RANGE(1),0),A(&RANGE(2))                        R41 40142000
         MEXIT                                                      R41 40142100
.Z       ANOP                                                       R41 40142200
         DC    AL2(0,0),A(0)                                        R41 40142300
         MEND                                                       R41 40142400
 TITLE 'HASP INITIALIZATION -- LOCAL EXECUTABLE MACRO DEFINITIONS'   R4 40142500
*                                                                    R4 40142600
***** $$WTOR *****            ISSUE QUERY TO OPERATOR                R4 40142700
*                                                                    R4 40142800
*                                                                    R4 40142900
         MACRO                                                       R4 40143000
&NAME    $$WTOR &MSG                                                 R4 40143100
&NAME    $$WTO  &MSG               USE $$WTO ROUTINE FOR $$WTOR'S    R4 40143200
         MEND                                                        R4 40143300
         SPACE 5                                                     R4 40143400
*                                                                    R4 40143500
***** $$WTO *****             ISSUE MESSAGE TO OPERATOR              R4 40143600
*                                                                    R4 40143700
*                                                                    R4 40143800
         MACRO                                                       R4 40143900
&NAME    $$WTO &MSG                                                  R4 40144000
         LCLC  &N                                                    R4 40144100
         AIF   ('&MSG' EQ '(R1)').B                                  R4 40144200
         AIF   ('&MSG'(1,1) NE '(').A                                R4 40144300
&NAME    LR    R1,&MSG(1)          RELOAD MESSAGE ADDRESS            R4 40144400
         AGO   .C                                                    R4 40144500
.A       ANOP                                                        R4 40144600
&NAME    L     R1,=A(&MSG)         POINT TO MESSAGE                  R4 40144700
         AGO   .C                                                    R4 40144800
.B       ANOP                                                        R4 40144900
&N       SETC  '&NAME'                                               R4 40145000
.C       ANOP                                                        R4 40145100
&N       L     R15,=A(NWTORTN)     POINT TO $$WTO/$$WTOR SETUP RTN   R4 40145500
         BALR  R14,R15             PROCESS $$WTO/$$WTOR REQUEST      R4 40146000
         MEND                                                        R4 40146500
         EJECT                                                       R4 40147000
*                                                                    R4 40147500
***** $EXIT *****                  EXIT ABNORMALLY FROM HASPINIT     R4 40148000
*                                                                    R4 40148500
*                                                                    R4 40149000
         MACRO                                                       R4 40149500
&NAME    $EXIT &MSG                                                  R4 40150000
         LCLC  &N                                                    R4 40150500
         AIF   ('&MSG' EQ '(R1)').B                                  R4 40151000
         AIF   ('&MSG'(1,1) NE '(').A                                R4 40151500
&NAME    LR    R1,&MSG(1)          RELOAD MESSAGE ADDRESS            R4 40152000
         AGO   .C                                                    R4 40152500
.A       ANOP                                                        R4 40153000
&NAME    L     R1,=A(&MSG)         POINT TO MESSAGE                  R4 40153500
         AGO   .C                                                    R4 40154000
.B       ANOP                                                        R4 40154500
&N       SETC  '&NAME'                                               R4 40155000
.C       ANOP                                                        R4 40155500
&N       L     R15,=A(NERRORET)    GET ERROR EXIT ROUTINE ADDRESS    R4 40156000
         BR    R15                  AND BR TO EXIT                   R4 40156500
         MEND                                                        R4 40157000
         TITLE 'HASP INITIALIZATION'                                    40157500
         SPACE 5                                                        40158000
HASPINIT START 0                   HASP INITIALIZATION MODULE        R4 40158500
         SPACE 5                                                        40159000
         COPY  $HASPGEN            COPY HASPGEN PARAMETERS              40159500
         TITLE 'HASP INITIALIZATION OPTIONS'                            40160000
         SPACE 5                                                        40160500
*                                                                       40161000
*                        STANDARD DEFAULT INITIALIZATION PARAMETERS     40161500
*                                                                       40162000
         SPACE 3                                                        40162500
$OPTSTD  EQU   $OPTNFMT+$OPTWARM+$OPTREQ+$OPTLIST+$OPTLOG           R41 40162600
         SPACE 5                                                    R41 40162700
*                                                                   R41 40162800
*                             AUXILLIARY REGISTER DEFINITIONS       R41 40162900
*                                                                   R41 40163000
         SPACE 3                                                    R41 40163100
BASE4    EQU   R10                 PROCESSOR ADDRESSABILITY REGISTER    40163200
         TITLE 'HASP CONTROL BLOCKS'                                    40163500
*                                                                       40164000
*                             DOCUMENTATION OPTIONS FOR THIS ASSEMBLY   40164500
*                                                                       40165000
         SPACE 3                                                        40165500
        $SYSPARM (OFF,GEN,NODATA,NO,NO)                                 40166000
         SPACE 5                                                        40166500
*                                                                       40167000
*                             GENERATE HASP CONTROL BLOCKS              40167500
*                                                                       40168000
         SPACE 3                                                        40168500
        $HASPCB DOC=&DOC,LIST=&LIST  GENERATE HASP CONTROL BLOCKS       40169000
         TITLE 'HASP INITIALIZATION -- BASE1 ADDRESS TABLE'          R4 40169500
         SPACE 5                                                     R4 40170000
*********************************************************************** 40170500
*                                                                     * 40171000
*              BASE1 (HCT) ADDRESS TABLE                              * 40171500
*                                                                     * 40172000
*********************************************************************** 40172500
         SPACE 3                                                     R4 40173000
HCTDSECT DSECT                     RE-OPEN HCT DSECT                 R4 40173500
         SPACE 1                                                     R4 40174000
         ORG   $EWQ1               REDEFINE PROCESSOR QUEUES         R4 40174500
         SPACE 2                                                     R4 40175000
INITDBL  DS    D                   DOUBLE WORD WORK AREA             R4 40175500
TEDSTART DC    A(*-*)              ADDRESS OF TEMPORARY TEDS         R4 40176000
$RAT     DC    A(*-*)              ADDRESS OF TEMPORARY RAT          R4 40176500
$RWT     DC    A(*-*)              ADDRESS OF REMOTE WORK TABLE      R4 40177000
NCOMMTAB DC    A(*-*)              ADDRESS OF 1ST TEMP COMMAND AREA  R4 40177500
NTMPSTOR DC    A(*-*)              ADDRESS OF TEMPORARY STORAGE      R4 40178000
NDCTSTOR DC    A(*-*)              ADDR OF TEMPORARY DCT STORAGE     R4 40178500
*                                  THIS CARD DELETED BY APAR   @OZ20010 40179000
$NDQ     DS    A                   ADDRESS OF FIRST NDQ              R4 40179500
NLOGLINE DC    F'0'                COUNT OF UNIT=SNA LINES           R4 40180500
         SPACE 2                                                     R4 40181500
HASPINIT CSECT                     END OF BASE1 ADDRESS TABLE        R4 40182000
         TITLE 'HASP INITIALIZATION -- INITIAL ENTRY POINT'             40182500
*********************************************************************** 40183000
*                                                                     * 40183500
*        HASPINIT -- INITIAL ENTRY POINT                              * 40184000
*                                                                     * 40184500
*********************************************************************** 40185000
         SPACE 1                                                     R4 40185500
HASPINIT $ENTRY CSECT=YES,BASE=R15 PROVIDE HASPINIT ENTRY POINT      R4 40186000
         SPACE 1                                                     R4 40186500
         DROP  SAVE,R15            KILL INITIAL, PCE ADDRESSABILITY  R4 40187000
         USING HASPINIT,BASE2      RE-ESTABLISH ADDRESSABILITY       R4 40187500
         SPACE 1                                                     R4 40188000
         STM   R14,R12,12(R13)     SAVE HASPNUC'S REGISTERS          R4 40188500
         LR    BASE2,R15           ESTABLISH BASE                       40189000
         LA    R15,NSAVE           POINT TO HASPINIT SAVE AREA       R4 40189500
         ST    R15,8(,R13)         STORE FORWARD POINTER                40190000
         ST    R13,4(,R15)         STORE BACKWARD POINTER               40190500
         LR    R13,R15             SWITCH TO NEW SAVE AREA              40191000
         L     WB,0(,R1)           GET ADDRESS OF PARAMETER FIELD    R4 40191500
         SPACE 1                                                     R4 40192000
*********************************************************************** 40192500
*                                                                     * 40193000
*        LONG-TERM FIX FIRST 8K OF HASPNUC                            * 40193500
*                                                                     * 40194000
*********************************************************************** 40194500
         SPACE 1                                                     R4 40195000
         L     WA,PSATOLD-PSA      PICK UP HASP TCB ADDRESS          R4 40195500
         ST    WA,$HASPTCB         STORE IN HCT                      R4 40196000
         L     R0,=A(8192)           PAGE FIX                        R4 40196500
         LA    R2,NOPTECB             1ST 8K                         R4 40197000
        $PGSRVC FIX,(BASE1),(R0),(R2)  OF HASP                       R4 40197500
         WAIT  ECB=NOPTECB         WAIT FOR PAGE FIX TO COMPLETE     R4 40198000
         MVC   NOPTPJES+2(1),$CCOMCHR  SET ID FOR 'PJES2'            R4 40198500
         TITLE 'HASP INITIALIZATION -- OPTION REPLY SCAN'            R4 40199000
*********************************************************************** 40199500
*                                                                     * 40200000
*        SCAN EXEC CARD PARAMETER FIELD OR OPERATOR REPLY             * 40200500
*                                                                     * 40201000
*********************************************************************** 40201500
         SPACE 1                                                     R4 40202000
         LH    R1,0(,WB)           GET LENGTH OF PARAMETER FIELD     R4 40202500
         LTR   R1,R1               TEST                                 40203000
         BZ    NOPTWTOR            BRANCH IF NO PARAMETER FIELD         40203500
         CL    R1,=A(L'NOPTAREA)   CHECK LENGTH                         40204000
         BH    NOPTSCN8            ERROR IF TOO LONG                    40204500
         BCTR  R1,0                DECREMENT                            40205000
         STC   R1,*+5               AND SET MOVE LENGTH                 40205500
         MVC   NOPTAREA(*-*),2(WB) MOVE PARM FIELD TO REPLY AREA     R4 40206000
         B     NOPTSCAN            SCAN PARAMETER LIST                  40206500
         SPACE 1                                                     R4 40207000
NOPTWTOR MVI   NOPTECB,0           CLEAR REPLY ECB                   R4 40207500
        $$WTOR NOPTMSG1            ASK OPERATOR FOR RUN OPTIONS      R4 40208000
         SPACE 1                                                     R4 40208500
NOPTWAIT WAIT  ECB=NOPTECB         WAIT FOR REPLY                       40209000
         SPACE 1                                                     R4 40209500
NOPTSCAN MVI   $OPTSTAT,$OPTSTD    SET STANDARD OPTIONS                 40210000
         LA    WA,NOPTAREA-1       PREPARE TO SCAN REPLY                40210500
         SPACE 1                                                     R4 40211000
NOPTSCN1 LM    R0,R1,NOPTNULL      SCAN NEXT PARAMETER                  40211500
         LA    WB,L'NOPTNULL+1     MAXIMUM KEYWORD LENGTH + 1        R4 40212000
         SPACE 1                                                     R4 40212500
NOPTSCN2 LA    WA,1(WA)            ADVANCE TO NEXT CHARACTER            40213000
         CLI   0(WA),C','          CHECK FOR COMMA                      40213500
         BE    NOPTSCN3            BRANCH IF COMMA                      40214000
         CLI   0(WA),C'='          CHECK FOR EQUAL                      40214500
         BE    NOPTSCN5            BRANCH IF EQUAL                      40215000
         CLI   0(WA),0             CHECK FOR END OF REPLY               40215500
         BE    NOPTSCN3            BRANCH IF END OF REPLY               40216000
         CLI   0(WA),C' '          CHECK FOR BLANK                      40216500
         BE    NOPTSCN2            BRANCH IF BLANK                      40217000
         OI    0(WA),X'40'         CAPITALIZE                           40217500
         SLDL  R0,8                MAKE ROOM IN REGISTERS               40218000
         IC    R1,0(WA)            AND INSERT CHARACTER                 40218500
         BCT   WB,NOPTSCN2         LOOP FOR MAX KEYWORD LENGTH + 1   R4 40219000
         B     NOPTSCN8            SYNTAX ERROR - NOTIFY OPERATOR    R4 40219500
         SPACE 1                                                     R4 40220000
NOPTSCN3 TM    $OPTSTAT,$OPTPARM   TEST FOR HASPPARM= VALUE             40220500
         BO    NOPTSCN6            BRANCH IF YES                        40221000
         STM   R0,R1,NOPTPARM      SAVE PARAMETER                       40221500
         CLC   NOPTPARM,NOPTPJES   TEST FOR 'PJES2'                  R4 40222000
         BE    NOPTRET             RETURN IMMEDIATELY IF '$PJES2'       40222500
         LA    WB,NOPTORG-10       PREPARE TO SEARCH OPTION TABLE       40223000
         LA    WC,(NOPTEND-NOPTORG)/10  WC = NUMBER OF ENTRIES          40223500
         EJECT                                                       R4 40224000
NOPTSCN4 LA    WB,10(,WB)          ADVANCE TO NEXT ENTRY                40224500
         CLC   0(8,WB),NOPTPARM    SEARCH FOR MATCHING ENTRY            40225000
         BE    NOPTSCN9            BRANCH IF MATCH FOUND                40225500
         BCT   WC,NOPTSCN4         SEARCH ENTIRE TABLE                  40226000
         B     NOPTSCN8            NOT FOUND, NOTIFY OPERATOR           40226500
         SPACE 1                                                     R4 40227000
NOPTSCN5 STM   R0,R1,NOPTPARM      SAVE PARAMETER                       40227500
         CLC   NOPTPARM,=CL8'HASPPARM'  CHECK FOR 'HASPPARM='           40228000
         BNE   NOPTSCN8            ILLEGAL IF NOT                       40228500
         OI    $OPTSTAT,$OPTPARM   INDICATE HASPPARM= SCAN              40229000
         B     NOPTSCN1            SCAN HASPPARM= VALUE                 40229500
         SPACE 1                                                     R4 40230000
NOPTSCN6 CL    R1,NOPTNULL         CHECK FOR NULL VALUE                 40230500
         BE    NOPTSCN8            ILLEGAL IF NULL                      40231000
         SPACE 1                                                     R4 40231500
NOPTSCN7 STM   R0,R1,NOPTPARM      SAVE VALUE                           40232000
         SLDL  R0,8                LEFT                                 40232500
         IC    R1,NOPTNULL          JUSTIFY                             40233000
         CLI   NOPTPARM,C' '         ADDING                             40233500
         BE    NOPTSCN7               TRAILING BLANKS                   40234000
         L     R1,=A(HASPPARM)     GET ADDRESS OF HASPPARM DCB          40234500
         MVC   DCBDDNAM-DCBDSECT(,R1),NOPTPARM  SET NEW DDNAME          40235000
         NI    $OPTSTAT,255-$OPTPARM  INDICATE PROCESSING COMPLETE      40235500
         B     NOPTSCNE            PROCESS NEXT PARAMETER               40236000
         SPACE 1                                                     R4 40236500
NOPTSCN8 XC    NOPTAREA,NOPTAREA   ERROR, CLEAR REPLY AREA              40237000
         L     R1,=A(HASPPARM)     RESET HASPPARM DDNAME                40237500
         MVC   DCBDDNAM-DCBDSECT(,R1),=CL8'HASPPARM'                    40238000
         MVI   NOPTECB,0           CLEAR ECB                            40238500
        $$WTOR NOPTMSG2            RE-QUERY OPERATOR                 R4 40239000
         B     NOPTWAIT            REPEAT PROCEDURE                     40239500
         SPACE 1                                                     R4 40240000
NOPTSCN9 OC    $OPTSTAT,8(WB)      SET OR                               40240500
         NC    $OPTSTAT,9(WB)       RESET STATUS BITS                   40241000
         SPACE 1                                                     R4 40241500
NOPTSCNE CLI   0(WA),0             TEST FOR END OF REPLY                40242000
         BNE   NOPTSCN1            BRANCH IF NOT END OF REPLY           40242500
         B     NCBINIT             BR TO NEXT SECTION                R4 40243000
         SPACE 1                                                     R4 40243500
*********************************************************************** 40244000
*                                                                     * 40244500
*        RETURN IMMEDIATELY IF '$PJES2'                               * 40245000
*                                                                     * 40245500
*********************************************************************** 40246000
         SPACE 1                                                     R4 40246500
NOPTRET  L     R13,4(,R13)         POINT TO HASPNUC'S SAVE AREA      R4 40247000
         L     R13,4(,R13)         POINT TO SYSTEM'S SAVE AREA       R4 40247500
         LM    R14,R12,12(R13)     RESTORE REGISTERS                    40248000
         SR    R15,R15             SET RETURN CODE                      40248500
         BR    R14                  AND RETURN                          40249000
         EJECT                                                       R4 40249500
         DS    0D                  BOUNDARY ALIGNMENT          @OZ20010 40249900
NSAVE    DS    18F                 HASPINIT SAVE AREA                R4 40250000
NOPTECB  DC    F'0'                ECB FOR WTOR                         40250500
NOPTNULL DC    0D'0',CL8' '        NULL PARAMETER                       40251000
NOPTPJES DC    CL8'  *PJES2'       USED TO TEST FOR 'PJES2'          R4 40251500
NOPTPARM DS    D                   PARAMETER STORAGE                    40252000
         SPACE 1                                                        40252500
NOPTAREA DC    XL100'0',X'00'      OPTION AREA                          40253000
         SPACE 1                                                        40253500
NOPTORG  NULL                      OPTION TABLE                         40254000
         DC    C'  FORMAT',AL1($OPTFMT,255-$OPTNFMT)   FORMAT           40254500
         DC    C'   NOFMT',AL1($OPTNFMT,255-$OPTFMT)   NOFMT            40255000
         DC    C'    COLD',AL1($OPTCOLD,255-$OPTWARM)  COLD             40255500
         DC    C'    WARM',AL1($OPTWARM,255-$OPTCOLD)  WARM             40256000
         DC    C'     REQ',AL1($OPTREQ,255-$OPTNREQ)   REQ              40256500
         DC    C'   NOREQ',AL1($OPTNREQ,255-$OPTREQ)   NOREQ            40257000
         DC    C'    LIST',AL1($OPTLIST,255-$OPTNLST)  LIST             40257500
         DC    C'  NOLIST',AL1($OPTNLST,255-$OPTLIST)  NOLIST           40258000
         DC    C'     LOG',AL1($OPTLOG,255-$OPTNLOG)   LOG          R41 40258100
         DC    C'   NOLOG',AL1($OPTNLOG,255-$OPTLOG)   NOLOG        R41 40258200
         DC    C'    NONE',AL1(0,255)                  NONE             40258500
         DC    C'       N',AL1(0,255)                  N                40259000
         DC    C'       U',AL1(0,255)                  U                40259500
         DC    C'        ',AL1(0,255)                  NULL             40260000
NOPTEND  NULL                      END OF OPTION TABLE                  40260500
  TITLE  'HASP INITIALIZATION -- FIXED-LENGTH TABLE INITIALIZATION'  R4 40261000
*********************************************************************** 40261500
*                                                                     * 40262000
*        OBTAIN STORAGE FOR AND INITIALIZE FIXED-LENGTH TABLES        * 40262500
*                                                                     * 40263000
*********************************************************************** 40263500
         SPACE 1                                                     R4 40264000
NCBINIT  LA    WB,16+40            PTF MAP, SET. TIME PRIO TBL LNS   R4 40264500
         LA    WB,CCALEN(,WB)      CELL CONTROL AREA LENGTH          R4 40265000
         LA    WB,ACTLEN(,WB)      AUTOMATIC COMMAND TABLE LENGTH    R4 40265500
         LA    WB,CATLEN*64(,WB)   CLASS ATTRIBUTE TABLE LENGTH      R4 40266000
         LA    WB,CSALEN(,WB)      CONSOLE SERVICE WORK AREA LENGTH  R4 40266500
         LR    R0,WB               RELOAD FOR GETMAIN                R4 40267000
         GETMAIN R,LV=(0)          OBTAIN TABLE STORAGE              R4 40267500
         LR    WA,R1               CLEAR                             R4 40268000
         SLR   WD,WD                TABLE                            R4 40268500
         MVCL  WA,WC                 STORAGE                         R4 40269000
         ST    R1,$PTFMAP          SET POINTER TO PTF MAP            R4 40269500
         LA    R1,16(,R1)          STEP OVER PTF MAP                 R4 40270000
         ST    R1,$RTIMTAB         SET POINTER TO PRIORITY TABLE     R4 40270500
         MVC   0(40,R1),NRTIMTAB   INITIALIZE EST. TIME PRIORITY TBL R4 40271000
         LA    R1,40(,R1)          STEP OVER TABLE                   R4 40271500
         ST    R1,$CCAREA          SET POINTER TO CCA                R4 40272000
         SPACE 1                                                     R4 40272500
         USING CCADSECT,R1         PROVIDE CCA ADDRESSABILITY        R4 40273000
         SPACE 1                                                     R4 40273500
         LA    R0,5*60             SET DELETE                        R4 40274000
         ST    R0,CCADELT           TIME INTERVAL                    R4 40274500
         LA    R1,CCALEN(,R1)      STEP OVER CCA                     R4 40275000
         SPACE 1                                                     R4 40275500
         ST    R1,$ACTABLE         SET POINTER TO ACT                R4 40276000
         SPACE 1                                                     R4 40276500
         USING ACTDSECT,R1         PROVIDE ACT ADDRESSABILITY        R4 40277000
         SPACE 1                                                     R4 40277500
         MVI   ACTTQE+IPOST,X'80'  PRE-POST TQE                      R4 40278000
         LA    R0,10*60            SET MAXIMUM                       R4 40278500
         ST    R0,ACTMINTV          TIME INTERVAL                    R4 40279000
         LA    R0,5*60             SET MAXIMUM                       R4 40279500
         ST    R0,ACTMDELI          BACKLOG INTERVAL                 R4 40280000
         LA    R1,ACTLEN(,R1)      STEP OVER ACT                     R4 40280500
         ST    R1,$CATABLE         SET POINTER TO CAT                R4 40281000
         EJECT                                                       R4 40281500
         USING CATDSECT,R1         PROVIDE CAT ADDRESSABILITY        R4 40282000
         SPACE 1                                                     R4 40282500
         LA    R0,X'C9'-X'BF'      INITIALIZE                        R4 40283000
         BAL   WE,NONBATCH          CAT ENTRIES                      R4 40283500
         BCT   R0,NBATCH             C0 - C9                         R4 40284000
         SPACE 1                                                     R4 40284500
         LA    R0,X'CF'-X'C9'      INITIALIZE                        R4 40285000
         BAL   WE,NONBATCH          CAT ENTRIES                      R4 40285500
         BCT   R0,NONBATCH           CA - CF                         R4 40286000
         SPACE 1                                                     R4 40286500
         OI    CATJOBFL,CATSTCJB   INDICATE STARTED TASK CLASS       R4 40287000
         BAL   WE,NOCATSMF         INITIALIZE STC CAT ENTRY D0       R4 40287500
         LA    R0,X'D9'-X'D0'      INITIALIZE                        R4 40288000
         BAL   WE,NBATCH            CAT ENTRIES                      R4 40288500
         BCT   R0,NBATCH             D1 - D9                         R4 40289000
         SPACE 1                                                     R4 40289500
         LA    R0,X'DF'-X'D9'      INITIALIZE                        R4 40290000
         BAL   WE,NONBATCH          CAT ENTRIES                      R4 40290500
         BCT   R0,NONBATCH           DA - DF                         R4 40291000
         SPACE 1                                                     R4 40291500
         OI    CATJOBFL,CATTSUJB   INDICATE LOGON CLASS              R4 40292000
         OI    CATOPSWT,CATTSOP    INDICATE TIME-SHARING USER        R4 40292500
         BAL   WE,NONBATCH         INITIALIZE TSU CAT ENTRY E0       R4 40293000
         LA    R0,X'E9'-X'E0'      INITIALIZE                        R4 40293500
         BAL   WE,NONBATCH          CAT ENTRIES                      R4 40294000
         BCT   R0,NBATCH             E1 - E9                         R4 40294500
         SPACE 1                                                     R4 40295000
         LA    R0,X'EF'-X'E9'      INITIALIZE CAT                    R4 40295500
         BAL   WE,NONBATCH          CAT ENTRIES                      R4 40296000
         BCT   R0,NONBATCH           EA - EF                         R4 40296500
         SPACE 1                                                     R4 40297000
         LA    R0,X'F9'-X'EF'      INITIALIZE                        R4 40297500
         BAL   WE,NBATCH            CAT ENTRIES                      R4 40298000
         BCT   R0,NBATCH             F0 - F9                         R4 40298500
         SPACE 1                                                     R4 40299000
         LA    R0,X'FF'-X'F9'      INITIALIZE                        R4 40299500
         BAL   WE,NONBATCH          CAT ENTRIES                      R4 40300000
         BCT   R0,NONBATCH           FA - FF                         R4 40300500
         SPACE 1                                                     R4 40301000
         B     NCSAINIT            THEN BR TO CONTINUE               R4 40301500
         SPACE 1                                                     R4 40302000
NBATCH   OI    CATJOBFL,CATBATCH   INDICATE BATCH JOB CLASS          R4 40302500
         SPACE 1                                                     R4 40303000
NONBATCH OI    CATOPSWT,CATSMF     INDICATE SMF PROCESSING           R4 40303500
         SPACE 1                                                     R4 40304000
NOCATSMF MVC   CATPROCN,=C'000'    SET DEFAULT PROCEDURE NAME SUFFIX R4 40304500
         MVC   CATPERFM,=C'000'    SET DEFAULT PERFORMANCE GROUP     R4 40305000
         LA    R1,CATEND           POINT TO NEXT CAT ENTRY           R4 40305500
         BR    WE                   AND RETURN                       R4 40306000
         EJECT                                                       R4 40306500
NCSAINIT ST    R1,$CSAREA          SET POINTER TO CSA                R4 40307000
         SPACE 1                                                     R4 40307500
         USING CSADSECT,R1         PROVIDE CSA ADDRESSABILITY        R4 40308000
         SPACE 1                                                     R4 40308500
         MVI   CSALAREA+1,1        SET NUMBER OF LINES               R4 40309000
         MVI   CSALEVEL+2,X'FF'             $T CON SETTINGS FOR      R4 40309500
         MVC   CSALEVEL+3(7*2-1),CSALEVEL+2  LOGICAL CONSOLES        R4 40310000
         B     NSETPTF             BR TO INITIALIZE PTF MAP          R4 40310500
         SPACE 1                                                     R4 40311000
         DROP  R1                  KILL CSA ADDRESSABILITY           R4 40311500
         SPACE 3                                                     R4 40312000
NRTIMTAB DS    0F                                                    R4 40312500
         DC    AL1(9),AL3(60*2)                FIRST   INTERVAL      R4 40313000
         DC    AL1(8),AL3(30*5)                SECOND  INTERVAL      R4 40313500
         DC    AL1(7),AL3(60*15)               THIRD   INTERVAL      R4 40314000
         DC    AL1(6),AL3(60*(X'FFFFFF'/60))   FOURTH  INTERVAL      R4 40314500
         DC    AL1(5),AL3(60*(X'FFFFFF'/60))   FIFTH   INTERVAL      R4 40315000
         DC    AL1(4),AL3(60*(X'FFFFFF'/60))   SIXTH   INTERVAL      R4 40315500
         DC    AL1(3),AL3(60*(X'FFFFFF'/60))   SEVENTH INTERVAL      R4 40316000
         DC    AL1(2),AL3(60*(X'FFFFFF'/60))   EIGHTH  INTERVAL      R4 40316500
         DC    AL1(1),AL3(60*(X'FFFFFF'/60))   NINTH   INTERVAL      R4 40317000
         DC    AL4(X'FFFFFF')                                        R4 40317500
     TITLE 'HASP INITIALIZATION -- MAINTENANCE RECORD INITIALIZATION'   40318000
*********************************************************************** 40318500
*                                                                     * 40319000
*        THE INSTRUCTIONS WHICH FOLLOW WILL BE CHANGED FROM 'CLI'     * 40319500
*        INSTRUCTIONS TO 'OI' INSTRUCTIONS AS PART OF THE PTF         * 40320000
*        FIXES WHICH ARE RECORDED AGAINST THIS VERSION OF JES2.       * 40320500
*                                                                     * 40321000
*        THE BITS TURNED ON IN THE PTF MAP THUS REFLECT THE PTF       * 40321500
*        LEVEL OF THE LOAD MODULE.                                    * 40322000
*                                                                     * 40322500
*********************************************************************** 40323000
         SPACE 1                                                     R4 40323500
NSETPTF  L     WA,$PTFMAP          POINT TO HASP PTF MAP             R4 40324000
         SPACE 1                                                     R4 40324500
         CLI   0(WA),X'80'         APAR NUMBER    1                  R4 40325000
         CLI   0(WA),X'40'         APAR NUMBER    2                  R4 40325500
         CLI   0(WA),X'20'         APAR NUMBER    3                  R4 40326000
         CLI   0(WA),X'10'         APAR NUMBER    4                  R4 40326500
         CLI   0(WA),X'08'         APAR NUMBER    5                  R4 40327000
         CLI   0(WA),X'04'         APAR NUMBER    6                  R4 40327500
         CLI   0(WA),X'02'         APAR NUMBER    7                  R4 40328000
         CLI   0(WA),X'01'         APAR NUMBER    8                  R4 40328500
         CLI   1(WA),X'80'         APAR NUMBER    9                  R4 40329000
         CLI   1(WA),X'40'         APAR NUMBER   10                  R4 40329500
         CLI   1(WA),X'20'         APAR NUMBER   11                  R4 40330000
         CLI   1(WA),X'10'         APAR NUMBER   12                  R4 40330500
         CLI   1(WA),X'08'         APAR NUMBER   13                  R4 40331000
         CLI   1(WA),X'04'         APAR NUMBER   14                  R4 40331500
         CLI   1(WA),X'02'         APAR NUMBER   15                  R4 40332000
         CLI   1(WA),X'01'         APAR NUMBER   16                  R4 40332500
         CLI   2(WA),X'80'         APAR NUMBER   17                  R4 40333000
         CLI   2(WA),X'40'         APAR NUMBER   18                  R4 40333500
         CLI   2(WA),X'20'         APAR NUMBER   19                  R4 40334000
         CLI   2(WA),X'10'         APAR NUMBER   20                  R4 40334500
         CLI   2(WA),X'08'         APAR NUMBER   21                  R4 40335000
         CLI   2(WA),X'04'         APAR NUMBER   22                  R4 40335500
         CLI   2(WA),X'02'         APAR NUMBER   23                  R4 40336000
         CLI   2(WA),X'01'         APAR NUMBER   24                  R4 40336500
         CLI   3(WA),X'80'         APAR NUMBER   25                  R4 40337000
         CLI   3(WA),X'40'         APAR NUMBER   26                  R4 40337500
         CLI   3(WA),X'20'         APAR NUMBER   27                  R4 40338000
         CLI   3(WA),X'10'         APAR NUMBER   28                  R4 40338500
         CLI   3(WA),X'08'         APAR NUMBER   29                  R4 40339000
         CLI   3(WA),X'04'         APAR NUMBER   30                  R4 40339500
         CLI   3(WA),X'02'         APAR NUMBER   31                  R4 40340000
         CLI   3(WA),X'01'         APAR NUMBER   32                  R4 40340500
         EJECT                                                       R4 40341000
         CLI   4(WA),X'80'         APAR NUMBER   33                  R4 40341500
         CLI   4(WA),X'40'         APAR NUMBER   34                  R4 40342000
         CLI   4(WA),X'20'         APAR NUMBER   35                  R4 40342500
         CLI   4(WA),X'10'         APAR NUMBER   36                  R4 40343000
         CLI   4(WA),X'08'         APAR NUMBER   37                  R4 40343500
         CLI   4(WA),X'04'         APAR NUMBER   38                  R4 40344000
         CLI   4(WA),X'02'         APAR NUMBER   39                  R4 40344500
         CLI   4(WA),X'01'         APAR NUMBER   40                  R4 40345000
         CLI   5(WA),X'80'         APAR NUMBER   41                  R4 40345500
         CLI   5(WA),X'40'         APAR NUMBER   42                  R4 40346000
         CLI   5(WA),X'20'         APAR NUMBER   43                  R4 40346500
         CLI   5(WA),X'10'         APAR NUMBER   44                  R4 40347000
         CLI   5(WA),X'08'         APAR NUMBER   45                  R4 40347500
         CLI   5(WA),X'04'         APAR NUMBER   46                  R4 40348000
         CLI   5(WA),X'02'         APAR NUMBER   47                  R4 40348500
         CLI   5(WA),X'01'         APAR NUMBER   48                  R4 40349000
         CLI   6(WA),X'80'         APAR NUMBER   49                  R4 40349500
         CLI   6(WA),X'40'         APAR NUMBER   50                  R4 40350000
         CLI   6(WA),X'20'         APAR NUMBER   51                  R4 40350500
         CLI   6(WA),X'10'         APAR NUMBER   52                  R4 40351000
         CLI   6(WA),X'08'         APAR NUMBER   53                  R4 40351500
         CLI   6(WA),X'04'         APAR NUMBER   54                  R4 40352000
         CLI   6(WA),X'02'         APAR NUMBER   55                  R4 40352500
         CLI   6(WA),X'01'         APAR NUMBER   56                  R4 40353000
         CLI   7(WA),X'80'         APAR NUMBER   57                  R4 40353500
         CLI   7(WA),X'40'         APAR NUMBER   58                  R4 40354000
         CLI   7(WA),X'20'         APAR NUMBER   59                  R4 40354500
         CLI   7(WA),X'10'         APAR NUMBER   60                  R4 40355000
         CLI   7(WA),X'08'         APAR NUMBER   61                  R4 40355500
         CLI   7(WA),X'04'         APAR NUMBER   62                  R4 40356000
         CLI   7(WA),X'02'         APAR NUMBER   63                  R4 40356500
         CLI   7(WA),X'01'         APAR NUMBER   64                  R4 40357000
         CLI   8(WA),X'80'         APAR NUMBER   65                  R4 40357500
         CLI   8(WA),X'40'         APAR NUMBER   66                  R4 40358000
         CLI   8(WA),X'20'         APAR NUMBER   67                  R4 40358500
         CLI   8(WA),X'10'         APAR NUMBER   68                  R4 40359000
         CLI   8(WA),X'08'         APAR NUMBER   69                  R4 40359500
         CLI   8(WA),X'04'         APAR NUMBER   70                  R4 40360000
         CLI   8(WA),X'02'         APAR NUMBER   71                  R4 40360500
         CLI   8(WA),X'01'         APAR NUMBER   72                  R4 40361000
         CLI   9(WA),X'80'         APAR NUMBER   73                  R4 40361500
         CLI   9(WA),X'40'         APAR NUMBER   74                  R4 40362000
         CLI   9(WA),X'20'         APAR NUMBER   75                  R4 40362500
         CLI   9(WA),X'10'         APAR NUMBER   76                  R4 40363000
         CLI   9(WA),X'08'         APAR NUMBER   77                  R4 40363500
         CLI   9(WA),X'04'         APAR NUMBER   78                  R4 40364000
         CLI   9(WA),X'02'         APAR NUMBER   79                  R4 40364500
         CLI   9(WA),X'01'         APAR NUMBER   80                  R4 40365000
         EJECT                                                       R4 40365500
         CLI   10(WA),X'80'        APAR NUMBER   81                  R4 40366000
         CLI   10(WA),X'40'        APAR NUMBER   82                  R4 40366500
         CLI   10(WA),X'20'        APAR NUMBER   83                  R4 40367000
         CLI   10(WA),X'10'        APAR NUMBER   84                  R4 40367500
         CLI   10(WA),X'08'        APAR NUMBER   85                  R4 40368000
         CLI   10(WA),X'04'        APAR NUMBER   86                  R4 40368500
         CLI   10(WA),X'02'        APAR NUMBER   87                  R4 40369000
         CLI   10(WA),X'01'        APAR NUMBER   88                  R4 40369500
         CLI   11(WA),X'80'        APAR NUMBER   89                  R4 40370000
         CLI   11(WA),X'40'        APAR NUMBER   90                  R4 40370500
         CLI   11(WA),X'20'        APAR NUMBER   91                  R4 40371000
         CLI   11(WA),X'10'        APAR NUMBER   92                  R4 40371500
         CLI   11(WA),X'08'        APAR NUMBER   93                  R4 40372000
         CLI   11(WA),X'04'        APAR NUMBER   94                  R4 40372500
         CLI   11(WA),X'02'        APAR NUMBER   95                  R4 40373000
         CLI   11(WA),X'01'        APAR NUMBER   96                  R4 40373500
         CLI   12(WA),X'80'        APAR NUMBER   97                  R4 40374000
         CLI   12(WA),X'40'        APAR NUMBER   98                  R4 40374500
         CLI   12(WA),X'20'        APAR NUMBER   99                  R4 40375000
         CLI   12(WA),X'10'        APAR NUMBER  100                  R4 40375500
         CLI   12(WA),X'08'        APAR NUMBER  101                  R4 40376000
         CLI   12(WA),X'04'        APAR NUMBER  102                  R4 40376500
         CLI   12(WA),X'02'        APAR NUMBER  103                  R4 40377000
         CLI   12(WA),X'01'        APAR NUMBER  104                  R4 40377500
         CLI   13(WA),X'80'        APAR NUMBER  105                  R4 40378000
         CLI   13(WA),X'40'        APAR NUMBER  106                  R4 40378500
         CLI   13(WA),X'20'        APAR NUMBER  107                  R4 40379000
         CLI   13(WA),X'10'        APAR NUMBER  108                  R4 40379500
         CLI   13(WA),X'08'        APAR NUMBER  109                  R4 40380000
         CLI   13(WA),X'04'        APAR NUMBER  110                  R4 40380500
         CLI   13(WA),X'02'        APAR NUMBER  111                  R4 40381000
         CLI   13(WA),X'01'        APAR NUMBER  112                  R4 40381500
         CLI   14(WA),X'80'        APAR NUMBER  113                  R4 40382000
         CLI   14(WA),X'40'        APAR NUMBER  114                  R4 40382500
         CLI   14(WA),X'20'        APAR NUMBER  115                  R4 40383000
         CLI   14(WA),X'10'        APAR NUMBER  116                  R4 40383500
         CLI   14(WA),X'08'        APAR NUMBER  117                  R4 40384000
         CLI   14(WA),X'04'        APAR NUMBER  118                  R4 40384500
         CLI   14(WA),X'02'        APAR NUMBER  119                  R4 40385000
         CLI   14(WA),X'01'        APAR NUMBER  120                  R4 40385500
         CLI   15(WA),X'80'        APAR NUMBER  121                  R4 40386000
         CLI   15(WA),X'40'        APAR NUMBER  122                  R4 40386500
         CLI   15(WA),X'20'        APAR NUMBER  123                  R4 40387000
         CLI   15(WA),X'10'        APAR NUMBER  124                  R4 40387500
         CLI   15(WA),X'08'        APAR NUMBER  125                  R4 40388000
         CLI   15(WA),X'04'        APAR NUMBER  126                  R4 40388500
         CLI   15(WA),X'02'        APAR NUMBER  127                  R4 40389000
         CLI   15(WA),X'01'        APAR NUMBER  128                  R4 40389500
         TITLE 'HASP INITIALIZATION -- INITIAL CONTROL BLOCK INITIALIZAC40390000
               TION'                                                 R4 40390500
*********************************************************************** 40391000
*                                                                     * 40391500
*        LIMIT &MAXPART UPPER LIMIT TO MAXUSER - 3                    * 40392000
*                                                                     * 40392500
*********************************************************************** 40393000
         SPACE 1                                                     R4 40393500
         USING ASVT,WA             PROVIDE ASVT ADDRESSABILITY       R4 40394000
         USING CVTDSECT,WC         PROVIDE CVT ADDRESSABILITY        R4 40394500
         SPACE 1                                                     R4 40395000
         L     WC,CVTPTR           POINT TO CVT                      R4 40395500
         L     WA,CVTASVT          POINT TO ASVT                     R4 40396000
         L     R1,ASVTMAXU         GET MAXIMUM ADDRESS SPACES        R4 40396500
         SH    R1,=H'3'             LESS 3 FOR MSTR SCHED, ASM, JES2 R4 40397000
         L     R15,=A(NMAXPART)    POINT TO &MAXPART UPPER LIMIT     R4 40397500
         C     R1,0(,R15)          ENSURE &MAXPART                  R41 40398000
         BNL   SKIP10               NOT GREATER THAN                 R4 40398500
         ST    R1,0(,R15)            MAXUSER - 3                    R41 40399000
         SPACE 2                                                     R4 40399500
*********************************************************************** 40400000
*                                                                     * 40400500
*        FIND OUR SUBSYSTEM CVT (SSCT)                                * 40401000
*                                                                     * 40401500
*********************************************************************** 40402000
         SPACE 1                                                     R4 40402500
SKIP10   L     WA,$HASPTCB         PICK UP HASP TCB ADDRESS          R4 40403000
         L     WA,TCBJSCB-TCB(,WA)  POINT TO JSCB                    R4 40403500
         L     WA,JSCBSSIB-JSCB(,WA)  POINT TO SSIB                  R4 40404000
         SPACE 1                                                     R4 40404500
         USING SSIB,WA             PROVIDE SSIB ADDRESSABILITY       R4 40405000
         SPACE 1                                                     R4 40405500
         LA    WD,CVTBRET          POINT TO CVT BR 14                   40406000
         L     WC,CVTJESCT         POINT TO JES CONTROL TABLE           40406500
         SPACE 1                                                     R4 40407000
         USING JESCT,WC            PROVIDE JESCT ADDRESSABILITY      R4 40407500
         SPACE 1                                                     R4 40408000
         CLC   JESPJESN,SSIBJBID   CHECK FOR OUR NAME                   40408500
         BNE   *+8                 SKIP IF WE ARE NOT PRIMARY           40409000
         OI    ISVSTUS,$SVSTUSP    SET PRIMARY INDICATOR                40409500
         LA    WC,JESSSCT-(SSCTSCTA-SSCT) POINT TO SSCT HEAD            40410000
         SPACE 1                                                     R4 40410500
         USING SSCT,WC             PROVIDE SSCT ADDRESSABILITY       R4 40411000
         SPACE 1                                                     R4 40411500
ISSCTL   ICM   WC,15,SSCTSCTA      POINT TO NEXT SSCT                   40412000
         BZ    INOSSCT             IF END, EXIT                         40412500
         CLC   SSCTSNAM,SSIBJBID   IS THIS OUR CVT                      40413000
         BNE   ISSCTL              LOOP                                 40413500
         EJECT                                                       R4 40414000
*********************************************************************** 40414500
*                                                                     * 40415000
*        OBTAIN THE SSVT (NEW OR OLD)                                 * 40415500
*                                                                     * 40416000
*********************************************************************** 40416500
         SPACE 1                                                     R4 40417000
         USING SSVT,WA             PROVIDE SSVT ADDRESSABILITY       R4 40417500
         SPACE 1                                                     R4 40418000
         ICM   WA,15,SSCTSSVT      IS OUR SSVT ALREADY IN               40418500
         BNZ   INSTART             BR IF HASP IS OR HAS BEEN IN         40419000
         LA    WB,8+SSVTLEN        STORAGE FOR SSVT AND PREFIX       R4 40419500
         LR    R0,WB               SET FOR GETMAIN                      40420000
         ICM   R0,8,=AL1(241)      SET SUBPOOL NUMBER                   40420500
         GETMAIN R,LV=(0)          GET SSVT AREA                        40421000
         ST    WB,4(,R1)           SAVE CURRENT SSVT LENGTH          R4 40421500
         LA    WA,8(,R1)           POINT BEYOND SSVT PREFIX          R4 40422000
         SH    WB,=H'8'            REDUCE LENGTH BY PREFIX LENGTH    R4 40422500
         SLR   R15,R15             SET COUNT AND PAD TO ZERO            40423000
         MVCL  WA,R14              ZERO SSVT (L IN WB)                  40423500
         LA    WA,8(,R1)           GET ADDRESS OF ACTUAL SSVT           40424000
         MVC   $SVSTUS,ISVSTUS     COPY STATUS BYTE                     40424500
         EJECT                                                       R4 40425000
*********************************************************************** 40425500
*                                                                     * 40426000
*        OBTAIN FIXED GLOBAL STORAGE FOR STARTIO-RELEASE SRB/IOSB     * 40426500
*                                                                     * 40427000
*********************************************************************** 40427500
         SPACE 1                                                     R4 40428000
         GETMAIN R,LV=SRBSIZE+IOSEND-IOSB,SP=245  GET FIXED GLOBAL      40428500
         ST    R1,$SVRELSE          STORAGE FOR RELEASE SRB-IOSB        40429000
         MODESET EXTKEY=ZERO       SET ZERO KEY                         40429500
         XC    0(SRBSIZE+IOSEND-IOSB,R1),0(R1)  ZERO                    40430000
         LA    R15,SRBSIZE(,R1)    GET IOSB ADDRESS                     40430500
         ST    R15,SRBPARM-SRB(,R1)  STORE IN SRB                       40431000
         SPACE 1                                                     R4 40431500
         USING IOSB,R15            IOSB ADDRESSABILITY                  40432000
         SPACE 1                                                     R4 40432500
         OI    IOSOPT,IOSBYP+IOSRELSE+IOSPSLL  SET IOS OPTION BITS      40433000
         MVI   IOSDVRID,IOSMISID   SET MISCELLANEOUS DRIVER ID          40433500
         MVI   IOSASID+1,1         SET ASID OF ONE                      40434000
         ST    WD,IOSPGAD          POINT TERMINATION TO BR 14           40434500
         ST    WD,IOSNRM           POINT NORMAL EXIT TO BR 14           40435000
         ST    WD,IOSABN           POINT ABNORMAL EXIT TO BR 14         40435500
         MODESET EXTKEY=HASP       SET HASP KEY                         40436000
         B     IHAVSSVT            SKIP OVER SSVT CLAIM                 40436500
         SPACE 1                                                     R4 40437000
         DROP  R15                 KILL IOSB ADDRESSABILITY          R4 40437500
         EJECT                                                       R4 40438000
*********************************************************************** 40438500
*                                                                     * 40439000
*        DETERMINE WHETHER OR NOT HASP CAN COME UP                    * 40439500
*                                                                     * 40440000
*********************************************************************** 40440500
         SPACE 1                                                     R4 40441000
INSTART  TM    $SVSTUS,$SVSTUST    CHECK FOR HASP TERMINATED            40441500
         BZ    INSTRTER            EXIT WITH ERROR                      40442000
         ICM   R1,15,$SVHASP       TEST HASP CONDITION                  40442500
         BZ    INSTRTER            BRANCH IF ACTIVE                     40443000
         BP    *+12                BRANCH IF NOT RESTART                40443500
         TM    $OPTSTAT,$OPTFMT+$OPTCOLD  TEST OPTIONS                  40444000
         BNZ   INSTRTER            COLD OR FORMAT ILLEGAL IF RESTART    40444500
         ICM   R1,15,$SVPOSTE      POINT TO MASTER HASP ECB          R4 40445000
         BZ    SKIP20              BR IF NONE YET                    R4 40445500
         TM    $SVPOSTW(R1),X'80'  MAY WE START...                   R4 40446000
         BZ    INSTRTER            BR IF NO                          R4 40446500
SKIP20   L     R1,SSVT+ICSWD       PICK UP WORD                         40447000
         ST    R1,ISVSTUS          SET INTO WORK AREA                   40447500
         NI    ISVSTUS+($SVSTUS-SSVT-ICSWD),255-$SVSTUST TURN OFF TERM  40448000
         OI    ISVSTUS+($SVSTUS-SSVT-ICSWD),$SVSTUSR SET RESTART FLAG   40448500
         L     R0,ISVSTUS          PICK UP RESULT                       40449000
         CS    R1,R0,SSVT+ICSWD    ESTABLISH OWNERSHIP                  40449500
         BNZ   INSTART             LOOP IF NOT OWNER                    40450000
         SPACE 1                                                     R4 40450500
IHAVSSVT ST    WA,$SSVT            SET ADDRESS OF SSVT                  40451000
         L     WG,$HASPMAP         POINT TO HASP MODULE MAP          R4 40451500
         ST    WA,MAPSSVTA-MAPDSECT(,WG)  SET ADDR FOR REPPING       R4 40452000
         ST    BASE1,$SVHCT        SET ADDRESS OF HASP CONTROL TABLE R4 40452500
         ST    WC,$SVSSCT          SET ADDRESS OF SSCT               R4 40453000
         MVC   $SVSSNM,SSCTSNAM    SET SUBSYSTEM NAME                R4 40453500
         L     R1,CVTPTR           GET CVT ADDRESS                   R4 40454000
         SH    R1,=H'4'            POINT TO OS/VS2 RELEASE INFO      R4 40454500
         MVC   $RELEASE(4),0(R1)   MOVE RELEASE INFO TO HCT          R4 40455000
         MVC   $SVRELNO(4),0(R1)   MOVE RELEASE INFO TO SSVT         R4 40455500
         EJECT                                                       R4 40456000
         ICM   R1,15,$SVPOSTE      TEST FOR MASTER POST ELEMENT      R4 40456500
         BNZ   ISETECBA            BR IF PRESENT                     R4 40457000
         SPACE 2                                                     R4 40457500
*********************************************************************** 40458000
*                                                                     * 40458500
*        OBTAIN FIXED GLOBAL STORAGE FOR HASP WAIT ECB                * 40459000
*                                                                     * 40459500
*********************************************************************** 40460000
         SPACE 1                                                     R4 40460500
         CLC   $SVRELNO,=C'02'     TEST OS/VS2 RELEASE               R4 40461000
         BNE   NGLBLFIX            BR IF RELEASE 3 OR GREATER        R4 40461500
         GETMAIN R,LV=8,SP=241     GET ECB STORAGE FROM CSA          R4 40462000
         LA    R0,8                GET STORAGE LENGTH                R4 40462500
         LA    R2,NOPTECB           AND ECB ADDRESS                  R4 40463000
        $PGSRVC FIX,(R1),(R0),(R2) LONG-TERM FIX THE ECB             R4 40463500
         L     R2,$SSVT            RESTORE SSVT ADDRESS              R4 40464000
         B     ISETECBA            THEN BR TO CONTINUE               R4 40464500
*              THIS LINE DELETED BY APAR NUMBER                @OZ32235 40464600
*              THIS LINE DELETED BY APAR NUMBER                @OZ32235 40464700
*              THIS LINE DELETED BY APAR NUMBER                @OZ32235 40464800
*              THIS LINE DELETED BY APAR NUMBER                @OZ32235 40464900
*              THIS LINE DELETED BY APAR NUMBER                @OZ32235 40465000
*              THIS LINE DELETED BY APAR NUMBER                @OZ32235 40465100
*              THIS LINE DELETED BY APAR NUMBER                @OZ32235 40465200
*              THIS LINE DELETED BY APAR NUMBER                @OZ32235 40465300
NGLBLFIX GETMAIN R,LV=56,SP=228    GET FIXED GLOBAL STORAGE    @OZ32235 40465500
*              THE NEXT THREE LINES DEFINE THE GETMAINED AREA  @OZ32235 40465550
*              BYTES 00 THROUGH 03 HEX = $HASPECB              @OZ32235 40465600
*              BYTES 04 THROUGH 07 HEX = $SVPOSTW              @OZ32235 40465650
*              BYTES 08 THROUGH 37 HEX = BLANKS FOR 3525       @OZ32235 40465700
         SPACE 1                                                     R4 40466000
ISETECBA ST    R1,$HASPECB         SET ECB ADDRESS IN HCT,           R4 40466500
         ST    R1,$SVQLOKP          JOB SERVICES QUEUE ELEMENT,      R4 40467000
         ST    R1,$SVPOSTE           AND MASTER HASP POST ELEMENT    R4 40467500
         XC    0(4,R1),0(R1)       INITIALIZE MASTER POST ELEMENT    R4 40468000
         MVI   $SVPOSTW(R1),X'FF'  SET TO ALLOW JES2 RESTART         R4 40468500
         MVI   $SVBLANK(R1),X'40'  SET GOTTEN AREA + 8 TO      @OZ32235 40468550
         MVC   $SVBLANK+1(47,R1),$SVBLANK(R1)     BLANKS.      @OZ32235 40468600
*              THIS LINE DELETED BY APAR NUMBER                @OZ32235 40468650
*              THIS LINE DELETED BY APAR NUMBER                @OZ32235 40468700
*              THIS LINE DELETED BY APAR NUMBER                @OZ32235 40468750
*              THIS LINE DELETED BY APAR NUMBER                @OZ32235 40468800
*              THIS LINE DELETED BY APAR NUMBER                @OZ32235 40468850
         SPACE 1                                                     R4 40469000
         DROP  WA,WC               KILL SSVT, SSCT ADDRESSABILITY    R4 40469500
         SPACE 1                                                     R4 40470000
ICSWD    EQU   ($SVSTUS-SSVT)/4*4  OFFSET OF WORD CONTAINING $SVSTUS R4 40470500
         EJECT                                                       R4 40471000
*********************************************************************** 40471500
*                                                                     * 40472000
*        LOCATE SUBSYSTEM SUPPORT MODULE -- HASPSSSM                  * 40472500
*                                                                     * 40473000
*********************************************************************** 40473500
         SPACE 1                                                     R4 40474000
         L     WA,=A(NPLSSSM)      POINT TO HASPSSSM PROGRAM NAME   R41 40474400
         LOAD  EPLOC=(WA),ERRET=NESTAE  LOCATE HASPSSSM             R41 40474500
         ST    R0,MAPSSSMA-MAPDSECT(,WG)  SET ADDR FOR REPPING       R4 40475000
         DELETE EPLOC=(WA)         DELETE HASPSSSM                  R41 40475500
         SPACE 1                                                     R4 40476000
         EJECT                                                       R4 40476500
*********************************************************************** 40477000
*                                                                     * 40477500
*        ACTIVATE JES2 ESTAE ROUTINE                                  * 40478000
*                                                                     * 40478500
*********************************************************************** 40479000
         SPACE 1                                                     R4 40479500
NESTAE   L     WA,MAPABNDA-MAPDSECT(,WG)  GET HASP ESTAE EXIT ADDR  R41 40480000
         ESTAE (WA),RECORD=YES     SET JES2 TASK ABEND EXIT          R4 40480500
         B     ISVTDONE            BRANCH TO NEXT SECTION               40481000
         EJECT                                                          40481500
INOSSCT  L     R1,=A(ISTRTEM1)     POINT TO ERROR MESSAGE            R4 40482000
         MVC   ISTRTSNM-ISTRTEM1(,R1),SSIBJBID-SSIB(WA)  SUBSYS NAME R4 40482500
        $EXIT  (R1)                THEN ISSUE ERROR MSG AND QUIT     R4 40483000
         SPACE 3                                                        40483500
INSTRTER $EXIT ISTRTEM2            ISSUE ERROR MSG AND QUIT          R4 40484000
         SPACE 5                                                     R4 40484500
ISVSTUS  DC    A(*-*)              SYSTEM STATUS WORK AREA           R4 40485000
         SPACE 3                                                     R4 40485500
         LTORG                                                       R4 40486000
         SPACE 5                                                     R4 40486500
ISVTDONE NULL                                                        R4 40487000
         TITLE 'HASP INITIALIZATION -- TEMPORARY DCT ALLOCATION'     R4 40487500
*********************************************************************** 40488000
*                                                                     * 40488500
*        OBTAIN TEMPORARY STORAGE FOR LOCAL U/R AND LINE DCTS         * 40489000
*                                                                     * 40489500
*********************************************************************** 40490000
         SPACE 1                                                     R4 40490500
         BALR  BASE2,0             RE-ESTABLISH                      R4 40491000
         USING *,BASE2              LOCAL ADDRESSABILITY             R4 40491500
         SPACE 1                                                     R4 40492000
         LA    WB,NDCTABLE         PICK UP DCT BUILD TABLE ADDR      R4 40492500
         SLR   R0,R0               ZERO GETMAIN TOTAL VALUE          R4 40493000
         SPACE 1                                                     R4 40493500
NDCTLOP1 LH    WF,NDCTNUMB(,WB)    PICK UP NO. OF DCTS TO BE GENED   R4 40494000
         LTR   WF,WF               TEST FOR TABLE END                R4 40494500
         BZ    NDCTGETM            YES, BRANCH - ISSUE GETMAIN       R4 40495000
         MH    WF,NDCTSIZE(,WB)    MULTIPLY NO. BY SIZE              R4 40495500
         ALR   R0,WF               ADD TO TOTAL STORAGE REQUIREMENT  R4 40496000
         LA    WB,NDCTBLEN(,WB)    NEXT TABLE ENTRY                  R4 40496500
         B     NDCTLOP1            LOOP, DO ALL DCT TYPES            R4 40497000
         SPACE 2                                                     R4 40497500
NDCTGETM ICM   R0,8,=AL1(229)      INDICATE HI-CORE STORAGE          R4 40498000
         LR    WB,R0               SAVE STORAGE REQUIREMENT          R4 40498500
         GETMAIN R,LV=(0)          GET STORAGE FOR TEMPORARY DCTS    R4 40499000
         LR    R0,WB               SAVE AREA LENGTH IN R0            R4 40499500
         ST    R1,NDCTSTOR         SAVE STORAGE ADDRESS              R4 40500000
         LR    WA,R1               COPY STORAGE ADDRESS FOR MVCL     R4 40500500
         SLR   WD,WD               CLEAR OPERAND 2 LENGTH            R4 40501000
         MVCL  WA,WC               USE MVCL TO CLEAR GOTTEN AREA     R4 40501500
         ST    R0,0(,R1)           SAVE AREA LENGTH IN AREA          R4 40502000
         LA    R1,4(,R1)           SKIP OVER LENGTH                  R4 40502500
         EJECT                                                       R4 40503000
*********************************************************************** 40503500
*                                                                     * 40504000
*        INITIALIZE TEMPORARY LOCAL U/R AND LINE DCTS                 * 40504500
*                                                                     * 40505000
*********************************************************************** 40505500
         SPACE 1                                                     R4 40506000
         USING DCTDSECT,R1         DCTS ADDRESSABLE IN GOTTEN AREA   R4 40506500
         SPACE 1                                                     R4 40507000
         LA    WB,NDCTABLE         PICK UP DCT BUILD TABLE ADDR      R4 40507500
         LA    WC,$DCTPOOL-(DCTCHAIN-DCTDSECT) PRIME OLD DCT PTR     R4 40508000
         SPACE 1                                                     R4 40508500
NDCTLOP2 LH    R0,NDCTNUMB(,WB)    PICK UP NUMBER OF DCTS INITIALIZE R4 40509000
         LTR   R0,R0               TEST FOR TABLE END                R4 40509500
         BZ    INDCTDON            YES, BRANCH - NEXT PHASE OF INIT  R4 40510000
         SPACE 1                                                     R4 40510500
         LA    WA,1                START WITH DCT NUMBER 1           R4 40511000
         L     WE,NDCTOFST(,WB)    PICK UP HCT OFFSET                R4 40511500
         ST    R1,HCTDSECT(WE)         AND SAVE DCT ADDRESS IN HCT   R4 40512000
         SPACE 1                                                     R4 40512500
         L     WE,NDCTRTNE(,WB)    GET MODEL DCT INIT ROUTINE ADDR   R4 40513000
         SPACE 1                                                     R4 40513500
NDCTLOP3 ST    R1,DCTCHAIN-DCTDSECT(,WC) CHAIN ALL THE DCTS          R4 40514000
         BR    WE                  EXECUTE MODEL DCT INIT ROUTINE    R4 40514500
         SPACE 1                                                     R4 40515000
NDCTRTN1 NULL                      RETURN FROM UR DCT INIT ROUTINES  R4 40515500
         STC   WA,DCTDEVID+1       STORE DEVICE NUMBER IN DCT        R4 40516000
         SPACE 1                                                     R4 40516500
NDCTRTN2 NULL                      RETURN FROM LINE/LOGON DCT INIT   R4 40517000
         CVD   WA,INDBLWK          CONVERT DEVICE NUMBER TO DECIMAL  R4 40517500
         OI    INDBLWK+7,X'0F'        ADJUST SIGN                    R4 40518000
         UNPK  INDIGITS+1(3),INDBLWK      AND MAKE EBCDIC            R4 40518500
         SPACE 1                                                     R4 40519000
SKIP30   MVC   INDIGITS,INDIGITS+1 LEFT JUSTIFY                      R4 40519500
         CLI   INDIGITS,C'0'           REMOVING ALL                  R4 40520000
         BE    SKIP30                      LEADING ZEROS             R4 40520500
         SPACE 1                                                     R4 40521000
         LA    WF,L'DCTDEVN-1      GET FIELD LENGTH                  R4 40521500
         SR    WF,WD                   COMPUTE DIGIT POSITION        R4 40522000
         LA    WF,DCTDEVN(WF)              AND ADDRESS FOR MVC       R4 40522500
         EX    WD,NDCTMVC          MOVE IN DIGITS                    R4 40523000
         MVI   DCTSTAT,DCTUNAL     SHOW DEVICE NOT ALLOCATED         R4 40523500
         LR    WC,R1               SAVE OLD DCT ADDRESS FOR CHAINING R4 40524000
         AH    R1,NDCTSIZE(,WB)    ADVANCE TO NEXT DCT               R4 40524500
         LA    WA,1(,WA)           INCREMENT DEVICE NUMBER           R4 40525000
         BCT   R0,NDCTLOP3         LOOP FOR ALL THIS TYPE DCTS       R4 40525500
         SPACE 1                                                     R4 40526000
NDCTNXT  LA    WB,NDCTBLEN(,WB)    ADVANCE TO NEXT DCT TYPE          R4 40526500
         B     NDCTLOP2            LOOP FOR ALL DCTS IN TABLE        R4 40527000
         SPACE 1                                                     R4 40527500
NDCTMVC  MVC   0(*-*,WF),INDIGITS  *** EXECUTED ***                  R4 40528000
         EJECT                                                       R4 40528500
         SPACE 1                                                     R4 40529000
*        READER MODEL DCT INITIALIZATION                             R4 40529500
         SPACE 1                                                     R4 40530000
NIDCTRDR MVI   DCTDEVTP,DCTRDR     SET READER DEVICE TYPE            R4 40530500
         MVC   DCTDEVN(8),=C'READER'        AND NAME                 R4 40531000
         L     WD,CVTPTR           GET ADDRESS OF CVT                R4 40531500
         L     WD,CVTSMCA-CVT(,WD) GET ADDRESS OF SMCA               R4 40532000
         MVC   DCTINDC,SMCAOPT-SMCA(WD)  SET BACKGROUND SMF OPTIONS  R4 40532500
         MVI   DCTDEVID,DCTRDRID   SET READER DEVICE ID              R4 40533000
         LA    WD,2-1              SHOW POS. OF DEVICE NUMBER DIGITS R4 40533500
         MVI   DCTSIAFF,QUESYSAF   SET DEFAULT AFFINITY              R4 40534000
         MVI   DCTJCLAS,C'A'       READER DEFAULT CLASS = A          R4 40534500
         MVI   DCTMCLAS,C'A'                      MSGCLASS = A       R4 40535000
         MVI   DCTPRLIM,15         DEFAULT PRIO IS MAX (15)          R4 40535500
         B     NDCTRTN1            RETURN TO LOOP                    R4 40536000
         SPACE 3                                                     R4 40536500
*        PUNCH MODEL DCT INITIALIZATION                              R4 40537000
         SPACE 1                                                     R4 40537500
NIDCTPUN MVI   DCTDEVTP,DCTPUN       SET PUNCH DEVICE TYPE           R4 40538000
         MVC   DCTDEVN(8),=CL8'PUNCH'       AND NAME                 R4 40538500
         MVI   DCTDEVID,DCTPUNID   SET PUNCH DEVICE ID               R4 40539000
         MVC   DCTCLASS(3),=C'BK '       SET DEFAULT                 R4 40539500
         MVC   DCTCLASS+3(33),DCTCLASS+2  SYSOUT CLASSES             R4 40540000
         LA    WD,3-1              SHOW POS. OF DEVICE NUMBER DIGITS R4 40540500
         B     NIDCTPP             COMPLETE COMMON PRINT/PUNCH       R4C40541000
                                          INITIALIZTION              R4 40541500
         EJECT                                                       R4 40542000
*        PRINTER MODEL DCT INITALIZTION                              R4 40542500
         SPACE 1                                                     R4 40543000
NIDCTPRT MVI   DCTDEVTP,DCTPRT     SET LOCAL PRINT DEVICE TYPE       R4 40543500
         MVC   DCTDEVN(8),=CL8'PRINTR'      AND NAME                 R4 40544000
         MVI   DCTDEVID,DCTPRTID   SET PRINTER DEVICE ID             R4 40544500
         MVC   DCTCLASS(3),=C'AJ '       SET DEFAULT                 R4 40545000
         MVC   DCTCLASS+3(33),DCTCLASS+2  SYSOUT CLASSES             R4 40545500
         LA    WD,2-1              SHOW POS. OF DEVICE NUMBER DIGITS R4 40546000
         SPACE 3                                                     R4 40546500
*        PRINT/PUNCH MODEL DCT COMMON INITIALIZATION                 R4 40547000
         SPACE 1                                                     R4 40547500
NIDCTPP  MVI   DCTCHAR1,C'*'       SET DEFAULT CHARACTER SETS ,      R4 40548000
         MVC   DCTCHAR1+1(DCTMODF+L'DCTMODF-DCTCHAR1-1),DCTCHAR1     R4C40548500
                                   FORMS OVERLAY & COPY MODFICATION  R4C40549000
                                                  NAME               R4 40549500
         MVI   DCTPPSW,DCTPPSWO+DCTPPSWC+DCTPPSWT ALLOW $T U         R4 40550000
         B     NDCTRTN1            RETURN TO LOOP                    R4 40550500
         EJECT                                                       R4 40551000
*        LINE MODEL DCT INITIALIZTION                                R4 40551500
         SPACE 1                                                     R4 40552000
NIDCTLNE MVI   DCTDEVTP,DCTLNE     SET LINE DEVICE TYPE              R4 40552500
         MVC   DCTDEVN(8),=CL8'LINE'        AND NAME                 R4 40553000
         LA    WD,4-1              SHOW POS. OF DEVICE NUMBER DIGITS R4 40553500
         SPACE 3                                                     R4 40554000
*        LINE/LOGON MODEL DCT COMMON INITIALIZATION                  R4 40556000
         SPACE 1                                                     R4 40557000
NIDCTPWD MVI   MDCTPSWD,C' '       CLEAR PASSWORD                    R4 40557500
         MVC   MDCTPSWD+1(L'MDCTPSWD-1),MDCTPSWD TO BLANKS           R4 40558000
         B     NDCTRTN2            RETURN TO LOOP                    R4 40558500
         SPACE 3                                                     R4 40559500
*        LOGON MODEL DCT INITIALIZATION                              R4 40560000
         SPACE 1                                                     R4 40560500
NIDCTLOG MVI   DCTDEVTP,DCTLOG     SET LOGON DEVICE TYPE             R4 40561000
         MVC   DCTDEVN(8),=CL8'LOGON'       AND NAME                 R4 40561500
         LA    WD,3-1              SHOW POS. OF DEVICE NUMBER DIGITS R4 40562000
         MVI   MDCTPWDL,8          ALWAYS USE PASSWORD LENGTH 8      R4 40563000
         MVI   MDCTAPNL,8             AND APPLICATION NAME LENGTH 8  R4 40563500
         MVC   MDCTAPPL(8),=CL8'JES2' DEFAULT APPLICATION NAME       R4 40564000
         MVI   MDCTTYPE,DCTPSNA    SHOW SNA TYPE DCT                 R4 40564500
         B     NIDCTPWD            COMPLETE COMMON LINE DCT INIT     R4 40565000
         EJECT                                                       R4 40566000
*        TEMPORARY DCT BUILD TABLE DEFINITIONS                       R4 40566500
         SPACE 1                                                     R4 40567000
NDCTNUMB EQU   0                   MAXIMUM NO. OF TEMPRARY DCTS      R4 40567500
NDCTSIZE EQU   2                   SIZE OF TEMPORARY DCT             R4 40568000
NDCTRTNE EQU   4                   POINTER TO MODEL DCT INIT ROUTINE R4 40568500
NDCTOFST EQU   8                   OFFSET TO HCT FIELD FOR THIS TYPE R4 40569000
NDCTBLEN EQU   12                  SIZE OF TABLE ENTRY               R4 40569500
         SPACE 3                                                     R4 40570000
NDCTABLE DS    0F                  TEMPORARY DCT BUILD TABLE         R4 40570500
         SPACE 1                                                     R4 40571000
         DC    AL2(1),AL2(4),A(NDCTNXT),A($DCTPOOL-HCTDSECT)         R4C40571500
                                   ENTRY FOR ENTIRE DCT POOL         R4 40572000
         SPACE 1                                                     R4 40572500
         DC    AL2($MAXRDRS)       LOCAL READER ENTRY                R4 40573000
         DC    AL2(DCTRDEND-DCTDSECT)                                R4 40573500
         DC    A(NIDCTRDR)                                           R4 40574000
         DC    A($RDRDCT-HCTDSECT)                                   R4 40574500
         SPACE 1                                                     R4 40575000
         DC    AL2($MAXPRTS)       LOCAL PRINTER ENTRY               R4 40575500
         DC    AL2(((DCTPPEND-DCTDSECT+(36+1)+3)/4)*4)               R4 40576000
         DC    A(NIDCTPRT)                                           R4 40576500
         DC    A($PRTDCT-HCTDSECT)                                   R4 40577000
         SPACE 1                                                     R4 40577500
         DC    AL2($MAXPUNS)       LOCAL PUNCH ENTRY                 R4 40578000
         DC    AL2(((DCTPPEND-DCTDSECT+(36+1)+3)/4)*4)               R4 40578500
         DC    A(NIDCTPUN)                                           R4 40579000
         DC    A($PUNDCT-HCTDSECT)                                   R4 40579500
         SPACE 1                                                     R4 40580000
         DC    AL2($MAXLNES)       TP LINE ENTRY                     R4 40580500
         DC    AL2(MDCTLEND-DCTDSECT)                                R4 40581000
         DC    A(NIDCTLNE)                                           R4 40581500
         DC    A($LNEDCT-HCTDSECT)                                   R4 40582000
         SPACE 1                                                     R4 40582500
         DC    AL2($MAXLOGS)       LOGON DCT ENTRY                   R4 40583500
         DC    AL2(MDCTLGND-DCTDSECT)                                R4 40584000
         DC    A(NIDCTLOG)                                           R4 40584500
         DC    A($LOGNDCT-HCTDSECT)                                  R4 40585000
         SPACE 1                                                     R4 40585500
         DC    H'0'                TABLE END                         R4 40586500
         DROP  R1                  DROP R1 / DCT ADDRESSABILITY      R4 40587000
         SPACE 2                                                     R4 40587500
INDBLWK  EQU   INITDBL             DOUBLE WORD WORK AREA             R4 40588000
INDIGITS DC    CL4' ',C' '         DEVICE NUMBER WORK AREA           R4 40588500
         SPACE 1                                                     R4 40589000
INDCTDON NULL                                                        R4 40589500
         EJECT                                                       R4 40590000
*********************************************************************** 40590500
*                                                                     * 40591000
*              INITIALIZE INTERNAL READER MODEL DCT                   * 40591500
*                                                                     * 40592000
*********************************************************************** 40592500
         SPACE 1                                                     R4 40593000
         L     R4,=A(NINRDCT)      GET ADDR OF MODEL INTRDR DCT      R4 40593500
         USING DCTDSECT,R4         SHOW MODEL DCT ADDRESSABILITY     R4 40594000
         SPACE 1                                                     R4 40594500
         MVI   DCTSTAT,DCTUNAL+DCTHOLD SHOW DCT AVAILABLE BUT HELD   R4 40595000
         MVI   DCTDEVTP,DCTINR     SET DCT INTERNAL READER TYPE      R4 40595500
         MVC   DCTDEVN,=CL8'INTRDR'    AND DEVICE NAME               R4 40596000
         MVI   DCTDEVID,DCTINRID   SET DCT DEVICE ID                 R4 40596500
         MVC   RIDJOBID,=C'JOB00000' SET INTERNAL READER JOB ID      R4 40597000
         MVI   DCTSIAFF,QUESYSAF   SET DEFAULT AFFINITY              R4 40597500
         MVI   DCTJCLAS,C'A'       INTRDR DEFAULT CLASS = A          R4 40598000
         MVI   DCTMCLAS,C'A'                      MSGCLASS = A       R4 40598500
         MVI   DCTPRLIM,15         DEFAULT PRIO IS MAX (15)          R4 40599000
         L     R7,$SSVT            GET ADDRESS OF SSVT               R4 40599500
         ST    R7,RIDSSVT          STORE IN DCT                      R4 40600000
         LA    R5,$SVBR14-SSVT(,R7)   INITIALIZE ADDRESS             R4 40600500
         ST    R5,RIDERRET             OF ERROR ROUTINE IN DCT       R4 40601000
         L     R5,CVTPTR           GET ADDRESS OF CVT                R4 40601500
         L     R5,CVTSMCA-CVT(,R5) GET ADDRESS OF SMCA               R4 40602000
         MVC   DCTINDC,SMCAOPT-SMCA(R5)  SET BACKGROUND SMF OPTIONS  R4 40602500
         SPACE 2                                                     R4 40603000
         DROP  R4                  RELEASE MODEL DCT ADDRESSABILITY  R4 40603500
         TITLE 'HASP INITIALIZATION -- OBTAIN STORAGE FOR TEMPORARY CONC40604000
               TROL BLOCKS'                                          R4 40604500
*********************************************************************** 40605000
*                                                                     * 40605500
*        OBTAIN STORAGE FOR TEMPORARY PIT, RAT, RWT AND CPT           * 40606500
*                                                                     * 40608500
*********************************************************************** 40609000
         SPACE 1                                                     R4 40609500
         L     R1,=A(NMAXPART)     COMPUTE                           R4 40610000
         L     WC,0(,R1)            SIZE OF                         R41 40610500
         LA    WB,PITLEN             TEMPORARY                       R4 40611000
         MR    WA,WC                  PIT                            R4 40611500
         AL    WB,=A(4+$MAXRJE*(RATTLE+RWTLEN))  ADD RAT, RWT SIZE   R4 40612500
         AL    WB,=A(100*(CPTEND-CPTDSECT)) ADD CPT SIZE            R41 40614100
         ICM   WB,8,=AL1(229)      INDICATE HI-CORE STORAGE          R4 40614500
         LR    R0,WB               GET TEMPORARY                     R4 40615000
         GETMAIN R,LV=(0)           STORAGE                          R4 40615500
         ST    R1,NTMPSTOR         SAVE STORAGE ADDRESS              R4 40616000
         ST    WB,0(,R1)           SAVE STORAGE AMOUNT               R4 40616500
         LA    WB,0(,WB)           CLEAR SUBPOOL NUMBER              R4 40617000
         LA    R1,4(,R1)           POINT TO USABLE STORAGE           R4 40617500
         SH    WB,=H'4'            ADJUST USABLE STORAGE LENGTH      R4 40618000
         LR    WA,R1               CLEAR                             R4 40618500
         SLR   R15,R15              USABLE                           R4 40619000
         MVCL  WA,R14                STORAGE                         R4 40619500
         TITLE 'HASP INITIALIZATION -- CREATE TEMPORARY PIT'         R4 40620000
*********************************************************************** 40620500
*                                                                     * 40621000
*        CREATE TEMPORARY PIT                                         * 40621500
*                                                                     * 40622000
*********************************************************************** 40622500
         SPACE 1                                                     R4 40623000
         ST    R1,$PITABLE         SET POINTER TO TEMPORARY PIT      R4 40623500
         LA    WA,NPITCLAS+35      STARTING DEFAULT CLASS LIST ADDR  R4 40624000
         SLR   WB,WB               STARTING PIT NUMBER               R4 40624500
         SPACE 1                                                     R4 40625000
         USING PITDSECT,WD         PROVIDE PIT ADDRESSABILITY        R4 40625500
         SPACE 1                                                     R4 40626000
NPITNEXT LR    WD,R1               POINT TO NEXT PIT                 R4 40626500
         LA    R1,PITLEN(,R1)      UPDATE PIT CHAIN ADDRESS          R4 40627000
         ST    R1,PITNEXT          SET CHAIN ADDRESS IN PIT          R4 40627500
         LA    WB,1(,WB)           BUMP PIT NUMBER                   R4 40628000
         CVD   WB,INITDBL          CREATE                            R4 40628500
         OI    INITDBL+7,X'0F'      INITIATOR                        R4 40629000
         UNPK  PITPATID,INITDBL      ID                              R4 40629500
         CLI   PITPATID,C'0'          FOR                            R4 40630000
         BNE   SKIP40                  NEW                           R4 40630500
         MVI   PITPATID,C' '            PIT                          R4 40631000
SKIP40   MVC   PITCLASS(37),0(WA)  PROVIDE DEFAULT JOB CLASS LIST    R4 40631500
         CL    WA,=A(NPITCLAS)     TEST FOR CLASS LIST ORIGIN        R4 40632000
         BE    SKIP50              BR IF REACHED                     R4 40632500
         BCTR  WA,0                 ELSE UPDATE CLASS LIST POINTER   R4 40633000
SKIP50   BCT   WC,NPITNEXT         LOOP THRU ALL PITS                R4 40633500
         SPACE 1                                                     R4 40634000
         ST    WC,PITNEXT          ZERO LAST PIT CHAIN ADDRESS       R4 40634500
         B     NTEMPRAT             AND BR TO NEXT SECTION           R4 40635000
         SPACE 1                                                     R4 40635500
         DROP  WD                  KILL PIT ADDRESSABILITY           R4 40636000
         SPACE 1                                                     R4 40636500
PITLEN   EQU   (PITCLASS+36+1+3-PITDSECT)/4*4  MAXIMUM PIT LENGTH    R4 40637000
NPITCLAS DC    CL72'9876543210ZYXWVUTSRQPONMLKJIHGFEDCBA'  JOB CLASS R4 40639000
         TITLE 'HASP INITIALIZATION -- RAT / RWT ALLOCATION'         R4 40639500
*********************************************************************** 40640000
*                                                                     * 40640500
*        CREATE TEMPORARY RAT                                         * 40641000
*                                                                     * 40641500
*********************************************************************** 40642000
         SPACE 1                                                     R4 40642500
NTEMPRAT ST    R1,$RAT             SAVE RAT ADDRESS                  R4 40643000
         LA    WA,$MAXRJE          RAT ELEMENTS                      R4 40643500
         SLR   WB,WB               RAT COUNT                         R4 40644000
         SPACE 1                                                     R4 40644500
         USING RATDSECT,R1         PROVIDE RAT ADDRESSABILITY        R4 40645000
         SPACE 1                                                     R4 40645500
INITRAT  LA    WB,1(,WB)           BUMP REMOTE NUMBER                R4 40646000
         MVC   RATNAME,=CL8'RMT'    MOVE                             R4 40646500
         MVI   RATTYPE,0              DEFAULT                        R4 40647000
         MVI   RATFMT,DCTPBLK+DCTPVAR  VALUES                        R4 40647500
         MVI   RATNUMRD,1               TO                           R4 40648000
         MVI   RATNUMPR,1                TEMPORARY                   R4 40648500
         MVI   RATCONF,RATCONFT           RAT                        R4 40649000
         MVC   RATPSWD,=CL8' '             ENTRY                     R4 40649500
         CVD   WB,INITDBL           AND PREPARE TO                   R4 40650000
         OI    INITDBL+7,X'0F'       JUSTIFY DIGITS IN               R4 40650500
         UNPK  RATNAME+4(3),INITDBL   REMOTE NAME                    R4 40651000
         SPACE 1                                                     R4 40651500
SKIP60   MVC   RATNAME+3(4),RATNAME+4  LEFT JUSTIFY                  R4 40652000
         CLI   RATNAME+3,C'0'           DIGITS IN                    R4 40652500
         BE    SKIP60                    REMOTE NAME                 R4 40653000
         SPACE 1                                                     R4 40653500
         STH   WB,RATROUTE         SET REMOTE ROUTE CODE             R4 40654000
         STH   WB,RATCONRT         SET REMOTE CONSOLE ROUTE CODE     R4 40654500
         MVI   RATSYMB,C' '        CLEAR REMOTE LUNAME               R4 40655500
         MVC   RATSYMB+1(L'RATSYMB),RATSYMB TO BLANKS                R4 40656000
         LA    WC,256              SET DEFAULT                       R4 40656500
         STH   WC,RATBUFSZ          BUFSIZE VALUE                    R4 40657000
         LA    R1,RATEND           POINT TO NEXT RAT                 R4 40657500
         BCT   WA,INITRAT          LOOP THRU ENTIRE RAT              R4 40658000
         SPACE 1                                                     R4 40658500
         DROP  R1                  KILL RAT ADDRESSABILITY           R4 40659000
         EJECT                                                       R4 40659500
*********************************************************************** 40659600
*                                                                     * 40659700
*        CREATE TEMPORARY CPT                                         * 40659800
*                                                                     * 40659900
*********************************************************************** 40660000
         SPACE 1                                                    R41 40660100
NTEMPCPT ST    R1,$CPTPOOL         SAVE CPTPOOL ADDRESS             R41 40660200
         LA    WA,100              NUMBER OF CPT ELEMENTS           R41 40660300
         LA    WB,0                FIRST CPT NUMBER                 R41 40660400
         SPACE 1                                                    R41 40660500
         USING CPTDSECT,R1                                          R41 40660600
         SPACE 1                                                    R41 40660700
INITCPT  STC   WB,CPTNUM           INIT CPT NUMBER                  R41 40660800
         LA    R1,CPTEND           POINT TO NEXT CPT                R41 40660900
         LA    WB,1(,WB)           INCREMENT CPT NUMBER             R41 40661000
         BCT   WA,INITCPT          LOOP THROUGH CPT                 R41 40661100
         SPACE 1                                                    R41 40661200
         DROP  R1                                                   R41 40661300
         EJECT                                                      R41 40661400
*********************************************************************** 40661500
*                                                                     * 40661600
*        CREATE REMOTE WORK TABLE                                     * 40661700
*                                                                     * 40661800
*********************************************************************** 40662000
         SPACE 1                                                     R4 40662500
         ST    R1,$RWT             SAVE RWT ADDRESS                  R4 40663000
         LA    WA,$MAXRJE          RWT ELEMENTS                      R4 40663500
         SPACE 1                                                     R4 40664000
         USING RWTDSECT,R1         PROVIDE RWT ADDRESSABILITY        R4 40664500
         USING RWLDSECT,WD         SHOW RWL ADDRESSABILITY     @OZ29180 40664600
         SPACE 1                                                     R4 40665000
INITRWT  LA    WB,7                RWT READER ELEMENTS               R4 40665500
         SLR   WC,WC               RWT READER ELEMENT COUNT          R4 40666000
         L     WD,=A($RWL)         GET RWL ADDRESS             @OZ29180 40666100
         SPACE 1                                                     R4 40666500
INRWTRD  STC   WC,RWTINDEX         SET DEVICE INDEX                  R4 40667000
         MVC   RWTSTAT(INRWTD1L),INRWTD1 SET REMAINING FIELDS        R4 40667500
         MVC   RWTSEL,RWLSEL       SET STANDARD SELECT BYTE    @OZ29180 40667600
         LA    R1,RWTRDEND         POINT TO NEXT READER ELEMENT      R4 40668000
         LA    WC,RWLEND-RWLDSECT(,WC) BUMP INDEX VALUE              R4 40668500
         LA    WD,RWLEND           POINT TO NEXT RWL ENTRY     @OZ29180 40668600
         BCT   WB,INRWTRD          LOOP THRU ALL RDR ELEMENTS        R4 40669000
         SPACE 1                                                     R4 40669500
         MVC   INRWTCL,=C'AJ'      SET                               R4 40670000
         MVI   INRWTLN,120          RWT                              R4 40670500
         LA    WC,(RWLEND-RWLDSECT)*7 PRINT                          R4 40671000
         BAL   WE,INRWTPP             ELEMENTS                       R4 40671500
         MVC   INRWTCL,=C'BK'      SET                               R4 40672000
         MVI   INRWTLN,80           RWT                              R4 40672500
         LA    WC,((7+7)*(RWLEND-RWLDSECT)) PUNCH                    R4 40673000
         BAL   WE,INRWTPP             ELEMENTS                       R4 40673500
         LA    R1,3(,R1)           ROUND UP TO NEXT                  R4 40674000
         N     R1,=F'-4'            FULLWORD BOUNDARY                R4 40674500
         BCT   WA,INITRWT          LOOP THRU ENTIRE RWT              R4 40675000
         SPACE 1                                                     R4 40675500
         B     INRWTEND            THEN BR TO NEXT SECTION           R4 40676000
         SPACE 1                                                     R4 40676500
INRWTPP  LA    WB,7                SET ELEMENT COUNT                 R4 40677000
         SPACE 1                                                     R4 40677500
INRWTPP1 STC   WC,RWTINDEX         SET DEVICE INDEX                  R4 40678000
         MVC   RWTSTAT(INRWTD2L),INRWTD2 SET REMAINING FIELDS        R4 40678500
         MVC   RWTSEL,RWLSEL       SET STANDARD SELECT BYTE    @OZ29180 40678600
         LA    R1,RWTPPEND         POINT TO NEXT ELEMENT             R4 40679000
         LA    WC,RWLEND-RWLDSECT(,WC) BUMP INDEX VALUE              R4 40679500
         LA    WD,RWLEND           POINT TO NEXT RWL ENTRY     @OZ29180 40679600
         BCT   WB,INRWTPP1         LOOP THRU ALL ELEMENTS            R4 40680000
         SPACE 1                                                     R4 40680500
         BR    WE                  THEN RETURN                       R4 40681000
         SPACE 1                                                     R4 40681500
         DROP  R1,WD               KILL RWT AND RWL BASE       @OZ29180 40682000
         EJECT                                                       R4 40682500
         SPACE 5                                                     R4 40683000
INRWTD1  DC    AL1(DCTHOLD),X'8000'  STATUS/ROUTE CODE         @OZ29180 40683500
         DC    AL1(80)               CARD RECORD LENGTH        @OZ29180 40683600
         DC    AL1(0),X'FF',X'FF'    SELECT/FEATURES           @OZ29180 40683700
         DC    AL1(0)                RESERVED                  @OZ29180 40683800
         DC    4X'8000'                                              R4 40684000
         DC    C'AA',AL1(0,15,0)                                     R4 40684500
INRWTD1L EQU   *-INRWTD1                                             R4 40685000
         SPACE 2                                                     R4 40685500
INRWTD2  DC    AL1(DCTHOLD),X'8000'  STATUS/ROUTE CODE         @OZ29180 40686000
INRWTLN  DC    AL1(*-*)              RECORD LENGTH             @OZ29180 40686100
         DC    AL1(0),X'FF',X'FF'    SELECT/FEATURES           @OZ29180 40686200
         DC    3XL4'00'                                              R4 40686500
         DC    AL1(DCTSUSPD,DCTPPSWF+DCTPPSWO)                       R4 40687000
INRWTCL  DC    CL2' ',CL34' '                                        R4 40687500
*                                  THIS CARD DELETED BY APAR   @OZ29180 40688000
         DC    X'00'                                                 R4 40688500
         DC    AL1(00,255)                                           R4 40689500
INRWTD2L EQU   *-INRWTD2                                             R4 40690500
         SPACE 5                                                     R4 40691000
INRWTEND NULL                                                        R4 40691500
         TITLE 'HASP INITIALIZATION -- NDQ ALLOCATION'               R4 40708000
*********************************************************************** 40708500
*                                                                     * 40709000
*        CREATE FIRST DESTINATION QUEUE ELEMENT                       * 40709500
*                                                                     * 40710000
*********************************************************************** 40710500
         SPACE 1                                                     R4 40711000
         USING NDQDSECT,R1                                           R4 40711500
         SPACE 1                                                     R4 40712000
INITNDQ  LA    R0,NDQSIZ           GET STORAGE                       R4 40712500
         ICM   R0,8,=AL1(229)       FOR DESTINATION                  R4 40713000
         GETMAIN R,LV=(0)            QUEUE ELEMENT                   R4 40713500
         XC    NDQ,NDQ             ZERO ELEMENT                      R4 40714000
         MVC   NDQNAME,=CL8'LOCAL' SET NAME                          R4 40714500
         ST    R1,$NDQ             SET POINTER                       R4 40715000
         B     NPLINIT             BR TO NEXT SECTION                R4 40715500
         SPACE 1                                                     R4 40716000
         DROP  R1                                                    R4 40716500
         EJECT                                                       R4 40717000
         SPACE 5                                                     R4 40717500
         LTORG                                                       R4 40718000
         TITLE 'HASP INITIALIZATION -- PARAMETER LIBRARY PROCESSING INIC40718500
               TIALIZATION'                                         R41 40719000
*********************************************************************** 40719500
*                                                                     * 40720000
*        PARAMETER LIBRARY PROCESSING INITIALIZATION                  * 40720500
*                                                                     * 40721000
*********************************************************************** 40721500
         SPACE 1                                                     R4 40722000
NPLINIT  BALR  BASE2,0             RE-ESTABLISH                      R4 40722500
         USING *,BASE2,BASE3,BASE4  LOCAL ADDRESSABILITY            R41 40723000
         SPACE 1                                                     R4 40723500
         LA    BASE3,2048(,BASE2)  SET UP SECOND                     R4 40724000
         LA    BASE3,2048(,BASE3)   BASE REGISTER                    R4 40724500
         LA    BASE4,2048(,BASE3)    AND THIRD                      R41 40724600
         LA    BASE4,2048(,BASE4)     BASE REGISTER                 R41 40724700
         OPEN  (HASPPARM,,HASPLIST,(OUTPUT))  OPEN PARMLIB DATA SETS R4 40725000
         L     R1,=A(HASPPARM)     POINT TO HASPPARM DCB            R41 40725100
         TM    DCBOFLGS-DCBDSECT(R1),DCBOFOPN  TEST HASPPARM        R41 40725500
         BO    NPLOPEN1            BRANCH IF OPEN                    R4 40726000
         L     R1,=A(NMSG450)      POINT TO WARNING MESSAGE          R4 40726500
         BAL   WE,NPLWTOR          ISSUE MSG, QUERY OPERATOR         R4 40727000
         OI    NPLFLAGS,NPLCONSL+NPLEOFSW  SHOW CONSOLE MODE/EOF    R41 40727500
         B     NPLNEXT             BR TO CONTINUE                   R41 40727600
         SPACE 3                                                     R4 40728000
NPLOPEN1 L     R1,=A(HASPLIST)     POINT TO HASPLIST DCB            R41 40728500
         TM    DCBOFLGS-DCBDSECT(R1),DCBOFOPN  TEST HASPLIST        R41 40728600
         BO    NPLNEXT             BR IF OPEN SUCCESSFUL            R41 40729000
         NI    $OPTSTAT,255-$OPTLIST  ELSE FORCE NOLIST OPTION       R4 40729500
         TITLE 'HASP INITIALIZATION -- PARAMETER STATEMENT PROCESSING RC40730000
               OUTINE SELECTION'                                    R41 40730500
         USING PTEDSECT,WB         PROVIDE PTE ADDRESSABILITY       R41 40730600
         SPACE 1                                                    R41 40730700
NPLNEXT  NULL                      PROCESS NEXT STATEMENT               40731000
         BAL   LINK,NPLGET         GET PARAMETER STATEMENT          R41 40731500
         B     NPLEND              BR IF 'END'/END-OF-FILE          R41 40732000
         SPACE 2                                                        40732500
         LA    R14,1               SET INCREMENT AND LIMIT          R41 40733000
         LA    R15,NCARD+70         FOR STATEMENT PROCESSING        R41 40733500
         SPACE 2                                                        40736000
NPLNEXT1 L     WC,=A(NPLTRT2)      POINT TO PARAMETER XLATE TABLE   R41 40736500
         MVI   C'.'(WC),0          ALLOW PERIOD AS LEGAL CHARACTER  R41 40737000
         MVI   C'-'(WC),1           AND DISALLOW HYPHEN             R41 40737500
         MVI   C'/'(WC),1            AND SLASH                      R41 40738000
         L     WB,=A(NPLPTBL)      POINT TO PARAMETER TABLE         R41 40738500
         LA    R0,NPLPTENT         GET NUMBER OF TABLE ENTRIES      R41 40739000
         SPACE 1                                                        40739500
NPLNEXT2 IC    R1,PTEKEYLN         GET LENGTH OF KEYWORD            R41 40740000
         BCTR  R1,0                REDUCE FOR EXECUTE               R41 40740100
         EX    R1,NPLCLCLC         EXECUTE COMPARE                      40740500
         BE    NPLNEXT3            BR IF NAME MATCHES STATEMENT     R41 40741000
         LA    WB,PTELENG(,WB)     GET NEXT TABLE ENTRY             R41 40741500
         BCT   R0,NPLNEXT2         TEST NEXT ENTRY                  R41 40742000
         B     NPLSSERR            ERROR IF NOT FOUND IN TABLE          40742500
         SPACE 3                                                     R4 40743000
NPLNEXT3 ICM   R1,7,PTEPRTN        GET PROCESSING ROUTINE ADDRESS   R41 40743500
         BNZR  R1                  BR IF PRESENT                    R41 40743600
I01     $ERROR                      ELSE CRUMP                      R41 40744000
         SPACE 3                                                    R41 40744100
NPLEND   TM    NPLFLAGS,NPLCONSL   ARE WE IN CONSOLE MODE...        R41 40744200
         BZ    NPLCLOSE            BR IF NO                         R41 40744300
         NI    NPLFLAGS,255-NPLCONSL  RESET CONSOLE INDICATOR       R41 40744400
         B     NPLCOMNT            BR TO LIST/LOG STATEMENT         R41 40744500
         SPACE 3                                                    R41 40744600
NPLCLCLC CLC   0(*-*,WA),PTEKEY    *** EXECUTE ONLY ***             R41 40745000
         TITLE 'HASP INITIALIZATION -- INITIALIZATION VARIABLE STATEMENC40745500
               T PROCESSING ROUTINES'                               R41 40746000
*********************************************************************** 40746500
*                                                                     * 40747000
*        NPLNUM -- ROUTINE TO PROCESS STATEMENTS SPECIFYING SPECIFIC  * 40747500
*                  NUMERIC VALUE                                      * 40748000
*                                                                     * 40748500
*********************************************************************** 40749000
         SPACE 1                                                    R41 40749500
NPLNUM   BAL   WC,NPLNUMBR         EXTRACT AND CHECK NUMBER         R41 40750000
         SPACE 1                                                    R41 40750500
NPLSTORE LH    WD,PTEDISPL         GET FIELD DISPLACEMENT           R41 40751000
         ALR   WD,BASE1            ADD HCT ORIGIN                   R41 40751500
         SPACE 1                                                    R41 40752000
NPLSTORX STC   R1,0(,WD)           ASSUME 1-BYTE FIELD              R41 40752500
         CLI   PTEFLDLN,1          TEST ASSUMPTION                  R41 40753000
         BE    NPLCOMNT            BR IF VALID TO LIST/LOG STMNT    R41 40753500
         STH   R1,0(,WD)           ASSUME 2-BYTE FIELD              R41 40754000
         CLI   PTEFLDLN,2          TEST ASSUMPTION                  R41 40754500
         BE    NPLCOMNT            BR IF VALID TO LIST/LOG STMNT    R41 40755000
         STCM  R1,7,0(WD)          ASSUME 3-BYTE FIELD              R41 40755500
         CLI   PTEFLDLN,3          TEST ASSUMPTION                  R41 40756000
         BE    NPLCOMNT            BR IF VALID TO LIST/LOG STMNT    R41 40756500
         ST    R1,0(,WD)           ASSUME 4-BYTE FIELD              R41 40757000
         CLI   PTEFLDLN,4          TEST ASSUMPTION                  R41 40757500
         BE    NPLCOMNT            BR IF VALID TO LIST/LOG STMNT    R41 40758000
I02     $ERROR                      ELSE CRUMP                      R41 40758500
         EJECT                                                      R41 40759000
*********************************************************************** 40759500
*                                                                     * 40760000
*        NPLX2 -- ROUTINE TO PROCESS STATEMENTS SPECIFYING SPECIFIC   * 40760500
*                 NUMERIC VALUE WHICH MUST BE ROUNDED TO MULTIPLE     * 40761000
*                 OF TWO                                              * 40761500
*                                                                     * 40762000
*********************************************************************** 40762500
         SPACE 1                                                    R41 40763000
NPLX2    BAL   WC,NPLNUMBR         EXTRACT AND CHECK NUMBER         R41 40763500
         LA    R1,1(,R1)           ENSURE MULTIPLE                  R41 40764000
         N     R1,=F'-2'            OF 2 BYTES                      R41 40764500
         B     NPLSTORE            BR TO STORE VALUE                R41 40765000
         SPACE 3                                                    R41 40765500
*********************************************************************** 40766000
*                                                                     * 40766500
*        NPLX8 -- ROUTINE TO PROCESS STATEMENTS SPECIFYING SPECIFIC   * 40767000
*                 NUMERIC VALUE WHICH MUST BE ROUNDED TO MULTIPLE     * 40767500
*                 OF EIGHT                                            * 40768000
*                                                                     * 40768500
*********************************************************************** 40769000
         SPACE 1                                                    R41 40769500
NPLX8    BAL   WC,NPLNUMBR         EXTRACT AND CHECK NUMBER         R41 40770000
         LA    R1,7(,R1)           ENSURE MULTIPLE                  R41 40770500
         N     R1,=F'-8'            OF 8 BYTES                      R41 40771000
         B     NPLSTORE            BR TO STORE VALUE                R41 40771500
         SPACE 3                                                    R41 40772000
*********************************************************************** 40772500
*                                                                     * 40773000
*        NPLINVRT -- ROUTINE TO PROCESS STATEMENTS SPECIFYING         * 40773500
*                    SPECIFIC NUMERIC VALUE WHOSE RECIPROCAL IS TO    * 40774000
*                    BE STORED                                        * 40774500
*                                                                     * 40775000
*********************************************************************** 40775500
         SPACE 1                                                    R41 40776000
NPLINVRT BAL   WC,NPLNUMBR         EXTRACT AND CHECK NUMBER         R41 40776500
         LNR   R1,R1               MAKE NEGATIVE                    R41 40777000
         B     NPLSTORE            BR TO STORE VALUE                R41 40777500
         EJECT                                                      R41 40778000
*********************************************************************** 40778500
*                                                                     * 40779000
*        NPLSWICH -- ROUTINE TO PROCESS STATEMENTS SPECIFYING A       * 40779500
*                    BINARY VALUE (YES/NO)                            * 40780000
*                                                                     * 40780500
*********************************************************************** 40781000
         SPACE 1                                                    R41 40781500
NPLSWICH BAL   R1,NPLSETWA         ADJUST WA FOR COMMON CODE        R41 40782000
         CLI   8(WA),C'='          TEST NEXT CHARACTER              R41 40782500
         BNE   NPLSSERR            INVALID IF NOT EQUAL SIGN        R41 40783000
         LA    WA,8(,WA)           STEP OVER KEYWORD                R41 40783500
         LA    WE,1(,WA)           SAVE FIELD ORIGIN ADDRESS        R41 40784000
         SPACE 1                                                    R41 40784500
NPLSWTST BXH   WA,R14,NPLSSERR     LOCATE                           R41 40785000
         CLI   0(WA),C' '           END OF                          R41 40785500
         BNE   NPLSWTST              FIELD                          R41 40786000
         SPACE 1                                                    R41 40786500
         LH    WD,PTEDISPL         GET FIELD DISPLACEMENT           R41 40787000
         ALR   WD,BASE1            ADD HCT ORIGIN                   R41 40787500
         CLC   =C'Y ',0(WE)        IF OPTION                        R41 40788000
         BE    NPLYES               BIT TO                          R41 40788500
         CLC   =C'YES ',0(WE)        BE SET,                        R41 40789000
         BE    NPLYES                 BR TO SET IT                  R41 40789500
         CLC   =C'N ',0(WE)        IF OPTION BIT                    R41 40790000
         BE    NPLNO                NOT TO BE                       R41 40790500
         CLC   =C'NO ',0(WE)         RESET,                         R41 40791000
         BNE   NPLSSERR               BR TO ISSUE DIAGNOSTIC        R41 40791500
         SPACE 1                                                    R41 40792000
NPLNO    IC    R1,PTESWNO          GET RESET INFO                   R41 40792500
         EX    R1,NPLRESET         RESET SWITCH                     R41 40793000
         B     NPLCOMNT            BR TO LIST/LOG STATEMENT         R41 40793500
         SPACE 1                                                    R41 40794000
NPLYES   IC    R1,PTESWYES         GET SET INFO                     R41 40794500
         EX    R1,NPLSET           SET SWITCH                       R41 40795000
         B     NPLCOMNT            BR TO LIST/LOG STATEMENT         R41 40795500
         SPACE 1                                                    R41 40796000
NPLSET   OI    0(WD),*-*           *** EXECUTE ONLY ***             R41 40796500
NPLRESET NI    0(WD),*-*           *** EXECUTE ONLY ***             R41 40797000
         EJECT                                                      R41 40797500
*********************************************************************** 40798000
*                                                                     * 40798500
*        NPLCHAR -- ROUTINE TO PROCESS STATEMENTS SPECIFYING SPECIFIC * 40799000
*                   CHARACTER STRING                                  * 40799500
*                                                                     * 40800000
*********************************************************************** 40800500
         SPACE 1                                                    R41 40801000
NPLCHAR  BAL   WC,NPLID            EXTRACT AND CHECK CHAR STRING    R41 40801500
         SPACE 1                                                    R41 40802000
NPLSTORC LH    WD,PTEDISPL         GET FIELD DISPLACEMENT           R41 40802500
         ALR   WD,BASE1            ADD HCT ORIGIN                   R41 40803000
         SPACE 1                                                    R41 40803500
NPLSTORO SLR   WC,WC               CLEAR FOR INSERT                 R41 40804000
         IC    WC,PTEFLDLN         GET FIELD LENGTH                 R41 40804500
         BCTR  WC,0                REDUCE FOR EXECUTE               R41 40805000
         EX    WC,NPLMOVEC         MOVE CHARACTER STRING TO FIELD   R41 40805500
         B     NPLCOMNT            BR TO LIST/LOG STATEMENT         R41 40806000
         SPACE 1                                                    R41 40806500
NPLMOVEC MVC   0(*-*,WD),NPLWORK   *** EXECUTE ONLY ***             R41 40807000
         SPACE 3                                                    R41 40807500
*********************************************************************** 40808000
*                                                                     * 40808500
*        NPLJCL -- ROUTINE TO PROCESS STATEMENTS SPECIFYING SPECIFIC  * 40809000
*                  CHARACTER STRING, LIMITING VALID CHARACTERS TO     * 40809500
*                  THOSE ALLOWED IN JCL NAMES/KEYWORDS                * 40810000
*                                                                     * 40810500
*********************************************************************** 40811000
         SPACE 1                                                    R41 40811500
NPLJCL   MVI   C'.'(WC),1          DISALLOW PERIOD AS LEGAL CHAR    R41 40812000
         BAL   WC,NPLID            EXTRACT CHARACTER STRING         R41 40812500
         CLI   NPLWORK,C'0'        TEST 1ST CHARACTER               R41 40813000
         BNL   NPLCHERR            BR IF NUMBER TO ISSUE DIAGNOSTIC R41 40813500
         B     NPLSTORC             ELSE BR TO STORE VALUE          R41 40814000
         EJECT                                                      R41 40814500
NPLBACK  NULL                      PARAMETER LIBRARY &BSPACE  STATEMENT 40815000
         LA    WA,7(,WA)           POINT TO 1ST HEX CHARACTER - 1   R41 40815500
         BAL   WE,NREPHEX          ENSURE 1ST HEX DIGIT VALID       R41 40816000
         MVO   NREPDATA(1),NREPCHAR  SAVE ZONE NIBBLE               R41 40816500
         BAL   WE,NREPHEX          ENSURE 2ND HEX DIGIT VALID       R41 40817000
         CLI   1(WA),C' '          TEST TERMINATOR CHARACTER        R41 40817500
         BNE   NREPERR             ILLEGAL IF NOT BLANK             R41 40818000
         MVN   NREPDATA(1),NREPCHAR  SAVE NUMERIC NIBBLE            R41 40818500
         MVC   $BSPACE,NREPDATA    UPDATE BACKSPACE CHARACTER       R41 40819000
         B     NPLCOMNT            BR TO LIST/LOG STATEMENT         R41 40819500
         SPACE 3                                                    R41 40820000
NPLCOMCH NULL  ,                   &CCOMCHR, &RCOMCHR STATEMENTS    R41 40820500
         LA    R1,NPLWORK          POINT TO WORK AREA               R41 40821000
         BAL   WE,NPLCCOM1         EXTRACT CHARACTER                R41 40821500
         L     WE,=A(NPLTRT1)      POINT TO TRANSLATE TABLE         R41 40822000
         TRT   NPLWORK(1),0(WE)    TEST CHARACTER                   R41 40822500
         BNZ   NPLCHERR            BR IF ILLEGAL                    R41 40823000
         CLI   NPLWORK,X'4A'       RETEST CHARACTER                 R41 40823500
         BL    NPLCHERR            BR IF ILLEGAL                    R41 40824000
         CLI   NPLWORK,X'7F'       RETEST CHARACTER                 R41 40824500
         BH    NPLCHERR                                             R41 40825000
         B     NPLSTORC             ELSE BR TO STORE VALUE          R41 40825500
         EJECT                                                      R41 40826000
NPLCKSPL NULL  ,                   &CHKPT, &SPOOL STATEMENTS        R41 40826500
         MVI   C'-'(WC),0          ALLOW HYPHEN AS LEGAL CHARACTER  R41 40827000
         MVI   C'.'(WC),1           AND DISALLOW PERIOD             R41 40827500
         B     NPLCHAR             BR TO COMMON PROCESSING          R41 40828000
         SPACE 3                                                    R41 40828500
NPLDELAY NULL                      PARAMETER LIBRARY &DELAYTM STATEMENT 40829000
         BAL   WC,NPLNUMBR         EXTRACT AND CHECK NUMBER         R41 40829500
         SLL   R1,12               ADJUST VALUE                     R41 40830000
         B     NPLSTORE            BR TO STORE VALUE                R41 40830500
         SPACE 3                                                    R41 40831000
NPLPRI   NULL  ,                   &PRIHIGH, &PRILOW STATEMENTS     R41 40831500
         BAL   WC,NPLNUMBR         EXTRACT AND CHECK NUMBER         R41 40832000
         SLL   R1,4                MULTIPLY BY 16                   R41 40832500
         B     NPLSTORE            BR TO STORE VALUE                R41 40833000
         EJECT                                                      R41 40852000
NPLROPSL NULL                      PARAMETER LIBRARY &RDROPSL STATEMENT 40852500
         L     WD,=A(NRDROPSL)     POINT TO LOGON 'RDR' PARMS       R41 40853000
         B     NPLRDROP            BR TO CONTINUE                   R41 40853500
         SPACE 3                                                    R41 40854000
NPLROPST NULL                      PARAMETER LIBRARY &RDROPST STATEMENT 40854500
         L     WD,=A(NRDROPST)     POINT TO STC 'RDR' PARMS         R41 40855000
         B     NPLRDROP            BR TO CONTINUE                   R41 40855500
         SPACE 3                                                    R41 40856000
NPLROPSU NULL                      PARAMETER LIBRARY &RDROPSU STATEMENT 40856500
         L     WD,=A(NRDROPSU)     POINT TO BATCH JOB 'RDR' PARMS   R41 40857000
         SPACE 1                                                    R41 40857500
NPLRDROP BAL   WC,NPLID            EXTRACT 'RDR' PARM FIELD         R41 40858000
         BAL   WE,NPLRDVAL         VALIDATE 'RDR' PARM FIELD        R41 40858500
         B     NPLCHERR            BR IF ILLEGAL    +0              R41 40859000
         B     NPLSTORO            BR TO SET VALUE  +4              R41 40859500
         SPACE 3                                                    R41 40860000
NPLRPRI  NULL                      PARAMETER LIBRARY &RPRI(N) STATEMENT 40860500
         BAL   WE,NPLINDEX         GET TABLE OFFSET IN WD           R41 40861000
         AL    WD,$RTIMTAB         ADD TABLE ORIGIN                 R41 40861500
         BAL   WC,NPLNUMB          EXTRACT AND CHECK NUMBER         R41 40862000
         STC   R1,0(,WD)           STORE FIELD VALUE                R41 40862500
         B     NPLCOMNT            BR TO LIST/LOG STATEMENT         R41 40863000
         SPACE 3                                                    R41 40863500
NPLRPRT  NULL                      PARAMETER LIBRARY &RPRT(N) STATEMENT 40864000
         BAL   WE,NPLINDEX         GET TABLE OFFSET IN WD           R41 40864500
         AL    WD,$RTIMTAB         ADD TABLE OFFSET                 R41 40865000
         BAL   WC,NPLNUMB          EXTRACT AND CHECK NUMBER         R41 40865500
         MH    R1,=H'60'           ADJUST NUMBER                    R41 40866000
         STCM  R1,7,1(WD)          STORE FIELD VALUE                R41 40866500
         B     NPLCOMNT            BR TO LIST/LOG STATEMENT         R41 40867000
         EJECT                                                      R41 40867500
NPLSID   NULL                      PARAMETER LIBRARY &SID     STATEMENT 40868000
         MVI   C'.'(WC),1          DISALLOW PERIOD AS LEGAL CHAR    R41 40868500
         B     NPLCHAR             BR TO COMMON PROCESSING          R41 40869000
         SPACE 3                                                    R41 40869500
NPLXLIN  NULL                      PARAMETER LIBRARY &XLIN(N) STATEMENT 40870000
         BAL   WE,NPLINDEX         GET TABLE OFFSET IN WD           R41 40870500
         AL    WD,=A(NXPRITAB)     ADD TABLE ORIGIN                 R41 40871000
         BAL   WC,NPLNUMB          EXTRACT AND CHECK NUMBER         R41 40871500
         STCM  R1,7,1(WD)          STORE FIELD VALUE                R41 40872000
         B     NPLCOMNT            BR TO LIST/LOG STATEMENT         R41 40872500
         SPACE 3                                                    R41 40873000
NPLXPRI  NULL                      PARAMETER LIBRARY &XPRI(N) STATEMENT 40873500
         BAL   WE,NPLINDEX         GET TABLE OFFSET IN WD           R41 40874000
         AL    WD,=A(NXPRITAB)     ADD TABLE ORIGIN                 R41 40874500
         BAL   WC,NPLNUMB          EXTRACT AND CHECK NUMBER         R41 40875000
         SLL   R1,4                MULTIPLY BY 16                   R41 40875500
         STC   R1,0(,WD)           STORE FIELD VALUE                R41 40876000
         B     NPLCOMNT            BR TO LIST/LOG STATEMENT         R41 40876500
         SPACE 3                                                    R41 40877000
NPLINDEX CLI   5(WA),C'('          WAS KEYWORD SUBSCRIPTED...       R41 40877500
         BNE   NPLSSERR            BR TO ISSUE DIAGNOSTIC      @OZ30738 40878000
         CLI   7(WA),C')'          TEST FOR SUBSCRIPT TERMINATOR    R41 40878500
         BNE   NPLDXERR            ILLEGAL IF NO                    R41 40879000
         CLI   6(WA),C'1'          IF                               R41 40879500
         BL    NPLDXERR             SUBSCRIPT                       R41 40880000
         CLI   6(WA),C'9'            INVALID,                       R41 40880500
         BH    NPLDXERR               BR TO ISSUE DIAGNOSTIC        R41 40881000
         IC    WD,6(,WA)           WD = SUBSCRIPT                   R41 40881500
         N     WD,=F'15'                 CONVERTED                  R41 40882000
         BCTR  WD,0                       TO TABLE                  R41 40882500
         SLL   WD,2                        OFFSET                   R41 40883000
         BR    WE                  RETURN                           R41 40883500
         SPACE 1                                                    R41 40884000
NPLDXERR L     R1,=A(NPLDXERM)     POINT TO ILLEGAL SUBSCRIPT MSG   R41 40884500
         B     NPLERMSG             AND BR TO ISSUE DIAGNOSTIC      R41 40885000
         EJECT                                                      R41 40885500
*********************************************************************** 40886000
*                                                                     * 40886500
*        NPLNUMBR -- ROUTINE TO EXTRACT AND VALIDATE NUMERIC VALUE    * 40887000
*                                                                     * 40887500
*********************************************************************** 40888000
         SPACE 1                                                    R41 40888500
NPLNUMBR BAL   R1,NPLSETWA         ADJUST WA FOR COMMON CODE        R41 40889000
         SPACE 1                                                    R41 40889500
NPLNUMB  BAL   WE,NPLDCNVT         EXTRACT NUMBER                   R41 40890000
         B     NPLBADNO            BR IF ILLEGAL NUMBER       +0    R41 40890500
         CLI   0(WA),C' '          IF TERMINATOR IS A BLANK,  +4    R41 40891000
         BE    NRANGECK             BR TO CHECK FOR WITHIN RANGE    R41 40891500
         CLR   WA,R15              IF NOT END OF CARD,              R41 40892000
         BNH   NPLDCERR             BR TO ISSUE DIAGNOSTIC          R41 40892500
         SPACE 1                                                    R41 40893000
NRANGECK CH    R1,PTELOVAL         IF                               R41 40893500
         BL    NPLBADNO             WITHIN                          R41 40894000
         C     R1,PTEHIVAL           VALID RANGE,                   R41 40894500
         BNHR  WC                     RETURN                        R41 40895000
         SPACE 1                                                    R41 40895500
NPLBADNO LH    LINK,PTELOVAL       GET LOWER LIMIT                  R41 40896000
         L     R0,PTEHIVAL         GET UPPER LIMIT                  R41 40896500
         SPACE 1                                                    R41 40897000
NRANGERR L     R1,=A(NRANGERM)     POINT TO ILLEGAL RANGE MSG       R41 40897500
         MVC   17(15,R1),=X'2021206B4020202020202020202120'         R41 40898000
         CVD   LINK,NPLLWORK       FILL IN                          R41 40898500
         ED    16(4,R1),NPLLWORK+6  LOWER LIMIT                     R41 40899000
         CVD   R0,NPLDBL           FILL IN                          R41 40899500
         MVO   NPLLWORK,NPLDBL      UPPER                           R41 40900000
         ED    21(11,R1),NPLLWORK+2  LIMIT                          R41 40900500
         B     NPLERMSG            THEN BR TO ISSUE DIAGNOSTIC      R41 40901000
         SPACE 3                                                    R41 40901500
*********************************************************************** 40902000
*                                                                     * 40902500
*        NPLSETWA -- SUBROUTINE TO ADJUST KEYWD ADDR FOR COMMON CODE  * 40903000
*                                                                     * 40903500
*********************************************************************** 40904000
         SPACE 1                                                    R41 40904500
NPLSETWA LA    R0,8                SET TO MAXIMUM KEYWORD LENGTH    R41 40905000
         SPACE 1                                                    R41 40905500
NPLTSTWA CLM   R0,1,PTEKEYLN       TEST KEYWORD LENGTH              R41 40906000
         BER   R1                  RETURN IF MATCH                  R41 40906500
         BCTR  WA,0                BACK UP KEYWORD POINTER          R41 40907000
         BCT   R0,NPLTSTWA         REDUCE LENGTH AND LOOP           R41 40907500
         SPACE 1                                                    R41 40908000
I03     $ERROR                     ERROR IN PARAMETER TABLE         R41 40908500
         EJECT                                                      R41 40909000
*********************************************************************** 40909500
*                                                                     * 40910000
*        NPLID -- SUBROUTINE TO EXTRACT AND VALIDATE EBCDIC VALUE     * 40910500
*                                                                     * 40911000
*********************************************************************** 40911500
         SPACE 1                                                    R41 40912000
NPLID    BAL   R1,NPLSETWA         ADJUST WA FOR COMMON CODE        R41 40912500
         CLI   8(WA),C'='          TEST NEXT CHARACTER              R41 40913000
         BNE   NPLSSERR            INVALID IF NOT EQUAL SIGN        R41 40913500
         LA    WA,8(,WA)           STEP OVER KEYWORD                R41 40914000
         LA    WE,1(,WA)           SAVE FIELD ORIGIN ADDRESS        R41 40914500
         SPACE 1                                                    R41 40915000
NPLIDEND BXH   WA,R14,NPLSSERR     LOCATE                           R41 40915500
         CLI   0(WA),C' '           END OF                          R41 40916000
         BNE   NPLIDEND              FIELD                          R41 40916500
         SPACE 1                                                    R41 40917000
         SLR   WA,WE               COMPUTE FIELD LENGTH             R41 40917500
         CH    WA,PTELOVAL         IF FIELD LENGTH                  R41 40918000
         BL    NPLCHERR             NOT WITHIN                      R41 40918500
         C     WA,PTEHIVAL           VALID RANGE,                   R41 40919000
         BH    NPLCHERR               BR TO ISSUE DIAGNOSTIC        R41 40919500
         MVC   NPLWORK,NPLBLNKS    INITIALIZE FIELD TO BLANKS       R41 40920000
         LTR   WA,WA               TEST FOR NULL VALUE              R41 40920500
         BZR   WC                  RETURN IF YES                    R41 40921000
         BCTR  WA,0                LEFT JUSTIFY FIELD               R41 40921500
         EX    WA,NPLIDMV           IN NPLWORK                      R41 40922000
         L     WE,=A(NPLTRT2)      POINT TO PARAMETER XLATE TABLE   R41 40922500
         EX    WA,NPLIDTRT         SCAN FOR ILLEGAL CHARACTERS      R41 40923000
         BZR   WC                  RETURN IF NONE                   R41 40923500
         SPACE 1                                                    R41 40924000
NPLCHERR L     R1,=A(NPLCHERM)     POINT TO INVALID CHARACTER MSG   R41 40924500
         B     NPLERMSG             AND BR TO ISSUE DIAGNOSTIC      R41 40925000
         SPACE 1                                                    R41 40925500
NPLIDMV  MVC   NPLWORK(*-*),0(WE)  *** EXECUTE ONLY ***             R41 40926000
NPLIDTRT TRT   NPLWORK(*-*),0(WE)  *** EXECUTE ONLY ***             R41 40926500
         TITLE 'HASP INITIALIZATION -- INITIALIZATION PARAMETER STATEMEC40927000
               NT DISPLAY PROCESSING ROUTINES'                      R41 40927500
NPLSHOW  NULL                      PARAMETER LIBRARY DISPLAY  STATEMENT 40928000
         LA    WA,1(,WA)           SKIP                             R41 40928500
         CLI   0(WA),C' '           OVER                            R41 40929000
         BNE   NPLSHOW               KEYWORD                        R41 40929500
         SPACE 1                                                    R41 40930000
NPLSHKEY BXH   WA,R14,NPLSSERR     LOCATE NAME                      R41 40930500
         CLI   0(WA),C' '           OF FIELD TO BE                  R41 40931000
         BE    NPLSHKEY              DISPLAYED                      R41 40931500
         SPACE 1                                                    R41 40932000
         CLI   0(WA),C''''         TEST FOR MESSAGE                 R41 40932500
         BE    NPLSHMSG            BR IF YES                        R41 40933000
         L     WB,=A(NPLPTBL)      POINT TO PARAMETER TABLE         R41 40933500
         LA    R0,NPLPTENT         GET NUMBER OF TABLE ENTRIES      R41 40934000
         SLR   WC,WC               CLEAR FOR INSERTS                R41 40934500
         SPACE 1                                                    R41 40935000
NPLSHNX1 IC    WC,PTEKEYLN         GET LENGTH OF KEYWORD            R41 40935500
         BCTR  WC,0                REDUCE FOR EXECUTE               R41 40936000
         EX    WC,NPLCLCLC         EXECUTE COMPARE                  R41 40936500
         BE    NPLSHNX2            BR IF NAME MATCHES STATEMENT     R41 40937000
         LA    WB,PTELENG(,WB)     GET NEXT TABLE ENTRY             R41 40937500
         BCT   R0,NPLSHNX1         TEST NEXT ENTRY                  R41 40938000
         SPACE 1                                                    R41 40938500
NPLSHER1 LA    R1,NPLDSAVE         FAKE CONTROL BLOCK ADDRESS  @OZ30738 40939000
         B     NPLDVERR             AND BR TO ISSUE DIAGNOSTIC      R41 40939500
         SPACE 1                                                    R41 40940000
NPLSHNX2 LR    R1,WA               RELOAD FIELD ADDRESS             R41 40940500
         SPACE 1                                                    R41 40941000
NPLSHNX3 BXH   R1,R14,NPLSSERR     LOCATE                           R41 40941500
         CLI   0(R1),C' '           END OF                          R41 40942000
         BNE   NPLSHNX3              FIELD                          R41 40942500
         SPACE 1                                                    R41 40943000
         TM    PTEFLG1,PTE1SHOW    IS FIELD DISPLAYABLE...          R41 40943500
         BZ    NPLSHERR            BR IF NO                         R41 40944000
         MVC   NPLWORK,NPLBLNKS    SET WORK AREA TO BLANKS          R41 40944500
         LH    WD,PTEDISPL         GET FIELD DISPLACEMENT           R41 40945000
         ALR   WD,BASE1            ADD HCT ORIGIN                   R41 40945500
         ICM   R1,7,PTEDRTN        GET DISPLAY ROUTINE ADDRESS      R41 40946000
         BNZR  R1                  BR IF PRESENT                    R41 40946500
         SPACE 1                                                    R41 40947000
NPLSHERR L     R1,=A(NPLSHERM)     POINT TO ERROR MESSAGE           R41 40947500
         B     NPLERMSG             AND BR TO ISSUE DIAGNOSTIC      R41 40948000
         EJECT                                                      R41 40948500
*********************************************************************** 40949000
*                                                                     * 40949500
*        NPLSHMSG -- ROUTINE TO DISPLAY MESSAGE TO OPERATOR           * 40950000
*                                                                     * 40950500
*********************************************************************** 40951000
         SPACE 1                                                    R41 40951500
NPLSHMSG SLR   WC,WC               CLEAR MESSAGE LENGTH             R41 40952000
         TM    NPLFLAGS,NPLCONSL   ARE WE IN CONSOLE MODE...        R41 40952500
         BZ    NPLSHQ              BR IF NO                         R41 40953000
         AL    WA,=A(NLOGTEXT-NCARD) ELSE USE                       R41 40953500
         AL    R15,=A(NLOGTEXT-NCARD) NON-UPPER-CASE TEXT           R41 40954000
         SPACE 1                                                    R41 40954500
NPLSHQ   LR    WD,WA               SAVE ADDRESS OF START OF TEXT    R41 40955000
         SPACE 1                                                    R41 40955500
NPLSHQ1  BXH   WA,R14,NPLSSERR     GET NEXT CHARACTER               R41 40956000
         LA    WC,1(,WC)           BUMP LENGTH                      R41 40956500
         CLI   0(WA),C''''         TEST FOR CLOSING QUOTE           R41 40957000
         BNE   NPLSHQ1             LOOP IF NO                       R41 40957500
         CLI   1(WA),C''''         TEST FOR INTERNAL QUOTE          R41 40958000
         BNE   NPLSHQ2             BR IF NO TO DISPLAY MESSAGE      R41 40958500
         LR    R1,R15              OVERLAY                          R41 40959000
         SLR   R1,WA                INTERNAL                        R41 40959500
         EX    R1,NPLSHQM1           QUOTE                          R41 40960000
         B     NPLSHQ1             BR TO RESUME SCAN                R41 40960500
         SPACE 1                                                    R41 40961000
NPLSHQ2  BCT   WC,NPLSHQ3          BR IF NON-NULL MESSAGE           R41 40961500
         B     NPLCOMNT             ELSE BR TO LIST/LOG STATEMENT   R41 40962000
         SPACE 1                                                    R41 40962500
NPLSHQ3  L     R1,=A(NLSTMSG)      POINT TO DISPLAY MESSAGE         R41 40963000
         MVC   NLSTTXT-NLSTMSG(,R1),NPLBLNKS  CLEAR MESSAGE AREA    R41 40963500
         BCTR  WC,0                REDUCE FOR EXECUTE               R41 40964000
         EX    WC,NPLSHQM2         MOVE MESSAGE INTO DISPLAY AREA   R41 40964500
        $$WTO  (R1)                ISSUE MESSAGE TO OPERATOR        R41 40965000
         B     NPLCOMNT            BR TO LIST/LOG STATEMENT         R41 40965500
         SPACE 1                                                    R41 40966000
NPLSHQM1 MVC   0(*-*,WA),1(WA)                *** EXECUTE ONLY ***  R41 40966500
NPLSHQM2 MVC   NLSTTXT-NLSTMSG(*-*,R1),1(WD)  *** EXECUTE ONLY ***  R41 40967000
         EJECT                                                      R41 40967500
*********************************************************************** 40968000
*                                                                     * 40968500
*        NPLSHNUM -- ROUTINE TO DISPLAY NUMERIC VALUE TO OPERATOR     * 40969000
*                                                                     * 40969500
*********************************************************************** 40970000
         SPACE 1                                                    R41 40970500
NPLSHNUM SLR   R0,R0               CLEAR FOR INSERT                 R41 40971000
         IC    R0,0(,WD)           ASSUME 1-BYTE FIELD              R41 40971500
         CLI   PTEFLDLN,1          TEST ASSUMPTION                  R41 40972000
         BE    NPLSHOWN            BR IF VALID                      R41 40972500
         ICM   R0,3,0(WD)          ASSUME 2-BYTE FIELD              R41 40973000
         CLI   PTEFLDLN,2          TEST ASSUMPTION                  R41 40973500
         BE    NPLSHOWN            BR IF VALID                      R41 40974000
         ICM   R0,7,0(WD)          ASSUME 3-BYTE FIELD              R41 40974500
         CLI   PTEFLDLN,3          TEST ASSUMPTION                  R41 40975000
         BE    NPLSHOWN            BR IF VALID                      R41 40975500
         L     R0,0(,WD)           ASSUME 4-BYTE FIELD              R41 40976000
         CLI   PTEFLDLN,4          TEST ASSUMPTION                  R41 40976500
         BNE   I02                 BR IF INVALID (TABLE ERROR)      R41 40977000
         LPR   R0,R0               ENSURE NUMBER IS POSITIVE        R41 40977500
         SPACE 1                                                    R41 40978000
NPLSHOWN BAL   WE,NPLSHEDT         EDIT VALUE INTO NPLWORK          R41 40978500
         B     NPLSHWTO            BR TO DISPLAY VALUE              R41 40979000
         SPACE 3                                                    R41 40979500
*********************************************************************** 40980000
*                                                                     * 40980500
*        NPLSHEDT -- SUBROUTINE TO EDIT NUMERIC VALUE INTO NPLWORK    * 40981000
*                                                                     * 40981500
*********************************************************************** 40982000
         SPACE 1                                                    R41 40982500
NPLSHEDT LA    R1,NPLWORK          POINT TO WORK AREA               R41 40983000
         SPACE 1                                                    R41 40983500
NPLSHED2 CVD   R0,NPLDBL           CONVERT VALUE TO DECIMAL         R41 40984000
         UNPK  0(8,R1),NPLDBL      UNPACK INTO WORK AREA            R41 40984500
         OI    7(R1),C'0'          MAKE DISPLAYABLE                 R41 40985000
         SPACE 1                                                    R41 40985500
NPLSHNXT CLI   1(R1),C' '          TEST FOR END OF FIELD            R41 40986000
         BER   WE                  RETURN IF YES                    R41 40986500
         CLI   0(R1),C'0'          TEST FOR HIGH-ORDER ZERO         R41 40987000
         BNER  WE                  RETURN IF NO                     R41 40987500
         MVC   0(8,R1),1(R1)       SHIFT OUT HIGH-ORDER ZERO        R41 40988000
         B     NPLSHNXT            CONTINUE                         R41 40988500
         EJECT                                                      R41 40989000
*********************************************************************** 40989500
*                                                                     * 40990000
*        NPLSHCH -- ROUTINE TO DISPLAY EBCDIC VALUE TO OPERATOR       * 40990500
*                                                                     * 40991000
*********************************************************************** 40991500
         SPACE 1                                                    R41 40992000
NPLSHCH  IC    R1,PTEFLDLN         GET FIELD LENGTH                 R41 40992500
         BCTR  R1,0                REDUCE FOR EXECUTE               R41 40993000
         EX    R1,NPLSHMOV         MOVE VALUE TO NPLWORK            R41 40993500
         B     NPLSHWTO            BR TO DISPLAY VALUE              R41 40994000
         SPACE 1                                                    R41 40994500
NPLSHMOV MVC   NPLWORK(*-*),0(WD)  *** EXECUTE ONLY ***             R41 40995000
         SPACE 3                                                    R41 40995500
*********************************************************************** 40996000
*                                                                     * 40996500
*        NPLSHOPT -- ROUTINE TO DISPLAY OPTION VALUE TO OPERATOR      * 40997000
*                                                                     * 40997500
*********************************************************************** 40998000
         SPACE 1                                                    R41 40998500
NPLSHOPT MVC   NPLWORK(2),=C'NO '  ASSUME SWITCH NOT SET            R41 40999000
         IC    R1,PTESWYES         GET 'ON' VALUE                   R41 40999500
         EX    R1,NPLSHSWT         IS SWITCH ON...                  R41 41000000
         BZ    NPLSHWTO            BR IF NO                         R41 41000500
         MVC   NPLWORK(3),=C'YES '  ELSE SET 'YES'                  R41 41001000
         SPACE 1                                                    R41 41001500
NPLSHWTO L     R1,=A(NLSTMSG)      POINT TO DISPLAY MESSAGE         R41 41002000
         MVC   NLSTTXT-NLSTMSG(,R1),NPLBLNKS  CLEAR MESSAGE AREA    R41 41002500
         MVC   NLSTKEY-NLSTMSG(,R1),PTEKEY  MOVE IN KEYWORD         R41 41003000
         LA    WC,NLSTKEY+1-NLSTMSG(WC,R1)  SKIP OVER KEYWORD       R41 41003500
         SPACE 1                                                    R41 41004000
NPLSHMEQ MVI   0(WC),C'='          SET EQUAL SIGN                   R41 41004500
         MVC   1(L'NPLWORK,WC),NPLWORK  MOVE IN FIELD VALUE         R41 41005000
        $$WTO  (R1)                DISPLAY FIELD VALUE              R41 41005500
         B     NPLCOMNT            BR TO LIST/LOG STATEMENT         R41 41006000
         SPACE 1                                                    R41 41006500
NPLSHSWT TM    0(WD),*-*           *** EXECUTE ONLY ***             R41 41007000
         EJECT                                                      R41 41021500
NPLDRPRI CLI   5(WA),C'('          TEST FOR SUBSCRIPT               R41 41022000
         BNE   NPLSHER1            BR TO ISSUE DIAGNOSTIC      @OZ30738 41022500
         BAL   WE,NPLINDEX         GET TABLE OFFSET IN WD           R41 41023000
         AL    WD,$RTIMTAB         ADD TABLE ORIGIN                 R41 41023500
         SLR   R0,R0               CLEAR FOR INSERT                 R41 41024000
         IC    R0,0(,WD)           GET FIELD VALUE                  R41 41024500
         B     NPLDNDX             BR TO EDIT VALUE                 R41 41025000
         SPACE 3                                                    R41 41025500
NPLDRPRT CLI   5(WA),C'('          TEST FOR SUBSCRIPT               R41 41026000
         BNE   NPLSHER1            BR TO ISSUE DIAGNOSTIC      @OZ30738 41026500
         BAL   WE,NPLINDEX         GET TABLE OFFSET IN WD           R41 41027000
         AL    WD,$RTIMTAB         ADD TABLE ORIGIN                 R41 41027500
         SLR   R1,R1               CLEAR FOR INSERT                 R41 41028000
         ICM   R1,7,1(WD)          GET FIELD VALUE                  R41 41028500
         SLR   R0,R0               CLEAR FOR DIVIDE                 R41 41029000
         D     R0,=F'60'           DIVIDE BY 60                     R41 41029500
         LR    R0,R1               MOVE QUOTIENT TO R0              R41 41030000
         B     NPLDNDX             BR TO EDIT VALUE                 R41 41030500
         SPACE 3                                                    R41 41031000
NPLDXLIN CLI   5(WA),C'('          TEST FOR SUBSCRIPT               R41 41031500
         BNE   NPLSHER1            BR TO ISSUE DIAGNOSTIC      @OZ30738 41032000
         BAL   WE,NPLINDEX         GET TABLE OFFSET IN WD           R41 41032500
         AL    WD,=A(NXPRITAB)     ADD TABLE ORIGIN                 R41 41033000
         SLR   R0,R0               CLEAR FOR INSERT                 R41 41033500
         ICM   R0,7,1(WD)          GET FIELD VALUE                  R41 41034000
         B     NPLDNDX             BR TO EDIT VALUE                 R41 41034500
         SPACE 3                                                    R41 41035000
NPLDXPRI CLI   5(WA),C'('          TEST FOR SUBSCRIPT               R41 41035500
         BNE   NPLSHER1            BR TO ISSUE DIAGNOSTIC      @OZ30738 41036000
         BAL   WE,NPLINDEX         GET TABLE OFFSET IN WD           R41 41036500
         AL    WD,=A(NXPRITAB)     ADD TABLE ORIGIN                 R41 41037000
         SLR   R0,R0               CLEAR FOR INSERT                 R41 41037500
         IC    R0,0(,WD)           GET FIELD VALUE                  R41 41038000
         SRL   R0,4                DIVIDE BY 16                     R41 41038500
         SPACE 1                                                    R41 41039000
NPLDNDX  BAL   WE,NPLSHEDT         EDIT VALUE INTO NPLWORK          R41 41039500
         L     R1,=A(NLSTMSG)      POINT TO DISPLAY MESSAGE         R41 41040000
         MVC   NLSTTXT-NLSTMSG(,R1),NPLBLNKS  CLEAR MESSAGE AREA    R41 41040500
         MVC   NLSTKEY-NLSTMSG(8,R1),0(WA)  MOVE IN KEYWORD         R41 41041000
         LA    WC,NLSTKEY+8-NLSTMSG(,R1)  SKIP OVER KEYWORD         R41 41041500
         B     NPLSHMEQ            BR TO DISPLAY VALUE              R41 41042000
         EJECT                                                      R41 41042500
NPLDSSSM MVC   NPLWORK(8),NPLSSSM  MOVE SSSM NAME TO NPLWORK        R41 41043000
         B     NPLSHWTO            BR TO DISPLAY IT                 R41 41043500
         SPACE 3                                                    R41 41044000
NPLDOPSL L     WD,=A(NRDROPSL)     POINT TO LOGON 'RDR' PARMS       R41 41044500
         B     NPLSHCH             BR TO DISPLAY THEM               R41 41045000
         SPACE 3                                                    R41 41045500
NPLDOPST L     WD,=A(NRDROPST)     POINT TO STC 'RDR' PARMS         R41 41046000
         B     NPLSHCH             BR TO DISPLAY THEM               R41 41046500
         SPACE 3                                                    R41 41047000
NPLDOPSU L     WD,=A(NRDROPSU)     POINT TO BATCH JOB 'RDR' PARMS   R41 41047500
         B     NPLSHCH             BR TO DISPLAY THEM               R41 41048000
         SPACE 3                                                    R41 41048500
NPLDDLAY L     R0,0(,WD)           GET FIELD VALUE                  R41 41049000
         SRL   R0,12               UNADJUST VALUE                   R41 41049500
         B     NPLSHOWN            BR TO DISPLAY IT                 R41 41050000
         SPACE 3                                                        41050500
NPLDPRI  SR    R0,R0               CLEAR REG FOR INSERT             R41 41050600
         IC    R0,0(,WD)           GET FIELD VALUE                  R41 41050700
         SRL   R0,4                DIVIDE BY 16                     R41 41050800
         B     NPLSHOWN            BR TO DISPLAY VALUE              R41 41050900
         SPACE 1                                                    R41 41051000
         DROP  WB                  KILL PTE ADDRESSABILITY          R41 41051100
         TITLE 'HASP INITIALIZATION -- OS/JES2 REP FACILITY PROCESSING C41061500
               ROUTINES'                                            R41 41062000
NPLBASE  NULL                      PARAMETER LIBRARY BASE STATEMENT  R4 41062500
         BAL   WD,NREPLSCN         SCAN LOCATION FIELDS              R4 41063000
         ST    WC,12(,WB)          SET NEW BASE                      R4 41063500
         B     NPLCOMNT            PROCESS AS COMMENT STATEMENT      R4 41064000
         SPACE 5                                                     R4 41064500
NPLVER   NULL                      PARAMETER LIBRARY VERIFY STATEMENT   41065000
         BAL   WD,NREPLSCN         SCAN LOCATION FIELDS                 41065500
         BAL   WD,NREPDSCN         SCAN DATA FIELD                      41066000
         MODESET EXTKEY=ZERO       SET ZERO PROTECT KEY                 41066500
         EX    R1,NREPCLC          PERFORM VERIFICATION CHECK           41067000
         MODESET EXTKEY=HASP       RESET HASP PROTECT KEY               41067500
         BE    NPLCOMNT            BRANCH IF DATA VERIFIES              41068000
         L     R1,=A(NVERERM)      POINT TO VERIFICATION MSG         R4 41068500
         B     NPLERMSG             AND BR TO ISSUE DIAGNOSTIC       R4 41069000
         SPACE 5                                                        41069500
NPLREP   NULL                      PARAMETER LIBRARY REPLACE STATEMENT  41070000
         BAL   WD,NREPLSCN         SCAN LOCATION FIELDS                 41070500
         CLC   NREPMOD,=C'ABS '    REP TO ABSOLUTE LOCATION...      R41 41070600
         BE    NPLREPIT            BR IF YES                        R41 41070700
         OC    8(4,WB),8(WB)       IS MODULE LOCATABLE...           R41 41070800
         BZ    NREPERR             ERROR IF NO                      R41 41070900
         SPACE 1                                                    R41 41071000
NPLREPIT BAL   WD,NREPDSCN         SCAN DATA FIELDS                 R41 41071100
         MODESET EXTKEY=ZERO       SET ZERO PROTECT KEY                 41071500
         EX    R1,NREPMVC          MOVE DATA TO SPECIFIED LOCATION      41072000
         MODESET EXTKEY=HASP       RESET HASP PROTECT KEY               41072500
         B     NPLCOMNT            PROCESS AS COMMENT STATEMENT         41073000
         EJECT                                                          41073500
NPLNAME  NULL                      PARAMETER LIBRARY NAME STATEMENT     41074000
         BAL   WE,NREPBSCN         FIND START OF MEMBER NAME FIELD      41074500
         BAL   WE,NREPBSCN         FIND START OF MODULE NAME FIELD      41075000
         CLC   0(4,WA),=CL4'HASP'  TEST FIRST FOUR CHARACTERS           41075500
         BNE   NREPERR             ERROR IF NOT 'HASP....'              41076000
         MVC   NREPMOD,4(WA)       SET LAST FOUR CHARACTERS OF NAME     41076500
         BAL   WE,NREPNSCN         GET ADDRESS OF DIRECTORY ENTRY       41077000
         MVC   NREPZAP,8(WB)       SAVE MODULE ADDRESS                  41077500
         XC    NREPBASE,NREPBASE   RESET MODULE BASE                    41078000
         OI    NPLFLAGS,NPLZAPSW   INDICATE SPZAP MODE                  41078500
         B     NPLCOMNT            PROCESS AS COMMENT STATEMENT         41079000
         SPACE 3                                                    R41 41079500
NPLENDZP NULL                      PARAMETER LIBRARY ENDZAP STATEMENT   41080000
         NI    NPLFLAGS,255-NPLZAPSW  RESET SPZAP MODE                  41080500
         B     NPLCOMNT            PROCESS AS COMMENT STATEMENT         41081000
         SPACE 3                                                    R41 41081500
NREPLSCN NULL                      SCAN REP LOCATION FIELDS             41082000
         BAL   WE,NREPBSCN         FIND START OF SECOND FIELD           41082500
         LA    WB,NREPZAP-8        ASSUME SPZAP MODE                    41083000
         TM    NPLFLAGS,NPLZAPSW   TEST REP MODE                        41083500
         BO    NREPLSC1            BRANCH IF SPZAP MODE                 41084000
         L     WB,NREPNAME         POINT TO LAST DIRECTORY ENTRY    R41 41084100
         CLC   0(2,WA),=CL2'* '    TEST MODULE NAME                 R41 41084200
         BE    NREPLSC             BR IF UNCHANGED                  R41 41084300
         MVC   NREPMOD,0(WA)       SET MODULE NAME                      41084500
         BAL   WE,NREPNSCN         GET ADDRESS OF DIRECTORY ENTRY       41085000
         ST    WB,NREPNAME          AND SAVE                            41085500
         SPACE 1                                                    R41 41085600
NREPLSC  BAL   WE,NREPBSCN         FIND START OF LOCATION FIELD     R41 41086000
         L     WC,NREPLOC          ASSUME PREVIOUS LOCATION             41086500
         CLC   0(2,WA),=CL2'* '    TEST LOCATION FIELD                  41087000
         BER   WD                  RETURN IF '*'                        41087500
         SPACE 2                                                        41088000
NREPLSC1 SR    WC,WC               CLEAR LOCATION REGISTER              41088500
         BCTR  WA,0                BACK UP ONE CHARACTER                41089000
         BAL   WE,NREPHEX          VALIDATE AND CONVERT CHARACTER       41089500
         SLL   WC,4                SHIFT TOTAL                          41090000
         O     WC,NREPWORD         ADD NEW VALUE                        41090500
         CL    WC,=X'00FFFFFF'     TEST TOTAL                           41091000
         BH    NREPERR             BRANCH IF LOCATION LIMIT EXCEEDED    41091500
         CLI   1(WA),C' '          TEST NEXT CHARACTER                  41092000
         BNE   NREPHEX             CONVERT NEXT CHARACTER IF NOT BLANK  41092500
         BR    WD                  RETURN                               41093000
         EJECT                                                          41093500
NREPDSCN NULL                      DATA SCAN SUBROUTINE                 41094000
         ST    WC,NREPLOC          SAVE CURRENT DISPLACEMENT            41094500
         AL    WC,8(,WB)           ADD MODULE ADDRESS                   41095000
         SL    WC,12(,WB)          SUBTRACT ASSEMBLY BASE               41095500
         BAL   WE,NREPBSCN         FIND START OF DATA FIELD             41096000
         BCTR  WA,0                BACK UP ONE CHARACTER                41096500
         LA    R1,NREPDATA         GET ADDRESS OF PACKED DATA           41097000
         SPACE 2                                                        41097500
NREPDSC1 LA    R0,2                CONVERT TWO EBCDIC CHARACTERS        41098000
         B     NREPDSC3             TO ONE BYTE                         41098500
         SPACE 1                                                        41099000
NREPDSC2 MVO   0(1,R1),NREPCHAR    SET ZONE NIBBLE                      41099500
         SPACE 1                                                        41100000
NREPDSC3 BAL   WE,NREPHEX          VALIDATE AND CONVERT CHARACTER       41100500
         BCT   R0,NREPDSC2         BRANCH IF FIRST CHARACTER            41101000
         MVN   0(1,R1),NREPCHAR    SET NUMERIC NIBBLE                   41101500
         LA    R1,1(,R1)           ADVANCE TO NEXT BYTE                 41102000
         SPACE 2                                                        41102500
         CLI   1(WA),C'('          TEST NEXT CHARACTER                  41103000
         BNE   NREPDSC4            BRANCH IF NOT LEFT PARENTHESIS       41103500
         TM    NPLFLAGS,NPLZAPSW   TEST REP MODE                        41104000
         BO    NREPERR             ERROR IF SPZAP MODE                  41104500
         MVC   NREPMOD,2(WA)       SET MODULE NAME                      41105000
         MVI   NREPMOD+4,C')'      ADD TERMINATION CHARACTER            41105500
         LA    WB,NREPMOD          SCAN                                 41106000
         LA    WB,1(,WB)            FOR                                 41106500
         CLI   0(WB),C')'            RIGHT                              41107000
         BNE   *-8                    PARENTHESIS                       41107500
         MVI   0(WB),C' '          BLANK IT OUT                         41108000
         BAL   WE,NREPNSCN         GET ADDRESS OF DIRECTORY ENTRY       41108500
         SL    R1,=F'4'            BACK UP REP DATA ADDRESS             41109000
         L     R0,0(,R1)           GET REP DATA                         41109500
         AL    R0,8(,WB)           ADD MODULE ADDRESS                   41110000
         SL    R0,12(,WB)          SUBTRACT ASSEMBLY BASE               41110500
         ST    R0,0(,R1)           UPDATE REP DATA                      41111000
         LA    R1,4(,R1)           RESTORE REP DATA ADDRESS             41111500
         BXH   WA,R14,NREPERR      SCAN FOR                             41112000
         CLI   0(WA),C')'           END OF                              41112500
         BNE   *-8                   MODULE NAME                        41113000
         SPACE 2                                                        41113500
NREPDSC4 CLI   1(WA),C','          TEST NEXT CHARACTER                  41114000
         BNE   *+8                 BRANCH IF NOT COMMA                  41114500
         BXH   WA,R14,NREPERR      STEP OVER COMMA                      41115000
         CLI   1(WA),C' '          TEST NEXT CHARACTER                  41115500
         BNE   NREPDSC1            BRANCH IF NOT BLANK                  41116000
         SL    R1,=A(NREPDATA+1)   COMPUTE LENGTH OF DATA               41116500
         L     WB,NREPLOC          GET DISPLACEMENT                     41117000
         LA    WB,1(R1,WB)         ADD DATA LENGTH                      41117500
         ST    WB,NREPLOC          UPDATE DISPLACEMENT                  41118000
         BR    WD                  RETURN                               41118500
         EJECT                                                          41119000
NREPBSCN NULL                      FIND START OF VARIABLE FIELD         41119500
         BXH   WA,R14,NREPERR      SCAN FOR                             41120000
         CLI   0(WA),C' '           START OF                            41120500
         BNE   *-8                   BLANK FIELD                        41121000
         SPACE 1                                                        41121500
         BXH   WA,R14,NREPERR      SCAN FOR                             41122000
         CLI   0(WA),C' '           START OF                            41122500
         BE    *-8                   NEXT FIELD                         41123000
         BR    WE                  RETURN                               41123500
         SPACE 5                                                        41124000
NREPNSCN NULL                      FIND ADDRESS OF DIRECTORY ENTRY      41124500
         L     WB,$HASPMAP         GET ADDRESS OF MODULE DIRECTORY      41127000
         LA    R0,MAPMODS          GET ENTRIES IN MODULE DIRECTORY   R4 41127500
         SPACE 2                                                        41128000
NREPNSC1 CLC   NREPMOD,4(WB)       CHECK LAST FOUR CHARACTERS OF NAME   41128500
         BER   WE                  RETURN IF MODULE FOUND               41129000
         LA    WB,16(,WB)          GET ADDRESS OF NEXT ENTRY            41129500
         BCT   R0,NREPNSC1         CHECK NEXT ENTRY                     41130000
         B     NREPERR             ERROR, MODULE NAME NOT FOUND         41130500
         SPACE 5                                                        41131000
NREPHEX  NULL                      CONVERT HEX CHARACTER TO BINARY      41131500
         BXH   WA,R14,NREPERR      GET NEXT CHARACTER                   41132000
         CLI   0(WA),X'C1'         TEST                                 41132500
         BL    NREPERR             ILLEGAL IF LESS THAN X'C1'           41133000
         MVC   NREPCHAR,0(WA)      MOVE CHARACTER TO WORK AREA          41133500
         TR    NREPCHAR,NREPTTAB   TRANSLATE TO BINARY VALUE            41134000
         CLI   NREPCHAR,X'0F'      VALIDATE RESULT                      41134500
         BNHR  WE                  RETURN IF VALID                      41135000
         SPACE 5                                                        41135500
NREPERR  NULL                      REP CARD DATA OR FORMAT ERROR        41136000
         L     R1,=A(NREPERM)      POINT TO ILLEGAL REP MSG          R4 41136500
         B     NPLERMSG             AND BR TO ISSUE DIAGNOSTIC       R4 41137000
         EJECT                                                          41137500
         SPACE 5                                                        41138000
*                                                                       41138500
*                             REP CONSTANTS AND WORK AREAS              41139000
*                                                                       41139500
         SPACE 3                                                        41140000
NREPCLC  CLC   0(*-*,WC),NREPDATA  ***** EXECUTE ONLY *****             41140500
NREPMVC  MVC   0(*-*,WC),NREPDATA  ***** EXECUTE ONLY *****             41141000
         SPACE 2                                                        41141500
NREPNAME DC    A(*-*)              ADDRESS OF MODULE DIRECTORY ENTRY R4 41142000
NREPLOC  DC    A(*-*)              DATA DISPLACEMENT                    41142500
NREPZAP  DC    A(*-*)              SPZAP MODULE ADDRESS                 41143000
NREPBASE DC    A(*-*)              SPZAP MODULE BASE                    41143500
NREPWORD DC    0F'0',XL3'00'       WORK WORD                            41144000
NREPCHAR DC    XL1'00'             WORK BYTE (LAST BYTE OF NREPWORD)    41144500
NREPMOD  DC    2F'0'               MODULE NAME SCAN AREA                41145000
NREPDATA DC    XL33'00'            PACKED DATA WORK AREA                41145500
         SPACE 2                                                        41146000
NREPTTAB EQU   *-X'C1'             EBCDIC HEX TO BINARY TRANSLATE TABLE 41146500
         DC    X'0A0B0C0D0E0F',41X'FF',X'00010203040506070809',6X'FF'   41147000
         TITLE 'INIT     HASP INITIALIZATION -- COMPACT PARAMETER PROCEX41147100
               SSING ROUTINE'                                       R41 41147200
NPLCMPCT NULL                      PARAMETER LIBRARY COMPACT STMNT  R41 41147300
         CLI   7(WA),C'='          TEST NEXT CHARACTER              R41 41147400
         BNE   NPLSSERR            BR IF NOT EQUAL SIGN             R41 41147500
         L     R1,$CPTPOOL         POINT TO WORK CPT (CPT 0)        R41 41147600
         USING CPTDSECT,R1                                          R41 41147700
         SPACE 1                                                    R41 41147800
         LR    WC,R1               CLEAR                            R41 41147900
         LA    WD,CPTEND-CPTDSECT   WORK                            R41 41148000
         XR    WB,WB                 CPT                            R41 41148100
         MVCL  WC,WA                  BEFORE USING                  R41 41148200
         LA    WA,7(,WA)           POINT PAST THE KEYWORD           R41 41148300
         BAL   WE,NPLASCAN         GET COMPACTION TABLE NUMBER      R41 41148400
         LTR   R0,R0               IF NUMBER IS ZERO OR NEG         R41 41148500
         BNP   NPLDVERR             GO ISSUE ERROR MSG              R41 41148600
         CH    R0,=H'99'           IF NUMBER IS GREATER THAN 99     R41 41148700
         BH    NPLDVERR             GO ISSUE ERROR MSG              R41 41148800
         STC   R0,CPTNUM           SAVE CPT NUMBER                  R41 41148900
         BAL   WE,NPLASCAN         GET NUMBER OF MASTER CHARS       R41 41149000
         CH    R0,=H'3'            IF LESS THAN 3                   R41 41149100
         BL    NPLDVERR             GO ISSUE ERROR MSG              R41 41149200
         CH    R0,=H'16'           IF MORE THAN 16                  R41 41149300
         BH    NPLDVERR             GO ISSUE ERROR MSG              R41 41149400
         STC   R0,CPTNMAST         SAVE NUMBER OF MASTER CHARS      R41 41149500
         LA    WC,X'F0'            INITIAL CPTDTT DISPLACEMENT      R41 41149600
         LA    WB,CPTMST           INITIAL CPTCAT ATTRIBUTE         R41 41149700
         SPACE 1                                                    R41 41149800
NPLALOOP BAL   WE,NPLASCAN         GET A MASTER/NONMASTER CHAR      R41 41149900
         LTR   WD,WD               TEST CHARACTER                   R41 41150000
         BZ    NPLCHERR            ZERO IS INVALID CHARACTER        R41 41150100
         LA    WE,CPTCAT(WD)       IF CHARACTER                     R41 41150200
         CLI   0(WE),CPTCHAR        HAS ALREADY BEEN USED           R41 41150300
         BNE   NPLDVERR              GO ISSUE ERROR MSG             R41 41150400
         STC   WB,CPTCAT(WD)       INIT                             R41 41150500
         STC   WC,CPTCTT(WD)        CPT                             R41 41150600
         STC   WD,CPTDTT(WC)         TABLES                         R41 41150700
         B     NPLDCALC            GO CALCULATE NEXT DISPLACEMENT   R41 41150800
         EJECT                                                      R41 41150900
NPLAOUT  IC    WB,CPTCAT+C' '      INDICATE                         R41 41151000
         LA    WB,CPTPCHAR(,WB)     BLANK                           R41 41151100
         STC   WB,CPTCAT+C' '        IS PRIME                       R41 41151200
         IC    WC,CPTNUM           POINT TO                         R41 41151300
         MH    WC,=AL2(CPTEND-CPTDSECT) CPT                         R41 41151400
         LA    WC,0(R1,WC)           TO BE INITIALIZED              R41 41151500
         CLI   CPTNMAST-CPTDSECT(WC),X'00' IF CPT IS ALREADY INIT   R41 41151600
         BNE   NPLAMVE              DONT INCREMENT COUNT            R41 41151700
         LH    WB,$NUMCPTS         INCREMENT                        R41 41151800
         LA    WB,1(,WB)            NUMBER OF                       R41 41151900
         STH   WB,$NUMCPTS           CPTS INITIALIZED               R41 41152000
         SPACE 1                                                    R41 41152100
NPLAMVE  LR    WA,R1               MOVE WORK CPT                    R41 41152200
         LA    WB,CPTEND-CPTDSECT   TO CPT BEING INITIALIZED        R41 41152300
         LR    WD,WB                 OVERLAYING ANY                 R41 41152400
         MVCL  WC,WA                  PREVIOUSLY DEFINED CPT        R41 41152500
         B     NPLCOMNT            NEXT PARAMETER                   R41 41152600
         SPACE 1                                                    R41 41152700
         DROP  R1                                                   R41 41152800
         TITLE 'HASP INITIALIZATION -- OS/JES2 COMMAND STATEMENT PROCESC41152900
               SING ROUTINE'                                        R41 41153000
NPLCOMND NULL                      PARAMETER LIBRARY COMMAND STATEMENT  41153100
         GETMAIN R,LV=80,SP=229    GET TEMPORARY COMMAND AREA        R4 41153200
         LA    WA,NCOMMTAB         POINT TO ADDR OF 1ST TMP CMD AREA R4 41153300
         SPACE 1                                                     R4 41153400
SKIP130  LR    WB,WA               LOCATE LAST                       R4 41153500
         ICM   WA,15,0(WA)          TEMPORARY                        R4 41153600
         BNZ   SKIP130               COMMAND AREA                    R4 41153700
         SPACE 1                                                     R4 41153800
         ST    R1,0(,WB)           ADD NEW TEMPORARY                 R4 41153900
         ST    WA,0(,R1)            COMMAND AREA TO END OF CHAIN     R4 41154000
         MVC   8(72,R1),NCARD      MOVE COMMAND TO TEMP AREA         R4 41154100
         B     NPLCOMNT            PROCESS COMMAND STMNT AS COMMENT  R4 41154200
         TITLE 'HASP INITIALIZATION -- SYSTEM PARAMETER PROCESSING ROUTC41154500
               INE'                                                     41155000
NPLSN    NULL                      PARAMETER LIBRARY SN STATEMENT       41155500
         BXH   WA,R14,NPLSSERR     GET NEXT CHARACTER                   41156000
         CLI   0(WA),X'F0'         TEST                                 41156500
         BL    NPLSSERR            INVALID IF NOT NUMERIC               41157000
         BE    NPLSNERR            INVALID IF 0                      R4 41157500
         BAL   WE,NPLDCONV         GET SYSTEM NUMBER                    41158000
         B     NPLSNERR            BR IF ILLEGAL NUMBER       +0     R4 41158500
         CLI   0(WA),C' '          TEST TERMINATOR CHARACTER  +4     R4 41159000
         BNE   NPLSNERR            INVALID IF NOT BLANK                 41159500
         BCTR  R1,0                DECREMENT SYSTEM NUMBER              41160000
         CL    R1,=F'7'             AND TEST                            41160500
         BNL   NPLSNERR            INVALID IF NOT LESS THAN 7           41161000
         MH    R1,=AL2(L'NS1)      COMPUTE TABLE ENTRY DISPLACEMENT     41161500
         AL    R1,=A(NS1)          GET ADDRESS OF TABLE ELEMENT         41162000
         L     R0,=A(NPLSYSST)     GET ADDRESS OF SCAN TABLE         R4 41162500
         BAL   WE,NPLSSCAN         SCAN SUB-PARAMETERS                  41163000
         B     NPLCOMNT            PROCESS AS COMMENT STATEMENT         41163500
         SPACE 5                                                        41164000
NPLSNERR NULL                      INVALID SYSTEM NUMBER                41164500
         L     R1,=A(NPLSNERM)     POINT TO INVALID SYSTEM MSG       R4 41165000
         B     NPLERMSG             AND BR TO ISSUE DIAGNOSTIC       R4 41165500
         TITLE 'HASP INITIALIZATION -- LOGICAL INITIATOR PARAMETER PROCC41166000
               ESSING ROUTINE'                                          41166500
NPLINNN  NULL                      PARAMETER LIBRARY INNN STATEMENT     41167000
         BXH   WA,R14,NPLSSERR     GET NEXT CHARACTER                   41167500
         CLI   0(WA),X'F0'         TEST                                 41168000
         BL    NPLSSERR            INVALID IF NOT NUMERIC               41168500
         BAL   WE,NPLDCONV         GET INITIATOR NUMBER                 41169000
         B     NPLINERR            BR IF ILLEGAL NUMBER       +0     R4 41169500
         CLI   0(WA),C' '          TEST TERMINATOR CHARACTER  +4     R4 41170000
         BNE   NPLINERR            INVALID IF NOT BLANK                 41170500
         LTR   R0,R1               TEST INITIATOR NUMBER                41171000
         BZ    NPLINERR            INVALID IF ZERO                      41171500
         L     R1,=A(NMAXPART)      OR                              R41 41171600
         C     R0,0(,R1)             GREATER                        R41 41172000
         BH    NPLINERR               THAN MAX                      R41 41172500
         L     R1,$PITABLE         GET                               R4 41173000
         BAL   WE,*+8               ADDRESS                             41173500
         LA    R1,PITLEN(,R1)        OF                              R4 41174000
         BCTR  R0,WE                  NTH PIT                           41174500
         L     R0,=A(NPLPITST)     GET ADDRESS OF SCAN TABLE         R4 41175000
         BAL   WE,NPLSSCAN         SCAN SUB-PARAMETERS                  41175500
         B     NPLCOMNT            PROCESS AS COMMENT STATEMENT         41176000
         SPACE 5                                                        41176500
NPLINERR NULL                      INVALID INITIATOR NUMBER             41177000
         L     R1,=A(NPLINERM)     POINT TO INVALID INITIATOR MSG    R4 41177500
         B     NPLERMSG             AND BR TO ISSUE DIAGNOSTIC       R4 41178000
         TITLE 'HASP INITIALIZATION -- CLASS ATTRIBUTE TABLE PARAMETER C41178500
               PROCESSING ROUTINE'                                      41179000
NPLSTC   NULL                      PARAMETER LIBRARY &STC STATEMENT     41179500
         LA    R1,CATSTCCL         GET STC JOB CLASS                    41180000
         B     NPLCAT1             UTILIZE COMMON CODE                  41180500
         SPACE 3                                                        41181000
NPLTSU   NULL                      PARAMETER LIBRARY &TSU STATEMENT     41181500
         LA    R1,CATTSUCL         GET TSU JOB CLASS                    41182000
         B     NPLCAT1             UTILIZE COMMON CODE                  41182500
         SPACE 3                                                        41183000
NPLCATX  NULL                      PARAMETER LIBRARY &X STATEMENT       41183500
         CLI   1(WA),C'A'          TEST JOB CLASS                       41184000
         BL    NPLSSERR            ILLEGAL IF LESS THAN 'A'             41184500
         CLI   2(WA),C' '          TEST NEXT CHARACTER                  41185000
         BNE   NPLSSERR            ILLEGAL IF NOT BLANK                 41185500
         IC    R1,1(,WA)           GET JOB CLASS                        41186000
         SPACE 2                                                        41186500
         USING CATDSECT,R1         PRIVIDE CAT ADDRESSABILITY        R4 41187000
         SPACE 1                                                     R4 41187500
NPLCAT1  N     R1,=A(X'3F')        CONVERT TO JOB CLASS INDEX           41188000
         SLL   R1,5                MULTIPLY BY 32                       41188500
         AL    R1,$CATABLE         GET ADDRESS OF CAT ELEMENT           41189000
         TM    CATJOBFL,CATVALID   TEST CAT FLAGS                    R4 41189500
         BZ    NPLSSERR            BRANCH IF INVALID CLASS              41190000
         L     R0,=A(NPLCATST)     GET ADDRESS OF SCAN TABLE         R4 41190500
         BAL   WE,NPLSSCAN         SCAN SUB-PARAMETERS                  41191000
         CLC   CATPERFM,=C'255'    TEST PERFORMANCE GROUP            R4 41191500
         BH    NPLDVERR            BR IF ILLEGAL SPECIFICATION       R4 41192000
         CLI   CATCONVP,0          TEST FOR CONVERTER PARM FIELD     R4 41192500
         BE    NPLCOMNT            BR IF NO                          R4 41193000
         MVC   NPLWORK,CATCONVP     ELSE MOVE IT TO WORK AREA        R4 41193500
         BAL   WE,NPLRDVAL         VALIDATE 'RDR' PARM FIELD        R41 41194000
         B     NPLDVERR            BR IF ILLEGAL                 +0  R4 41194500
         B     NPLCOMNT            PROCESS PARM CARD AS COMMENT  +4  R4 41195000
         SPACE 1                                                     R4 41195500
         DROP  R1                  KILL CAT ADDRESSABILITY           R4 41196000
         TITLE 'HASP INITIALIZATION -- SYSOUT CLASS ATTRIBUTE TABLE PARC41196500
               AMETER PROCESSING ROUTINE'                               41197000
NPL$$X   NULL                      PARAMETER LIBRARY $$X STATEMENT      41197500
         CLI   2(WA),C'A'          TEST SYSOUT CLASS                    41198000
         BL    NPLSSERR            ILLEGAL IF LESS THAN 'A'             41198500
         CLI   3(WA),C' '          TEST NEXT CHARACTER                  41199000
         BNE   NPLSSERR            ILLEGAL IF NOT BLANK                 41199500
         SR    R1,R1               CLEAR REGISTER                       41200000
         IC    R1,2(,WA)           GET SYSOUT CLASS                     41200500
         AL    R1,=A(NSCAT)        GET ADDRESS OF SCAT ENTRY            41201000
         TM    SCATFLAG-SCADSECT(R1),SCATINVL  TEST SCAT FLAG           41201500
         BO    NPLSSERR            BRANCH IF INVALID CLASS              41202000
         L     R0,=A(NPLSCAST)     GET ADDRESS OF SCAN TABLE         R4 41202500
         BAL   WE,NPLSSCAN         SCAN SUB-PARAMETERS                  41203000
         B     NPLCOMNT            PROCESS AS COMMENT STATEMENT         41203500
         TITLE 'HASP INITIALIZATION -- CARD READER PARAMETER PROCESSINGC41204000
                ROUTINE'                                                41204500
NPLRDR   NULL                      PARAMETER LIBRARY READERNN STATEMENT 41205000
         L     R0,=A(NPLRDRST)     GET ADDRESS OF SCAN TABLE         R4 41205500
         BAL   WE,NPLDSCAN         SCAN READER SUB-PARAMETERS           41206000
         SPACE 1                                                     R4 41206500
         USING DCTDSECT,R1         ESTABLISH DCT ADDRESSABILITY         41207000
         SPACE 1                                                     R4 41207500
SKIP140  CLI   DCTPRRTE,0          TEST FOR PRINT ROUTING            R4 41211000
         BNE   NPLRROUT            BR IF YES                        R41 41211500
         NI    DCTFLAGS,255-DCTPRLCL  ELSE RESET SPECIAL ROUTING FLG R4 41212000
NPLRROUT DS    0H                                                   R41 41212200
SKIP160  CLI   DCTPURTE,0          TEST FOR PUNCH ROUTING            R4 41215500
         BNE   SKIP170             BR IF YES                         R4 41216000
         NI    DCTFLAGS,255-DCTPULCL  ELSE RESET SPECIAL ROUTING FLG R4 41216500
SKIP170  CLI   DCTMCLAS,C'A'       TEST DEFAULT MSGCLASS                41217000
         BL    NPLDVERR            ILLEGAL IF LESS THAN 'A'             41217500
         B     NPLRDVER            BR TO CONCLUDE PARM VALIDATION    R4 41218000
         TITLE 'HASP INITIALIZATION -- PRINT/PUNCH PARAMETER PROCESSINGC41218500
                ROUTINE'                                                41219000
NPLPRINT NULL                      PARAMETER LIBRARY PRINTERN STATEMENT 41219500
         MVC   NPLSVAL(5),0(WA)    CONVERT                              41220000
         MVC   NPLSVAL+5(4),6(WA)   PRINTERNN                           41220500
         LA    WA,NPLSVAL            TO PRINTRNN                        41221000
         SPACE 5                                                        41221500
NPLPUNCH NULL                      PARAMETER LIBRARY PUNCHNN STATEMENT  41222000
         L     R0,=A(NPLPPST)      GET ADDRESS OF SCAN TABLE         R4 41222500
         BAL   WE,NPLDSCAN         SCAN DEVICE SUB-PARAMETERS           41223000
         B     NPLCOMNT            PROCESS AS COMMENT CARD              41223500
         TITLE 'HASP INITIALIZATION -- INTERNAL READER PARAMETER PROCESC41224000
               SING ROUTINE'                                            41224500
NPLINR   NULL                      PARAMETER LIBRARY INTRDR STATEMENT   41225000
         L     R1,=A(NINRDCT)      GET ADDRESS OF INTRDR DCT         R4 41225500
         L     R0,=A(NPLINRST)     GET ADDRESS OF SCAN TABLE         R4 41226000
         BAL   WE,NPLSSCAN         SCAN INTERNAL READER SUB-PARAMETERS  41226500
         SPACE 1                                                     R4 41227000
NPLRDVER CLI   DCTPRINC,15         TEST PRIORITY INCREMENT           R4 41227500
         BH    NPLDVERR            ILLEGAL IF GREATHER THAN 15          41228000
         CLI   DCTPRLIM,15         TEST PRIORITY LIMIT                  41228500
         BH    NPLDVERR            ILLEGAL IF GREATHER THAN 15          41229000
         CLI   DCTJCLAS,C'A'       TEST DEFAULT JOB CLASS               41229500
         BL    NPLDVERR            ILLEGAL IF LESS THAN 'A'             41230000
         CLI   DCTRAUTH,7          TEST COMMAND AUTHORIZATION LEVEL     41230500
         BH    NPLDVERR            ILLEGAL IF GREATHER THAN 7           41231000
         B     NPLCOMNT            PROCESS AS COMMENT STATEMENT         41231500
         TITLE 'HASP INITIALIZATION -- NEWS STATEMENT PROCESSING ROUTINC41231600
               E'                                                   R41 41231700
NPLNEWS  NULL                      PARAMETER LIBRARY NEWS     STATEMENT 41231800
         ICM   WD,15,$NEWNEWS      PICK UP POINTER TO NEWS BLOCK,   R41 41231900
         BNZ   NPLNW10               BR AROUND GETMAIN IF NON-ZERO  R41 41232000
         L     R0,=A(NEWSTOTL)     GET LENGTH FOR GETMAIN           R41 41232100
         ICM   R0,8,=AL1(229)      SET SUBPOOL                      R41 41232200
         GETMAIN R,LV=(0)          GET STORAGE FOR NEWS LINES       R41 41232300
         ST    R1,$NEWNEWS         SAVE ADDRESS FOR NEXT TIME       R41 41232400
         LR    WD,R1               SET UP ADDRESSABILITY            R41 41232500
         USING NEWSBLOK,WD           FOR NEWS ENTRIES               R41 41232600
         LR    R0,R1               CLEAR ENTIRE                     R41 41232700
         L     R1,=A(NEWSTOTL)       GETMAINED                      R41 41232800
         L     WB,=X'40000000'       AREA TO                        R41 41232900
         MVCL  R0,WA                 BLANKS                         R41 41233000
         L     R0,=A(NEWSLAST-NEWSBLOK) SAVE POINTER TO LAST        R41 41233100
         ALR   R0,WD                 POSSIBLE NEWS ENTRY            R41 41233200
         ST    R0,NEWSEND            TO AVOID FALLING OFF END       R41 41233300
         LA    R0,NEWSTART         INITIALIZE POINTER               R41 41233400
         ST    R0,NEWSPTR            TO NEXT AVAILABLE ENTRY        R41 41233500
         XC    NEWSCONT,NEWSCONT   CLEAR CONTINUATION POINTER       R41 41233600
         SPACE 1                                                    R41 41233700
NPLNW10  L     WE,NEWSPTR          POINT TO SPACE FOR NEXT/CUR LINE R41 41233800
         CL    WE,NEWSEND          SEE IF PAST END OF AREA,         R41 41233900
         BH    NPLCOMNT              IGNORE CARD IF SO              R41 41234000
         LA    R1,5(,WA)           POINT TO FIRST CHAR OF NEWS DATA R41 41234100
         OC    NEWSCONT,NEWSCONT   CONTINUATION CARD...             R41 41234200
         BNZ   NPLNW40               BRANCH IF SO                   R41 41234300
         CLI   0(R1),C' '          SEE IF                           R41 41234400
         BE    NPLNW30               FIRST CHAR                     R41 41234500
         CLI   0(R1),C'8'            APPEARS                        R41 41234600
         BH    NPLNW20               TO BE                          R41 41234700
         CLI   0(R1),C'0'            ANSI                           R41 41234800
         BNL   NPLNW30               CARRIAGE CONTROL               R41 41234900
         CLI   0(R1),C'-'          IF NOT,                          R41 41235000
         BE    NPLNW30               POINT BACK                     R41 41235100
         CLI   0(R1),C'+'            TO PRECEEDING                  R41 41235200
         BE    NPLNW30               BLANK                          R41 41235300
NPLNW20  BCTR  R1,0                  ('SINGLE SPACE')               R41 41235400
         EJECT                                                      R41 41235500
NPLNW30  LA    R14,NCARD+71        COMPUTE LENGTH OF                R41 41235600
         SLR   R14,R1                NEWS TEXT                      R41 41235700
         EX    R14,NPLNWMV1        MOVE 1ST (OR ONLY) HALF OF LINE  R41 41235800
         CLI   NCARD+71,C' '       CHECK FOR CONTINUATION CARD,     R41 41235900
         BE    NPLNW50               BRANCH IF NOT                  R41 41236000
         LA    R0,NEWSCCTL(WE,R14) SAVE STARTING ADDRESS            R41 41236100
         ST    R0,NEWSCONT           OF 2ND HALF OF LINE            R41 41236200
         B     NPLCOMNT            BR TO LIST/LOG STATEMENT         R41 41236300
         SPACE 1                                                    R41 41236400
NPLNW40  L     R15,NEWSCONT        POINT TO 2ND HALF OF LINE        R41 41236500
         XC    NEWSCONT,NEWSCONT   CLEAR POINTER FOR NEXT TIME THRU R41 41236600
         LA    R14,NCARD+70        COMPUTE MACHINE                  R41 41236700
         SR    R14,R1                TEXT LENGTH,                   R41 41236800
         BM    NPLNW50               EXIT IF NEGATIVE               R41 41236900
         EX    R14,NPLNWMV2        MOVE 2ND HALF OF LINE            R41 41237000
         SPACE 1                                                    R41 41237100
NPLNW50  LA    WE,NEWSLENG(,WE)    BUMP POINTER TO NEXT LINE        R41 41237200
         ST    WE,NEWSPTR          SAVE FOR NEXT TIME THROUGH       R41 41237300
         B     NPLCOMNT            BR TO LIST/LOG STATEMENT         R41 41237400
         SPACE 3                                                    R41 41237500
NPLNWMV1 MVC   NEWSCCTL(*-*,WE),0(R1) *** EXECUTE ONLY ***          R41 41237600
NPLNWMV2 MVC   0(*-*,R15),0(R1)       *** EXECUTE ONLY ***          R41 41237700
         TITLE 'HASP INITIALIZATION -- REMOTE JOB ENTRY LINE PARAMETER C41237800
               PROCESSING ROUTINE'                                   R4 41237900
NPLLINE  NULL                      PARAMETER LIBRARY LINENN   STMNT  R4 41238000
         L     R0,=A(NPLLINST)     GET ADDRESS OF SCAN TABLE         R4 41238100
         BAL   WE,NPLDSCAN         SCAN LINE SUB-PARAMETERS          R4 41238200
         L     WE,=X'FFFFFFFF'     LOAD DUMMY UCB ADDRESS           R41 41238400
         C     WE,DCTBUFAD         TEST FOR DUMMY UCB ADDR          R41 41238500
         BE    NPLINE1             BR IF ALREADY DUMMY              R41 41238600
         NI    MDCTTYPE,255-DCTPSNA  RESET SNA INDICATOR            R41 41238700
         CLC   =C'SNA',DCTBUFAD    TEST FOR SNA LINE                R41 41238800
         BNE   NPLINE1             BR IF NO                         R41 41238900
         ST    WE,DCTBUFAD          AVOID DEVICE ALLOCATION          R4 41239000
         OI    MDCTTYPE,DCTPSNA    SHOW DCT IS LOGICAL LINE          R4 41239100
         SPACE 1                                                     R4 41239300
NPLINE1  NULL                                                        R4 41239400
         B     NPLCOMNT            PROCESS AS COMMENT CARD           R4 41241500
         SPACE 1                                                     R4 41242000
         DROP  R1                  KILL DCT ADDRESSABILITY           R4 41242500
         TITLE 'HASP INITIALIZATION -- LOGONNN PARAMETER PROCESSING ROUC41243500
               TINE'                                                 R4 41244000
         SPACE 1                                                     R4 41244500
NPLOGON  NULL                      PARAMETER LIBRARY LOGONNN  STMNT  R4 41245000
         L     R0,=A(NPLOGNST)     GET ADDRESS OF SCAN TABLE         R4 41245500
         BAL   WE,NPLDSCAN         SCAN LOGON SUB-PARAMETERS         R4 41246000
         B     NPLCOMNT            PROCESS AS COMMENT CARD           R4 41246500
         SPACE 2                                                     R4 41247000
         SPACE 2                                                     R4 41312500
         TITLE 'HASP INITIALIZATION -- REMOTE TERMINAL PARAMETER PROCESC41313500
               SING ROUTINE'                                            41314000
NPLRMTNN NULL                      PARAMETER LIBRARY RMTNNN STATEMENT   41314500
         MVC   NPLSVAL(8),0(WA)    MOVE REMOTE NAME TO WORK AREA        41315000
         MVI   NPLSVAL+8,C' '      ADD TERMINATING BLANK                41315500
         LA    R1,NPLSVAL+2        SCAN                                 41316000
         LA    R1,1(,R1)            FOR                                 41316500
         CLI   0(R1),C' '            TERMINATING                        41317000
         BNE   *-8                    BLANK                             41317500
         MVC   1(4,R1),0(R1)       BLANK OUT REST OF NAME               41318000
         SPACE 1                                                    R41 41318500
         LA    R0,$MAXRJE          GET MAX NUMBER OF RAT ENTRIES     R4 41319000
         L     R1,$RAT             POINT TO 1ST RAT ELEMENT          R4 41319500
         SPACE 1                                                     R4 41320000
         USING RATDSECT,R1         ESTABLISH RAT ADDRESSABILITY         41320500
         SPACE 1                                                     R4 41321000
NPLRMTN1 CLC   RATNAME,NPLSVAL     COMPARE REMOTE NAMES                 41321500
         BE    NPLRMTN2            BRANCH IF NAMES MATCH                41322000
         LA    R1,RATEND           GET ADDRESS OF NEXT RAT ELEMENT      41322500
         BCT   R0,NPLRMTN1         CHECK NEXT RAT ELEMENT               41323000
         B     NPLDNERR            RAT ELEMENT NOT FOUND                41323500
         SPACE 1                                                    R41 41324000
NPLRMTN2 L     R0,=A(NPLRMTST)     GET ADDRESS OF SCAN TABLE         R4 41324500
         BAL   WE,NPLSSCAN         SCAN REMOTE SUB-PARAMETERS           41325000
         CLI   RATTYPE,0           TEST FOR DEFAULT SPECIFIED        R4 41325500
         BNE   SKIP200             NO, SKIP DEFAULT SETTING          R4 41326000
         MVI   RATTYPE,DCTP2770    SET DEFAULT VALUE                 R4 41326500
SKIP200  CLC   RATRDCT(2),=H'8160' TEST DISCONNECT INTERVAL         R41 41327000
         BH    NPLDVERR            ILLEGAL IF GREATER THAN 8192      R4 41327500
         CLI   RATNUMRD,7          TEST NUMBER OF READERS               41328000
         BH    NPLDVERR            ILLEGAL IF GREATER THAN 7            41328500
         TM    RATTYPE,DCTPLU1     IF NOT SNA REMOTE                R41 41328600
         BNO   NPLATPR              GO TEST FOR MAX OF 7            R41 41328700
         TM    RATCONF,RATCONFC    IF NO CONSOLE                    R41 41328800
         BNO   NPLATPR              GO TEST FOR MAX OF 7            R41 41328900
         CLI   RATNUMPR,6          IF MORE THAN 6 PRINTERS          R41 41329000
         BH    NPLDVERR             GO ISSUE ERROR MSG              R41 41329100
         SPACE 1                                                    R41 41329200
NPLATPR  CLI   RATNUMPR,7          TEST NUMBER OF PRINTERS          R41 41329300
         BH    NPLDVERR            ILLEGAL IF GREATER THAN 7            41329500
         CLI   RATNUMPU,7          TEST NUMBER OF PUNCHES               41330000
         BH    NPLDVERR            ILLEGAL IF GREATER THAN 7            41330500
         TM    RATTYPE,DCTPLU1     IF SNA REMOTE                    R41 41330600
         BO    NPLATLU              GO TEST FOR LUNAME              R41 41330700
         IC    R0,RATNUMPR         GET NUMBER OF PRINTERS      @OZ27119 41331000
         IC    WE,RATNUMPU         GET NUMBER OF PUNCHES       @OZ27119 41331500
         AR    WE,R0               COMPUTE SUM                 @OZ27119 41332000
         N     WE,=A(X'3F')        MASK                        @OZ27119 41332500
         C     WE,=F'8'            COMPARE                     @OZ27119 41333000
         BH    NPLDVERR            ILLEGAL IF SUM IS OVER 8    @OZ27119 41333500
         B     NPLCOMNT            GO PRINT STATEMEMT               R41 41333600
NPLATLU  CLI   RATSYMB,C' '        IF LUNAME NOT SPECIFIED          R41 41333700
         BE    NPLCOMNT              GO PRINT STATEMENT             R41 41333800
         OI    RATFLAGS,RATPILUN   IND LUNAME PERMANENTLY INIT      R41 41333900
         B     NPLCOMNT            PROCESS AS COMMENT STATEMENT         41334000
         SPACE 1                                                     R4 41334500
         DROP  R1                  DROP RAT ADDRESSABILITY              41335000
         TITLE 'HASP INITIALIZATION -- REMOTE TERMINAL DEVICE PARAMETERC41335500
                PROCESSING ROUTINE'                                     41336000
NPLRNDVM NULL                      PARAMETER LIBRARY RNNN.DVM STATEMENT 41336500
         BXH   WA,R14,NPLSSERR     GET NEXT CHARACTER                   41337000
         CLI   0(WA),X'F0'         TEST                                 41337500
         BL    NPLSSERR            INVALID IF NOT NUMERIC               41338000
         BAL   WE,NPLDCONV         GET REMOTE NUMBER                    41338500
         B     NPLRTERR            BR IF ILLEGAL NUMBER       +0     R4 41339000
         CLI   0(WA),C'.'          TEST TERMINATOR CHARACTER  +4     R4 41339500
         BNE   NPLSSERR            INVALID IF NOT PERIOD                41340000
         BCTR  R1,0                DECREMENT REMOTE NUMBER              41340500
         CL    R1,=A($MAXRJE)       AND TEST                         R4 41341000
         BNL   NPLDNERR            INVALID IF GREATER THAN MAX       R4 41341500
         MH    R1,=AL2(RWTLEN)     COMPUTE RWT ELEMENT DISPLACEMENT     41342000
         AL    R1,$RWT             POINT TO 1ST RWT ELEMENT          R4 41342500
         LA    R0,21               GET NUMBER OF RWL ELEMENTS           41343000
         L     WE,=A($RWL)         GET ADDRESS OF RWL                   41343500
         SPACE 2                                                        41344000
         USING RWLDSECT,WE         ESTABLISH RWL ADDRESSABILITY         41344500
         SPACE 1                                                     R4 41345000
NPLRND1  CLC   RWLNAME,1(WA)       COMPARE RWL NAME WITH DEVICE NUMBER  41345500
         BE    NPLRND2             BRANCH IF RWL ELEMENT FOUND          41346000
         LA    WE,RWLEND           GET ADDRESS OF NEXT RWL ELEMENT      41346500
         BCT   R0,NPLRND1          NO, TRY AGAIN                        41347000
         B     NPLDNERR            INVALID DEVICE NAME                  41347500
         SPACE 3                                                     R4 41348000
NPLRTERR L     R1,=A(NPLRTERM)     POINT TO REMOTE NUMBER ERROR MSG  R4 41348500
         B     NPLERMSG             AND BR TO ISSUE DIAGNOSTIC       R4 41349000
         SPACE 3                                                        41349500
NPLRND2  AH    R1,RWLDISP          GET ADDRESS OF RWT ENTRY             41350000
         CLI   1(WA),C'P'          TEST DEVICE TYPE                     41350500
         BE    NPLRNPXM            BRANCH IF REMOTE PRINTER OR PUNCH    41351000
         SPACE 1                                                     R4 41351500
         DROP  WE                  KILL RWL ADDRESSABILITY           R4 41352000
         TITLE 'HASP INITIALIZATION -- REMOTE TERMINAL READER PARAMETERC41352500
                PROCESSING ROUTINE'                                     41353000
*                                  PARAMETER LIBRARY RNNN.RDM STATEMENT 41353500
*                                                                       41354000
         L     R0,=A(NPLRNRST)     GET ADDRESS OF SCAN TABLE         R4 41354500
         BAL   WE,NPLSSCAN         SCAN REMOTE READER SUB-PARAMETERS    41355000
         USING RWTDSECT,R1         ESTABLISH RWT ADDRESSABILITY         41355500
         SPACE 1                                                     R4 41362000
NPLRNR2  ICM   WE,1,RWTPRINT       TEST FOR PRINT ROUTING            R4 41362500
         BM    NPLRNR3             BR IF INDIRECT ROUTING            R4 41363000
         BNZ   NPLDVERR            ILLEGAL IF GREATER THAN 255       R4 41363500
         B     NPLRNR6             BR TO TEST PUNCH ROUTING          R4 41364500
         SPACE 1                                                     R4 41367000
NPLRNR3  NI    RWTFLAGS,255-DCTPRLCL  RESET SPECIAL LCL ROUTING FLAG R4 41367500
         SPACE 1                                                     R4 41374500
NPLRNR6  ICM   WE,1,RWTPUNCH       TEST FOR PUNCH ROUTING            R4 41375000
         BM    NPLRNR7             BR IF INDIRECT ROUTING            R4 41375500
         BNZ   NPLDVERR            ILLEGAL IF GREATER THAN 255       R4 41376000
         B     NPLRNR8             BR TO CONTINUE                    R4 41376500
         SPACE 1                                                     R4 41377000
NPLRNR7  NI    RWTFLAGS,255-DCTPULCL  RESET SPECIAL LCL ROUTING FLAG R4 41377500
         SPACE 1                                                     R4 41378000
NPLRNR8  CLI   RWTPRINC,15         TEST PRIORITY INCREMENT           R4 41378500
         BH    NPLDVERR            ILLEGAL IF GREATER THAN 15           41379000
         CLI   RWTPRLIM,15         TEST PRIORITY LIMIT                  41379500
         BH    NPLDVERR            ILLEGAL IF GREATER THAN 15           41380000
         CLI   RWTJCLAS,C'A'       TEST DEFAULT JOB CLASS               41380500
         BL    NPLDVERR            ILLEGAL IF LESS THAN 'A'             41381000
         CLI   RWTMCLAS,C'A'       TEST DEFAULT MESSAGE CLASS           41381500
         BL    NPLDVERR            ILLEGAL IF LESS THAN 'A'             41382000
         B     NPLCOMNT            PROCESS AS COMMENT STATEMENT         41382500
         TITLE 'HASP INITIALIZATION -- REMOTE TERMINAL PRINT/PUNCH PARAC41383000
               METER PROCESSING ROUTINE'                                41383500
NPLRNPXM NULL                      PARAMETER LIBRARY RNNN.PXN STATEMENT 41384000
         L     R0,=A(NPLRPRST)     GET ADDRESS OF PRINT SCAN TABLE   R4 41384500
         CLI   2(WA),C'R'          TEST DEVICE TYPE                     41385000
         BE    *+8                 BRANCH IF REMOTE PRINTER             41385500
         L     R0,=A(NPLRPUST)     GET ADDRESS OF PUNCH SCAN TABLE   R4 41386000
         BAL   WE,NPLSSCAN         SCAN SUB-PARAMETERS                  41386500
         CLI   RWTDCPTN,99         TEST COMPACTION TABLE NUMBER     R41 41386600
         BH    NPLDVERR            ILLEGAL IF GREATER THAN 99       R41 41386700
         CLI   RWTLRECL,0          TEST FOR VALID LRECL        @OZ29180 41386800
         BNH   NPLDVERR            ILLEGAL IF LESS THAN 1      @OZ29180 41386900
         TM    RWTSFEAT,DCTPNDST   TEST FOR BASIC EXCHANGE     @OZ29180 41387000
         BO    NPLRNPX1            BRANCH IF NOT               @OZ29180 41387100
         CLI   RWTLRECL,FMHBXMRL   TEST VALID LRECL            @OZ29180 41387200
         BH    NPLDVERR            ILLEGAL IF GREATER THAN MAX @OZ29180 41387300
NPLRNPX1 ICM   WE,1,RWTROUTE       TEST ROUTE CODE             @OZ29180 41387400
         BM    NPLCOMNT            BR IF INDIRECT ROUTING            R4 41387500
         BNZ   NPLDVERR            ILLEGAL IF GREATER THAN 255       R4 41388000
         B     NPLCOMNT            PROCESS AS COMMENT STATEMENT         41388500
         DROP  R1                  DROP RWT ADDRESSABILITY     @OZ29180 41388550
         TITLE 'HASP INITIALIZATION -- SELECT SUBPARAMETER PROCESSING RC41388560
               OUITNE'                                         @OZ29180 41388570
***************************************************************@OZ29180 41388580
*                                                              @OZ29180 41388590
*  NPLSELCT - SCAN THE SELECT SUBPARAMETER OF THE REMOTE       @OZ29180 41388600
*             PRINTER AND PUNCH INITIALIZATION STATEMENTS.     @OZ29180 41388610
*                                                              @OZ29180 41388620
*     CALLED BY NPLSSCAN                                       @OZ29180 41388630
*                                                              @OZ29180 41388640
*     REGISTERS UPON ENTRY:                                    @OZ29180 41388650
*                                                              @OZ29180 41388660
*         WC = R4 = ADDRESS OF RWT                             @OZ29180 41388670
*         WB = R3 = ADDRESS OF SCAN TABLE                      @OZ29180 41388680
*         WA = R2 = ADDRESS OF CURRENT CHARACTER               @OZ29180 41388690
*         WE = R6 = RETURN ADDRESS FOR THE NPLSCAN ROUTINE     @OZ29180 41388700
*         WF = R7 = RETURN ADDRESS IN NPLSSCAN                 @OZ29180 41388710
*                                                              @OZ29180 41388720
***************************************************************@OZ29180 41388730
         SPACE 2                                               @OZ29180 41388740
         USING RWTDSECT,WC         SHOW RWT ADDRESSABILITY     @OZ29180 41388750
         SPACE 1                                               @OZ29180 41388760
NPLSELCT CLI   0(WA),C'='          TEST CURRENT CHARACTER      @OZ29180 41388800
         BNE   NPLSVERR            ILLEGAL IF NOT EQUAL SIGN   @OZ29180 41388850
         BXH   WA,R14,NPLSSERR     SCAN TO NEXT CHARACTER      @OZ29180 41388900
         CLC   0(2,WA),=C'X'''     TEST NEXT 2 CHARACTERS      @OZ29180 41388950
         BNE   NPLSEL10            BRANCH IF NOT HEX           @OZ29180 41389000
         BXH   WA,R14,NPLSSERR     SCAN PAST                   @OZ29180 41389050
         BXH   WA,R14,NPLSSERR       NEXT TWO CHARACTERS       @OZ29180 41389100
         BAL   WD,NPLHEXTR         CONVERT TO HEX              @OZ29180 41389150
         CLR   WA,R15              TEST FOR END OF CARD        @OZ29180 41389200
         BH    NPLSSERR            BRANCH IF PAST END          @OZ29180 41389250
         CLI   0(WA),C''''         TEST FOR ENDING QUOTE       @OZ29180 41389300
         BNE   NPLSVERR            ILLEGAL IF MISSING          @OZ29180 41389350
         C     R0,=F'255'          INSURE ONLY 1 BYTE WORTH    @OZ29180 41389400
         BH    NPLSVERR            ILLEGAL IF NOT              @OZ29180 41389450
         STC   R0,RWTSEL           PUT MEDIA/SUBADDRESS IN RWT @OZ29180 41389500
         OI    RWTSEL,DCTPOUTB     MARK AS OUTBOUND DEVICE     @OZ29180 41389550
         BR    WF                  RETURN TO MAIN SCAN ROUTINE @OZ29180 41389600
         SPACE 2                                               @OZ29180 41389650
         USING NPLSLTAB,R1         SELECT TABLE ADDRESSABLITY  @OZ29180 41389700
         SPACE 1                                               @OZ29180 41389750
NPLSELEX CLC   0(*-*,WA),NPLSLMN   **** EXECUTED ****          @OZ29180 41389800
         SPACE 1                                               @OZ29180 41389850
NPLSEL10 SLR   WD,WD               ZERO WORK REGISTER          @OZ29180 41389900
         LA    R1,NPLSELMT-NPLSLTLN-1  R1 TO INDEX TABLE       @OZ29180 41389950
NPLSEL20 LA    R1,NPLSLTLN+1(R1,WD)    POINT TO NEXT ENTRY     @OZ29180 41390000
         CLI   0(R1),X'FF'         TEST FOR END OF TABLE       @OZ29180 41390050
         BE    NPLSVERR            ERROR IF NAME NOT IN TABLE  @OZ29180 41390100
         IC    WD,NPLSLLEN         GET NAME LENGTH FOR COMPARE @OZ29180 41390150
         EX    WD,NPLSELEX         COMPARE FOR DEVICE NAME     @OZ29180 41390200
         BNE   NPLSEL20            CONTINUE IF NOT END         @OZ29180 41390250
         EJECT                                                 @OZ29180 41390300
NPLSEL30 LA    WA,0(WD,WA)         POINT TO LAST CHAR IN NAME  @OZ29180 41390350
         CLR   WA,R15              CHECK FOR END OF CARD       @OZ29180 41390400
         BH    NPLSSERR            ERROR IF TOO FAR            @OZ29180 41390450
         MVC   RWTSEL,NPLSLMV      MOVE MEDIA VALUE TO RWT     @OZ29180 41390500
         OI    RWTSFEAT,DCTPNDST   ASSUME NOT BASIC/EXCHANGE   @OZ29180 41390550
         TM    NPLSLFLG,NPLSLBXC   TEST FOR BASIC/EXCHANGE     @OZ29180 41390600
         BZ    NPLSEL33            BRANCH NOT BASIC/EXCHANGE   @OZ29180 41390650
         NI    RWTSFEAT,255-DCTPNDST  INDICATE BASIC/EXCHANGE  @OZ29180 41390700
         DROP  R1                  KILL MEDIA TABLE BASE       @OZ29180 41390750
         SPACE 1                                               @OZ29180 41390800
NPLSEL33 CLI   1(WA),C','          TEST NEXT CHARACTER         @OZ29180 41390850
         BE    NPLSEL35            BRANCH IF COMMA             @OZ29180 41390900
         CLI   1(WA),C' '          TEST NEXT CHARACTER         @OZ29180 41390950
         BNE   NPLSEL40            BRANCH IF NOT BLANK         @OZ29180 41391000
NPLSEL35 OI    RWTSEL,FMHLDANY     SET SUBADDRESS TO ANY       @OZ29180 41391050
         BR    WF                  RETURN TO MAIN SCAN ROUTINE @OZ29180 41391100
         SPACE 1                                               @OZ29180 41391150
NPLSEL40 BXH   WA,R14,NPLSSERR     SCAN TO NEXT CHARACTER      @OZ29180 41391200
         LR    WD,WE               SAVE 1ST LEVEL RETURN ADDR  @OZ29180 41391250
         BAL   WE,NPLDCONV         CONVERT DEV NO. TO BINARY   @OZ29180 41391300
         B     NPLSVERR            +0 ILLEGAL VALUE            @OZ29180 41391350
         LR    WE,WD               +4 RESTORE 1ST LEVEL RETURN @OZ29180 41391400
         LTR   R1,R1               TEST DEVICE NUMBER          @OZ29180 41391450
         BZ    NPLSVERR            ILLEGAL IF 0                @OZ29180 41391500
         CH    R1,=H'15'           TEST FOR MAX DEVICE NUMBER  @OZ29180 41391550
         BH    NPLSVERR            ILLEGAL IF NOT LESS THAN 16 @OZ29180 41391600
NPLSEL45 BCTR  R1,0                GET SUBADDRESS              @OZ29180 41391650
         IC    R0,RWTSEL           GET MEDIA VALUE             @OZ29180 41391700
         OR    R1,R0               INCLUDE SUBADDRESS          @OZ29180 41391750
         STC   R1,RWTSEL           PUT MEDIA/SUBADDRESS IN RWT @OZ29180 41391800
         BCTR  WA,0                BACK UP ONE CHARACTER       @OZ29180 41391850
         BR    WF                  RETURN TO MAIN SCAN ROUTINE @OZ29180 41391900
         SPACE 1                                               @OZ29180 41392000
         DROP  WC                  DROP RWT ADDRESSIBILITY     @OZ29180 41392050
         EJECT                                                 @OZ29180 41392100
NPLSELMT DS    0F                  MEDIA SELECT TABLE          @OZ29180 41392150
         DC    AL1(4),AL1(DCTPOUTB+FMHPRINT),AL1(0),C'PRINT'   @OZ29180 41392200
         DC    AL1(4),AL1(DCTPOUTB+FMHCARD),AL1(0),C'PUNCH'    @OZ29180 41392250
         DC    AL1(3),AL1(DCTPOUTB+FMHEXCH),AL1(0),C'EXCH'     @OZ29180 41392300
         DC    AL1(4),AL1(DCTPOUTB+FMHEXCH),AL1(NPLSLBXC)      @OZ29180 41392350
         DC    C'BASIC'                                        @OZ29180 41392400
         DC    X'FF'               END-OF-TABLE                @OZ29180 41392450
         SPACE 5                                               @OZ29180 41392500
NPLSLTAB DSECT                     MEDIA SELECT TABLE DSECT    @OZ29180 41392550
NPLSLLEN DS    AL1                 DEVICE NAME LENGTH-1        @OZ29180 41392600
NPLSLMV  DS    AL1                 MEDIA VALUE                 @OZ29180 41392650
NPLSLFLG DS    AL1                 FLAG BYTE                   @OZ29180 41392700
NPLSLTLN EQU   *-NPLSLTAB          LENGTH OF FIXED SECTION     @OZ29180 41392750
NPLSLMN  EQU   *                   MEDIA NAME VARIABLE LENGTH  @OZ29180 41392800
         SPACE 1                                               @OZ29180 41392850
*                          NPLSLFLG                            @OZ29180 41392900
         SPACE 1                                               @OZ29180 41392950
NPLSLBXC EQU   B'10000000'         BASIC EXCHANGE MEDIA        @OZ29180 41393000
         SPACE 1                                               @OZ29180 41393050
HASPINIT CSECT                                                 @OZ29180 41393100
         TITLE 'HASP INITIALIZATION -- REMOTE DESTINATION PARAMETER PROC41393150
               CESSING ROUTINE'                                @OZ29180 41393200
NPLDEST  NULL                      PARAMETER LIBRARY DESTID    @OZ29180 41393250
         LA    WA,6(,WA)           PT TO BLANK AFTER 'DESTID'  @OZ29180 41393300
         BXH   WA,R14,NPLSSERR     POINT TO NEXT CHARACTER     @OZ29180 41393350
         LA    R1,NPLDSAVE         USE SAVE AREA AS NDQ        @OZ29180 41393400
         SPACE 1                                               @OZ29180 41393450
         USING NDQDSECT,R1         PROVIDE NDQ ADDRESSABILITY  @OZ29180 41393500
         SPACE 1                                               @OZ29180 41393550
         XC    NDQ,NDQ             CLEAR NDQ AREA                    R4 41394000
         L     R0,=A(NPLDESST)     GET ADDRESS OF SCAN TABLE         R4 41394500
         BAL   WE,NPLSSCAN         SCAN SUBPARAMETERS                R4 41395000
         OC    NDQNAME,NDQNAME     TEST FOR NAME                     R4 41395500
         BZ    NPLSSERR            ILLEGAL IF NOT PROVIDED           R4 41396000
         CLI   NDQNAME,C'0'        RETEST NAME                       R4 41396500
         BNL   NPLDVERR            ILLEGAL IF 1ST CHARACTER NUMERIC  R4 41397000
         CLC   NDQDEST,=CL8'LOCAL' TEST DESTINATION                  R4 41397500
         BE    NPLDESS             BR IF 'LOCAL'                     R4 41398000
         CLI   NDQDEST,C'U'        TEST FOR UNIT SPECIFICATION       R4 41398500
         BE    NPLDESD             BR IF YES                         R4 41399000
         CLI   NDQDEST,C'R'        TEST FOR REMOTE SPECIFICATION     R4 41399500
         BNE   NPLDVERR            BR IF ILLEGAL DEST                R4 41402000
         SPACE 1                                                     R4 41402500
NPLDESD  CLI   NDQDEST+1,C'0'      TEST 2ND CHARACTER                R4 41403500
         BNH   NPLDVERR            ILLEGAL IF ALPHA OR LEADING ZERO  R4 41404000
         MVC   NPLLWORK,NDQDEST+2  MOVE REMAINING DEST TO WORK AREA  R4 41404500
         LA    R0,3                MAX REMAINING DIGITS        @OZ18420 41405000
         SPACE 1                                                     R4 41405500
NPLDESN  CLI   NPLLWORK,C' '       TEST FOR END OF DEST              R4 41406000
         BE    NPLDESS             BR IF YES                         R4 41406500
         CLI   NPLLWORK,C'0'       TEST FOR NUMERIC                  R4 41407000
         BL    NPLDVERR            ILLEGAL IF NO                     R4 41407500
         MVC   NPLLWORK,NPLLWORK+1 SHIFT LEFT 1 CHARACTER            R4 41408000
         BCT   R0,NPLDESN          BR TO TEST NEXT CHARACTER         R4 41408500
         SPACE 1                                                     R4 41409000
         B     NPLDVERR            ILLEGAL IF MORE THAN 3 DIGITS     R4 41409500
         SPACE 1                                                     R4 41422000
         DROP  R1                  KILL NDQ ADDRESSABILITY           R4 41422500
         EJECT                                                       R4 41423000
NPLDESS  LA    WB,$NDQ-(NDQNDQ-NDQ)  PREPARE TO SCAN DEST'N ELEMENTS R4 41423500
         L     WC,$NDQ             POINT TO FIRST ELEMENT            R4 41424000
         SPACE 1                                                     R4 41424500
         USING NDQDSECT,WC         PROVIDE NDQ ADDRESSABILITY        R4 41425000
         SPACE 1                                                     R4 41425500
NPLDESC  CLC   NDQNAME,NDQNAME-NDQ+NPLDSAVE  COMPARE NAMES           R4 41426000
         BE    NPLDESR             BR IF EQUAL                       R4 41426500
         BH    NPLDESI             INSERT IF OLD IS HIGH             R4 41427000
         LR    WB,WC               PULL HEADER UP ONE                R4 41427500
         ICM   WC,15,NDQNDQ        POINT TO NEXT NDQ                 R4 41428000
         BNZ   NPLDESC             LOOP IF VALID ADDRESS             R4 41428500
         SPACE 1                                                     R4 41429000
NPLDESI  LA    R0,NDQSIZ           GET STORAGE                       R4 41429500
         ICM   R0,8,=AL1(229)       FOR DESTINATION                  R4 41430000
         GETMAIN R,LV=(0)            QUEUE ELEMENT                   R4 41430500
         ST    WC,NDQNDQ-NDQ(,R1)  SET POINTER TO NEXT               R4 41431000
         LR    WC,R1               COPY ADDRESS                      R4 41431500
         SPACE 1                                                     R4 41432000
NPLDESR  MVC   NDQDATA,NDQDATA-NDQ+NPLDSAVE INSERT NEW DATA          R4 41432500
         ST    WC,NDQNDQ-NDQ(,WB)  PLACE ON QUEUE                    R4 41433000
         B     NPLCOMNT            PROCESS PARM CARD AS COMMENT      R4 41433500
         SPACE 1                                                     R4 41434000
         DROP  WC                  KILL NDQ ADDRESSABILITY           R4 41434500
         SPACE 3                                                     R4 41435000
NDQDSECT DSECT                     DESTINATION QUEUE ELEMENT DSECT   R4 41435500
NDQNDQ   DS    A                   CHAIN FIELD                       R4 41436000
NDQDATA  DS    0CL16               DATA PORTION OF DESTINATION       R4 41436500
NDQNAME  DS    CL8                 DESTINATION NAME                  R4 41437000
NDQDEST  DS    CL8                 NATIVE SPECIFICATION              R4 41437500
         DS    0D                  ENSURE MULTIPLE OF 8 BYTES        R4 41438000
NDQSIZ   EQU   *-NDQDSECT          LENGTH OF QUEUE ELEMENT           R4 41438500
NDQ      EQU   NDQDSECT,NDQSIZ     ALTERNATE QUEUE ELEMENT NAME      R4 41439000
         SPACE 1                                                     R4 41439500
HASPINIT CSECT                     END OF NDQ DSECT                  R4 41440000
         TITLE 'HASP INITIALIZATION -- PARAMETER STATEMENT DEVICE LOOKUC41523000
               P SUBROUTINE'                                        R41 41523500
NPLDSCAN NULL                      DEVICE LOOKUP SUBROUTINE             41524000
         MVC   NPLSVAL(8),0(WA)    MOVE DEVICE NAME TO WORK AREA        41524500
         CLI   NPLSVAL+5,C' '      TEST SIXTH CHARACTER                 41525000
         BNE   *+8                 BRANCH IF NOT BLANK                  41525500
         MVI   NPLSVAL+6,C' '      YES, BLANK OUT SEVENTH CHARACTER     41526000
         CLI   NPLSVAL+6,C' '      TEST SEVENTH CHARACTER               41526500
         BNE   *+8                 BRANCH IF NOT BLANK                  41527000
         MVI   NPLSVAL+7,C' '      YES, BLANK OUT EIGHTH CHARACTER      41527500
         CLI   NPLSVAL+7,C' '      TEST EIGHTH CHARACTER                41528000
         BE    *+12                BRANCH IF BLANK                      41528500
         CLI   8(WA),C' '          TEST NEXT CHARACTER                  41529000
         BNE   NPLDNERR            INVALID IF NOT BLANK                 41529500
         SPACE 1                                                        41530000
         LA    R1,$DCTPOOL-(DCTCHAIN-DCTDSECT)  FAKE FIRST DCT          41530500
         SPACE 1                                                     R4 41531000
         USING DCTDSECT,R1         ESTABLISH DCT ADDRESSABILITY         41531500
         SPACE 1                                                     R4 41532000
NPLDSCN1 ICM   R1,7,DCTCHAIN+1     GET ADDRESS OF NEXT DCT              41532500
         BZ    NPLDNERR            ERROR IF DEVICE NOT FOUND            41533000
         CLC   DCTDEVN,NPLSVAL     COMPARE DEVICE NAMES                 41533500
         BNE   NPLDSCN1            BRANCH IF NAMES DO NOT MATCH         41534000
         SPACE 1                                                        41534500
         B     NPLSSCAN            SCAN DEVICE SUB-PARAMETERS           41535000
         SPACE 1                                                     R4 41535500
         DROP  R1                  DROP DCT ADDRESSABILITY              41536000
         SPACE 5                                                        41536500
NPLDNERR NULL                      INVALID DEVICE NAME                  41537000
         L     R1,=A(NPLDNERM)     POINT TO INVALID DEV NAME MSG     R4 41537500
         B     NPLERMSG             AND BR TO ISSUE DIAGNOSTIC       R4 41538000
         SPACE 5                                                        41538500
NPLDVERR NULL                      HASPPARM DEVICE VALUE ERROR          41539000
         MVC   0(L'NPLDSAVE,R1),NPLDSAVE  RESTORE CONTROL BLOCK         41539500
         L     R1,=A(NPLDVERM)     POINT TO INVALID DEV VALUE MSG    R4 41540000
         B     NPLERMSG             AND BR TO ISSUE DIAGNOSTIC       R4 41540500
         TITLE 'HASP INITIALIZATION -- MISCELLANEOUS INITIALIZATION PARC41541000
               AMETER PROCESSING ROUTINES'                              41541500
NPLSTCMC NULL                      PARAMETER LIBRARY STCMCLAS STATEMENT 41542000
         L     R1,=A(NSTCMCLS)     GET ADDRESS OF STC MSGCLASS          41542500
         B     NPLTSUM1            UTILIZE COMMON CODE                  41543000
         SPACE 3                                                     R4 41543500
NPLTSUMC NULL                      PARAMETER LIBRARY TSUMCLAS STATEMENT 41544000
         L     R1,=A(NTSUMCLS)     GET ADDRESS OF TSU MSGCLASS          41544500
         SPACE 2                                                        41545000
NPLTSUM1 CLI   9(WA),C'A'          TEST MSGCLASS                        41545500
         BL    NPLCHERR            INVALID IF LESS THAN 'A'             41546000
         BAL   WE,NPLCCOM1         EXTRACT CHARACTER                R41 41546500
         B     NPLCOMNT            THEN PROCESS AS COMMENT STATEMENT R4 41547000
         SPACE 2                                                     R4 41547500
NPLCCOM1 LA    WA,8(,WA)           STEP OVER NAME FIELD                 41548000
         CLI   0(WA),C'='          TEST NEXT CHARACTER                  41548500
         BNE   NPLSSERR            INVALID IF NOT EQUAL SIGN            41549000
         BXH   WA,R14,NPLSSERR     ADVANCE TO NEXT CHARACTER            41549500
         CLI   0(WA),C' '          TEST DATA CHARACTER                  41550000
         BE    NPLCHERR            INVALID IF BLANK                     41550500
         CLI   1(WA),C' '          TEST TERMINATOR CHARACTER         R4 41551000
         BNE   NPLCHERR            ILLEGAL IF NOT BLANK              R4 41551500
         MVC   0(1,R1),0(WA)       SET PARAMETER CHARACTER              41552000
         BR    WE                  THEN RETURN                      R41 41552500
         EJECT                                                       R4 41553000
NPLHSSSM NULL                      PARAMETER LIBRARY HASPSSSM STMNT  R4 41553500
         MVI   C'.'(WC),1          DISALLOW PERIOD AS LEGAL CHAR    R41 41554000
         BAL   WC,NPLID            EXTRACT PROGRAM NAME             R41 41554500
         CLI   NPLWORK,C'0'        TEST 1ST CHARACTER               R41 41555000
         BNL   NPLCHERR            BR IF NUMBER TO ISSUE DIAGNOSTIC R41 41555500
         LOAD  EPLOC=NPLWORK,ERRET=NPLHSERR  LOCATE HASPSSSM        R41 41556000
         MVC   NPLSSSM,NPLWORK     SAVE PROGRAM NAME                R41 41556500
         L     R1,$HASPMAP         POINT TO HASP MODULE MAP          R4 41557000
         ST    R0,MAPSSSMA-MAPDSECT(,R1)  SET ADDR FOR REPPING       R4 41557500
         DELETE EPLOC=NPLSSSM      DELETE HASPSSSM                  R41 41558000
         B     NPLCOMNT            PROCESS PARM CARD AS COMMENT      R4 41558500
         SPACE 1                                                    R41 41558600
NPLHSERR L     R1,=A(NPLHSERM)     POINT TO DIAGNOSTIC              R41 41558700
         MVC   NPLHSNAM-NPLHSERM(,R1),NPLWORK  SET PGM NAME         R41 41558800
         B     NPLERMSG            BR TO ISSUE DIAGNOSTIC           R41 41558900
         SPACE 1                                                    R41 41559000
NPLSSSM  DC    CL8'HASPSSSM'       HASPSSSM PROGRAM NAME            R41 41559100
         EJECT                                                      R41 41559200
NPLCON   NULL                      PARAMETER LIBRARY CONSOLE  STATEMENT 41559300
         OI    NPLFLAGS,NPLCONSL   INDICATE CONSOLE MODE            R41 41559400
         B     NPLCOMNT            BR TO LIST/LOG STATEMENT         R41 41559500
         SPACE 3                                                    R41 41559600
NPLLISTC NULL                      PARAMETER LIBRARY LIST     STMNT  R4 41559700
         NI    NPLFLAGS,255-NPLNOLST  RESET 'NOLIST' SPECIFICATION   R4 41560000
         B     NPLCOMNT            PROCESS PARM CARD AS COMMENT      R4 41560500
         SPACE 3                                                     R4 41561000
NPLNLIST NULL                      PARAMETER LIBRARY NOLIST   STMNT  R4 41561500
         OI    NPLFLAGS,NPLNOLST   SET 'NOLIST' SPECIFICATION        R4 41562000
         B     NPLCOMNT            BR TO LIST/LOG STATEMENT         R41 41562100
         SPACE 3                                                    R41 41562200
NPLLOGC  NULL                      PARAMETER LIBRARY LOG      STATEMENT 41562300
         NI    NPLFLAGS,255-NPLNOLOG  RESET 'NOLOG' SPECIFICATION   R41 41562400
         B     NPLCOMNT            BR TO LIST/LOG STATEMENT         R41 41562500
         SPACE 3                                                    R41 41562600
NPLNLOG  NULL                      PARAMETER LIBRARY NOLOG    STATEMENT 41562700
         OI    NPLFLAGS,NPLNOLOG   SET 'NOLOG' SPECIFICATION        R41 41562800
         B     NPLCOMNT            BR TO LIST/LOG STATEMENT         R41 41562900
         SPACE 5                                                     R4 41563000
NPLSSERR NULL                      PARAMETER LIBRARY SYNTAX ERROR    R4 41563500
         L     R1,=A(NPLSSERM)     POINT TO INVALID STATEMENT MSG    R4 41564000
         SPACE 1                                                     R4 41564500
NPLERMSG MVC   NDIAG,0(R1)         MOVE DIAGNOSTIC TO PARM CARD     R41 41565000
         TM    NPLFLAGS,NPLCONSL   ARE WE IN CONSOLE MODE...        R41 41565100
         BO    NPLCOMNT            BR IF YES                        R41 41565200
         OI    NPLFLAGS,NPLERROR   INDICATE HASPPARM ERROR          R41 41565500
         SPACE 1                                                     R4 41566000
NPLCOMNT BAL   LINK,NPLLIST        LIST CONTROL STATEMENT            R4 41566500
         B     NPLNEXT             GET NEXT PARAMETER LIBRARY STMNT  R4 41567000
         TITLE 'HASP INITIALIZATION -- PARAMETER STATEMENT DECIMAL CONVC41660000
               ERSION SUBROUTINE'                                   R41 41660500
*********************************************************************** 41661000
*                                                                     * 41661500
*        NPLDCONV -- EXTRACT NUMBER OF 8 DIGITS OR LESS               * 41662000
*                                                                     * 41662500
*********************************************************************** 41663000
         SPACE 1                                                     R4 41663500
NPLDCNVT CLI   8(WA),C'='          TEST NEXT CHARACTER               R4 41666000
         BNE   NPLSSERR            INVALID IF NOT EQUAL SIGN         R4 41666500
         LA    WA,9(,WA)           STEP OVER KEYWORD                 R4 41667000
         SPACE 1                                                     R4 41667500
NPLDCONV CLR   WA,R15              TEST CURRENT COLUMN               R4 41668000
         BH    NPLSSERR            ILLEGAL IF MORE THAN COLUMN 71       41668500
         CLI   0(WA),X'F0'         TEST FIRST CHARACTER                 41669000
         BL    NPLDCERR            ILLEGAL IF LESS THAN X'F0'           41669500
         SR    R0,R0               INITIALIZE                           41670000
         LR    R1,R0                REGISTERS                           41670500
         SPACE 1                                                     R4 41671000
NPLDCON1 CLI   0(WA),X'F9'         TEST NEXT CHARACTER                  41671500
         BH    NPLDCERR            ILLEGAL IF GREATER THAN X'F9'        41672000
         LTR   R0,R0               TEST NUMBER SO FAR                R4 41672500
         BMR   WE                  RETURN IF ALREADY 8 DIGITS TO +0  R4 41673000
         SLDL  R0,8                SHIFT AND                            41673500
         IC    R1,0(,WA)            ADD CURRENT CHARACTER               41674000
         BXH   WA,R14,NPLDCON2     GET NEXT CHARACTER                   41674500
         CLI   0(WA),X'F0'         TEST                                 41675000
         BNL   NPLDCON1            BRANCH IF NUMERIC                    41675500
         SPACE 1                                                     R4 41676000
NPLDCON2 STM   R0,R1,NPLLWORK      CONVERT                              41676500
         PACK  NPLLWORK,NPLLWORK    EBCDIC TO                           41677000
         CVB   R1,NPLLWORK           BINARY                             41677500
         B     4(,WE)                 AND RETURN TO +4               R4 41678000
         SPACE 2                                                     R4 41678500
NPLDCERR NULL                      ILLEGAL DECIMAL VALUE                41679000
         L     R1,=A(NPLDCERM)     POINT TO ILLEGAL DEC VALUE MSG    R4 41679500
         B     NPLERMSG             AND BR TO ISSUE DIAGNOSTIC @OZ29180 41679550
         TITLE 'HASP INITAILIZATION -- PARAMETER STATEMENT HEXIDECIMAL C41679610
               CONVERSION ROUTINE'                             @OZ29180 41679620
***************************************************************@OZ29180 41679630
*                                                              @OZ29180 41679640
*    NPLHEXTR  - EXTRACT HEX DIGITS (8 OR LESS)                @OZ29180 41679650
*                                                              @OZ29180 41679660
*             INPUT  - WA = ADDRESS OF 1ST HEX DIGIT           @OZ29180 41679670
*                                                              @OZ29180 41679690
*             OUTPUT - R0 = HEXIDECIMAL NUMBER                 @OZ29180 41679700
*                                                              @OZ29180 41679720
***************************************************************@OZ29180 41679730
         SPACE 2                                               @OZ29180 41679740
NPLHEXTR CLR   WA,R15              TEST FOR END OF CARD        @OZ29180 41679750
         BH    NPLSSERR            BRANCH IF PAST END          @OZ29180 41679760
         ST    WD,NPLHEXSV         SAVE RETURN REGISTER        @OZ29180 41679770
         SLR   R0,R0               R0 TO ACCUMULATE HEX DIGITS @OZ29180 41679780
         SLR   R1,R1               CLEAR WORK REGISTER         @OZ29180 41679790
         LA    WD,8                TRANSLATE UPTO 8 HEX DIGITS @OZ29180 41679800
         SPACE 1                                               @OZ29180 41679810
NPLHEX05 CLI   0(WA),C'A'          TEST FOR VALID HEX          @OZ29180 41679820
         BL    NPLHEX10            BRANCH IF INVALID           @OZ29180 41679830
         MVC   NPLHEXCH,0(WA)      MOVE CHAR TO WORK AREA      @OZ29180 41679840
         TR    NPLHEXCH,NREPTTAB   TRANSLATE TO A HEX DIGIT    @OZ29180 41679850
         CLI   NPLHEXCH,X'0F'      TEST FOR VALID HEX DIGIT    @OZ29180 41679860
         BH    NPLHEX10            BRANCH IF INVALID           @OZ29180 41679870
         IC    R1,NPLHEXCH         GET HEX DIGIT IN WORK REG   @OZ29180 41679880
         SLL   R0,4                MAKE ROOM FOR DIGIT         @OZ29180 41679890
         OR    R0,R1               PLACE DIGIT IN R0           @OZ29180 41679900
         BXH   WA,R14,NPLHEX15     SCAN TO NEXT CHARACTER      @OZ29180 41679910
         BCT   WD,NPLHEX05         TRANSLATE NEXT BYTE         @OZ29180 41679920
         B     NPLHEX15            8 BYTES TRANSLATED          @OZ29180 41679930
         SPACE 1                                               @OZ29180 41679940
NPLHEX10 C     WD,=F'8'            ANY VALID HEX DIGITS FOUND  @OZ29180 41679950
         BNL   NPLHXERR            ERROR IF NONE FOUND         @OZ29180 41679960
NPLHEX15 L     WD,NPLHEXSV         RESTORE RETURN ADDRESS      @OZ29180 41679970
         B     0(,WD)              RETURN TO CALLER            @OZ29180 41679980
         SPACE 2                                               @OZ29180 41679990
NPLHXERR L     R1,=A(NPLHXERM)     GET INVALID HEX MESSAGE     @OZ29180 41680000
         B     NPLERMSG            GO ISSUE MESSAGE            @OZ29180 41680050
         TITLE 'INIT     HASP INITIALIZATION -- COMPACTION STRING SCAN X41680100
               SUBROUTINES'                                         R41 41680200
*********************************************************************** 41680300
*                                                                     * 41680400
*        NPLASCAN -- SCAN AND CONVERT COMPACT= POSITIONAL PARMS       * 41680500
*                    EXIT: WD=HEX CHAR, R0=BIN CHAR (NEG IF INVLD)    * 41680600
*                                                                     * 41680700
*********************************************************************** 41680800
         SPACE 1                                                    R41 41680900
NPLASCAN CLC   0(2,WA),=CL3', '    IF NOT CONTINUATION              R41 41681000
         BNE   NPLA0                GO SCAN FIELD                   R41 41681100
         CLI   2(WA),C','          IF NOT SPECIAL CASE OF -, ,-     R41 41681200
         BNE   NPLACONT             GO GET CONTINUATION CARD        R41 41681300
         SPACE 1                                                    R41 41681400
NPLA0    LNR   R0,WA               SET R0 INVALID INITIALLY         R41 41681500
         XR    WD,WD               CLEAR REG FOR CHAR               R41 41681600
         CLI   2(WA),C','          IF 1 CHAR FIELD                  R41 41681700
         BE    NPLA1                GO LOAD IT                      R41 41681800
         CLI   2(WA),C' '          IF NOT 1 CHAR FIELD              R41 41681900
         BNE   NPLA2                GO TEST FOR 2 CHAR FIELD        R41 41682000
         SPACE 1                                                    R41 41682100
NPLA1    IC    WD,1(,WA)           LOAD HEX CHAR                    R41 41682200
         CLI   1(WA),C'0'          IF FIELD                         R41 41682300
         BL    NPLARTN              IS NON NUMERIC                  R41 41682400
         CLI   1(WA),C'9'            LEAVE R0                       R41 41682500
         BH    NPLARTN                AS INVALID                    R41 41682600
         LR    R0,WD               GET                              R41 41682700
         SLL   R0,28                BINARY                          R41 41682800
         SRL   R0,28                 CHAR                           R41 41682900
         SPACE 1                                                    R41 41683000
NPLARTN  LA    WA,2(,WA)           POINT TO NEXT FIELD              R41 41683100
         BR    WE                  RETURN                           R41 41683200
         SPACE 1                                                    R41 41683300
NPLA2    CLI   3(WA),C','          IF 2 CHAR FIELD                  R41 41683400
         BE    NPLAC2               GO CONVERT IT                   R41 41683500
         CLI   3(WA),C' '          IF NOT 2 CHAR FIELD              R41 41683600
         BNE   NPLDVERR             GO ISSUE ERROR MSG              R41 41683700
         SPACE 1                                                    R41 41683800
NPLAC2   CLI   1(WA),C'A'          IF LESS THAN A                   R41 41683900
         BL    NPLDVERR             GO ISSUE ERROR MSG              R41 41684000
         CLI   1(WA),C'F'          IF MORE THAN F                   R41 41684100
         BH    NPLAFOX1             GO TEST FOR 1-9                 R41 41684200
         IC    WD,1(,WA)           PICK UP ALPHA CHAR               R41 41684300
         LA    WD,9(,WD)           CHANGE RIGHTMOST 4 BITS TO A-F   R41 41684400
         B     NPLASHF1            GO POSITION 4-BIT FIELD          R41 41684500
         EJECT                                                      R41 41684600
NPLAFOX1 CLI   1(WA),C'0'          IF LESS THAN 0                   R41 41684700
         BL    NPLDVERR             GO ISSUE ERROR MSG              R41 41684800
         CLI   1(WA),C'9'          IF MORE THAN 9                   R41 41684900
         BH    NPLDVERR             GO ISSUE ERROR MSG              R41 41685000
         IC    WD,1(,WA)           PICK UP NUMERIC CHAR             R41 41685100
         LR    R0,WD               GET COPY                         R41 41685200
         SLL   R0,28               CONVERT                          R41 41685300
         SRL   R0,28                TO                              R41 41685400
         MH    R0,=H'10'             BINARY                         R41 41685500
         SPACE 1                                                    R41 41685600
NPLASHF1 SLL   WD,28               POSITION                         R41 41685700
         SRL   WD,24                4-BIT FIELD                     R41 41685800
         CLI   2(WA),C'A'          IF LESS THAN A                   R41 41685900
         BL    NPLDVERR             GO ISSUE ERROR MSG              R41 41686000
         CLI   2(WA),C'F'          IF MORE THAN F                   R41 41686100
         BH    NPLAFOX2             GO TEST FOR 1-9                 R41 41686200
         IC    LINK,2(,WA)         PICK UP ALPHA CHAR               R41 41686300
         LA    LINK,9(,LINK)       CHANGE RIGHTMOST BITS TO A-F     R41 41686400
         LNR   R0,WA               SET R0 INVALID                   R41 41686500
         B     NPLASHF2            GO POSITION RIGHTMOST 4-BITS     R41 41686600
         SPACE 1                                                    R41 41686700
NPLAFOX2 CLI   2(WA),C'0'          IF LESS THAN 0                   R41 41686800
         BL    NPLDVERR             GO ISSUE ERROR MSG              R41 41686900
         CLI   2(WA),C'9'          IF MORE THAN 9                   R41 41687000
         BH    NPLDVERR             GO ISSUE ERROR MSG              R41 41687100
         IC    LINK,2(,WA)         PICK UP NUMERIC CHAR             R41 41687200
         SPACE 1                                                    R41 41687300
NPLASHF2 SLL   LINK,28             COMBINE                          R41 41687400
         SRL   LINK,28              TWO 4-BIT                       R41 41687500
         AR    WD,LINK               FIELDS                         R41 41687600
         LTR   R0,R0               IF R0 IS INVALID                 R41 41687700
         BM    NPLADD2              LEAVE IT INVALID                R41 41687800
         AR    R0,LINK             R0 IS A BINARY CHAR              R41 41687900
         SPACE 1                                                    R41 41688000
NPLADD2  LA    WA,3(,WA)           POINT TO NEXT FIELD              R41 41688100
         BR    WE                  RETURN                           R41 41688200
         SPACE 1                                                    R41 41688300
NPLACONT STM   R1,R6,NPLASAVE      SAVE STATUS                      R41 41688400
         BAL   LINK,NPLLIST        LIST CURRENT CARD                R41 41688500
         BAL   LINK,NPLGET         GET NEXT CARD                    R41 41688600
         B     NPLDVERR            IF EOF, GO ISSUE ERROR MSG +0    R41 41688700
         LM    R1,R6,NPLASAVE      RESTORE STATUS             +4    R41 41688800
         LA    WA,NCARD-2          SEARCH                           R41 41688900
         LA    R14,1                FOR                             R41 41689000
         LA    R15,NCARD+70          START                          R41 41689100
NPLASCNB BXH   WA,R14,NPLDVERR        OF                            R41 41689200
         CLI   1(WA),C' '              NEXT                         R41 41689300
         BE    NPLASCNB                 FIELD                       R41 41689400
         B     NPLA0               GO SCAN FIELD                    R41 41689500
         SPACE 1                                                    R41 41689600
NPLASAVE DS    6F                  SAVES STATUS REGS                R41 41689700
         EJECT                                                      R41 41689800
*********************************************************************** 41689900
*                                                                     * 41690000
*        NPLDCALC -- CALC DISPL AND ATTRIB OF NEXT COMPACTION CHAR    * 41690100
*                                                                     * 41690200
*********************************************************************** 41690300
         SPACE 1                                                    R41 41690400
         USING CPTDSECT,R1                                          R41 41690500
         SPACE 1                                                    R41 41690600
NPLDCALC CH    WC,=X'000F'         IF LAST VALID CHAR               R41 41690700
         BE    NPLDOUT              GO TEST FOR END OF STRING       R41 41690800
         CLI   CPTNMAST,16         IF NOT SPECIAL 16 MASTERS CASE,  R41 41690900
         BNE   NPLDCAL1             GO CALC NEXT DISPLACEMENT       R41 41691000
         CH    WC,=X'00FF'         IF LAST VALID CHAR               R41 41691100
         BE    NPLDOUT              GO TEST FOR END OF STRING       R41 41691200
         SPACE 1                                                    R41 41691300
NPLDCAL1 SRDL  WC,4                SEPARATE OLD DISPLACEMENT        R41 41691400
         SRL   WD,28                INTO TWO 4-BIT DIGITS: ROW,COL  R41 41691500
         LA    WD,1(,WD)           INCREMENT COLUMN DIGIT BY 1      R41 41691600
         CLM   WD,1,CPTNMAST       IF NOT PAST MASTER CHARS         R41 41691700
         BL    NPLDCAL2             LEAVE ATTRIBUTE AS IS           R41 41691800
         LA    WB,CPTNMST          SWITCH TO NONMASTER ATTRIBUTE    R41 41691900
         SPACE 1                                                    R41 41692000
NPLDCAL2 CH    WD,=H'16'           IF NOT TOO MANY COLUMNS          R41 41692100
         BL    NPLDCOMB             GO FORM NEW DISPLACEMENT        R41 41692200
         BCTR  WC,0                NEXT ROW                         R41 41692300
         XR    WD,WD               FIRST COLUMN                     R41 41692400
         CLM   WC,1,CPTNMAST       IF ROW HIGHER THAN NUM MASTERS   R41 41692500
         BNL   NPLDCOMB             LEAVE AT FIRST COLUMN           R41 41692600
         IC    WD,CPTNMAST         SHIFT COLUMN PAST NUM MASTERS    R41 41692700
         SPACE 1                                                    R41 41692800
NPLDCOMB SLL   WC,4                COMBINE ROW AND                  R41 41692900
         AR    WC,WD                COLUMN IN 1 BYTE                R41 41693000
         B     NPLALOOP            RETURN NORMALLY                  R41 41693100
         SPACE 1                                                    R41 41693200
NPLDOUT  CLI   0(WA),C' '          IF MORE CHARS IN FIELD           R41 41693300
         BNE   NPLDVERR             GO ISSUE ERROR MSG              R41 41693400
         B     NPLAOUT             RETURN, CPT FINISHED             R41 41693500
         SPACE 1                                                    R41 41693600
         DROP  R1                                                   R41 41693700
         TITLE 'HASP INITIALIZATION -- PARAMETER STATEMENT SUB-PARAMETEC41693800
               R SCAN SUBROUTINE'                                   R41 41693900
NPLSSCAN NULL                      SUB-PARAMETER SCAN SUBROUTINE        41694000
         MVC   NPLDSAVE,0(R1)      SAVE CURRENT FIELD DATA           R4 41694100
         STM   R0,R1,NPLSCTAB      SAVE REGISTERS                       41694200
         LA    WA,NCARD-2          RESET CARD COLUMN                    41694300
         SPACE 1                                                     R4 41694400
         BXH   WA,R14,NPLSSERR     SEARCH FOR                           41694500
         CLI   1(WA),C' '           START OF                            41694600
         BE    *-8                   NAME FIELD                         41694700
         SPACE 1                                                     R4 41694800
         BXH   WA,R14,NPLSSERR     SEARCH FOR                           41694900
         CLI   1(WA),C' '           END OF                              41695000
         BNE   *-8                   NAME FIELD                         41695100
         SPACE 1                                                     R4 41695200
NPLSSC01 BXH   WA,R14,NPLSSC25     SEARCH FOR                           41695300
         CLI   1(WA),C' '           START OF                            41695400
         BE    *-8                   SUB-PARAMETERS                     41695500
         SPACE 1                                                     R4 41695600
NPLSSC02 MVI   NPLSFILL,C' '       PRESET VALUE FIELD                   41695700
         MVC   NPLSVAL,NPLSFILL     TO BLANKS                           41695800
         MVI   NPLSSC22+1,X'F0'    SET FOR ALPHAMERIC SCAN           R4 41695900
         L     R1,=A(NPLTRT2)      POINT TO ALPHAMERIC XLATE TABLE   R4 41696000
         MVI   C'-'(R1),0          ALLOW HYPHEN AND SLASH            R4 41696100
         MVI   C'/'(R1),0           AS LEGAL CHARACTERS              R4 41696200
         BAL   WD,NPLSSC20         SCAN KEYWORD                         41696300
         B     NPLSKERR            BRANCH IF ILLEGAL KEYWORD            41696400
         CLI   NPLSNAME+7,C' '     TEST FOR NULL KEYWORD                41696500
         BE    NPLSSC20            IGNORE NULL KEYWORDS                 41696600
         CLI   NPLSNAME-1,C' '     TEST FOR OVERFLOW                    41696700
         BNE   NPLSKERR            BRANCH IF MORE THAN 8 CHARACTERS     41696800
         SPACE 1                                                     R4 41696900
         L     WB,NPLSCTAB         GET ADDRESS OF SCAN TABLE            41697000
         SPACE 1                                                     R4 41697100
         USING NSCANTBL,WB         ESTABLISH SCAN TABLE ADDRESSABILITY  41697500
         SPACE 1                                                     R4 41698000
NPLSSC03 CLC   NPLSNAME,NSCANAME   COMPARE TABLE KEYWORD                41698500
         BE    NPLSSC04            BRANCH IF KEYWORD MATCHES            41699000
         LA    WB,NSCANEXT         GET ADDRESS OF NEXT ENTRY            41699500
         CLI   0(WB),X'FF'         TEST FOR END OF SCAN TABLE           41700000
         BNE   NPLSSC03            CONTINUE IF NOT END OF TABLE         41700500
         B     NPLSKERR            ERROR IF KEYWORD NOT FOUND           41701000
         SPACE 1                                                     R4 41701500
NPLSSC04 L     WC,NPLSOTAB         GET ADDRESS OF OUTPUT TABLE          41702000
         SPACE 1                                               @OZ29180 41702050
         TM    NSCANFL2,NSCFLRTN   TEST FOR SPECIAL ROUTINE    @OZ29180 41702100
         BZ    NPLSSCNR            BRANCH IF NONE              @OZ29180 41702150
         ICM   R1,7,NSCANRTN       GET ROUTINE ADDRESS         @OZ29180 41702200
         BALR  WF,R1               GOTO ROUTINE                @OZ29180 41702250
         B     NPLSSC02            GET NEXT SUBPARAMETER       @OZ29180 41702300
         SPACE 1                                               @OZ29180 41702350
NPLSSCNR AH    WC,NSCANDSP         ADD DISPLACEMENT FOR SUBPRM @OZ29180 41702500
         TM    NSCANFLG,NSCFLMSK+NSCFLCOM  TEST OPTION BYTE             41703000
         BZ    NPLSSC05            BRANCH IF VALUE REQUIRED             41703500
         IC    R1,NSCANMSK         GET MASK FROM SCAN TABLE             41704000
         LA    WD,NPLSOI           ASSUME 'OR' OPERATION                41704500
         TM    NSCANFLG,NSCFLCOM   TEST OPTION BYTE                     41705000
         BZ    *+12                BRANCH IF NO COMPLEMENTATION         41705500
         LCR   R1,R1               COMPLEMENT MASK                      41706000
         BCTR  R1,0                CONVERT TO ONE'S COMPLEMENT          41706500
         LA    WD,NPLSNI           GET 'AND OPERATION                   41707000
         EX    R1,0(,WD)           PERFORM INDICATED OPERATION          41707500
         B     NPLSSC02            GET NEXT SUB-FIELD                   41708000
         SPACE 2                                                        41708500
NPLSSC05 CLI   0(WA),C'='          TEST CURRENT CHARACTER               41709000
         BNE   NPLSVERR            ILLEGAL IF NOT EQUAL SIGN            41709500
         L     R1,=A(NPLTRT2)      POINT TO ALPHAMERIC XLATE TABLE   R4 41710000
         MVI   C'-'(R1),1          DISALLOW HYPHEN AND SLASH         R4 41710500
         MVI   C'/'(R1),1           AS LEGAL CHARACTERS              R4 41711000
         MVC   NPLSNAME,NPLSFILL   BLANK OUT NAME FIELD                 41711500
         TM    NSCANFLG,NSCFLBLK   TEST OPTION BYTE                     41712000
         BO    NPLSSC06            BRANCH IF BLANK-FILL INDICATED       41712500
         MVI   NPLSFILL,C'0'       ASSUME EBCDIC-ZERO-FILL              41713000
         TM    NSCANFLG,NSCFLZER   TEST OPTION BYTE                     41713500
         BO    *+8                 BRANCH IF EBCDIC-ZERO-FILL           41714000
         MVI   NPLSFILL,0          BINARY-ZERO-FILL                     41714500
         MVC   NPLSVAL,NPLSFILL    PRESET VALUE FIELD TO ZEROES         41715000
         SPACE 2                                                        41715500
NPLSSC06 TM    NSCANFLG,NSCFLNUM+NSCFLBIN  TEST OPTION BYTE             41716000
         BZ    *+8                 BRANCH IF ALPHAMERIC SCAN            41716500
         MVI   NPLSSC22+1,0         ELSE SET FOR NUMERIC SCAN        R4 41717000
         BAL   WD,NPLSSC20         SCAN NEXT VALUE                      41717500
         B     NPLSVERR            BRANCH IF ILLEGAL VALUE              41718000
         TM    NSCANFLG,NSCFLBIN   TEST OPTION BYTE                     41718500
         BZ    NPLSSC07            BRANCH IF NO BINARY CONVERSION       41719000
         CLC   NPLSVAL(56),NPLSFILL  TEST FOR OVERFLOW                  41719500
         BNE   NPLSVERR            ERROR IF MORE THAN EIGHT CHARACTERS  41720000
         OI    NPLSNAME+7,X'F0'    INSURE VALID ZONE                    41720500
         PACK  NPLSNAME,NPLSNAME   CONVERT                              41721000
         SR    R0,R0                VALUE                               41721500
         CVB   R1,NPLSNAME           TO                                 41722000
         STM   R0,R1,NPLSNAME         BINARY                            41722500
         SPACE 2                                                        41723000
NPLSSC07 SR    R0,R0               GET                                  41723500
         IC    R0,NSCANLEN          VALUE LENGTH                        41724000
         BCTR  R0,0                DECREMENT FOR LATER USE              41724500
         LA    WD,62               COMPUTE LENGTH                       41725000
         SR    WD,R0                OF UNUSED VALUE FIELD               41725500
         BM    NPLSSC08            BRANCH IF ZERO LENGTH                41726000
         STC   WD,*+5              SET COMPARE LENGTH                   41726500
         CLC   NPLSVAL(*-*),NPLSFILL  TEST FOR FIELD OVERFLOW           41727000
         BNE   NPLSVERR            BRANCH IF VALUE OVERFLOWS FIELD      41727500
         SPACE 2                                                        41728000
NPLSSC08 LA    WD,NPLSVAL(WD)      COMPUTE ADDRESS OF 1ST BYTE - 1      41728500
         TM    NSCANFLG,NSCFLFIT   TEST OPTION BYTE                     41729000
         BZ    NPLSSC09            BRANCH IF EXACT FIT NOT REQUIRED     41729500
         CLC   NPLSFILL,1(WD)      TEST FIRST BYTE OF VALUE             41730000
         BNE   NPLSSC12            BRANCH IF VALUE IS EXACT FIT         41730500
         B     NPLSVERR            ERROR IF NOT EXACT FIT               41731000
         SPACE 2                                               @OZ29180 41731500
NPLSSC09 TM    NSCANFLG,NSCFLEFT   TEST OPTION BYTE                     41732000
         BZ    NPLSSC12            BRANCH IF NO LEFT JUSTIFICATION      41732500
         CLC   NPLSVAL,NPLSFILL    TEST VALUE                           41733000
         BE    NPLSSC12            BRANCH IF NULL                       41733500
         STC   R0,NPLSSC11+1       SET SHIFT LENGTH                     41734000
NPLSSC10 CLC   NPLSFILL,1(WD)      TEST FIRST CHARACTER                 41734500
         BNE   NPLSSC12            BRANCH IF NOT NULL VALUE             41735000
NPLSSC11 MVC   1(*-*,WD),2(WD)     SHIFT LEFT ONE CHARACTER             41735500
         MVC   NPLSVAL+63(1),NPLSFILL  ADD FILL CHARACTER               41736000
         B     NPLSSC10            TRY AGAIN                            41736500
         SPACE 2                                                        41737000
NPLSSC12 STC   R0,*+5              SET MOVE LENGTH                      41737500
         MVC   0(*-*,WC),1(WD)     SET OUTPUT VALUE                     41738000
         B     NPLSSC02            GET NEXT SUB-PARAMETER               41738500
         SPACE 2                                                     R4 41739000
NPLSKERR L     R1,=A(NPLSKERM)     POINT TO INVALID KEYWORD MSG      R4 41739500
         MVC   NPLSKERK-NPLSKERM(,R1),NPLSNAME  KILL IN KEYWORD      R4 41740000
         B     NPLSERR             PROCESS HASPPARM ERROR               41740500
         SPACE 2                                                     R4 41741000
NPLSVERR L     R1,=A(NPLSVERM)     POINT TO INVALID VALUE MSG        R4 41741500
         MVC   NPLSVERK-NPLSVERM(,R1),NSCANAME  FILL IN NAME         R4 41742000
         B     NPLSERR             PROCESS HASPPARM ERROR               41742500
         DROP  WB                  DROP SCAN TABLE ADDRESSABILITY       41743000
         EJECT                                                 @OZ29180 41743500
NPLSSC20 NULL                      KEYWORD AND VALUE SCAN SUBROUTINE    41744000
         LTR   R15,R15             TEST FOR END OF CARD                 41744500
         BZ    NPLSSC24            BRANCH IF END OF CARD                41745000
         BXH   WA,R14,NPLSSC23     GET NEXT CHARACTER                   41745500
         SPACE 2                                                        41746000
NPLSSC21 CLI   0(WA),C','          TEST NEXT CHARACTER                  41746500
         BE    4(,WD)              RETURN IF COMMA                      41747000
         CLI   0(WA),C'='          *                                    41747500
         BE    4(,WD)              RETURN IF EQUAL SIGN                 41748000
         CLI   0(WA),C' '          *                                    41748500
         BE    NPLSSC23            BRANCH IF BLANK                      41749000
         L     R1,=A(NPLTRT2)      POINT TO TRANSLATE TABLE          R4 41749500
         TRT   0(1,WA),0(R1)       TEST FOR ILLEGAL ALPHAMERIC       R4 41750000
         BNZR  WD                  RETURN IF YES TO +0               R4 41750500
NPLSSC22 NOP   *+10                BR IF ALPHAMERIC SCAN             R4 41751000
         CLI   0(WA),C'0'          TEST FOR NUMERIC                  R4 41751500
         BLR   WD                  RETURN IF NO TO +0                R4 41752000
         CLC   NPLSFILL,NPLSVAL    TEST HIGH-ORDER CHARACTER            41752500
         BNER  WD                  BRANCH IF OVERFLOW                   41753000
         MVC   NPLSVAL(63),NPLSVAL+1  SHIFT PARAMETER                   41753500
         MVC   NPLSVAL+63(1),0(WA) ADD CURRENT CHARACTER                41754000
         BXLE  WA,R14,NPLSSC21     GET NEXT CHARACTER                   41754500
NPLSSC23 SLR   R15,R15             INDICATE END OF CARD                 41755000
         B     4(,WD)              INDICATE END-OF-FIELD                41755500
         EJECT                                                       R4 41756000
NPLSSC24 BCTR  WA,0                BACK UP ONE CHARACTER                41756500
         CLI   0(WA),C','          TEST LAST CHARACTER                  41757000
         BNE   NPLSSC25            NO CONTINUATION IF NOT COMMA         41757500
         BAL   LINK,NPLLIST        LIST CURRENT CARD                    41758000
         BAL   LINK,NPLGET         READ NEXT CARD                       41758500
         B     NPLSCERR            ILLEGAL IF END-OF-FILE               41759000
         LA    WA,NCARD-2          SET UP                               41759500
         LA    R14,1                SCAN                                41760000
         LA    R15,NCARD+70          REGISTERS                          41760500
         B     NPLSSC01            SCAN CONTINUATION CARD               41761000
         SPACE 2                                                        41761500
NPLSSC25 CLI   NCARD+71,C' '       TEST COLUMN 72                       41762000
         BE    NPLSEXIT            BRANCH IF NO CONTINUATION INDICATED  41762500
         BAL   LINK,NPLLIST        LIST CURRENT CARD                    41763000
         BAL   LINK,NPLGET         READ NEXT CARD                       41763500
         B     NPLSCERR            ILLEGAL IF END-OF-FILE               41764000
         B     NPLSSC25            TREAT AS COMMENT                     41764500
         SPACE 5                                                        41765000
NPLSCERR L     R1,=A(NPLSCERM)     POINT TO INVALID CONTINUATION MSG R4 41765500
NPLSERR  OI    NPLFLAGS,NPLERROR   INDICATE HASPPARM ERROR              41766000
         MVC   NDIAG,0(R1)         MOVE DIAGNOSTIC TO PARM CARD      R4 41766500
         SPACE 2                                                        41767000
NPLSEXIT LM    R0,R1,NPLSCTAB      RESTORE REGISTERS                    41767500
         BR    WE                   AND RETURN                          41768000
         SPACE 5                                                        41768500
NPLSOI   OI    0(WC),*-*           ***** EXECUTE ONLY *****             41769000
NPLSNI   NI    0(WC),*-*           ***** EXECUTE ONLY *****             41769500
         SPACE 2                                                        41770000
NPLSCTAB DS    F                   ADDRESS OF SCAN TABLE                41770500
NPLSOTAB DS    F                   ADDRESS OF OUTPUT TABLE              41771000
         SPACE 2                                                        41771500
         ORG   *-7                 FORCE                                41772000
         DS    0D,7X                BOUNDARY ALIGNMENT                  41772500
NPLSFILL DS    C                   FILLER CHARACTER                     41773000
NPLSVAL  DS    0CL64,CL56          VALUE FIELD                          41773500
NPLSNAME DS    CL8                 NAME FIELD                           41774000
         TITLE 'HASP INITIALIZATION -- PARAMETER STATEMENT SUB-PARAMETEC41774500
               R SCAN TABLE DSECT'                                  R41 41775000
         SPACE 5                                                        41775500
NSCANTBL DSECT                     SUB-PARAMETER SCAN TABLE             41776000
NSCANAME DS    CL8                 SUB-PARAMETER NAME                   41776500
NSCANFLG DS    B                   SUB-PARAMETER FLAGS                  41777000
NSCANFL2 DS    B                   SUB-PARAMETER FLAGS 2       @OZ29180 41777100
NSCANRTN DS    0AL3                SUB-PARAMETER SCAN ROUTINE  @OZ29180 41777200
NSCANDSP DS    AL2                 SUB-PARAMETER VALUE DISPLAC @OZ29180 41777300
NSCANMSK DS    0X                  SUB-PARAMETER MASK                   41777500
NSCANLEN DS    AL1                 SUB-PARAMETER VALUE LENGTH           41778000
         DS    AL3                 RESERVED                    @OZ29180 41778500
NSCANEXT DS    0F                  ADDRESS OF NEXT TABLE ENTRY          41779000
HASPINIT CSECT                     END OF SUB-PARAMETER SCAN TABLE      41779500
         SPACE 5                                                        41780000
*                             NSCANFLG                                  41780500
         SPACE 3                                                        41781000
NSCFLMSK EQU   B'10000000'         NSCANMSK CONTAINS MASK               41781500
NSCFLCOM EQU   B'01000000'         NSCANMSK CONTAINS COMPLEMENTED MASK  41782000
NSCFLNUM EQU   B'00100000'         VALUE MUST BE NUMERIC                41782500
NSCFLBIN EQU   B'00010000'         CONVERT VALUE TO BINARY              41783000
NSCFLEFT EQU   B'00001000'         LEFT-ADJUST VALUE                    41783500
NSCFLFIT EQU   B'00000100'         NSCANLEN MUST EQUAL VALUE LENGTH     41784000
NSCFLBLK EQU   B'00000010'         BLANK-FILL VALUE                     41784500
NSCFLZER EQU   B'00000001'         EBCDIC-ZERO-FILL VALUE               41785000
         SPACE 5                                               @OZ29180 41785100
*                             NSCANFL2                         @OZ29180 41785200
         SPACE 3                                               @OZ29180 41785300
NSCFLRTN EQU   B'10000000'         NSCANRTN CONTAINS RTN ADDR  @OZ29180 41785400
         TITLE 'HASP INITIALIZATION -- PARAMETER STATEMENT GET SUBROUTIC41785500
               NE'                                                  R41 41786000
NPLGET   NULL                      PARAMETER LIBRARY GET SUBROUTINE     41786500
         ST    LINK,NPLGSAVE       SAVE RETURN REGISTER                 41787000
         MVC   NDIAG,NDIAG-1       CLEAR DIAGNOSTIC AREA                41787500
         TM    NPLFLAGS,NPLCONSL   ARE WE IN CONSOLE MODE...        R41 41787600
         BZ    NPLGETCD            BR IF NO                         R41 41787700
         MVI   NPLECB,0            CLEAR ECB                        R41 41787800
         L     R1,=A(NLOGMSG)      POINT TO LOG MESSAGE             R41 41787900
         MVC   NLOGTEXT-NLOGMSG(,R1),NPLBLNKS  CLEAR REPLY AREA     R41 41788000
        $$WTOR NOPRMSG             ISSUE CONSOLE QUERY              R41 41788100
         WAIT  ECB=NPLECB          WAIT FOR RESPONSE                R41 41788200
         L     R1,=A(NLOGMSG)      POINT TO LOG MESSAGE             R41 41788300
         MVC   NCARD,NLOGTEXT-NLOGMSG(R1)  MOVE REPLY TO CARD AREA  R41 41788400
         OC    NCARD,NPLBLNKS      FORCE UPPER CASE RESPONSE        R41 41788500
         L     LINK,NPLGSAVE       RESTORE RETURN REGISTER          R41 41788600
         CLC   NCARD(4),=C'END '   TEST FOR 'END'                   R41 41788700
         BER   LINK                RETURN IF YES TO +0              R41 41788800
         CLC   NCARD(7),=C'CANCEL '  TEST FOR CANCEL                R41 41788900
         BNE   NPLGETST            BR IF NO TO TEST FOR COMMENT     R41 41789000
         OI    NPLFLAGS,NPLCAN     INDICATE CANCEL                  R41 41789100
         B     NPLGEOF1            BR TO END-OF-FILE EXIT           R41 41789200
         EJECT                                                      R41 41789300
NPLGETCD TM    NPLFLAGS,NPLEOFSW   TEST STATUS BYTE                 R41 41789400
         BO    NPLGEOF             BRANCH IF PREVIOUS EOF               41789500
         L     R1,=A(HASPPARM)     POINT TO HASPPARM DCB            R41 41789600
         GET   (1)                 GET LOCATION OF NEXT CARD        R41 41789700
         MVC   NCARD,0(R1)         MOVE CARD TO WORK AREA               41790000
         CLC   NCARD(2),=C'/*'     TEST FOR /* CARD                     41791000
         BE    NPLGEOF1            BR IF YES TO SIMULATE EOF        R41 41791100
         SPACE 1                                                    R41 41791200
NPLGETST LA    R0,NCARD            POINT TO START OF STATEMENT      R41 41791300
         LA    R1,71               GET STATEMENT LENGTH             R41 41791400
         SLR   R15,R15             SET LENGTH FOR COMPARE           R41 41791500
         ICM   R15,8,NPLBLNKS      GET PAD BYTE                     R41 41791600
         CLCL  R0,R14              SCAN FOR 1ST NON-BLANK CHARACTER R41 41791700
         BE    NPLGELST            BR IF BLANK STATEMENT            R41 41791800
         LR    WA,R0               RELOAD FIELD ADDRESS             R41 41791900
         CLI   0(WA),C'*'          TEST FOR COMMENT                 R41 41792000
         BE    NPLGELST            BR IF YES TO LIST/LOG STATEMENT  R41 41792100
         L     LINK,NPLGSAVE       RESTORE RETURN REGISTER          R41 41792200
         B     4(,LINK)             AND RETURN TO +4                R41 41792300
         SPACE 1                                                    R41 41792400
NPLGELST BAL   LINK,NPLLIST        LIST/LOG BLANK/COMMENT STATEMENT R41 41792500
         L     LINK,NPLGSAVE       RESTORE RETURN REGISTER          R41 41792600
         B     NPLGET              BR TO GET NEXT STATEMENT         R41 41792700
         SPACE 3                                                    R41 41792800
NPLGEOF  NULL                      END-OF-FILE EXIT                     41793000
         MVC   NCARD,NLINE         BLANK OUT CARD IMAGE                 41793500
NPLGEOF1 OI    NPLFLAGS,NPLEOFSW   SET EOF SWITCH                       41794000
         L     LINK,NPLGSAVE       RESTORE RETURN REGISTER              41794500
         BR    LINK                TAKE END-OF-FILE RETURN              41795000
         TITLE 'HASP INITIALIZATION -- PARAMETER STATEMENT CONVERTER PAC41795500
               RAMETER FIELD VALIDATION SUBROUTINE'                 R41 41796000
*********************************************************************** 41796500
*                                                                     * 41797000
*        NPLRDVAL -- VALIDATE CONVERTER PARM FIELD                    * 41797500
*                                                                     * 41798000
*********************************************************************** 41798500
         SPACE 1                                                     R4 41799000
NPLRDVAL MVC   NPLLWORK(1),NPLWORK+14  SAVE 'A---'                   R4 41799500
         MVI   NPLWORK+14,C'0'     MAKE 'A---' NUMERIC               R4 41800000
         LA    R0,20               GET PARM FIELD LENGTH             R4 41800500
         LA    WC,NPLWORK          GET PARM FIELD ADDRESS           R41 41801000
         SPACE 1                                                     R4 41801500
SKIP310  CLI   0(WC),C'0'          ENSURE                           R41 41802000
         BLR   WE                   ALL BUT                         R41 41802500
         LA    WC,1(,WC)             'A---'                         R41 41803000
         BCT   R0,SKIP310             NUMERIC                        R4 41803500
         SPACE 1                                                     R4 41804000
         MVC   NPLWORK+14(1),NPLLWORK  RESTORE ORIGINAL 'A---'       R4 41804500
         CLI   NPLWORK,C'3'        TEST 'B'                          R4 41805000
         BHR   WE                  RETURN IF ILLEGAL TO +0          R41 41805500
         CLC   =C'144000',NPLWORK+3  TEST 'MMMMSS'                   R4 41806000
         BLR   WE                  RETURN IF ILLEGAL TO +0          R41 41806500
         CLC   =C'60',NPLWORK+7    TEST 'SS'                         R4 41807000
         BNHR  WE                  RETURN IF ILLEGAL TO +0          R41 41807500
         CLI   NPLWORK+12,C'3'     TEST 'R'                          R4 41808000
         BHR   WE                  RETURN IF ILLEGAL TO +0          R41 41808500
         CLI   NPLWORK+13,C'1'     TEST 'L'                          R4 41809000
         BHR   WE                  RETURN IF ILLEGAL TO +0          R41 41809500
         CLC   NPLWORK+15(4),=C'0002'  TEST '-AAA' AND 'E'           R4 41810000
         BHR   WE                  RETURN IF ILLEGAL TO +0          R41 41810500
         CLI   NPLWORK+19,C'1'     TEST 'F'                          R4 41811000
         BHR   WE                  RETURN IF ILLEGAL TO +0          R41 41811500
         CLI   NPLLWORK,C'E'       TEST 'A---'                       R4 41812000
         BH    NPLRDVLA            BR IF PROBABLE NUMERIC            R4 41812500
         TM    NPLLWORK,1          TEST FOR LEGAL ALPHA              R4 41813000
         BZR   WE                  RETURN IF ILLEGAL TO +0          R41 41813500
         B     4(,WE)              OK IF A, C, OR E                 R41 41813600
         SPACE 1                                                    R41 41813700
NPLRDVLA CLI   NPLLWORK,C'0'       TEST FOR NUMERIC                 R41 41813800
         BLR   WE                  RETURN IF ILLEGAL ALPHA TO +0    R41 41813900
         TM    NPLLWORK,1          TEST FOR LEGAL NUMERIC           R41 41814000
         BLR   WE                  RETURN IF ILLEGAL TO +0          R41 41814100
         B     4(,WE)              OK IF 0, 2, 4, 6, OR 8           R41 41814200
         TITLE 'HASP INITIALIZATION -- PARAMETER STATEMENT LIST SUBROUTC41814300
               INE'                                                 R41 41814400
NPLLIST  NULL                      PARAMETER STATEMENT LIST SUBROUTINE  41814500
         ST    LINK,NPLLSAVE       SAVE RETURN REGISTER             R41 41814600
         L     R1,=A(NDIAGMSG)     POINT TO DIAGNOSTIC MESSAGE      R41 41814700
         MVC   NDIAGTXT-NDIAGMSG(,R1),NDIAG  SET DIAGNOSTIC         R41 41814800
         L     R1,=A(NLOGMSG)      POINT TO LOG MESSAGE             R41 41814900
         MVC   NLOGTEXT-NLOGMSG(,R1),NCARD  INSERT STATEMENT        R41 41815000
         LA    R0,78               SET LOOP TERMINATOR              R41 41815100
         LA    WA,NCARD+79         POINT TO LAST CHARACTER          R41 41815200
         SPACE 1                                                    R41 41815300
NPLLOGLN CLI   0(WA),C' '          TEST NEXT CHARACTER              R41 41815400
         BNE   NPLLOGIT            BR IF NON-BLANK                  R41 41815500
         BCTR  WA,0                BACK UP 1 CHARACTER              R41 41815600
         BCT   R0,NPLLOGLN         LOOP UNTIL 1ST NON-BLANK CHAR    R41 41815700
         SPACE 1                                                    R41 41815800
NPLLOGIT SL    WA,=A(NCARD)        GET STATEMENT LENGTH - 1         R41 41815900
         LA    WA,4+9+1(,WA)       ALLOW FOR WTO, MSGID, + 1        R41 41816000
         STH   WA,0(,R1)           SET MESSAGE LENGTH               R41 41816100
         CLI   NDIAG,C' '          WAS STATEMENT FLAGGED...         R41 41816200
         BE    NPLOGTST            BR IF NO                         R41 41816300
         TM    NPLFLAGS,NPLCONSL   ARE WE IN CONSOLE MODE...        R41 41816400
         BO    NPLDIAG             BR IF YES                        R41 41816500
        $$WTO  (R1)                DISPLAY PARAMETER STATEMENT      R41 41816600
         SPACE 1                                                    R41 41816700
NPLDIAG $$WTO  NDIAGMSG            DISPLAY PARAMETER DIAGNOSTIC     R41 41816800
         OI    NPLFLAGS,NPLCONSL   ENTER CONSOLE MODE               R41 41816900
         B     NPLIST              BR TO LIST PARAMETER STATEMENT   R41 41817000
         SPACE 1                                                    R41 41817100
NPLOGTST TM    $OPTSTAT,$OPTLOG    TEST OPERATOR OPTIONS            R41 41817200
         BZ    NPLIST              BR IF NOLOG SPECIFIED            R41 41817300
         TM    NPLFLAGS,NPLNOLOG   TEST HASPPARM CONTROL STATUS     R41 41817400
         BO    NPLIST              BR IF NOLOG IN EFFECT            R41 41817500
         L     WA,=A(NLOGMSG)      POINT TO LOG MESSAGE             R41 41817600
         OI    2(WA),X'02'         INDICATE HARD COPY ONLY          R41 41817700
        $$WTO  (WA)                LOG PARAMETER STATEMENT          R41 41817800
         NI    2(WA),255-X'02'     RESET HARD COPY INDICATOR        R41 41817900
         EJECT                                                      R41 41818000
NPLIST   L     LINK,NPLLSAVE       RESTORE RETURN ADDRESS           R41 41818100
         TM    $OPTSTAT,$OPTLIST   TEST OPERATOR OPTIONS                41819000
         BZR   LINK                BRANCH IF NOLIST SPECIFIED           41819500
         TM    NPLFLAGS,NPLNOLST   TEST HASPPARM CONTROL STATUS         41820000
         BOR   LINK                BRANCH IF NOLIST IN EFFECT           41820500
         L     WA,=A(HASPLIST)     POINT TO HASPLIST DCB            R41 41821000
         LH    R0,NPLLINCT         GET LINE COUNT                       41821500
         BCT   R0,NPLLIST1         BRANCH IF NOT END OF PAGE            41822000
         LH    R1,NPLLPGCT         GET PAGE COUNT                       41823000
         LA    R1,1(,R1)           INCREMENT                            41823500
         STH   R1,NPLLPGCT          AND SAVE                            41824000
         CVD   R1,NPLLWORK         CONVERT TO PACKED DECIMAL            41824500
         MVC   NPLLPGNO,=X'40202120'  SET EDIT MASK                     41825000
         ED    NPLLPGNO,NPLLWORK+6 EDIT PAGE COUNT                      41825500
         PUT   (WA),NPLLTTL1       WRITE TITLE                      R41 41826000
         PUT   (WA),NPLLTTL2       WRITE SPACE                      R41 41826500
         LA    R0,50               RESET LINE COUNT                     41827000
         SPACE 1                                                    R41 41827500
NPLLIST1 STH   R0,NPLLINCT         SAVE UPDATED LINE COUNT              41828000
         PUT   (WA),NLINE          WRITE PARAMETER STATEMENT        R41 41828500
         L     LINK,NPLLSAVE       RESTORE LINK REGISTER                41829000
         BR    LINK                 AND RETURN                          41829500
         TITLE 'HASP INITIALIZATION -- PARAMETER LIBRARY PROCESSING TERC41830000
               MINATION'                                             R4 41830500
NPLCLOSE NULL                      CLOSE PARAMETER LIBRARY DATA SETS R4 41831000
         L     WA,=A(NPLCLIST)     POINT TO DCB CLOSE LIST          R41 41831500
         CLOSE MF=(E,(WA))         CLOSE FILES                      R41 41832000
         SPACE 1                                                     R4 41832500
NPLFREEP L     R1,0(,WA)           GET ADDRESS OF NEXT DCB           R4 41833000
         TM    DCBBUFCB+3-DCBDSECT(R1),1  TEST FOR BUFFER POOL       R4 41833500
         BO    NPLNPOOL            BR IF NO                          R4 41834000
         FREEPOOL (1)               ELSE FREE BUFFER POOL            R4 41834500
         SPACE 1                                                     R4 41835000
NPLNPOOL TM    0(WA),X'80'         TEST DCB LIST ENTRY               R4 41835500
         LA    WA,4(,WA)           STEP TO NEXT ENTRY                R4 41836000
         BZ    NPLFREEP            BR IF NOT LAST ENTRY              R4 41836500
         EJECT                                                      R41 41836600
         TM    NPLFLAGS,NPLCAN     INITIALIZATION CANCELLED...      R41 41836700
         BO    NPLQUIT             BR IF YES                        R41 41836800
         L     WE,=A(NCATNIP)      POINT TO NEXT SECTION             R4 41837000
         TM    NPLFLAGS,NPLERROR   TEST FOR PARAMETER LIBRARY ERROR  R4 41837500
         BZR   WE                  BR IF NO TO NEXT SECTION          R4 41838000
         L     R1,=A(NMSG451)      POINT TO WARNING MESSAGE          R4 41838500
         SPACE 1                                                     R4 41839000
NPLWTOR $$WTO  (R1)                ISSUE WARNING MESSAGE TO OPERATOR R4 41839500
         SPACE 1                                                     R4 41840000
NPLQUERY MVI   NPLECB,0            CLEAR ECB                         R4 41840500
        $$WTOR NMSG441             ASK OPERATOR ABOUT CONTINUING     R4 41841000
         WAIT  ECB=NPLECB          WAIT FOR OPERATOR REPLY           R4 41841500
         OI    NPLREPLY,X'40'      FORCE UPPER CASE REPLY            R4 41842000
         CLI   NPLREPLY,C'Y'       TEST FOR CONTINUE                 R4 41842500
         BER   WE                  BR IF YES                         R4 41843000
         CLI   NPLREPLY,C'N'       TEST FOR QUIT                     R4 41843500
         BNE   NPLQUERY            BR IF NO TO RE-ISSUE QUERY        R4 41844000
         SPACE 1                                                    R41 41844100
NPLQUIT $EXIT  NGQUITM             ISSUE 'QUIT' MESSAGE AND QUIT    R41 41844500
         TITLE 'HASP INITIALIZATION -- PARAMETER STATEMENT DATA AREAS'  41857500
NPLDBL   DS    D                   DOUBLE WORD WORK AREA             R4 41858000
NPLLWORK EQU   INITDBL             DOUBLE WORD WORK AREA             R4 41858500
NPLHEXSV DS    F                   HEX ROUTINE SAVE AREA       @OZ29180 41858600
NPLGSAVE DS    F                   SAVE AREA                         R4 41859000
NPLLSAVE DS    F                   SAVE AREA                        R41 41859500
NPLECB   DS    F                   WTOR ECB                         R41 41860000
         SPACE 1                                                     R4 41860500
NPLLINCT DC    H'1'                LINE COUNT                        R4 41861000
NPLLPGCT DC    H'0'                PAGE COUNT                        R4 41861500
         SPACE 1                                                     R4 41862000
NPLFLAGS DC    AL1(NPLNOLOG)       PARAMETER LIBRARY FLAGS          R41 41862500
NPLEOFSW EQU   B'10000000'         END-OF-FILE INDICATION            R4 41863000
NPLNOLST EQU   B'01000000'         NOLIST INDICATION                 R4 41863500
NPLERROR EQU   B'00100000'         HASPPARM STMNT ERROR INDICATION   R4 41864000
NPLZAPSW EQU   B'00010000'         SUPERZAP MODE INDICATION          R4 41864500
NPLNOLOG EQU   B'00001000'         NOLOG INDICATOR                  R41 41864600
NPLCONSL EQU   B'00000100'         CONSOLE MODE                     R41 41864700
NPLCAN   EQU   B'00000010'         INITIALIZATION ABORT SWITCH      R41 41864800
NPLREPLY DS    C                   WTOR REPLY AREA                  R41 41865000
         SPACE 1                                                     R4 41865500
NPLDSAVE DS    XL((DCTCLASS+36+1+3-DCTDSECT)/4*4)  DCT/RAT SAVE AREA R4 41866000
NPLWORK  DS    CL20                WORK AREA                         R4 41866500
NPLHEXCH DS    X                   HEX BYTE WORK AREA          @OZ29180 41866600
         SPACE 3                                                     R4 41867000
NPLLTTL1 DC    CL26'1',CL87'JES2 PARAMETER LIBRARY LISTING',C'PAGE'  R4 41867500
NPLLPGNO DC    CL4'   1'           EBCDIC PAGE NUMBER                R4 41868000
NPLLTTL2 DC    CL121'0'            DOUBLE SPACE                      R4 41868500
NPLBLNKS EQU   NPLLTTL2+1,120      BLANKS                            R4 41869000
         SPACE 3                                                     R4 41869500
NLINE    DS    0CL121              LINE IMAGE                        R4 41870000
         DC    CL1' '              CARRIAGE CONTROL                  R4 41870500
NCARD    DC    CL80' '             CARD IMAGE                        R4 41871000
         DC    CL2' '                                                R4 41871500
NDIAG    DC    CL38' '             DIAGNOSTIC AREA                   R4 41872000
         SPACE 2                                                    R41 41872100
         DROP  BASE2,BASE3,BASE4   KILL LOCAL ADDRESSABILITY        R41 41872200
         EJECT                                                      R41 41872500
         LTORG                                                      R41 41872600
         TITLE 'HASP INITIALIZATION -- PARAMETER LIBRARY DATA CONTROL BC41872700
               LOCKS'                                               R41 41872800
         AIF   ('&PRINT' NE 'OFF').NCBB                             R41 41872900
         PUSH  PRINT                                                R41 41873000
         PRINT NOGEN                                                R41 41873100
.NCBB    SPACE 2                                                    R41 41873200
NPLCLIST CLOSE (HASPPARM,FREE,HASPLIST,FREE),MF=L                   R41 41873300
         SPACE 3                                                    R41 41873400
HASPPARM DCB   DSORG=PS,MACRF=(GL),DDNAME=HASPPARM,EODAD=NPLGEOF,   R41C41873500
               LRECL=80,BUFNO=1,EROPT=SKP,RECFM=FB,EXLST=NPLEXLST   R41 41873600
         SPACE 3                                                    R41 41873700
HASPLIST DCB   DSORG=PS,MACRF=(PM),DDNAME=HASPLIST,RECFM=FBA,       R41C41873800
               LRECL=121,EROPT=ACC,EXLST=NPLEXLST                   R41 41873900
         SPACE 2                                                    R41 41874000
         AIF   ('&PRINT' NE 'OFF').NCBE                             R41 41874100
         POP   PRINT                                                R41 41874200
.NCBE    SPACE 3                                                    R41 41874300
NPLEXLST DC    0F'0',X'85',AL3(NPLEXIT)  DCB EXIT LIST              R41 41874400
         SPACE 3                                                    R41 41874500
         USING DCBDSECT,R1         PROVIDE DCB ADDRESSABILITY       R41 41874600
         SPACE 1                                                    R41 41874700
NPLEXIT  MVC   DCBBUFL,DCBBLKSI    SET BUFFER LENGTH                R41 41874800
         OC    DCBBLKSI,DCBBLKSI   BLOCK SIZE PROVIDED...           R41 41874900
         BNZR  R14                 RETURN IF YES                    R41 41875000
         MVC   DCBBLKSI,DCBLRECL    ELSE SET BLKSIZE=LRECL          R41 41875100
         MVC   DCBBUFL,DCBBLKSI      AND RESET BUFFER LENGTH        R41 41875200
         BR    R14                 THEN RETURN                      R41 41875300
         SPACE 1                                                    R41 41875400
         DROP R1                   KILL DCB ADDRESSABILITY          R41 41875500
         TITLE 'HASP INITIALIZATION -- PARAMETER STATEMENT SUB-PARAMETEC41875600
               R SCAN TABLES'                                       R41 41875700
NPLPITST $SCNTBL PITDSECT          LOGICAL INITIATOR SCAN TABLE      R4 41875800
         $SCNTBL NAME,L'PITPATID,PITPATID,NSCFLBLK                   R4 41875900
         $SCNTBL CLASS,36,PITCLASS,NSCFLEFT+NSCFLBLK                 R4 41876000
         $SCNTBL (DRAIN,START),PITHOLD1,PITSTAT                      R4 41876100
         $SCNTBL                   END OF SCAN TABLE                 R4 41876500
         SPACE 5                                                     R4 41877000
NPLCATST $SCNTBL CATDSECT          CAT SCAN TABLE                    R4 41877500
         $SCNTBL CONVPARM,L'CATCONVP,CATCONVP,NSCFLFIT               R4 41878000
         $SCNTBL PERFORM,L'CATPERFM,CATPERFM,NSCFLNUM+NSCFLZER       R4 41878500
         $SCNTBL PROCLIB,L'CATPROCN,CATPROCN,NSCFLNUM+NSCFLZER       R4 41879000
         $SCNTBL (COPY,NOCOPY),CATTCOPY,CATJOBFL                     R4 41879500
         $SCNTBL (HOLD,NOHOLD),CATTHOLD,CATJBOPT                     R4 41880000
         $SCNTBL (NOJOURN,JOURNAL),CATNOJNL,CATJOBFL                 R4 41880500
         $SCNTBL (NOLOG,LOG),CATNOLOG,CATJBOPT                       R4 41881000
         $SCNTBL (NOOUTPUT,OUTPUT),CATNOUPT,CATJOBFL                 R4 41881500
         $SCNTBL (SCAN,NOSCAN),CATTSCAN,CATJOBFL                     R4 41882000
         $SCNTBL (XBATCH,NOXBATCH),CATXBACH,CATJBOPT                 R4 41882500
         $SCNTBL (NOUSO,IEFUSO),CATNOUSO,CATSMFLG                   R41 41883000
         $SCNTBL (NOTYPE6,TYPE6),CATNOTY6,CATSMFLG                   R4 41883500
         $SCNTBL (NOUJP,IEFUJP),CATNOUJP,CATSMFLG                    R4 41884000
         $SCNTBL (NOTYPE26,TYPE26),CATNOT26,CATSMFLG                 R4 41884500
         $SCNTBL (RESTART,NORESTRT),CATRSTRT,CATJOBFL                R4 41885000
         $SCNTBL                   END OF SCAN TABLE                 R4 41885500
         SPACE 5                                                     R4 41886000
NPLSCAST $SCNTBL SCADSECT          SCAT SCAN TABLE                   R4 41886500
         $SCNTBL (PUNCH,PRINT),SCATPNCH,SCATFLAG                     R4 41887000
         $SCNTBL (HOLD,NOHOLD),SCATHOLD,SCATFLAG                     R4 41887500
         $SCNTBL (DUMMY,SYSOUT),SCATDUMM,SCATFLAG                    R4 41888000
         $SCNTBL (TRKCEL,NOTRKCEL),SCATTCEL,SCATFLAG                 R4 41888500
         $SCNTBL                   END OF SCAN TABLE                 R4 41889000
         EJECT                                                       R4 41889500
NPLRDRST $SCNTBL DCTDSECT          LOCAL CARD READER SCAN TABLE      R4 41890000
         $SCNTBL UNIT,3,DCTBUFAD,NSCFLZER                            R4 41890500
         $SCNTBL PRDEST,L'DCTPRRTE,DCTPRRTE,NSCFLBIN                 R4 41891000
         $SCNTBL PUDEST,L'DCTPURTE,DCTPURTE,NSCFLBIN                 R4 41891500
         $SCNTBL MSGCLASS,1,DCTMCLAS,NSCFLFIT                        R4 41894500
         $SCNTBL (PRLCL,PRRMT),DCTPRLCL,DCTFLAGS                     R4 41895000
         $SCNTBL (PULCL,PURMT),DCTPULCL,DCTFLAGS                     R4 41895500
         $SCNTBL (DRAIN,AUTO),DCTDRAIN,DCTSTAT                       R4 41896000
         SPACE 1                                                     R4 41896500
NPLINRST $SCNTBL PRIOINC,L'DCTPRINC,DCTPRINC,NSCFLBIN                R4 41897000
         $SCNTBL PRIOLIM,L'DCTPRLIM,DCTPRLIM,NSCFLBIN                R4 41897500
         $SCNTBL CLASS,1,DCTJCLAS,NSCFLFIT                           R4 41898000
         $SCNTBL AUTH,L'DCTRAUTH,DCTRAUTH,NSCFLBIN                   R4 41898500
         $SCNTBL (HOLD,NOHOLD),DCTHOLDJ,DCTFLAGS                     R4 41899000
         $SCNTBL                   END OF SCAN TABLE                 R4 41899500
         SPACE 5                                                     R4 41900000
NPLPPST  $SCNTBL DCTDSECT          LOCAL PRINT/PUNCH SCAN TABLE      R4 41900500
         $SCNTBL UNIT,3,DCTBUFAD,NSCFLZER                            R4 41901000
         $SCNTBL ROUTECDE,L'DCTROUTE,DCTROUTE,NSCFLBIN               R4 41901500
         $SCNTBL CLASS,36,DCTCLASS,NSCFLEFT+NSCFLBLK                 R4 41902000
         $SCNTBL FORMS,L'DCTFORMS,DCTFORMS,NSCFLEFT+NSCFLBLK         R4 41902500
         $SCNTBL FCB,L'DCTFCB,DCTFCB,NSCFLEFT+NSCFLBLK               R4 41903000
         $SCNTBL UCS,L'DCTUCS,DCTUCS,NSCFLEFT+NSCFLBLK               R4 41903500
         $SCNTBL (BURST,NOBURST),DCTNIBRS,DCTPPSW2                   R4 41904000
         $SCNTBL (MARK,NOMARK),DCTNIMRK,DCTPPSW2                     R4 41904500
         $SCNTBL (OPERATOR,AUTO),DCTPPSWF,DCTPPSW                    R4 41905000
         $SCNTBL (NOSEP,SEP),DCTPPSWS,DCTPPSW                        R4 41905500
         $SCNTBL (SEPEXIST,SEPDEFLT),DCTSEPNL,DCTPPSW2              R41 41905700
         $SCNTBL (PAUSE,NOPAUSE),DCTPAUSE,DCTPPFL                    R4 41906000
         $SCNTBL (DRAIN,START),DCTDRAIN,DCTSTAT                      R4 41906500
         $SCNTBL (DSPLTCEL,DSPLSNGL),DCTTCEL,DCTPPFL                 R4 41907000
         $SCNTBL                   END OF SCAN TABLE                 R4 41907500
         EJECT                                                       R4 41908000
NPLLINST $SCNTBL DCTDSECT          RJE LINE SCAN TABLE               R4 41908500
         $SCNTBL UNIT,3,DCTBUFAD,NSCFLZER                            R4 41909000
         $SCNTBL PASSWORD,L'MDCTPSWD,MDCTPSWD,NSCFLEFT+NSCFLBLK      R4 41909500
         $SCNTBL (IFACEB,IFACEA),B'00100000',MDCTMODE                R4 41911500
         $SCNTBL (FDUPLEX,HDUPLEX),DCTPFULL,MDCTLINE                 R4 41912000
         $SCNTBL (HISPEED,LOWSPEED),DCTPWIDE,MDCTLINE                R4 41912500
         $SCNTBL (CODEB,CODEA),B'00001000',MDCTMODE                  R4 41913000
         $SCNTBL (USASCII,EBCDIC),DCTPASCI,MDCTLINE                  R4 41913500
         $SCNTBL (TRANSP,NOTRANSP),DCTPTRSP,MDCTLINE                 R4 41914000
         $SCNTBL (NOADISC,ADISCON),DCTPNADS,MDCTLINE                 R4 41914500
         $SCNTBL                   END OF SCAN TABLE                 R4 41915000
         SPACE 5                                                     R4 41916000
NPLOGNST $SCNTBL DCTDSECT          LOGONNN SCAN TABLE                R4 41916500
         $SCNTBL APPLID,L'MDCTAPPL,MDCTAPPL,NSCFLEFT+NSCFLBLK        R4 41917000
         $SCNTBL PASSWORD,L'MDCTPSWD,MDCTPSWD,NSCFLEFT+NSCFLBLK      R4 41917500
         $SCNTBL                                                     R4 41918000
         EJECT                                                       R4 41919000
NPLRMTST $SCNTBL RATDSECT          REMOTE TERMINAL SCAN TABLE        R4 41919500
         $SCNTBL 2770,DCTP2770,RATTYPE                               R4 41920000
         $SCNTBL 2780,DCTP2780,RATTYPE                               R4 41920500
         $SCNTBL 3740,DCTP3740,RATTYPE                               R4 41921000
         $SCNTBL 3780,DCTP3780,RATTYPE                               R4 41921500
         $SCNTBL 3781,DCTP2770,RATTYPE                               R4 41922000
         $SCNTBL 2922,DCTP20S2,RATTYPE                               R4 41922500
         $SCNTBL M20-2,DCTP20S2,RATTYPE                              R4 41923000
         $SCNTBL M20-4,DCTP20S2,RATTYPE                              R4 41923500
         $SCNTBL M20-5,DCTP20S5,RATTYPE                              R4 41924000
         $SCNTBL M20-6,DCTP20S6,RATTYPE                              R4 41924500
         $SCNTBL S/360,DCTP360,RATTYPE                               R4 41925000
         $SCNTBL  S360,DCTP360,RATTYPE                               R4 41925500
         $SCNTBL S/370,DCTP360,RATTYPE                               R4 41926000
         $SCNTBL  S370,DCTP360,RATTYPE                               R4 41926500
         $SCNTBL 1130,DCTP1130,RATTYPE                               R4 41927000
         $SCNTBL SYSTEM/3,DCTPSYS3,RATTYPE                           R4 41927500
         $SCNTBL  SYSTEM3,DCTPSYS3,RATTYPE                           R4 41928000
         $SCNTBL LUTYPE1,DCTPLU1,RATTYPE                             R4 41929000
         $SCNTBL DISCINTV,2,RATRDCT,NSCFLBIN                         R4 41930000
         $SCNTBL WAITIME,2,RATWTIME,NSCFLBIN                         R4 41930500
         $SCNTBL BUFSIZE,2,RATBUFSZ,NSCFLBIN                         R4 41931000
         $SCNTBL LINE,1,RATLDCT,NSCFLBIN                             R4 41931500
         $SCNTBL ROUTECDE,L'RATRTE,RATRTE,NSCFLBIN                   R4 41932000
         $SCNTBL CONDEST,L'RATCONRT,RATCONRT,NSCFLBIN                R4 41932500
         $SCNTBL PASSWORD,L'RATPSWD,RATPSWD,NSCFLEFT+NSCFLBLK        R4 41933000
         $SCNTBL LUNAME,L'RATSYMB,RATSYMB,NSCFLEFT+NSCFLBLK          R4 41934000
         $SCNTBL NUMRD,L'RATNUMRD,RATNUMRD,NSCFLBIN                  R4 41935000
         $SCNTBL NUMPR,L'RATNUMPR,RATNUMPR,NSCFLBIN                  R4 41935500
         $SCNTBL NUMPU,L'RATNUMPU,RATNUMPU,NSCFLBIN                  R4 41936000
         $SCNTBL (CONSOLE,NOCON),RATCONFC+RATCONFO,RATCONF           R4 41936500
         $SCNTBL (SETUPINF,SETUPACT),RATCONFI,RATCONF                JN 41936800
         $SCNTBL (MULTI,HARDWARE),DCTPROG,RATFMT                     R4 41937000
         $SCNTBL (TRANSP,NOTRANSP),DCTPTRSP,RATFEAT                  R4 41937500
         $SCNTBL (BUFEX,NOBUFEX),DCTPBEXP,RATFEAT                    R4 41938000
         $SCNTBL (ABUFEX,NOABUFEX),DCTPABEX,RATFEAT                  R4 41938500
         $SCNTBL (MRF,NOMRF),DCTPMRF,RATFEAT                         R4 41939000
         $SCNTBL (COMP,NOCOMP),DCTPPRES,RATFEAT                      R4 41939500
         $SCNTBL (CMPCT,NOCMPCT),DCTPCPCT,RATFEAT                   R41 41939600
         $SCNTBL (SETUPHDR,SETUPMSG),DCTPSHDR,RATFEAT               R41 41939700
         $SCNTBL (TABS,NOTABS),DCTPTAB,RATFEAT                       R4 41940000
         $SCNTBL (VARIABLE,FIXED),DCTPVAR,RATFMT                     R4 41940500
         $SCNTBL (BLOCKED,UNBLOCK),DCTPBLK,RATFMT                    R4 41941000
         $SCNTBL                   END OF SCAN TABLE                 R4 41941500
         EJECT                                                       R4 41942000
NPLRNRST $SCNTBL RWTDSECT          REMOTE CARD READER SCAN TABLE     R4 41942500
         $SCNTBL PRDEST,L'RWTPRINT,RWTPRINT,NSCFLBIN                 R4 41943000
         $SCNTBL PUDEST,L'RWTPUNCH,RWTPUNCH,NSCFLBIN                 R4 41943500
         $SCNTBL PRIOINC,L'RWTPRINC,RWTPRINC,NSCFLBIN                R4 41946500
         $SCNTBL PRIOLIM,L'RWTPRLIM,RWTPRLIM,NSCFLBIN                R4 41947000
         $SCNTBL CLASS,1,RWTJCLAS,NSCFLFIT                           R4 41947500
         $SCNTBL MSGCLASS,1,RWTMCLAS,NSCFLFIT                        R4 41948000
         $SCNTBL (PRLCL,PRRMT),DCTPRLCL,RWTFLAGS                     R4 41948500
         $SCNTBL (PULCL,PURMT),DCTPULCL,RWTFLAGS                     R4 41949000
         $SCNTBL (DRAIN,START),DCTDRAIN,RWTSTAT                      R4 41949500
         $SCNTBL (HOLD,NOHOLD),DCTHOLDJ,RWTFLAGS                     R4 41950000
         $SCNTBL                   END OF SCAN TABLE                 R4 41950500
         SPACE 5                                                     R4 41951000
NPLRPRST $SCNTBL RWTDSECT          REMOTE PRINT/PUNCH SCAN TABLE     R4 41951500
         $SCNTBL PRWIDTH,L'RWTLRECL,RWTLRECL,NSCFLBIN          @OZ29180 41952000
         SPACE 1                                                     R4 41952500
NPLRPUST $SCNTBL ROUTECDE,L'RWTROUTE,RWTROUTE,NSCFLBIN               R4 41953000
         $SCNTBL LRECL,L'RWTLRECL,RWTLRECL,NSCFLBIN            @OZ29180 41953100
         $SCNTBL (COMP,NOCOMP),DCTPPRES,RWTFEAT                @OZ29180 41953200
         $SCNTBL (CMPCT,NOCMPCT),DCTPCPCT,RWTSFEAT             @OZ29180 41953300
         $SCNTBL SELECT,,,,NPLSELCT                            @OZ29180 41953400
         $SCNTBL (CCTL,NOCCTL),DCTPCCTL,RWTSFEAT               @OZ29180 41953500
         $SCNTBL CLASS,L'RWTCLASS,RWTCLASS,NSCFLEFT+NSCFLBLK   @OZ29180 41953600
         $SCNTBL COMPACT,1,RWTDCPTN,NSCFLBIN                   @OZ29180 41953700
         $SCNTBL FORMS,L'RWTFORMS,RWTFORMS,NSCFLEFT+NSCFLBLK         R4 41954000
         $SCNTBL FCB,L'RWTFCB,RWTFCB,NSCFLEFT+NSCFLBLK               R4 41954500
         $SCNTBL UCS,L'RWTUCS,RWTUCS,NSCFLEFT+NSCFLBLK               R4 41955000
         $SCNTBL CHAINSIZ,L'RWTCHSZ,RWTCHSZ,NSCFLBIN                 R4 41956000
         $SCNTBL (FCBLOAD,NOFCBLOD),DCTRMFCB,RWTPPFL                 R4 41957000
         $SCNTBL (OPERATOR,AUTO),DCTPPSWF,RWTPPSW                    R4 41957500
         $SCNTBL (NOSEP,SEP),DCTPPSWS,RWTPPSW                        R4 41958000
         $SCNTBL (DRAIN,START),DCTDRAIN,RWTSTAT                      R4 41958500
         $SCNTBL (SUSPEND,NOSUSPND),DCTSUSPD,RWTPPFL                 R4 41959000
         $SCNTBL                   END OF SCAN TABLE                 R4 41959500
         EJECT                                                       R4 41960000
NPLSYSST $SCNTBL 0                 SYSTEM SCAN TABLE                 R4 41960500
         $SCNTBL SID,L'NS1,0,NSCFLFIT                                R4 41961000
         $SCNTBL                   END OF SCAN TABLE                 R4 41961500
         SPACE 5                                                     R4 41976000
NPLDESST $SCNTBL NDQDSECT          DEST'N QUEUE ELEMENT SCAN TABLE   R4 41976500
         $SCNTBL NAME,L'NDQNAME,NDQNAME,NSCFLBLK+NSCFLEFT            R4 41977000
         $SCNTBL DEST,L'NDQDEST,NDQDEST,NSCFLBLK+NSCFLEFT            R4 41977500
         $SCNTBL                   END OF SCAN TABLE                 R4 41978000
         TITLE 'HASP INITIALIZATION -- PARAMETER STATEMENT DIAGNOSTICS' 41978500
         SPACE 5                                                     R4 41979500
NVERERM  DC    CL38'*****     VERIFICATION ERROR     *****'          R4 41980000
NREPERM  DC    CL38'*****    DATA OR FORMAT ERROR    *****'          R4 41980500
NPLSHERM DC    CL38'*****   VALUE NOT DISPLAYABLE    *****'         R41 41980600
NPLSNERM DC    CL38'*****   INVALID SYSTEM NUMBER    *****'          R4 41981000
NPLINERM DC    CL38'*****  INVALID INITIATOR NUMBER  *****'          R4 41981500
NPLDNERM DC    CL38'*****    INVALID DEVICE NAME     *****'          R4 41982000
NPLDVERM DC    CL38'*****  INVALID PARAMETER VALUE   *****'          R4 41982500
NPLCHERM DC    CL38'*****  INVALID CHARACTER VALUE   *****'          R4 41983000
NPLDCERM DC    CL38'*****   ILLEGAL DECIMAL VALUE    *****'          R4 41983500
NPLHXERM DC    CL38'*****     ILLEGAL HEX VALUE      *****'    @OZ29180 41983600
NPLSSERM DC    CL38'***** INVALID HASPPARM STATEMENT *****'          R4 41984000
NPLSCERM DC    CL38'***** CONTINUATION CARD EXPECTED *****'          R4 41984500
NRANGERM DC    CL38'***** LIMITS ARE NNN, NNNNNNNNNN *****'          R4 41985000
NPLRTERM DC    CL38'*****   INVALID REMOTE NUMBER    *****'          R4 41985500
NPLDXERM DC    CL38'*****     ILLEGAL SUBSCRIPT      *****'          R4 41986000
         SPACE 1                                                     R4 41988000
NPLSKERM DC    CL24'***** INVALID KEYWORD - '                        R4 41988500
NPLSKERK DC    CL8'KEYWORD',CL6' *****'                              R4 41989000
         SPACE 1                                                     R4 41989500
NPLSVERM DC    CL16'*****   ILLEGAL '                                R4 41990000
NPLSVERK DC    CL8'KEYWORD',CL14' VALUE   *****'                     R4 41990500
         SPACE 1                                                    R41 41990600
NPLHSERM DC    CL8'*****'                                           R41 41990700
NPLHSNAM DC    CL8'HASPSSSM',CL22' NOT LOADABLE    *****'           R41 41990800
         TITLE 'HASP INITIALIZATION -- PARAMETER STATEMENT PROCESSING RC41991000
               OUTINE TRANSLATE TABLES'                             R41 41991500
NPLTRT1  EQU   *-X'4A'                                               R4 41992000
         DC    7AL1(0),9AL1(1),4AL1(0),AL1(1),3AL1(0)          @OZ28199 41992500
         DC    10AL1(1),4AL1(0),10AL1(1),AL1(0,0,0,1,0,0)      @OZ28199 41993000
         SPACE 5                                                     R4 41993500
NPLTRT2  DC    75AL1(1),AL1(0),15AL1(1),AL1(0),31AL1(1),2AL1(0)      R4 41994000
         DC    68AL1(1),9AL1(0),7AL1(1),9AL1(0),8AL1(1)              R4 41994500
         DC    8AL1(0),6AL1(1),10AL1(0),6AL1(1)                      R4 41995000
         TITLE 'HASP INITIALIZATION -- INITIALIZATION PARAMETER STATEMEC41995500
               NT TABLE'                                            R41 41996000
NPLPTBL  DS    0F                  PARAMETER STATEMENT TABLE        R41 41996500
         AIF   ('&PRINT' NE 'OFF').PTGO                             R41 41996600
         PUSH  PRINT                                                R41 41996700
         PRINT NOGEN                                                R41 41996800
.PTGO    SPACE 1                                                    R41 41997000
         $PTENT ,&&ADDSYNS,,SWITCH,,$RJEOPTS         &ADDSYNS STATEMENT 41997500
         $PTENT ,&&BSPACE,NPLBACK,EBCDIC             &BSPACE  STATEMENT 41998000
         $PTENT ,&&BSPGCT,,,,,(1,255)                &BSPGCT  STATEMENT 41998500
         $PTENT ,&&BSPNTE,,,,,(0,256/6)              &BSPNTE  STATEMENT 41999000
         $PTENT ,&&BSVBOPT,,SWITCH,,$RJEOPTS         &BSVBOPT STATEMENT 41999500
         $PTENT ,&&BUFSIZE,NPLX8,,,,                 &BUFSIZE STATEMENTC42000000
               ((1024+7-(BUFSTART-BUFDSECT))/8*8,(4096+7-(BUFSTART-BUFDC42000100
               SECT))/8*8)                                          R41 42000200
         $PTENT ,&&CCOMCHR,NPLCOMCH,EBCDIC           &CCOMCHR STATEMENT 42000500
         $PTENT ,&&CHKPT,NPLCKSPL,EBCDIC,,,(1,L'$CHKPT)  &CHKPT STMNT   42001000
         $PTENT ,&&CKPTIME,,,,,(10,5*60)             &CKPTIME STATEMENT 42001500
         $PTENT ,&&DEBUG,,SWITCH,,$RUNOPTS           &DEBUG   STATEMENT 42002000
         $PTENT ,&&DELAYTM,NPLDELAY,,,,(1,9999),     &DELAYTM STATEMENTC42002500
               DISPLAY=NPLDDLAY                                     R41 42002600
         $PTENT ,&&DMNDSET,,SWITCH,,$PRTOPTS         &DMNDSET STATEMENT 42003000
         $PTENT ,&&DSNPRFX,NPLJCL,EBCDIC,,,          &DSNPRFX STATEMENTC42003300
               (1,L'$DSNPRFX)                                       R41 42003400
         $PTENT ,&&DUPVOLT,,SWITCH,,$RUNOPTS         &DUPVOLT STATEMENT 42003500
         $PTENT ,&&ESTIME,,,,,(1,1440)               &ESTIME  STATEMENT 42004000
         $PTENT ,&&ESTLNCT,,,,,(1,9999)              &ESTLNCT STATEMENT 42004500
         $PTENT ,&&ESTPUN,,,,,(0,9999999)            &ESTPUN  STATEMENT 42005000
         $PTENT ,&&HTDIST,,,,,(2,144)                &HTDIST  STATEMENT 42005500
         $PTENT ,&&JCOPYLM,,,,,(1,255)               &JCOPYLM STATEMENT 42006000
         $PTENT ,&&LINECT,,,,,(0,255)                &LINECT  STATEMENT 42008000
         $PTENT ,&&MAXCLAS,,,,,(1,36)                &MAXCLAS STATEMENT 42008500
         $PTENT ,&&MAXCMCT,,,,,(1,255)               &MAXCMCT STATEMENT 42009000
         $PTENT ,&&MAXDORM,NPLINVRT,,,,(100,6000)    &MAXDORM STATEMENT 42011000
         $PTENT ,&&MAXJOBS,,,,,(10,$MAXJQES)         &MAXJOBS STATEMENT 42011500
         $PTENT ,&&MAXPART,,,,,(1,36*37)             &MAXPART STATEMENT 42013500
NMAXPART EQU   *-PTELENG+PTEHIVAL-PTEDSECT,4  UPPER LIMIT           R41 42013600
         $PTENT ,&&MAXSESS,,,,,(0,999)               &MAXSESS STATEMENT 42016000
         $PTENT ,&&MINDORM,NPLINVRT,,,,(0,3000)      &MINDORM STATEMENT 42017000
         $PTENT ,&&MINHOLD,NPLINVRT,,,,(0,99999999)  &MINHOLD STATEMENT 42017500
         $PTENT ,&&MINJOES,,,,,(2,$MAXJOES-2)        &MINJOES STATEMENT 42018000
         $PTENT ,&&MLBFSIZ,NPLX2,,,,                 &MLBFSIZ STATEMENTC42018500
               (128,(4096+7-(TPBUFST-BUFDSECT))/8*8)                R41 42018600
         $PTENT ,&&MSGID,,SWITCH,,$RUNOPTS           &MSGID   STATEMENT 42019000
         $PTENT ,&&NIPFCB,,EBCDIC,,,(0,L'$NIPFCB)    &NIPFCB  STATEMENT 42021000
         $PTENT ,&&NIPUCS,,EBCDIC,,,(1,L'$NIPUCS)    &NIPUCS  STATEMENT 42021500
         $PTENT ,&&NOPRCCW,,,,,(1,255)               &NOPRCCW STATEMENT 42024000
         $PTENT ,&&NOPUCCW,,,,,(1,255)               &NOPUCCW STATEMENT 42024500
         $PTENT ,&&NUMACE,,,,,(2,9999)               &NUMACE  STATEMENT 42025000
         $PTENT ,&&NUMBUF,,,,,(15,$MAXBUF)           &NUMBUF  STATEMENT 42025500
         $PTENT ,&&NUMCLAS,,,,,(1,36)                &NUMCLAS STATEMENT 42026000
         $PTENT ,&&NUMCMBS,,,,,(3,999)               &NUMCMBS STATEMENT 42026500
         $PTENT ,&&NUMDA,,,,,(1,36)                  &NUMDA   STATEMENT 42027000
         $PTENT ,&&NUMINRS,,,,,(0,255)               &NUMINRS STATEMENT 42027500
         $PTENT ,&&NUMJOES,,,,,(10,$MAXJOES)         &NUMJOES STATEMENT 42028000
         $PTENT ,&&NUMLNES,,,,,(0,$MAXLNES)          &NUMLNES STATEMENT 42028500
         $PTENT ,&&NUMLOGS,,,,,(0,$MAXLOGS)          &NUMLOGS STATEMENT 42029500
         $PTENT ,&&NUMPRTS,,,,,(0,$MAXPRTS)          &NUMPRTS STATEMENT 42035000
         $PTENT ,&&NUMPUNS,,,,,(0,$MAXPUNS)          &NUMPUNS STATEMENT 42035500
         $PTENT ,&&NUMRDRS,,,,,(0,$MAXRDRS)          &NUMRDRS STATEMENT 42036000
         $PTENT ,&&NUMRJE,,,,,(0,$MAXRJE)            &NUMRJE  STATEMENT 42036500
         $PTENT ,&&NUMSMFB,,,,,(0,255)               &NUMSMFB STATEMENT 42037000
         $PTENT ,&&NUMTGBE,,,,,(1,255)               &NUMTGBE STATEMENT 42037500
         $PTENT ,&&NUMTGV,,,,,(100,9999)             &NUMTGV  STATEMENT 42038000
         $PTENT ,&&NUMTPBF,,,,,(0,$MAXTPBF)          &NUMTPBF STATEMENT 42038500
         $PTENT ,&&OUTPOPT,,,,,(0,2)                 &OUTPOPT STATEMENT 42039000
         $PTENT ,&&OUTXS,,,,,(500,9999999)           &OUTXS   STATEMENT 42039500
         $PTENT ,&&PRIDCT,,,,,(0,255)                &PRIDCT  STATEMENT 42041500
         $PTENT ,&&PRIHIGH,NPLPRI,,,,(0,15),         &PRIHIGH STATEMENTC42042000
               DISPLAY=NPLDPRI                                      R41 42042100
         $PTENT ,&&PRILOW,NPLPRI,,,,(0,15),          &PRILOW  STATEMENTC42042500
               DISPLAY=NPLDPRI                                      R41 42042600
         $PTENT ,&&PRIOOPT,,SWITCH,,$RUNOPTS         &PRIOOPT STATEMENT 42043000
         $PTENT ,&&PRIRATE,,,,,(0,1440)              &PRIRATE STATEMENT 42043500
         $PTENT ,&&PRTBOPT,,SWITCH,,$PRTOPTS         &PRTBOPT STATEMENT 42044000
         $PTENT ,&&PRTFCB,,EBCDIC,,,(1,L'$PRTFCB)    &PRTFCB  STATEMENT 42044500
         $PTENT ,&&PRTRANS,,SWITCH,,$PRTOPTS         &PRTRANS STATEMENT 42045000
         $PTENT ,&&PRTUCS,,EBCDIC,,,(1,L'$PRTUCS)    &PRTUCS  STATEMENT 42045500
         $PTENT ,&&PRTYOPT,,SWITCH,,$RUNOPTS         &PRTYOPT STATEMENT 42046000
         $PTENT ,&&PUNBOPT,,SWITCH,,$PRTOPTS         &PUNBOPT STATEMENT 42046500
         $PTENT ,&&RCOMCHR,NPLCOMCH,EBCDIC           &RCOMCHR STATEMENT 42047000
         $PTENT ,&&RDROPSL,NPLROPSL,EBCDIC,          &RDROPSL STATEMENTC42047500
               L'CATCONVP,0,DISPLAY=NPLDOPSL                        R41 42047600
         $PTENT ,&&RDROPST,NPLROPST,EBCDIC,          &RDROPST STATEMENTC42048000
               L'CATCONVP,0,DISPLAY=NPLDOPST                        R41 42048100
         $PTENT ,&&RDROPSU,NPLROPSU,EBCDIC,          &RDROPSU STATEMENTC42048500
               L'CATCONVP,0,DISPLAY=NPLDOPSU                        R41 42048600
         $PTENT ,&&RECINCR,,,,,(1,8)                 &RECINCR STATEMENT 42049000
         $PTENT ,&&RJOBOPT,,,,,(0,5)                 &RJOBOPT STATEMENT 42049500
         $PTENT ,&&RPRBOPT,,SWITCH,,$PRTOPTS         &RPRBOPT STATEMENT 42050000
         $PTENT ,&&RPRI,NPLRPRI,,1,0,(0,15),         &RPRI(N) STATEMENTC42050500
               DISPLAY=NPLDRPRI                                     R41 42050600
         $PTENT ,&&RPRT,NPLRPRT,,3,0,                &RPRT(N) STATEMENTC42051000
               (1,X'FFFFFF'/60),DISPLAY=NPLDRPRT                    R41 42051100
         $PTENT ,&&RPS,,SWITCH,,$RUNOPTS             &RPS     STATEMENT 42051500
         $PTENT ,&&RPUBOPT,,SWITCH,,$PRTOPTS         &RPUBOPT STATEMENT 42052000
         $PTENT ,&&SID,NPLSID,EBCDIC                 &SID     STATEMENT 42052500
         $PTENT ,&&SPOLMSG,,,,,(0,254)               &SPOLMSG STATEMENT 42053000
         $PTENT ,&&SPOOL,NPLCKSPL,EBCDIC,,,          &SPOOL   STATEMENTC42053500
               (L'$SPOOL-1,L'$SPOOL)                                R41 42053600
         $PTENT ,&&STDFORM,,EBCDIC                   &STDFORM STATEMENT 42055500
         $PTENT ,&&SYNCTOL,,,,,(0,5*60)              &SYNCTOL STATEMENT 42056000
         $PTENT ,&&TCELSIZ,,,,,(1,127)               &TCELSIZ STATEMENT 42056500
         $PTENT ,&&TGWARN,,,,,(0,101)                &TGWARN  STATEMENT 42057000
         $PTENT ,&&TIMEOPT,,SWITCH,,$RUNOPTS         &TIMEOPT STATEMENT 42057500
         $PTENT ,&&TIMEXS,,,,,(1,30)                 &TIMEXS  STATEMENT 42058000
         $PTENT ,&&TPBFSIZ,NPLX8,,,,                 &TPBFSIZ STATEMENTC42058500
               (128,(4096+7-(TPBUFST-BUFDSECT))/8*8)                R41 42058600
         $PTENT ,&&TPIDCT,,,,,(0,255)                &TPIDCT  STATEMENT 42059000
         $PTENT ,&&WAITIME,,,,,(1,30)                &WAITIME STATEMENT 42061000
         $PTENT ,&&WARNTIM,NPLINVRT,,,,(500,15000)   &WARNTIM STATEMENT 42061500
         $PTENT ,&&XBATCHN,NPLJCL,EBCDIC             &XBATCHN STATEMENT 42062000
         $PTENT ,&&XBATCH,,SWITCH,,$RUNOPTS          &XBATCH  STATEMENT 42062500
         $PTENT ,&&XLIN,NPLXLIN,,3,0,                &XLIN(N) STATEMENTC42063000
               (1,X'FFFFFF'),DISPLAY=NPLDXLIN                       R41 42063100
         $PTENT ,&&XPRI,NPLXPRI,,1,0,(0,15),         &XPRI(N) STATEMENTC42063500
               DISPLAY=NPLDXPRI                                     R41 42063600
         EJECT                                                       R4 42064000
         SPACE 5                                                     R4 42064500
         $PTENT 8,CONSOLE,NPLCON                     CONSOLE  STATEMENT 42066600
         $PTENT 8,DISPLAY,NPLSHOW                    DISPLAY  STATEMENT 42066700
         $PTENT 8,HASPSSSM,NPLHSSSM,EBCDIC,8,0,      HASPSSSM STATEMENTC42067000
               (1,8),DISPLAY=NPLDSSSM                               R41 42067100
         $PTENT 8,REPLACE,NPLREP                     REPLACE  STATEMENT 42067500
         $PTENT 8,STCMCLAS,NPLSTCMC                  STCMCLAS STATEMENT 42068000
         $PTENT 8,TSUMCLAS,NPLTSUMC                  TSUMCLAS STATEMENT 42068500
         $PTENT 7,COMPACT,NPLCMPCT                   COMPACT  STATEMENT 42068600
         $PTENT 7,DESTID,NPLDEST                     DESTID   STATEMENT 42069000
         $PTENT 7,ENDZAP,NPLENDZP                    ENDZAP   STATEMENT 42069500
         $PTENT 7,INTRDR,NPLINR                      INTRDR   STATEMENT 42070000
         $PTENT 7,NOLIST,NPLNLIST                    NOLIST   STATEMENT 42070500
         $PTENT 7,PRINTER,NPLPRINT                   PRINTERN STATEMENT 42071000
         $PTENT 7,VERIFY,NPLVER                      VERIFY   STATEMENT 42071500
         $PTENT 6,NOLOG,NPLNLOG                      NOLOG    STATEMENT 42071600
         $PTENT 6,READER,NPLRDR                      READERNN STATEMENT 42072000
         $PTENT 5,LOGON,NPLOGON                      LOGONNN  STATEMENT 42073000
         $PTENT 5,&&STC,NPLSTC,(SUBPARMS,NOSHOW)     &STC     STATEMENT 42074000
         $PTENT 5,&&TSU,NPLTSU,(SUBPARMS,NOSHOW)     &TSU     STATEMENT 42074500
         $PTENT 5,BASE,NPLBASE                       BASE     STATEMENT 42075000
         $PTENT 5,LIST,NPLLISTC                      LIST     STATEMENT 42075500
         $PTENT 5,NAME,NPLNAME                       NAME     STATEMENT 42076000
         $PTENT 5,NEWS,NPLNEWS                       NEWS     STATEMENT 42076200
         $PTENT 5,PUNCH,NPLPUNCH                     PUNCHNN  STATEMENT 42076500
         $PTENT 4,LINE,NPLLINE                       LINENNN  STATEMENT 42077000
         $PTENT 4,LOG,NPLLOGC                        LOG      STATEMENT 42077100
         $PTENT 4,REP,NPLREP                         REPLACE  STATEMENT 42077500
         $PTENT 4,VER,NPLVER                         VERIFY   STATEMENT 42078000
         $PTENT 3,RMT,NPLRMTNN                       RMTNNN   STATEMENT 42078500
         $PTENT 2,$$,NPL$$X                          $$X      STATEMENT 42079000
         $PTENT 2,B,NPLBASE                          BASE     STATEMENT 42079500
         $PTENT 2,D,NPLSHOW                          DISPLAY  STATEMENT 42079600
         $PTENT 2,R,NPLREP                           REPLACE  STATEMENT 42080000
         $PTENT 2,V,NPLVER                           VERIFY   STATEMENT 42080500
         $PTENT 1,&&,NPLCATX,(SUBPARMS,NOSHOW)       &X       STATEMENT 42081000
         $PTENT 1,$,NPLCOMND                         COMMAND  STATEMENT 42081500
         $PTENT 1,I,NPLINNN                          INNN     STATEMENT 42082500
         $PTENT 1,R,NPLRNDVM                         RNNN.DVM STATEMENT 42084500
         $PTENT 1,S,NPLSN                            SN       STATEMENT 42085000
         SPACE 1                                                     R4 42085500
NPLPTEND DS    0F                  END OF PARAMETER TABLE           R41 42086000
NPLPTENT EQU   (NPLPTEND-NPLPTBL)/PTELENG  NUMBER OF TABLE ENTRIES  R41 42086100
         AIF   ('&PRINT' NE 'OFF').PTEND                            R41 42086200
         POP   PRINT                                                R41 42086300
.PTEND   TITLE 'HASP INITIALIZATION -- CATCONVP INITIALIZATION'     R41 42086500
*********************************************************************** 42087000
*                                                                     * 42087500
*        SUPPLY CATCONVP DEFAULTS, WHERE NECESSARY                    * 42088000
*                                                                     * 42088500
*********************************************************************** 42089000
         SPACE 1                                                     R4 42089500
NCATNIP  BALR  BASE2,0             RE-ESTABLISH                      R4 42090000
         USING *,BASE2              LOCAL ADDRESSABILITY             R4 42090500
         SPACE 1                                                     R4 42091000
         USING CATDSECT,R1         PROVIDE CAT ADDRESSABILITY        R4 42091500
         SPACE 1                                                     R4 42092000
         L     R1,$CATABLE         POINT TO 1ST CAT ENTRY            R4 42092500
         LA    R0,16               INITIALIZE                        R4 42093000
         BAL   WE,NCATPRM1          CAT ENTRIES C0 - CF              R4 42093500
         LA    WA,NRDROPST         INITIALIZE                        R4 42094000
         LA    R0,1                 STARTED TASK                     R4 42094500
         BAL   WE,NCATPRM2           CAT ENTRY                       R4 42095000
         LA    R0,15               INITIALIZE                        R4 42095500
         BAL   WE,NCATPRM1          CAT ENTRIES D1 - DF              R4 42096000
         LA    WA,NRDROPSL         INITIALIZE                        R4 42096500
         LA    R0,1                 LOGON                            R4 42097000
         BAL   WE,NCATPRM2           CAT ENTRY                       R4 42097500
         LA    R0,31               INITIALIZE                        R4 42098000
         BAL   WE,NCATPRM1          CAT ENTRIES E1 - FF              R4 42098500
         B     NCKBSP              THEN BR TO CONTINUE               R4 42099000
         SPACE 1                                                     R4 42099500
NCATPRM1 LA    WA,NRDROPSU         BATCH JOB DEFAULTS                R4 42100000
         SPACE 1                                                     R4 42100500
NCATPRM2 CLI   CATCONVP,0          TEST CATCONVP                     R4 42101000
         BNE   SKIP330             BR IF ALREADY PROVIDED            R4 42101500
         MVC   CATCONVP,0(WA)       ELSE SUPPLY DEFAULT              R4 42102000
SKIP330  LA    R1,CATEND           POINT TO NEXT CAT ENTRY           R4 42102500
         BCT   R0,NCATPRM2         LOOP THRU REQUESTED ENTRIES       R4 42103000
         SPACE 1                                                     R4 42103500
         BR    WE                  THEN RETURN                       R4 42104000
         SPACE 1                                                     R4 42104500
         DROP  R1                  KILL CAT ADDRESSABILITY           R4 42105000
         TITLE 'HASP INITIALIZATION -- SMF/RJE INITIALIZATION'       R4 42105500
*********************************************************************** 42106000
*                                                                     * 42106500
*        ENSURE VALID BACKSPACE CHARACTER                             * 42107000
*                                                                     * 42107500
*********************************************************************** 42108000
         SPACE 1                                                     R4 42108500
NCKBSP   CLC   $BSPACE,$CCOMCHR    TEST BACKSPACE CHARACTER          R4 42109000
         BNE   NBSPOK              BR IF VALID                       R4 42109500
         MVI   $BSPACE,0            ELSE SET TO X'00'                R4 42110000
        $$WTO  NBSPMSG               AND INFORM OPERATOR OF CHANGE   R4 42110500
         SPACE 1                                                     R4 42111000
NBSPOK   DS    0H                                                    R4 42111500
         SPACE 1                                                     R4 42112000
*********************************************************************** 42120000
*                                                                     * 42120500
*        DETERMINE SMF REQUIREMENT                                    * 42121000
*                                                                     * 42121500
*********************************************************************** 42122000
         SPACE 1                                                     R4 42122500
NSMFTEST CLI   $NUMSMFB,2          IF SMF TO BE SUPPORTED,           R4 42123000
         BNL   NINRTEST             BR TO TEST INTERNAL READER REQ'T R4 42123500
         MVI   $NUMSMFB,0            ELSE ZERO BUFFER COUNT          R4 42124000
         MVC   $GETSMFB(4),=X'1B1107FE'  AND NO-OP SMF BUFFER        R4 42124500
         MVC   $QUESMFB(2),=X'07FE'       GET/QUEUE ROUTINES         R4 42125000
         SPACE 1                                                     R4 42125500
*********************************************************************** 42126000
*                                                                     * 42126500
*        ENSURE VALID INTERNAL READER SPECIFICATION                   * 42127000
*                                                                     * 42127500
*********************************************************************** 42128000
         SPACE 1                                                     R4 42128500
         USING $SVDSECT,WG         PROVIDE SSVT ADDRESSABILITY       R4 42129000
         SPACE 1                                                     R4 42129500
NINRTEST L     WG,$SSVT            POINT TO SSVT                     R4 42130000
         ICM   R1,15,$SVIRDRS      TEST FOR EXISTING INR DCTS        R4 42130500
         BZ    NCMCTEST            BR IF NO                          R4 42131000
         S     R1,=F'8'            BACK UP TO DCT STORAGE PREFIX     R4 42131500
         CLC   0(4,R1),=CL4'IDCT'  TEST PREFIX                       R4 42132000
         BE    NINRSET             BR IF VALID                       R4 42132500
         XC    $SVIRDRS,$SVIRDRS    ELSE RESET INR DCT POINTER       R4 42133000
         B     NCMCTEST              AND BR TO CONTINUE              R4 42133500
         SPACE 1                                                     R4 42134000
NINRSET  TM    $SVHASP,X'80'       TEST FOR JES2 RESTART             R4 42134500
         BZ    NCMCTEST            BR IF NO                          R4 42135000
         L     R1,4(,R1)           GET COUNT OF EXISTING INRS        R4 42135500
         BCTR  R1,0                 LESS TWO FOR STC                 R4 42136000
         BCTR  R1,0                  AND TSU                         R4 42136500
         STC   R1,$NUMINRS         RESET JOB INTERNAL READER REQ'T   R4 42137000
         SPACE 1                                                     R4 42137500
         DROP  WG                  KILL SSVT ADDRESSABILITY          R4 42138000
         EJECT                                                       R4 42138500
*********************************************************************** 42139000
*                                                                     * 42139500
*        SET MAXIMUM CONSOLE MESSAGE COUNT                            * 42140000
*                                                                     * 42140500
*********************************************************************** 42141000
         SPACE 1                                                     R4 42141500
NCMCTEST CLI   $MAXCMCT,0          TEST COUNT                        R4 42142000
         BNE   NRJETEST            BR IF ALREADY PROVIDED            R4 42142500
         LH    R0,$NUMCMBS          ELSE SET                         R4 42143000
         LA    R1,255                EQUAL TO                        R4 42143500
         CLR   R0,R1                  LESSER                         R4 42144000
         BNH   SKIP340                 OF                            R4 42144500
         LR    R0,R1                    $NUMCMBS                     R4 42145000
SKIP340  STC   R0,$MAXCMCT               OR 255                      R4 42145500
         SPACE 1                                                     R4 42146000
*********************************************************************** 42146500
*                                                                     * 42147000
*        DETERMINE RJE ENVIRONMENT                                    * 42147500
*                                                                     * 42148000
*********************************************************************** 42148500
         SPACE 1                                                     R4 42149000
NRJETEST LH    R0,$NUMLNES         GET NUMBER OF TP LINES            R4 42149500
         OC    $NUMRJE,$NUMRJE     TEST TERMINAL REQUIREMENT         R4 42150000
         BNZ   SKIP350             BR IF REMOTES DEFINED             R4 42150500
         STH   R0,$NUMRJE           ELSE SUPPLY DEFAULT              R4 42151000
SKIP350  OC    $NUMTPBF,$NUMTPBF   TEST TP BUFFER REQUIREMENT        R4 42151500
         BNZ   *+8                 BR IF BUFFER COUNT PROVIDED       R4 42152000
         STH   R0,$NUMTPBF          ELSE SUPPLY DEFAULT              R4 42152500
SKIP360  LTR   R0,R0               TEST TP LINE REQUIREMENT          R4 42153300
         BNZ   NLOGLNES            BR IF LINES DEFINED               R4 42154000
         STH   R0,$NUMRJE           ELSE RESET TERMINAL COUNT,       R4 42156000
         MVI   $SPOLMSG,0            MESSAGE SPOOL BUFFER COUNT,     R4 42156500
         STH   R0,$NUMTPBF            AND TP BUFFER COUNT            R4 42157000
         ST    R0,NLOGLINE         ALSO CLEAR LOGICAL LINE COUNT     R4 42158000
         ST    R0,$MLLMPCE         NEED NO LINE MANAGER PROCESSOR    R4 42159000
         ST    R0,$MCONPCE         NEED NO REMOTE CONSOLE PROCESSOR  R4 42162000
         B     NSPOLMSG            BR TO CONTINUE                    R4 42162500
         EJECT                                                      R41 42163000
         SPACE 1                                                     R4 42163500
NLOGLNES LA    R1,$LNEDCT-(DCTCHAIN-DCTDSECT)  PREPARE TO SCAN DCTS  R4 42164000
         SLR   WA,WA               CLEAR LOGICAL LINE COUNT          R4 42164500
         SPACE 1                                                     R4 42165000
         USING DCTDSECT,R1         PROVIDE DCT ADDRESSABILITY        R4 42165500
         SPACE 1                                                     R4 42166000
NXTLINE  L     R1,DCTCHAIN         POINT TO NEXT LINE DCT            R4 42166500
         TM    MDCTTYPE,DCTPSNA    TEST FOR LOGICAL LINE             R4 42167000
         BZ    SKIP370             BR IF NO                          R4 42167500
         LA    WA,1(,WA)            ELSE BUMP LOGICAL LINE COUNT     R4 42168000
SKIP370  BCT   R0,NXTLINE          BR IF ANOTHER LINE DCT            R4 42168500
         SPACE 1                                                     R4 42169000
         ST    WA,NLOGLINE         STORE COUNT OF LOGICAL LINES      R4 42169500
         SPACE 1                                                     R4 42170000
         DROP  R1                  KILL DCT ADDRESSABILITY           R4 42170500
         EJECT                                                       R4 42171500
*********************************************************************** 42172000
*                                                                     * 42172500
*        FINALIZE RAT -- OBTAIN RJE DEVICE COUNTS                     * 42173000
*                                                                     * 42173500
*        ENSURE TP BUFFER SIZE ADEQUATE FOR ALL SPECIFIED REMOTES     * 42174000
*                                                                     * 42174500
*********************************************************************** 42175000
         SPACE 1                                                     R4 42175500
         USING RATDSECT,WD         PROVIDE RAT ADDRESSABILITY        R4 42176000
         SPACE 1                                                     R4 42176500
INITRJE  SLR   R1,R1               CLEAR FOR INSERTS                 R4 42177000
         LR    WA,R1               CLEAR                             R4 42177500
         LR    WB,R1                WORK                             R4 42178000
         LR    WC,R1                 REGISTERS                       R4 42178500
         LH    WF,$TPBFSIZ         LOAD INITIAL TP BUFFER SIZE       R4 42179000
         LH    R0,$NUMRJE          GET NUMBER OF REMOTES             R4 42179500
         L     WD,$RAT             POINT TO 1ST RAT ELEMENT          R4 42180000
         SPACE 1                                                     R4 42180800
NRJEDEVS LH    WE,RATRDCT          GET DISCONNECT INTERVAL           R4 42181000
         LA    WE,31(,WE)          ROUND UP                          R4 42181500
         SRL   WE,5                DIVIDE BY 32                      R4 42182000
         STC   WE,RATDINTV         SET DISCONNECT INTERVAL           R4 42182500
         STC   WE,RATIDINV         SAVE INITIAL MAX DISC INTERVAL   R41 42182600
         MVI   RATSYS,1            SET SYSTEM ID                     R4 42183500
         CLI   RATTYPE,DCTP2770    TEST TERMINAL TYPE                R4 42186000
         BNE   NOT2770             BR IF NOT 2770                    R4 42186500
         TM    RATFEAT,DCTPBEXP    TEST FOR BUFFER EXPANSION         R4 42187000
         BZ    SKIP380             BR IF NO                          R4 42187500
         CH    WF,*+10              ELSE ENSURE                      R4 42188000
         BNL   SKIP380               MINIMUM                         R4 42188500
         LA    WF,264                 TP BUFFER SIZE                 R4 42189000
SKIP380  TM    RATFEAT,DCTPABEX    TEST FOR ADD'L BUFFER EXPANSION   R4 42189500
         BZ    NOT2770             BR IF NO                          R4 42190000
         CH    WF,*+10              ELSE ENSURE                      R4 42190500
         BNL   NOT2770               MINIMUM                         R4 42191000
         LA    WF,520                 TP BUFFER SIZE                R41 42191500
         SPACE 1                                                     R4 42192000
NOT2770  CLI   RATTYPE,DCTP2780    TEST TERMINAL TYPE                R4 42192500
         BNE   SKIP390             BR IF NOT 2780                    R4 42193000
         CH    WF,*+10              ELSE ENSURE                      R4 42193500
         BNL   SKIP390               MINIMUM                         R4 42194000
         LA    WF,400                 TP BUFFER SIZE                 R4 42194500
SKIP390  CLI   RATTYPE,DCTP3780    TEST TERMINAL TYPE                R4 42195000
         BNE   NRJETYPE            BR IF NOT 3780                    R4 42195500
         CH    WF,*+10              ELSE ENSURE                      R4 42196000
         BNL   SKIP400               MINIMUM                         R4 42196500
         LA    WF,520                 TP BUFFER SIZE                 R4 42197000
SKIP400  OI    RATFEAT,DCTPABEX    FORCE ADDITIONAL BUFFERS          R4 42197500
         CLI   RATNUMPU,0          TEST PUNCH COUNT                  R4 42198000
         BE    NRJEHDW             BR IF ZERO                        R4 42198500
         MVI   RATTYPE,DCTP2770     ELSE RE-DEFINE AS 2770           R4 42199000
         EJECT                                                       R4 42199500
NRJETYPE TM    RATTYPE,DCTPLU1     IF NOT SNA REMOTE                R41 42200000
         BNO   NRJEBSC              GO TEST FOR BSC CPU TYPE        R41 42200100
         TM    RATCONF,RATCONFC    IF NO CONSOLE                    R41 42200200
         BNO   NRJECT               GO COUNT DEVICES                R41 42200300
         IC    R1,RATNUMPR         INCREMENT                        R41 42200400
         LA    R1,1(,R1)            NUMBER OF PRINTERS BY 1         R41 42200500
         STC   R1,RATNUMPR           TO ALLOW FOR CONSOLE DCT       R41 42200600
         B     NRJECT              GO COUNT DEVICES                 R41 42200700
         SPACE 1                                                    R41 42200800
NRJEBSC  TM    RATTYPE,DCTPCPU     TEST TERMINAL TYPE               R41 42200900
         BZ    NRJEHDW             BR IF NOT CPU TERMINAL            R4 42201000
         TM    RATFMT,DCTPROG      TEST FORMAT TYPE                  R4 42201100
         BZ    NRJEHDW             BR IF NOT PROGRAMMABLE            R4 42201500
         NI    RATFMT,DCTPROG       ELSE RESET HARDWARE FORMATS      R4 42202000
         NI    RATFEAT,DCTPTRSP      AND FEATURES                    R4 42202500
         CLI   RATNUMRD,0          ENSURE                            R4 42203000
         BNE   SKIP410              READER COUNT                     R4 42203500
         MVI   RATNUMRD,1            AT LEAST 1                      R4 42204000
SKIP410  CLI   RATNUMPR,0          ENSURE                            R4 42204500
         BNE   NRJECT               PRINTER COUNT                    R4 42205000
         MVI   RATNUMPR,1            AT LEAST 1                      R4 42205500
         B     NRJECT              THEN BR TO TALLY DEVICES          R4 42206000
         SPACE 1                                                     R4 42206500
NRJEHDW  MVI   RATNUMRD,1          FORCE NUMBER OF READERS           R4 42207000
         MVI   RATNUMPR,1           AND PRINTERS TO 1                R4 42207500
         CLI   RATNUMPU,0          ENSURE                            R4 42208000
         BE    NRJECT               NO MORE THAN                     R4 42208500
         MVI   RATNUMPU,1            1 PUNCH                         R4 42209000
         SPACE 1                                                     R4 42209500
NRJECT   IC    R1,RATNUMRD         COUNT NUMBER                      R4 42210000
         ALR   WA,R1                OF READERS                       R4 42210500
         IC    R1,RATNUMPR         COUNT NUMBER                      R4 42211000
         ALR   WB,R1                OF PRINTERS                      R4 42211500
         IC    R1,RATNUMPU         COUNT NUMBER                      R4 42212000
         ALR   WC,R1                OF PUNCHES                       R4 42212500
         LA    WD,RATEND           POINT TO NEXT RAT                 R4 42213000
         BCT   R0,NRJEDEVS         LOOP THRU ALL RATS                R4 42213500
         SPACE 1                                                     R4 42214000
*********************************************************************** 42214500
*                                                                     * 42215000
*        SET REMOTE READER, PRINTER AND PUNCH COUNTS                  * 42215500
*                                                                     * 42216000
*********************************************************************** 42216500
         SPACE 1                                                     R4 42217000
         STH   WA,$NUMTPRD         SET REMOTE READER COUNT           R4 42217500
         STH   WB,$NUMTPPR         SET REMOTE PRINTER COUNT          R4 42218000
         STH   WC,$NUMTPPU         SET REMOTE PUNCH COUNT            R4 42218500
         STH   WF,$TPBFSIZ         SET CURRENT TP BUFFER SIZE        R4 42219000
         EJECT                                                       R4 42219500
*********************************************************************** 42220000
*                                                                     * 42220500
*        SET MESSAGE SPOOL BUFFER COUNT                               * 42221000
*                                                                     * 42221500
*********************************************************************** 42222000
         SPACE 1                                                     R4 42222500
NSPOLMSG LH    R6,$BUFSIZE         GET JES2 BUFFER SIZE              R4 42223000
         CLI   $SPOLMSG,2          IF MSG SPOOL BUFFER              R41 42223100
         BNL   SKIP420              COUNT LESS THAN 2,              R41 42223200
         MVI   $SPOLMSG,0            RESET IT TO 0                  R41 42223300
SKIP420  CLI   $SPOLMSG,255        TEST MSG SPOOL BUFFER COUNT       R4 42223500
         BNE   NSPOLMOK            BR IF NUMBER PROVIDED             R4 42224000
         LA    R1,2048              ELSE SET                         R4 42224500
         ALR   R1,R1                 DEFAULT                         R4 42225000
         SLR   R0,R0                  EQUAL TO                       R4 42225500
         DR    R0,R6                   4K DIVIDED                    R4 42226000
         MH    R1,=H'6'                 BY $BUFSIZE                  R4 42226500
         STC   R1,$SPOLMSG               TIMES 6                     R4 42227000
         SPACE 1                                                     R4 42227500
NSPOLMOK DS    0H                                                    R4 42228000
         TITLE 'HASP INITIALIZATION -- LOCAL/REMOTE DEVICE PCE/DCT GENEC42239000
               RATION'                                               R4 42239500
*********************************************************************** 42240000
*                                                                     * 42240500
*        COMPUTE STORAGE FOR PRIMARY HASP PCES                        * 42241000
*                                                                     * 42241500
*********************************************************************** 42242000
         SPACE 1                                                     R4 42242500
NPCEGEN  SLR   WB,WB               INITIALIZE STORAGE REQUIREMENT    R4 42243000
         TM    $RUNOPTS,$TIMEOPT   TEST TIME EXCESSION OPTION        R4 42243500
         BO    SKIP450             BR IF SELECTED                    R4 42244000
         ST    WB,$XTIMPCE          ELSE INDICATE NO PCE             R4 42244500
SKIP450  OC    $PRIRATE,$PRIRATE   TEST FOR PRIORITY AGING           R4 42245000
         BNZ   SKIP460             BR IF SELECTED                    R4 42245500
         ST    WB,$PRAGPCE          ELSE INDICATE NO PCE             R4 42246000
SKIP460  OC    $NUMRJE,$NUMRJE     TEST RJE REQUIREMENT              R4 42246500
         BZ    SKIP470             BR IF NO REMOTES DEFINED          R4 42247000
         LA    WB,$MWORKSZ          ELSE RESET STORAGE REQUIREMENT   R4 42247500
SKIP470  LA    R0,NPCES            GET PRIMARY PCE COUNT             R4 42248000
         LA    WD,NPCETBL-6        PREPARE TO SCAN PRIMARY PCE TABLE R4 42248500
         SPACE 1                                                     R4 42249000
NPCECORE LA    WD,6(,WD)           POINT TO NEXT TABLE ENTRY         R4 42249500
         LH    WC,0(,WD)           GET OFFSET OF HCT ENTRY           R4 42250000
         L     WC,0(WC,BASE1)      GET PROCESSOR ADDR FROM PCE ENTRY R4 42250500
         LTR   WC,WC               IF NO PCE REQUIRED,               R4 42251000
         BZ    SKIP480              BR TO AVOID ADDING STORAGE       R4 42251500
         AH    WB,4(,WD)             ELSE ADD PCE REQUIREMENT        R4 42252000
SKIP480  BCT   R0,NPCECORE         LOOP THRU ALL PRIMARY PCES        R4 42252500
         EJECT                                                       R4 42253000
*********************************************************************** 42253500
*                                                                     * 42254000
*        COMPUTE VARIABLE PCE, DCT, ACE AND SMF BUFFER STORAGE        * 42254500
*                                                                     * 42255000
*********************************************************************** 42255500
         SPACE 1                                                     R4 42256000
         LH    R1,$BUFSIZE         CALCULATE DEFAULT VALUE           R4 42256500
         D     R0,=A(80)            FOR &NOPRCCW AND &NOPUCCW        R4 42257000
         CLI   $NOPRCCW,0          TEST FOR PROVIDED VALUE           R4 42257500
         BNE   SKIP490             BR IF DEFAULT PROVIDED            R4 42258000
         STC   R1,$NOPRCCW          ELSE USE CALCULATED VALUE        R4 42258500
SKIP490  CLI   $NOPUCCW,0          TEST FOR PROVIDED VALUE           R4 42259000
         BNE   SKIP500             BR IF DEFAULT PROVIDED            R4 42259500
         STC   R1,$NOPUCCW          ELSE USE CALCULATED VALUE        R4 42260000
SKIP500  SLR   WD,WD               GET NUMBER                        R4 42260500
         IC    WD,$NUMRDRS          OF LOCAL READERS                 R4 42261000
         M     WC,=A(((PCEWORK-PCEDSECT+RDRPCEWS+3)/4*4+DCTRDEND+7-DCTDC42261500
               SECT)/8*8)          PCE/DCT REQUIREMENT               R4 42262000
         ALR   WB,WD               ADD TO STORAGE TOTAL              R4 42262500
         SLR   R10,R10             BACKSPACE                         R4 42263000
         IC    R10,$BSPNTE          TABLE                            R4 42263500
         MH    R10,=H'7'             SIZE                            R4 42264000
         STH   R10,$BSPSIZ         STORE IN HCT                      R4 42264500
         LA    R10,3(,R10)         ROUND TO                          R4 42265000
         N     R10,=F'-4'           NEXT FULLWORD                    R4 42265500
         ST    R10,NBSPSIZ         SAVE FOR LATER USE                R4 42266000
         SLR   WA,WA               GET TOTAL                         R4 42266500
         IC    WA,$NUMPRTS          NUMBER OF                        R4 42267000
         SLR   WD,WD                 REQUIRED LOCAL                  R4 42267500
         IC    WD,$NUMPUNS            AND REMOTE                     R4 42268000
         ALR   WA,WD                   PRINTERS                      R4 42268500
         AH    WA,$NUMTPPR              AND                          R4 42269000
         AH    WA,$NUMTPPU               PUNCHES                     R4 42269500
         LA    R1,(PBSPTBL+3-PCEDSECT)/4*4(,R10)  DCT OFFSET         R4 42270000
         IC    WD,$NUMCLAS                     COMPUTE LENGTH        R4 42270500
         LA    WD,DCTCLASS+1+7-DCTDSECT(R1,WD)  OF INDIVIDUAL        R4 42271000
         N     WD,=F'-8'                         PCE/DCT PAIR        R4 42271500
         MR    WC,WA               MULTIPLY BY TOTAL PRINT/PUNCH CT  R4 42272000
         ALR   WB,WD               ADD TO STORAGE TOTAL              R4 42272500
         IC    WC,$NUMINRS         GET NUMBER OF INTERNAL READERS    R4 42273000
         LA    WC,2(,WC)           ADD 2 FOR TSU AND STC             R4 42273500
         MH    WC,=AL2(PCEWORK-PCEDSECT+(RDRPCEWS+7)/8*8)  PCE REQ'T R4 42274000
         ALR   WB,WC               ADD TO STORAGE TOTAL              R4 42274500
         LH    WC,$NUMLNES                        ADD RJE            R4 42275000
         S     WC,NLOGLINE                        (- LOGICAL LINES)  R4 42276000
         MH    WC,=AL2((MDCTLEND+7-DCTDSECT)/8*8)  LINE DCT          R4 42277000
         ALR   WB,WC                                STORAGE REQ'T    R4 42277500
         L     WC,NLOGLINE                        ADD LOGICAL LINES  R4 42278500
         MH    WC,=AL2((MDCTVLND+7-DCTDSECT)/8*8) DCT REQUIREMENT    R4 42279000
         ALR   WB,WC                                TO TOTAL STORAGE R4 42279500
         LH    WA,$NUMTPRD         GET REMOTE READER COUNT           R4 42280500
         MH    WA,=AL2(((PCEWORK-PCEDSECT+RJEPCEWS+3)/4*4+DCTRDEND+7-DCC42281000
               TDSECT)/8*8)        PCE/DCT REQUIREMENT               R4 42281500
         ALR   WB,WA               ADD TO STORAGE TOTAL              R4 42282000
         LH    WC,$NUMLOGS                       ADD LOGON           R4 42283000
         MH    WC,=AL2((MDCTLGND+7-DCTDSECT)/8*8) DCT REQUIREMENT    R4 42283500
         ALR   WB,WC                               TO TOTAL STORAGE  R4 42284000
         LH    WA,$NUMACE          ADD STORAGE                       R4 42296000
         MH    WA,=AL2(ACEL)        FOR AUTOMATIC                    R4 42296500
         ALR   WB,WA                 COMMAND ELEMENTS                R4 42297000
         SLR   WC,WC               COMPUTE SMF                       R4 42297500
         IC    WC,$NUMSMFB          BUFFER STORAGE                   R4 42298000
         MH    WC,=Y(SMFLNG)         REQUIREMENT                     R4 42298500
         LA    WB,4095(WB,WC)      ROUND UP STORAGE REQUIREMENT      R4 42299000
         N     WB,=F'-4096'         TO NEXT 4K                       R4 42299500
         B     NVARGETM            BR TO GET STORAGE                 R4 42300000
         EJECT                                                       R4 42300500
*********************************************************************** 42301000
*                                                                     * 42301500
*        OBTAIN VARIABLE PCE, DCT, ACE AND SMF BUFFER STORAGE         * 42302000
*                                                                     * 42302500
*********************************************************************** 42303000
         SPACE 1                                                     R4 42303500
NVARGETM LR    R0,WB               RELOAD STORAGE REQUIREMENT        R4 42304000
         GETMAIN RU,LV=(0),BNDRY=PAGE  REQUEST PERMANENT STORAGE     R4 42304500
         LR    WA,R1               CLEAR ACQUIRED                    R4 42305000
         MVCL  WA,R14               STORAGE                          R4 42305500
         EJECT                                                       R4 42306000
*********************************************************************** 42306500
*                                                                     * 42307000
*        FORMAT HASP PRIMARY PCES                                     * 42307500
*                                                                     * 42308000
*********************************************************************** 42308500
         SPACE 1                                                     R4 42309000
         USING MAPDSECT,WG         PROVIDE MOD MAP ADDRESSABILITY    R4 42309500
         SPACE 1                                                     R4 42310000
         L     WG,$HASPMAP         POINT TO HASP MODULE MAP          R4 42310500
         OC    $NUMRJE,$NUMRJE     TEST RJE REQUIREMENT              R4 42311000
         BZ    SKIP510             BR IF NO REMOTES DEFINED          R4 42311500
         ST    R1,$MWORK            ELSE SET POINTER TO RTAM WORK SP R4 42312000
         LA    R1,$MWORKSZ(,R1)      AND SKIP OVER WORK SPACE        R4 42312500
SKIP510  LA    R0,NPCES                     PREPARE                  R4 42313000
         LA    WD,NPCETBL-6                  TO FORMAT               R4 42313500
         LA    WA,$PCEORG-(PCENEXT-PCEDSECT)  PRIMARY PCES           R4 42314000
         SPACE 1                                                     R4 42314500
         USING PCEDSECT,R1         PROVIDE PCE ADDRESSABILITY        R4 42315000
         SPACE 1                                                     R4 42315500
NPCEPRIM LA    WD,6(,WD)           POINT TO NEXT TABLE ENTRY         R4 42316000
         LH    WE,0(,WD)           GET OFFSET OF HCT ENTRY           R4 42316500
         L     WB,0(WE,BASE1)      LOAD PROCESSOR ADDRESS            R4 42317000
         LTR   WB,WB               TEST PROCESSOR ADDRESS            R4 42317500
         BZ    NPCENEXT            BR IF NONE                        R4 42318000
         LH    WC,2(,WD)            ELSE GET PCE ID                  R4 42318500
         BAL   LINK,INITPCE          AND INITIALIZE PCE              R4 42319000
         ST    R1,0(WE,BASE1)      SET PCE ADDRESS IN HCT            R4 42319500
         AH    R1,4(,WD)           POINT TO NEXT PCE                 R4 42320000
         SPACE 1                                                     R4 42320500
NPCENEXT BCT   R0,NPCEPRIM         LOOP THRU ALL PRIMARY PCES        R4 42321000
         SPACE 1                                                     R4 42321500
         L     WE,$PCEORG          POINT TO 1ST PCE                  R4 42322000
         ST    R0,PCEPREV-PCEDSECT(,WE)  CLEAR ADDR OF PREVIOUS PCE  R4 42322500
         ST    R0,$DCTPOOL         CLEAR TEMP DCT CHAIN ADDRESS      R4 42323000
         LA    WE,$DCTPOOL-(DCTCHAIN-DCTDSECT)  INITIAL CHAIN ADDR   R4 42323500
         SPACE 1                                                     R4 42324000
         USING DCTDSECT,WE         PROVIDE DCT ADDRESSABILITY        R4 42324500
         SPACE 1                                                     R4 42325000
         ICM   R0,1,$NUMRDRS       GET NUMBER OF READERS             R4 42325500
         BZ    INITPRTS            BR IF NONE                        R4 42326000
         EJECT                                                       R4 42326500
*********************************************************************** 42327000
*                                                                     * 42327500
*        FORMAT LOCAL READER PCES AND DCTS                            * 42328000
*                                                                     * 42328500
*********************************************************************** 42329000
         SPACE 1                                                     R4 42329500
         L     WB,MAPRDRA          PROCESSOR ADDRESS                 R4 42330000
         LH    WC,=AL2(256*PCELCLID+PCERDRID)  PCE ID                R4 42330500
         LA    WD,$RDRDCT-(DCTCHAIN-DCTDSECT)  TEMPORARY DCTS        R4 42331000
         LA    WF,DCTRDEND-1-DCTDSECT  DCT MOVE LENGTH               R4 42331500
         SPACE 1                                                     R4 42332000
NRDRLOOP BAL   LINK,INITPCE        INITIALIZE PCE                    R4 42332500
         LA    R10,PCEWORK+(RDRPCEWS+3)/4*4  SET DCT ADDRESS         R4 42333000
         ST    R10,PCEDCT                     IN PCE           @OZ32566 42333500
         LR    R1,R10              RELOAD DCT ADDRESS                R4 42334000
         BAL   LINK,INITDCT        INITIALIZE DCT                    R4 42334500
         MVC   DCTPRSYS,$OWNSYS    SET SYSTEM ID                     R4 42340000
         CLI   DCTPRRTE,0          TEST FOR REMOTE/LOCAL ROUTING     R4 42341000
         BE    NRDPRRTE            BR IF NO                          R4 42341500
         TM    DCTFLAGS,DCTPRLCL   TEST FOR SPECIAL LOCAL ROUTING    R4 42342000
         BZ    NRDPRRTE            BR IF NO                          R4 42342500
         MVI   DCTPRSYS,0           ELSE RESET SYSTEM ID             R4 42343500
         SPACE 1                                                     R4 42347500
NRDPRRTE CLC   DCTPRSYS,$OWNSYS    TEST FOR ROUTE TO REMOTE          R4 42348000
         BNE   NRDNTOWN            BR IF NO                         R41 42349000
         CLC   DCTPRRTE,$NUMRJE+1  TEST FOR VALID REMOTE NUMBER      R4 42349500
         BH    NBADRTE             BR IF NO                          R4 42350000
NRDNTOWN DS    0H                                                   R41 42350200
         MVC   DCTPUSYS,$OWNSYS    SET SYSTEM ID                     R4 42354500
         CLI   DCTPURTE,0          TEST FOR REMOTE/LOCAL ROUTING     R4 42355500
         BE    NRDPURTE            BR IF NO                          R4 42356000
         TM    DCTFLAGS,DCTPULCL   TEST FOR SPECIAL LOCAL ROUTING    R4 42356500
         BZ    NRDPURTE            BR IF NO                          R4 42357000
         MVI   DCTPUSYS,0           ELSE RESET SYSTEM ID             R4 42358000
         SPACE 1                                                     R4 42362000
NRDPURTE CLC   DCTPUSYS,$OWNSYS    TEST FOR ROUTE TO REMOTE          R4 42362500
         BNE   NRDNXT              BR IF NO                          R4 42363500
         CLC   DCTPURTE,$NUMRJE+1  TEST FOR VALID REMOTE NUMBER      R4 42364000
         BH    NBADRTE             BR IF NO                          R4 42364500
         SPACE 1                                                     R4 42365000
NRDNXT   NI    DCTFLAGS,255-DCTPRLCL-DCTPULCL  CLEAR ANY FLAGS       R4 42365500
         BCT   R0,NRDRLOOP         LOOP THRU ALL READERS             R4 42366000
         EJECT                                                       R4 42366500
NRDRXIT  B     INITPRTS            BR IF NO ROUTE CODE ERRORS        R4 42367000
        $EXIT  NGQUITM              ELSE ISSUE 'QUIT' MSG AND QUIT   R4 42367500
         SPACE 1                                                     R4 42368000
NBADRTE  STM   R14,R12,12(R13)     SAVE REGISTERS                    R4 42368500
         L     R1,=A(NRTEMSG)      POINT TO MESSAGE TEXT             R4 42369000
         MVC   NRTEDEV-NRTEMSG(,R1),DCTDEVN  SET DEVICE NAME         R4 42369500
        $$WTO  (R1)                ISSUE ERROR MESSAGE TO OPERATOR   R4 42370000
         LM    R14,R12,12(R13)     RESTORE REGISTERS                 R4 42370500
         MVI   NRDRXIT+1,0         FORCE QUIT AFTER TESTING ALL RDRS R4 42371000
         B     NRDNXT              BR TO TEST NEXT READER            R4 42371500
         SPACE 1                                                     R4 42372000
INITPRTS SLR   R15,R15                      DCT                      R4 42372500
         IC    R15,$NUMCLAS                  MOVE                    R4 42373000
         LA    WF,DCTCLASS+1-1-DCTDSECT(,R15)  LENGTH                R4 42373500
         L     WB,MAPPPI1A         PROCESSOR ADDRESS                 R4 42374000
         ICM   R0,1,$NUMPRTS       GET NUMBER OF PRINTERS            R4 42374500
         BZ    INITPUNS            BR IF NONE                        R4 42375000
         SPACE 1                                                     R4 42375500
*********************************************************************** 42376000
*                                                                     * 42376500
*        FORMAT LOCAL PRINTER PCES AND DCTS                           * 42377000
*                                                                     * 42377500
*********************************************************************** 42378000
         SPACE 1                                                     R4 42378500
         LH    WC,=AL2(256*(PCEPRSID+PCELCLID)+PCEPRTID)  PCE ID     R4 42379000
         LA    WD,$PRTDCT-(DCTCHAIN-DCTDSECT)  TEMPORARY DCTS        R4 42379500
         SPACE 1                                                     R4 42380000
NPRTLOOP BAL   LINK,INITPCE        INITIALIZE PCE                    R4 42380500
         MVI   PBUFOPT,2           ASSUME DOUBLE BUFFERING           R4 42381000
         TM    $PRTOPTS,$PRTBOPT   TEST ASSUMPTION                   R4 42381500
         BO    SKIP530             BR IF VALID                       R4 42382000
         MVI   PBUFOPT,1            ELSE PROVIDE SINGLE BUFFERING    R4 42382500
SKIP530  BAL   LINK,NPPDCT         INITIALIZE PPPWORK AND DCT        R4 42383000
         LA    LINK,DCTCLASS(R15)  POINT TO END OF CLASS LIST        R4 42383500
         MVI   0(LINK),C' '        SET DCTCLASS TERMINATOR           R4 42384000
         CLI   $NUMPRTS,9          TEST PRINTER COUNT                R4 42384500
         BH    NPRTGT9             BR IF GREATER THAN 9             R41 42385000
         MVC   DCTDEVN+7(1),DCTDEVN+6  ELSE ALTER                    R4 42385500
         MVC   DCTDEVN+5(2),=C'ER'      DEVICE NAME FORMAT           R4 42386000
NPRTGT9  CLI   DCTROUTE,0          TEST FOR LOCAL ROUTING           R41 42386100
         BE    SKIP540             BR IF NO                         R41 42386200
         MVI   DCTSYS,0             ELSE RESET SYSTEM ID            R41 42386400
SKIP540  BCT   R0,NPRTLOOP         LOOP THRU ALL PRINTERS            R4 42386800
         EJECT                                                       R4 42387000
INITPUNS ICM   R0,1,$NUMPUNS       GET NUMBER OF PUNCHES             R4 42387500
         BZ    INRPCES             BR IF NONE                        R4 42388000
         SPACE 1                                                     R4 42388500
*********************************************************************** 42389000
*                                                                     * 42389500
*        FORMAT LOCAL PUNCH PCES AND DCTS                             * 42390000
*                                                                     * 42390500
*********************************************************************** 42391000
         SPACE 1                                                     R4 42391500
         LH    WC,=AL2(256*(PCEPUSID+PCELCLID)+PCEPUNID)  PCE ID     R4 42392000
         LA    WD,$PUNDCT-(DCTCHAIN-DCTDSECT)  TEMPORARY DCTS        R4 42392500
         SPACE 1                                                     R4 42393000
NPUNLOOP BAL   LINK,INITPCE        INITIALIZE PCE                    R4 42393500
         MVI   PBUFOPT,2           ASSUME DOUBLE BUFFERING           R4 42394000
         TM    $PRTOPTS,$PUNBOPT   TEST ASSUMPTION                   R4 42394500
         BO    SKIP550             BR IF VALID                       R4 42395000
         MVI   PBUFOPT,1            ELSE PROVIDE SINGLE BUFFERING    R4 42395500
SKIP550  BAL   LINK,NPPDCT         INITIALIZE PPPWORK AND DCT        R4 42396000
         LA    LINK,DCTCLASS(R15)  POINT TO END OF CLASS LIST        R4 42396500
         MVI   0(LINK),C' '        SET DCTCLASS TERMINATOR           R4 42397000
         CLI   DCTROUTE,0          TEST FOR LOCAL ROUTING           R41 42397100
         BE    *+8                 BR IF NO                         R41 42397200
         MVI   DCTSYS,0             ELSE RESET SYSTEM ID            R41 42397400
         BCT   R0,NPUNLOOP         LOOP THRU ALL PUNCHES             R4 42397800
         EJECT                                                       R4 42398000
INRPCES  IC    R0,$NUMINRS         GET NUMBER OF INTERNAL READERS    R4 42398500
         AH    R0,=H'2'            ADD 2 FOR TSU AND STC             R4 42399000
         SPACE 1                                                     R4 42399500
*********************************************************************** 42400000
*                                                                     * 42400500
*        FORMAT INTERNAL READER PCES                                  * 42401000
*                                                                     * 42401500
*********************************************************************** 42402000
         SPACE 1                                                     R4 42402500
         L     WB,MAPRDRA          PROCESSOR ADDRESS                 R4 42403000
         LH    WC,=AL2(256*PCEINRID+PCERDRID)  PCE ID                R4 42403500
         SPACE 1                                                     R4 42404000
         BAL   LINK,INITPCE        INITIALIZE PCE                    R4 42404500
         LA    R1,PCEWORK-PCEDSECT+(RDRPCEWS+7)/8*8(,R1)  NEXT PCE   R4 42405000
         BCT   R0,INITPCE          LOOP THRU ALL INTERNAL READERS    R4 42405500
         SPACE 1                                                     R4 42406000
         DROP  WG                  KILL MOD MAP ADDRESSABILITY       R4 42406500
         SPACE 1                                                     R4 42407000
         ICM   R0,15,NLOGLINE      TEST NUMBER OF LOGICAL LINES      R4 42408000
         BNZ   SKIP560             NON ZERO, GO GENERATE LOGON DCTS  R4 42408500
         STH   R0,$NUMLOGS         ZERO COUNT OF LOGON DCTS          R4 42409000
SKIP560  ICM   R0,3,$NUMLOGS       GET NUMBER OF LOGON DCTS          R4 42409500
         BZ    NITRJE              BRANCH IF NONE                    R4 42410000
         SPACE 1                                                     R4 42410500
*********************************************************************** 42411000
*                                                                     * 42411500
*        FORMAT VTAM INTERFACE LOGON DCTS                             * 42412000
*                                                                     * 42412500
*********************************************************************** 42413000
         SPACE 1                                                     R4 42413500
         LA    WD,$LOGNDCT-(DCTCHAIN-DCTDSECT) TEMPORARY DCTS        R4 42414000
         LA    WF,MDCTLGND-1-DCTDSECT  DCT MOVE LENGTH               R4 42414500
         SPACE 1                                                     R4 42415000
         BAL   LINK,INITDCT        INITIALIZE DCTS                   R4 42415500
         BCT   R0,INITDCT          LOOP THRU ALL LOGON DCTS          R4 42416000
         EJECT                                                       R4 42417000
NITRJE   ICM   R0,3,$NUMLNES       GET NUMBER OF RJE LINES           R4 42417500
         BZ    INITACES            BR IF NONE                        R4 42418000
         SPACE 1                                                     R4 42418500
*********************************************************************** 42419000
*                                                                     * 42419500
*        FORMAT RJE LINE DCTS AND REMOTE TERMINAL PCES AND DCTS       * 42420000
*                                                                     * 42420500
*********************************************************************** 42421000
         SPACE 1                                                     R4 42421500
         LA    WD,$LNEDCT-(DCTCHAIN-DCTDSECT)  TEMPORARY DCTS        R4 42422000
         SPACE 1                                                     R4 42422500
NLNELOOP LA    WF,MDCTLEND-1-DCTDSECT  PICK UP LINE DCT SIZE         R4 42423000
         L     WB,DCTCHAIN-DCTDSECT(,WD) PICK UP TEMPORARY DCT ADDR  R4 42423500
         TM    MDCTTYPE-DCTDSECT(WB),DCTPSNA TEST FOR LOGICAL LINE   R4 42424500
         BZ    SKIP570             NO, SKIP - USE PRELOADED DCT SIZE R4 42425000
         LA    WF,MDCTVLND-1-DCTDSECT USE LOGICAL LINE DCT SIZE      R4 42425500
SKIP570  BAL   LINK,INITDCT        INITIALIZE DCT                    R4 42426500
         BCT   R0,NLNELOOP         LOOP THRU ALL LINE DCTS           R4 42427000
         SPACE 1                                                     R4 42427500
         USING RATDSECT,R15        PROVIDE RAT ADDRESSABILITY        R4 42428000
         SPACE 1                                                     R4 42428500
         L     R15,$RAT            POINT TO 1ST RAT ELEMENT          R4 42429000
         LH    WG,$NUMRJE          GET NUMBER OF REMOTES             R4 42429500
         SPACE 1                                                     R4 42430000
NRMTDEV  ICM   R0,1,RATNUMRD       GET NUMBER OF READERS             R4 42430500
         BZ    NRMTPRT             BR IF NONE                        R4 42431000
         L     WB,$HASPMAP         POINT TO HASP MODULE MAP          R4 42431500
         L     WB,MAPRDRA-MAPDSECT(,WB)  PROCESSOR ADDRESS           R4 42432000
         LH    WC,=AL2(256*PCERJEID+PCERDRID)  PCE ID                R4 42432500
         LA    WF,DCTRDEND-1-DCTDSECT  DCT MOVE LENGTH               R4 42433000
         SPACE 1                                                     R4 42433500
NTPRDLUP BAL   LINK,INITPCE        INITIALIZE PCE                    R4 42434000
         LA    R10,PCEWORK+(RJEPCEWS+3)/4*4  SET DCT ADDRESS         R4 42434500
         ST    R10,PCEDCT                     IN PCE           @OZ32566 42435000
         LR    R1,R10              RELOAD DCT ADDRESS                R4 42435500
         BAL   LINK,INITPDCT       INITIALIZE DCT                    R4 42436000
         MVI   DCTDEVTP,DCTRJR     INDICATE REMOTE READER            R4 42436500
         BCT   R0,NTPRDLUP         LOOP THRU ALL READERS             R4 42437000
         EJECT                                                       R4 42437500
NRMTPRT  L     WB,$HASPMAP         POINT TO HASP MODULE MAP          R4 42438000
         L     WB,MAPPPI1A-MAPDSECT(,WB)  PROCESSOR ADDRESS          R4 42438500
         IC    WF,$NUMCLAS                   DCT MOVE                R4 42439000
         LA    WF,DCTCLASS+1-1-DCTDSECT(,WF)  LENGTH                 R4 42439500
         ICM   R0,1,RATNUMPR       GET NUMBER OF PRINTERS            R4 42440000
         BZ    NRMTPUN             BR IF NONE                        R4 42440500
         LH    WC,=AL2(256*(PCEPRSID+PCERJEID)+PCEPRTID)  PCE ID     R4 42441000
         SPACE 1                                                     R4 42441500
NTPPRLUP BAL   LINK,INITPCE        INITIALIZE PCE                    R4 42442000
         MVI   PBUFOPT,2           ASSUME DOUBLE BUFFERING           R4 42442500
         TM    $PRTOPTS,$RPRBOPT   TEST ASSUMPTION                   R4 42443000
         BO    SKIP580             BR IF VALID                       R4 42443500
         MVI   PBUFOPT,1            ELSE PROVIDE SINGLE BUFFERING    R4 42444000
SKIP580  BAL   LINK,NTPPPDCT       INITIALIZE PPPWORK AND DCT        R4 42444500
         MVI   DCTDEVTP,DCTRPR     INDICATE REMOTE PRINTER           R4 42445000
         BCT   R0,NTPPRLUP         LOOP THRU ALL PRINTERS            R4 42445500
         SPACE 1                                                     R4 42446000
NRMTPUN  ICM   R0,1,RATNUMPU       GET NUMBER OF PUNCHES             R4 42446500
         BZ    NRMTNEXT            BR IF NONE                        R4 42447000
         LH    WC,=AL2(256*(PCEPUSID+PCERJEID)+PCEPUNID)  PCE ID     R4 42447500
         SPACE 1                                                     R4 42448000
NTPPULUP BAL   LINK,INITPCE        INITIALIZE PCE                    R4 42448500
         MVI   PBUFOPT,2           ASSUME DOUBLE BUFFERING           R4 42449000
         TM    $PRTOPTS,$RPUBOPT   TEST ASSUMPTION                   R4 42449500
         BO    SKIP590             BR IF VALID                       R4 42450000
         MVI   PBUFOPT,1            ELSE PROVIDE SINGLE BUFFERING    R4 42450500
SKIP590  BAL   LINK,NTPPPDCT       INITIALIZE PPPWORK AND DCT        R4 42451000
         MVI   DCTDEVTP,DCTRPU     INDICATE REMOTE PUNCH             R4 42451500
         BCT   R0,NTPPULUP         LOOP THRU ALL PUNCHES             R4 42452000
         SPACE 1                                                     R4 42452500
NRMTNEXT LA    R15,RATEND          POINT TO NEXT RAT                 R4 42453000
         BCT   WG,NRMTDEV          LOOP THRU ALL REMOTE TERMINALS    R4 42453500
         SPACE 1                                                     R4 42454000
         DROP  WE,R15              KILL DCT, RAT ADDRESSABILITY      R4 42454500
         TITLE 'HASP INITIALIZATION -- ACE/SMF BUFFER POOL CREATION' R4 42523500
*********************************************************************** 42524000
*                                                                     * 42524500
*        CONTRUCT AUTOMATIC COMMAND ELEMENT CHAIN                     * 42525000
*                                                                     * 42525500
*********************************************************************** 42526000
         SPACE 1                                                     R4 42526500
INITACES L     WA,$ACTABLE              SET POINTER                  R4 42527000
         ST    R1,ACTACEF-ACTDSECT(,WA)  TO 1ST ACE                  R4 42527500
         LH    R0,$NUMACE          GET NUMBER OF ACES                R4 42528000
         SPACE 1                                                     R4 42528500
NACELOOP LR    WC,R1               RELOAD ACE ADDRESS                R4 42529000
         LA    R1,ACEL(,R1)        POINT TO NEXT ACE                 R4 42529500
         ST    R1,ACEACE-ACEDSECT(,WC)  SET CHAIN ADDRESS            R4 42530000
         BCT   R0,NACELOOP         LOOP THRU ALL ACES                R4 42530500
         SPACE 1                                                     R4 42531000
         ST    R0,ACEACE-ACEDSECT(,WC)  RESET LAST CHAIN ADDRESS     R4 42531500
         SPACE 2                                                     R4 42532000
*********************************************************************** 42532500
*                                                                     * 42533000
*        INITIALIZE SMF BUFFER POOL                                   * 42533500
*                                                                     * 42534000
*********************************************************************** 42534500
         SPACE 1                                                     R4 42535000
         ICM   R0,1,$NUMSMFB       GET NUMBER OF SMF BUFFERS         R4 42535500
         BZ    NKORFREE            BR IF NONE                        R4 42536000
         ST    R1,$SMFFREE          ELSE SET POINTER TO 1ST BUFFER   R4 42536500
         SPACE 1                                                     R4 42537000
NSMFLOOP LR    WC,R1               RELOAD BUFFER ADDRESS             R4 42537500
         LA    R1,SMFLNG(,R1)      POINT TO NEXT BUFFER              R4 42538000
         ST    R1,0(,WC)           SET CHAIN ADDRESS                 R4 42538500
         BCT   R0,NSMFLOOP         LOOP THRU ALL BUFFERS             R4 42539000
         SPACE 1                                                     R4 42539500
         ST    R0,0(,WC)           RESET LAST CHAIN ADDRESS          R4 42540000
         SPACE 2                                                     R4 42540500
*********************************************************************** 42541000
*                                                                     * 42541500
*        FREE TEMPORARY DCT STORAGE                                   * 42542000
*                                                                     * 42542500
*********************************************************************** 42543000
         SPACE 1                                                     R4 42543500
NKORFREE L     R1,NDCTSTOR         GET ADDRESS OF TEMPORARY STORAGE  R4 42544000
         L     R0,0(,R1)           GET SIZE OF TEMPORARY STORAGE     R4 42544500
         FREEMAIN R,LV=(0),A=(1)   FREE TEMPORARY STORAGE            R4 42545000
        TITLE 'HASP INITIALIZATION -- DCT POOL HEADER DETERMINATION' R4 42545500
*********************************************************************** 42546000
*                                                                     * 42546500
*        SETUP HCT POINTER TO DCT CHAINS                              * 42547000
*                                                                     * 42547500
*********************************************************************** 42548000
         SPACE 1                                                     R4 42548500
         LA    WC,DCTRDR           LOCATE                            R4 42549000
         LA    R1,$RDRDCT           FIRST                            R4 42549500
         BAL   LINK,NDCT1LOC         LOCAL READER DCT                R4 42550000
         LA    WC,DCTPRT           LOCATE                            R4 42550500
         LA    R1,$PRTDCT           FIRST                            R4 42551000
         BAL   LINK,NDCT1LOC         LOCAL PRINTER DCT               R4 42551500
         LA    WC,DCTPUN           LOCATE                            R4 42552000
         LA    R1,$PUNDCT           FIRST                            R4 42552500
         BAL   LINK,NDCT1LOC         LOCAL PUNCH DCT                 R4 42553000
         LA    WC,DCTLNE           LOCATE                            R4 42553500
         LA    R1,$LNEDCT           FIRST                            R4 42554000
         BAL   LINK,NDCT1LOC         RJE LINE DCT                    R4 42554500
         LA    WC,DCTLOG           LOCATE                            R4 42555500
         LA    R1,$LOGNDCT          FIRST                            R4 42556000
         BAL   LINK,NDCT1LOC         LOGON DCT                       R4 42556500
         B     NDCBGEN             THEN BR TO NEXT SECTION           R4 42557500
         SPACE 2                                                     R4 42558000
NDCT1LOC LA    WA,$DCTPOOL-(DCTCHAIN-DCTDSECT)  PREPARE TO SCAN DCTS R4 42558500
         SPACE 1                                                     R4 42559000
SKIP630  ICM   WA,7,DCTCHAIN+1-DCTDSECT(WA)  LOCATE                  R4 42559500
         BZ    SKIP620                        1ST (IF ANY)           R4 42560000
         CLM   WC,1,DCTDEVTP-DCTDSECT(WA)      MATCHING              R4 42560500
         BNE   SKIP630                          DCT                  R4 42561000
         SPACE 1                                                     R4 42561500
SKIP620  ST    WA,0(,R1)           SET POINTER TO 1ST DCT (OR ZERO)  R4 42562000
         BR    LINK                 AND RETURN                       R4 42562500
         TITLE 'HASP INITIALIZATION -- PCE/DCT BUILD SUBROUTINES'    R4 42563000
*********************************************************************** 42563500
*                                                                     * 42564000
*        INITPCE -- PCE INITIALIZATION ROUTINE                        * 42564500
*                                                                     * 42565000
*        R1    - PCE ADDRESS                                          * 42565500
*        WA    - ADDR OF PREVIOUS PCE, CURRENT PCE ADDR ON EXIT       * 42566000
*        WB    - PROCESSOR ADDRESS                                    * 42566500
*        WC    - PCE ID BYTES (LO-ORDER HALF-WORD)                    * 42567000
*        R11   - HCT ADDRESS (BASE1)                                  * 42567500
*        R14   - RETURN ADDRESS                                       * 42568000
*                                                                     * 42568500
*********************************************************************** 42569000
         SPACE 1                                                     R4 42569500
INITPCE  ST    R1,PCENEXT-PCEDSECT(,WA)  SET 'NEXT' ADDR IN PREV PCE R4 42570000
         ST    WA,PCEPREV          SET POINTER TO PREVIOUS PCE       R4 42570500
         ST    WB,PCER15           SET ENTRY POINT ADDRESS           R4 42571000
         ST    BASE1,PCEBASE1      SET HCT ADDRESS                   R4 42571500
         ST    WB,PCEBASE2         SET ENTRY POINT ADDRESS           R4 42572000
         ST    R1,PCEPCEA          INDICATE                          R4 42572500
         ST    R1,PCEPCEB           NON-READY PCE                    R4 42573000
         STH   WC,PCEID            SET PCE ID FIELD                  R4 42573500
         ST    R1,PCEIOEWF         SET DA DCT POST ADDRESS           R4 42574000
         MVI   PCEDEVTP,PCEDAWR    INDICATE WRITE IN DA DCT          R4 42574500
         LR    WA,R1               THIS PCE TO BE NEXT PREVIOUS PCE  R4 42575000
         BR    LINK                RETURN TO CALLER                  R4 42575500
         EJECT                                                       R4 42576000
*********************************************************************** 42576500
*                                                                     * 42577000
*        NTPPPDCT -- REMOTE PRINT/PUNCH DCT INITIALIZATION ROUTINE    * 42577500
*                                                                     * 42578000
*        NPPDCT   --  LOCAL PRINT/PUNCH DCT INITIALIZATION ROUTINE    * 42578500
*                                                                     * 42579000
*        R1    - PCE ADDRESS, DCT ADDRESS ON EXIT                     * 42579500
*        WD    - ADDRESS OF PREVIOUS ADDRESS ON EXIT                  * 42580000
*        WE    - ADDRESS OF PREVIOUS TEMPORARY DCT (NPPDCT)           * 42580500
*        WF    - LENGTH OF NEW DCT (-1)                               * 42581000
*        R14   - RETURN ADDRESS                                       * 42581500
*                                                                     * 42582000
* NOTE         - THESE ROUTINES EXIT TO THE INITDCT (NPPDCT) OR THE   * 42582500
*                INITPDCT (NTPPPDCT) ROUTINE TO COMPLETE DCT INIT-    * 42583000
*                IALIZATION                                           * 42583500
*                                                                     * 42584000
*********************************************************************** 42584500
         SPACE 1                                                     R4 42585000
NTPPPDCT LA    R10,(PBSPTBL+3-PCEDSECT)/4*4(,R1)  SET POINTER        R4 42585500
         AL    R10,NBSPSIZ                         TO PRINT/PUNCH    R4 42586000
         ST    R10,PCEDCT                           DCT        @OZ32566 42586500
         LR    R1,R10              RELOAD DCT ADDRESS                R4 42587000
         B     INITPDCT             AND BR TO INITIALIZE DCT         R4 42587500
         SPACE 1                                                     R4 42588000
NPPDCT   LA    R10,(PBSPTBL+3-PCEDSECT)/4*4(,R1)  SET POINTER        R4 42588500
         AL    R10,NBSPSIZ                         TO PRINT/PUNCH    R4 42589000
         ST    R10,PCEDCT                           DCT        @OZ32566 42589500
         L     R1,DCTCHAIN-DCTDSECT(,WD)  POINT TO TEMPORARY DCT     R4 42590000
         SPACE 1                                                     R4 42590500
         DROP  R1                  KILL PCE ADDRESSABILITY           R4 42591000
         USING DCTDSECT,R1         PROVIDE DCT ADDRESSABILITY        R4 42591500
         SPACE 1                                                     R4 42592000
         CLI   DCTFORMS,0          TEST FOR FORMS ID                 R4 42592500
         BNE   SKIP640             BR IF PRESENT                     R4 42593000
         MVC   DCTFORMS,$STDFORM    ELSE SUPPLY DEFAULT              R4 42593500
SKIP640  TM    DCTDEVTP,DCTPRT     LOCAL PRINTER                     R4 42594000
         BNO   NPPDCT1             NO - SKIP COUNTING                R4 42594500
         TM    DCTPPFL,DCTTCEL     WAS DSPLTCEL ON PRINTERN CARD     R4 42595000
         BNO   NPPDCT1             NO - SKIP COUNTING                R4 42595500
         LH    R1,NPRDTCEL         PICK UP DESPOOL COUNTER           R4 42596000
         LA    R1,1(,R1)           ADD 1 TO IT                       R4 42596500
         STH   R1,NPRDTCEL         SAVE NEW VALUE                    R4 42597000
         SPACE 1                                                     R4 42597500
NPPDCT1  LR    R1,R10              RELOAD DCT ADDRESS                R4 42598000
         EJECT                                                       R4 42598500
*********************************************************************** 42599000
*                                                                     * 42599500
*        INITDCT -- DCT INITIALIZATION ROUTINE                        * 42600000
*                                                                     * 42600500
*        R1    - DCT ADDRESS, NEXT DOUBLE-WORD AFTER DCT ON EXIT      * 42601000
*        WD    - ADDRESS OF PREVIOUS TEMPORARY DCT                    * 42601500
*        WE    - ADDR OF PREVIOUS NEW DCT, CURRENT DCT ADDR ON EXIT   * 42602000
*        WF    - LENGTH FOR DCT MOVE                                  * 42602500
*        R14   - RETURN ADDRESS                                       * 42603000
*                                                                     * 42603500
*********************************************************************** 42604000
         SPACE 1                                                     R4 42604500
INITDCT  L     WD,DCTCHAIN-DCTDSECT(,WD) POINT TO TEMPORARY DCT      R4 42605000
         EX    WF,NDCTMV           CREATE NEW DCT FROM TEMPORARY     R4 42605500
         XC    DCTCHAIN+1(3),DCTCHAIN+1 CLEAR CHAIN ADDRESS         R41 42606000
         SPACE 1                                                     R4 42606500
INITPDCT STCM  R1,7,DCTCHAIN+1-DCTDSECT(WE)  SET CHAIN ADDR IN PREV  R4 42607000
         ST    WA,DCTEWF           SET $POST ADDRESS                 R4 42607500
         MVC   DCTSYS,$OWNSYS      SET SYSTEM ID                     R4 42608500
         LR    WE,R1               THIS DCT TO BE NEXT PREVIOUS DCT  R4 42611000
         LA    R1,8(WF,R1)         POINT TO 1ST DOUBLE-WORD          R4 42611500
         N     R1,=F'-8'            BEYOND CURRENT DCT               R4 42612000
         BR    LINK                THEN RETURN TO CALLER             R4 42612500
         SPACE 1                                                     R4 42613000
NDCTMV   MVC   0(*-*,R1),0(WD)     *** EXECUTE ONLY ***              R4 42613500
         SPACE 2                                                     R4 42614000
NPRDTCEL DC    H'0'                NBR OF PRINTERS SAYING DSPLTCEL   R4 42614500
         SPACE 1                                                     R4 42615000
         DROP  R1                  KILL DCT ADDRESSABILITY           R4 42615500
         TITLE 'HASP INITIALIZATION -- TABLE OF PRIMARY PCES'        R4 42616000
NBSPSIZ  DC    A(*-*)              SIZE OF PRINT/PUNCH BACKSPACE TBL R4 42616500
         SPACE 1                                                     R4 42617000
NRDROPSL DC    C'00014400000030E00000'  LOGON JOB DEFAULTS           R4 42617500
NRDROPST DC    C'00000100000000E00000'  STARTED TASK DEFAULTS        R4 42618000
NRDROPSU DC    C'00000300012820E00001'  BATCH USER JOB DEFAULTS      R4 42618500
         SPACE 2                                                     R4 42619000
*********************************************************************** 42619500
*                                                                     * 42620000
*        TABLE OF PRIMARY HASP PCES                                   * 42620500
*                                                                     * 42621000
*********************************************************************** 42621500
         SPACE 1                                                     R4 42622000
NPCETBL  DS    0H                                                    R4 42622500
         DC    AL2($ASYNCP-HCTDSECT,PCEASYID,PCEWORK-PCEDSECT)       R4 42623000
         DC    AL2($XTIMPCE-HCTDSECT,PCETIMID,PCEWORK+64-PCEDSECT)   R4 42623500
         DC    AL2($TIMEPCE-HCTDSECT,PCETIMID,PCEWORK-PCEDSECT)      R4 42624000
         DC    AL2($MLLMPCE-HCTDSECT,PCEMLMID)                       R4 42624500
         DC    AL2((PCEWORK-PCEDSECT+MLMPCEWS+7)/8*8)                R4 42625000
         DC    AL2($MCONPCE-HCTDSECT,PCECONID)                       R4 42625500
         DC    AL2((PCEWORK-PCEDSECT+RCPPCEWS+7)/8*8)                R4 42626000
         DC    AL2($JCLPCE-HCTDSECT,PCECNVID)                        R4 42626500
         DC    AL2((PCEWORK-PCEDSECT+JCLPCEWS+7)/8*8)                R4 42627000
         DC    AL2($EXECPCE-HCTDSECT,PCEXEQID)                       R4 42627500
         DC    AL2((PCEWORK-PCEDSECT+RDRPCEWS+7)/8*8)                R4 42628000
         DC    AL2($OUTPCE-HCTDSECT,PCEOUTID)                        R4 42628500
         DC    AL2((PCEWORK-PCEDSECT+OUTWKSIZ+7)/8*8)                R4 42629000
         DC    AL2($HOLDPCE-HCTDSECT,PCEXEQID)                       R4 42629500
         DC    AL2((PCEWORK-PCEDSECT+HQRLENG+7)/8*8)                 R4 42630000
         DC    AL2($PSOPCE-HCTDSECT,PCEPSOID)                        R4 42630500
         DC    AL2((PCEWORK-PCEDSECT+2*JOESIZE+7)/8*8)               R4 42631000
         DC    AL2($PRGPCE-HCTDSECT,PCEPRGID,PCEWORK-PCEDSECT)       R4 42631500
         DC    AL2($CKPTPCE-HCTDSECT,PCECKPID)                      R41 42632000
         DC    AL2((PCEWORK-PCEDSECT+CKPPCEWS+7)/8*8)               R41 42632100
         DC    AL2($PRAGPCE-HCTDSECT,PCEGPRID,PCEWORK+16-PCEDSECT)   R4 42632500
         DC    AL2($COMMPCE-HCTDSECT,PCECONID)                       R4 42635000
         DC    AL2((PCEWORK-PCEDSECT+COMPCEWS+7)/8*8)                R4 42635500
         DC    AL2($WARMPCE-HCTDSECT,PCEWRMID)                       R4 42636000
         DC    AL2((PCEWORK-PCEDSECT+WRMPCEWS+7)/8*8)                R4 42636500
         SPACE 1                                                     R4 42637000
NPCES    EQU   (*-NPCETBL)/6       NUMBER OF TABLE ENTRIES           R4 42637500
         EJECT                                                       R4 42638000
         LTORG                                                       R4 42638500
         TITLE 'HASP INITIALIZATION -- DCB/DEB GENERATION'           R4 42639000
*********************************************************************** 42639500
*                                                                     * 42640000
*        OBTAIN DCB/DEB STORAGE FOR LINES, RDRS, PRTS, AND PUNS       * 42640500
*                                                                     * 42641000
*********************************************************************** 42641500
         SPACE 1                                                     R4 42642000
NDCBGEN  BALR  BASE2,0             RE-ESTABLISH                      R4 42642500
         USING *,BASE2              LOCAL ADDRESSABILITY             R4 42643000
         SPACE 1                                                     R4 42643500
         LH    R3,$NUMLNES         COMPUTE                           R4 42644000
         LR    R1,R3                MAIN                             R4 42644500
         IC    R3,$NUMRDRS           STORAGE                         R4 42645000
         ALR   R1,R3                  REQUIREMENT                    R4 42645500
         IC    R3,$NUMPRTS             FOR                           R4 42646000
         ALR   R1,R3                    NON-DA                       R4 42646500
         IC    R3,$NUMPUNS               DCBS                        R4 42647000
         ALR   R1,R3                      AND                        R4 42647500
         SL    R1,NLOGLINE                 DEBS                      R4 42648500
         MH    R1,=Y((4+9)*4)          (4 WORD DCBS, 9 WORD DEBS)    R4 42650500
         IC    R3,$NUMDA              ADD SIZE OF                    R4 42651000
         SLL   R3,4                    DIRECT ACCESS                 R4 42651500
         LA    R0,4*(4*(1)+3+8)(R1,R3)  DCB AND DEB                  R4 42652000
         LR    R3,R0               SAVE STORAGE AMOUNT               R4 42652500
         ICM   R0,8,=AL1(229)      REQUEST STORAGE                   R4 42653000
         GETMAIN R,LV=(0)           FOR DCBS AND DEBS                R4 42653500
         LR    R2,R1               CLEAR                             R4 42654000
         SLR   R15,R15              DCB/DEB                          R4 42654500
         MVCL  R2,R14                STORAGE                         R4 42655000
         EJECT                                                       R4 42655500
*********************************************************************** 42656000
*                                                                     * 42656500
*        INITIALIZE $SID, SET DCBS/DEBS FOR LOCAL U/R AND BSC LINES   * 42657000
*                                                                     * 42657500
*********************************************************************** 42658000
         SPACE 1                                                     R4 42658500
         USING IHADCB,R1           PROVIDE DCB ADDRESSABILITY        R4 42659000
         USING DEBDSECT,R15        PROVIDE DEB ADDRESSABILITY        R4 42659500
         USING DCTDSECT,WA         PROVIDE DCT ADDRESSABILITY        R4 42660000
         USING CVTDSECT,WB         PROVIDE CVT ADDRESSABILITY        R4 42660500
         SPACE 1                                                     R4 42661000
         SH    R1,=H'36'           R1 = 1ST DCB ADDRESS              R4 42661500
         LA    R15,36+4*4(,R1)     R15 = 1ST DEB ADDRESS             R4 42662000
         L     WB,CVTPTR           WC = ADDRESS                      R4 42662500
         L     WC,CVTSMCA                OF SMCA                     R4 42663000
         CLI   $SID,C' '           TEST FOR SUPPLIED SYSTEM ID       R4 42663500
         BNE   SKIP650             BR IF YES                         R4 42664000
         MVC   $SID,SMCASID-SMCA(WC)  ELSE USE SMF SYSTEM ID         R4 42664500
SKIP650  L     WD,$HASPTCB         GET ADDRESS OF HASP TCB           R4 42665000
         SLR   R0,R0               R0 = NUMBER                       R4 42665500
         IC    R0,$NUMRDRS               OF READERS                  R4 42666000
         L     WA,$DCTPOOL         WA = 1ST RDR DCT ADDRESS          R4 42666500
         BAL   R14,NDCBDEB         BUILD READER DCBS AND DEBS        R4 42667000
         IC    R0,$NUMPRTS         R0 = NUMBER OF PRINTERS           R4 42667500
         BAL   R14,NDCBDEB         BUILD PRINTER DCBS AND DEBS       R4 42668000
         IC    R0,$NUMPUNS         R0 = NUMBER OF PUNCHES            R4 42668500
         BAL   R14,NDCBDEB         BUILD PUNCH DCBS AND DEBS         R4 42669000
         LH    R0,$NUMLNES         R0 = NUMBER OF RJE LINES          R4 42669500
         L     WA,$LNEDCT          WA = 1ST LINE DCT ADDRESS         R4 42670000
         BAL   R14,NDCBDEB         BUILD LINE DCBS AND DEBS          R4 42670500
         SH    R1,=H'4'            ADJUST DCB ADDRESS FOR DA         R4 42671000
         SH    R15,=H'4'           ADJUST DEB ADDRESS FOR DA         R4 42671500
         MVC   DCBTIOT((3+8)*4),NDCDEDUM+4  DA DCB/DEB CONSTANTS     R4 42672000
         ST    R15,DCBDEBAD        SET DEB ADDRESS IN DCB            R4 42672500
         STCM  WD,7,DEBTCBB        SET TCB ADDRESS IN DEB            R4 42673000
         STCM  R1,7,DEBDCBB        SET DCB ADDRESS IN DEB            R4 42673500
         SLR   WA,WA               SET                               R4 42674000
         IC    WA,$NUMDA            NUMBER                           R4 42674500
         LA    WA,1(,WA)             OF                              R4 42675000
         STC   WA,DEBNMEXT            EXTENTS                        R4 42675500
         MVI   DEBEXSCL,X'04'      INDICATE DA DEB                   R4 42676000
         ST    R1,$HASPDCB         SET DCB ADDRESS IN HCT            R4 42676500
         MVC   DEBAPPB,CVTXAPG+1   DON'T USE JES2 APPENDAGES         R4 42677000
         ST    R15,$DADEBAD        SET DEB ADDRESS IN HCT            R4 42677500
         B     NVALSYS             THEN BR TO NEXT SECTION           R4 42678000
         SPACE 1                                                     R4 42678500
         DROP  WB                  KILL CVT ADDRESSABILITY           R4 42679000
         EJECT                                                       R4 42679500
NDCBDEB  LTR   R0,R0               AT LEAST ONE DEVICE               R4 42680000
         BZR   R14                 RETURN IF NO                      R4 42680500
         SPACE 1                                                     R4 42681000
NDCDE1   DS    0H                                                    R4 42681500
         CLI   DCTDEVTP,DCTLNE     TEST                              R4 42682500
         BNE   SKIP660               FOR                             R4 42683000
         TM    MDCTTYPE,DCTPSNA        UNIT=VTAM LINE                R4 42683500
         BO    NDCTNEXT            BR IF YES TO SKIP DCB/DEB BUILD   R4 42684000
SKIP660  MVC   DCBEXLST((4+8)*4),NDCDEDUM U/R DCB AND DEB CONSTANTS  R4 42685000
         STCM  R1,7,DCTDCB+1       DCB ADDR INTO DCT                 R4 42685500
         ST    R15,DCBDEBAD        DEB ADDR INTO DCB                 R4 42686000
         STCM  WD,7,DEBTCBB        TCB ADDR INTO DEB                 R4 42686500
         STCM  R1,7,DEBDCBB        DCB ADDR INTO DEB                 R4 42687000
         L     WE,$HASPMAP         POINT TO HASP MODULE MAP          R4 42687500
         MVC   DEBAPPB,MAPIOAPG+1-MAPDSECT(WE)  USE HASP I/O APPG'S  R4 42688000
         CLI   DCTDEVTP,DCTLNE     TEST DEVICE TYPE                  R4 42688500
         BNE   NDCDE2              BR IF NOT A LINE                  R4 42689000
         MVI   DCBIFLGS,DCBIFIOE   SET NO OS RECOVERY FLAGS          R4 42689500
         SPACE 1                                                     R4 42690000
NDCDE2   LA    R1,(4+9)*4(,R1)     R1 = NEXT DCB ADDRESS             R4 42690500
         LA    R15,(4+9)*4(,R15)   R15 = NEXT DEB ADDRESS            R4 42691000
         SPACE 1                                                     R4 42691500
NDCTNEXT L     WA,DCTCHAIN         WA = NEXT DCT ADDRESS             R4 42692000
         BCT   R0,NDCDE1           LOOP IF MORE OF SAME DEVICE       R4 42692500
         SPACE 1                                                     R4 42693000
         BR    R14                 THEN RETURN                       R4 42693500
         SPACE 1                                                     R4 42694000
         DROP  R1,WA,R15           KILL DCB, DCT, DEB ADDRESSABILITY R4 42694500
         SPACE 2                                                     R4 42695000
NDCDEDUM DS    0F                  DCB/DEB SKELETONS                 R4 42695500
         DC    A(0)                              DCBEXLST            R4 42696000
         DC    AL2(0),AL1(DCBMRECP+DCBMRAPG)     DCBTIOT, DCBMACRF   R4 42696500
         DC    AL1(0),A(0),AL1(DCBOFOPN),AL3(0)  DCBOFLGS            R4 42697000
         DC    A(0),AL1(4),AL3(0)                DEBTCBAD, DEBAMLNG  R4 42697500
         DC    AL1(DEBDSMOD+DEBDCB),AL3(0)       DEBOFLGS            R4 42698000
         DC    AL1(DEBINOUT),AL3(0)              DEBINOUT            R4 42698500
         DC    AL1(1),AL3(0),A(0)                DEBNMEXT            R4 42699000
         DC    AL1(1*16+15),AL3(0)               DEBPROTG/DEBDEBID   R4 42699500
         DC    AL1(2),AL3(0)                     DEBEXSCL            R4 42700000
         TITLE 'HASP INITIALIZATION -- SYSTEM PARAMETER VALIDATION'  R4 42700500
*********************************************************************** 42701000
*                                                                     * 42701500
*        VALIDATE SYSTEM PARAMETER TABLE                              * 42702000
*                                                                     * 42702500
*********************************************************************** 42703000
         SPACE 1                                                     R4 42703500
*                                                                    R4 42704000
***   DETERMINE IS THIS AN UNSHARED ENVIRONMENT                      R4 42704500
*                                                                    R4 42705000
NVALSYS  CLC   NS1(L'NS1*7),=CL28' '  IS TABLE EMPTY...              R4 42705500
         BNE   NVAL050             BR IF NO                          R4 42706000
         MVC   NS1,$SID            SET SMF CPU ID FOR THIS SYSTEM       42706500
         LA    R3,1                INDICATE 1 MEMBER IN NODE         R4 42707000
         B     NVAL300             BR TO SET QSE INFO                R4 42707500
*                                                                       42708000
***   DETERMINE IF TABLE IS CONTIGUOUS                                  42708500
*                                                                       42709000
NVAL050  CLI   NS1,C' '            SEE IF 1ST TABLE ENTRY IS BLANK   R4 42709500
         BE    NVALERR             BR. IF YES TO DOCUMENT ERROR         42710000
         LA    R0,NS1A-1           POINT TO END OF TABLE ENTRIES        42710500
         LA    R1,NS1              POINT TO FIRST TABLE ENTRY           42711000
NVAL100  LA    R1,L'NS1(,R1)       STEP TO NEXT TABLE ELEMENT           42711500
         CLI   0(R1),C' '          Q. IF TABLE ELEMENT IS BLANK         42712000
         BNE   NVAL100             BR. IF NO TO CONTINUE SEARCH         42712500
         SR    R0,R1               FIND LENGTH OF REMAINING TABLE       42713000
         STC   R0,*+L'*+1          STORE LENGTH INTO NEXT INSTR         42713500
         CLC   0(*-*,R1),=CL28' '  Q. IF REMAINING TABLE IS BLANK       42714000
         BNE   NVALERR             BR. IF NO TO DOCUMENT ERROR          42714500
*                                                                       42715000
***   DETERMINE IF TABLE CONTAINS DUPLICATE ENTRIES                     42715500
*                                                                       42716000
         SLR   R3,R3               CLEAR MEMBER COUNT                R4 42716500
         LA    R1,NS1-L'NS1        SET POINTER BEFORE TABLE             42717000
NVAL210  LA    R1,L'NS1(,R1)       STEP TO NEXT TABLE ENTRY             42717500
         LA    R3,1(,R3)           INCREMENT MEMBER COUNT            R4 42718000
         CLI   L'NS1(R1),C' '      Q. IF AT END OF TABLE                42718500
         BE    NVAL300             BR. IF YES                           42719000
         LR    R2,R1               COPY CURRENT TABLE ELEMENT ADDR      42719500
NVAL220  LA    R2,L'NS1(,R2)       STEP TO NEXT TABLE ELEMENT           42720000
         CLI   0(R2),C' '          Q. IF AT END OF TABLE                42720500
         BE    NVAL210             BR. IF YES TO STEP PRIMARY PTR.      42721000
         CLC   0(L'NS1,R1),0(R2)   Q. IF DUPLICATE ENTRY                42721500
         BNE   NVAL220             BR. IF NO TO CONTINUE SEARCH         42722000
         B     NVALERR             BR. TO DOCUMENT ERROR                42722500
         EJECT                                                       R4 42723000
*                                                                    R4 42723500
***   SET $QSENO                                               @OZ20010 42724000
*                                                                    R4 42724500
NVAL300  STH   R3,$QSENO           SET COUNT OF MEMBERS IN NODE      R4 42725000
                                   PRINT OFF - SECTION DELETED @OZ20010 42725500
*                                  THIS CARD DELETED BY APAR   @OZ20010 42726000
*                                  THIS CARD DELETED BY APAR   @OZ20010 42726500
*                                  THIS CARD DELETED BY APAR   @OZ20010 42727000
*                                  THIS CARD DELETED BY APAR   @OZ20010 42727500
*                                  THIS CARD DELETED BY APAR   @OZ20010 42728000
*                                  THIS CARD DELETED BY APAR   @OZ20010 42728500
*                                  THIS CARD DELETED BY APAR   @OZ20010 42729000
*                                  THIS CARD DELETED BY APAR   @OZ20010 42729500
*                                  THIS CARD DELETED BY APAR   @OZ20010 42730000
                                   PRINT ON -- SECTION DELETED @OZ20010 42730500
*                                                                       42731000
***   DETERMINE IF TABLE CONTAINS SMF CPU ID FOR THIS SYSTEM            42731500
*                                                                       42732000
         LA    R1,NS1              POINT TO 1ST TABLE ENTRY          R4 42732500
NVAL310  CLC   $SID,0(R1)          Q. IF SMF CPU ID                     42733000
         BE    NTEDINIT            BR IF YES TO NEXT SECTION         R4 42733500
         LA    R1,L'NS1(,R1)       STEP TO NEXT TABLE ENTRY             42734000
         CLI   0(R1),C' '          Q. IF AT END OF TABLE                42734500
         BNE   NVAL310             BR. IF NO TO CONTINUE SEARCH         42735000
*                                                                       42735500
***   DOCUMENT INVALID SYSTEM PARAMETER TABLE                           42736000
*                                                                       42736500
NVALERR  L     R1,=A(NVALMSG)      POINT TO ERROR MESSAGE            R4 42737000
         B     NAEXIT              BR TO ISSUE MESSAGE AND QUIT      R4 42737500
         SPACE 6                                                        42738000
*                                                                       42738500
***   SYSTEM PARAMETER TABLE                                            42739000
*                                                                       42739500
NS1      DC    8CL4' '             SMF ID(S) FOR CPU 1 THRU CPU 7       42740000
NS1A     DC    X'01010000',X'02020000',X'03040000',X'04080000'          42740500
         DC    X'05100000',X'06200000',X'07400000'                      42741000
         TITLE 'HASP INITIALIZATION -- TEMPORARY TED ALLOCATION'     R4 42741500
*********************************************************************** 42742000
*                                                                     * 42742500
*        OBTAIN STORAGE FOR TEMPORARY TEDS                            * 42743000
*                                                                     * 42743500
*********************************************************************** 42744000
         SPACE 1                                                     R4 42744500
NTEDINIT LH    R3,$NUMTGV          COMPUTE                           R4 42745000
         LA    R3,7(,R3)            AND                              R4 42745500
         SRL   R3,3                  STORE                           R4 42746000
         SLR   R0,R0                  LENGTH OF                      R4 42746500
         IC    R0,$NUMDA               TRACK                         R4 42747000
         MR    R2,R0                    GROUP                        R4 42747500
         ST    R3,$CYLMAPL               MAP                         R4 42748000
         LA    R2,IOTTGMAP-IOTDSECT+TGMAP-TGMDSECT+3(,R3)            R4 42748500
         N     R2,=F'-4'           COMPUTE AND STORE                 R4 42749000
         ST    R2,$IOTPDDB          OFFSET WITHIN IOT OF 1ST PDDB    R4 42749500
         LA    R3,IOTPDBOD-(BUFSTART-BUFDSECT)(,R2)  MIN BUFFER SIZE R4 42750000
         CH    R3,$BUFSIZE         IF BUFFER SIZE ADEQUATE,          R4 42750500
         BNH   NGETTEDS             BR TO GET TEMPORARY TEDS         R4 42751000
         L     R1,=A(NTGBFMSG)       ELSE POINT TO ERROR MESSAGE     R4 42751500
         SPACE 1                                                     R4 42752000
NAEXIT  $$WTO  (R1)                ISSUE ERROR MESSAGE TO OPERATOR   R4 42752500
        $EXIT  NGQUITM             THEN ISSUE 'QUIT' MSG AND QUIT    R4 42753000
         SPACE 1                                                     R4 42753500
NGETTEDS LA    R3,TEDSIZ           REQUEST STORAGE                   R4 42754000
         MR    R2,R0                FOR TEMPORARY                    R4 42754500
         LR    R0,R3                 TRACK EXTENT                    R4 42755000
         ICM   R0,8,=AL1(229)         DATA                           R4 42755500
         GETMAIN R,LV=(0)              TABLES                        R4 42756000
         EJECT                                                       R4 42756500
*********************************************************************** 42757000
*                                                                     * 42757500
*        FORMAT TEMPORARY TRACK EXTENT DATA TABLES                    * 42758000
*                                                                     * 42758500
*********************************************************************** 42759000
         SPACE 1                                                     R4 42759500
         ST    R1,TEDSTART         SET POINTER TO TEMPORARY TEDS     R4 42760000
         LR    R2,R1                AND CLEAR                        R4 42760500
         MVCL  R2,R14                TED STORAGE                     R4 42761000
         LH    R2,$NUMTGV          GET TRACK GROUPS PER EXTENT       R4 42761500
         IC    R15,$NUMDA           AND NUMBER OF VOLUMES            R4 42762000
         LA    R4,7(,R2)           GET SINGLE VOLUME                 R4 42762500
         SRL   R4,3                 MAP SIZE                         R4 42763000
         SLR   R5,R5               INITIALIZE MAP OFFSET             R4 42763500
         SPACE 1                                                     R4 42764000
         USING TEDDSECT,R1         PROVIDE TED ADDRESSABILITY        R4 42764500
         SPACE 1                                                     R4 42765000
INITTED  STC   R3,TNMD             EXTENT NUMBER, SHIFTED LEFT 8     R4 42765500
         STH   R2,TNGE             NUMBER OF GROUPS PER EXTENT       R4 42766000
         MVI   TNTG+1,1            NUMBER OF TRACKS PER GROUP        R4 42766500
         STH   R5,TNMO             OFFSET OF THIS MAP FROM 1ST MAP   R4 42767000
         STH   R4,TNMB             NUMBER OF BYTES PER MAP           R4 42767500
         LA    R3,1(,R3)           BUMP EXTENT NUMBER                R4 42768000
         ALR   R5,R4               BUMP MAP OFFSET                   R4 42768500
         LA    R1,TEDSIZ(,R1)      POINT TO NEXT TED                 R4 42769000
         BCT   R15,INITTED         LOOP THRU ALL TEDS                R4 42769500
         SPACE 1                                                     R4 42770000
         DROP  R1                  KILL TED ADDRESSABILITY           R4 42770500
         TITLE 'HASP INITIALIZATION -- JOB QUEUE / JOT ALLOCATION'   R4 42771000
*********************************************************************** 42771500
*                                                                     * 42772000
*        COMPUTE ENTRIES IN RESIDENT JCT QUEUE                        * 42772500
*                                                                     * 42773000
*********************************************************************** 42773500
         SPACE 1                                                     R4 42774000
NALOCJQS SLR   R1,R1               CLEAR FOR INSERTS                 R4 42774500
         LA    R0,2                COMPUTE AND SAVE                  R4 42775000
         IC    R1,$NUMPRTS          NUMBER                           R4 42775500
         ALR   R0,R1                 OF                              R4 42776000
         IC    R1,$NUMPUNS            PRINT,                         R4 42776500
         ALR   R0,R1                   PUNCH,                        R4 42777000
         AH    R0,$NUMTPPR              REMOTE PRINT,                R4 42777500
         AH    R0,$NUMTPPU               AND REMOTE PUNCH ENTRIES    R4 42778000
         STH   R0,$#JCTQCT                PLUS 2                     R4 42778500
         SPACE 1                                                     R4 42779000
*********************************************************************** 42779500
*                                                                     * 42780000
*        PROVIDE PRINT/PUNCH-RELATED PARAMETER DEFAULTS               * 42780500
*                                                                     * 42781000
*********************************************************************** 42781500
         SPACE 1                                                     R4 42782000
         SH    R0,=H'2'            REDUCE R0 TO PRINT/PUNCH COUNT    R4 42782500
         LR    R1,R0               MULTIPLY PRINT/PUNCH              R4 42783000
         M     R0,=F'10'            COUNT BY 10                      R4 42783500
         CH    R1,=Y($MAXJOES)     IMPOSE                            R4 42784000
         BNH   SKIP670              &NUMJOES                         R4 42784500
         LH    R1,=Y($MAXJOES)       LIMIT                           R4 42785000
SKIP670  OC    $NUMJOES,$NUMJOES   TEST $NUMJOES                     R4 42785500
         BNZ   SKIP680             BR IF PROVIDED                    R4 42786000
         STH   R1,$NUMJOES          ELSE SUPPLY DEFAULT              R4 42786500
SKIP680  LH    R1,$NUMJOES         GET $NUMJOES                      R4 42787000
         D     R0,=F'5'             DIVIDED BY 5                     R4 42787500
         LH    WA,$MINJOES         IF                                R4 42788000
         LTR   WA,WA                $MINJOES                         R4 42788500
         BNZ   SKIP690               NOT PROVIDED,                   R4 42789000
         LR    WA,R1                  SUPPLY DEFAULT                 R4 42789500
SKIP690  LH    R0,$NUMJOES         ENSURE                            R4 42790000
         BCTR  R0,0                 $MINJOES                         R4 42790500
         BCTR  R0,0                  AT                              R4 42791000
         CLR   R0,WA                  LEAST                          R4 42791500
         BNL   SKIP700                 2                             R4 42792000
         LR    WA,R0                    LESS THAN                    R4 42792500
SKIP700  STH   WA,$MINJOES               $NUMJOES                    R4 42793000
         EJECT                                                       R4 42793500
***************************************************************@OZ20010 42794000
*                                                              @OZ20010 42794200
*        COMPUTE SIZE OF JES2 JOB QUEUE                        @OZ20010 42794400
*                                                              @OZ20010 42794500
***************************************************************@OZ20010 42794700
         SPACE 1                                               @OZ20010 42794900
         LH    R1,$MAXJOBS         GET JQE REQUIREMENT         @OZ20010 42795000
         MH    R1,=AL2(JQELNGTH)   COMPUTE AND                 @OZ20010 42795200
         LA    R1,4095(,R1)         STORE NUMBER OF            @OZ20010 42795400
         SRL   R1,12                 JOB QUEUE                 @OZ20010 42795500
         STH   R1,$JOBRECN            RECORDS                  @OZ20010 42795700
         SLL   R1,12               COMPUTE AND STORE           @OZ20010 42795900
         ST    R1,$JOBQSIZ          SIZE OF JOB QUEUE          @OZ20010 42796000
         SPACE 1                                               @OZ20010 42796200
***************************************************************@OZ20010 42796400
*                                                              @OZ20010 42796500
*        COMPUTE SIZE OF JES2 JOB OUTPUT TABLE (JOT)           @OZ20010 42796700
*                                                              @OZ20010 42796900
***************************************************************@OZ20010 42797000
         SPACE 1                                               @OZ20010 42797200
         LH    R1,$NUMJOES         GET REAL JOE REQUIREMENT    @OZ20010 42797400
         LA    R1,NJOTPRFX(,R1)     PLUS PREFIX AND            @OZ31676 42797500
         MH    R1,=AL2(JOESIZE)    COMPUTE STORAGE REQUIREMENT @OZ31676 42797700
         LA    R1,4095(,R1)          ROUNDING FACTOR           @OZ20010 42797900
         SRL   R1,12               COMPUTE AND STORE           @OZ20010 42798000
         STH   R1,$JOTRECN          COUNT OF JOT RECORDS       @OZ20010 42798200
         SLL   R1,12               COMPUTE AND STORE           @OZ20010 42798400
         ST    R1,$JOTSIZE           SIZE OF JOT               @OZ20010 42798500
         SPACE 1                                               @OZ20010 42798700
***************************************************************@OZ20010 42798900
*                                                              @OZ20010 42799000
*        COMPUTE LENGTH OF SHARED-SPOOL QUEUE ELEMENT (QSE)    @OZ20010 42799200
*                                                              @OZ20010 42799400
***************************************************************@OZ20010 42799500
         SPACE 1                                               @OZ20010 42799700
         LA    R3,QSESTAT+L'QSESTAT-QSEDSECT  BASIC QSE LEN    @OZ20010 42800000
         STH   R3,$QSECTLB         SAVE OFFSET OF CKPT CTLB    @OZ20010 42800500
         AH    R3,$JOBRECN         ADD NUMBER OF JOB QUEUE AND @OZ20010 42801000
         AH    R3,$JOTRECN          JOT CKPT CONTROL BYTES     @OZ20010 42801400
         LA    R3,7(,R3)           ROUND UP TO                 @OZ20010 42801500
         N     R3,=F'-8'            MULTIPLE OF 8 BYTES        @OZ20010 42801700
         STH   R3,$QSEL            STORE QSE LENGTH            @OZ20010 42801900
         EJECT                                                 @OZ20010 42802000
***************************************************************@OZ20010 42802200
*                                                              @OZ20010 42802400
*        GET STORAGE FOR 1ST CKPT RECORD AND ITS READ-IN AREA  @OZ20010 42802500
*                                                              @OZ20010 42802700
***************************************************************@OZ20010 42802900
         SPACE 1                                               @OZ20010 42803000
         MH    R3,$QSENO           R3  = SIZE OF ALL QSE'S     @OZ20010 42803200
         SLR   R10,R10             R10 = SIZE OF DA CKPT       @OZ20010 42803400
         IC    R10,$NUMDA                 INFO BLOCKS AT       @OZ20010 42803500
         MH    R10,=H'6'                   6 BYTES PER BLOCK   @OZ20010 42803700
         LH    R5,$NUMRJE          R5 = SIZE OF REMOTE         @OZ20010 42803900
         LR    R8,R5                     MESSAGE SPOOL QUEUE   @OZ20010 42804000
         LA    R5,1(,R5)                  HEADS AT 3 BYTES     @OZ20010 42804200
         MH    R5,=H'3'                    PER QUEUE HEAD      @OZ20010 42804400
         MH    R8,=H'3'            R8 = SIZE OF REMOTE SIGN-ON @OZ20010 42804500
         LA    R8,7(,R8)                 TABLE AT 3 BITS PER   @OZ20010 42804700
         SRL   R8,3                       RMT, SPANNING BYTES  @OZ20010 42804900
         LA    R7,$SAVELEN(R5,R10) ADD ABOVE PLUS LENGTHS      @OZ20010 42805000
         ALR   R7,R8                OF HCT VARIABLES AND       @OZ20010 42805200
         ALR   R7,R3                 MASTER TRACK GROUP MAP,   @OZ20010 42805400
         AL    R7,$CYLMAPL            STORING TOTAL AS LENGTH  @OZ20010 42805500
         ST    R7,$CKPTR1L             OF 1ST CKPT RECORD      @OZ20010 42805700
         LA    R7,4095(,R7)        ROUND STORAGE REQUIREMENT   @OZ20010 42805900
         N     R7,=F'-4096'         TO MULTIPLE OF 4K          @OZ20010 42806000
         LA    R0,0(R7,R7)         GET STORAGE FOR 1ST CKPT    @OZ20010 42806200
         SPACE 1                                               @OZ20010 42806400
         GETMAIN RU,LV=(0),BNDRY=PAGE  RCD AND ITS READ-IN AREA@OZ20010 42806500
         EJECT                                                 @OZ20010 42806700
***************************************************************@OZ20010 42806900
*                                                              @OZ20010 42807000
*        CLEAR AND PAGE-FIX 1ST CHECKPOINT RECORD              @OZ20010 42807200
*                                                              @OZ20010 42807400
***************************************************************@OZ20010 42807500
         SPACE 1                                               @OZ20010 42807700
         L     R2,=A(NOPTECB)      GET ECB ADDRESS FOR $PGSRVC @OZ20010 42807900
        $PGSRVC FIX,(R1),(R7),(R2) FIX RECORD AREA FOR EXCPVR  @OZ20010 42808000
         SPACE 1                                               @OZ20010 42808200
         LR    R6,R1               CLEAR STORAGE               @OZ20010 42808400
         SLR   R15,R15              FOR FIRST                  @OZ20010 42808500
         MVCL  R6,R14                CKPT RECORD               @OZ20010 42808700
         ST    R1,$CKPTR1          STORE PTR TO 1ST CKPT RCD   @OZ20010 42808900
         ST    R6,$CKPR1RD         STORE PTR TO READ-IN AREA   @OZ20010 42809000
         LA    R1,$SAVELEN(,R1)    STORE POINTER TO            @OZ20010 42809200
         ST    R1,$QSE1             FIRST QSE                  @OZ20010 42809400
         ALR   R1,R3               STORE POINTER TO            @OZ20010 42809500
         ST    R1,$DACKPT           DA CKPT INFO BLOCKS        @OZ20010 42809700
         ALR   R1,R10              STORE POINTER TO            @OZ20010 42809900
         ST    R1,$MSPOOLQ          RMT MSG SPOOL QUEUE HEADS  @OZ20010 42810000
         ALR   R1,R5               STORE POINTER TO            @OZ20010 42810200
         ST    R1,$RMTSON           REMOTE SIGN-ON TABLE       @OZ20010 42810400
         ALR   R1,R8               STORE POINTER TO            @OZ20010 42810500
         ST    R1,$TGMAP            MASTER TRACK GROUP MAP     @OZ20010 42810700
         EJECT                                                 @OZ20010 42810900
***************************************************************@OZ20010 42811000
*                                                              @OZ20010 42811200
*        GET STORAGE FOR JOB QUEUE, JOT AND THE READ-IN AREAS  @OZ20010 42811400
*                                                              @OZ20010 42811500
***************************************************************@OZ20010 42811700
         SPACE 1                                               @OZ20010 42811900
         L     R7,$JOTSIZE         GET SIZE OF JOT             @OZ20010 42812000
         L     R4,$JOBQSIZ         GET SIZE OF JOB QUEUE       @OZ20010 42812200
         LA    R7,0(R4,R7)         GET TOTAL STORAGE REQ'T     @OZ20010 42812400
         LA    R0,0(R7,R7)         RELOAD TOTAL SIZE DOUBLED   @OZ20010 42812500
         SPACE 1                                               @OZ20010 42812700
         GETMAIN RU,LV=(0),BNDRY=PAGE  REQUEST STORAGE         @OZ20010 42812900
         SPACE 1                                               @OZ20010 42813000
***************************************************************@OZ20010 42813200
*                                                              @OZ20010 42813400
*        CLEAR AND FIX JOB QUEUE AND JOT PAGES                 @OZ20010 42813500
*                                                              @OZ20010 42813700
***************************************************************@OZ20010 42813900
         SPACE 1                                               @OZ20010 42814000
         L     R2,=A(NOPTECB)      GET ECB ADDRESS FOR $PGSRVC @OZ20010 42814200
        $PGSRVC FIX,(R1),(R7),(R2) FIX JOB Q & JOT FOR EXCPVR  @OZ20010 42814400
         SPACE 1                                               @OZ20010 42814500
         LA    R0,0(R4,R7)         STORE POINTER               @OZ20010 42814700
         ALR   R0,R1                TO JOT                     @OZ20010 42814900
         ST    R0,$JOTREAD           READ-IN AREA              @OZ20010 42815000
         LR    R6,R1               CLEAR STORAGE               @OZ20010 42815200
         SLR   R15,R15              FOR JOB QUEUE              @OZ20010 42815400
         MVCL  R6,R14                AND JOT                   @OZ20010 42815500
         ST    R1,$JOBQPTR         STORE JOB QUEUE ORIGIN      @OZ20010 42815700
         ST    R6,$JBQREAD         STORE JOB Q READ-AREA PTR   @OZ20010 42815900
         ALR   R4,R1               STORE POINTER TO            @OZ20010 42816000
         ST    R4,$JOTABLE          JOB OUTPUT TABLE (JOT)     @OZ20010 42816200
         EJECT                                                 @OZ20010 42816400
***************************************************************@OZ20010 42816500
*                                                              @OZ20010 42816700
*        GET STORAGE FOR CHECKPOINT I/O BUFFER                 @OZ20010 42816900
*                                                              @OZ20010 42817000
***************************************************************@OZ20010 42817200
         SPACE 1                                               @OZ20010 42817400
         USING JQBDSECT,R1         PROVIDE JQB ADDRESSABILITY  @OZ20010 42817500
         LH    R2,$JOBRECN         R2 = NUMBER OF JOB QUEUE    @OZ20010 42817700
         AH    R2,$JOTRECN               & JOT CKPT CTL BYTES  @OZ20010 42817900
         LA    R4,1(,R2)           R4 = NUMBER OF CCW AREAS    @OZ20010 42818000
         LR    R6,R4               R6 = SIZE OF CHANNEL        @OZ20010 42818200
         MH    R6,=AL2(L'JQBCCWEL)       PROGRAM AREA          @OZ20010 42818400
         LA    R7,JQBCCWS-JQBDSECT(R4,R6)  GET BASIC JQB       @OZ20010 42818500
         LH    R5,$#JCTQCT         R5 = STORAGE FOR RESIDENT   @OZ20010 42818700
         SLL   R5,3                      JCT QUEUE CTL BLOCKS  @OZ20010 42818900
         ALR   R7,R5               R7 = TOTAL                  @OZ20010 42819000
         ALR   R7,R2                     JQB STORAGE           @OZ20010 42819200
         LR    R0,R7                      REQUIREMENT          @OZ20010 42819400
         GETMAIN RU,LV=(0),BNDRY=PAGE  GET JQB STORAGE         @OZ20010 42819500
         L     R2,=A(NOPTECB)      GET ECB ADDRESS FOR $PGSRVC @OZ20010 42819700
        $PGSRVC FIX,(R1),(R7),(R2) LONG-TERM FIX THE JQB       @OZ20010 42819900
         ST    R1,$CKPTIOB         STORE JQB ADDRESS IN HCT    @OZ20010 42820000
         LR    R14,R1              CLEAR                       @OZ20010 42820200
         LR    R15,R7               ENTIRE                     @OZ20010 42820400
         SLR   R1,R1                 JQB                       @OZ20010 42820500
         MVCL  R14,R0                 AREA                     @OZ20010 42820700
         L     R1,$CKPTIOB         RESTORE JQB ADDRESS         @OZ20010 42820900
         LA    R0,JQBCCWS(R6)      STORE POINTER TO RESIDENT   @OZ20010 42821000
         ST    R0,$#JCTQ            JCT QUEUE CONTROL BLOCKS   @OZ20010 42821200
         ALR   R0,R5               STORE POINTER TO            @OZ20010 42821400
         ST    R0,$JOBCTLB          JOB QUEUE                  @OZ20010 42821500
         AH    R0,$JOBRECN           AND JOT                   @OZ20010 42821700
         ST    R0,$JOTCTLB            CKPT CONTROL BYTES       @OZ20010 42821900
         MVC   JQBECBP,=A(NGECB)   STORE POINTER TO INIT'N ECB @OZ20010 42822000
         MVI   JQBIOB,X'42'        SET 'IOBFLAG1' IN JQB       @OZ20010 42822200
         MVC   JQBDCBP,$HASPDCB    SET DA DCB ADDRESS IN JQC   @OZ20010 42822400
         LA    R0,JQBCCWS                STORE POINTER TO      @OZ20010 42822500
         ST    R0,IOBSTART-BUFDSECT(,R1)  START OF CHANNEL PGM @OZ20010 42822700
                                   PRINT OFF - SECTION DELETED @OZ20010 42823000
*                                  THIS CARD DELETED BY APAR   @OZ20010 42823500
*                                  THIS CARD DELETED BY APAR   @OZ20010 42824000
*                                  THIS CARD DELETED BY APAR   @OZ20010 42824500
*                                  THIS CARD DELETED BY APAR   @OZ20010 42825000
*                                  THIS CARD DELETED BY APAR   @OZ20010 42825500
*                                  THIS CARD DELETED BY APAR   @OZ20010 42826000
*                                  THIS CARD DELETED BY APAR   @OZ20010 42826500
*                                  THIS CARD DELETED BY APAR   @OZ20010 42827000
*                                  THIS CARD DELETED BY APAR   @OZ20010 42827500
*                                  THIS CARD DELETED BY APAR   @OZ20010 42828000
*                                  THIS CARD DELETED BY APAR   @OZ20010 42828500
*                                  THIS CARD DELETED BY APAR   @OZ20010 42829000
*                                  THIS CARD DELETED BY APAR   @OZ20010 42829500
*                                  THIS CARD DELETED BY APAR   @OZ20010 42830000
*                                  THIS CARD DELETED BY APAR   @OZ20010 42830500
*                                  THIS CARD DELETED BY APAR   @OZ20010 42831000
*                                  THIS CARD DELETED BY APAR   @OZ20010 42831500
*                                  THIS CARD DELETED BY APAR   @OZ20010 42832000
*                                  THIS CARD DELETED BY APAR   @OZ20010 42832500
*                                  THIS CARD DELETED BY APAR   @OZ20010 42833000
*                                  THIS CARD DELETED BY APAR   @OZ20010 42833500
*                                  THIS CARD DELETED BY APAR   @OZ20010 42834000
*                                  THIS CARD DELETED BY APAR   @OZ20010 42834500
*                                  THIS CARD DELETED BY APAR   @OZ20010 42835000
*                                  THIS CARD DELETED BY APAR   @OZ20010 42835500
*                                  THIS CARD DELETED BY APAR   @OZ20010 42836000
*                                  THIS CARD DELETED BY APAR   @OZ20010 42836500
*                                  THIS CARD DELETED BY APAR   @OZ20010 42837000
*                                  THIS CARD DELETED BY APAR   @OZ20010 42837500
*                                  THIS CARD DELETED BY APAR   @OZ20010 42838000
*                                  THIS CARD DELETED BY APAR   @OZ20010 42838500
*                                  THIS CARD DELETED BY APAR   @OZ20010 42839000
*                                  THIS CARD DELETED BY APAR   @OZ20010 42839500
*                                  THIS CARD DELETED BY APAR   @OZ20010 42840000
*                                  THIS CARD DELETED BY APAR   @OZ20010 42840500
*                                  THIS CARD DELETED BY APAR   @OZ20010 42841000
*                                  THIS CARD DELETED BY APAR   @OZ20010 42841500
*                                  THIS CARD DELETED BY APAR   @OZ20010 42842000
*                                  THIS CARD DELETED BY APAR   @OZ20010 42842500
*                                  THIS CARD DELETED BY APAR   @OZ20010 42843000
*                                  THIS CARD DELETED BY APAR   @OZ20010 42843500
*                                  THIS CARD DELETED BY APAR   @OZ20010 42844000
*                                  THIS CARD DELETED BY APAR   @OZ20010 42844500
*                                  THIS CARD DELETED BY APAR   @OZ20010 42845000
*                                  THIS CARD DELETED BY APAR   @OZ20010 42845500
*                                  THIS CARD DELETED BY APAR   @OZ20010 42846000
*                                  THIS CARD DELETED BY APAR   @OZ20010 42846500
*                                  THIS CARD DELETED BY APAR   @OZ20010 42847000
*                                  THIS CARD DELETED BY APAR   @OZ20010 42847500
*                                  THIS CARD DELETED BY APAR   @OZ20010 42848000
*                                  THIS CARD DELETED BY APAR   @OZ20010 42848500
*                                  THIS CARD DELETED BY APAR   @OZ20010 42849000
*                                  THIS CARD DELETED BY APAR   @OZ20010 42849500
*                                  THIS CARD DELETED BY APAR   @OZ20010 42850000
*                                  THIS CARD DELETED BY APAR   @OZ20010 42850500
*                                  THIS CARD DELETED BY APAR   @OZ20010 42851000
*                                  THIS CARD DELETED BY APAR   @OZ20010 42851500
                                   PRINT ON -- SECTION DELETED @OZ20010 42852000
         B     INITVAT             THEN BR TO NEXT SECTION           R4 42852500
         SPACE 1                                                     R4 42853000
         DROP  R1                  KILL JQB ADDRESSABILITY           R4 42853500
         EJECT                                                       R4 42854000
NJOTPRFX EQU   (JOTJOES-JOTDSECT)/JOESIZE                            R4 42854500
*                                  THIS CARD DELETED BY APAR   @OZ20010 42855000
*                                  THIS CARD DELETED BY APAR   @OZ20010 42855500
         SPACE 3                                                     R4 42856000
         LTORG                                                       R4 42856500
         TITLE 'HASP INITIALIZATION -- DIRECT ACCESS INITIALIZATION' R4 42857000
*********************************************************************** 42857500
*                                                                     * 42858000
*        CREATE VOLUME ALLOCATION TABLE                               * 42858500
*                                                                     * 42859000
*********************************************************************** 42859500
         SPACE 1                                                     R4 42860000
INITVAT  BALR  BASE2,0             RE-ESTABLISH                      R4 42860500
         USING *,BASE2,BASE3        LOCAL ADDRESSABILITY             R4 42861000
         SPACE 1                                                     R4 42861500
         LA    BASE3,2048(,BASE2)  PROVIDE SECOND                    R4 42862000
         LA    BASE3,2048(,BASE3)   BASE REGISTER                    R4 42862500
         SLR   R3,R3               OBTAIN                            R4 42863000
         IC    R3,$NUMDA            STORAGE                          R4 42863500
         LA    R3,1(,R3)             FOR                             R4 42864000
         MH    R3,=Y(NVLTBLN)         VOLUME                         R4 42864500
         LA    R0,NVLTBLN(,R3)         ALLOCATION                    R4 42865000
         GETMAIN R,LV=(0)               TABLE                        R4 42865500
         ST    R1,NVOLTABL         SET POINTER TO ALLOC'N TABLE      R4 42866000
         SLR   R15,R15             CLEAR                             R4 42866500
         LR    R2,R1                USABLE                           R4 42867000
         MVCL  R2,R14                ENTRIES                         R4 42867500
         MVI   NVLEND-NVLDSECT(R2),255  SET TERMINATOR               R4 42868000
         EJECT                                                       R4 42868500
*********************************************************************** 42869000
*                                                                     * 42869500
*        LOCATE SPOOL/CHECKPOINT VOLUMES                              * 42870000
*                                                                     * 42870500
*********************************************************************** 42871000
         SPACE 1                                                     R4 42871500
         CLI   $CHKPT,C' '         IF NO CHECKPOINT                  R4 42872000
         BNE   SKIP710              VOLUME DEFINED,                  R4 42872500
         MVC   $CHKPT,$SPOOL         SUPPLY DEFAULT                  R4 42873000
SKIP710  L     WA,CVTPTR           GET ADDRESS OF                    R4 42873500
         L     WA,CVTILK2-CVT(,WA)  UCB LOOK-UP TABLE                R4 42874000
         SH    WA,=H'2'              (LESS 2)                        R4 42874500
         LA    WC,2*NVLTBLN(,R1)   ENTRY FOR 1ST SECONDARY SPOOL VOL R4 42875000
         SLR   WB,WB               CLEAR FOR INSERTS                 R4 42875500
         SPACE 1                                                     R4 42876000
         USING UCBDSECT,WB         PROVIDE UCB ADDRESSABILITY        R4 42876500
         USING NVLDSECT,WD         PROVIDE ALLOC TBL ADDRESSABILITY  R4 42877000
         SPACE 1                                                     R4 42877500
NEXTUCB  LA    WA,2(,WA)           GET NEXT LOOK-UP TABLE ENTRY      R4 42878000
         ICM   WB,3,0(WA)          GET UCB ADDRESS                   R4 42878500
         BZ    NEXTUCB             IGNORE IF NULL ENTRY              R4 42879000
         CL    WB,=A(X'FFFF')      TEST UCB ADDRESS                  R4 42879500
         BE    NDACKPT             BR IF END OF UCBS                 R4 42880000
         CLI   UCBTBYT3,UCB3DACC   TEST DEVICE TYPE                  R4 42880500
         BNE   NEXTUCB             IGNORE IF NOT DIRECT ACCESS       R4 42881000
         CLC   $CHKPT,UCBVOLI      TEST VOLUME SERIAL NUMBER         R4 42881500
         BE    NUCBGOT             IGNORE IF NOT                    R41 42882000
         CLC   $SPOOL(5),UCBVOLI    CHECKPOINT OR                    R4 42882500
         BNE   NEXTUCB               SPOOL VOLUME                    R4 42883000
         EJECT                                                       R4 42883500
*********************************************************************** 42884000
*                                                                     * 42884500
*        ENSURE SPOOL/CHECKPOINT VOLUME IS UNIQUE                     * 42885000
*                                                                     * 42885500
*********************************************************************** 42886000
         SPACE 1                                                     R4 42886500
NUCBGOT  L     R15,CVTPTR            GET ADDRESS OF                 R41 42887000
         L     R15,CVTILK2-CVT(,R15)  UCB LOOK-UP TABLE              R4 42887500
         SH    R15,=H'2'               (LESS 2)                      R4 42888000
         SLR   R1,R1               CLEAR FOR INSERTS                 R4 42888500
         SPACE 1                                                     R4 42889000
NUCBNEXT LA    R15,2(,R15)         GET NEXT LOOK-UP TABLE ENTRY      R4 42889500
         ICM   R1,3,0(R15)         GET UCB ADDRESS                   R4 42890000
         BZ    NUCBNEXT            IGNORE IF NULL ENTRY              R4 42890500
         CLI   UCBTBYT3-UCBDSECT(R1),UCB3DACC  TEST DEVICE TYPE      R4 42891000
         BNE   NUCBNEXT            IGNORE IF NOT DIRECT ACCESS       R4 42891500
         CLC   UCBVOLI,UCBVOLI-UCBDSECT(R1)  TEST VOLUME SERIALS     R4 42892000
         BNE   NUCBNEXT            IGNORE IF DIFFERENT               R4 42892500
         CLR   R1,WB               TEST UCB ADDRESS                  R4 42893000
         BE    NUCBOK              BR IF SAME                        R4 42893500
         TM    $RUNOPTS,$DUPVOLT   TEST DUPLICATE VOL TEST OPTION    R4 42894000
         BZ    NDACKPT             EXIT LOOP IF NOT SELECTED         R4 42894500
         B     NDAERR1              ELSE ISSUE ERROR MSG AND QUIT    R4 42895000
         SPACE 1                                                     R4 42895500
NUCBOK   CLR   R15,WA              TEST LOOK-UP TABLE ADDRESSES      R4 42896000
         BNE   NEXTUCB             DUPL CHANNEL PATH IF DIFFERENT    R4 42896500
         EJECT                                                      R41 42897000
*********************************************************************** 42897500
*                                                                     * 42898000
*        UPDATE SPOOL/CHECKPOINT VOLUME ALLOCATION TABLE              * 42898500
*                                                                     * 42899000
*********************************************************************** 42899500
         SPACE 1                                                     R4 42900000
         L     WD,NVOLTABL         POINT TO 1ST ALLOC TABLE ENTRY    R4 42900500
         CLC   $CHKPT,UCBVOLI      TEST FOR CHECKPOINT VOLUME        R4 42901000
         BNE   NSPLUCB             BR IF NO                         R41 42901500
         ST    WB,NVLUCBPT          ELSE SET UCB ADDRESS            R41 42901600
         MVC   NVLVOLID,UCBVOLI      AND VOLUME SERIAL              R41 42901700
         CLC   $SPOOL(5),UCBVOLI   IS VOLUME ALSO A SPOOL...        R41 42901800
         BNE   NEXTUCB             BR IF NO                         R41 42901900
         SPACE 1                                                    R41 42902000
NSPLUCB  LA    WD,NVLTBLN(,WD)     POINT TO 2ND TABLE ENTRY         R41 42902100
         CLC   $SPOOL,UCBVOLI      TEST FOR PRIMARY SPOOL VOLUME     R4 42902500
         BE    NDAVUPDT            BR IF YES                         R4 42903000
         LR    WD,WC               POINT TO CURRENT TABLE ENTRY      R4 42903500
         CLI   NVLEND,255          ARE ENTRIES EXHAUSTED...          R4 42904000
         BE    NDAERR2             BR IF YES                         R4 42904500
         LA    WC,NVLTBLN(,WC)      ELSE REMEMBER NEXT ENTRY         R4 42905000
         SPACE 1                                                     R4 42905500
NDAVUPDT ST    WB,NVLUCBPT         SET UCB ADDRESS                   R4 42906000
         MVC   NVLVOLID,UCBVOLI    SET VOLUME SERIAL NUMBER          R4 42906500
         B     NEXTUCB             THEN BR TO TEST NEXT UCB          R4 42907000
         SPACE 1                                                     R4 42907500
NDAERR1  L     R1,=A(NDAEM1)       POINT TO MESSAGE TEXT             R4 42908000
         MVC   NDAVOL-NDAEM1(,R1),UCBVOLI  SET VOLUME SERIAL         R4 42908500
         B     NGKWIT              BR TO ISSUE MESSAGE AND QUIT      R4 42909000
         SPACE 1                                                     R4 42909500
         DROP  WB                  KILL UCB ADDRESSABILITY           R4 42910000
         EJECT                                                       R4 42910500
*********************************************************************** 42911000
*                                                                     * 42911500
*        ALLOCATE CHECKPOINT DATA SET (SYS1.HASPCKPT)                 * 42912000
*                                                                     * 42912500
*********************************************************************** 42913000
         SPACE 1                                                     R4 42913500
         USING QSEDSECT,R2         PROVIDE QSE ADDRESSABILITY  @OZ20010 42914000
         USING UCBDSECT,R3         PROVIDE UCB ADDRESSABILITY  @OZ20010 42914400
         USING SPLDSECT,WC         PROVIDE SPL ADDRESSABILITY        R4 42914500
         SPACE 1                                                     R4 42915000
NDACKPT  LA    R0,=CL8'HOSPOOL'        IDENTIFY                      R4 42915500
         L     R1,$HASPMAP              HOSPOOL                      R4 42916000
         L     R1,MAPSPLA-MAPDSECT(,R1)  SUBTASK                     R4 42916500
         IDENTIFY EPLOC=(0),ENTRY=(1)     ENTRY POINT                R4 42917000
         L     R2,$QSE1            POINT TO 1ST QSE            @OZ20010 42917400
         L     R1,=A(NS1)          POINT TO SYSTEM PARAMATER TABLE   R4 42917500
NDANEXT  CLI   L'NS1(R1),C' '      IS THIS THE LAST ENTRY           R41 42918000
         BE    NDALAST             BR IF YES                        R41 42918500
         AH    R2,$QSEL            POINT TO NEXT QSE           @OZ20010 42918600
         LA    R1,L'NS1(R1)        POINT TO NEXT ENTRY              R41 42918800
         B     NDANEXT             TEST NEXT ENTRY                  R41 42919000
NDALAST  OI    QSEFLAGS,QSELAST    MAKE QSE LAST                    R41 42919500
SKIP730  L     WD,NVOLTABL         POINT TO 1ST ALLOC TABLE ENTRY    R4 42920000
         MVC   NVLVOLID,$CHKPT     ENSURE CKPT VOL SER PRESENT       R4 42920500
         MVC   NVLVOLID+NVLTBLN,$SPOOL  ENSURE PRIMARY SPOOL VOL SER R4 42921000
         MVI   NVLFLAGS,SPL1CKPT+SPL1NFMT  SET REQUEST FLAGS         R4 42921500
         BAL   WE,NGSPLGET         OBTAIN CKPT VOL ALLOC'N WORK AREA R4 42922000
         BAL   WE,NGALLOC          ALLOCATE THE CHECKPOINT VOLUME    R4 42922500
         BAL   WE,NGWAIT           WAIT FOR ALLOCATION TO COMPLETE   R4 42923000
         BNZ   NGCKBAD             BR IF ANY ERRORS                  R4 42923500
         L     R3,SPLUCBPT         GET UCB ADDRESS             @OZ20010 42924000
         ST    R3,NVLUCBPT         ENSURE IN ALLOC'N TABLE     @OZ20010 42924500
         CLC   $CHKPT,$SPOOL       TEST FOR CKPT/PRIMARY SPOOL MATCH R4 42925000
         BNE   NGCKDEB             BR IF NO                          R4 42925500
         MVC   NVLTBLN(NVLTBLN,WD),0(WD)  FILL PRI SPOOL VOL ENTRY   R4 42926000
         MVI   NVLFLAGS+NVLTBLN,0  RESET REQUEST FLAGS               R4 42926500
         B     NGCKDEB             THEN BR TO SET CKPT DEB EXTENT    R4 42927000
         SPACE 1                                                     R4 42927500
         DROP  R2                                              @OZ20010 42927600
         SPACE 1                                                    R41 42927700
NGCKBAD  BAL   WE,NGDETACH         DETACH HOSPOOL, FREE WORK AREA    R4 42928000
         B     NGQUITT             BR TO ISSUE MESSAGE AND QUIT      R4 42928500
         SPACE 1                                               @OZ20010 42928700
         DROP  WD                  KILL ALLOC TBL BASE         @OZ20010 42928900
         EJECT                                                       R4 42929000
*********************************************************************** 42929500
*                                                                     * 42930000
*        CONSTRUCT CHECKPOINT DATA SET DEB                            * 42930500
*                                                                     * 42931000
*********************************************************************** 42931500
         SPACE 1                                                     R4 42932000
         USING DEBDSECT,R14        PROVIDE DEB ADDRESSABILITY        R4 42932500
         SPACE 1                                                     R4 42933000
NGCKDEB  L     R14,$DADEBAD        GET POINTER TO DA DEB             R4 42933500
         SLR   R1,R1               POINT                             R4 42934000
         IC    R1,$NUMDA            TO                               R4 42934500
         SLL   R1,4                  CHECKPOINT                      R4 42935000
         LA    R14,DEBBASND(R1)       EXTENT                         R4 42935500
         SPACE 1                                                     R4 42936000
         USING DEBDASD,R14         PROVIDE DEB EXTENT ADDRESSABILITY R4 42936500
         SPACE 1                                                     R4 42937000
         ST    R3,DEBUCBAD         SET UCB ADDRESS             @OZ20010 42937500
         MVC   DEBSTRCC(8),SPLSTRCC  SET CKPT VOL EXTENT LIMITS      R4 42938000
         MVC   DEBNMTRK,SPLNMTRK   SET NUMBER OF TRACKS IN EXTENT    R4 42938500
         MVC   NGCKNRT,SPLTNRT     SAVE NUMBER OF RECS/TRACK   @OZ20010 42939000
*                                  THIS CARD DELETED BY APAR   @OZ20010 42939500
         SPACE 1                                                     R4 42940000
         L     R1,$SSVT            GET SSVT ADDRESS                  R4 42940500
         L     R1,$SVRELSE-SSVT(,R1)  GET RELEASE SRB-IOSB ADDRESS   R4 42941000
         MODESET EXTKEY=ZERO       SET ZERO PROTECT KEY              R4 42941500
         ST    R3,IOSUCB-IOSB+SRBSIZE(,R1) SAVE CKPT VOL UCB   @OZ20010 42942000
         MODESET EXTKEY=HASP       RESTORE JES2 PROTECT KEY          R4 42942500
         MVC   NGWDBL,SPLSTRCC     SAVE EXTENT LIMITS          @OZ20010 42943000
         BAL   WE,NGDETACH         DETACH HOSPOOL, FREE WORK AREA    R4 42943500
         SPACE 1                                               @OZ20010 42943550
         DROP  WC                  RELEASE SPL ADDRESSABILITY  @OZ20010 42943600
         EJECT                                                 @OZ20010 42943650
***************************************************************@OZ20010 42943700
*                                                              @OZ20010 42943750
*        VERIFY CHECKPOINT DATA SET SPECIFICATIONS             @OZ20010 42943800
*                                                              @OZ20010 42943850
***************************************************************@OZ20010 42943900
         SPACE 1                                               @OZ20010 42943950
*        COMPUTE AND VALIDATE CHECKPOINT TRACK REQUIREMENT     @OZ20010 42944000
         SPACE 1                                               @OZ20010 42944050
         LH    WE,NGCKNRT          GET NO. OF RECORDS / TRACK  @OZ20010 42944100
         SLR   R0,R0               COMPUTE                     @OZ20010 42944150
         LH    R1,$JOBRECN          TRACK                      @OZ20010 42944200
         AH    R1,$JOTRECN           REQUIREMENT               @OZ20010 42944250
         ALR   R1,WE                  FOR JOB QUEUE  (ROUNDED  @OZ20010 42944300
         BCTR  R1,0                    AND JOT          UP)    @OZ20010 42944350
         DR    R0,WE                    RECORDS                @OZ20010 42944400
         LA    R1,1(,R1)           PLUS RECORD 1 TRACK         @OZ20010 42944450
         STH   R1,NGCKNTRK         SAVE TRACK REQUIREMENT      @OZ20010 42944500
         CH    R1,DEBNMTRK         TEST AGAINST CKPT EXTENTS.. @OZ20010 42944550
         BH    NGCSPECR            ... ERROR IF TO SMALL       @OZ20010 42944600
         SPACE 1                                               @OZ20010 42944650
         DROP  R14                 RELEASE DEB ADDRESSABILITY  @OZ20010 42944700
*                                  THIS CARD DELETED BY APAR   @OZ20010 42945000
         EJECT                                                       R4 42945500
*        DETERMINE MAXIMUM LENGTH OF CHECKPOINT RECORDS        @OZ20010 42946000
         SPACE 1                                                     R4 42946500
NGCKDCT  L     R10,CVTPTR             POINT TO DEVICE               R41 42947000
         L     R10,CVTZDTAB-CVT(,R10)  CHARACTERISTICS TABLE         R4 42947500
         SLR   R6,R6               GET DEVICE TYPE                   R4 42948000
         IC    R6,UCBTBYT4          FROM UCB                         R4 42948500
         SPACE 1                                                     R4 42949000
*                                  THIS CARD DELETED BY APAR   @OZ20010 42949500
         USING NGZ,R6              PROVIDE DEV TBL ADDRESSABILITY    R4 42950000
         SPACE 1                                                     R4 42950500
         IC    R6,0(R6,R10)        PICK UP OFFSET TO DESCRIPTION     R4 42951000
         ALR   R6,R10              POINT TO DEVICE DESCRIPTION ENTRY R4 42951500
         LH    R2,NGZR             GET MAXIMUM TRACK LENGTH             42952000
         LH    R1,NGZO             GET 2305 BLOCK OVERHEAD              42952500
         TM    NGZF,NGZF2305       IS THIS 2305                         42953000
         BO    *+10                SKIP NEXT IF YES                     42953500
         SLR   R1,R1               ZERO REGISTER                        42954000
         IC    R1,NGZL             GET BLOCK OVERHEAD LAST RECORD       42954500
         SLR   R0,R0               ZERO REGISTER                        42955000
         IC    R0,NGZU             GET CREDIT FOR NO KEYS               42955500
         SR    R2,R1               L=MAXRSIZ-BLOCK OVERHEAD (KEYED)     42956000
         AR    R2,R0               L=L(OLD)+CREDIT FOR NO KEY  @OZ20010 42956100
         SPACE 1                                               @OZ20010 42956150
*        VERIFY TRACK SIZE ADEQUATE FOR CHECKPOINT RECORD 1    @OZ20010 42956200
         SPACE 1                                               @OZ20010 42956300
         C     R2,$CKPTR1L         WILL RECORD 1 FIT ON TRK... @OZ20010 42956400
         BNL   NGCKCWI             BRANCH IF YES (OK)          @OZ20010 42956500
         SPACE 2                                               @OZ20010 42956600
*        CHECKPOINT DATA SET SPECIFICATION ERROR               @OZ20010 42956700
         SPACE 1                                               @OZ20010 42956800
NGCSPECR L     R1,=A(NSPECMSG)     PICK UP ADDRESS OF MESSAGE  @OZ20010 42956900
         B     NGKWIT               EXIT INIT WITH MESSAGE     @OZ20010 42957000
         TITLE 'HASP INITIALIZATION -- BUILD INITIALIZATION CCWS'       42957100
***************************************************************@OZ20010 42957200
*                                                              @OZ20010 42957300
*        SET UP INITIALIZATION CCWS IN JQB                     @OZ20010 42957400
*                                                              @OZ20010 42957500
***************************************************************@OZ20010 42957600
         SPACE 1                                               @OZ20010 42957700
         USING JQBCCWE,R1          CCW PACKET ADDRESSABILITY   @OZ20010 42957800
         SPACE 2                                               @OZ20010 42957900
NGCKCWI  L     R10,$CKPTIOB        ESTABLISH TEMPORARY         @OZ20010 42958000
         USING JQBDSECT,R10         JQB ADDRESSABILITY         @OZ20010 42958100
         MVC   JQBSEEK(1),$NUMDA   SET UP JQB SEEK             @OZ20010 42958200
         MVC   JQBSEEK+3(4),NGWDBL  ADDRESS (MBBCCHHR)         @0Z20010 42958300
         LA    R1,JQBCCWS          PICK UP 1ST CCW ADDRESS     @OZ20010 42958400
         DROP  R10                 KILL TEMP. ADDRESSABILITY   @OZ20010 42958500
         SPACE 2                                               @OZ20010 42958600
*        BUILD CCW PACKET FOR CHECKPOINT RECORD 1              @OZ20010 42958700
         SPACE 1                                               @OZ20010 42958800
         MVI   NGWDBL+4,1          SET TO RECORD NO. 1         @OZ20010 42958900
         MVC   JQBCCHH0(4),NGWDBL  PLACE TRACK AND             @OZ20010 42959000
         MVC   JQBCCHHR(5),NGWDBL   RECORD ADDR IN CCW AREA    @OZ20010 42959100
         SPACE 1                                               @OZ20010 42959200
         BAL   R14,NGCKFMC2        INITIALIZE RECORD 1 CCWS    @OZ20010 42959300
         SPACE 1                                               @OZ20010 42959400
         LA    R14,JQBCNEXT        ADJUST                      @OZ20010 42959500
         STCM  R14,7,JQBCCW6+5      TIC CCW                    @OZ20010 42959600
         LRA   R14,0(,R14)           TO POINT TO               @OZ20010 42959700
         STCM  R14,7,JQBCCW6+1        NEXT TRACK'S SEEK        @OZ20010 42959800
         L     R0,$CKPTR1L         PICK UP LENGTH OF RECORD 1  @OZ20010 42959900
         STH   R0,JQBCCW5+6         STORE LENGTH IN CCW        @OZ20010 42960000
         STH   R0,JQBCCHHR+6         AND COUNT FIELD           @OZ20010 42960100
         LA    R2,JQBIDAWS-JQBDSECT(,R10) STORE                @OZ20010 42960200
         LRA   R14,0(,R2)                  REAL ADDRESS OF     @OZ20010 42960300
         STCM  R14,7,JQBCCW5+1              IDAWS IN READ CCW  @OZ20010 42960400
         OI    JQBCCW5+4,X'04'        AND SET CCW FOR IDA      @OZ20010 42960500
         L     R10,$CKPTR1         PICK UP READ AREA ADDRESS   @OZ20010 42960600
NGCKCWIL LRA   R14,0(,R10)         GET REAL ADDRESS OF AREA    @OZ20010 42960700
         ST    R14,0(,R2)          STORE IT IN IDAW            @OZ20010 42960800
         LA    R10,2048(,R10)      BUMP TO NEXT                @OZ20010 42960900
         SH    R0,=H'2048'          2K BLOCK                   @OZ20010 42961000
         LA    R2,4(,R2)             AND NEW IDAW              @OZ20010 42961100
         BP    NGCKCWIL            LOOP TILL ALL DATA ADDRESSD @OZ20010 42961200
         EJECT                                                 @OZ20010 42961300
*        BUILD CCW PACKETS FOR JOB QUEUE AND JOT RECORDS       @OZ20010 42961400
         SPACE 1                                               @OZ20010 42961500
         LH    R7,$JOBRECN         COMPUTE TOTAL CCW AREAS     @OZ20010 42961600
         AH    R7,$JOTRECN          TO INITIALIZE              @OZ20010 42961700
         L     R10,$JOBQPTR        PICK UP JOB QUEUE ADDRESS   @OZ20010 42961800
         B     NGCKCWIT            DO JQES & JOES ON NXT TRACK @OZ20010 42961900
         SPACE 1                                               @OZ20010 42962000
NGCKCWIK SLR   R14,R14             PICK UP                     @OZ20010 42962100
         IC    R14,NGWDBL+4         CURRENT RECORD NUMBER      @OZ20010 42962200
         LA    R14,1(,R14)           INCREMENT                 @OZ20010 42962300
         CH    R14,NGCKNRT         TEST FOR STILL ON TRACK     @OZ20010 42962400
         BNH   NGCKCWIX            BRANCH IF YES               @OZ20010 42962500
NGCKCWIT LA    R14,1               PICK UP ADDRESS             @OZ20010 42962600
         AL    R14,NGWDBL           OF NEXT HEAD        (CCHH) @OZ20010 42962700
         CLM   R14,B'0011',NGZH     TEST FOR CYLINDER BOUNDARY @OZ20010 42962800
         BL    NGCKCWIY              BRANCH IF NOT             @OZ20010 42962900
         LH    R14,NGWDBL          PICK UP CYLINDER NO. (00CC) @OZ20010 42963000
         LA    R14,1(,R14)          INCREMENT                  @OZ20010 42963100
         SLL   R14,16                RESET HEAD         (CC00) @OZ20010 42963200
NGCKCWIY ST    R14,NGWDBL          REPLACE TRACK ADDRESS       @OZ20010 42963300
         LA    R14,1               RESET RECORD NUMBER         @OZ20010 42963400
NGCKCWIX STC   R14,NGWDBL+4        REPLACE RECORD NUMBER       @OZ20010 42963500
         LA    R1,JQBCNEXT         BUMP TO NEXT CCW AREA       @OZ20010 42963600
         MVC   JQBCCHH0(4),NGWDBL  STORE TRACK AND             @OZ20010 42963700
         MVC   JQBCCHHR(5),NGWDBL   RECORD ADDRESS IN CCW AREA @OZ20010 42963800
         SPACE 1                                               @OZ20010 42963900
         BAL   R14,NGCKFMC2        INITIALIZE CCWS             @OZ20010 42964000
         SPACE 1                                               @OZ20010 42964100
         LRA   R14,0(,R10)         STORE REAL ADDRESS OF AREA  @OZ20010 42964200
         STCM  R14,7,JQBCCW5+1      IN READ DATA CCW           @OZ20010 42964300
         SPACE 1                                               @OZ20010 42964400
         LA    R10,2048(,R10)      BUMP TO NEXT                @OZ20010 42964500
         LA    R10,2048(,R10)       DATA AREA PAGE             @OZ20010 42964600
         BCT   R7,NGCKCWIK         LOOP TILL ALL CCWS BUILT    @OZ20010 42964700
         MVC   JQBCCW6,NGCKPNOP    TERMINATE CCW CHAIN W / NOP @OZ20010 42964800
         SPACE 1                                               @OZ20010 42964900
         DROP  R6                  KILL DEV TBL ADDRESSABILITY @OZ20010 42965000
                                   PRINT OFF - SECTION DELETED @OZ20010 42965500
*                                  THIS CARD DELETED BY APAR   @OZ20010 42966000
*                                  THIS CARD DELETED BY APAR   @OZ20010 42966500
*                                  THIS CARD DELETED BY APAR   @OZ20010 42967000
*                                  THIS CARD DELETED BY APAR   @OZ20010 42967500
*                                  THIS CARD DELETED BY APAR   @OZ20010 42968000
*                                  THIS CARD DELETED BY APAR   @OZ20010 42968500
*                                  THIS CARD DELETED BY APAR   @OZ20010 42969000
                                   PRINT ON -- SECTION DELETED @OZ20010 42969500
         TITLE 'HASP INITIALIZATION -- DIRECT ACCESS INITIALIZATION ENVC42970000
               IRONMENT DETERMINATION'                               R4 42970500
*********************************************************************** 42971000
*                                                                     * 42971500
*         E N V I R O N M E N T   D E T E R M I N A T I O N           * 42972000
*                                                                     * 42972500
*********************************************************************** 42973000
         SPACE 1                                               @OZ20010 42973100
         USING JQBDSECT,R10        JQB ADDRESSABILITY          @OZ20010 42973200
         SPACE 1                                               @OZ20010 42973300
*                                                                     * 42973500
*        DETERMINE IF READABLE CHECKPOINT FILE EXISTS                 * 42974000
*                                                                     * 42974500
NVIRON   STCK  $SIDTIME            OBTAIN CURRENT TIME-OF-DAY        R4 42975000
         L     R10,$CKPTIOB        LOCATE JQB AND              @OZ20010 42975500
         MVI   JQBCCWS+JQBCCW5-JQBCCWE+4,X'34' SET 1ST CCW     @OZ20010C42976000
                                           TO SKIP-READ        @OZ20010 42976500
                                   PRINT OFF - SECTION DELETED @OZ20010 42977000
*                                  THIS CARD DELETED BY APAR   @OZ20010 42977500
*                                  THIS CARD DELETED BY APAR   @OZ20010 42978000
*                                  THIS CARD DELETED BY APAR   @OZ20010 42978500
*                                  THIS CARD DELETED BY APAR   @OZ20010 42979000
                                   PRINT ON -- SECTION DELETED @OZ20010 42979500
         SPACE 1                                               @OZ20010 42980000
        $GETLOK                                                         42980500
         MODESET EXTKEY=ZERO                                            42981000
         IC    R1,UCBSQC                GET RESERVE COUNT      @OZ20010 42981500
         LA    R1,1(,R1)                INCREMENT BY ONE                42982000
         STC   R1,UCBSQC                STORE BACK IN UCB      @OZ20010 42982500
         L     R1,$SSVT            POINT TO SSVT                        42983000
         USING SSVT,R1                                                  42983500
         OI    $SVSTUS,$SVSTIRV    SET CHECKPOINT RESERVE COUNT BIT     42984000
         DROP  R1                                                       42984500
        $FRELOK                                                         42985000
         SPACE 1                                               @OZ20010 42985200
         BAL   R14,NGEXCP          FORCE RESERVE ON CKPT VOLUME      R4 42985500
         BZ    NFCKPTOK            BR IF SUCCESSFUL                  R4 42986000
         TM    $OPTSTAT,$OPTCOLD+$OPTFMT  TEST FOR COLD/FORMAT START R4 42986500
         BZ    NGT020              BR IF NO TO DENY REQUEST          R4 42987000
         B     NFCKPNOK             ELSE GO COLD START         @OZ20010 42987100
         SPACE 1                                               @OZ20010 42987200
         DROP  R3                  RELEASE UCB ADDRESSABILITY  @OZ20010 42987300
         EJECT                                                       R4 42987500
*                                                                       42988000
*        DETERMINE IF THE FILE CONTAINS HASP CHECKPOINT RECORDS         42988500
*                                                                       42989000
         SPACE 1                                                     R4 42989500
NFCKPTOK DS    0H                  SET CCW CHAIN TO READ 1ST   @OZ20010 42990000
         MVI   JQBCCWS+JQBCCW5-JQBCCWE+4,X'24'  RECORD         @OZ20010 42990500
         SPACE 1                                               @OZ20010 42990700
         LH    R1,$QSEL                   COMPUTE              @OZ20010 42990900
         MH    R1,$QSENO                   LENGTH              @OZ20010 42991000
         LA    R1,$SAVELEN(,R1)             FOR READ           @OZ20010 42991200
         STH   R1,JQBCCWS+JQBCCW5-JQBCCWE+6  AND STORE IN CCW  @OZ20010 42991400
         SPACE 2                                               @OZ20010 42991500
                                   PRINT OFF - SECTION DELETED @OZ20010 42992000
*                                  THIS CARD DELETED BY APAR   @OZ20010 42992500
                                   PRINT ON -- SECTION DELETED @OZ20010 42993000
         BAL   R14,NGEXCP          READ 1ST CHECKPOINT RECORD        R4 42993500
         SPACE 1                                               @OZ20010 42993550
         USING JQBCCWE,R1        TEMP. CCW ADDRESSABILITY      @OZ20010 42993600
NFCKPNOK LA    R1,JQBCCWS        LOCATE CCW CHAIN              @OZ20010 42993650
         MVI   JQBCCW5+4,X'44'    AND RESET                    @OZ20010 42993700
         L     R0,$CKPTR1L         TO READ                     @OZ20010 42993750
         STH   R0,JQBCCW5+6         ENTIRE CHECKPOINT          @OZ20010 42993800
         DROP  R1                KILL TEMP. CCW ADDRESSABILITY @OZ20010 42993850
         SPACE 1                                               @OZ20010 42993900
         CLI   NGECB,X'7F'       TEST I/O COMPLETION STATUS    @OZ20010 42993950
         BNE   NGTEST            BRANCH IF I/O ERROR           @OZ20010 42994000
         SPACE 1                                               @OZ20010 42994050
*                                                                       42994500
*        CONFIRM THAT SUFFICIENT DATA WAS READ TO POTENTIALLY           42995000
*        REPRESENT A HASP CHECKPOINT RECORD.                            42995500
*                                                                       42996000
*                                  THIS CARD DELETED BY APAR   @OZ20010 42996500
*                                  THIS CARD DELETED BY APAR   @OZ20010 42997000
         OC    JQBCSW+6(2),JQBCSW+6  TEST CSW RESIDUAL COUNT         R4 42997500
         BNZ   NGTEST              BR IF LENGTH ERROR INDICATED      R4 42998000
*                                                                       42998500
*        CONFIRM THE EXISTENCE OF A HASP CHECKPOINT RECORD     @OZ20010 42999000
*                                                                       42999500
         L     R1,$CKPTR1          POINT TO HCT VARIABLES      @OZ20010 43000000
         CLC   $HASPID,$HASPID-$SAVEBEG(R1)  Q.  IF -JES2-           R4 43000500
         BNE   NGTEST              BR. IF NO -- TEST START REQUEST      43001000
         EJECT                                                 @OZ20010 43001100
*                                                              @OZ20010 43001200
*        CHECK FOR OTHER ACTIVE SYSTEMS                        @OZ20010 43001400
*                                                              @OZ20010 43001500
         SPACE 1                                               @OZ20010 43001700
         MVI   $ESYSQSE,X'80'      ASSUME SINGLE SYSTEM WARM START   R4 43002000
         L     R2,$SSVT            POINT TO SSVT                    R41 43002100
         TM    $SVHASP-SSVT(R2),X'80'  TEST FOR JES2 RESTART        R41 43002200
         BO    NFSYSACT                BR IF YES                    R41 43002300
         L     R0,$SIDTIME         LOAD FIRST WORD (SECONDS)            43002500
         SL    R0,$SYNCTOL         MINUS SYNCHRONIZATION TOLERANCE   R4 43003000
         L     R1,$QSE1            LOCATE FIRST QSE                  R4 43003500
         LH    R2,$QSENO           PICK UP NUMBER OF SYSTEMS   @OZ20010 43003750
         LH    R3,$QSEL            GET QSE LENGTH                    R4 43004000
         USING QSEDSECT,R1                                              43004500
NFQSETST TM    QSESTAT,QSEACTIV    TEST FOR ACTIVE SYSTEM            R4 43005000
         BZ    SKIP750             BR IF NO                          R4 43005500
         CL    R0,QSESITIM         TEST AGE OF CHECKPOINT DATA       R4 43006000
         BNH   NFSYSACT            BR. IF SYSTEM NOT DORMANT            43006500
SKIP750  TM    QSEFLAGS,QSELAST    Q. IF LAST QSE                       43007000
         BNZ   NFQSENAC            BR IF YES, VERIFY SYS RESET @OZ20010 43007500
         ALR   R1,R3               STEP TO NEXT QSE            @OZ20010 43007600
         BCT   R2,NFQSETST         CHECK ALL KNOWN SYSTEMS     @OZ20010 43007700
         B     NFSYSACT            ASSUME UNKNOWN SYSTEM ACTIVE@OZ20010 43008000
         EJECT                                                       R4 43008500
*                                                                       43009000
*        NO SYSTEM SHARING THE CHECKPOINT FILE IS ACTIVE.               43009500
*                                                                       43010000
NFQSENAC L     R1,$QSE1            LOCATE FIRST QSE            @OZ20010 43010500
         TM    QSEFLAGS,QSELAST    Q. IF NO SHARED SYSTEM               43011000
         BO    NFQSEONE            BR. IF YES - BYPASS CONFIRMATION     43011500
*                                                                       43012000
*        FORCE THE OPERATOR TO CONFIRM THAT ALL SYSTEMS                 43012500
*        SHARING THE CHECKPOINT FILE ARE DORMANT.                       43013000
*                                                                       43013500
         L     R2,=A(NMSG419)      POINT TO WTOR MESSAGE TEXT           43016500
NFQSEMSG TM    QSESTAT,QSEACTIV    TEST FOR ACTIVE SYSTEM            R4 43017000
         BZ    NFQSENXT            BR IF NO                          R4 43017500
         CLC   QSESID,$SID         TEST FOR THIS SYSTEM              R4 43018000
         BE    NFQSENXT            BR IF YES                         R4 43018500
         MVC   NMSG419A-NMSG419+1(,R2),QSESID   PUT CPU ID IN MSG.      43019000
         LA    R2,5(,R2)           STEP TO NEXT MESSAGE SLOT            43019500
NFQSENXT TM    QSEFLAGS,QSELAST    TEST FOR LAST QSE                 R4 43020000
         LA    R1,0(R3,R1)         STEP TO NEXT QSE                  R4 43020500
         BZ    NFQSEMSG            BR. IF NOT AT END OF QSE ELEMENTS    43021000
         CL    R2,=A(NMSG419)      TEST FOR ACTIVE SYSTEM(S)         R4 43021500
         BE    NFQSEONE            BR IF NO                          R4 43022000
         MVI   NMSG419A-NMSG419(R2),C'.'    SET PERIOD AT END OF MSG    43022500
         L     R1,=A(NMSG419)      POINT TO WTOR MESSAGE TEXT           43023000
         LA    R2,NMSG419A-(NMSG419+7)(,R2) STEP TO END OF MESSAGE      43023500
         SLR   R2,R1               COMPUTE MESSAGE LENGTH               43024000
         STH   R2,8(,R1)           STORE INTO WTOR MESSAGE HEADER       43024500
         L     WA,=A(NMSG419)      POINT TO 'CONFIRM RESET' MSG     R41 43025000
         BAL   WE,NGWTOR           QUERY OPERATOR                   R41 43025500
         BNE   NFSYSACT            BR IF REPLY 'NO'                 R41 43026000
         SPACE 1                                                    R41 43026500
NFQSEONE TM    $OPTSTAT,$OPTCOLD+$OPTFMT  Q. IF COLD OR FORMAT REQ.     43030000
         BNZ   NGCOLD              BR. IF YES                           43030500
         TITLE 'HASP INITIALIZATION -- DIRECT ACCESS INITIALIZATION FORC43031000
                WARM START'                                          R4 43031500
*********************************************************************** 43032000
*                                                                     * 43032500
*                     W A R M   S T A R T                             * 43033000
*                                                                     * 43033500
*********************************************************************** 43034000
*                                                                     * 43034500
*        A WARM START AT THIS POINT IS A COMPLEX WARM START AND       * 43035000
*        WILL RESULT IN A TRACK GROUP BIT MAP RECONSTRUCTION.         * 43035500
*                                                                     * 43036000
         MVI   $ESYSQSE,X'00'      NOTE COMPLEX WARM START              43036500
*                                                                       43037000
*        ENTRY AT THIS POINT WILL WARM START A SINGLE SYSTEM WHILE      43037500
*        OTHER ACTIVE SYSTEMS ARE SHARING THE CHECKPOINT FILE           43038000
*                                                                       43038500
NFSYSACT TM    $OPTSTAT,$OPTCOLD+$OPTFMT  COLD/FORMAT START...      R41 43039000
         BNZ   NGT040              BR IF YES                        R41 43039500
         L     R1,$QSE1            LOCATE 1ST QSE                   R41 43040000
         LH    R4,$QSEL            GET QSE LENGTH                   R41 43040500
         L     R2,=A(NS1)          LOCATE SYSTEM PARAMETER TABLE    R41 43041000
         SPACE 1                                                        43043500
NFSYSCHK CLC   $SID,QSESID         Q. IF QSE SID MATCHES SMF SID        43044000
         BNE   *+6                 BR. IF NO                            43044500
         LR    R3,R1               SAVE QSE ADDRESS FOR THIS SYSTEM     43045000
         CLC   QSESID,0(R2)        Q. QSE MATCHES PARAMETER TABLE       43045500
         BNE   NFSYSERR            BR. IF NO -- TELL OPERATOR           43046000
         LA    R2,L'NS1(,R2)       STEP TO NEXT PARAMETER TABLE SLOT    43046500
         TM    QSEFLAGS,QSELAST    Q. IF AT LAST QSE                    43047000
         LA    R1,0(R4,R1)         STEP TO NEXT QSE                  R4 43047500
         BZ    NFSYSCHK            CONTINUE TO CHECK IF NOT AT END      43048000
         LR    R1,R3               RESTORE QSE ADDR FOR THIS SYSTEM     43048500
         CLI   0(R2),C' '          Q. IF AT END OF PARAMETER TABLE      43049000
         BE    NFSYSQSE            BR. IF YES -- CONTINUE WARM START    43049500
         SPACE 1                                                    R41 43049600
NFSYSERR L     R1,=A(NVALMSG)      POINT TO WTO MESSAGE TEXT            43050000
         B     NGKWIT              BR. TO TELL OPERATOR AND QUIT        43050500
         EJECT                                                      R41 43051000
NFSYSQSE STCK  $SIDTIME            OBTAIN CURRENT TIME OF DAY           43051500
         TM    QSESTAT,QSEACTIV    TEST FOR ACTIVE SYSTEM            R4 43052000
         BZ    NFSYSQOK            BR IF NO                          R4 43052500
         L     R0,$SIDTIME         LOAD FIRST WORD (SECONDS)            43053000
         SL    R0,$SYNCTOL         MINUS SYNCHRONIZATION TOLERANCE   R4 43053500
         CL    R0,QSESITIM         Q. IF THIS SYSTEM IS ACTIVE          43054000
         BH    NFSYSQOK            BR. IF NO -- CONTINUE WARM START     43054500
         L     R1,$QSE1            LOCATE FIRST QSE                  R4 43055000
         TM    QSEFLAGS,QSELAST    Q. IF SINGLE SYSTEM IN COMPLEX       43055500
         BO    NFSYSQOK            BR. IF YES -- CONTINUE WARM START    43056000
         L     R2,$SSVT            POINT TO SSVT                    R41 43056100
         TM    $SVHASP-SSVT(R2),X'80'  TEST FOR JES2 RESTART        R41 43056200
         BO    NFSYSQOK                BR IF YES                    R41 43056300
         L     R1,=A(NDORMMSG)     POINT TO 'NOT DORMANT' MSG       R41 43056400
         MVC   NDORMTYP-NDORMMSG(,R1),=C'SYSTEM '  INDICATE SYSTEM  R41 43056500
        $$WTO  (R1)                TELL OPERATOR SYSTEM NOT DORMANT R41 43056600
         L     WA,=A(NRESUMSG)     POINT TO 'CONTINUE' MSG          R41 43056700
         MVC   NRESUMST-NRESUMSG(,WA),=C'WARM'  INDICATE WARM START R41 43056800
         BAL   WE,NGWTOR           QUERY OPERATOR                   R41 43056900
         BNE   NGQUITT             QUIT IF CANNOT WARM START        R41 43057000
         SPACE 1                                               @OZ18412 43057100
         EJECT                                                       R4 43057500
NFSYSQOK TM    $ESYSQSE,X'80'      Q. IF COMPLEX WARM START             43058000
         BZ    *+8                 BR. IF YES                           43058500
         ST    R3,$ESYSQSE         SET QSE ADDR OF THIS SYSTEM @OZ18412 43059000
         ST    R3,$AQSE            SET QSE ADDR OF THIS SYSTEM @OZ18412 43059500
         SL    R3,$CKPTR1          STORE ADDR OF THIS          @OZ20010 43059600
         AL    R3,$CKPR1RD          SYSTEM'S QSE IN THE        @OZ20010 43059700
         ST    R3,$RQSE              CKPT READ-IN AREA         @OZ20010 43059800
         SPACE 1                                                     R4 43060000
*********************************************************************** 43060500
*                                                                     * 43061000
*        ENSURE THAT CHECKPOINT VERIFICATION FIELDS ARE VALID         * 43061500
*                                                                     * 43062000
*********************************************************************** 43062500
         SPACE 1                                                     R4 43063000
         L     WF,$CKPTR1          POINT TO HCT VARIABLES      @OZ20010 43063500
*                                  THIS CARD DELETED BY APAR   @OZ20010 43064000
         CLC   $PARMVER,$PARMVER-$SAVEBEG(WF)  TEST NEW PARMS        R4 43064500
         BE    NFSYSPOK            BR IF VALID PARAMETERS            R4 43065000
         LA    R2,NUMPARMS+1-3     SET INITIAL PARAMETER COUNT       R4 43065500
         LA    R3,2                SET PARM COUNT FOR REST OF LINE  R41 43065600
         L     R4,=A(NMSGPRMS)     POINT TO PARM AREA OF MESSAGE     R4 43066000
         LA    R5,NOLDPRMS         POINT TO TABLE OF REQUIRED PARMS  R4 43066500
         MVC   15(6,R4),$SPOOL-$SAVEBEG(WF)  SET 1ST PARM IN 1ST LN  R4 43067000
         CLC   $SPOOL,15(R4)       WAS PARM VALUE VALID...           R4 43067500
         BE    NEXTPARM            BR IF YES                        R41 43068000
         MVI   21(R4),C'*'          ELSE INDICATE INVALID            R4 43068500
         SPACE 1                                                     R4 43069500
NEXTPARM LA    R4,21(,R4)          POINT TO NEXT PARM SLOT IN LINE   R4 43070000
         MVC   4(8,R4),6(R5)       SET PARM KEYWORD                  R4 43070500
         MVC   12(9,R4),NPARMASK   SET MASK FOR PARM VALUE EDIT      R4 43071000
         SLR   R1,R1               CLEAR IN CASE OF INSERT           R4 43071500
         MVI   XVALLOAD,X'43'      SET                               R4 43072000
         CLI   1(R5),1              UP                               R4 43072500
         BL    SKIP770               APPROPRIATE                     R4 43073000
         MVI   XVALLOAD,X'48'         REGISTER                       R4 43073500
         BE    SKIP770                 LOAD                          R4 43074000
         MVI   XVALLOAD,X'58'           INSTRUCTION                  R4 43074500
SKIP770  MVC   XVALLOAD+2(2),4(R5) SET TARGET OF LOAD                R4 43075000
XVALLOAD IC    R1,*-*              GET PARM VALUE IN R1              R4 43075500
         CVD   R1,NGWDBL           SET PARM VALUE                    R4 43076000
         ED    15(6,R4),NGWDBL+5    IN MESSAGE                       R4 43076500
         EX    R0,0(,R5)           WAS PARM VALUE VALID...           R4 43077000
         BE    SKIP780             BR IF YES                         R4 43077500
         MVI   21(R4),C'*'          ELSE INDICATE INVALID            R4 43078000
SKIP780  LA    R5,14(,R5)          POINT TO NEXT PARM IN TABLE       R4 43078500
         BCT   R3,NEXTPARM         LOOP THRU LINE                    R4 43079000
         SPACE 1                                                     R4 43079500
         LA    R4,1(,R4)           ADJUST FOR END OF LINE      @OZ18405 43079600
         LA    R3,3                SET FULL LINE PARM COUNT          R4 43080000
         SR    R2,R3               REDUCE COUNT OF PARMS REMAINING   R4 43080500
         BNM   NEXTPARM            BR IF ENOUGH FOR FULL LINE        R4 43081000
         AR    R3,R2               GET SHORT LINE PARM COUNT         R4 43081500
         BP    NEXTPARM            BR IF 1ST TIME THRU HERE          R4 43082000
         L     R1,=A(NPARAMSG)     POINT TO MESSAGE TEXT             R4 43082500
         B     NGKWIT              BR TO ISSUE MESSAGE AND QUIT      R4 43083000
         EJECT                                                       R4 43083500
*********************************************************************** 43084000
*                                                                     * 43084500
*        READ IN ENTIRE JOB QUEUE AND JOT                             * 43085000
*                                                                     * 43085500
*********************************************************************** 43086000
         SPACE 1                                                     R4 43086500
NFSYSPOK MVC   $SAVEBEG($SAVELEN),0(WF)  SAVE HCT VARIABLES          R4 43087000
         BAL   R14,NGEXCP          ISSUE EXCP                  @OZ20010 43087500
*                                  THIS CARD DELETED BY APAR   @OZ20010 43088000
         BNZ   NGCKMSGR            BR IF I/O ERROR                   R4 43088500
         SPACE 1                                               @OZ20010 43088700
         OC    $ESYSQSE,$ESYSQSE   TEST FOR NODAL WARM START         R4 43089000
         BNZ   NGW020              BR IF NO                          R4 43089500
         L     R0,$TGMAP           CLEAR                             R4 43090000
         L     R1,$CYLMAPL          MASTER                           R4 43090500
         SLR   R15,R15               TRACK GROUP                     R4 43091000
         MVCL  R0,R14                 BIT MAP                        R4 43091500
         DROP  R10                 RELEASE JQB ADDRESSABILITY  @OZ20010 43091700
         EJECT                                                       R4 43092000
*********************************************************************** 43092500
*                                                                     * 43093000
*        ENSURE THAT ALL FORMERLY MOUNTED SPOOL VOLUMES ARE NOW       * 43093500
*        MOUNTED ON THE PROPER DEVICES AND THAT EACH HAS THE SAME     * 43094000
*        EXTENT LIMITS AS BEFORE                                      * 43094500
*                                                                     * 43095000
*********************************************************************** 43095500
         SPACE 1                                               @OZ20010 43095600
         USING NVLDSECT,WD         ALLOC TABLE ADDRESSABILITY  @OZ20010 43095700
         USING SPLDSECT,WC         SPOOL ALLOC ADDRESSABILITY  @OZ20010 43095800
         SPACE 1                                                     R4 43096000
NGW020   SLR   WF,WF               INITIAL RELATIVE $DACKPT ENTRY    R4 43096500
         SPACE 1                                                     R4 43097000
NGW040   L     R1,$DACKPT          GET NEXT                          R4 43097500
         LR    WB,WF                OLD                              R4 43098000
         MH    WB,=H'6'              DISK                            R4 43098500
         LH    WB,0(WB,R1)            DESCRIPTOR                     R4 43099000
         LTR   WB,WB               TEST ENTRY                        R4 43099500
         BZ    NGW220              IGNORE IF NULL                    R4 43100000
         L     WD,NVOLTABL          ELSE PREPARE TO SCAN ALLOC TBL   R4 43100500
         SPACE 1                                                     R4 43101000
NGW060   LA    WD,NVLTBLN(,WD)     POINT TO NEXT ALLOC TBL ENTRY     R4 43101500
         CLM   WB,1,NVLVOLID+5     TEST VOLUME SERIAL                R4 43102000
         BE    NGW080              BR IF MATCHING                    R4 43102500
         TM    NVLEND,255          TEST FOR EMPTY/LAST ENTRY         R4 43103000
         BM    NGW060              LOOP IF NO                        R4 43103500
         SPACE 1                                                     R4 43104000
         BO    NDAERR2             BR IF ENTRIES EXHAUSTED           R4 43104500
         MVC   NVLVOLID,$SPOOL     SET VOLUME                        R4 43105000
         STC   WB,NVLVOLID+5        SERIAL NUMBER                    R4 43105500
         MVI   NVLFLAGS,SPL1NFMT   SET REQUEST FLAGS                 R4 43106000
         BAL   WE,NGSPLGET         OBTAIN SPOOL VOL ALLOC WORK AREA  R4 43106500
         ICM   WB,4,=AL1(UCB3DACC) INDICATE DIRECT ACCESS            R4 43107000
         LOAD  EP=DEVNAMET         GET DEVICE NAME TABLE             R4 43107500
         LR    WE,R0               MAKE ADDRESSABLE                  R4 43108000
         L     WA,0(,WE)           GET ENTRIES IN TABLE              R4 43108500
         LA    WE,4(,WE)           POINT TO 1ST TABLE ENTRY          R4 43109000
         SPACE 1                                                     R4 43109500
SKIP790  CLM   WB,6,10(WE)         TEST FOR MATCH                    R4 43110000
         BE    *+12                BR IF YES                         R4 43110500
         LA    WE,12(,WE)           ELSE POINT TO NEXT ENTRY         R4 43111000
         BCT   WA,SKIP790            AND BR TO TEST IT               R4 43111500
         SPACE 1                                                     R4 43112000
         DELETE EP=DEVNAMET        DELETE DEVICE NAME TABLE          R4 43112500
         LTR   WA,WA               TEST ENTRY COUNT                  R4 43113000
         BNZ   NGW070              BR IF ENTRY LOCATED               R4 43113500
         BAL   WE,NGWUNAL           ELSE ISSUE ERROR MESSAGE,        R4 43114000
         OI    NGQUIT+1,X'F0'        SET QUIT SWITCH,                R4 43114500
         B     NGW220                 AND BR TO CONTINUE             R4 43115000
         EJECT                                                       R4 43115500
NGW070   MVC   SPLUNIT(8),0(WE)    SET DEVICE TYPE                   R4 43116000
         B     NGW100              THEN BR TO ALLOCATE VOLUME        R4 43116500
         SPACE 1                                                     R4 43117000
NGW080   MVI   NVLFLAGS,SPL1NFMT   SET REQUEST FLAGS                 R4 43117500
         BAL   WE,NGSPLGET         OBTAIN SPOOL VOL ALLOC WORK AREA  R4 43118000
         SPACE 1                                                     R4 43118500
NGW100   BAL   WE,NGALLOC          ALLOCATE SPOOL VOLUME             R4 43119000
         BAL   WE,NGWAIT           WAIT FOR ALLOCATION TO COMPLETE   R4 43119500
         TM    SPLFLG2,SPL2UNAL+SPL2OBT  TEST ALLOCATE/OBTAIN        R4 43120000
         BNZ   NGW160              BR IF ERROR                       R4 43120500
         TM    SPLFLG2,SPL2RDER    IS VOLUME FORMATTED...            R4 43121000
         BO    NGW120              ERROR IF NO                       R4 43121500
         LR    WB,WF               POINT TO                          R4 43122000
         MH    WB,=H'6'             CHECKPOINT INFO                  R4 43122500
         AL    WB,$DACKPT            FOR THIS VOLUME                 R4 43123000
         CLC   2(4,WB),SPLOWTRK    TEST EXTENT LIMITS                R4 43123500
         BE    NGW180              BR IF SAME (OK)                   R4 43124000
         L     R1,=A(NXTNTMSG)     POINT TO MESSAGE TEXT             R4 43124500
         MVC   NXTNTVOL-NXTNTMSG(,R1),SPLVOLID  SET VOLUME SERIAL    R4 43125000
         B     NGW140              BR TO ISSUE ERROR MESSAGE         R4 43125500
         SPACE 1                                                     R4 43126000
NGW120   L     R1,=A(NRDERMSG)     POINT TO MESSAGE TEXT             R4 43126500
         MVC   NRDERVOL-NRDERMSG(,R1),SPLVOLID  SET VOLUME SERIAL    R4 43127000
         SPACE 1                                                     R4 43127500
NGW140  $$WTO  (R1)                ISSUE ERROR MESSAGE TO OPERATOR   R4 43128000
         SPACE 1                                                     R4 43128500
NGW160   OI    NGQUIT+1,X'F0'      SET QUIT SWITCH                   R4 43129000
         SPACE 1                                                     R4 43129500
NGW180   TM    NGQUIT+1,X'F0'      TEST QUIT SWITCH                  R4 43130000
         BO    NGW200              BR IF SET                         R4 43130500
         BAL   WE,NGDEBSET         SET DEB EXTENT AND TED ENTRY      R4 43131000
         OC    $ESYSQSE,$ESYSQSE   TEST FOR NODAL WARM START         R4 43131500
         BNZ   NGW200              BR IF NO                          R4 43132000
         BAL   WE,NGBITMAP         ADD OLD VOLUME BIT MAP TO MASTER  R4 43132500
         SPACE 1                                                     R4 43133000
NGW200   BAL   WE,NGDETACH         DETACH HOSPOOL, FREE WORK AREA    R4 43133500
         SPACE 1                                                     R4 43134000
NGW220   LA    WF,1(,WF)           BUMP $DACKPT RELATIVE ENTRY NO.   R4 43134500
         CLM   WF,1,$NUMDA         TEST FOR END OF TABLE             R4 43135000
         BL    NGW040              BR IF NO                          R4 43135500
         EJECT                                                       R4 43136000
*********************************************************************** 43136500
*                                                                     * 43137000
*        CHECK FOR NEW SPOOL VOLUMES.  IF NODAL (COMPLEX) WARM        * 43137500
*        START, TREAT EACH ONE FOUND AS IN COLD START.  IF JES2       * 43138000
*        RESTART, OR SINGLE SYSTEM WARM START WITHIN MULTI-SYSTEM     * 43138500
*        NODE, DISALLOW USE OF NEW SPOOL VOLUME.                      * 43139000
*                                                                     * 43139500
*********************************************************************** 43140000
         SPACE 1                                                     R4 43140500
         L     WD,NVOLTABL         POINT TO ALLOCATION TABLE         R4 43141000
         SPACE 1                                                     R4 43141500
NGW240   LA    WD,NVLTBLN(,WD)     GET NEXT TABLE ENTRY              R4 43142000
         TM    NVLEND,255          IF NO MORE ENTRIES,               R4 43142500
         BNM   NGW300               BR TO WAIT ON ALLOCATES (IF ANY) R4 43143000
         TM    NVLFLAGS,SPL1NFMT   IF PREVIOUSLY USED VOLUME,        R4 43143500
         BO    NGW240               BR TO CHECK NEXT                 R4 43144000
         OC    $ESYSQSE,$ESYSQSE   IF NODAL WARM START,              R4 43144500
         BZ    NGW260               BR TO ALLOCATE NEW VOLUME        R4 43145000
         L     R1,=A(NOUSEMSG)     POINT TO MESSAGE TEXT             R4 43145500
         MVC   NOUSEVOL-NOUSEMSG(,R1),NVLVOLID  SET VOLUME SERIAL    R4 43146000
        $$WTO  (R1)                ISSUE WARNING MESSAGE TO OPERATOR R4 43146500
         B     NGW240              THEN BR TO CONTINUE CHECKING      R4 43147000
         SPACE 1                                                     R4 43147500
NGW260   BAL   WE,NGSPLGET         GET SPOOL VOL ALLOC WORK AREA     R4 43148000
         L     R1,NVOLWKSP         L-I-F-O QUEUE                     R4 43148500
         ST    WC,NVOLWKSP          WORK AREA                        R4 43149000
         ST    R1,SPLCHAIN           TO NVOLWKSP                     R4 43149500
         BAL   WE,NGALLOC          ALLOCATE THE SPOOL VOLUME         R4 43150000
         B     NGW240              THEN BR TO CONTINUE CHECKING      R4 43150500
         SPACE 1                                                     R4 43151000
NGW300   ICM   WC,15,NVOLWKSP      GET NEXT SPOOL VOL ALLOC WK AREA  R4 43151500
         BZ    NGEXIT              BR IF NO MORE TO EXIT             R4 43152000
         MVC   NVOLWKSP,SPLCHAIN    ELSE DE-CHAIN THE WORK AREA      R4 43152500
         BAL   WE,NGWAIT           WAIT FOR ALLOCATION TO COMPLETE   R4 43153000
         BNZ   NGW320              BR IF ANY ERRORS                  R4 43153500
         BAL   WE,NGCKPSET         SET $DACKPT ENTRY                 R4 43154000
         BAL   WE,NGDEBSET         SET DEB EXTENT AND TED ENTRY      R4 43154500
         BAL   WE,NGBITMAP         ADD NEW VOLUME BIT MAP TO MASTER  R4 43155000
         SPACE 1                                                     R4 43155500
NGW320   BAL   WE,NGDETACH         DETACH HOSPOOL, FREE WORK AREA    R4 43156000
         B     NGW300              BR TO CHECK FOR ANOTHER NEW VOL   R4 43156500
         EJECT                                                       R4 43157000
*********************************************************************** 43157500
*                                                                     * 43158000
*        INVALID CHECKPOINT RECORD - WARM START NOT POSSIBLE          * 43158500
*                                                                     * 43159000
*********************************************************************** 43159500
         SPACE 1                                                     R4 43160000
NGTEST   TM    $OPTSTAT,$OPTCOLD+$OPTFMT  TEST FOR COLD/FORMAT START R4 43160500
         BNZ   NGT060              BR IF YES                        R41 43161000
         SPACE 1                                                     R4 43161500
NGT020   L     R1,=A(NMSG434)      POINT TO MESSAGE TEXT             R4 43162000
         B     NGKWIT              BR TO ISSUE MESSAGE AND QUIT      R4 43162500
         SPACE 1                                                     R4 43163000
         USING QSEDSECT,R1         PROVIDE QSE ADDRESSABILITY       R41 43163500
         SPACE 1                                                    R41 43164000
NGT040   L     R1,$QSE1            LOCATE 1ST QSE                   R41 43164500
         TM    QSEFLAGS,QSELAST    UNI-SYSTEM NODE...               R41 43164600
         BO    NGT060              BR IF YES                        R41 43165000
        $$WTO  NDORMMSG            TELL OP THAT COMPLEX NOT DORMANT R41 43165500
         L     WA,=A(NRESUMSG)     POINT TO 'CONTINUE' MSG          R41 43166000
         BAL   WE,NGWTOR           QUERY OPERATOR                   R41 43166500
         BE    NGCOLD              BR IF OK TO COLD START           R41 43166600
         B     NGQUITT              ELSE QUIT                       R41 43166700
         SPACE 1                                                    R41 43166800
         DROP  R1                  KILL QSE ADDRESSABILITY          R41 43166900
         SPACE 1                                                    R41 43167000
NGT060   L     WA,=A(NMSG436)      POINT TO 'CONFIRM CHANGE' MSG    R41 43167100
         BAL   WE,NGWTOR           QUERY OPERATOR                   R41 43167200
         BE    NGCOLD              BR IF OK TO COLD START           R41 43167500
         L     R1,=A(NMSG434)      POINT TO MESSAGE TEXT             R4 43168000
         MVC   NMSG434A-NMSG434(,R1),=C'COLD'  CHANGE WARM TO COLD   R4 43168500
         B     NGKWIT              BR TO ISSUE MESSAGE AND QUIT      R4 43169000
         TITLE 'HASP INITIALIZATION -- DIRECT ACCESS INITIALIZATION FORC43169500
                COLD START'                                          R4 43170000
*********************************************************************** 43170500
*                                                                     * 43171000
*        BUILD QSE(S) FROM SYSTEM PARAMETER TABLE                     * 43171500
*                                                                     * 43172000
*********************************************************************** 43172500
         SPACE 1                                                     R4 43173000
NGCOLD   MVI   $ESYSQSE,0          NOTE NODAL COLD START             R4 43173500
         L     R0,$TGMAP           CLEAR                             R4 43174000
         L     R1,$CYLMAPL          MASTER                           R4 43174500
         SLR   R15,R15               TRACK GROUP                     R4 43175000
         MVCL  R0,R14                 BIT MAP                        R4 43175500
         L     R0,$QSE1            CLEAR                             R4 43176000
         LH    R1,$QSENO            ALL                              R4 43176500
         MH    R1,$QSEL              ACTIVE                          R4 43177000
         MVCL  R0,R14                 QSES                           R4 43177500
         L     R1,$QSE1            POINT TO 1ST QSE                  R4 43178000
         L     R2,=A(NS1)          POINT TO SYSTEM PARAMETER TABLE   R4 43178500
         SPACE 1                                                     R4 43179000
         USING QSEDSECT,R1         PROVIDE QSE ADDRESSABILITY        R4 43179500
         SPACE 1                                                     R4 43180000
NGC020   MVC   QSESID,0(R2)        SET SYSTEM ID                     R4 43180500
         MVC   QSESIBSY(2),NS1A-NS1(R2)  SET BUSY AND AFFINITY       R4 43181000
         CLC   $SID,QSESID         TEST FOR THIS SYSTEM              R4 43181500
         BNE   SKIP800             BR IF NO                          R4 43182000
         ST    R1,$AQSE             ELSE SAVE QSE ADDRESS            R4 43182500
         LR    R0,R1               STORE ADDRESS               @OZ20010 43182600
         SL    R0,$CKPTR1           OF THIS SYSTEM'S QSE       @OZ20010 43182700
         AL    R0,$CKPR1RD           IN THE CHECKPOINT         @OZ20010 43182800
         ST    R0,$RQSE               READ-IN AREA             @OZ20010 43182900
SKIP800  LA    R2,L'NS1(,R2)       STEP TO NEXT TABLE ENTRY          R4 43183000
         CLI   0(R2),C' '          TEST FOR END OF TABLE             R4 43183500
         BE    NGC040              BR IF YES                         R4 43184000
         AH    R1,$QSEL             ELSE STEP TO NEXT QSE            R4 43184500
         B     NGC020                AND BR TO SET IT                R4 43185000
         SPACE 1                                                     R4 43185500
NGC040   OI    QSEFLAGS,QSELAST    INDICATE LAST QSE                 R4 43186000
         SPACE 1                                                     R4 43186500
         DROP  R1                  KILL QSE ADDRESSABILITY           R4 43187000
         EJECT                                                       R4 43187500
*********************************************************************** 43188000
*                                                                     * 43188500
*        ALLOCATE SPOOL VOLUMES FOR COLD/FORMAT START                 * 43189000
*                                                                     * 43189500
*********************************************************************** 43190000
         SPACE 1                                                     R4 43190500
         L     WD,NVOLTABL         POINT TO ALLOCATION TABLE         R4 43191000
         SPACE 1                                                     R4 43191500
NGC060   LA    WD,NVLTBLN(,WD)     GET NEXT TABLE ENTRY              R4 43192000
         TM    NVLEND,255          IF NO MORE ENTRIES,               R4 43192500
         BNM   NGC080               BR TO WAIT ON ALLOCATE(S)        R4 43193000
         TM    $OPTSTAT,$OPTFMT    TEST FOR FORMAT START             R4 43193500
         BZ    SKIP810             BR IF NO                          R4 43194000
         OI    NVLFLAGS,SPL1FMT     ELSE FORCE VOLUME FORMAT         R4 43194500
SKIP810  BAL   WE,NGSPLGET         OBTAIN SPOOL VOL ALLOC WORK AREA  R4 43195000
         L     R1,NVOLWKSP         L-I-F-O QUEUE                     R4 43195500
         ST    WC,NVOLWKSP          WORK AREA                        R4 43196000
         ST    R1,SPLCHAIN           TO NVOLWKSP                     R4 43196500
         BAL   WE,NGALLOC          ALLOCATE THE SPOOL VOLUME         R4 43197000
         B     NGC060              THEN BR TO CHECK NEXT ENTRY       R4 43197500
         SPACE 1                                                     R4 43198000
NGC080   ICM   WC,15,NVOLWKSP      GET NEXT SPOOL VOL ALLOC WK AREA  R4 43198500
         BZ    NGC140              BR IF NO MORE                     R4 43199000
         MVC   NVOLWKSP,SPLCHAIN    ELSE DE-CHAIN THE WORK AREA      R4 43199500
         BAL   WE,NGWAIT           WAIT FOR ALLOCATION TO COMPLETE   R4 43200000
         BZ    NGC100              BR IF OK TO ACCEPT VOLUME         R4 43200500
         CLC   $SPOOL,SPLVOLID     TEST FOR PRIMARY SPOOL VOLUME     R4 43201000
         BNE   NGC120              BR IF NO TO IGNORE VOLUME         R4 43201500
         OI    NGQUIT+1,X'F0'       ELSE SET QUIT SWITCH             R4 43202000
         B     NGC120              THEN BR TO CONTINUE               R4 43202500
         SPACE 1                                                     R4 43203000
NGC100   BAL   WE,NGCKPSET         SET $DACKPT ENTRY                 R4 43203500
         BAL   WE,NGDEBSET         SET DEB EXTENT AND TED ENTRY      R4 43204000
         BAL   WE,NGBITMAP         ADD NEW VOLUME BIT MAP TO MASTER  R4 43204500
         SPACE 1                                                     R4 43205000
NGC120   BAL   WE,NGDETACH         DETACH HOSPOOL, FREE WORK AREA    R4 43205500
         B     NGC080              BR TO CHECK FOR ANOTHER VOLUME    R4 43206000
         SPACE 1                                                     R4 43206500
NGC140   EX    R0,NGQUIT           QUIT IF ANY ERROR(S)              R4 43207000
         SPACE 1                                                     R4 43207500
         DROP  WC,WD               KILL SPL/ALLOC TBL ADDRESSABILITY R4 43208000
         EJECT                                                       R4 43208500
*********************************************************************** 43209000
*                                                                     * 43209500
*        FORMAT HASP JOB QUEUE                                        * 43210000
*                                                                     * 43210500
*********************************************************************** 43211000
         SPACE 1                                                     R4 43211500
         USING JQEDSECT,R2         JQE ADDRESSABILITY          @OZ20010 43211700
         SPACE 2                                               @OZ20010 43211900
         L     R2,$JOBQPTR         PICK UP ADDRESS OF 0TH JQE  @OZ20010 43212000
         MVC   JQEDSECT(JQELNGTH),NGJQETXT SET EYE-CATCHER     @OZ20010 43212200
         MVC   NGJQESID(,R2),$SID  MOVE $SID TO EYE-CATCHER    @OZ20010 43212400
         TIME  DEC                 GET 'READABLE' DATE/TIME    @OZ20010 43212500
         STM   R0,R1,NGJQEDTM(R2)  STORE IN EYE-CATCHER        @OZ20010 43212700
         LA    R2,JQELNGTH(,R2)    POINT TO ACTUAL 1ST JQE     @OZ20010 43212900
         LH    R3,$MAXJOBS         NO. OF JQES TO INITIALIZE   @OZ20010 43213000
         LA    R1,$JQFREE          PICK UP ADDRESS OF FREE Q   @OZ20010 43213200
         SPACE 1                                               @OZ20010 43213400
NGC200   LR    R0,R2               COMPUTE                     @OZ20010 43213500
         SL    R0,$JOBQPTR          NEXT                       @OZ20010 43213700
         SRL   R0,2                  JQE OFFSET                @OZ20010 43213900
         STH   R0,0(,R1)           STORE PREVIOUS JQE CHAIN    @OZ20010 43214000
         MVI   JQETYPE,X'FF'       SHOW JQE ON FREE QUEUE      @OZ20010 43214200
         LA    R1,JQECHAIN         POINT TO CHAIN              @OZ20010 43214400
         LA    R2,JQELNGTH(,R2)    BUMP TO NEXT JQE            @OZ20010 43214500
         BCT   R3,NGC200           LOOP TILL ALL JQES CHAINED  @OZ20010 43214700
         SPACE 1                                               @OZ20010 43214900
         SLR   R2,R2               CLEAR LAST JQE              @OZ20010 43215000
         ST    R2,0(,R1)            CHAIN POINTER              @OZ20010 43215200
         SPACE 1                                               @OZ20010 43215400
                                   PRINT OFF - SECTION DELETED @OZ20010 43215500
*                                  THIS CARD DELETED BY APAR   @OZ20010 43216000
*                                  THIS CARD DELETED BY APAR   @OZ20010 43216500
*                                  THIS CARD DELETED BY APAR   @OZ20010 43217000
*                                  THIS CARD DELETED BY APAR   @OZ20010 43217500
*                                  THIS CARD DELETED BY APAR   @OZ20010 43218000
*                                  THIS CARD DELETED BY APAR   @OZ20010 43218500
*                                  THIS CARD DELETED BY APAR   @OZ20010 43219000
*                                  THIS CARD DELETED BY APAR   @OZ20010 43219100
*                                  THIS CARD DELETED BY APAR   @OZ20010 43219500
*                                  THIS CARD DELETED BY APAR   @OZ20010 43220000
                                   PRINT ON -- SECTION DELETED @OZ20010 43220500
         STH   R2,$JOBNO           RESET JOB NUMBER            @OZ20010 43221000
         L     R6,=F'10000'        RESET                             R4 43221500
         STH   R6,$STCNO            STARTED TASK NUMBER              R4 43222000
         ALR   R6,R6               RESET                             R4 43222500
         STH   R6,$TSUNO            TIME-SHARING USER NUMBER         R4 43223000
         SPACE 2                                               @OZ20010 43223200
         DROP  R2                  RELEASE JQE ADDRESSABILITY  @OZ20010 43223400
         EJECT                                                       R4 43223500
*********************************************************************** 43224000
*                                                                     * 43224500
*        FORMAT HASP JOB OUTPUT TABLE                                 * 43225000
*                                                                     * 43225500
*********************************************************************** 43226000
         SPACE 1                                                     R4 43226500
         USING JOTDSECT,R2         PROVIDE JOT ADDRESSABILITY  @OZ20010 43227000
         SPACE 1                                               @OZ20010 43227200
         L     R2,$JOTABLE                                     @OZ20010 43227400
         LH    R3,$NUMJOES         NO. OF JQES TO INITIALIZE   @OZ20010 43227500
         STH   R3,JOTFREC           EQUAL NUMBER OF FREE JOES  @0Z20010 43227700
         LA    R1,JOTFREQ          PICK UP ADDRESS OF FREE Q   @OZ20010 43227900
         LA    R2,JOTJOES          PICK UP ADDRESS OF 1ST JOE  @OZ20010 43228000
         USING JOEDSECT,R2         PROVIDE JOE ADDRESSABILITY  @OZ20010 43228200
         SPACE 1                                               @OZ20010 43228400
NGC202   LR    R0,R2               COMPUTE                     @OZ20010 43228500
         SL    R0,$JOTABLE          OFFSET TO                  @OZ20010 43228700
         SRL   R0,2                  NEXT JOE                  @OZ20010 43228900
         STH   R0,0(,R1)           STORE PREVIOUS JOE CHAIN    @OZ20010 43229000
         LA    R1,JOENEXT          POINT TO CHAIN              @OZ20010 43229200
         LA    R2,JOESIZE(,R2)     BUMP TO NEXT JOE            @OZ20010 43229400
         BCT   R3,NGC202           LOOP TILL ALL JOES CHAINED  @OZ20010 43229500
         SPACE 1                                               @OZ20010 43229700
         SLR   R2,R2               CLEAR LAST JOE              @OZ20010 43229900
         ST    R2,0(,R1)            CHAIN POINTER              @OZ20010 43230000
         B     NGEXIT              BRANCH AROUND DATA          @OZ20010 43230200
         SPACE 1                                               @OZ20010 43230400
                                   PRINT OFF - SECTION DELETED @OZ20010 43230500
*                                  THIS CARD DELETED BY APAR   @OZ20010 43231000
*                                  THIS CARD DELETED BY APAR   @OZ20010 43231500
*                                  THIS CARD DELETED BY APAR   @OZ20010 43232000
*                                  THIS CARD DELETED BY APAR   @OZ20010 43232500
*                                  THIS CARD DELETED BY APAR   @OZ20010 43233000
*                                  THIS CARD DELETED BY APAR   @OZ20010 43233500
*                                  THIS CARD DELETED BY APAR   @OZ20010 43234000
*                                  THIS CARD DELETED BY APAR   @OZ20010 43234500
*                                  THIS CARD DELETED BY APAR   @OZ20010 43235000
*                                  THIS CARD DELETED BY APAR   @OZ20010 43235500
*                                  THIS CARD DELETED BY APAR   @OZ20010 43236000
                                   PRINT ON -- SECTION DELETED @OZ20010 43236500
         DROP  R2                  KILL JOT ADDRESSABILITY     @OZ20010 43237000
         SPACE 1                                               @OZ20010 43237025
NGJQETXT DC    CL(JQELNGTH)' '     EBDCIC TEXT FOR SPACE       @0Z20010 43237050
         ORG   NGJQETXT              USED BY ZEROTH JQE ENTRY  @0Z20010 43237075
         DC    CL5'JES2 '          NAME OF JOB ENTRY SUBSYSTEM @0Z20010 43237100
         DC    CL10'COLDSTART '    COLDSTART TIME STAMP FLAG   @0Z20010 43237200
NGJQESID EQU   *-NGJQETXT,4        OFFSET, LEN FOR SMF SYSID   @0Z20010 43237225
         DC    CL5' '              SLOT FOR SMF SYSID          @0Z20010 43237250
NGJQEDTM EQU   *-NGJQETXT,8        OFFSET, LEN FOR DATE/TIME   @0Z20010 43237275
         DC    CL8' '              SLOT FOR DATE/TIME (SVC 11) @0Z20010 43237300
         ORG   ,                                               @0Z20010 43237325
         TITLE 'HASP INITIALIZATION -- DIRECT ACCESS INITIALIZATION TERC43237500
               MINATION'                                             R4 43238000
*********************************************************************** 43238500
*                                                                     * 43239000
*        ALLOCATE TRACKS FOR MESSAGE SPOOLING                         * 43239500
*                                                                     * 43240000
*********************************************************************** 43240500
         SPACE 1                                                     R4 43241000
         USING TEDDSECT,WA         PROVIDE TED ADDRESSABILITY        R4 43241500
         SPACE 1                                                     R4 43242000
         CNOP  0,4                                                   R4 43242500
NGEXIT   DS    0H                  USED LATER AS SAVE AREA           R4 43243000
         SPACE 1                                                     R4 43243500
NGQUIT   NOP   NGQUITT             QUIT IF ANY ERROR(S) SO FAR       R4 43244000
         CLI   $SPOLMSG,0          IF NO MSG BUFFERS REQUESTED,      R4 43244500
         BE    NGX000               DON'T ALLOCATE ANY TRACKS        R4 43245000
         L     WA,TEDSTART         POINT TO PRIMARY SPOOL VOL TED    R4 43245500
         L     WC,$TGMAP           POINT TO PRIMARY SPOOL VOL TGM    R4 43246000
         L     R1,$DACKPT          GET START OF PRIMARY              R4 43246500
         LH    R1,2(,R1)            SPOOL DATA SET                   R4 43247000
         LR    R15,R1              SAVE FOR SETTING OF MTTR          R4 43247500
         LH    WD,TNTG             GET TRACKS PER GROUP              R4 43248000
         ALR   R1,WD               R1 = FIRST                        R4 43248500
         BCTR  R1,0                      AVAILABLE                   R4 43249000
         SLR   R0,R0                      TRACK                      R4 43249500
         DR    R0,WD                       GROUP                     R4 43250000
         LR    WE,R1               SAVE FOR LATER USE                R4 43250500
         BCTR  WE,0                GET GROUP IN FRONT                R4 43251000
         LR    WF,WE               SAVE IT ALSO                      R4 43251500
         MR    R0,WD               GET TRACK NUMBER OF GROUP         R4 43252000
         SR    R1,R15              TRACKS LEFT IN DEAD SPACE         R4 43252500
         BNZ   SKIP840             SKIP IF DEAD SPACE TRACKS         R4 43253000
         OI    NMSGECLD+1,X'F0'    SET TO PREVENT ALLOCATION         R4 43253500
SKIP840  LH    R15,TNRT            GET RECORDS PER TRACK             R4 43254000
         MR    R0,R15              R1 = NEGATIVE OF NUMBER           R4 43254500
         LNR   R1,R1                     OF ALLOCATED RECORDS        R4 43255000
         IC    R0,$SPOLMSG         R1 = NUMBER                       R4 43255500
         AR    R1,R0                     OF RECORDS                  R4 43256000
         MH    R0,$NUMRJE                 LEFT                       R4 43256500
         AR    R1,R0                       AVAILABLE                 R4 43257000
         BNP   NTESTART            BR IF NONE REMAINING              R4 43257500
         MR    R14,WD              R1 = NUMBER                       R4 43258000
         AR    R1,R15                    OF                          R4 43258500
         BCTR  R1,0                       TRACK                      R4 43259000
         SLR   R0,R0                       GROUPS                    R4 43259500
         DR    R0,R15                       REMAINING                R4 43260000
         ALR   WE,R1               END GROUP                         R4 43260500
         LNR   R1,R1               NEGATIVE OF GROUPS REMAINING      R4 43261000
         A     R1,NGXTGS           TOTAL - GROUPS = REMAINING        R4 43261500
         BNP   NMSGERR             IF NOT POSITIVE, SERIOUS ERROR    R4 43262000
         ST    R1,NGXTGS           SET NEW TOTAL                     R4 43262500
         SPACE 1                                                     R4 43263000
NTESTART OC    $ESYSQSE,$ESYSQSE   TEST FOR NODAL WARM/COLD START    R4 43263500
         BNZ   NGX080              BR IF NO                          R4 43264500
         EJECT                                                       R4 43267000
NMSGLOOP LR    R14,WE              LOCATE BIT MAP BYTE AND BIT       R4 43267500
         SRDL  R14,3               SEPARATE BYTE AND BIT             R4 43268000
         CH    R14,TNMB            MAKE SURE WITHIN PRIMARY VOLUME   R4 43268500
         BH    NMSGERR             ERROR IF NOT                      R4 43269000
         LA    R1,0(R14,WC)        BYTE OF CYLINDER MAP              R4 43269500
         SRL   R15,32-3            ALIGN AT LOW END                  R4 43270000
         IC    R15,NMSGBIT(R15)    PICK UP BIT PATTERN               R4 43270500
         CR    WE,WF               TEST FOR END                      R4 43271000
         BNH   NMSGECLD            EXIT IF SO                        R4 43271500
         EX    R15,NMSGXI          FLIP BIT TO OFF                   R4 43272000
         EX    R15,NMSGTM          TEST FOR BIT OFF                  R4 43272500
         BNZ   NMSGERR             ERROR IF NOT                      R4 43273000
         BCT   WE,NMSGLOOP         LOOP                              R4 43273500
         SPACE 1                                                     R4 43274000
NMSGECLD NOP   NGX000              FALL THRU IF TRKS IN DEAD SPACE   R4 43274500
         EX    R15,NMSGOI          TURN BIT ON                       R4 43275000
         EX    R15,NMSGXI          NOW TURN BIT OFF                  R4 43275500
         B     NGX000              THEN BR TO CONTINUE               R4 43276000
         SPACE 1                                                     R4 43276500
         DROP  WA                  KILL TED ADDRESSABILITY           R4 43277000
         SPACE 2                                                     R4 43277500
NMSGERR  L     R1,=A(NMSGMSG)      POINT TO MESSAGE TEXT             R4 43278000
         B     NGKWIT              BR TO ISSUE MESSAGE AND QUIT      R4 43278500
         SPACE 2                                                     R4 43279000
NMSGBIT  DC    X'8040201008040201' BIT PATTERNS FOR ALLOCATION       R4 43279500
         SPACE 1                                                     R4 43280000
NMSGXI   XI    0(R1),*-*           *** EXECUTE ONLY ***              R4 43280500
NMSGTM   TM    0(R1),*-*           *** EXECUTE ONLY ***              R4 43281000
NMSGOI   OI    0(R1),*-*           *** EXECUTE ONLY ***              R4 43281500
         EJECT                                                       R4 43282000
*********************************************************************** 43282500
*                                                                     * 43283000
*        SYSTEM ENVIRONMENT RECORDING                                 * 43283500
*                                                                     * 43284000
*********************************************************************** 43284500
         SPACE 1                                                     R4 43285000
NGX000   OC    $ESYSQSE,$ESYSQSE   TEST FOR NODAL WARM/COLD START    R4 43285500
         BNZ   NGX080              BR IF NO                          R4 43286500
         L     R1,$QSE1            POINT TO 1ST QSE                  R4 43290500
         LH    R0,$QSENO           GET NUMBER OF MEMBERS IN NODE     R4 43291000
         SPACE 1                                                     R4 43291500
         USING QSEDSECT,R1         PROVIDE QSE ADDRESSABILITY        R4 43292000
         SPACE 1                                                     R4 43292500
NGX020   XC    QSESITIM,QSESITIM   ZERO LAST CHECKPOINT WRITE TIME   R4 43293000
         NI    QSESTAT,255-QSEACTIV  INDICATE SYSTEM INACTIVE        R4 43293500
         AH    R1,$QSEL            STEP TO NEXT QSE                  R4 43296500
         BCT   R0,NGX020           LOOP THRU ACTIVE QSES             R4 43297000
         SPACE 1                                                     R4 43297500
*                                  THIS CARD DELETED BY APAR   @OZ20010 43298000
         L     R1,$CKPTR1              MOVE HCT VARIABLES      @OZ20010 43298500
         MVC   0($SAVELEN,R1),$SAVEBEG  TO JOB QUEUE BUFFER    @OZ20010 43299000
         EJECT                                                       R4 43305000
***************************************************************@OZ20010 43305100
*                                                              @OZ20010 43305200
*       ADJUST INITIALIZATION CCW CHAIN TO WRITE AND / OR      @OZ20010 43305300
*                   FORMAT THE CHECKPOINT                      @OZ20010 43305400
*                                                              @OZ20010 43305500
***************************************************************@OZ20010 43305600
         SPACE 1                                               @OZ20010 43305700
         USING JQBCCWE,R1          CCW PACKET ADDRESSABILITY   @OZ20010 43305800
         SPACE 1                                               @OZ20010 43305900
NGX080   L     R1,$CKPTIOB              PICK UP                @OZ20010 43306000
         LA    R1,JQBCCWS-JQBDSECT(,R1)  1ST CCW ADDRESS       @OZ20010 43306100
         LH    R7,$JOBRECN         COMPUTE                     @OZ20010 43306200
         AH    R7,$JOTRECN          NUMBER OF                  @OZ20010 43306300
         LA    R7,1(,R7)             CCW PACKETS               @OZ20010 43306400
         SPACE 1                                               @OZ20010 43306500
NGX081   MVI   JQBCCW4,X'1D'       SET CCW TO FORMAT WRITE     @OZ20010 43306600
         NI    JQBCCW4+4,X'FF'-X'30' AND NOT SILI OR SKIP      @OZ20010 43306700
         LA    R1,JQBCNEXT         BUMP TO NEXT CCW PACKET     @OZ20010 43306800
         BCT   R7,NGX081           LOOP TILL ALL CCWS ADJUSTED @OZ20010 43306900
         SPACE 2                                               @OZ20010 43307000
         USING QSEDSECT,R1         PROVIDE QSE ADDRESSABILITY  @OZ20010 43307100
         SPACE 1                                               @OZ20010 43307200
                                   PRINT OFF - SECTION DELETED @OZ20010 43307500
*                                  THIS CARD DELETED BY APAR   @OZ20010 43308000
                                   PRINT ON -- SECTION DELETED @OZ20010 43308500
         STCK  $SIDTIME            GET CURRENT TIME OF DAY           R4 43309000
         L     R1,$AQSE            POINT TO QSE FOR THIS SYSTEM      R4 43309500
         MVC   QSESITIM,$SIDTIME   SET CHECKPOINT WRITE TIME IN QSE  R4 43311500
         OI    QSESTAT,QSEACTIV    INDICATE SYSTEM ACTIVE            R4 43312000
         MVC   $SIDBUSY,QSESIBSY   SET SYSTEM BUSY MASK              R4 43312500
         MVC   $SIDAFF,QSESIAFF    SET SYSTEM AFFINITY MASK          R4 43313000
         EJECT                                                       R4 43313500
*********************************************************************** 43314000
*                                                                     * 43314500
*        CHECKPOINT JOB QUEUE AND JOT                                 * 43315000
*                                                                     * 43315500
*********************************************************************** 43316000
         SPACE 1                                                     R4 43316500
         BAL   R14,NGEXCP          WRITE JOB QUEUE AND JOT           R4 43317000
         BNZ   NGCKMSGW            BR IF I/O ERROR                   R4 43317500
                                   PRINT OFF - SECTION DELETED @OZ20010 43321000
*                                  THIS CARD DELETED BY APAR   @OZ20010 43321500
*                                  THIS CARD DELETED BY APAR   @OZ20010 43322000
                                   PRINT ON -- SECTION DELETED @OZ20010 43322500
         SPACE 1                                                     R4 43323000
         USING DEBDSECT,R1         PROVIDE DEB ADDRESSABILITY        R4 43323500
         USING $SVDSECT,R2         PROVIDE SSVT ADDRESSABILITY       R4 43324000
         USING UCBDSECT,R3         PROVIDE UCB ADDRESSABILITY        R4 43324500
         SPACE 1                                                     R4 43325000
         L     R1,$DADEBAD         POINT TO DA DEB             @OZ20010 43325200
         L     R2,$SSVT            POINT TO SSVT               @OZ20010 43325400
         SLR   R3,R3               LOAD                        @OZ20010 43325500
         IC    R3,$NUMDA            CHECKPOINT                 @OZ20010 43325700
         SLL   R3,4                  UCB                       @OZ20010 43325900
         L     R3,DEBBASND(R3)        ADDRESS                  @OZ20010 43326000
         OC    $ESYSQSE,$ESYSQSE   TEST FOR NODAL WARM START   @OZ20010 43326200
         BZ    NGX110              BR IF YES - KEEP RESERVE    @OZ20010 43326400
*                                  THIS CARD DELETED BY APAR   @OZ20010 43326500
*                                  THIS CARD DELETED BY APAR   @OZ20010 43327000
        $GETLOK                    GET CMS LOCK                      R4 43327500
         MODESET EXTKEY=ZERO       SET PROTECT KEY TO ZERO           R4 43328000
         SLR   R0,R0               CLEAR FOR INSERT                  R4 43328500
         IC    R0,UCBSQC           DECREMENT                         R4 43329000
         BCTR  R0,0                 RESERVE                          R4 43329500
         STC   R0,UCBSQC             COUNT                           R4 43330000
         NI    $SVSTUS,255-$SVSTIRV  KILL INIT RESERVE COUNT BIT     R4 43330500
         LTR   R0,R0               IF RESERVE COUNT NOT ZERO,        R4 43331000
         BNZ   NGX100               SKIP STARTIO MACRO               R4 43331500
         TM    UCBTBYT2,UCBRR      IF NOT SHARED DASD,               R4 43332000
         BZ    NGX100               SKIP STARTIO MACRO               R4 43332500
         EJECT                                                       R4 43333000
*********************************************************************** 43333500
*                                                                     * 43334000
*        REMOVE RESERVE ON CHECKPOINT VOLUME                          * 43334500
*                                                                     * 43335000
*********************************************************************** 43335500
         SPACE 1                                                     R4 43336000
         STM   R14,R12,12(R13)     SAVE REGISTERS THRU STARTIO       R4 43336500
         L     R1,$SVRELSE         POINT TO SRB FOR STARTIO          R4 43337000
         STARTIO SRB=(1)           REMOVE RESERVE ON CHECKPOINT      R4 43337500
         LM    R14,R12,12(R13)     RESTORE SAVED REGISTERS           R4 43338000
         SPACE 1                                                     R4 43338500
*                                  THIS CARD DELETED BY APAR   @OZ20010 43339000
         SPACE 1                                                     R4 43339500
NGX100  $FRELOK                    FREE CMS LOCK                     R4 43340000
         EJECT                                                 @OZ20010 43340020
***************************************************************@OZ20010 43340040
*                                                              @OZ20010 43340060
*        CREATE FINAL JQB CCWS                                 @OZ20010 43340080
*                                                              @OZ20010 43340100
***************************************************************@OZ20010 43340120
         SPACE 1                                               @OZ20010 43340140
         USING JQBCCWE,R1          CCW PACKET ADDRESSABILITY   @OZ20010 43340160
         USING JQBDSECT,R5         JQB ADDRESSABILITY          @OZ20010 43340180
         SPACE 1                                               @OZ20010 43340200
NGX110   L     R5,$CKPTIOB         PICK UP JQB ADDRESS         @OZ20010 43340220
         LA    R1,JQBCCWS           AND ADDDRESS OF 1ST CCW    @OZ20010 43340240
         SPACE 2                                               @OZ20010 43340260
*        BUILD CCW PACKET FOR 1ST CHECKPOINT RECORD            @OZ20010 43340280
         SPACE 1                                               @OZ20010 43340300
         BAL   R14,NGCKFMC1        INITIALIZE CCW PACKET       @OZ20010 43340320
         SPACE 1                                               @OZ20010 43340340
         LRA   R14,JQBIDAWS        SET READ CCW ADDRESS        @OZ20010 43340360
         STCM  R14,7,JQBCRW+1       TO POINT TO IDAWS          @OZ20010 43340380
         OI    JQBCRW+4,X'04'      SET IDA FLAG FOR READ/WRITE @OZ20010 43340400
         L     R0,$CKPTR1L         SET LENGTH FOR              @OZ20010 43340420
         STH   R0,JQBCRW+6           FIRST RECORD              @OZ20010 43340440
         SPACE 2                                               @OZ20010 43340460
*        BUILD CCW PACKETS FOR THE JOB QUEUE AND JOT RECORDS   @OZ20010 43340480
         SPACE 1                                               @OZ20010 43340500
         LH    R7,$JOBRECN         COMPUTE NUMBER OF CCW       @OZ20010 43340520
         AH    R7,$JOTRECN          PACKETS TO INITIALIZE      @OZ20010 43340540
         SPACE 1                                               @OZ20010 43340560
NGX120   LA    R1,JQBCNEXT         BUMP TO NEXT CCW PACKET     @OZ20010 43340580
         BAL   R14,NGCKFMC1         AND INITIALIZE IT          @OZ20010 43340600
         SPACE 1                                               @OZ20010 43340620
         BCT   R7,NGX120           DO ALL JOB-Q AND JOT CCWS   @OZ20010 43340640
         MVC   JQBCTNXT,NGCKPNOP   TERMINATE CCW CHAIN         @OZ20010 43340660
         SPACE 1                                               @OZ20010 43340680
         DROP  R1                  RELEASE JQB AND             @OZ20010 43340700
         DROP  R5                   CCW ADDRESSABILITY         @OZ20010 43340720
         EJECT                                                 @OZ20010 43340740
***************************************************************@OZZ2010 43340760
*                                                              @OZ20010 43340780
*        FREE CHECKPOINT AREA PAGES AND RELEASE READ IN AREA   @OZ20010 43340800
*                                                              @OZ20010 43340820
***************************************************************@OZZ2010 43340840
         SPACE 1                                               @OZ20010 43340860
         L     R0,$CKPTR1L         PICK UP LENGTH AND ADDRESS  @OZ20010 43340880
         L     R1,$CKPTR1           OF 1ST CKPT RECORD AREA    @OZ20010 43340900
        $PGSRVC FREE,(R1),(R0)       AND FREE ITS PAGE FRAMES  @OZ20010 43340920
         SPACE 2                                               @OZ20010 43340940
         L     R1,$CKPR1RD         PICK UP READ-IN AREA ADDR   @OZ20010 43340960
        $PGSRVC RLSE,(R1),(R0)      AND RELEASE ITS PAGES      @OZ20010 43340980
         SPACE 2                                               @OZ20010 43341000
         L     R0,$JOBQSIZ         COMPUTE SIZE OF JOB QUEUE   @OZ20010 43341020
         AL    R0,$JOTSIZE          AND JOT AREAS              @OZ20010 43341040
         L     R1,$JOBQPTR           PICK UP AREA ADDRESS      @OZ20010 43341060
        $PGSRVC FREE,(R1),(R0)        AND FREE ITS PAGE FRAMES @OZ20010 43341080
         SPACE 2                                               @OZ20010 43341100
         L     R1,$JBQREAD         PICK UP READ-IN AREA ADDR   @OZ20010 43341120
        $PGSRVC RLSE,(R1),(R0)      AND RELEASE ITS PAGES      @OZ20010 43341140
         EJECT                                                 @OZ20010 43341160
***************************************************************@OZ20010 43341180
*                                                              @OZ20010 43341200
*        CREATE FINAL CHECKPOINT IOB AND DEB VALUES            @OZ20010 43341220
*                                                              @OZ20010 43341240
***************************************************************@OZ20010 43341260
         SPACE 1                                               @OZ20010 43341280
         USING DEBDSECT,R1         PROVIDE DEB  ADDRESSABILITY @OZ20010 43341300
         USING $SVDSECT,R2         PROVIDE SSVT ADDRESSABILITY @OZ20010 43341320
         SPACE 1                                               @OZ20010 43341340
         L     R2,$SSVT            POINT TO SSVT                     R4 43341500
         L     R10,$HASPECB        POINT TO ECB                      R4 43342000
         L     R1,$CKPTIOB         POINT TO CHECKPOINT IOB     @OZ20010 43342500
         ST    R10,JQBECBP-JQBDSECT(,R1)  SET CHECKPOINT IOB ECBP    R4 43343000
         L     R1,$DADEBAD         POINT TO DA DEB                   R4 43343500
         L     WD,$HASPMAP         POINT TO HASP MODULE MAP          R4 43344000
         MVC   DEBAPPB,MAPIOAPG+1-MAPDSECT(WD)  USE HASP I/O APPG'S  R4 43344500
         SPACE 2                                               @OZ20010 43344700
         TM    $SVHASP,X'80'       TEST FOR JES2 RESTART             R4 43345000
         BO    NGEXITND            BR IF YES                         R4 43345500
         MVC   $SVTGTOT,NGXTGS      ELSE SET TOTAL AVAIL TRK GRPS    R4 43346000
         TM    $RUNOPTS,$RPS       TEST RPS OPTION                   R4 43346500
         BZ    NGEXITND            BR IF NOT SELECTED                R4 43347000
         SPACE 1                                                     R4 43347500
         DROP  R1,R2               KILL DEB, SSVT ADDRESSABILITY     R4 43348000
         EJECT                                                       R4 43348500
*********************************************************************** 43349000
*                                                                     * 43349500
*        CREATE ROTATIONAL POSITION SENSING TABLES                    * 43350000
*                                                                     * 43350500
*********************************************************************** 43351000
         SPACE 1                                                     R4 43351500
         USING DEBDSECT,WB         PROVIDE DEB ADDRESSABILITY        R4 43352000
         USING TEDDSECT,WC         PROVIDE TED ADDRESSABILITY        R4 43352500
         USING UCBDSECT,WD         PROVIDE UCB ADDRESSABILITY        R4 43353000
         SPACE 1                                                     R4 43353500
         ICM   WD,15,NRPSTBLN      GET SIZE OF RPS SECTOR TABLE      R4 43354000
         BZ    NGEXITND            EXIT IF NO RPS DEVICES            R4 43354500
         GETMAIN R,SP=231,LV=(WD)  GET CSA SPACE FOR SECTOR TABLE    R4 43355000
         L     WB,$DADEBAD         PREPARE TO SCAN                   R4 43355500
         LA    WB,DEBBASND-16       DEB EXTENTS                      R4 43356000
         L     WC,TEDSTART         PREPARE TO SCAN                   R4 43356500
         SH    WC,=Y(TEDSIZ)        TED ENTRIES                      R4 43357000
         SLR   WE,WE               SET INITIAL EXTENT NUMBER         R4 43357500
         LR    WF,R1               RELOAD SECTOR TABLE ADDRESS       R4 43358000
         SPACE 1                                                     R4 43358500
         USING DEBDASD,WB          PROVIDE DEB EXTENT ADDRESSABILITY R4 43359000
         SPACE 1                                                     R4 43359500
NEXTXTNT LA    WB,16(,WB)          POINT TO NEXT DEB EXTENT          R4 43360000
         LA    WC,TEDSIZ(,WC)      POINT TO NEXT TED ENTRY           R4 43360500
         CLM   WE,1,$NUMDA         TEST FOR END OF EXTENTS           R4 43361000
         BNL   NGEXITND            EXIT IF YES                       R4 43361500
         LA    WE,1(,WE)            ELSE BUMP EXTENT NUMBER          R4 43362000
         ICM   WD,7,DEBUCBA        GET UCB ADDRESS                   R4 43362500
         BZ    NEXTXTNT            BR IF NULL EXTENT                 R4 43363000
         TM    UCBTBYT2,UCBRPS     TEST DEVICE FOR RPS               R4 43363500
         BZ    NEXTXTNT            BR IF NO                          R4 43364000
         ST    WF,TRPS             SET TED RPS TABLE ADDRESS         R4 43364500
         SLR   R0,R0               FOR IEC0SCR1, DD IS &BUFSIZE AND  R4 43365000
         ICM   R0,12,$BUFSIZE       R0 = DDKR                        R4 43365500
         LR    R2,WF               FOR IECOSCR1,                     R4 43366000
         ICM   R2,8,UCBTBYT4        R2 = TAAA                        R4 43366500
         LH    R10,TNRT            GET RECORDS/TRACK THIS EXTENT     R4 43367000
         SPACE 1                                                     R4 43367500
NEXTRCD  AL    R0,=F'1'            ADD 1 TO RECORD NUMBER            R4 43368000
         AL    R2,=F'1'            ADD 1 TO SINK NUMBER              R4 43368500
         STM   R0,R15,NGEXIT       SAVE OUR REGS                     R4 43369000
         L     R15,CVTPTR             GET ADDRESS OF                 R4 43369500
         L     R15,CVT0SCR1-CVT(,R15)  IEC0SCR1                      R4 43370000
         BALR  R14,R15             LINK TO IEC0SCR1                  R4 43370500
         LM    R0,R15,NGEXIT       RESTORE OUR REGS                  R4 43371000
         BCT   R10,NEXTRCD         LOOP THRU ALL RECORDS             R4 43371500
         SPACE 1                                                     R4 43372000
         LA    WF,1(,R2)           SET DEV TBL REG FOR NEXT TIME     R4 43372500
         B     NEXTXTNT            BR TO TEST NEXT EXTENT            R4 43373000
         EJECT                                                       R4 43373500
*********************************************************************** 43374000
*                                                                     * 43374500
*        NORMAL EXIT FROM DIRECT ACCESS INITIALIZATION                * 43375000
*                                                                     * 43375500
*********************************************************************** 43376000
         SPACE 1                                                     R4 43376500
NGEXITND SLR   R1,R1               FREE                              R4 43377000
         IC    R1,$NUMDA            STORAGE                          R4 43377500
         LA    R0,2(,R1)             FOR                             R4 43378000
         MH    R0,=Y(NVLTBLN)         VOLUME                         R4 43378500
         L     R1,NVOLTABL             ALLOCATION                    R4 43379000
         FREEMAIN R,LV=(0),A=(1)        TABLE                        R4 43379500
                                   PRINT OFF - SECTION DELETED @OZ20010 43379600
*                                  THIS CARD DELETED BY APAR   @OZ20010 43379700
*                                  THIS CARD DELETED BY APAR   @OZ20010 43379800
*                                  THIS CARD DELETED BY APAR   @OZ20010 43379900
*                                  THIS CARD DELETED BY APAR   @OZ20010 43380000
                                   PRINT ON -- SECTION DELETED @OZ20010 43380100
         L     R15,=A(NCMBINIT)    POINT TO NEXT SECTION             R4 43380200
         BR    R15                  AND BR TO NEXT SECTION           R4 43380500
         EJECT                                                      R41 43381000
*********************************************************************** 43381500
*                                                                     * 43382000
*        ABNORMAL EXITS FROM DIRECT ACCESS INITIALIZATION             * 43382500
*                                                                     * 43383000
*********************************************************************** 43383500
         SPACE 1                                                     R4 43384000
NDAERR2  L     R1,=A(NDAEM2)       POINT TO ERROR MESSAGE            R4 43384500
         SLR   R0,R0                        SET                      R4 43385000
         IC    R0,$NUMDA                     MAXIMUM                 R4 43385500
         CVD   R0,NGWDBL                      SPOOL                  R4 43386000
         OI    NGWDBL+7,X'0F'                  VOLUME                R4 43386500
         UNPK  NDAEM2A-NDAEM2(,R1),NGWDBL+6(2)  COUNT                R4 43387000
         CLI   NDAEM2A-NDAEM2(R1),C'0'           IN                  R4 43387500
         BNE   SKIP850                            ERROR              R4 43388000
         MVI   NDAEM2A-NDAEM2(R1),C' '             MESSAGE           R4 43388500
SKIP850  B     NGKWIT              BR TO ISSUE MESSAGE AND QUIT      R4 43389000
         SPACE 1                                                     R4 43389500
NGCKMSGW L     R1,=A(NGCKMSG)      POINT TO MESSAGE TEXT             R4 43390000
         MVC   NGCKMSGZ-NGCKMSG(,R1),=C'WRIT'  CHANGE READ TO WRIT   R4 43390500
         SPACE 1                                                     R4 43391000
NGCKMSGR L     R1,=A(NGCKMSG)      POINT TO MESSAGE TEXT             R4 43391500
         SPACE 1                                                     R4 43392000
NGKWIT  $$WTO  (R1)                ISSUE ERROR MESSAGE TO OPERATOR   R4 43392500
         SPACE 1                                                     R4 43393000
NGQUITT $EXIT  NGQUITM             ISSUE 'QUIT' MSG AND QUIT         R4 43393500
         SPACE 1                                                     R4 43394000
         DROP  WB,WC,WD            KILL DEB, TED, UCB ADDRESSABILITY R4 43394500
         TITLE 'HASP INITIALIZATION -- DIRECT ACCESS INITIALIZATION SUBC43395000
               ROUTINES'                                             R4 43395500
*********************************************************************** 43396000
*                                                                     * 43396500
*        NGSPLGET -- SUBROUTINE TO OBTAIN AND FORMAT DYNAMIC          * 43397000
*                    SPOOL ALLOCATION WORK AREA                       * 43397500
*                                                                     * 43398000
*        WC    - SPL ADDRESS ON EXIT                                  * 43398500
*        WD    - VOLUME ALLOCATION TABLE ENTRY ADDRESS                * 43399000
*        WE    - RETURN ADDRESS                                       * 43399500
*                                                                     * 43400000
*********************************************************************** 43400500
         SPACE 1                                                     R4 43401000
         USING UCBDSECT,R1         PROVIDE UCB ADDRESSABILITY        R4 43401500
         USING SPLDSECT,WC         PROVIDE SPL ADDRESSABILITY        R4 43402000
         USING NVLDSECT,WD         PROVIDE ALLOC TBL ADDRESSABILITY  R4 43402500
         SPACE 1                                                     R4 43403000
NGSPLGET LH    WC,$NUMTGV          COMPUTE SIZE                      R4 43403500
         LA    WC,7(,WC)            OF TRACK GROUP MAP               R4 43404000
         SRL   WC,3                  FOR SINGLE VOLUME               R4 43404500
         LA    R0,SPLTGM           ADD REST OF WORK AREA             R4 43405000
         STH   R0,NGSPLLNG         SAVE WORK AREA LENGTH             R4 43405500
         ICM   R0,8,=AL1(229)      GET DYNAMIC SPOOL ALLOCATION      R4 43406000
         GETMAIN R,LV=(0)           WORK AREA FROM SUBPOOL 229       R4 43406500
         LR    WC,R1               RELOAD SPL ADDRESS                R4 43407000
         LR    R0,R1               CLEAR                             R4 43407500
         LH    R1,NGSPLLNG          SPOOL                            R4 43408000
         SLR   R15,R15               WORK                            R4 43408500
         MVCL  R0,R14                 AREA                           R4 43409000
         MVC   SPLLENG,NGSPLLNG    SET WORK AREA LENGTH              R4 43409500
         MVC   SPLFLG1,NVLFLAGS    SET REQUEST FLAGS                 R4 43410000
         MVC   SPLVOLID,NVLVOLID   SET VOLUME SERIAL                 R4 43410500
         ICM   R1,15,NVLUCBPT      IF NO UCB YET,                    R4 43411000
         BZR   WE                   RETURN                           R4 43411500
         ST    R1,SPLUCBPT           ELSE SET UCB ADDRESS            R4 43412000
         MVC   SPLUNIT,UCBNAME        AND UNIT NAME                  R4 43412500
         BR    WE                  THEN RETURN                       R4 43413000
         SPACE 1                                                     R4 43413500
NGSPLLNG DS    H                   WORK AREA LENGTH                  R4 43414000
         SPACE 1                                                     R4 43414500
         DROP  R1,WD               KILL UCB/ALLOC TBL ADDRESSABILITY R4 43415000
         EJECT                                                       R4 43415500
*********************************************************************** 43416000
*                                                                     * 43416500
*        NGALLOC -- SUBROUTINE TO ATTACH HOSPOOL TO DYNAMICALLY       * 43417000
*                   ALLOCATE AND, OPTIONALLY, FORMAT A SPOOL/         * 43417500
*                   CHECKPOINT VOLUME                                 * 43418000
*                                                                     * 43418500
*        WC    - SPL ADDRESS                                          * 43419000
*        WE    - RETURN ADDRESS                                       * 43419500
*                                                                     * 43420000
*********************************************************************** 43420500
         SPACE 1                                                     R4 43421000
NGALLOC  OC    SPLUCBPT,SPLUCBPT   IF VOLUME MOUNTED,                R4 43421500
         BNZ   NGAL                 BR TO ALLOCATE IT                R4 43422000
         L     R1,=A(NGDMSG)       POINT TO ERROR MESSAGE            R4 43422500
         MVC   NGDVOLID-NGDMSG(,R1),SPLVOLID  SET VOLUME SERIAL      R4 43423000
         B     NGKWIT              ISSUE 'NOT MOUNTED' MSG AND QUIT  R4 43423500
         SPACE 1                                                     R4 43424000
NGAL     LA    R14,=CL8'HOSPOOL'   HOSPOOL ENTRY POINT NAME          R4 43424500
         LR    R1,WC               GIVE WORK AREA TO SUBTASK         R4 43425000
         LA    R0,SPLWTECB         TERMINATION ECB ADDRESS           R4 43425500
         ATTACH EPLOC=(R14),SM=SUPV,ECB=(R0)  ATTACH HOSPOOL         R4 43426000
         ST    R1,SPLTCBPT         SAVE TCB ADDRESS                  R4 43426500
         BR    WE                   AND RETURN                       R4 43427000
         EJECT                                                       R4 43427500
*********************************************************************** 43428000
*                                                                     * 43428500
*        NGWAIT -- SUBROUTINE TO WAIT ON RETURN FROM HOSPOOL          * 43429000
*                  AND TEST FOR ANY ERRORS                            * 43429500
*                                                                     * 43430000
*        WC    - SPL ADDRESS                                          * 43430500
*        WE    - RETURN ADDRESS                                       * 43431000
*                                                                     * 43431500
*        CONDITION CODE SET TO ZERO IF NO ERRORS, ELSE NON-ZERO       * 43432000
*                                                                     * 43432500
*********************************************************************** 43433000
         SPACE 1                                                     R4 43433500
NGWAIT   WAIT  ECB=SPLWTECB        WAIT FOR HOSPOOL TO RETURN        R4 43434000
         TM    SPLFLG2,X'FF'       TEST FOR ERROR(S)                 R4 43434500
         BZR   WE                  RETURN IF NO WITH CC = 0          R4 43435000
         SPACE 1                                                     R4 43435500
NGWUNAL  L     R1,=A(NUNALMSG)     POINT TO MESSAGE TEXT             R4 43436000
         MVC   NUNALVOL-NUNALMSG(,R1),SPLVOLID  SET VOLUME SERIAL    R4 43436500
        $$WTO  (R1)                ISSUE MESSAGE TO OPERATOR         R4 43437000
         SLR   R15,R15             SET NON-ZERO CC                   R4 43437500
         BR    WE                   AND RETURN                       R4 43438000
         EJECT                                                       R4 43438500
*********************************************************************** 43439000
*                                                                     * 43439500
*        NGDETACH -- SUBROUTINE TO DETACH HOSPOOL AND TO FREE         * 43440000
*                    DYNAMIC SPOOL ALLOCATION WORK AREA               * 43440500
*                                                                     * 43441000
*        WC    - SPL ADDRESS                                          * 43441500
*        WE    - RETURN ADDRESS                                       * 43442000
*                                                                     * 43442500
*********************************************************************** 43443000
         SPACE 1                                                     R4 43443500
NGDETACH DETACH SPLTCBPT           DETACH HOSPOOL                    R4 43444000
         LH    R0,SPLLENG          GET WORK AREA LENGTH              R4 43444500
         ICM   R0,8,=AL1(229)       AND SUBPOOL NUMBER               R4 43445000
         LR    R1,WC               RELOAD WORK AREA ADDRESS          R4 43445500
         FREEMAIN R,LV=(0),A=(1)   FREE WORK AREA                    R4 43446000
         BR    WE                  THEN RETURN                       R4 43446500
         EJECT                                                       R4 43447000
*********************************************************************** 43447500
*                                                                     * 43448000
*        NGDEBSET -- SUBROUTINE TO CONSTRUCT JES2 DIRECT ACCESS       * 43448500
*                    DEB EXTENT AND TRACK EXTENT DATA AREA (TED)      * 43449000
*                                                                     * 43449500
*        WC    - SPL ADDRESS                                          * 43450000
*        WE    - RETURN ADDRESS                                       * 43450500
*        WF    - RELATIVE EXTENT NUMBER                               * 43451000
*                                                                     * 43451500
*********************************************************************** 43452000
         SPACE 1                                                     R4 43452500
         USING UCBDSECT,R1         PROVIDE UCB ADDRESSABILITY        R4 43453000
         USING DEBDSECT,R14        PROVIDE DEB ADDRESSABILITY        R4 43453500
         USING TEDDSECT,R15        PROVIDE TED ADDRESSABILITY        R4 43454000
         SPACE 1                                                     R4 43454500
NGDEBSET L     R14,$DADEBAD        POINT                             R4 43455000
         LR    R1,WF                TO JES2                          R4 43455500
         SLL   R1,4                  DIRECT ACCESS                   R4 43456000
         LA    R14,DEBBASND(R1)       DEB EXTENT                     R4 43456500
         SPACE 1                                                     R4 43457000
         USING DEBDASD,R14         PROVIDE DEB EXTENT ADDRESSABILITY R4 43457500
         SPACE 1                                                     R4 43458000
         L     R1,SPLUCBPT         GET UCB ADDRESS                   R4 43458500
         ST    R1,DEBUCBAD         SET UCB ADDRESS                   R4 43459000
         MVC   DEBSTRCC(8),SPLSTRCC EXTENT LIMITS,                   R4 43459500
         MVC   DEBNMTRK,SPLNMTRK     AND NUMBER OF TRACKS            R4 43460000
         LR    R15,WF              POINT                             R4 43460500
         MH    R15,=Y(TEDSIZ)       TO                               R4 43461000
         AL    R15,TEDSTART          TED ENTRY                       R4 43461500
         MVC   TNRT,SPLTNRT        SET RECORDS PER TRACK             R4 43462000
         MVC   TNTC,SPLTNTC        SET NUMBER OF HEADS PER CYLINDER  R4 43462500
         MVC   TNTG,SPLTNTG        SET NUMBER OF TRACKS PER GROUP    R4 43463000
         L     R0,$TGMAP           SET ADDRESS OF                    R4 43463500
         AH    R0,TNMO              START OF THIS VOLUME'S           R4 43464000
         ST    R0,TNCH               SEGMENT OF MASTER TRK GRP MAP   R4 43464500
         L     R0,SPLNUMTG         UPDATE COUNT                      R4 43465000
         AL    R0,NGXTGS            OF AVAILABLE                     R4 43465500
         ST    R0,NGXTGS             TRACK GROUPS                    R4 43466000
         TM    UCBTBYT2,UCBRPS     TEST DEVICE FOR RPS               R4 43466500
         BZ    NGDEBCEL            BR IF NO                          R4 43467000
         LH    R1,TNRT              ELSE                             R4 43467500
         LA    R1,1(,R1)             UPDATE                          R4 43468000
         AL    R1,NRPSTBLN            SIZE OF                        R4 43468500
         ST    R1,NRPSTBLN             RPS SECTOR TABLE              R4 43469000
         SPACE 1                                                     R4 43469500
NGDEBCEL MVC   TTCM,TNRT           SET MINIMUM TRACK CELL SIZE       R4 43470000
         CLC   $TCELSIZ,TNRT+1     USE RECORDS/TRACK IF $TCELSIZ     R4 43470500
         BHR   WE                   IS GREATER THAN RECORDS/TRACK    R4 43471000
         SLR   R1,R1               ELSE,                             R4 43471500
         IC    R1,$TCELSIZ          USE                              R4 43472000
         LA    R1,1(,R1)             50 PERCENT                      R4 43472500
         SRL   R1,R1                  OF                             R4 43473000
         STH   R1,TTCM                 $TCELSIZ                      R4 43473500
         BR    WE                  THEN RETURN                       R4 43474000
         DROP  R1,R14,R15          KILL UCB, DEB, TED ADDRESSABILITY R4 43474500
         EJECT                                                       R4 43475000
*********************************************************************** 43475500
*                                                                     * 43476000
*        NGBITMAP -- SUBROUTINE TO ADD BIT MAP FOR NEW VOLUME         * 43476500
*                    TO MASTER TRACK GROUP BIT MAP                    * 43477000
*                                                                     * 43477500
*        WC    - SPL ADDRESS                                          * 43478000
*        WE    - RETURN ADDRESS                                       * 43478500
*        WF    - RELATIVE EXTENT NUMBER                               * 43479000
*                                                                     * 43479500
*********************************************************************** 43480000
         SPACE 1                                                     R4 43480500
NGBITMAP LH    R1,$NUMTGV          ADD                               R4 43481000
         LA    R1,7(,R1)            BIT                              R4 43481500
         SRL   R1,3                  MAP                             R4 43482000
         LR    R15,R1                 FOR                            R4 43482500
         MR    R0,WF                   NEW                           R4 43483000
         AL    R1,$TGMAP                VOLUME                       R4 43483500
         LR    R0,R1                     TO                          R4 43484000
         LR    R1,R15                     MASTER                     R4 43484500
         LA    R14,SPLTGM                  BIT                       R4 43485000
         MVCL  R0,R14                       MAP                      R4 43485500
         BR    WE                  THEN RETURN                       R4 43486000
         EJECT                                                       R4 43486500
*********************************************************************** 43487000
*                                                                     * 43487500
*        NGCKPSET -- SUBROUTINE TO LOCATE AND SET NEW $DACKPT         * 43488000
*                    ENTRY                                            * 43488500
*                                                                     * 43489000
*        WC    - SPL ADDRESS                                          * 43489500
*        WE    - RETURN ADDRESS                                       * 43490000
*        WF    - RELATIVE $DACKPT ENTRY ON EXIT                       * 43490500
*                                                                     * 43491000
*********************************************************************** 43491500
         SPACE 1                                                     R4 43492000
         USING UCBDSECT,R15        PROVIDE UCB ADDRESSABILITY        R4 43492500
         SPACE 1                                                     R4 43493000
NGCKPSET SLR   WF,WF               INITIAL ENTRY NUMBER              R4 43493500
         L     R1,$DACKPT          GET SPOOL CHECKPOINT INFO ADDRESS R4 43494000
         CLC   $SPOOL,SPLVOLID     TEST FOR PRIMARY SPOOL VOLUME     R4 43494500
         BE    NGSETCKP            BR IF YES                         R4 43495000
         SPACE 1                                                     R4 43495500
SKIP860  LA    WF,1(,WF)           BUMP ENTRY NUMBER                 R4 43496000
         LA    R1,6(,R1)           POINT TO NEXT ENTRY               R4 43496500
         OC    0(2,R1),0(R1)       TEST FOR NULL ENTRY               R4 43497000
         BNZ   SKIP860             LOOP IF NO                        R4 43497500
         SPACE 1                                                     R4 43498000
NGSETCKP L     R15,SPLUCBPT        GET UCB ADDRESS                   R4 43498500
         MVC   0(1,R1),UCBTBYT4    SET DEVICE TYPE                   R4 43499000
         MVC   1(1,R1),SPLVOLID+5  SET VOLUME SERIAL IDENTIFIER      R4 43499500
         MVC   2(4,R1),SPLOWTRK    SET VOLUME EXTENT LIMITS          R4 43500000
         BR    WE                  THEN RETURN                       R4 43500500
         SPACE 1                                                     R4 43501000
         DROP  R15                 KILL UCB ADDRESSABILITY           R4 43501500
         EJECT                                                       R4 43502000
***************************************************************@OZ20010 43502500
*                                                              @OZ20010 43503000
*        NGCKFMC1 -- SUBROUTINE TO INITIALIZE CCW PACKETS      @OZ20010 43503500
*                    USED BY CHECKPOINT PROCESSOR              @OZ20010 43504000
*                                                              @OZ20010 43504500
*         REGISTER       INPUT           OUTPUT                @OZ20010 43505000
*                                                              @OZ20010 43505500
*           R1     CCW PACKET ADDRESS   UNCHANGED              @OZ20010 43506000
*           R3     UCB ADDRESS          UNCHANGED              @OZ20010 43506500
*           R14    RETURN ADDRESS       UNCHANGED              @OZ20010 43507000
*                                                              @OZ20010 43507500
***************************************************************@OZ20010 43508000
         SPACE 1                                               @OZ20010 43508500
         USING UCBDSECT,WB         UCB ADDRESSABILITY          @OZ20010 43509000
         USING JQBCCWE,R1          CCW PACKET ADDRESSABILITY   @OZ20010 43509500
         SPACE 2                                               @OZ20010 43510000
*        SET UP A STANDARD CCW PACKET                          @OZ20010 43510500
         SPACE 1                                               @OZ20010 43511000
NGCKFMC1 STM   R14,R12,12(R13)     SAVE REGISTERS              @OZ20010 43511500
         MVC   JQBCCWEL(NGCKPL),NGCKPTRN MOVE CCW PATTERN      @OZ20010 43512000
         LRA   R2,JQBCTRK          PLACE ADDRESS OF 00CCHH     @OZ20010 43512500
         STCM  R2,7,JQBCSEEK+1      IN SEEK CCW                @OZ20010 43513000
         SPACE 2                                               @OZ20010 43513500
*        COMPUTE RECORD SECTOR ADDRESS FOR RPS DEVICES         @OZ20010 43514000
         SPACE 1                                               @OZ20010 43514500
         TM    $RUNOPTS,$RPS       SEE IF RPS FEATURE SHOULD   @OZ20010 43515000
         BZ    NGCKFMCR             BE USED, BR IF NOT DESIRED @OZ20010 43515500
         TM    UCBTBYT2,UCBRPS     TEST FOR RPS DEVICE         @OZ20010 43516000
         BZ    NGCKFMCR             BRANCH IF NO RPS           @OZ20010 43516500
         MVI   JQBCSET,X'23'       SET NOP/SS TO 'SET SECTOR'  @OZ20010 43517000
         LRA   R2,JQBCSCTR         PLACE ADDRESS OF SECTOR NO. @OZ20010 43517500
         STCM  R2,7,JQBCSET+1       IN SET SECTOR CCW          @OZ20010 43518000
         NI    JQBCSET+4,X'FF'-X'20' TURN OFF SLI BIT IN SS    @OZ20010 43518500
         LA    R2,JQBCSCTR         PICK UP SECTOR NO. ADDR...  @OZ20010 43519000
         ICM   R2,8,UCBTBYT4        UCB DEVICE TYPE BYTE...    @OZ20010 43519500
         L     R0,JQBCCHHR+4         RECORD LENGTH...          @OZ20010 43520000
         SLL   R0,16                  AND RECORD POSITION (#)  @OZ20010 43520500
         IC    R0,JQBCRECN             FOR CONVERT ROUTINE     @OZ20010 43521000
         L     R15,CVTPTR          PICK UP CVT ADDRESS         @OZ20010 43521500
         L     R15,CVT0SCR1-CVTDSECT(,R15) PICK UP ROUTINE EP  @OZ20010 43522000
         BALR  R14,R15             CALL CONVERT ROUTINE        @OZ20010 43522500
         SPACE 2                                               @OZ20010 43523000
NGCKFMCR LRA   R2,JQBCCHHR         PLACE ADDRESS OF CCHHR      @OZ20010 43523500
         STCM  R2,7,JQBCSID+1       IN SEARCH ID EQUAL CCW     @OZ20010 43524000
         LRA   R2,JQBCSID          PLACE SEARCH ID EQUAL CMD   @OZ20010 43524500
         STCM  R2,7,JQBCTIC+1       ADDRESS IN TIC             @OZ20010 43525000
         LM    R14,R12,12(R13)     RELOAD REGISTERS            @OZ20010 43525500
         BR    R14                  AND RETURN                 @OZ20010 43526000
         EJECT                                                 @OZ20010 43526500
***************************************************************@OZ20010 43527000
*                                                              @OZ20010 43527500
*        NGCKFMC2 -- SUBROUTINE TO INITIALIZE CCW PACKETS      @OZ20010 43528000
*                    USED DURING DIRECT ACCESS INITIALIZATION  @OZ20010 43528500
*                                                              @OZ20010 43529000
*         REGISTER       INPUT           OUTPUT                @OZ20010 43529500
*                                                              @OZ20010 43530000
*           R1     CCW PACKET ADDRESS   UNCHANGED              @OZ20010 43530500
*           R3     UCB ADDRESS          UNCHANGED              @OZ20010 43531000
*           R14    RETURN ADDRESS       UNCHANGED              @OZ20010 43531500
*                                                              @OZ20010 43532000
***************************************************************@OZ20010 43532500
         SPACE 2                                               @OZ20010 43533000
*        SET UP AN INITIALIZATION CCW PACKET                   @OZ20010 43533500
         SPACE 1                                               @OZ20010 43534000
NGCKFMC2 STM   R14,R12,12(R13)     SAVE REGISTERS              @OZ20010 43534500
         MVC   JQBCCWEL(NGCKPL),NGCKPTRF MOVE CCW PATTERN      @OZ20010 43535000
         MVC   JQBCCHHR+6(2),JQBCCW5+6 COPY LENGTH TO CNT FLD  @OZ20010 43535500
         CLI   JQBCRECN,1          TEST FOR 1ST RECORD ON TRK  @OZ20010 43536000
         BNE   NGCKFMCT             BRANCH IF NOT 1ST RECORD   @OZ20010 43536500
         LRA   R2,JQBCTRK          PLACE ADDRESS OF 00CCHHR    @OZ20010 43537000
         STCM  R2,7,JQBCCW1+1       IN SEEK CCW                @OZ20010 43537500
         LRA   R2,JQBCCHH0         PLACE ADDRESS OF CCHH0      @OZ20010 43538000
         STCM  R2,7,JQBCCW2+1       IN SEARCH ID               @OZ20010 43538500
         LRA   R2,JQBCCW2          PLACE SEARCH ID EQ R0       @OZ20010 43539000
         STCM  R2,7,JQBCCW3+1       COMMAND ADDRESS IN TIC     @OZ20010 43539500
NGCKFMCT LRA   R2,JQBCCHHR         PLACE ADDRESS OF COUNT      @OZ20010 43540000
         STCM  R2,7,JQBCCW4+1       IN NOP (FOR WRITE CKD)     @OZ20010 43540500
         LA    R2,JQBCNEXT         GET ADDR OF NEXT SEEK CCW   @OZ20010 43541000
         CLC   JQBCRECN,NGCKNRT+1  TEST FOR LAST RECD ON TRK   @OZ20010 43541500
         BE    NGCKFMCE             BR IF LAST RECORD          @OZ20010 43542000
         LA    R2,JQBCNEXT+(JQBCCW4-JQBCCWE) ELSE USE NOP ADDR @OZ20010 43542500
NGCKFMCE STCM  R2,7,JQBCTNXT+5     STORE                       @OZ20010 43543000
         LRA   R2,0(,R2)            VIRTUAL AND                @OZ20010 43543500
         STCM  R2,7,JQBCTNXT+1       REAL ADDRESS IN TIC       @OZ20010 43544000
         LM    R14,R12,12(R13)     RESTORE REGISTERS           @OZ20010 43544500
         BR    R14                 EXIT TO CALLER              @OZ20010 43545000
                                   PRINT OFF - SECTION DELETED @OZ20010 43545500
*                                  THIS CARD DELETED BY APAR   @OZ20010 43546000
*                                  THIS CARD DELETED BY APAR   @OZ20010 43546500
*                                  THIS CARD DELETED BY APAR   @OZ20010 43547000
*                                  THIS CARD DELETED BY APAR   @OZ20010 43547500
*                                  THIS CARD DELETED BY APAR   @OZ20010 43548000
*                                  THIS CARD DELETED BY APAR   @OZ20010 43548500
*                                  THIS CARD DELETED BY APAR   @OZ20010 43549000
*                                  THIS CARD DELETED BY APAR   @OZ20010 43549500
*                                  THIS CARD DELETED BY APAR   @OZ20010 43550000
*                                  THIS CARD DELETED BY APAR   @OZ20010 43550500
*                                  THIS CARD DELETED BY APAR   @OZ20010 43551000
*                                  THIS CARD DELETED BY APAR   @OZ20010 43551500
*                                  THIS CARD DELETED BY APAR   @OZ20010 43552000
*                                  THIS CARD DELETED BY APAR   @OZ20010 43552500
*                                  THIS CARD DELETED BY APAR   @OZ20010 43553000
*                                  THIS CARD DELETED BY APAR   @OZ20010 43553500
*                                  THIS CARD DELETED BY APAR   @OZ20010 43554000
*                                  THIS CARD DELETED BY APAR   @OZ20010 43554500
*                                  THIS CARD DELETED BY APAR   @OZ20010 43555000
*                                  THIS CARD DELETED BY APAR   @OZ20010 43555500
*                                  THIS CARD DELETED BY APAR   @OZ20010 43556000
*                                  THIS CARD DELETED BY APAR   @OZ20010 43556500
*                                  THIS CARD DELETED BY APAR   @OZ20010 43557000
*                                  THIS CARD DELETED BY APAR   @OZ20010 43557500
*                                  THIS CARD DELETED BY APAR   @OZ20010 43558000
*                                  THIS CARD DELETED BY APAR   @OZ20010 43558500
*                                  THIS CARD DELETED BY APAR   @OZ20010 43559000
*                                  THIS CARD DELETED BY APAR   @OZ20010 43559500
*                                  THIS CARD DELETED BY APAR   @OZ20010 43560000
*                                  THIS CARD DELETED BY APAR   @OZ20010 43560500
*                                  THIS CARD DELETED BY APAR   @OZ20010 43561000
*                                  THIS CARD DELETED BY APAR   @OZ20010 43561500
*                                  THIS CARD DELETED BY APAR   @OZ20010 43562000
*                                  THIS CARD DELETED BY APAR   @OZ20010 43562500
*                                  THIS CARD DELETED BY APAR   @OZ20010 43563000
*                                  THIS CARD DELETED BY APAR   @OZ20010 43563500
*                                  THIS CARD DELETED BY APAR   @OZ20010 43564000
*                                  THIS CARD DELETED BY APAR   @OZ20010 43564500
*                                  THIS CARD DELETED BY APAR   @OZ20010 43565000
*                                  THIS CARD DELETED BY APAR   @OZ20010 43565500
*                                  THIS CARD DELETED BY APAR   @OZ20010 43566000
*                                  THIS CARD DELETED BY APAR   @OZ20010 43566500
*                                  THIS CARD DELETED BY APAR   @OZ20010 43567000
*                                  THIS CARD DELETED BY APAR   @OZ20010 43567500
*                                  THIS CARD DELETED BY APAR   @OZ20010 43568000
*                                  THIS CARD DELETED BY APAR   @OZ20010 43568500
*                                  THIS CARD DELETED BY APAR   @OZ20010 43569000
*                                  THIS CARD DELETED BY APAR   @OZ20010 43569500
*                                  THIS CARD DELETED BY APAR   @OZ20010 43570000
*                                  THIS CARD DELETED BY APAR   @OZ20010 43570500
*                                  THIS CARD DELETED BY APAR   @OZ20010 43571000
*                                  THIS CARD DELETED BY APAR   @OZ20010 43571500
*                                  THIS CARD DELETED BY APAR   @OZ20010 43572000
*                                  THIS CARD DELETED BY APAR   @OZ20010 43572500
*                                  THIS CARD DELETED BY APAR   @OZ20010 43573000
*                                  THIS CARD DELETED BY APAR   @OZ20010 43573500
*                                  THIS CARD DELETED BY APAR   @OZ20010 43574000
*                                  THIS CARD DELETED BY APAR   @OZ20010 43574500
*                                  THIS CARD DELETED BY APAR   @OZ20010 43575000
*                                  THIS CARD DELETED BY APAR   @OZ20010 43575500
*                                  THIS CARD DELETED BY APAR   @OZ20010 43576000
*                                  THIS CARD DELETED BY APAR   @OZ20010 43576500
*                                  THIS CARD DELETED BY APAR   @OZ20010 43577000
*                                  THIS CARD DELETED BY APAR   @OZ20010 43577500
*                                  THIS CARD DELETED BY APAR   @OZ20010 43578000
*                                  THIS CARD DELETED BY APAR   @OZ20010 43578500
*                                  THIS CARD DELETED BY APAR   @OZ20010 43579000
*                                  THIS CARD DELETED BY APAR   @OZ20010 43579500
*                                  THIS CARD DELETED BY APAR   @OZ20010 43580000
*                                  THIS CARD DELETED BY APAR   @OZ20010 43580500
*                                  THIS CARD DELETED BY APAR   @OZ20010 43581000
*                                  THIS CARD DELETED BY APAR   @OZ20010 43581500
*                                  THIS CARD DELETED BY APAR   @OZ20010 43582000
*                                  THIS CARD DELETED BY APAR   @OZ20010 43582500
*                                  THIS CARD DELETED BY APAR   @OZ20010 43583000
*                                  THIS CARD DELETED BY APAR   @OZ20010 43583500
*                                  THIS CARD DELETED BY APAR   @OZ20010 43584000
*                                  THIS CARD DELETED BY APAR   @OZ20010 43584500
*                                  THIS CARD DELETED BY APAR   @OZ20010 43585000
*                                  THIS CARD DELETED BY APAR   @OZ20010 43585500
*                                  THIS CARD DELETED BY APAR   @OZ20010 43586000
*                                  THIS CARD DELETED BY APAR   @OZ20010 43586500
*                                  THIS CARD DELETED BY APAR   @OZ20010 43587000
*                                  THIS CARD DELETED BY APAR   @OZ20010 43587500
*                                  THIS CARD DELETED BY APAR   @OZ20010 43588000
*                                  THIS CARD DELETED BY APAR   @OZ20010 43588500
*                                  THIS CARD DELETED BY APAR   @OZ20010 43589000
*                                  THIS CARD DELETED BY APAR   @OZ20010 43589500
*                                  THIS CARD DELETED BY APAR   @OZ20010 43590000
*                                  THIS CARD DELETED BY APAR   @OZ20010 43590500
*                                  THIS CARD DELETED BY APAR   @OZ20010 43591000
                                   PRINT ON -- SECTION DELETED @OZ20010 43591500
         EJECT                                                       R4 43592000
*********************************************************************** 43592500
*                                                                     * 43593000
*        NGEXCP -- SUBROUTINE TO READ OR WRITE JES2 JOB QUEUE         * 43593500
*                  AND JOT                                            * 43594000
*                                                                     * 43594500
*        R14   - RETURN ADDRESS                                       * 43595000
*                                                                     * 43595500
*        CONDITION CODE     ZERO ON RETURN - I/O OK                   * 43596000
*        CONDITION CODE NON-ZERO ON RETURN - I/O ERROR                * 43596500
*                                                                     * 43597000
*********************************************************************** 43597500
         SPACE 1                                                     R4 43598000
NGEXCP   L     R1,$CKPTIOB         POINT TO CHECKPOINT IOB     @OZ20010 43598500
         EXCPVR (1),SUBSYS         INITIATE I/O OPERATION      @OZ20010 43599000
         WAIT  ECB=NGECB           WAIT FOR I/O TO COMPLETE          R4 43599500
         CLI   NGECB,X'7F'         TEST FOR I/O ERROR                R4 43600000
         BR    R14                 RETURN WITH VALID CONDITION CODE  R4 43600500
         EJECT                                                      R41 43600600
*********************************************************************** 43600700
*                                                                     * 43600800
*        NGWTOR -- SUBROUTINE TO QUERY OPERATOR                       * 43600900
*                                                                     * 43601000
*        WA    - ADDRESS OF OPERATOR MESSAGE                          * 43601100
*        WE    - RETURN ADDRESS                                       * 43601200
*                                                                     * 43601300
*********************************************************************** 43601400
         SPACE 1                                                    R41 43601500
NGWTOR   MVI   NGWDBL,0            CLEAR REPLY AREA                 R41 43601600
         MVI   NGECB,0             CLEAR ECB                        R41 43601700
        $$WTOR (WA)                QUERY OPERATOR                   R41 43601800
         WAIT  ECB=NGECB           WAIT FOR RESPONSE                R41 43601900
         OI    NGWDBL,X'40'        FORCE UPPER CASE RESPONSE        R41 43602000
         CLI   NGWDBL,C'Y'         TEST REPLY                       R41 43602100
         BER   WE                  RETURN IF 'YES' WITH RC = 0      R41 43602200
         CLI   NGWDBL,C'N'         TEST REPLY                       R41 43602300
         BNE   NGWTOR              BR IF INVALID REPLY TO RE-QUERY  R41 43602400
         SLR   R1,R1               SET NON-ZERO RETURN CODE         R41 43602500
         BR    WE                   AND RETURN                      R41 43602600
         SPACE 3                                                     R4 43602700
         DROP  WC,BASE2,BASE3      KILL SPL, LOCAL ADDRESSABILITY    R4 43602800
         TITLE 'HASP INITIALIZATION -- DIRECT ACCESS INITIALIZATION AREC43602900
               AS, CONSTANTS AND LITERALS'                           R4 43603000
*        BASIC CCW PATTERN FOR READING/WRITING CHECKPOINT            R4 43603100
         SPACE 2                                                     R4 43603500
NGCKPTRN CCW   X'07',*-*,X'40',6     SEEK                      @OZ20010 43604000
         CCW   X'03',*-*,X'60',1     NOP OR SET SECTOR *+5     @OZ20010 43604500
         CCW   X'31',*-*,X'40',5     SEARCH ID EQUAL           @OZ20010 43605000
         CCW   X'08',*-*,X'00',0     TIC *-8                   @OZ20010 43605500
         CCW   X'06',*-*,X'40',4096  READ / WRITE DATA         @OZ20010 43606000
         CCW   X'08',*-*,X'20',0     TIC TO NEXT CCW PACKET    @OZ20010 43606500
NGCKPL   EQU   *-NGCKPTRN            LENGTH OF EITHER PATTERN  @OZ20010 43606700
         SPACE 2                                               @OZ20010 43607000
*        BASIC CCW PATTERN FOR CHECKPOINT INITIALIZATION       @OZ20010 43607500
         SPACE 1                                               @OZ20010 43608000
NGCKPTRF CCW   X'07',*-*,X'40',6     SEEK                      @OZ20010 43608500
         CCW   X'31',*-*,X'40',5     SEARCH ID EQUAL (R0)      @OZ20010 43609000
         CCW   X'08',*-*,X'00',0     TIC *-8                   @OZ20010 43609500
         CCW   X'1E',*-*,X'D0',8     READ / WRITE CKD          @OZ20010 43610000
         CCW   X'03',*-*,X'40',4096   WITH DATA CHAINING       @OZ20010 43610500
         CCW   X'08',*-*,X'20',0     TIC TO NEXT CCW PACKET    @OZ20010 43611000
         SPACE 1                                               @OZ20010 43611050
NGCKPNOP CCW   X'03',*-*,X'20',1     NO-OP TO END CCW CHAINS   @OZ20010 43611100
         SPACE 1                                               @OZ20010 43611200
NGWDBL   DC    D'0'                DOUBLE-WORD WORK AREA             R4 43611500
NGXTGS   DC    F'0'                TOTAL NUMBER OF TRACK GROUPS      R4 43612000
NRPSTBLN DC    F'0'                SIZE OF RPS SECTOR TABLE          R4 43612500
NVOLWKSP DC    A(*-*)              SPOOL ALLOC WORK AREA CHAIN HDR   R4 43613000
NGECB    DC    F'0'                EVENT CONTROL BLOCK               R4 43613500
NVOLTABL DS    A                   VOLUME ALLOCATION TABLE ADDRESS   R4 43614000
NGCKNRT  DS    H                   NO. OF CKPT RECORDS / TRACK @OZ20010 43614200
NGCKNTRK DS    H                   NO. OF CKPT TRACKS REQUIRED @OZ20010 43614400
         EJECT                                                       R4 43614500
*********************************************************************** 43615000
*                                                                     * 43615500
*        TABLE OF REQUIRED VALUES USED IN MESSAGE 442                 * 43616000
*                                                                     * 43616500
*********************************************************************** 43617000
         SPACE 1                                                     R4 43617500
NOLDPRMS DS    0F                                                    R4 43618000
         CLC   $BUFSIZE,$BUFSIZE-$SAVEBEG(WF)  ENTRY FOR &BUFSIZE    R4 43618500
         DC    CL8'&&BUFSIZE'                                        R4 43619000
         CLC   $MAXJOBS,$MAXJOBS-$SAVEBEG(WF)  ENTRY FOR &MAXJOBS    R4 43619500
         DC    CL8'&&MAXJOBS'                                        R4 43620000
         CLC   $NUMJOES,$NUMJOES-$SAVEBEG(WF)  ENTRY FOR &NUMJOES    R4 43620500
         DC    CL8'&&NUMJOES'                                        R4 43621000
         CLC   $MINJOES,$MINJOES-$SAVEBEG(WF)  ENTRY FOR &MINJOES    R4 43621500
         DC    CL8'&&MINJOES'                                        R4 43622000
         CLC   $SPOLMSG,$SPOLMSG-$SAVEBEG(WF)  ENTRY FOR &SPOLMSG    R4 43622500
         DC    CL8'&&SPOLMSG'                                        R4 43623000
         CLC   $NUMRJE,$NUMRJE-$SAVEBEG(WF)    ENTRY FOR &NUMRJE     R4 43623500
         DC    CL8'&&NUMRJE'                                         R4 43624000
         CLC   $NUMTGV,$NUMTGV-$SAVEBEG(WF)    ENTRY FOR &NUMTGV     R4 43624500
         DC    CL8'&&NUMTGV'                                         R4 43625000
         CLC   $NUMDA,$NUMDA-$SAVEBEG(WF)      ENTRY FOR &NUMDA      R4 43625500
         DC    CL8'&&NUMDA'                                          R4 43626000
         CLC   $TCELSIZ,$TCELSIZ-$SAVEBEG(WF)  ENTRY FOR &TCELSIZ    R4 43626500
         DC    CL8'&&TCELSIZ'                                        R4 43627000
         CLC   $RECINCR,$RECINCR-$SAVEBEG(WF)  ENTRY FOR &RECINCR    R4 43627500
         DC    CL8'&&RECINCR'                                        R4 43628000
NUMPARMS EQU   (*-NOLDPRMS)/14     NUMBER OF TABLE ENTRIES           R4 43631500
NPARMLNS EQU   (NUMPARMS+1+2)/3    LINES REQUIRED TO PRINT ENTRIES   R4 43632000
         SPACE 1                                                     R4 43632500
NPARMASK DC    C' =  ',X'2020202120'  PARM VALUE EDIT MASK           R4 43633000
         EJECT                                                       R4 43633500
*********************************************************************** 43634000
*                                                                     * 43634500
*        VOLUME ALLOCATION TABLE ENTRY DSECT                          * 43635000
*                                                                     * 43635500
*********************************************************************** 43636000
         SPACE 1                                                     R4 43636500
NVLDSECT DSECT                     ALLOCATION TABLE ENTRY DSECT      R4 43637000
NVLUCBPT DS    A                   VOLUME UCB ADDRESS                R4 43637500
NVLEND   DS    0X                  TERMINATION/EMPTY ENTRY INDICATOR R4 43638000
NVLVOLID DS    CL6                 VOLUME SERIAL NUMBER              R4 43638500
NVLFLAGS DS    X                   ALLOCATION REQUEST FLAGS          R4 43639000
         DS    0F                                                    R4 43639500
NVLTBLN  EQU   *-NVLDSECT          ALLOCATION TABLE ENTRY LENGTH     R4 43640000
         SPACE 2                                                     R4 43640500
*********************************************************************** 43641000
*                                                                     * 43641500
*        DEVICE CHARACTERISTICS TABLE ENTRY DSECT                     * 43642000
*                                                                     * 43642500
*********************************************************************** 43643000
         SPACE 1                                                     R4 43643500
NGZ      DSECT                     IECZDTAB DUMMY SECTION            R4 43644000
NGZC     DS    H                   NUMBER OF CYLINDERS PER VOLUME    R4 43644500
NGZH     DS    H                   NUMBER OF TRACKS PER CYLINDER     R4 43645000
NGZR     DS    H                   MAXIMUM TRACK LENGTH              R4 43645500
NGZO     DS    0H                  BLOCK OVERHEAD -- 2305            R4 43646000
NGZNL    DS    X                   BLOCK OVERHEAD -- KEYED           R4 43646500
NGZL     DS    X                   BLOCK OVERHEAD -- KEYED LAST      R4 43647000
NGZU     DS    X                   BLOCK OVERHEAD -- UNKEYED         R4 43647500
NGZF     DS    X                   FLAGS --                          R4 43648000
NGZFT    EQU   1                      APPLY TOLERANCE FACTOR         R4 43648500
NGZF2305 EQU   8                      DEVICE IS 2305                 R4 43649000
NGZT     DS    H                   TOLERANCE FACTOR IF SPZFT         R4 43649500
NGZA     DS    H                   NUMBER OF ALTERNATE TRACKS        R4 43650000
         SPACE 1                                                     R4 43650500
HASPINIT CSECT                     END OF IECZDTAB DUMMY SECTION     R4 43651000
         EJECT                                                       R4 43651500
         LTORG                                                       R4 43652000
         TITLE 'HASP INITIALIZATION -- HASPINIT MESSAGES'            R4 43652500
NMSG1    EQU   *                   START OF HASPINIT MESSAGE AREA    R4 43653000
         SPACE 2                                                     R4 43653500
         $MID  401                 SET MESSAGE NUMBER                R4 43654000
NXTNTMSG WTO   '&MID.EXTENT ERROR ON ******',MF=L                    R4 43654500
NXTNTVOL EQU   *-6,6               VOLUME SERIAL                     R4 43655000
         SPACE 2                                                     R4 43655500
         $MID  402                 SET MESSAGE NUMBER                R4 43656000
NEWTOM   WTO   '&MID.XXXXXXXX ATTACH ERROR - ******',MF=L            R4 43656500
NEWTON   EQU   *-30,8                                                R4 43657000
NEWTOV   EQU   *-6,6                                                 R4 43657500
         DC    C' '                SPACER                            R4 43658000
         SPACE 2                                                     R4 43658500
         $MID  411                 SET MESSAGE NUMBER                R4 43659000
NDAEM2   WTO   '&MID.MAXIMUM OF NN SPOOL VOLUME(S) EXCEEDED',MF=L    R4 43659500
NDAEM2A  EQU   *-27,2              VOLUME COUNT                      R4 43660000
         SPACE 2                                                     R4 43660500
         $MID  412                 SET MESSAGE NUMBER                R4 43661000
NURWTO   WTO   '&MID.MAXIMUM OF *** ********** EXCEEDED',MF=L       R41 43661500
NURWTOM  EQU   *-23,14             NUMBER AND DEVICE NAME           R41 43662000
         EJECT                                                       R4 43662500
         $MID  415                 SET MESSAGE NUMBER                R4 43663000
NJBQMSG  WTO  '&MID.JOB QUEUE EXCEEDS CAPACITY OF CHECKPOINT DATA SET',C43663500
               MF=L                                                  R4 43664000
         SPACE 2                                                     R4 43664500
         $MID  416                 SET MESSAGE NUMBER                R4 43665000
NMSGMSG  WTO   '&MID.OPERATOR MESSAGE SPACE NOT AVAILABLE',MF=L      R4 43665500
         SPACE 2                                                     R4 43666000
         $MID  417                 SET MESSAGE NUMBER                R4 43666500
NOUSEMSG WTO   '&MID.VOLUME ****** NOT ADDED - COMPLEX NOT DORMANT', R4C43667000
               MF=L                                                  R4 43667500
NOUSEVOL EQU   *-38,6              VOLUME SERIAL                     R4 43668000
         EJECT                                                       R4 43668500
         $MID  419                 SET MESSAGE NUMBER                R4 43669000
NMSG419  WTOR  '&MID.REPLY Y OR N TO CONFIRM RESET ON SYSTEM(S) **** **C43669500
               ** **** **** **** ****.',NGWDBL,1,NGECB,MF=L          R4 43670000
NMSG419A EQU   *-31,4                                                R4 43670500
         SPACE 2                                                     R4 43671000
         $MID  420                 SET MESSAGE NUMBER                R4 43671500
NGCKMSG  WTO   '&MID.PERM I/O ERROR READING JES2 CKPT',MF=L          R4 43672000
NGCKMSGZ EQU   *-17,4              I/O TYPE                          R4 43672500
         SPACE 2                                                     R4 43673000
         $MID  421                 SET MESSAGE NUMBER                R4 43673500
NRDERMSG WTO   '&MID.PREVIOUSLY MOUNTED VOLUME ****** IS UNFORMATTED', C43674000
               MF=L                                                  R4 43674500
NRDERVOL EQU   *-21,6              VOLUME SERIAL                     R4 43675000
         SPACE 2                                                     R4 43675500
         $MID  422                 SET MESSAGE NUMBER                R4 43676000
NDAEM1   WTO   '&MID.DUPLICATE SPOOLX VOLUMES',MF=L                  R4 43676500
NDAVOL   EQU   *-14,6              VOLUME SERIAL                     R4 43677000
         EJECT                                                       R4 43677500
         $MID  424                 SET MESSAGE NUMBER                R4 43678000
NGDMSG   WTO   '&MID.****** IS NOT MOUNTED',MF=L                     R4 43678500
NGDVOLID EQU   *-21,6              VOLUME SERIAL                     R4 43679000
         SPACE 2                                                     R4 43679500
         $MID  425                 SET MESSAGE NUMBER                R4 43680000
ISTRTEM2 WTO   '&MID.SUBSYSTEM INTERFACE NOT DORMANT',MF=L           R4 43680500
         SPACE 2                                                     R4 43681000
         $MID  426                 SET MESSAGE NUMBER                R4 43681500
NOPTMSG1 WTOR  '&MID.SPECIFY OPTIONS - HASP-II, VERSION &VERSION',   R4C43682000
               NOPTAREA,L'NOPTAREA,NOPTECB,MF=L                      R4 43682500
         SPACE 2                                                     R4 43683000
         $MID  427                 SET MESSAGE NUMBER                R4 43683500
NOPTMSG2 WTOR  '&MID.PARAMETER OR SYNTAX ERROR - RESPECIFY OPTIONS', R4C43684000
               NOPTAREA,L'NOPTAREA,NOPTECB,MF=L                      R4 43684500
         EJECT                                                       R4 43685000
         $MID  428                 SET MESSAGE NUMBER                R4 43685500
NGQUITM  WTO   '&MID.CORRECT THE ABOVE PROBLEMS AND RESTART JES2',MF=L  43686000
         SPACE 2                                                     R4 43686500
         $MID  429                 SET MESSAGE NUMBER                R4 43687000
ISTRTEM1 WTO   '&MID.SUBSYSTEM NAME NOT DEFINED',MF=L                R4 43687500
ISTRTSNM EQU   *-16,4              SUBSYSTEM NAME                    R4 43688000
         SPACE 2                                                     R4 43688500
         $MID  430                 SET MESSAGE NUMBER                R4 43689000
ISTRTEM3 WTO   '&MID.INCOMPATIBLE SUBSYSTEM INTERFACE',MF=L          R4 43689500
         SPACE 2                                                     R4 43692000
         $MID  432                 SET MESSAGE NUMBER                R4 43692500
NBFMSG   WTO   '&MID.REQUESTED JES2 BUFFERS EXCEED AVAILABLE STORAGE', C43693000
               MF=L                                                  R4 43693500
         EJECT                                                       R4 43694000
         $MID  434                 SET MESSAGE NUMBER                R4 43696000
NMSG434  WTO  '&MID.WARM START DENIED -- INVALID CHECKPOINT RECORD', R4C43696500
               MF=L                                                  R4 43697000
NMSG434A EQU   *-46,4              LOCATE 'WARM'                     R4 43697500
         SPACE 2                                                     R4 43698000
         $MID  435                 SET MESSAGE NUMBER                R4 43698500
NVALMSG  WTO   '&MID.SYSTEM PARAMETER TABLE ERROR',MF=L              R4 43699000
         SPACE 2                                                     R4 43699500
         $MID  436                 SET MESSAGE NUMBER                R4 43700000
NMSG436  WTOR  '&MID.REPLY Y OR N TO CONFIRM CHECKPOINT RECORD CHANGE',C43700500
               NGWDBL,1,NGECB,MF=L                                   R4 43701000
         EJECT                                                       R4 43701500
         $MID  439                 SET MESSAGE NUMBER                R4 43705000
NCMBMSG  WTO   '&MID.CMBS EXHAUSTED - LAST NNN OPERATOR COMMANDS IGNOREC43705500
               D',MF=L                                               R4 43706000
NCMBCT   EQU   *-30,4              COMMAND COUNT                     R4 43706500
         SPACE 2                                                     R4 43707000
         $MID  440                 SET MESSAGE NUMBER                R4 43707500
NTGBFMSG WTO   '&MID.&&BUFSIZE TOO SMALL FOR &&NUMTGV AND/OR &&NUMDA', C43708000
               MF=L                                                  R4 43708500
         EJECT                                                       R4 43709000
         $MID  441                 SET MESSAGE NUMBER                R4 43709500
NMSG441  WTOR  '&MID.REPLY Y OR N TO CONTINUE INITIALIZATION',       R4C43710000
               NPLREPLY,1,NPLECB,MF=L                                R4 43710500
         SPACE 2                                                     R4 43711000
         $MID  442                 SET MESSAGE NUMBER                R4 43711500
NPARAMSG WTO   ('&MID.WARM START DENIED',C),(' ',L),                 R4C43712000
               ('REQUIRED INITIALIZATION PARAMETERS FOLLOW --',D),   R4C43712500
               (' ',DE),ROUTCDE=(1,2),DESC=(4),MF=L                  R4 43713000
         ORG   *-59                GO BACK AND                       R4 43713500
         DC    AL1(4+NPARMLNS)      RESET LINE COUNT                 R4 43714000
         ORG   *+59-1-5            GO FORWARD TO ADD DATA LINES      R4 43714500
         DC    AL2(5),XL2'2000',C' '                                 R4 43715000
NMSGPRMS DC    (NPARMLNS)X'00402000404040404040404040404040404040404040C43715500
               40404040404040404040404040404040404040404040404040404040C43716000
               4040404040404040404040404040'                   @OZ18405 43716500
         DC    AL2(5),XL2'3000',C' '                                 R4 43717000
         ORG   NMSGPRMS+4                                            R4 43717500
         DC    C'&&SPOOL   ='                                        R4 43718000
         ORG   ,                                                     R4 43718500
NPARMSGL EQU   *-NPARAMSG          MESSAGE LENGTH                    R4 43719000
         EJECT                                                       R4 43719500
         $MID  443                 SET MESSAGE NUMBER                R4 43720000
NUNALMSG WTO   '&MID.XXXXXX NOT ALLOCATED',MF=L                      R4 43720500
NUNALVOL EQU   *-20,6              VOLUME SERIAL                     R4 43721000
         SPACE 2                                                     R4 43721500
         $MID  444                 SET MESSAGE NUMBER                R4 43722000
NRTEMSG  WTO   '&MID.DDDDDDDD PRINT/PUNCH ROUTE CODE INVALID',MF=L   R4 43722500
NRTEDEV  EQU   *-39,8              DEVICE NAME                       R4 43723000
         SPACE 2                                                     R4 43730000
         $MID  448                 SET MESSAGE NUMBER                R4 43730500
NBSPMSG  WTO   '&MID.ILLEGAL BACKSPACE CHARACTER -- RESET TO X''00''', C43731000
               MF=L                                                  R4 43731500
         EJECT                                                       R4 43732000
         $MID  450                 SET MESSAGE NUMBER                R4 43732500
NMSG450  WTO   '&MID.OPEN FAILED FOR JES2 PARAMETER LIBRARY',MF=L    R4 43733000
         SPACE 2                                                     R4 43733500
         $MID  451                 SET MESSAGE NUMBER                R4 43734000
NMSG451  WTO   '&MID.ERROR ON JES2 PARAMETER LIBRARY',MF=L           R4 43734500
         SPACE 2                                                     R4 43735000
         $MID  465                 SET MESSAGE NUMBER                R4 43735500
NLNEMSG  WTO   '&MID.RMTNNN SPECIFIES INVALID LINE VALUE ',MF=L      R4 43736000
NLNERMT  EQU   NLNEMSG+4+9+3,3                                       R4 43736500
         SPACE 2                                                    R41 43736600
         $MID  466                 SET MESSAGE NUMBER               R41 43736700
NLOGMSG  WTL   '&MID.THIS MESSAGE AREA IS TO CONTAIN A COPY OF THE INITC43736800
               IALIZATION STMNT TO BE LOGGED ',MF=L                 R41 43736900
NLOGTEXT EQU   *-80,80             MESSAGE TEXT AREA                R41 43737000
         EJECT                                                      R41 43737100
         $MID  467                 SET MESSAGE NUMBER               R41 43737200
NDIAGMSG WTL   '&MID.DIAGNOSTIC MESSAGE FOR ABOVE STATEMENT',MF=L   R41 43737300
NDIAGTXT EQU   *-38,38             STATEMENT DIAGNOSTIC             R41 43737400
         SPACE 2                                                    R41 43737500
         $MID  468                 SET MESSAGE NUMBER               R41 43737600
NLSTMSG  WTO   '&MID.KEYWORD=VALUE DISPLAY LONG ENOUGH TO ALSO DISPLAY C43737700
               MESSAGES TO OPERATOR          ',MF=L                 R41 43737800
NLSTTXT  EQU   *-80,80             TOTAL TEXT AREA                  R41 43737900
NLSTKEY  EQU   *-80,8              KEYWORD                          R41 43738000
         SPACE 2                                                    R41 43738100
         $MID  469                 SET MESSAGE NUMBER               R41 43738200
NOPRMSG  WTOR  '&MID.REPLY PARAMETER STATEMENT, CANCEL, OR END',    R41C43738300
               NLOGTEXT,L'NLOGTEXT,NPLECB,MF=L                      R41 43738400
         SPACE 2                                                    R41 43738500
         $MID  470                 SER MESSAGE NUMBER               R41 43738600
NDORMMSG WTO   '&MID.COMPLEX NOT DORMANT',MF=L                      R41 43738700
NDORMTYP EQU   *-19,7              LOCATE 'COMPLEX'                 R41 43738800
         EJECT                                                      R41 43738900
         $MID  471                 SET MESSAGE NUMBER               R41 43739000
NRESUMSG WTOR  '&MID.REPLY Y OR N TO CONTINUE COLD START',          R41C43739100
               NGWDBL,1,NGECB,MF=L                                  R41 43739200
NRESUMST EQU   *-10,4              LOCATE 'COLD'                    R41 43739300
         SPACE 2                                                     R4 43739400
         $MID  472                 SET MESSAGE NUMBER          @OZ20010 43739420
NSPECMSG WTO   '&MID.CHECKPOINT DATA SET SPECIFICATION ERROR', @OZ20010X43739440
               MF=L                                            @OZ20010 43739460
         SPACE 2                                               @OZ20010 43739480
NMSGAREA EQU   *-NMSG1             LENGTH OF HASPINIT MESSAGE AREA   R4 43739500
         TITLE 'HASP INITIALIZATION -- COMMON INTERFACE CONTROL BLOCK IC43739600
               NITIALIZATION'                                           43739700
*********************************************************************** 43739800
*                                                                     * 43739900
*        CREATE CONSOLE MESSAGE BUFFERS                               * 43740000
*                                                                     * 43740500
*********************************************************************** 43741000
         SPACE 1                                                     R4 43741500
NCMBINIT BALR  BASE2,0             RE-ESTABLISH                      R4 43742000
         USING *,BASE2              LOCAL ADDRESSABILITY                43742500
         SPACE 1                                                     R4 43743000
         USING SSVT,WA             ESTABLISH SSVT ADDRESSABILITY        43743500
         SPACE 1                                                     R4 43744000
         L     WA,$SSVT            POINT TO SSVT                     R4 43744500
         TM    $SVSTUS,$SVSTUSR    ARE WE RESTARTING                    43745000
         BZ    ICMBNEW             CREATE NEW CMBS IF NOT               43745500
         ICM   R1,15,$SVCMBAC      IS THERE ANY ACTIVITY ON CMBS        43746000
         BNZ   INSTRTEE            REFUSE TO START IF NOT ZERO          43746500
         ICM   R1,15,$SVCMBA       POINT TO CMB AREA                 R4 43747000
         BZ    ICMBNEW             BR IF NO CMBS                     R4 43747500
         L     R0,8(0,R1)          PICK UP LENGTH                       43748000
         ICM   R0,8,=AL1(231)      SET SUBPOOL                          43748500
         FREEMAIN R,LV=(0),A=(1)   FREE OLD CMB AREA                    43749000
         SLR   R0,R0               CLEAR                                43749500
         ST    R0,$SVCMBRQ          RESERVE QUEUE                       43750000
         ST    R0,$SVCOMMQ         CLEAR COMMAND QUEUE PTR           R4 43750500
         SPACE 1                                                     R4 43751000
ICMBNEW  LH    WC,$NUMCMBS         GET REQUESTED CMB COUNT           R4 43751500
         ST    WC,$SVCOMCT         SET INTO SSVT                        43752000
         LA    WC,2(0,WC)          ADD TWO TO AVOID INTERLOCKS          43752500
         MH    WC,=Y(CMBL)         GET LENGTH OF AREA                   43753000
         LA    WC,12(0,WC)         ALLOW FOR ID AND LENGTH FIELD        43753500
         LR    R0,WC               POINT FOR GETMAIN                    43754000
         ICM   R0,8,=AL1(231)      SET PROTECTED SUBPOOL                43754500
         GETMAIN R,LV=(0)          GET CMB WORK AREA                    43755000
         ST    R1,$SVCMBA          SET POINTER                          43755500
         MVC   0(8,R1),=CL8'HASP CMB'  SET IDENTIFICATION               43756000
         ST    WC,8(0,R1)          SET LENGTH OF AREA                   43756500
         AR    WC,R1               POINT TO END + 1                     43757000
         LA    R1,12(0,R1)         POINT TO FIRST CMB                   43757500
         ST    R1,$SVCMBFQ         SET FREE QUEUE                       43758000
         SPACE 1                                                     R4 43758500
ICMBGENL LR    R15,R1              BRING UP REAR                        43759000
         AH    R1,=Y(CMBL)         UP TO NEXT CMB                       43759500
         ST    R1,CMBCMB-CMB(,R15) SET CHAIN                         R4 43760000
         CR    R1,WC               CHECK FOR END                        43760500
         BL    ICMBGENL            LOOP                                 43761000
         XC    CMBCMB-CMB(,R15),CMBCMB-CMB(R15) ZERO CHAIN           R4 43761500
         EJECT                                                          43762000
*********************************************************************** 43762500
*                                                                     * 43763000
*        QUEUE PARAMETER LIBRARY COMMANDS                             * 43763500
*                                                                     * 43764000
*********************************************************************** 43764500
         SPACE 1                                                     R4 43765000
         ICM   WC,15,NCOMMTAB      POINT TO 1ST TEMP COMMAND AREA    R4 43765500
         BZ    IBLDSSVT            BR IF NONE                        R4 43766000
         L     WB,$SVCOMCT          ELSE GET RESERVED CMB COUNT      R4 43766500
         SLR   WE,WE               CLEAR FOR COUNT                   R4 43767000
         L     R15,CVTPTR            GET                            R41 43767100
         L     R15,CVTCUCB-CVT(,R15)  UCM ID                        R41 43767200
         SL    R15,=F'4'               OF CURRENT                   R41 43767300
         L     R15,0(,R15)              MASTER                      R41 43767400
         L     R15,0(,R15)               CONSOLE                    R41 43767500
         MVC   CMBUCM-CMBFLAG+IQUECMBH,UCMID-UCMLIST(R15)           R41 43767600
         SPACE 1                                                     R4 43767700
         USING CMBDSECT,WD         PROVIDE CMB ADDRESSABILITY        R4 43768000
         SPACE 1                                                     R4 43768500
IQUECOMM L     WD,$SVCMBFQ         DE-CHAIN NEXT                     R4 43769000
         MVC   $SVCMBFQ(4),CMBCMB   CMB ON FREE CHAIN                R4 43769500
         MVC   CMBCMB,$SVCOMMQ     LIFO QUEUE DE-CHAINED             R4 43770000
         ST    WD,$SVCOMMQ          CMB ON $SVCOMMQ                  R4 43770500
         MVC   CMBFLAG(14),IQUECMBH SET CMB HEADER                   R4 43771000
         MVC   CMBFM,$SYSID        RESPOND TO THIS SYSTEM            R4 43771500
         MVC   CMBMSG(71),8(WC)    MOVE COMMAND TO CMB               R4 43772000
         SPACE 1                                                     R4 43772500
ICMBFREE LR    R1,WC               RELOAD TEMP COMMAND AREA ADDRESS  R4 43773000
         L     WC,0(,WC)           POINT TO NEXT TEMP CMD AREA       R4 43773500
         FREEMAIN R,LV=80,A=(1),SP=229  FREE CURRENT TEMP CMD AREA   R4 43774000
         LTR   WC,WC               TEST FOR ANOTHER COMMAND          R4 43774500
         BZ    ICMBXS              BR IF NO                          R4 43775000
         BCT   WB,IQUECOMM         BR IF ANOTHER RESERVED CMB        R4 43775500
         SPACE 1                                                     R4 43776000
         LA    WB,1                RESET RESERVED COUNT              R4 43776500
         LA    WE,1(,WE)           BUMP 'IGNORED' COMMAND COUNT      R4 43777000
         B     ICMBFREE             AND BR TO FREE TEMP MSG AREA     R4 43777500
         EJECT                                                      R41 43778000
ICMBXS   LTR   WE,WE               TEST 'IGNORED' COMMAND COUNT      R4 43778500
         BZ    ICMBCT              BR IF COUNT IS ZERO               R4 43779000
         CVD   WE,INITDBL          CONVERT EXCESS TO PACKED DECIMAL  R4 43779500
         L     R1,=A(NCMBMSG)      POINT TO WARNING MESSAGE          R4 43780000
         MVC   NCMBCT+1-NCMBMSG(3,R1),=X'202120'  SET EDIT MASK      R4 43780500
         ED    NCMBCT-NCMBMSG(,R1),INITDBL+6  EDIT EXCESS INTO MSG   R4 43781000
        $$WTO  (R1)                ISSUE WARNING MESSAGE TO OPERATOR R4 43781500
         SPACE 1                                                     R4 43782000
         DROP  WD                  KILL CMB ADDRESSABILITY           R4 43782500
         SPACE 1                                                     R4 43783000
ICMBCT   BCTR  WB,0                DECREMENT RESERVED COUNT          R4 43783500
         ST    WB,$SVCOMCT         SET RESERVED COUNT                R4 43784000
         EJECT                                                          43784500
*********************************************************************** 43785000
*                                                                     * 43785500
*        BEGIN INITIALIZATION OF SSVT                                 * 43786000
*                                                                     * 43786500
*********************************************************************** 43787000
         SPACE 1                                                     R4 43787500
IBLDSSVT MVC   $SVOUTXS,$OUTXS     SET OUTPUT EXCESSION MSG INCRE    R4 43788000
         MVC   $SVOUTOP,$OUTPOPT   SET OUTPUT EXCESSION OPTION       R4 43788500
         NI    $SVSTUS,255-$SVSTXST-$SVSTIDS  RESET RUN OPTIONS      R4 43789000
         TM    $RUNOPTS,$TIMEOPT   TEST TIME EXCESSION OPTION        R4 43789500
         BZ    SKIP870             BR IF NOT SELECTED                R4 43790000
         OI    $SVSTUS,$SVSTXST     ELSE INDICATE OPTION IN SSVT     R4 43790500
SKIP870  TM    $RUNOPTS,$MSGID     TEST FOR FULL MESSAGE IDS         R4 43791000
         BZ    SKIP880             BR IF OPTION NOT SELECTED         R4 43791500
         OI    $SVSTUS,$SVSTIDS     ELSE INDICATE OPTION IN SSVT     R4 43792000
SKIP880  MVC   $SVROUT,$NUMRJE     SET REMOTE TERMINAL COUNT         R4 43792500
         MVC   $SVTO,$SYSID        SET THIS SYSTEM'S MESSAGE ROUTE   R4 43793000
         MVC   $SVCOMCH,$CCOMCHR   SET HASP COMMAND CHARACTER        R4 43793500
         MVC   $SVCOMM(IPCESL),IPCES  INSERT $$POST ELEMENTS         R4 43794000
         L     R1,PSAAOLD-PSA      PICK UP ADDRESS OF OUR ASCB          43794500
         ST    R1,$HASCB           SET IN HCT                        R4 43795000
         ST    R1,$SVQLOKE+16      SET LOCK ELEMENT ASCB ADDRESS        43795500
         ST    R1,$SVPOSTE+4       SET POST ELEMENT ASCB ADDRESS        43796000
         L     R1,$HASPMAP         POINT TO HASP MODULE MAP          R4 43796500
         L     R1,MAPSSSMA-MAPDSECT(,R1)  POINT TO SSSM              R4 43797000
         CLI   0(R1),$SVENTL       CHECK LENGTH OF ADCON VECTOR     R41 43797100
         BNE   INOTCOMP            BR IF NOT CORRECT                R41 43797200
         L     R1,0(,R1)           POINT TO ADCON VECTOR            R41 43797300
         LR    R15,WA              POINT TO                             43797500
         SL    R15,=F'8'            SSVT PREFIX                         43798000
         TM    $SVSTUS,$SVSTUSR    ARE WE RESTARTING                    43798500
         BO    ICLCFUN             IF SO INSURE SAME SSSM               43799000
         MVC   0(4,R15),=C'SSVT'   SET SSVT ID                       R4 43799500
         MVC   SSVTFNUM,ISVTFNUM   INSERT NUMBER OF FUNCTIONS           43800000
         MVC   SSVTFCOD(IFUNL),ISVTFUNS MOVE FUNCTION OFFSETS           43800500
         MVC   $SVSOUT($SVENTL),0(R1)  COPY ENTRIES                 R41 43801000
         MVC   $SVNTGBE,$NUMTGBE   SET MAX TG'S PER TGB              R4 43801500
         MVC   $SVCENQ(IENQPL),IENQP  SET CELL ENQ PATTERN              43802000
         LA    R1,$SVQNAM          SET ADDRESS                          43802500
         ST    R1,$SVCENQ+4         OF QNAME                            43803000
         LA    R1,$SVCRNAM         SET ADDRESS                          43803500
         ST    R1,$SVCENQ+8         OF RNAME                            43804000
         MVC   $SVQNAM(4),=CL4'SYSZ'  SET FIRST PART OF QNAME           43804500
         MVC   $SVCRNAM,=CL4'CELL' SET RNAME FOR CELL CONTROL           43805000
         MVI   $SVCPOST,X'FF'      INDICATE NO CELLS DESIRED            43805500
         LA    R1,$SVBR14          GET ADDRESS OF BR 14                 43806000
         ST    R1,$SVCPOST+8       SET                                  43806500
         ST    R1,$SVQLOKE+20       ERROR                               43807000
         ST    R1,$SVPOSTE+8         RETURNS                            43807500
         MVC   $SVQLOKE,$SVSSNM    SET QUEUE LOCK ELEMENT HEADER        43808000
         LA    R1,$SVRETN          GET ADDRESS OF RETURN ROUTINE        43808500
         ST    R1,$SVSMFSO         SET DEFAULT                          43809000
         ST    R1,$SVSMFJP          SMF EXITS                           43809500
         MVC   $SVRETN(4),=XL4'1FFF07FE'  SET RETURN ROUTINE            43810000
         EJECT                                                          43810500
*********************************************************************** 43811000
*                                                                     * 43811500
*        BUILD HASP ADDRESS SPACE VECTOR TABLE                        * 43812000
*                                                                     * 43812500
*********************************************************************** 43813000
         SPACE 3                                                        43813500
         L     R1,CVTPTR           GET ADDRESS OF CVT                   43814000
         L     R1,CVTASVT-CVT(,R1) GET ADDRESS OF SYSTEM ASVT           43814500
         L     R1,ASVTMAXU-ASVT(,R1)  GET MAXIMUM ADDRESS SPACES        43815000
         ALR   R1,R1               MULTIPLY BY FOUR                     43815500
         LA    R3,4(R1,R1)          AND ADD FOUR                        43816000
         GETMAIN R,SP=241,LV=(R3)  GET COMMON STORAGE                   43816500
         LR    R0,R2               SAVE REGISTER 2                      43817000
         LR    R2,R1               SET ADDRESS TO CLEAR                 43817500
         SLR   R5,R5                AND PAD CHARACTER                   43818000
         MVCL  R2,R4               CLEAR THE HAVT                       43818500
         LR    R2,R0               RESTORE REGISTER 2                   43819000
         MVC   0(4,R1),=CL4'HAVT'  SET CONTROL BLOCK ID                 43819500
         ST    R1,$SVHAVT          SET ADDRESS OF THE HAVT              43820000
         B     ISVTSCAT            COMPLETE SSVT INITIALIZATION         43820500
         SPACE 3                                                        43821000
ICLCFUN  CLC   0(4,R15),=C'SSVT'   CHECK SSVT ID                     R4 43821500
         BNE   INOTCOMP            ERROR IF NOT SAME                    43822000
         CLC   SSVTFNUM,ISVTFNUM   DOES FUNCTION AREA MATCH             43822500
         BNE   INOTCOMP            IF NOT ERROR EXIT                    43823000
         CLC   SSVTFCOD(IFUNL),ISVTFUNS  CHECK FUNCTION OFFSETS         43823500
         BNE   INOTCOMP            ERROR IF NOT SAME                    43824000
         CLC   $SVNTGBE,$NUMTGBE   TEST MAX TG'S PER TGB             R4 43824500
         BNE   INOTCOMP            ERROR IF NOT SAME                 R4 43825000
         CLC   $SVSOUT($SVENTL),0(R1)  CHECK SAME SSSM              R41 43825500
         BE    ISVTSCAT            BRANCH IF SAME SSSM                  43826000
         SPACE 2                                                        43826500
INOTCOMP $EXIT ISTRTEM3            ISSUE ERROR MSG AND QUIT          R4 43827000
         SPACE 2                                                        43827500
INSTRTEE $EXIT ISTRTEM2            ISSUE ERROR MSG AND QUIT          R4 43828000
         EJECT                                                          43828500
*********************************************************************** 43829000
*                                                                     * 43829500
*        COMPLETE INITIALIZATION OF SSVT                              * 43830000
*                                                                     * 43830500
*********************************************************************** 43831000
         SPACE 3                                                        43831500
ISVTSCAT NULL                      COMPLETE SSVT                        43832000
         LA    R0,57               PREPARE TO SCAN                   R4 43832500
         L     R1,=A(NSCAT+3*64)    SYSOUT CLASS                     R4 43833000
         LR    WB,R1                 ATTRIBUTE TABLE                 R4 43833500
         SPACE 1                                                     R4 43834000
ISETSCAT LA    R1,1(,R1)           POINT TO NEXT SCAT ENTRY          R4 43834500
         TM    SCATFLAG-SCADSECT(R1),SCATPNCH+SCATPLOT+SCATINVL         43835000
         BNZ   *+8                 BRANCH IF PUNCH OR INVALID           43835500
         OI    SCATFLAG-SCADSECT(R1),SCATPRNT  SET PRINT INDICATION     43836000
         BCT   R0,ISETSCAT         GET NEXT ENTRY                       43836500
         SPACE 1                                                     R4 43837000
         MVC   $SVSCAT+3*64(64),0(WB)  MOVE SCAT TO SSVT                43837500
         MVC   $SVBAKSP,$BSPACE    SET CONSOLE BACKSPACE CHARACTER   R4 43838000
         MVC   $SVBFSIZ,$BUFSIZE   SET HASP BUFFER SIZE              R4 43838500
         LH    R1,$BUFSIZE            COMPUTE                        R4 43839000
         SL    R1,=A(HQTHQR-HQTSTART)  AND                           R4 43839500
         D     R0,=A(HQRLENG)           SET                          R4 43840000
         ST    R1,$SVHQRCT               MAX HQRS IN HQT             R4 43840500
         MVC   $SVMAPL,$CYLMAPL    SET DA ALLOCATION MAP LENGTH      R4 43841000
         MVC   $SVNUMDA,$NUMDA     SET NO. OF DIRECT ACCESS VOLUMES  R4 43841500
         MVC   $SVPDDB1,$IOTPDDB   SET OFFSET WITHIN IOT OF 1ST PDDB R4 43842000
         MVC   $SVRINCR,$RECINCR   SET RECORD ALTERNATION PARAMETER  R4 43842500
         MVC   $SVTKCEL,$TCELSIZ   SET TRAKCELL SIZE                 R4 43843000
         L     R1,=A(NXPRITAB)     MOVE JOB OUTPUT                   R4 43843500
         MVC   $SVXPRI(10*4),0(R1)  PRIORITY TABLE TO SSVT           R4 43844000
         MVC   $SVNOSYS+1(1),$SYSID  SET SYSTEM ID                   R4 43845000
         MVI   $SVNOUNT+1,255      SET MAXIMUM LOCAL UNITS ROUTE     R4 43847500
         MVC   $SVSID,$SID         SET SYSTEM ID               @OZ18212 43847600
         EJECT                                                       R4 43848000
*********************************************************************** 43848500
*                                                                     * 43849000
*        INITIALIZE PARTITION INFORMATION TABLES                      * 43849500
*                                                                     * 43850000
*********************************************************************** 43850500
         SPACE 3                                                        43851000
         L     WD,$PITABLE         GET ADDRESS OF TEMPORARY PITS     R4 43851500
         ICM   R1,15,$SVPIT        GET ADDRESS OF EXISTING PITS      R4 43852000
         ST    R1,$PITABLE         STORE IN HCT                         43852500
         BZ    NEWPITS             BR IF NO EXISTING PITS            R4 43853000
         TM    $SVHASP,X'80'       TEST INITIALIZATION STATUS           43853500
         BZ    NEWPITS             BR IF NOT JES2 RESTART            R4 43854000
         SL    R1,=F'8'            BACK UP TO PIT STORAGE PREFIX     R4 43854500
         MVC   $MAXCLAS,6(R1)      USE EXISTING JOB CLASS COUNT      R4 43855000
         B     NURALL              THEN BR TO NEXT SECTION           R4 43855500
         SPACE 1                                                     R4 43856000
NEWPITS  SLR   WB,WB               ZERO                              R4 43856500
         ST    WB,$SVPIDLE         PIT IDLE COUNT                       43857000
         IC    WB,$MAXCLAS              WC = INDIVIDUAL              R4 43857500
         LA    WC,PITCLASS+1+3-PITDSECT(,WB)  PIT                    R4 43858000
         N     WC,=F'-4'                       LENGTH                R4 43858500
         LH    R15,$MAXPART        WB = TOTAL                        R4 43859000
         MR    R14,WC                    PIT                         R4 43859500
         LA    WB,8(,R15)                 SIZE                       R4 43860000
         LTR   R1,R1               TEST                                 43860500
         BZ    NGETPIT             BRANCH IF NO PITS                    43861000
         SL    R1,=F'8'            GET ADDRESS OF PIT PREFIX            43861500
         CLC   0(4,R1),=CL4'PIT'   CHECK PIT ID                         43862000
         BNE   NGETPIT             IGNORE SPACE IF INVALID ID           43862500
         LH    R0,4(,R1)           GET PIT STORAGE SIZE              R4 43863000
         ICM   R0,8,=AL1(241)      GET SUBPOOL NUMBER                   43863500
         FREEMAIN R,LV=(0),A=(1)   FREE PITS                            43864000
         SPACE 2                                                        43864500
NGETPIT  GETMAIN R,SP=241,LV=(WB)  GET COMMON STORAGE FOR PITS          43865000
         MVC   0(4,R1),=CL4'PIT'   SET PIT ID                           43865500
         STH   R0,4(,R1)            AND LENGTH                       R4 43866000
         MVC   6(1,R1),$MAXCLAS    SAVE JOB CLASS COUNT              R4 43866500
         EJECT                                                       R4 43867000
NMOVEPIT LA    WF,8(,R1)           POINT TO 1ST PIT ELEMENT          R4 43867500
         ST    WF,$SVPIT           SET IN SSVT                       R4 43868000
         ST    WF,$PITABLE          AND IN HCT                       R4 43868500
         LR    R1,WD               SAVE POINTER TO TEMPORARY PITS    R4 43869000
         LH    R0,$MAXPART         GET NUMBER OF PITS                R4 43869500
         SLR   WB,WB               GET NUMBER                        R4 43870000
         IC    WB,$MAXCLAS          OF JOB CLASSES                   R4 43870500
         LA    WE,PITCLASS-1-PITDSECT(,WB)  SET LENGTH               R4 43871000
         STC   WE,NPITMOVE+1                 OF PIT MOVE             R4 43871500
         SPACE 1                                                     R4 43872000
         USING PITDSECT,WE         PROVIDE PIT ADDRESSABILITY        R4 43872500
         SPACE 1                                                     R4 43873000
NEXTPIT  LR    WE,WF               POINT TO NEXT PIT                 R4 43873500
         ALR   WF,WC               SUPPLY NEXT CHAIN POINTER         R4 43874000
         SPACE 1                                                     R4 43874500
NPITMOVE MVC   PITDSECT(*-*),0(WD) MOVE NEXT TEMPORARY PIT           R4 43875000
         ST    WF,PITNEXT          SET CHAIN ADDRESS                 R4 43875500
         LA    R15,PITCLASS(WB)    SET JOB CLASS                     R4 43876000
         MVI   0(R15),C' '          TERMINATOR                       R4 43876500
         L     WD,PITNEXT-PITDSECT(,WD)  POINT TO NEXT TEMPORARY PIT R4 43877000
         BCT   R0,NEXTPIT          LOOP THRU ALL REQUESTED PITS      R4 43877500
         SPACE 1                                                     R4 43878000
         ST    R0,PITNEXT          ZERO LAST CHAIN ADDRESS           R4 43878500
         B     NURALL              THEN BR TO NEXT SECTION           R4 43879000
         SPACE 1                                                     R4 43879500
         DROP  WA,WE               KILL SSVT, PIT ADDRESSABILITY     R4 43880000
         EJECT                                                       R4 43880500
ISVTFNUM DC    Y(($SVRETID-$SVNULL)/4)  NUMBER OF FUNCTIONS             43881000
ISVTFUNS $SVTC                     GENERATE FUNCTION OFFSETS            43881500
IFUNL    EQU   *-ISVTFUNS                                               43882000
SENTRIES EQU   16                  ENTRY POINTER SECTION OF SSSM        43882500
         SPACE 1                                                        43883000
IENQP    ENQ   (*-*,*-*,E,4,SYSTEM),MF=L  CELL CONTROL ENQ PATTERN      43883500
IENQPL   EQU   *-IENQP             LENGTH OF PATTERN                    43884000
         SPACE 1                                                     R4 43884500
IPCES    EQU   $COMMPCE            1ST $$POST ELEMENT                R4 43885000
IPCESL   EQU   $SVPCENO*4          ALL $$POST ELEMENTS               R4 43885500
IQUECMBH DC    AL1(CMBFLAGC+CMBFLAGU,$ALWAYS+$HI,0,71),AL2(0,256,0,0,0) 43886000
         EJECT                                                          43886500
         LTORG                     DEFINE LITERALS FOR SSVT SETUP       43887000
         TITLE 'HASP INITIALIZATION -- UNIT RECORD DEVICE ALLOCATION'   43887500
IECITMOD EQU   X'18'               HASP ATTENTION INDEX                 43888000
         SPACE 1                                                     R4 43888500
NURALL   BALR  BASE2,0             RE-ESTABLISH                      R4 43889000
         USING *,BASE2              LOCAL ADDRESSABILITY                43889500
         SPACE 1                                                     R4 43890000
         SLR   R0,R0               CLEAR FOR INSERTS                 R4 43890500
         IC    R0,$NUMRDRS         INITIALIZE                        R4 43891000
         LA    R1,NURRDR            READER ENTRY IN                  R4 43891500
         BAL   WE,NURDEVS            DEVICE ALLOCATION TABLE         R4 43892000
         IC    R0,$NUMPUNS         INITIALIZE                        R4 43892500
         LA    R1,NURPUN            PUNCH ENTRY IN                   R4 43893000
         BAL   WE,NURDEVS            DEVICE ALLOCATION TABLE         R4 43893500
         IC    R0,$NUMPRTS         INITIALIZE                        R4 43894000
         LA    R1,NURPRT            PRINTER ENTRY IN                 R4 43894500
         BAL   WE,NURDEVS            DEVICE ALLOCATION TABLE         R4 43895000
         LH    R0,$NUMLNES         INITIALIZE                        R4 43895500
         LA    R1,NURLNE            LINE ENTRY IN                    R4 43896000
         LA    WE,NURSSVT            DEVICE ALLOCATION TABLE         R4 43896500
         SPACE 1                                                     R4 43897000
NURDEVS  CVD   R0,INITDBL          FORMAT                            R4 43897500
         OI    INITDBL+7,X'0F'      DEVICE                           R4 43898000
         UNPK  1(3,R1),INITDBL       COUNT                          R41 43898500
         CLI   1(R1),C'0'             IN                             R4 43899000
         BNER  WE                      MESSAGE                       R4 43899500
         MVC   1(3,R1),2(R1)            SEGMENT                     R41 43900000
         CLI   1(R1),C'0'                OF                         R41 43900100
         BNER  WE                         U/R                       R41 43900200
         MVC   1(3,R1),2(R1)               DEVICE                   R41 43900300
         BR    WE                           TABLE                   R41 43900500
         EJECT                                                      R41 43901000
NURSSVT  L     R10,$SSVT           GET ADDRESS OF SSVT               R4 43901500
         USING SSVT,R10            ESTABLISH SSVT ADDRESSABILITY        43902000
         TM    $SVSTUS,$SVSTUSP    TEST SUBSYSTEM STATUS                43902500
         BZ    NURAL01             BRANCH IF NOT PRIMARY SUBSYSTEM      43903000
         L     R1,PSAAOLD-PSA      GET ADDRESS OF SUBSYSTEM ASCB        43903500
         LH    R0,ASCBASID-ASCB(,R1)  GET SUBSYSTEM ASID                43904000
         ICM   R0,8,=AL1(ATBLLKR)  INDICATE LOCAL LOCK REQUIRED         43904500
         L     R1,$HASPMAP         POINT TO HASP MODULE MAP          R4 43905000
         L     R1,MAPATTNA-MAPDSECT(,R1)  POINT TO ATTENTION ROUTINE R4 43905500
         L     WA,CVTPTR           GET ADDRESS OF CVT                   43906000
         L     WA,CVTIXAVL-CVT(,WA)  GET ADDRESS OF IOCOM               43906500
         L     WA,IOCATTBL-IOCOM(,WA)  GET ADDRESS OF ATTENTION TABLE   43907000
         MODESET EXTKEY=ZERO       SET ZERO PROTECT KEY                 43907500
         STM   R0,R1,ATBFLA+2*IECITMOD-ATB(WA)  SET ATTN TABLE ENTRY    43908000
         MODESET EXTKEY=HASP       RESET HASP PROTECT KEY               43908500
         SPACE 1                                                     R4 43909000
NURAL01  MVC   NURDEB+1(3),$HASPTCB+1  SET TCB ADDRESS IN DEB           43909500
         L     WA,CVTPTR           GET ADDRESS OF CVT                   43910000
         L     WA,CVTILK2-CVT(,WA) GET START OF UCB LOOK-UP TABLE       43910500
         SH    WA,=H'2'             LESS 2                           R4 43911000
         SR    WB,WB               ZERO UCB ADDR REG                    43911500
         EJECT                                                       R4 43912000
NXTENTRY LA    WA,2(,WA)           STEP TO NEXT LOOKUP TABLE ENTRY   R4 43912500
         ICM   WB,3,0(WA)          GET ADDRESS OF NEXT UCB              43913000
         BZ    NXTENTRY            IGNORE IF NULL                    R4 43913500
         CL    WB,=F'65535'        TEST FOR X'FFFF'                     43914000
         BE    NURAL10             EXIT IF ALL UCB'S PROCESSED          43914500
         USING UCBDSECT,WB         ESTABLISH UCB ADDRESSABILITY         43915000
         LA    WC,NURTAB           GET ADDRESS OF DEVICE TYPE TABLE     43915500
         LA    R0,(NURTABE-NURTAB)/4  GET NUMBER OF ENTRIES             43916000
         SPACE 1                                                     R4 43916500
NURAL02  CLC   0(2,WC),UCBTBYT3    COMPARE DEVICE TYPE WITH UCB TYPE    43917000
         BE    NURAL03             BRANCH IF DEVICE TYPE FOUND          43917500
         LA    WC,4(,WC)           STEP TO NEXT ENTRY                   43918000
         BCT   R0,NURAL02          TRY NEXT ENTRY                       43918500
         B     NXTENTRY            DEVICE TYPE NOT FOUND, LOOP       R4 43919000
         SPACE 1                                                     R4 43919500
NURAL03  L     R15,CVTPTR          GET ADDRESS OF CVT                   43920000
         L     R15,CVTILK2-CVT(,R15)  GET START OF UCB LOOK-UP TABLE    43920500
         SH    R15,=H'2'               LESS 2                        R4 43921000
         SR    R1,R1               ZERO REG FOR UCB ADDRESS             43921500
         SPACE 1                                                     R4 43922000
NEXTDEV  LA    R15,2(,R15)         STEP TO NEXT LOOKUP TABLE ENTRY   R4 43922500
         ICM   R1,3,0(R15)         GET ADDRESS OF NEXT UCB              43923000
         CLR   R1,WB               COMPARE UCB ADDRESS WITH CURRENT     43923500
         BNE   NEXTDEV             TRY AGAIN IF NO MATCH             R4 43924000
         CLR   WA,R15              COMPARE LOOK-UP TABLE ADDRESSES      43924500
         BNE   NXTENTRY            DUPLICATE CHN PATH IF DIFFERENT   R4 43925000
         SPACE 1                                                     R4 43925500
         MVI   NURCSW+4,X'02'      INITIALIZE IOB FIELDS                43926000
         MVI   NURSIOCC,X'30'       TO SIMULATE SIO FAILURE             43926500
         LH    R1,2(,WC)           GET ALLOCATION TABLE OFFSET       R4 43927000
         LA    R1,NURDEVTB(R1)     GET ALLOCATION ENTRY FOR THIS UCB R4 43927500
         CLI   0(R1),X'FF'         TEST ALLOCATION TYPE              R4 43928000
         BE    NURAL04             BRANCH IF DESIGNATED UCB REQUIRED R4 43928500
         TM    UCBSTAT,UCBONLI+UCBCHGS  TEST UCB STATUS                 43929000
         BNM   NURAL04             BRANCH IF NOT ONLINE                 43929500
         MVI   NURSIOCC,0          RESET SIO CONDITION CODE             43930000
         TM    UCBSTAT,UCBALOC     TEST UCB STATUS                      43930500
         BO    NURAL04             BRANCH IF DEVICE IS ALLOCATED        43931000
         TM    UCBFL1,X'FE'        TEST UCB FLAGS                       43931500
         BNZ   NURAL04             BRANCH IF DEVICE IS NOT AVAILABLE    43932000
         XC    NURECB,NURECB       CLEAR ECB                            43932500
         MVI   NURIOB,X'02'        PRESET IOBFLAG1                      43933000
         STCM  WB,7,NURUCB+1       SET ADDRESS OF UCB IN DEB            43933500
         EXCP  NURIOB              INITIATE I/O                         43934000
         WAIT  ECB=NURECB          WAIT FOR I/O TO COMPLETE             43934500
         EJECT                                                       R4 43935000
NURAL04  NI    NURALSW+1,X'0F'     INDICATE DEVICE NOT ASSIGNED         43935500
         LA    WD,$DCTPOOL-(DCTCHAIN-DCTDSECT)  PREPARE TO SCAN DCTS R4 43936000
         B     NURAL06             GO DO IT                          R4 43936500
         SPACE 1                                                     R4 43937000
         USING DCTDSECT,WD         ESTABLISH DCT ADDRESSABILITY         43937500
         SPACE 1                                                     R4 43938000
NURAL05  CLC   UCBNAME,DCTBUFAD    TEST DCT DESIGNATION              R4 43938500
         BNE   NURAL06             BRANCH IF THIS UCB NOT DESIGNATED    43939000
         BAL   WE,NURALLOC         ATTEMPT TO ALLOCATE DEVICE           43939500
         OI    NURALSW+1,X'F0'     INDICATE DEVICE ASSIGNED             43940000
         SPACE 1                                                     R4 43940500
NURAL06  ICM   WD,7,DCTCHAIN+1     GET ADDRESS OF NEXT DCT              43941000
         BNZ   NURAL05             PROCESS NEXT DCT                     43941500
         SPACE 1                                                     R4 43942000
NURALSW  NOP   NXTENTRY            BR IF DEVICE ASSIGNED             R4 43942500
         TM    NURSIOCC,X'30'      TEST SIO CONDTION CODE               43943000
         BO    NXTENTRY            IGNORE DEVICE IF NOT AVAILABLE    R4 43943500
         LH    R1,2(,WC)           GET DEVICE TYPE TABLE OFFSET         43944000
         LA    WC,NURDEVTB(R1)     GET APPROPRIATE ENTRY FOR THIS UCB   43944500
         LA    WD,$DCTPOOL-(DCTCHAIN-DCTDSECT)  PREPARE TO SCAN DCTS R4 43945000
         B     NURAL08             GO DO IT                          R4 43945500
         SPACE 1                                                     R4 43946000
NURAL07  CLI   DCTBUFAD+2,0        TEST DCT ALLOCATION STATUS        R4 43946500
         BNE   NURAL08             BRANCH IF DCT IS NOT AVAILABLE       43947000
         CLC   DCTDEVTP,0(WC)      TEST DCT DEVICE TYPE                 43947500
         BNE   NURAL08             BRANCH IF NOT CORRECT DEVICE TYPE    43948000
         BAL   WE,NURALLOC         ATTEMPT TO ALLOCATE DEVICE           43948500
         MVI   DCTBUFAD+2,1        INDICATE DEVICE ALLOCATED         R4 43949000
         B     NXTENTRY            GET NEXT UCB                      R4 43949500
         SPACE 1                                                     R4 43950000
NURAL08  ICM   WD,7,DCTCHAIN+1     GET ADDRESS OF NEXT DCT              43950500
         BNZ   NURAL07             PROCESS NEXT DCT                     43951000
         CLI   1(WC),X'FF'         TEST MESSAGE SWITCH                  43951500
         BE    NXTENTRY            BR IF MESSAGE HAS BEEN ISSUED     R4 43952000
         L     R1,=A(NURWTO)       POINT TO ERROR MESSAGE            R4 43952500
         MVC   NURWTOM-NURWTO(,R1),1(WC)  SET UP MESSAGE             R4 43953000
        $$WTO  (R1)                ISSUE DEVICES EXCEEDED MESSAGE    R4 43953500
         MVI   1(WC),X'FF'         INDICATE MESSAGE ISSUED              43954000
         B     NXTENTRY            GET NEXT UCB                      R4 43954500
         SPACE 1                                                     R4 43955000
NURAL10  LA    WD,$DCTPOOL-(DCTCHAIN-DCTDSECT)  PREPARE TO SCAN DCTS R4 43955500
         B     NURAL12             GO DO IT                          R4 43956000
         SPACE 1                                                     R4 43956500
NURAL11  ICM   R1,7,DCTDCB+1       GET ADDRESS OF DCB (IF PRESENT)   R4 43957000
         BZ    SKIP890             NOT PRESENT, BR - DRAIN DEVICE    R4 43957500
         L     R1,DCBDEBAD-DCBDSECT(,R1)  GET ADDRESS OF DEB            43958000
         ICM   R1,7,DEBSUCBB-DEBDSECT(R1)  GET ADDRESS OF UCB           43958500
         BNZ   *+8                 BRANCH IF DEVICE IS ALLOCATED        43959000
SKIP890  OI    DCTSTAT,DCTDRAIN    NO, INDICATE DEVICE DRAINED          43959500
         SPACE 1                                                     R4 43960000
NURAL12  ICM   WD,7,DCTCHAIN+1     GET ADDRESS OF NEXT DCT           R4 43960500
         BNZ   NURAL11             PROCESS NEXT DCT                     43961000
         B     NUREND              EXIT IF ALL DCT'S PROCESSED          43961500
         SPACE 5                                                        43962000
NURALLOC NULL                      UNIT RECORD DEVICE ALLOCATION        43962500
         L     R1,DCTDCB           GET ADDRESS OF DCB                   43963000
         L     R1,DCBDEBAD-DCBDSECT(,R1)  GET ADDRESS OF DEB            43963500
         STCM  WB,7,DEBSUCBB-DEBDSECT(R1)  SET UCB ADDRESS IN DEB       43964000
         LA    R0,$IMAGTCB         IMPACT IMAGE-LOADER TCB ADR @OZ26939 43964200
         TM    DCTDEVTP,DCTPRPU    TEST DEVICE TYPE                  R4 43964500
         BZ    NURAL13C            BR IF NOT LOC PRINT/PUNCH   @OZ26939 43965000
         L     R1,DCTEWF                         ELSE SET UCB ADDR   R4 43965500
         STCM  WB,7,PRPUUCB+1-PCEDSECT(R1)        AND DEVICE TYPE    R4 43966000
         MVC   PDEVTYPE+1-PCEDSECT(3,R1),UCBTYP+1  IN PPPWORK        R4 43966500
         CLI   UCBTBYT4,UCB3800    TEST FOR LOCAL 3800 PRINTER       R4 43967000
         BNE   NURAL13A            BR IF NO TO USE REGULAR VALUES    R4 43967500
         OI    DCTPPSW2,DCTNIPRT    ELSE SHOW NON-IMPACT PRINTER     R4 43968000
         LH    R15,NBR3800         GENERATE TOTAL                    R4 43968500
         LA    R15,1(,R15)          COUNT OF                         R4 43969000
         STH   R15,NBR3800           3800 PRINTERS                   R4 43969500
         CLI   DCTFCB,0            FCB SPECIFIED ON PRINTERN CARD... R4 43970000
         BNE   SKIP900             BR IF YES TO USE AS DEFAULT       R4 43970500
         MVC   DCTFCB,$NIPFCB       ELSE USE &NIPFCB AS DEFAULT      R4 43971000
SKIP900  CLC   DCTFCB,=C'    '     TEST FOR HARDWARE (3800) DEFAULT  R4 43971500
         BNE   SKIP910             BR IF NO                          R4 43972000
         MVC   DCTFCB,=C'****'     ELSE, INDICATE IN DCT             R4 43972500
SKIP910  MVC   PRDFCB-PCEDSECT(4,R1),DCTFCB  SET UP 3800 DEFAULT FCB R4 43973000
         GETMAIN RU,LV=16          STORAGE FOR DTE             @OZ26939 43973200
         LR    R0,R1               NON-IMPACT LOADER TCB ADDR  @OZ26939 43973300
         XC    0(16,R1),0(R1)      INITIALIZE DTE              @OZ26939 43973400
         CLI   DCTUCS,0            UCS SPECIFIED ON PRINTERN CARD... R4 43973500
         BNE   NURAL13B            BR IF YES TO USE AS DEFAULT       R4 43974000
         MVC   DCTUCS,$NIPUCS       ELSE USE &NIPUCS AS DEFAULT      R4 43974500
         B     NURAL13B            CLEAR SAVE FIELDS                 R4 43975000
         SPACE 1                                                     R4 43975500
NURAL13A CLI   DCTFCB,0            FCB SPECIFIED ON PRINTERN CARD... R4 43976000
         BNE   SKIP920             BR IF YES TO USE AS DEFAULT       R4 43976500
         MVC   DCTFCB,$PRTFCB       ELSE USE &PRTFCB AS DEFAULT      R4 43977000
SKIP920  CLI   DCTUCS,0            UCS SPECIFIED ON PRINTERN CARD... R4 43977500
         BNE   NURAL13B            BR IF YES TO USE AS DEFAULT       R4 43978000
         MVC   DCTUCS,$PRTUCS       ELSE USE &PRTUCS AS DEFAULT      R4 43978500
         SPACE 2                                                     R4 43979000
NURAL13B L     R1,DCTEWF           STORE ADDR OF HASPIMAG      @OZ26939 43979500
         ST    R0,PRIMGDTE-PCEDSECT(,R1)  SUBTASK DTE INTO PCE @OZ26939 43979600
NURAL13C CLI   DCTDEVTP,DCTLNE     TEST DEVICE TYPE            @OZ26939 43979700
         BE    NURALL4             BRANCH IF RJE LINE                   43980000
         TM    $SVSTUS,$SVSTUSP    TEST SUBSYSTEM STATUS                43980500
         BZ    NURALL2             BRANCH IF NOT PRIMARY SUBSYSTEM      43981000
         CLI   DCTDEVTP,DCTRDR     TEST DEVICE TYPE                     43981500
         BNE   NURALL1             SET ATTN INDICATION IF NOT READER    43982000
         TM    DCTSTAT,DCTDRAIN    TEST DEVICE STATUS                   43982500
         BOR   WE                  RETURN IF READER IS DRAINED          43983000
         EJECT                                                       R4 43983500
NURALL1  OI    DCTSTAT,DCTATTN     SET FOR ATTENTION PROCESSING         43984000
         SPACE 1                                                     R4 43984500
NURALL2  TM    DCTSTAT,DCTDRAIN    TEST DEVICE STATUS                   43985000
         BOR   WE                  RETURN IF DEVICE IS DRAINED          43985500
         TM    NURSIOCC,X'30'      TEST SIO CONDITION CODE              43986000
         BO    NURALL5             BRANCH IF DEVICE IS NOT AVAILABLE    43986500
         CLI   DCTDEVTP,DCTRDR     TEST DEVICE TYPE                     43987000
         BNE   NURALL3             BRANCH IF NOT READER                 43987500
        $ALLOC (WD),NURALL5        ATTEMPT TO ALLOCATE DEVICE           43988000
         TM    NURCSW+4,X'02'      TEST CHANNEL STATUS WORD             43988500
         BZR   WE                  RETURN IF READER IS READY            43989000
         OI    DCTSTAT,DCTHOLD     PLACE READER IN HOLD STATUS          43989500
         BR    WE                   AND RETURN                          43990000
         SPACE 1                                                     R4 43990500
NURALL3  TM    NURCSW+4,X'02'      TEST CHANNEL STATUS WORD             43991000
         BO    NURALL5             BRANCH IF UNIT CHECK                 43991500
        $ALLOC (WD)                ATTEMPT TO ALLOCATE DEVICE           43992000
         BNZR  WE                  RETURN IF SUCCESSFUL                 43992500
         B     NURALL5             NO, DRAIN DEVICE                     43993000
         SPACE 1                                                     R4 43993500
NURALL4  CLI   UCBTBYT3,UCB3CTC    TEST DEVICE TYPE                  R4 43994000
         BNE   SKIP930             SKIP IF NOT CTCA                  R4 43994500
         OI    MDCTLINE,DCTPCTC+DCTPTRSP SET CTC AND TRANSPARENCY    R4 43995000
         B     NURALL5             GO DRAIN DEVICE                   R4 43995500
SKIP930  OI    MDCTMODE,X'04'      SET INTERRUPT MODE                R4 43996000
         CLI   UCBTBYT4,UCBBSCA    TEST DEVICE TYPE                  R4 43996500
         BNE   NURALL5             BRANCH IF NOT 2703                   43997000
         MVI   MDCTMODE,0          2703, RESET MODE BYTE                43997500
         OI    MDCTLINE,DCTPTRSP    AND FORCE TRANSPARENCY              43998000
         SPACE 1                                                     R4 43998500
NURALL5  OI    DCTSTAT,DCTDRAIN    INDICATE DEVICE DRAINED              43999000
         BR    WE                   AND RETURN                          43999500
         DROP  WB,WD,R10           DROP CONTROL BLOCK ADDRESSABILITY    44000000
         SPACE 3                                                     R4 44000500
         LTORG                                                       R4 44001000
         EJECT                                                       R4 44001500
NURECB   DC    F'0'                I/O EVENT CONTROL BLOCK              44002000
NURIOB   DS    0D                  INPUT/OUTPUT BLOCK                   44002500
         DC    A(0,NURECB)                                              44003000
NURCSW   DC    D'0'                                                     44003500
NURSIOCC DC    A(NURCCW,NURDCB,0,0,0,0)                                 44004000
NURCCW   CCW   X'03',0,X'20',1     NOP CCW                              44004500
NURDCB   EQU   *-40                DATA CONTROL BLOCK                   44005000
         DC    X'0000A0000C',AL3(NURDEB),X'10000000'                    44005500
NURDEB   DS    0F                  DATA EXTENT BLOCK                    44006000
         DC    A(*-*),AL1(4,0,0,0,136,0,0,0,3,0,0,0,1,0,0,0)            44006500
         DC    A(0),AL1(31),AL3(NURDCB),AL1(2),AL3(NURAPPEN)            44007000
NURUCB   DC    A(*-*)              ADDRESS OF UNIT CONTROL BLOCK        44007500
NURAPPEN DC    5A(NURRET)          I/O APPENDAGE VECTOR TABLE           44008000
NURRET   BR    R14                 NOP APPENDAGE                        44008500
         SPACE 3                                                        44009000
NURTAB   DS    0F                  UNIT RECORD DEVICE TYPE TABLE        44009500
         DC    AL1(UCB3UREC,UCB2540R),AL2(NURRDR-NURDEVTB)  2540R       44010000
         DC    AL1(UCB3UREC,UCB2501),AL2(NURRDR-NURDEVTB)   2501        44010500
         DC    AL1(UCB3UREC,UCB3505),AL2(NURRDR-NURDEVTB)   3505        44011000
         DC    AL1(UCB3UREC,UCB2540P),AL2(NURPUN-NURDEVTB)  2540P       44011500
         DC    AL1(UCB3UREC,UCB2520),AL2(NURPUN-NURDEVTB)   2520        44012000
         DC    AL1(UCB3UREC,UCB3525),AL2(NURPUN-NURDEVTB)   3525        44012500
         DC    AL1(UCB3UREC,UCB1403),AL2(NURPRT-NURDEVTB)   1403        44013000
         DC    AL1(UCB3UREC,UCB3211),AL2(NURPRT-NURDEVTB)   3211        44013500
         DC    AL1(UCB3UREC,UCB3800),AL2(NURPRT-NURDEVTB)   3800     R4 44014000
         DC    AL1(UCB3COMM,UCBSDAII),AL2(NURLNE-NURDEVTB)  2701        44014500
         DC    AL1(UCB3COMM,UCBBSCA),AL2(NURLNE-NURDEVTB)   2703        44015000
         DC    AL1(UCB3CTC,0),AL2(NURNONE-NURDEVTB)         CTCA     R4 44015500
NURTABE  DS    0F                  END OF DEVICE TYPE TABLE             44016000
         SPACE 3                                                        44016500
NURDEVTB DS    0F                  DEVICE ALLOCATION TABLE              44017000
NURRDR   DC    AL1(DCTRDR),CL14'    READER(S)'                      R41 44017500
NURPUN   DC    AL1(DCTPUN),CL14'    PUNCH(ES)'                      R41 44018000
NURPRT   DC    AL1(DCTPRT),CL14'    PRINTER(S)'                     R41 44018500
NURLNE   DC    AL1(DCTLNE),CL14'    LINE(S)'                        R41 44019000
NURNONE  DC    X'FFFF'             PREVENTS NON-DESIGNATED UCB ALLOC R4 44019500
         SPACE 3                                                        44020000
NBR3800  DC    H'0'                NBR OF 3800 PRINTERS              R4 44020500
         SPACE 3                                                     R4 44021000
NUREND   NULL                      END OF UNIT RECORD INITIALIZATION    44021500
         TITLE 'HASP INITIALIZATION -- FINAL RJE INITIALIZATION'     R4 44137000
*********************************************************************** 44137500
*                                                                     * 44138000
*        COMPLETE RJE INITIALIZATION                                  * 44138500
*                                                                     * 44139000
*********************************************************************** 44139500
         SPACE 1                                                     R4 44140000
NRJEINIT BALR  BASE2,0             RE-ESTABLISH                      R4 44140500
         USING *,BASE2              LOCAL ADDRESSABILITY             R4 44141000
         USING SSVT,WG             PROVIDE SSVT ADDRESSABILITY       R4 44141500
         SPACE 1                                                     R4 44142000
         L     WG,$SSVT            GET SSVT ADDRESS                  R4 44142500
         LH    R0,$SVROUT          GET NUMBER OF REMOTES             R4 44143000
         LTR   R0,R0               IF NO REMOTES DEFINED,            R4 44143500
         BZ    NTPRAT               BR TO FREE TEMPORARY STORAGE     R4 44144000
         L     R1,$MLLMPCE         POINT TO LINE MANAGER PCE         R4 44144500
         MVI   PCEEWF-PCEDSECT(R1),$EWFWORK  ENSURE PCE HELD         R4 44145000
         LA    WA,$PCEORG-(PCENEXT-PCEDSECT)  PREPARE TO SCAN PCES   R4 44145500
         SPACE 1                                                     R4 44146000
         USING PCEDSECT,WA         PROVIDE PCE ADDRESSABILITY        R4 44146500
         SPACE 1                                                     R4 44147000
SKIP1000 ICM   WA,15,PCENEXT       LOCATE                            R4 44147500
         BZ    NTPRAT               FIRST                            R4 44148000
         TM    PCEID,PCERJEID        REMOTE TERMINAL                 R4 44148500
         BZ    SKIP1000               PCE                            R4 44149000
         SPACE 1                                                     R4 44149500
         L     R1,PCEDCT           ASSUME REMOTE READER        @OZ32566 44150000
         CLI   PCEID+1,PCERDRID    TEST ASSUMPTION                   R4 44150500
         BE    SKIP1010            BR IF VALID                       R4 44151000
         L     R1,PCEDCT            ELSE GET PRT/PNCH DCT ADDR @OZ32566 44151500
         SPACE 1                                                     R4 44152000
         DROP  WA                  KILL PCE ADDRESSABILITY           R4 44152500
         SPACE 1                                                     R4 44153000
SKIP1010 SLR   WF,WF               GET MAXIMUM                       R4 44153500
         IC    WF,$NUMCLAS          SYSOUT CLASSES                   R4 44154000
         STC   WF,NCRDCTCL+1       SET CLASS MOVE LENGTH             R4 44154500
         SLR   WA,WA               CLEAR FOR SCAN                       44155000
         L     R14,$RWT            POINT TO 1ST RWT ELEMENT          R4 44155500
         USING RWTDSECT,R14        ESTABLISH RWT ADDRESSABILITY         44156000
         L     R15,$RAT            POINT TO 1ST RAT ELEMENT          R4 44156500
         USING RATDSECT,R15        ESTABLISH RAT ADDRESSABILITY         44157000
         SPACE 2                                                        44157500
NRDBUILD ST    R1,RATRDCT          STORE ADDRESS OF REMOTE DCT IN RAT   44158000
         ICM   WA,1,RATLDCT        GET LINE NUMBER                      44158500
         BZ    NRDBLD3             NON-DEDICATED LINE IF ZERO           44159000
         CH    WA,$NUMLNES         CHECK LINE SPECIFICATION VALIDITY R4 44159500
         BH    NLNERROR            BRANCH IF INVALID                 R4 44160000
         L     WB,$LNEDCT          POINT TO 1ST LINE DCT             R4 44160500
         USING DCTDSECT,WB         ESTABLISH DCT ADDRESSABILITY         44161000
         B     *+8                 BYPASS FIRST TIME                    44161500
         L     WB,DCTCHAIN         GET ADDRESS OF                       44162000
         BCT   WA,*-4               NTH LINE DCT                        44162500
         TM    RATTYPE,DCTPSNA     TEST FOR SNA TYPE REMOTE          R4 44163500
         BNO   SKIP1020            NO, BR -- GO INSURE BSC LINE      R4 44164000
         TM    MDCTTYPE,DCTPSNA    ELSE CHECK FOR LOGICAL LINE TYPE  R4 44164500
         BNO   NLNERROR            NO, BR -- INCOMPATIBLE LINE       R4 44165000
         B     SKIP1030            SKIP AROUND BSC LINE CHECK        R4 44165500
SKIP1020 TM    MDCTTYPE,DCTPSNA    INSURE BSC RMTS USE BSC LINES     R4 44166000
         BO    NLNERROR            BRANCH IF SNA LINE                R4 44166500
SKIP1030 ST    WB,RATLDCT          STORE ADDRESS OF LINE DCT IN RAT     44167500
         OI    MDCTSTAT,DCTLEASE   INDICATE DEDICATED LINE              44168000
         ST    R15,MDCTRAT         STORE RAT ADDRESS IN LINE DCT     R4 44168500
         TM    RATTYPE,DCTPSNA     TEST FOR SNA TYPE RMT             R4 44169500
         BO    SKIP1040            YES, BR--HANDLE AS SEMI-LEASED    R4 44170000
         OC    MDCTDCT,MDCTDCT     TEST FOR ALREADY LEASED           R4 44170500
         BZ    NRDBLD2             NO, SKIP--LEASE LINE TO FIRST RMT R4 44171000
SKIP1040 OI    MDCTSTAT,DCTSHARE   INDICATE SHARED LINE              R4 44171500
         LA    R1,0                PREPARE TO ZERO LINE DCT RMT PTR  R4 44172000
         XC    MDCTRAT,MDCTRAT     CLEAR RAT ADDRESS FROM LINE DCT   R4 44172500
NRDBLD2  ST    R1,MDCTDCT          STORE RMT DCT ADDRESS IN LINE DCT R4 44173500
         L     R1,RATRDCT          RESTORE RMT DCT ADDRESSABILITY    R4 44174000
         B     NRDBLD3             CONTINUE RMT INITIALIZTION        R4 44174500
         DROP  WB                  DROP DCT ADDRESSABILITY              44175000
         SPACE 2                                                     R4 44175500
NLNERROR STM   R14,R1,60(R13)      SAVE RAT, RWT, & RMT DCT POINTERS R4 44176000
         L     WB,=A(NLNEMSG)      POINT TO MESSAGE TEXT             R4 44176500
         MVC   NLNERMT-NLNEMSG(3,WB),RATNAME+3 MOVE RMT NUMBR TO MSG R4 44177000
        $$WTO  (WB)                ISSUE ERROR MESSAGE TO OPERATOR   R4 44177500
         LM    R14,R1,60(R13)      RELOAD SAVED POINTERS             R4 44178000
         XC    RATLDCT,RATLDCT     CLEAR RMT LINE SPECIFICATION      R4 44178500
         MVI   NRJEXIT+1,0         FORCE QUIT AFTER TESTING ALL RJE  R4 44179000
         EJECT                                                       R4 44179500
NRDBLD3  SLR   R10,R10             INDICATE NO PREVIOUS DCT             44180000
         IC    WA,RATNUMRD         GET NUMBER OF READERS                44180500
         LA    WB,RWTRDR1          GET ADDRESS OF 1ST RDR RWT ELEMENT   44181000
         BAL   WE,NCRMTDCT         BUILD REMOTE READER DCT'S            44181500
         SPACE 1                                                        44182000
         IC    WA,RATNUMPR         GET NUMBER OF PRINTERS               44182500
         LA    WB,RWTPRT1          GET ADDRESS OF 1ST PRT RWT ELEMENT   44183000
         BAL   WE,NCRMTDCT         BUILD REMOTE PRINTER DCT'S           44183500
         SPACE 1                                                        44184000
         IC    WA,RATNUMPU         GET NUMBER OF PUNCHES                44184500
         LA    WB,RWTPUN1          GET ADDRESS OF 1ST PUN RWT ELEMENT   44185000
         BAL   WE,NCRMTDCT         BUILD REMOTE PUNCH DCT'S             44185500
         MVC   RATCONRT(1),$OWNSYS SET SYS ID                  @OZ26276 44185550
         SPACE 1                                                    R41 44185600
         TM    RATTYPE,DCTPLU1     IF NOT SNA REMOTE                R41 44185700
         BNO   NCONOUT              SKIP CONSOLE CONVERSION         R41 44185800
         TM    RATCONF,RATCONFC    IF NO CONSOLE ON REMOTE          R41 44185900
         BNO   NCONOUT              SKIP CONSOLE CONVERSION         R41 44186000
         L     WE,RATRDCT          POINT TO FIRST REMOTE DCT        R41 44186100
         IC    WA,RATNUMRD         NUMBER OF READERS                R41 44186200
         XR    WB,WB                ADDED TO                        R41 44186300
         IC    WB,RATNUMPR           NUMBER OF PRINTERS             R41 44186400
         AR    WB,WA                  LOCATES LAST PRINTER DCT      R41 44186500
         BCT   WB,NXTSTRT          IF TOP OF RMT DCT CHAIN ALREADY  R41 44186600
         B     NMAKCON              GO CONVERT TO A CONSOLE DCT     R41 44186700
         SPACE 1                                                    R41 44186800
NXTTLST  L     WE,MDCTDCT-DCTDSECT(,WE) POINT TO NEXT-TO-LAST       R41 44186900
NXTSTRT  BCT   WB,NXTTLST                PRINTER DCT                R41 44187000
         L     WB,MDCTDCT-DCTDSECT(,WE) POINT TO LAST PRINTER DCT   R41 44187100
         MVC   MDCTDCT-DCTDSECT(4,WE),MDCTDCT-DCTDSECT(WB) MOV LAST R41 44187200
         MVC   MDCTDCT-DCTDSECT(4,WB),RATRDCT PRINTER DCT TO        R41 44187300
         ST    WB,RATRDCT                      TOP OF RMT DCT CHAIN R41 44187400
NMAKCON  L     WE,RATRDCT          POINT TO CONSOLE DCT TO BE       R41 44187500
         MVI   DCTDEVTP-DCTDSECT(WE),DCTRCON MAKE DEV TYPE CONSOLE  R41 44187600
         MVI   MDCTSEL-DCTDSECT(WE),X'80' SHOW OUTBND CONS. SELECT  R41 44187700
         LA    WB,DCTDEVN-DCTDSECT(,WE) CHANGE                      R41 44187800
NAMESCN  LA    WB,1(,WB)                 DEVICE NAME                R41 44187900
         CLI   0(WB),C'.'                 TO                        R41 44188000
         BNE   NAMESCN                     READ                     R41 44188100
         MVC   1(3,WB),=C'CON'              RNNN.CON                R41 44188200
NCONOUT  DS    0H                                                   R41 44188300
         SPACE 1                                                        44188400
         LA    R14,RWTEND          GET ADDRESS OF NEXT WORK TABLE       44188500
         LA    R15,RATEND          GET ADDRESS OF NEXT RAT ELEMENT      44188600
         BCT   R0,NRDBUILD         BUILD DCT'S FOR NEXT REMOTE          44188700
         SPACE 1                                                     R4 44188800
         DROP  R14                 KILL RWT ADDRESSABILITY           R4 44188900
         SPACE 1                                                     R4 44189000
NRJEXIT  B     NRDBUFS             BR IF NO ROUTE CODE ERRORS        R4 44189500
        $EXIT  NGQUITM              ELSE ISSUE 'QUIT' MSG AND QUIT   R4 44190000
         SPACE 1                                                     R4 44190500
NRDBUFS  LH    R1,$TPBFSIZ         GET TP BUFFER SIZE                R4 44191000
         CH    R1,$MLBFSIZ         TEST AGAINST ML BUFFER SIZE       R4 44191500
         BNL   SKIP1050            BR IF AT LEAST AS LARGE           R4 44192000
         LH    R1,$MLBFSIZ          ELSE FORCE                       R4 44192500
         LA    R1,7(,R1)             &TPBFSIZ = &MLBFSIZ             R4 44193000
         N     R1,=F'-8'              ROUNDED UP TO                  R4 44193500
         STH   R1,$TPBFSIZ             MULTIPLE OF 8 BYTES           R4 44194000
SKIP1050 LH    WE,=AL2(BUFDSECT-TPBUFST) LOAD BSC TP BUFR PREFIX SZ  R4 44194500
         LH    WF,=AL2(RPLDSECT-RPLBUFST) LOAD SNA TP BFR PREFIX SZ  R4 44195500
         LCR   R0,WF               ASSUME SNA TP BUFFER LARGER       R4 44196000
         CLR   WE,WF               TEST ASSUMPTION                   R4 44196500
         BNL   SKIP1060            BRANCH IF VALID                   R4 44197000
         LCR   R0,WE               ELSE-- USE BSC TP BFR SZ          R4 44197500
SKIP1060 AR    R1,R0               COMPUTE ACTUAL TP BUFFER SIZE     R4 44198500
         LA    R1,7(,R1)           ROUND UP TO A                    R41 44198600
         N     R1,=F'-8'            DOUBLE WORD BOUNDARY            R41 44198700
         CH    R1,=H'4096'         IF BUFFER SIZE LARGER THAN  @OZ20669 44198800
         BNH   SKIP1065              ONE PAGE, ROUND DOWN TO   @OZ20669 44198850
         LH    R1,=H'4096'             ONE PAGE                @OZ20669 44198900
SKIP1065 DS    0H                                              @OZ20669 44198950
         AR    WE,R1               COMPUTE BSC BUFFER USABLE SIZE    R4 44199000
         STH   WE,$BFSZBSC           AND STORE VALUE IN HCT          R4 44199500
         AR    WF,R1               COMPUTE SNA BUFFER USABLE SIZE    R4 44200500
         STH   WF,$BFSZSNA           AND STORE VALUE IN HCT          R4 44201000
         LH    R0,$NUMTPBF         GET RJE BUFFER REQUEST            R4 44202000
         L     WF,=A(NBFBUILD)     POINT TO BUFFER BUILD ROUTINE     R4 44202500
         BALR  WE,WF                AND GO DO IT                     R4 44203000
         MVI   BPMBFTYP-BPMDSECT(R1),BUFTP  SET BUFFER TYPE          R4 44203500
         STH   R0,$NUMTPBF         STORE BUFFERS ALLOCATED           R4 44204000
         ST    R1,$TPBFMAP          AND BUFFER POOL MAP ADDRESS      R4 44204500
         EJECT                                                       R4 44205000
*********************************************************************** 44205600
*                                                                     * 44205700
*        OBTAIN PERMANENT CPT, AND INITIALIZE                         * 44205800
*                                                                     * 44205900
*********************************************************************** 44206000
         SPACE 1                                                    R41 44206100
         LH    WB,$NUMCPTS         GET NUMBER OF CPTS               R41 44206200
         LTR   WB,WB               IF NOT ZERO                      R41 44206300
         BNZ   NGETCPT              GO GET SPACE                    R41 44206400
         ST    WB,$CPTPOOL         IF NO CPTS, ZERO CPTPOOL ADDRESS R41 44206500
         B     NCPTDONE            GO ON TO NEXT PHASE OF INIT      R41 44206600
         SPACE 1                                                    R41 44206700
NGETCPT  MH    WB,=AL2(CPTEND-CPTDSECT) CALCULATE TOTAL LENGTH REQD R41 44206800
         GETMAIN R,LV=(WB)         GET SPACE FOR CPT                R41 44206900
         SPACE 1                                                    R41 44207000
         L     WA,$CPTPOOL         POINT TO TEMP CPT POOL           R41 44207100
         USING CPTDSECT,WA                                          R41 44207200
         L     WF,$MLLMPCE         GET LINE MANAGER WORK            R41 44207300
         USING PCEDSECT,WF          AREA ADDRESSABILITY             R41 44207400
         LA    WE,1                INDEX PERM CPTS FROM 1           R41 44207500
         SPACE 1                                                    R41 44207600
         LA    WA,CPTDSECT         POINT TO ZERO CPT                R41 44207700
         ST    R1,$CPTPOOL         SAVE ADDR OF PERM CPTS           R41 44207800
         LR    WC,R1               POINT TO PERM CPT                R41 44207900
         LA    R1,CPTEND-CPTDSECT  SET INCREMENT REG                R41 44208000
         LH    R0,$NUMCPTS         SET LOOP COUNT                   R41 44208100
         SLR   WD,WD               CLEAR WORK REG FOR INDEXED 'STC' R41 44208200
         SPACE 1                                                    R41 44208300
NEXTCPT  ALR   WA,R1               POINT TO NEXT TEMP CPT           R41 44208400
         SPACE 1                                                    R41 44208500
NMOVECPT CLI   CPTNMAST,X'00'      IF TEMP CPT NOT INIT             R41 44208600
         BE    NEXTCPT              GO POINT TO NEXT CPT            R41 44208700
         IC    WD,CPTNUM           PICK UP NOMINAL TABLE NUMBER     R41 44208800
         STC   WE,MCPTMAP-PCEDSECT(WD,WF)  USE AS OFFSET INTO QUICK R41C44208900
                                            LOCATORS & SAVE OFFSET  R41 44209000
         LR    WB,R1               GET TWO COPIES OF LENGTH         R41 44209100
         LR    WD,R1                OF CPT FOR LONG MOVE            R41 44209200
         MVCL  WC,WA               MOVE TEMP CPT TO PERM STORAGE    R41 44209300
         LA    WE,1(,WE)           ADVANCE PERM CPT INDEX           R41 44209400
         BCT   R0,NMOVECPT         REPEAT 'TIL ALL VALID CPTS MOVED R41 44209500
         SPACE 1                                                    R41 44209600
NCPTDONE EQU   *                                                    R41 44209700
         SPACE 1                                                    R41 44209800
         DROP  WA,WF               DISCARD TEMP ADDRESSABILITY      R41 44209900
         EJECT                                                      R41 44210000
*********************************************************************** 44210100
*                                                                     * 44210200
*        OBTAIN AND INITIALIZE STORAGE FOR ICES                       * 44210300
*                                                                     * 44210400
*********************************************************************** 44210500
         SPACE 3                                                     R4 44210600
         ICM   WD,15,NLOGLINE      IF NO SNA                         R4 44210700
         BNZ   SKIP1070             LOGICAL LINES,                   R4 44210800
         STH   WD,$MAXSESS           SET SESSION COUNT TO ZERO       R4 44210900
SKIP1070 LH    R0,$MAXSESS         IF SESSIONS                       R4 44211000
         LTR   R0,R0                SPECIFIED,                       R4 44211100
         BNM   SKIP1080              BR TO TEST SPECIFICATION        R4 44211500
         LTR   R0,WD                  ELSE SET EQUAL TO COUNT        R4 44212000
         STH   R0,$MAXSESS              OF LOGICAL LINES             R4 44212500
SKIP1080 BZ    NTPRAT              BR IF SESSION COUNT ZERO          R4 44213000
         MH    R0,=AL2((ICESIZE+7)/8*8) COMPUTE STORAGE NEEDED      R41 44213500
         LR    WB,R0               SAVE STORAGE SIZE FOR MVCL        R4 44214000
         SPACE 1                                                     R4 44214500
         GETMAIN R,LV=(0)          GET ICES IN TRAY                  R4 44215000
         SPACE 1                                                     R4 44215500
         LR    WA,R1               WA = START OF ICETRAY             R4 44216000
         SLR   WD,WD               WD = ZERO                         R4 44216500
         MVCL  WA,WC               CLEAR ICETRAY                     R4 44217000
         SPACE 1                                                     R4 44217500
         LA    WA,$ICETRAY-(ICEAPCHN-ICEDSECT) FAKE ICEAPCHN         R4 44218000
         LH    WB,$MAXSESS         PICK UP COUNT OF ICES             R4 44218500
         SPACE 1                                                     R4 44219000
         USING ICEDSECT,WA         SHOW ICE ADDRESSABILITY           R4 44219500
         SPACE 1                                                     R4 44220000
NBLDICE  ST    R1,ICEAPCHN         CHAIN NEW ICE TO OLD              R4 44220500
         LR    WA,R1               SAVE OLD ICE ADDRESS FOR CHAINING R4 44221000
         LA    R1,((ICESIZE+7)/8*8)(,R1)  BUMP TO NEXT ICE          R41 44221500
         BCT   WB,NBLDICE          LOOP FOR ALL ICES                 R4 44222000
         SPACE 1                                                     R4 44222500
         DROP  WA                  RELEASE ICE ADDRESSABILITY        R4 44223000
         EJECT                                                       R4 44223500
*********************************************************************** 44224500
*                                                                     * 44225000
*        OBTAIN PERMANENT RAT                                         * 44225500
*                                                                     * 44226000
*********************************************************************** 44226500
         SPACE 1                                                     R4 44227000
NTPRAT   LH    WB,$SVROUT          GET LENGTH                        R4 44227500
         MH    WB,=AL2(RATTLE)      OF RAT                           R4 44228000
         LTR   R1,WB               IF NO REMOTES DEFINED,            R4 44228500
         BZ    NRDFRAT              BR TO FREE TEMPORARY STORAGE     R4 44229000
         LA    WB,8(,WB)             ELSE GET                        R4 44229500
         LR    R0,WB                  PERMANENT                      R4 44230000
         GETMAIN R,LV=(0)              RAT STORAGE                   R4 44230500
         MVC   0(4,R1),=CL4'RAT'   SET RAT ID                           44231000
         ST    WB,4(,R1)            AND LENGTH                          44231500
         SPACE 2                                                        44232000
NMOVERAT LA    R1,8(,R1)           GET ADDRESS OF FIRST RAT ELEMENT     44232500
         SL    WB,=F'8'            GET LENGTH OF RAT ELEMENTS           44233000
         LR    WA,R1               WA = NEW ADDRESS OF RAT              44233500
         L     WC,$RAT             WC = CURRENT RAT ADDRESS          R4 44234000
         LR    WD,WB               WD = WB = LENGTH OF RAT              44234500
         MVCL  WA,WC               MOVE TEMP RAT TO FINAL LOCATION   R4 44235000
         EJECT                                                       R4 44235500
*********************************************************************** 44236000
*                                                                     * 44236500
*        FREE TEMPORARY RAT, CORRECT DCT RAT ADDRESSES                * 44237000
*                                                                     * 44237500
*********************************************************************** 44238000
         SPACE 1                                                     R4 44238500
NRDFRAT  ST    R1,$RATABLE         SET RAT ADDRESS IN HCT            R4 44239000
         L     R1,NTMPSTOR         FREE                              R4 44239500
         L     R0,0(,R1)            TEMPORARY                        R4 44240000
         FREEMAIN R,LV=(0),A=(1)     STORAGE                         R4 44240500
         SLR   R0,R0               CLEAR REGISTER                    R4 44241000
         ICM   R0,3,$NUMLNES       GET NUMBER OF RJE LINES           R4 44241500
         BZ    NRDT                BR IF NONE DEFINED                R4 44242000
         L     R1,$RAT             GET DIFFERENCE BETWEEN            R4 44242500
         SL    R1,$RATABLE          CURRENT AND TEMPORARY RAT        R4 44243000
         L     WB,$LNEDCT          POINT TO 1ST LINE DCT             R4 44243500
         SPACE 1                                                     R4 44244000
         USING DCTDSECT,WB         PROVIDE DCT ADDRESSABILITY        R4 44244500
         SPACE 1                                                     R4 44245000
NEXTLINE TM    MDCTSTAT,DCTLEASE   TEST FOR LEASED LINE              R4 44245500
         BZ    SKIP1090            BR IF NO                          R4 44246500
         OC    MDCTRAT,MDCTRAT     TEST FOR SHARED LINE              R4 44247000
         BZ    SKIP1090            BR IF NO                          R4 44248000
         L     R15,MDCTRAT          ELSE                             R4 44248500
         SLR   R15,R1                ADJUST                          R4 44249000
         ST    R15,MDCTRAT            RAT ADDRESS                    R4 44249500
SKIP1090 L     WB,DCTCHAIN         POINT TO NEXT LINE DCT            R4 44250000
         BCT   R0,NEXTLINE         LOOP THRU ALL LINE DCTS           R4 44250500
         SPACE 1                                                     R4 44251000
         B     NRDT                EXIT TO NEXT SECTION              R4 44251500
         SPACE 1                                                     R4 44252000
         DROP  WB                  KILL DCT ADDRESSABILITY           R4 44252500
         EJECT                                                       R4 44253000
NCRMTDCT NULL                      BUILD REMOTE DEVICE DCT              44253500
         USING DCTDSECT,R1         ESTABLISH DCT                        44254000
         USING RWTDSECT,WB          AND RWT ADDRESSABILITY              44254500
         LTR   WA,WA               TEST NUMBER OF DCT'S                 44255000
         BZR   WE                  EXIT IF ZERO                         44255500
         LTR   R10,R10             TEST FOR PREVIOUS DCT                44256000
         BZ    NCRDCT2             BRANCH IF NO PREVIOUS DCT            44256500
         SPACE 2                                                        44257000
NCRDCT1  ST    R1,MDCTDCT-DCTDSECT(,R10)  SET REMOTE DEVICE CHAIN    R4 44257500
         SPACE 1                                                     R4 44258000
NCRDCT2  LR    R10,R1              UPDATE PREVIOUS DCT TO CURRENT       44258500
         SLR   WC,WC               CLEAR REGISTERS                      44259000
         IC    WC,RWTINDEX         GET LOOK-UP TABLE INDEX              44259500
         AL    WC,=A($RWL)         GET ADDRESS OF LOOK-UP TABLE ELEMENT 44260000
         USING RWLDSECT,WC         ESTABLISH RWL ADDRESSABILITY         44260500
         SPACE 1                                                        44261000
         MVC   DCTSTAT,RWTSTAT     SET DCT STATUS                       44261500
         MVC   DCTNO,RATROUTE      SET REMOTE ROUTE CODE                44262000
         CLC   RWTROUTE,=X'8000'   TEST REMOTE DEVICE ROUTE CODE        44262500
         BE    *+10                BRANCH IF DEFAULT                    44263000
         MVC   DCTROUTE,RWTROUTE+1  ELSE USE DEVICE ROUTE CODE       R4 44263500
         MVC   DCTDEVN,RATNAME     SET UP REMOTE NAME                   44264000
         MVC   DCTDEVN+1(5),DCTDEVN+3  SHIFT REMOTE NUMBER              44264500
         LA    WD,DCTDEVN+1        SEARCH                               44265000
         LA    WD,1(,WD)            FOR                                 44265500
         CLI   0(WD),C' '            FIRST                              44266000
         BNE   *-8                    BLANK                             44266500
         MVI   0(WD),C'.'          ADD PERIOD                           44267000
         MVC   1(3,WD),RWLNAME     ADD DEVICE NAME                      44267500
         MVC   MDCTTYPE,RATTYPE    SET TERMINAL TYPE                    44268000
         L     WD,RATLDCT          GET ADDRESS OF LINE DCT              44268700
         LTR   WD,WD               TEST                                 44269000
         BZ    NCRDCT3             BRANCH IF NON-DEDICATED LINE         44269500
         TM    MDCTSTAT-DCTDSECT(WD),DCTSHARE TEST FOR SHARED LINE   R4 44270500
         BO    NCRDCT3             YES, BR--TREAT AS UNLEASED        R4 44271000
         OI    MDCTSTAT,DCTSINON   INDICATE DCT ATTACHED TO LINE DCT    44272000
         STCM  WD,7,DCTDCB+1       SET ADDRESS OF LINE DCT IN RMT DCT   44272500
         MVC   MDCTLINE,MDCTLINE-DCTDSECT(WD)  SET LINE CHARACTERISTICS 44273000
         TM    RATFEAT,DCTPTRSP    TEST TERMINAL FEATURES               44273500
         BO    NCRDCT3             BR IF TERMINAL HAS TRANSPARENCY   R4 44274000
         NI    MDCTLINE,255-DCTPTRSP  NO, RESET POSSIBLE INDICATION     44274500
         EJECT                                                       R4 44275000
NCRDCT3  DS    0H                                                    R4 44275500
         TM    MDCTTYPE,DCTPSNA    TEST FOR SNA TYPE TERMINAL        R4 44276500
         BZ    NCRDCT30            NO, BRANCH - GO INIT FCS/RCB      R4 44277000
         MVC   MDCTSEL,RWTSEL      SET MEDIA/SUBADDRESS        @OZ29180 44277500
         CLI   MDCTSEL,DCTPOUTB+FMHCARD   TEST FOR             @OZ29180 44277600
         BL    NCRDCTNC                   CARD MEDIA           @OZ29180 44277700
         CLI   MDCTSEL,DCTPOUTB+FMHCARD+FMHLDANY  BRANCH       @OZ29180 44277800
         BH    NCRDCTNC                           IF NOT       @OZ29180 44277900
         OI    RATFLAGS,RATCARD    SET CARD INDICATOR          @OZ29180 44278000
NCRDCTNC CLI   MDCTSEL,DCTPOUTB+FMHEXCH   TEST FOR             @OZ29180 44278100
         BL    NCRDCTNE                   EXCHANGE MEDIA       @OZ29180 44278200
         CLI   MDCTSEL,DCTPOUTB+FMHEXCH+FMHLDANY  BRANCH       @OZ29180 44278300
         BH    NCRDCTNE                           IF NOT       @OZ29180 44278400
         OI    RATFLAGS,RATEXCH    SET EXCHANGE INDICATOR      @OZ29180 44278500
NCRDCTNE MVC   MDCTBFSZ,RATBUFSZ   MOVE BUFR (RU) SIZE TO DCT  @OZ29180 44278600
         CLI   RWLNAME,C'P'        TEST REMOTE DEVICE TYPE           R4 44279000
         BNE   NCRDCT31            BRANCH IF NOT PRINT OR PUNCH      R4 44279500
         MVC   MDCTCHSZ,RWTCHSZ    SET CHAIN SIZE AND                R4 44280000
         MVC   MDCTCHLM,RWTCHLM        CHAIN LIMIT VALUES IN DCT    R41 44280500
         LH    WD,$NUMCPTS         GET NUMBER OF COMPACTION TABLES  R41 44280600
         LTR   WD,WD               ANY COMPACTION TABLES            R41 44280700
         BNZ   NCRDCT34            YES, CONTINUE RJE INITIALIZATION R41 44280800
         NI    RATFEAT,255-DCTPCPCT NO, COMPACTION NOT ALLOWED      R41 44280900
         B     NCRDCT31            GO INITIALIZE REST OF RJE VALUES R41 44281000
         SPACE 1                                                    R41 44281100
NCRDCT34 TM    RATFEAT,DCTPCPCT    IS COMPACTION ALLOWED            R41 44281200
         BZ    NCRDCT31            NO, CONTINUE RJE INITIALIZATION  R41 44281300
         OI    RATFEAT,DCTPPRES    YES, ASSURE COMPRESSION          R41 44281400
         B     NCRDCT31            GO INITIALIZE REST OF RJE VALUES  R4 44281500
         SPACE 1                                                     R4 44282000
NCRDCT30 DS    0H                                                    R4 44282500
         MVC   MDCTFCS,RWLFCS      SET DEVICE FUNCTION CONTROL SEQ  R41 44283500
         MVC   MDCTRCB,RWLRCB      SET DEVICE RECORD CONTROL BYTE       44284000
         SPACE 1                                                     R4 44284500
NCRDCT31 MVC   MDCTFMT,RATFMT      SET TERMINAL FORMAT               R4 44285000
         MVC   MDCTFEAT,RATFEAT    SET TERMINAL FEATURES                44285500
         NC    MDCTFEAT,RWTFEAT    SET COMMON BSC/SNA FEATURES @OZ29180 44285600
         MVC   DCTLRECL,RWTLRECL   SET DEFAULT RECORD LENGTH   @OZ29180 44285700
         MVC   MDCTRECL,DCTLRECL   SET RECORD LENGTH           @OZ29180 44285800
         TM    MDCTTYPE,DCTPSNA    TEST FOR SNA TERMINAL       @OZ29180 44285900
         BZ    NCRDCTNS            BRANCH IF NOT SNA           @OZ29180 44286000
         OI    MDCTFEAT,DCTPNDST+DCTPCCTL  ASSUME CARRIAGE CNT @OZ29180 44286100
*                                  AND NOT BASIC/EXCHANGE      @OZ29180 44286200
         NC    MDCTFEAT,RWTSFEAT   INCLUDE SNA ONLY FEATURES   @OZ29180 44286250
         TM    MDCTFEAT,DCTPCCTL   ARE CARRIAGE CNTRLS ALLOWED @OZ29180 44286300
         BO    NCRDCTCC            YES, CONTINUE               @OZ29180 44286325
         NI    MDCTFEAT,255-DCTPCPCT-DCTPPRES   NO, FORCE NO   @OZ29180 44286350
         B     NCRDCTNS            COMPRESSION NO COMPACTION   @OZ29180 44286375
NCRDCTCC TM    MDCTFEAT,DCTPCPCT   IS COMPACTION ALLOWED       @OZ29180 44286400
         BZ    NCRDCTNS            NO, CONTINUE                @OZ29180 44286500
         OI    MDCTFEAT,DCTPPRES   YES, FORCE COMPRESSION      @OZ29180 44286600
NCRDCTNS LH    WD,$SVROUT          COMPUTE                     @OZ29180 44286700
         LA    WD,1(,WD)            REMOTE                     @OZ29180 44286800
         SLR   WD,R0                 NUMBER                          R4 44287000
         STH   WD,DCTDEVID         SET REMOTE NUMBER                    44287500
         MVN   DCTDEVID(1),RWLNAME+2  AND DEVICE NUMBER IN DEVICE ID    44288000
         CLI   RWLNAME,C'P'        TEST DEVICE TYPE                     44288500
         BE    NCRDCT4             BRANCH IF REMOTE PRINTER OR PUNCH    44289000
         MVC   DCTFLAGS,RWTFLAGS   SET OPERATOR COMMANDS                44289500
*                                  THIS CARD DELETED BY APAR   @OZ29180 44290000
         OI    DCTDEVID,DCTRMTID+DCTRDRID  SET REMOTE READER ID         44290500
         MVC   DCTPRINT,RATROUTE   SET PRINT DESTINATION                44291000
         CLI   RWTPRINT,X'80'      TEST PRINT ROUTE CODE             R4 44291500
         BE    NCRDCT32            BR IF INDIRECT ROUTING           R41 44292000
         MVC   DCTPRRTE,RWTPRINT+1  ELSE OVERRIDE ROUTE CODE         R4 44292500
NCRDCT32 DS    0H                                                   R41 44292600
*                                  THIS CARD DELETED BY APAR   @OZ29180 44298500
NCRDCT3A CLI   DCTPRRTE,0          TEST FOR REMOTE/LOCAL ROUTING     R4 44299000
         BE    NCRDCT3B            BR IF NO                          R4 44299500
         TM    DCTFLAGS,DCTPRLCL   TEST FOR SPECIAL LOCAL ROUTING    R4 44300000
         BZ    NCRDCT3B            BR IF NO                          R4 44300500
         MVI   DCTPRSYS,0           ELSE RESET SYSTEM ID             R4 44301500
         SPACE 1                                                     R4 44305500
NCRDCT3B CLC   DCTPRSYS,$OWNSYS    TEST FOR ROUTE TO REMOTE          R4 44306000
         BNE   SKIP1110            BR IF NO                          R4 44307000
         CLC   DCTPRRTE,$NUMRJE+1  TEST FOR VALID REMOTE NUMBER      R4 44307500
         BH    NRTEBAD             BR IF NO                          R4 44308000
SKIP1110 MVC   DCTPUNCH,RATROUTE   SET PUNCH DESTINATION             R4 44308500
         CLI   RWTPUNCH,X'80'      TEST PUNCH ROUTE CODE             R4 44309000
         BE    NCRDCT33            BR IF INDIRECT ROUTING           R41 44309500
         MVC   DCTPURTE,RWTPUNCH+1  ELSE OVERRIDE ROUTE CODE         R4 44310000
NCRDCT33 DS    0H                                                   R41 44310200
         EJECT                                                       R4 44314500
NCRDCT3C CLI   DCTPURTE,0          TEST FOR REMOTE/LOCAL ROUTING     R4 44315000
         BE    NCRDCT3D            BR IF NO                          R4 44315500
         TM    DCTFLAGS,DCTPULCL   TEST FOR SPECIAL LOCAL ROUTING    R4 44316000
         BZ    NCRDCT3D            BR IF NO                          R4 44316500
         MVI   DCTPUSYS,0           ELSE RESET SYSTEM ID             R4 44317500
         SPACE 1                                                     R4 44321500
NCRDCT3D CLC   DCTPUSYS,$OWNSYS    TEST FOR ROUTE TO REMOTE          R4 44322000
         BNE   NCRDCT3E            BR IF NO                          R4 44323000
         CLC   DCTPURTE,$NUMRJE+1  TEST FOR VALID REMOTE NUMBER      R4 44323500
         BH    NRTEBAD             BR IF NO                          R4 44324000
         SPACE 1                                                     R4 44324500
NCRDCT3E NI    DCTFLAGS,255-DCTPRLCL-DCTPULCL  CLEAR ANY FLAGS       R4 44325000
         MVI   DCTSIAFF,QUESYSAF   SET GLOBAL SYSTEM AFFINITY           44325500
         MVI   DCTRAUTH,DCTREJRM   SET REMOTE COMMAND AUTHORITY         44326000
         MVC   DCTJCLAS(4),RWTJCLAS  SET CLASSES AND PRIORITY VALUES    44326500
         L     WD,CVTPTR           GET ADDRESS OF CVT                   44327000
         L     WD,CVTSMCA-CVTDSECT(,WD)  GET ADDRESS OF SMCA            44327500
         MVC   DCTINDC,SMCAOPT-SMCA(WD)  SET BACKGROUND SMF OPTIONS  R4 44328000
         ICM   R1,7,DCTCHAIN+1     GET ADDRESS OF NEXT DCT           R4 44328500
         LA    WB,RWTRDEND         GET ADDRESS OF NEXT RWT ELEMENT      44329000
         BCT   WA,NCRDCT1          BUILD ADDITIONAL READER DCT'S        44329500
         BR    WE                   AND RETURN WHEN DONE                44330000
         SPACE 1                                                     R4 44330500
NRTEBAD  STM   R14,R12,12(R13)     SAVE REGISTERS                    R4 44331000
         L     R1,=A(NRTEMSG)      POINT TO MESSAGE TEXT             R4 44331500
         MVC   NRTEDEV-NRTEMSG(,R1),DCTDEVN  SET DEVICE NAME         R4 44332000
        $$WTO  (R1)                ISSUE ERROR MESSAGE TO OPERATOR   R4 44332500
         LM    R14,R12,12(R13)     RESTORE REGISTERS                 R4 44333000
         MVI   NRJEXIT+1,0         FORCE QUIT AFTER TESTING ALL RDRS R4 44333500
         B     NCRDCT3E            BR TO TEST NEXT READER            R4 44334000
         EJECT                                                       R4 44334500
NCRDCT4  OI    DCTDEVID,DCTRMTID+DCTPRTID  SET REMOTE PRINTER ID     R4 44335000
         CLI   RWLNAME+1,C'R'      TEST DEVICE TYPE                     44335500
         BNE   NCRDCT4A            BR IF NOT REMOTE PRINTER          R4 44336000
         L     WC,DCTEWF           POINT TO PCE                      R4 44336500
         LA    WD,$IMAGTCB         STORE ADDR OF HASPIMAG      @OZ26939 44336700
         ST    WD,PRIMGDTE-PCEDSECT(,WC) SUBTASK DTE INTO PCE  @OZ26939 44336900
         MVI   PDEVTYPE+3-PCEDSECT(WC),X'08' PSEUDO 1403 WITHOUT UCS R4 44337000
         TM    RWTPPFL,DCTRMFCB              TEST FOR 3211           R4 44337500
         BZ    NCRDCT5                       BR IF NO                R4 44338000
         MVI   PDEVTYPE+3-PCEDSECT(WC),X'09' PSEUDO 3211 WITHOUT UCS R4 44338500
         B     NCRDCT5             BR TO CONTINUE                    R4 44339000
         SPACE 1                                                     R4 44339500
NCRDCT4A NI    DCTDEVID,255-DCTPRTID  CONVERT REMOTE PRINTER ID      R4 44340000
         OI    DCTDEVID,DCTPUNID       TO REMOTE PUNCH ID               44340500
         SPACE 1                                                     R4 44341000
*                                  THIS CARD DELETED BY APAR   @OZ29180 44341500
NCRDCT5  MVC   DCTFORMS(12),RWTFORMS  SET FORMS, FCB, AND UCS  @OZ29180 44342000
         MVC   DCTDCPTN(1),RWTDCPTN SET DEFAULT CPT NUMBER          R41 44342100
         CLI   DCTFORMS,0          TEST FOR FORMS ID                 R4 44342500
         BNE   SKIP1130            BR IF PRESENT                     R4 44343000
         MVC   DCTFORMS,$STDFORM    ELSE SUPPLY DEFAULT              R4 44343500
SKIP1130 CLI   DCTFCB,0            TEST FOR FCB ID                   R4 44344000
         BNE   SKIP1140            BR IF PRESENT                     R4 44344500
         MVC   DCTFCB,$PRTFCB       ELSE SUPPLY DEFAULT              R4 44345000
SKIP1140 CLI   DCTUCS,0            TEST FOR UCS ID                   R4 44345500
         BNE   SKIP1150            BR IF PRESENT                     R4 44346000
         MVC   DCTUCS,$PRTUCS       ELSE SUPPLY DEFAULT              R4 44346500
SKIP1150 MVC   DCTPPFL(2),RWTPPFL  SET FLAGS AND SWITCHES               44347000
         SPACE 1                                                     R4 44347500
NCRDCTCL MVC   DCTCLASS(*-*),RWTCLASS  SET OUTPUT CLASSES            R4 44348000
         LA    WC,DCTCLASS(WF)     SET CLASS LIST                    R4 44348500
         MVI   0(WC),C' '           TERMINATOR                       R4 44349000
         ICM   R1,7,DCTCHAIN+1     GET ADDRESS OF NEXT DCT           R4 44349500
         LA    WB,RWTPPEND         GET ADDRESS OF NEXT RWT ELEMENT      44350000
         BCT   WA,NCRDCT1          BUILD ADDITIONAL PRINT/PUNCH DCT'S   44350500
         BR    WE                   AND RETURN WHEN DONE                44351000
         SPACE 1                                                     R4 44351500
         DROP  R1,WB,WC,WG,R15     KILL ADDRESSABILITY               R4 44352000
         TITLE 'HASP INITIALIZATION -- REMOTE DESTINATION TABLE INITIALC44352500
               IZATION'                                              R4 44353000
*********************************************************************** 44353500
*                                                                     * 44354000
*        COMPLETE REMOTE DESTINATION TABLE INITIALIZATION             * 44354500
*                                                                     * 44355000
* NOTE   REGISTER WB DESTROYED BY DESTINATION VERIFICATION ROUTINE    * 44355500
*                                                                     * 44356000
*********************************************************************** 44356500
         SPACE 1                                                     R4 44357000
         USING $SVDSECT,WG         PROVIDE SSVT ADDRESSABILITY       R4 44357500
         SPACE 1                                                     R4 44358000
NRDT     L     WG,$SSVT            GET SSVT ADDRESS                  R4 44358500
         LA    R1,$SVROUTM+$MAXRJE POINT TO REMOTE MASK TABLE END    R4 44359000
         LA    R0,$MAXRJE          SET NUMBER                        R4 44359500
         SPACE 1                                                     R4 44360000
SKIP1160 STC   R0,0(,R1)           SET REMOTE NUMBER                 R4 44360500
         BCTR  R1,0                REDUCE BY 1                       R4 44361000
         BCT   R0,SKIP1160         LOOP                              R4 44361500
         SPACE 1                                                     R4 44362000
         ICM   R1,15,$SVRDT        POINT TO START OF OLD RDT         R4 44362500
         BZ    NGETRDT             BR IF NONE                        R4 44363000
         SL    R1,=F'8'             ELSE BACK UP TO EYE CATCHER      R4 44363500
         L     R0,4(,R1)           FREE                              R4 44364000
         ICM   R0,8,=AL1(241)       OLD                              R4 44364500
         FREEMAIN R,LV=(0),A=(1)     RDT                             R4 44365000
         SPACE 1                                                     R4 44365500
NGETRDT  LA    WC,$NDQ-(NDQNDQ-NDQ)  PREPARE TO SCAN NDQS            R4 44366000
         SLR   WD,WD               ZERO COUNTER                      R4 44366500
         SPACE 1                                                     R4 44367000
         USING RDTDSECT,WF         PROVIDE RDT ADDRESSABILITY        R4 44367500
         USING NDQDSECT,WC         PROVIDE NDQ ADDRESSABILITY        R4 44368000
         SPACE 1                                                     R4 44368500
NGETRDTL ICM   WC,15,NDQNDQ        POINT TO NEXT NDQ                 R4 44369000
         BZ    NGETRDTS            EXIT IF END                       R4 44369500
         LA    WD,1(,WD)           INCREMENT COUNTER                 R4 44370000
         B     NGETRDTL            LOOP                              R4 44370500
         SPACE 1                                                     R4 44371000
NGETRDTS MH    WD,=Y(RDTSIZ)       CALCULATE SIZE                    R4 44371500
         LA    WD,8(,WD)            OF RDT AREA                      R4 44372000
         LR    R0,WD               OBTAIN                            R4 44372500
         ICM   R0,8,=AL1(241)       NEW                              R4 44373000
         GETMAIN R,LV=(0)            RDT                             R4 44373500
         MVC   0(4,R1),=CL4'RDT'   SET EYE CATCHER                   R4 44374000
         ST    WD,4(,R1)           SAVE RDT LENGTH                   R4 44374500
         ALR   WD,R1               POINT TO RDT END                  R4 44375000
         LA    WE,8(,R1)           POINT TO RDT                      R4 44375500
         LR    WF,WE               COPY                              R4 44376000
         SH    WF,=Y(RDTSIZ)       BACK UP ONE                       R4 44376500
         STM   WE,WF,$SVRDT        SET START AND END VALUES          R4 44377000
         EJECT                                                       R4 44377500
NSETRDT  ICM   WC,15,$NDQ          POINT TO NEXT NDQ                 R4 44378000
         BZ    NFINRDT             BR IF NO MORE                     R4 44378500
         LA    WF,RDTSIZ(,WF)      POINT TO NEXT RDT                 R4 44379000
         MVC   RDTNAME,NDQNAME     COPY NAME                         R4 44379500
         MVI   RDTFLAG,0           ZERO FLAGS                        R4 44380000
         LA    R1,NDQDEST          POINT TO NAME                     R4 44380500
         SLR   WA,WA               ZERO ANSWER REGISTER              R4 44381000
         IC    WA,$SVTOSYS         GET SYSTEM ID                     R4 44382000
         LR    R11,WG              RELOAD SSVT ADDRESS               R4 44384500
         L     R15,$SVDEST         POINT TO DESTINATION VERIFY RTN   R4 44385000
         BALR  LINK,R15            ENTER IT                          R4 44385500
         B     NFNDQRDT            LEAVE DEFAULT ROUTING IF ERR   +0 R4 44386000
         STC   WA,RDTRMTNO         SET REMOTE/UNIT NUMBER         +4 R4 44387000
         CLI   NDQDEST,C'U'        DID USER SAY UNIT...              R4 44392500
         BNE   NRMTRDT             BR IF NO                          R4 44393000
         MVI   RDTFLAG,RDTFLAGU    SET TO LOAD NODE ZERO AND UNIT    R4 44393500
         B     NFNDQRDT            FREE THE NDQ                      R4 44394000
         SPACE 1                                                     R4 44394500
NRMTRDT  CLI   RDTRMTNO,0          TEST FOR REMOTE                   R4 44395000
         BE    NFNDQRDT            BR IF NO                          R4 44395500
         OI    RDTFLAG,RDTFLAGR    SET TO LOAD REMOTE                R4 44396000
         SPACE 1                                                     R4 44396500
NFNDQRDT L     BASE1,$SVHCT        RESTORE HCT ADDRESS IN BASE1      R4 44397000
         MVC   $NDQ,NDQNDQ         DE-CHAIN NDQ                      R4 44397500
         LA    R0,NDQSIZ           FREE DESTINATION                  R4 44398000
         ICM   R0,8,=AL1(229)       QUEUE ELEMENT                    R4 44398500
         FREEMAIN R,LV=(0),A=(WC)    STORAGE                         R4 44399000
         B     NSETRDT             LOOP                              R4 44399500
         SPACE 1                                                     R4 44400000
NFINRDT  ST    WF,$SVRDTE          SET END OF RDT                    R4 44400500
         LA    R1,$SVROUTM+1       POINT TO REMOTE 1 MASK BYTE       R4 44401000
         LH    R0,$SVROUT          GET NUMBER OF REMOTES             R4 44401500
         XC    $SVROUTM,$SVROUTM   CLEAR REMOTE MASK BYTES           R4 44402000
         LTR   R0,R0               TEST NUMBER OF REMOTES            R4 44402500
         BZ    NRJEEND             BR OF NONE DEFINED                R4 44404500
         L     WA,$RATABLE         POINT TO 1ST RAT ELEMENT          R4 44405500
         SPACE 1                                                     R4 44406000
NRDTMASK MVC   0(1,R1),RATROUTE+1-RATDSECT(WA)  MOVE RAT'S ROUTE CODER4 44406500
         LA    WA,RATTLE(,WA)      POINT TO NEXT RAT                 R4 44407000
         LA    R1,1(,R1)           POINT TO NEXT MASK BYTE           R4 44407500
         BCT   R0,NRDTMASK         LOOP THRU ALL REMOTES             R4 44408000
         SPACE 1                                                     R4 44409000
         B     NRJEEND             EXIT TO NEXT SECTION              R4 44409500
         SPACE 1                                                     R4 44410500
         DROP  WC,WF               KILL NDQ, RDT ADDRESSABILITY      R4 44411000
         DROP  WG                  KILL SSVT ADDRESSABILITY          R4 44434500
         EJECT                                                       R4 44435000
         LTORG                     DEFINE LITERALS FOR RJE INIT         44435500
         SPACE 3                                                        44436000
NRJEEND  NULL                      END OF RJE INITIALIZATION            44436500
         TITLE 'HASP INITIALIZATION -- MISCELLANEOUS INITIALIZATION'    44513500
NWRAPUP  BALR  BASE2,0             RE-ESTABLISH                      R4 44514000
         USING *,BASE2              LOCAL ADDRESSABILITY                44514500
         SPACE 1                                                     R4 44515000
*********************************************************************** 44515500
*                                                                     * 44516000
*        INITIALIZE COMMAND PROCESSOR EXTENDED AREA                   * 44516500
*                                                                     * 44517000
*********************************************************************** 44517500
         SPACE 1                                                     R4 44518000
         L     WA,CVTPTR           POINT TO CVT                         44518500
         L     WA,CVTCUCB-CVT(,WA) THEN TO UCM                          44519000
         LM    WD,WF,UCMVEA-UCM(WA) PICK UP FIRST, LENGTH, LAST UCME    44519500
         LR    R1,WF               COPY LAST                            44520000
         ALR   R1,WE               UP TO BEYOND                         44520500
         SLR   R0,R0               ZERO HIGH PART                       44521000
         SLR   R1,WD               GET LENGTH OF ALL UCMES              44521500
         DR    R0,WE               GET NUMBER OF OS CONSOLES            44522000
         LR    WD,R1               COPY FOR BUILDER                     44522500
         MH    R1,=Y(COMCONL)      GET LENGTH OF REDIRECTION ELEMENTS   44523000
         LA    R0,COMRESP-COMDSECT(0,R1) SET LENGTH OF AREA             44523500
         LR    WF,R0               COPY FOR BUILDER                     44524000
         GETMAIN R,LV=(0)          GET STORAGE FOR EXTENDED AREA        44524500
         LR    WE,R1               COPY                                 44525000
         LR    R0,R1               COPY ORG                             44525500
         LR    R1,WF               COPY LENGTH                          44526000
         SLR   WB,WB               ZERO SOURCE LENGTH                   44526500
         MVCL  R0,WA               CLEAR WORK AREA                      44527000
         L     R1,$COMMPCE         POINT TO COMMAND PROCESSOR PCE    R4 44527500
         ST    WE,COMEXTEN-PCEDSECT(,R1) SET POINTER                    44528000
         STH   WD,COMCONNO-PCEDSECT(,R1) SET NUMBER OF CONSOLES         44528500
         USING COMDSECT,WE                                              44529000
         STH   WD,COMOCON          SET NUMBER OF CONSOLES               44529500
         MVC   COMLCON,=Y(COMCONL) SET LENGTH OF GROUP OF ELEMENTS      44530000
         LA    R1,1                SET FIRST CONSOLE ID                 44530500
         LA    WA,COMRESP          POINT TO FIRST ELEMENT               44531000
         SPACE 1                                                     R4 44531500
ICOMXL   LA    R0,COMCONL/2        SET NUMBER OF ELEMENTS/GROUP         44532000
         SPACE 1                                                     R4 44532500
ICOMXLA  STC   R1,COMCON(,WA)      STORE CONSOLE IN ELEMENT             44533000
         LA    WA,2(,WA)           UP TO NEXT ELEMENT                   44533500
         BCT   R0,ICOMXLA          LOOP FOR ALL ELEMENTS IN GROUP       44534000
         SPACE 1                                                     R4 44534500
         LA    R1,1(,R1)           UP TO NEXT CONSOLE                   44535000
         BCT   WD,ICOMXL           LOOP FOR ALL CONSOLES                44535500
         SPACE 1                                                     R4 44536000
         L     WG,$HASPMAP         POINT TO HASP MODULE MAP          R4 44536500
         SPACE 1                                                     R4 44537000
         USING MAPDSECT,WG         PROVIDE MOD MAP ADDRESSABILITY    R4 44537500
         EJECT                                                       R4 44538000
         LOAD  EP=IEE7603D         LOCATE VERIFICATION MODULE           44538500
         ST    R0,COMVERIF         SET ENTRY TO VERIFICATION ROUTINE    44539000
         DROP  WE                                                       44539500
         DELETE EP=IEE7603D        DELETE VERIFICATION MODULE        R4 44540000
         LA    WA,$WTOPECB         POINT TO TERMINATION ECB             44540500
         LA    WD,NHASPBR1         ADDRESS OF DUMMY TASK                44541000
         L     WE,MAPWTOA          POINT TO $HASPWTO ENTRY POINT     R4 44541500
         BAL   WF,NATTACH          ATTACH WTO SUBTASK                R4 44542000
         ST    WE,$WTOTCBA         SET TCB ADDRESS FOR WITHDRAW      R4 44542500
* LOAD HASP SMF USER EXITS INTO MEMORY, IF THEY EXIST                   44543000
         L     WF,$SSVT            ADDRESS OF SSVT                      44543500
         USING SSVT,WF             SSVT ADDRESSABILITY                  44544000
         LOAD  EP=IEFUSO,ERRET=NUSOBAD LOAD USO IF IT EXISTS            44544500
         ST    R0,$SVSMFSO         PUT ADDR. INTO SSVT SLOT             44545000
         DELETE EP=IEFUSO          DELETE USO                        R4 44545500
         SPACE 1                                                     R4 44546000
NUSOBAD  CLI   $NUMSMFB,2          TEST SMF OPTION                   R4 44546500
         BL    NOSMF               BR IF NOT SELECTED                R4 44547000
         LOAD  EP=IEFUJP,ERRET=NUJPEXIT      LOAD UJP IF POSSIBLE       44547500
         ST    R0,$SVSMFJP         PUT ADDR. INTO SSVT SLOT             44548000
         DELETE EP=IEFUJP          DELETE UJP                        R4 44548500
         EJECT                                                       R4 44549000
NUJPEXIT NULL                                                           44549500
         LA    WD,NSMFNAM          POINT TO HASPSMF NAME                44550000
         L     WE,MAPACCTA         POINT TO HASPSMF ENTRY POINT      R4 44550500
         LA    WA,$PSMFECB         POINT TO TERMINATION ECB          R4 44551000
         BAL   WF,NATTACH          ATTACH ACCOUNTING SUBTASK         R4 44551500
         ST    WE,$SMFTCBA         SET TCB ADDRESS FOR WITHDRAW      R4 44552000
         USING SMFDSECT,R1                                              44552500
        $GETSMFB WAIT=YES          GET SMF BUFFER FOR RECORD TYPE 43    44553000
         MVI   SMFRDW+1,SMF43END-SMFRDW      LENGTH OF START HASP SMF   44553500
         MVI   SMFHDRTY,SMFSSSTP   START HASP SUBSYSTEM SMF RECORD TYPE 44554000
         MVC   SMFSSID,NSMFHASP    PUT HASP SUBSYSTEM ID IN RECORD 4    44554500
         MVI   SMFSSLEN+1,SMF43END-SMF43RV1  LENGTH OF SUBSYSTEM PART   44555000
         MVC   SMF43OPT,$OPTSTAT   HASP OPTIONS                         44555500
        $QUESMFB                   WRITE RECORD TYPE 43                 44556000
         DROP  R1,WF               KILL SMF, SSVT ADDRESSABILITY     R4 44556500
         SPACE 1                                                     R4 44557000
NOSMF    NULL                                                        R4 44557500
         LA    WD,NIMGNAM          POINT TO HASPIMAG NAME               44558000
         L     WE,MAPIMAGA         POINT TO HASPIMAG ENTRY POINT     R4 44558500
         LA    WA,$PIMGECB         POINT TO TERMINATION ECB          R4 44559000
         BAL   WF,NATTACH          ATTACH IMAGE LOADER SUBTASK       R4 44559500
         ST    WE,$IMAGTCB         SET TCB ADDRESS FOR WITHDRAW      R4 44560000
         SPACE 1                                               @OZ20685 44560100
         LA    WD,NALOCNAM         PT TO HOSALLOC NAME         @OZ20685 44560200
         L     WE,MAPALOCA         PT TO HOSALLOC E. P.        @OZ20685 44560300
         LA    WA,$PDYNECB         PT TO TERMINATION ECB       @OZ20685 44560400
         BAL   WF,NATTACH          ATTACH ALLOCATION TASK      @OZ20685 44560500
         ST    WE,$DYNTCBA         SET TCB ADDRESS             @OZ20685 44560600
         SPACE 3                                                     R4 44561000
         L     WD,NLOGLINE         PICK UP NO. OF VTAM LOGICAL LINES R4 44561500
         LTR   WD,WD               TEST FOR NONE SPECIFIED           R4 44562000
         BZ    NIRBUILD            BR IF NONE TO NEXT SECTION        R4 44562500
         LA    WA,$PSNAECB         GET ADDR OF TERMINATION ECB       R4 44563000
         LA    WD,NVTAMNAM         PICK UP VTAM SUBTASK NAME TO BE   R4 44563500
         L     WE,MAPVTAMA          ASSOC. WITH ENTRY POINT ADDR     R4 44564000
         BAL   WF,NATTACH          ATTACH VTAM API SUBTASK           R4 44564500
         ST    WE,$SNATCBA         SET TCB ADDRESS FOR WITHDRAW      R4 44565000
         B     NIRBUILD            THEN BR TO NEXT SECTION           R4 44566000
         EJECT                                                       R4 44566500
         SPACE 1                                                     R4 44567000
         DROP  WG                  KILL MOD MAP ADDRESSABILITY       R4 44567500
NATTACH  IDENTIFY EPLOC=(WD),ENTRY=(WE)  IDENTIFY SUBTASK CODE       R4 44568000
         LR    R1,BASE1            GIVE HCT ADDRESS TO SUBTASK       R4 44568500
         CLC   NIMGNAM,0(WD)       CHECK FOR HASPIMAG ATTACH   @OZ26939 44568600
         BNE   *+8                 BR IF NO, BYPASS DTE LOAD   @OZ26939 44568700
         LA    R1,$IMAGTCB         LOAD ADDRESS OF IMAGE TCB   @OZ26939 44568800
         ATTACH EPLOC=(WD),SM=SUPV,ECB=(WA)  ATTACH SUBTASK          R4 44569000
         LR    WE,R1               SAVE TCB ADDRESS                  R4 44569500
         WAIT  ECB=(WA)            WAIT FOR SUBTASK TO ENTER         R4 44570000
         OC    1(3,WA),1(WA)       TEST ATTACH                       R4 44570500
         BNZ   NEWTO               BR IF UNSUCCESSFUL                R4 44571000
         MVI   0(WA),0              ELSE RESET TERMINATION ECB       R4 44571500
         BR    WF                    AND RETURN                      R4 44572000
         SPACE 1                                                     R4 44572500
NEWTO    L     R1,=A(NEWTOM)                POINT TO MESSAGE         R4 44573000
         UNPK  NEWTOV-NEWTOM(7,R1),1(4,WA)  SPREAD DIGITS            R4 44573500
         TR    NEWTOV-NEWTOM(,R1),NEWTOT    MAKE PRINTABLE           R4 44574000
         MVC   NEWTON-NEWTOM(,R1),0(WD)     SET MODULE NAME          R4 44574500
        $$WTO  (R1)                ISSUE WARNING MESSAGE TO OPERATOR R4 44575000
         BR    WF                  THEN RETURN                       R4 44575500
         EJECT                                                       R4 44576000
NEWTOT   EQU   *-C'0'                                                   44576500
         DC    C'0123456789ABCDEF'                                      44577000
NHASPBR1 DC    CL8'HASPWTO'        HASP WTO TASK NAME                   44577500
NSMFNAM  DC    CL8'HASPACCT'       HASPACCT MODULE NAME                 44578000
NIMGNAM  DC    CL8'HASPIMAG'       MODULE NAME FOR HASPIMAG             44578500
NVTAMNAM DC    CL8'HASPVTAM'       HASP VTAM API SUBTASK NAME        R4 44579500
NALOCNAM DC    CL8'HOSALLOC'       ALLOCATION MODULE NAME      @OZ20685 44580000
NSMFHASP DC    AL2(SMFHSPID)       SMF SUBSYSTEM ID FOR HASP            44580500
         SPACE 3                                                        44581000
         LTORG                     DEFINE LITERALS FOR MISC INIT        44581500
         TITLE 'HASP INITIALIZATION -- INTERNAL READER BUILD'           44582000
*********************************************************************** 44582500
*                                                                     * 44583000
*        (RE-)INITIALIZE INTERNAL READER DCTS                         * 44583500
*                                                                     * 44584000
*********************************************************************** 44584500
         SPACE 1                                                     R4 44585000
NIRBUILD BALR  BASE2,0             RE-ESTABLISH                         44585500
         USING *,BASE2              LOCAL ADDRESSABILITY.               44586000
         USING $SVDSECT,R7         PROVIDE SSVT ADDRESSABILITY       R4 44586500
         SPACE 1                                                     R4 44587000
         L     R7,$SSVT            POINT TO SSVT                     R4 44587500
         SLR   R3,R3               GET COUNT OF JOB                  R4 44588000
         IC    R3,$NUMINRS          INTERNAL READERS                 R4 44588500
         L     R2,$SVIRDRS         POINT TO EXISTING INRS (IF ANY)   R4 44589000
         S     R2,=F'8'            POINT TO DCT STORAGE PREFIX       R4 44589500
         BP    NIRSTAT             BR IF VALID                       R4 44590000
         SPACE 1                                                     R4 44590500
*********************************************************************** 44591000
*                                                                     * 44591500
*        NO OLD INTERNAL READER DCTS -- CREATE INITIAL ONES           * 44592000
*                                                                     * 44592500
*********************************************************************** 44593000
         SPACE 1                                                     R4 44593500
         BAL   WE,NIRSETUP         GET DCT STORAGE, SET UP REGS      R4 44594000
         B     NIRINIT             BR TO INITIALIZE ALL INR DCTS     R4 44594500
         SPACE 1                                                     R4 44595000
NIRSTAT  TM    $SVHASP,X'80'       TEST FOR JES2 RESTART             R4 44595500
         BZ    NIRREBLD            BR IF NO TO REBUILD DCTS          R4 44596000
         SPACE 1                                                     R4 44596500
*********************************************************************** 44597000
*                                                                     * 44597500
*        JES2 RESTART -- RE-USE EXISTING INTERNAL READER DCTS         * 44598000
*                                                                     * 44598500
*********************************************************************** 44599000
         SPACE 1                                                     R4 44599500
         BAL   WE,NIRREGS          SET UP REGS FOR DCT RESET         R4 44600000
         STCM  R2,7,DCTCHAIN+1-DCTDSECT(R3)  ADD INR DCTS TO DCT CHN R4 44600500
         SPACE 1                                                     R4 44601000
         USING DCTDSECT,R2         PROVIDE DCT ADDRESSABILITY        R4 44601500
         SPACE 1                                                     R4 44602000
NIRRESET LR    R3,R2               SAVE CURRENT DCT ADDRESS          R4 44602500
         ST    R2,PCEDCT-PCEDSECT(,R4)   SET DCT ADDR IN PCE   @OZ32566 44603000
         ST    R4,DCTEWF                 SET PCE ADDRESS IN DCT      R4 44603500
         NI    DCTSTAT,255-DCTINUSE      RESET DCT IN-USE STATUS     R4 44604000
         ICM   R2,7,DCTCHAIN+1           POINT TO NEXT DCT           R4 44604500
         L     R4,PCENEXT-PCEDSECT(,R4)  POINT TO NEXT PCE           R4 44605000
         BCT   R0,NIRRESET         LOOP THRU ALL INTERNAL RDR DCTS   R4 44605500
         SPACE 1                                                     R4 44606000
         STCM  R0,7,DCTCHAIN+1-DCTDSECT(R3)  TERMINATE DCT CHAIN     R4 44606500
         B     NXEQDCT             BR TO SET REQUEST-JOB-ID DCT      R4 44607000
         EJECT                                                       R4 44607500
*********************************************************************** 44608000
*                                                                     * 44608500
*        RESTART AFTER $PJES2 -- RE-CREATE JOB INTERNAL READER DCTS   * 44609000
*                                                                     * 44609500
*********************************************************************** 44610000
         SPACE 1                                                     R4 44610500
NIRREBLD L     R0,4(,R2)           GET COUNT OF EXISTING INR DCTS    R4 44611000
         BCTR  R0,0                 LESS TWO FOR                     R4 44611500
         BCTR  R0,0                  STC AND TSU                     R4 44612000
         MH    R0,=Y(RIDCTEND-DCTDSECT)  STORAGE FOR OLD JOB INRS    R4 44612500
         ICM   R0,8,NINRMASK       GET INR DCT STORAGE SUBPOOL       R4 44613000
         L     R1,$SVIRDRS         POINT TO EXISTING STC INR DCT     R4 44613500
         ICM   R1,7,DCTCHAIN+1-DCTDSECT(R1)  POINT TO OLD TSU INR    R4 44614000
         ICM   R1,7,DCTCHAIN+1-DCTDSECT(R1)  POINT TO OLD JOB INRS   R4 44614500
         BZ    NIRJINRS            BR IF NO EXISTING JOB INR DCTS    R4 44615000
         FREEMAIN R,LV=(0),A=(1)    ELSE FREE OLD JOB INR DCTS       R4 44615500
         SPACE 1                                                     R4 44616000
NIRJINRS LA    R15,NIRSETUP        ASSUME NEW JOB INTERNAL READERS   R4 44616500
         LTR   R3,R3               TEST ASSUMPTION                   R4 44617000
         BNZ   SKIP1210            BR IF VALID                       R4 44617500
         LA    R15,NIRREGS          ELSE SET UP FOR NO NEW JOB INRS  R4 44618000
SKIP1210 BALR  WE,R15              GET DCT STORAGE AND/OR SET UP REGSR4 44618500
         NI    DCTSTAT,255-DCTINUSE  RESET STC INTERNAL              R4 44619000
         BAL   LINK,NINRINIT          READER DCT                     R4 44619500
         NI    DCTSTAT,255-DCTINUSE    AND TSU INTERNAL              R4 44620000
         BAL   LINK,NINRINIT            READER DCT                   R4 44620500
         LR    R2,R1               POINT TO 1ST NEW JOB INR DCT      R4 44621000
         SPACE 1                                                     R4 44621500
NIRINIT  BALR  LINK,0              SET RETURN ADDRESS FOR NINRINIT   R4 44622000
         MVC   0(RIDCTEND-DCTDSECT,R2),NINRDCT  BUILD BASIC DCT      R4 44622500
         B     NINRINIT            BR TO COMPLETE DCT INITIALIZATION R4 44623000
         EJECT                                                       R4 44623500
*********************************************************************** 44624000
*                                                                     * 44624500
*        NIRSETUP -- OBTAIN STORAGE FOR NEW INTERNAL READER DCTS      * 44625000
*                                                                     * 44625500
*        NIRREGS  -- (RE)SET INTERNAL READER DCT STORAGE PREFIX       * 44626000
*                 -- LOCATE AND OF CURRENT DCT CHAIN                  * 44626500
*                 -- LOCATE 1ST INTERNAL READER PCE                   * 44627000
*                                                                     * 44627500
* INPUT  R3    - COUNT OF NEW JOB INTERNAL READERS                    * 44628000
*                                                                     * 44628500
* OUTPUT R0    - COUNT OF TOTAL INTERNAL READERS                      * 44629000
*        R3    - ADDR OF LAST DCT ON CURRENT DCT CHAIN                * 44629500
*        R4    - ADDR OF 1ST INTERNAL READER PCE                      * 44630000
*        WE    - RETURN ADDRESS                                       * 44630500
*                                                                     * 44631000
*********************************************************************** 44631500
         SPACE 1                                                     R4 44632000
NIRSETUP LR    R0,R3               RELOAD NEW JOB INR COUNT          R4 44632500
         ICM   R2,15,$SVIRDRS      TEST FOR EXISTING INR DCTS        R4 44633000
         BNZ   SKIP1220            BR IF YES                         R4 44633500
         LA    R0,2(,R3)            ELSE ALLOW FOR STC AND TSU       R4 44634000
SKIP1220 MH    R0,=Y(RIDCTEND-DCTDSECT)  INR DCT STORAGE REQ'T       R4 44634500
         BNZ   SKIP1230            BR IF EXISTING INR DCTS           R4 44635000
         AL    R0,NINRMASK         ALLOW FOR DCT STORAGE PREFIX      R4 44635500
SKIP1230 ICM   R0,8,NINRMASK       SET DCT STORAGE SUBPOOL           R4 44636000
         GETMAIN R,LV=(0)          GET DCT STORAGE                   R4 44636500
         S     R2,=F'8'            POINT TO OLD DCT STORAGE PREFIX   R4 44637000
         BP    SKIP1240            BR IF VALID ADDRESS               R4 44637500
         LR    R2,R1                ELSE NEW STORAGE HAS PREFIX      R4 44638000
SKIP1240 MVC   0(4,R2),=CL4'IDCT'  SET DCT STORAGE IDENTIFIER        R4 44638500
         SPACE 1                                                     R4 44639000
NIRREGS  LA    R3,1(,R3)           SAVE COUNT                        R4 44639500
         ST    R3,NINRDCTS          OF DCTS + 1                      R4 44640000
         LA    R0,1(,R3)           SET NEW DCT COUNT                 R4 44640500
         ST    R0,4(,R2)            IN DCT STORAGE PREFIX            R4 44641000
         LA    R2,8(,R2)           POINT TO STORAGE FOR 1ST INR DCT  R4 44641500
         ST    R2,$SVIRDRS         SET POINTER IN SSVT               R4 44642000
         ST    R2,$INRDCT           AND IN HCT                       R4 44642500
         LA    R4,$DCTPOOL-(DCTCHAIN-DCTDSECT)  PREPARE TO SCAN DCTS R4 44643000
         SPACE 1                                                     R4 44643500
SKIP1250 LR    R3,R4                        LOCATE END               R4 44644000
         ICM   R4,7,DCTCHAIN+1-DCTDSECT(R4)  OF CURRENT              R4 44644500
         BNZ   SKIP1250                       DCT CHAIN              R4 44645000
         SPACE 1                                                     R4 44645500
         LA    R4,$PCEORG-(PCENEXT-PCEDSECT)  PREPARE TO SCAN PCES   R4 44646000
         SPACE 1                                                     R4 44646500
SKIP1260 L     R4,PCENEXT-PCEDSECT(,R4)    LOCATE 1ST                R4 44647000
         CLI   PCEID-PCEDSECT(R4),PCEINRID  INTERNAL                 R4 44647500
         BNE   SKIP1260                      RDR PCE                 R4 44648000
         SPACE 1                                                     R4 44648500
         BR    WE                  RETURN TO CALLER                  R4 44649000
         EJECT                                                       R4 44649500
*********************************************************************** 44650000
*                                                                     * 44650500
*        NINRINIT -- FINISH BUILDING A DCT                            * 44651000
*                                                                     * 44651500
*        R0    - COUNT OF REMAINING DCTS, DECREMENTED ON RETURN       * 44652000
*        R2    - ADDR OF CURRENT DCT, UPDATED ON RETURN               * 44652500
*        R3    - ADDR OF PREVIOUS DCT, UPDATED ON RETURN              * 44653000
*        R4    - ADDR OF CURRENT PCE, UPDATED ON RETURN               * 44653500
*        LINK  - RETURN ADDRESS                                       * 44654000
*                                                                     * 44654500
*********************************************************************** 44655000
         SPACE 1                                                     R4 44655500
NINRINIT STCM  R2,7,DCTCHAIN+1-DCTDSECT(R3)  SET DCT CHAIN ADDRESS   R4 44656000
         ST    R2,PCEDCT-PCEDSECT(,R4)  SET DCT ADDRESS IN PCE @OZ32566 44656500
         ST    R4,DCTEWF           SET $POST ADDRESS                 R4 44657000
         LA    R5,RIDECB           SET ADDRESS OF                       44657500
         ST    R5,RIDECBP           INTERNAL READER ECB                 44658000
         MVC   DCTSYS,$OWNSYS      SET SYSTEM ID                     R4 44659000
         CL    R0,NINRDCTS         TEST                              R4 44661000
         BL    NIRINIT2            BRANCH IF NORMAL INTERNAL READER     44661500
         MVC   DCTROUTE(2),=XL4'00'  RESET ROUTE CODE/OPERATOR FLGS R41 44662000
         MVC   DCTDEVN,=CL8'STCINRDR'  SET STC INRDR DEVICE NAME        44662500
         MVC   DCTSIAFF,$SIDAFF    FORCE INPUT CPU AFFINITY             44663000
         MVC   DCTPRINT(4),=XL4'00'  RESET PRINT AND PUNCH DESTINATIONS 44663500
         MVC   DCTPRSYS,$OWNSYS       TO LOCAL PRINTERS              R4 44664500
         MVC   DCTPUSYS,$OWNSYS        AND PUNCHES                   R4 44665000
         MVC   DCTPRINC(2),=XL2'0F0F'  SET PRIORITY FIELDS              44668000
         MVI   DCTRAUTH,0          RESET COMMAND AUTHORIZATION          44668500
         BE    NIRINIT1            BRANCH IF LOGON INTERNAL READER      44669000
         MVI   DCTJCLAS,CATSTCCL   SET STC JOB CLASS                    44669500
NSTCMCLS EQU   *+1,1               STC MSGCLASS                         44670000
         MVI   DCTMCLAS,C'A'       SET STC MSGCLASS                     44670500
         MVC   RIDJOBID(3),DCTDEVN  RESET JOBID HEADER                  44671000
         B     NIRINIT2            GET NEXT INTERNAL READER             44671500
         SPACE 1                                                     R4 44672000
NIRINIT1 MVC   DCTDEVN(3),=CL3'TSO'  RESET DEVICE NAME HEADER           44672500
         MVI   DCTJCLAS,CATTSUCL   SET TSU JOB CLASS                    44673000
NTSUMCLS EQU   *+1,1               TSU MSGCLASS                         44673500
         MVI   DCTMCLAS,C'A'       SET TSU MSGCLASS                     44674000
         L     R5,CVTPTR           GET ADDRESS OF CVT                R4 44674500
         L     R5,CVTSMCA-CVT(,R5) GET ADDRESS OF SMCA               R4 44675000
         MVC   DCTINDC,SMCAFOPT-SMCA(R5)  SET FOREGROUND SMF OPTIONS R4 44675500
         MVC   RIDJOBID(3),=CL3'TSU'  RESET JOBID HEADER                44676000
         SPACE 1                                                     R4 44676500
NIRINIT2 LR    R3,R2               SAVE DCT ADDRESS                     44677000
         LA    R2,RIDCTEND         GET ADDRESS OF NEXT INTRDR DCT       44677500
         L     R4,PCENEXT-PCEDSECT(,R4)  AND OF NEXT INTRDR PCE      R4 44678000
         BCTR  R0,LINK             RETURN IF ANOTHER DCT             R4 44678500
         SPACE 1                                                     R4 44679000
         STCM  R0,7,DCTCHAIN+1-DCTDSECT(R3)  TERMINATE DCT CHAIN        44679500
         TITLE 'HASP INITIALIZATION -- REQUEST JOB DCT INITIALIZATION'  44680000
         SPACE 1                                                     R4 44680500
*********************************************************************** 44681000
*                                                                     * 44681500
*        CREATE REQUEST-JOB-ID DCT                                    * 44682000
*                                                                     * 44682500
*********************************************************************** 44683000
         SPACE 1                                                     R4 44683500
NXEQDCT  LA    WB,DCTRDEND-DCTDSECT  SPACE NEEDED FOR RDR DCT        R4 44684000
         SPACE 1                                                     R4 44684500
         GETMAIN R,LV=(WB)         GET STORAGE FOR DCT               R4 44685000
         SPACE 1                                                     R4 44685500
         SLR   R5,R5               SETUP                             R4 44686000
         LR    R2,R1                 FOR MVCL                        R4 44686500
         MVCL  R2,R4                   TO CLEAR AREA                 R4 44687000
         SPACE 1                                                     R4 44687500
         ST    R1,$XEQDCT          STORE DCT ADDRESS IN HCT          R4 44688000
         LR    R2,R1               RELOAD DCT BASE REGISTER          R4 44688500
         SPACE 1                                                     R4 44689000
         MVI   DCTDEVTP,DCTRDR     USE READER DEVICE TYPE            R4 44689500
         MVC   DCTDEVN,=CL8'STCJOBID' SET DEVICE NAME IN DCT         R4 44690000
         MVI   DCTDEVID,DCTRDRID   SET READER DEVICE ID              R4 44690500
         MVC   DCTSIAFF,$SIDAFF    SET AFFINITY FOR THIS SYSTEM      R4 44691000
         MVI   DCTJCLAS,CATSTCCL   USE STC CLASS FOR REQUEST JOBID   R4 44691500
         MVI   DCTMCLAS,C'A'         AND MSGCLASS = A                R4 44692000
         MVI   DCTPRLIM,15         LIMIT PRIORITY IS 15              R4 44692500
         L     WC,CVTPTR           GET CVT ADDRESS                   R4 44693000
         L     WC,CVTSMCA-CVTDSECT(,WC)  GET SMCA ADDRESS FROM CVT   R4 44693500
         MVC   DCTINDC,SMCAOPT-SMCA(WC)  SET BACKGROUND SMF OPTIONS  R4 44694000
         MVC   DCTPRSYS,$OWNSYS    SET PRINT AND PUNCH               R4 44695000
         MVC   DCTPUSYS,$OWNSYS     ROUTING DESTINATIONS             R4 44695500
         B     NINEXT              PROCEED TO NEXT FUNCTION             44699500
         SPACE 1                                                     R4 44700000
         DROP  R2                  KILL DCT ADDRESSABILITY           R4 44700500
         SPACE 5                                                     R4 44701000
NINRDCTS DS    F                   DCTS + 1                          R4 44701500
NINRMASK DC    0F'0',AL1(241),AL3(8)  SUBPOOL AND PREFIX             R4 44702000
         SPACE 2                                                     R4 44702500
NINRDCT  DC    (RIDCTEND-DCTDSECT)X'00' INTERNAL READER MODEL DCT    R4 44703000
         TITLE 'HASP INITIALIZATION -- FINAL SECTION'                   44703500
NINEXT   ICM   R1,15,$SVDEB        TEST FOR EXISTING DA DEB          R4 44704000
         BZ    SKIP1270            BR IF NO                          R4 44704500
         TM    $SVHASP,X'80'       TEST HASP STATUS.                    44705000
         BO    NPCEADDR            BR IF RESTARTING                  R4 44705500
         SPACE 1                                                     R4 44706000
*********************************************************************** 44706500
*                                                                     * 44707000
*        MOVE DIRECT ACCESS DCB TO SSVT                               * 44707500
*                                                                     * 44708000
*********************************************************************** 44708500
         SPACE 1                                                     R4 44709000
SKIP1270 LA    R2,$SVDCB+40        POINT TO $SVDCB + PREFIX          R4 44709500
         LA    R3,12               MOVE                              R4 44710000
         L     R4,$HASPDCB          DA                               R4 44710500
         LR    R5,R3                 DCB                             R4 44711000
         LA    R4,40(,R4)             TO                             R4 44711500
         MVCL  R2,R4                   SSVT                          R4 44712000
         S     R1,=F'8'            POINT TO DEB STORAGE PREFIX       R4 44712500
         BM    NEWDADEB            BR IF NO EXISTING DA DEB          R4 44713000
         TM    $OPTSTAT,$OPTCOLD+$OPTFMT  TEST INIT'N OPTIONS        R4 44713500
         BZ    NPCEADDR            BR IF WARM START                  R4 44714000
         L     R0,0(,R1)            ELSE GET DA DEB, TED,            R4 44714500
         ICM   R0,8,=AL1(241)        AND TGB STORAGE REQUIREMENT     R4 44715000
         FREEMAIN R,LV=(0),A=(1)      AND FREE EXISTING STORAGE      R4 44715500
         XC    $SVDEB,$SVDEB       CLEAR DA DEB ADDRESS              R4 44716000
         EJECT                                                       R4 44716500
*********************************************************************** 44717000
*                                                                     * 44717500
*        OBTAIN CSA STORAGE FOR DA DEB, TEDS, AND TGBS                * 44718000
*                                                                     * 44718500
*********************************************************************** 44719000
         SPACE 1                                                     R4 44719500
NEWDADEB IC    R3,$NUMDA           GET                               R4 44720000
         LA    R3,1(,R3)            LENGTH                           R4 44720500
         SLL   R3,4                  OF                              R4 44721000
         LA    R3,32(,R3)             DEB                            R4 44721500
         IC    R5,$NUMDA           ADD                               R4 44722000
         MH    R5,=Y(TEDSIZ)        TED                              R4 44722500
         LA    R5,7(R3,R5)           STORAGE                         R4 44723000
         N     R5,=F'-8'              AND ROUND TO DOUBLE-WORD       R4 44723500
         SLR   R3,R3               ADD                               R4 44724000
         IC    R3,$NUMTGBE          STORAGE                          R4 44724500
         MH    R3,=Y(TGBSIZE)        FOR                             R4 44725000
         LA    R5,8(R3,R5)            TGBS AND PREFIX                R4 44725500
         LR    R0,R5               RELOAD STORAGE REQUIREMENT        R4 44726000
         ICM   R0,8,=AL1(241)      SET SUBPOOL                       R4 44726500
         GETMAIN R,LV=(0)          GET STORAGE IN CSA                R4 44727000
         LR    R2,R1               CLEAR                             R4 44727500
         LR    R3,R5                STORAGE                          R4 44728000
         SLR   R15,R15               FOR DEB,                        R4 44728500
         MVCL  R2,R14                 TEDS, AND TGBS                 R4 44729000
         ST    R5,0(,R1)           SAVE STORAGE SIZE                 R4 44729500
         LA    R2,8(,R1)           STEP OVER PREFIX                  R4 44730000
         ST    R2,$SVDEB           SET POINTER TO DA DEB             R4 44730500
         EJECT                                                       R4 44731000
*********************************************************************** 44731500
*                                                                     * 44732000
*        MOVE DIRECT ACCESS DEB TO CSA                                * 44732500
*                                                                     * 44733000
*********************************************************************** 44733500
         SPACE 1                                                     R4 44734000
         IC    R3,$NUMDA           GET                               R4 44734500
         LA    R3,1(,R3)            LENGTH                           R4 44735000
         SLL   R3,4                  OF                              R4 44735500
         LA    R3,32(,R3)             DEB                            R4 44736000
         L     R4,$DADEBAD         MOVE                              R4 44736500
         LR    R5,R3                DA DEB                           R4 44737000
         MVCL  R2,R4                 TO CSA                          R4 44737500
         SPACE 1                                                     R4 44738000
*********************************************************************** 44738500
*                                                                     * 44739000
*        MOVE TED TO CSA, SET TGB POINTERS                            * 44739500
*                                                                     * 44740000
*********************************************************************** 44740500
         SPACE 1                                                     R4 44741000
         ST    R2,$SVTED           SET POINTER TO FINAL TEDS         R4 44741500
         ST    R2,$SVTFRST         SET POINTER TO FIRST TED          R4 44742000
         ST    R2,$SVTNEXT         SET POINTER TO NEXT TED           R4 44742500
         LA    R1,TEDSIZ           GET SIZE OF INDIVIDUAL TED        R4 44743000
         IC    R5,$NUMDA           MOVE                              R4 44743500
         MR    R4,R1                HASP                             R4 44744000
         L     R4,TEDSTART           TED                             R4 44744500
         LR    R3,R5                  TO                             R4 44745000
         MVCL  R2,R4                   CSA                           R4 44745500
         SLR   R2,R1               SET POINTER TO                    R4 44746000
         ST    R2,$SVTLAST          LAST TED                         R4 44746500
         LA    R2,7(R1,R2)         SET POINTER                       R4 44747000
         N     R2,=F'-8'            TO FIRST                         R4 44747500
         ST    R2,$SVTTGBA           TRACK GROUP BLOCK               R4 44748000
         LA    R1,TGBSIZE          SET SIZE                          R4 44748500
         ST    R1,$SVTTGBA+4        OF TRACK GROUP BLOCK             R4 44749000
         IC    R5,$NUMTGBE         SET                               R4 44749500
         BCTR  R5,0                 POINTER                          R4 44750000
         MR    R4,R1                 TO                              R4 44750500
         ALR   R2,R5                  LAST                           R4 44751000
         ST    R2,$SVTTGBA+8           TGB                           R4 44751500
         EJECT                                                       R4 44752000
*********************************************************************** 44752500
*                                                                     * 44753000
*        SET PCE ADDRESS IN ALL DCTS                                  * 44753500
*                                                                     * 44754000
*********************************************************************** 44754500
         SPACE 1                                                     R4 44755000
NPCEADDR LA    WA,$DCTPOOL-(DCTCHAIN-DCTDSECT)  PREPARE TO SCAN DCTS R4 44755500
         SPACE 1                                                     R4 44756000
         USING DCTDSECT,WA         PROVIDE DCT ADDRESSABILITY        R4 44756500
         SPACE 1                                                     R4 44757000
NEXTDCT  ICM   WA,7,DCTCHAIN+1     POINT TO NEXT DCT                 R4 44757500
         BZ    NDECHAIN            BR IF NO MORE DCTS                R4 44758000
         MVC   DCTPCE+1(3),DCTEWF+1  ELSE PROVIDE PCE ADDRESS        R4 44758500
         XC    DCTBUFAD,DCTBUFAD   CLEAR OUT EBCDIC DEVICE NAME      R4 44759000
         CLI   DCTDEVTP,DCTLOG     TEST DEVICE TYPE                  R4 44760000
         BE    NPCELOG             HANDLE IF LOGON DCT               R4 44760500
SKIP1280 CLI   DCTDEVTP,DCTLNE     TEST DEVICE TYPE                  R4 44764500
         BNE   NEXTDCT             LOOP IF NOT LINE                  R4 44765000
         XC    MDCTOBUF,MDCTOBUF    ELSE CLEAR BUFFER ADDRESS        R4 44765500
         SPACE 1                                                     R4 44766000
NPCELOG  MVC   DCTPCE+1(3),$MLLMPCE+1  AND RESET PCE ADDRESS         R4 44766500
         B     NEXTDCT             LOOP THRU ALL DCTS                R4 44767000
         SPACE 1                                                     R4 44767500
*********************************************************************** 44768000
*                                                                     * 44768500
*        DECHAIN REMOTE TERMINAL DCTS (IF ANY)                        * 44769000
*                                                                     * 44769500
*********************************************************************** 44770000
         SPACE 1                                                     R4 44770500
NDECHAIN SLR   R0,R0               GET NUMBER                        R4 44771000
         ICM   R0,3,$NUMLNES        OF RJE LINES                     R4 44771500
         BZ    NFREEKOR            BR IF NONE DEFINED                R4 44772000
         LA    WA,$LNEDCT-(DCTCHAIN-DCTDSECT)  PREPARE TO RUN DCTS   R4 44772500
         SPACE 1                                                     R4 44773000
SKIP1290 L     WA,DCTCHAIN         LOCATE LAST                       R4 44773500
         BCT   R0,SKIP1290          LINE DCT                         R4 44774000
         SPACE 1                                                     R4 44774500
         MVC   DCTCHAIN,$INRDCT    UNCHAIN REMOTE TERMINAL DCTS      R4 44775000
         SPACE 1                                                     R4 44775500
         DROP  WA                  KILL DCT ADDRESSABILITY           R4 44776000
         SPACE 1                                                     R4 44776500
NFREEKOR IC    R0,$NUMDA           FREE                              R4 44777000
         MH    R0,=Y(TEDSIZ)        STORAGE                          R4 44777500
         ICM   R0,8,=AL1(229)        USED                            R4 44778000
         L     R1,TEDSTART            FOR                            R4 44778500
         FREEMAIN R,LV=(0),A=(1)       TEMPORARY TEDS                R4 44779000
         EJECT                                                       R4 44779500
*********************************************************************** 44780000
*                                                                     * 44780500
*        INITIALIZE PROCESSOR WAIT QUEUES                             * 44781000
*                                                                     * 44781500
*********************************************************************** 44782000
         SPACE 1                                                     R4 44782500
         LA    R1,$EWQ1-(PCEPCEA-PCEDSECT)  POINT TO 1ST PCE ZERO    R4 44783000
         LA    R2,8                         SET INCREMENT            R4 44783500
         LA    R3,$READY-(PCEPCEA-PCEDSECT) POINT TO LAST PCE ZERO   R4 44784000
         SPACE 1                                                     R4 44784500
SKIP1300 ST    R1,PCEPCEA-PCEDSECT(,R1)  STORE 1ST PCE POINTER       R4 44785000
         ST    R1,PCEPCEB-PCEDSECT(,R1)  STORE LAST PCE POINTER      R4 44785500
         BXLE  R1,R2,SKIP1300            LOOP UNTIL ALL ARE SET      R4 44786000
         SPACE 1                                                     R4 44786500
*********************************************************************** 44787000
*                                                                     * 44787500
*        SET CAT OVERRIDES FOR STARTED TASKS AND LOGONS               * 44788000
*                                                                     * 44788500
*********************************************************************** 44789000
         SPACE 1                                                     R4 44789500
         USING CATDSECT,R1         PROVIDE CAT ADDRESSABILITY        R4 44790000
         SPACE 1                                                     R4 44790500
         L     WA,$CATABLE                     GET STC               R4 44791000
         LA    R1,CATLEN*(CATSTCCL-X'C0')(,WA)  CAT ENTRY            R4 44791500
         OI    CATJOBFL,CATNOJNL   FORCE NO JOURNAL                  R4 44792000
         NI    CATJOBFL,255-CATRSTRT  FORCE NO RESTART               R4 44792500
         MVI   CATCONVP,C'0'       DON'T REQUIRE ACCT'G/PGM'R NAME   R4 44793000
         OI    CATSMFLG,CATNOUSO+CATNOTY6+CATNOUJP+CATNOT26  NO SMF  R4 44793500
         LA    R1,CATLEN*(CATTSUCL-X'C0')(,WA)  GET TSU CAT ENTRY    R4 44794000
         OI    CATJOBFL,CATNOJNL   FORCE NO JOURNAL                  R4 44794500
         NI    CATJOBFL,255-CATRSTRT  FORCE NO RESTART               R4 44795000
         MVI   CATCONVP,C'0'       DON'T REQUIRE ACCT'G/PGM'R NAME   R4 44795500
         SPACE 1                                                     R4 44796000
         DROP  R1                  KILL CAT ADDRESSABILITY           R4 44796500
         EJECT                                                       R4 44797000
*********************************************************************** 44797500
*                                                                     * 44798000
*        $POST THE TIME EXCESSION, $TIMER, WARM START AND             * 44798500
*        CHECKPOINT PROCESSORS.  HOLD ALL OTHERS.                     * 44799000
*                                                                     * 44799500
*********************************************************************** 44800000
         SPACE 1                                                     R4 44800500
         MVC   $VERSION,NVERSION   SET CURRENT VERSION IN HCT        R4 44801000
         SPACE 1                                                     R4 44801500
         LA    R1,$PCEORG-(PCENEXT-PCEDSECT)  PREPARE TO SCAN PCES   R4 44802000
         SPACE 1                                                     R4 44802500
         USING PCEDSECT,R1         PROVIDE PCE ADDRESSABILITY        R4 44803000
         SPACE 1                                                     R4 44803500
NXTPCE   ICM   R1,15,PCENEXT       SKIP TO NEXT PCE ON CHAIN            44804000
         BZ    NBUFBLD             BRANCH IF AT END OF CHAIN            44804500
         CLI   PCEID+1,PCETIMID    Q. IF $TIMER OR TIME EXCESSION       44805000
         BE    NPCEPST             BR. IF YES                           44805500
         CLI   PCEID+1,PCECKPID    Q. IF CHECKPOINT PCE                 44806000
         BE    NPCEPST             BR. IF YES                           44806500
         CLI   PCEID+1,PCEWRMID    Q. IF WARM START PCE                 44807000
         BE    NPCEPST             BR. IF YES                           44807500
         OI    PCEEWF,$EWFHOLD     TURN ON PCE HOLD BIT                 44808000
         B     NXTPCE              REITERATE LOOP                       44808500
         SPACE 1                                                        44809000
NPCEPST $POST  (R1),POST           PLACE PCE ON ACTIVE QUEUE            44809500
         B     NXTPCE              REITERATE LOOP                       44810000
         SPACE 1                                                     R4 44810500
NVERSION DC    CL8'&VERSION'       HASP VERSION NUMBER               R4 44811000
         SPACE 1                                                     R4 44811500
         DROP  R1                  KILL PCE ADDRESSABILITY           R4 44812000
         SPACE 1                                                     R4 44812500
         TITLE 'HASP INITIALIZATION -- BUFFER POOL GENERATION'       R4 44813000
*********************************************************************** 44813500
*                                                                     * 44814000
*        CALCULATE DEFAULT HASP BUFFER COUNT                          * 44814500
*                                                                     * 44815000
*        DEFAULT = 20 + 4*&NUMRDRS + (&NUMPRTS-N1)*N2                 * 44815500
*                  + N1*N2*&TCELSIZ + &NUMPUNS*N3                     * 44816000
*                  + &NUMLNES*(3+N4+N5)                               * 44816500
*          WHERE                                                      * 44817000
*                  N1 = NUMBER OF PRINTERS SPECIFYING DSPLTCEL        * 44817500
*                  N2 = 2 IF &PRTBOPT=YES, ELSE 1                     * 44818000
*                  N3 = 2 IF &PUNBOPT=YES, ELSE 1                     * 44818500
*                  N4 = 2 IF &RPRBOPT=YES, ELSE 1                     * 44819000
*                  N5 = 2 IF &RPUBOPT=YES, ELSE 1                     * 44819500
*                                                                     * 44820000
*********************************************************************** 44820500
         SPACE 1                                                     R4 44821000
NBUFBLD  LH    R0,$NUMBUF          USE &NUMBUF                       R4 44821500
         LTR   R0,R0                VALUE IF                         R4 44822000
         BNZ   NBBLDBGN              SPECIFIED                       R4 44822500
         SLR   WA,WA               GET NUMBER OF                     R4 44823000
         IC    WA,$NUMRDRS          LOCAL READERS                    R4 44823500
         SLL   WA,2                  TIMES 4                         R4 44824000
         SLR   WB,WB               ADD NUMBER                        R4 44824500
         IC    WB,$NUMPRTS          OF                               R4 44825000
         L     WC,=A(NPRDTCEL)       (LOCAL-DSPLTCEL)                R4 44825500
         SH    WB,0(,WC)              PRINTERS                       R4 44826000
         TM    $PRTOPTS,$PRTBOPT       TIMES                         R4 44826500
         BZ    SKIP1310                 BUFFERS PER                  R4 44827000
         SLL   WB,1                      PRINTER                     R4 44827500
SKIP1310 LA    R0,20(WA,WB)        ADD 20 TO ABOVE TOTAL             R4 44828000
         LH    WA,0(,WC)           ADD NUMBER OF                     R4 44828500
         IC    WB,$TCELSIZ          OF DSPLTCEL                      R4 44829000
         MR    WA,WA                 PRINTERS                        R4 44829500
         TM    $PRTOPTS,$PRTBOPT      TIMES TRACK-                   R4 44830000
         BZ    SKIP1320                CELL SIZE                     R4 44830500
         ALR   R0,WB                    TIMES BUFFERS                R4 44831000
SKIP1320 ALR   R0,WB                     PER PRINTER                 R4 44831500
         IC    WA,$NUMPUNS         ADD                               R4 44832000
         TM    $PRTOPTS,$PUNBOPT    NUMBER                           R4 44832500
         BZ    SKIP1330              OF PUNCHES                      R4 44833000
         ALR   R0,WA                  TIMES BUFFERS                  R4 44833500
SKIP1330 ALR   R0,WA                   PER PUNCH                     R4 44834000
         LA    WA,3+1+1                   ADD 3 TO                   R4 44834500
         TM    $PRTOPTS,$RPRBOPT+$RPUBOPT  BUFFERS PER               R4 44835000
         BM    SKIP1340                     REMOTE PRINTER           R4 44835500
         BZ    SKIP1350                      AND BUFFERS             R4 44836000
         LA    WA,1(,WA)                      PER REMOTE             R4 44836500
SKIP1340 LA    WA,1(,WA)                       PUNCH                 R4 44837000
SKIP1350 MH    WA,$NUMLNES         ADD BUFFERS                       R4 44837500
         ALR   R0,WA                PER LINE                         R4 44838000
         CH    R0,*+10             IMPOSE                            R4 44838500
         BNH   NBBLDBGN             &NUMBUF                          R4 44839000
         LA    R0,$MAXBUF            LIMIT                           R4 44839500
         EJECT                                                       R4 44840000
*********************************************************************** 44840500
*                                                                     * 44841000
*        GENERATE JES2 GENERAL BUFFER POOL                            * 44841500
*                                                                     * 44842000
*********************************************************************** 44842500
         SPACE 1                                                     R4 44843000
NBBLDBGN LH    R1,$BUFSIZE         GET SPOOL BUFFER SIZE             R4 44843500
         LA    R1,BUFSTART-BUFDSECT(,R1)  COMPUTE STORAGE BFR SIZE   R4 44844000
         STH   R1,$BUFLENG         SAVE STORAGE BUFFER SIZE          R4 44844500
         LA    WF,NBFBUILD         POINT TO BUFFER BUILD ROUTINE     R4 44845000
         BALR  WE,WF                AND GO DO IT                     R4 44845500
         MVI   BPMBFTYP-BPMDSECT(R1),BUFHASP  SET BUFFER TYPE        R4 44846000
         STH   R0,$NUMBUF          STORE BUFFERS ALLOCATED           R4 44846500
         ST    R1,$BFRMAP           AND BUFFER POOL MAP ADDRESS      R4 44847000
         SPACE 3                                                     R4 44847500
*********************************************************************** 44848000
*                                                                     * 44848500
*        GENERATE JES2 PP (PRINT/PUNCH PROCESSOR) BUFFERS             * 44849000
*                                                                     * 44849500
*        THE NUMBER OF BUFFERS REQUIRED = $NUMPUNS + NPRDTCEL +       * 44850000
*                                         ($NUMPRTS - NBR3800)        * 44850500
*                                                                     * 44851000
*        THE SIZE OF A BUFFER = 2X + (BUFFER PREFIX AREA)             * 44851500
*                                                                     * 44852000
*          WHERE X = MAX ($NOPRCCW*8+PCIESIZE+((JOESIZE+7)/8)*8,      * 44852500
*                         $NOPUCCW*8+PCIESIZE+((JOESIZE+7)/8)*8,      * 44853000
*                         ($TCELSIZ*4-3)*4)                           * 44853500
*                                                                     * 44854000
*********************************************************************** 44854500
         SPACE 1                                                     R4 44855000
NBBLDPP  SLR   WE,WE               CLEAR WORK REGISTER               R4 44855500
         IC    WE,$NOPRCCW         PICK UP $NOPRCCW                  R4 44856000
         SLL   WE,3                MULTIPLY BY 8                     R4 44856500
         LA    WE,PCIESIZE(,WE)    ADD LENGTH OF PCIE                R4 44857000
         LA    WE,(JOESIZE+7)/8*8(,WE) ADD ROUNDED JOE SIZE          R4 44857500
         LR    R1,WE               SAVE AS FIRST MAX VALUE           R4 44858000
         SLR   WE,WE               CLEAR WORK REG                    R4 44858500
         IC    WE,$NOPUCCW         PICK UP $NOPUCCW                  R4 44859000
         SLL   WE,3                MULTIPLY BY 8                     R4 44859500
         LA    WE,PCIESIZE(,WE)    ADD LENGTH OF PCIE                R4 44860000
         LA    WE,(JOESIZE+7)/8*8(,WE) ADD ROUNDED JOE SIZE          R4 44860500
         CR    R1,WE               DO WE HAVE A NEW MAX VALUE...     R4 44861000
         BNL   SKIP1360            BR IF NO                          R4 44861500
         LR    R1,WE                ELSE USE NEW MAX VALUE           R4 44862000
SKIP1360 SLR   R2,R2               CLEAR WORK REG                    R4 44862500
         IC    R2,$TCELSIZ         PICK UP $TCELSIZ                  R4 44863000
         SLL   R2,2                MULTIPLY BY 4                     R4 44863500
         EJECT                                                       R4 44864000
         BCTR  R2,0                SUB-                              R4 44864500
         BCTR  R2,0                 TRACT                            R4 44865000
         BCTR  R2,0                  3                               R4 44865500
         SLL   R2,2                MULTIPLY BY 4                     R4 44866000
         CR    R1,R2               DO WE HAVE A NEW MAX VALUE...     R4 44866500
         BNL   SKIP1370            BR IF NO                          R4 44867000
         LR    R1,R2                ELSE USE NEW MAX VALUE           R4 44867500
SKIP1370 SLL   R1,1                MULTIPLY X BY 2                   R4 44868000
         LA    R1,BUFSTART-BUFDSECT(,R1) ADD BUFER PREFIX SIZE       R4 44868500
         CH    R1,=H'4096'         IF BUFFER SIZE LARGER THAN  @OZ27170 44868600
         BNH   SKIP1075             ONE PAGE, ROUND DOWN       @OZ27170 44868700
         LH    R1,=H'4096'           ONE PAGE                  @OZ27170 44868800
SKIP1075 DS    0H                                              @OZ27170 44868900
         SLR   R0,R0               CLEAR WORK REG                    R4 44869000
         SLR   R2,R2               CLEAR WORK REG                    R4 44869500
         IC    R0,$NUMPRTS         GET TOTAL NBR OF PRINTERS         R4 44870000
         L     WE,=A(NBR3800)      GET A(NBR3800)                    R4 44870500
         L     WF,=A(NPRDTCEL)     GET A(NPRDTCEL)                   R4 44871000
         SH    R0,0(,WE)           SUBTRACT NBR OF 3800 PRINTERS     R4 44871500
         AH    R0,0(,WF)           ADD NBR OF TRAKCELL PRINTERS      R4 44872000
         IC    R2,$NUMPUNS         NBR OF PUNCHES                    R4 44872500
         ALR   R0,R2               TOTAL NBR OF BUFFERS REQUIRED     R4 44873000
         LA    WF,NBFBUILD         POINT TO BUFFER BUILD RTN         R4 44873500
         BALR  WE,WF               BUILD THEM                        R4 44874000
         MVI   BPMBFTYP-BPMDSECT(R1),BUFPP   SET BUFFER TYPE         R4 44874500
         ST    R1,$PPBFMAP         SAVE BUFFER POOL MAP ADDRESS      R4 44875000
         SPACE 3                                                     R4 44875500
*********************************************************************** 44876000
*                                                                     * 44876500
*        GENERATE JES2 PAGE BUFFERS                                   * 44877000
*                                                                     * 44877500
*        THE SIZE OF A BUFFER = 4096 BYTES (ONE PAGE)                 * 44878000
*                                                                     * 44878500
*        THE NUMBER OF BUFFERS = NBR OF 3800 PRINTERS                 * 44879000
*                                                                     * 44879500
*********************************************************************** 44880000
         SPACE 1                                                     R4 44880500
NBBLDPG  L     WE,=A(NBR3800)      GET NUMBER                        R4 44881000
         LH    R0,0(,WE)            OF 3800 PRINTERS                 R4 44881500
         LTR   R0,R0                IN SYSTEM                        R4 44882000
         BZ    NBBLDEND            AREN'T ANY, DON'T GET BUFFERS     R4 44882500
         LA    R1,4095             SIZE OF A                         R4 44883000
         LA    R1,1(,R1)            BUFFER                           R4 44883500
         LA    WF,NBFBUILD         POINT TO BUFFER BUILD RTN         R4 44884000
         BALR  WE,WF               DO IT                             R4 44884500
         MVI   BPMBFTYP-BPMDSECT(R1),BUFPAGE  SET BUFFER TYPE        R4 44885000
         ST    R1,$PGBFMAP         SAVE BUFFER POOL MAP ADDRESS      R4 44885500
         EJECT                                                       R4 44886000
*********************************************************************** 44886500
*                                                                     * 44887000
*        END OF BASIC INITIALIZATION -- RETURN TO HASPNUC             * 44887500
*                                                                     * 44888000
*********************************************************************** 44888500
         SPACE 1                                                     R4 44889000
NBBLDEND L     R7,$SSVT            RESTORE SSVT ADDRESS              R4 44889500
         MVC   $VFL,$SVVFL         MOVE VFL RTN ADDR TO HCT          R4 44890000
         L     R0,$SVTED           SET HCT POINTER                   R4 44890500
         ST    R0,$TEDADDR          TO FIRST TED                     R4 44891000
         L     WA,$SVSSCT          POINT TO THE SSCT                 R4 44891500
         MODESET EXTKEY=ZERO       SET ZERO PROTECT KEY              R4 44892000
         OI    SSCTFLG1-SSCT(WA),SSCTSFOR SERIALIZE PROCESS SYSOUT   R4 44892500
         ST    R7,SSCTSSVT-SSCT(,WA)  CONNECT SSVT TO SSCT           R4 44893000
         MODESET EXTKEY=HASP       RESTORE JES2 PROTECT KEY          R4 44893500
         SPACE 1                                                     R4 44894000
         L     R13,4(,R13)         RESTORE SAVE AREA POINTER         R4 44894500
         LM    LINK,R12,12(R13)    RESTORE CALLER'S REGISTERS        R4 44895000
         BR    LINK                 AND RETURN TO HASPNUC            R4 44895500
         SPACE 1                                                     R4 44896000
         DROP  R7                  KILL SSVT ADDRESSABILITY          R4 44896500
 TITLE 'HASP INITIALIZATION -- BUFFER POOL GENERATION SUBROUTINE'    R4 44897000
*********************************************************************** 44897500
*                                                                     * 44898000
*        NBFBUILD - GENERATE JES2 BUFFER POOL                         * 44898500
*                                                                     * 44899000
*        R0    - BUFFERS REQUESTED, BUFFERS ALLOCATED ON EXIT         * 44899500
*        R1    - BUFFER SIZE, BUFFER POOL MAP ADDR ON EXIT            * 44900000
*        WE    - RETURN ADDRESS                                       * 44900500
*        WF    - ENTRY POINT ADDRESS                                  * 44901000
*        R11   - HCT ADDRESS (BASE1)                                  * 44901500
*        R13   - 18 WORD SAVE AREA ADDRESS                            * 44902000
*                                                                     * 44902500
*        REGISTERS WA,WB,WC,WD DESTROYED BY THIS ROUTINE              * 44903000
*                                                                     * 44903500
*********************************************************************** 44904000
         SPACE 1                                                     R4 44904500
         USING BPMDSECT,R1         PROVIDE BFR MAP ADDRESSABILITY    R4 44905000
         USING NBFBUILD,WF         PROVIDE LOCAL ADDRESSABILITY      R4 44905500
         SPACE 1                                                     R4 44906000
NBFBUILD LH    WD,=H'4096'         WD = NUMBER                       R4 44906500
         SLR   WC,WC                     OF                          R4 44907000
         DR    WC,R1                      JES2                       R4 44907500
         CH    WD,=H'8'                    BUFFERS                   R4 44908000
         BNH   SKIP1380                     PER                      R4 44908500
         LH    WD,=H'8'                      PAGE                    R4 44909000
SKIP1380 SLR   WA,WA               WC = NUMBER OF                    R4 44909500
         LA    WB,BPMEND-1               BUFFERS RESERVED            R4 44910000
         DR    WA,R1                      IN BUFFER                  R4 44910500
         LR    WC,WB                       BIT MAP                   R4 44911000
         ALR   WB,R0               WB = NUMBER                       R4 44911500
         SLR   WA,WA                     OF BUFFERS,                 R4 44912000
         DR    WA,WD                      NOT TO                     R4 44912500
         LTR   WA,WA                       EXCEED 2048,              R4 44913000
         MR    WA,WD                        FILLING                  R4 44913500
         BZ    SKIP1390                      COMPLETELY              R4 44914000
         ALR   WB,WD                          THE                    R4 44914500
SKIP1390 CH    WB,=H'2048'                     PAGES                 R4 44915000
         BNH   NBFGMAIN                         TO                   R4 44915500
         SLR   WB,WD                             BE                  R4 44916000
         B     SKIP1390                           ALLOCATED          R4 44916500
         EJECT                                                       R4 44917000
NBFGMAIN DR    WA,WD               WB = STORAGE REQUIRED FOR         R4 44917500
         SLL   WB,12                     REQUESTED BUFFERS           R4 44918000
         LR    WA,R1               SAVE BUFFER SIZE                  R4 44918500
         LR    R0,WB               RELOAD STORAGE REQUIREMENT        R4 44919000
         GETMAIN RC,LV=(0),BNDRY=PAGE  OBTAIN BUFFER STORAGE         R4 44919500
         LTR   R15,R15             IF STORAGE NOT AVAILABLE,         R4 44920000
         BNZ   NBFPIG               BR TO ISSUE MSG AND ABORT        R4 44920500
         MVC   BPMID,=CL4'BPM'     SET BUFFER POOL MAP ID            R4 44921000
         STH   WA,BPMBFSIZ         STORE BUFFER SIZE                 R4 44921500
         LR    WA,R1               SAVE MAP ADDRESS                  R4 44922000
         ST    WB,BPMSIZE          SAVE STORAGE REQUIREMENT          R4 44922500
         LA    R0,BPMMAP           STORE ADDRESS                     R4 44923000
         ST    R0,BPMAPADR          OF BUFFER ALLOCATION MAP         R4 44923500
         ST    WD,BPMPGBFS         STORE NO. OF BUFFERS PER PAGE     R4 44924000
         L     R0,=X'0000FF00'     SET MASK                          R4 44924500
         SRL   R0,0(WD)             FOR DETERMINING                  R4 44925000
         STC   R0,BPMMASK            RELEASABLE PAGE                 R4 44925500
         LR    R0,WB               PAGE RELEASE                      R4 44926000
         SH    R0,=H'4096'          ALL BUFFER STORAGE               R4 44926500
         BZ    NBFMAP                EXCEPT                          R4 44927000
         AH    R1,=H'4096'            FOR                            R4 44927500
        $PGSRVC RLSE,(R1),(R0)         1ST PAGE                      R4 44928000
         LR    R1,WA               RESTORE MAP ADDRESS               R4 44928500
         EJECT                                                       R4 44929000
NBFMAP   XC    BPMMAP,BPMMAP       'ALLOCATE' ALL BUFFERS            R4 44929500
         L     R14,=X'0000FFFF'    FREE 1ST 16 BUFFERS,              R4 44930000
         SRL   R14,0(WC)            EXCEPT FOR THOSE                 R4 44930500
         STH   R14,BPMMAP            PERMANENTLY RESERVED            R4 44931000
         SRL   WB,12               IF MORE                           R4 44931500
         MR    WA,WD                THAN                             R4 44932000
         LR    R0,WB                 SIXTEEN                         R4 44932500
         SLR   R0,WC                  BUFFERS                        R4 44933000
         SH    WB,=H'16'               DEFINED,                      R4 44933500
         BP    NBFFREE                  BR TO FREE THE REST          R4 44934000
         LCR   WB,WB                ELSE 'RE-ALLOCATE'               R4 44934500
         SRL   R14,0(WB)             ANY UNDEFINED                   R4 44935000
         SLL   R14,0(WB)              BUFFERS AMONG                  R4 44935500
         STH   R14,BPMMAP              FIRST SIXTEEN                 R4 44936000
         SPACE 1                                                     R4 44936500
NBFRANGE LR    WB,WC               COMPUTE                           R4 44937000
         MH    WB,BPMBFSIZ          AND                              R4 44937500
         CLR   WC,WD                 STORE                           R4 44938000
         BL    SKIP1400               ADDRESS                        R4 44938500
         LH    WB,=H'4096'             OF                            R4 44939000
SKIP1400 ALR   WB,R1                    1ST                          R4 44939500
         ST    WB,BPMBFR1                BUFFER                      R4 44940000
         LR    WB,WC               GET RELATIVE                      R4 44940500
         ALR   WB,R0                BUFFER NUMBER                    R4 44941000
         BCTR  WB,0                  OF LAST BUFFER                  R4 44941500
         SLR   WA,WA               COMPUTE                           R4 44942000
         DR    WA,WD                AND                              R4 44942500
         SLL   WB,12                 STORE                           R4 44943000
         MH    WA,BPMBFSIZ            ADDRESS                        R4 44943500
         ALR   WB,WA                   OF                            R4 44944000
         ALR   WB,R1                    LAST                         R4 44944500
         ST    WB,BPMLAST                BUFFER                      R4 44945000
         STH   R0,BPMBUFCT         STORE NBR AVAIL BUFFERS AND       R4 44945500
         BR    WE                  THEN RETURN TO CALLER             R4 44946000
         SPACE 1                                                     R4 44946500
NBFFREE  LR    WA,WB               SAVE REMAINING BUFFER COUNT       R4 44947000
         SRL   WB,3                  FREE REMAINING                  R4 44947500
         STC   WB,*+5                 DEFINED                        R4 44948000
         MVC   BPMMAP+2(*-*),BPMMAP+1  BUFFERS                       R4 44948500
         N     WA,=F'7'            'RE-ALLOCATE' ANY                 R4 44949000
         L     R14,=X'0000FF00'     UNDEFINED BUFFERS                R4 44949500
         SRL   R14,0(WA)             AMONG LAST                      R4 44950000
         STC   R14,BPMMAP+2(WB)       8 'ALLOCATED'                  R4 44950500
         B     NBFRANGE            THEN BR TO SET BFR RANGE ADDRS    R4 44951000
         SPACE 1                                                     R4 44951500
NBFPIG  $$WTO  NBFMSG              ISSUE ERROR MESSAGE TO OPERATOR   R4 44952000
         L     R1,=A(NGQUITM)      POINT TO QUIT MESSAGE             R4 44952500
         L     R15,=A(NERRORET)    GET ADDRESS OF ERROR EXIT         R4 44953000
         BR    R15                  AND EXIT                         R4 44953500
         SPACE 1                                                     R4 44954000
         DROP  R1,WF               KILL LOCAL ADDRESSABILITY         R4 44954500
         EJECT                                                       R4 44955000
         LTORG                                                       R4 44955500
         TITLE 'HASP INITIALIZATION -- ERROR RETURN ROUTINE'         R4 44956000
*********************************************************************** 44956500
*                                                                     * 44957000
*        ERROR RETURN TO SYSTEM                                       * 44957500
*                                                                     * 44958000
*********************************************************************** 44958500
         SPACE 1                                                     R4 44959000
         USING DEBDSECT,R1         PROVIDE DEB ADDRESSABILITY        R4 44959500
         USING $SVDSECT,R2         PROVIDE SSVT ADDRESSABILITY       R4 44960000
         USING UCBDSECT,R3         PROVIDE UCB ADDRESSABILITY        R4 44960500
         SPACE 1                                                     R4 44961000
NERRORET BALR  BASE2,0             RE-ESTABLISH                      R4 44961500
         USING *,BASE2              LOCAL ADDRESSABILITY             R4 44962000
         SPACE 1                                                     R4 44962500
        $$WTO  (R1)                ISSUE ERROR MESSAGE TO OPERATOR   R4 44963000
         ICM   R2,15,$SSVT         GET SSVT ADDRESS                  R4 44963500
         BZ    NERRRETN            IF NOT SET YET, SKIP FREE         R4 44964000
         TM    $SVSTUS,$SVSTIRV    IF CHECKPOINT NOT RESERVED,       R4 44964500
         BZ    NERCONT              BR TO BYPASS RELEASE             R4 44965000
         L     R1,$DADEBAD         GET POINTER TO DA DEB             R4 44965500
         SLR   R3,R3               LOAD                              R4 44966000
         IC    R3,$NUMDA            CHECKPOINT                       R4 44966500
         SLL   R3,4                  UCB                             R4 44967000
         L     R3,DEBBASND(R3)        ADDRESS                        R4 44967500
         SPACE 1                                                     R4 44968000
         DROP  R1                  KILL DEB ADDRESSABILITY           R4 44968500
         SPACE 1                                                     R4 44969000
        $GETLOK                    GET CMS LOCK                      R4 44969500
         MODESET EXTKEY=ZERO       SET ZERO PROTECT KEY              R4 44970000
         SLR   R0,R0               CLEAR WORK REGISTER               R4 44970500
         IC    R0,UCBSQC           DECREMENT                         R4 44971000
         BCTR  R0,0                 RESERVE                          R4 44971500
         STC   R0,UCBSQC             COUNT                           R4 44972000
         NI    $SVSTUS,255-$SVSTIRV  KILL INIT RESERVE BIT           R4 44972500
         LTR   R0,R0               Q. IF RESERVE COUNT WENT TO ZERO     44973000
         BNZ   NFRELOK             BR. IF NO -- SKIP STARTIO MACRO      44973500
         TM    UCBTBYT2,UCBRR      Q. IF RESERVE/RELEASE             R4 44974000
         BZ    NFRELOK             BR. IF NO -- SKIP STARTIO MACRO      44974500
         STM   R14,R12,12(R13)     SAVE REGISTERS THROUGH STARTIO       44975000
         L     R1,$SVRELSE-SSVT(,WA)  POINT TO SRB FOR STARTIO MACRO    44975500
         STARTIO SRB=(1)           REMOVE RESERVE ON CHECKPOINT         44976000
         LM    R14,R12,12(R13)     RESTORE SAVED REGISTERS              44976500
         EJECT                                                       R4 44977000
NFRELOK $FRELOK                    FREE CMS LOCK                     R4 44977500
         SPACE 1                                                     R4 44978000
NERCONT  TM    $SVSTUS,$SVSTUSR    CHECK STATUS                      R4 44978500
         BZ    NERFRCMB            BRANCH TO FREE SSVT                  44979000
         XI    $SVSTUS,$SVSTUSR+$SVSTUST  FLIP BITS                  R4 44979500
         B     NERRRETN            EXIT                                 44980000
         SPACE 1                                                     R4 44980500
NERFRCMB ICM   R1,15,$SVCMBA       GET CMB POOL ADDRESS              R4 44981000
         BZ    NERFRSVT            BRANCH IF NONE                       44981500
         L     R0,8(,R1)           GET LENGTH                           44982000
         ICM   R0,8,=AL1(231)       AND SUBPOOL                         44982500
         FREEMAIN R,LV=(0),A=(1)   FREE CMB POOL                        44983000
         SPACE 1                                                     R4 44983500
NERFRSVT L     R1,$SVRELSE         POINT TO RELEASE SRB-IOSB         R4 44984000
         FREEMAIN R,LV=SRBSIZE+IOSEND-IOSB,A=(1),SP=245  FREE IT        44984500
         LR    R1,WA               GET ADDRESS OF SSVT                  44985000
         SL    R1,=F'8'            POINT TO SSVT PREFIX              R4 44985500
         L     R0,4(,R1)           GET LENGTH, INCLUDING PREFIX      R4 44986000
         ICM   R0,8,=AL1(241)       AND SUBPOOL                         44986500
         FREEMAIN R,LV=(0),A=(1)   FREE SSVT                            44987000
         SPACE 1                                                     R4 44987500
NERRRETN L     R13,4(,R13)         GET ADDRESS OF HASPNUC SAVE AREA  R4 44988000
         L     R13,4(,R13)         GET ADDRESS OF SYSTEM SAVE AREA   R4 44988500
         LM    R14,R12,12(R13)     RESTORE REGISTERS                    44989000
         LA    R15,20              SET RETURN CODE                      44989500
         BR    R14                  AND RETURN                          44990000
         SPACE 1                                                     R4 44990500
         DROP  R2,R3               KILL SSVT, UCB ADDRESSABILITY     R4 44991000
         SPACE 2                                                     R4 44991500
         LTORG                     DEFINE LITERALS FOR RETURN ROUTINE   44992000
  TITLE 'HASP INITIALIZATION -- $$WTO/$$WTOR PROCESSING ROUTINE'     R4 44992500
*********************************************************************** 44993000
*                                                                     * 44993500
*        SETUP WTO/WTOR MESSAGE AND ENTER $$WTO ROUTINE               * 44994000
*                                                                     * 44994500
*********************************************************************** 44995000
         SPACE 1                                                     R4 44995500
         USING NWTORTN,R15         PROVIDE LOCAL ADDRESSABILITY      R4 44996000
         SPACE 1                                                     R4 44996500
NWTORTN  STM   R14,R3,12(R13)      SAVE REGISTERS                    R4 44997000
         LR    R0,R1               MOVE                              R4 44997500
         LA    R1,NPARMSGL          MESSAGE                          R4 44998000
         LR    R3,R1                 TO                              R4 44998500
         LA    R2,NWTOWORK            WORK                           R4 44999000
         MVCL  R2,R0                   AREA                          R4 44999500
         LM    R14,R3,12(R13)      RESTORE REGISTERS                 R4 45000000
         LA    R1,NWTOWORK         POINT TO WORK AREA                R4 45000500
         L     R15,$$WTO           POINT TO $$WTO/$$WTOR ROUTINE     R4 45001000
         BR    R15                  AND ENTER IT                     R4 45001500
         SPACE 1                                                     R4 45002000
         DROP  R15                 KILL LOCAL ADDRESSABILITY         R4 45002500
         SPACE 1                                                     R4 45003000
         DS    0F                                                    R4 45003500
NWTOWORK DS    (NPARMSGL)C         MESSAGE WORK AREA                 R4 45004000
         SPACE 1                                                     R4 45004500
         LTORG                                                       R4 45005000
         TITLE 'HASP INITIALIZATION -- OUTPUT PRIORITY TABLE'        R4 45005500
         SPACE 5                                                     R4 45006000
NXPRITAB DS    0F                                                    R4 45006500
         DC    AL1(16*9),AL3(2000)       FIRST   INTERVAL            R4 45007000
         DC    AL1(16*8),AL3(5000)       SECOND  INTERVAL            R4 45007500
         DC    AL1(16*7),AL3(15000)      THIRD   INTERVAL            R4 45008000
         DC    AL1(16*6),AL3(X'FFFFFF')  FOURTH  INTERVAL            R4 45008500
         DC    AL1(16*5),AL3(X'FFFFFF')  FIFTH   INTERVAL            R4 45009000
         DC    AL1(16*4),AL3(X'FFFFFF')  SIXTH   INTERVAL            R4 45009500
         DC    AL1(16*3),AL3(X'FFFFFF')  SEVENTH INTERVAL            R4 45010000
         DC    AL1(16*2),AL3(X'FFFFFF')  EIGHTH  INTERVAL            R4 45010500
         DC    AL1(16*1),AL3(X'FFFFFF')  NINTH   INTERVAL            R4 45011000
         DC    AL4(X'FFFFFF')                                        R4 45011500
         TITLE 'HASP INITIALIZATION -- SYSOUT CLASS CHARACTERISTICS TABC45012000
               LE'                                                      45012500
         SPACE 5                                                        45013000
         ORG   *-3*64              ORG OVER UNUSED SPACE                45013500
NSCAT    DS    0D                  SYSOUT CLASS ATTRIBUTE TABLE         45014000
         ORG   *+3*64              INVALID CLASSES                      45014500
         SPACE 1                                                        45015000
         DC    01AL1(SCATDUMM+SCATINVL)  INVALID CLASS                  45015500
         DC    01AL1(0)            CLASS A                              45016000
         DC    01AL1(SCATPNCH)     CLASS B                              45016500
         DC    07AL1(0)            CLASSES C-I                          45017000
         DC    07AL1(SCATDUMM+SCATINVL)  INVALID CLASSES                45017500
         DC    01AL1(0)            CLASS J                              45018000
         DC    01AL1(SCATPNCH)     CLASS K                              45018500
         DC    07AL1(0)            CLASSES L-R                          45019000
         DC    08AL1(SCATDUMM+SCATINVL)  INVALID CLASSES                45019500
         DC    08AL1(0)            CLASSES S-Z                          45020000
         DC    06AL1(SCATDUMM+SCATINVL)  INVALID CLASSES                45020500
         DC    10AL1(0)            CLASSES 0-9                          45021000
         DC    06AL1(SCATDUMM+SCATINVL)  INVALID CLASSES                45021500
         TITLE 'HASP INITIALIZATION -- REMOTE WORK TABLE (RWT) DSECT'   45022000
RWTDSECT DSECT                     REMOTE WORK TABLE DSECT              45022500
RWTINDEX DS    X                   REMOTE DEVICE INDEX               R4 45023000
RWTSTAT  DS    BL1                 REMOTE DEVICE STATUS                 45023500
RWTROUTE DS    AL2                 REMOTE DEVICE ROUTE CODE             45024000
RWTLRECL DS    X                   REMOTE DEVICE LRECL         @OZ29180 45024100
RWTSEL   DS    X                   RMT SNA DEVICE SELECT BYTE  @OZ29180 45024200
RWTFEAT  DS    X                   COMMOM SNA/BSC FEATURES     @OZ29180 45024300
RWTSFEAT DS    X                   SNA FEATURES ONLY           @OZ29180 45024400
RWTCSEND EQU   *                   END OF COMMON SECTION                45024500
         DS    AL1                 RESERVED                          R4 45025500
RWTPRSYS DS    AL2                 SYSTEM ID                         R4 45026000
RWTPRINT DS    AL2                 DEFAULT PRINT ROUTE CODE             45029000
RWTPUSYS DS    AL2                 SYSTEM ID                         R4 45030000
RWTPUNCH DS    AL2                 DEFAULT PUNCH ROUTE CODE             45032500
RWTJCLAS DS    C                   DEFAULT JOB CLASS                    45033000
RWTMCLAS DS    C                   DEFAULT MSGCLASS                     45033500
RWTPRINC DS    X                   PRIORITY INCREMENT                   45034000
RWTPRLIM DS    X                   PRIORITY LIMIT                       45034500
RWTFLAGS DS    BL1                 OPERATOR COMMAND FLAGS               45035000
RWTRDEND EQU   *                   END OF REMOTE READER ELEMENT         45035500
         ORG   RWTCSEND                                                 45036000
RWTFORMS DS    CL4                 REMOTE PRINT/PUNCH FORMS ID          45036500
RWTFCB   DS    CL4                 REMOTE PRINT CARRIAGE TAPE ID        45037000
RWTUCS   DS    CL4                 REMOTE PRINT CHARACTER SET ID        45037500
RWTPPFL  DS    BL1                 REMOTE PRINT PUNCH FLAGS             45038000
RWTPPSW  DS    BL1                 REMOTE PRINT/PUNCH SWITCHES          45038500
RWTCLASS DS    CL36                REMOTE PRINT/PUNCH CLASS LIST     R4 45039000
*                                  THIS CARD DELETED BY APAR   @OZ29180 45039500
RWTDCPTN DS    X                   DEFAULT CPT NUMBER               R41 45040000
RWTCHLM  DS    X                   SNA REMOTE CHAIN LIMIT            R4 45041000
RWTCHSZ  DS    X                   SNA REMOTE CHAIN SIZE             R4 45041500
RWTPPEND EQU   *                   END OF REMOTE PRINT/PUNCH ELEMENT    45042500
         SPACE 3                                                        45043000
         ORG   RWTDSECT                                                 45043500
RWTRDR1  DS    XL(RWTRDEND-RWTDSECT)  RNNN.RD1 WORK TABLE ELEMENT       45044000
RWTRDR2  DS    XL(RWTRDEND-RWTDSECT)  RNNN.RD2 WORK TABLE ELEMENT       45044500
RWTRDR3  DS    XL(RWTRDEND-RWTDSECT)  RNNN.RD3 WORK TABLE ELEMENT       45045000
RWTRDR4  DS    XL(RWTRDEND-RWTDSECT)  RNNN.RD4 WORK TABLE ELEMENT       45045500
RWTRDR5  DS    XL(RWTRDEND-RWTDSECT)  RNNN.RD5 WORK TABLE ELEMENT       45046000
RWTRDR6  DS    XL(RWTRDEND-RWTDSECT)  RNNN.RD6 WORK TABLE ELEMENT       45046500
RWTRDR7  DS    XL(RWTRDEND-RWTDSECT)  RNNN.RD7 WORK TABLE ELEMENT       45047000
RWTPRT1  DS    XL(RWTPPEND-RWTDSECT)  RNNN.PR1 WORK TABLE ELEMENT       45047500
RWTPRT2  DS    XL(RWTPPEND-RWTDSECT)  RNNN.PR2 WORK TABLE ELEMENT       45048000
RWTPRT3  DS    XL(RWTPPEND-RWTDSECT)  RNNN.PR3 WORK TABLE ELEMENT       45048500
RWTPRT4  DS    XL(RWTPPEND-RWTDSECT)  RNNN.PR4 WORK TABLE ELEMENT       45049000
RWTPRT5  DS    XL(RWTPPEND-RWTDSECT)  RNNN.PR5 WORK TABLE ELEMENT       45049500
RWTPRT6  DS    XL(RWTPPEND-RWTDSECT)  RNNN.PR6 WORK TABLE ELEMENT       45050000
RWTPRT7  DS    XL(RWTPPEND-RWTDSECT)  RNNN.PR7 WORK TABLE ELEMENT       45050500
RWTPUN1  DS    XL(RWTPPEND-RWTDSECT)  RNNN.PU1 WORK TABLE ELEMENT       45051000
RWTPUN2  DS    XL(RWTPPEND-RWTDSECT)  RNNN.PU2 WORK TABLE ELEMENT       45051500
RWTPUN3  DS    XL(RWTPPEND-RWTDSECT)  RNNN.PU3 WORK TABLE ELEMENT       45052000
RWTPUN4  DS    XL(RWTPPEND-RWTDSECT)  RNNN.PU4 WORK TABLE ELEMENT       45052500
RWTPUN5  DS    XL(RWTPPEND-RWTDSECT)  RNNN.PU5 WORK TABLE ELEMENT       45053000
RWTPUN6  DS    XL(RWTPPEND-RWTDSECT)  RNNN.PU6 WORK TABLE ELEMENT       45053500
RWTPUN7  DS    XL(RWTPPEND-RWTDSECT)  RNNN.PU7 WORK TABLE ELEMENT       45054000
RWTEND   DS    0F                  END OF REMOTE WORK TABLE ELEMENT     45054500
RWTLEN   EQU   RWTEND-RWTDSECT     LENGTH OF REMOTE WORK TABLE ELEMENT  45055000
HASPINIT CSECT                     END OF REMOTE WORK TABLE DSECT       45055500
         TITLE 'HASP INITIALIZATION -- REMOTE WORK LOOK-UP (RWL) TABLE C45056000
               DSECT'                                                   45056500
         SPACE 5                                                        45057000
RWLDSECT DSECT                     REMOTE WORK LOOK-UP TABLE DSECT      45057500
RWLNAME  DS    CL3                 REMOTE DEVICE NAME                   45058000
RWLRCB   DS    X                   REMOTE DEVICE RECORD CONTROL BYTE    45058500
RWLFCS   DS    BL2                 REMOTE DEVICE FUNCTION CONTROL SEQ   45059000
RWLDISP  DS    AL2                 REMOTE WORK TABLE ENTRY DISPLACEMENT 45059500
         DS    X                   RESERVED                          R4 45060500
RWLSEL   DS    X                   REMOTE DEVICE SNA SELECT BYTE     R4 45061000
RWLEND   DS    0H                  END OF REMOTE LOOK-UP TABLE ELEMENT  45062000
HASPINIT CSECT                     END OF RMT LOOK-UP TABLE DSECT       45062500
         TITLE 'HASP INITIALIZATION -- REMOTE WORK LOOK-UP TABLE'       45063000
         SPACE 5                                                        45063500
$RWL     DS    0D                                                       45064000
         DC    CL3'RD1',X'93',X'0800',AL2(RWTRDR1-RWTDSECT),XL2'20'  R4 45065000
         DC    CL3'RD2',X'A3',X'0400',AL2(RWTRDR2-RWTDSECT),XL2'21'  R4 45065500
         DC    CL3'RD3',X'B3',X'0200',AL2(RWTRDR3-RWTDSECT),XL2'22'  R4 45066000
         DC    CL3'RD4',X'C3',X'0100',AL2(RWTRDR4-RWTDSECT),XL2'23'  R4 45066500
         DC    CL3'RD5',X'D3',X'0008',AL2(RWTRDR5-RWTDSECT),XL2'24'  R4 45067000
         DC    CL3'RD6',X'E3',X'0004',AL2(RWTRDR6-RWTDSECT),XL2'25'  R4 45067500
         DC    CL3'RD7',X'F3',X'0002',AL2(RWTRDR7-RWTDSECT),XL2'26'  R4 45068000
         DC    CL3'PR1',X'94',X'0800',AL2(RWTPRT1-RWTDSECT),XL2'B0'  R4 45068500
         DC    CL3'PR2',X'A4',X'0400',AL2(RWTPRT2-RWTDSECT),XL2'B1'  R4 45069000
         DC    CL3'PR3',X'B4',X'0200',AL2(RWTPRT3-RWTDSECT),XL2'B2'  R4 45069500
         DC    CL3'PR4',X'C4',X'0100',AL2(RWTPRT4-RWTDSECT),XL2'B3'  R4 45070000
         DC    CL3'PR5',X'D4',X'0008',AL2(RWTPRT5-RWTDSECT),XL2'B4'  R4 45070500
         DC    CL3'PR6',X'E4',X'0004',AL2(RWTPRT6-RWTDSECT),XL2'B5'  R4 45071000
         DC    CL3'PR7',X'F4',X'0002',AL2(RWTPRT7-RWTDSECT),XL2'B6'  R4 45071500
         DC    CL3'PU1',X'95',X'0001',AL2(RWTPUN1-RWTDSECT),XL2'A0'  R4 45072000
         DC    CL3'PU2',X'A5',X'0002',AL2(RWTPUN2-RWTDSECT),XL2'A1'  R4 45072500
         DC    CL3'PU3',X'B5',X'0004',AL2(RWTPUN3-RWTDSECT),XL2'A2'  R4 45073000
         DC    CL3'PU4',X'C5',X'0008',AL2(RWTPUN4-RWTDSECT),XL2'A3'  R4 45073500
         DC    CL3'PU5',X'D5',X'0100',AL2(RWTPUN5-RWTDSECT),XL2'A4'  R4 45074000
         DC    CL3'PU6',X'E5',X'0200',AL2(RWTPUN6-RWTDSECT),XL2'A5'  R4 45074500
         DC    CL3'PU7',X'F5',X'0400',AL2(RWTPUN7-RWTDSECT),XL2'A6'  R4 45075000
         SPACE 5                                                        45087000
$INITLEN $DLENGTH HEADER=I         COMPUTE CONTROL SECTION LENGTH       45087500
APARNUM  DC    CL5'29138'          APAR NUMBER                          45087998
         END                                                            45088000
