COMM     TITLE 'HASP COMMAND PROCESSOR - PROLOG'               @OZ18212 20000500
*********************************************************************** 20001000
*                                                                     * 20001500
* MODULE NAME = HASJES20 (HASPCOMM CSECT)                             * 20002000
*                                                                     * 20002500
* DESCRIPTIVE NAME = JES2 COMMAND PROCESSOR                           * 20003000
*                                                                     * 20003500
* COPYRIGHT = NONE                                                    * 20004100
*                                                                     * 20004700
* STATUS = OS/VS2 MVS   --  SEE &VERSION (BELOW) FOR JES2 LEVEL       * 20005000
*                                                                     * 20005500
* FUNCTION = ACCEPTS OPERATOR COMMAND FROM VARYING SOURCES AND        * 20006000
*            REPLIES TO THE SUBMITTER THE APPROPRIATE DATA BASED      * 20006500
*            UPON THE COMMAND AND ITS OPERANDS. NO I/O IS DONE        * 20007000
*            FROM THIS MODULE. THE COMMAND ARE TAKEN FROM THE         * 20007500
*            CONSOLE MESSAGE BUFFERS AND A REPLY IS BUILT IN THE      * 20008000
*            COMMAND PROCESSOR PCE WORK AREA FROM THE APPROPRIATE     * 20008500
*            JES2 CONTROL BLOCKS. THIS RESPONSE IS THEN SENT TO THE   * 20009000
*            SUBMITTER BY JES2 $WTO SERVICES.                         * 20009500
*                                                                     * 20010000
* NOTES = SEE BELOW                                                   * 20010500
*                                                                     * 20011000
*   DEPENDENCIES = IF MULTIPLE COMMAND ARE USED, THEY MUST BE         * 20011500
*                  SEPERATED BY SEMICOLONS AND THE JES2 COMMAND       * 20012000
*                  INDENTIFIER IS OMITTED FROM SECOND AND SUBSEQUENT  * 20012500
*                  COMMANDS IN THAT INPUT LINE                        * 20013000
*                                                                     * 20013500
*   RESTRICTIONS = NONE                                               * 20014000
*                                                                     * 20014500
*   REGISTER CONVENTIONS = R0  =       = PARAMETER REGISTER           * 20015000
*                          R1  =       = PARAMETER REGISTER           * 20015500
*                          R2  = WA    = WORK REGISTER                * 20016000
*                          R3  = WB    = WORK REGISTER                * 20016500
*                          R4  = WC    = WORK REGISTER                * 20017000
*                          R5  = WD    = CURRENT OPERAND POINTER      * 20017500
*                          R6  = WE    = CONSTANT OF FOUR (4)         * 20018000
*                          R7  = WF    = LAST OR NULL OPERAND POINTER * 20018500
*                          R8  = BASE3 = SUB PROCESSOR ADDRESSABILITY * 20019000
*                          R9  =       = RESERVED (IE. NOT USED)      * 20019500
*                          R10 =       = WORK REGISTER                * 20020000
*                          R11 = BASE1 = HCT ADDRESSABILITY           * 20020500
*                          R12 = BASE2 = MAIN PROCESSOR ADDRESSABILITY* 20021000
*                          R13 = SAVE  = PCE ADDRESSABILITY           * 20021500
*                          R14 = LINK  = LINKAGE REGISTER             * 20022000
*                          R15 =       = RETURN REGISTER              * 20022500
*                                                                     * 20023000
*   PATCH LABEL = NONE                                                * 20023500
*                                                                     * 20024000
* MODULE TYPE = PROCESSOR, TABLE (CSECT TYPE)                         * 20024500
*                                                                     * 20025000
*   PROCESSOR = OS/VS ASSEMBLER                                       * 20025500
*                                                                     * 20026000
*    MODULE SIZE = SEE $DLENGTH MACRO EXPANSION(S) AT END OF ASSEMBLY * 20026500
*                                                                     * 20027500
*   ATTRIBUTES = READ ONLY, AFTER PROCESSOR INITIALIZATION, AND       * 20028000
*                HASP REENTRANT                                       * 20028500
*                                                                     * 20029000
* ENTRY POINT = HASPCOMM                                              * 20029500
*                                                                     * 20030000
*   PURPOSE = SEE FUNCTION                                            * 20030500
*                                                                     * 20031000
*   LINKAGE = VIA $WAIT AND $POST OBEYING JES2 CONVENTIONS            * 20031500
*                                                                     * 20032000
* ENTY POINT = $JCANR                                                 * 20032500
*                                                                     * 20033000
*   PURPOSE = TO CANCEL JOBS, STCS, OR TSUS IN JES2                   * 20033500
*             1). REJECT ATTEMPTS TO CANCEL OR STOP STC OR            * 20034000
*                 TSU TASKS PRIOR TO EXECUTION                        * 20034500
*                                                                     * 20035000
*             2). PURGE BQES AND JOES FOR STOP JOB AND CANCEL         * 20035500
*                 WITH PURGE                                          * 20036000
*                                                                     * 20036500
*             3). ISSUE OS/VS CANCEL COMMAND IF REQUIRED FOR A JOB    * 20037000
*                                                                     * 20037500
*             4). DELETE ACTIVITY ON JES2 READERS FOR CANCEL REQUESTS * 20038000
*                 AND ON JES2 PRINTERS AND PUNCHES FOR CANCEL         * 20038500
*                 WITH PURGE REQUESTS                                 * 20039000
*                                                                     * 20039500
*   LINKAGE = VIA $JCAN MACRO                                         * 20040000
*                                                                     * 20040500
* INPUT = CONSOLE MESSAGE BUFFER CONTAINING THE COMMAND               * 20041000
*                                                                     * 20041500
* OUTPUT = EITHER A DIAGNOSTIC OR A RESPONSE TO THE INPUT COMMAND     * 20042000
*                                                                     * 20042500
* EXIT-NORMAL = $WTO PROCESSOR                                        * 20043000
*                                                                     * 20043500
* EXIT-ERROR = NONE                                                   * 20044000
*                                                                     * 20044500
* EXTERNAL REFERENCES = SEE BELOW                                     * 20045000
*                                                                     * 20045500
*   ROUTINES = SEE MACROS FOR SERVICES USED                           * 20046000
*                                                                     * 20046500
*   DATA AREAS = SEE $HASPCB MACRO EXPANSION                          * 20047000
*   CONTROL BLOCKS = SEE $HASPCB MACRO EXPANSION                      * 20047500
*                                                                     * 20048000
* TABLES = 256 BYTE TABLE IS USED TO VALIDATE ALPHANUMERIC            * 20048500
*          COMMAND OPERANDS                                           * 20049000
*                                                                     * 20049500
* MACROS = HASPCOMM = $COMGRUP, $COMTAB, $CRET, $CWTO, $CFCVB, $CFCVE,* 20050000
*                     $CFDCTD, $CFDCTL, $CFINVC, $CFINVO, $CFJDCT,    * 20050500
*                     $CFJDCTC, $CFJMSG, $CFJSCAN, $CFSEL, $CFVQE     * 20051000
*                                                                     * 20051500
* MACROS = JES2     = $HASPCB, $ENTRY, $WTO, $WAIT, $STIMER, $GETCMB, * 20052000
*                     $MSG, $TTIMER, $FRECMB, $POST, $QCKPT, $JCAN,   * 20052500
*                     $QMOD, $QLOC, $FREUNIT, $ALLOC,                 * 20053000
*                     $GETLOK, $FRELOK, $#CKPT, $#ADD, $QPUT          * 20053500
*                                                                     * 20054000
* MACROS = SYSTEM   = TIME, MODESET, PURGE                            * 20054500
*                                                                     * 20054600
*                                                                     * 20054700
*                                                                     * 20054800
*                                                                     * 20054900
* CHANGE ACTIVITY                                                     * 20055000
*                                                                     * 20055100
*     RELEASE 4.0 = OZ02440,OZ03321,OZ03339,OZ04315,OZ04343,OZ04344,  * 20055300
*                   OZ04983,OZ06751,OZ07444,OZ07458,OZ08189,OZ09044,  * 20055400
*                   OZ09045,OZ09105                                   * 20055500
*                                                                     * 20055600
*     RELEASE 4.1 = OZ09093,OZ10322,OZ10325,OZ10353,OZ10354,OZ10363,  * 20055700
*                   OZ11742,OZ11744,OZ11747,OZ11748,OZ11763,OZ11769,  * 20055800
*                   OZ11775,OZ11787,OZ12293,OZ12299,OZ12316,OZ13256,  * 20055900
*                   OZ14905,OZ15817,OZ15839,OZ16681,OZ16683,OZ18201   * 20056000
*                                                                     * 20057000
*********************************************************************** 20057500
         TITLE 'HASP CONTROL BLOCK GENERATION MACRO'                    20058000
*                                                                       20058500
*****    $HASPCB   *****           GENERATE HASP CONTROL BLOCKS         20059000
*                                                                       20059500
         SPACE 1                                                        20060000
         MACRO                                                          20060500
         $HASPCB &DOC=NO,&LIST=NO                                       20061000
         GBLC  &PRINT,&GEN,&DATA                                        20061500
         PUSH  PRINT                                                    20062000
         PRINT &PRINT                                                   20062500
         $CVT  LIST=&LIST          GENERATE OS CVT DSECT                20063000
         $SSOB (SO),LIST=&LIST     GENERATE OS SSOB DSECT               20063500
         $TCB  LIST=&LIST          GENERATE OS TCB DSECT                20064000
         $DCB  LIST=&LIST          GENERATE OS DCB DSECT                20064500
         $DEB  LIST=&LIST          GENERATE OS DEB DSECT                20065000
         $UCB  LIST=&LIST          GENERATE OS UCB DSECT                20065500
         $CSCB LIST=&LIST          GENERATE OS CSCB DSECT               20066000
         $UCM  LIST=&LIST          GENERATE OS UCM DSECT                20066500
         $TAB  DOC=&DOC            GENERATE HASP TAB DSECT          R41 20066600
         $SVT  DOC=&DOC            GENERATE HASP SSVT DSECT             20067000
         $SJB  DOC=&DOC            GENERATE HASP SJB DSECT              20067500
         $HCT  DOC=&DOC            GENERATE HASP HCT DSECT              20068000
         $QSE  DOC=&DOC            GENERATE QSE DSECT                   20068500
         $PCE  DOC=&DOC            GENERATE HASP PCE DSECT              20069000
         $BUFFER DOC=&DOC          GENERATE HASP BUFFER DSECT           20069500
         $CMB  DOC=&DOC            GENERATE HASP CMB DSECT              20070000
         $ICE  DOC=&DOC            GENERATE HASP ICE DSECT           R4 20071000
         $JQE  DOC=&DOC            GENERATE HASP JQE DSECT              20072000
         $JOE  DOC=&DOC            GENERATE HASP JOE DSECT              20072500
         $JOT  DOC=&DOC            GENERATE HASP JOT DSECT              20073000
         $JCT  DOC=&DOC            GENERATE HASP JCT DSECT              20073500
         $PDDB DOC=&DOC            GENERATE HASP PDDB DSECT             20074000
         $IOT  DOC=&DOC            GENERATE HASP IOT DSECT          R41 20074100
         $CAT  DOC=&DOC            GENERATE HASP CAT DSECT              20074500
         $SCAT DOC=&DOC            GENERATE HASP SCAT DSECT             20075000
         $RAT  DOC=&DOC            GENERATE HASP RAT DSECT              20075500
         $DCT  DOC=&DOC            GENERATE HASP DCT DSECT              20076000
         $TQE  DOC=&DOC            GENERATE HASP TQE DSECT              20076500
         $CCE  DOC=&DOC            GENERATE HASP CCE DSECT          R41 20076600
         $PIT  DOC=&DOC            GENERATE HASP PIT DSECT              20077000
         $PSO  DOC=&DOC            GENERATE HASP PSO DSECT              20077500
         $CSA  DOC=&DOC            GENERATE HASP CSA DSECT              20078000
         $ACT  DOC=&DOC            GENERATE HASP $ACT DSECT             20078500
         $MLMWORK DOC=&DOC         GENERATE HASP MLMWORK DSECT       R4 20080500
         $RDRWORK DOC=&DOC         GENERATE HASP RDRWORK DSECT          20081000
         $PPPWORK DOC=&DOC         GENERATE HASP PPPWORK DSECT          20081500
         $COMWORK DOC=&DOC         GENERATE HASP COMWORK DSECT          20082000
         $COM  DOC=&DOC,LIST=&LIST GENERATE HASP COM DSECT              20082500
         SPACE 1                                                        20083000
         POP   PRINT                                                    20083500
         PRINT &GEN,&DATA          SET ASSEMBLY PRINT OPTIONS           20084000
         MEND                                                           20084500
         TITLE 'HASP COMMAND PROCESSOR -- MACRO DEFINITIONS'            20085000
         MACRO -- $COMGRUP -- DEFINE GROUP OF COMMAND SUB-PROCESSORS    20085500
&NAME    $COMGRUP &A0,&A1,&A2,&A3,&A4,&A5,&A6,&A7,&A8,&A9,&AA,&AB,&AC, C20086000
               &AD,&AE,&AF,&B0,&B1,&B2,&B3,&B4,&B5,&B6,&B7,&B8,&B9,    C20086500
               &DELAY=NO                                                20087000
         LCLC  &I                                                       20087500
         GBLC  &COMGRUP                                              R4 20088000
&NAME    DS    0H                                                       20088500
         USING *,BASE3             ADDRESSABILITY                       20089000
&COMGRUP SETC  '&NAME'                                               R4 20089500
         AIF   ('&DELAY' EQ 'NO').A                                     20090000
         AGO   .C                                                       20090500
.A       BR    R1                  GO TO SUB-PROCESSOR SELECTED         20091000
         AGO   .XIT                                                     20091500
.C       ANOP                                                           20092000
&I       SETC  '&SYSNDX'                                                20092500
COF&I    DS    0H                  'BR R1' TO ENTER SUB-PROCESSOR       20093000
.XIT     MEND                                                           20093500
         EJECT                                                          20094000
         MACRO -- $COMTAB -- DEFINE COMMAND TABLE ENTRY                 20094500
&NAME    $COMTAB &VERB,&GROUP,&REDIR=0,&REJECT=0                        20095000
         LCLC  &C,&D                                                    20095500
&NAME    DS    0F                  DEFINE SUB-PROCESSOR                 20096500
         DC    AL1(&REDIR*16+&REJECT)  FLAG BYTES                       20097000
         DC    AL3(&GROUP)         SUB-PROCESSOR ADDRESS                20097500
         DC    AL2(C&VERB-&GROUP)  OFFSET TO VERB WITHIN GROUP          20098000
         AIF   (K'&VERB LT 2).A                                         20100500
         AIF   (K'&VERB EQ 3).B                                         20101000
         DC    CL2'&VERB'                                               20102000
         MEXIT                                                          20102500
.A       DC    CL1'&VERB',X'FF'                                         20103000
         MEXIT                                                          20107000
.B       ANOP                                                           20107500
&C       SETC  '&VERB'(1,1)                                             20108000
&D       SETC  '&VERB'(2,2)                                             20108500
         DC    CL1'&C',X'&D'                                            20109500
         MEND                                                           20112000
         EJECT                                                          20112500
         MACRO -- $CRET -- RETURN TO MAIN COMMAND PROCESSOR             20113000
&NAME    $CRET &MSG=,&L=,&INFO=                                         20113500
         GBLC  &DOC                                                     20114000
         LCLA  &CNT                                                     20114500
         AIF   ('&INFO' EQ '' AND '&DOC' EQ 'NO' OR '&INFO' EQ 'NO').Z  20115000
         EJECT                                                          20115500
*********************************************************************** 20116000
*                                                                     * 20116500
*        $CRET -- RETURN TO MAIN COMMAND PROCESSOR                    * 20117000
*                                                                     * 20117500
*        ROUTINE MAY ISSUE $WTO AND $WAIT AS DIRECTED BY CALLER       * 20118000
*                                                                     * 20118500
* REGISTERS USED                                                      * 20119000
*        R0    = LENGTH OF MESSAGE IF RESPONSE REQUESTED, NOT MSG=OK  * 20119500
*        R1    = MESSAGE ADDRESS -- COMMAND                           * 20120000
*        R15   = RETURN CODE -- NO MESSAGE, OK, OR GENERAL MESSAGE    * 20120500
*                                                                     * 20121000
*********************************************************************** 20121500
.Z       ANOP                                                           20122000
&NAME    NULL                                                           20122500
         AIF   ('&MSG' EQ '' AND '&L' EQ '').H                          20123000
         AIF   ('&L' EQ '').F                                           20123500
         AIF   ('&L'(1,1) EQ '(').A                                     20124000
         LA    R0,&L                                                    20124500
         AGO   .C                                                       20125000
.A       AIF   ('&L' EQ '(R0)').B                                       20125500
         LR    R0,&L(1)                                                 20126000
.B       AIF   ('&MSG' EQ '').E                                         20126500
         MNOTE 4,'REGISTER FORM OF LENGTH INVALID'                      20127000
         MEXIT                                                          20127500
.C       AIF   ('&MSG' EQ '').E                                         20128000
         AIF   ('&MSG'(1,1) EQ '(').D                                   20128500
         MVC   COMMAND(&L),&MSG                                         20129000
         AGO   .E                                                       20129500
.LITERAL ANOP                                                           20130000
&CNT     SETA  K'&MSG-2                                                 20130500
         MVC   COMMAND(&CNT),=C&MSG                                     20131000
         LA    R0,&CNT             SET LENGTH OF MSG IN R0              20131500
         AGO   .E                                                       20132000
.D       MVC   COMMAND(&L),0&MSG                                        20132500
.E       LA    R15,CORTMSG         RETURN AND ISSUE MESSAGE             20133000
         AGO   .I                                                       20133500
.F       AIF   ('&MSG' EQ 'OK').G                                       20134000
         AIF   ('&MSG'(1,1) EQ '''').LITERAL                            20134500
         MNOTE 4,'LENGTH REQUIRED'                                      20135000
         MEXIT                                                          20135500
.G       LA    R15,CORTOK          RETURN AND ISSUE OK MESSAGE          20136000
         AGO   .I                                                       20136500
.H       LA    R15,CORTNORM        NORMAL RETURN                        20137000
.I       B     CORET               RETURN                               20137500
         MEND                                                           20138000
         EJECT                                                          20138500
         MACRO -- $CWTO -- WRITE TO OPERATOR -- RESPONSE                20139000
&NAME    $CWTO &MSG=,&L=,&INFO=,&RET=,&TRUNC=NO                         20139500
         GBLC  &DOC                                                     20140000
         LCLA  &CNT                                                     20140500
         LCLC  &LOC                                                     20141000
&LOC     SETC  'CWTO'                                                   20141500
         AIF   ('&TRUNC' EQ 'NO').AA                                    20142000
&LOC     SETC  'CWTOT'                                                  20142500
.AA      ANOP                                                           20143000
         AIF   ('&INFO' EQ '' AND '&DOC' EQ 'NO' OR '&INFO' EQ 'NO').Z  20143500
         EJECT                                                          20144000
*********************************************************************** 20144500
*                                                                     * 20145000
*        CWTO/CWTOT -- WRITE TO OPERATOR                              * 20145500
*                                                                     * 20146000
*        ROUTINE ISSUES A $WAIT                                       * 20146500
*                                                                     * 20147000
* REGISTERS USED                                                      * 20147500
*        R0    = LENGTH OF MESSAGE                                    * 20148000
*        R1    = MESSAGE ADDRESS -- COMMAND                           * 20148500
*        WA    = LINK REGISTER                                        * 20149000
*        LINK  = LINKAGE FOR $WTO                                     * 20149500
*        R15   = WAIT REENTRY                                         * 20150000
*                                                                     * 20150500
*********************************************************************** 20151000
.Z       ANOP                                                           20151500
&NAME    NULL                                                           20152000
         AIF   ('&MSG' EQ '' AND '&L' EQ '').H                          20152500
         AIF   ('&L' EQ '').G                                           20153000
         AIF   ('&L'(1,1) EQ '(').A                                     20153500
         LA    R0,&L                                                    20154000
         AIF   ('&MSG' EQ '').D                                         20154500
         AIF   ('&MSG'(1,1) EQ '(').C                                   20155000
         MVC   COMMAND(&L),&MSG                                         20155500
         AGO   .D                                                       20156000
.A       AIF   ('&L' EQ '(R0)').B                                       20156500
         LR    R0,&L(1)                                                 20157000
.B       AIF   ('&MSG' EQ '').D                                         20157500
         MNOTE 4,'REGISTER FORM OF LENGTH INVALID'                      20158000
         MEXIT                                                          20158500
.C       MVC   COMMAND(&L),0(&MSG)                                      20159000
.D       AIF   ('&RET' EQ '').E                                         20159500
         $DECODE &RET,RA=WA                                             20160000
         B     &LOC                REPLY TO OPERATOR                    20160500
         MEXIT                                                          20161000
.E       BAL   WA,&LOC             REPLY TO OPERATOR                    20161500
         MEXIT                                                          20162000
.F       MNOTE 4,'LENGTH REQUIRED'                                      20162500
         MEXIT                                                          20163000
.LITERAL ANOP                                                           20163500
&CNT     SETA  K'&MSG-2                                                 20164000
         MVC   COMMAND(&CNT),=C&MSG                                     20164500
         LA    R0,&CNT             SET LENGTH OF MSG IN R0              20165000
         AGO   .D                                                       20165500
.G       AIF   ('&MSG'(1,1) EQ '''').LITERAL                            20166000
         AGO   .F                                                       20166500
.H       AIF   ('&TRUNC' EQ 'NO').F                                     20167000
         SLR   R0,R0               SET NULL LENGTH                      20167500
         AGO   .D                                                       20168000
         MEND                                                           20168500
 TITLE 'HASP COMMAND PROCESSOR FUNCTION MACRO DEFINITIONS'              20169000
         MACRO -- $CFCVB -- CONVERT TO BINARY                           20169500
&NAME    $CFCVB &TYPE=CALL,&POINTER=(R1),&NUM=2,&INFO=NO,&NOK=          20170000
         GBLC  &DOC                                                     20170500
         LCLC  &R                                                       20171000
         LCLA  &CNT                                                     20171500
&R       SETC  '&SYSNDX'                                                20172000
         AIF   ('&INFO' EQ '' AND '&DOC' EQ 'NO' OR '&INFO' EQ 'NO').Z  20172500
         AIF   ('&TYPE' EQ 'RES').NOJECT                                20173000
         EJECT                                                          20173500
.NOJECT  SPACE 2                                                        20174000
*********************************************************************** 20174500
*                                                                     * 20175000
*        COFCVB -- CONVERT TO BINARY                                  * 20175500
*                                                                     * 20176000
*        ROUTINE CONVERTS A PAIR OF NUMBERS OF THE FORM               * 20176500
*                                                                     * 20177000
*        TEXTN1-N2 WHERE                                              * 20177500
*        TEXT  = OPTIONAL TEXT IDENTIFIERS  JOB, PRT, RM ETC.         * 20178000
*        N1    = FIRST OF A SERIES OF NUMBERS LT 10000 IN VALUE       * 20178500
*        N2    = OPTIONAL LAST OF A SERIES OF NUMBERS LT 10000.       * 20179000
*        IN A SERIES OF VALUES, N1-N2-N3-N4, THE LAST TWO VALUES      * 20179500
*        ARE CONCIDERED TO BE START-STOP VALUES.                      * 20180000
*        THE MEANING OF THE START-STOP VALUES FOR EXAMPLE 1-5 ARE     * 20180500
*        THE USER DESIRES AN OPERATION PERFORMED ON JOB OR FACILITY   * 20181000
*        TYPE INDICATED, NUMBERS 1, 2, 3, 4, AND 5.                   * 20181500
*                                                                     * 20182000
*        NO $WAITS ARE ISSUED.                                        * 20182500
*                                                                     * 20183000
* REGISTERS USED                                                      * 20183500
*        R0    = ACCUMULATOR - STOP VALUE                             * 20184000
*        R1    = ADDRESS OF OPERAND POINTER -- START VALUE            * 20184500
*        LINK  = LINK REGISTER                                        * 20185000
*        R15   = WORK REGISTER                                        * 20185500
*                                                                     * 20186000
* EXITS                                                               * 20186500
*        LINK+0 OPERAND DOES NOT CONTAIN NUMERIC OR NUMERIC TOO LARGE * 20187000
*        LINK+4 NORMAL EXIT                                           * 20187500
*                                                                     * 20188000
* NOTES                                                               * 20188500
*        R1 VALUE IS EQUAL TO R0 IF USER REQUESTS NUM=2 AND ONLY      * 20189000
*        ONE VALUE IS PRESENT. IF NUM=1 IS USED R1 VALUE IS           * 20189500
*        UNPREDICTABLE. ( NUM=1 MAY BE IGNORED ).                     * 20190000
*                                                                     * 20190500
*********************************************************************** 20191000
.Z       ANOP                                                           20191500
&NAME    NULL                                                           20192000
         AIF   ('&TYPE' NE 'CALL').INL                                  20192500
         $DECODE &POINTER                                               20193000
.CAL     BAL   LINK,COFCVB         CONVERT NUMBERS TO BINARY            20193500
         AIF   ('&NOK' NE '').NOKOK                                     20194000
         MNOTE 4,'NOK KEYWORD MUST BE SUPPLIED'                         20194500
         AGO   .XIT                                                     20195000
.NOKOK   ANOP                                                           20195500
         AIF   ('&NOK'(1,1) EQ '(').REG                                 20196000
         B     &NOK                BRANCH IF OPERAND INVALID            20196500
         AGO   .XIT                                                     20197000
.REG     ANOP                                                           20197500
&CNT     SETA  K'&NOK-2                                                 20198000
&R       SETC  '&NOK'(2,&CNT)                                           20198500
         B     0(,&R)              BRANCH IF INVALID OPERAND            20199000
         MEXIT                                                          20199500
.INL     L     R15,0(0,R1)         PICK UP FIRST PARAMETER              20200000
COF&R.K  CLI   0(R15),C'0'         CHARACTER NUMERIC...             R41 20200500
         BNL   COF&R.L             IF NUMERIC, CONVERT               R4 20201000
         LA    R15,1(0,R15)        NEXT CHARACTER                       20201500
         CLM   R15,7,5(R1)         DID WE GO TOO FAR                 R4 20202000
         BL    COF&R.K             LOOP IF NO                       R41 20202500
         BR    LINK                RETURN INVALID OPERAND               20203000
         EJECT                                                      R41 20203300
*********************************************************************** 20203400
* CONVERT PAIR OF START STOP VALUES                                   * 20203500
*********************************************************************** 20203600
COF&R.L  SLR   R0,R0               ZERO ACCUMULATOR, STOP VALUE         20204000
         ST    R0,COMFWORK         CLEAR WORK AREA FOR CONVERT          20204500
         AIF   ('&NUM' NE '2').BA                                       20205000
         LNR   R1,R15              SET NEGATIVE FLAGS                   20205500
.BA      ANOP                                                           20206000
COF&R.C  MVN   COMFWORK+1(1),0(R15) MOVE NUMERIC TO WORK AREA           20206500
         MH    R0,=H'10'           MULTIPLY BY TEN FOR TEN'S DIGIT      20207000
         AH    R0,COMFWORK         ADD LOW DIGIT                        20207500
         CH    R0,=H'9999'         LOOK FOR MAXIMUM JOB NUMBR           20208000
         BCR   H,LINK              RETURN INVALID OPERAND               20208500
COF&R.N  LA    R15,1(0,R15)        NEXT CHARACTER                       20209000
         CLI   0(R15),C'0'         TEST FOR NUMERIC ( FA-FF INCLUDED )  20209500
         BNL   COF&R.C             IF NUMERIC, CONVERT THE CHARACTER R4 20210000
         AIF   ('&NUM' NE '2').G                                        20210500
         CLI   0(R15),C'-'         LOOK FOR SEPARATOR                   20211000
         BE    COF&R.O             BR IF YES TO CONVERT NEXT VALUE  R41 20211500
         CLR   R1,R0               TEST FOR BOTH VALUES                 20212000
         BNH   4(0,LINK)           RETURN WITH CONVERTED VALUES         20212500
         LR    R1,R0               SET TO SAME                          20213000
         B     4(0,LINK)           RETURN WITH CONVERTED VALUES         20213500
COF&R.O  CLI   1(R15),C'0'         NEXT CHARACTER NUMERIC...        R41 20214000
         BLR   LINK                RETURN INVALID OPERAND IF NO     R41 20214100
         LR    R1,R0               SET START OF STRING              R41 20214200
         SLR   R0,R0               PREPARE FOR NEXT                     20214500
         B     COF&R.N             CONVERT NEXT VALUE OF SET         R4 20215000
         AGO   .I                                                       20215500
.G       ANOP                                                           20216000
         B     4(0,LINK)           RETURN                               20216500
.I       ANOP                                                           20217000
.XIT     MEND                                                           20217500
         EJECT                                                          20218000
         MACRO -- $CFCVE -- CONVERT TO EBCDIC                           20218500
&NAME    $CFCVE &VALUE=(R0),&TYPE=CALL,&INFO=NO                         20219000
         GBLC  &DOC                                                     20219500
         LCLC  &R                                                       20220000
&R       SETC  '&SYSNDX'                                                20220500
         AIF   ('&INFO' EQ '' AND '&DOC' EQ 'NO' OR '&INFO' EQ 'NO').Z  20221000
         AIF   ('&TYPE' EQ 'RES').NOJECT                                20221500
         EJECT                                                          20222000
.NOJECT  SPACE 2                                                        20222500
*********************************************************************** 20223000
*                                                                     * 20223500
*        COFCVE -- CONVERT TO EBCDIC                                  * 20224000
*                                                                     * 20224500
*        ROUTINE CONVERTS A HALF WORD BINARY NUMBER LOCATED           * 20225000
*        AT ADDRESS 'VALUE'.  ANSWER WILL BE IN FIRST FIVE            * 20225500
*        CHARACTERS OF COMDWORK.                                      * 20226000
*        NO $WAITS ARE ISSUED.                                        * 20226500
*                                                                     * 20227000
* REGISTERS USED                                                      * 20227500
*        R0    = VALUE TO BE CONVERTED                                * 20228000
*        LINK  = RETURN LINKAGE                                       * 20228500
*                                                                     * 20229000
* NOTES                                                               * 20229500
*        COMEWORK - COMDWORK AREAS ARE USED FOR SCRATCH               * 20230000
*                                                                     * 20230500
*********************************************************************** 20231000
.Z       ANOP                                                           20231500
&NAME    $DECODE &VALUE,OPA=LH,RA=R0                                    20232000
         AIF   ('&TYPE' NE 'CALL').INL                                  20232500
.CAL     BAL   LINK,COFCVE         CONVERT TO EBCDIC                    20233000
         MEXIT                                                          20233500
.INL     ANOP                                                           20234000
*********************************************************************** 20234400
* CONVERT TO EBCDIC AND LEAVE ANSWER IN COMDWORK ( 5 DIGITS )         * 20234500
*********************************************************************** 20234600
         CVD   R0,COMDWORK         CONVERT TO DECIMAL                   20235000
         MVC   COMDWORK-1(6),=X'402020202120' MOVE MASK FOR RESULT      20235500
         ED    COMDWORK-1(6),COMDWORK+5 CONVERT TO EBCDIC               20236000
         BR    LINK                RETURN                               20236500
.XIT     MEND                                                           20237000
         EJECT                                                          20237500
         MACRO -- $CFDCTD -- DISPLAY DEVICE CONTROL TABLE               20238000
&NAME   $CFDCTD &DCT=(R1),&TYPE=CALL,&EXT=NO,&ENTRY=COFDCTD,&INFO=NO    20238500
         GBLC  &DOC                                                     20239000
         GBLC  &COMGRUP                                              R4 20239500
         LCLC  &R                                                       20240000
&R       SETC  '&SYSNDX'                                                20240500
         AIF   ('&INFO' EQ '' AND '&DOC' EQ 'NO' OR '&INFO' EQ 'NO').Z  20241000
         AIF   ('&TYPE' EQ 'RES').NOJECT                                20241500
         EJECT                                                          20242000
.NOJECT  SPACE 2                                                        20242500
*********************************************************************** 20243000
*                                                                     * 20243500
*        COFDCTD -- DEVICE CONTROL TABLE DISPLAY                      * 20244000
*                                                                     * 20244500
*        ROUTINE CREATES A STATUS MESSAGE IN AREA 'COMMAND' AND       * 20245000
*        INITIATES OPERATOR RESPONSE.                                 * 20245500
*        $WAIT MAY BE ISSUED.                                         * 20246000
*                                                                     * 20246500
* REGISTERS USED                                                      * 20247000
*        R0    = LENGTH OF MESSAGE                                    * 20247500
*        R1    = ADDRESS OF DCT, WORK REGISTER, PARAMETER TO $WTO     * 20248000
*                HIGH-ORDER BYTE OF R1 INDICATES TYPE OF DISPLAY      * 20248500
*                X'FF' -RAT ADDR   DISPLAY RAT INFO                   * 20248600
*                X'0F'  DCT ADDR   DISPLAY EXTENDED DCT INFO          * 20248700
*                X'00'  DCT ADDR   DISPLAY SHORT DCT INFO             * 20248800
*        WA    = LINK REGISTER                                        * 20249000
*        LINK  = LINKAGE TO $WTO                                      * 20249500
*        R15   = WAIT RETURN                                          * 20250000
*                                                                     * 20250500
* WORK AREAS USED                                                     * 20251000
*        COMEWORK USED TO SAVE PTR TO DCT (R1)                        * 20251500
*        COMFWORK USED TO SAVE RETURN ADDRESS (WA)                    * 20252000
*        COMDWORK USED TO SAVE REGS (R1 AND WA) OVER $CWTO            * 20252500
*        COMJNAME USED AS OVERFLOW MESSAGE AREA                       * 20253000
*                                                                     * 20253500
*********************************************************************** 20254000
.Z       ANOP                                                           20254500
&NAME    $DECODE &DCT                                                   20255000
         AIF   ('&TYPE' NE 'CALL').INL                                  20255500
         AIF   ('&EXT' EQ 'SET').CAL                                 R4 20256000
         AIF   ('&EXT' NE 'NO').EXT                                     20256500
         LA    R1,0(,R1)           INDICATE NO EXTENDED DISPLAY         20257000
         AGO   .CAL                                                     20257500
.EXT     ICM   R1,8,=X'0F'         INDICATE EXTENDED DCT DISPLAY    R41 20258000
.CAL     ANOP                                                        R4 20258500
         L     BASE3,=A(COFDCTD)   GET ADDRESS OF DCT DISPLAY RTN    R4 20259000
         BALR  WA,BASE3            CALL DISPLAY  ROUTINE             R4 20259500
         DC    Y(*-&COMGRUP)       ADDRESSABILITY ADJUSTMENT         R4 20260000
         MEXIT                                                          20260500
.INL     ANOP                                                        R4 20261000
         USING *,BASE3             ESTABLISH ROUTINE ADDRESSABILITY  R4 20261500
         ST    R1,COMEWORK         SAVE ADDR OF DCT                  R4 20262000
         ST    WA,COMFWORK         SAVE CONTENTS OF WA -- USE ASE WK R4 20262500
         MVI   COMMAND,C' '        CLEAR RESPONSE AREA                  20263000
         MVC   COMMAND+1(L'COMMAND+L'COMJNAME-1),COMMAND             R4 20263500
         LTR   R1,R1               TEST PASSED ADDRESS              R41 20263600
         BP    COFP&R              POSITIVE MEANS A DCT ADDRESS     R41 20263700
         LPR   R1,R1               ELSE = -RAT, SO MAKE POSITIVE    R41 20263800
         LA    WA,COMMAND+23       BUMP PAST BASIC MESSAGE          R41 20263900
         MVC   COMMAND+10(12),=C'*** INACTIVE' INDICATE INACTIVE    R41 20264000
         L     R1,RATLDCT-RATDSECT(,R1) GET LINE DCT ADDRESS        R41 20264100
         LTR   R1,R1               IS REMOTE CONNECTED              R41 20264200
         BZ    COF&R.D             NO, LEAVE INACTIVE               R41 20264300
         TM    DCTSTAT-DCTDSECT(R1),DCTINUSE IS RMT ACTIVE          R41 20264400
         BZ    COF&R.D             NO, LEAVE INACTIVE               R41 20264500
         MVC   COMMAND+14(8),=C'ACTIVE  ' ELSE SHOW ACTIVE          R41 20264600
         B     COF&R.W             GO CONTINUE PROCESSING           R41 20264700
         SPACE 1                                                    R41 20264800
COFP&R   MVC   COMMAND(8),DCTDEVN-DCTDSECT(R1) SET DEVICE NAME      R41 20264900
         MVC   COMMAND+10(12),=C'*** DRAINING' SET DEVICE DRAINING      20265000
         TM    DCTSTAT-DCTDSECT(R1),DCTDRAIN TEST FOR DRAIN BIT         20265100
         BZ    COF&R.A             BRANCH IF NOT DRAINED OR DRAINING    20265500
         TM    DCTSTAT-DCTDSECT(R1),DCTINUSE TEST FOR DRAINING          20266000
         BO    COF&R.B             LOCATE UCB 'DRAINING'                20266500
         MVC   COMMAND+19(3),=CL3'ED'  SET 'DRAINED'                    20267000
         B     COF&R.B             LOCATE UCB 'DRAINED '                20267500
COF&R.A  MVC   COMMAND+14(8),=CL8'ACTIVE'  SET UNIT ACTIVE              20268000
         TM    DCTSTAT-DCTDSECT(R1),DCTINUSE TEST FOR ACTIVE            20268500
         BZ    COF&R.5             IF NOT ACTIVE CHK FURTHER            20269000
         TM    DCTFLAGS-DCTDSECT(R1),DCTSTOP TEST FOR HALTED            20269500
         BZ    COF&R.B             NOOGO FIND UCB POSSIBLY              20270000
         MVC   COMMAND+14(8),=CL8'HALTED'  DEVICE IS HALTED             20270500
         B     COF&R.B             GO LOOK FOR UCB                      20271000
COF&R.5  TM    DCTDEVTP-DCTDSECT(R1),DCTPRPU TEST FOR PRT/PUN           20272000
         BZ    COF&R.6             NO--CAN'T BE PAUSING                 20272500
         TM    DCTSTAT-DCTDSECT(R1),DCTPAUSE  TEST FOR PAUSED           20273000
         BZ    COF&R.6             NO--JUST INACTIVE                    20275000
         MVC   COMMAND+14(8),=CL8'PAUSED'  SET PRT/PUN PAUSING          20275500
         B     COF&R.B             GO LOOK FOR UCB                      20276000
COF&R.6  MVC   COMMAND+14(8),=CL8'INACTIVE' SET DEVICE AS INACTIVE      20276500
         EJECT                                                      R41 20276800
*********************************************************************** 20276900
* DCT STATUS SET IN MESSAGE - LOCATE AND SET DEVICE ADDRESS           * 20277000
*********************************************************************** 20277100
COF&R.B  LA    WA,COMMAND+23       BUMP PAST BASIC MESSAGE           R4 20277500
         CLI   DCTDEVTP-DCTDSECT(R1),DCTINR TEST FOR INTERNAL RDR    R4 20278000
         BE    COF&R.D             YES  SKIP UCB LOCATE                 20278500
         CLI   DCTDEVTP-DCTDSECT(R1),DCTLOG TEST OF LOGON            R4 20279500
         BE    COFI&R              YES, BR - USE SNA IN UNIT FIELD   R4 20280000
         TM    DCTDEVTP-DCTDSECT(R1),DCTRJE  TEST FOR RJE               20281500
         BZ    COF&R.C             NO--SKIP NEXT TEST                   20283500
         CLI   DCTDEVTP-DCTDSECT(R1),DCTLNE SEPERATE LINES              20284000
         BE    COF&R.S             FROM REMOTE DEVICES               R4 20284500
         TM    MDCTSTAT-DCTDSECT(R1),DCTSINON IS REMOTE SIGNED ON    R4 20285000
         BZ    COF&R.D             IF NOT, MESSAGE IS COMPLETE          20285500
         L     R1,DCTDCB-DCTDSECT(0,R1) PICK UP LINE DCT                20286000
         B     COF&R.W             GO FIND THE LINE UNIT ADDRESS     R4 20286500
COF&R.S  L     R15,MDCTRAT-DCTDSECT(,R1) GET RAT ENTRY ADDRESS       R4 20287000
         LTR   R15,R15             TEST FOR ACTIVE USER              R4 20287500
         BZ    COF&R.W             NO, BR- GO INSERT THE DEVICE ADDR R4 20288000
         MVI   0(WA),C'('          INSERT OPEN PAREN                 R4 20288500
COF&R.3  MVC   1(L'RATNAME,WA),RATNAME-RATDSECT(R15) MOVE IN RMT ID  R4 20292500
         LA    WA,L'RATNAME(,WA)   POINT TO LAST BYTE OF REMOTE ID   R4 20293000
COF&R.0  CLI   0(WA),C' '          IS THIS A BLANK CHARACTER         R4 20293500
         BNE   *+8                 SKIP NEXT INSTR. IF NON-BLANK     R4 20294000
         BCT   WA,COF&R.0          BACK UP ONE BYTE AND LOOP TO TEST R4 20294500
         MVI   1(WA),C')'          MOVE CLOSING PAREN AFTER CHAR     R4 20295000
         LA    WA,3(,WA)           STEP PAST CHAR, PAREN, AND BLANK  R4 20295500
COF&R.W  DS    0H                                                    R4 20296000
         TM    MDCTTYPE-DCTDSECT(R1),DCTPSNA TEST FOR SNA LINES      R4 20297000
         BNO   COF&R.C             NO, GO FIND UCB ADDRESS           R4 20297500
COFI&R   MVC   COMMAND+10(3),=CL3'SNA' INSERT SNA IN UNIT ADDR FIELD R4 20298000
         B     COF&R.D             SKIP UCB LOCATE                   R4 20298500
COF&R.C  L     R1,DCTDCB-DCTDSECT(0,R1) PICK UP DCB                     20299500
         L     R1,DCBDEBAD-DCBDSECT(0,R1) PICK UP DEB                   20300000
         OC    DEBTCBAD+1-DEBDSECT(3,R1),DEBTCBAD+1-DEBDSECT(R1)        20300500
         BZ    COF&R.D             IF DEB NOT INITIALIZED, MESSAGE SET  20301000
         ICM   R1,7,DEBSUCBB-DEBDSECT(R1)  GET UCB, IS IT SET...     R4 20301500
         BZ    COF&R.D             IF NOT, MESSAGE COMPLETE             20302000
         MVC   COMMAND+10(3),UCBNAME-UCBDSECT(R1) INSERT UNIT ADDRESS   20302500
         EJECT                                                      R41 20302800
*********************************************************************** 20302900
*        TEST FOR EXTENDED DISPLAY OF DCT                             * 20303000
*********************************************************************** 20303100
         SPACE 1                                                        20303500
COF&R.D  DS    0H                  CHECK FOR EXTENDED DISPLAY           20304000
         TM    COMEWORK,X'FF'      WAS INPUT ADDR A -RAT            R41 20304100
         BO    COFT&R              YES GO DISPLAY RAT INFO          R41 20304200
         L     R1,COMEWORK         RESTORE DCT POINTER                  20304500
         CLI   DCTDEVTP-DCTDSECT(R1),DCTRCON TEST FOR REMOTE CONS.  R41 20304600
         BE    COF&R.X             WRITE MESSAGE AND EXIT           R41 20304700
         TM    COMEWORK,X'FF'      TEST FOR EXTENDED DISPLAY            20305000
         BZ    COF&R.X             NO-- WRITE MESSAGE AND EXIT       R4 20305500
*********************************************************************** 20306000
*        EXTENDED DISPLAY OF DCT IS DESIRED                           * 20306500
*********************************************************************** 20307000
         CLI   DCTDEVTP-DCTDSECT(R1),DCTLNE  CHECK FOR RJE LNE          20307500
         BE    COF&R.F             YES--GO DISPLAY A LINE               20308000
         CLI   DCTDEVTP-DCTDSECT(R1),DCTLOG TEST FOR LOGON DCT       R4 20309000
         BE    COF&R.Z             YES, BR - DISPLAY LOGON DCT       R4 20309500
*********************************************************************** 20310500
*        FORMAT JOB NUMBER AND NAME IF DEVICE IS ACTIVE               * 20311000
*********************************************************************** 20311100
         TM    DCTSTAT-DCTDSECT(R1),DCTINUSE  TEST FOR ACTIVITY         20311500
         BZ    COF&R.G             NO--FORGET JOB PORTION               20312000
         SPACE 1                                                        20312500
         L     R15,DCTPCE-DCTDSECT(,R1)  GET POINTER TO PCE             20313000
         L     R15,PCEJQE-PCEDSECT(,R15) GET THE JQE ADDRESS   @OZ32566 20314000
*              THIS LINE DELETED BY APAR NUMBER                @OZ32566 20314500
*              THIS LINE DELETED BY APAR NUMBER                @OZ32566 20315000
*              THIS LINE DELETED BY APAR NUMBER                @OZ32566 20315500
*              THIS LINE DELETED BY APAR NUMBER                @OZ32566 20316000
         LA    R15,0(,R15)         PURIFY                            R4 20318000
         LTR   R15,R15             TEST FOR A JOB                       20318500
         BZ    COF&R.G             NONE -- FORGET IT                    20319000
         MVC   0(4,WA),=C'(JOB'    SET JOB PREFIX                       20319500
         LH    R0,QUEJOBNO(,R15)   LOAD BINARY JOB NUMBER               20320000
         CH    R0,=H'10000'        CHECK FOR JOB                        20320500
         BL    COF&R.7             YES -- CONVERT NBR TO EBCDIC         20321000
         MVC   1(3,WA),=C'TSU'     ASSUME TIME SHARING USER             20321500
         SH    R0,=H'20000'        CHECK ASSUMPTION                     20322000
         BNM   COF&R.7             YES -- GO CONVERT NBR TO EBCDIC      20322500
         AH    R0,=H'10000'        NO -- MUST BE SYSTEM TASK            20323000
         MVC   1(3,WA),=C'STC'     ADJUST NBR AND MSG FOR SAME          20323500
COF&R.7  DS    0H                  CONVERT NUMBER TO EBCDIC             20324000
         CVD   R0,COMDWORK         CONVERT TO DECIMAL                   20324500
         MVC   4(6,WA),=X'402020202120'  SET EDIT PATTERN               20325000
         ED    4(6,WA),COMDWORK+5  EDIT CONVERTED JOB NUMBER            20325500
         MVI   10(WA),C' '         SET BLANK AFTER NUMBER               20326000
         MVC   11(L'JQEJNAME,WA),QUEJNAME(R15) SET J NAME IN MSG        20326500
         LA    R15,L'JQEJNAME      SET MAX LENGTH OF JOB NAME           20327000
COF&R.H  CLI   11(WA),C' '         CHECK FOR END OF JOB NAME            20327500
         BE    *+12                YES -- TRUNCATE STRING               20328000
         LA    WA,1(,WA)           NO--POINT TO NEXT CHARACTER          20328500
         BCT   R15,COF&R.H         AND LOOP THROUGH NAME                20329000
         MVI   11(WA),C')'         END JOB PORTION                      20329500
         LA    WA,13(,WA)          POINT TO NEXT BYTE OF MSG            20330000
         EJECT                                                      R41 20330400
*********************************************************************** 20330500
*        TEST FOR PRT/PUN--YES--DISPLAY FORMS AND PAUSE               * 20331000
*********************************************************************** 20331500
COF&R.G  NULL                                                           20332000
         TM    DCTDEVTP-DCTDSECT(R1),DCTPRPU TEST FOR PRT/PUN           20335500
         BZ    COF&R.I             NO--GO TO READERS                    20336000
         MVC   0(2,WA),=C'F='      SET FORMS PREFIX                     20336500
         MVC   2(L'DCTFORMS,WA),DCTFORMS-DCTDSECT(R1) SET FORMS SP      20337000
         MVI   2+L'DCTFORMS(WA),C','   SET IN SEPERATOR                 20337500
         TM    DCTPPSW-DCTDSECT(R1),DCTPPSWF CHECK FOR STD FORMS        20338000
         BZ    COF&R.J             NO -- HASP CONTROLLED                20338500
         MVC   2+L'DCTFORMS+1(4,WA),=C'OPER' SET OPERATOR CNTRL         20339000
         B     *+14                BR ARND NEXT                         20339500
COF&R.J  DS    0H                                                       20340000
         MVC   2+L'DCTFORMS+1(5,WA),=C'AUTOM' SET HASP CNTRLED          20340500
         LA    WA,1(,WA)           UP ONE FOR THE 'M'                   20341000
         MVC   2+L'DCTFORMS+1+5(3,WA),=C'P=N' SET PAUSE AS NO           20341500
         TM    DCTPPFL-DCTDSECT(R1),DCTPAUSE  CHECK FOR NO PAUSE        20342000
         BZ    *+8                 NO PAUSE LEAVE AS IS                 20342500
         MVI   2+L'DCTFORMS+1+5+2(WA),C'Y' PAUSING -- SET 'Y'           20343000
         LA    WA,2+L'DCTFORMS+1+5+4(,WA)  POINT TO NEXT BYTE           20343500
*********************************************************************** 20344000
*        ROUTING OF PRINT/PUNCH DEVICE                                * 20344500
*********************************************************************** 20345000
         LA    R15,DCTNO-DCTDSECT(,R1) POINT TO ROUTE CODE           R4 20345500
         LA    R0,1(,WA)           POINT TO TEXT AREA                R4 20346000
         BAL   R14,COFRTC          CONVERT TO EBCDIC                 R4 20346500
         MVC   0(2,WA),=C'R='      SET KEYWORD                       R4 20347000
         LA    WA,11(,WA)          POINT TO NEXT SLOT                R4 20347500
         TM    DCTDEVTP-DCTDSECT(R1),DCTPUN  TEST FOR PUNCHES           20348000
         BO    COF&R.K             IF SO SKIP FCB UCS SPC MSG           20348500
         EJECT                                                      R41 20348900
*********************************************************************** 20349000
*        PRINTERS ONLY -- FCB, UCS, AND SPACING ATTRIBUTES            * 20349500
*********************************************************************** 20350000
         MVC   0(2,WA),=C'C='      SET FCB PREFIX                       20350500
         MVC   2(L'DCTFCB,WA),DCTFCB-DCTDSECT(R1) SET FCB               20351000
         LA    R15,2+L'DCTFCB      LENGTH OF FCB ID                  R4 20351500
         CLI   2(WA),C'*'          TEST FOR NULL SETTING             R4 20352000
         BNE   *+12                BR IF NO                          R4 20352500
         LA    R15,2+1             ELSE, PRINT A                     R4 20353000
         MVI   2+1(WA),C' '         SINGLE '*'                       R4 20353500
         LA    WA,0(WA,R15)        POINT TO NEXT FREE BYTE           R4 20354000
         TM    DCTPPSW-DCTDSECT(R1),DCTPPSWB TEST FOR STD FCB           20354500
         BO    *+14                NO--DON'T FLAG AS STD FCB            20355000
         MVC   0(4,WA),=C',STD'    SET AS STANDARD                   R4 20355500
         LA    WA,4(,WA)           POINT TO NEXT BYTE                   20356000
         LA    WA,1(,WA)           POINT TO NEXT MESSAGE AREA        R4 20356500
         MVC   0(2,WA),=C'T='      SET TRAIN PREFIX                     20357000
         MVC   2(L'DCTUCS,WA),DCTUCS-DCTDSECT(R1) SET TRAIN             20357500
         TM    DCTPPSW-DCTDSECT(R1),DCTPPSWU TEST FOR STD UCS           20358000
         BO    *+14                NO--DON'T ADD TO MSG                 20358500
         MVC   2+L'DCTUCS(4,WA),=C',STD'  SET STD UCS ON PRT            20359000
         LA    WA,4(,WA)           POINT TO NEXT BYTE                   20359500
         LA    WA,2+L'DCTUCS+1(,WA)      POINT TO NEXT BYTE             20360000
         SPACE 1                                                        20360500
*********************************************************************** 20360900
*        SET SPACING ATTRIBUTES IF PRESENT                            * 20361000
*********************************************************************** 20361100
         TM    DCTFLAGS-DCTDSECT(R1),DCTSPACE  CHECK FOR SPCING         20361500
         BZ    COF&R.K             NONE -- SKIP MESSAGE                 20362000
         MVC   0(2,WA),=C'K='      SET SPACING PREFIX                   20362500
         LA    R15,X'F0'           SET ZERO SPACING (F0)                20363000
         TM    DCTFLAGS-DCTDSECT(R1),2  CHECK FOR DOUBLE SPACING        20363500
         BZ    *+8                 NO--DON'T INDICATE AS SUCH           20364000
         LA    R15,2(,R15)         YES--MAKE 'F2' TWO                   20364500
         TM    DCTFLAGS-DCTDSECT(R1),1  TEST FOR SINGLE SPACING         20365000
         BZ    *+8                 NO--DON'T INDICATE AS SUCH           20365500
         LA    R15,1(,R15)         YES--ADD ONE(EITHER F1 OR F3)        20366000
         STC   R15,2(,WA)          STORE SPACING CHARACTER              20366500
         LA    WA,4(,WA)           POINT TO NEXT MSG BYTE               20367000
         SPACE 2                                                        20367500
*********************************************************************** 20368000
*        REJOIN PUNCH AND PRINTERS--SERPERATORS AND CLASSES           * 20368500
*********************************************************************** 20369000
COF&R.K  NULL                                                           20369500
         MVC   0(3,WA),=C'S=Y'     ASSUME SEPERATOES USED               20370000
         TM    DCTPPSW-DCTDSECT(R1),DCTPPSWS  TEST FOR SAME             20370500
         BZ    *+8                 SEPERATORS BRANCH                    20371000
         MVI   2(WA),C'N'          NO SEPERATORS--INDICATE SO           20371500
         LA    WA,4(,WA)           FIND NEXT MSG AREA                   20372000
         EJECT                                                      R41 20372500
*********************************************************************** 20373000
*        SET OUTPUT CLASSES FOR PRINTER AND PUNCH                     * 20373500
*********************************************************************** 20374000
         MVC   0(2,WA),=C'Q='      SET CLASS STRING INDENTIFIER         20374500
         SLR   R15,R15             SET MAX SYSOUT                    R4 20375000
         IC    R15,$NUMCLAS         CLASSES IN STRING                R4 20375500
         BCTR  R15,0               LESS ONE FOR MACHINE                 20376000
         EX    R15,COF&R.1         MOVE STRING TO MSG AREA              20376500
         LA    R14,1               SET INCREMENT                        20377000
COF&R.L  CLI   2(WA),C' '          CHECK FOR END OF CLASSES             20377500
         BE    COF&R.M             YES  EXIT SCAN RTN                   20378000
         ALR   WA,R14              UP BY ONE TILL END OF STRING         20378500
         B     COF&R.L             AND LOOP TILL END OF STRING          20379000
COF&R.M  DS    0H                  END OF STRING                        20379500
         LA    WA,3(,WA)           POINT TO NEXT MSG BYTE               20380000
*********************************************************************** 20380100
*        DISPLAY COMPACTION NUMBER                                    * 20380200
*********************************************************************** 20380300
COFH&R   TM    MDCTFEAT-DCTDSECT(R1),DCTPCPCT TEST FOR COMPACTION   R41 20380400
         BZ    COFJ&R              NO,SKIP PROCESSING               R41 20380500
         MVC   0(2,WA),=C'Z='      MOVE COMPACTION INDICATOR        R41 20380600
         SLR   R0,R0               CLEAR REGISTER                   R41 20380700
         IC    R0,DCTDCPTN-DCTDSECT(,R1) INSERT COMPACTION NUMBER   R41 20380800
         CVD   R0,COMDWORK         CONVERT TO DECIMAL               R41 20380900
         MVC   2(4,WA),=X'40202120' SET EDIT PATTERN                R41 20381000
         ED    2(4,WA),COMDWORK+6  EDIT FOR PRINT                   R41 20381100
         CLI   4(WA),C' '          TEST IF NUMBER BETWEEN 0-9       R41 20381200
         BNE   COFK&R              SKIP IF COMPACTION 0-9           R41 20381300
         MVC   2(1,WA),5(WA)       MOVE 1 BYTE COMPACTION NUMBER    R41 20381400
         LA    WA,3(,WA)           UPDATE POINTER TO MESSAGE AREA   R41 20381500
         B     COFJ&R              BYPASS 2 BYTE COMPACTION NUMBER  R41 20381600
COFK&R   MVC   2(2,WA),4(WA)       MOVE TWO BYTES TO MESSAGE        R41 20381700
         LA    WA,4(,WA)           UPDATE POINTER TO MESSAGE AREA   R41 20381800
         MVI   0(WA),X'40'         CLEAN FOR 1 LINE DISPLAY         R41 20381900
COFJ&R   TM    DCTPPSW2-DCTDSECT(R1),DCTNIPRT TEST FOR 3800 PRINTER R41 20382000
         BZ    COF&R.X             BR IF NOT                         R4 20382100
         SPACE 1                                                     R4 20382200
*********************************************************************** 20382300
*        3800 PRINTERS ONLY--BURST,MARK,CHARS,FLASH AND MODIFY        * 20382500
*********************************************************************** 20383000
         MVC   0(7,WA),=C'B=N M=N' ASSUME NO BURST AND NO EDGE-MARK  R4 20383500
         TM    DCTPPSW2-DCTDSECT(R1),DCTNIBRS TEST FOR BURST MODE    R4 20384000
         BZ    *+8                 BR IF NO                          R4 20384500
         MVI   2(WA),C'Y'          ELSE INDICATE BURST MODE          R4 20385000
         TM    DCTPPSW2-DCTDSECT(R1),DCTNIMRK  TEST EDGE-MARK MODE   R4 20385500
         BZ    *+8                 BR IF NO                          R4 20386000
         MVI   6(WA),C'Y'          ELSE INDICATE EDGE-MARK MODE      R4 20386500
         LA    WA,7+1(,WA)         POINT TO NEXT MSG AREA            R4 20387000
         SPACE 1                                                     R4 20387500
         CLC   DCTCHAR1-DCTDSECT(4,R1),=C'****'  TEST FOR CHAR SET   R4 20388000
         BE    COFU&R              BR IF END OF CHARS LIST           R4 20388500
         MVC   0(3,WA),=C'X1='     MOVE IN CHAR SET PREFIX           R4 20389000
         MVC   3(L'DCTCHAR1,WA),DCTCHAR1-DCTDSECT(R1) SET CHAR1 ID   R4 20389500
         LA    WA,3+L'DCTCHAR1+1(,WA)  POINT TO NEXT MSG AREA        R4 20390000
         CLC   DCTCHAR2-DCTDSECT(4,R1),=C'****'  TEST FOR CHAR SET   R4 20390500
         BE    COFU&R              BR IF END OF CHARS LIST           R4 20391000
         MVC   0(3,WA),=C'X2='     MOVE IN CHAR SET PREFIX           R4 20391500
         MVC   3(L'DCTCHAR2,WA),DCTCHAR2-DCTDSECT(R1) SET CHAR2 ID   R4 20392000
         LA    WA,3+L'DCTCHAR2+1(,WA)  POINT TO NEXT MSG AREA        R4 20392500
         CLC   DCTCHAR3-DCTDSECT(4,R1),=C'****'  TEST FOR CHAR SET   R4 20393000
         BE    COFU&R              BR IF END OF CHARS LIST           R4 20393500
         MVC   0(3,WA),=C'X3='     MOVE IN CHAR SET PREFIX           R4 20394000
         MVC   3(L'DCTCHAR3,WA),DCTCHAR3-DCTDSECT(R1) SET CHAR3 ID   R4 20394500
         LA    WA,3+L'DCTCHAR3+1(,WA)  POINT TO NEXT MSG AREA        R4 20395000
         CLC   DCTCHAR4-DCTDSECT(4,R1),=C'****'  TEST FOR CHAR SET   R4 20395500
         BE    COFU&R              BR IF END OF CHARS LIST           R4 20396000
         MVC   0(3,WA),=C'X4='     MOVE IN CHAR SET PREFIX           R4 20396500
         MVC   3(L'DCTCHAR4,WA),DCTCHAR4-DCTDSECT(R1) SET CHAR4 ID   R4 20397000
         LA    WA,3+L'DCTCHAR4+1(,WA)  POINT TO NEXT MSG AREA        R4 20397500
         EJECT                                                      R41 20397900
COFU&R   NULL                                                        R4 20398000
         CLC   DCTFLASH-DCTDSECT(4,R1),=C'****'  TEST FOR FLASH ID   R4 20398500
         BE    *+20                BR IF NOT SET                     R4 20399000
         MVC   0(2,WA),=C'O='      SET FLASH PREFIX                  R4 20399500
         MVC   2(L'DCTFLASH,WA),DCTFLASH-DCTDSECT(R1)  SET FLASH ID  R4 20400000
         LA    WA,2+L'DCTFLASH+1(,WA)  POINT TO NEXT MSG AREA        R4 20400500
         SPACE 1                                                     R4 20401000
         CLC   DCTMODF-DCTDSECT(4,R1),=C'****'  TEST FOR MODIFY ID   R4 20401500
         BE    *+20                BR IF NOT SET                     R4 20402000
         MVC   0(2,WA),=C'Y='      SET MODIFY PREFIX                 R4 20402500
         MVC   2(L'DCTMODF,WA),DCTMODF-DCTDSECT(R1)  SET MODIFY ID   R4 20403000
         LA    WA,2+L'DCTMODF+1(,WA) POINT TO NEXT MSG AREA          R4 20403500
         B     COF&R.X             AND EXIT DISPLAY                     20404000
COF&R.1  MVC   2(*-*,WA),DCTCLASS-DCTDSECT(R1) ** EXECUTE ONLY **       20404500
         SPACE 2                                                        20405000
*********************************************************************** 20405500
*        DISPLAY READERS--DEFAULT JOB AND MSG CLASSES                 * 20406000
*********************************************************************** 20406500
COF&R.I  NULL                                                           20407000
         MVC   0(6,WA),=C'C=  Q='  SET JOB MSG PREFIXES                 20407500
         CLC   DCTDEVN-DCTDSECT(,R1),=CL8'STCINRDR' TEST STC   @OZ25941 20407600
         BE    COFV&R              BRANCH IF STCINRDR          @OZ25941 20407700
         CLC   DCTDEVN-DCTDSECT(,R1),=CL8'TSOINRDR' TEST TSO   @OZ25941 20407800
         BNE   COFW&R              BRANCH IF NOT TSOINRDR      @OZ25941 20407900
COFV&R   DS    0H                                              @OZ25941 20407910
         MVI   2(WA),C'*'        SET DEFAULT JOB CLASS         @OZ25941 20407920
         B     COFX&R              BRANCH FOR MSG CLASS        @OZ25941 20407930
COFW&R   DS    0H                                              @OZ25941 20407940
         MVC   2(1,WA),DCTJCLAS-DCTDSECT(R1) SET DEFAULT JOB CLASS      20408000
COFX&R   DS    0H                                              @OZ25941 20408400
         MVC   6(1,WA),DCTMCLAS-DCTDSECT(R1) SET DEFAULT MSG CLASS      20408500
         LA    WA,8(,WA)           POINT TO NEXT MSG BYTE               20409000
         SPACE 1                                                        20409500
         TM    DCTDEVTP-DCTDSECT(R1),DCTRJE SEPERATE REMOTE READER      20410000
         BO    COF&R.N             BR IF REMOTE READER                  20410500
*********************************************************************** 20411000
*        DISPLAY AUTHORITY FOR LOCAL AND INTERNAL READERS             * 20411500
*********************************************************************** 20412000
         MVC   0(2,WA),=C'A='      SET AUTHORITY PREFIX                 20412500
         SLR   R15,R15             CLEAR WORK FOR INSERT CHAR           20413000
         IC    R15,DCTRAUTH-DCTDSECT(,R1)  GET AUTHORITY                20413500
         LA    R0,DCTREJJB+DCTREJDV+DCTREJSY  SET NO AUTHORITY          20414000
         NR    R15,R0              TO TURN OFF MISC BITS                20414500
*********************************************************************** 20414900
*        TABLE HAS TWO BYTE ENTRIES                                   * 20415000
*********************************************************************** 20415100
         ALR   R15,R15             DOUBLE R15 VALUE                     20415500
         LA    R14,COF&R.O         GET ADDRESS OF DISPLACEMENT          20416000
*                                  AND LENGTH TABLE                     20416500
         SLR   R1,R1               CLEAR R1                             20417000
         IC    R1,0(R15,R14)       GET DISPLACEMENT IN TBL              20417500
         LA    R1,COF&R.P(R1)      POINT TO MSG                         20418000
         IC    R15,1(R15,R14)      GET MACHINE LENGTH                   20418500
         EX    R15,COF&R.Q         MOVE MSG TO AREA                     20419000
         LA    WA,4(R15,WA)        PT TO NXT AVAILABLE MSG BYTE         20419500
         L     R1,COMEWORK         RESTORE R1 CONTENTS                  20420000
COF&R.N  DS    0H                                                    R4 20420500
         EJECT                                                      R41 20420900
*********************************************************************** 20421000
*        DEFAULT ROUTINGS FOR A READER                                * 20421500
*********************************************************************** 20422000
         LA    R15,DCTPRINT-DCTDSECT(,R1) POINT TO PRINTER DEFAULT   R4 20422500
         LA    R0,1(,WA)           POINT TO TEXT AREA                R4 20423000
         BAL   R14,COFRTC          CONVERT TO EBCDIC                 R4 20423500
         MVC   0(2,WA),=C'P='      SET KEYWORD                       R4 20424000
         LA    WA,11(,WA)          POINT TO NEXT SLOT                R4 20424500
         LA    R15,DCTPUNCH-DCTDSECT(,R1) POINT TO PUNCH DEFAULT     R4 20425000
         LA    R0,1(,WA)           TEXT AREA                         R4 20425500
         BAL   R14,COFRTC          CONVERT TO EBCDIC                 R4 20426000
         MVC   0(2,WA),=C'U='      SET KEYWORD                       R4 20426500
         LA    WA,11(,WA)          POINT TO NEXT SLOT                R4 20427000
*********************************************************************** 20432500
*        DISPLAY SYSTEM AFFINITIES OF A READER                        * 20433000
*********************************************************************** 20433500
         MVC   0(2,WA),=C'S='      SET AFFINITY PREFIX                  20434000
         TM    DCTSIAFF-DCTDSECT(R1),QUEINDAF TEST FOR 'IND' MODE       20434500
         BZ    *+14                NO--SKIP INSERTION IN MSG            20435000
         MVC   2(4,WA),=C'IND,'    SET 'IND' MODE IN MSG                20435500
         LA    WA,4(,WA)           PT TO NEXT MSG BYTE                  20436000
         TM    DCTSIAFF-DCTDSECT(R1),QUESYSAF TEST FOR AFF OF 'ANY'     20436500
         BNO   COF&R.8             NO--SEARCH QSE TABLE                 20437000
         MVC   2(3,WA),=C'ANY'     YES--SET 'ANY' IN MESSAGE            20437500
         LA    WA,6(,WA)           POINT TO NEXT AVAILABLE BYTE         20438000
         B     COF&R.9             AND EXIT TO NEXT PORTION             20438500
COF&R.8  DS    0H                  SEARCH QSE TABLE FOR AFFINITIES      20439000
         L     R15,$QSE1           POINT TO 1ST QSE                  R4 20439500
         SH    R15,$QSEL           BACK UP ONE QSE                   R4 20440000
         USING QSEDSECT,R15        QSE ADDRESSABILITY                   20440500
COFB&R   AH    R15,$QSEL           POINT TO NEXT QSE                 R4 20441000
         IC    R14,QSESIAFF        PICK UP AFFINITY BITS             R4 20441500
         EX    R14,COFA&R          TEST FOR AFFINITY TO THIS SYSTEM     20442000
         BO    COFC&R              YES--FILL-IN MESSAGE                 20442500
COFD&R   TM    QSEFLAGS,QSELAST    NO--TEST FOR LAST ELEMENT            20443000
         BZ    COFB&R              IF NOT LAST LOOP THRU QSE TABLES     20443500
         MVI   1(WA),C' '          SET BLANK WHERE ',' WAS              20444000
         LA    WA,2(,WA)           POINT TO NEXT AVAILABLE MSG BYTE     20444500
         B     COF&R.9             AND EXIT TO NEXT PORTION             20445000
COFC&R   DS    0H                  AFFINITY MATCH-MOVE IN SID NAME      20445500
         MVC   2(L'QSESID,WA),QSESID SET SID NAME IN MESSAGE            20446000
         MVI   L'QSESID+2(WA),C',' SET SEPERATING COMMA                 20446500
         LA    WA,L'QSESID+1(,WA)  POINT TO NEXT AVAILABLE BYTE         20447000
         B     COFD&R              AND SCAN NEXT TABLE ELEMENT          20447500
         DROP  R15                 DROP QSE ADDRESSABILITY              20448000
COFA&R   TM    DCTSIAFF-DCTDSECT(R1),*-* **** EXECUTE ONLY ****         20448500
         EJECT                                                      R41 20449000
*********************************************************************** 20449500
*        DISPLAY A READER HOLDING INCOMING JOBS                       * 20450000
*********************************************************************** 20450500
COF&R.9  DS    0H                  DISPLAY READER'S HOLDING STATUS      20451000
         MVC   0(3,WA),=C'H=N'     SET DEFAULT STATUS                   20451500
         TM    DCTFLAGS-DCTDSECT(R1),DCTHOLDJ  TEST FOR SAME            20452000
         BZ    *+8                 EXIT IF NOT 'HOLDING'                20452500
         MVI   2(WA),C'Y'          SET STATUS TO 'HOLDING'              20453000
         LA    WA,4(,WA)           POINT TO END OF MESSAGE              20453500
         B     COF&R.X             EXIT DISPLAY ROUTINE                 20454000
         SPACE 2                                                     R4 20454500
*********************************************************************** 20455000
*        DISPLAY RJE LINE DISCONNECTION STATE                         * 20455500
*********************************************************************** 20456000
COF&R.F  DS    0H                                                    R4 20456500
         TM    MDCTSTAT-DCTDSECT(R1),DCTSOFF TEST SIGNOFF PENDING    R4 20457000
         BNO   COF&R.R             NO, BR--GO FORMAT PASSWORD        R4 20457500
         MVC   0(3,WA),=C'D=Q'     SHOW SIGNOFF PENDING              R4 20458000
COFF&R   TM    DCTFLAGS-DCTDSECT(R1),DCTRSTRT TEST FOR DCT RESTARTED R4 20458500
         BNO   COFG&R              NO, BR--GO SHOW DISCONNECT STATUS R4 20459000
         MVC   0(3,WA),=C'D=I'     INDICATE RESTART ACCEPTED         R4 20459500
COFG&R   DS    0H                                                    R4 20460000
         LA    WA,4(,WA)           MOVE PAST DISCONNECT INDICATOR    R4 20460500
         B     COF&R.R             GO FORMAT PASSWORD                R4 20461000
         SPACE 2                                                     R4 20462000
*********************************************************************** 20462500
*        DISPLAY LOGON DCT APPLICATION ID                             * 20463000
*********************************************************************** 20463500
COF&R.Z  DS    0H                                                    R4 20464000
         MVC   0(2,WA),=C'A='      MOVE IN APPLICATION ID PREFIX     R4 20464500
         MVC   2(8,WA),MDCTAPPL-DCTDSECT(R1) AND APPLICATION ID      R4 20465000
         LA    WA,11(,WA)          MOVE PAST APPLICATION ID FIELD    R4 20465500
         SPACE 2                                                     R4 20466500
*********************************************************************** 20467000
*        DISPLAY DCT LOGGING AND PASSWORD STATUS                      * 20467500
*********************************************************************** 20468000
COF&R.R  DS    0H                                                    R4 20468500
         MVC   0(3,WA),=C'E=N'     ASSUME NO LOGGING                 R4 20469000
         TM    DCTFLAGS-DCTDSECT(R1),DCTLOGAL TEST ASSUMPTION        R4 20469500
         BZ    COFE&R              CORRECT, BR - SKIP RESET          R4 20470000
         MVI   2(WA),C'Y'          MAKE MESSAGE SHOW LOGGING         R4 20470500
COFE&R   DS    0H                                                    R4 20471000
         LA    WA,4(,WA)           MOVE PAST LOGGING INDICATOR       R4 20471500
         CLI   MDCTPSWD-DCTDSECT(R1),C' ' TEST FOR PASSWORD SET      R4 20472000
         BE    COF&R.X             NO, BR - MESSAGE IS COMPLETE      R4 20472500
         MVC   0(5,WA),=C'P=SET'   INDICATE PASSWORD PRESENT         R4 20473000
         LA    WA,6(,WA)           LOCATE END OF MESSAGE             R4 20473500
         EJECT                                                      R41 20474000
*********************************************************************** 20474500
*        EXIT EXTENDED DISPLAY ROUTINE                                * 20475000
*********************************************************************** 20475500
COF&R.X  DS    0H                  COMPUTE RESPONSE SIZE                20476000
         LR    R1,WA               COPY END OF RESPONSE ADDRESS         20476500
         LA    R15,COMMAND+69      SET MAX RESPONSE SIZE                20477000
COF&R.4  CLR   R1,R15              CHECK SIZE OF THIS RESPONSE          20477500
         BNH   COF&R.U             IF NOT TOO LARGE - SEND IT           20478000
COF&R.T  BCTR  R1,0                TOO LARGE-SCAN TO BREAK-UP           20478500
         CLI   0(R1),C'='          LOOK FOR AN OPERAND                  20479000
         BNE   COF&R.T             NOT FOUND, BR - KEEP LOOKING      R4 20479500
         BCTR  R1,0                LOOK AT CHARACTER BEFORE = SIGN   R4 20480000
         CLI   0(R1),C'0'          IS IT A NUMBER                    R4 20480500
         BL    *+6                 NO - BACK UP ONE MORE             R4 20481000
         BCTR  R1,0                YES - BACK UP TWO MORE            R4 20481500
         BCTR  R1,0                POINT AT BLANK BEFORE OPERAND     R4 20482000
         B     COF&R.4             AND CHECK RESULTANT SIZE             20482500
COF&R.U  DS    0H                  RESPONSE OF PROPER SIZE - SEND       20483000
         LA    R0,1(,R1)           TRUE END OF RESPONSE                 20483500
         LA    R14,COMMAND         BEGINNING OF RESPONSE                20484000
         SLR   R0,R14              LENGTH OF RESPONSE                   20484500
         CLR   R1,WA               IS THIS A ONE-LINE RESPONSE          20485000
         BE    COF&R.V             YES--SKIP MULTIPLE LINES             20485500
         STM   R1,WA,COMDWORK      SAVE REGS OVER $WTO                  20486000
         $CWTO L=(R0)              SEND RESPONSE                        20486500
         LM    R1,WA,COMDWORK      RELOAD REGS                          20487000
         SLR   WA,R1               COMPUTE SIZE OF RESPONSE LEFT        20487500
         BCTR  WA,0                LESS ONE FOR TRUE SIZE               20488000
         LA    R0,COMMAND+23-COMMAND(,WA) SAVE TOTAL SIZE               20488500
         BCTR  WA,0                MACHINE SIZE                         20489000
         EX    WA,COF&R.Y          MOVE NEW RESPONSE DOWN               20489500
         MVI   COMMAND,C' '        BLANK AREA BEFORE SECOND LINE        20490000
         MVC   COMMAND+1(22),COMMAND DITTO                              20490500
         LA    WA,COMMAND+23+1(WA) POINT TO END OF NEW RESPONSE         20491000
         LR    R1,WA               COPY TO R1 FOR LOOP                  20491500
         LA    R15,COMMAND+69      SET MAX RESPONSE SIZE                20492000
         CLR   R1,R15              CHECK REMAINING RESPONSE             20492500
         BH    COF&R.T             IF GREATER LOOP                      20493000
COF&R.V  DS    0H                                                    R4 20493500
COF&R.2  $CWTO L=(R0)              WRITE FINAL MESSAGE               R4 20494000
         L     R1,COMEWORK         RELOAD DCT                        R4 20494500
         L     WA,COMFWORK          RETURN REGISTER                  R4 20495000
         LR    BASE3,WA            RELOAD CALLERS BASE               R4 20495500
         SH    BASE3,0(,WA)        ADJUST CALLERS ADDRESSABILITY     R4 20496000
         B     2(,WA)              RETURN TO CALLER                  R4 20496500
COF&R.Y  MVC   COMMAND+23(*-*),1(R1) **** EXECUTE ONLY ****             20497500
         EJECT                                                      R41 20498000
*********************************************************************** 20498100
*        DISPLAY RAT DATA                                             * 20498200
*********************************************************************** 20498300
COFT&R   DS    0H                                                   R41 20498400
         L     R1,COMEWORK         PICK UP PASSED RAT ADDRESS       R41 20498500
         LPR   R1,R1               MAKE POSITIVE                    R41 20498600
         MVC   COMMAND(8),RATNAME-RATDSECT(R1) PUT IN PROPER NAME   R41 20498700
         MVC   0(3,WA),=C'D=0'     SET UP FOR D=0                   R41 20498800
         SLR   R0,R0               CLEAR REG                        R41 20498900
         IC    R0,RATDINTV-RATDSECT(R1) GET RAT INTERVAL            R41 20499000
         SLA   R0,5                EXPAND IT                        R41 20499100
         LTR   R0,R0               IS IT ZERO                       R41 20499200
         BZ    COFM&R              YES, LEAVE IT AS IS              R41 20499300
         CVD   R0,COMDWORK         NO,  CONVERT TO DISPLAY          R41 20499400
         UNPK  2(5,WA),COMDWORK+5(3) PUT INTERVAL IN DISPLAY        R41 20499500
         OI    6(WA),X'F0'         MAKE UNITS DIGIT READABLE        R41 20499600
         MVC   2(4,WA),3(WA)       LEFT JUSTIFY D=NNNN              R41 20499700
         MVI   6(WA),X'40'         CLEAR RIGHT MOST POSITION        R41 20499800
         CLI   2(WA),X'F0'         IS LEFTMOST SIGNIFICANT          R41 20499900
         BH    COFM&R              YES, LEAVE AS IS                 R41 20500000
         MVC   2(3,WA),3(WA)       LEFT JUSTIFY TO D=NNN            R41 20500100
         MVI   5(WA),X'40'         CLEAR RIGHT MOST POSITION        R41 20500200
         CLI   2(WA),X'F0'         IS LEFTMOST SIGNIFICANT          R41 20500300
         BH    COFM&R              YES, LEAVE AS IS                 R41 20500400
         MVC   2(2,WA),3(WA)       LEFT JUSTIFY TO D=NN             R41 20500500
         MVI   4(WA),X'40'         CLEAR RIGHT MOST POSITION        R41 20500600
COFM&R   LA    WA,7(,WA)           ADJUST POSITION COUNT            R41 20500700
         TM    RATTYPE-RATDSECT(R1),DCTPLU1 IS THIS SNA             R41 20500800
         BNO   COF&R.X             NO, SKIP A=                      R41 20500900
         MVC   0(7,WA),=C'A=N S=N' ASSUME A=N AND S=N               R41 20501000
         TM    RATFLAGS-RATDSECT(R1),RATALM IS IT A=N               R41 20501100
         BZ    *+8                 YES, LEAVE IT AS IS              R41 20501200
         MVI   2(WA),C'Y'          NO, MAKE IT A=Y                  R41 20501300
         TM    RATFLAGS-RATDSECT(R1),RATSRMT  IS IT S=N             R41 20501400
         BZ    *+8                 YES, LEAVE AS IS                 R41 20501500
         MVI   6(WA),C'Y'          MAKE IT S=Y                      R41 20501600
         LA    WA,7(WA)            ADJUST POSITION COUNTER          R41 20501700
         B     COF&R.X             WRITE MESSAGE & EXIT             R41 20501800
         SPACE 2                                                    R41 20501900
         DROP  BASE3               RELEASE ROUTINE ADDRESSABILITY   R41 20502000
         EJECT                                                      R41 20502100
*********************************************************************** 20502200
*        AUTHORITY MSG TABLE                                          * 20502300
*********************************************************************** 20502400
COF&R.P  DC    C'SYS+DEV+JOB+SYSDISPLAY' ALL POSSIBLE MSGS              20502500
         SPACE 2                                                        20502600
*********************************************************************** 20502700
*        DISPLACEMENT AND LENGTH TABLE                                * 20502800
*        EACH ENTRY HAS DISPLACEMENT INTO ABOVE TABLE AND LENGTH      * 20502900
*        FOR EACH AUTHORITY LEVEL                                     * 20503000
*********************************************************************** 20503100
COF&R.O  DC    AL1(00,10)          AUTH=SYS+JOB+DEV LENGTH=11           20503200
         DC    AL1(04,06)          AUTH=DEV+JOB     LENGTH=7            20503300
         DC    AL1(08,06)          AUTH=JOB+SYS     LENGTH=7            20503400
         DC    AL1(08,02)          AUTH=JOB         LENGTH=3            20503500
         DC    AL1(00,06)          AUTH=SYS+DEV     LENGTH=7            20503600
         DC    AL1(04,02)          AUTH=DEV         LENGTH=3            20504000
         DC    AL1(00,02)          AUTH=SYS         LENGTH=3            20504500
         DC    AL1(15,06)          AUTH=DISPLAY     LENGTH=7            20505000
         SPACE 2                                                        20505500
         DS    0H                  ASSURE HALFWORD ALIGNMENT            20506000
COF&R.Q  MVC   2(*-*,WA),0(R1)     **** EXECUTE ONLY ****               20506500
*        INSTRUCTION IS USED TO MOVE AUTHORITY MSGS TO MSG AREA         20507000
.XIT     MEND                                                           20507500
         EJECT                                                          20508000
         MACRO -- $CFDCTL -- DEVICE CONTROL TABLE LOCATE                20508500
&NAME    $CFDCTL &POINTER=(R1),&TYPE=CALL,&INFO=NO                      20509000
         GBLC  &DOC                                                     20509500
         LCLC  &R                                                       20510000
&R       SETC  '&SYSNDX'                                                20510500
         AIF   ('&INFO' EQ '' AND '&DOC' EQ 'NO' OR '&INFO' EQ 'NO').Z  20511000
         AIF   ('&TYPE' EQ 'RES').NOJECT                                20511500
         EJECT                                                          20512000
.NOJECT  SPACE 2                                                        20512500
*********************************************************************** 20513000
*                                                                     * 20513500
*        COFDCTL -- DEVICE CONTROL TABLE LOCATE                       * 20514000
*                                                                     * 20514500
*        ROUTINE EXAMINES DEVICE NAMED BY THE CURRENT OPERAND         * 20515000
*        'POINTER', CONVERTS OPERAND TO EIGHT CHARACTER FORMAT,       * 20515500
*        AND LOCATES THE DCT.                                         * 20516000
*        NO $WAITS ARE ISSUED.                                        * 20516500
*                                                                     * 20517000
* REGISTERS USED                                                      * 20517500
*        R0    = WORK REGISTER                                        * 20518000
*        R1    = OPERAND POINTER - ADDRESS OF DCT,-RAT, OR ZERO       * 20518500
*        R15   = WORK REGISTER                                        * 20519000
*        LINK  = RETURN LINKAGE                                       * 20519500
*                                                                     * 20520000
* NOTES                                                               * 20520500
*        COMEWORK AND COMDWORK ARE USED FOR SCRATCH.  NOTE THAT       * 20521000
*              THIS ROUTINE IS DEPENDENT ON COMDWORK ALWAYS           * 20521100
*              FOLLOWING COMEWORK IN THE WORK AREA.                   * 20521200
*                                                                     * 20521500
*********************************************************************** 20522000
.Z       ANOP                                                           20522500
         AIF   ('&TYPE' NE 'CALL').INL                                  20523000
&NAME    $DECODE &POINTER                                               20523500
.CAL     BAL   LINK,COFDCTL        LOCATE DCT                           20524000
         MEXIT                                                          20524500
.INL     ANOP                                                           20525000
&NAME    NULL                                                           20526000
*********************************************************************** 20526400
* SEPARATE DEVICE NAME                                                * 20526500
*********************************************************************** 20526600
         MVC   COMEWORK(8),=CL8' ' CLEAR WORK AREA TO BLANKS            20527000
         L     R15,4(,R1)          LOCATE NEXT OPERAND                  20527500
         LA    R15,0(,R15)         CLEAR HI-ORDER BYTE               R4 20528000
         L     R1,0(0,R1)          LOCATE THIS ONE                      20528500
         SR    R15,R1              LENGTH OF OPERAND + 1                20529000
         BCT   R15,*+8             ACTUAL LENGTH                        20529500
         B     COF&R.Z             COMPARE AGAINST BLANK IF NULL     R4 20530000
         BCTR  R15,0               MACHINE LENGTH                       20530500
         LA    R0,7                SET MAXIMUM LENGTH                   20531000
         CLR   R15,R0              TEST FOR WITHIN MAXIMUM              20531500
         BNH   *+6                 ACCEPT CURRENT LENGTH IF YES         20532000
         LR    R15,R0              SET TO MOVE EIGHT CHARACTERS         20532500
         EX    R15,COF&R.N         MOVE COMPLETE OPERAND                20533000
         TM    COMFLAG,CMBFLAGW    TEST FOR RMT ENTERED COMMAND     R41 20533100
         BNO   COF&R.D             BR IF NOT - SKIP RMT DEV ABREV.  R41 20533200
         CLC   COMJSYS,$OWNSYS     CMD ENTERED THIS SYSTEM...       R41 20533600
         BNE   COF&R.D             BR IF NOT -- CANNOT BE RMT DEV   R41 20533800
         LA    R0,2                TEST FOR                         R41 20533900
         CLR   R0,R15                 3-BYTE OPERAND                R41 20534000
         BH    COF&R.D             MORE THAN 3, CANNOT BE RMT DEV   R41 20534100
         CLI   COMEWORK+2,C'0'     TEST 3RD CHARACTER FOR NUMERIC   R41 20534200
         BL    COF&R.D             NON-NUMERIC, CANNOT BE RMT DEV   R41 20534300
         CLC   =CL2'RD',COMEWORK   TEST FOR REMOTE READER           R41 20534400
         BE    COF&R.G             BR IF YES - GO CONVERT ABREV.    R41 20534500
         CLC   =CL2'PR',COMEWORK   TEST FOR REMOTE PRINTER          R41 20534600
         BE    COF&R.G             BR IF YES - GO CONVERT ABREV.    R41 20534700
         CLC   =CL2'PU',COMEWORK   TEST FOR REMOTE PUNCHES          R41 20534800
         BNE   COF&R.D             BR IF NO - CANNOT BE A RMT DEV   R41 20534900
COF&R.G  ICM   R0,7,COMEWORK       SAVE 3-CHARACTER OPERAND         R41 20535000
         LA    R15,COMEWORK+1      PICK UP WORK AREA ADDRESS + 1    R41 20535100
         SR    R1,R1               GET RMT NUMBER                   R41 20535200
         IC    R1,COMJRMT            FROM WHICH COMMAND ENTERED     R41 20535300
         BCTR  R1,0                    MINUS 1                      R41 20535400
         MH    R1,=AL2(RATTLE)     COMPUTE RAT                      R41 20535500
         AL    R1,$RATABLE           OFFSET                         R41 20535600
         MVI   COMEWORK,C'R'               SET UP REMOTE            R41 20535700
         MVC   COMEWORK+1(4),RATNAME-RATDSECT+3(R1)   NAME PREFIX   R41 20535800
         MVI   COMEWORK+4,C' '     FORCE REMAINDER                  R41 20535900
         MVC   COMEWORK+5(3),COMEWORK+4  TO BLANKS                  R41 20536000
         LA    R15,1(,R15)         BUMP TO NEXT CHARACTER           R41 20536100
         CLI   0(R15),C' '         TEST FOR BLANK                   R41 20536200
         BNE   *-8                 NON-BLANK, LOOP                  R41 20536300
         MVI   0(R15),C'.'         INSERT SEPARATOR                 R41 20536400
         LA    R15,1(,R15)         BUMP TO NEXT CHARACTER           R41 20536500
         STCM  R0,7,0(R15)         USE 3-CHAR OPERAND AS SUFFIX     R41 20536600
COF&R.D  DS    0H                                                   R41 20536700
         CLC   COMEWORK(3),=C'RMT' IS THIS RMTN FORMAT              R41 20536800
         BNE   COF&R.C             NO, SKIP MOVE                    R41 20536900
         MVC   COMEWORK+1(5),COMEWORK+3 COMPRESS TO RN FORMAT       R41 20537000
         LA    R15,COMEWORK+1      SET BXLE INDEX                   R41 20537100
         LA    R1,COMEWORK+4       SET MAX  3 DIGITS                R41 20537200
         LA    R0,1                SET TO SCAN 1 AT A TIME          R41 20537300
         SPACE 1                                                    R41 20537400
COF&R.H  CLI   0(R15),C','         CHECK FOR TERMINATING CHAR       R41 20537500
         BE    COF&R.P             YES, CONVERT RMT NUMBER          R41 20537600
         CLI   0(R15),C' '         CHECK FOR RMTN ONLY              R41 20537700
         BE    COF&R.P             YES , CONVERT RMT NUMBER         R41 20537800
         CLI   0(R15),C'0'         CHECK FOR VALID RANGE            R41 20537900
         BL    COF&R.U             NO, ERROR                        R41 20538000
         BXLE  R15,R0,COF&R.H      LOOP                             R41 20538100
         B     COF&R.U             ERROR IF 4 CHARS                 R41 20538200
         SPACE 1                                                    R41 20538300
COF&R.C  CLI   COMEWORK,C'R'       IS REMOTE SPECIFIED              R41 20538500
         BNE   COF&R.V             NO, SKIP RAT LOOKUP              R41 20538600
         CLI   COMEWORK+1,C'0'     IS THIS RN FORMAT                R41 20538700
         BL    COF&R.V             NO--SKIP RAT LOOK-UP                 20539100
         LA    R15,COMEWORK+1      SET INDEX FOR BXLE                   20539500
         LA    R1,COMEWORK+4       SET COMPORAND FOR 3 DIGITS           20540000
         LA    R0,1                SET INCREMENT FOR SCAN               20540500
         SPACE 1                                                        20541000
COF&R.O  CLI   0(R15),C'.'         CHECK FOR TERMINATING CHAR           20541500
         BE    COF&R.P             YES--CONVERT RMT NBR TO BINARY       20542000
         CLI   0(R15),C'0'         CHECK FOR VALID RANGE                20542500
         BL    COF&R.U             IF LESS--ERROR IN OPERAND            20543000
         BXLE  R15,R0,COF&R.O      LOOP THROUGH OPERAND TILL '.'        20543500
         B     COF&R.U             OR FOUR CHAR--ERROR IF NOT FND       20544000
         EJECT                                                      R41 20544500
COF&R.P  NULL                      VALID FORMAT(IE. RNNN.)              20545000
         LR    R1,R15              SAVE POSITION OF '.'                 20545500
         MVC   COMDWORK+4(3),1(R1) SAVE DEVICE NAME PORTION             20546000
         LA    R15,COMEWORK+1      FIND START OF NUMERIC AGAIN          20546500
         SR    R1,R15              COMPUTE SIZE OF FIELD                20547000
         BNP   COF&R.U             BRANCH IF NOT POSITIVE--ERROR        20547500
         BCTR  R1,0                REDUCE BY ONE FOR MACHINE            20548000
         LR    R0,WA               SAVE REG 2 OVER 'TRT'                20548500
         L     R15,=A(CVALIDTB)    POINT TO TEST TABLE               R4 20549000
         EX    R1,COF&R.R          TEST FOR VALID NUMERICS              20549500
         LR    WA,R0               RESTORE R2                           20550000
         BNZ   COF&R.U             BRANCH IN ERROR IF NOT NUMERIC       20550500
         LM    R15,R0,COMDWORK     SAVE COMDWORK                        20551000
         EX    R1,COF&R.S          PACK NUMERIC PORTION OF NAME         20551500
         CVB   R1,COMDWORK         CONVERT REMOTE NBR TO BINARY         20552000
         STM   R15,R0,COMDWORK     RESTORE COMDWORK                     20552500
         LTR   R1,R1               TEST FOR A GOOD VALUE                20553000
         BNP   COF&R.U             ERROR IF NOT POSITIVE                20553500
COF&R.A  LH    R0,$NUMRJE          GET MAX NUMBER OF REMOTES         R4 20560000
         CLR   R1,R0               IS CONVERTED HIGHER                  20560500
         BH    COF&R.U             YES -- ERROR                         20561000
         BCTR  R1,0                LESS ONE FOR RAT DISPLACEMENT        20561500
         MH    R1,=Y(RATTLE)       GET OFFSET IN RAT TABLE              20562000
         L     R0,$RATABLE         POINT TO 1ST RAT ELEMENT          R4 20562500
         LTR   R0,R0               TEST FOR ANY RJE LINES               20563000
         BZ    COF&R.U             NONE -- ERROR                        20563500
         ALR   R1,R0               COMPUTE LOCATION OF REMOTE           20564000
         CLC   COMDWORK+4(3),=C'CON' IS THIS CONSOLE                    20564500
         BNE   COFL&R              SKIP TEST FOR $T COMMAND         R41 20564600
         CLI   COMVERB,C'T'        TEST IF $T CON COMMAND           R41 20564700
         BE    COF&R.X             EXIT WITH R1 POINTING TO -RAT        20564800
         B     COF&R.U             ERROR, ONLY $TRN.CON VALID       R41 20565000
COFL&R   CLI   COMDWORK+4,C' '     TEST IF ONLY RN SPECIFIED        R41 20565100
         BE    COF&R.X             YES, EXIT - R1 POINTING TO RAT   R41 20565200
         L     R1,RATRDCT-RATDSECT(,R1) FIND FIRST REMOTE DCT           20565500
         SPACE 1                                                        20566000
COF&R.W  CLC   DCTDEVN-DCTDSECT(L'DCTDEVN,R1),COMEWORK LOOK FOR         20566500
         BER   LINK                DCT--IF FOUND RETURN WITH DCT        20567000
COF&R.B  L     R1,MDCTDCT-DCTDSECT(,R1) POINT TO NEXT DCT            R4 20567500
         LTR   R1,R1               TEST FOR END OF REMOTES DEV          20568000
         BNZ   COF&R.W             LOOP THROUGH RMT DEVICES             20568500
COF&R.U  SLR   R1,R1               IF RMT NOT FOUND INDICATE IT         20569000
         BR    LINK                AND RETURN                           20569500
COF&R.X  LCR   R1,R1               COMPLEMENT RAT ADDRESS               20570000
         BR    LINK                RETURN                               20570500
         SPACE 2                                                        20571000
COF&R.R  TRT   COMEWORK+1(*-*),0(R15) *** EXECUTE ONLY ***           R4 20571500
COF&R.S  PACK  COMDWORK(L'COMDWORK),COMEWORK+1(*-*) * EXECUTE *         20572000
         SPACE 2                                                        20572500
COF&R.V  NULL                      COME HERE WHEN NOT A RMT             20573000
         CLC   COMEWORK(3),=C'RDI' CHECK FOR INTERNAL RDR               20573500
         BNE   COF&R.Z             NO--SKIP 1ST INTRDR LOCATE           20574000
         L     R1,$SSVT            YES--POINT TO THE SSVT               20574500
         L     R1,$SVIRDRS-$SVDSECT(,R1) POINT TO 1ST INTRDR            20575000
COF&R.Y  CLC   DCTDEVN-DCTDSECT(6,R1),=C'INTRDR' CHECK FOR 1ST ONE      20575500
         BER   LINK                YES--RETORN WITH 1ST INTRDR          20576000
         ICM   R1,7,DCTCHAIN+1-DCTDSECT(R1) ELSE GET NEXT               20576500
         BNZ   COF&R.Y             AND LOOP FOR 1ST INTRDR              20577000
         SLR   R1,R1               ELSE FLAG AS NOT FOUND               20577500
         BR    LINK                AND RETURN TO CALLER                 20578000
COF&R.Z  DS    0H                  COME HERE WHEN NOT INTRDR            20578500
         LA    R1,COFDCTPL         POINT R1 TO LAST TABLE ENTRY     R41 20578600
         CLI   COMEWORK+3,C'0'     IS 4TH CHARACTER NUMERIC...      R41 20578700
         BL    COF&R.E             BYPASS TABLE LOOKUP IF NOT       R41 20578800
         ICM   R0,15,COMEWORK+3    SAVE NUMERICS (BLANK-PADDED)     R41 20578900
         SPACE 1                                                        20579000
*********************************************************************** 20579400
*        CONVERT SHORT NAME OF DEVICE TO LONG NAME AS IN DCT          * 20579500
*********************************************************************** 20579600
         LA    R1,COF&R.T          POINT TO CONVERT TABLE            R4 20580000
COF&R.L  IC    R15,3(0,R1)         PICK UP MACHINE LENGTH OF ANSWER     20580500
         CLC   COMEWORK(3),0(R1)   LOOK FOR MATCH                       20581000
         BE    COF&R.F             IF MATCH, REPLACE WITH LONG FORM  R4 20581500
         LA    R1,14(,R1)          POINT TO NEXT TABLE ELEMENT       R4 20582000
         CLI   0(R1),X'FF'         CHECK FOR END OF TABLE               20582500
         BNE   COF&R.L             IF NOT, LOOP                         20583000
         B     COF&R.E             IF END, EXIT                         20583500
         SPACE 2                                                        20584000
*********************************************************************** 20584500
*                                                                     * 20585000
*        DEVICE ABBREVIATION TABLE                                    * 20585500
*                                                                     * 20586000
* NOTE--IF $NUMPRTS IS GREATER THAN 9, THE 2ND ENTRY IN THIS TABLE    * 20586500
*       IS MODIFIED AT INITIALIZATION TIME TO THE FOLLOWING FORMAT..  * 20587000
*                                                                     * 20587500
*        DC    C'PRT',X'05',C'PRINTR  ',Y($LNEDCT-HCTDSECT)           * 20588000
*                                                                     * 20588500
*********************************************************************** 20589000
COF&R.T  DS    0H                                                       20589500
         DC    C'LNE',X'03',C'LINE    ',Y($LNEDCT-HCTDSECT)          R4 20590000
COFPRINT DC    C'PRT',X'06',C'PRINTER ',Y($PRTDCT-HCTDSECT)          R4 20590500
         DC    C'PUN',X'04',C'PUNCH   ',Y($PUNDCT-HCTDSECT)          R4 20591000
         DC    C'RDR',X'05',C'READER  ',Y($RDRDCT-HCTDSECT)          R4 20591500
         DC    C'LGN',X'04',C'LOGON   ',Y($LOGNDCT-HCTDSECT)         R4 20592500
COFDCTPL DC    X'FF',C'   ',C'FILLER  ',Y($DCTPOOL-HCTDSECT)        R41 20593500
         EJECT                                                          20594000
*********************************************************************** 20594400
* ARGUMENT FOUND, MOVE NUMERIC PORTION INTO PLACE                     * 20594500
*********************************************************************** 20594600
COF&R.F  EX    R15,COF&R.M         MOVE LONG FORM OF TEXT               20595000
         LA    R15,COMEWORK+1(R15) POINT TO END OF TEXT + 1         R41 20595500
         MVI   COMEWORK+8,C' '     MOVE IN FIELD DELIMITER          R41 20596000
         STCM  R0,15,0(R15)        MOVE NUMERICS IN AFTER TEXT      R41 20596500
         CLI   COMEWORK+8,C' '     DID WE TRUNCATE ANY DATA...      R41 20597000
         BE    COF&R.E             NO--GO TO LOCATE DCT              R4 20597500
         SLR   R1,R1               YES--ERROR--ZERO OUT DCT REG      R4 20598000
         BR    LINK                AND RETURN TO CALLER              R4 20598500
         SPACE 1                                                     R4 20599000
*********************************************************************** 20600900
* LOCATE DEVICE CONTROL TABLE                                         * 20601000
*********************************************************************** 20601100
COF&R.E  LH    R1,12(,R1)          POINT TO STARTING POINT           R4 20601500
         L     R1,HCTDSECT(R1)      IN DCT CHAIN                     R4 20602000
         LTR   R1,R1               TEST CHAIN ADDRESS                R4 20602500
         BNZ   COF&R.K             BR IF VALID                       R4 20603000
         ICM   R1,15,$DCTPOOL      POINT TO 1ST DCT                  R4 20603500
         BZR   LINK                RETURN IF NONE                    R4 20604000
COF&R.K  CLC   DCTDEVN-DCTDSECT(L'DCTDEVN,R1),COMEWORK LOOK FOR MATCH   20604500
         BE    COF&R.Q             CHECK FOR SYSTEM INTRDRS             20605000
         ICM   R1,7,DCTCHAIN+1-DCTDSECT(R1) POINT TO NEXT DCT           20605500
         BNZ   COF&R.K             LOOP TO NEXT IF NOT AT END           20606000
         BR    LINK                RETURN WITHOUT DCT                   20606500
COF&R.Q  DS    0H                  LOOK FOR SYSTEM INTRDRS              20607000
         CLI   DCTDEVTP-DCTDSECT(R1),DCTINR  IS THIS AN INTRDR          20607500
         BNER  LINK                NO--RETURN WITH DCT FOUND            20608000
         SLR   R1,R1               YES--MUST BE SYSTEM INTRDR           20608500
         BR    LINK                RETURN WITH NO DCT                   20609000
         SPACE 5                                                    R41 20609400
COF&R.N  MVC   COMEWORK(*-*),0(R1) **** EXECUTE ONLY ****               20609500
COF&R.M  MVC   COMEWORK(*-*),4(R1) **** EXECUTE ONLY ****               20610000
.XIT     MEND                                                           20610500
         EJECT                                                          20611000
         MACRO -- $CFINVC -- INVALID COMMAND                            20611500
&NAME    $CFINVC &D,&DD,&TYPE=CALL,&INFO=NO                             20612000
         GBLC  &DOC                                                     20612500
         LCLC  &R                                                       20613000
&R       SETC  '&SYSNDX'                                                20613500
         AIF   ('&INFO' EQ '' AND '&DOC' EQ 'NO' OR '&INFO' EQ 'NO').Z  20614000
         AIF   ('&TYPE' EQ 'RES').NOJECT                                20614500
         EJECT                                                          20615000
.NOJECT  SPACE 2                                                        20615500
*********************************************************************** 20616000
*                                                                     * 20616500
*        COFINVC -- REPLY INVALID COMMAND                             * 20617000
*                                                                     * 20617500
*        ROUTINE RETURNS TO MAIN COMMAND PROCESSOR BEFORE $WAIT       * 20618000
*                                                                     * 20618500
*********************************************************************** 20619000
.Z       ANOP                                                           20619500
         AIF   ('&TYPE' NE 'CALL').INL                                  20620000
.CAL     ANOP                                                           20620500
&NAME    B     COFINVC             REPLY INVALID COMMAND                20621000
         MEXIT                                                          20621500
.INL     ANOP                                                           20622000
         SPACE 10                                                   R41 20622300
*********************************************************************** 20622400
* RETURN WITH INVALID COMMAND AS RESPONSE                             * 20622500
*********************************************************************** 20622600
&NAME    MVC   COMMAND+9(16),=C' INVALID COMMAND' MOVE DIAG.            20623000
         $CRET L=25,INFO=NO                                             20623500
.XIT     MEND                                                           20624000
         EJECT                                                          20624500
         MACRO -- $CFINVO -- INVALID OPERAND                            20625000
&NAME    $CFINVO &TYPE=CALL,&OPERAND=(R1),&INFO=NO                      20625500
         GBLC  &DOC                                                     20626000
         LCLC  &C,&R                                                    20626500
&C       SETC  '0&OPERAND'         MVC X,0(OPERAND)                     20627000
         AIF   ('&OPERAND'(1,1) EQ '(').A                               20627500
&C       SETC  '&OPERAND'          MVC X,OPERAND                        20628000
.A       ANOP                                                           20628500
&R       SETC  '&SYSNDX'                                                20629000
         AIF   ('&INFO' EQ '' AND '&DOC' EQ 'NO' OR '&INFO' EQ 'NO').Z  20629500
         AIF   ('&TYPE' EQ 'RES').NOJECT                                20630000
         EJECT                                                          20630500
.NOJECT  SPACE 2                                                        20631000
*********************************************************************** 20631500
*                                                                     * 20632000
*        COFINVO -- REPLY INVALID OPERAND                             * 20632500
*                                                                     * 20633000
*        ROUTINE RETURNS TO MAIN COMMAND PROCESSOR BEFORE $WAIT       * 20633500
*                                                                     * 20634000
*********************************************************************** 20634500
.Z       ANOP                                                           20635000
         AIF   ('&TYPE' NE 'CALL').INL                                  20635500
&NAME    $DECODE &OPERAND                                               20636000
         B     COFINVO             REPLY INVALID OPERAND                20636500
         MEXIT                                                          20637000
.INL     ANOP                                                           20637500
         SPACE 10                                                   R41 20637800
*********************************************************************** 20637900
* RETURN WITH INVALID OPERAND AS RESPONSE                             * 20638000
*********************************************************************** 20638100
&NAME    MVC   COMJNAME,=CL8' '    INSURE FIELD AFTER BLANK          R4 20638500
         MVC   COMMAND(9),&C                                         R4 20639000
         MVC   COMMAND+9(16),=C' INVALID OPERAND' SET DIAGNOSTIC        20639500
         $CRET L=25,INFO=NO                                             20640000
.XIT     MEND                                                           20640500
         EJECT                                                          20641000
         MACRO -- $CFJDCT -- FIND JOB'S DCT                             20641500
&NAME    $CFJDCT &JOBQE=(R1),&TYPE=CALL,&INFO=NO,&CONT=                 20642000
         GBLC  &DOC                                                     20642500
         LCLC  &R                                                       20643000
&R       SETC  '&SYSNDX'                                                20643500
         AIF   ('&INFO' EQ '' AND '&DOC' EQ 'NO' OR '&INFO' EQ 'NO').Z  20644000
         AIF   ('&TYPE' EQ 'RES').NOJECT                                20644500
         EJECT                                                          20645000
.NOJECT  SPACE 2                                                        20645500
*********************************************************************** 20646000
*                                                                     * 20646500
*        COFJDCT -- FIND DEVICE(S) ACTIVE WITH A SPECIFIED JOB        * 20647000
*                                                                     * 20647500
*        ROUTINE COLLECTS DEVICE IDENTIFIERS FROM THE JQE (IF THE     * 20648000
*        JOB IS ON A READER) OR FROM THE JOES (IF THE JOB IS ACTIVE   * 20650500
*        IN HARD COPY).                                               * 20651000
*                                                                     * 20652000
*        FORMAT OF THE DEVICE IDENTIFIER (2 BYTES) IS                 * 20652500
*        BYTE 1 -- HIGH ORDER BIT SIGNIFIES A REMOTE DEVICE           * 20653000
*              BITS 1-3 INDICATE THE DEVICE TYPE                      * 20653500
*              000 = INTERNAL READER                                  * 20654000
*              001 = READER                                           * 20654500
*              010 = PRINTER                                          * 20655000
*              011 = PUNCH                                            * 20655500
*              BITS 4-7 INDICATE THE REMOTE DEVICE NUMBER (1-7) IF    * 20656000
*              THE DEVICE IS A REMOTE OTHERWISE THEY ARE ZERO         * 20656500
*                                                                     * 20657000
*        BYTE 2 -- IF A REMOTE -- THE REMOTE NUMBER (1-255)           * 20657500
*              IF A LOCAL DEVICE THE LOCAL NUMBER (1-99)              * 20658000
*                                                                     * 20658500
*        THE DEVICE IDENTIFIERS ARE MOVED INTO A TABLE ON THE FIRST   * 20659000
*        ENTRY, SUBSEQUENT ENTRIES RETRIEVE OTHER DEVICE IDENTIFIERS  * 20659500
*                                    THIS LINE DELETED BY APAR @OZ20010 20660000
*                                                                     * 20660500
* REGISTERS USED -                                                    * 20661000
*        R1    = JOB QUEUE ELEMENT ADDRESS, ON EXIT DEVICE ID         * 20661500
*              ADDRESS                                                * 20662000
*        LINK  = LINKAGE                                              * 20662500
*        R15   = WORK                                                 * 20663000
*        WA    = WORK (SAVED BEFORE IT IS USED IN COMWREGS)           * 20663500
*        WB    = WORK (SAVED BEFORE IT IS USED IN COMWREGS)           * 20664000
*        WC    = WORK (SAVED BEFORE IT IS USED IN COMWREGS)           * 20664500
*        WD    = WORK (SAVED BEFORE IT IS USED IN COMWREGS)           * 20665000
*                                                                     * 20665500
* WORK AREAS USED                                                     * 20666000
*        COMWREGS TO SAVE REGISTERS                                   * 20666500
*        COMEWORK TO SAVE R1 -- JQE ADDRESS                           * 20667000
*                                                                     * 20667500
* EXITS                                                               * 20668000
*        LINK+0 DCT NOT FOUND                                         * 20668500
*        LINK+4 DCT FOUND                                             * 20669000
*                                                                     * 20669500
*********************************************************************** 20670000
.Z       ANOP                                                           20670500
&NAME    $DECODE &JOBQE                                                 20671000
         AIF   ('&TYPE' NE 'CALL').INL                                  20671500
.CAL     BAL   LINK,COFJDCT        FIND DCT PERFORMING JOB I/O          20672000
         MEXIT                                                          20672500
.INL     ST    R1,COMEWORK         SAVE JQE ADDRESS                     20673000
         MVI   COFDEVID,0          CLEAR DEVICE ID                      20673500
         MVC   COFDEVID+1(L'COFDEVID-1),COFDEVID SAVE AREA              20674000
         LA    R15,COFDVEND        POINT TO LAST TABLE ENTRY            20674500
         ST    R15,COFDEVSV        SAVE IT FOR LATER                    20675000
         CLI   JQETYPE,$INPUT      IS JOB ON RDR                     R4 20675500
         BNE   COF&R.A             NO--SCAN JOES                     R4 20676500
         MVC   COFDEVID(L'JQEFLAGS),JQEFLAGS  SET BUSY FLAG             20682000
         NI    COFDEVID,QUEBUSY    TURN 'OFF' NON-BUSY BITS             20682500
         MVC   COFDEVID+L'JQEFLAGS(L'JQEDEVID),JQEDEVID  SET DEVICE     20683000
         B     COF&R.F             EXIT                                 20683500
         SPACE 1                                                        20684000
COF&R.A  DS    0H                  SCAN JOES                            20684500
*                                    THIS LINE DELETED BY APAR @OZ20010 20684600
*                                    THIS LINE DELETED BY APAR @OZ20010 20684700
*                                    THIS LINE DELETED BY APAR @OZ20010 20684800
*                                    THIS LINE DELETED BY APAR @OZ20010 20684900
         STM   WA,WD,COMWREGS      SAVE REGISTERS                       20685000
         LA    WD,COFDEVID         POINTO FIRST ADDRESS OF DEVID TBL    20685500
         L     WA,CDFJOT           POINT TO THE JOT                     20686000
         USING JOTDSECT,WA         ADDRESSABILITY FOR THE JOT           20686500
         USING JOEDSECT,R1         JOE ADDRESSABILITY                   20687000
         SLR   WB,WB               ZERO CLASS OFFSET REGISTER           20687500
         LH    WC,QUEJOECT(,R1)    GET JOB JOE COUNT           @OZ29819 20688000
         B     COF&R.C             START JOE SCAN                       20688500
COF&R.B  DS    0H                  CYCLE THROUGH CLASSES                20689000
         LA    WB,2(,WB)           POINT TO NEXT CLASS OFFSET           20689500
         CH    WB,=Y(L'JOTRDYWQ-2) CHECK FOR END OF CLASSES          R4 20690000
         BH    COF&R.E             YES--EXIT                            20690500
COF&R.C  DS    0H                  SCAN A CLASS OF JOES                 20691000
         LA    R1,JOTRDYWQ-(JOENEXT-JOEDSECT)(WB) POINT TO QUEUE ORG R4 20691500
COF&R.D  DS    0H                  JOE GET LOOP                         20692000
         LTR   WC,WC               TEST JOB JOE COUNT          @OZ29819 20692100
         BZ    COF&R.E             BR IF ALL JOES PROCESSED    @OZ29819 20692200
         LH    R1,JOENEXT          GET OFFSET TO NEXT JOE               20692500
         N     R1,=A(X'0000FFFF')  INSURE OFFSET IS POSITIVE            20693000
         BZ    COF&R.B             IF LAST  N CLASS -- EXIT             20693500
         SLL   R1,2                EXPAND TO BYTE OFFSET             R4 20694000
         ALR   R1,WA               COMPUTE JOE ADDRESS                  20694500
         LH    R15,JOEJQE          PICK-UP JQE OFFSET                   20695000
         SLL   R15,2               COMPUTE JQE OFFSET ( * 4)            20695500
         AL    R15,$JOBQPTR        COMPUTE JQE ADDRESS                  20696000
         CL    R15,COMEWORK        CHECK FOR IDENTICAL JOB              20696500
         BNE   COF&R.D             NO--GO TO NEXT JOE                   20697000
         BCTR  WC,0                DECREMENT JOB JOE COUNT     @OZ29819 20697100
         TM    JOEFLAG,$JOEBUSY    TEST FOR JOE TO BE BUSY              20697500
         BZ    COF&R.D             NO--GET NEXT JOE                     20698000
         MVC   0(L'JOEFLAG,WD),JOEFLAG SAVE BUSY FLAGS                  20698500
         NI    0(WD),$JOEBUSY      TURN 'OFF' NON-BUSY BITS             20699000
         MVC   L'JOEFLAG(L'JOEDEVID,WD),JOEDEVID SET DEVICE ID          20699500
         LA    WD,L'JOEFLAG+L'JOEDEVID(,WD) POINT TO NEXT FREE AREA     20700000
         C     WD,COFDEVSV         CHECK FOR END OF TABLE               20700500
         BNL   COF&R.E             IF END EXIT JOE SCAN LOOP            20701000
         B     COF&R.D             ELSE SCAN ALL JOES                   20701500
COF&R.E  DS    0H                  END OF JOE SCAN                      20702000
         LM    WA,WD,COMWREGS      RESTORE REGISTERS                    20702500
COF&R.F  LA    R15,COFDEVID-(L'JQEFLAGS+L'JQEDEVID)                     20703000
         ST    R15,COFDEVSV        SAVE IT FOR LATER                    20703500
&CONT    DS    0H                  CONTINUE DEVICE SCAN                 20704000
         L     R1,COFDEVSV         PICK-UP LAST DEVICE ADDRESS          20704500
         LA    R1,L'JQEFLAGS+L'JQEDEVID(,R1)  POINT TO NEXT DEVICE      20705000
         ST    R1,COFDEVSV         SAVE IT FOR NEXT TIME                20705500
         CLC   0(L'JQEFLAGS+L'JQEDEVID,R1),=XL3'00' CHK FOR END         20706000
         BER   R14                 YES RETURN--EMPTY                    20706500
         B     4(,R14)             NO--RETURN WITH DEV ADDR IN R1       20707000
         DROP  R1,WA               DROP ADDRESSABILITIES                20707500
         USING JQEDSECT,R1         REESTABLISH JQE ADDRESSABILITY       20708000
COFDEVLL EQU   (L'COMREGSV)*40     LENGTH OF SAVE AEA                   20708500
COFDEVL  EQU   COFDEVLL-L'JOEFLAG-L'JOEDEVID-4 LENGTH OF TABLE          20709000
COFDEVID EQU   COMREGSV,COFDEVL    TABLE FOR ACTIVE DEVICES FOR AJOB    20709500
COFDVEND EQU   COFDEVID+COFDEVL    LAST TABLE ENTRY                     20710000
COFDEVSV EQU   COFDEVID+COFDEVL+L'JOEFLAG+L'JOEDEVID,4                  20710500
.XIT     MEND                                                           20711000
         EJECT                                                          20711500
         MACRO -- $CFJDCTC -- CONTINUE FIND JOB'S DCT                   20712000
&NAME    $CFJDCTC &INFO=NO                                              20712500
         GBLC  &DOC                                                     20713000
         LCLC  &R                                                       20713500
&R       SETC  '&SYSNDX'                                                20714000
         AIF   ('&INFO' EQ '' AND '&DOC' EQ 'NO' OR '&INFO' EQ 'NO').Z  20714500
         EJECT                                                          20715000
*********************************************************************** 20715500
*                                                                     * 20716000
*        COFJDCTC -- CONTINUE FIND JOB'S DEVICE CONTROL TABLE         * 20716500
*                                                                     * 20717000
*        ROUTINE CONTINUES THE SEARCH OF DCTS STARTED BY COFJDCT      * 20717500
*        BY USING THE BODY OF THAT ROUTINE. THE ENTRY POINT IN        * 20718000
*        COFJDCT IS SET BY THE CONT= PARAMETER ON THE CALL OR         * 20718500
*        SUBROUTINE VERSION OF THE ROUTINE.                           * 20719000
*        NO $WAITS ARE ISSUED.                                        * 20719500
*                                                                     * 20720000
* REGISTERS USED                                                      * 20720500
*        R1    = DCT ADDRESS                                          * 20721000
*        LINK  = LINKAGE                                              * 20721500
*        R15   = WORK REGISTER                                        * 20722000
*                                                                     * 20722500
* EXITS                                                               * 20723000
*        LINK+0 DCT NOT FOUND                                         * 20723500
*        LINK+4 DCT FOUND                                             * 20724000
*                                                                     * 20724500
* NOTES                                                               * 20725000
*        JOB QUEUE POINTER IN COMEWORK AS SET BY COFJDCT              * 20725500
*                                                                     * 20726000
*********************************************************************** 20726500
.Z       ANOP                                                           20727000
&NAME    BAL   LINK,COFJDCTC       CONTINUE DCT SCAN                    20727500
.XIT     MEND                                                           20728000
         EJECT                                                          20728500
         MACRO -- $CFJMSG -- COLLECT JOB INFORMATION FOR MESSAGE        20729000
&NAME    $CFJMSG &JOBQE=(R1),&TYPE=CALL,&INFO=,&OPT=COFU,&AFF=          20729500
         GBLC  &DOC                                                     20730000
         AIF   ('&INFO' EQ '' AND '&DOC' EQ 'NO' OR '&INFO' EQ 'NO').Z  20730500
         AIF   ('&TYPE' EQ 'RES').NOJECT                                20731000
         EJECT                                                          20731500
.NOJECT  SPACE 2                                                        20732000
*********************************************************************** 20732500
*                                                                     * 20733000
*        COFJMSG -- JOB INFORMATION MESSAGE OUTPUT                    * 20733500
*                                                                     * 20734000
*        ROUTINE COLLECTS JOB INFORMATION INTO AREA 'COMMAND' AND     * 20734500
*        INITIATES OUTPUT RESPONSE.                                   * 20735000
*        $WAIT MAY BE ISSUED.                                         * 20735500
*                                                                     * 20736000
* REGISTERS USED                                                      * 20736500
*        R0    = WORK - MESSAGE LENGTH                                * 20737000
*        R1    = JOB QUEUE ELEMENT ADDRESS - WORK - AREA 'COMMAND'    * 20737500
*        WA    = LINKAGE                                              * 20738000
*        R10   = ENTRY BASE                                           * 20738500
*        LINK  = LINKAGE                                              * 20739000
*        R15   = WORK                                                 * 20739500
*                                                                     * 20740000
* EXITS                                                               * 20740500
*        WA+0  JOB DISPLAYED                                          * 20741000
*        WA+4  JOB NOT DISPLAYED ( CONDITIONAL REQUEST ONLY )         * 20741500
*                                                                     * 20742000
* NOTES                                                               * 20742500
*        COMDWORK USED FOR SCRATCH                                    * 20743000
*        COMEWORK USED BY COFJDCT TO HOLD JQE POINTER                 * 20743500
*        COMFWORK USED FOR SCRATCH                                    * 20744000
*        COMWREGS IS USED TO SAVE WORK REGISTERS                      * 20744500
*        OPT   = COFU - DISPLAY UNCONDITIONAL                         * 20745000
*              = COFQ - DISPLAY QUEUED JOBS                           * 20745500
*              = COFA - DISPLAY ACTIVE JOBS                           * 20746000
*              = (OTHER MEANINGFUL CONSISTANT COMBINATIONS)           * 20746500
*                                                                     * 20747000
*********************************************************************** 20747500
.Z       ANOP                                                           20748000
&NAME    $DECODE &JOBQE                                                 20748500
         AIF   ('&TYPE' NE 'CALL').INL                                  20749000
         AIF   ('&OPT' EQ 'SET').A                                      20749500
         MVI   COFOPT,&OPT         SET OPTION                           20750000
.A       ANOP                                                           20750500
         AIF   ('&AFF' EQ 'SET').B                                      20751000
         MVI   COFAFF,X'7F'        SET FOR ALL SYSTEMS ACTIVE           20751500
.B       ANOP                                                           20752000
         L     R10,=A(COFJMSG)     POINT TO SERVICE ROUTINE          R4 20752500
         BALR  WA,R10              CALL JOB INFORMATION MSG ROUTINE  R4 20753000
         MEXIT                                                          20753500
.INL     ANOP                                                           20754000
         EJECT                                                          20754500
*********************************************************************** 20754900
* DEFINITIONS FOR JOB INFORMATION MESSAGE                             * 20755000
*********************************************************************** 20755100
         SPACE 2                                                        20755500
COFN     EQU   X'01'               DISPLAY NORMAL JOBS                  20756000
COFS     EQU   X'02'               DISPLAY SYSTEM JOBS                  20756500
COFT     EQU   X'04'               DISPLAY LOGON JOBS                   20757000
COFJ     EQU   COFN+COFS+COFT      DISPLAY ALL JOBS                     20757500
COFX     EQU   X'08'               DISPLAY JOBS IN EXECUTION            20758000
COFD     EQU   X'10'               DISPLAY JOBS ON DEVICES              20758500
COFA     EQU   COFJ+COFX+COFD      DISPLAY ACTIVE JOBS                  20759000
COFI     EQU   X'20'               DISPLAY PRE-XEQ QUEUED JOBS          20759500
COFO     EQU   X'40'               DISPLAY POST-XEQ QUEUED JOBS         20760000
COFP     EQU   X'80'               DISPLAY QUEUED FOR PRT/PUN           20760500
COFQ     EQU   COFJ+COFI+COFO+COFP DISPLAY QUEUED JOBS                  20761000
COFU     EQU   COFJ+COFI+COFO+COFX+COFP+COFD DISPLAY UNCONDITIONAL      20761500
         SPACE 2                                                        20762000
COFJOB   EQU   COMMAND,3           TEXT 'JOB', 'STC', OR 'TSU'          20762500
COFJNO   EQU   COFJOB+3,5          JOB NUMBER WITH LEADING BLANK        20763000
COFJNAME EQU   COFJNO+6,8          JOB NAME                             20763500
COFQUE   EQU   COFJNAME+9,8        TEXT 'AWAITING'                      20764000
COFQX    EQU   COFQUE+9,9          TEXT 'EXECUTION'                     20764500
COFQXC   EQU   COFQX+10,1          CLASS                                20765000
COFQXU   EQU   COFQX,11            TEXT 'EXECUTION *'                   20765500
COFPRT   EQU   COFQUE,3            TEST 'PRT'                        R4 20768000
COFPRTR  EQU   COFPRT+3,10         PRINT ROUTING                     R4 20769000
COFPUN   EQU   COFPRT+13,3         TEXT 'PUN'                        R4 20769500
COFPUNR  EQU   COFPUN+3,10         PUNCH ROUTING                     R4 20770000
COFQOUT  EQU   COFQX,6             TEST 'OUTPUT'                        20773000
COFPURGE EQU   COFQX,5             TEXT 'PURGE'                         20773500
COFPRIO  EQU   COFPUNR+10,4        TEXT 'PRIO'                       R4 20774000
COFPRI   EQU   COFPRIO+5,2         PRIORITY                             20774500
COFFLAGS EQU   COFPRI+3,9          'HOLD', 'PURGE', 'DUPLICATE'         20775000
COFSID   EQU   COFFLAGS+10,4       FIRST SID NAME                    R4 20775500
COFSIDX  EQU   COFSID+5,24         REST OF SID'S                        20776000
COFINDP  EQU   COFSIDX+25,3        DESIGNATOR FOR INDEPENDENT MODE      20776500
COFSEC   EQU   COFINDP+3,2         SECURITY FIELD FOR $WTO'S            20777000
COFOPT   EQU   COFSEC+2,1          OPTIOM SPECIFIED                     20777500
COFAFF   EQU   COFOPT+1,1          ACTIVE SID WHEN SPECIFIED            20778000
COFLNGTH EQU   COFAFF+1,1          LENGTH OF MESSAGES                   20779000
COFAX    EQU   COFQUE,9            TEXT 'EXECUTING'                     20781000
COFAXC   EQU   COFAX+10,1          CLASS WHEN EXECUTING                 20781500
COFON    EQU   COFAX,2             TEXT 'ON'                            20782000
COFDEV   EQU   COFAX+3,8           TEXT DEVICE NAME                     20782500
COFAXT   EQU   COFDEV+9,COFSEC-COFPRIO ACTIVE JOB MSG TRAILER           20783000
COFQOT   EQU   COFQOUT+7,COFSEC-COFPRIO QUEUED FOR OUTPUT TRAILER       20783500
COFQPT   EQU   COFPURGE+6,COFSEC-COFPRIO QUEUED FOR PURGE TRAILER       20784000
COFAXL   EQU   COFPRIO-(COFDEV+9) LENGTH TO SUBTRACT FOR ACTIVE MSG     20784500
COFQOL   EQU   COFPRIO-(COFQOUT+7) LNG TO SUBTRACT FOR Q'S FOR OUT      20785000
COFQPL   EQU   COFPRIO-(COFPURGE+6) LNG TO SUBTRACT FOR Q'S FOR PG      20785500
         EJECT                                                          20786000
         USING *,R10               ESTABLISH ROUTINE ADDRESSABILITY  R4 20786500
         LH    R0,JQEJOBNO         GET JOB NUMBER              @OZ29819 20786510
         LA    R15,COFT            ASSUME TSU                  @OZ29819 20786550
         CH    R0,=H'20000'        TSU JOB...                  @OZ29819 20786560
         BH    *+8                 BR IF YES                   @OZ29819 20786570
         LA    R15,COFS            ASSUME STC                  @OZ29819 20786580
         CH    R0,=H'10000'        STC JOB...                  @OZ29819 20786590
         BH    *+8                 BR IF YES OR TSU JOB        @OZ29819 20786600
         LA    R15,COFN            MUST BE BATCH JOB           @OZ29819 20786610
         EX    R15,COFJBTST        DO WE WANT THIS JOB...      @OZ29819 20786620
         BZ    4(,WA)              EXIT NO DISPLAY IF NO       @OZ29819 20786630
*********************************************************************** 20786900
* DETERMINE STATUS OF JOB                                             * 20787000
*********************************************************************** 20787100
         TM    JQETYPE,$XEQ        EXECUTION OR CONVERT QUEUE           20787500
         BZ    COFJMT              BRANCH IF NOT                     R4 20788000
         CLI   JQETYPE,$XEQ        TEST FOR CONVERTER                   20788500
         BNE   COFJMX              NO--TRY FOR EXECUTION                20789000
*********************************************************************** 20789400
* JOB IN CONVERSION QUEUE                                             * 20789500
*********************************************************************** 20789600
         TM    COFOPT,COFI         CALLER WANT PRE-EXECUTION            20790000
         BZ    4(0,WA)             EXIT NO DISPLAY                      20790500
         BAL   R15,COFJMB          CREATE BASIC MESSAGE                 20791000
         BAL   R0,COFJMAFQ         ADD SYS NAMES--RETURN ON R15         20791500
         MVC   COFQUE,=C'AWAITING' SET                                  20792000
         MVC   COFQXU,=C'EXECUTION *' TEXT                              20792500
         B     COFQMADS            DISPLAY AND EXIT                     20793000
COFJBTST TM    COFOPT,*-*          ***  EXECUTE ONLY  ***      @OZ29819 20793100
*********************************************************************** 20793400
* JOB IN EXECUTION QUEUE - COULD HAVE SOME SPINS IN OUTPUT            * 20793500
*********************************************************************** 20793600
COFJMX   TM    JQEFLAGS,QUEBUSY    TEST FOR ACTIVE                      20794000
         BZ    COFJMQX             BR IF NOT                            20794500
         TM    COFOPT,COFX         CALLER WANT EXECUTION                20795000
         BZ    COFJMD              TRY DEVICE                           20795500
         IC    R0,JQEFLAGS         PICK-UP BUSY FLAG                    20796000
         N     R0,=A(QUEBUSY)      TURN 'OFF' ALL BUT BUSY FLGS         20796500
         LA    R15,1               ASSUME 1ST SYSTEM DESIRED            20797000
         B     *+8                 ENTER BUSY FLAG CONVERT LOOP         20797500
         SLL   R15,1               ASSUME NXT SYS IF ONE DESIRD         20798000
         BCT   R0,*-4              LOOP TILL SYSTEM FOUND               20798500
         EX    R15,COFAFFTS        TEST JOB BUSY ON DESIRED SYS         20799000
         BZ    COFJMD              NO--TRY BUSY ON A DEVICE             20799500
         BAL   R15,COFJMB          CREATE BASIC MESSAGE                 20800000
         IC    R15,JQEFLAGS        PICK-UP ACTIVE BIT                   20800500
         BAL   R0,COFJMAFA         GET SYS NAME-RETURN ON R15           20801000
         MVC   COFAXT,COFPRIO      MOVE MSG FOR ACTIVE IN XEQ           20801500
         MVC   COFAX,=C'EXECUTING' SET                                  20802000
         MVC   COFAXC,JQETYPE      NORMAL TEXT                          20802500
         OI    COFAXC,X'80'        MAKE XEQ CLASS PRINTABLE             20803000
         CLI   COFJOB,C'J'         TEST FOR NORMAL                      20803500
         BE    COFJMDAX            DISPLAY IF YES                       20804000
         MVI   COFAXC,CATTSUID     SET TSU DISPLAY CLASS                20804500
         CLI   COFJOB,C'T'         IS THIS TSU                          20805000
         BE    COFJMDAX            DISPLAY IF YES                       20805500
         MVI   COFAXC,CATSTCID     SET STC DISPLAY CLASS                20806000
COFJMDAX DS    0H                                                       20806500
         MVC   COFSEC,JQEJOBNO     COPY JOB NUMBER                      20807000
         SLR   R15,R15             ZERO INSERT REGISTER                 20808000
         IC    R15,COFLNGTH        PICK-UP CURRENT LENGTH               20808500
         LA    R0,COFAXL           PICK-UP LENGTH TO SHORTEN MSG BY     20809000
         SLR   R15,R0              COMPUTE RESIDUAL LENGTH              20809500
         STC   R15,COFLNGTH        SAVE NEW LENGTH FOR $WTO             20810000
         BAL   R14,COFJWTO         ISSUE WTO                            20813500
         EJECT                                                      R41 20813900
COFJMDXC DS    0H                                                       20814000
         TM    COFOPT,COFD         DOES USER WANT 'ON DEVICE'           20814500
         BZR   WA                  EXIT                                 20815000
         CLC   JQEJOECT,=H'0'      ARE THERE ANY SPINS                  20815500
         BZR   WA                  EXIT                                 20816000
         CLC   JQEJOBNO,COFSEC     SAME JOB NUMBER                      20816500
         BNER  WA                  EXIT                                 20817000
         $CFJDCT ,                 SCAN FOR DEVICE ACTIVITY             20817500
         B     0(,WA)              RETURN IF NONE                       20818000
         B     COFDEVCR            ENTER DEVICE CREATE RTN              20818500
*********************************************************************** 20819000
* JOB AWAITING EXECUTION                                              * 20819500
*********************************************************************** 20819600
COFJMQX  TM    COFOPT,COFI         CALLER WANT PRE-EXECUTION            20820000
         BZ    COFJMD              TRY DEVICE                           20820500
         BAL   R15,COFJMB          CREATE BASIC MESSAGE                 20821000
         BAL   R0,COFJMAFQ         ADD SYS NAME(S)-RET ON R15           20821500
         MVC   COFQUE,=C'AWAITING' SET                                  20822000
         MVC   COFQX,=C'EXECUTION *' TEXT                               20822500
         MVC   COFQXC,JQETYPE      SET NORMAL CLASS                     20823000
         OI    COFQXC,X'80'        MAKE DISPLAYABLE                     20823500
         CLI   COFJOB,C'J'         TEST FOR NORMAL                      20824000
         BE    COFJMDQX            DISPLAY IF YES                       20824500
         MVI   COFQXC,CATTSUID     SET TSU DISPLAY CLASS                20825000
         CLI   COFJOB,C'T'         IS THIS TSU                          20825500
         BE    COFJMDQX            DISPLAY IF YES                       20826000
         MVI   COFQXC,CATSTCID     SET STC DISPLAY CLASS                20826500
COFJMDQX DS    0H                  ISSUE QUEUED FOR XEQ MESSAGE         20827000
         MVC   COFSEC,JQEJOBNO     COPY JOB NUMBER                      20827500
         BAL   R14,COFJWTO         ISSUE MESSAGE                        20828000
         B     COFJMDXC            CONTINUE DEVICE SCAN                 20828500
COFJMT   DS    0H                                                    R4 20829000
         EJECT                                                      R41 20837800
*********************************************************************** 20837900
* SEARCH FOR DEVICE ACTIVITY                                          * 20838000
*********************************************************************** 20838100
COFJMD   ST    R1,COMEWORK         SAVE JQE ADDRESS            @OZ29819 20838500
         TM    COFOPT,COFD         CALLER WANT 'ON DEVICE'...  @OZ29819 20839000
         BZ    COFJMQO             BR IF NO                    @OZ29819 20839500
        $CFJDCT ,                  LOCATE ACTIVE DCT FOR JOB   @OZ29819 20840000
         B     COFJMQO             BR IF NO ACTIVE DEVICE  +0  @OZ29819 20840500
COFDEVCT LA    R14,COFJMDCC        POINT TO EXIT ROUTINE   +4  @OZ29819 20841000
         B     COFJOIN             AND ENTER EXAMINATION RTN            20841500
COFDEVCR DS    0H                  DETERMINE JOB ON ACTIVE SYS          20842000
         LA    R14,COFJMDC         POINT TO EXIT ROUTINE                20842500
COFJOIN  DS    0H                  JOB ACTIVE EXAM RTN                  20843000
         IC    R0,0(,R1)           PICK UP ACTIVE FLAG                  20843500
         N     R0,=A(QUEBUSY)      TURN 'OFF' ALL BUT BUSY FLAG         20844000
         LA    R15,1               ASSUME 1ST SYSTEM IS DESIRED         20844500
         B     *+8                 ENTER CONVERT LOOP                   20845000
         SLL   R15,1               ASSUME NEXT SYSTEM DESIRED           20845500
         BCT   R0,*-4              LOOP TILL SYSTEM FOUND               20846000
         EX    R15,COFAFFTS        ACTIVE JOB ON DESIRED SYSTEM...   R4 20846500
         BZR   R14                 NO--ENTEER DESIRED ROUTINE           20847000
         ST    R1,COMFWORK         SAVE ADDDRESS FOR LATER              20847500
         L     R1,COMEWORK         RESTORE JQE POINTER                  20848000
         BAL   R15,COFJMB          CREATE BASIC MESSAGE                 20848500
         ST    R1,COMEWORK         SAVE JQE POINTER AGAIN               20849000
         L     R1,COMFWORK         RESTORE R1 CONTENTS                  20849500
         IC    R15,0(,R1)          PICK-UP ACTIVE SYS BIT               20850000
         BAL   R0,COFJMAFA         ADD SYS NAME--RET ON R15             20850500
         MVC   COFON,=C'ON'        SET JOBNAME 'ON' DEVICE NAME         20851000
         TM    1(R1),DCTRMTID      RJE                               R4 20852000
         BNZ   COFRMDEV            DO REMOTE CONVERSION IF YES       R4 20854000
         CLI   1(R1),X'0F'         TEST FOR PSO JOE            @OZ30706 20854200
         BE    COFPSO              YES-INSERT PSO ID           @OZ30706 20854400
         SLR   R15,R15             ZERO INSERT REGISTER                 20854500
         IC    R15,1(,R1)          PICKUP DEVICE FLAGS                  20855000
         SRL   R15,4               SHIFT TO LOW 4 BITS OF REG           20855500
         MH    R15,=Y(COFDEVTL)    MULTIPLY BY ELEMENT LENGTH           20856000
         AL    R15,=A(COFDEVTB)    POINT TO CORRECT ENTRY               20856500
         MVC   COFDEV,1(R15)       FILL IN DEVICE NAME                  20857000
         CLI   0(R15),0            TEST FOR INTERNAL READER             20857500
         BE    COFDEVND            YES-SKIP NEXT PORTION OF NAME BLD    20858000
         SLR   R0,R0               ZERO INSERT REGISTER                 20858500
         IC    R0,2(,R1)           PICK-UP DEVICE NUMBER                20859000
         CVD   R0,COMDWORK         CONVERT TO PACKED NUMBER             20859500
         IC    R0,0(,R15)          PICK-UP LENGTH OF DEVICE NAME        20860000
         LA    R14,COFDEV          PT TO BEGINNING OF NAME              20860500
         ALR   R14,R0              COMPUTE POSITION FOR DEVICE NBR      20861000
         MVC   1(3,R14),=X'202020' PUT MASK INTO AREA                   20861500
         EDMK  0(4,R14),COMDWORK+6 SET EBCDIC NBR INTO DEVICE NAME      20862000
         MVC   0(4,R14),0(R1)      PUT 1ST TWO DIGITS IN NO. FIELD      20862500
         B     COFDEVND            AND EXIT DEVICE NAME RTN             20863000
COFPSO   DS    0H                                              @OZ30706 20863100
         MVC   COFDEV,=C'PRSYSOUT' FILL IN DEVICE NAME         @OZ30706 20863200
         B     COFDEVND            AND EXIT DEVICE NAME RTN    @OZ30706 20863300
         EJECT                                                      R41 20863400
COFRMDEV DS    0H                  DEVICE IS A REMOTE                   20863500
         SLR   R0,R0               ZERO INSERT REGISTER                 20864000
         IC    R0,2(,R1)           PICK-UP REMOTE NUMBER                20864500
         CVD   R0,COMDWORK         CONVERT TO PACKED DECIMAL            20865000
         MVI   COFDEV,C'R'         SET REMOTE IDENTIFIER                20868000
         MVC   COFDEV+2(4),=X'2020204B' SET MASK AND '.'             R4 20868500
         LR    R14,R1              SAVE POINTER TO DEVICE NAME          20869000
         EDMK  COFDEV+1(4),COMDWORK+6 SET EBCDIC REMOTE NO. IN MSG      20869500
         MVC   COFDEV+1(4),0(R1)   MOVE REMOTE NBR AND CONCATENATOR     20870000
         LA    R1,COFDEV+1         1ST BYTE BEFORE CONCATENATORS        20870500
         LA    R1,1(,R1)           PT TO NEXT BYTE                      20871000
         CLI   0(R1),C'.'          CHECK FOR CONCATENATOR               20871500
         BNE   *-8                 NO--LOOP TILL FOUND                  20872000
         SLR   R15,R15             ZERO INSERT REGISTER                 20872500
         IC    R15,1(,R14)         PICK-UP DEVICE TYPE AND NUMBER       20873000
         SRL   R15,4               ISOLATE DEVICE TYPE                  20873500
         ALR   R15,R15             TIMES ELEMENT LENGTH                 20874000
         LA    R15,COFRMDVT-DCTRMTID/8(R15)                          R4 20875000
         MVC   1(2,R1),0(R15)      SET DEVICE TYPE IN NAME              20877000
         MVC   3(1,R1),1(R14)      SET DEVICE NUMBER                    20877500
         OI    3(R1),C'0'          MAKE EBCDIC PRINTABLE                20878000
COFDEVND DS    0H                  EXIT DEVICE NAME CREATE NAME RTN     20878500
         MVC   COFAXT,COFPRIO      MOVE MESSAGE DOWN                    20879000
         LA    R1,COFAXL           PICK-UP LENGTH TO SUBTRACT           20879500
         SLR   R15,R15             ZERO INSERT REGISTER                 20880500
         IC    R15,COFLNGTH        PICK-UP CURRENT LENGTH               20881000
         SLR   R15,R1              COMPUTE NEW LENGTH                   20881500
         STC   R15,COFLNGTH        SAVE NEW LENGTH                      20882000
         L     R1,COMEWORK         RESTORE JQE POINTER                  20885000
         MVC   COFSEC,JQEJOBNO     SET SECURITY NUMBER                  20885500
         BAL   R14,COFJWTO         ISSUE MESSAGE                        20886000
         CLC   COFSEC,JQEJOBNO     CHECK FOR INTEGRITY                  20886500
         BNER  WA                  RETUEN IF NOT SECURE                 20887000
COFJMDC  $CFJDCTC ,                CONTINUE DCT SCAN                    20887500
         B     0(,WA)              RETURN IF NO MORE                    20888000
         B     COFDEVCR            AND ENTER DEVICE NAME RTN            20888500
COFJMDCC $CFJDCTC ,                CONTINUE DCT SCAN                    20889000
         B     COFJMQO             IF NONE, LOOK FOR QUE FOR OUTPUT     20889500
         B     COFDEVCT            AND CONTINUE                         20890000
         SPACE 2                                                    R41 20890400
COFAFFTS TM    COFAFF,*-*          **** EXECUTE ONLY ****               20890500
         EJECT                                                          20891000
*********************************************************************** 20891400
*        JOB QUEUED FOR OUTPUT                                        * 20891500
*********************************************************************** 20891600
         SPACE 1                                                        20892000
COFJMQO  L     R1,COMEWORK         RESTORE JQE POINTER                  20892500
         TM    COFOPT,COFO         TEST FOR OUTPUT QUEUED               20893000
         BZ    COFJMQPP            NO--TEST FOR PRINT PUNCH             20893500
         TM    JQETYPE,$OUTPUT     TEST FOR IN OUTPUT PHASE             20894000
         BZ    COFJMQPP            NO--PRT/PUN                          20894500
         TM    JQEFLAGS,QUEBUSY    TEST FOR BUSY                        20895000
         BNZ   COFJMQPA            DISPLAY AWAITING PRT/PUN IF YES   R4 20895500
         BAL   R15,COFJMB          BULID BASIC MESSAGE                  20896000
         BAL   R0,COFJMAFQ         GET SYS NAMES--RET ON R15            20896500
         MVC   COFQUE,=C'AWAITING' SET AWAITING IN TEXT                 20897000
         MVC   COFQOUT,=C'OUTPUT'  SET QUEUED FOR 'OUTPUT'              20897500
         MVC   COFQOT,COFPRIO      MOVE MESSAGE FOR Q'D FOR OUTPUT      20898000
         SLR   R15,R15             ZERO INSERT REGISTER                 20899000
         IC    R15,COFLNGTH        PICK-UP CURRENT LENGTH               20899500
         LA    R0,COFQOL           PICK-UP LENGTH TO SHORTEN MSG BY     20900000
         SLR   R15,R0              COMPUTE RESIDUAL LENGTH              20900500
         STC   R15,COFLNGTH        SAVE NEW MSG LENGTH                  20901000
         B     COFQMADS            AND SEND MESSAGE                     20904500
         SPACE 2                                                        20905000
*********************************************************************** 20905400
*        TEST FOR JOB ON PRINT/PUNCH QUEUE                            * 20905500
*********************************************************************** 20905600
COFJMQPP TM    JQETYPE,$HARDCPY    TEST FOR QUEUED FOR HARD COPY    R41 20906000
         BZ    COFJMQPG            NO--TRY QUEUED FOR PURGE             20906500
COFJMQPA TM    COFOPT,COFP         TEST FOR PRINT / PUNCH QUEUING    R4 20907000
         BZ    COFJMQPG            TRY PURGE IF NOT                  R4 20907500
         BAL   R15,COFJMB          CREATE BASIC MESSAGE                 20908000
         MVC   COFPRT,=C'PRT'      SET QUEUE                         R4 20908500
         MVC   COFPUN,=C'PUN'      IDENTIFIERS                       R4 20909000
         LA    R0,COFPRTR          POINT TO RECEIVE AREA             R4 20909500
         LA    R15,JQEPRTRT        POINT TO PRINT ROUTE FIELD        R4 20910000
         BAL   R14,COFRTC          CONVERT TO PRINTABLE              R4 20910500
         LA    R0,COFPUNR          POINT TO RECEIVE AREA             R4 20911000
         LA    R15,JQEPUNRT        POINT TO PUNCH ROUTE FIELD        R4 20911500
         BAL   R14,COFRTC          CONVERT TO PRINTABLE              R4 20912000
         SLR   R15,R15             ZERO INSERT REGISTER                 20913000
         IC    R15,COFLNGTH        PICK-UP LENGTH OF MSG                20913500
         LA    R14,COFJOB(R15)     POINT TO THE NEXT AVAILABLE BYTE     20914000
         MVC   0(3,R14),=C'ANY'    SET AFFINITY TO 'ANY'                20914500
         LA    R15,3(,R15)         COMPUTE NEW MESSAGE LENGTH           20915000
         STC   R15,COFLNGTH        AND SVAE NEW LENGTH                  20915500
         B     COFQMADS            AND SEND COMPLETED MESSAGE           20919500
         EJECT                                                      R41 20919800
*********************************************************************** 20919900
*        TEST FOR JOB ON PURGE QUEUE                                  * 20920000
*********************************************************************** 20920100
COFJMQPG CLI   JQETYPE,$PURGE      ON PURGE QUEUE                   R41 20920500
         BNE   4(,WA)              RETURN NO DISPLAY                 R4 20921000
         TM    COFOPT,COFQ         TEST FOR JOB QUEUED TO 'ANYTHING'    20921500
         BNO   4(,WA)              NO -- EXIT NO DISPLAY   +4           20922000
         BAL   R15,COFJMB          CREATE MESSAGE PROTOTYPE             20922500
         BAL   R0,COFJMAFQ         GET SYS NAMES -- RET ON R15          20923000
         MVC   COFQUE,=C'AWAITING' SET 'AWAITING' FOR PURGE             20923500
         MVC   COFPURGE,=C'PURGE'  SET FOR 'PURGE' PROCESSOR            20924000
         MVC   COFQPT,COFPRIO      ADJUST MESSAGE FOR PURGE             20924500
         SLR   R15,R15             ZERO INSERT REGISTER                 20925500
         IC    R15,COFLNGTH        PICK-UP CURRENT  ENGTH               20926000
         LA    R0,COFQPL           PICK-UP LENGTH TO SHORTEN MSG BY     20926500
         SLR   R15,R0              COMPUTE RESIDUAL LENGTH              20927000
         STC   R15,COFLNGTH        AND SAVE IT FOR $WTO                 20927500
COFQMADS DS    0H                  EXIT WITH FINAL MESSAGE              20931000
         BAL   R14,COFJWTO         SEND MESSAGE                         20931500
         BR    WA                  AND RETURN  +0                       20932000
*********************************************************************** 20932400
* SUBROUTINE TO BUILD BASIC JOB INFORMATION MESSAGE                   * 20932500
*********************************************************************** 20932600
COFJMB   LH    R0,JQEJOBNO         PICK UP JOB NUMBER                   20933000
         CH    R0,=H'10000'        TEST FOR 'JOB'                       20936000
         BNL   COFJMNJ             IF NOT TRY 'STC' OR 'TSU'            20936500
*              THIS LINE DELETED BY APAR NUMBER                @OZ29819 20937000
*              THIS LINE DELETED BY APAR NUMBER                @OZ29819 20937500
         MVC   COFJOB,=C'JOB'      SET 'JOB'                            20938000
         B     COFJMBA             CONTINUE                             20938500
COFJMNJ  SH    R0,=H'20000'        SEPARATE                             20939000
         BL    COFJMNT             'STC' FROM 'TSU'                     20939500
*              THIS LINE DELETED BY APAR NUMBER                @OZ29819 20940000
*              THIS LINE DELETED BY APAR NUMBER                @OZ29819 20940500
         MVC   COFJOB,=C'TSU'      SET 'TSU'                            20941000
         B     COFJMBA             CONTINUE                             20941500
*              THIS LINE DELETED BY APAR NUMBER                @OZ29819 20942000
COFJMNT  DS    0H                                              @OZ29819 20942500
         MVC   COFJOB,=C'STC'      SET 'STC'                            20943000
         AH    R0,=H'10000'        GET BASE                             20943500
         EJECT                                                      R41 20943900
COFJMBA  $CFCVE ,                  CONVERT TO EBCDIC                    20944000
         MVC   COFJNO,COMDWORK     SET INTO MESSAGE                     20944500
         MVI   COFJNAME-1,C' '     BLANK OUT REST OF MESSAGE AREA       20945000
         MVC   COFJNAME(COFSEC-COFJNAME),COFJNAME-1                     20945500
         MVC   COFJNAME,JQEJNAME   MOVE JOB NAME                        20946000
         MVC   COFPRIO,=C'PRIO'    SET 'PRIO'                           20946500
         SLR   R0,R0               ZERO PRIORITY                        20947000
         IC    R0,JQEPRIO          PICK UP PRIORITY * 16                20947500
         SRA   R0,4                DIVIDE BY 16                         20948000
         $CFCVE ,                  CONVERT TO EBCDIC                    20948500
         MVC   COFPRI,COMDWORK+5-L'COFPRI MOVE PRIORITY                 20949000
         LR    R0,R15              SAVE LINK REGISTER                   20949500
         LA    R15,COFFLAGS        SET ADDRESS OF NEXT MESSAGE AREA     20950000
         TM    JQEFLAGS,QUEHOLDA+QUEHOLD1+QUEHOLD2+QUEPURGE+QUEOPCAN    20950500
*                                  TEST FOR ANY JOB FLAGS               20951000
         BZ    COFJMBB             NONE--FILL IN THE AFFINITIES         20951500
         MVC   COFFLAGS(4),=C'HOLD'  ASSUME JOB IS HELD                 20952000
         LA    R15,5(,R15)         PT TO NEXT AVAILABLE MSG AREA        20952500
         TM    JQEFLAGS,QUEHOLDA+QUEHOLD1  TEST FOR 'HELD'              20953000
         BNZ   COFJMBB             IF HELD--GO TO AFFINITIES FILL-IN    20953500
         MVC   COFFLAGS(5),=C'PURGE'  ASSUME PURGE                      20954000
         LA    R15,1(,R15)         PT TO NEXT AVAILABLE MSG AREA        20954500
         TM    JQEFLAGS,QUEPURGE   TEST FOR SAME                        20955000
         BO    COFJMBB             YES--FILL-IN AFFINITIES              20955500
         MVC   COFFLAGS(6),=C'CANCEL'  ASSUME 'CANCELLED'               20956000
         LA    R15,1(,R15)         PT TO NEXT AVAILABLE MSG AREA        20956500
         TM    JQEFLAGS,QUEOPCAN   TEST FOR CANCELLED                   20957000
         BO    COFJMBB             YES--FILL-IN AFFINITIES              20957500
         MVC   COFFLAGS,=C'DUPLICATE'  MUST BE DUPLICATE JOB NAME       20958000
         LA    R15,3(,R15)         PT TO NEXT AVAILABLE MSG BYTE        20958500
COFJMBB  DS    0H                  COMPLETE MESSAGE BODY AND SVAE LN    20959000
         LA    R14,COFJOB          GET ADDRESS OF MSG BEGINNING         20959500
         SLR   R15,R14             COMPUTE MESSAGE LENGTH               20960000
         STC   R15,COFLNGTH        SAVE LENGTH                          20961000
         LR    R15,R0              RESTORE LINK REGISTER                20963000
         BR    R15                 AND RETURN                           20963500
         EJECT                                                      R41 20964000
*********************************************************************** 20964400
*        ADD ACTIVE SYSTEM NAME                                       * 20964500
*********************************************************************** 20964600
         SPACE 1                                                        20965000
COFJMAFA DS    0H                  PICK-UP AFFINITY IN R15 FOR NAME     20965500
         N     R15,=A(QUEBUSY)     TURN OFF NON-BUSY BITS               20966000
         BCTR  R15,0               LESS ONE FOR DISPLACEMENT            20966500
         MH    R15,$QSEL           TIMES ELEMENT SIZE                R4 20967000
         AL    R15,$QSE1           PLUS TABLE START ADDR             R4 20967500
         USING QSEDSECT,R15        QSE ADDRESSABILITY                   20968000
         SLR   R14,R14             ZERO INSERT REGISTER                 20969000
         IC    R14,COFLNGTH        PICK-UP CURRENT MSG LENGTH           20969500
         LA    R14,COFJOB(R14)     PT TO CURRENT MSG END                20971500
         MVC   0(L'QSESID,R14),QSESID PUT SYSTEM NAME IN MESSAGE        20972000
         LA    R15,COFJOB          PT TO MSG BEGINNING                  20972500
         LA    R14,L'QSESID(,R14)  PT TO MSG ENDING                     20973000
         SLR   R14,R15             COMPUTE NEW LENGTH                   20973500
         STC   R14,COFLNGTH        SAVE NEW LENFTH FOR $WTO             20974500
         LR    R15,R0              GET GOOD RETURN REGISTER             20976500
         BR    R15                 AND RETURN TO CALLER                 20977000
         DROP  R15                 DROP QSE ADDRESSABILITY              20977500
         EJECT                                                      R41 20978000
*********************************************************************** 20978400
*        ADD QUEUED SYSTEM NAMES TO MESSAGE                           * 20978500
*********************************************************************** 20978600
         SPACE 1                                                        20979000
COFJMAFQ DS    0H                  ADD QUEUED NAMES                     20979500
         SLR   R15,R15             ZERO INSERT REGISTER                 20980500
         IC    R15,COFLNGTH        PICK-UP CURRENT LENGTH               20981000
         LA    R15,COFJOB(R15)     PT TO CURRENT MSG END                20983000
         TM    JQEFLAG2,QUESYSAF   TEST FOR QUEUED TO 'ANY'             20983500
         BNO   COFJMAF1            NO--PLACE ALL NAMES IN MSG           20984000
         MVC   0(3,R15),=C'ANY'    SET AFFINITY SYS NAMES TO 'ANY'      20984500
         LA    R15,3(,R15)         PT TO NEW END OF MSG                 20985000
         B     COFJMAF2            AND EXIT                             20985500
COFJMAF1 DS    0H                  ADD SPECIFIC SYS NAMES               20986000
         L     R14,$QSE1           POINT TO 1ST QSE                  R4 20986500
         SH    R14,$QSEL           BACK UP ONE QSE                   R4 20987000
         USING QSEDSECT,R14        QSE ADDRESSABILITY                   20987500
         ST    WA,COMWREGS         SAVE WA FOR WORK                     20988000
COFJMAF3 AH    R14,$QSEL           POINT TO NEXT QSE                 R4 20988500
         IC    WA,QSESIAFF         PICK UP SYSTEM AFFINITY BIT       R4 20989000
         EX    WA,COFJMAFF         TEST FOR JOB QUEUED TO THIS SYS      20989500
         BZ    COFJMAF4            NO--SEARCH ALL ELEMENTS              20990000
         MVC   0(L'QSESID,R15),QSESID YES--PUT NAME IN MSG              20990500
         LA    R15,L'QSESID+1(,R15) COMPUTE NEXT NAME LOCATION          20991000
COFJMAF4 DS    0H                  CYCLE THROUGH ALL ELEMENTS           20991500
         TM    QSEFLAGS,QSELAST    TEST FOR LAST ELEMENT                20992000
         BZ    COFJMAF3            NOT LAST LOOP                        20992500
         L     WA,COMWREGS         ELSE RESTORE WA CONTENTS             20993000
         BCTR  R15,0               REDUCE MSG FOR XTR BLANK             20993500
COFJMAF2 DS    0H                  TEST FOR 'IND' MODE OF OPERATION     20994000
         TM    JQEFLAG2,QUEINDAF   TEST FOR 'IND' MODE                  20994500
         BZ    COFJMAF5            NO--SEND MESSAGE AS IS               20995000
         MVC   1(3,R15),=C'IND'    SET 'IND ' MODE IN MESSAGE           20995500
         LA    R15,4(,R15)         PT TO END OF MESSAGE                 20996000
COFJMAF5 DS    0H                  COMPUTE MESSAGE LENGTH               20996500
         LA    R14,COFJOB          PT TO MSG BEGINNING                  20997000
         SLR   R15,R14             COMPUTE NEW LENGTH                   20997500
         STC   R15,COFLNGTH        SAVE IT                              20998500
         LR    R15,R0              GET GOOD RETURN REGISTER             21000500
         BR    R15                 AND RETURN                           21001000
         SPACE 1                                                        21001500
COFJMAFF TM    JQEFLAG2,*-*        **** EXECUTE ONLY ****               21002000
         DROP  R14                 DROP QSE ADDRESSABILITY              21002500
         EJECT                                                      R41 21002800
*********************************************************************** 21002900
*        SEND MESSAGE FOR JOB ACTIVITY                                * 21003000
*********************************************************************** 21003100
         SPACE 1                                                        21003500
COFJWTO  DS    0H                  CREATE MESSAGE OUTPUT                21004000
         ST    R14,COMFWORK        SAVE R14                             21004500
         STM   R1,WA,COMWREGS      SAVE REGISTERS                       21005000
         SLR   WA,WA               CLEAR INSERT REGISTER                21005500
         IC    WA,COFLNGTH         GET MESSAGE LENGTH                   21006500
COFAGAIN CH    WA,=H'70'           CHECK FOR EXCESSION OF MAX LENGTH    21008500
         BNH   COFJFINI            NO--OUTPUT ONE MESSAGE               21009000
         LA    R0,COFJOB+69        PT TO LAST POSSIBLE CHAR IN LINE     21009500
         LA    R1,COFJOB-1(WA)     SET ADDRESS OF TOTAL MSG             21010000
COFCKLN  CLR   R1,R0               TEST REULTANT LENGTH                 21010500
         BNH   COFLNOK             OK TO SEND IF LESS                   21011000
COFLESS  BCTR  WA,0                TOO BIG--REDUCE LENGTH               21011500
         LA    R1,COFJOB-1(WA)     SET NEW END ADDRESS                  21012000
         CLI   0(R1),C' '          CHECK FOR BLANK IN MESSAGE           21012500
         BE    COFCKLN             IF YES--TEST LENGTH AGAIN            21013000
         B     COFLESS             ELSE KEEP REDUCING LENGTH            21013500
COFLNOK  DS    0H                  LENGTH NOW OK FOR 1 LINE MESSAGES    21014000
         LR    R0,WA               SAVE NEW LENGTH                      21014500
         IC    WA,COFLNGTH         PICK-UP ORIGINAL LENGTH              21015500
         SLR   WA,R0               COMPUTE NEW LENGTH                   21017500
         STM   R1,WA,COMDWORK      SAVE REGISTERS                       21018000
         NI    COMMID+1,X'FE'      SET JOB IS SET                       21018500
         $CWTO L=(R0)              SEND MESSGAE                         21019000
         LM    R1,WA,COMDWORK      RESTORE REGISTERS                    21019500
         MVI   COFJOB,C' '         SET BLANK INTO FIRST OF MESSAGE      21020000
         MVC   COFJOB+1(COFQUE-COFJOB),COFJOB  BLANK REST               21020500
         BCTR  WA,0                REDUCE NEW LENGTH FOR MOVE           21021000
         EX    WA,COFMVMSG         MOVE MESSAGE DOWN                    21021500
         LA    WA,1+COFQUE-COFJOB(,WA)  SET NEW MESSAGE LENGTH          21022000
         STC   WA,COFLNGTH         SAVE NEW LENGTH                      21023000
         B     COFAGAIN            GO OUTPUT REST OF MESSAGE            21025000
         SPACE 5                                                    R41 21025400
COFMVMSG MVC   COFJOB+(COFQUE-COFJOB)(*-*),1(R1) ** EXECUTE ONLY **     21025500
         EJECT                                                      R41 21026000
*********************************************************************** 21026200
*        OUTPUT LAST LINE OF MESSAGE                                  * 21026300
*********************************************************************** 21026400
COFJFINI DS    0H                  OUTPUT LAST LINE OF MESSAGE          21026500
         LR    R0,WA               PUT LENGTH INTO R0                   21027000
         LM    R1,WA,COMWREGS      RESTORE REGISTERS                    21027500
         STM   R1,WA,COMDWORK      SAVE REGISTERS                       21028000
         NI    COMMID+1,X'FE'      SET JOB ID IS SET                    21028500
         $CWTO L=(R0)              OUTPUT MESSAGE                       21029000
         LM    R1,WA,COMDWORK      RESTORE REGISTERS                    21029500
         L     R14,COMFWORK        RESTORE R14                          21030000
         BR    R14                 AND RETURN                           21030500
         SPACE 4                                                        21031000
COFDEVTB EQU   *                   LOCAL DEVICE LOOK-UP TABLE           21031500
         DC    AL1(0),CL8'INTRDR'                                       21032000
         DC    AL1(6),CL8'READER'                                       21032500
COFPRDEV DC    AL1(7),CL8'PRINTER'                                   R4 21033000
         DC    AL1(5),CL8'PUNCH'                                     R4 21033500
COFDEVTL EQU   (*-COFDEVTB)/4      LENGTH OF EACH ELEMENT               21034000
         SPACE 4                                                        21034500
COFRMDVT EQU   *                   REMOTE DEVICE LOOK-UP TABLE          21035000
         DC    CL2'**'             SPACER                            R4 21038500
         DC    CL2'RD'                                                  21039000
         DC    CL2'PR'                                                  21039500
         DC    CL2'PU'                                                  21040000
         SPACE 2                                                        21040500
         DROP  R10                 RELEASE ROUTINE ADDRESSABILITY    R4 21041000
.XIT     MEND                                                           21041500
         EJECT                                                          21042000
         MACRO -- $CFJSCAN -- SCAN JOB QUEUE                            21042500
&NAME    $CFJSCAN &PROCESS=,&EMPTY=,&IGNORE=,&NEXT=,&QUEUE=,   @OZ29819C21043000
               &STORE=YES                                      @OZ29819 21043100
         LCLC  &R                                                    R4 21043500
&R       SETC  '&SYSNDX'                                             R4 21044000
        $CHEK  &PROCESS,&NEXT                                        R4 21044500
*********************************************************************** 21045000
*        SCAN JOB QUEUE FOR SELECTED JOBS                             * 21045500
*********************************************************************** 21046000
         AIF   ('&NAME' EQ '').NONAME                                R4 21046500
&NAME    DS    0H                                                    R4 21047000
.NONAME  AIF   ('&EMPTY' EQ '' OR '&IGNORE' EQ '').NOCHEKA           R4 21047500
         MVI   PCEBASE2,0          SET NO JOB(S) FOUND INDICATOR     R4 21048000
.NOCHEKA AIF   ('&QUEUE' EQ '').NOQUEUE                        @OZ29819 21048100
         $DECOD1 &QUEUE,,LA,R15    GET QUEUE TYPE IN R15       @OZ29819 21048200
         L     R1,=V($QINDEX)      GET ADDR OF JOB QUEUE INDEX @OZ29819 21048300
         IC    R15,0(R1,R15)       GET OFFSET OF QUEUE HEAD    @OZ29819 21048400
         AGO   .NOSTOR1                                        @OZ29819 21048500
.NOQUEUE LA    R15,$JQTYPES*2      NO. OF JOB QUEUES (TIMES 2) @OZ29819 21048600
         AIF   ('&STORE' NE 'YES').NOSTOR1                           R4 21049000
CJS&R.A  STH   R15,COMJQHDS        SAVE JOB QUEUE HEADER INDEX       R4 21049500
         LA    R1,$JQHEADS-2-QUECHAIN(R15)  POINT TO NEXT JOB QUEUE  R4 21050000
         AGO   .NEXT1                                                R4 21050500
.NOSTOR1 ANOP                                                        R4 21051000
CJS&R.A  LA    R1,$JQHEADS-2-QUECHAIN(R15)  POINT TO NEXT JOB QUEUE  R4 21051500
.NEXT1   AIF   ('&EMPTY' EQ '' OR '&IGNORE' EQ '').NOCHEKB           R4 21052000
         B     CJS&R.B             BR TO BEGIN QUEUE SCAN            R4 21052500
&NEXT    MVI   PCEBASE2,128        SET JOB FOUND INDICATOR           R4 21053000
CJS&R.B  L     BASE2,PCEBASE2      SET JOB FOUND FLAG IN REGISTER    R4 21053500
&IGNORE  LH    R1,JQECHAIN         GET OFFSET OF NEXT JQE            R4 21054000
         AGO   .NEXT2                                                R4 21054500
.NOCHEKB ANOP                                                        R4 21055000
&NEXT    LH    R1,JQECHAIN         GET OFFSET OF NEXT JQE            R4 21055500
.NEXT2   N     R1,=A(X'0000FFFF')  INSURE OFFSET POSITIVE            R4 21056000
         BZ    CJS&R.C             BR IF END OF QUEUE                R4 21056500
         SLL   R1,2                GET TRUE                          R4 21057000
         AL    R1,$JOBQPTR          JQE ADDRESS                      R4 21057500
         B     &PROCESS              AND ENTER PROCESS ROUTINE       R4 21058000
         AIF   ('&QUEUE' EQ '').NEXT3                          @OZ29819 21058100
CJS&R.C  DS    0H                                              @OZ29819 21058200
         AGO   .END                                            @OZ29819 21058300
.NEXT3   AIF   ('&STORE' NE 'YES').NOSTOR2                     @OZ29819 21058500
CJS&R.C  LH    R15,COMJQHDS        GET CURRENT JOB QUEUE HDR INDEX   R4 21059000
         BCTR  R15,0               REDUCE OFFSET BY 1                R4 21059500
         AGO   .LOOP                                                 R4 21060000
.NOSTOR2 ANOP                                                        R4 21060500
CJS&R.C  BCTR  R15,0               REDUCE OFFSET BY 1                R4 21061000
.LOOP    BCT   R15,CJS&R.A         BR IF ANOTHER JOB QUEUE           R4 21061500
.END     AIF   ('&EMPTY' EQ '' OR '&IGNORE' EQ '').XIT         @OZ29819 21062000
         LTR   BASE2,BASE2         TEST FOR ANY JOB(S) FOUND         R4 21062500
         BP    &EMPTY              BR IF NO                          R4 21063000
.XIT     MEND                                                        R4 21063500
         EJECT                                                       R4 21064000
         MACRO -- $CFSEL -- SELECT A ROUTINE BASED ON CHARACTER         21064500
&NAME    $CFSEL &A0,&A1,&A2,&A3,&A4,&A5,&A6,&A7,&A8,&A9,&AA,&AB,&AC,   C21065000
               &AD,&AE,&AF,                                            C21065500
               &OPERAND=(R1),&TYPE=CALL,&INFO=NO                        21066000
         GBLC  &DOC                                                     21066500
         LCLA  &A                                                       21067000
         LCLC  &C,&R                                                    21067500
&A       SETA  3                   SET MAX ARG TO PREVENT BAL           21068000
&C       SETC  '&OPERAND'          MVC X,OPERAND                        21068500
         AIF   ('&OPERAND'(1,1) NE '(').A                               21069000
&C       SETC  '0&OPERAND'         MVC X,0(OPERAND)                     21069500
.A       ANOP                                                           21070000
&R       SETC  '&SYSNDX'                                                21070500
         AIF   ('&INFO' EQ '' AND '&DOC' EQ 'NO' OR '&INFO' EQ 'NO').Z  21071000
         AIF   ('&TYPE' EQ 'RES').NOJECT                                21071500
         EJECT                                                          21072000
.NOJECT  SPACE 2                                                        21072500
*********************************************************************** 21073000
*                                                                     * 21073500
*        COFSEL -- SELECT A ROUTINE BASED ON KEY INPUT CHARACTER      * 21074000
*                                                                     * 21074500
*        ROUTINE MATCHES THE DESIGNATED INPUT CHARACTER AGAINST       * 21075000
*        THE LIST OF ARGUMENTS PROVIDED AND TRANSFERS CONTROL TO      * 21075500
*        THE ROUTINE DESIGNATED BY THE CORRESPONDING ADDRESS.         * 21076000
*        NO $WAITS ARE ISSUED.                                        * 21076500
*                                                                     * 21077000
* REGISTERS USED                                                      * 21077500
*        R1    = ADDRESS OF INPUT CHARACTER                           * 21078000
*        LINK  = RETURN ( USED IF NO MATCH FOUND )                    * 21078500
*        R15   = WORK REGISTER                                        * 21079000
*                                                                     * 21079500
* NOTES                                                               * 21080000
*        SEVERAL METHODS OF SELECTION ARE USED BASED UPON THE         * 21080500
*        LENGTH OF THE ARGUMENT LIST.                                 * 21081000
*        THE SELECTED ROUTINE MUST BE LOCATEABLE VIA AN S TYPE        * 21081500
*        CONSTANT.                                                    * 21082000
*                                                                     * 21082500
*********************************************************************** 21083000
.Z       ANOP                                                           21083500
&NAME    NULL                                                           21084000
         AIF   ('&TYPE' NE 'CALL').INL                                  21084500
.B       AIF   (N'&SYSLIST LE &A).SHORT                                 21085000
         CNOP  0,4                 INSURE ALINGMENT                     21085500
         BAL   R15,COF&R.T         PICK UP TABLE FOR SELECTION          21086000
&A       SETA  0                                                        21086500
.C       AIF   (&A GE N'&SYSLIST).D                                     21087000
&A       SETA  &A+1                                                     21087500
         DC    CL1'&SYSLIST(&A,1)',AL3(&SYSLIST(&A,2))                  21088000
         AGO   .C                                                       21088500
.D       DC    X'FF'               END OF SELECT TABLE                  21089000
COF&R.T  BAL   LINK,COFSEL         SELECT ROUTINE                       21089500
         MEXIT                                                          21090000
.INL     ANOP                                                           21090500
COF&R.T  CLC   0(1,R15),&C         SEARCH TABLE LOOKING FOR             21091000
         BNE   *+10                EQUAL OPERANDS                       21091500
         L     LINK,0(,R15)        WHEN FOUND INSERT ADDRESS            21092000
         BR    LINK                INTO LINK AND EXIT TO SUB-RTN        21092500
         LA    R15,4(,R15)         ELSE STEP THROUGH TABLE              21093000
         BL    COF&R.T             LOOP WHILE STILL IN TABLE            21093500
         BR    LINK                ELSE RETURN IN ERROR                 21094000
         MEXIT                                                          21094500
.SHORT   ANOP                                                           21095000
&A       SETA  0                                                        21095500
.H       AIF   (&A GE N'&SYSLIST).XIT                                   21096000
&A       SETA  &A+1                                                     21096500
         CLI   &C,C'&SYSLIST(&A,1)'  TEST CHARACTER                  R4 21097000
         BE    &SYSLIST(&A,2)      BR IF MATCH                       R4 21097500
         AGO   .H                                                       21098000
.XIT     MEND                                                           21098500
         EJECT                                                          21099000
         MACRO -- $CFVQE -- VERIFY CONSOLE CONTROL OVER JOB             21099500
&NAME    $CFVQE &JOBQE=(R1),&OK=(,B),&NOK=(,B),&TYPE=CALL,&INFO=NO      21100000
         GBLC  &DOC                                                     21100500
         LCLC  &OP1,&OP2                                                21101000
         AIF   ('&INFO' EQ '' AND '&DOC' EQ 'NO' OR '&INFO' EQ 'NO').Z  21101500
         AIF   ('&TYPE' EQ 'RES').NOJECT                                21102000
         EJECT                                                          21102500
.NOJECT  SPACE 2                                                        21103000
*********************************************************************** 21103500
*                                                                     * 21104000
*        COFVQE -- VERIFY CONSOLE CONTROL OVER JOB                    * 21104500
*                                                                     * 21105000
*        ROUTINE TESTS FOR RESTRICTED CONSOLE AND, IF RESTRICTED      * 21105500
*        AND NEITHER PRINT OR PUNCH ROUTING IS TO THE RESTRICTED      * 21106000
*        UNIT RECORD GROUP, THE JOB IS 'NOT OK'.                      * 21106500
*        OTHERWISE THE JOB IS 'OK'.                                   * 21107000
*        NO $WAITS ARE ISSUED.                                        * 21107500
*                                                                     * 21108000
* REGISTERS USED                                                      * 21108500
*        R0    = WORK                                                 * 21109000
*        R1    = JOB QUEUE ELEMENT ADDRESS                            * 21109500
*        LINK  = RETURN                                               * 21110000
*        R15   = WORK                                                 * 21110500
*                                                                     * 21111000
* EXITS                                                               * 21111500
*        CC    = (E)  - JOB QUEUE ELEMENT OK                          * 21112000
*        CC    = (NE) - JOB QUEUE ELEMENT NOK                         * 21112500
*                                                                     * 21113000
*********************************************************************** 21113500
.Z       ANOP                                                           21114000
         AIF   ('&TYPE' NE 'CALL').INLINE                               21114500
         AIF   ('&OK(1)' NE '' OR 'NOK(1)' NE '').A                     21115000
         MNOTE 12,'''NOT OK'' KEYWORD REQUIRED'                         21115500
         MEXIT                                                          21116000
.A       ANOP                                                           21116500
&NAME    DS    0H                                                       21117000
         $DECODE &JOBQE                                                 21117500
         BAL   LINK,COFVQE         VERIFY JOB'S OWNERSHIP               21118000
         AGO   .B                                                       21118500
.INLINE  ANOP                                                           21119000
&NAME    DS    0H                                                       21119500
         TM    COMAUTH,CMBFLAGR    ENTRY CONSOLE ONLY RMT AUTHORIZED R4 21120000
         BZR   LINK                NO--RETURN 'OK'--EQUAL               21120500
         LH    R0,COMJROUT         PICK UP JOB ROUTE                 R4 21121500
         ICM   R0,2,=H'0'          PURIFY REMOTE ID                  R4 21125500
         BCTR  R0,0                LESS ONE FOR TRUE INDEX              21126000
         MH    R0,=Y(RATTLE)       TIMES RAT SIZE FOR DISPLACEMENT      21126500
         LR    R15,R0              FIND DESIRED                      R4 21127000
         AL    R15,$RATABLE         RAT ELEMENT                      R4 21127500
         LH    R0,RATROUTE-RATDSECT(,R15) GET RAT ROUTE CODE            21128000
COFVQEK  CLI   JQETYPE,$INPUT      IS JOB ON READER...              R41 21128500
         BE    *+10                BR IF YES (IGNORE PRT ROUTE)     R41 21128600
         CH    R0,JQEPRTRT         CHECK IT WITH JOB'S PRT RT       R41 21128700
         BER   LINK                EQUAL  'OK'                          21129000
         CH    R0,JQEPUNRT         CHECK IT WITH JOB'S PUN RTE          21129500
         BR    LINK                RETURN-- EQ='OK'  NE='NOK'           21130000
         MEXIT                                                          21134500
.B       ANOP                                                           21135000
         AIF   ('&OK(1)' EQ '').C                                       21135500
         AIF   ('&OK(2)' NE '').D                                       21136000
         BE    &OK(1)              OWNERSHIP VERIFIED -- 'OK'           21136500
         AGO   .C                                                       21137000
.D       ANOP                                                           21137500
&OP1     SETC  '&OK(2)'                                                 21138000
&OP1     SETC  '&OP1'(1,1).'E'.'&OP1'(2,1)                              21138500
         &OP1  &OK(1)              OWNERSHIP VERIFIED--'OK'             21139000
.C       AIF   ('&NOK(1)' EQ '').XIT                                    21139500
         AIF   ('&NOK(2)' EQ '').E                                      21140000
&OP2     SETC  '&NOK(2)'                                                21140500
&OP2     SETC  '&OP2'(1,1).'NE'.'&OP2'(2,1)                             21141000
         &OP2  &NOK(1)             OWNERSHIP NOT VERIFIED--'NOK'        21141500
         AGO   .XIT                                                     21142000
.E       BNE   &NOK(1)             OWNERSHIP NOT VERIFIED--'NOK'        21142500
         AIF   ('&OK(1)' EQ '').XIT                                  R4 21143000
         B     &OK(1)              NO REMOTES--ALL CONSOLES VALID       21143500
.XIT     MEND                                                           21144000
         TITLE 'HASP COMMAND PROCESSOR'                                 21144500
         SPACE 5                                                        21145000
HASPCOMM START 0                   HASP COMMAND PROCESSOR               21145500
         SPACE 5                                                        21146000
*                                                                       21146500
*                             EXTERNAL REFERENCES                       21147000
*                                                                       21147500
         SPACE 5                                                        21148000
         ENTRY $JCANR              ADDRESS OF JOB CANCEL ROUTINE        21148500
         ENTRY $COMMEND            ADDRESS OF END OF MAIN CSECT         21149000
         SPACE 5                                                        21149500
         COPY  $HASPGEN            COPY HASPGEN PARAMETERS              21150000
         TITLE 'HASP CONTROL BLOCKS'                                    21150500
         SPACE 5                                                        21151000
HASPCOMM $ENTRY CSECT=YES,BASE=BASE2  PROVIDE PROCESSOR ENTRY POINT     21151500
         SPACE 5                                                        21152000
*                                                                       21152500
*                             DOCUMENTATION OPTIONS FOR THIS ASSEMBLY   21153000
*                                                                       21153500
         SPACE 3                                                        21154000
        $SYSPARM (OFF,GEN,NODATA,NO,NO)                                 21154500
         SPACE 5                                                        21155000
*                                                                       21155500
*                             GENERATE HASP CONTROL BLOCKS              21156000
*                                                                       21156500
         SPACE 3                                                        21157000
        $HASPCB DOC=&DOC,LIST=&LIST  GENERATE HASP CONTROL BLOCKS       21157500
 TITLE 'HASP COMMAND PROCESSOR MAIN ENTRY POINT'                        21158000
*********************************************************************** 21158400
*                                                                     * 21158500
*        H A S P C O M M   M A I N   E N T R Y   P O I N T            * 21159000
*                                                                     * 21159500
*********************************************************************** 21159600
         SPACE 2                                                        21160000
         USING PCEDSECT,SAVE                                            21160500
         USING HCTDSECT,BASE1                                           21161000
         USING JQEDSECT,R1                                              21161500
         L     WA,$ACTABLE         POINT TO $ACT                        21162000
         STCM  SAVE,7,ACTTQE+IPOST+1-ACTDSECT(WA) SET $POST PCE ADDRESS 21162500
         L     BASE3,=A(HASPCSY1)  PICK UP BASE FOR S INIT LOGIC        21163000
         OI    COMMID+1,X'0F'      INDICATE JOB ID NOT SET           R4 21163500
         CLI   $NUMPRTS,10         TEST PRINTER COUNT                R4 21164000
         BL    CSIRETI-HASPCSY1(,BASE3)  BR IF LT 10                 R4 21164500
         L     WB,=A(COFPRINT)     GET TABLE ENTRY ADDRESS           R4 21165000
         MVI   3(WB),5             ADJUST TABLE ENTRY LENGTH VALUE   R4 21165500
         MVC   9(2,WB),10(WB)      CHANGE 'PRINTER' TO 'PRINTR'     R41 21166000
         L     WB,=A(COFPRDEV)     GET TABLE ENTRY ADDRESS           R4 21166500
         MVI   0(WB),6             ADJUST TABLE LENGTH VALUE         R4 21167000
         MVC   6(2,WB),7(WB)       CHANGE 'PRINTER' TO 'PRINTR'      R4 21167500
         B     CSIRETI-HASPCSY1(,BASE3) ENTER S INIT SCAN               21168000
         SPACE 2                                                    R41 21168400
COBTABLE B     CONUL               NEXT COMMAND                         21168500
CORETOK  B     COROK               REPLY OK ENTRY                       21169000
CORETMSG LA    WA,CONEXT           SET RETURN TO GET NEXT CMB           21169500
         SPACE 5                                                    R41 21169700
*********************************************************************** 21169800
*                                                                     * 21169900
*        WRITE-TO-OPERATOR SUBROUTINE                                 * 21170000
*                                                                     * 21170100
*********************************************************************** 21170200
CWTO     LA    R1,2                SET COUNT ADJUSTMENT              R4 21170300
         AR    R0,R1               UP COUNT                             21170500
         $WTO  COMMID,(R0),MF=(EX,COMFLAG) SEND MESSAGE              R4 21171000
         OI    COMMID+1,X'0F'      INDICATE JOB ID NOT SET           R4 21171500
         BR    WA                  RETURN                               21172000
         EJECT                                                      R41 21172200
*********************************************************************** 21172300
*                                                                     * 21172400
*        WRITE-TO-OPERATOR (TRUNCATE MLWTO) SUBROUTINE                * 21172500
*                                                                     * 21172600
*********************************************************************** 21172700
CWTOT    TM    COMFLAG,CMBFLAGU    TEST FOR UCMID (OWN OR OTHER)     R4 21172800
         BZ    CWTOTW              DO NORMAL $WTO                       21173000
         CLI   COMUCMA,0           MLWTO                             R4 21173500
         BZ    CWTOTW              DO NORMAL $WTO                       21174000
         OI    COMLINET,X'10'      SET END LINE INDICATOR            R4 21174500
         LTR   R0,R0               NULL LINE                            21175000
         BNE   CWTOTM              SKIP NSI                             21175500
         BCTR  R0,0                SET - 1                              21176000
CWTOTM   LA    R1,2                SET COUNT ADJUSTMENT              R4 21176500
         AR    R0,R1               UP COUNT                             21177000
         $WTO  COMMID,(R0),MF=(EX,COMFLAG) SEND MESSAGE              R4 21177500
CWTOTNM  OI    COMFLAG,CMBFLAGC    SET TYPE=SVC34 ON                 R4 21178000
         OI    COMMID+1,X'0F'      INDICATE JOB ID NOT SET           R4 21178500
         TM    COMFLAG,CMBFLAGU    IS THIS UCMID                     R4 21179000
         BZR   WA                  RETURN IF NOT                     R4 21179500
         MVI   COMLINET,0          FORCE NO LINE TYPE                R4 21180000
         BR    WA                  RETURN                               21180500
CWTOTW   LTR   R0,R0               TEST FOR MESSAGE                     21181000
         BNZ   CWTOTM              SEND MESSAGE IF PRESENT              21181500
         B     CWTOTNM             SKIP MESSAGE                         21182000
         SPACE 5                                                    R41 21182200
*********************************************************************** 21182300
*                                                                     * 21182400
*        SEND '$HASP000 OK' MESSAGE                                   * 21182500
*                                                                     * 21182600
*********************************************************************** 21182700
COROK    MVC   COMMAND(2),=C'OK'   SET OK MESSAGE                       21182800
         LA    R0,2                SET LENGTH                           21183000
         B     CORETMSG            SEND MESSAGE                         21183500
         EJECT                                                      R41 21183700
*********************************************************************** 21183800
*                                                                     * 21183900
*        NULL RETURN - BYPASS $WTO UNLESS UCMID AND END LINE          * 21184000
*                      INDICATOR SET                                  * 21184100
*                                                                     * 21184200
*********************************************************************** 21184300
CONUL    SLR   R0,R0               SET DUMMY                         R4 21184400
         BCTR  R0,0                LENGTH - 1                        R4 21184500
         TM    COMFLAG,CMBFLAGU    UCMID                             R4 21185000
         BZ    CONEXT              NO MLWTO IF NOT                   R4 21185500
         TM    COMLINET,X'10'      END LINE INDICATOR SET            R4 21186000
         BNZ   CORETMSG            SEND NULL MESSAGE                    21186500
*********************************************************************** 21186800
*                                                                     * 21186900
*        GET NEXT CMB                                                 * 21187000
*                                                                     * 21187100
*********************************************************************** 21187200
CONEXT   L     R1,$COMMQUE         PICK UP FIRST COMMAND IN QUEUE       21187300
         LTR   R1,R1               TEST FOR EMPTY                       21187500
         BNZ   COWORK              DO WORK IF NOT                       21188000
         MVC   COMACEID,=CL8' '    BLANK OUT CURRENT ACE ID             21188500
         L     WF,$SSVT            POINT TO SSVT                        21189000
         USING SSVT,WF                                                  21189500
         C     R1,$SVCOMMQ         CHECK FOR EMPTY                      21190000
         BNZ   COSSQUE             IF NOT REMOVE CMBS                   21190500
         L     WA,$ACTABLE         POINT TO AUTOMATIC COMMAND TABLE     21191000
         L     WB,ACTACE-ACTDSECT(,WA) POINT TO POSSIBLE ACE            21191500
         LTR   WB,WB               IS THERE ONE THERE                   21192000
         BNZ   COMACE              ENTER AUTOMATIC SCHEDULER IF YES     21192500
COMNOACE SLR   R1,R1               ZERO REG 1                           21193000
         MVI   $SVCOMM,X'0'        SIGNAL WE NEED POSTING               21193500
         C     R1,$SVCOMMQ         CHECK AGAIN                          21194000
         BNZ   COSSQUE             IF NOT EMPTY BR                      21194500
         $WAIT WORK                WAIT FOR WORK                        21195000
COSSQUE  L     R1,$SVCOMMQ         POINT TO WORK                        21195500
         USING CMBDSECT,R1                                              21196000
COSSQUEA LTR   R1,R1               TEST FOR ZERO                        21196500
         BZ    CONEXT              IF ZERO LOOP                         21197000
         SLR   R0,R0               ZERO END POINTER                     21197500
         CS    R1,R0,$SVCOMMQ      PULL ALL CMBS FROM QUEUE             21198000
         BNZ   COSSQUEA            LOOP                                 21198500
         L     WA,$COMMQUE         PICK UP OLD WORK POINTER             21199000
COSSQUEL L     WB,CMBCMB           POINT TO NEXT                     R4 21199500
         ST    WA,CMBCMB           SET NEW NEXT                      R4 21200000
         LR    WA,R1               SWITCH POINTERS                      21200500
         LTR   R1,WB               AND TEST FOR MORE                    21201000
         BNZ   COSSQUEL            LOOP IF MORE                         21201500
         ST    WA,$COMMQUE         SET WORK QUEUE                       21202000
         B     CONEXT              BACK TO TOP                          21202500
COWORK   MVC   $COMMQUE,CMBCMB     REMOVE FORM QUEUE                 R4 21203000
         L     BASE3,=A(HASPCOME)  ADDRESS OF EDIT ROUTINE              21203500
         BR    BASE3               GO TO EDIT PROCESSSOR                21204000
         EJECT                                                      R41 21204400
         DROP  R1                                                       21204500
         DROP  WF                                                       21205000
         USING JQEDSECT,R1         RESTORE JQE ADDRESSABILITY           21205500
         SPACE 5                                                    R41 21205600
*********************************************************************** 21205700
*                                                                     * 21205800
*        CORET - RETURN HERE FROM COMMAND PROCESSORS WITH R15 =       * 21205900
*                X'00' - NULL RETURN DESIRED (CONUL)                  * 21206000
*                X'04' - '$HASP000 OK' MESSAGE DESIRED (COROK)        * 21206100
*                X'08' - $WTO DESIRED - MSG IN 'COMMAND' (CORETMSG)   * 21206200
*                                                                     * 21206300
*********************************************************************** 21206400
CORET    TM    COMFLAG,CMBFLAGU    TEST FOR UCMID                    R4 21206500
         BZ    COBTABLE(R15)       RETURN TO FUNCTION IF NO             21206600
         CLI   COMUCMA,0           TEST FOR MLWTO                    R4 21207000
         BZ    COBTABLE(R15)       RETURN TO FUNCTION IF NO             21207500
         TM    COMFLAG,CMBFLAGC    THIS COMMAND PHASE                R4 21208000
         BO    COBTABLE(R15)       RETURN TO FUNCTION IF YES         R4 21208500
         OI    COMLINET,X'10'      SET END LINE INDICATOR            R4 21209000
         B     COBTABLE(R15)       RETURN TO FUNCTION                   21209500
         EJECT                                                          21210000
         SPACE 3                                                        21210500
*********************************************************************** 21211000
*                                                                     * 21211500
*        REDIRECTION VALUES FOR DISPLAY COMMANDS                      * 21212000
*                                                                     * 21212500
*********************************************************************** 21213000
$D7D     EQU   4                                                        21213500
$DA      EQU   1                                                        21214000
$DF      EQU   2                                                        21214500
$DI      EQU   3                                                        21215000
$DJ      EQU   4                                                        21215500
$DN      EQU   5                                                        21216000
$DO      EQU   6                                                        21216500
$DQ      EQU   7                                                        21217000
$DS      EQU   4                                                        21217500
$DT      EQU   4                                                        21218000
$DU      EQU   8                                                        21218500
         EJECT                                                          21219000
CDFJOT   EQU   $JOTABLE            JOB OUTPUT TABLE POINTER             21219500
CPSEXIT  DC    V($HEXIT)           ENTRY TO EXIT ROUTINE                21220000
COWTO    EQU   CWTO-COBTABLE       COMPUTE OFFSET TO $WTO ENTRY         21220500
CORTNORM EQU   COBTABLE-COBTABLE   COMPUTE OFFSET TO NULL RETURN        21221000
CORTOK   EQU   CORETOK-COBTABLE    COMPUTE OFFSET TO 'OK' REPLY         21221500
CORTMSG  EQU   CORETMSG-COBTABLE   COMPUTE OFFSET TO MSG REPLY          21222000
         TITLE 'HASP COMMAND PROCESSOR - ACE SERVICE ROUTINES'          21222500
*********************************************************************** 21223000
*                                                                     * 21223500
*        ACE SCHEDULER                                                * 21224000
*                                                                     * 21224500
* INPUT REGISTERS -                                                   * 21225000
*                                                                     * 21225500
*        WA    = ACT ADDRESS                                          * 21226000
*        WB    = FIRST ACTIVE ACE ADDRESS                             * 21226500
*                                                                     * 21227000
*********************************************************************** 21227500
         USING ACTDSECT,WA                                              21228000
         USING ACEDSECT,WB                                              21228500
COMACE   DS    0H                                                       21229000
*********************************************************************** 21229400
* TEST FOR OLD BASE TIME WANT ACTION                                  * 21229500
*********************************************************************** 21229600
         L     R0,ACTTIME          GET LAST RECORDED TIME (SEC)         21230000
         C     R0,ACETIME          CHECK EXPIRED                        21230500
         BNL   COMACEWK            DO WORK IF YES              @OZ27972 21231000
*********************************************************************** 21231400
* TEST TIMER ACTIVE - GET NEW BASE TIME IF NOT                        * 21231500
*********************************************************************** 21231600
         TM    ACTTQE+IPOST,X'80'  TEST FOR TIMER EXPIRED               21232000
         BZ    COMNOACE            WAIT FOR EXPIRE                      21232500
         BAL   LINK,COMACETR       GET NEW TIME REFERENCE               21233000
         B     COMACECN            IF CLOCK OUT DO $Z       +0          21233500
*********************************************************************** 21233900
* TRY NEW BASE TIME                                                   * 21234000
*********************************************************************** 21234100
         L     WB,ACTACE           PICK UP ACE              +4          21234500
         L     R0,ACTTIME          GET BASE TIME                        21235000
         C     R0,ACETIME          CHECK FOR EXPIRED NOW                21235500
         BNL   COMACEWK            DO WORK IF YES              @OZ27972 21236000
         XC    ACTMDELT,ACTMDELT   ZERO MAXIMUM DELAY TIME              21236500
         L     R1,ACETIME          PICK UP TIME OF ACE                  21237000
         LNR   R0,R0               - CURRENT TIME                       21237500
         AR    R0,R1               EXPIRE TIME - CURRENT TIME           21238000
         C     R0,ACTMINTV         COMPARE WITH MAXIMUM                 21238500
         BNH   COMACET             IF OK SET TIMER                      21239000
         L     R0,ACTMINTV         SET MAXIMUM                          21239500
COMACET  ST    R0,ACTTQE+ITIME     SET TIMER                            21240000
         $STIMER ACTTQE            QUEUE IT                             21240500
         B     COMNOACE            EXIT                                 21241000
         EJECT                                                          21241500
*********************************************************************** 21242000
*                                                                     * 21242500
*        SCHEDULE AUTOMATIC COMMAND                                   * 21243000
*                                                                     * 21243500
*********************************************************************** 21244000
COMACEWK $GETCMB NUMCMB=1,COUNT=1  GET A CMB AND COUNT ONE              21244500
         BZ    COMACENC            DELAY IF NO CMB                      21245000
         USING CMBDSECT,R1                                              21245500
*********************************************************************** 21245900
* FILL IN CMB AND QUEUE IT                                            * 21246000
*********************************************************************** 21246100
         MVC   CMBFLAG(14),COMAMASK SET BASIC MASK                   R4 21246500
         MVN   CMBFLAG,ACEFLAG     SET RESTRICTIONS                  R4 21247000
         MVC   CMBFM,$SYSID        SET FROM SYSTEM IDENTIFICATION    R4 21247500
         MVC   CMBUCM,ACECON       SET DEFAULT CONSOLE               R4 21248000
         MVC   CMBMSG(L'ACETEXT),ACETEXT SET TEXT                    R4 21248500
         ST    R1,$COMMQUE         SET INTO WORK QUEUE (CHAIN 0)        21249000
         MVC   COMACEID,=CL8'ID=****' SET ACE ID IN PCE                 21249500
         MVC   COMACEID+3(4),ACEID SET IDENTIFICATION                   21250000
         MVC   ACTACE,ACEACE       REMOVE ACE FROM ACTIVE               21250500
*********************************************************************** 21250900
* DISPOSE OF ACE                                                      * 21251000
*********************************************************************** 21251100
         SLR   R0,R0               ZERO R0 FOR INSERT                   21251500
         ICM   R0,3,ACEINTV        PICK UP INTERVAL                     21252000
         BZ    COMACEFR            IF NOT INTERVAL FREE IT              21252500
         A     R0,ACTTIME          ADD BASE TIME                        21253000
         LR    R1,WB               POINT TO ACE                         21253500
         BAL   LINK,COMAADD        ADD TO ACTIVE QUEUE                  21254000
         B     CONEXT              EXIT ( TIMER WILL BE SET )           21254500
COMACEFR MVC   ACEACE,ACTACEF      PUT FREE QUEUE BEHIND                21255000
         ST    WB,ACTACEF          SET FREE QUEUE                       21255500
         B     CONEXT              EXIT                                 21256000
         EJECT                                                      R41 21256400
*********************************************************************** 21256500
*                                                                     * 21257000
*        OUT OF CMBS - ACT UPON DELAY                                 * 21257500
*                                                                     * 21258000
*********************************************************************** 21258500
COMACENC ICM   R0,15,ACTMDELT      CHECK DELAY ACTIVE                   21259000
         BNZ   COMACEDC            IF ACTIVE CHECK EXCEEDED             21259500
         L     R0,ACTMDELI         PICK UP DELAY INTERVAL               21260000
         A     R0,ACTTIME          ADD CURRENT TIME                     21260500
         ST    R0,ACTMDELT         SET TIME                             21261000
COMACEWT LA    R0,10               SET 10 SECONDS                       21261500
         TM    ACTTQE+IPOST,X'80'  TIMER EXPIRED                        21262000
         BO    COMACET             SET TIMER                            21262500
         B     COMNOACE            EXIT                                 21263000
COMACEDC C     R0,ACTTIME          CHECK TOO LONG OF DELAY              21263500
         BL    COMACEWT            CHECK TIMER IF NOT                   21264000
COMACECN MVC   ACTACEZ,ACTACE      FORCE                                21264500
         XC    ACTACE,ACTACE        $ZA                                 21265000
         OI    ACTFLAG,ACTFLAGZ    SET FLAG                             21265500
         XC    ACTMDELT,ACTMDELT   ZERO DELAY                           21266000
         $WTO  COMACEM,COMACEML,JOB=NO, SEND DIAGNOSTIC                C21266500
               ROUTE=$ALL,CLASS=$ALWAYS,PRI=$ST                         21267000
         BAL   LINK,COMACEKT       KILL TIMER                           21267500
         B     COMNOACE            EXIT                                 21268000
         SPACE 5                                                    R41 21268400
COMACEM  $MSG  002,'AUTOMATIC COMMANDS HALTED',SYMB=COMACEMT            21268500
COMACEML EQU   *-COMACEM                                                21269000
COMAMASK $WTO  ,L'ACETEXT,MF=LX,JOB=NO,TYPE=SVC34,UCM=YES,           R4C21269500
               CLASS=$ALWAYS,PRI=$HI                                 R4 21270000
         EJECT                                                          21270500
*********************************************************************** 21271000
*                                                                     * 21271500
*        SUBROUTINE TO GET TIME OF DAY AND ADJUST BASES               * 21272000
*                                                                     * 21272500
* REGISTERS -                                                         * 21273000
*                                                                     * 21273500
*        R0    = WORK                                                 * 21274000
*        R1    = WORK                                                 * 21274500
*        WA    = ACT ADDRESS                                          * 21275000
*        WB    = WORK                                                 * 21275500
*        LINK  = RETURN (LINK+0= ERROR, LINK+4= OK)                   * 21276000
*        R15   = WORK                                                 * 21276500
*                                                                     * 21277000
*********************************************************************** 21277500
COMACETR ST    LINK,PCELINK        SAVE REGISTER 14                     21278000
         TIME  MIC,ACTDTIME        GET OS TIME OF DAY                   21278500
         L     LINK,PCELINK        PUT LINK BACK                        21279000
         LTR   R15,R15             DID CLOCK GO OK                      21279500
         BNZ   COMACENT            ERROR RETURN                         21280000
         LM    R14,R15,ACTDTIME    GET TOTAL TIME                       21280500
         SRDL  R14,32-20           ALIGN MICRO SECS IN RIGHT SIDE       21281000
         D     R14,=F'1000000'     GET NUMBER OF SECONDS                21281500
         LR    R0,R15              INTO R0                              21282000
         L     LINK,PCELINK        PUT LINK BACK                        21282500
         C     R0,ACTTIME          CHECK AGAINST PREVIOUS TIME          21283000
         BL    COMACEND            IF LOW PROBABLY NEW DAY              21283500
         C     R1,ACTDATE          CHECK BASE DATE                      21284000
         BNE   COMACEND            CHECK NEXT DAY IF NOT SAME           21284500
         ST    R0,ACTTIME          SET TIME                             21285000
         B     4(0,LINK)           RETURN OK                            21285500
COMACENT STM   R0,R1,ACTTIME+ACTDATE-ACTDATE SET TIME AND DATE          21286000
         BR    LINK                RETURN ERROR                         21286500
*********************************************************************** 21286900
* CALCULATE BINARY CENTURY DATE                                       * 21287000
*********************************************************************** 21287100
COMACEND L     R15,ACTDATEB        PICK UP DATE                         21287500
         STM   R0,R1,ACTTIME+ACTDATE-ACTDATE SET NEW VALUES             21288000
         XC    ACTDWORK,ACTDWORK   ZERO WORK                            21288500
         LR    R0,R1               COPY R1                              21289000
         SRL   R0,12               ALIGN YYX TO RIGHT                   21289500
         ST    R0,ACTDWORK+4       RELYING ON OS                        21290000
         OI    ACTDWORK+7,X'0F'     TO PROVIDE VALID DATA               21290500
         CVB   LINK,ACTDWORK       CONVERT TO BINARY                    21291000
         LA    R0,3(0,LINK)        COPY AND ADJUST FOR LEAP YEARS       21291500
         MH    LINK,=H'365'        DAYS IN CENTURY OF NEW YEAR          21292000
         SRL   R0,2                ACCOUNT FOR                          21292500
         AR    LINK,R0             LEAP YEAR                            21293000
         ST    R1,ACTDWORK+4       GET READY FOR DAY                    21293500
         MVI   ACTDWORK+4+1,0      ZERO YY                              21294000
         CVB   R1,ACTDWORK         PUT DAY IN                           21294500
         AR    R1,LINK             GET CENTURY + 1                      21295000
         BCTR  R1,0                CENTURY DAY                          21295500
         L     LINK,PCELINK        RESTORE LINKAGE REGISTER             21296000
*********************************************************************** 21296400
* SEE IF NEXT DAY                                                     * 21296500
*********************************************************************** 21296600
         XC    ACTMDELT,ACTMDELT   ZERO DELAY MAXIMUM                   21297000
         ST    R1,ACTDATEB         SET NEW DAY                          21297500
         BCTR  R1,0                BACK UP 1                            21298000
         CR    R1,R15              ARE THEY THE SAME                    21298500
         BNER  LINK                ERROR EXIT IF NOT                    21299000
*********************************************************************** 21299400
* ADJUST ALL ELEMENTS BY 24 HOURS                                     * 21299500
*********************************************************************** 21299600
         L     R0,=A(60*60*24)     SET 24 HOURS                         21300000
         ICM   WB,15,ACTACE        POINT TO FIRST ACE                   21300500
         BNZ   COMACEAL            ADJUST IF NOT EMPTY                  21301000
         ICM   WB,15,ACTACEZ       POINT TO FIRST HALTED ACE            21301500
         BZ    4(0,LINK)           EXIT IF END                          21302000
COMACEAL L     R1,ACETIME          PICK UP TIME                         21302500
         SR    R1,R0               SUBTRACT 24 HOURS                    21303000
         BNM   *+6                 SKIP IF NOT MINUS                    21303500
         SLR   R1,R1               IF NEGATIVE SET TO ZERO              21304000
         ST    R1,ACETIME          SET NEW TIME                         21304500
         ICM   WB,15,ACEACE        POINT TO NEXT ACE                    21305000
         BNZ   COMACEAL            LOOP                                 21305500
         B     4(0,LINK)           EXIT                                 21306000
         EJECT                                                          21306500
*********************************************************************** 21307000
*                                                                     * 21307500
*        SUBROUTINE TO ADD AN ACE TO CHAIN                            * 21308000
*                                                                     * 21308500
* REGISTERS -                                                         * 21309000
*                                                                     * 21309500
*        R0    = TIME OF ACE                                          * 21310000
*        R1    = ACE ADDRESS                                          * 21310500
*        WA    = ACT ADDRESS                                          * 21311000
*        WB    = WORK                                                 * 21311500
*        LINK  = RETURN                                               * 21312000
*        R15   = WORK                                                 * 21312500
*                                                                     * 21313000
*********************************************************************** 21313500
COMAADD  LA    WB,ACTACE-(ACEACE-ACEDSECT) POINT TO HEAD OF CHAIN       21314000
         TM    ACTFLAG,ACTFLAGZ    TEST FOR HALTED                      21314500
         BZ    COMAADDL            BR IF NOT HALTED                     21315000
         LA    WB,ACTACEZ-(ACEACE-ACEDSECT) POINT TO HEAD OF HALTED     21315500
COMAADDL LR    R15,WB              COPY POINTER                         21316000
         L     WB,ACEACE           POINT TO NEXT ACE                    21316500
         LTR   WB,WB               CHECK FOR END                        21317000
         BZ    COMAADDQ            QUEUE IT NOW IF YES                  21317500
         C     R0,ACETIME          CHECK FOR TIME SEQUENCE              21318000
         BNL   COMAADDL            LOOP                                 21318500
COMAADDQ ST    R1,ACEACE-ACEDSECT(,R15) CHAIN TO PREVIOUS               21319000
         ST    WB,ACEACE-ACEDSECT(,R1) PUT HIGHER TIMES BEHIND          21319500
         ST    R0,ACETIME-ACEDSECT(,R1) SET TIME                        21320000
         C     R1,ACTACE           IS THIS ONE FIRST                    21320500
         BNER  LINK                RETURN                               21321000
COMACEKT TM    ACTTQE+IPOST,X'80'  TEST TIMER ACTIVE                    21321500
         BOR   LINK                RETURN                               21322000
         LR    WB,LINK             SAVE LINK REGISTER                   21322500
         $TTIMER ACTTQE,CANCEL     CANCEL TIMER                         21323000
         OI    ACTTQE+IPOST,X'80'  SET EXPIRED                          21323500
         LR    LINK,WB             RESTORE LINK                         21324000
         BR    LINK                RETURN                               21324500
         DROP  WA,WB                                                    21325000
         USING JQEDSECT,R1                                              21325500
         TITLE 'HASP COMMAND PROCESSOR - SERVICE ROUTINES'              21326000
COFCVB  $CFCVB TYPE=RES,INFO=YES .                                      21326500
         EJECT                                                          21327000
COFCVE  $CFCVE TYPE=RES,INFO=YES .                                      21327500
         EJECT                                                          21328000
COFDCTL $CFDCTL TYPE=RES,INFO=YES .                                     21328500
         EJECT                                                          21329000
COFINVC $CFINVC TYPE=RES,INFO=YES .                                     21329500
         EJECT                                                          21330000
COFINVO $CFINVO TYPE=RES,INFO=YES .                                     21330500
         EJECT                                                          21331000
COFJDCT $CFJDCT TYPE=RES,INFO=YES,CONT=COFJDCTC                         21331500
         EJECT                                                       R4 21332000
*********************************************************************** 21332500
*                                                                     * 21333000
*        COFRTC -- CONVERT ROUTE CODE TO EBCDIC FOR DISPLAY           * 21333500
*                                                                     * 21334000
*        NO $WAITS ARE ISSUED.                                        * 21334500
*                                                                     * 21335000
* REGISTERS USED                                                      * 21335500
*                                                                     * 21336000
*        R0    = ADDRESS OF AREA TO PUT EBCDIC ANSWER, WORK           * 21336500
*        R1    = WORK (SAVED AND RESTORED)                            * 21337000
*        R14   = LINKAGE                                              * 21337500
*        R15   = ADDRESS OF ROUTE CODE FIELD                          * 21338000
*                                                                     * 21338500
* NOTES                                                               * 21339000
*                                                                     * 21339500
*        COMEWORK AND COMDWORK ARE USED BY THIS ROUTINE.              * 21340000
*                                                                     * 21340500
*********************************************************************** 21341000
COFRTC   DS    0H                                                    R4 21341500
         ST    R1,COMEWORK         SAVE REGISTER                     R4 21342000
         LR    R1,R0               POINT TO OUTPUT AREA              R4 21342500
         MVC   0(10,R1),=CL10' R'  ASSUME ' RXXX     '               R4 21343000
         SLR   R0,R0               ZERO REGISTER                     R4 21343500
         ICM   R0,1,0(R15)         PICK UP BYTE 1                    R4 21344500
         BNZ   COFRTCNR            SKIP NEXT IF NOT ZERO             R4 21345000
         MVI   1(R1),C'U'          SET SPECIAL UNIT                  R4 21349000
COFRTCNR ICM   R0,1,1(R15)         PICK UP REMOTE NUMBER             R4 21349500
         BNZ   COFRTCNC            CONVERT WHAT WE HAVE              R4 21350000
         MVC   1(5,R1),=C'LOCAL'   SET LOCAL                         R4 21350500
COFRTCNX L     R1,COMEWORK         RESTORE REGISTER                  R4 21353500
         BR    R14                 RETURN                            R4 21354000
COFRTCNC CVD   R0,COMDWORK         CONVERT TO DECIMAL                R4 21357500
         UNPK  2(3,R1),COMDWORK    CONVERT TO EBCDIC                 R4 21358000
         OI    4(R1),C'0'          SET SIGN                          R4 21358500
COFRTCNS CLI   2(R1),C'0'          IS HIGH BYTE ZERO                 R4 21359000
         BNE   COFRTCNX            EXIT IF END                       R4 21360000
         MVC   2(3,R1),3(R1)       SHIFT ONE                         R4 21362000
         B     COFRTCNS            LOOP                              R4 21362500
         EJECT                                                       R4 21363000
*********************************************************************** 21363500
*                                                                     * 21364000
*        COFRTD -- CONVERT TO DEFAULT ROUTE RANGE                     * 21364500
*                                                                     * 21365000
* REGISTERS USED                                                      * 21365500
*                                                                     * 21366000
*        R0    = HIGH BOUND ANSWER                                    * 21366500
*        R1    = LOW BOUND ANSWER                                     * 21367000
*        R14   = LINKAGE                                              * 21367500
*        R15   = WORK                                                 * 21368000
*                                                                     * 21368500
*********************************************************************** 21369000
COFRTD   DS    0H                                                    R4 21369500
         SLR   R1,R1               PICK UP DEFAULT                   R4 21370000
         ICM   R1,3,COMJROUT       ROUTE CODE                        R4 21370500
         LR    R0,R1               COPY                              R4 21371000
         TM    COMFLAG,CMBFLAGW    THIS REMOTE WORKSTATION           R4 21371500
         BO    COFRTDRW            LOOK AT REMOTE WORKSTATION IF YES R4 21372000
         LA    R0,X'FF'(,R1)       SET HIGH RANGE                    R4 21372500
         BR    R14                 RETURN                            R4 21373000
COFRTDRW DS    0H                                                    R4 21374000
         SLR   R1,R1               PICK UP                           R4 21376500
         IC    R1,COMJRMT          REMOTE NUMBER                     R4 21377000
         BCTR  R1,0                REDUCE BY ONE                     R4 21377500
         MH    R1,=Y(RATTLE)       GET OFFSET                        R4 21378000
         AL    R1,$RATABLE         POINT TO RAT ELEMENT              R4 21378500
         IC    R0,RATROUTE+1-RATDSECT(,R1) PICK UP REMOTE ROUTING    R4 21379000
         LR    R1,R0               COPY                              R4 21379500
         BR    R14                 RETURN                            R4 21380000
         EJECT                                                       R4 21380500
*********************************************************************** 21381000
*                                                                     * 21381500
*        COFRTR -- CONVERT DESTINATION RANGES TO ROUTE RANGES         * 21382000
*                                                                     * 21382500
*        COFRTRA -- CONVERT ADJUSTED RANGES TO ROUTE RANGES           * 21383000
*                                                                     * 21383500
* REGISTERS USED                                                      * 21384000
*                                                                     * 21384500
*        R0    = HIGH BOUND ANSWER                                    * 21385000
*        WD    = POINTER TO OPERAND POINTER                           * 21385500
*        R1    = LOW BOUND ANSWER                                     * 21386000
*        R14   = LINKAGE                                              * 21386500
*        R15   = WORK                                                 * 21387000
*                                                                     * 21387500
*********************************************************************** 21388000
COFRTR   DS    0H                                                    R4 21388500
         SLR   R0,R0               ZERO HIGH BOUND ANSWER            R4 21389000
         STM   R0,R15,$CSAVREG     SAVE ALL REGISTERS                R4 21389500
         LM    WE,WF,0(WD)         POINT TO FIRST                    R4 21390000
         LA    WE,0(,WE)           PURIFY                            R4 21390500
         B     COFRTRP             ENTER COMMON CODE                 R4 21391000
COFRTRA  DS    0H                                                    R4 21391500
         SLR   R0,R0               ZERO HIGH BOUND ANSWER            R4 21392000
         STM   R0,R15,$CSAVREG     SAVE ALL REGISTERS                R4 21392500
         LM    WE,WF,0(WD)         PICK UP POINTERS                  R4 21393000
         LA    WE,2(,WE)           ADJUST FOR 'X='                   R4 21393500
COFRTRP  CLI   0(WE),C'0'          THIS NUMERIC                      R4 21394000
         BNL   COFRTRN             DO NUMERIC CONVERT IF YES         R4 21394500
         LA    WF,0(,WF)           PURIFY                            R4 21395000
         BCTR  WF,0                AND LAST                          R4 21395500
COFRTRL  LR    R10,WF              COPY END + 1                      R4 21396000
         BCTR  WF,0                POINT TO END CHARACTER            R4 21396500
         LR    WD,WF               COPY END                          R4 21397000
         SR    R10,WE              GET LENGTH                        R4 21397500
         BNP   COFRTRE             ERROR EXIT IF NOT SOLID           R4 21398000
COFRTRDL CLI   0(WF),C'-'          THIS DASH                         R4 21398500
         BE    COFRTRD             CONVERT WHAT WE HAVE IF DASH      R4 21399000
         BCTR  WF,0                REDUCE                            R4 21399500
         BCT   R10,COFRTRDL        LOOP                              R4 21400000
COFRTRD  LA    R1,1(,WF)           BACK TO FIRST CHARACTER           R4 21400500
         MVC   COMDWORK,=CL8' '    SET BLANKS                        R4 21401000
         SR    WD,R1               GET MACHINE LENGTH                R4 21401500
         BM    COFRTRE             ERROR IF NOT SOLID                R4 21402000
         CH    WD,=Y(8)            TOO LONG                          R4 21402500
         BNL   COFRTRE             EXIT WITH ERROR IF TOO LONG       R4 21403000
         EX    WD,COFRTRM          MOVE TEXT TO WORK                 R4 21403500
         LA    R1,COMDWORK         POINT TO WORK AREA                R4 21404000
         SLR   R2,R2               PICK UP                           R4 21404500
         IC    R2,COMJSYS          DEFAULT BYTE 1                    R4 21405500
         L     R11,$SSVT           POINT TO SSVT                     R4 21407500
         L     R15,$SVDEST-SSVT(,R11) POINT TO CONVERT ROUTINE       R4 21408000
         BALR  R14,R15             ENTER IT                          R4 21408500
         B     COFRTREX            EXIT WITH ERROR          + 0      R4 21409000
         L     R11,$SVHCT-SSVT(,R11) RESTORE BASE REGISTER  + 4      R4 21409500
         ST    R2,$CSAVREG+(R1*4)  SET LOW BOUND                     R4 21410000
         OC    $CSAVREG(4),$CSAVREG HAS HIGH BOUND BEEN SET          R4 21410500
         BNZ   COFRTRX             EXIT IF END                       R4 21411000
         ST    R2,$CSAVREG         SET HIGH BOUND                    R4 21411500
         LTR   R10,R10             ANY MORE                          R4 21412000
         BNZ   COFRTRL             LOOP IF MORE                      R4 21412500
COFRTRX  LM    R0,R15,$CSAVREG     RESTORE REGISTERS                 R4 21413000
         CR    R1,R0               IS LOW REALLY LOW                 R4 21413500
         BNH   SKIP10              SKIP NEXT IF OK                   R4 21414000
         LR    R1,R0               MAKE SAME AS HIGH                 R4 21414500
         ST    R1,$CSAVREG+(R1*4)  SET FOR TESTING                   R4 21415000
SKIP10   B     4(,R14)             RETURN                            R4 21415500
COFRTREX L     R11,$SVHCT-SSVT(,R11) POINT TO HCT                    R4 21416000
COFRTRE  LM    R0,R15,$CSAVREG     RESTORE REGISTERS                 R4 21416500
         BR    R14                 RETURN                            R4 21417000
COFRTRN  $CFCVB POINTER=(WD),NOK=COFRTRE CONVERT TO BINARY           R4 21417500
         CH    R0,=Y(255)          TOO HIGH                          R4 21418000
         BH    COFRTRE             ERROR EXIT                        R4 21418500
         ICM   R0,2,$OWNSYS        SET HIGH ANSWER                   R4 21419500
         ICM   R1,2,$OWNSYS        SET LOW ANSWER                    R4 21420000
         LM    R2,R15,$CSAVREG+(R2*4) RESTORE REGISTERS              R4 21422500
         B     4(,R14)             RETURN                            R4 21423000
COFRTRM  MVC   COMDWORK(*-*),0(R1) MOVE TEXT TO WORK                 R4 21423500
         EJECT                                                          21424000
COFSEL  $CFSEL TYPE=RES,INFO=YES .                                      21424500
         EJECT                                                          21425000
COFVQE  $CFVQE TYPE=RES,INFO=YES .                                      21425500
         EJECT                                                       R4 21426000
         LTORG ,                                                        21426500
         TITLE 'HASP COMMAND PROCESSOR -- DCT DISPLAY ROUTINE'       R4 21427000
COFDCTD $CFDCTD  TYPE=RES,INFO=YES DCT DISPLAY ROUTINE               R4 21427500
         EJECT                                                       R4 21428000
         LTORG                                                       R4 21428500
         TITLE 'HASP COMMAND PROCESSOR -- JOB INFORMATION MESSAGE ROUTIC21429000
               NE'                                                   R4 21429500
COFJMSG  $CFJMSG TYPE=RES,INFO=YES                                   R4 21430000
         EJECT                                                       R4 21430500
         LTORG ,                                                     R4 21431000
 TITLE 'HASP COMMAND PROCESSOR COMMAND EDIT ROUTINE'                    21431500
*********************************************************************** 21432500
*                                                                     * 21433000
*        S E C O N D A R Y  C S E C T  F O R  C O M M  E D I T        * 21433500
*        A N D  A L L  V E R B  P R O C E S S O R S                   * 21434000
*                                                                     * 21434500
*********************************************************************** 21435000
         SPACE 1                                                        21435500
HASPCOMA $ENTRY BASE=,CSECT=YES    PROVIDE PROCESSOR IDENTIFICATION     21436000
         SPACE 2                                                        21436500
HASPCOME NULL .                    START OF EDIT ROUTINE                21440500
         USING *,BASE3             ADDRESSABILITY FOR EDIT ROUTINE      21441000
         USING CMBDSECT,R1                                              21441500
         MVC   COMAUTH,CMBFLAG     SET AUTHORITY FLAGS               R4 21442000
*********************************************************************** 21442400
*                                                                     * 21442500
*        COPY CMB INTO COMM WORKAREA AND INITIALIZE WORK FIELDS       * 21442600
*                                                                     * 21442700
*********************************************************************** 21442800
         MVC   COMINCON,CMBUCM     COPY POSSIBLE INPUT UCMID         R4 21442900
         MVC   COMFLAG(14),CMBFLAG COPY CMB INFORMATION              R4 21443000
         MVI   COMML,0             ZERO THE LENGTH                   R4 21443500
         NI    COMFLAG,255-CMBFLAGC-CMBFLAGR-CMBFLAGJ-CMBFLAGD-CMBFLAGS 21444000
         MVI   COMLEVEL,$ALWAYS+$HI FORCE LEVEL AND PRIORITY         R4 21444500
         MVC   COMTO,CMBFM         RESPONSE GOES TO SENDING SYSTEM   R4 21445000
         MVC   COMJSYS,CMBFMSYS    SET BYTE 1                        R4 21446000
         TM    COMFLAG,CMBFLAGU    IS THIS UCM                       R4 21448500
         BZ    SKIP20              SKIP LINE TYPE RESET              R4 21449000
         MVI   COMLINET,0          RESET LINE TYPE FIELD             R4 21449500
SKIP20   MVC   COMMID,COMMIDC      INSERT MESSAGE ID                    21450000
         LA    WB,COMMAND          POINT TO RECEIVE AREA                21451000
         MVI   0(WB),C' '          SET BLANK                            21451500
         MVC   1(L'COMMAND-1,WB),0(WB) BLANK OUT AREA                   21452000
         EJECT                                                      R41 21459400
*********************************************************************** 21459500
*                                                                     * 21459600
*        INITIALIZE FOR EDIT SCAN                                     * 21459700
*                                                                     * 21459800
*********************************************************************** 21459900
         LA    WA,CMBMSG           POINT TO MESSAGE                     21460000
         SLR   WC,WC               ZERO COUNTER                         21460100
         IC    WC,CMBML            PICK UP LENGTH OF MESSAGE         R4 21460500
         LA    WE,COMOPRND         SET POINTER TO                       21461000
         ST    WE,COMPNTER         FIRST OPERAND                        21461500
         LA    WD,COMPNTER+4       POINT TO SECOND OPERAND POINTER      21462000
         LA    WE,(COMNULOP-COMPNTER)/4 SET MAXIMUM OPERANDS            21462500
         LA    R0,1                CONSTANT FOR SPACE                   21463000
         SLR   R15,R15             SET APOSTROPHE SWITCH OFF        R41 21463500
         SLR   R10,R10             SET MULTIPLE COMMAND POINTER         21464000
         STH   R10,COMLCCA         SET L=CCA INDICATORS                 21464500
         ST    R10,COMNULOP        SET MAXIMUM NULL OPERAND          R4 21465000
*********************************************************************** 21465500
*                                                                     * 21465600
*        CHECK FOR APOSTROPHE AND FLIP APOSTROPHE SWITCH (R15) IF     * 21465700
*        ONE FOUND (DON'T FLIP IF PAIR OF APOSTROPHES).  NOTE THAT    * 21465800
*        THE INSTRUCTION LABELED 'COSW' WILL RESULT IN A BRANCH TO:   * 21465900
*              COMVCOFF -- IF THE APOSTROPHE SWITCH (R15) IS OFF      * 21466000
*              COMVC    -- IF THE APOSTROPHE SWITCH IS ON             * 21466100
*                                                                     * 21466200
*********************************************************************** 21466300
COCOMLOP CLI   0(WA),C''''         DO WE HAVE AN APOSTROPHE             21466400
         BNE   COSW                IF NOT SKIP SWITCH SETTING           21466500
         CLI   1(WA),C''''         DO WE HAVE A PAIR                    21467000
         BNE   COSWFLP             IF NOT FLIP SWITCH                   21467500
         AR    WA,R0               ADD ONE SOURCE POINTER               21468000
         BCT   WC,COMVC            MOVE SINGLE APOSTROPHE               21468500
         AR    WC,R0               FORGET SECOND APOSTROPHI             21469000
COSWFLP  X     R15,=A(COMVC-COMVCOFF) SET OR RESET APOSTROPHE SW        21469500
COSW     B     COMVCOFF(R15)       BRANCH ACCORDING TO SWITCH       R41 21470000
         EJECT                                                      R41 21470400
*********************************************************************** 21470500
*                                                                     * 21471000
*        REMOVE BLANKS AND CHECK FOR MULTIPLE COMMANDS (SEMICOLON)    * 21471100
*                                                                     * 21471200
*********************************************************************** 21471300
COMVCOFF CLI   0(WA),C' '          DO WE HAVE BLANK                     21471500
         BE    COCOMNXT            IF SO DO NOT MOVE                    21472000
         CLI   0(WA),X'5E'         CHECK FOR MULTIPLE COMMANDS          21472500
         BNE   COMNMUL             BR IF NOT MULTIPLE COMMAND           21473000
         LTR   R10,R10             TEST FOR FIRST MULTIPLE              21473500
         BNZ   COMULT              IF NOT TEST FOR PREVIOUS L=CCA       21474000
         STC   WC,CMBML            SAVE FOR NEXT COMMAND SCAN        R4 21474500
         BCT   WC,*+8              DECREMENT AND SKIP                   21475000
         B     COFINMVC            IF NO MORE AFTER SEPARATOR FAKE END  21475500
         BCTR  WC,0                GET MOVE COUNT                       21476000
         EX    WC,COMULMV          MOVE COMMAND WITHIN CMB              21476500
         LA    WA,CMBMSG+1         POINT TO FIRST OF NEXT COMMAND       21477000
         ALR   WC,R0               UP TO ACTUAL COUNT                   21477500
         LR    WE,R0               FORCE OPERAND COUNTING OFF           21478000
         LR    R10,WB              COPY BREAK ADDRESS                   21478500
         ALR   WB,R0               UP TO NEXT AVAILABLE SPACE           21479000
         B     COCOMLOP            LOOP                                 21479500
COMULT   CLC   1(2,R10),=C'L='     IS THIS L= OPERAND                   21480000
         BE    COFINMVC            FAKE END                             21480500
         SLR   WB,R10              GET LENGTH                           21481000
         EX    WB,COMULBK          BLANK OUT COMMAND                    21481500
         LNR   R1,R1               NEGATIVE CMB POINTER (REQUEUE SW)    21482000
         LR    WF,WC               SAVE COUNT OF REMAINING INFORMATION  21482500
         LA    WB,1(0,R10)         POINT TO NEXT AVAILABLE              21483000
         B     COCOMNXT            LOOP                                 21483500
*********************************************************************** 21483700
*        EXECUTED INSTRUCTIONS -- EXECUTE ONLY                        * 21483800
*********************************************************************** 21483900
COMULBK  MVC   1(*-*,R10),0(R10)   BLANK OUT COMMAND                    21484000
COMULMV  MVC   CMBMSG+1(*-*),1(WA) MOVE ALL BUT COMMAND ID CHARACTER    21484500
         SPACE 2                                                    R41 21484800
*********************************************************************** 21484900
*                                                                     * 21485000
*        MOVE AND UPPER CASE CHARACTER                                * 21485100
*        UPDATE OPERAND POINTER TABLE IF COMMA                        * 21485200
*                                                                     * 21485300
*********************************************************************** 21485400
COMNMUL  DS    0H                                                       21485500
         OC    0(1,WB),0(WA)       MOVE AND UPPER CASE THE CHARACTER    21485600
         AR    WB,R0               ADD TO RECEIVER FIELD POINTER        21486000
         CLI   0(WA),C','          WAS IT COMMA                         21486500
         BNE   COCOMNXT            IF NOT GO TO NEXT CHARACTER          21487000
         BCT   WE,COCOMMA          SET OPERAND POINTER                  21487500
         AR    WE,R0               FORCE CONTINUOUS FALL THROUGH        21488000
         B     COCOMNXT            GET NEXT CHARACTER                   21488500
COCOMMA  ST    WB,0(0,WD)          SAVE OPERAND                         21489000
         LA    WD,4(0,WD)          POINT TO NEXT AREA                   21489500
         B     COCOMNXT            NEXT CHARACTER                       21490000
         EJECT                                                      R41 21490300
*********************************************************************** 21490400
*                                                                     * 21490500
*        COME HERE WHEN APOSTROPHE SWITCH (R15) IS ON TO MOVE AND     * 21490600
*        UPPER CASE ONLY                                              * 21490700
*                                                                     * 21490800
*        NOTE: TO MOVE WITHOUT UPPER CASING, CHANGE OC TO MVC         * 21490900
*                                                                     * 21491000
*********************************************************************** 21491100
COMVC    OC    0(1,WB),0(WA)       MOVE AND UPPER CASE                  21491200
         AR    WB,R0               ADD TO RECEIVE FIELD POINTER         21491500
         SPACE 2                                                    R41 21491800
*********************************************************************** 21491900
*                                                                     * 21492000
*        CONTINUE EDIT SCAN WITH NEXT CHARACTER (IF ANY)              * 21492100
*                                                                     * 21492200
*********************************************************************** 21492300
COCOMNXT AR    WA,R0               ADD TO SOURCE FIELD POINTER          21492400
         BCT   WC,COCOMLOP         LOOP                                 21492500
         SPACE 2                                                    R41 21492800
*********************************************************************** 21492900
*                                                                     * 21493000
*        COME HERE WHEN ENTIRE COMMAND SCANNED, OR WHEN GLOBAL        * 21493100
*        L=CCA OPERAND HAS BEEN FOUND                                 * 21493200
*                                                                     * 21493300
*********************************************************************** 21493400
COFINMVC ALR   WB,R0               POINT TO NULL LOCATION               21493500
         LTR   R10,R10             DO WE HAVE MULTIPLE COMMANDS         21493600
         BZ    COMCMBF             FREE CMB                             21494000
         CLC   1(2,R10),=C'L='     IS THIS L=                           21494500
         BNE   COMBKIT             BLANK IT IF NOT                      21495000
         MVI   0(R10),C','         SATISFY L=CCA CONVERTER              21495500
         LTR   R1,R1               TEST FOR REQUEUING                   21496000
         BNM   COMCMBF             FREE IF ONLY ONE COMMAND             21496500
         B     COMCMBRQ            REQUEUE CMB                          21497000
COMBKIT  SLR   WB,R10              GET LAST COMMAND LENGTH + 2          21497500
         BCTR  WB,0                GET + 1                              21498000
         BCTR  WB,0                GET LENGTH                           21498500
         EX    WB,COMULBK          BLANK OUT LAST COMMAND               21499000
         LA    WB,1(0,R10)         POINT TO NEW NULL OPERAND            21499500
         SLR   R10,R10             SET GLOBAL L=CCA NOT POSSIBLE        21500000
         SLR   WF,WF               L=CCA NOT PRESENT                 R4 21500500
         EJECT                                                      R41 21500800
*********************************************************************** 21500900
*                                                                     * 21501000
*        COME HERE IF MULTIPLE COMMANDS IN CMB TO REQUEUE             * 21501100
*        ADJUSTED CMB TO WORK QUEUE                                   * 21501200
*                                                                     * 21501300
*********************************************************************** 21501400
COMCMBRQ LPR   R1,R1               MAKE POINTER POSITIVE                21501500
COMCMBR  ST    R1,$COMMQUE         PUT CMB BACK ON LOCAL WORK QUEUE  R4 21509500
*                                  OTHER CMBS STILL BEHIND CMB          21510000
         B     COMSETNL            SET NULL POINTER                     21510500
         SPACE 2                                                    R41 21510800
*********************************************************************** 21510900
*        FREE CMB                                                     * 21511000
*********************************************************************** 21511100
COMCMBF  $FRECMB CMB=(R1),COUNT=YES FREE CMB AND UP COUNT               21511200
         EJECT                                                      R41 21511300
*********************************************************************** 21511400
*                                                                     * 21511500
*        SETUP FOR BXLE WD,WE,... OPERAND SCANS                       * 21511600
*                                                                     * 21511700
*********************************************************************** 21511800
COMSETNL ST    WB,0(0,WD)          SET NULL OPERAND POINTER          R4 21511900
         LA    WE,4                COUNT                                21512500
         SLR   WD,WE               POINT TO LAST VALID OPERAND       R4 21513000
         LR    WF,WD               SET END FOR BXLE                  R4 21513500
         LA    WD,COMPNTER         POINT TO FIRST OPERAND POINTER    R4 21514000
*********************************************************************** 21514500
*                                                                     * 21514600
*        SCAN FOR L=CCA OPERAND IF COMMAND ENTERED LOCALLY            * 21514700
*        AT OS CONSOLE                                                * 21514800
*                                                                     * 21514900
*********************************************************************** 21515000
         TM    COMFLAG,CMBFLAGU    IS THIS UCM                       R4 21515100
         BZ    COMNGLEQ            SKIP ADJUSTMENT IF NOT UCMID         21515500
         LR    R14,WB              SAVE STARTING POINT FOR BLANK OUT    21518500
COMLCCAL LA    R15,3               MAXIMUM CHARACTERS IN CCA            21519000
         BCTR  WB,0                POINT TO                             21519500
         BCTR  WB,0                 LAST SOLID CHARACTER                21520000
         MVC   COMEWORK,COMLPTRN   SET X'F0F00000'                      21520500
         CLI   0(WB),C'A'          IS THIS 'A' +                     R4 21521000
         BL    COMLRSET            RESET IF NOT                      R4 21521500
         CLI   0(WB),C'I'          IS THIS 'A' TO 'I'                R4 21522000
         BNH   COMLSA              SET AREA IF YES                   R4 21522500
         CLI   0(WB),C'J'          IS THIS 'J' +                     R4 21523000
         BL    COMLRSET            RESET IF NOT                      R4 21523500
         CLI   0(WB),C'R'          IS THIS 'J' TO 'R'                R4 21524000
         BNH   COMLSA              SET AREA IF YES                   R4 21524500
         CLI   0(WB),C'S'          IS THIS 'S' +                     R4 21525000
         BL    COMLRSET            RESET IF NOT                      R4 21525500
         CLI   0(WB),C'Z'          IS THIS 'S' TO 'Z'                R4 21526000
         BH    COMLCC              TRY CONSOLE ID                    R4 21526500
COMLSA   MVC   COMLAREA(1),0(WB)   COPY AREA                         R4 21527000
         OI    COMLFLG,COMLFLGA    SET AREA IS SET                   R4 21527500
COMLCCC  BCTR  WB,0                NEXT CHARACTER                       21528000
COMLCC   BCT   R15,COMLC           REDUCE MAX CHARACTERS                21528500
         B     COMLCK              CHECK FOR KEY WORD                   21529000
         EJECT                                                      R41 21529400
COMLC    MVC   COMLLO(1),COMLHI    SHIFT LOW DIGIT                      21529500
         MVI   COMLHI,C'0'         SET HIGH DIGIT                       21530000
         CLI   0(WB),C'0'          IS THIS '0' +                        21530500
         BL    COMLCK              EXIT IF NOT                          21531000
         CLI   0(WB),C'9'          IS THIS '0' TO '9'                   21531500
         BH    COMLCK              EXIT IF NOT                          21532000
         MVC   COMLHI(1),0(WB)     SET HIGH DIGIT                       21532500
         OI    COMLFLG,COMLFLGC    SET CONSOLE FLAG                     21533000
         B     COMLCCC             CHECK CONSOLE DIGIT                  21533500
COMLCK   BCTR  WB,0                POINT TO WHAT SHOULD BE              21534000
         BCTR  WB,0                 ',L='                               21534500
         CLC   COMLCLEQ,0(WB)      CHECK FOR ',L='                      21535000
         BNE   COMLRSET            IF NOT RESET ANY FLAGS               21535500
         PACK  COMDWORK,COMLHI(2)  CONVERT CONSOLE                      21536000
         CVB   R0,COMDWORK          TO BINARY                           21536500
         LTR   R0,R0               CHECK RESULT                         21537000
         BNZ   COMLCKH             CHECK HIGH BOUND                  R4 21537500
         NI    COMLFLG,255-COMLFLGC TURN OFF CONSOLE FLAG            R4 21538000
         OI    COMLFLG,COMLFLGA    SET AREA IS SET                   R4 21538500
         B     COMLSARA            OVERIDE GLOBAL IF THIS LOCAL      R4 21539000
COMLCKH  CH    R0,COMCONNO         CHECK FOR TOO HIGH                R4 21539500
         BH    COMLRSET            IF HIGH RESET FLAGS                  21540000
         STC   R0,COMUCM           SET UCM                           R4 21540500
COMLSARA MVI   COMLCCA+1,0         FORCE GLOBAL OFF                     21541000
COMLBLNK MVI   0(R14),C' '         SET BLANK                            21541500
         BCTR  R14,0                UNTIL                               21542000
         CR    R14,WB               PARAMETER                           21542500
         BNL   COMLBLNK             GONE                                21543000
         LA    WB,1(0,WB)          POINT TO NEW NULL                    21543500
         ST    WB,4(0,WF)          SET NEW NULL OPERAND              R4 21544000
         C     WB,0(0,WF)          SAME AS LAST                      R4 21544500
         BNE   *+6                 SKIP NSI IF NOT                      21545000
         SLR   WF,WE               REDUCE NUMBER OF OPERANDS         R4 21545500
         B     COMNLEQ             SKIP NSI                             21546000
COMLRSET MVC   COMEWORK,COMLPTRN   RESET WITH PATTERN                   21546500
COMNLEQ  LTR   R10,R10             MULTIPLE L=CCA POSSIBLE              21547000
         BZ    COMERGE             MERGE FLAGS IF NOT                   21547500
         MVC   COMLCCA,COMLFLG     SAVE FLAGS AND AREA                  21548000
         SLR   R10,R10             ZERO INDICATOR                       21548500
         B     COMLCCAL            LOOK FOR LOCAL L=CCA                 21549000
COMERGE  OC    COMLFLG(L'COMLCCA),COMLCCA MERGE FLAGS FOR L=CCA         21549500
         MVC   COMUCMA,COMLAREA    SET AREA                          R4 21550000
*********************************************************************** 21550400
*        END OF L=CCA SCAN                                            * 21550500
*********************************************************************** 21550600
COMNGLEQ DS    0H                                                    R4 21550700
         EJECT                                                      R41 21597900
*********************************************************************** 21598000
*                                                                     * 21598100
*        LOCATE COMMAND IN HASP COMMAND TABLE                         * 21598200
*                                                                     * 21598300
*********************************************************************** 21598400
COMLOC   DS    0H                  LOCATE SUBCOMMAND PROCESSOR       R4 21598500
         MVI   COMJRMT,0           ASSUME LOCAL                      R4 21599000
         TM    COMFLAG,CMBFLAGW    THIS WORKSTATION                  R4 21599500
         BZ    COMLOOK             SKIP REMOTE SETTING               R4 21600000
         MVC   COMJRMT,COMRMT      COMPLETE JOB ROUTING FIELD        R4 21600500
COMLOOK  LA    WC,COMFASTR         POINT TO FAST LOOKUP TABLE        R4 21608500
         LA    WA,4                SET INCREMENT FOR TABLE SCAN      R4 21609000
         LA    WB,COMFSTND         SET COMPORAND FOR TABLE SCAN         21609500
         CLC   0(1,WC),COMVERB     CHECK FOR HIT IN TABLE               21610000
         BH    COMBAD              IF TABLE HIGHER -- ERROR             21610500
         BE    *+12                IF EQUAL -- GO GET PROCESSOR         21611000
         BXLE  WC,WA,*-14          ELSE LOOP THROUGH TABLE              21611500
         B     COMBAD              IF NOT FOUND -- ERROR                21612000
         L     WC,0(,WC)           GET MAIN TABLE ADDRESS               21612500
         LA    WC,0(,WC)           CLEAR HIGH-ORDER BYTE                21613000
         LA    WA,COMTEL           SET INCREMENT TABLE LENGTH           21613500
         LA    WB,COMTABE          SET COMPORAND FOR TABLE SCAN         21614000
COMSRL   CLC   COMTVB(1,WC),COMVERB  CHECK FOR VERB IN RANGE            21614500
         BH    COMBAD              HIGHER IS ERROR                      21615000
         CLC   COMTVB+1(1,WC),COMVERB+1 LOOK AT SECOND CHARACTER        21615500
         BE    COMFND              EXIT IF FOUND                        21616000
         CLI   COMTVB+1(WC),X'FF'  IS IT THE LAST ENTRY FOR COMMAND     21616500
         BE    COMFND              EXIT IF FOUND                        21617000
COMSRC   BXLE  WC,WA,COMSRL        LOOP                                 21617500
         EJECT                                                      R41 21617900
*********************************************************************** 21618000
*                                                                     * 21618100
*        COME HERE IF COMMAND NOT IN TABLE                            * 21618200
*                                                                     * 21618300
*********************************************************************** 21618400
COMBAD   TM    COMFLAG,CMBFLAGU    IS THIS UCM                       R4 21618500
         BZ    COMBADA             DISPLAY ERROR IF NOT                 21619000
         BAL   WB,COMVCCA          VERIFY CCA (NO RETURN IF BAD)        21619500
         CLI   COMUCMA,0           MLWTO                             R4 21620000
         BZ    COMBADA             DISPLAY ERROR IF YES                 21620500
         MVI   COMLINET,X'80'      SET CONTROL LINE                  R4 21621000
         $CWTO L=L'COMMAND         DISPLAY COMMAND                      21621500
         MVI   COMLINET,X'20'      SET DATA LINE                     R4 21622000
COMBADA  $CFINVC ,                 RESPOND                              21622500
         SPACE 5                                                    R41 21624900
*********************************************************************** 21625000
*                                                                     * 21625100
*        COMMAND FOUND IN TABLE -- CHECK CONSOLE AUTHORITY            * 21625200
*                                                                     * 21625300
*********************************************************************** 21625400
COMFND   IC    R1,COMTFL(,WC)      PICK UP RESTRICTION BITS             21625500
         N     R1,=A(X'F')         PURIFY                               21626000
         EX    R1,COMTMI           TEST FOR AUTHORIZED CONSOLE          21626500
         BNZ   COMBAD              ANY REJECTION BIT, ERROR EXIT        21627000
         EJECT                                                      R41 21627400
*********************************************************************** 21627500
*                                                                     * 21627600
*        CHECK FOR AUTOMATIC REDIRECTION OF RESPONSES                 * 21627700
*                                                                     * 21627800
*********************************************************************** 21627900
         TM    COMFLAG,CMBFLAGU    IS THIS UCM                       R4 21628000
         BZ    COMGOOD             IF NOT SKIP REDIRECTION              21628500
         TM    COMLFLG,COMLFLGC    CONSOLE SET                       R4 21629500
         BNZ   COMRPT              SKIP AUTOMATIC L=CCA              R4 21631500
         SR    R1,R1               ZERO WORK                            21632000
         IC    R1,COMTFL(0,WC)     PICK UP REDIRECT OFFSET              21632500
         SRA   R1,4                ALIGN TO LOW HEX DIGIT               21633000
         BZ    COMRPT              IF ZERO NO REDIRECTION               21633500
         BCTR  R1,0                REDUCE BY 1                          21634000
         AR    R1,R1               DOUBLE                               21634500
         SR    WA,WA               ZERO WORK                            21635000
         IC    WA,COMUCM           PICK UP CURRENT UCM               R4 21635500
         CH    WA,COMCONNO         CHECK FOR TOO HIGH                   21636000
         BH    COMRPT              FORGET AUTOMATIC IF TOO HIGH      R4 21636500
         L     R14,COMEXTEN        POINT TO EXTENDED AREA               21637000
         USING COMDSECT,R14                                             21637500
         MH    WA,COMLCON          MULTIPLY BY LENGTH DIMENSION         21638000
         AR    R1,WA               COMBINE OFFSETS                      21638500
         LA    R1,COMRESP-COMCONL(R1) POINT TO ELEMENT                  21639000
         MVC   COMUCM,COMCON(R1)   INSERT NEW CONSOLE ID             R4 21639500
         TM    COMLFLG,COMLFLGA    HAS AREA BEEN SET                 R4 21640000
         BO    COMRPT              SKIP AUTOMATIC IF YES             R4 21640500
         MVC   COMUCMA,COMCONA(R1) SET NEW AREA                      R4 21641000
         DROP  R14                                                      21641500
COMRPT   BAL   WB,COMVCCA          VERIFY CCA (NO RETURN IF BAD)        21642000
         CLI   COMUCMA,0           MLWTO                             R4 21642500
         BZ    COMGOOD             SKIP IF NOT MLWTO                 R4 21643000
         MVI   COMLINET,X'80'      SET CONTROL LINE                  R4 21643500
         $CWTO L=L'COMMAND         DISPLAY COMMAND                      21644000
         MVI   COMLINET,X'20'      SET DATA LINE                     R4 21644500
         SPACE 3                                                    R41 21644800
*********************************************************************** 21644900
*                                                                     * 21645000
*        SET UP COMMAND PROCESSOR BASE REGISTER, GET ADDRESS OF       * 21645100
*        COMMAND SUBPROCESSOR ------ GO TO PROCESS COMMAND            * 21645200
*                                                                     * 21645300
*********************************************************************** 21645400
COMGOOD  DS    0H                                                    R4 21645500
         L     BASE3,0(,WC)        POINT TO GROUP PROCESSOR          R4 21645600
         LH    R1,COMTOFF(,WC)     OFFSET WITHIN GROUP TO SUB-PROCESSOR 21646000
         ALR   R1,BASE3            COMPUTE ADDRESS OF SUB-PROCESSOR     21646500
         BR    BASE3               GO TO IT                             21647000
         EJECT                                                      R41 21647300
*********************************************************************** 21647400
*                                                                     * 21647500
*        SUBROUTINE TO VERIFY CONSOLE/AREA                            * 21647600
*                                                                     * 21647700
*********************************************************************** 21647800
COMVCCA  DS    0H                                                    R4 21648000
         L     WA,COMEXTEN         POINT TO EXTENDED WORK AREA       R4 21650500
         USING COMDSECT,WA                                              21651000
         MVC   XASCID(1),COMUCM    SET UCM                           R4 21651500
         MVC   XASDID(1),COMUCMA   SET AREA                          R4 21652000
         CLI   XASDID,0            ZERO AREA                         R4 21652500
         BNZ   SKIP40              SKIP NSI                          R4 21653000
         MVI   XASDID,C'Z'         FORCE AREA Z                      R4 21653500
SKIP40   MVC   XAU(1),COMUCM       TELL OS SOURCE IS SAME AS OUTPUT  R4 21654000
         MVI   XAN,X'22'           SET ID FOR VERIFIER                  21654500
         MODESET EXTKEY=ZERO       GET KEY 0                            21655000
         L     R15,COMVERIF        POINT TO OS VERIFICATION ROUTINE     21655500
         BALR  R14,R15             ENTER IT                             21656000
         MODESET EXTKEY=HASP       GET KEY 1                            21656500
         CH    R15,=H'4'           CHECK FOR SERIOUS ERROR              21657000
         BNHR  WB                  SKIP NEXT IF CONSOLE/AREA OK         21657500
         SLR   R10,R10             ZERO WORK                         R4 21658000
         ICM   R10,3,COMUCM+(COMUCMA-COMUCMA) PICK UP UCMID AND AREA R4 21658500
         MVI   COMUCMA,0           FORCE NO MLWTO (NO PREVIOUS LINE) R4 21659000
         CH    R15,=H'12'          IS CONSOLE DOWN                      21659500
         BNE   *+16                DO NOT SET LOGICAL CONSOLE  @OZ29470 21660000
         MVC   COMFLAG(4),COWTOL   DESTROY APPARENT SOURCE INFO      R4 21660500
         MVC   COMOUT,COWTOL+(COMOUT-COMFLAG) OMITTING CONTROL FIELD R4 21661000
         $CWTO L=L'COMMAND         DISPLAY COMMAND                      21661500
         MVC   COMMAND(COMVINVL),COMVINV MOVE DIAGNOSTIC TEXT           21662000
         STC   R10,COMVINVA        SET AREA                             21662500
         SRL   R10,8               ALIGN CONSOLE ID                     21663000
         $CFCVE VALUE=(R10)        CONVERT TO EBCDIC                    21663500
         MVC   COMVINVC,COMDWORK+3 SET INTO TEXT                        21664000
         MVC   COMMAND+COMVINVL(8),COMACEID MOVE IDENTIFIER             21664500
         $CRET L=COMVINVL+8        EXIT                                 21665000
         DROP  WA                                                       21665500
         EJECT                                                      R41 21665800
*********************************************************************** 21665900
*                                                                     * 21666000
*   C O M M A N D   E D I T   R O U T I N E   C O N S T A N T S       * 21666100
*                                                                     * 21666200
*********************************************************************** 21666300
COMTMI   TM    COMAUTH,*-*         *** EXECUTE ONLY ***              R4 21668000
COWTOL   $WTO  PRI=$HI,CLASS=$ALWAYS,JOB=NO,ROUTE=X'C000',MF=LX      R4 21668500
COMVINV  DC    C'RESPONSE LOCATION L=CCA UNAVAILABLE '                  21669000
COMVINVL EQU   *-COMVINV                                                21669500
COMVINVC EQU   COMMAND+COMVINVL-16,2                                    21670000
COMVINVA EQU   COMVINVC+2,1                                             21670500
COMLPTRN DC    C'00',X'0000'       WORK AREA PATTERN                    21671000
COMLHI   EQU   COMEWORK            HIGH DIGIT OF CONSOLE 'CC'           21671500
COMLLO   EQU   COMEWORK+1          LOW DIGIT OF CONSOLE 'CC'            21672000
COMLFLG  EQU   COMEWORK+2          FLAG BYTE                            21672500
COMLFLGC EQU   2                   CONSOLE HAS BEEN SPECIFIED           21675000
COMLFLGA EQU   4                   AREA HAS BEEN SPECIFIED           R4 21675500
COMLAREA EQU   COMEWORK+3          AREA SPECIFICATION                R4 21676000
COMLCLEQ DC    C',L='              SPECIAL PARAMETER ID                 21676500
COMMIDC  $MSG  000                 RESPONSE MESSAGE ID                  21677000
         SPACE 2                                                        21677500
         USING JQEDSECT,R1         USE R1 TO ADDRESS THE JQE            21678000
         TITLE 'HASP COMMAND PROCESSOR - HASP COMMAND TABLE'            21678500
COMTAB   DS    0F                                                       21679000
COMTBLA  $COMTAB A7D,HASPCJB3,REJECT=COMJ  RELEASE JOB BY NAME          21679500
         $COMTAB AA,HASPCJB1,REJECT=COMR+COMJ RELEASE ALL JOBS       R4 21680000
         $COMTAB AJ,HASPCJB2,REJECT=COMJ RELEASE JOB(S)                 21680500
         $COMTAB AQ,HASPCJB1,REJECT=COMR+COMJ RELEASE XEQ QUEUE      R4 21681000
         $COMTAB AS,HASPCJB2,REJECT=COMJ RELEASE STC(S)                 21681500
         $COMTAB AT,HASPCJB2,REJECT=COMJ RELEASE TSU(S)                 21682000
COMTBLB  $COMTAB B,HASPCDV1,REJECT=COMD    BACKSPACE DEVICE             21682500
COMTBLC  $COMTAB C7D,HASPCJB3,REJECT=COMJ  CANCEL JOB BY NAME           21683000
         $COMTAB CA,HASPCAOC,REJECT=COMR+COMS CANCEL ACES            R4 21683500
         $COMTAB CJ,HASPCJB2,REJECT=COMJ          CANCEL JOB            21684000
         $COMTAB CS,HASPCJB2,REJECT=COMJ CANCEL STC(S)                  21684500
         $COMTAB CT,HASPCJB2,REJECT=COMJ CANCEL TSU(S)                  21685000
         $COMTAB C,HASPCDV1,REJECT=COMD           CANCEL DEVICE ACTVY.  21685500
COMTBLD  $COMTAB D7D,HASPCJB3,REDIR=$D7D DISPLAY JOB BY NAME            21686000
         $COMTAB DA,HASPCJB1,REDIR=$DA  DISPLAY ACTIVE JOBS             21686500
         $COMTAB DF,HASPCJ1A,REDIR=$DF  DISPLAY FORMS QUEUE    @OZ29819 21687000
         $COMTAB DI,HASPCSY1,REDIR=$DI  DISPLAY INITIATOR(S)            21687500
         $COMTAB DJ,HASPCJB2,REDIR=$DJ  DISPLAY JOB                     21688000
         $COMTAB DM,HASPCRM1       DISPLAY MESSAGE                      21688500
         $COMTAB DN,HASPCJB1,REDIR=$DN  DISPLAY INFO. ON Q'D JOBS       21689000
         $COMTAB DO,HASPCMS1,REDIR=$DO  DISPLAY OPERATOR REQUESTS       21689500
         $COMTAB DQ,HASPCJB1,REDIR=$DQ  DISPLAY NUMBER OF Q'D JOBS      21690000
         $COMTAB DS,HASPCJB2,REDIR=$DS DISPLAY STC(S)                   21690500
         $COMTAB DT,HASPCJB2,REDIR=$DT DISPLAY TSU(S)                   21691000
         $COMTAB DU,HASPCMS1,REDIR=$DU  DISPLAY UNITS                   21691500
COMTBLE  $COMTAB E7D,HASPCJB3,REJECT=COMR+COMJ+COMS  RESTART JOB     R4 21692000
         $COMTAB EJ,HASPCJB2,REJECT=COMR+COMJ+COMS RESTART JOB       R4 21692500
         $COMTAB ES,HASPCSY1,REJECT=COMR+COMS RESTART SYSTEM         R4 21693000
         $COMTAB E,HASPCDV1,REJECT=COMD           RESTART DEVICE        21693500
COMTBLF  $COMTAB F,HASPCDV1,REJECT=COMD    FORWARD-SPACE DEVICE         21694000
COMTBLH  $COMTAB H7D,HASPCJB3,REJECT=COMJ  HOLD JOB BY NAME             21698000
         $COMTAB HA,HASPCJB1,REJECT=COMR+COMJ HOLD ALL JOBS          R4 21698500
         $COMTAB HJ,HASPCJB2,REJECT=COMJ          HOLD JOB              21699000
         $COMTAB HQ,HASPCJB1,REJECT=COMR+COMJ HOLD EXECUTION QUEUE   R4 21699500
         $COMTAB HS,HASPCJB2,REJECT=COMJ HOLD STC(S)                    21700000
         $COMTAB HT,HASPCJB2,REJECT=COMJ HOLD TSU(S)                    21700500
COMTBLI  $COMTAB I,HASPCDV1,REJECT=COMD    INTERRUPT DEVICE             21701000
COMTBLL  $COMTAB L7D,HASPCJB3              LIST JOB OUTPUT BY NM        21701500
         $COMTAB LJ,HASPCJB2       LIST A JOB'S OUTPUT                  21702000
         $COMTAB LS,HASPCJB2       LIST A STC'S OUTPUT                  21702500
         $COMTAB LT,HASPCJB2       LIST A STC'S OUTPUT                  21703000
COMTBLN  $COMTAB N,HASPCDV1,REJECT=COMD    REPEAT DEVICE ACTIVITY       21703500
COMTBLO  $COMTAB O7D,HASPCJB3,REJECT=COMJ  OUTPUT BQES BY NAME          21704000
         $COMTAB OJ,HASPCJB4,REJECT=COMJ  OUTPUT JOB'S HELD DS          21704500
         $COMTAB OQ,HASPCJ1A,REJECT=COMR+COMJ OUTPUT BY CLASS        R4 21705000
         $COMTAB OS,HASPCJB4,REJECT=COMJ  OUTPUT STC'S HELD DS          21705500
         $COMTAB OT,HASPCJB4,REJECT=COMJ  OUTPUT TSU'S HELD DS          21706000
COMTBLP  $COMTAB P40,HASPCSY1,REJECT=COMR+COMS STOP SYSTEM           R4 21706500
         $COMTAB P7D,HASPCJB3,REJECT=COMJ  STOP JOB BY NAME          R4 21707000
         $COMTAB PI,HASPCSY1,REJECT=COMR+COMS STOP INITIATOR         R4 21707500
         $COMTAB PJ,HASPCJB2,REJECT=COMJ          STOP JOB              21708000
         $COMTAB PQ,HASPCJ1A,REJECT=COMR+COMJ CANCEL BY OUTPUT CLASS R4 21708500
         $COMTAB PS,HASPCJB2,REJECT=COMJ STOP STC(S)                    21709000
         $COMTAB PT,HASPCJB2,REJECT=COMJ STOP TSU(S)                    21709500
         $COMTAB P,HASPCDV1,REJECT=COMD           STOP (DRAIN) DEVICE   21710000
COMTBLR  $COMTAB R,HASPCRM1,REJECT=COMJ    ROUTE JOB OUTPUT             21710500
COMTBLS  $COMTAB S40,HASPCSY1,REJECT=COMR+COMS START SYSTEM          R4 21711000
         $COMTAB SA,HASPCAOC,REJECT=COMR+COMS START ACES             R4 21711500
         $COMTAB SI,HASPCSY1,REJECT=COMR+COMS START INITIATOR        R4 21712000
         $COMTAB S,HASPCDV1,REJECT=COMD      START DEVICE               21714000
COMTBLT  $COMTAB T7D,HASPCJB3,REJECT=COMR+COMJ SET JOB BY NAME       R4 21714500
         $COMTAB TA,HASPCAOC,REJECT=COMR SET ACE                     R4 21715000
         $COMTAB TC,HASPCSY3,REJECT=COMR SET CONSOLE LIST LEVEL      R4 21715500
         $COMTAB TI,HASPCSY1,REJECT=COMR+COMS SET INITIATOR          R4 21716000
         $COMTAB TJ,HASPCJ3A,REJECT=COMR+COMJ SET JOB NO. CLASS PRIO R4 21716500
         $COMTAB TM,HASPCSY3,REJECT=COMR+COMS SET MESSAGE ROUTING    R4 21717000
         $COMTAB TO,HASPCSY3,REJECT=COMR SET OS CONSOLE              R4 21719000
         $COMTAB TS,HASPCJ3A,REJECT=COMR+COMJ SET STC NO.            R4 21719500
         $COMTAB TT,HASPCJ3A,REJECT=COMR+COMJ SET TSU NO.            R4 21720000
         $COMTAB T,HASPCDV1,REJECT=COMD  SET DEVICE                     21720500
COMTBLV  $COMTAB VS,HASPCSY1,REJECT=COMR+COMS SEND COMMAND TO VS     R4 21721000
COMTBLZ  $COMTAB ZA,HASPCAOC,REJECT=COMR+COMS HALT ACES              R4 21721500
         $COMTAB ZI,HASPCSY1,REJECT=COMR+COMS HALT INITIATOR         R4 21722000
COMTBLZZ $COMTAB Z,HASPCDV1,REJECT=COMD  HALT DEVICE                    21722500
COMTABE  EQU   COMTBLZZ                                                 21723000
         EJECT                                                          21723500
COMFASTR DS    0F                  FAST LOOK-UP TABLE FOR HASPCOMM      21724000
         DC    C'A',AL3(COMTBLA)   ENTRY FOR 'A' VERBS                  21724500
         DC    C'B',AL3(COMTBLB)   ENTRY FOR 'B' VERBS                  21725000
         DC    C'C',AL3(COMTBLC)   ENTRY FOR 'C' VERBS                  21725500
         DC    C'D',AL3(COMTBLD)   ENTRY FOR 'D' VERBS                  21726000
         DC    C'E',AL3(COMTBLE)   ENTRY FOR 'E' VERBS                  21726500
         DC    C'F',AL3(COMTBLF)   ENTRY FOR 'F' VERBS                  21727000
         DC    C'H',AL3(COMTBLH)   ENTRY FOR 'H' VERBS                  21729000
         DC    C'I',AL3(COMTBLI)   ENTRY FOR 'I' VERBS                  21729500
         DC    C'L',AL3(COMTBLL)   ENTRY FOR 'L' VERBS                  21730000
         DC    C'N',AL3(COMTBLN)   ENTRY FOR 'N' VERBS                  21730500
         DC    C'O',AL3(COMTBLO)   ENTRY FOR 'O' VERBS                  21731000
         DC    C'P',AL3(COMTBLP)   ENTRY FOR 'P' VERBS                  21731500
         DC    C'R',AL3(COMTBLR)   ENTRY FOR 'R' VERBS                  21732000
         DC    C'S',AL3(COMTBLS)   ENTRY FOR 'S' VERBS                  21732500
         DC    C'T',AL3(COMTBLT)   ENTRY FOR 'T' VERBS                  21733000
         DC    C'V',AL3(COMTBLV)   ENTRY FOR 'V' VERBS                  21733500
COMFSTND DC    C'Z',AL3(COMTBLZ)   ENTRY FOR 'Z' VERBS                  21734000
         EJECT                                                          21734500
*                                                                       21735000
*        SYMBOLS TO DEFINE COMMAND TABLE ELEMENT FIELDS                 21735500
*                                                                       21736000
COMTEL   EQU   8                   LENGTH OF EACH COMTAB ELEMENT        21736500
COMTOFF  EQU   COMTEL-4            LOCATION OF ENTRY OFFSET             21737000
COMTFL   EQU   COMTEL-8            LOCATION OF FLAGS WITHIN ELEMENT     21737500
COMTVB   EQU   COMTEL-2            LOCATION OF VERB WITHIN GROUP        21738000
COMR     EQU   CMBFLAGR            LEVEL OF RESTRICTION FOR REMOTES  R4 21738500
COMS     EQU   DCTREJSY            REJECT UNLESS SYSTEM AUTHORIZATION   21739000
COMD     EQU   DCTREJDV            REJECT UNLESS DEVICE AUTHORIZATION   21739500
COMJ     EQU   DCTREJJB            REJECT UNLESS JOB AUTHORIZATION      21740000
COMJDS   EQU   COMJ+COMD+COMS      COMBINATION                          21740500
         SPACE 2                                                        21741000
         LTORG ,                                                        21741500
 TITLE 'HASP COMMAND PROCESSOR KNOWN COMMANDS'                          21742000
*********************************************************************** 21742500
*                                                                     * 21743000
*        COMMAND SUB-PROCESSOR CONVENTIONS                            * 21743500
*                                                                     * 21744000
* CONTENTS OF REGISTERS UPON ENTRY TO EACH COMMAND SUB-PROCESSOR      * 21744500
*                                                                     * 21745000
*        R0    = UNPREDICTABLE                                        * 21745500
*        R1    = SUB-PROCESSOR ENTRY POINT                            * 21746000
*        WA    = UNPREDICTABLE                                        * 21746500
*        WB    = UNPREDICTABLE                                        * 21747000
*        WC    = UNPREDICTABLE                                        * 21747500
*        WD    = FIRST OPERAND POINTER                                * 21748000
*        WE    = COUNT OF 4                                           * 21748500
*        WF    = LAST OPERAND POINTER ( SET FOR BXLE WD,WE,... )      * 21749000
*        WG    = BASE FOR COMMAND SUB-PROCESSOR                       * 21749500
*        BASE1 = HCTDSECT                                             * 21750000
*        BASE2 = BEGINNING OF MAIN COMMAND PROCESSOR                  * 21750500
*        SAVE  = PCE OF COMMAND PROCESSOR                             * 21751000
*        LINK  = UNPREDICTABLE                                        * 21751500
*        R15   = UNPREDICTABLE                                        * 21752000
*                                                                     * 21752500
* EXAMPLE EDIT OF COMMAND TEXT BEFORE ENTRY TO SUB-COMMAND PROCESSOR  * 21753000
*                                                                     * 21753500
* ORIGIONAL IN $WTO BUFFER  ( S OVER CHARACTER = LOWER CASE )         * 21754000
*                                                                     * 21754500
*         S  S S S    S S S    S    S    S                            * 21755000
*        $V  A B C, ' A B,C '' D ', D '' E                            * 21755500
*                                                                     * 21756000
* FORM PASSED TO COMMAND SUB-PROCESSOR                                * 21756500
*                                                                     * 21757000
*                                                                     * 21757500
*        $VABC,' A B,C ' D ',D'E                                      * 21758000
*          1   2             3   4                                    * 21758500
*                                                                     * 21759000
*        $ IS LOCATED AT COMMAND                                      * 21759500
*                                                                     * 21760000
*        V IS SINGLE CHARACTER FORM OF VERB                           * 21760500
*                                                                     * 21761000
*        WD POINTS TO FIRST OF OPERAND POINTER TABLE WHICH, IN THIS   * 21761500
*        EXAMPLE, CONTAINS FOUR WORDS OF ADDRESSES WHICH IN TURN      * 21762000
*        LOCATES THE BEGINNING OF EACH OPERAND ( INCLUDING A NULL     * 21762500
*        END OPERAND ). THESE LOCATIONS ARE DENOTED BY REFERANCE      * 21763000
*        POINTS 1, 2, 3, AND 4 RESPECTIVELY. USING BXLE WD,WE,...     * 21763500
*        INSTRUCTION WILL FALL THROUGH WITH WD POINTING TO COMNULOP   * 21764000
*                                                                     * 21764500
*********************************************************************** 21765000
 TITLE 'HASP COMMAND PROCESSOR HASPCJB1 - JOB QUEUE COMMANDS'           21765500
HASPCJB1 $COMGRUP AA,AQ,DA,DN,DQ,HA,HQ  JOB QUEUE COMMANDS     @OZ29819 21766000
*********************************************************************** 21766500
*                                                                     * 21767000
*        $A A -- RELEASE ALL JOBS IN JOB QUEUE HELD BY $H A           * 21767500
*        $H A -- HOLD ALL JOB(S) IN THE JOB QUEUE                     * 21768000
*                                                                     * 21768500
*        OPERANDS                                                     * 21769000
*        SID...SID = JOB(S) BELONGING TO INDICATED SYSTEMS ARE TO     * 21769500
*              BE HELD/RELEASED                                       * 21770000
*        ALL   = ALL JOB(S) ARE TO HELD/RELEASED                      * 21770500
*        NO OPERAND ONLY JOBS WITH AFFINITY TO ENETRING SYSTEM ARE    * 21771000
*              TO BE HELD/RELEASED                                    * 21771500
*                                                                     * 21772000
*                                                                     * 21772500
*********************************************************************** 21773000
CAA      DS    0H                  RELEASE ALL JOBS IN QUEUE            21773500
CHA      DS    0H                  HOLD ALL JOBS IN THE QUEUE           21774000
         MVI   COMNULOP,0          SET NO SID AFFINITY                  21774500
CAASCAN  BXH   WD,WE,CAAEND        SCAN FOR SID OPERNADS                21775000
         L     R1,0(,WD)           POINT TO 1ST OPERAND                 21775500
         CLC   0(3,R1),=C'ALL'     CHECK FOR WHOLE QUEUE OPERATION      21776000
         BNE   *+14                NO--LOOK FOR SPECIFIC SID            21776500
         MVC   COMNULOP(L'QUESYSAF),=AL1(QUESYSAF) YES FLAG 'ALL'       21777000
         B     CAAEND              EXIT OPERAND SCAN LOOP               21777500
         L     R14,$QSE1           NO -- POINT TO ALL QSES           R4 21778000
         SH    R14,$QSEL           BACK UP ONE QSE                   R4 21778500
         USING QSEDSECT,R14        ADDRESSABILITY                       21779000
CAASILOP AH    R14,$QSEL           POINT TO NEXT QSE                 R4 21779500
         CLC   QSESID,0(R1)        DOES SID MATCH OPERAND            R4 21780000
         BE    CAASIFND            YES--FLAG SID FOUND                  21780500
         TM    QSEFLAGS,QSELAST    NO--SCAN ALL SID'S                   21781000
         BZ    CAASILOP            BR IF NOT LAST QSE                R4 21781500
        $CFINVO OPERAND=(R1)       IF NOT FOUND, INVALID OPRAND     R41 21782000
CAASIFND DS    0H                  SID MATCHES OPERAND                  21782500
         MVC   COMNULOP(L'QSESIAFF),QSESIAFF SET AFFINITY FLAG          21783000
         DROP  R14                 DROP QSE ADDRESSABILITY              21783500
CAAEND   DS    0H                  END OF OPERAND SCAN                  21784000
         CLI   COMNULOP,0          TEST FOR ANY SID'S FOUND             21784500
         BNE   CAAOPXIT            YES--DON'T SET DEFAULT AFF FLAG      21785000
         MVC   COMNULOP(L'$SIDAFF),$SIDAFF NO--SET DEFAULT AFF FLAG     21785500
CAAOPXIT DS    0H                  EXIT OPERAND FUNCTION                21786000
         SPACE 2                                                        21786500
         $QSUSE  ,                 ENQUEUE ON SHARED RESOURCE           21787000
         SPACE 1                                                        21787500
         $CFJSCAN PROCESS=CAAPRO,EMPTY=CAANONE,NEXT=CAANXT,            C21788000
               IGNORE=CAAIGN       SCAN JOB QUEUE                       21788500
         $POST $HASPECF,(JOB,JOT)  POST FOR JOB AND JOT                 21795000
         OI    $AQSE,QSEPJOB+QSEPJOT   CAUSE X SYSTEM POST(S)           21795500
         $CRET MSG=OK              AND RETURN                           21796000
CAANONE  DS    0H                  NO JOBS FOUND                        21796500
         CLI   COMVERB,C'H'        TEST FOR HOLD OPERATION           R4 21797000
         MVC   COMMAND(12),=C'NO JOBS HELD' ASSUME TXT FOR NONE HELD R4 21797500
         BNE   CAAREL              NO--RELEASE OPERATION                21798000
         LA    R0,12               SET DEFAULT MESSAGE LENGTH           21798500
         B     CHAAMSG             SEND DIAGNOSTIC                      21799000
CAAREL   DS    0H                  RELEASE OPERATION                    21799500
         MVC   COMMAND+8(8),=C'RELEASED'  SET 'RELEASED'                21800000
         LA    R0,16               SET MESSAGE LENGTH                   21800500
CHAAMSG  DS    0H                  SEND DIAGNOSTIC                      21801000
         $CRET L=(R0)              DITTO                                21801500
CAAPRO   DS    0H                  JOB--FOUND EXAMINE SUCH              21802000
         IC    R15,COMNULOP        GET SYS AFFINITY BITS                21802500
         EX    R15,CHATEST         TEST FOR DESIRED AFFINITY            21803000
         BZ    CAAIGN              NO--IGNORE THIS ENTRY                21803500
         CLI   COMVERB,C'A'        IS THIS A RELEASE OPERATION          21804000
         BE    CARREL              YES--TEST FOR SAME                   21804500
         OI    JQEFLAGS,QUEHOLDA   NO--HOLD JOB WITH 'ALL' OPERAND      21805000
         B     CAACKPT             AND CHECKPOINT CHANGED JOB           21805500
CARREL   DS    0H                  RELEASE JOB                          21806000
         TM    JQEFLAGS,QUEHOLDA   IS JOB HELD BY 'ALL'                 21806500
         BZ    CAAIGN              NO--IGNORE IT                        21807000
         TM    JQEFLAGS,QUEHOLD1   IS JOB HELD BY $HJ COMMAND           21807500
         BO    CAAIGN              YES--IGNORE THIS ONE                 21808000
         NI    JQEFLAGS,255-QUEHOLDA  ELSE RESET HOLD 'ALL' BIT         21808500
CAACKPT  DS    0H                  CHECKPOINT CHANGED ELEMENT           21809000
         $QCKPT (R1)               DO IT                                21809500
         B     CAANXT              GET NEXT JOB                         21810000
CHATEST  TM    JQEFLAG2,*-*        **** EXECUTE ONLY ****               21810500
         EJECT                                                          21811000
*********************************************************************** 21811500
*                                                                     * 21812000
*        $A Q,CLASSES -- RELEASE EXECUTION QUEUE                      * 21812500
*                                                                     * 21813000
*********************************************************************** 21813500
CAQ      DS    0H                                                       21814000
*********************************************************************** 21814500
*                                                                     * 21815000
*        $H Q,CLASSES -- HOLD EXECUTION QUEUE                         * 21815500
*                                                                     * 21816000
*********************************************************************** 21816500
CHQ      NULL                      RTN TO 'HOLD', 'RELEASE' A CLAS      21817000
         L     WA,$CATABLE         POINT TO THE HEAD OF THE CAT         21817500
         LR    WB,WA               SAVE THE POINTER FOR LATER USE       21818000
         BXLE  WD,WE,CHQLIST       CHECK FOR CLASS LIST SPECIFIED       21818500
         LA    WA,CATEND-CATDSECT(,WA) POINT TO 1ST CLASS               21819000
         LA    R0,C'9'-C'A'+1      SET NUMBER OF CLASSES TO SCAN        21819500
CHQL     BAL   LINK,CHQSET         SET 'HOLD' OR 'RELEASE'              21820000
         LA    WA,CATEND-CATDSECT(,WA) POINT TO NEXT CAT ELEM           21820500
         B     CHQL                LOOP THROUGH CAT(HEAD TO TAIL)       21821000
         SPACE 1                                                        21821500
CHQLIST  NULL                      COME HERE TO HANDLE LIST             21822000
         L     R1,0(,WD)           POINT TO BEGINNING OF OPERAND        21822500
         L     R15,4(,WD)          POINT TO END OF OPERAND              21823000
         BCTR  R15,0               REDUCE BY                            21823500
         BCTR  R15,0               TWO FOR MACHINE LENGTH               21824000
         SR    R15,R1              COMPUTE OPERAND MACHINE LENGTH       21824500
         BM    CHQINVO             IF NEGATIVE,  ERROR                  21825000
         LR    R0,R1               SAVE R1 OVER 'TRT'                   21825500
         L     WA,=A(CVALIDTB)     POINT TO TEST TABLE               R4 21826000
         EX    R15,CHQTEST         TEST CLASS STRING                    21826500
         LR    R1,R0               RESTORE R1                           21827000
         BNZ   CHQINVO             INVALID CHARACTERS  ERROR            21827500
         LA    R0,1(,R15)          GET LENGTH OF STRING AGAIN           21828000
CHQLL    SLR   WA,WA               CLEAR WORK REGISTER                  21828500
         IC    WA,0(,R1)           INSERT CLASS INTO WORK               21829000
CHQC     SL    WA,=A(X'C0')        GET ORDINAL PLACE IN CAT             21829500
         SLL   WA,5                FIND CARDINAL PLACE IN CAT           21830000
         ALR   WA,WB               ADD $CATABLE BASE                    21830500
         TM    CATJOBFL-CATDSECT(WA),CATVALID TEST FOR VALID CLASS      21831000
         BZ    CHQINVO             INVALID CLASS--ERROR                 21831500
         BAL   LINK,CHQSET         GO SET 'HOLD' OR 'RELEASE'           21832000
         LA    R1,1(,R1)           POINT TO NEXT CLASS IN STRING        21832500
         B     CHQLL               LOOP THROUGH ENTIRE OPERAND          21833000
CHQTEST  TRT   0(*-*,R1),0(WA)     *** EXECUTE ONLY ***              R4 21833500
CHQSET   NULL                      COME HERE TO SET THE 'CAT'           21834000
         CLI   COMVERB,C'H'        IS THIS A HOLD OPERATION             21834500
         BE    CHQH                YES-HOLD CAT(NOT BY TAIL)            21835000
         NI    CATJBOPT-CATDSECT(WA),255-CATQHELD FREE THE CAT          21835500
         $POST $HASPECF,JOB        POST INITS' IF WAITING               21836000
CHQA     BCTR  R0,LINK             RETURN IF CLASSES NOT EXHAUSTED      21836500
*                                  CLASSES EXHAUSTED--GO BACK           21837000
*                                  AND RESET TSU AND STC CLASSES        21837500
*                                  THAT WERE SET BY ALL TYPE            21838000
         SPACE 1                                                        21838500
         NI    CATJBOPT-CATDSECT+(CATSTCCL-X'C0')*(CATEND-CATDSECT)(WB)C21839000
               ,255-CATQHELD       RESET 'STC'                          21839500
         NI    CATJBOPT-CATDSECT+(CATTSUCL-X'C0')*(CATEND-CATDSECT)(WB)C21840000
               ,255-CATQHELD       RESET 'TSU'                          21840500
         $CRET MSG=OK              RETURN WITH 'OK' MSG                 21841000
         SPACE 2                                                        21841500
CHQH     OI    CATJBOPT-CATDSECT(WA),CATQHELD SET 'HOLD' BIT 'ON'       21842000
         B     CHQA                RETURN TO MAJOR LOOP                 21842500
         SPACE 1                                                        21843000
CHQINVO  $CFINVO OPERAND=(R1)      INVALID OPERAND--ERROR EXIT          21843500
         EJECT                                                          21844000
*********************************************************************** 21844500
*                                                                     * 21845000
*        $D A,SID...SID, OR ALL/XEQ/DEV/JOB/STC/TSU                   * 21845500
*        DISPLAY ACTIVE JOB(S)                                        * 21846000
*                                                                     * 21846500
*        SID...SID = ACTIVE JOBS ON THE SPECIFIED SYSTEM(S)           * 21847000
*        ALL   = ACTIVE JOB(S) ON ALL SYSTEM(S)                       * 21847500
*        XEQ   = DISPLAY JOBS IN EXECUTION                            * 21848000
*        DEV   = DISPLAY JOBS ON DEVICES                              * 21848500
*        JOB   = DISPLAY NORMAL JOBS                                  * 21849000
*        STC   = DISPLAY SYSTEM TASK CONTROL JOBS                     * 21849500
*        TSU   = DISPLAY TIME SHARING USER JOBS                       * 21850000
*                                                                     * 21850500
*********************************************************************** 21851000
CDA      DS    0H                                                       21851500
         MVI   COMPNTER+COFOPT-COFOPT,0 ZERO OPTION FLAGS            R4 21852000
         MVI   COMPNTER+COFAFF-COFOPT,0 ZERO AFFINITY FLAGS          R4 21852500
CDAC     BXLE  WD,WE,CDAFIL        FILL OUT OPTIONS IF MORE OPERANDS    21853000
         MVC   COFOPT(L'COFOPT+L'COFAFF),COMPNTER SET OPTIONS        R4 21853500
         CLI   COFOPT,0            ANYTHING SPECIFIED                R4 21854000
         BNZ   SKIP50              SKIP IF YES                       R4 21854500
         MVI   COFOPT,COFD+COFX+COFN SET NORMAL JOB AS DEFAULT       R4 21855000
SKIP50   TM    COFOPT,COFD+COFX    XEQ OR DEV                        R4 21855500
         BNZ   SKIP60              TEST TO FORCE JOB TYPE            R4 21856000
         OI    COFOPT,COFD+COFX    FORCE BOTH                        R4 21856500
SKIP60   TM    COFOPT,COFJ         JOB STC TSU                       R4 21857000
         BNZ   CDAFFSET            SET AFFINITIES IF NOT             R4 21857500
         OI    COFOPT,COFJ         FORCE JOB STC TSU                 R4 21858000
CDAFFSET DS    0H                  TEST FOR AFFINITY SETTING            21858500
         CLI   COFAFF,0            TEST FOR ANY AFFINITY OPERANDS       21859000
         BNE   *+10                YES--SKIP SETTING OF DEFAULT         21859500
         MVC   COFAFF,$SIDAFF      SET DEFAULT ACTIVE SYSTEM            21860000
         LA    R1,CDAQLIST-1       QUEUE LIST - 1              @OZ29819 21860050
         ST    R1,CDAQTYPE         SAVE FOR QUEUE SCAN         @OZ29819 21860100
         TM    COFOPT,COFS         DISPLAY STARTED TASKS...    @OZ29819 21860200
         BZ    *+12                BR IF NO                    @OZ29819 21860300
         MVI   1(R1),CATSTCCL-X'80' ELSE SET STC QUEUE         @OZ29819 21860350
         LA    R1,1(,R1)             AND UPDATE QUEUE POINTER  @OZ29819 21860400
         TM    COFOPT,COFT         DISPLAY TSO LOGONS...       @OZ29819 21860450
         BZ    *+12                BR IF NO                    @OZ29819 21860500
         MVI   1(R1),CATTSUCL-X'80' ELSE SET TSU QUEUE         @OZ29819 21860550
         LA    R1,1(,R1)             AND UPDATE QUEUE POINTER  @OZ29819 21860600
         TM    COFOPT,COFN         DISPLAY BATCH JOBS...       @OZ29819 21860650
         BZ    *+14                BR IF NO                    @OZ29819 21860700
         MVC   1(36,R1),CDQTYPEA    ELSE SET NORMAL JOB CLASSES@OZ29819 21860750
         LA    R1,36(,R1)            AND UPDATE QUEUE POINTER  @OZ29819 21860800
         TM    COFOPT,COFD         DISPLAY JOBS ON DEVICES...  @OZ29819 21860900
         BZ    *+14                BR IF NO                    @OZ29819 21860950
         MVC   1(3,R1),=AL1($INPUT,$OUTPUT,$HARDCPY) DEV QUEUES@OZ29819 21861000
         LA    R1,3(,R1)           UPDATE QUEUE POINTER        @OZ29819 21861050
         MVI   1(R1),255           SET END OF QUEUES INDICATOR @OZ29819 21861100
         SLR   WE,WE               CLEAR 'JOB FOUND' INDICATOR @OZ29819 21861150
         SPACE 1                                               @OZ29819 21861200
CDALOOPA L     R1,CDAQTYPE         INCREMENT                   @OZ29819 21861250
         LA    R1,1(,R1)            POINTER TO                 @OZ29819 21861300
         ST    R1,CDAQTYPE           JOB QUEUE TYPE            @OZ29819 21861350
         CLI   0(R1),255           ALL QUEUES PROCESSED...     @OZ29819 21861400
         BE    CDAEND              BR IF YES                   @OZ29819 21861450
         SLR   R15,R15             CLEAR FOR INSERT            @OZ29819 21861500
         IC    R15,0(,R1)          GET NEXT QUEUE TYPE         @OZ29819 21861550
        $CFJSCAN PROCESS=CDAPRO,NEXT=CDANXT,QUEUE=(R15)        @OZ29819 21861600
         B     CDALOOPA            BR TO PROCESS NEXT QUEUE    @OZ29819 21861700
         SPACE 1                                               @OZ29819 21861750
CDAEND   LTR   WE,WE               ANY JOBS DISPLAYED...       @OZ29819 21861800
         BZ    CDANONE             BR IF NO                    @OZ29819 21861850
        $CRET  ,                    ELSE EXIT                  @OZ29819 21861900
CDANONE  $CRET MSG='NO ACTIVE JOBS' EXIT WITH DIAGNOSTIC                21862000
CDAPRO   DS    0H                  CHECK JOB FOR SID ACTIVITY           21862500
         LR    WD,R1               SAVE R1 OVER DISPLAY                 21863000
         $CFJMSG OPT=SET,AFF=SET   DISPLAY JOB                          21863500
         B     CDAJOK              +0 -- JOB DISPLAYED                  21864000
         LR    R1,WD               +4 -- JOB NOT ACTIVE                 21864500
         B     CDANXT              BR TO GET NEXT JOB          @OZ29819 21865000
CDAJOK   L     R1,CDAQTYPE         GET ADDRESS OF QUEUE TYPE   @OZ29819 21865500
         SLR   R15,R15             CLEAR FOR INSERT            @OZ29819 21865600
         IC    R15,0(,R1)          GET QUEUE TYPE              @OZ29819 21865700
        $CFJSCAN PROCESS=CDACK,NEXT=CDACKNXT,QUEUE=(R15)       @OZ29819 21866000
         $CRET MSG='LIST INCOMPLETE' EXIT WITH ERROR                    21866500
CDACK    CR    R1,WD               SAME JQE                             21867000
         BNE   CDACKNXT            LOOP IF NOT SAME JOB                 21867500
         LR    WE,R1               INDICATE JOB DISPLAYED      @OZ29819 21868000
*              THIS LINE DELETED BY APAR NUMBER                @OZ29819 21868500
         B     CDANXT              CONTINUE DISPLAYING JOBS             21869000
         SPACE 3                                                        21869500
*********************************************************************** 21870000
*                                                                     * 21870500
*        LOOK AT LIMITING OPERANDS                                    * 21871000
*                                                                     * 21871500
*********************************************************************** 21872000
CDAFIL   DS    0H                  SCAN OPERANDS                        21872500
         LM    R1,WA,0(WD)         PICK-UP OPERANDS                     21873000
         SLR   WA,R1               COMPUTE                              21873500
         BCTR  WA,0                ACTUAL OPERAND LENGTH                21874000
         CH    WA,=H'4'            CHECK WITH SID LENGTH                21874500
         BNE   CDACKALL            NO--MAYBE FOR ALL SID'S              21875000
         L     R14,$QSE1           POINT TO 1ST QSE                  R4 21875500
         SH    R14,$QSEL           BACK UP ONE QSE                   R4 21876000
         USING QSEDSECT,R14        ADDRESSABILITY                       21876500
CDAQLOOP AH    R14,$QSEL           POINT TO NEXT QSE                 R4 21877000
         CLC   QSESID,0(R1)        DOES OPERAND MATCH SID            R4 21877500
         BE    CDAQFND             YES--FLAG AS SUCH                    21878000
         TM    QSEFLAGS,QSELAST    NO--LOOP THROUGH ALL SIDS         R4 21878500
         BZ    CDAQLOOP            LOOKING FOR SID MATCH                21879000
         B     CDAINVO             NOT FOUND -- ERROR                   21879500
CDAQFND  DS    0H                  SID MATCHED OPERAND                  21880000
         OC    COFAFF-COFOPT+COMPNTER,QSESIAFF SET AFFINITY          R4 21880500
         B     CDAC                LOOK FOR MORE OPERANDS               21881000
CDACKALL DS    0H                  NOT A SPECIFIC SID -- 'ALL'          21881500
         CLC   0(3,R1),=C'ALL'     WAS IT ALL SIDS                      21882000
         BNE   *+12                NO--SCAN OTHER OPERANDS              21882500
         MVI   COFAFF-COFOPT+COMPNTER,X'7F' SET FOR ALL SYSTEMS      R4 21883000
         B     CDAC                AND CONTINUE EXAMING OPERANDS        21883500
         DROP  R14                 DISESTABLISH-ADDRESSABILITY          21884000
         LA    WA,COFN             SET FOR BATCH JOBS                   21884500
         CLI   0(R1),C'J'          TEST FOR SAME                        21885000
         BE    CDASET              YES--FLAG REQUEST                    21885500
         LA    WA,COFS             SET FOR SYSTEM TASKS                 21886000
         CLI   0(R1),C'S'          TEST FOR SAME                        21886500
         BE    CDASET              YES--FLAG REQUEST                    21887000
         LA    WA,COFT             SET FOR TIME SHARING USERS           21887500
         CLI   0(R1),C'T'          TEST FOR SAME                        21888000
         BE    CDASET              YES--FLAG REQUEST                    21888500
         LA    WA,COFD             SET REQUEST FOR DEVICE(S)            21889000
         CLI   0(R1),C'D'          TEST FOR SAME                        21889500
         BE    CDASET              YES--FLAG REQUEST                    21890000
         LA    WA,COFX             SET REQUEST FOR JOB IN EXECUTION     21890500
         CLI   0(R1),C'X'          TEST FOR SAME                        21891000
         BE    CDASET                                                   21891500
CDAINVO  $CFINVO OPERAND=(R1)      TELL OPERATOR ABOUT INVO OPERAND     21892000
CDASET   EX    WA,CDAOI            TURN BIT ON                          21892500
         B     CDAC                LOOP                                 21893000
CDAOI    OI    COFOPT-COFOPT+COMPNTER,*-*  *** EXECUTE ONLY ***      R4 21893500
         SPACE 1                                               @OZ29819 21893600
CDAQTYPE EQU   COMPNTER,4          POINTER TO JOB QUEUE TYPE   @OZ29819 21893700
CDAQLIST EQU   CDAQTYPE+4,40       QUEUES TO BE PROCESSED      @OZ29819 21893800
         EJECT                                                          21894000
*********************************************************************** 21894500
*                                                                     * 21895000
*        $D N -- DISPLAY INFORMATION ON QUEUED JOBS                   * 21895500
*                                                                     * 21896000
*********************************************************************** 21896500
CDN      LA    WC,CDNCTR           SET TO LIST EACH JOB                 21897000
         MVI   CDNFLAG,CDNFLGN     INDICATE $DN                @OZ29819 21897100
         B     CDQBREAK            ENTER COMMON CODE WITH $D Q          21897500
         EJECT                                                          21898000
*********************************************************************** 21898500
*                                                                     * 21899000
*        $D Q -- DISPLAY JOB QUEUE                                    * 21899500
*                                                                     * 21900000
*********************************************************************** 21900500
CDQ      LA    WC,CDQCTR           SET TO COUNT EACH JOB                21901000
         MVI   CDNFLAG,0           RESET ALL FLAGS             @OZ29819 21901100
*********************************************************************** 21901500
*                                                                     * 21902000
*        FORMAT OF OPERANDS                                           * 21902500
*                                                                     * 21903000
*        SID/ALL/ANY/IND - OPERAND TWO                                * 21903500
*              JOBS WITH AFFINITY TO SYSTEM (SID) (DEFAULT=OWN)       * 21904000
*              JOBS WITH AFFINITY TO SYS 1,2,... (ALL)                * 21904500
*              JOBS WITH AFFINITY TO ANY SYSTEM (ANY)                 * 21905000
*        ALL   = ALL JOB(S) REGARDLESS OF THE SYSTEM AFFINITY         * 21905500
*        ANY   = JOB(S) WITH AFFINITY TO 'ANY' SYSTEM                 * 21906000
*              IND JOBS FOR OWN SYSTEM IN INDEPENDENT MODE            * 21906500
*        IND   - THIRD OPERAND QUALIFIES SID/ALL/ANY OF OPERAND TWO   * 21907000
*        R=DEST1-DEST2 - JOBS WITH ROUTE CODES WITHIN RANGES          * 21907500
*        Q=XEQ/XEQ CLASS/OUT/PPU/HOLD - QUEUE TYPE                    * 21909500
*                                                                     * 21910500
*********************************************************************** 21911000
*        BREAK OUT OPERANDS                                           * 21911500
         SPACE 1                                                        21912000
CDQBREAK DS    0H                  BREAK-OUT OPERANDS                   21912500
                                   PRINT OFF - SECTION DELETED @OZ29819 21913000
*              THIS LINE DELETED BY APAR NUMBER                @OZ29819 21913500
*              THIS LINE DELETED BY APAR NUMBER                @OZ29819 21914000
                                   PRINT ON -- SECTION DELETED @OZ29819 21914500
         TM    COMAUTH,CMBFLAGR    IS CONSOLE REMOTE RESTRICTED     R41 21915000
         BO    CDQRTD              YES--GET DEFAULT ROUTE RANGE     R41 21915500
         MVC   CDQDEFR,CDQRALLD    INCLUDE ALL ROUTE CODES     @OZ29819 21919500
         B     CDQLOCAL            SKIP REMOTE                       R4 21920000
CDQRTD   BAL   LINK,COFRTD         GET DEFAULT ROUTE RANGES IN R1,R0 R4 21920500
         STH   R0,CDQRBNDH         SET HIGH BOUND                    R4 21921000
         STH   R1,CDQRBNDL         SET LOW BOUND                     R4 21921500
CDQLOCAL MVC   CDQSIDLO,$SIDAFF    ASSUME OUR SYSTEM                 R4 21922000
         MVC   CDQSIDHI,$SIDAFF    AS DEFAULT                        R4 21922500
         MVC   CDQSE,CDQS          MOVE IN SCAN PARAMETER DEFAULTS   R4 21923000
         BXH   WD,WE,CDQXITT       SET DEFAULT SCAN ELEMENTS IF NULL R4 21923500
         L     R1,0(,WD)           POINT TO OPERAND                  R4 21924000
         CLI   1(R1),C'='          THIS EQUAL                        R4 21924500
         BE    CDQROUT             TRY ROUTE RANGE IF YES            R4 21925000
         CLC   0(3,R1),=C'ANY'     TEST FOR AFFINITY REQ OF 'ANY'       21925500
         BNE   CDQSIDMO            NO-LOOK FOR 'ALL' OR SPECIFIC AFF    21926000
         MVI   CDQSIDLO,QUESYSAF   SET AFFINITY TO ANY               R4 21926500
         MVI   CDQSIDHI,QUESYSAF   HIGH SAME AS LOW                  R4 21927000
         B     CDQSIDND            AND EXIT AFFINITY SCAN               21927500
CDQSIDMO CLC   0(3,R1),=C'ALL'     THIS ALL                          R4 21928000
         BNE   CDQSIDLK            LOOK FOR SID                      R4 21928500
         MVI   CDQSIDLO,1          SET MASK FOR FIRST QSE            R4 21929000
         LH    R14,$QSENO          GET NUMBER OF QSES                R4 21929500
         IC    R14,CDQQSEAF(R14)   PICK UP AFFINITY OF HIGH QSE      R4 21930000
         STC   R14,CDQSIDHI        SET HIGH QSE MASK                 R4 21930500
         OI    CDNFLAG,CDNALL      SET ALL SPECIFIED                 R4 21931000
         B     CDQSIDND            EXIT AFFINITY SCAN                R4 21931500
CDQSIDLK CLC   0(3,R1),=C'IND'     THIS IND                          R4 21932000
         BE    CDQIND              SET IND IF YES                    R4 21932500
         L     R14,$QSE1           POINT TO 1ST QSE                  R4 21933000
         SH    R14,$QSEL           BACK UP ONE QSE                   R4 21933500
         USING QSEDSECT,R14        QSE ADDRESSABILITY                   21934000
CDQSIDLL AH    R14,$QSEL           POINT TO NEXT QSE                 R4 21934500
         CLC   QSESID,0(R1)        FOUND QSE                         R4 21935000
         BE    CDQSIDFD            YES--FILL IN END AFFINITY            21935500
CDQSIDLP TM    QSEFLAGS,QSELAST    TEST FOR LAST ELEMENT                21936000
         BZ    CDQSIDLL            AND LOOP THROUGH ALL ELEMENTS        21936500
CDQINVOA L     R1,0(,WD)           POINT TO ERROR OPERAND            R4 21937000
CDQINVO  $CFINVO OPERAND=(R1)      ERROR EXIT                        R4 21937500
CDQSIDFD MVC   CDQSIDLO,QSESIAFF   SET AFFINITY                      R4 21938000
         MVC   CDQSIDHI,QSESIAFF   SET ENDING AFFINITY                  21938500
         DROP  R14                 DROP QSE ADDRESSABILITY              21939000
CDQSIDND BXH   WD,WE,CDQXITT       SET DEFAULT SCAN ELEMENT IF NULL  R4 21939500
         L     R1,0(,WD)           POINT TO OPERAND                  R4 21940000
         CLI   1(R1),C'='          THIS EQUAL                        R4 21940500
         BE    CDQROUT             TRY ROUTE RANGE IF YES            R4 21941000
         CLC   0(3,R1),=C'IND'     THIS IND                          R4 21941500
         BNE   CDQINVO             ERROR IF NOT                      R4 21942000
CDQIND   OI    CDNFLAG,CDNIND      SET INDEPENDENT MODE              R4 21942500
         OI    CDQSIDLO,QUEINDAF   SET LOW BOUND IND                 R4 21943000
         OI    CDQSIDHI,QUEINDAF   SET HIGH BOUND IND                R4 21943500
CDQNXTOP BXH   WD,WE,CDQXITT       LOOK FOR MORE                     R4 21944000
         L     R1,0(,WD)           POINT TO OPERAND                  R4 21944500
         CLI   1(R1),C'='          THIS EQUAL                        R4 21945000
         BNE   CDQINVO             ERROR IF NOT                      R4 21945500
CDQROUT  CLI   0(R1),C'R'          THIS ROUTE CODE                   R4 21946000
         BNE   CDQTYPE             TRY TYPE IF NOT                   R4 21946500
         TM    CDNFLAG,CDNROUT     ROUTE ALREADY BEEN SPECIFIED      R4 21947000
         BO    CDQINVO             ERROR IF YES                      R4 21947500
         OI    CDNFLAG,CDNROUT     SET ROUTE SPECIFIED               R4 21948000
         BAL   LINK,COFRTRA        CONVERT DESTINATION               R4 21948500
         B     CDQINVOA            ERROR IF BAD             + 0      R4 21949000
         STH   R1,CDQRBNDL         SET LOW ROUT CODE        + 4      R4 21949500
         STH   R0,CDQRBNDH         SET HIGH ROUTING CODE                21950000
         B     CDQNXTOP            DO NEXT OPERAND                   R4 21950500
CDQTYPE  CLI   0(R1),C'Q'          THIS QUEUE TYPE                   R4 21951000
         BNE   CDQINVO             ERROR IF NOT                      R4 21951500
         TM    CDNFLAG,CDNTYPE     ALREADY SPECIFIED                 R4 21952000
         BO    CDQINVO             ERROR IF YES                      R4 21952500
         OI    CDNFLAG,CDNTYPE     SET SPECIFIED                     R4 21953000
         CLC   2(3,R1),=C'XEQ'     EXECUTION QUEUE                   R4 21966500
         BNE   CDQOUTT             IF NOT TEST OUT                      21967000
         CLI   5(R1),C' '          ALL QUEUES...               @OZ29819 21967500
         BE    CDQENDS             BR IF YES                   @OZ29819 21968000
         CLI   5(R1),C','          ALL QUEUES...               @OZ29819 21968500
         BE    CDQENDS             BR IF YES                   @OZ29819 21969000
         LA    R15,CDQTYPEC        ASSUME CONVERSION QUEUE     @OZ29819 21969500
         CLI   5(R1),C'*'          IF CONVERSION QUEUE,        @OZ29819 21970000
         BE    CDQXCLS              BR TO TEST NEXT OPERAND    @OZ29819 21970500
         LA    R15,CDQTYPE$        ASSUME STC QUEUE            @OZ29819 21971000
         CLI   5(R1),CATSTCID      IF                          @OZ29819 21971500
         BE    CDQXCLS              STC                        @OZ29819 21972000
         CLC   5(3,R1),=C'STC'       QUEUE,                    @OZ29819 21972500
         BE    CDQXCLS                BR TO TEST NEXT OPERAND  @OZ29819 21973000
         LA    R15,CDQTYPE@        ASSUME TSU QUEUE            @OZ29819 21973500
         CLI   5(R1),CATTSUID      IF                          @OZ29819 21974000
         BE    CDQXCLS              TSU                        @OZ29819 21974500
         CLC   5(3,R1),=C'TSU'       QUEUE,                    @OZ29819 21975000
         BE    CDQXCLS                BR TO TEST NEXT OPERAND  @OZ29819 21975500
         MVC   COMDWORK(1),5(R1)   MOVE QUEUE TYPE TO WORK     @OZ29819 21976000
         NI    COMDWORK,QUECLASS   CONVERT TO INTERNAL FORMAT  @OZ29819 21976500
         LA    R15,CDQTYPEA        SET TO SCAN FOR JOB CLASS   @OZ29819 21977000
         LA    R0,36               MAX VALID CLASSES (A-Z, 0-9)@OZ29819 21977500
         SPACE 1                                               @OZ29819 21978000
CDQNXTCL CLC   0(1,R15),COMDWORK   THIS THE ONE...             @OZ29819 21978500
         BE    CDQXCLS             BR IF YES                   @OZ29819 21979000
         LA    R15,1(,R15)         POINT TO NEXT CLASS         @OZ29819 21979500
         BCT   R0,CDQNXTCL          ELSE LOOP                  @OZ29819 21979600
         B     CDQINVOA            NO SUCH CLASS (ERROR)       @OZ29819 21979700
         SPACE 1                                               @OZ29819 21979800
CDQXCLS  STCM  R15,7,CDQTYPLO      SET QUEUE RANGE             @OZ29819 21979900
         STCM  R15,7,CDQTYPHI       TO SPECIFIED QUEUE         @OZ29819 21980000
         B     CDQENDS             GO TO SET END                        21980500
CDQOUTT  CLC   2(3,R1),=C'OUT'     IS IT OUTPUT                      R4 21981000
         BNE   CDQPPUTT            IF NOT CHK FOR PR/PU                 21981500
         MVC   CDQSEE,CDQOUTD      MOVE OUT ELEMENT FIRST      @OZ29819 21982000
         B     CDQENDS             EXIT OPERAND SCAN ROUTINE            21982500
CDQPPUTT DS    0H                  CHECK FOR PRINT/PUCH QUEUEING        21983000
         CLC   2(3,R1),=C'PPU'     IS IT PRINT/PUNCH                 R4 21983500
         BNE   CDQHLDT             NO--CHECK FOR 'HOLD'              R4 21984000
         MVC   CDQSEE,CDQPPUD      MOVE PPU ELEMENT FIRST      @OZ29819 21984500
         B     CDQENDS             EXIT OPERAND SCAN ROUTINE            21985000
CDQHLDT  CLC   2(4,R1),=C'HOLD'    IS IT HOLD STATUS                 R4 21985500
         BNE   CDQINVO             ERROR IF NOT HOLD                 R4 21986000
         MVC   CDQSEE,CDQHLDD      MOVE HOLD ELEMENT FIRST     @OZ29819 21986500
CDQENDS  MVC   CDQSECDD,CDQENDD    MOVE END ELEMENT TO SECOND PLACE     21987000
         B     CDQNXTOP            DO NEXT OPERAND                   R4 21987500
         SPACE 1                                               @OZ29819 21988000
*              THIS LINE DELETED BY APAR NUMBER                @OZ29819 21988500
*              THIS LINE DELETED BY APAR NUMBER                @OZ29819 21989000
*              THIS LINE DELETED BY APAR NUMBER                @OZ29819 21989500
         SPACE 1                                               @OZ29819 21990000
* SET UP FOR JOB QUEUE SCAN                                             21990500
CDQXITT  SLR   R10,R10             ZERO QUEUE SCAN HOLD COUNT  @OZ29819 21991000
         MVC   CDQSESAV,CDQSEE     SAVE SEARCH ELEMENTS FOR NXT SID     21991500
         MVI   COMMAND+4,C' '      SET BLANK FOR $DQ MESSAGE            21992000
         CLC   CDQSIDLO,CDQSIDHI   TST FOR ELMNTION OF PPU ELEM         21992500
         BE    *+10                NO--LEAVE PPU ELEMENT                21993000
         MVC   CDQSEE+CDQPPUD-CDQS(2),CDQENDD  OMIT PPU        @OZ29819 21993500
CDQLOOP  DS    0H                  LOOP THROUGH ALL ELEMENTS            21996500
         LH    WF,CDQSEE           POINT TO CURRENT SEARCH ELEMENT      21996600
         CH    WF,CDQENDD          TEST FOR LAST ELEMENT                21996700
         BE    CDQSIDM             YES--CHK FOR MORE SID'S TO DO        21996800
         CH    WF,CDQOUTD          THIS OUTPUT QUEUE                 R4 21996900
         BE    SKIP110             SKIP NEXT IF YES                  R4 21997000
         CH    WF,CDQPPUD          THIS PRINT/PUNCH QUEUE            R4 21997100
         BNE   CDQLOOPB            SKIP NEXT IF NOT                  R4 21997500
SKIP110  MVC   CDQSHI(4),CDQDEFR   FORCE ROUTE RANGE                 R4 21998000
CDQLOOPB SLR   WE,WE               ZERO $DQ COUNTER                  R4 21998500
*              THIS LINE DELETED BY APAR NUMBER                @OZ29819 21999000
         LH    WB,CDQSHI           SET FIRST ROUTE CODE                 21999500
         EJECT                                                          22000000
*********************************************************************** 22000500
*                                                                     * 22001000
*        SCAN THE JOB QUEUE                                           * 22001500
*                                                                     * 22002000
*********************************************************************** 22002500
CDQLOOPA ICM   R1,7,CDQTYPLO       GET ADDRESS OF QUEUE TYPE   @OZ29819 22003000
         SLR   R15,R15             CLEAR FOR INSERT            @OZ29819 22003100
         IC    R15,0(,R1)          GET QUEUE TYPE              @OZ29819 22003200
        $CFJSCAN PROCESS=4(WF,BASE3),NEXT=CDQNXT,QUEUE=(R15)   @OZ29819 22003300
         LTR   R0,WE               TEST COUNT FOR ZERO                  22003500
         BZ    CDQNRES             SKIP DISPLAY IF ZERO                 22004000
         $CFCVE ,                  CONVERT TO PRINTABLE                 22004500
         MVC   COMMAND(4),COMDWORK+1 SET NUMBER OF HITS                 22005000
         B     0(WF,BASE3)         ENTER DISPLAY PREPARATION            22005500
CDQRES   $CWTO L=(R0)              RESPOND                              22006000
         SPACE 1                                               @OZ29819 22006500
         SPACE 1                                               @OZ29819 22007000
CDQNRES  TM    CDNFLAG,CDNRSCAN    QUEUE RE-SCAN REQUIRED...   @OZ29819 22007500
         BZ    CDQNEXT             BR IF NO                    @OZ29819 22008000
         NI    CDNFLAG,255-CDNRSCAN  RESET RE-SCAN FLAG        @OZ29819 22008500
         STH   WB,CDQSLO           SET NEW RANGE LOW           @OZ29819 22009000
         B     CDQLOOPB             AND BR TO RE-SCAN QUEUE    @OZ29819 22009500
         SPACE 1                                               @OZ29819 22010000
CDQNEXT  ICM   R1,7,CDQTYPLO       GET ADDR OF CURRENT QUEUE   @OZ29819 22010500
         CLM   R1,7,CDQTYPHI       LAST QUEUE FOR THIS TYPE... @OZ29819 22011000
         BNL   CDQINCR             BR IF YES                   @OZ29819 22011500
         LA    R1,1(,R1)           INCREMENT QUEUE ADDRESS     @OZ29819 22012000
         STCM  R1,7,CDQTYPLO        AND SAVE                   @OZ29819 22012500
         B     CDQLOOPB            THEN BR TO SCAN NEXT QUEUE  @OZ29819 22013000
         SPACE 1                                               @OZ29819 22013500
CDQINCR  MVC   CDQSEE(L'CDQSE-L'CDQSEE),CDQSECDD SHIFT NEXT IN          22014000
         B     CDQLOOP             LOOP                                 22014500
         EJECT                                                 @OZ29819 22014600
CDQSIDM  TM    CDNFLAG,CDNFLGN     $DN...                      @OZ29819 22014700
         BO    CDQSIDN             BR IF YES                   @OZ29819 22014800
         LTR   R0,R10              ANY JOBS HELD THIS SYSTEM...@OZ29819 22015000
         BZ    CDQSIDN             BR IF NO                    @OZ29819 22015200
        $CFCVE ,                   CONVERT TO PRINTABLE        @OZ29819 22015300
         MVC   COMMAND(4),COMDWORK+1  SET NUMBER OF HITS       @OZ29819 22015400
         SLR   R10,R10             CLEAR JOB HOLD COUNT        @OZ29819 22015500
         B     CDQHLDE             ENTER HOLD DISPLAY ROUTINE  @OZ29819 22015600
         SPACE 1                                               @OZ29819 22015700
CDQSIDN  CLC   CDQSIDLO,CDQSIDHI   CHECK FOR END OF SCAN       @OZ29819 22015800
         BNL   CDQEND              IF NO MORE -- EXIT                   22016000
         SLR   WE,WE               ZERO INSERT REGISTER                 22016500
         ICM   WE,8,CDQSIDLO       PICK-UP CURRENT SYSTEM ID            22017000
         ALR   WE,WE               SHIFT LEFT ONE SYS ID                22017500
         STCM  WE,8,CDQSIDLO       SAVE NEW SYSTEM ID                   22018000
         BC    12,*+8              BRANCH IF NOT IND SCAN               22018500
         OI    CDQSIDLO,QUEINDAF   ELSE FLAG IND SCAN                   22019000
         MVC   CDQSE,CDQSESAV      RESTORE SEARCH ELEMENTS              22019500
         CLC   CDQSIDLO,CDQSIDHI   TST FOR ELMNTION OF PPU ELEM         22020000
         BE    CDQLOOP             NO--LEAVE ELEM FOR LAST SID          22020500
         MVC   CDQSEE+CDQPPUD-CDQS(2),CDQENDD  OMIT PPU        @OZ29819 22021000
         B     CDQLOOP             AND CONTINUE ELEMENT SCANS           22021500
         EJECT                                                          22022000
*********************************************************************** 22022500
*                                                                     * 22023000
*        EXAMINE JOB QUEUE ELEMENT                                    * 22023500
*                                                                     * 22024000
*********************************************************************** 22024500
                                   PRINT OFF - SECTION DELETED @OZ29819 22025000
*              THIS LINE DELETED BY APAR NUMBER                @OZ29819 22025500
*              THIS LINE DELETED BY APAR NUMBER                @OZ29819 22026000
*              THIS LINE DELETED BY APAR NUMBER                @OZ29819 22026500
*              THIS LINE DELETED BY APAR NUMBER                @OZ29819 22027000
*              THIS LINE DELETED BY APAR NUMBER                @OZ29819 22027500
*              THIS LINE DELETED BY APAR NUMBER                @OZ29819 22028000
*              THIS LINE DELETED BY APAR NUMBER                @OZ29819 22028500
*              THIS LINE DELETED BY APAR NUMBER                @OZ29819 22029000
*              THIS LINE DELETED BY APAR NUMBER                @OZ29819 22029500
*              THIS LINE DELETED BY APAR NUMBER                @OZ29819 22030000
*              THIS LINE DELETED BY APAR NUMBER                @OZ29819 22030500
*              THIS LINE DELETED BY APAR NUMBER                @OZ29819 22031000
*              THIS LINE DELETED BY APAR NUMBER                @OZ29819 22031500
*              THIS LINE DELETED BY APAR NUMBER                @OZ29819 22032000
*              THIS LINE DELETED BY APAR NUMBER                @OZ29819 22032500
*              THIS LINE DELETED BY APAR NUMBER                @OZ29819 22033000
*              THIS LINE DELETED BY APAR NUMBER                @OZ29819 22033500
*              THIS LINE DELETED BY APAR NUMBER                @OZ29819 22034000
*              THIS LINE DELETED BY APAR NUMBER                @OZ29819 22034500
*              THIS LINE DELETED BY APAR NUMBER                @OZ29819 22035000
*              THIS LINE DELETED BY APAR NUMBER                @OZ29819 22035500
                                   PRINT ON -- SECTION DELETED @OZ29819 22036000
         SPACE 1                                                        22036500
* REQUEST FOR 'XEQ' QUEUE                                               22037000
         SPACE 1                                                        22037500
CDQXEQ   B     CDQXEQE             ENTER $DQ MESSAGE PREPARATION        22038000
         BAL   R14,CDQCKRTE        CHECK ROUTE CODES                    22038500
         TM    JQEFLAGS,QUEBUSY    TEST FOR ACTIVE                      22039000
         BNZ   CDQNXT              YES--GET NEXT JOB                    22039500
         BAL   R14,CDQCKSID        CHECK FOR PROPER AFFINITY            22040000
         BR    WC                  ENTER $DN OR $DQ ROUTINE    @OZ29819 22040500
                                   PRINT OFF - SECTION DELETED @OZ29819 22041000
*              THIS LINE DELETED BY APAR NUMBER                @OZ29819 22041500
*              THIS LINE DELETED BY APAR NUMBER                @OZ29819 22041600
*              THIS LINE DELETED BY APAR NUMBER                @OZ29819 22041700
*              THIS LINE DELETED BY APAR NUMBER                @OZ29819 22042000
*              THIS LINE DELETED BY APAR NUMBER                @OZ29819 22042500
*              THIS LINE DELETED BY APAR NUMBER                @OZ29819 22043000
*              THIS LINE DELETED BY APAR NUMBER                @OZ29819 22043500
*              THIS LINE DELETED BY APAR NUMBER                @OZ29819 22044000
*              THIS LINE DELETED BY APAR NUMBER                @OZ29819 22044500
*              THIS LINE DELETED BY APAR NUMBER                @OZ29819 22045000
*              THIS LINE DELETED BY APAR NUMBER                @OZ29819 22045500
                                   PRINT ON -- SECTION DELETED @OZ29819 22046000
         SPACE 1                                                        22046500
CDQXEQE  DS    0H                  DISPLAY QUEUED FOR EXECUTION         22047000
         MVC   COMMAND+5(6),=CL6'XEQ *' SET MESSAGE BODY                22047500
         LA    R1,COMMAND+11-COMMAND PT TO END OF MESSAGE               22048000
         ICM   R15,7,CDQTYPLO      GET ADDR OF QUEUE TYPE      @OZ29819 22048100
         CLI   0(R15),$XEQ         CONVERSION QUEUE...         @OZ29819 22048200
         BE    CDQSYSNM            BR IF YES                   @OZ29819 22048300
         MVC   COMMAND+9(1),0(R15) MOVE QUEUE TYPE TO MSG      @OZ29819 22048500
         OI    COMMAND+9,X'80'     MAKE CLASS PRINTABLE                 22049000
         CLC   CDQSIDLO,$SIDAFF    CHECK FOR POSSIBLE USE OF CAT        22049500
         BNE   CDQNOCAT            NO--DIFFERENT MACHINE                22050000
         SLR   R14,R14             ZERO INSERT REGISTER                 22050500
         IC    R14,0(,R15)         PICK UP CLASS               @OZ29819 22051000
         SL    R14,=A(X'40')       LESS OFFSET INTO CAT                 22051500
         SLL   R14,5               TIMES CAT SIZE                       22052000
         AL    R14,$CATABLE        PLUS BEGINNING ADDRESS IS ELEMENT    22052500
         USING CATDSECT,R14        CAT ADDRESSABILITY                   22053000
         TM    CATJBOPT,CATQHELD   TEST FOR CLASS HELD ($HQ)            22053500
         BZ    CDQNOCAT            NO--EXIT CAT SCAN                    22054000
         MVC   COMMAND+11(5),=CL5'HOLD' YES--FILL IN 'HOLD'             22054500
         LA    R1,COMMAND+16-COMMAND PT TO END OF MESSAGE               22055000
         B     CDQSYSNM            AND GO FILL IN SYSTEM NAME           22055500
         DROP  R14                 DROP QSE ADDRESSABILITY              22056000
CDQNOCAT DS    0H                  CAT NOT APPLICABLE                   22056500
         CLI   COMMAND+9,CATSTCCL  TEST FOR SYSTEM TASK                 22057000
         BNE   CDQNOSTC            NO--TRY FOR LOGON                    22057500
         MVC   COMMAND+9(6),CDQTSKID SET STC DESIGNATION                22058000
         LA    R1,COMMAND+15-COMMAND PT TO END OF MESSAGE               22058500
         B     CDQSYSNM            GO FILL IN SYSTEM NAME               22059000
CDQNOSTC DS    0H                  TRY FOR LOGON                        22059500
         CLI   COMMAND+9,CATTSUCL  TEST FOR TSU                         22060000
         BNE   CDQSYSNM            NO--FIL-IN SYSTEM NAME               22060500
         MVC   COMMAND+9(6),CDQLOGID SET LOGON DESIGNATION              22061000
         LA    R1,COMMAND+15-COMMAND PT TO END OF MESSAGE               22061500
CDQSYSNM DS    0H                  FILL-IN SYSTEM NAME FOR AFFINITY     22062000
         LA    R1,COMMAND(R1)      PT TO END OF MESSAGE                 22062500
         BAL   WA,CDQSIDNM         PICK-UP NAME                         22063000
         MVC   0(L'QSESID,R1),0(R15)  FILL-IN NAME                      22063500
         LA    R0,L'QSESID(,R1)    PT TO END OF MESSAGE                 22064000
         TM    CDNFLAG,CDNIND      TEST FOR 'IND' REQUEST               22064500
         BZ    *+14                NO--SKIP NEXT INSTRUCTIONS           22065000
         MVC   L'QSESID(4,R1),=C' IND' SET 'IND' MODE IN MSG            22065500
         LA    R0,L'QSESID+4(,R1)  SET END OF MESSAGE                   22066000
         LA    R1,COMMAND          PT OT BEGINNING OF MESSAGE           22066500
         SLR   R0,R1               COMPUTE MESSAGE LENGTH               22067000
         B     CDQRES              AND REPLY TO OPERATOR                22067500
         EJECT                                                          22082500
         SPACE 1                                                        22083000
*        REQUEST FOR 'PPU' QUEUE                                        22083500
CDQPPU   DS    0H                  SCAN JOBS IN HARDCPY QUEUE           22084000
         B     CDQPPUE             DISPLAY AT END OF JOBS               22084500
         CLI   JQETYPE,$HARDCPY    JOB IN HARDCPY...           @OZ29819 22085000
         BE    CDQCOMMN            BR IF YES                   @OZ29819 22085500
         TM    JQEFLAGS,QUEBUSY    JOB BUSY IN OUTPUT...       @OZ29819 22086000
         BZ    CDQNXT              BR IF NO TO GET NEXT JOB    @OZ29819 22086500
         B     CDQCOMMN             ELSE TREAT AS IN HARDCPY   @OZ29819 22087000
                                   PRINT OFF - SECTION DELETED @OZ29819 22087500
*              THIS LINE DELETED BY APAR NUMBER                @OZ29819 22088000
*              THIS LINE DELETED BY APAR NUMBER                @OZ29819 22088500
*              THIS LINE DELETED BY APAR NUMBER                @OZ29819 22089000
*              THIS LINE DELETED BY APAR NUMBER                @OZ29819 22089500
*              THIS LINE DELETED BY APAR NUMBER                @OZ29819 22090000
                                   PRINT ON -- SECTION DELETED @OZ29819 22090500
         SPACE 2                                                        22091000
*        REQUEST FOR 'OUT' QUEUE                                        22091500
CDQOUT   DS    0H                  CHECK FOR JOBS AWAITING OUTPUT       22092000
         B     CDQOUTE             DISPALY AT END OF JOBS               22092500
*              THIS LINE DELETED BY APAR NUMBER                @OZ29819 22093000
*              THIS LINE DELETED BY APAR NUMBER                @OZ29819 22093500
         BAL   R14,CDQCKSID        TEST FOR CORRECT SID                 22094000
         TM    JQEFLAGS,QUEBUSY    TEST FOR ACTIVE                      22094500
         BNZ   CDQNXT              YES--GET NEXT ELEMENT                22095000
         SPACE 1                                               @OZ29819 22095500
CDQCOMMN DS    0H                                                       22096000
*              THIS LINE DELETED BY APAR NUMBER                @OZ29819 22096500
         CLC   JQEPRTRT,JQEPUNRT   FIND LOWER ROUTE CODE                22097000
         BH    CDQPUNL             CHECK PUNCH TOO LOW IF LOWER         22097500
* PRINT ROUTE IS LOW ( OR EQUAL )                                       22098000
         CLC   JQEPRTRT,CDQSLO     IS IT LOWER THAN CURRENT LOW         22098500
         BL    CDQPUNC             IT DEPENDS ON PUNCH IF LOW           22099000
         BER   WC                  ENTER $DN OR $DQ IF HIT     @OZ29819 22099500
CDQPRT   CH    WB,JQEPRTRT         IS IT HIGHER THAN HIGH BOUND         22100000
         BL    CDQNXT              LOOP IF YES                          22100500
*              THIS LINE DELETED BY APAR NUMBER                @OZ29819 22101000
         LH    WB,JQEPRTRT         SET NEW HIGH BOUND                   22101500
         B     CDQHIT              FORCE QUEUE RE-SCAN         @OZ29819 22102000
CDQPUNC  CLC   JQEPUNRT,CDQSLO     IS PUNCH LOW ALSO                    22102500
         BL    CDQNXT              LOOP IF YES                          22103000
         BER   WC                  ENTER $DN OR $DQ IF HIT     @OZ29819 22103500
         B     CDQPUN              TEST AGAINST UPPER BOUND             22104000
* PUNCH ROUTE IS LOW                                                    22104500
CDQPUNL  CLC   JQEPUNRT,CDQSLO     IS IT LOWER THAN CURRENT LOW         22105000
         BL    CDQPRTC             IT DEPENDS ON PRINT IF LOW           22105500
         BER   WC                  ENTER $DN OR $DQ IF HIT     @OZ29819 22106000
CDQPUN   CH    WB,JQEPUNRT         IS IT HIGHER THAN HIGH BOUND         22106500
         BL    CDQNXT              LOOP IF YES                          22107000
*              THIS LINE DELETED BY APAR NUMBER                @OZ29819 22107500
         LH    WB,JQEPUNRT         SET NEW HIGH BOUND                   22108000
         B     CDQHIT              FORCE QUEUE RE-SCAN         @OZ29819 22108500
CDQPRTC  CLC   JQEPRTRT,CDQSLO     IS PRINT LOW ALSO                    22109000
         BL    CDQNXT              LOOP IF YES                          22109500
         BER   WC                  ENTER $DN OR $DQ IF HIT     @OZ29819 22110000
         B     CDQPRT              TEST AGAINST UPPER BOUND             22110500
         SPACE 1                                               @OZ29819 22111000
CDQHIT   DS    0H                  ANOTHER PASS REQUIRED       @OZ29819 22111500
         OI    CDNFLAG,CDNRSCAN    FORCE CURRENT QUEUE RE-SCAN @OZ29819 22112000
         B     CDQNXT              BR TO GET NEXT JOB          @OZ29819 22112500
         SPACE 1                                                        22113000
CDQPPUE  DS    0H                  DISPLAY QUEUED FOR PRT/PUN           22113500
         MVC   COMMAND+5(3),=C'PPU' SET IDENTIFIER                   R4 22114000
         LA    R15,CDQSLO          POINT TO ROUTE FIELD              R4 22114500
         LA    R0,COMMAND+8        POINT TO RECEIVE AREA             R4 22115000
         BAL   LINK,COFRTC         CONVERT TO PRINTABLE              R4 22115500
         MVC   COMMAND+8+10(3),=CL4'ANY' SET ANY                     R4 22116000
         LA    R0,COMMAND+18+3-COMMAND SET LENGTH                    R4 22116500
         B     CDQRES              AND REPLY TO OPERATOR                22117000
         SPACE 2                                                        22117500
CDQOUTE  DS    0H                  DISPLAY QUEUED FOR OUTPUT            22118000
         MVC   COMMAND+5(4),=CL4'OUT' SET MESSAGE                       22118500
         BAL   WA,CDQSIDNM         PICK-UP SYSTEM NAME                  22119000
         MVC   COMMAND+9(L'QSESID),0(R15) SET SYSTEM NAME IN MSG        22119500
         LA    R0,COMMAND+9+L'QSESID-COMMAND SET MESSAGE LENGTH         22120000
         TM    CDNFLAG,CDNIND      TEST FOR 'IND' REQUEST               22120500
         BZ    CDQRES              NO--REPLY TO OPERATOR                22121000
         MVC   COMMAND+9+L'QSESID(4),=C' IND' SET 'IND' MODE IN MSG     22121500
         LA    R0,COMMAND+13+L'QSESID-COMMAND SET MESSAGE LENGTH        22122000
         B     CDQRES              AND REPLY TO OPERATOR                22122500
         EJECT                                                          22123000
* REQUEST FOR 'HOLD' QUEUE                                              22123500
         SPACE 1                                                        22124000
CDQHLD   B     CDQHLDE             ENTER $DQ MESSAGE PREPARATION        22124500
         TM    JQEFLAGS,QUEHOLDA+QUEHOLD1+QUEHOLD2 ANY HOLD             22125000
         BZ    CDQNXT              LOOP                                 22125500
         TM    JQEFLAGS,QUEBUSY    TEST FOR BUSY                        22126000
         BNZ   CDQNXT              YES--GET NEXT JOB                    22126500
         BAL   R14,CDQCKSID        CHECK FOR PROPER AFFINITY            22127000
         BAL   R14,CDQCKRTE        CHECK ROUTE CODES                    22127500
         BR    WC                  GO TO FUNCTION ROUTINE               22128000
         SPACE 1                                                        22128500
CDQHLDE  DS    0H                  DISPLAY HOLD COUNT                   22129000
         MVC   COMMAND+5(5),=CL5'HOLD' SET QUEUE TYPE IN MSG            22129500
         BAL   WA,CDQSIDNM         PICK-UP SYSTEM NAME                  22130000
         MVC   COMMAND+10(L'QSESID),0(R15) SET NAME IN MSG              22130500
         LA    R0,COMMAND+10+L'QSESID-COMMAND COMPUTE MSG LENGTH        22131000
         TM    CDNFLAG,CDNIND      TEST FOR 'IND' REQUEST               22131500
         BZ    *+14                BR IF NO                    @OZ29819 22132000
         MVC   COMMAND+10+L'QSESID(4),=C' IND' SET MESSAGE              22132500
         LA    R0,COMMAND+14+L'QSESID-COMMAND SET MSG LENGTH            22133000
        $CWTO  L=(R0)              ISSUE REPLY TO OPERATOR     @OZ29819 22133500
         B     CDQSIDN             BR TO TEST FOR END OF SCAN  @OZ29819 22133600
         SPACE 1                                                        22134000
* END OF QUEUE SCAN                                                     22134500
         SPACE 1                                                        22135000
CDQEND   B     *+4                 DUMMY MESSAGE PREPARATION            22135500
         L     R15,$SSVT           POINT TO SSVT                        22136000
         L     R1,$SVTGALC-SSVT(,R15) GET TRACK GROUPS ALLOCATED        22136500
         M     R0,=F'100'          ALLOW FOR PERCENTAGE                 22137000
         D     R0,$SVTGTOT-SSVT(,R15) DIVIDE BY TOTAL                   22137500
         $CFCVE VALUE=(R1)         CONVERT TO PRINTABLE                 22138000
         MVC   COMMAND(3),COMDWORK+2 PLACE IN MESSAGE AREA              22138500
         MVC   COMMAND+3(26),=C' PERCENT SPOOL UTILIZATION'             22139000
         $CRET L=29                RETURN WITH LAST MESSAGE             22139500
         SPACE 1                                                        22140000
* ROUTE CODE RANGE CHECK ROUTINE                                        22140500
         SPACE 1                                                        22141000
CDQCKRTE CLC   JQEPRTRT,CDQRBNDL   CHECK PRINT AGAINST LOW BOUND        22141500
         BL    CDQCKRTU            TRY PUNCH IF PRINT TOO LOW           22142000
         CLC   JQEPRTRT,CDQRBNDH   CHECK PRINT AGAINST HIGH BOUND       22142500
         BNHR  R14                 RETURN IF OK                         22143000
CDQCKRTU CLC   JQEPUNRT,CDQRBNDL   CHECK AGAINST LOW BOUND              22143500
         BL    CDQNXT              LOOP                                 22144000
         CLC   JQEPUNRT,CDQRBNDH   CHECK PUNCH AGAINST HIGH BOUND       22144500
         BNHR  R14                 RETURN IF 'OK'                       22145000
         B     CDQNXT              ELSE GET NEXT JQE ELEMENT            22145500
         SPACE 1                                                        22146000
*        CHECK FOR AFFINITY IN DESIRED RANGE                            22146500
CDQCKSID DS    0H                  CHECK FOR SID MATCH                  22147000
         IC    R15,JQEFLAG2        GET SID AFFINITY FLAGS               22147500
         TM    CDQSIDLO,QUESYSAF   TEST FOR ANY REQUEST                 22148000
         BNO   CDQSIDS             NO--LOOK FOR SPECIFIC OR 'ALL'       22148500
         CLM   R15,1,CDQSIDLO      TEST FOR 'ANY' AFFINITY              22149000
         BNE   CDQNXT              NO--RETURN TO GET NEXT JOB           22149500
         BR    R14                 YES--RETURN OK                       22150000
CDQSIDS  DS    0H                  CHECK FOR SPECIFIC SID OR 'ALL'      22150500
         IC    R15,CDQSIDLO        GET CURRENT AFFINITY                 22151000
         EX    R15,CDNQTEST        TEST FOR JOB WITH SAME               22151500
         BNO   CDQNXT              NO GET NEXT JOB                      22152000
         BR    R14                 YES--RETURN OK                       22152500
         SPACE 1                                                        22153000
*        COMPUTE SID NAME OFFSET FOR MESSAGE                            22153500
CDQSIDNM DS    0H                  PICK-UP AFFINITY OF JOBS             22154000
         TM    CDQSIDLO,QUESYSAF   TEST FOR 'ANY' REQUEST               22154500
         BNO   CDQSPECA            NO--GET SPECIFIC AFFINITY            22155000
         LA    R15,=CL4'ANY'       SET ADDRESS OF 'ANY' AFF             22155500
         BR    WA                  AND RETURN                           22156000
CDQSPECA DS    0H                  REQUEST IS FOR SPECIFIC AFF          22156500
         SLR   R15,R15             ZERO INSERT REGISTER                 22157000
         LR    R14,R15             ZERO COUNT REGISTER                  22157500
         IC    R15,CDQSIDLO        PICK-UP AFFINITY BIT                 22158000
         N     R15,=A(127)         TURN 'OFF'POSSIBLE 'IND' BIT         22158500
         LA    R14,1(,R14)         COUNT ONE FOR EACH AFF BIT           22159000
         SRA   R15,1               SHIFT OUT ONE BIT                    22159500
         BNZ   *-8                 AND COUNT FOR EACH BIT MOVED OUT     22160000
         L     R15,$QSE1           POINT TO 1ST QSE                  R4 22160500
         BCTR  R14,0               LESS ONE FOR DISPLACEMENT            22161000
         MH    R14,$QSEL           TIMES ELEMENT SIZE                R4 22161500
         ALR   R14,R15             PLUS BEG ADDR EQUALS ELEMENT ADDR    22162000
         USING QSEDSECT,R14        QSE ADDRESSABILITY                   22162500
         LA    R15,QSESID          POINT TO SYSTEM NAME FOR AFFINITY    22163000
         BR    WA                  AND RETURN                           22163500
         DROP  R14                 DROP QSE ADDRESSABILITY              22164000
         EJECT                                                          22164500
*********************************************************************** 22165000
*                                                                     * 22165500
*        $D N ITEM PROCESSING                                         * 22166000
*                                                                     * 22166500
*********************************************************************** 22167000
CDNCTR   DS    0H                  CHECK FOR $DN DISPLAY                22167500
         CLC   CDQSEE(L'CDQPPUD),CDQPPUD  THIS PPU SEARCH ELEMENT   R41 22169800
         BE    CDNOTALL            YES--SKIP TESTS                  R41 22169900
         TM    CDNFLAG,CDNALL      TEST FOR 'ALL' REQUEST               22170000
         BZ    CDNOTALL            NO -- SKIP TESTS                     22170500
         SLR   R15,R15             ZERO INSERT REGISTER                 22171000
         IC    R15,CDQSIDLO        PICK-UP CURRENT AFFINITY BIT         22171500
         N     R15,=A(127)         TURN 'OFF' POSSIBL 'IND' BIT         22172000
         EX    R15,CDNQTEST        TST FOR JOB OF DESIRED AFFN          22172500
         BZ    CDQNXT              NO--GET NEXT JOB                     22173000
         BCTR  R15,0               HAS THE JOB BEEN                     22173500
         EX    R15,CDNQTEST        PREVIOUSLY DISPLAYED                 22174000
         BNZ   CDQNXT              IF SO --GET NEXT JOB                 22174500
CDNOTALL DS    0H                  COME HERE FOR NOT 'ALL ' REQ         22175000
         LR    WD,R1               SAVE JQE ADDR FOR NEXT JOB SCAN      22175500
         $CFJMSG OPT=COFQ          DISPLAY QUEUED JOBS                  22176000
         NOP   *-*                 SPACER TO PREVENT FUTURE ERROR       22176500
*              THIS LINE DELETED BY APAR NUMBER                @OZ29819 22177000
* EACH $CWTO MAY ISSUE A $WAIT THUS GIVING OTHER PROCESSORS A CHANCE    22177500
* TO ALTER THE JOB QUEUE CHAIN FOR THE CURRENT ENTRY                    22178000
         ICM   R1,7,CDQTYPLO       GET ADDRESS OF QUEUE TYPE   @OZ29819 22178500
         SLR   R15,R15             CLEAR FOR INSERT            @OZ29819 22178600
         IC    R15,0(,R1)          GET QUEUE TYPE              @OZ29819 22178700
        $CFJSCAN PROCESS=CDNPRO,NEXT=CDNNXT,QUEUE=(R15)        @OZ29819 22179000
         MVC   COMMAND(15),=C'LIST INCOMPLETE' SET MSG                  22179500
         LA    R0,15               SET LENGTH                           22180000
         B     CDQRES              RESPOND                              22180500
CDNPRO   CR    R1,WD               DO THE POINTERS MATCH                22181000
         BNE   CDNNXT              NEXT ELEMENT UNTIL END OR MATCH      22181500
*              THIS LINE DELETED BY APAR NUMBER                @OZ29819 22182000
*              THIS LINE DELETED BY APAR NUMBER                @OZ29819 22182500
         B     CDQNXT              NEXT ELEMENT ( CHAIN OK )            22183000
CDNQTEST TM    JQEFLAG2,*-*        **** EXECUTE ONLY ****               22183500
         EJECT                                                          22184000
*********************************************************************** 22184500
*                                                                     * 22185000
*        $D Q ITEM PROCESSING                                         * 22185500
*                                                                     * 22186000
*********************************************************************** 22186500
CDQCTR   CH    WF,CDQHLDD          'Q=HOLD' SPECIFIED...       @OZ29819 22186600
         BE    CDQCTHLD            BR IF YES                   @OZ29819 22186700
         LA    WE,1(,WE)           INCREMENT COUNTER           @OZ29819 22187000
         TM    CDNFLAG,CDNTYPE     'Q=' SPECIFIED...           @OZ29819 22187100
         BO    CDQNXT              BR IF YES                   @OZ29819 22187200
         TM    JQEFLAGS,QUEHOLDA+QUEHOLD1+QUEHOLD2  JOB HELD...@OZ29819 22187300
         BZ    CDQNXT              BR IF NO                    @OZ29819 22187400
         TM    JQEFLAGS,QUEBUSY    JOB ACTIVE...               @OZ29819 22187500
         BNZ   CDQNXT              BR IF YES                   @OZ29819 22187600
         BAL   R14,CDQCKRTE        CHECK ROUTE CODES           @OZ29819 22187700
         BAL   R14,CDQCKSID        CHECK AFFINITY              @OZ29819 22187800
CDQCTHLD LA    R10,1(,R10)         OK -- BUMP HOLD COUNT       @OZ29819 22187900
         B     CDQNXT              GO TO NEXT ENTRY                     22188000
         EJECT                                                          22188500
CDQS     EQU   *                                                        22189000
*              THIS LINE DELETED BY APAR NUMBER                @OZ29819 22189500
CDQXEQD  DC    AL2(CDQXEQ-CDQB),AL3(CDQTYPEC,CDQTYPE9)         @OZ29819 22190000
CDQOUTD  DC    AL2(CDQOUT-CDQB),AL3(CDQTYPEO,CDQTYPEO)         @OZ29819 22192000
CDQPPUD  DC    AL2(CDQPPU-CDQB),AL3(CDQTYPEO,CDQTYPEP)         @OZ29819 22192100
CDQENDD  DC    AL2(CDQEND-CDQB)                                @OZ29819 22192200
CDQSL    EQU   *-CDQS                                          @OZ29819 22192300
CDQHLDD  DC    AL2(CDQHLD-CDQB),AL3(CDQQTYPS,CDQTYPE9)         @OZ29819 22192400
CDQRALLD DC    AL2(1*256+$MAXRJE,0)  DEFAULT ROUTE RANGE       @OZ29819 22192500
         SPACE 1                                               @OZ29819 22192700
CDQQTYPS EQU   *                   VALID JOB QUEUE TYPES       @OZ29819 22192800
CDQTYPEO DC      AL1($OUTPUT)                                  @OZ29819 22192900
CDQTYPEP DC      AL1($HARDCPY)                                 @OZ29819 22193000
CDQTYPER DC      AL1($RECEIVE)                                 @OZ29819 22193100
CDQTYPET DC      AL1($SETUP)                                   @OZ29819 22193200
CDQTYPEX DC      AL1($XMIT)                                    @OZ29819 22193300
CDQTYPEI DC      AL1($INPUT)                                   @OZ29819 22193400
CDQTYPEC DC      AL1($XEQ)                                     @OZ29819 22193500
CDQTYPE$ DC      AL1(CATSTCCL-X'80')                           @OZ29819 22193600
CDQTYPE@ DC      AL1(CATTSUCL-X'80')                           @OZ29819 22193700
CDQTYPEA DC     9AL1(C'A'-X'80'+*-CDQTYPEA)                    @OZ29819 22193800
CDQTYPEJ DC     9AL1(C'J'-X'80'+*-CDQTYPEJ)                    @OZ29819 22193900
CDQTYPES DC     8AL1(C'S'-X'80'+*-CDQTYPES)                    @OZ29819 22194000
CDQTYPE0 DC    10AL1(C'0'-X'80'+*-CDQTYPE0)                    @OZ29819 22194100
CDQTYPE9 EQU   *-1                                             @OZ29819 22194200
         SPACE 1                                               @OZ29819 22194300
CDQSHI   EQU   COMREGSV,2          SCAN HIGH VALUE             @OZ29819 22194400
CDQSLO   EQU   COMREGSV+2,2        SCAN LOW VALUE              @OZ29819 22194500
CDQDEFR  EQU   CDQSLO+L'CDQSLO,4   ROUTE CODE RANGE            @OZ29819 22194600
CDQRBNDH EQU   CDQDEFR,2           HIGH BOUND                        R4 22195000
CDQRBNDL EQU   CDQDEFR+2,2         LOW BOUND                         R4 22195500
CDQSIDLO EQU   CDQDEFR+4,1         SID LOW VALUE                     R4 22196000
CDQSIDHI EQU   CDQDEFR+5,1         SID HIGH VALUE                    R4 22196500
CDQSE    EQU   CDQDEFR+6,CDQSL     AREA FOR SCAN ELEMENTS            R4 22197000
CDQSEE   EQU   CDQSE,8             FIRST SCAN ELEMENT          @OZ29819 22197500
CDQTYPLO EQU   CDQSEE+2,3          FIRST QUEUE                 @OZ29819 22198000
CDQTYPHI EQU   CDQSEE+5,3          LAST QUEUE                  @OZ29819 22198500
CDQSECDD EQU   CDQSEE+L'CDQSEE,L'CDQSEE  SECOND SCAN ELEMENT   @OZ29819 22199000
                                   PRINT OFF - SECTION DELETED @OZ29819 22199500
*              THIS LINE DELETED BY APAR NUMBER                @OZ29819 22200000
*              THIS LINE DELETED BY APAR NUMBER                @OZ29819 22200500
*              THIS LINE DELETED BY APAR NUMBER                @OZ29819 22201000
*              THIS LINE DELETED BY APAR NUMBER                @OZ29819 22201500
*              THIS LINE DELETED BY APAR NUMBER                @OZ29819 22202000
*              THIS LINE DELETED BY APAR NUMBER                @OZ29819 22202500
*              THIS LINE DELETED BY APAR NUMBER                @OZ29819 22203000
*              THIS LINE DELETED BY APAR NUMBER                @OZ29819 22203500
                                   PRINT ON -- SECTION DELETED @OZ29819 22204000
CDQTSKID DC    AL1(CATSTCID),CL5' STC' MESSAGE FOR SYSTEM TASK          22204500
CDQLOGID DC    AL1(CATTSUID),CL5' TSU' MESSAGE FOR TIME SHARING USER    22205000
CDQSESAV EQU   CDQSE+CDQSL,CDQSL   SAVE AREA FOR $DN,Q ELEMENTS         22205500
CDNFLAG  EQU   CDQSESAV+CDQSL,1    $DN FLAG BYTE                     R4 22206000
CDNALL   EQU   X'01'               FLAG FOR 'ALL' REQUEST               22206500
CDNIND   EQU   X'02'               FLAG FOR 'IND' REQUEST               22207000
CDNROUT  EQU   X'04'               FLAG FOR ROUTE RANGE              R4 22207500
CDNTYPE  EQU   X'08'               FLAG FOR QUEUE TYPE               R4 22208000
CDNFLGN  EQU   X'20'               $DN SPECIFIED               @OZ29819 22208300
CDNRSCAN EQU   X'10'               RE-SCAN CURRENT QUEUE       @OZ29819 22208400
CDQB     EQU   HASPCJB1            BASE FOR SUB-COMMAND OFFSETS         22208500
CDQQSEAF DC    X'0001020408102040' QSE AFFINITIES                    R4 22209000
         EJECT                                                 @OZ29819 22209100
         LTORG ,                                               @OZ29819 22209200
         TITLE 'HASP COMMAND PROCESSOR HASPCJ1A - JOB QUEUE COMMANDS (CC22209500
               ONTINUED)'                                      @OZ29819 22209600
HASPCJ1A $COMGRUP DF,OQ,PQ         MORE JOB QUEUE COMMANDS     @OZ29819 22209700
         SPACE 1                                               @OZ29819 22209800
*********************************************************************** 22210000
*                                                                     * 22210500
*        $D F,D=H/A,JOB=JN-NN,R=DEST1-DEST2                           * 22211000
*                ( NO H OR A = RELEASED JOBS ONLY )                   * 22211500
*                                                                     * 22212000
*********************************************************************** 22212500
CDF      DS    0H                                                    R4 22213000
         BAL   LINK,COFRTD         SET DEFAULT ROUTE RANGES          R4 22213500
         LR    WA,R1               SAVE LOW BOUND ONLY               R4 22214000
         MVI   COMPNTER,CDFRELJ    DISPLAY ONLY NON-HELD JOBS        R4 22214500
         LR    WB,WA               COPY ROUTING                         22215000
         SR    WC,WC               SET DEFAULT LOW JOB NUMBER           22215500
         LH    R10,=H'32767'       SET DEFAULT HIGH                     22216000
CDFNSPEC BXH   WD,WE,CDFOK         IF NO MORE EXIT                      22216500
         L     R1,0(,WD)           POINT TO OPERAND                  R4 22217000
         CLI   1(R1),C'='          THIS EQUAL                        R4 22217500
         BNE   CDFINVO             ERROR IF NOT                      R4 22218000
         $CFSEL (D,CDFHA),(J,CDFJ),(R,CDFR) SELECT OPERAND ROUTINE   R4 22218500
         B     CDFINVO             ERROR EXIT                        R4 22219000
CDFHA    CLI   2(R1),C'A'          THIS DISPLAY ALL                  R4 22219500
         BE    CDFSETA             SET ALL IF YES                    R4 22220000
         CLI   2(R1),C'H'          THIS DISPLAY HELD ONLY            R4 22220500
         BE    CDFSETH             SET HELD ONLY IF YES              R4 22221000
         B     CDFINVO             ERROR EXIT                        R4 22221500
CDFJ     $CFCVB POINTER=(WD),NOK=CDFINVO,NUM=2                       R4 22222000
         LTR   R1,R1               JOB ZERO                          R4 22222500
         BZ    CDFINVO             ERROR IF YES                      R4 22223000
         L     R15,0(,WD)          POINT TO OPERAND                  R4 22223500
         CLI   2(R15),C'J'         IS THIS JOB                       R4 22224000
         BE    CDFSETJ             SET JOB IF YES                    R4 22224500
         CLI   2(R15),C'S'         IS IT STC                         R4 22225000
         BE    CDFSETS             SET STC IF YES                    R4 22225500
         CLI   2(R15),C'T'         IS IT TSU                         R4 22226000
         BE    CDFSETT             SET TSU IF YES                    R4 22226500
         B     CDFINVO             ERROR EXIT                        R4 22227000
CDFR     BAL   LINK,COFRTRA        CONVERT DESTINATION RANGE         R4 22227500
         B     CDFINVO             ERROR                    + 0      R4 22228000
         LR    WA,R0               SAVE ROUTE               + 4      R4 22228500
         LR    WB,R1                LIMITS                              22229000
         B     CDFNSPEC            LOOP TO NEXT SPECIFICATION           22229500
CDFSETT  AH    R1,=H'10000'        UP BASE FOR TSU                      22230000
         AH    R0,=H'10000'        UP BASE                              22230500
CDFSETS  AH    R1,=H'10000'        UP BASE FOR TSU OR STC               22231000
         AH    R0,=H'10000'        UP BASE                              22231500
CDFSETJ  LR    WC,R1               SAVE JOB                             22232000
         LR    R10,R0               LIMITS                              22232500
         B     CDFNSPEC            GET NEXT SPECIFICATION               22233000
CDFSETH  MVI   COMPNTER,CDFHOLD    SET HOLD FLAG TEMPORILY              22233500
         B     CDFNSPEC            GET NEXT SPECIFICATION               22234000
CDFSETA  MVI   COMPNTER,CDFRELJ+CDFHOLD SET TO DISPLAY ALL JOBS         22234500
         B     CDFNSPEC            GET NEXT SPECIFICATION               22235000
         EJECT                                                          22235500
*********************************************************************** 22236000
*                                                                     * 22236500
*        PREPARE TO SCAN JOES FOR EACH ROUTE CODE                     * 22237000
*                                                                     * 22237500
*********************************************************************** 22238000
         USING JOTDSECT,WF                                              22238500
         USING JOEDSECT,R1                                              22239000
CDFOK    STH   WC,CDFLJOB          SET LOW JOB                          22239500
         STH   R10,CDFHJOB         SET HIGH JOB                         22240000
         STH   WA,CDFEROUT         SAVE END ROUTE                       22240500
         STH   WB,CDFCROUT         SAVE STARTING ROUTE                  22241000
         LA    WD,COMMAND+70-5     POINT TO LAST OUTPUT ELEMENT         22241500
         ICM   WD,8,COMPNTER       PICK UP JOB TYPE FLAGS               22242000
         ST    WD,CDFCOMPR-1+CDFFLAGS-CDFFLAGS SET PTR AND FLAGS        22242500
         L     WF,CDFJOT           POINT TO JOT                         22243000
*                                    THIS LINE DELETED BY APAR @OZ20010 22243100
*                                    THIS LINE DELETED BY APAR @OZ20010 22243200
*                                    THIS LINE DELETED BY APAR @OZ20010 22243300
         EJECT                                                          22243500
*********************************************************************** 22244000
*                                                                     * 22244500
*        GET JOE AND PREPARE TO SCAN                                  * 22245000
*                                                                     * 22245500
*********************************************************************** 22246000
CDFNROUT LA    R1,JOTCHRQ-(JOENEXT-JOEDSECT) QUEUE HEAD                 22246500
         LH    R1,JOENEXT          POINT TO NEXT JOE OFFSET             22247000
         N     R1,=A(X'0000FFFF')  INSURE OFFSET IS POSITIVE            22247500
         BZ    CDFNOJOP            LAST JOE -- EXIT                     22248000
         SLL   R1,2                EXPAND TO BYTE OFFSET             R4 22248500
         ALR   R1,WF               COMPUTE ACTUAL JOE ADDRESS           22249000
         MVC   CDFNXTLO,CDFEROUT   SET NEXT LOW ROUTE CODE     @OZ29819 22249100
CDFMVCHR MVC   CDFCHAR,JOEFORM     MOVE CHARACTERISTICS                 22249500
         LA    R0,CDFMR1           POINT TO OUTPUT ROUTING           R4 22250000
         LA    R15,CDFCROUT        POINT TO CURRENT ROUTING          R4 22250500
         BAL   LINK,COFRTC         CONVERT TO PRINTABLE              R4 22251000
         MVC   CDFMID,=C'OUT R='   SET MESSAGE HEADER                R4 22251500
         MVC   CDFMB,=C'F=XXXX C=XXXX T=XXXX W= (NONE) '  BASE MSG   R4 22252000
         MVC   CDFMBF,CDFORMS      SET FORMS                         R4 22252500
         MVC   CDFMBC,CDFFCB       SET CARRIAGE                      R4 22253000
         MVC   CDFMBT,CDFUCS       SET TRAIN                         R4 22253500
         CLI   CDFWTR,C' '         WRITER BLANK                      R4 22254000
         BE    SKIP120             SKIP NEXT                         R4 22254500
         MVC   CDFMBW,CDFWTR       SET WRITER NAME                   R4 22255000
SKIP120  LA    WD,CDFMB+L'CDFMB    POINT TO NEXT MSG AREA            R4 22255500
         CLC   CDFLASH,=C'****'    TEST FOR FLASH SPECIFIED          R4 22256000
         BE    CDFTBRST            BR IF NOT                         R4 22256500
         MVC   0(3,WD),=C' O='     SET FLASH PREFIX                  R4 22257000
         MVC   3(L'CDFLASH,WD),CDFLASH  SET FLASH FRAME ID           R4 22257500
         LA    WD,3+L'CDFLASH(,WD) POINT TO NEXT MSG AREA            R4 22258000
CDFTBRST TM    CDFCFLAG,$JOEBRST   TEST FOR BURST=YES                R4 22258500
         BZ    SKIP130             BR IF NOT                         R4 22259000
         MVC   0(4,WD),=C' B=Y'    SET BURST=YES IN MSG              R4 22259500
         LA    WD,4(,WD)           POINT TO NEXT MSG AREA            R4 22260000
SKIP130  MVC   0(7,WD),=C' CLASS ' SET CLASS PREFIX                  R4 22260500
         LA    WD,7(,WD)           POINT TO FIRST CLASS AREA         R4 22261000
         EJECT                                                          22279000
*********************************************************************** 22279500
*                                                                     * 22280000
*        SCAN CLASS QUEUES                                            * 22280500
*                                                                     * 22281000
*********************************************************************** 22281500
         SR    WB,WB               SET FOR CLASS A                      22282000
         B     CDFACLS             PROCESS CLASS                        22283000
CDFNCLS  LA    WB,2(0,WB)          UP TO NEXT CLASS                     22283500
         CH    WB,=H'70'           CHECK FOR MAX NBR CLASSES            22284000
         BH    CDFEJOE             EXIT FOR THIS CHARACTERISTIC         22284500
CDFACLS  MVC   1(4,WD),=C'=**,'    SET PATTERN FOR CLASS                22285000
*********************************************************************** 22290500
*                                                                     * 22291000
*        PASS THROUGH JOES FOR A CLASS                                * 22291500
*                                                                     * 22292000
*********************************************************************** 22292500
         SR    R0,R0               SET COUNT                            22293000
         LA    R1,JOTCLSQ-(JOENEXT-JOEDSECT)(WB) POINT TO QUEUE         22294000
CDFNXTJO DS    0H                  GET ANOTHER JOE OF THE SAME CLS      22294500
*              THIS LINE DELETED BY APAR NUMBER                @OZ29819 22295000
         LH    R1,JOENEXT          GET NEXT JOE OFFSET                  22295500
         N     R1,=A(X'0000FFFF')  INSURE OFFSET IS POSITIVE            22296000
         BZ    CDFECLS             END--TRY NEXT CLASS                  22296500
         SLL   R1,2                EXPAND TO BYTE OFFSET             R4 22297000
         ALR   R1,WF               COMPUTE ACTUAL JOE ADDRESS           22297500
         TM    JOEFLAG,$JOEBUSY    TEST FOR JOE BUSY                    22298000
         BNZ   CDFNXTJO            IF BUSY FORGET IT                    22298500
         LH    R14,JOEJQE          PICK-UP JQE OFFSET                   22299000
         SLL   R14,2               COMPUTE ACTAUAL JQE OFFSET ( * 4)    22299500
         AL    R14,$JOBQPTR        COMPUTE JQE ADDRESS                  22300000
         TM    QUEFLAGS(R14),QUEHOLDA+QUEHOLD1 JOB HELD                 22300500
         BZ    CDFJBNH             IF NOT TEST FOR DESIRES              22301000
         TM    CDFFLAGS,CDFHOLD    DOES USER WANT HOLD                  22301500
         BZ    CDFNXTJO            IF NOT FORGET IT                     22302000
         B     CDFCKR              CHECK RANGE                          22302500
CDFJBNH  TM    CDFFLAGS,CDFRELJ    DOES USER WANT NON HELD              22303000
         BZ    CDFNXTJO            IF NOT FORGET IT                     22303500
CDFCKR   CLC   QUEJOBNO(2,R14),CDFLJOB TEST FOR WITHIN RANGE            22304000
         BL    CDFNXTJO            IF LOW FORGET IT                     22304500
         CLC   QUEJOBNO(2,R14),CDFHJOB TEST FOR WITHIN RANGE            22305000
         BH    CDFNXTJO            IF HIGH FORGET IT                    22305500
         LH    R15,JOEROUT         GET THE ROUTE CODE          @OZ29819 22306000
         LTR   R15,R15             INDIRECT ROUTE...           @OZ29819 22306100
         BNZ   CDFNRTE             IF NO, DO NORMAL ROUTE      @OZ29819 22306500
         ST    R1,COMWREGS         SAVE JOE POINTER                     22307000
         BAL   WA,CDFCNVT          CONVERT JOE DISP TO EBCDIC CLS       22307500
         L     R15,$SSVT           POINT TO THE SSVT                    22308000
         LA    R15,$SVSCAT-SSVT(,R15)  GET ADDRESS OF SCAT              22308500
         ALR   R15,R1              COMPUTE THIS CLS LOCATION            22309000
         L     R1,COMWREGS         RESTORE JOE POINTER                  22309500
         TM    SCATFLAG-SCADSECT(R15),SCATPRNT TEST FOR NORM PRT        22310000
         BO    CDFPRTRT            YES--LOOK AT JQE PRT RTE             22310500
         TM    SCATFLAG-SCADSECT(R15),SCATPNCH TEST FOR NORM PNCH       22311000
         BZ    CDFNXTJO            NO -- SKIP FURTHER TESTS             22311500
         LH    R15,QUEPUNRT(,R14)  GET PUNCH ROUTE CODE        @OZ29819 22312000
         B     CDFNRTE             BR TO TEST ROUTE CODE       @OZ29819 22312500
         SPACE 1                                               @OZ29819 22313000
CDFPRTRT LH    R15,QUEPRTRT(,R14)  GET PRINT ROUTE CODE        @OZ29819 22313500
         SPACE 1                                               @OZ29819 22314000
CDFNRTE  CH    R15,CDFCROUT        CHECK AGAINST CURRENT RTE CD@OZ29819 22314500
         BL    CDFNXTJO            BR IF TOO LOW               @OZ29819 22315000
         CH    R15,CDFNXTLO        CHECK AGAINST NEXT LOW      @OZ29819 22315500
         BH    CDFNXTJO            BR IF HIGHER                @OZ29819 22316000
*              THIS LINE DELETED BY APAR NUMBER                @OZ29819 22316500
         LH    R14,JOECHAR         GET CHARACTERISTIC JOE OFFSET        22317000
         N     R14,=A(X'0000FFFF') INSURE POSITIVE OFFSET               22317500
         SLL   R14,2               EXPAND TO BYTE OFFSET             R4 22318000
         ALR   R14,WF              POINT TO CHARACTERISTIC JOE          22318500
         CLC   CDFCHAR,JOEFORM-JOEDSECT(R14) CHECK FOR MATCH            22319000
         BNE   CDFNXTJO            IF NOT FORGET IT                     22319500
         CH    R15,CDFCROUT        THIS AN EXACT HIT...        @OZ29819 22319600
         BE    CDFINCR             BR IF YES                   @OZ29819 22319700
         STH   R15,CDFNXTLO        SET NEW NEXT LOW            @OZ29819 22319800
         OI    CDFFLAGS,CDFRSCAN   INDICATE RE-SCAN REQUIRED   @OZ29819 22319900
         B     CDFNXTJO            BR TO TEST NEXT JOE         @OZ29819 22319910
CDFINCR  LA    R15,1               SET INCREMENT               @OZ29819 22319920
         AR    R0,R15              UP 1                                 22320000
         CH    R0,=H'100'          CHECK FOR OVERFLOW                   22320500
         BL    CDFNXTJO            LOOP                                 22321000
         CLC   CDFCROUT,CDFEROUT   MORE ROUTE CODES TO TEST... @OZ29819 22323500
         BL    CDFNXTJO            BR IF YES                   @OZ29819 22323600
         EJECT                                                          22324000
*********************************************************************** 22324500
*                                                                     * 22325000
*        PUT COUNT IN RESPONSE COUNT FIELD                            * 22325500
*                                                                     * 22326000
*********************************************************************** 22326500
CDFECLS  LTR   R0,R0               IS THIS ZERO                         22327000
         BZ    CDFNCLS             IF ZERO DO NEXT CLASS                22327500
         CH    R0,=H'100'          TEST HIT COUNT              @OZ29819 22327600
         BNL   CDFOVF              BR IF EXCEEDS 99            @OZ29819 22327700
         $CFCVE  VALUE=(R0)        CONVERT TO EBCDIC                    22328000
         MVC   2(2,WD),COMDWORK+3  INSERT COUNT                         22328500
CDFOVF   BAL   WA,CDFCNVT          CONVERT JOE DISPL TO CLS CHAR        22329500
         STC   R1,0(0,WD)          STORE RESULT                         22330000
         LA    WD,5(0,WD)          UP TO NEXT                           22332000
         OI    CDFFLAGS,CDFJOEOK+CDFSOMJO SET FLAGS                     22332500
         CLM   WD,7,CDFCOMPR       CHECK FOR OUTPUT REQUIRED            22333000
         BNH   CDFNCLS             IF NOT GO TO NEXT CLASS              22333500
         BAL   WC,CDFPRNT          DISPLAY MESSAGE                      22334000
         MVC   CDFMCCL,=C'CLASS '  SET CONTINUATION CLASS            R4 22334500
         LA    WD,CDFMCC           POINT TO CONTINUATION CLASS ELEMT R4 22335000
         B     CDFNCLS             NEXT CLASS                           22335500
*********************************************************************** 22336000
*                                                                     * 22336500
*        END OF SCAN FOR A GIVEN CHARACTERISTIC                       * 22337000
*                                                                     * 22337500
*********************************************************************** 22338000
CDFEJOE  TM    CDFFLAGS,CDFSOMJO   IS THERE SOMETHING TO PRINT          22338500
         BZ    CDFEJOA             IF NOT FORGET IT                     22339000
         BAL   WC,CDFPRNT          DISPLAY MESSAGE                      22339500
CDFEJOA  LA    R1,JOTCHRQ-(JOENEXT-JOEDSECT) QUEUE HEAD                 22340000
CDFEJOB  LH    R1,JOENEXT          GET NEXT JOE OFFSET                  22340500
         N     R1,=A(X'0000FFFF')  INSURE OFFSET IS POSITIVE            22341000
         BZ    CDFNOJO             LAST--EXIT                           22341500
         SLL   R1,2                EXPAND TO BYTE OFFSET             R4 22342000
         ALR   R1,WF               COMPUTE JOE ADDRESS                  22342500
         CLC   CDFCHAR,JOEFORM     CHECK FOR ONE WE WANT                22343000
         BNL   CDFEJOB             IF NOT LOOP                          22343500
         B     CDFMVCHR            IF SO COPY CHARACTERISTICS           22344000
         EJECT                                                          22344500
*********************************************************************** 22345000
*                                                                     * 22345500
*        END OF PASS THROUGH ALL JOES                                 * 22346000
*                                                                     * 22346500
*********************************************************************** 22347000
CDFNOJO  TM    CDFFLAGS,CDFRSCAN   QUEUE RE-SCAN REQUIRED...   @OZ29819 22347500
         BZ    CDFNOJOP            BR IF NO                    @OZ29819 22348000
         NI    CDFFLAGS,255-CDFRSCAN  RESET RE-SCAN INDICATOR  @OZ29819 22348500
         MVC   CDFCROUT,CDFNXTLO   SET NEW CURRENT ROUTE CODE  @OZ29819 22349000
         B     CDFNROUT            BR TO RE-SCAN QUEUE         @OZ29819 22349500
CDFNOJOP TM    CDFFLAGS,CDFJOEOK   DID WE FIND ANY                      22350000
         BZ    CDFEMPTY            EXIT WITH DIAGNOSTIC IF NO           22350500
         $CRET ,                   RETURN                               22351000
CDFEMPTY $CRET MSG='NO OUTPUT QUEUED'   RETURN WITH DIAGNOSTIC          22351500
*********************************************************************** 22352000
*                                                                     * 22352500
*        DISPLAY A LINE                                               * 22353000
*                                                                     * 22353500
*********************************************************************** 22354000
CDFPRNT  DS    0H                                                       22354500
         LR    R0,WD               POINT TO END + 2                     22355000
         LA    R1,COMMAND+1        START + 1                            22355500
         SR    R0,R1               GET COUNT                            22356000
         $CWTO L=(R0)              DISPLAY MESSAGE                      22356500
         NI    CDFFLAGS,255-CDFSOMJO TURN OFF FLUSH BIT                 22357000
*                                    THIS LINE DELETED BY APAR @OZ20010 22357100
*                                    THIS LINE DELETED BY APAR @OZ20010 22357200
*                                    THIS LINE DELETED BY APAR @OZ20010 22357300
         BR    WC                  RETURN                               22357500
         EJECT                                                          22358000
*********************************************************************** 22381000
*                                                                     * 22381500
*        MISCELLANEOUS                                                * 22382000
*                                                                     * 22382500
*********************************************************************** 22383000
CDFINVO  L     R1,0(0,WD)          POINT TO INVALID OPERAND             22383500
         $CFINVO OPERAND=(R1)      EXIT ...                             22384000
CDFCNVT  DS    0H                  CONVERT JOE DISP TO CLS CHAR         22385000
         LR    R1,WB               MOVE JOE CLASS TO WORK REGISTER      22385500
         SRA   R1,1                DIVIDE BY TWO                        22386000
         L     R15,=A(CLJHLDTB)    POINT TO CONVERSION TABLE            22386500
         IC    R1,0(R1,R15)        PICK-UP CLASS IN R1                  22387000
         BR    WA                  AND RETURN                           22387500
CDFCHAR  EQU   COMPNTER,25         ALL CHARACTERISTICS               R4 22388500
CDFORMS  EQU   COMPNTER,4          FORMS CHARACTERISTICS                22389000
CDFFCB   EQU   COMPNTER+4,4        FCB CHARACTERISTICS                  22389500
CDFUCS   EQU   COMPNTER+8,4        UCS CHARACTERISTICS                  22390000
CDFWTR   EQU   COMPNTER+12,8       WTR CHARACTERISTICS                  22390500
CDFLASH  EQU   COMPNTER+20,4       FLASH CHARACTERISTICS             R4 22391000
CDFCFLAG EQU   COMPNTER+24,1       CHARACTERISTICS FLAGS (JOECFLAG)  R4 22391500
CDFNXTLO EQU   COMNULOP-10,2       NEXT ROUTE CODE TO SCAN     @OZ29819 22391600
CDFLJOB  EQU   COMNULOP-8          LOW JOB NUMBER OF RANGE              22392000
CDFHJOB  EQU   COMNULOP-6          HIGH JOB NUMBER OF RANGE             22392500
CDFFLAGS EQU   COMNULOP-4          FLAGS                                22393000
CDFJOEOK EQU   X'80'               AT LEAST ONE JOE HAD INFO            22393500
CDFSOMJO EQU   X'40'               THIS JOE HAS SOME TO DISPLAY         22394000
CDFRELJ  EQU   X'20'               DISPLAY RELEASED JOBS                22394500
CDFHOLD  EQU   X'10'               DISPLAY HELD JOBS                    22395000
CDFRSCAN EQU   X'08'               JOT RE-SCAN REQUIRED        @OZ29819 22395100
CDFCOMPR EQU   COMNULOP-3          LAST CLASS ELEMENT ADDRESS           22395500
CDFCROUT EQU   COMNULOP,2          CURRENT ROUTING             @OZ29819 22396000
CDFEROUT EQU   COMNULOP+2,2        LAST ROUTING                @OZ29819 22396500
         USING JQEDSECT,R1         RESTORE JQE ADDRESSABILITY           22397000
         DROP  WF                                                       22397500
         SPACE 2                                                        22398000
CDFMID   EQU   COMMAND,6           TEXT 'OUT R='                     R4 22398500
CDFMR1   EQU   COMMAND+5,10        TEXT ' RXXX     '                 R4 22399000
CDFMB    EQU   CDFMR1+10,31        BASE TEXT                         R4 22399500
CDFMBF   EQU   CDFMB+2,4           FORMS                             R4 22400000
CDFMBC   EQU   CDFMBF+7,4          CARRAGE                           R4 22400500
CDFMBT   EQU   CDFMBC+7,4          TRAIN                             R4 22401000
CDFMBW   EQU   CDFMBT+7,8          WRITER NAME                       R4 22401500
CDFMCCL  EQU   COMMAND,6           CONTINUATION TEXT 'CLASS '        R4 22402000
CDFMCC   EQU   CDFMCCL+L'CDFMCCL   CONTINUATION CLASS ELEMENT        R4 22402500
*              THIS LINE DELETED BY APAR NUMBER                @OZ29819 22403000
*              THIS LINE DELETED BY APAR NUMBER                @OZ29819 22403500
*              THIS LINE DELETED BY APAR NUMBER                @OZ29819 22404000
         EJECT                                                 @OZ29819 22404500
*********************************************************************** 22405000
*                                                                     * 22405500
*        $P Q,Q=CLASSES,R=DESTINATION -- CANCEL DATA SETS             * 22406500
*                                                                     * 22408500
*********************************************************************** 22409000
         SPACE 2                                                        22409500
CPQ      DS    0H                  CANCEL OUTPUT DATA SETS              22410000
         LNR   WB,WE               SET DEFAULT TO NO ROUTE ARGUMENT     22411000
         XC    CPQCLAS,CPQCLAS     ZERO CLASS SELECTION              R4 22413500
CPQLOOP  DS    0H                  LOOP THROUGH OPERANDS                22414000
         BXH   WD,WE,CPQEND        PICK-UP NEXT OPERAND POINTER         22414500
         LM    R14,R15,0(WD)       PICK-UP POINTERS TO NEXT OPERANDS    22415000
         CLI   1(R14),C'='         CHECK FOR =                       R4 22415500
         BNE   CPQINVO             EXIT IF NOT                       R4 22416000
         CLI   0(R14),C'Q'         CHECK FOR Q                       R4 22416500
         BE    CPQCLS              BREAK OUT CLASS LIST              R4 22417000
         CLI   0(R14),C'R'         CHECK FOR ROUTING                 R4 22417500
         BNE   CPQINVO             ERROR IF NOT                      R4 22418000
         BAL   LINK,COFRTRA        CONVERT ROUTINGS                  R4 22418500
         B     CPQINVO             ERROR EXIT               + 0      R4 22419000
         LR    WB,R0               COPY ANSWER              + 4      R4 22419500
         CR    R0,R1               SAME VALUE                        R4 22420500
         BNE   CPQINVO             ERROR IF NOT                      R4 22421000
         B     CPQLOOP             LOOP                              R4 22423000
         SPACE 1                                                        22423500
CPQCLS   DS    0H                  EXTRACT CLASS ARGUMENT               22424000
         SLR   R15,R14             COMPUTE STRING SIZE                  22424500
         SH    R15,=H'4'           TEST FOR EXISTENCE OF STRING         22425000
         BM    CPQINVO             NONE -- ERROR                        22425500
         CH    R15,*+10            TEST FOR MAX SIZE OF EIGHT           22426000
         BNH   *+8                 IF NOT HIGH USE SIZE                 22426500
         LA    R15,L'CPQCLAS-2     ELSE USE MAX SIZE -- EIGHT           22427000
         L     R1,=A(CVALIDTB)     POINT TO TEST TABLE               R4 22427500
         EX    R15,CPQCLTST        TEST FOR VALID CHARACTERS            22428000
         BNZ   CPQINVO             IF INVALID -- EXIT IN ERROR          22428500
         XC    CPQCLAS,CPQCLAS     ZERO PREVIOUS CLASSES             R4 22429000
         EX    R15,CPQMVCLS        MOVE CLASS STRING TO SAVE AREA       22429500
         B     CPQLOOP             AND LOOK FOR MORE OPERANDS           22430000
         SPACE 1                                                        22430500
CPQCLTST TRT   2(*-*,R14),0(R1)    *** EXECUTE ONLY ***              R4 22431000
CPQMVCLS MVC   CPQCLAS(*-*),2(R14) **** EXECUTE ONLY ****               22431500
         SPACE 1                                                        22432000
CPQINVO  DS    0H                  INVLAID OPERAND ROUTINE              22432500
         L     R1,0(,WD)           POINT TO INVALID OPERAND             22433000
         $CFINVO OPERAND=(R1)      DISPLAY INVALID OPERAND              22433500
         SPACE 2                                                        22434000
CPQEND   DS    0H                  END OF OPERAND SCAN                  22434500
        $QSUSE                     REQUEST ACCESS TO CKPT DATA      R41 22434600
         SLR   R10,R10             ZERO HIT RECORDER                    22435000
         SLR   WD,WD               ZERO CLASS OFFSET REGISTER           22435500
         SLR   R0,R0               ZERO CLASS INSERT REGISTER           22436000
         CLI   CPQCLAS,0           TEST FOR NO CLASS STRING SUPPLIED    22437000
         BNE   CPQNALL             NOT ALL CLASSES TO BE CANCELLED      22437500
         BCTR  WD,0                LESS ONE                             22438000
         BCTR  WD,0                LESS ONE                             22438500
         LA    WA,CPQALLP          POINT TO END OF JOE EXIT             22439000
         BR    WA                  GO THERE                             22439500
CPQNALL  DS    0H                  CANCEL A SELECTED NBR OF CLASSES     22440000
         LA    WA,CPQONE           POINT TO END OF JOE EXIT             22440500
         BR    WA                  GO THERE                             22441000
         SPACE 1                                                        22441500
CPQALLP  DS    0H                  ALL CLASSES LOOP                     22442000
         LA    WD,2(,WD)           GET NEXT CLASS OFFSET                22442500
         CH    WD,=H'70'           TEST FOR LAST CLASS                  22443000
         BH    CPQFINI             YES--EXIT ROUTINE                    22443500
         LR    R15,WD              SAVE WD IN R15                       22444000
         SRA   R15,1               DIVIDE BY TWO                        22444500
         L     R14,=A(CLJHLDTB)    POINT TO CLASS CNVT TABLE            22445000
         IC    R0,0(R15,R14)       PICK-UP EBCDIC CLASS                 22445500
         B     CPQJOT              GO SCAN JOT FOR THIS CLASS           22451000
         SPACE 1                                                        22451500
CPQONE   DS    0H                  REQUEST FOR UP TO EIGHT CLASSES      22452000
         IC    R0,CPQCLAS          PICK-UP POSSIBLE CLASS CHARACTER     22453000
         NI    CPQCLAS,255-X'C0'   REDUCE TO JOE DISPLACEMENT           22454000
         BZ    CPQFINI             EXIT IF LAST CLASS                   22454500
         IC    WD,CPQCLAS          PICK-UP PSEUDO JOT OFFSET            22455000
         IC    WD,CPQTABLE-1(WD)   PICK-UP ACTUAL JOT OFFSET            22456000
         MVC   CPQCLAS(L'CPQCLAS-1),CPQCLAS+1 MOVE CLASS(ES) DOWN       22458000
CPQJOT   DS    0H                  SCAN JOT LOOKING FOR JOES TO CNCL    22458500
         L     WF,CDFJOT           POINT TO THE JOT                     22459000
         PUSH  USING               SAVE USING STATUS                    22459500
         USING JOTDSECT,WF         JOT ADDRESSABILITY                   22460000
         LA    R1,JOTCLSQ-(JOENEXT-JOEDSECT)(WD) PT TO JOE BFORE CLS    22461000
         USING JOEDSECT,R1         JOE ADDRESSABILITY                   22463000
CPQNXTJO DS    0H                  GET ANOTHER JOE                      22463500
         LH    R1,JOENEXT          GET OFFSET TO NEXT JOE               22464000
         N     R1,=A(X'0000FFFF')  INSURE OFFSET IS POSITIVE            22464500
         BZR   WA                  LAST JOE -- EXIT                     22465000
         SLL   R1,2                EXPAND TO BYTE OFFSET             R4 22465500
         ALR   R1,WF               COMPUTE JOE ADDRESS                  22466000
         TM    JOEFLAG,$JOEBUSY    TEST FOR ACTIVE JOE                  22466500
         BNZ   CPQNXTJO            IF YES -- GET ANOTHER                22467000
         LTR   WB,WB               TEST FOR SELECTIVE CANCEL BY ROUT    22468000
         BM    CPQDELET            NO--DELETE THIS JOE                  22468500
         LH    R15,JOEROUT         GET THE ROUTE CODE          @OZ29819 22469000
         LTR   R15,R15             INDIRECT ROUTE...           @OZ29819 22469100
         BZ    CPQIRTE             IF YES, EXAMINE JQE         @OZ29819 22469500
         CH    WB,JOEROUT          NO--TEST FOR ROUTING MATCH           22470000
         BNE   CPQNXTJO            NO--GET NEXT JOE                     22470500
         B     CPQDELET            YES--DELETE THIS JOE                 22471000
CPQIRTE  DS    0H                  TEST JQE FOR ROUTE MATCH             22471500
         LH    R14,JOEJQE          POINT TO JQE OFFSET                  22472000
         SLL   R14,2               COMPUTE JQE OFFSET ( * 4)            22472500
         AL    R14,$JOBQPTR        COMPUTE JQE ADDRESS                  22473000
         USING JQEDSECT,R14        JQE ADDRESSABILITY                   22473500
         L     R15,$SSVT           POINT TO THE SSVT                    22474000
         USING SSVT,R15            SSVT ADDRESSABILITY                  22474500
         LA    R15,$SVSCAT         POINT TO SYSOUT CLS ATTRIBUTE TBL    22475000
         DROP  R15                 FORGET SSVT ADDRESSABILITY           22475500
         ALR   R15,R0              COMPUTE LOC OF THIS CLS IN SCAT      22476000
         USING SCADSECT,R15        SCAT ADDRESSABILITY                  22476500
         TM    SCATFLAG,SCATPRNT   IS CLASS NORMALLY PRINTED            22477000
         LH    WE,JQEPRTRT         PICK-UP POSSIBLE PRINT ROUTING       22477500
         BO    CPQRTEST            YES--TEST FOR ROUTE MATCH            22478000
         LH    WE,JQEPUNRT         PICK-UP POSSIBLE PUNCH ROUTING       22478500
         TM    SCATFLAG,SCATPNCH   TEST FOR PUNCH CLASS                 22479000
         BZ    CPQNXTJO            NO--GET NEXT DATA SET                22479500
CPQRTEST DS    0H                  TEST FOR ROUTE CODE MATCH            22480000
         CLR   WB,WE               TEST FOR MATCH                       22480500
         BNE   CPQNXTJO            NO--GET NEXT DATA SET                22481000
CPQDELET DS    0H                  DELETE THIS DATA SET                 22490500
         LR    WF,R0               SAVE R0 OVER DELETE                  22491500
         LR    R10,R1              SET HIT REGISTER                     22492500
         $#REM WORK=(R1)           DELETE THIS JOE                      22493000
         LR    R0,WF               RESTORE CLASS                        22494000
         LR    R1,R10              RELOAD JOE ADDRESS               R41 22494600
         TM    JOEFLAG,$JOESPIN    IS THIS A SPIN DATA SET...       R41 22494700
         BZ    CPQJOT              BR IF NO                         R41 22494800
         L     R15,=A($IOTPUR)     GET ADDR OF IOT PURGE RTN        R41 22494900
         BALR  LINK,R15            GO TO PURGE SPIN DS TRACKS       R41 22495000
         POP   USING               RESTORE USINGS                   R41 22495100
         B     CPQJOT              AND GET NEXT JOE TO DELETE           22495200
         SPACE 1                                                        22495500
CPQFINI  DS    0H                  FINISHED WITH DATA SET DELETE        22496000
         LTR   R10,R10             TEST FOR ANY CANCELLED               22496500
         BNZ   CPQCANCL            YES -- RETURN 'OK'                   22497000
         $CRET MSG='NO DATA SET(S) CANCELLED'                           22497500
         SPACE 1                                                        22498000
CPQCANCL DS    0H                  RETURN 'OK'                          22498500
         $CRET MSG=OK              RETURN TO OPERATOR                   22499000
         SPACE 2                                                        22499500
CPQCLAS  EQU   COMREGSV,9          CLASS STRING SAVE AREA               22500000
         SPACE 1                                                        22500500
CPQTABLE DS    0H                  JOT CONVERSION TABLE                 22501000
         DC    AL1(0,2,4,6,8,10,12,14,16,18)         A-I OR *,A-I    R4 22501500
         DC    6AL1(0)                                               R4 22502000
         DC    AL1(18,20,22,24,26,28,30,32,34,36)    J-R             R4 22502500
         DC    7AL1(0)                                               R4 22503000
         DC    AL1(36,38,40,42,44,46,48,50,52)       S-Z             R4 22503500
         DC    5AL1(0)                                               R4 22504000
         DC    AL1(52,54,56,58,60,62,64,66,68,70,72) 0-9             R4 22504500
         EJECT                                                          22505000
*********************************************************************** 22505500
*                                                                     * 22506000
*        $O Q,Q=CLASSES,CANCEL,R=DESTINATION -- OUTPUT HELD DATA SET  * 22506500
*                                                                     * 22507000
*********************************************************************** 22507500
         SPACE 2                                                        22508000
COQINVO  EQU   CPQINVO             EQUATE ERROR ROUTINE                 22508500
COQ      DS    0H                  FREE OR CANCEL HELD DATA SETS        22509000
         MVI   COQFLAGS,0          TURN OFF ALL FLAGS                   22509500
        $TIME  ,                   GET CURRENT DATE IN R1           R41 22509600
         ST    R1,COQSVCRD         SAVE IT                          R41 22509700
COQLOOP  BXH   WD,WE,COQEND        SCAN ALL OPERANDS                    22510000
         LM    R1,WA,0(WD)         PICK-UP OPERAND POINTERS             22510500
         CLI   0(R1),C'C'          THIS CANCEL                       R4 22511000
         BE    COQCANCL            CANCEL IF YES                     R4 22511500
         CLI   1(R1),C'='          THIS EQUAL                        R4 22512000
         BNE   COQINVO             ERROR EXIT IF NOT                 R4 22512500
         CLI   0(R1),C'Q'          CLASS STRING                      R4 22513000
         BE    COQCLAS             BREAK OUT CLASSES IF YES          R4 22513500
         CLI   0(R1),C'D'          CUT-OFF DATE SPECIFIED...        R41 22513600
         BE    COQDATE             BR IF YES                        R41 22513700
         CLI   0(R1),C'R'          ROUTE CODE                        R4 22514000
         BNE   COQINVO             ERROR EXIT IF NOT                 R4 22514500
         BAL   LINK,COFRTRA        CONVERT TO ROUTE CODE             R4 22515000
         B     CPQINVO             ERROR EXIT               + 0      R4 22515500
         LR    R10,R0              COPY ANSWER              + 4      R4 22516000
         CR    R0,R1               SAME                              R4 22516500
         BNE   CPQINVO             ERROR IF NOT                      R4 22517000
         OI    COQFLAGS,COQRTE     FLAG ROUTING DESIRED              R4 22517500
         B     COQLOOP             LOOP                              R4 22518000
COQCLAS  DS    0H                                                    R4 22518500
         SLR   WA,R1               COMPUTE OPERAND SIZE                 22519000
         SH    WA,=H'4'            LESS '4' FOR MACHINE 'EX'            22519500
         BM    COQINVO             IF NEGATIVE -- ERROR                 22520000
         CH    WA,*+10             CHECK WITH MAX OF '8' CHARACTERS     22520500
         BNH   *+8                 LRSS THAN OR EQUAL 'OK'              22521000
         LA    WA,7                SET MAX CLASS STRING LENGTH          22521500
         L     R14,=A(CVALIDTB)    POINT TO TEST TABLE               R4 22522000
         EX    WA,COQVALID         TEST FOR VALID CLASS CHARACTERS      22522500
         BNZ   COQINVO             IF ANY INVALID--ERROR                22523000
         MVI   COQCLASS,C' '       SET CLASS AREA TO BLANKS             22523500
         MVC   COQCLASS+1(L'COQCLASS-1),COQCLASS  DITTO                 22524000
         EX    WA,COQMVCLS         MOVE CLASSES INTO SAVE AREA          22524500
         OI    COQFLAGS,COQCLS     FLAG CLASS STRING EXISTS             22525000
         B     COQLOOP             AND LOOP FOR MORE OPERANDS           22525500
         SPACE 1                                                        22526000
COQVALID TRT   2(*-*,R1),0(R14)    *** EXECUTE ONLY ***              R4 22526500
COQMVCLS MVC   COQCLASS(*-*),2(R1) **** EXECUTE ONLY ****               22527000
         SPACE 2                                                        22527500
COQCANCL DS    0H                  REQUEST TO CANCEL DATA SETS          22528000
         OI    COQFLAGS,COQCNCL    SET FLAGS AS SUCH                    22528500
         B     COQLOOP             AND LOOP FOR MORE OPERANDS           22529000
         SPACE 2                                                    R41 22529100
COQDATE  SLR   WA,R1               ENSURE                           R41 22529200
         SH    WA,=H'3'             AT LEAST 1                      R41 22529300
         BNP   COQINVO               AND NOT                        R41 22529400
         CH    WA,=H'5'               MORE THAN                     R41 22529500
         BH    COQINVO                 5 DIGITS                     R41 22529600
         LR    R0,WA               RELOAD VALUE LENGTH              R41 22529700
         LR    LINK,R1              AND OPERAND POINTER             R41 22529800
         SPACE 1                                                    R41 22529900
COQDATVL LA    LINK,1(,LINK)       ENSURE                           R41 22530000
         CLI   1(LINK),C'0'         OPERAND                         R41 22530100
         BL    COQINVO               VALUE                          R41 22530200
         CLI   1(LINK),C'9'           IS                            R41 22530300
         BH    COQINVO                 STRICTLY                     R41 22530400
         BCT   R0,COQDATVL              NUMERIC                     R41 22530500
         SPACE 1                                                    R41 22530600
         BCTR  WA,0                REDUCE FOR EXECUTE               R41 22530700
         EX    WA,COQDATPK         CONVERT VALUE TO PACKED DECIMAL  R41 22530800
         CH    WA,=H'1'            TEST FORM OF VALUE               R41 22530900
         BH    COQYYDDD            BR IF NOT NN (DAYS)              R41 22531000
        $TIME  ,                   GET CURRENT DATE IN R1           R41 22531100
         SLR   R0,R0               CLEAR R0                         R41 22531200
         STM   R0,R1,COMDWORK      STORE PACKED DECIMAL DATE        R41 22531300
         CVB   R1,PCER1            CONVERT DAYS TO BINARY           R41 22531400
         CVB   R0,COMDWORK         CONVERT DATE TO BINARY           R41 22531500
         CLC   PCER1+6(2),COMDWORK+6  CUT-OFF DATE LAST YEAR...     R41 22531600
         BL    COQYYOK             BR IF NO                         R41 22531700
         LA    R1,1000-365(,R1)    IGNORE DAYS 366 - 999            R41 22531800
         MVO   COMDWORK+5(3),COMDWORK+5(1)  ISOLATE CURRENT YEAR    R41 22531900
         CVB   LINK,COMDWORK       CONVERT YEAR TO BINARY           R41 22532000
         BCTR  LINK,0              BACK UP 1 YEAR                   R41 22532100
         N     LINK,=F'3'          TEST FOR LEAP YEAR               R41 22532200
         BNZ   COQYYOK             BR IF NO                         R41 22532300
         BCTR  R1,0                ACKNOWLEDGE DAY 366              R41 22532400
         SPACE 1                                                    R41 22532500
COQYYOK  SR    R0,R1               GET CUT-OFF DATE                 R41 22532600
         BNM   *+6                 BR IF THIS CENTURY               R41 22532700
         SLR   R0,R0               CUT-OFF AT TURN OF CENTURY       R41 22532800
         CVD   R0,PCER1            CONVERT RESULT TO PACKED DECIMAL R41 22532900
         MVC   COQSVCRD,PCER1+4    STORE CUT-OFF DATE               R41 22533000
         OI    COQSVCRD+3,X'0F'    MAKE 'PRINTABLE'                 R41 22533100
         B     COQLOOP             BR TO TEST FOR MORE OPERANDS     R41 22533200
         SPACE 1                                                    R41 22533300
COQYYDDD CH    WA,=H'4'            TEST FOR YYDDD                   R41 22533400
         BNE   COQINVO             INVALID IF NO                    R41 22533500
         MVC   COQSVCRD,PCER1+4    STORE CUT-OFF DATE               R41 22533600
         B     COQLOOP             BR TO TEST FOR MORE OPERANDS     R41 22533700
         SPACE 1                                                    R41 22533800
COQDATPK PACK  PCER1(8),2(*-*,R1)  *** EXECUTE ONLY ***             R41 22533900
         SPACE 1                                                    R41 22534000
COQEND   DS    0H                  END OF OPERANDS                      22534100
         LR    WA,R10              COPY ROUTE CODE                   R4 22534200
         SLR   R10,R10             SET HIT FLAG TO ZERO                 22534300
         $CFJSCAN PROCESS=COQPRO,NEXT=COQNEXT,EMPTY=COQNONE,           C22534400
               IGNORE=COQIGN       SCAN THE JOB QUEUE                   22534500
         SPACE 1                                                        22534600
         LTR   R10,R10             WERE ANY JOBS FOUND WITH HLD D S     22534700
         BZ    COQNOHLD            NO--EXIT WITH DIAGNOSTIC             22534800
         L     R15,$PSOPCE         POINT TO PSO PCE                  R4 22534900
         $POST (R15),WORK          POST FOR WORK                        22535000
         MVC   COMMAND(21),=C'DATA SETS RELEASED TO' SET BASIC MSG   R4 22535100
         LA    R0,COMMAND+18-COMMAND SET MESSAGE LENGTH                 22535500
         TM    COQFLAGS,COQCNCL    TEST FOR DATA SETS CANCELLED         22536000
         BZ    COQRERTE            NO--TEST FOR RE-ROUTING              22536500
         MVC   COMMAND+10(9),=C'CANCELLED' SET DATA SETS CANCELLED      22537000
         LA    R0,COMMAND+19-COMMAND SET MESSAGE LENGTH                 22537500
         B     COQ$WTO             AND EXIT WITH RESPOMSE               22538000
COQRERTE DS    0H                  TEST FOR DATA SETS RE-ROUTED         22538500
         TM    COQFLAGS,COQRTE     TEST FOR RE-ROUTING                  22539000
         BZ    COQ$WTO             NO--SEND MESSAGE                     22539500
         LA    R15,COMPNTER        POINT TO ROUTE CODE               R4 22540000
         STH   WA,COMPNTER         SET ROUTE CODE                    R4 22540500
         LA    R0,COMMAND+21       POINT TO TEXT AREA                R4 22541000
         BAL   LINK,COFRTC         CONVERT TO EBCDIC                 R4 22541500
         LA    R0,COMMAND+21+9-COMMAND SET LENGTH OF MESSAGE         R4 22542000
COQ$WTO  DS    0H                  RETURN WITH RESPONSE                 22542500
         $CRET L=(R0)              EXIT WITH RESPONSE                   22543000
         SPACE 1                                                        22543500
*        EXIT WITH MESSAGE THAT NONE WERE FREED/CANCELLED               22544000
COQNOHLD DS    0H                                                       22544500
         $CRET MSG='NO HELD DATA SETS'                                  22545000
         SPACE 2                                                        22545500
COQNONE  DS    0H                  NO JOB(S) WERE IN THE QUEUE          22546000
        $CRET  MSG='JOB(S) NOT FOUND'  EXIT WITH DIAGNOSTIC         R41 22546500
         SPACE 2                                                        22547000
COQPRO   DS    0H                  TEST FOR HELD DATA SETS              22547500
         LH    WB,JQEHLDCT         TEST HOLD COUNT                      22548000
         LTR   WB,WB               TEST FOR NONE                        22548500
         BZ    COQNEXT             NONE--GET NEXT JOB                   22549000
         LR    R10,R1              SET HIT FLAG                         22549500
         LR    WB,R1               SAVE JQE ADDRESS OVER GETMAIN        22550000
         SPACE 1                                                        22550500
*        GETMAIN AREA TO BUILD PSO ELEMENT                              22551000
         SPACE 1                                                        22551500
         GETMAIN RC,LV=PSOLNGTH,SP=0 GET STORAGE FOR PSO ELEMENT        22552000
         SPACE 1                                                        22552500
         LR    WD,R1               SAVE GOTTEN AREA ADDRESS             22553000
         LTR   R15,R15             TEST FOR STORAGE AVAILABLE           22554000
         BNZ   COQNOSTR            NONE--ISSUE DIAGNOSTIC               22554500
         USING PSODSECT,WD         PSO ADDRESSABILITY                   22555000
         LR    R0,R1               CLEAR                            R41 22555500
         LA    R1,PSOLNGTH          PSO                             R41 22556000
         MVCL  R0,R14                STORAGE                        R41 22556100
         LR    R1,WB               POINT TO JQE                     R41 22556200
         OI    PSOFLG1,PSOFHLD+PSOFJOBI+PSOFJOBN SET PSO FLAGS          22556500
         MVC   PSOCRDT,COQSVCRD    SET CUT-OFF DATE IN ELEMENT      R41 22556600
         TM    COQFLAGS,COQCLS     TEST FOR CLASS STRING PROVIDED       22557000
         BZ    *+14                NONE--DON'T SET                      22557500
         OI    PSOFLG1,PSOFCLAS    SET PSO FLAG                         22558000
         MVC   PSOCLAS,COQCLASS    SET CLASS STRING INTO PSO ELEMENT    22558500
         OI    PSOFLG2,PSOFDONE+PSOF$O SET ADDITIONAL PSO FLAGS         22559000
         MVC   PSOJOBN,JQEJNAME    SET JOB NAME IN PSO ELEMENT          22559500
         MVC   PSOJOBNO,JQEJOBNO   SET JOB NBR IN PSO ELEMENT           22560000
         TM    COQFLAGS,COQCNCL    TEST FOR CANCEL REQUEST              22560500
         BZ    *+12                NO--TEST FOR RE-ROUTING              22561000
         OI    PSOUFLG,PSOFDELC    SET CANCEL REQUIRED                  22561500
         B     COQQUEUE            GO QUEUE ELEMENT TO CHAIN            22562000
         OI    PSOUFLG,PSOFRLSE    SET RELEASE DATA SET                 22562500
         TM    COQFLAGS,COQRTE     TEST FOR RE-ROUTING DESIRED          22563000
         BZ    *+12                NO--GO QUEUE ELEMENT                 22563500
         STH   WA,PSOROUTE         SAVE ROUTE CODE                      22564000
         OI    PSOUFLG,PSOFROUT    AND SET APPROPRIATE FLAG             22564500
COQQUEUE DS    0H                  QUEUE ELEMENT TO END OF CHAIN        22565000
         LR    R15,WD              SAVE ELEMENT ADDRESS                 22565500
         LA    WD,$OQUEUE-(PSONEXT-PSODSECT) POINT TO HEAD OF QUEUE     22566000
         L     R0,PSONEXT          PT TO NEXT ELEMENT                   22566500
         LTR   R0,R0               TEST FOR LAST ELEMENT                22567000
         BZ    *+10                YES--SET NEW LAST ELEMENT            22567500
         LR    WD,R0               PT TO NEXT ELEMENT                   22568000
         B     *-12                AND LOOP TILL LAST ELEMENT           22568500
         ST    R15,PSONEXT         CHAIN ELEMENT INTO                   22569000
         B     COQNEXT             AND GET NEXT JOB                     22569500
         DROP  WD                  DROP PSO ADDRESSABILITY              22570000
         SPACE 2                                                        22570500
*        MESSAGE NO STORAGE AVAILABLE                                   22571000
         SPACE 1                                                        22571500
COQNOSTR DS    0H                                                       22572000
         $CRET MSG='NO STORAGE AVAILABLE'                               22572500
         SPACE 2                                                        22573000
*        $OQ EQUATES                                                    22573500
         SPACE 1                                                        22574000
COQFLAGS EQU   COMEWORK,1          OPTION FLAGS                         22574500
COQCLASS EQU   COMJNAME,8          SAVE AREA FOR CLASS STRING           22575000
COQSVCRD EQU   COMREGSV,4          AREA FOR SAVING CUT-OFF DATE     R41 22575100
COQCLS   EQU   X'80'               FLAG FOR CLASS STRING EXISTS         22575500
COQCNCL  EQU   X'40'               FLAG FOR CANCEL HELD DATA SETS       22576000
COQRTE   EQU   X'20'               FLAG FOR RE-ROUTING DESIRED          22576500
         EJECT                                                 @OZ29819 22577000
         LTORG ,                                                        22577500
 TITLE 'HASP COMMAND PROCESSOR HASPCJB2 - JOB LIST COMMANDS'            22578000
HASPCJB2 $COMGRUP  AJ,AS,AT,CJ,CS,CT,DJ,DS,DT,EJ,HJ,HS,HT,LJ,LS,LT,    C22578500
               PJ,PS,PT,DELAY=YES  DECLARE SUB-PROCESSOR                22579000
*********************************************************************** 22579500
*                                                                     * 22580000
*        JOB NUMBER LISTS ARE OF THE FOLLOWING FORM                   * 22580500
*                                                                     * 22581000
*        $V JXXN1-M1,N2-M2,...,NX-MX                                  * 22581500
*        $V    = HASP COMMAND VERB                                    * 22582000
*        JXX   = JOB, JB, JOBS, ETC. ( J IS ONLY ID REQUIRED )        * 22582500
*        NI-MI ( I=1 TO X ) = PAIR OF START STOP VALUES, IE. 1-10     * 22583000
*              INDICATING THAT JOBS 1,2,3,4,5,6,7,8,9,10 ARE          * 22583500
*              DESIRED. ( -M VALUES ARE OPTIONAL )                    * 22584000
*                                                                     * 22584500
* NOTES                                                               * 22585000
*                                                                     * 22585500
*    (1) A RESPONSE IS REQUIRED FOR EACH JOB                          * 22586000
*                                                                     * 22586500
*    (2) COMNULOP IS USED FOR FLAGS DURING PROCESSING AS FOLLOWS      * 22587000
*                                                                     * 22587500
*              X'80' - A JOB WAS FOUND DURING SCAN FOR JOBS           * 22588000
*              X'40' - THE VERB IS C WITH DUMP SPECIFIED              * 22588500
*              X'02' - THE VERB IS P                                  * 22589000
*              X'01' - THE VERB IS C WITH PURGE SPECIFIED             * 22589500
*                                                                     * 22590000
*        THESE DEFINITIONS MUST NOT BE CHANGED WITHOUT CHANGING       * 22590500
*        THE $JCAN MACRO INSTRUCTION.                                 * 22591000
*                                                                     * 22591500
*********************************************************************** 22592000
CCJFJOBF EQU   X'80'               JOB FOUND FLAG                       22592500
CCJFDUMP EQU   X'40'               VERB IS C WITH DUMP FLAG             22593000
CPJQOPER EQU   X'10'               CANCEL A JOB(S) DATA SETS            22593500
CLJHOLD  EQU   X'04'               LIST HELD DATA SETS FLAG             22594000
CCJFSTOP EQU   X'02'               VERB IS P (STOP) FLAG                22594500
CCJFPURG EQU   X'01'               VERB IS C WITH PURGE FLAG            22595000
CPJQCLS  EQU   COMREGSV,9          SAVE AREA FOR CLASSES TO BE CNCLD    22595500
         CLC   COMVERB(5),=C'PJES2'  CHECK FOR STOP JES2                22596000
         BNE   CAJNJES2            NO--CONTINUE JOB LIST COMMANDS       22596500
         LH    R1,=Y(CPJES2-HASPCSY1)  SET OFFSET TO PROCESSOR          22597000
         L     BASE3,=A(HASPCSY1)  PT TO SUB-PROCESSOR FOR $PJES2       22597500
         ALR   R1,BASE3            COMPUTE ENTRY ADDRESS                22598000
         BR    BASE3               GO STOP JES2                         22598500
CAJNJES2 DS    0H                  NOT $PJES2 COMMAND                   22599000
         CLC   COMVERB(4),=C'LSYS' CHECK FOR LIST SYSTEM STATUS         22599500
         BNE   CAJNLSYS            NO--SKIP SETTING OFFSETS             22600000
         LH    R1,=Y(CLSYS-HASPCSY1) SET OFFSET TO $LSYS PROCESSOR      22600500
         L     BASE3,=A(HASPCSY1)  POINT TO SYSTEM COMMANDS             22601000
         ALR   R1,BASE3            COMPUTE $LSYS ENRTY ADDRESS          22601500
         BR    BASE3               ENTER SYSTEM COMMAND GROUP           22602000
CAJNLSYS DS    0H                  NOT $LSYS COMMAND                    22602500
         LR    WB,R1               SAVE OFFSET TO JOB LIST              22603000
* HIGH BYTE OF COMNULOP IS ZERO                                         22603500
CAJLOOP  L     R1,0(0,WD)          POINT TO OPERAND                     22604000
         CLI   0(R1),C'0'          DOES IT START WITH NUMERIC           22604500
         BNL   CAJLOOPC            IF SO CONTINUE CONVERSION            22605000
         SLR   WC,WC               ASSUME BASE FOR JX...                22605500
         CLI   0(R1),C'J'          IS IT JOB                            22606000
         BE    CAJLOOPC            CONVERT IF YES                       22606500
         LH    WC,=H'10000'        ASSUME BASE FOR SX...                22607000
         CLI   0(R1),C'S'          IS IT STC                            22607500
         BE    CAJLOOPC            CONVERT IF YES                       22608000
         LH    WC,=H'20000'        ASSUME BASE FOR TX...                22608500
         CLI   0(R1),C'T'          IS IT TSU                            22609000
         BE    CAJLOOPC            CONVERT IF YES                       22609500
         CLI   COMVERB,C'C'        CHECK FOR CANCEL OPTIONS             22610000
         BE    CAJCANCL            YES--CHECK FOR CANCEL OPTIONS        22610500
         CLI   COMVERB,C'P'        TEST FOR STOP OPTIONS                22611000
         BE    CAJSTOP             YES--TEST FOR STOP OPTION            22611500
         CLI   COMVERB,C'L'        TEST FOR OPTIONS FOE LIST            22612000
         BNE   CAJINVO             NO-OTHER JOB LISTS HAVE NO OPTION    22612500
         CLI   0(R1),C'H'          TEST FOR REQUEST TO LIST HELD DS     22613000
         BNE   CAJINVO             NO--INVALID LIST OPTION              22613500
         OI    COMNULOP,CLJHOLD    YES--FLAG OPTION FOR HOLD LIST       22614000
         B     CAJADJWF            GO ADJUST OPERAND PTRS               22614500
         SPACE 1                                                        22615000
CAJSTOP  DS    0H                  REQUEST IS AN OPTION FOR STOP JOB    22615500
         CLC   0(2,R1),=C'Q='      TEST FOR CORRECT OPTION              22616000
         BNE   CAJINVO             NO--EXIT IN ERROR                    22616500
         L     R15,4(,WD)          PT TO NEXT OPERAND                   22617000
         SLR   R15,R1              COMPUTE OPERAND                      22617500
         SH    R15,=H'4'           SIZE-LESS 'Q='                       22618000
         BM    CAJINVO             IF NEGATIVE--NO CLASSES EXIST        22618500
         L     R14,=A(CVALIDTB)    POINT TO TEST TABLE               R4 22619000
         EX    R15,CPJQTEST        TEST FOR VALID CLASS STRING          22619500
         BNZ   CAJINVO             INVALID CLASSES                      22620000
         CH    R15,*+10            TEST FOR MAX OF EIGHT CLASSES        22620500
         BNH   *+8                 YES--USE SUBMITTED LENGTH            22621000
         LA    R15,L'CPJQCLS-2     NO--USE MAXIMUM OF EIGHT             22621500
         MVI   CPJQCLS,0           SET SAVE AREA TO ZEROES              22622000
         MVC   CPJQCLS+1(L'CPJQCLS-1),CPJQCLS DITTO                     22622500
         EX    R15,CPJQMVIT        MOVE CLASSES INTO SAVE AREA          22623000
         OI    COMNULOP,CPJQOPER   FLAG GOOD OPERAND FOUND              22623500
         B     CAJADJWF            GO ADJUST OPERAND PTRS               22624000
CPJQTEST TRT   2(*-*,R1),0(R14)    *** EXECUTE ONLY ***              R4 22624500
CPJQMVIT MVC   CPJQCLS(*-*),2(R1)  **** EXECUTE ONLY ****               22625000
         SPACE 1                                                        22625500
CAJCANCL DS    0H                  OPTIONS FOR CANCEL COMMAND           22626000
         OI    COMNULOP,CCJFDUMP   ASSUME OPTION IS 'DUMP'              22626500
         CLI   0(R1),C'D'          TEST FOR SAME                        22627000
         BE    CAJADJWF            IF SO--ADJUST OPERAND PTRS           22627500
         XI    COMNULOP,CCJFDUMP+CCJFPURG SET PURGE OPTION              22628000
         CLI   0(R1),C'P'          TEST FOR SAME                        22628500
         BNE   CAJINVO             NO--INVALID OPTION                   22629000
CAJADJWF DS    0H                  SET THIS OPERAND AS LAST ONE         22629500
         LR    WF,WD               SET THIS AS LAST                     22630000
         SLR   WF,WE               PT TO FIRST                          22630500
         B     CAJGO               GO GET JOB(S)                        22631000
         SPACE 1                                                        22631500
CAJLOOPC $CFCVB POINTER=(WD),NOK=CAJINVO CONVERT NUMBERS TO BINARY      22632000
         LTR   R1,R1               JOB ZERO                          R4 22632500
         BZ    CAJINVO             ERROR IF YES                      R4 22633000
         AR    R0,WC               ADD BASE VALUES                      22633500
         AR    R1,WC               TO HIGH AND LOW                      22634000
         STH   R0,2(0,WD)          STORE FINAL VALUE                    22634500
         STH   R1,0(0,WD)          STORE START VALUE                    22635000
         BXLE  WD,WE,CAJLOOP       COMPLETE FOR ALL STRINGS             22635500
CAJGO    LA    WD,COMPNTER         POINT TO FIRST OPERAND POINTER    R4 22636000
* START STOP VALUES STORED IN OPERAND POINTER AREA                      22636500
CAJLOOPA LH    WC,0(0,WD)          PICK UP FIRST JOB OF PAIR            22637000
CAJLOOPB SLR   R10,R10             ZERO HIT RECORDER                    22637500
         LH    WA,2(0,WD)          SET UPPER BOUND AND RESULT           22638000
         $QSUSE ,                  ENQUEUE ON SHARED RESOURCE           22638500
         SPACE 1                                                        22639000
         $CFJSCAN PROCESS=CAJPRO,NEXT=CAJNEXTJ SCAN THE JOB QUEUE       22639500
         LTR   R1,R10              DID WE GET A HIT                     22640000
         BZ    CAJNEXTP            IF NOT TRY NEXT PAIR                 22640500
         LR    WC,WA               SAVE JOB NUMBER                      22641000
CAJHITA  $CFVQE NOK=CAJNEXT        VERIFY JOB OWNER                     22641500
         OI    COMNULOP,CCJFJOBF   SET JOB FOUND FLAG                   22642000
         BR    WB                  ENTER SELECTED ROUTINE            R4 22642500
CAJINVO  L     R1,0(0,WD)          PICK UP OPERAND ADDRESS              22643000
         $CFINVO OPERAND=(R1)      RETURN WITH INVALID OPERAND          22643500
CAJPRO   LH    R0,JQEJOBNO         PICK UP JOB NUMBER                   22644000
         CR    R0,WC               CHECK AGAINST LOW BOUND              22644500
         BL    CAJNEXTJ            LOOP                                 22645000
         BE    CAJHITA             STOP SCAN ON MATCH                   22645500
         CR    R0,WA               CHECK AGAINST UPPER BOUND            22646000
         BH    CAJNEXTJ            LOOP                                 22646500
         LR    WA,R0               COPY JOB ID                          22647000
         LR    R10,R1              COPY JQE ADDRESS                     22647500
         B     CAJNEXTJ            LOOP                                 22648000
         EJECT                                                          22648500
*********************************************************************** 22649000
*                                                                     * 22649500
*        $A JOB LIST -- RELEASE JOB(S) HELD BY $H JOB, $H ALL,        * 22650000
*              TYPERUN=HOLD, ETC.                                     * 22650500
*                                                                     * 22651000
*********************************************************************** 22651500
CAS      DS    0H                                                       22652000
CAT      DS    0H                                                       22652500
CAJ      MVC   COFQUE-1(10),=C' NOT HELD ' SET MESSAGE                  22653000
         TM    JQEFLAGS,QUEHOLDA+QUEHOLD1  IS JOB HELD                  22653500
         BZ    CAJMSG              IF NOT SEND NOT HELD                 22654000
         NI    JQEFLAGS,255-QUEHOLDA-QUEHOLD1  RELEASE JOB              22654500
         MVC   COFQUE(8),=C'RELEASED' SET MESSAGE                       22655000
         $POST $HASPECF,(JOB,JOT)  POST JOB AND JOT                     22660000
         OI    $AQSE,QSEPJOB+QSEPJOT   CAUSE X SYSTEM POST(S)           22660500
         $QCKPT (R1)               SET CHECKPOINT                       22661000
CAJMSG   LA    WA,COFQUE-COFJOB+9  SET LENGTH OF MESSAGE                22661500
CAJMSGA  MVC   COFJNAME,JQEJNAME   SET JOB NAME                         22662000
         LR    R0,WC               COPY JOB NUMBER                      22662500
SKIP140  MVC   COFJOB,=C'JOB'      SET ID                               22665500
         CH    R0,=H'10000'        CHECK FOR CORRECT                    22666000
         BL    CAJMSGB             IF OK SET NUMERIC                    22666500
         MVC   COFJOB,=C'TSU'      SET ID                               22667000
         SH    R0,=H'20000'        CHECK FOR CORRECT                    22667500
         BNL   CAJMSGB             IF OK SET NUMERIC                    22668000
         MVC   COFJOB,=C'STC'      SET ID                               22668500
         AH    R0,=H'10000'        SET NUMERIC                          22669000
CAJMSGB  $CFCVE VALUE=(R0)         CONVERT TO EBCDIC                    22669500
         MVC   COFJNO,COMDWORK     MOVE NUMBER                          22670000
         MVI   COFJNAME-1,C' '     SET BLANK                            22670500
         NI    COMMID+1,X'FE'      INDICATE JOB ID SET                  22671000
         $CWTO L=(WA)              DISPLAY MESSAGE                      22671500
CAJNEXT  LA    WC,1(0,WC)          NEXT NUMBER OF SEQUENCE              22672000
         CH    WC,2(0,WD)          CHECK FOR END OF PAIR                22672500
         BNH   CAJLOOPB            IF NOT, WORK ON NEXT JOB             22673000
CAJNEXTP BXLE  WD,WE,CAJLOOPA      GO TO NEXT PAIR IF PRESENT           22673500
         TM    COMNULOP,CCJFJOBF   TEST JOB FOUND FLAG                  22674000
         BO    CAJRET              IF ON, EXIT                          22674500
         $CRET MSG='JOB(S) NOT FOUND'                                   22675000
CAJRET   $CRET ,                   EXIT                                 22675500
         EJECT                                                          22676000
*********************************************************************** 22676500
*                                                                     * 22677000
*        $C JOB LIST -- CANCEL JOB, DELETE APPROPRIATE PRINT/PUNCH    * 22677500
*              FUNCTION AND DELETE JOB                                * 22678000
*                                                                     * 22678500
*********************************************************************** 22679000
CCS      DS    0H                                                       22679500
CCT      DS    0H                                                       22680000
CCJ      SLR   R0,R0               ZERO OPTION REGISTER                 22680500
         IC    R0,COMNULOP         PICK UP REQUEST OPTIONS              22681000
        $JCAN  JQE=(R1),NOTJOB=CCNOTCAN,OK=CDJ  CANCEL JOB          R41 22681500
         SPACE 4                                                    R41 22681800
CCNOTCAN MVC   COFQUE-1(15),=C' NON-CANCELABLE'  SET MESSAGE        R41 22681900
         LA    WA,COFQUE+14-COFJOB                AND LENGTH        R41 22682000
         B     CAJMSGA             ISSUE DIAGNOSTIC AND CONTINUE    R41 22682100
         EJECT                                                          22682200
*********************************************************************** 22682500
*                                                                     * 22683000
*        $D JOB LIST -- DISPLAY JOB(S)                                * 22683500
*                                                                     * 22684000
*********************************************************************** 22684500
CDS      DS    0H                                                       22685000
CDT      DS    0H                                                       22685500
CDJ      $CFJMSG ,                 DISPLAY JOB INFORMATION              22686000
         B     CAJNEXT             GO TO NEXT JOB                       22686500
         EJECT                                                          22687000
*********************************************************************** 22687500
*                                                                     * 22688000
*        $H JOB LIST -- HOLD JOB(S), PREVENT FURTHER PROCESSING       * 22688500
*                                                                     * 22689000
*********************************************************************** 22689500
CHS      DS    0H                                                       22690000
CHT      DS    0H                                                       22690500
CHJ      OI    JQEFLAGS,QUEHOLD1   SET HOLD BIT ON                      22691000
CHJCKPT  $QCKPT (R1)               SET CHECKPOINT                       22691500
         B     CDJ                 DISPLAY JOB                          22692000
         EJECT                                                          22692500
*********************************************************************** 22693000
*                                                                     * 22693500
*        $P JOB LIST -- STOP JOB WHEN CURRENT ACTIVITY IS COMPLETE    * 22694000
*                                                                     * 22694500
*********************************************************************** 22695000
CPS      DS    0H                  STOP A STC                           22695500
CPT      DS    0H                  STOP A TSU                           22696000
CPJ      DS    0H                  STOP A JOB                           22696500
         TM    COMNULOP,CPJQOPER   TEST FOR REQUEST TO CANCEL OUTPUT    22697000
         BO    CPJQCAN             YES--CANCEL SELECTED CLASSES         22697500
         OI    COMNULOP,CCJFSTOP   ELSE FLAG STOP JOB,STC,OR TSU        22698000
         B     CCJ                 AND ENTER CANCEL ROUTINE             22698500
         EJECT                                                          22699000
*********************************************************************** 22699500
*                                                                     * 22700000
*        REQUEST IS TO CANCEL CLASS(ES) OF OUTPUT                     * 22700500
*        FOR A JOB, STC, OR A TSU                                     * 22701000
*                                                                     * 22701500
*********************************************************************** 22702000
         SPACE 1                                                        22702500
CPJQCAN  DS    0H                  CANCEL INACTIVE OUTPUT               22703000
        $QSUSE                     REQUEST ACCESS TO CKPT DATA      R41 22703100
         STM   WB,WE,COMWREGS      SAVE REGISTERS FOR WORK              22703500
         ST    WF,COMFWORK         SAVE CLASS POINTER REGISTER          22704000
         SLR   WA,WA               ZERO JOE REMOVED REGISTER            22704500
         LR    WB,R1               SAVE JQE ADDRESS FOR TESTING         22705000
         LA    WF,CPJQCLS          POINT TO CLASS LIST                  22706000
CPJQLOOP DS    0H                  LOOP THROUGH ALL CLASS(ES)           22706500
         ICM   WC,1,0(WF)          PICK-UP NEXT CLASS CHARACTER         22707000
         BZ    CPJQEND             IF LAST -- EXIT ROUTINE              22707500
         N     WC,=A(255-X'C0')    TURN 'OFF' HIGH ZONE(S)              22708000
         L     R14,=A(CPQTABLE-1)  PT TO CLASS CONVERT TABLE            22708500
         IC    WC,0(WC,R14)        PICK-UP CORRESPONDING JOT OFFSET     22709000
         IC    R0,0(,WF)           PICK-UP ACTUAL CLASS CHARACTER       22709500
         LA    WF,1(,WF)           PT TO NEXT CLASS CHARACTER           22710000
CPJQJOT  DS    0H                  ENTER JOT SCAN ROUTINE               22710500
         L     WD,CDFJOT           POINT TO THE JOT                     22711000
         PUSH  USING               SAVE CURRENT USING STATUS            22711500
         USING JOTDSECT,WD         JOT ADDRESSABILITY                   22712000
         USING JOEDSECT,R1         JOE ADDRESSABILITY                   22712500
         SLR   R15,R15             ZERO JOE OFFSET REGISTER             22713000
         LA    R1,JOTCLSQ-(JOENEXT-JOEDSECT)(WC) POINT TO HEAD OF Q     22713500
CPJQNXJO LH    R1,JOENEXT          GET OFFSET TO NEXT JOE               22714000
         N     R1,=A(X'0000FFFF')  INSURE OFFSET IS POSITIVE            22714500
         BZ    CPJQLOOP            IF LAST JOE--LOOP FOR MORE CLSES     22715000
         SLL   R1,2                EXPAND TO BYTE OFFSET             R4 22715500
         ALR   R1,WD               COMPUTE JOE ADDRESS                  22716000
         TM    JOEFLAG,$JOEBUSY    TEST FOR JOE BUSY                    22716500
         BNZ   CPJQNXJO            YES--GET NEXT JOE                    22717000
         LH    R14,JOEJQE          POINT TO JQE OFFSET                  22717500
         SLL   R14,2               COMPUTE ACTUAL JQE OFFSET ( * 4)     22718000
         AL    R14,$JOBQPTR        COMPUTE JQE ADDRESS                  22718500
         CLR   WB,R14              CHECK FOR DESIRED JOB                22719000
         BNE   CPJQNXJO            NO--GET NEXT JOE                     22719500
*              THIS LINE DELETED BY APAR NUMBER                @OZ24821 22719700
*              THIS LINE DELETED BY APAR NUMBER                @OZ24821 22719800
*              THIS LINE DELETED BY APAR NUMBER                @OZ24821 22719900
         LR    WE,R0               SAVE CLASS IN WE            @OZ24821 22720000
         LR    WA,R1               SAVE JOE ADDRESS                 R41 22720100
         $#REM WORK=(R1)           REMOVE JOE FROM JOT                  22720500
         LR    R1,WA               RELOAD JOE ADDRESS               R41 22720600
         LR    R0,WE               RESTORE CLASS TO R0                  22721000
         LR    WA,WF               SET JOE REMOVED REGISTER             22721500
         TM    JOEFLAG,$JOESPIN    IS THIS A SPIN DATA SET...       R41 22721600
         BZ    CPJQJOT             BR IF NO                         R41 22721700
         L     R15,=A($IOTPUR)     GET ADDR OF IOT PURGE RTN        R41 22721800
         BALR  R14,R15             GO TO PURGE SPIN DS TRACKS       R41 22721900
         B     CPJQJOT             AND GET NEXT JOE                     22722000
         POP   USING               RESTORE USING'S                      22745500
         SPACE 1                                                        22746000
CPJQEND  DS    0H                  END OF JOE REMOVE ROUTINE            22746500
         LR    R1,WB               RESTORE JQE POINTER                  22747000
         LM    WB,WE,COMWREGS      RESTORE REGISTERS                    22747500
         L     WF,COMFWORK         RELOAD SAVED REGISTER                22748000
         LTR   WA,WA               TEST FOR ANY JOES REMOVED            22748500
         BZ    CPJQNONE            NO--SEND DIAGNOSTIC                  22749000
         MVC   COFQUE-1(20),=C' DATA SETS CANCELLED'  SET MESSAGE       22749500
         LA    WA,COFQUE-COFJOB+19 SET MESSAGE LENGTH                   22750000
         B     CAJMSGA             GO ISSUE MESSAGE                     22750500
CPJQNONE DS    0H                  NO JOES WERE CANCELLED               22751000
         MVC   COFQUE-1(23),=C' NO DATA SETS CANCELLED' SET DIAG        22751500
         LA    WA,COFQUE-COFJOB+22 SET MESSAGE LENGTH                   22752000
         B     CAJMSGA             GO ISSUE MESSAGE                     22752500
         EJECT                                                          22753000
*********************************************************************** 22753500
*                                                                     * 22754000
*        $E JOB LIST -- RESTART JOB CURRENTLY IN EXECUTION            * 22754500
*                                                                     * 22755000
*********************************************************************** 22755500
CEJ      CLI   JQETYPE,$XEQ        TEST FOR CONVERTING                  22756000
         BE    CEJERR              IF SO -- ERROR                       22756500
         TM    JQETYPE,$XEQ        TEST FOR EXECUTING                   22757000
         BZ    CEJERR              NO -- ERROR                          22757500
         TM    JQEFLAGS,QUEBUSY    ACTIVE IN EXECUTION                  22758000
         BZ    CEJERR              NO--ERROR                            22758500
         CLC   JQEJOBNO,=H'10000'  JOB IN NORMAL BATCH RANGE            22759000
         BNL   CEJERR              ERROR IF NOT                         22759500
         L     WA,$PITABLE         GET ADDRESS OF FIRST PIT             22760000
         USING PITDSECT,WA         PROVIDE PIT ADDRESSABILITY           22760500
CEJLOOPE TM    PITSTAT,PITBUSY     TEST FOR PIT IN USE                  22761000
         BZ    CEJNPIT             BR IF NO                             22761500
         CLC   JQEJOBNO,=H'10000'  JOB IN NORMAL RANGE                  22762000
         BNL   CEJERR              ERROR IF NOT                         22762500
         L     R14,PITSJB          GET ADDRESS OF SJB                   22763000
         CLM   R1,7,SJBJQE+1-SJBDSECT(R14)  COMPARE JQE ADDRESSES       22763500
         BE    CEJE                BR IF FOUND THE JOB                  22764000
CEJNPIT  ICM   WA,15,PITNEXT       POINT TO NEXT PIT                 R4 22764500
         BNZ   CEJLOOPE            BR IF VALID PIT ADDRESS           R4 22765000
         B     CEJERROR            IF NOT FOUND BUT ACTIVE SEND DIAG    22765500
         DROP  WA                  KILL PIT ADDRESSABILITY              22766000
CEJERR   MVC   COFQUE-1(16),=C' NOT RESTARTABLE' SET MESSAGE            22766500
         LA    WA,COFQUE-COFJOB+15 SET LENGTH                           22767000
         B     CAJMSGA             DISPLAY MESSAGE                      22767500
CEJE     OI    SJBFLG1-SJBDSECT(R14),SJB1EJOB  SET FOR RESTART          22768000
         B     CDJ                 ENTER DISPLAY JOB                    22768500
CEJERROR DS    0H                  SEND DIAGNOSTIC                      22769000
         MVC   COFQUE-1(18),=C' NOT EXECUTING ON ' SET MSG BODY         22769500
         MVC   COFQUE+17(L'$SID),$SID  SET END OF MESSAGE               22770000
         LA    WA,COFQUE+17+L'$SID-COFJOB  SET LENGTH                   22770500
         B     CAJMSGA             EXIT WITH DIAGNOSTIC                 22771000
         EJECT                                                          22771500
*********************************************************************** 22772000
*                                                                     * 22772500
*        $L JOB LIST -- LIST JOB,STC,OR TSU OUTPUT                    * 22773000
*                       INCLUDES READY AND HELD DATA SETS             * 22773500
*                                                                     * 22774000
*********************************************************************** 22774500
         SPACE 1                                                        22775000
CLT      DS    0H                  DEFINE A COMMON ENTRY POINT          22775500
CLS      DS    0H                  FOR TIME SHARING USERS SYSTEM        22776000
CLJ      DS    0H                  CONTROL TASKS AND BATCH JOBS         22776500
         MVI   COMMAND,C' '        SET MSG AREA TO ALL BLANKS           22777000
         MVC   COMMAND+1(L'COMMAND-1),COMMAND MORE OF ABOVE             22777500
         NI    COMMID+1,X'FE'      INDICATE TO HASPCON JOB ID SET       22778000
         LR    R0,WC               GET CURRENT TASK NUMBER              22778500
         MVC   COFJOB,=C'JOB'      ASSUME BATCH JOB                     22779000
         CH    R0,=H'10000'        TEST FOR BATCH JOB                   22779500
         BL    CLJMSGC             YES--CONTINUE MSG                    22780000
         MVC   COFJOB,=C'TSU'      ASSUME TIME SHARING USER             22780500
         SH    R0,=H'20000'        TEST FOR TSU                         22781000
         BNM   CLJMSGC             YES--CONTINUE MESSAGE                22781500
         MVC   COFJOB,=C'STC'      NO--MUST BE SYSTEM CNTRL TASK        22782000
         AH    R0,=H'10000'        READJUST NUMBER FOR IT               22782500
CLJMSGC  DS    0H                  CONTINUE MSG PREFIX                  22783000
         $CFCVE    VALUE=(R0)      CONVERT THE NBR TO EBCDIC            22783500
         MVC   COFJNO,COMDWORK     AND MOVE IT TO THE MSG               22784000
         MVC   COFJNAME,JQEJNAME   INSERT THE JOB NAME                  22784500
         TM    COMNULOP,CLJHOLD    TEST FOR HELD REQUEST                22785000
         BO    CLJHLDDS            YES--LIST HELD DATA SETS FOR JOB     22785500
         MVC   COFQUE(6),=CL6'READY'   SET JOE QUEUE ID                 22786000
         LA    WA,COFQUE+6         POINT TO NEXT AVAILABLE BYTE         22786500
         STM   WB,WE,COMWREGS      SAVE REGISTERS FOR WORK              22787000
*********************************************************************** 22787500
*                                                                     * 22788000
*        SCAN JOES AND COUNT ANY BELONGING TO THIS JOB                * 22788500
*                                                                     * 22789000
*********************************************************************** 22789500
         USING JOTDSECT,WB         SET                                  22790000
         USING JOEDSECT,WC         ADDRESSABILITIES                     22790500
         SLR   WD,WD               START JOES WITH CLASS A              22791000
         SLR   WE,WE               ZERO JOE FOUND REGISTER              22791500
         L     WB,CDFJOT           POINT TO THE JOT                     22792000
*                                    THIS LINE DELETED BY APAR @OZ20010 22792100
*                                    THIS LINE DELETED BY APAR @OZ20010 22792200
*                                    THIS LINE DELETED BY APAR @OZ20010 22792300
CLJOLOOP DS    0H                  LOOP THROUGH JOES                    22792500
         SLR   R15,R15             ZERO COUNTER FOR THIS CLASS          22793000
         LA    WC,JOTCLSQ-(JOENEXT-JOEDSECT)(WD) POINT TO CLS Q         22794000
CLJOES   LH    WC,JOENEXT          GET OFFSET TO NEXT JOE               22794500
         N     WC,=A(X'0000FFFF')  INSURE OFFSET IS POSITIVE            22795000
         BZ    CLJENDJO            LAST IN THIS CLASS -- EXIT           22795500
         SLL   WC,2                EXPAND TO BYTE OFFSET             R4 22796000
         ALR   WC,WB               COMPUTE ADDRESS OF JOE               22796500
         LH    R0,JOEJQE           PICK-UP JQE OFFSET                   22797000
         SLL   R0,2                COMPUTE ACTUAL JQE OFFSET ( * 4)     22797500
         AL    R0,$JOBQPTR         COMPUTE JQE ADDRESS                  22798000
         CLR   R1,R0               IS IT MY JOE                         22798500
         BNE   CLJOES              NO--GET THE NEXT IN THIS CLASS       22799000
         LA    R15,1(,R15)         YES--COUNT IT                        22799500
         B     CLJOES              AND CONTINUE TO LOOK AT JOES         22800000
         DROP  WB,WC               DROP ADDRESSABILITIES                22815500
CLJENDJO DS    0H                  COME HERE WHEN END OF CLASS          22816000
         LTR   R0,R15              TEST FOR ANY HITS                    22816500
         BZ    CLJNXJOE            NO--GET NEXT CLASS                   22817000
         LR    WE,WF               SET JOE FOUND                        22817500
         LR    R14,WD              PUT JOE CLASS OFFSET INTO WORK       22818500
         SRA   R14,1               DIVIDE BY TWO FOR OFFSET INTO TBL    22819000
         IC    R14,CLJHLDTB(R14)   PICK-UP ACTUAL CLASS CHARACTER       22819500
         STC   R14,0(,WA)          SAVE CHARACTER IN MESSAGE            22820000
         MVC   1(3,WA),=C'=**'     SET PATTERN IN MSG                   22820500
         CH    R0,=H'100'          CHK FOR MAX JOE COUNT EXCEEDED       22821000
         BNL   CLJOVJOE            YES--SKIP INSERTION OF COUNT         22821500
         $CFCVE VALUE=(R0)         CONVERT HITS TO EBCDIC VALUE         22822500
         MVC   2(2,WA),COMDWORK+3  AND PLACE RESULT IN MSG              22823000
CLJOVJOE LA    WA,5(,WA)           STEP TO NEXT MSG BYTE                22823500
         BAL   R15,CLJCKMSG        AND TEST FOR $WTO NEEDED             22824000
CLJNXJOE LA    WD,2(,WD)           POINT TO NEXT CLASS                  22824500
         CH    WD,=Y(L'JOTRDYWQ-2) END OF CLASSES                    R4 22825000
         BL    CLJOLOOP              BR IF NO TO RESUME SACN   @OZ20010 22825500
         LTR   WE,WE               TEST FOR ANY JOE(S) FOUND            22826000
         BNZ   CLJRDYND            YES--SKIP DIAGNOSTIC                 22826500
         MVC   COFQUE(18),=C'NO READY DATA SETS'  SET DIAGNOSTIC        22827000
         LA    WA,COFQUE+18        SET END OF DIAG ADDRESS              22827500
         EJECT                                                          22828000
*********************************************************************** 22828500
*                                                                     * 22829000
*        MESSAGE LENGTH AND $WTO PORTION                              * 22829500
*                                                                     * 22830000
*********************************************************************** 22830500
CLJRDYND DS    0H                  END OF READY DISPLAY                 22831000
         LM    WB,WE,COMWREGS      RESTORE WORK REGISTERS               22831500
         SPACE 1                                                        22832000
CLJWTO   DS    0H                  ISSUE WTO FOR $L COMMAND             22832500
         LA    R14,COMMAND         POINT TO BEGINNING OF AREA           22833000
         LR    R0,WA               POINT TO END OF MESSAGE              22833500
         SLR   R0,R14              COMPUTE MESSAGE LENGTH               22834000
CLJ$WTO  $CWTO L=(R0)              ISSUE MESSAGE                        22834500
         B     CAJNEXT             AND GET NEXT JOB                     22835000
         SPACE 1                                                        22835500
CLJCKMSG DS    0H                  CKECK CURRENT MESSAGE LENGTH         22836000
         LA    R14,COMMAND+64      SET END ADDR OF LARGEST MESSAGE      22836500
         CLR   WA,R14              CHECK CURRENT LENGTH                 22837000
         BLR   R15                 IF LESS THAN THIS -- RETURN          22837500
         ST    R15,COMFWORK        ELSE SAVE REGISTERS                  22838000
         ST    R1,COMDWORK         SAVE R1 AS WELL                  R41 22838500
         LR    R0,WA               GET END ADDRESS                      22839000
         LA    R14,COMMAND         GET BEGINNING ADDRESS                22839500
         SLR   R0,R14              COMPUTE LENGTH                       22840000
         $CWTO L=(R0)              SEND MESSAGE                         22840500
         L     R15,COMFWORK        RESTORE R15                          22841000
         L     R1,COMDWORK         RESTORE R1                       R41 22841500
         MVI   COMMAND,C' '        CLEAR MESSAGE AREA                   22842000
         MVC   COMMAND+1(L'COMMAND-1),COMMAND  DITTO                    22842500
         NI    COMMID+1,X'FE'      INDICATE JOB ID IS SET               22843000
         LA    WA,COFQUE           POINT TO FIRST FREE MESSAGE AREA     22843500
         BR    R15                 AND RETURN                           22844000
         SPACE 2                                                        22844500
*********************************************************************** 22845000
*                                                                     * 22845500
*        LIST HELD DATA SETS FOR JOB(S)                               * 22846000
*                                                                     * 22846500
*********************************************************************** 22847000
         SPACE 1                                                        22847500
CLJHLDDS DS    0H                  LIST HELD DATA SETS                  22848000
         LH    WA,JQEHLDCT         GET POSSIBLE HOLD COUNT              22848500
         LTR   WA,WA               TEST FOR ANY                         22849000
         BZ    CLJNOHLD            NONE--DISPLAY DIAGNOSTIC             22849500
         STM   R14,R12,COMREGSV    ELSE SAVE REGISTRES                  22850000
         MVI   CLJCLAS,0           ZERO CLASS SAVE AREA                 22850500
         MVC   CLJCLAS+1(L'CLJCLAS-1),CLJCLAS  DITTO                    22851000
         ST    R1,CLJJQE           SAVE JQE ADDRESS                     22851500
         LA    R1,CLJJQE           POINT TO PARAMETER LIST              22852000
         SPACE 1                                                        22852500
         $LINK HASPLIST            ENTER HOLD DATA SET PROCESSOR        22853000
         SPACE 1                                                        22853500
         LM    R14,R12,COMREGSV    RESTORE REGISTERS                    22854000
         MVC   COFQUE(5),=CL5'HELD'  SET MESSAGE HEADER                 22854500
         LA    WA,COFQUE+5         POINT TO NEXT MESSAGE AREA           22855000
         SLR   WC,WC               ZERO INSERT REGISTER                 22855500
         SLR   R1,R1               ZERO TABLE(S) INDEX REGISTER         22856000
         BCTR  R1,0                LESS ONE FOR START                   22856500
         LA    WE,1                SET INCREMENT                        22857000
         LA    WF,35               SET COMPORAND                        22857500
CLJHLDLP DS    0H                  SCAN THE TABLE FOR HOLD COUNTS       22858000
         BXH   R1,WE,CLJHLDND      LOOP TROUGH CLASS FIELDS             22858500
         LR    R14,R1              PUT CLASS OFFSET INTO WORK REG       22859000
         SLL   R14,1               MULTIPLY BY TWO FOR HALFWORD AREA    22859500
         LH    WC,CLJCLAS(R14)     PICK-UP POSSIBLE HOLD COUNT          22860000
         LTR   WC,WC               TEST FOR ANY HELD DATA SETS          22860500
         BZ    CLJHLDLP            NONE OF THIS CLASS -- LOOP           22861000
         IC    R0,CLJHLDTB(R1)     PICK-UP CLASS CHARACTER              22861500
         STC   R0,0(,WA)           PLACE CHARACTER IN MESSAGE AREA      22862000
         MVI   1(WA),C'='          SET EQUAL SIGN FOR MESSAGE           22862500
         $CFCVE VALUE=(WC)         CONVERT COUNT TO DISPLAYABLE FORM    22863000
         MVC   2(3,WA),COMDWORK+2  COMPLETE MSG -- 'CLASS=NNN'          22863500
         LA    WA,6(,WA)           POINT TO NXT AVAIL. MSG AREA         22864000
         BAL   R15,CLJCKMSG        GO TEST FOR POSSIBLE $WTO            22864500
         B     CLJHLDLP            AND LOOP THROUGH ALL 36 CLASSES      22865000
         SPACE 2                                                        22865500
*        EXIT LIST HOLD DATA SETS ROUTINE                               22866000
         SPACE 1                                                        22866500
CLJHLDND DS    0H                  END OF HELD DATA SETS                22867000
         LR    R14,WA              SAVE WA OVER 'LM'                    22867500
         LM    R15,R12,COMREGSV+4  RESTORE REGSITERS                    22868000
         LR    WA,R14              RESTORE WA                           22868500
         B     CLJWTO              AND EXIT AFTER $WTO                  22869000
         SPACE 2                                                        22869500
*        SEND DIAGNOSTIC 'NO HELD DATA SETS'                            22870000
         SPACE 1                                                        22870500
CLJNOHLD DS    0H                  SEND MESSAGE 'NO HELD DATA SETS'     22871000
         MVC   COFQUE(17),=C'NO HELD DATA SETS'  CREATE DIAGNOSTIC      22871500
         LA    R0,COFQUE+17-COMMAND  SET MESSAGE LENGTH                 22872000
         B     CLJ$WTO             AND ISSUE DIAGNOSTIC                 22872500
         SPACE 2                                                        22873000
*        CLASS CONVERT TABLE                                            22873500
         SPACE 1                                                        22874000
CLJHLDTB DC    C'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'                  22874500
         EJECT                                                          22875000
         SPACE 2                                                        22875500
*********************************************************************** 22876000
*                                                                     * 22876500
*        EQUATES FOR $L COMMAND                                       * 22877000
*                                                                     * 22877500
*********************************************************************** 22878000
CLJJQE   EQU   COMREGSV+15*4,4     SAVE AREA FOR JQE ADDRESS            22878500
CLJCLAS  EQU   CLJJQE+4,72         SAVE AREA FOR CLASS COUNTS           22879000
         SPACE 2                                                        22879500
         LTORG ,                                                        22880000
         TITLE 'HASP COMMAND PROCESSOR HASPCJB3 - MISC. JOB COMMANDS'   22880500
HASPCJB3 $COMGRUP  A7D,C7D,D7D,E7D,H7D,L7D,O7D,P7D,T7D  JOB CMNDS       22881000
CD7D     DS    0H                  ENTRY PT FOR DISPLAY BY NAME         22881500
CA7D     EQU   CD7D                ENTRY PT FOR RELEASE BY NAME         22882000
CC7D     EQU   CD7D                ENTRY PT FOR CANCEL BY NAME          22882500
CE7D     EQU   CD7D                ENTRY PT FOR RESTART BY NAME         22883000
CH7D     EQU   CD7D                ENTRY PT FOR HOLD BY NAME            22883500
CL7D     EQU   CD7D                ENTRY PT FOR LIST BY NAME            22884000
CO7D     EQU   CD7D                ENTRY PT FOR OUTPUT BY NAME          22884500
CP7D     EQU   CD7D                ENTRY PT FOR STOP BY NAME            22885000
CT7D     EQU   CD7D                ENTRY PT FOR MODIFY BY NAME          22885500
*********************************************************************** 22886000
*                                                                     * 22886500
*        $D 'JOBNAME' -- DISPLAY JOB INFORMATION FOR JOB(S)           * 22887000
*                                                                     * 22887500
*********************************************************************** 22888000
         L     R1,0(,WD)           PICK-UP START OF OPERAND             22888500
         L     WC,4(0,WD)          PICK UP END OF OPERAND + 2           22889000
         ST    WD,COMFWORK         SAVE FIRST OPERAND POINTER POINTER   22889500
         CLI   COMVERB,C'P'        IS OPTION FOR $PJOB                  22890000
         BNE   CD7DCN              NO--TRY OPTIONS FOR CANCEL JOB       22890500
         CLC   0(2,WC),=C'Q='      CHECK FOR CANCEL OF OUTPUT CLSES     22891000
         BNE   CD7DNL              NO--MUST BE $P WITH NO OPERANDS      22891500
         L     R15,8(,WD)          YES--POINT TO LAST OPERAND           22892000
         SLR   R15,WC              COMPUTE OPERAND LENGTH               22892500
         SH    R15,=H'4'           COMPUTE STRING SIZE LESS ONE         22893000
         BM    CD7DINVC            IF NEGATIVE--NO STRING               22893500
         L     R14,=A(CVALIDTB)    POINT TO TEST TABLE               R4 22894000
         EX    R15,CD7DCTST        TEST FOR VALIS CLASS STRING          22894500
         BNZ   CD7DINVC            IF NOT VALID CHARACTERS--ERROR       22895000
         CH    R15,*+10            TEST FOR MAXIMUM LENGTH              22895500
         BNH   *+8                 NOT GREATER--USE PRESENTED LENGTH    22896000
         LA    R15,L'CPJQCLS-2     ELSE USE MAXIMUM LENGTH              22896500
         MVI   CPJQCLS,0           SET SAVE AREA TO                     22897000
         MVC   CPJQCLS+1(L'CPJQCLS-1),CPJQCLS ZEROES                    22897500
         EX    R15,CD7DCMV         MOVE STRING INTO SAVE AREA           22898000
         OI    COMNULOP,CPJQOPER   SET OPTION FLAG FOR OUTPUT CANCEL    22898500
         B     CD7DNL              AND CONTINUE                         22899000
CD7DINVC DS    0H                  INVALID OPERAND IN CLASS STRING      22899500
         L     R1,4(,WD)           POINT TO INVALID OPERAND          R4 22900000
         B     CD7DINV             AND BRANCH TO ERROR RTN              22900500
CD7DCTST TRT   2(*-*,WC),0(R14)    *** EXECUTE ONLY ***              R4 22901000
CD7DCMV  MVC   CPJQCLS(*-*),2(WC)  **** EXECUTE ONLY ****               22901500
CD7DCN   DS    0H                  TRY CANCEL OPTIONS                   22902000
         CLI   COMVERB,C'C'        TEST FOR CANCEL VERB                 22902500
         BNE   CD7DA               NO--TRY OTHERS                       22903000
         OI    COMNULOP,CCJFDUMP   ASSUME DUMP REQUESTED                22903500
         CLI   0(WC),C'D'          IS DUMP REQUESTED                    22904000
         BE    CD7DNL              SKIP NEXT IF SO                      22904500
         XI    COMNULOP,CCJFPURG+CCJFDUMP ASSUME PURGE                  22905000
         CLI   0(WC),C'P'          IS PURGE REQUESTED                   22905500
         BE    CD7DNL              SKIP NEXT IF SO                      22906000
         XI    COMNULOP,CCJFPURG   SET NO 'PURGE' OPERAND               22906500
         B     CD7DNL              NO--MUST BE CANCEL WITH NO OPERND    22907000
CD7DA    DS    0H                  CHECK FOR $L'JOBNAME',HOLD           22907500
         CLI   COMVERB,C'L'        CHECK FOR $L COMMAND                 22908000
         BNE   CD7DNL              NO--SKIP REST OF TESTS               22908500
         CLI   0(WC),C'H'          TEST FOR LIST HOLD DATA SETS         22909000
         BNE   CD7DNL              NO--ASSUME REQ FOR READY D SETS      22909500
         OI    COMNULOP,CLJHOLD    SET SWITCH TO LIST HELD DATA SETS    22910000
CD7DNL   DS    0H                  NOT $L'JOBNAME',HOLD                 22910500
         MVC   COMJNAME,=CL8' '    SET JOBNAME TO BLANKS                22911000
         BCTR  WC,0                POINT TO END + 1                     22911500
         BCTR  WC,0                POINT TO END                         22912000
         MVC   COMFWORK(1),COMVERB SAVE THE VERB                        22912500
         SR    WD,WD               ZERO QUEUE POINTER                   22913000
         CLI   0(WC),C''''         DOES OPERAND END WITH APOSTROPHI     22913500
         BNE   *+6                 SKIP NSI IF NOT                      22914000
         BCTR  WC,0                POINT TO END OF NAME                 22914500
         SR    WC,R1               GET LENGTH OF JOB NAME               22915000
         BNP   CD7DINV             IF NOT POSITIVE, ERROR               22915500
         BCTR  WC,0                SET MACHINE LENGTH                   22916000
         LA    R0,7                SET MAXIMUM MACHINE LENGTH           22916500
         CR    WC,R0               IS LENGTH TOO LONG                   22917000
         BNH   *+6                 IF NOT, SKIP                         22917500
         LR    WC,R0               SET TO MAXIMUM LENGTH                22918000
         EX    WC,CA7DMVC          MOVE NAME                            22918500
CA7DDUP  DS    0H                  RESCAN AFTER DUPLICATE ERROR         22919000
         $CFJSCAN PROCESS=CD7DPRO,EMPTY=CD7DNFND,IGNORE=CD7DL,         C22919500
               NEXT=CD7DNXT        SCAN THE JOB QUEUE FOR MATCHING JOBS 22920000
         CLI   COMFWORK,C'D'       IS THIS DISPLAY COMMAND              22920500
         BNE   CA7DSET             SET FOR XCTL TO ROUTINE              22921000
         $CRET ,                   RETURN                               22921500
CD7DPRO  NULL                                                           22922000
         CLC   COMJNAME,JQEJNAME   COMPARE FOR MATCH                    22922500
         BNE   CD7DL               LOOP IF NO MATCH                     22923000
         CLI   COMFWORK,C'D'       IS THIS DISPLAY COMMAND              22923500
         BNE   CA7DXIT             IF NOT EXIT FOR OTHER COMMANDS       22924000
         LR    WC,R1               SAVE CURRENT LOCATION                22924500
         L     WB,COMFWORK         SAVE CONTENTS OF COMFWORK         R4 22925000
         $CFJMSG JOBQE=(R1),TYPE=CALL  DISPLAY JOB INFO                 22925500
         ST    WB,COMFWORK         RESTORE COMFWORK                  R4 22926000
         $CFJSCAN PROCESS=CD7DCK,NEXT=CD7DCKL,STORE=NO CK CHAIN         22926500
CD7DNTFD DS    0H                  CHAIN IS BROKEN                      22927000
         $CRET MSG='LIST INCOMPLETE'                                    22927500
CD7DCK   CR    WC,R1               HAVE WE MET THE LAST JOB DISPLAYED   22928000
         BNE   CD7DCKL             IF NOT, LOOK FURTHER                 22928500
         CH    R15,COMJQHDS        TEST FOR JOB ON SAME QUEUE           22929000
         BNE   CD7DNTFD            NO -- CHAIN IS BROKEN                22929500
         B     CD7DNXT             NEXT JOB PLEASE                      22930000
CD7DNFND MVC   COMMAND(8),COMJNAME MOVE NAME                            22930500
         MVC   COMMAND+8(14),=C' JOB NOT FOUND' SET EXPLANATION         22931000
         $CRET L=22                SEND THE MESSAGE                     22931500
CD7DINVO L     R1,0(0,WD)          POINT TO OPERAND                     22932000
CD7DINV  $CFINVO OPERAND=(R1)      ERROR -- EXIT ...                    22932500
CA7DMVC  MVC   COMJNAME(*-*),1(R1) MOVE NAME                            22933000
         EJECT                                                          22933500
*********************************************************************** 22934000
*                                                                     * 22934500
*        ROUTINE TO CONVERT $A,$C,$E,$H,$P 'JOBNAME' COMMANDS         * 22935000
*        TO CORRESPONDING $VJ... COMMANDS                             * 22935500
*                                                                     * 22936000
*********************************************************************** 22936500
CA7DXIT  LTR   WD,WD               QUEUE POINTER STILL ZERO             22937000
         LR    WD,R1               ASSUME YES                           22937500
         BZ    CD7DNXT             SIGNAL FOUND AND CONTINUE SCAN       22938000
         MVC   COMMAND+12(20),=C' MULTIPLE JOBS FOUND' SET DIAG         22938500
         $CWTO L=12+20             SEND MESSAGE                         22939000
         MVI   COMFWORK,C'D'       CONVERT FLAG TO $D                   22939500
         B     CA7DDUP             START SCAN ALL OVER                  22940000
CA7DSET  LR    R1,WD               POINT TO QUEUE ELEMENT               22940500
         L     WD,COMFWORK         RESTORE POINTER TO FIRST OPERAND     22941000
         LA    WD,0(0,WD)          PURIFY                               22941500
         $CFVQE  NOK=CD7DINVO      VERIFY OWNERSHIP                     22942000
         LH    R0,JQEJOBNO         GET JOB NUMBER IN R0                 22942500
         STH   R0,0(,WD)           SAVE JOB NUMBER AS BOTH              22943000
         STH   R0,2(,WD)           HIGH AND LOW BOUNDS                  22943500
         CLI   COMFWORK,C'T'       TEST FOR SET COMMAND                 22944000
         BE    CT7DFND             YES--EXIT TO IT                      22944500
         CLI   COMFWORK,C'O'       CHECK FOR $O COMMAND                 22945000
         BE    CO7DFND             YES--BR TO $ O PROCESSING            22945500
         LR    WF,WD               ELSE TRUNCATE COMMAND                22946000
         LA    WC,CA7DTAB          POINT TO ACTION VERB TABLE           22946500
         LA    R1,CA7DTABN         SET COUNT AND CLEAR HIGH BYTES       22947000
CA7DSCN  CLC   COMFWORK(1),0(WC)   MATCHING VERB                        22947500
         BE    CA7DFND             IF FOUND EXIT                        22948000
         LA    WC,3(,WC)           UP TO NEXT ENTRY                     22948500
         BCT   R1,CA7DSCN          LOOP                                 22949000
         B     CD7DINVO            EXECUTED ON LOGIC ERROR ONLY         22949500
CA7DFND  DS    0H                  FOUND JOB                            22950000
         $QSUSE ,                  ENQUEUE ON SERIAL RESOURCE           22950500
         SLR   WB,WB               ZERO OFFSET REGISTER                 22951000
         L     BASE3,=A(HASPCJB2)  ADDRESS OF GROUP ROUTINE             22951500
         ICM   WB,3,1(WC)          PICK UP OFFSET                       22952000
         ALR   WB,BASE3            POINT TO FUNCTIONAL ENTRY            22952500
         B     CAJLOOPA-HASPCJB2(,BASE3) ENTER JOB LIST ROUTINE         22953000
CT7DFND  L     BASE3,=A(HASPCJ3A)  ADDRESS OF GROUP CONTROL             22953500
         LR    R1,R0               MAKE LOW = HIGH JOB NUMBER        R4 22954000
         B     CTJALTER-HASPCJ3A(,BASE3) ENTER $T JOB COMMAND        R4 22954500
CO7DFND  DS    0H                  PREPARE TO EXIT TO $O                22955000
         L     BASE3,=A(HASPCJB4)  POINT TO SUB-PROCESSOR               22955500
         B     COJBEGIN-HASPCJB4(,BASE3)   EXIT                         22956000
CA7DTAB  DS    0H                                                       22956500
         DC    C'A',AL2(CAJ-HASPCJB2)  OFFSET TO RELEASE JOB            22957000
         DC    C'C',AL2(CCJ-HASPCJB2)  OFFSET TO CANCEL JOB             22957500
         DC    C'E',AL2(CEJ-HASPCJB2)  OFFSET TO RESTART JOB            22958000
         DC    C'H',AL2(CHJ-HASPCJB2)  OFFSET TO HOLD JOB               22958500
         DC    C'L',AL2(CLJ-HASPCJB2)  OFFSET TO LIST JOB               22959000
         DC    C'P',AL2(CPJ-HASPCJB2)  OFFSET TO STOP JOB               22959500
CA7DTABN EQU   (*-CA7DTAB)/3       NUMBER OF ENTRIES IN THE TABLE       22960000
         SPACE 2                                                        22960500
         LTORG ,                                                        22961000
         EJECT                                                          22961500
HASPCJ3A $COMGRUP TJ,TS,TT         SET BASE NUMBER OR MODIFY            22962000
*********************************************************************** 22962500
*                                                                     * 22963000
*        $T    (J,S,T)N -- SET NEW NBR FOR JOBS, STCS, OR TSUS        * 22963500
*                                                                     * 22964000
*        $T    J1-J2,C=CLASS       -- SET JOB CLASS                   * 22964500
*                                                                     * 22965000
*        $T    J1-J2,P=(+ OR -)VALUE   -- SET JOB PRIORITY            * 22965500
*              +N                      -- INCREMENT CURRENT PRIO      * 22966000
*              -N                      -- DECREMENT CURRENT PRIO      * 22966500
*              N                       -- SET PRIORITY EXPLICITLY     * 22967000
*                                                                     * 22967500
*        $T    J1-J2,S=(+ OR -)SID...SID -- SET SYSTEM AFFINITY       * 22968000
*              -SID (...SID)             -- DELETE AFFINITIE(S)       * 22968500
*              +SID (...SID)             -- ADD AFFINITIE(S)          * 22969000
*              SID (...SID)              -- SET AFFINITIE(S) XPLCIT   * 22969500
*                                                                     * 22970000
*********************************************************************** 22970500
CTS      NULL                      ENTER HERE FOR STC CHANGE            22971000
         CLC   COMVERB(4),=C'TSYS' TEST FOR '$TSYS' COMMAND             22971500
         BNE   CTSNOTSY            NO--SKIP NEXT                        22972000
         LH    R1,=Y(CTSYS-HASPCSY1) PICK-UP OFFSET TO $TSYS COMMAND    22972500
         L     BASE3,=A(HASPCSY1)  POINT TO SYSTEM COMMAND PROCESSOR    22973000
         ALR   R1,BASE3            COMPUTE ENTRY ADDRESS                22973500
         BR    BASE3               ENTER SYSTEM COMMAND PROCESSOR       22974000
CTSNOTSY DS    0H                  NOT $TSYS COMMAND                    22974500
         LH    WA,=H'10000'        SET LOW END FOR STCS                 22975000
         LA    WB,$STCNO           POINT TO STC BASE                    22975500
         MVC   COMJNAME(3),=C'STC' SET MESSAGE JOB ID                   22976000
         B     CTJA                ENTER COMMON ROUTINE                 22976500
CTT      NULL                      ENTER HERE FOR TSU CHANGE            22977000
         LH    WA,=H'20000'        SET LOW END FOR TSUS                 22977500
         LA    WB,$TSUNO           POINT TO TSU BASE                    22978000
         MVC   COMJNAME(3),=C'TSU' SET MESSAGE JOB ID                   22978500
         B     CTJA                ENTER COMMON ROUTINE                 22979000
CTJ      NULL                      ENTER HERE FOR JOB CHANGE            22979500
         SLR   WA,WA               SET LOW END FOR JOBS                 22980000
         LA    WB,$JOBNO           POINT TO JOB BASE                    22980500
         MVC   COMJNAME(3),=C'JOB' SET MESSAGE JOB ID                   22981000
CTJA     $CFCVB POINTER=(WD),NOK=CTJINVO CHANGE NBR TO BINARY           22981500
         LTR   R0,R0               TEST FOR GOOD VALUE                  22982000
         BNP   CTJINVO             NO--ERROR                            22982500
         ALR   R0,WA               COMPUTE JOB NUMBER                   22983000
         ALR   R1,WA               COMPUTE JOB NUMBER                   22983500
         CLR   WD,WF               TEST FOR ALTER A JOB                 22984000
         BL    CTJALTER            YES--GO TO IT                        22984500
         $QSUSE ,                  ENQUEUE ON SHARED RESOURCE           22985000
         SLR   R0,WA               RESET NUMBER                         22985500
         ALR   WA,R0               COMPUTE ACTUAL TASK NUMBER           22986000
         $CFCVE VALUE=(R0)         CONVERT NUMBER TO EBCDIC             22986500
         MVC   COFJNO+(COMJNAME-COFJOB),COMDWORK SET IN MSG             22987000
         MVC   COFJOB,COMJNAME     SET REST OF MESSAGE                  22987500
         BCTR  WA,0                LESS ONE FOR ACTUAL NUMBER           22988000
         STH   WA,0(0,WB)          SET NEW BASE                         22988500
        $POST  $HASPECF,CKPW       $POST CHECKPOINT WRITER          R41 22988600
         MVC   COFJNO(14),CTJBM    SET ' NUMBER SET TO'                 22989000
         MVC   COFJNO+14,COMDWORK  SET JOB NUMBER BASE                  22989500
         $CRET L=COFJNAME-COFJOB+14 EXIT WITH MESSAGE                   22990000
CTJBM    DC    C' NUMBER SET TO'   MESSAGE BODY                         22990500
*********************************************************************** 22991000
*                                                                     * 22991500
*        ALTER A JOB'S CLASS, PRIORITY, OR AFFINITY                   * 22992000
*                                                                     * 22992500
*********************************************************************** 22993000
         SPACE 2                                                        22993500
CTJALTER DS    0H                  ALTER A JOB' CHARACTERISTICS         22994000
         SLL   R1,16               SHIFT INFORMATION                 R4 22994500
         LR    WC,R1               COPY LOW BOUND                    R4 22995000
         ALR   WC,R0               INCLUDE HIGH BOUND                R4 22995500
CTJALTR1 MVI   CTJFLAG,0           SET ALL OPTIONS OFF                  22996000
CTJLOOP  DS    0H                  LOOP THROUGH OPERANDS                22996500
         BXH   WD,WE,CTJEND        LOOP THROUGH ALL OPERANDS            22997000
         L     R1,0(,WD)           POINT TO OPERAND                     22997500
         CLI   1(R1),C'='          CHECK FOR PROPER FORMAT              22998000
         BNE   CTJINVO             NO -- ERROR                          22998500
CTJSELCT DS    0H                  SELECT PROPER BREAK-OUT RTOUTINE     22999000
         $CFSEL (C,CTJCLAS),(P,CTJPRIO),(S,CTJSID),OPERAND=(R1)         22999500
         SPACE 1                                                        23000000
CTJINVO  DS    0H                  INVALID OPERAND ROUTINE              23000500
         L     R1,0(,WD)           POINT TO INVALID OPERAND             23001000
         $CFINVO OPERAND=(R1)      ISSUE DIAGNOSTIC                     23001500
         SPACE 3                                                        23002000
CTJCLAS  DS    0H                  SET A NEW CLASS                      23002500
         NI    CTJFLAG,255-CTJCLS  RESET CLASS FOUND FLAG               23003000
         L     R15,=A(CVALIDTB)    POINT TO TEST TABLE               R4 23003500
         TRT   2(1,R1),0(R15)      VALID CLASS                       R4 23004000
         BNZ   CTJINVO             IF INVALID -- ERROR                  23004500
         SLR   R15,R15             ZERO INSERT REGISTER                 23005000
         IC    R15,2(,R1)          PICK-UP NEW CLASS                    23005500
         SL    R15,=A(X'C0')       LESS OFFSET TO CAT                R4 23006000
         SLL   R15,5               TIMES CAT ELEMENT SIZE               23006500
         AL    R15,$CATABLE        COMPUTE ADDRESS OF CAT ELEMENT       23007000
         USING CATDSECT,R15        CAT ADDRESSABILITY                   23007500
         TM    CATJOBFL,CATVALID   TEST FOR VALID CLASS                 23008000
         BZ    CTJINVO             NO  --  ERROR                        23008500
         DROP  R15                 DROP CAT ADDRESSABILITY              23009000
         MVC   CTJSVCLS,2(R1)      SAVE GOOD CLASS                      23009500
         NI    CTJSVCLS,255-X'80'  TURN OFF HIGH BIT                 R4 23010000
         OI    CTJFLAG,CTJCLS      SET CLASS OPERAND FOUND              23010500
         B     CTJLOOP             AND LOOK FOR MORE OPERANDS           23011000
         SPACE 2                                                        23011500
CTJPRIO  DS    0H                  SET CHANGE TO JOB(S) PRIORITY        23012000
         NI    CTJFLAG,255-(CTJUPRI+CTJDPRI+CTJPRI)  RESET PRI FOUND    23012500
         OI    CTJFLAG,CTJUPRI     ASSUME ADDITION TO PRIO              23013000
         CLI   2(R1),C'+'          TEST FOR SAME                        23013500
         BE    CTJCNVT             YES--CONVERT NUMBER                  23014000
         XI    CTJFLAG,CTJUPRI+CTJDPRI RESET ADD ASSUME SUB             23014500
         CLI   2(R1),C'-'          TEST FOR SUBTRACTION                 23015000
         BE    CTJCNVT             YES--CONVERT NUMBER                  23015500
         XI    CTJFLAG,CTJDPRI     RESET SUBTRACTION                    23016000
CTJCNVT  $CFCVB POINTER=(WD),NOK=CTJINVO  CONVERT PRIO                  23016500
         SLA   R0,4                MULTIPLY BY 16                       23017000
         CH    R0,*+10             TEST FOR EXCESSION OF MAX PRIO       23017500
         BNH   *+8                 NO--LEAVE VALUE AS IS                23018000
         LA    R0,255              SET MAX POSSIBLE PRIORITY            23018500
         STC   R0,CTJSVPRI         AND SAVE IT FOR LATER                23019000
         OI    CTJFLAG,CTJPRI      SET PRIORITY FOUND                   23019500
         B     CTJLOOP             AND LOOK FOR MORE OPERANDS           23020000
         SPACE 2                                                        23020500
CTJSID   DS    0H                  EXTRACT NEW AFFINITES FOR JOB(S)     23021000
         NI    CTJFLAG,255-(CTJUAFF+CTJDAFF+CTJAFF) RESET AFF FOUND     23021500
         MVI   CTJSVSID,0          SET AFFINITY TO 'NONE'               23022000
         OI    CTJFLAG,CTJUAFF     ASSUME ADDITION TO AFFINITY          23022500
         CLI   2(R1),C'+'          TEST FOR SAME                        23023000
         BE    CTJSID1             YES--GO EXTRACT REST OF FIELD        23023500
         XI    CTJFLAG,CTJUAFF+CTJDAFF ASSUME DELETION OF AFFINITY      23024000
         CLI   2(R1),C'-'          TEST FOR SAME                        23024500
         BE    CTJSID1             YES -- EXTRACT REST OF OPERAND       23025000
         XI    CTJFLAG,CTJDAFF     RESET DELETION OF AFFINITIES         23025500
         BCTR  R1,0                FAKE EXISTENCE OF '+' OR '-'         23026000
CTJSID1  DS    0H                  EXTRACT REST OF AFFINITY OPERAND     23026500
         LA    R1,3(,R1)           POINT TO FIRST SID CHARACTER         23027000
CTJSID2  DS    0H                  MAJOR LOOP FOR SID SCAN              23027500
         CLC   0(3,R1),=C'ANY'     TEST FOR 'ANY' AFFINITY DESIRED      23028000
         BNE   CTJSIIND            NO--TEST FOR INDEPENDENT MODE        23028500
         OI    CTJSVSID,QUESYSAF   YES -- SET AFFINITY TO 'ANY'         23029000
         NI    CTJFLAG,255-(CTJUAFF+CTJDAFF) RESET ADD OR SUB           23029500
         B     CTJLPSID            AND EXIT FOR NEXT POSSIBLE SID       23030000
CTJSIIND DS    0H                  TEST FOR INDEPENDENT MODE            23030500
         CLC   0(3,R1),=C'IND'     IS REQUEST FOR INDEPENDENT MODE      23031000
         BNE   CTJSIDM             NO--TRY FOR SPECIFIC SID OPERAND     23031500
         OI    CTJSVSID,QUEINDAF   YES -- SET INDEPENDENT MODE          23032000
         B     CTJLPSID            AND LOOP FOR MORE SID'S              23032500
CTJSIDM  DS    0H                  TRY FOR SPECIFIC SID OPERAND         23033000
         L     R14,$QSE1           POINT TO 1ST QSE                  R4 23033500
         SH    R14,$QSEL           BACK UP ONE QSE                   R4 23034000
         USING QSEDSECT,R14        QSE ADDRESSABILITY                   23034500
CTJAFFLP DS    0H                  LOOP FOR SID/OPERAND MATCH           23035000
         AH    R14,$QSEL           POINT TO NEXT QSE                 R4 23035500
         CLC   QSESID,0(R1)        TEST FOR MATCH                       23036000
         BE    CTJAFFND            FOUND -- FLAG AFFINITY               23036500
         TM    QSEFLAGS,QSELAST    TEST FOR LAST ELEMENT                23037000
         BZ    CTJAFFLP            AND LOOP TILL FOUND OR ERROR         23037500
         B     CTJINVO             ERROR -- OPERAND NOT FOUND           23038000
CTJAFFND DS    0H                  SID MATCHED OPERAND                  23038500
         OC    CTJSVSID,QSESIAFF   FLAG THIS AFFINITY                   23039000
         SPACE 1                                                        23039500
CTJLPSID DS    0H                  LOOP FOR MORE AFFINITIES             23040000
         OI    CTJFLAG,CTJAFF      FLAG AFFINITY FOUND                  23040500
         BXLE  WD,WE,CTJSIDNX      LOOK FOR MORE TO DO                  23041000
         TM    CTJSVSID,QUEINDAF   IF LAST TEST FOR 'IND 'MODE          23041500
         BZ    CTJEND              NO--EXIT OPERAND SCAN                23042000
         TM    CTJSVSID,255-QUEINDAF TEST FOR 'IND' WITHOUT OTHER AF    23042500
         BNZ   CTJEND              NO--EXIT OPERAND SCAN                23043000
         TM    CTJFLAG,CTJUAFF+CTJDAFF TEST FOR '+' OR '-'              23043500
         BNZ   CTJEND              'OK' WHEN + OR - IND                 23044000
         SLR   WD,WE               ELSE ERROR, BACK UP ONE OPERAND      23044500
         B     CTJINVO             AND ISSUE DIAGNOSTIC                 23045000
         SPACE 1                                                        23045500
CTJSIDNX DS    0H                  TRY FOR NEXT OPERAND                 23046000
         L     R1,0(,WD)           PT TO NEXT OPERAND                   23046500
         CLI   1(R1),C'='          TEST FOR ANOTHER SID                 23047000
         BE    CTJSELCT            NO -- SELECT NEXT CHANGE             23047500
         B     CTJSID2             ELSE ENTER SCAN LOOP                 23048000
         DROP  R14                 DROP QSE ADDRESSABILITY              23048500
         SPACE 2                                                        23049000
CTJEND   DS    0H                  END OF OPERANDS                      23049500
         MVC   CTJFLAG1,CTJFLAG    SAVE OPTIONS                         23050000
         ST    WC,CTJRANGE         SET JOB RANGES                    R4 23050500
         LH    WD,CTJRANGE         PICK UP LOW BOUND                 R4 23051000
CTJSCAN  LH    WE,CTJRANGE+2       PICK UP HIGH BOUND                R4 23051500
         $QSUSE ,                  ENQUEUE ON SHARED QUEUES             23052000
         SLR   R10,R10             ZERO JOB HIT REGISTER                23052500
         $CFJSCAN PROCESS=CTJPRO,NEXT=CTJNEXT  SCAN JOB QUEUE           23053000
         SPACE 1                                                        23053500
         LTR   R1,R10              TEST FOR ANY JOB(S) FOUND            23054000
         BZ    CTJNOJOB            NONE--EXIT                           23054500
         LR    WD,WE               SET NEW HIGHEST NUMBER               23055000
         B     CTJCHNG             AND GO MODIFY FOUND JOB              23055500
CTJNOJOB DS    0H                  TEST FOR ANY JOB(S) SET              23056000
         TM    CTJFLAG,CTJJOB      TEST FOR SAME                        23056500
         BO    CTJRET              YES--RETURN                          23057000
         $CRET MSG='NO JOB(S) FOUND'  EXIT EITH DIAGNOSTIC              23057500
CTJRET   DS    0H                  RETURN WITH NO DIAGNOSTIC            23058000
         $CRET ,                   RETURN                               23058500
         SPACE 1                                                        23059000
CTJUPONE DS    0H                  PICK-UP NEXT NUMBER                  23059500
         MVC   CTJFLAG,CTJFLAG1    GET OPTIONS FOR NEXT JOB             23060000
         LA    WD,1(,WD)           ADD ONE TO FIRST NUMBER              23060500
         CH    WD,CTJRANGE+2       ABOVE HIGH BOUND                  R4 23061000
         BNH   CTJSCAN             NO--SCAN QUEUE AGAIN                 23061500
         B     CTJNOJOB            ELSE EXIT $TJ ROUTINE                23062000
         SPACE 1                                                        23062500
CTJPRO   DS    0H                  JOB FOUND -- TEST IT                 23063000
         LH    R0,JQEJOBNO         PICK-UP JOB'S NUMBER                 23063500
         CLR   R0,WD               TEST FOR IN LOW RANGE                23064000
         BE    CTJCHNG             EXACT HIT GO CHANGE IT               23064500
         BL    CTJNEXT             BELOW RANGE - GET NEXT JOB           23065000
         CLR   R0,WE               HIGH--TEST FOR HIGH RANGE            23065500
         BH    CTJNEXT             IF HIGHER THAN HIGH-GET NEXT         23066000
         LR    R10,R1              IF LOW OR EQUAL SET JOB TO CHANGE    23066500
         LR    WE,R0               SET NEW HIGHEST NUMBER               23067000
         B     CTJNEXT             AND GET NEXT JOB                     23067500
         SPACE 1                                                        23068000
CTJCHNG  DS    0H                  JOB FOUND TO CHANGE                  23068500
         OI    CTJFLAG1,CTJJOB     SET JOB FLAG FOUND FLAG              23069000
         TM    CTJFLAG,CTJPRI      TEST FOR PRIORITY CHANGE             23069500
         BZ    CTJCCLAS            NO--CHECK FOR CLASS CHANGE           23070000
         TM    JQEFLAGS,QUEBUSY    TEST FOR JOB BUSY                    23070500
         BZ    CTJNTPRI            NO--OK TO CHANGE PRIORITY            23071000
         NI    CTJFLAG,255-(CTJPRI+CTJUPRI+CTJDPRI) RESET PRI OPTION    23071500
         B     CTJCCLAS            AND TRY FOR CLASS CHANGE             23072000
CTJNTPRI DS    0H                  CONTINUE WITH PRIORITY CHANGE        23072500
         SLR   R0,R0               ZERO CURRENT PRIO REGISTER           23073000
         IC    R0,JQEPRIO          GET CURRENT PRIORITY                 23073500
         SLR   WA,WA               ZERO NEW PRIORITY REGISTER           23074000
         IC    WA,CTJSVPRI         PICK-UP NEW PRIORITY                 23074500
         TM    CTJFLAG,CTJUPRI     TEST FOR ADDITION                    23075000
         BO    CTJPRIU             YES--ADD NEW TO OLD TO GET NEW       23075500
         TM    CTJFLAG,CTJDPRI     TEST FOR SUBTRACTION TO PRIORITY     23076000
         BO    CTJPRID             YES-SUB NEW FROM OLD TO GET NEW      23076500
         SLR   R0,R0               ELSE SET PRIORITY EXPLICITLY         23077000
         B     CTJPRIU             AND ENTER ADDITION RTN               23077500
CTJPRID  LNR   WA,WA               SET NEW AS NEGATIVE                  23078000
CTJPRIU  AR    WA,R0               COMPUTE NEW PRIORITY                 23078500
         BNM   *+6                 IF NOT NEGATIVE -- OK                23079000
         SLR   WA,WA               ELSE SET AS ZERO                     23079500
         CH    WA,*+10             TEST FOR ABOVE MAX                   23080000
         BNH   CTJCCLAS            NO--LEAVE AS IS                      23080500
         LA    WA,255              SET MAX PRIORITY                     23081000
         SPACE 2                                                        23081500
CTJCCLAS DS    0H                  TEST FOR CHANGE TO JOB CLASS         23082000
         TM    CTJFLAG,CTJCLS      TEST FOR CLASS CHANGE                23082500
         BZ    CTJCAFF             NO TEST FOR CHANGE TO AFFINITY       23083000
         TM    JQETYPE,$XEQ        TEST FOR CNVT OR XEQT                23083500
         BZ    CTJBDCLS            NO--CAN'T CHANGE CLASS               23084000
         TM    JQEFLAGS,QUEBUSY    TEST FOR JOB BUSY IN THESE STAGES    23084500
         BNZ   CTJBDCLS            YES -- CAN'T CHANGE CLASS            23085000
         CLI   JQETYPE,$XEQ        TEST FOR QUEUED FOR CONVERSION       23085500
         BE    CTJBDCLS            YES--CAN'T CHANGE CLASS              23086000
         SLR   WB,WB               ZERO NEW CLASS REGISTER              23086500
         IC    WB,CTJSVCLS         PICK-UP NEW CLASS                    23087000
         SLR   R15,R15             ZERO OLD CLASS REGISTER              23087500
         IC    R15,JQETYPE         PICK-UP OLD JOB CLASS                23088000
         SL    R15,=A(X'40')       SUBTRACT FOR OFFSET TO CAT           23088500
         SLL   R15,5               COMPUTE DISPLACEMENT INTO CAT        23089000
         AL    R15,$CATABLE        COMPUTE CAT ADDRESS                  23089500
         SL    WB,=A(X'40')        SUBTRACT FOR CAT                     23090000
         SLL   WB,5                TIMES CAT SIZE                       23090500
         AL    WB,$CATABLE         COMPUTE CAT ELEMENT ADDRESS          23091000
         TM    CATJOBFL-CATDSECT(R15),CATBATCH  TEST FOR BATCH       R4 23091500
         BZ    CTJBDCLS            ERROR IF NOT BATCH                R4 23092000
         TM    CATJBOPT-CATDSECT(R15),CATXBACH  TEST FOR XBM         R4 23092500
         BO    CTJBDCLS            ERROR IF XBATCH                   R4 23093000
         TM    CATJOBFL-CATDSECT(WB),CATBATCH  TEST FOR BATCH        R4 23093500
         BZ    CTJBDCLS            ERROR IF NOT BATCH                R4 23094000
         TM    CATJBOPT-CATDSECT(WB),CATXBACH  TEST FOR XBM          R4 23094500
         BO    CTJBDCLS            ERROR IF XBATCH                   R4 23095000
         SLR   WB,WB               CLEAR REGISTER                    R4 23095500
         IC    WB,CTJSVCLS         PICK-UP GOOD CLASS                   23096000
         B     CTJCAFF             AND GO CHANGE AFFINITY POSSIBLY      23096500
CTJBDCLS DS    0H                  INVLAID TO CHANGE CLASS              23097000
         NI    CTJFLAG,255-CTJCLS  INDICATE NO CLASS CHANGE             23097500
         SPACE 2                                                        23098000
CTJCAFF  DS    0H                  SET NEW AFFINITY                     23098500
         TM    CTJFLAG,CTJAFF      TEST FOR AFFINITY CHANGE             23099000
         BZ    CTJQMOD             NO--MODIFY ELEMENT POSSIBLY          23099500
         CLC   JQEJOBNO,=H'10000'  TEST FOR NORMAL JOB                  23100000
         BL    CTJNTAFF            YES--OK TO CHANGE AFFINITY           23100500
         TM    JQETYPE,$XEQ        TEST FOR STC OR TSU IN XEQ OR CNV    23101000
         BO    CTJBDAFF            YES--CAN'T CHANGE AFFINITY           23101500
         CLI   JQETYPE,$INPUT      TEST FOR STC OR TSU IN INPUT RDR     23104000
         BNE   CTJNTAFF            NO--OK TO CHANGE AFFINITY            23104500
CTJBDAFF DS    0H                  CAN'T CHANGE AFFINITY                23105000
         NI    CTJFLAG,255-(CTJAFF+CTJUAFF+CTJDAFF) RESET AFF CHANGE    23105500
         B     CTJQMOD             AND MODIFY JOB QUEUE ELEMENT         23106000
CTJNTAFF DS    0H                  OK TO CHANGE AFFINITY                23106500
         MVC   CTJOLDAF,JQEFLAG2   PICK-UP OLD AFFINITIES               23107000
         TM    CTJFLAG,CTJUAFF     TEST FOR ADDITION TO AFF             23107500
         BO    CTJUPAF             YES--GO DO IT                        23108000
         TM    CTJFLAG,CTJDAFF     TEST FOR SUBTRACTION TO AFF          23108500
         BO    CTJDWAF             YES--GO DO IT                        23109000
         MVI   CTJOLDAF,0          SET AFFINITY TO 'NONE'               23109500
CTJUPAF  OC    CTJOLDAF,CTJSVSID   SET NEW AFFINITIES                   23110000
         B     CTJQMOD             GO SET NEW JOB CHARACTERISTICS       23110500
CTJDWAF  DS    0H                  REQUEST IS TO REMOVE AFFINITIES      23111000
         LA    R15,255             SET REGISTER TO ALL BITS 'ON'        23111500
         SLR   R0,R0               ZERO INSERT REGISTER                 23112000
         IC    R0,CTJSVSID         PICK-UP AFFINITIES TO REMOVE         23112500
         SLR   R15,R0              COMPUTE BITS TO LEAVE 'ON'           23113000
         EX    R15,CTJOFFAF        TURN 'OFF' SELECTED AFFINITIES       23113500
         L     R14,$QSE1           POINT TO 1ST QSE                  R4 23114000
         SH    R14,$QSEL           BACK UP ONE QSE                   R4 23114500
         USING QSEDSECT,R14        QSE ADDRESSABILITY                   23115000
CTJAFFCK AH    R14,$QSEL           POINT TO NEXT QSE                 R4 23115500
         IC    R15,QSESIAFF        PICK UP AFFINITY FOR TEST         R4 23116000
         EX    R15,CTJAFFON        TEST FOR IMPOSSIBLE AFFINITY         23116500
         BO    CTJQMOD             AFFINITY IS 'OK'                     23117000
         TM    QSEFLAGS,QSELAST    TEST FOR LAST ELEMENT                23117500
         BZ    CTJAFFCK            GO LOOK AGIN                         23118000
         B     CTJUPAF             NOT FOUND -RESET AFFINITY            23118500
CTJOFFAF NI    CTJOLDAF,*-*        **** EXECUTE ONLY ****               23119000
CTJAFFON TM    CTJOLDAF,*-*        **** EXECUTE ONLY ****               23119500
         DROP  R14                 DROP QSE ADDRESSABILITY              23120000
         SPACE 1                                                        23120500
CTJQMOD  DS    0H                  SET NEW JOB CHARACTERISTICS          23121000
         TM    CTJFLAG,CTJPRI+CTJCLS+CTJAFF TEST FOR ANY CHANGES        23121500
         BZ    CTJDISP             NO--DISPLAY JOB ONLY                 23122000
         TM    CTJFLAG,CTJPRI      TEST FOR PRIORITY CHANGE             23122500
         BZ    *+8                 NO--TRY AFFINITY CHANGE              23123000
         STC   WA,JQEPRIO          SET NEW PRIORITY                     23123500
         TM    CTJFLAG,CTJAFF      TEST FOR AFFINITY CHANGE             23124000
         BZ    CTJNPOST            NO--TEST FOR $QMOD OR $QCKPT         23124500
         MVC   JQEFLAG2,CTJOLDAF   SET NEW AFFINITIES                   23125000
         $POST $HASPECF,(JOB)      POST FOR JOB CHANGE                  23125500
         OI    $AQSE,QSEPJOB       CAUSE X SYSTEM POST(S)               23126000
CTJNPOST DS    0H                  NO POST REQUIRED                     23126500
         TM    CTJFLAG,CTJCLS      TEST FOR CLASS CHANGE                23127000
         BO    CTJ$QMOD            YES--USE NEW CLASS                   23127500
         TM    CTJFLAG,CTJPRI      TEST FOR $QMOD OR $QCKTP NEEDED      23128000
         BZ    CTJCKPT             NO--CHECKPOINT THE ELEMENT           23128500
         SLR   WB,WB               ELSE ZERO CLASS REGISTER             23129000
         IC    WB,JQETYPE          PICKUP EXISTING CLASS                23129500
CTJ$QMOD DS    0H                  MODIFY JOB QUEUE ELEMENT             23130000
         $QMOD (R1),(WB)           ELSE RESET JOB IN QUEUE              23130500
         SPACE 1                                                        23131000
CTJDISP  $CFJMSG ,                 DISPLAY JOB                          23131500
         SPACE 1                                                        23132000
         B     CTJUPONE            AND GET NEXT JOB                     23132500
CTJCKPT  DS    0H                  CHECK POINT NEEDED                   23133000
         $QCKPT (R1)               CHECK POINT MODIFIED JOB             23133500
         B     CTJDISP             AND DISPLAY IT                       23134000
         SPACE 2                                                        23134500
*        $TJOB EQUATES                                                  23135000
         SPACE 1                                                        23135500
CTJOLDAF EQU   COMPNTER,1          OLD AFFINITY SAVE AREA               23136000
CTJSVSID EQU   COMPNTER+1,1        NEW AFFINITY SAVE AREA               23136500
CTJSVPRI EQU   COMPNTER+2,1        NEW PRIORITY SAVE ATEA               23137000
CTJSVCLS EQU   COMPNTER+3,1        NEW CLASS SAVE AREA                  23137500
CTJFLAG  EQU   COMPNTER+4,1        FLAGS FOR JOB CHANGES                23138000
CTJFLAG1 EQU   COMPNTER+5,1        SAVE AREA FOR FLAGS                  23138500
CTJRANGE EQU   COMPNTER+8,4        JOB RANGES                        R4 23139000
*        FLAG DEFINITIONS                                               23139500
CTJCLS   EQU   X'80'               CLASS OPERAND WAS PROVIDED           23140000
CTJPRI   EQU   X'40'               PRIORITY OPERAND WAS PROVIDED        23140500
CTJUPRI  EQU   X'20'               PRIORITY IS TO BE INCREASED          23141000
CTJDPRI  EQU   X'10'               PRIORITY IS TO BE DECREASED          23141500
CTJAFF   EQU   X'08'               AFFINITY OPERAND WAS PROVIDED        23142000
CTJUAFF  EQU   X'04'               AFFINITY IS TO BE INCREASED          23142500
CTJDAFF  EQU   X'02'               AFFINITY IS TO BE DECREASED          23143000
CTJJOB   EQU   X'01'               JOB WAS FOUND FLAG                   23143500
         SPACE 2                                                        23144000
         LTORG ,                                                        23144500
         EJECT                                                          23145000
HASPCJB4 $COMGRUP OJ,OS,OT         DEFINE SUB-PROCESSOR FOR $O CMN      23145500
         SPACE 2                                                        23146000
*********************************************************************** 23146500
*                                                                     * 23147000
*        $O (J,S,T)N-NN,OPTIONS,Q=SYSOUT CLASS(ES) OF DATA SETS       * 23147500
*        CHANGE STATUS OF OUTPUT DATA SETS FOR JOBS, STCS, OR TSUS    * 23148000
*        WHERE OPTIONS ARE - CANCEL, RELEASE, OR RELEASE TO A         * 23148500
*                            SPECIFIED REMOTE OR LOCAL                * 23149000
*        JOB, STC, OR TSU NUMBERS MAY BE SPECIFIED BY RANGE N-NN      * 23149500
*        WITH N LESS THAN NN. OPERANDS FOLLOWING THE FIRST MAY        * 23150000
*        APPEAR IN ANY ORDER.                                         * 23150500
*                                                                     * 23151000
* REGISTERS USED -                                                    * 23151500
*                                                                     * 23152000
*        WB    = ROUTE CODE IF RE-ROUTING IS DESIRED                  * 23152500
*        WC    = BEGINNING JOB, STC, OR TSU NUMBER                    * 23153000
*        WE    = ENDING JOB, STC, OR TSU NUMBER                       * 23153500
*                                                                     * 23154000
*********************************************************************** 23154500
         SPACE 2                                                        23155000
COT      DS    0H                  ENTRY FOR $OT COMMAND                23155500
         LH    WA,=H'20000'        SET TSU INCREMENT                    23156000
         B     COJTS               AND ENTER COMMON SECTION             23156500
COS      DS    0H                  ENTRY FOR $OS COMMAND                23157000
         LH    WA,=H'10000'        SET STC INCREMENT                    23157500
         B     COJTS               AND ENTER COMMON SECTION             23158000
COJ      DS    0H                  ENTRY FOR $OJ COMMAND                23158500
         SLR   WA,WA               INDICATE NO INCREMENT FOR JOBS       23159000
COJTS    DS    0H                  COMMON SECTION FOR JOB,STC,TSU       23159500
         $CFCVB POINTER=(WD),NOK=COJINVOA CONVERT TO BINARY             23160000
         LTR   R1,R1               RESULT ZERO                       R4 23160500
         BZ    COJINVOA            ERROR IF YES                      R4 23161000
         ALR   R1,WA               COMPUTE ACTUAL LOW NUMBER         R4 23161500
         ALR   R0,WA               COMPUTE ACTUAL HIGH NUMBER        R4 23162000
         STH   R1,0(,WD)           SAVE LOW NUMBER FOR LATER            23162500
         STH   R0,2(,WD)           AND HIGH ALSO                        23163000
         EJECT                                                          23163500
*********************************************************************** 23164000
*                                                                     * 23164500
*        SCAN OPERANDS FOR OUTPUT DATA SET ACTION                     * 23165000
*                                                                     * 23165500
*********************************************************************** 23166000
COJBEGIN LR    WC,WD               SAVE POINTER TO OPERAND PTRS         23166500
        $TIME                      GET CURRENT DATE IN R1           R41 23166600
         ST    R1,COJSVCRD         SAVE IT                          R41 23166700
COJLOOP  DS    0H                  ENTER OPERAND SCAN LOOP              23167000
         BXH   WC,WE,COJOPEND      SCAN TILL END OF OPERANDS            23167500
         L     R1,0(,WC)           POINT TO OPERAND                     23168000
         CLI   1(R1),C'='          TEST FOR POSSIBLE CLASS STRING       23168500
         BNE   COJTEST             NO--LOOK FURTHER                     23169000
         CLI   0(R1),C'Q'          YES -- TEST FOR PROPER FORMAT        23169500
         BE    COJCLASS            YES--EXTRACT CLASS STRING            23170000
         CLI   0(R1),C'R'          THIS ROUTE CODE                   R4 23170500
         BE    COJRMT              BREAK OUT ROUTE CODE IF YES       R4 23171000
         CLI   0(R1),C'D'          CUT-OFF DATE SPECIFIED...        R41 23171100
         BE    COJDATE             BR IF YES                        R41 23171200
         B     COJINVOO            NO--ERROR IN OPERAND                 23171500
COJTEST  CLI   0(R1),C'C'          IS IT A REQUEST TO CANCEL            23172000
         BE    COJCANCL            YES--FLAG CANCEL REQUIRED            23172500
COJINVOO DS    0H                  INVALID OPERAND                      23173000
         LR    WD,WC               COPY OPERAND POINTER                 23173500
COJINVOA L     R1,0(,WD)           POINT TO INVALID OPERAND             23174000
         $CFINVO OPERAND=(R1)      AND DISPLAY IT                       23174500
         SPACE 2                                                        23175000
COJCLASS DS    0H                  EXTRACT SYSOUT CLASSES               23175500
         L     R15,4(,WC)          POINT TO NEXT OPERAND                23176000
         LA    R15,0(,R15)         CLEAR HI-ORDER FLAG BYTE             23176500
         SLR   R15,R1              COMPUTE SIZE OF OPERAND              23177000
         SH    R15,=H'4'           COMPUTE MACHINE SIZE                 23177500
         BM    COJINVOO            NO STRING IF NEGATIVE--ERROR         23178000
         CH    R15,*+10            CHECK FOR MAX SIZE                   23178500
         BNH   *+8                 LESS THAN OR EQ -- OK                23179000
         LA    R15,7               ELSE USE MAX OF 8 CHARACTERS         23179500
         L     R14,=A(CVALIDTB)    POINT TO TEST TABLE               R4 23180000
         EX    R15,COJVALID        TEST FOR ALL VALID CLASSES           23180500
         BNZ   COJINVOO            INVALID OPERAND IF INVALID CLASSES   23181000
         MVI   COJSVCLS,C' '       BLANK CLASS SAVE AREA                23181500
         MVC   COJSVCLS+1(L'COJSVCLS-1),COJSVCLS  DITTO                 23182000
         EX    R15,COJMVCLS        ELSE MOVE CLASS STRING               23182500
         OI    COMNULOP,COJQOP     AND FLAG CLASS STRING EXISTS         23183000
         B     COJLOOP             LOOP THROUGH ALL OPERANDS            23183500
COJVALID TRT   2(*-*,R1),0(R14)    *** EXECUTE ONLY ***              R4 23184000
COJMVCLS MVC   COJSVCLS(*-*),2(R1) **** EXECUTE ONLY ****               23184500
         EJECT                                                      R41 23185000
COJCANCL DS    0H                  COME HERE FOR CANCEL OPTION          23185500
         OI    COMNULOP,COJCNCL    INDICATE HELD DATA SET CANCEL    R41 23186000
         B     COJLOOP             LOOP FOR MORE OPERANDS               23186500
COJRMT   DS    0H                                                    R4 23187000
         LR    WB,WD               SAVE NORMAL SCAN REGISTER         R4 23187500
         LR    WD,WC               PUT OPERAND POINTER BACK          R4 23188000
         BAL   LINK,COFRTRA        CONVERT RANGES                    R4 23188500
         B     COJINVOA            ERROR EXIT               + 0      R4 23189000
         CR    R1,R0               SAME ROUTE               + 4      R4 23189500
         BNE   COJINVOA            ERROR EXIT                        R4 23190000
         LR    WD,WB               RESTORE SCAN REGISTER             R4 23190500
         LR    WB,R1               SET ROUTE CODE                    R4 23191000
         OI    COMNULOP,COJRTE     SET ROUTE FLAG                    R4 23191500
         B     COJLOOP             LOOP FOR MORE                     R4 23192000
         SPACE 1                                                    R41 23192100
COJDATE  L     WA,4(,WC)           GET POINTER TO NEXT OPERAND      R41 23192200
         LA    WA,0(,WA)           CLEAR HIGH-ORDER BYTE            R41 23192300
         SLR   WA,R1               ENSURE                           R41 23192400
         SH    WA,=H'3'             AT LEAST 1                      R41 23192500
         BNP   COJINVOO              AND NOT                        R41 23192600
         CH    WA,=H'5'               MORE THAN                     R41 23192700
         BH    COJINVOO                5 DIGITS                     R41 23192800
         LR    R0,WA               RELOAD VALUE LENGTH              R41 23192900
         LR    LINK,R1              AND OPERAND POINTER             R41 23193000
         SPACE 1                                                    R41 23193100
COJDATVL LA    LINK,1(,LINK)       ENSURE                           R41 23193200
         CLI   1(LINK),C'0'         OPERAND                         R41 23193300
         BL    COJINVOO              VALUE                          R41 23193400
         CLI   1(LINK),C'9'           IS                            R41 23193500
         BH    COJINVOO                STRICTLY                     R41 23193600
         BCT   R0,COJDATVL              NUMERIC                     R41 23193700
         SPACE 1                                                    R41 23193800
         BCTR  WA,0                REDUCE FOR EXECUTE               R41 23193900
         EX    WA,COJDATPK         CONVERT VALUE TO PACKED DECIMAL  R41 23194000
         CH    WA,=H'1'            TEST FORM OF VALUE               R41 23194100
         BH    COJYYDDD            BR IF NOT NN (DAYS)              R41 23194200
        $TIME  ,                   GET CURRENT DATE IN R1           R41 23194300
         SLR   R0,R0               CLEAR R0                         R41 23194400
         STM   R0,R1,COMDWORK      STORE PACKED DECIMAL DATE        R41 23194500
         CVB   R1,PCER1            CONVERT DAYS TO BINARY           R41 23194600
         CVB   R0,COMDWORK         CONVERT DATE TO BINARY           R41 23194700
         CLC   PCER1+6(2),COMDWORK+6  CUT-OFF DATE LAST YEAR...     R41 23194800
         BL    COJYYOK             BR IF NO                         R41 23194900
         LA    R1,1000-365(,R1)    IGNORE DAYS 366 - 999            R41 23195000
         MVO   COMDWORK+5(3),COMDWORK+5(1)  ISOLATE CURRENT YEAR    R41 23195100
         CVB   LINK,COMDWORK       CONVERT YEAR TO BINARY           R41 23195200
         BCTR  LINK,0              BACK UP 1 YEAR                   R41 23195300
         N     LINK,=F'3'          TEST FOR LEAP YEAR               R41 23195400
         BNZ   COJYYOK             BR IF NO                         R41 23195500
         BCTR  R1,0                ACKNOWLEDGE DAY 366              R41 23195600
         SPACE 1                                                    R41 23195700
COJYYOK  SR    R0,R1               GET CUT-OFF DATE                 R41 23195800
         BNM   *+6                 BR IF THIS CENTURY               R41 23195900
         SLR   R0,R0               CUT-OFF AT TURN OF CENTURY       R41 23196000
         CVD   R0,PCER1            CONVERT RESULT TO PACKED DECIMAL R41 23196100
         MVC   COJSVCRD,PCER1+4    STORE CUT-OFF DATE               R41 23196200
         OI    COJSVCRD+3,X'0F'    MAKE 'PRINTABLE'                 R41 23196300
         B     COJLOOP             BR TO TEST FOR MORE OPERANDS     R41 23196400
         EJECT                                                      R41 23196500
COJYYDDD CH    WA,=H'4'            TEST FOR YYDDD                   R41 23196600
         BNE   COJINVOO            INVALID IF NO                    R41 23196700
         MVC   COJSVCRD,PCER1+4    STORE CUT-OFF DATE               R41 23196800
         B     COJLOOP             BR TO TEST FOR MORE OPERANDS     R41 23196900
         SPACE 1                                                    R41 23197000
COJDATPK PACK  PCER1(8),2(*-*,R1)  *** EXECUTE ONLY ***             R41 23197100
         SPACE 1                                                    R41 23197200
COJOPEND DS    0H                  COME HERE AFTER ALL OPERANDS         23197300
         LH    WC,0(,WD)           GET RANGE OF                         23197400
COJLP    LH    WE,2(,WD)           JOBS TO ACT UPON                     23197500
         SLR   R10,R10             CLEAR HIT REGISTER                   23197600
         $CFJSCAN PROCESS=COJJOB,NEXT=COJNXJOB  LOOK FOR JOBS           23197700
         LTR   R1,R10              LOOK FOR ANY JOBS IN RANGE           23197800
         BZ    COJNOJOB            NO--ISSUE DIAGNOSTIC                 23197900
         LR    WC,WE               YES--SET NEW FIRST NBR               23198000
COJOWNER DS    0H                  CHECK OWNERSHIP OF JOB               23198100
         $CFVQE OK=COJOBOK         IS CONSOLE SUBMITTER THE OWNER       23198200
COJUPONE LA    WC,1(,WC)           NOT OWNED--GET NEXT                  23198300
         CH    WC,2(,WD)           CHECK FOR LAST TO HANDLE             23198400
         BNH   COJLP               NO--LOOK FOR NEXT JOB                23198500
COJNOJOB TM    COMNULOP,COJJOBS    TEST FOR ANY JOBS FOUND              23199000
         BO    COJRET              YES--RETURN WITHOUT DIAGNOSTIC       23199500
         $CRET MSG='JOB(S) NOT FOUND'                                   23200000
COJJOB   DS    0H                  JOB FOUND                            23200500
         LH    R0,JQEJOBNO         LOAD JOB NUMBER                      23201000
         CLR   R0,WC               CHECK VS. DESIRED JOB                23201500
         BE    COJOWNER            YES--CHECK OWNERSHIP                 23202000
         BL    COJNXJOB            OUT OF RANGE--GET NEXT               23202500
         CLR   R0,WE               CHECK JOB WITH LAST IN RANGE         23203000
         BH    COJNXJOB            HIGH--NEXT JOB                       23203500
         LR    R10,R1              COPY JQE ADDRESS FOR LATER TEST      23204000
         LR    WE,R0               COPY JOB NBR FOR LATER USE           23204500
         B     COJNXJOB            AND GET ANOTHER JOB                  23205000
COJOBOK  DS    0H                  COME HERE WHEN JOB FOUND             23205500
         OI    COMNULOP,COJJOBS    FLAG JOB FOUND                       23206000
         MVI   COMMAND,C' '        CLEAR MSG AREA                       23206500
         MVC   COMMAND+1(L'COMMAND-1),COMMAND  DITTO                    23207000
         NI    COMMID+1,X'FE'      TELL HASPCON JOB ID IS SET           23207500
         LR    R0,WC               PREPARE TO CONVERT JOB NBR           23208000
         MVC   COFJOB,=C'JOB'      ASSUME BATCH JOB                     23208500
         CH    R0,=H'10000'        TEST FOR SAME                        23209000
         BL    COJMSGC             COMPLETE MSG IF JOB                  23209500
         MVC   COFJOB,=C'TSU'      ASSUME TIME SHARING USER             23210000
         SH    R0,=H'20000'        TEST FOR TSU                         23210500
         BNM   COJMSGC             YES--COMPLETE MESSAGE                23211000
         AH    R0,=H'10000'        MUST BE SYSTEM CONTROL TASK          23211500
         MVC   COFJOB,=C'STC'      ADJUST ID AND NUMBER FOR STC         23212000
COJMSGC  DS    0H                  COMPLETE MESSAGE PREFIX              23212500
         $CFCVE VALUE=(R0)         CONVERT JOB NUMBER TO EBCDIC         23213000
         MVC   COFJNO,COMDWORK     AND PUT SAME IN MSG                  23213500
         MVC   COFJNAME,JQEJNAME   FINALLY INSERT TASK NAME             23214000
*********************************************************************** 23214500
*                                                                     * 23215000
*        GET PSO ELEMENT AND QUEUE IT FOR $O REQUEST                  * 23215500
*                                                                     * 23216000
*********************************************************************** 23216500
         SPACE 1                                                        23217000
         LH    WF,JQEHLDCT         PICK-UP HOLD DATA SET COUNT          23217500
         LTR   WF,WF               TEST FOR ANY                         23218000
         BZ    COJNOHLD            NO--ISSUE DIAGNOSTIC                 23218500
         ST    R1,COMEWORK         SAVE JQE ADDRESS                     23219000
         GETMAIN RC,LV=PSOLNGTH,SP=0  GET STORAGE FOR PSO ELEMENT       23219500
         SPACE 1                                                        23220000
         LR    WF,R1               PICK-UP STORAGE ADDRESS              23220500
         LTR   R15,R15             CHECK FOR STORAGE AVAILABLE          23221000
         BNZ   COJNOSTR            NONE--ISSUE DIAGNOSTIC               23221500
         USING PSODSECT,WF         PSO ADDRSSSABILITY                   23222000
         LR    R0,R1               CLEAR                             R4 23222500
         LA    R1,PSOLNGTH          PSO                              R4 23223000
         MVCL  R0,R14                STORAGE                         R4 23223500
         L     R1,COMEWORK         POINT TO JQE                      R4 23224000
         OI    PSOFLG1,PSOFHLD+PSOFJOBI+PSOFJOBN  SET PSO FLAGS         23224500
         MVC   PSOCRDT,COJSVCRD    SET CUT-OFF DATE IN ELEMENT      R41 23224600
         TM    COMNULOP,COJQOP     TEST FOR CLASS STRING                23225000
         BZ    *+14                NO--SKIP SETTING SUCH                23225500
         OI    PSOFLG1,PSOFCLAS    SET CLASS STRING PROVIDED            23226000
         MVC   PSOCLAS,COJSVCLS    SET CLASSES IN ELEMENT               23226500
         OI    PSOFLG2,PSOFDONE+PSOF$O  SET PSO FLAGS                   23227000
         MVC   PSOJOBN,JQEJNAME    SET JOB NAME IN ELEMENT              23227500
         MVC   PSOJOBNO,JQEJOBNO   SET JOB NUMBER IN ELEMENT            23228000
         TM    COMNULOP,COJCNCL    TEST FOR CANCEL DATA SETS            23228500
         BZ    *+12                NO--SET RELEASE                      23229000
         OI    PSOUFLG,PSOFDELC    SET CANCEL DATA SETS                 23229500
         B     COJQUEUE            GO QUEUE PSO ELEMENT                 23230000
         OI    PSOUFLG,PSOFRLSE    SET TO RELEASE DATA SETS             23230500
         TM    COMNULOP,COJRTE     TEST FOR RE-ROUTONG DESIRED          23231000
         BZ    *+12                NO--SKIP SETTING NEW ROUTE CODE      23231500
         STH   WB,PSOROUTE         SET NEW ROUTE CODE                   23232000
         OI    PSOUFLG,PSOFROUT    AND FLAG AS SUCH                     23232500
COJQUEUE DS    0H                  ADD ELEMENT TO QUEUE                 23233000
         LR    R15,WF              SAVE ADDRESS OF ELEMENT              23233500
         LA    WF,$OQUEUE-(PSONEXT-PSODSECT) POINT TO ELEMENT           23234000
         L     R14,PSONEXT         PT TO NEXT ELEMENT                   23234500
         LTR   R14,R14             TEST FOR LAST ELEMENT                23235000
         BZ    *+10                YES--SET NEW LST ELEMENT             23235500
         LR    WF,R14              ELSE PT TO NEXT ELEMENT              23236000
         B     *-12                AND LOOP TILL LAST ELEMENT           23236500
         ST    R15,PSONEXT         ADD NEW ELEMENT                      23237000
         DROP  WF                  DROP PSO ADDRESSABILITY              23237500
         OI    COMNULOP,COJPSOMD   FLAG REQUEST HONORED                 23238000
         MVC   COFQUE(21),=C'DATA SETS RELEASED TO'                  R4 23238500
         LA    R0,COFQUE+18-COFJOB SET LENGTH FOR NO RE-ROUTING         23239000
         TM    COMNULOP,COJCNCL    TEST FOR DATA SETS CANCELLED         23239500
         BZ    COJRNCL             NO--TRY FOR RE-ROUTING               23240000
         MVC   COFQUE+10(9),=C'CANCELLED' YES--INDICATE SUCH            23240500
         LA    R0,COFQUE+19-COFJOB SET MESSAGE LENGTH                   23241000
         B     COJRES              AND RESPOND TO OPERATOR              23241500
COJRNCL  DS    0H                  REQUEST IS NOT TO CANCEL             23242000
         TM    COMNULOP,COJRTE     TEST FOR RE-ROUTING                  23242500
         BZ    COJRES              IF NO RE-ROUTING--RESPOND            23243000
         LA    R15,COMFWORK        POINT TO ROUTE CODE FIELD         R4 23243500
         STH   WB,COMFWORK         SET ROUTE CODE IN IT              R4 23244000
         LA    R0,COFQUE+21        POINT TO TEXT AREA                R4 23244500
         BAL   LINK,COFRTC         CONVERT TO PRINTABLE              R4 23245000
         LA    R0,COFQUE+21+9-COFJOB SET MESSAGE LENGTH              R4 23245500
COJRES   DS    0H                  RESPOND TO THE OPERATOR              23246000
         $CWTO L=(R0)                                                   23246500
         B     COJUPONE            AND GET NEXT JOB                     23247000
         B     COJUPONE            GET NEXT JOB                         23247500
         SPACE 2                                                        23248000
*        MESSAGE WHEN JOB HAS NO HELD DATA SETS                         23248500
         SPACE 1                                                        23249000
COJNOHLD DS    0H                  SEND NO HELD DS DIAG                 23249500
         MVC   COFQUE(17),=C'NO HELD DATA SETS'  FORMAT MESSAGE         23250000
         LA    R0,COFQUE+17-COFJOB SET MESSAGE LENGTH                   23250500
         B     COJRES              RESPOND TO OPERATOR                  23251000
         SPACE 2                                                        23251500
*        MESSAGE NO STORAGE AVAILABLE FOR PSO ELEMEMNT                  23252000
         SPACE 1                                                        23252500
COJNOSTR DS    0H                  NO STORAGE AVAILABLE                 23253000
        $CRET  MSG='NO STORAGE AVAILABLE'                           R41 23253500
         SPACE 2                                                        23255000
COJRET   DS    0H                  EXIT $O COMMAND                      23255500
         TM    COMNULOP,COJPSOMD   TEST FOR ANY PSO ELEMENTS QUEUED     23256000
         BZ    COJEXIT             NO--EXIT COMMAND                     23256500
         L     R15,$PSOPCE         POINT TO PSO PCE                  R4 23257000
         $POST (R15),WORK          POST PSO FOR $O WORK                 23257500
COJEXIT  DS    0H                  EXIT                                 23258000
         $CRET ,                   EXIT $OJ COMMAMD                     23258500
*********************************************************************** 23259000
*                                                                     * 23259500
*        $O COMMAND EQUATES                                           * 23260000
*                                                                     * 23260500
*********************************************************************** 23261000
COJJOBS  EQU   X'80'               FLAG FOR JOBS FOUND                  23261500
COJPSOMD EQU   X'40'               FLAG FOR PSO ELEMENT ADDED           23262000
COJRTE   EQU   X'20'               FLAG FOR RE-ROUTING                  23262500
COJCNCL  EQU   X'10'               FLAG FOR CANCELLING                  23263000
COJQOP   EQU   X'08'               FLAG FOR CLASS STRING EXISTS         23263500
COJSVCLS EQU   COMJNAME,8          AREA FOR SAVING CLASSES              23264000
COJSVCRD EQU   COMREGSV,4          AREA FOR SAVING CUT-OFF DATE     R41 23264100
         SPACE 2                                                        23264500
         LTORG ,                                                        23265000
         TITLE 'HASP COMMAND PROCESSOR HASPCDV1- DEVICE LIST COMMANDS'  23265500
HASPCDV1 $COMGRUP  B,C,E,F,I,N,P,S,T,Z,DELAY=YES                        23266000
*********************************************************************** 23266500
*                                                                     * 23267000
*        DEVICE LISTS ARE OF THE FOLLOWING FORM                       * 23267500
*                                                                     * 23268000
*        $V DEV1,DEV2,...,DEVN                                        * 23268500
*        $V    = HASP COMMAND VERB                                    * 23269000
*        DEVX  = DEVICE DESIRED  PRT1,PUN1,RM2.PR1,ETC                * 23269500
*                                                                     * 23270000
*********************************************************************** 23270500
         LA    WC,COMPNTER         POINT TO FIRST OPERAND POINTER       23271000
         MVI   0(WC),0             INSURE BYTE ZERO                     23271500
         BXLE  WC,WE,*-4           LOOP                                 23272000
         LR    WC,R1               SAVE SUB-COMMAND OFFSET              23272500
CBXDCTL  $CFDCTL POINTER=(WD)      FIND THE DCT                         23273000
         USING DCTDSECT,R1                                              23273500
         LTR   R1,R1               WAS DCT LOCATED                      23274000
         BM    CBXRAT              IF NEGATIVE R1 POINTS TO -RAT        23274500
         BZ    CBXINVO             IF NOT, INVALID OPERAND              23275000
         TM    COMAUTH,CMBFLAGR    CONSOLE REMOTE OWNERSHIP RESTRICTED  23275500
         BZR   WC                  IF NOT, ENTER SUB-PROCESSOR          23276000
         TM    DCTDEVTP,DCTRJE     MAKE SURE REMOTE CATEGORY            23276500
         BZ    CBXINVO             ERROR IF NOT                         23277000
         CLI   DCTDEVTP,DCTLNE     IS THIS A LINE DCT...            R41 23277100
         BE    CBXINVO             BR IF YES (INVALID OPERAND)      R41 23277200
         LH    R0,COMJROUT         PICK UP JOB ROUTING OF CONSOLE    R4 23277500
         SLR   R15,R15             GET REMOTE                        R4 23280000
         IC    R15,COMJRMT          NUMBER LESS 1                    R4 23280500
         BCTR  R15,0                 FOR INDEX                       R4 23281000
         MH    R15,=Y(RATTLE)      FIND DESIRED                      R4 23281500
         AL    R15,$RATABLE         RAT ELEMENT                      R4 23282000
         LH    R0,RATROUTE-RATDSECT(,R15) GET RAT ROUTE CODE            23282500
CBXCKRT  CH    R0,DCTNO            DEVICE ROUTE MATCH                R4 23283000
         BER   WC                  IF OWNER ENTER SUB-PROCESSOR         23283500
CBXINVO  L     R1,0(0,WD)          PICK UP OPERAND                      23284000
         MVC   COMJNAME,=CL8' '    INSURE FIELD AFTER BLANK          R4 23284500
         MVC   COMMAND(9),0(R1)    MOVE TEXT                         R4 23285000
         MVC   COMMAND+9(16),=C' INVALID OPERAND'                    R4 23285500
         LA    R0,25               SET LENGTH                           23286000
CBXTRUNC $CWTO L=(R0),TRUNC=YES    TRUNCATE MLWTO                       23286500
         LA    WD,COMPNTER         POINT BACK TO FIRST OP POINTER       23287000
CBXTRUNL CLI   0(WD),0             POINTER STILL OPERAND                23287500
         BE    CBXTRUNN            TRY NEXT                             23288000
         ICM   R1,7,1(WD)          PICK UP DCT ADDRESS                  23288500
         TM    DCTSTAT,DCTINUSE    TEST DRAINED                         23289000
         BO    CBXTRUNN            SKIP FREE UNIT                       23289500
         $FREUNIT (R1)             FREE UNIT                            23290000
CBXTRUNN BXLE  WD,WE,CBXTRUNL      LOOP                                 23290500
CBXTRUND DS    0H                  EXIT DEVICE COMMANDS                 23291000
         $CRET ,                   EXIT                                 23291500
         SPACE 2                                                    R41 23291600
CBXRAT   DS    0H                                                   R41 23291700
         LCR   WA,R1               RECOMPLEMENT RAT ADDRESS         R41 23291800
         TM    COMAUTH,CMBFLAGR    TEST FOR RMT CONSOLE RESTRICTED  R41 23291900
         BZ    CBXRATD             BR IF NO, GO PROCCESS COMMAND    R41 23292000
         CLC   COMJROUT,RATCONRT-RATDSECT(WA)  TEST CMD ORIGIN      R41 23292100
         BNE   CBXINVO             BR IF NOT THE SAME RMT, INVALID  R41 23292200
CBXRATD  CLI   COMVERB,C'S'        TEST COMMAND VERB                R41 23292300
         BE    CSXRTER             $S -- ENTER SUBPROCESSOR         R41 23292400
         CLI   COMVERB,C'P'        TEST COMMAND VERB                R41 23292500
         BE    CPXRMT              $P -- ENTER SUBPROCESSOR         R41 23292600
         CLI   COMVERB,C'T'        TEST COMMAND VERB                R41 23292700
         BNE   CBXINVO             NOT $T -- INVALID VERB           R41 23292800
         CLC   COMDWORK+4(3),=C'CON'  IS THIS $\RN.CON COMMAND      R41 23292900
         BNE   CTXRMT              NO, MUST BE $TRMTX COMMAND       R41 23293000
         L     R1,=A(CTOR)         POINT TO REMOTE CONSOLE SETTING      23293500
         L     BASE3,=A(HASPCSY3)  SET BASE                             23294000
         BR    BASE3               ENTER PROCESSOR                      23294500
         EJECT                                                          23295000
*********************************************************************** 23295500
*                                                                     * 23296000
*        $B DEV,PAGES -- BACKSPACE DEVICE                             * 23296500
*        DEV   = PRINT/PUNCH PROCESSOR OUTPUT DEVICE                  * 23297000
*        PAGES = NUMBER OF PAGES TO BACK UP                           * 23297500
*              = DS - BACK UP TO START OF DATA SET                    * 23298000
*                                                                     * 23298500
*********************************************************************** 23299000
CB       TM    DCTDEVTP,DCTPRPU    IS DEVICE OF CORRECT CLASS           23299500
* TEST INCLUDES LOCAL AND REMOTE PRINTER AND PUNCH DEVICES              23300000
         BZ    CBXINVO             IF NOT, OPERAND INVALID              23300500
         BAL   R14,CTDEVCHK        CHECK FOR ACTIVE DEVICE              23303000
         LA    R0,1                SET DEFAULT PAGES TO BK/FWD SP       23303500
         BXH   WD,WE,CBXDEF        IF NO PAGE NUMBER ACCEPT DEFAULT     23304000
         SLR   R0,R0               ZERO ACCUMULATOR                     23304500
         ST    R0,COMFWORK         AND WORK AREA                        23305000
         L     R15,0(0,WD)         PICK UP PARAMETER                    23305500
         CLI   0(R15),C'D'         IS THIS DATA SET SPACING             23306000
         BNE   CBCNVT1             IF NOT, SPACE PAGES                  23306500
         SLR   R15,R15             SET R15 FOR BK SP DATASET            23307000
         CLI   COMVERB,C'F'        SEPARATE $F AND $B                   23307500
         BNE   CBXDEF              IF $B SET TO BACKSPACE               23308000
         BCT   R15,CBXDEF          SET R15 FOR FWDSP DATASET            23308500
CBCNVT1  CLI   0(R15),C'0'         LOOK FOR NUMERIC ( FA-FF INCLUDED )  23309000
         BL    CBXINVO             ERROR IF NOT NUMERIC                 23309500
         MH    R0,=H'10'           MULTIPLY BY TEN                      23310000
         MVN   COMFWORK+1(1),0(R15) MOVE ONE'S DIGIT TO WORK AREA       23310500
         AH    R0,COMFWORK         ADD ONE'S DIGIT                      23311000
         CL    R0,=F'9999'         LOOK FOR MAXIMUM VALUE               23311500
         BH    CBXINVO             ERROR IF HIGH                        23312000
         LA    R15,1(0,R15)        NEXT CHARACTER                       23312500
         CLI   0(R15),C'0'         TEST FOR END                         23313000
         BNL   CBCNVT1             LOOP IF NOT END                      23313500
         LTR   R0,R0               TEST FOR DATASET SPACING             23314000
         BZ    CBXNEXT             IGNORE IF ZERO                       23314500
CBXDEF   L     LINK,DCTPCE         LOCATE PCE                        R4 23315000
         LTR   R0,R0               TEST COUNT                           23315500
         BZ    CBXSET              DATA SET SPACING IF ZERO             23316000
         CLI   COMVERB,C'F'        SEPARATE $F FROM $B                  23316500
         BE    CBXPOSTA            IF FORWARDSPACE SKIP NEXT            23317000
         LNR   R0,R0               SET BACKSPACE COUNT                  23317500
CBXPOSTA L     R15,PDDBPGCT-PCEDSECT(,LINK)  GET CURRENT PAGE NBR       23318000
         AR    R15,R0              ADD IN $F/$B COUNT               R41 23318500
         BM    CBXBSPD             BR IF SHOULD BE '$BPRT,D'        R41 23319000
         C     R15,=F'16777215'    TEST FOR MAX PAGE NUMBER         R41 23319500
         BNH   CBXSET              BRANCH IF NO                     R41 23320000
         L     R15,=F'16777215'    GET MAX $F PAGE NUMBER           R41 23320500
         B     CBXSET              BR TO SET SKIP COUNT             R41 23321000
CBXBSPD  SLR   R15,R15             SET FOR '$BPRT,D'                R41 23321500
         SLR   R0,R0               SET FOR '$BPRT,D'                R41 23321600
CBXSET   ST    R15,PDDBSKIP-PCEDSECT(,LINK) SAVE SKIP COUNT             23322000
         ST    R0,PFSBSCT-PCEDSECT(,LINK) SET $F/$B PAGE COUNT      R41 23322100
         OI    DCTFLAGS,DCTBKSP    SET INDICATOR                        23322500
CBXPOST  TM    DCTSTAT,DCTINUSE    TEST FOR DCT ACTIVE                  23323000
         BZ    CBXNEXT             IF NOT SKIP POST OF DCT'S PCE        23323500
         L     R14,DCTPCE          PICK UP PCE ADDRESS               R4 23324000
         USING PCEDSECT,R14        TEMPORARY PCE ADDRESSABILITY      R4 23324500
         CLI   DCTDEVTP,DCTLOG     TEST FOR LOGON DCT                R4 23325000
         BNE   SKIP150             NO--TEST FOR LINE DCT             R4 23325500
         OI    MSCANREQ,MSCNSLOG   SET SCAN OF ACTIVE LOGON DCTS     R4 23326000
SKIP150  CLI   DCTDEVTP,DCTLNE     TEST FOR LINE DCT                 R4 23326500
         BNE   *+24                NO--DO POST                       R4 23327000
         TM    MDCTTYPE,DCTPSNA    TEST FOR SNA LINE DCT             R4 23327500
         BO    SKIP160             YES--SET SCAN                     R4 23328000
         OI    MSCANREQ,MSCNBACT   SET SCAN OF                       R4 23328500
         B     *+8                  ACTIVE BSC LINE DCTS             R4 23329000
SKIP160  OI    MSCANREQ,MSCNSIDL+MSCNSALL SCAN ACTIVE SNA LINE DCTS  R4 23329500
         DROP R14                                                    R4 23330000
         $POST (R14),IO            POST PROCESSOR FOR I/O            R4 23330500
CBXNEXT  BXLE  WD,WE,CBXDCTL       LOCATE NEXT DCT IF REQUESTED         23331000
CBXRET   MVC   COMMAND(2),=C'OK'   SET OK                               23331500
         LA    R0,2                SET LENGTH                           23332000
         B     CBXTRUNC            TRUNCATE                             23332500
         EJECT                                                          23333000
*********************************************************************** 23333500
*                                                                     * 23334000
*        $C DEV -- CANCEL ACTIVITY ON DEVICE                          * 23334500
*        DEV   = INPUT SERVICE PROCESSOR INPUT DEVICE                 * 23335000
*              = PRINT/PUNCH PROCESSOR OUTPUT DEVICE                  * 23335500
*                                                                     * 23336000
*********************************************************************** 23336500
CC       TM    DCTDEVTP,DCTRPP     TEST FOR DEVICE CLASS                23337500
         BZ    CBXINVO             IF NOT, INVALID OPERAND              23339500
         CLI   DCTDEVTP,DCTINR     CHECK FOR INTERNAL RDR               23340000
         BE    CBXINVO             INVALID IF INTRDR                    23340500
         BAL   R14,CTDEVCHK        CHECK FOR ACTIVE DEVICE              23341000
* INCLUDES LOCAL AND REMOTE RDRS,ALL PUNCHES AND PRINTERS               23341500
         OI    DCTFLAGS,DCTDELET   SET DELETE FLAG                      23342000
         NI    DCTFLAGS,255-DCTSTOP RESET STOP INDICATOR IF ON          23342500
         B     CBXPOST             POST DCT'S PCE FOR I/O               23343000
         EJECT                                                          23343500
*********************************************************************** 23344000
*                                                                     * 23344500
*        $E DEV -- RESTART CURRENT FUNCTION ON DEVICE                 * 23345000
*        DEV   = PRINT/PUNCH PROCESSOR OUTPUT DEVICE                  * 23345500
*              = LINE MANAGER TELEPROCESSING DEVICE                   * 23346000
*              = LOGON DCT                                            * 23346500
*                                                                     * 23347000
*********************************************************************** 23347500
CE       DS    0H                  RESTART DEVICE                       23348000
         TM    DCTDEVTP,DCTPRPU    TEST FOR PRT/PUN DEVICE              23349000
         BO    CEDEVCK             YES--CHECK FOR DEVICE ACTIVE         23349500
         CLI   DCTDEVTP,DCTLOG     TEST FOR LOGON DCT                R4 23350000
         BE    CEDEVCK             YES--CHECK FOR ACTIVE DCT         R4 23350500
         CLI   DCTDEVTP,DCTLNE     TEST FOR RJE LINE                    23353000
         BNE   CBXINVO             NO--ERROR IN DEVICE                  23353500
CEDEVCK  BAL   R14,CTDEVCHK        CHECK FOR DEVICE ACTIVE              23354000
         TM    DCTDEVTP,DCTPRPU    TEST DCT TYPE                     R4 23354500
         BO    CEXGOOD             BRANCH IF NOT LINE                R4 23355000
         TM    MDCTTYPE,DCTPSNA    CHECK LINE TYPE                   R4 23356000
         BO    CEXPOST             GO POST LNE MGR IF VTAM LINE      R4 23356500
         CLI   DCTBUFCT,1          IS LINE I/O ACTIVE                   23357500
         BNE   CEXGOOD             BRANCH IF NOT                        23358000
         ST    R1,PCER1            SAVE R1                              23358500
         L     R15,DCTBUFAD        R15 = TP BUFFER ADDRESS           R4 23359000
         USING BUFDSECT,R15        TEMPORARY BUF ADDRESSABILITY      R4 23359500
         CLI   IOBECBCC-BUFDSECT(R15),X'48'  HAS I/O PURGED...       R4 23360000
         BE    CEXGOOD             BR IF YES                         R4 23360500
         L     R1,DCTDCB           R1 = DCB ADDRESS                     23361000
         MVI   CEPURGE,X'A1'       PREPARE PURGE                     R4 23361500
         XC    CEPURGE+4(12),CEPURGE+4  PARM LIST                    R4 23362000
         MVC   CEPURGE+1(3),DCBDEBA-IHADCB(R1)  DEB ADDR TO PARMS       23362500
         LA    R1,CEPURGE          R1 = ADDRESS OF PURGE PARMS          23363000
         PURGE (1)                 ISSUE PURGE                          23363500
         L     R1,PCER1            RELOAD R1                            23364000
         L     R15,DCTBUFAD        R15 = TP BUFFER ADDRESS              23364500
         CLI   IOBECBCC,X'48'      HAS I/O BEEN PURGED               R4 23365000
         BNE   CEXGOOD             BRANCH IF NOT                        23365500
         L     R0,$RJECHEQ         GET TOP OF RJE BUFFER QUEUE       R4 23366000
SKIP170  ST    R0,BUFCHAIN         CHAIN BUFFER TO RJE QUEUE         R4 23366500
         CS    R0,R15,$RJECHEQ     ATTEMPT TO UPDATE QUEUE PNTRS     R4 23367000
         BNE   SKIP170             RETRY IF UNSUCCESSFUL             R4 23367500
CEXPOST  L     R14,$MLLMPCE        GET LINE MANAGER PCE ADDRESS      R4 23368000
         $POST (R14),WORK          POST LINE MANAGER FOR WORK        R4 23368500
         DROP  R15                 RELEASE TEMPORARY BASE REG        R4 23369000
CEXGOOD  OI    DCTFLAGS,DCTRSTRT   TURN ON RESTART FLAG                 23369500
         NI    DCTFLAGS,255-DCTSTOP CLEAR STOP                          23370000
         B     CBXPOST             POST I/O                             23370500
CEPURGE  EQU   $POSTSAV            PURGE PARM LIST                   R4 23371000
         EJECT                                                          23371500
*********************************************************************** 23372000
*                                                                     * 23372500
*        $F DEV,PAGES -- FORWARDSPACE DEVICE                          * 23373000
*        DEV   = PRINT/PUNCH DEVICE                                   * 23373500
*        PAGES = NUMBER OF PAGES TO SKIP                              * 23374000
*              = DS - SKIP TO END OF DATA SET                         * 23374500
*                                                                     * 23375000
*********************************************************************** 23375500
CF       EQU   CB                  COMMON ENTRY WITH BACKSPACE          23376000
         EJECT                                                          23376500
*********************************************************************** 23377000
*                                                                     * 23377500
*        $I DEV -- INTERRUPT ACTIVITY ON DEVICE                       * 23378000
*        DEV   = PRINT/PUNCH DEVICE                                   * 23378500
*                                                                     * 23379000
*********************************************************************** 23379500
CI       TM    DCTDEVTP,DCTPRPU    TEST FOR PRT/PUN                     23380000
         BZ    CBXINVO             IF NOT, ERROR                        23380500
         BAL   R14,CTDEVCHK        CHECK FOR ACTIVE DEVICE              23383000
         OI    DCTFLAGS,DCTBKSP    SET BACKSPACE                        23383500
         B     CEXGOOD             DO RESTART                           23384000
         EJECT                                                          23384500
*********************************************************************** 23385000
*                                                                     * 23385500
*        $N DEV -- REPEAT CURRENT FUNCTION ON DEVICE                  * 23386000
*        DEV   = PRINT/PUNCH PROCESSOR OUTPUT DEVICE                  * 23386500
*                                                                     * 23387000
*********************************************************************** 23387500
CN       TM    DCTDEVTP,DCTPRPU    TEST FOR VALID DEVICE GROUP          23388000
* TEST INCLUDES PRINTER AND PUNCH DEVICES                               23388500
         BZ    CBXINVO             IF NOT, INVALID OPERAND              23389000
         BAL   R14,CTDEVCHK        CHECK FOR ACTIVE DEVICE              23391500
         OI    DCTFLAGS,DCTRPT     SET REPEAT FLAG                      23392000
         B     CBXPOST             POST I/O                             23392500
         SPACE 2                                                        23393000
*********************************************************************** 23393500
*                                                                     * 23394000
*        ROUTINE TO TEST FOR DEVICE ACTIVE                            * 23394500
*                                                                     * 23395000
*********************************************************************** 23395500
         SPACE 2                                                        23396000
CTDEVCHK DS    0H                  CHECK FOR DEVICE ACTIVE              23396500
         TM    DCTSTAT,DCTINUSE    TEST FOR ACTIVE DEVICE               23397000
         BNZR  R14                 YES--RETURN                          23397500
         MVC   COMREGSV(L'COMMAND),COMMAND SAVE COMMAND OVER $WTO       23398000
         MVC   COMMAND(L'DCTDEVN),DCTDEVN SET DEVICE NAME IN MSG        23398500
         MVC   COMMAND+L'DCTDEVN(15),=C' NOT ACTIVE ON '  SET MSG       23399000
         MVC   COMMAND+L'DCTDEVN+15(L'$SID),$SID  SET SYSTEM ID         23399500
         $CWTO L=L'DCTDEVN+15+L'$SID  SEND IT                           23400000
         MVC   COMMAND,COMREGSV    RESTORE COMMAND TO AREA              23400500
         CLI   COMVERB,C'B'        THIS BACKSPACE                    R4 23401000
         BE    SKIP180             SKIP NEXT IF YES                  R4 23401500
         CLI   COMVERB,C'F'        THIS FORWARD SPACE                R4 23402000
         BNE   SKIP190             SKIP NEXT IF NOT                  R4 23402500
SKIP180  ALR   WD,WE               FORGET NEXT OPERAND               R4 23403000
SKIP190  BXLE  WD,WE,CBXDCTL       AND LOCATE NEXT OPERAND              23403500
         B     CBXTRUND            NO--EXIT DEVICE COMMANDS             23404000
         EJECT                                                          23404500
*********************************************************************** 23405000
*                                                                     * 23405500
*        $P DEV -- STOP DEVICE AFTER THE CURRENT FUNCTION COMPLETES   * 23406000
*        DEV   = PRINT/PUNCH PROCESSOR OUTPUT DEVICE                  * 23406500
*              = INPUT SERVICE PROCESSOR INPUT DEVICE                 * 23407000
*              = LINE MANAGER TELEPROCESSING DEVICE                   * 23407500
*              = LOGON DCT                                            * 23408000
*                                                                     * 23408500
*********************************************************************** 23409000
CP       NULL                                                           23409500
         CLI   DCTDEVTP,DCTINR     TEST FOR INTERNAL READER             23410000
         BE    CBXINVO             IF SO REJECT                         23410500
         OI    DCTSTAT,DCTDRAIN    SET DRAIN FLAG                       23411000
         TM    DCTSTAT,DCTINUSE    TEST FOR DEVICE NOT ACTIVE           23411500
         BNO   CPNIU               PREPARE FOR FREUNIT IF NOT IN USE R4 23412000
         L     R14,$MLLMPCE        POINT TO LINE MANAGER PCE         R4 23412500
         USING PCEDSECT,R14        TEMPORARY PCE ADDRESSABILITY      R4 23413000
         CLI   DCTDEVTP,DCTLOG     TEST FOR LOGON DCT                R4 23413500
         BNE   SKIP200             TEST FOR LINE DCT IF NOT          R4 23414000
         OI    MSCANREQ,MSCNSLOG   SET SCAN OF ACTIVE SNA LOGON DCTS R4 23414500
         B     CPPOST              POST LINE MANAGER                 R4 23415000
SKIP200  CLI   DCTDEVTP,DCTLNE     TEST FOR LINE DCT                 R4 23415500
         BNE   CBXNEXT             NEXT DCT IF NOT                   R4 23416000
         TM    MDCTTYPE,DCTPSNA    TEST FOR SNA LINE DCT             R4 23416500
         BNO   CBXNEXT             NEXT DCT IF NOT                   R4 23417000
         OI    MSCANREQ,MSCNSALL+MSCNSIDL SCAN ACTIVE SNA LINE DCTS  R4 23417500
         DROP  R14                                                   R4 23418000
CPPOST   $POST (R14),WORK          POST LINE MANAGER                 R4 23418500
         B     CBXNEXT             NEXT DCT                          R4 23419000
CPNIU    ST    R1,0(0,WD)          SET DCT ADDRESS IN PLACE OF OP    R4 23419500
         MVI   0(WD),X'80'         SET FLAG                             23420000
         B     CBXNEXT             NEXT DCT                             23420500
         SPACE 2                                                    R41 23420600
CPXRMT   DS    0H                                                   R41 23420700
         LCR   WA,R1               RECOMPLEMENT RAT ADDRESS         R41 23420800
         NI    RATFLAGS-RATDSECT(WA),255-RATSRMT FORCE $SRMT OFF    R41 23420900
         L     R15,RATLDCT-RATDSECT(,WA)  PICK UP LINE DCT ADDRESS  R41 23421000
         LTR   R15,R15             TEST LINE DCT ADDRESS            R41 23421100
         BZ    CBXNEXT             BRANCH IF NONE, NEXT OPERAND     R41 23421200
         OI    MDCTSTAT-DCTDSECT(R15),DCTSOFF  INIDICATE QUIESCE    R41 23421300
         B     CBXNEXT             PROCESS NEXT OPERAND             R41 23421400
         EJECT                                                      R41 23421500
*********************************************************************** 23421600
*                                                                     * 23422000
*        $S DEV -- START DEVICE                                       * 23422500
*        DEV   = INPUT SERVICE PROCESSOR DEVICE                       * 23423000
*              = PRINT/PUNCH PROCESSOR OUTPUT DEVICE                  * 23423500
*              = LINE MANAGER TELEPROCESSING DEVICE                   * 23424000
*              = CONSOLE DEVICE                                       * 23424500
*                                                                     * 23425000
*                                                                     * 23425500
*********************************************************************** 23426000
CS       DS    0H                  START A HASP DEVICE                  23426500
         CLI   DCTDEVTP,DCTINR     CHECK FOR INTERNAL READER            23427000
         BE    CBXINVO             YES--INVALID TO START                23427500
         NI    DCTSTAT,255-DCTDRAIN  TURN 'OFF' DRAIN BIT               23428000
         TM    DCTDEVTP,DCTRJE     TEST FOR REMOTES                     23429000
         BZ    SKIP210             SKIP NEXT TESTS IF LOCAL DEVICE   R4 23431000
         TM    DCTDEVTP,DCTDEV     CHECK FOR REMOTE DEVICE DCT       R4 23431500
         BNZ   CSXRMT              BYPASS ALLOCATION IF YES          R4 23432000
         TM    MDCTTYPE,DCTPSNA    TEST LINE OR LOGON TYPE           R4 23432500
         BO    CSXRMT              BYPASS ALLOCATION IF VTAM         R4 23433000
SKIP210  L     WA,DCTDCB           START TO CHECK FOR REAL DEVICE       23433500
         L     R15,DCBDEBAD-IHADCB(,WA)  POSSIBLE                       23434000
         ICM   R15,3,DEBSUCBA+2-DEBDSECT(R15) NOT POSSIBLE              23434500
         BZ    CSXINVU             IF NO UCB POINTER INITIALIZED        23435000
         LR    WA,R1               SAVE DCT POINTER OVER ALLOCATE       23435500
         $ALLOC (R1),CSXINUSE      ALLOCATE UCB TO HASP DCT             23436000
         LR    R1,WA               RELOAD DCT PTR                       23436500
         NI    DCTSTAT,255-DCTHOLD TURN OFF HOLD BIT                    23437000
         TM    DCTDEVTP,DCTPRPU    TEST FOR PRT/PUN                     23437500
         BZ    *+8                 IF NOT DON'T TURN OFF PAUSE BIT      23438000
         NI    DCTSTAT,255-DCTPAUSE  PRT/PUN--TURN OFF PAUSE BIT        23438500
CSXRMT   DS    0H                  COME HERE FOR REMOTE DEVICES         23439000
         NI    DCTFLAGS,255-DCTSTOP  TURN OFF STOP BIT                  23439500
         CLI   DCTDEVTP,DCTLOG     CHECK FOR LOGON DCT               R4 23440000
         BE    SKIP220             YES--POST LINE MANAGER            R4 23440500
         CLI   DCTDEVTP,DCTLNE     CHECK FOR RJE LINE                   23441000
         BNE   CSXNLNE             NO--SKIP POSTING OF MLLM             23441500
SKIP220  L     R14,$MLLMPCE        POINT TO RTAMS PCE                R4 23442000
         USING PCEDSECT,R14        TEMPORARY PCE ADDRESSABILITY      R4 23442500
         OI    MSCANREQ,MSCNUNIT   SCAN INACTIVE LINE AND LOGON DCTS R4 23443000
         DROP  R14                 RELEASE TEMPORARY PCE BASE        R4 23443500
         $POST (R14),WORK          POST LINE MANAGER FOR WORK        R4 23444000
         B     CSXPOST             THEN BR TO $POST JOB AND JOT      R4 23444500
         EJECT                                                       R4 23445000
CSXNLNE  TM    DCTDEVTP,DCTPRPU+DCTRJE  TEST FOR REMOTE DEVICE      R41 23445100
         BO    CSXPOST             BRANCH IF YES, SKIP POST         R41 23445200
         TM    DCTSTAT,DCTINUSE    TEST DEVICE STATUS               R41 23445300
         BO    CSXPOST             BRANCH IF IN USE, SKIP POST      R41 23445400
         L     WA,DCTPCE           GET PCE ADDRESS FROM DCT         R41 23445500
        $POST  (WA),WORK            AND INDICATE DEVICE AVAILABLE    R4 23446000
CSXPOST $POST  $HASPECF,(JOB,JOT)  $POST ALL FOR JOB AND JOT         R4 23446500
         B     CBXPOST             AND EXIT                             23447000
CSXINVU  DS    0H                  COM HERE WHEN INVALID UNIT           23447500
         MVC   COMMAND+L'DCTDEVN(13),=C' INVALID UNIT'  SET MSG         23448000
         LA    R0,L'DCTDEVN+13     SET MSG LENGTH                       23448500
         B     CSXDEVNM            ADD NAME TO MSG AND ISSUE            23449000
CSXINUSE DS    0H                  COME HERE IF DEVICE CAN'T BE AL      23449500
         LR    R1,WA               RESTORE DCT POINTER                  23450000
         MVC   COMMAND+L'DCTDEVN(14),=C' NOT AVAILABLE'  SET MSG        23450500
         LA    R0,L'DCTDEVN+14     COMPUTE MESSAGE LENGTH               23451000
CSXDEVNM MVC   COMMAND(L'DCTDEVN),DCTDEVN  ADD DEVICE NAME              23451500
         OI    DCTSTAT,DCTDRAIN    IF NOT ALLOCATED TURN ON DRAIN       23452000
         $CRET L=(R0)              AND ISSUE DIAGNOSTIC                 23452500
CSXRTER  LCR   R1,R1               COMPLEMENT ADDRESS OF RAT        R41 23452600
         USING RATDSECT,R1         ESTABLISH ADDRESSABILITY         R41 23452700
         TM    RATTYPE,DCTPSNA     TEST FOR REMOTE TYPE             R41 23452800
         BZ    CBXINVO             BR IF NOT SNA, INVALID OPERAND   R41 23452900
         OI    RATFLAGS,RATSRMT    SET START FLAG IN RAT            R41 23453000
         STCK  COMDWORK            STORE CLOCK VALUE                R41 23453100
         MVC   RATIMER,COMDWORK     AND PLACE IN RAT                R41 23453200
         L     R15,$MLLMPCE        LOAD PROCESSOR ADDRESS           R41 23453300
         OI    MSCANREQ-PCEDSECT(R15),MSCNRAT SET SCAN FLAG         R41 23453400
         $POST (R15),WORK          POST LINE MANAGER                R41 23453500
         B     CBXNEXT             TEST NEXT REMOTE                 R41 23453600
         EJECT                                                          23453700
CZXNEXT  EQU   CBXNEXT             COMMON ROUTINE ENTRY                 23453800
CTXINVO  EQU   CBXINVO             COMMON ROUTINE ENTRY                 23454000
CZXRET   EQU   CBXRET              COMMON ROUTINE ENTRY                 23454500
*********************************************************************** 23455000
*                                                                     * 23455500
*        $T DEV -- SET DEVICE                                         * 23456000
*        DEV   = PRINT/PUNCH PROCESSOR OUTPUT DEVICE                  * 23456500
*              = INPUT SERVICE PROCESSOR DEVICE                       * 23457000
*              = LINE                                                 * 23457500
*                                                                     * 23458000
* NOTES                                                               * 23458500
*        READER SETTING FORMAT FOLLOWS                                * 23459000
*        H= Y/N - SET TO HOLD JOBS READ OR NOT                        * 23459500
*        P= DEST - SET DEFAULT PRINT DESTINATION FOR JOBS READ        * 23460000
*        U= DEST - SET DEFAULT PUNCH DESTINATION FOR JOBS READ        * 23460500
*        A= NUMBER - SET CONSOLE AUTHORITY LEVEL                      * 23461000
*        C= CLASS - SET DEFAULT JOB CLASS FOR JOBS READ               * 23461500
*        Q= CLASS - SET DEFAULT MSG CLASS FOR JOBS READ               * 23462000
*        S= +/- SID,SID,... - SET/ADD/SUBTRACT DEFAULT AFFINITIES     * 23462500
*           ANY/IND - SET AFFINITY TO ALL OR INDEPENDANT MODE         * 23463000
*                                                                     * 23465000
*        PRINTER SETTING FORMAT FOLLOWS                               * 23465500
*        B= Y/N FOR BURST/NOBURST ON 3800                             * 23466000
*        M= Y/N - EDGE-MARKING BETWEEN UNITS OF 3800 PRINTING OR NOT  * 23466500
*        C= CARRAGE TAPE NAME OR FCB IMAGE FROM SYS1.IMAGELIB         * 23467000
*        F= FORM OR 'AUTOM'                                           * 23467500
*        T= TRAIN NAME 'QN,TN,RN,PN,HN,ETC'                           * 23468000
*           OR UCS IMAGE FROM SYS1.IMAGELIB                           * 23468500
*           SYSTEM DEFAULT FOR 3800 CHAR SET FROM SYS1.IMAGELIB       * 23469000
*        K= 1/2/3/R - FORCE SPACING FOR DATA SET                      * 23469500
*        O= FLASH FRAME ID FOR 3800 PRINTERS                          * 23470000
*        S= Y/N - PRINT SEPARATORS BETWEEN UNITS OF WORK OR NOT       * 23470500
*               - PRINT REMOTE MESSAGES BETWEEN UNITS OF WORK OR NOT  * 23471000
*        P= Y/N - LOCAL PRINTER PAUSE BETWEEN UNITS OF WORK OR NOT    * 23471500
*        Y= COPY-MODIFICATION RECORD ID FOR 3800 FROM SYS1.IMAGELIB   * 23472000
*        Q= LIST OF SYSOUT CLASSES AVAILABLE TO THE PRINTER           * 23472500
*        R= NUMBER TO SET ROUTE CODE THIS PRINTER WILL PROCESS        * 23473000
*        X1/X2/X3/X4= 3800 CHAR SET ID'S FROM SYS1.IMAGELIB           * 23473500
*        Z= NUMBER-SET COMPACTION TABLE NUMBER                        * 23473600
*                                                                     * 23474000
*                                                                     * 23474500
*        PUNCH SETTING FORMAT FOLLOWS                                 * 23475000
*        S= Y/N - PUNCH SEPARATORS BETWEEN UNITS OF WORK OR NOT       * 23475500
*        P= Y/N - LOCAL PUNCH PAUSE BETWEEN UNITS OF WORK OR NOT      * 23476000
*        Q= LIST OF SYSOUT CLASSES AVAILABLE TO THE PUNCH             * 23476500
*        R= NUMBER TO SET ROUTE CODE THIS PUNCH WILL PROCESS          * 23477000
*        Z= NUMBER-SET COMPACTION TABLE NUMBER                        * 23477100
*                                                                     * 23477500
*        RJE LINE SETTING FORMAT FOLLOWS                              * 23478000
*        E= Y/N - LOG CHANNEL ENDS OR NOT (TESTING MODE ONLY)         * 23478500
*        D= QUIESCE/IMMEDIATE TO CAUSE LINE DISCONNECT                * 23479000
*        P= PASSWORD OR NULL TO SET OR NULLIFY A PASSWORD             * 23479500
*                                                                     * 23480000
*        REMOTE DEVICE SETTING FORMAT FOLLOWS                         * 23480100
*        A=Y/N SET OR RESET AUTOLOGON FOR SNA DEVICES                 * 23480200
*        D=NNN INCREASE OR D INITIALIZATION                           * 23480300
*********************************************************************** 23480500
         SPACE 1                                                     R4 23481000
         DROP  R1                                                       23481500
         USING DCTDSECT,WA                                              23482000
CT       LR    WA,R1               SAVE DCT POINTER                     23482500
         MVI   COMNULOP,0          CLEAR FLAG FOR RDI LOOP              23483000
         LA    WC,CTXINVO          SET ERROR EXIT ADDRESS               23483500
         BXH   WD,WE,CTXINVO       IF NO CORRESPONDING PARAMETER EXIT   23484000
CTXLOOP  DS    0H                                                       23484500
         L     R1,0(0,WD)          PICK UP OPERAND ADDRESS              23485000
         CLI   DCTDEVTP,DCTLNE     IS THIS A LINE SETTING               23485500
         BE    CTXLINE             YES--GO CHANGE LINE                  23486000
         CLI   DCTDEVTP,DCTLOG     IS THIS A LOGON SETTING           R4 23487000
         BE    CTXLOG              YES--GO CHANGE LOGON              R4 23487500
         TM    DCTDEVTP,DCTRPP     TEST FOR READER/PRINTER/PUNCH        23489000
         BZR   WC                  IF NOT, INVALID OPERAND              23491000
         CLI   1(R1),C'='          TEST FOR PROPER FORMAT               23491500
         BNE   CTXLOOP0            IF NOT, POSSIBLY A 3800 OPERAND   R4 23492000
         TM    DCTDEVTP,DCTPRPU    TEST FOR PRINTER/PUNCH               23492500
         BZ    CTXRDR              IF NOT, MUST BE READER               23493000
         B     CTXLOOP1            IF YES, SKIP 3800 PROCESSNG       R4 23495500
CTXLOOP0 TM    DCTPPSW2,DCTNIPRT   TEST FOR 3800 PRINTER             R4 23496000
         BNOR  WC                  IF NOT, ERROR                     R4 23496500
         CLI   0(R1),C'X'          CHECK FOR 'XN=' FORMAT            R4 23497000
         BNER  WC                  IF NOT, ERROR                     R4 23497500
         CLI   2(R1),C'='          STILL CHECKING  'XN='             R4 23498000
         BNER  WC                  IF NOT, ERROR                     R4 23498500
CTXLOOP1 L     WB,4(0,WD)          POINT TO NEXT OPERAND             R4 23499000
         SR    WB,R1               GET SIZE OF OPERAND + 1              23499500
         SH    WB,=H'4'            GET TEXT MACHINE COUNT               23500000
         BMR   WC                  EXIT IN ERROR IF NULL                23500500
        $CFSEL (B,CTXB),(C,CTXC),(F,CTXF),(K,CTXK),(M,CTXM),         R4C23501000
               (O,CTXO),(P,CTXP),(Q,CTXQ),(R,CTXR),(S,CTXS),         R4C23501500
               (T,CTXT),(X,CTXX),(Y,CTXY),(Z,CTXZ),OPERAND=(R1),    R41C23502000
               TYPE=CALL                                            R41 23502100
         BR    WC                  IF NOT FOUND, INVALID             R4 23502500
         EJECT                                                       R4 23503000
*********************************************************************** 23503500
*        SET BURST OPTION FOR 3800 PRINTER                            * 23504000
*********************************************************************** 23504500
CTXB     TM    DCTPPSW2,DCTNIPRT   TEST FOR 3800 PRINTER             R4 23505000
         BZR   WC                  ERROR IF NOT                      R4 23505500
         CLI   2(R1),C'Y'          TEST FOR 'BURST=YES'              R4 23506000
         BNE   CTXBN               IF NOT TRY 'BURST=NO'             R4 23506500
         OI    DCTPPSW2,DCTNIBRS   SET BURSTER ON                    R4 23507000
         B     CTXLOOPA            GO $POST AND GET NEXT KEYWORD     R4 23507500
CTXBN    CLI   2(R1),C'N'          TEST FOR 'BURST=NO'               R4 23508000
         BNER  WC                  IF NOT, ERROR                     R4 23508500
         NI    DCTPPSW2,255-DCTNIBRS SET BURST FLAG OFF              R4 23509000
         B     CTXLOOPA            GO $POST AND GET NEXT KEYWORD     R4 23509500
*********************************************************************** 23510000
*        SET EDGE-MARK OPTION FOR 3800 PRINTER                        * 23510500
*********************************************************************** 23511000
CTXM     TM    DCTPPSW2,DCTNIPRT   TEST FOR 3800 PRINTER             R4 23511500
         BZR   WC                  ERROR IF NOT                      R4 23512000
         CLI   2(R1),C'Y'          TEST FOR 'MARK=YES'               R4 23512500
         BNE   CTXMN               IF NOT TRY 'MARK=NO'              R4 23513000
         OI    DCTPPSW2,DCTNIMRK   INDICATE EDGE-MARKING             R4 23513500
         B     CTXLOOPC            GET NEXT KEYWORD                  R4 23514000
CTXMN    CLI   2(R1),C'N'          TEST FOR 'MARK=NO'                R4 23514500
         BNER  WC                  ERROR IF NOT                      R4 23515000
         NI    DCTPPSW2,255-DCTNIMRK SET EDGE-MARK FLAG OFF          R4 23515500
         B     CTXLOOPC            GET NEXT KEYWORD                  R4 23516000
*********************************************************************** 23516500
*        SET FLASH FRAME ID FOR 3800 PRINTER                          * 23517000
*********************************************************************** 23517500
CTXO     TM    DCTPPSW2,DCTNIPRT   TEST FOR 3800 PRINTER             R4 23518000
         BZR   WC                  ERROR IF NOT                      R4 23518500
         LA    R15,DCTFLASH        POINT TO FLASH FRAME FIELD        R4 23519000
         CLC   2(5,R1),=C'RESET'   TEST FOR FLASH RESET              R4 23519500
         BNE   SKIP230             BR IF NOT                         R4 23520000
         MVC   0(4,R15),=C'****'   RESET FLASH FRAME ID              R4 23520500
         B     CTXLOOPA            GO $POST AND GET NEXT KEYWORD     R4 23521000
SKIP230  SLR   R0,R0               CHANGE INDICATOR                  R4 23521500
         B     CTXIDVAL            GO CHECK FOR VALID NAME           R4 23522000
*********************************************************************** 23522500
*        SET MODIFY IMAGE FOR 3800 PRINTER                            * 23523000
*********************************************************************** 23523500
CTXY     TM    DCTPPSW2,DCTNIPRT   TEST FOR 3800 PRINTER             R4 23524000
         BZR   WC                  ERROR IF NOT                      R4 23524500
         LA    R15,DCTMODF         POINT TO MODIFY-IMAGE FIELD       R4 23525000
         CLC   2(5,R1),=C'RESET'   TEST FOR MODIFY RESET             R4 23525500
         BNE   SKIP240             BR IF NOT                         R4 23526000
         MVC   0(4,R15),=C'****'   RESET MODIFY ID                   R4 23526500
         B     CTXLOOPC            GET NEXT KEYWORD                  R4 23527000
SKIP240  SLR   R0,R0               SET CHANGE INDICATOR              R4 23527500
         B     CTXIDVAL            GO CHECK FOR VALID NAME           R4 23528000
         EJECT                                                       R4 23528500
*********************************************************************** 23529000
*        SET TRANSLATE TABLE  1,2,3, OR 4 FOR 3800 PRINTER            * 23529500
*********************************************************************** 23530000
CTXX     TM    DCTPPSW2,DCTNIPRT   TEST FOR 3800 PRINTER             R4 23530500
         BZR   WC                  ERROR IF NOT                      R4 23531000
         LA    R1,1(,R1)           INCR TO NEXT BYTE (CHAR NUMBER)   R4 23531500
         SLR   R0,R0               SET CHANGE INDICATOR              R4 23532000
         SH    WB,=H'1'            ACCT FOR EXTRA KEYW LGTH          R4 23532500
         BMR   WC                  NULL OPERAND SPECIFIED            R4 23533000
         LA    R15,DCTCHAR1        POINT TO CHAR SET FIELD           R4 23533500
         CLI   0(R1),C'1'          TEST FOR 'X1='                    R4 23534000
         BE    CTXIDVAL            BR IF YES                         R4 23534500
         LA    R15,DCTCHAR2        POINT TO CHAR SET FIELD           R4 23535000
         CLI   0(R1),C'2'          TEST FOR 'X2='                    R4 23535500
         BE    CTXIDVAL            BR IF YES                         R4 23536000
         LA    R15,DCTCHAR3        POINT TO CHAR SET FIELD           R4 23536500
         CLI   0(R1),C'3'          TEST FOR 'X3='                    R4 23537000
         BE    CTXIDVAL            BR IF YES                         R4 23537500
         LA    R15,DCTCHAR4        POINT TO CHAR SET FIELD           R4 23538000
         CLI   0(R1),C'4'          TEST FOR 'X4='                    R4 23538500
         BE    CTXIDVAL            BR IF YES                         R4 23539000
         BR    WC                  ERROR, INVALID KEYWORD            R4 23539500
*********************************************************************** 23540000
*        SET SEPARATOR OPTION FOR PRINT/PUNCH DEVICE                  * 23540500
*********************************************************************** 23541000
CTXS     CLI   2(R1),C'Y'          TEST FOR 'SEPARATE=YES'           R4 23541500
         BNE   CTXSN               IF NOT TRY 'SEPARATE=NO'          R4 23542000
         NI    DCTPPSW,255-DCTPPSWS ALLOW SEPARATORS                    23542500
         B     CTXLOOPA            GO POST AND DO NEXT OPERAND       R4 23543000
CTXSN    CLI   2(R1),C'N'          IS THIS SEPARATE = 'NO'              23543500
         BNER  WC                  ERROR IF NEITHER                     23544000
         OI    DCTPPSW,DCTPPSWS    PREVENT SEPARATORS                   23544500
         B     CTXLOOPA            GO TO NEXT OPERAND                R4 23545000
*********************************************************************** 23545500
*        SET A LOCAL PRINT/PUNCH DEVICE TO PAUSE AFTER EACH JOB       * 23546000
*********************************************************************** 23546500
CTXP     DS    0H                  SET/RESET PAUSE ON DEVICE            23547000
         TM    DCTDEVTP,DCTRJE     TEST FOR REMOTE PRT/PUN              23547500
         BOR   WC                  IF REMOTE,ERROR TO SET PAUSE         23548000
         CLI   2(R1),C'Y'          CHECK FOR SET OF PAUSE               23548500
         BE    CTXPAUSE            YES--TURN ON PAUSE BIT               23549000
         CLI   2(R1),C'N'          NO--CHECK FOR RESET                  23549500
         BNER  WC                  NO--ERROR IN COMMAND                 23550000
         NI    DCTPPFL,255-DCTPAUSE  RESET PAUSE BIT                    23550500
         B     CTXLOOPC            AND LOOK FOR MORE OPERANDS           23551000
CTXPAUSE OI    DCTPPFL,DCTPAUSE    SET PRINT/PUNCH TO PAUSE             23551500
         B     CTXLOOPC            AND LOOK FOR MORE OPERANDS           23552000
         EJECT                                                       R4 23552500
*********************************************************************** 23553000
*        SET/RESET EXPLICIT SPACING FOR A PRINTER                     * 23553500
*********************************************************************** 23554000
CTXK     NULL                      COME HERE TO SET CARRIAGE SPC        23554500
         TM    DCTDEVTP,DCTPUN     TEST FOR PUNCH                       23555000
         BOR   WC                  YES--INVALID TO SET SPACING          23555500
         CLI   2(R1),C'R'          IS THIS A RESET OPERATION            23556000
         BE    CTXKRSET            YES--GO HANDLE                       23556500
         CLI   2(R1),C'3'          NO--CHECK BOUNDS                     23557000
         BHR   WC                  TRIPLE SPCING IS GREATEST            23557500
         CLI   2(R1),C'1'          SINGLE-SPCING IS SMALLEST            23558000
         BLR   WC                  ERROR IF LESS THAN                   23558500
         NI    2(R1),X'03'         TURN 'OFF' ALL ZONE BITS             23559000
         IC    R15,2(,R1)          GET READY TO SET SPCING              23559500
         NI    DCTFLAGS,255-DCTSPACE FIRST REST PREV SPEC               23560000
         EX    R15,CTXKSET         SET SPCING EXPLICITLY                23560500
         B     CTXLOOPC            LOOK FOR MORE OPERANDS               23561000
CTXKRSET NI    DCTFLAGS,255-DCTSPACE RESET SPACING FLAGS                23561500
         B     CTXLOOPC            LOOK FOR MORE OPERANDS               23562000
CTXKSET  OI    DCTFLAGS,*-*          **** EXECUTE ONLY ****             23562500
*********************************************************************** 23563000
*        SET TRAIN (UCS) FOR A PRINTER                                * 23563500
*********************************************************************** 23564000
CTXT     LA    R15,DCTUCS          POINT TO UCS TRAIN SETTING           23564500
         LA    R0,DCTPPSWT         SET CHANGE INDICATOR                 23565000
         B     CTXCCTST            TEST FOR INVALID PUNCH               23565500
*********************************************************************** 23566000
*        SET CARRIAGE (FCB) FOR A PRINTER                             * 23566500
*********************************************************************** 23567000
CTXC     LA    R15,DCTFCB          POINT TO FCB CARRIAGE SETTING        23567500
         LA    R0,DCTPPSWC         SET CHANGE INDICATOR                 23568000
         CLC   2(5,R1),=C'RESET'   TEST FOR FCB IMAGE RESET          R4 23568500
         BNE   CTXCCTST            BR IF NOT                         R4 23569000
         TM    DCTPPSW2,DCTNIPRT   TEST FOR 3800 PRINTER             R4 23569500
         BZR   WC                  ERROR IF NOT                      R4 23570000
         MVC   0(4,R15),=C'****'   RESET FCB IMAGE ID                R4 23570500
         L     R15,DCTPCE          GET ASSOCIATED PCE                R4 23571000
         MVC   PRDFCB-PCEDSECT(4,R15),=C'****'  RESET DEFAULT FCB ID R4 23571500
         B     CTXLOOPA            GO $POST AND GET NEXT KEYWORD     R4 23572000
CTXCCTST TM    DCTDEVTP,DCTPUN     TEST FOR PUNCH DEVICE                23572500
         BOR   WC                  BRANCH IN ERROR IF YES               23573000
CTXCCT   DS    0H                                                       23573500
         TM    DCTPPSW,DCTPPSWO    TEST FOR OPERATOR ACTION ALLOW       23574000
         BO    *+8                 BRANCH IF OPERATOR ACTION OK         23574500
         BAL   LINK,CTXDEV         CHECK FOR IDLE DEVICE                23575000
CTXIDVAL DS    0H                                                    R4 23575500
         CH    WB,=H'4'            MOVE NO MORE THAN FOUR               23576000
         BNLR  WC                  BRANCH IN ERROR IF TOO LONG          23576500
         L     R14,=A(CVALTABL)    POINT TO TEST TABLE               R4 23577000
         EX    WB,CTXQVAL          TEST FOR VALID FIELD              R4 23577500
         BNZR  WC                  IF INVALID EXIT IN ERROR             23578000
         MVC   0(4,R15),=CL4' '    BLANK OUT DCT FIELD               R4 23578500
CTXEXMVC EX    WB,CTXMVC           MOVE IN PARAMETER                    23579000
         LR    WB,R0               GET ACTIVITY FLAG                    23579500
         EX    WB,CTXOI            TURN ON CHANGE FLAG               R4 23580000
         LA    WB,DCTPPSWT         SET UCS INDICATOR           @OZ27012 23580500
         CLR   R0,WB               UCS REQUEST                 @OZ27012 23580550
         BNE   CTXFCBLD            BR IF NO, TEST FCB          @OZ27012 23580575
         NI    DCTPPSW,255-DCTPPSWU RESET NON-STD SWITCH       @OZ27012 23580650
         L     R15,DCTPCE          LOAD PRINT PCE ADDR         @OZ27012 23580725
         TM    PDEVTYPE+1-PCEDSECT(R15),X'80' TEST UCS         @OZ27012 23580800
         BZ    CTXFCBLD            BR IF NOT SUPPORTED         @OZ27012 23580875
         TM    DCTPPSW2,DCTNIPRT   3800 PRINTER                @OZ27012 23580950
         BO    CTXFCBLD            BRANCH IF YES               @OZ27012 23581000
         $GETBUF NOBUF             GET BUFFER FOR IMAGELIB     @OZ27012 23581100
         LR    WB,R1               LOAD BUFFER INTO R3         @OZ27012 23581175
         USING BUFDSECT,WB         SET BUFFER ADDRESSABILITY   @OZ27012 23581250
         ST    R0,COMEWORK         SAVE R0                     @OZ27012 23581325
         MVC   BUFSTART(4),=X'0001003A' BLDL PARAMETER LIST    @OZ27012 23581400
         MVC   BUFSTART+4(4),=C'UCS1' IMAGE PREFIX-1403 USC    @OZ27012 23581500
         MVC   BUFSTART+8(4),DCTUCS USER UCS IMAGE ID          @OZ27012 23581550
         L     R15,DCTPCE          LOAD PCE ADDRESS            @OZ27012 23581625
         STCM  WA,7,BUFDCT+1       ENSURE CORRECT DCT ADDR     @OZ27012 23581675
         CLI   PDEVTYPE+3-PCEDSECT(R15),X'08' IS IT A 1403..   @OZ27012 23581700
         BE    CTXUCS01            BRANCH IF YES               @OZ27012 23581775
         MVI   BUFSTART+7,C'2'     IMAGE PREFIX FOR 3211 UCS   @OZ27012 23581850
CTXUCS01 DS    0H                                              @OZ27012 23581925
         TM    $IMAGECB,X'40'      IS IMAGE LOADER TASK BUSY   @OZ27012 23582000
         BNO   CTXUCS02            BRANCH IF NO                @OZ27012 23582075
         $WAIT IMAG             WAIT FOR IMAGE TASK TO $$POST  @OZ27012 23582150
         B     CTXUCS01            TRY AGAIN                   @OZ27012 23582225
CTXUCS02 DS    0H                                              @OZ27012 23582300
         MVI   BUFECBCC,X'80'      SET BUFFER ECB AS WAITING   @OZ27012 23582375
         POST  $IMAGECB,(R3)       POST WITH BUFFER ADDRESS    @OZ27012 23582450
CTXUCS03 DS    0H                                              @OZ27012 23582500
         $WAIT IMAG             WAIT FOR IMAGE TASK TO $$POST  @OZ27012 23582600
         TM    BUFECBCC,X'7F'      TEST STATUS OF LOAD REQ     @OZ27012 23582675
         BZ    CTXUCS03            BRANCH IF NOT COMPLETE      @OZ27012 23582750
         BM    CTXUCSMS            BR TO NOT FOUND MSG         @OZ27012 23582825
         TM    BUFSTART,X'80'      IS IT A STD UCS IMAGE. .    @OZ27012 23582900
         BO    CTXUCSEX            BRANCH IF YES               @OZ27012 23583000
         OI    DCTPPSW,DCTPPSWU    TURN ON NON-STD SWITCH      @OZ27012 23583050
         DROP  WB                  DROP BUFFER ADDRESSIBILITY  @OZ27012 23583125
CTXUCSEX $FREEBUF  (WB)            FREE BUFFER                 @OZ27012 23583200
         L     R0,COMEWORK         RESTORE R0                  @OZ27012 23583275
         B     CTXFCBLD            TRY FCB CHANGE              @OZ27012 23583300
CTXUCSNO CLC   $PRTUCS,DCTUCS      REQUESTING STD UCS. . .     @OZ27012 23583350
         BE    CTXFCBLD            BRANCH IF YES               @OZ27012 23583425
         OI    DCTPPSW,DCTPPSWU    TURN ON NON-STD SWITCH      @OZ27012 23583500
CTXFCBLD LA    WB,DCTPPSWC         SET FCB CHANGE INDICATOR    @OZ27012 23583575
         CLR   R0,WB               FCB REQUEST. . .            @OZ27012 23583650
         BNE   CTXLOOPA            BRANCH IF NOT               @OZ27012 23583725
         L     R15,DCTPCE          LOAD PRINT PCE ADDR         @OZ27012 23583800
         TM    DCTPPSW2,DCTNIPRT   3800 PRINTER. .             @OZ27012 23583875
         BZ    CTXCHUCB            BRANCH IF NOT               @OZ27012 23583950
         MVC   PRDFCB-PCEDSECT(,R15),DCTFCB UPDATE 3800 FCB    @OZ27012 23584000
         B     CTXLOOPA            POST JOB                    @OZ27012 23584100
CTXCHUCB NI    DCTPPSW,255-DCTPPSWB TURN OFF NON=STAND SWITCH  @OZ27012 23584175
         CLI   PDEVTYPE+3-PCEDSECT(R15),X'08' IS IT A 1403..   @OZ27012 23584250
         BNE   CTXTTE              BRANCH IF NOT 1403          @OZ27012 23584325
         CLC   $PRTFCB,DCTFCB      IS IT STD FCB. . .          @OZ27012 23584400
         BE    CTXLOOPA            BRANCH IF YES               @OZ27012 23584500
         OI    DCTPPSW,DCTPPSWB    TURN ON NON-STD SWITCH      @OZ27012 23584550
         B     CTXLOOPA            POST JOB                    @OZ27012 23584625
CTXTTE   $GETBUF NOBUF             GET BUFFER FOR FCB READ     @OZ27012 23584700
         LR    WB,R1               LOAD R3 WITH BUFF ADDRESS   @OZ27012 23584775
         ST    R0,COMEWORK         SAVE R0                     @OZ27012 23584850
         USING BUFDSECT,WB         SET BUFFER ADDRESSABILITY   @OZ27012 23584925
         MVC   BUFSTART(4),=X'0001003A' BLDL PARAMETER LIST    @OZ27012 23585000
         MVC   BUFSTART+4(4),=C'FCB2' IMAGE PREFIX-3211 FCB    @OZ27012 23585075
         MVC   BUFSTART+8(4),DCTFCB   USER FCB IMAGE ID        @OZ27012 23585150
         L     R15,DCTPCE          LOAD PRINT PCE ADDR         @OZ27012 23585175
         STCM  WA,7,BUFDCT+1       ENSURE CORRECT DCT ADDR     @OZ27012 23585200
CTXFCB01 DS    0H                                              @OZ27012 23585225
         TM    $IMAGECB,X'40'      IS IMAGE LOADER TASK BUSY   @OZ27012 23585300
         BNO   CTXFCB02            BRANCH IF NO                @OZ27012 23585375
         $WAIT IMAG             WAIT FOR IMAGE TASK TO $$POST  @OZ27012 23585450
         B     CTXFCB01            TRY AGIN                    @OZ27012 23585500
CTXFCB02 DS    0H                                              @OZ27012 23585600
         MVI   BUFECBCC,X'80'      SET BUFFER ECB AS WAITING   @OZ27012 23585675
         POST  $IMAGECB,(R3)       POST WITH BUFFER ADDRESS    @OZ27012 23585750
CTXFCB03 DS    0H                                              @OZ27012 23585825
         $WAIT IMAG             WAIT FOR IMAGE TASK TO $$POST  @OZ27012 23585900
         TM    BUFECBCC,X'7F'      TEST STATUS OF LOAD REQ     @OZ27012 23586000
         BZ    CTXFCB03            BRANCH IF NOT COMPLETE      @OZ27012 23586050
         BM    CTXFCBMS            BRANCH IF IMAGE NOT FOUND   @OZ27012 23586125
         TM    BUFSTART,X'80'      TEST FOR STD IMAGE. . .     @OZ27012 23586200
         BO    CTXFCBEX            BRANCH IF YES               @OZ27012 23586275
         OI    DCTPPSW,DCTPPSWB    TURN ON NON-STD SWITCH      @OZ27012 23586350
         DROP  WB                  DROP BUFFER ADDRESSABILITY  @OZ27012 23586425
CTXFCBEX $FREEBUF (WB)             FREE BUFFER                 @OZ27012 23586500
         L     R0,COMEWORK         RESTORE R0                  @OZ27012 23586575
         B     CTXLOOPA            POST JOB                    @OZ27012 23587000
CTXQVAL  TRT   2(*-*,R1),0(R14)    *** EXECUTE ONLY ***              R4 23587500
CTXMVC   MVC   0(*-*,R15),2(R1)    *** EXECUTE ONLY ***              R4 23588000
CTXOI    OI    DCTPPSW,*-*         *** EXECUTE ONLY ***              R4 23588500
CTXUCSMS DS    0H                                              @OZ27012 23588520
         USING BUFDSECT,WB         GET BUFFER ADDRESSABILITY   @OZ27012 23588540
         MVC   BUFSTART(2),=X'000F' MOVE MESSAGE NUMBER        @OZ27012 23588560
         MVC   BUFSTART+2(8),DCTDEVN MOVE DEVICE NAME          @OZ27012 23588580
         MVC   BUFSTART+10(26),=CL26' UCS  IMAGE XXXX NOT FOUND' Z27012 23588600
         MVC   BUFSTART+22(4),DCTUCS MOVE UCS ID               @OZ27012 23588620
        $WTO   BUFSTART,36,JOB=NO, ISSUE BUFFER LOAD FAIL MSG  @OZ27012*23588640
               ROUTE=$LOG+$UR,CLASS=$ACTION,PRI=$ST            @OZ27012 23588660
         B     CTXUCSEX            EXIT TO GET NEXT PARAMETER  @OZ27012 23588680
CTXFCBMS DS    0H                                              @OZ27012 23588700
         USING BUFDSECT,WB         GET BUFFER ADDRESSABILITY   @OZ27012 23588720
         MVC   BUFSTART(2),=X'000F' MOVE MSG ID                @OZ27012 23588740
         MVC   BUFSTART+2(8),DCTDEVN MOVE DEVICE NAME          @OZ27012 23588760
         MVC   BUFSTART+10(26),=CL26' FCB  IMAGE XXXX NOT FOUND' Z27012 23588780
         MVC   BUFSTART+22(4),DCTFCB MOVE FCB ID               @OZ27012 23588800
        $WTO   BUFSTART,36,JOB=NO, ISSUE BUFFER LOAD FAIL MSG  @OZ27012*23588820
               ROUTE=$LOG+$UR,CLASS=$ACTION,PRI=$ST            @OZ27012 23588840
         B     CTXFCBEX            BR TO GET NEXT PARAMETER    @OZ27012 23588860
NOBUF   $WTO   COMNFCB,COMFCBL,JOB=NO,  BUFFER SHORTAGE MSG    @OZ27012*23588880
               ROUTE=$LOG+$UR,CLASS=$NORMAL,PRI=$ST            @OZ27012 23588900
         B     CTXLOOPA            POST JOB                    @OZ27012 23588920
COMNFCB  $MSG  000,'NO BUFFERS TO DETERMINE IF STD UCS/FCB'    @OZ27012 23588940
COMFCBL  EQU   *-COMNFCB                                       @OZ27012 23588960
         EJECT                                                          23589000
*********************************************************************** 23589500
*        SET STRING OF AVAILABLE SYSOUT CLASS(ES) FOR PRT/PUN         * 23590000
*********************************************************************** 23590500
CTXQ     SLR   R15,R15             CHECK                             R4 23591000
         IC    R15,$NUMCLAS         FOR                              R4 23591500
         CLR   WB,R15                TOO LONG                        R4 23592000
         BNLR  WC                  EXIT IF TOO LONG                     23592500
         L     R14,=A(CVALIDTB)    POINT TO TEST TABLE               R4 23593000
         EX    WB,CTXQVALD         CHECK FOR VALID CLASSES              23593500
         BNZR  WC                  ERROR IF NOT (A-Z) OR (0-9)          23594000
         LA    R14,DCTCLASS        MOVE                              R4 23594500
         LA    R0,2(,R1)            CLASS                            R4 23595000
         LA    R1,1(,WB)             STRING                          R4 23595500
         ICM   R1,8,=C' '             TO                             R4 23596000
         MVCL  R14,R0                  DCT                           R4 23596500
         B     CTXLOOPA .          GO POST THE JOB                      23597000
CTXQVALD TRT   2(*-*,R1),0(R14)    *** EXECUTE ONLY ***              R4 23597500
*********************************************************************** 23598000
*        SET ROUTE CODE THIS PRINTER/PUNCH WILL PROCESS               * 23598500
*********************************************************************** 23599000
CTXR     TM    COMFLAG,CMBFLAGW    WAS COMMAND ENTERED FROM REMOTE   R4 23599500
         BOR   WC                  ERROR EXIT IF YES                 R4 23600000
         BAL   LINK,COFRTRA        CONVERT DESTINATION               R4 23600500
         B     0(,WC)              ERROR EXIT               + 0      R4 23601000
         CR    R0,R1               SAME                     + 4      R4 23601500
         BNER  WC                  ERROR EXIT                        R4 23602000
         STH   R0,DCTNO            STORE NEW DEVICE ROUTE CODE          23606000
         B     CTXLOOPA            GO $POST JOT, LOOK FOR MORE          23606500
*********************************************************************** 23607000
*        SET FORMS FOR PRINTER OR PUNCH                               * 23607500
*********************************************************************** 23608000
CTXF     LA    R15,DCTFORMS        POINT TO FORMS                       23608500
         LA    R0,DCTPPSWF         SET OPERATOR CONTROL                 23609000
         CLC   2(5,R1),=C'AUTOM'   CHECK FOR AUTOMATIC FORMS            23609500
         BNE   CTXCCT              FILL IN DATA IF NOT                  23610000
         NI    DCTPPSW,255-DCTPPSWF ALLOW AUTOMATIC FORMS               23610500
* OPERATOR CAN RELINQUISH FORMS CONTROL ANY TIME                        23611000
CTXLOOPA $POST $HASPECF,(JOB,JOT)  POST JOB AND JOT                     23611500
CTXLOOPC BXLE  WD,WE,CTXLOOP       GET NEXT OPERAND                     23612000
         DROP  WA                  DROP DCT ADDRESSABILITY              23613000
         LR    WB,WA               PUT DCT IN NON-USED REGISTER         23613500
         USING DCTDSECT,WB         DCT ADDRESSABILITY                   23614000
CTXDISP  $CFDCTD DCT=(WB),EXT=YES,ENTRY=COFDVDSP DISPLAY DEVICE         23614500
         SPACE 1                                                        23615000
         B     CBXTRUND            AND EXIT $TDEVICE COMMAND            23615500
         DROP  WB                  DROP DCT ADDRESSABILITY              23616000
         USING DCTDSECT,WA         DCT ADDRESSABILITY                   23616500
         EJECT                                                       R4 23622500
*********************************************************************** 23623000
*        TEST FOR ACTIVE PRINT/PUNCH DEVICE                           * 23623500
*********************************************************************** 23624000
CTXDEV   TM    DCTSTAT,DCTINUSE    TEST FOR ACTIVE DEVICE               23624500
         BZR   LINK                NO -- RETURN 'OK' TO MODIFY          23625000
         MVC   COMMAND(8),DCTDEVN  SET NAME                             23625500
         MVC   COMMAND+8(7),=C' IN USE' MOVE IN DIAGNOSTIC              23626000
         $CRET L=15                SEND DIAGNOSTIC AND EXIT             23626500
*********************************************************************** 23626600
*        SET COMPACTION TABLE NUMBER FOR PRT/PUN                      * 23626700
*********************************************************************** 23626800
CTXZ     TM    MDCTFEAT-DCTDSECT(WA),DCTPCPCT TEST IF SUPPORTED     R41 23626900
         BZR   WC                  NO, ERROR EXIT                   R41 23627000
        $CFCVB POINTER=(WD),NOK=(WC) CONVERT COMPACTION NO TO BIN   R41 23627100
         CH    R0,=H'99'           TEST IF COMPACTION NB UNDER 99   R41 23627200
         BHR   WC                  NO,ERROR                         R41 23627300
         STC   R0,DCTDCPTN         STORE COMPACTION NB IN DCT       R41 23627400
         B     CTXLOOPC            LOOK FOR OTHER OPERANDS          R41 23627500
         SPACE 1                                                    R41 23627600
*********************************************************************** 23627700
*        PROCESS $TRMTN,A=Y/N,D=NNNN                                  * 23627800
*********************************************************************** 23627900
CTXRMT   DS    0H                                                   R41 23628000
         DROP  WA                                                   R41 23628100
         USING RATDSECT,WA         RAT ADDRESSABILITY               R41 23628200
         LA    WC,CBXINVO          SET ERROR EXIT ADDRESS           R41 23628300
         BXH   WD,WE,CBXINVO       IF NO CORRESPONDING PARM, EXIT   R41 23628400
CTXRLOOP DS    0H                                                   R41 23628500
         L     R1,0(0,WD)          PICK UP OPERAND ADDRESS          R41 23628600
         TM    COMFLAG,CMBFLAGR+CMBFLAGS TEST FOR RESTRICTED CNSL   R41 23628700
         BNZR  WC                  YES, INVALID TO SET REMOTE       R41 23628800
         CLI   1(R1),C'='          CHECK PROPER FORMAT              R41 23628900
         BNER  WC                  NO, ERROR                        R41 23629000
         $CFSEL (A,CTXRMTA),(D,CTXRMTD)                             R41 23629100
         BR    WC                  ERROR, UNKNOWN OPERAND           R41 23629200
         SPACE 1                                                    R41 23629300
CTXRMTA  DS    0H                                                   R41 23629400
         TM    RATTYPE,DCTPLU1     IS THIS AN SNA REMOTE            R41 23629500
         BNOR  WC                  NO, ERROR                        R41 23629600
         CLI   2(R1),C'Y'          IS THIS A=Y                      R41 23629700
         BNE   CTXRMTA1            NO CHECK MORE                    R41 23629800
         OI    RATFLAGS,RATALM     YES, INDICATE IN RAT             R41 23629900
         STCK  COMDWORK            STORE CLOCK VALUE                R41 23630000
         MVC   RATIMER,COMDWORK     AND MOVE INTO RAT               R41 23630100
         B     CTXPOSTX            GO POST MLLM                     R41 23630200
CTXRMTA1 DS    0H                                                   R41 23630300
         CLI   2(R1),C'N'          IS THIS A=N                      R41 23630400
         BNER  WC                  NO, ERROR - NEITHER Y OR N       R41 23630500
         NI    RATFLAGS,255-RATALM YES, INDICATE IN RAT             R41 23630600
         B     CTXPOSTX            GO POST MLLM                     R41 23630700
         SPACE 1                                                    R41 23630800
CTXRMTD  DS    0H                                                   R41 23630900
         $CFCVB POINTER=(WD),NOK=CBXINVO CONVERT D=NNNN             R41 23631000
         CH    R0,=H'8160'         CHECK MAX CHANGE                 R41 23631100
         BHR   WC                  ERROR IF TOO MUCH                R41 23631200
         AH    R0,=H'31'           ROUND TO MULTIPLE OF 32          R41 23631300
         SRL   R0,5                DIVIDE BY 32                     R41 23631400
         CLI   RATIDINV,X'00'      CHECK FOR NO INTERVAL            R41 23631500
         BE    CTXRMTD1            NO INTERVAL, ALLOW MAX CHANGE    R41 23631600
         LTR   R0,R0               CHECK FOR ZERO                   R41 23631700
         BZR   WC                  YES ERROR                        R41 23631800
         CLM   R0,1,RATIDINV       CHECK INTERVAL BEING SET         R41 23631900
         BHR   WC                  CANT BE GT INITIAL INTERVAL      R41 23632000
CTXRMTD1 STC   R0,RATDINTV         PUT IN RAT                       R41 23632100
         B     CTXLOOPX            CHECK IF MORE                    R41 23632200
         SPACE 1                                                    R41 23632300
CTXPOSTX L     R15,$MLLMPCE        TELL LINE MANAGER ABOUT WORK     R41 23632400
         OI    MSCANREQ-PCEDSECT(R15),MSCNRAT  REQUEST RAT SCAN     R41 23632500
         $POST (R15),WORK                                           R41 23632600
CTXLOOPX DS    0H                                                   R41 23632700
         BXLE  WD,WE,CTXRLOOP      LOOP IF MORE OPERANDS            R41 23632800
         LNR   R1,WA               LOAD -RAT ADDR FOR DISPLAY       R41 23632900
         $CFDCTD DCT=(R1),EXT=SET      DISPLAY RAT INFO             R41 23633000
         B     CBXTRUND            RETURN                           R41 23633100
         SPACE 2                                                    R41 23633200
         DROP  WA                  RELEASE RAT ADDRESSABILITY       R41 23633300
         EJECT                                                       R4 23633400
*********************************************************************** 23633500
*                                                                     * 23633600
*        PROCESS $T READER COMMAND                                    * 23633700
*                                                                     * 23633800
*********************************************************************** 23633900
CTXRDR   DS    0H                  CHANGE A READER                      23634000
         USING DCTDSECT,WA         DCT ADDRESSABILITY               R41 23634100
         $CFSEL (A,CTXRDRA),(C,CTXRDRC),(H,CTXRDRH),(P,CTXRDRP),       C23634700
               (Q,CTXRDRQ),(S,CTXRDRS),(U,CTXRDRU)                      23634800
         BR    WC                  BRANCH IF NOT FOUND                  23636000
*********************************************************************** 23636500
*        SET LOCAL CARD READER COMMAND AUTHORITY                      * 23637000
*********************************************************************** 23637500
CTXRDRA  DS    0H                  CHANGE A READERS AUTHORITY           23638000
         CLI   DCTDEVTP,DCTRJR     INSURE NOT A REMOTE RDR              23638500
         BER   WC                  RMT RDR -- ERROR                     23639000
         TM    COMFLAG,CMBFLAGU+CMBFLAGT READER CONSOLE              R4 23639500
         BZR   WC                  YES-RDR CANNOT SET ANOTHER           23640000
         TM    COMAUTH,COMS        CONSOLE LACK SYSTEM AUTHORITY     R4 23640500
         BOR   WC                  YES-- ERROR                          23641000
CTXRDRAA $CFCVB POINTER=(WD),NUM=1,NOK=(WC) CONVERT AUTHORITY           23641500
         CH    R0,=H'7'            CHECK FOR MAX AUTH                   23642000
         BHR   WC                  HIGHER-- ERROR                       23642500
         OI    DCTRAUTH,COMJDS     RESTRICT RDR COMPLETELY              23643000
         LR    R15,R0              GET GOOD REG FOR 'EX'                23643500
         EX    R15,CTXSETA         SET NEW AUTHORITY                    23644000
         BAL   R14,CTXLOOPR        GO TEST FOR INTERNAL RDR CHANGE      23644500
         B     CTXLOOPC            AND GET NEXT OPERAND                 23645000
CTXSETA  XI    DCTRAUTH,*-*        **** EXECUTE ONLY ****               23645500
         EJECT                                                       R4 23646000
*********************************************************************** 23646500
*        SET READER'S DEFAULT JOB CLASS                               * 23647000
*********************************************************************** 23647500
CTXRDRC  DS    0H                  CHANGE RDR DEFAULT JOB CLASS         23648000
         LA    R15,DCTJCLAS        POINT TO FIELD TO CHANGE             23648500
         B     CTXRDRCQ            GO CHECK SOURCE CLASS                23649000
*********************************************************************** 23649500
*        SET READER'S DEFAULT MESSAGE CLASS                           * 23650000
*********************************************************************** 23650500
CTXRDRQ  DS    0H                  CHANGE RDR DEFAULT MSG CLASS         23651000
         CLI   DCTDEVTP,DCTINR     INVALID TO SET DEFAULT MSG           23651500
         BER   WC                  CLASS FOR INTERNAL READER            23652000
         LA    R15,DCTMCLAS        POINT TO FIELD TO CHANGE             23652500
CTXRDRCQ DS    0H                  COMMON ROUTINE FOR READER CHANGE     23653000
         L     R14,=A(CVALIDTB)    POINT TO TEST TABLE               R4 23653500
         TRT   2(L'DCTJCLAS,R1),0(R14) CHECK FOR VALID CLASS         R4 23654000
         BNZR  WC                  NO  --  ERROR                        23654500
         MVC   0(L'DCTMCLAS,R15),2(R1) SET NEW CLASS AS IS IN R15       23655000
         BAL   R14,CTXLOOPR        GO TEST FOR INTERNAL READER          23655500
         B     CTXLOOPC            AND GET NEXT OPERAND                 23656000
         SPACE 1                                                        23656500
*********************************************************************** 23657000
*        SET READER TO HOLD/RELEASE INCOMING JOBS                     * 23657500
*********************************************************************** 23658000
CTXRDRH  DS    0H                  SET READER TO HOLD/RELEASE JOBS      23658500
         CLI   2(R1),C'N'          TEST FOR RESET HOLD OPTION           23659000
         BE    CTXRDRR             YES--GO TO IT                        23659500
         CLI   2(R1),C'Y'          TEST FOR REQUEST TO HOLD READER      23660000
         BNER  WC                  NO--ERROR                            23660500
         OI    DCTFLAGS,DCTHOLDJ   SET HOLDING BIT 'ON'                 23661000
         B     CTXRDND             EXIT                                 23661500
CTXRDRR  DS    0H                  RELEASE READER FROM HOLDING JOBS     23662000
         NI    DCTFLAGS,255-DCTHOLDJ  RESET HOLDING BIT TO 'OFF'        23662500
CTXRDND  DS    0H                  EXIT ROUTINE                         23663000
         BAL   R14,CTXLOOPR        GO TEST FOR INTERNAL READER          23663500
         B     CTXLOOPC            AND GET NEXT OPERAND                 23664000
*********************************************************************** 23664500
*        SET DEFAULT SYSTEM AFFINITY FOR READER                       * 23665000
*********************************************************************** 23665500
CTXRDRS  DS    0H                  SET DEFAULT SYSTEM AFFINITY          23666000
         LPR   R10,WE              ASSUME ADDITION TO AFFINITY          23666500
         CLI   2(R1),C'+'          CHECK FOR SAME                       23667000
         BE    CTXRSCHG            YES--ADD SELECTED AFFINITIES         23667500
         LNR   R10,R10             ASSUME DELETION FROM AFFINITIES      23668000
         CLI   2(R1),C'-'          TEST FOR SAME                        23668500
         BE    CTXRSCHG            YES--FIND AFFINITIES TO DELETE       23669000
         SLR   R10,R10             SET NO ADDITION OR DELETION          23669500
         BCTR  R1,0                PT BACK ONE FOR NEXT ADDITION        23670000
CTXRSCHG DS    0H                  FIND DESIRED AFFINITIES              23670500
         MVI   CTXRSIAF,0          SET AFFINITIES TO ZERO               23671000
         LA    R1,3(,R1)           POINT TO FIRST SID CHARACTER         23671500
CTXRSLP1 DS    0H                  TEST FOR AFFINITY                    23672000
         CLC   0(3,R1),=C'ANY'     TEST FOR AFFINITY OF 'ANY'           23672500
         BNE   CTXRSIND            NO--TRY FOR INDY MODE OPERATION      23673000
         OI    CTXRSIAF,QUESYSAF   YES--FLAG ANY AFFINITY               23673500
         SLR   R10,R10             SET NO ADDITION OR DELETION          23674000
         B     CTXRSLP4            AND TRY FOR MORE OPERANDS            23674500
CTXRSIND DS    0H                  TEST FOR INDEPENDENT MODE DESIRED    23675000
         CLC   0(3,R1),=C'IND'     TEST FOR 'IND' MODE                  23675500
         BNE   CTXRSLP2            NO--TRY FOR SPECIFIC SID             23676000
         OI    CTXRSIAF,QUEINDAF   YES--SET READER AS SUCH              23676500
         B     CTXRSLP4            AND TRY FOR MORE OPERANDS            23677000
CTXRSLP2 DS    0H                  TEST FOR SPECIFIC SID GIVEN          23677500
         L     R15,$QSE1           POINT TO 1ST QSE                  R4 23678000
         SH    R15,$QSEL           BACK UP ONE QSE                   R4 23678500
         USING QSEDSECT,R15        QSE ADDRESSABILITY                   23679000
CTXRSLP3 AH    R15,$QSEL           POINT TO NEXT QSE                 R4 23679500
         CLC   QSESID,0(R1)        CHECK FOR MATCH WITH OPERAND      R4 23680000
         BE    CTXRSFND            YES--SET AFFINITY AS SUCH            23680500
         TM    QSEFLAGS,QSELAST    TEST FOR LAST ELEMENT                23681000
         BZ    CTXRSLP3            NOT LAST QSE, LOOP FOR MATCH         23681500
         BR    WC                  NOT FOUND -- ERROR                   23682000
         SPACE 1                                                        23682500
CTXRSFND DS    0H                  SID WAS FOUND TO MATCH OPERAND       23683000
         OC    CTXRSIAF,QSESIAFF   FLAG THIS AFFINITY                   23683500
         SPACE 1                                                        23684000
CTXRSLP4 BXLE  WD,WE,CTXRSLP5      LOOP THROUGH ALL OPERANDS            23684500
         TM    CTXRSIAF,QUEINDAF   IF END TEST FOR 'IND' ON             23685000
         BZ    CTXRSFIN            NO--FORGET OTHER TESTS               23685500
         TM    CTXRSIAF,255-QUEINDAF TEST FOR 'IND' 'ON' BY ITSELF      23686000
         BNZ   CTXRSFIN            OTHERS 'ON' --OK                     23686500
         LTR   R10,R10             MAKE SURE DESIRE IS 'OFF' OR 'ON'    23687000
         BNZ   CTXRSFIN            YES--'OK' AS IS                      23687500
         SLR   WD,WE               NO--POINT TO BAD OPERAND             23688000
         BR    WC                  AND EXIT IN ERROR                    23688500
CTXRSLP5 DS    0H                  MORE OPERANDS TEST FOR MORE SID'S    23689000
         L     R1,0(,WD)           PT TO NEXT OPERAND                   23689500
         CLI   1(R1),C'='          CHECK FOR NOT SID BUT NEW OPERAND    23690000
         BNE   CTXRSLP1            NO--TRY FOR NEXT SID MATCH           23690500
CTXRSFIN DS    0H                  SET NEW DEFAULT AFFINITIES           23691000
         SLR   WD,WE               POINT BACK TO OPERAND                23691500
         LTR   R10,R10             TEST FOR TYPE OF CHANGE              23692000
         BM    CTXRSMIN            IF SUBTRACTION  --  BRANCH           23692500
         BP    CTXRSPLS            IF ADDITION  --  BRANCH              23693000
         MVI   DCTSIAFF,0          SET AFFINITIES TO 'NONE'             23693500
CTXRSPLS OC    DCTSIAFF,CTXRSIAF   SET NEW AFFINITIES                   23694000
         B     CTXRSEND            AND EXIT                             23694500
CTXRSMIN DS    0H                  REMOVE SELECTED AFFINITIES           23695000
         LA    R10,255             SET REGISTER TO ALL BITS 'ON'        23695500
         SLR   R0,R0               ZERO INSERT REGISTER                 23696000
         IC    R0,CTXRSIAF         PICK-UP AFFINITIES TO DELETE         23696500
         SLR   R10,R0              COMPUTE BITS TO BE LEFT 'ON'         23697000
         EX    R10,CTXRAFOF        DELETE SELECTED AFFINITIES           23697500
         L     R15,$QSE1           POINT TO 1ST QSE                  R4 23698000
         SH    R15,$QSEL           BACK UP ONE QSE                   R4 23698500
CTXRAFLP AH    R15,$QSEL           POINT TO NEXT QSE                 R4 23699000
         IC    R10,QSESIAFF        PICK UP AFFINITY BIT              R4 23699500
         EX    R10,CTXRAFON        TEST FOR IMPOSSIBLE AFFINITY         23700000
         BO    CTXRSEND            NO--EXIT QSE SCAN                    23700500
         TM    QSEFLAGS,QSELAST    TEST FOR LAST ELEMENT                23701000
         BZ    CTXRAFLP            NOT LAST--LOOP THROUGH QSE'S         23701500
         OC    DCTSIAFF,CTXRSIAF   RESET AFFINITIES                     23702000
         BR    WC                  AND EXIT IN ERROR                    23702500
CTXRSEND DS    0H                  END OF SID CHANGE                    23703000
         BAL   R14,CTXLOOPR        SET ALL INTERNAL READERS POSSIBLY    23703500
         B     CTXLOOPC            AND EXIT FOR NEXT OPERAND            23704000
CTXRAFOF NI    DCTSIAFF,*-*        **** EXECUTE ONLY ****               23704500
CTXRAFON TM    DCTSIAFF,*-*        **** EXECUTE ONLY ****               23705000
         DROP  R15                 DROP QSE ADDRESSABILITY              23705500
CTXRSIAF EQU   COMWREGS,1          AFFINITY CREATE AREA                 23706000
*********************************************************************** 23706500
*        CHANGE ALL INTERNAL READERS SUBROUTINE                       * 23707000
*********************************************************************** 23707500
CTXLOOPR DS    0H                  SET ALL INTERNAL READERS             23708000
         CLI   DCTDEVTP,DCTINR     TEST FOR INTERNAL READER             23708500
         BNER  R14                 NO--EXIT                             23709000
         LR    R15,WA              SAVE BEGINNING ADDRESS               23709500
CTXINRLP ICM   WA,7,DCTCHAIN+1     GET NEXT DCT                         23710000
         BNZ   *+8                 IF NOT LAST TRST FOR INTRDR          23710500
         LR    WA,R15              RESET DCT ADDRESS TO FIRST INTRDR    23711000
         BR    R14                 AND RETURN                           23711500
         CLI   DCTDEVTP,DCTINR     TEST FOR STILL INTERNAL READER       23712000
         BNE   *-8                 NO--EXIT                             23712500
         MVC   DCTSIAFF(L'DCTSIAFF+L'DCTRAUTH+L'DCTJCLAS),DCTSIAFF-DCTDC23713000
               SECT(R15)           SET APPRO. FIELDS IN DCT    @OZ29471 23713500
         MVC   DCTFLAGS,DCTFLAGS-DCTDSECT(R15)  DITTO                   23714000
         B     CTXINRLP            AND LOOP FOR MORE INTRDR'S           23714500
         SPACE 1                                                        23715000
*********************************************************************** 23715500
*        SET READER'S DEFAULT PRINT/PUNCH DESTINATION(S)              * 23716000
*********************************************************************** 23716500
CTXRDRP  LA    R10,DCTPRINT        SET ADDRESS OF PRINT DESTINATION     23717000
         B     *+8                 SKIP                                 23717500
CTXRDRU  LA    R10,DCTPUNCH        SET ADDRESS OF PUNCH DESTINATION     23718000
         CLI   DCTDEVTP,DCTINR     IS THIS AN INTERNAL READER        R4 23718500
         BER   WC                  ERROR EXIT IF YES                 R4 23719000
         BAL   LINK,COFRTRA        CONVERT DESTINATION               R4 23719500
         B     0(,WC)              ERROR EXIT               + 0      R4 23720000
         CR    R0,R1               SAME                     + 4      R4 23720500
         BNER  WC                  ERROR EXIT                        R4 23721000
         STH   R0,0(,R10)          STORE NEW PRINT/PUNCH DEST           23721500
         B     CTXLOOPC            LOOK FOR ADDITIONAL OPERANDS         23722000
*********************************************************************** 23730000
*        SET LOGON DCT VALUES                                         * 23730500
*********************************************************************** 23731000
CTXLOG   NULL                                                        R4 23731500
         TM    COMFLAG,CMBFLAGR+CMBFLAGS TEST FOR RESTRICTED CONSOLE R4 23732000
         BNZR  WC                  YES--ILLEGAL TO SET LOGON         R4 23732500
         CLI   1(R1),C'='          CHECK FOR VALID OPERAND FORMAT    R4 23733000
         BNER  WC                  IF NOT -- ERROR                   R4 23733500
         $CFSEL (A,CTXAPPL),(P,CTXLPAS),(E,CTXLLOG)                  R4 23734000
         BR    WC                  NO-- ERROR IN COMMAND             R4 23734500
*********************************************************************** 23735000
*        SET LOGON APPLICATION ID                                     * 23735500
*********************************************************************** 23736000
CTXAPPL  LA    WB,MDCTAPPL         PICK UP APPLICATION ID FEILD ADDR R4 23736500
         B     CTXLAPAS            GO TO COMMON LINE / LOGON RTN     R4 23737000
*********************************************************************** 23738000
*        SET RJE LINE PASSWORD / LOGGING OPTION                       * 23738500
*********************************************************************** 23739000
CTXLINE  NULL                                                           23739500
         TM    COMFLAG,CMBFLAGR+CMBFLAGS TEST FOR RESTRICTED CONSOLE R4 23740000
         BNZR  WC                  YES -- INVALID TO SET RJE LNE        23740500
         CLI   1(R1),C'='          CHK FOR PROPER FORMAT                23741000
         BNER  WC                  IF NOT--ERROR                        23741500
         $CFSEL (D,CTXLDIS),(E,CTXLLOG),(P,CTXLPAS)                  R4 23742000
         BNER  WC                  NO  --  ERROR IN COMMAND             23742500
CTXLPAS  LA    WB,MDCTPSWD         PICK UP PASSWORD FIELD ADDR       R4 23743000
         EJECT                                                      R41 23743900
*********************************************************************** 23744000
*        SET LINE/LOGN DCT PASSWORD/APPLICATION ID                    * 23744500
*********************************************************************** 23745000
CTXLAPAS MVI   0(WB),C' '          BLANK OUT DCT                     R4 23746000
         MVC   1(7,WB),0(WB)         RECEIVING FEILD                 R4 23746500
         L     R15,4(,WD)          FIND END OF OPERAND               R4 23747000
         SR    R15,R1              COMPUTE OPERAND LENGTH            R4 23747500
         SH    R15,=H'4'             LESS 4 FOR KEYWORD AND MACHINE  R4 23748000
         BM    CTXLOOPC            RESET VALUE IF NEGATIVE           R4 23748500
         CH    R15,*+10            CHECK FOR MAX SIZE                   23749000
         BNH   *+8                 MOVE IT IF SIZE 'OK'                 23749500
         LA    R15,8-1             ELSE SUBSTITUTE MAX SIZE          R4 23750000
         EX    R15,CTXLMOV         MOVE IN NEW VALUE                 R4 23750500
         B     CTXLOOPC            LOOK FOR OTHER OPERANDS              23751000
         SPACE 2                                                    R41 23751400
CTXLMOV  MVC   0(*-*,WB),2(R1)     **** EXECUTE ONLY ****            R4 23751500
         SPACE 3                                                    R41 23751600
*********************************************************************** 23752000
*        SET RJE LINE CHANNEL END LOGGING OPTION                      * 23752500
*********************************************************************** 23753000
CTXLLOG  NULL                                                           23753500
         CLI   2(R1),C'Y'          LOG ALL CHNL ENDS                    23754000
         BE    CTXLOGY             YES--GO DO IT                        23754500
         CLI   2(R1),C'N'          RESET CHNL END LOGGING               23755000
         BNER  WC                  BR IN ERROR IF NEITHER               23755500
         NI    DCTFLAGS,255-DCTLOGAL YES--RESET IT                   R4 23756000
         B     CTXLOOPC            LOOK FOR ADDITIONAL OPERANDS         23756500
CTXLOGY  OI    DCTFLAGS,DCTLOGAL   INDICATE LOG ALL ACTIONS          R4 23757000
         B     CTXLOOPC            LOOK FOR ADDITIONAL OPERANDS      R4 23757500
         EJECT                                                      R41 23757900
*********************************************************************** 23758000
*        CAUSE RJE LINE DISCONNECT                                    * 23758500
*********************************************************************** 23759000
CTXLDIS  TM    DCTSTAT,DCTINUSE    IS LINE IN USE                    R4 23759500
         BZ    CTXLOOPC            BRANCH, IF NOT                    R4 23760000
         CLI   2(R1),C'Q'          IS QUIESCE REQUESTED              R4 23760500
         BE    CTXLDISQ            BRANCH IF YES                     R4 23761000
         CLI   2(R1),C'I'          IS IMMEDIATE REQUESTED            R4 23761500
         BNER  WC                  BRANCH IF NEITHER - ERROR         R4 23762000
         OI    DCTFLAGS,DCTRSTRT   CAUSE ACTION AT NEXT CHANNEL END  R4 23762500
CTXLDISQ OI    MDCTSTAT,DCTSOFF    SET FOR LINE MANAGER DISCONNECT   R4 23763000
         TM    MDCTTYPE,DCTPSNA    TEST FOR SNA LINE                 R4 23763500
         BZ    CTXLOOPC            NO, SKIP POST                     R4 23764000
         L     R14,$MLLMPCE        PICK UP LINE MANAGER PCE ADDRESS  R4 23764500
         USING PCEDSECT,R14        SHOW PCE TEMPORARY ADDRESSABILITY R4 23765000
         OI    MSCANREQ,MSCNSIDL+MSCNSALL SCAN ACTIVE SNA LINE DCTS  R4 23765500
         DROP  R14                                                   R4 23766000
         $POST (R14),WORK          POST LINE MANAGER                 R4 23766500
         B     CTXLOOPC            LOOK FOR ADDITIONAL OPERANDS      R4 23767000
         DROP  WA                                                       23767500
         EJECT                                                          23768500
         SPACE 4                                                        23769000
         USING DCTDSECT,R1                                              23770000
         SPACE 1                                                     R4 23770500
*********************************************************************** 23771000
*                                                                     * 23771500
*        $Z DEV -- HALT DEVICE                                        * 23772000
*        DEV   = PRINT/PUNCH PROCESSOR OUTPUT DEVICE                  * 23772500
*              = INPUT SERVICE PROCESSOR INPUT DEVICE                 * 23773000
*                                                                     * 23773500
*********************************************************************** 23774000
CZ       DS    0H                  HALT A DEVICE                        23774500
         TM    DCTDEVTP,DCTINT     IS THIS AN INTERNAL DEVICE        R4 23775500
         BNZ   CTXINVO             INVALID DEVICE OPERAND IF YES     R4 23777500
         TM    DCTDEVTP,DCTRPP     IS THIS A RDR,PRTR, OR PUNCH      R4 23778000
         BZ    CTXINVO            INVALID DEVICE OPERAND IF NOT      R4 23778500
         TM    DCTDEVTP,DCTRJE     IS THIS A REMOTE DEVICE           R4 23779000
         BO    CTXINVO            INVALID DEVICE OPERAND IF YES      R4 23779500
         BAL   R14,CTDEVCHK        CHECK FOR ACTIVE DEVICE              23780000
         OI    DCTFLAGS,DCTSTOP    HALT THE DEVICE IF PRINT/PUNCH       23780500
         B     CZXNEXT             GO TO NEXT DEVICE                    23781000
         DROP  R1                                                       23781500
         EJECT                                                      R41 23782000
         LTORG ,                                                        23782500
 TITLE 'HASP COMMAND PROCESSOR HASPCSY1 - SYSTEM COMMANDS'              23783000
HASPCSY1 $COMGRUP DI,PI,SI,TI,ZI,P40,S40,PJES2,VS,ESYS,LSYS,TALL,      C23783500
               TSYS,DELAY=YES      DECLARE SYSTEM COMMANDS PROCESSOR    23784000
*********************************************************************** 23784500
*                                                                     * 23785000
*        INITIATOR COMMANDS                                           * 23785500
*                                                                     * 23786000
*        $D IN -- DISPLAY INITIATOR(S)                                * 23786500
*                                                                     * 23787000
*        $P IN -- STOP ( DRAIN ) INITIATOR(S)                         * 23787500
*                                                                     * 23788000
*        $S IN -- START INITIATOR(S)                                  * 23788500
*                                                                     * 23789000
*        $Z IN -- HALT INITIATOR(S)                                   * 23789500
*                                                                     * 23790000
*        N     =INITIATOR ID, RANGE OF ID'S, OR ALL IF BLANK          * 23790500
*                                                                     * 23791000
*        $T IN,LIST -- SET INITIATOR CLASSES                          * 23791500
*        N     =INITIATOR ID, RANGE OF ID'S, OR ALL IF BLANK          * 23792000
*        LIST  = NEW CLASSES FOR DESIGNATED INITIATOR                 * 23792500
*                                                                     * 23793000
*********************************************************************** 23793500
         CLI   COMVERB+1,C'I'      CHECK FOR INITIATOR ACTION           23794000
         BNER  R1                  NO--ENTER SUB-PROCESSOR              23794500
*********************************************************************** 23795000
*        SCAN FOR RANGE OF INITIATORS TO ACT UPON                     * 23795500
*********************************************************************** 23796000
         MVI   COMEWORK,X'FF'      FORCE LOW BOUND TO BE SET            23796500
         LA    WC,COMOPRND+1       POINT TO FIRST ID CHARACTER          23797000
         L     R15,4(0,WD)         POINT TO NEXT OR NULL OPERAND        23797500
         BCTR  R15,0               THEN COMMA OR BLANK                  23798000
         LA    R14,1               SET INCREMENT FOR BXLE               23798500
CDIIDS   LR    WB,WC               SAVE STARTING POINT                  23799000
CDIIDSL  CLI   0(WC),C'-'          CHECK FOR ID SEPARATOR               23799500
         BNE   CDIIDSA             SKIP FILL OUT IF NOT SEPARATOR       23800000
         SR    WC,WB               GET LENGTH OF ID                     23800500
         BZ    CDIINVO             ERROR IF NULL                        23801000
         CH    WC,=Y(L'PITPATID)   CHECK FOR TOO LONG                   23801500
         BH    CDIINVO             ERROR IF TOO LONG                    23802000
         LA    R10,COMEWORK        POINT TO TARGET FIELD                23802500
         BCT   WC,*+8              REDUCE TO MACHINE LENGTH             23803000
         LA    R10,1(,R10)         INSURE ID IS RIGHT-JUSTIFIED         23803500
         MVC   COMEWORK(L'PITPATID),=CL(L'PITPATID)' ' INSURE ID BLANK  23804000
         EX    WC,CDIIDSMV         MOVE 1ST IDENTIFIER                  23804500
         LA    WC,2(WC,WB)         POINT TO NEXT CHARACTER TO SCAN      23805000
         B     CDIIDS              LOOP FOR OVERIDE OR HIGH ID          23805500
CDIIDSA  CLI   0(WC),C''''         INSURE NO APOSTROPHI                 23806000
         BE    CDIINVO             EXIT IF PRESENT                      23806500
         BXLE  WC,R14,CDIIDSL      LOOP                                 23807000
         MVC   COMEWORK+L'PITPATID(L'PITPATID),=CL(L'PITPATID)' '       23807500
         BCTR  WC,0                BACK-UP TO LAST CHARACTER            23808000
         SR    WC,WB               GET LENGTH                           23808500
         BZ    CDIIDSCK            CHECK FOR ASSENDING                  23809000
         CH    WC,=Y(L'PITPATID)   CHECK FOR TOO LONG                   23809500
         BH    CDIINVO             ERROR EXIT                           23810000
         LA    R10,COMEWORK+L'PITPATID POINT TO TARGET FIELD            23810500
         BCT   WC,*+8              REDUCE TO MACHINE LENGTH             23811000
         LA    R10,1(,R10)         INSURE ID IS RIGHT-JUSTIFIED         23811500
         EX    WC,CDIIDSMV         MOVE 2ND IDENTIFIER                  23812000
CDIIDSCK CLC   COMEWORK(L'PITPATID),COMEWORK+L'PITPATID ASSENDING       23812500
         BL    *+10                SKIP NEXT IF ASSENDING IDS           23813000
         MVC   COMEWORK(L'PITPATID),COMEWORK+L'PITPATID  FORCE EQ       23813500
         BR    R1                  ENTER FUNCTION SETUP                 23814000
CDIIDSMV MVC   0(*-*,R10),0(WB)    **** EXECUTE ONLY ****               23814500
         SPACE 2                                                        23815000
         USING PITDSECT,WB         PROVIDE PIT ADDRESSABILITY           23815500
CTI      LA    WC,12               SET OFFSET FOR $TI COMMAND           23816000
         B     CDIW                ENTER COMMON ROUTINE                 23816500
CDI      SR    WC,WC               SET REQUEST OFFSET                   23817000
         B     CDIW                DO WORK                              23817500
CPI      LA    WC,4                SET REQUEST OFFSET                   23818000
         B     CDIW                DO WORK                              23818500
CSI      LA    WC,8                SET REQUEST OFFSET                   23819000
         B     CDIW                ENTER COMMON ROUTINE                 23819500
CZI      LA    WC,16               SET INDEX FOR $ZI COMMAND            23820000
CDIW     NULL                      COMMON ROUTINE FOR ALL INIT CMNDS    23820500
         L     WB,$PITABLE         POINT TO START OF PITS               23821000
         CLI   COMEWORK+1,C' '     CHECK FOR ALL INITS                  23821500
         BE    CDIALL              YES-BR TO ALL INITS RTN              23822000
         SLR   R10,R10             CLEAR HIT REG FOR RANGE SCAN         23822500
*********************************************************************** 23823000
*        ACT UPON ONE OR A RANGE OF INITIATORS                        * 23823500
*********************************************************************** 23824000
CDIONE   BAL   WA,CDIFIXIT         FIX PIT IF REQUIRED                  23824500
         CLC   COMEWORK(L'PITPATID),PITPATID  CHK PIT VS LOW            23825000
         BH    CDIPITLP            IF HIGH CONTINUE SCAN                23825500
         CLC   COMEWORK+L'PITPATID(L'PITPATID),PITPATID CHK VS HIG      23826000
         BL    CDIPITLP            IF LOW CONTINUE SCAN                 23826500
         LR    R10,WB              ELSE SAVE PIT IN HIT REG             23827000
         EX    0,CDIFUN(WC)        AND PERFORM INDICATED FUNCTION       23827500
CDIPITLP ICM   WB,15,PITNEXT       POINT TO NEXT PIT                 R4 23828000
         BNZ   CDIONE              BR IF VALID PIT ADDRESS           R4 23828500
         LTR   R10,R10             IF LAST--TEST FOR ANY FOUND          23829000
         BZ    CDIINVO             IF NOT ERROR IN OPERANDS             23829500
         B     CDIXIT(WC)          IF ANY FOUND EXIT PER (WC)           23830000
*********************************************************************** 23830500
*        ACT UPON ALL INITIATORS                                      * 23831000
*********************************************************************** 23831500
CDIALL   BAL   WA,CDIFIXIT         FIX PIT IF REQUIRED                  23832000
         EX    0,CDIFUNA(WC)       MODIFY ALL INITS                     23832500
         ICM   WB,15,PITNEXT       POINT TO NEXT PIT                 R4 23833000
         BNZ   CDIALL              BR IF VALID PIT ADDRESS           R4 23833500
         B     CDIXIT(WC)          FINI--GO TO INDICATED EXIT           23834000
CDIINVO  L     R1,0(0,WD)          POINT TO CURRENT OPERAND             23834500
         $CFINVO OPERAND=(R1)      EXIT WITH DISPLAY                    23835000
         SPACE 1                                                        23835500
CDIFIXIT TM    PITFLAGS,PITSIVER+PITSIERR WAS A START REJECTED          23836000
         BNOR  WA                  RETURN IF NOT                        23836500
         NI    PITFLAGS,255-(PITSIVER+PITSIERR) RESET FLAGS             23837000
         NI    PITSTAT,255-PITINIT RESET INIT STARTED                   23837500
         OI    PITSTAT,PITHOLD1    SET DRAIN FLAG                       23838000
         BR    WA                  RETURN                               23838500
         SPACE 1                                                        23839000
*        MULTIPLE INITIATOR FUNCTIONS                                   23839500
         SPACE 1                                                        23840000
CDIFUNA  NULL                      MODIFY ALL PITS                      23840500
         BAL   WA,CDIDIS           DISPLAY ALL PITS        WC = 0       23841000
         BAL   WA,CDIPIA           STOP ALL PITS           WC = 4       23841500
         NI    PITSTAT,255-(PITHOLDA+PITHALTA) START PITS  WC = 8       23842000
         BAL   WA,CDITI            CHANGE ALL PITS         WC = 12      23842500
         OI    PITSTAT,PITHALTA    HALT ALL PITS           WC = 16      23843000
         SPACE 1                                                        23843500
*        SINGLE INITIATOR FUNCTIONS                                     23844000
         SPACE 1                                                        23844500
CDIFUN   NULL                      MODIFY A PIT OR RANGE OF PITS        23845000
         BAL   WA,CDIDIS           DISPLAY A PIT           WC = 0       23845500
         BAL   WA,CDIPI1           SYOP A PIT              WC = 4       23846000
         NI    PITSTAT,255-(PITHOLD1+PITHOLDA+PITHALT1+PITHALTA)        23846500
         BAL   WA,CDITI            CHANGE A PIT            WC = 12      23847000
         OI    PITSTAT,PITHALT1    HALT A PIT              WC = 16      23847500
         SPACE 1                                                        23848000
*********************************************************************** 23848500
*        EXIT INITIATOR COMMAND ROUITNES                              * 23849000
*********************************************************************** 23849500
         SPACE 1                                                        23850000
CDIXIT   B     CDIRET              EXIT FOR DISPLAY PIT(S) WC = 0       23850500
         B     CPIRET              EXIT FOR STOP PIT(S)    WC = 4       23851000
         B     CSIRET              EXIT FOR START PIT(S)   WC = 8       23851500
         B     CTIRET              EXIT FOR CHANGE PIT(S)  WC = 12      23852000
         B     CZIRET              EXIT FOR HALT PIT(S)    WC = 16      23852500
CTIRET   $POST $HASPECF,JOB        POST HASP FOR WORK                   23853000
CZIRET   $CRET MSG=OK              RETURN WITH 'OK' STATUS              23853500
CDIRET   $CRET ,                   RETURN WITH NULL MSG--FOR $DI        23854000
CPIRET   TM    COMNULOP,CIPOSTX    SEE IF HASP IS TO BE POSTED          23854500
         BZ    CZIRET              NO-DON'T POST HASP--RETURN 'OK'      23855000
         B     CTIRET              YES-POST HASP--RETURN 'OK'           23855500
CSIRET   $POST $HASPECF,JOB        POST JOB                             23856000
         $CWTO MSG='OK',TRUNC=YES  RESPOND AND PREPARE FOR SVC 34       23856500
CSIRETI  L     WB,$PITABLE         LOCATE PITS                          23857000
         MVC   COMFLAG(14),COMAMASK COPY MASK INTO                   R4 23857500
         MVI   COMUCM,X'FF'        INDICATE S INIT SVC 34            R4 23858000
         MVC   COMTO,$SYSID        SET OUR SYSTEM                    R4 23858500
CSIRETA  TM    PITSTAT,PITINIT     DOES PIT HAVE INIT                   23859000
         BO    CSIRETN             IF SO GET NEXT PIT                   23859500
         TM    PITSTAT,PITHOLDA+PITHOLD1 IS PIT DRAINED                 23860000
         BNZ   CSIRETN             IF SO SKIP START                     23860500
         OI    PITFLAGS,PITSIVER   SET VERIFICATION REQUIRED            23861000
         OI    PITSTAT,PITINIT     INDICATE INIT STARTED                23861500
         L     WA,$SSVT            POINT TO THE SSVT                    23862000
         L     R1,$SVPIDLE-SSVT(,WA)   GET ACTIVE INIT COUNT            23862500
         LA    R0,1(,R1)           UP IT BY ONE FOR NEW INIT            23863000
         CS    R1,R0,$SVPIDLE-SSVT(WA) SET NEW COUNT -- MAYBE           23863500
         BZ    *+8                 GOOD -- ISSUE START COMMAND          23864000
         B     *-16                NO--LOOP 'TILL UPDATED               23864500
         MVC   COMMAND(14),=C'S INIT.INIT,,,'  SET START INIT           23865000
         MVC   COMMAND+14(L'$SVSSNM),$SVSSNM-SSVT(WA) COMMAND           23865500
         LA    R0,14+L'$SVSSNM     SET COMMAND LENGTH                   23866000
         $CWTO L=(R0)              START THE INITIATOR                  23866500
CSIRETN  ICM   WB,15,PITNEXT       POINT TO NEXT PIT                 R4 23867000
         BNZ   CSIRETA             BR IF VALID PIT ADDRESS           R4 23867500
         $CRET ,                   RETURN WITH NOTHING                  23868000
         SPACE 1                                                        23868500
*********************************************************************** 23869000
*        DISPLAY CURRENT STATUS OF AN INITIATOR                       * 23869500
*********************************************************************** 23870000
         SPACE 1                                                        23870500
* SET STATUS                                                            23871000
CDIDIS   MVC   COMMAND(CDIML),CDIM INSERT MESSAGE PROTOTYPE             23871500
         TM    PITSTAT,PITHOLDA+PITHOLD1  TEST FOR DRAIN BITS ON        23872000
         BZ    CDINDRN             BR IF NOT DRAINING OR DRAINED        23872500
         MVC   CDIMS-CDIM+COMMAND,=CL8'DRAINING' ASSUME DRAINING        23873000
         TM    PITSTAT,PITBUSY     TEST FOR PIT IN USE                  23873500
         BO    CDICLAS             SET CLASSES, PIT (DRAINING)          23874000
         MVC   CDIMS-CDIM+COMMAND,=CL8'DRAINED' SET DRAIN               23874500
         B     CDICLAS             SET CLASSES, PIT (DRAINED)           23875000
CDINDRN  TM    PITSTAT,PITHALTA+PITHALT1 TEST FOR HALT BITS ON          23875500
         BZ    CDINHLT             IF NOT, CAN NOT BE HALTED-HALTING    23876000
*                                  HALTING TEXT IN PROTOTYPE            23876500
         TM    PITSTAT,PITBUSY     TEST FOR PIT IN USE                  23877000
         BO    CDICLAS             SET CLASSES, PIT (HALTING)           23877500
         MVC   CDIMS-CDIM+COMMAND,=CL8'HALTED' SET HALTED               23878000
         B     CDICLAS             SET CLASSES, PIT (HALTED)            23878500
CDINHLT  MVC   CDIMS-CDIM+COMMAND,=CL8'INACTIVE' ASSUME INACTIVE        23879000
         TM    PITSTAT,PITBUSY     TEST FOR PIT IN USE                  23879500
         BZ    CDICLAS             SET CLASSES, PIT (INACTIVE)          23880000
         MVC   CDIMS-CDIM+COMMAND,=CL8'ACTIVE' SET ACTIVE               23880500
* SET CLASSES                                                           23881000
CDICLAS  SLR   R1,R1               MOVE PIT                          R4 23881500
         IC    R1,$MAXCLAS          CLASS                            R4 23882000
         BCTR  R1,0                  LIST TO                         R4 23882500
         EX    R1,CDIPITCL            MESSAGE                        R4 23883000
* SET PIT IDENTIFICATION                                                23883500
         MVC   CDIMI-CDIM+COMMAND,PITPATID SET INIT ID                  23884000
         TM    PITSTAT,PITBUSY     TEST FOR PIT BUSY                    23884500
         BO    *+12                YES--SKIP TEST FOR XBM               23885000
         TM    PITFLAGS,PITXBM     TEST FOR XEQ BATCHING                23885500
         BZ    CDILNGTH            FAILED BOTH TESTS-MSG COMPLETE       23886000
         L     R1,PITSJB           POINT TO POSSIBLE SJB                23886500
         LA    R1,0(,R1)           CLEAR HIGH-ORDER BYTE                23887000
         TM    PITFLAGS,PITXBM     TEST FOR XEQ BATCH MOMITOR           23887500
         BZ    CDIJOBNM            NONE--SET POSSIBLE JOB NAME          23888000
         MVC   CDIXBM-CDIM+COMMAND,=C'XB'  SET XEQ BATCH MON ID         23888500
         TM    PITSTAT,PITHOLD1+PITHOLDA+PITHALT1+PITHALTA              23889000
         BNZ   CDIXBMNM            NOT BUSY SET XBM NAME                23889500
         TM    PITSTAT,PITBUSY     TEST FOR BUSY                        23890000
         BO    CDIJOBNM            YES--INSERT XEQ JOB ID               23890500
CDIXBMNM MVC   CDINAME-CDIM+COMMAND,SJBXBJNM-SJBDSECT(R1) SET XBM       23891000
         B     CDILNGTH            GO SEND MESSAGE                      23891500
CDIJOBNM MVC   CDINAME-CDIM+COMMAND,SJBJOBID-SJBDSECT(R1) SET JOB       23892000
CDILNGTH LA    R0,CDIML            SET MESSAGE LENGTH                   23892500
         $CWTO L=(R0),RET=(WA)     SEND INIT DISPLAY                    23893000
         SPACE 2                                                        23893500
CDIPITCL MVC   CDIMCLAS-CDIM+COMMAND(*-*),PITCLASS *** EXEC ONLY **  R4 23894000
CDIM     DC    CL3' ',CL5'INIT'    MESSAGE PROTOTYPE                    23894500
CDIXBM   EQU   CDIM,2              AREA FOR XBM IDENTIFIER              23895000
CDIMI    DC    CL(L'PITPATID)' ',C' ' INIT ID AND A BLANK               23895500
CDIMS    DC    CL8'HALTING',C' '   STATUS OF INIT AND A BLANK           23896000
CDINMID  DC    8C'*',CL3' C='      JOB ID AND CLASS PREFIX              23896500
CDINAME  EQU   CDINMID,8           AREA FOR JOB OR XBM ID               23897000
CDIMCLAS DC    CL36' '             INITIATOR CLASSES                 R4 23897500
CDIML    EQU   *-CDIM              LENGTH OF MESSAGE                    23898000
         SPACE 2                                                        23898500
*********************************************************************** 23899000
*        STOP ALL OR ONE INITIATOR                                    * 23899500
*********************************************************************** 23900000
CDIPIA   NULL                      STOP ALL PITS                        23900500
         OI    PITSTAT,PITHOLDA    INDICATE PIT STOPPED BY 'ALL' CMND   23901000
         B     *+8                 BR ARND STOP SINGLE                  23901500
CDIPI1   OI    PITSTAT,PITHOLD1    STOP A PIT --$PIN CMND               23902000
         L     R15,$SSVT           LOCATE THE SSVT                      23902500
         OI    $SVJOB-SSVT(R15),X'80'  FLAG INIT DRAINED FOR XEQ        23903000
         TM    PITSTAT,PITBUSY     TEST FOR $POST OF HASP NECESSARY     23903500
         BNZR  WA                  INIT BUSY--NOT NEEDED                23904000
         OI    COMNULOP,CIPOSTX    INIT IDLE--POST OF HASP IS NECESSARY 23904500
         BR    WA                  RETURN                               23905000
         EJECT                                                       R4 23905500
*********************************************************************** 23906000
*        CHANGE THE CLASS STRING OF AN INITIATOR                      * 23906500
*********************************************************************** 23907000
         SPACE 1                                                        23907500
CDITI    NULL                      CHANGE A CLASS STRING OF A PIT       23908000
         CLR   WD,WF               CHECK FOR PRESENCE OF OPERAND        23908500
         BNL   CDIINVO             NO THER -- ERROR                     23909000
         L     R1,4(,WD)           POINT TO START OF CLS STRING         23909500
         L     R15,8(,WD)          POINT TO END OF CLS STRING           23910000
         SR    R15,R1              COMPUTE STRING SIZE + 1              23910500
         BNP   CDIINVO             ERROR IF NULL                        23911000
         BCT   R15,*+8             REDUCE TO TRUE LENGTH                23911500
         B     CDIINVO             ERROR IF ZERO                        23912000
         CLM   R15,1,$MAXCLAS      CHECK FOR MAXIMUM SIZE            R4 23912500
         BNH   *+8                 OK -- FORGET USING MAXIMUM SIZE      23913000
         IC    R15,$MAXCLAS        HIGH -- USE MAXIMUM SIZE          R4 23913500
         BCTR  R15,0               REDUCE BY 1 FOR MACHINE LENGTH       23914000
         L     R14,=A(CVALIDTB)    POINT TO TEST TABLE               R4 23914500
         EX    R15,CTIVALID        CHECK STRING VS VALID ONES           23915000
         BNZ   CDIINVO             INVALID CHAR--ERROR EXIT             23915500
*                                  VALID CHAR ARE 'A-Z' AND '0-9'       23916000
         LR    R0,R15              SAVE STRING LENGTH                R4 23916500
         IC    R15,$MAXCLAS        BLANK                             R4 23917000
         BCTR  R15,0                OLD                              R4 23917500
         EX    R15,CTIBLANK          CLASSES                         R4 23918000
         LR    R15,R0              RESTORE STRING LENGTH             R4 23918500
         EX    R15,CTIMOVE         PASSED ALL TESTS--MOVE NEW STRING    23919000
         BR    WA                  RETURN                               23919500
         SPACE 1                                                        23920000
CTIVALID TRT   0(*-*,R1),0(R14)    *** EXECUTE ONLY ***              R4 23920500
CTIBLANK MVC   PITCLASS(*-*),CDIMCLAS  *** EXECUTE ONLY ***          R4 23921000
CTIMOVE  MVC   PITCLASS(*-*),0(R1) **** EXECUTE ONLY ****               23921500
CIPOSTX  EQU   X'80'               INDICATE POST NEEDED--INIT IDLE      23922000
         SPACE 2                                                        23922500
         DROP  WB                  DROP PIT ADDRESSABILITY              23923000
         EJECT                                                          23923500
*********************************************************************** 23924000
*                                                                     * 23924500
*        $P S -- STOP ( DRAIN ) SYSTEM                                * 23925000
*                                                                     * 23925500
*********************************************************************** 23926000
CP40     OI    $STATUS,$DRAINED    SET SYSTEM DRAIN FLAG                23926500
         $CRET MSG='SYSTEM DRAINING'     TELL OPERATOR                  23927000
         EJECT                                                          23927500
*********************************************************************** 23928000
*                                                                     * 23928500
*        $S   -- START SYSTEM                                         * 23929000
*                                                                     * 23929500
*********************************************************************** 23930000
CS40     NI    $STATUS,255-$ALMSGSW-$DRAINED RESET DRAIN FLAGS          23930500
         L     R1,$PCEORG          LOCATE FIRST PCE                     23931000
CSSPOST  $POST (R1),HOLD           POST ALL PCES TO START               23931500
         L     R1,PCENEXT-PCEDSECT(0,R1) PICK UP NEXT                   23932000
         LTR   R1,R1               TEST FOR END                         23932500
         BNZ   CSSPOST             IF MORE, LOOP                        23933000
         $POST $HASPECF,(JOB,JOT)  POST JOB AND JOT                     23933500
         B     CSIRET              POST JOB AND REPLY OK                23934000
         EJECT                                                          23934500
*********************************************************************** 23935000
*                                                                     * 23935500
*        $P JES2 -- STOP (WITHDRAW) JES2                              * 23936000
*                                                                     * 23936500
*********************************************************************** 23937000
         USING JQEDSECT,R1                                              23937500
CPJES2   DS    0H                  STOP JES2 PROCESSOR                  23938000
         TM    COMAUTH,COMR+COMS   TEST FOR RESTRICTED CONSOLE       R4 23938500
         BNZ   CDIINVO             YES--CAN'T WITHDRAW JES2             23939000
         OI    $STATUS,$DRAINED    SET SYSTEM DRAINING FLAG             23939500
         LH    R1,$EXCPCT          TEST OUTSTANDING I/O                 23940000
         A     R1,$BUSYQUE         TEST WTO                             23940500
         BNZ   CPSRET              REJECT IF WORK TO DO                 23941000
*        WITHDRAW JES2 FROM CONTROL OF THE MACHINE                      23941500
         CLI   $ACTIVE,0           MAKE SURE READERS ARE NOT STARTING   23942000
         BNE   CPSRET              RETURN IF STARTING                   23942500
         L     R1,$PCEORG          LOCATE FIRST PCE                     23943000
CPSL     CLI   PCEID-PCEDSECT+1(R1),PCERDRID IS THIS RDR                23943500
         BE    CPSNXT              SKIP HOLD TEST FOR RDRS              23944000
         TM    PCEEWF-PCEDSECT(R1),$EWFHOLD IS PROCESSOR HELD           23944500
         BO    CPSPOST             POST IT IF YES                       23945000
CPSNXT   L     R1,PCENEXT-PCEDSECT(0,R1) POINT TO NEXT                  23945500
         LTR   R1,R1               TEST FOR END                         23946000
         BNZ   CPSL                LOOP                                 23946500
         B     CPSOK               CONTINUE WITHDRAWAL                  23947000
CPSPOST  $POST (R1),HOLD           RELEASE PROCESSOR                    23947500
         NI    $STATUS,255-$ALMSGSW RESET MESSAGE SW                    23948000
CPSNXTA  L     R1,PCENEXT-PCEDSECT(0,R1) POINT TO NEXT                  23948500
         LTR   R1,R1               TEST FOR END                         23949000
         BZ    CPSRET              EXIT IF END                          23949500
         CLI   PCEID-PCEDSECT+1(R1),PCERDRID IS THIS RDR                23950000
         BE    CPSNXTA             FORGET POST                          23950500
         B     CPSPOST             POST PROCESSOR                       23951000
CPSOK    DS    0H                                                       23951500
         OI    $STATUS,$SYSEXIT    SET FOR SYSTEM EXIT                  23952000
         LA    R1,$PCEORG-(PCENEXT-PCEDSECT) POINT TO PCE HEAD          23952500
CPSPCEL  ICM   R1,15,PCENEXT-PCEDSECT(R1) POINT TO NEXT PCE             23953000
         BZ    CPSPCEE             EXIT IF END                          23953500
         CLI   PCEID-PCEDSECT+1(R1),PCERDRID IS THIS A READER           23954000
         BNE   CPSPCEL             LOOP                                 23954500
         LM    WA,WB,PCEPCEA-PCEDSECT(R1) PICK UP DISPATCH PTRS         23955000
         ST    WA,PCEPCEA-PCEDSECT(,WB) REMOVE                          23955500
         ST    WB,PCEPCEB-PCEDSECT(,WA) PCE                             23956000
         ST    R1,PCEPCEA-PCEDSECT(,R1) QUEUE IT                        23956500
         ST    R1,PCEPCEB-PCEDSECT(,R1) TO ITSELF                       23957000
         MVI   PCEEWF-PCEDSECT(R1),$EWFOPER DEACTIVATE PROCESSOR        23957500
         B     CPSPCEL             LOOP                                 23958000
CPSPCEE  DS    0H                                                       23958500
         $POST $HASPECF,JOB        TELL XEQ TO CLEAN UP                 23959000
         $WAIT HOLD                WAIT FOR POST FROM XEQ               23959500
         B     CPJESSHR            TEST FOR SHARED SYSTEM IDLE          23960000
CPJESWT  $WAIT ABIT                WAIT FOR A CYCLE                     23960500
CPJESSHR TM    $STATUS,$CKPTACT    TEST FOR CHECKPOINT IDLE             23961000
         BO    CPJESWT             NO--WAIT FOR IT                      23961500
         L     R1,$QSE1            GET ADDRESS OF 1ST QSE            R4 23962000
         TM    QSEFLAGS-QSEDSECT(R1),QSELAST  TEST FOR 1 SYSTEM         23962500
         BO    *+12                SKIP NEXT TEST IF ONLY ONE           23963000
         TM    $STATUS,$QSONDA     TEST FOR SHARED QUEUES ON DA         23963500
         BZ    CPJESWT             BRANCH IF NOT TO WAIT                23964000
         L     R10,$SSVT           POINT TO SSVT                        23964500
         LA    R1,1                SET COMPLETION INDICATOR             23965000
         ST    R1,$SVHASP-SSVT(,R10) SIGNAL THAT HASP IS GOING DOWN     23965500
         L     R15,CPSEXIT         POINT TO EXIT ROUTINE                23966000
         BR    R15                 ENTER IT                             23966500
CPSRET   $CRET MSG='JES2 NOT DORMANT -- SYSTEM NOW DRAINING'            23967000
         DROP  R1                                                       23967500
         EJECT                                                          23968000
*********************************************************************** 23968500
*                                                                     * 23969000
*        $VS COMMAND-- SEND VS2 COMMANDS TO VS2                       * 23969500
*        COMMUNICATIONS TASK VIA SVC34                                * 23970000
*                                                                     * 23970500
*********************************************************************** 23971000
CVS      DS    0H                  ENTRY TO $VS COMMAND                 23971500
         BXH   WD,WE,CDIINVO       CHECK FOR OPERANDS                   23972000
         $CWTO TRUNC=YES           TRUNCATE MLWTO FOR SVC 34            23972500
CVSLOOP  L     R15,0(,WD)          POINT TO 1ST OPERAND                 23973000
         L     R1,4(,WD)           POINT TO END OF 1ST OPERAND          23973500
         CLI   0(R15),C''''        CHECK FOR CORRECT FORMAT             23974000
         BNE   CDIINVO             IF NOT ERROR                         23974500
         SH    R1,=H'2'            LOOK AT END FOR QUOTE ALSO           23975000
         CLI   0(R1),C''''         MUST BE SURROUNDED BY QUOTES         23975500
         BNE   CDIINVO             IF NOT -- ERROR                      23976000
         SLR   R1,R15              COMPUTE SIZE OF VS2 CMND             23976500
         SH    R1,=H'2'            LESS TWO FOR MACHINE                 23977000
         BM    CDIINVO             IF NEGATIVE -- ERROR                 23977500
         EX    R1,CVSCMND          MOVE GOOD CMND TO BEGINNING OF       23978000
         LA    R0,1(,R1)           AREA, AND GET TRUE LENGTH            23978500
*********************************************************************** 23978600
*                                                                     * 23978700
*        MAKE SURE COMMAND IS NOT ALL BLANKS                          * 23978800
*                                                                     * 23978900
*********************************************************************** 23979000
         LR    R1,R0               GET TRUE COMMAND LENGTH          R41 23979100
CVSBLKCK CLI   1(R15),C' '         IS CHARACTER A BLANK             R41 23979200
         BNE   CVSSVC34            IF NOT, GO TO ISSUE SVC 34       R41 23979300
         LA    R15,1(,R15)         POINT TO NEXT CHARACTER          R41 23979400
         BCT   R1,CVSBLKCK         LOOP BACK IF MORE CHARACTERS     R41 23979500
         B     CDIINVO             ELSE ALL BLANKS -- ERROR         R41 23979600
         SPACE 2                                                    R41 23979700
CVSSVC34 DS    0H                  SEND COMMAND TO VS2              R41 23979800
         $CWTO L=(R0)              SVC 34 THE COMMAND                   23979900
         BXLE  WD,WE,CVSLOOP       AND LOOP THROUGH ALL CMNDS           23980000
         B     CDIRET              RETURN AFTER ALL CMNDS               23980100
CVSCMND  MVC   COMMAND(*-*),1(R15) **** EXECUTE ONLY ****               23980500
         EJECT                                                          23981000
*********************************************************************** 23981500
*                                                                     * 23982000
*        $ESYS,SID -- WARM START A SYSTEM THAT IS NOT ACTIVE          * 23982500
*        OPERAND IS A VALID SID WHOSE NAME IS IN THE QSE TABLE        * 23983000
*        ONLY ONE SYSTEM IS WARM-STARTABLE AT A TIME                  * 23983500
*                                                                     * 23984000
*********************************************************************** 23984500
         SPACE 2                                                        23985000
CES      DS    0H                  RESTART SYSTEM                       23985500
         CLC   COMVERB(4),=C'ESYS'  TEST FOR PROPER COMMAND FORMAT      23986000
         BE    CESYSOK             YES--CONTINUE                        23986500
         $CFINVC ,                 ELSE FLAG AS INVALID COMMAND         23987000
CESYSOK  DS    0H                  CONTINUE $ESYS COMMAND               23987500
         L     WB,$ESYSQSE         POINT TO QSE WARM START POINTER      23988000
         LTR   WB,WB               TEST FOR ACTIVE                      23988500
         BNZ   CESYSERR            IF ACTIVE--EXIT WITH DIAGNOSTIC      23989000
         BXH   WD,WE,CDIINVO       FETCH NEXT OPERAND                   23989500
         LM    R1,WA,0(WD)         PICK-UP OPERAND POINTERS             23990000
         SLR   WA,R1               COMPUTE OPERAND                      23990500
         BCTR  WA,0                LENGTH                               23991000
         CH    WA,=H'4'            TEST LENGTH                          23991500
         BNE   CDIINVO             NOT CORRECT--ERROR                   23992000
         $QSUSE ,                  ENQUEUE ON SHARED RESOURCE           23992500
         L     WA,$QSE1            POINT TO 1ST QSE                  R4 23993000
         SH    WA,$QSEL            BACK UP ONE QSE                   R4 23993500
         USING QSEDSECT,WA         QSE ADDRESSABILITY                   23994000
CESLOOP  AH    WA,$QSEL            POINT TO NEXT QSE                 R4 23994500
         CLC   QSESID,0(R1)        TEST FOR MATCH WITH OPERAND       R4 23995000
         BE    CESYSFND            YES--RESTART IT                      23995500
         TM    QSEFLAGS,QSELAST    TEST FOR LAST ELEMENT                23996000
         BZ    CESLOOP             NOT LAST -- LOOP                     23996500
         B     CDIINVO             LAST -- ERROR                        23997000
CESYSFND DS    0H                  SYSTEM ID FOUND                      23997500
         STCK  COMDWORK            STORE TOD CLOCK VALUE                23998000
         L     WC,QSESITIM         PICK-UP LAST CKPT TIME               23998500
         L     WD,$SYNCTOL         PICK-UP SYNC TIME VALUE           R4 23999000
         ALR   WC,WD               COMPUTE CURRENT TIME VALUE           23999500
         CL    WC,COMDWORK         TEST FOR PROCESSOR ACTIVE            24000000
         BNL   CESYSACT            YES--PROCESSOR STILL ACTIVE          24000500
         ST    WA,$ESYSQSE         SET QSE TO BE WARM STARTED           24001000
         NI    QSESTAT,255-QSEACTIV  INDICATE SYSTEM INACTIVE        R4 24001500
         L     R15,$WARMPCE        POINT TO WARM START PCE           R4 24002000
         $POST (R15),WORK          POST FOR WORK                        24002500
         SPACE 1                                                        24003000
         $CRET MSG=OK              AND EXIT WITH 'OK'                   24003500
         SPACE 2                                                        24004000
*        MESSAGE THAT WARM START TASK IS BUSY                           24004500
         SPACE 1                                                        24005000
CESYSERR DS    0H                  WARM START PCE IS BUSY               24005500
         MVC   COMMAND(CESYSLN1),CESYSMS1  SET MESSAGE HEADER           24006000
         L     WA,$QSE1            POINT TO 1ST QSE                  R4 24006500
         SH    WA,$QSEL            BACK UP ONE QSE                   R4 24007000
CESYSERL AH    WA,$QSEL            POINT TO NEXT QSE                 R4 24007500
         CLR   WB,WA               SID BEING WARM-STARTED            R4 24008000
         BE    CESYSERF            FOUND SID BEING WARM-STARTED         24008500
         TM    QSEFLAGS,QSELAST    TEST FOR LAST                        24009000
         BZ    CESYSERL            IF NOT LAST LOOP                     24009500
         LA    R0,CESYSLN1-1       SET MSG LENGTH FOR SID NOT FOUND     24010000
         B     CESYSWTO            AND EXIT WITH DIAGNOSTIC             24010500
CESYSERF DS    0H                  SID BEING WARM/STARTED WAS FOUND     24011000
         MVC   COMMAND+CESYSLN1(L'QSESID),QSESID SET SID NAME           24011500
         LA    R0,CESYSLN1+L'QSESID  SET MESSAGE LENGTH                 24012000
CESYSWTO DS    0H                  SEND MESSAGE                         24012500
         $CRET L=(R0)              EXIT WITH DIAGNOSTIC                 24013000
         SPACE 2                                                        24013500
*        MESSAGE THAT CURRENT SID IS ACTIVE                             24014000
         SPACE 1                                                        24014500
CESYSACT DS    0H                  SID IS ACTIVE                        24015000
         MVC   COMMAND(L'QSESID),QSESID  SET SID NAME                   24015500
         MVC   COMMAND+L'QSESID(CESYSLN2),CESYSMS2 SET REST OF DIAG     24016000
         LA    R0,L'QSESID+CESYSLN2  SET DIAGNOSTIC LENGTH              24016500
         B     CESYSWTO            AND EXIT WITH MESSAGE                24017000
         SPACE 1                                                        24017500
CESYSMS1 DC    C'TASK BUSY RE-STARTING' WARM START PCE IS ACTIVE MSG    24018000
CESYSLN1 EQU   *-CESYSMS1          LENGTH OF DIAGNOSTIC                 24018500
         SPACE 1                                                        24019000
CESYSMS2 DC    C' IS ACTIVE AND CANNOT BE RE-STARTED'                   24019500
CESYSLN2 EQU   *-CESYSMS2          LENGTH OF DIAGNOSTIC                 24020000
         SPACE 1                                                        24020500
         DROP  WA                  DROP QSE ADDRESSABILITY              24021000
         EJECT                                                          24021500
*********************************************************************** 24022000
*                                                                     * 24022500
*        $LSYS -- LIST STATUS OF SYSTEMS IN MULTI-SYSTEM NODE         * 24023000
*        NO OPERANDS ARE REQUIRED                                     * 24023500
*                                                                     * 24024000
*********************************************************************** 24024500
         SPACE 1                                                     R4 24025000
CLSYS    DS    0H                  ENTER LIST SYSTEM STATUS             24025500
         TM    COMAUTH,COMR+COMS   TEST FOR RESTRICTED CONSOLE       R4 24026000
         BNZ   CDIINVO             YES--INVALID AUTH FOR THIS CMND      24026500
         L     WB,$QSE1            POINT TO 1ST QSE                  R4 24027000
         B     CLSYSMVC            ENTER COMMON DISPLAY ROUTINE      R4 24027500
         USING QSEDSECT,WB         QSE ADDRESSABILITY                   24028000
CLSYSLP  TM    QSEFLAGS,QSELAST    TEST FOR LAST ELEMENT                24028500
         BZ    CLSYSQSE            NOT LAST -- ENTER DISPLAY ROUTINE    24029000
         $CRET ,                   ELSE EXIT                            24029500
         SPACE 2                                                        24030000
CLSYSQSE AH    WB,$QSEL            POINT TO NEXT QSE                 R4 24030500
CLSYSMVC MVC   COMMAND(L'QSESID),QSESID  SET SID NAME IN MESSAGE     R4 24031000
         C     WB,$AQSE            OUR SYSTEM                        R4 24031500
         BE    CLSYSACT            INDICATE ACTIVE                   R4 24032000
         C     WB,$ESYSQSE         IS SYSTEM RESTARTING...     @OZ28240 24032200
         BE    CLSYSACT            BR IF YES, DISPLAY STATUS   @OZ28240 24032400
         TM    QSESTAT,QSEACTIV    TEST FOR ACTIVE SYSTEM            R4 24032500
         BZ    CLSYSDWN            BR IF NO                          R4 24033000
         STCK  COMDWORK            SAVE TOD CLOCK VALUE                 24033500
         L     WC,QSESITIM         PICK-UP LAST CKPT TIME               24034000
         L     WA,$SYNCTOL         PICK-UP SYNC TIME VALUE           R4 24034500
         ALR   WC,WA               COMPUTE CURRENT TIME                 24035000
         CL    WC,COMDWORK         COMPARE FOR STATUS                   24035500
         BH    CLSYSACT            IF NOT LOW OR EQUAL --ACTIVE         24036000
         MVC   COMMAND+L'QSESID(8),=C' DORMANT'  SHOW MAYBE DOWN     R4 24036500
         LA    R0,L'QSESID+8       SET MESSAGE LENGTH                R4 24037000
         B     CLSYSWTO            AND SEND IT                       R4 24037500
CLSYSDWN DS    0H                  SYSTEM DEFINTELY NOT UP           R4 24038000
         MVC   COMMAND+L'QSESID(9),=C' INACTIVE' SET REST OF MESSAGE    24038500
         LA    R0,L'QSESID+9       SET MESSAGE LENGTH                   24039000
CLSYSWTO DS    0H                  SEND MESSAGE OF STATUS               24039500
         $CWTO L=(R0)              SEND IT                              24040000
         B     CLSYSLP             AND LOOP FOR MORE                    24040500
         SPACE 1                                                        24041000
CLSYSACT DS    0H                  SYSTEM MAY BE ACTIVE                 24041500
         MVC   COMMAND+L'QSESID(7),=C' ACTIVE' SET ACTIVE MESSAGE       24042000
         LA    R0,L'QSESID+7       SET MESSAGE LENGTH                   24042500
         C     WB,$ESYSQSE         CHECK TO SEE IF RESTARTING           24043000
         BNE   CLSYSIND            NO--CHK FOR IND MODE OF OPERATION    24043500
         MVC   COMMAND+L'QSESID(12),=C' RE-STARTING'  SET RESART MSG    24044000
         LA    R0,L'QSESID+12      SET MESSAGE LENGTH                   24044500
         B     CLSYSWTO            AND SEND IT                          24045000
CLSYSIND DS    0H                  CHECK FOR INDEPENDENT MODE           24045500
         CLC   QSESID,$SID         TEST FOR SAME SYSTEM                 24046000
         BNE   CLSYSWTO            NO--CAN'T TELL ABOUT IND MODE        24046500
         TM    $STATUS,$INDMODE    TEST FOR IND MODE                    24047000
         BZ    CLSYSWTO            NO--SEND MESSAGE AS IS               24047500
         MVC   COMMAND+L'QSESID+7(17),=C' INDEPENDENT MODE' SET  MSG    24048000
         LA    R0,L'QSESID+24      SET MESSAGE LENGTH                   24048500
         B     CLSYSWTO            AND RESPOND TO OPERATOR              24049000
         DROP  WB                  DROP QSE ADDRESSABILITY              24049500
         EJECT                                                          24050000
*********************************************************************** 24050500
*                                                                     * 24051000
*        $TALL,SID1,+ - OR NULL SID2,SID3,...SIDN                     * 24051500
*        SID1  = SID THAT CURRENTLY HAS JOB(S) AFFINITY               * 24052000
*        SID2  = SID'S TO WHICH JOB(S) ARE TO BE RE-ROUTED            * 24052500
*        + OR - MEANS THAT SID2...SIDN WILL BE ADDED OR SUBTRACTED    * 24053000
*        THE WORD 'ANY' MAY BE USE TO SET A SYSTEM AFF TO 'ANY'       * 24053500
*        THE WORD 'IND' WHEN USED MEANS INDEPENDENT MODE              * 24054000
*        AND INDICATES THAT JOBS ARE TO BE PLACED IN THAT SELECTION   * 24054500
*        MODE                                                         * 24055000
*                                                                     * 24055500
*********************************************************************** 24056000
         SPACE 2                                                        24056500
CTALL    DS    0H                                                       24057000
         TM    COMAUTH,COMR+COMS   TEST FOR RESTRICTED CONSOLE       R4 24057500
         BZ    CTALLAOK            NO -- AUTHORITY IS 'OK'              24058000
         $CFINVC ,                 AUTHORITY IS INVALID FOR COMMAND     24058500
CTALLAOK DS    0H                                                       24059000
         BXH   WD,WE,CDIINVO       SKIP TO NEXT OPERAND                 24059500
        $QSUSE                     REQUEST ACCESS TO CHECKPOINT DATA R4 24060000
         LM    R1,WA,0(WD)         PICK-UP OPERAND POINTERS             24060500
         SLR   WB,WB               ZERO INSERT REGISTER                 24061000
         CLC   0(3,R1),=C'IND'     TEST FOR 'IND' JOBS                  24061500
         BNE   CTALLNIN            NO--TRY SPECIFIC SID                 24062000
         IC    WB,=AL1(QUEINDAF)   PICK-UP IND BIT                      24062500
         B     CTALLFDA            AND TRY FOR NEXT OPERAND             24063000
CTALLNIN DS    0H                  NOT REQUEST FOR 'IND' JOBS           24063500
         SLR   WA,R1               COMPUTE                              24064000
         BCTR  WA,0                OPERAND LENGTH                       24064500
         CH    WA,=H'4'            CHECK FOR PROPER LENGTH              24065000
         BNE   CDIINVO             NO--ERROR                            24065500
         LA    R15,CTALLFD1        POINT TO FOUND ROUTINE               24066000
CTALSCAN DS    0H                  SCAN QSE(S) FOR OPERAND              24066500
         L     WA,$QSE1            POINT TO 1ST QSE                  R4 24067000
         SH    WA,$QSEL            BACK UP ONE QSE                   R4 24067500
         USING QSEDSECT,WA         QSE ADDRESSABILITY                   24068000
CTALLP1  AH    WA,$QSEL            POINT TO NEXT QSE                 R4 24068500
         CLC   QSESID,0(R1)        CHECK FOR MATCH                   R4 24069000
         BER   R15                 ENTER APPROPRIATE RTN                24069500
         TM    QSEFLAGS,QSELAST    TEST FOR LAST ONE                    24070000
         BZ    CTALLP1             NO LAST -- LOOP                      24070500
         B     CDIINVO             NOT FOUND--ERROR                     24071000
CTALLFD1 DS    0H                  FOUND OPERAND ONE                    24071500
         IC    WB,QSESIAFF         SET AFFINITY FOR 'EX'                24072000
CTALLFDA DS    0H                  TRY FOR NEXT OPERAND                 24072500
         BXH   WD,WE,CDIINVO       GET NEXT OPERAND OR ERROR            24073000
         L     R1,0(,WD)           POINT TO OPERAND                     24073500
         MVI   CTALLAFF,0          SET NO AFFINITY                      24074000
         LPR   R10,WE              ASSUME ADDITION                      24074500
         CLI   0(R1),C'+'          CHECK FOR ADDITION                   24075000
         BE    CTALCHG             YES -- GO DO IT                      24075500
         LNR   R10,R10             ASSUME DELETION OF AFFINITIES        24076000
         CLI   0(R1),C'-'          TEST FOR SAME                        24076500
         BE    CTALCHG             YES -- GO DO IT                      24077000
         SLR   R10,R10             SET NO ADDITION OR SUBTRACTION       24077500
         BCTR  R1,0                PT BEFOR NO-EXISTANT '+' OR '-'      24078000
CTALCHG  DS    0H                  CONTINUE OPERAND SCAN                24078500
         LA    R1,1(,R1)           POINT PAST POSSIBLE '+' OR '-'       24079000
         SPACE 1                                                        24079500
*        OTHER THAN FIRST OPERAND FOUND                                 24080000
CTALLOOP CLC   0(3,R1),=C'ANY'     TEST FOR ANY AFFINITY                24080500
         BNE   CTALNANY            NO--TEST FOR IND MODE OPERATION      24081000
         SLR   R10,R10             INDICATE NO ADD OR DELETION          24081500
         OI    CTALLAFF,QUESYSAF   FLAG AFFINITY OF 'ANY'               24082000
         B     CTALLFD3            AND LOOK FOR MORE OPERANDS           24082500
CTALNANY DS    0H                  NOT 'ANY' AFFINITY                   24083000
         CLC   0(3,R1),=C'IND'     CHECK FOR 'IND' MODE                 24083500
         BNE   CTALCHG1            NO -- TRY FOR SPECIFIC AFF           24084000
         OI    CTALLAFF,QUEINDAF   YES -- SET 'IND' MODE                24084500
         B     CTALLFD3            AND LOOK FOR MORE OPERANDS           24085000
CTALCHG1 DS    0H                  LOOK FOR SPECIFIC SID NAME           24085500
         LA    R15,CTALLFD2        SET TARGET ADDRESS                   24086000
         B     CTALSCAN            AND GO SCAN QSE(S)                   24086500
         SPACE 1                                                        24087000
CTALLFD2 DS    0H                  FOUND SPECIFIC AFFINITY              24087500
         OC    CTALLAFF,QSESIAFF   SET AFFINITY INTO SAVE AREA          24088000
CTALLFD3 DS    0H                  SEARCH FOR MORE OPERANDS             24088500
         BXLE  WD,WE,CTALLMOR      LOOK FOR NEXT OPERAND                24089000
         TM    CTALLAFF,QUEINDAF   TEST FOR 'IND' MODE                  24089500
         BZ    CTALLEND            NO--EXIT OPERAND SCAN                24090000
         TM    CTALLAFF,255-QUEINDAF TEST FOR OTHER AFFINITIES          24090500
         BNZ   CTALLEND            YES--EXIT OPERAND SCAN               24091000
         LTR   R10,R10             TEST FOR ADDITION OR DELETION        24091500
         BNZ   CTALLEND            YES--EXIT OPERAND SCAN               24092000
         SLR   WD,WE               NO--ERROR                            24092500
         B     CDIINVO             POINT TO OPERAND AND EXIT            24093000
         SPACE 1                                                        24093500
CTALLMOR DS    0H                  MORE OPERANDS                        24094000
         L     R1,0(,WD)           POINT TO NEXT OPERAND                24094500
         B     CTALLOOP            AND ENTER MAJOR SCAN LOOP            24095000
         SPACE 2                                                        24095500
*        SEARCH JOB QUEUE FOR JOB(S) WITH FIRST SID'S AFFINITY          24096000
         SPACE 1                                                        24096500
CTALLEND DS    0H                  END OF OPERANDS                      24097000
         SLR   WA,WA               SET NO JOBS ALTERED                  24097500
         USING JQEDSECT,R1         JQE ADDRESSABILITY                   24098000
         $CFJSCAN PROCESS=CTALPRO,NEXT=CTALNXT,EMPTY=CTALNONE,         C24098500
               IGNORE=CTALIGN      SCAN THE JOB QUEUE                   24099000
         LTR   WA,WA               TEST FOR ANY JOB(S) RE-ROUTED        24099500
         BNZ   CTALRET             YES -- SKIP DIAGNOSTIC               24100000
         $CRET MSG='NO JOB(S) RE-ROUTED'                                24100500
         SPACE 1                                                        24101000
CTALRET  DS    0H                  RETURN                               24101500
         $POST $HASPECF,(JOB)      POST FOR WORK                        24102000
         OI    $AQSE,QSEPJOB       CAUSE X SYSTEM POST(S)               24102500
         $CRET MSG=OK              AND RETURN 'OK'                      24103000
CTALNONE DS    0H                  COME HERE WHEN NO JOB(S) FND         24103500
         $CRET MSG='NO JOB(S) FOUND'                                    24104000
         SPACE 2                                                        24104500
*        LOOK AT EACH JOB TO SEE IF AFFINITY TO SID                     24105000
         SPACE 1                                                        24105500
CTALPRO  DS    0H                  PROCESS AJOB                         24106000
         CLC   JQEJOBNO,=H'10000'  TEST FOR NORMAL BATCH JOB            24106500
         BL    CTALLTST            IF YES -- BRANCH                     24107000
         TM    JQETYPE,$XEQ        TEST FOR STC OR TSU IN XEQ OR CVT    24107500
         BO    CTALNXT             YES -- GET NEXT JOB                  24108000
         CLI   JQETYPE,$INPUT      TEST FOR STC OR TSU IN INPUT RDR     24108500
         BE    CTALNXT             YES--GET NEXT JOB                    24109000
CTALLTST DS    0H                  TEST JOB FOR AFFINITY                24111500
         EX    WB,CTALTEST         TEST FOR AFFINITY OWNERSHIP          24112000
         BZ    CTALNXT             NO--GET NEXT JOB                     24112500
         LTR   R10,R10             TEST FOR TYPE OF CHANGE              24113000
         BM    CTALLESS            IF DELETION GO DO IT                 24113500
         BP    CTALMORE            IF ADDITION GO DO IT                 24114000
         NI    JQEFLAG2,QUEINDAF   TURN OFF OLD AFFINITIES          R41 24114500
CTALMORE DS    0H                  ADD NEW AFFINITIES                   24115000
         OC    JQEFLAG2,CTALLAFF   ADD AFFINITIES                       24115500
         B     CTALCKPT            AND CHECK-POINT ELEMENT              24116000
CTALLESS DS    0H                  DELETE SELECTED AFFINITIES           24116500
         LA    R15,255             SET REGSITER TO ALL BITS 'ON'        24117000
         SLR   R0,R0               ZERO INSERT REGISTER                 24117500
         IC    R0,CTALLAFF         PICK-UP AFFINITIES TO DELETE         24118000
         SLR   R15,R0              COMPUTE BITS TO BE LEFT 'ON'         24118500
         EX    R15,CTALAFOF        DELETE SELECTED AFFINITIES           24119000
         L     R14,$QSE1           POINT TO 1ST QSE                  R4 24119500
         SH    R14,$QSEL           BACK UP ONE QSE                   R4 24120000
         USING QSEDSECT,R14        QSE ADDRESSABILITY                   24120500
CTALAFLP AH    R14,$QSEL           POINT TO NEXT QSE                 R4 24121000
         IC    R15,QSESIAFF        PICK UP AFFINITY BITS FOR TEST    R4 24121500
         EX    R15,CTALTEST        TEST FOR IMPOSSIBLE AFFINITY         24122000
         BO    CTALCKPT            NO -- GO CHECK POINT ELEMENT         24122500
         TM    QSEFLAGS,QSELAST    TEST FOR LAST ELEMENT                24123000
         BZ    CTALAFLP            LOOP FOR TEST OF AFFINITIES          24123500
         OC    JQEFLAG2,CTALLAFF   RESET ORIGINAL AFFINITY              24124000
         B     CTALNXT             AND GET NEXT JOB                     24124500
         DROP  R14                 DROP QSE ADDRESSABILITY              24125000
         SPACE 1                                                        24125500
CTALCKPT DS    0H                  CHECK-POINT MODIFIED JQE             24126000
         LR    WA,WE               FLAG A MODIFICATION HAS BEEN MADE    24126500
         $QCKPT (R1)               CKPT MODIFIED JQE                    24127000
         B     CTALNXT             AND GET ANOTHER JOB                  24127500
         SPACE 2                                                        24128000
CTALTEST TM    JQEFLAG2,*-*        **** EXECUTE ONLY ****               24128500
CTALLOFF XI    JQEFLAG2,*-*        **** EXECUTE ONLY ****               24129000
CTALAFOF NI    JQEFLAG2,*-*        **** EXECUTE ONLY ****               24129500
         SPACE 2                                                        24130000
*        $TALL EQUATES                                                  24130500
         SPACE 1                                                        24131000
CTALLAFF EQU   COMEWORK,1          AFFINITY SAVE AREA                   24131500
         SPACE 2                                                        24132000
         EJECT                                                          24132500
*********************************************************************** 24133000
*                                                                     * 24133500
*        $TSYS,IND=Y/N -- SET SYSTEM IN INDEPENDENT MODE              * 24134000
*        OPERAND(S) -- IND=YES/NO -- SET/RESET INDEPENDENT MODE       * 24134500
*                                                                     * 24135000
*********************************************************************** 24135500
         SPACE 2                                                        24136000
CTSYS    DS    0H                  SET/RESET SYS TO INDEPENDENT MODE    24136500
         TM    COMAUTH,COMR+COMS   TEST FOR RESTRICTED CONSOLE       R4 24137000
         BZ    CTSYSAOK            BRANCH IF AUTHORITY IS 'OK'          24137500
         $CFINVC ,                 ELSE COMMAND IS INVALID              24138000
         SPACE 1                                                        24138500
CTSYSAOK DS    0H                  AUHTORITY IS 'OK'                    24139000
         BXH   WD,WE,CDIINVO       CHECK FOR PRESENCE OF OPERAND        24139500
         L     R1,0(,WD)           POINT TO OPERAND                     24140000
         CLC   0(4,R1),=C'IND='    CHECK FOR PROPER FORMAT              24140500
         BNE   CDIINVO             NO -- ERROR                          24141000
         CLI   4(R1),C'Y'          IS DESIRE TO ENTER IND MODE          24142000
         BE    CTSYINDY            YES -- GO DO IT                      24142500
         NI    $STATUS,255-$INDMODE RESET INDEPENDENT MODE SELECTION    24143500
         MVC   COMMAND+L'$SID(CTSYSLN1),CTSYMSG1 SET MESSAGE            24144000
         LA    R0,CTSYSLN1+L'$SID  SET MESSAGE LENGTH                   24144500
         B     CTSYEXIT            AND EXIT COMMAND                     24145000
CTSYINDY DS    0H                  ENTER INDEPENDENT MODE               24145500
         OI    $STATUS,$INDMODE    SET INDEPENDENT MODE                 24146500
         MVC   COMMAND+L'$SID(CTSYSLN2),CTSYMSG2 SET MESSAGE            24147000
         LA    R0,CTSYSLN2+L'$SID  SET MESSAGE LENGTH                   24147500
CTSYEXIT DS    0H                  EXIT COMMAND                         24148000
         $POST $HASPECF,JOB        POST THIS PROCESSOR FOR JOB          24148500
         MVC   COMMAND(L'$SID),$SID SET SYSTEM NAME IN MESSAGE          24149000
         $CRET L=(R0)              EXIT WITH MESSAGE                    24149500
         SPACE 2                                                        24150000
CTSYMSG1 DC    C' IS NO LONGER IN INDEPENDENT MODE' MESSAGE             24150500
CTSYSLN1 EQU   *-CTSYMSG1          LENGTH OF MESSAGE                    24151000
CTSYMSG2 DC    C' IS NOW IN INDEPENDENT MODE' MESSAGE                   24151500
CTSYSLN2 EQU   *-CTSYMSG2          LENGTH OF MESSAGE                    24152000
         LTORG ,                                                        24152500
         TITLE 'HASP COMMAND PROCESSOR HASPCSY3 - CONSOLE COMMANDS'     24153000
HASPCSY3 $COMGRUP  TC,TM,TO        CONSOLE COMMAND GROUP                24153500
*********************************************************************** 24154000
*                                                                     * 24154500
*        $T CON,LEVEL,LIST - SET LIST LEVEL OF LOGICAL CONSOLES       * 24155000
*                                                                     * 24155500
*        LEVEL = MESSAGE LEVEL (ONLY LEVELS ABOVE THIS DISPLAY)       * 24156000
*        LIST  = MAIN/TAPE/TP/UR/ERROR/LOG (LOGICAL ROUTINGS)         * 24156500
*                                                                     * 24157000
*********************************************************************** 24157500
CTC      DS    0H                                                       24158000
         BXH   WD,WE,CTOINVO       LOCATE SECOND OPERAND POINTER        24158500
         L     R1,0(0,WD)          POINT TO OPERAND                     24159000
         LA    WC,CTOINVO          POINT TO ERROR EXIT ROUTINE          24159500
         $CFCVB POINTER=(WD),NOK=CTOINVO CONVERT TO BINARY              24160000
         CH    R0,=H'15'           CHECK FOR MAX LEVEL EXCEEDED         24160500
         BCR   H,WC                INVALID OPERAND IF SO                24161000
         BXH   WD,WE,CTOINVO       LOCATE OPERAND                       24161500
         SLR   R14,R14             ZERO ACCUMULATOR                  R4 24162000
CTXCLOP  L     R1,0(0,WD)          POINT TO OPERAND                     24162500
         LA    R15,CTXTAB          POINT TO LOGICAL CONSOLE TABLE       24163000
         LA    WA,CTXTABCT         SET NUMBER OF ENTRIES                24163500
CTXCLOOP CLC   0(2,R15),0(R1)      COMPARE TABLE ENTRY AGAINST TEXT  R4 24164000
         BE    CTXCFND             IF MATCH, EXIT                       24164500
         LA    R15,CTXTESIZ(0,R15) POINT TO NEXT ENTRY                  24165000
         BCT   WA,CTXCLOOP         LOOP UNTIL END                       24165500
         BR    WC                  ERROR EXIT                           24166000
CTXCFND  O     R14,0(,R15)         ACCUMULATE ROUTINGS               R4 24166500
         BXLE  WD,WE,CTXCLOP       LOOP IF MORE OPERANDS             R4 24167000
         L     R15,$CSAREA         POINT TO CONSOLE SERVICE AREA     R4 24167500
         LA    R15,CSALEVEL+7*2-CSADSECT(,R15) POINT TO HIGHEST LEVELR4 24168000
         LA    WC,7                SET HIGHEST LEVEL NUMBER          R4 24168500
CTXSLOP  LH    R1,0(,R15)          PICK UP OLD ROUTINGS              R4 24169000
         OR    R1,R14              TURN ON ROUTE CODE                R4 24169500
         CR    WC,R0               IS LEVEL HIGHER THAN SPECIFIED    R4 24170000
         BH    CTXSON              TURN ROUTE ON IF YES              R4 24170500
         XR    R1,R14              FLIP ROUTES OFF IF NOT            R4 24171000
CTXSON   STH   R1,0(,R15)          SET NEW ROUTINGS                  R4 24171500
         BCTR  R15,0               DOWN                              R4 24172000
         BCTR  R15,0               TWO                               R4 24172500
         BCT   WC,CTXSLOP          DO FOR 7 (0 NOT ALTERED)          R4 24173000
         $CRET MSG=OK              RETURN                            R4 24173500
CTXTAB   DS    0F                  HASP LOGICAL ROUTING TEXT IDS     R4 24174000
         DC    C'MA',X'C000'       MAIN                              R4 24174500
CTXTESIZ EQU   *-CTXTAB                                              R4 24175000
         DC    C'TA',X'3C00'       TAPE                              R4 24175500
         DC    C'TP',X'0100'       TELE-PROCESSING                   R4 24176000
         DC    C'UR',X'0200'       UNIT RECORD                       R4 24176500
         DC    C'ER',X'0040'       ERROR                             R4 24177000
         DC    C'LO',X'0000'       LOG                               R4 24177500
CTXTABCT EQU   (*-CTXTAB)/CTXTESIZ                                      24178000
         EJECT                                                          24178500
*********************************************************************** 24179000
*                                                                     * 24179500
*        $TMCCA,LIST -- SET MESSAGE ROUTING                           * 24180000
*                                                                     * 24180500
*        CC    = CONSOLE TO RECEIVE THE RESPONSE                      * 24181000
*        A     = AREA OF CONSOLE CC                                   * 24181500
*        LIST  = DISPLAY COMMAND OPERANDS FOR CONSOLE CC AREA A       * 24182000
*                ( NO COMMAS BETWEEN LIST ITEMS )                     * 24182500
*                                                                     * 24183000
*********************************************************************** 24183500
CTM      DS    0H                                                       24184000
         SLR   WA,WA               ZERO WORK                         R4 24184500
         ST    WA,COMEWORK         ALSO WORK AREA                    R4 24185000
         IC    WA,COMUCM           ASSUME DESIRED UCM PRESENT        R4 24185500
         LA    R1,COMOPRND         SET ERROR LOCATOR                    24186000
         TM    COMFLAG,CMBFLAGU    IS THIS A UCM                     R4 24186500
         BZ    CTMINVO             IF NOT OS CONSOLE, NO                24187000
         L     R10,COMEXTEN        POINT TO EXTENDED AREA               24187500
         USING COMDSECT,R10                                             24188000
         LR    WC,WA               GET ENTRY CONSOLE                    24188500
         MH    WC,COMLCON          CALCULATE OFFSET (1 TOO HIGH)        24189000
         LA    WC,COMRESP-COMCONL(WC) POINT TO ELEMENTS                 24189500
         LA    R15,1(0,R1)         POINT TO NUMERIC                     24190000
         CLI   0(R15),C' '         CHECK FOR DISPLAY ONLY               24190500
         BE    CTMDISP             DISPLAY                              24191000
         CLI   0(R15),C'0'         IS IT NUMERIC                        24191500
         BL    CTMGETA             IF NOT TRY AREA                      24192000
         MVN   COMEWORK+3(1),0(R15) EXTRACT NUMERIC                     24192500
         L     WB,COMEWORK         PICK UP RESPONSE CONSOLE NUMBER   R4 24193000
         LA    R15,1(0,R15)        UP 1                                 24193500
         CLI   0(R15),C'0'         CHECK SECOND NUMERIC                 24194000
         BL    CTMCKC              IF NOT CHECK FOR SUPPORTED           24194500
         MH    WB,=H'10'           MULTIPLY BY TEN                   R4 24195000
         MVN   COMEWORK+3(1),0(R15) EXTRACT NUMERIC                     24195500
         A     WB,COMEWORK         ADD UNITS DIGIT                   R4 24196000
         LA    R15,1(0,R15)        UP 1                                 24196500
CTMCKC   LTR   WB,WB               CHECK FOR ZERO                    R4 24197000
         BZ    CTMCOMBA            LEAVE DEFAULT CONSOLE IN          R4 24197500
         CH    WB,COMOCON          CONSOLE TOO HIGH                  R4 24198000
         BH    CTMERROR            EXIT IF TOO HIGH                     24198500
         LR    WA,WB               PUT IN CONSOLE REGISTER           R4 24199000
CTMGETA  CLI   0(R15),C','         END OF OPERAND                    R4 24199500
         BE    CTMCOMBA            IF SO COMBINE AREA AND UCM           24200000
         CLI   0(R15),C' '         IS IT BLANK                          24200500
         BE    CTMCOMBA            IF SO COMBINE AREA AND UCM           24201000
         CLI   0(R15),C'A'         BELOW A                              24201500
         BL    CTMINVO             IF YES EXIT                          24202000
         CLI   0(R15),C'I'         IS IT SET NOW                        24202500
         BNH   CTMCOMB             IF SO COMBINE AREA AND UCM           24203000
         CLI   0(R15),C'J'         IS IT WITHIN RANGE                   24203500
         BL    CTMINVO             IF NOT EXIT                          24204000
         CLI   0(R15),C'R'         IS IT J - R                       R4 24204500
         BNH   CTMCOMB             IF SO COMBINE AREA AND UCM        R4 24205000
         CLI   0(R15),C'S'         IS IT BELOW S                     R4 24205500
         BL    CTMINVO             IF YES EXIT                       R4 24206000
         CLI   0(R15),C'Z'         IS IT S - Z                       R4 24206500
         BH    CTMINVO             EXIT IF HIGH                         24207000
CTMCOMB  ICM   WB,8,0(R15)         PICK UP AREA                      R4 24207500
CTMCOMBZ LA    R15,1(0,R15)        UP 1                                 24208000
CTMCOMBA SLDL  WA,8                COMBINE UCM AND AREA                 24208500
         CLI   0(R15),C','         IS IT ALL OR LIST                    24209000
         BE    CTMLIST             USE LIST                             24209500
         CLI   0(R15),C' '         IS IT BLANK                          24210000
         BNZ   CTMINVO             ERROR IF NOT                         24210500
* USER WANTS TO SET ALL OPERANDS                                        24211000
         LH    R0,COMLCON          GET COUNT*2                          24211500
         SRA   R0,1                HALVE IT                             24212000
         LR    WB,WC               POINT TO FIRST ELEMENT               24212500
CTMALL   STCM  WA,3,0(WB)          SET RESPONSE CONSOLE                 24213000
         LA    WB,2(0,WB)          UP 2 ( NEXT ELEMENT )                24213500
         BCT   R0,CTMALL           LOOP                                 24214000
* DISPLAY CURRENT SETTINGS                                              24214500
CTMDISP  LA    WE,6                SET INCREMENT                        24215000
         LA    WF,COMMAND+70-6     SET END                              24215500
         LH    WB,COMLCON          PICK UP LENGTH OF ELEMENTS           24216000
         SRA   WB,1                HALVE TO GET NUMBER                  24216500
         SR    WD,WD               SET OFFSET                           24217000
         SR    R0,R0               ZERO WORK                            24217500
         IC    R0,COMUCM           PICK UP ENTRY CONSOLE             R4 24218000
         MVC   COMMAND(3),=C'CON'  SET BEGINNING OF MESSAGE             24218500
         $CFCVE  VALUE=(R0)        CONVERT TO EBCDIC                    24219000
         MVC   COMMAND+3(3),COMDWORK+2 INSERT                           24219500
CTMDNLN  LA    WA,COMMAND          SET TO START OF LINE                 24220000
         SR    R0,R0               ZERO WORK                            24220500
CTMDNXE  BXH   WA,WE,CTMELN        END OF LINE TEST                     24221000
         IC    R0,COMCON(WD,WC)    PICK UP CONSOLE ID                   24221500
         $CFCVE  VALUE=(R0)        CONVERT TO EBCDIC                    24222000
         MVC   0(5,WA),COMDWORK    SET OUTPUT ITEM '   CC'              24222500
         MVI   2(WA),C'='          SET '  =CC'                          24223000
         MVI   5(WA),C' '          SET BLANK AREA                    R4 24223500
         LA    R14,COMCONA(WD,WC)  POINT TO AREA                     R4 24224000
         CLI   0(R14),0            IS IT ZERO                        R4 24224500
         BZ    SKIP270             SKIP NSI IF YES                   R4 24225000
         MVC   5(1,WA),0(R14)      SET '  =CCA'                         24225500
SKIP270  LA    R14,CTMTAB-2        POINT TO CONVERT TAB -2              24226000
CTMDL    LA    R14,2(0,R14)        UP 2                                 24226500
         CLI   0(R14),X'FF'        IS IT END                            24227000
         BE    CTMERROR            EXIT ON ERROR                        24227500
         CLM   WD,1,1(R14)         CHECK FOR MATCHING OFFSET            24228000
         BNE   CTMDL               LOOP                                 24228500
         MVC   1(1,WA),0(R14)      SET ' O=CCA'                         24229000
         LA    WD,2(0,WD)          UP TO NEXT ELEMENT                   24229500
         BCT   WB,CTMDNXE          LOOP TO NEXT ELEMENT                 24230000
         LA    R0,COMMAND-6        CALCULATE                            24230500
         SR    WA,R0                LENGTH                              24231000
         LR    R0,WA                OF MESSAGE                          24231500
         $CRET L=(R0)              DISPLAY AND EXIT                     24232000
* END OF DISPLAY LINE                                                   24232500
CTMELN   LA    R0,COMMAND-6        CALCULATE                            24233000
         SR    WA,R0                LENGTH                              24233500
         LR    R0,WA                OF MESSAGE                          24234000
         $CWTO L=(R0)              DISPLAY                              24234500
         B     CTMDNLN             DO NEXT LINE                         24235000
* LIST ITEMS DESIRED                                                    24235500
CTMLIST  LA    R1,1(0,R15)         POINT TO FIRST SPECIFICATION         24236000
CTMTBNK  CLI   0(R1),C' '          CHECK FOR END                        24236500
         BE    CTMDISP             DISPLAY SETTINGS IF END              24237000
         LA    R14,CTMTAB-2        POINT TO CONVERT TABLE - 2           24237500
CTMLNXT  LA    R14,2(0,R14)        UP TO NEXT                           24238000
         CLI   0(R14),X'FF'        IS IT END                            24238500
         BE    CTMINVO             EXIT ON ERROR                        24239000
         CLC   0(1,R14),0(R1)      MATCH SPECIFICATION                  24239500
         BNE   CTMLNXT             LOOP                                 24240000
         SR    WB,WB               ZERO WORK                            24240500
         IC    WB,1(0,R14)         PICK UP OFFSET                       24241000
         CH    WB,COMLCON          CHECK FOR COMPATIBLE                 24241500
         BNL   CTMERROR            GEN BAD                              24242000
         AR    WB,WC               POINT TO ELEMENT                     24242500
         STCM  WA,3,0(WB)          SET                                  24243000
         LA    R1,1(0,R1)          UP TO NEXT                           24243500
         B     CTMTBNK             LOOP                                 24244000
CTMERROR $CRET MSG='ENTRY CONSOLE NOT SUPPORTED' SEND DIAGNOSTIC        24244500
CTMINVO  $CFINVO OPERAND=(R1)      INVALID OPERAND                   R4 24245000
CTMTAB   DS    0H                  ITEMS IN LIST                        24245500
         DC    C'A',AL1($DA*2-2)                                        24246000
         DC    C'F',AL1($DF*2-2)                                        24246500
         DC    C'I',AL1($DI*2-2)                                        24247000
         DC    C'J',AL1($DJ*2-2)                                        24247500
         DC    C'N',AL1($DN*2-2)                                        24248000
         DC    C'O',AL1($DO*2-2)                                        24248500
         DC    C'Q',AL1($DQ*2-2)                                        24249000
         DC    C'U',AL1($DU*2-2)                                        24249500
* OPTIONAL SPECIFICATIONS NOT DISPLAYED                                 24250000
         DC    X'7D',AL1($D7D*2-2)                                      24250500
         DC    C'S',AL1($DS*2-2)                                        24251000
         DC    C'T',AL1($DT*2-2)                                        24251500
         DC    X'FF'               END OF TABLE                         24252000
         DROP  R10                                                      24252500
         EJECT                                                          24253000
*********************************************************************** 24253500
*                                                                     * 24254000
*        $T OSCX,D=M/D=J/D=T - SET OS CONSOLE DISPLAY OPTION          * 24254500
*                                                                     * 24255000
*        X     = CONSOLE UCMID NUMBER                                 * 24255500
*        M     = DISPLAY MESSAGE TEXT ONLY                            * 24256000
*        J     = DISPLAY JOB ID AND MESSAGE TEXT                      * 24256500
*        T     = DISPLAY TIME STAMP, JOB ID, AND TEXT                 * 24257000
*                                                                     * 24257500
*********************************************************************** 24258000
CTO      DS    0H                                                       24258500
         $CFCVB POINTER=(WD),NOK=CTOINVO GET UCMID                      24259000
         LA    R1,255              SET MAXIMUM UCMID                    24259500
         CR    R0,R1               ABOVE MAX                            24260000
         BH    CTOINVO             EXIT IF HIGH                         24260500
* COMNULOP BYTE 0 IS 0 FOR D=M                                          24261000
         L     R15,CVTPTR          POINT TO CVT                         24261500
         L     R15,CVTCUCB-CVT(,R15) POINT TO UCM                       24262000
         LM    R1,WB,UCMVEA-UCM(R15) PICK UP ELEMENT SCAN PARMS         24262500
CTOCONL  CLM   R0,1,UCMID-UCMLIST(R1) FIND ENTRY                        24263000
         BE    CTOCON              EXIT IF FOUND                        24263500
         BXLE  R1,WA,CTOCONL       LOOP                                 24264000
         B     CTOINVO             ERROR EXIT                           24264500
CTOCON   LR    WB,R1               SAVE UCME ADDRESS                    24265000
         BXLE  WD,WE,CTOSEL        CHECK FOR MORE PARAMETERS            24265500
CTOSET   $GETLOK ,                 LOCK                                 24266000
         MODESET EXTKEY=ZERO       GET KEY 0                            24266500
         NI    UCMDISP2-UCMLIST(WB),255-UCMDISPI-UCMDISPJ RESET         24267000
         OC    UCMDISP2-UCMLIST(1,WB),COMNULOP TURN ON INDICATORS       24267500
         MODESET EXTKEY=HASP       GET KEY 1                            24268000
         $FRELOK ,                 UNLOCK                               24268500
CTOXIT   $CRET MSG=OK              EXIT WITH OK                         24269000
CTOSEL   L     R1,0(0,WD)          POINT TO OPERAND                     24269500
         CLC   0(2,R1),=C'D='      CHECK FOR D=                         24270000
         BNE   CTOINVO             EXIT IF NOT                          24270500
         LA    R1,2(0,R1)          POINT TO SELECT CHARACTER            24271000
         $CFSEL (M,CTOSET),(J,CTOJ),(T,CTOT),OPERAND=(R1)               24271500
CTOINVO  L     R1,0(0,WD)          POINT TO                             24272000
         $CFINVO OPERAND=(R1)      INVALID OPERAND                      24272500
CTOJ     OI    COMNULOP,UCMDISPJ   SET TO DISPLAY JOB ID                24273000
         B     CTOSET              SET UCME                             24273500
CTOT     OI    COMNULOP,UCMDISPI   SET TO DISPLAY TIME STAMP            24274000
         B     CTOSET              SET UCME                             24274500
         EJECT                                                          24275000
*********************************************************************** 24275500
*                                                                     * 24276000
*        $T RX.CON,D=M/D=J/C=T - SET REMOTE CONSOLE DISPLAY OPTION    * 24276500
*                                                                     * 24277000
*        M     = DISPLAY MESSAGE TEXT ONLY                            * 24277500
*        J     = DISPLAY JOB ID AND MESSAGE TEXT                      * 24278000
*        T     = DISPLAY TIME STAMP, JOB ID, AND TEXT                 * 24278500
*                                                                     * 24279000
*********************************************************************** 24279500
CTOR     DS    0H                                                       24280000
         USING RATDSECT,WA                                              24280500
* WA SET TO RAT ADDRESS BY DEVICE COMMAND GROUP CONTROL                 24281000
         TM    COMAUTH,COMD        IS CONSOLE RESTRICTED FOR DEVICE  R4 24281500
         BO    CTOINVO             EXIT IF YES                          24282000
         TM    COMAUTH,CMBFLAGR    IS THIS A REMOTE RESTRICTION      R4 24282500
         BZ    CTORCOK             DO NEXT OPERAND IF NOT               24283000
         CLC   COMJROUT,RATROUTE   CHECK CONSOLE ROUTE FIELD        R41 24283500
         BNE   CTOINVO             EXIT IF NOT                          24284000
CTORCOK  BXLE  WD,WE,CTORSEL       IF MORE OPERANDS EXAMINE             24284500
CTORSET  NI    RATCONF,255-RATCONFT-RATCONFJ RESET OPTIONS              24285000
         OC    RATCONF,COMNULOP    SET SELECTIONS                       24285500
         B     CTOXIT              RETURN                               24286000
CTORSEL  L     R1,0(0,WD)          POINT TO OPERAND                     24286500
         CLC   0(2,R1),=C'D='      CHECK FOR D=                         24287000
         BNE   CTOINVO             ERROR IF NOT                         24287500
         LA    R1,2(0,R1)          POINT TO SELECT CHARACTER            24288000
         $CFSEL (M,CTORSET),(J,CTORJ),(T,CTORT),OPERAND=(R1)            24288500
         B     CTOINVO             ERROR EXIT                           24289000
CTORJ    OI    COMNULOP,RATCONFJ   SET TO DISPLAY JOB, TEXT             24289500
         B     CTORSET             SET FLAG                             24290000
CTORT    OI    COMNULOP,RATCONFT   SET TO DISPLAY TIME, JOB, TEXT       24290500
         B     CTORSET             SET FLAG                             24291000
         DROP  WA                                                       24291500
         SPACE 2                                                        24292000
         LTORG ,                                                        24292500
         TITLE 'HASP COMMAND PROCESSOR HASPCAOC - AUTOMATIC OPERATOR COC24293000
               MMANDS'                                                  24293500
HASPCAOC $COMGRUP CA,SA,TA,ZA      AUTOMATIC OPERATOR COMMANDS          24294000
*********************************************************************** 24294500
*                                                                     * 24295000
*        $C A -- CANCEL AUTOMATIC OPERATOR COMMANDS                   * 24295500
*                                                                     * 24296000
*********************************************************************** 24296500
         USING ACTDSECT,WA                                              24297000
         USING ACEDSECT,WB                                              24297500
CCA      L     WA,$ACTABLE         POINT TO ACT                         24298000
         L     WD,ACTACEF          POINT TO FIRST FREE ELEMENT          24298500
         ICM   R1,15,ACTACE        POINT TO FIRST ACTIVE ELEMENT        24299000
         BZ    CCANACT             BR IF NO ACTIVE                      24299500
         BAL   LINK,COMACEKT       KILL TIMER                           24300000
         L     R1,ACTACE           POINT TO ACE                         24300500
CCAFIND  LR    R15,R1              POINT TO FIRST                       24301000
CCAENDAL LR    WB,R1               POINT TO ACE                         24301500
         ICM   R1,15,ACEACE        POINT TO NEXT                        24302000
         BNZ   CCAENDAL            LOOP                                 24302500
         ST    R1,ACTACE           ZERO ACTIVE POINTERS                 24303000
         ST    R1,ACTACEZ          SET ACTIVE POINTERS                  24303500
         ST    WD,ACEACE           SET OLD FREE BEHIND                  24304000
         ST    R15,ACTACEF         SET NEW FREE CHAIN                   24304500
CCARET   $CRET MSG=OK              RETURN WITH OK                       24305000
CCANACT  ICM   R1,15,ACTACEZ       PICK UP FIRST HALTED ACE             24305500
         BNZ   CCAFIND             FIND END                             24306000
         B     CCARET              RETURN                               24306500
*********************************************************************** 24307000
*                                                                     * 24307500
*        $S A -- START AUTOMATIC OPERATOR COMMANDS                    * 24308000
*                                                                     * 24308500
*********************************************************************** 24309000
CSA      L     WA,$ACTABLE         POINT TO ACT                         24309500
         NI    ACTFLAG,255-ACTFLAGZ TURN OFF HALT FLAG IF ON            24310000
         ICM   WB,15,ACTACEZ       PICK UP HALTED ACE Q                 24310500
         BZ    CCARET              RETURN                               24311000
         ST    WB,ACTACE           PUT INTO ACTIVE CHAIN                24311500
         SLR   WB,WB               ZERO WORK                            24312000
         ST    WB,ACTACEZ          SET ZERO IN HALTED                   24312500
         BAL   LINK,COMACEKT       KILL TIMER                           24313000
         B     CCARET              RETURN                               24313500
         EJECT                                                          24314000
*********************************************************************** 24314500
*                                                                     * 24315000
*        $T A ID,I=SSSS/T=HH.MM/CANCEL/'TEXT' -- SET ACE              * 24315500
*                                                                     * 24316000
*        ID    = USER OR SYSTEM ASSIGNED ACE ID                       * 24316500
*        HH.MM = TIME OF CURRENT DAY TO EXECUTE 'TEXT' (00.01-99.59)  * 24317000
*        SSSS  = TIME INTERVAL BETWEEN EXECUTIONS                     * 24317500
*        CANCEL= DELETE ACE                                           * 24318000
*        'TEXT'= COMMAND(S) TO EXECUTE AT TIME INDICATED              * 24318500
*                                                                     * 24319000
*********************************************************************** 24319500
CTA      DS    0H                  START CHANGE ACE COMMAND             24320000
         CLC   COMVERB(4),=C'TALL' TEST FOR $TALL COMMAND               24320500
         BNE   CTANOTAL            NO--CONTINUE MODIFY ACE CMND         24321000
         LH    R1,=Y(CTALL-HASPCSY1) PICK-UP OFFSET TO $TALL COMMAND    24321500
         L     BASE3,=A(HASPCSY1)  POINT TO $TALL PROCESSING GROUP      24322000
         ALR   R1,BASE3            COMPUTE $TALL ENTRY ADDRESS          24322500
         BR    BASE3               EXIT TO $TALL COMMAND                24323000
CTANOTAL DS    0H                                                    R4 24323500
         L     WA,$ACTABLE         POINT TO ACE TABLE                   24326000
         BAL   LINK,COMACETR       GET NEW BASE                         24326500
         B     CTATERR             ERROR EXIT                           24327000
CTAA     L     R1,0(0,WD)          POINT TO OPERAND                     24327500
         L     WC,4(0,WD)          POINT TO NEXT                        24328000
         BCTR  WC,0                REDUCE TO OPERAND                    24328500
         BCTR  WC,0                LAST CHARACTER                       24329000
         SR    WC,R1               GET COUNT OF ID                      24329500
         BNP   CTANOID             BR IF NO ID                          24330000
         CH    WC,=H'4'            CHECK FOR WITHIN RANGE               24330500
         BH    CTAINVO             EXIT IF OPERAND INVALID              24331000
         BCTR  WC,0                GET MACHINE LEBGTH                   24331500
         MVC   COMEWORK,=CL4' '    BLANK COMEWORK                       24332000
         EX    WC,CTAMID           MOVE ID TO TEMPORARY                 24332500
* FIND ACE WITH ID INDICATED                                            24333000
         LA    WB,ACTACE-(ACEACE-ACEDSECT) POINT TO ACTIVE HEAD         24333500
         TM    ACTFLAG,ACTFLAGZ    IS QUEUE HALTED                      24334000
         BZ    CTASACE             SKIP NEXT IF NOT                     24334500
         LA    WB,ACTACEZ-(ACEACE-ACEDSECT) POINT TO HALTED HEAD        24335000
CTASACE  LR    R15,WB              COPY POINTER                         24335500
         ICM   WB,15,ACEACE        POINT TO NEXT ACE                    24336000
         BZ    CTACENEW            EXIT IF END                          24336500
         CLC   ACEID,COMEWORK      CHECK FOR MATCH                      24337000
         BNE   CTASACE             LOOP                                 24337500
         BAL   LINK,CTAACECK       CHECK AUTHORITY                      24338000
         B     CTAAOK              OK, CONTINUE             +0          24338500
* CONSOLE DOES NOT HAVE AUTHORITY TO REFERENCE THE ACE      +4          24339000
CTAINVO  MVC   COMMAND(8),0(R1)    SHIFT TEXT                           24339500
         MVC   COMMAND+8(22),=C' INVALID SPECIFICATION'                 24340000
         LA    R0,8+22             SET LENGTH                           24340500
         B     CTALDISR            EXIT WITH DISPLAY                    24341000
         SPACE 1                                                        24341500
CTAINVC $CFINVC ,                  INVALID COMMAND ERROR EXIT        R4 24342000
         EJECT                                                          24342500
CTAAOK   BXLE  WD,WE,CTAMODS       CHECK FOR MORE OPERANDS              24343000
CTALDIS  BAL   LINK,CTADIS         PREPARE DISPLAY                      24343500
CTALDISR TM    ACTFLAG,ACTFLAGZ    HALTED                               24344000
         BZ    CTALDISX            LET IT GO AS IS                      24344500
         $CWTO L=(R0)              DISPLAY WHAT WE HAVE                 24345000
         MVC   COMMAND(COMACEML-2),COMACEMT SET DIAGNOSTIC              24345500
         LA    R0,COMACEML-2       SET LENGTH                           24346000
CTALDISX $CRET L=(R0)              EXIT WITH DISPLAY                    24346500
* REMOVE ACE FROM QUEUE AND BUILD UPON IT                               24347000
CTAMODS  MVC   ACEACE-ACEDSECT(,R15),ACEACE REMOVE ACE                  24347500
*********************************************************************** 24348000
*                                                                     * 24348500
*        MODIFY ACE (ACE IS OFF ALL CHAINS)                           * 24349000
*                                                                     * 24349500
*********************************************************************** 24350000
CTAMOD   L     R1,0(0,WD)          POINT TO OPERAND                     24350500
         L     WC,4(0,WD)          POINT TO NEXT                        24351000
         BCTR  WC,0                POINT TO COMMA                       24351500
         CLI   1(R1),C'='          IS IT T OR I                         24352000
         BE    CTAMTIME            IF SO MODIFY TIME                    24352500
* MUST BE CANCEL OR TEXT                                                24353000
         BCTR  WC,0                POINT TO LAST CHARACTER              24353500
         CLI   0(R1),C''''         CHECK FOR APOSTROPHI                 24354000
         BE    CTATEXT             IF SO SET TEXT                       24354500
         CLI   0(R1),C'C'          IS IT CANCEL                         24355000
         BE    CTACAN              CANCEL IT IF YES                     24355500
CTAABORT MVC   COMMAND(8),0(R1)    SHIFT ERROR                          24356000
         MVC   COMMAND+8(22),=C' INVALID SPECIFICATION'                 24356500
         LA    R0,22+8             SET MESSAGE LENGTH                   24357000
CTAFREE  $CWTO L=(R0)              SEND MESSAGE                         24357500
         L     WA,$ACTABLE         POINT TO ACT                         24358000
CTACAN   MVC   ACEACE,ACTACEF      PUT FREE QUEUE BEHIND                24358500
         ST    WB,ACTACEF          FREE ACE                             24359000
         B     CTALDIS             DISPLAY AND EXIT                     24359500
CTATEXT  CLI   0(WC),C''''         CHECK FOR APOSTROPHI                 24360000
         BNE   *+6                 SKIP NEXT                            24360500
         BCTR  WC,0                REDUCE BY 1                          24361000
         BCTR  WC,0                REDUCE FOR MACHINE COUNT             24361500
         SR    WC,R1               CALCULATE MOVE COUNT                 24362000
         BM    CTAABORT            ABORT IF NULL                        24362500
         CH    WC,=Y(L'ACETEXT)    MAKE SURE NOT TOO LONG               24363000
         BNL   CTAABORT            ABORT IF TOO LONG                    24363500
         CLC   1(1,R1),COMMAND     CHECK FOR COMMAND CHARACTER FIRST    24364000
         BNE   CTAABORT            ABORT IF NOT                         24364500
         MVI   ACETEXT,C' '        BLANK OUT TEXT                       24365000
         MVC   ACETEXT+1(L'ACETEXT-1),ACETEXT AREA                      24365500
         EX    WC,CTAMTXT          MOVE TEXT                            24366000
         OI    ACEFLAG,ACEFLAGD    SET TEXT OK FLAG                     24366500
CTAMODN  BXLE  WD,WE,CTAMOD        MODIFY MORE                          24367000
         MVC   COMMAND(21),=C'INSUFFICIENT OPERANDS'                    24367500
         LA    R0,21               SET LENGTH                           24368000
         TM    ACEFLAG,ACEFLAGD+ACEFLAGT DO WE HAVE REQUIRED PARMS      24368500
         BNO   CTAFREE             SEND DIAGNOSTIC IF NOT               24369000
         L     R0,ACETIME          GET TIME OF COMMAND                  24369500
         LR    R1,WB               COPY POINTER                         24370000
         LR    WC,WB               SAVE ACE ADDRESS                     24370500
         BAL   LINK,COMAADD        ADD ACE TO ACTIVE CHAIN              24371000
         LR    WB,WC               BACK TO ACE                          24371500
         B     CTALDIS             DISPLAY ACE                          24372000
CTAMTIME LA    R14,2(0,R1)         POINT TO NUMERIC                     24372500
         SR    WC,R14              GET LENGTH OF SSSS                   24373000
         BNP   CTAABORT            ABORT IF NULL                        24373500
         SLR   R0,R0               ZERO AC                              24374000
         CLI   0(R1),C'T'          IS IT T                              24374500
         BE    CTATIME             BR IF YES                            24375000
         CLI   0(R1),C'I'          IS IT I                              24375500
         BNE   CTAABORT            ABORT IF NOT                         24376000
* USER WANTS INTERVAL                                                   24376500
         CH    WC,=H'4'            CHECK FOR TOO LONG                   24377000
         BH    CTAABORT            ABORT IF TOO LONG                    24377500
CTAIL    MH    R0,=H'10'           MULTIPLY BY 10                       24378000
CTAILA   IC    R15,0(,R14)         PICK UP CHARACTER                    24378500
         N     R15,=A(X'F')        MASK OUT HIGH VALUES                 24379000
         CLI   0(R14),C'0'         CHECK FOR NUMERIC                    24379500
         BL    CTAABORT            ABORT IF LOW                         24380000
         AR    R0,R15              ADD                                  24380500
         LA    R14,1(0,R14)        UP 1                                 24381000
         BCT   WC,CTAIL            LOOP                                 24381500
         CLI   0(R1),C'T'          IS IT T                              24382000
         BE    CTATIMEC            BR IF YES                            24382500
         CH    R0,=H'30'           CHECK FOR BELOW 30                   24383000
         BL    CTAABORT            EXIT IF LOW                          24383500
         STH   R0,ACEINTV          SET INTERVAL                         24384000
         OI    ACEFLAG,ACEFLAGT    SET TIME IS SET                      24384500
         B     CTAMODN             LOOP                                 24385000
CTATIME  CH    WC,=H'5'            CHECK FOR TOO LONG                   24385500
         BH    CTAABORT            ABORT IF LONG                        24386000
         CH    WC,=H'4'            CHECK FOR TOO SHORT                  24386500
         BL    CTAABORT            ABORT IF LOW                         24387000
         BE    CTALHR              DO 1 DIGIT HOUR                      24387500
         CLI   0(R14),C'0'         CHECK FOR NUMERIC                    24388000
         BL    CTAABORT            ABORT IF NOT                         24388500
         IC    R0,0(,R14)          PICK UP VALUE                        24389000
         N     R0,=A(X'F')         PURIFY                               24389500
         MH    R0,=H'10'           MULTIPLY BY 10                       24390000
         LA    R14,1(0,R14)        ACCOUNT FOR SPACE                    24390500
CTALHR   CLI   0(R14),C'0'         NUMERIC                              24391000
         BL    CTAABORT            ABORT IF NOT                         24391500
         IC    R15,0(,R14)         PICK UP CHARACTER                    24392000
         N     R15,=A(X'F')        PURIFY                               24392500
         AR    R0,R15              ACCUMULATE                           24393000
         CLI   1(R14),C'.'         CHECK FOR SEPARATOR                  24393500
         BNE   CTAABORT            EXIT IF NOT OK                       24394000
         MH    R0,=H'6'            MULTIPLY BY 6                        24394500
         LA    WC,2                SET 2                                24395000
         LA    R14,2(0,R14)        UP 2                                 24395500
         B     CTAILA              CONVERT LAST 2                       24396000
CTATIMEC CH    R0,=H'6000'         CHECK FOR BEYOND MAXIMUM             24396500
         BNL   CTAABORT            ABORT IF YES                         24397000
         MH    R0,=H'60'           GET NUMBER OF SECONDS                24397500
         ST    R0,ACETIME          SET TIME OF DAY                      24398000
         OI    ACEFLAG,ACEFLAGT    SET TIME IS SET                      24398500
         B     CTAMODN             LOOP                                 24399000
* USER DID NOT GIVE ID - DISPLAY OR CREATE ACE                          24399500
CTANOID  BXLE  WD,WE,CTAGETID      IF MORE PARMS GET ID                 24400000
         MVC   COMMAND(26),=C'NO AUTOMATIC COMMAND FOUND'               24400500
         LA    R0,26               SET COUNT                            24401000
         LA    WB,ACTACE-(ACEACE-ACEDSECT) POINT TO HEAD OF ACES        24401500
         TM    ACTFLAG,ACTFLAGZ    CHECK FOR HALTED                     24402000
         BZ    CTADAL              SKIP NEXT IF NOT                     24402500
         LA    WB,ACTACEZ-(ACEACE-ACEDSECT) POINT TO HALTED HEAD        24403000
CTADAL   ICM   WB,15,ACEACE        POINT TO NEXT ACE                    24403500
         BZ    CTALDISR            EXIT WITH MESSAGE                    24404000
         BAL   LINK,CTAACECK       CHECK CONSOLE AUTHORITY              24404500
         B     CTADALL             DO DISPLAY IF OK         +0          24405000
         B     CTADAL              LOOP                     +4          24405500
CTADALL  BAL   LINK,CTADIS         CREATE MESSAGE                       24406000
CTADALLA ICM   WB,15,ACEACE        POINT TO NEXT ACE                    24406500
         BZ    CTALDISR            EXIT WITH MESSAGE                    24407000
         BAL   LINK,CTAACECK       CHECK CONSOLE AUTHORITY              24407500
         B     *+8                 SKIP NSI IF OK           +0          24408000
         B     CTADALLA            GET NEXT ACE IF NOT OK   +4          24408500
         $CWTO L=(R0)              DISPLAY                              24409000
         L     WA,$ACTABLE         RESTORE WA                           24409500
         B     CTADALL             LOOP                                 24410000
         EJECT                                                          24410500
*********************************************************************** 24411000
*                                                                     * 24411500
*        SUPPLY AN ACE ID LEFT ADJUSTED                               * 24412000
*                                                                     * 24412500
*********************************************************************** 24413000
CTAGETID L     R1,ACTBID           PICK UP BASE ID                      24413500
         LA    R1,1(0,R1)          UP 1                                 24414000
         CH    R1,=H'9999'         CHECK FOR ABOVE MAX                  24414500
         BNH   *+8                 SKIP RESET                           24415000
         LA    R1,1                SET NEW BASE                         24415500
         ST    R1,ACTBID           SET FOR NEXT TIME                    24416000
         LR    R0,R1               COPY VALUE                           24416500
         $CFCVE ,                  CONVERT TO EBCDIC                    24417000
         MVC   COMEWORK,COMDWORK+1 PUT INTO COMEWORK                    24417500
CTASLIDE CLI   COMEWORK,C' '       CHECK FOR BLANK                      24418000
         BNE   CTAID               IF NOT LOOK FOR ID                   24418500
         MVC   COMEWORK,COMEWORK+1 SLIDE OVER 1                         24419000
         B     CTASLIDE            LOOP                                 24419500
CTAID    LA    WB,ACTACE-(ACEACE-ACEDSECT) POINT TO HEAD OF CHAIN       24420000
         TM    ACTFLAG,ACTFLAGZ    CHECK FOR HALTED                     24420500
         BZ    CTAIDS              SCAN IDS                             24421000
         LA    WB,ACTACEZ-(ACEACE-ACEDSECT) POINT TO HALTED HEAD        24421500
CTAIDS   ICM   WB,15,ACEACE        POINT TO NEXT ID                     24422000
         BZ    CTANEW              BUILD NEW IF NO MATCH                24422500
         CLC   ACEID,COMEWORK      CHECK FOR MATCH                      24423000
         BNE   CTAIDS              LOOP                                 24423500
         B     CTAGETID            GET NEXT ID                          24424000
*********************************************************************** 24424500
*                                                                     * 24425000
*        CREATE A NEW ACE                                             * 24425500
*                                                                     * 24426000
*********************************************************************** 24426500
CTACENEW BXH   WD,WE,CTAANF        GO TO NEXT OPERAND, ERROR IF NONE    24427000
CTANEW   ICM   WB,15,ACTACEF       PICK UP NEW ACE                      24427500
         BZ    CTAOUT              BR IF NO ACE                         24428000
         MVC   ACTACEF,ACEACE      SET NEW FREE ACE                     24428500
         MVC   ACEFLAG,COMAUTH     COPY RESTRICTIONS                 R4 24429000
         MVC   ACECON,COMUCM       COPY POSSIBLE UCMID               R4 24429500
         NI    ACEFLAG,ACEFLAGR    FORCE OTHER FLAGS OFF             R4 24430000
         TM    COMFLAG,CMBFLAGU    IS THIS UCMID                     R4 24430500
         BO    CTANEWA             SKIP NEXT IF YES                     24431000
         MVI   ACECON,1            SET UCMID OF 1                       24431500
CTANEWA  XC    ACEINTV,ACEINTV     ZERO OUT INTERVAL                    24432000
         XC    ACETIME,ACETIME     ZERO TIME                            24432500
         MVI   ACETEXT,C' '        BLANK                                24433000
         MVC   ACETEXT+1(L'ACETEXT-1),ACETEXT OUT TEXT AREA             24433500
         MVC   ACEID,COMEWORK      SET ACE ID                           24434000
         B     CTAMOD              FILL IT IN                           24434500
         EJECT                                                          24435000
*********************************************************************** 24435500
*                                                                     * 24436000
*        FORMAT A DISPLAY OF AN ACE                                   * 24436500
*                                                                     * 24437000
*********************************************************************** 24437500
CTADIS   MVC   CTABASIC,=C'ID **** T=**.** I=**** '                     24438000
         MVC   CTAAID,ACEID        SET ID                               24438500
         ICM   R1,15,ACETIME       PICK UP TIME                         24439000
         BNP   CTADNT              BR IF NO TIME                        24439500
         SR    R0,R0               ZERO R0                              24440000
         D     R0,=A(60*60)        SEPARATE HOURS                       24440500
         CVD   R1,COMDWORK         CONVERT                              24441000
         UNPK  CTAAHH,COMDWORK     TO EBCDIC                            24441500
         OI    CTAAHH+1,C'0'       SET SIGN                             24442000
         LR    R1,R0               PUT REMAINDER                        24442500
         SLR   R0,R0               IN R1                                24443000
         D     R0,=A(60)           DIVIDE BY SECONDS/MIN                24443500
         CVD   R1,COMDWORK         CONVERT                              24444000
         UNPK  CTAAMM,COMDWORK     TO EBCDIC                            24444500
         OI    CTAAMM+1,C'0'       SET SIGN                             24445000
CTADNT   LH    R0,ACEINTV          PICK UP INTERVAL                     24445500
         CVD   R0,COMDWORK         CONVERT TO DECIMAL                   24446000
         MVC   COMDWORK-1(6),=X'402020202120'                           24446500
         ED    COMDWORK-1(6),COMDWORK+5 THEN TO EBCDIC                  24447000
         MVC   CTAASS,COMDWORK+1   SET SSSS                             24447500
         MVC   CTAATEXT,ACETEXT    MOVE TEXT                            24448000
         LA    R0,CTAATEXT-CTABASIC+L'CTAATEXT SET MESSAGE LENGTH       24448500
         BR    LINK                RETURN                               24449000
*********************************************************************** 24449500
*                                                                     * 24450000
*        MISCELLANEOUS                                                * 24450500
*                                                                     * 24451000
*********************************************************************** 24451500
CTAACECK IC    WC,COMAUTH          PICK UP RESTRICTION FLAGS         R4 24452000
         N     WC,=A(COMJDS)       PURIFY                               24452500
         BZR   LINK                RETURN OK IF FULL AUTHORITY CONSOLE  24453000
         EX    WC,CTAAUTH          CHECK PARTIAL AUTHORITY OK           24453500
         BOR   LINK                RETURN OK IF SUFFICIENT              24454000
         B     4(0,LINK)           RETURN NOK                           24454500
         SPACE 1                                                        24455000
CTAOUT   MVC   COMMAND(31),=C'AUTOMATIC COMMAND LIMIT REACHED'          24455500
         LA    R0,31               SET LENGTH                           24456000
         B     CTALDISR            EXIT WITH DIAGNOSTIC                 24456500
         SPACE 1                                                        24457000
CTATERR  OC    ACTACE,ACTACE       CHECK FOR EMPTY                      24457500
         BZ    CTAA                IF ZERO GO ON                        24458000
         OI    ACTFLAG,ACTFLAGZ    SET HALTED                           24458500
         MVC   ACTACEZ,ACTACE      PUT QUEUE IN HALTED QUEUE            24459000
         XC    ACTACE,ACTACE       ZERO ACTIVE QUEUE                    24459500
         B     CTAA                GO ON                                24460000
         SPACE 1                                                        24460500
CTAANF   MVC   COMMAND(26),=C'NO AUTOMATIC COMMAND FOUND'               24461000
         LA    R0,26               SET COUNT                            24461500
         B     CTALDISR            EXIT                                 24462000
         EJECT                                                          24462500
CTAMID   MVC   COMEWORK(*-*),1(R1) MOVE USER SPECIFIED ID               24463000
CTAAUTH  TM    ACEFLAG,*-*         CHECK FOR AUTHORITY                  24463500
CTAMTXT  MVC   ACETEXT(*-*),1(R1) MOVE USER TEXT                        24464000
CTABASIC EQU   COMMAND,23          RESPONSE PATTERN                     24464500
CTAAID   EQU   CTABASIC+3,4        ACE ID                               24465000
CTAAHH   EQU   CTAAID+7,2          HH                                   24465500
CTAAMM   EQU   CTAAHH+3,2          MM                                   24466000
CTAASS   EQU   CTAAMM+5,4          SSSS                                 24466500
CTAATEXT EQU   CTABASIC+23,L'ACETEXT TEXT AREA                          24467000
         EJECT                                                          24467500
*********************************************************************** 24468000
*                                                                     * 24468500
*        $Z A -- HALT AUTOMATIC OPERATOR COMMANDS                     * 24469000
*                                                                     * 24469500
*********************************************************************** 24470000
CZA      L     WA,$ACTABLE         POINT TO ACT                         24470500
         OI    ACTFLAG,ACTFLAGZ    SHOW HALTED                          24471000
         ICM   WB,15,ACTACE        PICK UP ACTIVE ACE                   24471500
         BZ    CCARET              RETURN                               24472000
         ST    WB,ACTACEZ          SET INTO HALTED QUEUE                24472500
         SLR   WB,WB               ZERO WORK                            24473000
         ST    WB,ACTACE           SET ZERO IN ACTIVE                   24473500
         BAL   LINK,COMACEKT       KILL TIMER                           24474000
         B     CCARET              RETURN                               24474500
         DROP  WA,WB                                                    24475000
         SPACE 2                                                        24475500
         LTORG ,                                                        24476000
 TITLE 'HASP COMMAND PROCESSOR HASPCMS1 - MISC DISPLAY COMMANDS'        24476500
HASPCMS1 $COMGRUP DO,DU            DISPLAY COMMANDS                     24477000
*********************************************************************** 24477500
*                                                                     * 24478000
*        $D O -- DISPLAY OPERATOR REQUESTS                            * 24478500
*                                                                     * 24479000
*********************************************************************** 24479500
CDO      DS    0H                                                       24480000
* COMNULOP HIGH BYTE = 0 ON ENTRY                                       24480500
         USING CMBDSECT,R1                                              24481000
         SR    WB,WB               CURRENT ID IS ZERO                   24481500
CDRLOOP  DS    0H                                                       24482000
         LA    R1,$DOMQUE-(CMBCMB-CMB) POINT TO QUEUE HEAD           R4 24482500
CDRLOOPA ICM   R1,7,CMBCMB+1       POINT TO NEXT CMB                 R4 24483000
         BZ    CDREND              IF NONE EXIT                         24483500
         CLM   WB,15,CMBDOMID      CHECK FOR DOMID                   R4 24484000
         BNL   CDRLOOPA            LOOP                                 24484500
         ICM   WB,15,CMBDOMID      PICK UP NEW ID                    R4 24485000
         SR    WD,WD               ZERO COUNT REGISTER                  24485500
         IC    WD,CMBML            PICK UP LENGTH                    R4 24486000
         MVC   COMMAND(L'CMBJOBID+1),CMBJOBID MOVE JOBID PORTION        24486500
         LA    WA,CMBJOBN-CMBMSG+1 GET LENGTH OF SPECIAL TEXT           24487000
         SLR   WD,WA               GET MACHINE MOVE COUNT               24487500
         EX    WD,CDRMVC           MOVE                                 24488000
         MVI   COMNULOP,X'80'      TURN ON FOUND FLAG                   24488500
         NI    COMMID+1,X'FE'      INDICATE JOB ID SET (IF ANY)         24489000
         LA    R0,L'CMBJOBID+2(,WD)  GET TRUE LENGTH                    24489500
         $CWTO L=(R0)              DISPLAY MESSAGE                      24490000
         B     CDRLOOP             LOOP                                 24490500
CDREND   DS    0H                                                       24491000
         CLI   COMNULOP,0          DID WE DISPLAY ANYTHING              24491500
         BE    CDRNREQ             IF NOT DISPLAY EMPTY                 24492000
         $CRET ,                   EXIT                                 24492500
CDRNREQ  $CRET MSG='NO OPERATOR REQUESTS' SEND MSG                      24493000
CDRMVC   MVC   COMMAND+L'CMBJOBID+1(*-*),CMBJOBN MOVE NORMAL TEXT       24493500
         DROP  R1                                                       24494000
         EJECT                                                          24494500
*********************************************************************** 24495000
*                                                                     * 24495100
*                         ----DISPLAY UNITS-----                      * 24495200
*                                                                     * 24495300
*                                                                     * 24495400
*        $DU   ( ,RDRS )   ( ,RMTN (-N)  )    ( ,ACTIVE  )            * 24495500
*              ( ,PRTS )   ( ,DEVICENAME )    ( ,STARTED )            * 24495600
*              ( ,PUNS )                      ( ,SHORT   )            * 24495700
*              ( ,LGNS )                                              * 24495800
*              ( ,LNES )   NOTE: ANY COMBINATION OF OPERANDS          * 24495900
*              ( ,RDI  )         MAY BE USED.                         * 24496000
*              ( ,RMTS )                                              * 24496100
*              ( ,ALL  )                                              * 24496200
*              ( ,TP   )                                              * 24496300
*                                                                     * 24496400
*      **DISPLAY OPERANDS                             CONNECTED RMT   * 24496500
*                                                       BREAKDOWN     * 24496600
*        RDRS---ALL LOCAL READERS ------------------------ N/A        * 24496700
*        PRTS---ALL LOCAL PRINTERS ----------------------- N/A        * 24496800
*        PUNS---ALL LOCAL PUNCHES ------------------------ N/A        * 24496900
*        LGNS---ALL VTAM INTERFACES ---------------------- NO         * 24497000
*        LNES---ALL TP LINES ----------------------------- YES        * 24497100
*        RDI----ALL INTERNAL READERS --------------------- N/A        * 24497200
*        RMTS---ALL REMOTES ------------------------------ YES        * 24497300
*        ALL----ALL LOCAL DEVICES AND INTERNAL READERS --- YES        * 24497400
*        TP-----ALL TP LNES AND VTAM INTERFACES ---------- NO         * 24497500
*                                                                     * 24497600
*      **MODIFIER OPERANDS                                            * 24497700
*                                                                     * 24497800
*        ACTIVE---DISPLAY ONLY CONNECTED TP LINES OR ACTIVE DEVICES   * 24497900
*        STARTED--DISPLAY ONLY DEVICES WHICH ARE STARTED '$S'         * 24498000
*        SHORT----ALL DISPLAYS IN NON-EXTENDED FORM                   * 24498100
*                                                                     * 24498200
*      **NO DISPLAY OPERANDS --- DISPLAY OF ALL LOCAL DEVICES         * 24498300
*                                IN SHORT FORM. ACTIVE OR STARTED     * 24498400
*                                CAN BE USED WITHOUT OTHER OPERANDS   * 24498500
*                                                                     * 24498600
*********************************************************************** 24498700
CDU      DS    0H                  $DU COMMAND ENTRY POINT           R4 24505500
         SPACE 1                                                     R4 24506000
*********************************************************************** 24506500
*        PRE-PROCESS ALL OPERANDS                                     * 24507000
*********************************************************************** 24507500
         LA    WE,0                SET OFFSET INDEX ZERO             R4 24508000
         LA    WB,CDUTABLE         PICK UP TABLE ADDRESS             R4 24508500
         CR    WD,WF               CHECK FOR PLAIN $DU               R4 24509000
         BE    CDUFND              YES, TREAT AS MATCH TABLE-ENTRY-0 R4 24509500
         ST    WE,0(,WD)           IGNORE FIRST OPERAND              R4 24510000
         LA    WD,4(,WD)            AND SKIP IT                      R4 24510500
CDUFIND  LA    WE,0                SET OFFSET INDEX ZERO             R4 24511000
         LA    WB,CDUTABLE         PICK UP TABLE ADDRESS             R4 24511500
         L     R1,0(,WD)           PICK UP OPERAND POINTER           R4 24512000
*********************************************************************** 24512500
*        SEARCH TABLE FOR NON-SPECIFIC OPERAND                        * 24513000
*********************************************************************** 24513500
CDUSRCH  LA    WB,CDUTBSZ(,WB)     FIND NEXT TABLE ENTRY             R4 24514000
         LA    WE,1(,WE)           INCREMENT OFFSET INDEX            R4 24514500
         L     WA,CDUTBSET(,WB)    PICK UP SETUP INSTRUCTION         R4 24515000
         LTR   WA,WA               TEST FOR TABLE END                R4 24515500
         BZ    CDUNOFND            YES, BR- TRY SPECIFIC DCT         R4 24516000
         IC    WC,CDUTBLEN(,WB)    PICK UP COMPARE LENGTH            R4 24516500
         EX    WC,CDUCLC           COMPARE OPERAND                   R4 24517000
         BNE   CDUSRCH             NOT EQUAL, BR - TRY NEXT ENTRY    R4 24517500
CDUFND   EX    0,CDUTBSET(,WB)     EXECUTE THE SETUP INSTRUCTION     R4 24518000
CDUGO    LTR   R1,R1               TEST FOR DCT ADDRESS              R4 24518500
         ST    R1,0(,WD)           STORE DCT ADDRESS OR ZERO         R4 24519000
         BZ    CDUERR              ZERO, COMPLETE OPERAND LOOP       R4 24519500
CDUINDEX STC   WE,0(,WD)           STORE TABLE OFFSET                R4 24520000
         B     CDUMDTST            SKIP ERROR FLAGGING              R41 24520500
CDUERR   OI    CDUFLAG2,CDUFLERR   INDICATE SOME OPERANDS IN ERROR   R4 24521000
CDUMDTST TM    CDUTBFL1(WB),CDUFLMOD  TEST OPERAND TYPE             R41 24521100
         BO    CDUNOTOP            BRANCH IF MODIFIER               R41 24521200
         OI    CDUFLAG2,CDUFLOPR   SHOW ACTION OPERAND FOUND        R41 24521300
CDUNOTOP LA    WD,4(,WD)           BUMP TO NEXT OPERAND             R41 24521500
         CLR   WD,WF               TEST FOR LAST OPERAND             R4 24522000
         BNH   CDUFIND             NO, PRE-PROCESS NEXT OPERAND      R4 24522500
         SPACE 1                                                     R4 24523000
*********************************************************************** 24523500
*        DO DISPLAYS FOR ALL PRE-PROCESSED OPERANDS                   * 24524000
*********************************************************************** 24524500
         SLR   R1,R1               CLEAR OPERAND VALUE              R41 24524600
         LA    WD,COMPNTER         RESTORE ADDRESS OF FIRST OPERAND  R4 24525000
         TM    CDUFLAG2,CDUFLOPR   TEST FOR MODIFIER ONLY CASES     R41 24525100
         BO    CDUNEXT             BR IF ANY NON-MODIFIER OPERANDS  R41 24525200
         EX    0,CDUTABLE+CDUTBSET USE TABLE-ENTRY-0 SETUP INSTRCTN R41 24525300
         ST    R1,0(,WD)            TO SIMULATE NULL OPERAND CASE   R41 24525400
CDUNEXT  L     R1,0(,WD)           PICK UP OPERAND                   R4 24525500
         LTR   R1,R1               TEST FOR DUMMY OPERAND            R4C24526000
                                      (PRE-PROCESSED ERRORS)         R4 24526500
         BZ    CDULOOP             IGNORE - DO NEXT OPERAND          R4 24527000
         LA    R1,0(,R1)           PURIFY IT                         R4 24527500
         SLR   WB,WB               CLEAR OFFSET REGISTER             R4 24528000
         IC    WB,0(,WD)           PICK UP TABLE INDEX               R4 24528500
         MH    WB,=AL2(CDUTBSZ)    COMPUTE TRUE OFFSET               R4 24529000
         LA    WB,CDUTABLE(WB)     PICK UP TABLE ENTRY ADDRESS       R4 24529500
         MVC   CDUFLAG1(2),CDUTBFL1(WB) COPY FLAGS AND DEVICE TYPE  R41 24530000
         MVC   CDUMASK(1),CDUTBMSK(WB)      TO PROCESSOR WORK AREA  R41 24530500
         L     WA,CDUTBRTN(,WB)    PICK UP DISPLAY ROUTINE ADDRESS   R4 24531000
         BR    WA                  EXECUTE DISPLAY ROUTINE           R4 24531500
         SPACE 1                                                     R4 24532000
CDUCLC   CLC   CDUTBKEY(*-*,WB),0(R1) **** EXECUTED ****             R4 24532500
         SPACE 1                                                     R4 24533000
         EJECT                                                       R4 24533500
*********************************************************************** 24534000
*        OPERAND = SPECIFIC DCT NAME                                  * 24534500
*********************************************************************** 24535000
CDUNOFND $CFDCTL POINTER=(WD)      TRY TO LOCATE THE DEVICE BY NAME  R4 24535500
         LTR   R1,R1               TEST RETURNED DCT ADDRESS         R4 24536000
         BP    CDUGO               VALID, BR - STORE DCT ADDRESS     R4 24536500
         SLR   R1,R1               FORCE ZERO                        R4 24537000
         B     CDUGO               COMPLETE DUMMY OPERAND            R4 24537500
         SPACE 1                                                     R4 24538000
*********************************************************************** 24538500
*        OPERAND IS 'RMTS'                                            * 24539000
*********************************************************************** 24539500
CDURMALL LA    R1,1                SET FIRST RMT TO DISPLAY TO 1     R4 24540000
         LH    R0,$NUMRJE          SET LAST RMT TO DISPLAY TO MAX    R4 24540500
         LTR   R0,R0               CHECK FOR REMOTES                R41 24540600
         BZ    CDURERR             BR IF NONE                       R41 24540700
         B     CDURMT              GO COMPLETE PRE-PROCESSING RMT    R4 24541000
         SPACE 1                                                     R4 24541500
*********************************************************************** 24542000
*        OPERAND IS RMTNNN(-NNN)                                      * 24542500
*********************************************************************** 24543000
CDURMTS  $CFCVB POINTER=(WD),NOK=CDURERR CONVERT OPERAND             R4 24543500
         LA    WA,0                CLEAR THE                         R4 24544000
         ST    WA,0(,WD)             THE OPERAND                     R4 24544500
         LTR   R1,R1               TEST LOW REMOTE NUMBER VALIDITY   R4 24545000
         BNP   CDURERR             BR IF INVALID                    R41 24545500
         CH    R0,$NUMRJE          TEST HIGH REMOTE NUMBER VALIDITY  R4 24546000
         BH    CDURERR             BR IF INVALID                    R41 24546500
CDURMT   BCTR  R0,0                DECREMENT LOW AND                 R4 24547000
         BCTR  R1,0                 HIGH REMOTE NUMBERS              R4 24547500
         STC   R0,2(WD)            STORE REMOTE                      R4 24548000
         STC   R1,1(WD)             RANGE IN OPERAND                 R4 24548500
         B     CDUINDEX            GO FINISH OPERAND LOOP            R4 24549000
         SPACE 1                                                     R4 24549500
CDURERR  SLR   R1,R1               INDICATE NO DEVICE LOCATED        R4 24550000
         B     CDUGO               FLAG ERROR - DO NEXT OPERAND      R4 24550500
         EJECT                                                       R4 24551000
*********************************************************************** 24551500
*        DISPLAY ONE OR MORE REMOTES (VIA RAT)                        * 24552000
*********************************************************************** 24552500
CDUREMOT SLR   WC,WC               CLEAR FIRST AND                   R4 24553000
         SLR   WE,WE                LAST REMOTE INDICES              R4 24553500
         IC    WC,1(,WD)           PICK UP FIRST REMOTE DISPLAY      R4 24554000
         IC    WE,2(,WD)           PICK UP LAST REMOTE TO DISPLAY    R4 24554500
         MH    WC,=AL2(RATTLE)     COMPUTE RAT                       R4 24555000
         MH    WE,=AL2(RATTLE)      OFFSETS                          R4 24555500
         L     R1,$RATABLE         COMPUTE                           R4 24556000
         LA    WC,0(WC,R1)          HIGH AND LOW                     R4 24556500
         LA    WE,0(WE,R1)           RAT ADDRESS                     R4 24557000
         LR    R1,WC               COPY FIRST RAT ADDRESS            R4 24557500
         B     CDURMGRP            GO DISPLAY RMT GROUP              R4 24558000
         SPACE 1                                                     R4 24558500
*********************************************************************** 24559000
*        GENERAL DCT DISPLAY ROUTINE                                  * 24559500
*********************************************************************** 24560000
CDUSPLAY LA    R1,0(,R1)           PURIFY DCT ADDRESS               R41 24560100
         TM    CDUFLAG2,CDUFLACT   TEST FOR ACTION MODIFIER         R41 24560200
         BNO   CDUSTEST            BRANCH IF NOT SPECIFIED          R41 24560300
         CLI   DCTDEVTP-DCTDSECT(R1),DCTLNE  TEST DEVICE TYPE       R41 24560400
         BNE   CDUZINUS            IF NOT LNE, GO TEST IN USE       R41 24560500
         OC    MDCTRAT-DCTDSECT(4,R1),MDCTRAT-DCTDSECT(R1)  TEST    R41C24560600
                                   LINE CONNECTION                  R41 24560700
         BZ    CDURSUB             IF NOT CONNECTED, SKIP DISPLAY   R41 24560800
         B     CDUSHTST             ELSE GO DO DISPLAY              R41 24560900
CDUSTEST TM    CDUFLAG2,CDUFLSTR   TEST FOR STARTED MODIFIER        R41 24561000
         BNO   CDUSHTST            BRANCH IF NOT - DO DISPLAY       R41 24561100
         TM    DCTSTAT-DCTDSECT(R1),DCTDRAIN  TEST DEVICE STATUS    R41 24561200
         BNO   CDUSHTST            NOT DRAINED - GO DO DISPLAY      R41 24561300
CDUZINUS TM    DCTSTAT-DCTDSECT(R1),DCTINUSE  TEST DEVICE STATUS    R41 24561400
         BNO   CDURSUB             BRANCH IF NOT IN USE, SKIP DSPLY R41 24561500
CDUSHTST TM    CDUFLAG2,CDUFLSHT   TEST FOR SHORT MODIFIER          R41 24561600
         BO    CDUDSPL             FORCE NON-EXTENDED DSPLY IF ON   R41 24561700
         TM    CDUFLAG1,CDUFLNEX   TEST FOR EXTENED REQUEST         R41 24561800
         BO    CDUDSPL             IF NO EXTENED REQD, GO DSPLY     R41 24561900
         ICM   R1,8,=X'0F'         SET HI ORDER FOR EXTENDED DISP   R41 24562000
CDUDSPL  TM    CDUFLAG1,CDUFLCLS   TEST FOR CLASS CHECK REQUESTED   R41 24562100
         BNO   CDUDCTD             NO CHECK, BR - GO DSPLY          R41 24562200
         IC    WA,CDUDEVTP         PICK UP DEVICE CLASS             R41 24562300
         EX    WA,CDUTM            TEST DEVICE CLASS                R41 24562400
         IC    WA,CDUMASK          PICK UP BRANCH MASK              R41 24562500
         EX    WA,CDUBRNCH         EXECUTE BRANCH INSTRUCTION       R41 24562600
CDUDCTD  $CFDCTD EXT=SET           DISPLAY THE DCT                  R41 24562700
         OI    CDUFLAG2,CDUFLFND   SHOW SOMETHING DISPLAYED         R41 24562800
         EJECT                                                      R41 24563000
*********************************************************************** 24564000
*        SNA LUNAME SUB-DISPLAY ROUTINE                               * 24564500
*********************************************************************** 24565000
         TM    CDUFLAG1,CDUFLLU    TEST FOR LUNAME SUB-DISPLAY REQD  R4 24565500
         BNO   CDURSUB             NO, BR - CONTINUE CURRENT DISPLAY R4 24566000
         CLI   DCTDEVTP-DCTDSECT,DCTLOG TEST FOR LOGON DCT           R4 24566500
         BE    CDULOGLU            YES, SKIP OTHER TESTS - DSPLY LUS R4 24567000
         TM    DCTDEVTP-DCTDSECT(R1),DCTRJE TEST FOR RJE DCT         R4 24567500
         BNO   CDURSUB             NO, BR - CONTINUE CURRENT DISPLAY R4 24568000
         TM    MDCTTYPE-DCTDSECT(R1),DCTPSNA TEST FOR SNA DEVICES    R4 24568500
         BNO   CDURSUB             NO, BR- CONTINUE CURRENT DISPLAY  R4 24569000
CDULOGLU L     WB,MDCTICE-DCTDSECT(,R1) GET ASSOC. ICE ADDR FROM DCT R4 24569500
         LTR   WB,WB               TEST FOR ANY SESSION PRESENT      R4 24570000
         BZ    CDURSUB             NO, BR- CONTINUE CURRENT DISPLAY  R4 24570500
         MVI   COMMAND,C' '        CLEAR THE                         R4 24571000
         MVC   COMMAND+1(L'COMMAND-1),COMMAND MESSAGE AREA           R4 24571500
         MVC   COMMAND+23(14),=CL14'SESSION(S) -' MOVE IN HEADING    R4 24572000
CDULUOOP LA    WA,COMMAND+23+14    INDENT LUNAME DISPLAY             R4 24572500
         MVC   0(L'ICESYMB,WA),ICESYMB-ICEDSECT(WB) MOVE IN LUNAME   R4 24573000
         LA    WA,L'ICESYMB+1(,WA) BUMP PAST SNA LUNAME              R4 24573500
         TM    DCTDEVTP-DCTDSECT(R1),DCTPRPU TEST FOR REMOTE DEVICES R4 24574000
         BNO   CDULUALC            NO, BR--GO TEST FOR ALLOCATION    R4 24574500
         TM    MDCTSTAT-DCTDSECT(R1),DCTPSUSP CHK FOR SUSPNDED SESN  R4 24575000
         BNO   CDULUALC            NO, BR--TRY OTHER STATES          R4 24575500
         MVC   0(9,WA),=CL9'SUSPENDED' SHOW SESSION SUSPENDED        R4 24576000
         B     CDULUDSP            GO DISPLAY SUSPENDED SESSION      R4 24576500
CDULUALC MVC   0(9,WA),=CL9'INACTIVE' ASSUME SESSION INACTIVE        R4 24577000
         TM    ICESTAT-ICEDSECT(WB),ICEALLOC TEST ASSUMPTION         R4 24577500
         BZ    CDULUCLO            INACTIVE, BR--GO TEST FOR CLOSING R4 24578000
         CLI   DCTDEVTP-DCTDSECT(R1),DCTLNE TEST FOR LINE SUB DSPLY  R4 24578500
         BE    CDULUNX             YES, BR--SKIP ACTIVE SESSIONS     R4 24579000
         MVC   0(9,WA),=CL9'ACTIVE' SHOW SESSION ACTIVE              R4 24579500
         TM    ICESTAT-ICEDSECT(WB),ICEDRAIN TEST FOR DRAINING       R4 24580000
         BZ    CDULULOG            NO, SKIP                          R4 24580500
         MVC   0(9,WA),=CL9'DRAINING' SHOW SESSION DRAINING          R4 24581000
         B     CDULULOG            GO TEST FOR TAGGING AND DISPLAY   R4 24581500
CDULUCLO TM    ICESTAT-ICEDSECT(WB),ICECLOSE TEST FOR CLOSING        R4 24582000
         BNO   CDULULOG            NO, BR--GO TEST TAGGING AND DSPLY R4 24582500
         MVC   0(9,WA),=CL9'CLOSING' SHOW SESSION CLOSING            R4 24583000
CDULULOG LA    WA,10(,WA)          MOVE PAST STATUS INDICATION       R4 24583500
         CLI   DCTDEVTP-DCTDSECT(R1),DCTLOG TEST FOR LOGON DCT DSPLY R4 24584000
         BNE   CDULUDSP            NO, BR--NO TAGGING REQD           R4 24584500
         LR    R0,R1               SAVE LOGON DCT ADDRESS            R4 24585000
         L     R1,ICELDCT-ICEDSECT(,WB) PICK UP ASSOC LINE DCT ADDR  R4 24585500
         LTR   R1,R1               TEST FOR LINE DCT PRESENT         R4 24586000
         BZ    CDULUTGD            NO, BR--NO TAGGING REQD           R4 24586500
         MVI   0(WA),C'('          INSERT OPEN PAREN INTO MSG        R4 24587000
         MVC   1(L'DCTDEVN,WA),DCTDEVN-DCTDSECT(R1) PUT LINE ID INTO R4C24587500
                                                        MESSAGE      R4 24588000
         MVI   9(WA),C')'          CLOSE THE PAREN                   R4 24588500
CDULUTGD LR    R1,R0               RELOAD THE LOGON DCT ADDRESS      R4 24589000
CDULUDSP STM   R1,WA,COMDWORK      SAVE REGISTERS ACROSS WTO         R4 24589500
         $CWTO L=66                DISPLAY LUNAME MESSAGE            R4 24590000
         LM    R1,WA,COMDWORK      RELOAD REGISTERS                  R4 24590500
         MVC   COMMAND+23(L'COMMAND-22),COMMAND+22 BLANK USED AREA   R4 24591000
CDULUNXT TM    DCTDEVTP-DCTDSECT(R1),DCTDEV  TEST FOR RJE DEVICES   R41 24591500
         BNZ   CDURSUB             YES, BR--NO CHAINING NEEDED      R41 24592000
CDULUNX  LA    WB,ICEAPCHN-ICEDSECT(,WB) ASSUME LOGON DCT CHAIN USED R4 24592500
         CLI   DCTDEVTP-DCTDSECT(R1),DCTLOG TEST ASSUMPTION          R4 24593000
         BE    CDULUCHN            NO, BR--CHAIN TO NEXT ICE         R4 24593500
         LA    WB,(ICEALCHN-ICEAPCHN)(,WB) BUMP TO LNE DCT CHN FLD   R4 24594000
CDULUCHN L     WB,0(,WB)           PICK UP NEXT ICE ADDRESS          R4 24594500
         LA    WB,0(,WB)           PURIFY ADDRESS                    R4 24595000
         LTR   WB,WB               TEST FOR END OF CHAIN             R4 24595500
         BNZ   CDULUOOP            NO, BR--CONTINUE ICE SUB DSPLY    R4 24596000
         SPACE 1                                                     R4 24596500
*********************************************************************** 24597500
*        REMOTE SUB-DISPLAY CODE                                      * 24598000
*********************************************************************** 24598500
CDURSUB  TM    CDUFLAG1,CDUFLRMT   TEST FOR REMOTE-SUB DISPLAY REQD  R4 24599000
         BNO   CDUGRPLP            NO, BR CONTINUE MAIN LOOP         R4 24599500
         TM    CDUFLAG2,CDUFLSUB   ARE WE IN RMT SUB-DISPLAY LOOP    R4 24600000
         BNZ   CDUSUB              YES, CONTINUE SUB-DISPLAY         R4 24600500
         CLI   DCTDEVTP-DCTDSECT(R1),DCTLNE TEST FOR LINE DCT        R4 24601000
         BNE   CDUGRPLP            NO, CONTINUE MAIN LOOP            R4 24601500
         OI    CDUFLAG2,CDUFLSUB   SET SUB-DISPLAY IN PROGRESS       R4 24602000
         LR    WC,R1               SAVE LINE DCT POINTER             R4 24602500
CDUSUB   L     R1,MDCTDCT-DCTDSECT(,R1) PICK UP NEXT RMT DCT         R4 24603000
         LTR   R1,R1               TEST FOR REMOTE DCT PRESENT       R4 24603500
         BNZ   CDUSPLAY            YES, BR - GO DISPLAY REMOTE DCT   R4 24604000
         NI    CDUFLAG2,255-CDUFLSUB SHOW OUT OF REMOTE LOOP         R4 24604500
         LR    R1,WC               RESTORE LINE DCT/RAT POINTER      R4 24605000
         SPACE 1                                                     R4 24605500
*********************************************************************** 24606000
*        GROUP DCT DISPLAY TERMINATION CODE                           * 24606500
*********************************************************************** 24607000
CDUGRPLP TM    CDUFLAG1,CDUFLGRP   IS THIS A GROUP DISPLAY           R4 24607500
         BZ    CDULOOP             NO, BR - THEN GO DO NEXT OPERAND  R4 24608000
         TM    CDUFLAG1,CDUFLRAT   TEST FOR RAT BASED GROUP          R4 24608500
         BNO   CDUGROUP            NO, BR- PROCESS NORMAL DCT CHAIN  R4 24609000
CDUGRPL1 LA    WC,RATTLE(,R1)      LOCATE AND SAVE NEXT RAT ENTRY   R41 24609500
         CLR   WC,WE               TEST FOR END OF RAT (RMT) GROUP   R4 24610000
         BH    CDULOOP             YES, BR- GO DO NEXT OPERAND       R4 24610500
CDURMGRP OI    CDUFLAG2,CDUFLSUB   SHOW BACK IN REMOTE SUB-DISPLAY   R4 24611000
         TM    CDUFLAG2,CDUFLACT   TEST FOR ACTION MODIFIER         R41 24611100
         BNO   CDURMGP1            BRANCH IF NOT SPECIFIED          R41 24611200
         L     R1,RATLDCT-RATDSECT(,WC) GET LINE DCT ADDRESS        R41 24611300
         LA    R1,0(,R1)           PURIFY ADDRESS                   R41 24611400
         LTR   R1,R1               TEST FOR LINE DCT PRESENT        R41 24611500
         LR    R1,WC               RESET R1 TO RAT ADDR FOR BRANCH  R41 24611600
         BZ    CDUGRPL1            BRANCH IF NO LINE DCT            R41 24611700
CDURMGP1 LNR   R1,WC               LOAD -RAT FOR RAT DISPLAY        R41 24611800
         $CFDCTD EXT=SET           DISPLAY RAT INFO                 R41 24611900
         L     R1,RATLDCT-RATDSECT(,WC)  GET LINE DCT ADDRESS        R4 24612000
         LA    R1,0(,R1)           PURIFY ADDRESS                    R4 24612100
         LTR   R1,R1               TEST FOR LINE DCT PRESENT         R4 24612500
         BZ    SKIP290             NO, BR-- GO DISPLAY REMOTE        R4 24613000
         CL    WC,MDCTRAT-DCTDSECT(,R1) TEST FOR RMT SIGNED ON LINE  R4 24613500
         BE    CDUSPLAY            YES, BR--GO DISPLAY RMT AND LINE  R4 24614000
SKIP290  L     R1,RATRDCT-RATDSECT(,WC) GET FIRST REMOTE DCT ADDRESS R4 24614500
         B     CDUSPLAY            DISPLAY ONLY REMOTE               R4 24615000
CDUGROUP L     R1,DCTCHAIN-DCTDSECT(,R1) GO FIND NEXT DCT            R4 24615500
         LA    R1,0(,R1)           PURIFY ADDRESS                    R4 24616000
         LTR   R1,R1               TEST FOR END OF THE DCT CHAIN     R4 24616500
         BZ    CDULOOP             YES, BR- DO NEXT OPERAND          R4 24617000
         EJECT                                                      R41 24619600
         SPACE 1                                                     R4 24620000
*********************************************************************** 24620500
*        DCT TYPE-GROUP DISPLAY TERMINATION                           * 24621000
*********************************************************************** 24621500
CDUNOCLS TM    CDUFLAG1,CDUFLTYP   IS THIS A TYPE-GROUP DISPLAY      R4 24622000
         BNO   CDUSPLAY            NO, BR- NO CHECK - GO DISPLAY DCT R4 24622500
         IC    R0,CDUDEVTP         PICK UP DCT TYPE FOR COMPARE      R4 24623000
         CLM   R0,1,DCTDEVTP-DCTDSECT(R1)  COMPARE FOR TERMINATION   R4 24623500
         BE    CDUSPLAY            EQUAL - CONTINUE DISPLAY LOOP     R4 24624000
         SPACE 1                                                     R4 24624500
*********************************************************************** 24625000
*        MAIN DISPLAY LOOP                                            * 24625500
*********************************************************************** 24626000
CDULOOP  LA    WD,4(,WD)           MOVE TO NEXT OPERAND POINTER      R4 24626500
         CR    WD,WF               TEST FOR END OF OPERANDS          R4 24627000
         BNH   CDUNEXT             NO, CONTINUE WITH NEW OPERAND     R4 24627500
         SPACE 1                                                     R4 24628000
*********************************************************************** 24628500
*        DISPLAY UNIT EXIT                                            * 24629000
*********************************************************************** 24629500
CDUEXIT  DS    0H                                                    R4 24630000
         TM    CDUFLAG2,CDUFLERR   WERE ANY ERRORS ENCOUNTERED       R4 24630500
         BZ    CDUEXITC            NO, BR - JUST EXIT                R4 24631000
         $CRET MSG='INVALID OPERAND(S) DETECTED'                     R4 24631500
CDUEXITC TM    CDUFLAG2,CDUFLFND   TEST DISPLAY STATUS              R41 24632000
         BO    CDUEXITN            BRANCH IF DISPLAY DONE           R41 24632100
         $CRET MSG='NO DEVICE(S) FOUND'  SHOW NO DEVICES DISPLAYED  R41 24632200
CDUEXITN $CRET ,                   NORMAL RETURN                    R41 24632300
         SPACE 1                                                     R4 24632500
CDUTM    TM    DCTDEVTP-DCTDSECT(R1),*-* *** EXECUTED ***            R4 24633000
CDUBRNCH NOP   CDURSUB             *** EXECUTED ***                 R41 24633100
         EJECT                                                       R4 24633500
*********************************************************************** 24634000
*        DISPLAY UNIT FLAG DEFINITONS                                 * 24634500
*********************************************************************** 24635000
CDUFLAG1 EQU   COMNULOP            CDUFLAG1 DEFINITION               R4 24635500
         SPACE 1                                                     R4 24636000
CDUFLONE EQU   B'00000000'             SINGLE DCT DISPLAY REQUEST    R4 24636500
CDUFLGRP EQU   B'10000000'             GROUP DISPLAY REQUEST         R4 24637000
CDUFLTYP EQU   B'11000000'             TYPE-GROUP DISPLAY REQUEST    R4 24637500
CDUFLRMT EQU   B'00100000'             REMOTE SUB-DISPLAY REQUEST    R4 24638000
CDUFLRAT EQU   B'00010000'             RAT BASED DISPLAY REQUEST     R4 24638500
CDUFLNEX EQU   B'00001000'             NO EXTEND DISPLAY REQUIRED    R4 24639000
CDUFLCLS EQU   B'00000100'             DCT CLASS SKIP REQUESTED      R4 24639500
CDUFLLU  EQU   B'00000010'             SNA LUNAME SUBDISPLAY REQD    R4 24640500
CDUFLMOD EQU   B'00000001'             MODIFIER OPERAND ONLY        R41 24640600
         SPACE 2                                                     R4 24641500
CDUDEVTP EQU   COMNULOP+1          TYPE-GROUP DCT TYPE               R4 24642000
         SPACE 1                                                    R41 24642100
CDUMASK  EQU   COMNULOP+2          BRANCH MASK VALUE                R41 24642200
         SPACE 2                                                     R4 24642500
CDUFLAG2 EQU   COMNULOP+3          CDUFLAG2 DEFINITION              R41 24643000
         SPACE 1                                                     R4 24643500
CDUFLSUB EQU   B'10000000'             RMT SUB-DSPLY IN PROGRESS     R4 24644000
CDUFLERR EQU   B'01000000'             INVALID OPERANDS DETECTED     R4 24644500
CDUFLFND EQU   B'00100000'             DEVICE FOUND IN DISPLAY      R41 24644600
CDUFLOPR EQU   B'00010000'             NON-MODIFIER OPERANDS FND    R41 24644700
CDUFLACT EQU   B'00001000'             ACTIVE ONLY MODIFIER         R41 24644800
CDUFLSTR EQU   B'00000100'             STARTED ONLY MODIFIER        R41 24644900
CDUFLSHT EQU   B'00000010'             SHORT MODIFIER               R41 24645000
         SPACE 1                                                    R41 24645100
*********************************************************************** 24645500
*        DISPLAY UNIT OPERAND TABLE DEFINITON                         * 24646000
*********************************************************************** 24646500
CDUTBFL1 EQU   0                   DISPLAY REQUEST FLAGS             R4 24647000
CDUTBTYP EQU   1                   DEVICE TYPE VALUE                 R4 24647500
CDUTBLEN EQU   2                   COMPARE LENGTH FOR OPERAND CHECK  R4 24648000
CDUTBMSK EQU   3                   BRANCH MASK FOR CLASS CHECK      R41 24648500
CDUTBKEY EQU   4                   OPERAND KEYWORD VALUE             R4 24649000
CDUTBRTN EQU   8                   ADDRESS OF DISPLAY ROUTINE        R4 24649500
CDUTBSET EQU   12                  PRE-PROCESSOR SETUP INSTRUCTION   R4 24650000
CDUTBSZ  EQU   16                  OPERAND TABLE ELEMENT SIZE        R4 24650500
         EJECT                                                       R4 24651000
*********************************************************************** 24651500
*        DISPLAY UNIT OPERAND TABLE                                   * 24652000
*********************************************************************** 24652500
         SPACE 1                                                     R4 24653000
CDUTABLE DS    0F                                                    R4 24653500
         SPACE 1                                                     R4 24654000
         DC    AL1(CDUFLNEX+CDUFLGRP+CDUFLCLS),AL1(DCTINR),AL1(0)    R4 24654500
         DC    AL1(O*16)                                            R41 24655000
         DC    CL4'NULL'           PLAIN $DU - DISPLAY ALL LOCAL     R4 24655500
         DC    A(CDUSPLAY)         DEVICES (NON-EXTENDED FORM)       R4 24656000
         L     R1,$DCTPOOL                                           R4 24656500
         SPACE 1                                                     R4 24657000
         DC    AL1(CDUFLTYP),AL1(DCTRDR),AL1(3),AL1(0)               R4 24657500
         DC    CL4'RDRS'           DISPLAY ALL LOCAL READERS         R4 24658000
         DC    A(CDUSPLAY)                                           R4 24658500
         L     R1,$RDRDCT                                            R4 24659000
         SPACE 1                                                     R4 24659500
         DC    AL1(CDUFLTYP),AL1(DCTPRT),AL1(3),AL1(0)               R4 24660000
         DC    CL4'PRTS'           DISPLAY ALL LOCAL PRINTERS        R4 24660500
         DC    A(CDUSPLAY)                                           R4 24661000
         L     R1,$PRTDCT                                            R4 24661500
         SPACE 1                                                     R4 24662000
         DC    AL1(CDUFLTYP),AL1(DCTPUN),AL1(3),AL1(0)               R4 24662500
         DC    CL4'PUNS'           DISPLAY ALL LOCAL PUNCHES         R4 24663000
         DC    A(CDUSPLAY)                                           R4 24663500
         L     R1,$PUNDCT                                            R4 24664000
         SPACE 1                                                     R4 24665000
         DC    AL1(CDUFLTYP),AL1(DCTLOG),AL1(3),AL1(0)               R4 24665500
         DC    CL4'LGNS'           DISPLAY ALL LOGON DCTS            R4 24666000
         DC    A(CDUSPLAY)                                           R4 24666500
         L     R1,$LOGNDCT                                           R4 24667000
         SPACE 1                                                     R4 24668000
         DC    AL1(CDUFLTYP+CDUFLRMT),AL1(DCTLNE),AL1(3),AL1(0)      R4 24668500
         DC    CL4'LNES'           DISPLAY ALL LINES                 R4 24669000
         DC    A(CDUSPLAY)                                           R4 24669500
         L     R1,$LNEDCT                                            R4 24670000
         SPACE 1                                                     R4 24670500
         DC    AL1(CDUFLONE+CDUFLRMT+CDUFLLU),AL1(0),AL1(3),AL1(0)   R4 24671500
         DC    CL4'LINE'           DISPLAY A LINE                    R4 24673500
         DC    A(CDUSPLAY)                                           R4 24674000
         B     CDUNOFND                                              R4 24674500
         SPACE 1                                                     R4 24675000
         DC    AL1(CDUFLONE+CDUFLRMT+CDUFLLU),AL1(0),AL1(2),AL1(0)   R4 24676000
         DC    CL4'LNE*'           DISPLAY A LINE                    R4 24678000
         DC    A(CDUSPLAY)                                           R4 24678500
         B     CDUNOFND                                              R4 24679000
         SPACE 1                                                     R4 24679500
         DC    AL1(CDUFLGRP),AL1(0),AL1(2),AL1(0)                    R4 24680000
         DC    CL4'RDI*'           DISPLAY ALL INTERNAL READERS      R4 24680500
         DC    A(CDUSPLAY)                                           R4 24681000
         L     R1,$INRDCT                                            R4 24681500
         SPACE 1                                                     R4 24682000
         DC    AL1(CDUFLGRP),AL1(0),AL1(2),AL1(0)                    R4 24682500
         DC    CL4'ALL*'           DISPLAY ALL LOCAL DEVICES         R4 24683000
         DC    A(CDUSPLAY)                                           R4 24683500
         L     R1,$DCTPOOL                                           R4 24684000
         SPACE 1                                                     R4 24684500
         DC    AL1(CDUFLGRP+CDUFLRAT+CDUFLRMT),AL1(0),AL1(3),AL1(0)  R4 24685000
         DC    CL4'RMTS'           DISPLAY ALL REMOTES               R4 24685500
         DC    A(CDUREMOT)                                           R4 24686000
         B     CDURMALL                                              R4 24686500
         SPACE 1                                                     R4 24687000
         DC    AL1(CDUFLGRP+CDUFLRMT+CDUFLRAT+CDUFLLU),AL1(0),AL1(2) R4 24688000
         DC    AL1(0)                                                R4 24690000
         DC    CL4'RMT*'           DISPLAY ONE OR MORE REMOTES       R4 24690500
         DC    A(CDUREMOT)                                           R4 24691000
         B     CDURMTS                                              R41 24691100
         SPACE 1                                                    R41 24691200
         DC    AL1(CDUFLGRP+CDUFLCLS),AL1(DCTLNE),AL1(1),AL1(Z*16)  R41 24691300
         DC    CL4'TP**'           ALL TP                           R41 24691400
         DC    A(CDUSPLAY)                                          R41 24691500
         L     R1,$DCTPOOL                                          R41 24691600
         SPACE 1                                                    R41 24691700
         DC    AL1(CDUFLMOD),AL1(0),AL1(2),AL1(0)                   R41 24691800
         DC    CL4'ACT*'           ACTIVE ONLY MODIFIER             R41 24691900
         DC    A(CDULOOP)                                           R41 24692000
         OI    CDUFLAG2,CDUFLACT                                    R41 24692100
         SPACE 1                                                    R41 24692200
         DC    AL1(CDUFLMOD),AL1(0),AL1(2),AL1(0)                   R41 24692300
         DC    CL4'STAR'           STARTED ONLY MODIFIER            R41 24692400
         DC    A(CDULOOP)                                           R41 24692500
         OI    CDUFLAG2,CDUFLSTR                                    R41 24692600
         SPACE 1                                                    R41 24692700
         DC    AL1(CDUFLMOD),AL1(0),AL1(1),AL1(0)                   R41 24692800
         DC    CL4'SHOR'           SHORT ONLY MODIFIER              R41 24692900
         DC    A(CDULOOP)                                           R41 24693000
         OI    CDUFLAG2,CDUFLSHT                                    R41 24693100
         SPACE 1                                                    R41 24693200
         DC    AL1(CDUFLONE+CDUFLLU),AL1(0),AL1(0),AL1(0)           R41 24693300
         DC    CL4'****'           DISPLAY A SINGLE SPECIFIC DCT     R4 24695000
         DC    A(CDUSPLAY)                                           R4 24695500
         DC    A(0)                                                  R4 24696000
         EJECT                                                          24696500
         SPACE 2                                                        24697000
         LTORG ,                                                     R4 24697500
         TITLE 'HASP COMMAND PROCESSOR HASPCRM1 - REMOTE JOB ENTRY COMMC25430000
               ANDS'                                                 R4 25430500
HASPCRM1 $COMGRUP DM,R             REMOTE JOB ENTRY COMMANDS            25431000
*********************************************************************** 25431500
*                                                                     * 25432000
*        $D M LOC,TEXT -- DISPLAY MESSAGE AT LOCATION                 * 25432500
*                                                                     * 25433000
*        $ D M JOBID,TEXT -- DISPLAY MSG ON EXECUTING JOB'S LOG       * 25435600
*                                                                     * 25435700
*        $ D M 'JOBNAME',TEXT -- DISPLAY MSG ON EXECUTING JOB'S LOG   * 25435800
*                                                                     * 25435900
*        LOC   = R N-NN            REMOTE NUMBER OR RANGE (0=LOCAL)   * 25436100
*        TEXT  = MESSAGE TEXT                                         * 25440000
*                                                                     * 25440500
*********************************************************************** 25441000
         USING JQEDSECT,R1                                           R4 25441500
CDM      DS    0H                                                    R4 25442000
         SLR   R0,R0               ZERO WORK                         R4 25442500
         ST    R0,CDMRRL           SET DEFAULT REMOTE                R4 25445000
         ST    R0,CDMRRH           RANGE                             R4 25445500
         CLI   COMOPRND+1,C'R'     REMOTE TRANSMISSION               R4 25450500
         BE    CDMCR               CONVERT REMOTE RANGE              R4 25451000
         B     CDMJ                GO TEST FOR '$DMJ' COMMAND       R41 25453400
CDMERR   L     R1,0(0,WD)          POINT TO INVALID OPERAND          R4 25453500
         $CFINVO OPERAND=(R1)      INVALID OPERAND                   R4 25454000
CDMCR    $CFCVB POINTER=(WD),NOK=CDMERR CONVERT REMOTE RANGE         R4 25481000
         L     LINK,$SSVT          POINT TO SSVT                     R4 25484500
         CH    R0,$SVROUT-SSVT(,LINK) ABOVE OUR LIMIT                R4 25485000
         BH    CDMERR              ERROR IF YES                      R4 25485500
CDMCSRR  STM   R0,R1,CDMRRH        SET HIGH/LOW RANGES               R4 25486000
CDMPM    TM    COMAUTH,COMR        IS SOURCE REMOTE RESTRICTED       R4 25486500
         BO    CDMPMA              NEGATE ANY RANGES IF YES          R4 25487000
         TM    COMAUTH,COMJ+COMD+COMS DISPLAY ONLY                   R4 25487500
         BNO   CDMPMB              ALLOW RANGES IF NOT               R4 25488000
CDMPMA   DS    0H                                                    R4 25489000
         MVC   CDMRRL,CDMRRH       FORCE SAME REMOTE                 R4 25491500
CDMPMB   BXH   WD,WE,CDMERR        ANY TEXT                          R4 25492000
         L     WA,0(,WD)           POINT TO START                    R4 25492500
         L     WB,4(,WD)           POINT TO END + 2                  R4 25493000
         SLR   WB,WA               CALCULATE LENGTH                  R4 25493500
         BCTR  WB,0                BACK UP TO FULL TEXT LENGTH       R4 25494000
         BCTR  WA,0                INCLUDE COMMA                     R4 25494500
         EX    WB,CDMTEXT          MOVE COMMA AND TEXT               R4 25495000
         LA    WF,5(,WB)           SET FULL MESSAGE LENGTH           R4 25495500
         MVC   COMPNTER(7),COMFLAG COPY SOURCE INFO                  R4 25496000
         $CWTO MSG='OK',TRUNC=YES  TRUNCATE MLWTO                    R4 25496500
         SLR   R0,R0               ZERO WORK                         R4 25497000
         IC    R0,COMUCM-COMFLAG+COMPNTER PICK UP CON OR RMT NUMBER  R4 25497500
         MVC   COMMAND(4),=C'C  0' SET FOR LOGICAL CONSOLE           R4 25498000
         $CFCVE VALUE=(R0)         CONVERT TO EBCDIC                 R4 25498500
         TM    COMPNTER,CMBFLAGW   IS THIS FROM A REMOTE             R4 25499000
         BZ    SKIP460             SKIP IF NOT                       R4 25499500
         MVI   COMMAND,C'R'        SET REMOTE IDENTIFIER             R4 25500000
SKIP460  TM    COMPNTER,CMBFLAGW+CMBFLAGU REMOTE OR UCM              R4 25500500
         BZ    CDMPMC              SKIP IF EITHER                   R41 25501000
         MVC   COMMAND+1(3),COMDWORK+2 SET SOURCE ID                 R4 25501500
CDMPMC   DS    0H                                                   R41 25501700
         LA    WB,CDMRRH           POINT TO RANGES                   R4 25502500
         LM    WD,WE,0(WB)         PICK UP RANGES                    R4 25503000
CDML     LA    WC,1                SET RANGE INCREMENT               R4 25508000
CDMLL    ST    WE,4(,WB)           SET CURRENT VALUE                 R4 25508500
         MVC   COMFLAG(14),CDMWTO  PUT MASK IN                       R4 25509000
         CLI   CDMRRL+3,0          LOCAL SYSTEM                      R4 25509500
         BZ    CDMLOC              DISPLAY TO LOCAL IF YES           R4 25510000
         MVI   COMFLAG,CMBFLAGW    SET WORKSTATION AS RECEIVER       R4 25510500
         MVC   COMRMT,CDMRRL+3     SET REMOTE NUMBER                 R4 25511000
CDMLOC   MVC   COMTO,$SYSID        SET SYSTEM IDENTIFICATION         R4 25512000
CDMPUT   $CWTO L=(WF)              SEND MESSAGE                      R4 25520500
         BXLE  WE,WC,CDMLL         LOOP                              R4 25521000
         $CRET ,                   RETURN                            R4 25521500
CDMTEXT  MVC   COMMAND+4(*-*),0(WA) *** EXECUTE ONLY ***             R4 25522000
*********************************************************************** 25524000
*                                                                     * 25524500
*        $DM EQUATES                                                  * 25525000
*                                                                     * 25525500
*********************************************************************** 25526000
CDMRRH   EQU   COMREGSV,4          REMOTE RANGE HIGH VALUE           R4 25527000
CDMRRL   EQU   CDMRRH+4,4          REMOTE RANGE LOW VALUE            R4 25531000
CDMWTO   $WTO  PRI=$HI,CLASS=$ALWAYS,JOB=NO,ROUTE=X'0100',MF=LX      R4 25531500
CDMMID   $MSG  001                 MESSAGE ID                           25532000
         EJECT                                                      R41 25532100
*********************************************************************** 25532200
*                                                                     * 25532300
*        $ D M JOBID,TEXT    AND    $ D M 'JOBNAME',TEXT              * 25532400
*                                                                     * 25532500
*        DISPLAY MSG TO EXECUTING JOB, STC, TSU                       * 25532600
*                                                                     * 25532700
*********************************************************************** 25532800
         PUSH  USING               SAVE STATUS OF BASE REGS         R41 25532900
         SPACE 1                                                    R41 25533000
CDMJ     DS    0H                  CHECK FOR $DM TO ACTIVE JOB      R41 25533100
         MVC   COMJNAME,=CL8' '    BLANK OUT JOB NAME SLOT          R41 25533200
         SLR   WA,WA               SET OFFSET FOR JOB NO            R41 25533300
         CLI   COMOPRND+1,C'J'     CHECK FOR JOB                    R41 25533400
         BE    CDMJOBID            BRANCH IF YES TO EXTRACT JOBID   R41 25533500
         LH    WA,=H'10000'        SET OFFSET FOR STC NO            R41 25533600
         CLI   COMOPRND+1,C'S'     CHECK FOR STC                    R41 25533700
         BE    CDMJOBID            BRANCH IF YES TO EXTRACT JOBID   R41 25533800
         ALR   WA,WA               SET OFFSET FOR TSU NO            R41 25533900
         CLI   COMOPRND+1,C'T'     CHECK FOR TSU                    R41 25534000
         BE    CDMJOBID            BRANCH IF YES TO EXTRACT JOBID   R41 25534100
         CLI   COMOPRND+1,C''''    SEE IF JOBNAME (STARTS W/ QUOTE) R41 25534200
         BNE   CDMERR              ERROR IF NOT                     R41 25534300
         LA    R1,COMOPRND+2       POINT TO 1ST CHAR OF JOBNAME     R41 25534400
         L     WC,4(,WD)           POINT TO END OF NAME + 2         R41 25534500
         SLR   WC,R1               COMPUTE MACHINE                  R41 25534600
         SH    WC,=H'3'              TEXT LENGTH                    R41 25534700
         BM    CDMERR              ERROR IF NOT VALID               R41 25534800
         LA    R0,7                ENSURE                           R41 25534900
         CLR   WC,R0                 LENGTH                         R41 25535000
         BNH   CDMJEX                NOT                            R41 25535100
         LR    WC,R0                 OVER 7                         R41 25535200
CDMJEX   EX    WC,CDMJNMV          MOVE IN JOB NAME                 R41 25535300
         SLR   WC,WC               SHOW JQE NOT FOUND YET           R41 25535400
CDMJSCAN DS    0H                  BRANCH HERE TO RE-SCAN           R41 25535500
        $CFJSCAN PROCESS=CDMJCK,   SCAN JOB QUEUE,                  R41C25535600
               EMPTY=CDMJNJF,        LOOKING FOR                    R41C25535700
               NEXT=CDMJNEXT,        MATCHING                       R41C25535800
               IGNORE=CDMJNG         JOBNAME                        R41 25535900
         LTR   WA,WC               AT END OF SCAN, CHECK FOR ONLY 1 R41 25536000
         BNM   CDMJXEQ               JOB FOUND, BRANCH IF SO        R41 25536100
        $CRET  ,                   EXIT IF ERROR                    R41 25536200
CDMJNJF  CLI   COMJNAME,C' '       SEE IF JOBNAME SUPPLIED          R41 25536300
         BNE   CDMJNJF2              BRANCH IF SO                   R41 25536400
        $CRET  MSG='JOB(S) NOT FOUND'  EXIT WITH DIAGNOSTIC         R41 25536500
CDMJNJF2 MVC   COMMAND(8),COMJNAME CONSTRUCT ERROR MESSAGE          R41 25536600
         MVC   COMMAND+8(14),=C' JOB NOT FOUND'                     R41 25536700
        $CRET  L=8+14              EXIT WITH ERROR MESSAGE          R41 25536800
CDMJCK   CLC   JQEJNAME,COMJNAME   SEE IF DESIRED JOBNAME,          R41 25536900
         BNE   CDMJNG                CONTINUE SCAN IF NOT           R41 25537000
         LTR   WC,WC               SEE IF FOUND BEFORE,             R41 25537100
         BNZ   CDMJCK1               BRANCH IF SO                   R41 25537200
         LR    WC,R1               SHOW JQE FOUND                   R41 25537300
         B     CDMJNEXT            CONTINUE SCAN                    R41 25537400
CDMJCK1  BM    CDMJDISP            BRANCH IF IN 'DISPLAY' MODE      R41 25537500
         MVC   COMMAND(8),COMJNAME BUILD ERROR MESSAGE              R41 25537600
         MVC   COMMAND+8(20),=C' MULTIPLE JOBS FOUND'               R41 25537700
        $CWTO  L=8+20              ISSUE DISGNOSTIC                 R41 25537800
         ICM   WC,8,=X'80'         SHIFT TO 'DISPLAY' MODE          R41 25537900
         B     CDMJSCAN              AND RESTART SCAN AT THE TOP    R41 25538000
CDMJDISP $CFJMSG JOBQE=(R1),       DISPLAY INFO ABOUT               R41C25538100
               TYPE=CALL             DUPLICATE JOB                  R41 25538200
         B     CDMJNEXT            RESUME SCAN                      R41 25538300
CDMJOBID $CFCVB POINTER=(WD),NOK=CDMERR  EXTRACT JOBID              R41 25538400
         CLR   R0,R1               RANGE CANNOT BE SPECIFIED        R41 25538500
         BNE   CDMERR              ERROR IF RANGE                   R41 25538600
         ALR   R1,WA               ADD IN JOB/STC/TSU OFFSET        R41 25538700
        $QLOC  (R1)                SEE IF SPECIFIED JOB EXISTS      R41 25538800
         BZ    CDMJNJF             ERROR IF JOB NOT FOUND           R41 25538900
         LR    WA,R1               SAVE JQE POINTER IN WA           R41 25539000
         MVC   COMJNAME,QUEJNAME(WA) SAVE JOB NAME                  R41 25539100
CDMJXEQ  DS    0H                  ENTRY FROM $DM'JOBNAME','TEXT    R41 25539200
         TM    QUETYPE(WA),$XEQ    TEST FOR EXECUTION               R41 25539300
         BZ    CDMJERR             ERROR IF NOT                     R41 25539400
         CLI   QUETYPE(WA),$XEQ    RETEST FOR EXECUTION             R41 25539500
         BE    CDMJERR             ERROR IF REALLY CONVERSION       R41 25539600
         IC    R0,QUEFLAGS(WA)     PICK UP BUSY FLAGS FOR JOB       R41 25539700
         N     R0,=A(QUEBUSY)      ISOLATE BUSY SYSTEM ID           R41 25539800
         CLM   R0,1,$SIDBUSY       SEE IF EXECUTING ON OUR SYSTEM   R41 25539900
         BNE   CDMJERR             ERROR IF NOT                     R41 25540000
         BXH   WD,WE,CDMERR        MAKE SURE TEXT WAS SPECIFIED     R41 25540100
         LA    R0,2                SET CELL                         R41 25540200
         LR    R1,R0                 CLAIM ID                       R41 25540300
         LA    R4,S34DL            LENGTH OF REQUIRED CELL          R41 25540400
        $GETCEL NONE=CDMJEND       GET CELL FOR QUEUEING MESSAGE    R41 25540500
         LR    R3,R1               SET UP ADDRESSABILITY            R41 25540600
         USING S34DSECT,R3           ON CELL                        R41 25540700
         MVC   S34DTIME-1(CDMJEDTL),CDMJEDIT MOVE EDIT & FILL CHARS R41 25540800
         TIME  DEC                 GET TIME OF DAY                  R41 25540900
         ST    R0,PCER0            STORE HHMMSSTH FOR EDIT          R41 25541000
         ED    S34DTIME-1(L'S34DTIME+1),PCER0 EDIT TIME OF DAY      R41 25541100
         TM    COMFLAG,CMBFLAGU    IF MSG FROM LOCAL CONSOLE,       R41 25541200
         BO    CDMVCTXT              LEAVE ID AT 'OPER'             R41 25541300
         MVC   S34EDIT,=X'D9202120' MOVE 'R' & EDIT PATTERN         R41 25541500
         SLR   R0,R0               PICK UP                          R41 25541600
         IC    R0,COMRMT             REMOTE NUMBER                  R41 25541700
CDMJCVD  CVD   R0,PCER1            CREATE DECIMAL NUMBER            R41 25542900
         LA    R1,S34EDIT+3        PRESET SIGNIF. CHAR. POINTER     R41 25543000
         EDMK  S34EDIT,PCER1+6     EDIT NUMBER AND                  R41 25543100
         MVC   S34EDIT+1(4),0(R1)    LEFT-JUSTIFY                   R41 25543200
CDMVCTXT L     R1,0(,WD)           POINT TO START OF TEXT           R41 25543300
         L     R15,4(,WD)          POINT TO END OF TEXT PLUS 2      R41 25543400
         SLR   R15,R1              COMPUTE LENGTH                   R41 25543500
         BCTR  R15,0                 FOR EXECUTED                   R41 25543600
         BCTR  R15,0                 MVC                            R41 25543700
         LA    R0,L'S34DTEXT-(S34MSG-S34HEADR)-1 LOAD MAX LENGTH    R41 25543800
         CLR   R15,R0              IF TEXT                          R41 25543900
         BNH   CDMJEX2               TOO LONG,                      R41 25544000
         LR    R15,R0                TRUNCATE                       R41 25544100
CDMJEX2  EX    R15,CDMS34MV        MOVE TEXT TO MSG CELL            R41 25544200
         LA    R15,S34MSG-S34DTIME+1(,R15) COMPUTE MSG LENGTH       R41 25544300
         STH   R15,S34DMSGL          AND STORE IN CELL              R41 25544400
         LA    R0,S34DL            SET TOTAL LENGTH                 R41 25544500
         STH   R0,S34DLN             OF CELL                        R41 25544600
        $GETLOK ,                  GET LOCAL, CMS LOCKS             R41 25544700
         L     R14,$SSVT           POINT REG 14 TO SSVT             R41 25544800
         USING SSVT,R14            SSVT ADDRESSABILITY              R41 25544900
         USING SJBDSECT,R1         SJB ADDRESSABILITY               R41 25545000
         L     R1,$SVJXCLS         POINT TO BATCH JOB CHAIN         R41 25545100
         CLC   QUEJOBNO(,WA),=H'10000' CHECK FOR BATCH JOB          R41 25545200
         BNH   CDMSJBLP            BRANCH IF SO                     R41 25545300
         L     R1,$SVJXNUM         POINT TO STC/TSU CHAIN           R41 25545400
CDMSJBLP LTR   R1,R1               CHECK FOR END OF CHAIN           R41 25545500
         BZ    CDMFRELK            BR TO FREE LOCK IF SO            R41 25545600
         CL    WA,SJBJQE           CHECK SJB'S JQE ADDRESS          R41 25545700
         BE    CDMSJBOK            BR IF THIS IS THE SJB WE WANT    R41 25545800
         L     R1,SJBXQCHN         CHAIN TO NEXT                    R41 25545900
         B     CDMSJBLP            LOOP                             R41 25546000
CDMSJBOK L     R15,S34DCCEW        SET OWNING SJB ID                R41 25546100
         ST    R1,CCESJB-CCEDSECT(,R15)  IN CELL                    R41 25546200
         MVC   S34DJOB,SJBJOBID    SET JOBID IN MESSAGE             R41 25546300
         MODESET EXTKEY=ZERO       ZERO PROTECT KEY FOR QUEUEING    R41 25546400
         L     R15,SJBLOGQ         POINT TO CHAIN OF THINGS TO LOG  R41 25546500
CDMCSLP  ST    R15,S34DNEXT        PUT CHAIN POINTER IN OUR CELL    R41 25546600
         CS    R15,R3,SJBLOGQ      TRY TO ADD CELL TO CHAIN         R41 25546700
         BNE   CDMCSLP             LOOP IF UNSUCCESSFUL             R41 25546800
         MODESET EXTKEY=HASP       RETURN TO REGULAR KEY            R41 25546900
         DROP  R14                 DROP SSVT ADDRESSABILITY         R41 25547000
CDMFRELK $FRELOK ,                 RELEASE CMS, LOCAL LOCKS         R41 25547100
         LTR   R1,R1               SEE IF SJB WAS FOUND             R41 25547200
         BNZ   CDMJEND             BRANCH IF SO                     R41 25547300
         LR    R1,R3               POINT R1 TO CELL                 R41 25547400
        $FRECEL ,                  FREE CELL CONTAINING MESSAGE     R41 25547500
CDMJERR  MVC   COMMAND(8),COMJNAME CONSTRUCT ERROR MESSAGE          R41 25547600
         MVC   COMMAND+8(22),=C' JOB NOT EXECUTING ON '             R41 25547700
         MVC   COMMAND+8+22(4),$SID APPEND OUR SYSTEM ID            R41 25547800
        $CRET  L=8+22+4            EXIT & ISSUE DIAGNOSTIC          R41 25547900
CDMJEND $CRET  MSG='OK'            END OF $DMJ COMMAND              R41 25548000
         EJECT                                                      R41 25548100
CDMJNMV  MVC   COMJNAME(*-*),0(R1) *** EXECUTE ONLY ***             R41 25548200
CDMS34MV MVC   S34MSG(*-*),0(R1)   *** EXECUTE ONLY ***             R41 25548300
CDMJEDIT DS    0C                  EDIT PATTERNS AND FILLER         R41 25548400
         DC    X'4021204B20204B2020'                                R41 25548500
         DC    C' JOB NNNN  '                                       R41 25548600
S34CONST DC    C'MSG FROM OPER:    '                                R41 25548700
S34HEADR EQU   S34DTEXT,L'S34CONST LOCATION OF ABOVE TEXT           R41 25548800
S34EDIT  EQU   S34HEADR+9,4        EDIT PATTERN OVERLAYS 'OPER'     R41 25548900
S34MSG   EQU   S34HEADR+16         TEXT OF MESSAGE                  R41 25549000
CDMJEDTL EQU   *-CDMJEDIT          LENGTH FOR INITIAL MOVE          R41 25549100
         POP   USING                                                R41 25549200
         EJECT                                                          25549300
*********************************************************************** 25549400
*                                                                     * 25549500
*        $R ALL/PRT/PUN,J=FOR-JOBID/R=FOR-DEST,D=TO-DEST,Q=CLASSES    * 25549600
*                                                                     * 25550000
*        MEANING                                                      * 25550100
*        ROUTE OUTPUT OF TYPE 'OP1' FOR JOB OR DEST TO DEST           * 25550200
*        OPTIONALLY QUALIFIED BY CLASSES                              * 25550300
*                                                                     * 25550700
*********************************************************************** 25550800
         SPACE 2                                                        25550900
*********************************************************************** 25551000
*                                                                     * 25551100
*        CHECK FOR 'ALL' 'PRT' OR 'PUN'                               * 25551300
*                                                                     * 25551700
*********************************************************************** 25551800
CR       DS    0H                  START OF $R COMMAND                  25551900
         CLI   COMOPRND+3,C','     CHECK FOR PROPER FORMAT              25552000
         BNE   CDMERR              NO--EXIT IN ERROR                    25552100
         CLC   COMOPRND(3),=C'ALL' IS ROUTING FOR BOTH PRT AND PUN      25552200
         MVI   COMNULOP,CRXALL     ASSUME 'ALL'                         25552300
         BE    CRXTYPE             YES--EXIT TYPE SCAN                  25552400
         CLC   COMOPRND(3),=C'PRT' IS ROUTING FOR PRT ONLY              25552500
         MVI   COMNULOP,CRXPRINT   ASSUME SUCH                          25552600
         BE    CRXTYPE             YES--EXIT TYPE SCAN                  25552700
         CLC   COMOPRND(3),=C'PUN' IS ROUTING FOR PUNCH ONLY            25552800
         MVI   COMNULOP,CRXPUNCH   SET 'PUN'                            25552900
         BNE   CDMERR              NO--ERROR  OR NEXT SECTION           25553500
         SPACE 1                                                        25554000
*********************************************************************** 25554500
*                                                                     * 25555000
*        EXAMINE 2ND, 3RD AND 4TH OPERANDS FOR VALID SPECS            * 25555500
*                                                                     * 25556000
*********************************************************************** 25556500
CRXTYPE  DS    0H                  EXAMINE ADDITIONAL OPERANDS          25557000
         XC    CRXWORKA,CRXWORKA   SET CRX WORK AREA TO ZEROES       R4 25557500
CRXNXTOP BXH   WD,WE,CRXGO         POINT TO NEXT OPERAND POINTER     R4 25558000
         L     WB,0(,WD)           POINT TO FIRST CHARACTER          R4 25558500
         CLI   1(WB),C'='          THIS EQUAL                        R4 25559000
         BNE   CDMERR              ERROR IF JOB                      R4 25559500
         CLI   0(WB),C'J'          IS THIS JOB                       R4 25560000
         BE    CRXJANL             BREAK OUT JOB                     R4 25560500
         CLI   0(WB),C'Q'          IS THIS QUEUE                     R4 25561000
         BE    CRXQANL             BREAK OUT QUEUES                  R4 25561500
         CLI   0(WB),C'R'          IS THIS ROUTING                   R4 25562000
         BE    CRXFMANL            BREAK OUT DESTINATION             R4 25562500
         CLI   0(WB),C'D'          IS THIS NEW DESTINATION           R4 25563000
         BNE   CDMERR              ERROR IF NOT                      R4 25563500
         BAL   WA,CRXANAL          BREAK OUT DESTINATION             R4 25564000
         STCM  R0,3,CRXNEWRT       SET ROUTING                       R4 25564500
         OI    COMNULOP,CRXOP3     SET OPERAND 3 PRESENT             R4 25565000
         B     CRXNXTOP            DO NEXT OPERAND                   R4 25565500
CRXFMANL TM    COMNULOP,CRXOP2     ALREADY SPECIFIED                 R4 25566000
         BO    CDMERR              ERROR IF YES                      R4 25566500
         BAL   WA,CRXANAL          BREAK OUT DESTINATION             R4 25567000
         STCM  R0,3,CRXOLDRT       SET OLD ROUTE CODE                R4 25567500
         OI    COMNULOP,CRXOP2     SET OPERAND 2 PRESENT             R4 25568000
         B     CRXNXTOP            DO NEXT OPERAND                   R4 25568500
CRXGO    TM    COMNULOP,CRXOP2+CRXOP3 REQUIRED OPERANDS PRESENT      R4 25569000
         BNO   CDMERR              ERROR IF NOT                      R4 25569500
         $QSUSE ,                  ENQUEUE ON SHARED RESOURCE           25570000
         TM    COMNULOP,CRXJOB     CHECK FOR FROM ID A JOB              25570500
         BO    CRXCHKJB            YES--GO HANDLE JOB                   25571000
         CLC   CRXNEWRT,CRXOLDRT   ANY EFFECTIVE CHANGE              R4 25571500
         BE    CRXRET              SKIP IT IF NOT                    R4 25572000
         EJECT                                                          25572500
*********************************************************************** 25573000
*                                                                     * 25573500
*        SCAN JOB QUEUE LOOKING FOR JOBS BELONGING TO FROM ID         * 25574000
*                                                                     * 25574500
*********************************************************************** 25575000
CRXSCAN  $CFJSCAN  PROCESS=CRXJQE,NEXT=CRXNXJQE  SCAN THE JOB Q         25575500
         SPACE 1                                                        25576000
         L     R1,COMWREGS         GET ADR OF JOBNAME HIT JQE        R4 25576500
         CLI   CRXJOBNO,X'FF'      WAS THERE A JOBNAME HIT           R4 25577000
         BE    CRXCHKJO            CHECK JOB OWNERSHIP IF YES        R4 25577500
         B     CRXRET              RETURN WHEN QUEUE EXHAUSTED          25578000
         EJECT                                                       R4 25578500
*********************************************************************** 25579000
*                                                                     * 25579500
*        FROM ID IS A JOB -- CHK VALIDITY OF JOB & PERFORM FUNCT      * 25580000
*                                                                     * 25580500
*********************************************************************** 25581000
CRXCHKJB DS    0H                  FROM ID IS A JOB                     25581500
         SLR   R0,R0               ZERO WORK                            25582000
         ICM   R0,3,CRXJOBNO       GET JOB NUMBER                       25582500
         BZ    CRXSCAN             IF CRXJOBNO=0 THIS IS J='JOBNAME' R4 25583000
         $QLOC (R0),CRXJNFND       LOOK FOR JOB IN QUEUE                25583500
CRXCHKJO $CFVQE NOK=CRXRET         VERIFY OWNERSHIP                  R4 25584000
         TM    JQEFLAGS,QUEPURGE   TRST FOR JOB TO BE PURGED            25584500
         BO    CRXRET              YES -- FORGET CHANGING               25585000
         CLI   JQETYPE,$INPUT      IS JOB ON A READER                   25585500
         BE    CRXRET              YES -- DON'T ROUTE IT                25586000
         ICM   WB,15,CRXCLSPT      LOOK FOR Q= OPERAND                  25591500
         BNZ   CRXJBCLQ            YES -- CHG ALL JOES TO SPECIAL       25592000
         TM    COMNULOP,CRXPRINT   ELSE CHANGE JQE FIRST                25592500
         BZ    CRXJPUN             TEST FOR PRINT ROUTING CHANGE        25593000
         MVC   JQEPRTRT,CRXNEWRT   CHANGE PRINT ROUTING IF YES          25593500
CRXJPUN  TM    COMNULOP,CRXPUNCH   TEST FOR PUN RE-ROUTING              25594000
         BZ    *+10                NO--SKIP JQE CHANGE                  25594500
         MVC   JQEPUNRT,CRXNEWRT   YES--RE-ROUTE PUNCH                  25595000
         $QCKPT  (R1)              CHECKPOINT THE CHANGED JQE           25595500
         OI    COMNULOP,CRXMODS    FLAG A MODIFICATION MADE             25596000
CRXJBCLQ DS    0H                                              @OZ29780 25598500
         LR    WF,R1               POINT TO JOB QUEUE ELEMENT  @OZ29780 25599000
         BAL   WE,CRXALLCL         YES-CHANGE SPECIAL JOE ROUTINGS      25600000
         B     CRXRET              AND THEN RETURN                      25600500
         EJECT                                                          25603500
*              THIS LINE DELETED BY APAR NUMBER              * @OZ29780 25604500
*              THIS LINE DELETED BY APAR NUMBER              * @OZ29780 25605000
*              THIS LINE DELETED BY APAR NUMBER              * @OZ29780 25605500
*              THIS LINE DELETED BY APAR NUMBER              * @OZ29780 25606000
*              THIS LINE DELETED BY APAR NUMBER              * @OZ29780 25606500
*              THIS LINE DELETED BY APAR NUMBER              * @OZ29780 25607000
*              THIS LINE DELETED BY APAR NUMBER              * @OZ29780 25607500
*              THIS LINE DELETED BY APAR NUMBER              * @OZ29780 25608000
*              THIS LINE DELETED BY APAR NUMBER              * @OZ29780 25608500
*              THIS LINE DELETED BY APAR NUMBER              * @OZ29780 25609000
*              THIS LINE DELETED BY APAR NUMBER              * @OZ29780 25609500
*              THIS LINE DELETED BY APAR NUMBER              * @OZ29780 25610000
*********************************************************************** 25611000
*                                                                     * 25611500
*        LOOK AT EACH JOB IN QUEUE TO SEE IF IT                       * 25612000
*        BELONGS TO FROM ID AND THEN CHANGE IT ACCORDINGLY            * 25612500
*                                                                     * 25613000
*********************************************************************** 25613500
CRXJQE   DS    0H                  A JOB WAS FOUND                      25614000
         TM    COMNULOP,CRXJOB     WAS J= OPTION SPECIFIED (JOBNAME) R4 25614500
         BZ    CRXJQEF             BRANCH IF NOT                     R4 25615000
         CLC   JQEJNAME,COMJNAME   DOES JQE JOBNAME = CMD JOBNAME    R4 25615500
         BNE   CRXNXJQE            CONTINUE SCAN IF NOT              R4 25616000
         CLI   CRXJOBNO,X'FF'      IS THIS 1ST JOBNAME HIT           R4 25616500
         BE    CRXMULTI            OUTPUT ERROR MSG IF NOT           R4 25617000
         MVI   CRXJOBNO,X'FF'      INDICATE JOBNAME HIT FOUND        R4 25617500
         ST    R1,COMWREGS         SAVE ADR OF JQE                   R4 25618000
         B     CRXNXJQE            CONTINUE JQE SCAN                 R4 25618500
CRXJQEF  DS    0H                                                    R4 25619000
         CLI   JQETYPE,$INPUT      IS JOB ON A READER                   25619500
         BE    CRXNXJQE            YES -- DON'T ROUTE IT                25620000
         TM    JQEFLAGS,QUEPURGE   TEST FOR JOB ON PURGE Q              25622500
         BO    CRXNXJQE            YES--GET NEXT JOB                    25623000
         $CFVQE NOK=CRXNXJQE       VERIFY JOB'S OWNERSHIP               25623500
         ICM   WB,15,CRXCLSPT      TEST FOR CLASSES SUPPLIED            25626000
         BNZ   CRXTSJOE            DO ONLY JOES IF CLASS LIST  @OZ29780 25627000
*              THIS LINE DELETED BY APAR NUMBER              * @OZ29780 25627500
*              THIS LINE DELETED BY APAR NUMBER              * @OZ29780 25628000
         TM    COMNULOP,CRXPRINT   CHK FOR RE-ROUTING OF PRINT          25630000
         BZ    CRXRPUN             NO--TEST FOR PUNCH RE-ROUTING        25630500
         CLC   JQEPRTRT,CRXOLDRT   SEE IF FROM ID IS OWNER OF PRT       25631000
         BNE   CRXRPUN             NO--MAYBE PUNCH IS TO BE RE-RTD      25631500
         MVC   JQEPRTRT,CRXNEWRT   YES--CHANGE PRINT ROUTING            25632000
         OI    COMNULOP,CRXCKPT+CRXMODS  CKPT NEEDED AND CHG MADE       25632500
CRXRPUN  DS    0H                  TEST FOR PUNCH RE-ROUTING            25633000
         TM    COMNULOP,CRXPUNCH   TEST FOR SAID CHANGE                 25633500
         BZ    CRXTSTCK            NO--TEST FOR POSSIBLE CKPT           25634000
         CLC   JQEPUNRT,CRXOLDRT   TEST FOR FROM ID PUNCH OWNER         25634500
         BNE   CRXTSTCK            NO--TEST FOR CKPT                    25635000
         MVC   JQEPUNRT,CRXNEWRT   YES--RE-ROUTE PUNCH ACCORDINGLY      25635500
         OI    COMNULOP,CRXMODS    FLAG A MODIFICATION MADE             25636000
         B     *+12                FORCE CHECKPOINT                     25636500
CRXTSTCK TM    COMNULOP,CRXCKPT    TEST FOR JQE CKPT                    25637000
         BZ    CRXTSJOE            NO--LOOK FOR JOES TO CHANGE          25637500
         $QCKPT (R1)               CHECKPOINT THE JQE                   25638000
         NI    COMNULOP,255-CRXCKPT    RESET CHECKPOINT NECESSARY       25638500
CRXTSJOE DS    0H                                                    R4 25639000
         LR    WF,R1               POINT TO JOB QUEUE ELEMENT  @OZ29780 25640000
         BAL   WE,CRXALLCL         REROUTE ANY READY DATA SETS @OZ29780 25640500
         LR    R1,WF               POINT TO JOB QUEUE ELEMENT  @OZ29780 25641000
         B     CRXNXJQE            GET NEXT JOB                @OZ29780 25641500
         EJECT                                                          25647500
*********************************************************************** 25648000
*                                                                     * 25648500
*        ROUTINE TO COMPUTE JOT DISPLACEMENT                          * 25649000
*        FOR ANY CLASS AND THEN BRANCH AND LINK TO                    * 25649500
*        JOE MODIFY ROUTINE                                           * 25650000
*                                                                     * 25650500
*********************************************************************** 25651000
         USING JOTDSECT,R10                                          R4 25651500
CRXALLCL DS    0H                  BEGIN CLASS CONVERTS                 25652000
         OC    JQEJOECT,JQEJOECT   TEST FOR ANY JOES                    25652500
         BZR   WE                  NONE -- RETURN                       25653000
         L     R10,CDFJOT          POINT TO JOT                      R4 25653500
         SLR   WC,WC               ZERO CLASS OFFSET           @OZ29780 25654000
         TM    COMNULOP,CRXALL     REQUEST FOR ALL             @OZ29780 25654500
         BO    CRXNJALL            LOOK FOR QUALIFYING CLASSES @OZ29780 25655000
         L     WB,$SSVT            POINT TO SSVT               @OZ29780 25655500
         LA    WB,$SVSCAT-SSVT(,WB) POINT TO SCAT              @OZ29780 25656000
CRXNJL   LA    WC,2(,WC)           UP TO NEXT CLASS OFFSET     @OZ29780 25656500
         CH    WC,=Y(L'JOTRDYWQ)   TEST FOR END                @OZ29780 25657000
         BNLR  WE                  RETURN IF END               @OZ29780 25657500
         LR    R1,WC               COPY OFFSET                 @OZ29780 25663000
         SRL   R1,1                HALVE                       @OZ29780 25663500
         IC    R1,CRXCLASS-1(R1)   PICK UP OFFSET IN SCAT      @OZ29780 25664000
         ALR   R1,WB               POINT TO ENTRY              @OZ29780 25664500
         TM    COMNULOP,CRXPRINT   WANT PRINT                  @OZ29780 25665000
         BO    CRXNJPRT            LOOK FOR PRINT CLASS        @OZ29780 25665500
         TM    0(R1),SCATPNCH      THIS A PUNCH CLASS          @OZ29780 25666000
         BZ    CRXNJL              LOOP                        @OZ29780 25666500
         B     CRXNJOK             TRY JOE MODIFICATION        @OZ29780 25667000
CRXNJPRT TM    0(R1),SCATPRNT      THIS A PRINT CLASS          @OZ29780 25667500
         BZ    CRXNJL              LOOP                        @OZ29780 25668000
CRXNJOK  BAL   WA,CRXCHJOE         CHANGE JOES                 @OZ29780 25668500
         B     CRXNJL              LOOP                        @OZ29780 25669000
CRXNJALL OC    CRXCLSPT,CRXCLSPT   CLASSES SPECIFIED           @OZ29780 25669500
         BNZ   CRXONEC             DO ONLY SPECIFIED CLASSES   @OZ29780 25670000
CRXJOLOP LA    WC,2(,WC)           UP TO NEXT                  @OZ29780 25670500
         BAL   WA,CRXCHJOE         CHANGE JOES OF THIS CLASS   @OZ29780 25671000
         CH    WC,=Y(L'JOTRDYWQ-2) TEST FOR END                @OZ29780 25671500
         BL    CRXJOLOP            LOOP                        @OZ29780 25672000
         BR    WE                  YES--RETURN TO CALLER                25673000
CRXONEC  DS    0H                  USER CLASS LIST SUPPLIED             25673500
         NI    0(WB),255-X'C0'     TURN 'OFF' HIGH ORDER ZONE BITS      25674000
         SLR   WC,WC               ZERO INSERT REGISTER                 25674500
         IC    WC,0(,WB)           PICK-UP OFFSET                       25675000
         L     WA,=A(CPQTABLE)     PT TO HEAD OF CONVERT TABLE @OZ29780 25676000
         IC    WC,0(WC,WA)         PICK-UP OFFSET INTO JOT              25678000
         BAL   WA,CRXCHJOE         GO MODIFY JOES OF THIS CLASS         25678500
         CLI   1(WB),C' '          CHECK FOR LAST CHARACTER             25679000
         BER   WE                  YES--EXIT                            25679500
         LA    WB,1(,WB)           ELSE POINT TO NEXT CLASS             25680000
         B     CRXONEC             AND LOOP FOR ALL CLASSES             25680500
         EJECT                                                       R4 25681000
*********************************************************************** 25681500
*                                                                     * 25682000
*        CHANGE JOES FOR CLASS IN REG (WC)                            * 25682500
*                                                            * @OZ29780 25683500
************************************************************** @OZ29780 25684000
*              THIS LINE DELETED BY APAR NUMBER              * @OZ29780 25684500
*              THIS LINE DELETED BY APAR NUMBER              * @OZ29780 25685000
*              THIS LINE DELETED BY APAR NUMBER              * @OZ29780 25685500
*              THIS LINE DELETED BY APAR NUMBER              * @OZ29780 25686000
*              THIS LINE DELETED BY APAR NUMBER              * @OZ29780 25686500
*              THIS LINE DELETED BY APAR NUMBER              * @OZ29780 25687000
*              THIS LINE DELETED BY APAR NUMBER              * @OZ29780 25687500
*              THIS LINE DELETED BY APAR NUMBER              * @OZ29780 25688000
*              THIS LINE DELETED BY APAR NUMBER              * @OZ29780 25689000
*              THIS LINE DELETED BY APAR NUMBER              * @OZ29780 25689500
CRXCHJOE DS    0H                  CHANGE JOE ROUTINGS                  25690000
         USING JOEDSECT,WD                                           R4 25690500
         LA    WD,JOTRDYWQ-(JOENEXT-JOEDSECT)(WC)              @OZ29780 25691500
CRXNXJOE DS    0H                                                    R4 25693500
         LR    R0,WD               COPY ADDRESS                      R4 25694000
         LH    WD,JOENEXT          PICK UP OFFSET TO NEXT JOE        R4 25694500
         N     WD,=A(X'0000FFFF')  ENSURE OFFSET POSITIVE            R4 25695000
         BZR   WA                  EXIT IF LAST JOE OF CLASS            25695500
         SLL   WD,2                EXPAND TO BYTE OFFSET             R4 25696000
         ALR   WD,R10              POINT TO JOE                      R4 25696500
         LH    R14,JOEJQE          PICK UP JQE INDEX                 R4 25697000
         SLL   R14,2               POINT TO                          R4 25697500
         AL    R14,$JOBQPTR        JQE                               R4 25698000
         CLR   R14,WF              JOE BELONG TO JOB           @OZ29780 25699000
         BNE   CRXNXJOE            LOOK AT NEXT                      R4 25701000
         TM    COMNULOP,CRXJOB     CHK FOR FROM ID A JOB                25701500
         BO    CRXSPCL             YES--BR FOR JOB'S JOES               25702000
         CLC   JOEROUT,CRXOLDRT    IS THIS JOE A SPECIAL FOR            25702500
*                                  THIS ROUTE                           25703000
         BNE   CRXNXJOE            NO--DON'T RE-ROUTE                   25703500
CRXALLJO DS    0H                                                    R4 25704000
         TM    JOEFLAG,$JOEBUSY    IS JOE ACTIVE               @OZ29780 25704100
         BNZ   CRXJOEB             SKIP SETTING IF YES         @OZ29780 25704200
         TM    COMNULOP,CRXALL     IS THIS $RALL...            @OZ16683 25704300
         BO    CRXUPDR             BR IF YES                   @OZ16683 25704400
         CLC   JOEDEST,=H'0'       IS JOE SPECIAL ROUTE...     @OZ16683 25704500
         BNE   CRXNXJOE            SKIP SETTING IF YES         @OZ16683 25704600
CRXUPDR  MVC   JOEROUT,CRXNEWRT    SET NEW ROUTE CODE          @OZ16683 25705000
CRXCKJO  $#CKPT JOE=0(WD),TYPE=A   SCHEDULE CHECKPOINT FOR JOE       R4 25728500
         OI    COMNULOP,CRXMODS    FLAG A MODIFICATION MADE             25729000
         B     CRXNXJOE            AND GET ANOTHER                      25729500
CRXSPCL  EQU   CRXALLJO                                        @OZ29780 25730500
CRXJOEB  OI    COMNULOP,CRXJOEA    SET ERROR INDICATOR         @OZ29780 25731000
         B     CRXNXJOE            DO NEXT JOE                 @OZ29780 25731500
*              THIS LINE DELETED BY APAR NUMBER              * @OZ29780 25732000
*              THIS LINE DELETED BY APAR NUMBER              * @OZ29780 25732500
*              THIS LINE DELETED BY APAR NUMBER              * @OZ29780 25733000
         EJECT                                                       R4 25736000
*********************************************************************** 25736500
*                                                                     * 25737000
*        SUBROUTINE TO EXAMINE R=DEST(FROM) AND D=DEST(TO)            * 25737500
*                                                                     * 25738000
*********************************************************************** 25738500
CRXANAL  DS    0H                  START SCAN OF OPERANDS               25739000
         BAL   LINK,COFRTRA        CONVERT ROUTE CODE                R4 25739500
         B     CDMERR              ERROR EXIT               + 0      R4 25740000
         CR    R0,R1               SAME                     + 4      R4 25740500
         BNE   CDMERR              ERROR IF NOT                      R4 25741000
         BR    WA                  RETURN                            R4 25745500
*********************************************************************** 25759500
*                                                                     * 25760000
*        EXAMINE THE FROM JOB OPERAND (J=JN/J=SN/J=TN)                * 25760500
*                                                                     * 25761000
*********************************************************************** 25761500
CRXJANL  DS    0H                                                    R4 25762000
         TM    COMNULOP,CRXOP2     OPERAND 2 ALREADY SPECIFIED       R4 25762500
         BO    CDMERR              ERROR IF YES                      R4 25763000
         CLI   2(WB),C''''         IS THIS A J='JOBNAME' OPERAND     R4 25763500
         BNE   CRXJJNOV            GO TO VALIDATE JOB NO. IF NOT     R4 25764000
         LA    WB,2(,WB)           STEP WB TO START OF 'JOBNAME'     R4 25764500
         L     WC,4(,WD)           POINT 2 BYTES PAST END-OF-OPERAND R4 25765000
         BCTR  WC,0                BACK UP TO END                    R4 25765500
         BCTR  WC,0                  OF OPERAND                      R4 25766000
         CLI   0(WC),C''''         DOES OPERAND END WITH APOSTROPHE  R4 25766500
         BNE   SKIP480             SKIP NSI IF NOT                   R4 25767000
         BCTR  WC,0                POINT TO LAST CHAR OF JOBNAME     R4 25767500
SKIP480  SR    WC,WB               COMPUTE LENGTH OF JOBNAME         R4 25768000
         BNP   CDMERR              ERROR EXIT IF NOT POSITIVE        R4 25768500
         BCTR  WC,0                GET MACHINE LENGTH                R4 25769000
         LA    R0,7                SET R0 = MAXIMUM MACHINE LENGTH   R4 25769500
         CR    WC,R0               IS JOBNAME LENGTH TOO LONG        R4 25770000
         BNH   SKIP490             SKIP NSI IF NOT                   R4 25770500
         LR    WC,R0               SET TO MOVE MAXIMUM LENGTH        R4 25771000
SKIP490  MVC   COMJNAME,=CL8' '    BLANK OUT JOBNAME WORKAREA        R4 25771500
         EX    WC,CRXJNMVC         MOVE JOBNAME TO WORKAREA          R4 25772000
         SLR   R0,R0               SET R0 (JOB NUMBER) TO ZERO       R4 25772500
         B     CRXJXIT             GO TO SET COMNULOP FLAGS AND EXIT R4 25773000
CRXJJNOV DS    0H                  VALIDATE JOB NO.                  R4 25773500
         SLR   WC,WC               SET BATCH JOB VALUE                  25774000
         CLI   2(WB),C'J'          TEST FOR BATCH JOB                R4 25774500
         BE    CRXCVB              YES--GET JOB NUMBER                  25775000
         AH    WC,=H'10000'        SET STC OFFSET VALUE                 25777500
         CLI   2(WB),C'S'          TEST FOR SYSTEM STARTED TASK      R4 25778000
         BE    CRXCVB              YES--GET STC NUMBER                  25778500
         ALR   WC,WC               SET TSU OFFSET VALUE                 25779000
         CLI   2(WB),C'T'          TEST FOR TIME SHARING USER        R4 25779500
         BNE   CDMERR              ERROR IF NOT                      R4 25780000
CRXCVB   DS    0H                                                    R4 25780500
         $CFCVB POINTER=(WD),NUM=1,NOK=CDMERR  DO IT                    25781000
         LTR   R0,R0               RESULT ZERO                       R4 25781500
         BZ    CDMERR              ERROR IF YES                      R4 25782000
         ALR   R0,WC               COMPUTE TRUE TASK NUMBER             25782500
CRXJXIT  DS    0H                  SET COMNULOP FLAGS AND EXIT       R4 25783000
         OI    COMNULOP,CRXJOB+CRXOP2 SET SECOND OPERAND IS JOB      R4 25783500
         STH   R0,CRXJOBNO         SET JOB NUMBER                    R4 25784000
         B     CRXNXTOP            DO NEXT OPERAND                   R4 25784500
         EJECT                                                       R4 25785000
*********************************************************************** 25785500
*                                                                     * 25786000
*        EXTRACT Q= OPERAND IF SUPPLIED                               * 25786500
*                                                                     * 25787000
*********************************************************************** 25787500
CRXQANL  DS    0H                                                       25788000
         L     WC,4(,WD)           POINT TO OPERAND END                 25788500
         LA    WC,0(,WC)           CLEAR HI-ORDER FLAG BYTE             25789000
         SLR   WC,WB               COMPUTE SIZE OF OPERAND              25789500
         SH    WC,=H'4'            LESS FOUR FOR 'Q=' AND MACH.         25790000
         BM    CDMERR              NOT PRESENT -- ERROR                 25790500
         L     R14,=A(CVALIDTB)    POINT TO TEST TABLE               R4 25791000
         EX    WC,CRXVALID         TEST FOR VALID STRING                25791500
         BNZ   CDMERR              INVALID CHARACTERS -- ERROR          25792000
         TM    COMNULOP,CRXALL     TEST FOR TYPE OF ALL                 25792500
         BNO   CDMERR              IF NOT -- 'Q=' IS INVALID            25793000
         LA    R0,2(,WB)           POINT TO FIRST CHAR IN STRING        25793500
         ALR   WC,R0               COMPUTE END OF STRING - 1            25794000
         MVI   1(WC),C' '          TRUNCATE STRING                      25794500
         STCM  R0,15,CRXCLSPT      SET CLASS STRING POINTER          R4 25795000
         B     CRXNXTOP            LOOK AT NEXT OPERAND              R4 25795500
         SPACE 1                                                        25796000
CRXVALID TRT   2(*-*,WB),0(R14)    *** EXECUTE ONLY ***              R4 25796500
CRXJNMVC MVC   COMJNAME(*-*),1(WB) *** EXECUTE ONLY ***              R4 25797000
         EJECT                                                       R4 25797500
*********************************************************************** 25798000
*                                                                     * 25798500
*        CRXMULTI - COME HERE IF J=JOBNAME OPERAND WAS USED ON $R     * 25799000
*                   COMMAND AND JOB NAME IS NOT UNIQUE.  PUT OUT      * 25799500
*                   'MULTIPLE JOBS FOUND' MSG AND DISPLAY THE JOBS.   * 25800000
*                                                                     * 25800500
*********************************************************************** 25801000
CRXMULTI DS    0H                                                    R4 25801500
         MVC   COMMAND(19),=C'MULTIPLE JOBS FOUND' MOVE MSG          R4 25802000
         LA    R0,19               MSG LENGTH                        R4 25802500
        $CWTO  L=(R0)              SEND MSG                          R4 25803000
*                                  SCAN FOR AND DISPLAY JOBS         R4 25803500
        $CFJSCAN PROCESS=CRXMJPRO,NEXT=CRXMJNXT                      R4 25804000
         B     CRXRET              RETURN (DISPLAYS COMPLETE)        R4 25804500
CRXMJPRO NULL  ,                                                     R4 25805000
         CLC   JQEJNAME,COMJNAME   JQE JOBNAME = CMD JOBNAME         R4 25805500
         BNE   CRXMJNXT            CONTINUE SCAN IF NOT              R4 25806000
         LR    WB,R1               SAVE JQE ADR                      R4 25806500
        $CFJMSG JOBQE=(R1),TYPE=CALL  DISPLAY JOB INFORMATION        R4 25807000
*********************************************************************** 25807500
*                                                                     * 25808000
*        USING $CFJSCAN MACRO, TRY TO RETRACE CHAIN BACK TO SAME      * 25808500
*        JQE.  IF FOUND, AND ON THE SAME QUEUE, WE CAN CONTINUE       * 25809000
*        OUR ORIGINAL SCAN LOOKING FOR DUPLICATE JOBS TO DISPLAY.     * 25809500
*        IF NOT FOUND OR ON ANOTHER QUEUE, MSG = 'LIST INCOMPLETE.'   * 25810000
*                                                                     * 25810500
*********************************************************************** 25811000
        $CFJSCAN PROCESS=CRXMJCHK,NEXT=CRXMJX,STORE=NO               R4 25811500
CRXNOFND DS    0H                                                    R4 25812000
         MVC   COMMAND(15),=C'LIST INCOMPLETE' MOVE MSG              R4 25812500
         LA    R0,15               MSG LENGTH                        R4 25813000
        $CWTO  L=(R0)              SEND MSG                          R4 25813500
         B     CRXRET              RETURN                            R4 25814000
CRXMJCHK NULL  ,                   COME HERE TO CHECK JQE            R4 25814500
         CR    R1,WB               IS THIS THE SAME JQE AS DISPLAYED R4 25815000
         BNE   CRXMJX              GO TO CHECK NEXT JQE IF NOT       R4 25815500
         CH    R15,COMJQHDS        IS JOB STILL ON SAME QUEUE        R4 25816000
         BNE   CRXNOFND            IF NOT,CHAIN BROKEN, BRANCH       R4 25816500
         B     CRXMJNXT            OTHERWISE, CONTINUE ORIG JOB SCAN R4 25817000
         EJECT                                                          25817500
*********************************************************************** 25818000
*        EQUATES FOR $ROUTE COMMAND                                   * 25818500
*********************************************************************** 25819000
CRXOP2   EQU   X'80'               OPERAND 2 IS PRESENT              R4 25819500
CRXOP3   EQU   X'40'               OPERAND 3 IS PRESENT              R4 25820000
CRXPRINT EQU   X'08'               TYPE IS PRINT                        25820500
CRXPUNCH EQU   X'04'               TYPE IS PUNCH                        25821000
CRXALL   EQU   CRXPRINT+CRXPUNCH   TYPE IS ALL                          25821500
CRXJOB   EQU   X'02'               FROM ID IS A JOB                     25822000
CRXCKPT  EQU   X'01'               A CHECKPOINT OF THE JQE IS NEED      25824000
CRXJOEA  EQU   X'20'               AT LEAST ONE ELIGIBLE JOE IS ACTIVE  25824500
CRXMODS  EQU   X'10'               MODIFICATION HAS BEEN MADE           25825000
         SPACE 1                                                        25825500
CRXWORKA EQU   COMREGSV,8          $ROUTE COMMAND WORK AREA          R4 25826000
CRXOLDRT EQU   COMREGSV,2          SAVE AREA FOR OLD ROUTE CODE      R4 25826500
CRXJOBNO EQU   COMREGSV,2          SAVE AREA FOR JOB, STC, TSU NO.   R4 25827000
CRXNEWRT EQU   COMREGSV+2,2        SAVE AREA FOR NEW ROUTE CODE      R4 25827500
CRXCLSPT EQU   COMREGSV+4,4        SAVE AREA FOR CLASS STRING PTR    R4 25828000
         SPACE 3                                                        25828500
*********************************************************************** 25829000
*        $ROUTE EXITS                                                 * 25829500
*********************************************************************** 25830000
CRXJNFND DS    0H                  COME HERE IF JOB NOT FOUND           25830500
         $CRET MSG='JOB(S) NOT FOUND'                                   25831000
         SPACE 1                                                        25831500
CRXRET   DS    0H                  RETURN EXIT                          25832000
         TM    COMNULOP,CRXJOEA    ANY ACTIVE JOES ELIGIBLE    @OZ29780 25833000
         BZ    CRXRETA             SKIP NEXT                   @OZ29780 25833500
         $POST $HASPECF,(JOB,JOT)  POST JOB AND JOT            @OZ29780 25834000
         $CRET MSG='ACTIVE DATA SETS NOT ROUTED'               @OZ29780 25834500
CRXRETA  DS    0H                                              @OZ29780 25835000
         TM    COMNULOP,CRXMODS    TEST FOR ANY CHANGES                 25836000
         BZ    CRXMSG              NONE -- TELL OPERATOR SUCH           25836500
         $POST $HASPECF,(JOB,JOT)  POST JOB AND JOT                     25837000
         OI    $AQSE,QSEPJOB+QSEPJOT   CAUSE X SYSTEM POST(S)           25837500
         $CRET MSG=OK              RETURN 'OK'                          25838000
CRXMSG   DS    0H                  NO RE-ROUTING OF DATA SETS           25838500
         $CRET MSG='NO DATA SETS RE-ROUTED'                             25839500
         SPACE 2                                                        25841500
CRXCLASS DC    C'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'         @OZ29780 25842500
         LTORG ,                                                        25843500
         DROP  R1                                                    R4 25844000
         DROP  WD                                                    R4 25844500
         DROP  R10                                                   R4 25845000
         PRINT &DATA               DEFINE PRINTING FOR LITERALS         25845500
         TITLE 'HASP COMMAND PROCESSOR - LITERAL POOL'                  25846500
HASPCOMM CSECT                                                          25847000
         LTORG ,                                                        25847500
         TITLE 'HASP COMMAND PROCESSOR - GLOBAL DEFINITIONS'            25848500
CVALIDTB EQU   *                                                        25849000
         DC    193X'01'            X'00'-X'C0' INVALID                  25849500
         DC    9X'00'              X'C1'-X'C9' VALID (A-I)              25850000
         DC    7X'01'              X'CA'-X'D3' INVALID                  25850500
         DC    9X'00'              X'D1'-X'D9' VALID (J-R)              25851000
         DC    8X'01'              X'DA'-X'E1' INVALID                  25851500
         DC    8X'00'              X'E2'-X'E9' VALID (S-Z)              25852000
         DC    6X'01'              X'EA'-X'EF' INVALID                  25852500
         DC    10X'00'             X'F0'-X'F9' VALID (0-9)              25853000
         DC    6X'01'              X'FA'-X'FF' INVALID                  25853500
         SPACE 5                                                     R4 25854000
CVALTABL EQU   *                                                     R4 25854500
         DC    75X'01'             X'00'-X'4A'  INVALID              R4 25855000
         DC      X'00'             X'4B'        VALID (.)            R4 25855500
         DC    15X'01'             X'4C'-X'5A'  INVALID              R4 25856000
         DC      X'00'             X'5B'        VALID ($)            R4 25856500
         DC    31X'01'             X'5C'-X'7A'  INVALID              R4 25857000
         DC    2X'00'              X'7B',X'7C' VALID (#,@)     @OZ18216 25857500
         DC    68X'01'             X'7D'-X'C0' INVALID         @OZ18216 25858000
         DC     9X'00'             X'C1'-X'C9'  VALID (A-I)          R4 25858500
         DC     7X'01'             X'CA'-X'D0'  INVALID              R4 25859000
         DC     9X'00'             X'D1'-X'D9'  VALID (J-R)          R4 25859500
         DC     8X'01'             X'DA'-X'E1'  INVALID              R4 25860000
         DC     8X'00'             X'E2'-X'E9'  VALID (S-Z)          R4 25860500
         DC     6X'01'             X'EA'-X'EF'  INVALID              R4 25861000
         DC    10X'00'             X'F0'-X'F9'  VALID (0-9)          R4 25861500
         DC     6X'01'             X'FA'-X'FF'  INVALID              R4 25862000
         TITLE 'HASP COMMAND PROCESSOR - CANCEL JOB SERVICE ROUTINE' R4 25862500
*********************************************************************** 25863000
*                                                                     * 25863500
*        $JCAN -- JOB CANCEL SERVICE ROUTINE                          * 25864000
*                                                                     * 25864500
* FUNCTIONS                                                           * 25865000
*                                                                     * 25865500
*    (1) REJECT ATTEMPTS TO CANCEL OR STOP STC OR TSU JOBS            * 25866000
*        PRIOR TO EXECUTION.                                          * 25866500
*                                                                     * 25867000
*    (2) PURGE HQRS FOR STOP JOB AND CANCEL WITH PURGE REQUESTS.      * 25867500
*                                                                     * 25868000
*    (3) PURGE JOES FOR STOP JOB AND CANCEL WITH PURGE REQUESTS.      * 25868500
*                                                                     * 25869000
*    (4) ISSUE SVC 34 TO CANCEL JOB IF REQUIRED.                      * 25869500
*                                                                     * 25870000
*    (5) DELET ACTIVITY ON HASP READERS FOR CANCEL REQUESTS           * 25870500
*        AND ON HASP PRINTERS AND PUNCHES FOR CANCEL WITH PURGE       * 25871000
*        REQUESTS.                                                    * 25871500
*                                                                     * 25872000
*    (6) FORCE CHECKPOINT IF JQE HAS AN OWNER AND $QPUT TO            * 25872500
*        $OUTPUT, $HARDCPY, OR $PURGE IF NO OWNER.                    * 25873000
*                                                                     * 25873500
*    (7) IGNORE ATTEMPTS TO CANCEL OUTPUT FOR JOB IF CANCEL           * 25874000
*        WITHOUT PURGE IS REQUESTED.                                  * 25874500
*                                                                     * 25875000
*    (8) SIGNAL USER TO WAIT ON CHECKPOINT IF ACTIVE.                 * 25875500
*                                                                     * 25876000
* INPUT REGISTERS                                                     * 25876500
*                                                                     * 25877000
*        R0    = REQUEST CODE                                         * 25877500
*        R1    = JQE ADDRESS                                          * 25878000
*        R11   = BASE1 (HCT)                                          * 25878500
*        R13   = PCE ADDRESS (CALLERS)                                * 25879000
*        R14   = RETURN (RETURN WILL BE TO R14 + R15)                 * 25879500
*        R15   = ENTRY BASE                                           * 25880000
*                                                                     * 25880500
* OUTPUT REGISTERS                                                    * 25881000
*                                                                     * 25881500
*        R0-R14= UNCHANGED                                            * 25882000
*        R15   = RETURN CODE ( OFFSET TO R14 FOR RETURN )             * 25882500
*                                                                     * 25883000
*              = 0 - STC OR TSU CANCEL EXECUTION REQUEST REJECTED     * 25883500
*              = 4 - CANCEL IGNORED FOR JOB IN OUTPUT                 * 25884000
*              = 8 - JQE FLAGGED FOR CANCEL AS REQUESTED              * 25884500
*                                                                     * 25885000
*********************************************************************** 25885500
         EJECT                                                          25886000
$JCANR   DS    0H                                                       25886500
         USING *,R15                                                    25887000
         STM   R0,R14,CCJSAVE      SAVE USER REGISTERS                  25887500
         LR    R8,R15              ESTABLISH WORKING BASE               25888000
         USING $JCANR,R8                                                25888500
         USING JQEDSECT,R1                                              25889000
         DROP  R15                                                      25889500
         LR    WE,R1               SAVE JQE ADDRESS                     25890000
         SLR   WB,WB               CLEAR SJB ADDRESS REGISTER       R41 25890200
         LA    WF,CCJXNJ           SET NOT JOB ERROR RETURN CODE        25890500
         CLC   JQEJOBNO,CCJJMAX    CHECK FOR ABOVE BATCH JOB NUMBERS    25891000
         BL    CCJB                DO CANCEL FOR JOBS                   25891500
         TM    JQETYPE,$XEQ        IS IT IN OR PRIOR TO XEQ             25892000
         BO    CCJRET              RETURN 'NOTJOB' IF YES               25892500
         CLI   JQETYPE,$INPUT      IS TSU OR STC ON A READER            25895000
         BE    CCJRET              RETURN 'NOTJOB' IF YES               25895500
         B     CCJB1                ELSE CONTINUE                   R41 25897800
         SPACE 1                                                    R41 25898000
*********************************************************************** 25898100
*                                                                     * 25898200
*        CHECK FOR 'NON-CANCELABLE' BATCH JOB ATTRIBUTE               * 25898300
*                                                                     * 25898400
*********************************************************************** 25898500
         SPACE 1                                                    R41 25898600
         USING PITDSECT,WC         PROVIDE PIT ADDRESSABILITY       R41 25898700
         SPACE 1                                                    R41 25898800
CCJB     TM    JQETYPE,$XEQ        XEQ OR CONVERTER...              R41 25898900
         BZ    CCJB1               BR IF NO                         R41 25899000
         TM    JQEFLAGS,QUEBUSY    IS JOB ACTIVE...                 R41 25899100
         BZ    CCJB1               BR IF NO                         R41 25899200
         CLI   JQETYPE,$XEQ        CONVERTING...                    R41 25899300
         BE    CCJB1               BR IF YES                        R41 25899400
         L     WC,$PITABLE         POINT TO PITS                    R41 25899500
         SPACE 1                                                    R41 25899600
CCJPIT1  TM    PITSTAT,PITBUSY     IS PIT ACTIVE...                 R41 25899700
         BO    CCJSJB              BR IF YES                        R41 25899800
         SPACE 1                                                    R41 25899900
CCJPIT2  ICM   WC,15,PITNEXT       POINT TO NEXT PIT                R41 25900000
         BZ    CCJB1               BR IF END OF PITS                R41 25900100
         B     CCJPIT1              ELSE TEST NEW PIT               R41 25900200
         SPACE 1                                                    R41 25900300
         USING SJBDSECT,WD         PROVIDE SJB ADDRESSABILITY       R41 25900400
         SPACE 1                                                    R41 25900500
CCJSJB   L     WD,PITSJB           POINT TO SJB                     R41 25900600
         CLM   R1,7,SJBJQE+1       IS THIS THE RIGHT SJB...         R41 25900700
         BNE   CCJPIT2             TRY NEXT PIT IF NO               R41 25900800
         LR    WB,WD               SAVE SJB ADDRESS                 R41 25900900
         ICM   WD,15,SJBCSCB       POINT TO CSCB                    R41 25901000
         BZ    CCJB1               BR IF NO CSCB                    R41 25901100
         SPACE 1                                                    R41 25901200
         USING CSCDSECT,WD         PROVIDE CSCB ADDRESSABILITY      R41 25901300
         SPACE 1                                                    R41 25901400
         TM    CHACT,CHCL          IS JOB CANCELABLE...             R41 25901500
         BZ    CCJRET              RETURN 'NOTJOB' IF NO            R41 25901600
         SPACE 1                                                    R41 25901700
         DROP  WD                  DROP CSCB ADDRESSABILITY         R41 25901800
         EJECT                                                      R41 25901900
CCJB1    ST    WB,CCJSJBAD         SAVE SJB ADDRESS                 R41 25902000
         TM    CCJR,CCJRSTOP+CCJRPURG  $C ONLY...                   R41 25902100
         BZ    CCJC                BRANCH IF $C ONLY                    25902200
         NI    JQEFLAGS,255-QUEHOLDA-QUEHOLD1-QUEHOLD2 RESET HOLD       25902300
         OI    JQEFLAGS,QUEPURGE   SET PURGE FOR $CJ,P AND $PJ          25902400
         TM    CCJR,CCJRPURG       TEST FOR $CJ,P ONLY                  25902500
         BZ    *+8                 NO--SKIP SETTING QUEOPCAN            25902600
         OI    JQEFLAGS,QUEOPCAN   SET OPERATOR CANCEL                  25902700
*********************************************************************** 25902800
*                                                                     * 25902900
*        PURGE ANY HELD DATA SETS                                     * 25903000
*                                                                     * 25903100
*********************************************************************** 25903500
         SPACE 1                                                        25904000
         LH    WB,JQEHLDCT         PICK-UP HOLD COUNT                   25904500
         LTR   WB,WB               TEST FOR ANY                         25905000
         BZ    CCJNOHLD            NONE--EXIT DELETION ROUTINE          25905500
         LR    WC,R1               SAVE JQE ADDRESS OVER GETMAIN        25906000
         LA    WF,CCJXNOP          SET POSSIBLE NOP FOR NO STORAGE      25906500
         GETMAIN RC,LV=PSOLNGTH,SP=0  GET STORAGE FOR PSO ELEMENT       25907000
         SPACE 1                                                        25907500
         LR    R2,R1               RELOAD PSO ADDRESS (IF ANY)      R41 25908000
         USING PSODSECT,R2         PROVIDE PSO ADDRESSABILITY       R41 25908500
         LTR   R3,R15              TEST FOR STORAGE AVAILABLE       R41 25909000
         BNZ   CCJRET              IF NONE--EXIT NOT CANCELLED          25909500
         LR    R0,R1               CLEAR                             R4 25910000
         LA    R1,PSOLNGTH          PSO                              R4 25910500
         MVCL  R0,R2                 STORAGE                        R41 25911000
        $TIME  ,                   GET CURRENT DATE IN R1           R41 25911100
         ST    R1,PSOCRDT          SET CUT-OFF DATE                 R41 25911200
         LR    R1,WC               RESTORE JQE ADDRESS               R4 25911500
         OI    PSOFLG1,PSOFHLD+PSOFJOBI+PSOFJOBN SET PSO FLAGS          25912000
         OI    PSOFLG2,PSOFDONE+PSOF$O SET ADDITIONAL FLAGS             25912500
         OI    PSOUFLG,PSOFDELC    SET TO CANCEL DATA SETS              25913000
         MVC   PSOJOBN,JQEJNAME    SET JOBNAME INTO PSO ELEMENT         25913500
         MVC   PSOJOBNO,JQEJOBNO   SET JOB NUMBER INTO PSO ELEMENT      25914000
         LR    R15,R2              SAVE ADDRESS OF NEW ELEMENT      R41 25914500
         LA    R2,$OQUEUE-(PSONEXT-PSODSECT)  PREPARE TO SCAN PSO Q R41 25915000
         L     R0,PSONEXT          PT TO NEXT ELEMENT                   25915500
         LTR   R0,R0               TEST FOR LAST ELEMENT                25916000
         BZ    *+10                YES--SET NEW LAST ELEMENT            25916500
         LR    R2,R0                ELSE RELOAD ELEMENT ADDRESS     R41 25917000
         B     *-12                AND LOOP TILL LAST FOUND             25917500
         ST    R15,PSONEXT         ADD ELEMENT TO END OF CHAIN          25918000
         L     R15,$PSOPCE         POINT TO PSO PCE                  R4 25918500
         $POST (R15),WORK          POST PSO FOR DELETE REQUEST          25919000
         DROP  R2                  KILL PSO ADDRESSABILITY          R41 25919500
         SPACE 1                                                        25920000
CCJNOHLD DS    0H                  COME HERE WHEN NO HELD DATA SETS     25920500
         EJECT                                                          25921000
*********************************************************************** 25921500
*                                                                     * 25922000
*        PURGE JOES FOR JOB                                           * 25922500
*                                                                     * 25923000
*********************************************************************** 25923500
         ICM   R0,3,JQEJOECT       PICK UP JOE COUNT                    25924000
         BZ    CCJNOJOE            SKIP CANCEL IF NONE                  25924500
         $#CAN JQE=(R1)            CANCEL IDLE JOES                     25925000
CCJNOJOE LR    R1,WE               MAKE SURE R1 STILL POINTS TO JQE     25925500
*********************************************************************** 25926000
*                                                                     * 25926500
*        CANCEL ACTIVITY OR CHECKPOINT                                * 25927000
*                                                                     * 25927500
*********************************************************************** 25928000
CCJCANC  TM    JQETYPE,$XEQ        IS IT XEQ OR CONVERTER               25928500
         BZ    CCJNDEV             BR IF NO                          R4 25929000
         TM    JQEFLAGS,QUEBUSY    TEST FOR JOB ACTIVE                  25929500
         BZ    CCJQPUT             BR IF NO TO RE-QUEUE              R4 25930000
         CLI   JQETYPE,$XEQ        TEST FOR JOB CONVERTING              25930500
         BE    CCJCKPT             POST CHECKPOINT IF YES               25931000
         TM    CCJR,CCJFSTOP       IS THIS $P...                    R41 25931500
         BO    CCJCKPT             DO NOT DISRUPT EXECUTION IF $P       25932000
         OI    CCJR,CCJRCANX       SET FLAG TO RETURN CANCEL REQUIRED   25932500
         EJECT                                                          25933000
*********************************************************************** 25933500
*                                                                     * 25934000
*        FORCE CHECKPOINT OR PUT JQE ON $OUTPUT, $HARDCPY, OR         * 25934500
*        $PURGE QUEUE                                                 * 25935000
*                                                                     * 25935500
*********************************************************************** 25936000
CCJNDEV  TM    JQEFLAGS,QUEBUSY    IS JOB ACTIVE                        25936500
         BNZ   CCJCKPT             CHECK POINT IF YES                   25937000
CCJQPUT  LA    R0,$OUTPUT          SET OUTPUT                           25937500
         $QPUT (R1),(R0)           PUT TO OUTPUT, HARDCPY, PURGE        25938000
         B     CCJRETOK            RETURN WITH OK RETURN CODE        R4 25938500
CCJCKPT  $QCKPT (R1)               FORCE CHECKPOINT OF JQE              25939000
CCJRETOK LA    WF,CCJXOK           SET RETURN                           25939500
         TM    CCJR,CCJRCANX       IS CANCEL SVC 34 REQUIRED            25940000
         BZ    CCJRET              SKIP CANCEL EXECUTION IF NOT         25940500
*********************************************************************** 25941000
*                                                                     * 25941500
*        TELL OPERATING SYSTEM TO CANCEL EXECUTION OF JOB             * 25942000
*                                                                     * 25942500
*********************************************************************** 25943000
         SPACE 1                                                    R41 25943500
         USING SJBDSECT,WD         PROVIDE SJB ADDRESSABILITY       R41 25944000
         SPACE 1                                                    R41 25944500
         LM    WA,WC,CCJSAVEA      SAVE WORK SPACE CONTENTS         R41 25945000
         ICM   WD,15,CCJSJBAD      PICK UP SJB ADDRESS              R41 25945500
         BZ    CCJPITUH            BR IF NO SJB TO UNHOLD JQE       R41 25946000
         OI    SJBFLG2,SJB2CNCL    SET CANCEL FLAG                      25949500
         MVC   CCJSAVEA+4(8),SJBASCBP+SJBERRET-SJBERRET SET XM POST     25950000
         ICM   WE,15,SJBCSCB       POINT TO CSCB                        25950500
         USING CSCDSECT,WE                                              25951000
         BZ    CCJPITTR            BR IF NO CSCB TO TEST RSTRT      R41 25951500
         MODESET EXTKEY=ZERO       GET KEY 0                            25952000
         OI    CHACT,CHCLD         TELL OS TO DO WHOLE JOB              25952500
         MODESET EXTKEY=HASP       GET KEY 1                            25953000
         LA    R1,CHCECB           POINT TO ECB                         25953500
         ST    R1,CCJSAVEA         SET INTO XM POST ELEMENT             25954000
         LA    R0,X'222'           SET ABEND CODE FOR NO DUMP           25954500
         TM    CCJR,CCJRDUMP       IS 'DUMP' DESIRED                    25955000
         BZ    CCJPOST             SKIP NEXT IF NOT                  R4 25955500
         LA    R0,X'122'           SET ABEND CODE FOR DUMP              25956000
CCJPOST  POST  ,(0),MF=(E,CCJSAVEA)  POST TO CANCEL JOB              R4 25956500
         LA    R0,44               SET REQUEST TO SWAP IN               25957000
         ICM   R0,12,SJBASID       SET ASID NUMBER                      25957500
         SVC   95                  SWAP USER IN (MAYBE)                 25958000
CCJPITTR DS    0H                  TEST RESTART BIT IN SJB          R41 25958100
         TM    SJBFLG1,SJB1EJOB    Q. IF RESTART BIT SET                25958500
         BO    CCJPITE             BR. IF YES                           25959000
CCJPITUH DS    0H                  UNHOLD JQE                       R41 25959100
         L     R1,CCJSAVE+4        RELOAD JQE ADDRESS                   25959500
         NI    JQEFLAGS,255-QUEHOLDA-QUEHOLD1-QUEHOLD2  UNHOLD          25960000
CCJPITE  STM   WA,WC,CCJSAVEA      RESTORE SAVE AREA                    25960500
         DROP  WD,WE                                                    25961000
CCJRET   LR    R15,WF              SET RETURN CODE                      25961500
         LM    R0,R14,CCJSAVE      RESTORE USER REGISTERS               25962000
         B     0(R15,R14)          RETURN TO USER                       25962500
         EJECT                                                          25963000
*********************************************************************** 25963500
*                                                                     * 25964000
*        VERB IS $C WITHOUT PURGE OPERAND                             * 25964500
*                                                                     * 25965000
*********************************************************************** 25965500
CCJC     TM    JQETYPE,$XEQ        TEST FOR XEQ OR CONVERTER            25966000
         BO    CCJWXEQT            IF EITHER TEST FOR EXECUTING     R41 25966500
CCJCRDRT LA    WF,CCJXNOP          SET NO-OP RETURN CODE            R41 25970500
         CLI   JQETYPE,$INPUT      IS IT ON A READER                R41 25971000
         BNE   CCJRET              IGNORE REQUEST                       25973500
CCJCRDR  NI    JQEFLAGS,255-QUEHOLDA-QUEHOLD1-QUEHOLD2 RELEASE JOB   R4 25974000
         OI    JQEFLAGS,QUEOPCAN   SET CANCEL                           25974500
         B     CCJNDEV             CHECKPOINT OR PUT ON NEXT QUEUE   R4 25975000
CCJWXEQT TM    JQEFLAGS,QUEBUSY    IS JOB ACTIVE...                 R41 25975100
         BZ    CCJW                BR IF NO TO RELEASE              R41 25975200
         CLI   JQETYPE,$XEQ        IS JOB CONVERTING...             R41 25975300
         BNE   CCJWCAN             BR IF NO (EXECUTING)             R41 25975400
CCJW     NI    JQEFLAGS,255-QUEHOLDA-QUEHOLD1-QUEHOLD2 RELEASE JOB   R4 25975500
CCJWCAN  OI    JQEFLAGS,QUEOPCAN   SET CANCEL FLAG                  R41 25976000
         B     CCJCANC             CANCEL ACTIVITY                      25976500
         EJECT                                                          25977000
*********************************************************************** 25977500
*                                                                     * 25978000
*        JOB CANCEL ROUTINE WORKAREA DEFINITIONS                      * 25978500
*                                                                     * 25979000
*********************************************************************** 25979500
         SPACE 3                                                        25980000
CCJJMAX  DC    H'10000'            UPPER LIMIT FOR JOB NUMBERS          25980500
CCJCBNK  DC    C'C '               COMMAND VERB                         25981000
CCJDUMP  DC    C',DUMP'            DUMP OPTION CHARACTERS               25981500
CCJSAVE  EQU   $REGSAVE            NON-REENTRANT REGISTER SAVE AREA R41 25982000
CCJR     EQU   CCJSAVE+3,1         REQUESTS IN LOW BYTE OF R0           25982500
CCJSAVEA EQU   CCJSAVE+4*R2,12     POST PARAMETER LIST                  25983000
CCJSJBAD EQU   CCJSAVE+(R14-R0+1)*4  SJB ADDRESS SAVE AREA          R41 25983200
         SPACE 3                                                        25983500
CCJRDUMP EQU   CCJFDUMP            A DUMP IS REQUESTED                  25984000
CCJRCANX EQU   X'20'               SVC 34 CANCEL REQUIRED               25984500
CCJRSTOP EQU   CCJFSTOP            USER REQUESTED STOP JOB              25985000
CCJRPURG EQU   CCJFPURG            USER REQUESTED PURGE JOB             25985500
*        EQU   X'00'               USER REQUESTED CANCEL EXECUTION      25986000
         SPACE 3                                                        25986500
CCJXNJ   EQU   X'00'               RETURN OFFSET FOR 'NOT JOB'          25987000
CCJXNOP  EQU   X'04'               RETURN OFFSET FOR 'NOP'              25987500
CCJXOK   EQU   X'08'               RETURN OFFSET FOR 'OK'               25988000
         TITLE 'HASP COMMAND PROCESSOR - PURGE TRACKS FOR SPIN DATA SETC25988500
               S'                                                   R41 25989000
*********************************************************************** 25989500
*                                                                     * 25990000
*        $IOTPUR -- IOT PURGE SERVICE ROUTINE                         * 25990500
*                                                                     * 25991000
* FUNCTIONS --                                                        * 25991500
*                                                                     * 25992000
*   (1) READ IN THE IOT FOR A SPIN DATA SET.                          * 25992500
*                                                                     * 25993000
*   (2) PURGE THE TRACKS USED FOR THE DATA SET IF AN ALLOCATION       * 25993500
*       IOT.                                                          * 25994000
*                                                                     * 25994500
*   (3) TURN OFF THE PSO FLAG IN THE PDDB (SO THAT THE DATA SET       * 25995000
*       WILL NOT BE RE-SPUN ON JES2 WARM START) AND REWRITE THE       * 25995500
*       IOT.                                                          * 25996000
*                                                                     * 25996500
* INPUT REGISTERS --                                                  * 25997000
*                                                                     * 25997500
*        R1 = ADDR OF WORK JOE                                        * 25998000
*                                                                     * 25998500
* OUTPUT REGISTERS --                                                 * 25999000
*                                                                     * 25999500
*        R0 - R15 UNCHANGED (RETURN IS TO LINK+0)                     * 26000000
*                                                                     * 26000500
* NOTE - IF UNABLE TO GET AN IOT BUFFER, AN IMMEDIATE RETURN IS       * 26001000
*       MADE INSTEAD OF WAITING FOR A BUFFER.  IF AN I/O ERROR        * 26001500
*       OCCURS WHEN READING OR WRITING AN IOT THE $IOERROR            * 26002000
*       MACRO IS ISSUED TO WRITE A DIAGNOSTIC MESSAGE TO THE          * 26002500
*       CONSOLE.  HOWEVER, THE $IOERROR ROUTINE WILL RETURN           * 26003000
*       WITHOUT WAITING IF UNABLE TO GET A CMB.                       * 26003500
*                                                                     * 26004000
*********************************************************************** 26004500
         EJECT                                                      R41 26005000
$IOTPUR  DS    0H                  ENTRY POINT                      R41 26005500
         USING $IOTPUR,R15         TEMPORARY ADDRESSABILITY         R41 26006000
         USING JOEDSECT,WE         ADDRESSABILITY FOR JOE           R41 26006500
         USING IOTDSECT,WF         ADDRESSABILITY FOR IOT           R41 26007000
         USING PDBDSECT,WD         ADDRESSABILITY FOR PDDB          R41 26007500
         SPACE 2                                                    R41 26008000
         STM   R14,R10,COMREGSV+12 STORE REGISTERS             @OZ18622 26008500
         LR    BASE3,R15           ESTABLISH WORKING BASE           R41 26009000
         DROP  R15                                                  R41 26009500
         USING $IOTPUR,BASE3                                        R41 26010000
         LR    WE,R1               GET ADR OF WORK JOE              R41 26010500
        $GETBUF ,                  GET IOT BUFFER                   R41 26011500
         BZ    CIPEXIT             RETURN IF NO BUFFER AVAIL        R41 26012000
         LR    WF,R1               POINT TO IOT BUFFER              R41 26012500
*********************************************************************** 26013000
*                                                                     * 26013500
*        READ SPIN DATA SET IOT                                       * 26014000
*                                                                     * 26014500
*********************************************************************** 26015000
CIPREAD  MVI   PCEDEVTP,PCEDARD    SET UP DCT TO READ               R41 26015500
         ST    WF,PCEBUFAD         ADDR OF BUFFER                   R41 26016000
         MVC   PCESEEK,JOEIOTTR    MTTR OF SPIN IOT                 R41 26016500
         LA    R1,PCEDADCT         ADDR OF DCT                      R41 26017000
        $EXCP  (R1),WAIT=YES       READ SPIN IOT                    R41 26017500
         BM    CIPFBUF             GO FREE IOT BUFFER IF ERROR      R41 26018000
         SPACE 2                                                    R41 26018500
*********************************************************************** 26019000
*                                                                     * 26019500
*        PURGE SPIN DATA SET TRACKS IF ALLOCATION IOT                 * 26020000
*                                                                     * 26020500
*********************************************************************** 26021000
CIPIOT   TM    IOTFLAG1,IOT1ALOC   IF NOT AN ALLOCATION IOT,        R41 26021500
         BNO   CIPPSO              BRANCH (NO TRACKS TO PURGE)      R41 26022000
        $PURGE IOTTGMAP            PURGE SPIN DATA SET TRACKS       R41 26022500
         NI    IOTFLAG1,255-IOT1ALOC  TURN OFF ALLOCATE FLAG        R41 26023000
*********************************************************************** 26023500
*                                                                     * 26024000
*        UPDATE PDDB FLAG AND WRITE IOT                               * 26024500
*                                                                     * 26025000
*********************************************************************** 26025500
CIPPSO   L     WD,$IOTPDDB         GET PDDB DISPLACEMENT            R41 26026000
         ALR   WD,WF               GET ADDR OF PDDB, MAKE DS        R41 26026500
         NI    PDBFLAG1,255-PDB1PSO INELIGIBLE FOR WARMSTART        R41 26027000
         MVI   PCEDEVTP,PCEDAWR    SET UP DCT FOR WRITE             R41 26027500
         LA    R1,PCEDADCT         POINT TO DCT                     R41 26028000
        $EXCP  (R1),WAIT=YES       WRITE UPDATED IOT                R41 26028500
*********************************************************************** 26030000
*                                                                     * 26030500
*        NOTE--IF AN IO READ/WRITE ERROR OCCURS, $EXCP WILL           * 26031000
*              ISSUE THE $IOERROR MACRO TO OUTPUT A DIAGNOSTIC        * 26031500
*              MESSAGE.  IF HOWEVER, THE $IOERROR ROUTINE IS          * 26032000
*              UNABLE TO GET A CMB, IT WILL RETURN (WITHOUT           * 26032500
*              WAITING FOR A CMB) TO PROTECT AGAINST A POSSIBLE       * 26033000
*              CONSOLE LOCKOUT.                                       * 26033100
*                                                                     * 26033500
*********************************************************************** 26034000
         SPACE 2                                                    R41 26035000
CIPFBUF $FREEBUF (WF)              FREE IOT BUFFER                  R41 26035500
         SPACE 2                                                    R41 26036000
CIPEXIT $QSUSE                     REQUEST ACCESS TO CKPT DATA      R41 26036500
         LM    R14,R10,COMREGSV+12 RESTORE REGISTERS           @OZ18622 26036600
         BR    LINK                RETURN TO CALLER                 R41 26037000
$COMMEND DS    0D                                                   R41 26037500
$MLENGTH $DLENGTH HEADER=M         COMPUTE HASPCOMM CSECT LEN       R41 26038000
         SPACE 2                                                    R41 26039000
HASPCOMA CSECT                     REVERT TO HASPCOMA CSECT         R41 26039500
$COMAEND DS    0D                  FILL OUT CONTROL SECTION         R41 26040000
$ALENGTH $DLENGTH HEADER=A         COMNPUTE HASPCOMA CSECT LEN      R41 26040500
         SPACE 5                                                    R41 26041000
HASPCOMM CSECT                     REVERT TO HASPCOMM CSECT         R41 26041500
APARNUM  DC    CL5'32133'          APAR NUMBER                          26042498
         END   ,                                                    R41 26042500
