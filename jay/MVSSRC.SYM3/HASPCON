CON      TITLE 'HASP CONSOLE SUPPORT - PROLOG'                 @OZ18212 30002000
*********************************************************************** 30004000
*                                                                     * 30006000
* MODULE NAME = HASJES20 ( HASPCON CSECT )                            * 30008000
*                                                                     * 30010000
* DESCRIPTIVE NAME = HASPCON CSECT OF JES2 MAIN MODULE                * 30012000
*                                                                     * 30014000
* COPYRIGHT = NONE                                                    * 30016100
*                                                                     * 30018000
* STATUS = OS/VS2 MVS   --  SEE &VERSION (BELOW) FOR JES2 LEVEL       * 30020000
*                                                                     * 30022000
* FUNCTION = THE HASPCON CSECT PROVIDES $WTO, $GETCMB, $DOM,          * 30024000
*            AND $FRECMB SERVICES TO THE PROCESSORS OF THE MAIN       * 30026000
*            JES2 TASK DURING NORMAL JOB PROCESSING, SEE ENTRY        * 30028000
*            POINTS FOR DOCUMENTATION OF EACH SERVICE ROUTINE.        * 30030000
*                                                                     * 30032000
* NOTES = SEE BELOW                                                   * 30034000
*                                                                     * 30036000
*    DEPENDENCIES = IDENTIFY MACRO TO ALLOW ATTACHING A DAUGHTER      * 30038000
*                   TASK WITH ENTRY CONTAINED WITHIN THIS CSECT.      * 30040000
*                   SEE ASSEMBLY HASPINIT FOR ATTACH.                 * 30042000
*                                                                     * 30044000
*    RESTRICTIONS = NONE                                              * 30046000
*                                                                     * 30048000
*    REGISTER CONVENTIONS = SEE ENTRY POINT DOCUMENTATION             * 30050000
*                                                                     * 30052000
*    PATCH LABEL = NONE                                               * 30054000
*                                                                     * 30056000
* MODULE TYPE = PROCEDURE ( CSECT TYPE )                              * 30058000
*                                                                     * 30060000
*    PROCESSOR = ASSEMBLER F                                          * 30062000
*                                                                     * 30064000
*    MODULE SIZE = SEE $DLENGTH MACRO EXPANSION(S) AT END OF ASSEMBLY * 30066000
*                                                                     * 30068000
*    ATTRIBUTES = REENTRANT                                           * 30070000
*                                                                     * 30072000
* ENTRY POINT =    $WTOR    - ENTRY FROM $WTO MACRO TO QUEUE          * 30074000
*                             CONSOLE MESSAGE FOR DISPLAY             * 30076000
*                  HASPWQUE - ENTRY FOR SPECIAL PURPOSE QUEUING       * 30078000
*                             OF CMBS                                 * 30080000
*                  $WTOCR   - ENTRY FROM $WTO CMB=YES MARCO TO        * 30082000
*                             QUEUE CONSOLE MESSAGE FOR DISPLAY       * 30084000
*                  $GETCMBR - ENTRY FROM $GETCMB MACRO TO GET A       * 30086000
*                             CONSOLE MESSAGE BUFFER                  * 30088000
*                  $DOMR    - ENTRY FROM $DOM MACRO TO DELETE         * 30090000
*                             OPERATOR MESSAGE                        * 30092000
*                  $FRECMBR - ENTRY FROM $FRECMB MACRO TO FREE A      * 30094000
*                             CONSOLE MESSAGE BUFFER                  * 30096000
*                  $HASPWTO - ENTRY FROM ATTACH MACRO ISSUED BY       * 30098000
*                             HASPINIT TO PERFORM ALL SVC 34 AND      * 30100000
*                             35 REQUESTS FOR THE MAIN JES2 TASK      * 30102000
*                             DURING JOB PROCESSING                   * 30104000
*                                                                     * 30106000
*    PURPOSE = SEE FUNCTION                                           * 30108000
*                                                                     * 30110000
*    LINKAGE = SEE ENTRY POINT DOCUMENTATION                          * 30112000
*                                                                     * 30114000
* INPUT = SEE ENTRY POINT DOCUMENTATION                               * 30116000
*                                                                     * 30118000
* OUTPUT = SEE ENTRY POINT DOCUMENTATION                              * 30120000
*                                                                     * 30122000
* EXIT-NORMAL = SEE ENTRY POINT DOCUMENTATION                         * 30124000
*                                                                     * 30126000
* EXIT-ERROR = NONE                                                   * 30128000
*                                                                     * 30130000
* EXTERNAL REFERENCES = SEE BELOW                                     * 30132000
*                                                                     * 30134000
*    ROUTINES = $$POST ROUTINE IN HASPSSSM, SVC 3                     * 30136000
*                                                                     * 30138000
*    DATA AREAS = SEE $HASPCB MACRO EXPANSION                         * 30140000
*                                                                     * 30142000
*    CONTROL BLOCKS = SEE $HASPCB MACRO EXPANSION                     * 30144000
*                                                                     * 30146000
* TABLES = NONE                                                       * 30148000
*                                                                     * 30150000
* MACROS = SSVT, POST, WAIT, TIME, DOM                                * 30152000
*                                                                     * 30154000
* CHANGE ACTIVITY                                                     * 30154100
*                                                                     * 30154200
*     RELEASE 4.0 = OZ05766                                           * 30154400
*                                                                     * 30154500
*     RELEASE 4.1 = NONE                                              * 30154600
*                                                                     * 30158000
*********************************************************************** 30160000
         TITLE 'HASP CONTROL BLOCK GENERATION MACRO'                    30162000
         SPACE 5                                                        30164000
*                                                                       30166000
*****    $HASPCB  *****      GENERATE HASP CONTROL BLOCKS               30168000
*                                                                       30170000
         SPACE 1                                                        30172000
         MACRO                                                          30174000
         $HASPCB &DOC=NO,&LIST=NO                                       30176000
         GBLC  &PRINT,&GEN,&DATA                                        30178000
         PUSH  PRINT                                                    30180000
         PRINT &PRINT                                                   30182000
         $SVT  DOC=&DOC            GENERATE HASP SSVT DSECT             30184000
         $HCT  DOC=&DOC            GENERATE HASP HCT DSECT              30186000
         $PCE  DOC=&DOC            GENERATE HASP PCE DSECT              30188000
         $BUFFER DOC=&DOC          GENERATE HASP BUFFER DSECT           30190000
         $CMB  DOC=&DOC            GENERATE HASP CMB DSECT              30192000
         $JQE  DOC=&DOC            GENERATE HASP JQE DSECT          R41 30193000
         $JCT  DOC=&DOC            GENERATE HASP JCT DSECT              30194000
         $PIT  DOC=&DOC            GENERATE HASP PIT DSECT              30196000
         $CSA  DOC=&DOC            GENERATE HASP CSA DSECT              30198000
         SPACE 1                                                        30200000
         POP   PRINT                                                    30202000
         PRINT &GEN,&DATA          SET ASSEMBLY PRINT OPTIONS           30204000
         MEND                                                           30206000
         TITLE 'HASP CONSOLE ROUTINES'                                  30208000
         SPACE 5                                                        30210000
HASPCON  START 0                   HASP CONSOLE PROCESSOR               30212000
         SPACE 5                                                        30214000
         COPY  $HASPGEN            COPY HASPGEN PARAMETERS              30216000
         TITLE 'HASP CONSOLE ROUTINES'                                  30218000
         SPACE 5                                                        30220000
HASPCON  $ENTRY CSECT=YES,BASE=BASE2  PROVIDE PROCESSOR ENTRY POINT     30222000
         SPACE 5                                                        30224000
*                                                                       30226000
*                             EXTERNAL REFERENCES                       30228000
*                                                                       30230000
         SPACE 3                                                        30232000
         ENTRY $DOMR               DELETE OPERATOR MESSAGE              30234000
         ENTRY $FRECMBR            FREE CMB                             30236000
         ENTRY $GETCMBR            GET CMB                              30238000
         ENTRY $HASPWTO            HASP WTO SUBTASK                     30240000
         ENTRY $WTOR               MESSAGE BUILD AND BUFFERING          30242000
         ENTRY $WTOCR              ENTRY TO $WTO WITH CMB ROUTINE       30244000
         ENTRY HASPWQUE            BUFFER QUEUING ROUTINE            R4 30246000
         SPACE 5                                                        30248000
         TITLE 'HASP CONTROL BLOCKS'                                    30250000
         SPACE 5                                                        30252000
*                                                                       30254000
*                             DOCUMENTATION OPTIONS FOR THIS ASSEMBLY   30256000
*                                                                       30258000
         SPACE 3                                                        30260000
        $SYSPARM (OFF,GEN,NODATA,NO,NO)                                 30262000
         SPACE 5                                                        30264000
*                                                                       30266000
*                             GENERATE HASP CONTROL BLOCKS              30268000
*                                                                       30270000
         SPACE 3                                                        30272000
        $HASPCB DOC=&DOC,LIST=&LIST  GENERATE HASP CONTROL BLOCKS       30274000
         SPACE 2                                                        30276000
         TITLE 'HASP CONSOLE BUFFERING ROUTINE'                         30278000
*********************************************************************** 30280000
*                                                                     * 30282000
*        $WTO - WRITE TO OPERATOR ROUTINE                             * 30284000
*                                                                     * 30286000
* FUNCTIONS -                                                         * 30288000
*                                                                     * 30290000
*                                                                     * 30292000
*    (2) OBTAIN A CMB FROM THE $SVCMBFQ QUEUE. IF NO CMBS ARE         * 30294000
*        AVAILABLE WAIT THE PROCESSOR OR RETURN WITH ZERO CC AND      * 30296000
*        R15 ZERO. IF $DOMACT IS SPECIFIED REDUCE $SVCOMCT BY         * 30298000
*        ONE AND IF THE COUNT GOES BELOW WDOMMIN SIMULATE NO CMB      * 30300000
*        AVAILABLE. IF NO CMBS ARE AVAILABLE AND THE REQUEST IS       * 30302000
*        FOR A UCMID (RESTRICTED TO COMMAND PROCESSOR) THE            * 30304000
*        $WCOMRES QUEUE IS TESTED FOR THE PRESENCE OF A RESERVED      * 30306000
*        CMB AND USED IF PRESENT.                                     * 30308000
*                                                                     * 30310000
*    (3) INSERT TIME STAMP AND JOB NUMBER (IF REQUESTED).             * 30312000
*                                                                     * 30314000
*    (4) INSERT HASP MESSAGE ID.                                      * 30316000
*                                                                     * 30318000
*    (5) MOVE MESSAGE TEXT INTO CMB.                                  * 30320000
*                                                                     * 30322000
*    (6) QUEUE CMB TO REMOTE CONSOLE OR COMMUNICATIONS SUBTASK.       * 30324000
*                                                                     * 30326000
*    (7) PROVIDE CMB ADDRESS TO CALLER IF $DOMACT REQUESTED.          * 30328000
*                                                                     * 30330000
* INPUT REGISTERS -                                                   * 30332000
*                                                                     * 30334000
*        R0    = $WTO PARAMETERS AS FOLLOWS -                         * 30336000
*        R1    = ADDRESS OF TEXT INCLUDING TWO BYTE MESSAGE ID.       * 30338000
*        R10   = ADDRESS OF JCT BUFFER IF WFJOBN ON.                  * 30340000
*        R13   = ADDRESS OF PCE.                                      * 30342000
*        LINK  = RETURN - 4 BYTES.                                    * 30344000
*        R15   = ENTRY BASE.                                          * 30346000
*                                                                     * 30348000
* OUTPUT REGISTERS -                                                  * 30350000
*                                                                     * 30352000
*        R1    = ADDRESS OF $DOMACT CMB.                              * 30354000
*        R15   = 0 - NO CMB AVAILABLE (CONDITION CODE ZERO),          * 30356000
*                OTHERWISE MESSAGE WAS QUEUED OR SCREENED OUT.        * 30358000
*                                                                     * 30360000
*********************************************************************** 30362000
         EJECT                                                       R4 30364000
*********************************************************************** 30366000
*                                                                     * 30368000
*        LOCAL DEFINITIONS                                            * 30370000
*                                                                     * 30372000
*********************************************************************** 30374000
WPLFLAG  EQU   CMBFLAG-CMBFLAG+CSAW FLAG                             R4 30376000
WPLLEVEL EQU   CMBLEVEL-CMBFLAG+CSAW LIST LEVEL                      R4 30378000
WPLTYPE  EQU   CMBTYPE-CMBFLAG+CSAW FORMAT TYPE                      R4 30380000
WPLLENG  EQU   CMBML-CMBFLAG+CSAW  MESSAGE LENGTH                    R4 30382000
WPLTO    EQU   CMBTO-CMBFLAG+CSAW  TO SYSTEM INFORMATION             R4 30384000
WPLOUT   EQU   CMBOUT-CMBFLAG+CSAW OUTPUT INFORMATION                R4 30386000
WPLRMT   EQU   CMBRMT-CMBFLAG+CSAW REMOTE NUMBER                     R4 30388000
WPLDESC  EQU   CMBDESC-CMBFLAG+CSAW DESCRIPTOR CODES                 R4 30390000
WPLUCMA  EQU   CMBUCMA-CMBFLAG+CSAW UCM AREA                         R4 30392000
WPLROUT  EQU   CMBROUT-CMBFLAG+CSAW LOGICAL CONSOLE ROUTINGS         R4 30394000
WPLLINET EQU   CMBLINET-CMBFLAG+CSAW LINE TYPE FIELD                 R4 30396000
         SPACE 2                                                     R4 30398000
WPLNLOG  EQU   CMBFLAGT+CMBFLAGC+CMBFLAGU+CMBFLAGW NOT LOGICAL CONSOLE  30400000
WPLCONT  EQU   CMBFLAGJ+CMBFLAGD+CMBFLAGS SPECIAL $WTO CONTROLS      R4 30402000
WPLNOLEN EQU   CMBFLAGR            MSG LEN IN R0 FOR STD-FORM MACRO  R4 30404000
         EJECT                                                          30406000
*********************************************************************** 30408000
*                                                                     * 30410000
*        BUFFER QUEUEING PREFIX                                       * 30412000
*                                                                     * 30414000
*********************************************************************** 30416000
         USING CSADSECT,R5                                           R4 30418000
         USING SSVT,R8                                                  30420000
WWFREE   BAL   LINK,WFREE          FREE CMB                             30422000
         SPACE 1                                                     R4 30424000
WTESTW   TM    WPLFLAG,CMBFLAGD    DID CALLER WISH TO WAIT...        R4 30426000
         BO    WSOUT               BR IF NO TO RETURN                R4 30428000
         LM    R0,R14,WSAVREGS      ELSE RESTORE REGISTERS           R4 30430000
        $WAIT  CMB                   AND WAIT FOR A CMB              R4 30432000
         BALR  R15,0               INSURE BASE OK                       30434000
         USING *,R15                                                    30436000
*********************************************************************** 30438000
*              ENTRY POINT                                            * 30440000
*********************************************************************** 30442000
$WTOR    DS    0H                                                       30444000
         STM   R0,R15,WSAVREGS     SAVE CALLERS REGS                    30446000
         L     BASE2,WBASE2        PICK UP BASE                      R4 30448000
         DROP  R15                                                      30450000
         L     R8,$SSVT            POINT TO SSVT                        30452000
         L     R5,$CSAREA          POINT TO WORK AREA                R4 30454000
         BAL   LINK,WSCREEN        FILL OUT WORK AREA AND SCREEN ROUTES 30456000
         EJECT                                                          30458000
*********************************************************************** 30460000
*              INITIALIZE BUFFER FOR PROCESSING                       * 30462000
*********************************************************************** 30464000
         USING CMBDSECT,R2                                              30466000
         LR    R4,R1               POINT TO MESSAGE AREA             R4 30468000
         SLR   R14,R14             ZERO REGISTER                        30470000
         TM    WPLFLAG,CMBFLAGU    UCMID IN WPLOUT                   R4 30472000
         BZ    WTMLACT             CHECK FOR MLWTO ACTIVE IF NOT        30474000
         CLI   WPLUCMA,0           AREA SPECIFIED                    R4 30476000
         BZ    WTMLACT             CHECK FOR QUEUE TO GET CMB        R4 30478000
         C     R14,CSAMLPCE        IS THERE AN MLWTO OWNER           R4 30480000
         BNZ   WTMOWND             SKIP SETTING CONTROL              R4 30482000
         ST    SAVE,CSAMLPCE       CLAIM OWNERSHIP                   R4 30484000
WTMOWND  C     SAVE,CSAMLPCE       IS THIS PCE THE OWNER             R4 30486000
         BNE   WTESTW              TEST FOR WAIT IF NOT                 30488000
WGETRES  ICM   R2,15,$WCOMRES      TEST FOR RESERVED EMPTY              30490000
         BZ    WGETBUF             SKIP RESERVED IF EMPTY               30492000
         L     R0,CMBCMB           PICK UP CHAIN FIELD               R4 30494000
         CS    R2,R0,$WCOMRES      DECHAIN CMB                          30496000
         BNZ   WGETRES             TRY AGAIN IF FAILURE                 30498000
         B     WTESTA              TEST FOR MLWTO CLEARING              30500000
WTMLACT  C     R14,CSAMLPCE        IS THERE AN MLWTO OWNER           R4 30502000
         BZ    WGETRES             GET RESERVED BUFFER IF NOT        R4 30504000
WGETBUF  LM    R2,R3,$SVCMBFQ      PICK UP FREE QUEUE                   30506000
WGETBUFA LTR   R2,R2               CHECK PRESENT                        30508000
         BZ    WTESTW              TEST FOR WAIT IF NONE                30510000
         LR    R1,R3               COPY SECURITY COUNT                  30512000
         L     R0,CMBCMB           POINT TO NEXT CMB                 R4 30514000
         CDS   R2,R0,$SVCMBFQ      DECHAIN                              30516000
         BNZ   WGETBUFA            TRY AGAIN IF FAILURE                 30518000
WTESTA   TM    WPLFLAG,WPLNLOG     IS THIS NOT LOGICAL ROUTED OUTPUT R4 30520000
         BNZ   WBLDCMB             BUILD THE CMB                     R4 30522000
         TM    WPLLEVEL,$DOMACT    IS THIS IMMEDIATE ACTION          R4 30524000
         BZ    WBLDCMB             IF NOT, BUILD CMB                    30526000
         L     R15,$SVCOMCT        PICK UP COMMAND COUNT                30528000
WWCTLOOP LR    R1,R15              COPY                                 30530000
         BCTR  R1,0                REDUCE                               30532000
         CH    R1,WDOMMIN          CHECK FOR BELOW MINIMUM              30534000
         BL    WWFREE              IF LOW FREE UP CMB                   30536000
         CS    R15,R1,$SVCOMCT     SET NEW VALUE                        30538000
         BNE   WWCTLOOP            LOOP                                 30540000
         ST    R2,WSAVREGS+R1*4    SET CMB ADDRESS FOR USER DOM      R4 30542000
         EJECT                                                       R4 30544000
*********************************************************************** 30546000
*                                                                     * 30548000
*        FILL OUT CMB                                                 * 30550000
*                                                                     * 30552000
*        R2    = CMB ADDRESS                                          * 30554000
*        R4    = MESSAGE ADDRESS OR ZERO                              * 30556000
*        R10   = JCT/JQE ADDRESS IF JOB = YES SPECIFIED               * 30558000
*                                                                     * 30560000
*********************************************************************** 30562000
WBLDCMB  MVC   CMBFLAG(14),CSAW    MOVE HEADER                       R4 30564000
         SLR   R3,R3               ZERO LENGTH                       R4 30566000
         IC    R3,CMBML            PICK UP MESSAGE LENGTH            R4 30568000
         BCT   R3,WBLDCMBA         ADJUST COUNTS IF NOT END LINE NULLR4 30570000
         MVI   CMBLINET,WLTEND     FORCE MLWTO TO END                R4 30572000
         STC   R3,CMBML            SET ZERO LENGTH                   R4 30574000
         ST    R3,CSAMLPCE         FREE MLWTO                        R4 30576000
         B     WIDR                QUEUE IT                          R4 30578000
WBLDCMBA LA    R6,2                GET ADJUSTMENT                    R4 30580000
         LA    R7,CMBMSG           ASSUME COMMAND                    R4 30582000
         TM    CMBFLAG,CMBFLAGC    COMMAND                           R4 30584000
         BO    WBLDCMBC            TEST FOR MOVE IF COMMAND          R4 30586000
         MVC   CMBTIME-1(L'CMBTIME+L'CMBJOBID+3),WCMBBLDM MOVE MASK  R4 30588000
         TM    CMBFLAG,CMBFLAGU    THIS UCM                          R4 30590000
         BZ    WBLDCMBO            TEST OTHER SYSTEM                 R4 30592000
         CLI   CMBUCMA,0           MLWTO                             R4 30594000
         BE    WBLDCMBO            TEST OTHER SYSTEM                 R4 30596000
         TM    CMBLINET,WLTCONT    CONTROL LINE                      R4 30598000
         BZ    WBLDCMBD            HANDLE DATA LINE                  R4 30600000
         TIME  DEC                 GET TIME                          R4 30602000
         ST    R0,CMBCMB           SET INTO CHAIN FIELD              R4 30604000
         ED    CMBTIME-1(L'CMBTIME+1),CMBCMB EDIT                    R4 30606000
         MVC   CMBJOBN(9),CMBTIME  COPY TO FORCE DISPLAY AREA        R4 30608000
         B     WBLDCMBT            MOVE TEXT                         R4 30610000
WBLDCMBD MVC   CMBTIME,CMBJOBID    BLANK OUT TIME STAMP              R4 30612000
         TM    CMBLINET,WLTEND     IS THIS AN END LINE               R4 30614000
         BZ    WBLDCMBE            SKIP NEXT IF NOT                  R4 30616000
         SLR   R14,R14             FREE                              R4 30618000
         ST    R14,CSAMLPCE        MLWTO                             R4 30620000
WBLDCMBE LA    R7,CMBMID           ASSUME START AT WTO ORIGIN        R4 30622000
         TM    CMBFLAG,CMBFLAGJ    USER WANT JOB INFO INSERTED       R4 30624000
         BZ    WBLDCMBC            MOVE MESSAGE                      R4 30626000
         BAL   LINK,WBLDJBN        EXTRACT JOB ID, JOB NAME         R41 30627000
         MVC   CMBMID(8),WBLDJBNO  SET JOB ID                       R41 30628000
         MVI   CMBMID+8,C' '       SET BLANK                         R4 30630000
         MVC   CMBMID+9(8),WBLDJNAM  SET JOB NAME                   R41 30632000
         MVI   CMBMID+17,C' '      SET BLANK                         R4 30634000
         LA    R7,CMBMID+18        POINT TO WHERE TEXT STARTS        R4 30636000
         B     WBLDCMBC            MOVE MESSAGE                      R4 30638000
WBLDCMBO TM    CMBFLAG,CMBFLAGW    REMOTE WORKSTATION...             R4 30642000
         BZ    WBLDCMBJ            BR IF NO                          R4 30644000
WBLDCMBN TIME  DEC                 GET TIME                          R4 30658000
         ST    R0,CMBCMB           STORE                             R4 30660000
         ED    CMBTIME-1(L'CMBTIME+1),CMBCMB EDIT                    R4 30662000
WBLDCMBJ TM    CMBFLAG,CMBFLAGJ    USER WANT JOB INFO INSERTED       R4 30664000
         BO    WBLDCMBI            INSERT JOB ID                     R4 30666000
         LA    R7,CMBJOBN          POINT TO JOB NAME FIELD           R4 30668000
         LTR   R4,R4               IS R4 POINTING TO USER MESSAGE    R4 30670000
         BNZ   SKIP10              SKIP NSI                          R4 30672000
         LR    R4,R7               USER HAD BETTER STARTED IN JOBN   R4 30674000
SKIP10   TM    1(R4),X'0F'         USER PUT JOB INFO IN              R4 30676000
         BO    WBLDCMBM            SET HASP ID IF NO                 R4 30678000
         MVC   CMBJOBID,2(R4)      COPY JOB ID                       R4 30680000
         LA    R6,L'CMBJOBID+3     ACCOUNT FOR HDR, JOB ID, BLANK    R4 30682000
         B     WBLDCMBM            SET HASP ID                       R4 30684000
WBLDCMBI BAL   LINK,WBLDJBN        EXTRACT JOB ID, JOB NAME         R41 30685000
         MVC   CMBJOBID,WBLDJBNO   SET JOB ID                       R41 30686000
         MVC   CMBJOBN,WBLDJNAM    SET JOB NAME                     R41 30688000
         MVI   CMBJOBN+8,C' '      BLANK NEXT CHARACTER              R4 30690000
WBLDCMBT LA    R7,CMBTEXT          SET REST OF MESSAGE ADDRESS       R4 30692000
         LTR   R4,R4               MESSAGE ADDRESS ZERO...          R41 30692500
         BNZ   WBLDCMBM            BR IF NO                         R41 30693000
         LR    R4,R7                ELSE SET MESSAGE ADDRESS        R41 30693500
WBLDCMBM MVC   CMBMID,=C'$HASP000 ' SET DUMMY ID                     R4 30694000
         CLI   $SVHASP,255         IS JES2 BEING RESTARTED...        R4 30696000
         BNE   SKIP20              BR IF NO                          R4 30698000
         MVC   CMBMID(1),$CCOMCHR   ELSE SET MESSAGE ID CHARACTER    R4 30700000
SKIP20   UNPK  CMBMID+L'CMBMID-4(3),0(2,R4) SET USERS NUMBER         R4 30702000
         OI    CMBMID+L'CMBMID-2,C'0' FORCE PRINTABLE                R4 30704000
WBLDCMBC LTR   R4,R4               USER MESSAGE BEEN LOCATED         R4 30706000
         BNZ   SKIP30              SKIP NSI                          R4 30708000
         LR    R4,R7               MAKE SAME AS SLOT TO PUT IT IN    R4 30710000
SKIP30   ALR   R4,R6               UP PAST HDR (POSSIBLY JOB ID)     R4 30712000
         SLR   R3,R6               REDUCE MACHINE COUNT              R4 30714000
         BM    WBLDONEB            SET ONE BLANK IF NEGATIVE         R4 30716000
         LA    R14,1(R7,R3)        POINT TO LAST CHARACTER + 1       R4 30718000
         SR    R14,R2              GET TOTAL USEFUL CMB LENGTH       R4 30720000
         S     R14,=A(CMBL)        MAKE SURE NOT TOO BIG             R4 30722000
         BNP   SKIP40              SKIP TRUNCATION                   R4 30724000
         SR    R3,R14              REDUCE BY OVERFLOW                R4 30726000
SKIP40   EX    R3,WEXMVC           MOVE IN MESSAGE                   R4 30728000
         LA    R14,0(R7,R3)        POINT TO LAST CHARACTER           R4 30730000
SKIP60   TM    0(R14),X'BF'        ZERO OR BLANK                     R4 30732000
         BNZ   SKIP50              NOT BLANK OR ZERO                 R4 30734000
         BCT   R14,SKIP60          LOOP                              R4 30736000
SKIP50   SLR   R14,R2              SET NEW USEFUL CMB LENGTH - 1     R4 30738000
         S     R14,=A(CMBMSG-CMB-1) GET LENGTH OF MESSAGE PORTION    R4 30740000
         BNP   SKIP70              SKIP NEXT IF NEGATIVE             R4 30742000
         TM    CMBFLAG,CMBFLAGC    IS THIS A COMMAND                 R4 30744000
         BO    WBLDSETL            SET LENGTH                        R4 30746000
SKIP70   LA    R3,CMBMID+1-CMBMSG  GET MINIMUM LENGTH                R4 30748000
         CR    R14,R3              TOO SMALL                         R4 30750000
         BNL   WBLDSETL            SET LENGTH                        R4 30752000
WBLDONEB LA    R14,CMBMID+1-CMBMSG SET MINIMUM LENGTH WTO            R4 30754000
         MVI   CMBMID,C' '         FORCE BLANK                       R4 30756000
WBLDSETL STC   R14,CMBML           SET LENGTH                        R4 30758000
WIDR     NI    CMBFLAG,255-WPLCONT TURN OFF $WTO CONTROLS            R4 30760000
         MVC   CMBFM,$SVTO         SET FROM ID                       R4 30762000
         B     WWQUE               QUEUE BUFFER                      R4 30764000
         SPACE 1                                                    R41 30764100
WBLDJBN  LA    R0,0(,JCT)          PURIFY 'JCT' ADDRESS             R41 30764200
         S     R0,$JOBQPTR         SUBTRACT JOB QUEUE ORIGIN        R41 30764300
         BM    WBLDJCT             BR IF NOT JQE (MUST BE JCT)      R41 30764400
         C     R0,$JOBQSIZ         TEST AGAIN                       R41 30764500
         BH    WBLDJCT             BR IF NOT JQE (MUST BE JCT)      R41 30764600
         LH    R0,QUEJOBNO(,JCT)            GET JES2 JOB NUMBER     R41 30764700
         CVD   R0,WBLDBLWD                   AND CONSTRUCT          R41 30764800
         NI    WBLDBLWD+5,X'0F'               JCT-FORM              R41 30764900
         MVC   WBLDJBNO+2(6),=X'402020202021'  JES2                 R41 30765000
         ED    WBLDJBNO+2(6),WBLDBLWD+5         JOB ID              R41 30765100
         MVC   WBLDJNAM,QUEJNAME(JCT)  SET JOB NAME                 R41 30765200
         MVC   WBLDJBNO(3),=C'JOB' ASSUME BATCH JOB                 R41 30765300
         CH    R0,=H'10000'        TEST ASSUMPTION                  R41 30765400
         BLR   LINK                RETURN IF VALID                  R41 30765500
         MVC   WBLDJBNO(3),=C'STC' ASSUME STARTED TASK              R41 30765600
         CH    R0,=H'20000'        TEST ASSUMPTION                  R41 30765700
         BLR   LINK                RETURN IF VALID                  R41 30765800
         MVC   WBLDJBNO(3),=C'TSU'  ELSE MUST BE LOGON              R41 30765900
         BR    LINK                RETURN                           R41 30766000
         SPACE 1                                                    R41 30766100
WBLDJCT  MVC   WBLDJBNO,JCTJOBID   SET JOB ID                       R41 30766200
         MVC   WBLDJNAM,JCTJNAME   SET JOB NAME                     R41 30766300
         BR    LINK                RETURN                           R41 30766400
         SPACE 1                                                    R41 30766500
WBLDJBNO EQU   $POSTSAV,8          SAVE AREA FOR JOB ID             R41 30766600
WBLDJNAM EQU   WBLDJBNO+8,8        SAVE AREA FOR JOB NAME           R41 30766700
WBLDBLWD EQU   WBLDJNAM            DOUBLE WORD WORK AREA            R41 30766800
         EJECT                                                       R4 30766900
*********************************************************************** 30768000
*                                                                     * 30770000
*        HASPWQUE - QUEUE CMB FOR CONSOLE SERVICE PROCESSORS          * 30772000
*                                                                     * 30774000
*********************************************************************** 30776000
HASPWQUE DS    0H                                                    R4 30778000
         USING *,R15                                                 R4 30780000
         STM   R0,R15,WSAVREGS     SAVE REGISTERS                    R4 30782000
         L     BASE2,WBASE2        PICK UP BASE                      R4 30784000
         DROP  R15                                                   R4 30786000
         EJECT                                                       R4 30788000
*********************************************************************** 30790000
*                                                                     * 30792000
*        QUEUE CMB                                                    * 30794000
*                                                                     * 30796000
*********************************************************************** 30798000
WWQUE    TM    CMBFLAG,CMBFLAGW    THIS FOR A REMOTE WORKSTATION     R4 30800000
         BZ    WWQUELOC            BR IF NO                          R4 30804000
WWQUERMT L     R4,WQMASK           PICK UP MASK                      R4 30816000
         LR    R0,R4               COPY                              R4 30818000
         N     R0,CMBPRIO-(CMBPRIO-CMBFLAG) PURIFY PRIORITY          R4 30820000
         LA    R1,$BUSYRQ-(CMBCMB-CMB) POINT TO CMB Q                R4 30822000
WWQUERL  LR    R3,R1               PULL UP REAR                         30824000
         L     R1,CMBCMB-CMB(,R1)  POINT TO NEXT                     R4 30826000
         LTR   R1,R1               TEST FOR END                      R4 30828000
         BZ    WWQNOW              QUEUE IT NOW                         30830000
         LR    R14,R4              PURIFY THE                        R4 30832000
         N     R14,CMBPRIO-CMB-(CMBPRIO-CMBFLAG)(,R1) PRIORITY       R4 30834000
         CR    R0,R14              CHECK PRIORITY                       30836000
         BNH   WWQUERL             LOOP                                 30838000
WWQNOW   ST    R2,CMBCMB-CMB(,R3)  QUEUE TO CHAIN                    R4 30840000
         ST    R1,CMBCMB           QUEUE END ON BEHIND               R4 30842000
         OI    $MCONPCE,$MCONACT   SET NEW ACTIVITY                  R4 30844000
         L     SAVE,$MCONPCE       ADDRESS OF REMOTE CONSOLE PCE     R4 30846000
         $POST (SAVE),WORK         POST REMOTE CONSOLE PCE              30848000
         B     WQUERET             EXIT                                 30850000
WWQUELOC L     R0,$BUSYQUE         POINT TO BUSY QUEUE ELEMENT          30852000
WWQUEIT  ST    R0,CMBCMB           SET FOR SUBTASK                   R4 30854000
         CS    R0,R2,$BUSYQUE      TRY TO QUEUE IT                      30856000
         BNE   WWQUEIT             LOOP                                 30858000
         L     R2,=X'40000000'     PICK UP POST CODE                 R4 30860000
         L     R0,$WTOECB          PICK UP THE ECB                   R4 30862000
WTRQPL   LTR   R0,R0               TEST FOR WAITING                  R4 30864000
         BM    WTRP                DO FULL POST IF WAITING           R4 30866000
         CS    R0,R2,$WTOECB       TRY QUICK POST                    R4 30868000
         BNZ   WTRQPL              TRY AGAIN IF NO GO                R4 30870000
         B     WQUERET             RETURN                            R4 30872000
WTRP     LA    R1,$WTOECB          POINT TO ECB                      R4 30874000
         POST  (1)                 POST IT                              30876000
WQUERET  DS    0H                                                       30878000
         LM    R0,R15,WSAVREGS     RESTORE CALLERS REGISTERS            30880000
         LTR   LINK,LINK           SET NON-ZERO CONDITION CODE       R4 30882000
         BP    4(,LINK)            RETURN TO +4 IF STD-FORM MACRO    R4 30884000
         BR    LINK                RETURN TO +0 IF EXECUTE-FORM      R4 30886000
         EJECT                                                          30888000
*********************************************************************** 30890000
*                                                                     * 30892000
*        $WTOC - WRITE TO OPERATOR WITH USER PROVIDED CMB             * 30894000
*                                                                     * 30896000
* FUNCTIONS -                                                         * 30898000
*                                                                     * 30900000
*                                                                     * 30902000
*    (2) INSERT TIME STAMP AND JOB NUMBER (IF REQUESTED).             * 30904000
*                                                                     * 30906000
*    (3) SET HASP MESSAGE ID.                                         * 30908000
*                                                                     * 30910000
*    (4) SHIFT MESSAGE LEFT TWO BYTES (IF ID SPECIFIED).              * 30912000
*                                                                     * 30914000
*    (5) QUEUE CMB TO REMOTE CONSOLE OR COMMUNICATIONS SUBTASK.       * 30916000
*                                                                     * 30918000
* NOTES -                                                             * 30920000
*                                                                     * 30922000
*        THIS ROUTINE IS THE ALTERNATE ENTRY TO $WTO ROUTINE AND      * 30924000
*        HAS THE SAME REQUIREMENTS EXCEPT AS FOLLOWS -                * 30926000
*                                                                     * 30928000
*        (A) R1 MUST POINT TO A CMB GOTTEN FROM THE CMB POOL.         * 30930000
*                                                                     * 30932000
*        (B) THE MESSAGE TEXT MUST BE LOCATED WITHIN THE CMB AT       * 30934000
*            APPROPRIATE LOCATION ( SEE R7 SETTING IN WBLDCMB RTN )   * 30936000
*                                                                     * 30938000
*********************************************************************** 30940000
$WTOCR   DS    0H                                                       30942000
         USING *,R15                                                    30944000
         STM   R0,R15,WSAVREGS     SAVE CALLERS REGISTERS               30946000
         L     BASE2,WBASE2        PICK UP BASE                      R4 30948000
         DROP  R15                                                      30950000
         L     R8,$SSVT            POINT TO SSVT                        30952000
         L     R5,$CSAREA          POINT TO WORK AREA                R4 30954000
         BAL   LINK,WSCREEN        FILL OUT WORK AREA AND SCREEN ROUTES 30956000
         LR    R2,R1               POINT TO CMB                      R4 30958000
         SLR   R4,R4               ZERO USER MESSAGE ADDRESS         R4 30960000
         TM    WPLFLAG,CMBFLAGC    IS THIS A COMMAND                 R4 30962000
         BO    WBLDCMB             ENTER NORMAL PROCESSING           R4 30964000
         TM    WPLFLAG,CMBFLAGU    IS THIS A UCMID                   R4 30966000
         BZ    WBLDCMB             ENTER NORMAL PROCESSING           R4 30968000
         CLI   WPLUCMA,0           AREA SPECIFIED                    R4 30970000
         BZ    WBLDCMB             ENTER NORMAL PROCESSING           R4 30972000
         SLR   R14,R14             ZERO WORK                         R4 30974000
         C     R14,CSAMLPCE        IS THERE AN MLWTO OWNER           R4 30976000
         BNZ   WTOCRT              SKIP IF YES                       R4 30978000
         ST    SAVE,CSAMLPCE       CLAIM OWNERSHIP                   R4 30980000
WTOCRT   C     SAVE,CSAMLPCE       IS THIS PCE THE OWNER             R4 30982000
         BE    WBLDCMB             ENTER NORMAL PROCESSING           R4 30984000
         EJECT                                                       R4 30986000
*********************************************************************** 30988000
*                                                                     * 30990000
*        NON-PROCESS EXIT - RETURN CONDITION TO USER                  * 30992000
*                                                                     * 30994000
*********************************************************************** 30996000
WSOUT    LM    R0,R14,WSAVREGS     RESTORE USER REGISTERS               30998000
         SLR   R15,R15             SET NON-PROCESS RETURN CODE       R4 31000000
         TM    WSAVREGS+LINK*4,X'80'  TEST FOR EXECUTE-FORM MACRO    R4 31002000
         BZ    4(,LINK)            RETURN IF NO TO +4 WITH CC = 0    R4 31004000
         SR    R15,R15              ELSE RESET CC TO 0               R4 31006000
         BR    LINK                 AND RETURN TO +0                 R4 31008000
         EJECT                                                          31010000
*********************************************************************** 31012000
*                                                                     * 31014000
*        SUBROUTINE TO SCREEN OUT LOW LEVEL LOGICAL CONSOLE MSG.      * 31016000
*                                                                     * 31018000
* REGISTERS -                                                         * 31020000
*        R0    = PARAMETER LIST OR ADDRESS OF PARAMETER LIST          * 31022000
*                                                                     * 31024000
*        R2    = LOGICAL CONSOLE MASK                                 * 31026000
*        R3    = TEST REGISTER                                        * 31028000
*        R4    = CONSOLE CONVERSION TABLE POINTER                     * 31030000
*        R5    = REQUESTED LIST LEVEL                                 * 31032000
*        LINK  = RETURN                                               * 31034000
*                                                                     * 31036000
*********************************************************************** 31038000
WSCREEN  DS    0H                                                       31040000
         ICM   R4,15,WSAVREGS+LINK*4  TEST FOR EXECUTE-FORM MACRO    R4 31042000
         BM    WSCLTST             BR IF YES                         R4 31044000
         MVC   CSAW(4),0(R4)        ELSE COPY SHORT-FORM PARAMETERS  R4 31046000
         MVC   WPLRMT,2(4)         ASSUME RMT OR UCM IN PARM LIST    R4 31048000
         TM    WPLFLAG,CMBFLAGW+CMBFLAGU RMT NO./UCMID IN R0   @OZ26405 31050000
         BZ    SKIP80              BR IF NO                          R4 31052000
         STCM  R0,2,WPLRMT          ELSE SET FROM R0                 R4 31054000
SKIP80   TM    WPLFLAG,WPLNOLEN    TEST FOR LENGTH IN R0             R4 31056000
         BZ    WSCTYPE             BR IF NO                          R4 31058000
         STC   R0,WPLLENG           ELSE SET FROM R0                 R4 31060000
         NI    WPLFLAG,255-WPLNOLEN  AND RESET NO-LENGTH FLAG        R4 31062000
         B     WSCTYPE             THEN BR TO CONTINUE               R4 31064000
         SPACE 1                                                     R4 31066000
WSCLTST  TM    WSAVREGS+R0*4+0,CMBFLAGS  IS THIS SHORT-FORM REQUEST  R4 31068000
         BZ    WSCX                MOVE EXTENDED FORM                R4 31070000
         MVC   CSAW(4),WSAVREGS+R0*4 COPY SHORT FORM                 R4 31072000
         MVC   WPLRMT,WSAVREGS+R0*4+2  ASSUME RMT OR UCM             R4 31074000
WSCTYPE  MVI   WPLTYPE,0           INDICATE NO FORMAT                R4 31076000
         MVC   WPLTO,$SYSID        SET OUR SYSTEM ID                 R4 31078000
         XC    WPLOUT+1(7),WPLOUT+1  ZERO OUTPUT INFORMATION FIELD   R4 31080000
         TM    WPLFLAG,WPLNLOG-CMBFLAGC TEST FOR NOT LOGICAL ROUTINGSR4 31082000
         BNZR  LINK                RETURN IF COMPLETE                R4 31084000
         LA    R4,WTORET           POINT TO ROUTING EQUIVALENCE TABLER4 31086000
         SLR   R2,R2               ZERO WORK                         R4 31088000
         IC    R2,WPLRMT           PICK UP ROUTINGS                  R4 31090000
WSCL     SRDL  R2,1                SHIFT BIT INTO R3                 R4 31092000
         LTR   R3,R3               DID WE GET A ONE BIT              R4 31094000
         BNM   SKIP90              SKIP NSI IF NOT                   R4 31096000
         OC    WPLROUT,0(R4)       TURN ON BITS                      R4 31098000
SKIP90   LA    R4,L'WPLROUT(,R4)   POINT TO NEXT                     R4 31100000
         LTR   R2,R2               FINISHED                          R4 31102000
         BNZ   WSCL                LOOP                              R4 31104000
         MVC   WPLDESC,WTODRSTN    SET STANDARD DESCRIPTOR CODES     R4 31106000
         B     WSC                 SKIP MOVE                         R4 31108000
WSCX     LR    R4,R0               POINT TO PARAMETERS               R4 31110000
         MVC   CSAW(14),0(R4)      COPY PARAMETERS                   R4 31112000
WSC      TM    WPLFLAG,WPLNLOG     TEST FOR NOT LOGICAL ROUTED OUTPUTR4 31114000
         BNZR  LINK                RETURN                            R4 31116000
         TM    WPLLEVEL,$DOMACT    IS ACTION REQUIRED                R4 31118000
         BZ    WSCZERO             SKIP FORCE DESC                   R4 31120000
         TM    WPLLEVEL,$ALWAYS    IF $DOMACT ALONE,                 JN 31122100
         BZ    WSCACT                FORCE OS 'ACTION' WTO           JN 31122200
         CLI   WPLLEVEL,$DOMACT+$ACTION IF $DOMACT+$NORMAL OR LESS,  JN 31122300
         BLR   LINK                  LEAVE AS OS 'INFO' WTO          JN 31122400
WSCACT   MVI   WPLDESC,WTODESCA    FORCE ACTION DESCRIPTOR           R4 31122500
         BR    LINK                RETURN                            R4 31124000
WSCZERO  SLR   R4,R4               ZERO LIST LEVEL POINTER           R4 31126000
         IC    R4,WPLLEVEL         PICK UP LEVEL AND PRIORITY        R4 31128000
         SRA   R4,4                GET RID OF PRIORITY               R4 31130000
         ALR   R4,R4               ALIGN                             R4 31132000
         LA    R4,CSALEVEL(R4)     POINT TO MASK                     R4 31134000
         NC    WPLROUT,0(R4)       MASK OUT UNDESIRABLES             R4 31136000
         BR    LINK                RETURN                            R4 31138000
         EJECT                                                          31140000
*********************************************************************** 31142000
*              MISCELLANEOUS ITEMS                                    * 31144000
*********************************************************************** 31146000
WEXMVC   MVC   0(*-*,R7),0(R4)     *** EXECUTE ONLY ***              R4 31148000
WCMBBLDM DC    X'4021204B20204B2020',CL(L'CMBJOBID+2)' '             R4 31150000
WQMASK   DC    0F'0',AL1(0,15,0,0) MASK FOR PRIORITY QUEUING OF CMBS R4 31152000
         DROP  R2                                                       31154000
         DROP  R5                                                    R4 31156000
         DROP  R8                                                    R4 31158000
 TITLE 'HASP CMB SERVICE - $GETCMB - GET CMB(S) ROUTINE'                31160000
*********************************************************************** 31162000
*                                                                     * 31164000
*        $GETCMB - GET ONE OR MORE CONSOLE MESSAGE BUFFERS            * 31166000
*                                                                     * 31168000
* FUNCTIONS                                                           * 31170000
*                                                                     * 31172000
*    (1) CALCULATE NEW VALUE FOR $SVCOMCT AS PER R0.                  * 31174000
*                                                                     * 31176000
*    (2) TEST FOR NUMBER OF REQUESTED CMBS AVAILABLE. IF              * 31178000
*        AVAILABLE, REMOVE THE CMBS FROM THE $SVCMBFQ.                * 31180000
*        IF NOT AVAILABLE, ERROR EXIT.                                * 31182000
*                                                                     * 31184000
*    (3) EXITS SET R1 TO ADDRESS OF CMB OR ZERO.                      * 31186000
*                                                                     * 31188000
* INPUT REGISTERS                                                     * 31190000
*                                                                     * 31192000
*        R0    = +X REDUCE $SVCOMCT BY X, PREVENT GOING TO ZERO       * 31194000
*              = -X REDUCE $SVCOMCT BY X, PREVENT GOING LT 3          * 31196000
*              =  0 NO CHANGE IN $SVCOMCT                             * 31198000
*        R1    = Y NUMBER OF CMBS REQUESTED 1,2,3,...                 * 31200000
*        LINK  = RETURN ADDRESS                                       * 31202000
*        R15   = ENTRY BASE                                           * 31204000
*                                                                     * 31206000
* OUTPUT REGISTERS                                                    * 31208000
*                                                                     * 31210000
*        R1    = ADDRESS OF FIRST CMB OR ZERO. CHAIN FIELD            * 31212000
*                POINTS TO NEXT OR ZERO.                              * 31214000
*                                                                     * 31216000
*********************************************************************** 31218000
$GETCMBR DS    0H                                                       31220000
         USING *,R15                                                    31222000
         STM   R0,R15,WSAVREGS     SAVE CALLERS REGISTERS               31224000
         L     BASE2,WBASE2        PICK UP BASE                      R4 31226000
         DROP  R15                                                      31228000
         L     R8,$SSVT            POINT TO SSVT                        31230000
         USING SSVT,R8                                                  31232000
         SR    R1,R1               ZERO FOR EXIT                        31234000
         SR    R3,R3               SET COMPARE REGISTER                 31236000
         L     R15,$SVCOMCT        PICK UP COUNT                        31238000
         ICM   R0,15,WSAVREGS+R0*4 PICK UP R0                           31240000
         BZ    WGNOCT              SKIP IF NO COUNTING                  31242000
         BP    WGADJ               IF POSITIVE DO NORMAL SUB            31244000
         LA    R3,$DOMMIN          SET LOW BOUND                        31246000
         LPR   R0,R0               MAKE POSITIVE                        31248000
WGADJ    LR    R2,R15              SET FOR CALCULATIONS                 31250000
         SR    R2,R0               REDUCE COUNT                         31252000
         CR    R2,R3               CHECK FOR TOO LOW                    31254000
         BNH   WGERR               ERROR EXIT                           31256000
         CS    R15,R2,$SVCOMCT     TRY TO STORE                         31258000
         BNE   WGADJ               LOOP                                 31260000
WGNOCT   L     R4,WSAVREGS+R1*4    PICK UP COUNT                        31262000
WGNOCTA  LM    R2,R3,$SVCMBFQ      POINT TO FREE QUEUE                  31264000
         USING CMBDSECT,R2                                              31266000
WGNOCTL  LTR   R2,R2               ANY THERE                            31268000
         BZ    WGERRR              EXIT IF NONE THERE                   31270000
         L     R6,CMBCMB           PICK UP CHAIN                     R4 31272000
         LR    R7,R3               COPY SECURITY COUNT                  31274000
         CDS   R2,R6,$SVCMBFQ      TAKE CMB AWAY                        31276000
         BNE   WGNOCTL             LOOP                                 31278000
         ST    R1,CMBCMB           FREE TO TEMP                      R4 31280000
         LR    R1,R2                CHAIN                               31282000
         BCT   R4,WGNOCTA          LOOP                                 31284000
WGERR    ST    R1,WSAVREGS+R1*4    SET ANSWER                           31286000
         LM    R0,R15,WSAVREGS     SET USER REGISTERS                   31288000
         LTR   R1,R1               SET CONDITION CODES                  31290000
         BR    LINK                EXIT                                 31292000
WGERRR   LR    R4,R1               SAVE FREE POINTERS WE HAVE           31294000
         LTR   R6,R0               TEST FOR UP COUNT                    31296000
         BZ    WGERRRA             SKIP IF NOT                          31298000
         BAL   LINK,WCOUNT         UP COUNT                             31300000
         BCT   R6,*-4              LOOP                                 31302000
WGERRRA  LTR   R2,R4               TEST FOR ANY CMBS                    31304000
         BZ    WGERRRB             IF NOT EXIT                          31306000
         L     R4,CMBCMB           LOOK AT NEXT                      R4 31308000
         BAL   LINK,WFREE          FREE                                 31310000
         B     WGERRRA             LOOP                                 31312000
WGERRRB  LR    R1,R2               COPY ANSWER                          31314000
         B     WGERR               EXIT                                 31316000
         DROP  R8                                                       31318000
         DROP  R2                                                       31320000
 TITLE 'HASP CMB SERVICE - $DOM - DELETE OPERATOR MESSAGE'              31322000
*********************************************************************** 31324000
*                                                                     * 31326000
*        $DOM - DELETE OPERATOR MESSAGE FOR HASP PROCESSOR            * 31328000
*                                                                     * 31330000
* FUNCTIONS                                                           * 31332000
*                                                                     * 31334000
*    (1) INCREASE THE CMB COUNT ALLOWABLE FOR COMMANDS AND            * 31336000
*        SPECIAL PURPOSES SUCH AS $DOMACT MESSAGES.                   * 31338000
*                                                                     * 31340000
*    (2) TURN $DOMACT INDICATOR OFF REGARDLESS OF WHERE THE CMB       * 31342000
*        IS, IE QUEUED TO SUB-TASK, IN PROCESS OF OS WTO, OR ON       * 31344000
*        DOM QUEUE.                                                   * 31346000
*                                                                     * 31348000
*    (3) LOCATE THE CMB ON THE ACTION QUEUE $DOMQUE, IF LOCATED       * 31350000
*        REMOVE THE CMB, FREE IT, AND ISSUE OS DOM.                   * 31352000
*                                                                     * 31354000
*    (4) RETURN.                                                      * 31356000
*                                                                     * 31358000
* INPUT REGISTERS                                                     * 31360000
*                                                                     * 31362000
*        R1    = ADDRESS OF CMB TO DOM                                * 31364000
*        BASE1 = ADDRESS OF HCT                                       * 31366000
*        LINK  = RETURN ADDRESS                                       * 31368000
*        R15   = ENTRY BASE                                           * 31370000
*                                                                     * 31372000
*********************************************************************** 31374000
$DOMR    DS    0H                                                       31376000
         USING *,R15                                                    31378000
         STM   R0,R15,WSAVREGS     SAVE CALLERS REGISTERS               31380000
         L     BASE2,WBASE2        PICK UP BASE                      R4 31382000
         DROP  R15                                                      31384000
         L     R8,$SSVT            POINT TO SSVT                        31386000
         USING SSVT,R8                                                  31388000
         BAL   LINK,WCOUNT         COUNT CMB                            31390000
         L     R4,WSAVREGS+R1*4    PICK UP CMB ADDRESS                  31392000
         USING CMBDSECT,R4                                              31394000
         NI    CMBLEVEL,255-$DOMACT TURN OFF DOM ACTION              R4 31396000
         $POST $HASPECF,CMB        POST CMB                             31398000
         LA    R2,$DOMQUE-(CMBCMB-CMB) POINT TO CMB ZERO             R4 31400000
WDOMLOOP LR    R15,R2              PULL UP REAR                         31402000
         L     R2,CMBCMB-CMB(,R2)  POINT TO NEXT CMB                 R4 31404000
         LTR   R2,R2               TEST FOR END                      R4 31406000
         BZ    WDOMRETA            EXIT IF END                          31408000
         CR    R2,R4               CMB MATCH                            31410000
         BNE   WDOMLOOP            LOOP                                 31412000
         MVC   CMBCMB-CMB(,R15),CMBCMB REMOVE CMB                    R4 31414000
         ICM   R4,15,CMBDOMID      PICK UP DOM ID                    R4 31416000
         BAL   LINK,WFREE          FREE CMB                             31418000
         LR    R1,R4               GET DOM ID                           31420000
         DOM   MSG=(1)             DELETE MESSAGE                       31422000
WDOMRETA LM    R0,R15,WSAVREGS     RESTORE REGISTERS                    31424000
         BR    LINK                EXIT                                 31426000
         DROP  R8                                                       31428000
         DROP  R4                                                       31430000
 TITLE 'HASP CMB SERVICE - $FRECMB - FREE CMB ROUTINE'                  31432000
*********************************************************************** 31434000
*                                                                     * 31436000
*        $FRECMB - FREE A CONSOLE MESSAGE BUFFER                      * 31438000
*                                                                     * 31440000
* FUNCTIONS                                                           * 31442000
*                                                                     * 31444000
*                                                                     * 31446000
*    (1) IF R1 BYTE 0 NOT 0, INCREASE THE CMB COUNT ALLOWABLE         * 31448000
*        FOR COMMANDS AND SPECIAL PURPOSES SUCH AS $DOMACT            * 31450000
*        MESSAGES.                                                    * 31452000
*                                                                     * 31454000
*    (2) FREE THE CMB INTO THE RESERVE CMB (IF RESERVE EMPTY)         * 31456000
*        OR THE FREE QUEUE.                                           * 31458000
*                                                                     * 31460000
*    (3) $POST CMB.                                                   * 31462000
*                                                                     * 31464000
* INPUT REGISTERS                                                     * 31466000
*                                                                     * 31468000
*        R1    = ADDRESS OF CMB (HIGH BYTE ZERO)                      * 31470000
*        BASE1 = ADDRESS OF HCT                                       * 31472000
*        LINK  = RETURN ADDRESS                                       * 31474000
*        R15   = ENTRY BASE                                           * 31476000
*                                                                     * 31478000
*********************************************************************** 31480000
$FRECMBR DS    0H                                                       31482000
         USING *,R15                                                    31484000
         STM   R0,R15,WSAVREGS     SAVE CALLERS REGISTERS               31486000
         L     BASE2,WBASE2        PICK UP BASE                      R4 31488000
         DROP  R15                                                      31490000
         L     R8,$SSVT            POINT TO SSVT                        31492000
         USING SSVT,R8                                                  31494000
         CLI   WSAVREGS+R1*4,0     TEST FOR COUNT REQUIRED              31496000
         BZ    WFR                 SKIP COUNTING                        31498000
         BAL   LINK,WCOUNT         COUNT                                31500000
WFR      L     R2,WSAVREGS+R1*4    POINT TO CMB TO FREE                 31502000
         LA    R2,0(0,R2)          PURIFY ADDRESS                       31504000
         BAL   LINK,WFREE          FREE THE CMB                         31506000
         $POST $HASPECF,CMB        POST CMB                             31508000
         LM    R0,R15,WSAVREGS     RESTORE CALLERS REGISTERS            31510000
         BR    LINK                RETURN                               31512000
*********************************************************************** 31514000
*                                                                     * 31516000
*        SUBROUTINE TO FREE CMB (ALSO USED BY COMM SUB-TASK)          * 31518000
*                                                                     * 31520000
*********************************************************************** 31522000
         USING CMBDSECT,R2                                              31524000
WFREE    ICM   R0,15,$WCOMRES      MLWTO HAVE A CMB                  R4 31526000
         BNZ   WFREER              TRY SVC 34 RESERVE IF YES         R4 31528000
         ST    R0,CMBCMB           SET ZERO CHAIN                    R4 31530000
         CS    R0,R2,$WCOMRES      GIVE MLWTO ONE                    R4 31532000
         BNZ   WFREE               LOOP IF NO GO                     R4 31534000
         BR    LINK                RETURN                            R4 31536000
WFREER   ICM   R0,15,$SVCMBRQ      RESERVE QUEUE EMPTY               R4 31538000
         BNZ   WFREEN              IF NOT, DO NORMAL FREE               31540000
         ST    R0,CMBCMB           SET ZERO CHAIN                    R4 31542000
         CS    R0,R2,$SVCMBRQ      STORE IN RESERVE QUEUE               31544000
         BNZ   WFREE               IF NO STORE LOOP                     31546000
         BR    LINK                RETURN                               31548000
WFREEN   LM    R0,R1,$SVCMBFQ      PICK UP FREE QUEUE                   31550000
WFREENL  LR    R3,R1               COPY SECURITY COUNT                  31552000
         BCTR  R3,0                COUNT                                31554000
         ST    R0,CMBCMB           SET OLD POINTER                   R4 31556000
         CDS   R0,R2,$SVCMBFQ      QUEUE IT                             31558000
         BNE   WFREENL             LOOP                                 31560000
         BR    LINK                RETURN                               31562000
         DROP  R2                                                       31564000
*********************************************************************** 31566000
*                                                                     * 31568000
*        SUBROUTINE TO UP COMMAND COUNT                               * 31570000
*                                                                     * 31572000
*********************************************************************** 31574000
WCOUNT   L     R1,$SVCOMCT         PICK UP COUNT                        31576000
WCOUNTA  LA    R0,1(0,R1)          UP COUNT                             31578000
         CS    R1,R0,$SVCOMCT      TRY TO COUNT                         31580000
         BNE   WCOUNTA             LOOP                                 31582000
         BR    LINK                RETURN                               31584000
         DROP  R8                                                       31586000
 TITLE 'HASP CONSOLE PROCESSOR  --  COMMUNICATIONS TASK ROUTINE'        31588000
         SPACE 5                                                        31590000
*********************************************************************** 31592000
*                                                                     * 31594000
*        THIS CODE, WHILE A PART OF HASP, OPERATES UNDER THE          * 31596000
*        CONTROL OF THE HASP COMMUNICATIONS TASK TO DEQUEUE           * 31598000
*        OPERATOR MESSAGES GENERATED BY HASP AND PASS SUCH            * 31600000
*        MESSAGES, VIA 'WTO' TO OS FOR PROCESSING. THIS CODE          * 31602000
*        IS ACTIVATED BY A HASP 'POST', INDICATING ONE OR             * 31604000
*        MORE MESSAGES HAS BEEN QUEUED FOR PROCESSING.                * 31606000
*        THIS ROUTINE THEN --                                         * 31608000
*                                                                     * 31610000
*              1. DEQUEUES THE MESSAGE FROM THE HASP QUEUE.           * 31612000
*                                                                     * 31614000
*                                                                     * 31616000
*              3. FOR ACTION MESSAGES ISSUES AN OS 'WTO'              * 31618000
*                 QUEUES THE CMB TO $DOMQUEA FOR ASYNC PROCESSOR      * 31620000
*                 TO SERVICE.                                         * 31622000
*                                                                     * 31624000
*              4. FOR UCMID OF ZERO ISSUE SVC 34 REQUEST.             * 31626000
*                                                                     * 31628000
*              5. FOR NON-ACTION MESSAGES FREES THE CMB, POSTS        * 31630000
*                 HASP, AND ISSUES OS 'WTO'.                          * 31632000
*                                                                     * 31634000
*              6. CONTINUES THE ABOVE STEPS UNTIL THE HASP            * 31636000
*                 MESSAGE QUEUE IS EXHAUSTED.                         * 31638000
*                                                                     * 31640000
*              7. ENTERS AN OS 'WAIT' STATE TO AWAIT ANOTHER          * 31642000
*                 'POST' BY HASP.                                     * 31644000
*                                                                     * 31646000
*        NOTE THAT ONCE THIS PROCESSOR BEGINS A MLWTO FOR THE         * 31648000
*        COMMAND PROCESSOR, ALL OTHER WTO (NON UCMID) REQUESTS        * 31650000
*        ARE DELAYED UNTIL THE END LINE IS SENT.                      * 31652000
*                                                                     * 31654000
*********************************************************************** 31656000
         EJECT                                                          31658000
$HASPWTO NULL  *                   INITIAL ENTRY POINT FROM ATTACH      31660000
         BALR  BASE2,0             ESTABLISH                            31662000
         USING *,BASE2              BASE                                31664000
         LR    BASE1,R1            RELOAD HCT ADDRESS                R4 31666000
         L     BASE2,WBASE2        LOAD NORMAL BASE                  R4 31668000
         USING HASPCON,BASE2                                            31670000
         POST  $WTOPECB            POST HASP INITIALIZATION          R4 31672000
         L     R8,$SSVT            POINT TO SSVT                        31674000
         L     R5,$CSAREA          POINT TO WORK AREA                   31676000
         B     WTOWAIT             GO WAIT FOR HASP POST                31678000
         USING SSVT,R8                                                  31680000
         USING CSADSECT,R5                                              31682000
WTOQMT   NULL  *                   MESSAGE QUEUE EMPTY                  31684000
         TM    $STATUS,$SYSEXIT    TEST FOR WITHDRAWAL OF HASP          31686000
         BZ    WTOWAIT             WAIT FOR MORE MESSAGES               31688000
         SVC   3                   EXIT TO TERMINATE TASK               31690000
WTOWAIT  WAIT  ECB=$WTOECB         WAIT FOR HASP POST                   31692000
         MVI   $WTOECB,0           RESET ECB                            31694000
*********************************************************************** 31696000
*                                                                     * 31698000
*        EXAMINE INPUT QUEUE $BUSYQUE AND REMOVE ALL CMBS             * 31700000
*                                                                     * 31702000
*********************************************************************** 31704000
WTODQ    NI    CSACONCT,255-1      TURN OFF NO WTO INDICATOR         R4 31706000
         USING CMBDSECT,R1                                              31708000
         L     R1,$BUSYQUE         POINT TO LAST QUEUED CMB             31710000
         LTR   R1,R1               PRESENT                              31712000
         BZ    WSBSYQ              IF NOT LOOK AT WORK QUEUE            31714000
         SLR   R2,R2               PULL ALL CMBS                        31716000
WSBQL    CS    R1,R2,$BUSYQUE       OFF THE QUEUE                       31718000
         BNE   WSBQL               TRY AGAIN IF NOT OFF                 31720000
*********************************************************************** 31722000
*                                                                     * 31724000
*        REVERSE CMB ORDER TO FIFO                                    * 31726000
*                                                                     * 31728000
*********************************************************************** 31730000
WSBQLL   L     R0,CMBCMB           POINT TO NEXT                     R4 31732000
         ST    R2,CMBCMB           SWITCH THE                        R4 31734000
         LR    R2,R1                ORDER                               31736000
         LTR   R1,R0                OF CMBS                             31738000
         BNZ   WSBQLL              CONTINUE                             31740000
         EJECT                                                          31742000
*********************************************************************** 31744000
*                                                                     * 31746000
*        PLACE CMBS ON WORK QUEUE AND REMOVE FIRST ELIGIBLE CMB       * 31748000
*                                                                     * 31750000
*********************************************************************** 31752000
WTQL     L     R4,WQMASK           PICK UP MASK                      R4 31754000
         LR    R0,R4               PURIFY                            R4 31756000
         N     R0,CMBPRIO-CMB-(CMBPRIO-CMBFLAG)(,R2) PRIORITY        R4 31758000
         LA    R1,$CONWKQ-(CMBCMB-CMB) POINT TO WORK QUEUE           R4 31760000
WTQLL    LR    R3,R1               PULL UP REAR                         31762000
         L     R1,CMBCMB           POINT TO NEXT CMB                 R4 31764000
         LTR   R1,R1               CHECK FOR END                        31766000
         BZ    WTQNOW              QUEUE IT NOW IF END                  31768000
         LR    R14,R4              PURIFY THE                        R4 31770000
         N     R14,CMBPRIO-(CMBPRIO-CMBFLAG) PRIORITY                R4 31772000
         CR    R0,R14              CHECK PRIORITY                       31774000
         BNH   WTQLL               LOOP IF NOT HIGH                     31776000
WTQNOW   L     R14,CMBCMB-CMB(,R2) NEXT CMB IN TEMPORARY Q           R4 31778000
         ST    R1,CMBCMB-CMB(,R2)  PUT LOW PRIORITY BEHIND           R4 31780000
         ST    R2,CMBCMB-CMB(,R3) PUT CURRENT IN QUEUE               R4 31782000
         LTR   R2,R14              POINT TO FIRST CMB IN TEMP           31784000
         BNZ   WTQL                LOOP IF NOT VOID                     31786000
WSBSYQ   LA    R1,$CONWKQ-(CMBCMB-CMB) POINT TO CMB ZERO             R4 31788000
WSBSYQL  LR    R2,R1               SAVE POINTER TO PREVIOUS             31790000
         L     R1,CMBCMB           POINT TO NEXT                     R4 31792000
         LTR   R1,R1               TEST FOR END                         31794000
         BZ    WTOQMT              WAIT IF YES                          31796000
         CLI   CSACONCT,0          IS MLWTO IN PROCESS                  31798000
         BZ    WSBSYQE             DEQUEUE IF NOT                       31800000
         TM    CMBFLAG,CMBFLAGU    DOES CMBOUT CONTAIN UCMID         R4 31802000
         BZ    WSBSYQL             LOOP IF NOT                          31804000
         TM    CMBFLAG,CMBFLAGC    THIS A COMMAND                    R4 31806000
         BO    WSBSYQL             LOOP IF YES                       R4 31808000
         CLI   CMBUCMA,0           IS AREA SPECIFIED                 R4 31810000
         BZ    WSBSYQL             LOOP IF GENERAL                      31812000
WSBSYQE  MVC   CMBCMB-CMB(,R2),CMBCMB REMOVE FROM QUEUE              R4 31814000
         EJECT                                                          31816000
*********************************************************************** 31818000
*                                                                     * 31820000
*        FILL OUT WTO LIST AND ISSUE WTO                              * 31822000
*                                                                     * 31824000
*********************************************************************** 31826000
         MVC   CSANFM,CMBFM        MOVE THE FROM INFORMATION         R4 31828000
         MVC   CSADESC(CSALSIZ-2),WTODRSTN MOVE DEFAULTS TO TRAILLER    31830000
         MVC   CSAMCS,WMCSSTAN     SET STANDARD MCS FLAGS               31832000
         SLR   R2,R2               ZERO WORK                         R4 31834000
         SLR   R6,R6               ZERO UCMID REGISTER               R4 31836000
         LA    R0,128-1            SET MAXIMUM TEXT LENGTH - 1       R4 31838000
         TM    CMBFLAG,WPLNLOG     IS THIS NOT LOGICAL ROUTE         R4 31840000
         BZ    WTOLOG              HANDLE LOGICAL ROUTINGS           R4 31842000
         TM    CMBFLAG,CMBFLAGC    DOES THIS CONTAIN A COMMAND       R4 31844000
         BO    WS34                HANDLE SVC 34 PROCESSING          R4 31846000
*        THE CMB CONTAINS A UCMID RESPONSE                           R4 31856000
         IC    R6,CMBUCM           PICK UP THE UCMID                 R4 31858000
         OI    CSAMCS,WOSUCMF      SET UCMID AND RESPONSE            R4 31860000
         CLI   CMBUCMA,0           IS THIS MLWTO                     R4 31862000
         BZ    WTOWTO              DO NORMAL WTO                     R4 31864000
         MVI   CSAMCS+1,WMCSML     SET MLWTO MODE                    R4 31866000
         MVI   CSADESC,WDOUTLN     SET NEW DESCRIPTOR CODES          R4 31868000
         MVI   CSADESC+1,WDCONTID  FOR OUT OF LINE RESPONSES         R4 31870000
         MVC   CSALINET,CMBLINET   MOVE LINE TYPE                    R4 31872000
         MVC   CSALAREA,CMBUCMA    MOVE AREA                         R4 31874000
         LA    R0,34-1             SET MAXIMUM CONTROL LENGTH - 1    R4 31876000
         TM    CMBLINET,WLTCONT    IS THIS A CONTROL LINE            R4 31878000
         BO    WTOWTO              DO NORMAL WTO                     R4 31880000
         LA    R0,70-1             SET MAXIMUM SECONDARY LENGTH - 1  R4 31882000
         ICM   R6,14,CSACONCT+1    PICK UP CONNECT ID                R4 31884000
         TM    CMBLINET,WLTEND     IS THIS END                       R4 31886000
         BZ    WTOWTO              DO NORMAL WTO IF NOT              R4 31888000
         OI    CSACONCT,8          SET END LINE                      R4 31890000
         B     WTOWTO              DO NORMAL WTO                     R4 31892000
         EJECT                                                          31952000
*********************************************************************** 31954000
*                                                                     * 31956000
*        ISSUE SVC 34 FOR COMMAND PROCESSOR                           * 31958000
*                                                                     * 31960000
*********************************************************************** 31962000
WS34     DS    0H                                                    R4 31964000
         IC    R2,CMBML            PICK UP LENGTH                    R4 31966000
         BCTR  R2,0                GET MACHINE COUNT                 R4 31968000
         EX    R2,WS34MVC          MOVE ENTIRE TEXT                  R4 31970000
         LA    R2,5(0,R2)          GET TOTAL LENGTH                  R4 31972000
WS34C    XC    CSAMCS,CSAMCS       ZERO MCS FLAGS                    R4 31974000
         STC   R2,CSAMSGL+1        SET LENGTH                        R4 31976000
         SLR   R0,R0               INSURE UCMID XERO                 R4 31978000
         LR    R4,R1               SAVE CMB ADDRESS                  R4 31980000
         LA    R1,CSAWTOL          POINT TO WTOL FOR SVC 34          R4 31982000
         OI    CSACONCT,1          SUPPRESS WTO                      R4 31984000
         SVC   34                  ISSUE COMMAND REQUEST             R4 31986000
         LR    R1,R4               RESTORE CMB ADDRESS               R4 31988000
         TM    CMBFLAG,CMBFLAGU    UCM SPECIFIED                     R4 31990000
         BZ    WNRMFRE             FREE CMB IF NO UCM                R4 31992000
         CLI   CMBUCM,X'FF'        SPECIAL UCM                       R4 31994000
         BNE   WNRMFRE             FREE THE CMB IF GOOD UCMID           31996000
         L     R2,$PITABLE         POINT TO FIRST PIT                   31998000
         USING PITDSECT,R2                                              32000000
WPITL    TM    PITFLAGS,PITSIVER+PITSIERR ARE WE STARTING PIT           32002000
         BM    WPITF               SIVER ON, SIERR OFF BR               32004000
         L     R2,PITNEXT          POINT TO NEXT PIT                 R4 32006000
         LTR   R2,R2               TEST FOR VALID PIT ADDRESS        R4 32008000
         BNZ   WPITL               BR IF SO                          R4 32010000
         B     WNRMFRE             SHOULD NEVER HAPPEN EXIT             32012000
WPITF    LTR   R15,R15             DID SVC 34 SAY OK                    32014000
         BZ    WPITOK              ALLOW USE OF PIT IF YES              32016000
         L     R0,$SVPIDLE         PICK UP PIT IDLE COUNT               32018000
WPITCSL  LTR   R14,R0              COPY AND TEST                        32020000
         BZ    WPITOK              ACCEPT USER STARTED INIT             32022000
         BCTR  R14,0               DECREMENT COUNT                      32024000
         CS    R0,R14,$SVPIDLE     ALTER COUNT                          32026000
         BNZ   WPITCSL             LOOP IF NOT ALTERED                  32028000
         OI    PITFLAGS,PITSIERR   SET REJECTION FLAG                   32030000
         B     WNRMFRE             FREE THE CMB                         32032000
WPITOK   NI    PITFLAGS,255-PITSIVER ALLOW SELECTION                    32034000
         TS    $SVJOB              FAKE $$POST OF HASPXEQ               32036000
*                                  FREE CMB WILL COMPLETE $$POST        32038000
         B     WNRMFRE             FREE CMB                             32040000
WS34MVC  MVC   CSAMSG(*-*),CMBMSG  *** EXECUTE ONLY ***              R4 32042000
         DROP  R2                                                       32044000
         EJECT                                                          32046000
WTOLOG   MVC   CSADESC(4),CMBDESC+CMBROUT-CMBROUT COPY CODES         R4 32048000
         CLC   CSAROUTE,WTORET     TEST FOR LOG ONLY                    32050000
         BNE   WTOWTO              SKIP NEXT INSTRUCTION                32052000
         OI    CSAMCS,WTOHCPY      SET FOR HARD COPY ONLY               32054000
WTOWTO   NULL  *                   SEND MESSAGE                         32056000
         IC    R2,CMBML            PICK UP LENGTH                    R4 32058000
         SH    R2,=Y(CMBMID-CMBMSG+1) SET MACHINE MOVE COUNT         R4 32060000
         BP    WTOTRUNC            CHECK FOR TOO LONG                R4 32062000
         SLR   R2,R2               FORCE ZERO                        R4 32064000
         MVC   CSAPRE,WCMBBLDM+1   SET BLANK INTO PREFIX             R4 32066000
         BCT   R2,WTOMPRE          SKIP MOVE                         R4 32068000
WTOTRUNC CR    R2,R0               TRUNCATE REQUIRED                 R4 32070000
         BNH   *+6                 SKIP NSI IF NOT                      32072000
         LR    R2,R0               TRUNCATE                             32074000
         EX    R2,WTOMVC           MOVE TEXT TO WTO                     32076000
         MVC   CSAPRE,CMBMSG       SET PREFIX INFORMATION            R4 32078000
WTOMPRE  LA    R2,5(,R2)           LENGTH FOR WTO                    R4 32080000
         STC   R2,CSAMSGL+1        SET COUNT IN WTO                     32082000
         LA    R2,CSAWTOL(R2)      POINT TO MESSAGE END + 1          R4 32084000
         MVC   0(CSALSIZ,R2),CSADESC MOVE TRAILLER FIELDS               32086000
         TM    CMBLEVEL,$DOMACT    IS DOM ACTION REQUIRED            R4 32088000
         BZ    WNDOM               IF NOT DO NORMAL PROCESSING          32090000
         LR    R4,R1               SAVE CMB POINTER                     32092000
         WTO   MF=(E,CSAWTOL)      SEND MESSAGE                         32094000
         STCM  R1,15,CMBDOMID-CMB(R4) SAVE DOM ID                    R4 32096000
         L     R1,$DOMQUEA         POINT TO OLD ACTION CMB              32098000
WDQNXT   ST    R1,CMBCMB-CMB(,R4)  PUT OLD BEHIND                    R4 32100000
         CS    R1,R4,$DOMQUEA      QUEUE TO HEAD OF QUEUE               32102000
         BNE   WDQNXT              LOOP IF NOT QUEUED                   32104000
         $$POST ELMT=$SVASYNC,R11=HCT POST ASYNC PCE                    32106000
         B     WTODQ               LOOK FOR MORE WORK                   32108000
WNDOM    DS    0H                                                       32110000
WNRMFRE  LR    R2,R1               POINT TO CMB TO FREE              R4 32112000
         BAL   LINK,WFREE          FREE CMB                          R4 32114000
WPOSTH   $$POST TYPE=CMB,R11=HCT   POST FOR CMB                      R4 32116000
         TM    CSACONCT,1          IS SUPPRESS WTO ON                R4 32118000
         BO    WTODQ               LOOK FOR MORE WORK                R4 32120000
         TM    CSACONCT,2          IS SKIP MLWTO ON                  R4 32122000
         BO    WTOSKIP             SKIP THIS WTO                     R4 32124000
         LR    R0,R6               COPY UCMID WITH CONNECT ID        R4 32126000
         WTO   MF=(E,CSAWTOL)      SEND MESSAGE                      R4 32128000
         TM    CSAMCS+1,WMCSML     IS THIS MLWTO                     R4 32130000
         BZ    WTODQ               LOOK FOR MORE WORK                R4 32132000
         TM    CSACONCT,8          DID WE SAY END                    R4 32134000
         BO    WTORESET            RESET MLWTO IF YES                R4 32136000
         ST    R1,CSACONCT         SET CONNECT                       R4 32138000
         MVI   CSACONCT,4          SET MLWTO ON                      R4 32140000
         LTR   R15,R15             DID OPERATOR DELETE               R4 32142000
         BZ    WTODQ               LOOK FOR MORE WORK                R4 32144000
         MVI   CSACONCT,2          SET SKIPPING MLWTO                R4 32146000
         B     WTODQ               LOOK FOR MORE WORK                R4 32148000
WTOSKIP  TM    CSACONCT,8          DID WE SAY END                    R4 32150000
         BZ    WTODQ               LOOK FOR MORE WORK                R4 32152000
WTORESET SLR   R1,R1               RESET                             R4 32154000
         ST    R1,CSACONCT         FLAGS AND CONNECT IDS             R4 32156000
         B     WTODQ               LOOK FOR MORE WORK                R4 32158000
WTOMVC   MVC   CSAMSG(*-*),CMBMID  *** EXECUTE ONLY ***              R4 32160000
         DROP  R8                                                       32162000
         DROP  R5                                                    R4 32164000
         EJECT                                                       R4 32166000
*                                                                       32168000
*              H A S P / O S  --  ROUTING EQUIVALENCE TABLE  --         32170000
*                                                                       32172000
*              THE TABLE BELOW REFLECTS THE OS/MCS CONSOLE ROUTING      32174000
*              BITS WHICH WILL BE USED TO CORRESPOND WITH THE HASP      32176000
*              LOGICAL CONSOLE ROUTING BITS AS INDICATED...             32178000
WTORET   DS    0H                  TABLE START                          32180000
         DC    X'0000'             HASP LOG = (FUNCTION DONE BY HRDCPY) 32182000
         DC    X'0040'             HASP ERROR = SYSTEM ERROR/MAINT.     32184000
         DC    X'0200'             HASP UR = UNIT RECORD POOL           32186000
         DC    X'0100'             HASP TP = TELEPROCESSING CONTROL     32188000
         DC    X'3C00'             HASP TAPE = DA AND TAPE POOL         32190000
*                                        AND = DA AND TAPE LIBRARY      32192000
         DC    X'C000'             HASP MAIN = MASTER CONSOLE           32194000
*                                        AND = MASTER INFORMATIONAL     32196000
         DC    X'0008'             HASP SPARE1 = OS USER1               32198000
         DC    X'0004'             HASP SPARE2 = OS USER2               32200000
         SPACE 2                                                     R4 32202000
WOSUCMF  EQU   B'01100000'         MCS UCMID AND RESPONSE               32204000
WTOHCPY  EQU   B'00000010'         MCS FOR QUEUE TO HARD COPY ONLY      32206000
WMCSML   EQU   B'01000000'         MCS+1 MLWTO FLAG                     32208000
WMCSSTAN DC    B'1000000000000000' STANDARD MCSFLAGS                    32210000
WTODRSTN DC    B'0001000000000000' STANDARD DESCRIPTOR CODES            32212000
WTODESCA EQU   B'01000000'         ACTION DESCRIPTION CODE              32214000
WDOUTLN  EQU   B'00000001'         DESCRIPTION FOR OUT OF LINE          32216000
WDCONTID EQU   B'10000000'         DESCRIPTION + 1 CONTROL ID           32218000
         DC    B'0000000000000000' STANDARD ROUTING CODES               32220000
         DC    B'1000000000000000' LINE TYPE ( CONTROL LINE )           32222000
WLTCONT  EQU   B'10000000'         CONTROL LINE                         32224000
WLTTITL  EQU   B'01000000'         TITLE LINE                        R4 32226000
WLTDATA  EQU   B'00100000'         DATA LINE                            32228000
WLTEND   EQU   B'00010000'         END LINE                             32230000
         SPACE 1                                                     R4 32232000
WSAVREGS EQU   $CSAVREG            ADDRESS OF SAVE AREA                 32234000
WBASE2   DC    A(HASPCON)          FOLLOWS WBASES                    R4 32236000
$DOMMIN  EQU   2                   CMBS RESERVED FROM $DOMACT           32238000
WDOMMIN  DC    Y($DOMMIN+1)        COUNT TO PREVENT CMB LOCKOUTS        32240000
         SPACE 1                                                     R4 32242000
         LTORG                                                          32244000
         SPACE 1                                                     R4 32246000
$DLENGTH $DLENGTH ,                                                     32248000
APARNUM  DC    CL5'32566'          APAR NUMBER                          32249998
         END                                                            32250000
