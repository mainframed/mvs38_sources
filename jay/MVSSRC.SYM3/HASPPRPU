PRPU     TITLE 'HASP PRINT/PUNCH SERVICE PROLOG'                        80001000
*********************************************************************** 80002000
*                                                                     * 80003000
* MODULE NAME = HASJES20 ( HASPPRPU CSECT )                           * 80004000
*                                                                     * 80005000
* DESCRIPTIVE NAME = JES2 PRINT/PUNCH PROCESSOR                       * 80006000
*                                                                     * 80007000
* COPYRIGHT = NONE                                                    * 80008100
*                                                                     * 80009000
* STATUS = OS/VS2 MVS   --  SEE &VERSION (BELOW) FOR JES2 LEVEL       * 80010000
*                                                                     * 80011000
* FUNCTION = THE HASPPRPU CSECT PROVIDES SELECTIVE PROCESSING OF      * 80012000
*            JOB SYSOUT OUTPUT WITH INTERFACES TO THE CONSOLE         * 80013000
*            OPERATOR FOR DIRECTION.                                  * 80014000
*                                                                     * 80015000
* NOTES = SEE BELOW                                                   * 80016000
*                                                                     * 80017000
*    DEPENDENCES = IF A 3211 PRINTER IS TO BE USED AS AN OUTPUT       * 80018000
*                  DEVICE, THE PRINT POSITION INDEXING FEATURE        * 80019000
*                  MUST BE INSTALLED.                                 * 80020000
*                                                                     * 80021000
*                  THE SYSTEM LIBRARY SYS1.IMAGELIB MUST CONTAIN      * 80022000
*                  ANY UCS OR FCB IMAGES SPECIFIED BY USER JCL.       * 80023000
*                  IF NOT, THE OPERATOR WILL GET A DIAGNOSTIC         * 80024000
*                  MESSAGE AND BE REQUIRED TO SPECIFY AN IMAGE        * 80025000
*                  NAME WHICH IS IN SYS1.IMAGELIB.                    * 80026000
*                                                                     * 80027000
*                  ALL FCB IMAGES OR CARRIAGE TAPES USED WITH JES2    * 80028000
*                  MUST CONTAIN A CHANNEL 1 PUNCH IN LINE POSITION    * 80029000
*                  1 FOR PROPER FORMS ALLIGNMENT.                     * 80030000
*                                                                     * 80031000
*                  3525 PRINT CCW'S DIRECTED TO A 3525 WITHOUT THE    * 80032000
*                  PRINT FEATURE WILL BE CONVERTED TO PUNCH CCW'S.    * 80033000
*                                                                     * 80034000
*                  A REQUEST TO INTERPRET CARDS ON A 3525 PUNCH       * 80035000
*                  WILL BE IGNORED IF THE PRINT FEATURE IS NOT        * 80036000
*                  INSTALLED.                                         * 80037000
*                                                                     * 80038000
*    RESTRICTIONS = IF THE FUNC=I INTERPRET FEATURE IS TO BE USED     * 80039000
*                   WITH A 3525 PUNCH, THE JES2 INITIALIZATION        * 80040000
*                   PARAMETER &NOPUCCW MUST BE AT LEAST 2.            * 80041000
*                                                                     * 80042000
*                   ALL DATA AREAS PRINTED/PUNCHED-FROM MUST BE       * 80043000
*                   PAGE-FIXED FOR EXCPVR PROCESSING.                 * 80044000
*                                                                     * 80045000
*    REGISTER CONVENTIONS = R0  =       = PARAMETER REGISTER          * 80046000
*                           R1  =       = PARAMETER REGISTER          * 80047000
*                           R2  = PW    = WORK REGISTER               * 80048000
*                           R3  = PBUF  = BUFFER ADDRESSABILITY       * 80049000
*                           R4  = PC1   = CCW WORK REGISTER 1         * 80050000
*                           R5  = PC2   = CCW WORK REGISTER 2         * 80051000
*                           R6  = BASE4 = PROCESSOR ADDRESSABILITY    * 80052000
*                           R7  = PL    = SECONDARY LINK REGISTER     * 80053000
*                           R8  = BASE3 = PROCESSOR ADDRESSABILITY    * 80054000
*                           R9  =       = RESERVED                    * 80055000
*                           R10 = JCT   = JCT ADDRESSABILITY          * 80056000
*                           R11 = BASE1 = HCT ADDRESSABILITY          * 80057000
*                           R12 = BASE2 = PROCESSOR ADDRESSABILITY    * 80058000
*                           R13 = SAVE  = PCE ADDRESSABILITY          * 80059000
*                           R14 = LINK  = PRIMARY LINK REGISTER       * 80060000
*                           R15 =       = RETURN REGISTER             * 80061000
*                           SEE ENTRY POINT DESCRIPTIONS FOR          * 80062000
*                           EXCEPTIONS.                               * 80063000
*                                                                     * 80064000
*    PATCH LABEL = NONE                                               * 80065000
*                                                                     * 80066000
* MODULE TYPE = PROCEDURE, TABLE ( CSECT TYPE )                       * 80067000
*                                                                     * 80068000
*    PROCESSOR = OS/VS ASSEMBLER                                      * 80069000
*                                                                     * 80070000
*    MODULE SIZE = SEE $DLENGTH MACRO EXPANSION(S) AT END OF ASSEMBLY * 80071000
*                                                                     * 80072000
*    ATTRIBUTES = READ ONLY, EXCEPT WHEN DEBUG OPTION SELECTED, AND   * 80073000
*                 HASP REENTRANT                                      * 80074000
*                                                                     * 80075000
* ENTRY POINT = HASPIMAG                                              * 80076000
*                                                                     * 80077000
*    PURPOSE = THIS ENTRY IS IDENTIFIED AND ATTACHED BY MODULE        * 80078000
*              HASPINIT.  ITS FUNCTION IS TO LOAD FCB AND UCS IMAGES  * 80079000
*              FROM SYS1.IMAGELIB WITHOUT CAUSING THE MAIN JES2 TASK  * 80080000
*              TO WAIT.                                               * 80081000
*                                                                     * 80082000
*    LINKAGE = THIS SUBTASK IS ACTIVATED WHEN NEEDED BY A JES2 PRINT  * 80083000
*              PUNCH PROCESSOR BY A OS/VS POST WITH A BUFFER ADDRESS  * 80084000
*              AS THE POST CODE.  THIS BUFFER CONTAINS A BLDL LIST    * 80085000
*              FOR THE REQUIRED IMAGE.  WHEN THE IMAGE IS LOADED,     * 80086000
*              THE SUBTASK MOVES IT TO THE BUFFER AND USES $$POST     * 80087000
*              TO ALERT THE WAITING PRINT/PUNCH PROCESSOR.  THE       * 80088000
*              LOADED IMAGE IS THEN DELETED AND THE SUBTASK WAITS.    * 80089000
*                                                                     * 80090000
* ENTRY POINT = HASPHOPE                                              * 80091000
*                                                                     * 80092000
*    PURPOSE = THIS IS THE ENTRY POINT TO THE JES2 OUTPUT PROCESSOR.  * 80093000
*              THE OUTPUT PROCESSOR CONVERTS THE OUTPUT REQUIREMENTS  * 80094000
*              FOR A JOB DESCRIBED BY THE PDDB'S IN THE JOB'S OUTPUT  * 80095000
*              IOT(S) TO JOE(S).  AS EACH JOE IS ADDED TO THE JOT, IT * 80096000
*              IMMEDIATELY BECOMES AVAILABLE FOR SELECTION BY A       * 80097000
*              PRINT/PUNCH PROCESSOR.  IF ANY SPIN DATA SET IOT'S     * 80098000
*              ARE ON THE $UNSPUNQ, THEIR REQUIREMENTS ARE ADDED TO   * 80099000
*              THE JOT IF SPACE IS AVAILABLE.                         * 80100000
*                                                                     * 80101000
*    LINKAGE = VIA $WAIT AND $POST OBEYING JES2 CONVENTIONS.          * 80102000
*                                                                     * 80103000
* ENTRY POINT = HASPPPI1                                              * 80104000
*                                                                     * 80105000
*    PURPOSE = THIS IS THE ENTRY POINT TO THE JES2 PRINT/PUNCH        * 80106000
*              PROCESSOR.  THIS PROCESSOR AQUIRES OUTPUT WORK FROM    * 80107000
*              THE JOT USING ITS DCT AS A PARAMETER LIST.  THE DATA   * 80108000
*              SETS REPRESENTED ARE READ FORM THE SPOOL VOLUME,       * 80109000
*              DEBLOCKED, AND PRINTED/PUNCHED TO THE USER             * 80110000
*              SPECIFICATIONS.  WHEN ALL OUTPUT WORK FOR A JOB HAS    * 80111000
*              BEEN COMPLETED, THE JOB IS MOVED TO THE PURGE QUEUE.   * 80112000
*                                                                     * 80113000
*    LINKAGE = VIA $WAIT AND $POST OBEYING JES2 CONVENTIONS.          * 80114000
*                                                                     * 80115000
* INPUT = SEE ENTRY POINT DESCRIPTION                                 * 80116000
*                                                                     * 80117000
* OUTPUT = SEE ENTRY POINT DESCRIPTION                                * 80118000
*                                                                     * 80119000
* EXIT NORMAL = SEE ENTRY POINT DESCRIPTION                           * 80120000
*                                                                     * 80121000
* EXIT ERROR = USES JES2 MACRO $DISTERR TO INFORM THE OPERATOR        * 80122000
*                                                                     * 80123000
* EXTERNAL REFERENCES = SEE BELOW                                     * 80124000
*                                                                     * 80125000
*    ROUTINES = SEE MACROS FOR SERVICES USED                          * 80126000
*                                                                     * 80127000
*    DATA AREAS = SEE $HASPCB MACRO EXPANSION                         * 80128000
*                                                                     * 80129000
*    CONTROL BLOCKS - SEE $OUTWORK MACRO EXPANSION FOR PCE WORK       * 80130000
*                     AREA EXTENSION FOR ENTRY POINT HASPHOPE         * 80131000
*                                                                     * 80132000
*                     SEE $PPPWORK MACRO EXPANSION FOR PCE WORK       * 80133000
*                     AREA EXTENSION FOR ENTRY POINT HASPPPI1         * 80134000
*                                                                     * 80135000
* TABLES - NONE                                                       * 80136000
*                                                                     * 80137000
* MACROS = JES2   - $$POST, $#ADD, $#BLD, $#CKPT, $#GET, $#JCT,       * 80138000
*                   $#PUT, $#REM, $DISTERR, $DOM, $EXCP, $EXTP,       * 80139000
*                   $FREEBUF, $FREUNIT, $GETBUF, $GETSMFB, $GETUNIT,  * 80140000
*                   $IOERROR, $PGSRVC, $POST, $PURGE, $QGET, $QLOC,   * 80141000
*                   $QPUT, $QUESMFB, $TIME, $WAIT, $WTO               * 80142000
*                                                                     * 80143000
* MACROS = SYSTEM - BLDL, DELETE, ESTAE, IMGLIB, LOAD, POST, RETURN,  * 80144000
*                   SAVE, SETPRT, SETRP, TIME, WAIT                   * 80145000
*                                                                     * 80146000
* CHANGE ACTIVITY                                                     * 80146100
*                                                                     * 80146200
*     RELEASE 4.0 = OZ02418,OZ02421,OZ02422,OZ02442,OZ02443,OZ02444,  * 80146400
*                   OZ03343,OZ04338,OZ04340,OZ04967,OZ04969,OZ05777,  * 80146500
*                   OZ05780,OZ06730,OZ06740,OZ06748,OZ07433,OZ07447,  * 80146600
*                   OZ08187,OZ08230,OZ09020,OZ09042,OZ09064,OZ09079,  * 80146700
*                   OZ09082,OZ10324                                   * 80146800
*                                                                     * 80146900
*     RELEASE 4.1 = OZ09073,OZ10376,OZ10377,OZ11743,OZ11760,OZ11775,  * 80147000
*                   OZ11790,OZ12298,OZ12301,OZ12302,OZ13254,OZ14412,  * 80147100
*                   OZ14424,OZ14447,OZ14914,OZ15250,OZ15275,OZ16691   * 80147200
*                                                                     * 80152000
*********************************************************************** 80153000
         TITLE 'HASP CONTROL BLOCK GENERATION MACRO'                    80154000
         SPACE 5                                                        80155000
*                                                                       80156000
*       $HASPCB                    GENERATE HASP CONTROL BLOCK          80157000
*                                                                       80158000
         SPACE 1                                                        80159000
         MACRO                                                          80160000
         $HASPCB &DOC=NO,&LIST=NO                                       80161000
         GBLC  &PRINT,&GEN,&DATA                                        80162000
         PUSH  PRINT                                                    80163000
         PRINT &PRINT                                                   80164000
         $CVT  LIST=&LIST          GENERATE OS CVT DSECT             R4 80165000
         $DCB  LIST=&LIST          GENERATE OS DCB DSECT                80166000
         $DEB  LIST=&LIST          GENERATE OS DEB DSECT                80167000
         $UCB  LIST=&LIST          GENERATE OS UCB DSECT                80168000
         $SDWA LIST=&LIST          GENERATE OS SDWA DSECT            R4 80169000
         $SETPRT LIST=&LIST        GENERATE OS SPPARM DSECT          R4 80170000
         $TED  DOC=&DOC            GENERATE HASP TED DSECT              80171000
         $TAB  DOC=&DOC            GENERATE HASP TAB DSECT           R4 80172000
         $PCIE DOC=&DOC            GENERATE HASP PCIE DSECT          R4 80173000
         $SVT  DOC=&DOC            GENERATE HASP SSVT DSECT             80174000
         $SJB  DOC=&DOC            GENERATE HASP SJB DSECT              80175000
         $HCT  DOC=&DOC            GENERATE HASP HCT DSECT              80176000
         $PCE  DOC=&DOC            GENERATE HASP PCE DSECT              80177000
         $LRC  DOC=&DOC            GENERATE HASP LRC DSECT              80178000
         $BUFFER DOC=&DOC          GENERATE HASP BUFFER DSECT           80179000
         $SMF  DOC=&DOC            GENERATE HASP SMF DSECT              80180000
         $JQE  DOC=&DOC            GENERATE HASP JQE DSECT              80181000
         $JOE  DOC=&DOC            GENERATE HASP JOE DSECT              80182000
         $JOT  DOC=&DOC            GENERATE HASP JOT DSECT              80183000
         $QSE  DOC=&DOC            GENERATE HASP QSE DSECT              80184000
         $JCT  DOC=&DOC            GENERATE HASP JCT DSECT              80185000
         $CAT  DOC=&DOC            GENERATE HASP CAT DSECT              80186000
         $PDDB DOC=&DOC            GENERATE HASP PDDB DSECT             80187000
         $IOT  DOC=&DOC            GENERATE HASP IOT DSECT              80188000
         $RAT  DOC=&DOC            GENERATE HASP RAT DSECT              80189000
         $DCT  DOC=&DOC            GENERATE HASP DCT DSECT              80190000
         $FMH  DOC=&DOC            GENERATE SNA FM HEADER DSECT      R4 80195000
         $OUTWORK DOC=&DOC         GENERATE HASP OUTWORK DSECT          80197000
         $PPPWORK DOC=&DOC         GENERATE HASP PPPWORK DSECT          80198000
         SPACE 1                                                        80199000
         POP   PRINT                                                    80200000
         PRINT &GEN,&DATA          SET ASSEMBLY PRINT OPTIONS           80201000
         MEND                                                           80202000
         TITLE 'HASP OUTPUT PROCESSOR EXECUTIVE'                        80203000
         SPACE 5                                                        80204000
HASPPRPU START 0                   HASP PRINT/PUNCH SERVICE             80205000
         SPACE 5                                                        80206000
         COPY  $HASPGEN            COPY HASPGEN PARAMETERS              80207000
         TITLE 'HASP CONTROL BLOCKS'                                    80208000
         SPACE 5                                                        80209000
HASPPRPU $ENTRY BASE=,CSECT=YES    PROVIDE PROCESSOR IDENTIFICATION     80210000
         SPACE 5                                                        80211000
*                                                                       80212000
*                             DOCUMENTATION OPTIONS FOR THIS ASSEMBLY   80213000
*                                                                       80214000
         SPACE 3                                                        80215000
        $SYSPARM (OFF,GEN,NODATA,NO,NO)                                 80216000
         SPACE 5                                                        80217000
*                                                                       80218000
*                             GENERATE HASP CONTROL BLOCKS              80219000
*                                                                       80220000
         SPACE 3                                                        80221000
        $HASPCB DOC=&DOC,LIST=&LIST  GENERATE HASP CONTROL BLOCKS       80222000
         TITLE 'HASP OUTPUT PROCESSOR -- MAIN ENTRY'                 R4 80223000
*********************************************************************** 80224000
*                                                                     * 80225000
*              HOPE REGISTER DEFINITIONS                              * 80226000
*                                                                     * 80227000
*********************************************************************** 80228000
         SPACE 1                                                     R4 80229000
         SPACE 3                                                        80230000
JOE      EQU   6                   JOB OUTPUT ELEMENT BASE              80231000
RNP      EQU   7                   NON-PROCESS RETURN REGISTER          80232000
JOT      EQU   8                   JOB OUTPUT TABLE BASE                80233000
         SPACE 15                                                    R4 80234000
*********************************************************************** 80235000
*                                                                     * 80236000
*        HASP OUTPUT PROCESSOR -- MAIN ENTRY POINT                    * 80237000
*                                                                     * 80238000
*********************************************************************** 80239000
         SPACE 1                                                     R4 80240000
HASPHOPE $ENTRY BASE=BASE2         HOPE MAIN ENTRY                   R4 80241000
         TITLE 'HASP OUTPUT PROCESSOR -- SPIN DATA SET PROCESSING'   R4 80242000
*********************************************************************** 80243000
*                                                                     * 80244000
*        ADD ANY STACKED SPIN DATA SETS TO THE JOT IF POSSIBLE        * 80245000
*                                                                     * 80246000
*********************************************************************** 80247000
         SPACE 1                                                     R4 80248000
         L     JOT,$AQSE           LOAD QSE BASE ADDRESS                80249000
         USING QSEDSECT,JOT        ACTIVATE QSE ADDRESSABILITY          80250000
         MVC   PCEJQE,$ZEROS       CLEAR JQE ADDRESS           @OZ32566 80250500
        $QSUSE                     REQUEST ACCESS TO CHECKPOINT DATA    80251000
         OC    $UNSPUNQ,$UNSPUNQ   ANY QUEUED SPIN IOTS                 80252000
         BZ    OPSPIN3             BRANCH IF NO                         80253000
         L     R1,$JOTABLE         ADDRESS JOB OUTPUT TABLE             80254000
         USING JOTDSECT,R1         ACTIVATE JOT ADDRESSABILITY          80255000
         LH    R2,JOTFREC          NUMBER OF AVAILABLE JOES             80256000
         BCTR  R2,R0               JOE FOR A CHAR-JOE                   80257000
         BCTR  R2,R0               JOE FOR A WORK-JOE                   80258000
         CH    R2,$MINJOES         BELOW MINIMUM FREE LIMIT...       R4 80259000
         BL    OPSPIN3             BRANCH IF YES                        80260000
         DROP  R1                  SUSPEND JOT ADDRESSABILITY           80261000
         SPACE 1                                                     R4 80262000
*********************************************************************** 80263000
*                                                                     * 80264000
*        GET A BUFFER FOR THE SPIN IOT IF ONE NOT OWNED               * 80265000
*                                                                     * 80266000
*********************************************************************** 80267000
         SPACE 1                                                     R4 80268000
         ICM   R1,15,OPIOTBUF      IOT BUFFER ALREADY GOTTEN            80269000
         BNZ   OPSPIN1             BRANCH IF YES                        80270000
        $GETBUF ,                  GET A BUFFER FOR THE IOT             80271000
         ST    R1,OPIOTBUF         SAVE BUFFER ADDRESS                  80272000
         BNZ   OPSPIN1             BRANCH IF BUFFER AVAILABLE           80273000
        $WAIT  BUF                 WAIT FOR A FREE BUFFER               80274000
         B     HASPHOPE            GO TRY AGAIN                         80275000
         EJECT                                                       R4 80276000
*********************************************************************** 80277000
*                                                                     * 80278000
*        READ FIRST SPIN IOT FROM THE UNSPUN QUEUE                    * 80279000
*                                                                     * 80280000
*********************************************************************** 80281000
         SPACE 1                                                     R4 80282000
OPSPIN1  DS    0H                                                       80283000
         L     R0,$UNSPUNQ         GET IOT TRACK ADDRESS                80284000
         MVI   PCEDEVTP,PCEDARD    SET DCT FOR READ                     80285000
         BAL   RNP,OPIOCK          READ AND CHECK IOT                   80286000
         BZ    OPSPIN2             BRANCH IF READ GOOD                  80287000
OPSPNIOT $DISTERR                  INDICATE CONTROL BLOCK ERROR         80288000
        $QSUSE                     REQUEST ACCESS TO CHECKPOINT DATA    80289000
         XC    $UNSPUNQ,$UNSPUNQ   CLEAR SPIN IOT QUEUE                 80290000
         B     OPSPIN3             EXIT FROM SPIN LOOP                  80291000
         SPACE 1                                                     R4 80292000
*********************************************************************** 80293000
*                                                                     * 80294000
*        IF UNSPUN QUEUE HAS CHANGED - START OVER                     * 80295000
*                                                                     * 80296000
*********************************************************************** 80297000
         SPACE 1                                                     R4 80298000
OPSPIN2  DS    0H                                                       80299000
        $QSUSE                     REQUEST ACCESS TO CHECKPOINT DATA    80300000
         L     R1,OPIOTBUF         ADDRESS IOT BUFFER                   80301000
         USING IOTDSECT,R1         ACTIVATE IOT ADDRESSABILITY          80302000
         CLC   $UNSPUNQ,PCESEEK    HAS SPIN QUEUE CHANGED            R4 80303000
         BNE   HASPHOPE            BRANCH IF YES                        80304000
         CLC   PCESEEK,IOTTRACK    VALIDATE IOT                      R4 80305000
         BNE   OPSPNIOT            BRANCH IF IOT BAD                 R4 80306000
         L     R2,$IOTPDDB         POINT TO                          R4 80307000
         ALR   R2,R1                1ST PDDB IN IOT                  R4 80308000
         USING PDBDSECT,R2         ACTIVATE PDDB ADDRESSABILITY         80309000
         MVC   OPCLASS,PDBCLASS    SAVE SYSOUT CLASS OF PDDB            80310000
         L     R3,IOTJQOFF         HOLD JQE OFFSET                      80311000
         LR    JCT,R3              COPY JQE OFFSET                      80312000
         AL    JCT,$JOBQPTR        ADD JOB QUEUE BASE                   80313000
         USING JQEDSECT,JCT        ACTIVATE JQE ADDRESSABILITY          80314000
         TM    JQEFLAGS,QUEPURGE   HAS $CJOB BEEN ISSUED                80315000
         BO    OPSPNCJ             BRANCH IF YES                        80316000
         DROP  R1,R2               SUSPEND IOT,PDDB ADDRESSABILITY      80317000
         EJECT                                                       R4 80318000
*********************************************************************** 80319000
*                                                                     * 80320000
*        BUILD A PROTOTYPE JOE PAIR FROM THE PDDB IN THE SPIN IOT     * 80321000
*                                                                     * 80322000
*********************************************************************** 80323000
         SPACE 1                                                     R4 80324000
        $#BLD  JOES=OPWORK,PDDB=(R2),JQE=(R3) CONVERT PDDB TO JOES   R4 80325000
         LA    JOE,OPWORK          ADDRESS WORK-JOE                     80326000
         USING JOEDSECT,JOE        ACTIVATE JOE ADDRESSABILITY          80327000
         L     R1,OPIOTBUF         ADDRESS SPIN IOT                     80328000
         USING IOTDSECT,R1         ACTIVATE IOT ADDRESSABILITY          80329000
         MVC   JOEIOTTR,IOTTRACK   SET SPIN IOT TRACK ADDRESS           80330000
         MVI   JOEFLAG,$JOESPIN    SET SPIN FLAG IN WORK-JOE            80331000
         DROP  R1,JOE              SUSPEND IOT,JOE ADDRESSABILITY       80332000
         SPACE 1                                                     R4 80333000
*********************************************************************** 80334000
*                                                                     * 80335000
*        ATTEMPT TO ADD THE PROTOTYPE JOE PAIR TO THE JOT             * 80336000
*                                                                     * 80337000
*********************************************************************** 80338000
         SPACE 1                                                     R4 80339000
         LA    R0,OPWORK           ADDRESS WORK-JOE PROTOTYPE           80340000
         LA    R1,OPCHAR           ADDRESS CHAR-JOE PROTOTYPE           80341000
        $#ADD  WORK=(R0),CHAR=(R1) ADD TO THE JOT                    R4 80342000
         BNZ   OPSPIN3             BRANCH IF JOT FULL                   80343000
         EJECT                                                       R4 80344000
*********************************************************************** 80345000
*                                                                     * 80346000
*        DE-QUEUE IOT FROM $UNSPUNQ -- RE-QUEUE JOB FOR $PURGE        * 80347000
*                                                                     * 80348000
*********************************************************************** 80349000
         SPACE 1                                                     R4 80350000
OPSPNCJ  DS    0H                                                       80351000
         L     R1,OPIOTBUF         ADDRESS IOT                          80352000
         USING IOTDSECT,R1         ACTIVATE IOT ADDRESSABILITY          80353000
         MVC   $UNSPUNQ,IOTSPIOT   DEQUEUE SPIN IOT FROM CHAIN          80354000
         L     R2,$IOTPDDB         POINT TO                          R4 80355000
         ALR   R2,R1                1ST PDDB IN IOT                  R4 80356000
         USING PDBDSECT,R2         ACTIVATE PDDB ADDRESSABILITY         80357000
         NI    PDBFLAG1,255-PDB1HOLD TURN OFF HOLD FLAG                 80358000
         OI    PDBFLAG1,PDB1PSO    TURN ON PSO FLAG                     80359000
         DROP  R1,R2               SUSPEND IOT,PDDB ADDRESSABILITY      80360000
         MVI   PCEDEVTP,PCEDAWR    SET DCT FOR WRITE                    80361000
         L     R0,PCESEEK          GET IOT MTTR                         80362000
         BAL   RNP,OPIOCK          WRITE AND CHECK IOT                  80363000
        $QSUSE                     REQUEST ACCESS TO CHECKPOINT DATA    80364000
         LH    R1,JQEJOECT         GET CURRENT JOE COUNT                80365000
         BCTR  R1,R0               DECREMENT BY ONE                     80366000
         STH   R1,JQEJOECT         STORE BACK INTO JQE                  80367000
          $QCKPT (JCT)             CHECKPOINT THE JQE          @OZ20010 80368000
         TM    JQEFLAGS,QUEPURGE   HAS $CJOB BEEN ISSUED                80369000
         BNO   HASPHOPE            BRANCH IF NO                         80370000
         LH    R1,JQEJOECT         RESTORE JOE COUNT           @OZ34285 80370100
         AH    R1,JQEHLDCT         ADD HELD DATA SET COUNT              80371000
         BNZ   HASPHOPE            BRANCH IF OUTSTANDING WORK           80372000
         CLI   JQETYPE,$HARDCPY    IS JOB IN THE $HARDCPY QUEUE         80373000
         BNE   HASPHOPE            BRANCH IF NO                         80374000
        $QPUT  (JCT),$PURGE        MOVE THE JOB TO $PURGE               80375000
         B     HASPHOPE            GO TO NEXT SPIN DATA SET             80376000
         DROP  JCT                 SUSPEND JQE ADDRESSABILITY           80377000
         TITLE 'HASP OUTPUT PROCESSOR -- MAIN PROCESSOR'             R4 80378000
*********************************************************************** 80379000
*                                                                     * 80380000
*        *** MAIN PROCESSOR ***        LOCATE A JOB                   * 80381000
*                                                                     * 80382000
*        FREE THE SPIN IOT BUFFER AND ATTEMPT TO GET A JOB            * 80383000
*                                                                     * 80384000
*********************************************************************** 80385000
OPSPIN3  DS    0H                                                       80386000
         ICM   R1,15,OPIOTBUF      IS THERE AN IOT BUFFER TO FREE       80387000
         BZ    OPQLOC              BRANCH IF NO                         80388000
        $FREEBUF (R1)              FREE IOT BUFFER                      80389000
         XC    OPIOTBUF,OPIOTBUF   ZERO IOT BUFFER POINTER              80390000
OPQLOC   DS    0H                                                       80391000
         OC    QSEOPCKP,QSEOPCKP   IS THIS A RESTART                    80392000
         BZ    OPQGET              BRANCH IF NO                         80393000
        $QLOC  QSEOPJNO            LOCATE JOB QUEUE ELEMENT             80394000
         BZ    OPQGET              BRANCH IF JOB NOT FOUND              80395000
         USING JQEDSECT,R1         ACTIVATE JQE ADDRESSABILITY          80396000
         OC    JQEFLAGS,$SIDBUSY   SET JOB QUEUE ELEMENT BUSY           80397000
         DROP  R1                  SUSPEND JQE ADDRESSABILITY           80398000
          $QCKPT (R1)              CHECKPOINT THE JQE          @OZ20010 80399000
         B     OPJOB               GO PROCESS PARTIAL JOB               80400000
OPQGET   DS    0H                                                       80401000
         USING JCTDSECT,JCT        ACTIVATE JCT ADDRESSABILITY          80402000
        $QGET  $OUTPUT             ATTEMPT TO GET A JOB                 80403000
         BNZ   OPSETUP             BRANCH IF NEW JOB FOUND              80404000
*                                                                       80405000
*        $QGET NON-PROCESS EXIT ROUTINE                                 80406000
*                                                                       80407000
        $WAIT  JOB,INHIBIT=NO      $WAIT FOR JOB TO BE QUEUED           80408000
         B     HASPHOPE            TRY AGAIN                            80409000
         EJECT                                                       R4 80410000
*********************************************************************** 80411000
*                                                                     * 80412000
*        SETUP TO PROCESS NEW JOB                                     * 80413000
*                                                                     * 80414000
*********************************************************************** 80415000
         SPACE 1                                                     R4 80416000
OPSETUP  DS    0H                                                       80417000
         SLR   R0,R0               CLEAR REGISTER                       80418000
         STH   R0,QSEOPCKP         SET PARTIAL JOE COUNT ZERO           80419000
OPJOB    DS    0H                                                       80420000
        $ACTIVE R=R14              INDICATE PROCESSOR ACTIVE            80421000
         ST    R1,PCEJQE           STORE JQE ADDRESS           @OZ32566 80422000
         USING JQEDSECT,R1         ACTIVATE JQE ADDRESSABILITY          80423000
         MVC   QSEOPJNO,JQEJOBNO   SET JOB NUMBER FOR WARM START        80424000
         DROP  R1                  SUSPEND JQE ADDRESSABILITY           80425000
         LR    R2,R1               HOLD A(JOB QUEUE ELEMENT)            80426000
        $TIME                      GET SIGN-ON TIME/DATE                80427000
         STM   R0,R1,OPTIMEON      SAVE IN PCE FOR JCT UPDATE           80428000
         SPACE 1                                                     R4 80429000
*********************************************************************** 80430000
*                                                                     * 80431000
*        GET ADDRESS OF JCT IN BUFFER FROM JCT MANAGER                * 80432000
*                                                                     * 80433000
*********************************************************************** 80434000
         SPACE 1                                                     R4 80435000
         SLR   JOE,JOE             CLEAR JOE REG IN CASE OF JCT ERR  R4 80436000
         LR    JCT,R2              SET JCT = A(JOB QUEUE ELEMENT)       80438000
        $#JCT  READ,REFRESH=YES    GET ADDR OF UPDATED JCT BUFF     R41 80439000
         ST    JCT,OPJCTBUF        SAVE JCT BUFFER ADDRESS              80440000
         BZ    OPNOJCT             BRANCH IF READ WAS IN ERROR          80441000
         SPACE 1                                                     R4 80442000
*********************************************************************** 80443000
*                                                                     * 80444000
*        JCT VALID - DETERMINE IF THIS JOB HAD THE NOTIFY OPTION      * 80445000
*                                                                     * 80446000
*********************************************************************** 80447000
         SPACE 1                                                     R4 80448000
JCTOK    DS    0H                                                       80449000
         OC    QSEOPCKP,QSEOPCKP   IS THIS A RESTART                    80450000
         BNZ   OPNOTX              BRANCH IF YES - SKIP NOTIFY          80451000
         TM    JCTTSUID,255-C' '   WAS NOTIFY REQUESTED...           R4 80452000
         BZ    OPNOTX              BR IF NO TO SKIP NOTIFY           R4 80453000
         EJECT                                                       R4 80459000
*********************************************************************** 80460000
*                                                                     * 80461000
*        SCAN JOB QUEUE FOR TS USER TO NOTIFY                         * 80462000
*                                                                     * 80463000
*********************************************************************** 80464000
         SPACE 1                                                     R4 80465000
        $QSUSE                     REQUEST ACCESS TO CHECKPOINT DATA    80470000
         L     R1,=V($QINDEX)      LOCATE                               80471000
         LA    R2,CATTSUCL-(255-QUECLASS) HEAD                          80472000
         IC    R2,0(R1,R2)         OF THE TSU                           80473000
         LA    R2,$JQHEADS-2-QUECHAIN(R2) EXECUTION QUEUE               80474000
         EJECT                                                       R4 80475000
         SPACE 1                                                     R4 80476000
OPJQELP  LH    R2,QUECHAIN(,R2)    GET NEXT JQE OFFSET               R4 80477000
         N     R2,=F'65535'        CLEAR LEFT HALFWORD                  80478000
         BZ    OPENDQ              BRANCH IF END OF JQES                80479000
         SLL   R2,2                EXPAND TO FULL ADDRESS OFFSET        80480000
         AL    R2,$JOBQPTR         ADD JOB QUEUE BASE                   80481000
         USING JQEDSECT,R2         ACTIVATE JQE ADDRESSABILITY          80482000
         TM    JQEFLAGS,QUEBUSY    IS THIS USER ACTIVE                  80483000
         BZ    OPJQELP             BRANCH IF NO - SKIP                  80484000
         CLC   JQEJNAME(7),JCTTSUID IS THIS THE RIGHT USER              80485000
         BNE   OPJQELP             BRANCH IF NO - SKIP                  80486000
         MVC   PCEWA(1),JQEFLAGS   COPY JQE BUSY FLAGS                  80487000
         NI    PCEWA,QUEBUSY       ISOLATE BUSY FLAGS                   80488000
         CLC   PCEWA(1),$SIDBUSY   IS THE JOB BUSY ON THIS SYSTEM       80489000
         BE    OPTSWTO             BRANCH IF YES                        80490000
         SPACE 1                                                     R4 80491000
         DROP  R2                  SUSPEND JQE ADDRESSABILITY           80492000
         SLR   R2,R2               CLEAR REGISTER 2                     80493000
         IC    R2,PCEWA            COPY BUSY FLAGS                      80494000
         BCTR  R2,0                DECREMENT BY 1                       80495000
         LA    R3,1                SETUP FOR BUSY TO AFFINITY SHIFT     80496000
         SLL   R3,0(R2)            CREATE AFFINITY BIT                  80497000
OPTSAFF  L     R1,PCEJQE           ADDR OF CURRENT JOB'S JQE   @OZ32566 80498000
         USING JQEDSECT,R1         ACTIVATE JQE ADDRESSABILITY          80499000
         NI    JQEFLAG2,255-QUESYSAF RESET CURRENT AFFINITY             80500000
         STC   R3,PCEWA            STORE NEW AFFINITY                   80501000
         OC    JQEFLAG2,PCEWA      MOVE IN NEW AFFINITY                 80502000
        $QPUT  (R1),$OUTPUT        REQUEUE JQE TO $OUTPUT               80503000
        $#JCT  FREE                RELEASE JCT BUFFER                   80504000
        $DORMANT                   INDICATE PROCESSOR INACTIVE          80505000
         B     HASPHOPE            TRY TO SELECT OTHER WORK             80506000
         DROP  R1                  SUSPEND JQE ADDRESSABILITY           80507000
         SPACE 1                                                     R4 80508000
OPENDQ   DS    0H                                                       80509000
         CLI   JCTTSUAF,0          SEE IF TSO SOURCE AFFINITY       R41 80509200
         BE    OPTSWTO               PRESENT, BRANCH IF NOT         R41 80509400
         CLC   JCTTSUAF,$SIDAFF    SOURCE AFFINITY FOR THIS SYSTEM      80510000
         BE    OPTSWTO             BRANCH IF YES                        80511000
         IC    R3,JCTTSUAF         SELECT SOURCE AFFINITY               80512000
         B     OPTSAFF             ALTER AFFINITY AND $QPUT             80513000
         EJECT                                                       R4 80514000
*                                                                       80516000
*        TS USER BUSY ON THIS SYSTEM - USE $WTO TO NOTIFY               80517000
*                                                                       80518000
OPTSWTO  DS    0H                                                       80519000
         MVC   M165LOC,MSG165      SET BASIC MESSAGE FORMAT          R4 80520000
         MVC   M165JNAM,JCTJNAME   INSERT JOBNAME                    R4 80521000
         MVC   M165JBID,JCTJOBID     AND JOB NUMBER                  R4 80522000
         LA    R1,M165JNAM-1       SET PTR TO JOBNAME - 1            R4 80523000
OPSCNJ   DS    0H                                                       80524000
         LA    R1,1(,R1)           INCREMENT POINTER                 R4 80525000
         CLI   0(R1),C' '          IS THIS CHARACTER BLANK              80526000
         BNE   OPSCNJ              IF NOT TRY AGAIN                     80527000
         TM    JCTJTFLG,JCTJTJF+JCTJTCF  ENDED BY CC SET                80528000
         BNO   OPENDMSG            IF NOT BRANCH TO END MESG            80529000
         CLI   JCTPSN1,C' '        IS STEPNAME BLANK                    80530000
         BE    OPSCNJS2            IF YES SKIP STEPNAME              R4 80531000
         MVC   1(8,R1),JCTPSN1     INSERT STEPNAME                      80532000
OPSCNJS1 DS    0H                                                       80533000
         LA    R1,1(,R1)           INCREMENT POINTER                 R4 80534000
         CLI   0(R1),C' '          IS THIS CHARACTER BLANK              80535000
         BNE   OPSCNJS1            IF NOT TRY AGAIN                     80536000
OPSCNJS2 DS    0H                                                    R4 80537000
         CLI   JCTPSN2,C' '        IS STEP NAME BLANK...             R4 80538000
         BE    OPSCNJS4            IF YES SKIP STEPNAME              R4 80539000
         MVC   1(8,R1),JCTPSN2     INSERT STEPNAME                      80540000
OPSCNJS3 DS    0H                                                    R4 80541000
         LA    R1,1(,R1)           INCREMENT POINTER                 R4 80542000
         CLI   0(R1),C' '          IS THIS CHARACTER BLANK              80543000
         BNE   OPSCNJS3            IF NOT TRY AGAIN                  R4 80544000
OPSCNJS4 DS    0H                                                    R4 80545000
         MVC   1(9,R1),=C'ENDED CC='  SET REASON                     R4 80546000
         LA    R1,10(,R1)          SET PTR TO CONDITION CODE         R4 80547000
         LH    R2,JCTJTCC          GET CONDITION CODE                   80548000
         CVD   R2,0(,R1)           CONVERT TO DECIMAL                R4 80549000
         UNPK  0(4,R1),0(8,R1)     UNPACK FOUR LOW DIGITS               80550000
         OI    3(R1),X'F0'         SET ZONE TO X'F'                     80551000
         LA    R1,4(,R1)           SET POINTER TO NEXT FIELD         R4 80552000
         B     OPLOUSM2            SET LOGON USERID MESSAGE          R4 80553000
         EJECT                                                       R4 80554000
OPENDMSG DS    0H                                                       80555000
         MVC   1(5,R1),=C'ENDED'   SET ENDED MESSAGE                    80556000
         LA    R1,6(,R1)           SET PTR TO NEXT FIELD             R4 80557000
         CLI   JCTJTFLG,JCTJTJF    IS IT JCL ERROR                      80558000
         BE    *+14                IF YES SET JCL MESSAGE               80559000
         OC    JCTCNVRC,JCTCNVRC   IS IT JCL ERROR                      80560000
         BZ    *+14                IF NOT TRY OTHER                     80561000
         MVC   0(11,R1),=C'- JCL ERROR'  SET REASON                     80562000
         B     OPLOUSM             SET LOGON USERID MSG                 80563000
         L     R2,PCEJQE           ADDRESS CURRENT JOB         @OZ32566 80564000
         USING JQEDSECT,R2        ESTABLISH JQE ADDRESSABILITY          80565000
         TM    JQEFLAGS,QUEOPCAN   WAS JOB CANCELLED                    80566000
         BNO   *+14                BRANCH IF NO                         80567000
         MVC   0(11,R1),=C'- CANCELLED' SET REASON                      80568000
         B     OPLOUSM             SET LOGON USERID                     80569000
         TM    JCTJTFLG,JCTJTABD   WAS JOB ABENDED                      80570000
         BZ    OPLOUSM2            NO, SET LOGON USERID MESSAGE      R4 80571000
         MVC   0(11,R1),=C'- ABENDED  '   SET REASON                    80572000
OPLOUSM  DS    0H                                                    R4 80573000
         LA    R1,11(,R1)          INCREMENT PTR TO NEXT FIELD       R4 80574000
OPLOUSM2 DS   0H                                                     R4 80575000
         MVC   0(14,R1),=C''',LOGON,USER=('  SET USER ID             R4 80576000
         LA    R1,14(,R1)          INCREMENT POINTER                 R4 80577000
         MVC   0(7,R1),JCTTSUID    SET USERID                           80578000
OPSCNUID DS    0H                                                       80579000
         LA    R1,1(,R1)           INCREMENT POINTER                 R4 80580000
         CLI   0(R1),C' '          WAS THIS CHARACTER A BLANK           80581000
         BNE   OPSCNUID            IF NOT TRY NEXT                      80582000
         MVI   0(R1),C')'          TERMINATE USERID WITH ')'            80583000
        $WTO   M165LOC,L'MSG165,JOB=NO,TYPE=SVC34 ISSUE 'SEND' CMD   R4 80584000
         EJECT                                                       R4 80585000
*********************************************************************** 80663000
*                                                                     * 80664000
*        INITIALIZE PRIMARY PDDB TO JOE CONVERSION LOOP               * 80665000
*                                                                     * 80666000
*********************************************************************** 80667000
         SPACE 1                                                     R4 80668000
OPNOTX   DS    0H                                                       80669000
         MVC   OPJOBCPY,JCTCPYCT   JOB LEVEL COPY COUNT                 80670000
         CLI   OPJOBCPY,X'00'      IS THE JOB COPY COUNT ZERO           80671000
         BNE   *+8                 BRANCH IF NO                         80672000
         MVI   OPJOBCPY,X'01'      FORCE COUNT TO ONE                   80673000
         CLC   OPJOBCPY,$JCOPYLM   TOO MANY JOB COPIES REQUESTED     R4 80674000
         BNH   SKIP70              BR IF NO                          R4 80675000
         MVC   OPJOBCPY,$JCOPYLM   USE MAXIMUM                       R4 80676000
SKIP70   MVC   OPMSGCLS,JCTMCLAS   JOB MESSAGE CLASS                    80677000
         MVC   OPJBKEY,JCTJBKEY    HOLD JOB KEY FOR VALIDITY CHECK      80678000
*                                                                       80679000
*        READ CHAIN OF IOT'S                                            80680000
*                                                                       80681000
         SLR   R3,R3               CLEAR PREVIOUS BUFFER POINTER        80682000
        $GETBUF WAIT=YES           GET BUFFER FOR IOT                R4 80683000
         ST    R1,OPIOTBUF         SAVE IOT BUFFER ADDRESS           R4 80684000
         L     R0,JCTIOT           GET ADDRESS OF 1ST REGULAR IOT       80685000
OPIOTRD  LR    JCT,R1              LOAD BASE FOR IOT                 R4 80686000
         USING IOTDSECT,JCT        ACTIVATE IOT ADDRESSABILITY          80687000
         MVI   PCEDEVTP,PCEDARD    INDICATE READ OPERATION              80688000
         BAL   RNP,OPIOCK          CALL I/O AND CHECK ROUTINE           80689000
         BZ    *+10                BRANCH IF GOOD READ                  80690000
         XC    IOTJBKEY,IOTJBKEY   ZERO IOT JOB KEY                     80691000
         CLC   IOTJBKEY,OPJBKEY    IS THIS IOT VALID                    80692000
         BE    IOTOK               BRANCH IF YES                        80693000
*                                                                       80694000
*        IOT JOB KEY DOES NOT MATCH JCT JOB KEY                         80695000
*                                                                       80696000
OPIOTER  $DISTERR                  INDICATE CONTROL BLOCK ERROR         80697000
        $FREEBUF (JCT)             FREE BUFFER OF INVALID IOT           80698000
         LTR   JCT,R3              IS AT LEAST 1 IOT VALID              80699000
         BNZ   PDBSCAN             PROCESS WHAT IS LEFT                 80700000
         ST    R3,OPIOTBUF         SET BUFFER ADDRESS TO ZERO           80701000
         B     OPQPUT              TERMINATE                            80702000
         EJECT                                                       R4 80703000
*********************************************************************** 80704000
*                                                                     * 80705000
*        IOT JOB KEY MATCHES JCT JOB KEY                              * 80706000
*                                                                     * 80707000
*********************************************************************** 80708000
         SPACE 1                                                     R4 80709000
IOTOK    DS    0H                                                       80710000
         ICM   R3,15,IOTIOTTR      LOAD AND TEST NEXT IOT TRACK      R4 80711000
         BZ    PDBSCAN             BRANCH IF NO MORE IOT'S              80712000
        $GETBUF WAIT=YES           GET BUFFER FOR IOT                R4 80713000
         ST    R1,IOTIOT           CHAIN TO PREVIOUS IOT                80714000
         LR    R0,R3               TTR FOR OPIOCK                    R4 80715000
         LR    R3,JCT              HOLD PREVIOUS IOT BASE               80716000
         B     OPIOTRD             CONTINUE READING IOT'S               80717000
         SPACE 3                                                     R4 80718000
*********************************************************************** 80719000
*                                                                     * 80720000
*        ALL VALID IOTS HAVE BEEN READ - START PDDB SCAN              * 80721000
*                                                                     * 80722000
*********************************************************************** 80723000
         SPACE 1                                                     R4 80724000
PDBSCAN  DS    0H                                                       80725000
         XC    IOTIOT,IOTIOT       ZERO CHAIN POINTER OF LAST IOT       80726000
         XC    OPCKPT,OPCKPT       ZERO CHECKPOINT JOE INDEX            80727000
         L     JCT,OPIOTBUF        ADDRESS IOT BUFFER                   80728000
PDBIOT   DS    0H                                                       80729000
         L     R2,$IOTPDDB         POINT TO                          R4 80730000
         ALR   R2,JCT               1ST PDDB IN IOT                  R4 80731000
         USING PDBDSECT,R2         ACTIVATE PDDB ADDRESSABILITY         80732000
         L     R3,IOTPDDBP         OFFSET AFTER LAST PDDB               80733000
         AR    R3,JCT              ADD CURRENT BUFFER ORIGIN            80734000
         ST    R3,OPDBEND          SAVE IN PCE                          80735000
PDBNEXT  DS    0H                                                       80736000
         XC    OPDDB,OPDDB         CLEAR RESTART POINTER                80737000
         C     R2,OPDBEND          END OF PDDBS ID THIS IOT             80738000
         BNE   PDBPDB              BRANCH IF NO                         80739000
         ICM   JCT,15,IOTIOT       LOAD AND TEST IOT CHAIN              80740000
         BZ    OPQPUT              BRANCH IF NO MORE IOTS               80741000
         B     PDBIOT              SETUP NEW IOT ADDRESSES              80742000
PDBPDB   DS    0H                                                       80743000
         TM    PDBFLAG1,PDB1NULL+PDB1NSOT IS PDDB NULL/NOT SYSOUT       80744000
         BZ    PDBJOE              BRANCH IF NO - BUILD JOES            80745000
         LA    R2,PDBLENG(,R2)     STEP TO THE NEXT PDDB                80746000
         B     PDBNEXT             CONTINUE SCAN                        80747000
         EJECT                                                       R4 80748000
*********************************************************************** 80749000
*                                                                     * 80750000
*        BUILD CHAR-JOE AND WORK-JOE FROM PDDB                        * 80751000
*                                                                     * 80752000
*********************************************************************** 80755000
         SPACE 1                                                     R4 80756000
PDBJOE   MVC   OPCLASS,PDBCLASS    GET SYSOUT CLASS FROM PDDB        R4 80757000
         USING JOEDSECT,JOE        ACTIVATE JOE ADDRESSABILITY          80758000
         L     R3,PCEJQE           ADDRESS OF JQE              @OZ32566 80759000
         SL    R3,$JOBQPTR         MINUS JOB QUEUE ORIGIN               80760000
         LA    JOE,OPCHAR          ADDRESS CHAR-JOE                     80761000
        $#BLD  JOES=OPWORK,PDDB=(R2),JQE=(R3) CONVERT PDDB TO JOES   R4 80762000
         SPACE 1                                                     R4 80763000
         OI    PDBFLAG1,PDB1NULL   SHOW 1ST PDDB PROCESSED          R41 80764000
         SPACE 1                                                     R4 80798000
*********************************************************************** 80799000
*                                                                     * 80800000
*        SCAN REMAINING PDDB'S FOR A CHARACTERISTICS MATCH            * 80801000
*                                                                     * 80802000
*********************************************************************** 80803000
         SPACE 1                                                     R4 80804000
DDBNEXT  DS    0H                                                       80805000
         LA    R2,PDBLENG(,R2)     STEP TO THE NEXT PDDB                80806000
DDBIOT   DS    0H                                                       80807000
         CL    R2,OPDBEND          END OF PDDB'S IN THIS IOT            80808000
         BNE   DDBPDB              BRANCH IF NO                         80809000
         ICM   JCT,15,IOTIOT       LOAD AND TEST IOT CHAIN              80810000
         BZ    DDBEND              BRANCH IF NO MORE IOTS               80811000
         L     R2,$IOTPDDB         POINT TO                          R4 80812000
         ALR   R2,JCT               1ST PDDB IN IOT                  R4 80813000
         L     R3,IOTPDDBP         OFFSET AFTER LAST PDDB               80814000
         ALR   R3,JCT              ADD BUFFER ORIGIN                    80815000
         ST    R3,OPDBEND          SAVE IN PCE                          80816000
         B     DDBIOT              PROCESS PDDBS IN THIS IOT            80817000
DDBPDB   DS    0H                                                       80818000
         TM    PDBFLAG1,PDB1NULL+PDB1NSOT IS PDDB NULL/NOT SYSOUT       80819000
         BNZ   DDBNEXT             BRANCH IF YES                        80820000
*                                                                       80821000
*        CHECK SYSOUT CLASS                                             80822000
*                                                                       80823000
         CLC   PDBCLASS,OPCLASS    DOES SYSOUT CLASS MATCH              80824000
         BNE   DDBSTEP             BRANCH IF NO                         80825000
         EJECT                                                      R41 80825500
*                                                                       80826000
*        CHECK REMAINING CHARACTERISTICS                                80827000
*                                                                       80828000
         LA    JOE,OPWORK          ADDRESS WORK JOE                  R4 80829000
         TM    JOEFLAG2,$JOEDMND   TEST FOR DEMAND-SETUP OPTION      R4 80830000
         LA    JOE,OPCHAR          ADDRESS CHAR-JOE                     80831000
         BZ    SKIP80              SKIP CLASS TEST IF NOT CHOSEN     R4 80832000
         CLC   PDBCLASS,OPMSGCLS   DOES SYSOUT CLASS = MSGCLASS         80833000
         BE    OPDEMAND            BRANCH IF YES - DEMAND SETUP         80834000
SKIP80   CLC   JOEFORM(12),PDBFORMS CHECK FORMS, FCB, UCS               80835000
         BNE   DDBSTEP             BRANCH IF NOT MATCHING               80836000
         CLC   JOEFLASH,PDBFLASH   CHECK FLASH FRAME ID              R4 80837000
         BNE   DDBSTEP             BRANCH IF NOT MATCHING            R4 80838000
         TM    PDBFLAG2,PDB2BRST   VERIFY                            R4 80839000
         BZ    SKIP90               THAT                             R4 80840000
         TM    JOECFLAG,$JOEBRST     PDDB                            R4 80841000
         BZ    DDBSTEP                BURSTER                        R4 80842000
         B     OPDEMAND                SPECIFICATION                 R4 80843000
SKIP90   TM    JOECFLAG,$JOEBRST        MATCHES                      R4 80844000
         BO    DDBSTEP                   CHAR-JOE                    R4 80845000
         SPACE 1                                                    R41 80846000
OPDEMAND CLC   JOEWTRID,PDBWTRID   CHECK EXTERNAL WRITER NAME       R41 80848000
         BNE   DDBSTEP             BRANCH IF NOT MATCHING               80849000
         LA    JOE,OPWORK          ADDRESS WORK-JOE                     80850000
         CLC   JOEDEST,PDBDEST     CHECK DESTINATION                    80851000
         BNE   DDBSTEP             BRANCH IF NOT MATCHING               80852000
         SPACE 1                                                    R41 80853000
OPMATCH  SLR   R0,R0               CLEAR WORK REGISTER              R41 80853100
         SLR   R1,R1               CLEAR COPY-GROUPS SUM            R41 80853200
         LA    R5,8                SET MAX COPY-GROUPS              R41 80853300
         SPACE 1                                                    R41 80853400
OPCOPLUP IC    R0,PDBCOPYG-1(R5)   COMPUTE TOTAL                    R41 80853500
         ALR   R1,R0                COPY COUNT OF                   R41 80853600
         BCT   R5,OPCOPLUP           3800 COPY-GROUPS               R41 80853700
         CLM   R1,1,PDBCOPYS       USE NORMAL                       R41 80853800
         BNL   OPRECCT              COPY COUNT                      R41 80853900
         IC    R1,PDBCOPYS           IF LARGER                      R41 80854000
         SPACE 1                                                    R41 80854100
OPRECCT  L     R0,PDBRECCT         ADD LINE/CARD                    R41 80854200
         MR    R0,R0                COUNT OF PDDB                   R41 80854300
         AL    R1,JOERECCT           TO WORK-JOE                    R41 80854400
         ST    R1,JOERECCT            TOTAL                         R41 80854500
         OI    PDBFLAG1,PDB1NULL   SET PDDB PROCESSED BIT               80854600
         B     DDBNEXT             GO PROCESS NEXT PDDB                 80855000
         SPACE 1                                                    R41 80856000
*********************************************************************** 80857000
*                                                                     * 80858000
*        CHARACTERISTICS DO NOT MATCH -- CHECK NEXT PDDB              * 80859000
*                                                                     * 80860000
*********************************************************************** 80861000
         SPACE 1                                                     R4 80862000
DDBSTEP  OC    OPDDB,OPDDB         RESTART POINT SELECTED...        R41 80864000
         BNZ   DDBNEXT             BRANCH IF YES                        80865000
         ST    R2,OPDDB            SET PDDB AS RESTART POINT            80866000
         ST    JCT,OPIOT           AND SAVE IOT BUFFER ADDRESS          80867000
         B     DDBNEXT             CONTINUE SCAN OF PDDB'S              80868000
         EJECT                                                      R41 80869000
*********************************************************************** 80870000
*                                                                     * 80871000
*        ALL MATCHING PDDB'S HAVE BEEN PROCESSED                      * 80872000
*                                                                     * 80872200
*        ADD A WORK-JOE FOR EACH JOB COPY                             * 80872400
*                                                                     * 80873000
*********************************************************************** 80874000
         SPACE 1                                                     R4 80875000
DDBEND   SLR   RNP,RNP             GET JOB LEVEL                    R41 80876000
         IC    RNP,OPJOBCPY         COPY COUNT                      R41 80876100
         SPACE 1                                                    R41 80876200
OPJCOPY  LH    R5,OPCKPT           GET INDEX OF LAST JOE ADDED      R41 80876300
         LA    R5,1(,R5)           INCR FOR THIS JOE                R41 80876400
         CH    R5,QSEOPCKP         WAS THIS JOE ALREADY ADDED...    R41 80876500
         BNH   OPSKIP              BR IF YES                        R41 80876600
         SPACE 1                                                    R41 80876700
         USING JQEDSECT,R1         PROVIDE JQE ADDRESSABILITY       R41 80876800
         SPACE 1                                                    R41 80876900
OPJOTADD L     R1,PCEJQE           ADDRESS OF JQE              @OZ32566 80877000
         TM    JQEFLAGS,QUEPURGE   HAS $CJOB BEEN ISSUED...         R41 80877100
         BO    OPQPUT              BR IF YES                        R41 80877200
         SPACE 1                                                    R41 80877300
         DROP  R1                  DROP JQE ADDRESSABILITY          R41 80877400
         SPACE 1                                                    R41 80877500
         LA    R0,OPWORK           PROTOTYPE WORK-JOE               R41 80877600
         LA    R1,OPCHAR           PROTOTYPE CHAR-JOE               R41 80877700
        $#ADD  WORK=(R0),CHAR=(R1) ADD WORK TO JOT                  R41 80877800
         BZ    OPADOK              BR IF ADD SUCCESSFUL             R41 80877900
        $DORMANT                   ALLOW $PJES2 WHILE $WAITING      R41 80878000
        $WAIT  JOT                 WAIT FOR JOT SERVICE             R41 80878100
        $ACTIVE                    SHOW HASPHOPE ACTIVE AGAIN       R41 80878200
         B     OPJOTADD            TRY AGAIN                        R41 80878300
         SPACE 1                                                    R41 80878400
OPADOK   STH   R5,QSEOPCKP         SAVE COUNT FOR WARM START        R41 80878500
         SPACE 1                                                    R41 80878600
OPSKIP   STH   R5,OPCKPT           SAVE COUNT IN PCE                R41 80878700
         BCT   RNP,OPJCOPY         ADD A JOE FOR ALL JOB COPIES     R41 80878800
         EJECT                                                      R41 80878900
*********************************************************************** 80879000
*                                                                     * 80879100
*        SELECT PDDB WITH NEW CHARACTERISTICS                         * 80879200
*                                                                     * 80879300
*********************************************************************** 80879400
         SPACE 1                                                    R41 80879500
         ICM   R2,15,OPDDB         IS RESTART ADDRESS 0                 80879600
         BZ    OPQPUT              BRANCH IF YES                        80879700
         L     JCT,OPIOT           RESTART IOT BASE                     80879800
         L     R3,IOTPDDBP         OFFSET AFTER LAST PDDB               80880000
         ALR   R3,JCT              ADD BUFFER ORIGIN                    80881000
         ST    R3,OPDBEND          SAVE IN PCE                          80882000
         B     PDBNEXT             CONTINUE PDDB SCAN                   80883000
         SPACE 3                                                    R41 80884000
*********************************************************************** 80885000
*                                                                     * 80886000
*        ALL PDDBS HAVE BEEN PROCESSED - MAKE JOB AVAILABLE           * 80887000
*                                                                     * 80888000
*********************************************************************** 80889000
         SPACE 1                                                     R4 80890000
OPQPUT   DS    0H                                                       80891000
         L     JCT,OPJCTBUF        ADDRESS JCT IN BUFFER                80892000
         USING JCTDSECT,JCT        ACTIVATE JCT ADDRESSABILITY          80893000
         MVC   JCTOUTON(8),OPTIMEON HOPE SIGN-ON TIME/DATE              80894000
        $TIME                      SIGN-OFF TIME/DATE                   80895000
         STM   R0,R1,JCTOUTOF      HOPE SIGN-OFF TIME/DATE              80896000
         MVC   JCTOTSID,$SID       SET SID FOR TYPE 26 SMF RECORD       80897000
        $#JCT  WRITE               COPY JCT TO SPOOL                    80901000
        $#JCT  FREE                RELEASE JCT BUFFER                   80902000
         EJECT                                                      R41 80903000
*********************************************************************** 80904000
*                                                                     * 80905000
*        IF NO JOES OR HQRS MOVE JOB TO $PURGE, ELSE $HARDCPY         * 80906000
*                                                                     * 80907000
*********************************************************************** 80908000
         SPACE 1                                                     R4 80909000
OPNOJCT  DS    0H                                                       80910000
         L     R1,PCEJQE           ADDRESS OF JQE              @OZ32566 80911000
         LA    R0,$PURGE           SET NEXT QUEUE AS $PURGE             80912000
         USING JQEDSECT,R1         ACTIVATE JQE ADDRESSABILITY          80913000
        $QSUSE                     REQUEST ACCESS TO CHECKPOINT DATA    80914000
         LH    R3,JQEJOECT         IS SUM OF JOE COUNT                  80915000
         AH    R3,JQEHLDCT          AND HOLD COUNT ZERO                 80916000
         DROP  R1                  SUSPEND JQE ADDRESSABILITY           80917000
         BZ    *+8                 BRANCH IF YES                        80918000
         LA    R0,$HARDCPY         SET NEXT QUEUE AS $HARDCPY           80919000
        $QPUT  (R1),(R0)           MOVE JOB TO NEXT QUEUE               80920000
         MVC   PCEJQE,$ZEROS       CLEAR JQE ADDRESS           @OZ32566 80920500
         EJECT                                                       R4 80921000
         SPACE 3                                                     R4 80943000
*********************************************************************** 80944000
*                                                                     * 80945000
*        FREE CHAIN OF IOT BUFFERS USED DURING JOE CREATION           * 80946000
*                                                                     * 80947000
*********************************************************************** 80948000
         SPACE 1                                                     R4 80949000
OPTERM   DS    0H                                                       80950000
         USING IOTDSECT,JCT        ACTIVATE IOT ADDRESSABILITY          80951000
         ICM   JCT,15,OPIOTBUF     LOAD AND TEST BUFFER POINTER         80952000
         BZ    OPPURGE             BRANCH IF ZERO                       80953000
         MVC   OPIOTBUF,IOTIOT     COPY NEXT BUFFER POINTER             80954000
        $FREEBUF (JCT)             FREE IOT BUFFER CHAIN                80955000
         B     OPTERM              CYCLE THROUGH ALL IOT BUFFERS        80956000
OPPURGE  DS    0H                                                       80957000
         SLR   R0,R0               CLEAR REGISTER                       80958000
         STH   R0,QSEOPJNO         CLEAR JOB NUMBER                     80959000
         STH   R0,QSEOPCKP         CLEAR PARTIAL JOE COUNT              80960000
        $DORMANT                   INDICATE PROCESSOR DORMANT           80961000
         B     HASPHOPE            TRY TO GET ANOTHER JOB               80962000
         DROP  JOE                 SUSPEND JOE ADDRESSABILITY           80963000
         TITLE 'HASP OUTPUT PROCESSOR -- BUFFER READ/WRITE AND CHECK SUC80964000
               BROUTINE'                                             R4 80965000
*********************************************************************** 80966000
*                                                                     * 80967000
*        BUFFER READ/WRITE AND CHECK SUBROUTINE                       * 80968000
*                                                                     * 80969000
*********************************************************************** 80970000
         SPACE 1                                                     R4 80971000
OPIOCK   DS    0H                                                       80972000
         USING BUFDSECT,R1         ACTIVATE BUFFER ADDRESSABILITY       80973000
         LA    R15,IOBCCW1         RESET IOBSTART                       80974000
         ST    R15,IOBSTART         TO FIRST CCW IN CHAIN               80975000
         DROP  R1                  SUSPEND BUFFER ADDRESSABILITY        80976000
         ST    R1,PCEBUFAD         STORE BUFFER ADDRESS IN DCT          80977000
         ST    R0,PCESEEK          STORE TRACK ADDRESS IN DCT           80978000
         LA    R1,PCEDADCT         SETUP DCT ADDRESS FOR $EXCP          80979000
        $EXCP  (R1),WAIT=YES       INITIATE I/O AND WAIT             R4 80980000
         BMR   RNP                 RETURN IF ERROR WITH NON-ZERO CC  R4 80981000
         SR    R15,R15             SET GOOD RETURN CODE                 80982000
         BR    RNP                 RETURN TO CALLER                     80983000
         DROP  BASE2               SUSPEND LOCAL ADDRESSABILITY         80984000
         TITLE 'HASP OUTPUT PROCESSOR -- LITERAL POOL AND CONSTANTS' R4 80985000
         LTORG                                                          80986000
         SPACE 2                                                     R4 80987000
        $MID   165                 GENERATE MESSAGE ID                  80989000
MSG165   DC    CL86'IDSE ''&MID.JOBNNNNN  JOBNAMES'                     80990000
         ORG   MSG165                                                   80991000
         DC    X'165F'             MESSAGE ID                           80992000
         ORG   ,                                                        80993000
         SPACE 1                                                     R4 80994000
M165LOC  EQU   JCTWORK,L'MSG165    LOCATION FOR MESSAGE              R4 80995000
M165JNAM EQU   M165LOC+25,8        LOCATION FOR JOB NAME             R4 80996000
M165JBID EQU   M165LOC+15,8        LOCATION FOR JOBID                R4 80997000
         TITLE 'HASP PRINT/PUNCH SERVICE PROCESSOR'                     81017000
*********************************************************************** 81018000
*                                                                     * 81019000
*              PRINT/PUNCH REGISTER DEFINITIONS                       * 81020000
*                                                                     * 81021000
*********************************************************************** 81022000
         SPACE 3                                                        81023000
PW       EQU   WA                  WORK REGISTER                        81024000
PBUF     EQU   WB                  BUFFER POINTER                       81025000
PC1      EQU   WC                  CCW REGISTER 1                    R4 81026000
PC2      EQU   WD                  CCW REGISTER 2                       81027000
BASE4    EQU   WE                  PRPU THIRD LOCAL BASE REGISTER    R4 81028000
PL       EQU   WF                  INTERNAL LINKAGE REGISTER            81029000
         SPACE 5                                                        81030000
*********************************************************************** 81031000
*                                                                     * 81032000
*              PPFLAG SWITCH DEFINITIONS                              * 81033000
*                                                                     * 81034000
*********************************************************************** 81035000
         SPACE 3                                                        81036000
PPWSW    EQU   X'80'               PRINT/PUNCH WRITE SWITCH             81037000
PPDELSW  EQU   X'40'               PRINT/PUNCH SUSPEND SWITCH           81038000
PPDALOC  EQU   X'20'               PRINT/PUNCH ALLOCATION IOT           81039000
PRDELSW  EQU   X'10'               PRINT/PUNCH TERMINATION SWITCH       81040000
PPFUNCI  EQU   X'08'               PUNCH INTERPRET REQUESTED            81041000
PPRDERR  EQU   X'04'               PRINT/PUNCH DATA READ ERROR          81042000
PPJCTIOT EQU   X'02'               PRINT/PUNCH JCT/IOT READ ERROR       81043000
PPNEWS   EQU   X'01'               PRINT JES2-NEWS PROCESS SWITCH   R41 81043500
         SPACE 2                                                     R4 81044000
*********************************************************************** 81045000
*                                                                     * 81046000
*              PPFLAG2 SWITCH DEFINITIONS                             * 81047000
*                                                                     * 81048000
*********************************************************************** 81049000
         SPACE 2                                                     R4 81050000
PPTCEL   EQU   X'80'               TRACK-CELL DE-SPOOLING SWITCH     R4 81051000
PPRSW    EQU   X'40'               PRINT/PUNCH READ SWITCH           R4 81052000
PPCKPT   EQU   X'20'               PRINT/PUNCH CKPT-NEEDED SWITCH    R4 81053000
PPCKPTA  EQU   X'10'               PRINT/PUNCH CKPT-ALLOWED SWITCH   R4 81054000
PPCIWAIT EQU   X'08'               PRINT/PUNCH PCI WAIT SWITCH       R4 81055000
PPOPTJ   EQU   X'04'               PRINTER OPTCD=J SWITCH            R4 81056000
PPFDS    EQU   X'02'               FIRST SYSOUT DATA SET SWITCH      R4 81057000
PSMFDSER EQU   X'01'               DATA BUFFER ERROR FLAG FOR SMF    R4 81058000
         TITLE 'HASP PRINT/PUNCH SERVICE -- PROCESSOR INITIALIZATION'   81059000
*********************************************************************** 81060000
*                                                                     * 81061000
*        HASP PRINT/PUNCH PROCESSOR -- MAIN ENTRY POINT               * 81062000
*                                                                     * 81063000
*********************************************************************** 81064000
         SPACE 1                                                     R4 81065000
HASPPPI1 $ENTRY BASE=(BASE2,BASE3,BASE4)  PRINT/PUNCH MAIN ENTRY     R4 81066000
         SPACE 3                                                     R4 81067000
         USING BUFDSECT,PBUF       ACTIVATE BUFFER ADDRESSABILITY       81068000
         USING JCTDSECT,JCT        ACTIVATE JCT ADDRESSABILITY          81069000
         USING DCTDSECT,R1         ACTIVATE DCT ADDRESSABILITY          81070000
         SPACE 3                                                     R4 81071000
         LA    BASE3,2048(,BASE2)  SETUP SECOND LOCAL                   81072000
         LA    BASE3,2048(,BASE3)   BASE REGISTER                       81073000
         LA    BASE4,2048(,BASE3)  SETUP THIRD LOCAL                 R4 81074000
         LA    BASE4,2048(,BASE4)   BASE REGISTER                    R4 81075000
         SPACE 1                                                     R4 81076000
         XC    PBUFADDR,PBUFADDR   CLEAR PRIMARY BUFFER ADDRESS     R41 81076500
         XC    PDDBSKIP,PDDBSKIP   CLEAR REPOSITIONING COUNTERS FOR  R4 81077000
         XC    PBUFSKIP,PBUFSKIP    CARDS/LINES AND BUFFER           R4 81078000
         XC    PCKPT,PCKPT         CLEAR CHECKPOINT DATA AREA        R4 81079000
         XC    PPCKPTR,PPCKPTR     CLEAR CHECKPOINT DATA POINTER     R4 81080000
         SPACE 1                                                     R4 81081000
         MVC   PCEJQE,$ZEROS       CLEAR JQE ADDRESS           @OZ32566 81082000
         L     R1,$HASPECB         ADDRESS GETMAINED AREA      @OZ32235 81082100
         LA    R1,$SVBLANK(,R1)    POINT TO BLANK DATA         @OZ32235 81082200
         STCM  R1,7,PUCCWBL+1      INITIALIZE BLANK CARD CCW   @OZ32235 81082300
         STCM  R1,7,PUSPACCW+1     INITIALIZE 3525 SPACER CCW  @OZ32235 81082400
         MVI   PSMFDCI,0           CLEAR SMF FLAGS             @OZ32566 81082500
         EJECT                                                       R4 81083000
*********************************************************************** 81084000
*                                                                     * 81085000
*        TRY TO GET AN IDLE PRINTER OR PUNCH                          * 81086000
*                                                                     * 81087000
*********************************************************************** 81088000
         SPACE 1                                                     R4 81089000
PGETUNIT $GETUNIT PCEDCT           ATTEMPT ACQUIRE PRT/PUN DCT @OZ32566 81090000
         BNZ   PGOTUNIT            BR IF DEVICE AVAILABLE            R4 81091000
         SPACE 1                                                     R4 81092000
*********************************************************************** 81093000
*                                                                     * 81094000
*        DEVICE NOT AVAILABLE -- ISSUE $WAIT                          * 81095000
*                                                                     * 81096000
*********************************************************************** 81097000
         SPACE 1                                                     R4 81098000
         TM    PCEID,PCERJEID      TEST FOR REMOTE TERMINAL          R4 81099000
         BO    PRJEDEV             BR IF SO                          R4 81100000
        $WAIT  UNIT,INHIBIT=NO      ELSE $WAIT FOR U/R DEVICE        R4 81101000
         B     PGETUNIT            THEN BR TO TRY AGAIN              R4 81102000
         SPACE 1                                                     R4 81103000
PRJEDEV $WAIT  WORK                $WAIT FOR RJE DEVICE              R4 81104000
         B     PGETUNIT            THEN BR TO TRY AGAIN              R4 81105000
         SPACE 1                                                     R4 81106000
*********************************************************************** 81107000
*                                                                     * 81108000
*        GOT A PRINTER OR PUNCH -- SHOW PROCESSOR ACTIVE              * 81109000
*                                                                     * 81110000
*********************************************************************** 81111000
         SPACE 1                                                     R4 81112000
PGOTUNIT MVI   PPFLAG,0            CLEAR PRINT/PUNCH FLAGS          R41 81114000
         MVI   PPFLAG2,0           CLEAR PRINT/PUNCH FLAGS           R4 81115000
         CLI   DCTDEVTP,DCTPUN     IF DEVICE                         R4 81116000
         BNE   SKIP100              IS LOCAL PUNCH,                  R4 81117000
         XC    PULMTTR(7),PULMTTR  CLEAR PUNCH RESTART POINTER       R4 81118000
         SPACE 1                                                     R4 81119000
SKIP100  MVI   DCTFLAGS,0          RESET OPERATOR COMMANDS              81120000
        $ACTIVE R=PW               INDICATE PROCESSOR ACTIVE            81121000
         EJECT                                                       R4 81122000
*********************************************************************** 81123000
*                                                                     * 81124000
*        FOR REMOTE PRINTERS -- PRINT ANY SPOOLED MESSAGES            * 81125000
*                                                                     * 81126000
*********************************************************************** 81127000
         SPACE 1                                                     R4 81128000
         TM    PCEID,PCELCLID+PCEPUSID  TEST PROCESSOR TYPE             81129000
         BNZ   PTSTINIT            BR IF NOT REMOTE PRINTER    @OZ30048 81130000
         TM    DCTPPSW,DCTPPSWS    SUPPRESS SEP PAGE                    81131000
         BO    PGETJOB             BRANCH IF YES                        81132000
         CLI   $SPOLMSG,0          IF NO MSG SPOOL BUFFERS,          R4 81133000
         BE    PGETJOB              BR TO GET A JOB                  R4 81134000
         CLI   DCTDEVTP,DCTRCON    IF NOT A CONSOLE DCT        @OZ26040 81134500
         BNE   PSNACHK               GO CHECK FOR SNA REMOTE   @OZ26040 81134600
PGETRAT  DS    0H                                              @OZ26040 81134610
         L     R1,DCTDCB           POINT                       @OZ26040 81134620
         L     R1,MDCTRAT            TO RAT                    @OZ26040 81134630
         B     PMSGS               GO CHECK FOR MESSAGES       @OZ26040 81134640
PSNACHK  DS    0H                                              @OZ26040 81134650
         TM    MDCTTYPE,DCTPLU1    IF NOT AN SNA REMOTE             R41 81134700
         BNO   PGETRAT             GET RAT ADDRESSABLILITY     @OZ26040 81134800
         L     R1,DCTDCB           POINT                            R41 81134900
         L     R1,MDCTRAT           TO RAT                          R41 81135000
         USING RATDSECT,R1         EST. RAT ADDRESSABILITY     @OZ26040 81135100
         TM    RATCONF,RATCONFC    IF RMT HAS A CONSOLE,       @OZ33415 81135200
         BO    PGETJOB               GO GET A JOB              @OZ26040 81135300
PMSGS    DS    0H                                                   R41 81135400
         $QSUSE                    REQUEST ACCESS TO SHARED Q  @OZ26040 81135500
         SLR   R14,R14               GET NUMBER OF REMOTE      @OZ26040 81135600
         IC    R14,RATCONRT+1          WITH CONSOLE            @OZ26040 81135700
         BCTR  R14,0                     LESS 1 FOR OFFSET     @OZ26040 81135800
         LR    R15,R14             SAVE REMOTE NUMBER (-1)     @OZ26040 81135900
         MH    R15,=Y(RATTLE)      CALCULATE RAT DISPLACEMENT  @OZ26040 81136000
         A     R15,$RATABLE        GET ADDRESS OF RAT ENTRY    @OZ26040 81136100
         CLR   R15,R1              IF CONSOLE AND PRINTER ARE  @OZ26040 81136200
         BE    PMSGDSP               SAME RMT, DE-SPOOL MSGS   @OZ26040 81136300
         L     R15,RATLDCT-RATDSECT(,R15) IF CONSOLE'S REMOTE  @OZ26040 81136400
         LTR   R15,R15             SIGNED ON THIS SYSTEM,      @OZ26040 81136500
         BNZ   PGETJOB               DON'T PRINT MESSAGES      @OZ26040 81136600
         USING DCTDSECT,R1         RESTORE DCT ADDRESSABILITY  @OZ26040 81136700
         LR    R15,R14             THREE TIMES                 @OZ26040 81136800
         ALR   R15,R14               REMOTE NUMBER             @OZ26040 81136900
         ALR   R15,R14                 MINUS ONE               @OZ26040 81137000
         SLR   R14,R14             COMPUTE BIT AND             @OZ26040 81137100
         D     R14,=F'8'             BYTE OFFSET               @OZ26040 81137200
         AL    R15,$RMTSON             TO REMOTE SIGNON BITS   @OZ26040 81137300
         ICM   R15,12,0(R15)       PICK UP BITS                @OZ26040 81137400
         SLL   R15,0(R14)           ISOLATE BITS FOR           @OZ26040 81137500
         SRL   R15,29                  THIS REMOTE             @OZ26040 81137600
         LTR   R15,R15             IF RMT SIGNED ON ANY SYSTM  @OZ26040 81137700
         BNZ   PGETJOB              THEN DON'T PRINT MESSAGES  @OZ26040 81137800
PMSGDSP  DS    0H                                              @OZ26040 81137900
         SLR   PBUF,PBUF           SET NO BUFFER INDICATION    @OZ26040 81138000
         SLR   JCT,JCT             SET NO JOB INDICATION       @OZ26040 81138100
         MVC   PPKEY,=C'MSPOOL'    SET SPECIAL JOB/DATA KEY    @OZ26040 81138200
         SLR   PW,PW               INITIALIZE                  @OZ26040 81138300
         BCTR  PW,0                 LINE COUNT                          81139000
         ST    PW,PRLINECT           LIMIT                              81140000
PRSMTEST DS    0H                                                       81141000
*              THIS LINE DELETED BY APAR NUMBER                @OZ26040 81142000
         L     R1,PCEDCT           ADDRESS PRINTER DCT         @OZ32566 81143000
         SLR   R15,R15             MULTIPLY                          R4 81144000
         IC    R15,DCTROUTE         REMOTE                           R4 81145000
         LA    PW,0(R15,R15)         NUMBER                          R4 81146000
         ALR   PW,R15                 BY THREE                       R4 81147000
         AL    PW,$MSPOOLQ         ADD MESSAGE QUEUE BASE ADDRESS    R4 81148000
         CLC   0(1,PW),1(PW)       PRINTED VERSUS WRITTEN QUEUES        81149000
         BE    PRMDONE             BRANCH IF NO SPOOL MESSAGES          81150000
        $GETBUF WAIT=YES           GET A DATA BUFFER                 R4 81151000
         ST    R1,PBUFSAVE         SAVE BUFFER ADDRESS                  81152000
         ST    R1,PBUFADDR         SAVE BUFFER ADDRESS               R4 81153000
         LR    PBUF,R1             ESTABLISH BUFFER ADDRESSABILITY      81154000
         ST    PBUF,PINIOB         INITIALIZE INPUT IOB ADDRESS      R4 81155000
         MVI   PBUFOPT,1           FORCE SINGLE BUFFERING            R4 81156000
         EJECT                                                       R4 81157000
         L     R1,PCEDCT           RELOAD PRINTER DCT ADDRESS  @OZ32566 81158000
         TM    MDCTTYPE,DCTPSNA    TEST FOR SNA REMOTES              R4 81160000
         BNO   *+14                NO, SKIP---                       R4 81161000
         MVC   PRMTSSEL,MDCTSEL    SAVE RMT SELECT BYTE IN WORK AREA R4 81162000
         MVI   MDCTSEL,FMHCNSLE+DCTPOUTB USE OUTBOUND CONSOLE SELECT R4 81163000
        $EXTP  OPEN,(R1)           OPEN REMOTE FOR SPOOL MESSAGES    R4 81165000
         BZ    PRMFINI             OPEN FAILED, BR -- TERMINATE      R4 81166000
         SPACE 2                                                     R4 81167000
PRFNDMSG DS    0H                                                    R4 81168000
        $QSUSE                     REQUEST ACCESS TO SHARED QUEUES   R4 81169000
         L     R1,PCEDCT           LOAD DCT ADDR IN CASE DESTR @OZ32566 81170000
         SLR   R15,R15             MULTIPLY                          R4 81171000
         IC    R15,DCTROUTE         REMOTE                           R4 81172000
         LA    PW,0(R15,R15)         NUMBER                          R4 81173000
         ALR   PW,R15                 BY THREE                       R4 81174000
         AL    PW,$MSPOOLQ         ADD MESSAGE QUEUE BASE            R4 81175000
         CLC   0(1,PW),1(PW)       CHECK PRINTED VS. WRITTEN QUEUES  R4 81176000
         BE    PRMDONE             BRANCH IF NO MESSAGES TO PRINT    R4 81177000
         MVC   PJCTBUF(2),0(PW)    SAVE POINTERS TO PRINTED/WRITTEN  R4 81178000
         MVC   0(1,PW),1(PW)       SHOW ALL PRINTED                  R4 81179000
        $POST  $HASPECF,CKPW       POST CHECKPOINT PROCESSOR         R4 81180000
         EJECT                                                       R4 81181000
*********************************************************************** 81182000
*                                                                     * 81183000
*        INITIALIZE PROCESSOR TO PRINT A SINGLE SPOOL MESSAGE BUFFER  * 81184000
*                                                                     * 81185000
*********************************************************************** 81186000
         SPACE 1                                                     R4 81187000
PRMTMSG  DS    0H                  *                                    81188000
         MVI   PBFAVAIL,1          SHOW ONLY 1 DATA BUFFER AVAILABLE R4 81189000
         SLR   PW,PW               CLEAR WORK REGISTER                  81190000
         IC    PW,PJCTBUF          GET PRINTED RECORD NUMBER            81191000
         LA    PW,1(,PW)           ADD ONE FOR NEXT VALID BUFFER        81192000
         STC   PW,PJCTBUF          STORE FOR LATER                      81193000
         SLR   R15,R15             IS RECORD                         R4 81194000
         IC    R15,$SPOLMSG         NUMBER                           R4 81195000
         LA    PW,1(,PW)             GREATER THAN                    R4 81196000
         SR    PW,R15                 &SPOLMSG - 1                   R4 81197000
         BNP   *+8                 BRANCH IF NO                         81198000
         MVI   PJCTBUF,0           SET RECORD NUMBER TO ZERO            81199000
         SPACE 1                                                     R4 81200000
*********************************************************************** 81201000
*                                                                     * 81202000
*        COMPUTE MTTR FROM RECORD NUMBER                              * 81203000
*                                                                     * 81204000
*********************************************************************** 81205000
         SPACE 1                                                     R4 81206000
         L     R1,PCEDCT           ADDRESS PRINTER DCT         @OZ32566 81207000
         SLR   PW,PW               MULTIPLY                          R4 81208000
         IC    PW,DCTROUTE           &SPOLMSG                        R4 81209000
         SLR   R14,R14               BY REMOTE                       R4 81210000
         MR    R14,PW                NUMBER                          R4 81211000
         IC    R14,PJCTBUF         GET RELATIVE RECORD NUMBER           81212000
         ALR   R15,R14             ADD TO REMOTE SPACE BASE             81213000
         L     PW,$TEDADDR         ADDRESS FIRST TRACK EXTENT DATA      81214000
         LH    PW,TNRT-TEDDSECT(,PW) GET NUMBER OF TRACKS/RECORD        81215000
         SLR   R14,R14             CLEAR WORK REGISTER                  81216000
         DR    R14,PW              DIVIDE RECORD # BY RECS/TRACK        81217000
         SLL   R15,8               MOVE TO TT IN MTTR                   81218000
         LA    R14,1(,R14)         STEP PAST RECORD ZERO                81219000
         ALR   R15,R14             ADD REMAINING RECORD NUMBER          81220000
         L     R14,$DACKPT         GET BASE MTTR                     R4 81221000
         LH    R14,2(,R14)          FOR SPOOL MESSAGES               R4 81222000
         SLL   R14,8               MOVE TO TT IN MTTR                   81223000
         ALR   R15,R14             ADD TO CURRENT RECORD OFFSET         81224000
         BAL   PL,PRDBUF           INITIATE READ OF NEXT DATA BLOCK     81225000
         BAL   PL,PRDCHK           CHECK READ                           81226000
         CLI   BUFECBCC,X'7F'      TEST COMPLETION CODE                 81227000
         BNE   PRSMBEOB            BRANCH IF IN ERROR                   81228000
         XC    HDBNXTRK,HDBNXTRK   CLEAR CHAIN TRACK                    81229000
         B     PNXTBLK             PRINT DATA BLOCK                  R4 81230000
         EJECT                                                       R4 81231000
*********************************************************************** 81232000
*                                                                     * 81233000
*        END OF, OR ERROR IN SPOOLED MESSAGE BUFFER                   * 81234000
*                                                                     * 81235000
*********************************************************************** 81236000
         SPACE 1                                                     R4 81237000
PRSMBEOB DS    0H                                                       81238000
         MVI   PPFLAG,0            RESET ANY ERROR INDICATIONS          81239000
         CLC   PJCTBUF(1),PJCTBUF+1 END OF CURRENT SERIES               81240000
         BNE   PRMTMSG             BRANCH IF NO                         81241000
         B     PRFNDMSG            CHECK FOR ADDITIONAL MESSAGES     R4 81242000
         SPACE 1                                                     R4 81243000
*********************************************************************** 81244000
*                                                                     * 81245000
*        END OF ALL SPOOLED MESSAGE BUFFERS FOR THIS REMOTE           * 81246000
*                                                                     * 81247000
*********************************************************************** 81248000
         SPACE 1                                                     R4 81249000
PRMDONE  DS    0H                                                       81250000
         LTR   PBUF,PBUF           WERE ANY SPOOLED MESSAGES PRINTED    81251000
         BZ    PGETJOB             BRANCH IF NO                         81252000
         LM    PC1,PC2,PRCCWSP     LOAD 3 SPACE CCW                     81253000
         BAL   PL,PPPUT            ADD CCW TO CHAIN                     81254000
         BAL   PL,PPPUT            ADD CCW TO CHAIN                     81255000
         BAL   PL,PPPUT            ADD CCW TO CHAIN                     81256000
         BAL   PL,PPPUT            ADD CCW TO CHAIN                     81257000
         L     R1,PCEDCT           GET ADDRESS OF REMOTE DCT   @OZ32566 81258000
        $EXTP  CLOSE,(R1)          CLOSE REMOTE DCT                  R4 81259000
PRMFINI  TM    MDCTTYPE,DCTPSNA    TEST FOR SNA REMOTES              R4 81261000
         BNO   *+10                NO, SKIP NEXT                     R4 81262000
         MVC   MDCTSEL,PRMTSSEL    RESTORE ORIG. SNA DEVICE SELECT   R4 81263000
         $FREEBUF (PBUF)           FREE HASP BUFFER                  R4 81264000
         TM    $PRTOPTS,$RPRBOPT   TEST REMOTE PRT BUFFERING OPTION  R4 81265000
         BZ    PNOJOB              BR IF SINGLE BUFFERING            R4 81266000
         MVI   PBUFOPT,2            ELSE FORCE DOUBLE BUFFERING      R4 81267000
         B     PNOJOB              THEN BR TO FREE THE UNIT          R4 81268000
         SPACE 1                                                     R4 81269000
PTSTINIT DS    0H                                              @OZ30048 81269100
         TM    PCEID,PCEPUSID      IS DEVICE A PUNCH...        @OZ30048 81269150
         BO    PGETJOB             BR IF YES, GET A JOB        @OZ30048 81269200
         CLI   PDEVTYPE+3,UCB3800  NON-IMPACT PRINTER...       @OZ30048 81269250
         BE    PGETJOB             BR IF YES, GET A JOB        @OZ30048 81269300
         TM    DCTPPSW2,DCTINIT    FIRST USE OF UNIT...        @OZ30048 81269350
         BO    PGETJOB             BR IF NO, GET A JOB         @OZ30048 81269400
         OI    DCTPPSW2,DCTINIT    TURN ON FIRST-USE FLAG      @OZ30048 81269450
         L     R15,=A(PINITSU)     CALL IMAGE                  @OZ30048 81269500
         BALR  PL,R15                READ ROUTINE              @OZ30048 81269550
         B     PGETJOB             FINSHED, GET A JOB          @OZ30048 81269600
         DROP  R1                  SUSPEND DCT ADDRESSABILITY           81270000
         EJECT                                                          81271000
*********************************************************************** 81272000
*                                                                     * 81273000
*        ATTEMPT TO GET WORK FROM THE JOB OUTPUT TABLE (JOT)          * 81274000
*                                                                     * 81275000
*********************************************************************** 81276000
         SPACE 1                                                     R4 81277000
PGETJOB  DS    0H                                                       81278000
         L     R1,PCEDCT           GET PRINTER/PUNCH           @OZ32566 81278100
         LA    R1,0(,R1)             DCT ADDRESS               @OZ26040 81279000
         CLI   DCTDEVTP-DCTDSECT(R1),DCTRCON IF A CONSOLE DCT       R41 81279500
         BE    PNOJOB                         DONT LOOK FOR JOB     R41 81279600
        $#GET  DCT=(R1)            IS THERE WORK                        81280000
         BNZ   PGOTJOB             BRANCH IF WORK FOUND                 81281000
         SPACE 1                                                     R4 81282000
*********************************************************************** 81283000
*                                                                     * 81284000
*        NO WORK IS CURRENTLY AVAILABLE - FREE RESOURCES              * 81285000
*                                                                     * 81286000
*********************************************************************** 81287000
         SPACE 1                                                     R4 81288000
PNOJOB   L     PW,PCEDCT           GET ADDR OF PRINT/PUNCH DCT @OZ32566 81289000
         SPACE 1                                                     R4 81290000
         USING DCTDSECT,PW         ESTABLISH DCT ADDRESSABILITY         81291000
         SPACE 1                                                     R4 81292000
         OI    DCTSTAT,DCTHOLD     SET DEVICE UNAVAILABLE            R4 81293000
        $FREUNIT (PW)              FREE DEVICE                          81294000
        $DORMANT                   INDICATE PROCESSOR INACTIVE          81295000
         TM    PCEID,PCERJEID      TEST PROCESSOR TYPE                  81296000
         BO    HASPPPI1            BRANCH IF REMOTE                     81297000
         EJECT                                                       R4 81298000
*********************************************************************** 81299000
*                                                                     * 81300000
*        ISSUE DEVICE INACTIVE MESSAGE TO THE OPERATOR                * 81301000
*                                                                     * 81302000
*********************************************************************** 81303000
         SPACE 1                                                     R4 81304000
         TM    DCTPPSW,DCTPPSWI    INACTIVE MESSAGE ISSUED              81305000
         BO    PJOTWAIT            BRANCH IF YES                        81306000
         OI    DCTPPSW,DCTPPSWI    SET INACTIVE MESSAGE ISSUED          81307000
        $MID   160                                                   R4 81308000
         MVC   PMESSAGE(2),=X'160F' INACTIVE MESSAGE ID                 81309000
         MVC   PMESSAGE+2(8),DCTDEVN GET DEVICE NAME                    81310000
         MVC   PMESSAGE+10(18),=CL18' INACTIVE - CLASS='                81311000
         SLR   R15,R15             SET                               R4 81312000
         IC    R15,$NUMCLAS         CLASS                            R4 81313000
         BCTR  R15,0                 FROM                            R4 81314000
         EX    R15,PMOVMSG            Q=                             R4 81315000
         LA    R0,29(,R15)         GET TOTAL MESSAGE SIZE            R4 81316000
        $WTO   PMESSAGE,(R0),JOB=NO,  ISSUE MESSAGE                  R4C81317000
               ROUTE=$LOG+$UR,CLASS=$TRIVIA,PRI=$ST                     81318000
         SPACE 3                                                     R4 81319000
*********************************************************************** 81320000
*                                                                     * 81321000
*        WAIT FOR WORK TO BE ADDED TO THE JOB OUTPUT TABLE            * 81322000
*                                                                     * 81323000
*********************************************************************** 81324000
         SPACE 1                                                     R4 81325000
PJOTWAIT DS    0H                                                       81326000
        $WAIT  JOT                 WAIT FOR JOT ACTIVITY                81327000
         NI    DCTSTAT,255-DCTHOLD RELEASE DCT                          81328000
         B     HASPPPI1            GO BACK AND TRY AGAIN                81329000
         SPACE 1                                                     R4 81330000
PMOVMSG  MVC   PMESSAGE+28(*-*),DCTCLASS  *** EXECUTE ONLY ***       R4 81331000
         SPACE 1                                                     R4 81332000
         DROP  PW                  DROP DCT ADDRESSABILITY              81333000
         EJECT                                                          81334000
*********************************************************************** 81335000
*                                                                     * 81336000
*        A JOB HAS BEEN GOTTEN FROM THE JOB OUTPUT TABLE              * 81337000
*                                                                     * 81338000
*********************************************************************** 81339000
         SPACE 1                                                     R4 81340000
PGOTJOB  DS    0H                                                       81341000
         ST    R0,PCHJOE           SAVE CHAR-JOE ADDRESS                81342000
         ST    R1,PCEJQE           STORE JQE ADDRESS           @OZ32566 81343000
         ST    R15,PWKJOE          SAVE WORK-JOE ADDRESS                81344000
         LR    JCT,R1              SET JCT = A(JOB QUEUE ELEMENT)       81345000
        $TIME  ,                   GET TIME OF DAY                      81346000
         STM   R0,R1,PTIMEON       PRPU SIGN-ON TIME/DATE               81347000
         MVI   PDCTFLAG,0          CLEAR PRPU COPY OF DCTFLAGS       R4 81348000
         OI    PPFLAG2,PPFDS       SHOW 1ST DATA SET BEING PROCESSED R4 81349000
         SPACE 1                                                     R4 81350000
*********************************************************************** 81351000
*                                                                     * 81352000
*        IF NOT LOCAL -- INITIALIZE REMOTE PRINTER OR PUNCH           * 81353000
*                                                                     * 81354000
*********************************************************************** 81355000
         SPACE 1                                                     R4 81356000
         TM    PCEID,PCELCLID      TEST PROCESSOR TYPE                  81357000
         BO    PLOCAL              BRANCH IF LOCAL                      81358000
        $EXTP  OPEN,PCEDCT         OPEN REMOTE FOR PRT OR PNCH @OZ32566 81359000
         BNZ   PGOTJB1             OPEN SUCCEEDED              @OZ25817 81361000
         USING JOEDSECT,R1         PROVIDE JOE ADDRESSABILITY  @OZ25817 81361020
         L     R1,PWKJOE           MAKE WORKJOE ADDRESSABLE    @OZ25817 81361050
         TM    JOEFLAG,$JOECKV     IS CHKPT-JOE DATA VALID?    @OZ25817 81361100
         BZ    PJOEPUT             NO, BR TO REQUEUE WK-JOE    @OZ25817 81361200
         LH    R15,JOECKPT         HALF-WD OFFSET OF CKPT-JOE  @OZ25817 81361300
         N     R15,=F'65535'       CLEAR LEFT HALFWORD         @OZ25817 81361400
         SLL   R15,2               EXPANDTO BYTE OFFSET        @OZ25817 81361500
         AL    R15,$JOTABLE        ADD JOB OUTPUT TABLE ORG.   @OZ25817 81361600
         ST    R15,PCKJOE          SAVE CKPT-JOE @ IN PCE      @OZ25817 81361700
         MVC   PCKJOE(1),JOEFLAG     SAVE WK-JOE FLAGS IN PCE  @OZ25817 81361800
         B     PJPUTI              RETURN TO JOT WITH CKPT     @OZ25817 81361900
         DROP  R1                                              @OZ25817 81361950
         SPACE 1                                               @OZ25817 81362000
*************************************************************  @OZ25817 81362100
*                                                              @OZ25817 81362200
*        OPEN SUCCEEDED                                        @OZ25817 81362300
*                                                              @OZ25817 81362400
*************************************************************  @OZ25817 81362500
PGOTJB1  DS    0H                                              @OZ25817 81362600
        $GETBUF WAIT=YES           GET A DATA BUFFER                 R4 81363000
         ST    R1,PBUFSAVE         SAVE BUFFER ADDRESS               R4 81364000
         CLI   PBUFOPT,2           TEST FOR DOUBLE BUFFERING         R4 81365000
         BNE   PRMTNOSB            BR IF NOT                         R4 81366000
        $GETBUF WAIT=YES           GET SECOND DATA BUFFER            R4 81367000
         SPACE 1                                                     R4 81368000
PRMTNOSB LR    PBUF,R1             ACTIVATE BUFFER ADDRESSABILITY    R4 81369000
         ST    PBUF,PBUFADDR       SAVE BUFFER ADDRESS               R4 81370000
         ST    PBUF,PINIOB         INITIALIZE INPUT IOB POINTER      R4 81371000
         B     PSIGNON             BRANCH AROUND LOCAL DEVICE INIT  R41 81372000
         EJECT                                                       R4 81373000
*********************************************************************** 81374000
*                                                                     * 81375000
*        LOCAL DEVICE INITIALIZATION                                  * 81376000
*                                                                     * 81377000
*********************************************************************** 81378000
         SPACE 1                                                     R4 81379000
PLOCAL   DS    0H                                                       81380000
         L     PW,PCEDCT           GET ADDRESS OF PRT/PNCH DCT @OZ32566 81381000
         SPACE 1                                                     R4 81382000
         USING DCTDSECT,PW         ESTABLISH DCT ADDRESSABILITY         81383000
         SPACE 1                                                     R4 81384000
         NI    DCTPPSW,255-DCTPPSWI RESET INACTIVE MESSAGE SWITCH       81385000
         SPACE 1                                                     R4 81386000
*********************************************************************** 81387000
*                                                                     * 81388000
*        DETERMINE DE-SPOOLING METHOD    (SINGLE OR TRACK-CELL)       * 81389000
*                                                                     * 81390000
*********************************************************************** 81391000
         SPACE 1                                                     R4 81392000
         LA    PC2,1               INITIALIZE TRACK-CELL SIZE TO 1   R4 81393000
         TM    PCEID,PCEPRSID      TEST PROCESSOR TYPE               R4 81394000
         BZ    PGETBUFS            FORCE SINGLE IF NOT LOCAL PRINTER R4 81395000
         TM    DCTPPFL,DCTTCEL     TEST FOR DESPOOL=TRKCEL SPECIFIED R4 81396000
         BZ    PGETBUFS            BRANCH IF NO                      R4 81397000
         CLI   $TCELSIZ,1          IF TRACK-CELL SIZE IS NOT GT 1    R4 81398000
         BNH   PGETBUFS             THEN FORCE DESPOOL=SINGLE        R4 81399000
         L     R15,PWKJOE          PICK UP WORK-JOE ADDRESS          R4 81400000
         SPACE 1                                                     R4 81401000
         USING JOEDSECT,R15        ACTIVATE JOE ADDRESSABILITY       R4 81402000
         SPACE 1                                                     R4 81403000
         TM    JOEFLAG2,$JOETCEL   WAS DATA SET TRACK-CELL'ED ...    R4 81404000
         BZ    PGETBUFS            FORCE DESPOOL=SINGLE IF NOT       R4 81405000
         OI    PPFLAG2,PPTCEL      INDICATE TRACK-CELL DESPOOLING    R4 81406000
         IC    PC2,$TCELSIZ        PICK UP &TCELSIZ VALUE            R4 81407000
         SPACE 1                                                     R4 81408000
         DROP  R15,PW              SUSPEND JOE/DCT ADDRESSABILITY    R4 81409000
         EJECT                                                       R4 81410000
*********************************************************************** 81411000
*                                                                     * 81412000
*        GET DATA BUFFERS FROM THE MAIN HASP BUFFER POOL              * 81413000
*                                                                     * 81414000
*********************************************************************** 81415000
         SPACE 1                                                     R4 81416000
PGETBUFS DS    0H                                                    R4 81417000
        $GETBUF WAIT=YES,NUM=(PC2),FIX=YES  GET FIRST BUFFER(S)      R4 81418000
         ST    R1,PBUFSAVE         SAVE ADDR OF 1ST BUFFER (CHAIN)   R4 81419000
         CLI   PBUFOPT,2           TEST BUFFERING OPTION             R4 81420000
         BNE   PNOSECBF            BRANCH IF NOT DOUBLE BUFFERING    R4 81421000
        $GETBUF WAIT=YES,NUM=(PC2),FIX=YES  GET SECOND BUFFER(S)     R4 81422000
         SPACE 1                                                     R4 81423000
PNOSECBF DS    0H                  ACTIVATE DATA                     R4 81424000
         LR    PBUF,R1              BUFFER ADDRESSABILITY            R4 81425000
         ST    PBUF,PBUFADDR       SAVE PRIMARY DATA BUFFER ADDRESS  R4 81426000
         EJECT                                                       R4 81427000
*********************************************************************** 81428000
*                                                                     * 81429000
*        GET BUFFER FOR OUTPUT CCW'S                                  * 81430000
*                                                                     * 81431000
*********************************************************************** 81432000
         SPACE 1                                                     R4 81433000
*                                                                    R4 81434000
*        FOR 3800 PRINTERS, GET A PAGE BUFFER                        R4 81435000
*                                                                    R4 81436000
         CLI   PDEVTYPE+3,UCB3800  TEST FOR 3800 PRINTER             R4 81437000
         BNE   PNOT3800            BR IF NOT                         R4 81438000
        $GETBUF WAIT=YES,TYPE=PAGE,FIX=YES  GET OUTPUT CCW BUFFER    R4 81439000
         LA    PW,(4096-(BUFSTART-BUFDSECT)-2*((JOESIZE+7)/8*8)-2*PCIESC81440000
               IZE)/16*16/2        CALCULATE SIZE OF OUTPUT CCW AREA R4 81441000
         B     PGBFINIT            GO TO INITIALIZE BUFFER VARIABLES R4 81442000
*                                                                    R4 81443000
*        FOR NON - 3800 DEVICES, GET A PP BUFFER                     R4 81444000
*                                                                    R4 81445000
PNOT3800 DS    0H                                                    R4 81446000
        $GETBUF WAIT=YES,TYPE=PP,FIX=YES  GET OUTPUT CCW BUFFER      R4 81447000
         SLR   PW,PW               CLEAR WORK REGISTER FOR IC        R4 81448000
         IC    PW,$NOPRCCW         PICK UP PRINT CCW COUNT           R4 81449000
         TM    PCEID,PCEPRSID      TEST PROCESSOR TYPE               R4 81450000
         BO    SKIP110             BRANCH IF PRINTER                 R4 81451000
         IC    PW,$NOPUCCW          ELSE PICK UP PUNCH CCW COUNT     R4 81452000
SKIP110  SLL   PW,3                MAXIMUM OUTPUT CCW CHAIN LENGTH   R4 81453000
PGBFINIT DS    0H                                                    R4 81454000
         ST    R1,POUTIOB          SAVE OUTPUT IOB ADDRESS           R4 81455000
         L     PL,PCEDCT                 AND SAVE              @OZ32566 81456000
         ST    R1,DCTBUFAD-DCTDSECT(,PL)  IN DCT                     R4 81457000
         LA    R1,BUFSTART-BUFDSECT(,R1)            ADDRESS OF FIRST R4 81458000
         ST    R1,POUTCCWA                              CCW AREA     R4 81459000
         LA    R14,PCIESIZE+(JOESIZE+7)/8*8(PW,R1)  ADDRESS OF SECONDR4 81460000
         ST    R14,POUTCCWN                             CCW AREA     R4 81461000
         STH   PW,PCCWLAST         OFFSET TO PCIE (CCW AREA LENGTH)  R4 81462000
         L     R15,POUTIOB         GET IOB ADDRESS             @OZ29106 81462100
         LR    PL,R14              COPY 2ND CCW ADDRESS        @OZ29106 81462200
         SLR   PL,R15              COMPUTE OFFSET INTO IOB     @OZ29106 81462300
         SRL   PL,3                DIVIDE BY 8                 @OZ29106 81462400
         STH   PL,PPBDISPL-BUFDSECT(R15) SAVE OFFSET/8         @OZ29106 81462500
         EJECT                                                       R4 81463000
*********************************************************************** 81464000
*                                                                     * 81465000
*        INITIALIZE PCIE AT END OF EACH CCW AREA                      * 81466000
*                                                                     * 81467000
*********************************************************************** 81468000
         SPACE 1                                                     R4 81469000
         USING PCIDSECT,PL         ACTIVATE PCIE ADDRESSABILITY      R4 81470000
         SPACE 1                                                     R4 81471000
         LA    PL,0(PW,R1)         ADDRESS OF 1ST PCIE               R4 81472000
         MVC   PCI1CCW(PCIESIZE),PCNOPTIC   MOVE IN NOP/TIC SKELETON R4 81473000
         LRA   R0,0(,R14)          PLACE REAL ADDRESS OF SECOND      R4 81474000
         STCM  R0,7,PCI2DADR        CCW AREA INTO 1ST PCIE'S TIC     R4 81475000
         LA    PL,0(PW,R14)        ADDRESS OF 2ND PCIE               R4 81476000
         MVC   PCI1CCW(PCIESIZE),PCNOPTIC   MOVE IN NOP/TIC SKELETON R4 81477000
         LRA   R0,0(,R1)           PLACE REAL ADDRESS OF FIRST       R4 81478000
         STCM  R0,7,PCI2DADR        CCW AREA INTO 2ND PCIE'S TIC     R4 81479000
         DROP  PL                  SUSPEND PCIE ADDRESSABILITY       R4 81480000
         SPACE 1                                                     R4 81481000
         SH    R1,=H'8'            INITIALIZE CURRENT                R4 81482000
         ST    R1,PCCWPT            CCW POINTER                      R4 81483000
         TM    PCEID,PCERJEID+PCEPRSID  TEST PROCESSOR TYPE    @OZ32288 81483400
         BNZ   PRTNOPUN            BRANCH IF NOT LOCAL PUNCH   @OZ32288 81483500
         ST    R1,PUERRPT          SET PUNCH ERROR CUTOFF            R4 81484000
         SPACE 1                                                     R4 81485000
*********************************************************************** 81486000
*                                                                     * 81487000
*        INITIALIZE BUFFER INFORMATION FOR INPUT CCW'S                * 81488000
*                                                                     * 81489000
*********************************************************************** 81490000
         SPACE 1                                                     R4 81491000
PRTNOPUN TM    PPFLAG2,PPTCEL      TEST DESPOOLING METHOD      @OZ32288 81492000
         BO    PGETPPIN            BR IF TRACK-CELL                  R4 81493000
         ST    PBUF,PINIOB          ELSE USE DATA BUFFER FOR IOB     R4 81494000
         B     PFIXDEB             GO FIX DEB                        R4 81495000
         SPACE 1                                                     R4 81496000
*********************************************************************** 81497000
*                                                                     * 81498000
*        ACQUIRE A PP BUFFER FOR TRACK-CELL INPUT CCW'S               * 81499000
*                                                                     * 81500000
*********************************************************************** 81501000
         SPACE 1                                                     R4 81502000
PGETPPIN DS    0H                                                    R4 81503000
        $GETBUF WAIT=YES,TYPE=PP   GET PP BUFFER                     R4 81504000
         ST    R1,PINIOB           SAVE PP BUFFER'S IOB ADDRESS      R4 81505000
         SLR   PW,PW               CLEAR PW FOR PINMTTRT CALCULATION R4 81506000
         IC    PW,$TCELSIZ         ADDRESS OF MTTR/BUFFER ADDR TABLE R4 81507000
         LA    R0,1(PW,PW)          = &TCELSIZ*3    (SRCH/TIC/READ)  R4 81508000
         ALR   PW,R0                     +1           (SET SECTOR)   R4 81509000
         SLL   PW,3                      *8                          R4 81510000
         LA    PW,IOBCCW1-BUFDSECT(PW,R1) PLUS IOBCCW1               R4 81511000
         ST    PW,PINMTTRT         SAVE TABLE ADDRESS                R4 81512000
         EJECT                                                       R4 81513000
*********************************************************************** 81514000
*                                                                     * 81515000
*        PAGE FIX PRINT/PUNCH DEB FOR THE DURATION OF THIS OUTPUT     * 81516000
*                                                                     * 81517000
*********************************************************************** 81518000
         SPACE 1                                                     R4 81519000
PFIXDEB  L     R1,PCEDCT           ADDRESS LOCAL PRT/PNCH DCT  @OZ32566 81521000
         USING DCTDSECT,R1         PICK-UP DCB ADDRESS               R4 81522000
         L     R1,DCTDCB            FROM DCT                         R4 81523000
         USING DCBDSECT,R1         PICK-UP DEB ADDRESS               R4 81524000
         L     R1,DCBDEBAD          FROM DCB                         R4 81525000
         LA    R0,DEBBASND-DEBDSECT  SIZE OF JES2 DEB                R4 81526000
         LA    R2,PPLSAVE          ADDRESS OF A PSEUDO-ECB           R4 81527000
        $PGSRVC FIX,(R1),(R0),(R2)   FIX PRINTER/PUNCH DEB           R4 81528000
         SPACE 1                                                     R4 81540000
*********************************************************************** 81541000
*                                                                     * 81542000
*        ISSUE PRINT/PUNCH JOB SIGN ON MESSAGE TO THE OPERATOR        * 81543000
*                                                                     * 81544000
*********************************************************************** 81545000
         SPACE 1                                                     R4 81546000
        $MID   150                                                   R4 81547000
PSIGNON  MVC   PMESSAGE(2),=X'150F' ON DEVICE MESSAGE ID            R41 81548000
         MVC   PMESSAGE+2(4),=CL4'ON' MESSAGE TEXT                      81549000
         L     R1,PCEDCT           GET ADDRESS OF PRT/PNCH DCT @OZ32566 81550000
         USING DCTDSECT,R1         ESTABLISH DCT ADDRESSABILITY         81551000
         MVC   PMESSAGE+5(8),DCTDEVN DEVICE NAME                        81552000
         L     R1,PWKJOE           ADDRESS WORK-JOE                 R41 81553100
         USING JOEDSECT,R1         PROVIDE JOE ADDRESSABILITY       R41 81553200
         L     R1,JOERECCT         GET SYSOUT RECORD COUNT          R41 81553300
         LA    R0,13               SHORT MESSAGE LENGTH             R41 81553400
         LTR   R1,R1               TEST RECORD COUNT                R41 81553500
         BZ    PONWTO              BR IF NONE                       R41 81553600
         CVD   R1,PCCWORK          MAKE RECORD COUNT DECIMAL        R41 81553700
         MVC   PMESSAGE+13(10),PPRTSTAT   MAKE RECORD               R41 81553800
         ED    PMESSAGE+13(10),PCCWORK+4   COUNT READABLE           R41 81553900
         MVC   PMESSAGE+23(6),=C' LINES'  ASSUME PRINTER            R41 81554000
         TM    PCEID,PCEPRSID      TEST PROCESSOR TYPE              R41 81554100
         BO    PONPRTR             BR IF PRINTER                    R41 81554200
         MVC   PMESSAGE+23(6),=C' CARDS'  ELSE, SETUP FOR PUNCH     R41 81554300
         SPACE 1                                                    R41 81554400
PONPRTR  LA    R0,29               ASSUME MORE THAN 1 RECORD        R41 81554500
         BCT   R1,PONWTO           BR IF PLURAL                     R41 81554600
         LA    R0,28                ELSE DROP THE 'S'               R41 81554700
         SPACE 1                                                    R41 81554800
PONWTO  $WTO   PMESSAGE,(R0),      'JOB ON PRINTER/PUNCH' MESSAGE   R41C81554900
               ROUTE=$LOG+$UR,JOB=YES,  (NOTE: R10 = ADDR OF JQE)   R41C81555000
               CLASS=$TRIVIA,PRI=$ST                                R41 81555100
         EJECT                                                       R4 81556000
*********************************************************************** 81557000
*                                                                     * 81558000
*        LOCATE CHECKPOINT-JOE                                        * 81559000
*                                                                     * 81560000
*********************************************************************** 81561000
         SPACE 1                                                    R41 81562000
         USING JOEDSECT,R1         PROVIDE JOE ADDRESSABILITY       R41 81563000
         SPACE 1                                                    R41 81564000
         L     R1,PWKJOE           ADDRESS WORK-JOE                 R41 81565000
         LH    R14,JOECKPT         HALFWORD OFFSET OF CKPT-JOE          81584000
         N     R14,=F'65535'       CLEAR LEFT HALFWORD                  81585000
         SLL   R14,2               EXPAND TO BYTE OFFSET             R4 81586000
         AL    R14,$JOTABLE        ADD JOB OUTPUT TABLE ORIGIN          81587000
         ST    R14,PCKJOE          SAVE A(CKPT-JOE) IN PCE              81588000
         MVC   PCKJOE(1),JOEFLAG   COPY WORK-JOE FLAGS                  81589000
         SPACE 3                                                    R41 81590000
*********************************************************************** 81590100
*                                                                     * 81590200
*        GET ADDRESS OF JCT IN BUFFER FROM JCT MANAGER                * 81590300
*                                                                     * 81590400
*********************************************************************** 81590500
         SPACE 1                                                    R41 81590600
        $#JCT  READ                GET ADDR OF JCT BUFFER           R41 81590700
         ST    JCT,PJCTBUF         SAVE JCT BUFFER ADDRESS          R41 81590800
         BZ    PRPUEXIT            GO TO EXIT - BAD JCT             R41 81590900
         EJECT                                                 @OZ26939 81600000
***************************************************************@OZ26939 81600100
*                                                              @OZ26939 81600200
*        ATTACH HASPIMAG SUBTASK FOR PRINTERS                  @OZ26939 81600300
*                                                              @OZ26939 81600400
***************************************************************@OZ26939 81600500
         SPACE 1                                               @OZ26939 81600600
         TM    PCEID,PCEPUSID      TEST PROCESSOR TYPE         @OZ26939 81600700
         BO    PCLDSTRT            BR IF PUNCH                 @OZ26939 81600800
         L     R1,PRIMGDTE          ELSE GET HASPIMAG DTE ADDR @OZ26939 81600900
         OC    0(4,R1),0(R1)       SUBTASK ALREADY ACTIVE...   @OZ26939 81601000
         BNZ   PCLDSTRT            BR IF YES                   @OZ26939 81601100
         L     R15,=A(PIMAGLST)     ELSE MOVE ATTACH PARMS     @OZ26939 81601200
         MVC   $CSAVREG(PIMAGLL),0(R15)  TO WORK AREA          @OZ26939 81601300
         LR    PW,R1               SAVE DTE ADDRESS            @OZ26939 81601400
         ATTACH ECB=4(,R1),MF=(E,(1)),SF=(E,$CSAVREG)          @OZ26939 81601500
         ST    R1,0(,PW)           STORE TCB ADDRESS INTO DTE  @OZ26939 81601600
         SPACE 1                                               @OZ26939 81601700
PATWAIT $WAIT  IMAG                WAIT FOR SUBTASK TO INIT    @OZ26939 81601800
         TM    0(PW),X'80'         HASPIMAG INITIALIZED...     @OZ26939 81601900
         BNO   PATWAIT             BR IF NOT YET               @OZ26939 81602000
         SPACE 1                                               @OZ26939 81602100
         EJECT                                                       R4 81604000
         SPACE 1                                                     R4 81613000
*********************************************************************** 81614000
*                                                                     * 81615000
*        SETUP PRINT/PUNCH DEVICE BY CHAR-JOE                         * 81616000
*                                                                     * 81617000
*********************************************************************** 81618000
         SPACE 1                                                     R4 81619000
PCLDSTRT DS    0H                                                       81620000
         L     R1,PCHJOE                ADDRESS CHAR-JOE             R4 81621000
         L     PL,PCEDCT           ADDRESS PRINTER DCT         @OZ32566 81621500
         CLI   PDEVTYPE+3,UCB3800  TEST FOR 3800 PRINTER             R4 81622000
         BNE   PSETUPST            BR IF NOT - SETUP FOR IMPACT PRT  R4 81623000
         MVC   SPFORMS(2*4),JOEFORM USE JOE FORMS AND FCB ID         R4 81624000
         MVC   SPFLASH,JOEFLASH    SET FLASH (SEP WON'T FLASH)      R41 81629000
         MVC   SPMODF,=C'****'     RESET COPY MODIFICATION           R4 81630000
         MVI   SPCOPYN,1           FORCE ONLY 1 COPY OF HEADER       R4 81631000
         MVI   SPCOPYS,1           INDICATE STARTING COPY NUMBER     R4 81632000
         MVI   SPFLAG,SPSEP        INIT FLAGS FOR SEP PAGE          R41 81633000
         TM    JOECFLAG,$JOEBRST   SET FOR                           R4 81634000
         BZ    PSETUP               NOBURST OR                      R41 81635000
         OI    SPFLAG,SPBURST        BURST                           R4 81636000
         B     PSETUP              ENTER COMMON SETUP                R4 81638000
         SPACE 1                                                    R41 81638500
PSETUPST DS    0H                  SETUP STANDARD PRINTER/PUNCH      R4 81639000
         LA    R1,JOEFORM          ADDRESS SETUP PORTION             R4 81640000
         MVI   DCTACPTN-DCTDSECT(PL),X'00' DISABLE COMPACT FOR SEP  R41 81640500
         MVI   PRINDEX,X'81'       SET 3211 INDEX TO 1                  81641000
         SPACE 1                                                     R4 81642000
PSETUP   DS    0H                                                    R4 81643000
         L     R15,=A(PRPUDSV)     CALL DEVICE                       R4 81644000
         BALR  PL,R15               SETUP VERIFICATION               R4 81645000
         TM    PPFLAG,PRDELSW      IS JOB ABORTED                       81646000
         BO    PPABORT             BRANCH IF YES                        81647000
         EJECT                                                      R41 81648000
*********************************************************************** 81648100
*                                                                     * 81648200
*        OFFSET-STACK 3800 BURSTER JOBS                               * 81648300
*                                                                     * 81648400
*********************************************************************** 81648500
         SPACE 1                                                    R41 81648600
         USING DCTDSECT,R1         PROVIDE DCT ADDRESSABILITY       R41 81648700
         SPACE 1                                                    R41 81648800
         L     R1,PCEDCT           ADDR OF DCT                 @OZ32566 81648900
         CLI   PDEVTYPE+3,UCB3800  TEST DEVICE TYPE                 R41 81649000
         BNE   PTESTSEP            BR IF NOT 3800 PRINTER           R41 81649100
         LM    PC1,PC2,PCCWOFST     ELSE ISSUE AN OFFSET-           R41 81649200
         BAL   PL,PPPUT              STACK COMMAND                  R41 81649300
         SPACE 2                                                    R41 81649400
*********************************************************************** 81649500
*                                                                     * 81650000
*        SEE IF OUTPUT SEPARATORS ARE WANTED                          * 81651000
*                                                                     * 81652000
*********************************************************************** 81653000
         SPACE 1                                                     R4 81654000
PTESTSEP L     R1,PCEDCT           ADDR OF DCT                 @OZ32566 81655500
         TM    DCTPPSW,DCTPPSWS    SUPPRESS SEPARATORS...      @OZ18408 81656000
         BO    PCKPTNIT            BR IF YES                        R41 81657000
         TM    PCEID,PCEPRSID      TEST PROCESSOR TYPE                  81658000
         BO    PRINTSEP            BRANCH IF PRINT                      81659000
         SPACE 1                                                    R41 81659200
         DROP  R1                  SUSPEND DCT ADDRESSABILITY       R41 81659400
         EJECT                                                       R4 81660000
*********************************************************************** 81661000
*                                                                     * 81662000
*        PRODUCE PUNCH SEPARATOR LACE CARD                            * 81663000
*                                                                     * 81664000
*********************************************************************** 81665000
         SPACE 1                                                     R4 81666000
PUNCHSEP DS    0H                                                       81667000
         SPACE 1                                                    R41 81667100
         TM    PCEID,PCERJEID      TEST PROCESSOR TYPE              R41 81667300
         BZ    PUNCHRM             BR IF NOT REMOTE                 R41 81667500
         TM    MDCTFEAT-DCTDSECT(R1),DCTPSHDR IF NO SETUP HDR FOR   R41 81667600
         BNO   PUNCHRM                         PUNCH, SKIP PDIR     R41 81667700
         MVI   PPDIRID,X'01'       INDICATE SEPARATOR PDIR          R41 81667800
         LA    PL,2                USE A RECORD COUNT OF 2          R41 81667900
         ST    PL,PPDSRCT           FOR PUNCH                       R41 81668000
         L     R15,=A(PPDIR)       POINT TO SEPARATOR ROUTINE       R41 81668100
         BALR  PL,R15              PUT SEPARATOR PDIR               R41 81668200
         SPACE 1                                                    R41 81668300
PUNCHRM  MVC   PCCWORK(4),JCTROOMN SET UP ROOM NUMBER               R41 81668400
         MVC   PCCWORK+4(4),JCTJOBID+4 AND JOB NUMBER                   81669000
         LA    R1,BUFSTART         ADDRESS BUFFER AS A WORK AREA        81670000
         SLR   PW,PW               PREPARE FOR SCAN                     81671000
PUCHGEN  MVI   0(R1),X'6A'         START EACH FIELD WITH 12-11 PUNCH    81672000
         IC    R0,PCCWORK(PW)      MOVE NEXT CHARACTER                  81673000
         STC   R0,1(,R1)            TO IMAGE                            81674000
         OI    1(R1),X'30'         CONVERT                              81675000
         CLI   1(R1),X'F0'          EACH                                81676000
         BH    PUCHARD               CHARACTER                          81677000
         BE    PUCHAR0                FROM                              81678000
         MVI   1(R1),X'EA'             EBCDIC                           81679000
PUCHAR0  XI    1(R1),X'E0'              TO                              81680000
PUCHARD  XI    1(R1),X'60'               12-11-X PUNCH                  81681000
         MVC   2(7,R1),1(R1)       PROPAGATE CHARACTER                  81682000
         MVI   9(R1),X'6A'         TERMINATE FIELD WITH 12-11 PUNCH     81683000
         LA    R1,10(,R1)          STEP TO NEXT FIELD                   81684000
         LA    PW,1(,PW)           STEP TO NEXT CHARACTER               81685000
         CL    PW,=F'8'            TEST                                 81686000
         BL    PUCHGEN             BRANCH IF NOT LAST CHARACTER         81687000
         LA    PC1,BUFSTART        SETUP PUNCH CCW                      81688000
         AL    PC1,PUCCW           ADD LEFT HALF OF CCW                 81689000
         L     PC2,PUCCW+4         AND RIGHT HALF OF CCW                81690000
         BAL   PL,PPPUT            ADD CCW TO CHAIN                     81691000
         LM    PC1,PC2,PUCCWBL     LOAD BLANK CARD CCW                  81692000
         BAL   PL,PPPUT            ADD CCW TO CHAIN                     81693000
         BAL   PL,PPWRITE           INITIATE WRITE                      81694000
         BAL   PL,PPCHECK            AND CHECK                          81695000
         B     PCKPTNIT            CONTINUE                         R41 81696000
         EJECT                                                       R4 81697000
*********************************************************************** 81717000
*                                                                     * 81718000
*        PRODUCE PRINT SEPARATOR PAGE                                 * 81719000
*                                                                     * 81719200
*        USE MAIN PRINT LOOP TO PRINT JES2-NEWS (IF AVAILABLE)        * 81719400
*                                                                     * 81720000
*********************************************************************** 81721000
         SPACE 1                                                     R4 81722000
PRINTSEP L     R1,$NEWSTTR         GET JES2-NEWS MTTR               R41 81723000
         LTR   R1,R1               NEWS AVAILABLE...                R41 81723100
         BZ    PHEADER1            BR IF NOT                        R41 81723200
         OI    PPFLAG,PPNEWS        ELSE SET NEWS FLAG              R41 81723300
         ST    R1,PCEJMTTR         SET NEWS MTTR                    R41 81723400
         MVC   PCEEJRCB,PCCW+2     SET INITIAL RCB OFFSET           R41 81723500
         MVC   PPKEY,=C'$$NEWS'    SET SPECIAL JOB/DS KEY           R41 81723600
         MVC   PRLINECT,=F'-1'     SET LARGE PAGE SIZE              R41 81723700
         SPACE 1                                                    R41 81723800
PHEADER1 LA    R1,=C'START'        ASSUME COLD START                R41 81723900
         TM    PCKJOE,$JOECKV      'START' OR 'CONT'...             R41 81724000
         BZ    PHEADER2            BR IF COLD START                 R41 81724100
         LA    R1,=C'CONT '         ELSE SET FOR CONTINUATION       R41 81724200
         SPACE 1                                                    R41 81724300
PHEADER2 BAL   PL,PRINTID          PRODUCE PRINT SEPARATOR PAGE     R41 81724400
         TM    PPFLAG,PPNEWS       NEWS AVAILABLE...                R41 81724500
         BZ    PCKPTNIT            BR IF NO                         R41 81724600
         B     PNEWSGO              ELSE USE MAIN PRINT LOOP        R41 81724700
         SPACE 1                                                    R41 81724800
PENDNEWS LM    PC1,PC2,PRCCWEJ     * RETURN HERE AFTER JES2-NEWS *  R41 81724900
         BAL   PL,PPPUT            SKIP                             R41 81725000
         BAL   PL,PPWRITE           TO TOP                          R41 81725100
         BAL   PL,PPCHECK            OF PAGE                        R41 81725200
         NI    PPFLAG,255-PPNEWS   RESET JES2-NEWS INDICATOR        R41 81725300
         EJECT                                                      R41 81725400
*********************************************************************** 81725500
*                                                                     * 81725600
*        INITIALIZE PRPU CHECKPOINT DATA AREA                         * 81725700
*                                                                     * 81725800
*        COPY CKPT-JOE TO PRPU CHECKPOINT DATA AREA ON WARM START     * 81725900
*                                                                     * 81726000
*********************************************************************** 81726100
         SPACE 1                                                    R41 81726200
         USING JOEDSECT,R1         PROVIDE JOE ADDRESSABILITY       R41 81726300
         SPACE 1                                                    R41 81726400
PCKPTNIT MVC   PPJOBKEY,JCTJBKEY   SET JOB KEY                      R41 81726500
         TM    PCKJOE,$JOECKV      WARM START...                    R41 81726600
         BO    PWARMNIT            BR IF YES                        R41 81726700
         XC    PCKPT,PCKPT         CLEAR PRPU CKPT DATA AREA        R41 81726800
         L     PW,$IOTPDDB         SET INITIAL                      R41 81726900
         STH   PW,PDDBDISP          PDDB DISPLACEMENT               R41 81727000
         MVC   PCEIOTTR,JCTIOT     SET IOT MTTR                     R41 81727100
         SPACE 1                                                    R41 81727200
         L     R1,PWKJOE           ADDRESS WORK-JOE                 R41 81727300
         TM    JOEFLAG,$JOESPIN    SPIN JOE...                      R41 81727400
         BZ    PPAGSIZE            BR IF NO                         R41 81727500
         MVC   PCEIOTTR,JOEIOTTR    ELSE SET SPIN-IOT MTTR          R41 81727600
         OI    PSMFDCI,SMFSPIN     SET SPIN SMF FLAG                R41 81727700
         B     PPAGSIZE            CONTINUE                         R41 81727800
         SPACE 1                                                    R41 81727900
PWARMNIT L     R1,PCKJOE           ADDRESS CKPT-JOE                 R41 81728000
         MVC   PCKPT,0(R1)         REFRESH PRPU CKPT DATA AREA      R41 81728100
         MVC   PBUFSKIP,PCEJBOFF   SET BUFFER OFFSET FOR RESTART    R41 81728200
         OI    PSMFDCI,SMFINTRC    SET WARM-START SMF FLAG          R41 81728300
         SPACE 1                                                    R41 81728400
         DROP  R1                  SUSPEND JOE ADDRESSABILITY       R41 81728500
         SPACE 1                                                    R41 81728600
*********************************************************************** 81728700
*                                                                     * 81728800
*        SETUP LOGICAL PAGE SIZE                                      * 81728900
*                                                                     * 81729000
*********************************************************************** 81729100
         SPACE 1                                                    R41 81729200
PPAGSIZE SLR   PW,PW               GET JOB'S                        R41 81729300
         IC    PW,JCTLINCT          PAGE SIZE (LINE COUNT)          R41 81729400
         TM    PCEID,PCEPRSID      TEST PROCESSOR TYPE              R41 81729500
         BO    PSETSIZE            BR IF PRINT                      R41 81729600
         IC    PW,=AL1(100)         ELSE USE 100 CARDS FOR PUNCH    R41 81729700
         SPACE 1                                                    R41 81729800
PSETSIZE BCTR  PW,0                SET LOGICAL                      R41 81729900
         ST    PW,PRLINECT          PAGE SIZE                       R41 81730000
         SPACE 1                                                    R41 81730100
         TM    PPFLAG,PPDELSW      DELETION DURING PRPU INIT...     R41 81730200
         BO    PPDSEND             BR IF YES                        R41 81730300
         TITLE 'HASP PRINT/PUNCH SERVICE -- DATA SET SELECTION'         81730400
*********************************************************************** 81730500
*                                                                     * 81731000
*        PROCESSOR INITIALIZATION COMPLETE - READ/CHECK/VERIFY IOT    * 81732000
*                                                                     * 81733000
*********************************************************************** 81734000
         SPACE 1                                                     R4 81735000
PENDINIT DS    0H                                                       81736000
         L     R15,PCEIOTTR        GET IOT MTTR                         81737000
         BAL   PL,PRDBUF           INITIATE READ OF IOT                 81738000
         BAL   PL,PRDCHK           CHECK READ                           81739000
         LR    JCT,PBUF            ADDRESS IOT IN BUFFER                81740000
         USING IOTDSECT,JCT        ACTIVATE IOT ADDRESSABILITY          81741000
         TM    PPFLAG,PPRDERR      TEST FOR I/O ERROR ON READ           81742000
         BO    PIOTPRE             BR IF YES                         R4 81743000
         CLC   IOTJBKEY,PPJOBKEY   IS THIS IOT VALID                    81744000
         BE    PPIOTOK             BRANCH IF YES                        81745000
PIOTPRE  $DISTERR                  INDICATE CONTROL BLOCK ERROR         81746000
         OI    PPFLAG,PPJCTIOT+PRDELSW REASON FOR TERMINATION           81747000
         B     PPDONE              ABORT JOB                            81748000
PPIOTOK  DS    0H                                                       81749000
         TM    IOTFLAG1,IOT1SPIN   SPIN DATA SET...                  R4 81750000
         BNO   *+8                 BRANCH IF NO - NO $PURGE AT EOJ      81751000
         OI    PPFLAG,PPDALOC      SET $PURGE REQUIRED FLAG             81752000
         LH    PC1,PDDBDISP        GET NEXT PDDB DISPLACEMENT           81753000
         SPACE 3                                                     R4 81754000
*********************************************************************** 81755000
*                                                                     * 81756000
*        SELECT NEW PDDB -- GO READ NEXT IOT IF NONE LEFT             * 81757000
*                                                                     * 81758000
*********************************************************************** 81759000
         SPACE 1                                                     R4 81760000
         USING JCTDSECT,R15        PROVIDE JCT ADDRESSABILITY        R4 81761000
         USING PDBDSECT,PC2        PROVIDE PDDB ADDRESSABILITY       R4 81762000
         SPACE 1                                                     R4 81763000
PDDBNEXT DS    0H                                                       81764000
         L     R15,PJCTBUF         ADDRESS JCT IN BUFFER                81765000
         LA    PC2,0(PC1,JCT)      GENERATE ABSOLUTE ADDRESS            81766000
         CL    PC1,IOTPDDBP        END OF PDDB'S IN THIS IOT            81767000
         BNE   PPPDB               BRANCH IF NO                         81768000
         TM    IOTFLAG1,IOT1SPIN   IS THIS A SPIN/HOLD IOT              81769000
         BO    PPDONE              BRANCH IF YES                        81770000
         ICM   R15,15,IOTIOTTR     LOAD AND TEST NEXT TRACK             81771000
         BZ    PPDONE              BRANCH IF NO MORE IOTS               81772000
         ST    R15,PCEIOTTR        SAVE NEW TRACK IN PCE                81773000
         L     R14,$IOTPDDB        SET INITIAL PDDB OFFSET           R4 81774000
         STH   R14,PDDBDISP        IN CKPT AREA OF PCE                  81775000
         B     PENDINIT            READ NEXT IOT                        81776000
         EJECT                                                       R4 81777000
*********************************************************************** 81778000
*                                                                     * 81779000
*        VERIFY THAT PDDB MATCHES WORK/CHAR-JOE -- ELSE SKIP IT       * 81780000
*                                                                     * 81781000
*********************************************************************** 81782000
         SPACE 1                                                     R4 81783000
PPPDB    DS    0H                                                       81784000
         TM    PDBFLAG1,PDB1NULL+PDB1NSOT IS PDDB NULL/NOT SYSOUT       81785000
         BNZ   PDDBSRCH            BRANCH IF YES                        81786000
*                                                                       81787000
*        CHECK SYSOUT CLASS                                             81788000
*                                                                       81789000
         L     PW,PWKJOE           ADDRESS WORK JOE                  R4 81790000
         USING JOEDSECT,PW         ACTIVATE JOE ADDRESSABILITY       R4 81791000
         CLC   PDBCLASS,JOEPDBCL   DOES CLASS MATCH JOE              R4 81792000
         BNE   PDDBSRCH            BRANCH IF NO                         81793000
*                                                                       81794000
*        CHECK REMAINING CHARACTERISTICS                                81795000
*                                                                       81796000
         TM    JOEFLAG2,$JOEDMND   TEST FOR DEMAND-SETUP OPTION      R4 81797000
         L     PW,PCHJOE           ADDRESS CHAR-JOE                     81798000
         BZ    SKIP130             SKIP CLASS TEST IF NOT CHOSEN     R4 81799000
         CLC   PDBCLASS,JCTMCLAS   DOES SYSOUT CLASS = MSGCLASS         81800000
         BE    PPDEMAND            BRANCH IF YES - DEMAND SETUP         81801000
SKIP130  CLC   JOEFORM(12),PDBFORMS CHECK FORMS, FCB, UCS               81802000
         BNE   PDDBSRCH            BRANCH IF NOT MATCHING               81803000
         CLC   JOEFLASH,PDBFLASH   CHECK OVERLAY-FRAME               R4 81804000
         BNE   PDDBSRCH            IF NOT MATCHING, BRANCH           R4 81805000
         TM    PDBFLAG2,PDB2BRST   VERIFY                            R4 81806000
         BZ    SKIP140              THAT                             R4 81807000
         TM    JOECFLAG,$JOEBRST     PDDB                            R4 81808000
         BZ    PDDBSRCH               BURSTER                        R4 81809000
         B     PPDEMAND                SPECIFICATION                 R4 81810000
SKIP140  TM    JOECFLAG,$JOEBRST        MATCHES                      R4 81811000
         BO    PDDBSRCH                  CHAR-JOE                    R4 81812000
PPDEMAND CLC   JOEWTRID,PDBWTRID   CHECK EXTERNAL WRITER NAME        R4 81813000
         BNE   PDDBSRCH            BRANCH IF NOT MATCHING               81814000
         L     PW,PWKJOE           ADDRESS WORK-JOE                     81815000
         CLC   JOEDEST,PDBDEST     CHECK DESTINATION                    81816000
         BE    PGOTPDDB            BR IF SAME -- DATA SET SELECTED   R4 81817000
         SPACE 1                                                     R4 81818000
*********************************************************************** 81819000
*                                                                     * 81820000
*        PDDB DOES NOT MATCH WORK/CHAR-JOE -- STEP TO NEXT            * 81821000
*                                                                     * 81822000
*********************************************************************** 81823000
         SPACE 1                                                     R4 81824000
PDDBSRCH DS    0H                                                    R4 81825000
         LH    PC1,PDDBDISP        GET CURRENT PDDB OFFSET           R4 81826000
         LA    PC1,PDBLENG(,PC1)   STEP TO NEXT PDDB                 R4 81827000
         STH   PC1,PDDBDISP        SAVE NEW PDDB OFFSET IN CKPT AREA R4 81828000
         B     PDDBNEXT            GO TEST NEW PDDB                  R4 81829000
         SPACE 1                                                     R4 81830000
         DROP  PW,R15              SUSPEND JOE/JCT ADDRESSABILITY    R4 81831000
         EJECT                                                       R4 81832000
*********************************************************************** 81833000
*                                                                     * 81834000
*        PDDB MATCHES -- SETUP PRPU WORK AREA FOR DATA SET            * 81835000
*                                                                     * 81836000
*********************************************************************** 81837000
         SPACE 1                                                     R4 81838000
PGOTPDDB DS    0H                                                    R4 81839000
         MVC   PMESSAGE(12),PDBFORMS SAVE SETUP                         81840000
         MVC   PRINDEX,PDBINDEX    SAVE 3211 INDEX VALUE                81841000
         MVC   PPDSCPY,PDBCOPYS    SAVE DATA SET COPY REQUEST           81842000
         MVC   PPDSKEY,PDBDSKEY    SAVE DATA SET KEY                    81843000
         L     R15,PCEDCT          ADDRESS PRINTER DCT         @OZ32566 81843500
         MVC   DCTACPTN-DCTDSECT(1,R15),DCTDCPTN-DCTDSECT(R15)      R41 81843600
         CLI   PDBCPTN,X'FF'       IF PDDB CPT NUMBER NOT SPECIFIED R41 81843700
         BE    PSYSOUT              USE DEFAULT                     R41 81843800
         MVC   DCTACPTN-DCTDSECT(1,R15),PDBCPTN USE CPT IN PDDB     R41 81843900
PSYSOUT  MVI   PPDIRID,X'00'       INDICATE SYSOUT PDIR             R41 81844000
         MVC   PPDSRCT(4),PDBRECCT SAVE PDDB DATASET RECORD COUNT   R41 81844100
         TM    PCKJOE,$JOECKV      SAVE 1ST MTTR                     R4 81844200
         BO    SKIP150              OF DATA SET IF                   R4 81845000
         MVC   PCEJMTTR,PDBMTTR      COLD START - ELSE USE CKPT JOE  R4 81846000
         SPACE 1                                                     R4 81847000
SKIP150  TM    PDBFLAG2,PDB2TCEL   DOES PDDB SPECIFY TRACK-CELL      R4 81848000
         BO    PTSTNIPR            BR IF YES                         R4 81849000
         TM    PPFLAG2,PPTCEL      TEST FOR PREVIOUS TRACK-CELL'ING  R4 81850000
         BZ    PTSTNIPR            BR IF NO                          R4 81851000
*                                                                    R4 81852000
*        NON-TRACK-CELL'ED PDDB DETECTED IN TRACK-CELL'ED JOE        R4 81853000
*                                                                    R4 81854000
        $FREEBUF PINIOB            FREE-UP INPUT CCW BUFFER          R4 81855000
         NI    PPFLAG2,255-PPTCEL  RESET DESPOOLING METHOD TO SINGLE R4 81856000
         ST    PBUF,PINIOB         USE IOB IN DATA BUFFER            R4 81857000
         SPACE 1                                                     R4 81858000
         CLI   PBUFOPT,2           TEST BUFFER OPTION                R4 81859000
         BL    PNOTCEL1            BR IF NOT DOUBLE                  R4 81860000
         L     R1,PBUFSAVE         ADDRESS SECONDARY BUFFER CHAIN    R4 81861000
         L     R1,BUFCHAIN-BUFDSECT(,R1)  FREE ALL BUT 1ST           R4 81862000
        $FREEBUF (R1),MULTIPLE             BUFFER IN CHAIN           R4 81863000
         SPACE 1                                                     R4 81864000
PNOTCEL1 L     R1,PBUFADDR         ADDRESS PRIMARY BUFFER CHAIN      R4 81865000
         L     R1,BUFCHAIN-BUFDSECT(,R1)  FREE ALL BUT 1ST           R4 81866000
        $FREEBUF (R1),MULTIPLE             BUFFER IN CHAIN           R4 81867000
         SPACE 1                                                     R4 81868000
         EJECT                                                       R4 81869000
*********************************************************************** 81870000
*                                                                     * 81871000
*        SETUP FOR 3800 PRINTERS                                      * 81872000
*                                                                     * 81873000
*********************************************************************** 81874000
         SPACE 1                                                     R4 81875000
PTSTNIPR DS    0H                                                    R4 81876000
         CLI   PDEVTYPE+3,UCB3800  TEST FOR 3800 PRINTER             R4 81877000
         BNE   PSMFTST             BR IF NOT                         R4 81878000
         MVC   PFLASHC,PDBFLSHC    MOVE FLASH COUNT TO WORK AREA     R4 81879000
         XC    PCOPYGRP,PCOPYGRP   ZERO COPY GROUPS IN WORK AREA     R4 81880000
         MVI   SPFLAG,0            CLEAR SETUP FLAGS                 R4 81883000
         TM    PDBFLAG2,PDB2BRST   TEST FOR BURSTING                 R4 81884000
         BZ    PNOBURST            BR IF NO                          R4 81885000
         OI    SPFLAG,SPBURST      SET BURST SETUP FLAG              R4 81886000
PNOBURST DS    0H                                                    R4 81887000
         MVC   SPFORMS(2*4),PDBFORMS  FORMS/FCB                      R4 81888000
         MVC   SPCHAR1(6*4+2*1),PDBCHAR1 CHAR1-4/FLSH/MODF/FLSHC/TRC R4 81889000
         CLI   PDBCOPYG,0          TST FOR NULL COPY GROUPS          R4 81890000
         BE    PNIPSET1            BR IF YES                         R4 81891000
         SLR   R0,R0               CLEAR                             R4 81892000
         SLR   R1,R1                WORK                             R4 81893000
         SLR   PW,PW                 REGISTERS                       R4 81894000
         LA    PL,8                MAX COPY GROUPS                   R4 81895000
         SPACE 1                                                     R4 81896000
PCGROUPS IC    R0,PDBCOPYG(R1)     INITIALIZE                        R4 81897000
         ALR   PW,R0                COPY-GROUPS                      R4 81898000
         CH    PW,=H'255'            ENSURING THAT                   R4 81899000
         BH    PCGT255                TOTAL                          R4 81900000
         STC   R0,PCOPYGRP(R1)         DOES NOT                      R4 81901000
         LA    R1,1(,R1)                EXCEED                       R4 81902000
         BCT   PL,PCGROUPS               255                         R4 81903000
         STC   PW,PPDSCPY                 DATA SET                   R4 81904000
         B     PNIPSET1                    COPIES                    R4 81905000
         SPACE 1                                                     R4 81906000
PCGT255  SH    PW,=H'255'          IF EXCESSION,                     R4 81907000
         SLR   R0,PW                AJUST FOR                        R4 81908000
         STC   R0,PCOPYGRP(R1)       ONLY 255                        R4 81909000
         MVI   PPDSCPY,255            COPIES                         R4 81910000
         SPACE 1                                                     R4 81911000
         EJECT                                                       R4 81912000
PNIPSET1 DS    0H                                                    R4 81913000
         SLR   R1,R1               DETERMINE                         R4 81914000
         LA    R0,3                 MAXIMUM                          R4 81915000
         LA    PL,PDBCHAR2           VALUE                           R4 81916000
PCNTRC   CLC   =C'****',0(PL)         ALLOWED                        R4 81917000
         BE    SKIP160                 FOR            ( OPTCD=J )    R4 81918000
         LA    R1,1(,R1)                IMBEDDED                     R4 81919000
         LA    PL,4(,PL)                 TABLE-                      R4 81920000
         BCT   R0,PCNTRC                  REFERENCE-                 R4 81921000
SKIP160  STC   R1,PRMAXTRC                 CHARACTERS (TRC)          R4 81922000
         SPACE 1                                                     R4 81923000
         TM    PCKJOE,$JOECKV      TEST FOR WARM START               R4 81924000
         BO    PNIPWARM            BR IF YES                         R4 81925000
         MVI   SPCOPYS,1           ELSE, INIT STARTING COPY NUMBER   R4 81926000
         MVI   SPCOPYN,1           ASSUME 1 COPY                     R4 81927000
         CLI   PCOPYGRP,0          TEST FOR COPY GROUPS SPECIFIED    R4 81928000
         BE    SKIP170             BR IF NOT--ASSUMPTION OK          R4 81929000
         MVC   SPCOPYN,PCOPYGRP    ELSE, USE 1ST TRANSMISSION COUNT  R4 81930000
SKIP170  MVI   PDDBCPYG,0          RESET COPY GROUP OFFSET           R4 81931000
         B     PSMFTST             CONTINUE                          R4 81932000
         SPACE 3                                                     R4 81933000
*********************************************************************** 81934000
*                                                                     * 81935000
*        SETUP FOR 3800 DATA SET WARM START                           * 81936000
*                                                                     * 81937000
*********************************************************************** 81938000
         SPACE 1                                                     R4 81939000
PNIPWARM DS    0H                                                    R4 81940000
         LA    R1,1                ASSUME 1 COPY THIS TRANSMISSION   R4 81941000
         CLI   PCOPYGRP,0          TEST FOR COPY GROUPS SPECIFIED    R4 81942000
         BE    SKIP180             BR IF NOT - ASSUMPTION OK         R4 81943000
         IC    R1,PDDBCPYG         ELSE, PICK UP OFFSET TO           R4 81944000
         IC    R1,PCOPYGRP(R1)      COPY GROUP AND GET COUNT         R4 81945000
SKIP180  STC   R1,SPCOPYN          MOVE NO. COPIES TO SETUP LIST     R4 81946000
         MVI   SPFLASHC,0          ASSUME NO FLASHING                R4 81947000
         IC    R1,PPRCPYCT         GET TOTAL COPIES ALREADY PRINTED  R4 81948000
         SLR   R0,R0               COMPUTE NUMBER                    R4 81949000
         IC    R0,PFLASHC           OF COPIES LEFT TO                R4 81950000
         SR    R0,R1                 BE FLASHED                      R4 81951000
         BNP   SKIP190             BR IF ALL DONE -- ASSUMPTION OK   R4 81952000
         STC   R0,SPFLASHC         ELSE MOVE COUNT REMAINING TO LIST R4 81953000
SKIP190  LA    R1,1(,R1)           INDICATE STARTING                 R4 81954000
         STC   R1,SPCOPYS           COPY NUMBER                      R4 81955000
         SPACE 1                                                     R4 81956000
         EJECT                                                       R4 81957000
*********************************************************************** 81958000
*                                                                     * 81959000
*        WRITE A NEW TYPE 6 SMF RECORD IF PERTINENT DATA HAS CHANGED  * 81960000
*                                                                     * 81961000
*********************************************************************** 81962000
         SPACE 1                                                     R4 81963000
PSMFTST  CLI   $NUMSMFB,2          TEST SMF BUFFER COUNT             R4 81964000
         BL    PPDBFLGS            BR IF SMF NOT SUPPORTED           R4 81965000
         SPACE 1                                                     R4 81966000
         L     PW,PCEDCT           PROVIDE DCT                 @OZ32566 81967000
         USING DCTDSECT,PW          ADDRESSABILITY                   R4 81968000
         SPACE 1                                                     R4 81969000
         TM    PCKJOE,$JOECKV      TEST FOR WARM START               R4 81970000
         BO    PPDBFLGS            BR IF YES                         R4 81971000
         TM    PPFLAG2,PPFDS       TEST FOR 1ST DATA SET             R4 81972000
         BO    PPDBFLGS            BR IF YES                         R4 81973000
         SPACE 1                                                     R4 81974000
         TM    PSMFDCI,SMFINTRC+SMFOPCC WARM-START/CARR. OVERRIDE... R4 81975000
         BNZ   PNEW6               SMF6 IF EITHER                    R4 81976000
         TM    PPFLAG2,PSMFDSER    DATA BUFFER ERROR...              R4 81977000
         BO    PNEW6               SMF6 IF YES                       R4 81978000
         SPACE 1                                                     R4 81979000
         CLC   DCTFORMS,PDBFORMS   FORMS MATCH...                    R4 81980000
         BNE   PNEW6               SMF6 IF NOT                       R4 81981000
         SPACE 1                                                     R4 81982000
         CLC   DCTFCB,PDBFCB       FCB MATCH...                      R4 81983000
         BE    PSMFTPUN            BR IF YES                        R41 81984000
         CLC   PDBFCB,=CL4'****'   TEST FOR DEFAULT                  R4 81985000
         BNE   PNEW6               SMF6 IF NOT                       R4 81986000
         TM    DCTPPSW,DCTPPSWB    IS DEVICE FCB STANDARD...         R4 81987000
         BNZ   PNEW6               SMF6 IF NOT                       R4 81988000
         SPACE 1                                                     R4 81996000
PSMFTPUN CLI   PDEVTYPE+3,UCB3525  TEST FOR 3525 PUNCH               R4 81997000
         BNE   PSMFTUCS            BR IF NOT                        R41 81998000
         TM    PDEVTYPE+1,X'03'    ARE PRINT FEATURE(S) AVAILABLE... R4 81999000
         BZ    PSMFTUCS            BR IF NOT                        R41 82000000
         LA    R1,PBFUNCI          COMPARE FUNC=I                    R4 82001000
         BAL   PL,PBITSAME          SPECIFICATIONS                   R4 82002000
         SPACE 1                                                    R41 82003000
PSMFTUCS CLI   PDEVTYPE+3,UCB3800  TEST FOR 3800 PRINTER            R41 82003200
         BE    PSMFNIP             BR IF YES                        R41 82003400
         CLC   DCTUCS,PDBUCS       UCS MATCH...                     R41 82003600
         BE    PPDBFLGS            BR IF YES                        R41 82003800
         CLC   PDBUCS,=C'****'     TEST FOR DEFAULT                 R41 82004000
         BNE   PNEW6               SMF6 IF NOT                      R41 82004200
         TM    DCTPPSW,DCTPPSWU    IS DEVICE UCS STANDARD...   @OZ28771 82004400
         BNZ   PNEW6               SMF6 IF NOT                      R41 82004600
         B     PPDBFLGS            NEW SMF TYPE 6 NOT NEEDED        R41 82004800
         EJECT                                                      R41 82005000
PSMFNIP  CLC   =C'****',PDBCHAR1   IF CHAR1 NOT SPECIFIED,     @OZ31424 82005200
         BNE   *+10                 THEN UPDATE IN-STORAGE     @OZ31424 82005400
         MVC   PDBCHAR1,DCTUCS       PDDB WITH PRINTER DEFAULT @OZ31424 82005600
         LA    R0,4                CHECK 4 PDDB CHAR FIELDS    @OZ31424 82005800
         LA    R15,4                WITH 4 DCT  CHAR FIELDS    @OZ31424 82006000
         LA    R1,PDBCHAR1         R1 = POINTER TO PDDB CHARS  @OZ31424 82006200
         SPACE 1                                               @OZ31424 82006400
PSCHLUP1 LA    PL,DCTCHAR1         PL = POINTER TO DCT CHARS   @OZ31424 82006600
         SPACE 1                                               @OZ31424 82006800
PSCHLUP2 CLC   0(4,PL),0(R1)       DOES THIS                   @OZ31424 82007000
         BE    PSCHNEXT             PDDB CHAR                  @OZ31424 82007200
         LA    PL,4(,PL)             MATCH ANY                 @OZ31424 82007400
         BCT   R0,PSCHLUP2            DCT CHAR FIELD...        @OZ31424 82007600
         B     PNEW6               NEW SMF6 IF NOT             @OZ31424 82007800
         SPACE 1                                               @OZ31424 82008000
PSCHNEXT LA    R1,4(,R1)           LOOP, CHECKING              @OZ31424 82008200
         CLC   =C'****',0(R1)       ALL SPECIFIED              @OZ31424 82008400
         BE    *+8                   PDDB CHAR FIELDS.         @OZ31424 82008600
         BCT   R15,PSCHLUP1        FALL THROUGH IF ALL MATCH   @OZ31424 82008800
         CLC   DCTFLASH(2*4),PDBFLASH  FLASH, MODIFY MATCH...  @OZ31424 82009000
         BNE   PNEW6               SMF6 IF NOT                 @OZ31424 82009200
         CLC   PCOPYGRP,PDBCOPYG   COPY GROUPS MATCH...              R4 82010000
         BNE   PNEW6               SMF6 IF NOT                       R4 82011000
         CLC   PFLASHC,PDBFLSHC    FLASH COUNTS MATCH...             R4 82012000
         BNE   PNEW6               SMF6 IF NOT                       R4 82013000
         SPACE 1                                                     R4 82014000
         LA    R1,PBOPTJ           COMPARE OPTCD=J                   R4 82015000
         BAL   PL,PBITSAME          SPECIFICATIONS                   R4 82016000
         LA    R1,PBBURST          COMPARE BURSTER                   R4 82017000
         BAL   PL,PBITSAME          SPECIFICATIONS                   R4 82018000
         SPACE 1                                                     R4 82019000
         B     PPDBFLGS            BR IF NEW TYPE 6 NOT NEEDED       R4 82020000
         SPACE 5                                                        82021000
PBFUNCI  TM    PDBFUNC,X'80'       FUNC=I        *** EXECUTE ***     R4 82022000
         TM    PPFLAG,PPFUNCI                    ***   ONLY  ***     R4 82023000
         SPACE 1                                                     R4 82024000
PBOPTJ   TM    PDBFLAG2,PDB2OPTJ   DCB=OPTCD=J   *** EXECUTE ***     R4 82025000
         TM    PPFLAG2,PPOPTJ                    ***   ONLY  ***     R4 82026000
         SPACE 1                                                     R4 82027000
PBBURST  TM    PDBFLAG2,PDB2BRST   BURST=Y/N     *** EXECUTE ***     R4 82028000
         TM    DCTPPSW2,DCTNIBRS                 ***   ONLY  ***     R4 82029000
         SPACE 2                                                     R4 82030000
*                                                                    R4 82031000
*        PBITSAME -- RETURNS TO CALLER IF FLAGS MATCH                R4 82032000
*                                                                    R4 82033000
         SPACE 1                                                     R4 82034000
PBITSAME EX    0,0(,R1)            TEST                              R4 82035000
         BZ    SKIP200              IF                               R4 82036000
         EX    0,4(,R1)              BOTH                            R4 82037000
         BZ    PNEW6                  FLAG                           R4 82038000
         BR    PL                      BITS                          R4 82039000
SKIP200  EX    0,4(,R1)                 MATCH                        R4 82040000
         BZR   PL                  RETURN -- BITS MATCH. ELSE,       R4 82041000
         EJECT                                                          82042000
*********************************************************************** 82043000
*                                                                     * 82044000
*        NEW TYPE 6 NEEDED -- CALL PPSMF6 AND RESET DATA              * 82045000
*                                                                     * 82046000
*********************************************************************** 82047000
         SPACE 1                                                     R4 82048000
PNEW6    L     R15,=A(PPSMF6)      GENERATE NEW                @OZ32776 82049000
         BALR  PL,R15               TYPE-6 SMF RECORD          @OZ32776 82049500
         SPACE 1                                                     R4 82050000
        $TIME  ,                   GET CURRENT TIME/DATE             R4 82051000
         STM   R0,R1,PTIMEON       RESET PRPU START TIME/DATE        R4 82052000
         XC    PPLNCDCT,PPLNCDCT         CURRENT RECORD COUNT        R4 82053000
         XC    PRPAGECT,PRPAGECT         CURRENT PAGE COUNT          R4 82054000
         XC    PPJNDS,PPJNDS             CURRENT DATA SET COUNT      R4 82055000
         XC    PSMFDCI,PSMFDCI           DATA SET CONTROL INDICATORS R4 82056000
         NI    PPFLAG2,255-PSMFDSER      DATA BUFFER ERROR FLAG      R4 82057000
         EJECT                                                       R4 82058000
*********************************************************************** 82059000
*                                                                     * 82060000
*        SET FUNC=I AND OPTCD=J FLAGS                                 * 82061000
*                                                                     * 82062000
*********************************************************************** 82063000
         SPACE 1                                                     R4 82064000
PPDBFLGS NI    PPFLAG,255-PPFUNCI  SET 3525                          R4 82065000
         TM    PDBFUNC,X'80'        PUNCH-INTERPRET                  R4 82066000
         BZ    SKIP210               FLAG IF                         R4 82067000
         OI    PPFLAG,PPFUNCI         REQUESTED                      R4 82068000
SKIP210  NI    PPFLAG2,255-PPOPTJ  SET 3800                          R4 82069000
         TM    PDBFLAG2,PDB2OPTJ    DCB=OPTCD=J                      R4 82070000
         BZ    PDDBFCHK              FLAG IF                         R4 82071000
         OI    PPFLAG2,PPOPTJ         REQUESTED                      R4 82072000
         SPACE 1                                                     R4 82073000
         DROP  PC2                 SUSPEND PDDB ADDRESSABILITY       R4 82074000
         SPACE 3                                                     R4 82075000
*********************************************************************** 82076000
*                                                                     * 82077000
*        SETUP DEVICE BY PDDB SPECIFICATIONS                          * 82078000
*                                                                     * 82079000
*********************************************************************** 82080000
         SPACE 1                                                     R4 82081000
PDDBFCHK DS    0H                                                    R4 82082000
         LA    R1,PMESSAGE         ADDRESS NEW SETUP SPECIFICATION      82083000
         L     R15,=A(PRPUDSV)     CALL DEVICE                       R4 82084000
         BALR  PL,R15               SETUP VERIFICATION               R4 82085000
         SPACE 1                                                     R4 82086000
*********************************************************************** 82087100
*                                                                     * 82088000
*        OFFSET-STACK 3800 BURSTER DATA SETS                          * 82089000
*                                                                     * 82090000
*********************************************************************** 82091000
         SPACE 1                                                     R4 82092000
         TM    PPFLAG2,PPFDS       TEST FOR FIRST DATA SET           R4 82093000
         BO    PWARMTST            BR IF YES                         R4 82094000
         CLI   PDEVTYPE+3,UCB3800  TEST FOR 3800 PRINTER             R4 82095000
         BNE   PWARMTST            BR IF NOT                         R4 82096000
         CLC   PPDSKEY,=AL2(IOTPDBOD/PDBLENG)  SYSTEM PDDB...       R41 82096200
         BNH   PWARMTST            SKIP OFFSET-STACK IF YES         R41 82096400
         LM    PC1,PC2,PCCWOFST    SELECT OFFSET-STACK CCW           R4 82100000
         BAL   PL,PPPUT            ADD TO CHAIN                      R4 82101000
         SPACE 1                                                     R4 82102000
PWARMTST DS    0H                                                    R4 82103000
         TM    PCKJOE,$JOECKV      IS THIS A DATASET WARM START         82104000
         BO    PFASTRT             BRANCH IF YES                        82105000
         EJECT                                                       R4 82106000
*********************************************************************** 82107000
*                                                                     * 82108000
*        RESTART POINT FOR DATA SET COPIES                            * 82109000
*                                                                     * 82110000
*********************************************************************** 82111000
         SPACE 1                                                     R4 82112000
PNXTCPY  DS    0H                                                       82113000
         IC    PL,PPJNDS           GET DATA SET COUNTER                 82114000
         LA    PL,1(,PL)           INCREMENT BY ONE                     82115000
         STC   PL,PPJNDS           STORE NEW COUNTER VALUE              82116000
         SPACE 1                                                     R4 82117000
*********************************************************************** 82118000
*                                                                     * 82119000
*        IF FIRST DATA SET -- INITIALIZE CHECKPOINT-JOE               * 82120000
*                                                                     * 82121000
*********************************************************************** 82122000
         SPACE 1                                                     R4 82123000
PCKINIT  DS    0H                                                       82124000
         MVC   PCEEJRCB,PCCW+2     1ST RCB DISPLACEMENT                 82125000
         XC    PDDBPGCT,PDDBPGCT   CLEAR DATASET PAGE COUNT             82126000
         TM    PPFLAG2,PPFDS       TEST FOR 1ST DATA SET             R4 82127000
         BZ    PFASTRT             BR IF NOT                         R4 82128000
         SPACE 1                                                     R4 82129000
        $QSUSE                     REQUEST ACCESS TO CHECKPOINT DATA    82130000
         SPACE 1                                                     R4 82131000
*********************************************************************** 82132000
*                                                                     * 82133000
*        INITIALIZE AND CHECKPOINT THE CKPT-JOE                       * 82134000
*                                                                     * 82135000
*********************************************************************** 82136000
         SPACE 1                                                     R4 82137000
         USING JOEDSECT,PL         PROVIDE JOE ADDRESSABILITY        R4 82138000
         SPACE 1                                                     R4 82139000
         L     PL,PCKJOE           ADDRESS CKPT-JOE                  R4 82140000
         MVC   JOEJRCB(L'PCKPT),PCKPT INITIALIZE CHECKPOINT-JOE      R4 82141000
         SPACE 1                                                     R4 82142000
        $#CKPT JOE=0(,PL),TYPE=A   CKPT THE CKPT-JOE                 R4 82143000
         EJECT                                                       R4 82144000
*********************************************************************** 82145000
*                                                                     * 82146000
*        SHOW CKPT-JOE IS VALID -- CHECKPOINT THE WORK-JOE            * 82147000
*                                                                     * 82148000
*********************************************************************** 82149000
         SPACE 1                                                     R4 82150000
         L     PL,PWKJOE           ADDRESS WORK-JOE                     82151000
         OI    JOEFLAG,$JOECKV     SET CKPT-JOE VALID FLAG              82152000
        $#CKPT JOE=0(,PL),TYPE=A   CKPT THE WORK-JOE                 R4 82153000
         SPACE 1                                                     R4 82154000
         DROP  PL                  SUSPEND JOE ADDRESSABILITY           82155000
         SPACE 1                                                     R4 82156000
*********************************************************************** 82157000
*                                                                     * 82158000
*        RESET WARM START INDICATION IN WORK AREA                     * 82159000
*                                                                     * 82160000
*        MOVE A COPY OF THE CKPT-JOE TO THE PP BUFFER                 * 82161000
*                                                                     * 82162000
*********************************************************************** 82163000
         SPACE 1                                                     R4 82164000
PFASTRT  DS    0H                                                    R4 82165000
         NI    PCKJOE,255-$JOECKV  RESET WARM START BIT              R4 82166000
         TM    PCEID,PCERJEID      TEST PROCESSOR TYPE               R4 82167000
         BO    PRMTPDIR            BR IF REMOTE                     R41 82168000
         LM    PC1,PC2,POUTCCWA         INITIALIZE                   R4 82169000
         AH    PC1,PCCWLAST              PPBUF                       R4 82170000
         AH    PC2,PCCWLAST               COPIES                     R4 82171000
         MVC   PCIESIZE(L'PCKPT,PC1),PCKPT OF                        R4 82172000
         MVC   PCIESIZE(L'PCKPT,PC2),PCKPT  CKPT-JOE                 R4 82173000
         B     PBSPINIT            BR TO CONTINUE                   R41 82173100
         EJECT                                                      R41 82173200
*********************************************************************** 82173300
*                                                                     * 82173400
*        CALL PPDIR SUBROUTINE IF REMOTE SETUP HEADER IS NEEDED       * 82173500
*                                                                     * 82173600
*********************************************************************** 82173700
         SPACE 1                                                    R41 82173800
         USING DCTDSECT,PW         PROVIDE DCT ADDRESSABILITY       R41 82173900
         SPACE 1                                                    R41 82174000
PRMTPDIR L     PW,PCEDCT           ADDRESS OF REMOTE DCT       @OZ32566 82174100
         TM    MDCTFEAT,DCTPSHDR   NEED SETUP HEADER...             R41 82174200
         BZ    PBSPINIT            BR IF NO                         R41 82174300
         L     R15,=A(PPDIR)        ELSE CALL PDIR                  R41 82174400
         BALR  PL,R15                SUBROUTINE                     R41 82174500
         SPACE 1                                                    R41 82174600
         DROP  PW                  SUSPEND DCT ADDRESSABILITY       R41 82174700
         SPACE 2                                                     R4 82174800
*********************************************************************** 82175000
*                                                                     * 82176000
*        INITIALIZE BACKSPACE TABLE                                   * 82177000
*                                                                     * 82178000
*********************************************************************** 82179000
         SPACE 1                                                     R4 82180000
PBSPINIT DS    0H                                                    R4 82181000
         LH    R15,$BSPSIZ         IF NO BSP                         R4 82182000
         LTR   R15,R15              TABLE ENTRIES,                   R4 82183000
         BZ    PBSFSGO               BR TO PRIME THE BUFFERS         R4 82184000
         L     PW,PDDBPGCT         SET FIRST                            82185000
         LA    PW,1(,PW)            BACKSPACE                           82186000
         ST    PW,PBSPGCT            FRAME PAGE                         82187000
         SH    R15,=H'7'           RESET                             R4 82188000
         LA    R15,PBSPTBL(R15)     LAST                             R4 82189000
         XC    0(7,R15),0(R15)       ENTRY                           R4 82190000
         TITLE 'HASP PRINT/PUNCH SERVICE -- MAIN PROCESSOR'          R4 82191000
*********************************************************************** 82192000
*                                                                     * 82193000
*        MAIN PRINT/PUNCH LOOP INITIALIZATION                         * 82194000
*                                                                     * 82195000
*        RESTART POINT FOR $F/$B PROCESSING                           * 82196000
*                                                                     * 82197000
*********************************************************************** 82198000
         SPACE 1                                                     R4 82199000
PBSFSGO  DS    0H                  $F/$B RESTART POINT                  82200000
         LA    R1,PCKPT            INITIALIZE CHECKPOINT             R4 82201000
         ST    R1,PPCKPTR           DATA POINTER                     R4 82202000
         STCK  PCEFORM             SET START POINT FOR CKPT INTERVAL    82203000
         OI    PPFLAG2,PPCKPTA      AND ALLOW CHECKPOINTS            R4 82204000
         MVI   PUNLINE,X'FD'       SET FOR HIGHEST PRINT LINE CCW       82205000
         MVC   PRTRCCW,PXTABCCW    SHOW CHAR1 SELECTED         @OZ24675 82206000
         SPACE 1                                                    R41 82207000
PNEWSGO  XC    PPLC,PPLC           CLEAR PAGE LINE COUNTER          R41 82207200
         EJECT ,                                               @OZ27703 82207220
************************************************************** @OZ27703 82207240
* INITIALIZE PBUFSKIP TO PROPER VALUE IF THIS IS TRACKCELLED * @OZ27703 82207260
* PROCESSOR.  THIS IS DONE BY CALCULATING ALL RECORDS IN A   * @OZ27703 82207280
* TRACK CELL IN TURN AND CHECKING FOR A MATCH ON THE INPUT   * @OZ27703 82207300
* MTTR VALUE.  WHEN THIS MATCH OCCURS, THE PBUFSKIP VALUE    * @OZ27703 82207320
* WILL BE SET TO THE CORRECT VALUE.                          * @OZ27703 82207340
*                                                            * @OZ27703 82207360
* REGISTER USAGE - - - - - - - -                             * @OZ27703 82207380
* R15 - - WORK AND COUNTER FOR RECORDS IN THE CELL           * @OZ27703 82207400
* R14 - - SUB PERMUTATION NUMBER                             * @OZ27703 82207420
* PL  - - WORKING R VALUE                                    * @OZ27703 82207440
* R0  - - RECORDS PER TRACK THIS SPOOL DEVICE                * @OZ27703 82207460
* R1  - - RECORD INCREMENT VALUE                             * @OZ27703 82207480
************************************************************** @OZ27703 82207500
         SPACE 2                                               @OZ27703 82207520
         TM    PPFLAG2,PPTCEL      IF NOT TRACKCELL PROCESSOR  @OZ27703 82207540
         BZ    PGO100               DON'T CALCULATE PBUFSKIP   @OZ27703 82207560
         SPACE 1                                               @OZ27703 82207580
*              LOOP INITIALIZATION                             @OZ27703 82207600
         XR    R15,R15             CLEAR WORK REG TO ZERO      @OZ27703 82207620
         LR    R1,R15              CLEAR RECINCR REG TO ZERO   @OZ27703 82207640
         LA    PL,1                SET INITIAL R TO 1          @OZ27703 82207660
         LR    R14,PL              SET INITIAL SPN TO 1        @OZ27703 82207680
         IC    R15,PCEJMTTR        FROM M VALUE                @OZ27703 82207700
         MH    R15,=AL2(TEDSIZ)     POINT TO                   @OZ27703 82207720
         AL    R15,$TEDADDR          PROPER TED                @OZ27703 82207740
         LH    R0,TNRT-TEDDSECT(,R15) GET RECORDS PER TRACK    @OZ27703 82207760
         LR    R15,R1              CLEAR COUNT TO ZERO         @OZ27703 82207780
         IC    R1,$RECINCR         GET RECORD INCREMENT VALUE  @OZ27703 82207800
         SPACE 1                                               @OZ27703 82207820
PGO001   CLM   PL,1,PCEJMTTR+3     DOES R MATCH                @OZ27703 82207840
         BE    PGO099              BR IF YES, EXIT             @OZ27703 82207860
         SPACE 1                                               @OZ27703 82207880
         LA    R15,1(,R15)         BUMP COUNT BY 1             @OZ27703 82207900
         CLM   R15,1,$TCELSIZ      IS FULL CELL ACCOUNTED FOR  @OZ27703 82207920
         BL    PGO002              BR IF NO, KEEP ON COUNTING  @OZ27703 82207940
         XR    R15,R15             RESET COUNT TO ZERO         @OZ27703 82207960
PGO002   AR    PL,R1               BUMP R BY RECINCR           @OZ27703 82207980
         CR    PL,R0               CHECK IF R FITS ON TRACK    @OZ27703 82208000
         BNH   PGO001              BR IF YES, LOOP BACK        @OZ27703 82208020
         SPACE 1                                               @OZ27703 82208040
         LA    R14,1(,R14)         BUMP SPN                    @OZ27703 82208060
         LR    PL,R14              AND USE AS NEW R            @OZ27703 82208080
         B     PGO001              GO CHECK R                  @OZ27703 82208100
         SPACE 1                                               @OZ27703 82208120
PGO099   STC   R15,PBUFSKIP        SET SKIP VALUE              @OZ27703 82208140
PGO100   DS    0H                  RESUME                      @OZ27703 82208160
         EJECT ,                                               @OZ27703 82208180
*********************************************************************** 82209000
*                                                                     * 82210000
*        DE-SPOOL INITIAL BUFFER OR TRACK-CELL                        * 82211000
*                                                                     * 82212000
*********************************************************************** 82213000
         SPACE 1                                                     R4 82214000
         L     R15,PCEJMTTR        1ST TRACK OF DATA SET             R4 82215000
         IC    R1,PBUFOPT          INITIALIZE AVAILABLE INPUT        R4 82216000
         STC   R1,PBFAVAIL          BUFFER COUNT TO BUFFERING OPTION R4 82217000
         BAL   PL,PRDTCEL          READ FIRST DATA BLOCK(S)          R4 82218000
         SPACE 1                                                     R4 82219000
         TM    PPFLAG,PPDELSW      TEST FOR DELETION                 R4 82220000
         BO    PPDSEND             BR IF YES                         R4 82221000
         BAL   PL,PRDTCHK          ELSE, WAIT FOR I/O TO COMPLETE    R4 82222000
         B     P1STBLK              AND GO PROCESS 1ST DATA BUFFER   R4 82223000
         SPACE 1                                                     R4 82224000
*********************************************************************** 82225000
*                                                                     * 82226000
*        WAIT FOR SPOOL INPUT TO COMPLETE                             * 82227000
*                                                                     * 82228000
*********************************************************************** 82229000
         SPACE 1                                                     R4 82230000
PCHKNBLK DS    0H                                                    R4 82231000
         TM    PPFLAG,PPDELSW      TEST FOR SUSPENSION/TERMINATION   R4 82232000
         BO    PPDSEND             BR IF YES                         R4 82233000
         BAL   PL,PRDTCHK           ELSE, CHECK INPUT I/O            R4 82234000
         EJECT                                                       R4 82235000
*********************************************************************** 82236000
*                                                                     * 82237000
*        PROCESS NEW DATA SET BUFFER                                  * 82238000
*                                                                     * 82239000
*********************************************************************** 82240000
         SPACE 1                                                     R4 82241000
PNXTBLK  DS    0H                                                       82242000
         MVC   PCEEJRCB,PCCW+2     SET 1ST RCB DISPLACEMENT             82243000
         SPACE 1                                                     R4 82244000
P1STBLK  DS    0H                                                    R4 82245000
         TM    PPFLAG2,PPTCEL      TEST DE-SPOOLING METHOD           R4 82246000
         BZ    SKIP220             BRANCH IF SINGLE                  R4 82247000
         OC    PPFLAG,BUFECBCC     COPY STATUS OF NEW BUFFER         R4 82248000
         B     PVALCHK              AND GO CHECK IT                  R4 82249000
SKIP220  CLC   HDBKEY,PPKEY        IS THIS DATA BUFFER VALID         R4 82250000
         BE    PVALCHK             BR IF YES                         R4 82251000
         OI    PPFLAG,PPRDERR      SET DATA BUFFER VALIDITY ERROR    R4 82252000
         SPACE 1                                                     R4 82253000
*********************************************************************** 82254000
*                                                                     * 82255000
*        EXIT IF BUFFER READ/VALIDITY ERROR OR SUSPENSION             * 82256000
*                                                                     * 82257000
*********************************************************************** 82258000
         SPACE 1                                                     R4 82259000
PVALCHK  DS    0H                                                    R4 82260000
         TM    PPFLAG,PPRDERR+PPDELSW SUSPEND OR READ ERROR             82261000
         BNZ   PPDSEND             BRANCH IF YES                        82262000
         LM    PC1,PC2,PCCW        SETUP CCW IN PC1 AND PC2             82263000
         ICM   PC1,3,PCEEJRCB      GET RCB DISPLACEMENT                 82264000
         ALR   PC1,PBUF            ADJUST FOR THIS BUFFER               82265000
         LH    R1,PCEEJRCB         GET CURRENT RCB DISPL                82266000
         SPACE 1                                                     R4 82267000
*********************************************************************** 82268000
*                                                                     * 82269000
*        PROCESS NEW LOGICAL RECORD -- TEST FOR END-OF-BLOCK          * 82270000
*                                                                     * 82271000
*        IF DATA BUFFER IS AVAILABLE -- BEGIN TO DE-SPOOL INTO IT     * 82272000
*                                                                     * 82273000
*********************************************************************** 82274000
         SPACE 1                                                     R4 82275000
PNXTCCW  DS    0H                                                       82276000
         STH   R1,PCEEJRCB         SAVE EJECT RCB DISPL                 82277000
         CLI   PBFAVAIL,0          TEST FOR AVAILABLE INPUT BUFFER   R4 82278000
         BE    PALLACTV            SKIP IF ALL ARE ACTIVE            R4 82279000
        $COUNT R=PW                ********************************* R4 82280000
         BAL   PL,PRDTCNXT         BEGIN INPUT OF NEXT DATA BLOCK(S) R4 82281000
PALLACTV DS    0H                                                    R4 82282000
         TM    0(PC1),X'FF'        TEST RECORD CONTROL BYTE             82283000
         BO    PCPEND              BRANCH IF END OF BLOCK               82284000
         EJECT                                                       R4 82285000
         ICM   PC2,2,=X'00'        ENSURE LENGTH RESET               R4 82286000
         IC    PC2,0(,PC1)         SET TEXT LENGTH                   R4 82287000
         LR    PW,PC1              COPY LRC ADDRESS                  R4 82288000
         SPACE 1                                                     R4 82289000
         USING LRCDSECT,PW         PROVIDE LRC ADDRESSABILITY        R4 82290000
         SPACE 1                                                     R4 82291000
         TM    LRCFLAG1,LRC1SPAN   TEST FOR SPANNED RECORD           R4 82292000
         BZ    PNOSPAN             BR IF NO                          R4 82293000
         SPACE 1                                                     R4 82294000
*********************************************************************** 82295000
*                                                                     * 82296000
*        SPANNED RECORD -- PRINT/PUNCH ONLY FIRST SEGMENT             * 82297000
*                                                                     * 82298000
*********************************************************************** 82299000
         SPACE 1                                                     R4 82300000
         ICM   PC2,3,LRCSEGL       GET SEGMENT LENGTH                R4 82301000
         LA    PC1,LRCSTEXT        ASSUME NOT 1ST SEGMENT            R4 82302000
         TM    LRCFLAG1,LRC1SBGN   TEST ASSUMPTION                   R4 82303000
         BZ    PNXTRCB             BR IF VALID TO SKIP SEGMENT       R4 82304000
         LA    PC1,LRCSFTXT        POINT TO START OF 1ST-SEG TEXT    R4 82305000
         STM   PC1,PC2,PCCWORK     SAVE CCW FOR ANALYSIS             R4 82306000
         B     PFSPCK               AND BR TO ANALYZE                R4 82307000
         SPACE 1                                                     R4 82308000
         DROP  PW                  KILL LRC ADDRESSABILITY           R4 82309000
         SPACE 1                                                     R4 82310000
*********************************************************************** 82311000
*                                                                     * 82312000
*        PICK UP USER CARRIAGE CONTROL (IF ANY) -- TEST FOR ASA       * 82313000
*                                                                     * 82314000
*********************************************************************** 82315000
         SPACE 1                                                     R4 82316000
PNOSPAN  DS    0H                  *                                 R4 82317000
         LA    PC1,3(,PC1)         TEXT ADDRESS (NO CC)                 82318000
         TM    1(PW),LRC1CCTL      IS USER CC SPECIFIED                 82319000
         BNO   *+8                 <*** BRANCH IF NO                    82320000
         LA    PC1,1(,PC1)            * STEP OVER CC                    82321000
         STM   PC1,PC2,PCCWORK        * STORE CCW FOR ANALYSIS          82322000
         BNO   *+10                <*** BRANCH IF NO CC                 82323000
         MVC   PCCWORK(1),3(PW)    MOVE IN USER CC                      82324000
         TM    1(PW),LRC1ONUL      IS NOT SYSOUT BIT SET                82325000
         BO    PNXTRCB             BRANCH IF YES                        82326000
         TM    1(PW),LRC1CCTL+LRC1TASA IS CC ASA                        82327000
         BNO   PFSPCK              BRANCH IF NO - START ANALYSIS        82328000
         EJECT                                                       R4 82329000
*********************************************************************** 82330000
*                                                                     * 82331000
*        CONVERT ASA CARRIAGE CONTROL TO PROPER IMMEDIATE CCW         * 82332000
*                                                                     * 82333000
*********************************************************************** 82334000
         SPACE 1                                                     R4 82335000
PASA001  LA    PW,PASANUM          NUMBER OF ASA TABLE ENTRIES @OZ32776 82336000
         CLI   PDEVTYPE+3,X'0C'    IS DEVICE A 3525 PUNCH...   @OZ28353 82336100
         BE    PASA005             BR. YES...USE 3525 TABLE    @OZ28353 82336200
         L     PC2,=A(PASAMCH)     ASA TO MCH CONVERSION TABLE @OZ32776 82337000
         SPACE 1                                               @OZ32776 82338000
PASA002  DS    0H                  *                                    82339000
         CLC   PCCWORK(1),0(PC2)   DOES USER CC MATCH ASA ENTRY         82340000
         BE    PASA004             BRANCH IF YES                     R4 82341000
         LA    PC2,2(,PC2)         STEP TO NEXT TABLE ENTRY             82342000
         BCT   PW,PASA002          CYCLE THROUGH TABLE                  82343000
         L     PC2,PCCWORK+4       RESTORE 2ND HALF OF CCW           R4 82344000
         OC    PCCWORK+6(2),PCCWORK+6 CC NOT FOUND -- CHECK DATA LEN R4 82345000
         BZ    PNXTRCB             IGNORE REC IF BAD CC & NO DATA    R4 82346000
         TM    PCEID,PCEPRSID      CHECK PROCESSOR TYPE              R4 82347000
         BO    PASA003             BRANCH IF PRINT                   R4 82348000
         CLI   PDEVTYPE+3,X'0C'    IS DEVICE A 3525 PUNCH...   @OZ33253 82348100
         BE    PASA006             BRANCH IF YES               @OZ33253 82348200
         MVI   PCCWORK,X'41'       DEFAULT PUNCH CC = STACKER 1      R4 82349000
         B     PNIMDCMD            BRANCH TO COUNT RECORDS           R4 82350000
PASA005  DS    0H                  *                           @OZ28353 82350100
         L     PC2,=A(PASAMCH2)    3525 ASA TO MCH TABLE       @OZ32776 82350200
*                                  THIS LINE DELETED BY APAR   @OZ32776 82350300
         B     PASA002             CONTINUE CONVERSION         @OZ28353 82350400
PASA006  DS    0H                                              @OZ33253 82350500
         MVI   PCCWORK,X'01'       DEFAULT 3525 CC = STACK 1   @OZ33253 82350600
         B     PNIMDCMD            BRANCH TO COUNT RECORDS     @OZ33253 82350700
PASA003  DS    0H                  *                                 R4 82351000
         L     PC2,=A(PASAMCH)     DEFAULT TO SINGLE SPACE     @OZ32776 82352000
PASA004  DS    0H                  *                                 R4 82353000
         MVC   PCCWORK(1),1(PC2)   SELECT MCH CC VALUE                  82354000
         L     PC2,PCCWORK+4       RESTORE SECOND PART OF CCW           82355000
         TM    PCEID,PCEPUSID      CHECK PROCESSOR TYPE              R4 82356000
         BO    PNIMDCMD            NO ASA IMMEDIATE CMDS FOR PUNCH   R4 82357000
PFSPCK   DS    0H                  *                                    82358000
         TM    PCCWORK,X'02'       TEST COMMAND TYPE                    82359000
         BZ    PNIMDCMD            BRANCH IF NOT IMMEDIATE              82360000
         L     PC2,PCCW+4          SET COUNT TO ZERO                    82361000
         B     PNOCOUNT            CONTINUE ANALYSIS                    82362000
         EJECT                                                       R4 82363000
*********************************************************************** 82364000
*                                                                     * 82365000
*        UPDATE TOTAL LINE OR CARD COUNT FOR THIS JOE                 * 82366000
*                                                                     * 82367000
*********************************************************************** 82368000
         SPACE 1                                                     R4 82369000
PNIMDCMD DS    0H                  CMND IS NOT IMMEDIATE                82370000
         CLC   PDDBSKIP,PDDBPGCT   SKIP COUNT VS PAGE COUNT             82371000
         BH    PNOCOUNT            DON'T COUNT IF HIGH                  82372000
         L     PW,PPLNCDCT         UPDATE                               82373000
         LA    PW,1(,PW)            LINE OR CARD                        82374000
         ST    PW,PPLNCDCT           COUNT                              82375000
         SPACE 1                                                     R4 82376000
*********************************************************************** 82377000
*                                                                     * 82378000
*        IF PUNCH -- UPDATE DATA SET CARD COUNT                       * 82379000
*                                                                     * 82380000
*********************************************************************** 82381000
         SPACE 1                                                     R4 82382000
PNOCOUNT DS    0H                  *                                    82383000
         TM    PCEID,PCEPRSID      TEST PROCESSOR TYPE                  82384000
         BO    PRINT               BRANCH IF PRINT                      82385000
         CLI   PDEVTYPE+3,X'0C'    IS DEVICE A 3525...         @OZ28353 82385100
         BNE   PUSTKR1             BR. NO...DONT TEST          @OZ28353 82385200
         CLI   PCCWORK,X'01'       IS CC STACKER ONE...        @OZ28353 82385300
         BE    PUSTKR2             BR. YES...CONTINUE TESTS    @OZ28353 82385400
PUSTKR1  DS    0H                  *                           @OZ28353 82385500
         CLI   PCCWORK,X'41'       IS CC PUNCH STACKER 2                82386000
         BE    *+12                BRANCH IF YES                        82387000
         CLI   PCCWORK,X'81'       IS CC PUNCH STACKER 3                82388000
         BNE   PUNPRT              BRANCH IF NO                         82389000
PUSTKR2  DS    0H                  *                           @OZ28353 82389100
         MVI   PUNLINE,X'05'       RESET PUNCH-PRINT LINE NO.           82390000
         TM    PPFLAG,PPDELSW      CHECK FOR SUSPENSION        @OZ29138 82390100
         BO    PPDSEND             BRANCH IF YES               @OZ29138 82390200
         L     PW,PDDBPGCT         UPDATE                               82391000
         LA    PW,1(,PW)            PUNCH                               82392000
         ST    PW,PDDBPGCT           CARD COUNT                         82393000
         L     PW,PPLC             UPDATE                            R4 82394000
         LA    PW,1(,PW)            LOGICAL                          R4 82395000
         ST    PW,PPLC               PAGE COUNT                      R4 82396000
         B     PUPDTBSP            GO UPDATE BSP TABLE               R4 82397000
         SPACE 1                                                     R4 82398000
*********************************************************************** 82399000
*                                                                     * 82400000
*        CC IS NOT A PUNCH COMMAND - CHECK FOR 3525 PRINT             * 82401000
*                                                                     * 82402000
*********************************************************************** 82403000
         SPACE 1                                                     R4 82404000
PUNPRT   DS    0H                                                       82405000
         TM    PCCWORK,X'05'       IS CC A 3525 PRINT-LINE              82406000
         BNO   PUBADCC             BRANCH IF NO                         82407000
         CLI   PDEVTYPE+3,X'0C'    IS DEVICE A 3525                     82408000
         BNE   PUBADCC             BRANCH IF NO                         82409000
         TM    PPFLAG,PPFUNCI      WAS INTERPRET REQUESTED              82410000
         BO    PRNOPRNT            BRANCH IF YES - SKIP PRINT CCW       82411000
         TM    PDEVTYPE+1,X'30'    IS EITHER PRINT FEATURE IN           82412000
         BZ    PUBADCC             BRANCH IF NO                         82413000
         EJECT                                                       R4 82414000
*********************************************************************** 82415000
*                                                                     * 82416000
*        CHECK FOR VALID 3525 PRINT-LINE COMMAND                      * 82417000
*                                                                     * 82418000
*********************************************************************** 82419000
         SPACE 1                                                     R4 82420000
         CLC   PCCWORK(1),PUNLINE  IS LINE NUMBER IN SEQUENCE           82421000
         BNH   PUBADCC             BRANCH IF NO                         82422000
         SLR   PW,PW               CLEAR REG PW                         82423000
         IC    PW,PCCWORK          GET PRINT COMMAND                    82424000
         SRL   PW,3                CONVERT TO PRINT LINE NUMBER         82425000
         CLM   PW,1,=X'03'         DOES LINE REQUIRE ML PRINT           82426000
         BNH   *+12                BRANCH IF NO                         82427000
         TM    PDEVTYPE+1,X'10'    IS ML PRINT FEATURE INSTALLED        82428000
         BZ    PUBADCC             BRANCH IF NO                         82429000
         MVC   PUNLINE,PCCWORK     SET NEW LINE NUMBER                  82430000
         B     PUPDTBSP            GO UPDATE BSP TABLE               R4 82431000
         SPACE 1                                                     R4 82432000
*********************************************************************** 82433000
*                                                                     * 82434000
*        FOR NO USER CC, BAD USER CC, BAD PRINT LINE - USE CC=41      * 82435000
*                                                                     * 82436000
*********************************************************************** 82437000
         SPACE 1                                                     R4 82438000
PUBADCC  DS    0H                  *                                    82439000
         MVI   PCCWORK,X'41'       SET CC PUNCH STACKER 2               82440000
         B     PNOCOUNT            UPDATE CARD COUNTERS                 82441000
         EJECT                                                       R4 82442000
*********************************************************************** 82443000
*                                                                     * 82444000
*        CHECK VALIDITY OF PRINTER CCW COMMAND                        * 82445000
*                                                                     * 82446000
*********************************************************************** 82447000
         SPACE 1                                                     R4 82448000
PRINT    DS    0H                                                       82449000
         TM    PDCTFLAG,DCTSPACE   TEST FOR FORCE SINGLE SPACE          82450000
         BZ    PRNSPACE            BRANCH IF NOT SINGLE SPACING         82451000
         TM    PSMFDCI,SMFOPCC     TEST CARRIAGE OVERRIDE      @OZ20006 82451100
         BO    PRLOOP              BR. YES...NOT FIRST TIME    @OZ20006 82451200
         LM    PC1,PC2,PCCWORK     LOAD CURRENT COMMAND CCW    @OZ20006 82451300
         STM   PC1,PC2,PMESSAGE    SAVE CURRENT COMMAND CCW    @OZ20006 82451400
         LM    PC1,PC2,PRCCWSP1    LOAD IMMEDIATE SPACE CCW    @OZ20006 82451500
         BAL   PL,PPPUT            ADD CCW TO CHAIN            @OZ20006 82451600
         LM    PC1,PC2,PMESSAGE    RELOAD CURRENT COMMAND CCW  @OZ20006 82451700
         STM   PC1,PC2,PCCWORK     RESTORE CURRENT COMMAND CCW @OZ20006 82451800
PRLOOP   DS    0H                                              @OZ20006 82451900
         OI    PSMFDCI,SMFOPCC     SET OPERATOR CARRIAGE OVERRIDE       82452000
         TM    PCCWORK,X'02'       TEST FOR IMMEDIATE COMMAND           82453000
         BO    PRNOPRNT            BRANCH IF YES                        82454000
         IC    PL,PDCTFLAG         GET SPACE CONTROL BITS               82455000
         SLL   PL,3                POSITION FOR WRITE/SPACE             82456000
         STC   PL,PCCWORK          STORE INTO CCW                       82457000
         OI    PCCWORK,X'01'       SET WRITE BIT                        82458000
         NI    PCCWORK,X'19'       TURN OFF ALL EXTRAS                  82459000
         B     PRGOODCC            CONTINUE PROCESSING                  82460000
         SPACE 1                                                     R4 82461000
PRNSPACE TM    PCCWORK,X'01'       TEST LOW ORDER BIT OF COMMAND        82462000
         BZ    PRBADCC             BIT MUST BE ONE OR COMMAND IS BAD    82463000
         TM    PCCWORK,X'84'       TEST BITS 0 AND 5                    82464000
         BM    PRSKIP              BRANCH IF EJECT OR INVALID           82465000
         TM    PCCWORK,X'64'       NO, TEST BITS 1, 2, AND 5            82466000
         BZ    PRGOODCC            BITS MUST BE ZERO OR COMMAND IS BAD  82467000
         CLI   PCCWORK,X'73'       TEST FOR BLOCK DATA CHECK COMMAND    82468000
         BE    PRNOPRNT            IGNORE IF BLOCK DATA CHECK           82469000
         SPACE 1                                                     R4 82470000
PRBADCC  NI    PCCWORK,X'02'       BAD COMMAND                          82471000
         OI    PCCWORK,X'09'       CONVERT TO SINGLE SPACE              82472000
         LH    PW,PCEEJRCB         GET LRC OFFSET IN BUFFER             82473000
         ALR   PW,PBUF             ADD BUFFER ORIGIN                    82474000
         NI    1(PW),255-LRC1TASA  RESET ASA BIT                        82475000
         SPACE 1                                                     R4 82476000
PRGOODCC SLR   PL,PL               CLEAR REGISTER                       82477000
         IC    PL,PCCWORK          PICK UP COMMAND                      82478000
         SRL   PL,3                SHIFT OUT LOW-ORDER BITS             82479000
         AL    PL,PPLC             INCREMENT LINE                    R4 82480000
         ST    PL,PPLC              COUNT BY SPACE VALUE             R4 82481000
         CL    PL,PRLINECT         COMPARE LINE COUNT WITH MAXIMUM   R4 82482000
         BNH   PRNOVFL             BRANCH IF LESS                       82483000
         NI    PCCWORK,X'02'       CONVERT COMMAND                      82484000
         OI    PCCWORK,X'89'       TO EJECT                             82485000
         SPACE 1                                                     R4 82486000
PRSKIP   DS    0H                                                       82487000
         CLI   PCCWORK,X'89'       TEST COMMAND VALIDITY                82488000
         BL    PRBADCC             BRANCH IF INVALID (LOW)              82489000
         BH    PRN8940             BRANCH IF NOT EJECT                  82490000
         LH    PW,PCEEJRCB         GET RCB OFFSET                       82491000
         ALR   PW,PBUF             ADD BUFFER ORIGIN                    82492000
         CLC   0(2,PW),=X'01A0'    CHECK FOR PRINT                      82493000
         BNE   PRN8940             BRANCH IF NO                         82494000
         CLC   3(2,PW),=X'8940'     AND SKIP TO CHNL 1                  82495000
         BNE   PRN8940             BRANCH IF NO                         82496000
         OI    PCCWORK,X'02'       CONVERT TO 8B                        82497000
         EJECT                                                       R4 82498000
*********************************************************************** 82499000
*                                                                     * 82500000
*        UPDATE DATA SET PAGE COUNT                                   * 82501000
*                                                                     * 82502000
*********************************************************************** 82503000
         SPACE 1                                                     R4 82504000
PRN8940  DS    0H                                                       82505000
         CLI   PCCWORK,X'E3'       TEST COMMAND VALIDITY                82506000
         BH    PRBADCC             BRANCH IF INVALID (HIGH)             82507000
         XC    PPLC,PPLC           CLEAR PAGE LINE COUNTER           R4 82508000
         TM    PPFLAG,PPDELSW      CHECK FOR SUSPENSION        @OZ29138 82508100
         BO    PPDSEND             BRANCH IF YES               @OZ29138 82508200
         L     PW,PDDBPGCT         UPDATE                               82509000
         LA    PW,1(,PW)            DATASET                             82510000
         ST    PW,PDDBPGCT           PAGE COUNT                         82511000
         SPACE 1                                                     R4 82512000
*********************************************************************** 82513000
*                                                                     * 82514000
*        PUSH DOWN BACKSPACE TABLE -- ADD NEW ENTRY                   * 82515000
*                                                                     * 82516000
*********************************************************************** 82517000
         SPACE 1                                                     R4 82518000
PUPDTBSP DS    0H                                                    R4 82519000
         LH    R15,$BSPSIZ         IF NO BSP                         R4 82520000
         LTR   R15,R15              TABLE ENTRIES,                   R4 82521000
         BZ    PSKPBSP               BR TO CHECK SKIP COUNT          R4 82522000
         CLC   PDDBPGCT,PBSPGCT    IS THIS A FRAME PAGE                 82523000
         BNE   PSKPBSP             BRANCH IF NO                         82524000
         SLR   PW,PW               STEP TO                           R4 82525000
         IC    PW,$BSPGCT           NEXT                             R4 82526000
         AL    PW,PBSPGCT            PAGE FRAME                      R4 82527000
         ST    PW,PBSPGCT          SAVE FOR LATER                       82528000
         LA    PW,PBSPTBL          POINT TO BACKSPACE TABLE          R4 82529000
         SH    R15,=H'8'           TABLE LENGTH - 1, LESS 1 ENTRY    R4 82530000
         BM    SKIP230             BR IF 1-ENTRY TABLE               R4 82531000
         EX    R15,PPBSPUSH         ELSE PUSH DOWN TABLE ENTRIES     R4 82532000
SKIP230  ALR   PW,R15              POINT TO LAST ENTRY - 1           R4 82533000
         MVC   1(4,PW),PCEJMTTR    SAVE BUFFER MTTR                  R4 82534000
         MVC   5(2,PW),PCEEJRCB    SAVE LINE RCB                     R4 82535000
         MVC   7(1,PW),PCEJBOFF    SAVE BUFFER OFFSET                R4 82536000
         B     PSKPBSP             THEN BR TO CHECK SKIP COUNT       R4 82537000
         SPACE 1                                                     R4 82538000
PPBSPUSH MVC   0(*-*,PW),7(PW)     *** EXECUTE ONLY ***              R4 82539000
         SPACE 1                                                     R4 82540000
PSKPBSP  CLC   PDDBSKIP,PDDBPGCT   COMPARE SKIP COUNT WITH PG COUNT  R4 82541000
         BH    PRNOPRNT            DON'T UPDATE IF HIGH                 82542000
         TM    PCEID,PCEPRSID      TEST PROCESSOR TYPE                  82543000
         BO    PPCHKPT             BRANCH IF PRINT                      82544000
         L     R1,PCEDCT           GET ADDR OF RMT PRT/PCH DCT @OZ32566 82545000
         NI    DCTPPFL-DCTDSECT(R1),255-DCTEJECT CLR PCH LOGCL EJECT R4 82546000
         L     PW,PPLC             TEST FOR END OF                   R4 82547000
         CL    PW,PRLINECT          PUNCH LOGICAL PAGE               R4 82548000
         BNH   PRZCL               BRANCH IF NO                         82549000
         XC    PPLC,PPLC           CLEAR PUNCH LOGICAL PAGE COUNT    R4 82550000
         OI    DCTPPFL-DCTDSECT(R1),DCTEJECT SET PUNCH LOGICAL EJECT R4 82551000
         B     PPCHKP1             BRANCH AROUND PRT TESTS     @OZ33145 82551500
         EJECT                                                       R4 82552000
*********************************************************************** 82553000
*                                                                     * 82554000
*        NEW PAGE -- UPDATE TOTAL PAGE COUNT FOR THIS JOE             * 82555000
*                                                                     * 82556000
*********************************************************************** 82557000
         SPACE 1                                                     R4 82558000
PPCHKPT  CLI   PCCWORK,X'8B'       TEST FOR SKIP IMMED CMD     @OZ33145 82559000
         BNE   PPCHKP1             IF NO-VALID EJECT SO COUNT  @OZ33145 82559100
         L     R1,PCEDCT           PICK UP DCT ADDRESS         @OZ33145 82559200
         TM    DCTPPFL-DCTDSECT(R1),DCTEJECT  CHECK IF CHAN 1  @OZ33145 82559300
         BO    PRMTCHKT            IF CHAN 1, DON'T UPDATE     @OZ33145 82559600
PPCHKP1  L     PW,PRPAGECT         UPDATE                      @OZ33145 82560000
         LA    PW,1(,PW)            TOTAL                            R4 82561000
         ST    PW,PRPAGECT           PAGE COUNT                      R4 82562000
*                                  THIS LINE DELETED BY APAR   @OZ29138 82562500
*                                  THIS LINE DELETED BY APAR   @OZ29138 82562600
         SPACE 1                                                     R4 82563000
*********************************************************************** 82564000
*                                                                     * 82565000
*        FOR REMOTES -- UPDATE CKPT-JOE AT EACH NEW PAGE              * 82566000
*                                                                     * 82567000
*********************************************************************** 82568000
         SPACE 1                                                     R4 82569000
PRMTCHKT TM    PCEID,PCERJEID      TEST PROCESSOR TYPE         @OZ33145 82570000
         BNO   PLCLCKPT            BRANCH IF NOT REMOTE              R4 82571000
         LA    R1,PCKPT            POINT TO CHECKPOINT DATA          R4 82572000
         ST    R1,PPCKPTR          SAVE FOR PPPCKPT                  R4 82573000
         BAL   PL,PPPCKPT1         SCHEDULE CKPT-JOE FOR CHECKPOINT  R4 82574000
         B     PRNOVFL             SKIP LOCAL CHECKPOINT             R4 82575000
         SPACE 1                                                     R4 82576000
*********************************************************************** 82577000
*                                                                     * 82578000
*        FOR LOCALS -- UPDATE COPY OF CKPT-JOE AT EACH NEW PAGE       * 82579000
*                                                                     * 82580000
*********************************************************************** 82581000
         SPACE 1                                                     R4 82582000
PLCLCKPT DS    0H                                                    R4 82583000
         L     R1,POUTCCWA         GET POINTER                       R4 82584000
         AH    R1,PCCWLAST          TO CKPT-JOE MINUS PCIESIZE       R4 82585000
         OI    PCISGNAL-PCIDSECT(R1),PCICKPT  SHOW NEW CKPT PRESENT  R4 82586000
         MVC   PCIESIZE(L'PCKPT,R1),PCKPT UPDATE COPY OF CKPT-JOE    R4 82587000
         EJECT                                                       R4 82588000
*********************************************************************** 82589000
*                                                                     * 82590000
*        IF &PRTRANS=YES -- TRANSLATE ALL UNPRINTABLES TO BLANKS      * 82591000
*                                                                     * 82592000
*********************************************************************** 82593000
         SPACE 1                                                     R4 82594000
PRNOVFL  CLC   PDDBSKIP,PDDBPGCT   COMPARE SKIP COUNT WITH PAGE COUNT   82595000
         BH    PRNOPRNT            DON'T PRINT IF HIGH                  82596000
         TM    $PRTOPTS,$PRTRANS   TEST FOR PRINT TRANSLATE          R4 82597000
         BZ    PRZCL               BR IF NO                          R4 82598000
         TM    PCEID,PCEPUSID      TEST PROCESSOR TYPE                  82599000
         BO    PRZCL               BRANCH IF PUNCH                      82600000
         CLC   PDEVTYPE+2(2),=AL1(UCB3UREC,UCB3211)  LOCAL 3211...   R4 82601000
         BE    PRZCL               BRANCH IF YES                        82602000
         CLC   PDEVTYPE+2(2),=AL1(UCB3UREC,UCB3800)  3800 PRINTER... R4 82603000
         BE    PRZCL               BRANCH IF YES                     R4 82604000
         CLM   PC2,1,=X'00'        IS THE COUNT ZERO                    82605000
         BE    PRZCL               BRANCH IF YES - SKIP TRANSLATE       82606000
         LA    R1,0(PC1,PC2)       R1 = ADDRESS OF NEXT RCB             82607000
         SLR   R1,PBUF             GENERATE OFFSET OF RCB               82608000
         CH    R1,$BUFLENG         TEST FOR END OF BUFFER            R4 82609000
         BNL   PRZCL               BRANCH IF OUT OF BUFFER              82610000
         LA    R1,X'FF'(PC2)       R1 = COMMAND BYTE COUNT - 1          82611000
         L     R15,=A(PTRTBL)      TRANSLATE UNPRINTABLES      @OZ32776 82611500
         EX    R1,PRXTR             TO BLANKS                  @OZ32776 82612000
         EJECT                                                       R4 82613000
*********************************************************************** 82614000
*                                                                     * 82615000
*        IF OPTCD=J -- SELECT APPROPRIATE 3800 TRANSLATE TABLE        * 82616000
*                                                                     * 82617000
*********************************************************************** 82618000
         SPACE 1                                                     R4 82619000
PRZCL    L     PC1,PCCWORK         PICK UP MODIFIED COMMAND          R4 82620000
         TM    PPFLAG2,PPOPTJ      TEST FOR OPTCD=J SPECIFIED        R4 82621000
         BZ    PRCHAIN             BRANCH IF NO                      R4 82622000
         CL    PC2,PCCW+4          BYPASS IF FIRST PASS FOR         R41 82625000
         BE    PRCHAIN              ASA CC (OR INVALID)             R41 82626000
         CLI   PDEVTYPE+3,UCB3800  TEST FOR 3800 PRINTER            R41 82626400
         BNE   PRZCL2              BR IF OPTCD=J NOT SUPPORTED      R41 82626800
         NI    0(PC1),X'0F'        USE BINARY PART OF TRC            R4 82627000
         SLR   R1,R1               PICK-UP                          R41 82628000
         CLC   PRMAXTRC,0(PC1)      TABLE REF CHAR                  R41 82629000
         BL    PRCHKTRC              OR USE ZERO                    R41 82630000
         IC    R1,0(PC1)              IF INVALID                    R41 82631000
         SPACE 1                                                    R41 82631500
PRCHKTRC LA    R1,PXTABCCW(R1)     ADDR OF SELECT CCW OP CODE       R41 82632000
         CLC   PRTRCCW,0(R1)       TABLE ALREADY SELECTED...        R41 82633000
         BE    PRZCL2              SKIP UNNECESSARY CCW IF YES      R41 82634000
         STM   PC1,PC2,PBLKWORK    SAVE 'DATA' CCW                  R41 82635000
         LM    PC1,PC2,PRCCWEJ     CONSTRUCT SELECT-                R41 82636000
         ICM   PC1,8,0(R1)          TRANSLATE-TABLE CCW             R41 82637000
         BAL   PL,PPPUT            ADD CCW TO CHAIN                 R41 82638000
         STCM  PC1,8,PRTRCCW       SAVE NEW SELECT CCW OP CODE      R41 82639000
         LM    PC1,PC2,PBLKWORK    RESTORE 'DATA' CCW               R41 82640000
         SPACE 1                                                    R41 82640500
PRZCL2   AL    PC1,=F'1'           ACCOUNT FOR TABLE ID              R4 82641000
         SL    PC2,=F'1'           ACCOUNT FOR TABLE ID              R4 82642000
         SPACE 1                                                    R41 82642100
*              THIS LINE DELETED BY APAR NUMBER                @OZ25297 82642200
*              THIS LINE DELETED BY APAR NUMBER                @OZ25297 82642300
*              THIS LINE DELETED BY APAR NUMBER                @OZ25297 82642400
*              THIS LINE DELETED BY APAR NUMBER                @OZ25297 82642500
*              THIS LINE DELETED BY APAR NUMBER                @OZ25297 82642600
*              THIS LINE DELETED BY APAR NUMBER                @OZ25297 82642700
         SPACE 3                                                     R4 82643000
*********************************************************************** 82644000
*                                                                     * 82645000
*        ADD NEW PRINT/PUNCH COMMAND TO CCW CHAIN                     * 82646000
*                                                                     * 82647000
*********************************************************************** 82648000
         SPACE 1                                                     R4 82649000
PRCHAIN  DS    0H                                                    R4 82650000
         BAL   PL,PPPUT            ADD CCW TO CHAIN                     82651000
         EJECT                                                       R4 82652000
*********************************************************************** 82653000
*                                                                     * 82654000
*        IF FUNC=I -- PRODUCE APPROPRIATE 3525 PRINT-LINE CCW'S       * 82655000
*                                                                     * 82656000
*        LINE 1 -- CARD COLS.  1-64 -- STARTING IN PRINT POSITION 1   * 82657000
*        LINE 3 -- CARD COLS. 65-80 -- STARTING IN PRINT POSITION 49  * 82658000
*                                                                     * 82659000
*********************************************************************** 82660000
         SPACE 1                                                     R4 82661000
         TM    PPFLAG,PPFUNCI      INTERPRET REQUESTED                  82662000
         BNO   PRNOPRNT            BRANCH IF NO                         82663000
         CLI   PDEVTYPE+3,X'0C'    IS DEVICE A 3525                     82664000
         BNE   PRNOPRNT            BRANCH IF NO                         82665000
         TM    PDEVTYPE+1,X'30'    IS EITHER PRINT FEATURE IN           82666000
         BZ    PRNOPRNT            BRANCH IF NO                         82667000
         SPACE 1                                                     R4 82668000
         OI    PSMFDCI,SMFPUPRT    SET 3525 INTERPRET SMF FLAG       R4 82669000
         SPACE 1                                                     R4 82670000
         STM   PC1,PC2,PCCWORK     SAVE ORIGINAL PUNCH CCW              82671000
         ICM   PC1,8,=X'0D'        CONVERT CCW TO PRINT LINE 1          82672000
         BAL   PL,PPPUT            ADD CCW TO CHAIN                     82673000
         CLC   PCCWORK+6(2),=H'64' IS TEXT OVER 64 CHARACTERS...     R4 82674000
         BNH   PRNOPRNT            BR IF NOT                         R4 82675000
         L     PL,PCCWPT           PICK UP CURRENT CCW POINTER          82676000
         LA    PL,2*8(,PL)         VALUE AFTER 2 CCW'S ADDED         R4 82677000
         SL    PL,POUTCCWA         CONVERT TO CCW CHAIN OFFSET       R4 82678000
         CH    PL,PCCWLAST         IS THERE ROOM IN CHAIN            R4 82679000
         BL    *+8                 BRANCH IF YES                        82680000
         BAL   PL,PPWRITE          FORCE CCW CHAIN TO BE CLEARED        82681000
         LM    PC1,PC2,PUSPACCW    LOAD DATA CHAIN PRINT LINE 3         82682000
         BAL   PL,PPPUT            ADD CCW TO CHAIN                     82683000
         LM    PC1,PC2,PCCWORK     RESTORE ORIGINAL PUNCH CCW           82684000
         LA    PC1,0(,PC1)         CLEAR CCW COMMAND                    82685000
         SH    PC2,=H'64'          COMPUTE RESIDUAL COUNT OVER 64       82686000
         AH    PC1,=H'64'          COMPUTE NEW STARTING ADDRESS         82687000
         ICM   PC1,8,=X'1D'        CONVERT CCW TO PRINT LINE 3          82688000
         BAL   PL,PPPUT            ADD CCW TO CHAIN                     82689000
         LM    PC1,PC2,PCCWORK     RESTORE ORIGINAL PUNCH CCW           82690000
         EJECT                                                       R4 82691000
*********************************************************************** 82692000
*                                                                     * 82693000
*        RE-CYCLE RECORD IF CARRIAGE CONTROL WAS ASA                  * 82694000
*                                                                     * 82695000
*********************************************************************** 82696000
         SPACE 1                                                     R4 82697000
PRNOPRNT DS    0H                                                    R4 82698000
         TM    PCEID,PCEPUSID      IS THIS A PUNCH PROCESSOR            82699000
         BO    PNXTRCB             BRANCH IF YES                        82700000
         LH    PW,PCEEJRCB         GET LRC DISPLACEMENT                 82701000
         ALR   PW,PBUF             ADD BUFFER ORIGIN                    82702000
         MVI   PCCWORK,X'01'       SET CC TO WRITE NO-SPACE             82703000
         LM    PC1,PC2,PCCWORK     RESTORE CCW REGISTERS                82704000
         TM    1(PW),LRC1CCTL+LRC1TASA ASA CARRIAGE CONTROL             82705000
         BNO   PNXTRCB             BRANCH IF NO                         82706000
         NI    1(PW),255-LRC1TASA  RESET ASA BIT                        82707000
         B     PFSPCK              START CCW ANALYSIS                   82708000
         SPACE 1                                                     R4 82709000
*********************************************************************** 82710000
*                                                                     * 82711000
*        STEP TO NEXT LOGICAL RECORD CONTROL BLOCK                    * 82712000
*                                                                     * 82713000
*********************************************************************** 82714000
         SPACE 1                                                     R4 82715000
PNXTRCB  LA    PC1,0(PC1,PC2)      TEXT ADDRESS + TEXT LENGTH        R4 82716000
         LR    R1,PC1              COPY NEXT RCB ADDRESS                82717000
         SLR   R1,PBUF             GENERATE OFFSET OF RCB               82718000
         CH    R1,$BUFLENG         TEST FOR END OF BUFFER            R4 82719000
         BL    PNXTCCW             BRANCH IF RCB IS IN BUFFER           82720000
         SPACE 1                                                     R4 82721000
*********************************************************************** 82722000
*                                                                     * 82723000
*        END OF DATA BUFFER                                           * 82724000
*                                                                     * 82725000
*********************************************************************** 82726000
         SPACE 1                                                     R4 82727000
PCPEND   ICM   R15,15,HDBNXTRK     LOAD AND TEST CHAIN TRACK         R4 82728000
         BZ    PPDSEND             BRANCH IF END OF DATA SET         R4 82729000
         ST    R15,PCEJMTTR        SAVE CHAIN TRACK FOR CKPT         R4 82730000
         TM    PPFLAG2,PPTCEL      TEST DE-SPOOLING METHOD           R4 82731000
         BZ    PENDTCEL             BRANCH IF SINGLE                 R4 82732000
         SLR   PL,PL               INCREMENT                         R4 82733000
         IC    PL,PCEJBOFF          BUFFER OFFSET                    R4 82734000
         LA    PL,1(,PL)             WITHIN THIS                     R4 82735000
         STC   PL,PCEJBOFF            TRACK-CELL                     R4 82736000
         L     R1,PBUFADDR         ADDR OF FIRST BUFFER IN CHAIN     R4 82737000
         CH    PL,BUFCHNCT-BUFDSECT(,R1) TEST FOR END OF TRACK-CELL  R4 82738000
         BNL   PENDTCEL            BRANCH IF YES                     R4 82739000
         L     PBUF,BUFCHAIN       ESTABLISH ADDRESSABILITY ON       R4 82740000
         B     PNXTBLK              NEXT BUFFER AND GO PROCESS IT    R4 82741000
         EJECT                                                       R4 82742000
*********************************************************************** 82743000
*                                                                     * 82744000
*        PROCESSING COMPLETE FOR CURRENT BUFFER OR TRACK-CELL         * 82745000
*                                                                     * 82746000
*        SETUP TO DE-SPOOL NEXT DATA BUFFER(S)                        * 82747000
*                                                                     * 82748000
*********************************************************************** 82749000
         SPACE 1                                                     R4 82750000
PENDTCEL DS    0H                                                    R4 82751000
         TM    PCEID,PCERJEID      TEST PROCESSOR TYPE               R4 82752000
         BO    SKIP250             BR IF REMOTE                      R4 82753000
         CLC   PDDBSKIP,PDDBPGCT   COMPARE SKIP AND PAGE COUNTERS    R4 82754000
         BNH   PNOTSKIP            BR IF SKIP COUNT NOT HIGH         R4 82755000
SKIP250  IC    R1,PBFAVAIL         INCREMENT NUMBER                  R4 82756000
         LA    R1,1(,R1)            OF AVAILABLE                     R4 82757000
         STC   R1,PBFAVAIL           INPUT BUFFERS                   R4 82758000
         B     PCHREAD             GO FOR NEXT INPUT BUFFER          R4 82759000
         SPACE 1                                                     R4 82760000
*********************************************************************** 82761000
*                                                                     * 82762000
*        INDICATE IN PCIE THAT THE FINAL BUFFER HAS BEEN PROCESSED    * 82763000
*                                                                     * 82764000
* NOTE - WHEN THE OUTPUT FOR THIS BUFFER IS COMPLETE, PPCHECK WILL    * 82765000
*        INCREMENT THE AVAILABLE BUFFER COUNT  (PBFAVAIL)             * 82766000
*                                                                     * 82767000
*********************************************************************** 82768000
         SPACE 1                                                     R4 82769000
PNOTSKIP DS    0H                                                    R4 82770000
         L     R1,POUTCCWA         IF CCW AREA IS EMPTY,             R4 82771000
         CL    R1,PCCWPT            INSERT A NOP                     R4 82772000
         BNH   PSETFINL              TO ASSURE                       R4 82773000
         LM    PC1,PC2,PCCWNOP        INDICATION IS                  R4 82774000
         ICM   PC2,B'1000',=X'60'      SEEN BY                       R4 82775000
         BAL   PL,PPPUT                 PPCHECK                      R4 82776000
         L     R1,POUTCCWA         RELOAD CCW AREA ADDRESS           R4 82777000
         SPACE 1                                                     R4 82778000
         USING PCIDSECT,R1         INDICATE THAT EXECUTION           R4 82779000
PSETFINL AH    R1,PCCWLAST          OF THIS CCW AREA                 R4 82780000
         OI    PCISGNAL,PCIFNLBF     WILL CAUSE A DATA               R4 82781000
         DROP  R1                     BUFFER TO BECOME AVAILABLE     R4 82782000
         SPACE 1                                                     R4 82783000
         BAL   PL,PPWRITE          FORCE CCW AREA SWAP               R4 82784000
         SPACE 1                                                     R4 82785000
*********************************************************************** 82786000
*                                                                     * 82787000
*        IF READ HAS ALREADY BEEN STAGED -- GO WAIT FOR COMPLETION    * 82788000
*                                                                     * 82789000
*********************************************************************** 82790000
         SPACE 1                                                     R4 82791000
PCHREAD  TM    PPFLAG2,PPRSW       TEST FOR READ IN PROGRESS         R4 82792000
         BO    PCHKNBLK            BRANCH IF YES                     R4 82793000
         EJECT                                                       R4 82794000
*********************************************************************** 82795000
*                                                                     * 82796000
*        IF ANY BUFFERS ARE AVAILABLE  -- STAGE NEXT READ             * 82797000
*        ELSE -- WAIT FOR PPCHECK TO MAKE A BUFFER AVAILABLE          * 82798000
*                                                                     * 82799000
*********************************************************************** 82800000
         SPACE 1                                                     R4 82801000
PCHAVAIL CLI   PBFAVAIL,0          TEST FOR AVAILABLE INPUT BUFFER   R4 82802000
         BH    PSTGREAD            STAGE NEXT READ IF YES            R4 82803000
         TM    PPFLAG,PPWSW        TEST FOR WRITE IN PROGRESS        R4 82804000
         BZ    PLOSTINT            BRANCH IF NO                      R4 82805000
         BAL   PL,PCIWAIT          WAIT FOR OUTPUT I/O               R4 82806000
         B     PCHAVAIL             AND TRY AGAIN                    R4 82807000
         SPACE 1                                                     R4 82808000
PLOSTINT IC    R1,PBUFOPT          RESET AVAILABLE INPUT BUFFER      R4 82809000
         STC   R1,PBFAVAIL          COUNT TO BUFFERING OPTION        R4 82810000
        $COUNT                     * RECORD USAGE *                  R4 82811000
         SPACE 1                                                     R4 82812000
*********************************************************************** 82813000
*                                                                     * 82814000
*        BEGIN THE NEXT DE-SPOOLING OPERATION -- GO WAIT COMPLETION   * 82815000
*                                                                     * 82816000
*********************************************************************** 82817000
         SPACE 1                                                     R4 82818000
PSTGREAD BAL   PL,PRDTCNXT         STAGE READ FOR NEXT BUFFER(S)     R4 82819000
        $COUNT                     ********************************  R4 82820000
         B     PCHKNBLK            GO CHECK AND PROCESS IT           R4 82821000
         TITLE 'HASP PRINT/PUNCH SERVICE -- DATA SET TERMINATION'       82822000
*********************************************************************** 82823000
*                                                                     * 82824000
*        ***  DATA SET TERMINATION  ***                               * 82825000
*                                                                     * 82825100
*        SPECIAL TERMINATION FOR RMT SPOOLED MESSAGES AND JES2-NEWS   * 82825200
*                                                                     * 82826000
*********************************************************************** 82827000
         SPACE 1                                                     R4 82828000
PPDSEND  DS    0H                                                       82829000
         BAL   PL,PPWRITE          FORCE EXECUTION OF LAST CCW AREA  R4 82830000
         LTR   JCT,JCT             IS THIS A SPOOL MESSAGE PRINTER      82831000
         BZ    PRSMBEOB            BRANCH IF YES                        82832000
         TM    PPFLAG,PPNEWS       WAS THIS JES2-NEWS DATA SET...   R41 82832200
         BO    PENDNEWS            RETURN TO MAIN LINE IF YES       R41 82832400
         SPACE 1                                                     R4 82833000
*********************************************************************** 82834000
*                                                                     * 82835000
*        WRITE PROGRAMMER MESSAGE IF DATA SET I/O OR VALIDITY ERROR   * 82836000
*                                                                     * 82837000
*********************************************************************** 82838000
         SPACE 1                                                     R4 82839000
         NI    PPFLAG2,255-PPCKPTA SUSPEND CHECKPOINTS               R4 82840000
         TM    PPFLAG,PPRDERR      DATA BUFFER READ ERROR               82841000
         BNO   PPIOTCK             BRANCH IF NO                         82842000
        $MID   185                                                   R4 82843000
         LA    R1,=C'$HASP185 '    MESSAGE ID                        R4 82844000
         LA    R15,=C' TERMINATED '  MESSAGE TEXT                    R4 82845000
         BAL   PL,PRMSG            ADD MSG TO OUTPUT, ISSUE WTO      R4 82846000
         SPACE 1                                                     R4 82847000
         OI    PPFLAG2,PSMFDSER    SET DATA SET ERROR FLAG FOR SMF   R4 82848000
         SPACE 1                                                     R4 82849000
*********************************************************************** 82850000
*                                                                     * 82851000
*        RE-READ IOT                                                  * 82852000
*                                                                     * 82853000
*        SEE IF IOT IS ALREADY BEING DE-SPOOLED                       * 82854000
*                                                                     * 82855000
*********************************************************************** 82856000
         SPACE 1                                                     R4 82857000
PPIOTCK  DS    0H                                                    R4 82858000
         NI    PPFLAG,255-PPRDERR  CLEAR ERROR CONDITION, IF ANY     R4 82859000
         TM    PPFLAG2,PPRSW       TEST FOR READ IN PROGRESS         R4 82860000
         BZ    PPIOTCK1            BR IF NOT                         R4 82861000
         CLC   PCESEEK(4),PCEIOTTR TEST FOR IOT READ IN PROGRESS     R4 82862000
         BE    PPIOTCK3            BR IF YES                         R4 82863000
         BAL   PL,PRDTCHK           ELSE, CLEAR INPUT I/O            R4 82864000
         EJECT                                                       R4 82866000
*********************************************************************** 82867000
*                                                                     * 82868000
*        SEE IF ANY BUFFERS ARE AVAILABLE FOR DE-SPOOLING THE IOT     * 82869000
*                                                                     * 82870000
*        NOTE - IF NONE AVAILABLE -- WAIT FOR PPCHECK TO FREE ONE     * 82871000
*                                                                     * 82872000
*********************************************************************** 82873000
         SPACE 1                                                     R4 82874000
PPIOTCK1 CLI   PBFAVAIL,0          TEST FOR AVAILABLE INPUT BUFFER   R4 82875000
         BH    PPIOTCK2            BRANCH IF YES                     R4 82876000
         TM    PPFLAG,PPWSW        TEST FOR WRITE OUTSTANDING        R4 82877000
         BZ    PPIOTCK2            BRANCH IF NO                      R4 82878000
         BAL   PL,PCIWAIT          WAIT FOR AVAILABLE INPUT BUFFER   R4 82879000
         B     PPIOTCK1             AND TRY AGAIN                    R4 82880000
         SPACE 1                                                     R4 82881000
*********************************************************************** 82882000
*                                                                     * 82883000
*        BUFFER AVAILABLE -- READ AND VERIFY THE IOT                  * 82884000
*                                                                     * 82885000
*********************************************************************** 82886000
         SPACE 1                                                     R4 82887000
PPIOTCK2 L     R15,PCEIOTTR        GET IOT TRACK ADDRESS             R4 82888000
         BAL   PL,PRDBUF           INITIATE READ OF IOT              R4 82889000
PPIOTCK3 BAL   PL,PRDCHK           CHECK READ                        R4 82890000
         TM    PPFLAG,PRDELSW      TEST FOR TERMINATION                 82891000
         BO    PPDONE              BRANCH IF YES                        82892000
         LR    JCT,PBUF            ADDRESS IOT IN BUFFER                82893000
         TM    PPFLAG,PPRDERR      TEST FOR I/O ERROR ON READ           82894000
         BO    PIOTPOST            BR IF YES                         R4 82895000
         CLC   IOTJBKEY,PPJOBKEY   IS THIS IOT VALID                    82896000
         BE    PRSUSTST            BRANCH IF YES                        82897000
         SPACE 1                                                     R4 82898000
*********************************************************************** 82899000
*                                                                     * 82900000
*        IF INPUT OR VALIDITY ERROR -- TELL OPERATOR AND KILL OUTPUT  * 82901000
*                                                                     * 82902000
*********************************************************************** 82903000
         SPACE 1                                                     R4 82904000
PIOTPOST $DISTERR                  INDICATE CONTROL BLOCK ERROR         82905000
         OI    PPFLAG,PPJCTIOT+PRDELSW REASON FOR TERMINATION           82906000
         B     PPDONE              ABORT JOB                            82907000
         EJECT                                                          82908000
*********************************************************************** 82909000
*                                                                     * 82910000
*        IF $F OR $B COMMAND -- INFORM OPERATOR AND PROGRAMMER        * 82911000
*                                                                     * 82912000
*********************************************************************** 82913000
         SPACE 1                                                     R4 82914000
PRSUSTST BAL   PL,PPCHECK          FINAL I/O. CHK OPER CMDS    @OZ29138 82916000
         TM    PPFLAG,PPDELSW      CHECK FOR SUSPENSION        @OZ29138 82916500
         BZ    PRLOGCK             BRANCH IF NO                         82917000
         NI    PPFLAG,255-PPDELSW  RESET SUSPEND FLAG                   82918000
         ICM   R1,15,PDDBSKIP      CHECK FOR $B,D OR $F,D      @OZ29138 82918100
         BNP   PRSPDS              BR IF YES, PDDBSKIP IS OK   @OZ29138 82918200
         L     R1,PDDBPGCT         GET CURRENT PAGE COUNT      @OZ29138 82918210
         A     R1,PFSBSCT          CALCULATE PDDBSKIP          @OZ29138 82918300
         BNP   PRSPNEG             SETUP FOR $B,D              @OZ29138 82918350
         CL    R1,=F'16777215'     IS SKIP TARGET TOO LARGE... @OZ29138 82918400
         BNH   PRSPPOS             BR IF NO, ELSE SET MAXIMUM  @OZ29138 82918500
         L     R1,=F'16777215'     GET MAX $F PAGE COUNT       @OZ29138 82918600
         B     PRSPPOS             UPDATE PDDBSKIP             @OZ29138 82918650
PRSPNEG  SLR   R1,R1               SETUP FOR $B,D              @OZ29138 82918675
PRSPPOS  ST    R1,PDDBSKIP         SAVE NEW SKIP COUNT         @OZ29138 82918700
PRSPDS   DS    0H                                              @OZ29138 82918750
        $MID   170                                                   R4 82919000
PRSPMSG  LA    R1,=C'$HASP170 '    POINT TO MESSAGE ID AND          R41 82920000
         LA    R15,=C' FWD-SPACED '  MESSAGE TEXT                    R4 82921000
         CLC   PDDBSKIP,PDDBPGCT   IS THIS A FWD-SPACE                  82922000
         BH    *+8                 BRANCH IF YES                        82923000
         LA    R15,=C' BACKSPACED '  MESSAGE TEXT                    R4 82924000
         BAL   PL,PRMSG            ADD MSG TO OUTPUT, ISSUE WTO      R4 82925000
         SPACE 1                                                     R4 82926000
*********************************************************************** 82927000
*                                                                     * 82928000
*        GO TERMINATE DATA SET IF $F DEVICE,DSET WAS REQUESTED        * 82929000
*                                                                     * 82930000
*        CAUSED BY OPERATOR COMMAND OR PRINTER 'CANCEL' BUTTON        * 82931000
*                                                                     * 82932000
*********************************************************************** 82933000
         SPACE 1                                                     R4 82934000
         CLC   PDDBSKIP,=F'-1'     TEST SKIP COUNT                      82935000
         BE    PRLOGCK             $F DEVICE,DS                         82936000
         SPACE 1                                                     R4 82937000
*********************************************************************** 82938000
*                                                                     * 82939000
*        SKIP TO NEW PAGE, OR ADD A BLANK CARD -- THEN RE-POSITION    * 82940000
*                                                                     * 82941000
*********************************************************************** 82942000
         SPACE 1                                                     R4 82943000
         LM    PC1,PC2,PRCCWEJ     SELECT PAGE-EJECT CCW             R4 82944000
         TM    PCEID,PCEPRSID      TEST PROCESSOR TYPE                  82945000
         BO    *+8                 BRANCH IF PRINT                      82946000
         LM    PC1,PC2,PUCCWBL     SELECT BLANK CARD CCW                82947000
         BAL   PL,PPPUT            ADD CCW TO CHAIN                     82948000
         BAL   PL,PPWRITE           INITIATE WRITE                      82949000
         BAL   PL,PPCHECK            AND CHECK                          82950000
         XC    PULMTTR(7),PULMTTR  CLEAR PUNCH RESTART POINTER       R4 82951000
         CLC   PDDBSKIP,PDDBPGCT   FWD/BSP PAGE COUNT                   82952000
         BH    PBSFSGO             $F DEVICE,N                          82953000
         LH    R15,$BSPSIZ         IF NO BSP                         R4 82954000
         LTR   R15,R15              TABLE ENTRIES,                   R4 82955000
         BZ    PBSPBEG               BR TO RESTART DS               R41 82956000
         EJECT                                                          82957000
*********************************************************************** 82958000
*                                                                     * 82959000
*        $B COMMAND - SEARCH BACKSPACE TABLE FOR RESTART POINT        * 82960000
*                                                                     * 82961000
*********************************************************************** 82962000
         SPACE 1                                                     R4 82963000
         SH    R15,=H'8'           TABLE LENGTH - 1, LESS 1 ENTRY    R4 82964000
         LA    R1,PBSPTBL          POINT TO 1ST TABLE ENTRY          R4 82965000
         SPACE 1                                                     R4 82966000
PBSPSRCH ALR   R1,R15              POINT TO LAST TABLE ENTRY - 1     R4 82967000
         SLR   PL,PL               GET                               R4 82968000
         IC    PL,$BSPGCT           PAGE FRAME                       R4 82969000
         LNR   PL,PL                 FOR LAST                        R4 82970000
         A     PL,PBSPGCT             ENTRY                          R4 82971000
         BNP   PBSPBEG             BR IF START OF DATA SET           R4 82972000
         OC    5(2,R1),5(R1)       TEST FOR VALID ENTRY              R4 82973000
         BZ    PBSPBEG             BR IF NO -- RESTART DS            R4 82974000
         ST    PL,PBSPGCT          SAVE FOR LATER                       82975000
         MVC   PCEJMTTR,1(R1)      HOLD BUFFER MTTR                  R4 82976000
         MVC   PCEEJRCB,5(R1)      HOLD LINE RCB                     R4 82977000
         MVC   PBUFSKIP,7(R1)      HOLD BUFFER OFFSET                R4 82978000
         LA    R1,PBSPTBL          POINT TO 1ST TABLE ENTRY          R4 82979000
         LTR   R15,R15             IF SINGLE-ENTRY TABLE,            R4 82980000
         BM    PBSPINVL             DON'T POP UP TABLE ENTRIES      R41 82981000
         EX    R15,PPOP1           POP UP BSP TABLE                 R41 82982000
         EX    R15,PPOP2            TO PREVIOUS ENTRY               R41 82983000
         SPACE 1                                                    R41 82983500
PBSPINVL DS    0H                                              @OZ29138 82984000
         CL    PL,PDDBSKIP         IS PAGE BEFORE BSP POINT             82985000
         BNH   PBSPFND             BR IF CORRECT PAGE FRAME    @OZ29138 82986000
         XC    0(7,R1),0(R1)       INVALIDATE UNUSED ENTRY     @OZ29138 82986100
         B     PBSPSRCH            GO CHECK NEXT FRAME         @OZ29138 82986200
PBSPFND  DS    0H                                              @OZ29138 82986300
         ST    PL,PDDBPGCT         SET AS NEW PAGE COUNTER              82987000
         SLR   PL,PL               GET                         @OZ29138 82987010
         IC    PL,$BSPGCT           PAGE FRAME AND BUMP        @OZ29138 82987020
         A     PL,PDDBPGCT            BY FRAME SIZE            @OZ29138 82987040
         ST    PL,PBSPGCT          SAVE FOR NEXT TABLE UPDATE  @OZ29138 82987200
         B     PBSFSGO             GO TO RESTART PROCESS                82988000
         SPACE 1                                                     R4 82989000
PPOP1    MVC   BUFSTART(*-*),0(R1) *** EXECUTE ONLY ***             R41 82990000
PPOP2    MVC   7(*-*,R1),BUFSTART  *** EXECUTE ONLY ***             R41 82991000
         SPACE 2                                                     R4 82992000
PBSPBEG  LH    PC1,PDDBDISP        GET PDDB OFFSET                   R4 82993000
         LA    PC2,0(PC1,JCT)      GET PDDB ADDRESS                  R4 82994000
         MVC   PCEJMTTR,PDBMTTR-PDBDSECT(PC2)  RESET 1ST MTTR        R4 82995000
         MVI   PBUFSKIP,0          RESET TRACK-CELL BUFFER OFFSET    R4 82996000
         B     PCKINIT             BACKSPACE TO START OF DATA SET    R4 82997000
         EJECT                                                          82998000
*********************************************************************** 82999000
*                                                                     * 83000000
*        PRINT HASP JOB STATISTICS AFTER LOG DATA SET                 * 83001000
*                                                                     * 83002000
*********************************************************************** 83003000
         SPACE 1                                                     R4 83004000
PRLOGCK  SLR   R0,R0               RESET PAGE COUNT            @OZ28599 83005000
         ST    R0,PDDBPGCT          AND SAVE IT                @OZ28599 83005500
         TM    PCEID,PCEPUSID      IS THIS A PUNCH PROCESSOR            83006000
         BO    PNEXTDDB            BRANCH IF YES                        83007000
         LH    PC1,PDDBDISP        GET PDDB OFFSET INTO THE IOT         83008000
         LA    PC2,0(PC1,JCT)      ADD IOT BASE                         83009000
         TM    PDBFLAG1-PDBDSECT(PC2),PDB1LOG IS THIS THE LOG PDDB      83010000
         BNO   PNEXTDDB            BRANCH IF NO                         83011000
         L     JCT,PJCTBUF         ADDRESS JCT BUFFER                   83012000
         USING JCTDSECT,JCT        ACTIVATE JCT ADDRESSABILITY          83013000
         MVC   PMESSAGE,PJOBSTAT   SETUP STATISTICS TITLE               83014000
         BAL   PL,PRCOMENT         WRITE STATISTICS HEADER              83015000
         ICM   R1,15,JCTXDTON      OBTAIN EXECUTION DATE            R41 83015100
         BZ    PRNODATE            BR IF NONE                       R41 83015200
         BAL   PL,PPDATE           CONVERT TO PRINTABLE             R41 83015300
         MVC   PMESSAGE+10(L'PXEQDATE),PXEQDATE  FORMAT MESSAGE     R41 83015400
         BAL   PL,PRCOMENT          AND ADD TO STATISTICS           R41 83015500
PRNODATE DS    0H                                                   R41 83015600
         MVC   PMESSAGE,PRDRSTAT   SETUP CARDS READ                     83016000
         L     R1,JCTCARDS         GET INPUT CARD COUNT                 83017000
         CVD   R1,PCCWORK          CONVERT TO DECIMAL                   83018000
         ED    PMESSAGE(10),PCCWORK+4 EDIT INPUT CARD COUNT          R4 83019000
         BAL   PL,PRCOMENT         WRITE CARDS READ                     83020000
         MVC   PMESSAGE,PPRTSTAT   SETUP SYSOUT PRINT                   83021000
         L     R1,JCTLINES         GET SYSOUT LINE COUNT                83022000
         CVD   R1,PCCWORK          CONVERT TO DECIMAL                   83023000
         ED    PMESSAGE(10),PCCWORK+4 EDIT SYSOUT RECORD COUNT       R4 83024000
         BAL   PL,PRCOMENT         WRITE SYSOUT RECORD COUNT            83025000
         MVC   PMESSAGE,PPUNSTAT   SETUP SYSOUT PUNCH                   83026000
         L     R1,JCTPUNCH         GET SYSOUT PUNCH COUNT               83027000
         CVD   R1,PCCWORK          CONVERT TO DECIMAL                   83028000
         ED    PMESSAGE(10),PCCWORK+4 EDIT SYSOUT RECORD COUNT       R4 83029000
         BAL   PL,PRCOMENT         WRITE SYSOUT RECORD COUNT            83030000
         MVC   PMESSAGE,PXEQSTAT   SETUP EXECUTION TIME                 83031000
         SLR   R0,R0               ZERO TIME ACCUMULATOR             R4 83032000
         SLR   R1,R1               ZERO TIME ACCUMULATOR             R4 83033000
         CLC   JCTXDTON,JCTXDTOF   COMPARE START AND STOP DATES      R4 83034000
         BE    PRDATEQ             BRANCH IF SAME DAY                R4 83035000
         BL    PRDATELO            BRANCH IF SPANNED AT LEAST 1 DAY  R4 83036000
PRDATEHI DS    0H                                                    R4 83037000
         MVC   PMESSAGE+1(9),=C'(UNKNOWN)' JOB STOPPED BEFORE START  R4 83038000
         B     PRXTIME             BRANCH TO PRINT MESSAGE           R4 83039000
         EJECT                                                       R4 83040000
PRDATELO DS    0H                                                    R4 83041000
         TM    JCTXDTON+3,X'0F'    VALIDATE START DATE (00YYDDDF)    R4 83042000
         BNO   PRDATEHI            ERR MSG IF DATE NOT STORED        R4 83043000
         TM    JCTXDTOF+3,X'0F'    VALIDATE STOP DATE                R4 83044000
         BNO   PRDATEHI            ERR MSG IF DATE NOT STORED        R4 83045000
         CLC   JCTXDTON(2),JCTXDTOF COMPARE YEAR PORTIONS ONLY       R4 83046000
         BE    PRYEAREQ            BRANCH IF SAME YEAR               R4 83047000
         BH    PRDATEHI            ERR MSG IF YEARS BACKWARD         R4 83048000
         ZAP   PCCWORK,JCTXDTON    ISOLATE START YEAR                R4 83049000
         SRP   PCCWORK,64-3,0        AS PACKED DECIMAL NUMBER        R4 83050000
         CVB   PL,PCCWORK          CONVERT START YEAR TO BINARY,     R4 83051000
         O     PL,=F'3'              TEST FOR LEAP YEAR              R4 83052000
         BNZ   SKIP270             SKIP IF NOT LEAP YEAR             R4 83053000
         LA    R1,1                ALLOW FOR 366-DAY YEAR            R4 83054000
SKIP270  LA    R1,365(,R1)         ADD 365 DAYS FOR YEAR CHANGE      R4 83055000
PRYEAREQ DS    0H                                                    R4 83056000
         ZAP   PCCWORK,JCTXDTOF+2(2) COMPUTE DIFFERENCE              R4 83057000
         SP    PCCWORK,JCTXDTON+2(2)   BETWEEN JOB START             R4 83058000
         CVB   PL,PCCWORK              DAY AND JOB STOP DAY          R4 83059000
         AR    R1,PL               ADD TO ADJUSTMENT FOR YEAR CHANGE R4 83060000
         M     R0,=A(24*60*60*100) CONVERT DAYS TO HUNDREDTHS OF SEC R4 83061000
PRDATEQ  DS    0H                                                    R4 83062000
         AL    R1,JCTXEQOF         ADD STOP TIME                     R4 83063000
         BC    12,SKIP280          SKIP IF NO CARRY                  R4 83064000
         AL    R0,=F'1'            ADJUST HIGH END                   R4 83065000
SKIP280  SL    R1,JCTXEQON         SUBTRACT START TIME               R4 83066000
         BC    3,SKIP290           SKIP IF CARRY                     R4 83067000
         BCTR  R0,0                ADJUST HIGH END                   R4 83068000
SKIP290  LTR   R0,R0               CHECK HIGH END                    R4 83069000
         BM    PRDATEHI            ERR MSG IF TOTAL TIME NEGATIVE    R4 83070000
         BP    PRBIGMIN            BRANCH IF TOO LARGE FOR EDIT      R4 83071000
         CL    R1,=A(9999999*60)   CHECK LOW END                     R4 83072000
         BH    PRBIGMIN            BRANCH IF TOO LARGE FOR EDIT      R4 83073000
         D     R0,=F'60'           CONVERT TO HUNDREDTHS OF MINUTES  R4 83074000
         B     PRTIMCVD            BRANCH TO CVD AND EDIT            R4 83075000
PRBIGMIN DS    0H                                                    R4 83076000
         D     R0,=A(60*100)       CONVERT TIME TO WHOLE MINUTES     R4 83077000
         MVC   PMESSAGE(10),PRDRSTAT REPLACE EDIT PATTERN            R4 83078000
PRTIMCVD DS    0H                                                    R4 83079000
         CVD   R1,PCCWORK          CONVERT TO DECIMAL                R4 83080000
         ED    PMESSAGE(10),PCCWORK+4 EDIT EXECUTION TIME            R4 83081000
PRXTIME  DS    0H                                                    R4 83082000
         BAL   PL,PRCOMENT         WRITE EXECUTION TIME                 83083000
         DROP  JCT                 SUSPEND JCT ADDRESSABILITY           83084000
         LR    JCT,PBUF            RESTORE IOT BASE ADDRESS             83085000
         EJECT                                                          83086000
*********************************************************************** 83087000
*                                                                     * 83088000
*        PREPARE FOR SELECTION OF THE NEXT DATA SET                   * 83089000
*                                                                     * 83090000
*********************************************************************** 83091000
         SPACE 1                                                     R4 83092000
PNEXTDDB DS    0H                                                       83093000
         XC    PDDBSKIP,PDDBSKIP   CLEAR SKIP COUNT                     83094000
         L     R1,PCEDCT           ADDRESS PRINT/PUNCH DCT     @OZ32566 83095000
         USING DCTDSECT,R1         ACTIVATE DCT ADDRESSABILITY          83096000
         NI    DCTFLAGS,255-DCTSPACE RESET SPACE CONTROL SWITCHES       83097000
         DROP  R1                  SUSPEND DCT ADDRESSABILITY           83098000
         NI    PDCTFLAG,255-DCTSPACE RESET SPACE CONTROL SWITCHES       83099000
         LM    PC1,PC2,PRCCWEJ     SELECT SKIP TO CH 1 CCW              83100000
         TM    PCEID,PCEPRSID      TEST PROCESSOR TYPE                  83101000
         BO    *+8                 BRANCH IF PRINT                      83102000
         LM    PC1,PC2,PUCCWBL     SELECT BLANK CARD CCW                83103000
         BAL   PL,PPPUT            PUT CCW ONTO CHAIN                   83104000
         BAL   PL,PPWRITE           SEND CHAIN TO DEVICE                83105000
         BAL   PL,PPCHECK            CHECK WRITE                        83106000
         L     PW,PRPAGECT         UPDATE                           R41 83107000
         LA    PW,1(,PW)            TOTAL                           R41 83108000
         ST    PW,PRPAGECT           PAGE COUNT                     R41 83109000
         XC    PULMTTR(7),PULMTTR  CLEAR PUNCH RESTART POINTER       R4 83110000
         SPACE 1                                                     R4 83111000
*********************************************************************** 83112000
*                                                                     * 83113000
*        RE-CYCLE SAME DATA SET UNTIL DS COPIES IS SATISFIED          * 83114000
*                                                                     * 83115000
*********************************************************************** 83116000
         SPACE 1                                                     R4 83117000
         USING PDBDSECT,PC1        PROVIDE PDDB ADDRESSABILITY       R4 83118000
         SPACE 1                                                     R4 83119000
PRCPYTST DS    0H                                                       83120000
         SPACE 1                                                     R4 83121000
         NI    PPFLAG2,255-PPFDS   RESET 1ST DATA SET SWITCH         R4 83122000
         SPACE 1                                                     R4 83123000
         LH    PC1,PDDBDISP        PDDB OFFSET INTO THE IOT          R4 83124000
         LA    PC1,0(PC1,PBUF)     ADD IOT BASE                      R4 83125000
         MVC   PCEJMTTR,PDBMTTR    RESET 1ST MTTR OF DATA SET        R4 83126000
         SPACE 1                                                     R4 83127000
         CLI   PDEVTYPE+3,UCB3800  TEST FOR 3800 PRINTER             R4 83128000
         BE    PRCPYGRP            HANDLE COPY GROUPS IF YES         R4 83129000
         SPACE 1                                                     R4 83130000
         IC    PW,PPRCPYCT         INCREMENT                            83131000
         LA    PW,1(,PW)           COPY                                 83132000
         STC   PW,PPRCPYCT         COUNT                                83133000
         CLC   PPDSCPY,PPRCPYCT    ENOUGH COPIES OF DATA SET            83134000
         BH    PNXTCPY             BR IF ANOTHER COPY NEEDED         R4 83135000
         SPACE 1                                                     R4 83136000
PRCPYEND DS    0H                                                    R4 83137000
         MVI   PPRCPYCT,X'00'      SET COPY COUNT TO ZERO               83138000
         B     PDDBSRCH            FIND NEXT MATCHING PDDB              83139000
         EJECT                                                       R4 83140000
*********************************************************************** 83141000
*                                                                     * 83142000
*        HANDLE COPIES (COPY GROUPS) AND FLASH COUNTS FOR 3800        * 83143000
*                                                                     * 83144000
*********************************************************************** 83145000
         SPACE 1                                                     R4 83146000
PRCPYGRP DS    0H                                                    R4 83147000
         SLR   PW,PW               CLEAR WORK REGISTER               R4 83148000
         LA    R1,1                ASSUME 1 COPY JUST PRINTED        R4 83149000
         CLI   PCOPYGRP,0          TEST FOR COPY GROUPS              R4 83150000
         BE    SKIP300             BR IF NOT - ASSUMPTION CORRECT    R4 83151000
         IC    R1,PDDBCPYG         ELSE, USE COUNT                   R4 83152000
         IC    R1,PCOPYGRP(R1)      OF COPIES JUST PRINTED           R4 83153000
SKIP300  IC    PW,PPRCPYCT         UPDATE TOTAL                      R4 83154000
         LA    PW,0(R1,PW)          NUMBER OF                        R4 83155000
         STC   PW,PPRCPYCT           COPIES PRINTED                  R4 83156000
         CLM   PW,1,PPDSCPY        TEST FOR ALL COPIES PRINTED       R4 83157000
         BNL   PRCPYEND            BR IF YES                         R4 83158000
         LA    R1,1(,PW)           PLACE NEW STARTING                R4 83159000
         STC   R1,SPCOPYS           COPY NO. INTO SETUP LIST         R4 83160000
         MVI   SPFLASHC,0          ASSUME NO MORE FLASHING           R4 83161000
         CLI   PDBFLASH,C'*'       FLASHING...                 @OZ18407 83161200
         BE    PRCPYN              BR IF NO                    @OZ18407 83161400
         IC    R1,PDBFLSHC         GET NO. COPIES NEEDING FLASH      R4 83162000
         SR    R1,PW               SUBTRACT NUMBER ALREADY FLASHED   R4 83163000
         BNP   PRCPYN              BR IF DONE FLASHING         @OZ18407 83164000
         STC   R1,SPFLASHC          ELSE SET REMAINING COUNT   @OZ18407 83165000
         SPACE 1                                               @OZ18407 83165500
PRCPYN   MVI   SPCOPYN,1           ASSUME 1 COPY THIS XMISSION @OZ18407 83166000
         CLI   PCOPYGRP,0          TEST FOR COPY GROUPS              R4 83167000
         BE    PTSTRXMT            BR IF NO                         R41 83168000
         SLR   PW,PW               ELSE, UPDATE                      R4 83169000
         IC    PW,PDDBCPYG          COPY GROUP OFFSET                R4 83170000
         LA    PW,1(,PW)             IN CKPT-AREA AND                R4 83171000
         STC   PW,PDDBCPYG            PLACE NUMBER                   R4 83172000
         IC    PW,PCOPYGRP(PW)         OF COPIES INTO                R4 83173000
         STC   PW,SPCOPYN               SETUP LIST                   R4 83174000
         B     PSETRXMT            BR TO SETUP FOR RE-XMIT          R41 83174500
         SPACE 1                                                    R41 83175500
PTSTRXMT CLI   PDBMODF,C'*'        USING COPY-MOD...                R41 83176500
         BNE   PSETRXMT            BR IF YES                        R41 83177500
         CLI   PDBFLASH,C'*'       FLASHING...                      R41 83178500
         BE    PRCPYOFS            BR IF NO                         R41 83179500
         CLC   PDBFLSHC,PPRCPYCT   TURN-OFF FLASHING...        @OZ18407 83179600
         BNE   PRCPYOFS            BR IF NO                    @OZ18407 83179700
         SPACE 1                                                    R41 83180500
PSETRXMT MVI   SPFLAG,SPREXMIT     SET RETRANSMISSION INDICATION    R41 83181500
         L     R15,=A(P3800DSV)    CALL 3800                         R4 83187000
         BALR  PL,R15               DEVICE SETUP VERIFICATION        R4 83188000
         SPACE 1                                                     R4 83189000
PRCPYOFS LM    PC1,PC2,PCCWOFST    ADD OFFSET-STACKER               R41 83189400
         BAL   PL,PPPUT             CCW TO CHAIN                    R41 83189800
         ICM   PC1,8,PXTABCCW      SELECT                      @OZ24675 83189900
         BAL   PL,PPPUT             CHAR1                      @OZ24675 83189950
         B     PNXTCPY             BR FOR NEXT COPY (COPIES)         R4 83190000
         SPACE 1                                                     R4 83191000
         DROP  PC1                 SUSPEND PDDB ADDRESSABILITY       R4 83192000
         TITLE 'HASP PRINT/PUNCH SERVICE -- PPPUT SUBROUTINE'        R4 83193000
*********************************************************************** 83194000
*                                                                     * 83195000
*        PPPUT -- SUBROUTINE TO ADD A NEW PRINT OR PUNCH COMMAND TO   * 83196000
*                 THE CURRENT CCW AREA                                * 83197000
*                                                                     * 83198000
*        PC1,PC2 - 8 BYTE CHANNEL COMMAND WORD                        * 83199000
*        PL      - RETURN ADDRESS                                     * 83200000
*                                                                     * 83201000
*********************************************************************** 83202000
         SPACE 1                                                     R4 83203000
*********************************************************************** 83204000
*                                                                     * 83205000
*        ELIMINATE EXTRANEOUS PAGE EJECTS                             * 83206000
*                                                                     * 83207000
*********************************************************************** 83208000
         SPACE 1                                                     R4 83209000
         USING DCTDSECT,R1         PROVIDE DCT ADDRESSABILITY        R4 83210000
         SPACE 1                                                     R4 83211000
PPPUT    TM    PCEID,PCEPRSID      TEST PROCESSOR TYPE               R4 83212000
         BNO   PPPUT2              BRANCH IF NOT PRINTER             R4 83213000
         L     R1,PCEDCT           LOAD ADDRESS OF PRINTER DCT @OZ32566 83214000
         CLM   PC1,8,=X'89'        TEST CHANNEL COMMAND CODE            83215000
         BL    PPPUT1              BR IF NOT POSSIBLE EJECT             83216000
         BE    PCHAN1              BR IF PRINT, SKIP TO CHANNEL 1    R4 83217000
         CLM   PC1,8,=X'8B'        TEST CHANNEL COMMAND CODE            83218000
         BNE   PPPUT1              BRANCH IF NOT IMED SKP CHNL 1        83219000
         TM    DCTPPFL,DCTEJECT    CHECK IF ALREADY AT CHANNEL 1     R4 83220000
         BOR   PL                  RETURN IF YES                     R4 83221000
         SPACE 1                                                     R4 83222000
PCHAN1   OI    DCTPPFL,DCTEJECT    SHOW PRINTER EJECTED                 83223000
         B     PPPUT2                AND CONTINUE                       83224000
PPPUT1   NI    DCTPPFL,255-DCTEJECT RESET CHANNEL 1 SWITCH              83225000
         SPACE 1                                                     R4 83226000
*********************************************************************** 83229000
*                                                                     * 83230000
*        ALTERNATE PPPUT ENTRY POINT                                  * 83231000
*                                                                     * 83232000
*        IF REMOTE -- SEND CCW TO LINE MANAGER                        * 83233000
*                                                                     * 83234000
*********************************************************************** 83235000
         SPACE 1                                                     R4 83236000
PPPUT2   TM    PCEID,PCERJEID      TEST PROCESSOR TYPE               R4 83237000
         BZ    PTESTCHN            BR IF NOT REMOTE TERMINAL         R4 83238000
         STM   PC1,PC2,POUTCCWA    PASS CCW TO                       R4 83239000
         L     R1,PCEDCT           GET PRINT/PUNCH DCT ADDRESS @OZ32566 83240000
         LA    R0,POUTCCWA         LOAD ADDRESS OF CCW               R4 83241000
         TM    DCTPPFL,DCTEJECT    END OF PAGE...                   R41 83243000
         BZ    *+8                 NO, SKIP--JUST CALL RTAM          R4 83244000
         ICM   R0,8,*              SET END PAGE INDICATOR FOR RTAM   R4 83245000
        $EXTP  PUT,(R1),(R0)       PASS RESUEST TO RTAM              R4 83247000
         B     PPCHECK             CHECK OPERATOR COMMANDS           R4 83248000
         EJECT                                                       R4 83249000
*********************************************************************** 83250000
*                                                                     * 83251000
*        SEE IF OK TO ADD NEW CCW TO THIS CCW AREA                    * 83252000
*                                                                     * 83253000
*********************************************************************** 83254000
         SPACE 1                                                     R4 83255000
         USING PCIDSECT,PW         PROVIDE PCIE ADDRESSABILITY       R4 83256000
         SPACE 1                                                     R4 83257000
PTESTCHN LH    PW,PCCWLAST         GET OFFSET TO PCIE                R4 83258000
         AL    PW,POUTCCWA         ADD BASE TO OBTAIN TRUE ADDRESS   R4 83259000
         SPACE 1                                                     R4 83260000
         TM    PCISGNAL,PCIACTIV   USE IS OK IF THIS                 R4 83261000
         BZ    PPCHAIN              CCW AREA IS NOT ACTIVE,          R4 83262000
         TM    PPFLAG,PPWSW          OR IF A WRITE                   R4 83263000
         BZ    PPCHAIN                IS NOT IN PROGRESS             R4 83264000
         SPACE 1                                                     R4 83265000
         ST    PL,PLSAVE           ELSE, WAIT                        R4 83266000
         BAL   PL,PCIWAIT           FOR A PCI                        R4 83267000
         L     PL,PLSAVE             AND                             R4 83268000
         B     PTESTCHN               TRY AGAIN                      R4 83269000
         SPACE 1                                                     R4 83270000
         DROP  R1,PW               SUSPEND DCT/PCIE ADDRESSABILITY  R41 83271000
         SPACE 1                                                     R4 83272000
*********************************************************************** 83273000
*                                                                     * 83274000
*        TRANSLATE VIRTUAL DATA ADDRESS TO REAL AND ADD CCW TO CHAIN  * 83275000
*                                                                     * 83276000
*********************************************************************** 83277000
         SPACE 1                                                     R4 83278000
PPCHAIN  DS    0H                                                       83279000
         L     PW,PCCWPT           PICK UP CURRENT CCW POINTER       R4 83280000
         LA    PW,8(,PW)           BUMP CCW POINTER                     83281000
         STM   PC1,PC2,0(PW)       ADD CCW TO CHAIN                     83282000
         LRA   R1,0(,PC1)          CONVERT VIRT DATA ADDRESS TO REAL R4 83283000
         STCM  R1,7,1(PW)           AND UPDATE IN CHAIN              R4 83284000
         SPACE 1                                                     R4 83285000
*********************************************************************** 83286000
*                                                                     * 83287000
*        MERGE IMMEDIATE CCW WITH PREVIOUS PRINT, NO SPACE CCW        * 83288000
*                                                                     * 83289000
*********************************************************************** 83290000
         SPACE 1                                                     R4 83291000
         OC    6(2,PW),6(PW)       TEST BYTE COUNT                      83292000
         BNZ   PPENDCHK            BRANCH IF NOT ZERO                   83293000
         TM    0(PW),X'02'         IS THIS AN IMMED CMD...     @OZ25297 83293125
         BO    PPCHAIN1            YES, CHK IF COMBINE         @OZ25297 83293250
         MVI   5(PW),C' '          SET BLANK SOURCE            @OZ25297 83293375
         LRA   R1,5(,PW)           GET REAL ADDRESS OF BLANK   @OZ25297 83293500
         STCM  R1,7,1(PW)           IN CCW                     @OZ25297 83293625
         B     PPNOMERG              AND SET LENGTH TO 1       @OZ25297 83293750
PPCHAIN1 DS    0H                                              @OZ25297 83293875
         L     R1,POUTCCWA         ADDRESS 1ST CCW IN CHAIN          R4 83294000
         CLR   PW,R1               IS CURRENT CCW AFTER 1ST             83295000
         BNH   PPNOMERG            BR IF NOT                         R4 83296000
         L     R1,PCCWPT           R1 = ADDRESS OF LAST CCW             83297000
         CLI   0(R1),X'01'         TEST LAST COMMAND                    83298000
         BNE   PPNOMERG            BR IF NOT PRINT, NO SPACE         R4 83299000
         NI    0(PW),X'FD'         REMOVE IMMEDIATE BIT              R4 83300000
         MVC   0(1,R1),0(PW)       MOVE COMMAND TO PREVIOUS CCW      R4 83301000
         BR    PL                  RETURN -- NO CCW ADDED            R4 83302000
         SPACE 1                                                     R4 83303000
PPNOMERG MVI   7(PW),X'01'         FORCE BYTE COUNT NON-ZERO            83304000
         EJECT                                                       R4 83305000
*********************************************************************** 83306000
*                                                                     * 83307000
*        UPDATE CCW POINTER AND PUNCH RESTART POINTERS                * 83308000
*                                                                     * 83309000
*********************************************************************** 83310000
         SPACE 1                                                     R4 83311000
PPENDCHK ST    PW,PCCWPT           SAVE CCW POINTER                     83312000
         TM    PCEID,PCEPRSID      TEST PROCESSOR TYPE                  83313000
         BO    PNOTPUN             BRANCH IF PRINT                      83314000
         TM    0(PW),X'05'         IS CCW A 3525 PRINT-LINE             83315000
         BO    PNOTPUN             BRANCH IF YES - DON'T CKPT           83316000
         L     R1,POUTIOB          ADDRESS OF OUTPUT IOB             R4 83317000
         MVC   PPBNMTTR-BUFDSECT(4,R1),PCEJMTTR  UPDATE PUNCH        R4 83318000
         MVC   PPBNRCB-BUFDSECT(2,R1),PCEEJRCB    RESTART            R4 83319000
         MVC   PPBNBOFF-BUFDSECT(1,R1),PCEJBOFF    POINTERS          R4 83320000
         SPACE 1                                                     R4 83321000
*********************************************************************** 83322000
*                                                                     * 83323000
*        USE PPWRITE IF CCW AREA IS FULL                              * 83324000
*                                                                     * 83325000
*********************************************************************** 83326000
         SPACE 1                                                     R4 83327000
PNOTPUN  DS    0H                                                       83328000
         LA    PW,8(,PW)           COMPUTE OFFSET OF NEXT            R4 83329000
         SL    PW,POUTCCWA          SLOT IN CCW CHAIN                R4 83330000
         CH    PW,PCCWLAST         TEST FOR END OF CCW CHAIN         R4 83331000
         BLR   PL                  RETURN IF NOT                     R4 83332000
         TITLE 'HASP PRINT/PUNCH SERVICE -- PPWRITE SUBROUTINE'      R4 83333000
*********************************************************************** 83334000
*                                                                     * 83335000
*        PPWRITE -- SUBROUTINE TO SCHEDULE A NEW CCW AREA FOR OUTPUT  * 83336000
*                                                                     * 83337000
*        PL    - RETURN ADDRESS                                       * 83338000
*                                                                     * 83339000
*********************************************************************** 83340000
         SPACE 1                                                     R4 83341000
         DROP  PBUF                ACTIVATE LOCAL ADDRESSABILITY ON  R4 83342000
         USING BUFDSECT,R15         OUTPUT IOB (BUFFER PREFIX)       R4 83343000
         SPACE 1                                                     R4 83344000
         CNOP  0,8                                                   R4 83345000
PPWRITE  ST    PL,PLSAVE           SAVE RETURN ADDRESS               R4 83346000
         SPACE 1                                                     R4 83347000
*********************************************************************** 83348000
*                                                                     * 83349000
*        RETURN IF REMOTE OR IF CCW AREA IS EMPTY                     * 83350000
*                                                                     * 83351000
*********************************************************************** 83352000
         SPACE 1                                                     R4 83353000
         TM    PCEID,PCERJEID      TEST PROCESSOR TYPE               R4 83354000
         BOR   PL                  RETURN IF REMOTE                  R4 83355000
         L     PW,PCCWPT           PICK UP CCW POINTER               R4 83356000
         L     R1,POUTCCWA         ADDR OF CCW AREA                  R4 83357000
         CLR   PW,R1               RETURN IF                         R4 83358000
         BLR   PL                   NO CCW'S                         R4 83359000
         L     R15,POUTCCWN        GET NEW CCW CHAIN ADDRESS   @OZ29138 83359100
         AH    R15,PCCWLAST        POINT TO THE PCIE,          @OZ29138 83359200
         LA    R15,PCIESIZE(,R15)   AND THE CCW CHKPT AREA.    @OZ29138 83359300
         MVC   JOEPPCT-JOEDSECT(,R15),PDDBPGCT UPDATE PAGE CNT @OZ29138 83359400
         SPACE 1                                                     R4 83360000
*********************************************************************** 83361000
*                                                                     * 83362000
*        SET PCI AND INITIALIZE PCIE AT END OF NEW CCW AREA           * 83363000
*                                                                     * 83364000
*********************************************************************** 83365000
         SPACE 1                                                     R4 83366000
         USING PCIDSECT,R1         PROVIDE PCIE ADDRESSABILITY       R4 83367000
         SPACE 1                                                     R4 83368000
         L     R15,POUTIOB         OUTPUT IOB ADDRESSABILITY         R4 83369000
         OI    4(R1),X'08'         SET PCI AT TOP OF NEW AREA        R4 83370000
         AH    R1,PCCWLAST         COMPUTE ADDR OF PCIE              R4 83371000
         OI    PCISGNAL,PCIACTIV+PCIBUSY  SHOW PCIE ACTIVE AND BUSY  R4 83372000
         NI    PCI1FLGS,255-X'40'  TURN OFF COMMAND CHAINING         R4 83373000
         ST    PW,PPBLVCCN         SAVE POINTER TO LAST VALID CCW    R4 83374000
         SPACE 1                                                     R4 83375000
*********************************************************************** 83376000
*                                                                     * 83377000
*        IF CCW AREA IS NOT FULL -- ADD A TIC TO THE PCIE             * 83378000
*                                                                     * 83379000
*********************************************************************** 83380000
         SPACE 1                                                     R4 83381000
         LA    PW,8(,PW)           ADDR OF NEXT SLOT IN CHAIN        R4 83382000
         CLR   PW,R1               COMPARE WITH PCIE ADDRESS         R4 83383000
         BE    PPWSWAP             BRANCH IF EQUAL (FLUSH WITH PCIE) R4 83384000
         LRA   R1,0(,R1)           CONVERT VIRT PCIE ADDRESS TO REAL R4 83385000
         MVC   0(8,PW),PCNOPTIC+8  ADD A TIC ON THE CHAIN            R4 83386000
         STCM  R1,7,1(PW)           AND POINT IT TO THE PCIE         R4 83387000
         EJECT                                                       R4 83388000
*********************************************************************** 83389000
*                                                                     * 83390000
*        SWAP CCW AREA POINTERS                                       * 83391000
*                                                                     * 83392000
*********************************************************************** 83393000
         SPACE 1                                                     R4 83394000
PPWSWAP  DS    0H                                                    R4 83395000
        $COUNT                     ******* RECORD USAGE *******      R4 83396000
         LM    R0,R1,POUTCCWA      SWAP                              R4 83397000
         ST    R0,POUTCCWN          CCW AREA                         R4 83398000
         ST    R1,POUTCCWA           POINTERS                        R4 83399000
         ST    R0,PPBCCWNX         NEW CHAIN ADDR INTO BUFFER PREFIX R4 83400000
         LR    PW,R1               RESET POINTER                     R4 83401000
         SH    PW,=H'8'             TO FIRST CCW                     R4 83402000
         ST    PW,PCCWPT             IN NEXT AREA                    R4 83403000
         SPACE 1                                                     R4 83404000
*********************************************************************** 83405000
*                                                                     * 83406000
*        IF WRITE IN PROGRESS -- PREPARE TO CHAIN NEW CCW AREA ON     * 83407000
*                                                                     * 83408000
*********************************************************************** 83409000
         SPACE 1                                                     R4 83410000
         TM    PPFLAG,PPWSW        TEST FOR WRITE IN PROGRESS        R4 83411000
         BZ    PWEXCPVR            IF NOT - GO START ONE             R4 83412000
         AH    R1,PCCWLAST         ADDRESS OF PCIE ON ACTIVE CHAIN   R4 83413000
         L     R0,PCI1CCW+4        RIGHT HALF OF PCIE NOP CCW        R4 83414000
         O     R0,=A(PCIBUSY)      SET BUSY FLAG FOR COMPARE         R4 83415000
         LR    PW,R0               COPY AND BUILD A                  R4 83416000
         ICM   PW,8,=X'60'          CHAINED NOP  (CC+SLI)            R4 83417000
         EJECT                                                       R4 83418000
*********************************************************************** 83419000
*                                                                     * 83420000
*        ATTEMPT TO SET THE COMMAND-CHAINING BIT IN THE PCIE AT       * 83421000
*                THE END OF THE CURRENTLY ACTIVE CHAIN                * 83422000
*                                                                     * 83423000
*       IF SUCCESSFUL, THE TIC WILL PASS CONTROL TO THE NEW CHAIN     * 83424000
*              IF NOT, WAIT FOR THE CHE AND RE-ISSUE I/O              * 83425000
*                                                                     * 83426000
*********************************************************************** 83427000
         SPACE 1                                                     R4 83428000
         CS    R0,PW,PCI1CCW+4     APPEND NEW CHAIN TO ACTIVE CHAIN  R4 83429000
         BE    PPWRETRN            BR IF SUCCESSFUL                  R4 83430000
         BAL   PL,PPCHECK          WAIT FOR CHANNEL-END (CHE)        R4 83431000
         SPACE 1                                                     R4 83432000
         DROP  R1                  SUSPEND PCIE ADDRESSABILITY       R4 83433000
         SPACE 1                                                     R4 83434000
*********************************************************************** 83435000
*                                                                     * 83436000
*        SETUP FOR OUTPUT I/O AND CALL $EXCP (VR)                     * 83437000
*                                                                     * 83438000
*********************************************************************** 83439000
         SPACE 1                                                     R4 83440000
PWEXCPVR DS    0H                                                    R4 83441000
         L     R15,POUTIOB         RE-ESTABLISH IOB ADDRESSABILITY   R4 83442000
         L     R1,POUTCCWN         ADDRESS OF NEW CHANNEL PROGRAM    R4 83443000
         ST    R1,IOBSTART         PLACE INTO IOB FOR IOS            R4 83444000
         NI    4(R1),255-X'08'     RESET PCI FLAG                    R4 83445000
         TM    PCEID,PCERJEID+PCEPRSID  TEST PROCESSOR TYPE    @OZ32288 83445100
         BNZ   PRTNOTPU            BRANCH IF NOT LOCAL PUNCH   @OZ32288 83445200
         LR    R14,R1              PRESET                      @OZ32288 83445300
         SH    R14,=H'8'            ERROR                      @OZ32288 83445400
         ST    R14,PUERRPT           POINTER                   @OZ32288 83445500
PRTNOTPU AH    R1,PCCWLAST         OBTAIN PCIE ADDRESS         @OZ32288 83446000
         ST    R1,PPBPCIE          PLACE INTO IOB FOR APPENDAGE      R4 83447000
         MVC   PPBLVCCC,PPBLVCCN   LAST VALID CCW ADDR INTO IOB      R4 83448000
         MVC   PPBCMTTR(7),PPBNMTTR UPDATE PUNCH RESTART POINTERS    R4 83449000
         MVI   PPBFLAG1,X'00'      CLEAR CSW SAVE              @OZ29106 83449500
         L     R1,PCEDCT           PICK UP DCT ADDRESS         @OZ32566 83450000
        $EXCP  (R1),TYPE=VR        INITIATE WRITE (EXCPVR)           R4 83451000
        $COUNT                     ******* RECORD USAGE *******      R4 83452000
         SPACE 1                                                     R4 83453000
         OI    PPFLAG,PPWSW        INDICATE WRITE HAS BEEN STAGED    R4 83454000
         SPACE 2                                                     R4 83455000
PPWRETRN DS    0H                                                    R4 83456000
         L     PL,PLSAVE           RESTORE LINK REGISTER             R4 83457000
         BR    PL                   AND RETURN                       R4 83458000
         TITLE 'HASP PRINT/PUNCH SERVICE -- 3800 ERROR RECOVERY'     R4 83459000
*********************************************************************** 83460000
*                                                                     * 83461000
*        ***  3800 PAPER JAM RECOVERY  ***                            * 83462000
*                                                                     * 83463000
*********************************************************************** 83464000
         SPACE 1                                                     R4 83465000
         USING DCTDSECT,PW         ESTABLISH DCT ADDRESSABILITY      R4 83466000
         SPACE 1                                                     R4 83467000
P3800ERR DS    0H                                                    R4 83468000
         OI    DCTFLAGS,DCTSTOP    HALT DEVICE AND                   R4 83469000
         NI    DCTPPSW2,255-DCTNIJAM  RESET JAM INDICATION           R4 83470000
         SPACE 1                                                     R4 83471000
*********************************************************************** 83472000
*                                                                     * 83473000
*        OBTAIN APPROXIMATE BACKUP PAGE COUNT FOR OPERATOR            * 83474000
*                                                                     * 83475000
*********************************************************************** 83476000
         SPACE 1                                                     R4 83477000
         LH    R14,DCTJAMCT        OBTAIN 3800 PAGES-LOST COUNT      R4 83478000
         L     R1,IOBCSW-1         POINT TO START OF                 R4 83479000
         LA    R1,0(,R1)            REMAINING CHAIN                  R4 83480000
         CLM   R1,7,IOBSTART+1     CSW VALID...                     R41 83480200
         BNL   P38FRSTL            BR IF YES                        R41 83480400
         ICM   R1,7,IOBSTART+1      ELSE USE IOBSTART               R41 83480600
         SPACE 1                                                    R41 83480800
P38FRSTL L     R0,PPBLVCCC         POINT TO END OF CHAIN            R41 83481000
         SPACE 1                                                     R4 83482000
P38PGLUP CLI   0(R1),X'89'         ADD                               R4 83483000
         BL    SKIP320              NUMBER                           R4 83484000
         LA    R14,1(,R14)           OF                              R4 83485000
SKIP320  LA    R1,8(,R1)              SKIP TO                        R4 83486000
         CLR   R1,R0                   CHANNEL N                     R4 83487000
         BNH   P38PGLUP                 CCWS                         R4 83488000
         CL    R0,PPBLVCCC         CHECK FOR FIRST LOOP              R4 83489000
         BNE   P38JMSG             BR IF NOT                         R4 83490000
         L     R1,PPBPCIE                  GO INFORM                 R4 83491000
         TM    PCI1FLGS-PCIDSECT(R1),X'40'  OPERATOR IF END          R4 83492000
         BZ    P38JMSG                       OF CCW AREAS            R4 83493000
         L     R1,PPBCCWNX         RESET POINTERS TO                 R4 83494000
         L     R0,PPBLVCCN          NEXT CCW AREA AND                R4 83495000
         B     P38PGLUP              GO COUNT ITS PAGES              R4 83496000
         SPACE 1                                                     R4 83497000
P38JMSG  DS    0H                                                    R4 83498000
         CVD   R14,$CSAVREG              EDIT THE                    R4 83499000
         UNPK  $CSAVREG(4),$CSAVREG+5(3)  COUNT OF                   R4 83500000
         OI    $CSAVREG+3,X'F0'            LOST PAGES                R4 83501000
         EJECT                                                       R4 83502000
*********************************************************************** 83503000
*                                                                     * 83504000
*        INFORM OPERATOR OF JAM -- GIVE APPROXIMATE PAGE COUNT        * 83505000
*                                                                     * 83506000
*********************************************************************** 83507000
         SPACE 1                                                     R4 83508000
         LR    R0,JCT              SAVE JCT REG ACROSS $WTO    @OZ25856 83509000
         L     JCT,PJCTBUF         GET JCT ADDRESS FOR $WTO INFO     R4 83510000
         SPACE 1                                                     R4 83511000
        $MID   195                 SET MESSAGE IDENTIFIER            R4 83512000
         MVC   PMESSAGE(2),=X'195E'    MOVE MESSAGE NUMBER           R4 83513000
         MVC   PMESSAGE+2(8),DCTDEVN   MOVE DEVICE NAME              R4 83514000
         MVC   PMESSAGE+10(29),=CL29' PAPER JAM--APPROX PAGES=XXXX'  R4 83515000
         MVC   PMESSAGE+35(4),$CSAVREG MOVE PAGES-LOST COUNT         R4 83516000
        $WTO   PMESSAGE,39,JOB=YES,    INFORM OPERATOR OF JAM        R4C83517000
               ROUTE=$LOG+$UR,CLASS=$DOMACT,PRI=$ST                  R4 83518000
         CLC   DCTJAMCT(2),PDDBPGCT+2 HAS DS BOUNDARY PASSED   @OZ31193 83518200
         BNH   PREJECT             IF NOT, SKIP MSG            @OZ31193 83518400
         $MID  196                                             @OZ31193 83518600
         MVC   PMESSAGE(2),=X'196E'                            @OZ31193 83518800
         MVC   PMESSAGE+2(8),DCTDEVN MOVE DEVICE               @OZ31193 83519000
         MVC   PMESSAGE+10(26),PEFMSG MOVE MESSAGE TEXT        @OZ31193 83519200
         $WTO  PMESSAGE,36,JOB=YES,   ISSUE $E NECESSARY MSG   @OZ31193*83519400
               PRI=$ST,CLASS=$ACTION,ROUTE=$LOG+$UR            @OZ31193 83519600
PREJECT  LR    JCT,R0              RESTORE JCT CONTENTS        @OZ31193 83520000
         SPACE 1                                                     R4 83521000
*********************************************************************** 83522000
*                                                                     * 83523000
*        WAIT FOR OPERATOR RESPONSE -- RE-CHECK I/O                   * 83524000
*                                                                     * 83525000
*********************************************************************** 83526000
         SPACE 1                                                     R4 83527000
PWAITOP  DS    0H                  WAIT HERE FOR OPERATOR ACTION     R4 83528000
        $WAIT  IO                  WAIT FOR $POST                    R4 83529000
         TM    DCTFLAGS,DCTSTOP    TEST FOR $S PRT COMMAND           R4 83530000
         BO    PWAITOP             BR IF NOT                         R4 83531000
         SPACE 1                                                     R4 83532000
        $DOM   CMB=(R1)            DELETE OPERATOR MESSAGE           R4 83533000
         B     PPCHECK             GO CHECK FOR OPERATOR ACTION      R4 83534000
PEFMSG   DC    CL26' $E NECESSARY FOR RECOVERY'                @OZ31193 83534500
         SPACE 1                                                     R4 83535000
         DROP  PW                  SUSPEND DCT ADDRESSABILITY        R4 83536000
         TITLE 'HASP PRINT/PUNCH SERVICE -- PUNCH ERROR RECOVERY'    R4 83537000
*********************************************************************** 83538000
*                                                                     * 83539000
*        ***  PUNCH ERROR RECOVERY AND RESTART  ***                   * 83540000
*                                                                     * 83541000
*********************************************************************** 83542000
         SPACE 1                                                     R4 83543000
PUNCHERR DS    0H                                                       83544000
         CLC   IOBCSW(3),IOBSTART+1 VERIFY                           R4 83545000
         BNH   PUNCHER1             THAT                       @OZ32288 83546000
         SH    PW,=H'8'            ADJ CSW ADDR FOR COMPARE    @OZ31058 83546500
         CL    PW,PPBLVCCC            ERROR                          R4 83547000
         LA    PW,8(,PW)           RE-ADJUST CSW ADDR          @OZ31058 83547500
         BNH   PUNCHER1                WAS                           R4 83548000
         L     R14,PPBPCIE              IN                           R4 83549000
         LA    R1,PCIESIZE(,R14)         ACTIVE                      R4 83550000
         CLR   PW,R1                      CCW AREA                   R4 83551000
         BL    PCISIMUL             ELSE, GO SIMULATE PCI            R4 83552000
         SPACE 1                                                     R4 83553000
PUNCHER1 DS    0H                                                    R4 83554000
         L     R1,PPBPCIE          ADDRESS 1ST POSSIBLE              R4 83555000
         USING PCIDSECT,R14        GAIN ADDRESSABILITY         @OZ31211 83555400
         NI    PCISGNAL,255-PCIFNLBF  TURN OFF FINAL BUFFER    @OZ31211 83555500
         DROP  R14                 DROP PCIE ADDRESSABILITY    @OZ31211 83555600
         SH    R1,PCCWLAST          CCW IN CHAIN                     R4 83556000
         SL    PW,=F'16'           DECREMENT RESTART ADDRESS            83557000
         CLI   PDEVTYPE+3,X'02'    TEST PUNCH DEVICE TYPE               83558000
         BE    PURANGE             BRANCH IF 2540P                      83559000
         CLI   PDEVTYPE+3,X'0C'    TEST PUNCH DEVICE TYPE               83560000
         BE    PU3525              BRANCH IF 3525                       83561000
         LA    PW,8(,PW)           INCREMENT RESTART ADDRESS BY 8       83562000
         B     PURANGE             BRANCH TO CHECK RESTART ADDRESS      83563000
PU3525   DS    0H                                                       83564000
         CR    PW,R1               IS RESTART ADDRESS BEFORE CCW'S   R4 83565000
         BL    PUBACKUP            BRANCH IF YES                        83566000
         TM    0(PW),X'05'         IS CCW A PUNCH CCW                   83567000
         BM    PURANGE             BRANCH IF YES                        83568000
         SL    PW,=F'8'            DECREMENT RESTART ADDRESS            83569000
         B     PU3525              CONTINUE BACKWARD SCAN               83570000
PUBACKUP DS    0H                                                       83571000
         OC    PULMTTR(6),PULMTTR  IS RESTART POINTER ZERO              83572000
         BNZ   PURSTRT             BRANCH IF RESTART POINTER NOT ZERO   83573000
         LR    PW,R1               SET RESTART ADDRESS TO 1ST CCW       83574000
         B     PURANGE             GO RANGE CHECK ADDRESS               83575000
PURSTRT  DS    0H                                                       83576000
         MVC   PCEJMTTR,PULMTTR    SET RESTART BUFFER MTTR              83577000
         MVC   PCEEJRCB,PULRCB     SET RESTART RCB OFFSET               83578000
         MVC   PBUFSKIP,PULBOFF    SET RESTART BUFFER OFFSET         R4 83579000
         LA    PL,PBSFSGO          SETUP RESTART LOCATION               83580000
         B     PPWINIT             EXIT TO COMPLETE RESTART          R4 83581000
         SPACE 1                                                     R4 83582000
PURANGE  DS    0H                                                       83583000
         CR    PW,R1               IS RESTART ADDRESS BEFORE CCW'S   R4 83584000
         BL    PUBACKUP            BRANCH IF YES                        83585000
         CL    PW,PUERRPT          IS RESTART ADDRESS BEFORE LAST       83586000
         BNH   PURETRY             BRANCH IF YES                        83587000
         ST    PW,PUERRPT          NEW ERROR -- SAVE CCW FOR TEST       83588000
         TITLE 'HASP PRINT/PUNCH SERVICE -- CHANNEL PROGRAM RESTART' R4 83589000
*********************************************************************** 83590000
*                                                                     * 83591000
*        RESTART PRINT/PUNCH CHANNEL PROGRAM AFTER ERROR              * 83592000
*                                                                     * 83593000
*********************************************************************** 83594000
         SPACE 1                                                     R4 83595000
PRESTRT  TM    PCEID,PCEPRSID      IS THIS A PRINTER PCE...    @OZ33052 83595050
         BO    PPRTHALT            YES..ISSUE MSG AND STOP.    @OZ33052 83595100
         TM    IOBCSW+4,X'3F'      TEST FOR CHANNEL FAILURES   @OZ33052 83595150
         BZ    PUREST              CONTINUE IF NONE.           @OZ33052 83595300
PPRTHALT L     R1,PCEDCT           GET DCT ADDR.               @OZ33052 83595450
         LR    R0,JCT              SAVE JCT REG ACROSS $WTO    @OZ20792 83595600
         OI    DCTFLAGS-DCTDSECT(R1),DCTSTOP STOP THE DEVICE   @OZ20792 83595750
         L     JCT,PJCTBUF         LOAD JCT FOR $WTO           @OZ20792 83595900
         SPACE 1                                               @OZ20792 83595950
         $MID  191                                             @OZ20792 83596000
         MVC   PMESSAGE(2),=X'191F' MOVE MSG ID                @OZ20792 83596200
         MVC   PMESSAGE+2(8),DCTDEVN-DCTDSECT(R1) MOVE DEVICE  @OZ20792 83596350
         MVC   PMESSAGE+10(29),PURMSG MOVE MSG TEXT            @OZ20792 83596500
         $WTO  PMESSAGE,39,JOB=YES, ISSUE PRINTER HALTED MSG   @OZ20792*83596650
               ROUTE=$LOG+$UR,CLASS=$ACTION,PRI=$ST            @OZ20792 83596800
         LR    JCT,R0              RESTORE JCT REG CONTENTS    @OZ20792 83596900
         SPACE 1                                               @OZ20792 83596925
PUREIFC  L     R1,PCEDCT           LOAD DCT ADDRESS            @OZ32566 83596950
         USING DCTDSECT,R1         ESTABLISH DCT ADDRESS       @OZ20792 83596960
         L     R15,POUTIOB         PICK UP OUTPUT IOB ADDR     @OZ20792 83596975
         TM    DCTFLAGS,DCTSTOP    TEST FOR $S DEVICE          @OZ20792 83597000
         BZ    PUREST              BRANCH IF TRUE START        @OZ20792 83597100
         NI    DCTFLAGS,255-DCTDELET-DCTRSTRT-DCTBKSP RESET    @OZ20792 83597250
         DROP  R1                                              @OZ20792 83597300
         $WAIT IO                  WAIT FOR POST FROM COMM     @OZ20792 83597400
         B     PUREIFC             TEST FOR $S DEVICE          @OZ20792 83597550
         SPACE 1                                               @OZ20792 83597600
PUREST   ST    PW,IOBSTART         RESTART CCW LIST            @OZ20792 83597850
         EJECT                                                 @OZ20792 83597900
*********************************************************************** 83598000
*                                                                     * 83599000
*        RESTART PRINT/PUNCH CHANNEL PROGRAM AT IOBSTART              * 83600000
*                                                                     * 83601000
*        FOR 3525 PUNCH -- MAKE DEVICE 'NOT-READY'                    * 83602000
*                                                                     * 83603000
*********************************************************************** 83604000
         SPACE 1                                                     R4 83605000
PURETRY  DS    0H                                                       83606000
         CLI   PDEVTYPE+3,X'0C'    TEST DEVICE TYPE                     83607000
         BNE   PUREXCP             BRANCH IF NOT A 3525 PUNCH           83608000
         L     R1,PRPUUCB          ADDRESS 3525 UCB                 R41 83609000
        MODESET EXTKEY=ZERO        GET ZERO KEY TO CHANGE THE UCB       83610000
         OI    UCBFL1-UCBDSECT(R1),UCBNOTRD  SET NOT-READY          R41 83611000
        MODESET EXTKEY=HASP        RETURN TO NORMAL HASP KEY            83612000
         SPACE 1                                                     R4 83613000
*********************************************************************** 83614000
*                                                                     * 83615000
*        RESET PCI FLAG (IF ANY) IN RESTART CCW                       * 83616000
*                                                                     * 83617000
*        RE-ISSUE $EXCP (VR) AND RE-CHECK COMPLETION                  * 83618000
*                                                                     * 83619000
*********************************************************************** 83620000
         SPACE 1                                                     R4 83621000
PUREXCP  L     R1,IOBSTART         RESET PCI FLAG                    R4 83622000
         MVI   PPBFLAG1,X'00'      CLEAR CSW SAVE              @OZ29106 83622500
         NI    4(R1),255-X'08'      IN RESTART CCW                   R4 83623000
         SPACE 1                                                     R4 83624000
         L     R1,PCEDCT           ADDRESS PRINTER/PUNCH DCT   @OZ32566 83625000
        $EXCP  (R1),TYPE=VR        RESTART I/O                       R4 83626000
         B     PPPWAIT             GO WAIT FOR I/O COMPLETION        R4 83627000
PURMSG   DC    CL29' HALTED/POSSIBLE DATA LOST   '             @OZ20792 83627500
         TITLE 'HASP PRINT/PUNCH SERVICE -- ERROR DETECTION AND CORRECTC83628000
               ION'                                                  R4 83629000
*********************************************************************** 83630000
*                                                                     * 83631000
*        PPCHECK SUBROUTINE -- DETECT PRINT/PUNCH ERRORS AND RECOVER  * 83632000
*                                                                     * 83633000
*        PL    - RETURN ADDRESS                                       * 83634000
*                                                                     * 83635000
*********************************************************************** 83636000
         SPACE 2                                                     R4 83637000
*********************************************************************** 83638000
*                                                                     * 83639000
*        ENTRY POINT FOR PCI WAITS                                    * 83640000
*                                                                     * 83641000
*********************************************************************** 83642000
         SPACE 1                                                     R4 83643000
PCIWAIT  DS    0H                  ENTRY FOR PCI WAITS               R4 83644000
         L     R15,POUTIOB         PICK UP OUTPUT IOB ADDRESSABILITY R4 83645000
         TM    PPFLAG,PPWSW        TEST FOR WRITE IN PROGRESS        R4 83646000
         BZ    PPCHECK             BR IF NOT                         R4 83647000
         TM    BUFECBCC,X'7F'      HAS I/O COMPLETED...              R4 83648000
         BNZ   PPCHECK             BR IF YES                         R4 83649000
         OI    PPFLAG2,PPCIWAIT    INDICATE WAIT FOR PCI             R4 83650000
         L     R14,PPBPCIE         PICK UP ACTIVE PCIE ADDRESS       R4 83651000
         USING PCIDSECT,R14        ESTABLISH PCIE ADDRESSABILITY     R4 83652000
         TM    PCISGNAL,PCIACTIV   IS PCIE ON ACTIVE CHAIN...        R4 83653000
         BZ    PPPWAIT             WAIT IF NOT                       R4 83654000
         TM    PCISGNAL,PCIBUSY    HAS PCIE EXECUTED...              R4 83655000
         BZ    PPCHECK             BR IF YES                         R4 83656000
         DROP  R14                 SUSPEND PCIE ADDRESSABILITY       R4 83657000
         SPACE 1                                                     R4 83658000
*********************************************************************** 83659000
*                                                                     * 83660000
*        $WAIT PRINT/PUNCH PROCESSOR FOR AN I/O POST                  * 83661000
*                                                                     * 83662000
*********************************************************************** 83663000
         SPACE 1                                                     R4 83664000
PPPWAIT  DS    0H                                                       83665000
        $WAIT  IO                  WAIT FOR IO POST                     83666000
         SPACE 1                                                     R4 83667000
*********************************************************************** 83668000
*                                                                     * 83669000
*        MAIN PPCHECK ENTRY POINT                                     * 83670000
*                                                                     * 83671000
*********************************************************************** 83672000
         SPACE 1                                                     R4 83673000
PPCHECK  DS    0H                                                       83674000
         LTR   JCT,JCT             IS THIS A SPOOL MESSAGE PRINTER      83675000
         BZR   PL                  BRANCH IF YES                        83676000
         TM    PCEID,PCERJEID      TEST PROCESSOR TYPE                  83677000
         BO    PCOMTEST            BRANCH IF REMOTE                     83678000
         TM    PPFLAG,PPWSW        TEST FOR WRITE INITIATED             83679000
         BZ    PPWINIT             BYPASS CHECK IF NO                R4 83680000
         EJECT                                                       R4 83681000
*********************************************************************** 83682000
*                                                                     * 83683000
*        FIRST -- CHECK FOR OPERATOR CONSOLE ACTION                   * 83684000
*                                                                     * 83685000
*********************************************************************** 83686000
         SPACE 1                                                     R4 83687000
PCOMTEST DS    0H                                                       83688000
         L     PW,PCEDCT           GET ADDRESS OF PRT/PNCH DCT @OZ32566 83689000
         USING DCTDSECT,PW         ESTABLISH DCT ADDRESSABILITY         83690000
         NI    PDCTFLAG,255-DCTSPACE RESET OP CARRIAGE CONTROL          83691000
         OC    PDCTFLAG,DCTFLAGS   STACK OPERATOR FLAGS                 83692000
*                                                                       83693000
*        $C/$E/$I DEVICE                                             R4 83694000
*                                                                       83695000
         TM    DCTFLAGS,DCTDELET+DCTRSTRT NEW $C, $E, OR $I             83696000
         BZ    POPCANJ             BRANCH IF NO                         83697000
         TM    PPFLAG,PRDELSW      PREVIOUS $C, $E, OR $I               83698000
         BO    PPABORT             BRANCH IF YES                        83699000
         B     PRDEL               SET TERMINATION FLAG                 83700000
*                                                                       83701000
*        $CJOB,PURGE  (WHEN ISSUED ON ANOTHER SYSTEM)                R4 83702000
*                                                                       83703000
POPCANJ  DS    0H                                                       83704000
         L     R1,PCEJQE           ADDRESS OF JQE              @OZ32566 83705000
         USING JQEDSECT,R1         ACTIVATE JQE ADDRESSABILITY          83706000
         TM    JQEFLAGS,QUEOPCAN+QUEPURGE $CJOB,PURGE ISSUED            83707000
         BNO   POPSPACE            BRANCH IF NO                         83708000
         DROP  R1                  SUSPEND JQE ADDRESSABILITY           83709000
         OI    PDCTFLAG,DCTDELET   SET TERMINATION REASON               83710000
         B     PRDEL               GO COMPLETE TERMINATION              83711000
*                                                                       83712000
*        $B/$F DEVICE,PAGES OR ,DSET                                 R4 83713000
*                                                                       83714000
POPSPACE DS    0H                                                       83715000
         TM    DCTFLAGS,DCTBKSP    BSP/FSP                              83716000
         BZ    POPRPT              BRANCH IF NO                         83717000
         NI    PDCTFLAG,255-DCTBKSP RESET FS/BS FLAG                    83718000
         TM    PPFLAG,PPNEWS       IGNORE $B/$F IF                  R41 83718200
         BO    POPRPT               PRINTING JES2-NEWS              R41 83718400
         NI    DCTPPFL,255-DCTEJECT  RESET TOP-OF-PAGE FLAG          R4 83719000
         TM    PCEID,PCERJEID+PCEPUSID  RJE DEVICE OR PUNCH... @OZ29138 83719100
         BNZ   PPDEL                    BR IF YES              @OZ29138 83719110
         CLC   DCTCSW,=F'0'        DID INT. REQUIRED OCCUR     @OZ29138 83719120
         BE    PPDEL               BR IF NO, SET SUSPEND FLAG  @OZ29138 83719130
         ST    PL,PMESSAGE         SAVE LINKAGE REGISTER       @OZ29138 83719140
         L     R15,=A(PPCNTPGE)    GET PAGE COUNT ROUTINE ADDR @OZ29138 83719150
         BALR  PL,R15              GO AND COUNT PAGES          @OZ29138 83719160
         L     PL,PMESSAGE         RESTORE LINKAGE REGISTER    @OZ29138 83719170
         B     PPDEL               SET SUSPEND FLAG                     83720000
         EJECT                                                          83721000
*                                                                       83722000
*        $N DEVICE                                                      83723000
*                                                                       83724000
POPRPT   DS    0H                                                       83725000
         TM    PDCTFLAG,DCTRPT     TEST FOR $N                          83726000
         BNO   PPIOTEST            BRANCH IF NO                         83727000
         TM    PPFLAG,PRDELSW      PREVIOUS $C, $E, $I         @OZ29256 83727100
         BO    PPIOTST             BRANCH IF YES               @OZ29256 83727200
         L     R1,PWKJOE           ADDRESS WORK-JOE                     83728000
         USING JOEDSECT,R1         ACTIVATE JOE ADDRESSABILITY          83729000
         TM    JOEFLAG,$JOESPIN    IS THIS A SPIN JOE                   83730000
         BNO   PREPADD             BRANCH IF NO                         83731000
         DROP  R1                  SUSPEND JOE ADDRESSABILITY           83732000
         IC    R1,PPDSCPY          GET DATASET COPY COUNT               83733000
         LA    R1,1(,R1)           INCREMENT                            83734000
         STC   R1,PPDSCPY          STORE OVER OLD VALUE                 83735000
         B     PREPWTO             GO TELL THE OPERATOR                 83736000
*                                                                       83737000
*        ADD A COPY OF THE WORK-JOE TO THE JOB OUTPUT TABLE             83738000
*                                                                       83739000
PREPADD  DS    0H                                                       83740000
        $#ADD  WORK=PWKJOE,CHAR=PCHJOE COPY JOE BACK INTO QUEUE      R4 83741000
         BNZ   PPIOTEST            BRANCH IF $#ADD FAILED               83742000
*                                                                       83743000
*        WRITE OPERATOR MESSAGE IF ADD SUCCESSFUL                       83744000
*                                                                       83745000
PREPWTO  DS    0H                                                       83746000
         NI    PDCTFLAG,255-DCTRPT RESET $N FLAG                        83747000
        $MID   170                                                   R4 83748000
         MVC   PMESSAGE(2),=X'170F' MESSAGE NUMBER                      83749000
         MVC   PMESSAGE+2(8),DCTDEVN DEVICE NAME                        83750000
         MVC   PMESSAGE+10(12),=CL12' REPEATED' OPERATOR MESSAGE        83751000
        $WTO   PMESSAGE,22,        INFORM THE OPERATOR                 C83752000
               ROUTE=$LOG+$UR,CLASS=$NORMAL,PRI=$ST,JOB=NO              83753000
         B     PPIOTEST            CHECK THE IO STATUS                  83754000
         SPACE 1                                                     R4 83755000
*********************************************************************** 83756000
*                                                                     * 83757000
*        INDICATE PROCESSOR SUSPENSION AND/OR TERMINATION             * 83758000
*                                                                     * 83759000
*********************************************************************** 83760000
         SPACE 1                                                     R4 83761000
PRDEL    OI    PPFLAG,PRDELSW      TERMINATION - $C, $E, $I             83762000
PPDEL    OI    PPFLAG,PPDELSW      SUSPENSION  - $B, $F                 83763000
         EJECT                                                          83764000
*********************************************************************** 83765000
*                                                                     * 83766000
*        CHECK FOR ACTIVE PCIE EXECUTION                              * 83767000
*                                                                     * 83768000
*********************************************************************** 83769000
         SPACE 1                                                     R4 83770000
         USING PCIDSECT,R14        PROVIDE PCIE ADDRESSABILITY       R4 83771000
PPIOTEST DS    0H                                                    R4 83772000
         NI    DCTFLAGS,255-DCTDELET-DCTRSTRT-DCTRPT-DCTBKSP RESET   R4 83773000
PPIOTST  DS    0H                                              @OZ29256 83773100
         TM    PCEID,PCERJEID      TEST PROCESSOR TYPE               R4 83774000
         BO    PPZTEST             BR IF REMOTE                      R4 83775000
         SPACE 1                                                     R4 83776000
         L     R15,POUTIOB         PICK UP OUTPUT IOB ADDRESSABILITY R4 83777000
         L     R14,PPBPCIE         PICK UP ACTIVE PCIE ADDRESS       R4 83778000
         SPACE 1                                                     R4 83779000
PPCICHK  DS    0H                                                    R4 83780000
         TM    PCISGNAL,PCIBUSY    HAS PCI ELEMENT EXECUTED...       R4 83781000
         BO    PPZTEST             BR IF STILL BUSY                  R4 83782000
         XC    DCTCSW(4),DCTCSW    CLEAR INT. REQUIRED INDIC   @OZ29138 83782100
         SPACE 1                                                     R4 83783000
*********************************************************************** 83784000
*                                                                     * 83785000
*        PCIE HAS BEEN EXECUTED -- UPDATE BUFFER AVAILABLE COUNT      * 83786000
*                                                                     * 83787000
*********************************************************************** 83788000
         SPACE 1                                                     R4 83789000
PPCIUPDT DS    0H                                                    R4 83790000
         NI    PCISGNAL,255-PCIACTIV   FLAG PCIE OFF ACTIVE CHAIN    R4 83791000
         TM    PCISGNAL,PCIFNLBF   TEST IF DATA BUFFER(S) FINISHED   R4 83792000
         BZ    PPCUPJOE            BR IF NOT                         R4 83793000
         IC    R1,PBFAVAIL         INCREMENT NUMBER OF               R4 83794000
         LA    R1,1(,R1)            BUFFERS AVAILABLE FOR            R4 83795000
         STC   R1,PBFAVAIL           DE-SPOOLING (TO FORCE READ)     R4 83796000
         NI    PCISGNAL,255-PCIFNLBF RESET FLAG                      R4 83797000
         SPACE 1                                                     R4 83798000
*********************************************************************** 83799000
*                                                                     * 83800000
*        SHOW CHECKPOINT NEEDED                                       * 83801000
*                                                                     * 83802000
*********************************************************************** 83803000
         SPACE 1                                                     R4 83804000
PPCUPJOE DS    0H                                                    R4 83805000
         TM    PPFLAG2,PPCKPTA     ARE CHECKPOINTS ALLOWED           R4 83806000
         BZ    PPCNCKPT            BR IF NO                          R4 83807000
         TM    PCISGNAL,PCICKPT    IS NEW CKPT DATA PRESENT...       R4 83808000
         BZ    PPCNCKPT            BR IF NO                          R4 83809000
         NI    PCISGNAL,255-PCICKPT  RESET NEW CKPT FLAG             R4 83810000
         LA    R1,PCIESIZE(,R14)   POINT TO CHECKPOINT DATA          R4 83811000
         ST    R1,PPCKPTR          SAVE FOR PPPCKPT                  R4 83812000
         OI    PPFLAG2,PPCKPT      INDICATE CKPT-DATA NEEDS UPDATE   R4 83813000
         EJECT                                                       R4 83814000
*********************************************************************** 83815000
*                                                                     * 83816000
*        IF PCIE NOT LAST ON CHAIN -- UPDATE CCW-AREAS INFORMATION    * 83817000
*                                                                     * 83818000
*********************************************************************** 83819000
         SPACE 2                                                     R4 83820000
PPCNCKPT TM    PCEID,PCERJEID+PCEPRSID   TEST PROCESSOR TYPE   @OZ30757 83821000
         BNZ   PPCHKCC             BR IF NOT LOCAL PUNCH       @OZ30757 83822000
         L     R1,PPBCCWNX         PRESET                      @OZ30757 83823000
         SH    R1,=H'8'             PUNCH                      @OZ30757 83824000
         ST    R1,PUERRPT            ERROR POINTER             @OZ30757 83825000
         MVC   PULMTTR(7),PPBCMTTR    AND MTTR                 @OZ30757 83826000
         SPACE 1                                               @OZ30757 83826500
PPCHKCC  TM    PCI1FLGS,X'40'      CHECK NEXT CCW AREA READY   @OZ30757 83827000
         BZ    PPZTEST             BR IF COMMAND-CHAIN NOT ON  @OZ30757 83828000
         L     R1,PPBCCWNX         UPDATE IOBSTART TO REFLECT  @OZ30757 83829000
         ST    R1,IOBSTART          EXECUTION IN NEXT AREA     @OZ30757 83830000
         AH    R1,PCCWLAST         COMPUTE NEW PCIE ADDR AND   @OZ30757 83831000
         ST    R1,PPBPCIE           UPDATE PPBPCIE TO SHOW IT  @OZ30757 83832000
         L     R1,PPBLVCCN         UPDATE PTR TO LAST VALID    @OZ30757 83833000
         ST    R1,PPBLVCCC          CHAN CMND IN CURRENT AREA  @OZ30757 83834000
         MVC   PPBCMTTR(7),PPBNMTTR UPDATE RESTART POINTER     @OZ30757 83835000
         EJECT                                                       R4 83836000
*********************************************************************** 83837000
*                                                                     * 83838000
*        IF $Z DEVICE -- $WAIT FOR OPERATOR ACTION                    * 83839000
*                                                                     * 83840000
*        CHECK FOR LOCAL PRINT/PUNCH I/O COMPLETION                   * 83841000
*                                                                     * 83842000
*********************************************************************** 83843000
         SPACE 1                                                     R4 83844000
PPZTEST  TM    DCTFLAGS,DCTSTOP    TEST FOR OPERATOR $Z              R4 83845000
         BO    PPPWAIT             BRANCH IF YES                        83846000
         TM    PCEID,PCERJEID      TEST PROCESSOR TYPE               R4 83847000
         BO    PPWINIT             BR IF REMOTE                      R4 83848000
         SPACE 1                                                     R4 83849000
         TM    BUFECBCC,X'7F'      TEST I/O COMPLETION CODE             83850000
         BZ    PCITEST             BRANCH IF NOT CHANNEL END         R4 83851000
         BO    PPCGOOD             BRANCH IF NO ERRORS               R4 83852000
         SPACE 1                                                     R4 83853000
*********************************************************************** 83854000
*                                                                     * 83855000
*        ERROR DETECTED -- START ANALYSIS                             * 83856000
*                                                                     * 83857000
*********************************************************************** 83858000
         SPACE 1                                                     R4 83859000
         L     R1,PRPUUCB          ADDRESS DEVICE UCB                   83860000
         TM    UCBFLB-UCBDSECT(R1),UCBIORST TEST UCB DEVICE STATUS      83861000
         BZ    PDEVOK              BRANCH IF M/P HAS NOT ABORTED        83862000
         CLC   $RELEASE,=C'02'     TEST OS/VS2 RELEASE NUMBER        R4 83863000
         BE    PPIODRN             BR IF RELEASE 2                   R4 83864000
         L     R1,CVTPTR           GET ADDRESS OF CVT                R4 83865000
         CLC   CVTCRCA-CVT(,R1),=XL4'0'  TEST RECOVERY MODE          R4 83866000
         BNE   PDEVOK              BR IF DEVICE STILL ACCESSIBLE     R4 83867000
PPIODRN  DS    0H                                                    R4 83868000
         OI    DCTSTAT,DCTDRAIN    FORCE A DRAIN OF THE DEVICE          83869000
         OI    PDCTFLAG,DCTRSTRT+DCTBKSP FORCE AN INTERRUPT ($I)        83870000
         B     PPABORT             SUSPEND USE OF THE DEVICE            83871000
         SPACE 1                                                     R4 83872000
PDEVOK   DS    0H                                                       83873000
        $COUNT                     ********************************* R4 83874000
         TM    PPFLAG,PPDELSW      TEST FOR OPERATOR ACTION             83875000
         BO    PPWINIT             BYPASS ERROR RECOVERY IF ABORT    R4 83876000
         SPACE 1                                                     R4 83877000
         CLI   PDEVTYPE+3,UCB3800  TEST FOR 3800 PRINTER             R4 83878000
         BNE   SKIP330             BR IF NOT                         R4 83879000
         TM    DCTPPSW2,DCTNIJAM    ELSE, GO HANDLE IF               R4 83880000
         BO    P3800ERR              PAPER JAM                       R4 83881000
         SPACE 1                                                     R4 83882000
         DROP  PW                  SUSPEND DCT ADDRESSABILITY           83883000
         EJECT                                                       R4 83884000
*********************************************************************** 83885000
*                                                                     * 83886000
*        FOR PRINTERS - IF INVALID CSW -- RETRY USING IOBSTART        * 83887000
*                       IF VALID CSW   -- RESTART AT CCW AFTER ERROR  * 83888000
*                       IF IN PCIE     -- SIMULATE PCI INTERRUPTION   * 83889000
*                                                                     * 83890000
*********************************************************************** 83891000
         SPACE 1                                                     R4 83892000
SKIP330  L     PW,IOBCSW-1         PICK UP COMMAND ADDRESS FROM CSW     83893000
         LA    PW,0(,PW)           CLEAR HIGH-ORDER BYTE                83894000
         TM    PCEID,PCEPUSID      TEST PROCESSOR TYPE               R4 83895000
         BO    PUNCHERR            BR IF PUNCH                       R4 83896000
         SPACE 1                                                     R4 83897000
         CLC   IOBCSW(3),IOBSTART+1  COMPARE CSW WITH FIRST CCW      R4 83898000
         BNH   PURETRY             BR IF ZERO OR INVALID             R4 83899000
         CL    PW,PPBLVCCC         COMP RESTART CCW WITH END OF AREA R4 83900000
         BNH   PRESTRT             BRANCH IF VALID RESTART CCW       R4 83901000
         SPACE 1                                                     R4 83902000
         L     R14,PPBPCIE         ADDRESS THE PCIE                  R4 83903000
         LA    R1,PCIESIZE(,R14)   IF RESTART CCW IS                 R4 83904000
         CLR   PW,R1                OUT OF ACTIVE AREA,              R4 83905000
         BNL   PURETRY               RESTART AT IOBSTART             R4 83906000
         SPACE 1                                                     R4 83907000
PCISIMUL DS    0H                                                    R4 83908000
         NI    PCISGNAL,255-PCIBUSY  SIMULATE PCI INTERRUPTION       R4 83909000
         XC    IOBCSW(3),IOBCSW    CLEAR CSW TO FORCE RETRY          R4 83910000
         TM    PCI1FLGS,X'40'      SEE IF NEXT CCW AREA IS READY     R4 83911000
         BO    PPCIUPDT            BR IF YES -- RECYCLE              R4 83912000
         B     PPWINIT              ELSE GO TO CLEAN UP              R4 83913000
         EJECT                                                       R4 83914000
*********************************************************************** 83915000
*                                                                     * 83916000
*        NORMAL I/O COMPLETION                                        * 83917000
*                                                                     * 83918000
*        IF CHE NOT ON EXPECTED PCIE -- HANDLE LOST INTERRUPTS        * 83919000
*                                                                     * 83920000
*********************************************************************** 83921000
         SPACE 1                                                     R4 83922000
PPCGOOD  DS    0H                                                    R4 83923000
         CL    R14,PPBPCIE         TEST FOR PCIE SWAP                R4 83924000
         BE    PPWINIT             BR IF ALL I/O COMPLETE            R4 83925000
         L     R14,PPBPCIE         ELSE, ADDRESS NEW PCIE            R4 83926000
         TM    PCISGNAL,PCIBUSY    HAS THIS NEW PCIE EXECUTED...     R4 83927000
         BO    PUREXCP             RESTART AT IOBSTART IF NOT        R4 83928000
         B     PPCIUPDT            ELSE, PROCESS NEW PCIE            R4 83929000
         SPACE 1                                                     R4 83930000
         DROP  R14                 SUSPEND PCIE ADDRESSABILITY       R4 83931000
         SPACE 2                                                     R4 83932000
PPWINIT  DS    0H                                                    R4 83933000
         NI    PPFLAG,255-PPWSW    INDICATE WRITE COMPLETED          R4 83934000
         B     PPPCKPT             GO TO CHECKPOINT ROUTINE          R4 83935000
         SPACE 1                                                     R4 83936000
PCITEST  DS    0H                                                    R4 83937000
         TM    PPFLAG2,PPCIWAIT    TEST FOR PCI WAIT                 R4 83938000
         BZ    PPPWAIT             BR IF NO                          R4 83939000
         SPACE 1                                                     R4 83940000
         DROP  R15                 RE-ESTABLISH DATA BUFFER          R4 83941000
         USING BUFDSECT,PBUF        ADDRESSABILITY                   R4 83942000
         TITLE 'HASP PRINT/PUNCH SERVICE -- PROCESSOR CHECKPOINT'    R4 83943000
*********************************************************************** 83944000
*                                                                     * 83945000
*        CHECKPOINT PROCESSOR STATUS IF THIS CPU OWNS THE CKPT-DATA   * 83946000
*                                                                     * 83947000
*********************************************************************** 83948000
         SPACE 1                                                     R4 83949000
PPPCKPT  NI    PPFLAG2,255-PPCIWAIT  RESET PCI-WAIT INDICATION       R4 83950000
         TM    PPFLAG2,PPCKPT      CKPT DATA NEED UPDATING...       R41 83951000
         BZR   PL                  RETURN IF NOT                    R41 83952000
         NI    PPFLAG2,255-PPCKPT  RESET CKPT-NEEDED FLAG            R4 83953000
         SPACE 1                                                    R41 83953500
PPPCKPT1 TM    PPFLAG2,PPCKPTA     CHECKPOINTS ALLOWED...           R41 83954000
         BZR   PL                  RETURN IF NOT                    R41 83954500
        $QSUSE TYPE=TEST           DOES THIS CPU OWN THE CKPT DATA   R4 83955000
         BZ    PPPCHUSE            BR IF YES                         R4 83956000
         SPACE 1                                                     R4 83957000
*********************************************************************** 83958000
*                                                                     * 83959000
*        FORCE CKPT IF $CKPTIME INTERVAL HAS EXPIRED                  * 83960000
*                                                                     * 83961000
*********************************************************************** 83962000
         SPACE 1                                                     R4 83963000
         STCK  PCER1               GET CURRENT TIME                  R4 83964000
         L     PW,PCER1            UPPER WORD ALMOST SECONDS         R4 83965000
         SL    PW,PCEFORM          IF NOT LONGER                     R4 83966000
         C     PW,$CKPTIME          THAN LIMIT,                      R4 83967000
         BLR   PL                    TRY AGAIN NEXT TIME -- RETURN   R4 83968000
        $QSUSE                     REQUEST ACCESS TO CHECKPOINT DATA R4 83969000
PPPCHUSE DS    0H                                                    R4 83970000
         STCK  PCEFORM             SAVE CKPT TIME FOR NEXT PASS      R4 83971000
         L     R1,PCKJOE           ADDRESS OF CKPT-JOE               R4 83972000
         USING JOEDSECT,R1         ACTIVATE JOE ADDRESSABILITY       R4 83973000
         L     PW,PPCKPTR          PICK-UP CKPT DATA POINTER         R4 83974000
         MVC   JOEJRCB(L'PCKPT),0(PW) UPDATE CKPT-JOE                R4 83975000
         DROP  R1                  SUSPEND JOE ADDRESSABILITY        R4 83976000
        $#CKPT JOE=0(,R1),TYPE=A   SCHEDULE CKPT-JOE FOR CHECKPOINT  R4 83977000
         BR    PL                   AND RETURN                       R4 83978000
         TITLE 'HASP PRINT/PUNCH SERVICE -- TRACK-CELL READ ROUTINES'   83979000
*********************************************************************** 83980000
*                                                                     * 83981000
*        PRDTCNXT - READ NEXT TRACK-CELL OR IOT                       * 83982000
*                                                                     * 83983000
*********************************************************************** 83984000
         SPACE 1                                                     R4 83985000
PRDTCNXT DS    0H                                                    R4 83986000
         TM    PPFLAG2,PPTCEL      TEST DESPOOLING METHOD            R4 83987000
         BZ    PRDNXTB             BRANCH IF SINGLE                  R4 83988000
         ICM   R15,15,PCENXTRK     TEST FOR ZERO CHAIN               R4 83989000
         BZ    SKIP340             BRANCH IF LAST BLOCK READ         R4 83990000
         TM    PPFLAG,PPDELSW+PPRDERR TEST FOR SUSPEND OR READ ERROR R4 83991000
         BZ    PRDTCEL             BRANCH IF NO                      R4 83992000
SKIP340  TM    PPFLAG,PPNEWS       RETURN IF END OF            @OZ25573 83993000
         BOR   PL                   JES2-NEWS DATA SET         @OZ25573 83993250
         L     R15,PCEIOTTR        GET IOT MTTR                @OZ25573 83993500
         B     PRDBUF              GO TO SINGLE BUFFER READ ROUTINE  R4 83994000
         SPACE 2                                                     R4 83995000
*********************************************************************** 83996000
*                                                                     * 83997000
*        PRDTCEL - READ ENTIRE TRACK-CELL                             * 83998000
*                                                                     * 83999000
*********************************************************************** 84000000
         SPACE 1                                                     R4 84001000
PRDTCEL  DS    0H                                                    R4 84002000
         TM    PPFLAG2,PPTCEL      TEST DESPOOLING METHOD            R4 84003000
         BZ    PRDBUF              BRANCH IF SINGLE                  R4 84004000
         ST    PL,PLSAVE           SAVE RETURN REGISTER              R4 84005000
         STM   PW,PBUF,PCEWA       SAVE WORKING REGISTERS            R4 84006000
         L     PBUF,PINIOB         ACTIVATE INPUT IOB ADDRESSABILITY R4 84007000
         ST    R15,PCESEEK         SAVE BUFFER MTTR                  R4 84008000
         STCM  R15,8,IOBXTENT      SET IOB EXTENT FIELD TO (M)       R4 84009000
         SLR   PL,PL               EXPAND $RECINCR                   R4 84010000
         IC    PL,$RECINCR          TO A FULLWORD                    R4 84011000
         SLR   R0,R0               COMPUTE                           R4 84012000
         SLR   R1,R1                SUB-                             R4 84013000
         IC    R1,PCESEEK+3          PERMUTATION                     R4 84014000
         DR    R0,PL                  NUMBER            R0 = 000P    R4 84015000
         LTR   R0,R0                   OF                            R4 84016000
         BNZ   SKIP350                  INITIAL                      R4 84017000
         IC    R0,$RECINCR               BUFFER                      R4 84018000
SKIP350  STC   R0,PCESEEK          REPLACE MTTR WITH PTTR            R4 84019000
         LR    R0,R15              R0 = MTTR            . MTTR       R4 84020000
         SRL   R15,24              COMPUTE ADDRESS      . 000M       R4 84021000
         MH    R15,=AL2(TEDSIZ)     OF TED FOR THIS     . M * TEDSIZ R4 84022000
         AL    R15,$TEDADDR          EXTENT             . TED ENTRY  R4 84023000
         USING TEDDSECT,R15        ACTIVATE TED ADDRESSABILITY       R4 84024000
         SPACE 1                                                     R4 84025000
         SLR   PW,PW               CLEAR TRACK-CELL BUFFER COUNT     R4 84026000
         IC    PW,PBUFSKIP         PICK UP RESTART POINT (IF ANY)    R4 84027000
         SPACE 1                                                     R4 84028000
         L     R14,PBUFSAVE        GET INPUT BUFFER-HEAD             R4 84029000
         L     R1,PINMTTRT         GET ADDR OF MTTR/BFR-ADDR TBL     R4 84030000
         EJECT                                                       R4 84031000
*                                                                    R4 84032000
*        BUILD TABLE OF MTTR'S AND CORRESPONDING BUFFER ADDRS        R4 84033000
*                                                                    R4 84034000
PRDINSRT ST    R0,0(,R1)           PLACE MTTR AND BUFFER-            R4 84035000
         ST    R14,4(,R1)           ADDRESS INTO THIS ENTRY          R4 84036000
         MVI   BUFECBCC-BUFDSECT(R14),0 RESET ANY ERROR CONDITIONS   R4 84037000
         LA    PW,1(,PW)           INCREMENT BUFFER COUNT            R4 84038000
         CLM   PW,1,$TCELSIZ       TEST FOR END OF TRACK-CELL        R4 84039000
         BNL   PRDTSORT            BR IF YES -- TABLE BUILT          R4 84040000
         ALR   R0,PL               R0 = MTTR + $RECINCR              R4 84041000
PRECHECK CLM   R0,1,TNRT+1         TEST RECORD NUMBER                R4 84042000
         BNH   PRDINCR             BRANCH IF STILL ON TRACK          R4 84043000
         CLC   PCESEEK(1),$RECINCR IF RECORD WAS LAST ON TRACK,      R4 84044000
         BNL   PRDTSORT             THEN HANDLE -STUNTED- TRACK-CELL R4 84045000
         IC    R0,PCESEEK          GET BEGINNING RECORD NUMBER,      R4 84046000
         AL    R0,=F'1'             UP IT BY 1, AND SAVE NEW         R4 84047000
         STC   R0,PCESEEK            BEGINNING RECORD NUMBER         R4 84048000
         B     PRECHECK            RE-CHECK NEW MTTR                 R4 84049000
PRDINCR  LA    R1,2*4(,R1)         INCR TO NEXT TABLE EnTRY, AND     R4 84050000
         L     R14,BUFCHAIN-BUFDSECT(,R14) STEP TO NEXT BUFFER       R4 84051000
         B     PRDINSRT            LOOP UNTIL TABLE BUILT            R4 84052000
         DROP  R15                 SUSPEND TED ADDRESSABILITY        R4 84053000
*                                                                    R4 84054000
*        MTTR/BUFAD TABLE COMPLETE -- SORT IT                        R4 84055000
*                                                                    R4 84056000
PRDTSORT DS    0H                                                    R4 84057000
         L     R14,PBUFSAVE        ADDRESS OF FIRST BUFFER IN CHAIN  R4 84058000
         SLR   R15,R15             OBTAIN RESTART                    R4 84059000
         IC    R15,PBUFSKIP         BUFFER OFFSET                    R4 84060000
         SLR   PW,R15              COMPUTE ACTUAL NUMBER OF BUFFERS  R4 84061000
         STC   R15,BUFCHOFF-BUFDSECT(,R14) SAVE OFFSET OF 1ST BUFFER R4 84062000
         STH   PW,BUFCHNCT-BUFDSECT(,R14) INSERT BUFFER CHAIN COUNT  R4 84063000
         MVI   PBUFSKIP,0          RESET RESTART BUFFER OFFSET       R4 84064000
         LR    R15,PW              DECREMENT BUFFER                  R4 84065000
         BCT   R15,SKIP360          COUNT BY 1 AND SKIP              R4 84066000
         B     PRDBCCWS              THE SORT IF ONLY 1              R4 84067000
         SPACE 1                                                     R4 84068000
SKIP360  L     R1,PINMTTRT         ADDRESS OF MTTR/BUFAD TABLE       R4 84069000
         LA    R14,8               SET BXLE INCREMENT VALUE          R4 84070000
         SLL   R15,3               SET BXLE LIMIT VALUE              R4 84071000
         ALR   R15,R1               = R1 + 8*(COUNT-1). (LAST ENTRY) R4 84072000
         SPACE 1                                                     R4 84073000
PRLOOP1  CLR   R1,R15              IF END OF TABLE,                  R4 84074000
         BE    PRDBCCWS             BYPASS LAST COMPARE              R4 84075000
PRLOOP1R LA    PL,8(,R1)           SET/RESET COMPARE POINTER         R4 84076000
PRLOOP2  CLC   3(1,R1),3(PL)       TEST CURRENT REC NBR WITH NEXT    R4 84077000
         BH    PRSWAP              BR IF HIGH                        R4 84078000
         BXLE  PL,R14,PRLOOP2      INCR AND LOOP FOR COMPARE         R4 84079000
         BXLE  R1,R14,PRLOOP1      INCR AND LOOP FOR ENTIRE TABLE    R4 84080000
         SPACE 1                                                     R4 84081000
PRSWAP   XC    0(8,R1),0(PL)       SWAP POSITIONS OF MTTRS           R4 84082000
         XC    0(8,PL),0(R1)        AND BUFFER ADDRESSES WHICH       R4 84083000
         XC    0(8,R1),0(PL)         WERE OUT OF ORDER               R4 84084000
         B     PRLOOP1R            RESTART CURRENT COMPARE           R4 84085000
         EJECT                                                       R4 84086000
*                                                                    R4 84087000
*        BUILD SET-SECTOR CCW AT IOBCCW1 (IF SUPPORTED)              R4 84088000
*                                                                    R4 84089000
*        BUILD INPUT CCW'S STARTING AT IOBCCW2                       R4 84090000
*                                                                    R4 84091000
PRDBCCWS DS    0H                                                    R4 84092000
         SLR   R15,R15             OBTAIN                            R4 84093000
         IC    R15,0(,R1)           POINTER                          R4 84094000
         MH    R15,=AL2(TEDSIZ)      TO                              R4 84095000
         AL    R15,$TEDADDR           TRACK-EXTENT-DATA              R4 84096000
         USING TEDDSECT,R15        ACTIVATE TED ADDRESSABILITY       R4 84097000
         MVC   PCEWC,TNTC          SAVE NUMBER OF TRACKS/CYLINDER    R4 84098000
         SPACE 1                                                     R4 84099000
PRDSECTR DS    0H                                                    R4 84100000
         L     R1,PINMTTRT         POINT TO MTTR/BUFAD TABLE         R4 84101000
         TM    $RUNOPTS,$RPS       TEST FOR RPS IN SYSTEM            R4 84102000
         BZ    PRDBUILD            BR IF NOT                         R4 84103000
         L     PL,TRPS             GET ADDRESS OF RPS TABLE          R4 84104000
         MVI   IOBCCW1,X'03'       SET FIRST CHANNEL COMMAND TO NOP  R4 84105000
         LTR   PL,PL               TEST IF EXTENT SUPPORTS RPS       R4 84106000
         BZ    PRDBUILD            BR IF NO -- SKIP RPS COMPUTATION  R4 84107000
         MVI   IOBCCW1,X'23'       SET CHANNEL COMMAND TO SET SECTOR R4 84108000
         SLR   R14,R14             CLEAR REGISTER FOR IC             R4 84109000
         IC    R14,3(,R1)          GET RECORD NUMBER                 R4 84110000
         IC    R14,0(R14,PL)       GET CORRESPONDING SECTOR NUMBER   R4 84111000
         STC   R14,IOBCCW1+5       PUT SECTOR NUMBER IN SET-SECTOR   R4 84112000
         DROP  R15                 SUSPEND TED ADDRESSABILITY        R4 84113000
         SPACE 1                                                     R4 84114000
PRDBUILD DS    0H                                                    R4 84115000
         LA    PL,IOBCCW2          POINT TO CCW-BUILD AREA           R4 84116000
         MVI   IOBCCW4,6           SET OP-CODE TO READ-DATA         R41 84116500
         OI    IOBCCW4+4,X'40'     SET COMMAND-CHAIN BIT IN SKELETON R4 84117000
         B     SKIP370             FIRST SET OF CCWS ARE BUILT       R4 84118000
         SPACE 1                                                     R4 84119000
PRDSKEL  LA    PL,3*8(,PL)         POINT TO NEXT CCW-BUILD AREA      R4 84120000
         MVC   0(3*8,PL),IOBCCW2       SRCH/TIC/READ CCW SKELETON    R4 84121000
SKIP370  L     R14,4(,R1)              ADDRESS OF DATA               R4 84122000
         LA    R14,BUFSTART-BUFDSECT(,R14) PORTION OF BUFFER         R4 84123000
         LA    R0,3(,R1)               POINT TO CCHHR                R4 84124000
         STCM   R0,7,0*8+1(PL)         SRCH TARGET   (CCHHR)         R4 84125000
         STCM   PL,7,1*8+1(PL)         TIC TARGET    (SRCH CCW)      R4 84126000
         STCM  R14,7,2*8+1(PL)         READ TARGET   (BUF ADDR)      R4 84127000
         SPACE 1                                                     R4 84128000
         L     R14,0(,R1)          R14 = MTTR                        R4 84129000
         LA    R14,0(,R14)         R14 = 0TTR                        R4 84130000
         SPACE 1                                                     R4 84131000
*                                    MBBCCHHR FROM MTTR CONVERSION   R4 84132000
         STC   R14,7(,R1)           -------R                         R4 84133000
         SRDL  R14,40               ISOLATE TT IN R14/R15            R4 84134000
         D     R14,PCEWC            COMPUTE CYLINDER AND HEAD        R4 84135000
         STCM  R14,3,5(R1)          -----HHR     HEAD                R4 84136000
         STCM  R15,3,3(R1)          ---CCHHR   CYLINDER              R4 84137000
         XC    0(3,R1),0(R1)        000CCHHR     MBB                 R4 84138000
         LA    R1,8(,R1)           POINT TO NEXT ENTRY               R4 84139000
         BCT   PW,PRDSKEL          LOOP FOR ENTIRE TABLE             R4 84140000
         EJECT                                                       R4 84141000
*                                                                    R4 84142000
*        ISSUE EXCP FOR THIS TRACK-CELL                              R4 84143000
*                                                                    R4 84144000
         NI    2*8+4(PL),255-X'40' ZERO COMMAND-CHAIN IN LAST CCW    R4 84145000
         ST    PBUF,PCEBUFAD       IOB ADDRESS TO DA DCT             R4 84146000
         LA    R0,IOBCCW1          RESET IOBSTART                    R4 84147000
         ST    R0,IOBSTART          FOR READ                         R4 84148000
         L     R1,PINMTTRT         SET IOBSEEK TO 1ST BUFFER'S       R4 84149000
         MVC   IOBSEEK(7),1(R1)     TRACK ADDRESS                    R4 84150000
         MVC   PCESEEK,$HASPDCB    SET UP DA DCT SO THAT $EXCP       R4 84151000
         MVI   PCEDEVTP,DCTINT      WILL NOT CONVERT PCESEEK         R4 84152000
         LA    R1,PCEDADCT         POINT TO IOB                      R4 84153000
        $EXCP  (R1)                ISSUE READ FOR TRACK-CELL         R4 84154000
         OI    PPFLAG2,PPRSW       INDICATE READ IN PROGRESS         R4 84155000
         IC    PL,PBFAVAIL         DECREMENT NUMBER                  R4 84156000
         BCTR  PL,0                 OF AVAILABLE                     R4 84157000
         STC   PL,PBFAVAIL           INPUT BUFFERS                   R4 84158000
         LM    PW,PBUF,PCEWA       RESTORE WORKING REGISTERS         R4 84159000
         L     PL,PLSAVE           RESTORE RETURN REGISTER           R4 84160000
         BR    PL                   AND RETURN                       R4 84161000
         EJECT                                                       R4 84162000
*********************************************************************** 84163000
*                                                                     * 84164000
*        PRDTCHK - WAIT FOR, AND CHECK COMPLETION OF TRACK-CELL READ  * 84165000
*                                                                     * 84166000
*********************************************************************** 84167000
         SPACE 1                                                     R4 84168000
PRDTCHK  DS    0H                                                    R4 84169000
         TM    PPFLAG2,PPTCEL      TEST DESPOOLING METHOD            R4 84170000
         BZ    PRDCHK              BR IF SINGLE                      R4 84171000
         ST    PL,PLSAVE           SAVE RETURN REGISTER              R4 84172000
         L     PBUF,PINIOB         ACTIVATE INPUT IOB ADDRESSABILITY R4 84173000
         L     R1,PBUFSAVE         SWAP                              R4 84174000
         MVC   PBUFSAVE,PBUFADDR    TRACK-CELL                       R4 84175000
         ST    R1,PBUFADDR           BUFFER POINTERS                 R4 84176000
         NI    IOBCCW4+4,255-X'40' TURN OFF COMMAND CHAINING BIT     R4 84177000
PRDTCIO  DS    0H                                                    R4 84178000
         TM    BUFECBCC,X'7F'      TEST I/O COMPLETION               R4 84179000
         BO    PRDTSCAN            BRANCH IF NO ERRORS               R4 84180000
         BNZ   PRDTCERR            BRANCH IF ERROR                   R4 84181000
        $WAIT  IO                  WAIT FOR CHANNEL END              R4 84182000
         B     PRDTCIO              AND CHECK AGAIN                  R4 84183000
         SPACE 1                                                     R4 84184000
PRDTCERR DS    0H                                                    R4 84185000
         L     PL,IOBCSW-1         OBTAIN POINTER                    R4 84186000
         LA    PL,0(,PL)            TO FAILING                       R4 84187000
         SH    PL,=H'8'              CHANNEL COMMAND                 R4 84188000
         LA    R15,3*8             ADDRESS OF                        R4 84189000
         MH    R15,BUFCHNCT-BUFDSECT(,R1) LAST POSSIBLE              R4 84190000
         LA    R15,IOBCCW1-BUFDSECT(R15,PBUF) READ COMMAND           R4 84191000
         CLM   PL,7,IOBSTART+1     VALIDATE CSW                      R4 84192000
         BL    SKIP380              CONTENTS AND                     R4 84193000
         CLR   PL,R15                USE IOBSTART                    R4 84194000
         BL    SKIP390                IF CSW IS                      R4 84195000
SKIP380  L     PL,IOBSTART             OUT OF RANGE                  R4 84196000
SKIP390  LA    R14,8               BXLE INCREMENT VALUE              R4 84197000
PRDTLOCR CLI   0(PL),6             LOCATE READ                       R4 84198000
         BE    SKIP400              CCW FOR BUFFER                   R4 84199000
         BXLE  PL,R14,PRDTLOCR       IN ERROR                        R4 84200000
         SPACE 1                                                     R4 84201000
SKIP400  L     R1,0(,PL)           EXTRACT BUFFER ADDRESS            R4 84202000
         SL    R1,=A(BUFSTART-BUFDSECT)  ADJUST TO START OF BUFFER   R4 84203000
         OI    BUFECBCC-BUFDSECT(R1),PPRDERR SET READ ERROR FLAG     R4 84204000
         CLR   PL,R15              WAS ERROR BUFFER LAST IN CHAIN    R4 84205000
         BNE   *+6                 BR IF NOT                         R4 84206000
         SLR   PL,PL                ELSE CLEAR RESTART ADDRESS       R4 84207000
        $IOERROR (PBUF)            RECORD THE BAD NEWS               R4 84208000
         LTR   PL,PL               TEST FOR POSSIBLE RESTART         R4 84209000
         BZ    PRDTSCAN            BR IF NO -- ALL BUFFERS READ      R4 84210000
         LA    PL,8(,PL)           GET RESTART CCW ADDRESS           R4 84211000
         ST    PL,IOBSTART          AND PLACE IN IOB                 R4 84212000
         L     R1,0(,PL)           GET POINTER TO SEARCH TARGET      R4 84213000
         MVC   IOBSEEK+2(5),0(R1)  MOVE CCHHR INTO IOB               R4 84214000
         LA    R1,PCEDADCT         PICK UP DA DCT ADDRESS            R4 84215000
        $EXCP  (R1)                RESTART CHANNEL PROGRAM           R4 84216000
         L     R1,PBUFADDR         PICK UP BUFFER CHAIN HEAD ADDRESS R4 84217000
         B     PRDTCIO              AND GO CHECK ON I/O              R4 84218000
         SPACE 3                                                     R4 84219000
*                                                                    R4 84220000
*        ALL BUFFERS HAVE BEEN READ (OR SKIPPED)                     R4 84221000
*                                                                    R4 84222000
*        VALIDATE CHAIN AND OBTAIN MTTR OF NEXT TRACK-CELL           R4 84223000
*                                                                    R4 84224000
PRDTSCAN DS    0H                                                    R4 84225000
         L     PBUF,PBUFADDR       ADDRESSABILITY ON 1ST BUFFER      R4 84226000
         LH    R15,BUFCHNCT        NUMBER OF BUFFERS IN THIS CHAIN   R4 84227000
         LA    PBUF,PBUFADDR-(BUFCHAIN-BUFDSECT) INITIAL POSITIONING R4 84228000
PRDTSCN1 L     PBUF,BUFCHAIN       ADDRESSABILITY ON NEXT BUFFER     R4 84229000
         CLC   HDBKEY,PPKEY        DO DATA AND JOB KEYS MATCH        R4 84230000
         BNE   PRDTRDER            BR IF NOT                         R4 84231000
         TM    BUFECBCC,PPRDERR    DID READ FOR THIS BUFFER FAIL     R4 84232000
         BO    PRDTUPDT            BR IF YES                         R4 84233000
         OC    HDBNXTRK,HDBNXTRK   TEST FOR LAST BUFFER IN DATA SET  R4 84234000
         BZ    PRDTUPDT            BR IF YES                         R4 84235000
         BCT   R15,PRDTSCN1        CHECK ALL BUFFERS IN CHAIN        R4 84236000
         MVC   PCENXTRK,HDBNXTRK   MTTR OF NEXT TRACK-CELL           R4 84237000
         L     PBUF,PBUFADDR       ESTAB. DATA BUFFER ADDRESSABILITY R4 84238000
         LH    R1,BUFCHNCT         OBTAIN BUFFER COUNT               R4 84239000
         B     PRDTCRET             AND RETURN                       R4 84240000
         SPACE 1                                                     R4 84241000
*                                                                    R4 84242000
*        BUFFER IN CHAIN IS NOT VALID -- UPDATE CHAIN COUNT          R4 84243000
*                                                                    R4 84244000
PRDTRDER OI    BUFECBCC,PPRDERR    INDICATE BUFFER VALIDITY ERROR    R4 84245000
PRDTUPDT XC    PCENXTRK,PCENXTRK   FORCE END OF                      R4 84246000
         XC    HDBNXTRK,HDBNXTRK    BUFFER CHAIN                     R4 84247000
         L     PBUF,PBUFADDR       ESTAB. DATA BUFFER ADDRESSABILITY R4 84248000
         LH    R1,BUFCHNCT         COUNT OF BUFFERS IN CHAIN         R4 84249000
         BCTR  R15,0               COMPUTE NUMBER OF                 R4 84250000
         SLR   R1,R15               VALID BUFFERS IN CHAIN           R4 84251000
         SPACE 1                                                     R4 84252000
PRDTCRET IC    R15,BUFCHOFF        UPDATE BUFFER CHAIN COUNT         R4 84253000
         ALR   R1,R15               TO REFLECT RESTART               R4 84254000
         STH   R1,BUFCHNCT           OFFSET                          R4 84255000
         STC   R15,PCEJBOFF        INIT TRACK-CELL BUFFER OFFSET     R4 84256000
         NI    PPFLAG2,255-PPRSW   INDICATE READ COMPLETED           R4 84257000
         L     PL,PLSAVE           RESTORE RETURN REGISTER           R4 84258000
         BR    PL                   AND RETURN TO CALLER             R4 84259000
         TITLE 'HASP PRINT/PUNCH SERVICE -- SINGLE DATA BUFFER READ ROUC84260000
               TINES'                                                R4 84261000
*********************************************************************** 84262000
*                                                                     * 84263000
*        SINGLE BUFFER READ ROUTINES -- PRDNXTB -- PRDBUF -- PRDCHK   * 84264000
*                                                                     * 84265000
*********************************************************************** 84266000
         SPACE 1                                                     R4 84267000
*                                                                       84268000
*        READ NEXT DATA BLOCK - IOT IF CHAIN TRACK IS ZERO              84269000
*                                                                       84270000
PRDNXTB  ICM   R15,15,HDBNXTRK     IS CHAIN TRACK ZERO                  84271000
         BZ    *+12                BRANCH IF LAST BLOCK                 84272000
         TM    PPFLAG,PPDELSW+PPRDERR  SUSPEND OR READ ERROR            84273000
         BZ    PRDBUF              BRANCH IF NO                         84274000
         TM    PPFLAG,PPNEWS       RETURN IF END OF                 R41 84274200
         BOR   PL                   JES2-NEWS DATA SET              R41 84274400
         L     R15,PCEIOTTR        GET IOT TRACK ADDRESS                84275000
         DROP  PBUF                KILL BUFFER ADDRESSABILITY           84276000
*                                                                       84277000
*        READ DATA BUFFER FROM SPOOL PACK                               84278000
*                                                                       84279000
PRDBUF   L     R1,PINIOB           PICK UP INPUT IOB ADDRESS         R4 84280000
         L     LINK,PBUFSAVE       PICK UP DATA BUFFER ADDRESS       R4 84281000
         ST    R1,PCEBUFAD         IOB ADDRESS TO DA DCT             R4 84282000
         USING BUFDSECT,R1         ESTABLISH BUFFER ADDRESSABILITY      84283000
         LA    LINK,BUFSTART-BUFDSECT(,LINK) START OF DATA AREA      R4 84284000
         STCM  LINK,7,IOBCCW4+1    PLACE INTO READ CCW               R4 84285000
         LA    LINK,IOBSEEK+2      PLACE SEEK TARGET ADDRESS         R4 84286000
         STCM  LINK,7,IOBCCW2+1     INTO SEARCH CCW                  R4 84287000
         LA    R0,IOBCCW1          RESET IOBSTART                       84288000
         ST    R0,IOBSTART         FOR READ                             84289000
         MVI   PCEDEVTP,PCEDARD    SET DA DCT TO READ                R4 84290000
         LA    R1,PCEDADCT         SETUP DCT ADDRESS FOR $EXCP          84291000
         ST    R15,PCESEEK         STORE TRACK ADDRESS IN DCT           84292000
        $EXCP  (R1)                INITIATE READ                        84293000
         OI    PPFLAG2,PPRSW       INDICATE READ IN PROGRESS         R4 84294000
         IC    R1,PBFAVAIL         DECREMENT NUMBER                  R4 84295000
         BCTR  R1,0                 OF AVAILABLE                     R4 84296000
         STC   R1,PBFAVAIL           INPUT BUFFERS                   R4 84297000
         BR    PL                  RETURN                               84298000
               EJECT                                                 R4 84299000
*                                                                       84300000
*        WAIT/CHECK SPOOL READ COMPLETION                            R4 84301000
*                                                                       84302000
PRDCHK   DS    0H                  *                                    84303000
         L     PBUF,PBUFSAVE       SWAP PRIMARY                      R4 84304000
         MVC   PBUFSAVE,PBUFADDR    AND SECONDARY                    R4 84305000
         ST    PBUF,PBUFADDR         BUFFER POINTERS                 R4 84306000
         L     R1,PINIOB           PICK UP INPUT IOB ADDRESSABILITY  R4 84307000
PRDRECHK TM    BUFECBCC,X'7F'      TEST FOR I/O COMPLETE                84308000
         BO    PRDRETRN            BRANCH IF READ SUCCESSFUL         R4 84309000
         BNZ   PRDERROR            BRANCH IF ERROR DETECTED             84310000
        $WAIT  IO                  WAIT FOR I/O POST                    84311000
         B     PRDRECHK            GO BACK AND TRY AGAIN                84312000
PRDERROR DS    0H                                                       84313000
         OI    PPFLAG,PPRDERR      READ ERROR, SET FLAG                 84314000
        $IOERROR PINIOB            LOG I/O ERROR                     R4 84315000
         SPACE 1                                                     R4 84316000
PRDRETRN DS    0H                                                    R4 84317000
         NI    PPFLAG2,255-PPRSW   INDICATE READ COMPLETED           R4 84318000
         BR    PL                  AND RETURN                           84319000
         DROP  R1                  KILL LOCAL BUFFER ADDRESSABILITY  R4 84320000
         USING BUFDSECT,PBUF       ESTAB. DATA BUFFER ADDRESSABILITY R4 84321000
         TITLE 'HASP PRINT/PUNCH SERVICE -- PROCESSOR TERMINATION'      84322000
*********************************************************************** 84323000
*                                                                     * 84324000
*        CHECK TERMINATION REASON - PUNCH BLANK TO FLUSH PUNCH        * 84325000
*                                                                     * 84326000
*********************************************************************** 84327000
         SPACE 1                                                     R4 84328000
PPDONE   DS    0H                                                       84329000
         NI    PPFLAG,255-PPDELSW  RESET DELETE FLAG                    84330000
         TM    PPFLAG,PRDELSW      IS THIS A NORMAL TERMINATION         84331000
         BZ    PRTRAILR            BRANCH IF YES                        84332000
         TM    PCEID,PCEPRSID      IS THIS A PRINT PROCESSOR            84333000
         BO    PRABEOJ             BRANCH IF YES                        84334000
         LM    PC1,PC2,PUCCWBL     LOAD BLANK CARD CCW                  84335000
         BAL   PL,PPPUT            ADD CCW TO CHAIN                     84336000
         BAL   PL,PPWRITE           INITIATE WRITE                      84337000
         BAL   PL,PPCHECK            AND CHECK                          84338000
         SPACE 1                                                     R4 84339000
*********************************************************************** 84340000
*                                                                     * 84341000
*        PROVIDE REASON FOR TERMINATION ON PROGRAMMERS LISTING        * 84342000
*                                                                     * 84343000
*********************************************************************** 84344000
         SPACE 1                                                     R4 84345000
PRABEOJ  DS    0H                  *                                    84346000
        $MID   170                                                   R4 84347000
         LA    R1,=C'$HASP170 '    MESSAGE ID                        R4 84348000
         TM    PDCTFLAG,DCTRSTRT+DCTBKSP $I - (INTERRUPT)               84349000
         BNO   PGMRST              BRANCH IF NO                         84350000
         LA    R15,=C' INTERRUPTED'  MESSAGE TEXT                    R4 84351000
         OI    PSMFDCI,SMFINTRP    SET SMF FLAG                         84352000
         B     PGMRMSG             GO WRITE MESSAGE                     84353000
         SPACE 1                                                     R4 84354000
PGMRST   DS    0H                                                       84355000
         TM    PDCTFLAG,DCTRSTRT   $E - (RESTART)                       84356000
         BNO   PGMDEL              BRANCH IF NO                         84357000
         LA    R15,=C' RESTARTED  '  MESSAGE TEXT                    R4 84358000
         OI    PSMFDCI,SMFRESTR    SET SMF FLAG                         84359000
         B     PGMRMSG             GO WRITE MESSAGE                     84360000
         SPACE 1                                                     R4 84361000
PGMDEL   DS    0H                                                       84362000
         TM    PDCTFLAG,DCTDELET   $C - (CANCEL)                        84363000
         BNO   PGMTRM              BRANCH IF NO                         84364000
         LA    R15,=C' DELETED    '  MESSAGE TEXT                    R4 84365000
         OI    PSMFDCI,SMFOPSTP    SET SMF FLAG                         84366000
         B     PGMRMSG             GO WRITE MESSAGE                     84367000
         SPACE 1                                                     R4 84368000
PGMTRM   DS    0H                                                       84369000
        $MID   185                                                   R4 84370000
         LA    R1,=C'$HASP185 '    MESSAGE ID                        R4 84371000
         LA    R15,=C' TERMINATED '  MESSAGE TEXT                    R4 84372000
PGMRMSG  DS    0H                                                       84373000
         BAL   PL,PRMSG            ADD MSG TO OUTPUT, ISSUE WTO      R4 84374000
         EJECT                                                          84375000
*********************************************************************** 84376000
*                                                                     * 84377000
*        SETUP DEVICE BY CHAR-JOE AND PRINT TRAILER PAGE              * 84378000
*                                                                     * 84379000
*********************************************************************** 84380000
         SPACE 1                                                     R4 84381000
         USING JOEDSECT,R1         PROVIDE CHAR-JOE ADDRESSABILITY   R4 84382000
         SPACE 1                                                     R4 84383000
PRTRAILR DS    0H                                                       84384000
         L     R15,=A(PPSMF6)      GENERATE FINAL              @OZ32776 84384500
         BALR  PL,R15               TYPE-6 SMF RECORD          @OZ32776 84384600
         L     R1,PCHJOE           ADDRESS CHAR-JOE                     84385000
         CLI   PDEVTYPE+3,UCB3800  TEST FOR 3800 PRINTER             R4 84386000
         BNE   PTSETUP             BR IF NOT                         R4 84387000
         MVC   SPFORMS(2*4),JOEFORM USE JOE FORMS AND FCB ID         R4 84388000
         MVC   SPFLASH,JOEFLASH    SET FLASH (SEP WON'T FLASH)      R41 84393000
         MVC   SPMODF,=C'****'     RESET COPY MODIFICATION           R4 84394000
         MVI   SPCOPYN,1           FORCE ONLY 1 COPY OF TRAILER      R4 84395000
         MVI   SPCOPYS,1           INDICATE STARTING COPY NUMBER     R4 84396000
         MVI   SPFLAG,SPSEP        INIT FLAGS FOR SEP PAGE          R41 84397000
         TM    JOECFLAG,$JOEBRST   SET FOR                           R4 84398000
         BZ    PTRSETUP             NOBURST OR                      R41 84399000
         OI    SPFLAG,SPBURST        BURST                           R4 84400000
         B     PTRSETUP            ENTER COMMON SETUP                R4 84402000
         SPACE 1                                                     R4 84403000
PTSETUP  LA    R1,JOEFORM          ADDRESS IMPACT PRINTER SETUP DATA R4 84404000
         MVI   PRINDEX,X'81'       RESET 3211 INDEX TO 1                84405000
         SPACE 1                                                     R4 84406000
PTRSETUP L     R15,=A(PRPUDSV)     CALL DEVICE                       R4 84407000
         BALR  PL,R15               SETUP VERIFICATION               R4 84408000
         SPACE 1                                                     R4 84409000
         DROP  R1                  SUSPEND JOE ADDRESSABILITY        R4 84410000
         SPACE 1                                                     R4 84411000
*********************************************************************** 84412000
*                                                                     * 84413000
*        PRODUCE PRINT TRAILER PAGE                                   * 84414000
*                                                                     * 84415000
*********************************************************************** 84416000
         SPACE 1                                                     R4 84417000
         USING DCTDSECT,R1         PROVIDE DCT ADDRESSABILITY        R4 84418000
         SPACE 1                                                     R4 84419000
         TM    PCEID,PCEPUSID      IS THIS A PUNCH PROCESSOR            84420000
         BO    PSPINIOT            BRANCH TO CLEANUP IF YES    @OZ25079 84421000
         L     R1,PCEDCT           ADDRESS PRINT DCT           @OZ32566 84422000
         MVI   DCTACPTN,0          DISABLE COMPACTION FOR SEP       R41 84422500
         TM    DCTPPSW,DCTPPSWS    SUPPRESS SEPARATOR PAGE...        R4 84423000
         BO    PEDGMARK            BR IF YES                        R41 84424000
         LA    R1,=CL5' END'       TRAILER PAGE ID                      84425000
         BAL   PL,PRINTID          PRINT TRAILER PAGE                   84426000
         EJECT                                                       R4 84427000
*********************************************************************** 84428000
*                                                                     * 84429000
*        ADD 3800 EDGE-MARK CCW IF REQUESTED BY DEVICE                * 84430000
*                                                                     * 84431000
*********************************************************************** 84432000
         SPACE 1                                                     R4 84433000
PEDGMARK CLI   PDEVTYPE+3,UCB3800  TEST FOR 3800 PRINTER            R41 84434000
         BNE   PSPINIOT            BRANCH IF NOT               @OZ25079 84435000
         L     R1,PCEDCT           ADDRESS PRINTER DCT         @OZ32566 84436000
         TM    DCTPPSW2,DCTNIMRK   TEST FOR EDGE-MARKING             R4 84437000
         BZ    SKIP420             BR IF NO                          R4 84438000
         LM    PC1,PC2,PCCWEM      LOAD EDGE-MARK CCW                R4 84439000
         BAL   PL,PPPUT            PLACE ON CHAIN                    R4 84440000
         SPACE 1                                                     R4 84441000
*********************************************************************** 84442000
*                                                                     * 84443000
*        ADD 3800 CLEAR-PRINT CCW TO FLUSH OUTPUT                     * 84444000
*                                                                     * 84445000
*********************************************************************** 84446000
         SPACE 1                                                     R4 84447000
SKIP420  LM    PC1,PC2,PCCWCP      LOAD CLEAR PRINT CCW              R4 84448000
         BAL   PL,PPPUT            PLACE ON CHAIN                    R4 84449000
         BAL   PL,PPWRITE          INITIATE OUTPUT                   R4 84450000
         BAL   PL,PPCHECK          WAIT FOR OUTPUT                   R4 84451000
         B     PSPINIOT            CLEANUP                     @OZ25079 84451500
         SPACE 1                                                     R4 84452000
         DROP  R1                  SUSPEND DCT ADDRESSABILITY        R4 84453000
         EJECT                                                       R4 84454000
*********************************************************************** 84455000
*                                                                     * 84456000
*        CALL PPSMF6 TO BUILD AND WRITE FINAL TYPE 6 SMF RECORD       * 84457000
*                                                                     * 84458000
*********************************************************************** 84459000
         SPACE 1                                                     R4 84460000
PPABORT  L     BASE2,=A(HASPPPI1)  ENSURE BASE2 RESTORED            R41 84461000
         L     R15,=A(PPSMF6)      GENERATE TYPE-6             @OZ32776 84462000
         BALR  PL,R15               SMF RECORD                 @OZ32776 84462500
         SPACE 2                                                     R4 84463000
*********************************************************************** 84464000
*                                                                     * 84465000
*        PURGE SPIN DATA SETS TRACKS FROM THE SPOOL PACKS             * 84466000
*                                                                     * 84467000
*********************************************************************** 84468000
         SPACE 1                                                     R4 84469000
         USING DCTDSECT,R1         PROVIDE DCT ADDRESSABILITY        R4 84470000
         SPACE 1                                                     R4 84471000
PSPINIOT DS    0H                                                       84472000
         TM    PPFLAG,PPDALOC      IS THIS AN ALLOCATION IOT            84473000
         BZ    PRPUEXIT            BRANCH IF NO                         84474000
         TM    PDCTFLAG,DCTRSTRT+DCTBKSP TERMINATION FOR $I OR $E       84475000
         BNZ   PRPUEXIT            BRANCH IF YES - DO NOT $PURGE        84476000
         L     R1,PCEDCT           LOAD PRINT/PUNCH DCT BASE   @OZ32566 84477000
         CLI   DCTBUFCT,0          IS UR I/O HUNG                       84478000
         BNE   PRPUEXIT            BRANCH IF YES - CAN'T PURGE          84479000
         L     R15,PCEIOTTR        GET IOT TRACK ADDRESS                84480000
         BAL   PL,PRDBUF           READ IOT INTO A BUFFER               84481000
         BAL   PL,PRDCHK           CHECK READ                           84482000
         LR    JCT,PBUF            ADDRESS IOT IN BUFFER                84483000
         USING IOTDSECT,JCT        ACTIVATE IOT ADDRESSABILITY          84484000
         TM    PPFLAG,PPRDERR      TEST FOR I/O ERROR ON READ           84485000
         BO    PSPNIOTR            BR IF YES                         R4 84486000
         CLC   IOTJBKEY,PPJOBKEY   IS THE IOT VALID                     84487000
         BE    PSPNIOT1            BRANCH IF YES                        84488000
PSPNIOTR $DISTERR                  INDICATE CONTROL BLOCK ERROR         84489000
         OI    PPFLAG,PPJCTIOT+PRDELSW SET REASON FOR TERMINATION       84490000
         B     PRPUEXIT            SKIP REMAINDER OF IOT PURGE          84491000
         EJECT                                                       R4 84492000
*********************************************************************** 84493000
*                                                                     * 84494000
*        RESET SPIN IOT ALLOCATION BIT AND PURGE DATA SET TRACKS      * 84495000
*                                                                     * 84496000
*********************************************************************** 84497000
         SPACE 1                                                     R4 84498000
PSPNIOT1 DS    0H                                                       84499000
         L     PL,$IOTPDDB         POINT TO                          R4 84500000
         ALR   PL,JCT               1ST (AND ONLY) PDDB IN IOT       R4 84501000
         USING PDBDSECT,PL         ACTIVATE PDDB ADDRESSABILITY         84502000
         NI    PDBFLAG1,255-PDB1PSO RESET PSO BIT FOR WARM START        84503000
         DROP  PL                  SUSPEND PDDB ADDRESSABILITY          84504000
         TM    IOTFLAG1,IOT1ALOC   ALLOCATION IOT                    R4 84505000
         BZ    PSPNIOT4            NO, SKIP $PURGE                   R4 84506000
         NI    IOTFLAG1,255-IOT1ALOC RESET ALLOCATION IOT BIT        R4 84507000
         SPACE 1                                                     R4 84508000
        $PURGE IOTTGMAP            PURGE TRACKS USED FOR DATASET        84509000
PSPNIOT4 MVC   PCESEEK,IOTTRACK    SET IOT TRACK INTO DA DCT         R4 84510000
         MVI   PCEDEVTP,PCEDAWR    SET DA DCT TO WRITE                  84511000
         ST    JCT,PCEBUFAD        SET ADDRESS OF IOT BUFFER            84512000
         LA    R1,PCEDADCT         ADDRESS DA DCT                       84513000
         L     PL,BUFCHAIN         SAVE BUFCHAIN VALUE               R4 84514000
        $EXCP  (R1),WAIT=YES       WRITE IOT TO SPOOL                R4 84515000
         ST    PL,BUFCHAIN         REPLACE BUFCHAIN VALUE            R4 84516000
         BO    PRPUEXIT            BR IF I/O GOOD                    R4 84517000
         SPACE 1                                                     R4 84518000
PSPNIOTW $DISTERR                  INDICATE CONTROL BLOCK ERROR         84519000
         EJECT                                                          84520000
*********************************************************************** 84521000
*                                                                     * 84522000
*        RELEASE JCT AND DISPOSE OF JOB OUTPUT ELEMENT                * 84523000
*                                                                     * 84524000
*********************************************************************** 84525000
         SPACE 1                                                     R4 84526000
PRPUEXIT L     JCT,PJCTBUF         ADDRESS JCT BUFFER                R4 84527000
        $#JCT  FREE                RELEASE JCT BUFFER                   84528000
         SPACE 1                                                     R4 84529000
*********************************************************************** 84530000
*                                                                     * 84531000
*        IF THERE IS A $N STACKED - REQUEUE JOE (NO CKPT DATA)        * 84532000
*                                                                     * 84533000
*********************************************************************** 84534000
         SPACE 1                                                     R4 84535000
PJOEOPN  TM    PDCTFLAG,DCTRPT     $N - (REPEAT)                     R4 84536000
         BZ    PJOEOPI             BRANCH IF NO                         84537000
PJOEPUT $#PUT  WORK=PWKJOE         RETURN TO JOT - NO CHECKPOINT     R4 84538000
         B     PPNOJOE             BRANCH TO CONTINUE                R4 84539000
         SPACE 1                                                     R4 84540000
*********************************************************************** 84541000
*                                                                     * 84542000
*        TERMINATION FOR $I - REQUEUE JOE (CKPT DATA)                 * 84543000
*                                                                     * 84544000
*********************************************************************** 84545000
         SPACE 1                                                     R4 84546000
PJOEOPI  TM    PDCTFLAG,DCTRSTRT+DCTBKSP  $I - (INTERRUPT)           R4 84547000
         BNO   PJOEOPE             BRANCH IF NO                         84548000
PJPUTI  $#PUT  WORK=PWKJOE,PRC=PCKJOE  RETURN TO JOT WITH CKPT       R4 84554000
         B     PPNOJOE             BRANCH TO CONTINUE                R4 84555000
         EJECT                                                       R4 84556000
*********************************************************************** 84557000
*                                                                     * 84558000
*        TERMINATION FOR $E - REQUEUE JOE (NO CKPT DATA)              * 84559000
*                                                                     * 84560000
*********************************************************************** 84561000
         SPACE 1                                                     R4 84562000
PJOEOPE  TM    PDCTFLAG,DCTRSTRT   $E - (RESTART)                    R4 84563000
         BO    PJOEPUT             BRANCH IF YES                     R4 84564000
         SPACE 1                                                     R4 84565000
*********************************************************************** 84566000
*                                                                     * 84567000
*        TERMINATION FOR $C - DELETE JOE                              * 84568000
*                                                                     * 84569000
*        TERMINATION FOR IO ERROR READING DATA OR CONTROL BLOCKS      * 84570000
*                                                                     * 84571000
*********************************************************************** 84572000
         SPACE 1                                                     R4 84573000
PJOEIOE $#REM  WORK=PWKJOE         REMOVE WORK-JOE FROM JOT          R4 84574000
         SPACE 1                                                     R4 84575000
PPNOJOE  MVC   PCEJQE,$ZEROS       CLEAR JQE ADDRESS           @OZ32566 84576000
         TM    PCEID,PCELCLID      TEST FOR LOCAL DEVICE             R4 84577000
         BO    PAUSCHK             BRANCH IF YES - CHECK FOR PAUSE      84578000
         L     R1,PCEDCT           ADDRESS REMOTE DCT          @OZ32566 84579000
         USING DCTDSECT,R1         ACTIVATE DCT ADDRESSABILITY          84580000
         OI    DCTSTAT,DCTHOLD     SET DEVICE UNAVAILABLE           R41 84580100
         TM    PDCTFLAG,DCTDELET+DCTRSTRT CHECK FOR $C OR $E        R41 84580200
         BZ    PPCLOSE             BR IF NO, DO NORMAL CLOSE        R41 84580300
         TM    PDCTFLAG,DCTRSTRT+DCTBKSP  CHECK FOR $I              R41 84580400
         BNO   PPNCLOSE            BR IF NO, USE NEGATIVE CLOSE     R41 84580500
PPCLOSE  $EXTP CLOSE,(R1)          CLOSE REMOTE DEVICE              R41 84582000
         B     PFRESRCE            GO FREE PRPU RESOURCES            R4 84584000
         SPACE 2                                                    R41 84584100
PPNCLOSE $EXTP NCLOSE,(R1)         NEGATIVE CLOSE REMOTE DEVICE     R41 84584200
         B     PFRESRCE            GO FREE PRPU RESOURCES           R41 84584300
         SPACE 1                                                    R41 84584400
         DROP  R1                  SUSPEND DCT ADDRESSABILITY       R41 84584500
         EJECT                                                       R4 84585000
*********************************************************************** 84586000
*                                                                     * 84587000
*        IF $T DEVICE,P=YES - ISSUE WTO AND PAUSE DEVICE              * 84588000
*                                                                     * 84589000
*********************************************************************** 84590000
         SPACE 1                                                     R4 84591000
PAUSCHK  L     R1,PCEDCT           ADDRESS PRINT/PUNCH DCT     @OZ32566 84592000
         USING DCTDSECT,R1         ACTIVATE DCT ADDRESSABILITY          84593000
         TM    DCTPPFL,DCTPAUSE    OPERATOR REQUESTED PAUSE             84594000
         BZ    PFRESRCE            BR IF NO -- GO FREE RESOURCES     R4 84595000
         OI    DCTSTAT,DCTPAUSE    PAUSE THE DEVICE                  R4 84596000
        $MID   175                                                   R4 84597000
         MVC   PMESSAGE(2),=X'175F' MESSAGE ID                          84598000
         MVC   PMESSAGE+2(8),DCTDEVN DEVICE NAME                        84599000
         DROP  R1                  SUSPEND DCT ADDRESSABILITY           84600000
         MVC   PMESSAGE+10(7),=C' PAUSED' ACTION                        84601000
        $WTO   PMESSAGE,17,        INFORM OPERATOR                     C84602000
               ROUTE=$LOG+$UR,CLASS=$NORMAL,PRI=$ST,JOB=NO              84603000
         EJECT                                                       R4 84604000
*********************************************************************** 84605000
*                                                                     * 84606000
*        *** FREE PRINT/PUNCH CONTROL BLOCKS AND DATA BUFFERS  **     * 84607000
*                                                                     * 84608000
*        IF TRACK-CELL DE-SPOOLING -- FREE INPUT IOB BUFFER           * 84609000
*                                                                     * 84610000
*********************************************************************** 84611000
         SPACE 1                                                     R4 84612000
PFRESRCE DS    0H                                                    R4 84613000
         TM    PPFLAG2,PPRSW       IF A READ IS                      R4 84614000
         BZ    SKIP430              OUTSTANDING, CLEAR               R4 84615000
         BAL   PL,PRDTCHK            ALL INPUT I/O                   R4 84616000
         SPACE 1                                                     R4 84617000
SKIP430  TM    PPFLAG2,PPTCEL      FREE IOB BUFFER                   R4 84618000
         BZ    PFROUT               USED FOR DE-SPOOLING             R4 84619000
        $FREEBUF PINIOB              TRACK-CELL'S                    R4 84620000
         SPACE 1                                                     R4 84621000
*********************************************************************** 84622000
*                                                                     * 84623000
*        FOR LOCAL DEVICES -- FREE OUTPUT IOB BUFFER                  * 84624000
*                                                                     * 84625000
*********************************************************************** 84626000
         SPACE 1                                                     R4 84627000
         USING DCTDSECT,R1         PROVIDE DCT ADDRESSABILITY        R4 84628000
         SPACE 1                                                     R4 84629000
PFROUT   TM    PCEID,PCERJEID      TEST PROCESSOR TYPE               R4 84630000
         BO    PFRBUFS             BR IF REMOTE                      R4 84631000
         L     R1,PCEDCT           ADDRESS PRINT/PUNCH DCT     @OZ32566 84632000
         CLI   DCTBUFCT,0          HAS ALL OUTPUT I/O COMPLETED...   R4 84633000
         BE    PFROIOB             BR IF YES                         R4 84634000
        $WAIT  IO                  ELSE, WAIT FOR I/O TO COMPLETE    R4 84635000
         B     PFROUT              AND TRY AGAIN                     R4 84636000
         SPACE 1                                                     R4 84637000
         DROP  R1                  SUSPEND DCT ADDRESSABILITY        R4 84638000
         SPACE 1                                                     R4 84639000
PFROIOB $FREEBUF POUTIOB           FREE OUTPUT IOB BUFFER            R4 84640000
         EJECT                                                       R4 84641000
*********************************************************************** 84642000
*                                                                     * 84643000
*        FREE ALL DATA BUFFERS                                        * 84644000
*                                                                     * 84645000
*********************************************************************** 84646000
         SPACE 1                                                     R4 84647000
PFRBUFS  L     PC1,PBUFADDR        OBTAIN PRIMARY AND                R4 84648000
         L     PC2,PBUFSAVE         SECONDARY DATA BUFFER ADDRESSES  R4 84649000
         LTR   PC1,PC1             ANY BUFFERS PRESENT...            R4 84650000
         BZ    PFREUNIT            BR IF NOT                         R4 84651000
         TM    PPFLAG2,PPTCEL      TEST DE-SPOOLING METHOD           R4 84652000
         BO    PFRBUF1             BR IF TRACK-CELL                  R4 84653000
         XC    BUFCHAIN-BUFDSECT(,PC1),BUFCHAIN-BUFDSECT(PC1) CLEAR  R4 84654000
         XC    BUFCHAIN-BUFDSECT(,PC2),BUFCHAIN-BUFDSECT(PC2)  CHAIN R4 84655000
PFRBUF1  CLI   PBUFOPT,1           TEST FOR SINGLE BUFFERING         R4 84656000
         BE    PFRBUF2             BR IF YES                         R4 84657000
        $FREEBUF (PC1),MULTIPLE    FREE PRIMARY DATA BUFFER(S)       R4 84658000
         SPACE 1                                                     R4 84659000
PFRBUF2 $FREEBUF (PC2),MULTIPLE    FREE SECONDARY DATA BUFFER(S)     R4 84660000
         SPACE 3                                                     R4 84661000
*********************************************************************** 84662000
*                                                                     * 84663000
*        FREE PRINT/PUNCH/REMOTE DCT                                  * 84664000
*                                                                     * 84665000
*********************************************************************** 84666000
         SPACE 1                                                     R4 84667000
PFREUNIT $FREUNIT PCEDCT           FREE PRINT/PUNCH DCT        @OZ32566 84668000
         EJECT                                                       R4 84669000
*********************************************************************** 84670000
*                                                                     * 84671000
*        PAGE-FREE LOCAL PRINT/PUNCH DATA-EXTENT-BLOCK (DEB)          * 84672000
*                                                                     * 84673000
*********************************************************************** 84674000
         SPACE 1                                                     R4 84675000
         TM    PCEID,PCERJEID      TEST PROCESSOR TYPE               R4 84676000
         BO    PDORMANT            BR IF REMOTE                      R4 84677000
         L     R1,PCEDCT           GET LOCAL PRPU DCT ADDRESS  @OZ32566 84678000
         USING DCTDSECT,R1         PICK-UP DCB ADDRESS               R4 84679000
         L     R1,DCTDCB            FROM DCT                         R4 84680000
         USING DCBDSECT,R1         PICK-UP DEB ADDRESS               R4 84681000
         L     R1,DCBDEBAD          FROM DCB                         R4 84682000
         LA    R0,DEBBASND-DEBDSECT  SIZE OF JES2 DEB                R4 84683000
        $PGSRVC FREE,(R1),(R0)     PAGE-FREE THE DEB                 R4 84684000
         SPACE 2                                                     R4 84685000
*********************************************************************** 84686000
*                                                                     * 84687000
*        INDICATE THAT THE PRINT/PUNCH PROCESSOR IS DORMANT           * 84688000
*                                                                     * 84689000
*********************************************************************** 84690000
         SPACE 1                                                     R4 84691000
PDORMANT DS    0H                                                    R4 84692000
        $DORMANT                   INDIACTE PROCESSOR INACTIVE       R4 84693000
         SPACE 1                                                     R4 84694000
         B     HASPPPI1            RESTART AT PRPU INITIALIZATION    R4 84695000
         SPACE 1                                               @OZ32776 84696000
         PRINT OFF                 THIS SECTION DELETED BY     @OZ32776 84697000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84698000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84699000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84700000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84701000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84702000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84703000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84704000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84705000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84706000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84707000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84708000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84709000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84710000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84711000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84712000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84713000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84714000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84715000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84716000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84717000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84718000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84719000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84720000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84721000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84722000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84723000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84724000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84725000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84726000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84727000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84728000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84729000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84730000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84731000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84732000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84733000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84734000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84735000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84736000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84737000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84738000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84739000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84740000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84741000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84742000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84743000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84744000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84745000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84746000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84747000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84748000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84749000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84750000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84751000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84752000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84753000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84754000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84755000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84756000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84757000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84758000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84759000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84760000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84761000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84762000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84763000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84764000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84765000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84766000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84767000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84768000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84769000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84770000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84771000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84772000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84773000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84774000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84775000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84776200
*                                  THIS LINE DELETED BY APAR   @OZ32776 84776500
*                                  THIS LINE DELETED BY APAR   @OZ32776 84776800
*                                  THIS LINE DELETED BY APAR   @OZ32776 84777000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84777200
*                                  THIS LINE DELETED BY APAR   @OZ32776 84777300
*                                  THIS LINE DELETED BY APAR   @OZ32776 84777500
*                                  THIS LINE DELETED BY APAR   @OZ32776 84777800
*                                  THIS LINE DELETED BY APAR   @OZ32776 84777900
*                                  THIS LINE DELETED BY APAR   @OZ32776 84778000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84778100
*                                  THIS LINE DELETED BY APAR   @OZ32776 84778200
*                                  THIS LINE DELETED BY APAR   @OZ32776 84779000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84780000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84781000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84782000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84783000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84784000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84785000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84786000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84787000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84788000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84789000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84790000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84791000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84792000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84793000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84794000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84795000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84796000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84797000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84798000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84799000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84800000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84801000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84802000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84803000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84804000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84805000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84806000
*                                  THIS LINE DELETED BY APAR   @OZ32776 84807000
         PRINT ON                  THIS SECTION DELETED BY     @OZ32776 84808000
         TITLE 'HASP PRINT/PUNCH SERVICE -- SEPARATOR PAGE ROUTINE'     84809000
*********************************************************************** 84810000
*                                                                     * 84811000
*        SEPARATOR PAGE ROUTINE                                       * 84812000
*                                                                     * 84813000
*********************************************************************** 84814000
         SPACE 1                                                     R4 84815000
PRINTID  DS    0H                                                       84816000
         ST    PL,PCERETN          SAVE RETURN ADDRESS               R4 84817000
         L     JCT,PJCTBUF         PICK UP JCT ADDRESS               R4 84818000
         USING JCTDSECT,JCT        ACTIVATE JCT ADDRESSABILITY          84819000
         ST    R1,PCEFORM          SAVE ADDRESS OF ID TYPE              84820000
         NI    PPFLAG,255-PPDELSW  RESET SUSPEND SWITCH                 84821000
         CLI   PDEVTYPE+3,UCB3800  TEST FOR 3800 PRINTER             R4 84822000
         BNE   BLKLCNT             BR IF NOT                         R4 84823000
         CLI   $PRIDCT,0           TEST FOR ZERO LINE COUNT          R4 84824000
         BE    PRNOID              BR IF YES                         R4 84825000
         LM    PC1,PC2,PCCWEM      SELECT                            R4 84826000
         ICM   PC1,8,PXTABCCW       DEFAULT CHARACTER SET           R41 84827000
         BAL   PL,PPPUT              FOR ID PAGES                    R4 84828000
BLKLCNT  DS    0H                                                    R4 84829000
         SLR   PL,PL               REMOTE SEPARATOR                  R4 84830000
         IC    PL,$TPIDCT           LINE COUNT                       R4 84831000
         TM    PCEID,PCELCLID      TEST FOR LOCAL PRINTER               84832000
         BZ    BLKRMT              BRANCH IF NOT LOCAL                  84833000
         IC    PL,$PRIDCT          LOCAL SEPARATOR LINE COUNT        R4 84834000
BLKRMT   DS    0H                                                       84835000
         LTR   PL,PL               IS LINE COUNT ZERO                   84836000
         BZ    PRNOID              BRANCH IF YES                        84837000
         SPACE 1                                                    R41 84837100
         TM    PCEID,PCERJEID      TEST PROCESSOR TYPE              R41 84837300
         BZ    PBLKTST             BR IF NOT REMOTE                 R41 84837500
         L     R1,PCEDCT           ADDRESS PRINTER DCT         @OZ32566 84837600
         TM    MDCTFEAT-DCTDSECT(R1),DCTPSHDR IF PTR DOES NOT REQ   R41 84837700
         BNO   PBLKTST                         SETUP HDR, SKIP PDIR R41 84837800
         MVI   PPDIRID,X'01'       INDICATE SEPARATOR PDIR          R41 84837900
         ST    PL,PPDSRCT          USE SEPARATOR LINE CNT FROM HCT  R41 84838000
         L     R15,=A(PPDIR)       POINT TO SEPARATOR ROUTINE       R41 84838100
         BALR  PL,R15              PUT SEPARATOR PDIR               R41 84838200
         L     PL,PPDSRCT          RESTORE SEPARATOR LINE COUNT     R41 84838300
PBLKTST  DS    0H                                                   R41 84838400
         LA    R1,BUFSTART-BUFDSECT  STARTING LINE DISPLACEMENT      R4 84838500
         CLM   PL,1,=AL1(30)       AT LEAST 30 LINES REQUESTED          84839000
         BL    BLKSKIP             BRANCH IF NO                         84840000
         MVC   PCCWORK,JCTJNAME    JOB NAME FROM JOB CARD            R4 84841000
         LA    PL,BLKPRT           POINT TO BLOCK LETTER ROUTINE    R41 84845000
         BALR  PL,PL               TO PRINT JOBNAME NON-SLANTED,    R41 84845100
         NOPR  0                    CHANGE 'BALR' AND 'NOPR'        R41C84845200
                                     TO 'BAL PL,0(,PL)'             R41 84845300
         EJECT                                                      R41 84846000
         LM    PC1,PC2,PRCCWSP     LOAD SPACE CCW                       84850000
         BAL   PL,PPPUT            ADD CCW TO CHAIN                     84851000
         XC    PCCWORK,PCCWORK     CLEAR WORK AREA                      84852000
         MVC   PCCWORK(1),JCTJOBID GET JOB TYPE                         84853000
         MVC   PCCWORK+1(4),JCTJOBID+4 AND JOB NUMBER                   84854000
SKIP490  CLI   PCCWORK+1,C' '          LEFT-                         R4 84855000
         BNE   SKIP480                  JUSTIFY                      R4 84856000
         MVC   PCCWORK+1(4),PCCWORK+2    JOB                         R4 84857000
         B     SKIP490                    NUMBER                     R4 84858000
SKIP480  L     PL,PWKJOE           ADDRESS WORK-JOE                  R4 84859000
         USING JOEDSECT,PL         ACTIVATE JOE ADDRESSABILITY       R4 84860000
         MVC   PCCWORK+6(1),JOECURCL  GET SYSOUT CLASS               R4 84861000
         MVI   PCCWORK+7,C' '      SET TRAILING BLANK                R4 84862000
         L     R1,PLNDISPL         GET NEW LINE DISPLACEMENT         R4 84863000
         LA    PL,BLKPRT           POINT TO BLOCK LETTER ROUTINE    R41 84864000
         BAL   PL,0(,PL)           TO PRINT JOBID/CLASS SLANTED,    R41C84864100
                                    CHANGE 'BAL' TO 'BALR PL,PL'    R41C84864200
                                     AND 'NOPR 0'                   R41 84864300
         SPACE 1                                                    R41 84865000
         LM    PC1,PC2,PRCCWSP     LOAD SPACE CCW                       84866000
         ICM   PC1,8,=X'13'        SET CCW TO DOUBLE SPACE              84867000
         BAL   PL,PPPUT            ADD CCW TO CHAIN                     84868000
         L     R1,PLNDISPL         GET NEW LINE DISPLACEMENT         R4 84869000
BLKSKIP  DS    0H                                                       84870000
         LA    PC1,0(R1,PBUF)      GET NEW LINE BUFFER ADDRESS       R4 84871000
         L     R1,PCEFORM          ID PAGE TYPE                         84872000
         MVC   0(6,PC1),=C'***** ' PP001 FRAME CHARACTERS            R4 84873000
         MVC   6(121,PC1),5(PC1)   BLANK MIDDLE OF LINE              R4 84874000
         MVC   128(4,PC1),0(PC1)   PP129 FRAME CHARACTERS            R4 84875000
         L     PL,PWKJOE           ADDRESS WORK-JOE                  R4 84876000
         MVC   4(1,PC1),JOECURCL   PP005 SYSOUT CLASS                R4 84877000
         MVC   127(1,PC1),JOECURCL PP128 SYSOUT CLASS                R4 84878000
         DROP  PL                  DROP JOE ADDRESSABILITY           R4 84879000
         MVC   7(5,PC1),0(R1)      PP008 START/END/CONT              R4 84880000
         MVC   120(5,PC1),0(R1)    PP121 START/END/CONT              R4 84881000
         MVC   14(8,PC1),JCTJOBID  PP015 JOB NUMBER                  R4 84882000
         MVC   110(8,PC1),JCTJOBID PP111 JOB NUMBER                  R4 84883000
         MVC   24(8,PC1),JCTJNAME  PP025 JOB NAME                    R4 84884000
         MVC   100(3,PC1),=C'SYS'  PP101 SYS                         R4 84885000
         MVC   104(4,PC1),$SID     PP105 SYSTEM ID                   R4 84886000
         MVC   34(20,PC1),JCTPNAME PP035 PROGRAMMER NAME             R4 84887000
         MVC   56(4,PC1),=C'ROOM'  PP057 ROOM                        R4 84888000
         MVC   61(4,PC1),JCTROOMN  PP062 ROOM NUMBER                 R4 84889000
         TIME  DEC                 GET TIME AND DATE                    84890000
         L     R15,=A(PTIMASK)     MOVE EDIT MASK              @OZ32776 84891000
         MVC   67(11,PC1),0(R15)    FOR TIME                   @OZ32776 84891500
         CL    R0,=X'12000000'     TEST TIME                            84892000
         BL    PMORNING            BRANCH IF AM                         84893000
         MVI   76(PC1),C'P'        CHANGE FROM AM TO PM              R4 84894000
         SL    R0,=X'12000000'     SUBTRACT TWELVE HOURS                84895000
         EJECT                                                      R41 84895500
PMORNING ST    R0,PCCWORK          STORE ADJUSTED TIME                  84896000
         CLI   PCCWORK,X'00'       TEST FOR ZERO HOURS                  84897000
         BNE   *+8                 BRANCH IF NOT                        84898000
         MVI   PCCWORK,X'12'       CONVERT ZERO TO TWELVE               84899000
         TM    PCCWORK,X'08'       TEST FOR ADJUSTMENT ERROR            84900000
         BZ    *+8                 BRANCH IF NO ERROR                   84901000
         NI    PCCWORK,X'09'       CORRECT FOR BINARY SUBTRACT ERROR    84902000
         ED    66(9,PC1),PCCWORK   PP068 HH.MM.SS                    R4 84903000
         BAL   PL,PPDATE           CONVERT DATE TO PRINTABLE        R41 84904000
         MVC   67+11(10,PC1),PMESSAGE  PP080 DAY MONTH YEAR         R41 84904100
         L     PL,PCEDCT           ADDRESS PRINT DCT           @OZ32566 84926000
         USING DCTDSECT,PL         ACTIVATE DCT ADDRESSABILITY          84927000
         MVC   90(8,PC1),DCTDEVN   PP091 DEVICE NAME                 R4 84928000
         DROP  PL                  SUSPEND DCT ADDRESSABILITY           84929000
PRIDOUT  DS    0H                  END OF SETUP                         84930000
         TM    $PRTOPTS,$PRTRANS   IF TRANSLATION NOT REQ'D,         R4 84931000
         BZ    PRIDNOTR             DON'T DO IT                @OZ32776 84932000
         CLC   PDEVTYPE+2(2),=AL1(UCB3UREC,UCB3211)  LOCAL 3211...   R4 84933000
         BE    PRIDNOTR            BR IF YES                   @OZ32776 84934000
         CLC   PDEVTYPE+2(2),=AL1(UCB3UREC,UCB3800)  3800 PRINTER... R4 84935000
         BE    PRIDNOTR            BR IF YES                   @OZ32776 84936000
         L     R15,=A(PTRTBL)      TRANSLATE UNPRINTABLES      @OZ32776 84936500
         TR    0(132,PC1),0(R15)    TO BLANKS                  @OZ32776 84937000
PRIDNOTR DS    0H                                              @OZ32776 84938000
         SLR   JCT,JCT             INITIALIZE LINE COUNT       @OZ32776 84938500
         IC    JCT,$TPIDCT          FOR REMOTE SEPARATOR             R4 84939000
         TM    PCEID,PCELCLID      TEST FOR LOCAL PRINT                 84940000
         BZ    PRIEJECT            BRANCH IF NOT LOCAL                  84941000
         IC    JCT,$PRIDCT         LOCAL SEPARATOR LINE COUNT        R4 84942000
PRIEJECT DS    0H                                                       84943000
         CLM   JCT,1,=AL1(30)      TEST FOR BLOCK LETTERS USED       R4 84944000
         BL    *+8                 BRANCH IF NO                         84945000
         SH    JCT,=H'29'          ACCOUNT FOR BLOCK LETTER LINES    R4 84946000
         AL    PC1,PRCCWID         CONSTRUCT                         R4 84947000
         L     PC2,PRCCWID+4        PRINT CCW                        R4 84948000
         BAL   PL,PPPUT            ADD CCW TO CHAIN                     84949000
         BCT   JCT,PPPUT           GENERATE SEPARATOR PAGE           R4 84950000
         L     JCT,PJCTBUF         RELOAD JCT ADDRESS                R4 84951000
         TM    PPFLAG,PPNEWS       JES2-NEWS AVAILABLE...           R41 84951200
         BO    PRNOID              SKIP EJECT IF YES                R41 84951400
         LM    PC1,PC2,PRCCWEJ     LOAD EJECT CCW                       84952000
         BAL   PL,PPPUT            ADD CCW TO CHAIN                     84953000
PRNOID   BAL   PL,PPWRITE          INITIATE WRITE                       84954000
         BAL   PL,PPCHECK           AND CHECK                           84955000
         L     PL,PCERETN          RESTORE RETURN ADDRESS            R4 84956000
         BR    PL                   AND EXIT                            84957000
         TITLE 'HASP PRINT/PUNCH SERVICE -- BLOCK LETTER ROUTINE'       84958000
BLKPRT   ST    PL,PCEFORM+4        SAVE RETURN REGISTER              R4 84959000
         MVC   PBLKWORK,PCCWORK    SAVE TEXT                         R4 84960000
         OC    PCCWORK(8),=8X'C0'  SHIFT ALL TO 4TH QUADRANT            84961000
         TR    PCCWORK(8),BLOCKTR-192 TRANSLATE TO INDEX VALUE          84962000
         SLR   R4,R4               LINE 0 OF 12                         84963000
BLKBLD   STH   R4,PCEFORM+8        SAVE LINE COUNTER                 R4 84964000
         ST    R1,PLNDISPL         SAVE NEW LINE DISPLACEMENT        R4 84965000
         ALR   R1,PBUF             GET NEW LINE BUFFER ADDRESS       R4 84966000
         MVI   0(R1),C' '          FILL LINE                         R4 84976000
         MVC   1(131,R1),0(R1)      WITH BLANKS                      R4 84977000
         LA    R7,7                SCAN FOR                          R4 84978000
BLKCENTR LA    R15,PBLKWORK(R7)      LAST                            R4 84979000
         CLI   0(R15),C' '            NON-                           R4 84980000
         BNE   SKIP510                 BLANK                         R4 84981000
         BCT   R7,BLKCENTR              CHARACTER                    R4 84982000
SKIP510  LA    R7,1(,R7)           COMPUTE                           R4 84983000
         MH    R7,=H'7'             BEGINNING                        R4 84984000
         SH    R7,=H'67'             PRINT POSITION                  R4 84985000
         LCR   R7,R7                  TO CENTER                      R4 84986000
         LA    R5,0(R7,R1)             BLOCK LETTERS                 R4 84987000
         TM    PCEFORM+4,X'80'     TEST FOR SLANTING OPTION          R4 84988000
         BO    SKIP520             BR IF NO                          R4 84989000
         LA    R5,6(,R5)           ELSE, SLANT                       R4 84990000
         SRL   R4,1                 BLOCK                            R4 84991000
         SLR   R5,R4                 LETTERS                         R4 84992000
SKIP520  SLR   R4,R4               SET FOR A LETTER INDEX OF 0       R4 84993000
BLKLUP   IC    R7,PBLKWORK(R4)     USE RELATIVE TEXT LETTER          R4 84994000
         STC   R7,$POSTSAV          TO FORM BLOCK TEXT               R4 84995000
         LA    R7,PCCWORK(R4)      CURRENT LETTER INDEX                 84996000
         SLR   R15,R15             CLEAR REGISTER                       84997000
         ICM   R15,1,0(R7)         GET TRANSLATED LETTER INDEX          84998000
         BZ    BLKSTOR             BRANCH IF INDEX ZERO                 84999000
         BCTR  R15,0               DECREMENT BY ONE                     85000000
         MH    R15,=H'24'          CONVERT TO DISPLACEMENT              85001000
         AH    R15,PCEFORM+8       SELECT FOR LINE WITHIN LETTER        85002000
         LA    R15,BLOCKA(R15)     LETTER MASK ADDRESS                  85003000
         ICM   R15,12,0(R15)       LETTER MASK BITS                     85004000
BLKSTOR  LA    R7,12               BLOCK WIDTH OF 12                 R4 85005000
BLKLOOP  ALR   R15,R15             SHIFT LEFT AND TEST HIGH BIT      R4 85006000
         BC    12,SKIP530          BRANCH IF OFF                     R4 85007000
         MVC   0(1,R5),$POSTSAV    OVERSTORE BLANK TO FORM BLOCK     R4 85008000
SKIP530  LA    R5,1(,R5)           INCREMENT COL NUMBER                 85009000
         BCT   R7,BLKLOOP          BRANCH TO FILL 12 COL'S              85010000
         LA    R5,2(,R5)           2 BLANKS BETWEEN BLOCKS              85011000
         LA    R4,1(,R4)           STEP TO NEXT LETTER INDEX            85012000
         CL    R4,=F'8'            HAVE WE DONE 8 BLOCKS                85013000
         BL    BLKLUP              BRANCH IF NO                         85014000
         LM    PC1,PC2,PRCCWID     GET PRINT CCW                        85018000
         ALR   PC1,PBUF            ADD BUFFER ORIGIN                    85019000
         AL    PC1,PLNDISPL         AND LINE DISPLACEMENT            R4 85020000
         BAL   PL,PPPUT            ADD CCW TO CHAIN                     85021000
         L     R1,PLNDISPL         GET NEW                           R4 85022000
         LA    R1,132(,R1)          LINE DISPLACEMENT                R4 85023000
         LA    R4,132(,R1)         CHECK FOR ROOM                    R4 85024000
         CH    R4,$BUFLENG          IN BUFFER                        R4 85025000
         BNH   SKIP540             BR IF YES                         R4 85026000
         BAL   PL,PPWRITE          FORCE WRITE                          85027000
         BAL   PL,PPCHECK          CHECK WRITE                          85028000
         LA    R1,BUFSTART-BUFDSECT  SET STARTING LINE DISPLACEMENT  R4 85029000
SKIP540  LH    R4,PCEFORM+8        GET LINE COUNTER                     85030000
         LA    R4,2(,R4)           STEP TO NEXT LINE                    85039000
         CH    R4,=H'24'           LAST LINE FINISHED                   85040000
         BL    BLKBLD              BRANCH IF NO                         85044000
         ST    R1,PLNDISPL         SAVE NEW LINE DISPLACEMENT        R4 85045000
         L     PL,PCEFORM+4        LOAD RETURN REGISTER                 85046000
         BR    PL                  RETURN TO CALLER                     85047000
         TITLE 'HASP PRINT/PUNCH SERVICE -- DATE SUBROUTINE'        R41 85047100
*********************************************************************** 85047200
*                                                                     * 85047300
*        PPDATE - SUBROUTINE TO FORMAT THE DATE                       * 85047400
*                                                                     * 85047500
* INPUT  R1    - DATE IN THE FORM 00YYDDDC                            * 85047600
*        PL    - RETURN ADDRESS                                       * 85047700
*                                                                     * 85047800
* OUTPUT R0, R1, PW  - UNPREDICTABLE                                  * 85047900
*        PMESSAGE    - FORMATTED DATE IN THE FORM ' DD MMM YY'        * 85048000
*                                                                     * 85048100
*********************************************************************** 85048200
         SPACE 1                                                    R41 85048300
PPDATE   LTR   R1,R1               TEST FOR VALID DATE              R41 85048400
         BZR   PL                  RETURN IF NO                     R41 85048500
         ST    R1,PCCWORK+4        STORE DATE                       R41 85048600
         L     PW,=A(PYEARTAB)     COPY DATE CONVERSION TABLE  @OZ32776 85048700
         MVC   PMONTHS,0(PW)        FOR POSSIBLE UPDATE        @OZ32776 85048750
         TM    PCCWORK+5,X'01'     AJUST                            R41 85048800
         BO    PTDEDYR              TABLE                           R41 85048900
         TM    PCCWORK+5,X'12'       ON                             R41 85049000
         BM    PTDEDYR                LEAP                          R41 85049100
         MVI   PFEB,29                 YEARS                        R41 85049200
         SPACE 1                                                    R41 85049300
PTDEDYR  MVC   PMESSAGE+7(3),=X'402120'  GET PATTERN                R41 85049400
         ED    PMESSAGE+7(3),PCCWORK+5    AND EDIT THE YEAR (YY)    R41 85049500
         XC    PCCWORK(6),PCCWORK  CLEAR ALL BUT JULIAN DAY         R41 85049600
         SLR   R0,R0               CLEAR FOR IC                     R41 85049700
         CVB   R1,PCCWORK          CONVERT TO BINARY DAY            R41 85049800
         LA    PW,PMONTHS-4        ADDR OF DATE CONVERSION TABLE    R41 85049900
         SPACE 1                                                    R41 85050000
PTDATLUP SLR   R1,R0               CONVERT                          R41 85050100
         LA    PW,4(,PW)            JULIAN DAY                      R41 85050200
         IC    R0,0(,PW)             TO                             R41 85050300
         CLR   R0,R1                  STANDARD DAY                  R41 85050400
         BL    PTDATLUP                *  (R1)                      R41 85050500
         SPACE 1                                                    R41 85050600
         CVD   R1,PCCWORK          CONVERT TO DECIMAL DAY           R41 85050700
         MVI   PMESSAGE,C' '       CLEAR 1ST BYTE OF AREA           R41 85050800
         UNPK  PMESSAGE+1(2),PCCWORK+6(2)  PLACE DAY (DD)           R41 85050900
         OI    PMESSAGE+2,X'F0'             INTO PMESSAGE           R41 85051000
         MVI   PMESSAGE+3,C' '     INSERT DELIMITER                 R41 85051100
         MVC   PMESSAGE+4(3),1(PW)  MOVE EBCDIC MONTH (MMM)         R41 85051200
         BR    PL                   AND RETURN                      R41 85051300
         TITLE 'HASP PRINT/PUNCH SERVICE -- MESSAGE AND COMMENT SUBROUTC85051400
               INES'                                                 R4 85051500
*********************************************************************** 85051600
*                                                                     * 85051700
*        PRMSG/PRCOMENT -- ADD MSG TO OUTPUT AND SEND TO OPERATOR     * 85052000
*                                                                     * 85053000
*********************************************************************** 85054000
         SPACE 1                                                     R4 85055000
PRMSG    ST    PL,PPLSAVE          SAVE RETURN ADDRESS               R4 85056000
         MVI   PMESSAGE,C' '                     BLANK OUT           R4 85057000
         MVC   PMESSAGE+1(L'PMESSAGE-1),PMESSAGE  MESSAGE AREA       R4 85058000
         MVC   PMESSAGE(9),0(R1)   MOVE IN MESSAGE ID                R4 85059000
         PACK  PMSGNO,5(3,R1)      SAVE ID IN PACKED FORM            R4 85060000
         L     R1,PCEDCT           GET DCT ADDRESS             @OZ32566 85061000
         MVC   PMESSAGE+9(8),DCTDEVN-DCTDSECT(R1)  FILL IN DEV NAME  R4 85062000
         MVC   PMESSAGE+17(12),0(R15)  MOVE IN MESSAGE TEXT          R4 85063000
         TM    $RUNOPTS,$MSGID     IF MESSAGE IDS REQUESTED,         R4 85064000
         BO    SKIP550              BR TO INCLUDE MSG ID             R4 85065000
         MVC   PMESSAGE+1(29),PMESSAGE+8 ELSE OVERLAY MSG ID        R41 85066000
SKIP550  BAL   PL,PRCOMENT         ADD MESSAGE TO OUTPUT             R4 85067000
         LA    R1,PMESSAGE+7       POINT TO MESSAGE TEXT - 2         R4 85068000
         TM    $RUNOPTS,$MSGID     IF MESSAGE IDS REQUESTED,         R4 85069000
         BO    SKIP560              BR TO INSERT MESSAGE NUMBER      R4 85070000
         LA    R1,PMESSAGE           ELSE FIRST UPDATE TEXT ADDRESS  R4 85071000
SKIP560  MVC   0(2,R1),PMSGNO      MOVE PACKED MSG NUMBER TO MSG     R4 85072000
        $WTO   (R1),22,ROUTE=$LOG+$UR,  INFORM OPERATOR              R4C85073000
               CLASS=$NORMAL,PRI=$ST,JOB=NO                          R4 85074000
         L     PL,PPLSAVE          RESTORE RETURN ADDRESS            R4 85075000
         BR    PL                   AND RETURN                       R4 85076000
         EJECT                                                      R41 85077000
*********************************************************************** 85077100
*                                                                     * 85077200
*        PRCOMENT -- ADD MSG TO OUTPUT ONLY                           * 85077300
*                                                                     * 85077400
*********************************************************************** 85077500
         SPACE 1                                                    R41 85077600
PRCOMENT TM    PCEID,PCEPUSID      TEST PROCESSOR TYPE               R4 85078000
         BOR   PL                  RETURN IF PUNCH                      85079000
         ST    PL,PCERETN          SAVE RETURN ADDRESS               R4 85080000
         LM    PC1,PC2,PRCCWSP     LOAD SPACE CCW                       85081000
         ICM   PC1,8,=X'13'        FORCE DOUBLE SPACING             R41 85081500
         L     PW,PPLC             INCREMENT                         R4 85082000
         LA    PW,4(,PW)            PAGE                             R4 85083000
         ST    PW,PPLC               LINE COUNT                      R4 85084000
         CL    PW,PRLINECT         COMPARE WITH MAXIMUM              R4 85085000
         BNH   PRCOMSP             BRANCH IF NOT HIGH                   85086000
         LA    PW,1                RESET PAGE                        R4 85087000
         ST    PW,PPLC              LINE COUNTER                     R4 85088000
         LM    PC1,PC2,PRCCWEJ     LOAD EJECT CCW                       85089000
         SPACE 1                                                    R41 85089500
PRCOMSP  BAL   PL,PPPUT            ADD CCW TO CHAIN                  R4 85090000
         LA    R1,BUFSTART         FIXED-STORAGE PRINT AREA         R41 85091000
         XC    PMESSAGE,BUFSTART             SWAP                   R41 85092000
         XC    BUFSTART(L'PMESSAGE),PMESSAGE  MESSAGE AND           R41 85093000
         XC    PMESSAGE,BUFSTART               PRINT AREAS          R41 85093500
         SPACE 1                                                    R41 85093700
         LM    PC1,PC2,PRCCWCOM    LOAD PRINT CCW                       85094000
         OR    PC1,R1              UPDATE DATA-ADDRESS               R4 85095000
         BAL   PL,PPPUT            ADD CCW TO CHAIN                     85096000
         BAL   PL,PPWRITE          INITIATE WRITE                       85097000
         BAL   PL,PPCHECK           AND CHECK                           85098000
         SPACE 1                                                    R41 85098300
         XC    PMESSAGE,BUFSTART             SWAP                   R41 85098500
         XC    BUFSTART(L'PMESSAGE),PMESSAGE  MESSAGE AND           R41 85098700
         XC    PMESSAGE,BUFSTART               PRINT AREAS          R41 85098800
         SPACE 1                                                    R41 85098900
         L     PL,PCERETN          RESTORE RETURN ADDRESS            R4 85099000
         BR    PL                  AND RETURN                           85100000
         TITLE 'HASP PRINT/PUNCH SERVICE -- VARIABLE STORAGE'           85101000
*                                                                       85102000
*                             MISCELLANEOUS CONSTANTS                   85103000
*                                                                       85104000
         PRINT OFF                 THIS SECTION DELETED BY     @OZ32776 85105000
*                                  THIS LINE DELETED BY APAR   @OZ32776 85106000
*                                  THIS LINE DELETED BY APAR   @OZ32776 85107000
*                                  THIS LINE DELETED BY APAR   @OZ32776 85108000
*                                  THIS LINE DELETED BY APAR   @OZ32776 85109000
*                                  THIS LINE DELETED BY APAR   @OZ32776 85110000
*                                  THIS LINE DELETED BY APAR   @OZ32776 85111000
*                                  THIS LINE DELETED BY APAR   @OZ32776 85112000
*                                  THIS LINE DELETED BY APAR   @OZ32776 85113000
*                                  THIS LINE DELETED BY APAR   @OZ32776 85114000
*                                  THIS LINE DELETED BY APAR   @OZ32776 85115000
*                                  THIS LINE DELETED BY APAR   @OZ32776 85116000
*                                  THIS LINE DELETED BY APAR   @OZ32776 85117000
*                                  THIS LINE DELETED BY APAR   @OZ32776 85117200
*                                  THIS LINE DELETED BY APAR   @OZ32776 85117400
*                                  THIS LINE DELETED BY APAR   @OZ32776 85117600
*                                  THIS LINE DELETED BY APAR   @OZ32776 85117800
*                                  THIS LINE DELETED BY APAR   @OZ32776 85118000
*                                  THIS LINE DELETED BY APAR   @OZ32776 85119000
*                                  THIS LINE DELETED BY APAR   @OZ32776 85120000
         PRINT ON                  THIS SECTION DELETED BY     @OZ32776 85120100
         SPACE 1                                               @OZ28353 85120200
PJOBSTAT DC    CL39'------ JES2 JOB STATISTICS ------'                  85123000
PXEQDATE DC    CL29' JOB EXECUTION DATE'                            R41 85123500
PRDRSTAT DC    X'40206B2020206B202120',CL29' CARDS READ'             R4 85124000
PPRTSTAT DC    X'40206B2020206B202120',CL29' SYSOUT PRINT RECORDS'   R4 85125000
PPUNSTAT DC    X'40206B2020206B202120',CL29' SYSOUT PUNCH RECORDS'   R4 85126000
PXEQSTAT DC    X'4020206B2021204B2020',CL29' MINUTES EXECUTION TIME' R4 85127000
*                                                                       85128000
*                             CCW SKELETONS AND STORAGE                 85129000
*                                                                       85130000
PDIRCCW  CCW   X'FE',BUFSTART-BUFDSECT,X'60',68 PDIR CCW            R41 85130500
PRCCWEJ  CCW   X'8B',0,X'60',1                                          85131000
PRCCWID  CCW   X'09',*-*,X'60',132                                   R4 85132000
PUCCW    CCW   X'41',*-*,X'60',80                                       85133000
PCCW     CCW   *-*,HDBSTART-BUFDSECT,X'60',*-*                          85134000
*              THIS LINE DELETED BY APAR NUMBER                @OZ32235 85134800
*              THIS LINE DELETED BY APAR NUMBER                @OZ32235 85134900
PUCCWBL  CCW   X'01',*-*,X'60',1     BLANK SPACER CCW.         @OZ32235 85135000
PRCCWSP  CCW   X'1B',0,X'60',1                                          85136000
PRCCWSP1 CCW   X'0B',0,X'60',1                                 @OZ20006 85136100
PRCCWCOM CCW   X'09',*-*,X'60',L'PMESSAGE                            R4 85137000
PCCWNOP  CCW   X'03',0,X'20',64    COUNT USED AS A BLANK                85138000
PUNFOLD  CCW   X'23',0,X'60',1     3211 UNFOLD CONTROL CCW              85139000
PUCSGATE CCW   X'EB',0,X'60',1     1403 UCS GATE CONTROL CCW            85140000
PUCSBDC  CCW   X'73',0,X'60',1     BLOCK DATA CHECK CCW                 85141000
PUCSLOAD CCW   X'FB',BUFSTART+1-BUFDSECT,X'60',240 LOAD UCSB CCW        85142000
PFCBLOAD CCW   X'63',BUFSTART+2-BUFDSECT,X'60',0 LOAD FCB CCW           85143000
*              THIS LINE DELETED BY APAR NUMBER                @OZ32235 85143500
*              THIS LINE DELETED BY APAR NUMBER                @OZ32235 85143600
PUSPACCW CCW   X'1D',*-*,X'A0',48    BLANK SPACER CCW.         @OZ32235 85144000
PCCWEM   CCW   X'17',0,X'60',1     EDGE MARK CCW                     R4 85145000
PCCWCP   CCW   X'87',0,X'60',1     CLEAR PRINT CCW                   R4 85146000
PCCWOFST CCW   X'07',0,X'60',1     OFFSET-STACK (END-OF-XMISSION)    R4 85147000
PCNOPTIC DC    X'03',AL3(*-*),X'20',AL1(0,PCIEPRPU,0)         PCIE   R4 85148000
         DC    X'08',AL3(*-*),A(*-*)                        SKELETON R4 85149000
*              THIS LINE DELETED BY APAR NUMBER                @OZ32235 85150000
PRXTR    TR    0(*-*,PC1),0(R15)   *** EXECUTED ***  &PRTRANS  @OZ32776 85150100
         EJECT                                                          85151000
*********************************************************************** 85152000
*                                                                     * 85153000
*        PRINT/PUNCH PROCESSOR LITERAL POOL                           * 85154000
*                                                                     * 85155000
*********************************************************************** 85156000
         SPACE 1                                                     R4 85157000
         DS    0D                                                       85158000
         LTORG                                                          85159000
         EJECT                                                          85160000
         PRINT OFF                 THIS SECTION DELETED BY     @OZ32776 85161000
*                                  THIS LINE DELETED BY APAR   @OZ32776 85162000
*                                  THIS LINE DELETED BY APAR   @OZ32776 85163000
*                                  THIS LINE DELETED BY APAR   @OZ32776 85164000
*                                  THIS LINE DELETED BY APAR   @OZ32776 85165000
*                                  THIS LINE DELETED BY APAR   @OZ32776 85166000
*                                  THIS LINE DELETED BY APAR   @OZ32776 85167000
*                                  THIS LINE DELETED BY APAR   @OZ32776 85168000
*                                  THIS LINE DELETED BY APAR   @OZ32776 85169000
*                                  THIS LINE DELETED BY APAR   @OZ32776 85170000
*                                  THIS LINE DELETED BY APAR   @OZ32776 85171000
*                                  THIS LINE DELETED BY APAR   @OZ32776 85172000
*                                  THIS LINE DELETED BY APAR   @OZ32776 85173000
*                                  THIS LINE DELETED BY APAR   @OZ32776 85174000
*                                  THIS LINE DELETED BY APAR   @OZ32776 85175000
*                                  THIS LINE DELETED BY APAR   @OZ32776 85176000
*                                  THIS LINE DELETED BY APAR   @OZ32776 85177000
*                                  THIS LINE DELETED BY APAR   @OZ32776 85178000
         PRINT ON                  THIS SECTION DELETED BY     @OZ32776 85179000
*********************************************************************** 85180000
*                                                                     * 85181000
*        BLOCK LETTER TABLE                                           * 85182000
*                                                                     * 85183000
*********************************************************************** 85184000
         SPACE 1                                                     R4 85185000
BLOCKTR  DC    X'0001020304050607080900000000000000'                    85186000
         DC    X'0A0B0C0D0E0F1011120013000000000000'                    85187000
         DC    X'1415161718191A1B000000000000'                          85188000
         DC    X'1C1D1E1F202122232425002627000000'                      85189000
         SPACE 2                                                     R4 85190000
BLOCKA   DC    X'7FE0FFF0C030C030C030FFF0FFF0C030C030C030C030C030'      85191000
BLOCKB   DC    X'FFE0FFF0C030C030C060FFC0FFC0C060C030C030FFF0FFE0'      85192000
BLOCKC   DC    X'7FE0FFF0C030C000C000C000C000C000C000C030FFF07FE0'      85193000
BLOCKD   DC    X'FF80FFC0C060C030C030C030C030C030C030C060FFC0FF80'      85194000
BLOCKE   DC    X'FFF0FFF0C000C000C000FF00FF00C000C000C000FFF0FFF0'      85195000
BLOCKF   DC    X'FFF0FFF0C000C000C000FF00FF00C000C000C000C000C000'      85196000
BLOCKG   DC    X'7FE0FFF0C030C000C000C000C1F0C1F0C030C030FFF07FE0'      85197000
BLOCKH   DC    X'C030C030C030C030C030FFF0FFF0C030C030C030C030C030'      85198000
BKOCKI   DC    X'7FE07FE0060006000600060006000600060006007FE07FE0'      85199000
BLOCKJ   DC    X'3FF03FF0030003000300030003000300C300C300FF007E00'      85200000
BLOCKK   DC    X'C030C060C0C0C180C300FE00FE00C300C180C0C0C060C030'      85201000
BLOCKL   DC    X'C000C000C000C000C000C000C000C000C000C000FFF0FFF0'      85202000
BLOCKM   DC    X'C030E070F0F0D9B0CF30C630C030C030C030C030C030C030'      85203000
BLOCKN   DC    X'C030E030F030D830CC30C630C330C1B0C0F0C070C030C010'      85204000
BLOCKO   DC    X'FFF0FFF0C030C030C030C030C030C030C030C030FFF0FFF0'      85205000
BLOCKP   DC    X'FFE0FFF0C030C030C030FFF0FFE0C000C000C000C000C000'      85206000
BLOCKQ   DC    X'7FE0FFF0C030C030C030C030C030C330C1B0C0F0FFE07FB0'      85207000
BLOCKR   DC    X'FFE0FFF0C030C030C030FFF0FFE0C300C180C0C0C060C030'      85208000
BLOCK$   DC    X'06007FE0FFF0C630E6007FC03FE00670C630FFF07FE00600'      85209000
BLOCKS   DC    X'7FE0FFF0C030C000E0007FC03FE000700030C030FFF07FE0'      85210000
BLOCKT   DC    X'FFF0FFF00600060006000600060006000600060006000600'      85211000
BLOCKU   DC    X'C030C030C030C030C030C030C030C030C030C030FFF07FE0'      85212000
BLOCKV   DC    X'C030C030C030C030C030C030C030606030C019800F000600'      85213000
BLOCKW   DC    X'C030C030C030C030C030C030C630CF30D9B0F0F0E070C030'      85214000
BLOCKX   DC    X'C030C030606030C019800F000F00198030C06060C030C030'      85215000
BLOCKY   DC    X'C030C030606030C019800F00060006000600060006000600'      85216000
BLOCKZ   DC    X'FFF0FFF0006000C001801FC01FC00C00180030007FF0FFF0'      85217000
BLOCK0   DC    X'3FC07FE0C0F0C1B0C330C630CC30D830F030E0307FE03FC0'      85218000
BLOCK1   DC    X'06000E001E0006000600060006000600060006007FE07FE0'      85219000
BLOCK2   DC    X'7FE0FFF0C0300030003000600180060018006000FFF0FFF0'      85220000
BLOCK3   DC    X'7FE0FFF0C0300030003001E001E000300030C030FFF07FE0'      85221000
BLOCK4   DC    X'038007800D80198031807FF0FFF001800180018001800180'      85222000
BLOCK5   DC    X'FFF0FFF0C000C000C000FF80FFC0006000300030FFF0FFE0'      85223000
BLOCK6   DC    X'7FE0FFF0C030C000C000FFE0FFF0C030C030C030FFF07FE0'      85224000
BLOCK7   DC    X'FFF0FFE0C0C0018003000600060006000600060006000600'      85225000
BLOCK8   DC    X'7FE0FFF0C030C03060603FC03FC06060C030C030FFF07FE0'      85226000
BLOCK9   DC    X'7FE0FFF0C030C030C030FFF0FFF000300030C030FFF07FE0'      85227000
BLOCK#   DC    X'30C030C0FFF0FFF030C030C030C030C0FFF0FFF030C030C0'      85228000
BLOCK@   DC    X'3FC07FE0C030003000301E303F306330C330C3307FE03FC0'      85229000
         EJECT                                                 @OZ32776 85229010
***************************************************************@OZ32776 85229020
*                                                              @OZ32776 85229030
*        &PRTRANS TRANSLATE TABLE                              @OZ32776 85229040
*                                                              @OZ32776 85229050
*        TRANSLATE LOWER-CASE TO UPPER-CASE                    @OZ32776 85229060
*        TRANSLATE INVALID PN-TRAIN CHARACTERS TO BLANKS       @OZ32776 85229070
*                                                              @OZ32776 85229080
***************************************************************@OZ32776 85229090
         SPACE 1                                               @OZ32776 85229095
PTRTBL   DC    C'                                '  TRANSLATE  @OZ32776 85229100
         DC    C'                                '  TABLE      @OZ32776 85229110
         DC    C'           .<(+|&&          $*);^' USED TO    @OZ32776 85229120
         DC    C'-/         ,%_>?          :#@''="' TRANSLATE  @OZ32776 85229130
         DC    C' ABCDEFGHI       JKLMNOPQR      '  ALL        @OZ32776 85229140
         DC    C'  STUVWXYZ      0123456789      '  ILLEGAL    @OZ32776 85229150
         DC    C' ABCDEFGHI       JKLMNOPQR      '  CHARACTERS @OZ32776 85229160
         DC    C'  STUVWXYZ      0123456789      '  TO BLANKS  @OZ32776 85229170
         SPACE 5                                               @OZ32776 85229180
***************************************************************@OZ32776 85229190
*                                                              @OZ32776 85229200
*        MISCELLANEOUS CONSTANTS NOT DIRECTLY ADDRESSABLE      @OZ32776 85229210
*                                                              @OZ32776 85229220
***************************************************************@OZ32776 85229230
         SPACE 1                                               @OZ32776 85229240
PTIMASK  DC    X'21204B20204B202040C1D4'  TIME MASK            @OZ32776 85229250
PYEARTAB DC    AL1(31),C'JAN',AL1(28),C'FEB'  JULIAN           @OZ32776 85229260
         DC    AL1(31),C'MAR',AL1(30),C'APR'   TO DAY          @OZ32776 85229270
         DC    AL1(31),C'MAY',AL1(30),C'JUN'    AND            @OZ32776 85229280
         DC    AL1(31),C'JUL',AL1(31),C'AUG'     MONTH         @OZ32776 85229290
         DC    AL1(30),C'SEP',AL1(31),C'OCT'      CONVERSION   @OZ32776 85229300
         DC    AL1(30),C'NOV',AL1(255),C'DEC'      TABLE       @OZ32776 85229310
         SPACE 1                                               @OZ32776 85229320
PMONTHS  EQU   $CSAVREG,12*4       AREA FOR COPY OF ABOVE TABLE@OZ32776 85229330
PFEB     EQU   PMONTHS+4           ENTRY FOR FEBRUARY          @OZ32776 85229340
         SPACE 1                                               @OZ32776 85229350
PASAMCH  DC    X'400BF18BF013601BF293F39BF4A3F5ABF6B3F7BBF8C3F9CBC1D3C2C85229360
               DBC3E34E03E541E681000B' ASA TO MACHINE CNVRT    @OZ33326 85229370
PASANUM  EQU   (*-PASAMCH)/2                                   @OZ32776 85229380
         SPACE 1                                               @OZ32776 85229390
PASAMCH2 DC    X'400BF18BF013601BF293F39BF4A3F5ABF6B3F7BBF8C3F9CBC1D3C2C85229400
               DBC3E34E03E501E641000B' 3525 ASA TO MCH CNVRT   @OZ33326 85229410
         TITLE 'HASP PRINT SERVICE  --  PAGE COUNT ROUTINE'    @OZ29138 85230000
****************************************************************OZ29138 85230010
*                                                              *OZ29138 85230020
*        CALCULATE WHERE THE INTERVENTION REQURIED (PAPER JAM, *OZ29138 85230030
*        FORMS CHECK, ETC.) OCCURED FOR DATA SET REPOSITIONING *OZ29138 85230040
*                                                              *OZ29138 85230050
****************************************************************OZ29138 85230060
         SPACE 3                                               @OZ29138 85230070
PPCNTPGE DS    0H                                              @OZ29138 85230080
         LR    R14,R15             GET SUBROUTINE ENTRY ADDR   @OZ29138 85230100
         SPACE 1                                               @OZ29138 85230110
         USING PPCNTPGE,R14        ESTAB. SUBROUTINE BASE      @OZ29138 85230120
         USING DCTDSECT,PW         ESTAB. DCT ADDRESSABILITY   @OZ29138 85230130
         SPACE 1                                               @OZ29138 85230140
PPCKIO   L     R15,POUTIOB         GET OUTPUT CCW IOB ADDR     @OZ29138 85230150
         TM    BUFECBCC-BUFDSECT(R15),X'7F' I/O COMPLETE...    @OZ29138 85230160
         BNZ   PPCKCSW             BR IF YES                   @OZ29138 85230170
        $WAIT  IO                  WAIT FOR I/O POST           @OZ29138 85230180
         B     PPCKIO              ENSURE I/O HAS STOPPED      @OZ29138 85230190
         SPACE 1                                               @OZ29138 85230200
*        FIND OUT WHICH CCW CHAIN THE CSW BELONGS TO           @OZ29138 85230210
         SPACE 1                                               @OZ29138 85230220
PPCKCSW  CLC   DCTCSW+1(3),POUTCCWA+1 IS CSW IN ACTIVE AREA... @OZ29138 85230230
         BNH   PNXTCHN             BR IF NO, CHECK OTHER       @OZ29138 85230240
         L     R1,POUTCCWA         GET ACTIVE AREA POINTER     @OZ29138 85230250
         AH    R1,PCCWLAST         POINT TO THE PCIE,          @OZ29138 85230260
         LA    R1,PCIESIZE(,R1)     AND THE CCW CHKPT AREA.    @OZ29138 85230270
         CLM   R1,7,DCTCSW+1       IS CSW IN ACTIVE AREA...    @OZ29138 85230280
         BNH   PNXTCHN             BR IF CSW ADDR IS BEYOND END@OZ29138 85230290
         L     R1,POUTCCWA         GET START OF CCW CHAIN ADDR @OZ29138 85230300
         B     PFNDEND             FIND END OF CCW AREA        @OZ29138 85230310
PNXTCHN  DS    0H                                              @OZ29138 85230320
         CLC   DCTCSW+1(3),POUTCCWN+1 IS IT IN THIS AREA...    @OZ29138 85230330
         BNH   PPGERET             BR IF NOT THIS AREA EITHER  @OZ29138 85230340
         L     R1,POUTCCWN         GET NEXT AREA POINTER       @OZ29138 85230350
         AH    R1,PCCWLAST         POINT TO THE PCIE,          @OZ29138 85230360
         LA    R1,PCIESIZE(,R1)     AND THE CCW CHKPT AREA.    @OZ29138 85230370
         CLM   R1,7,DCTCSW+1       IS CSW IN THIS AREA...      @OZ29138 85230380
         BNH   PPGERET             BR IF CSW ADDR IS BEYOND END@OZ29138 85230390
         L     R1,POUTCCWN         GET START OF CCW CHAIN ADDR @OZ29138 85230400
         SPACE 1                                               @OZ29138 85230410
*        CSW IS VALID, FIND THE END OF THE CCW CHAIN.          @OZ29138 85230420
         SPACE 1                                               @OZ29138 85230430
PFNDEND  DS    0H                                              @OZ29138 85230440
         L     R0,DCTCSW           GET CSW ADDRESS AND         @OZ29138 85230450
         SH    R0,=H'8'             DECREMENT BY 8             @OZ29138 85230460
         LR    R15,R1              GET START OF CCW CHAIN      @OZ29138 85230470
         AH    R15,PCCWLAST        POINT TO THE LAST CCW+8     @OZ29138 85230480
         LR    R2,R1               GET START OF CCW CHAIN      @OZ29138 85230490
PINCR8   LA    R2,8(,R2)           INCREMENT BY ONE CCW        @OZ29138 85230500
         CR    R15,R2              END OF CHAIN...             @OZ29138 85230510
         BE    PFULLCHN            BR IF NOT A SHORT CHAIN     @OZ29138 85230520
         CLI   0(R2),X'08'         IS CCW A TIC (SHORT CHAIN)  @OZ29138 85230530
         BNE   PINCR8              BR IF NO, CHECK NEXT CCW    @OZ29138 85230540
PFULLCHN DS    0H                                              @OZ29138 85230550
         SPACE 1                                               @OZ29138 85230560
*        COUNT PAGES FROM END OF CCW CHAIN TO THE CSW          @OZ29138 85230570
         SPACE 1                                               @OZ29138 85230580
         SLR   R15,R15             CLEAR REGISTER FOR COUNT    @OZ29138 85230590
PCNTPGE  DS    0H                                              @OZ29138 85230600
         CR    R2,R0               CCW EQUAL TO INT REQ CCW... @OZ29138 85230610
         BNH   PCHNEND             BR IF TOP CONTINUE COUNTING @OZ29138 85230620
         CLI   0(R2),X'89'         IS CCW A CARRIAGE SKIP...   @OZ29138 85230630
         BL    *+8                 BR IF NO, NOT A PAGE        @OZ29138 85230640
         LA    R15,1(,R15)         ADD PAGE TO ACCUMULATOR     @OZ29138 85230650
         SH    R2,=H'8'            DECREMENT TO THE NEXT CCW   @OZ29138 85230660
         B     PCNTPGE             GO CHECK THE NEXT CCW       @OZ29138 85230670
         SPACE 1                                               @OZ29138 85230680
*        END OF PAGE COUNTING, NOW UPDATE PAGE COUNT IN PCE.   @OZ29138 85230690
         SPACE 1                                               @OZ29138 85230700
PCHNEND  DS    0H                                              @OZ29138 85230710
         LNR   R15,R15             COMPLEMENT FOR SUBTRACT     @OZ29138 85230720
         AH    R1,PCCWLAST         POINT TO THE PCIE,          @OZ29138 85230730
         LA    R1,PCIESIZE(,R1)     AND THE CCW CHKPT AREA.    @OZ29138 85230740
         A     R15,JOEPPCT-JOEDSECT(,R1) UPDATE FROM JOE CNT   @OZ29138 85230750
         ST    R15,PDDBPGCT        UPDATE CURRENT PAGE COUNT   @OZ29138 85230760
         SPACE 1                                               @OZ29138 85230770
         SLR   R1,R1               DOES A                      @OZ29138 85230780
         LH    R1,$BSPSIZ           BACKSPACE                  @OZ29138 85230790
         LTR   R1,R1                 TABLE EXIST...            @OZ29138 85230800
         BZ    PPGERET             BR IF NO, RETURN            @OZ29138 85230810
         SH    R1,=H'7'            DECREMENT BY ONE ENTRY      @OZ29138 85230820
         LA    R1,PBSPTBL(R1)      GET ADDRESS OF LAST ENTRY   @OZ29138 85230830
         XC    0(7,R1),0(R1)       INVALIDATE BACKSPACE TABLE  @OZ29138 85230840
         SPACE 1                                               @OZ29138 85230850
PPGERET  DS    0H                                              @OZ29138 85230860
         L     PW,PCEDCT           REFRESH DCT POINTER         @OZ29138 85230870
         BR    PL                  RETURN TO CALLER            @OZ29138 85230880
         SPACE 1                                               @OZ29138 85230890
         DROP  PW,R14                                          @OZ29138 85230900
         TITLE 'HASP PRINT/PUNCH SERVICE -- TYPE 6 SMF RECORD' @OZ32776 85240000
***************************************************************@OZ32776 85240010
*                                                              @OZ32776 85240020
*        PPSMF6 -- SUBROUTINE TO GENERATE TYPE 6 SMF RECORD    @OZ32776 85240030
*                                                              @OZ32776 85240040
*        PL  - RETURN ADDRESS                                  @OZ32776 85240050
*        R15 - ENTRY ADDRESS                                   @OZ32776 85240060
*                                                              @OZ32776 85240070
***************************************************************@OZ32776 85240080
         SPACE 1                                               @OZ32776 85240090
         USING SMFDSECT,R1         PROVIDE SMF ADDRESSABILITY  @OZ32776 85240400
         USING JCTDSECT,JCT        PROVIDE JCT ADDRESSABILITY  @OZ32776 85240600
         USING PPSMF6,BASE2        PROVIDE LOCAL ADDR'BILITY   @OZ32776 85240800
         SPACE 1                                               @OZ32776 85241000
PPSMF6   DS    0H                                              @OZ32776 85241200
         ST    BASE2,PDSVSAVE      SAVE BASE2                  @OZ32776 85241400
         ST    PL,PPLSAVE          SAVE RETURN ADDRESS         @OZ32776 85241600
         LR    BASE2,R15           LOAD BASE REGISTER          @OZ32776 85241800
         CLI   $NUMSMFB,2          TEST SMF BUFFER COUNT       @OZ32776 85242000
         BL    PPSMFRET            RETURN IF SMF NOT SUPPORTED @OZ32776 85242200
         L     JCT,PJCTBUF         ADDRESS JCT BUFFER          @OZ32776 85242400
         TM    JCTSMFLG,JCTNOTY6   SHOULD TYPE 6 BE BYPASSED...@OZ32776 85242600
         BO    PPSMFRET            RETURN IF YES               @OZ32776 85242800
         SPACE 1                                               @OZ32776 85243000
        $GETSMFB WAIT=YES          GET AN SMF BUFFER           @OZ32776 85243200
         SPACE 1                                               @OZ32776 85243400
***************************************************************@OZ32776 85243600
*                                                              @OZ32776 85243800
*        BUILD BASE SECTION                                    @OZ32776 85244000
*                                                              @OZ32776 85244200
***************************************************************@OZ32776 85244400
         XC    SMFRDW+2(SMF6END1-SMFRDW-2),SMFRDW+2 CLEAR REC  @OZ32776 85244600
         MVC   SMF6JBN,JCTJMRJN    JOBNAME               -JBN  @OZ32776 85244800
         MVC   SMF6RST(8),JCTRDRON RDR START TIME/DATE   -RST/D@OZ32776 85245000
         MVC   SMF6UIF,JCTUSEID    USER ID               -UIF  @OZ32776 85245200
         MVC   SMF6JNM,JCTJOBID+4  JOB NUMBER            -JNM  @OZ32776 85245400
         SPACE 1                                               @OZ32776 85245600
         L     PW,PWKJOE           CURRENT                     @OZ32776 85245800
         USING JOEDSECT,PW          SYSOUT                     @OZ32776 85246000
         MVC   SMF6OWC,JOECURCL      CLASS               -OWC  @OZ32776 85246200
         SPACE 1                                               @OZ32776 85246400
         L     PW,PCEDCT           PROVIDE DCT                 @OZ32566 85246600
         USING DCTDSECT,PW          ADDRESSABILITY             @OZ32776 85246800
         MVC   SMF6FMN,DCTFORMS    FORMS ID              -FMN  @OZ32776 85247000
         MVC   SMF6OUT,DCTDEVN     OUTPUT DEVICE NAME    -OUT  @OZ32776 85247200
         MVC   SMF6FCB,DCTFCB      FCB ID                -FCB  @OZ32776 85247400
         MVC   SMF6UCS,DCTUCS      UCS ID                -UCS  @OZ32776 85247600
         SPACE 1                                               @OZ32776 85247800
         MVC   SMF6WST(8),PTIMEON  PRPU START TIME/DATE  -WST/D@OZ32776 85248000
         MVC   SMF6NLR,PPLNCDCT    TOTAL RECORD COUNT    -NLR  @OZ32776 85248200
         MVC   SMF6PGE,PRPAGECT    TOTAL PAGE COUNT      -PGE  @OZ32776 85248400
         MVC   SMF6NDS,PPJNDS      DATA SET COUNT        -NDS  @OZ32776 85248600
         MVC   SMF6DCI(1),PSMFDCI  CONTROL INDICATORS    -DCI  @OZ32776 85248800
         TM    PPFLAG2,PSMFDSER    IF DATA                     @OZ32776 85249000
         BZ    SKIP440              BUFFER ERROR...            @OZ32776 85249200
         OI    SMF6IOE,SMFDSER       SET SMF IOE FLAG    -DSER @OZ32776 85249400
SKIP440  TM    PPFLAG,PPJCTIOT     IF CONTROL                  @OZ32776 85249600
         BNO   SKIP450              BUFFER ERROR...            @OZ32776 85249800
         OI    SMF6IOE,SMFCBER       SET SMF IOE FLAG    -CBER @OZ32776 85250000
         EJECT                                                 @OZ32776 85250200
***************************************************************@OZ32776 85250400
*                                                              @OZ32776 85250600
*        BUILD JES2-ONLY SECTION                               @OZ32776 85250800
*                                                              @OZ32776 85251000
***************************************************************@OZ32776 85251200
         SPACE 1                                               @OZ32776 85251400
SKIP450  MVC   SMF6RTE,DCTNO       DEVICE ROUTE CODE     -RTE  @OZ32776 85251600
         SPACE 1                                               @OZ32776 85251800
         LA    PC1,SMF6END1-SMF6LN1 LENGTH OF BASE             @OZ32776 85252000
         STH   PC1,SMF6LN1           AND JES2-ONLY SECT. -LN1  @OZ32776 85252200
         LA    LINK,SMF6END1-SMFRDW TOTAL LENGTH, SO FAR       @OZ32776 85252400
         SPACE 1                                               @OZ32776 85252600
***************************************************************@OZ32776 85252800
*                                                              @OZ32776 85253000
*        BUILD NON-IMPACT (3800) PRINTER SECTION               @OZ32776 85253200
*                                                              @OZ32776 85253400
***************************************************************@OZ32776 85253600
         SPACE 1                                               @OZ32776 85253800
         CLI   PDEVTYPE+3,UCB3800  NON-IMPACT PRINTER...       @OZ32776 85254000
         BNE   PPSMF6A             BR IF NOT                   @OZ32776 85254200
         SPACE 1                                               @OZ32776 85254400
         LA    PC1,SMF6LN1(PC1)    PROVIDE NON-IMPACT PRINTER  @OZ32776 85254600
         USING SMF6NIPX,PC1         SECTION ADDRESSABILITY     @OZ32776 85254800
         SPACE 1                                               @OZ32776 85255000
         MVC   SMF6CPS,PCOPYGRP    COPY GROUPS           -CPS  @OZ32776 85255200
         MVC   SMF6CHR(4*4),DCTCHAR1  MOVE CHARS,        -CHR  @OZ32776 85255400
         MVC   SMF6MID,DCTMODF         MODIFY, AND       -MID  @OZ32776 85255600
         MVC   SMF6FLI,DCTFLASH         FLASH TO TYPE 6  -FLI  @OZ32776 85255800
         LA    R15,SMF6CHR         POINT TO SMF FIELDS         @OZ32776 85256000
         LA    R0,4+1+1            CHAR1,2,3,4, MODIFY, FLASH  @OZ32776 85256200
         SPACE 1                                               @OZ32776 85256400
PPSMFLUP CLC   0(4,R15),=C'****'   TEST FOR NULL               @OZ32776 85256600
         BNE   *+10                LEAVE VALUE IF NO           @OZ32776 85256800
         MVC   0(4,R15),=C'    '    ELSE MOVE IN BLANKS        @OZ32776 85257000
         LA    R15,4(,R15)         INCR SMF FIELD ADDR         @OZ32776 85257200
         BCT   R0,PPSMFLUP         CHECK ALL VALUES            @OZ32776 85257400
*              THIS LINE DELETED BY APAR NUMBER                @OZ32776 85257600
         MVC   SMF6FLC,PFLASHC     COPY FLASH COUNT      -FLC  @OZ32776 85257800
         TM    DCTPPSW2,DCTNIBRS   SET                         @OZ32776 85258000
         BZ    SKIP460              BURST OR                   @OZ32776 85258200
         OI    SMF6BID,SMF6BTS       NOBURST             -BTS  @OZ32776 85258400
SKIP460  TM    PPFLAG2,PPOPTJ      SET                         @OZ32776 85258600
         BZ    SKIP470             DCB=OPTCD=J                 @OZ32776 85258800
         OI    SMF6BID,SMF6OPJ       SPECIFICATION       -OPJ  @OZ32776 85259000
         SPACE 1                                               @OZ32776 85259200
SKIP470  LA    R0,SMF6END2-SMF6LN2 LENGTH OF NON-              @OZ32776 85259400
         STH   R0,SMF6LN2           IMPACT PRINTER SECT. -LN2  @OZ32776 85259600
         OI    SMF6IND,SMF6FEXT    SHOW SECTION EXISTS   -IND  @OZ32776 85259800
         LA    LINK,SMF6END1-SMFRDW+SMF6END2-SMF6NIPX  NEW LEN @OZ32776 85260000
         SPACE 1                                               @OZ32776 85260200
         DROP  PC1           SUSPEND EXTENSION ADDRESSABILITY  @OZ32776 85260400
         EJECT                                                 @OZ32776 85260600
***************************************************************@OZ32776 85260800
*                                                              @OZ32776 85261000
*        SET HEADER INFORMATION AND QUEUE SMF BUFFER FOR WRITE @OZ32776 85261200
*                                                              @OZ32776 85261400
***************************************************************@OZ32776 85261600
         SPACE 1                                               @OZ32776 85261800
PPSMF6A  DS    0H                                              @OZ32776 85262000
         STH   LINK,SMFRDW         TOTAL RECORD LENGTH   -RDW  @OZ32776 85262200
         MVI   SMF6SBS+1,2         JES2 SUBSYSTEM ID     -SBS  @OZ32776 85262400
         MVI   SMFHDRTY,SMFOUTTP   SET RECORD ID TO 6    -HDRTY@OZ32776 85262600
         SPACE 1                                               @OZ32776 85262800
        $QUESMFB                   QUEUE TYPE 6 FOR WRITE      @OZ32776 85263000
PPSMFRET L     BASE2,PDSVSAVE      RESTORE BASE2               @OZ32776 85263200
         L     PL,PPLSAVE          RESTORE RETURN REGISTER     @OZ32776 85263400
         BR    PL                   AND RETURN TO CALLER       @OZ32776 85263600
         SPACE 1                                               @OZ32776 85263800
         DROP  R1,PW,BASE2         KILL SMF/DCT ADDRESSABILITY @OZ32776 85264000
         TITLE 'HASP PRINT/PUNCH SERVICE -- PDIR SUBROUTINE'        R41 85268500
*********************************************************************** 85268600
*                                                                     * 85268700
*        BUILD AND TPPUT A REMOTE SETUP HEADER (PDIR)                 * 85268800
*                                                                     * 85268900
*********************************************************************** 85269000
         SPACE 1                                                    R41 85269100
PPDIR    DS    0H                  REMOTE SETUP HEADER              R41 85269200
         USING PPDIR,BASE2         ESTABLISH ADDRESSABILITY         R41 85269300
         ST    BASE2,PDSVSAVE      SAVE OLD BASE2                   R41 85269400
         ST    PL,PPLSAVE          SAVE RETURN                      R41 85269500
         LR    BASE2,R15           LOAD BASE REGISTER               R41 85269600
         USING FMHDSECT-(BUFSTART-BUFDSECT),PBUF  ADDRESSABILITY    R41 85269700
         MVI   FMHLNGTH,FMHPDLPP   LENGTH OF PDIR TO BE SENT        R41 85269800
         MVI   FMHBYTE1,FMHTYPE2   SET PDIR TYPE INDICATOR          R41 85269900
         MVI   FMHSEL,1            SET SELECTION INDICATOR          R41 85270000
         MVC   FMHPDRID,PPDIRID    SET PDIR IDENTIFIER              R41 85270100
         SPACE 1                                                    R41 85270200
PPDDATE  MVC   FMHPDATE,=C'00/00/00' SET DEFAULT DATE               R41 85270300
         LA    LINK,PTIMEON        POINT TO PRINT TIME AND DATE     R41 85270400
PPDEXDA  UNPK  FMHPDATE+6(3),5(2,LINK) PUT YEAR IN PDIR             R41 85270500
         ZAP   PCCWORK(8),4(4,LINK) CONVERT                         R41 85270600
         SRP   PCCWORK,64-3,0        YEAR                           R41 85270700
         CVB   R1,PCCWORK             TO BINARY                     R41 85270800
         L     PW,=A(PYEARTAB)     COPY DATA CONVERSION TABLE  @OZ32776 85270900
         MVC   PMONTHS,0(PW)       FOR POSSIBLE UPDATE         @OZ32776 85270950
         SLR   R0,R0               CLEAR REGISTER                   R41 85271000
         LA    R0,3                PREPARE TEST FOR LEAP YEAR       R41 85271100
         NR    R0,R1               IF NOT LEAP YEAR                 R41 85271200
         BNZ   PPDCONV              USE TABLE AS IS                 R41 85271300
         MVI   PFEB,29             SET TABLE FOR LEAP YEAR          R41 85271400
PPDCONV  ZAP   PCCWORK(8),6(2,LINK)     CONVERT MONTH AND           R41 85271500
         CVB   R1,PCCWORK          DAY TO BINARY                    R41 85271600
         SLR   R0,R0               CLEAR REGISTER                   R41 85271700
         LA    PW,PMONTHS-4        PREPARE TO SCAN CONVERSION TABLE R41 85271800
         LA    PC1,0               START WITH MONTH 0               R41 85271900
PPDDTLP  LA    PC1,1(,PC1)         INCREMENT MONTH                  R41 85272000
         SR    R1,R0               CONVERT                          R41 85272100
         LA    PW,4(,PW)            FROM JULIAN                     R41 85272200
         IC    R0,0(,PW)             DATE TO                        R41 85272300
         CLR   R0,R1                  MONTH                         R41 85272400
         BL    PPDDTLP                 AND DAY                      R41 85272500
         CVD   PC1,PCCWORK         PREPARE MONTH                    R41 85272600
         UNPK  FMHPDATE(2),PCCWORK+6(2) PUT MONTH IN PDIR           R41 85272700
         OI    FMHPDATE+1,X'F0'    MAKE LAST CHARACTER PRINTABLE    R41 85272800
         CVD   R1,PCCWORK          PREPARE DAY                      R41 85272900
         UNPK  FMHPDATE+3(2),PCCWORK+6(2) PUT DAY IN PDIR           R41 85273000
         OI    FMHPDATE+4,X'F0'    MAKE LAST CHARACTER PRINTABLE    R41 85273100
         SPACE 1                                                    R41 85273200
PPDTIME  MVC   FMHPDTIM,=C'00.00.00' SET DEFAULT TIME               R41 85273300
         L     PC2,0(,LINK)        PREPARE TIME                     R41 85273400
         SLR   PC1,PC1              FOR DIVISION                    R41 85273500
         D     PC1,=A(60*60*100)   CALCULATE HOURS                  R41 85273600
         CVD   PC2,PCCWORK         PREPARE HOURS                    R41 85273700
         UNPK  FMHPDTIM(2),PCCWORK+6(2) PUT HOURS IN PDIR           R41 85273800
         OI    FMHPDTIM+1,X'F0'    MAKE UNITS DIGIT PRINTABLE       R41 85273900
         SRDL  PC1,32              PREPARE REMAINDER FOR DIVISION   R41 85274000
         D     PC1,=A(60*100)      CALCULATE MINUTES                R41 85274100
         CVD   PC2,PCCWORK         PREPARE MINUTES                  R41 85274200
         UNPK  FMHPDTIM+3(2),PCCWORK+6(2) PUT MINUTES IN PDIR       R41 85274300
         OI    FMHPDTIM+4,X'F0'    MAKE UNITS DIGIT PRINTABLE       R41 85274400
         CVD   PC1,PCCWORK         PREPARE SECONDS                  R41 85274500
         UNPK  FMHPDTIM+6(4),PCCWORK+5(3) PUT SECONDS IN PDIR       R41 85274600
         SPACE 1                                                    R41 85274700
PPDFROMS MVI   FMHPDFRM,C' '       CLEAR REST OF PDIR               R41 85274800
         MVC   FMHPDFRM+1(FMHPDEND-FMHPDFRM-1),FMHPDFRM             R41 85274900
         L     R1,PCEDCT           ADDRESS PRINTER DCT         @OZ32566 85275000
         USING DCTDSECT,R1                                          R41 85275100
         MVC   FMHPDFRM(4),DCTFORMS PUT FORMS IN PDIR               R41 85275200
         SPACE 1                                                    R41 85275300
PPDFCB   MVC   FMHPDFCB(4),DCTFCB  PUT FCB NAME IN PDIR             R41 85275400
         SPACE 1                                                    R41 85275500
PPDTRAIN MVC   FMHPDUCS(4),DCTUCS  PUT UCS NAME IN PDIR             R41 85275600
         SPACE 1                                                    R41 85275700
         DROP  R1                                                   R41 85275800
         SPACE 1                                                    R41 85275900
         L     R1,PPDSRCT                   CONVERT RECORD COUNT    R41 85276000
         CVD   R1,PCCWORK                    TO DECIMAL             R41 85276100
         MVC   FMHPDCNT,=X'4020202020202120'  AND EDIT              R41 85276200
         ED    FMHPDCNT,PCCWORK+4              INTO PDIR            R41 85276300
         SPACE 1                                                    R41 85276400
         MVC   FMHPDJOB,JCTJNAME   SET JOBNAME IN PDIR              R41 85276500
         SPACE 1                                                    R41 85276600
         SLR   PW,PW               COMPUTE                          R41 85276700
         SLR   R1,R1                NUMBER                          R41 85276800
         CLI   PPDIRID,X'01'         OF                             R41 85276900
         BE    PPDCOPY                REMAINING                     R41 85277000
         IC    PW,PPDSCPY              COPIES                       R41 85277100
         IC    R1,PPRCPYCT              MINUS                       R41 85277200
         SLR   PW,R1                     ONE                        R41 85277300
         BCTR  PW,0                       = ADDTIONAL COPIES        R41 85277400
         SPACE 1                                                    R41 85277500
PPDCOPY  CVD   PW,PCCWORK          CONVERT COPY COUNT TO DECIMAL    R41 85277600
         MVC   FMHPDCPY+2(6),=X'402020202120'  SET EDIT PATTERN     R41 85277700
         ED    FMHPDCPY+2(6),PCCWORK+5  EDIT COUNT INTO PDIR        R41 85277800
         SPACE 1                                                    R41 85277900
PPDPUT   LM    PC1,PC2,PDIRCCW     INITIALIZE                       R41 85278000
         ALR   PC1,PBUF             OUTPUT                          R41 85278100
         STM   PC1,PC2,POUTCCWA      CCW                            R41 85278200
         LA    R0,POUTCCWA         PICK UP ADDRESS OF CCW           R41 85278300
         L     R1,PCEDCT           PICK UP DCT ADDRESS         @OZ32566 85278400
         $EXTP PUT,(R1),(R0)       PASS CCW TO RTAM                 R41 85278500
         BNM   PPDEXIT             BR IF PDIR ACCEPTED              R41 85278600
         SPACE 1                                                    R41 85278700
         LA    PW,0                ELIMINATE PDIR ADDITIONAL COPIES R41 85278800
         B     PPDCOPY              AND RESEND PDIR                 R41 85278900
         SPACE 1                                                    R41 85279000
         SPACE 1                                                    R41 85279100
PPDEXIT  SLR   R1,R1               DECREMENT                        R41 85279200
         IC    R1,PPDSCPY           REMAINING                       R41 85279300
         SLR   R1,PW                 NUMBER                         R41 85279400
         STC   R1,PPDSCPY             OF COPIES                     R41 85279500
         L     BASE2,PDSVSAVE      RESTORE BASE2                    R41 85279600
         L     PL,PPLSAVE          RESET RETURN REGISTER            R41 85279700
         BR    PL                  RETURN                           R41 85279800
         SPACE 3                                                    R41 85279900
FMHPDLPP EQU   FMHPDSTP-FMHDSECT   LENGTH OF PDIR SENT BY HASPPRPU  R41 85280000
         SPACE 3                                                    R41 85280100
         USING BUFDSECT,PBUF       RE-ESTABLISH ADDRESSABILITY      R41 85280200
         EJECT                                                      R41 85280300
         LTORG                     SETUP HEADER LITERAL POOL        R41 85280400
         TITLE 'HASP PRINT/PUNCH SERVICE -- DEVICE SETUP VERIFICATION'  85280500
*********************************************************************** 85280600
*                                                                     * 85280700
*        DEVICE SETUP/VERIFICATION FOR PUNCHES AND IMPACT PRINTERS    * 85280800
*                                                                     * 85280900
*        PL  - RETURN ADDRESS                                         * 85281000
*                                                                     * 85281100
*********************************************************************** 85281200
         SPACE 1                                                     R4 85281300
PRPUDSV  DS    0H                                                    R4 85281400
         ST    BASE2,PDSVSAVE      SAVE BASE                         R4 85281500
         LR    BASE2,R15           SETUP LOCAL                       R4 85281600
         USING PRPUDSV,BASE2        ADDRESSABILITY                   R4 85281700
         CLI   PDEVTYPE+3,UCB3800  TEST FOR NON-IMPACT PRINTER       R4 85282000
         BNE   SKIP570             BRANCH IF NOT                     R4 85283000
         L     R15,=A(P3800DSV)    ELSE, GO TO 3800                  R4 85284000
         B     P3800DS              DEVICE SETUP VERIFICATION        R4 85285000
         SPACE 1                                                     R4 85286000
*********************************************************************** 85287000
*                                                                     * 85288000
*        DETERMINE IF AN OPERATOR MESSAGE IS NECESSARY                * 85289000
*                                                                     * 85290000
*********************************************************************** 85291000
         SPACE 1                                                     R4 85292000
SKIP570  ST    PL,PCERETN          SAVE RETURN ADDRESS               R4 85293000
         L     JCT,PJCTBUF         ADDRESS JCT BUFFER                R4 85294000
         USING JCTDSECT,JCT        ACTIVATE JCT ADDRESSABILITY       R4 85295000
         LR    PL,R1               COPY PARAMETER REGISTER           R4 85296000
         L     PC1,PCEDCT          ADDRESS PRINT/PUNCH DCT     @OZ32566 85297000
         STCM  PC1,7,BUFDCT+1      ENSURE CORRECT DCT ADDR IN BUFFER R4 85298000
         USING DCTDSECT,PC1        ACTIVATE DCT ADDRESSABILITY       R4 85299000
         NI    DCTPPSW,255-DCTPPSWO RESET OPERATOR $T ALLOWED        R4 85300000
         MVC   PCEFORM(12),DCTFORMS SAVE CURRENT DEVICE SETUP        R4 85301000
         SPACE 1                                                     R4 85302000
*********************************************************************** 85303000
*                                                                     * 85304000
*        CHECK FORMS                                                  * 85305000
*                                                                     * 85306000
*********************************************************************** 85307000
         SPACE 1                                                     R4 85308000
DSVFORM  DS    0H                                                    R4 85309000
         CLC   DCTFORMS,0(PL)      FORMS CHANGE                      R4 85310000
         BE    DSVFCB              BRANCH IF NO                      R4 85311000
         OI    DCTPPSW,DCTPPSWO    SET OPERATOR $T ALLOWED           R4 85312000
         MVC   DCTFORMS,0(PL)      NEW FORMS ID TO DCT               R4 85313000
         SPACE 1                                                     R4 85314000
*********************************************************************** 85315000
*                                                                     * 85316000
*        CHECK FCB AND INDEX                                          * 85317000
*                                                                     * 85318000
*********************************************************************** 85319000
         SPACE 1                                                     R4 85320000
DSVFCB   DS    0H                                                    R4 85321000
         TM    PCEID,PCEPUSID      IS THIS A PUNCH PROCESSOR         R4 85322000
         BO    DSVMSG              BRANCH IF YES                     R4 85323000
         TM    PRINDEX,X'C0'       WAS AN INDEX VALUE SUPPLIED       R4 85324000
         BZ    SKIP580             BRANCH IF NO - AVOID RELOAD       R4 85325000
         CLC   PRINDEX,DCTINDEX    DOES NEW INDEX = OLD              R4 85326000
SKIP580  BE    *+8                 BRANCH IF YES - AVOID RELOAD      R4 85327000
         OI    DCTPPSW,DCTPPSWC    SET FCB LOAD REQUIRED SW          R4 85328000
         CLC   DCTFCB,4(PL)        FCB CHANGE                        R4 85329000
         BE    DSVUCSB             BRANCH IF NO                      R4 85330000
         CLC   4(4,PL),=CL4'****'  IS STANDARD FCB REQUESTED         R4 85331000
         BNE   DSVFCB05            BRANCH IF NO                      R4 85332000
         TM    DCTPPSW,DCTPPSWB    IS DEVICE FCB STANDARD            R4 85333000
         BZ    DSVUCSB             BRANCH IF YES                     R4 85334000
         CLC   DCTFCB,$PRTFCB      IF INSTALLATION DEFAULT IS        R4 85335000
         BNE   DSVFCB05              CURRENTLY LOADED,               R4 85336000
         NI    DCTPPSW,X'FF'-DCTPPSWB RESET 'NON-STD' BIT            R4 85337000
         B     DSVUCSB               AND BRANCH TO TEST UCS          R4 85338000
         SPACE 1                                                     R4 85339000
DSVFCB05 DS    0H                                                    R4 85340000
         OI    DCTPPSW,DCTPPSWB+DCTPPSWC NON-STD+CARRIAGE LOAD       R4 85341000
         L     R0,4(,PL)           PICK UP REQUESTED FCB             R4 85342000
         CL    R0,=CL4'****'       CHECK FOR DEFAULT SPECIFICATION   R4 85343000
         BNE   SKIP590               SKIP IF NOT                     R4 85344000
         L     R0,$PRTFCB          REPLACE WITH DEFAULT NAME         R4 85345000
         NI    DCTPPSW,X'FF'-DCTPPSWB RESET 'NON-STANDARD' BIT       R4 85346000
SKIP590  ST    R0,DCTFCB           STORE FCB ID IN DCT               R4 85347000
         CLI   PDEVTYPE+3,X'09'    IS DEVICE 3211                    R4 85348000
         BE    DSVUCSB             BRANCH IF YES                     R4 85349000
         OI    DCTPPSW,DCTPPSWO    SET OPERATOR $T ALLOWED           R4 85350000
         SPACE 1                                                     R4 85351000
*********************************************************************** 85352000
*                                                                     * 85353000
*        CHECK UCS                                                    * 85354000
*                                                                     * 85355000
*********************************************************************** 85356000
         SPACE 1                                                     R4 85357000
DSVUCSB  DS    0H                                                    R4 85358000
         CLC   DCTUCS,8(PL)        UCSB CHANGE                       R4 85359000
         BE    DSVMSG              BRANCH IF NO                      R4 85360000
         CLC   8(4,PL),=CL4'****'  IS STANDARD UCS REQUESTED         R4 85361000
         BNE   DSVUCSB5            BRANCH IF NO                      R4 85362000
         TM    DCTPPSW,DCTPPSWU    IS DEVICE UCS STANDARD            R4 85363000
         BZ    DSVMSG              BRANCH IF YES                     R4 85364000
         CLC   DCTUCS,$PRTUCS      IF INSTALLATION DEFAULT IS        R4 85365000
         BNE   DSVUCSB5              CURRENTLY LOADED,               R4 85366000
         NI    DCTPPSW,X'FF'-DCTPPSWU RESET 'NON-STD' BIT            R4 85367000
         B     DSVMSG                AND BRANCH TO ISSUE MESSAGE     R4 85368000
DSVUCSB5 DS    0H                                                    R4 85369000
         OI    DCTPPSW,DCTPPSWO+DCTPPSWT+DCTPPSWU MSG+NONSTD+TRAIN   R4 85370000
         L     R0,8(,PL)           PICK UP REQUESTED UCS             R4 85371000
         CL    R0,=CL4'****'       CHECK FOR DEFAULT SPECIFICATION   R4 85372000
         BNE   SKIP600             SKIP IF NOT                       R4 85373000
         L     R0,$PRTUCS          REPLACE WITH DEFAULT NAME         R4 85374000
SKIP600  ST    R0,DCTUCS           STORE UCS ID IN DCT               R4 85375000
         EJECT                                                       R4 85376000
*********************************************************************** 85377000
*                                                                     * 85378000
*        ISSUE LOCAL OPERATOR SETUP MESSAGE                           * 85379000
*                                                                     * 85380000
*********************************************************************** 85381000
         SPACE 1                                                     R4 85382000
DSVMSG   DS    0H                                                    R4 85383000
*              THIS LINE DELETED BY APAR NUMBER                @OZ18398 85384000
*              THIS LINE DELETED BY APAR NUMBER                @OZ18398 85385000
         TM    PCEID,PCERJEID      TEST PROCESSOR TYPE              R41 85385200
         BZ    DSVMSG1             BR IF NOT REMOTE                 R41 85385400
         TM    MDCTFEAT,DCTPSHDR   IF A SETUP HEADER WILL BE SENT   R41 85385500
         BO    DSVEXIT             EXIT IF YES                 @OZ18398 85385600
DSVMSG1  TM    DCTPPSW,DCTPPSWO    SETUP MESSAGE REQUIRED...   @OZ18398 85385700
         BZ    DSVLUCSB            BRANCH IF NO                @OZ18398 85385800
         SPACE 1                                                     R4 85386000
        $MID   190                                                   R4 85387000
         SPACE 1                                                    R41 85387500
         MVC   BUFSTART+7(2),=X'190E' MOVE MESSAGE ID          @OZ18398 85388000
         MVC   BUFSTART+9(8),JCTJOBID   MOVE JOB NUMBER              R4 85389000
         MVI   BUFSTART+17,C' '         SPACE BEFORE JOB NAME        R4 85390000
         MVC   BUFSTART+18(8),JCTJNAME  MOVE JOB NAME                R4 85391000
         MVC   BUFSTART+26(54),=CL54' SETUP -- PRINTER1 -- F = FORM -- C85392000
               C = FCBI -- T = UCSI'    MOVE SETUP MESSAGE           R4 85393000
         MVC   BUFSTART+36(8),DCTDEVN   MOVE DEVICE NAME             R4 85394000
         MVC   BUFSTART+52(4),DCTFORMS  MOVE FORMS ID                R4 85395000
         MVC   BUFSTART+64(4),DCTFCB    MOVE FCB ID                  R4 85396000
         MVC   BUFSTART+76(4),DCTUCS    MOVE UCS ID                  R4 85397000
         LA    R0,73               LENGTH FOR PRINTER MESSAGE        R4 85398000
         TM    PCEID,PCEPRSID      TEST PROCESSOR TYPE               R4 85399000
         BO    *+8                 BRANCH IF PRINT                   R4 85400000
         LA    R0,49               LENGTH FOR PUNCH MESSAGE          R4 85401000
         LA    R15,DSVWTOA         POINT TO REG. $DOMACT $WTO LIST   JN 85403200
         TM    PCEID,PCERJEID      IF THIS IS A LOCAL DEVICE,        JN 85403300
         BZ    DSVWTO                GO ISSUE $WTO                   JN 85403400
         L     R1,DCTDCB           POINT TO RAT ENTRY                JN 85403500
         L     R1,MDCTRAT-DCTDSECT(,R1)  FOR THIS REMOTE             JN 85403600
         TM    RATCONF-RATDSECT(R1),RATCONFI IF 'INFO' SETUP         JN 85403700
         BZ    DSVWTO                NOT REQUESTED, GO ISSUE $WTO    JN 85403800
         LA    R15,DSVWTOI         POINT TO 'INFO' $DOMACT $WTO LIST JN 85403900
         SPACE 1                                                     JN 85404000
DSVWTO  $WTO   BUFSTART+7,(R0),MF=(E,0(,R15)) ISSUE LOCAL SETUP      JN 85404100
         TM    PCEID,PCERJEID      IS THIS A REMOTE TERMINAL         R4 85404200
         BZ    DSVSTOP             BR IF NOT                         R4 85405000
         TM    MDCTSTAT,DCTABORT   TEST RJE STATUS                   R4 85406000
         BO    DSVSTART            BR IF ABORTING                    R4 85407000
         EJECT                                                       R4 85408000
*********************************************************************** 85409000
*                                                                     * 85410000
*        ISSUE REMOTE TERMINAL OPERATOR SETUP MESSAGE                 * 85411000
*                                                                     * 85412000
*********************************************************************** 85413000
         SPACE 1                                                     R4 85414000
         ST    R1,PPLC             SAVE $DOM CMB ADDRESS             R4 85415000
         LA    R0,73               LENGTH FOR PRINTER MESSAGE        R4 85416000
         TM    PCEID,PCEPRSID      TEST PROCESSOR TYPE               R4 85417000
         BO    SKIP610             BRANCH IF PRINT                   R4 85418000
         LA    R0,49               LENGTH FOR PUNCH MESSAGE          R4 85419000
SKIP610  L     R1,DCTDCB           ADDRESS LINE DCT                  R4 85420000
         L     R1,MDCTRAT-DCTDSECT(,R1) ADDRESS REMOTE CONSOLE       R4 85421000
         ICM   R0,2,RATCONRT+1-RATDSECT(R1) GET CONSOLE ROUTE CODE   R4 85422000
        $WTO   BUFSTART+7,(R0),JOB=NO,  ISSUE REMOTE SETUP           R4C85423000
               RMT=YES,CLASS=$ACTION,PRI=$ST                         R4 85424000
         TM    PCEID,PCEPUSID      TEST PROCESSOR TYPE               R4 85425000
         BO    DSVBFLSH            BRANCH IF REMOTE PUNCH            R4 85426000
         LM    PC1,PC2,PRCCWEJ     LOAD EJECT CCW                    R4 85427000
         BAL   PL,PPPUT            SEND CCW TO REMOTE                R4 85428000
         MVC   BUFSTART(9),=C'$HASP190 '  MOVE MESSAGE ID            R4 85429000
         LA    PC1,BUFSTART        SET MESSAGE ADDRESS               R4 85430000
         LA    PC2,80               AND LENGTH                       R4 85431000
         TM    $RUNOPTS,$MSGID     IF MESSAGE IDS REQUIRED,          R4 85432000
         BO    SKIP620              BR TO SET COMMAND TYPE           R4 85433000
         MVI   BUFSTART+7,C'$'       ELSE RESET MESSAGE ID,          R4 85434000
         LA    PC1,BUFSTART+7         MESSAGE ADDRESS,               R4 85435000
         LA    PC2,73                  AND MESSAGE LENGTH            R4 85436000
SKIP620  ICM   PC1,8,=X'71'        SET COMMAND TYPE                  R4 85437000
         BAL   PL,PPPUT2           SEND CCW TO REMOTE                R4 85438000
         SPACE 1                                                     R4 85439000
*********************************************************************** 85440000
*                                                                     * 85441000
*        ENSURE THAT REMOTE TERMINAL BUFFER IS FLUSHED                * 85442000
*                                                                     * 85443000
*********************************************************************** 85444000
         SPACE 1                                                     R4 85445000
DSVBFLSH DS    0H                                                    R4 85446000
         ICM   PC1,8,=X'FF'        BUFFER FLUSH COMMAND              R4 85447000
         BAL   PL,PPPUT2           SEND CCW TO REMOTE                R4 85448000
         L     R1,PPLC             RESTORE $DOM CMB ADDRESS          R4 85449000
         L     PC1,PCEDCT          ADDRESS PRINT/PUNCH DCT     @OZ32566 85450000
         EJECT                                                       R4 85451000
*********************************************************************** 85452000
*                                                                     * 85453000
*        WAIT FOR OPERATOR ACTION                                     * 85454000
*                                                                     * 85455000
*********************************************************************** 85456000
         SPACE 1                                                     R4 85457000
DSVSTOP  OI    DCTFLAGS,DCTSTOP    STOP THE DEVICE                   R4 85458000
         SPACE 1                                                     R4 85459000
DSVWAIT  TM    DCTFLAGS,DCTSTOP    TEST FOR $S DEVICE                R4 85460000
         BZ    DSVSTART            BRANCH IF TRUE START              R4 85461000
         NI    DCTFLAGS,255-DCTDELET-DCTRSTRT-DCTBKSP RESET             85462000
        $WAIT  IO                  WAIT FOR A POST FROM COMM         R4 85463000
         B     DSVWAIT             TEST FOR $S DEVICE                R4 85464000
DSVSTART DS    0H                                                    R4 85465000
         LTR   R1,R1               BRANCH AROUND IF                  R4 85466000
         BZ    DSVNODOM              NOTHING TO $DOM                 R4 85467000
        $DOM   CMB=(R1)            DELETE THE MESSAGE                R4 85468000
DSVNODOM DS    0H                                                    R4 85469000
         TM    DCTFLAGS,DCTDELET+DCTRSTRT $C OR $E OR $I             R4 85470000
         BZ    DSVLUCSB            BRANCH IF NO                      R4 85471000
         OI    PPFLAG,PPDELSW+PRDELSW  CAUSE DATA SET TERMINATION    R4 85472000
         OC    PDCTFLAG,DCTFLAGS   PROVIDE REASON FOR TERMINATION    R4 85473000
         NI    DCTFLAGS,255-DCTDELET-DCTRSTRT-DCTBKSP  RESET DCT     R4 85474000
         MVC   DCTFORMS(12),PCEFORM REVERT TO PREVIOUS SETUP         R4 85475000
         TM    PCEID,PCERJEID      TEST FOR REMOTE                   R4 85476000
         BZ    DSVLUCSB            BR IF NOT                         R4 85477000
         TM    MDCTSTAT,DCTABORT   TEST FOR REMOTE ABORTING          R4 85478000
         BO    DSVEXIT             EXIT IF YES                       R4 85479000
         EJECT                                                       R4 85480000
*********************************************************************** 85481000
*                                                                     * 85482000
*        LOAD UCSB IF SUPPORTED BY DEVICE                             * 85483000
*                                                                     * 85484000
*********************************************************************** 85485000
         SPACE 1                                                     R4 85486000
DSVLUCSB DS    0H                                                    R4 85487000
         NI    DCTPPSW,255-DCTPPSWO $T NOT ALLOWED                   R4 85488000
         TM    PCEID,PCEPUSID      TEST PROCESSOR ID                 R4 85489000
         BO    DSVEXIT             BRANCH IF PUNCH                   R4 85490000
         LM    PC1,PC2,PRCCWEJ     GET EJECT CCW                     R4 85491000
         BAL   PL,PPPUT            ADD TO CHAIN                      R4 85492000
         BAL   PL,PPWRITE          STAGE WRITE                       R4 85493000
         BAL   PL,PPCHECK          CHECK WRITE                       R4 85494000
         L     PC1,PCEDCT          ADDRESS PRINT/PUNCH DCT     @OZ32566 85495000
         TM    PDEVTYPE+1,X'80'    TEST UCSB OPTION FIELD            R4 85496000
         BZ    DSVLFCB             BRANCH IF NOT SUPPORTED           R4 85497000
         TM    DCTPPSW,DCTPPSWT    UCSB LOAD REQUIRED                R4 85498000
         BZ    DSVLFCB             BRANCH IF NO                      R4 85499000
         NI    DCTPPSW,255-DCTPPSWT RESET TRAIN LOAD BIT             R4 85500000
         CLC   DCTUCS,=C'0   '     IS UCS = 0 REQUESTED              R4 85501000
         BE    DSVLFCB             BRANCH IF YES - SKIP UCS LOAD     R4 85502000
         MVC   BUFSTART(4),=X'0001003A' BLDL PARAMETER LIST          R4 85503000
         MVC   BUFSTART+4(4),=C'UCS1' IMAGE PREFIX FOR 1403 UCS      R4 85504000
         MVC   BUFSTART+8(4),DCTUCS USER UCS IMAGE ID                R4 85505000
         CLI   PDEVTYPE+3,X'08'    IS THIS A 1403                    R4 85506000
         BE    DSVUCS01            BRANCH IF YES                     R4 85507000
         MVI   BUFSTART+7,C'2'     IMAGE PREFIX FOR 3211 UCS         R4 85508000
DSVUCS01 DS    0H                  *                                 R4 85509000
         TM    $IMAGECB,X'40'      IS IMAGE LOADER TASK BUSY         R4 85510000
         BNO   DSVUCS02            BRANCH IF NO                      R4 85511000
        $WAIT  IMAG                WAIT FOR IMAGE TASK TO $$POST     R4 85512000
         B     DSVUCS01            TRY AGAIN                         R4 85513000
DSVUCS02 DS    0H                  *                                 R4 85514000
         MVI   BUFECBCC,X'80'      SET BUFFER ECB AS WAITING         R4 85515000
         POST  $IMAGECB,(R3)       POST WITH BUFFER ADDRESS          R4 85516000
DSVUCS03 DS    0H                  *                                 R4 85517000
        $WAIT  IMAG                WAIT FOR IMAGE TASK TO $$POST     R4 85518000
         TM    BUFECBCC,X'7F'      TEST STATUS OF LOAD REQUEST       R4 85519000
         BZ    DSVUCS03            BRANCH IF NOT COMPLETE            R4 85520000
         BM    DSVUCSNO            BRANCH IF IMAGE NOT FOUND         R4 85521000
         L     R15,PRPUUCB         ADDRESS PRINTER UCB               R4 85522000
         USING UCBDSECT,R15        ACTIVATE UCB ADDRESSABILITY       R4 85523000
         L     R15,UCBXTADR        ADDRESS UCB EXTENSION             R4 85524000
         USING UCBUCS,R15          UCB EXTENSION ADDRESSABILITY      R4 85525000
        MODESET EXTKEY=ZERO        GET ZERO KEY TO CHANGE THE UCB    R4 85526000
         OI    UCBUCSOP,UCBUCSO1+UCBUCSO2  SET DEFAULT UCS AND FOLD R41 85527000
         NI    DCTPPSW,255-DCTPPSWU RESET NON-STANDARD UCS FLAG      R4 85528000
         TM    BUFSTART,X'80'      STANDARD UCS IMAGE...            R41 85529000
         BO    DSVSETU             BR IF YES                        R41 85530000
         OI    DCTPPSW,DCTPPSWU    SET NON-STANDARD UCS FLAG         R4 85531000
         NI    UCBUCSOP,255-UCBUCSO1 RESET DEFAULT UCS IMAGE FLAG    R4 85532000
DSVSETU  MVC   UCBUCSID,DCTUCS     SET UCS IMAGE ID IN UCB          R41 85533000
         TM    BUFSTART,X'40'      FOLD THE UCS IMAGE...            R41 85533200
         BO    DSVKEY              BR IF YES                        R41 85533300
         NI    UCBUCSOP,255-UCBUCSO2  ELSE, RESET UCS FOLD BIT      R41 85533400
DSVKEY   MODESET EXTKEY=HASP       RETURN TO NORMAL HASP KEY        R41 85534000
         DROP  R15                 SUSPEND UCB EXTENSION BASE        R4 85535000
         LM    PC1,PC2,PUNFOLD     3211 UNFOLD CONTROL CCW           R4 85536000
         TM    BUFSTART,X'40'      FOLD THE UCS IMAGE...            R41 85536100
         BZ    DSVC3211            BR IF NO                         R41 85536200
         ICM   PC1,8,=X'43'         ELSE REPLACE CC WITH 3211 FOLD  R41 85536300
DSVC3211 CLI   PDEVTYPE+3,UCB3211  IS DEVICE A 3211...              R41 85537000
         BE    DSVUCS04            BR IF YES                        R41 85538000
         LM    PC1,PC2,PUCSGATE    1403 UCS GATE CCW                 R4 85539000
         SPACE 1                                                    R41 85539500
DSVUCS04 BAL   PL,PPPUT2           ADD CCW TO CHAIN                 R41 85540000
         SPACE 1                                                    R41 85541000
         LM    PC1,PC2,PUCSBDC     BLOCK DATA CHECK CCW              R4 85542000
         BAL   PL,PPPUT2           ADD CCW TO CHAIN                  R4 85543000
         LM    PC1,PC2,PUCSLOAD    LOAD UCSB CCW                     R4 85544000
         ALR   PC1,PBUF            ADJUST DATA ADDRESS               R4 85545000
         CLI   PDEVTYPE+3,UCB1403  TEST DEVICE TYPE                  R4 85546000
         BE    DSVC1403            BR IF 1403                       R41 85547000
         AH    PC2,=H'272'         ADDITIONAL UCSB LENGTH FOR 3211   R4 85548000
         B     DSVUCPUT            BR TO CONTINUE                   R41 85548500
         SPACE 1                                                    R41 85549000
DSVC1403 TM    BUFSTART,X'40'      FOLD THE UCS IMAGE...            R41 85549100
         BZ    DSVUCPUT            BR IF NO                         R41 85549200
         ICM   PC1,8,=X'F3'         ELSE REPLACE CC WITH 1403 FOLD  R41 85549300
         SPACE 1                                                    R41 85549400
DSVUCPUT BAL   PL,PPPUT2           ADD CCW TO CHAIN                 R41 85549500
         BAL   PL,PPWRITE           INITIATE WRITE                   R4 85550000
         BAL   PL,PPCHECK           AND CHECK                        R4 85551000
         L     PC1,PCEDCT          ADDRESS PRINT/PUNCH DCT     @OZ32566 85552000
         B     DSVLFCB             GO LOAD FCB IMAGE                 R4 85553000
DSVUCSNO DS    0H                  *                                 R4 85554000
        $MID   180                                                   R4 85555000
         MVC   BUFSTART(2),=X'180F' MOVE MESSAGE NUMBER              R4 85556000
         MVC   BUFSTART+2(8),DCTDEVN MOVE DEVICE NAME                R4 85557000
         MVC   BUFSTART+10(26),=CL26' FCB  IMAGE XXXX NOT FOUND'     R4 85558000
         MVC   BUFSTART+11(4),=C'UCSB' MOVE BUFFER ID                R4 85559000
         MVC   BUFSTART+22(4),DCTUCS MOVE UCS ID                     R4 85560000
        $WTO   BUFSTART,36,JOB=YES, ISSUE BUFFER LOAD FAIL MSG       R4C85561000
               ROUTE=$LOG+$UR,CLASS=$ACTION,PRI=$ST                  R4 85562000
         OI    DCTPPSW,DCTPPSWT+DCTPPSWO LOAD UCS + MSG              R4 85563000
         B     DSVMSG              GO PRINT SETUP MESSAGE            R4 85564000
         EJECT                                                       R4 85565000
*********************************************************************** 85566000
*                                                                     * 85567000
*        LOAD FCB IF SUPPORTED BY DEVICE                              * 85568000
*                                                                     * 85569000
*********************************************************************** 85570000
         SPACE 1                                                     R4 85571000
DSVLFCB  DS    0H                                                    R4 85572000
         TM    DCTPPSW,DCTPPSWC    FCB LOAD REQUIRED                 R4 85573000
         BZ    DSVEXIT             BRANCH IF NO                      R4 85574000
         NI    DCTPPSW,255-DCTPPSWC RESET CARRIAGE LOAD BIT          R4 85575000
         TM    PCEID,PCERJEID      TEST PROCESSOR TYPE              R41 85575200
         BZ    DSVFCB00            BR IF NOT REMOTE                 R41 85575400
*              THIS LINE DELETED BY APAR NUMBER                @OZ18398 85575500
*              THIS LINE DELETED BY APAR NUMBER                @OZ18398 85575600
         SPACE 1                                                    R41 85575800
DSVFCB00 CLI   PDEVTYPE+3,UCB1403  TEST DEVICE TYPE                 R41 85576000
         BE    DSVEXIT             BRANCH IF 1403                    R4 85577000
         MVC   BUFSTART(4),=X'0001003A' BLDL PARAMETER LIST          R4 85578000
         MVC   BUFSTART+4(4),=C'FCB2' IMAGE PREFIX FOR 3211 FCB      R4 85579000
         MVC   BUFSTART+8(4),DCTFCB USER FCB IMAGE ID                R4 85580000
DSVFCB01 DS    0H                  *                                 R4 85581000
         TM    $IMAGECB,X'40'      IS IMAGE LOADER TASK BUSY         R4 85582000
         BNO   DSVFCB02            BRANCH IF NO                      R4 85583000
        $WAIT  IMAG                WAIT FOR IMAGE TASK TO $$POST     R4 85584000
         B     DSVFCB01            TRY AGAIN                         R4 85585000
DSVFCB02 DS    0H                  *                                 R4 85586000
         MVI   BUFECBCC,X'80'      SET BUFFER ECB AS WAITING         R4 85587000
         POST  $IMAGECB,(R3)       POST WITH BUFFER ADDRESS          R4 85588000
DSVFCB03 DS    0H                  *                                 R4 85589000
        $WAIT  IMAG                WAIT FOR IMAGE TASK TO $$POST     R4 85590000
         TM    BUFECBCC,X'7F'      TEST STATUS OF LOAD REQUEST       R4 85591000
         BZ    DSVFCB03            BRANCH IF NOT COMPLETE            R4 85592000
         BM    DSVFCBNO            BRANCH IF IMAGE NOT FOUND         R4 85593000
         TM    PCEID,PCERJEID      TEST PROCESSOR TYPE               R4 85594000
         BO    DSVFCBRJ            BRANCH IF REMOTE                  R4 85595000
         L     R15,PRPUUCB         ADDRESS PRINTER UCB               R4 85596000
         USING UCBDSECT,R15        ACTIVATE UCB ADDRESSABILITY       R4 85597000
         L     R15,UCBXTADR        ADDRESS UCB EXTENSION             R4 85598000
         USING UCBUCS,R15          UCB EXTENSION ADDRESSABILITY      R4 85599000
        MODESET EXTKEY=ZERO        GET ZERO KEY TO CHANGE THE UCB    R4 85600000
         OI    UCBFCBOP,UCBFCBO1   SET DEFAULT FCB IMAGE FLAG        R4 85601000
         TM    BUFSTART,X'80'      IS THIS A STANDARD FCB IMAGE      R4 85602000
         BO    SKIP660             BRANCH IF YES                     R4 85603000
         NI    UCBFCBOP,255-UCBFCBO1 RESET DEFAULT FCB IMAGE FLAG    R4 85604000
SKIP660  MVC   UCBFCBID,DCTFCB     COPY FCB IMAGE ID TO THE UCB      R4 85605000
        MODESET EXTKEY=HASP        RETURN TO NORMAL HASP KEY         R4 85606000
         DROP  R15                 SUSPEND UCB EXTENSION BASE        R4 85607000
DSVFCBRJ DS    0H                                                    R4 85608000
         NI    DCTPPSW,255-DCTPPSWB RESET NON-STANDARD FCB FLAG      R4 85609000
         TM    BUFSTART,X'80'      IS THIS A STANDARD FCB IMAGE      R4 85610000
         BO    SKIP670             BRANCH IF YES                     R4 85611000
         OI    DCTPPSW,DCTPPSWB    SET NON-STANDARD FCB FLAG         R4 85612000
SKIP670  TM    PRINDEX,X'C0'       SPECIFIC INDEX REQUESTED          R4 85613000
         BZ    DSVFCB04            BRANCH IF NO                      R4 85614000
         CLC   PRINDEX,BUFSTART+2  IS IMAGE INDEX BEING CHANGED      R4 85615000
         BE    DSVFCB04            BRANCH IF NO                      R4 85616000
         OI    DCTPPSW,DCTPPSWC    SET LOAD FCB FLAG                 R4 85617000
         MVC   BUFSTART+2(1),PRINDEX SET 3211 INDEX VALUE            R4 85618000
DSVFCB04 DS    0H                  *                                 R4 85619000
         MVC   DCTINDEX,BUFSTART+2 SAVE NEW INDEX VALUE              R4 85620000
         LM    PC1,PC2,PFCBLOAD    LOAD FCB CCW                      R4 85621000
         ALR   PC1,PBUF            ADJUST DATA ADDRESS               R4 85622000
         IC    PC2,BUFSTART+1      GET LENGTH OF FCB IMAGE           R4 85623000
         TM    PCEID,PCERJEID      TEST PROCESSOR TYPE               R4 85624000
         BZ    SKIP680             BRANCH IF LOCAL                   R4 85625000
         ICM   PC1,8,=X'61'        SET SPECIAL RJE FCB CC            R4 85626000
SKIP680  BAL   PL,PPPUT2           ADD CCW TO CHAIN                  R4 85627000
         BAL   PL,PPWRITE           INITIATE WRITE                   R4 85628000
         BAL   PL,PPCHECK           AND CHECK                        R4 85629000
         B     DSVEXIT             RETURN TO CALLER                  R4 85630000
DSVFCBNO DS    0H                  *                                 R4 85631000
        $MID   180                                                   R4 85632000
         MVC   BUFSTART(2),=X'180F' MOVE MESSAGE NUMBER              R4 85633000
         MVC   BUFSTART+2(8),DCTDEVN MOVE DEVICE NAME                R4 85634000
         MVC   BUFSTART+10(26),=CL26' FCB  IMAGE XXXX NOT FOUND'     R4 85635000
         MVC   BUFSTART+22(4),DCTFCB MOVE FCB ID                     R4 85636000
        $WTO   BUFSTART,36,JOB=YES, ISSUE BUFFER LOAD FAIL MSG       R4C85637000
               ROUTE=$LOG+$UR,CLASS=$ACTION,PRI=$ST                  R4 85638000
         OI    DCTPPSW,DCTPPSWC+DCTPPSWO SET LOAD AND MSG REQD       R4 85639000
         B     DSVMSG              GO PRINT SETUP MESSAGE            R4 85640000
         SPACE 2                                                     R4 85641000
DSVEXIT  DS    0H                                                    R4 85642000
         L     PL,PCERETN          RESTORE RETURN ADDRESS            R4 85643000
         L     BASE2,PDSVSAVE      RESTORE BASE2                     R4 85644000
         BR    PL                  RETURN TO CALLER                  R4 85645000
         DROP  PC1                 SUSPEND DCT ADDRESSABILITY        R4 85646000
         EJECT                                                       JN 85646200
*        PARM LISTS FOR LOCAL SETUP $WTO'S                          R41 85646300
         SPACE 4                                                    R41 85646400
         DS    0F                                                   R41 85646500
DSVWTOA $WTO   JOB=NO,             ACTION-TYPE MESSAGE,             R41C85646600
               ROUTE=$LOG+$UR,      DISPLAYABLE VIA '$DO'           R41C85646700
               CLASS=$DOMACT,                                       R41C85646800
               PRI=$ST,                                             R41C85646900
               MF=L                                                 R41 85647000
         SPACE 3                                                    R41 85647100
DSVWTOI $WTO   JOB=NO,             INFO-TYPE MESSAGE,               R41C85647200
               ROUTE=$LOG+$UR,      DISPLAYABLE VIA '$DO'           R41C85647300
               CLASS=$DOMACT+$NORMAL,                               R41C85647400
               PRI=$ST,                                             R41C85647500
               MF=L                                                 R41 85647600
         TITLE ' HASP PRINT/PUNCH SERVICE -- 3800 DEVICE SETUP'      R4 85647700
P3800DSV DS    0H                  ENTRY TO 3800 DEVICE SETUP        R4 85648000
         ST    BASE2,PDSVSAVE      SAVE BASE                         R4 85649000
         SPACE 1                                                     R4 85650000
         USING SPPARM-(BUFSTART-BUFDSECT),PBUF SPPARM ADDRESSABILITY R4 85651000
         SPACE 1                                                     R4 85652000
P3800DS  ST    PL,PCESAVEA         SAVE RETURN ADDRESS               R4 85653000
         LR    BASE2,R15           ESTABLISH LOCAL                   R4 85654000
         USING P3800DSV,BASE2       ADDRESSABILITY                   R4 85655000
         USING DCTDSECT,PC1        ESTABLISH DCT ADDRESSABILITY      R4 85656000
         L     PC1,PCEDCT          ADDRESS 3800 DCT            @OZ32566 85657000
         STCM  PC1,7,BUFDCT+1-BUFDSECT(PBUF)   PLACE DCT ADDR IN BUF R4 85658000
         USING UCB3800X,PC2        ESTABLISH 3800 UCB                R4 85659000
         L     PC2,PRPUUCB             EXTENSION                     R4 85660000
         L     PC2,UCBXTADR-UCBDSECT(,PC2) ADDRESSABILITY            R4 85661000
         L     JCT,PJCTBUF         ESTABLISH JCT                     R4 85662000
         USING JCTDSECT,JCT         ADDRESSABILITY                   R4 85663000
*                                                                    R4 85664000
*        CLEAR SETPRT PARMLIST AND WORKAREA - SAVE DCT STATUS        R4 85665000
*                                                                    R4 85666000
         XC    SPPARM(SPWSAVE1-SPPARM),SPPARM  INITIALIZE AREA       R4 85667000
         TM    DCTPPSW2,DCTNINIT   DOES 3800 NEED INITIALIZATION...  R4 85668000
         BZ    SPRXMIT             BR IF NO                          R4 85669000
         OI    SPWFLAG,SPWINIT+SPWSETP  TELL SETPRT                  R4 85670000
         NI    DCTPPSW2,255-DCTNINIT  RESET UNTIL $DRAINED           R4 85671000
         MVC   DCTCHAR1,DCTUCS     PRESET                           R41 85672000
         MVI   DCTCHAR2,C'*'        DCT FIELDS                      R41 85672500
         MVC   DCTCHAR2+1(5*4-1),DCTCHAR2  (CHARS,FLASH,MODIFY)     R41 85673000
         XC    PREVCPYS(2),PREVCPYS  AND PREV. START AND # OF COPIES R4 85674000
         SPACE 1                                                     R4 85675000
SPRXMIT  DS    0H                                                    R4 85676000
         TM    SPFLAG,SPREXMIT     TEST FOR RE-TRANSMISSION          R4 85677000
         BO    SPRRXMIT            BR IF YES                         R4 85678000
         MVC   SPWFORMS(3*4),DCTFORMS SAVE FORMS, FCB, DEFAULT CHAR1 R4 85679000
         MVC   SPWCHAR1(4*4),DCTCHAR1 SAVE CHAR1,2,3,4 VALUES        R4 85680000
         TM    DCTPPSW2,DCTNIBRS   SAVE DCT                          R4 85681000
         BZ    SKIP690              BURSTER                          R4 85682000
         OI    SPWFLAG,SPWDCTB       STATUS                          R4 85683000
         SPACE 3                                                     R4 85684000
SKIP690  CLC   DCTFORMS,SPFORMS    TEST FOR FORMS CHANGE             R4 85685000
         BE    SPRFCB              BR IF NO                          R4 85686000
         OI    SPWFLAG,SPWWTO      INDICATE SETUP MSG NEEDED         R4 85687000
         MVC   DCTFORMS,SPFORMS    MOVE IN NEW FORMS ID              R4 85688000
         SPACE 1                                                     R4 85689000
SPRFCB   DS    0H                                                    R4 85690000
         CLI   SPFCB,C'*'          TEST FOR DEFAULT REQUEST          R4 85691000
         BNE   SKIP700             BR IF NO                          R4 85692000
         MVC   SPFCB,PRDFCB        ELSE, USE INSTALLATION DEFAULT    R4 85693000
SKIP700  CLC   DCTFCB,SPFCB        TEST FOR FCB CHANGE               R4 85694000
         BE    SPRCHARS            BR IF NO                          R4 85695000
         MVC   DCTFCB,SPFCB        MOVE IN NEW FCB IMAGE ID          R4 85696000
         EJECT                                                       R4 85697000
*        SETUP CHARACTER SETS (CHARS) REQUEST                       R41 85697100
*                                                                   R41 85697200
*        THIS SECTION BUILDS THE CHAR SET REQUEST USING THE         R41 85697300
*        SETUP PARMLIST (SPCHAR1-4.) IF ROOM PERMITS, THE DE-       R41 85697400
*        FAULT CHAR (DCTUCS) IS ADDED TO THE LIST.  FOR EACH        R41 85697500
*        CHAR, DCTCHAR'S FIELDS ARE SEARCHED TO DETERMINE IF IT     R41 85697600
*        IS ALREADY LOADED. IF NOT, THE NEW REQUESTS REPLACE        R41 85697700
*        THE OLD SETUP. IF ALREADY LOADED, THE CCW OP-CODE TO       R41 85697800
*        SELECT THE CORRESPONDING TANSLATE TABLE IS RECORDED        R41 85697900
*        IN THE 'PXTABCCW' TABLE ENTRY FOR THAT CHAR.               R41 85698000
*        THE FINAL TABLE REPRESENTS A MAPPING OF THE REQUESTED      R41 85698100
*        CHARACTER SETS TO THEIR ACTUAL POSITIONS IN THE 3800,      R41 85698200
*        ELIMINATING UNNECESSARY RE-LOADS DUE TO CHARACTER          R41 85698300
*        SET POSITIONS.                                             R41 85698400
         SPACE 1                                                    R41 85698500
SPRCHARS MVC   PXTABCCW,SPRXCCWS   INITIALIZE CCW OP-CODE TABLE     R41 85699000
         TM    SPFLAG,SPSEP        SETUP FOR SEPARATORS...          R41 85699100
         BZ    SPRCNSEP            BR IF NOT                        R41 85699200
         MVI   PRMAXTRC,0          ONLY USE 1 CHAR SET              R41 85699300
         BAL   PL,SPRTDFLT         DEFAULT CHAR SET LOADED...       R41 85699400
         BNZ   SPRCNDEF            BR IF NOT                        R41 85699500
         MVC   PXTABCCW(1),0(PW)    ELSE SET CCW FOR DEFAULT        R41 85699600
         B     SPRFLASH              AND BR TO CONTINUE             R41 85699700
         SPACE 1                                                    R41 85699800
SPRCNDEF TM    DCTPPSW2,DCTSEPNL   MUST LOAD DEFAULT FOR SEP...     R41 85699900
         BZ    SPRCHDEF            BR IF YES                        R41 85700000
         B     SPRFLASH             ELSE USE 1ST CHAR SET           R41 85700100
         SPACE 1                                                    R41 85700200
SPRCNSEP CLI   SPCHAR1,C'*'        WAS CHARS SPECIFIED...           R41 85700300
         BNE   SPRCH1              BR IF YES                        R41 85700400
         SPACE 1                                                    R41 85700500
SPRCHDEF MVC   SPCHAR1,DCTUCS      USE JES2 PRINTER DEFAULT         R41 85700600
         MVC   SPCHAR2,=C'****'    CLEAR CHAR2                 @OZ28970 85700640
         MVC   SPCHAR3(2*4),SPCHAR2 CHAR3 AND CHAR4            @OZ28970 85700680
         SPACE 1                                                    R41 85700700
SPRCH1   SLR   R1,R1               ONLY BUILD                       R41 85700800
         IC    R1,PRMAXTRC          ENTRIES FOR                     R41 85701800
         LA    R1,1(,R1)             REQUESTED CHARS                R41 85702000
         LA    PL,PXTABCCW         ADDR OF CCW TABLE                R41 85702200
         LA    R14,SPCHAR1         ADDR OF CHARS REQUEST            R41 85702400
         SPACE 1                                                    R41 85702600
SPRCH2   LA    R15,DCTCHAR1        ADDR OF CURRENT CHARS LOADED     R41 85702800
         LA    R0,4                SET LOOP COUNTER                 R41 85703000
         SPACE 1                                                    R41 85703200
SPRCH3   CLC   0(4,R14),0(R15)     THIS CHAR ALREADY LOADED...      R41 85703400
         BE    SPRCH4              BR IF YES                        R41 85703600
         LA    R15,4(,R15)          ELSE CHECK WITH NEXT            R41 85703800
         BCT   R0,SPRCH3             CHAR ALREADY LOADED            R41 85704000
         SPACE 1                                                    R41 85704200
         MVC   PXTABCCW,SPRXCCWS   NOT LOADED ALREADY -- SET TO     R41 85704400
         MVC   DCTCHAR1(4*4),SPCHAR1  LOAD ALL REQUESTED CHARS      R41 85704600
         B     SPRCH5                  AND BR TO CONTINUE           R41 85704800
         EJECT                                                      R41 85705000
SPRCH4   LNR   R15,R0              LOADED ALREADY -- DETERMINE      R41 85705200
         LA    R15,SPRXCCWS+4(R15)  ACTUAL POSITION OF CHAR AND     R41 85705400
         MVC   0(1,PL),0(R15)        INSERT CORRECT CCW OP-CODE     R41 85705600
         LA    R14,4(,R14)         INCR TO NEXT REQUESTED           R41 85706000
         LA    PL,1(,PL)            CHAR AND GO DETERMINE           R41 85706200
         BCT   R1,SPRCH2             IF IT IS ALREADY LOADED        R41 85706400
         SPACE 1                                                    R41 85706600
SPRCH5   IC    R1,PRMAXTRC         GET NUMBER OF CHARACTER          R41 85706700
         LA    R1,1(,R1)            SETS REQUESTED                  R41 85706800
         CLM   R1,1,UCBCGMNO       POTENTIAL WCGM'S LEFT...         R41 85706900
         BNL   SPRFLASH            BR IF NO                         R41 85707000
         BAL   PL,SPRTDFLT         DEFAULT CHAR SET LOADED...       R41 85707200
         BZ    SPRFLASH            BR IF YES.   ELSE,               R41 85707400
         SLL   R1,2                ADD DEFAULT                      R41 85707700
         LA    R1,DCTCHAR1(R1)      TO LIST                         R41 85707800
         MVC   0(4,R1),DCTUCS        OF CHARS                       R41 85707900
         OI    SPWFLAG,SPWDEFLT    SET INDICATION                   R41 85708000
         SPACE 2                                                    R41 85708100
SPRFLASH DS    0H                                                    R4 85708200
         CLI   SPFLASH,C'*'        TEST FOR FLASH SPECIFIED          R4 85709000
         BNE   SPRF1               BR IF YES                         R4 85710000
         CLI   DCTFLASH,C'*'       TEST FOR FLASH CURRENTLY ACTIVE   R4 85711000
         BE    SPRBURST            BR IF NO                          R4 85712000
         B     SPRF2               ELSE, GO TO RESET DCT             R4 85713000
SPRF1    CLC   DCTFLASH,SPFLASH    TEST FOR CHANGE                   R4 85714000
         BE    SPRBURST            BR IF NO                          R4 85715000
         OI    SPWFLAG,SPWWTO      INDICATE SETUP MSG NEEDED         R4 85716000
SPRF2    MVC   DCTFLASH,SPFLASH    UPDATE DCT WITH NEW REQUEST       R4 85717000
         SPACE 1                                                     R4 85718000
SPRBURST DS    0H                                                    R4 85719000
         TM    SPFLAG,SPBURST      TEST FOR BURST=YES SPECIFIED      R4 85720000
         BZ    SPRB1               BR IF NOT - BURSTER NOT WANTED    R4 85721000
         TM    DCTPPSW2,DCTNIBRS   TEST FOR DEVICE ALREADY BURSTING  R4 85722000
         BO    SPRMODFY            BR IF YES                         R4 85723000
         OI    DCTPPSW2,DCTNIBRS   ELSE, MOVE IN B=Y STATUS          R4 85724000
         B     SPRB2                AND GO FLAG FOR WTO              R4 85725000
SPRB1    TM    DCTPPSW2,DCTNIBRS   TEST BURST STATUS                 R4 85726000
         BZ    SPRMODFY            BR IF NOT ACTIVE                  R4 85727000
         NI    DCTPPSW2,255-DCTNIBRS  ELSE, MOVE IN B=N STATUS       R4 85728000
SPRB2    OI    SPWFLAG,SPWWTO      INDICATE SETUP MSG NEEDED         R4 85729000
         SPACE 1                                                     R4 85730000
SPRMODFY DS    0H                                                    R4 85731000
         CLI   SPMODF,C'*'         TEST FOR COPY MOD SPECIFIED       R4 85732000
         BNE   SPRM1               BR IF YES                         R4 85733000
         CLI   DCTMODF,C'*'        TEST FOR COPY MOD ALREADY ACTIVE  R4 85734000
         BE    SPRMSG              BR IF NO                          R4 85735000
         OI    SPWFLAG,SPWCLRM     INDICATE COPY MOD MUST BE CLEARED R4 85736000
SPRM1    MVC   DCTMODF,SPMODF      MOVE IN NEW COPY MODIFICATION ID  R4 85737000
         EJECT                                                       R4 85738000
*                                                                    R4 85739000
*        ISSUE OPERATOR SETUP MSG FOR FORMS(F) - FLASH(O) - BURST(B) R4 85740000
*                                                                    R4 85741000
         SPACE 1                                                     R4 85742000
SPRMSG   DS    0H                                                    R4 85743000
         TM    SPWFLAG,SPWWTO      TEST FOR SETUP MSG NEEDED         R4 85744000
         BZ    SPRLFCB             BR IF NO                          R4 85745000
         SPACE 1                                                     R4 85746000
SPRMSG1  DS    0H                                                    R4 85747000
        $MID   190                                                   R4 85748000
         MVC   SPWMSG+7(2),=X'190E'     MOVE MESSAGE NUMBER          R4 85749000
         MVC   SPWMSG+9(8),JCTJOBID     MOVE JOB NUMBER              R4 85750000
         MVI   SPWMSG+17,C' '           MOVE SPACE BEFORE JOBNAME    R4 85751000
         MVC   SPWMSG+18(8),JCTJNAME    MOVE JOBNAME                 R4 85752000
         MVC   SPWMSG+26(52),=CL52' SETUP -- PRINTERN -- F = FORM -- O C85753000
               = FLSH -- B = N'         MOVE SETUP MESSAGE           R4 85754000
         MVC   SPWMSG+36(8),DCTDEVN     MOVE DEVICE NAME             R4 85755000
         MVC   SPWMSG+52(4),DCTFORMS    MOVE FORMS ID                R4 85756000
         MVC   SPWMSG+64(4),DCTFLASH    MOVE FLASH-FRAME ID          R4 85757000
         TM    DCTPPSW2,DCTNIBRS        TEST FOR B=N                 R4 85758000
         BZ    *+8                      BR IF YES                    R4 85759000
         MVI   SPWMSG+76,C'Y'           MOVE IN B=Y                  R4 85760000
         DROP  JCT                 SUSPEND JCT ADDRESSABILITY        R4 85761000
         SPACE 1                                                     R4 85762000
        $WTO   SPWMSG+7,72,JOB=NO,  ISSUE PRINTER SETUP MESSAGE      R4C85763000
               ROUTE=$LOG+$UR,CLASS=$DOMACT,PRI=$ST                  R4 85764000
         NI    SPWFLAG,255-SPWWTO  RESET WTO FLAG                    R4 85765000
         SPACE 1                                                     R4 85766000
SPRSTOP  OI    DCTFLAGS,DCTSTOP    STOP ($Z) THE PRINTER             R4 85767000
         EJECT                                                       R4 85768000
*                                                                    R4 85769000
*        WAIT FOR $S COMMAND FROM OPERATOR                           R4 85770000
*                                                                    R4 85771000
SPRWAIT  DS    0H                                                    R4 85772000
         TM    DCTFLAGS,DCTSTOP    TEST FOR $S PRINTER               R4 85773000
         BZ    SPRSTART            BR IF START COMMAND ISSUED        R4 85774000
         NI    DCTFLAGS,255-DCTDELET+DCTRSTRT+DCTBKSP  RESET FLAGS   R4 85775000
        $WAIT  IO                  WAIT FOR A POST FROM COMM         R4 85776000
         B     SPRWAIT             GO CHECK FOR $S                   R4 85777000
         SPACE 1                                                     R4 85778000
SPRSTART DS    0H                                                    R4 85779000
        $DOM   CMB=(R1)            DELETE SETUP MESSAGE              R4 85780000
         L     R1,PCEJQE           ADDRESS OF JQE              @OZ32566 85780200
         TM    JQEFLAGS-JQEDSECT(R1),QUEOPCAN+QUEPURGE $CJ,P...     R41 85780400
         BNO   SPROPTST            BR IF NOT $CJ,P                  R41 85780600
         OI    DCTFLAGS,DCTDELET    ELSE SIMULATE $C PRT            R41 85780800
         SPACE 1                                                    R41 85780900
SPROPTST TM    DCTFLAGS,DCTDELET+DCTRSTRT  $C, $E OR $I...          R41 85781000
         BZ    SPRLFCB             BR IF NO                          R4 85782000
         OI    PPFLAG,PPDELSW+PRDELSW  ELSE CAUSE TERMINATION       R41 85782200
         OC    PDCTFLAG,DCTFLAGS   PROVIDE TERMINATION REASON       R41 85782400
         NI    DCTFLAGS,255-DCTDELET-DCTRSTRT-DCTBKSP RESET    @OZ18409 85782600
*                                                                    R4 85783000
*        IF PRINTER CANCELLED -- REVERT TO PREVIOUS SETUP           R41 85784000
*                                                                    R4 85785000
         MVC   DCTFORMS(3*4),SPWFORMS  RESET FORMS-FCB-DEFAULT CHARS R4 85786000
         MVC   DCTCHAR1(4*4),SPWCHAR1  RESET CHAR1,2,3,4 VALUES      R4 85787000
         MVC   DCTFLASH,=C'****'   CLEAR FLASH AND                   R4 85788000
         MVC   DCTMODF,=C'****'     COPY MODIFICATION                R4 85789000
         NI    DCTPPSW2,255-DCTNIBRS     RESET                       R4 85790000
         TM    SPWFLAG,SPWDCTB            THE                        R4 85791000
         BZ    SPRLFCB                     BURSTER                   R4 85792000
         OI    DCTPPSW2,DCTNIBRS            STATUS                   R4 85793000
         EJECT                                                       R4 85794000
*                                                                    R4 85795000
*        DETERMINE IF A CALL TO SETPRT (SVC 81) IS NECESSARY         R4 85796000
*                                                                    R4 85797000
SPRLFCB  DS    0H                                                    R4 85798000
         CLI   DCTFCB,C'*'         TEST FOR FCB SPECIFIED            R4 85799000
         BNE   SPRLFC1             BR IF YES                         R4 85800000
         CLI   UCBFCBNM,X'40'      TEST FOR HDWR DEFAULT LOADED     R41 85801000
         BE    SPRLCHRS            BR IF YES                         R4 85802000
         OI    SPWFLAG,SPWINIT+SPWSETP  INIT-PRT SETS HDWR DEFAULT  R41 85803000
         B     SPRLCHRS            BR TO CONTINUE                   R41 85804000
         SPACE 1                                                    R41 85804500
SPRLFC1  TM    SPWFLAG,SPWINIT     INITIALIZE PRINTER...            R41 85805000
         BO    SPRLFC2             FORCE FCB UPDATE IF YES          R41 85805200
         CLC   DCTFCB,UCBFCBNM     FCB MATCH PRINTER FCB...         R41 85805400
         BE    SPRLCHRS            BR IF YES                        R41 85805600
         SPACE 1                                                    R41 85805800
SPRLFC2  MVC   SPPFCB,DCTFCB       SHOW SETPRT CALL NEEDED          R41 85805900
         OI    SPWFLAG,SPWSETP      TO LOAD FCB                     R41 85806000
         SPACE 1                                                     R4 85807000
SPRLCHRS DS    0H                                                    R4 85808000
         TM    SPWFLAG,SPWINIT     IF INIT BIT IS SET,               R4 85809000
         BO    SPRLC2               THEN FORCE UPDATE                R4 85810000
         LA    R1,DCTCHAR1         IF ANY                            R4 85811000
         LA    R15,UCBCHAR1         CHARS VALUES                     R4 85812000
         LA    R0,4                  DIFFER                          R4 85813000
SPRLC1   CLI   0(R1),C'*'             FROM                           R4 85814000
         BE    SPRLFLSH                UCB,                          R4 85815000
         CLC   0(4,R1),0(R15)          THEN                          R4 85816000
         BNE   SPRLC2                   BRANCH                       R4 85817000
         LA    R1,4(,R1)                 TO                          R4 85818000
         LA    R15,4(,R15)                LOAD                       R4 85819000
         BCT   R0,SPRLC1                   ALL SPECIFIED             R4 85820000
         B     SPRLFLSH            ELSE, DON'T CALL SETPRT           R4 85821000
         SPACE 1                                                     R4 85822000
SPRLC2   CLI   DCTCHAR1,C'*'       UNTIL                             R4 85823000
         BE    SPRLFLSH             END                              R4 85824000
         MVC   SPPXLAT1,DCTCHAR1     OF                              R4 85825000
         OI    SPWFLAG,SPWSETP        CHARS                          R4 85826000
         CLI   DCTCHAR2,C'*'           VALUES                        R4 85827000
         BE    SPRLFLSH                 IS                           R4 85828000
         MVC   SPPXLAT2,DCTCHAR2         REACHED,                    R4 85829000
         CLI   DCTCHAR3,C'*'              UPDATE                     R4 85830000
         BE    SPRLFLSH                    PARAMETER                 R4 85831000
         MVC   SPPXLAT3,DCTCHAR3            LIST                     R4 85832000
         CLI   DCTCHAR4,C'*'                 AND INDICATE            R4 85833000
         BE    SPRLFLSH                       SETPRT                 R4 85834000
         MVC   SPPXLAT4,DCTCHAR4               CALL NEEDED           R4 85835000
         EJECT                                                 @OZ18414 85836000
SPRLFLSH CLI   DCTFLASH,C'*'       FLASH SPECIFIED...          @OZ18414 85836500
         BNE   SPRLF1              BR IF YES                   @OZ18414 85837000
         CLI   UCBIMAGE,X'40'      FLASH ACTIVE...             @OZ18414 85837500
         BE    SPRLBRST            BR IF NO                    @OZ18414 85838000
         MVC   SPPIMAGE,=X'40000000'  ELSE RESET FLASH ID      @OZ18414 85838500
         B     SPRLF2              BR TO CONTINUE              @OZ18414 85839000
         SPACE 1                                               @OZ18414 85839500
SPRLF1   MVC   SPPIMAGE,DCTFLASH   SET FLASH ID                @OZ18414 85840000
         TM    SPFLAG,SPSEP        SEPARATOR PAGE...           @OZ18414 85840500
         BO    SPRLF2              SET ZERO COUNT IF YES       @OZ18414 85841000
         ICM   PW,1,SPFLASHC       GET FLASH-COPY COUNT        @OZ18414 85841500
         BNZ   *+8                 USE IT IF NOT ZERO          @OZ18414 85842000
         LA    PW,255               ELSE USE MAX COPY COUNT    @OZ18414 85842500
         STC   PW,SPPFRMNR         SET FLASH COUNT             @OZ18414 85843000
         TM    SPWFLAG,SPWINIT     INITIALIZE PRINTER...       @OZ18414 85843500
         BO    SPRLBRST            BR IF YES                   @OZ18414 85844000
         CLC   DCTFLASH,UCBIMAGE   THIS FLASH LOADED...        @OZ18414 85845000
         BNE   SPRLF2              BR IF NO                    @OZ18414 85846000
         CLM   PW,1,PREVFLCT       FLASH COUNT LOADED...       @OZ18414 85847000
         BE    SPRLBRST            SKIP SETPRT IF YES          @OZ18414 85848000
         SPACE 1                                               @OZ18414 85849000
SPRLF2   OI    SPWFLAG,SPWSETP     INDICATE SETPRT NEEDED      @OZ18414 85850000
         SPACE 1                                                     R4 85851000
SPRLBRST DS    0H                                                    R4 85852000
         TM    UCBOPTNS,UCBBRSTR   TEST FOR 3800 BURSTER FEATURE     R4 85853000
         BZ    SPRLMODF            BR IF NO                          R4 85854000
         TM    DCTPPSW2,DCTNIBRS   TEST FOR BURSTER WANTED           R4 85855000
         BZ    SPRLB1              BR IF NO                          R4 85856000
         TM    UCBACTIV,UCBBRSTA   TEST FOR BURSTER ACTIVE           R4 85857000
         BO    SPRLMODF            BR IF YES                         R4 85858000
         OI    SPPFLAG1,SPPBURST   INDICATE BURST=YES                R4 85859000
         B     SKIP740             GO TO INDICATE SETPRT NEEDED      R4 85860000
SPRLB1   TM    UCBACTIV,UCBBRSTA   TEST FOR BURSTER ACTIVE           R4 85861000
         BZ    SPRLMODF            BR IF NO                          R4 85862000
SKIP740  OI    SPWFLAG,SPWSETP     INDICATE SETPRT NEEDED            R4 85863000
         SPACE 1                                                     R4 85864000
SPRLMODF DS    0H                                                    R4 85865000
         CLI   DCTMODF,C'*'        TEST FOR MODIFY SPECIFIED         R4 85866000
         BNE   SPRLM1              BR IF YES                         R4 85867000
         TM    SPWFLAG,SPWCLRM     TEST FOR COPY MOD RESET NEEDED    R4 85868000
         BZ    SPRPCOPY            BR IF NO                          R4 85869000
         LA    R1,SPRNULLM         ADDR OF NULL COPY MOD             R4 85870000
         ST    R1,SPPMDPTA          INTO SETPRT LIST                 R4 85871000
         OI    SPPFLAG2,SPPMODI    INDICATE IN-CORE COPY MOD         R4 85872000
         B     SPRLM2              GO INDICATE SETPRT NEEDED         R4 85873000
SPRLM1   MVC   SPPMODPT,DCTMODF    MOVE COPY MOD ID INTO LIST        R4 85874000
         SLR   PW,PW               ASSUME MODIFY-TRC=0         @OZ18410 85875000
         CLC   SPMODFT,PRMAXTRC    IS MODIFY-TRC VALID...      @OZ18410 85875500
         BH    *+8                 BR IF NOT TO USE TRC=0      @OZ18410 85876000
         IC    PW,SPMODFT           ELSE USE SUPPLIED MOD-TRC  @OZ18410 85876500
         IC    PW,PXTABCCW(PW)     DETERMINE                   @OZ18410 85877000
         SLL   PW,26                ACTUAL                     @OZ18410 85877500
         SRL   PW,30                 CHARACTER SET             @OZ18410 85878000
         STC   PW,SPPTRC              POSITION                 @OZ18410 85878500
SPRLM2   OI    SPWFLAG,SPWSETP     INDICATE SETPRT NEEDED            R4 85879000
         SPACE 1                                                     R4 85880000
SPRPCOPY DS    0H                                                    R4 85881000
         CLC   PREVCPYS(2),SPCOPYS TEST IF COUNTS MATCH PREVIOUS     R4 85882000
         BE    SPRSETP             BR IF YES                         R4 85883000
         OI    SPWFLAG,SPWSETP     ELSE, FORCE A CALL TO SETPRT      R4 85884000
         EJECT                                                       R4 85885000
*                                                                    R4 85886000
*        CALL SETPRT (SVC 81) VIA JES2 IMAGE LOADER SUB-TASK         R4 85887000
*                                                                    R4 85888000
SPRSETP  DS    0H                                                    R4 85889000
         TM    SPWFLAG,SPWSETP     TEST FOR SETPRT NEEDED            R4 85890000
         BZ    SPREXIT             BR IF NO                          R4 85891000
         SPACE 1                                                     R4 85892000
         TM    SPWFLAG,SPWINIT     TEST FOR INIT NEEDED              R4 85893000
         BZ    SKIP750             BR IF NO                          R4 85894000
         OI    SPPFLAG1,SPPINIT    ELSE, TELL SETPRT                 R4 85895000
SKIP750  B     SPRSETP1            GO CALL SETPRT                    R4 85896000
         SPACE 1                                                     R4 85897000
SPRRXMIT DS    0H                                                    R4 85898000
         MVC   SPPFRMNR,SPFLASHC   MOVE IN FLASH COUNT               R4 85899000
         OI    SPPFLAG1,SPPREX     INDICATE RE-XMISSION TO SETPRT    R4 85900000
         NI    SPFLAG,255-SPREXMIT RESET PRPU FLAG INDICATION        R4 85901000
         SPACE 1                                                     R4 85902000
SPRSETP1 DS    0H                                                    R4 85903000
         L     R1,DCTDCB           ADDRESS 3800 DCB                  R4 85904000
         NI    DCBIFLGS-DCBDSECT(R1),255-DCBIFEC  RESET ERROR COND.  R4 85905000
         ST    R1,SPPDCBA          SET DCB ADDR IN PARMLIST          R4 85906000
         MVI   SPPFDUNF,SPPFBLK+SPPEXTL  BLK DATA CK + EXTENDED LIST R4 85907000
         OI    SPPFLAG1,SPPBFREQ+SPPBTREQ BYPASS ALL POSSIBLE WTOR'S R4 85908000
         MVC   SPPCPYNR(1),SPCOPYN MOVE IN NUMBER OF COPIES          R4 85909000
         MVC   SPPSTCNR(1),SPCOPYS MOVE IN STARTING COPY NUMBER      R4 85910000
         MVC   PREVCPYS(2),SPCOPYS SAVE COPY COUNTS                  R4 85911000
         MVC   PREVFLCT,SPPFRMNR   SAVE FLASH COUNT            @OZ18414 85911500
         SPACE 1                                                     R4 85912000
*        THIS CARD REPLACED BY OZ26939                         @OZ26939 85913000
*        THIS CARD REPLACED BY OZ26939                         @OZ26939 85914000
*        THIS CARD REPLACED BY OZ26939                         @OZ26939 85915000
*        THIS CARD REPLACED BY OZ26939                         @OZ26939 85916000
         SPACE 1                                               @OZ26939 85917000
         L     R1,PRIMGDTE         ADDR OF HASPIMAG DTE        @OZ26939 85918000
         LA    R1,8(,R1)           ADDR OF HASPIMAG WORK-ECB   @OZ26939 85919000
         MVI   BUFECBCC-BUFDSECT(PBUF),X'80'  SET ECB AS WAITING     R4 85920000
         POST  (1),(PBUF)          POST (PASSING BUFFER ADDR)  @OZ26939 85921000
         SPACE 1                                                     R4 85922000
SPRWIM2  DS    0H                                                    R4 85923000
        $WAIT  IMAG                WAIT FOR POST FROM SUB-TASK       R4 85924000
         TM    BUFECBCC-BUFDSECT(PBUF),X'7F' TEST STATUS OF SETPRT   R4 85925000
         BZ    SPRWIM2             BR IF NOT COMPLETE                R4 85926000
         BO    SPREXIT             BR IF SUCCESSFUL                  R4 85927000
         EJECT                                                       R4 85928000
*                                                                    R4 85929000
*        SETPRT ERROR DETECTED - ATTEMPT RECOVERY                    R4 85930000
*                                                                    R4 85931000
         SPACE 1                                                     R4 85932000
SPRERR   DS    0H                                                    R4 85933000
         CLI   SPWRTCDE,0          TEST RETURN CODE                  R4 85934000
         BE    SPREXIT             EXIT IF ALL IS OK                 R4 85935000
         CLI   SPWRTCDE,X'30'      TEST FOR MAX WGCM'S EXCEEDED      R4 85936000
         BE    SPRRWCGM            BR IF YES -- INFORM OPERATOR      R4 85937000
        $MID   180                                                   R4 85938000
         MVC   SPWMSG(2),=X'180E'     MOVE MESSAGE NUMBER            R4 85939000
         MVC   SPWMSG+2(8),DCTDEVN    MOVE DEVICE NAME               R4 85940000
         MVC   SPWMSG+10(28),=CL28' FCB   IMAGE XXXX NOT FOUND '     R4 85941000
         CLI   SPWRTCDE,4          TEST FOR NOT-FOUND CONDITION      R4 85942000
         BE    SPREASON            BR IF YES                         R4 85943000
         MVC   SPWMSG+28(9),=CL9'I/O ERROR'  ASSUME I/O ERROR        R4 85944000
         CLI   SPWRTCDE,8          TEST FOR I/O ERROR CONDITION      R4 85945000
         BE    SPREASON            BR IF YES                         R4 85946000
         MVC   SPWMSG+28(10),=CL10'LOAD ERROR'  ASSUME LOAD ERROR    R4 85947000
         SPACE 1                                                     R4 85948000
SPREASON DS    0H                                                    R4 85949000
         SR    R1,R1               OBTAIN REASON-                    R4 85950000
         IC    R1,SPWRSCDE          CODE                             R4 85951000
         SLL   R1,1                MULT BY 2 FOR OFFSET              R4 85952000
         LA    PL,SPRESONS(R1)     ADDR OF REASON TABLE ENTRY        R4 85953000
         MVC   SPWMSG+11(5),0(PL)  MOVE IMAGE TYPE INTO MESSAGE      R4 85954000
         L     PL,4(,PL)           LOAD ERROR RTN ADDRESS            R4 85955000
         BR    PL                  GO TO ERROR RTN                   R4 85956000
         SPACE 3                                                     R4 85957000
SPRRWCGM TM    SPWFLAG,SPWDEFLT    ATTEMPT TO LOAD DEFAULT...       R41 85958000
         BZ    SPRRWCG2            BR IF NO                         R41 85958100
         SLR   R1,R1                ELSE REMOVE                     R41 85958200
         IC    R1,PRMAXTRC           DEFAULT                        R41 85958300
         SLL   R1,2                   CHAR (DCTUCS)                 R41 85958400
         LA    PW,DCTCHAR1+4(R1)       FROM                         R41 85958500
         MVC   0(4,PW),=C'****'         REQUEST                     R41 85958600
         NI    SPWFLAG,255-SPWDEFLT RESET DEFAULT-ATTEMPT FLAG      R41 85958700
         LA    PW,SPPXLAT1+4(R1)   REMOVE REQUEST FROM              R41 85958800
         XC    0(4,PW),0(PW)        SETPRT PARMLIST                 R41 85958900
         B     SPRSETP1            BR TO RETRY SETPRT REQUEST       R41 85959000
         SPACE 1                                                    R41 85959100
        $MID   155                 MESSAGE IDENTIFIER                R4 85959200
         SPACE 1                                                    R41 85959500
SPRRWCG2 MVC   SPWMSG(2),=X'155E'  MOVE MESSAGE ID                  R41 85960000
         MVC   SPWMSG+2(8),DCTDEVN MOVE DEVICE NAME                  R4 85961000
         MVC   SPWMSG+10(28),=CL28' MAX. OF N WCGM''S EXCEEDED'      R4 85962000
         MVC   SPWMSG+19(1),UCBCGMNO MOVE WCGM COUNT                 R4 85963000
         OI    SPWMSG+19,X'F0'     MAKE PRINTABLE                    R4 85964000
         B     SPRRMSG             GO TELL OPERATOR                  R4 85965000
         SPACE 1                                                     R4 85966000
         EJECT                                                      R41 85967000
SPRRUNKN OI    SPWFLAG,SPWWTO      SHOW SETUP MSG NEEDED            R41 85968000
         B     SPRRMSG             GO TELL OPERATOR                  R4 85969000
         SPACE 1                                                    R41 85970000
SPRRMODF OI    SPWFLAG,SPWCLRM     INDICATE CLEAR IF OPER RESETS    R41 85971000
         MVC   SPWMSG+23(4),DCTMODF MOVE MODF IMAGE TO MESSAGE       R4 85972000
         B     SPRRMSG             GO TELL OPERATOR                  R4 85973000
         SPACE 1                                                     R4 85974000
SPRRFCB  MVC   SPWMSG+23(4),DCTFCB MOVE FCB IMAGE ID TO MSG         R41 85976000
         B     SPRRMSG             GO TELL OPERATOR                  R4 85977000
         SPACE 1                                                    R41 85978000
SPRRCHAR CLI   SPWRTCDE,X'1C'      TEST FOR LOAD ERROR              R41 85980000
         BNE   SPRRC2              BR IF NOT - CHAR UNKNOWN          R4 85981000
         LA    R1,SPPXLAT1         ADDR OF SETPRT CHAR LIST          R4 85982000
         LA    R15,UCBCHAR1        ADDR OF UCB CHAR LIST             R4 85983000
         LA    R0,4                DETERMINE                         R4 85984000
SPRRC1   CLI   0(R15),X'40'         ID                               R4 85985000
         BE    SPRRC3                OF                              R4 85986000
         LA    R15,4(,R15)            CHAR SET                       R4 85987000
         LA    R1,4(,R1)               IN                            R4 85988000
         BCT   R0,SPRRC1                ERROR                        R4 85989000
SPRRC2   LA    R1,SPRESONS+1       ADDR OF 'UNKN' REASON             R4 85990000
SPRRC3   MVC   SPWMSG+23(4),0(R1)  MOVE CHAR SET ID TO MESSAGE       R4 85991000
         B     SPRRMSG             GO TELL OPERATOR                  R4 85992000
         SPACE 1                                                     R4 85993000
SPRRFLSH OI    SPWFLAG,SPWWTO      SHOW SETUP MSG NEEDED            R41 85995000
         SPACE 1                                                    R41 85996000
SPRRMSG  DS    0H                  ** ISSUE ERROR MSG TO OPERATOR ** R4 85997000
        $WTO   SPWMSG,38,JOB=YES,  TELL OPERATOR                     R4C85998000
               ROUTE=$LOG+$UR,CLASS=$DOMACT,PRI=$ST                 R41 85999000
         OI    SPWFLAG,SPWSETP     FORCE CALL TO SETPRT              R4 86000000
         XC    SPPARM(SPWFORMS-SPPARM),SPPARM  RESET PARMLIST        R4 86001000
         TM    SPWFLAG,SPWWTO      TEST FOR SETUP MSG NEEDED         R4 86002000
         BZ    SPRSTOP             BR IF NOT -- WAIT FOR OPERATOR    R4 86003000
        $DOM   CMB=(R1)             ELSE DELETE 1ST MESSAGE         R41 86003500
         B     SPRMSG1             GO ISSUE SETUP MESSAGE           R41 86004000
         SPACE 1                                                    R41 86005000
SPREXIT  TM    UCBOPTNS,UCBBRSTR   DON'T VALIDATE STACKER IF        R41 86007000
         BZ    SPREXIT1             BTSS NOT INSTALLED               R4 86008000
         TM    DCTPPSW2,DCTNIBRS   TEST WANTED-STACKER               R4 86009000
         BZ    SPRXCFS             BR IF CFS                         R4 86010000
         TM    UCBACTIV,UCBBRSTA   TEST ACTUAL-STACKER               R4 86011000
         BZ    SPRMSG1             ERROR IF NOT BTSS                 R4 86012000
         B     SPREXIT1            OK IF CFS                         R4 86013000
SPRXCFS  TM    UCBACTIV,UCBBRSTA   TEST ACTUAL-STACKER               R4 86014000
         BO    SPRMSG1             ERROR IF BTSS                     R4 86015000
         EJECT                                                      R41 86016000
SPREXIT1 L     BASE2,PDSVSAVE      RESTORE BASE                     R41 86018000
         LM    PC1,PC2,PRCCWEJ     SKIP TO                          R41 86018200
         BAL   PL,PPPUT             TOP                             R41 86018400
         ICM   PC1,8,PXTABCCW               SELECT             @OZ24675 86018500
         BAL   PL,PPPUT                      CHAR1             @OZ24675 86018550
         BAL   PL,PPWRITE            OF                             R41 86018600
         BAL   PL,PPCHECK            PAGE                           R41 86018800
         L     PL,PCESAVEA         RESTORE RETURN REGISTER           R4 86019000
         BR    PL                  RETURN                            R4 86020000
         SPACE 4                                                    R41 86020100
*                                                                   R41 86020200
*        SPRTDFLT -- SUBR TO TEST IF DEFAULT CHAR IS LOADED         R41 86020300
*                                                                   R41 86020400
* OUTPUT CC    = ZERO     - DEFAULT ALREADY LOADED                  R41 86020500
*        CC    = NON-ZERO - DEFAULT NOT LOADED                      R41 86020600
*        PW    = ADDR OF CCW TO SELECT DEFAULT (IF CC=ZERO)         R41 86020700
*                                                                   R41 86020800
         SPACE 1                                                    R41 86020900
SPRTDFLT LA    R0,4                COUNT OF CHARS                   R41 86021000
         LA    R15,DCTCHAR1        ADDR OF CHARS                    R41 86021100
         LA    PW,SPRXCCWS         ADDR OF SELECT CCW TABLE         R41 86021200
         SPACE 1                                                    R41 86021300
SPRTDLUP CLC   DCTUCS,0(R15)       IS THIS THE DEFAULT...           R41 86021400
         BER   PL                  RETURN IF YES  (CC=ZERO)         R41 86021500
         LA    R15,4(,R15)         ADDR OF NEXT CHAR VALUE          R41 86021600
         LA    PW,1(,PW)            AND ITS SELECT CCW              R41 86021700
         BCT   R0,SPRTDLUP         LOOP FOR ALL CHARS               R41 86021800
         BR    PL                  RETURN NOT FOUND (CC=N-ZERO)     R41 86021900
         EJECT                                                      R41 86022000
*                                                                    R4 86022100
*        TABLE OF REASON KEYWORDS AND ASSOCIATED PROCESSORS          R4 86023000
*                                                                    R4 86024000
         SPACE 2                                                     R4 86025000
SPRESONS DS    0F                                                    R4 86026000
         SPACE 1                                                     R4 86027000
         DC    C' UNKN',AL3(SPRRUNKN)    00                          R4 86028000
         DC    C' CHAR',AL3(SPRRCHAR)    04                          R4 86029000
         DC    C'MODFY',AL3(SPRRMODF)    08                          R4 86030000
         DC    C' UNKN',AL3(SPRRUNKN)    0C                          R4 86031000
         DC    C'GRAPH',AL3(SPRRCHAR)    10                          R4 86032000
         DC    C'FLASH',AL3(SPRRFLSH)    14                          R4 86033000
         DC    C' UNKN',AL3(SPRRUNKN)    18                          R4 86034000
         DC    C' WCGM',AL3(SPRRCHAR)    1C                          R4 86035000
         DC    C'  FCB',AL3(SPRRFCB)     20                          R4 86036000
         SPACE 3                                                     R4 86037000
*                                                                    R4 86038000
*        NULL IN-CORE COPY MODIFICATION RECORD TO RESET 3800 WITHOUT R4 86039000
*                     ISSUING AN INITIALIZE-PRT                      R4 86040000
*                                                                    R4 86041000
         SPACE 2                                                     R4 86042000
SPRNULLM DS    0F                                                    R4 86043000
         SPACE 1                                                     R4 86044000
         DC    CL4'****'                COPY MOD IDENTIFICATION      R4 86045000
         DC    XL2'0'                   RESERVED                     R4 86046000
         DC    XL2'7'                   LENGTH OF COPY MOD RECORD    R4 86047000
         DC    XL1'0'                   STARTING COPY NUMBER         R4 86048000
         DC    XL1'1'                   NUMBER OF COPIES             R4 86049000
         DC    XL1'1'                   STARTING LINE NUMBER         R4 86050000
         DC    XL1'1'                   NUMBER OF LINES              R4 86051000
         DC    XL1'1'                   STARTING POSITION            R4 86052000
         DC    XL1'1'                   NUMBER OF CHARACTERS         R4 86053000
         DC    CL1' '                   MODIFICATION TEXT            R4 86054000
         SPACE 4                                                     R4 86055000
SPRXCCWS DS    0XL4                3800 TABLE-SELECT CCW OPS        R41 86055100
         DC    X'47'               SELECT TRANSLATE TABLE 0         R41 86055200
         DC    X'57'               SELECT TRANSLATE TABLE 1         R41 86055300
         DC    X'67'               SELECT TRANSLATE TABLE 2         R41 86055400
         DC    X'77'               SELECT TRANSLATE TABLE 3         R41 86055500
         EJECT                                                      R41 86055600
         LTORG                                                       R4 86056000
         SPACE 2                                                     R4 86057000
         TITLE 'HASP PRINT/PUNCH SERVICE-- FCB/UCS IMAGE READ' @OZ30048 86058000
************************************************************** @OZ30048 86058010
*                                                            * @OZ30048 86058020
* ENTER FROM HASPPRPU INITIALIZATION.  READ UCS/FCB IMAGE.   * @OZ30048 86058030
* ENTERED FOR THE FIRST USE OF UNIT ONLY.  MUST READ IMAGE   * @OZ30048 86058040
* TO DETERMINE IF UCS OR FCB IS A NON-STANDARD IMAGE.        * @OZ30048 86058050
*                                                            * @OZ30048 86058060
************************************************************** @OZ30048 86058070
         SPACE 1                                               @OZ30048 86058080
PINITSU  DS    0H                                              @OZ30048 86058090
         ST    BASE2,PDSVSAVE      SAVE BASE REGISTER          @OZ30048 86058100
         LR    BASE2,R15           SET UP                      @OZ30048 86058110
         USING PINITSU,BASE2         LOCAL ADDRESSABILITY      @OZ30048 86058120
         ST    PL,PCERETN          SAVE RETURN REGISTER        @OZ30048 86058130
         L     R1,PRIMGDTE         GET HASPIMAGE DTE ADDRESS   @OZ30048 86058140
         OC    0(4,R1),0(R1)       SUBTASK ALREADY ACTIVE...   @OZ30048 86058150
         BNZ   PGOTIMAG            BR IF YES                   @OZ30048 86058160
         SPACE 1                                               @OZ30048 86058170
         L     R15,=A(PIMAGLST)    ELSE MOVE ATTACH PARMS      @OZ30048 86058180
         MVC   $CSAVREG(PIMAGLL),0(R15)  TO WORK AREA          @OZ30048 86058190
         LR    PW,R1               SAVE DTE ADDRESS            @OZ30048 86058200
         ATTACH ECB=4(,R1),MF=(E,(1)),SF=(E,$CSAVREG)          @OZ30048 86058210
         ST    R1,0(,PW)           STORE TCB ADDRESS IN DTE    @OZ30048 86058220
         SPACE 1                                               @OZ30048 86058230
PIMGATCH DS    0H                                              @OZ30048 86058240
        $WAIT  IMAG                WAIT FOR SUBTASK TO INIT    @OZ30048 86058250
         TM    0(PW),X'80'         HASPIMAGE INITIALIZED...    @OZ30048 86058260
         BZ    PIMGATCH            BR IF NOT, TRY AGAIN        @OZ30048 86058270
         SPACE 1                                               @OZ30048 86058280
PGOTIMAG DS    0H                                              @OZ30048 86058290
         L     PC1,PCEDCT          ESTABLISH DCT               @OZ30048 86058300
         USING DCTDSECT,PC1          ADDRESSABILITY            @OZ30048 86058310
         NI    DCTPPSW,255-DCTPPSWU RESET NON-STD SWITCH       @OZ30048 86058320
         TM    PDEVTYPE+1,X'80'    UCS ALLOWED...              @OZ30048 86058330
         BZ    PFCBLD              BR IF NOT SUPPORTED         @OZ30048 86058340
         CLC   DCTUCS,=C'0   '     IS UCS = 0 REQUESTED...     @OZ30048 86058350
         BE    PFCBLD              BR IF YES, CHECK FCB        @OZ30048 86058360
         SPACE 1                                               @OZ30048 86058370
         $GETBUF PNOBUF            GET BUFFER FOR UCS READ     @OZ30048 86058380
         LR    WB,R1               LOAD BUFFER INTO R3         @OZ30048 86058390
         USING BUFDSECT,WB         SET BUFFER ADDRESSABILITY   @OZ30048 86058400
         MVC   BUFSTART(4),=X'0001003A' BLDL PARAMETER LIST    @OZ30048 86058410
         MVC   BUFSTART+4(4),=C'UCS1' IMAGE PREFIX-1403 USC    @OZ30048 86058420
         MVC   BUFSTART+8(4),DCTUCS USER UCS IMAGE ID          @OZ30048 86058430
         STCM  PC1,7,BUFDCT+1      ENSURE CORRECT DCT ADDR     @OZ30048 86058440
         CLI   PDEVTYPE+3,X'08'    IS DEVICE A 1403...         @OZ30048 86058450
         BE    PUCS01              BR IF YES, SKIP NEXT        @OZ30048 86058460
         MVI   BUFSTART+7,C'2'     IMAGE PREFIX FOR 3211 UCS   @OZ30048 86058470
         SPACE 1                                               @OZ30048 86058480
PUCS01   DS    0H                                              @OZ30048 86058490
         TM    $IMAGECB,X'40'      IS IMAGE LOADER TASK BUSY...@OZ30048 86058500
         BZ    PUCS02              BR IF NO, CONTINUE          @OZ30048 86058510
         $WAIT IMAG             WAIT FOR IMAGE TASK TO $$POST  @OZ30048 86058520
         B     PUCS01              TRY AGAIN                   @OZ30048 86058530
         SPACE 1                                               @OZ30048 86058540
PUCS02   DS    0H                                              @OZ30048 86058550
         MVI   BUFECBCC,X'80'      SET BUFFER ECB AS WAITING   @OZ30048 86058560
         POST  $IMAGECB,(R3)       POST WITH BUFFER ADDRESS    @OZ30048 86058570
         SPACE 1                                               @OZ30048 86058580
PUCS03   DS    0H                                              @OZ30048 86058590
         $WAIT IMAG             WAIT FOR IMAGE TASK TO $$POST  @OZ30048 86058600
         TM    BUFECBCC,X'7F'      IS LOAD REQUEST COMPLETE... @OZ30048 86058610
         BZ    PUCS03              BR IF NOT, TRY AGAIN        @OZ30048 86058620
         BM    PUCSMS              BR TO 'NOT FOUND' MSG       @OZ30048 86058630
         TM    BUFSTART,X'80'      IS IT A STD UCS IMAGE...    @OZ30048 86058640
         BO    PUCSEX              BR IF YES                   @OZ30048 86058650
         OI    DCTPPSW,DCTPPSWU    TURN ON NON-STD SWITCH      @OZ30048 86058660
         DROP  WB                  DROP BUFFER ADDRESSIBILITY  @OZ30048 86058670
         SPACE 1                                               @OZ30048 86058680
PUCSEX   $FREEBUF  (WB)            FREE BUFFER                 @OZ30048 86058690
         SPACE 1                                               @OZ30048 86058700
PFCBLD   DS    0H                                              @OZ30048 86058710
         NI    DCTPPSW,255-DCTPPSWB TURN OFF NON-STAND SWITCH  @OZ30048 86058720
         CLI   PDEVTYPE+3,X'08'    IS DEVICE A 1403...         @OZ30048 86058730
         BNE   PGTBUF              BR IF NOT A 1403            @OZ30048 86058740
         CLC   $PRTFCB,DCTFCB      IS IT STD FCB...            @OZ30048 86058750
         BE    PSUPEX              BR IF YES, RETURN TO INIT   @OZ30048 86058760
         OI    DCTPPSW,DCTPPSWB    TURN ON NON-STD SWITCH      @OZ30048 86058770
         B     PSUPEX              FINSHED, RETURN TO INIT     @OZ30048 86058780
         SPACE 1                                               @OZ30048 86058790
PGTBUF   $GETBUF PNOBUF            GET BUFFER FOR FCB READ     @OZ30048 86058800
         LR    WB,R1               LOAD R3 WITH BUFF ADDRESS   @OZ30048 86058810
         USING BUFDSECT,WB         SET BUFFER ADDRESSABILITY   @OZ30048 86058820
         MVC   BUFSTART(4),=X'0001003A' BLDL PARAMETER LIST    @OZ30048 86058830
         MVC   BUFSTART+4(4),=C'FCB2' IMAGE PREFIX-3211 FCB    @OZ30048 86058840
         MVC   BUFSTART+8(4),DCTFCB   USER FCB IMAGE ID        @OZ30048 86058850
         STCM  PC1,7,BUFDCT+1      ENSURE CORRECT DCT ADDR     @OZ30048 86058860
         SPACE 1                                               @OZ30048 86058870
PFCB01   DS    0H                                              @OZ30048 86058880
         TM    $IMAGECB,X'40'      IS IMAGE TASK BUSY...       @OZ30048 86058890
         BZ    PFCB02              BR IF NO, CONTINUE          @OZ30048 86058900
         $WAIT IMAG             WAIT FOR IMAGE TASK TO $$POST  @OZ30048 86058910
         B     PFCB01              TRY AGAIN                   @OZ30048 86058920
         SPACE 1                                               @OZ30048 86058930
PFCB02   DS    0H                                              @OZ30048 86058940
         MVI   BUFECBCC,X'80'      SET BUFFER ECB AS WAITING   @OZ30048 86058950
         POST  $IMAGECB,(R3)       POST WITH BUFFER ADDRESS    @OZ30048 86058960
         SPACE 1                                               @OZ30048 86058970
PFCB03   DS    0H                                              @OZ30048 86058980
         $WAIT IMAG             WAIT FOR IMAGE TASK TO $$POST  @OZ30048 86058990
         TM    BUFECBCC,X'7F'      LOAD REQUEST FINISHED...    @OZ30048 86059000
         BZ    PFCB03              BR IF NOT, TRY AGAIN        @OZ30048 86059010
         BM    PFCBMS              BR TO 'NOT FOUND' MSG       @OZ30048 86059020
         TM    BUFSTART,X'80'      TEST FOR STD IMAGE...       @OZ30048 86059030
         BO    PFCBEX              BR IF YES, SKIP NEXT        @OZ30048 86059040
         OI    DCTPPSW,DCTPPSWB    TURN ON NON-STD SWITCH      @OZ30048 86059050
         DROP  WB                  DROP BUFFER ADDRESSABILITY  @OZ30048 86059060
         SPACE 1                                               @OZ30048 86059070
PFCBEX   $FREEBUF (WB)             FREE BUFFER                 @OZ30048 86059080
         B     PSUPEX              FINSHED, GET A JOB          @OZ30048 86059090
         SPACE 1                                               @OZ30048 86059100
PUCSMS   DS    0H                                              @OZ30048 86059110
         USING BUFDSECT,WB         GET BUFFER ADDRESSABILITY   @OZ30048 86059120
         MVC   BUFSTART(2),=X'000F' MOVE MESSAGE NUMBER        @OZ30048 86059130
         MVC   BUFSTART+2(8),DCTDEVN MOVE DEVICE NAME          @OZ30048 86059140
         MVC   BUFSTART+10(26),=CL26' UCS  IMAGE XXXX NOT FOUND' Z30048 86059150
         MVC   BUFSTART+22(4),DCTUCS MOVE UCS ID               @OZ30048 86059160
        $WTO   BUFSTART,36,JOB=NO, ISSUE BUFFER LOAD FAIL MSG  @OZ30048*86059170
               ROUTE=$LOG+$UR,CLASS=$ACTION,PRI=$ST            @OZ30048 86059180
         B     PUCSEX              FINISHED UCS, FREE BUFFER   @OZ30048 86059190
         SPACE 1                                               @OZ30048 86059200
PFCBMS   DS    0H                                              @OZ30048 86059210
         USING BUFDSECT,WB         GET BUFFER ADDRESSABILITY   @OZ30048 86059220
         MVC   BUFSTART(2),=X'000F' MOVE MSG ID                @OZ30048 86059230
         MVC   BUFSTART+2(8),DCTDEVN MOVE DEVICE NAME          @OZ30048 86059240
         MVC   BUFSTART+10(26),=CL26' FCB  IMAGE XXXX NOT FOUND' Z30048 86059250
         MVC   BUFSTART+22(4),DCTFCB MOVE FCB ID               @OZ30048 86059260
        $WTO   BUFSTART,36,JOB=NO, ISSUE BUFFER LOAD FAIL MSG  @OZ30048*86059270
               ROUTE=$LOG+$UR,CLASS=$ACTION,PRI=$ST            @OZ30048 86059280
         B     PFCBEX              FINISHED FCB, FREE BUFFER   @OZ30048 86059290
         SPACE 1                                               @OZ30048 86059300
PNOBUF  $WTO   PNBUFF,PMSGL,JOB=NO,     BUFFER SHORTAGE MSG    @OZ30048*86059310
               ROUTE=$LOG+$UR,CLASS=$NORMAL,PRI=$ST            @OZ30048 86059320
         B     PSUPEX              NO BUFFERS, GET A JOB       @OZ30048 86059330
         SPACE 1                                               @OZ30048 86059340
PNBUFF   $MSG  000,'NO BUFFERS TO DETERMINE IF STD UCS/FCB'    @OZ30048 86059350
PMSGL    EQU   *-PNBUFF                                        @OZ30048 86059360
         SPACE 1                                               @OZ30048 86059370
PSUPEX   DS    0H                                              @OZ30048 86059380
         L     R1,PCEDCT           GET DCT ADDRESS FOR RETURN  @OZ30048 86059390
         L     PL,PCERETN          RESTORE RETURN REGISTER     @OZ30048 86059400
         L     BASE2,PDSVSAVE      RESTORE BASE REGISTER       @OZ30048 86059410
         BR    PL                  RETURN TO INITIALIZATION    @OZ30048 86059420
         SPACE 1                                               @OZ30048 86059430
         LTORG                                                 @OZ30048 86059440
         DROP  ,                   SUSPEND ALL ADDRESSABILITY  @OZ30048 86059450
         TITLE 'HASP PRINT PUNCH SERVICE -- IMAGE LOADER TASK' @OZ30048 86059460
*********************************************************************** 86060000
*                                                                     * 86061000
*        HASP IMAGE LOADER SUBTASK                                    * 86062000
*                                                                     * 86063000
*********************************************************************** 86064000
         SPACE 1                                                     R4 86065000
HASPIMAG $ENTRY BASE=R15           IMAGE LOADER MAIN ENTRY              86066000
         DROP  R15                 SUSPEND LOCAL ADDRESSABILITY         86067000
         SAVE  (14,12)             SAVE CALLER'S REGISTERS              86068000
         LR    BASE2,R15           ESTABLISH BASE REGISTER           R4 86069000
         USING HASPIMAG,BASE2      PROVIDE LOCAL ADDRESSABILITY      R4 86070000
         L     BASE1,=V(HASP)      SET HCT ADDRESS             @OZ26939 86071000
         USING HCTDSECT,BASE1      PROVIDE HCT ADDRESSABILITY        R4 86072000
         LR    R3,R1               SAVE DTE ADDR PASSED        @OZ26939 86072500
         GETMAIN R,LV=IMGSWLEN     GETMAIN SAVE/WORK AREA            R4 86073000
         ST    R13,4(,R1)          STORE BACKWARD POINTER            R4 86074000
         LR    R4,R13              HOLD CALLER'S SAVE ADDRESS           86075000
         LR    R13,R1              ADDRESS MY SAVE AREA              R4 86076000
         USING IMGDSECT,R13        PROVIDE SAVE AREA ADDRESSABILITY  R4 86077000
         ST    R13,8(,R4)          STORE FWD POINTER                    86078000
         ST    R3,IMGDTE           STORE DTE ADDRESS           @OZ26939 86078200
         XC    IMGDCB,IMGDCB       CLEAR SYS1.IMAGLIB DCB ADDR @OZ26939 86078400
         SPACE 3                                                     R4 86079000
*********************************************************************** 86080000
*                                                                     * 86081000
*        ESTABLISH ESTAE EXIT FOR ABNORMAL TERMINATIONS               * 86082000
*                                                                     * 86083000
*********************************************************************** 86084000
         SPACE 1                                                     R4 86085000
         LA    R1,12(,SAVE)        ESTAE PARAMETER LIST AREA         R4 86086000
         MVC   0(IMGABNDL,R1),IMGABND  MOVE-IN ESTAE PARMLIST        R4 86087000
         ESTAE PARAM=(13),MF=(E,(1))  ESTABLISH IMGESTAE EXIT        R4 86088000
         EJECT                                                       R4 86089000
*********************************************************************** 86090000
*                                                                     * 86091000
*        OPEN SYS1.IMAGELIB FOR IMPACT PRINTERS                @OZ26939 86092000
*                                                                     * 86093000
*********************************************************************** 86094000
         SPACE 1                                                     R4 86095000
         LA    R0,$IMAGTCB         LOAD PRINTER DTE . . .      @OZ26939 86095200
         LA    R3,0(R3)            CLEAR HI-ORDER BYTE         @OZ26939 86095275
         CLR   R0,R3               IMPACT PRINTER DTE. . .     @OZ26939 86095350
         BNE   IMGACTIV            BR IF NO                    @OZ26939 86095400
         IMGLIB OPEN               OPEN IMAGE LIBRARY                   86096000
         ST    R1,IMGDCB           SAVE IMAGELIB DCB ADDRESS            86097000
         SPACE 1                                                     R4 86098000
*********************************************************************** 86099000
*                                                                     * 86100000
*        SIGNAL ATTACHOR THAT IMAGE LOADER TASK IS ACTIVE             * 86101000
*                                                                     * 86102000
*********************************************************************** 86103000
         SPACE 1                                                     R4 86104000
IMGACTIV OI    0(R3),X'80'         SHOW HASPIMAG INITIALIZED   @OZ26939 86105000
         LA    R0,$IMAGTCB         LOAD PRINTER DTE            @OZ26939 86105050
         CLR   R0,R3               IS IT IMPACT PRINTER...     @OZ26939 86105100
         BNE   IMG$$P              IF 3800, $$POST             @OZ26939 86105200
         POST  $PIMGECB            POST HASPINIT               @OZ26939 86105300
         B     IMGWAIT             BR TO WAIT                  @OZ26939 86105400
IMG$$P $$POST  TYPE=IMAG,R11=HCT   POST ATTACHOR               @OZ26939 86105500
         EJECT                                                 @OZ26939 86106000
*********************************************************************** 86107000
*                                                                     * 86108000
*        WAIT FOR WORK POST OR $PHASP POST                            * 86109000
*                                                                     * 86110000
*********************************************************************** 86111000
         SPACE 1                                                     R4 86112000
IMGWAIT  L     R3,IMGDTE           ADDR OF HASPIMAG DTE        @OZ26939 86113000
         LA    R1,8(,R3)           ADDR OF HASPIMAG WORK-ECB   @OZ26939 86114000
         WAIT  ECB=(1)             WAIT FOR WORK OR $PJES2     @OZ26939 86115000
         MVI   8(R3),X'00'         RESET WORK-ECB              @OZ26939 86116000
         ICM   R3,7,8+1(R3)        IS THERE NEW WORK...        @OZ26939 86117000
         BNZ   IMGBLDL             BR IF YES. ELSE SHUTDOWN    @OZ26939 86118000
         SPACE 1                                                     R4 86119000
*********************************************************************** 86120000
*                                                                     * 86121000
*        SHUTDOWN ASSUMED - CLOSE SYS1.IMAGELIB                       * 86122000
*                                                                     * 86123000
*********************************************************************** 86124000
         SPACE 1                                                     R4 86125000
         L     R1,IMGDCB           GET IMAGELIB DCB ADDR       @OZ26939 86125200
         LTR   R1,R1               WAS IMAGELIB OPENED...      @OZ26939 86125400
         BZ    IMGEXIT             BR IF NO                    @OZ26939 86125600
         IMGLIB CLOSE,(1)          CLOSE IMAGELIB              @OZ26939 86126000
         SPACE 1                                               @OZ26939 86126500
IMGEXIT  L     R13,IMGSAV+4        RESTORE CALLER'S R13        @OZ26939 86127000
         RETURN (14,12),RC=0       RETURN WITH ZERO COMP CODE           86128000
         EJECT                                                       R4 86129000
*********************************************************************** 86130000
*                                                                     * 86131000
*        BLDL AGAINST SYS1.IMAGELIB TO PROVIDE PARM LIST FOR LOAD     * 86132000
*                                                                     * 86133000
*********************************************************************** 86134000
         SPACE 1                                                     R4 86135000
IMGBLDL  DS    0H                  *                                    86136000
         USING BUFDSECT,R3         ACTIVATE BUFFER ADDRESSABILITY       86137000
         SPACE 1                                                     R4 86138000
         ST    R3,IMGBUFAD         SAVE BUFFER ADDRESS FOR ESTAE     R4 86139000
         SPACE 1                                                     R4 86140000
         L     R1,BUFDCT           OBTAIN ADDRESS OF PRINT/PUNCH DCT R4 86141000
         TM    DCTPPSW2-DCTDSECT(R1),DCTNIPRT  TEST FOR 3800 PRINTER R4 86142000
         BO    IMGSTPRT            BRANCH IF YES                     R4 86143000
         L     R1,IMGDCB           ADDRESS IMAGELIB DCB FOR BLDL        86144000
         BLDL  (R1),BUFSTART       CONSTRUCT LIST FOR LOAD              86145000
         SPACE 1                                                     R4 86146000
*********************************************************************** 86147000
*                                                                     * 86148000
*        POST BUFFER WITH ERROR IF BLDL FAILED                        * 86149000
*                                                                     * 86150000
*********************************************************************** 86151000
         SPACE 1                                                     R4 86152000
         LTR   R15,R15             WAS BLDL SUCCESSFUL                  86153000
         BZ    IMGLOAD             BRANCH IF YES                        86154000
         MVI   BUFECBCC,X'41'      POST BUFFER WITH PERM ERROR          86155000
         B     IMGRETN             GO TO POST PRPU                   R4 86156000
         SPACE 1                                                     R4 86157000
*********************************************************************** 86158000
*                                                                     * 86159000
*        LOAD IMAGE FROM IMAGELIB USING BLDL LIST                     * 86160000
*                                                                     * 86161000
*********************************************************************** 86162000
         SPACE 1                                                     R4 86163000
IMGLOAD  DS    0H                  *                                    86164000
         LM    R6,R7,BUFSTART+4    SAVE NAME OF LOADED IMAGE            86165000
         STM   R6,R7,IMGNAME        FOR DELETE LATER                    86166000
         LA    R0,BUFSTART+4       ADDRESS DESCRIPTOR LIST              86167000
         L     R1,IMGDCB           ADDRESS DCB FOR IMAGELIB             86168000
         LOAD  DE=(0),DCB=(1)      LOAD REQUESTED IMAGE                 86169000
         LR    R2,R0               COPY IMAGE BASE                      86170000
         CLI   IMGNAME,C'F'        IS THIS AN FCB IMAGE                 86171000
         BNE   IMGUCS              BRANCH IF NO                         86172000
         EJECT                                                       R4 86173000
*********************************************************************** 86174000
*                                                                     * 86175000
*        COPY FCB IMAGE FROM LOAD MODULE TO CALLER'S BUFFER           * 86176000
*                                                                     * 86177000
*********************************************************************** 86178000
         SPACE 1                                                     R4 86179000
IMGFCB   DS    0H                  *                                    86180000
         MVC   BUFSTART(2),0(R2)   MOVE FLAG BYTE AND LENGTH            86181000
         LA    R4,BUFSTART+2       START OF IMAGE IN BUFFER             86182000
         SLR   R5,R5               CLEAR REGISTER                       86183000
         IC    R5,1(,R2)           GET IMAGE LENGTH                     86184000
         LA    R6,2(,R2)           START OF IMAGE IN LOAD MODULE        86185000
         LR    R7,R5               COPY IMAGE LENGTH                    86186000
         TM    2(R2),X'C0'         DOES FIRST BYTE DEFINE AN INDEX      86187000
         BNZ   IMGFCBI             BRANCH IF YES                        86188000
         SPACE 1                                                     R4 86189000
*********************************************************************** 86190000
*                                                                     * 86191000
*        NO INDEX BYTE SUPPLIED - DEFAULT TO X'81'                    * 86192000
*                                                                     * 86193000
*********************************************************************** 86194000
         SPACE 1                                                     R4 86195000
         MVI   BUFSTART+2,X'81'    SET INDEX VALUE OF X'81'             86196000
         LA    R4,1(,R4)           INCREMENT BUFFER START ADDRESS       86197000
         LA    R5,1(,R5)           GET NEW IMAGE LENGTH                 86198000
         STC   R5,BUFSTART+1       STORE INTO BUFFER                    86199000
IMGFCBI  DS    0H                  *                                    86200000
         MVCL  R4,R6               MOVE IMAGE TO BUFFER                 86201000
         B     IMGDELET            GO DELETE LOADED MODULE              86202000
         SPACE 1                                                     R4 86203000
*********************************************************************** 86204000
*                                                                     * 86205000
*        COPY UCS IMAGE FROM LOAD MODULE TO CALLER'S BUFFER           * 86206000
*                                                                     * 86207000
*********************************************************************** 86208000
         SPACE 1                                                     R4 86209000
IMGUCS   DS    0H                  *                                    86210000
         MVC   BUFSTART(1),0(R2)   MOVE FLAG BYTE                       86211000
         LA    R4,BUFSTART+1       START OF IMAGE IN BUFFER             86212000
         LA    R5,512              ASSUME 3211 IMAGE LENGTH             86213000
         CLI   IMGNAME+3,C'2'      IS THIS A 3211 IMAGE                 86214000
         BE    *+8                 BRANCH IF YES                        86215000
         LA    R5,240              SET 1403 IMAGE LENGTH                86216000
         SLR   R6,R6               CLEAR REGISTER                       86217000
         IC    R6,1(,R2)           NUMBER OF VERIFY LINES               86218000
         LA    R6,2(R6,R2)         START OF IMAGE IN LOAD MODULE        86219000
         LR    R7,R5               COPY MODULE LENGTH                   86220000
         MVCL  R4,R6               COPY IMAGE TO BUFFER                 86221000
         EJECT                                                       R4 86222000
*********************************************************************** 86223000
*                                                                     * 86224000
*        DELETE THE LOADED IMAGE MODULE                               * 86225000
*                                                                     * 86226000
*********************************************************************** 86227000
         SPACE 1                                                     R4 86228000
IMGDELET DS    0H                  *                                    86229000
         DELETE EPLOC=IMGNAME      REMOVE MODULE FORM LOAD LIST         86230000
         MVI   BUFECBCC,X'7F'      POST BUFFER WITH GOOD CC             86231000
IMGRETN  DS    0H                                                    R4 86232000
       $$POST  TYPE=IMAG,R11=HCT   POST HASP PRINT PROCESSOR            86233000
         B     IMGWAIT             WAIT FOR NEXT WORK/$PHASP POST       86234000
         SPACE 1                                                     R4 86235000
*********************************************************************** 86236000
*                                                                     * 86237000
*        INTERFACE TO SETPRT (SVC 81) FOR 3800 PRINTERS               * 86238000
*                                                                     * 86239000
*********************************************************************** 86240000
         SPACE 1                                                     R4 86241000
IMGSTPRT DS    0H                                                    R4 86242000
         USING SPPARM-(BUFSTART-BUFDSECT),PBUF SPPARM ADDRESSABILITY R4 86243000
         SETPRT MF=(E,SPPARM)      INVOKE SETPRT SVC                 R4 86244000
         SLR   R6,R6               CLEAR REG FOR INSERT              R4 86245000
         MVI   SPWRSCDE,X'00'      CLEAR REASON CODE AREA            R4 86246000
         ICM   R6,8,=X'7F'         ASSUME NO ERROR                   R4 86247000
         LTR   R15,R15             NORMAL RETURN                     R4 86248000
         BZ    IMGRETNJ            BRANCH IF YES                     R4 86249000
         ICM   R6,8,=X'41'         SET ERROR POST CODE               R4 86250000
*        FIND LEFT-MOST NON-ZERO BYTE AS THE RETURN CODE             R4 86251000
IMGSPTRC STCM  R15,1,SPWRTCDE      SAVE RIGHT-MOST BYTE              R4 86252000
         SRL   R15,8               SHIFT OUT SAVED BYTE              R4 86253000
         LTR   R15,R15             ALL ZEROES LEFT                   R4 86254000
         BNZ   IMGSPTRC            IF NOT, REPEAT PROCESS            R4 86255000
*        SAVE REASON CODE IF RETURN CODE = 04, 08, OR 12             R4 86256000
         CLI   SPWRTCDE,X'0C'      IS R/C LTE 12                     R4 86257000
         BH    IMGRETNJ            BRANCH IF YES                     R4 86258000
         STC   R0,SPWRSCDE         SAVE REASON CODE                  R4 86259000
IMGRETNJ DS    0H                                                    R4 86260000
         STCM  R6,8,BUFECBCC-BUFDSECT(R3)   SET POST CODE            R4 86261000
         B     IMGRETN                      GO POST PRINT PROC       R4 86262000
         EJECT                                                       R4 86263000
*********************************************************************** 86264000
*                                                                     * 86265000
*        ESTAE EXIT ROUTINE -- REINSTATE SUB-TASK                     * 86266000
*                                                                     * 86267000
*********************************************************************** 86268000
         SPACE 1                                                     R4 86269000
         USING IMGESTAE,R15        PROVIDE LOCAL ADDRESSABILITY      R4 86270000
         USING SDWA,R1             PROVIDE SDWA ADDRESSABILITY       R4 86271000
         SPACE 1                                                     R4 86272000
IMGESTAE LR    R3,R1               ASSUME NO SDWA -- GET COMP. CODE  R4 86273000
         LA    R4,12               TEST FOR                          R4 86274000
         CLR   R0,R4                SDWA PRESENT                     R4 86275000
         BE    SKIP760             BR IF NONE -- INFO IS IN REGS     R4 86276000
         L     R3,SDWAABCC         OBTAIN COMPLETION CODE            R4 86277000
         L     R2,SDWAPARM         OBTAIN HASPIMAG SAVE AREA ADDRESS R4 86278000
SKIP760  ST    R3,IMGABCC-IMGDSECT(,R2)  SAVE CC FOR RETRY ROUTINE   R4 86279000
         CLR   R0,R4               WAS AN SDWA PROVIDED...           R4 86280000
         BE    IMGESTA1            BR IF NO                          R4 86281000
         SETRP RC=4,RETADDR=IMGRETRY,FRESDWA=YES  SETUP FOR RETRY    R4 86282000
         BR    R14                 SCHEDULE RETRY ROUTINE            R4 86283000
         SPACE 1                                                     R4 86284000
IMGESTA1 LA    R15,4               INDICATE RETRY ROUTINE PROCESSING R4 86285000
         BALR  R0,R14              RETURN WITH R0=RETRY ROUTINE ADDR R4 86286000
         SPACE 1                                                     R4 86287000
*********************************************************************** 86288000
*                                                                     * 86289000
*        ESTAE RETRY ROUTINE -- INFORM OPERATOR OF ABEND              * 86290000
*        RE-ESTABLISH ENVIRONMENT (SAVE, BASE1, BASE2, R3)            * 86291000
*                                                                     * 86292000
*********************************************************************** 86293000
         SPACE 1                                                     R4 86294000
         USING IMGRETRY,R15        PROVIDE LOCAL ADDRESSABILITY      R4 86295000
         USING BUFDSECT,R3         PROVIDE BUFFER ADDRESSABILITY     R4 86296000
         SPACE 1                                                     R4 86297000
IMGRETRY LR    SAVE,R1             RESTORE HASPIMAG SAVE AREA ADDR   R4 86298000
         L     BASE1,=V(HASP)      RESTORE BASE1                     R4 86299000
         L     BASE2,=A(HASPIMAG)  RESTORE BASE2                     R4 86300000
         DROP  R15                 PICK-UP ADDRESSABILITY ON BASE2   R4 86301000
         L     R3,IMGBUFAD         RESTORE BUFFER ADDRESS            R4 86302000
         LA    R1,BUFSTART+(SPWMSG-SPPARM)  MESSAGE AREA             R4 86303000
         MVC   0(IMGAMSGL,R1),IMGAMSG  MOVE IN MESSAGE               R4 86304000
         L     R2,BUFDCT           DCT ADDRESS FROM BUFFER           R4 86305000
         MVC   IMGAMDN(8,R1),DCTDEVN-DCTDSECT(R2) INSERT DEVICE NAME R4 86306000
         UNPK  IMGAMCC(3,R1),IMGABCC+1(2)         INSERT ABEND       R4 86307000
         OI    IMGAMCC+2(R1),X'F0'                 COMPLETION        R4 86308000
         TR    IMGAMCC(3,R1),IMGTRTAB-X'F0'         CODE             R4 86309000
       $$WTO   (R1)                INFORM OPERATOR OF REINSTATEMENT  R4 86310000
         MVI   BUFECBCC,X'40'      SET ERROR CODE                    R4 86311000
         B     IMGRETN             GO TO POST PRPU                   R4 86312000
         EJECT                                                 @OZ26939 86312100
         SPACE 5                                               @OZ26939 86312200
PIMAGLST ATTACH EP=HASPIMAG,SM=SUPV,SF=L  HASPIMAG ATTACH LIST @OZ26939 86312300
PIMAGLL  EQU   *-PIMAGLST          LENGTH OF ATTACH LIST       @OZ26939 86312400
         EJECT                                                       R4 86313000
IMGTRTAB DC    C'0123456789ABCDEF' HEX TO EBCDIC TRANSLATION TABLE   R4 86314000
         SPACE 2                                                     R4 86315000
        $MID   179                 MESSAGE IDENTIFIER                R4 86316000
IMGAMSG  WTO   '&MID.******** IMAGE LOADER SUB-TASK REINSTATED AFTER ABC86317000
               END (***)',ROUTCDE=(7),DESC=(4),MF=L                  R4 86318000
IMGAMSGL EQU   *-IMGAMSG           LENGTH OF ABOVE MESSAGE           R4 86319000
IMGAMDN  EQU   IMGAMSGL-4-59       DEVICE NAME INSERT                R4 86320000
IMGAMCC  EQU   IMGAMSGL-4-4        ABEND COMPLETION CODE INSERT      R4 86321000
         SPACE 3                                                     R4 86322000
IMGABND  ESTAE IMGESTAE,RECORD=YES,MF=L  ESTAE PARAMETER LIST        R4 86323000
IMGABNDL EQU   *-IMGABND           LENGTH OF ABOVE                   R4 86324000
         SPACE 2                                                     R4 86325000
IMGDSECT DSECT                     SAVE AREA DSECT                   R4 86326000
IMGSAV   DS    18F                 IMAGE LOADER SAVE AREA               86327000
IMGNAME  DS    2F                  NAME OF LOADED MODULE                86328000
IMGDCB   DS    F                   ADDRESS OF IMAGELIB DCB              86329000
IMGBUFAD DS    F                   BUFFER ADDRESS FOR ESTAE          R4 86330000
IMGABCC  DS    F                   ABEND COMPLETION CODE FOR RETRY   R4 86331000
IMGDTE   DS    F                   ADDRESS OF OUR DTE          @OZ26939 86331500
IMGSWLEN EQU   *-IMGDSECT          LENGTH OF SAVE/WORK AREA          R4 86332000
         SPACE 1                                                     R4 86333000
HASPPRPU CSECT                     END OF SAVE AREA DSECT            R4 86334000
         LTORG                     IMAGE LOADER LITERAL POOL            86335000
         SPACE 5                                                        86336000
$DLENGTH $DLENGTH                  COMPUTE CONTROL SECTION LENGTH       86337000
APARNUM  DC    CL5'34285'          APAR NUMBER                          86337998
         END                                                            86338000
