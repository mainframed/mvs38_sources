MISC     TITLE 'HASP MISCELLANEOUS PROCESSORS'                 @OZ18212 50002000
*********************************************************************** 50004000
*                                                                     * 50006000
* MODULE NAME = HASPMISC                                              * 50008000
*                                                                     * 50010000
* DESCRIPTIVE NAME = HASPMISC                                         * 50012000
*                                                                     * 50014000
* COPYRIGHT = NONE                                                    * 50016100
*                                                                     * 50018000
* STATUS = OS/VS2 MVS   --  SEE &VERSION (BELOW) FOR JES2 LEVEL       * 50020000
*                                                                     * 50022000
* FUNCTION = THE HASP MISCELLANEOUS PROCESSORS CONSIST OF FOUR        * 50024000
*            SEPARATE ROUTINES - HASPVPRG, HASPCKPT, HASPGPRC         * 50026000
*            AND HASPWARM.                                            * 50028000
*                                                                     * 50030000
*            HASPVPRG PURGES JOBS FROM THE SYSTEM BY FREEING          * 50032000
*            OUTPUT TRACKS, PREPARING A TYPE 26 SMF RECORD, AND       * 50034000
*            BY NOTIFYING THE OPERATOR THAT THE JOB HAS BEEN PURGED.  * 50036000
*                                                                     * 50038000
*            HASPCKPT CHECKPOINTS JOB AND JOT QUEUE RECORDS,          * 50040000
*            POSTS PROCESSORS REQUESTING QUEUE ACCESS VIA THE         * 50042000
*            $QSUSE MACRO, RELEASES UNUSED TRACK GROUPS FROM THE      * 50044000
*            TRACK GROUP BLOCK, HEURISTICALLY ALLOCATES NEW TRACK     * 50046000
*            GROUPS FROM THE MASTER TRACK GROUP MAP TO THE TRACK      * 50048000
*            GROUP BLOCK, RECALCULATES ALLOCATED TRACK GROUPS, AND    * 50050000
*            POSTS PROCESSORS AND OTHER ADDRESS SPACES WHO MAY BE     * 50052000
*            WAITING FOR TRACK ALLOCATION.                            * 50054000
*            FOR SHARED QUEUE SYSTEMS, HASPCKPT ALSO RESERVES AND     * 50056000
*            READS THE SHARED JOB AND JOT QUEUE RECORDS, DETECTS      * 50058000
*            POTENTIAL LOCKOUT BY OTHER SYSTEMS, PERFORMS CROSS       * 50060000
*            SYSTEM POSTING FOR SHARED QUEUE ELEMENTS, RELEASES THE   * 50062000
*            CHECKPOINT DEVICE AFTER A MINIMUM HOLD INTERVAL,         * 50064000
*            PREVENTS REREAD OF THE SHARED QUEUES FOR A MINIMUM       * 50066000
*            DORMANT INTERVAL TO ALLOW OTHER SYSTEMS ACCESS,          * 50068000
*            AND FORCES REREAD OF THE SHARED QUEUES AFTER A           * 50070000
*            MAXIMUM DORMANT INTERVAL.                                * 50072000
*                                                                     * 50074000
*            HASPGPRC PRIORITY AGES JOBS AT A TIME INTERVAL           * 50076000
*            DETERMINED FROM THE HASPGEN PARAMETER &PRIRATE.          * 50078000
*                                                                     * 50080000
*            HASPWARM PERFORMS A SINGLE SYSTEM OR NODAL WARM START    * 50082000
*            FOLLOWING JES2 INITIALIZATION OR AS THE RESULT OF A      * 50084000
*            $ESYS COMMAND.                                           * 50086000
*                                                                     * 50088000
* NOTES = SEE BELOW                                                   * 50090000
*                                                                     * 50092000
*    DEPENDENCIES = NONE                                              * 50094000
*                                                                     * 50096000
*    RESTRICTIONS = NONE                                              * 50098000
*                                                                     * 50100000
*    REGISTER CONVENTIONS = SEE BELOW FOR INDIVIDUAL ROUTINES         * 50102000
*                                                                     * 50104000
*                           R11 = BASE1 = HCT ADDRESSABILITY          * 50106000
*                           R12 = BASE2 = ROUTINES BASE REGISTER      * 50108000
*                           R13 = SAVE  = PCE ADDRESSABILITY          * 50110000
*                                                                     * 50112000
*    PATCH LABEL = NONE                                               * 50114000
*                                                                     * 50116000
* MODULE TYPE = PROCEDURE ( CSECT TYPE )                              * 50118000
*                                                                     * 50120000
*    PROCESSOR = ASSEMBLER F                                          * 50122000
*                                                                     * 50124000
*    MODULE SIZE = SEE $DLENGTH MACRO EXPANSION(S) AT END OF ASSEMBLY * 50126000
*                                                                     * 50128000
*    ATTRIBUTES = READ ONLY, AFTER PROCESSOR INITIALIZATION, AND      * 50130000
*                 HASP REENTRANT                                      * 50132000
*                                                                     * 50134000
* ENTRY POINT 1 = HASPVPRG FOR THE PURGE PROCESSOR                    * 50136000
*             2 = HASPCKPT FOR THE CHECKPOINT PROCESSOR               * 50138000
*             6 = HASPGPRC FOR THE PRIORITY AGING PROCESSOR           * 50140000
*             7 = HASPWARM FOR THE JOB QUEUE WARM START PROCESSOR     * 50142000
*                                                                     * 50144000
*    PURPOSE = SEE FUNCTION                                           * 50146000
*                                                                     * 50148000
*    LINKAGE = R12 = BASE2 = ENTRY POINT AND BASE REGISTER            * 50150000
*              R13 = SAVE  = PCE SAVE AREA ADDRESSABILITY             * 50152000
*                                                                     * 50154000
* INPUT = HASPVPRG USES MACRO $QGET TO ACCESS JOB QUEUE ELEMENTS THAT * 50156000
*         ARE TO BE PURGED AND $EXCP TO ACCESS JCTS AND IOTS FOR      * 50158000
*         THE JQES.                                                   * 50160000
*                                                                     * 50162000
*        HASPCKPT ACCESSES THE JOB QUEUE BUFFER, THE JOB AND JOT      * 50164000
*        CHECKPOINT CONTROL TABLES, THE MASTER TRACK GROUP MAP,       * 50166000
*        THE TRACK GROUP BLOCK, THE TRACK EXTENT DATA TABLES,         * 50168000
*        THE CHECKPOINT DEVICE SRB-IOSB AND UCB, THE SHARED QUEUE     * 50170000
*        CONTROL ELEMENTS, AND FIELDS IN THE HCT AND SSVT.            * 50172000
*                                                                     * 50174000
*         HASPGPRC ACCESSES JOB QUEUE ENTRIES.                        * 50176000
*                                                                     * 50178000
*         HASPWARM ACCESSES THE REMOTE SIGN-ON TABLE, THE QSES,       * 50180000
*         THE JOT AND THE JOB QUEUE.                                  * 50182000
*                                                                     * 50184000
* OUTPUT = HASPVPRG PUTS A HASP SMF BUFFER, WITH A TYPE 26 RECORD     * 50186000
*         IN IT, ON THE BUSY QUEUE.                                   * 50188000
*                                                                     * 50190000
*        HASPCKPT WRITES CHECKPOINT RECORDS, CLEARS THE CHECKPOINT    * 50192000
*        CONTROL TABLES, UPDATES THE MASTER TRACK GROUP MAP AND       * 50194000
*        TRACK GROUP BLOCK, AND CHANGES CONTROL FIELDS IN THE         * 50196000
*        CHECKPOINT UCB, QSES, HCT, AND SSVT.                         * 50198000
*                                                                     * 50200000
*         HASPGPRC UPDATES JOB QUEUE ELEMENTS PRIORITY FIELDS         * 50202000
*                                                                     * 50204000
*         HASPWARM UPDATES THE RESOURCES ACCESSED AS INPUT.           * 50206000
*                                                                     * 50208000
* EXIT-NORMAL = HASPVPRG $WAITS FOR JOB                               * 50210000
*                                                                     * 50212000
*               HASPCKPT $WAITS FOR CKPW AND/OR WORK (TIMER)          * 50214000
*                                                                     * 50216000
*               HASPGPRC $WAITS FOR WORK                              * 50218000
*                                                                     * 50220000
*               HASPWARM $WAITS FOR WORK                              * 50222000
*                                                                     * 50224000
* EXIT-ERROR = HASPVPRG ISSUES $IOERROR AND $DISTERR MSGS IF EITHER   * 50226000
*              A JCT OR AN IOT IS INVALID                             * 50228000
*                                                                     * 50230000
*              HASPCKPT ISSUES $IOERROR AND EXITS WITH CATASTROPHIC   * 50232000
*              ERROR CODE K02 OR K04 IF UNRECOVERABLE I/O ERRORS      * 50234000
*              OCCUR DURING READ OR WRITE OF CHECKPOINT RECORDS.      * 50236000
*              INVALID ALTERATION OF SHARED QUEUES BY THIS OR         * 50238000
*              ANOTHER SYSTEM CAUSES EXIT WITH CODE K01 OR K03.       * 50240000
*              MESSAGES 260, 093, OR 355 ARE ISSUED WITH $WTO IF      * 50242000
*              POTENTIAL SHARED DASD LOCKOUT, SPOOL WARNING           * 50244000
*              PERCENTAGE, OR SPOOL FULL CONDITIONS ARE DETECTED.     * 50246000
*                                                                     * 50248000
*              HASPGPRC HAS NO ERROR EXIT                             * 50250000
*                                                                     * 50252000
*              HASPWARM HAS NO ERROR EXIT                             * 50254000
*                                                                     * 50256000
* EXTERNAL REFERENCES = SEE BELOW                                     * 50258000
*                                                                     * 50260000
*    ROUTINES = NONE                                                  * 50262000
*                                                                     * 50264000
*    DATA AREAS = SEE BELOW                                           * 50266000
*                                                                     * 50268000
*    CONTROL BLOCKS = SEE $HASPCB MACRO FOR CONTROL BLOCKS USED       * 50270000
*                                                                     * 50272000
* TABLES = SEE BELOW                                                  * 50274000
*                                                                     * 50276000
* MACROS = $ENTRY, $QGET, $ACTIVE, $WAIT, $GETBUF, $EXCP, $IOERROR    * 50278000
*          $DISTERR, $PURGE, $GETSMFB, $QUESMFB, $QREM, $WTO,         * 50280000
*          $FREEBUF, $DORMANT, $POST, $TTIMER, $STIMER, $DLENGTH      * 50282000
*          $BFRBLD, $PGRLSE, $GETLOK, $FRELOK, $ERROR, $MSG,          * 50284000
*          MODESET, STARTIO                                           * 50286000
*                                                                     * 50287000
* CHANGE ACTIVITY                                                     * 50287100
*                                                                     * 50287200
*     RELEASE 4.0 = OZ02439,OZ03301,OZ03308,OZ03316,OZ04304,OZ04316,  * 50287400
*                   OZ04971,OZ04992,OZ04996,OZ08144,OZ08232,OZ10287   * 50287500
*                                                                     * 50287600
*     RELEASE 4.1 = OZ09107,OZ11763,OZ11776,OZ12270,OZ12289,OZ14441,  * 50287700
*                   OZ14890,OZ15818                                   * 50287800
*                                                                     * 50294000
*********************************************************************** 50296000
         EJECT                                                          50298000
         SPACE 5                                                        50300000
*                                                                       50302000
*****    $HASPCB   *****           GENERATE HASP CONTROL BLOCKS         50304000
*                                                                       50306000
         MACRO                                                          50308000
         $HASPCB &DOC=NO,&LIST=NO                                       50310000
         GBLC  &PRINT,&GEN,&DATA                                        50312000
         PUSH  PRINT                                                    50314000
         PRINT &PRINT                                                   50316000
         $CVT  LIST=&LIST          GENERATE OS CVT DSECT                50318000
         $SSCT LIST=&LIST          GENERATE OS SSCT DSECT               50320000
         $SSOB (SO,JS),LIST=&LIST  GENERATE OS SSOB DSECT            R4 50322000
         $SRB  LIST=&LIST          GENERATE OS SRB DSECT                50324000
         $DCB  LIST=&LIST          GENERATE OS DCB DSECT             R4 50326000
         $DEB  LIST=&LIST          GENERATE OS DEB DSECT             R4 50328000
         $IOSB LIST=&LIST          GENERATE OS IOSB DSECT               50330000
         $UCB  LIST=&LIST          GENERATE OS UCB DSECT                50332000
         $DYN  LIST=&LIST          GENERATE OS DYN DSECT             R4 50334000
         $BASEA LIST=&LIST         GENERATE OS BASEA DSECT              50336000
         $IOCM LIST=&LIST          GENERATE OS IOCM DSECT               50338000
         $TED  DOC=&DOC            GENERATE HASP TED DSECT              50340000
         $TGB  DOC=&DOC            GENERATE HASP TGB DSECT              50342000
         $TGM  DOC=&DOC            GENERATE HASP TGM DSECT              50344000
         $TAB  DOC=&DOC            GENERATE HASP TAB DSECT           R4 50346000
         $SVT  DOC=&DOC            GENERATE HASP SSVT DSECT             50348000
         $SJB  DOC=&DOC            GENERATE HASP SJB DSECT              50350000
         $HCT  DOC=&DOC            GENERATE HASP HCT DSECT              50352000
         $PCE  DOC=&DOC            GENERATE HASP PCE DSECT              50354000
         $LRC  DOC=&DOC            GENERATE HASP LRC DSECT          R41 50355000
         $BUFFER DOC=&DOC          GENERATE HASP BUFFER DSECT           50356000
         $SMF  DOC=&DOC            GENERATE HASP SMF DSECT              50358000
         $JQE  DOC=&DOC            GENERATE HASP JQE DSECT              50360000
         $JOE  DOC=&DOC            GENERATE HASP JOE DSECT              50362000
         $JOT  DOC=&DOC            GENERATE HASP JOT DSECT              50364000
         $QSE  DOC=&DOC            GENERATE HASP QSE DSECT              50366000
         $JQB  DOC=&DOC            GENERATE HASP JQB DSECT           R4 50368000
         $JCT  DOC=&DOC            GENERATE HASP JCT DSECT              50370000
         $PDDB DOC=&DOC            GENERATE PDDB DSECTSECT              50372000
         $IOT  DOC=&DOC            GENERATE HASP IOT DSECT              50374000
         $DCT  DOC=&DOC            GENERATE HASP DCT DSECT              50376000
         $TQE  DOC=&DOC            GENERATE HASP TQE DSECT              50378000
         $HQR  DOC=&DOC            GENERATE HASP HQR DSECT              50380000
         $HQT  DOC=&DOC            GENERATE HASP HQT DSECT              50382000
         $PSO  DOC=&DOC            GENERATE HASP PSO DSECT           R4 50384000
         $SPL  DOC=&DOC            GENERATE HASP SPL DSECT           R4 50386000
         $CKPWORK DOC=&DOC         GENERATE HASP CKPWORK DSECT      R41 50387000
         $WARMWRK DOC=&DOC         GENERATE HASP WARMWRK DSECT       R4 50388000
         SPACE 1                                                        50390000
         POP   PRINT                                                    50392000
         PRINT &GEN,&DATA          SET ASSEMBLY PRINT OPTIONS           50394000
         MEND                                                           50396000
         TITLE 'HASP MISCELLANEOUS PROCESSORS'                          50398000
         SPACE 5                                                        50400000
HASPMISC START 0                   HASP MISCELLANEOUS PROCESSORS        50402000
         SPACE 5                                                        50404000
*                                                                       50406000
*                             EXTERNAL REFERENCES                       50408000
*                                                                       50410000
         SPACE 5                                                        50412000
         COPY  $HASPGEN            COPY HASPGEN PARAMETERS              50414000
         TITLE 'HASP CONTROL BLOCKS'                                    50416000
         SPACE 5                                                        50418000
HASPMISC $ENTRY BASE=,CSECT=YES    PROVIDE PROCESSOR IDENTIFICATION     50420000
         SPACE 5                                                        50422000
*                                                                       50424000
*                             DOCUMENTATION OPTIONS FOR THIS ASSEMBLY   50426000
*                                                                       50428000
         SPACE 3                                                        50430000
        $SYSPARM (OFF,GEN,NODATA,NO,NO)                                 50432000
         SPACE 5                                                        50434000
*                                                                       50436000
*                             GENERATE HASP CONTROL BLOCKS              50438000
*                                                                       50440000
         SPACE 3                                                        50442000
        $HASPCB DOC=&DOC,LIST=&LIST  GENERATE HASP CONTROL BLOCKS       50444000
         TITLE 'HASP PURGE PROCESSOR'                                   50446000
*********************************************************************** 50448000
*                                                                     * 50450000
* PROCESSOR NAME -- HASPVPRG                                          * 50452000
*                                                                     * 50454000
* DESCRIPTIVE NAME -- JES2 PURGE PROCESSOR                            * 50456000
*                                                                     * 50458000
* FUNCTION -- FREE ALL TRACKS ACQUIRED FOR A JOB, QUEUE FOR OUTPUT    * 50460000
*             AN SMF PURGE RECORD (TYPE 26) AND OPTIONALLY A JMR      * 50462000
*             BUFFER, AND NOTIFY THE OPERATOR THAT THE JOB IS PURGED. * 50464000
*                                                                     * 50466000
* NOTES -- 1) TO IMPROVE THE PERFORMANCE OF THIS PROCESSOR, PERMANENT * 50468000
*             STORAGE IS OBTAINED, VIA GETMAIN, TO SERVE AS BUFFER    * 50470000
*             STORAGE FOR A JCT AND AN IOT.  WHEN THE PROCESSOR HAS   * 50472000
*             NO MORE WORK TO DO, THE BUFFER STORAGE IS PAGE-RELEASED.* 50474000
*                                                                     * 50476000
* REGISTER CONVENTIONS -- R1  -- WORK REGISTER                        * 50478000
*                         WA  -- JQE ADDRESS                          * 50480000
*                         WB  -- DCT ADDRESS                          * 50482000
*                         WC  -- WORK REGISTER                        * 50484000
*                         WD  -- IOT ADDRESS                          * 50486000
*                         WE  -- LINK REGISTER                        * 50488000
*                         WF  -- WORK REGISTER                        * 50490000
*                         JCT -- JCT ADDRESS                          * 50492000
*                                                                     * 50494000
*********************************************************************** 50496000
         EJECT                                                          50498000
*********************************************************************** 50500000
*                                                                     * 50502000
*        H A S P V P R G   I N I T I A L   E N T R Y   P O I N T      * 50504000
*                                                                     * 50506000
*********************************************************************** 50508000
         SPACE 2                                                        50510000
         USING JQEDSECT,WA         PROVIDE JQE ADDRESSABILITY           50512000
         USING IOTDSECT,WD         PROVIDE IOT ADDRESSABILITY           50514000
         SPACE 2                                                        50516000
HASPVPRG $ENTRY BASE=BASE2         PROVIDE PROCESSOR ENTRY POINT        50518000
         SPACE 1                                                        50520000
*********************************************************************** 50522000
*                                                                     * 50524000
*        C O M P U T E   S T O R A G E   R E Q U I R E M E N T        * 50526000
*                                                                     * 50528000
*********************************************************************** 50530000
         SPACE 1                                                        50532000
         LH    R1,$BUFLENG         GET TOTAL SINGLE BUFFER SIZE      R4 50534000
         LR    WA,R1               TENTATIVE ADDRESS OF NEXT BUFFER     50536000
         LR    R0,WA               R0 = STARTING ADDR OF NEXT BUFFER    50538000
         SRL   R0,12                DIVIDED BY 4K                       50540000
         ALR   R1,WA               R1 = ADDRESS OF LAST BYTE            50542000
         BCTR  R1,0                 OF NEXT BUFFER                      50544000
         SRL   R1,12                 DIVIDED BY 4K                      50546000
         CLR   R0,R1               DOES BUFFER CROSS 4K BOUNDARY...     50548000
         BE    *+10                BR IF NO TO USE TENTATIVE BFR ADDR   50550000
         SLL   R1,12                ELSE USE NEXT 4K BOUNDARY AS        50552000
         LR    WA,R1                 STARTING ADDR OF NEXT BUFFER       50554000
         LR    WD,WA               SAVE RELATIVE ADDR OF NEXT BFR       50556000
         AH    WA,$BUFLENG         R0 = TOTAL BUFFER STORAGE         R4 50558000
         LA    R0,4095(,WA)         REQUIREMENT ROUNDED                 50560000
         SRL   R0,12                 UP TO NEXT                         50562000
         SLL   R0,12                  4K BOUNDARY                       50564000
         ST    R0,VSTORAGE         SAVE BUFFER STORAGE REQUIREMENT      50566000
         EJECT                                                          50568000
*********************************************************************** 50570000
*                                                                     * 50572000
*        O B T A I N   P E R M A M E N T   B U F F E R   S T O R A G E* 50574000
*                                                                     * 50576000
*********************************************************************** 50578000
         SPACE 1                                                        50580000
         GETMAIN RC,LV=(0),BNDRY=PAGE  GET THE BUFFER STORAGE           50582000
         LR    JCT,R1              SAVE JCT BUFFER ADDRESS              50584000
         ALR   WD,R1               SAVE IOT BUFFER ADDRESS              50586000
         ICM   JCT,8,=AL1(X'80')   SHOW BUFFER PAGE(S) RELEASED         50588000
         LA    WB,PCEDADCT         GET DIRECT ACCESS DCT ADDRESS        50590000
         MVI   PCEDEVTP,PCEDARD    SET READ REQUEST FOR $EXCP           50592000
         LTR   R15,R15             TEST GETMAIN                         50594000
         BZ    VGETJOB             BR IF SUCCESSFUL                     50596000
V02     $ERROR                      ELSE CRUMP                          50598000
         SPACE 1                                                        50600000
VSTORAGE DC    A(*-*)              SIZE OF PERMANENT BUFFER STORAGE     50602000
         EJECT                                                          50604000
VNOJOB   LTR   JCT,JCT             HAS BUFFER STORAGE BEEN RELEASED...  50606000
         BM    VJBWAIT             BR IF SO                             50608000
         SPACE 1                                                        50610000
*********************************************************************** 50612000
*                                                                     * 50614000
*        R E L E A S E   B U F F E R   P A G E ( S )                  * 50616000
*                                                                     * 50618000
*********************************************************************** 50620000
         SPACE 1                                                        50622000
        $PGSRVC RLSE,(JCT),VSTORAGE    RELEASE JCT/IOT BUFFER PG(S)  R4 50624000
         ICM   JCT,8,=AL1(X'80')   SHOW BUFFER PAGE(S) RELEASED         50626000
         SPACE 1                                                        50628000
*********************************************************************** 50630000
*                                                                     * 50632000
*        W A I T   F O R   A   J O B   T O   P U R G E                * 50634000
*                                                                     * 50636000
*********************************************************************** 50638000
         SPACE 1                                                        50640000
VJBWAIT $WAIT  JOB,INHIBIT=NO      $WAIT FOR JOB TO BE QUEUED           50642000
         SPACE 1                                                        50644000
VGETJOB $QGET  $PURGE,VNOJOB       TRY TO GET A JOB                     50646000
         LR    WA,R1               SAVE JQE ADDRESS                     50648000
        $ACTIVE                    INDICATE PROCESSOR ACTIVE            50650000
         LTR   JCT,JCT             HAS BUFFER STORAGE BEEN RELEASED...  50652000
         BP    VGETJCT             BR IF NO                             50654000
         LA    JCT,0(,JCT)          ELSE RESET PAGE-RELEASED FLAG       50656000
        $BFRBLD (JCT)              BUILD IOB WITHIN JCT BUFFER          50658000
        $BFRBLD (WD)               BUILD IOB WITHIN IOT BUFFER          50660000
         EJECT                                                       R4 50662000
*********************************************************************** 50664000
*                                                                     * 50666000
*        R E A D   I N   T H E   J C T                                * 50668000
*                                                                     * 50670000
*********************************************************************** 50672000
         SPACE 1                                                        50674000
VGETJCT  ST    JCT,PCEBUFAD        SET BUFFER ADDRESS FOR $EXCP         50676000
         MVC   PCESEEK,JQETRAK     SET TRACK ADDRESS FOR $EXCP          50678000
        $EXCP  (WB)                READ THE JCT                         50680000
         SPACE 1                                                     R4 50682000
VWAIT1  $WAIT  IO                  WAIT FOR I/O TO COMPLETE             50684000
         TM    BUFECBCC-BUFDSECT(JCT),X'7F'  TEST I/O STATUS            50686000
         BZ    VWAIT1              BR IF I/O NOT COMPLETE               50688000
         IC    WF,JQEFLAGS         SAVE JQE FLAG BYTE                   50690000
         SPACE 1                                                        50692000
*********************************************************************** 50694000
*                                                                     * 50696000
*        ISSUE 'JOB PURGED' MESSAGE -- REMOVE JOB FROM SYSTEM         * 50698000
*                                                                     * 50700000
*********************************************************************** 50702000
         SPACE 1                                                        50704000
VREMJOB  LR    JCT,WA              RELOAD JQE ADDRESS               R41 50705500
        $WTO   VPRGMSG,L'VPRGMSG,WAIT=YES,JOB=YES,                  R41C50706000
               ROUTE=$LOG+$UR,CLASS=$TRIVIA,PRI=$ST                 R41 50706500
         L     JCT,PCEBUFAD        RESTORE JCT ADDRESS              R41 50707000
        $QREM  (WA)                REMOVE JOB FROM SYSTEM           R41 50707500
        $WAIT  CKPT                WAIT FOR CHECKPOINT TO COMPLETE      50708000
         TM    BUFECBCC-BUFDSECT(JCT),X'7F'  TEST JCT READ              50710000
         BO    VNOERROR            BR IF JCT READ WITHOUT ERROR         50712000
        $IOERROR (JCT)              ELSE ISSUE I/O ERROR MSG            50714000
         SPACE 1                                                        50716000
VERROR  $DISTERR                   INDICATE DISASTEROUS ERROR           50718000
         B     VDONE               BR TO CONTINUE                   R41 50720000
         EJECT                                                       R4 50722000
*********************************************************************** 50724000
*                                                                     * 50726000
*        R E A D   I O T ( S )   A N D   P U R G E   T R A C K S      * 50728000
*                                                                     * 50730000
*********************************************************************** 50732000
         SPACE 1                                                        50734000
         CNOP  0,8                                                      50736000
VNOERROR L     R1,JCTJQE           VALIDATE                             50738000
         AL    R1,$JOBQPTR          THE                                 50740000
         CLR   R1,WA                 JCT                                50742000
         BNE   VERROR              BR IF INVALID JCT                    50744000
         ST    WD,PCEBUFAD         SET BUFFER ADDRESS FOR $EXCP         50746000
         ICM   R1,15,JCTSPIOT      GET TRK ADDR OF 1ST SPIN IOT         50748000
         BZ    *+16                BR IF NONE                           50750000
         BAL   WE,VIOTPRG           ELSE READ IOT AND PURGE TRACKS      50752000
         ICM   R1,15,IOTIOTTR      GET TRK ADDR OF NEXT SPIN IOT        50754000
         BNZ   *-8                 BR IF VALID TRACK ADDRESS            50756000
         ICM   R1,15,JCTIOT        GET TRK ADDR OF 1ST REGULAR IOT      50758000
         BZ    VSMFPRG             BR IF NONE                           50760000
         BAL   WE,VIOTPRG           ELSE READ IOT AND PURGE TRACKS      50762000
         B     VSMFPRG             THEN BR TO WRITE SMF RECORDS         50764000
         EJECT                                                          50766000
*********************************************************************** 50768000
*                                                                     * 50770000
*        VIOTPRG -- ROUTINE TO READ IOT AND PURGE TRACKS              * 50772000
*                                                                     * 50774000
*********************************************************************** 50776000
         SPACE 1                                                        50778000
         CNOP  0,8                                                      50780000
VIOTPRG  ST    R1,PCESEEK          SET TRACK ADDRESS FOR $EXCP          50782000
        $EXCP  (WB),WAIT=YES       READ THE IOT                      R4 50784000
         BO    VNOIOTER            BR IF NO READ ERROR                  50786000
         SPACE 1                                                        50788000
VDSTER  $DISTERR                   INDICATE DISASTEROUS ERROR           50790000
         B     VSMFPRG             THEN WRITE SMF PURGE RECORD          50792000
         SPACE 1                                                        50794000
         CNOP  0,8                                                      50796000
VNOIOTER CLC   IOTJBKEY,JCTJBKEY   TEST FOR VALID IOT                   50798000
         BNE   VDSTER              BR IF NO                             50800000
         TM    IOTFLAG1,IOT1ALOC   TEST FOR ALLOCATION IOT              50802000
         BZR   WE                  RETURN IF NO                         50804000
        $PURGE IOTTGMAP             ELSE PURGE ALLOCATED TRACKS         50806000
         BR    WE                  THEN RETURN                          50808000
         EJECT                                                       R4 50810000
         CNOP  0,8                                                      50812000
VSMFPRG  CLI   $NUMSMFB,2          TEST SMF BUFFER COUNT             R4 50814000
         BL    VDONE               BR IF SMF NOT SUPPORTED          R41 50816000
         TM    JCTSMFLG,JCTNOUJP+JCTNOT26  PURGE EXIT OR 26...          50818000
         BO    VDONE               BR IF NO                         R41 50820000
         BZ    *+16                BR IF BOTH                           50822000
         TM    JCTSMFLG,JCTNOUJP   PURGE EXIT...                        50824000
         BZ    *+8                 BR IF SO                             50826000
         NI    JCTINDC,255-JCTJMRUX  ELSE INDICATE NO EXIT           R4 50828000
         SPACE 1                                                        50830000
*********************************************************************** 50832000
*                                                                     * 50834000
*        GET SMF BUFFER(S) FOR PURGE RECORD(S)                        * 50836000
*                                                                     * 50838000
*********************************************************************** 50840000
         SPACE 1                                                     R4 50842000
         USING SMFDSECT,R1                                              50844000
         SPACE 1                                                        50846000
        $GETSMFB WAIT=YES          OBTAIN JMR BUFFER ADDRESS            50848000
         TM    JCTINDC,JCTJMRUX    SHOULD USER EXITS BE TAKEN           50850000
         BZ    VCRE826             NO, DO NOT SAVE JMR                  50852000
         MVC   SMFJMR(JCTJMRND-JCTJMR),JCTJMR  MOVE JMR TO SMF RCD   R4 50854000
         MVI   SMFTYPE,SMFJMRTP    JMR BUFFER ID                        50856000
         LR    WC,R1               SAVE BUFFER ADDR. FOR PURGE REC      50858000
        $GETSMFB WAIT=YES          OBTAIN PURGE RECORD BFR ADDR         50860000
         EJECT                                                       R4 50862000
*********************************************************************** 50864000
*                                                                     * 50866000
*        FORMAT AND QUEUE SMF TYPE 26 (PURGE) RECORD                  * 50868000
*                                                                     * 50870000
*********************************************************************** 50872000
         SPACE 1                                                        50874000
VCRE826  TM    JCTSMFLG,JCTNOT26   WRITE 26 RECORD...                   50876000
         BZ    *+8                 BR IF SO                             50878000
         OI    SMF26FLG,SMFNO26    NO                                   50880000
         MVC   SMF26JBN(SMFSIZE1),JCTJMRJN   GATHER PURGE RECORD INTO   50882000
         MVC   SMF26UIF,JCTUSEID         SMF BUFFER - HEADER            50884000
         MVC   SMF26JBF(JCTJBOPT+L'JCTJBOPT-JCTJOBFL),JCTJOBFL          50886000
         MVC   SMF26JNM(JCTPROCN+L'JCTPROCN-JCTJOBID-4),JCTJOBID+4  R41 50888000
         MVC   SMF26JID,JCTJOBID   JOB ID                               50890000
         MVC   SMF26RPT(SMFSIZE3),JCTRDROF        TIME/DATE OFF READER  50892000
         MVC   SMF26CST(JCTODTOF+L'JCTODTOF-JCTCNVON),JCTCNVON       R4 50894000
         MVC   SMF26ICD(JCTOTSID+L'JCTOTSID-JCTCARDS),JCTCARDS          50900000
         STC   WF,PCER1            STORE JQE FLAG BYTE               R4 50902000
         TM    PCER1,QUEOPCAN+QUEPURGE  DID OPERATOR ISSUE $C OR $P     50904000
         BZ    *+8                 BR IF NO                             50906000
         OI    SMF26INF,SMFOPCAN   INDICATE OPERATOR CANCELLED JOB      50908000
         MVC   SMFRDW(2),=Y(SMF26END-SMFRDW)  SIZE OF PURGE RECORD   R4 50910000
         MVI   SMF26LN1+1,SMF26PDD+L'SMF26PDD-SMF26LN1 DESC LENGTH  R41 50912000
         MVI   SMF26LN2+1,SMF26OPD+L'SMF26OPD-SMF26LN2 EVENTS LGTH      50914000
         MVI   SMF26LN3+1,SMF26END-SMF26LN3    ACTUALS LENGTH           50918000
         MVI   SMFHDRTY,SMFPRGTP   IDENTIFY PURGE RECORD TYPE           50926000
         MVI   SMF26SBS+1,SMFHSPID HASP SUBSYSTEM ID                    50928000
         MVI   SMF26IND,X'E0'      SECTION EXISTENCE IDENTIFIER         50930000
         TM    JCTINDC,JCTJMRUX    SHOULD USER EXITS BE TAKEN           50942000
         BZ    *+10                BR IF NO TO NOT CHAIN BUFFERS        50944000
         ST    R1,JMRCHAIN-SMFDSECT(WC) PUT PURGE BUF ADDR IN JMR BUF   50946000
         LR    R1,WC               PUT JMR IN SMF BUFFER BUSY           50948000
        $QUESMFB                   QUEUE BUFFER(S) FOR WRITING          50950000
         SPACE 1                                                        50952000
         DROP  R1                                                       50954000
         SPACE 1                                                        50956000
SMFSIZE1 EQU   L'SMF26JBN+L'SMF26RST+L'SMF26RSD                      R4 50958000
SMFSIZE3 EQU   L'SMF26RPT+L'SMF26RPD                                 R4 50966000
         EJECT                                                          50968000
*********************************************************************** 50970000
*                                                                     * 50972000
*        PROCESSING COMPLETE FOR THIS JOB                             * 50974000
*                                                                     * 50976000
*********************************************************************** 50978000
         SPACE 1                                                        50980000
VDONE   $DORMANT                   INDICATE PROCESSOR INACTIVE      R41 50986000
         B     VGETJOB             BR TO GET NEXT JOB                   50988000
         SPACE 1                                                        50990000
         DROP  WA,WD               KILL JQE, IOT ADDRESSABILITY         50992000
         SPACE 1                                                        50994000
VPRGMSG $MSG   250,'IS PURGED'                                          50996000
         LTORG                                                 @OZ20010 50997000
         TITLE 'HASP CHECKPOINT PROCESSOR'                              50998000
*********************************************************************** 51000000
*                                                                     * 51002000
*    HASP CHECKPOINT PROCESSOR (SEE PROLOG ABOVE FOR DESCRIPTION)     * 51004000
*                                                                     * 51006000
*********************************************************************** 51008000
         SPACE 1                                                        51010000
HASPCKPT $ENTRY BASE=BASE2                                              51012000
         SPACE 2                                                        51014000
*********************************************************************** 51016000
*                                                                     * 51018000
*    INITIALIZATION  -  EXECUTED ONLY ONCE                            * 51020000
*                                                                     * 51022000
*********************************************************************** 51024000
         SPACE 1                                                        51026000
         ST    SAVE,CKPSTQE+IPOST  STORE PCE ADDRESS IN STQE        R41 51028000
         TM    $RUNOPTS,$RPS       SEE IF RPS FEATURE SHOULD   @OZ20010 51029000
         BZ    KINIT1                BE USED, BRANCH IF NOT    @OZ20010 51030000
         L     R1,$SSVT                     GET POINTER        @OZ20010 51031000
         L     R1,$SVRELSE-SSVT(,R1)        TO CHECKPOINT      @OZ20010 51032000
         L     R1,IOSUCB-IOSB+SRBSIZE(,R1)  DEVICE UCB         @OZ20010 51033000
         TM    UCBTBYT2-UCBDSECT(R1),UCBRPS TEST UCBTYPE BYTE2 @OZ20010 51034000
         BZ    KINIT1              BRANCH IF RPS NOT SUPPORTED @OZ20010 51035000
         OI    CKPFLAG1,CKP1RPS    SET 'RPS' BIT IN WORK AREA  @OZ20010 51036000
         SPACE 1                                               @OZ20010 51037000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51038000
KINIT1   MVC   PCESEEK,$HASPDCB    SET DA DCT                  @OZ20010 51040000
         MVI   PCEDEVTP,DCTINT      TO LOOK LIKE UNIT RECORD            51042000
         L     WE,$CKPTIOB         LOAD ADDRESS OF JOBQ BUFFER @OZ20010 51056000
         USING JQBDSECT,WE         PROVIDE JQB ADDRESSABILITY        R4 51058000
         ST    WE,PCEBUFAD         STORE IOB ADDR IN DA DCT    @OZ20010 51060000
                                   PRINT OFF - SECTION DELETED @OZ20010 51062000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51064000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51066000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51068000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51070000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51072000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51074000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51076000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51078000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51080000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51082000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51084000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51086000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51088000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51090000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51092000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51094000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51096000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51098000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51100000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51102000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51104000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51106000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51108000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51110000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51112000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51114000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51116000
                                   PRINT ON -- SECTION DELETED @OZ20010 51118000
         SPACE 1                                                     R4 51120000
         EJECT                                                       R4 51122000
*********************************************************************** 51124000
*                                                                     * 51126000
*    GO DO INITIAL READ IF SHARED SYSTEM                              * 51128000
*                                                                     * 51130000
*********************************************************************** 51132000
         SPACE 1                                                        51134000
KINITRD  L     R1,$QSE1            GET ADDRESS OF 1ST QSE            R4 51136000
         TM    QSEFLAGS-QSEDSECT(R1),QSELAST  TEST FOR ONE SYSTEM    R4 51138000
         BNZ   KSTRTPP             BR IF SO TO SKIP INIT READ  @OZ20010 51140000
         OI    CKPFLAG1,CKP1IRD    SET 'INITIAL READ' FLAG     @OZ20010 51140500
         B     KRDCCWS               AND GO READ IN QUEUES     @OZ20010 51141000
         SPACE 2                                                        51142000
*********************************************************************** 51144000
*                                                                     * 51146000
*    START PRINT/PUNCH TIMER AND SKIP ALL READING IF SINGLE SYSTEM    * 51148000
*                                                                     * 51150000
*********************************************************************** 51152000
         SPACE 1                                                        51154000
KSTRTPP  NI    $STATUS,255-$QSONDA INDICATE QUEUES IN STORAGE  @OZ20010 51154200
         TM    $RUNOPTS,$DEBUG     CHECK FOR 'DEBUG' ACTIVE,   @OZ20010 51154400
         BZ    KSTRTPP1              BYPASS NEXT IF NOT        @OZ20010 51154600
         L     R0,$JBQREAD         POINT TO CKPT READ-IN AREA  @OZ20010 51154800
         LH    R1,$JOBRECN         DEVELOP TOTAL               @OZ20010 51155000
         AH    R1,$JOTRECN           LENGTH OF JOBQ            @OZ20010 51155200
         SLL   R1,12                 AND JOT                   @OZ20010 51155400
         L     R14,$JOBQPTR        POINT TO ACTUAL CKPT AREA   @OZ20010 51155600
         LR    R15,R1              SET SAME LENGTH             @OZ20010 51155800
         MVCL  R0,R14              MOVE COPY OF Q'S FOR DEBUG  @OZ20010 51156000
         SPACE 1                                               @OZ20010 51156200
KSTRTPP1 L     R0,$CKPTIME         START TIMER FOR             @OZ20010 51158000
         BAL   WA,KSTIMER           PRINT/PUNCH CHECKPOINT INTERVAL     51160000
         B     KRDTIMER            BR TO BYPASS CKPT READING   @OZ20010 51162000
         EJECT                                                          51164000
*********************************************************************** 51166000
*                                                                     * 51168000
*    BEGIN READ OPERATION                                             * 51170000
*                                                                     * 51172000
*********************************************************************** 51174000
         SPACE 1                                                        51176000
KREAD    TM    $RUNOPTS,$DEBUG     TEST DEBUG OPTION                 R4 51178000
         BZ    KRDCCWS             BR IF NOT SELECTED                R4 51180000
         SPACE 2                                                        51182000
*********************************************************************** 51184000
*                                                                     * 51186000
*    CHECK FOR INVALID CHANGE TO SHARED QUEUE AREA WHILE NOT OWNED    * 51188000
*                                                                     * 51190000
*********************************************************************** 51192000
         SPACE 1                                                        51194000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51196000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51198000
         L     R14,$JOBQPTR        POINT TO JOB QUEUE                R4 51200000
         LH    R15,$JOBRECN        GET NO. OF JOBQ RECORDS     @OZ20010 51202000
         AH    R15,$JOTRECN          ADD NO. OF JOT RECORDS,   @OZ20010 51202500
         SLL   R15,12                MULTIPLY BY PAGE SIZE     @OZ20010 51203000
         L     R0,$JBQREAD         POINT TO IN-AREA JOBQ/JOT   @OZ20010 51204000
         LR    R1,R15              DUPLICATE FIELD LENGTH               51206000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51208000
         CLCL  R14,R0              COMPARE JOBQ/JOT WITH COPY  @OZ20010 51210000
                                   PRINT OFF - SECTION DELETED @OZ20010 51212000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51214000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51216000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51218000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51220000
                                   PRINT ON -- SECTION DELETED @OZ20010 51222000
         BE    KRDCCWS             BRANCH IF EQUAL                      51224000
         SPACE 1                                                     R4 51226000
KRDK01   LR    R1,R0               PRESERVE R0 FOR DEBUGGING         R4 51228000
K01     $ERROR                     INVALID CHANGE OF SHARED QUEUES      51230000
         EJECT                                                 @OZ20010 51232000
***************************************************************@OZ20010 51234000
*                                                              @OZ20010 51236000
*    PAGE-FIX RECORD ONE READ-IN AREA FOR EXCPVR               @OZ20010 51238000
*                                                              @OZ20010 51240000
***************************************************************@OZ20010 51242000
         SPACE 1                                               @OZ20010 51244000
KRDCCWS  LA    WB,JQBCCWS          POINT TO FIRST SET OF CCWS, @OZ20010 51246000
         USING JQBCCWE,WB            SET UP ADDRESSABILITY     @OZ20010 51248000
         L     R1,$CKPR1RD         POINT TO REC 1 READ-AREA    @OZ20010 51250000
         BAL   WC,KR1FIX           PAGE FIX FIRST REC AREA     @OZ20010 51252000
         MVI   JQBCRW,X'06'        SET CCW TO 'READ'           @OZ20010 51254000
         MVC   JQBCTNXT,KRNOP      SET ENDING TIC TO 'NOP'     @OZ20010 51256000
         LA    R0,JQBCCWS          SET ADDRESS OF 1ST CCW      @OZ20010 51257000
         ST    R0,IOBSTART-BUFDSECT+JQBDSECT  IN IOB           @OZ20010 51258000
                                   PRINT OFF - SECTION DELETED @OZ20010 51260000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51262000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51263000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51264000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51266000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51268000
                                   PRINT ON -- SECTION DELETED @OZ20010 51270000
         SPACE 1                                               @OZ20010 51272000
*********************************************************************** 51274000
*                                                                     * 51276000
*    SET TO RESERVE CHECKPOINT DEVICE                                 * 51278000
*                                                                     * 51280000
*********************************************************************** 51282000
         SPACE 1                                                        51284000
        $GETLOK                    ACQUIRE LOCAL AND CMS LOCKS          51286000
         MODESET EXTKEY=ZERO       CHANGE TO KEY ZERO                   51288000
         L     R14,$SSVT           OBTAIN                      @OZ20010 51288200
         USING SSVT,R14              SSVT ADDRESSABILITY       @OZ20010 51288400
         L     R15,$SVRELSE        POINT TO CKPT DEVICE        @OZ20010 51288600
         L     R15,IOSUCB-IOSB+SRBSIZE(,R15) UCB               @OZ20010 51288800
         USING UCBDSECT,R15        UCB ADDRESSABILITY          @OZ20010 51289000
         IC    R1,UCBSQC           INCREMENT                            51290000
         LA    R1,1(,R1)            CHECKPOINT DEVICE                   51292000
         STC   R1,UCBSQC             RESERVE COUNT                      51294000
         OI    $SVSTUS,$SVSTCRV    INDICATE CHECKPOINT RESERVED         51296000
         DROP  R14,R15             DROP SSVT, UCB ADDR.        @OZ20010 51297000
        $FRELOK                    RELEASE LOCAL AND CMS LOCKS          51298000
         EJECT                                                 @OZ20010 51300000
*********************************************************************** 51302000
*                                                                     * 51304000
*    DO READ WITH TIMER TO DETECT LOCKOUT BY OTHER SYSTEMS            * 51306000
*                                                                     * 51308000
*********************************************************************** 51310000
         SPACE 1                                                        51312000
*                                  THIS LINE DELETED BY APAR   @OZ20010 51313000
         L     R0,$WARNTIM         START TIMER TO DETECT             R4 51314000
         BAL   WA,KSTIMER           SHARED QUEUES CONTROL LOCKOUT       51316000
         LA    R1,PCEDADCT         ISSUE V=R EXCP TO READ      @OZ20010 51318000
        $EXCP  (R1),TYPE=VR          FIRST RECORD FROM DASD    @OZ20010 51320000
         SPACE 1                                                    R41 51321000
KRDWAIT $WAIT  IO,INHIBIT=NO       WAIT FOR I/O OR TIMER                51322000
         CLI   BUFECBCC-BUFDSECT+JQBDSECT,0 I/O COMPLETE...    @OZ20010 51324000
         BNE   KRDIOCC             BR IF YES                         R4 51326000
         TM    CKPSTQE+IPOST,X'80' HAS TIMER EXPIRED...             R41 51328000
         BZ    KRDWAIT             BR IF NO TO IGNORE $POST          R4 51330000
         MVC   CKPMSG(L'KWARNMSG),KWARNMSG MOVE MSG TO WKAREA  @OZ16669 51332000
         $$WTO CKPMSG              ISSUE WARNING MESSAGE       @OZ16669 51334000
         L     R0,$WARNTIM         RESTART                           R4 51336000
         BAL   WA,KSTIMER           WARNING TIMER                       51338000
         B     KRDWAIT             GO WAIT AGAIN                        51340000
         EJECT                                                          51342000
*********************************************************************** 51344000
*                                                                     * 51346000
*    CHECK FOR UNREADABLE RECORD                               @OZ20010 51348000
*                                                                     * 51350000
*********************************************************************** 51352000
         SPACE 1                                                        51354000
KRDIOCC  BAL   WA,KTTIMER          STOP TIMER                           51356000
         CLI   BUFECBCC-BUFDSECT+JQBDSECT,X'7F' CK I/O COMP.   @OZ20010 51356100
         BE    KRD1OK              BRANCH IF OK                @OZ20010 51356200
        $IOERROR (WE)              ISSUE I/O ERROR MESSAGE     @OZ20010 51356300
K02     $ERROR                     CKPT RECORDS UNREADABLE     @OZ20010 51356400
         SPACE 1                                               @OZ20010 51356500
***************************************************************@OZ20010 51356600
*                                                              @OZ20010 51356700
*    FORCE READ OF ALL JOBQ/JOT RECORDS IF INITIAL             @OZ20010 51356800
*    READ ON SHARED SYSTEM                                     @OZ20010 51356900
*                                                              @OZ20010 51357000
***************************************************************@OZ20010 51357100
         SPACE 1                                               @OZ20010 51357200
KRD1OK   L     WC,$RQSE            POINT TO OUR QSE IN IN-AREA @OZ20010 51357300
         USING QSEDSECT,WC         QSE ADDRESSABILITY          @OZ20010 51357400
         TM    CKPFLAG1,CKP1IRD    SEE IF INITIAL READ         @OZ20010 51357500
         BZ    KREAD2                BRANCH IF NOT             @OZ20010 51357600
         NI    CKPFLAG1,X'FF'-CKP1IRD   RESET FLAG             @OZ20010 51357700
         LH    R14,$JOBRECN        COMPUTE NUMBER OF JOBQ      @OZ20010 51357800
         AH    R14,$JOTRECN          AND JOT RECORDS           @OZ20010 51357900
         LR    R1,WC               POINT TO FIRST JOBQ/JOT     @OZ20010 51358000
         BCTR  R1,0                  CHECKPOINT CONTROL BYTE   @OZ20010 51358100
         AH    R1,$QSECTLB           MINUS ONE                 @OZ20010 51358200
         LA    R0,X'7F'            NON-ZERO BYTE               @OZ20010 51358300
         SPACE 1                                               @OZ20010 51358400
KRD1ALL  STC   R0,0(R1,R14)        FORCE CTL BYTE NON-ZERO     @OZ20010 51358500
         BCT   R14,KRD1ALL         LOOP THRU ALL BYTES         @OZ20010 51358600
         EJECT                                                 @OZ20010 51358700
***************************************************************@OZ20010 51358800
*                                                              @OZ20010 51358900
*    FIX READ-IN AREA PAGES, SET CCW ENTRIES TO READ           @OZ20010 51359000
*    JOBQ AND JOT RECORDS AS INDICATED BY QSE                  @OZ20010 51359100
*                                                              @OZ20010 51359200
***************************************************************@OZ20010 51359300
         USING JQBCCWE,WD          CCW ENTRY ADDRESSABILITY    @OZ20010 51359400
         SPACE 1                                               @OZ20010 51359500
KREAD2   LA    WB,JQBCCWS          'OLD' CCW ENTRY             @OZ20010 51359600
         LA    WD,L'JQBCCWEL(,WB)  'CURRENT' CCW ENTRY         @OZ20010 51359700
         AH    WC,$QSECTLB         POINT TO CTL BYTES IN QSE   @OZ20010 51359800
         DROP  WC                  DROP QSE ADDRESSABILITY     @OZ20010 51359900
         L     R1,$JBQREAD         FIRST PAGE IN-AREA ADDR     @OZ20010 51360000
         LH    WF,$JOBRECN         TOTAL NUMBER OF RECORDS     @OZ20010 51360100
         AH    WF,$JOTRECN           IN JOBQ AND JOT           @OZ20010 51360200
         SLR   R0,R0               ZERO OUT STARTING CCW       @OZ20010 51360300
         ST    R0,IOBSTART-BUFDSECT+JQBDSECT ADDR IN IOB       @OZ20010 51360400
         SPACE 1                                               @OZ20010 51360500
KRD2LP   CLI   0(WC),0             SEE IF ZERO BYTE            @OZ20010 51360600
         BE    KRD2ADJ             SKIP READ-IN IF SO          @OZ20010 51360700
         L     R0,=F'4096'         LENGTH OF PAGE FOR FIX      @OZ20010 51360800
         LA    R2,CKPECB           DUMMY ECB FOR FIX           @OZ20010 51360900
        $PGSRVC FIX,(R1),(R0),(R2) FIX IN-AREA PAGE            @OZ20010 51361000
         LRA   R0,0(,R1)           PUT REAL ADDRESS OF PAGE    @OZ20010 51361100
         ST    R0,JQBCRW             INTO 'READ' CCW           @OZ20010 51361200
         MVI   JQBCRW,X'06'        SET CCW TO 'READ'           @OZ20010 51361300
         BAL   WA,KCCWADJ          LINK CCW ENTRY TO PREVIOUS  @OZ20010 51361400
         LR    WB,WD               SET 'PREVIOUS' ENTRY ADDR   @OZ20010 51361500
         CLC   IOBSTART-BUFDSECT+JQBDSECT,=F'0'  SET ADDR OF   @OZ20010 51361600
         BNE   KRD2ADJ                           FIRST CCW IN  @OZ20010 51361700
         ST    WB,IOBSTART-BUFDSECT+JQBDSECT     IOBSTART      @OZ20010 51361800
         SPACE 1                                               @OZ20010 51361900
KRD2ADJ  LA    WC,1(,WC)           BUMP CTL BYTE POINTER       @OZ20010 51362000
         AL    R1,=F'4096'         POINT TO NEXT IN-AREA PAGE  @OZ20010 51362100
         LA    WD,JQBCNEXT         POINT TO NEXT CCW ENTRY     @OZ20010 51362200
         BCT   WF,KRD2LP           LOOP THRU ALL RECORDS       @OZ20010 51362300
         DROP  WD                  DROP CCW ENTRY ADDR.        @OZ20010 51362400
         SPACE 1                                               @OZ20010 51362500
***************************************************************@OZ20010 51362600
*                                                              @OZ20010 51362700
*    ISSUE EXCPVR TO READ JOBQ/JOT RECORDS, IF ANY REQUIRED    @OZ20010 51362800
*                                                              @OZ20010 51362900
***************************************************************@OZ20010 51363000
         SPACE 1                                               @OZ20010 51363100
         LA    R0,JQBCCWS          SEE IF ANYTHING TO READ     @OZ20010 51363200
         CLR   R0,WB                 AT ALL                    @OZ20010 51363300
         BE    KRDMVHCT            SKIP READ IF NOTHING        @OZ20010 51363400
         MVC   JQBCTNXT,KRNOP      SET LAST TIC TO 'NOP'       @OZ20010 51363500
         LA    R1,PCEDADCT         ISSUE V=R EXCP TO READ      @OZ20010 51363600
        $EXCP  (R1),TYPE=VR,WAIT=YES  JOBQ AND JOT RECORDS     @OZ20010 51363700
         BNO   K02                 BRANCH IF I/O ERROR         @OZ20010 51363800
         EJECT                                                 @OZ20010 51363900
***************************************************************@OZ20010 51364000
*                                                              @OZ20010 51364100
*    MOVE NEWLY-READ JOBQ/JOT PAGES TO REAL JOBQ/JOT AREA,     @OZ20010 51364200
*    PAGE-RELEASING EACH TARGET PAGE JUST BEFORE MOVE          @OZ20010 51364300
*                                                              @OZ20010 51364400
***************************************************************@OZ20010 51364500
         SPACE 1                                               @OZ20010 51364600
KRDMOVE  L     WB,$JBQREAD         READ-IN AREA ADDRESS        @OZ20010 51364700
         L     WD,$JOBQPTR         ACTUAL JOBQ/JOT AREA ADDR.  @OZ20010 51364800
         L     WC,$RQSE            POINT TO CTL BYTES IN       @OZ20010 51364900
         AH    WC,$QSECTLB           OUR QSE                   @OZ20010 51365000
         LH    WF,$JOBRECN         LOAD COUNT OF RECORDS       @OZ20010 51365100
         AH    WF,$JOTRECN           TO PROCESS                @OZ20010 51365200
         SPACE 1                                               @OZ20010 51365300
KRDMVLP  CLI   0(WC),0             SEE IF RECORD READ IN       @OZ20010 51365400
         BE    KRDMVADJ              BRANCH IF NOT             @OZ20010 51365500
         MVI   0(WC),0             ZERO OUT CONTROL BYTE       @OZ20010 51365600
         LR    R1,WD               LOAD ADDRESS AND            @OZ20010 51365700
         L     R0,=F'4096'           LENGTH FOR PAGE FIX       @OZ20010 51365800
         LA    R2,CKPECB           DUMMY ECB FOR PAGE FIX      @OZ20010 51365900
        $PGSRVC FIX,(R1),(R0),(R2),RELEASE=Y PAGE-RELEASE,     @OZ20010C51366000
                                     THEN FIX FOR MVCL         @OZ20010 51366100
         LR    R0,WB               USE MVCL TO                 @OZ20010 51366200
         L     R1,=F'4096'           MOVE PAGE                 @OZ20010 51366300
         LR    R14,WD                JUST READ IN FROM         @OZ20010 51366400
         LR    R15,R1                INPUT AREA TO             @OZ20010 51366500
         MVCL  R14,R0                ACTUAL JOBQ/JOT PAGE      @OZ20010 51366600
         LR    R1,WD               LOAD ADDRESS AND            @OZ20010 51366700
         L     R0,=F'4096'           LENGTH FOR PAGE FREE      @OZ20010 51366800
        $PGSRVC FREE,(R1),(R0)     FREE JOBQ/JOT PAGE          @OZ20010 51366900
         LR    R1,WB               LOAD ADDRESS AND LENGTH     @OZ20010 51367000
         L     R0,=F'4096'           FOR PAGE FREE/RELEASE     @OZ20010 51367100
         TM    $RUNOPTS,$DEBUG     IF 'DEBUG', FREE PAGE       @OZ20010 51367200
         BZ    KRDMVRL               OTHERWISE, RELEASE PAGE   @OZ20010 51367300
         SPACE 1                                               @OZ20010 51367400
KRDMVFR $PGSRVC FREE,(R1),(R0)     PAGE FREE READ-IN AREA PAGE @OZ20010 51367500
         B     KRDMVADJ            BRANCH TO BOTTOM OF LOOP    @OZ20010 51367600
         SPACE 1                                               @OZ20010 51367700
KRDMVRL $PGSRVC FREE,(R1),(R0),RELEASE=Y FREE/RLSE READ-PAGE   @OZ20010 51367800
         SPACE 1                                               @OZ20010 51367900
KRDMVADJ AL    WB,=F'4096'         BUMP IN-AREA ADDRESS        @OZ20010 51368000
         AL    WD,=F'4096'         BUMP JOBQ/JOT ADDRESS       @OZ20010 51368100
         LA    WC,1(,WC)           BUMP CTL BYTE POINTER       @OZ20010 51368200
         BCT   WF,KRDMVLP          LOOP THRU ALL RECORDS       @OZ20010 51368300
         SPACE 1                                               @OZ20010 51368400
***************************************************************@OZ20010 51368500
*                                                              @OZ20010 51368600
*    MOVE CHECKPOINTED HCT VARIABLES TO HCT                    @OZ20010 51368700
*                                                              @OZ20010 51368800
***************************************************************@OZ20010 51368900
         SPACE 1                                               @OZ20010 51369000
KRDMVHCT L     R0,$CKPR1RD         START OF REC1 READ-IN AREA  @OZ20010 51369100
         L     R1,$CKPTR1L         LOAD TOTAL LENGTH OF REC1   @OZ20010 51369200
         LA    R14,$SAVEBEG        START OF HCT VARIABLE AREA  @OZ20010 51369300
         LA    R15,$SAVELEN        LENGTH OF THAT AREA ONLY    @OZ20010 51369400
         MVCL  R14,R0              MOVE CKPT'D HCT VARIABLES   @OZ20010 51369500
         L     R14,$QSE1           START OF ACTUAL QSE AREA    @OZ20010 51369600
         LR    R15,R1              REMAINING LENGTH            @OZ20010 51369700
         MVCL  R14,R0              MOVE REST OF REC1 DATA      @OZ20010 51369800
         SPACE 1                                               @OZ20010 51369900
         L     R1,$CKPR1RD         LOAD ADDR AND LENGTH FOR    @OZ20010 51370000
         L     R0,$CKPTR1L           PAGE RELEASE              @OZ20010 51370100
        $PGSRVC FREE,(R1),(R0),RELEASE=Y FREE/RLSE REC1 AREA   @OZ20010 51370200
         EJECT                                                 @OZ20010 51370300
***************************************************************@OZ20010 51370400
*                                                              @OZ20010 51370500
*    CHECK FOR SYSTEM ID(S) INTEGRITY IN QSE(S)                @OZ20010 51370600
*                                                              @OZ20010 51370700
***************************************************************@OZ20010 51370800
         SPACE 1                                               @OZ20010 51370900
KRDSID   L     WC,$AQSE            SET ADDRESSABILITY          @OZ20010 51371000
         USING QSEDSECT,WC           FOR QSE                   @OZ20010 51371100
                                   PRINT OFF - SECTION DELETED @OZ20010 51372000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51374000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51376000
                                   PRINT ON -- SECTION DELETED @OZ20010 51378000
         CLC   $SIDTIME,QSESITIM   VERIFY SYSTEM ID OWNERSHIP  @OZ20010 51380000
         BNE   K03                 BRANCH IF NOT OK                     51382000
         L     R1,$ESYSQSE         GET ADDRESS OF $ESYS QSE             51384000
         LTR   R1,R1               IS $ESYS IN PROCESS                  51386000
         BZ    KRDOK               BRANCH IF NOT                        51388000
         CLC   $SIDTIME,QSESITIM-QSEDSECT(R1)  VERIFY $ESYS ID TOD      51390000
         BE    KRDOK               BRANCH IF OK                         51392000
K03     $ERROR                     TWO SYSTEMS USING SAME ID            51394000
         SPACE 1                                                     R4 51396000
KRDOK    ICM   R1,15,$MCONPCE      POINT TO REMOTE CONSOLE PCE       R4 51398000
         BZ    KRDNORCP            BR IF NO REMOTE CONSOLE PROCESSOR R4 51400000
        $POST  (R1),WORK            ELSE WAKE IT UP                  R4 51402000
         SPACE 1                                                     R4 51404000
KRDNORCP DS    0H                                                    R4 51406000
         EJECT                                                       R4 51538000
*********************************************************************** 51540000
*                                                                     * 51542000
*    MAKE SHARED RESOURCES AVAILABLE TO OTHER PROCESSORS              * 51544000
*                                                                     * 51546000
*********************************************************************** 51548000
         SPACE 1                                                        51550000
*              THIS LINE DELETED BY APAR NUMBER                @OZ32185 51552000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51554000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51556000
         NI    $STATUS,255-$QSONDA INDICATE SHARED QUEUES READ @OZ20010 51558000
        $POST  $HASPECF,CKPT       $POST PCES $WAITING IN $QSUSE        51560000
*                                  THIS LINE DELETED BY APAR   @OZ20010 51560100
*                                  THIS LINE DELETED BY APAR   @OZ20010 51560200
*                                  THIS LINE DELETED BY APAR   @OZ20010 51560300
*                                  THIS LINE DELETED BY APAR   @OZ20010 51560400
         EJECT                                                          51576000
*********************************************************************** 51578000
*                                                                     * 51580000
*    PROPAGATE JOB, JOT, AND SPECIFIC $POSTS FROM OTHER SYSTEMS       * 51582000
*                                                                     * 51584000
*********************************************************************** 51586000
         SPACE 1                                                        51588000
KRCPNP   TM    QSEFLAGS,QSEPOST    TEST FOR CROSS-SYSTEM $POSTS     R41 51590000
         BZ    KRDEND              BRANCH IF NONE                       51592000
         TM    QSEFLAGS,QSEPJOB    TEST FOR CROSS-SYSTEM $POST JOB      51594000
         BZ    KRDPOCNV            BRANCH IF NOT                        51596000
        $POST  $HASPECF,JOB        $POST JOB                            51598000
         B     KRDPOJOT            SKIP SPECIFIC JOB POSTING            51600000
         SPACE 1                                                    R41 51601000
KRDPOCNV TM    QSEFLAGS,QSEPCNV    TEST FOR XSYS $POST CONVERTER        51602000
         BZ    KRDPOXEQ            BRANCH IF NOT                        51604000
         L     R1,$JCLPCE          GET ADDRESS OF CONVERTER PCE      R4 51606000
        $POST  (R1),JOB             AND $POST FOR JOB                   51608000
         SPACE 1                                                    R41 51609000
KRDPOXEQ TM    QSEFLAGS,QSEPXEQ    TEST FOR XSYS $POST EXECUTION        51610000
         BZ    KRDPOOUT            BRANCH IF NOT                        51612000
         L     R1,$SSVT            POINT TO SSVT               @OZ20010 51613000
         MVI   $SVJOB-SSVT(R1),X'80' $$POST XEQ PROCESSOR      @OZ20010 51614000
         L     R1,$EXECPCE         GET ADDRESS OF EXECUTION PCE      R4 51616000
        $POST  (R1),JOB             AND $POST FOR JOB                   51618000
         SPACE 1                                                    R41 51619000
KRDPOOUT TM    QSEFLAGS,QSEPOUT    TEST FOR XSYS $POST OUTPUT           51620000
         BZ    KRDPOPRG            BRANCH IF NOT                        51622000
         L     R1,$OUTPCE          GET ADDRESS OF OUTPUT PCE         R4 51624000
        $POST  (R1),JOB             AND $POST FOR JOB                   51626000
         EJECT                                                       R4 51628000
KRDPOPRG TM    QSEFLAGS,QSEPPRG    TEST FOR XSYS $POST PURGE            51630000
         BZ    KRDPOJOT            BRANCH IF NOT                        51632000
         L     R1,$PRGPCE          GET ADDRESS OF PURGE PCE          R4 51634000
        $POST  (R1),JOB             AND $POST FOR JOB                   51636000
         SPACE 1                                                    R41 51637000
KRDPOJOT TM    QSEFLAGS,QSEPJOT    TEST FOR CROSS-SYSTEM $POST JOT      51638000
         BZ    KRDPOMLM            BRANCH IF NOT                        51640000
        $POST  $HASPECF,JOT        $POST JOT                            51642000
         CLI   $WTRWTCT,0          TEST FOR WAITING XWTRS               51644000
         BE    KRDEND              BRANCH IF NOT                        51646000
         L     R15,=V($#WTR)       GO POST                              51648000
         BALR  R14,R15              WAITING XWTRS                       51650000
         B     KRDEND              SKIP SPECIFIC JOT POSTING            51652000
         SPACE 1                                                    R41 51653000
KRDPOMLM TM    QSEFLAGS,QSEPMLM    TEST FOR XSYS $POST MHASPECF,JOT     51654000
         BZ    KRDEND              BRANCH IF NOT                        51656000
         NI    MHASPECF+$EWBJOT,255-$EWFJOT  TELL LINE MANAGER          51658000
         DROP  WC                  DROP QSE ADDRESSABILITY     @OZ20010 51659000
         EJECT                                                      R41 51660000
*********************************************************************** 51662000
*                                                                     * 51664000
*    START HOLD INTERVAL TIMER (IF ANY)                               * 51666000
*                                                                     * 51668000
*********************************************************************** 51670000
         SPACE 1                                                        51672000
KRDEND   L     WA,$WARMPCE         GET WARM START PROCESSOR PCE     R41 51674000
         CLC   17(3,WA),=AL3(NQWARM)  WARM START IN PROGRESS...     R41 51674200
         BE    KRDHOLD             BR IF NO                    @OZ24298 51674400
         L     R0,=F'-500'         GET 5 SECOND INTERVAL            R41 51674600
         C     R0,$MINHOLD         TEST USER INTERVAL               R41 51674800
         BL    KRDTIM              BR IF LESS THAN 5 SECONDS        R41 51675000
         SPACE 1                                                    R41 51675200
KRDHOLD  L     R0,$MINHOLD         GET MINIMUM HOLD INTERVAL        R41 51675400
         SPACE 1                                                    R41 51675600
KRDTIM   BAL   WA,KSTIMER          SET MINIMUM HOLD INTERVAL        R41 51676000
                                   PRINT OFF - SECTION DELETED @OZ20010 51678000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51680000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51682000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51684000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51686000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51688000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51690000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51692000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51694000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51696000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51698000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51700000
                                   PRINT ON -- SECTION DELETED @OZ20010 51702000
         SPACE 1                                                     R4 51704000
KRDTIMER TM    CKPSTQE+IPOST,X'80' IS TIMER GOING...                R41 51706000
         BO    KWRLOOP                BR IF NO TO $POST        @OZ32185 51708000
         LM    R0,R1,$EWQTRAK          IF ANY                  @OZ32185 51708100
         CL    R1,PCEPCEB-PCEDSECT(,R1) PROCESSORS OR          @OZ32185 51708200
         BNE   KWRLOOP                   ADDR SPACES           @OZ32185 51708300
         L     R1,$SSVT                   WAITING FOR TRKS     @OZ32185 51708400
         TM    $SVTGECB-SSVT(R1),X'80'     POST OURSELVES      @OZ32185 51708500
         BZ    KWRREQS                      TO FORCE KBLOB     @OZ32185 51708600
         EJECT                                                          51710000
*********************************************************************** 51712000
*                                                                     * 51714000
*        $WAIT FOR CHECKPOINT REQUEST, ENSURING THAT ALL OTHER        * 51716000
*        PROCESSORS ARE $WAITING WHEN CHECKPOINTING BEGINS            * 51718000
*                                                                     * 51720000
*********************************************************************** 51722000
         SPACE 1                                                        51724000
KWRLOOP $POST  $HASPECF,CKPW       POST OURSELVES TO INSURE REENTRY     51726000
         SPACE 1                                                     R4 51728000
KWRREQS $WAIT  CKPW,INHIBIT=NO     WAIT FOR WRITE REQUEST OR TIMER      51730000
         LM    R0,R1,PCEPCEA       TEST CONTENTS OF                     51732000
         CLR   R0,R1                DISPATCHER'S READY QUEUE            51734000
         BNE   KWRLOOP             BRANCH IF OTHER PCES ARE READY       51736000
         OI    $STATUS,$CKPTACT    INDICATE CHECKPOINT WRITE ACTIVE     51738000
         OI    $HASPECF+$EWBCKPT,$EWFCKPT  BACK OUT RESOURCE POST    R4 51740000
         EJECT                                                       R4 51742000
*********************************************************************** 51744000
*                                                                     * 51746000
*    PAGE-FIX RECORD 1 I/O AREA -- SET CCWS TO WRITE RECORD 1  @OZ20010 51748000
*                                                                     * 51750000
*********************************************************************** 51752000
         SPACE 1                                                        51754000
KWRCCWS  LA    WB,JQBCCWS          POINT TO CCW ENTRY FOR      @OZ20010 51756000
         USING JQBCCWE,WB            RECORD ONE                @OZ20010 51758000
         L     R1,$CKPTR1          POINT TO START OF I/O AREA  @OZ20010 51760000
         BAL   WC,KR1FIX           PAGE FIX REC1 I/O AREA      @OZ20010 51762000
         MVI   JQBCRW,X'05'        SET CCW TO 'WRITE'          @OZ20010 51764000
         SPACE 1                                               @OZ20010 51766000
***************************************************************@OZ20010 51768000
*                                                              @OZ20010 51770000
*    SET UP CCWS TO WRITE CHANGED JOBQ/JOT RECORDS             @OZ20010 51772000
*                                                              @OZ20010 51774000
***************************************************************@OZ20010 51776000
         SPACE 1                                               @OZ20010 51778000
         LA    WD,JQBCNEXT         POINT TO 1ST JOBQ RECORD'S  @OZ20010 51780000
         DROP  WB                    CCW ENTRY.  CHANGE BASE   @OZ20010 51782000
         USING JQBCCWE,WD            REG FOR CCW ENTRIES       @OZ20010 51784000
         L     WC,$JOBCTLB         POINT TO CKPT CTL BYTES     @OZ20010 51786000
         LH    WF,$JOBRECN         LOAD TOTAL NUMBER OF        @OZ20010 51788000
         AH    WF,$JOTRECN           PAGES IN CKPT FILE        @OZ20010 51790000
         L     WG,$JOBQPTR         POINT TO ACTUAL Q-AREA      @OZ20010 51792000
         L     R10,$JBQREAD        POINT TO INPUT AREA         @OZ20010 51794000
         SPACE 1                                               @OZ20010 51796000
KWRLOOP1 CLI   0(WC),0             IF PAGE IS FLAGGED FOR      @OZ20010 51798000
         BNE   KWRFIX1               CKPT, BR TO FIX FOR WRITE @OZ20010 51800000
         TM    $RUNOPTS,$DEBUG     IF 'DEBUG' NOT SELECTED,    @OZ20010 51802000
         BZ    KWRL1ADJ              TRY NEXT PAGE             @OZ20010 51804000
         LR    R0,WG               USE CLCL TO                 @OZ20010 51806000
         L     R1,=F'4096'           COMPARE 'UNCHANGED'       @OZ20010 51808000
         LR    R14,R10               PAGE WITH LAST            @OZ20010 51810000
         LR    R15,R1                INPUT PAGE FROM CKPT      @OZ20010 51812000
         CLCL  R14,R0                FILE                      @OZ20010 51814000
         BE    KWRL1ADJ            BRANCH IF REALLY UNCHANGED  @OZ20010 51816000
         LR    R1,R0               PRESERVE REG0 FOR DEBUGGING @OZ20010 51818000
         SPACE 1                                               @OZ20010 51820000
K05     $ERROR                     SOMEONE FORGOT TO CKPT      @OZ20010 51822000
         SPACE 1                                               @OZ20010 51824000
KWRFIX1  LR    R1,WG               LOAD ADDR OF PAGE           @OZ20010 51826000
         L     R0,=F'4096'         LOAD LENGTH                 @OZ20010 51828000
         LA    R2,CKPECB           POINT TO DUMMY ECB          @OZ20010 51830000
        $PGSRVC FIX,(R1),(R0),(R2) FIX PAGE FOR I/O            @OZ20010 51832000
         LRA   R1,0(,R1)           SET REAL ADDRESS OF PAGE    @OZ20010 51834000
         ST    R1,JQBCRW             IN READ/WRITE CCW         @OZ20010 51836000
         MVI   JQBCRW,X'05'        SET CCW TO 'WRITE'          @OZ20010 51838000
         BAL   WA,KCCWADJ          SET CCW ENTRY CHAIN         @OZ20010 51840000
         LR    WB,WD               SET 'PREV' TO 'CURRENT'     @OZ20010 51842000
         SPACE 1                                               @OZ20010 51844000
         TM    $RUNOPTS,$DEBUG     IF 'DEBUG' NOT SELECTED,    @OZ20010 51846000
         BZ    KWRL1ADJ              BR TO TRY NEXT PAGE       @OZ20010 51848000
         LR    R0,WG               MOVE COPY OF CHANGED        @OZ20010 51850000
         L     R1,=F'4096'           PAGE TO 'INPUT AREA'      @OZ20010 51852000
         LR    R14,R10               FOR LATER                 @OZ20010 51854000
         LR    R15,R1                DEBUG                     @OZ20010 51856000
         MVCL  R14,R0                COMPARISONS               @OZ20010 51858000
         SPACE 1                                               @OZ20010 51860000
KWRL1ADJ AL    WG,=F'4096'         NEXT Q-AREA PAGE            @OZ20010 51862000
         AL    R10,=F'4096'        NEXT IN-AREA PAGE           @OZ20010 51864000
         LA    WD,JQBCNEXT         NEXT CCW ENTRY              @OZ20010 51866000
         LA    WC,1(,WC)           NEXT CKPT CONTROL BYTE      @OZ20010 51868000
         BCT   WF,KWRLOOP1         LOOP THRU JOBQ AND JOT      @OZ20010 51870000
         DROP  WD                  DROP CCW ENTRY ADDR         @OZ20010 51872000
         MVC   JQBCTNXT-JQBCCWE(,WB),KRNOP LAST TIC = 'NO OP'  @OZ20010 51874000
                                   PRINT OFF - SECTION DELETED @OZ20010 51876000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51878000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51880000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51882000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51884000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51886000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51888000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51890000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51892000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51894000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51896000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51898000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51900000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51902000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51904000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51906000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51908000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51910000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51912000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51914000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51916000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51918000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51920000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51922000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51924000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51926000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51928000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51930000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51932000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51934000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51936000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51938000
                                   PRINT ON -- SECTION DELETED @OZ20010 51940000
         EJECT                                                       R4 51942000
*********************************************************************** 51944000
*                                                                     * 51946000
*    COLLECT RECORD ONE AND $POSTS FOR OTHER SYSTEMS                  * 51948000
*                                                                     * 51950000
*********************************************************************** 51952000
         SPACE 1                                                     R4 51954000
*                                  THIS CARD DELETED BY APAR   @OZ20010 51956000
         LH    R15,$JOBRECN        COMPUTE LENGTH              @OZ20010 51958000
         AH    R15,$JOTRECN          OF BYTE STRING            @OZ20010 51960000
         BCTR  R15,0                 LESS ONE FOR EXECUTE      @OZ20010 51962000
         L     WD,$JOBCTLB         POINT TO JOB/JOT CTL BYTES  @OZ20010 51963000
         L     R1,$QSE1            GET ADDRESS OF 1ST QSE            R4 51964000
         SH    R1,$QSEL            BACK UP ONE QSE                  R41 51966000
         USING QSEDSECT,R1         QSE ADDRESSABILITY          @OZ20010 51966500
         SPACE 1                                                    R41 51967000
KWRXSYSP AH    R1,$QSEL            GET ADDRESS OF NEXT QSE           R4 51968000
         OC    QSEFLAGS,$AQSE      PROPAGATE XSYS $POSTS       @OZ20010 51970000
         LR    R14,R1              POINT TO CKPT CONTROL       @OZ20010 51970500
         AH    R14,$QSECTLB          BYTES IN QSE              @OZ20010 51971000
         EX    R15,KWRXOC          SET CKPT CTL BYTES IN QSE   @OZ20010 51971500
         TM    QSEFLAGS,QSELAST    TEST FOR LAST QSE           @OZ20010 51972000
         BZ    KWRXSYSP            LOOP IF NOT                          51974000
         MVI   $AQSE,0             CLEAR CROSS-SYSTEM $POSTS IN HCT     51976000
         SPACE 1                                                    R41 51977000
         L     R1,$AQSE            POINT TO OUR QSE            @OZ20010 51977500
         NI    QSEFLAGS,255-QSEPOST CLEAR X-S $POST BITS       @OZ20010 51978000
         LR    R14,R1              POINT TO CKPT CONTROL       @OZ20010 51978200
         AH    R14,$QSECTLB          BYTES IN QSE              @OZ20010 51978400
         EX    R15,KWRXXC          CLEAR OUR CKPT CTL BYTES    @OZ20010 51978600
         B     KREFILL             GO REFILL TGB               @OZ20010 51978800
         SPACE 1                                               @OZ20010 51979000
KWRXOC   OC    0(*-*,R14),0(WD)    *** EXECUTE ONLY ***        @OZ20010 51979200
KWRXXC   XC    0(*-*,R14),0(R14)   *** EXECUTE ONLY ***        @OZ20010 51979400
         DROP  R1                  DROP QSE ADDRESSABILITY     @OZ20010 51979600
         SPACE 2                                                        51980000
*********************************************************************** 51982000
*                                                                     * 51984000
*    REFILL TRACK GROUP BLOCK                                         * 51986000
*                                                                     * 51988000
*********************************************************************** 51990000
         SPACE 1                                                        51992000
KREFILL  BAL   R14,KBLOB           GO UNBLOB/BLOB              @OZ20010 51994000
         EJECT                                                 @OZ20010 51996000
*********************************************************************** 51998000
*                                                                     * 52000000
*    TIME STAMP HCT AND OWNED QSE(S)                                  * 52002000
*                                                                     * 52004000
*********************************************************************** 52006000
         SPACE 1                                                        52008000
         L     R1,$AQSE            POINT TO OUR QSE,           @OZ20010 52008500
         USING QSEDSECT,R1           SET UP ADDRESSABILITY     @OZ20010 52009000
         STCK  $SIDTIME            STORE TOD IN HCT                     52010000
         MVC   QSESITIM,$SIDTIME    AND IN QSE AS CHKPT WRITE TIME      52012000
         L     R1,$ESYSQSE         GET ADDRESS OF $ESYS QSE             52014000
         LTR   R1,R1               IS $ESYS IN PROCESS                  52016000
         BZ    *+10                SKIP IF NOT                          52018000
         MVC   QSESITIM,$SIDTIME   MOVE TOD TO $ESYS QSE       @OZ20010 52020000
         DROP  R1                  DROP QSE ADDRESSABILITY     @OZ20010 52022000
*                                  THIS CARD DELETED BY APAR   @OZ20010 52024000
         SPACE 1                                               @OZ20010 52026000
*********************************************************************** 52028000
*                                                                     * 52030000
*    MOVE HCT VARIABLES FOR WRITE                              @OZ20010 52032000
*                                                                     * 52034000
*********************************************************************** 52036000
         SPACE 1                                                        52038000
         L     R0,$CKPTR1          POINT TO R1 I/O AREA        @OZ20010 52040000
         LA    R1,$SAVELEN         LENGTH OF HCT VARIABLES     @OZ20010 52042000
         LA    R14,$SAVEBEG        POINT TO HCT VARIABLES      @OZ20010 52044000
         LR    R15,R1              DUPLICATE LENGTH FOR MOVE   @OZ20010 52046000
         MVCL  R0,R14              MOVE HCT VARIABLES          @OZ20010 52048000
                                   PRINT OFF - SECTION DELETED @OZ20010 52050000
*                                  THIS CARD DELETED BY APAR   @OZ20010 52052000
                                   PRINT ON -- SECTION DELETED @OZ20010 52054000
         EJECT                                                 @OZ20010 52056000
                                   PRINT OFF - SECTION DELETED @OZ20010 52058000
*                                  THIS CARD DELETED BY APAR   @OZ20010 52060000
                                   PRINT ON -- SECTION DELETED @OZ20010 52062000
*********************************************************************** 52064000
*                                                                     * 52066000
*    DO WRITE, CHECK FOR PERMANENT WRITE ERROR                        * 52068000
*                                                                     * 52070000
*********************************************************************** 52072000
         SPACE 1                                                        52074000
         LA    R1,JQBCCWS          POINT IOBSTART TO BEGINNING @OZ20010 52074200
         ST    R1,IOBSTART-BUFDSECT+JQBDSECT OF CCW CHAIN      @OZ20010 52074400
         LA    R1,PCEDADCT         START I/O TO WRITE RECORD   @OZ20010 52074600
        $EXCP (R1),TYPE=VR         1 AND CHANGED RECORDS       @OZ32185 52074800
        $POST  $HASPECF,TRAK       SHOW TRACKS AVAILABLE       @OZ32185 52074810
         L     WF,$SSVT            GET SSVT POINTER            @OZ32185 52074820
         USING SSVT,WF             SSVT ADDRESSABILITY         @OZ32185 52074830
         L     R0,$SVTGECB         R0 = OTHER MEMORY ECB       @OZ32185 52074840
         SPACE 1                                               @OZ32185 52074850
KPOSTL   LTR   R0,R0               IF WAITING                  @OZ32185 52074860
         BM    KXMTRAK              DO LONG FORM POST          @OZ32185 52074870
         L     R1,=A(X'7F000000')  R1 = POST CODE              @OZ32185 52074880
         CS    R0,R1,$SVTGECB      SHORT FORM POST ECB         @OZ32185 52074890
         BE    KWRWAIT             BRANCH IF POSTED            @OZ32185 52074900
         B     KPOSTL               ELSE, TRY AGAIN            @OZ32185 52074910
         SPACE 1                                               @OZ32185 52074920
KXMTRAK  TM    $SVTGECB,X'20'      XM POST SCHEDULED YET...    @OZ32185 52074930
         BO    KWRWAIT             BR IF YES                   @OZ32185 52074940
         OI    $SVTGECB,X'20'      INDICATE XM POST SCHEDULED  @OZ32185 52074950
         STM   R2,R12,PCEWA        SAVE R2 -  R12 IN PCE       @OZ32185 52074960
         ST    R14,PCELINK         SAVE R14 IN PCE             @OZ32185 52074970
         LR    R9,R13              SAVE R13 IN R9              @OZ32185 52074980
         LA    R11,$SVTGECB        R11 = ADDRESS OF ECB        @OZ32185 52074990
         ICM   R11,8,=X'80'        SET HI BIT FOR XM POST      @OZ32185 52075000
         L     R15,CVTPTR          R15 = CVT ADDRESS           @OZ32185 52075010
         LA    R1,CVTBRET-CVT(,R15) R1 = ERROR RETURN ADDRESS  @OZ32185 52075020
         L     R15,CVT0PT01-CVT(,R15) R15 = XM POST BR ENTRY   @OZ32185 52075030
         L     R13,$SVTGASC        R13 = ASCB ADDRESS          @OZ32185 52075040
         L     R10,=A(X'40000000') R10 = POST CODE             @OZ32185 52075050
         LR    R12,R1              R12 = ERROR RETURN ADDRESS  @OZ32185 52075060
         MODESET EXTKEY=ZERO       SET PROTECT KEY FOR XMPOST  @OZ32185 52075070
         BALR  R14,R15             ENTER XM POST               @OZ32185 52075080
         MODESET EXTKEY=HASP       RESTORE HASP KEY            @OZ32185 52075090
         LR    R13,R9              RESTORE R13                 @OZ32185 52075100
         L     R14,PCELINK         RESTORE R14                 @OZ32185 52075110
         LM    R2,R12,PCEWA        RESTORE R2 -  R12           @OZ32185 52075120
         DROP  WF                  DROP SSVT ADDRESSABILITY    @OZ32185 52075130
         SPACE 1                                               @OZ32185 52075140
KWRWAIT $WAIT  IO                  WAIT FOR WRITE TO COMPLETE  @OZ32185 52075150
         TM    BUFECBCC-BUFDSECT+JQBDSECT,X'7F' I/O COMPLETE   @OZ32185 52075160
         BZ    KWRWAIT             BR IF NO, WAIT              @OZ32185 52075170
         BO    KWROK               BR IF WRITE IS OK           @OZ32185 52075180
        $IOERROR (WE)              ISSUE I/O ERROR             @OZ32185 52075190
K04     $ERROR                     PERMANENT ERROR CKPT WRITE  @OZ20010 52075200
         EJECT                                                 @OZ32185 52075210
         SPACE 1                                               @OZ20010 52075400
KWROK    NI    $STATUS,255-$CKPTACT  INDICATE CKPT WRITE DONE  @OZ20010 52075600
         SPACE 1                                               @OZ20010 52075800
***************************************************************@OZ20010 52076000
*                                                              @OZ20010 52076200
*    PAGE-FREE JOBQ/JOT PAGES FIXED FOR I/O OPERATION          @OZ20010 52076400
*                                                              @OZ20010 52076600
***************************************************************@OZ20010 52076800
         SPACE 1                                               @OZ20010 52077000
         L     R1,$JOBQPTR         POINT TO START OF JOBQ/JOT  @OZ20010 52077200
         L     WC,$JOBCTLB         POINT TO CKPT CTL BYTES     @OZ20010 52077400
         LH    WF,$JOBRECN         LOAD TOTAL NUMBER OF        @OZ20010 52077600
         AH    WF,$JOTRECN           JOBQ/JOT RECORDS          @OZ20010 52077800
         SPACE 1                                               @OZ20010 52078000
KWRLOOP2 CLI   0(WC),0             SEE IF PAGE WAS FIXED       @OZ20010 52078200
         BE    KWRL2ADJ              BYPASS IF SO              @OZ20010 52078400
         MVI   0(WC),0             ZERO OUT CONTROL BYTE       @OZ20010 52078600
         L     R0,=F'4096'         LOAD LENGTH FOR FREE        @OZ20010 52078800
        $PGSRVC FREE,(R1),(R0)     PAGE-FREE FIXED PAGE        @OZ20010 52079000
         SPACE 1                                               @OZ20010 52079200
KWRL2ADJ AL    R1,=F'4096'         POINT TO NEXT PAGE          @OZ20010 52079400
         LA    WC,1(,WC)           POINT TO NEXT CTL BYTE      @OZ20010 52079600
         BCT   WF,KWRLOOP2         LOOP THRU JOBQ AND JOT      @OZ20010 52079800
         SPACE 1                                               @OZ20010 52080000
         L     R1,$CKPTR1          POINT TO REC1 I/O AREA      @OZ20010 52080200
         L     R0,$CKPTR1L         LOAD RECORD 1 LENGTH        @OZ20010 52080400
        $PGSRVC FREE,(R1),(R0)     PAGE-FREE REC1 I/O AREA     @OZ20010 52080600
         SPACE 1                                               @OZ20010 52080800
                                   PRINT OFF - SECTION DELETED @OZ20010 52082000
*                                  THIS CARD DELETED BY APAR   @OZ20010 52083000
                                   PRINT ON -- SECTION DELETED @OZ20010 52084000
         L     R1,$QSE1            GET ADDRESS OF 1ST QSE            R4 52086000
         TM    QSEFLAGS-QSEDSECT(R1),QSELAST  TEST FOR ONE SYSTEM    R4 52088000
         BO    KWR1SYS             BRANCH IF ONLY ONE SYSTEM            52090000
         L     R1,$SSVT            IS INITIALIZATION           @OZ20010 52091000
         TM    $SVSTUS-SSVT(R1),$SVSTIRV  RESERVE IN EFFECT... @OZ20010 52092000
         BO    KWRPOST             BRANCH IF YES                        52094000
         TM    CKPSTQE+IPOST,X'80' HAS TIMER EXPIRED...             R41 52096000
         BZ    KWRPOST             BRANCH IF NOT                        52098000
         B     KRELEASE            GO RELEASE                           52100000
         EJECT                                                          52102000
*********************************************************************** 52104000
*                                                                     * 52106000
*    RESET PRINT/PUNCH TIMER FOR SINGLE SYSTEM                        * 52108000
*                                                                     * 52110000
*********************************************************************** 52112000
         SPACE 1                                                        52114000
KWR1SYS  BAL   WA,KTTIMER          STOP TIMER                           52116000
         L     R0,$CKPTIME         START TIMER FOR                   R4 52118000
         BAL   WA,KSTIMER           PRINT/PUNCH CHECKPOINT INTERVAL     52120000
         SPACE 2                                                        52122000
*********************************************************************** 52124000
*                                                                     * 52126000
*    $POST CHECKPOINT COMPLETE AND LOOP IF SINGLE SYSTEM,             * 52128000
*     IF INITIALIZATION RESERVE IS IN EFFECT,                         * 52130000
*     OR IF HOLD INTERVAL HAS NOT EXPIRED                             * 52132000
*                                                                     * 52134000
*********************************************************************** 52136000
         SPACE 1                                                        52138000
KWRPOST $POST  $HASPECF,CKPT       POST PCES FOR CHKPT COMPLETION       52140000
         L     R1,$MCONPCE         POINT TO REMOTE CONSOLE PCE       R4 52142000
         LTR   R1,R1               TEST FOR REMOTE CONSOLE PROCESSOR R4 52144000
         BZ    KWRNORCP            BR IF NO                          R4 52146000
        $POST  (R1),WORK           POST IT                          R41 52148000
         SPACE 1                                                     R4 52150000
KWRNORCP LM    R0,R1,$EWQTRAK          LOOK AT TRAK                  R4 52152000
         CL    R1,PCEPCEB-PCEDSECT(,R1) RESOURCE POINTERS            R4 52154000
         BNE   KWRLOOP             BRANCH IF ANY PCE'S WAITING          52156000
         L     R1,$SSVT            POINT TO SSVT               @OZ20010 52157000
         TM    $SVTGECB-SSVT(R1),X'80' TEST SSVT ECB           @OZ20010 52158000
         BO    KWRLOOP             BR IF OTHER MEMORY WAITING           52160000
         B     KWRREQS             GO WAIT FOR WRITE REQS OR TIMER      52162000
         EJECT                                                          52164000
*********************************************************************** 52166000
*                                                                     * 52168000
*    RELEASE CHECKPOINT DEVICE IF SHARED SYSTEM                       * 52170000
*     AND HOLD INTERVAL HAS EXPIRED                                   * 52172000
*                                                                     * 52174000
*********************************************************************** 52176000
         SPACE 1                                                        52178000
KRELEASE DS    0H                  REMOVE HASP CHECKPOINT RESERVE       52180000
        $GETLOK                    ACQUIRE LOCAL AND CMS LOCKS          52182000
         MODESET EXTKEY=ZERO       CHANGE TO KEY ZERO                   52184000
         L     R14,$SSVT           GET ADDRESSABILITY          @OZ20010 52184200
         USING SSVT,R14              ON SSVT                   @OZ20010 52184400
         L     R15,$SVRELSE          AND ON CHECKPOINT         @OZ20010 52184600
         L     R15,IOSUCB-IOSB+SRBSIZE(,R15)  DEVICE           @OZ20010 52184800
         USING UCBDSECT,R15          UCB                       @OZ20010 52185000
         SLR   R1,R1               DECREMENT                            52186000
         IC    R1,UCBSQC            CHECKPOINT DEVICE                   52188000
         BCTR  R1,0                  RESERVE                            52190000
         STC   R1,UCBSQC              COUNT                             52192000
         NI    $SVSTUS,255-$SVSTCRV  INDICATE CHECKPOINT RELEASED       52194000
         LTR   R1,R1               NON-HASP RESERVES STILL PRESENT      52196000
         BNZ   KDORMANT            BRANCH IF YES                        52198000
         STM   LINK,BASE2,PCELINK  SAVE REGISTERS                       52200000
         L     R1,$SVRELSE         GET ADDR OF RELEASE SRB-IOSB         52202000
         STARTIO SRB=(1)           RELEASE CHECKPOINT DEVICE            52204000
         LM    LINK,BASE2,PCELINK  RELOAD REGISTERS                     52206000
         DROP  R14,R15             DROP SSVT, UCB ADDR.        @OZ20010 52206500
         SPACE 1                                                    R41 52207000
KDORMANT DS    0H                  ENTER DORMANT STATE                  52208000
        $FRELOK                    RELEASE LOCAL AND CMS LOCKS          52210000
         OI    $STATUS,$QSONDA     INDICATE SHARED QUEUES ON DASD       52212000
         SPACE 2                                                        52214000
*********************************************************************** 52216000
*                                                                     * 52218000
*    $WAIT FOR MINIMUM DORMANT INTERVAL (IF ANY)                      * 52220000
*                                                                     * 52222000
*********************************************************************** 52224000
         SPACE 1                                                        52226000
         L     R0,$MINDORM         START TIMER FOR                   R4 52228000
         BAL   WA,KSTIMER           MINIMUM DORMANT INTERVAL            52230000
         TM    CKPSTQE+IPOST,X'80' IS TIMER GOING...                R41 52232000
         BO    KQSUSE              IF NOT, GO LOOK FOR NEW $QSUSES      52234000
        $WAIT  WORK                WAIT FOR MINIMUM DORMANT INTERVAL    52236000
         EJECT                                                          52238000
*********************************************************************** 52240000
*                                                                     * 52242000
*    LOOK FOR AND $WAIT FOR NEW SHARED QUEUE REQUESTS,                * 52244000
*     OR UNTIL MAXIMUM DORMANT INTERVAL EXPIRES,                      * 52246000
*     THEN GO READ SHARED QUEUES                                      * 52248000
*                                                                     * 52250000
*********************************************************************** 52252000
         SPACE 1                                                        52254000
KQSUSE   DS    0H                  LOOK FOR NEW SHARED QUEUE REQS       52256000
         LM    R0,R1,$EWQCKPT      LOOK AT CKPT                         52258000
         CL    R1,PCEPCEB-PCEDSECT(,R1) RESOURCE POINTERS            R4 52260000
         BNE   KREAD               BRANCH IF ANY PCES WAITING           52262000
         TM    MHASPECF+$EWBCKPT,$EWFCKPT  LINE MGR REQUEST..  @OZ25901 52262100
         BO    KREAD               BR IF YES                   @OZ25901 52262200
         LM    R0,R1,$EWQTRAK      LOOK AT TRAK                         52264000
         CL    R1,PCEPCEB-PCEDSECT(,R1) RESOURCE POINTERS            R4 52266000
         BNE   KREAD               BRANCH IF ANY PCES WAITING           52268000
         L     R1,$SSVT            TEST SSVT TRACK             @OZ20010 52269000
         TM    $SVTGECB-SSVT(R1),X'80'  ALLOC ECB              @OZ20010 52270000
         BO    KREAD               BRANCH IF OTHER TASKS ARE WAITING    52272000
         TM    $MCONPCE,$MCONWAT   IS REMOTE CONSOLE WAITING FOR CKPT   52274000
         BO    KREAD               BRANCH IF YES                     R4 52276000
         L     R0,$MAXDORM         START TIMER FOR                   R4 52278000
         S     R0,$MINDORM          THE CALCULATED             @OZ28663 52279000
         BAL   WA,KSTIMER           MAXIMUM DORMANT INTERVAL            52280000
         TM    CKPSTQE+IPOST,X'80' IS TIMER GOING...           @OZ28663 52281000
         BO    KREAD               IF YES, READ SHARED QUEUES  @OZ28663 52281500
        $WAIT  CKPW,INHIBIT=NO     WAIT FOR $QSUSE OR TIMER             52282000
         BAL   WA,KTTIMER          STOP TIMER                           52284000
         B     KREAD               GO READ SHARED QUEUES FROM DASD      52286000
         EJECT                                                          52288000
***************************************************************@OZ20010 52288100
*                                                              @OZ20010 52288200
*    CCW CHAIN ADJUSTMENT SUBROUTINE (SELECTIVE READ/WRITE)    @OZ20010 52288300
*                                                              @OZ20010 52288400
*        ON ENTRY -- WB POINTS TO PREVIOUS CCW ENTRY,          @OZ20010 52288500
*                    WD POINTS TO CURRENT  CCW ENTRY           @OZ20010 52288600
*                                                              @OZ20010 52288700
*        ON EXIT  -- PREVIOUS CCW ENTRY IS CORRECTLY           @OZ20010 52288800
*                    CHAINED TO CURRENT CCW ENTRY              @OZ20010 52288900
*                                                              @OZ20010 52289000
***************************************************************@OZ20010 52289100
         SPACE 1                                               @OZ20010 52289200
         USING JQBCCWE,WD          SET UP ADDRESSABILITY ON    @OZ20010C52289300
                                     'PREVIOUS' CCW ENTRY      @OZ20010 52289400
         SPACE 1                                               @OZ20010 52289500
KCCWADJ  LA    R15,JQBCSEEK        POINT TO NEW 'SEEK'         @OZ20010 52289600
         CLC   JQBCTRK,JQBCTRK-JQBCCWE(WB) IF RECORDS ARE ON   @OZ20010 52289700
         BNE   KCCW1                 DIFFERENT TRACKS, BRANCH  @OZ20010 52289800
         LA    R15,JQBCSID         POINT TO NEW 'SEARCH ID'    @OZ20010 52289900
         LA    R0,L'JQBCCWEL(,WB)  SEE IF CCW ENTRIES ARE      @OZ20010 52290000
         CR    R0,WD                 ADJACENT IN LIST          @OZ20010 52290100
         BE    KCCW1               BRANCH IF ADJACENT          @OZ20010 52290200
         TM    CKPFLAG1,CKP1RPS    IF RPS FEATURE SHOULD NOT   @OZ20010 52290300
         BZ    KCCW1                 BE USED, BRANCH           @OZ20010 52290400
         LA    R15,JQBCSET         POINT TO NEW 'SET SEC'      @OZ20010 52290500
         DROP  WD                  DROP 'CURRENT' CCW ADDR     @OZ20010 52290600
         SPACE 1                                               @OZ20010 52290700
         USING JQBCCWE,WB          PICK UP 'PREV' CCW ADDR     @OZ20010 52290800
KCCW1    LRA   R0,0(,R15)          SET REAL ADDRESS            @OZ20010 52290900
         ST    R0,JQBCTNXT           IN PREVIOUS TIC           @OZ20010 52291000
         MVI   JQBCTNXT,X'08'      SET OP-CODE TO 'TIC'        @OZ20010 52291100
         ST    R15,JQBCTNXT+4      VIRTUAL ADDR FOR DEBUGGING  @OZ20010 52291200
         BR    WA                  RETURN                      @OZ20010 52291300
         DROP  WB                                              @OZ20010 52291400
         EJECT                                                 @OZ20010 52291500
***************************************************************@OZ20010 52291600
*                                                              @OZ20010 52291700
*    SUBROUTINE TO PAGE-FIX REC1 I/O AREA AND BUILD IDAW'S     @OZ20010 52291800
*                                                              @OZ20010 52291900
*        ON INPUT, R1 POINTS TO AREA TO FIX                    @OZ20010 52292000
*                  WB POINTS TO FIRST CCW ENTRY                @OZ20010 52292100
*                  WC CONTAINS RETURN ADDRESS                  @OZ20010 52292200
*                                                              @OZ20010 52292300
***************************************************************@OZ20010 52292400
         USING JQBCCWE,WB          CCW ENTRY ADDRESSABILITY    @OZ20010 52292500
         SPACE 1                                               @OZ20010 52292600
KR1FIX   L     R0,$CKPTR1L         LOAD LENGTH FOR PAGE-FIX    @OZ20010 52292700
         LA    R2,CKPECB           POINT TO DUMMY ECB          @OZ20010 52292800
        $PGSRVC FIX,(R1),(R0),(R2) PAGE-FIX RECORD 1 AREA      @OZ20010 52292900
         L     WA,$CKPTR1L         LOAD LENGTH AGAIN           @OZ20010 52293000
         LA    R15,JQBIDAWS        POINT TO IDAWS FOR REC 1    @OZ20010 52293100
         LA    R0,2048             LOAD LENGTH FOR IDAW LOOP   @OZ20010 52293200
         SPACE 1                                               @OZ20010 52293300
KR1IDAW  OI    0(R1),*-*           FORCE PAGE IN IF NOT IN YET @OZ20010 52293400
         LRA   R14,0(,R1)          SET REAL ADDRESS OF         @OZ20010 52293500
         ST    R14,0(,R15)           AREA IN IDAW              @OZ20010 52293600
         ALR   R1,R0               BUMP VIRTUAL ADDR BY 2K     @OZ20010 52293700
         LA    R15,4(,R15)         POINT TO NEXT IDAW          @OZ20010 52293800
         SR    WA,R0               SEE IF MORE IDAWS           @OZ20010 52293900
         BP    KR1IDAW             LOOP IF SO, ELSE            @OZ20010 52294000
         BR    WC                    RETURN                    @OZ20010 52294100
         SPACE 1                                               @OZ20010 52294200
         DROP  WB                  DROP CCW ENTRY ADDR.        @OZ20010 52294300
         EJECT                                                 @OZ20010 52294400
***************************************************************@OZ20010 52294500
*                                                              @OZ20010 52294600
*    TIMER SUBROUTINES                                         @OZ20010 52294700
*                                                              @OZ20010 52294800
***************************************************************@OZ20010 52294900
*                                  THIS CARD DELETED BY APAR   @OZ20010 52296000
*                                  THIS CARD DELETED BY APAR   @OZ20010 52298000
         SPACE 1                                                        52300000
KSTIMER  OI    CKPSTQE+IPOST,X'80' INDICATE TIMER EXPIRED           R41 52302000
         LTR   R0,R0               TEST NEW INTERVAL TO BE SET          52304000
         BNMR  WA                  RETURN IF NOT MINUS         @OZ28663 52306000
         ST    R0,CKPSTQE+ITIME    STORE NEW INTERVAL IN STQE       R41 52308000
        $STIMER CKPSTQE            START TIMER                      R41 52310000
         BR    WA                  RETURN                               52312000
         SPACE 1                                                    R41 52313000
KTTIMER  TM    CKPSTQE+IPOST,X'80' HAS TIMER EXPIRED...             R41 52314000
         BOR   WA                  RETURN IF YES                        52316000
        $TTIMER CKPSTQE,CANCEL     STOP TIME                        R41 52318000
         BR    WA                  RETURN                               52320000
         TITLE 'HASP TRACK GROUP BLOCK ALLOCATION'                      52330000
*********************************************************************** 52332000
*                                                                     * 52334000
* KBLOB -- SUBROUTINE TO UNALLOCATE/ALLOCATE THE TRACK GROUP BLOCK    * 52336000
*                                                                     * 52338000
* PURPOSE - TO RETURN TRACK GROUPS TO THE MASTER TRACK GROUP MAP      * 52340000
*  ($TGMAP) FROM THE TRACK GROUP BLOCK AND THEN TO REALLOCATE THE     * 52342000
*  TRACK GROUP BLK FROM THE MASTER MAP USING AN EXTREME ALLOCATION    * 52344000
*  ALGORITHM. THE ALGORITHM ALLOCATES THE TRACK GROUP BLOCK BY        * 52346000
*  SELECTING BITS (TRACK GROUPS) FROM THE 'EXTREME' EXTENTS (RIMS)    * 52348000
*  OF DEVICES AS REPRESENTED BY TEDS (SEE TEDDSECT) AND $TGMAP.       * 52350000
*                                                                     * 52352000
* OPERATION -                                                         * 52354000
*                                                                     * 52356000
*  (1)  TRACK GROUP BLOCK ENTRIES ARE REMOVED USING CDS LOGIC TO      * 52358000
*       ELIMINATE POSSIBLE SIMULTANEOUS REFERENCE BY SSSM $STRAK      * 52360000
*       SUBROUTINE. THE ENTRIES REMOVED ARE TALLYED AND THE BIT       * 52362000
*       DEFINED BY THE ENTRY IS RETURNED TO $TGMAP. THE NUMBER OF     * 52364000
*       RETURNED TRACK GROUPS IS USED TO DETERMINE HOW MANY TO        * 52366000
*       REALLOCATE FOR THIS ITERATION OF THE CHECKPOINT PROCESSOR.    * 52368000
*       IF NO TRACK GROUPS ARE RETURNED (ALL USED) THE NUMBER LAST    * 52370000
*       ALLOCATED IS INCREASED BY 1. IF TRACK GROUPS ARE RETURNED,    * 52372000
*       THE NUMBER LAST ALLOCATED IS DECREASED BY 1. THE LOWEST       * 52374000
*       EVER ALLOCATED IS 1 AND THE HIGHEST &NUMTGBE.                 * 52376000
*  (2)  THE NUMBER OF TRACK GROUPS ALLOCATED IS CALCULATED BY         * 52378000
*       'COUNTING' THE NUMBER OF BITS ON IN $TGMAP AND SUBTRACTING    * 52380000
*       THIS VALUE FROM THE TOTAL TRACK GROUPS AVAILABLE. IF THE      * 52382000
*       RESULT IS 0, THE 100% SPOOL UTILIZATION MESSAGE IS ISSUED.    * 52384000
*       IF THE NUMBER OF TRACK GROUPS AVAILABLE IS LESS THAN THE      * 52386000
*       NUMBER NEEDED TO FILL THE TRACK GROUP BLOCK, THE NUMBER       * 52388000
*       NEEDED IS SET TO THE NUMBER AVAILABLE.                        * 52390000
*  (3)  ALL VALID TED BLKS ARE INITIALIZED TO CAUSE THE SEARCH FOR    * 52392000
*       UNALLOCATED TRK GROUPS AT THE MODULE EXTENT START. THE TED    * 52394000
*       FIELD 'TNCH' IS USED FOR THIS PURPOSE. THE NEXT TED TO BE     * 52396000
*       USED FOR ALLOCATION IS SELECTED FROM THE $SVTNEXT FIELD IN    * 52398000
*       THE SVT. $SVTNEXT IS SET TO THE NEXT TED TO BE USED UPON      * 52400000
*       COMPLETION OF TRACK GROUP BLK ALLOCATION. MODULE SELECTION    * 52402000
*       IS 'ROUND-ROBIN'.                                             * 52404000
*  (4)  THE NUMBER OF TRACK GROUPS DETERMINED BY THE 'LAST USED'      * 52406000
*       PROCESS DESCRIBED ARE ALLOCATED USING EXTREME ALGORITHM.      * 52408000
*       THE EXTENT REPRESENTED BY A TED AND THE MASTER MAP IS         * 52410000
*       SEARCHED FOR AN AVAILABLE TRACK GRP STARTING AT HE 'TNCH'     * 52412000
*       DEFINED POSITION. 'TNCH' IS RESET FOR THE NEXT ITERATION      * 52414000
*       OF THE TRACK GROUP BLOCK ALLOCATION LOOP TO THE ADDRESS IN    * 52416000
*       THE EXTENT WHERE AN AVAILABLE TRACK GROUP WAS FOUND.          * 52418000
*  (5)  THE NUMBER OF TRACK GROUPS ALLOCATED IS ADJUSTED FOR THE      * 52420000
*       AMOUNT GIVEN TO THE TRACK GROUP BLK AND A CHECK IS MADE TO    * 52422000
*       DETERMINE IF THE TOLERANCE SPECIFIED BY &TGWARN HAS BEEN      * 52424000
*       EXCEEDED. IF SO, A PERCENT UTILIZATION MESSAGE IS ISSUED.     * 52426000
*  (6)  A $POST FOR TRAK IS ISSUED TO INFORM HASP PROCESSORS OF       * 52428000
*       AVAILABILITY OF TRACKS (TRK GROUPS) AND A POST IS INVOKED     * 52430000
*       FOR SSSM ECB USED TO WAIT FOR TRKS. CONTROL IS RETURNED TO    * 52432000
*       THE CALLER.                                                   * 52434000
*                                                                     * 52436000
*********************************************************************** 52438000
         EJECT                                                          52440000
*********************************************************************** 52442000
*                                                                     * 52444000
*              TGB ALLOCATION ENTRY POINT                             * 52446000
*                                                                     * 52448000
*********************************************************************** 52450000
         SPACE 1                                                        52452000
         CNOP  4,8                                                      52454000
KBLOB    L     JCT,$SSVT           OBTAIN SSVT                 @OZ20010 52455000
         USING SSVT,JCT              ADDRESSABILITY            @OZ20010 52455500
         TM    $SVSTUS,$SVSTIRV    UNIT RESV STILL IN EFFECT.. @OZ20010 52456000
         BOR   R14                 RETURN TO CALLER IF IT IS            52458000
         STM   R2,R9,PCEWA         ELSE, SAVE R2 - R9 IN PCE            52460000
         LM    R5,R7,$SVTTGBA      R5=1ST, R6=SIZE, R7=LAST TGB         52462000
         USING TGBDSECT,R5         TGB ADDRESSABILITY                   52464000
         SLR   R2,R2               R2 = 0 (FOR CDS)                     52466000
         SLR   R3,R3               R3 = 0 (FOR CDS)                     52468000
         SLR   R8,R8               R8 = 0 (FOR ACCUMULATOR)             52470000
         L     R9,$TGMAP           POINT TO MASTER TRACK GROUP MAP   R4 52472000
         SPACE 1                                                        52474000
*********************************************************************** 52476000
*                                                                     * 52478000
*              REMOVE UNUSED TG'S FROM TGB                            * 52480000
*                                                                     * 52482000
*********************************************************************** 52484000
         SPACE 1                                                        52486000
KBLOBR   LM    R0,R1,TGBENTRY      FETCH TGB ENTRY                      52488000
         LTR   R1,R1               TEST FOR UNALLOCATED TG              52490000
         BZ    KBLOBA              BRANCH IF ALLOCATED                  52492000
         CDS   R0,R2,TGBENTRY      TRY TO REMOVE ENTRY                  52494000
         BNE   KBLOBA              BRANCH IF REMOVED BY SSSM            52496000
         SPACE 1                                                        52498000
         DROP  R5                  FORGET TGB                           52500000
         SPACE 1                                                        52502000
*********************************************************************** 52504000
*                                                                     * 52506000
*              COUNT & RETURN TG TO MASTER MAP                        * 52508000
*                                                                     * 52510000
*********************************************************************** 52512000
         SPACE 1                                                        52514000
         LA    R8,1(,R8)           COUNT RETURNED TG'S                  52516000
         LR    R1,R0               R1 = BYTE OFFSET & BIT MASK          52518000
         SRL   R1,16               R1 = BYTE OFFSET                     52520000
         IC    R4,0(R1,R9)         R4 = BYTE CONTAINING BIT          R4 52522000
         XR    R4,R0               RETURN TG BIT TO BYTE                52524000
         STC   R4,0(R1,R9)         RETURN BYTE TO MAP                R4 52526000
         SPACE 1                                                    R41 52527000
KBLOBA   BXLE  R5,R6,KBLOBR        TRY NEXT TGB ENTRY                   52528000
         EJECT                                                          52530000
*********************************************************************** 52532000
*                                                                     * 52534000
*              CALCULATE NUMBER OF TG'S FOR TGB                       * 52536000
*                                                                     * 52538000
*********************************************************************** 52540000
         SPACE 1                                                        52542000
         SLR   R2,R2               R2 = NUMBER OF TG'S               R4 52544000
         IC    R2,$NUMTGBE               PER TGB               @OZ17486 52546000
*              THIS LINE DELETED BY APAR NUMBER                @OZ17486 52548000
*              THIS LINE DELETED BY APAR NUMBER                @OZ17486 52550000
*              THIS LINE DELETED BY APAR NUMBER                @OZ17486 52552000
*              THIS LINE DELETED BY APAR NUMBER                @OZ17486 52554000
*              THIS LINE DELETED BY APAR NUMBER                @OZ17486 52556000
*              THIS LINE DELETED BY APAR NUMBER                @OZ17486 52558000
*              THIS LINE DELETED BY APAR NUMBER                @OZ17486 52560000
*              THIS LINE DELETED BY APAR NUMBER                @OZ17486 52562000
*              THIS LINE DELETED BY APAR NUMBER                @OZ17486 52564000
*              THIS LINE DELETED BY APAR NUMBER                @OZ17486 52566000
         SPACE 1                                                     R4 52568000
KBLOBS   STC   R2,$BLBTGBA         STORE NEW TGB COUNT               R4 52570000
         SPACE 1                                                        52572000
*********************************************************************** 52574000
*                                                                     * 52576000
*              COUNT THE NO. OF TG'S ALLOCATED IN ALL EXTENTS         * 52578000
*                                                                     * 52580000
*********************************************************************** 52582000
         SPACE 1                                                        52584000
KBLOBM   L     R1,$SVTGTOT         R1 = TOTAL TG'S AVAILABLE            52586000
         LA    R4,KBLOBT           R4 = LOOP START ADDRESS              52588000
         L     R2,$CYLMAPL         R2 = NUMBER OF BYTES IN MAP       R4 52590000
         L     R9,$TGMAP           R9 = ADDRESS OF                   R4 52592000
         BCT   R9,KBLOBT                 MASTER TRACK GROUP - 1      R4 52594000
         SPACE 1                                                     R4 52596000
KBLOBT   IC    R3,0(R9,R2)         R3 = BYTE FROM MAP                R4 52598000
         IC    R3,KNBITB(R3)       R3 = NUMBER OF BITS IN BYTE          52600000
         SLR   R1,R3               R1 = NUMBER OF ALLOCATED TG'S        52602000
         BCTR  R2,R4               PLOW THRU ENTIRE MAP                 52604000
         SPACE 1                                                     R4 52606000
         ST    R1,$SVTGALC         SAVE NUMBER OF ALLOCATED TG'S        52608000
         L     R15,$AQSE           POINT TO OUR QSE                 R41 52608500
         TM    QSESTAT-QSEDSECT(R15),QSEACTIV  TERMINATING...       R41 52609000
         BZ    KBLBXIT             EXIT IF YES                      R41 52609500
         EJECT                                                          52610000
*********************************************************************** 52612000
*                                                                     * 52614000
*              IF NO TRK GROUPS, ISSUE SPOOL FULL MESSAGE             * 52616000
*                                                                     * 52618000
*********************************************************************** 52620000
         SPACE 1                                                        52622000
         L     R0,$SVTGTOT         R0 = TOTAL AVAILABLE                 52624000
         SR    R0,R1               R0 = CURRENT AVAILABLE               52626000
         BNZ   KBLBOFFA            BRANCH IF NOT DEPLETED               52628000
         STCK  PCER1               STORE TIME-OF-DAY CLOCK          R41 52630000
         L     R0,PCER1            PICK UP 'SECONDS' PORTION        R41 52630500
         SRL   R0,5                CONVERT TO 32-SECOND UNITS       R41 52631000
         TM    KBLBFLAG,KBLBPERB   SEE IF 'SPOOL FULL' MSG ISSUED   R41 52632000
         BZ    KBLBFULL            IF NOT, ISSUE MSG IMMEDIATELY    R41 52632500
         CL    R0,CKPBTIME         SEE IF ABOUT 30 SEC HAVE PASSED  R41 52633000
         BNH   KBLBXIT             EXIT IF NOT                      R41 52633500
         SPACE 1                                                    R41 52634000
KBLBFULL ST    R0,CKPBTIME         UPDATE TIME STAMP FOR NEXT TIME  R41 52634500
         OI    KBLBFLAG,KBLBPERB   SHOW 'SPOOL FULL' MSG ISSUED     R41 52635000
         LR    R9,R14              SAVE LINK REGISTER                   52636000
         $WTO  KM355,L'KM355,                                          C52638000
               JOB=NO,ROUTE=$LOG+$MAIN,                                C52640000
               CLASS=$ALWAYS,PRI=$HI,                                  C52642000
               WAIT=NO                                                  52644000
         LR    R14,R9              RESTORE LINK REGISTER                52646000
         B     KBLBXIT             RETURN TO CALLER                     52648000
         SPACE 1                                                    R41 52649000
KBLBOFFA NI    KBLBFLAG,255-KBLBPERB RESET SPOOL FULL MSG FLAG          52650000
         SPACE 1                                                        52652000
*********************************************************************** 52654000
*                                                                     * 52656000
*              BE SURE ENOUGH TG'S FOR TGB                            * 52658000
*                                                                     * 52660000
*********************************************************************** 52662000
         SPACE 1                                                        52664000
         IC    R3,$BLBTGBA         R3 = TGB COUNT                    R4 52666000
         CR    R0,R3               TEST FOR SUFFICIENT TG'S             52668000
         BNL   KBLBOK              BRANCH IF ENOUGH                     52670000
         STC   R0,$BLBTGBA          ELSE RESET TO AVAILABLE          R4 52672000
         EJECT                                                          52674000
*********************************************************************** 52676000
*                                                                     * 52678000
*              INIT TED'S TO BEGIN SEARCH FROM EXTENT START           * 52680000
*                                                                     * 52682000
*********************************************************************** 52684000
         SPACE 1                                                        52686000
KBLBOK   L     R3,$SVTFRST         R3 = 1ST TED ADDRESS                 52688000
         SPACE 1                                                    R41 52689000
         USING TEDDSECT,R3         TED ADDRESSABILITY                   52690000
         SPACE 1                                                    R41 52691000
KBLBTED  L     R2,$TGMAP           R2 = MASTER MAP START             R4 52692000
         AH    R2,TNMO             R2 = EXTENT START                    52694000
         ST    R2,TNCH             SET SEARCH START TO 1ST BYTE         52696000
         LA    R3,TEDSIZ(,R3)      R3 = ADDRESS OF NEXT TED             52698000
         CL    R3,$SVTLAST         TEST FOR LAST TED PROCESSED          52700000
         BH    KBLOBP              BRANCH IF ALL PROCESSED              52702000
         L     R7,TNTC             TEST FOR NULL TED                    52704000
         LTR   R7,R7                INDICATED BY TNTC = 0               52706000
         BNZ   KBLBTED             BRANCH IF GOOD TED                   52708000
         SPACE 1                                                        52710000
         DROP  R3                  FORGET THE TED                       52712000
         SPACE 1                                                        52714000
*********************************************************************** 52716000
*                                                                     * 52718000
*              PREPARE TO ALLOCATE TGB                                * 52720000
*                                                                     * 52722000
*********************************************************************** 52724000
         SPACE 1                                                        52726000
KBLOBP   SLR   R2,R2               R2 = NO. TG'S                     R4 52728000
         IC    R2,$BLBTGBA               FOR TGB                     R4 52730000
         L     R5,$SVTTGBA         R5 = TGB START                    R4 52732000
         USING TGBDSECT,R5         TGB ADDRESSABILITY                   52734000
         L     R3,$SVTNEXT         R3 = NEXT MODULE TED                 52736000
         USING TEDDSECT,R3         TED ADDRESSABILITY                   52738000
         LA    R6,1                R6 = 1 (FOR BXLE INCR)               52740000
         CLM   R8,1,$NUMTGBE       WHERE ANY TG'S USED...      @OZ17486 52740100
         BE    KBLOB1              BR IF NO                    @OZ17486 52740200
         BAL   R15,KBLBNXT         GET NEXT TED                @OZ17486 52740300
         ST    R3,$SVTNEXT         SAVE FOR NEXT ITERATION     @OZ17486 52740400
         EJECT                                                          52742000
*********************************************************************** 52744000
*                                                                     * 52746000
*              USE TED TO SETUP SEARCH FOR TG                         * 52748000
*                                                                     * 52750000
*********************************************************************** 52752000
         SPACE 1                                                        52754000
KBLOB1   L     R7,$TGMAP           R7 = MASTER MAP START             R4 52756000
         AH    R7,TNMO             R7 = 1ST BYTE THIS EXTENT            52758000
         AH    R7,TNMB             R7 = LAST BYTE + 1                   52760000
         BCTR  R7,0                R7 = LAST BYTE                       52762000
         L     R8,TNCH             R8 = SEARCH START ADDRESS            52764000
         SPACE 1                                                        52766000
*********************************************************************** 52768000
*                                                                     * 52770000
*              ALLOCATE TG USING EXTREME ALGORITHM                    * 52772000
*                                                                     * 52774000
*********************************************************************** 52776000
         SPACE 1                                                        52778000
KBLOB2   CLI   0(R8),0             TEST FOR AVAILABLE TRACK GROUP       52780000
         BNE   KBLOB3              BRANCH IF SOMETHING AVAIL            52782000
         BXLE  R8,R6,KBLOB2        SEARCH WHOLE MODULE                  52784000
         BAL   R15,KBLBNXT         GET NEXT TED                         52786000
         B     KBLOB1               AND TRY AGAIN                       52788000
         SPACE 1                                                        52790000
*********************************************************************** 52792000
*                                                                     * 52794000
*              SAVE NEW SEARCH START, BIT NO. & MASK                  * 52796000
*                                                                     * 52798000
*********************************************************************** 52800000
         SPACE 1                                                        52802000
KBLOB3   ST    R8,TNCH             SAVE NEW SEARCH START ADDR           52804000
         IC    R1,0(,R8)           R1 = ALLOCATION BYTE                 52806000
         LA    R0,X'FF'            R0 = X'FF' (FOR MASK)                52808000
         NR    R0,R1               CLEAR BYTES 0,1 & 2                  52810000
         LA    R1,X'80'            ASSUME 1ST BIT IS 1                  52812000
         SR    R7,R7               R7 = 0 (BIT NUMBER)                  52814000
         SPACE 1                                                    R41 52815000
KBLOB4   CR    R1,R0               LOOK FOR 1ST BIT THAT'S = 1          52816000
         BNH   KBLOB5              BRANCH WHEN FOUND                    52818000
         SRL   R1,1                TRY NEXT BIT                         52820000
         ALR   R7,R6               DING THE BIT NUMBER                  52822000
         B     KBLOB4               AND REPEAT LOOP                     52824000
         EJECT                                                          52826000
*********************************************************************** 52828000
*                                                                     * 52830000
*              SHOW MASTER MAP ALLOCATION & SET TGB ENTRY             * 52832000
*                                                                     * 52834000
*********************************************************************** 52836000
         SPACE 1                                                        52838000
KBLOB5   IC    R0,0(,R8)           R0 = ALLOCATION BYTE                 52840000
         XR    R0,R1               REMOVE TG BIT                        52842000
         STC   R0,0(,R8)           SHOW TG ALLOCATION                   52844000
         SL    R8,$TGMAP           R8 = OFFSET WITHIN TRK GROUP MAP  R4 52846000
         STH   R8,TGBYTEN          STORE BYTE OFFSET IN TGB             52848000
         SH    R8,TNMO             R8 = OFFSET FROM EXTENT              52850000
         STC   R1,TGBBITM+1        STORE BIT MASK IN TGB                52852000
         SLL   R8,3                RELATIVE BYTE NO. * 8                52854000
         ALR   R7,R8                PLUS BIT NO. = TG NO.               52856000
         MH    R7,TNTG             R7 = TT (TRACK NO.)                  52858000
         SLL   R7,8                R7 = 0TT0                            52860000
         O     R7,TNMD             R7 = MTT0                            52862000
         IC    R7,=X'01'           R7 = MTTR                            52864000
         ST    R7,TGBMTTR          STORE IN TGB                         52866000
         SPACE 1                                                        52868000
*********************************************************************** 52870000
*                                                                     * 52872000
*              GET NEXT TED & INCREMENT TG ALLOC COUNT                * 52874000
*                                                                     * 52876000
*********************************************************************** 52878000
         SPACE 1                                                        52880000
         BAL   R15,KBLBNXT         GET NEXT TED                         52882000
         L     R1,$SVTGALC         R1 = NUMBER OF TG'S ALLOC            52884000
         ALR   R1,R6               DING BY 1                            52886000
         ST    R1,$SVTGALC          FOR THIS ALLOCATION                 52888000
         LA    R5,TGBSIZE(,R5)     R5 = NEXT TGB ENTRY                  52890000
         BCT   R2,KBLOB1           ALLOCATE NEXT TGB ENTRY              52892000
*              THIS LINE DELETED BY APAR NUMBER                @OZ17486 52894000
         EJECT                                                          52896000
*********************************************************************** 52898000
*                                                                     * 52900000
*              ISSUE WARNING MESSAGE IF % LIMIT REACHED               * 52902000
*                                                                     * 52904000
*********************************************************************** 52906000
         SPACE 1                                                        52908000
         SLR   R0,R0               R0 = 0 (FOR DIVISION)                52910000
         MH    R1,=H'100'          R1 = 100 * NO. ALLOCATED             52912000
         D     R0,$SVTGTOT         R1 = % ALLOCATED                     52914000
         CLM   R1,1,$TGWARN        IS IT WARNING TIME                R4 52916000
         BL    KBLBOFFB            BRANCH IF NOT                        52918000
         STCK  PCER1               STORE TOD CLOCK                  R41 52920000
         L     R0,PCER1            PICK UP 'SECONDS' PORTION        R41 52920800
         SRL   R0,5                CONVERT TO 32-SECOND UNITS       R41 52921200
         CL    R0,CKPBTIME         SEE IF ABOUT 30 SEC HAVE PASSED  R41 52922000
         BNH   KBLBXIT             SKIP MESSAGE IF NOT         @OZ32185 52922800
         ST    R0,CKPBTIME         UPDATE TIME STAMP FOR NEXT TIME  R41 52923200
         CLC   $SVTGALC,$SVTGTOT   IS THE % MEANINGFUL               R4 52924000
         BH    KBLBOFFB            IF NOT (INIT NOT COMPLETE)        R4 52926000
         LR    R9,R14              SAVE LINK REGISTER                   52930000
         MVC   CKPMSG(L'KTWMM),KTWMM  MOVE MSG TO WORK AREA         R41 52931000
         MVC   CKPMSG+2(4),KTWME   MOVE EDIT PATTERN TO MSG         R41 52932000
         CVD   R1,CKPDBL           CONVERT PERCENT TO DECIMAL       R41 52934000
         ED    CKPMSG+2(4),CKPDBL+6  EDIT PERCENT INTO MSG          R41 52936000
        $WTO   CKPMSG,L'KTWMM,     ISSUE WARNING                    R41C52938000
               ROUTE=$LOG+$MAIN,                                       C52940000
               CLASS=$ALWAYS,PRI=$HI,                                  C52942000
               JOB=NO,WAIT=NO                                       R41 52944000
         LR    R14,R9              RESTORE LINK REG                     52946000
         B     KBLBXIT             BYPASS RESET CODE           @OZ32185 52948000
         SPACE 1                                                    R41 52949000
KBLBOFFB SLR   R0,R0               SHOW WARNING MESSAGE             R41 52950000
         ST    R0,CKPBTIME          NOT ISSUED YET                  R41 52951000
                                   PRINT OFF SECTION DELETED   @OZ32185 52952000
*                                  THIS LINE DELETED BY APAR   @OZ32185 52954000
*                                  THIS LINE DELETED BY APAR   @OZ32185 52956000
*                                  THIS LINE DELETED BY APAR   @OZ32185 52958000
*                                  THIS LINE DELETED BY APAR   @OZ32185 52960000
*                                  THIS LINE DELETED BY APAR   @OZ32185 52962000
*                                  THIS LINE DELETED BY APAR   @OZ32185 52964000
*                                  THIS LINE DELETED BY APAR   @OZ32185 52966000
*                                  THIS LINE DELETED BY APAR   @OZ32185 52968000
*                                  THIS LINE DELETED BY APAR   @OZ32185 52969000
*                                  THIS LINE DELETED BY APAR   @OZ32185 52970000
*                                  THIS LINE DELETED BY APAR   @OZ32185 52972000
*                                  THIS LINE DELETED BY APAR   @OZ32185 52974000
*                                  THIS LINE DELETED BY APAR   @OZ32185 52976000
*                                  THIS LINE DELETED BY APAR   @OZ32185 52978000
*                                  THIS LINE DELETED BY APAR   @OZ32185 52980000
*                                  THIS LINE DELETED BY APAR   @OZ32185 52982000
*                                  THIS LINE DELETED BY APAR   @OZ32185 52984000
*                                  THIS LINE DELETED BY APAR   @OZ32185 52986000
*                                  THIS LINE DELETED BY APAR   @OZ32185 52988000
*                                  THIS LINE DELETED BY APAR   @OZ32185 52990000
*                                  THIS LINE DELETED BY APAR   @OZ32185 52992000
*                                  THIS LINE DELETED BY APAR   @OZ32185 52994000
*                                  THIS LINE DELETED BY APAR   @OZ32185 52996000
*                                  THIS LINE DELETED BY APAR   @OZ32185 52998000
*                                  THIS LINE DELETED BY APAR   @OZ32185 53000000
*                                  THIS LINE DELETED BY APAR   @OZ32185 53002000
*                                  THIS LINE DELETED BY APAR   @OZ32185 53004000
*                                  THIS LINE DELETED BY APAR   @OZ32185 53006000
*                                  THIS LINE DELETED BY APAR   @OZ32185 53008000
*                                  THIS LINE DELETED BY APAR   @OZ32185 53010000
*                                  THIS LINE DELETED BY APAR   @OZ32185 53012000
*                                  THIS LINE DELETED BY APAR   @OZ32185 53014000
*                                  THIS LINE DELETED BY APAR   @OZ32185 53016000
*                                  THIS LINE DELETED BY APAR   @OZ32185 53018000
*                                  THIS LINE DELETED BY APAR   @OZ32185 53020000
                                   PRINT ON SECTION DELETED    @OZ32185 53022000
         EJECT                                                          53024000
*********************************************************************** 53026000
*                                                                     * 53028000
*              RESTORE REGISTERS &RETURN                              * 53030000
*                                                                     * 53032000
*********************************************************************** 53034000
         SPACE 1                                                        53036000
KBLBXIT  LM    R2,R9,PCEWA         RESTORE R2 - R9 FROM PCE             53038000
         BR    R14                 RETURN TO CALLER                     53040000
         SPACE 1                                                        53042000
*********************************************************************** 53044000
*                                                                     * 53046000
*              SUBROUTINE TO SET R3 = NEXT TED ADDRESS                * 53048000
*                                                                     * 53050000
*********************************************************************** 53052000
         SPACE 1                                                        53054000
KBLBFRO  L     R3,$SVTFRST         POINT TO FIRST TED                   53056000
         BR    R15                 RETURN TO CALLER                     53058000
         SPACE 1                                                    R41 53059000
KBLBNXT  LA    R3,TEDSIZ(,R3)      STEP TO NEXT TED                     53060000
         CL    R3,$SVTLAST         TEST FOR STEPPING TOO FAR            53062000
         BH    KBLBFRO             BRANCH IF TOO FAR                    53064000
         OC    TNTC,TNTC           TEST FOR NULL TED                    53066000
         BNZR  R15                 RETURN IF GOOD TED                   53068000
         B     KBLBFRO             ELSE, GET FIRST ONE                  53070000
         SPACE 1                                                        53072000
         DROP  R3,R5,JCT           KILL CTL BLK ADDRESSABILITY @OZ20010 53074000
         TITLE 'HASP CHECKPOINT PROCESSOR CONSTANTS AND STORAGE'        53076000
KRNOP    CCW   X'03',0,X'20',1     NO-OP TO TERM. R/W CHAIN    @OZ20010 53078000
         SPACE 2                                               @OZ20010 53080000
         $MID  260                 SET MESSAGE NUMBER          @OZ16669 53092000
KRASHMSG WTO   '&MID.JES2 CONTROL LOCKOUT -- RESET CRASHED SYSTEMS',   C53092100
               MF=L                                            @OZ16669 53092200
KWARNMSG EQU   KRASHMSG,*-KRASHMSG ALTERNATE LABEL WITH LENGTH @OZ16669 53092300
         SPACE 2                                               @OZ20010 53094000
KTWMM    $MSG  093,'NNNN% SPOOL UTILIZATION'                            53096000
KTWME    DC    X'40202120'         EDIT PATTERN                      R4 53100000
KM355M   $MSG  355,'SPOOL VOLUMES ARE FULL'                             53104000
KM355    EQU   KM355M,*-KM355M                                          53106000
KBLBPERB EQU   X'02'               SPOOL FULL MESSAGE FLAG              53110000
KBLBFLAG EQU   $BLBFLAG            BLOB/UNBLOB FLAG BYTE             R4 53112000
KNBITB   DC    AL1(0,1,1,2,1,2,2,3,1,2,2,3,2,3,3,4)    A                53114000
         DC    AL1(1,2,2,3,2,3,3,4,2,3,3,4,3,4,4,5)    BYTE             53116000
         DC    AL1(1,2,2,3,2,3,3,4,2,3,3,4,3,4,4,5)    INDEX            53118000
         DC    AL1(2,3,3,4,3,4,4,5,3,4,4,5,4,5,5,6)    INTO             53120000
         DC    AL1(1,2,2,3,2,3,3,4,2,3,3,4,3,4,4,5)    THIS             53122000
         DC    AL1(2,3,3,4,3,4,4,5,3,4,4,5,4,5,5,6)    TABLE            53124000
         DC    AL1(2,3,3,4,3,4,4,5,3,4,4,5,4,5,5,6)    YIELDS           53126000
         DC    AL1(3,4,4,5,4,5,5,6,4,5,5,6,5,6,6,7)    THE              53128000
         DC    AL1(1,2,2,3,2,3,3,4,2,3,3,4,3,4,4,5)    NUMBER           53130000
         DC    AL1(2,3,3,4,3,4,4,5,3,4,4,5,4,5,5,6)    OF               53132000
         DC    AL1(2,3,3,4,3,4,4,5,3,4,4,5,4,5,5,6)    BITS             53134000
         DC    AL1(3,4,4,5,4,5,5,6,4,5,5,6,5,6,6,7)    ON               53136000
         DC    AL1(2,3,3,4,3,4,4,5,3,4,4,5,4,5,5,6)    IN               53138000
         DC    AL1(3,4,4,5,4,5,5,6,4,5,5,6,5,6,6,7)    THE              53140000
         DC    AL1(3,4,4,5,4,5,5,6,4,5,5,6,5,6,6,7)    BYTE             53142000
         DC    AL1(4,5,5,6,5,6,6,7,5,6,6,7,6,7,7,8)    INDEX            53144000
         EJECT                                                       R4 53146000
         LTORG                                                          53148000
         TITLE 'HASP PRIORITY AGING PROCESSOR'                          53150000
HASPGPRC $ENTRY BASE=BASE2         HASP PRIORITY AGING PROCESSOR        53152000
         ST    SAVE,GPRTQE+IPOST   SET PCE ADDRESS IN STQE              53154000
         LH    R1,$PRIRATE         GET PRIORITY AGING RATE           R4 53156000
         LR    R2,R1               SAVE IT                           R4 53158000
         SRL   R1,1                COMPUTE                           R4 53160000
         AL    R1,GPRINT            AND                              R4 53162000
         SLR   R0,R0                 SAVE                            R4 53164000
         DR    R0,R2                  AGING                          R4 53166000
         LCR   R1,R1                   TIME                          R4 53168000
         ST    R1,GPRINT                INTERVAL (COMPLEMENT)        R4 53170000
         LR    R1,R2               COMPUTE                           R4 53172000
         SRL   R1,1                 AND                              R4 53174000
         AL    R1,GPRSEC             SAVE                            R4 53176000
         SLR   R0,R0                  TIME                           R4 53178000
         DR    R0,R2                   ADJUSTMENT                    R4 53180000
         AL    R1,$SYNCTOL              IN                           R4 53182000
         ST    R1,GPRSEC                 SECONDS                     R4 53184000
         EJECT                                                       R4 53186000
*********************************************************************** 53188000
*                                                                     * 53190000
*        SCAN JOB QUEUE FOR ACTIVE JOB                                * 53192000
*                                                                     * 53194000
*********************************************************************** 53196000
         SPACE 1                                                     R4 53198000
GPRSTART LA    WB,$JQTYPES*2       PREPARE TO TEST FOR ACTIVE JOB Q     53200000
         SPACE 1                                                        53202000
         LH    R1,$JQHEADS-2(WB)   GET 1ST ACTIVE JQE OFFSET            53204000
         LTR   R1,R1               TEST                                 53206000
         BNZ   GPRTIME             BRANCH IF JOB QUEUE IS NOT EMPTY     53208000
         BCTR  WB,0                IF ANOTHER JOB QUEUE,                53210000
         BCT   WB,*-12              BR TO TEST IT                       53212000
         SPACE 1                                                        53214000
         $WAIT JOB                 EMPTY, WAIT FOR A JOB                53216000
         B     GPRSTART            GO BACK AND TRY AGAIN                53218000
         SPACE 1                                                        53220000
GPRTIME  L     R1,GPRINT           SET                                  53222000
         ST    R1,GPRTQE+ITIME      AGING TIME                       R4 53224000
        $STIMER GPRTQE               INTERVAL                        R4 53226000
         $WAIT WORK                WAIT FOR TIME INTERVAL TO EXPIRE     53228000
         $QSUSE                    REQUEST ACCESS TO SHARED QUEUES      53230000
         STCK  GPRCLOCK            STORE CURRENT CLOCK                  53232000
         BC    3,GPRSCAN           BRANCH IF INVALID CLOCK              53234000
         L     R1,GPRCLOCK         GET CURRENT TIME                     53236000
         SL    R1,GPRSEC           COMPUTE APPROXIMATE PREVIOUS TIME    53238000
         LH    R0,$QSENO           GET COUNT OF MEMBERS IN NODE      R4 53240000
         L     R15,$QSE1           GET ADDRESS OF 1ST QSE            R4 53242000
         SPACE 1                                                    R41 53244000
         USING QSEDSECT,R15        ESTABLISH QSE ADDRESSABILITY         53246000
         SPACE 1                                                        53248000
GPRQSE   CLC   QSESID,$SID         COMPARE SID'S                        53250000
         BE    GPRSCAN             BRANCH IF THIS CPU IS 1ST ACTIVE     53252000
         CL    R1,QSESITIM         COMPARE TIMES                        53254000
         BL    GPRTIME             BRANCH IF ANOTHER CPU IS ACTIVE      53256000
         AH    R15,$QSEL           GET ADDRESS OF NEXT QSE           R4 53258000
         BCT   R0,GPRQSE           BR IF VALID QSE ADDRESS           R4 53260000
         SPACE 1                                                     R4 53262000
         DROP  R15                 DROP QSE ADDRESSABILITY              53264000
         EJECT                                                      R41 53266000
GPRSCAN  LA    WB,$JQTYPES*2       PREPARE TO SCAN ALL JOB QUEUES       53268000
         SPACE 1                                                     R4 53270000
         USING JQEDSECT,R1         JOB QUEUE ADDRESSABILITY             53272000
         SPACE 1                                                        53274000
GPRQUE1  LH    R1,$JQHEADS-2(WB)   PREPARE TO SCAN NEXT JOB QUEUE       53276000
         LA    WC,$PRIHIGH         POINT TO HI/LO PRIO AGING VALUES R41 53276100
         CL    WB,GPRHDCPY         TEST FOR $HARDCPY QUEUE,         R41 53276200
         BNE   GPRLOOP1              SKIP IF NOT                    R41 53276300
         LA    WC,GPRHCPRI         POINT TO $HARDCPY HI/LO VALUES   R41 53276400
         SPACE 1                                                        53278000
GPRLOOP1 N     R1,=X'0000FFFF'     CLEAR H.O. TWO BYTES AND TEST        53280000
         BZ    GPREND1             BRANCH IF END-OF-CHAIN               53282000
         SLL   R1,2                EXPAND TO FULL ADDRESS OFFSET        53284000
         AL    R1,$JOBQPTR         ADD JOB QUEUE ADDRESS                53286000
         CLC   JQEPRIO,0(WC)       COMPARE PRIO WITH UPPER LIMIT    R41 53288000
         BL    GPRLOOP2            BRANCH IF LESS                       53290000
         LH    R1,JQECHAIN         NO, GET OFFSET OF NEXT ELEMENT       53292000
         B     GPRLOOP1            TEST NEXT ELEMENT                    53294000
         SPACE 1                                                        53296000
GPREND1  BCTR  WB,0                IF ANOTHER JOB QUEUE,                53298000
         BCT   WB,GPRQUE1           BR TO SCAN IT                       53300000
         B     GPRSTART              ELSE START OVER                    53302000
         SPACE 1                                                        53304000
GPRLOOP2 CLC   JQEPRIO,1(WC)       COMPARE PRIO WITH LOWER LIMIT    R41 53306000
         BL    GPREND1             BR IF LESS -- DONE WITH QUEUE     R4 53308000
         IC    WA,JQEPRIO          INCREMENT                            53310000
         LA    WA,1(,WA)            JOB QUEUE                           53312000
         STC   WA,JQEPRIO            PRIORITY                           53314000
        $QCKPT (R1)                CHECKPOINT THE JQE                R4 53316000
         LH    R1,JQECHAIN         GET OFFSET OF NEXT ELEMENT           53318000
         N     R1,=X'0000FFFF'     CLEAR H.O. TWO BYTES AND TEST        53320000
         BZ    GPREND1             BRANCH IF END-OF-CHAIN               53322000
         SLL   R1,2                EXPAND TO FULL ADDRESS OFFSET        53324000
         AL    R1,$JOBQPTR         ADD JOB QUEUE ADDRESS                53326000
         B     GPRLOOP2            TEST NEXT ELEMENT                    53328000
         SPACE 1                                                        53330000
GPRCLOCK EQU   PCER1,8             STORAGE FOR CLOCK                 R4 53332000
GPRINT   DC    A(540000)           TIME INTERVAL (UNADJUSTED)        R4 53334000
GPRSEC   DC    A(5400)             TIME IN SECONDS (UNADJUSTED)      R4 53336000
GPRTQE   EQU   PCEWORK             HASP TIMER QUEUE ELEMENT          R4 53338000
GPRHDCPY DC    A(4)                OFFSET OF $HARDCPY QUEUE         R41 53338100
GPRHCPRI DC    AL1(X'EF',X'10')    $PRIHIGH, $PRILOW FOR $HARDCPY   R41 53338200
         SPACE 1                                                        53340000
         LTORG                                                          53342000
         TITLE 'HASP JOB QUEUE WARM START -- INITIAL ENTRY POINT'       53344000
*********************************************************************** 53346000
*                                                                     * 53348000
* PROCESSOR NAME -- HASPWARM                                          * 53350000
*                                                                     * 53352000
* DESCRIPTIVE NAME -- JES2 JOB QUEUE WARM START PROCESSOR             * 53354000
*                                                                     * 53356000
* FUNCTION --  PROVIDE WARM START PROCESSING OF THE JES2 JOB QUEUE    * 53358000
*              AND JOB OUTPUT TABLE (JOT) FOR ONE OR MORE SYSTEMS     * 53360000
*              IN A JES2 NODE.                                        * 53362000
*                                                                     * 53364000
* NOTES -- 1)  WHILE THIS PROCESSOR IS ACTIVE, THE SYSTEM BEING       * 53366000
*              WARM STARTED IS LOCKED TO PREVENT OTHER SYSTEMS        * 53368000
*              FROM ATTEMPTING TO WARM START IT.                      * 53370000
*                                                                     * 53372000
*          2)  MASTER BIT MAP RECONSTRUCTION IS PERFORMED ONLY        * 53374000
*              WHEN A WARM START IS BEING PERFORMED ON BEHALF OF      * 53376000
*              ALL SYSTEMS IN THE NODE.                               * 53378000
*                                                                     * 53380000
* REGISTER CONVENTIONS -- R0  -- WORK REGISTER                        * 53382000
*                         R1  -- WORK REGISTER                        * 53384000
*                         WA  -- WORK/SJB ADDRESS                     * 53386000
*                         WB  -- HQT ADDRESS                          * 53388000
*                         WC  -- QSE ADDRESS                          * 53390000
*                         WD  -- JQE ADDRESS                          * 53392000
*                         WE  -- WORK/LINK REGISTER                   * 53394000
*                         WF  -- IOT ADDRESS                          * 53396000
*                         JCT -- JCT ADDRESS                          * 53398000
*                                                                     * 53400000
*********************************************************************** 53402000
         EJECT                                                          53404000
*********************************************************************** 53406000
*                                                                     * 53408000
*        H A S P W A R M   I N I T I A L   E N T R Y   P O I N T      * 53410000
*                                                                     * 53412000
*********************************************************************** 53414000
         SPACE 2                                                        53416000
NQHQT    EQU   WB                  HQT ADDRESS                          53418000
NQSE     EQU   WC                  QSE ADDRESS                          53420000
NQ       EQU   WD                  JQE ADDRESS                          53422000
NQIOT    EQU   WF                  IOT ADDRESS                          53424000
NQJCT    EQU   JCT                 JCT ADDRESS                          53426000
         SPACE 1                                                        53428000
         USING QSEDSECT,NQSE       PROVIDE QSE ADDRESSABILITY           53430000
         USING IOTDSECT,NQIOT      PROVIDE IOT ADDRESSABILITY           53432000
         USING JCTDSECT,NQJCT      PROVIDE JCT ADDRESSABILITY           53434000
         USING JQEDSECT,WD         PROVIDE JQE ADDRESSABILITY           53436000
         USING $SVDSECT,R15        PROVIDE SSVT ADDRESSABILITY       R4 53438000
         SPACE 2                                                     R4 53440000
HASPWARM $ENTRY BASE=(BASE2,BASE3) PROVIDE PROCESSOR ENTRY POINT     R4 53442000
         SPACE 1                                                        53444000
         LA    BASE3,2048(,BASE2)  SET SECOND                        R4 53446000
         LA    BASE3,2048(,BASE3)   BASE REGISTER                    R4 53448000
         L     R15,$SSVT           POINT TO SSVT                     R4 53450000
         TM    $SVHASP,X'80'       TEST FOR JES2 RESTART             R4 53452000
         BZ    SKIP20              BR IF NO                          R4 53454000
         OI    NQSTAT,NQRESTRT      ELSE INDICATE RESTART            R4 53456000
SKIP20   B     NQWARM              THEN BR TO SHOW PROCESSOR ACTIVE     53458000
         SPACE 1                                                        53460000
*********************************************************************** 53462000
*                                                                     * 53464000
*        $ W A I T   F O R   $ E S Y S   C O M M A N D                * 53466000
*                                                                     * 53468000
*********************************************************************** 53470000
         SPACE 1                                                        53472000
NQ000   $WAIT  WORK                $WAIT FOR $ESYS COMMAND              53474000
         SPACE 1                                                        53476000
NQWARM  $ACTIVE                    INDICATE PROCESSOR ACTIVE            53478000
         L     NQSE,$ESYSQSE       GET WARM STARTED SYSTEM QSE ADDR     53480000
         LH    R1,$NUMRJE          GET NUMBER OF REMOTES             R4 53482000
         LTR   R1,R1               TEST COUNT                        R4 53484000
         BZ    NQCKCOLD            BR IF NONE                        R4 53486000
     TITLE 'HASP JOB QUEUE WARM START -- REMOTE SIGN-ON TABLE RESET'    53488000
*********************************************************************** 53490000
*                                                                     * 53492000
*        R E M O T E   S I G N - O N   T A B L E   R E S E T          * 53494000
*                                                                     * 53496000
*********************************************************************** 53498000
         SPACE 1                                                        53500000
        $QSUSE                     REQUEST ACCESS TO CHECKPOINT DATA    53502000
         L     WA,$RMTSON          POINT TO REMOTE SIGN-ON TABLE     R4 53504000
         LTR   NQSE,NQSE           IF SPECIFIC SYSTEM WARM START,       53506000
         BNZ   NQRMT20              BR TO CLEAR THIS SYSTEM'S IDS       53508000
         MH    R1,=H'3'            R1 = SIZE (IN BYTES)              R4 53510000
         LA    R1,7(,R1)                 OF REMOTE                   R4 53512000
         SRL   R1,3                       SIGN-ON TABLE              R4 53514000
         SPACE 1                                                     R4 53516000
SKIP30   MVI   0(WA),0             CLEAR                             R4 53518000
         LA    WA,1(,WA)            ENTIRE                           R4 53520000
         BCT   R1,SKIP30             SIGN-ON TABLE                   R4 53522000
         SPACE 1                                                     R4 53524000
        $POST  $HASPECF,CKPW       $POST THE CHECKPOINT WRITER          53526000
         B     NQCKCOLD            THEN BR TO TEST FOR COLD START       53528000
         SPACE 1                                                        53530000
NQRMT20  SLR   R0,R0               GET SYSTEM ID                        53532000
         IC    R0,QSESIBSY          FROM QSE                            53534000
         SPACE 1                                                        53536000
NQRMT40  LA    WB,8                NUMBER OF IDS PER 3-BYTE TBL SEG     53538000
         ICM   R15,14,0(WA)        LOAD 3-BYTE SEGMENT FROM TABLE       53540000
         SPACE 1                                                        53542000
NQRMT60  SLR   R14,R14             IF REMOTE                            53544000
         SLDL  R14,3                NOT SIGNED ON                       53546000
         CLR   R0,R14                TO THIS SYSTEM,                    53548000
         BNE   *+8                    BR TO TEST NEXT REMOTE            53550000
         BAL   WE,NQRESET              ELSE RESET SYSTEM ID             53552000
         BCT   R1,NQRMT80          BR IF ANOTHER REMOTE TO TEST         53554000
         B     NQCKCOLD             ELSE BR TO TEST FOR COLD START      53556000
         SPACE 1                                                        53558000
NQRMT80  BCT   WB,NQRMT60          BR IF ANOTHER ID IN TABLE SEGMENT    53560000
         LA    WA,3(,WA)            ELSE POINT TO NEXT TABLE SEGMENT    53562000
         B     NQRMT40               AND BR TO SCAN IT                  53564000
         EJECT                                                          53566000
*********************************************************************** 53568000
*                                                                     * 53570000
*        R E S E T   S I G N - O N   T A B L E   S Y S T E M   I D    * 53572000
*                                                                     * 53574000
*********************************************************************** 53576000
         SPACE 1                                                        53578000
NQRESET $POST  $HASPECF,CKPW       $POST THE CHECKPOINT WRITER          53580000
         LR    R14,WB              A SEPARATE RTN EXISTS TO RESET       53582000
         SLL   R14,2                EACH OF THE 8 GROUPS OF 3 BITS      53584000
         B     *(R14)                IN THE CURRENT 3-BYTE TBL SEG      53586000
         SPACE 1                                                        53588000
         B     NQID8               BR TO RESET ID FOR 8TH REMOTE        53590000
         B     NQID7               BR TO RESET ID FOR 7TH REMOTE        53592000
         B     NQID6               BR TO RESET ID FOR 6TH REMOTE        53594000
         B     NQID5               BR TO RESET ID FOR 5TH REMOTE        53596000
         B     NQID4               BR TO RESET ID FOR 4TH REMOTE        53598000
         B     NQID3               BR TO RESET ID FOR 3RD REMOTE        53600000
         B     NQID2               BR TO RESET ID FOR 2ND REMOTE        53602000
         SPACE 1                                                        53604000
NQID1    NI    0(WA),X'1F'         RESET SYSTEM ID                      53606000
         BR    WE                   AND RETURN                          53608000
         SPACE 1                                                        53610000
NQID2    NI    0(WA),X'E3'         RESET SYSTEM ID                      53612000
         BR    WE                   AND RETURN                          53614000
         SPACE 1                                                        53616000
NQID3    NI    0(WA),X'FC'         RESET                                53618000
         NI    1(WA),X'7F'          SYSTEM ID                           53620000
         BR    WE                    AND RETURN                         53622000
         SPACE 1                                                        53624000
NQID4    NI    1(WA),X'8F'         RESET SYSTEM ID                      53626000
         BR    WE                   AND RETURN                          53628000
         SPACE 1                                                        53630000
NQID5    NI    1(WA),X'F1'         RESET SYSTEM ID                      53632000
         BR    WE                   AND RETURN                          53634000
         SPACE 1                                                        53636000
NQID6    NI    1(WA),X'FE'         RESET                                53638000
         NI    2(WA),X'3F'          SYSTEM ID                           53640000
         BR    WE                    AND RETURN                         53642000
         SPACE 1                                                        53644000
NQID7    NI    2(WA),X'C7'         RESET SYSTEM ID                      53646000
         BR    WE                   AND RETURN                          53648000
         SPACE 1                                                        53650000
NQID8    NI    2(WA),X'F8'         RESET SYSTEM ID                      53652000
         BR    WE                   AND RETURN                          53654000
         SPACE 1                                                        53656000
NQCKCOLD LTR   NQSE,NQSE           IF SPECIFIC SYSTEM WARM START,       53658000
         BNZ   NQSETST              BR AROUND COLD START TEST        R4 53660000
         TM    $OPTSTAT,$OPTCOLD+$OPTFMT  IF COLD START,             R4 53662000
         BNZ   NQ700                BR AROUND WARM START             R4 53664000
    TITLE 'HASP JOB QUEUE WARM START -- OUTPUT PROCESSOR WARM START'    53666000
*********************************************************************** 53668000
*                                                                     * 53670000
*        O U T P U T   P R O C E S S O R   W A R M   S T A R T        * 53672000
*                                                                     * 53674000
*********************************************************************** 53676000
         SPACE 1                                                        53678000
NQSETST $QSUSE                     REQUEST ACCESS TO CHECKPOINT DATA R4 53680000
         LH    WF,$QSEL            GET QSE LENGTH                    R4 53682000
         LTR   WA,NQSE             IF SINGLE SYSTEM WARM START,         53684000
         BNZ   NQSEONE              BR TO TEST SYSTEM STATUS            53686000
         L     WA,$QSE1            POINT TO 1ST QSE                  R4 53688000
         SPACE 1                                                        53690000
NQSENXT1 ICM   WB,15,QSEOPJNO-QSEDSECT(WA)  IF OUTPUT PROCESSOR BSY,    53692000
         BNZ   NQSEACTV                      BR TO XFER JOT INFO        53694000
         SPACE 1                                                        53696000
NQSENEXT TM    QSEFLAGS-QSEDSECT(WA),QSELAST  IF ANOTHER                53698000
         LA    WA,0(WF,WA)                     QSE,                  R4 53700000
         BZ    NQSENXT1                         LOOP,                   53702000
         B     NQ020                ELSE BR TO WARM START THE JOT       53704000
         SPACE 1                                                        53706000
NQSEONE  ICM   WB,15,QSEOPJNO      IF SYSTEM NOT IN OUTPUT PROC'G,      53708000
         BZ    NQ020                BR TO WARM START THE JOT            53710000
         SPACE 1                                                        53712000
NQSEACTV L     WE,$QSE1            POINT TO 1ST QSE                  R4 53714000
         STCK  NQDBL               GET CURRENT TIME OF DAY              53716000
         L     R15,NQDBL            ADJUSTED BY                         53718000
         SL    R15,$SYNCTOL          CLOCK TOLERANCE                 R4 53720000
         EJECT                                                       R4 53722000
         USING QSEDSECT,WE         ALTER QSE ADDRESSABILITY          R4 53724000
         SPACE 1                                                     R4 53726000
NQSENXT2 ICM   R0,3,QSEOPJNO       IF OUTPUT PROCESSOR BUSY,         R4 53728000
         BNZ   SKIP40               BR TO TEST NEXT QSE              R4 53730000
         CL    R15,QSESITIM        IF SYSTEM NOT DORMANT,            R4 53732000
         BNH   NQSEXFER             BR TO TRANSFER JOT INFO          R4 53734000
SKIP40   TM    QSEFLAGS,QSELAST    IF ANOTHER                        R4 53736000
         LA    WE,0(WF,WE)          QSE,                             R4 53738000
         BZ    NQSENXT2              LOOP                            R4 53740000
         LR    WE,WA                ELSE POINT TO BUSY QSE              53742000
         B     NQSEAFF               AND BR TO ASSIGN SYSTEM AFF        53744000
         SPACE 1                                                        53746000
NQSEXFER STCM  WB,15,QSEOPJNO               TRANSFER OUTPUT          R4 53748000
         SLR   R0,R0                         PROCESSOR WARM             53750000
         STCM  R0,15,QSEOPJNO-QSEDSECT(WA)    START INFORMATION         53752000
         SPACE 1                                                        53754000
NQSEAFF  SRL   WB,16               LOCATE JQE                           53756000
        $QLOC  (WB),NQSENEXT        FOR JOB                             53758000
         NI    QUEFLAG2(R1),255-QUESYSAF  ASSIGN SYSTEM                 53760000
         OC    QUEFLAG2(,R1),QSESIAFF        AFFINITY                R4 53762000
        $QCKPT (R1)                FORCE CHECKPOINT OF JQE              53764000
         LTR   NQSE,NQSE           IF NODAL WARM START,              R4 53766000
         BZ    NQSENEXT             BR TO CONTINUE QSE SCAN             53768000
         SPACE 1                                                     R4 53770000
         DROP  WE                  RESTORE NORMAL QSE ADDRESSABILITY R4 53772000
         TITLE 'HASP JOB QUEUE WARM START -- JOT WARM START'         R4 53774000
*********************************************************************** 53776000
*                                                                     * 53778000
*        J O T   W A R M   S T A R T                                  * 53780000
*                                                                     * 53782000
*********************************************************************** 53784000
         SPACE 1                                                        53786000
         USING JOEDSECT,WA         PROVIDE JOE ADDRESSABILITY           53788000
         USING JOTDSECT,WB         PROVIDE JOT ADDRESSABILITY           53790000
         SPACE 1                                                        53792000
NQ020    L     WB,$JOTABLE         GET ADDRESS OF JOT                   53794000
         LA    WF,72               MAXIMUM INDEX TO CLASS QUEUE         53796000
         SPACE 1                                                        53798000
NQ040    LA    WA,JOTCLSQ-2-(JOENEXT-JOEDSECT)(WF)  NEXT CLASS QUEUE    53800000
         SPACE 1                                                        53802000
NQ060    LH    WA,JOENEXT          GET NEXT WORK JOE OFFSET             53804000
         N     WA,=X'0000FFFF'     IF END OF CLASS QUEUE,               53806000
         BZ    NQ160                BR TO TEST NEXT CLASS QUEUE         53808000
         SLL   WA,2                  ELSE CONVERT OFFSET             R4 53810000
         ALR   WA,WB                  TO ABSOLUTE ADDRESS               53812000
         TM    JOEFLAG,$JOEBUSY    IF JOE NOT IN USE,                   53814000
         BZ    NQ060                BR TO TEST NEXT JOE                 53816000
         LTR   NQSE,NQSE           IF NODAL WARM START,              R4 53818000
         BZ    NQ080                BR TO RESET JOES                    53820000
         IC    R0,JOEFLAG          IF NOT                               53822000
         N     R0,=A(QUEBUSY)       SYSTEM BEING                        53824000
         CLM   R0,1,QSESIBSY         WARM STARTED,                      53826000
         BNE   NQ060                  BR TO TEST NEXT JOE               53828000
         CLI   JOEDEVID,X'0F'      IS XWTR USING THIS JOE      @OZ30706 53830000
         BNE   NQ080               SKIP NEXT IF NOT                  R4 53832000
         SPACE 1                                                     R4 53834000
*********************************************************************** 53836000
*                                                                     * 53838000
*        CHECK IF THE XWTR USING THIS JOE IS STILL ACTIVE             * 53840000
*                                                                     * 53842000
*********************************************************************** 53844000
         SPACE 1                                                     R4 53846000
         L     R15,$SSVT          GET SSVT ADDRESS                   R4 53848000
         LA    WE,$SVJXNUM-(SJBXQCHN-SJBDSECT) SET TO SCAN SJB'S     R4 53850000
         SPACE 1                                                     R4 53852000
NQ070    L     WE,SJBXQCHN-SJBDSECT(,WE) GET NEXT SJB ADDRESS        R4 53854000
         LTR   WE,WE               IS THERE A POSSIBLE XWTR ACTIVE   R4 53856000
         BZ    NQ080               BR IF NONE                        R4 53858000
         L     R1,SJBPSOP-SJBDSECT(,WE) IF ACTIVE TASK IS XWTR,      R4 53860000
         LA    R1,0(,R1)            IT WILL HAVE A PSO ADDR.         R4 53862000
         LTR   R1,R1               TEST FOR A PSO ADDR,              R4 53864000
         BZ    NQ070                IF NONE, BR TO GET NEXT SJB.     R4 53866000
         CLM   WA,7,PSOWKJOE+1-PSODSECT(R1) THIS XWTR FOR THIS JOE   R4 53868000
         BE    NQ060               IF YES BR TO SKIP RESET, OTHERWISER4 53870000
         B     NQ070               LOOK FOR ANOTHER XWTR ACTIVE      R4 53872000
         SPACE 1                                                     R4 53874000
         SPACE 1                                                        53876000
NQ080    LH    R1,JOECHAR                POINT TO                       53878000
         N     R1,=X'0000FFFF'            CHARACTERISTICS               53880000
         SLL   R1,2                        JOE                       R4 53882000
         LA    WE,JOEACTPR-JOEDSECT(R1,WB)  ACTIVE PRINTER COUNT        53884000
         TM    JOEFLAG,$JOEPRT     IF JOB PRINTING LOCALLY,             53886000
         BO    NQ100                BR TO DECREMENT COUNT               53888000
         TM    JOEFLAG,$JOEPUN     IF JOB NOT PUNCHING LOCALLY,         53890000
         BZ    NQ110                BR TO RECOMPUTE PRIORITY        R41 53892000
         LA    WE,1(,WE)             ELSE POINT TO ACTIVE PUNCH CT      53894000
         SPACE 1                                                        53896000
*********************************************************************** 53898000
*                                                                     * 53900000
*        U P D A T E   A C T I V E   D E V I C E   C O U N T          * 53902000
*                                                                     * 53904000
*********************************************************************** 53906000
         SPACE 1                                                        53908000
NQ100    IC    R0,0(,WE)           DECREMENT                            53910000
         BCTR  R0,0                 DEVICE                              53912000
         STC   R0,0(,WE)             COUNT                              53914000
        $#CKPT JOE=0(,R1)          CHECKPOINT THE CHAR-JOE           R4 53916000
         SPACE 1                                                    R41 53917000
*********************************************************************** 53917100
*                                                                     * 53917200
*        R E C O M P U T E   J O E   P R I O R I T Y                  * 53917300
*                                                                     * 53917400
*********************************************************************** 53917500
         SPACE 1                                                    R41 53917600
NQ110    TM    JOEFLAG,$JOECKV     IF NO CKPT INFORMATION,          R41 53917700
         BZ    NQ120                 LEAVE PRIORITY ALONE           R41 53917800
         LH    R1,JOECKPT          PICK UP CKPT JOE PTR,            R41 53917900
         N     R1,=X'0000FFFF'       DELETE SIGN BITS,              R41 53918000
         BZ    NQ120                 EXIT IF NO POINTER             R41 53918100
         ALR   R1,R1               DEVELOP                          R41 53918200
         ALR   R1,R1                 BYTE OFFSET                    R41 53918300
         L     R0,JOERECCT         COMPUTE NO OF RECORDS LEFT       R41 53918400
         S     R0,JOECRECN-JOEDSECT(R1,WB) TO PRINT OR PUNCH        R41 53918500
         BM    NQ120               FORGET IT IF NEGATIVE            R41 53918600
         L     R1,$SSVT            POINT TO SSVT,                   R41 53918700
         LA    R1,$SVXPRI-4-SSVT(,R1) THEN TO PRIORITY TABLE        R41 53918800
         LA    R14,10              SET BCT LOOP COUNTER             R41 53918900
         SPACE 1                                                    R41 53919000
NQ115    LA    R1,4(,R1)           BUMP TABLE POINTER               R41 53919100
         L     R15,0(,R1)          PICK UP TABLE ENTRY,             R41 53919200
         LA    R15,0(,R15)           DELETE PRIORITY BYTE           R41 53919300
         CLR   R15,R0              SEE IF THIS IS RIGHT SLOT,       R41 53919400
         BNL   NQ117                 BRANCH IF SO                   R41 53919500
         BCT   R14,NQ115           LOOP THRU TABLE                  R41 53919600
         SPACE 1                                                    R41 53919700
NQ117    MVC   JOEPRIO,0(R1)       MOVE PRIORITY TO JOE             R41 53919800
         EJECT                                                          53919900
*********************************************************************** 53920000
*                                                                     * 53922000
*        R E S E T   J O E   F L A G S                                * 53924000
*                                                                     * 53926000
*********************************************************************** 53928000
         SPACE 1                                                        53930000
NQ120    NI    JOEFLAG,255-$JOEBUSY-$JOEPRT-$JOEPUN  RESET JOE FLAGS    53932000
        $#CKPT JOE=0(,R2),TYPE=A   CHECKPOINT THE WORK JOE              53934000
        $POST  $HASPECF,CKPW       $POST THE CHECKPOINT WRITER          53936000
         LH    NQ,JOEJQE           GET JQE                              53938000
         N     NQ,=X'0000FFFF'      ADDRESS                             53940000
         SLL   NQ,2                  FROM                               53942000
         AL    NQ,$JOBQPTR            JOE                               53944000
         TM    JQEFLAGS,QUEPURGE   IF JOB NOT BEING CANCELLED,          53946000
         BZ    NQ140                BR TO ISSUE MESSAGE                 53948000
        $#REM  WORK=(WA)             ELSE REMOVE JOE FROM JOT        R4 53950000
         SPACE 1                                                        53952000
NQ140    LA    R1,NQPRPU           SET 'WAS PRINTING/PUNCHING' MSG   R4 53954000
         BAL   WE,NQWTO             AND INFORM THE OPERATOR             53956000
         B     NQ040               THEN BR TO RE-SCAN THE CLS QUEUE     53958000
         SPACE 1                                                        53960000
*********************************************************************** 53962000
*                                                                     * 53964000
*        G E T   N E X T   C L A S S   Q U E U E                      * 53966000
*                                                                     * 53968000
*********************************************************************** 53970000
         SPACE 1                                                        53972000
NQ160    BCTR  WF,0                DECREMENT QUEUE INDEX BY 1           53974000
         BCT   WF,NQ040            BR IF ANOTHER CLASS QUEUE            53976000
         B     NQPURGE              ELSE BR TO PURGE REQUEST QUEUES     53980000
         SPACE 1                                                        53984000
         DROP  WA,WB               KILL JOE, JOT ADDRESSABILITY         53986000
         TITLE 'HASP JOB QUEUE WARM START -- REQUEST QUEUE PURGE'       54232000
*********************************************************************** 54234000
*                                                                     * 54236000
*        P O S T   C A N C E L / S T A T U S ,   P S O   W A I T S    * 54238000
*                                                                     * 54240000
*********************************************************************** 54242000
         SPACE 1                                                        54244000
         USING SJBDSECT,WA         PROVIDE SJB ADDRESSABILITY           54246000
         SPACE 1                                                        54248000
NQPURGE  TM    NQSTAT,NQRESTRT     IF WARM STARTING JES2,            R4 54250000
         BZ    NQINIT               BR TO WARM START JOB QUEUE       R4 54252000
         L     R15,$SSVT           POINT TO SSVT                     R4 54254000
         LA    WF,$SVTSCS          POINT TO CANCEL/STATUS QUEUE         54256000
         BAL   WE,NQPOST            AND POST ANY WAITING REQUESTORS     54258000
         L     R15,$SSVT           POINT TO SSVT                     R4 54260000
         LA    WF,$SVPSOQ          POINT TO PSO QUEUE                   54262000
         BAL   WE,NQPOST            AND POST ANY WAITING REQUESTORS     54264000
         B     NQINIT              THEN BR TO WARM START JOB QUEUE   R4 54266000
         SPACE 1                                                        54268000
NQPOST  $GETLOK ,                  SERIALIZE WITH OTHER DEQUEUERS       54270000
         LM    WA,WB,0(WF)         PICK UP QUEUE HEADER                 54272000
         SPACE 1                                                        54274000
NQTESTQ  LTR   WA,WA               TEST FOR EMPTY QUEUE                 54276000
         BZ    NQUNLOK             BR IF SO                             54278000
         L     R0,SJBTCHN           ELSE TRY                            54280000
         LR    R1,WB                 TO DEQUEUE                         54282000
         CDS   WA,R0,0(WF)            QUEUE ELEMENT                     54284000
         BNE   NQTESTQ             BR IF UNSUCCESSFUL TO TRY AGAIN      54286000
        $FRELOK ,                   ELSE RELEASE LOCK                   54288000
         POST  ,1,MF=(E,SJBECBP)   POST ABNORMAL COMPLETION             54290000
         B     NQPOST              THEN BR TO POST NEXT QUEUE ENTRY     54292000
         SPACE 1                                                        54294000
NQUNLOK $FRELOK ,                  RELEASE LOCK                         54296000
         BR    WE                  THEN RETURN                          54298000
         TITLE 'HASP JOB QUEUE WARM START -- MAIN PROCESSING'           54300000
*********************************************************************** 54302000
*                                                                     * 54304000
*        P R E P A R E   T O   S C A N   J O B   Q U E U E            * 54306000
*                                                                     * 54308000
*********************************************************************** 54310000
         SPACE 1                                                        54312000
         USING HQTDSECT,NQHQT      PROVIDE HQT ADDRESSABILITY           54314000
         SPACE 1                                                        54316000
NQ200    LA    NQ,$JQTYPES*2             PREPARE                        54318000
         ST    NQ,NQQUEUE                 TO SCAN                       54320000
         LA    NQ,$JQHEADS-2-QUECHAIN(NQ)  ACTIVE JOB QUEUES            54322000
         SPACE 1                                                        54324000
*********************************************************************** 54326000
*                                                                     * 54328000
*        P R O C E S S   N E X T   J O B   Q U E U E   E N T R Y      * 54330000
*                                                                     * 54332000
*********************************************************************** 54334000
         SPACE 1                                                        54336000
NQ210    LH    NQ,JQECHAIN         GET OFFSET                           54338000
         N     NQ,=X'0000FFFF'      OF NEXT JQE                         54340000
         BZ    NQ660               BR IF END OF CURRENT JOB QUEUE       54342000
         SLL   NQ,2                 ELSE CONVERT OFFSET                 54344000
         AL    NQ,$JOBQPTR           TO ABSOLUTE ADDRESS                54346000
         TM    JQEHQLOK,QUEBUSY    IF HOLD QUEUE LOCK NOT HELD,         54348000
         BZ    NQ210                BR TO TEST NEXT JQE                 54350000
         MVC   NQCHAIN,JQECHAIN    SAVE OFFSET OF NEXT JQE              54352000
         LTR   NQSE,NQSE           IF NODAL WARM START,              R4 54354000
         BZ    NQ220                BR TO TEST QUEUE TYPE               54356000
         IC    R0,JQEHQLOK         IF NOT                               54358000
         N     R0,=A(QUEBUSY)       SYSTEM BEING                        54360000
         CLM   R0,1,QSESIBSY         WARM STARTED,                      54362000
         BNE   NQ210                  BR TO TEST NEXT JQE               54364000
         SPACE 1                                                        54366000
NQ220    CLI   JQETYPE,$INPUT      TEST FOR JOB ON READER               54368000
         BNE   NQ230               BR IF NO                             54378000
SKIP50   LTR   NQSE,NQSE           IF NODAL WARM START,              R4 54380000
         BZ    *+20                 BR TO AVOID SYSTEM TEST             54382000
         IC    R0,JQEFLAGS         IF NOT                               54384000
         N     R0,=A(QUEBUSY)       SYSTEM BEING                        54386000
         CLM   R0,1,QSESIBSY         WARM STARTED,                      54388000
         BNE   NQ640                  BR TO TEST NEXT JQE               54390000
         LA    R1,NQRDRM           SET 'WAS ON READER' MSG           R4 54408000
         EJECT                                                      R41 54409000
NQ225    BAL   WE,NQWTO            ISSUE MESSAGE TO OPERATOR        R41 54410000
         B     NQ255               THEN BR TO QUEUE JOB FOR PURGE       54412000
         SPACE 1                                                    R41 54414000
*********************************************************************** 54416000
*                                                                     * 54418000
*        J O B   N O T   O N   R E A D E R                            * 54420000
*                                                                     * 54422000
*********************************************************************** 54424000
         SPACE 1                                                        54426000
NQ230    LTR   NQSE,NQSE           IF NODAL WARM START,              R4 54428000
         BZ    NQ245                BR TO TEST FOR XBM                  54430000
         IC    R0,JQEFLAGS         ISOLATE SYSTEM ID                    54432000
         N     R0,=A(QUEBUSY)       (IF ANY)                            54434000
         CLI   JQETYPE,$PURGE      TEST FOR JOB IN/AWAITING PURGE       54436000
         BNE   NQ235               BR IF NO                             54438000
         CLM   R0,1,QSESIBSY       IF NOT PURGING ON THIS SYSTEM,       54440000
         BNE   NQ640                BR TO TEST NEXT JQE                 54442000
         B     NQ620                 ELSE RE-QUEUE JOB FOR PURGE        54444000
         SPACE 1                                                        54446000
NQ235    TM    JQEFLAGS,QUEBUSY    IF JOB                               54448000
         BZ    *+12                 ACTIVE ON                           54450000
         CLM   R0,1,QSESIBSY         ANOTHER SYSTEM,                    54452000
         BNE   NQ260                  BR TO READ THE JCT                54454000
         TM    JQETYPE,$XEQ        WAS JOB CONVERTING/EXECUTING...      54456000
         BZ    NQ260               BR IF BEYOND THAT TO READ THE JCT    54458000
         TM    NQSTAT,NQRESTRT     TEST FOR JES2 RESTART             R4 54460000
         BZ    NQ245               BR IF NO                             54462000
         EJECT                                                       R4 54464000
*********************************************************************** 54466000
*                                                                     * 54468000
*        R E - S T A R T I N G   - -   T E S T   F O R   S J B        * 54470000
*                                                                     * 54472000
*********************************************************************** 54474000
         SPACE 1                                                        54476000
         BAL   WE,NQSJBLOC         TRY TO LOCATE SJB FOR JOB            54478000
         LTR   WA,WA               TEST FOR SJB                         54480000
         BZ    NQ245               BR IF NOT FOUND                      54482000
         LA    R0,$SVJPNUM         IF STARTING STC                      54484000
         CL    R0,SJBQUEUE          OR TSU JOB,                         54486000
         BE    NQ590                 BR TO REQUEUE JOB                  54488000
         LA    R0,$SVJXNUM         IS SJB FOR AN                     R4 54490000
         CL    R0,SJBQUEUE          EXECUTING STC JOB                R4 54492000
         BNE   NQ237               BR IF NOT                         R4 54494000
         TM    SJBPSOP,X'80'       IS SJB FOR XWTR WAITING ON JOT    R4 54496000
         BZ    NQ237               NO, BRANCH                        R4 54498000
         IC    R1,$WTRWTCT         YES, GET WTR WAIT COUNT           R4 54500000
         LA    R1,1(,R1)            INCREMENT                        R4 54502000
         STC   R1,$WTRWTCT          RESTORE COUNT                    R4 54504000
NQ237    MVC   JQETRAK,SJBJCTRK    GUARANTEE                         R4 54506000
         ST    NQ,SJBJQE            LATEST JOB                          54508000
         IC    R0,SJBJCLAS           INFORMATION                        54510000
         N     R0,=A(QUECLASS)        IN SJB                            54512000
        $QPUT  (NQ),(R0)               AND IN JQE                       54514000
         OC    JQEFLAGS,$SIDBUSY   THEN SHOW JOB EXECUTING              54516000
         CLC   JQEJOBNO,=H'10000'  IF EXECUTING BY CLASS,               54518000
         BL    *+12                 BR TO BUMP ACTIVE COUNT             54520000
         TM    JQEFLAG2,QUEINIT    IF SYSTEM LOG OR INITIATOR,          54522000
         BO    NQ240                DON'T BUMP ACTIVE COUNT             54524000
        $ACTIVE                    INDICATE PROCESSOR ACTIVE            54526000
         EJECT                                                          54528000
NQ240    ST    NQJCT,PCEBUFAD      SET BUFFER ADDRESS FOR $EXCP      R4 54530000
         L     R1,JQETRAK          GET JCT TRACK ADDRESS             R4 54532000
         BAL   WE,NQREAD            AND READ IN THE JCT              R4 54534000
         L     R15,$SSVT           POINT TO SSVT                     R4 54536000
         TM    $SVSTUS,$SVSTXST    IF NOT MONITORING TIME EXCESSIONS    54538000
         BZ    NQ270                BR TO TEST FOR SPIN IOTS            54540000
         LA    R0,$SVJXCLS         IF JOB NOT                           54542000
         CL    R0,SJBQUEUE          STILL EXECUTING,                    54544000
         BNE   NQ270                 BR TO TEST FOR SPIN IOTS           54546000
         L     R14,JCTETIME        IF TIME ESTIMATE                     54548000
         C     R14,=A(24*60*60)     WAS 24 HOURS,                       54550000
         BNL   NQ270                 BR TO TEST FOR SPIN IOTS           54552000
         SPACE 1                                                        54554000
*********************************************************************** 54556000
*                                                                     * 54558000
*        R E S U M E   T I M E   E X C E S S I O N   T E S T I N G    * 54560000
*                                                                     * 54562000
*********************************************************************** 54564000
         SPACE 1                                                        54566000
         L     R0,$XTIMPCE         STORE PCE ADDRESS                 R4 54568000
         ST    R0,SJBSTQE+IPOST     IN TQE                              54570000
         OI    SJBSTQE+IPOST,X'80' PRE-POST TQE                         54572000
         TIME  BIN                 GET CURRENT DATE AND TIME            54574000
         CL    R1,JCTXDTON         ADJUST TIME-OF-DAY                   54576000
         LR    R1,R0                FOR                                 54578000
         BE    *+8                   NEW                                54580000
         AL    R1,=A(100*60*60*24)    DAY                               54582000
         SLR   R0,R0               CLEAR FOR DIVIDE                     54584000
         SL    R1,JCTXEQON         COMPUTE TIME IN                      54586000
         D     R0,=A(100)           EXECUTION IN SECONDS                54588000
         SR    R1,R14              IF ORIGINAL TIME                     54590000
         ST    R1,SJBXSTIM          INTERVAL NOT ELAPSED,               54592000
         BNP   NQ270                 BR TO TEST FOR SPIN IOTS           54594000
         SLR   R0,R0               COMPUTE EXCESSION TIME               54596000
         D     R0,=A(60)            IN MINUTES                          54598000
         ST    R1,SJBXSTIM         STORE IN CASE INTEGRAL MINUTES       54600000
         LTR   R0,R0               IF INTEGRAL NUMBER OF MINUTES,       54602000
         BZ    NQ270                BR TO TEST FOR SPIN IOTS            54604000
         LA    R1,1(,R1)             ELSE UPDATE                        54606000
         ST    R1,SJBXSTIM            EXCESSION TIME                    54608000
         LA    R1,60               STORE TIME                           54610000
         SLR   R1,R0                REMAINING                           54612000
         ST    R1,SJBSTQE+ITIME      IN MINUTE                          54614000
        $STIMER  SJBSTQE              AND ISSUE $STIMER                 54616000
         B     NQ270               THEN BR TO TEST FOR SPIN IOTS        54618000
         SPACE 1                                                     R4 54620000
         DROP  WA                  KILL SJB ADDRESSABILITY              54622000
         EJECT                                                          54624000
NQ245    TM    JQETYPE,$XEQ        IF JOB BEYOND EXECUTION,             54626000
         BZ    NQ260                BR TO READ THE JCT                  54628000
         TM    JQEFLAGS,QUEBUSY    IF JOB                               54630000
         BZ    *+12                 ACTIVE                              54632000
         CLI   JQETYPE,$XEQ          IN EXECUTION,                      54634000
         BNE   NQ260                  BR TO READ THE JCT                54636000
         LTR   NQSE,NQSE           IF NODAL WARM START,              R4 54638000
         BZ    *+16                 BR TO TEST FOR XBM                  54640000
         IC    R1,QSESIAFF         IF JOB DOES NOT HAVE                 54642000
         EX    R1,NQTSTAFF          AFFINITY TO THIS SYSTEM,            54644000
         BZ    NQ260                 BR TO READ THE JCT                 54646000
         CLC   JQEJOBNO,=H'10000'  IF STC OR TSU JOB,                   54648000
         BH    NQ250                BR TO RE-QUEUE JOB FOR PURGE        54650000
         ST    NQJCT,PCEBUFAD        ELSE                               54652000
         L     R1,JQETRAK             READ                              54654000
         BAL   WE,NQREAD               THE JCT                          54656000
         TM    JCTJBOPT,JCTXBACH   IF NOT XBM JOB,                      54658000
         BZ    NQ270                BR TO TEST FOR SPIN IOTS            54660000
         IC    R0,JCTJCLAS           ELSE REQUEUE                       54662000
         N     R0,=A(QUECLASS)        JOB FOR                           54664000
        $QPUT  (NQ),(R0)               EXECUTION                        54666000
         BAL   WE,NQRELSE          THEN RELEASE ANY DUPLICATE JOBS      54668000
         B     NQ270                AND BR TO TEST FOR SPIN IOTS        54670000
         SPACE 1                                                        54672000
NQ250    NI    JQEFLAG2,255-QUEINIT  RESET INIT BIT                     54674000
         SPACE 1                                                        54676000
NQ255    LTR   NQSE,NQSE           IF SINGLE SYSTEM WARM START,         54678000
         BNZ   NQ620                BR TO QUEUE JOB FOR PURGE           54680000
        $QPUT  (NQ),$PURGE           ELSE DO IT HERE                    54682000
         SPACE 1                                                        54690000
*********************************************************************** 54694000
*                                                                     * 54696000
*        R E A D   I N   J C T   F O R   J O B                        * 54698000
*                                                                     * 54700000
*********************************************************************** 54702000
         SPACE 1                                                        54704000
NQ260    ST    NQJCT,PCEBUFAD      SET BUFFER ADDRESS FOR $EXCP         54706000
         L     R1,JQETRAK          GET JCT TRACK ADDRESS                54708000
         BAL   WE,NQREAD            AND READ IN THE JCT                 54710000
         SPACE 1                                                        54764000
*********************************************************************** 54766000
*                                                                     * 54768000
*        T E S T   F O R   S P I N   I O T ( S )                      * 54770000
*                                                                     * 54772000
*********************************************************************** 54774000
         SPACE 1                                                        54776000
NQ270    ICM   R1,15,JCTSPIOT      IF NO SPIN IOTS,                     54778000
         BZ    NQ530                BR TO CONCLUDE JOB PROCESSING       54780000
         EJECT                                                          54782000
*********************************************************************** 54784000
*                                                                     * 54786000
*        R E M O V E   H Q R   I N - U S E   L O C K S                * 54788000
*                                                                     * 54790000
*********************************************************************** 54792000
         SPACE 1                                                        54794000
         SLR   NQIOT,NQIOT         INDICATE NO IOT BUFFER               54796000
         ST    NQIOT,NQHOLDQ        AND NO HOLD DATA SET REQUESTS       54798000
         L     R1,JCTHQT           POINT TO 1ST HQT FOR JOB             54800000
         ST    R1,NQHQTRK          SAVE HQT TRACK ADDRESS               54802000
         ST    NQHQT,PCEBUFAD      SET BUFFER ADDRESS FOR $EXCP         54804000
         LTR   R1,R1               IF VALID HQT ADDRESS,                54806000
         BNZ   NQ280                BR TO READ IT IN                    54808000
         BAL   WE,NQHQTCK            ELSE CREATE DUMMY HQT              54810000
         B     NQ300                  AND BR TO RESTORE IOT TRK ADDR    54812000
         SPACE 1                                                        54814000
         USING HQRDSECT,WA         PROVIDE HQR ADDRESSABILITY           54816000
         SPACE 1                                                        54818000
NQ280    BAL   WE,NQREAD           READ IN THE HQT                      54820000
         TM    NQSTAT,NQRESTRT     TEST FOR JES2 RESTART             R4 54822000
         BO    NQ300               BR IF YES                         R4 54824000
         LA    WA,HQTHQR-HQRLENG   PREPARE TO SCAN HQT                  54826000
         L     R1,HQTHQRP           FOR HQRS REPRESENTING               54828000
         ALR   R1,NQHQT              IN-USE HELD DATA SETS              54830000
         SPACE 1                                                        54832000
NQ290    LA    WA,HQRLENG(,WA)     POINT TO NEXT HQR                    54834000
         CLR   WA,R1               IF NO MORE HQRS,                     54836000
         BE    NQ300                BR TO TEST FOR ANOTHER HQT          54838000
         TM    HQRSTAT,HQRINUSE    IF DATA SET NOT IN USE,              54840000
         BZ    NQ290                BR TO TEST NEXT HQR                 54842000
         LTR   NQSE,NQSE           IF NODAL WARM START,              R4 54844000
         BZ    *+20                 BR TO RESET IN-USE LOCK             54846000
         IC    R0,HQRSTAT          IF NOT                               54848000
         N     R0,=A(QUEBUSY)       SYSTEM BEING                        54850000
         CLM   R0,1,QSESIBSY         WARM STARTED,                      54852000
         BNE   NQ290                  BR TO TEST NEXT HQR               54854000
         NI    HQRSTAT,255-HQRINUSE    ELSE RESET LOCK                  54856000
         OI    HQTFLAG1,HQT1CKPT        AND REQUEST HQT CHECKPOINT      54858000
         B     NQ290               THEN BR TO TEST NEXT HQR             54860000
         SPACE 1                                                        54862000
NQ300    L     R1,JCTSPIOT         RESTORE SPIN IOT TRACK ADDRESS       54864000
         ICM   R0,15,HQTHQT        IF END OF HQT CHAIN,                 54866000
         BZ    NQ310                BR TO READ 1ST SPIN IOT             54868000
         TM    HQTFLAG1,HQT1CKPT   IF HQT NOT UPDATED,                  54870000
         BZ    *+8                  BR TO AVOID CHECKPOINT              54872000
         BAL   WE,NQHQTWR            ELSE RE-WRITE CURRENT HQT          54874000
         L     R1,HQTHQT           THEN RE-LOAD ADDRESS OF NEXT HQT     54876000
         B     NQ280                AND BR TO READ THE HQT              54878000
         SPACE 1                                                        54880000
         DROP  WA                  KILL HQR ADDRESSABILITY              54882000
         EJECT                                                          54884000
NQ310    LTR   NQSE,NQSE           IF NODAL WARM START,              R4 54886000
         BZ    NQ320                BR TO READ 1ST SPIN IOT             54888000
         TM    JQETYPE,$XEQ        IF JOB                               54890000
         BZ    NQ500                NOT                                 54892000
         CLI   JQETYPE,$XEQ          EXECUTING                          54894000
         BE    NQ500                  ON                                54896000
         IC    R0,JQEFLAGS             WARM                             54898000
         N     R0,=A(QUEBUSY)           STARTING                        54900000
         CLM   R0,1,QSESIBSY             SYSTEM,                        54902000
         BNE   NQ500                      BR TO TEST FOR HOLD REQ'S     54904000
         SPACE 1                                                        54906000
NQ320    LTR   NQIOT,NQIOT         IF HAVE IOT BUFFER,                  54908000
         BNZ   NQ340                BR TO READ THE SPIN IOT             54910000
         ST    R1,NQIOTTR            ELSE SAVE SPIN IOT TRACK ADDR      54912000
         LH    R0,$BUFLENG            AND GET CSA STORAGE            R4 54914000
         GETMAIN RC,LV=(0),SP=231      FOR SPIN IOT BUFFER              54916000
         LR    NQIOT,R1            RE-LOAD BUFFER ADDRESS               54918000
         LTR   R15,R15             IF GETMAIN SUCCESSFUL,               54920000
         BZ    NQ330                BR TO READ THE SPIN IOT             54922000
         LA    R1,NQCORE             ELSE SET 'AWAITING STORAGE' MSG R4 54924000
         BAL   WE,NQWTO               AND INFORM THE OPERATOR           54926000
         LA    R0,30               THEN $WAIT                           54928000
         BAL   WA,NQSTIMER          FOR 30 SECONDS,                     54930000
         L     R1,NQIOTTR            RESTORE SPIN IOT TRACK ADDRESS,    54932000
         SLR   NQIOT,NQIOT            SHOW NO IOT BUFFER,               54934000
         B     NQ320                   AND BR TO TRY AGAIN              54936000
         SPACE 1                                                     R4 54938000
NQ330   $BFRBLD (R1)               CONSTRUCT IOB WITHIN IOT BUFFER      54940000
         L     R1,NQIOTTR          RESTORE SPIN IOT TRACK ADDRESS       54942000
         EJECT                                                       R4 54944000
*********************************************************************** 54946000
*                                                                     * 54948000
*        R E A D   I N   S P I N   I O T                              * 54950000
*                                                                     * 54952000
*********************************************************************** 54954000
         SPACE 1                                                        54956000
         USING PDBDSECT,WA         PROVIDE PDDB ADDRESSABILITY          54958000
         SPACE 1                                                        54960000
NQ340    ST    NQIOT,PCEBUFAD      SET BUFFER ADDRESS FOR $EXCP         54962000
         BAL   WE,NQREAD            AND READ IN THE SPIN IOT            54964000
         LR    WA,NQIOT            POINT TO                          R4 54966000
         AL    WA,$IOTPDDB          DATA SET PDDB                    R4 54968000
         TM    PDBFLAG1,PDB1NULL+PDB1NSOT  IF DATASET NOT PRINTABLE,    54970000
         BNZ   NQ480                        BR TO GET NEXT SPIN IOT     54972000
         CLI   JQETYPE,$PURGE      IF JOB PURGING,                      54974000
         BE    NQ480                BR TO GET NEXT SPIN IOT             54976000
         LR    R0,NQ               GET OFFSET                        R4 54978000
         SL    R0,$JOBQPTR          OF JQE                           R4 54980000
         CL    R0,IOTJQOFF         IF DATA SET WAS UNALLOCATED,      R4 54982000
         BE    NQ345                BR TO SEARCH FOR JOE/HQR         R4 54984000
         TM    NQSTAT,NQRESTRT     IF JES2 RESTART,                  R4 54986000
         BO    NQ490                BR TO GET NEXT IOT               R4 54988000
         TM    JCTJOBFL,JCTNOJNL   IF JOB WAS JOURNALLED,            R4 54990000
         BZ    NQ480                BR TO ALLOCATE DATA SET'S TRACKS R4 54992000
         B     NQ470                 ELSE BR TO SPIN DATA SET        R4 54994000
         SPACE 1                                                        54996000
*********************************************************************** 54998000
*                                                                     * 55000000
*        T R Y   T O   F I N D   J O E   F O R   D A T A   S E T      * 55002000
*                                                                     * 55004000
*********************************************************************** 55006000
         SPACE 1                                                        55008000
         USING JOEDSECT,R1         PROVIDE JOE ADDRESSABILITY           55010000
         USING JOTDSECT,R14        PROVIDE JOT ADDRESSABILITY           55012000
         SPACE 1                                                        55014000
NQ345    L     R14,$JOTABLE        GET ADDRESS OF JOT                R4 55016000
         L     R0,IOTTRACK         GET TRACK ADDRESS FOR JOT SCAN       55018000
         SLR   R15,R15             INITIALIZE FOR JOT SCAN              55020000
         MVI   NQJOE,0             INDICATE NO JOE FOR DATA SET         55022000
         SPACE 1                                                        55024000
NQ350    LA    R15,2(,R15)         GET OFFSET OF NEXT CLASS QUEUE       55026000
         LA    R1,JOTRDYWQ-2-(JOENEXT-JOEDSECT)(R15) AND POINT TO IT R4 55028000
         SPACE 1                                                        55030000
NQ360    LH    R1,JOENEXT          GET OFFSET OF NEXT WORK JOE          55032000
         N     R1,=X'0000FFFF'     TEST FOR END OF CLASS QUEUE          55034000
         BNZ   NQ370               BR IF NO                             55036000
         C     R15,NQMAXQ          IF ANOTHER CLASS QUEUE,              55038000
         BL    NQ350                BR TO SCAN IT                       55040000
         B     NQ400                 ELSE BR TO TEST OUTPUT REQ'TS      55042000
         SPACE 1                                                        55044000
NQ370    SLL   R1,2                IF JOE                            R4 55046000
         ALR   R1,R14               DOESN'T REPRESENT                   55048000
         CL    R0,JOEIOTTR           CURRENT SPIN DATA SET              55050000
         BNE   NQ360                  BR TO TEST NEXT JOE               55052000
         EJECT                                                       R4 55054000
         TM    JOEFLAG,$JOEBUSY    IF DATA SET PRINTING/PUNCHING,       55056000
         BNZ   NQ400               BR TO TEST HOLD REQ'T                55058000
         SPACE 1                                                        55060000
*********************************************************************** 55062000
*                                                                     * 55064000
*        F O U N D   S P I N   J O E   F O R   D A T A   S E T        * 55066000
*                                                                     * 55068000
*********************************************************************** 55070000
         SPACE 1                                                        55072000
         TM    JQEFLAGS,QUEPURGE   IF JOB BEING KILLED,                 55074000
         BO    *+12                 BR TO REMOVE THE JOE                55076000
         TM    PDBFLAG1,PDB1PSO    IF JOT CURRENT,                      55078000
         BO    NQ380                BR TO TEST IOT VALIDITY             55080000
        $#REM  WORK=(R1)             ELSE REMOVE JOE FROM JOT        R4 55082000
         B     NQ400               THEN BR TO TEST HOLD REQ'T           55084000
         SPACE 1                                                        55086000
NQ380    MVI   NQJOE,255           INDICATE JOE EXISTS FOR DATA SET     55088000
         TM    PDBFLAG1,PDB1HOLD   IF IOT VALID,                        55090000
         BZ    NQ400                BR TO TEST HOLD REQ'T               55092000
         NI    PDBFLAG1,255-PDB1HOLD  ELSE INDICATE                     55094000
         OI    PDBFLAG1,PDB1PSO        DATA SET IN JOT                  55096000
         L     R1,IOTTRACK         GET IOT TRACK ADDRESS                55098000
         BAL   WE,NQWRITE           AND RE-WRITE THE IOT                55100000
         SPACE 1                                                        55102000
         DROP  R1,R14              KILL JOE, JOT ADDRESSABILITY      R4 55104000
         EJECT                                                          55106000
NQ400    TM    NQSTAT,NQRESTRT     IF WARM STARTING JES2,            R4 55108000
         BZ    NQ410                BR TO QUEUE SPIN/HOLD REQUEST    R4 55110000
         SPACE 1                                                        55112000
*********************************************************************** 55114000
*                                                                     * 55116000
*        R E S T A R T   - -   T E S T   S P I N / H O L D   Q U E    * 55118000
*                                                                     * 55120000
*********************************************************************** 55122000
         SPACE 1                                                        55124000
         L     R15,$SSVT           POINT TO SSVT                     R4 55126000
         LR    R0,NQ                        PREPARE                     55128000
         SL    R0,$JOBQPTR                   TO SCAN                    55130000
         LA    R14,$SVSPIOT-(IOTIOT-IOTDSECT) SPIN/HOLD              R4 55132000
         LH    R15,PDBDSKEY                    REQUEST QUEUE         R4 55134000
         ST    R15,PCER15          SAVE DATA SET NUMBER              R4 55136000
         L     R1,$IOTPDDB         PROVIDE OFFSET TO SPIN IOT PDDB   R4 55138000
         SPACE 1                                                        55140000
         DROP  WA                  KILL PDDB ADDRESSABILITY          R4 55142000
         USING IOTDSECT,R14        PROVIDE LOCAL IOT ADDRESSABILITY     55144000
         SPACE 1                                                        55146000
NQ405    ICM   R14,15,IOTIOT       IF END OF QUEUE,                     55148000
         BZ    NQ410                BR TO QUEUE SPIN/HOLD REQUEST    R4 55150000
         CL    R0,IOTJQOFF                  IF DATA SET                 55152000
         BNE   NQ405                         NOT REPRESENTED            55154000
         CH    R15,PDBDSKEY-PDBDSECT(R1,R14)  ON REQUEST QUEUE,      R4 55156000
         BNE   NQ405                           LOOP                     55158000
         B     NQ490                            ELSE GET NXT SPN IOT    55160000
         SPACE 1                                                        55162000
         DROP  R14                 KILL LOCAL IOT ADDRESSABILITY        55164000
         EJECT                                                          55166000
*********************************************************************** 55168000
*                                                                     * 55170000
*        T R Y   T O   F I N D   H Q R   F O R   D A T A   S E T      * 55172000
*                                                                     * 55174000
*********************************************************************** 55176000
         SPACE 1                                                        55178000
NQ410    TM    HQTFLAG1,HQT1HQT1   IF 1ST HQT IN STORAGE,            R4 55180000
         BO    NQ420                BR TO SCAN FOR HQR                  55182000
         TM    HQTFLAG1,HQT1CKPT   IF HQT NOT UPDATED,                  55184000
         BZ    SKIP80               BR TO AVOID CHECKPOINT           R4 55186000
         BAL   WE,NQHQTWR            ELSE RE-WRITE CURRENT HQT          55188000
SKIP80   L     R1,JCTHQT           POINT TO 1ST HQT FOR JOB             55190000
         ST    R1,NQHQTRK          SAVE HQT TRACK ADDRESS               55192000
         ST    NQHQT,PCEBUFAD      SET BUFFER ADDRESS FOR $EXCP         55194000
         BAL   WE,NQREAD            AND READ IN THE HQT                 55196000
         SPACE 1                                                        55198000
NQ420    LA    WA,HQTHQR-HQRLENG   PREPARE                              55200000
         L     R1,HQTHQRP           TO SCAN                             55202000
         ALR   R1,NQHQT              HQRS                               55204000
         LR    R15,NQIOT           POINT TO                          R4 55206000
         AL    R15,$IOTPDDB         PDDB                             R4 55208000
         LH    R0,PDBDSKEY-PDBDSECT(,R15)  GET DATA SET NUMBER       R4 55210000
         SPACE 1                                                        55212000
         USING HQRDSECT,WA         PROVIDE HQR ADDRESSABILITY           55214000
         SPACE 1                                                        55216000
NQ430    LA    WA,HQRLENG(,WA)     POINT TO NEXT HQR                    55218000
         CLR   WA,R1               IF END OF HQRS,                      55220000
         BE    NQ460                BR TO TEST FOR ANOTHER HQT          55222000
         CH    R0,PDBDSKEY-PDBDSECT+HQRPDDB  IF NOT OUR HQR,         R4 55224000
         BNE   NQ430                          LOOP                      55226000
         TM    HQRSTAT,HQRINUSE    IF DATA SET IN USE,                  55228000
         BNZ   NQ490                BR TO GET NEXT SPIN IOT             55230000
         TM    HQRSTAT,HQRUNHLD    IF DATA SET NO LONGER HELD,          55232000
         BO    NQ450                BR TO TEST SPIN REQ'T               55234000
         TM    PDBFLAG1-PDBDSECT(R15),PDB1HOLD+PDB1PSO  TEST PDDB    R4 55236000
         BNO   NQ440               BR IF SHOULD UNHOLD HQR              55238000
         TM    JQEFLAGS,QUEPURGE   IF JOB BEING KILLED,                 55240000
         BO    *+12                 BR TO UNHOLD THE DATA SET           55242000
         CLI   NQJOE,0             IF NO JOE FOR DATA SET,              55244000
         BE    NQ480                BR TO ALLOCATE ITS TRACKS           55246000
         NI    PDBFLAG1-PDBDSECT(R15),255-PDB1HOLD  ELSE UNHOLD      R4 55248000
         SPACE 1                                                        55250000
NQ440    OI    HQRSTAT,HQRUNHLD    SHOW DATA SET UN-HELD                55252000
         OI    HQTFLAG1,HQT1CKPT    AND FLAG HQT FOR CHECKPOINT         55254000
         LH    R0,JQEHLDCT            DECREMENT                         55256000
         N     R0,=A(X'FFFF'-QUEBUSY)  JOB                              55258000
         BZ    NQ450                    HOLD                            55260000
         LH    R0,JQEHLDCT               COUNT                          55262000
         SL    R0,=A(X'10')               (IF                           55264000
         STH   R0,JQEHLDCT                 NECESSARY)                   55266000
        $QCKPT (NQ)                THEN FORCE CHECKPOINT OF JQE         55268000
         EJECT                                                          55270000
         USING PDBDSECT,WA         PROVIDE PDDB ADDRESSABILITY       R4 55272000
         SPACE 1                                                     R4 55274000
NQ450    CLI   NQJOE,0             IF JOE EXISTS FOR DATA SET,          55276000
         BNE   NQ480                BR TO ALLOCATE ITS TRACKS           55278000
         LR    WA,NQIOT            POINT TO                          R4 55280000
         AL    WA,$IOTPDDB          DATA SET PDDB                    R4 55282000
         TM    PDBFLAG1,PDB1PSO    IF DATA SET SPUN/DELETED,         R4 55284000
         BZ    NQ480                BR TO ALLOCATE ITS TRACKS        R4 55286000
         TM    PDBFLAG1,PDB1HOLD   IF DATA SET SHOULD BE SPUN,       R4 55288000
         BZ    NQ470                BR TO SPIN IT                    R4 55290000
         MVC   IOTIOT,NQHOLDQ       ELSE ADD HOLD REQUEST               55292000
         ST    NQIOT,NQHOLDQ         TO TEMPORARY REQUEST QUEUE         55294000
         TM    IOTFLAG1,IOT1ALOC   IF NOT ALLOCATION IOT,               55296000
         BZ    *+8                  BR TO GET NEXT SPIN IOT             55298000
         BAL   WE,NQALLOC            ELSE ALLOCATE DATA SET'S TRACKS    55300000
         L     R1,IOTIOTTR         GET TRACK ADDR OF NEXT SPIN IOT      55302000
         SLR   NQIOT,NQIOT         INDICATE NO IOT BUFFER               55304000
         LTR   R1,R1               IF ANOTHER SPIN IOT,                 55306000
         BNZ   NQ320                BR TO READ IT IN                    55308000
         B     NQ500                 ELSE BR TO TEST FOR HOLD REQ'S     55310000
         SPACE 1                                                        55312000
NQ460    ICM   R1,15,HQTHQT        IF NO MORE HQTS,                     55314000
         BZ    NQ450                BR TO TEST SPIN/HOLD REQ'TS         55316000
         ST    R1,NQHQTRK            ELSE SAVE HQT TRACK ADDRESS        55318000
         ST    NQHQT,PCEBUFAD      SET BUFFER ADDRESS FOR $EXCP     R41 55319000
         BAL   WE,NQREAD           THEN READ IN THE HQT                 55320000
         B     NQ420                AND BR TO RESUME HQR SCAN           55322000
         SPACE 1                                                        55324000
NQ470    LR    R1,NQ               STORE                                55326000
         SL    R1,$JOBQPTR          JQE OFFSET                          55328000
         ST    R1,IOTJQOFF           IN SPIN IOT                        55330000
         NI    PDBFLAG1,255-PDB1PSO  INDICATE DATA SET ON            R4 55332000
         OI    PDBFLAG1,PDB1HOLD      SPIN QUEUE (NOT IN JOT)        R4 55334000
         MVC   IOTSPIOT,$UNSPUNQ   LIFO QUEUE IOT                       55336000
         L     R1,IOTTRACK          TO SPIN QUEUE                       55338000
         ST    NQIOT,PCEBUFAD        USING                              55340000
         BAL   WE,NQWRITE             'COMPARE AND SWAP'                55342000
         CLC   IOTSPIOT,$UNSPUNQ   IF QUEUE HEAD CHANGED,               55344000
         BNE   NQ470                BR TO REQUEUE IOT                   55346000
         MVC   $UNSPUNQ,IOTTRACK     ELSE UPDATE QUEUE HEAD             55348000
         LA    R1,1                   AND BUMP                          55350000
         AH    R1,JQEJOECT             JOE                              55352000
         STH   R1,JQEJOECT              COUNT                           55354000
        $QCKPT (NQ)                THEN FORCE CHECKPOINT OF JQE         55356000
         SPACE 1                                                     R4 55358000
         DROP WA                   KILL PDDB ADDRESSABILITY          R4 55360000
         EJECT                                                          55362000
NQ480    TM    IOTFLAG1,IOT1ALOC   IF NOT ALLOCATION IOT,               55364000
         BZ    *+8                  BR TO GET NEXT SPIN IOT             55366000
         BAL   WE,NQALLOC          ALLOCATE TRACKS IN IOT BIT MAP       55368000
         SPACE 1                                                        55370000
NQ490    ICM   R1,15,IOTIOTTR      IF ANOTHER SPIN IOT,                 55372000
         BNZ   NQ320                BR TO READ IT IN                    55374000
         SPACE 1                                                        55376000
*********************************************************************** 55378000
*                                                                     * 55380000
*        N O   M O R E   S P I N   I O T S                            * 55382000
*                                                                     * 55384000
*********************************************************************** 55386000
         SPACE 1                                                        55388000
         LH    R0,$BUFLENG         FREE                              R4 55390000
         ICM   R0,8,=AL1(231)       CURRENT                             55392000
         LR    R1,NQIOT              IOT                                55394000
         FREEMAIN R,LV=(0),A=(1)      BUFFER                            55396000
         SPACE 1                                                        55398000
NQ500    L     R15,$SSVT           POINT TO SSVT                     R4 55400000
         MVC   NQDBL(4),$SVHOLDQ   SAVE CURRENT HOLD QUEUE HEAD      R4 55402000
         XC    $SVHOLDQ,$SVHOLDQ   ZERO CURRENT HOLD QUEUE HEAD         55404000
         SPACE 1                                                        55406000
NQ505    ICM   NQIOT,15,NQHOLDQ    IF NO HOLD REQUESTS,                 55408000
         BZ    NQ510                BR TO TEST FOR HQT UPDATE           55410000
         TM    IOTFLAG1,IOT1NTPR   WAS IOT PROCESSED...        @OZ25953 55410100
         BZ    NQCNTOK             BR IF YES, DON'T COUNT TWICE@OZ25953 55410150
         ST    NQIOT,PCEBUFAD      SET BUFFER ADDR. FOR $EXCP  @OZ25953 55410200
        $BFRBLD (NQIOT)            BUILD IOB IN THE IOT        @OZ25953 55410250
         NI    IOTFLAG1,255-IOT1NTPR  RESET NOT PROCESSED FLAG @OZ25953 55410300
         L     R1,IOTTRACK         GET SEEK ADDRESS FOR $EXCP  @OZ25953 55410350
         BAL   WE,NQWRITE          RE-WRITE IOT                @OZ25953 55410400
         TM    BUFECBCC-BUFDSECT(NQIOT),X'7F'  GOOD WRITE...   @OZ25953 55410450
         BM    NQ505               BR IF NO, BAD IOT           @OZ25953 55410500
         LH    R1,JQEHLDCT           ELSE BUMP                          55412000
         AL    R1,=A(X'10')           HOLD                              55414000
         STH   R1,JQEHLDCT             COUNT                            55416000
        $QCKPT (NQ)                     AND FORCE CHECKPOINT OF JQE     55418000
NQCNTOK  DS    0H                                              @OZ25953 55419000
         L     R15,$SSVT           POINT TO SSVT                     R4 55420000
         MVC   NQHOLDQ,IOTIOT               THEN PREPARE TO             55422000
         LH    R0,IOTHQRCT                   QUEUE REQUEST TO           55424000
         LA    WA,$SVHOLDQ-(IOTIOT-IOTDSECT)  OFFICIAL HOLD RQST Q      55426000
         SPACE 1                                                        55428000
         LR    WE,WA                     LOCATE APPROPRIATE             55430000
         ICM   WA,15,IOTIOT-IOTDSECT(WE)  QUEUE POSITION                55432000
         BZ    *+12                        USING                        55434000
         CH    R0,IOTHQRCT-IOTDSECT(,WA)    ORDER OF                    55436000
         BH    *-14                          UNALLOCATION               55438000
         SPACE 1                                                        55440000
         ST    NQIOT,IOTIOT-IOTDSECT(,WE)  QUEUE NEW                    55442000
         ST    WA,IOTIOT                    HOLD REQUEST AND LOOP       55444000
         B     NQ505                         UNTIL ALL REQUESTS Q'D     55446000
         SPACE 1                                                        55448000
NQ510    LA    R1,$SVHOLDQ-(IOTIOT-IOTDSECT)  PREPARE TO SCAN QUEUE     55450000
         SPACE 1                                                        55452000
         LR    NQIOT,R1            CHAIN TO                             55454000
         ICM   R1,7,IOTIOT+1        END OF                              55456000
         BNZ   *-6                   HOLD QUEUE                         55458000
         SPACE 1                                                        55460000
         MVC   IOTIOT,NQDBL        ADD PRIOR ELEMENTS TO END OF Q       55462000
         EJECT                                                          55464000
*********************************************************************** 55466000
*                                                                     * 55468000
*        T E S T   L O C A L   H O L D   Q U E U E                    * 55470000
*                                                                     * 55472000
*********************************************************************** 55474000
         SPACE 1                                                        55476000
NQ515    TM    HQTFLAG1,HQT1CKPT   IF HQT NOT UPDATED,                  55478000
         BZ    *+8                  BR TO AVOID CHECKPOINT              55480000
         BAL   WE,NQHQTWR            ELSE RE-WRITE CURRENT HQT          55482000
         L     R15,$SSVT           POINT TO SSVT                     R4 55484000
         ICM   NQIOT,15,$SVHOLDQ   IF NO                                55486000
         BZ    NQ530                REMAINING                           55488000
         LR    R1,NQ                 HOLD REQUESTS                      55490000
         SL    R1,$JOBQPTR            FOR                               55492000
         CL    R1,IOTJQOFF             CURRENT JOB,                     55494000
         BNE   NQ530                    BR TO READ 1ST REGULAR IOT      55496000
         MVC   NQDBL(1),JQEHQLOK     ELSE SAVE CURRENT                  55498000
         NI    NQDBL,QUEBUSY          JOB HOLD QUEUE LOCK               55500000
         NI    JQEHQLOK,255-QUEBUSY    AND REMOVE LOCK FROM JQE         55502000
        $QCKPT (NQ)                FORCE CHECKPOINT OF JQE              55504000
         L     R1,$HOLDPCE         GET HOLD QUEUE PROCESSOR PCE ADDR R4 55506000
        $POST  (R1),WORK            AND WAKE HIM UP                     55508000
         SPACE 1                                                        55510000
NQ520   $WAIT  ABIT                $WAIT A LITTLE WHILE                 55512000
        $QSUSE                     REQUEST ACCESS TO CHECKPOINT DATA    55514000
         TM    JQEHQLOK,QUEBUSY    IF LOCK STILL HELD,                  55516000
         BNZ   NQ520                BR TO $WAIT SOME MORE               55518000
         OC    JQEHQLOK,NQDBL        ELSE GRAB THE LOCK                 55520000
        $QCKPT (NQ)                   AND FORCE CKPT OF JQE             55522000
         B     NQ515               THEN BR TO RETEST FOR HOLD REQ'S     55524000
         EJECT                                                       R4 55526000
*********************************************************************** 55528000
*                                                                     * 55530000
*        P R O C E S S   1 S T   R E G U L A R   I O T                * 55532000
*                                                                     * 55534000
*********************************************************************** 55536000
         SPACE 1                                                     R4 55538000
NQ530    LTR   NQSE,NQSE           IF NODAL WARM START,              R4 55540000
         BZ    NQ540                BR TO READ 1ST REGULAR IOT          55542000
         TM    JQEFLAGS,QUEBUSY    IF JOB                               55544000
         BZ    NQ610                NOT                                 55546000
         IC    R0,JQEFLAGS           ACTIVE ON                          55548000
         N     R0,=A(QUEBUSY)         WARM STARTED                      55550000
         CLM   R0,1,QSESIBSY           SYSTEM,                          55552000
         BNE   NQ640                    BR TO TEST NEXT JQE             55554000
         SPACE 1                                                     R4 55556000
NQ540    L     NQIOT,NQIOTBF       GET BUFFER ADDRESS FOR IOT           55558000
         ST    NQIOT,PCEBUFAD      SET BUFFER ADDRESS FOR $EXCP         55560000
         L     R1,JCTIOT           GET TRK ADDR OF 1ST REGULAR IOT      55562000
         BAL   WE,NQREAD            READ IT IN AND                      55564000
         BAL   WE,NQALLOC            ALLOCATE ITS DATA SETS' TRACKS     55566000
         TM    JQETYPE,$XEQ        IF BEYOND EXECUTION,                 55568000
         BZ    NQ590                BR TO REQUEUE THE JOB               55570000
         CLI   JQETYPE,$XEQ        IF JOB IN OR AWAITING CONVERSION,    55572000
         BE    NQ590                BR TO REQUEUE THE JOB               55574000
         TM    NQSTAT,NQRESTRT     IF RESTARTING JES2,               R4 55576000
         BO    NQ590                BR TO ISSUE 'WAS EXECUTING' MSG     55578000
         L     WE,$IOTPDDB           POINT TO                        R4 55580000
         LA    WE,IOTPDBOJ(WE,NQIOT)  JCL DATA SET PDDB              R4 55582000
         TM    PDBFLAG1-PDBDSECT(WE),PDB1NULL  TEST JCL FILE         R4 55584000
         BZ    NQ550               BR IF JCL STILL ALLOCATED            55586000
         OC    PDBMTTR-PDBDSECT(,WE),PDBMTTR-PDBDSECT(WE)            R4 55588000
         BZ    NQ550               BR IF NO JCL FILE (REQ JOB ID)       55590000
         LA    R1,NQTERM           SET 'WAS TERMINATING' MSG         R4 55592000
         BAL   WE,NQWTO             AND INFORM THE OPERATOR             55594000
         B     NQ585               THEN BR TO RE-QUEUE JOB           R4 55596000
         SPACE 1                                                        55598000
NQ550    TM    JQEFLAGS,QUEBUSY    IF JOB AWAITING EXECUTION,           55600000
         BZ    NQ640                BR TO TEST NEXT JQE                 55602000
         LA    R1,NQEXEC           SET 'WAS EXECUTING' MSG           R4 55604000
         BAL   WE,NQWTO             AND INFORM THE OPERATOR          R4 55606000
         MVI   JCTJSFLG,SSJSWARM   SET WARM START BIT                R4 55608000
         TM    JCTJOBFL,JCTNOJNL   IF JOB WAS JOURNALLED,            R4 55610000
         BZ    NQ580                BR TO RE-WRITE THE JCT           R4 55612000
         TM    JCTJOBFL,JCTRSTRT   IF JOB NOT RESTARTABLE,           R4 55614000
         BZ    NQ585                BR TO RE-QUEUE FOR OUTPUT        R4 55616000
         OI    JCTJBOPT,JCTRERUN   INDICATE RE-RUN REQUEST          R41 55617000
         MVI   JCTJSFLG,0          RESET RESTART FLAGS               R4 55618000
         XC    JCTJSSTP,JCTJSSTP    AND RESTART STEP IN JCT          R4 55620000
         XC    JCTLINES,JCTLINES   RESET LINE COUNT            @OZ29915 55620100
         XC    JCTPUNCH,JCTPUNCH   RESET PUNCH OUTPUT COUNT    @OZ29915 55620200
         XC    JCTXOUT,JCTXOUT     RESET TOTAL OUTPUT COUNT    @OZ29915 55620300
         EJECT                                                       R4 55622000
*********************************************************************** 55624000
*                                                                     * 55626000
*        RE-QUEUE NON-JOURNALLED RESTARTABLE JOB FOR RE-EXECUTION     * 55628000
*                                                                     * 55630000
*********************************************************************** 55632000
         SPACE 1                                                     R4 55634000
NQ555    LH    R0,JCTPDDBO         GET DD NUMBER OF 1ST OUTPUT PDDB  R4 55636000
         L     R1,$IOTPDDB         GET OFFSET OF 1ST PDDB IN IOT     R4 55638000
         SPACE 1                                                     R4 55640000
NQ560    CL    R1,IOTPDDBP         IF NO MORE PDDBS IN THIS IOT,     R4 55642000
         BNL   NQ570                BR TO TEST FOR ANOTHER IOT       R4 55644000
         CH    R0,PDBDSKEY-PDBDSECT(R1,NQIOT)  1ST OUTPUT PDDB...    R4 55646000
         BL    NQ565               BR IF YES (NO SYSIN DDS).   @OZ26726 55647000
         LA    R1,PDBLENG(,R1)     POINT TO NEXT PDDB IN ANY CASE    R4 55648000
         BH    NQ560               BR IF NOT LAST DD * / DATA  @OZ26726 55650000
NQ565    DS    0H                                              @OZ26726 55651000
         ST    R1,IOTPDDBP         RESET OFFSET IN IOT               R4 55652000
         XC    IOTIOTTR,IOTIOTTR   TRUNCATE IOT CHAIN                R4 55654000
         L     R1,IOTTRACK         GET TRACK ADDRESS OF IOT          R4 55656000
         BAL   WE,NQWRITE           AND RE-WRITE IT                  R4 55658000
         B     NQ580               THEN BR TO RE-WRITE THE JCT       R4 55660000
         SPACE 1                                                     R4 55662000
NQ570    ICM   R1,15,IOTIOTTR      GET TRACK ADDRESS OF NEXT IOT     R4 55664000
         BZ    NQ580               BR IF END OF IOT CHAIN            R4 55666000
         BAL   WE,NQREAD            ELSE READ IN THE IOT             R4 55668000
         B     NQ555                 AND RESUME SEARCH               R4 55670000
         SPACE 1                                                     R4 55672000
NQ580    ST    NQJCT,PCEBUFAD      SET BUFFER ADDRESS FOR $EXCP      R4 55674000
         L     R1,JQETRAK          GET TRACK ADDRESS OF JCT          R4 55676000
         BAL   WE,NQWRITE           AND RE-WRITE THE JCT             R4 55678000
         LA    R1,NQREQU           POINT TO 'JOB REQUEUED' MSG       R4 55680000
         BAL   WE,NQWTO             AND INFORM THE OPERATOR          R4 55682000
         TM    JCTJOBFL,JCTNOJNL   IF JOB WAS JOURNALLED,            R4 55684000
         BZ    NQ595                BR TO SET SYSTEM AFFINITY        R4 55686000
         BAL   WE,NQRELSE          RELEASE ANY DUPLICATE JOBS        R4 55688000
         B     NQ600               BR TO RE-QUEUE JOB FOR EXECUTION  R4 55690000
         EJECT                                                       R4 55692000
NQ585    BAL   WE,NQRELSE          RELEASE ANY DUPLICATE JOBS        R4 55694000
         CLC   JQEJOBNO,=H'10000'  IF BATCH JOB,                        55696000
         BL    *+8                  BR AROUND NEXT INSTRUCTION          55698000
         NI    JQEFLAG2,255-QUEINIT  ELSE RESET INIT BIT                55700000
         LA    R0,1*16             STARTING PRIORITY = 1       @OZ27492 55700200
         TM    JCTJBOPT,JCTPRICD   /*PRIORITY, OR 'PRTY='...   @OZ27492 55700400
         BNO   NQ588               BRANCH IF NOT, USE '1'      @OZ27492 55700600
         CLI   JQEPRIO,13*16       CHECK FOR HIGH PRIORITY     @OZ27492 55700800
         BL    NQ588               BRANCH IF NOT, USE '1'      @OZ27492 55701000
         LA    R0,15*16            RESET PRIORITY TO MAX       @OZ27492 55701200
NQ588    DS    0H                                              @OZ27492 55701400
         STC   R0,JQEPRIO          SET NEW PRIORITY IN JQE     @OZ27492 55701600
        $QPUT  (NQ),$OUTPUT        THEN REQUEUE JOB FOR OUTPUT          55702000
         B     NQ640               THEN BR TO TEST NEXT JQE             55704000
         SPACE 1                                                     R4 55706000
NQ590    TM    JQEFLAGS,QUEBUSY    IF JOB NOT ACTIVE,                   55708000
         BZ    NQ610                BR TO TEST JOB FOR PURGE            55710000
         TM    JQETYPE,$XEQ        IF JOB                               55712000
         BZ    NQ600                NOT IN                              55714000
         CLI   JQETYPE,$XEQ          EXECUTION,                         55716000
         BE    NQ600                  BR TO REQUEUE JOB                 55718000
         LA    R1,NQEXEC           SET 'WAS EXECUTING' MSG           R4 55720000
         BAL   WE,NQWTO             AND INFORM THE OPERATOR             55722000
         TM    NQSTAT,NQRESTRT     IF RESTARTING JES2,               R4 55724000
         BO    NQ640                BR TO TEST NEXT JQE                 55726000
         SPACE 1                                                     R4 55728000
NQ595    NI    JQEFLAG2,255-QUESYSAF  ENSURE                         R4 55730000
         IC    R1,JQEFLAGS             JOB                           R4 55732000
         N     R1,=A(QUEBUSY)           RE-EXECUTED                     55734000
         LA    R1,NQSYSAF(R1)            ON SAME                        55736000
         OC    JQEFLAG2,0(R1)             SYSTEM                        55738000
         BAL   WE,NQRELSE          THEN RELEASE ANY DUPLICATE JOBS      55740000
         EJECT                                                       R4 55742000
NQ600    IC    R0,JQETYPE          REQUEUE THE JOB                      55744000
        $QPUT  (NQ),(R0)            FOR CURRENT PHASE                   55746000
         SPACE 1                                                        55748000
NQ610    LH    R0,JQEHLDCT         GET CURRENT                          55750000
         SRL   R0,4                 HOLD COUNT                          55752000
         AH    R0,JQEJOECT           AND ADD TO IT THE JOE COUNT        55754000
         BNZ   NQ640               BR IF SUM IS NOT ZERO                55756000
         CLI   JQETYPE,$HARDCPY    TEST FOR HARDCPY PHASE               55758000
         BNE   NQ640               BR IF NO TO TEST NEXT JQE            55760000
         SPACE 1                                                        55762000
NQ620    NI    JQEFLAGS,255-QUEOPCAN-QUEPURGE  RESET FLAGS           R4 55764000
        $QPUT  (NQ),$PURGE         REQUEUE JOB FOR PURGE             R4 55766000
         SPACE 1                                                        55768000
*********************************************************************** 55770000
*                                                                     * 55772000
*        G E T   N E X T   J O B   Q U E U E   E N T R Y              * 55774000
*                                                                     * 55776000
*********************************************************************** 55778000
         SPACE 1                                                        55780000
NQ640    NI    JQEHQLOK,255-QUEBUSY  REMOVE JOB HOLD QUEUE LOCK         55782000
        $QCKPT (NQ)                   AND FORCE CHECKPOINT OF JQE       55784000
         SPACE 1                                                    R41 55785000
NQ650    LA    NQ,NQCHAIN-QUECHAIN PREPARE TO PROCESS NEXT JQE      R41 55786000
         LTR   NQSE,NQSE           IF NODAL WARM START,              R4 55788000
         BZ    NQ210                BR TO TEST NEXT JQE                 55790000
         B     NQ200                 ELSE BR TO RE-SCAN JOB QUEUE       55792000
         SPACE 1                                                        55794000
NQ660    L     NQ,NQQUEUE          IF END OF                         R4 55796000
         S     NQ,=F'2'             ACTIVE JOB QUEUES,                  55798000
         BZ    NQ670                 BR TO TERMINATE WARM START     R41 55800000
         ST    NQ,NQQUEUE             ELSE PREPARE TO PROCESS           55802000
         LA    NQ,$JQHEADS-2-QUECHAIN(NQ)  NEXT JOB QUEUE               55804000
         B     NQ210               THEN BR TO DO IT                     55806000
         EJECT                                                      R41 55807000
*********************************************************************** 55807100
*                                                                     * 55807200
*    IF NODAL WARMSTART, RE-ALLOCATE OLD NEWS TRACKS, IF REQUIRED     * 55807300
*                                                                     * 55807400
*********************************************************************** 55807500
         SPACE 1                                                    R41 55807600
NQ670    LTR   NQSE,NQSE           SINGLE SYSTEM WARM START...      R41 55807700
         BNZ   NQ700               EXIT IF YES                      R41 55807800
         OC    $NEWSIOT,$NEWSIOT   SEE IF 'OLD NEWS' EXISTS,        R41 55807900
         BZ    NQ700                 EXIT IF NOT                    R41 55808000
         OC    $NEWNEWS,$NEWNEWS   'NEW NEWS' SPECIFIED AT INIT...  R41 55808100
         BNZ   NQ700                 ALLOW OLD NEWS TO VANISH IF SO R41 55808200
         SPACE 1                                                    R41 55808300
*        NODAL WARM START, NO NEW NEWS -- RE-ALLOCATE OLD NEWS TRACKS   55808400
         SPACE 1                                                    R41 55808500
         L     NQIOT,NQIOTBF       POINT TO BUFFER WITH IOT REG     R41 55808600
         ST    NQIOT,PCEBUFAD      SET BUFFER ADDR FOR READ         R41 55808700
         MVI   PCEDEVTP,PCEDARD    SET DA DCT TO 'READ'             R41 55808800
         MVC   PCESEEK,$NEWSIOT    SET SEEK ADDRESS FOR READ        R41 55808900
         LA    R1,PCEDADCT         POINT TO DA DCT                  R41 55809000
        $EXCP  (R1),WAIT=YES       READ IN IOT, WAIT FOR COMPLETION R41 55809100
         BNO   NQNEWSX1            BRANCH IF READ ERROR             R41 55809200
         CLC   NQNIOTKY,IOTJBKEY   VALIDATE 'JOB' KEY               R41 55809300
         BE    NQ680               BRANCH IF NEWS IOT               R41 55809400
         SPACE 1                                                    R41 55809500
NQNEWSX1 $DISTERR                  INDICATE CONTROL BLOCK ERROR     R41 55809600
        $QSUSE                     OBTAIN CONTROL OF QUEUES         R41 55809700
         XC    $NEWSIOT(8),$NEWSIOT CLEAR OUT HCT POINTERS IF ERROR R41 55809800
        $POST  $HASPECF,CKPT       FORCE CHECKPOINT                 R41 55809900
         B     NQ700               EXIT FROM NEWS PROCESSING        R41 55810000
         SPACE 1                                                    R41 55810100
NQ680    BAL   WE,NQALLOC          ALLOCATE OLD NEWS' TRACKS AGAIN  R41 55810200
         B     NQ700               EXIT FROM NEWS PROCESSING        R41 55810300
         TITLE 'HASP JOB QUEUE WARM START -- SUPPORT ROUTINES'          55810400
*********************************************************************** 55810500
*                                                                     * 55812000
*        $ W A I T   P R O C E S S O R   F O R   N   S E C O N D S    * 55814000
*                                                                     * 55816000
*                                                                     * 55818000
*              TIME INTERVAL PROVIDED IN R0                           * 55820000
*              RETURN CODE N/A                                        * 55822000
*                                                                     * 55824000
*********************************************************************** 55826000
         SPACE 3                                                        55828000
         CNOP  0,8                                                      55830000
NQSTIMER LA    R1,NQTQE            POINT TO PROCESSOR TQE               55832000
         ST    R0,ITIME(,R1)       STORE TIME INTERVAL                  55834000
         ST    SAVE,IPOST(,R1)     SET POST ADDRESS IN TQE              55836000
        $STIMER (R1)               ISSUE STIMER                         55838000
        $WAIT  WORK                $WAIT FOR INTERVAL TO ELAPSE         55840000
         BR    WA                  THEN RETURN                          55842000
         EJECT                                                          55844000
*********************************************************************** 55846000
*                                                                     * 55848000
*        R E A D / W R I T E   A   C T L   B L O C K                  * 55850000
*                                                                     * 55852000
*                                                                     * 55854000
*              SEEK ADDRESS PROVIDED IN R1                            * 55856000
*                                                                     * 55858000
*********************************************************************** 55860000
         SPACE 1                                                     R4 55862000
NQREAD   MVI   PCEDEVTP,PCEDARD    INDICATE READ OPERATION              55864000
         B     NQEXCP               AND GO DO IT                        55866000
         SPACE 1                                                        55868000
NQHQTWR  NI    HQTFLAG1,255-HQT1CKPT  RESET CHECKPOINT FLAG             55870000
         ST    NQHQT,PCEBUFAD      SET BUFFER ADDRESS FOR $EXCP         55872000
         L     R1,NQHQTRK          LOAD HQT TRACK ADDRESS               55874000
         SPACE 1                                                        55876000
NQWRITE  MVI   PCEDEVTP,PCEDAWR    INDICATE WRITE OPERATION             55878000
         SPACE 1                                                        55880000
NQEXCP   ST    R1,PCESEEK          SET SEEK ADDRESS FOR $EXCP           55882000
         LA    R1,PCEDADCT         GET DIRECT ACCESS DCT ADDRESS        55884000
        $EXCP  (R1),WAIT=YES        AND READ/WRITE CTL BLOCK         R4 55886000
        $QSUSE                     REQUEST ACCESS TO CHECKPOINT DATA    55888000
         TM    BUFECBCC-BUFDSECT(R1),X'7F'  RE-TEST I/O COMPLETION      55890000
         BM    NQDSTER             BR IF READ/WRITE ERROR            R4 55892000
         CLR   R1,NQIOT            IF IOT READ WRITE,                   55894000
         BE    NQCKIOT              BR TO TEST IOT VALIDITY             55896000
         CLR   R1,NQHQT            IF HQT READ/WRITE,                   55898000
         BE    NQCKHQT              BR TO TEST HQT VALIDITY             55900000
         L     R0,JCTJQE             ELSE                               55902000
         AL    R0,$JOBQPTR            VALIDATE                          55904000
         CLR   R0,NQ                   JCT                              55906000
         BER   WE                  RETURN IF NO ERROR                   55908000
         B     NQDSTER              ELSE BR TO ISSUE ERROR MSG      R41 55910000
         SPACE 1                                                        55912000
NQCKHQT  CLC   HQTJBKEY,JCTJBKEY   IF NOT VALID HQT,                    55914000
         BNE   NQDSTER              BR TO ISSUE ERROR MSG           R41 55916000
         CLC   HQTID,=CL4'HQT'     IF NOT DUMMY HQT,                    55918000
         BER   WE                   RETURN                              55920000
         B     NQHQTCK               ELSE BR TO PREPARE EMPTY HQT       55922000
         SPACE 1                                                        55924000
NQCKIOT  CLC   IOTJBKEY,JCTJBKEY   IF VALID IOT,                        55926000
         BER   WE                   RETURN                           R4 55928000
         EJECT                                                          55930000
*********************************************************************** 55932000
*                                                                     * 55934000
*        I/O ERROR READING/WRITING CONTROL BLOCK                      * 55936000
*                                                                     * 55938000
*********************************************************************** 55940000
         SPACE 1                                                     R4 55942000
NQDSTER $DISTERR                   ISSUE DISASTEROUS ERROR MSG          55948000
        $QSUSE                     REQUEST ACCESS TO CKPT DATA      R41 55949000
         CLI   PCEDEVTP,PCEDAWR    IF WRITE ERROR,                      55950000
         BER   WE                   RETURN                              55952000
         CL    NQJCT,PCEBUFAD      IF NOT THE JCT,                      55954000
         BNE   NQHQTCK              BR TO TEST FOR HQT                  55956000
         XC    JQEHLDCT,JQEHLDCT   CLEAR HOLD COUNT                     55958000
         OI    JQEFLAGS,QUEPURGE+QUEOPCAN  FLAG JOB FOR PURGE           55960000
        $QCKPT (NQ)                         AND FORCE CKPT OF JQE       55962000
        $#CAN  JQE=(NQ)            KILL ANY JOES NOT BUSY               55964000
         TM    JQEFLAGS,QUEBUSY    IF JOB NOT ACTIVE,                   55966000
         BZ    NQ610                BR TO TEST NEXT JQE                 55968000
         LTR   NQSE,NQSE           IF NODAL WARM START,              R4 55970000
         BZ    NQ590                BR TO REQUEUE THE JOB               55972000
         IC    R0,JQEFLAGS         IF JOB                               55974000
         N     R0,=A(QUEBUSY)       ACTIVE ON                           55976000
         CLM   R0,1,QSESIBSY         WARM STARTED SYSTEM,               55978000
         BE    NQ590                  BR TO REQUEUE THE JOB             55980000
         B     NQ640                   ELSE BR TO TEST NEXT JQE         55982000
         EJECT                                                       R4 55984000
NQHQTCK  CL    NQHQT,PCEBUFAD      IF NOT AN HQT,                       55986000
         BNE   NQBADIOT             BR TO PROCESS IOT ERROR             55988000
         MVI   HQTFLAG1,HQT1HQT1     ELSE                               55990000
         LA    R0,HQTHQR-HQTDSECT     INITIALIZE                        55992000
         ST    R0,HQTHQRP              TO LOOK LIKE                     55994000
         XC    HQTHQT,HQTHQT            EMPTY HQT                       55996000
         BR    WE                  THEN RETURN                          55998000
         SPACE 1                                                        56000000
NQBADIOT CLC   NQIOTBF,PCEBUFAD    TEST FOR SPIN IOT                    56002000
         BNE   NQSPIOT             BR IF SO                             56004000
         LA    R0,IOTTGMAP+TGMAP-TGMDSECT  ELSE POINT TO IOT BIT MAP R4 56006000
         L     R1,$CYLMAPL         CLEAR                             R4 56008000
         SLR   R15,R15              IOT                              R4 56010000
         MVCL  R0,R14                BIT MAP                         R4 56012000
         L     R1,$IOTPDDB         POINT TO                          R4 56014000
         ALR   R1,NQIOT             JCL DATA SET PDDB                R4 56016000
         NI    PDBFLAG1-PDBDSECT+IOTPDBOJ(R1),255-PDB1NULL SHOW NULL R4 56018000
         BR    WE                  THEN RETURN                          56020000
         SPACE 1                                                        56022000
NQSPIOT  XC    IOTIOTTR,IOTIOTTR   SHOW END OF SPIN IOT CHAIN           56024000
         MVI   IOTFLAG1,0          PREVENT TRACK ALLOCATION             56026000
         L     R1,$IOTPDDB         POINT TO                          R4 56028000
         ALR   R1,NQIOT             SPIN DATA SET PDDB               R4 56030000
         OI    PDBFLAG1-PDBDSECT(R1),PDB1NSOT  PREVENT SPIN/HOLD     R4 56032000
         BR    WE                  THEN RETURN                          56034000
         EJECT                                                          56036000
*********************************************************************** 56038000
*                                                                     * 56040000
*        I S S U E   $ W T O   M E S S A G E                          * 56042000
*                                                                     * 56044000
*********************************************************************** 56046000
         SPACE 1                                                        56048000
NQWTO    MVC   NQMSG,0(R1)         MOVE MESSAGE TO WORK AREA         R4 56050000
         LH    R0,JQEJOBNO         CONVERT HASP JOB NUMBER              56052000
         CVD   R0,NQDBL             TO PACKED DECIMAL                   56054000
         CH    R0,=H'10000'        IF BATCH JOB,                        56056000
         BL    NQMVO                BR TO ISSUE MESSAGE                 56058000
         MVC   NQMSGID,=C'STC'     ASSUME STARTED TASK               R4 56060000
         CH    R0,=H'20000'        IF STARTED TASK,                     56062000
         BL    NQMVO                BR TO ISSUE MESSAGE                 56064000
         MVC   NQMSGID,=C'TSU'     MUST BE LOGON                     R4 56066000
         SPACE 1                                                        56068000
NQMVO    MVO   NQDBL(4),NQDBL+4(4)  OFFSET NUMBER BY 1                  56070000
         MVC   NQJOBNR,NQEDMSK     EDIT HASP JOB NUMBER                 56072000
         ED    NQJOBNR,NQDBL+1      INTO MESSAGE                        56074000
         SLR   R0,R0               PICK UP                              56076000
         IC    R0,NQMSGLN           MESSAGE LENGTH                      56078000
        $WTO   NQMSGST,(R0),JOB=NO,ROUTE=$LOG+$MAIN,   ISSUE MESSAGE R4C56080000
               PRI=$ST,CLASS=$ALWAYS,WAIT=YES           TO OPERATOR     56082000
        $QSUSE                     REQUEST ACCESS TO CHECKPOINT DATA    56084000
         SPACE 1                                                        56086000
         BR    WE                  THEN RETURN                          56088000
         EJECT                                                          56090000
*********************************************************************** 56092000
*                                                                     * 56094000
*        L O C A T E   S J B   F O R   E X E C U T I N G   J O B      * 56096000
*                                                                     * 56098000
*********************************************************************** 56100000
         SPACE 1                                                        56102000
         USING SJBDSECT,WA         PROVIDE SJB ADDRESSABILITY           56104000
         SPACE 1                                                        56106000
NQSJBLOC LH    R0,JQEJOBNO         GET JOB NUMBER                       56108000
         CVD   R0,PCER1             AND CONSTRUCT                       56110000
         MVO   PCER1,PCER1+4         SJB-FORM                           56112000
         MVC   NQDBL+3(5),NQEDMSK     JES2                              56114000
         ED    NQDBL+3(5),PCER1+1      JOB ID                        R4 56116000
         L     R15,$SSVT           POINT TO SSVT                     R4 56118000
         MVC   NQDBL(3),=C'JOB'    ASSUME BATCH JOB                     56120000
         CH    R0,=H'10000'        IF BATCH JOB,                        56122000
         BL    NQJOB                BR TO SEARCH FOR SJB                56124000
         MVC   NQDBL(3),=C'STC'    ASSUME STARTED TASK                  56126000
         CH    R0,=H'20000'        IF STARTED TASK,                     56128000
         BL    *+10                 BR TO SEARCH FOR SJB                56130000
         MVC   NQDBL(3),=C'TSU'    MUST BE LOGON                        56132000
         MVC   PCER1(8),NQDBL      CONSTRUCT ALTERNATIVE FORM           56134000
         OC    PCER1+3(5),=C'00000' OF JOB ID                           56136000
         LA    WA,$SVJTERM-(SJBXQCHN-SJBDSECT)  TERMINATION QUEUE       56138000
         BAL   R14,NQSJBLUP        TRY TO LOCATE SJB ON ABOVE QUEUE     56140000
         LA    WA,$SVJXNUM-(SJBXQCHN-SJBDSECT)  IN XEQ-BY-NUM Q         56142000
         BAL   R14,NQSJBLUP        TRY TO LOCATE SJB ON ABOVE QUEUE     56144000
         LA    WA,$SVJPNUM-(SJBXQCHN-SJBDSECT)  PENDING XEQ-BY-NUM Q    56146000
         BAL   R14,NQSJBLUP        TRY TO LOCATE SJB ON ABOVE QUEUE     56148000
         LA    WA,$SVJRENQ-(SJBXQCHN-SJBDSECT)  PENDING RE-ENQUEUE Q    56150000
         BAL   R14,NQSJBLUP        TRY TO LOCATE SJB ON ABOVE QUEUE     56152000
         BR    WE                  RETURN HERE IF SJB NOT FOUND         56154000
         SPACE 1                                                        56156000
NQJOB    MVC   PCER1(8),NQDBL      CONSTRUCT ALTERNATIVE FORM           56158000
         OC    PCER1+3(5),=C'00000' OF JOB ID                           56160000
         LA    WA,$SVJTERM-(SJBXQCHN-SJBDSECT)  TERMINATION QUEUE       56162000
         BAL   R14,NQSJBLUP        TRY TO LOCATE SJB ON ABOVE QUEUE     56164000
         LA    WA,$SVJXCLS-(SJBXQCHN-SJBDSECT)  IN XEQ-BY-CLS Q         56166000
         BAL   R14,NQSJBLUP        TRY TO LOCATE SJB ON ABOVE QUEUE     56168000
         LA    WA,$SVJRENQ-(SJBXQCHN-SJBDSECT)  PENDING RE-ENQUEUE Q    56170000
         BAL   R14,NQSJBLUP        TRY TO LOCATE SJB ON ABOVE QUEUE     56172000
         BR    WE                  RETURN HERE IF SJB NOT FOUND         56174000
         SPACE 1                                                        56176000
NQSJBLUP ICM   WA,15,SJBXQCHN      IF END OF SJB CHAIN,                 56178000
         BZR   R14                  RETURN                              56180000
         CLC   SJBJOBID,NQDBL      IF CURRENT JOB,                      56182000
         BER   WE                  RETURN IF SO WITH SJB                56184000
         CLC   SJBJOBID,PCER1        ELSE TEST ALTERNATE FORM           56186000
         BNE   NQSJBLUP            BR IF NO TO TEST NEXT SJB            56188000
         BR    WE                   ELSE RETURN HERE WITH SJB           56190000
         EJECT                                                          56192000
*********************************************************************** 56194000
*                                                                     * 56196000
*        S U B R O U T I N E   T O   A L L O C A T E   T R A C K S    * 56198000
*                                                                     * 56200000
*********************************************************************** 56202000
         SPACE 1                                                        56204000
NQALLOC  LTR   NQSE,NQSE           IF NOT NODAL WARM START,          R4 56206000
         BNZR  WE                   IGNORE ALLOCATE REQUEST             56208000
         ST    WE,NQTQE            SAVE RETURN ADDRESS               R4 56210000
         LA    WE,IOTTGMAP+TGMAP-TGMDSECT  POINT TO IOT TRK GRP MAP  R4 56212000
         LR    R0,WE               MOVE                              R4 56214000
         L     R1,$CYLMAPL          IOT                              R4 56216000
         L     R14,NQCYLMAP          TRACK GROUP MAP                 R4 56218000
         LR    R15,R1                 TO                             R4 56220000
         MVCL  R14,R0                  WORK AREA                     R4 56222000
         L     R0,$CYLMAPL         RESET BITS                        R4 56224000
         L     R15,$TGMAP           IN IOT                           R4 56226000
        $VFL   NC,(WE),(R15),(R0)    TRACK GROUP MAP                 R4 56228000
         L     R0,$CYLMAPL         REMOVE BITS                       R4 56230000
         L     R1,$TGMAP            FROM MASTER                      R4 56232000
        $VFL   XC,(R1),(WE),(R0)     TRACK GROUP MAP                 R4 56234000
         L     R14,NQCYLMAP        TEST                              R4 56236000
         L     R15,$CYLMAPL         RESULTING                        R4 56238000
         LR    R0,WE                 IOT                             R4 56240000
         LR    R1,R15                 TRACK GROUP MAP                R4 56242000
         CLCL  R14,R0                  VALIDITY                      R4 56244000
         L     WE,NQTQE            RESTORE RETURN ADDRESS            R4 56246000
         BER   WE                  RETURN IF ALLOCATION SUCCESSFUL   R4 56248000
         LA    R1,NQIBAD             ELSE POINT TO 'BAD IOT' MSG     R4 56250000
         BAL   WE,NQWTO               AND INFORM THE OPERATOR           56252000
         L     R1,IOTTRACK         GET TRACK ADDRESS OF IOT             56254000
         L     WE,NQTQE            RESTORE RETURN ADDRESS               56256000
         ST    NQIOT,PCEBUFAD      SET BUFFER ADDRESS FOR $EXCP     R41 56257000
         B     NQWRITE             THEN RE-WRITE IOT AND RETURN         56258000
         EJECT                                                          56260000
*********************************************************************** 56262000
*                                                                     * 56264000
*        R E L E A S E   A N Y   D U P L I C A T E   J O B S          * 56266000
*                                                                     * 56268000
*********************************************************************** 56270000
         SPACE 1                                                        56272000
         CNOP  4,8                                                      56274000
NQRELSE  LA    R15,72              PREPARE                              56276000
         L     R1,=V($QINDEX)       TO SCAN                             56278000
         LA    WA,C'A'-(255-QUECLASS)  EXECUTION                        56280000
         IC    WA,0(R1,WA)              QUEUES                          56282000
         SPACE 1                                                        56284000
NQRNXTQ  ST    R15,NQDBL           SAVE CURRENT QUEUE OFFSET            56286000
         LA    R1,0(R15,WA)        POINT TO START                       56288000
         LA    R1,$JQHEADS-4-QUECHAIN(R1)  OF NEXT QUEUE                56290000
         SPACE 1                                                        56292000
NQNXTJQE LH    R1,QUECHAIN(,R1)    GET OFFSET                           56294000
         N     R1,=X'0000FFFF'     OF NEXT JQE                          56296000
         BZ    NQRENDQ             BR IF END OF CURRENT QUEUE           56298000
         SLL   R1,2                 ELSE CONVERT OFFSET                 56300000
         AL    R1,$JOBQPTR           TO ABSOLUTE ADDRESS                56302000
         TM    QUEFLAGS(R1),QUEHOLD2  IF JOB NOT HELD,                  56304000
         BZ    NQNXTJQE                BR TO TEST NEXT JQE              56306000
         CLC   JQEJNAME,QUEJNAME(R1)  IF NOT SAME JOB NAME,             56308000
         BNE   NQNXTJQE                BR TO TEST NEXT JQE              56310000
         NI    QUEFLAGS(R1),255-QUEHOLD2  ELSE RESET HOLD BIT           56312000
        $QCKPT (R1)                        AND FORCE CKPT OF JQE        56314000
         B     NQNXTJQE            THEN BR TO TEST NEXT JQE             56316000
         SPACE 1                                                        56318000
NQRENDQ  L     R15,NQDBL           RESTORE CURRENT QUEUE OFFSET         56320000
         BCTR  R15,0               IF ANOTHER JOB QUEUE,                56322000
         BCT   R15,NQRNXTQ          BR TO SCAN IT                       56324000
         BR    WE                    ELSE RETURN                        56326000
         SPACE 1                                                        56328000
         DROP  NQIOT,NQHQT         KILL IOT, HQT ADDRESSABILITY         56330000
         DROP  R15                 KILL SSVT ADDRESSABILITY          R4 56332000
         TITLE 'HASP JOB QUEUE WARM START'                           R4 56334000
NQMAXQ   DC    A(L'JOTRDYWQ)       MAXIMUM JOE QUEUE OFFSET          R4 56336000
         SPACE 1                                                        56338000
NQTSTAFF TM    JQEFLAG2,0          *** EXECUTE ONLY ***                 56340000
         SPACE 1                                                        56342000
NQEDMSK  DC    X'4020202021'       HASP JOB NUMBER EDIT MASK            56344000
NQSYSAF  DC    X'0001020408102040' SYSTEM AFFINITY TABLE                56346000
         SPACE 1                                                        56348000
NQCLSTBL DC    C'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'  JOT CLASSES     56350000
         SPACE 1                                                        56352000
         DROP  WD                  KILL JQE ADDRESSABILITY              56354000
         TITLE 'HASP JOB QUEUE WARM START -- OPERATOR MESSAGES'         56356000
*********************************************************************** 56358000
*                                                                     * 56360000
*        H A S P   W A R M   S T A R T   M E S S A G E S              * 56362000
*                                                                     * 56364000
*********************************************************************** 56366000
         SPACE 3                                                        56368000
NQREQ   $MSG   400,'ENTER REQUESTS'                                     56370000
         SPACE 2                                                        56372000
        $MID   403                                                      56374000
NQDOWN   WTOR  '&MID.IS SYSTEM XXXX DOWN -- REPLY Y/N',                C56376000
               ,L'NQREPLY,ROUTCDE=(1,2),DESC=(2),MF=L                R4 56378000
NQLOKID  EQU   *-26,4              SYSTEM ID FOR MESSAGE             R4 56380000
NQMSGIDC EQU   *-45,1              MSG ID CHARACTER FOR MSG          R4 56382000
         SPACE 2                                                        56384000
NQIBAD   DC    AL1(NQIBADLN)       MESSAGE LENGTH                       56386000
NQIBADST $MSG  404,'JOB NNNN - BAD IOT - ERRORS MAY OCCUR'              56388000
NQIBADLN EQU   *-NQIBADST          LENGTH OF TEXT                       56390000
         SPACE 2                                                        56392000
NQCORE   DC    AL1(NQCORELN)       MESSAGE LENGTH                       56394000
NQCOREST $MSG  405,'JOB NNNN AWAITING BUFFER STORAGE'                   56396000
NQCORELN EQU   *-NQCOREST          LENGTH OF TEXT                       56398000
         EJECT                                                          56400000
NQEXEC   DC    AL1(NQEXECLN)       MESSAGE LENGTH                       56402000
NQEXECST $MSG  406,'JOB NNNN WAS EXECUTING'                             56404000
NQEXECLN EQU   *-NQEXECST          LENGTH OF TEXT                       56406000
         SPACE 2                                                        56408000
NQTERM   DC    AL1(NQTERMLN)       MESSAGE LENGTH                       56410000
NQTERMST $MSG  407,'JOB NNNN WAS TERMINATING'                           56412000
NQTERMLN EQU   *-NQTERMST          LENGTH OF TEXT                       56414000
         SPACE 2                                                        56416000
NQREQU   DC    AL1(NQREQULN)       MESSAGE LENGTH                    R4 56418000
NQREQUST $MSG  408,'JOB NNNN QUEUED FOR RE-EXECUTION'                R4 56420000
NQREQULN EQU   *-NQREQUST          LENGTH OF TEXT                    R4 56422000
         SPACE 2                                                        56424000
NQRDRM   DC    AL1(NQRDRMLN)       MESSAGE LENGTH                       56426000
NQRDRMST $MSG  409,'JOB NNNN WAS ON READER'                             56428000
NQRDRMLN EQU   *-NQRDRMST          LENGTH OF TEXT                       56430000
         SPACE 2                                                        56432000
NQPRPU   DC    AL1(NQPRPULN)       MESSAGE LENGTH                       56434000
NQPRPUST $MSG  410,'JOB NNNN WAS PRINTING/PUNCHING'                     56436000
NQPRPULN EQU   *-NQPRPUST          LENGTH OF TEXT                       56438000
         TITLE 'HASP JOB QUEUE WARM START -- TERMINATION PROCESSING'    56476000
*********************************************************************** 56478000
*                                                                     * 56480000
*        E N D   O F   J O B   Q U E U E   W A R M   S T A R T        * 56482000
*                                                                     * 56484000
*********************************************************************** 56486000
         SPACE 1                                                        56488000
         USING $SVDSECT,WD         PROVIDE SSVT ADDRESSABILITY       R4 56490000
         SPACE 1                                                        56492000
NQ700    L     WD,$SSVT            POINT TO SSVT                     R4 56494000
         LTR   NQSE,NQSE           IF SPECIFIC SYSTEM WARM START,       56496000
         BNZ   NQBFREE              BR TO FREE BUFFERS               R4 56498000
         TM    $OPTSTAT,$OPTCOLD+$OPTFMT  IF NODAL COLD START,       R4 56500000
         BNZ   NQ720                       BR TO ANALYZE TRK GRP MAP    56502000
         L     R1,NQCYLMAP         POINT TO ALLOCATE WORK AREA       R4 56504000
         MVI   BUFTYPE-BUFDSECT(R1),BUFHASP  RESET BUFFER TYPE       R4 56506000
        $FREEBUF (R1)              THEN FREE THE WORK BUFFER         R4 56508000
         SPACE 1                                                     R4 56510000
NQBFREE $FREEBUF (NQJCT)           FREE JCT BUFFER                   R4 56512000
        $FREEBUF (NQHQT)           FREE THE HQT BUFFER                  56514000
         L     R1,NQIOTBF          POINT TO THE IOT BUFFER              56516000
        $FREEBUF (R1)               AND FREE IT                         56518000
         TM    NQSTAT,NQ$ESYS      IF WARM START FROM 'S JES2',      R4 56520000
         BZ    NQ720                BR TO FIRE UP REST OF JES2       R4 56522000
         CLI   $NUMSMFB,2          TEST SMF BUFFER COUNT             R4 56524000
         BL    NQ900               BR IF SMF NOT SUPPORTED           R4 56526000
         SPACE 1                                                        56528000
         USING SMFDSECT,R1         PROVIDE SMF RECORD ADDRESSABILITY    56530000
         SPACE 1                                                        56532000
        $GETSMFB WAIT=YES          CREATE TYPE 43 SMF RCRD FOR $ESYS    56534000
         MVI   SMFRDW+1,SMF43END-SMFRDW  LENGTH OF START JES2 RECORD    56536000
         MVI   SMFHDRTY,SMFSSSTP   START JES2 SMF RECORD TYPE           56538000
         MVI   SMFSSID+1,SMFHSPID  JES2 SUBSYSTEM ID FOR RECORD 43      56540000
         MVI   SMFSSLEN+1,SMF43END-SMF43RV1  LEN OF SUBSYSTEM PART      56542000
         OI    SMF43RST,SMF$ESYS   SET $ESYS INDICATOR BYTE             56544000
         MVC   SMF43EID,QSESID     SYSTEM ID FOR RESTARTED SYSTEM       56546000
        $QUESMFB                   WRITE RECORD TYPE 43                 56548000
         B     NQ900               THEN BR TO RESET QSE POINTER      R4 56550000
         SPACE 1                                                        56552000
         DROP  R1                  KILL SJB RECORD ADDRESSABILITY       56554000
         EJECT                                                          56556000
NQ720    LTR   NQSE,NQSE           IF WARM STARTING SINGLE SYSTEM,      56558000
         BNZ   NQ750                BR TO AVOID TGM ANALYSYS        R41 56560000
         SPACE 1                                                        56562000
*********************************************************************** 56564000
*                                                                     * 56566000
*        C O M P U T E   A L L O C A T E D   T R A C K   G R O U P S  * 56568000
*                                                                     * 56570000
*********************************************************************** 56572000
         SPACE 1                                                        56574000
         L     R0,$SVTGTOT                       PREPARE TO             56576000
         SLR   WE,WE                              COMPUTE ALLOCATED     56578000
         L     R1,$CYLMAPL                         TRACK             R4 56580000
         L     R2,$TGMAP                            GROUPS           R4 56582000
         BCTR  R2,0                                  WITHIN          R4 56584000
         L     R3,=A(KNBITB)                          MAP            R4 56586000
         SPACE 1                                                        56588000
NQ740    IC    WE,0(R1,R2)         GET NEXT BYTE FROM $TGMAP            56590000
         IC    WE,0(R3,WE)         WE = NUMBER OF BITS IN BYTE          56592000
         SLR   R0,WE               R0 = NUMBER OF ALLOCATED TRK GRPS    56594000
         BCT   R1,NQ740            PLOW THRU ENTIRE BIT MAP             56596000
         SPACE 1                                                        56598000
         ST    R0,$SVTGALC         SAVE NUMBER OF ALLOCATED TRK GRPS    56600000
         SPACE 1                                                        56602000
*********************************************************************** 56604000
*                                                                     * 56606000
*        S H O W   S Y S T E M   N O W   U P                          * 56608000
*                                                                     * 56610000
*********************************************************************** 56612000
         SPACE 1                                                        56614000
         USING CVT,WA              PROVIDE CVT ADDRESSABILITY           56616000
         SPACE 1                                                        56618000
NQ750    L     WA,CVTPTR           POINT TO THE CVT                 R41 56620000
        $GETLOK                    SERIALIZE WITH SSSM DECHAINING       56622000
         SLR   R0,R0               SET NEW HASP CONDITION               56624000
         ST    R0,$SVHASP           TO ZERO                             56626000
        $FRELOK                    THEN RELEASE THE LOCK                56628000
         OI    NQSTAT,NQ$ESYS      SET 1ST TIME ENTRY SWITCH         R4 56630000
         EJECT                                                          56632000
         TM    $SVSTUS,$SVSTUSP    IF NOT PRIMARY SUBSYSTEM,            56634000
         BZ    NQ760                BR TO CONTINUE                  R41 56636000
         TM    NQSTAT,NQRESTRT     IF RESTARTING JES2,               R4 56638000
         BO    NQ760                BR TO CONTINUE                  R41 56640000
         SPACE 1                                                        56642000
*********************************************************************** 56644000
*                                                                     * 56646000
*        P O S T   M A S T E R   S C H E D U L E R                    * 56648000
*                                                                     * 56650000
*********************************************************************** 56652000
         SPACE 1                                                        56654000
         L     R1,CVTMSER          POINT TO MASTER SCHEDULER WORK       56656000
         LA    R0,BASUBECB-BASE(,R1)  PREPARE                           56658000
         ST    R0,NQTQE                CROSS                            56660000
         L     R0,BAASCB-BASE(,R1)      MEMORY                          56662000
         ST    R0,NQTQE+4                POST                           56664000
         LA    R0,CVTBRET                 QUEUE                         56666000
         ST    R0,NQTQE+8                  ELEMENT                      56668000
         LA    R1,NQTQE            THEN POST                            56670000
         POST  MF=(E,(1))           THE MASTER SCHEDULER                56672000
         SPACE 1                                                    R41 56674000
         DROP  WA                  KILL CVT ADDRESSABILITY          R41 56674100
         EJECT                                                      R41 56674200
*********************************************************************** 56674300
*                                                                     * 56674400
*        DECREMENT CHECKPOINT DEVICE RESERVE COUNT                    * 56674500
*                                                                     * 56674600
*********************************************************************** 56674700
         SPACE 1                                                    R41 56674800
NQ760    LTR   NQSE,NQSE           IF SINGLE SYSTEM WARM START,     R41 56674900
         BNZ   NQNEWS               BR TO CONTINUE                  R41 56675000
        $QSUSE                     REQUEST ACCESS TO CKPT DATA      R41 56675100
         L     R1,$SVRELSE                 GET ADDRESS OF           R41 56675200
         L     R1,IOSUCB-IOSB+SRBSIZE(,R1)  CKPT DEVICE UCB         R41 56675300
        $GETLOK                    SERIALIZE WITH SSSM              R41 56675400
         TM    $SVSTUS,$SVSTIRV    IF INIT RESERVE BIT NOT ON,      R41 56675500
         BZ    NQ770                BR TO BYPASS RESERVE COUNT DECR R41 56675600
         MODESET EXTKEY=ZERO       SET ZERO PROTECT KEY             R41 56675700
         IC    R0,UCBSQC-UCBDSECT(,R1)  DECREMENT                   R41 56675800
         BCTR  R0,0                      CKPT DEVICE                R41 56675900
         STC   R0,UCBSQC-UCBDSECT(,R1)    RESERVE COUNT             R41 56676000
         NI    $SVSTUS,255-$SVSTIRV  RESET INIT RESERVE BIT         R41 56676100
         SPACE 1                                                    R41 56676200
NQ770   $FRELOK                    RELEASE THE LOCK                 R41 56676300
         SPACE 1                                                    R41 56676400
         DROP  WD,NQSE             KILL SSVT, QSE ADDRESSABILITY    R41 56676500
         TITLE 'HASP JOB QUEUE WARM START -- ''NEWS'' PROCESSING'   R41 56676600
*********************************************************************** 56676700
*                                                                     * 56676800
*                 P R O C E S S   'N E W S'   F O R                   * 56676900
*                                                                     * 56677000
*           P R I N T E R   S E P A R A T O R   P A G E S             * 56677100
*                                                                     * 56677200
*********************************************************************** 56677300
         SPACE 1                                                    R41 56677400
NQNEWS   OC    $NEWNEWS,$NEWNEWS   'NEW NEWS' SPECIFIED AT INIT...  R41 56677500
         BZ    NQ800                 SKIP WHOLE SECTION IF NOT      R41 56677600
        $GETBUF ,                  GET A BUFFER TO BUILD/READ IOT   R41 56677700
         LR    NQIOT,R1            POINT IOT REG TO BUFFER          R41 56677800
         OC    $NEWSIOT,$NEWSIOT   SEE IF 'OLD NEWS' EXISTS         R41 56677900
         BZ    NQNCIOT               BRANCH TO CREATE IOT IF NOT    R41 56678000
         LTR   NQSE,NQSE           SINGLE SYSTEM WARM START...      R41 56678100
         BNZ   NQNRDIOT              BR IF YES TO READ OLD IOT      R41 56678200
         XC    $NEWSIOT(8),$NEWSIOT CLEAR 'OLD NEWS' PTRS IN HCT    R41C56678300
                                   (WARMSTART WILL DEL OLD TRACKS)  R41 56678400
         SPACE 1                                                    R41 56678500
         USING IOTDSECT,NQIOT      PROVIDE IOT ADDRESSABILITY       R41 56678600
         SPACE 1                                                    R41 56678700
NQNCIOT  LA    R14,IOTSTART        STARTING ADDR FOR CLEARING IOT   R41 56678800
         LH    R15,$BUFSIZE        LENGTH FOR CLEAR                 R41 56678900
         SLR   R1,R1               ZERO PAD CHAR FOR FILL           R41 56679000
         MVCL  R14,R0              CLEAR IOT                        R41 56679100
         MVC   IOTID,=CL4'IOT'     SET IOT IDENTIFIER               R41 56679200
         MVC   IOTLENG,$BUFLENG    SET IOT LENGTH              @OZ31604 56679300
         MVC   IOTJBKEY,NQNIOTKY   SET SPECIAL 'JOB' KEY            R41 56679400
         MVI   IOTFLAG1,IOT1ALOC   SHOW 'ALLOCATION' IOT            R41 56679500
        $TRACK IOTMSTAB            OBTAIN MTTR FOR IOT              R41 56679600
         ST    R1,IOTTRACK         PUT IOT'S OWN MTTR IN IOT        R41 56679700
         MVI   TABUFCNT-TABDSECT+IOTMSTAB,0 FORCE DATA TO NEW TKCEL R41 56679800
         L     R1,$IOTPDDB         POINT R1 TO                      R41 56679900
         ALR   R1,NQIOT              PDDB LOCATION                  R41 56680000
         USING PDBDSECT,R1         SET UP ADDRESSABILITY            R41 56680100
         MVI   PDBLRECL,132        SET PDDB LOGICAL RECORD LENGTH   R41 56680200
         MVC   PDBDSKEY,NQNPDBKY   SET SPECIAL DS KEY               R41 56680300
         MVI   PDBCLASS,C'A'       FILL IN DEFAULT CLASS            R41 56680400
         MVI   PDBCOPYS,1          FILL IN COPY COUNT               R41 56680500
         MVI   PDBFLAG2,PDB2TCEL   SHOW 'TRACK-CELLED' PDDB         R41 56680600
         MVC   PDBFORMS,$STDFORM   SET DEFAULT FORM                 R41 56680700
         MVI   PDBFCB,C'*'         SET FCB, UCS IDS                 R41 56680800
         MVC   PDBFCB+1(L'PDBFCB+L'PDBUCS-1),PDBFCB TO DEFAULT      R41 56680900
         MVI   PDBCHAR1,C'*'       SET 3800 IDENTIFIERS TO DEFAULT  R41 56681000
         MVC   PDBCHAR1+1(PDBMODF-PDBCHAR1+L'PDBMODF-1),PDBCHAR1    R41 56681100
         L     R1,$IOTPDDB         SET POINTER IN IOT               R41 56681200
         LA    R1,PDBLENG(,R1)       BEYOND LAST                    R41 56681300
         ST    R1,IOTPDDBP           (ONLY) PDDB                    R41 56681400
         B     NQNPTEXT            GO PROCESS NEWS RECORDS          R41 56681500
         SPACE 1                                                    R41 56681600
         DROP  R1                  KILL PDDB ADDRESSABILITY         R41 56681700
         EJECT                                                      R41 56681800
NQNRDIOT ST    NQIOT,PCEBUFAD      SET BUFFER ADDRESS FOR READ      R41 56681900
         MVC   PCESEEK,$NEWSIOT    SET SEEK ADDRESS                 R41 56682000
         MVI   PCEDEVTP,PCEDARD    SET DA DCT TO 'READ'             R41 56682100
         LA    R1,PCEDADCT         ISSUE $EXCP AND                  R41 56682200
        $EXCP  (R1),WAIT=YES         $WAIT FOR COMPLETION           R41 56682300
         BNO   NQNEWSX2            BRANCH IF READ ERROR             R41 56682400
         CLC   NQNIOTKY,IOTJBKEY   VALIDATE 'JOB' KEY               R41 56682500
         BE    NQNEWTCL            BRANCH IF OK                     R41 56682600
         SPACE 1                                                    R41 56682700
NQNEWSX2 $DISTERR                  INDICATE CONTROL BLOCK ERROR     R41 56682800
         B     NQNCIOT             RE-BUILD IOT FROM SCRATCH        R41 56682900
         SPACE 1                                                    R41 56683000
NQNEWTCL MVI   TABUFCNT-TABDSECT+IOTMSTAB,0 FORCE DATA TO NEW TKCEL R41 56683100
         LR    R1,NQIOT            SET STARTING                     R41 56683200
         AL    R1,$IOTPDDB           MTTR IN                        R41 56683300
         SLR   R0,R0                 PDDB TO                        R41 56683400
         ST    R0,PDBMTTR-PDBDSECT(,R1) ZERO                        R41 56683500
         SPACE 1                                                    R41 56683600
*        MOVE NEWS LINES FROM VIRTUAL STORAGE BUFFER BUILT BY       R41 56683700
*        JES2 INITIALIZATION TO SPOOL BUFFERS                       R41 56683800
         SPACE 1                                                    R41 56683900
NQNPTEXT L     WA,$NEWNEWS         POINT TO TEXT BLOCK FROM INIT    R41 56684000
         USING NEWSBLOK,WA         SET UP ADDRESSABILITY ON BLOCK   R41 56684100
         LA    WB,NEWSTART         POINT TO 1ST NEWS LINE           R41 56684200
         USING BUFDSECT,WC         PROVIDE BUFFER ADDRESSABILITY    R41 56684300
         SLR   WC,WC               ZERO OUT CURRENT BUFFER POINTER, R41 56684400
         SLR   WD,WD                 CURRENT LRC POINTER,           R41 56684500
         SLR   WE,WE                 AMOUNT OF SPACE REMAINING      R41 56684600
         SPACE 1                                                    R41 56684700
NQNLOOP  CL    WB,NEWSPTR          SEE IF AT END OF NEWS LINES,     R41 56684800
         BNL   NQNEND                EXIT IF SO                     R41 56684900
         LA    R1,NEWSLENG(,WB)    POINT PAST END OF LINE           R41 56685000
         SPACE 1                                                    R41 56685100
NQNBCTR  BCTR  R1,0                BUMP BACK ONE CHARACTER          R41 56685200
         CLI   0(R1),C' '          CHECK FOR NON-BLANK              R41 56685300
         BE    NQNBCTR             CONTINUE SCAN IF NOT             R41 56685400
         LA    R10,NEWSLINE(,WB)   COMPUTE MACHINE LENGTH OF TEXT   R41 56685500
         SLR   R1,R10                FOR EXECUTED MOVE              R41 56685600
         LTR   R10,R1              TEST COMPUTED LENGTH             R41 56685700
         BNM   NQNLENOK            BRANCH IF LENGTH IS OK           R41 56685800
         SLR   R10,R10             SET LENGTH=0 FOR ONE BLANK CHAR  R41 56685900
         SPACE 1                                                    R41 56686000
NQNLENOK LA    R0,5(,R10)          COMPUTE TOTAL LEN REQ'D FOR LRC  R41 56686100
         CLR   R0,WE               SEE IF ENOUGH SPACE LEFT,        R41 56686200
         BL    NQNENUF             BRANCH IF SO                     R41 56686300
         EJECT                                                      R41 56686400
*        OBTAIN A SPOOL BUFFER FOR NEWS DATA                        R41 56686500
         SPACE 1                                                    R41 56686600
        $TRACK IOTMSTAB            GET AN MTTR FOR A DATA BUFFER    R41 56686700
         LTR   WC,WC               SEE IF CURRENT BUFFER EXISTS     R41 56686800
         BNZ   NQNBFADD            BRANCH TO ADD TO CHAIN IF SO     R41 56686900
         L     R14,$IOTPDDB        STORE DATA SET INITIAL MTTR IN   R41 56687000
         ST    R1,PDBMTTR-PDBDSECT(NQIOT,R14) PDDB IN IOT           R41 56687100
         ST    R1,PCESEEK          SAVE MTTR FOR EVENTUAL WRITE     R41 56687200
        $GETBUF ,                  OBTAIN A SPOOL BUFFER            R41 56687300
         LR    WC,R1               POINT WC TO ACQUIRED BUFFER      R41 56687400
         B     NQNGOTBF            BRANCH TO INITIALIZE BUFFER PTRS R41 56687500
         SPACE 1                                                    R41 56687600
NQNBFADD ST    R1,HDBNXTRK         ADD BUFFER TO CHAIN              R41 56687700
         ST    WC,PCEBUFAD         SET BUFFER ADDRESS FOR $EXCP     R41 56687800
         MVI   PCEDEVTP,PCEDAWR    SET DA DCT TO 'WRITE'            R41 56687900
         LA    R1,PCEDADCT         POINT TO DA DCT                  R41 56688000
        $EXCP  (R1),WAIT=YES       WRITE BUFFER TO SPOOL            R41 56688100
         MVC   PCESEEK,HDBNXTRK    SET NEXT MTTR FOR EVENTUAL WRITE R41 56688200
         SPACE 1                                                    R41 56688300
NQNGOTBF SLR   R0,R0               INDICATE                         R41 56688400
         ST    R0,HDBNXTRK          END-OF-FILE                     R41 56688500
         MVC   HDBKEY,NQNEWSKY     SET SPECIAL JOB/DS KEYS          R41 56688600
         LA    WD,HDBSTART         POINT TO FIRST SPOT FOR LRC      R41 56688700
         SPACE 1                                                    R41 56688800
         USING LRCDSECT,WD         PROVIDE LRC ADDRESSABILITY       R41 56688900
         SPACE 1                                                    R41 56689000
NQNENUF  LA    R0,1(,R10)          SET TEXT LENGTH                  R41 56689100
         STC   R0,LRCTLENG           IN LOGICAL RECORD CONTROL      R41 56689200
         MVI   LRCFLAG1,LRC1CCTL+LRC1TASA SHOW ASA CARRIAGE CONTROL R41 56689300
         MVI   LRCLRECL,132        SET CONSTANT LOGICAL RECORD LEN  R41 56689400
         MVC   LRCCCTL,NEWSCCTL(WB) MOVE CARRIAGE CONTROL BYTE      R41 56689500
         EX    R10,NQNEWSMV        MOVE TEXT                        R41 56689600
         LA    WD,LRCSOUT+1(R10)   POINT TO 1ST BYTE OF NEXT LRC    R41 56689700
         MVI   LRCTLENG,LRCBFEND   SEND 'END OF BLOCK' INDICATOR    R41 56689800
         LH    WE,$BUFLENG         COMPUTE                          R41 56689900
         ALR   WE,WC                 AMOUNT OF SPACE                R41 56690000
         SLR   WE,WD                 REMAINING IN BUFFER            R41 56690100
         LA    WB,NEWSLENG(,WB)    BUMP NEWS LINE POINTER           R41 56690200
         B     NQNLOOP             LOOP BACK FOR MORE NEWS LINES    R41 56690300
        EJECT                                                       R41 56690400
         SPACE 1                                                    R41 56690500
NQNEND   LTR   WC,WC               SEE IF BUFFER EXISTS             R41 56690600
         BZ    NQNFREEM              EXIT IF NOT                    R41 56690700
         ST    WC,PCEBUFAD         SET BUFFER ADDRESS FOR $EXCP     R41 56690800
         MVI   PCEDEVTP,PCEDAWR    SET 'WRITE' DEVICE TYPE          R41 56690900
         LA    R1,PCEDADCT         POINT TO DIRECT-ACCESS DCT       R41 56691000
        $EXCP  (R1),WAIT=YES       WRITE OUT LAST BUFFER            R41 56691100
        $FREEBUF (WC)              RELEASE DATA BUFFER              R41 56691200
         SPACE 1                                                    R41 56691300
         DROP  WC                  KILL BUFFER ADDRESSABILITY       R41 56691400
         SPACE 1                                                    R41 56691500
NQNFREEM L     R0,NQNEWSLN         LOAD SP AND LEN OF GETMAINED BLK R41 56691600
         LR    R1,WA               POINT TO START OF AREA           R41 56691700
         FREEMAIN R,LV=(0),A=(1)   RELEASE VIRTUAL STORAGE          R41 56691800
         SLR   R0,R0               ZERO OUT TEXT BLOCK              R41 56691900
         ST    R0,$NEWNEWS           POINTER IN HCT                 R41 56692000
         MVI   PCEDEVTP,PCEDAWR    SET DA DCT TO 'WRITE'            R41 56692100
         ST    NQIOT,PCEBUFAD      SET BUFFER ADDR FOR WRITE        R41 56692200
         MVC   PCESEEK,IOTTRACK    SET MTTR OF IOT FOR WRITE        R41 56692300
         LA    R1,PCEDADCT         POINT TO DA DCT                  R41 56692400
        $EXCP  (R1),WAIT=YES       WRITE OUT 'NEWS' IOT AND $WAIT   R41 56692500
         BNO   NQNFREEB            DON'T UPDATE HCT PTRS IF I/O ERR R41 56692600
        $QSUSE                     OBTAIN CONTROL OF CKPT RECORD    R41 56692700
         MVC   $NEWSIOT,IOTTRACK   SET 'NEWS' IOT POINTER IN HCT    R41 56692800
         L     R1,$IOTPDDB         SET 'NEWS' DATA SET              R41 56692900
         L     R1,PDBMTTR-PDBDSECT(R1,NQIOT) POINTER                R41 56693000
         ST    R1,$NEWSTTR           IN HCT                         R41 56693100
        $POST  $HASPECF,CKPT       FORCE CKPT OF HCT WITH NEW PTRS  R41 56693200
         EJECT                                                      R41 56693300
NQNFREEB LR    R1,NQIOT            FREE BUFFER USED                 R41 56693400
        $FREEBUF (R1)                FOR 'NEWS' IOT                 R41 56693500
         B     NQ800               BRANCH TO END OF WARMSTART       R41 56693600
         SPACE 1                                                    R41 56693700
NQNEWSMV MVC   LRCSOUT(*-*),NEWSLINE(WB) *** EXECUTE ONLY ***       R41 56693800
NQNEWSLN DC    0F'0',AL1(229),AL3(NEWSTOTL) SP AND LENGTH OF BLOCK  R41 56693900
         SPACE 1                                                    R41 56694000
NQNEWSKY DC    CL6'$$NEWS'         SPECIAL JOB/DS KEY FOR NEWS      R41 56694100
NQNIOTKY EQU   NQNEWSKY,4          SPECIAL JOB    KEY FOR NEWS      R41 56694200
NQNPDBKY EQU   NQNEWSKY+4,2        SPECIAL     DS KEY FOR NEWS      R41 56694300
         SPACE 1                                                    R41 56694400
         DROP  WD,NQIOT            KILL LRC, IOT ADDRESSABILITY     R41 56694500
         TITLE 'HASP JOB QUEUE WARM START -- TERMINATION EXIT'      R41 56694600
*********************************************************************** 56694700
*                                                                     * 56694800
*        $ P O S T   P R O C E S S O R S   F O R   H O L D            * 56694900
*                                                                     * 56695000
*********************************************************************** 56695100
         SPACE 1                                                        56696000
         USING QSEDSECT,WC         PROVIDE QSE ADDRESSABILITY       R41 56696100
         SPACE 1                                                    R41 56696200
NQ800    TM    $OPTSTAT,$OPTREQ    IF OPERATOR REQUESTS SELECTED,   R41 56696300
         BO    NQ840                BR TO BYPASS PCE POSTING        R41 56696400
         LA    R1,$PCEORG-(PCENEXT-PCEDSECT)  PREPARE TO POST PCES      56698000
         SPACE 1                                                        56700000
NQ820    L     R1,PCENEXT-PCEDSECT(,R1)  POINT TO NEXT PCE              56702000
         LTR   R1,R1               IF END OF PCE CHAIN,                 56704000
         BZ    NQ900                BR TO CONTINUE                  R41 56706000
        $POST  (R1),HOLD             ELSE $POST PROCESSOR               56708000
         B     NQ820               THEN BR TO POST NEXT PCE             56710000
         SPACE 1                                                        56712000
*********************************************************************** 56714000
*                                                                     * 56716000
*        I S S U E   ' E N T E R   R E Q U E S T S '   M S G          * 56718000
*                                                                     * 56720000
*********************************************************************** 56722000
         SPACE 1                                                        56724000
NQ840    LA    R1,NQREQ            POINT TO REQUEST MESSAGE          R4 56726000
        $WTO   (R1),L'NQREQ,JOB=NO,ROUTE=$LOG+$MAIN,    ISSUE MSG    R4C56728000
               PRI=$ST,CLASS=$ALWAYS,WAIT=YES            TO OPERATOR    56730000
         L     R1,$COMMPCE         THEN $POST                        R4 56732000
        $POST  (R1),HOLD            THE COMMAND PROCESSOR               56734000
         SPACE 1                                                        56782000
NQ900    SLR   NQSE,NQSE           CLEAR POINTER TO                     56784000
         ST    NQSE,$ESYSQSE        WARM STARTED SYSTEM QSE             56786000
        $DORMANT                   INDICATE PROCESSOR INACTIVE      R41 56790000
         NI    NQSTAT,255-NQRESTRT RESET RESTART FLAG                R4 56792000
         B     NQ000               THEN BR TO AWAIT $ESYS COMMAND       56794000
 TITLE 'HASP JOB QUEUE WARM START -- JOB QUEUE SCAN INITIALIZATION'     56800000
*********************************************************************** 56802000
*                                                                     * 56804000
*        P R E P A R E   T O   W A R M   S T A R T   J O B   Q        * 56806000
*                                                                     * 56808000
*********************************************************************** 56810000
         SPACE 1                                                        56812000
         USING $SVDSECT,NQJCT      PROVIDE SSVT ADDRESSABILITY       R4 56814000
         USING JQEDSECT,WD         PROVIDE JQE ADDRESSABILITY           56816000
         SPACE 1                                                        56818000
*********************************************************************** 56820000
*                                                                     * 56822000
*        R E M O V E   A L L   H O L D   Q U E U E   L O C K S        * 56824000
*                                                                     * 56826000
*********************************************************************** 56828000
         SPACE 1                                                     R4 56830000
NQINIT  $QSUSE                     REQUEST ACCESS TO CHECKPOINT DATA R4 56832000
         L     NQJCT,$SSVT         POINT TO SSVT                     R4 56834000
         SPACE 1                                                     R4 56836000
NQFRELOK LA    WB,$JQTYPES*2       PREPARE TO SCAN ALL JOB QUEUES    R4 56838000
         SPACE 1                                                        56840000
NQNXTQ   LA    NQ,$JQHEADS-2-QUECHAIN(WB)  PREPARE TO SCAN JOB QUEUE    56842000
         SPACE 1                                                        56844000
NQNXTJOB LH    NQ,JQECHAIN         GET OFFSET                           56846000
         N     NQ,=X'0000FFFF'      OF NEXT JQE                         56848000
         BZ    NQIEND              BR IF END OF JOB QUEUE               56850000
         SLL   NQ,2                 ELSE CONVERT OFFSET                 56852000
         AL    NQ,$JOBQPTR           TO ABSOLUTE ADDRESS                56854000
         TM    JQEHQLOK,QUEBUSY    IF HOLD QUEUE LOCK NOT HELD,         56856000
         BZ    NQNXTJOB             BR TO TEST NEXT JQE                 56858000
         LTR   NQSE,NQSE           IF NODAL WARM START,              R4 56860000
         BZ    NQIREM               BR TO REMOVE THE LOCK               56862000
         IC    R0,JQEHQLOK         IF SYSTEM                            56864000
         N     R0,=A(QUEBUSY)       BEING                               56866000
         CLM   R0,1,QSESIBSY         WARM STARTED,                      56868000
         BE    NQIREM                 BR TO REMOVE THE LOCK             56870000
         BAL   WE,NQLOKREM             AND REMOVE LOCK CAREFULLY        56872000
         B     NQFRELOK            THEN BR TO RE-SCAN JOB QUEUES     R4 56874000
         SPACE 1                                                        56876000
NQIREM   NI    JQEHQLOK,255-QUEBUSY  RESET JOB HOLD QUEUE LOCK          56878000
        $QCKPT (NQ)                   AND FORCE CHECKPOINT OF JQE       56880000
         B     NQNXTJOB            THEN BR TO TEST NEXT JQE             56882000
         SPACE 1                                                        56884000
NQIEND   BCTR  WB,0                IF ANOTHER JOB QUEUE,                56886000
         BCT   WB,NQNXTQ            BR TO PROCESS IT                    56888000
         EJECT                                                          56890000
*********************************************************************** 56892000
*                                                                     * 56894000
*        S E T   J O B   H O L D   Q U E U E   L O C K S              * 56896000
*                                                                     * 56898000
*********************************************************************** 56900000
         SPACE 1                                                        56902000
         LA    WB,$JQTYPES*2       PREPARE TO RE-SCAN ALL JOB QUEUES    56904000
         SPACE 1                                                        56906000
NQNXTQUE LA    NQ,$JQHEADS-2-QUECHAIN(WB)  PREPARE TO SCAN NEXT Q       56908000
         SPACE 1                                                        56910000
NQJOBNXT LH    NQ,JQECHAIN         GET OFFSET                           56912000
         N     NQ,=X'0000FFFF'      OF NEXT JQE                         56914000
         BZ    NQENDQ              BR IF END OF CURRENT JOB QUEUE       56916000
         SLL   NQ,2                 ELSE CONVERT OFFSET                 56918000
         AL    NQ,$JOBQPTR           TO ABSOLUTE ADDRESS                56920000
         MVC   NQDBL(1),$SIDBUSY   SET                                  56922000
         LTR   NQSE,NQSE            JOB                                 56924000
         BZ    *+10                  HOLD                               56926000
         MVC   NQDBL(1),QSESIBSY      QUEUE                             56928000
         OC    JQEHQLOK,NQDBL          LOCK                             56930000
        $QCKPT (NQ)                THEN FORCE CHECKPOINT OF JQE         56932000
         B     NQJOBNXT            THEN BR TO GET NEXT JQE              56934000
         SPACE 1                                                        56936000
NQENDQ   BCTR  WB,0                IF ANOTHER JOB QUEUE,                56938000
         BCT   WB,NQNXTQUE          BR TO SCAN IT                       56940000
         EJECT                                                          56942000
*********************************************************************** 56944000
*                                                                     * 56946000
*        R E L E A S E   H O L D   Q U E U E   P R O C E S S O R      * 56948000
*                                                                     * 56950000
*********************************************************************** 56952000
         SPACE 1                                                     R4 56954000
         L     R1,$HOLDPCE         RELEASE                           R4 56956000
        $POST  (R1),HOLD            HOLD QUEUE PROCESSOR                56958000
         TM    $SVHASP,X'80'       IF NOT RE-STARTING JES2,             56960000
         BZ    NQBUFRS              BR TO GET BUFFERS                   56962000
         SPACE 1                                                        56964000
*********************************************************************** 56966000
*                                                                     * 56968000
*        F R E E   P E N D I N G   H O L D   R E Q U E S T S          * 56970000
*                                                                     * 56972000
*********************************************************************** 56974000
         SPACE 1                                                        56976000
NQFRIOT  ICM   R1,15,$SVHOLDQ      IF END OF HOLD QUEUE,                56978000
         BZ    NQBUFRS              BR TO GET BUFFERS                   56980000
         MVC   $SVHOLDQ,IOTIOT-IOTDSECT(R1)  ELSE                       56982000
         LH    R0,$BUFSIZE                    FREE                   R4 56984000
         ICM   R0,8,=AL1(231)                  IOT                      56986000
         FREEMAIN R,LV=(0),A=(1)                BUFFER                  56988000
         B     NQFRIOT             THEN BR TO RE-TEST HOLD QUEUE        56990000
         EJECT                                                       R4 56992000
*********************************************************************** 56994000
*                                                                     * 56996000
*        G E T   J C T / I O T / H C T   B U F F E R S                * 56998000
*                                                                     * 57000000
*********************************************************************** 57002000
         SPACE 1                                                        57004000
NQBUFRS $GETBUF WAIT=YES           GET BUFFER FOR JCT                R4 57006000
         LR    NQJCT,R1            RELOAD BUFFER ADDRESS             R4 57008000
        $GETBUF WAIT=YES           GET BUFFER FOR IOT                R4 57010000
         ST    R1,NQIOTBF          SAVE BUFFER ADDRESS               R4 57012000
        $GETBUF WAIT=YES           GET BUFFER FOR HQT                R4 57014000
         LR    NQHQT,R1            RELOAD BUFFER ADDRESS             R4 57016000
         LTR   NQSE,NQSE           IF NOT NODAL WARM START,          R4 57018000
         BNZ   NQ200                BR TO BEGIN WARM START           R4 57020000
        $GETBUF WAIT=YES           GET BUFFER FOR WORK AREA          R4 57022000
         ST    R1,NQCYLMAP         SAVE WORK AREA ADDRESS            R4 57024000
         B     NQ200               THEN BR TO BEGIN WARM START          57026000
         EJECT                                                          57028000
*********************************************************************** 57030000
*                                                                     * 57032000
*        R E M O V E   J O B   H O L D   Q U E U E   L O C K          * 57034000
*                                                                     * 57036000
*********************************************************************** 57038000
         SPACE 1                                                        57040000
NQLOKREM IC    R0,JQEHQLOK         GET SYSTEM ID                        57042000
         N     R0,=A(QUEBUSY)       FROM HOLD QUEUE LOCK                57044000
         L     R1,$QSE1            PREPARE TO SCAN                   R4 57046000
         SH    R1,$QSEL             ACTIVE QSES                      R4 57048000
         SPACE 1                                                        57050000
         AH    R1,$QSEL                   IF NOT THE SYSTEM          R4 57052000
         CLM   R0,1,QSESIBSY-QSEDSECT(R1)  HOLDING THE LOCK,            57054000
         BNE   *-8                          LOOP                        57056000
         SPACE 1                                                        57058000
         STCK  NQDBL                    IF SYSTEM                       57060000
         L     R15,NQDBL                 HOLDING                        57062000
         SL    R15,$SYNCTOL               THE LOCK                   R4 57064000
         CL    R15,QSESITIM-QSEDSECT(,R1)  APPEARS DOWN,                57066000
         BH    NQLOKMSG                     BR TO QUERY THE OPERATOR    57068000
         SPACE 1                                                        57070000
*********************************************************************** 57072000
*                                                                     * 57074000
*        L O C K   H E L D   B Y   A C T I V E   S Y S T E M          * 57076000
*                                                                     * 57078000
*********************************************************************** 57080000
         SPACE 1                                                        57082000
        $WAIT  ABIT                $WAIT A LITTLE WHILE                 57084000
         SPACE 1                                                        57086000
NQLOKTST $QSUSE                    REQUEST ACCESS TO CHECKPOINT DATA    57088000
         TM    JQEHQLOK,QUEBUSY    IF LOCK NO LONGER HELD,              57090000
         BZR   WE                   RETURN                              57092000
         B     NQLOKREM              ELSE TRY AGAIN TO REMOVE IT        57094000
         EJECT                                                          57096000
*********************************************************************** 57098000
*                                                                     * 57100000
*        S U S P E C T   D O W N   S Y S T E M   - -   V E R I F Y    * 57102000
*                                                                     * 57104000
*********************************************************************** 57106000
         SPACE 1                                                        57108000
NQLOKMSG MVC   NQMSG,NQDOWN        MOVE MSG TO WORK AREA             R4 57110000
         MVC   NQMSGIDC-NQDOWN+NQMSG,$SVCOMCH           SET UP       R4 57112000
         MVC   NQLOKID-NQDOWN+NQMSG,QSESID-QSEDSECT(R1)  MSG         R4 57114000
         SPACE 1                                                     R4 57116000
NQDNWTOR MVI   NQREPLY,0                  ISSUE                      R4 57118000
         L     WA,$HASPECB                 QUERY                     R4 57120000
         WTOR  ,NQREPLY,,(WA),MF=(E,NQMSG)  TO OPERATOR              R4 57122000
         SPACE 1                                                        57124000
NQREPL  $WAIT  ABIT                $WAIT FOR OPERATOR RESPONSE          57126000
         CLI   NQREPLY,0           IF NOT OPERATOR REPLY,               57128000
         BE    NQREPL               BR TO $WAIT A LITTLE LONGER         57130000
        $QSUSE                     REQUEST ACCESS TO CHECKPOINT DATA    57132000
         TM    JQEHQLOK,QUEBUSY    IF LOCK NO LONGER HELD,              57134000
         BZR   WE                   RETURN                              57136000
         OI    NQREPLY,X'40'       FORCE UPPER CASE REPLY            R4 57138000
         CLI   NQREPLY,C'Y'        IF OPERATOR                          57140000
         BE    NQREMLOK             HAS CONFIRMED                       57142000
         CLI   NQREPLY,C'N'          THAT SYSTEM IS DOWN,            R4 57144000
         BNE   NQDNWTOR               BR TO REMOVE THE LOCK          R4 57146000
         LA    R0,60                   ELSE $WAIT                       57148000
         BAL   WA,NQSTIMER              FOR 60 SECONDS                  57150000
         B     NQLOKTST            THEN BR TO TEST LOCK AGAIN           57152000
         SPACE 1                                                        57154000
NQREMLOK NI    JQEHQLOK,255-QUEBUSY  REMOVE JOB HOLD QUEUE LOCK         57156000
        $QCKPT (NQ)                   AND FORCE CHECKPOINT OF JQE       57158000
         BR    WE                  THEN RETURN                          57160000
         SPACE 1                                                     R4 57162000
         DROP  NQJCT               KILL SSVT ADDRESSABILITY          R4 57164000
         TITLE 'HASP JOB QUEUE WARM START -- LITERAL POOL'           R4 57166000
         LTORG                                                          57168000
         TITLE 'HASP DYNAMIC SPOOL ALLOCATION SUBTASK'               R4 57170000
*********************************************************************** 57172000
*                                                                     * 57174000
* SUBTASK NAME -- HOSPOOL                                             * 57176000
*                                                                     * 57178000
* DESCRIPTIVE NAME -- JES2 DYNAMIC SPOOL ALLOCATION SUBTASK           * 57180000
*                                                                     * 57182000
* FUNCTION -- PROVIDE CAPABILITY TO DYNAMICALLY ALLOCATE A JES2       * 57184000
*             SPOOL VOLUME.                                           * 57186000
*                                                                     * 57188000
* NOTES -- THE ATTACHER OF THIS SUBTASK MUST REQUEST THE SYSTEM       * 57190000
*          TO PROVIDE A REGISTER SAVE AREA.  HE MUST ALSO PROVIDE,    * 57192000
*          IN REGISTER 1, THE ADDRESS OF A WORK AREA OBTAINED VIA     * 57194000
*          GETMAIN FROM SUBPOOL 229 AND DESCRIBED BY THE $SPL         * 57196000
*          MACRO.  THE FOLLOWING FIELDS IN THIS WORK AREA MUST BE     * 57198000
*          PROVIDED -- SPLFLG1, SPLTCBPT, SPLUNIT AND SPLVOLID.       * 57200000
*          IF SPLUCBPT IS SET, THEN SPLUNIT MUST CONTAIN THE          * 57202000
*          3-CHARACTER UCB NAME.  IF SPLUCBPT IS ZERO, THEN           * 57204000
*          SPLUNIT MUST CONTAIN THE 8-CHARACTER DEVICE TYPE.          * 57206000
*                                                                     * 57208000
* REGISTER CONVENTIONS -- R0  -- WORK REGISTER                        * 57210000
*                         R1  -- WORK REGISTER                        * 57212000
*                         R2  -- WORK REGISTER                        * 57214000
*                         R3  -- WORK REGISTER                        * 57216000
*                         R4  -- WORK REGISTER                        * 57218000
*                         R5  -- WORK REGISTER                        * 57220000
*                         WE  -- WORK/LINK REGISTER                   * 57222000
*                         WF  -- WORK REGISTER                        * 57224000
*                         WG  -- IOB ADDRESS                          * 57226000
*                         R9  -- UNUSED                               * 57228000
*                         R10 -- RB ADDRESS                           * 57230000
*                         R11 -- HCT ADDRESS (BASE1)                  * 57232000
*                         R12 -- BASE REGISTER (BASE2)                * 57234000
*                         R13 -- SPL ADDRESS                          * 57236000
*                                                                     * 57238000
*********************************************************************** 57240000
         EJECT                                                       R4 57242000
*********************************************************************** 57244000
*                                                                     * 57246000
*        HOSPOOL INITIAL ENTRY POINT                                  * 57248000
*                                                                     * 57250000
*********************************************************************** 57252000
         SPACE 5                                                     R4 57254000
         USING S99RB,R10           PROVIDE RB ADDRESSABILITY         R4 57256000
         USING BUFDSECT,WG         PROVIDE IOB ADDRESSABILITY        R4 57258000
         USING SPLDSECT,R13        PROVIDE SPL ADDRESSABILITY        R4 57260000
         SPACE 1                                                     R4 57262000
HOSPOOL $ENTRY BASE=R15            PROVIDE SUBTASK ENTRY             R4 57264000
         STM   R14,R12,12(R13)     SAVE SYSTEM'S REGISTERS           R4 57266000
         SPACE 1                                                     R4 57268000
         DROP  R15                 PROVIDE                           R4 57270000
         LR    BASE2,R15            SUBTASK                          R4 57272000
         USING HOSPOOL,BASE2         ADDRESSABILITY                  R4 57274000
         SPACE 1                                                     R4 57276000
         ST    R1,8(,R13)          STORE FORWARD POINTER             R4 57278000
         ST    R13,4(,R1)          STORE BACKWARD POINTER            R4 57280000
         LR    R13,R1              SWITCH TO NEW SAVE AREA           R4 57282000
         L     BASE1,=V(HASPNUC)   GET HCT ADDRESS                   R4 57284000
         MVI   SPLFLG2,SPL2UNAL    SET ERROR FLAG BYTE               R4 57286000
         EJECT                                                       R4 57288000
*********************************************************************** 57290000
*                                                                     * 57292000
*        CONTRUCT DYNAMIC ALLOCATION PARAMETER LIST                   * 57294000
*                                                                     * 57296000
*********************************************************************** 57298000
         SPACE 1                                                     R4 57300000
         LA    R10,SPLDYNRB        GET RB ADDRESS                    R4 57302000
         ST    R10,SPLDYNAL        SET RB POINTER                    R4 57304000
         MVI   SPLDYNAL,S99RBPND   SET LAST INDICATOR                R4 57306000
         XC    S99RB(20),S99RB     CLEAR RB                          R4 57308000
         MVI   S99RBLN,20          SET RB LENGTH                     R4 57310000
         MVI   S99VERB,S99VRBAL    INDICATE ALLOCATION REQUEST       R4 57312000
         LA    R0,SPLTEXT          SET POINTER TO LIST               R4 57314000
         ST    R0,S99TXTPP          OF TEXT UNIT POINTERS            R4 57316000
         MVI   S99FLG21,SPALFLGS   SET ALLOCATION FLAGS              R4 57318000
         LA    R0,SPLDDTXT         SET POINTER TO                    R4 57320000
         ST    R0,SPLDDTA           DDNAME TEXT UNIT                 R4 57322000
         MVC   SPLDDTXT,SPDDTXT    SET DDNAME TEXT                   R4 57324000
         MVC   SPLDDNAM,SPLVOLID   MOVE DDNAME TO TEXT UNIT          R4 57326000
         LA    R0,SPLDSTXT         SET POINTER TO                    R4 57328000
         ST    R0,SPLDSNTA          DSNAME TEXT UNIT                 R4 57330000
         MVC   SPLDSTXT,SPDSNTXT   SET DSNAME TEXT                   R4 57332000
         MVI   SPLDSNAM,C' '       BLANK OUT ENTIRE DSNAME           JN 57334200
         MVC   SPLDSNAM+1(L'SPLDSNAM-1),SPLDSNAM  (LIKEWISE)         JN 57334300
         MVC   SPLDSNAM(8),$DSNPRFX SET PREFIX (DEFAULT = 'SYS1')    JN 57334400
         LA    R1,SPLDSNAM         SCAN FOR                          JN 57334500
SKIP90   LA    R1,1(,R1)             FIRST BLANK                     JN 57334600
         CLI   0(R1),C' '            FOLLOWING                       JN 57334700
         BNE   SKIP90                PREFIX                          JN 57334800
         MVC   0(8,R1),=CL8'.HASPACE' SET DSNAME FOR HASPACE         JN 57334900
         TM    SPLFLG1,SPL1CKPT    TEST FOR SYS1.HASPCKPT            R4 57336000
         BZ    SKIP100             BR IF NO                          R4 57338000
         MVC   5(4,R1),=CL4'CKPT'      ELSE RESET DSNAME             JN 57340200
         MVC   SPLDDNAM,=CL6'$CHKPT'    AND DDNAME                   R4 57342000
SKIP100  LA    R0,SPLVLTXT         SET POINTER TO                    R4 57344000
         ST    R0,SPLVOLTA          VOLUME SERIAL TEXT UNIT          R4 57346000
         MVC   SPLVLTXT,SPVOLTXT   SET VOLUME SERIAL TEXT            R4 57348000
         LA    R0,SPLDPTXT         SET POINTER TO                    R4 57350000
         ST    R0,SPLDSPTA          DATA SET DISPOSITION TEXT UNIT   R4 57352000
         MVI   SPLDSPTA,S99TUPLN   INDICATE LAST TEXT UNIT POINTER   R4 57354000
         MVC   SPLDPTXT,SPDSPTXT   SET DISP=OLD TEXT                 R4 57356000
         LA    R0,SPLUNTXT         SET POINTER TO                    R4 57358000
         ST    R0,SPLUNITA          UNIT NAME TEXT UNIT              R4 57360000
         MVC   SPLUNTXT,SPUNITXT   SET UNIT NAME TEXT                R4 57362000
         TM    SPLFLG1,SPL1UNAL    TEST FOR UNALLOCATE REQUEST       R4 57364000
         BO    SPUNALOC            BR IF YES                         R4 57366000
         OC    SPLUCBPT,SPLUCBPT   TEST FOR UCB ADDRESS              R4 57368000
         BNZ   SPDYNAL             BR IF YES - UNIT NAME PROVIDED    R4 57370000
         OI    S99FLG21,S99WTUNT+S99OFFLN    ELSE ALLOW              R4 57372000
         MVI   S99FLG22,S99UDEVT              WAIT ON                R4 57374000
         MVI   S99TULNG+1-S99TUNIT+SPLUNTXT,8  OFFLINE UNIT          R4 57376000
         EJECT                                                       R4 57378000
*********************************************************************** 57380000
*                                                                     * 57382000
*        DYNAMIC ALLOCATE SPOOL/CHECKPOINT VOLUME                     * 57384000
*                                                                     * 57386000
*********************************************************************** 57388000
         SPACE 1                                                     R4 57390000
SPDYNAL  LA    R1,SPLDYNAL         POINT TO PARAMETER LIST           R4 57392000
         DYNALLOC                   AND ALLOCATE THE VOLUME          R4 57394000
         LTR   R15,R15             TEST ALLOCATE                     R4 57396000
         BNZ   SPEXIT              BR IF ALLOCATE ERROR              R4 57398000
         NI    SPLFLG2,255-SPL2UNAL  RESET UNALLOCATE FLAG           R4 57400000
         L     R3,CVTPTR           GET CVT ADDRESS                   R4 57402000
         ICM   R4,15,SPLUCBPT      TEST FOR UCB ADDRESS              R4 57404000
         BNZ   SPUCBOK             BR IF PROVIDED                    R4 57406000
         SPACE 1                                                     R4 57408000
*********************************************************************** 57410000
*                                                                     * 57412000
*        LOCATE SPOOL/CHECKPOINT VOLUME UCB                           * 57414000
*                                                                     * 57416000
*********************************************************************** 57418000
         SPACE 1                                                     R4 57420000
         USING CVT,R3              PROVIDE CVT ADDRESSABILITY        R4 57422000
         USING UCBDSECT,R4         PROVIDE UCB ADDRESSABILITY        R4 57424000
         SPACE 1                                                     R4 57426000
         L     R15,CVTILK2         GET ADDRESS OF UCB                R4 57428000
         SH    R15,=H'2'            LOOK-UP TABLE (LESS 2)           R4 57430000
         SPACE 1                                                     R4 57432000
SPNXTUCB LA    R15,2(,R15)         GET NEXT LOOK-UP TABLE ENTRY      R4 57434000
         ICM   R4,3,0(R15)         GET UCB ADDRESS                   R4 57436000
         BZ    SPNXTUCB            IGNORE IF NULL ENTRY              R4 57438000
         CLI   UCBTBYT3,UCB3DACC   TEST DEVICE TYPE                  R4 57440000
         BNE   SPNXTUCB            IGNORE IF NOT DIRECT ACCESS       R4 57442000
         CLC   SPLVOLID,SRTEVOLI   TEST VOLUME SERIAL                R4 57444000
         BNE   SPNXTUCB            IGNORE IF NOT OUR VOLUME          R4 57446000
         ST    R4,SPLUCBPT          ELSE STORE UCB ADDRESS           R4 57448000
         SPACE 1                                                     R4 57450000
         USING QSEDSECT,R1         PROVIDE QSE ADDRESSABILITY        R4 57452000
         SPACE 1                                                     R4 57454000
SPUCBOK  L     R1,$QSE1            POINT TO 1ST QSE                  R4 57456000
         TM    QSEFLAGS,QSELAST    TEST FOR UNI-SYSTEM NODE          R4 57458000
         BO    SPOBTAIN            BR IF YES                         R4 57460000
         TM    UCBTBYT2,UCBRR      TEST FOR SHARED DASD              R4 57462000
         BO    SPOBTAIN            BR IF YES                         R4 57464000
         AH    R1,$QSEL            POINT TO 2ND QSE                 R41 57464100
         TM    QSEFLAGS,QSELAST    MORE THAN 2 CPU'S DEFINED...     R41 57464200
         BNO   SPUCBERR            BR IF YES, MUST BE SHARED        R41 57464300
         L     R5,UCBEXTPT         GET UCB EXTENSION ADDRESS,       R41 57464400
         USING UCBCMEXT,R5          AND SET ADDRESSABILTY           R41 57464500
         TM    UCBFLP1,UCBSHRUP    IS SHARED-UP GENERATED...        R41 57464600
         BO    SPOBTAIN            BR IF YES, TEST NEXT UCB         R41 57464700
SPUCBERR MVC   SPLMSG,SPSHRMSG      ELSE                            R41 57466000
         MVC   SPLSHRVL,SPLVOLID     INFORM                          R4 57468000
         BAL   WE,SPWTO               OPERATOR                       R4 57470000
         B     SPUNALOC                AND BR TO EXIT                R4 57472000
         SPACE 1                                                     R4 57474000
         DROP  R1                  KILL QSE ADDRESSABILITY           R4 57476000
         DROP  R5                  KILL UCB EXT. ADDRESSABILITY     R41 57476100
         SPACE 1                                                    R41 57478000
SPOBTAIN DS    0H                                                    JN 57480200
         MVI   SPLCMLST,193            PREPARE                       R4 57482000
         XC    SPLCMLST+1(3),SPLCMLST+1 CAMLST                       R4 57484000
         LA    R0,SPLDSNAM               TO                          R4 57486000
         ST    R0,SPLCMLST+4              OBTAIN                     R4 57488000
         LA    R0,SPLVOLID                 SPOOL/CHECKPOINT          R4 57490000
         ST    R0,SPLCMLST+8                VOLUME                   R4 57492000
         LA    R0,SPLDSCB                    EXTENT                  R4 57494000
         ST    R0,SPLCMLST+12                 DATA                   R4 57496000
         OBTAIN SPLCMLST           GET SPOOL/CHECKPOINT DSCB         R4 57498000
         LTR   R15,R15             TEST OBTAIN                       R4 57500000
         BZ    SPOBTOK             BR IF OBTAIN SUCCESSFUL           R4 57502000
         MVC   SPLMSG,SPOBTERM     MOVE MESSAGE TO WORK AREA         R4 57504000
         MVC   SPLOBTVL,SPLVOLID   FILL IN                           R4 57506000
         SRL   R15,1                PERTINENT                        R4 57508000
         LA    R2,SPATAB-2(R15)      INFORMATION                     R4 57510000
         MVC   SPLOBTCC,0(R2)         AND                            R4 57512000
         MVC   SPLOBTDS,SPLDSNAM       INFORM                        R4 57514000
         BAL   WE,SPWTO                 OPERATOR                     R4 57516000
         OI    SPLFLG2,SPL2OBT     INDICATE OBTAIN ERROR             R4 57518000
         B     SPUNALOC             AND BR TO EXIT                   R4 57520000
         SPACE 1                                                     R4 57522000
SPOBTOK  MVC   SPLSTRCC,SPLDSCB+63 EXTRACT EXTENT LIMITS             R4 57524000
         TM    SPLFLG1,SPL1CKPT    TEST FOR SYS1.HASPCKPT            R4 57526000
         BO    SPTEDVLS            BR IF YES                         R4 57528000
         EJECT                                                      R41 57530000
*********************************************************************** 57532000
*                                                                     * 57534000
*        CONSTRUCT DIRECT ACCESS DCB AND DEB                          * 57536000
*                                                                     * 57538000
*********************************************************************** 57540000
         SPACE 1                                                     R4 57542000
         USING DCBDSECT,R1         PROVIDE DCB ADDRESSABILITY        R4 57544000
         USING DEBDSECT,R2         PROVIDE DEB ADDRESSABILITY        R4 57546000
         SPACE 1                                                     R4 57548000
         LA    R1,SPLDCB           GET DCB ADDRESS                   R4 57550000
         LA    R2,SPLDEB           GET DEB ADDRESS                   R4 57552000
         MVC   DCBTIOT((3+8)*4),SPDCBDEB  MOVE IN SKELETON DCB/DEB   R4 57554000
         ST    R2,DCBDEBAD         SET DEB ADDRESS IN DCB            R4 57556000
         MVC   DEBTCBB,SPLTCBPT+1  SET TCB ADDRESS IN DEB            R4 57558000
         STCM  R1,7,DEBDCBB        SET DCB ADDRESS IN DEB            R4 57560000
         MVC   DEBAPPB,CVTXAPG+1   DON'T USE JES2 APPENDAGES         R4 57562000
         LA    R2,DEBBASND         POINT TO 1ST DEB EXTENT           R4 57564000
         SPACE 1                                                     R4 57566000
         USING DEBDASD,R2          PROVIDE DEB EXTENT ADDRESSABILITY R4 57568000
         SPACE 1                                                     R4 57570000
         MVC   DEBSTRCC(8),SPLSTRCC  MOVE IN DEB EXTENT SKELETON     R4 57572000
         STH   R4,DEBUCBAD+2       SET UCB ADDRESS IN DEB            R4 57574000
         SPACE 1                                                     R4 57576000
         DROP  R1,R2               KILL DCB, DEB ADDRESSABILITY      R4 57578000
         EJECT                                                       R4 57580000
*********************************************************************** 57582000
*                                                                     * 57584000
*        OBTAIN VALUES FOR TED CONSTRUCTION                           * 57586000
*                                                                     * 57588000
*********************************************************************** 57590000
         SPACE 1                                                     R4 57592000
SPTEDVLS SLR   R14,R14             GET DEVICE TYPE                   R4 57594000
         IC    R14,UCBTBYT4         FROM UCB                         R4 57596000
         L     R3,CVTZDTAB         POINT TO DEVICE                   R4 57598000
         IC    R14,0(R3,R14)        CHARACTERISTICS TABLE            R4 57600000
         ALR   R14,R3                ENTRY FOR DEVICE                R4 57602000
         SPACE 1                                                     R4 57604000
         DROP  R3,R4               KILL CVT, UCB ADDRESSABILITY      R4 57606000
         USING SPZ,R14             PROVIDE TBL ENTRY ADDRESSABILITY  R4 57608000
         SPACE 1                                                     R4 57610000
         LH    R6,$BUFSIZE         ASSUME SPOOL BUFFER SIZE    @OZ20010 57610500
         TM    SPLFLG1,SPL1CKPT    TEST FOR CKPT DATA SET      @OZ20010 57611000
         BNO   *+8                 BR IF NORMAL SPOOL ALLOC    @OZ20010 57611500
         LH    R6,=H'4096'         ELSE, USE 4K AS RECORD SIZE @OZ20010 57612000
         LR    R5,R6               SET NOT-LAST-RECORD LENGTH        R4 57614000
         SLR   R7,R7               CLEAR R7, AND R10                 R4 57616000
         LR    R10,R7               FOR INSERTS                      R4 57618000
         IC    R7,SPZU             GET SUBTRAHEND FOR UNKEYED BLOCKS R4 57620000
         IC    R10,SPZL            GET LAST-BLOCK OVERHEAD           R4 57622000
         TM    SPZF,SPZF2305       TEST FOR 2305                     R4 57624000
         BZ    SKIP110             BR IF NO                          R4 57626000
         LH    R10,SPZO             ELSE GET HALFWORD OVERHEAD       R4 57628000
SKIP110  ALR   R6,R10              ADD OVERHEAD, SUBTRAHEND UNKEYED  R4 57630000
         SLR   R6,R7                FOR TRUE LAST-BLOCK LENGTH       R4 57632000
         TM    SPZF,SPZFT          SHOULD WE APPLY TOLERANCE...      R4 57634000
         BZ    SKIP120             BR IF NO                          R4 57636000
         MH    R5,SPZT              ELSE MULTIPLY BY TOLERANCE       R4 57638000
         SRL   R5,9                  AND DIVIDE BY 512               R4 57640000
SKIP120  TM    SPZF,SPZF2305       TEST FOR 2305                     R4 57642000
         BO    SKIP130             BR IF YES                         R4 57644000
         IC    R10,SPZNL            ELSE GET NOT-LAST-BLOCK OVERHEAD R4 57646000
SKIP130  ALR   R5,R10              ADD OVERHEAD, SUBTRAHEND UNKEYED  R4 57648000
         SLR   R5,R7                FOR NOT-LAST-BLOCK LENGTH        R4 57650000
         LH    R7,SPZR             GET TRACK LENGTH                  R4 57652000
         SLR   R7,R6               TAKE AWAY LAST-BLOCK LENGTH       R4 57654000
         SLR   R6,R6               GET COUNT OF                      R4 57656000
         DR    R6,R5                NOT-LAST BLOCKS                  R4 57658000
         LA    R6,1(,R7)           ADD 1 FOR RECORDS PER TRACK       R4 57660000
         STH   R6,SPLTNRT          STORE RECORDS PER TRACK           R4 57662000
         LH    R5,SPZH             GET NUMBER OF HEADS PER CYLINDER  R4 57664000
         ST    R5,SPLTNTC          STORE NUMBER OF HDS PER CYLINDER  R4 57666000
         LH    R7,SPZA             GET NUMBER OF ALTERNATE TRACKS    R4 57668000
         SLR   R6,R6               COMPUTE NUMBER                    R4 57670000
         DR    R6,R5                OF ALTERNATE CYLINDERS           R4 57672000
         LH    R6,SPZC             GET NUMBER OF CYLINDERS           R4 57674000
         SLR   R6,R7                LESS ALTERNATES                  R4 57676000
         MR    R4,R6               GET NUMBER OF TRACKS IN VOLUME    R4 57678000
         LH    R7,$NUMTGV          GET NUMBER OF GROUPS PER VOLUME   R4 57680000
         DR    R4,R7               STORE NUMBER OF                   R4 57682000
         STH   R5,SPLTNTG           TRACKS PER GROUP                 R4 57684000
         SPACE 1                                                     R4 57686000
         DROP  R14                 KILL TABLE ENTRY ADDRESSABILITY   R4 57688000
         EJECT                                                       R4 57690000
         TM    SPLFLG1,SPL1CKPT    TEST FOR SYS1.HASPCKPT            R4 57692000
         BO    SPGRPS              BR IF YES                         R4 57694000
         LTR   R5,R5               TEST TRACKS PER GROUP COUNT       R4 57696000
         BNZ   SPBLDIOB            BR IF &NUMTGV VALID FOR VOLUME    R4 57698000
         MVC   SPLMSG,SPTGVERM      ELSE ISSUE                       R4 57700000
         MVC   SPLFMTV3,SPLVOLID     ERROR MESSAGE                   R4 57702000
         BAL   WE,SPWTO               TO OPERATOR                    R4 57704000
         B     SPUNALOC                AND BR TO EXIT                R4 57706000
         SPACE 1                                                     R4 57708000
*********************************************************************** 57710000
*                                                                     * 57712000
*        CONSTRUCT DIRECT ACCESS IOB                                  * 57714000
*                                                                     * 57716000
*********************************************************************** 57718000
         SPACE 1                                                     R4 57720000
SPBLDIOB LA    WG,SPLIOB           POINT TO IOB                      R4 57722000
         XC    IOBFLAG1(11*4),IOBFLAG1  CLEAR IOB                    R4 57724000
         MVI   IOBFLAG1,X'C2'      SET UNRELATED, CMD+DATA CHAINING  R4 57726000
         LA    R0,SPLDCB           SET POINTER TO                    R4 57728000
         ST    R0,IOBDCBPT          DIRECT ACCESS DCB                R4 57730000
         LA    R0,SPLECB           SET POINTER TO                    R4 57732000
         ST    R0,IOBECBPT          EXCP IOB                         R4 57734000
         MVC   IOBSEEK+8(2),$BUFSIZE  SET SPOOL BUFFER SIZE          R4 57736000
         TM    SPLFLG1,SPL1FMT     TEST FORMATTING REQUIREMENT       R4 57738000
         BO    SPFORMAT            BR IF SET                         R4 57740000
         EJECT                                                       R4 57742000
*********************************************************************** 57744000
*                                                                     * 57746000
*        READ COUNT PORTION OF 1ST RECORD ON LAST TRACK OF 1ST        * 57748000
*        EXTENT OF VOLUME TO DETERMINE WHETHER OR NOT VOLUME          * 57750000
*        IS CORRECTLY FORMATTED.                                      * 57752000
*                                                                     * 57754000
*********************************************************************** 57756000
         SPACE 1                                                     R4 57758000
         LA    R0,SPLCCWS          SET POINTER TO                    R4 57760000
         ST    R0,IOBSTART          CHANNEL PROGRAM                  R4 57762000
         MVC   IOBSEEK+2(4),SPLUPLIM  SET CCHH FOR READ COUNT        R4 57764000
         MVC   SPLCCWS(3*8),SPREADCT  MOVE IN SKELETON CHANNEL PGM   R4 57766000
         LA    R0,IOBSEEK+2        SET POINTER                       R4 57768000
         STCM  R0,7,SPLCCW1+1       TO CCHH                          R4 57770000
         LA    R0,SPLCCW1          SET ADDRESS                       R4 57772000
         STCM  R0,7,SPLCCW2+1       FOR TIC *-8                      R4 57774000
         LA    R0,SPLRDCT          SET ADDRESS OF                    R4 57776000
         STCM  R0,7,SPLCCW3+1       READ-IN AREA                     R4 57778000
         BAL   WE,SPEXCP           GO TRY TO READ COUNT              R4 57780000
         BO    SKIP140             BR IF READ OK                     R4 57782000
         OI    SPLFLG2,SPL2RDER     ELSE INDICATE READ ERROR         R4 57784000
SKIP140  MVI   SPLRDCT+4,0         SET READ-IN RECORD COUNT TO 0     R4 57786000
         CLC   SPLRDCT,IOBSEEK+2   COMPARE COUNT WITH EXPECTED       R4 57788000
         BE    SKIP150             BR IF EQUAL                       R4 57790000
         OI    SPLFLG2,SPL2RDER     ELSE INDICATE READ ERROR         R4 57792000
SKIP150  TM    SPLFLG1,SPL1NFMT    TEST FORMATTING REQUIREMENT       R4 57794000
         BO    SPGRPS              BR IF FORMATTING NOT ALLOWED      R4 57796000
         TM    SPLFLG2,SPL2RDER    TEST FOR READ ERROR               R4 57798000
         BZ    SPGRPS              BR IF NO                          R4 57800000
         NI    SPLFLG2,255-SPL2RDER  ELSE RESET READ ERROR FLAG      R4 57802000
         EJECT                                                       R4 57804000
*********************************************************************** 57806000
*                                                                     * 57808000
*        FORMAT SYS1.HASPACE ON SPOOL VOLUME                          * 57810000
*                                                                     * 57812000
*********************************************************************** 57814000
         SPACE 1                                                     R4 57816000
SPFORMAT MVC   SPLMSG,SPFMTMSG     ISSUE                             R4 57818000
         MVC   SPLFMTV1,SPLVOLID    FORMATTING MSG                   R4 57820000
         BAL   WE,SPWTO              TO OPERATOR                     R4 57822000
         LH    R2,SPLTNRT          GET NUMBER OF RECORDS PER TRACK   R4 57824000
         LR    R3,R2               SAVE IN R3                        R4 57826000
         SLL   R2,4                COMPUTE                           R4 57828000
         LA    R0,16(,R2)           WORK AREA                        R4 57830000
         ST    R0,SPLGMAIN           SIZE                            R4 57832000
         GETMAIN R,LV=(0)          OBTAIN WORK AREA                  R4 57834000
         ST    R1,IOBSTART         SET CHANNEL PROGRAM ADDRESS       R4 57836000
         ST    R1,8(,R1)           SET UP                            R4 57838000
         MVI   8(R1),8              TIC COMMAND                      R4 57840000
         MVC   0(8,R1),SPREADCT    SET                               R4 57842000
         LA    R0,IOBSEEK+2         SEARCH                           R4 57844000
         STCM  R0,7,1(R1)            COMMAND                         R4 57846000
         LA    R1,8(,R1)           POINT 8 BEFORE 1ST WRITE CCW      R4 57848000
         LR    R2,R3               GET NUMBER OF RECORDS PER TRACK   R4 57850000
         SLL   R2,3                POINT TO 8 BEFORE                 R4 57852000
         ALR   R2,R1                1ST COUNT FIELD                  R4 57854000
         ICM   R2,8,=X'1D'         SET WRITE COUNT-KEY-DATA          R4 57856000
         LR    R0,R3               GET CCW COUNT                     R4 57858000
         L     R3,SPFDATL          GET RIGHT HALF OF CCW             R4 57860000
         SPACE 1                                                     R4 57862000
SKIP160  AL    R2,=F'8'            CONSTRUCT                         R4 57864000
         LA    R1,8(,R1)            FORMAT                           R4 57866000
         STM   R2,R3,0(R1)           CHANNEL                         R4 57868000
         BCT   R0,SKIP160             PROGRAM                        R4 57870000
         SPACE 1                                                     R4 57872000
         NI    4(R1),X'BF'         TURN OFF LAST CCW'S CC FLAG       R4 57874000
         ST    R1,SPLCFLDS         SAVE PTR TO 8 BEFORE 1ST CT FIELD R4 57876000
         MVC   IOBSEEK+2(4),SPLOWLIM  STARTING CCHHRKDD              R4 57878000
         EJECT                                                       R4 57880000
SPFMTRK  LH    R0,SPLTNRT          GET NUMBER OF COUNT FIELDS        R4 57882000
         L     R1,SPLCFLDS         POINT TO 8 BEFORE THE FIRST       R4 57884000
         ICM   R2,15,IOBSEEK+2     STARTING                          R4 57886000
         ICM   R3,15,IOBSEEK+6      CCHHRKDD                         R4 57888000
         SPACE 1                                                     R4 57890000
SKIP170  AL    R3,=FS24'1'         ADD 1 TO RECORD NUMBER            R4 57892000
         LA    R1,8(,R1)           POINT TO NEXT COUNT FIELD         R4 57894000
         STM   R2,R3,0(R1)         SET COUNT FIELD                   R4 57896000
         BCT   R0,SKIP170          LOOP TO SET THE REST              R4 57898000
         SPACE 1                                                     R4 57900000
         BAL   WE,SPEXCP           GO FORMAT THE TRACK               R4 57902000
         BZ    SPFMTERR            BR IF I/O ERROR                   R4 57904000
         SLR   R2,R2               GET CURRENT                       R4 57906000
         ICM   R2,3,IOBSEEK+4       HEAD NUMBER                      R4 57908000
         LA    R2,1(,R2)           ADD 1 TO IT                       R4 57910000
         C     R2,SPLTNTC          TEST FOR MAX                      R4 57912000
         BL    SKIP180             BR IF NO                          R4 57914000
         SR    R2,R2                ELSE MAKE IT ZERO (AND SET CC)   R4 57916000
SKIP180  STCM  R2,3,IOBSEEK+4      SET NEW HEAD NUMBER               R4 57918000
         BNZ   SKIP190             BR IF SAME CYLINDER               R4 57920000
         ICM   R2,3,IOBSEEK+2       ELSE                             R4 57922000
         LA    R2,1(,R2)             ADD 1                           R4 57924000
         STCM  R2,3,IOBSEEK+2         TO CYLINDER NUMBER             R4 57926000
SKIP190  CLC   SPLUPLIM(4),IOBSEEK+2  IS FORMATTING COMPLETE...      R4 57928000
         BNL   SPFMTRK             BR IF NO                          R4 57930000
         SPACE 1                                                     R4 57932000
         BAL   WE,SPFREEWK         FREE WORK STORAGE                 R4 57934000
         B     SPGRPS              THEN BR TO GET TRK GROUP INFO     R4 57936000
         SPACE 1                                                     R4 57938000
SPFMTERR MVC   SPLMSG,SPFMTERM     ISSUE                             R4 57940000
         MVC   SPLFMTV2,SPLVOLID    ERROR MSG                        R4 57942000
         BAL   WE,SPWTO              TO OPERATOR                     R4 57944000
         OI    SPLFLG2,SPL2FMT     INDICATE I/O ERROR                R4 57946000
         BAL   WE,SPFREEWK         FREE WORK STORAGE                 R4 57948000
         B     SPUNALOC             AND BR TO EXIT                   R4 57950000
         SPACE 1                                                     R4 57952000
SPFREEWK L     R0,SPLGMAIN         FREE                              R4 57954000
         L     R1,IOBSTART          WORK                             R4 57956000
         FREEMAIN R,LV=(0),A=(1)     STORAGE                         R4 57958000
         BR    WE                  THEN RETURN                       R4 57960000
         EJECT                                                       R4 57962000
*********************************************************************** 57964000
*                                                                     * 57966000
*        OBTAIN SYS1.HASPCKPT/SYS1.HASPACE EXTENT INFORMATION         * 57968000
*                                                                     * 57970000
*        R1 LEFT WITH NUMBER OF 1ST USABLE TRACK GROUP                * 57972000
*        R2 LEFT WITH COUNT OF USABLE TRACK GROUPS                    * 57974000
*                                                                     * 57976000
*********************************************************************** 57978000
         SPACE 1                                                     R4 57980000
SPGRPS   LA    R0,SPLTGM           SET                               R4 57982000
         LH    R1,$NUMTGV           TRACK                            R4 57984000
         LA    R1,7(,R1)             GROUP                           R4 57986000
         SRL   R1,3                   MAP                            R4 57988000
         SLR   R15,R15                 TO                            R4 57990000
         MVCL  R0,R14                   ZERO                         R4 57992000
         LH    R1,SPLOWLIM         R14 = TRACK                       R4 57994000
         M     R0,SPLTNTC                 NUMBER                     R4 57996000
         AH    R1,SPLOWLIM+2               OF 1ST                    R4 57998000
         LR    R14,R1                       TRACK                    R4 58000000
         STH   R14,SPLOWTRK        SET LOWER ABSOLUTE TRACK NUMBER   R4 58002000
         LH    R2,SPLTNTG          R1 = TRACK                        R4 58004000
         DR    R0,R2                     GROUP NUMBER                R4 58006000
         LTR   R0,R0                      OF 1ST                     R4 58008000
         BZ    SKIP200                     USABLE                    R4 58010000
         LA    R1,1(,R1)                    TRACK GROUP              R4 58012000
SKIP200  LH    R15,SPLUPLIM        R15 = TRACK NUMBER                R4 58014000
         MH    R15,SPLTNTC+2              OF LAST                    R4 58016000
         AH    R15,SPLUPLIM+2              TRACK                     R4 58018000
         STH   R15,SPLUPTRK        SET UPPER ABSOLUTE TRACK NUMBER   R4 58020000
         LA    R0,1(,R15)          SET NUMBER                        R4 58022000
         SLR   R0,R14               OF TRACKS                        R4 58024000
         STH   R0,SPLNMTRK           IN EXTENT                       R4 58026000
         LH    R3,$NUMTGV          R3 = UNUSABLE                     R4 58028000
         MH    R3,SPLTNTG                TRACKS                      R4 58030000
         BCTR  R3,0                       BEYOND                     R4 58032000
         SR    R3,R15                      END                       R4 58034000
         BNM   SKIP210                      OF                       R4 58036000
         SLR   R3,R3                         EXTENT                  R4 58038000
SKIP210  SLR   R2,R2               R3 = UNUSABLE                     R4 58040000
         LH    R0,SPLTNTG                TRACK GROUPS                R4 58042000
         DR    R2,R0                      CAUSED                     R4 58044000
         LTR   R2,R2                       BY                        R4 58046000
         BZ    SKIP220                      UPPER                    R4 58048000
         LA    R3,1(,R3)                     EXTENT                  R4 58050000
SKIP220  LH    R2,$NUMTGV          R2 = NUMBER OF                    R4 58052000
         SLR   R2,R1                     USABLE TRACK                R4 58054000
         SR    R2,R3                      GROUPS                     R4 58056000
         ST    R2,SPLNUMTG         SET COUNT OF USABLE TRACK GROUPS  R4 58058000
         BNP   SPERRTST            EXIT IF NONE                      R4 58060000
         TM    SPLFLG1,SPL1CKPT    TEST FOR SYS1.HASPCKPT            R4 58062000
         BO    SPERRTST            BR IF YES                         R4 58064000
         EJECT                                                       R4 58066000
*********************************************************************** 58068000
*                                                                     * 58070000
*        PREPARE BIT MAP FOR SPOOL VOLUME                             * 58072000
*                                                                     * 58074000
*********************************************************************** 58076000
         SPACE 1                                                     R4 58078000
         LA    R14,SPLTGM          CLEAR                             R4 58080000
         LH    R15,$NUMTGV          VOLUME                           R4 58082000
         LA    R15,7(,R15)           TRACK                           R4 58084000
         SRL   R15,3                  GROUP                          R4 58086000
         SLR   R5,R5                   BIT                           R4 58088000
         MVCL  R14,R4                   MAP                          R4 58090000
         SLDL  R0,29               R15 = BYTE ADDRESS                R4 58092000
         LA    R15,SPLTGM                 IN VOLUME BIT MAP          R4 58094000
         ALR   R15,R0                      OF FIRST USABLE           R4 58096000
         SRL   R1,29                        TRACK GROUP              R4 58098000
         SPACE 1                                                     R4 58100000
SPNXTGRP IC    R3,SPBITBLE(R1)     GET BIT INTO R3                   R4 58102000
         EX    R3,SPBITSET         OR BIT INTO TRACK GROUP MAP       R4 58104000
         LA    R1,1(,R1)           ADD 1 TO BIT NUMBER               R4 58106000
         N     R1,=F'7'            ZERO ALL BUT LO-ORDER 3 BITS      R4 58108000
         BNZ   SKIP230             BR IF BIT IN SAME BYTE            R4 58110000
         LA    R15,1(,R15)          ELSE ADD 1 TO BYTE ADDRESS       R4 58112000
SKIP230  BCT   R2,SPNXTGRP         LOOP THRU ALL TRACK GROUPS        R4 58114000
         SPACE 1                                                     R4 58116000
         B     SPERRTST            THEN EXIT                         R4 58118000
         SPACE 1                                                     R4 58120000
SPBITSET OI    0(R15),*-*          *** EXECUTE ONLY ***              R4 58122000
         EJECT                                                       R4 58124000
SPERRTST CLI   SPLFLG2,0           TEST FOR ANY ERRORS               R4 58126000
         BE    SPEXIT              BR IF NO                          R4 58128000
         SPACE 1                                                     R4 58130000
*********************************************************************** 58132000
*                                                                     * 58134000
*        ERROR DETECTED -- UNALLOCATE VOLUME                          * 58136000
*                                                                     * 58138000
*********************************************************************** 58140000
         SPACE 1                                                     R4 58142000
SPUNALOC OC    SPLUCBPT,SPLUCBPT   TEST FOR UCB ADDRESS              R4 58144000
         BZ    SPEXIT              BR IF NO (VOLUME NEVER ALLOC'D)   R4 58146000
         LA    R10,SPLDYNRB        GET RB ADDRESS                   R41 58147000
         MVI   S99VERB,S99VRBUN    INDICATE UNALLOCATE REQUEST       R4 58148000
         OI    SPLFLG2,SPL2UNAL    INDICATE VOLUME UNALLOCATED      R41 58149000
         LA    R1,SPLDYNAL         POINT TO PARAMETER LIST           R4 58150000
         DYNALLOC                   AND UNALLOCATE THE VOLUME        R4 58152000
         SPACE 5                                                     R4 58156000
*********************************************************************** 58158000
*                                                                     * 58160000
*        EXIT FROM SUBTASK                                            * 58162000
*                                                                     * 58164000
*********************************************************************** 58166000
         SPACE 1                                                     R4 58168000
SPEXIT   L     R13,SPLSAVE+4       GET SYSTEM'S SAVE AREA ADDRESS    R4 58172000
         LM    R14,R12,12(R13)     RESTORE SYSTEM'S REGISTERS        R4 58192000
         BR    R14                  AND RETURN                       R4 58194000
         EJECT                                                       R4 58196000
*********************************************************************** 58198000
*                                                                     * 58200000
*        SPEXCP -- EXCP SUBROUTINE                                    * 58202000
*                                                                     * 58204000
*********************************************************************** 58206000
         SPACE 1                                                     R4 58208000
SPEXCP   EXCP  SPLIOB              INITIATE I/O OPERATION            R4 58210000
         WAIT  ECB=SPLECB          WAIT FOR I/O TO COMPLETE          R4 58212000
         TM    SPLECB,X'20'        TEST FOR ERROR                    R4 58214000
         BR    WE                  RETURN WITH CC SET                R4 58216000
         SPACE 3                                                     R4 58218000
*********************************************************************** 58220000
*                                                                     * 58222000
*        SPWTO -- SUBROUTINE TO ISSUE MESSAGE TO OPERATOR             * 58224000
*                                                                     * 58226000
*********************************************************************** 58228000
         SPACE 1                                                     R4 58230000
SPWTO   $$WTO  SPLMSG              ISSUE MESSAGE TO OPERATOR         R4 58232000
         BR    WE                  THEN RETURN                       R4 58234000
         SPACE 1                                                     R4 58236000
         DROP  ,                   KILL ALL ADDRESSABILITY           R4 58238000
         SPACE 5                                                     R4 58240000
         LTORG                                                       R4 58242000
         EJECT                                                       R4 58244000
SPALFLGS EQU   S99WTVOL+S99NORES+S99MOUNT  ALLOCATION FLAGS          R4 58246000
         SPACE 1                                                     R4 58248000
SPDCBDEB DS    0F                  DCB/DEB SKELETONS                 R4 58250000
         DC    AL2(0),AL1(DCBMRECP+DCBMRAPG)     DCBTIOT, DCBMACRF   R4 58252000
         DC    AL1(0),A(0),AL1(DCBOFOPN),AL3(0)  DCBOFLGS            R4 58254000
         DC    A(0),AL1(4),AL3(0)                DEBTCBAD, DEBAMLNG  R4 58256000
         DC    AL1(DEBDSMOD+DEBDCB),AL3(0)       DEBOFLGS            R4 58258000
         DC    AL1(DEBINOUT),AL3(0)              DEBINOUT            R4 58260000
         DC    AL1(1),AL3(0),A(0)                DEBNMEXT            R4 58262000
         DC    AL1(1*16+15),AL3(0)               DEBPROTG/DEBDEBID   R4 58264000
         DC    AL1(4),AL3(0)                     DEBEXSCL            R4 58266000
         SPACE 1                                                     R4 58268000
SPREADCT CCW   X'31',*-*,X'40',5   SEARCH ID EQUAL                   R4 58270000
         CCW   8,*-8,0,1           TIC *-8                           R4 58272000
         CCW   X'12',*-*,0,8       READ COUNT                        R4 58274000
         SPACE 1                                                     R4 58276000
SPDDTXT  DC    AL2(DALDDNAM,1,7)   MODEL DDNAME TEXT                 R4 58278000
         DC    C'$'                1ST CHARACTER OF DDNAME           R4 58280000
SPDSNTXT DC    AL2(DALDSNAM,1,13)  MODEL DSNAME TEXT                 R4 58282000
SPVOLTXT DC    AL2(DALVLSER,1,6)   MODEL VOLUME SERIAL TEXT          R4 58284000
SPUNITXT DC    AL2(DALUNIT,1,3)    MODEL UNIT NAME TEXT              R4 58286000
SPDSPTXT DC    AL2(DALSTATS,1,1),AL1(1)  MODEL DISPOSITION TEXT      R4 58288000
         SPACE 1                                                     R4 58290000
SPFDATL  DC    0F'0',X'60',AL3(8)  RIGHT HALF OF CCW                 R4 58292000
         SPACE 1                                                     R4 58294000
SPATAB   DC    C'4 8 121620'       OBTAIN ERROR CC TABLE       @OZ18393 58296000
SPBITBLE DC    X'8040201008040201' BITS-BY-BIT NUMBER TABLE          R4 58298000
         SPACE 2                                                     R4 58300000
*********************************************************************** 58302000
*                                                                     * 58304000
*        DEVICE CHARACTERISTICS TABLE ENTRY DSECT                     * 58306000
*                                                                     * 58308000
*********************************************************************** 58310000
         SPACE 1                                                     R4 58312000
SPZ      DSECT                     IECZDTAB DUMMY SECTION            R4 58314000
SPZC     DS    H                   NUMBER OF CYLINDERS PER VOLUME    R4 58316000
SPZH     DS    H                   NUMBER OF TRACKS PER CYLINDER     R4 58318000
SPZR     DS    H                   MAXIMUM TRACK LENGTH              R4 58320000
SPZO     DS    0H                  BLOCK OVERHEAD -- 2305            R4 58322000
SPZNL    DS    X                   BLOCK OVERHEAD -- KEYED           R4 58324000
SPZL     DS    X                   BLOCK OVERHEAD -- KEYED LAST      R4 58326000
SPZU     DS    X                   BLOCK OVERHEAD -- UNKEYED         R4 58328000
SPZF     DS    X                   FLAGS --                          R4 58330000
SPZFT    EQU   1                      APPLY TOLERANCE FACTOR         R4 58332000
SPZF2305 EQU   8                      DEVICE IS 2305                 R4 58334000
SPZT     DS    H                   TOLERANCE FACTOR IF SPZFT         R4 58336000
SPZA     DS    H                   NUMBER OF ALTERNATE TRACKS        R4 58338000
         SPACE 1                                                     R4 58340000
HASPMISC CSECT                     END OF IECZDTAB DUMMY SECTION     R4 58342000
         EJECT                                                       R4 58344000
        $MID   414                 SET MESSAGE NUMBER                R4 58346000
SPOBTERM WTO   '&MID.OBTAIN FAILED FOR ********.******** ON ****** WITHC58348000
                CC **',MF=L                                         R41 58350000
SPLOBTDS EQU   *-38-SPOBTERM+SPLMSG,17  DATA SET NAME               R41 58352000
SPLOBTVL EQU   *-17-SPOBTERM+SPLMSG,6   VOLUME SERIAL                R4 58354000
SPLOBTCC EQU    *-2-SPOBTERM+SPLMSG,2   COMPLETION CODE              R4 58356000
         SPACE 2                                                     R4 58358000
        $MID   418                 SET MESSAGE NUMBER                R4 58360000
SPFMTERM WTO   '&MID.PERM I/O ERROR ON ****** WHILE FORMATTING',MF=L R4 58362000
SPLFMTV2 EQU   *-23-SPFMTERM+SPLMSG,6   VOLUME SERIAL                R4 58364000
         SPACE 2                                                     R4 58366000
        $MID   423                 SET MESSAGE NUMBER                R4 58368000
SPFMTMSG WTO   '&MID.****** IS BEING FORMATTED',MF=L                 R4 58370000
SPLMSGID EQU   *-34-SPFMTMSG+SPLMSG,1   MESSAGE ID CHARACTER         R4 58372000
SPLFMTV1 EQU   *-25-SPFMTMSG+SPLMSG,6   VOLUME SERIAL                R4 58374000
         EJECT                                                       R4 58376000
        $MID   438                 SET MESSAGE NUMBER                R4 58378000
SPTGVERM WTO   '&MID.&&NUMTGV EXCEEDS TRACKS ON VVVVVV',MF=L         R4 58380000
SPLFMTV3 EQU   *-6-SPTGVERM+SPLMSG,6  VOLUME SERIAL                  R4 58382000
         SPACE 2                                                     R4 58384000
        $MID   449                 SET MESSAGE NUMBER                R4 58386000
SPSHRMSG WTO   '&MID.VVVVVV MUST BE MOUNTED ON SHAREABLE DEVICE',    R4C58388000
               MF=L                                                  R4 58390000
SPLSHRVL EQU   *-42-SPSHRMSG+SPLMSG,6  VOLUME SERIAL                 R4 58392000
         SPACE 2                                                     R4 58394000
$MISCLEN $DLENGTH                  COMPUTE CONTROL SECTION LENGTH    R4 58396000
         SPACE 5                                                     R4 58398000
APARNUM  DC    CL5'32185'          APAR NUMBER                          58399998
         END   ,                                                     R4 58400000
