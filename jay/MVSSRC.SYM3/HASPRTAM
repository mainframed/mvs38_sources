RTAM     TITLE 'HASP REMOTE SERVICES PROLOG'                            20000500
*********************************************************************** 20001000
*                                                                     * 20001500
* MODULE NAME = HASJES20 (HASPRTAM CSECT)                             * 20002000
*                                                                     * 20002500
* DESCRIPTIVE NAME = HASPRTAM CSECT OF JES2 MAIN MODULE               * 20003000
*                                                                     * 20003500
* COPYRIGHT = NONE                                                    * 20004100
*                                                                     * 20004700
* STATUS = OS/VS2 MVS   --  SEE &VERSION (BELOW) FOR JES2 LEVEL       * 20005000
*                                                                     * 20005500
* FUNCTION = HASPRTAM CONSISTS OF RTAM SUBROUTINES AND TWO HASP       * 20006000
*            PROCESSORS (SEE ENTRY POINTS) WHICH PROVIDE ACCESS       * 20006500
*            TO ALL REMOTE TERMINALS.  THE HASP INPUT AND OUTPUT      * 20007000
*            PROCESSORS (SEE HASPRDR AND HASPPRPU MODULES) REQUEST    * 20007500
*            THIS ACCESS VIA THE RTAM SUBROUTINES AT THE LOGICAL      * 20008000
*            RECORD LEVEL AND NEED NOT BE AWARE OF ANY TERMINAL       * 20008500
*            OR TP DEVICE DEPENDENCIES, TRANSMISSION CODES,           * 20009000
*            TIMING REQUIREMENTS, ERROR RECOVERY, ETC.                * 20009500
*                                                                     * 20010000
* NOTES = SEE BELOW                                                   * 20010500
*                                                                     * 20011000
*    DEPENDENCIES = EXCP ACCESS METHOD, NO STANDARD ERROR RECOVERY    * 20011500
*                   VTAM/SNA INTERFACES AND CONTROL BLOCKS            * 20012000
*                                                                     * 20012500
*    RESTRICTIONS = NONE                                              * 20013000
*                                                                     * 20013500
*    REGISTER CONVENTIONS = SEE ENTRY POINTS                          * 20014000
*                                                                     * 20014500
*    PATCH LABEL = NONE                                               * 20015000
*                                                                     * 20015500
* MODULE TYPE = PROCEDURE, TABLE (CSECT TYPE)                         * 20016000
*                                                                     * 20016500
*    PROCESSOR = ASSEMBLER F                                          * 20017000
*                                                                     * 20017500
*    MODULE SIZE = SEE $DLENGTH MACRO EXPANSION(S) AT END OF ASSEMBLY * 20018000
*                                                                     * 20018500
*    ATTRIBUTES = READ ONLY, AFTER HASP INITIALIZATION, AND           * 20019000
*                 HASP REENTRANT                                      * 20019500
*                                                                     * 20020000
* ENTRY POINT = HASPEXTP - INVOKE TERMINAL I/O SERVICE                * 20020500
*                                                                     * 20021000
*    PURPOSE = CALLED BY PROCESSORS IN HASPRDR AND HASPPRPU,          * 20021500
*              BY THE LINE MANAGER PROCESSOR (SEE BELOW),             * 20022000
*              AND BY THE REMOTE CONSOLE PROCESSOR (SEE BELOW),       * 20022500
*              TO INVOKE ONE OF THE FOUR TERMINAL I/O SERVICES.       * 20023000
*                                                                     * 20023500
*    LINKAGE = R1, AND POSSIBLY R0, ARE USED AS DESCRIBED IN          * 20024000
*              THE 4 SERVICE ROUTINE PROLOGS AT RTAMIOPE,             * 20024500
*              RTAMIGET, RTAMIPUT, AND RTAMICLO.                      * 20025000
*                                                                     * 20025500
*              R14 = ADDRESS OF HALFWORD CONSTANT SHOWING WHICH       * 20026000
*              SERVICE IS DESIRED (GENERATED AUTOMATICALLY BY         * 20026500
*              THE $EXTP MACRO).  THE CONSTANT IS FOLLOWED BY         * 20027000
*              THE INSTRUCTION TO WHICH CONTROL IS TO BE RETURNED.    * 20027500
*                                                                     * 20028000
*              BASE1 = ADDRESS OF HASP CONTROL TABLE                  * 20028500
*              R13 = ADDRESS OF CALLER'S PCE                          * 20029000
*                                                                     * 20029500
*              HASPEXTP PERFORMS INITIAL ENTRY ACTIONS TO SAVE        * 20030000
*              THE CALLER'S REGISTERS AND BRANCH TO THE REQUESTED     * 20030500
*              SERVICE ROUTINE WITH THE FOLLOWING SET UP -            * 20031000
*              (NOTE VARIATIONS FOR BSC REMOTE VS. SNA REMOTE)        * 20031500
*                                                                     * 20032000
*              CALLERS'S REGISTERS LINK THRU BASE2 SAVED IN PCE       * 20032500
*              R1 = BSC LINE DCT ADDRESS                              * 20033000
*              MDCT = REMOTE DCT ADDRESS                              * 20033500
*              MBUF = TP BUFFER ADDRESS                               * 20034000
*              MICE = SNA INTERFACE CONTROL ELEMENT ADDRESS           * 20034500
*              MCODE = BSC CODE TABLE ADDRESS                         * 20035000
*              MBASE1 = RTAM SERVICE ROUTINE BASE REGISTER            * 20035500
*              MBASE2 = RTAM BSC/SNA SERVICE SUBROUTINES 1ST BASE     * 20036000
*              MBASE3 = RTAM BSC/SNA SERVICE SUBROUTINES 2ND BASE     * 20036100
*              BASE2 = HASP LINE MANAGER BASE REGISTER                * 20036500
*                                                                     * 20037000
*              EXIT RELOADS CALLER'S REGISTERS AND                    * 20037500
*              RETURNS TO ADDRESS IN LINK REGISTER                    * 20038000
*              WHICH HAS BEEN ADJUSTED TO SKIP HALFWORD CONSTANT      * 20038500
*                                                                     * 20039000
* ENTRY POINT = HASPMLLM - HASP LINE MANAGER PROCESSOR                * 20039500
*                                                                     * 20040000
*    PURPOSE = PROCESSES ALL CHANNEL ENDS FOR TP LINES,               * 20040500
*              READS SIGNON FROM REMOTES (VIA RTAM SUBROUTINES),      * 20041000
*              PERFORMS ERROR RECOVERY AND LOGGING WHEN NEEDED,       * 20041500
*              AND FOR MULTI-LEAVING TERMINALS PROVIDES LINE          * 20042000
*              SHARING FOR SEVERAL LOGICAL I/O DATA STREAMS           * 20042500
*                                                                     * 20043000
*    LINKAGE = STANDARD HASP PROCESSOR REGISTERS AND CPU TIME         * 20043500
*              ALLOCATION PROVIDED BY HASP DISPATCHER, MBASE1 AND     * 20044000
*              MBASE2 ALSO USED FOR RTAM SUBROUTINE ADDRESSABILITY    * 20044500
*                                                                     * 20045000
* ENTRY POINT = HASPMCON - HASP REMOTE CONSOLE PROCESSOR              * 20045500
*                                                                     * 20046000
*    PURPOSE = FOR MULTI-LEAVING TERMINALS WITH CONSOLES PROVIDES     * 20046500
*              IMMEDIATE INTERFACE (VIA RTAM SUBROUTINES) WITH        * 20047000
*              HASP COMMAND PROCESSOR AND HASP CONSOLE OUTPUT,        * 20047500
*              FOR ALL OTHER TERMINALS PROVIDES CONSOLE OUTPUT        * 20048000
*              SPOOLING TO BE LATER PROCESSED AS PRINTED OUTPUT       * 20048500
*                                                                     * 20049000
*    LINKAGE = STANDARD HASP PROCESSOR REGISTERS AND CPU TIME         * 20049500
*              ALLOCATION PROVIDED BY HASP DISPATCHER                 * 20050000
*                                                                     * 20050500
* INPUT = SEE ENTRY POINTS                                            * 20063000
*                                                                     * 20063500
* OUTPUT = SEE ENTRY POINTS                                           * 20064000
*                                                                     * 20064500
* EXIT-NORMAL = SEE ENTRY POINTS                                      * 20065000
*                                                                     * 20065500
* EXIT-ERROR = SEE ENTRY POINTS                                       * 20066000
*                                                                     * 20066500
* EXTERNAL REFERENCES = SEE BELOW                                     * 20067000
*                                                                     * 20067500
*    ROUTINES = $WAIT, $TTIMER, $GETBUF, $WTO, $GETSMFB, $FREEBUF,    * 20068000
*               $QUESMFB, $STIMER, $EXCP, $ERROR, $#GET, $IOERROR,    * 20068500
*               $GETUNIT, $EXTP, $FREUNIT, $FRECMB, $GETCMB, $QSUSE   * 20069000
*                                                                     * 20069500
*    DATA AREAS = SEE $HASPCB MACRO DEFINITION                        * 20070000
*                                                                     * 20070500
*    CONTROL BLOCKS = SEE $HASPCB MACRO DEFINITION                    * 20071000
*                                                                     * 20071500
* TABLES = SEE BELOW, BEGINNING AT LABEL MDISCCW                      * 20072000
*                                                                     * 20072500
* MACROS = SEE EXTERNAL REFERENCES, $CCW (DEFINED LOCALLY),           * 20073000
*          $HASPGEN, $ENTRY, $SYSPARM, NULL, $POST, $ACTIVE,          * 20073500
*          $DORMANT, $RESTORE (DEFINED LOCALLY)                       * 20074000
*                                                                     * 20074100
* CHANGE ACTIVITY                                                     * 20074200
*                                                                     * 20074300
*     RELEASE 4.0 = OZ03311,OZ04313,OZ04990,OZ05769,OZ06762,OZ07439,  * 20074500
*                   OZ08195,OZ09025,OZ09052,OZ09085                   * 20074600
*                                                                     * 20074700
*     RELEASE 4.1 = OZ10359,OZ10379,OZ10380,OZ10381,OZ10382,OZ10384,  * 20074800
*                   OZ10385,OZ11753,OZ11754,OZ11759,OZ11766,OZ11803,  * 20074900
*                   OZ11804,OZ11805,OZ11807,OZ11808,OZ11809,OZ11810,  * 20075000
*                   OZ12271,OZ12273,OZ12295,OZ12296,OZ12297,OZ13246,  * 20075100
*                   OZ14401,OZ14402,OZ14410,OZ14415,OZ14417,OZ14418,  * 20075200
*                   OZ14442,OZ14446,OZ15262,OZ15285,OZ15298,OZ15830,  * 20075300
*                   OZ15836,OZ15839,OZ15840,OZ15842,OZ15843,OZ16674,  * 20075400
*                   OZ16689,OZ18200,OZ18228,OZ18229,OZ18230,OZ18238   * 20075500
*                                                                     * 20076200
*********************************************************************** 20076500
         TITLE 'HASP CONTROL BLOCK GENERATION MACRO'                    20077000
         SPACE 5                                                        20077500
*                                                                       20078000
*****    $HASPCB   *****           GENERATE HASP CONTROL BLOCKS         20078500
*                                                                       20079000
         SPACE 1                                                        20079500
         MACRO                                                          20080000
         $HASPCB &DOC=NO,&LIST=NO                                       20080500
         GBLC  &PRINT,&GEN,&DATA                                        20081000
         PUSH  PRINT                                                    20081500
         PRINT &PRINT                                                   20082000
         $ACB  DOC=&DOC            GENERATE OS ACB DSECT             R4 20082500
         $CVT  DOC=&DOC            GENERATE OS CVT DSECT             R4 20083000
         $DCB  DOC=&DOC            GENERATE OS DCB DSECT                20083500
         $DEB  DOC=&DOC            GENERATE OS DEB DSECT                20084000
         $PSA  DOC=&DOC            GENERATE OS PSA DSECT             R4 20084500
         $RPL  DOC=&DOC            GENERATE OS RPL DSECT             R4 20085000
         $UCB  DOC=&DOC            GENERATE OS UCB DSECT                20085500
         $FMH  DOC=&DOC            GENERATE SNA FMH DSECT            R4 20086500
         $BIND DOC=&DOC            GENERATE SNA BIND DSECT           R4 20087000
         $NIB  DOC=&DOC            GENERATE VTAM NIB DSECT           R4 20087500
         $TED  DOC=&DOC            GENERATE HASP TED DSECT              20088000
         $SVT  DOC=&DOC            GENERATE HASP SSVT DSECT             20090500
         $HCT  DOC=&DOC            GENERATE HASP HCT DSECT              20091000
         $PCE  DOC=&DOC            GENERATE HASP PCE DSECT              20091500
         $LRC  DOC=&DOC            GENERATE HASP LRC DSECT              20092000
         $BUFFER DOC=&DOC          GENERATE HASP BUFFER DSECT           20092500
         $ICE  DOC=&DOC            GENERATE HASP ICE DSECT           R4 20093000
         $CPT  DOC=&DOC            GENERATE HASP CPT DSECT          R41 20093200
         $CMB  DOC=&DOC            GENERATE HASP CMB DSECT              20093500
         $SMF  DOC=&DOC            GENERATE HASP SMF DSECT              20094000
         $JQE  DOC=&DOC            GENERATE HASP JQE DSECT              20094500
         $QSE  DOC=&DOC            GENERATE HASP QSE DSECT              20095000
         $RAT  DOC=&DOC            GENERATE HASP RAT DSECT              20097500
         $DCT  DOC=&DOC            GENERATE HASP DCT DSECT              20098000
         $TQE  DOC=&DOC            GENERATE HASP TQE DSECT              20098500
         $MLMWORK DOC=&DOC         GENERATE HASP MLMWORK DSECT       R4 20101500
         $RCPWORK DOC=&DOC         GENERATE HASP RCPWORK DSECT       R4 20102000
         SPACE 1                                                        20102500
         POP   PRINT                                                    20103000
         PRINT &GEN,&DATA          SET ASSEMBLY PRINT OPTIONS           20103500
         MEND                                                           20104000
         TITLE 'HASP RJE CHANNEL COMMAND WORD GENERATION MACRO'         20104500
         SPACE 5                                                        20105000
*                                                                       20105500
***** $CCW     *****               GENERATE RJE CCW SKELETON            20106000
*                                                                       20106500
*                                                                       20107000
         MACRO                                                          20107500
&NAME    $CCW  &OP,&AD,&FL,&LN,&CD                                      20108000
&NAME    DC    AL1(&OP),AL3(&AD),AL1(&FL,&CD),AL2(&LN)                  20108500
         MEND                                                           20109000
         TITLE 'HASP RTAM REGISTER SETUP MACRO'                      R4 20109500
         SPACE 5                                                     R4 20110000
*                                                                    R4 20110500
***** $RESTORE *****               RESTORE ACCESS METHOD REGISTERS   R4 20111000
*                                                                    R4 20111500
*                                                                    R4 20112000
         MACRO -- $RESTORE -- RESTORE RTAM ACCESS METHOD REGISTERS   R4 20112500
&NAME    $RESTORE &REENTER=NO                                        R4 20113000
&NAME    L     LINK,$EXTP          GET REG SETUP CODE BASE ADDRESS   R4 20113500
         AIF   ('&REENTER' EQ 'YES').A                               R4 20114000
         BAL   R15,RTAMIRES-HASPEXTP(,LINK) GO SET UP RTAM REGISTERS R4 20114500
         MEXIT                                                       R4 20115000
.A       L     R15,PCESAVEA        GET SERVICE ROUT ENTRY ADDR       R4 20115500
         B     RTAMIRES-HASPEXTP(,LINK)  GO SET UP RTAM REGISTERS    R4 20116000
         MEND                                                        R4 20116500
         TITLE 'HASP REMOTE TERMINAL ACCESS METHOD'                     20117000
         SPACE 5                                                        20117500
HASPRTAM START 0                   HASP REMOTE TERMINAL ACCESS METHOD   20118000
         SPACE 5                                                        20118500
         COPY  $HASPGEN            COPY HASPGEN PARAMETERS              20119000
         TITLE 'HASP REMOTE TERMINAL ACCESS METHOD'                  R4 20119500
         SPACE 5                                                     R4 20120000
HASPRTAM $ENTRY CSECT=YES,BASE=,ENTRY=NO                             R4 20120500
         SPACE 5                                                     R4 20121000
*                                                                    R4 20121500
*                             EXTERNAL REFERENCES                    R4 20122000
*                                                                    R4 20122500
         SPACE 3                                                     R4 20123000
         ENTRY HASPEXTP            HASP RTAM SERVICE ROUTINES        R4 20126000
         ENTRY MWRSPCCW            HASP RTAM BSC CCW SKELETON        R4 20126500
         ENTRY HASPMLLM            HASP LINE MANAGER                 R4 20127000
         ENTRY HASPMCON            HASP REMOTE CONSOLE PROCESSOR     R4 20127500
         ENTRY HASPVTAM            HASP VTAM ACB OPEN/CLOSE SUBTASK  R4 20128000
         SPACE 5                                                     R4 20128500
*                                                                    R4 20129000
*                             DOCUMENTATION OPTIONS FOR THIS ASSEMBLY   20129500
*                                                                    R4 20130000
         SPACE 3                                                     R4 20130500
         $SYSPARM (OFF,GEN,NODATA,NO,NO)                             R4 20131000
         EJECT                                                       R4 20131500
*                                                                    R4 20132000
*                             GENERATE HASP CONTROL BLOCKS           R4 20132500
*                                                                    R4 20133000
         SPACE 3                                                     R4 20133500
        $HASPCB DOC=&DOC,LIST=&LIST  GENERATE HASP CONTROL BLOCKS    R4 20134000
         TITLE 'HASP REMOTE TERMINAL ACCESS METHOD'                  R4 20134500
         SPACE 5                                                        20135000
*                                                                       20135500
*                             COMMON REGISTER DEFINITIONS            R4 20136000
*                                                                       20136500
         SPACE 3                                                        20137000
MDCT     EQU   WB                  ADDRESS OF DCT                       20137500
MBUF     EQU   WC                  ADDRESS OF RJE BUFFER                20138000
MCODE    EQU   WD                  ADDRESS OF CODE TABLE                20138500
MICE     EQU   WD                  ADDRESS OF INTERFACE CTL ELEMENT  R4 20139000
ML       EQU   WE                  INTERNAL LINK REGISTER               20139500
MBASE1   EQU   WF                  ACCESS                           R41 20140000
MBASE2   EQU   WG                   METHOD                          R41 20140500
MBASE3   EQU   R10                   BASE REGSITERS                 R41 20140600
MACB     EQU   R10                 ADDRESS OF VTAM ACB               R4 20141000
         SPACE 5                                                        20141500
*                                                                       20142000
*                             BSC LINE ACTION REQUESTS               R4 20142500
*                                                                       20143000
         SPACE 3                                                        20143500
MDCTIMER EQU   X'80'               TIMED ACTION REQUESTED               20144000
MDCTPAWS EQU   X'40'               LINE PAUSE REQUESTED                 20144500
MDCTJOB1 EQU   X'20'               JOB POST INDICATOR 1                 20145000
MDCTJOB2 EQU   X'10'               JOB POST INDICATOR 2                 20145500
MDCTJOB  EQU   MDCTJOB1+MDCTJOB2   JOB POST INDICATION                  20146000
         SPACE 5                                                        20146500
*                                                                       20147000
*                             BSC RJE CCW SEQ TYPE DEFINITIONS       R4 20147500
*                                                                       20148000
         SPACE 3                                                        20148500
MBSCSEQ  EQU   X'80'               BINARY SYNCHRONOUS SEQUENCE          20149000
MPREPSEQ EQU   X'40'               PREPARE SEQUENCE                     20149500
MWRITSEQ EQU   X'20'               WRITE SEQUENCE                       20150000
MCPUSEQ  EQU   X'10'               PROGRAMMABLE INTERFACE SEQUENCE      20150500
MSEQTYPE EQU   IOBCCW1+5           SEQUENCE TYPE BYTE                   20151000
         EJECT                                                          20151500
         SPACE 3                                                        20152000
*                                                                       20152500
*                             BSC CCW COMMAND TYPE DEFINITIONS       R4 20153000
*                                                                       20153500
         SPACE 3                                                        20154000
MDISCMD  EQU   X'00'               DISABLE                              20154500
MSETMCMD EQU   X'01'               SET MODE                             20155000
MENBCMD  EQU   X'02'               ENABLE                               20155500
MREADCMD EQU   X'04'               READ                                 20156000
MRRSPCMD EQU   X'05'               READ RESPONSE (NORMAL)               20156500
MRREQCMD EQU   X'06'               READ RESPONSE (TO ENQUIRY)           20157000
MPREPCMD EQU   X'07'               PREPARE                              20157500
MWRITCMD EQU   X'08'               WRITE                                20158000
MWRSPCMD EQU   X'09'               WRITE RESPONSE                       20158500
MWENQCMD EQU   X'0A'               SEND INQUIRY                         20159000
         SPACE 5                                                        20159500
*                                                                       20160000
*                             EBCDIC BSC CONTROL CHARACTERS             20160500
*                                                                       20161000
         SPACE 3                                                        20161500
MBCDSOH  EQU   X'01'               START OF HEADING                     20162000
MBCDSTX  EQU   X'02'               START OF TEXT                        20162500
MBCDETX  EQU   X'03'               END OF TEXT                          20163000
MBCDHT   EQU   X'05'               HORIZONTAL TAB                       20163500
MBCDDLE  EQU   X'10'               DATA LINK ESCAPE                     20164000
MBCDDC1  EQU   X'11'               SELECT OUTPUT DEVICE 1               20164500
MBCDDC2  EQU   X'12'               SELECT OUTPUT DEVICE 2               20165000
MBCDDC3  EQU   X'13'               SELECT OUTPUT DEVICE 3               20165500
MBCDNL   EQU   X'15'               NEW LINE                             20166000
MBCDEM   EQU   X'19'               END OF MEDIUM                        20166500
MBCDIGS  EQU   X'1D'               INTER-GROUP SEPARATOR                20167000
MBCDIRS  EQU   X'1E'               INTER-RECORD SEPARATOR               20167500
MBCDITB  EQU   X'1F'               INTERMEDIATE BLOCK CHECK             20168000
MBCDETB  EQU   X'26'               END OF TRANSMISSION BLOCK            20168500
MBCDESC  EQU   X'27'               ESCAPE                               20169000
MBCDENQ  EQU   X'2D'               ENQUIRY                              20169500
MBCDSYN  EQU   X'32'               SYNCHRONOUS IDLE                     20170000
MBCDEOT  EQU   X'37'               END OF TRANSMISSION                  20170500
MBCDNAK  EQU   X'3D'               NEGATIVE ACKNOWLEDGE                 20171000
MBCDACK1 EQU   X'61'               POSITIVE ACKNOWLEDGE ODD             20171500
MBCDACK0 EQU   X'70'               POSITIVE ACKNOWLEDGE EVEN            20172000
         EJECT                                                       R4 20172500
         SPACE 3                                                     R4 20173000
*                                                                    R4 20173500
*                             SNA CHARACTER STRING (SCS) DEFINITIONS R4 20174000
*                                                                    R4 20174500
         SPACE 3                                                     R4 20175000
SCSSEL   EQU   X'04'               SELECT CHAN SKIP, SECURE STRG RDR R4 20175500
SCSHT    EQU   X'05'               HORIZONTAL TAB                    R4 20176000
SCSVT    EQU   X'0B'               VERTICAL TAB                      R4 20176500
SCSFF    EQU   X'0C'               FORMS FEED                        R4 20177000
SCSCR    EQU   X'0D'               CARRIAGE RETURN                   R4 20177500
SCSENP   EQU   X'14'               ENABLE PRESENTATION               R4 20178000
SCSNL    EQU   X'15'               NEW LINE                          R4 20178500
SCSBS    EQU   X'16'               BACKSPACE                         R4 20179000
SCSIRS   EQU   X'1E'               INTER-RECORD SEPARATOR            R4 20179500
SCSINP   EQU   X'24'               INHIBIT PRESENTATION              R4 20180000
SCSLF    EQU   X'25'               LINEFEED                          R4 20180500
SCSTRN   EQU   X'35'               TRANSPARENCY                      R4 20181000
SCSBLANK EQU   X'40'               BLANK                             R4 20181500
         SPACE 5                                                     R4 20182000
*                                                                    R4 20182500
*                             SNA STRING CONTROL BYTE DEFINITIONS    R4 20183000
*                                                                    R4 20183500
         SPACE 1                                                     R4 20184000
SCBNONCO EQU   B'00000000'         NONCOMPACTED, NONDUPLICATE        R4 20184500
SCBCPACT EQU   B'01000000'         COMPACTED, NONDUPLICATE          R41 20184700
SCBPRIME EQU   B'10000000'         DUPLICATE PRIME CHARACTERS        R4 20185000
SCBDUPLC EQU   B'11000000'         DUPLICATE NONPRIME CHARACTERS     R4 20185500
         SPACE 1                                                    R41 20185600
SCB      EQU   1                   SCB ITSELF OCCUPIES 1 BYTE       R41 20185700
SCBEMPTY EQU   0                   SCB COUNT WHEN EMPTY             R41 20185800
SCBMAXCT EQU   63                  SCB COUNT WHEN FILLED TO MAXIMUM R41 20185900
         EJECT                                                       R4 20186000
         SPACE 3                                                     R4 20186500
*                                                                    R4 20187000
*                             SNA RJE SEQUENCE TYPE DEFINITIONS      R4 20187500
*                                                                    R4 20188000
         SPACE 1                                                     R4 20188500
VSEQNORM EQU   X'00'               SESSION NORMAL I/O SEQUENCE       R4 20189000
VSEQLOGN EQU   X'10'               SESSION INITIATION SEQUENCE       R4 20189500
VSEQHOLD EQU   X'20'               SESSION HOLD   I/O SEQUENCE       R4 20190000
VSEQCLOS EQU   X'30'               SESSION CLOSE DOWN SEQUENCE       R4 20190500
VSEQTERM EQU   X'40'               SESSION ABN TERMIN SEQUENCE       R4 20191000
VSEQRCVR EQU   X'50'               SESSION RECOVR I/O SEQUENCE       R4 20191500
VSEQALOG EQU   X'60'               SESSION AUTO-LOGON SEQUENCE      R41 20191600
VSEQSPEC EQU   X'F0'               SESSION SPEC  MODE SEQUENCE       R4 20192000
         SPACE 1                                                     R4 20192500
VSEQRECV EQU   VSEQNORM+X'00'      RECEIVE  REQUEST                  R4 20193000
VSEQSEND EQU   VSEQNORM+X'01'      SEND     REQUEST                  R4 20193500
VSEQRSET EQU   VSEQNORM+X'02'      RESETSR  REQUEST                  R4 20194000
VSEQRSCS EQU   VSEQRSET+VSEQRECV   RESET CS REQUEST                  R4 20194500
VSEQRSCA EQU   VSEQRSET+VSEQSEND   RESET CA REQUEST                  R4 20195000
         SPACE 1                                                     R4 20195500
VSEQLDEV EQU   X'01'               INQUIRE DEVCHAR  REQUEST         R41 20196000
VSEQLPAR EQU   X'02'               INQUIRE SESSPARM REQUEST         R41 20196500
VSEQLOPD EQU   X'03'               OPNDST  ACCEPT   REQUEST         R41 20197000
         SPACE 1                                                     R4 20197500
VSEQGIBB EQU   X'00'               NULL RU BEG/END BKT REQUEST       R4 20198000
VSEQGIEB EQU   X'01'               NULL RU END BRACKET REQUEST       R4 20198500
VSEQGICD EQU   X'02'               NULL RU CHG DIRECTN REQUEST       R4 20199000
VSEQGCLS EQU   X'03'               DEFERRED CLSDST     REQUEST       R4 20199500
         SPACE 1                                                     R4 20200000
VSEQDLNE EQU   X'00'               DISCONNECT ICE FROM LINE  DCT     R4 20200500
VSEQDLGN EQU   X'01'               DISCONNECT ICE FROM LOGON DCT     R4 20201000
         SPACE 4                                                     R4 20201500
*                                                                    R4 20202000
*                             VTAM EXIT ROUTINE IDENT DEFINITION     R4 20202500
*                                                                    R4 20203000
         SPACE 2                                                     R4 20203500
VXIDOPEN EQU   X'10'               DCT XID FOR OPEN   ACB  SUBTASK   R4 20204000
VXIDTPND EQU   X'20'               DCT XID FOR TPEND  EXIT ROUTINE   R4 20204500
VXIDCLOS EQU   X'30'               DCT XID FOR CLOSE  ACB  SUBTASK   R4 20205000
         SPACE 1                                                     R4 20205500
VXIDLOGN EQU   X'10'               ICE XID FOR LOGON  EXIT ROUTINE   R4 20206000
VXIDALOG EQU   X'20'               ICE XID FOR AUTO-LOGON  ROUTINE  R41 20206500
VXIDGBUF EQU   X'30'               ICE XID FOR DEFERRED GET BUFFER  R41 20207000
VXIDRLRQ EQU   X'40'               ICE XID FOR RELREQ EXIT ROUTINE  R41 20207500
VXIDSCIP EQU   X'50'               ICE XID FOR SCIP   EXIT ROUTINE  R41 20208000
VXIDLOST EQU   X'60'               ICE XID FOR LSTTRM EXIT ROUTINE  R41 20208500
VXIDISCN EQU   X'70'               ICE XID FOR DISCONNECT  ROUTINE  R41 20208600
         TITLE 'HASP $EXTP SERVICE ENTRY ROUTINES'                   R4 20209000
*********************************************************************** 20209500
*                                                                     * 20210000
*                    REMOTE JOB ENTRY OPEN ROUTINE                    * 20210500
*                                                                     * 20211000
*    ENTRY PARAMETER --                                               * 20211500
*              R1 = ADDRESS OF REMOTE DEVICE CONTROL TABLE.           * 20212000
*                                                                     * 20212500
*********************************************************************** 20213000
         SPACE 2                                                     R4 20213500
RTAMIOPE DC    A(RTAMBOPE)         ADDRESS OF RTAM BSC OPEN ROUTINE  R4 20214000
         DC    A(RTAMVOPE)         ADDRESS OF RTAM SNA OPEN ROUTINE  R4 20214500
         SPACE 6                                                     R4 20215000
*********************************************************************** 20215500
*                                                                     * 20216000
*                    REMOTE JOB ENTRY GET ROUTINE                     * 20216500
*                                                                     * 20217000
*    ENTRY PARAMETERS --                                              * 20217500
*              R1 = ADDRESS OF REMOTE DEVICE CONTROL TABLE.           * 20218000
*              R0 = ADDRESS OF A WORK AREA WHICH MAY BE USED TO       * 20218500
*                   RETURN ONE INPUT IMAGE TO THE CALLER.  THE        * 20219000
*                   LENGTH OF THE WORK AREA IS DEFINED IN THE         * 20219500
*                   MDCTRECL FIELD OF THE CALLER'S DCT.               * 20220000
*                                                                     * 20220500
*    EXIT RESULTS --                                                  * 20221000
*              R0 = ADDRESS OF 80-BYTE INPUT CARD RETURNED.           * 20221500
*                   R0 GT 0 AND CC=2 FOR NORMAL RETURN                * 20222000
*                   R0 LT 0 AND CC=4 FOR END OF FILE OR ABORT         * 20222500
*                   R0 EQ 0 AND CC=8 FOR ERROR RETURN RECEIVED        * 20223000
*                                                                     * 20223500
*********************************************************************** 20224000
         SPACE 2                                                     R4 20224500
RTAMIGET DC    A(RTAMBGET)         ADDRESS OF RTAM BSC GET ROUTINE   R4 20225000
         DC    A(RTAMVGET)         ADDRESS OF RTAM SNA GET ROUTINE   R4 20225500
         EJECT                                                       R4 20226000
*********************************************************************** 20226500
*                                                                     * 20227000
*                    REMOTE JOB ENTRY PUT ROUTINE                     * 20227500
*                                                                     * 20228000
*    ENTRY PARAMETERS --                                              * 20228500
*              R1 = ADDRESS OF REMOTE DEVICE CONTROL TABLE.           * 20229000
*              R0 = ADDRESS OF AN 8-BYTE CCW WHICH DESCRIBES          * 20229500
*                   CARRIAGE CONTROL (OR STACKER SELECT), ADDRESS,    * 20230000
*                   AND LENGTH FOR ONE OUTPUT LINE (OR CARD).         * 20230500
*                   NOTE -- THIS CCW MAY BE DESTROYED.                * 20231000
*                   CCW OP CODE X  'FE' PASSES PDDB/PDIR INFO (SNA)   * 20231400
*                   CCW OP CODE X'FF' FORCES WRITE TO TERMINAL.       * 20231500
*                   R0 HI-ORDER BIT ON MEANS END OF PAGE (VTAM/SNA).  * 20232000
*                                                                     * 20232500
*********************************************************************** 20233000
         SPACE 2                                                     R4 20233500
RTAMIPUT DC    A(RTAMBPUT)         ADDRESS OF RTAM BSC PUT ROUTINE   R4 20234000
         DC    A(RTAMVPUT)         ADDRESS OF RTAM SNA PUT ROUTINE   R4 20234500
         SPACE 6                                                     R4 20235000
*********************************************************************** 20235500
*                                                                     * 20236000
*                   REMOTE JOB ENTRY CLOSE ROUTINE                    * 20236500
*                                                                     * 20237000
*    ENTRY PARAMETER --                                               * 20237500
*              R1 = ADDRESS OF REMOTE DEVICE CONTROL TABLE.           * 20238000
*                                                                     * 20238500
*********************************************************************** 20239000
         SPACE 2                                                     R4 20239500
RTAMICLO DC    A(RTAMBCLO)         ADDRESS OF RTAM BSC CLOSE ROUTINE R4 20240000
         DC    X'80'               SNA CLOSE RUNS EVEN IF SOFT ABORT R4 20240500
         DC    AL3(RTAMVCLO)       ADDRESS OF RTAM SNA CLOSE ROUTINE R4 20241000
         SPACE 2                                                     R4 20242000
RTAMINCL DC    A(RTAMBNCL)         ADDRESS OF RTAM BSC NCLOSE RTN   R41 20242500
         DC    X'80'               SNA NCLOSE RUNS IF SOFT ABORT    R41 20242600
         DC    AL3(RTAMVNCL)       ADDRESS OF RTAM SNA NCLOSE RTN   R41 20243000
         EJECT                                                       R4 20244000
*                                                                    R4 20244500
*                             ACCESS METHOD REGISTER INITIALIZATION  R4 20245000
*                                                                    R4 20245500
         SPACE 3                                                     R4 20246000
         USING DCTDSECT,R1         ESTABLISH  DCT ADDRESSABILITY     R4 20246500
         USING HASPEXTP,LINK       ESTABLISH CODE ADDRESSABILITY     R4 20247000
         SPACE 1                                                     R4 20247500
HASPEXTP SH    R15,0(,LINK)        GET ADDR LIST FOR THIS $EXTP SERV R4 20248000
         LA    LINK,2(,LINK)       ADJUST RETRN PAST $EXTP SERV CODE R4 20248500
         STM   LINK,BASE2,PCELINK  SAVE CALLER'S REGISTERS           R4 20249000
         L     LINK,$EXTP          GET BASE ADDRESS FOR SETUP        R4 20249500
         TM    MDCTSTAT,DCTABORT   TEST REMOTE DCT STATUS            R4 20250000
         BO    RTAMEXIT            BRANCH IF DCT IS ABORTING         R4 20250500
         OI    DCTSTAT,DCTRTAM     SHOW RTAM PROCESSING ACTIVE       R4 20251000
         TM    MDCTTYPE,DCTPSNA    TEST REMOTE DCT TYPE              R4 20251500
         BZ    SKIP10              BRANCH IF NOT SNA REMOTE TERMINAL R4 20252000
         LA    R15,4(,R15)         ADVANCE POINTER TO SNA ENTRY ADDR R4 20252500
SKIP10   L     R15,0(,R15)         PICK UP RTAM ENTRY ADDR           R4 20253000
         ST    R15,PCESAVEA        SAVE ENTRY ADDRESS IN PCESAVEA    R4 20253500
         LR    MBASE1,R15          SET ADDR OF RTAM ROUTINE BASE     R4 20254000
         B     RTAMBSET            BRANCH TO COMPLETE REGS SETUP     R4 20254500
         SPACE 2                                                     R4 20255000
*                             RESTORE REGISTERS AFTER $WAIT          R4 20255500
         SPACE 1                                                     R4 20256000
RTAMIRES TM    MDCTSTAT,DCTABORT   TEST REMOTE DCT STATUS            R4 20256500
         BO    RTAMEXIT            BRANCH IF DCT IS ABORTING         R4 20257000
         L     MBASE1,PCESAVEA     GET ADDR OF RTAM ROUTINE BASE     R4 20257500
         SPACE 1                                                     R4 20258000
RTAMBSET LR    MDCT,R1             GET ADDRESS OF REMOTE DCT         R4 20258500
         L     MBUF,DCTBUFAD       GET ADDRESS OF BUFFER             R4 20259000
         L     BASE2,=A(HASPMLLM)  GET ADDR OF LINE MANAGER BASE     R4 20259500
         TM    MDCTTYPE,DCTPSNA    TEST REMOTE DCT TYPE              R4 20260000
         BO    RTAMVSET            BRANCH TO SETUP FOR SNA DCT       R4 20260500
         L     R1,DCTDCB           GET ADDRESS OF LINE DCT           R4 20261000
         L     MCODE,MDCTCODE      GET ADDRESS OF CODE TABLE         R4 20261500
         L     MBASE2,=A(RTAMBSUB) GET ADDRESSABILITY               R41 20262000
         LA    MBASE3,2048(,MBASE2) OF COMMON BSC RTAM              R41 20262100
         LA    MBASE3,2048(,MBASE3)  SUBROUTINES                    R41 20262200
         BR    R15                 ENTER OR RETURN TO ROUTINE        R4 20262500
         SPACE 1                                                     R4 20263000
RTAMVSET L     MICE,MDCTICE        GET ADDRESS OF ASSOCIATED ICE     R4 20263500
         L     MBASE2,=A(RTAMVSUB) GET ADDRESSABILITY               R41 20264000
         LA    MBASE3,2048(,MBASE2) OF COMMON SNA RTAM              R41 20264100
         LA    MBASE3,2048(,MBASE3)  SUBROUTINES                    R41 20264200
         TM    MDCTSTAT,DCTFLUSH   TEST REMOTE DCT STATUS            R4 20264500
         BZR   R15                 ENTER ROUTINE IF NO SOFT ABORT    R4 20265000
         LTR   MBASE1,MBASE1       TEST HIGH-ORDER BIT OF ENTRY ADDR R4 20265500
         BMR   R15                 GO IF ON, SOFT ABORT ALLOWS CLOSE R4 20266000
         EJECT                                                       R4 20266500
*                                                                    R4 20267000
*                             RETURN ABNORMAL END TO CALLER          R4 20267500
*                                                                    R4 20268000
         SPACE 2                                                     R4 20268500
RTAMABRT LM    WA,BASE2,PCEWA      RESTORE PCE'S REGISTERS           R4 20269000
         SPACE 1                                                     R4 20269500
RTAMEXIT L     LINK,PCELINK        RESTORE PCE RETURN ADDR           R4 20270000
         NI    DCTSTAT,255-DCTRTAM SHOW RTAM PROCESSING COMPLETE     R4 20270500
         SR    R0,R0               SET EOF CONDITION CODE            R4 20271000
         BR    LINK                  AND RETURN TO CALLER            R4 20271500
         SPACE 1                                                     R4 20272000
         DROP  R1,LINK             RELEASE BASE REGISTERS            R4 20272500
         SPACE 2                                                     R4 20273000
         LTORG                                                       R4 20273500
         TITLE 'HASP BSC REMOTE TERMINAL OPEN ROUTINE'               R4 20274000
*                                  ADDRESSABILITY --                R41 20274100
         USING DCTDSECT,MDCT             -- DCT                     R41 20274500
         USING BUFDSECT,MBUF             -- BUFFER                  R41 20275000
         USING MCODSECT,MCODE            -- CODE TABLE              R41 20275500
         USING RTAMBSUB,MBASE2,MBASE3    -- COMMON BSC SUROUTINES   R41 20276000
         USING HASPMLLM,BASE2            -- LINE MANAGER BASE       R41 20276500
         SPACE 5                                                        20277000
*                                                                       20277500
*                             REMOTE TERMINAL OPEN ROUTINE              20278000
*                                                                       20278500
         SPACE 3                                                        20279000
         USING RTAMBOPE,MBASE1     ESTABLISH OPEN ADDRESSABILITY     R4 20279500
RTAMBOPE DS    0H                  ADDRESS OF RTAM BSC OPEN ROUTINE  R4 20280000
         L     MBUF,DCTBUFAD-DCTDSECT(,R1)  GET LINE BUFFER ADDRESS  R4 20280500
         TM    MSEQTYPE,MCPUSEQ    TEST SEQUENCE TYPE                   20281000
         BZ    M27XOPEN            BRANCH IF NOT PROGRAMMABLE INTERFACE 20281500
         EJECT                                                          20282000
*                                                                       20282500
*                             BSC CPU OPEN ROUTINE                      20283000
*                                                                       20283500
         SPACE 3                                                        20284000
         IC    R15,MDCTOPCT-DCTDSECT(R1)     INCREMENT                  20284500
         LA    R15,1(R15)                     OPEN                      20285000
         STC   R15,MDCTOPCT-DCTDSECT(R1)       COUNT                    20285500
         SPACE 2                                                        20286000
         CLI   DCTDEVTP,DCTRCON    TEST DEVICE TYPE                     20286500
         BE    MBTAMXIT            EXIT IF REMOTE CONSOLE            R4 20287000
         SPACE 2                                                        20287500
         NI    MDCTSTAT,255-DCTERMNR  CLEAR RECEIVER TERMINATED BIT  R4 20288000
         BAL   ML,MGETPBUF         GET AN OUTPUT BUFFER                 20288500
         MVI   TPBUFST+5,X'90'          SET UP                          20289000
         TM    DCTDEVTP,DCTPRPU          REQUEST FOR OUTPUT          R4 20289500
         BO    SKIP20                     OR                         R4 20290000
         MVI   TPBUFST+5,X'A0'             PERMISSION FOR INPUT         20290500
SKIP20   MVC   TPBUFST+6(1),MDCTRCB     ADD RECORD CONTROL BYTE         20291000
         XC    TPBUFST+7(2),TPBUFST+7   TERMINATE BUFFER                20291500
         MVI   IOBCCW6+7,9              SET WRITE LENGTH                20292000
         MVC   BUFDCT+1(3),DCTDCB+1     NOP WRITE POST                  20292500
         BAL   ML,MBCWRITE         QUEUE BUFFER FOR OUTPUT              20293000
        $WAIT  WORK,SAVE=NO        WAIT FOR RESPONSE                 R4 20293500
        $RESTORE                   RESTORE ACCESS METHOD REGISTERS   R4 20294000
         TM    MDCTSTAT,DCTERMNR   TEST FOR PERMISSION TO TRANSMIT   R4 20294500
         BZ    MBTAMXIT            IF YES, GO TO RTAM NORMAL EXIT    R4 20295000
         B     MBTAMXAB            ELSE GO TO RTAM ABNORMAL EXIT     R4 20295500
         EJECT                                                          20296000
*                                                                       20296500
*                             2770/2780 OPEN ROUTINE                    20297000
*                                                                       20297500
         SPACE 3                                                        20298000
M27XOPEN OI    MDCTSTAT-DCTDSECT(R1),DCTETX  SET ETX SWITCH             20298500
         NI    MDCTATTN-DCTDSECT(R1),255-MDCTIMER-MDCTPAWS RESET PAUSE  20299000
         CLI   DCTDEVTP,DCTRJR     TEST DEVICE TYPE                     20299500
         BNE   MBPPOPEN            BRANCH IF NOT REMOTE READER          20300000
         SPACE 2                                                        20300500
         MVC   LCBACK,MBSCACK1     SET FIRST ACKNOWLEDGEMENT            20301000
         LA    R0,IOBCCW2          INITIALIZE                           20301500
         LA    R1,MBSCSEQ           CCW                                 20302000
         BAL   ML,MCCWINIT           CHAIN                              20302500
         BAL   ML,MEXCP            INITIATE READ OF FIRST BLOCK         20303000
         B     MBTAMXIT             AND EXIT                         R4 20303500
         SPACE 3                                                        20304000
MBPPOPEN MVC   LCBACK,LCBRCB+1     SAVE ACKNOWLEDGEMENT                 20304500
         N     MCODE,=F'-8'        FORCE NON-TRANSPARENCY               20305000
         LA    R0,IOBCCW5          INITIALIZE                           20305500
         LA    R1,MBSCSEQ+MWRITSEQ  CCW                                 20306000
         BAL   ML,MCCWINIT           CHAIN                              20306500
         SPACE 1                                                        20307000
         MVI   TPBMXREC,2          SET NOMINAL MAXIMUM RECORD COUNT     20307500
         TM    MDCTFEAT,DCTPMRF    TEST FOR MULT RECORD FEATURE         20308000
         BZ    *+8                 BRANCH IF NOT                        20308500
         MVI   TPBMXREC,7          YES, SET MAXIMUM RECORD COUNT TO     20309000
         CLI   MDCTTYPE,DCTP2780   TEST TERMINAL TYPE                R4 20309500
         BE    SKIP30              BRANCH IF 2780                    R4 20310000
         MVI   TPBMXREC,255        RESET RECORD LIMIT IF NOT 2780       20310500
SKIP30   TM    MDCTFMT,DCTPBLK     TEST RECORD FORMAT                   20311000
         BO    *+8                 BRANCH IF BLOCKED                    20311500
         MVI   TPBMXREC,1          UNBLOCKED, SET MAX RECORD COUNT TO 1 20312000
         SPACE 1                                                        20312500
         LA    R1,TPBUFST          GET START OF DATA AREA               20313000
         LR    R0,R1               SAVE IN R0                           20313500
         CLI   MDCTTYPE,DCTP2780   TEST TERMINAL TYPE                R4 20314000
         BNL   MBN7OPN1            BRANCH IF NOT 2770                R4 20314500
         MVI   TPBMXREC,255        RESET RECORD LIMIT FOR 2770          20315000
         MVI   TPBUFST,MBCDSTX     SET COMPONENT SELECT                 20315500
         MVI   TPBUFST+1,MBCDDC1    FOR DEVICE 1 (PRINTER)              20316000
         MVI   IOBCCW6+7,2         SET LENGTH OF COMPONENT SELECT       20316500
         CLI   MDCTTYPE,DCTP3780   TEST TERMINAL TYPE                R4 20317000
         BE    SKIP40              BRANCH IF 3780 WITHOUT 3781       R4 20317500
         AL    R1,MB2770CD         INDICATE COMPONENT SELECT IN BUFFER  20318000
SKIP40   BCTR  R0,0                DECREMENT FOR LATER USE              20318500
         EJECT                                                       R4 20319000
MBN7OPN1 ST    R1,TPBLCCAD         INITIALIZE ADDRESSES OF CARRIAGE     20319500
         ST    R1,TPBFDATA          CONTROL AND FIRST DATA BYTE         20320000
         CLI   DCTDEVTP,DCTRPU     TEST DEVICE TYPE                     20320500
         BNE   MBPROPEN            BRANCH IF NOT REMOTE PUNCH           20321000
         MVI   TPBUFST+1,MBCDDC2   SET DEVICE 2 COMPONENT SELECT        20321500
         TM    MDCTLINE,DCTPTRSP   TEST FOR TRANSPARENCY                20322000
         BZ    MBTAMXIT            BYPASS PUNCH SELECT IF NOT        R4 20322500
         CLI   MDCTTYPE,DCTP2780   TEST TERMINAL TYPE                R4 20323000
         BNL   MBN7OPN2            BRANCH IF NOT 2770                R4 20323500
         MVI   TPBMXREC,6          PRESET RECORD LIMIT TO 6             20324000
         TM    MDCTFEAT,DCTPABEX   IS 2770 BUFFER SIZE 512              20324500
         BO    MBTAMXIT            EXIT IF YES                       R4 20325000
         MVI   TPBMXREC,3          PRESET MAXIMUM RECORD COUNT TO 3     20325500
         TM    MDCTFEAT,DCTPBEXP   IS 2770 BUFFER SIZE 256              20326000
         BO    MBTAMXIT            EXIT IF YES                       R4 20326500
         MVI   TPBMXREC,1          NO, SET MAXIMUM RECORD COUNT TO 1    20327000
         B     MBTAMXIT            EXIT                              R4 20327500
         SPACE 1                                                        20328000
MBN7OPN2 CLI   TPBMXREC,4          TEST MAXIMUM RECORD COUNT            20328500
         BL    *+8                 BRANCH IF LESS THAN 4                20329000
         MVI   TPBMXREC,4          SET MAXIMUM RECORD COUNT TO 4        20329500
         MVC   TPBUFST(3),MBPUNSEL      SET UP PUNCH SELECT             20330000
         MVI   IOBCCW6+7,3         SET LENGTH OF PUNCH SELECT           20330500
         MVI   TPBRECNT,4          FORCE WRITE OF PUNCH SELECT RECORD   20331000
         B     MBTAMXIT            EXIT                              R4 20331500
         SPACE 2                                                        20332000
MBPROPEN TM    MDCTFEAT,DCTPTAB    TEST FOR HORIZ. FORMAT CONTROL    R4 20332500
         BZ    MBTAMXIT            BYPASS TAB SETTING IF NOT         R4 20333000
         MVI   TPBUFST,MBCDSTX     CONSTRUCT                            20333500
         MVC   1(3,R1),MBHTREC      HORIZONTAL TAB                      20334000
         MVC   4(143,R1),3(R1)       INITIALIZATION                     20334500
         LA    R1,3(,R1)              RECORD                            20335000
         LH    ML,$HTDIST          GET HORIZONTAL TAB SPACING        R4 20335500
         LA    R15,143             COMPUTE                           R4 20336000
         SLR   R14,R14              TABS                             R4 20336500
         DR    R14,ML                PER LINE                        R4 20337000
SKIP50   ALR   R1,ML               POINT TO NEXT TAB LOCATION        R4 20337500
         MVI   0(R1),MBCDHT        SET HORIZONTAL TABS                  20338000
         BCT   R15,SKIP50           EVERY '&HTDIST' COLUMNS          R4 20338500
         MVI   TPBLCCC,X'FF'       PROHIBIT CARRIAGE CTL CONSOLIDATION  20339000
         IC    R15,MDCTRECL        GET LENGTH OF PRINTER                20339500
         AL    R15,TPBFDATA        UPDATE                               20340000
         LA    R15,3(,R15)          DATA                                20340500
         ST    R15,TPBFDATA          POINTER                            20341000
         MVI   TPBRECNT,1          SET RECORD COUNT                     20341500
         MVI   0(R15),MBCDNL       INSERT NL FOR 2770                   20342000
         SLR   R15,R0              GENERATE BLOCK LENGTH                20342500
         STH   R15,IOBCCW6+6       SET CCW COUNT                        20343000
         B     MBTAMXIT             AND EXIT                         R4 20343500
         TITLE 'HASP BSC REMOTE TERMINAL GET ROUTINE'                R4 20344000
*                                                                       20344500
*                             REMOTE TERMINAL GET ROUTINE               20345000
*                                                                       20345500
         SPACE 3                                                        20346000
         USING RTAMBGET,MBASE1     ESTABLISH GET ADDRESSABILITY      R4 20346500
RTAMBGET DS    0H                  ADDRESS OF RTAM BSC GET ROUTINE   R4 20347000
         LR    R1,R0               MOVE SECOND PARAMETER TO R1          20347500
         L     R15,TPBFDATA        GET ADDRESS OF NEXT LOGICAL RECORD   20348000
         TM    MSEQTYPE,MBSCSEQ+MCPUSEQ      TEST SEQUENCE TYPE         20348500
         BO    MBCPUGET            BRANCH IF BSC PROGRAMMABLE INTERFACE 20349000
         SPACE 3                                                     R4 20349500
         TM    BUFECBCC,X'7F'      TEST I/O STATUS                      20350000
         BO    M27X0GET            BRANCH IF NORMAL I/O COMPLETION   R4 20350500
         BZ    *+12                SKIP IF I/O IS ACTIVE             R4 20351000
         OI    MDCTSTAT,DCTEOF     INDICATE EOF DETECTED             R4 20351500
         B     MBTAMXEX            GO TO RTAM EXCEPTION EXIT         R4 20352000
         CLI   PCEID+1,PCEMLMID    LINE MANAGER...                  R41 20352100
         BE    MBTAMXIT            YES, EXIT                        R41 20352200
        $WAIT  WORK,SAVE=NO        WAIT FOR I/O TO COMPLETE          R4 20352500
        $RESTORE REENTER=YES       SIMULATE RE-ENTRY                 R4 20353000
         EJECT                                                          20353500
*                                                                       20354000
*                             BSC CPU GET ROUTINE                       20354500
*                                                                       20355000
         SPACE 2                                                        20355500
MBCPUGET CLC   MDCTRCB,0(R15)      TEST RECORD CONTROL BYTE             20356000
         BE    MBCGET1             BRANCH IF RCB MATCHES DEVICE RCB     20356500
         SPACE 1                                                        20357000
         LR    R1,R15              OTHERWISE, GO TO                     20357500
         BAL   ML,MBCNEXTR          RCB ANALYSIS SUBROUTINE             20358000
        $WAIT  WORK,SAVE=NO        WAIT FOR THE NEXT LOGICAL RECORD  R4 20358500
        $RESTORE REENTER=YES       SIMULATE RE-ENTRY                 R4 20359000
         SPACE 1                                                     R4 20359500
MBCGET1  TM    2(R15),X'80'        TEST FIRST STRING CONTROL BYTE    R4 20360000
         BZ    MBCGEOF             BR IF END OR TERMINATION OF FILE  R4 20360500
         MVC   PCER15(1),1(R15)    RETURN SRCB TO CALLER             R4 20361000
         SR    R0,R0               GET LENGTH                           20361500
         IC    R0,MDCTRECL          OF INPUT AREA                       20362000
SKIP60   LR    LINK,R0             BLANK                                20365000
         SL    LINK,=F'2'           OUT                                 20365500
         MVI   0(R1),C' '             INPUT                             20366000
         EX    LINK,MBCGMOV1           AREA                          R4 20366500
         SPACE 1                                                        20367000
MBCGNEXT TM    2(R15),X'80'        TEST FOR END OF RECORD               20367500
         BZ    MBCGEOR             BRANCH IF END OF RECORD              20368000
         IC    LINK,2(R15)         PICK UP STRING CONTROL BYTE          20368500
         TM    2(R15),X'40'        TEST FOR DUPLICATE FIELD             20369000
         BO    MBCGNORM            BRANCH IF NOT DUPLICATE FIELD        20369500
         N     LINK,MFCON31        ISOLATE COUNT                        20370000
         SR    R0,LINK             DECREMENT CARD BYTE COUNTER          20370500
         BM    MBCGERR             ERROR IF NEGATIVE                    20371000
         TM    2(R15),X'20'        TEST FOR BLANK STRING                20371500
         BO    MBCGDUP             BRANCH IF NON-BLANK STRING           20372000
         AR    R1,LINK             ADVANCE TARGET ADDRESS               20372500
         LA    R15,1(,R15)         STEP TO NEXT STRING CONTROL BYTE     20373000
         B     MBCGNEXT            DECODE NEXT STRING                   20373500
         SPACE 1                                                        20374000
MBCGDUP  MVC   0(1,R1),3(R15)      SET FIRST DUPLICATE CHARACTER        20374500
         S     LINK,=F'2'          GENERATE COUNT-2                     20375000
         BM    MBCGET3             DONE IF NEGATIVE                     20375500
         EX    LINK,MBCGMOV1       PROPAGATE DUPLICATE CHARACTERS    R4 20376000
         SPACE 1                                                     R4 20376500
MBCGET3  LA    R1,2(LINK,R1)       ADVANCE TARGET ADDRESS               20377000
         LA    R15,2(,R15)         STEP TO NEXT STRING CONTROL BYTE     20377500
         B     MBCGNEXT            DECODE NEXT STRING                   20378000
         SPACE 1                                                     R4 20378500
MBCGMOV1 MVC   1(*-*,R1),0(R1)     *** EXECUTE ONLY ***              R4 20379000
         EJECT                                                       R4 20379500
MBCGNORM N     LINK,MFCON63        ISOLATE COUNT                        20380000
         BZ    MBCGERR             ERROR IF ZERO COUNT                  20380500
         SR    R0,LINK             DECREMENT CARD BYTE COUNTER          20381000
         BM    MBCGERR             ERROR IF NEGATIVE                    20381500
         BCTR  LINK,0              GENERATE COUNT-1                     20382000
         EX    LINK,MBCGMOV2       COPY NON-DUPLICATE STRING         R4 20382500
         LA    R1,1(LINK,R1)       ADVANCE TARGET ADDRESS               20383000
         LA    R15,2(LINK,R15)     STEP TO NEXT STRING CONTROL BYTE     20383500
         B     MBCGNEXT            DECODE NEXT STRING                   20384000
         SPACE 1                                                     R4 20384500
MBCGMOV2 MVC   0(*-*,R1),3(R15)    *** EXECUTE ONLY ***              R4 20385000
         SPACE 1                                                     R4 20385500
MBCGEOR  STCM  R1,7,PCER15+1       RTRN ADDR LAST BYTE +1 TO CALLER  R4 20386000
         CLI   DCTDEVTP,DCTRCON    TEST DEVICE TYPE                  R4 20386500
         BE    MBCGEOF             BRANCH IF REMOTE CONSOLE             20387000
         LA    R15,3(,R15)         STEP TO NEXT RECORD CONTROL BYTE     20387500
         B     MGETEXIT            EXIT                                 20388000
         SPACE 2                                                        20388500
MBCGERR  OI    DCTFLAGS,DCTDELET   DELETE CURRENT JOB                   20389000
         L     R1,DCTDCB           GET ADDRESS OF LINE DCT              20389500
         OI    DCTFLAGS-DCTDSECT(R1),DCTRSTRT     FORCE LINE RESTART    20390000
         LA    R15,TPBUFST+2       FORCE                                20390500
         MVI   3(R15),0             END OF BUFFER                       20391000
         SPACE 2                                                        20391500
MBCGEOF  LA    R1,3(,R15)          STEP TO NEXT RECORD CONTROL BYTE     20392000
         ST    R1,TPBFDATA         UPDATE DATA POINTER                  20392500
         OI    MDCTSTAT,DCTEOF     INDICATE EOF DETECTED             R4 20393000
         TM    2(R15),X'40'        TEST TYPE OF FILE ENDING          R4 20393500
         BO    MBCGTERM            BR IF TERMINATED BY TRANSMITTER   R4 20394000
         BAL   ML,MBCNEXTR         PROCESS THE NEXT RCB                 20394500
         B     MBTAMXEX            GO TO RTAM EXCEPTION EXIT         R4 20395000
         SPACE 1                                                     R4 20395500
MBCGTERM BAL   ML,MBCNEXTR         PROCESS THE NEXT RCB              R4 20396000
         B     MBTAMXAB            GO TO RTAM ABNORMAL EXIT          R4 20396500
         EJECT                                                       R4 20397000
*                                                                       20397500
*                             2770/2780 GET ROUTINE                     20398000
*                                                                       20398500
         SPACE 2                                                     R4 20399000
M27X0GET L     ML,DCTDCB           GET ADDRESS OF LINE DCT           R4 20399500
         TM    MDCTLINE-DCTDSECT(ML),DCTPASCI  TEST CODE TYPE           20400000
         BZ    MBHGNASC            BRANCH IF EBCDIC                     20400500
         CL    R15,TPBLCCAD        TEST BUFFER STATUS                   20401000
         BNE   MBHGNASC            BRANCH IF BUFFER HAS BEEN TRANSLATED 20401500
         LA    R14,TPBUFST         LOCATE START OF RJE BUFFER DATA   R4 20402000
         LH    WA,$BFSZBSC         OBTAIN RJE BUFFER DATA LENGTH     R4 20402500
         SPACE 1                                                     R4 20403000
M27X0TR1 CH    WA,=H'256'          IF REMAINING LENGTH NOT GT 256,   R4 20403500
         BNH   M27X0TR3             BR TO FINISH TRANSLATION         R4 20404000
         TR    0(256,R14),MBGASCII   ELSE TRANSLATE 256 BYTES        R4 20404500
         LA    R14,256(,R14)       THEN UPDATE BUFFER ADDRESS,       R4 20405000
         SH    WA,=H'256'           REDUCE BUFFER LENGTH,            R4 20405500
         B     M27X0TR1              AND BR TO CONTINUE TRANSLATION  R4 20406000
         SPACE 1                                                     R4 20406500
M27X0TR2 TR    0(*-*,R14),MBGASCII *** EXECUTE ONLY ***              R4 20407000
         SPACE 1                                                     R4 20407500
M27X0TR3 BCTR  WA,0                REDUCE LENGTH FOR EXECUTE         R4 20408000
         EX    WA,M27X0TR2         TRANSLATE TO END OF BUFFER        R4 20408500
         SPACE 1                                                     R4 20409000
MBHGNASC CLI   MDCTTYPE,DCTP2780   TEST TERMINAL TYPE                R4 20409500
         BNL   M2780GET            BRANCH IF NOT 2770                R4 20410000
         CLI   TPBUFST,MBCDSTX     TEST HEADER CHARACTER                20410500
         BE    MBHGNTRS            BRANCH IF NOT TRANSPARENT TEXT       20411000
         CL    R15,TPBLCCAD        TEST DATA POINTER                    20411500
         BNE   *+8                 BRANCH IF NOT AT START OF BLOCK      20412000
         LA    R15,2(,R15)         SKIP OVER HEADER SEQUENCE            20412500
         MVC   0(80,R1),0(R15)     MOVE RECORD TO CALLER'S AREA         20413000
         LA    R15,80(,R15)        STEP TO START OF NEXT RECORD         20413500
         B     MGSOTEST            EXIT                                 20414000
         SPACE 1                                                     R4 20414500
M2780GET CLC   MDLESTX-MCODSECT+MEBCDIC,0(R15)    TEST HEADER SEQUENCE  20415000
         BE    MBHGTRSP            BRANCH IF TRANSPARENT TEXT           20415500
         SPACE 1                                                     R4 20416000
MBHGNTRS BCTR  R15,0               NO, BACK UP OVER MISSING DLE         20416500
         CLI   1(R15),MBCDSTX      TEST HEADER CHARACTER                20417000
         BE    *+6                 BRANCH IF NORMAL START OF TEXT       20417500
         BCTR  R15,0               NO, BACK UP OVER MISSING STX         20418000
         TM    $RJEOPTS,$BSVBOPT   TEST 2780 BLOCKING OPTION         R4 20418500
         BO    SKIP70              BR IF SELECTED                    R4 20419000
         CLI   MDCTTYPE,DCTP2780   TEST TERMINAL TYPE                R4 20419500
         BNL   MBHGTRSP            BRANCH IF NOT 2770                R4 20420000
SKIP70   LA    R0,5                SET TO SKIP FOUR CHARACTERS          20420500
         CLI   MDCTTYPE,DCTP2780   TEST TERMINAL TYPE                R4 20421000
         BNL   MBHGSRCH            SKIP IF NOT 2770                  R4 20421500
         BCTR  R0,0                SET TO SKIP THREE CHARATCERS      R4 20422000
         EJECT                                                       R4 20422500
MBHGSRCH LR    ML,R1               SAVE ADDRESS OF CALLER'S AREA     R4 20423000
         TRT   2(80,R15),M27X0TRT  SEARCH FOR TERMINATION CHARACTER  R4 20423500
         BZ    MBHGTRSP            BRANCH IF NOT FOUND                  20424000
         SPACE 1                                                        20424500
         MVI   0(ML),C' '          BLANK OUT                            20425000
         MVC   1(79,ML),0(ML)       CALLER'S AREA                       20425500
         LR    R14,ML              SET START OF CALLER'S AREA           20426000
         SPACE 1                                                        20426500
MBHGNFLD LA    WA,3(,R15)          COMPUTE LENGTH                       20427000
         LCR   WA,WA                OF NON-BLANK FIELD                  20427500
         AR    WA,R1                 OR RECORD (-1)                     20428000
         BM    *+8                 BRANCH IF LENGTH IS ZERO             20428500
         EX    WA,MBHGMVC          MOVE FIELD TO CALLER'S AREA          20429000
         CLI   0(R1),MBCDIGS       WERE COMPRESSED BLANKS FOUND         20429500
         BNE   MBHGNREC            BRANCH IF NOT                        20430000
         LA    R15,3(WA,R15)       STEP TO NEXT INPUT FIELD             20430500
         LA    R14,1(WA,R14)       STEP TO START OF BLANK FIELD         20431000
         L     WA,DCTDCB           GET ADDRESS OF LINE DCT              20431500
         TM    MDCTLINE-DCTDSECT(WA),DCTPASCI  TEST CODE TYPE           20432000
         BZ    *+10                BRANCH IF NOT ASCII                  20432500
         TR    1(1,R1),MBPASCII    RE-TRANSLATE BLANK COUNT          R4 20433000
         IC    WA,1(,R1)           WA = COMPRESSED BLANK COUNT       R4 20433500
         N     WA,=F'63'           ACTUAL COUNT IS 6 LOW BITS           20434000
         AR    R14,WA              SKIP BLANKS IN CALLER'S AREA         20434500
         LA    WA,79(,ML)          COMPUTE POTENTIAL MAXIMUM            20435000
         SR    WA,R14               LENGTH REMAINING INPUT (-1)         20435500
         BM    MBHGIREC            BR IF LGTH IS ZERO OR LESS           20436000
         EX    WA,MBHGTRT          SEARCH FOR ENDING CHARACTER       R4 20436500
         BNZ   MBHGNFLD            BRANCH IF FOUND                      20437000
         EX    WA,MBHGMVC          MOVE LAST FIELD TO CALLER            20437500
         SPACE 1                                                     R4 20438000
MBHGIREC C     WA,=F'-1'           WAS BAD IGS DATA ENCOUNTERED         20438500
         BL    *+6                 IF YES, AVOID DEBLOCK LOOP           20439000
         SPACE 1                                                        20439500
MBHGNREC AR    R15,WA              STEP                                 20440000
         AR    R15,R0               TO NEXT RECORD                      20440500
         LR    R1,ML               GET ADDRESS OF CALLER'S AREA         20441000
         B     MGSOTEST            EXIT                                 20441500
         SPACE 1                                                     R4 20442000
MBHGMVC  MVC   0(*-*,R14),2(R15)   *** EXECUTE ONLY ***              R4 20442500
MBHGTRT  TRT   2(*-*,R15),M27X0TRT *** EXECUTE ONLY ***              R4 20443000
         SPACE 1                                                     R4 20443500
MBHGTRSP MVC   0(80,R1),2(R15)     MOVE 80 BYTES TO CALLER'S AREA       20444000
         LA    R15,83(,R15)        STEP TO START OF NEXT RECORD         20444500
         EJECT                                                          20445000
*                                                                       20445500
*                             GET COMMON EXIT ROUTINES                  20446000
*                                                                       20446500
         SPACE 3                                                        20447000
MGSOTEST CLC   MSONCODE,0(R1)      CHECK FOR SIGN-ON CARD               20447500
         BNE   MGNXTREC            BRANCH IF NOT SIGN-ON                20448000
         SPACE 1                                               @OZ25901 20448100
         CLI   PCEID+1,PCEMLMID    IF LINE MANAGER,            @OZ25901 20448200
         BE    MGSOTST1              BR TO PROCESS SIGNON      @OZ25901 20448300
         SPACE 1                                                     R4 20448500
MGQSUSE $QSUSE TYPE=TEST           MAY QUEUES BE USED...             R4 20449000
         BZ    MGSOTST1            BR IF YES                         R4 20449500
         LM    LINK,BASE2,PCELINK  RELOAD CALLER'S REGISTERS         R4 20450000
         BAL   R15,$QSUSE          BR TO $QSUSE RTN (SAVE=NO ENTRY)  R4 20450500
        $RESTORE                   RESTORE ACCESS METHOD REGISTERS   R4 20451000
         LR    R1,R0               RELOAD SIGN-ON CARD ADDRESS          20451500
         B     MGQSUSE             BR TO RETEST QUEUES               R4 20452000
         SPACE 1                                                     R4 20452500
MGSOTST1 BAL   ML,MSIGNON          PROCESS SIGN-ON                   R4 20453000
         B     MGNXTBLK            READ NEXT DATA BLOCK                 20453500
         SPACE 3                                                        20454000
MGNXTREC CL    R15,BUFEWF          TEST FOR END OF DATA                 20454500
         BL    MGETEXIT            BRANCH IF NOT TO NORMAL EXIT         20455000
MGNXTBLK BAL   ML,MEXCP            INITIATE READ OF NEXT BLOCK          20455500
         SPACE 3                                                        20456000
MGETEXIT ST    R15,TPBFDATA        UPDATE DATA POINTER                  20456500
         L     R1,PCER0            GET ADDRESS OF DATA CARD             20457000
         CLC   MSOFCODE,0(R1)      CHECK FOR SIGN-OFF CARD              20457500
         BNE   MBTAMXIT            EXIT IF NOT SIGN-OFF              R4 20458000
         L     R1,PCER1            GET ADDRESS OF REMOTE DCT         R4 20458500
         L     R0,PCER0            RELOAD CALLERS BUFFER ADDR       R41 20458600
         L     R15,DCTDCB-DCTDSECT(R1)  GET ADDRESS OF LINE DCT         20459000
         OI    MDCTSTAT-DCTDSECT(R15),DCTSOFF   SET SIGN-OFF FLAG       20459500
        $RESTORE REENTER=YES       SIMULATE RE-ENTRY                 R4 20460000
         TITLE 'HASP BSC REMOTE TERMINAL PUT ROUTINE'                R4 20460500
*                                                                       20461000
*                             REMOTE TERMINAL PUT ROUTINE               20461500
*                                                                       20462000
         SPACE 3                                                        20462500
         USING RTAMBPUT,MBASE1     ESTABLISH PUT ADDRESSABILITY      R4 20463000
RTAMBPUT DS    0H                  ADDRESS OF RTAM BSC PUT ROUTINE   R4 20463500
         LR    R1,R0               MOVE SECOND PARAMETER TO R1          20464000
         CLI   0(R1),X'03'         TEST CHANNEL COMMAND TYPE            20464500
         BE    MBTAMXIT            RETURN IF NOP                     R4 20465000
         CLI   0(R1),X'FF'         TEST CHANNEL COMMAND TYPE            20465500
         BE    MPTRUNC             BRANCH IF BUFFER TRUNCATE            20466000
         SPACE 1                                                        20466500
         LTR   MBUF,MBUF           TEST BUFFER ADDRESS                  20467000
         BNZ   MPUTBUF             BRANCH IF NOT ZERO                   20467500
         BAL   ML,MGETPBUF         GET AN OUTPUT BUFFER                 20468000
         MVI   IOBCCW6+7,6         INITIALIZE DATA LENGTH               20468500
MPUTRTRY L     R1,PCER0            BRING BACK CCW ADDRESS            R4 20469000
         SPACE 2                                                        20469500
MPUTBUF  SLR   R0,R0               SET R0 TO                         R4 20470000
         IC    R0,MDCTRECL          REMOTE DEVICE WIDTH                 20470500
SKIP80   CLI   DCTDEVTP,DCTRPU     TEST DEVICE TYPE                     20473500
         BE    MPUNCH              BRANCH IF REMOTE PUNCH               20474000
         SPACE 1                                                        20474500
         TM    0(R1),X'02'         TEST CURRENT COMMAND TYPE            20475000
         BZ    MPNIMED             BRANCH IF NOT IMMEDIATE COMMAND      20475500
         TM    0(R1),X'80'         TEST CURRENT COMMAND TYPE            20476000
         BO    MPSKIP              BRANCH IF IMMEDIATE SKIP             20476500
         CLI   TPBLCCC,X'01'       TEST PREVIOUS COMMAND TYPE           20477000
         BE    MPSETCC             BRANCH IF WRITE/NO SPACE             20477500
         B     MPDUMMY             NO, GENERATE DUMMY LINE              20478000
         SPACE 1                                                        20478500
MPSKIP   OI    TPBLCCC,X'02'       FORCE PREVIOUS COMMAND IMMEDIATE     20479000
         CLC   TPBLCCC,0(R1)       COMPARE PREVIOUS COMMAND TO CURRENT  20479500
         BE    MBTAMXIT            RETURN IF REDUNDANT SKIP          R4 20480000
         TM    TPBLCCC,X'80'       TEST PREVIOUS COMMAND TYPE           20480500
         BO    MPDUMMY             GENERATE DUMMY LINE IF SKIP          20481000
         CLI   TPBRECNT,0          TEST RECORD COUNT                    20481500
         BNE   MPSETCC             BRANCH IF BUFFER IS NOT EMPTY        20482000
         B     MPDUMMY             GENERATE DUMMY LINE                  20482500
         EJECT                                                       R4 20483000
MPUNCH   MVI   0(R1),X'79'         SET PUNCH CHANNEL COMMAND            20483500
         SPACE 1                                                        20484000
MPNIMED  LM    R1,WA,0(R1)         PICK UP CCW IN REGISTERS R1 & WA     20484500
         LA    R1,0(,R1)           CLEAR                                20485000
         LA    WA,0(,WA)            HIGH-ORDER BYTES                    20485500
         CLR   R0,WA               COMPARE LENGTH WITH MAXIMUM          20486000
         BNH   *+10                BRANCH IF LENGTH GREATER THAN MAX    20486500
         LTR   R0,WA               R0 = ACTUAL LENGTH                   20487000
         BZ    MPDUMMY             GENERATE DUMMY LINE IF ZERO LENGTH   20487500
         SPACE 1                                                        20488000
         LR    WA,R1               GENERATE ADDRESS                     20488500
         AR    WA,R0                OF LAST BYTE                        20489000
         BCTR  WA,0                SCAN BACKWARDS                       20489500
         CLI   0(WA),C' '           ELIMINATING                         20490000
         BNE   MPUT                  TRAILING                           20490500
         BCT   R0,*-10                BLANKS                            20491000
         SPACE 2                                                        20491500
MPDUMMY  LA    R0,1                GENERATE ONE-BYTE                    20492000
         LA    R1,=C' '             BLANK LINE                          20492500
         SPACE 2                                                        20493000
MPUT     DS    0H                                                    R4 20493500
         TM    MSEQTYPE,MBSCSEQ+MCPUSEQ TEST SEQUENCE TYPE              20494000
         BO    MBCPUPUT            BRANCH IF BSC PROGRAMMABLE INTERFACE 20494500
         SPACE 2                                                        20495000
         CLC   TPBRECNT,TPBMXREC   TEST BUFFER RECORD COUNT          R4 20495500
         BNL   MPFLUSH             BRANCH IF LIMIT HAS BEEN REACHED     20496000
         B     M27X0PUT            BRANCH TO 2770/2780 PUT              20496500
         EJECT                                                          20497000
*                                                                       20497500
*                             BSC CPU PUT ROUTINE                       20498000
*                                                                       20498500
         SPACE 3                                                        20499000
MBCPUPUT L     R15,$MWORK          GET ADDRESS OF WORK AREA          R4 20499500
         TM    MDCTLINE,DCTPTRSP   TEST FOR TRANSPARENCY                20500000
         BO    MBCPCOMP            BYPASS TRANSLATE IF YES              20500500
         TM    $PRTOPTS,$PRTRANS   TEST PRINT TRANSLATE OPTION       R4 20501000
         BZ    SKIP90              BR IF NOT SELECTED                R4 20501500
         SPACE 1                                                        20502000
         CLI   DCTDEVTP,DCTRPR     TEST DEVICE TYPE                     20502500
         BE    MBCPCOMP            BRANCH IF REMOTE PRINTER             20503000
         SPACE 1                                                        20503500
SKIP90   LR    WA,R0               GET LENGTH OF LINE/CARD              20504000
         BCTR  WA,0                DECREMENT                            20504500
         EX    WA,MBPUTRAN         TRANSLATE ILLEGAL CHARACTERS TO ZERO 20505000
         SPACE 2                                                        20505500
MBCPCOMP LA    WA,63               GET MAXIMUM NORMAL STRING LENGTH     20506000
         CLR   WA,R0               COMPARE WITH REMAINING LENGTH        20506500
         BNH   *+6                 BRANCH IF MAXIMUM LENGTH IS LESS     20507000
         LR    WA,R0               NO, USE REMAINING LENGTH AS MAXIMUM  20507500
         LR    R14,R1              GET ADDRESS OF FIRST DATA BYTE       20508000
         SPACE 2                                                        20508500
MBCPLOOK CLC   1(1,R14),0(R14)     TEST NEXT TWO CHARACTERS             20509000
         BNE   MBCPINCR            BRANCH IF NOT START OF DUP STRING    20509500
         SPACE 1                                                        20510000
         CLI   0(R14),C' '         TEST STRING TYPE                     20510500
         BNE   *+12                BRANCH IF NOT START OF BLANK STRING  20511000
         CL    R0,=F'1'            CHECK NUMBER                         20511500
         B     MBCPENDT             OF CHARACTERS REMAINING             20512000
         SPACE 1                                                        20512500
         CLC   2(1,R14),0(R14)     TEST NEXT CHARACTER                  20513000
         BNE   MBCPINCR            BRANCH IF NOT START OF DUP STRING    20513500
         CL    R0,=F'2'            CHECK NUMBER OF CHARACTERS REMAINING 20514000
MBCPENDT BH    MBCPNEND            BRANCH IF ENOUGH CHARS FOR DUP FIELD 20514500
         SPACE 1                                                        20515000
MBCPINCR LA    R14,1(,R14)         ADVANCE TO NEXT CHARACTER            20515500
         BCTR  R0,0                DECREMENT REMAINING LENGTH           20516000
         BCT   WA,MBCPLOOK         DECREMENT MAXIMUM LENGTH             20516500
         SPACE 1                                                        20517000
MBCPNEND SR    R14,R1              GENERATE NORMAL STRING LENGTH        20517500
         BZ    MBCPDUP             BRANCH IF DUPLICATE STRING           20518000
         STC   R14,0(R15)          SET LENGTH IN SCB                    20518500
         OI    0(R15),X'C0'        INDICATE NORMAL STRING               20519000
         EX    R14,MBCPMOV         MOVE CHARACTER STRING (+1)        R4 20519500
         LA    R15,1(R14,R15)      ADVANCE OUTPUT STRING POINTER        20520000
         B     MBCPDONE            ADVANCE INPUT STRING POINTER         20520500
         SPACE 1                                                     R4 20521000
MBCPMOV  MVC   1(*-*,R15),0(R1)    *** EXECUTE ONLY ***              R4 20521500
         EJECT                                                       R4 20522000
MBCPDUP  LA    WA,31               GET MAXIMUM DUPLICATE STRING LENGTH  20522500
         CLR   WA,R0               COMPARE WITH REMAINING LENGTH        20523000
         BNH   *+6                 BRANCH IF MAXIMUM LENGTH IS LESS     20523500
         LR    WA,R0               NO, USE REMAINING LENGTH AS MAXIMUM  20524000
         LA    R14,2(,R1)          ADVANCE TWO CHARACTERS               20524500
         BCT   WA,MBCPSCAN         SCAN FOR END OF DUPLICATE FIELD      20525000
         SPACE 1                                                        20525500
MBCPCLI  CLC   0(1,R14),0(R1)      TEST NEXT CHARACTER               R4 20526000
         BNE   *+12                BRANCH IF END OF DUPLICATE FIELD     20526500
         LA    R14,1(,R14)         NO, ADVANCE TO NEXT CHARACTER        20527000
MBCPSCAN BCT   WA,MBCPCLI          DECREMENT MAXIMUM LENGTH             20527500
         SPACE 1                                                        20528000
         SR    R14,R1              GENERATE DUPLICATE STRING LENGTH     20528500
         STC   R14,0(R15)          SET LENGTH IN SCB                    20529000
         OI    0(R15),X'80'        TURN ON HIGH-ORDER BIT               20529500
         SR    R0,R14              GENERATE REMAINING LENGTH            20530000
         CLI   0(R1),C' '          TEST STRING TYPE                     20530500
         BNE   *+12                BRANCH IF NOT BLANK STRING           20531000
         LA    R15,1(,R15)         ADVANCE OVER SCB                     20531500
         B     MBCPDONE            ADVANCE INPUT STRING POINTER         20532000
         SPACE 2                                                        20532500
         OI    0(R15),X'20'        INDICATE DUPLICATE STRING            20533000
         MVC   1(1,R15),0(R1)      SET BYTE TO BE DUPLICATED            20533500
         LA    R15,2(,R15)         ADVANCE OUTPUT STRING POINTER        20534000
         SPACE 2                                                        20534500
MBCPDONE ALR   R1,R14              ADVANCE INPUT STRING POINTER         20535000
         LTR   R0,R0               TEST REMAINING CHARACTER COUNT       20535500
         BP    MBCPCOMP            BRANCH IF NOT DONE TO COMPRESS       20536000
         SPACE 1                                                        20536500
         MVI   0(R15),0            INSERT END OF RECORD SCB             20537000
         LA    R15,1(,R15)          AND ADVANCE POINTER                 20537500
         B     MCPFILL             ADD COMPRESSED RECORD TO BUFFER      20538000
         EJECT                                                          20538500
*                                                                       20539000
*                             2770/2780 PUT ROUTINE                     20539500
*                                                                       20540000
         SPACE 3                                                        20540500
M27X0PUT L     R15,TPBFDATA        GET ADDRESS OF NEXT DATA BYTE        20541000
         SPACE 1                                                        20541500
         CLI   DCTDEVTP,DCTRPU     TEST DEVICE TYPE                     20542000
         BNE   MBHPRINT            BRANCH IF NOT REMOTE PUNCH           20542500
         SPACE 2                                                        20543000
         TM    MDCTLINE,DCTPTRSP   TEST FOR TRANSPARENCY                20543500
         BO    MBHPUNCH            BRANCH IF TRANSPARENCY               20544000
         SPACE 1                                                        20544500
         LR    WA,R0               GET LENGTH OF CARD                   20545000
         BCTR  WA,0                DECREMENT                            20545500
         EX    WA,MBPUTRAN         TRANSLATE ILLEGAL CHARACTERS TO ZERO 20546000
         B     MBHPRNHT            PROCESS AS PRINT                     20546500
         EJECT                                                          20547000
*                                                                       20547500
*                             2770/2780 PUNCH ROUTINE                   20548000
*                                                                       20548500
         SPACE 3                                                        20549000
MBHPUNCH CLI   TPBRECNT,0          TEST BUFFER STATUS                   20549500
         BNE   MBHPUNXT            BRANCH IF BUFFER IS NOT EMPTY        20550000
         LA    R15,TPBUFST+36      INITIALIZE DATA POINTER              20550500
         CLI   MDCTTYPE,DCTP2780   TEST TERMINAL TYPE                R4 20551000
         BNL   SKIP100             BRANCH IF NOT 2770                R4 20551500
         LA    R15,TPBUFST+12      INITIALIZE 2770 DATA POINTER         20552000
SKIP100  CLI   IOBCCW6,X'08'       TEST FOR FIRST ENTRY                 20552500
         BE    MBHPUNEW            BRANCH IF NOT FIRST ENTRY            20553000
         SPACE 1                                                        20553500
         LA    R0,IOBCCW5          INITIALIZE                           20554000
         LA    R1,MBSCSEQ+MWRITSEQ  CCW                                 20554500
         BAL   ML,MCCWINIT           CHAIN                              20555000
         MVI   IOBCCW6,X'08'       CHANGE WRITE TO TIC                  20555500
         B     MPUTRTRY            REENTER PUT PROCESSING            R4 20556000
         SPACE 2                                                        20556500
MBHPUNXT CLI   MDCTTYPE,DCTP2780   TEST TERMINAL TYPE                R4 20557000
         BNL   MBHPUNEW            BRANCH IF NOT 2770                R4 20557500
         SL    R15,=F'6'           BACK UP DATA POINTER                 20558000
         L     WA,TPBUFST+4        INCREMENT                            20558500
         LA    WA,80(,WA)           CCW                                 20559000
         STH   WA,TPBUFST+6          BYTE COUNT                         20559500
         B     MBHPUMOV            MOVE CARD INTO BUFFER                20560000
         EJECT                                                       R4 20560500
MBHPUNEW MVC   0(6,R15),MBHPUNCC   SET UP PUNCH CONTROL CHARACTERS      20561000
MBHPUMOV MVI   7(R15),C' '         BLANK OUT                            20561500
         MVC   8(78,R15),7(R15)     COLUMNS 2-80                        20562000
         BCTR  R0,0                GENERATE LENGTH-1                    20562500
         LR    WA,R0               MOVE CARD                         R4 20563000
         EX    WA,MBHPMOV1          INTO BUFFER                      R4 20563500
         SPACE 1                                                        20564000
         CLI   TPBRECNT,0          TEST BUFFER STATUS                   20564500
         BE    MBHPU1ST            BRANCH IF FIRST CARD IN BUFFER       20565000
         LA    R0,86               GET NORMAL LENGTH                    20565500
         CLI   MDCTTYPE,DCTP2780   TEST TERMINAL TYPE                R4 20566000
         BL    MBHPUPDT            BRANCH IF 2770                    R4 20566500
         B     *+12                MUST BE 2780                         20567000
         SPACE 1                                                        20567500
MBHPU1ST LA    R0,82               GET LENGTH OF FIRST CARD             20568000
         LA    R15,4(,R15)         GET START OF FIRST CARD              20568500
         SPACE 1                                                        20569000
         L     WA,TPBLCCAD         GET ADDRESS OF CCW                   20569500
         ST    R15,0(WA)           SET UP CCW DATA ADDRESS,             20570000
         MVI   0(WA),X'01'          CHANNEL COMMAND,                    20570500
         MVC   4(2,WA),IOBCCW6+4     FLAG BITS, CCW TYPE,               20571000
         STH   R0,6(WA)               AND DATA LENGTH                   20571500
         LA    WA,8(,WA)           STEP TO NEXT CCW                     20572000
         LA    R1,IOBCCW7          GET ADDRESS OF WRITE ETB CCW         20572500
         ST    R1,0(WA)            SET UP                               20573000
         MVI   0(WA),X'08'          TIC TO WRITE ETB                    20573500
         ST    WA,TPBLCCAD         SAVE ADDRESS OF CCW                  20574000
         SPACE 1                                                        20574500
MBHPUPDT ALR   R15,R0              ADVANCE TO START OF NEXT RECORD      20575000
         IC    R1,TPBRECNT         GET RECORD COUNT                     20575500
         ST    R15,TPBFDATA        UPDATE DATA ADDRESS                  20576000
         LA    R1,1(,R1)           UPDATE                               20576500
         STC   R1,TPBRECNT          RECORD COUNT                        20577000
         B     MBTAMXIT            EXIT                              R4 20577500
         SPACE 1                                                     R4 20578000
MBHPMOV1 MVC   6(*-*,R15),0(R1)    *** EXECUTE ONLY ***              R4 20578500
         EJECT                                                       R4 20579000
*                                                                       20579500
*                             2770/2780 PRINT ROUTINE                   20580000
*                                                                       20580500
         SPACE 3                                                        20581000
MBHPRINT TM    $PRTOPTS,$PRTRANS   TEST PRINT TRANSLATE OPTION       R4 20581500
         BO    SKIP110             BR IF SELECTED                    R4 20582000
         LR    WA,R0               GET LENGTH OF LINE                   20582500
         BCTR  WA,0                DECREMENT                            20583000
         EX    WA,MBPUTRAN         TRANSLATE ILLEGAL CHARACTERS TO ZERO 20583500
         SPACE 1                                                        20584000
SKIP110  TM    MDCTFEAT,DCTPTAB    TEST FOR HORIZ FORMAT CONTROL        20584500
         BZ    MBHPRNHT            BYPASS COMPRESSION IF NOT            20585000
         SPACE 2                                                        20585500
         L     R14,$MWORK          POINT TO WORK AREA                R4 20586000
         LR    ML,R0               MOVE PRINT LINE                   R4 20586500
         BCTR  ML,0                FOR LINE LENGTH             @OZ19490 20586800
         EX    ML,MBHCINIT          TO WORK AREA                     R4 20587000
         LR    R1,R0               R1 = ORIGINAL LENGTH                 20587500
         BCTR  R14,0               PREPARE TO SCAN                   R4 20588000
         SPACE 1                                                        20588500
MBHPRTGP SH    R0,$HTDIST          DECREMENT CHARACTER COUNT         R4 20589000
         BNP   MBHPRDHT            DONE IF NO CHARACTERS LEFT           20589500
         LH    WA,$HTDIST          PREPARE TO                        R4 20590000
         ALR   R14,WA               SCAN NEXT TAB GROUP              R4 20590500
         SPACE 1                                                        20591000
MBHPRTBL CLI   0(R14),C' '         TEST NEXT CHARACTER                  20591500
         BNE   MBHPRNBL            DONE IF NOT BLANK                    20592000
         BCTR  R14,0               STEP TO                              20592500
         BCT   WA,MBHPRTBL          NEXT CHARACTER                      20593000
         SPACE 1                                                        20593500
MBHPRNBL SH    WA,$HTDIST          GENERATE NUMBER OF BLANKS (MINUS) R4 20594000
         BNM   MBHPRTGP            BR IF NO BLANKS TO COMPRESS       R4 20594500
         LA    R14,1(,R14)         CORRECT CHARACTER POINTER            20595000
         BE    MBHPRTGP            BRANCH IF ONLY ONE BLANK             20595500
         SPACE 1                                                        20596000
         LA    R1,1(WA,R1)         COMPUTE LENGTH OF COMPRESSED LINE    20596500
         MVI   0(R14),MBCDHT       INSERT                               20597000
         LCR   WA,WA                TAB                                 20597500
         AR    WA,R14                CHARACTER                          20598000
         LR    ML,R0               COMPRESS                          R4 20598500
         EX    ML,MBHPMOV2          BLANKS                           R4 20599000
         B     MBHPRTGP            SCAN NEXT TAB GROUP                  20599500
         SPACE 1                                                     R4 20600000
MBHPMOV2 MVC   1(*-*,R14),0(WA)    *** EXECUTE ONLY ***              R4 20600500
         SPACE 1                                                        20601000
MBHPRDHT LR    R0,R1               R0 = COMPRESSED LINE LENGTH          20601500
         L     R1,$MWORK           R1 = ADDRESS OF COMPRESSED LINE   R4 20602000
         B     MBHPRNC             GO TO PUT REC IN BUFFER              20602500
         EJECT                                                       R4 20603000
MBHPRNHT DS    0H                                                    R4 20603500
         TM    MDCTFEAT,DCTPPRES   TEST FOR COMPRESS FEATURE            20604000
         BZ    MBHPRNC             BRANCH IF NOT                        20604500
         C     R0,=F'2'            IS LINE LONGER THAN TWO              20605000
         BNH   MBHPRNC             BRANCH IF NOT                        20605500
         L     R14,$MWORK          POINT TO WORK AREA                R4 20606000
         LR    ML,R0               ML = LINE LENGTH                     20606500
         BCTR  ML,0                ADJUST LENGTH FOR MOVE      @OZ19490 20606800
         EX    ML,MBHCINIT         MOVE LINE TO WORK AREA               20607000
         LR    ML,0                RESTORE LENGTH FOR COMPRES  @OZ19490 20607200
         LR    R1,R14              R1 = ADDR OF COMPRESSED LINE      R4 20607500
         LR    WA,R1               WA = ADDR OF UNCOMPRESSED LINE       20608000
         SPACE 1                                                        20608500
MBHCLOOK CLI   0(WA),C' '          LOOK FOR START OF BLANK FIELD        20609000
         BNE   MBHCINCR            BRANCH IF NOT                        20609500
         LA    R0,63               R0 = MAX BLANK FIELD LENGTH          20610000
         LR    R14,WA              R14 = ADDR OF FIRST BLANK            20610500
         B     *+12                GO TO SCAN FOR MORE BLANKS           20611000
         SPACE 1                                                        20611500
MBHCSCNB CLI   0(WA),C' '          DOES BLANK FIELD CONTINUE            20612000
         BNE   MBHCENDB            BRANCH IF NOT                        20612500
         LA    WA,1(,WA)           INCREMENT SCAN ADDR                  20613000
         BCT   ML,*+10             BRANCH IF LINE NOT EXHAUSTED         20613500
         LR    R0,R14              R0 = ADDR OF LINE END +1             20614000
         B     MBHCLREC            GO COMPUTE COMPRESSED LENGTH         20614500
         BCT   R0,MBHCSCNB         LOOP IF MAX FIELD NOT EXCEEDED       20615000
         SPACE 1                                                        20615500
MBHCENDB LR    R0,WA               R0 = ADDR OF FIELD END +1            20616000
         SR    R0,R14              R0 = BLANK FIELD LENGTH              20616500
         C     R0,=F'2'            IS FIELD LONGER THAN TWO             20617000
         BNH   MBHCINCR            BRANCH IF NOT                        20617500
         MVI   0(R14),MBCDIGS      USE IGS TO START FIELD               20618000
         STC   R0,1(,R14)          FOLLOW WITH FIELD LENGTH             20618500
         OI    1(R14),X'40'        LENGTH MUST BE X'42' - X'7F'         20619000
         EX    ML,MBHCPRES         COMPRESS REMAINDER OF LINE           20619500
         TM    MDCTLINE,DCTPASCI   TEST CODE TYPE                       20620000
         BZ    *+10                BRANCH IF NOT ASCII                  20620500
         TR    1(1,R14),MBGASCII   PRE-TRANSLATE BLANK COUNT         R4 20621000
         LA    WA,2(,R14)          WA = ADDR OF LINE REMAINDER       R4 20621500
         B     MBHCLOOK            GO LOOK FOR NEXT BLANK FIELD         20622000
         SPACE 1                                                        20622500
MBHCINIT MVC   0(*-*,R14),0(R1)    *** EXECUTE ONLY ***              R4 20623000
MBHCPRES MVC   2(*-*,R14),0(WA)    *** EXECUTE ONLY ***              R4 20623500
         EJECT                                                       R4 20624000
MBHCINCR LA    WA,1(,WA)           INCREMENT SCAN ADDR                  20624500
         BCT   ML,MBHCLOOK         LOOP IF LINE NOT EXHAUSTED           20625000
         SPACE 1                                                        20625500
         LR    R0,WA               R0 = ADDR OF LINE END +1             20626000
MBHCLREC SR    R0,R1               R0 = COMPRESSED LINE LENGTH          20626500
MBHPRNC  CLI   MDCTTYPE,DCTP2780   TEST TERMINAL TYPE                R4 20627000
         BNL   MB2780PP            BRANCH IF NOT 2770                R4 20627500
         LA    WA,1                SET UP 2770 INITIAL BYTE COUNT       20628000
         LA    ML,511              SET FOR 512 MAXIMUM BLOCK            20628500
         TM    MDCTFEAT,DCTPABEX   IS 2770 BUFFER SIZE 512              20629000
         BO    MBHPNBAS            BRANCH IF YES                        20629500
         LA    ML,255              SET FOR 256 MAXIMUM BLOCK            20630000
         TM    MDCTFEAT,DCTPBEXP   IS 2770 BUFFER SIZE 256              20630500
         BO    MBHPNBAS            BRANCH IF YES                        20631000
         LA    ML,127              NO, RESET MAXIMUM BLOCK LENGTH       20631500
         SPACE 1                                                     R4 20632000
MBHPNBAS LR    R14,WA              PRESET 2770 PUNCH DISPLACEMENT    R4 20632500
         CLI   DCTDEVTP,DCTRPU     TEST DEVICE TYPE                     20633000
         BE    MB2770PU            BRANCH IF REMOTE PUNCH               20633500
         B     MB2770PR            MUST BE REMOTE PRINTER            R4 20634000
         SPACE 1                                                        20634500
MB2780PP MVI   0(R15),MBCDITB      INSERT ITB AFTER PREVIOUS RECORD     20635000
         SR    WA,WA               SET UP 2780 INITIAL BYTE COUNT       20635500
         SR    ML,ML               SET UP 2780 MAXIMUM BLOCK            20636000
         IC    ML,TPBRECNT          LENGTH AS 400 MINUS SPACE           20636500
         LCR   ML,ML                 FOR ETB AND LRC'S FOR THIS         20637000
         LA    ML,398(,ML)            RECORD AND PREVIOUS RECORDS       20637500
         SPACE 1                                                        20638000
MB2770PR LA    R14,3               PRESET 2780/2770-PRINT DISPLACEMENT  20638500
         SPACE 1                                                        20639000
MB2770PU ST    R14,$CSAVREG        SAVE DATA DISPLACEMENT            R4 20639500
         CLI   TPBRECNT,0          TEST BUFFER STATUS                   20640000
         BNE   MBHPRNXT            BRANCH IF NOT FIRST RECORD           20640500
         MVI   0(R15),MBCDSTX      START FIRST RECORD WITH STX          20641000
         STH   WA,IOBCCW6+6        RESET BYTE COUNT                     20641500
         SPACE 1                                                        20642000
MBHPRNXT LR    WA,R0               WA = RECORD LENGTH                   20642500
         TM    MDCTFMT,DCTPVAR     TEST RECORD FORMAT                   20643000
         BO    MBHPRVAR            BRANCH IF VARIABLE LENGTH RECORDS    20643500
         CLI   DCTDEVTP,DCTRPU     TEST DEVICE TYPE                     20644000
         BNE   *+12                BRANCH IF NOT PUNCH                  20644500
         LA    WA,80               NO, USE PUNCH WIDTH                  20645000
         B     MBHPRVAR             AS RECORD LENGTH                    20645500
         TM    MDCTFEAT,DCTPTAB+DCTPPRES  TEST FOR TAB & COMPRESS       20646000
         BNZ   MBHPRVAR            ASSUME VAR RECS IF EITHER            20646500
         IC    WA,MDCTRECL         NO, USE REMOTE PRINTER WIDTH         20647000
         EJECT                                                       R4 20647500
MBHPRVAR ALR   R14,WA              COMPUTE ACTUAL RECORD LENGTH         20648000
         AH    R14,IOBCCW6+6       COMPUTE BLOCK LENGTH                 20648500
         CR    R14,ML              COMPARE WITH MAXIMUM                 20649000
         BH    MPFLUSH             FLUSH BUFFER IF TOO LARGE            20649500
         STH   R14,IOBCCW6+6       UPDATE BLOCK LENGTH                  20650000
         SPACE 1                                                        20650500
         CLR   WA,R0               COMPARE RECORD LENGTHS               20651000
         BE    MBHPPVAR            BRANCH IF NO BLANK FILL              20651500
         MVI   1(R15),C' '         BLANK                                20652000
         EX    WA,MBHPRMOV          OUT IMAGE                        R4 20652500
         SPACE 1                                               @OZ28102 20652600
MBHPPVAR DS    0H                                              @OZ28102 20653000
         BCTR  R0,0                GENERATE LENGTH-1           @OZ28102 20653500
         LR    ML,R0               RELOAD LENGTH FOR EXECUTE   @OZ28102 20654000
         ST    R15,TPBLCCAD        SAVE ADDRESS OF CARRIAGE CONTROL     20654500
         AL    R15,$CSAVREG        GET RECORD LOCATION WITHIN BUFFER R4 20655000
         EX    ML,MBHPPMOV         MOVE RECORD INTO BUFFER           R4 20655500
         ALR   R15,WA              ADVANCE DATA POINTER              R4 20656000
         IC    R1,TPBRECNT         GET RECORD COUNT                     20656500
         ST    R15,TPBFDATA        UPDATE DATA ADDRESS                  20657000
         LA    R1,1(,R1)           UPDATE                               20657500
         STC   R1,TPBRECNT          RECORD COUNT                        20658000
         MVI   0(R15),MBCDIRS      INSERT IRS CHARACTER AFTER RECORD    20658500
         CLI   $CSAVREG+3,1        TEST FOR 2770 PUNCH               R4 20659000
         BNE   MPSETCC             ADD CARRIAGE CONTROL IF NOT          20659500
         B     MBTAMXIT            EXIT IF 2770 PUNCH                R4 20660000
         SPACE 1                                                     R4 20660500
MBHPRMOV MVC   2(*-*,R15),1(R15)   *** EXECUTE ONLY ***              R4 20661000
MBHPPMOV MVC   0(*-*,R15),0(R1)    *** EXECUTE ONLY ***              R4 20661500
         EJECT                                                          20662000
*                                                                       20662500
*                             CPU PUT FILL ROUTINE                      20663000
*                                                                       20663500
         SPACE 3                                                        20664000
MCPFILL  SL    R15,$MWORK          GET LENGTH OF OUTPUT RECORD       R4 20664500
         BCTR  R15,0                MINUS 1                          R4 20665000
         LH    WA,IOBCCW6+6        PICK UP EXISTING LENGTH           R4 20665500
         LA    WA,3(WA,R15)        INCREMENT                            20666000
         LH    ML,$MLBFSIZ         COMPARE WITH                      R4 20667000
         SH    ML,=H'5'             MULTI-LEAVING                    R4 20667500
         CLR   WA,ML                 BLOCK SIZE                      R4 20668000
         BH    MPFLUSH             FLUSH BUFFER IF TOO LARGE            20670000
         STH   WA,IOBCCW6+6        UPDATE BLOCK LENGTH               R4 20670500
         SPACE 2                                                        20671000
         L     R1,TPBFDATA         GET ADDRESS OF NEXT DATA BYTE        20671500
         L     WA,$MWORK           POINT TO WORK AREA                R4 20672000
         SPACE 1                                                     R4 20676000
MCPFILL1 EX    R15,MCPFILMV        MOVE RECORD INTO BUFFER           R4 20676500
         SPACE 1                                                     R4 20677000
MCPFILL2 DS    0H                                                    R4 20677500
         ST    R1,TPBLCCAD         SAVE ADDRESS OF CARRIAGE CONTROL     20678000
         LA    R1,3(R1,R15)        INCREMENT DATA ADDRESS               20678500
         MVC   0(4,R1),MBCPEOB     ADD BUFFER TERMINATION            R4 20679000
         ST    R1,TPBFDATA         UPDATE DATA ADDRESS                  20679500
         MVI   TPBRECNT,X'0F'      INDICATE RECORDS IN BUFFER           20680000
         B     MPSETCC             SET CARRIAGE CONTROL AND EXIT        20680500
         SPACE 1                                                     R4 20681000
MCPFILMV MVC   2(*-*,R1),0(WA)     *** EXECUTE ONLY ***              R4 20681500
         EJECT                                                          20683500
*                                                                       20684000
*                             OUTPUT BUFFER FLUSH ROUTINE               20684500
*                                                                       20685000
         SPACE 3                                                        20685500
MPTRUNC  LTR   MBUF,MBUF           TEST BUFFER ADDRESS                  20686000
         BZ    MBTAMXIT            RETURN IF NO OUTPUT BUFFER        R4 20686500
         CLI   TPBRECNT,0          TEST BUFFER STATUS                   20687000
         BE    MBTAMXIT            RETURN IF BUFFER IS EMPTY         R4 20687500
         MVI   0(R1),X'03'         CHANGE CHANNEL COMMAND TO NOP        20688000
         SPACE 2                                                        20688500
MPFLUSH  DS    0H                  FLUSH OUTPUT BUFFER                  20689000
         LA    R15,MEXCP           ASSUME NON-MULTI-LEAVING TERMINAL    20689500
         TM    MSEQTYPE,MBSCSEQ+MCPUSEQ      TEST SEQUENCE TYPE         20690000
         BNO   MPFLUSHW            BR IF NOT MULTI-LEAVING TERMINAL  R4 20690500
         LA    R15,MBCWRITE        GET ADDR OF MULTI-LEAVING ROUTINE R4 20691000
         TM    MDCTSTAT,DCTERMNR   TEST FOR TERMINATED BY RECEIVER   R4 20691500
         BO    MBTAMXAB            IF YES, GO TO RTAM ABNORMAL EXIT  R4 20692000
         SPACE 1                                                     R4 20692500
MPFLUSHW BALR  ML,R15              INITIATE WRITE                    R4 20693000
         CLI   DCTDEVTP,DCTRCON    TEST DEVICE TYPE                     20693500
         L     R1,PCER1            R1 = DCT AD FOR POSSIBLE $RESTORE R4 20694000
         BE    MPFLRST             GO RE-ENTER IF REMOTE CONSOLE     R4 20694500
        $WAIT  WORK,SAVE=NO        WAIT FOR WRITE TO BE ACKNOWLEDGED R4 20695000
         SPACE 1                                                     R4 20695500
MPFLRST $RESTORE REENTER=YES       SIMULATE RE-ENTRY                 R4 20696000
         EJECT                                                          20696500
*                                                                       20697000
*                             PUT CARRIAGE CONTROL AND EXIT ROUTINES    20697500
*                                                                       20698000
         SPACE 3                                                        20698500
MPSETCC  L     WA,PCER0            GET ADDRESS OF CHANNEL COMMAND       20699000
         SR    R1,R1               CLEAR REGISTER                       20699500
         IC    R1,0(WA)             AND INSERT CHANNEL COMMAND          20700000
         L     WA,TPBLCCAD         GET ADDRESS OF RECORD BEGINNING   R4 20700500
         STC   R1,TPBLCCC          SAVE CHANNEL COMMAND FOR NEXT ENTRY  20703500
         SRL   R1,3                GENERATE INDEX                       20704000
         TM    MSEQTYPE,MCPUSEQ    TEST SEQUENCE TYPE                   20704500
         BZ    MPSETBH             BRANCH IF 2770 OR 2780               20705000
         SPACE 1                                                        20705500
MPSETRCB MVC   0(1,WA),MDCTRCB     SET UNIT RCB                      R4 20706000
         STC   R1,1(,WA)            AND SRCB                            20706500
         OI    1(WA),X'80'         ADD HIGH-ORDER BIT                   20707000
         B     MBTAMXIT            EXIT                              R4 20707500
         SPACE 1                                                        20708000
MPSETBH  MVI   1(WA),MBCDESC       INSERT ESCAPE CHARACTER           R4 20708500
         CLI   MDCTTYPE,DCTP2780   TEST TERMINAL TYPE                R4 20709000
         BL    SKIP120             BRANCH IF 2770                    R4 20709500
         LA    R1,32(,R1)          INCREMENT INDEX FOR 2780             20710000
SKIP120  IC    R1,MP27X0CC(R1)     GET CARRIAGE CONTROL CHARACTER       20710500
         STC   R1,2(,WA)           INSERT IN RECORD                     20711000
         TM    MDCTLINE,DCTPASCI   TEST CODE TYPE                       20711500
         BZ    MBTAMXIT            EXIT IF EBCDIC                    R4 20712000
         XI    2(WA),X'80'         CONVERT CARRIAGE CONTROL TO USASCII  20712500
         B     MBTAMXIT            EXIT                              R4 20713000
         TITLE 'HASP BSC REMOTE TERMINAL CLOSE ROUTINE'              R4 20713500
*                                                                       20714000
*                             REMOTE TERMINAL CLOSE ROUTINE             20714500
*                                                                       20715000
         SPACE 3                                                     R4 20715500
         USING RTAMBCLO,MBASE1     ESTABLISH CLOSE ADDRESSABILITY    R4 20716000
RTAMBNCL DS    0H                  ADDRESS OF RTAM BSC NCLOSE RTN   R41 20717000
         SPACE 3                                                     R4 20725000
RTAMBCLO DS    0H                  ADDRESS OF RTAM BSC CLOSE ROUTINE R4 20725500
         SLR   WA,WA               REMEMBER CLOSE                    R4 20726000
         LTR   MBUF,MBUF           TEST BUFFER ADDRESS                  20726500
         BZ    MCLOSE              IF ZERO, GO TO CPU CLOSE          R4 20727000
         TM    MSEQTYPE,MCPUSEQ    TEST SEQUENCE TYPE                   20727500
         BZ    M27X0CLO            BRANCH IF NOT PROGRAMMABLE INTERFACE 20728000
         EJECT                                                          20728500
*                                                                       20729000
*                             BSC CPU CLOSE ROUTINE                     20729500
*                                                                       20730000
         SPACE 3                                                        20730500
MCLOSE   DS    0H                  *                                 R4 20731000
         IC    R15,MDCTOPCT-DCTDSECT(R1)     DECREMENT                  20731500
         BCTR  R15,0                          OPEN                      20732000
         STC   R15,MDCTOPCT-DCTDSECT(R1)       COUNT                    20732500
         SPACE 2                                                        20733000
         CLI   DCTDEVTP,DCTRJR     TEST DEVICE TYPE                     20733500
         BE    MBTAMXIT            EXIT IF REMOTE READER             R4 20734000
         CLI   DCTDEVTP,DCTRCON    TEST DEVICE TYPE                  R4 20734500
         BNE   MCLOPPN             BRANCH IF NOT REMOTE CONSOLE      R4 20735000
         LTR   MBUF,MBUF           TEST BUFFER ADDRESS               R4 20735500
         BZ    MBTAMXIT            IF ZERO, GO TO RTAM NORMAL EXIT   R4 20736000
         B     MCONCLOS            ELSE GO WRITE LAST BUFFER         R4 20736500
         SPACE 1                                                     R4 20737000
MCLOPPN  TM    DCTDEVTP,DCTPRPU    TEST DEVICE TYPE                  R4 20737500
         BZ    MCLOGBUF            BRANCH IF INPUT DEVICE            R4 20738000
         SPACE 1                                                     R4 20738500
         TM    MDCTSTAT,DCTERMNR   TEST DEVICE STATUS                R4 20739000
         BZ    MCLOTBUF            BRANCH IF NO RECEIVER TERMINATED  R4 20739500
         LTR   MBUF,MBUF           TEST BUFFER ADDRESS               R4 20740000
         BZ    MBTAMXAB            IF ZERO, GO TO RTAM ABNORMAL EXIT R4 20740500
        $FREEBUF (MBUF)            FREE THE BUFFER                   R4 20741000
         NI    MDCTSTAT,255-DCTPBUF  INDICATE NO BUFFER              R4 20741500
         B     MBTAMXAB            GO TO RTAM ABNORMAL EXIT          R4 20742000
         SPACE 1                                                     R4 20742500
MCLOTBUF LTR   MBUF,MBUF           TEST BUFFER ADDRESS               R4 20743000
         BNZ   MCLOPPNT            BRANCH IF NOT ZERO                R4 20743500
MCLOGBUF BAL   ML,MGETPBUF         GET AN OUTPUT BUFFER              R4 20744000
         MVI   IOBCCW6+7,6         INITIALIZE DATA LENGTH            R4 20744500
         MVC   TPBUFST+6(3),MBCPEOB+1  SET UP EOB                    R4 20745000
         SPACE 1                                                     R4 20745500
MCLOPPNT L     R1,TPBFDATA         GET ADDRESS OF EOB                R4 20746000
         TM    DCTDEVTP,DCTPRPU    TEST DEVICE TYPE                  R4 20746500
         BZ    MCLONR              BRANCH IF INPUT DEVICE            R4 20747000
         MVC   0(1,R1),MDCTRCB     REPLACE EOB WITH DEVICE RCB       R4 20747500
         STC   WA,2(,R1)           SET NORMAL OR TERMINATED EOF      R4 20748000
         B     MCLOSEND            GO SEND BUFFER                    R4 20748500
         SPACE 1                                                     R4 20749000
MCLONR   MVI   0(R1),X'C0'         SET NORMAL RECEIVER RESPONSE      R4 20749500
         TM    MDCTSTAT,DCTERMNR   TEST DEVICE STATUS                R4 20750000
         BZ    SKIP130             SKIP IN NOT TERMINATED BY RCVR    R4 20750500
         MVI   0(R1),X'B0'         SET RECEIVER TERMINATED RESPONSE  R4 20751000
SKIP130  MVC   1(1,R1),MDCTRCB     SET SRCB FROM DEVICE RCB          R4 20751500
         EJECT                                                       R4 20752000
MCLOSEND LH    R1,IOBCCW6+6        INCREMENT                         R4 20752500
         LA    R1,3(,R1)            DATA                                20753000
         STH   R1,IOBCCW6+6          LENGTH                             20753500
         SPACE 1                                                        20754000
MCONCLOS MVC   BUFDCT+1(3),DCTDCB+1     NOP WRITE POST                  20754500
         BAL   ML,MBCWRITE         QUEUE BUFFER FOR OUTPUT              20755000
         SPACE 1                                                     R4 20755500
         TM    DCTDEVTP,DCTRJE+DCTPRPU  TEST DEVICE TYPE             R4 20756000
         BNO   MCLNOTPP            BR IF NOT RMT PRINT/PUNCH        R41 20756500
         NI    MHASPECF+$EWBJOT,255-$EWFJOT  SHOW UNIT TO LINE MGR      20757000
*              THIS LINE DELETED BY APAR NUMBER                @OZ27354 20757100
MCLNOTPP DS    0H                                                   R41 20757200
*              THIS LINE DELETED BY APAR NUMBER                @OZ27354 20757300
*              THIS LINE DELETED BY APAR NUMBER                @OZ27354 20757400
         B     MBTAMXIT            EXIT                              R4 20758000
         EJECT                                                       R4 20763500
*                                                                       20764000
*                             2770/2780 CLOSE ROUTINE                   20764500
*                                                                       20765000
         SPACE 3                                                        20765500
M27X0CLO CLI   DCTDEVTP,DCTRJR     TEST DEVICE TYPE                     20766000
         BE    MBHCLOSE            BRANCH IF REMOTE READER              20766500
         SPACE 3                                                        20767000
         CLI   TPBRECNT,0          TEST BUFFER CONTENTS                 20767500
         BE    MBHCLOSE            BRANCH IF EMPTY                      20768000
         XI    IOBCCW7+3,METXSEQ-METBSEQ    CONVERT ETB TO ETX          20768500
         BAL   ML,MEXCP            WRITE LAST BUFFER                    20769000
        $WAIT  WORK,SAVE=NO        WAIT FOR THE NEXT LOGICAL RECORD  R4 20769500
        $RESTORE                   RESTORE ACCESS METHOD REGISTERS   R4 20770000
         SPACE 2                                                        20770500
MBHCLOSE LA    R0,IOBCCW3          SET UP BSC                           20771000
         LA    R1,MBSCSEQ+MPREPSEQ  PREPARE                             20771500
         BAL   ML,MCCWINIT           CCW SEQUENCE                       20772000
         CLI   DCTDEVTP,DCTRJR     TEST DEVICE TYPE                     20772500
         BE    MBHCEXCP            BRANCH IF REMOTE READER              20773000
         TM    $RJEOPTS,$ADDSYNS   TEST ADDITIONAL IDLES OPTION      R4 20773500
         BZ    SKIP150             BR IF NOT SELECTED                R4 20774000
         MVI   IOBCCW4,X'01'       ACTIVATE EOT WRITE                   20774500
         MVI   IOBCCW4+4,X'A0'     SET DATA CHAINING                    20775000
SKIP150  MVI   IOBCCW5,X'01'       ACTIVATE EOT WRITE                R4 20775500
         XI    IOBCCW5+3,MBSCEOT-MBSCENQ     CONVERT ENQ TO EOT         20776000
         SPACE 2                                                        20776500
MBHCEXCP BAL   ML,MEXCP            INITIATE PREPARE SEQUENCE            20777000
         NI    MHASPECF+$EWBJOT,255-$EWFJOT  SHOW UNIT TO LINE MGR      20777500
         SPACE 2                                                     R4 20852000
         DROP  MDCT                RELEASE DCT ADDRESSABILITY        R4 20852500
         TITLE 'HASP BSC REMOTE TERMINAL ACCESS METHOD EXIT ROUTINE' R4 20855500
         USING DCTDSECT,R1         ESTABLISH DCT ADDRESSABILITY      R4 20856000
         SPACE 3                                                     R4 20856500
RTAMBSUB DS    0H                  RTAM BSC SUBROUTINE BASE ADDRESS  R4 20857000
         SPACE 3                                                     R4 20857500
*                                                                    R4 20858000
*                             BSC RTAM COMMON EXIT ROUTINE           R4 20858500
*                                                                    R4 20859000
         SPACE 3                                                     R4 20859500
MBTAMXIT DS    0H                  BSC RTAM NORMAL EXIT              R4 20860000
         LM    LINK,BASE2,PCELINK  RELOAD CALLER'S REGISTERS         R4 20860500
         NI    DCTSTAT,255-DCTRTAM SHOW RTAM PROCESSING COMPLETE     R4 20861000
         LPR   R0,R1               SET POSITIVE CONDITION CODE       R4 20861500
         BR    LINK                 AND RETURN                       R4 20862000
         SPACE 5                                                     R4 20862500
MBTAMXEX DS    0H                  BSC RTAM EXCEPTION EXIT           R4 20863000
         LM    LINK,BASE2,PCELINK  RELOAD CALLER'S REGISTERS         R4 20863500
         NI    DCTSTAT,255-DCTRTAM SHOW RTAM PROCESSING COMPLETE     R4 20864000
         LNR   R0,R1               SET NEGATIVE CONDITION CODE       R4 20864500
         BR    LINK                 AND RETURN                       R4 20865000
         SPACE 5                                                     R4 20865500
MBTAMXAB DS    0H                  BSC RTAM ABNORMAL EXIT            R4 20866000
         LM    LINK,BASE2,PCELINK  RELOAD CALLER'S REGISTERS         R4 20866500
         NI    DCTSTAT,255-DCTRTAM SHOW RTAM PROCESSING COMPLETE     R4 20867000
         SR    R0,R0               SET ZERO CONDITION CODE           R4 20867500
         BR    LINK                 AND RETURN                       R4 20868000
         SPACE 5                                                     R4 20868500
MBTAMXOV DS    0H                  BSC RTAM OVERFLOW EXIT            R4 20869000
         LM    LINK,BASE2,PCELINK  RELOAD CALLER'S REGISTERS         R4 20869500
         NI    DCTSTAT,255-DCTRTAM SHOW RTAM PROCESSING COMPLETE     R4 20870000
         TM    DCTSTAT,DCTINUSE    GET 'ONES' (OVERFLOW) COND. CODE  R4 20870500
         BR    LINK                 AND RETURN                       R4 20871000
         SPACE 2                                                     R4 20871500
         DROP  R1                  RELEASE DCT ADDRESSABILITY        R4 20872000
         TITLE 'HASP BSC REMOTE TERMINAL ACCESS METHOD SUBROUTINES'  R4 20872500
         USING DCTDSECT,MDCT       ESTABLISH DCT ADDRESSABILITY      R4 20873000
         SPACE 3                                                        20873500
*                                                                       20874000
*                             BSC CPU GET OUTPUT BUFFER SUBROUTINE      20874500
*                                                                       20875000
         SPACE 1                                                     R4 20875500
MGETPBUF DS    0H                                                    R4 20876000
        $GETBUF MBUFWAIT,TYPE=BSC  GET TP BUFFER FOR OUTPUT          R4 20876500
         LR    MBUF,R1             SET UP BUFFER REGISTER               20877000
         ST    MBUF,DCTBUFAD       SET BUFFER ADDRESS IN DCT            20877500
         OI    MDCTSTAT,DCTPBUF    INDICATE BUFFER OWNERSHIP            20878000
         MVC   TPBUFST(2),MSTXSEQ  SET UP STX SEQUENCE                  20878500
         MVI   TPBUFST+2,0         INITIALIZE BCB                       20879000
         LA    R1,TPBUFST+5        INITIALIZE ADDRESSES OF              20879500
         ST    R1,TPBLCCAD          FIRST CARRIAGE CONTROL              20880000
         ST    R1,TPBFDATA           AND FIRST DATA BYTE                20880500
         ST    MDCT,BUFDCT         SET ADDRESS OF REMOTE DCT            20881000
         MVI   BUFTYPE,BUFBSC      RESET BUFFER TYPE                 R4 20881500
         LA    R1,MBSCSEQ+MCPUSEQ  SET UP                               20882000
         B     MCCWINIT             CCW STRING                          20882500
         SPACE 2                                                        20883000
MBUFWAIT CLI   DCTDEVTP,DCTRCON    TEST DEVICE TYPE                     20883500
         BE    MBTAMXIT            EXIT IF REMOTE CONSOLE            R4 20884000
         ST    ML,DCTEWF           SAVE RETURN ADDRESS                  20884500
        $WAIT  BUF,SAVE=NO         WAIT FOR A BUFFER                 R4 20885000
        $RESTORE                   RESTORE ACCESS METHOD REGISTERS   R4 20885500
         L     ML,DCTEWF           RELOAD RETURN ADDRESS                20886000
         B     MGETPBUF            TRY AGAIN                            20886500
         EJECT                                                          20887000
*                                                                       20887500
*                             BSC CPU WRITE SUBROUTINE                  20888000
*                                                                       20888500
         SPACE 3                                                        20889000
MBCWRITE SR    R0,R0               CLEAR                                20889500
         ST    R0,DCTBUFAD          BUFFER ADDRESS IN DCT               20890000
         NI    MDCTSTAT,255-DCTPBUF     INDICATE BUFFER IS QUEUED       20890500
         L     R1,DCTDCB           GET ADDRESS OF LINE DCT              20891000
         L     R1,MDCTOBUF-DCTDSECT(R1) GET ADDRESS OF QUEUED BUFFER    20891500
         LA    R1,0(,R1)           CLEAR HIGH-ORDER BYTE                20892000
         LTR   R0,R1               TEST IF BUFFER IS QUEUED             20892500
         BNZ   MBCWRCHN            BRANCH IF BUFFER IS QUEUED           20893000
         SPACE 1                                                        20893500
         STM   MDCT,ML,MTEMPSAV    SAVE REGISTERS                       20894000
         L     MDCT,DCTDCB         GET ADDRESS OF LINE DCT              20894500
         IC    R0,MDCTOPCT         SAVE OPEN COUNT                      20895000
         ST    MBUF,MDCTOBUF       QUEUE BUFFER                         20895500
         STC   R0,MDCTOPCT         RESTORE OPEN COUNT                   20896000
         ST    R1,BUFCHAIN         TERMINATE CHAIN                      20896500
         L     MBUF,DCTBUFAD       GET ADDRESS OF INPUT BUFFER          20897000
         BAL   ML,MINITIO          INITIATE I/O                         20897500
         LM    MDCT,ML,MTEMPSAV    RESTORE REGISTERS                    20898000
         BR    ML                   AND RETURN                          20898500
         SPACE 2                                                        20899000
MBCWRCHN LR    R1,R0               GET NEXT BUFFER IN OUTPUT QUEUE      20899500
         L     R0,BUFCHAIN-BUFDSECT(,R1)     GET CHAIN FIELD            20900000
         LTR   R0,R0               TEST FOR LAST BUFFER IN QUEUE        20900500
         BNZ   MBCWRCHN            BRANCH IF NOT LAST BUFFER            20901000
         SPACE 1                                                        20901500
         ST    MBUF,BUFCHAIN-BUFDSECT(,R1)   ADD BUFFER TO CHAIN        20902000
         ST    R0,BUFCHAIN         TERMINATE CHAIN                      20902500
         BR    ML                  RETURN                               20903000
         EJECT                                                          20903500
*                                                                       20904000
*                             BSC CPU RCB ANALYSIS SUBROUTINE           20904500
*                                                                       20905000
         SPACE 3                                                        20905500
MBCNEXTR ST    ML,MSAVE            SAVE LINK REGISTER                   20906000
         TM    0(R1),X'0F'         TEST RCB CODE                        20906500
         BZ    MBCNXCTL            BRANCH IF CONTROL RECORD             20907000
         SPACE 1                                                        20907500
         CLI   0(R1),X'92'         TEST RCB CODE                        20908000
         BE    MBCNXOPC            BRANCH IF OPERATOR COMMAND           20908500
         SPACE 1                                                        20911000
         IC    R1,0(R1)            GET RCB                              20911500
         BAL   ML,MFINDCT          FIND ASSOCIATED DCT                  20912000
         BZ    MBCNXEND            IGNORE REST OF BLOCK IF NONE FOUND   20912500
         TM    MDCTSTAT-DCTDSECT(R1),DCTERMNR  TEST DEVICE STATUS    R4 20913000
         BO    MBCNXEND            IGNORE BLK IF TERMINATED BY RCVR  R4 20913500
         L     ML,MSAVE            RESTORE LINK REGISTER                20914000
         TM    DCTDEVTP-DCTDSECT(R1),DCTPRPU  TEST DEVICE TYPE       R4 20914500
         BO    MBCNERR             RESTART IF NOT INPUT DEVICE       R4 20915000
         ST    MBUF,DCTBUFAD-DCTDSECT(R1) STORE ADDRESS OF INPUT BUFFER 20915500
         TM    DCTSTAT-DCTDSECT(R1),DCTINUSE  TEST DEVICE STATUS     R4 20916000
         BO    MBCNPOST            IF IN USE, GO POST                R4 20916500
         B     MBCNERR             RESTART IF NOT IN USE             R4 20917000
         SPACE 2                                                        20917500
MBCNXCTL BAL   ML,MBCNTRLR         ANALYZE CONTROL RECORD               20918000
         SPACE 1                                                        20918500
MBCNXEND MVI   TPBRECNT,C'E'       INDICATE EMPTY INPUT BUFFER          20919000
         L     ML,MSAVE            RESTORE LINK REGISTER                20919500
         CLI   DCTDEVTP,DCTLNE     TEST DEVICE TYPE                     20920000
         BCR   E,ML                RETURN IF LINE MANAGER               20920500
         STM   MDCT,ML,MTEMPSAV    OTHERWISE, SAVE REGISTERS            20921000
         L     MDCT,DCTDCB         GET ADDRESS OF LINE DCT              20921500
         BAL   ML,MINITIO          INITIATE I/O                         20922000
         LM    MDCT,ML,MTEMPSAV    RESTORE REGISTERS                    20922500
         BR    ML                   AND RETURN                          20923000
         EJECT                                                       R4 20923500
MBCNXOPC CLI   DCTDEVTP,DCTLNE     CHECK DCT TYPE FOR 'LINE',       R41 20924000
         BNE   MBCNXOPS              BRANCH AROUND IF NOT           R41 20924100
         OC    MDCTDCT,MDCTDCT     IGNORE CONSOLE INPUT IF          R41 20924200
         BZ    MBCNXEND              REMOTE NOT SIGNED ON           R41 20924300
MBCNXOPS L     R0,$MCONPCE         GET ADDR OF RMT CONSOLE PCE      R41 20924400
         LA    R15,$MCONMSG        PREPARE TO SCAN RMT CONSOLE QUEUE R4 20924500
         B     MBCNXOP               TO ADD BUFFER AT END            R4 20925000
MBCNXBUF LA    R15,TPBLCCAD-BUFDSECT(,R1)   ASSUME BSC BUFFER CHAIN  R4 20925500
         TM    BUFTYPE-BUFDSECT(R1),BUFTP+BUFIOB TEST ASUMPTN       R41 20926000
         BO    MBCNXOP             VALID, SKIP                      R41 20926500
         LA    R15,RPLNEXT-RPLDSECT(,R1)    USE SNA BUFFER CHAIN     R4 20927000
MBCNXOP  L     R1,0(,R15)          LOCATE NEXT BUFFER                R4 20927500
         LTR   R1,R1               TEST FOR CHAIN END                R4 20928000
         BNZ   MBCNXBUF            NO, CONTINUE SCANNING             R4 20928500
         ST    MBUF,0(,R15)        ADD NEW BUFFER AFTER LAST         R4 20929000
         ST    R1,TPBLCCAD         TERMINATE CHAIN                   R4 20929500
         SPACE 1                                                     R4 20930000
         LR    R15,R0              GET PCE TO POST                   R4 20930500
        $POST  (R15),WORK          FIRE UP PROCESSOR                 R4 20931000
         L     ML,MSAVE            RELOAD LINK REGISTER              R4 20931500
         BR    ML                  RETURN                               20932000
         EJECT                                                          20932500
*                                                                       20933000
*                             BSC CPU CONTROL RECORD ANALYSIS ROUTINE   20933500
*                                                                       20934000
         SPACE 3                                                        20934500
MBCNTRLR CLI   0(R1),X'00'         TEST RCB CODE                        20935000
         BCR   E,ML                RETURN IF END OF BLOCK               20935500
         ST    ML,MSAVE+4          SAVE LINK REGISTER                R4 20936000
         CLI   0(R1),X'90'         TEST RCB CODE                        20936500
         BE    MBCNTREQ            BRANCH IF REQUEST FOR INPUT          20937000
         CLI   0(R1),X'C0'         TEST RCB CODE                     R4 20937500
         BNH   MBCNRRSP            BRANCH IF RESPONSE TO OUTPUT      R4 20938000
         CLI   0(R1),X'F0'         TEST RCB CODE                        20938500
         BNER  ML                  BRANCH IF NOT GENERAL CONTROL REC R4 20939000
         SPACE 2                                                     R4 20939500
         CLI   1(R1),C'B'          TEST FOR DISCONNECT RECORD        R4 20943000
         BNE   SKIP190             SKIP IF NOT                       R4 20943500
         OI    DCTFLAGS,DCTRSTRT   SET TO RESTART LINE               R4 20944000
         BR    ML                  RETURN                            R4 20944500
SKIP190  LA    R1,2(,R1)           STEP TO FIRST CHARACTER              20945000
         SPACE 1                                               @OZ25901 20945100
         CLI   PCEID+1,PCEMLMID    IF LINE MANAGER,            @OZ25901 20945200
         BE    MSIGNON               BR TO PROCESS SIGNON      @OZ25901 20945300
         L     R0,MSAVE            SAVE RETURN ADDRESS               R4 20945500
         STM   R15,BASE2,PCER15    SAVE REGISTERS              @OZ26170 20945700
        $QSUSE SAVE=NO             REQ ACCESS TO SHARED QUEUE  @OZ26170 20946000
         L     LINK,$EXTP          GET REG SETUP CODE BASE     @OZ26170 20946200
         ST    R0,MSAVE            RESTORE RETURN ADDRESS            R4 20946500
         B     MSIGNON             PROCESS SIGN-ON RECORD               20947000
         SPACE 2                                                     R4 20947500
MBCNTREQ IC    R1,1(,R1)           LOCATE THE DCT                    R4 20948000
         BAL   ML,MFINDCT           WHICH MATCHES THE SRCB           R4 20948500
         L     ML,MSAVE+4          RELOAD LINK REGISTER              R4 20949000
         BZR   ML                  RETURN IF MATCH NOT FOUND         R4 20950000
         TM    MDCTSTAT-DCTDSECT(R1),DCTERMNR+DCTEOF  TEST STATUS    R4 20952500
         BNZ   MBCNTREF            BRANCH IF EOF HAS BEEN READ       R4 20953000
         TM    DCTSTAT-DCTDSECT(R1),DCTINUSE  TEST DEVICE STATUS     R4 20953500
         BO    MBCNERR             RESTART IF IN USE                 R4 20954000
MBCNTREF NI    DCTSTAT-DCTDSECT(R1),255-DCTHOLD  MAKE UNIT AVAILABLE R4 20954500
         B     MBCNPOST            GO POST                           R4 20955000
         EJECT                                                       R4 20955500
MBCNRRSP SLR   R15,R15             ASSUME NORMAL RESPONSE            R4 20960000
         CLI   0(R1),X'B0'         TEST RCB CODE                     R4 20960500
         BNE   SKIP200             SKIP IF NORMAL RESPONSE           R4 20961000
         LA    R15,DCTERMNR        SET FOR ABNORMAL RESPONSE         R4 20961500
SKIP200  IC    R1,1(,R1)           LOCATE THE DCT                    R4 20962000
         BAL   ML,MFINDCT           WHICH MATCHES THE SRCB           R4 20962500
         L     ML,MSAVE+4          RELOAD LINK REGISTER              R4 20963000
         BZR   ML                  RETURN IF MATCH NOT FOUND         R4 20963500
         TM    DCTDEVTP-DCTDSECT(R1),DCTPRPU  TEST DEVICE TYPE       R4 20964000
         BO    MBCNRFND            BRANCH IF OUTPUT DEVICE           R4 20964500
         BAL   ML,MFNDLOOP         LOCATE NEXT DCT MATCHING SRCB     R4 20965000
         L     ML,MSAVE+4          RELOAD LINK REGISTER              R4 20965500
         BZR   ML                  RETURN IF MATCH NOT FOUND         R4 20966000
MBCNRFND EX    R15,MBCNROI         SET RESPONSE TYPE                 R4 20966500
         SPACE 2                                                     R4 20967000
MBCNPOST L     R1,DCTPCE-DCTDSECT(,R1)  GET ADDRESS OF PCE           R4 20967500
        $POST  (R1),WORK           POST PROCESSOR                       20968000
         BR    ML                  RETURN                               20968500
         SPACE 1                                                     R4 20969000
MBCNERR  L     R1,DCTDCB-DCTDSECT(,R1)  GET ADDRESS OF LINE DCT         20969500
         OI    DCTFLAGS-DCTDSECT(R1),DCTRSTRT   RESTART LINE            20970000
         BR    ML                  RETURN                               20970500
         SPACE 2                                                     R4 20971000
MBCNROI  OI    MDCTSTAT-DCTDSECT(R1),*-*  *** EXECUTE ONLY ***       R4 20971500
         EJECT                                                          20972000
*                                                                       20972500
*                             BSC CPU DCT LOOKUP SUBROUTINE             20973000
*                                                                       20973500
         SPACE 3                                                        20974000
MFINDCT  STC   R1,$POSTSAV         STORE RCB FOR COMPARE             R4 20974500
         LR    R1,MDCT             ASSUME MDCT IS A LINE DCT            20975000
         CLI   DCTDEVTP,DCTLNE     TEST DCT TYPE                        20975500
         BE    MFNDLOOP            BRANCH IF DCT IS LINE                20976000
         L     R1,DCTDCB           NO, GET LINE DCT                     20976500
         SPACE 2                                                        20977000
MFNDLOOP L     R1,MDCTDCT-DCTDSECT(,R1) GET ADDRESS OF NEXT DCT         20977500
         LTR   R1,R1               TEST FOR END OF CHAIN                20978000
         BCR   Z,ML                RETURN IF MATCH IS NOT FOUND         20978500
         CLC   MDCTRCB-DCTDSECT(,R1),$POSTSAV  COMPARE RCB CODES     R4 20979000
         BNE   MFNDLOOP            KEEP LOOKING IF NOT EQUAL            20979500
         LTR   R1,R1               SET CONDITION CODE                   20980000
         BR    ML                   AND RETURN                          20980500
         EJECT                                                          20981000
*                                                                       20981500
*                             SIGN-ON PROCESSOR                         20982000
*                                                                       20982500
         SPACE 3                                                        20983000
MSIGNON  ST    MDCT,MSOSAVE1       SAVE ADDRESS OF DCT                  20983500
         CLI   DCTDEVTP,DCTLNE     TEST DCT TYPE                        20984000
         BE    *+8                 BRANCH IF LINE DCT                   20984500
         L     MDCT,DCTDCB         NO GET ADDDRESS OF LINE DCT          20985000
         SPACE 1                                                        20985500
         TM    MDCTSTAT,DCTLEASE   TEST LINE DCT STATUS                 20986000
         BZ    MSONCKPT            IF NOT LEASED, SIGNON       @OZ25901 20988000
         TM    MDCTSTAT,DCTSHARE   TEST FOR SHARED LINE              R4 20988500
         BZ    MSORETRN            NO, BR--IGNORE SIGN-ON IF LEASED  R4 20989000
         SPACE 2                                                        20990000
MSONCKPT CLI   PCEID+1,PCEMLMID    IF NOT LINE MANAGER,        @OZ25901 20990100
         BNE   MSONSAVE              BR TO PROCESS SIGNON      @OZ25901 20990200
         TM    MEVNTIND,MEVNCKPT   TEST SHARED QUEUE STATUS    @OZ25901 20990300
         BO    MSONSAVE            QUEUES OWNED, CHK SIGNON    @OZ28683 20990400
         TM    MSEQTYPE,MCPUSEQ    IF INTELLIGENT TERMINAL..   @OZ28683 20990410
         BO    MREQBUF             GO REQUEUE BUFFER           @OZ28683 20990420
         TM    MDCTLINE,DCTPASCI   CHECK FOR ASCII..           @OZ28683 20990430
         BNO   MREQBUF             IF NOT ASCII, REQUEUE BFR   @OZ28683 20990440
         TR    TPBUFST(83),MBPASCII TRANSLATE SIGNON TO ASCI   @OZ28683 20990450
         B     MREQBUF                REQUEUE BUFFER           @OZ28683 20990460
MSONSAVE ST    R1,MSOSAVE2         SAVE ADDR OF SIGN-ON CARD IMAGE   R4 20990500
         ST    ML,MSOSAVE3         SAVE RETURN REGISTER                 20991000
         BAL   ML,MABORT           ABORT ANY CURRENT ACTIVITY ON LINE   20991500
         BAL   ML,MDISCON          DISCONN ANY REMOTES ON LINE          20992000
         L     R1,MSOSAVE2         RESTORE ADDRESS OF SIGN-ON CARD      20992500
         L     ML,MSOSAVE3         RESTORE RETURN REGISTER              20993000
         SPACE 2                                                        20993500
         LH    R0,$NUMRJE          R0 = MAX NUMBER OF REMOTES        R4 20994000
         LR    R14,R0              R14 = MAX NUMBER OF REMOTES          20994500
         L     WA,$RATABLE         GET ADDRESS OF RAT                R4 20995000
         USING RATDSECT,WA                                              20995500
         CLC   =C'REMOTE',15(R1)   REMOTE SPECIFIED?           @OZ25768 20995600
         BE    MSOSERCH            BRANCH IF YES               @OZ25768 20995700
         CLC   =C'RMT',15(R1)      RMT SPECIFIED?              @OZ25768 20995800
         BE    MSOSERCT            BRANCH IF YES               @OZ25768 20995900
         B     MSOILEGL            ILLEGAL SIGNON CARD         @OZ25768 20995950
MSOSERCH CLC   RATNAME+3(3),21(R1) DOES RATNAME MATCH SIGN-ON CARD      20996000
         BE    MSOFOUND            BRANCH IF YES                        20996500
         LA    WA,RATTLE(,WA)      INCREMENT TO NEXT RAT ENTRY          20997000
         BCT   R0,MSOSERCH         LOOP THROUGH ALL RAT ENTRIES         20997500
         B     MSOILEGL            NO MATCH, SIGN-ON IS BAD             20998000
MSOSERCT CLC   RATNAME+3(3),18(R1) ALTERNATE SIGN0N AREA GOOD  @OZ25768 20998030
         BE    MSOFOUND            BRANCH IF YES               @OZ25768 20998070
         SPACE 2                                                    R41 20998100
         LA    WA,RATTLE(,WA)      INCREMENT TO NEXT RAT ENTRY @OZ25768 20998110
         BCT   R0,MSOSERCT         LOOP THROUGH ALL RATS       @OZ25768 20998150
         B     MSOILEGL            ILLEGAL SIGNON CARD         @OZ25768 20998190
MSOFOUND TM    RATTYPE,DCTPSNA     TEST FOR SNA TERMINAL            R41 20998200
         BO    MSOILEGL            BR IF YES, DISALLOW SIGNON       R41 20998300
         EJECT                                                          20998500
         TM    MDCTSTAT,DCTSHARE   TEST FOR SHARED SIGN ON           R4 21000000
         BO    MSOSHARE            YES, BR - PROCESS SIGN-ON         R4 21000500
         OC    RATLDCT,RATLDCT     CHECK FOR RMT ALREADY SIGNED ON   R4 21001500
         BNZ   MSOILEGL            YES, BR -- SIGN-ON IS BAD         R4 21002000
MSOSHARE SLR   R14,R0              R14 = REMOTE NUMBER - 1           R4 21002500
         LR    R15,R14             MULTIPLY                             21003000
         ALR   R15,R14              BY                                  21003500
         ALR   R15,R14               THREE                              21004000
         SLR   R14,R14             DIVIDE BY EIGHT GIVING OFFSETS       21004500
         D     R14,=F'8'            TO BYTE (QUOT) AND BIT (REMAIN)     21005000
         AL    R15,$RMTSON         R15 = BYTE ADDR OF SIGNON BITS    R4 21005500
         L     R0,=A(QUEBUSY*X'2000')  GET BITS TO TEST BUSY            21006000
         SRL   R0,0(R14)           SHIFT TO BIT OFFSET                  21006500
         STH   R0,MSONWORK         STORE FOR TEST                       21007000
         NC    MSONWORK,0(R15)     IS REMOTE SIGNED ON OTHER SYSTEM     21007500
         BNZ   MSOILEGL            BRANCH IF YES, SIGN-ON IS BAD        21008000
         SLR   R0,R0               GET BUSY BITS                        21008500
         ICM   R0,4,$SIDBUSY        FOR THIS SYSTEM                     21009000
         SRL   R0,3(R14)           SHIFT TO BIT OFFSET                  21009500
         STH   R0,MSONWORK         STORE FOR SET                        21010000
         TM    MDCTSTAT,DCTLEASE   TEST FOR LEASED-SIGN-ON (SHARED)  R4 21011000
         BNO   MSONPSWD            NO, BR--PROCESS SIGN-ON           R4 21011500
         CLM   MDCT,7,RATLDCT+1    TEST FOR VALID LINE USER          R4 21012000
         BNE   MSOILEGL            NO, BR--SIGN-ON ILLEGAL           R4 21012500
         SPACE 2                                                        21013500
MSONPSWD CLI   MDCTPSWD,C' '       TEST LINE PASSWORD                R4 21014000
         BE    *+14                BRANCH IF NONE                       21014500
         CLC   MDCTPSWD,24(R1)     COMPARE WITH SIGN-ON CARD            21015000
         BNE   MSOILPSW            BRANCH IF NOT EQUAL                  21015500
         CLI   RATPSWD,C' '        TEST REMOTE PASSWORD                 21016000
         BE    MSOPSWOK            BRANCH IF NONE                       21016500
         CLC   RATPSWD,72(R1)      COMPARE WITH SIGN-ON CARD            21017000
         BE    MSOPSWOK            BRANCH IF EQUAL                      21017500
         MVC   24(8,R1),72(R1)     SAVE ILLEGAL PASSWORD                21018000
MSOILPSW LR    WA,R1               SAVE SIGN-ON CARD ADDRESS            21018500
         L     R1,$MWORK           POINT TO WORK AREA                R4 21019000
         MVC   0(L'MSOILPMS,R1),MSOILPMS  MOVE MSG TO WORK AREA      R4 21019500
         MVC   6(3,R1),DCTDEVN+4   MOVE LINE NUMBER TO MESSAGE       R4 21020000
        $WTO   (R1),L'MSOILPMS,JOB=NO,WAIT=NO,      ISSUE ERROR      R4C21020500
               ROUTE=$LOG+$TP,CLASS=$NORMAL,PRI=$ST  MESSAGE            21021000
         OI    DCTFLAGS,DCTRSTRT   FORCE LINE RESTART                   21021500
        $GETSMFB WAIT=NO           GET SMF BUFFER                       21022000
         BZ    MSORETRN            BRANCH IF NONE AVAILABLE             21022500
         USING SMFDSECT,R1                                              21023000
         MVI   SMFHDRTY,SMFISETP   SET INTEGRITY RECORD TYPE            21023500
         MVC   SMF49PSW,24(WA)     PUT ILLEGAL PASSWORD IN RECORD       21024000
         B     MSOSMF              GO FINISH SMF RECORD                 21024500
         EJECT                                                       R4 21025000
MSOPSWOK OC    0(2,R15),MSONWORK   INDICATE REMOTE ON THIS SYSTEM       21025500
         SPACE 2                                                        21026000
         ST    MDCT,RATLDCT        STORE LINE DCT ADDRESS IN RAT        21026500
         ST    WA,MDCTRAT          STORE RAT ADDRESS IN LINE DCT        21027000
         LH    R15,$MLBFSIZ        PICK UP MULTI-LEAVING BUFFER SIZE R4 21027500
         SH    R15,=H'5'           REDUCE TO FILL SIZE               R4 21028000
         STH   R15,MDCTBFSZ        SET FILL AMOUNT                   R4 21028500
         L     R15,RATRDCT         GET FIRST REMOTE DCT ADDRESS         21029000
         ST    R15,MDCTDCT         STORE REMOTE ADDRESS IN LINE DCT     21029500
         L     LINK,$MLLMPCE                  INITIALIZE             R4 21030000
         MVC   MDCTIMOK,MCLOCK-PCEDSECT(LINK)  TRANSMISSION TIME     R4 21030500
         OI    MDCTATTN,MDCTJOB    SIMULATE JOB POST                    21031000
         SPACE 2                                                        21031500
         MVC   $POSTSAV(1),MDCTLINE  GET LINE FEATURES               R4 21032000
         TM    MDCTFEAT-DCTDSECT(R15),DCTPTRSP  TEST REMOTE TRSP        21032500
         BO    *+8                      BRANCH IF REMOTE IS TRANSPARENT 21033000
         NI    $POSTSAV,255-DCTPTRSP  NO, RESET TRANSPARENCY         R4 21033500
         NI    MDCTCODE+3,X'FB'    RESET TRANSPARENCY INDICATION        21034000
         TM    $POSTSAV,DCTPTRSP   TEST REMOTE/LINE TRANSPARENCY     R4 21034500
         BZ    *+8                 BRANCH IF BOTH ARE NOT TRANSPARENT   21035000
         OI    MDCTCODE+3,X'04'    YES, SET TRANSPARENCY INDICATION     21035500
         L     MCODE,MDCTCODE      GET ADDRESS OF CODE TABLE            21036000
         SPACE 2                                                        21036500
MSOLOOP  MVC   MDCTLINE-DCTDSECT(,R15),$POSTSAV  SET LINE FEATURES   R4 21037000
         STCM  MDCT,7,DCTDCB+1-DCTDSECT(R15)  POINT RMT DCT TO LINE  R4 21037500
         NI    MDCTSTAT-DCTDSECT(R15),DCTABORT    AND RESET             21038000
         OI    MDCTSTAT-DCTDSECT(R15),DCTSINON  SET SIGN-ON FLAG        21038500
         MVC   MDCTBFSZ-DCTDSECT(,R15),MDCTBFSZ COPY CPU FILL AMOUNT R4 21039000
         L     R15,MDCTDCT-DCTDSECT(R15)     GET ADDRESS OF NEXT DCT    21039500
         LTR   R15,R15             TEST FOR END OF CHAIN                21040000
         BNZ   MSOLOOP             BRANCH IF NOT END OF CHAIN           21040500
         SPACE 1                                                        21041000
         LR    R0,R1               SAVE SIGN-ON CARD ADDRESS         R4 21041500
         L     R1,$MWORK           POINT TO WORK AREA                R4 21042000
         MVC   0(L'MSOMSG,R1),MSOMSG  MOVE MSG TO WORK AREA          R4 21042500
         MVC   2(8,R1),RATNAME     PUT REMOTE ID AND LINE            R4 21043000
         MVC   26(3,R1),DCTDEVN+4   NUMBERS INTO MESSAGE             R4 21043500
         DROP WA                   KILL RAT ADDRESSABILITY           R4 21044000
         LR    WA,R0               SAVE SIGN-ON CARD ADDRESS         R4 21044500
        $WTO   (R1),L'MSOMSG,JOB=NO,WAIT=NO,  ISSUE SIGN-ON MESSAGE  R4C21045000
               ROUTE=$LOG+$TP,CLASS=$NORMAL,PRI=$ST                     21045500
         EJECT                                                          21046000
        $GETSMFB WAIT=NO           GET SMF BUFFER                       21046500
         BZ    MSONOSMF            BRANCH IF NONE AVAILABLE             21047000
         MVI   SMFHDRTY,SMFSSETP   SET START EVENT RECORD TYPE          21047500
MSOSMF   MVI   SMFRDW+1,SMF47END-SMFRDW  SET RECORD LENGTH              21048000
         MVI   SMF47EVT+1,SMFRMTEV SET REMOTE EVENT TYPE                21048500
         MVI   SMF47LN2+1,SMF47END-SMF47LN2  SET MESSAGE LENGTH         21049000
         MVC   SMF47MSG,34(WA)     MESSAGE IS COLS 35-70 FROM CARD      21049500
         BAL   WA,MSMF             GO FINISH SMF RECORD                 21050000
         DROP  R1                                                       21050500
         SPACE 2                                                        21051000
MSONOSMF LA    WA,MSOEXIT          SET RETURN FROM TOTALING SUBRTN   R4 21051500
MTOTLXCP SR    R1,R1               INDEX STARTS AT ZERO                 21052000
         LA    LINK,4              INCREMENT OF 4                       21052500
         LA    R15,MDCTSXCP-MDCTXCP-1  LOOP TERMINATION INDEX           21053000
MTOTLOOP L     R0,MDCTXCP(R1)      GET LINE EXCP COUNT                  21053500
         AL    R0,MDCTSXCP(R1)     ADD SESSION COUNT                    21054000
         ST    R0,MDCTXCP(R1)      STORE NEW LINE COUNT                 21054500
         BXLE  R1,LINK,MTOTLOOP    LOOP THROUGH ALL COUNTS              21055000
         XC    MDCTSXCP(MDCTSREM-MDCTSXCP+L'MDCTSREM),MDCTSXCP       R4C21055500
                                   ZERO ALL SESSION COUNTS           R4 21056000
         BR    WA                  RETURN                            R4 21056500
         SPACE 2                                                        21057000
MSOEXIT  CLC   MDCTDCT+1(3),MSOSAVE1+1  COMPARE NEW & OLD DCTS       R4 21057500
         L     MDCT,MSOSAVE1       RESTORE ADDRESS OF DCT               21058000
         BNE   *+8                 BYPASS RESET IF DIFFERENT            21058500
         NI    MDCTSTAT,255-DCTABORT  RESET ABORT INDICATION            21059000
         LA    WA,IOBCCW1          SHOW NO CPU TEXT SENT                21059500
         L     R0,IOBRESTR         SET UP                               21060000
         IC    R1,MSEQTYPE          POSSIBLY NEW                        21060500
         B     MCCWINIT              CCW SEQUENCE                       21061000
         SPACE 2                                                        21061500
MSOILEGL L     R1,$MWORK           POINT TO WORK AREA                R4 21062000
         MVC   0(L'MSOILMSG,R1),MSOILMSG  MOVE MSG TO WORK AREA      R4 21062500
         MVC   6(3,R1),DCTDEVN+4   MOVE LINE NUMBER TO MESSAGE       R4 21063000
        $WTO   (R1),L'MSOILMSG,JOB=NO,WAIT=NO,  ISSUE ERROR MESSAGE  R4C21063500
               ROUTE=$LOG+$TP,CLASS=$NORMAL,PRI=$ST                     21064000
         SPACE 1                                                        21064500
         OI    DCTFLAGS,DCTRSTRT   FORCE LINE RESTART                   21065000
MSORETRN L     MDCT,MSOSAVE1       RESTORE ADDRESS OF DCT               21065500
         LA    WA,IOBCCW1          SHOW NO CPU TEXT SENT                21066000
         BR    ML                  RETURN                               21066500
         EJECT                                                          21067000
*                                                                       21067500
*                             TRANSMISSION ABORT ROUTINE                21068000
*                                                                       21068500
         SPACE 1                                                        21069000
MABORT   MVI   MDCTOPCT,0          RESET OPEN COUNT TO ZERO             21069500
         MVI   MDCTCMCT,0          ZERO CONSOLE MESSAGE COUNT        R4 21070000
         LA    R15,$MCONMSG        PREPARE TO SCAN MESSAGE QUEUE     R4 21076000
MABCON   LR    R1,R15              SAVE ADDRESS OF PREVIOUS BUFFER   R4 21076500
         L     R15,0(,R15)         GET ADDRESS OF NEXT BUFFER        R4 21077000
         LTR   R0,R15              SAVE CURRENT BFR ADDRESS & TEST   R4 21077500
         BZ    MABFREE             BRANCH IF BUFFER NOT FOUND        R4 21078000
         TM    BUFTYPE-BUFDSECT(R15),BUFTP+BUFRPL  TEST BUFTYPE     R41 21078500
         LA    R15,RPLNEXT-RPLDSECT(,R15)    ASSUME SNA CHAINING     R4 21079000
         BO    MABCON              IF SNA -- TRY NEXT BUFFER        R41 21079500
         SL    R15,=A((RPLNEXT-RPLDSECT)-(TPBLCCAD-BUFDSECT))          C21080000
                                   ELSE USE BSC CHAINING             R4 21080500
         CL    R0,DCTBUFAD         COMPARE WITH LINE BUFFER ADDRESS  R4 21081000
         BNE   MABCON              CONTINUE SCAN IN NO MATCH         R4 21081500
         L     R0,0(,R15)          DECHAIN BUFFER                    R4 21082000
         ST    R0,0(,R1)             FROM CONSOLE MSG QUEUE          R4 21082500
MABFREE  L     R1,MDCTOBUF         GET ADDRESS OF NEXT BUFFER QUEUED    21083000
         LTR   R1,R1               TEST                                 21083500
         BZ    MABFREED            BRANCH IF NO MORE BUFFERS ARE QUEUED 21084000
         TM    DCTSTAT,DCTDRAIN    OPERATOR DRAINING LINE            R4 21084500
         BO    MABUDCHN            FREE BUFFERS IF YES               R4 21085000
         TM    DCTFLAGS,DCTRSTRT   OPERATOR SAY RESTART              R4 21085500
         BO    MABUDCHN            FREE BUFFERS IF YES               R4 21086000
         OC    MDCTDCT,MDCTDCT     ANY REMOTES ATTACHED              R4 21086500
         BZR   ML                  RETURN IF NOT                     R4 21087000
MABUDCHN MVC   MDCTOBUF+1(3),BUFCHAIN+1-BUFDSECT(R1) DE-QUEUE BUFFER R4 21087500
MABUFRE $FREEBUF (R1)              RETURN BUFFER TO POOL                21088000
         B     MABFREE             GET NEXT BUFFER                      21088500
         EJECT                                                       R4 21089000
MABFREED NI    DCTFLAGS,255-DCTRSTRT INSURE RESTART BIT OFF          R4 21089500
         LR    R1,MDCT             PREPARE TO SCAN REMOTE DCTS       R4 21090000
MABPOST  L     R1,MDCTDCT-DCTDSECT(R1)  GET ADDRESS OF NEXT REMOTE DCT  21090500
         LTR   R1,R1               TEST FOR END OF CHAIN                21091000
         BCR   Z,ML                RETURN IF END OF CHAIN               21091500
         TM    MDCTSTAT-DCTDSECT(R1),DCTPBUF  TEST FOR OUTPUT BUF       21092000
         BZ    MABNOBUF            BRANCH IF NO OUTPUT BUFFER           21092500
         NI    MDCTSTAT-DCTDSECT(R1),255-DCTPBUF  RESET STATUS          21093000
         L     R1,DCTBUFAD-DCTDSECT(,R1)     GET ADDRESS OF BUFFER      21093500
         B     MABUFRE             FREE BUFFER                          21094000
         SPACE 1                                                        21094500
MABNOBUF OI    DCTSTAT-DCTDSECT(R1),DCTHOLD  FORCE DCT UNAVAILABLE   R4 21095000
         TM    DCTSTAT-DCTDSECT(R1),DCTINUSE TEST REMOTE DCT STATUS     21095500
         BZ    MABPOST             BRANCH IF DCT IS NOT IN USE          21096000
         MVI   MDCTSTAT-DCTDSECT(R1),DCTSINON+DCTABORT ABORT            21096500
         OI    DCTFLAGS-DCTDSECT(R1),DCTRSTRT+DCTBKSP  RESTART JOB      21097000
         NI    DCTFLAGS-DCTDSECT(R1),255-DCTSTOP  JUST IN CASE          21097500
         L     R15,DCTPCE-DCTDSECT(R1)  GET ADDRESS OF ASSOCIATED PCE   21098000
        $POST  (R15),(IO,WORK)     POST PROCESSOR FOR IO AND WORK       21098500
         B     MABPOST             GET NEXT REMOTE DCT                  21099000
         EJECT                                                          21099500
*                                                                       21100000
*                             REMOTE DISCONNECT ROUTINE                 21100500
*                                                                       21101000
         SPACE 2                                                    R41 21101500
MDISCON  L     WA,MDCTDCT          GET ADDRESS OF REMOTE DCT            21102000
         LTR   WA,WA               TEST                                 21102500
         BCR   Z,ML                RETURN IF NOT SIGNED ON              21103000
         SPACE 1                                                     R4 21103500
MDSRESET OI    DCTSTAT-DCTDSECT(WA),DCTHOLD  SET REMOTE DCTHOLD      R4 21104000
         TM    MDCTSTAT,DCTSHARE+DCTLEASE TEST LINE STATUS              21105000
         BM    MDSNXRMT            IF LEASED, CHECK NEXT RMT DCT     R4 21105500
         NI    MDCTSTAT-DCTDSECT(WA),255-DCTSINON  RESET SIGN-ON        21108000
MDSNXRMT L     WA,MDCTDCT-DCTDSECT(,WA)  GET ADDR OF NEXT RMT DCT       21108500
         LTR   WA,WA               TEST FOR END OF CHAIN                21109000
         BNZ   MDSRESET            BRANCH IF NOT END OF CHAIN           21109500
         TM    MDCTSTAT,DCTLEASE+DCTSHARE  TEST LINE DCT STATUS      R4 21112000
         BMR   ML                  RETURN IF LEASED LINE             R4 21112500
         CLI   PCEID+1,PCEMLMID    IF NOT LINE MANAGER,        @OZ25901 21112600
         BNE   MDSCGO                 BR TO PROCESS DISCONNECT @OZ25901 21112700
         OI    DCTFLAGS,DCTRSTRT   TURN ON RESTART IN CASE REQ @OZ25901 21112800
         TM    MEVNTIND,MEVNCKPT   TEST STATUS OF SHARED QS    @OZ25901 21112900
         BZ    MREQBUF             IF NOT OWNED, REQUEUE BUFR  @OZ25901 21113000
         NI    DCTFLAGS,255-DCTRSTRT  RESET RESTART IND        @OZ25901 21113100
         SPACE 1                                                     R4 21113500
MDSCGO   L     R1,MDCTDCT          SAVE RMT DCT ADDRESS        @OZ25901 21114500
         XC    MDCTDCT,MDCTDCT     CLEAR ADDR OF RMT DCT IN LINE        21115000
         L     WA,MDCTRAT          GET ADDRESS OF RAT                R4 21116000
         L     R15,$MWORK          POINT TO WORK AREA                R4 21116500
         MVC   0(L'MSFMSG,R15),MSFMSG MOVE MESSAGE TO WORK AREA      R4 21117000
         MVC   2(8,R15),RATNAME-RATDSECT(WA) RMT ID TO MSG           R4 21117500
         MVC   33(3,R15),DCTDEVN+4 INSERT LINE NUMBER INTO MESSAGE   R4 21118000
         SPACE 1                                                    R41 21125500
MDSRMT   DS    0H                                                    R4 21126000
*              THIS LINE DELETED BY APAR NUMBER                @OZ25901 21126500
         TM    MDCTSTAT,DCTSHARE   TEST FOR SHARED LINES             R4 21127000
         BO    MDSRMTE             YES, SKIP CLEARING RAT LINE PTR   R4 21127500
         XC    RATLDCT-RATDSECT(,WA),RATLDCT-RATDSECT(WA)  0 RATLDCT R4 21128500
MDSRMTE  SL    WA,$RATABLE         WA = (RMT NUMBER - 1) * RATTLE    R4 21129000
         LR    R15,WA              MULTIPLY                             21129500
         ALR   R15,WA               BY                                  21130000
         ALR   R15,WA                THREE                              21130500
         SLR   R14,R14             DIVIDE BY 8*RATTLE GIVING OFFSET     21131000
         D     R14,=A(RATTLE)       BY 8 GIVING OFFSET TO BIT        R4 21131500
         D     R14,=A(8)             (REMAIN) AND BYTE (QUOT)        R4 21132000
         AL    R15,$RMTSON         R15 = BYTE ADDR OF SIGNON BITS    R4 21132500
         L     R0,=A(-QUEBUSY*X'2000'-1)  GET BITS TO CLEAR BUSY        21133000
         SRL   R0,0(R14)           SHIFT TO BIT OFFSET                  21133500
         STH   R0,MSONWORK         STORE FOR CLEAR                      21134000
         NC    0(2,R15),MSONWORK   INDICATE REMOTE OFF SYSTEM           21134500
         EJECT                                                       R4 21135000
MDSWTO   L     R1,$MWORK           POINT TO WORK AREA                R4 21135500
        $WTO   (R1),L'MSFMSG,JOB=NO,WAIT=NO,  ISSUE DISCONNECT       R4C21136000
               ROUTE=$LOG+$TP,CLASS=$NORMAL,PRI=$ST  MESSAGE            21136500
        $GETSMFB WAIT=NO           GET SMF BUFFER                       21139000
         BZ    MDSNOSMF            BRANCH IF NONE AVAILABLE             21139500
         USING SMFDSECT,R1                                              21140000
         MVI   SMF48EVT+1,SMFRMTEV SET REMOTE EVENT TYPE                21140500
         LA    WA,MDSNOSMF         SET RETURN FROM SMF SUBROUTINE       21141000
         SPACE 1                                                        21141500
MSMF48   MVI   SMFRDW+1,SMF48END-SMFRDW  SET RECORD LENGTH              21142000
         MVI   SMFHDRTY,SMFPSETP   SET STOP EVENT RECORD TYPE           21142500
         MVC   SMF48CTR,MDCTCNTS   MOVE SESSION COUNT TO SMF RECORD  R4 21143000
         L     R15,DCTDCB          GET LINE ADAPTER ADDRESS          R4 21143500
         L     R15,DCBDEBAD-DCBDSECT(,R15)  FROM THE UCB             R4 21144000
         L     R15,DEBSUCBA-DEBDSECT(,R15)   AND STORE IT IN         R4 21144500
         MVC   SMF48ADP,UCBNAME-UCBDSECT(R15)  THE SMF RECORD        R4 21145000
         B     SKIP210             SKIP                              R4 21145500
         SPACE 1                                                     R4 21146000
MSMF     MVI   SMF47LN1+1,SMF47LN2-SMF47LN1  SET ID SECTION LENGTH   R4 21146500
SKIP210  MVI   SMFSSID+1,SMFHSPID  SET HASP SUBSYSTEM ID             R4 21147000
         LH    R0,SMFRDW           COMPUTE AND STORE LENGTH OF          21147500
         SH    R0,=Y(SMFSSTRT-SMFRDW)  THAT PORTION OF THE RECORD       21148000
         STH   R0,SMFSSLEN          FOLLOWING THE SUBSYSTEM HDR         21148500
         ICM   R15,15,MDCTRAT      ANYTHING CONNECTED                R4 21149000
         BZ    *+10                SKIP IF NOT                          21149500
         MVC   SMF48RMT,RATNAME-RATDSECT(R15) SET IDENTIFICATION     R4 21150000
         MVC   SMF48LIN,DCTDEVN    SET LINE NAME IN RECORD              21150500
         CLI   SMF48PSW,0          IS PASSWORD ALREADY SET              21151000
         BNE   *+10                SKIP IF YES                          21151500
         MVC   SMF48PSW,MDCTPSWD   SET PASSWORD FROM LINE               21152000
        $QUESMFB                   QUEUE THE SMF RECORD FOR OUTPUT      21152500
         DROP  R1                                                       21153000
         BR    WA                  RETURN                               21153500
MDSNOSMF XC    MDCTRAT,MDCTRAT     INDICATE NOTHING CONNECTED        R4 21154000
*              THIS LINE DELETED BY APAR NUMBER                @OZ29941 21154100
         BR    ML                  RETURN                               21156000
         TITLE 'HASP BSC REMOTE TERMINAL CCW SETUP SUBROUTINE'       R4 21156500
MCCWINIT DS    0H                  INITIALIZE CCW'S IN IOB              21157000
         LA    MCODE,0(,MCODE)     CLEAR CONSOLE MSG COUNT          R41 21157300
         ST    R0,IOBSTART         SET IOBSTART                         21157500
         ST    R0,IOBRESTR          AND IOBRESTR                        21158000
         XC    IOBCCW1,IOBCCW1     CLEAR FIRST CCW                      21158500
         STC   R1,MSEQTYPE         STORE SEQUENCE TYPE                  21159000
         NI    MSEQTYPE,X'F0'      CLEAR POSSIBLE COMMAND TYPE          21159500
         MVC   IOBCCW2(7*8),IOBCCW1 PROPAGATE TO REST OF CCW'S          21160000
         LA    R0,LCBMCB           R0 = ADDRESS OF MODE CONTROL BYTE    21160500
         LA    R1,TPBUFST          R1 = ADDRESS OF FIRST DATA BYTE      21161000
         TM    MSEQTYPE,MPREPSEQ   TEST SEQUENCE TYPE                   21161500
         BZ    MCCWRDW             BRANCH IF NOT PREPARE SEQUENCE    R4 21162000
         SPACE 3                                                     R4 21162500
         TM    MDCTLINE,DCTPCTC    TEST LINE TYPE                    R4 21163000
         BZ    MCCWBPRP            BRANCH IF NOT CTCA                R4 21163500
         ST    R0,IOBCCW1          SET SENSE ADDRESS FOR CCW1        R4 21164000
         LA    R0,MNAKSEQ          SET NAK                           R4 21164500
         ST    R0,IOBCCW2           ADDRESS FOR CCW2                 R4 21165000
         ST    R1,IOBCCW4          SET READ ADDRESS FOR CCW4         R4 21165500
         OC    IOBCCW1(4*8),MCTCCCW  SETUP FOUR CCWS                 R4 21166000
         MVI   IOBCCW1+4,X'20'     DECHAIN SENSE CCW1                R4 21166500
         OI    IOBCCW2+5,MWENQCMD  INDICATE CCW2 POTENTIAL SOH-ENQ   R4 21167000
         MVC   IOBCCW4+6(2),$BFSZBSC  SET READ LENGTH                R4 21167500
         BR    ML                  RETURN                            R4 21168000
         SPACE 2                                                     R4 21168500
MCCWBPRP ST    R0,IOBCCW2          SET ADDRESS OF SET MODE CCW       R4 21169000
         OC    IOBCCW1(3*8),MDISCCW SET UP FIRST THREE CCW'S            21169500
         ST    MCODE,IOBCCW4       SET ADDRESS OF SYNCH CCW             21170000
         LA    R0,MBSCENQ          R0 = ADDRESS OF ENQ CHARACTER        21170500
         ST    R0,IOBCCW5          SET ADDRESS OF WRITE ENQUIRY CCW     21171000
         OC    IOBCCW4(2*8),MWENQCCW    SET UP NEXT TWO CCW'S           21171500
         MVI   IOBCCW5,X'03'       NOP ENQUIRY WRITE                 R4 21172000
         ST    R1,IOBCCW6          SET ADDRESS OF READ CCW              21172500
         OC    IOBCCW6,MREADCCW    SET UP LAST CCW                      21173000
         MVC   IOBCCW6+6(2),$BFSZBSC  SET READ LENGTH                R4 21173500
         BR    ML                  RETURN                               21174000
         SPACE 2                                                     R4 21174500
MCCWRDW  LA    R15,LCBRCB          R15 = ADDRESS OF RESPONSE FIELD   R4 21175000
         TM    MDCTLINE,DCTPCTC    TEST LINE TYPE                    R4 21175500
         BZ    MCCWBRDW            BRANCH IF NOT CTCA                R4 21176000
         ST    R0,IOBCCW1          SET SENSE ADDRESS FOR CCW1        R4 21176500
         ST    R15,IOBCCW2         SET RESPONSE ADDRESS FOR CCW2     R4 21177000
         ST    R1,IOBCCW4          SET READ ADDRESS FOR CCW4         R4 21177500
         OC    IOBCCW1(4*8),MCTCCCW  SETUP FIRST FOUR CCWS           R4 21178000
         MVC   IOBCCW4+6(2),$BFSZBSC  SET READ LENGTH                R4 21178500
         MVC   IOBCCW5(4*8),IOBCCW1  SETUP LAST FOUR CCWS            R4 21179000
         OI    IOBCCW2+5,MWRSPCMD  INDICATE SENDING RESPONSE IN CCW2 R4 21179500
         STCM  R1,7,IOBCCW6+1      SET WRITE ADDRESS IN CCW6         R4 21180000
         OI    IOBCCW8+5,MWRITSEQ  INDICATE WRITE SEQUENCE IN CCW8   R4 21180500
         BR    ML                  RETURN                            R4 21181000
         EJECT                                                       R4 21181500
MCCWBRDW OC    IOBCCW1,MENBCCW     SET UP FIRST CCW                     21182000
         ST    MCODE,IOBCCW2       SET ADDRESS OF SYNCH CCW             21182500
         TM    MSEQTYPE,MWRITSEQ   TEST SEQUENCE TYPE                   21183000
         BZ    MCCWBSCR            BRANCH IF NOT WRITE                  21183500
         SPACE 2                                                        21184000
         LA    R0,MBSCENQ          R0 = ADDRESS OF ENQ CHARACTER        21184500
         ST    R0,IOBCCW3          SET ADDRESS OF WRITE ENQUIRY CCW     21185000
         ST    R15,IOBCCW4         SET ADDRESS OF READ RESPONSE CCW     21185500
         B     MCCWBSCW            SET UP REST OF CCW'S                 21186000
         SPACE 2                                                        21186500
MCCWBSCR ST    R15,IOBCCW3         SET ADDRESS OF WRITE RESPONSE CCW    21187000
         ST    R1,IOBCCW4          SET ADDRESS OF READ CCW              21187500
         OC    IOBCCW2(3*8),MWRSPCCW SET UP NEXT THREE CCW'S            21188000
         MVC   IOBCCW4+6(2),$BFSZBSC  SET READ LENGTH                R4 21188500
         TM    $RJEOPTS,$ADDSYNS   TEST ADDITIONAL IDLES OPTION      R4 21189000
         BZ    SKIP220             BR IF NOT SELECTED                R4 21189500
         MVI   IOBCCW2,X'01'       ACTIVATE ENQUIRY WRITE            R4 21190000
         MVI   IOBCCW2+4,X'A0'     SET DATA CHAINING                 R4 21190500
SKIP220  TM    MSEQTYPE,MCPUSEQ    TEST SEQUENCE TYPE                   21191000
         BCR   Z,ML                RETURN IF NOT PROGRAMMABLE INTERFACE 21191500
         SPACE 2                                                        21192000
MCCWBSCW ST    MCODE,IOBCCW5       SET ADDRESS OF SYNCH CCW             21192500
         ST    R1,IOBCCW6          SET ADDRESS OF WRITE CCW             21193000
         MVC   IOBCCW6+4(1),MBSCCWCH SET CCW BYTE FOR PROPER CHAINING   21193500
         LA    R0,METBSEQ          R0 = ADDRESS OF ETB SEQUENCE         21194000
         ST    R0,IOBCCW7          SET ADDRESS OF WRITE ETB SEQUENCE    21194500
         TM    MSEQTYPE,MCPUSEQ    TEST SEQUENCE TYPE                   21195000
         BZ    MCCW27X0            BRANCH IF NOT PROGRAMMABLE INTERFACE 21195500
         SPACE 2                                                        21196000
         OC    IOBCCW5(3*8),MWRITCCW SET UP NEXT THREE CCW'S            21196500
         MVC   IOBCCW8,IOBCCW4     SET UP LAST CCW                      21197000
         OI    IOBCCW8+5,MWRITSEQ  INDICATE WRITE TEXT SEQUENCE         21197500
         TM    $RJEOPTS,$ADDSYNS   TEST ADDITIONAL IDLES OPTION      R4 21198000
         BZR   ML                  RETURN IF NOT SELECTED            R4 21198500
         MVI   IOBCCW5,X'01'       ACTIVATE ENQUIRY WRITE            R4 21199000
         MVI   IOBCCW5+4,X'A0'     SET DATA CHAINING                 R4 21199500
         BR    ML                  RETURN                               21200000
         SPACE 2                                                        21200500
MCCW27X0 DS    0H                  SET UP 2770/2780 WRITE CCW'S      R4 21201000
         ST    R15,IOBCCW8         SET ADDRESS OF READ RESPONSE CCW  R4 21201500
         OC    IOBCCW2(7*8),MWENQCCW SET UP LAST SEVEN CCW'S            21202000
         TM    $RJEOPTS,$ADDSYNS   TEST ADDITIONAL IDLES OPTION      R4 21202500
         BZR   ML                  RETURN IF NOT SELECTED            R4 21203000
         MVI   IOBCCW2,X'01'       ACTIVATE ENQUIRY WRITE            R4 21203500
         MVI   IOBCCW2+4,X'A0'     SET DATA CHAINING                 R4 21204000
         MVI   IOBCCW5,X'01'       ACTIVATE ENQUIRY WRITE            R4 21204500
         MVI   IOBCCW5+4,X'A0'     SET DATA CHAINING                 R4 21205000
         BR    ML                  RETURN                               21205500
         TITLE 'HASP BSC CPU INPUT/OUTPUT INTERFACE'                    21206000
MINITIO  CLI   IOBECBCC,0          TEST INPUT BUFFER STATUS             21206500
         BCR   NE,ML               RETURN IF INPUT BUFFER IS BUSY       21207000
         SPACE 2                                                        21207500
         TM    MDCTFCS,X'40'       TEST REMOTE FCS                      21208000
         BO    MINITACK            BRANCH IF WAIT-A-BIT                 21208500
         OC    MDCTOBUF+1(3),MDCTOBUF+1 TEST OUTPUT BUFFER CHAIN        21209000
         BNZ   MINITWR             BRANCH IF BUFFER IS QUEUED           21209500
         TM    MDCTSTAT,DCTPOST    MAY OUTPUT BE READY SOON             21210000
         BZ    MINITDLY            BRANCH IF YES                     R4 21210500
         SPACE 1                                                        21211000
MINITACK CLI   TPBRECNT,C'E'       TEST INPUT BUFFER STATUS             21211500
         BNE   MINITDLY            BRANCH IF INPUT BUFFER IS NOT EMPTY  21212000
         MVC   LCBRCB,MACK0SEQ     SET UP                               21212500
         LA    R1,IOBCCW2           ACK0 SEQUENCE                       21213000
         TM    MDCTLINE,DCTPCTC    TEST LINE TYPE                    R4 21213500
         BZ    MINITXCP            GO INITIATE I/O IF NOT CTCA       R4 21214000
         LA    R1,IOBCCW1          START AT CCW1 FOR CTCA            R4 21214500
         B     MINITXCP            INITIATE I/O                         21215000
         SPACE 1                                                     R4 21215500
MINITDLY MVC   LCBRCB,MACK0SEQ     SET UP ACK0 SEQUENCE                 21216000
         LA    R1,IOBCCW2          SET UP ADDRESS OF                    21216500
         TM    MDCTLINE,DCTPCTC     CCW2                             R4 21217000
         BZ    SKIP230              OR, IF CTCA,                     R4 21217500
MINITCDL LA    R1,IOBCCW1           CCW1 FOR                         R4 21218000
SKIP230  ST    R1,IOBRESTR          RESTART CCW                         21218500
         OI    MDCTATTN,MDCTIMER   INDICATE TIMED ACTION REQUESTED      21219000
         L     R1,$MLLMPCE                    INDICATE $STIMER       R4 21219500
         OI    MSTQE+IPOST-PCEDSECT(R1),X'20'  REQUESTED             R4 21220000
         BR    ML                  RETURN                               21220500
         SPACE 2                                                     R4 21221000
MINITWR  L     R15,MDCTOBUF        GET ADDRESS OF OUTPUT BUFFER         21221500
         MVC   IOBCCW6,IOBCCW6-BUFDSECT(R15) SET UP WRITE TEXT CCW      21222000
         MVC   TPBUFST+3-BUFDSECT(2,R15),MBASEFCS PRESET FCS            21222500
         LA    R1,IOBCCW5          SET FOR WRITE TEXT                   21223000
         CLI   TPBRECNT,C'E'       TEST INPUT BUFFER STATUS             21223500
         BE    MINITXCP            BRANCH IF INPUT BUFFER IS EMPTY      21224000
         TM    MDCTLINE,DCTPCTC    TEST LINE TYPE                    R4 21224500
         BO    MINITWTC            SET UP CTC WAIT-A-BIT             R4 21225000
         SPACE 1                                                        21225500
         MVC   IOBCCW2(4*8),IOBCCW5     MOVE CCW'S                      21226000
         LA    R1,IOBCCW7          USE CCW AREA                         21226500
         ST    R1,IOBCCW5          SET ADDRESS OF READ CCW              21227000
         MVI   IOBCCW5,X'02'       SET READ CCW                         21227500
         MVC   IOBCCW5+5(3),MWABTEXT    SET COMMAND TYPE AND BYTE COUNT 21228000
         OI    TPBUFST+3-BUFDSECT(R15),X'40' SET WAIT-A-BIT             21228500
         LA    R1,IOBCCW2          SET FOR WRITE WABT TEXT              21229000
         SPACE 2                                                        21229500
MINITXCP ST    R1,IOBSTART         SET IOBSTART                         21230000
         ST    R1,IOBRESTR          AND IOBRESTR                        21230500
         B     MERREXCP            INITIATE I/O                         21231000
         TITLE 'HASP BSC REMOTE TERMINAL INPUT/OUTPUT INTERFACE'     R4 21231500
MINITWTC MVC   IOBCCW2(8),IOBCCW6  MOVE WRITE CCW                    R4 21232000
         LA    R1,IOBCCW7          USE CCW FOR                       R4 21232500
         ST    R1,IOBCCW4          SHORT READ                        R4 21233000
         MVI   IOBCCW4,X'02'       SET READ OP-CODE                  R4 21233500
         MVC   IOBCCW4+5(3),MWABTEXT SET CCW ID AND READ COUNT       R4 21234000
         OI    TPBUFST+3-BUFDSECT(R15),X'40' SET WAIT-A-BIT          R4 21234500
         LA    R1,IOBCCW1          SET START OF CCWS                 R4 21235000
         B     MINITXCP            INITIATE I/O                      R4 21235500
         SPACE 2                                                     R4 21236000
MEXCP    DS    0H                                              @OZ28291 21236500
         LR    R15,MDCT            SAVE DCT ADDR FOR ASCII     @OZ28291 21236600
         L     MDCT,DCTDCB         GET ADDR OF LINE DCT        @OZ28291 21236700
MEXCPNXT DS    0H                                                    R4 21237000
         XC    LCBACK,MBSCACKX     INVERT ACK TO SEND OR EXPECT         21237500
         MVC   LCBRCB(1),MBSCDLE   SET UP                               21238000
         MVC   LCBRCB+1(1),LCBACK   RESPONSE                            21238500
         SPACE 1                                                        21239000
         TM    MDCTLINE,DCTPASCI   TEST CODE TYPE                       21239500
         BZ    MEXCP1              BRANCH IF EBCDIC                     21240000
         TM    MSEQTYPE,MWRITSEQ   TEST SEQUENCE TYPE                R4 21240500
         BZ    MEXCP1              BRANCH IF NOT WRITE SEQUENCE      R4 21241000
         SPACE 1                                                        21241500
         LA    R14,TPBUFST         LOCATE START OF RJE BUFFER DATA   R4 21242000
         LH    R1,$BFSZBSC         OBTAIN RJE BUFFER DATA LENGTH     R4 21242500
         CLI   IOBCCW6,X'08'       TIC TO DATA AREA?           @OZ28291 21242600
         BNE   MEXCPTR1            NO?,BRANCH                  @OZ28291 21242650
         LA    R14,TPBUFST+36      INIT DATA ADDR FOR 2780     @OZ28291 21242700
         CLI   MDCTTYPE-DCTDSECT(R15),DCTP2780 TEST TERM TYPE  @OZ28291 21242750
         BNL   MEXCPTR1            BRANCH IF NOT 2770          @OZ28291 21242800
         LA    R14,TPBUFST+12      INIT DATA ADDR FOR 2770     @OZ28291 21242850
         SPACE 1                                                     R4 21243000
MEXCPTR1 CH    R1,=H'256'          IF REMAINING LENGTH NOT GT 256,   R4 21243500
         BNH   MEXCPTR3             BR TO FINISH TRANSLATION         R4 21244000
         TR    0(256,R14),MBPASCII   ELSE TRANSLATE 256 BYTES        R4 21244500
         LA    R14,256(,R14)       THEN UPDATE BUFFER ADDRESS,       R4 21245000
         SH    R1,=H'256'           REDUCE BUFFER LENGTH,            R4 21245500
         B     MEXCPTR1              AND BR TO CONTINUE TRANSLATION  R4 21246000
         SPACE 1                                                     R4 21246500
MEXCPTR2 TR    0(*-*,R14),MBPASCII *** EXECUTE ONLY ***              R4 21247000
         SPACE 1                                                     R4 21247500
MEXCPTR3 BCTR  R1,0                REDUCE LENGTH FOR EXECUTE         R4 21248000
         EX    R1,MEXCPTR2         TRANSLATE TO END OF BUFFER        R4 21248500
         SPACE 1                                                     R4 21249000
MERREXCP TM    MSEQTYPE,MBSCSEQ+MCPUSEQ  TEST SEQUENCE TYPE          R4 21249500
         BNO   MEXCP1              BRANCH IF NOT BSC CPU SEQUENCE       21250000
         SPACE 1                                                        21250500
         TM    MDCTLINE,DCTPWIDE   TEST LINE TYPE                       21251000
         BZ    MBCEXCP             BRANCH IF NOT WIDE BAND              21251500
         L     R1,MDCTDCT          GET ADDRESS OF REMOTE DCT            21252000
         CLI   MDCTTYPE-DCTDSECT(R1),DCTP20S2 TEST TERMINAL TYPE     R4 21252500
         BNE   MBCEXCP             BRANCH IF NOT 360/20 SUB-MODEL 2  R4 21253000
         EJECT                                                       R4 21253500
         L     R14,$MWORK          POINT TO WORK AREA                R4 21254000
         STCK  0(R14)              GET                               R4 21254500
         LM    R0,R1,0(R14)         TIME                             R4 21255000
         AL    R1,$DELAYTM         ADD MODEL 20 DELAY TIME           R4 21255500
         BC    12,*+8              BRANCH IF NO OVERFLOW                21256000
         AL    R0,=F'1'            PROPAGATE OVERFLOW INTO R0           21256500
         STM   R0,R1,0(R14)        SAVE UPDATED TIME                 R4 21257000
         STCK  8(R14)              GET NEW TIME                      R4 21257500
         CLC   0(8,R14),8(R14)     COMPARE WITH LIMIT                R4 21258000
         BH    *-10                DELAY...                             21258500
         SPACE 2                                                     R4 21259000
MBCEXCP  L     R1,IOBSTART         GET ADDRESS OF FIRST CCW             21259500
         TM    4(R1),X'C0'         LAST CCW OF CHAIN                R41 21259700
         BZ    MEXCP1              BRANCH IF END OF CCWS            R41 21259800
         CLI   13(R1),MBSCSEQ+MCPUSEQ+MWRITCMD  TEST COMMAND TYPE    R4 21260000
         BNE   MEXCP1              BRANCH IF NOT BSC CPU WRITE TEXT     21260500
         SPACE 1                                                        21261000
         L     R1,8(R1)            GET ADDRESS OF TEXT                  21261500
         TM    2(R1),X'B0'         TEST BLOCK CONTROL BYTE              21262000
         BNZ   MEXCP1              BRANCH IF SET, IGNORE, OR RETRY      21262500
         SPACE 1                                                        21263000
         MVN   2(1,R1),MDCTTSEQ    SET TRANSMIT BLOCK SEQUENCE COUNT    21263500
         OI    2(R1),X'80'         SET HIGH-ORDER BIT                   21264000
         IC    R1,MDCTTSEQ         INCREMENT TRANSMIT                   21264500
         LA    R1,1(R1)             BLOCK SEQUENCE                      21265000
         STC   R1,MDCTTSEQ           COUNT                              21265500
         SPACE 1                                                        21266000
MEXCP1   CLI   DCTBUFCT,0          TEST ACTIVE I/O COUNT                21266500
         BNE   M02                 ERROR IF NOT ZERO                    21267000
         NI    MDCTATTN,255-MDCTIMER-MDCTPAWS     RESET TIMER REQUESTS  21267500
         MVI   IOBXTENT,0          INSURE EXTENT BYTE IS CLEAR          21268000
        $EXCP  (MDCT)              INITIATE I/O                         21268500
         BR    ML                  RETURN                               21269000
         SPACE 1                                                        21269500
M02     $ERROR                     LINE I/O SYNCHRONIZATION ERROR       21270000
         TITLE 'HASP BSC REMOTE TERMINAL CCW SKELETONS'              R4 21270500
*********************************************************************** 21271000
*                                                                     * 21271500
*        HASP REMOTE TERMINAL CCW SKELETONS FOR BSC                   * 21272000
*                                                                     * 21272500
*********************************************************************** 21273000
         SPACE 3                                                     R4 21273500
MDISCCW  $CCW  X'2F',0,X'60',1,MDISCMD       BSC DISABLE COMMAND     R4 21274000
         $CCW  X'23',*-*,X'60',1,MSETMCMD    BSC SET MODE COMMAND    R4 21274500
MENBCCW  $CCW  X'27',0,X'60',1,MENBCMD       BSC ENABLE COMMAND      R4 21275000
         SPACE 2                                                     R4 21275500
MWRSPCCW $CCW  X'03',*-*,X'60',4,MWRSPCMD  BSC SYNCH COMMAND         R4 21276000
         $CCW  X'01',*-*,X'60',2,MWRSPCMD    BSC WRITE RESPONSE COMMAND 21276500
MREADCCW $CCW  X'02',*-*,X'20',*-*,MREADCMD  BSC READ TEXT COMMAND   R4 21277000
         SPACE 2                                                     R4 21277500
MWENQCCW $CCW  X'03',*-*,X'60',4,MWENQCMD  BSC SYNCH COMMAND         R4 21278000
         $CCW  X'01',*-*,X'60',1,MWENQCMD    BSC WRITE ENQUIRY COMMAND  21278500
         $CCW  X'02',*-*,X'20',2,MRREQCMD  BSC READ RESPONSE TO ENQUIRY 21279000
MWRITCCW $CCW  X'03',*-*,X'60',4,MWRITCMD  BSC SYNCH COMMAND         R4 21279500
         $CCW  X'01',*-*,*-*,*-*,MWRITCMD    BSC WRITE TEXT COMMAND  R4 21280000
         $CCW  X'01',*-*,X'60',2,MWRITCMD    BSC WRITE ETB COMMAND   R4 21280500
         $CCW  X'02',*-*,X'20',2,MRRSPCMD    BSC READ RESPONSE TO TEXT  21281000
         SPACE 2                                                     R4 21281500
MCTCCCW  $CCW  X'14',*-*,X'60',1,MENBCMD  CTC SENSE ENDS OTHER CNTRL R4 21282000
         $CCW  X'01',*-*,X'60',2,MWRITCMD  CTC WRITE COMMAND         R4 21282500
         $CCW  X'07',0,X'60',1,MPREPCMD  CTC CONTROL WAITS FOR SENSE R4 21283000
         $CCW  X'02',*-*,X'20',*-*,MREADCMD  CTC READ COMMAND        R4 21283500
         TITLE 'HASP BSC REMOTE TERMINAL CODE TABLES'                R4 21284000
MCODSECT DSECT                     DEFINE CODE TABLE DSECT           R4 21284500
MBSCSYN  DS    2XL4                SYNCHRONOUS IDLE CHARACTERS       R4 21285000
MBSCSOH  DS    0X                  START OF HEADER CHARACTER         R4 21285500
MSOHSTX  DS    XL2                 NON-TRANSPARENT START OF TEXT SEQ R4 21286000
MBSCDLE  DS    0X                  DATA LINK ESCAPE CHARACTER        R4 21286500
MDLESTX  DS    XL2,XL4             TRANSPARENT START OF TEXT SEQUENCE   21287000
MSOHENQ  DS    XL2                 MULTI-LEAVING SIGN-ON SEQUENCE    R4 21287500
MSTXSEQ  DS    0XL2,X              START OF TEXT SEQUENCE            R4 21288000
MBSCSTX  DS    X,XL4               START OF TEXT CHARACTER           R4 21288500
METBSEQ  DS    0XL2,X              END OF TEXT BLOCK SEQUENCE        R4 21289000
MBSCETB  DS    X                   END OF TEXT BLOCK CHARACTER       R4 21289500
METXSEQ  DS    0XL2,X              END OF TEXT SEQUENCE              R4 21290000
MBSCETX  DS    X,XL4               END OF TEXT CHARACTER             R4 21290500
MACK0SEQ DS    0XL2,X              EVEN ACKNOWLEDGEMENT SEQUENCE     R4 21291000
MBSCACK0 DS    X                   EVEN ACKNOWLEDGEMENT CHARACTER    R4 21291500
MACK1SEQ DS    0XL2,X              ODD ACKNOWLEDGEMENT SEQUENCE      R4 21292000
MBSCACK1 DS    X,XL4               ODD ACKNOWLEDGEMENT CHARACTER     R4 21292500
MNAKSEQ  DS    0XL2,X              NEGATIVE ACKNOWLEDGEMENT SEQUENCE R4 21293000
MBSCNAK  DS    X                   NEGATIVE ACKNOWLEDGEMENT CHARACTER   21293500
MBSCACKX DS    X                   ACKNOWLEDGEMENT CONVERSION CHARACTER 21294000
MBSCCWCH DS    X,XL4               CCW CHAINING CHARACTER            R4 21294500
MBSCENQ  DS    X                   ENQUIRY CHARACTER                 R4 21295000
MDLEEOT  DS    0XL2,X              DISCONNECT SEQUENCE               R4 21295500
MBSCEOT  DS    X                   END OF TRANSMISSION CHARACTER     R4 21296000
MBSCWACK DS    X,XL4               WAIT BEFORE TRANSMIT              R4 21296500
HASPRTAM CSECT                                                       R4 21297000
         SPACE 3                                                     R4 21297500
MEBCDIC  DS    0D                  EBCDIC CODE TABLE                 R4 21298000
         DC    X'3232323232323232'                                   R4 21298500
         DC    X'0102100201021002'                                   R4 21299000
         DC    X'012D0102012D1002'                                   R4 21299500
         DC    X'3226320310261003'                                   R4 21300000
         DC    X'1070106110701061'                                   R4 21300500
         DC    X'323D11A0323D1160'                                   R4 21301000
         DC    X'2D10376B2D10376B'                                   R4 21301500
         SPACE 3                                                     R4 21302000
MUSASCII DS    0D                  USASCII CODE TABLE                R4 21302500
         DC    X'1616161616161616'                                   R4 21303000
         DC    X'0102100201021002'                                   R4 21303500
         DC    X'0105010201051002'                                   R4 21304000
         DC    X'1617160310171003'                                   R4 21304500
         DC    X'1030103110301031'                                   R4 21305000
         DC    X'161501A016150160'                                   R4 21305500
         DC    X'0510043B0510043B'                                   R4 21306000
         TITLE 'HASP BSC REMOTE TERMINAL CONSTANTS/MESSAGES'         R4 21306500
MSAVE    EQU   $MSAVE              GENERAL REGISTER SAVE AREA        R4 21307000
MSOSAVE1 EQU   MSAVE+8             SIGN-ON REGISTER SAVE AREA       R41 21307500
MSOSAVE2 EQU   MSAVE+12            SIGN-ON REGISTER SAVE AREA       R41 21308000
MSOSAVE3 EQU   MSAVE+16            SIGN-ON REGISTER SAVE AREA       R41 21308500
MFCON31  DC    F'31'               COMPRESSION/DECOMPRESSION CONSTANT   21309000
MFCON63  DC    F'63'               COMPRESSION/DECOMPRESSION CONSTANT   21309500
MBCPEOB  DC    X'00800000'         BSC END OF OUTPUT BUFFER SEQUENCE R4 21310000
MTEMPSAV EQU   $POSTSAV            TEMPORARY REGISTER SAVE AREA      R4 21310500
MBASEFCS DC    X'8FCF'             BASIC FUNCTION CONTROL SEQUENCE   R4 21311000
*                             WAIT-A-BIT WITH TEXT SEQUENCE          R4 21311500
MWABTEXT DC    AL1(MBSCSEQ+MWRITSEQ+MCPUSEQ+MRRSPCMD,0,16)           R4 21312000
*                             WAIT-A-BIT SEQUENCE                    R4 21312500
MWABTSEQ DC    AL1(MBSCSEQ+MCPUSEQ+MRRSPCMD,0,16),X'000090CFCF00'    R4 21313000
MBPUNSEL DC    AL1(MBCDSTX,MBCDESC,C'4')     2780 PUNCH SELECT       R4 21313500
MBHTREC  DC    AL1(MBCDESC,MBCDHT,C' ') 2770/2780 TAB INITIALIZATION R4 21314000
*                                  2780 PUNCH CONTROL CHARACTERS     R4 21314500
MBHPUNCC DC    AL1(MBCDDLE,MBCDITB,MBCDSYN,MBCDSYN,MBCDDLE,MBCDSTX)  R4 21315000
MB2770CD DC    0F'0',X'83000001'   2770 OUTPUT OPEN CONSTANT         R4 21315500
*                                                                    R4 21316000
MSONWORK EQU   $SONWORK            SIGN-ON WORK SPACE                R4 21316500
MSONCODE DC    CL9'/*SIGNON'       SIGN-ON CODE                      R4 21317000
MSOMSG   $MSG  200,'XXXXXXXX STARTED ON LINEMMM'  SIGN-ON MESSAGE    R4 21317500
MSOFCODE DC    CL10'/*SIGNOFF'     SIGN-OFF CODE                     R4 21318000
MSFMSG  $MSG   203,'XXXXXXXX DISCONNECTED FROM LINEMMM' DISC MSG     R4 21318500
MSOILPMS $MSG  201,'LINEMMM -- INVALID PASSWORD'  BAD PASSWORD MSG   R4 21319000
MSOILMSG $MSG  202,'LINEMMM -- INVALID SIGN-ON'  BAD SIGN-ON MSG     R4 21319500
MCDISCON DC    0CL27' ',X'900000F0C2D3'  CPU DISCONNECT              R4 21320000
         DC    C'REMOTE DISCONNECTED',X'0000'  MESSAGE               R4 21320500
         EJECT                                                       R4 21321000
         SPACE 5                                                     R4 21321500
         LTORG                                                       R4 21322000
         TITLE 'HASP BSC REMOTE TERMINAL TRANSLATE TABLES'           R4 21322500
MBPUTRAN TR    0(*-*,R1),MBSCTRAN  BSC TRANSLATE INSTRUCTION         R4 21323000
         SPACE 2                                                     R4 21323500
MBSCTRAN DS    0D            ILLEGAL BSC TO BINARY ZERO TRANSLATE    R4 21324000
*                                                                    R4 21324500
*                X0X1X2X3X4X5X6X7X8X9XAXBXCXDXEXF                   R41 21325000
*                                                                   R41 21325100
         DC    X'000000000005060000090A0B0C000000'  0X              R41 21325200
         DC    X'000000000000160000001A0000000000'  1X              R41 21325300
         DC    X'000000230025000000002A000000002F'  2X              R41 21325400
         DC    X'000000330000360038393A0000000000'  3X              R41 21325500
         DC    192AL1(*-MBSCTRAN)                   4X-FX           R41 21325600
         SPACE 5                                                     R4 21325700
MBGASCII DS    0D             USASCII TO EBCDIC TRANSLATE TABLE      R4 21326000
*                                                                    R4 21326500
*                X0X1X2X3X4X5X6X7X8X9XAXBXCXDXEXF                    R4 21327000
*                                                                    R4 21327500
         DC    X'00010203372D2E2F1605150B0C0D0E0F'  0X               R4 21328000
         DC    X'101112133C3D322618193F271C1D1E1F'  1X               R4 21328500
         DC    X'405A7F7B5B6C507D4D5D5C4E6B604B61'  2X               R4 21329000
         DC    X'F0F1F2F3F4F5F6F7F8F97A5E4C7E6E6F'  3X               R4 21329500
         DC    X'7CC1C2C3C4C5C6C7C8C9D1D2D3D4D5D6'  4X               R4 21330000
         DC    X'D7D8D9E2E3E4E5E6E7E8E9BBBCBDBE6D'  5X               R4 21330500
         DC    X'E0818283848586878889919293949596'  6X               R4 21331000
         DC    X'979899A2A3A4A5A6A7A8A9FB5FFDFE07'  7X               R4 21331500
         SPACE 5                                                     R4 21332000
MBPASCII DS    0D             EBCDIC TO USASCII TRANSLATE TABLE      R4 21332500
*                                                                    R4 21333000
*                X0X1X2X3X4X5X6X7X8X9XAXBXCXDXEXF                    R4 21333500
*                                                                    R4 21334000
         DC    X'000102030009007F0000000B0C0D0E0F'  0X               R4 21334500
         DC    X'10111213000A0800181900001C1D1E1F'  1X               R4 21335000
         DC    X'00000000000A171B0000000000050607'  2X               R4 21335500
         DC    X'0000160000000004000000001415001A'  3X               R4 21336000
         DC    X'20414243444546474849002E3C282B00'  4X               R4 21336500
         DC    X'264A4B4C4D000000000021242A293B7C'  5X               R4 21337000
         DC    X'2D2F5253000000000000002C255F3E3F'  6X               R4 21337500
         DC    X'000000003400000000003A2340273D22'  7X               R4 21338000
         DC    X'00616263646566676869000000000000'  8X               R4 21338500
         DC    X'006A6B6C6D6E6F707172000000000000'  9X               R4 21339000
         DC    X'0000737475767778797A000000000000'  AX               R4 21339500
         DC    X'00000000000000000000005B5C5D5E00'  BX               R4 21340000
         DC    X'00414243444546474849000000000000'  CX               R4 21340500
         DC    X'004A4B4C4D4E4F505152000000000000'  DX               R4 21341000
         DC    X'6051535455565758595A000000000000'  EX               R4 21341500
         DC    X'30313233343536373839007B007D7E00'  FX               R4 21342000
         TITLE 'HASP BSC REMOTE TERMINAL CARRIAGE CONTROL TABLES'    R4 21342500
         SPACE 5                                                     R4 21343000
MP27X0CC DS    0D             2770/2780 CARRIAGE CONTROL CHARACTERS  R4 21343500
*                                                                    R4 21344000
         DC    C'M/ST//////////A/'                                   R4 21344500
         DC    C'/ABCDEFGHIJKL///'                                   R4 21345000
         DC    C'//ST//////////A4'                                   R4 21345500
         DC    C'/ABCDEFGH///////'                                   R4 21346000
         SPACE 5                                                     R4 21346500
M27X0TRT DC    XL256'00'      2770/2780 TERMINATOR SEARCH TABLE      R4 21347000
         ORG   M27X0TRT+MBCDNL                                       R4 21347500
         DC    AL1(MBCDNL)         NEW LINE CHARACTER                R4 21348000
         ORG   M27X0TRT+MBCDIRS                                      R4 21348500
         DC    AL1(MBCDIRS)        INTER-RECORD CHARACTER            R4 21349000
         ORG   M27X0TRT+MBCDIGS                                      R4 21349500
         DC    AL1(MBCDIGS)        IGS CHARACTER                     R4 21350000
         ORG   M27X0TRT+MBCDEM                                       R4 21350500
         DC    AL1(MBCDEM)         END-OF-MEDIUM CHARACTER           R4 21351000
         ORG   M27X0TRT+256                                          R4 21351500
         SPACE 2                                                     R4 21352000
         DROP  MBASE1,MBASE2,MBASE3  DROP RTAM ADDRESSABILITY       R41 21352500
         TITLE 'HASP SNA REMOTE TERMINAL OPEN ROUTINE'               R4 21353000
*                                                                    R4 21353500
*                             VTAM OPEN PROCESSING                   R4 21354000
*                                                                    R4 21354500
         SPACE 2                                                     R4 21355000
*                                  ADDRESSABILITY --                R41 21355100
         USING ICEDSECT,MICE             -- ICE                     R41 21355500
         USING RPLDSECT,MBUF             -- RPL                     R41 21356000
         USING RTAMVSUB,MBASE2,MBASE3    -- COMMON SNA SUBROUTINES  R41 21356500
         SPACE 5                                                    R41 21356600
         USING RTAMVOPE,MBASE1     ESTABLISH SNA OPEN ADDRESSABILITY R4 21357000
RTAMVOPE DS    0H                  ENTRY POINT FOR RTAM SNA OPEN     R4 21358000
         TM    MDCTSEL,DCTPOUTB    TEST DIRECTION BIT                R4 21360500
         BZ    MVOINBND            IF INBOUND GO TO INBOUND OPEN     R4 21361000
         SPACE 1                                                     R4 21361500
*                             VTAM OPEN FOR OUTPUT                   R4 21362000
         SPACE 1                                                     R4 21362500
         TM    ICESTAT,ICEALLOC    TEST PRE-ALLOCATED ICE STATUS     R4 21363000
         BZ    MVOOUTBD            TRY OPEN IF ICE STILL AVAILABLE  R41 21363500
         CL    MDCT,ICERDCT        ELSE CHECK WHICH DCT ACTIVE      R41 21363600
         BNE   MVTAMXAB            FAIL OPEN IF ANOTHER DCT HAS ICE R41 21363700
         SPACE 1                                                    R41 21363800
MVOOUTBD OI    DCTPPSW,DCTPPSWC    FORCE PRPU FCB LOAD         @OZ29556 21364000
         BAL   ML,MVRPLGET         GET OUTPUT BUF FOR BDS      @OZ29556 21364200
         OI    ICESNDST,ICEOCPND   SET END CHN TO FORCE FMH SEND NOW R4 21364500
         BAL   ML,MVFMHBDS         BUILD, SEND, & GET +RSP TO BDS    R4 21365000
         B     MVTAMXIT            RETURN TO CALLER                  R4 21365500
         SPACE 3                                                     R4 21366000
*                             VTAM OPEN FOR INPUT                    R4 21366500
         SPACE 1                                                     R4 21367000
MVOINBND LTR   MBUF,MBUF           TEST BUFFER ADDRESS               R4 21367500
         BZ    MVTAMXAB            OPEN HAS TIMED OUT IF NONE--FAIL  R4 21368000
         L     R1,RPLRLEN          GET LENGTH OF UNUSED PART OF R.U. R4 21368500
         LA    ML,MVTAMXIT         POINT TO EXIT ROUTINE             R4 21369000
         LTR   R1,R1               TEST R.U. LENGTH                  R4 21369500
         BPR   ML                  RETURN IF NOT ZERO, LEAVE BUFFER    C21370000
                                    FOR 'GET' TO PROCESS AND FREE    R4 21370500
         B     MVRELBUF            OTHERWISE FREE BUFFER NOW & EXIT  R4 21371000
         TITLE 'HASP SNA REMOTE TERMINAL GET ROUTINE'                R4 21378500
*********************************************************************** 21379000
*                                                                     * 21379100
* SNA GET                                                             * 21379200
*                                                                     * 21379300
*                                                                     * 21379400
* REGISTER USAGE                                                      * 21379500
*                                                                     * 21379600
* RTC          R0                  TRANSPARENCY COUNT REMAINING       * 21379700
*              R1                  WORK REGISTER                      * 21379800
*              R2                  WORK REGISTER                      * 21379900
* RSC/MDCT     R3                  SCB COUNT REMAINING                * 21380000
* MBUF         R4                  RPL ADDRESS                        * 21380100
* RDP/MICE     R5                  DECOMPRESSED STRING POINTER        * 21380200
* RPC/ML       R6                  PROCESSOR BUFFER COUNT REMAINING   * 21380300
* MBASE1       R7                  SNA GET BASE ADDRESS               * 21380400
* MBASE2       R8                  SNA SUBROUTINES BASE ADDRESS       * 21380500
*              R9                   - NOT USED -                      * 21380600
* JCT          R10                 JCT ADDRESS                        * 21380700
* BASE1        R11                 HCT ADDRESS                        * 21380800
* RDC/BASE2    R12                 DECOMPRESSED STRING CNT REMAINING  * 21380900
* SAVE         R13                 PCE ADDRESS                        * 21381000
* LINK         R14                 RU SCAN ROUTINE RETURN ADDRESS     * 21381100
* RPP          R15                 PROCESSOR BUFFER POINTER           * 21381200
*                                                                     * 21381300
*                                                                     * 21381400
* SNA GET WORKAREA                                                    * 21381500
*                                                                     * 21381600
*              RPLSAVEA IS USED AS SNA GET WORK AREA BUT ONLY WHILE   * 21381700
*              IN A CHAIN OF RUS.  GET STATUS IS MOVED FROM ONE RPL   * 21381800
*              TO THE NEXT WHILE IN A CHAIN.                          * 21381900
*                                                                     * 21382000
* SGWFLAGS - NOT FIRST GET IN CHAIN SWITCH (SGWNFRST)                 * 21382100
*          - EXTRA EOR SWITCH (SGWXEOR)                               * 21382200
*          - DUPLICATE FIELD SWITCH (SGWDUP)                          * 21382300
*          - TRANSPARENCY SWITCH (SGWTRN)                             * 21382400
* SGWRSAVE - SAVES GET STATUS REGS 14-12 WHILE IN A CHAIN OF RUS      * 21382500
* SGWRUA   - POINTER TO NEXT BYTE OF RU TO BE SCANNED                 * 21382600
* SGWRUE   - POINTER TO END OF RU                              @OZ27441 21382700
*                                                                     * 21382800
*********************************************************************** 21382900
         SPACE 3                                                    R41 21383000
*                                                                   R41 21383100
*                             SNA GET REGISTER DEFINITIONS          R41 21383200
*                                                                   R41 21383300
         SPACE 1                                                    R41 21383400
RTC      EQU   R0                  TRANSPARENCY COUNT REMAINING     R41 21383500
RSC      EQU   R3   *MDCT*         SCB COUNT REMAINING              R41 21383600
RDP      EQU   R5   *MICE*         DECOMPRESSED STRING POINTER      R41 21383700
RPC      EQU   R6   *ML*           PROCESSOR BUFFER COUNT REMAINING R41 21383800
RDC      EQU   R12  *BASE2*        DECOMPRESS STRING COUNT REMAININGR41 21383900
RPP      EQU   R15                 PROCESSOR BUFFER POINTER         R41 21384000
         EJECT                                                      R41 21384100
*********************************************************************** 21384200
*                                                                     * 21384300
* RTAMVGET  --  SNA GET INITIALIZATION                                * 21384400
*                                                                     * 21384500
* INITIALIZATION IS ENTERED EVERY TIME A $EXTPGET IS DONE.            * 21384600
* INITIALIZATION GETS AN RPL IF NECESSARY AND CALLS THE RU SCAN       * 21384700
* ROUTINE (MVGSCN) FOR THE FIRST RU IN A CHAIN.  ON SUBSEQUENT        * 21384800
* ENTRIES INITIALIZATION RESTORES SAVED STATUS AND CALLS THE MOVE     * 21384900
* SUBROUTINE (MVGMVE) TO BEGIN FILLING THE PROCESSOR BUFFER.          * 21385000
*                                                                     * 21385100
*********************************************************************** 21385200
         SPACE 1                                                    R41 21385300
         USING RTAMVGET,MBASE1                                      R41 21385400
         SPACE 1                                                    R41 21385500
*                             DETERMINE IF FIRST GET OF RU CHAIN    R41 21385600
         SPACE 1                                                    R41 21385700
RTAMVGET LTR   MBUF,MBUF           IF THERE IS NO RPL BUFFER        R41 21385800
         BZ    MVGNBUF              GO GET ONE                      R41 21385900
         TM    SGWFLAGS,SGWNFRST   IF GET HAS NOT USED THIS RPL     R41 21386000
         BNO   MVGFRST              GO INIT FOR START OF CHAIN      R41 21386100
         SPACE 1                                                    R41 21386200
*                             NOT THE FIRST GET OF THE CHAIN        R41 21386300
         SPACE 1                                                    R41 21386400
         MVC   SGWRPP(4),PCER0     SAVE PROCESSOR BUFFER ADDRESS    R41 21386500
         MVC   SGWRPC+3(1),MDCTRECL SAVE PROCESSOR LRECL            R41 21386600
         LM    R14,R12,SGWRSAVE    RESTORE GET STATUS REGISTERS     R41 21386700
         B     MVGMVE              BEGIN FILLING PROCESSOR BUFFER   R41 21386800
         SPACE 1                                                    R41 21386900
*                             FIRST GET OF THE CHAIN, NO RPL BFR    R41 21387000
         SPACE 1                                                    R41 21387100
MVGNBUF  BAL   ML,MVREQBUF         GET NEXT RPL BUFFER              R41 21387200
         LTR   MBUF,MBUF           IF NO BUFFER RETURNED            R41 21387300
         BZ    MVGDUMMY             GO CREATE DUMMY RECORD          R41 21387400
         SPACE 1                                                    R41 21387500
*                             FIRST GET, GET HAS AN RPL BUFFER      R41 21387600
         SPACE 1                                                    R41 21387700
MVGFRST  OI    SGWFLAGS,SGWNFRST   SET NOT FIRST GET OF CHAIN       R41 21387800
         L     RPP,PCER0           INIT PROCESSOR BUFFER ADDR       R41 21387900
         XR    RPC,RPC             INIT PROCESSOR                   R41 21388000
         IC    RPC,MDCTRECL         BUFFER COUNT                    R41 21388100
         XR    RTC,RTC             INIT TRANSPARENCY COUNT          R41 21388200
*              THIS LINE DELETED BY APAR NUMBER                @OZ27441 21388300
         EJECT                                                      R41 21388400
*********************************************************************** 21388500
*                                                                     * 21388600
* MVGSCN  --  RU SCAN ROUTINE                                         * 21388700
*                                                                     * 21388800
* THE RU SCAN ROUTINE DECODES THE SCB AND PERFORMS AN SCS SCAN ON     * 21388900
* THE STRING OF DATA BEFORE CALLING THE MOVE SUBROUTINE (MVGMVE) TO   * 21389000
* PLACE THE DATA IN THE PROCESSOR BUFFER.  NON-COMPRESSED DATA IS     * 21389100
* MADE TO APPEAR AS A NON-DUPLICATE STRING NO GREATER THAN 256        * 21389200
* BYTES.  WHEN ONE RU ENDS THE RU SCAN ROUTINE CALLS THE EMPTY RU     * 21389300
* SUBROUTINE (MVGEMTY) TO GET THE NEXT RU.                            * 21389400
*                                                                     * 21389500
*********************************************************************** 21389600
         SPACE 1                                                    R41 21389700
MVGSCN   L     RDP,RPLAREA         POINT TO START OF RU             R41 21389800
         ST    RDP,SGWRUA          SAVE START OF RU                 R41 21389900
         L     R1,RPLRLEN          POINT TO                         R41 21390000
         AR    RDP,R1               END OF RU                       R41 21390100
         ST    RDP,SGWRUE          SAVE END OF RU                   R41 21390200
         L     MDCT,PCER1          POINT TO DEVICE DCT              R41 21390300
         TM    MDCTFMT,DCTPPRES    IF COMPRESSED                    R41 21390400
         BO    MVGSCB               GO DECODE SCB                   R41 21390500
         SPACE 1                                                    R41 21390600
*                             NON-COMPRESSED RU                     R41 21390700
         SPACE 1                                                    R41 21390800
*              THIS LINE DELETED BY APAR NUMBER                @OZ27441 21390900
*              THIS LINE DELETED BY APAR NUMBER                @OZ27441 21391000
*              THIS LINE DELETED BY APAR NUMBER                @OZ27441 21391100
MVGSCN1  LR    RSC,R1              GET RU LENGTH INTO RSC      @OZ27441 21391200
         L     RDP,SGWRUA          SAVE NEW                    @OZ27441 21391300
         LA    R1,0(RDP,RSC)        END OF RU                       R41 21391400
         ST    R1,SGWRUE             POINTER                        R41 21391500
         L     R1,PCER1            POINT TO DEVICE DCT              R41 21391600
         TM    MDCTFMT-DCTDSECT(R1),DCTPALTC IF NOT ASCII           R41 21391700
         BNO   MVGSNS1                        GO HANDLE AS NON-DUPL R41 21391800
         SPACE 1                                                    R41 21391900
         CH    RSC,=H'256'         CHECK RU LENGTH             @OZ27441 21391910
         BH    MVGSCN2             BR IF EXTENDED LENGTH RU    @OZ27441 21391920
         BCTR  RSC,0               TRANSLATE                        R41 21392000
         EX    RSC,MVGSTR           STRING                          R41 21392100
         LA    RSC,1(,RSC)           TO EBCDIC                      R41 21392200
         B     MVGSNS1             GO HANDLE AS NON-DUPL STRING     R41 21392300
         SPACE 1                                                    R41 21392400
MVGSTR   TR    0(0,RDP),MVGASCII   EXECUTED TRANSLATE TO EBCDIC     R41 21392500
         SPACE 1                                                    R41 21392600
*        TRANSLATE NON-COMPRESSED EXTENDED LENGTH TO EBCDIC    @OZ27441 21392610
         SPACE 1                                               @OZ27441 21392620
MVGSCN2  TR    0(256,RDP),MVGASCII TRANSLATE FIRST 256 BYTES   @OZ27441 21392630
         LA    RDP,256(,RDP)       UPDATE DATA POINTER         @OZ27441 21392640
         SH    RSC,=H'257'         DECR RU LENGTH (1 FOR EX)   @OZ27441 21392650
         EX    RSC,MVGSTR          TRANSLATE REST OF STRING    @OZ27441 21392660
         LA    RSC,257(,RSC)       RESTORE EXTENDED RU LENGTH  @OZ27441 21392670
         B     MVGSNS1             HANDLE AS NON-DUPL STRING   @OZ27441 21392680
         SPACE 1                                               @OZ27441 21392690
*                             END OF RU FOUND                       R41 21392700
         SPACE 1                                                    R41 21392800
*              THIS LINE DELETED BY APAR NUMBER                @OZ27441 21392900
*              THIS LINE DELETED BY APAR NUMBER                @OZ27441 21393000
*              THIS LINE DELETED BY APAR NUMBER                @OZ27441 21393100
*              THIS LINE DELETED BY APAR NUMBER                @OZ27441 21393200
*              THIS LINE DELETED BY APAR NUMBER                @OZ27441 21393300
MVGSEND  BAL   LINK,MVGEMTY        GO GET NEXT RU              @OZ27441 21393400
         B     MVGSCN              GO PROCESS NEXT RU               R41 21393500
         SPACE 1                                                    R41 21393600
*              THIS LINE DELETED BY APAR NUMBER                @OZ27441 21393700
*              THIS LINE DELETED BY APAR NUMBER                @OZ27441 21393800
*              THIS LINE DELETED BY APAR NUMBER                @OZ27441 21393900
         SPACE 1                                                    R41 21394000
*                             DECODE SCB                            R41 21394100
         SPACE 1                                                    R41 21394200
MVGSCB   L     RDP,SGWRUA          POINT TO NEXT SCB                R41 21394300
         C     RDP,SGWRUE          IF ADDR SAME AS END OF RU   @OZ27441 21394400
         BE    MVGSEND              GO TO HANDLE RU END        @OZ27441 21394500
         SPACE 1                                                    R41 21394600
         NI    SGWFLAGS,X'FF'-SGWDUP INIT AS NON-DUPLICATE          R41 21394700
         SLR   R2,R2               CLEAR REGISTER              @OZ27441 21394750
         IC    R2,0(,RDP)          GET SCB FROM RU                  R41 21394800
         LR    RSC,R2              INITIALIZE                       R41 21394900
         SLL   RSC,26               SCB                             R41 21395000
         SRL   RSC,26                COUNT                          R41 21395100
         SRL   R2,6                DECODE TYPE                      R41 21395200
         SLL   R2,2                 OF SCB                          R41 21395300
         LA    RDP,1(,RDP)         POINT PAST SCB                   R41 21395400
         ST    RDP,SGWRUA           AND SAVE POINTER                R41 21395500
         B     MVGSBR(R2)          CALL ROUTINE DEPENDING ON SCB    R41 21395600
         SPACE 1                                                    R41 21395700
MVGSBR   B     MVGSNS              NON-DUPLICATE SCB                R41 21395800
         B     MVGSCS              COMPACTION SCB                   R41 21395900
         B     MVGSPS              DUPLICATE PRIMES SCB             R41 21396000
         B     MVGSDS              DUPLICATE NON-PRIMES SCB         R41 21396100
         SPACE 1                                                    R41 21396200
*                             NON-DUPLICATE SCB                     R41 21396300
         SPACE 1                                                    R41 21396400
MVGSNS   L     R1,SGWRUE           CALCULATE LENGTH                 R41 21396500
         S     R1,SGWRUA            OF RU REMAINING                 R41 21396600
         CR    RSC,R1              IF STRING IS WITHIN RU           R41 21396700
         BNH   MVGSNS1              GO CHECK FOR END OF STRING      R41 21396800
         LR    RSC,R1              IGNORE STRING EXTENDING PAST RU  R41 21396900
         SPACE 1                                                    R41 21397000
MVGSNS1  LTR   R1,RSC              IF NULL STRING OR END OF STRING  R41 21397100
         BZ    MVGSCB               GO DECODE NEXT SCB              R41 21397200
         SPACE 1                                                    R41 21397300
         L     RDP,SGWRUA          POINT TO CURRENT STRING ADDRESS  R41 21397400
         TM    SGWFLAGS,SGWTRN     IF WITHIN A TRANSPARENT STRING   R41 21397500
         BO    MVGSNTR              GO HANDLE TRANSPARENT STRING    R41 21397600
         SPACE 1                                                    R41 21397700
MVGSNS2  SLR   R2,R2               CLEAR REGISTER              @OZ27441 21397705
         CH    R1,=H'256'          TEST FOR EXTENDED LENGTH RU @OZ27441 21397710
         BNH   MVGSNS3             BRANCH IF NOT EXTENDED RU   @OZ27441 21397720
         TRT   0(256,RDP),MSCSTRAN SCAN FOR SCS                @OZ27441 21397730
         BNZ   MVGSNBR             BRANCH IF SCS FOUND         @OZ27441 21397740
         LA    RDP,256(,RDP)       ELSE UPDATE POINTER AND LEN @OZ27441 21397750
         SH    R1,=H'256'            TO CONTINUE WITH RESIDUAL @OZ27441 21397760
         SPACE 1                                               @OZ27441 21397770
MVGSNS3  BCTR  R1,0                START SCS                   @OZ27441 21397800
         EX    R1,MVGSNTRT          SCAN OF STRING                  R41 21397900
         BZ    MVGSN10             NO SCS FOUND, GO HANDLE DATA     R41 21398000
         SPACE 1                                                    R41 21398100
MVGSNBR  B     MVGSNBR(R2)         CALL RTN DEPENDING ON SCS FOUND  R41 21398200
         B     MVGSN20             NON-SCANNED SCS                  R41 21398300
         B     MVGSN30             NL IRS FF                        R41 21398400
         B     MVGSN40             TRN                              R41 21398500
         B     MVGSN20             ESC (HANDLE AS NON-SCANNED SCS)  R41 21398600
         SPACE 1                                                    R41 21398700
MVGSNTRT TRT   0(0,RDP),MSCSTRAN   EXECUTED FOR SCS SCAN            R41 21398800
         SPACE 1                                                    R41 21398900
*                             STRING CONSISTS OF ALL DATA           R41 21399000
         SPACE 1                                                    R41 21399100
MVGSN10  LR    RDC,RSC             PASS STRING LENGTH               R41 21399200
         L     RDP,SGWRUA          PASS START OF STRING             R41 21399300
         LA    R1,0(RDP,RDC)       CALCULATE AND                    R41 21399400
         ST    R1,SGWRUA            SAVE NEXT SCB ADDRESS           R41 21399500
         BAL   LINK,MVGMVE         CALL MOVE SUBROUTINE             R41 21399600
         B     MVGSCB              GO DECODE NEXT SCB               R41 21399700
         SPACE 1                                                    R41 21399800
*                             TRANSPARENT, NON-DUPLICATE STRING     R41 21399900
         SPACE 1                                                    R41 21400000
MVGSNTR  LTR   RTC,RTC             IF TRN COUNT HAS BEEN LOADED     R41 21400100
         BNZ   MVGSNT1              GO CHECK LENGTH OF TRN STRING   R41 21400200
         IC    RTC,0(,RDP)         PICK UP COUNT                    R41 21400300
         LA    RDP,1(,RDP)         POINT PAST COUNT IN RU           R41 21400400
         ST    RDP,SGWRUA          SAVE POINTER                     R41 21400500
         BCTR  RSC,0               DECREMENT STRING COUNTER         R41 21400600
         LTR   RTC,RTC             CHECK FOR ZERO COUNT        @OZ24292 21400620
         BNZ   MVGSNS1             NOT ZERO, CHECK FOR END     @OZ24292 21400640
         NI    SGWFLAGS,X'FF'-SGWTRN SET OUT OF TRANS STRING   @OZ24292 21400660
         B     MVGSNS1             GO CHECK FOR END OF STRING       R41 21400700
         SPACE 1                                                    R41 21400800
MVGSNT1  CLR   RTC,RSC             IF TRN IS NOT LONGER THAN SCB    R41 21400900
         BNH   MVGSNT2              GO POINT TO END OF TRN STRING   R41 21401000
         SR    RTC,RSC             CALCULATE TRN STRING REMAINING   R41 21401100
         B     MVGSN10             GO TREAT SCB STRING AS DATA      R41 21401200
         SPACE 1                                                    R41 21401300
MVGSNT2  AR    RDP,RTC             POINT TO END                     R41 21401400
         LR    R1,RDP               OF TRN STRING                   R41 21401500
         BCTR  R1,0                BACK UP ONE TO SIMULATE TRT      R41 21401600
         NI    SGWFLAGS,X'FF'-SGWTRN INDICATE                       R41 21401700
         XR    RTC,RTC                NOT IN TRN STRING             R41 21401800
         SPACE 1                                                    R41 21401900
*                             NON-SCANNED SCS                       R41 21402000
         SPACE 1                                                    R41 21402100
MVGSN20  LA    RDP,1(,R1)          POINT PAST CHAR THAT STOPPED SCANR41 21402200
         L     R1,SGWRUA           POINT TO                         R41 21402300
         AR    R1,RSC               END OF STRING                   R41 21402400
         SR    R1,RDP              IF LAST CHAR OF STRING           R41 21402500
         BZ    MVGSN10              GO GIVE STRING TO MOVER AS DATA R41 21402600
         B     MVGSNS2             GO RESTART SCS SCAN              R41 21402700
         SPACE 1                                                    R41 21402800
*                             TRN FOUND                             R41 21402900
         SPACE 1                                                    R41 21403000
MVGSN40  OI    SGWFLAGS,SGWTRN     INDICATE IN TRANSPARENT STRING   R41 21403100
         SPACE 1                                                    R41 21403200
*                             TRN/EOR FOUND                         R41 21403300
         SPACE 1                                                    R41 21403400
MVGSN30  L     RDP,SGWRUA          PASS START OF STRING             R41 21403500
         LR    RDC,R1              CALCULATE LENGTH OF              R41 21403600
         SR    RDC,RDP              STRING PRECEDING EOR/TRN        R41 21403700
         LA    R1,1(,R1)           POINT PAST EOR/TRN               R41 21403800
         ST    R1,SGWRUA            AND SAVE POINTER                R41 21403900
         SR    RSC,RDC             CALCULATE                        R41 21404000
         BCTR  RSC,0                LENGTH OF SCB STRING REMAINING  R41 21404100
         BAL   LINK,MVGMVE         CALL MOVE SUBROUTINE WITH DATA   R41 21404200
         SPACE 1                                                    R41 21404300
MVGSN35  TM    SGWFLAGS,SGWTRN     IF TRN WAS FOUND                 R41 21404400
         BO    MVGSNS1             GO HANDLE REST OF SCB STRING     R41 21404500
         BAL   LINK,MVGMEOR        CALL MOVE SUBROUTINE WITH EOR    R41 21404600
         B     MVGSNS1             GO HANDLE REST OF SCB STRING     R41 21404700
         SPACE 1                                                    R41 21404800
*                             COMPACTION SCB                        R41 21404900
         SPACE 1                                                    R41 21405000
MVGSCS   B     MVGSNS              TREAT AS NON-DUPL SCB, FOR NOW   R41 21405100
         SPACE 1                                                    R41 21405200
*                             DUPLICATE PRIMES SCB                  R41 21405300
         SPACE 1                                                    R41 21405400
MVGSPS   BCTR  RDP,0               BACK UP POINTER AND STORE A BLANKR41 21405500
         MVI   0(RDP),C' '          TO PRETEND DUPLICATE NON-PRIMES R41 21405600
         SPACE 1                                                    R41 21405700
*                             DUPLICATE NON-PRIMES SCB              R41 21405800
         SPACE 1                                                    R41 21405900
MVGSDS   LA    R1,1(,RDP)          POINT TO NEXT SCB                R41 21406000
         ST    R1,SGWRUA            AND SAVE POINTER                R41 21406100
         OI    SGWFLAGS,SGWDUP     INDICATE DUPLICATE FIELD         R41 21406200
         SPACE 1                                                    R41 21406300
MVGSDS1  LTR   RSC,RSC             IF NULL OR END OF SCB STRING     R41 21406400
         BZ    MVGSCB               GO DECODE NEXT SCB              R41 21406500
         TM    SGWFLAGS,SGWTRN     IF IN TRANSPARENT STRING         R41 21406600
         BO    MVGSDTR              GO HANDLE AS TRANSPARENT STRING R41 21406700
         SLR   R2,R2               CLEAR REGISTER              @OZ27441 21406750
         IC    R2,0(,RDP)          PICK UP DUPLICATE CHARACTER      R41 21406800
         IC    R2,MSCSTRAN(R2)     DO SCS SCAN ON ONE CHARACTER     R41 21406900
         B     MVGSDBR(R2)         CALL RTN DEPENDING ON SCS CHAR   R41 21407000
         SPACE 1                                                    R41 21407100
MVGSDBR  B     MVGSD10             DATA                             R41 21407200
         B     MVGSD10             NON-SCANNED SCS (HANDLE AS DATA) R41 21407300
         B     MVGSD20             NL IRS FF (EOR)                  R41 21407400
         B     MVGSD30             TRN                              R41 21407500
         B     MVGSD10             ESC (HANDLE AS NON-SCANNED SCS)  R41 21407600
         SPACE 1                                                    R41 21407700
*                             IN TRANSPARENT STRING                 R41 21407800
         SPACE 1                                                    R41 21407900
MVGSDTR  LTR   RTC,RTC             IF TRN COUNT ALREADY LOADED      R41 21408000
         BNZ   MVGSDT1              GO HANDLE TRANSPARENT STRING    R41 21408100
         IC    RTC,0(,RDP)         PICK UP TRN COUNT                R41 21408200
         BCTR  RSC,0               DECREMENT LENGTH OF DUPL STRING  R41 21408300
         B     MVGSDS1             GO CHECK FOR END OF SCB STRING   R41 21408400
         SPACE 1                                                    R41 21408500
MVGSDT1  CLR   RTC,RSC             IF TRN STRING NOT LONGER THAN SCBR41 21408600
         BNH   MVGSDT2              GO TREAT JUST TRN STRING AS DATAR41 21408700
         SR    RTC,RSC             CALC NEW LENGTH OF TRN STRING    R41 21408800
         B     MVGSD10             GO TREAT SCB STRING AS DATA      R41 21408900
         SPACE 1                                                    R41 21409000
MVGSDT2  LR    RDC,RTC             PASS FIELD LENGTH                R41 21409100
         SR    RSC,RTC             CALCULATE SCB LENGTH REMAINING   R41 21409200
         NI    SGWFLAGS,X'FF'-SGWTRN INDICATE                       R41 21409300
         XR    RTC,RTC                OUT OF TRANSPARENT STRING     R41 21409400
         BAL   LINK,MVGMVE         CALL MOVE SUBROUTINE WITH DATA   R41 21409500
         B     MVGSDS1             GO CHECK FOR END OF SCB STRING   R41 21409600
         SPACE 1                                                    R41 21409700
*                             DUPLICATE DATA                        R41 21409800
         SPACE 1                                                    R41 21409900
MVGSD10  LR    RDC,RSC             PASS FIELD LENGTH                R41 21410000
         BAL   LINK,MVGMVE         CALL MOVE SUBROUTINE WITH DATA   R41 21410100
         B     MVGSCB              GO DECODE NEXT SCB               R41 21410200
         SPACE 1                                                    R41 21410300
*                             DUPLICATE EOR                         R41 21410400
         SPACE 1                                                    R41 21410500
MVGSD20  BAL   LINK,MVGMEOR        CALL MOVE SUBROUTINE WITH EOR    R41 21410600
         BCT   RSC,MVGSD20         CALL AGAIN UNTIL SCB STRING ENDEDR41 21410700
         B     MVGSCB              GO DECODE NEXT SCB               R41 21410800
         SPACE 1                                                    R41 21410900
*                             DUPLICATE TRN                         R41 21411000
         SPACE 1                                                    R41 21411100
MVGSD30  OI    SGWFLAGS,SGWTRN     INDICATE IN TRANSPARENT STRING   R41 21411200
         BCTR  RSC,0               DECREMENT SCB STRING LENGTH      R41 21411300
         B     MVGSDS1             GO CHECK FOR END OF SCB STRING   R41 21411400
         EJECT                                                      R41 21411500
*********************************************************************** 21411600
*                                                                     * 21411700
* MVGMVE  --  MOVE SUBROUTINE                                         * 21411800
*                                                                     * 21411900
* THE MOVE SUBROUTINE TAKES A SERIES OF VARIABLE LENGTH DATA FIELDS   * 21412000
* FROM THE RU SCAN ROUTINE AND USES THEM TO FILL THE PROCESSOR        * 21412100
* BUFFER.  WHEN THE PROCESSOR BUFFER IS FULL THE MOVE SUBROUTINE      * 21412200
* CALLS THE GET TERMINATION ROUTINE (MVGEXIT).  WHEN THE NEXT         * 21412300
* $EXTPGET IS DONE THE MOVE SUBROUTINE IS CALLED DIRECTLY BY THE      * 21412400
* GET INITIALIZATION ROUTINE (RTAMVGET).  WHEN THE MOVE ROUTINE       * 21412500
* NEEDS MORE DATA, IT RETURNS TO THE RU SCAN ROUTINE (MVGSCN).        * 21412600
*                                                                     * 21412700
*********************************************************************** 21412800
         SPACE 1                                                    R41 21412900
*                             NOT EOR, MOVE DATA                    R41 21413000
         SPACE 1                                                    R41 21413100
MVGMVE   LTR   RDC,RDC             IF FIELD IS ENDED                R41 21413200
         BZR   LINK                 RETURN                          R41 21413300
         SPACE 1                                                    R41 21413400
         NI    SGWFLAGS,X'FF'-SGWXEOR EXTRA EOR DID NOT OCCUR       R41 21413500
         LR    R1,RDC              ASSUME MOVE OF FIELD LENGTH      R41 21413600
         CR    RDC,RPC             IF FIELD NOT LARGER THAN PROC BFRR41 21413700
         BNH   MVGM01               GO MOVE FIELD                   R41 21413800
         LR    R1,RPC              MOVE TO END OF PROC BFR          R41 21413900
         SPACE 1                                                    R41 21414000
MVGM01   TM    SGWFLAGS,SGWDUP     IF DUPLICATE FIELD               R41 21414100
         BO    MVGM02               GO MOVE DUPLICATE FIELD         R41 21414200
         SPACE 1                                                    R41 21414300
         CH    R1,=H'256'          TEST FOR EXTENDED LENGTH RU @OZ27441 21414310
         BNH   MVGM01A             BRANCH IF NOT EXTENDED RU   @OZ27441 21414320
         MVC   0(256,RPP),0(RDP)   MOVE FIRST 256 BYTES        @0Z27441 21414330
         SH    R1,=H'257'          DECR RU LENGTH (1 FOR EX)   @OZ27441 21414340
         EX    R1,MVGMVCXL         MOVE RESIDUAL DATA          @OZ27441 21414350
         LA    R1,257(,R1)         RESTORE EXTENDED RU LENGTH  @OZ27441 21414360
         B     MVGMBYPS            GO TO UPDATE FIELD POINTER  @OZ27441 21414370
         SPACE 1                                               @OZ27441 21414380
MVGM01A  BCTR  R1,0                DECREMENT LENGTH FOR EXECUTE@OZ27441 21414400
         EX    R1,MVGMVC1          MOVE NON-DUPLICATE FIELD         R41 21414500
         LA    R1,1(,R1)           INCREMENT LENGTH AFTER EXECUTE   R41 21414600
MVGMBYPS LA    RDP,0(RDP,R1)       UPDATE FIELD POINTER        @OZ27441 21414700
         B     MVGM03              GO UPDATE FIELD COUNT            R41 21414800
         SPACE 3                                               @OZ27441 21414900
MVGMVCXL MVC   256(*-*,RPP),256(RDP)  **** EXECUTED ONLY ****  @OZ27441 21414910
         EJECT                                                 @OZ27441 21414920
MVGM02   MVC   0(1,RPP),0(RDP)     MOVE IN FIRST BYTE               R41 21415000
         BCT   R1,MVGM02A          GO DECREMENT AGAIN, IF NOT JUST 1R41 21415100
         B     MVGM02B             GO INCREMENT FOR JUST 1 BYTE     R41 21415200
MVGM02A  BCTR  R1,0                DECREMENT LENGTH FOR EXECUTE     R41 21415300
         EX    R1,MVGMVC2          DUPLICATE FIELD                  R41 21415400
         LA    R1,1(,R1)           INCREMENT LENGTH AFTER EXECUTE   R41 21415500
MVGM02B  LA    R1,1(,R1)           INCREMENT FOR FIRST BYTE         R41 21415600
         SPACE 1                                                    R41 21415700
MVGM03   SR    RDC,R1              UPDATE FIELD COUNT               R41 21415800
         AR    RPP,R1              UPDATE PROC BFR POINTER          R41 21415900
         SR    RPC,R1              UPDATE PROC BFR COUNT            R41 21416000
         BNZR  LINK                RETURN IF PROC BFR NOT FULL      R41 21416100
         SPACE 1                                                    R41 21416200
         OI    SGWFLAGS,SGWXEOR    INDICATE EXTRA EOR MAY OCCUR     R41 21416300
         B     MVGEXIT             GO END GET PROCESSING            R41 21416400
         SPACE 1                                                    R41 21416500
*                             EOR, PROPAGATE BLANKS                 R41 21416600
         SPACE 1                                                    R41 21416700
MVGMEOR  TM    SGWFLAGS,SGWXEOR    IF NOT EXTRA EOR                 R41 21416800
         BNO   MVGPROP              GO PROPAGATE BLANKS             R41 21416900
         NI    SGWFLAGS,X'FF'-SGWXEOR EXTRA EOR FOUND               R41 21417000
         BR    LINK                RETURN                           R41 21417100
         SPACE 1                                                    R41 21417200
MVGPROP  MVI   0(RPP),C' '         PROPAGATE BLANKS                 R41 21417300
         BCT   RPC,MVGPROP1        GO DECREMENT AGAIN IF NOT JUST 1 R41 21417400
         B     MVGPROP2            ONLY ONE BYTE, SKIP MOVE         R41 21417500
MVGPROP1 BCTR  RPC,0               DECREMENT FOR EXECUTE            R41 21417600
         EX    RPC,MVGMVC2           PROCESSOR BUFFER               R41 21417700
         LA    RPC,1(,RPC)         INCREMENT LENGTH AFTER EXECUTE   R41 21417800
         SPACE 1                                                    R41 21417900
MVGPROP2 LA    RPP,1(RPP,RPC)      UPDATE PROC BFR POINTER          R41 21418000
         XR    RDC,RDC             NO FIELD DATA                    R41 21418100
         XR    RPC,RPC             PROCESSOR BUFFER FULL            R41 21418200
         B     MVGEXIT             GO END GET PROCESSING            R41 21418300
         SPACE 1                                                    R41 21418400
MVGMVC1  MVC   0(0,RPP),0(RDP)     EXECUTED TO MOVE NON-DUPL DATA   R41 21418500
MVGMVC2  MVC   1(0,RPP),0(RPP)     EXECUTED TO MOVE DUPL DATA       R41 21418600
         EJECT                                                      R41 21418700
*********************************************************************** 21418800
*                                                                     * 21418900
* MVGEMTY  --  EMPTY RU SUBROUTINE                                    * 21419000
*                                                                     * 21419100
* CALLED BY THE RU SCAN ROUTINE (MVGSCN) WHEN ANOTHER RU IS NEEDED.   * 21419200
* THE EMPTY RU SUBROUTINE GETS THE NEXT RU AND RETURNS TO THE RU      * 21419300
* SCAN ROUTINE (MVGSCN).  IF THE LAST RU IN THE CHAIN IS REACHED,     * 21419400
* THE EMPTY RU SUBROUTINE CALLS THE SNA GET TERMINATION ROUTINE       * 21419500
* (MVGEXIT).                                                          * 21419600
*                                                                     * 21419700
*********************************************************************** 21419800
         SPACE 1                                                    R41 21419900
*                             DETERMINE IF LAST RU IN CHAIN         R41 21420000
         SPACE 1                                                    R41 21420100
MVGEMTY  L     MICE,RPLICE         POINT TO ICE                     R41 21420200
         TM    ICERCVST,ICEINCHN   IF THE LAST RU IN CHAIN          R41 21420300
         BZ    MVGEXIT              GO FORCE EXIT                   R41 21420400
         SPACE 1                                                    R41 21420500
*                             NOT LAST RU IN CHAIN, GET NEXT RU     R41 21420600
         SPACE 1                                                    R41 21420700
         STM   R14,R12,SGWRSAVE    SAVE GET REGISTERS IN RPL        R41 21420800
         L     R1,SGWRUE           CALCULATE LENGTH                 R41 21420900
         S     R1,SGWRUA            OF RU REMAINING                 R41 21421000
         ST    R1,RPLRLEN          UPDATE RPL LENGTH REMAINING      R41 21421100
         MVC   RPLAREA(4),SGWRUA   SAVE CURRENT RPL ADDRESS         R41 21421200
         L     R1,PCER1            POINT TO DCT                     R41 21421300
        $RESTORE                   RESTORE RTAM REGISTERS           R41 21421400
         SPACE 1                                                    R41 21421500
         BAL   ML,MVREQBUF         REQUEST NEXT RPL AND RU          R41 21421600
         LTR   MBUF,MBUF           IF NO BUFFER RETURNED            R41 21421700
         BZ    MVGDUMMY             GO RETURN DUMMY FOR JOB DELETE  R41 21421800
         SPACE 1                                                    R41 21421900
         L     ML,RPLNEXT          POINT TO NEW RPL                 R41 21422000
         USING RPLDSECT,ML                                          R41 21422100
         MVC   SGWSTRT(SGWEND-SGWSTRT),SGWSTRT-RPLDSECT(MBUF)       R41X21422200
                                   MOVE GET STATUS TO NEXT RPL      R41 21422300
         DROP  ML                                                   R41 21422400
         SPACE 1                                                    R41 21422500
         BAL   ML,MVRELBUF         RELEASE OLD RPL AND RU           R41 21422600
         SPACE 1                                                    R41 21422700
         L     MBUF,DCTBUFAD       RESTORE NEW BUFFER ADDRESS       R41 21422800
         ST    MBUF,SGWMBUF        INITIALIZE SAVED BUFFER ADDRESS  R41 21422900
         LM    R14,R12,SGWRSAVE    RESTORE GET STATUS               R41 21423000
         BR    LINK                RETURN                           R41 21423100
         SPACE 2                                                    R41 21423200
*                                                                   R41 21423300
*                             RETURN DUMMY TO CALLER ON JOB DELETE  R41 21423400
*                                                                   R41 21423500
         SPACE 1                                                    R41 21423600
MVGDUMMY ICM   MBUF,15,DCTBUFAD    PURGE ANY                        R41 21423700
         BZ    MVGDU1               BUFFER                          R41 21423800
         BAL   ML,MVFREEIN           THE RDCT                       R41 21423900
         ST    MBUF,DCTBUFAD          MAY OWN                       R41 21424000
MVGDU1   L     R1,PCER0            RETRIEVE USER BUFFER ADDRESS     R41 21424100
         MVI   0(R1),0             GUARANTEE NOT A VALID // JOB CARDR41 21424200
         B     MVTAMXIT            RETURN TO PROCESSOR              R41 21424300
         EJECT                                                      R41 21424400
*********************************************************************** 21424500
*                                                                     * 21424600
* MVGEXIT  --  SNA GET TERMINATION ROUTINE                            * 21424700
*                                                                     * 21424800
* CALLED BY THE DATA MOVE SUBROUTINE (MVGMVE) OR, IF END OF CHAIN,    * 21424900
* BY THE EMPTY RU SUBROUTINE (MVGEMTY), SNA GET TERMINATION RETURNS   * 21425000
* TO THE PROCESSOR AND PASSES BACK EITHER A LOGICAL RECORD OR AN      * 21425100
* END OF FILE INDICATION.                                             * 21425200
*                                                                     * 21425300
*********************************************************************** 21425400
         SPACE 1                                                    R41 21425500
*                             DETERMINE IF EOC CAUSED EXIT          R41 21425600
         SPACE 1                                                    R41 21425700
MVGEXIT  LTR   RPC,RPC             IF PROCESSOR BUFFER NOT FULL     R41 21425800
         BNZ   MVGEOC               THEN EOC CAUSED EXIT            R41 21425900
         SPACE 1                                                    R41 21426000
*                             EOC DID NOT CAUSE EXIT                R41 21426100
         SPACE 1                                                    R41 21426200
MVGNEOC  STM   R14,R12,SGWRSAVE    SAVE GET STATUS                  R41 21426300
         L     R1,SGWRUE           CALCULATE LENGTH                 R41 21426400
         S     R1,SGWRUA            OF RU REMAINING                 R41 21426500
         ST    R1,RPLRLEN          UPDATE RPL LENGTH REMAINING      R41 21426600
         MVC   RPLAREA(4),SGWRUA   SAVE CURRENT RPL ADDRESS         R41 21426700
         L     R1,PCER0            RETRIEVE USER BUFFER ADDRESS     R41 21426800
         SPACE 1                                                    R41 21426900
         CLC   =C'/*SIGNOFF',0(R1) IF UPPERCASE SIGNOFF             R41 21427000
         BNE   MVTAMXIT                      GO RETURN NORMALLY     R41 21427100
         SPACE 1                                                    R41 21427200
         L     R1,PCER1            RELOAD POINTER TO REMOTE DCT     R41 21427300
        $RESTORE                   RESTORE RTAM REGISTER ENVIRONMENTR41 21427400
         L     R1,ICELDCT          GET ADDRESS OF LINE DCT          R41 21427500
         OI    MDCTSTAT-DCTDSECT(R1),DCTSOFF MARK LINE FOR SIGNOFF  R41 21427600
         B     RTAMVGET            RE-ENTER TO GET ANOTHER CARD     R41 21427700
         SPACE 1                                                    R41 21427800
*                             EOC CAUSED EXIT                       R41 21427900
         SPACE 1                                                    R41 21428000
MVGEOC   C     RPP,PCER0           IF PROC BFR NOT COMPLETELY EMPTY R41 21428100
         BNE   MVGPROP              GO PROPAGATE BLANKS             R41 21428200
         L     R1,PCER1            POINT TO DCT                     R41 21428300
        $RESTORE                   RESTORE RTAM REGISTER ENVIRONMENTR41 21428400
         BAL   ML,MVRELBUF         RELEASE THE RPL AND RU           R41 21428500
         SPACE 1                                                    R41 21428600
         TM    MDCTSTAT,DCTEOF     IF EOF                           R41 21428700
         BO    MVTAMXEX            YES, EXIT WITH EOF               R41 21428800
         SPACE 1                                                    R41 21428900
         L     R0,PCER0            RESTORE CALLERS BFR ADDR         R41 21429000
         B     RTAMVGET             AND RETRY GET ON NEXT CHAIN     R41 21429100
         TITLE 'HASP SNA REMOTE TERMINAL GET TRANSLATE TABLE'        R4 21570500
         SPACE 5                                                     R4 21571000
MVGASCII DS    0D             ASCII TO EBCDIC TRANSLATE TABLE (SNA)  R4 21571500
         SPACE 1                                                     R4 21572000
*                X0X1X2X3X4X5X6X7X8X9XAXBXCXDXEXF                    R4 21572500
         SPACE 1                                                     R4 21573000
         DC    X'00010203372D2E2F1605250B0C0D0E0F'  0X               R4 21573500
         DC    X'10142404153D322618193F271C1D1E1F'  1X               R4 21574000
         DC    X'404F7F7B5B6C507D4D5D5C4E6B604B61'  2X               R4 21574500
         DC    X'F0F1F2F3F4F5F6F7F8F97A5E4C7E6E6F'  3X               R4 21575000
         DC    X'7CC1C2C3C4C5C6C7C8C9D1D2D3D4D5D6'  4X               R4 21575500
         DC    X'D7D8D9E2E3E4E5E6E7E8E94AE05A5F6D'  5X               R4 21576000
         DC    X'79818283848586878889919293949596'  6X               R4 21576500
         DC    X'979899A2A3A4A5A6A7A8A9C06AD0A107'  7X               R4 21577000
         TITLE 'HASP SNA REMOTE TERMINAL PUT ROUTINE'                R4 21577500
         SPACE 3                                                     R4 21578000
*                                                                    R4 21578500
*                             SNA R.U. COMPOSER REGISTER DEFINITIONS R4 21579000
*                                                                    R4 21579500
         SPACE 3                                                     R4 21580000
RBY1     EQU   R0                  CONSTANT OF 1, WORK REGISTER      R4 21580500
REND     EQU   R1                  R.U. END ADDR, OR # UNUSED BYTES  R4 21581000
RSINK    EQU   R2   *WA*           ADDRESS OF NEXT POSITION IN R.U.  R4 21581500
RSCBL    EQU   R3   *MDCT*         NO. UNUSED BYTES IN CURRENT SCB  R41 21582000
RCPZ     EQU   R3   *MDCT*         COMPACTION WORK REGISTER         R41 21582400
RCPT     EQU   R5   *MICE*         ADDRESS OF COMPACTION TABLE      R41 21582500
RFEED    EQU   R6   *ML*           FEEDER ROUTINES RETURN ADDRESS    R4 21583000
RPLAN    EQU   R7   *MBASE1*       PLANNER ROUTINES CURRENT STATE   R41 21583500
RBASE    EQU   R8   *MBASE2*       COMPRESS/COMPACT BASE REGISTER   R41 21584000
RCPA     EQU   R10  *JCT*          COMPACTION WORK REGISTER         R41 21584500
RNUM     EQU   R11  *BASE1*        CHARACTER DUPLICATION FACTOR     R41 21585000
RCHAR    EQU   R12  *BASE2*        ADDRESS OF CHARACTER EMITTED      R4 21585500
RLCHAR   EQU   R13  *PCE*          LENGTH FOR OFFSET COMPARE LONG    R4 21586000
RGO      EQU   R13  *PCE*          WORK REG FOR WHERE-TO-GO TABLES  R41 21586200
RSRCE    EQU   R14  *LINK*         ADDRESS OF NEXT SOURCE STRING     R4 21586500
RLSRCE   EQU   R15                 LENGTH OF NEXT SOURCE STRING      R4 21587000
         SPACE 5                                                     R4 21587500
*                                                                    R4 21588000
*                             ADD/SUBTRACT LOGICAL - CONDITION CODES R4 21588500
*                                                                    R4 21589000
         SPACE 1                                                     R4 21589500
NOT      EQU   15                  ALLOW INVERSE CONDS. 'NOT-XXXX'   R4 21590000
         SPACE 1                                                     R4 21590500
*                                  LOGICAL OP.    SIGNS     COND.    R4 21591000
*                                  ----------     -----     ----     R4 21591500
         SPACE 1                                                     R4 21592000
ALSM     EQU   1                        ADD       SAME      MINUS    R4 21592500
ALDP     EQU   1                        ADD       DIFFER    PLUS     R4 21593000
SLSP     EQU   1                        SUBTR     SAME      PLUS     R4 21593500
SLDM     EQU   1                        SUBTR     DIFFER    MINUS    R4 21594000
         SPACE 1                                                     R4 21594500
ALDZ     EQU   2                        ADD       DIFFER    ZERO     R4 21595000
SLSZ     EQU   2                        SUBTR     SAME      ZERO     R4 21595500
         SPACE 1                                                     R4 21596000
ALSP     EQU   4                        ADD       SAME      PLUS     R4 21596500
ALDM     EQU   4                        ADD       DIFFER    MINUS    R4 21597000
SLSM     EQU   4                        SUBTR     SAME      MINUS    R4 21597500
SLDP     EQU   4                        SUBTR     DIFFER    PLUS     R4 21598000
         SPACE 1                                                     R4 21598500
ALSZ     EQU   8                        ADD       SAME      ZERO     R4 21599000
         SPACE 1                                                     R4 21599500
*                                  ASSUMING OVERFLOW DOES NOT OCCUR  R4 21600000
         EJECT                                                       R4 21600500
*                                                                    R4 21601000
*                             VTAM PUT PROCESSING                    R4 21601500
*                                                                    R4 21602000
         SPACE 1                                                     R4 21602500
         USING RTAMVPUT,MBASE1     ESTABLISH SNA PUT ADDRESSABILITY  R4 21603000
         SPACE 1                                                     R4 21603500
RTAMVPUT DS    0H                  ENTRY POINT FOR RTAM SNA PUT      R4 21604000
         TM    ICESNDST,ICECNCEL+ICEWTRSP TEST SESSION STATUS  @OZ26937 21609500
         BZ    MVPNWRSP            BR IF L.M. REQ NOT PENDING  @OZ26937 21610000
         BAL   ML,MVREQRSP         GO WAIT FOR RESPONSE        @OZ26937 21610500
MVPNWRSP TM    MDCTSTAT,DCTPSUSP   TEST DATA STREAM STATUS     @OZ26937 21611000
         BZ    MVPNSUSP            BR IF NOT SUSP'D FOR CMDS   @OZ26937 21611500
         BAL   ML,MVREQUME         GO WAIT FOR RESUME          @OZ26937 21612000
MVPNSUSP TM    ICESNDST,ICEINSTR   TEST STREAM STATUS          @OZ26937 21612500
         BO    MVPCPTST            BYPASS RESUME HDR IF IN STREAM   R41 21613000
         BAL   ML,MVRPLGET         GET BUFFER FOR 'RESUME' FM HEADER R4 21613500
         OI    ICESNDST,ICEOCPND   SET END CHN TO FORCE IMM FMH SEND R4 21614000
         LA    R1,FMHRESUM         LOAD 'RESUME' DATA STREAM ACTION  R4 21614500
         BAL   ML,MVFMHBLD         BUILD & SEND 'RESUME' FM HEADER   R4 21615000
         SPACE 1                                                    R41 21615100
MVPCPTST CLI   ICEACPTN,X'FF'      HAS A COMPACTION TABLE BEEN SENT R41 21615200
         BNE   MVPCPACT            YES, CONTINUE PUT PROCESSING     R41 21615300
         BAL   ML,MVPUTCP1         NO, GO SEND COMPACTION TABLE     R41 21615400
MVPCPACT CLC   ICERCPTN,DCTACPTN   IF USING SAME COMPACTION TABLE   R41 21615500
         BE    MVPINSTR             GO EXAMINE CHANNEL COMMAND CODE R41 21615600
         BAL   ML,MVPUTCPA         ELSE CHANGE TABLE SPECIFICATION  R41 21615700
         SPACE 1                                                     R4 21615800
MVPINSTR L     R1,PCER0            RETRIEVE 2ND PARAMETER (CCW ADDR) R4 21616000
         CLI   0(R1),X'03'         TEST CHANNEL COMMAND TYPE         R4 21616500
         BE    MVPNOPCC            GO TEST FOR INTERRUPT IF NOP      R4 21617000
         CLI   0(R1),X'FE'         TEST CHANNEL COMMAND TYPE        R41 21617500
         BNL   MVPTRUNC            BR IF SEND PDIR OR BUFFER TRUNC  R41 21618000
         LTR   MBUF,MBUF           TEST BUFFER ADDRESS               R4 21618500
         BNZ   MVPUTBUF            BRANCH IF NOT ZERO                R4 21619500
         SPACE 1                                                     R4 21623000
MVPRPLGT BAL   ML,MVRPLGET         GET AN OUTPUT BUFFER              R4 21623500
         MVI   SCWFLAGS,SCWTRNSP+SCWNSPAN  INITIALIZE COMPOSER FLAGS R4 21624000
         NI    MDCTFMT,255-DCTPALTC  RESET STREAM ALTERN CODE FLAG   R4 21624500
         TM    BINCMNP-ISTDBIND+ICEBIND,BINALT  TEST COMMON PROTOCOL R4 21625000
         BZ    SKIP270             BRANCH IF ALT CODE NOT TO BE USED R4 21625500
         OI    MDCTFMT,DCTPALTC    TURN ON STREAM ALTERNATE CODE BIT R4 21626000
         MVI   SCWFLAGS,SCWNSPAN   PRECLUDE TRANSPARENCY CHECK       R4 21626500
SKIP270  CLI   DCTDEVTP,DCTRPU     TEST DEVICE TYPE                  R4 21627000
         BE    SKIP280             BRANCH IF REMOTE PUNCH            R4 21627500
         MVI   SCWFLAGS,SCWTRNSP   TRANSP CHECK AND SPANNING   @OZ20661 21628000
SKIP280  MVC   SCWCCWA,MSCSCC      INITIALIZE CARRIAGE CONTRL STRING R4 21628500
         BAL   R14,MVPRPLAN        SET COMPOSER INITIAL STATE       R41 21628800
         L     R1,PCER0            BRING BACK CCW ADDRESS            R4 21629000
         CLI   0(R1),X'03'         IF NOP CCW                       R41 21629100
         BE    MVPNMORE             GO CHECK FOR INTERRUPTS         R41 21629200
         EJECT                                                      R41 21629500
MVPUTBUF SLR   R0,R0               CLEAR REG FOR REMOTE DEVICE WIDTH R4 21630000
         IC    R0,MDCTRECL         LOAD REMOTE DEVICE WIDTH          R4 21630500
         CLI   DCTDEVTP,DCTRPU     TEST DEVICE TYPE                  R4 21631000
         BE    MVPUNCH             BRANCH IF REMOTE PUNCH            R4 21631500
         CLI   0(R1),X'61'         TEST CURRENT COMMAND TYPE         R4 21632000
         BE    MVPUTFCB            BRANCH IF LOAD FCB                R4 21632500
         TM    0(R1),X'02'         TEST CURRENT COMMAND TYPE         R4 21633000
         BZ    MVPNIMED            BRANCH IF NOT IMMEDIATE COMMAND   R4 21633500
         TM    0(R1),X'80'         TEST CURRENT COMMAND TYPE         R4 21634000
         BZ    MVPUTCCI            BRANCH IF NOT SKIP                R4 21634500
         OI    SCWLCCC,X'02'       FORCE PREVIOUS COMMAND IMMEDIATE  R4 21635000
         CLC   SCWLCCC,0(R1)       COMPARE PREVIOUS CMD. TO CURRENT  R4 21635500
         BE    MVPNMORE            EXIT IF REDUNDANT SKIP           R41 21636000
         B     MVPUTCCI            REJOIN COMMON PROCESSING          R4 21636500
         SPACE 3                                                    R41 21637000
MVPUNCH  MVI   0(R1),X'79'         FORCE INTER-RECORD SEPARATOR      R4 21637500
         SPACE 1                                                     R4 21638000
MVPNIMED L     R14,0(,R1)          PICK UP DATA ADDRESS FROM CCW     R4 21638500
         LH    R15,6(,R1)          PICK UP DATA LENGTH  FROM CCW     R4 21639000
         LA    R14,0(,R14)         DISCARD OP CODE                   R4 21639500
         CLR   R15,R0              COMPARE LENGTH WITH MAXIMUM       R4 21640000
         BNH   MVPUT0              BR IF LENGTH NOT OVER MAX   @OZ29180 21640500
         LR    R15,R0              REPLACE LENGTH WITH MAXIMUM       R4 21641000
         EJECT                                                 @OZ29180 21641050
MVPUT0   TM    MDCTFEAT,DCTPCCTL   TEST FOR CARRIAGE CNTRLS    @OZ29180 21641100
         BO    MVPUTCCI            BRANCH IF YES               @OZ29180 21641150
         LH    ML,ICERULEN         COMPUTE NUMBER OF AVAIL     @OZ29180 21641200
         SL    ML,RPLRLEN             BYTES IN THE BUFFER      @OZ29180 21641250
         CR    ML,R0               COMPARE DEVICE RECORD LEN   @OZ29180 21641300
         BNL   MVPUT1              BRANCH IF ENOUGH ROOM       @OZ29180 21641350
         BAL   ML,MVRPLSND         SEND BUFFER                 @OZ29180 21641400
         B     MVPRPLGT            GET ANOTHER BUFFER          @OZ29180 21641450
         SPACE 1                                               @OZ29180 21641500
MVPUT1   L     RSINK,RPLAREA       COMPUTE ADDRESS OF NEXT     @OZ29180 21641550
         AL    RSINK,RPLRLEN         AVAILABLE BYTE IN BUFFER  @OZ29180 21641600
         LR    ML,RLSRCE           MOVE                        @OZ29180 21641650
         BCTR  ML,0                  SOURCE STRING             @OZ29180 21641700
         EX    ML,MVPUTMVC              TO BUFFER              @OZ29180 21641750
         LR    ML,R0               GET DEVICE RECORD LENGTH    @OZ29180 21641800
         SLR   ML,RLSRCE           TRAILING BLANKS REQUIRED    @OZ29180 21641850
         BZ    MVPUT2              BRANCH IF NOT               @OZ29180 21641900
         AR    RSINK,RLSRCE        NEXT AVAIL BYTE IN BUFFER   @OZ29180 21641950
         MVI   0(RSINK),C' '       PAD WITH AT LEAST 1 BLANK   @OZ29180 21642000
         BCTR  ML,0                DECREMENT TRAILING BLNK CNT @OZ29180 21642050
         LTR   ML,ML               IS THE BUFFER FULL          @OZ29180 21642100
         BZ    MVPUT2              BRANCH IF YES               @OZ29180 21642150
         BCTR  ML,0                PAD REST OF BUFFER          @OZ29180 21642200
         EX    ML,MVPUTNCB           WITH BLANKS               @OZ29180 21642250
         SPACE 1                                               @OZ29180 21642300
MVPUT2   AL    R0,RPLRLEN          UPDATE THE RPL              @OZ29180 21642350
         ST    R0,RPLRLEN            RECORD LENGTH COUNT       @OZ29180 21642400
         B     MVPNMORE            LOOK FOR MORE DATA          @OZ29180 21642450
         SPACE 1                                               @OZ29180 21642500
MVPUTNCB MVC   1(*-*,RSINK),0(RSINK)    ***  EXECUTED  ***     @OZ29180 21642550
         SPACE 2                                               @OZ29180 21642600
MVPUTCCI MVC   SCWLCCC,0(R1)       MOVE COM. CODE TO WORKAREA  @OZ29180 21642650
         SPACE 1                                               @OZ29180 21642700
MVPUT    BAL   ML,MVKOMPOZ         INVOKE SNA R.U. COMPOSER    @OZ29180 21642750
         TM    SCWFLAGS,SCWMORE    TEST COMPOSER FLAGS               R4 21643000
         BZ    MVPNMORE            BRANCH IF NO MORE DATA TO COMPOSE R4 21643500
         TM    SCWFLAGS,SCWNSPAN   TEST COMPOSER FLAGS               R4 21644000
         LA    ML,MVPRPLGT         SEND RPL AND RE-ENTER AFTER CALL  R4 21644500
         BO    MVRPLSND             IF CROSS-R.U. SPANNING FORBIDDEN R4 21645000
         BAL   ML,MVRPLGET         ELSE GET ANOTHER OUTPUT BUFFER    R4 21645500
         L     WA,RPLNEXT          GET ADDRESS OF NEW BUFFER         R4 21646000
         MVC   SCWKOMSA-RPLDSECT(L'SCWKOMSA,WA),SCWKOMSA               C21646500
                                   COPY WORK AREA TO NEW BUFFER      R4 21647000
         BAL   ML,MVRPLSND         CALL SEND ROUTINE FOR OLD BUFFER R41 21647500
         BAL   R14,MVPRPLAN        SET COMPOSER INITIAL STATE IN NEWR41 21647800
         B     MVPUT               GO CONTINUE COMPOSING            R41 21648000
         EJECT                                                      R41 21648500
MVPNOPCC LTR   MBUF,MBUF           TEST BUFFER ADDRESS               R4 21649000
         BZ    MVPRPLGT            GO GET BUF IN CASE CHAIN ENDING  R41 21649500
         SPACE 1                                                    R41 21651000
MVPNMORE TM    MDCTSEL,FMHMEDIA    TEST MEDIA TYPE                  R41 21651100
         BNZ   MVPNCNSL            BRANCH IF NOT CONSOLE            R41 21651200
         SPACE 1                                                    R41 21651300
         CLI   MDCTCHSZ,0          TEST CHAIN SIZE OPTION           R41 21651400
         BNE   MVPCOUNT            BRANCH IF EOP OR VALUE OPTION    R41 21651500
         B     MVPNMFUL             ELSE CONTINUE IN CHAIN          R41 21651600
         SPACE 1                                                    R41 21651700
MVPNCNSL TM    ICEFLGS2,ICEBREAK   TEST FOR HI PRIO INTERRUPT  @OZ29180 21651800
         BO    MVPENDCH            BRANCH IF YES, END CHAIN         R41 21651900
         SPACE 1                                                    R41 21652000
         CLI   MDCTCHSZ,0          TEST CHAIN SIZE OPTION           R41 21652100
         BNE   MVPCOUNT            BRANCH IF NOT CHAIN/DATASET      R41 21652200
         TM    ICEFLGS2,ICESIGNL   TEST FOR INTERRUPT          @OZ29180 21652300
         BO    MVPENDCH            BRANCH IF YES, END CHAIN         R41 21652400
         B     MVPNMFUL             ELSE, CONTINUE IN CHAIN         R41 21652500
         SPACE 1                                                    R41 21652600
MVPCOUNT TM    MDCTCHSZ,X'FF'      TEST CHAIN SIZE OPTION           R41 21652700
         BO    MVPAGEND            BR IF CHAIN/PAGE                 R41 21652800
         IC    R15,ICEPUTCH        UPDATE NUMBER                    R41 21652900
         LA    R15,1(,R15)          OF PUTS                         R41 21653000
         STC   R15,ICEPUTCH          CARRYING DATA                  R41 21653100
         CLM   R15,1,MDCTCHSZ      CHECK NUMBER OF PUTS VS. LIMIT   R41 21653200
         BNL   MVPENDCH            FORCE CHAIN END IF AT MAXIMUM    R41 21653300
         B     MVPNMFUL            SKIP CHECK FOR END OF PAGE  @OZ28944 21653350
         SPACE 1                                                    R41 21653400
         SPACE 1                                                     R4 21657000
MVPAGEND TM    PCER0,X'80'         TEST FOR LOGICAL END OF PAGE      R4 21657500
         BO    MVPENDCH            FORCE END CHAIN IF END OF PAGE    R4 21658000
         SPACE 1                                                     R4 21658500
MVPNMFUL TM    SCWFLAGS,SCWFULL    TEST COMPOSER FLAGS               R4 21659000
         BZ    MVTAMXIT            RETURN TO PROCESSOR IF ROOM LEFT  R4 21659500
         B     MVPUTRPL            ELSE R.U. IS FULL, GO SEND IT     R4 21660000
         EJECT                                                      R41 21660500
MVPUTCPR MVC   ICERCPTN,DCTACPTN   SHOW REQUEST PROCESSED           R41 21660600
         LTR   MBUF,MBUF           TEST BUFFER ADDRESS              R41 21660700
         BZR   ML                  RETURN TO HANDLE COMMAND IF NONE R41 21660800
         CLC   ICERULEN,RPLRLEN+2  CHECK BUFFER LENGTH              R41 21660900
         BNH   MVRPLSND            IF FULL, SEND RPL & RE-ENTER     R41 21661000
         BAL   R14,MVPRPLAN        ELSE RESET COMPOSER STATE        R41 21661100
         BR    ML                  RETURN TO HANDLE COMMAND         R41 21661200
         SPACE 1                                                    R41 21661300
MVPUTCP1 L     R14,$CPTPOOL        FIND FIRST COMPACTION TABLE      R41 21661400
         MVC   DCTACPTN,CPTNUM-CPTDSECT(R14)  PREPARE TO SEND IT    R41 21661500
MVPUTCPA CLI   ICERCPTN,X'FF'      TEST PREVIOUS REQUEST STATUS     R41 21661600
         BNE   MVPUTCPB            BRANCH IF O.K.                   R41 21661700
         MVC   ICERCPTN,ICEACPTN   ELSE EARLIER FMH TYPE 3          R41 21661800
         BAL   R14,MVFMHCPA         FAILED--RESTORE ADDRESS         R41 21661900
         LA    R1,0            +0    OF LAST COMPACTION TABLE       R41 21662000
         ST    R1,ICECPT       +4     SUCCESSFULLY USED ON SESSION  R41 21662100
MVPUTCPB TM    MDCTFMT,DCTPCPCT    TEST DATA STREAM FORMAT          R41 21662200
         BO    MVPUTCPC            BRANCH IF COMPACTION ALLOWED     R41 21662300
         MVI   DCTACPTN,0          ELSE FORCE A SUPPRESS REQUEST    R41 21662400
MVPUTCPC CLI   DCTACPTN,0          TEST DESIRED COMPACTION TABLE #  R41 21662500
         BE    MVPUTCPR            BRANCH IF SUPPRESS REQUEST       R41 21662600
         CLC   ICEACPTN,DCTACPTN   COMPARE ACTIVE & DESIRED TABLES  R41 21662700
         BE    MVPUTCPR            BRANCH IF REACTIVATE REQUEST     R41 21662800
         SPACE 3                                                    R41 21662900
MVPTRUNC LTR   MBUF,MBUF           TEST BUFFER ADDRESS               R4 21663000
         BNZ   MVPENDCH            GO FORCE END CHAIN IF HAVE BUFFER R4 21663100
         TM    ICESNDST,ICEINCHN   TEST SESSION SEND STATUS          R4 21663200
         BZ    MVPUTFMH            BRANCH IF NOT IN CHAIN           R41 21663300
         BAL   ML,MVRPLGET         ELSE GET BUFFER JUST TO END CHAIN R4 21665500
         SPACE 2                                                    R41 21666000
MVPENDCH TM    ICESNDST,ICEINCHN   TEST SEND STREAM STATUS          R41 21667000
         BO    MVPUTEOC            GO SEND R.U. IF ALREADY IN CHAIN R41 21667500
         L     R1,RPLRLEN          OTHERWISE TEST                    R4 21668000
         LTR   R1,R1                R.U. LENGTH                      R4 21668500
         LA    ML,MVPUTFMH         LOAD RETURN FOR BUFFER FREE RTNE R41 21672500
         BZ    MVFREOUT            IF BUFFER EMPTY, DISCARD IT AND  R41C21673000
                                    RETURN TO FM-HEADER CHECK BELOW R41 21673500
MVPUTEOC OI    ICESNDST,ICEOCPND   SET 'END OF CHAIN PENDING' FLAG  R41 21674000
         EJECT                                                      R41 21674500
MVPUTRPL BAL   ML,MVRPLSND         CALL BUFFER SEND ROUTINE          R4 21675000
         TM    ICESNDST,ICEINCHN   TEST RTAM CHAIN STATE             R4 21675500
         BO    MVTAMXIT            RETURN TO PROCESSOR IF IN CHAIN   R4 21676000
         SPACE 1                                                     R4 21676500
MVPUTFMH DS    0H                  TEST FUNCTIONS NEEDING FM HEADER R41 21676600
         CLC   ICERCPTN,DCTACPTN   IF PREV REQUEST & LATEST UNEQUAL R41 21676700
         BNE   MVPUTCPT             GO SWITCH COMPACTION TABLES     R41 21676800
         L     R1,PCER0            TEST CHANNEL                     R41 21676900
         CLI   0(R1),X'FE'          COMMAND TYPE                    R41 21677000
         BNE   MVPITRPT            BRANCH IF NOT SEND PDIR          R41 21677100
         BAL   ML,MVRPLGET         GET A BUFFER FOR TYPE 2 FM HDR   R41 21677200
         L     WA,RPLAREA          GET DATA ADDRESS IN BUFFER       R41 21677300
         L     R1,PCER0            PICK UP TYPE 2                   R41 21677400
         L     R14,0(,R1)           FM HDR ADDRESS &                R41 21677500
         LH    R15,6(,R1)            LENGTH FROM CCW                R41 21677600
         ST    R15,RPLRLEN         STORE R.U. LENGTH                R41 21677700
         BCTR  R15,0               DECREASE BY 1 FOR MACHINE LTH    R41 21677800
         EX    R15,MVPUTMVC        COPY FM HEADER INTO BUFFER       R41 21677900
         OI    RPLOPT12,RPLFMHDR   SET FORMAT (FM HDR) INDICATOR    R41 21678000
         OI    ICESNDST,ICEOCPND   SET END CHN TO FORCE IMM FMH SENDR41 21678100
         BAL   ML,MVRPLSND         CALL BUFFER SEND ROUTINE         R41 21678200
         SPACE 1                                                    R41 21678300
MVPITRPT TM    MDCTSEL,FMHMEDIA    TEST MEDIA TYPE                  R41 21678400
         BZ    MVTAMXIT            BR IF CONSOLE, IGNORE INTERRUPT  R41 21678500
         SPACE 1                                                    R41 21678600
         TM    ICEFLGS2,ICESIGNL+ICEBREAK TEST INTERRUPT FLAGS @OZ29180 21678700
         BNZ   MVPSUSPD            GO SUSPEND WITH CHANGE DIRECTION R41C21678800
                                    IF 'SIGNAL' HAS BEEN RECEIVED   R41 21678900
         TM    ICEFLGS2,ICEOUTBK   ELSE TEST OUTBOUND TP INDICA@OZ29180 21679000
         BZ    MVTAMXIT            RETURN IF NOT INTERRUPTING FOR   R41C21679100
                                    HIGHER PRIORITY OUTBOUND STREAM R41 21679200
         B     MVPSUSP1            GO SUSPEND WITHOUT CHG DIRECTION R41 21679300
         SPACE 1                                                     R4 21679400
MVPSUSPD OI    ICEFLAGS,ICECHDIR   SET 'CHGE DIRECTION PENDING' FLAG R4 21679500
         NI    ICEFLGS2,255-ICESIGNL-ICEBREAK RESET INTR FLAGS @OZ29180 21679600
MVPSUSP1 BAL   ML,MVRPLGET         GET A BUFFER FOR SUSPEND FM HDR  R41 21679700
         OI    ICESNDST,ICEOCPND   SET END CHN TO FORCE IMM FMH SENDR41 21680000
         LA    R1,FMHSUSPD         LOAD DATA STREAM 'SUSPEND' CODE   R4 21680500
         BAL   ML,MVFMHBLD         BUILD & SEND FMH, WAIT FOR RESUME R4 21681000
         BAL   ML,MVRPLGET         GET BUFFER FOR 'RESUME' FM HEADER R4 21681500
         OI    ICESNDST,ICEOCPND   SET END CHN TO FORCE IMM FMH SEND R4 21682000
         LA    R1,FMHRESUM         LOAD 'RESUME' DATA STREAM ACTION  R4 21682500
         LA    ML,MVPITRPT         LOAD RETURN FOR SNA FM HDR RTNE  R41 21683000
         B     MVFMHBLD            BUILD & SEND 'RESUME' FM HEADER   R4 21683500
         SPACE 1                                                    R41 21683700
MVPUTMVC MVC   0(*-*,WA),0(R14)    ** EXECUTE ONLY **               R41 21683800
         EJECT                                                      R41 21684000
*                                                                    R4 21684500
*                        CHECK IF MUST LEAVE ALT CODE TO SEND 'SVF'  R4 21685000
*                                                                    R4 21685500
         SPACE 1                                                     R4 21686000
MVPUTFCB TM    MDCTFMT,DCTPALTC    TEST STREAM FORMAT                R4 21686500
         BZ    MVPUTFNA            BRANCH IF NOT ALTERNATE CODE      R4 21687000
         L     R15,RPLRLEN         GET AND TEST                      R4 21687500
         LTR   R15,R15              CURRENT R.U. LENGTH              R4 21688000
         BZ    SKIP300             BRANCH IF R.U. EMPTY              R4 21688500
         BAL   ML,MVRPLSND         CALL BUFFER SEND ROUTINE          R4 21689000
         BAL   ML,MVRPLGET         GET ANOTHER OUTPUT BUFFER         R4 21689500
         L     R1,PCER0            BRING BACK CCW ADDRESS            R4 21690000
SKIP300  NI    MDCTFMT,255-DCTPALTC  CHG STREAM FORMAT TO EBCDIC     R4 21690500
         OI    SCWFLAGS,SCWFULL    FORCE R.U. TO CONTAIN ONLY 'SVF'  R4 21691000
         SPACE 1                                                     R4 21691500
MVPUTFNA LA    R0,181              LOAD MAX ALLOWABLE FCB LENGTH     R4 21692000
         OI    0(R1),X'02'         SET MISSING IMMEDIATE COMMAND BIT R4 21692500
         B     MVPNIMED            REJOIN MAIN-LINE PROCESSING       R4 21693000
         SPACE 3                                                    R41 21693500
*                                                                   R41 21694000
*                             SET COMPOSER PLANNER INITIAL STATE    R41 21694500
*                                                                   R41 21695000
         SPACE 1                                                    R41 21695500
MVPRPLAN LH    R0,ICERULEN         INITIALIZE                       R41 21696000
         AL    R0,RPLAREA           END OF R.U.                     R41 21696500
         BCTR  R0,0                  ADDRESS IN                     R41 21697000
         ST    R0,SCWRUEND            WORK AREA                     R41 21697500
         TM    MDCTFMT,DCTPPRES+DCTPCPCT  TEST DATA STREAM FORMAT   R41 21698000
         BZR   R14                 RETURN IF NO COMPRESSION DESIRED R41 21698500
         BM    MVPRPLA1            BRANCH IF COMPRESSION ONLY       R41 21699000
         TM    MDCTSEL,FMHMEDIA    TEST FOR CONSOLE                 R41 21699100
         BZ    MVPRPLA1            SUPPRESS COMPACTION IF CONSOLE   R41 21699200
         LA    R0,MVKQEY           POINT TO COMPACTION EMPTY STATE  R41 21699500
         CLI   ICERCPTN,0          TEST ACTIVE COMPACTION TABLE NUM R41 21700000
         BNE   MVPRPLA2            BRANCH IF COMPACT NOT SUPPRESSED R41 21700500
MVPRPLA1 LA    R0,MVKPEY           POINT TO COMPRESSION EMPTY STATE R41 21701000
MVPRPLA2 ST    R0,SCWPLAN          SET COMPOSER INITIAL STATE       R41 21701500
         SLR   R0,R0               SET COMPOSER INITIAL             R41 21702000
         ST    R0,SCWCPARS          COMPACTION RACING STATE         R41 21702500
         BR    R14                 RETURN TO CALLER                 R41 21703000
         EJECT                                                      R41 21703500
*                                                                   R41 21704000
*                             SEND COMPACTION TABLE FM HEADER       R41 21704500
*                                                                   R41 21705000
         SPACE 1                                                    R41 21705500
MVPUTCPT BAL   ML,MVRPLGET         GET A BUFFER FOR TYPE 3 FM HDR   R41 21706000
         BAL   R14,MVFMHCPA        LOOK UP COMPACTION TABLE NUMBER  R41 21706500
         B     MVPIVCPN        +0  ERROR EXIT - GO DISPLAY MESSAGE  R41 21707000
         ST    R1,ICECPT       +4  SAVE COMPACTION TABLE LOC IN ICE R41 21707500
         MVI   ICERCPTN,X'FF'      SHOW TABLE SWITCH IN PROGRESS    R41 21708000
         BAL   ML,MVFMHCPT         BUILD & SEND COMPACTION TABLE    R41 21708500
         L     R1,ICECPT           LOAD NEW COMPACTION TABLE ADDR   R41 21709000
         IC    R0,CPTNUM-CPTDSECT(,R1)  SHOW TABLE                  R41 21709500
         STC   R0,ICEACPTN               SWITCH WAS                 R41 21710000
         STC   R0,ICERCPTN                SUCCESSFUL                R41 21710500
         B     MVPINSTR            RE-ENTER TO PROCESS COMMAND      R41 21711000
         EJECT                                                      R41 21711500
MVPIVCPW $WAIT  CMB,SAVE=NO        WAIT FOR A CMB                   R41 21711600
         L      R1,PCER1           RELOAD CALLERS DCT ADDRESS       R41 21711700
        $RESTORE                   RESTABLISH RTAM REGISTERS        R41 21711800
         SPACE 1                                                    R41 21711900
MVPIVCPN DS    0H                                                   R41 21712000
        $GETCMB NUMCMB=1           GET A CMB FOR THE MESSAGE        R41 21712100
         BZ    MVPIVCPW            BR IF NO CMB -- WAIT             R41 21712200
         SPACE 1                                                    R41 21712300
         LA    WA,CMBTEXT-CMB(,R1) POINT TO CMB MESSAGE AREA        R41 21712400
         SLR   R0,R0               RELOAD INVALID COMAPACTION       R41 21712500
         IC    R0,DCTACPTN         TABLE NUMBER                     R41 21712600
         MVI   ICERCPTN,0          SUPPRESS TABLE                   R41 21712700
         MVI   DCTACPTN,0           NUMBER REQUEST                  R41 21712800
         MVC   0(L'MVPIVCM,WA),MVPIVCM  MOVE IN MESSAGE TEMPLATE... R41 21712900
         MVC   MVPIVNM(L'DCTDEVN,WA),DCTDEVN ... ADD DEVICE NAME    R4  21713000
         CVD   R0,SCWCCWA              PLACE INVALID                R41 21713100
         ED    MVPIVCT(,WA),SCWCCWA+6    TABLE NUMBER IN MESSAGE    R41 21713200
         L     JCT,PCEJCT          RELOAD CALLERS JCT ADDR FOR WTO  R41 21713300
        $WTO   (R1),L'MVPIVCM,JOB=YES,CMB=YES,WAIT=NO,  ISSUE       R41C21713400
               ROUTE=$LOG+$TP+$UR,CLASS=$ACTION,PRI=$ST  MESSAGE    R41 21713500
         LM    R0,R1,PCER0         RELOAD R0, AND R1 ENTRY VALUES   R41 21713600
        $RESTORE                   RELOAD ACCESS METHOD REGISTERS   R41 21713700
         BAL   ML,MVFREOUT         DISCARD UNUSED BUFFER            R41 21713800
         B     MVPINSTR            RE-ENTER TO PROCESS COMMAND      R41 21713900
         SPACE 1                                                    R41 21714000
MVPIVCM $MSG   211,'RNNN.PRN COMPACTION TABLE NNN NOT FOUND'        R41 21714100
MVPIVNM  EQU   2,8                 OFFSET TO DEVICE NAME IN MESSAGE R41 21714200
MVPIVCT  EQU   27,4                OFFSET TO EDIT PATERN IN MESSAGE R41 21714300
         SPACE 1                                                    R41 21714400
         ORG   MVPIVCM+MVPIVCT     PLACE TABLE NUMBER EDIT          R41 21714500
         DC    X'40202120'          PATTERN IN MESSAGE TEMPLATE     R41 21714600
         ORG   ,                                                    R41 21714700
         CNOP  2,4                 REALIGN                          R41 21714800
         EJECT                                                      R41 21714900
*********************************************************************** 21753000
*                                                                     * 21753500
*                        SNA R.U. COMPOSER                            * 21754000
*                                                                     * 21754500
*           OBJECTIVE - ACCEPT A CHANNEL COMMAND CODE IN              * 21755000
*           WORK AREA LOC 'SCWLCCC' AND A DATA ADDRESS AND            * 21755500
*           LENGTH IN REGS 'RSRCE' AND 'RLSRCE'.  ACCORDING           * 21756000
*           TO WHETHER COMPRESSION, COMPACTION, OR NEITHER            * 21758500
*           IS SPECIFIED, CALL ONE OF THREE SETS OF ROUTINES          * 21759000
*           TO TRANSFER THE DATA TO THE R.U. BUFFER.  IF AN           * 21760000
*           R.U. BUFFER BECOMES FULL DURING THE OPERATION,            * 21760500
*           AND MORE DATA REMAINS TO BE PROCESSED, RETURN TO          * 21761000
*           CALLER WITH 'SCWMORE' FLAG SET.  CALLER SHOULD            * 21761500
*           OBTAIN A NEW BUFFER, COPY COMPOSER WORK AREA AND          * 21762000
*           SAVE AREA INTO IT, SEND THE FULL R.U., AND CALL           * 21762500
*           COMPOSER AGAIN TO PROCESS THE REMAINING DATA.             * 21763000
*                                                                     * 21763500
*           IF AN R.U. BUFFER BECOMES FULL ON THE LAST BYTE           * 21764000
*           OF THE OPERATION, RETURN TO CALLER WITH THE               * 21764500
*           'SCWFULL' FLAG SET.  CALLER SHOULD SEND THE OLD           * 21765000
*           BUFFER.  IF THE R.U. BUFFER IS NOT FULL AT THE            * 21765500
*           COMPLETION OF THE OPERATION, RETURN WITH NEITHER          * 21766000
*           'SCWMORE' NOR 'SCWFULL' SET.  THE CALLER MAY              * 21766500
*           STILL SEND THE R.U. ON THE BASIS OF EXTERNAL              * 21767000
*           REQUIREMENTS TO TRUNCATE OR END THE CHAIN, ETC.           * 21767500
*                                                                     * 21768000
*           CERTAIN VALUES MUST BE STORED IN THE COMPOSER             * 21768500
*           SAVE AREA BETWEEN CALLS.  IN A NEW BUFFER,                * 21769000
*           COMPOSER FLAG BYTE 'SCWFLAGS' IS ASSUMED ZERO.            * 21769500
*           THE CARRIAGE CONTROL STRING 'SCWCCWA' SHOULD BE           * 21770000
*           INITIALIZED.  OTHER DATA STORED IN THE SAVE AREA          * 21770500
*           WILL BE MANAGED BY THE COMPOSER.                          * 21771000
*                                                                     * 21772000
*           THE COMPOSER ROUTINES ARE LABELLED AS FOLLOWS -           * 21772500
*                MVKO - GENERAL ROUTINES                              * 21773000
*                MVKD - NONCOMPRESS/NONCOMPACT FEEDER ROUTINE         * 21778000
*                MVKE - COMPRESS/COMPACT EMITTER ROUTINE              * 21778500
*                MVKF - COMPRESS/COMPACT FEEDER ROUTINE               * 21779000
*                MVKP - COMPRESSION PLANNER ROUTINES                  * 21779500
*                MVKQ - COMPACTION PLANNER ROUTINES                   * 21780000
*                MVKU - NONCOMPRESS/NONCOMPACT MOVER ROUTINE          * 21780500
*                MVKV - COMPRESSION MOVER ROUTINES                    * 21781000
*                MVKW - COMPACTION MOVER ROUTINES                     * 21781500
*                MVKZ - COMPRESS/COMPACT R.U. SEND ROUTINE            * 21782000
*                                                                     * 21783000
*********************************************************************** 21783500
         SPACE 1                                                     R4 21784000
MVKOMPOZ ST    ML,SCWRETRN         SAVE RETURN ADDRESS               R4 21784500
         LA    RBY1,1              LOAD REGISTER CONSTANT OF 1       R4 21785000
         L     RSINK,RPLAREA       CALCULATE CURRENT                 R4 21785500
         AL    RSINK,RPLRLEN        R.U. POSITION                    R4 21786000
         L     REND,SCWRUEND       GET END OF R.U. ADDRESS          R41 21786500
         LA    RBASE,MVKOVSUB      GET COMPOSER SUBS ADDRESSABILITY R41 21786800
         TM    MDCTFMT,DCTPPRES    TEST DATA STREAM FORMAT           R4 21787000
         BO    MVKOMPRS            BRANCH IF COMPRESSION SPECIFIED   R4 21787500
         EJECT                                                       R4 21788000
*********************************************************************** 21788500
*                                                                     * 21789000
*                   NONCOMPRESS/COMPACT FEEDER ROUTINE                * 21791000
*                                                                     * 21792000
*           OBJECTIVE - FOR IMMEDIATE COMMANDS, GENERATE THE          * 21792500
*           SCS CONTROL STRING EQUIVALENT, FEED IT TO THE             * 21793000
*           BUFFER FILL ROUTINE (B.F.R.), AND RETURN.  FOR            * 21793500
*           NON-IMMEDIATE COMMANDS, GENERATE AND FEED TRANS-          * 21794000
*           PARENT FRAME SEQUENCE TO B.F.R. IF REQUIRED.              * 21794500
*           FEED DATA STRING TO B.F.R. (ADJUSTING LENGTH TO           * 21795000
*           SUPPRESS TRAILING BLANKS, UNLESS TRANSPARENCY             * 21795500
*           FRAME GENERATION ALREADY DID THIS). GENERATE AND          * 21796000
*           FEED CHANNEL COMMAND'S SCS CONTROL STRING EQUI-           * 21796500
*           LENT TO B.F.R., AND RETURN.                               * 21797000
*                                                                     * 21797500
*           IF THE B.F.R. DETECTS A FULL BUFFER DURING THE            * 21798000
*           MOVE OF ANY STRING, RETURN FROM THE COMPOSER IS           * 21798500
*           MADE WITH FLAG 'SCWMORE' SET.  AFTER CALLER HAS           * 21799000
*           GOTTEN A NEW BUFFER AND SENT THE R.U., THE                * 21799500
*           COMPOSER IS REINVOKED TO PROCESS THE EXCESS.              * 21800000
*                                                                     * 21800500
*           ON NORMAL RETURN FLAG 'SCWMORE' IS OFF. IN ADDI-          * 21801000
*           TION, IF THE CONTROL STRING WAS JUST LONG ENOUGH          * 21801500
*           TO FILL THE LAST BUFFER (INDICATED BY B.F.R.              * 21802000
*           COND.CODE), TURN ON 'SCWFULL' FLAG TO INSTRUCT            * 21802500
*           CALLER THAT R.U. IS READY TO SEND.                        * 21803000
*                                                                     * 21803500
*********************************************************************** 21804000
         SPACE 2                                                    R41 21804500
         PUSH  USING               SAVE ACCESS METHOD REGISTER USE  R41 21804600
         USING MVKOVSUB,RBASE      COMPOSER SEGMENT ADDRESSABILITY  R41 21804700
         SPACE 2                                                    R41 21804800
         SLR   REND,RSINK          CALC # OF UNUSED                 R41 21805000
         ALR   REND,RBY1            BYTES IN THE R.U.               R41 21805100
         SPACE 1                                                     R4 21805500
         TM    SCWFLAGS,SCWMORE    TEST COMPOSER FLAGS               R4 21806000
         BO    MVKUCNUE            BRANCH IF CONTINUING PREV. CALL   R4 21806500
         SPACE 1                                                     R4 21807000
         OI    SCWFLAGS,SCWMORE    INDICATE COMPOSING IN PROGRESS    R4 21807500
         TM    SCWLCCC,X'02'       TEST CURRENT COMMAND TYPE         R4 21808000
         BO    MVKDCTRL            BRANCH IF IMMEDIATE COMMAND       R4 21808500
         BAL   RFEED,MVKOTPCY      CALL TRANSPARENCY CHECK ROUTINE   R4 21809000
         BM    MVKDCTRL            BRANCH IF ZERO LENGTH IN CCW      R4 21809500
         BZ    MVKDSCAN            BRANCH IF NO VALUES BELOW X'40'   R4 21810000
         SPACE 1                                                     R4 21810500
*                        FEED TRANSPARENT FRAME SEQUENCE             R4 21811000
         SPACE 1                                                     R4 21811500
         OI    SCWFLAGS,SCWCTRL    INDICATE SOURCE IS CONTROL STRING R4 21812000
         BAL   RFEED,MVKUFILL      CALL BUFFER FILL ROUTINE          R4 21812500
         L     RLSRCE,SCWLINPT     RESTORE LENGTH OF SOURCE STRING   R4 21813000
         B     MVKDDATA            BYPASS SCAN FOR TRAILING BLANKS   R4 21813500
         EJECT                                                       R4 21814000
*                        ADJUST LENGTH TO SUPPRESS TRAILING BLANKS   R4 21814500
         SPACE 1                                                     R4 21815000
MVKDSCAN ST    RSRCE,SCWINPT       SAVE ADDRESS OF SOURCE STRING     R4 21815500
         ALR   RSRCE,RLSRCE        GENERATE ADDRESS OF LAST BYTE + 1 R4 21816000
         LA    RFEED,MVKDDATA      OPTIMIZE LOOP WITH ADDRESS IN REG R4 21816500
SKIP310  BCTR  RSRCE,0             SCAN BACKWARDS                    R4 21817000
         CLI   0(RSRCE),C' '        ELIMINATING                      R4 21817500
         BNER  RFEED                 TRAILING                        R4 21818000
         BCT   RLSRCE,SKIP310         BLANKS                         R4 21818500
         B     MVKDCTRL            GO DO CARRIAGE CTRL IF ALL BLANK  R4 21819000
         SPACE 1                                                     R4 21819500
*                        FEED DATA STRING (TEXT POINTED TO BY CCW)   R4 21820000
         SPACE 1                                                     R4 21820500
MVKDDATA L     RSRCE,SCWINPT       RESTORE ADDRESS OF SOURCE STRING  R4 21821000
         NI    SCWFLAGS,255-SCWCTRL  INDICATE SOURCE IS TEXT STRING  R4 21821500
         BAL   RFEED,MVKUFILL      CALL BUFFER FILL ROUTINE          R4 21822000
         SPACE 1                                                     R4 21822500
*                        FEED SCS CARRIAGE CONTROL STRING            R4 21823000
         SPACE 1                                                     R4 21823500
MVKDCTRL TM    MDCTFEAT,DCTPCCTL   TEST FOR CARRIAGE CONTROLS  @OZ29180 21823600
         BZ    MVKDNCTR            BRANCH IF NOT ALLOWED       @OZ29180 21823700
         BAL   RFEED,MVKOCCDE      CALL CAR'GE CTL DCODE RTN   @OZ29180 21824000
         BAL   RFEED,MVKUFILL      CALL BUFFER FILL ROUTINE          R4 21824500
         BZ    MVKDTRNC            BRANCH IF R.U. FULL               R4 21825000
MVKDNCTR NI    SCWFLAGS,255-SCWMORE  INDICATE COMPOSING CMPLTE @OZ29180 21825500
         L     REND,RPLAREA        CALCULATE AND                     R4 21826000
         SLR   RSINK,REND           STORE CURRENT                    R4 21826500
         ST    RSINK,RPLRLEN         R.U. LENGTH                     R4 21827000
         L     MBASE2,MVKOVSUB     RESTORE SNA SUBS BASE REGISTER   R41 21827200
         L     ML,SCWRETRN         RETRIEVE COMPOSER RETURN ADDRESS  R4 21827500
         BR    ML                  RETURN TO CALLER                 R41 21828000
         SPACE 3                                                     R4 21828500
*                        FORCE SCHEDULING OF FULL BUFFER             R4 21829000
         SPACE 1                                                     R4 21829500
MVKDTRNC NI    SCWFLAGS,255-SCWMORE  INDICATE COMPOSING COMPLETE     R4 21830000
         OI    SCWFLAGS,SCWFULL    FORCE BUFFER TO BE SCHEDULED      R4 21830500
         B     MVKUFLEN            BRANCH TO SET LENGTH AND RETURN   R4 21831000
         EJECT                                                       R4 21831500
*********************************************************************** 21832000
*                                                                     * 21832500
*           NONCOMPRESS/NONCOMPACT BUFFER FILL ROUTINE                * 21834500
*                                                                     * 21835500
*           OBJECTIVE - ENTER AT 'MVKUFILL' TO MOVE STRING            * 21836000
*           INTO CURRENT OUTPUT BUFFER (STRING ADDR & LENGTH          * 21836500
*           IN REGS RSRCE AND RLSRCE).  REGS RBY1, REND, AND          * 21837000
*           RSINK SHOULD BE PRE-LOADED WITH 1, NUMBER UNUSED          * 21837500
*           BYTES LEFT IN BUFFER, AND ADDR OF FIRST UNUSED            * 21838000
*           POSITION, RESPECTIVELY.                                   * 21838500
*                                                                     * 21839000
*           IF THE ENTIRE STRING CANNOT FIT IN THE BUFFER,            * 21839500
*           ADDR AND LENGTH OF THE EXCESS ARE CALCULATED AND          * 21840000
*           SAVED, THE COMPOSER EXITS TO CALLER WITH FLAG             * 21840500
*           'SCWMORE' SET, AND IT IS EXPECTED THAT CALLING            * 21841000
*           CODE WILL GET NEW BUFFER, SEND OLD BUFFER, AND            * 21841500
*           CALL COMPOSER AGAIN.  SINCE 'SCWMORE' FLAG STILL          * 21842000
*           IS SET 'MVKUCNUE' IS ENTERED TO HANDLE EXCESS.            * 21842500
*                                                                     * 21843000
*           CONDITION CODES ARE SET AT EXIT AS FOLLOWS -              * 21843500
*                4  (MINUS)  STRING FITS WITH ROOM TO SPARE           * 21844000
*                8  (ZERO)   STRING FILLS LAST BUFFER POSN.           * 21844500
*                                                                     * 21845000
*********************************************************************** 21845500
MVKUCNUE L     RSRCE,SCWSRCE       RELOAD ADDRESS AND LENGTH         R4 21846500
         L     RLSRCE,SCWLSRCE      OF SOURCE STRING REMAINDER       R4 21847000
         L     RFEED,SCWFEED       RELOAD FILL ROUTINE RETURN ADDR   R4 21847500
         TM    SCWFLAGS,SCWCTRL    TEST COMPOSER FLAGS               R4 21848000
         BZ    MVKUFILL            BRANCH IF NOT CONTROL STRING      R4 21848500
         ALR   RSRCE,MBUF          CONVERT OFFSET TO ADDRESS         R4 21849000
MVKUFILL SLR   REND,RLSRCE         CALC IF WHOLE STRING FITS IN R.U. R4 21849500
         BC    NOT-SLSM,SKIP320    BRANCH IF IT DOES                 R4 21850000
         ALR   RLSRCE,REND         CALC LENGTH OF PART THAT FITS     R4 21850500
SKIP320  SLR   RLSRCE,RBY1         DECREASE BY 1 FOR MACHINE LENGTH  R4 21851000
         BC    SLSM,SKIP330        BYPASS EXECUTE IF NOTHING TO MOVE R4 21851500
         EX    RLSRCE,MVKUFMVC     MOVE STRING INTO R.U.             R4 21852000
         LA    RSINK,1(RLSRCE,RSINK)  UPDATE R.U. CURRENT POSITION   R4 21852500
         LA    RSRCE,1(RLSRCE,RSRCE)  AND SOURCE REMAINDER POINTERS  R4 21853000
SKIP330  LCR   RLSRCE,REND         TEST LENGTH OF REMAINING SOURCE   R4 21853500
         BNPR  RFEED               RETURN WITH COND CODE IF ALL USED R4 21854000
         TM    SCWFLAGS,SCWNSPAN   TEST COMPOSER FLAGS               R4 21854500
         BO    MVKUNSPA            BR IF SPANNED RECORDS FORBIDDEN   R4 21855000
         TM    SCWFLAGS,SCWCTRL    OTHERWISE TEST COMPOSER FLAGS     R4 21855500
         BZ    SKIP340             BRANCH IF NOT CONTROL STRING      R4 21856000
         SLR   RSRCE,MBUF          CONVERT ADDRESS TO OFFSET         R4 21856500
SKIP340  ST    RSRCE,SCWSRCE       SAVE ADDRESS AND LENGTH           R4 21857000
         ST    RLSRCE,SCWLSRCE      OF SOURCE STRING REMAINDER       R4 21857500
         ST    RFEED,SCWFEED       SAVE BUFFER FILL RTNE RETURN ADDR R4 21858000
MVKUFLEN LH    REND,ICERULEN       SET FULL R.U.                     R4 21858500
         ST    REND,RPLRLEN         LENGTH IN RPL                    R4 21859000
MVKUNSPA L     ML,SCWRETRN         RETRIEVE COMPOSER RETURN ADDRESS  R4 21859500
         L     MBASE2,MVKOVSUB     RESTORE SNA SUBS BASE REGISTER   R41 21859800
         BR    ML                  RETURN TO CALLER WITH FULL R.U.   R4 21860000
         SPACE 1                                                     R4 21860500
MVKUFMVC MVC   0(*-*,RSINK),0(RSRCE)  ** EXECUTE ONLY **             R4 21861000
         EJECT                                                       R4 21861500
MVKOVSUB DC    A(RTAMVSUB)         SNA SUBS ADDR TO REFRESH MBASE2  R41 21861600
         SPACE 1                                                    R41 21861700
*********************************************************************** 21862000
*                                                                     * 21862500
*                        SNA TRANSPARENCY CHECK ROUTINE               * 21863000
*                                                                     * 21863500
*           OBJECTIVE - TEST FOR ZERO CCW LENGTH AND FOR              * 21864000
*           APPEARANCE OF CHARACTERS IN CONTROL QUADRANT              * 21864500
*           (BELOW X'40').  IF CONTROLS OCCUR SUPPRESS                * 21865000
*           TRAILING BLANKS NOW SINCE CORRECT COUNT MUST BE           * 21865500
*           STORED IN TRANSPARENCY FRAMING SEQUENCE.  CONDI-          * 21866000
*           TION CODE IS SET AT EXIT AS FOLLOWS -                     * 21866500
*                     4  (MINUS)  CCW LENGTH WAS ZERO                 * 21867000
*                     8  (ZERO)   NO CONTROLS OCCUR IN DATA,          * 21867500
*                                 OR TRANSPARENCY CHECK NOT           * 21868000
*                                 REQUESTED                           * 21868500
*                     2  (PLUS)   'TRN' AND COUNT GENERATED,          * 21869000
*                                 ADDR AND LENGTH OF 2 IN             * 21869500
*                                 REGS 'RSRCE' AND 'RLSRCE'.          * 21870000
*                                 DATA ADDR & LTH ARE SAVED.          * 21870500
*                                                                     * 21871000
*********************************************************************** 21871500
         SPACE 1                                                     R4 21872000
MVKOTPCY SLR   RLSRCE,RBY1         DECREASE BY 1 FOR MACHINE LENGTH  R4 21872500
         BCR   SLSM,RFEED          RETURN IF CCW LENGTH WAS ZERO       C21873000
                                    (WITH COND CODE 'SLSM', 'MINUS') R4 21873500
         TM    SCWFLAGS,SCWTRNSP   TEST COMPOSER FLAGS               R4 21874000
         BZ    *+16                BYPASS EXECUTE IF TRANSPARENCY      C21874500
                                    CHECK NOT REQUESTED              R4 21875000
         ST    REND,SCWTEND   *R1* SAVE R1 IN CASE 'TRT' SPOILS IT   R4 21875500
         ST    RSINK,SCWTSINK *R2* SAVE R2 IN CASE 'TRT' SPOILS IT   R4 21876000
         EX    RLSRCE,MVKPUTRN     CHECK FOR VALUES BELOW X'40'      R4 21876500
         LA    RLSRCE,1(,RLSRCE)   CHANGE MACHINE TO TRUE LENGTH     R4 21877000
         BZR   RFEED               RETURN IF NO VALUES BELOW X'40'     C21877500
                                    (WITH COND CODE 'ZERO')          R4 21878000
         ALR   RLSRCE,RSRCE        COMPUTE ADDRESS OF LAST BYTE + 1 R41 21879000
         BALR  R2,0                OPTIMIZE LOOP WITH ADDRESS IN REGR41 21879500
         BCTR  RLSRCE,0            SCAN BACKWARDS                   R41 21880000
         CLI   0(RLSRCE),SCSBLANK   ELIMINATING                     R41 21880500
         BER   R2                    TRAILING BLANKS                R41 21881000
         SLR   RLSRCE,RSRCE        COMPUTE LENGTH                   R41 21881500
         ALR   RLSRCE,RBY1          OF REMAINING DATA               R41 21882000
         ST    RSRCE,SCWINPT       SAVE ADDRESS OF SOURCE STRING    R41 21882500
         STC   RLSRCE,SCWTRN+1     STORE TRANSPARENT DATA LENGTH     R4 21883000
         ST    RLSRCE,SCWLINPT     SAVE LENGTH OF SOURCE STRING      R4 21883500
         LA    RSRCE,SCWTRN        POINT TO TRANSPARENCY FRAME STRNG R4 21884000
         L     RSINK,SCWTSINK *R2* RE-CREATE R1 AND R2 VALUES        R4 21885500
         L     REND,SCWTEND   *R1*  DESTROYED BY NON-ZERO 'TRT'      R4 21886000
         LR    RLSRCE,RBY1         SET LENGTH 2 FOR 'TRN' + COUNT   R41 21886500
         AR    RLSRCE,RBY1          AND SET CONDITION CODE 'PLUS'   R41 21886600
         BR    RFEED               RETURN                            R4 21887000
         SPACE 1                                                     R4 21887500
MVKPUTRN TRT   0(*-*,RSRCE),MSCSTRAN  ** EXECUTE ** DETECT SCS CTRLS R4 21888000
         EJECT                                                       R4 21888500
*********************************************************************** 21889000
*                                                                     * 21889500
*                        CARRIAGE CONTROL DECODE ROUTINE              * 21890000
*                                                                     * 21890500
*           OBJECTIVE - GENERATE ANY NECESSARY COUNT OR CODE          * 21891000
*           TO FORM THE SCS CONTROL STRING THAT MATCHES THE           * 21891500
*           CHANNEL COMMAND IN FUNCTION.  EXIT WITH ADDR OF           * 21892000
*           THE STRING IN REG 'RSRCE' AND LENGTH IN 'RLSRCE'          * 21892500
*                                                                     * 21893000
*********************************************************************** 21893500
         SPACE 2                                                     R4 21894000
MVKOCCDE TM    SCWLCCC,X'80'       TEST CURRENT COMMAND TYPE         R4 21894500
         BO    MVKOCSKP            BRANCH IF SKIP                    R4 21895000
         CLI   SCWLCCC,X'63'       TEST CURRENT COMMAND TYPE         R4 21895500
         BE    MVKOCFCB            BRANCH IF LOAD FCB                R4 21896000
         NI    SCWFLAGS,255-SCWCTRL  SHOW STRING NOT IN BUFFER       R4 21896500
         LA    RSRCE,MSCSNLS       POINT TO 14 SCS 'NL' CODES        R4 21897000
         CLI   SCWLCCC,X'79'       TEST CURRENT COMMAND TYPE         R4 21897500
         BE    MVKOCIRS            BRANCH IF SUBSTITUTE PUNCH CODE   R4 21898000
         SLR   RLSRCE,RLSRCE       CLEAR REGISTER                    R4 21898500
         IC    RLSRCE,SCWLCCC      PICK UP COMMAND CODE              R4 21899000
         SRA   RLSRCE,3            EXTRACT NUMBER OF LINES TO SPACE  R4 21899500
         BNZR  ML                  RETURN IF 1, 2, 3, OR 14          R4 21900000
         LR    RLSRCE,RBY1         SET LENGTH OF 1 FOR 'CR'          R4 21900500
         SLR   RSRCE,RBY1          SLIDE POINTER TO LEFT 2 BYTES     R4 21901000
         BCTR  RSRCE,RFEED          TO POINT TO 'CR', AND RETURN     R4 21901500
         SPACE 1                                                     R4 21902000
MVKOCSKP OI    SCWFLAGS,SCWCTRL    SHOW CONTROL STRING IS IN BUFFER  R4 21902500
         SLR   RLSRCE,RLSRCE       CLEAR REGISTER                    R4 21903000
         IC    RLSRCE,SCWLCCC      PICK UP COMMAND CODE              R4 21903500
         SRL   RLSRCE,3            SHIFT CODE TO GET CHANNEL NUMBER  R4 21904000
         N     RLSRCE,MSCSMASK     MASK OFF ALL BUT LOW 4 BITS       R4 21904500
         LA    RSRCE,SCWSEL        POINT TO 'SEL'/CODE/'CR' SEQUENCE R4 21905000
         CLR   RLSRCE,RBY1         COMPARE CHANNEL NUMBER WITH 1     R4 21905500
         BNE   SKIP350             GENERATE 'SEL' IF NOT CHANNEL 1   R4 21906000
         MVI   SCWSEL-1,SCSFF      MOVE 'FORMS FEED' TO WORK AREA    R4 21906500
         LR    RLSRCE,RBY1         SET LENGTH OF 1 FOR 'FF'          R4 21907000
         BCTR  RSRCE,RFEED         SLIDE POINTER TO LEFT 1 BYTE        C21907500
                                    TO POINT TO 'FF', AND RETURN     R4 21908000
SKIP350  IC    RLSRCE,MSCSSELN-1(RLSRCE)  USE CHAN # AS TABLE INDEX  R4 21908500
         LA    RSRCE,SCWSEL        POINT TO 'SEL'/CODE/'CR' SEQUENCE R4 21909000
         STC   RLSRCE,SCWSEL+1     STORE CHANNEL CODE IN CTRL STRING R4 21909500
         LA    RLSRCE,3            FOR SKIP AFTER WRITE INCLUDE 'CR' R4 21910000
         TM    SCWLCCC,X'02'       TEST CURRENT COMMAND TYPE         R4 21910500
         BZR   RFEED               RETURN IF NOT IMMEDIATE COMMAND   R4 21911000
         BCTR  RLSRCE,RFEED        IF IMMED ADJ LENGTH TO 2, RETURN  R4 21911500
         SPACE 1                                                     R4 21912000
MVKOCIRS LR    RLSRCE,RBY1         SET LENGTH OF 1 FOR 'IRS'         R4 21912500
         BCTR  RSRCE,RFEED         SLIDE POINTER TO LEFT 1 BYTE        C21913000
                                    TO POINT TO 'IRS', AND RETURN    R4 21913500
         EJECT                                                       R4 21914000
*                                                                    R4 21914500
*                             HANDLE FCB ON SNA REMOTE TERMINALS     R4 21915000
*                                                                    R4 21915500
         SPACE 2                                                     R4 21916000
MVKOCFCB OI    SCWFLAGS,SCWCTRL    SHOW CONTROL STRING IS IN BUFFER  R4 21916500
         MVC   SCWSVFWA,MSCSSVF    MOVE IN MODEL SVF STRING          R4 21917000
         ST    REND,SCWTEND        FREE UP                           R4 21917500
         ST    RSINK,SCWTSINK       REGISTERS                        R4 21918000
         ST    RFEED,SCWFEED         FOR TEMP. USE                   R4 21918500
         BCTR  RLSRCE,0            DECREASE LENGTH BY 1              R4 21919000
         TM    0(RSRCE),X'C0'      TEST 1ST FCB BYTE FOR INDEXING    R4 21919500
         LA    REND,0(RLSRCE,RSRCE)  CALCULATE ADDR OF END OF STRING R4 21920000
         BNZ   SKIP360             IF INDEX BYTE PRESENT RSRCE IS OK R4 21920500
         BCTR  RSRCE,0             OTHERWISE ADJUST FOR ABSENCE      R4 21921000
SKIP360  LCR   RLSRCE,RSRCE        SAVE COMPLEMENT OF STRING ORIGIN  R4 21921500
         SPACE 2                                                     R4 21922000
MVKOCFNO IC    RSINK,1(,RSRCE)     PICK UP CHANNEL NUMBER            R4 21922500
         N     RSINK,MSCSMASK      MASK OFF ALL BUT LOW 4 BITS       R4 21923000
         BZ    MVKOCFLL            IF ZERO GO CHECK FOR LAST LINE    R4 21923500
         LA    RSINK,SVFTABWK-1(RSINK)  POINT TO CHANNEL STOP ARRAY  R4 21924000
         CLI   0(RSINK),0          TEST FOR A VALUE ALREADY SAVED    R4 21924500
         BNE   MVKOCFLL            IF PRESENT IGNORE FURTHER STOPS   R4 21925000
         LA    RFEED,1(RLSRCE,RSRCE)  CALC LINE NUMBER OF FIRST STOP R4 21925500
         STC   RFEED,0(,RSINK)     SAVE IN CHANNEL STOP ARRAY        R4 21926000
         SPACE 1                                                     R4 21926500
MVKOCFLL TM    1(RSRCE),X'10'      TEST FOR LAST FLAG                R4 21927000
         BO    MVKOCFFG            IF ON TEST IF TRULY LAST OR 8 L/I R4 21927500
         SPACE 1                                                     R4 21928000
MVKOCFIX BXLE  RSRCE,RBY1,MVKOCFNO IF OFF, INCREMENT BY 1 AND LOOP   R4 21928500
         SPACE 1                                                     R4 21929000
*                                  FCB WITH NO 'LAST' FLAG SET IS    R4 21929500
*                                   INVALID BUT WILL BE ACCEPTED     R4 21930000
         BCTR  RSRCE,0             PRETEND LAST BYTE HAD FLAG        R4 21930500
         SPACE 2                                                     R4 21931000
MVKOCFFG LR    RFEED,RLSRCE        GET COMPLEMENT OF STRING ORIGIN   R4 21931500
         ALR   RFEED,RSRCE         SUBTRACT ORIGIN FROM CURRENT ADDR R4 21932000
         BC    ALDZ,MVKOCFIX       IF 0, FLAG IS ON 1ST BYTE = 8 L/I R4 21932500
         ALR   RFEED,RBY1          IF NOT 0 ADD 1 TO GET FCB DEPTH   R4 21933000
         CLI   SVFTABWK,1          TEST FOR CHANNEL 1 AT LINE 1      R4 21933500
         BNH   MVKOCFRN            IF YES OR NOT DEFINED, GO EXIT    R4 21934000
         EJECT                                                       R4 21934500
*                                                                    R4 21935000
*                             FORCE CHANNEL 1 (TOP MARGIN) TO LINE 1 R4 21935500
*                                                                    R4 21936000
         SPACE 3                                                     R4 21936500
         SLR   RLSRCE,RLSRCE       CLEAR                             R4 21937000
         SLR   RSINK,RSINK          REGISTERS                        R4 21937500
         IC    RLSRCE,SVFTABWK     PICK UP CHANNEL 1 VALUE           R4 21938000
         BCTR  RLSRCE,0            LESS 1 TO GET ADJUSTMENT FACTOR   R4 21938500
         LA    RSRCE,SVFTABWK      START WITH CHANNEL 1 VALUE        R4 21939000
         LA    REND,SVFTABWK+11    END WITH CHANNEL 12 VALUE         R4 21939500
         SPACE 2                                                     R4 21940000
MVKOCFAJ IC    RSINK,0(,RSRCE)     GET CHANNEL STOP                  R4 21940500
         LTR   RSINK,RSINK         TEST FOR UNDEFINED (ZERO)         R4 21941000
         BZ    SKIP370             SKIP ADJUSTMENT IF UNDEFINED      R4 21941500
         SLR   RSINK,RLSRCE        OTHERWISE ADJUST                  R4 21942000
         BC    SLSP,SKIP380        SKIP WRAPAROUND IF PLUS           R4 21942500
         ALR   RSINK,RFEED         ADD IN MAX VALUE TO WRAP AROUND   R4 21943000
SKIP380  STC   RSINK,0(,RSRCE)     PUT BACK IN ARRAY                 R4 21943500
SKIP370  BXLE  RSRCE,RBY1,MVKOCFAJ LOOP                              R4 21944000
         SPACE 2                                                     R4 21944500
MVKOCFRN STC   RFEED,SVFMAXPL      SET MAX PRINT LINE VALUE          R4 21945000
         MVC   SVFTOPM,SVFTABWK    SET TOP MARGIN (CHANNEL 1)        R4 21945500
         STC   RFEED,SVFBOTM       SET BOTTOM MARGIN                 R4 21946000
         LA    RLSRCE,L'SCWSVFWA   SET SOURCE LENGTH                 R4 21946500
         LA    RSRCE,SCWSVFWA      POINT TO CONTROL STRING WORK AREA R4 21947000
         L     REND,SCWTEND        RESTORE                           R4 21947500
         L     RSINK,SCWTSINK       TEMPORARY                        R4 21948000
         L     RFEED,SCWFEED         WORK REGS                       R4 21948500
         BR    RFEED               RETURN TO CALLER                  R4 21949000
         SPACE 3                                                     R4 22000000
*                                                                    R4 22000500
*                             MODEL SCS CARRIAGE CONTROL STRINGS     R4 22001000
*                                                                    R4 22001500
         SPACE 2                                                     R4 22002000
         DS    0D                                                    R4 22002500
MSCSCC   DC    AL1(SCSTRN,0,SCSSEL,0,SCSCR)  THESE 3 CARDS MUST      R4 22003000
         DC    AL1(SCSIRS)                    APPEAR TOGETHER IN     R4 22003500
MSCSNLS  DC    14AL1(SCSNL)                    THE ORDER SHOWN       R4 22004000
MSCSMASK DC    F'15'               MASK TO ISOLATE LOW-ORDER 4 BITS  R4 22004500
MSCSSELN DC    X'8182838485868788897A7B7C'  SCS CHANNEL SELECT CODES R4 22005000
MSCSSVF  DC    XL18'2BC20F000000000000000000000000000000'  MODEL SVF R4 22005500
         TITLE 'HASP SNA REMOTE TERMINAL SCS SCAN TABLE'             R4 22006000
         SPACE 5                                                     R4 22006500
MSCSTRAN DS    0D             XLATE & TEST TABLE FOR ANY BELOW X'40' R4 22007000
*                                                                    R4 22007500
         DC    64X'04',192X'00'                                      R4 22008000
         ORG   MSCSTRAN+SCSSEL                                       R4 22008500
         DC    X'10'               1ST PART OF SECURE STRING READER  R4 22009000
         ORG   MSCSTRAN+SCSFF                                        R4 22009500
         DC    X'08'               FORM FEED - END OF INPUT RECORD   R4 22010000
         ORG   MSCSTRAN+SCSNL                                        R4 22010500
         DC    X'08'               NEW LINE - END OF INPUT RECORD    R4 22011000
         ORG   MSCSTRAN+SCSIRS                                       R4 22011500
         DC    X'08'               INTER-RECORD SEPARATOR            R4 22012000
         ORG   MSCSTRAN+SCSTRN                                       R4 22012500
         DC    X'0C'               TRANSPARENCY FRAME CHARACTER      R4 22013000
         ORG   MSCSTRAN+256                                          R4 22013500
         TITLE 'HASP SNA REMOTE TERMINAL COMPRESSION ROUTINES'       R4 22014000
*********************************************************************** 22014500
*                                                                     * 22015000
*                  COMPRESS/COMPACT FEEDER ROUTINE                    * 22015500
*                                                                     * 22016000
*           OBJECTIVE - FOR IMMEDIATE COMMANDS, GENERATE THE          * 22016500
*           SCS CONTROL STRING EQUIVALENT, FEED IT TO THE             * 22017000
*           EMITTER/PLANNER/MOVER ROUTINES (E/P/M), AND               * 22017500
*           RETURN.  FOR NON-IMMEDIATE COMMANDS, GENERATE             * 22018000
*           AND FEED TRANSPARENT FRAME SEQUENCE TO E/P/M IF           * 22018500
*           REQUIRED. FEED DATA STRING TO E/P/M. GENERATE             * 22019000
*           AND FEED CHANNEL COMMAND'S EQUIVALENT SCS                 * 22019500
*           CONTROL STRING TO E/P/M, AND RETURN.                      * 22020000
*                                                                     * 22020500
*           IF THE E/P/M DETECTS A FULL BUFFER DURING THE             * 22021000
*           PROCESSING OF ANY STRING, RETURN FROM THE COM-            * 22021500
*           POSER IS MADE WITH FLAG 'SCWMORE' SET.  AFTER             * 22022000
*           CALLER HAS GOTTEN A NEW BUFFER & SENT THE R.U.,           * 22022500
*           THE COMPOSER IS REINVOKED TO PROCESS THE EXCESS.          * 22023000
*                                                                     * 22023500
*           ON NORMAL RETURN FLAG 'SCWMORE' IS OFF. IN ADDI-          * 22024000
*           TION, IF THE CONTROL STRING WAS JUST LONG ENOUGH          * 22024500
*           TO FILL THE LAST BUFFER (I.E., THE LAST EMISSION          * 22025000
*           CAUSES THE SEND ROUTINE TO BE ENTERED), TURN ON           * 22025500
*           'SCWFULL ' FLAG TO INSTRUCT CALLER THAT R.U. IS           * 22026000
*           READY TO SEND.                                            * 22026500
*                                                                     * 22027000
*           SEE PROLOGUE AT 'MVKEMITR' FOR OUTLINE OF THE             * 22027500
*           EMITTER/PLANNER/MOVER & DEFINITION OF 'EMISSION'          * 22028000
*                                                                     * 22028500
*********************************************************************** 22029000
         SPACE 1                                                     R4 22029500
         DROP  RSCBL,RPLAN,RNUM,RCHAR,RLCHAR  REGS USED BY COMPOSER R41C22030500
               MDCT,MBASE1,BASE1,BASE2,PCE  = STANDARD RTAM EQUATES R41 22031000
         SPACE 1                                                     R4 22031500
MVKOMPRS ST    R13,SCWSAV13        FREE UP REG FOR TEMPORARY USE    R41 22033000
         SPACE 1                                                     R4 22033500
         L     RPLAN,SCWPLAN       RELOAD PLANNER STATE             R41 22034000
         SLR   RCPZ,RCPZ           CLEAR INDEX REG             @OZ27430 22034500
         L     RCPA,SCWCPARS       RELOAD COMPACTION RACING STATE   R41 22035000
         L     RCPT,ICECPT         ESTABLISH COMPACTION             R41 22035500
         USING CPTDSECT,RCPT        TABLE ADDRESSABILITY            R41 22036000
         SPACE 1                                                    R41 22036500
         TM    SCWFLAGS,SCWMORE    TEST COMPOSER FLAGS              R41 22037000
         BO    MVKZCNUE            BRANCH IF CONTINUING PREV. CALL  R41 22037500
         SPACE 1                                                     R4 22038000
         OI    SCWFLAGS,SCWMORE    INDICATE COMPOSING IN PROGRESS   R41 22038300
         TM    SCWLCCC,X'02'       TEST CURRENT COMMAND TYPE        R41 22038500
         BO    MVKFCTRL            BRANCH IF IMMEDIATE COMMAND       R4 22039000
         BAL   RFEED,MVKOTPCY      CALL TRANSPARENCY CHECK ROUTINE   R4 22039500
         BM    MVKFCTRL            BRANCH IF ZERO LENGTH IN CCW      R4 22040000
         BZ    MVKFDATA            BRANCH IF NO VALUES BELOW X'40'   R4 22040500
         EJECT                                                       R4 22041000
*                        FEED TRANSPARENT FRAME SEQUENCE             R4 22041500
         SPACE 1                                                     R4 22042000
         OI    SCWFLAGS,SCWCTRL    INDICATE SOURCE IS CONTROL STRING R4 22042500
         BAL   RFEED,MVKEMITR      CALL EMITTER ROUTINE              R4 22043000
         BALR  RFEED,RPLAN         FORCE LAST EMISSION TO PLANNER    R4 22043500
         L     RNUM,MVKFPEND       GET PLANNER-END ROUTINE OFFSET   R41 22044000
         BAL   RFEED,0(RNUM,RPLAN) FORCE MOVE TO R.U. BUFFER        R41 22044500
         L     RSRCE,SCWINPT       RETRIEVE ADDRESS AND              R4 22045000
         L     RLSRCE,SCWLINPT      LENGTH OF INPUT TEXT             R4 22045500
         SPACE 1                                                     R4 22046000
*                        FEED DATA STRING (TEXT POINTED TO BY CCW)   R4 22046500
         SPACE 1                                                     R4 22047000
MVKFDATA NI    SCWFLAGS,255-SCWCTRL  INDICATE SOURCE IS TEXT STRING  R4 22047500
         BAL   RFEED,MVKEMITR      CALL EMITTER ROUTINE              R4 22048000
         CLI   0(RCHAR),C' '       TEST LAST EMISSION CHARACTER      R4 22048500
         BE    MVKFDATB            SKIP EMISSION IF TRAILING BLANKS R41 22049000
         BALR  RFEED,RPLAN         OTHERWISE FORCE LAST EMISSION     R4 22049500
MVKFDATB L     RNUM,MVKFPEND       GET PLANNER-END ROUTINE OFFSET   R41 22050000
         BAL   RFEED,0(RNUM,RPLAN) FORCE MOVE TO R.U. BUFFER        R41 22050500
         SPACE 1                                                     R4 22051000
*                        FEED SCS CARRIAGE CONTROL STRING            R4 22051500
         SPACE 1                                                     R4 22052000
MVKFCTRL BAL   RFEED,MVKOCCDE      CALL CARRIAGE CTL. DECODE ROUTINE R4 22052500
         BAL   RFEED,MVKEMITR      CALL EMITTER ROUTINE              R4 22053000
         OI    SCWFLAGS,SCWLAST    INDICATE LAST EMISSION FOR CCW    R4 22053500
         BALR  RFEED,RPLAN         FORCE LAST EMISSION TO PLANNER    R4 22054000
         L     RNUM,MVKFFEND       GET  FEEDER-END ROUTINE OFFSET   R41 22054500
         BAL   RFEED,0(RNUM,RPLAN) FORCE R.U. TO SENDABLE FORM      R41 22055000
         NI    SCWFLAGS,255-SCWLAST-SCWMORE  INDICATE COMPOSING DONE R4 22055500
         TM    SCWFLAGS,SCWNSPAN   TEST COMPOSER FLAGS               R4 22056000
         BO    MVKZFLEN            BR IF RECORD SPANNING FORBIDDEN   R4 22056500
         ST    RPLAN,SCWPLAN       SAVE PLANNER STATE                R4 22057000
         ST    RCPA,SCWCPARS       SAVE COMPACTION RACING STATE     R41 22057500
         B     MVKZFLEN            GO SET LTH, RESTORE REGS & RETURN R4 22058000
         SPACE 2                                                     R4 22058500
MVKFPEND DC    F'-4'               OFFSET TO PLANNER-END EXIT INSTR R41 22059000
MVKFFEND DC    F'-8'               OFFSET TO FEEDER-END  EXIT INSTR R41 22059100
         EJECT                                                       R4 22059500
*********************************************************************** 22060000
*                                                                     * 22060500
*                   COMPACT/COMPRESS EMITTER ROUTINE                  * 22062500
*                                                                     * 22063500
*           OBJECTIVE - TAKE A STRING SUPPLIED BY THE FEEDER          * 22064000
*           ROUTINES AND BREAK IT DOWN INTO 'EMISSIONS'.              * 22064500
*           AN EMISSION IS 1 OR MORE CONSECUTIVE OCCURRENCES          * 22065000
*           OF THE SAME CHARACTER.                                    * 22065500
*                                                                     * 22066000
*           THE EMITTER EXECUTES A COMPARE-LONG WHICH LEAVES          * 22066500
*           REG 'RCHAR' POINTING AT THE 'EMISSION CHARACTER'          * 22067000
*           AND REG 'RLSRCE' SET SUCH THAT THE SUBTRACTION            * 22067500
*           'RNUM'-'RLSRCE' GIVES THE NUMBER OF OCCURRENCES           * 22068000
*           OF THE CHARACTER LESS 1.  (NOTE THE 'SLR' AMONG           * 22068500
*           THE FIRST INSTRUCTIONS OF EVERY PLANNER ROUTINE.)         * 22069000
*                                                                     * 22069500
*           THE EMITTER EXITS BY BRANCHING TO THE PLANNER             * 22070000
*           ROUTINE WHOSE ADDRESS IS IN REG 'RPLAN'.  THESE           * 22070500
*           ROUTINES EMBODY THE STRATEGY USED TO PLAN WHAT            * 22071000
*           KIND OF SCB'S SHOULD BE FORMED AND WHERE, HENCE           * 22071500
*           THE TERM 'PLANNER ROUTINE'.  FOR COMPRESSION,             * 22072000
*           THE PLANNER HAS TWO 'STATES' (NO SCB CURRENTLY            * 22072500
*           IN EFFECT--THE 'EMPTY' STATE--AND A NONCOMPRESSED         * 22073000
*           SCB IN EFFECT) AND CONSEQUENTLY TWO DIFFERENT             * 22073500
*           ROUTINES WHICH CAN BE POINTED AT BY 'RPLAN'.              * 22074000
*                                                                     * 22074500
*           PLANNER CODE ENDS BY BRANCHING BACK TO THE                * 22075000
*           EMITTER (EXCEPT WHEN AN R.U. IS FULL AND A SEND           * 22075500
*           ROUTINE INTERVENES) WHICH ADJUSTS REGISTERS AND           * 22076000
*           CONTINUES THE COMPARE-LONG.  THE LAST EMISSION            * 22076500
*           OF A STRING (WHICH RESULTS IN AN EQUAL COMPARE)           * 22077000
*           IS NOT PASSED TO THE PLANNER. INSTEAD RETURN IS           * 22077500
*           MADE TO THE FEEDER ROUTINE WHICH MAY EMIT IT BY           * 22078000
*           BRANCHING DIRECTLY TO THE PLANNER OR DISCARD IT.          * 22078500
*           TRAILING BLANKS (THE LAST EMISSION OF THE TEXT            * 22079000
*           STRING) ARE DETECTED AND SUPPRESSED IN THIS WAY.          * 22079500
*                                                                     * 22080000
*           PLANNER ROUTINES DO NOT ACTUALLY TRANSFER DATA            * 22080500
*           FROM THE SOURCE STRING TO THE R.U. BUFFER.  THIS          * 22081000
*           IS PERFORMED BY THE 'MOVER' ROUTINES.  FOR COM-           * 22081500
*           PRESSION, THERE ARE 3 MOVER ROUTINES--THE 'PRIME          * 22082000
*           MOVER', THE 'DUPLICATE (NONPRIME) MOVER', AND             * 22082500
*           THE 'NONCOMPRESSED SCB MOVER'.                            * 22083000
*                                                                     * 22083500
*           DATA TRANSFER IS DONE IN MOVE ROUTINES RATHER             * 22084000
*           THAN BYTE BY BYTE FOR EFFICIENCY REASONS.  ANY            * 22084500
*           DEFERRED MOVE MUST BE FORCED BEFORE THE FEEDER            * 22085000
*           SWITCHES FROM ONE SOURCE STRING TO ANOTHER.               * 22085500
*           'PLANNER-END' AND 'FEEDER-END' ROUTINES ARE               * 22086000
*           ASSOCIATED WITH EACH PLANNER STATE FOR FORCING            * 22086500
*           DEFERRED MOVES (POINTED TO BY BRANCHES LOCATED            * 22087000
*           4 AND 8 BYTES BEFORE THE NORMAL ENTRY POINT),             * 22087500
*           AND ONE IS INVOKED AT THE END OF EACH STRING.             * 22088000
*                                                                     * 22088500
*********************************************************************** 22089000
         EJECT                                                       R4 22089500
*                                                                    R4 22090000
*           COMPACTION/COMPRESSION EMITTER ROUTINE                  R41 22090500
*                                                                   R41 22091000
         SPACE 1                                                    R41 22091500
         CNOP  4,8                 MAIN LOOP BRANCH TARGET ON DBLWD R41 22092000
MVKEMITZ LA    RPLAN,MVKQCA11      CHANGE TO ODD COMPACTION STATE   R41 22092500
         SPACE 1                                                     R4 22093500
MVKEMITR LR    RCHAR,RSRCE         SET OPERAND 1 LOC = OPERAND 2 LOCR41 22094000
         ALR   RSRCE,RBY1          OFFSET OPERAND 2 TO RIGHT 1 BYTE R41 22094500
         SLR   RLSRCE,RBY1         DECREASE OPERAND 2 LENGTH BY 1   R41 22095000
         LR    RLCHAR,RLSRCE       SET OPERAND 1 LTH = OPERAND 2 LTH R4 22095500
         LR    RNUM,RLSRCE         SAVE ORIGINAL OPERAND LENGTH     R41 22096000
         BCR   NOT-SLSP,RFEED      RTRN TO FEEDER IF SOURCE USED UP R41 22096500
         CLC   0(1,RCHAR),0(RSRCE) TEST FOR DUPLICATED CHARACTER    R41 22096600
         BNER  RPLAN               ENTER PLANNER IF NONE            R41 22096700
         CLCL  RCHAR,RSRCE         COMPARE FOR NUMBER OF OCCURRENCES R4 22097000
         SPACE 1                                                     R4 22097500
*                   'RNUM'-'RLSRCE' NOW GIVES THE NUMBER OF CONSECU- R4 22098000
*                   TIVE OCCURRENCES OF THE SAME CHARACTER, LESS 1.  R4 22098500
*                   'RCHAR' POINTS TO AN INSTANCE OF THE CHARACTER.  R4 22099000
         SPACE 1                                                     R4 22099500
         BNER  RPLAN               DRIVE PLANNER IF NOT LAST EMISS'N R4 22100000
         BR    RFEED               OTHERWISE RETURN TO FEEDER        R4 22100500
         SPACE 6                                                     R4 22101000
*                                                                    R4 22101500
*           COMPRESSION PLANNER - NONCOMPRESSED SCB STATE  (NORMAL)  R4 22102000
*                                                                    R4 22102500
         SPACE 1                                                     R4 22103000
         CNOP  0,8                 MAIN LOOP BRANCH TARGET ON DBLWD R41 22103300
         B     MVKVNCI         -8  BRANCH TO FEEDER-END  ROUTINE    R41 22103400
         B     MVKVNCI         -4  BRANCH TO PLANNER-END ROUTINE    R41 22103500
         SPACE 1                                                     R4 22104000
MVKPNC   SLR   RNUM,RLSRCE         COMPUTE # OF OCCURRENCES LESS 1   R4 22104500
         BC    SLSP,MVKPNC2        BRANCH IF DUP FACTOR GRTR THAN 1  R4 22105000
         SPACE 1                                                     R4 22105500
MVKPNC1  BCT   RSCBL,MVKEMITR      ADV SCB COUNT & GET NEXT EMISSION R4 22106000
         BCT   RNUM,MVKVNC         IF SCB FULL FORCE DUP FACTOR NEG.   C22106500
               (ALWAYS BRANCHES)    & GO TO NONCOMPRESS SCB MOVER    R4 22107000
         SPACE 1                                                     R4 22107500
MVKPNC2  CLI   0(RCHAR),C' '       TEST SOURCE CHARACTER             R4 22108000
         BE    MVKVNCAL            END NONCOMPRESS SCB IF PRIME      R4 22108500
         CLR   RNUM,RSCBL          TEST IF EMISSION CAN FIT IN SCB   R4 22109000
         BNL   MVKVNCAL            END SCB IF NOT                    R4 22109500
         CLR   RNUM,RBY1           COMPARE (DUP FACTOR - 1) WITH 1   R4 22110000
         BH    MVKVNCAL            END IF DUP FACTOR GREATER THAN 2  R4 22110500
         SLR   RNUM,RBY1           DECREASE DUP FACTOR BY 1         R41 22110800
         BCT   RSCBL,MVKPNC1       DECREASE REMAINING SPACE IN SCB     C22111000
               (ALWAYS BRANCHES)    BY 1 & TREAT AS IF SINGLE CHAR.  R4 22111500
         EJECT                                                       R4 22112000
*                                                                    R4 22112500
*           COMPRESSION PLANNER - EMPTY STATE  (NO CURRENT SCB)      R4 22113000
*                                                                    R4 22113500
         SPACE 1                                                     R4 22114000
         CNOP  0,8                 MAIN LOOP BRANCH TARGET ON DBLWD R41 22114300
         B     0(,RFEED)       -8  FEEDER-END AND PLANNER-          R41 22114400
         BR    RFEED           -4   END ROUTINES ARE NO-OPS         R41 22114500
         SPACE 1                                                     R4 22115000
MVKPEYRR BALR  RPLAN,RPLAN    INSTRUCTION THAT RETURNS TO CALLER OF    C22115500
                               SCB MOVE ROUTINE 'MVKVNC', CHANGING     C22116000
                                TO EMPTY STATE AT THE SAME TIME.     R4 22116500
         SPACE 1                                                     R4 22117000
MVKPEY   SLR   RNUM,RLSRCE         COMPUTE # OF OCCURRENCES LESS 1   R4 22117500
         BC    SLSP,MVKPEYV        BRANCH IF MORE THAN SINGLE CHAR. R41 22118000
         CLI   0(RCHAR),C' '       TEST CURRENT EMISSION             R4 22118500
         BE    MVKVPR              IF PRIME GO STORE PRIME SCB       R4 22119000
         SPACE 1                                                     R4 22119500
MVKPEYN  LA    RSCBL,63(,RSINK)    CALC WHERE FULL CAPACITY SCB ENDS R4 22120000
         CLR   RSCBL,REND          SEE IF ROOM FOR FULL CAPACITY SCB R4 22120500
         BNH   SKIP410             BRANCH IF YES                     R4 22121000
         LR    RSCBL,REND          SUBSTITUTE WHERE THE R.U. ENDS    R4 22121500
SKIP410  ST    RCHAR,SCWSRCEB      SAVE BEGIN ADDR FOR MOVE ROUTINE  R4 22122000
         SLR   RSCBL,RSINK         COMPUTE UNUSED SCB CAPACITY       R4 22122500
         BC    SLSZ,MVKZOFLO       BRANCH IF NO ROOM FOR SCB + CHAR. R4 22123000
         LA    RPLAN,MVKPNC        CHANGE TO NONCOMPRESSED STATE     R4 22123500
         ST    RSCBL,SCWSCBNC      SAVE SCB STARTING CAPACITY       R41 22123600
         MVI   0(RSINK),0          SET LENGTH ALREADY MOVED TO ZERO  R4 22124000
         BCT   RSCBL,MVKEMITR      GET NEXT EMISSION                 R4 22124500
         STC   RBY1,0(,RSINK)      IF SCB FULL ALREADY STORE COUNT=1 R4 22125000
         MVC   1(1,RSINK),0(RCHAR) MOVE IN SINGLE CHARACTER          R4 22125500
         LA    RSINK,2(,RSINK)     INCREASE PTR FOR 'RPLRLEN' CALC   R4 22126000
         BCT   RNUM,MVKZFULL       FORCE DUP FACTOR NEGATIVE & SEND    C22126500
               (ALWAYS BRANCHES)    SINCE SHORT SCB IMPLIES FULL RU  R4 22127000
         SPACE 1                                                     R4 22127500
MVKPEYV  CLI   0(RCHAR),SCSBLANK   TEST EMISSION CHARACTER          R41 22128000
         BNE   MVKVDU              GO STORE DUP SCB IF NOT PRIME     R4 22128500
         SPACE 1                                                    R41 22129000
*                                                                    R4 22129500
*           COMPRESSION MOVER - DUPLICATE PRIME SCB                  R4 22130000
*                                                                    R4 22130500
         SPACE 1                                                    R41 22130700
MVKWPR0  SLR   RCPA,RCPA           SHOW COMPACTION NOT COMPETING    R41 22130800
         SPACE 1                                                     R4 22131000
MVKVPR   LA    RLCHAR,SCBPRIME+1(,RNUM)  GENERATE SCB (INVALID IF      C22131500
                                         DUP FACTOR HIGHER THAN MAX) R4 22132000
         SL    RNUM,MVKVMAX        TEST DUP FACTOR HIGHER THAN MAX   R4 22132500
         STC   RLCHAR,0(,RSINK)    STORE SCB IN CASE VALID           R4 22133000
         BC    NOT-SLSM,SKIP420    RE-DO IF DUP FACTOR OVER MAX      R4 22133500
         BXLE  RSINK,RBY1,MVKEMITR OTHERWISE ADVANCE R.U. POINTER      C22134000
                                    AND GET NEXT EMISSION            R4 22134500
         B     MVKZFULL            GO SEND R.U. IF FULL              R4 22135000
         SPACE 1                                                     R4 22135500
SKIP420  MVI   0(RSINK),SCBPRIME+63  STORE SCB WITH MAX COUNT        R4 22136000
         BXLE  RSINK,RBY1,MVKVPR   GENER. ANOTHER SCB FOR REMAINDER  R4 22136500
         B     MVKZOFLO            IF R.U. FULL, GO SEND & RE-ENTER  R4 22137000
         EJECT                                                       R4 22138500
*                                                                    R4 22139000
*           COMPRESSION MOVER - DUPLICATE NONPRIME SCB               R4 22139500
*                                                                    R4 22140000
         SPACE 1                                                     R4 22140500
*                             LOOP POINT FOR DUP FACTOR MORE THAN 63 R4 22141000
         SPACE 1                                                     R4 22141500
MVKVDUL  MVI   0(RSINK),SCBDUPLC+63  STORE SCB WITH MAX COUNT        R4 22142000
         LA    RSINK,1(,RSINK)     ADV R.U. PTR W/O CHGING COND CODE R4 22142500
         BXH   RSINK,RBY1,MVKZOFLO IF R.U. FULL GO SEND & RE-ENTER  R41 22143000
         LA    RNUM,0(RNUM,RLSRCE) BACK OUT DUP FACTOR CALCULATION. R41C22143200
                                    CONDITION CODE STILL NOT CHANGED R4 22143500
         BCR   SLSZ,RPLAN          IF ONLY 1 OCCURRENCE LEFT, GO    R41C22144000
                                    RE-ENTER EMPTY STATE. ELSE JUST R41C22144500
                                     GENERATE ANOTHER DUPLICATE SCB  R4 22145000
         SLR   RNUM,RLSRCE         RECALCULATE DUP FACTOR LESS 1    R41 22145100
         SPACE 1                                                    R41 22145300
MVKWDU0  SLR   RCPA,RCPA           SHOW COMPACTION NOT COMPETING    R41 22145400
         SPACE 1                                                     R4 22145500
*                             MAIN ENTRY - DUP FACTOR LESS 1 IN RNUM R4 22146000
         SPACE 1                                                     R4 22146500
MVKVDU   CLR   RSINK,REND          COMPARE R.U. PTR WITH END OF R.U. R4 22147000
         IC    RLCHAR,0(,RCHAR)    PICK UP SOURCE CHARACTER          R4 22147500
         BNL   MVKZOFLO            GO END IF 1 BYTE AVAIL. (NEED 2)  R4 22148000
         STC   RLCHAR,1(,RSINK)    STORE SOURCE CHARACTER IN R.U.    R4 22148500
         LA    RLCHAR,SCBDUPLC+1(,RNUM)  GENERATE SCB (INVALID IF      C22149000
                                         DUP FACTOR HIGHER THAN MAX) R4 22149500
         SL    RNUM,MVKVMAX        TEST DUP FACTOR HIGHER THAN MAX   R4 22150000
         STC   RLCHAR,0(,RSINK)    STORE SCB IN CASE VALID           R4 22150500
         LA    RLCHAR,0            ZERO BRANCH REG FOR COMPCT  @OZ25416 22150550
         BC    NOT-SLSM,MVKVDUL    RE-DO IF DUP FACTOR OVER MAX      R4 22151000
         ALR   RSINK,RBY1          ADVANCE R.U. POINTER              R4 22151500
         BXLE  RSINK,RBY1,MVKEMITR ADV R.U. PTR & GET NEXT EMISSION  R4 22152000
         B     MVKZFULL            IF R.U. FULL GO SEND IT           R4 22152500
         SPACE 3                                                    R41 22152600
MVKVMAX  DC    F'63'               MAXIMUM COUNT VALUE IN AN SCB    R41 22152700
         EJECT                                                       R4 22153000
*********************************************************************** 22153500
*                                                                     * 22154000
*      COMPRESSION MOVER - NONCOMPRESSED SCB                          * 22154500
*                                                                     * 22155000
*   NOTATION USED IN FOLLOWING REMARKS HAS MEANING GIVEN.             * 22155500
*      EV.RXXXX  IS THE ENTRY VALUE OF REGISTER RXXXX.                * 22156000
*      IV.RXXXX  IS AN INTERMEDIATE VALUE OF REGISTER RXXXX.          * 22156500
*      NV.RXXXX  IS THE NEW (FINAL) VALUE OF REGISTER RXXXX.          * 22157000
*      C         REPRESENTS THE SCB COUNT.                            * 22157500
*      CA        REPRESENTS THE SCB CAPACITY (SEE BELOW).             * 22157700
*      P         REPRESENTS THE OLD SCB COUNT, THE NUMBER OF          * 22158000
*                BYTES ALREADY MOVED FROM PREVIOUS SOURCES.           * 22158500
*                                                                     * 22159000
*   SAVEWORD AND REGISTER CONTENTS AT ENTRY -                         * 22159500
*      EV.REND  = ADDRESS OF LAST BYTE IN R.U. BUFFER                 * 22160000
*      EV.RSINK = ADDRESS WHERE SCB IS TO BE STORED                   * 22160500
*      EV.RSCBL = NUMBER OF UNUSED BYTES IN THE SCB.                  * 22161000
*      SCWSCBNC = THE SCB STARTING CAPACITY.  THIS VALUE              * 22161500
*                 IS 63 IF THERE WAS ROOM IN THE R.U. FOR             * 22162000
*                 A FULL CAPACITY SCB, OTHERWISE IT IS THE            * 22162500
*                 NUMBER OF BYTES LEFT IN THE R.U. LESS 1             * 22163000
*                 = EV.REND-EV.RSINK.  RSCBL STARTS OUT               * 22163100
*                 WITH THIS VALUE AND COUNTS DOWN.                    * 22163200
*      THUS EV.RSCBL = MIN (63, EV.REND-EV.RSINK) - C                 * 22163500
*                   = VALUE SAVED IN 'SCWSCBNC'  - C                  * 22163700
*      EV.RLCHAR= ... (DON'T CARE)                                    * 22164000
*                                                                     * 22164500
*   DESIRED REGISTER CONTENTS AT EXIT -                               * 22165000
*      NV.REND  = EV.REND  (NO CHANGE)                                * 22165500
*      NV.RSINK = EV.RSINK + C + 1  (1 IS FOR SCB ITSELF)             * 22166000
*      NV.RSCBL = ... (DON'T CARE)                                    * 22166500
*      NV.RLCHAR= ... (DON'T CARE)                                    * 22167000
*                                                                     * 22167500
*   ENTRY POINTS -                                                    * 22168000
*      MVKVNC    NORMAL SCB TERMINATION ROUTINE. STORES SCB,          * 22168500
*                MOVES ANY PART OF DATA NOT MOVED PREVIOUSLY          * 22169000
*      MVKVNCAL  ENTRY POINT TO NORMAL SCB TERMINATION RTNE.          * 22169500
*                USED WHEN SCB ENDED BY PRIME/DUPLICATE SCB.          * 22170000
*      MVKVNCI   SCB INTERRUPT ROUTINE.  LIKE TERMINATION             * 22170500
*                ROUTINE, IT STORES SCB AND MOVES DATA. HOW-          * 22171000
*                EVER, IT ALSO PRESERVES REG CONTENTS NEEDED          * 22171500
*                TO ADD DATA FROM THE NEXT SOURCE STRING TO           * 22172000
*                THE SAME SCB. GETS CONTROL VIA PLANNER-END           * 22172500
*                BRANCH, RETURNS ON REG. 'RFEED'.                     * 22173000
*                                                                     * 22173500
*********************************************************************** 22174000
         EJECT                                                      R41 22174500
MVKVNCI  ST    RSINK,SCWSCBA       SAVE ADDRESS OF INTERRUPTED SCB  R41 22176000
         ST    RSCBL,SCWSCBL       SAVE NUMBR OF UNUSED BYTES IN SCB R4 22176500
         SPACE 2                                                     R4 22177000
MVKVNCAL LA    RPLAN,MVKPEYV       OTHER MOVE ROUTINE ENTERS HERE TOR41C22177500
                                    TERMINATE NONCOMPRESS SCB.  RNUM   C22178000
                                     (DUP FACTOR - 1) IS 0 OR PLUS.  R4 22178500
         SPACE 5                                                    R41 22179000
*                                                                    R4 22179500
*           COMPRESSION MOVER - NONCOMP SCB TERMINATION ROUTINE     R41 22180000
*                                                                    R4 22180500
         SPACE 1                                                     R4 22181000
MVKVNC   L     RLCHAR,SCWSCBNC     GET  CA           (SCB CAPACITY) R41 22186500
         SLR   RLCHAR,RSCBL        GET  CA-(CA-C) = C   (SCB COUNT) R41 22187000
         IC    RSCBL,0(,RSINK)     GET  P     (COUNT PREV'LY MOVED) R41 22187500
         STC   RLCHAR,0(,RSINK)    STORE NEW SCB IN R.U.            R41 22188000
         ALR   RSINK,RSCBL         POINT PAST DATA PREVIOUSLY MOVED R41 22188500
         SLR   RLCHAR,RSCBL        DECREASE MOVE LENGTH BY  P       R41 22189000
         BC    NOT-SLSP,MVKVNCB    SKIP EXECUTE IF NOTHING TO MOVE  R41 22189500
         BCTR  RLCHAR,0            GET  C - P - 1  FOR MACHINE LTH  R41 22190000
         L     RSCBL,SCWSRCEB      RETRIEVE SOURCE STRING START ADDRR41 22190500
         EX    RLCHAR,MVKVNMVC     MOVE  C - P  CHARACTERS          R41 22191000
         LA    RSINK,1(RLCHAR,RSINK)  POINT PAST STORED SCB STRING  R41C22191500
                                    (IV.RSINK=EV+P+(C-P-1)+1 = EV+C)   C22192000
                                     BXLE BELOW SETS NV.RSINK=EV+C+1 R4 22192500
MVKVNCB  LTR   RNUM,RNUM           TEST IF CALL FROM OTHER MOVE RTNER41 22193000
         BM    MVKVNCFS            BRANCH IF NOT                     R4 22193500
         BXLE  RSINK,RBY1,MVKPEYRR GO CHGE TO EMPTY STATE & RE-ENTER R4 22194000
         B     MVKZOFLO            IF R.U. FULL, GO SEND & RE-ENTER  R4 22194500
         SPACE 1                                                     R4 22195000
MVKVNMVC MVC   1(*-*,RSINK),0(RSCBL)  ** EXECUTE ONLY **            R41 22195500
         SPACE 1                                                     R4 22196000
MVKVNCFS BXH   RSINK,RBY1,MVKZFULL IF R.U. FULL GO SEND             R41 22196500
         ALR   RNUM,RBY1           TEST TYPE OF MOVE ROUTINE CALL   R41 22197000
         BC    ALDM,MVKPNCS        BRANCH IF SUSPEND-TYPE CALL      R41 22197500
         LA    RPLAN,MVKPEY        ELSE FULL SCB CALL--CHANGE TO    R41 22198000
         B     MVKEMITR             EMPTY STATE & GET NEXT EMISSION R41 22198500
         EJECT                                                       R4 22200500
*                                                                    R4 22201000
*           COMPRESSION PLANNER - NONCOMPRESS SCB STATE  (SUSPEND)   R4 22201500
*                                                                    R4 22202000
         SPACE 1                                                    R41 22202100
         BR    RFEED           -4  FEEDER-END ROUTINE DOESN'T EXIST,R41C22202200
                                    PLANNER-END ROUTINE IS NO-OP    R41 22202300
MVKPNCS  BALR  RPLAN,RFEED         CHGE TO NON-COMPRESS SUSPD STATE R41C22202400
                                    & RETURN FROM PLANNER-END RTNE  R41 22202500
         SPACE 1                                                    R41 22202600
         SLR   RNUM,RLSRCE         COMPUTE # OF OCCURRENCES LESS 1   R4 22203000
         L     RSCBL,SCWSCBL       RELOAD OLD SCB REMAINING CAPACITY R4 22203500
         BC    SLSP,MVKPNCS2       BRANCH IF DUP FACTOR GRTR THAN 1  R4 22204000
         SPACE 1                                                     R4 22204500
MVKPNCS1 L     RSINK,SCWSCBA       BACK UP TO OLD SUSPENDED SCB      R4 22205000
         ST    RCHAR,SCWSRCEB      SAVE ADDR OF STRING TO BE ADDED   R4 22205500
         LA    RPLAN,MVKPNC        CHNGE TO NORMAL NONCOMPRESS STATE R4 22206000
         BCT   RSCBL,MVKEMITR      ADV SCB COUNT & GET NEXT EMISSION R4 22206500
         LCR   RNUM,RBY1           IF SCB FULL SHOW NOTHING SAVED    R4 22207000
         B     MVKVNC              BRANCH TO NONCOMPRESS SCB MOVER   R4 22207500
         SPACE 1                                                     R4 22208000
MVKPNCS2 LA    RPLAN,MVKPEY        ANTICIPATE CHANGE TO EMPTY STATE  R4 22208500
         CLI   0(RCHAR),C' '       TEST SOURCE CHARACTER             R4 22209000
         BE    MVKVPR              DON'T REVIVE NONCOMP SCB IF PRIME R4 22209500
         CLR   RNUM,RSCBL          TEST IF EMISSION CAN FIT IN SCB   R4 22210000
         BNL   MVKVDU              DON'T REVIVE SCB IF NOT           R4 22210500
         CLR   RNUM,RBY1           COMPARE (DUP FACTOR - 1) WITH 1   R4 22211000
         BH    MVKVDU              DON'T REVIVE IF DUP FACTOR GT 2   R4 22211500
         BCTR  RCHAR,0             BACK UP TO 1ST OF PAIR OF CHARS   R4 22212000
         BCT   RSCBL,MVKPNCS1      DECREASE REMAINING SPACE IN SCB     C22212500
               (ALWAYS BRANCHES)    BY 1 & TREAT AS IF SINGLE CHAR.  R4 22213000
         TITLE 'HASP SNA REMOTE TERMINAL COMPACTION ROUTINES'       R41 22213500
*********************************************************************** 22214000
*                                                                     * 22214200
*               COMPACTION MOVER - NONCOMPRESSED SCB                  * 22214400
*                                                                     * 22214600
*   NOTATION - SEE 'MVKVNC' PROLOG                                    * 22214800
*                                                                     * 22215000
*   REGISTER CONTENTS AT ENTRY - SAME AS 'MVKVNC', PLUS               * 22215200
*      EV.RCPA  = (BITS 1-31) COMPACTION RACING STATUS                * 22215400
*                 A VALUE GREATER THAN 3 (BUT NEVER OVER 255)         * 22215600
*                 MEANS COMPACTION IS TO BEGIN AND CAUSES THIS        * 22215800
*                 ROUTINE TO EXIT DIRECTLY TO THE CONVERTER.          * 22216000
*                 (BIT 0) IF ON, RACING BEGAN WITHIN THIS NON-        * 22216200
*                 COMP SCB--SAVEWORDS 'SCWSCBNA' AND 'SCWSCBNS'       * 22216400
*                 CONTAIN THE NONCOMP SCB ADDRESS (= EV.RSINK)        * 22216600
*                 & THE SPACE LEFT IN SCB AT TIME RACE BEGAN.         * 22216800
*                                                                     * 22217000
*   DESIRED REGISTER CONTENTS AT EXIT - SAME AS 'MVKVNC', PLUS        * 22217200
*      NV.RCPA  = EV.RCPA                                             * 22217400
*                 EXCEPT IF SIGN BIT WAS ON, IT IS TURNED OFF.        * 22217600
*                 IF THIS OCCURS & THE RESULT IS NOT ZERO, SAVE-      * 22217800
*                 WORD 'SCWSCBCA' MUST BE SET FOR THE CONVERTER.      * 22218000
*      THE FOLLOWING IS REQUIRED ONLY IF NV.RCPA IS NOT ZERO.         * 22218200
*      NV.RSCBL = ADDRESS WHERE THE PRESENTLY RACING COMPACT          * 22218400
*                 SCB WOULD END IF FILLED TO MAXIMUM CAPACITY.        * 22218600
*                                                                     * 22218800
*   MAJOR ENTRY POINTS -                                              * 22219000
*      MVKWNC    AS FOR 'MVKVNC',                                     * 22219200
*      MVKWNCAL/X       'MVKVNCAL', AND                               * 22219400
*      MVKWNCI          'MVKVNCI'  IN PRECEDING ROUTINE.              * 22219600
*                                                                     * 22219800
*********************************************************************** 22220000
         SPACE 14                                                   R41 22220200
MVKWNCI  ST    RSINK,SCWSCBA       SAVE ADDRESS OF INTERRUPTED SCB  R41 22220400
         ST    RSCBL,SCWSCBL       SAVE NUMBER UNUSED BYTES IN SCB  R41 22220600
         LR    RCHAR,RCPA          SAVE RACE STATE & SETUP FLAG     R41 22220800
         SPACE 2                                                    R41 22221000
MVKWNCAX SLR   RCPA,RCPA           SHOW COMPACTION NOT COMPETING    R41 22221200
MVKWNCAL LA    RPLAN,MVKPEYV       OTHER MOVE ROUTINE ENTERS HERE TOR41C22221400
                                    TERMINATE NONCOMPRESS SCB. RNUM R41C22221600
                                     (DUP FACTOR - 1) IS 0 OR PLUS. R41 22221800
         EJECT                                                      R41 22222000
*                                                                   R41 22222200
*           COMPACTION MOVER - NONCOMP SCB TERMINATION ROUTINE      R41 22222400
*                                                                   R41 22222600
         SPACE 1                                                    R41 22222800
MVKWNC   L     RLCHAR,SCWSCBNC     GET  CA           (SCB CAPACITY) R41 22223000
         SLR   RLCHAR,RSCBL        GET  CA-(CA-C) = C   (SCB COUNT) R41 22223200
MVKWNC6  IC    RSCBL,0(,RSINK)     GET  P  (COUNT PREVIOUSLY MOVED) R41 22223400
         STC   RLCHAR,0(,RSINK)    STORE NEW SCB IN R.U.            R41 22223600
         ALR   RSINK,RSCBL         POINT PAST DATA PREVIOUSLY MOVED R41 22223800
         SLR   RLCHAR,RSCBL        DECREASE MOVE LENGTH BY  P       R41 22224000
         BC    NOT-SLSP,MVKWNCB    SKIP EXECUTE IF NOTHING TO MOVE  R41 22224200
         BCTR  RLCHAR,0            GET  C - P - 1  FOR MACHINE LTH  R41 22224400
         L     RSCBL,SCWSRCEB      RETRIEVE SOURCE STRING START ADDRR41 22224600
         EX    RLCHAR,MVKVNMVC     MOVE  C - P  CHARACTERS          R41 22224800
         LA    RSINK,1(RLCHAR,RSINK)  POINT PAST STORED SCB STRING  R41C22225000
                                   (IV.RSINK=EV+P+(C-P-1)+1 = EV+C) R41C22225200
                                    BXLE BELOW SETS NV.RSINK=EV+C+1 R41 22225400
MVKWNCB  LTR   RCPA,RCPA           TEST IF RACE BEGAN IN THIS SCB   R41 22225600
         BNP   MVKWNCR             BRANCH IF YES, OR NOT RACING     R41 22225800
MVKWNCBA L     RSCBL,SCWSCBCE      RESTORE PLANNED COMPACT SCB END  R41C22226000
                                    IN CASE RACING BEGAN ELSEWHERE  R41 22226200
         CL    RCPA,MVKQXVA        TEST RACING STATE VALIDITY       R41 22226400
         BNL   MVKWCA              ENTER COMPACTION IF INVALID      R41 22226600
MVKWNCD  LTR   RNUM,RNUM           TEST IF CALL FROM OTHER MOVE RTNER41 22226800
         BM    MVKWNCFS            BRANCH IF NOT                    R41 22227000
         BXLE  RSINK,RBY1,MVKQEYRR GO CHGE TO EMPTY STATE & RE-ENTERR41 22227200
         B     MVKZOFLO            IF R.U. FULL, GO SEND & RE-ENTER R41 22227400
         SPACE 2                                                    R41 22227600
MVKWNCFS BXH   RSINK,RBY1,MVKZFULL IF R.U. FULL GO SEND             R41 22227800
         ALR   RNUM,RBY1           TEST TYPE OF MOVE ROUTINE CALL   R41 22228000
         BC    ALDM,MVKQNCS        RETURN IF SUSPEND-TYPE CALL      R41 22228200
         LA    RPLAN,MVKQEY        ELSE FULL SCB CALL--CHANGE TO    R41 22228400
         B     MVKEMITR             EMPTY STATE & GET NEXT EMISSION R41 22228600
         SPACE 2                                                    R41 22228800
MVKWNCP  LA    RPLAN,MVKQEPM       CAUSE REPROCESS IN EMPTY STATE   R41 22229000
MVKWNCQ  BCTR  RSINK,0             BACK UP TO END OF STORED NC SCB  R41 22229200
         LTR   RCPA,RCPA           TEST RACING STATE                R41 22229400
         BP    MVKWNCBA            BR IF DID NOT BEGIN IN THIS SCB  R41 22229600
         SPACE 1                                                    R41 22229800
MVKWNCR  BZ    MVKWNCD             BRANCH IF NOT RACING             R41 22230000
         SL    RCPA,MVKQXINO       CLEAR RACE STATE OVERLAP FLAG    R41 22230200
         BC    SLSZ,MVKWNCD        BRANCH IF RACE CALLED OFF        R41 22230400
         L     RLCHAR,SCWSCBNC     GET NONCOMP SCB MAX CAPACITY     R41 22230600
         SL    RLCHAR,SCWSCBNS     SUBTR SPACE LEFT WHEN RACE BEGAN R41 22230800
         STC   RLCHAR,SCWSCBCA     SAVE NC LENGTH UP TO RACE START  R41 22231000
         L     RSCBL,SCWSCBNA                   CALC END OF FULL    R41 22231200
         LA    RSCBL,SCB+SCBMAXCT(RLCHAR,RSCBL)  CAPACITY COMP SCB  R41 22231400
         CLR   RSCBL,REND          ATTEMPT TO FIT FULL CAPACITY SCB R41 22231600
         BNH   MVKWNCRC            BRANCH IF CAN FIT                R41 22231800
         LR    RSCBL,REND          ELSE SUBSTITUTE END OF R.U.      R41 22232000
MVKWNCRC CL    RCPA,MVKQXVA        TEST RACE STATE VALIDITY         R41 22232200
         BL    MVKWNCD             DON'T START COMPACT YET IF VALID R41 22232400
         EJECT                                                      R41 22232600
*********************************************************************** 22232800
*                                                                     * 22233000
*      COMPACTION CONVERTER - CONVERT ALREADY-MOVED STRING CONTAIN-   * 22233200
*                             ING OTHER SCB TYPES TO COMPACTED FORM   * 22233400
*   OBJECTIVE -                                                       * 22233600
*        CONVERT A STRING OF NONCOMP, DUP, & PRIME DUP SCBS TO        * 22233800
*        COMPACTED FORM.  THIS ROUTINE IS NOT GENERAL & HANDLES       * 22234000
*        ONLY STRINGS OF SCBS WHICH THE EMPTY & NONCOMP PLANNERS      * 22234200
*        CONSTRUCT DURING RACING.                                     * 22234400
*                                                                     * 22234600
*   SAVEWORD AND REGISTER CONTENTS AT ENTRY -                         * 22234800
*        SCWSCBCA = (BITS 0-7) ZERO (RACE BEGAN IN EMPTY STATE),      * 22235000
*                             OR 63 (ADDING TO EXISTING COMP SCB)     * 22235200
*                   (BITS 8-23) ADDRESS OF COMPACTION SCB             * 22235400
*                   OR                                                * 22235600
*                   (BITS 0-7) 1-62 (RACE BEGAN WITHIN NONCOMP        * 22235800
*                               SCB) VALUE IS NONCOMPACT LENGTH       * 22236000
*                               UP TO POINT WHERE COMPACT STARTS      * 22236200
*                   (BITS 8-23) ADDRESS OF NONCOMPACT SCB             * 22236400
*        EV.REND  = ... (DON'T CARE)                                  * 22236600
*        EV.RSINK = ADDRESS OF LAST BYTE TO BE CONVERTED.             * 22236800
*        EV.RSCBL = ADDRESS WHERE COMPACT SCB WILL END IF             * 22237000
*                   FILLED TO MAXIMUM CAPACITY                        * 22237200
*        EV.RPLAN = ... (DON'T CARE)                                  * 22237400
*        EV.RCPA  = (BITS 0-23) ZERO (BITS 24-31 = DON'T CARE)        * 22237600
*        EV.RCHAR = POINTER & DUP FACTOR FOR CURRENT EMISSION,        * 22237800
*         & RNUM    PASSED UNCHANGED TO COMPACTION PLANNER.           * 22238000
*        EV.RLCHAR= (BITS 0-23) ZERO (BITS 24-31 = DON'T CARE)        * 22238200
*                                                                     * 22238400
*   DESIRED SAVEWORD AND REGISTER CONTENTS AT EXIT -                  * 22238600
*        SCWSCBCA = ADDRESS OF COMPACTION SCB IN ALL CASES            * 22238800
*        NV.REND  = EV.RSCBL (LIMITS BXLE/BXH IN COMPACT STATE)       * 22239000
*        NV.RSINK = EV.RSINK     ON EXIT TO  ODD COMPACT STATE        * 22239200
*                 = EV.RSINK + 1 ON EXIT TO EVEN COMPACT STATE        * 22239400
*        NV.RSCBL = 0  CLEARED FOR USE AS WORK REGISTER 'RCPZ'        * 22239600
*        NV.RPLAN = ADDRESS OF EVEN OR ODD COMPACTION PLANNER         * 22239800
*        NV.RCPA  = (BITS 0-23) ZERO (BITS 24-31 = DON'T CARE)        * 22240000
*        NV.RLCHAR= (BITS 0-23) ZERO (BITS 24-31 = DON'T CARE)        * 22240200
*                                                                     * 22240400
*   =/ NOTE /= - IN COMPACTION CODE, ANY NUMBER APPEARING IN A        * 22240600
*        SYMBOLIC LABEL REFERS TO THE STATE BEING HANDLED AT          * 22240800
*        THAT POINT.  STATE NUMBERS ARE DESCRIBED IN PROLOG           * 22241000
*        PRECEDING COMPACTION EMPTY STATE PLANNER 'MVKQEY'.           * 22241200
*                                                                     * 22241400
*********************************************************************** 22241600
         EJECT                                                      R41 22241800
MVKWCA   ALR   RNUM,RLSRCE         BACK OUT DUP FACTOR CALCULATION  R41 22242000
         LR    REND,RSINK          SET UP LOOP CONTROL FOR          R41 22242200
         L     RSINK,SCWSCBCA       RESCANNING STORED STRING        R41 22242400
         TM    SCWSCBCA,SCBMAXCT   TEST FOR OVERLAP CONDITIONS      R41 22242600
         BZ    MVKWC0              BR IF RACE BEGAN IN EMPTY STATE  R41 22242800
         BO    MVKWC10             BR IF ADDING TO A COMPACTION SCB R41 22243000
         IC    RCPA,SCWSCBCA       ELSE COMPACTION SCB BEGAN WITHIN R41 22243200
         IC    RLCHAR,0(,RSINK)     NONCOMP SCB--PICK UP OLD LENGTH R41 22243400
         STC   RCPA,0(,RSINK)      STORE NEW LTH SHORTENED BY OVLAP R41 22243600
         LA    RSINK,SCB(RCPA,RSINK)  CALC COMPACTION               R41 22243800
         ST    RSINK,SCWSCBCA          SCB START ADDRESS            R41 22244000
         SLR   RLCHAR,RCPA         OLD LENGTH - NEW LENGTH = OVERLAPR41 22244200
         BCT   RLCHAR,MVKWC6       BRANCH IF OVERLAP OF AT LEAST 2  R41 22244400
         IC    RCPA,0(,RSINK)      FETCH MASTER FROM LAST BYTE OF   R41 22244600
         IC    RCPA,CPTCTT(RCPA)    NC STRING & XLATE TO 8-BIT FORM R41 22244800
         B     MVKWC1R             GO CONVERT FOLLOWING SCB         R41 22245000
         SPACE 2                                                    R41 22245200
MVKWC6   TR    0(2,RSINK),CPTCTT   TRANSLATE 2 MASTERS IN PLACE     R41 22245400
         PACK  0(1,RSINK),0(1,RSINK)  GET 1ST MASTER IN LEFT NIBBLE R41 22245600
         NC    1(1,RSINK),0(RSINK) FORM MASTER PAIR                 R41 22245800
         ALR   RSINK,RBY1          ADJUST POINTERS & GO             R41 22246000
         BCT   RLCHAR,MVKWC6D       SIMULATE NONCOMP SCB            R41 22246200
         B     MVKWC2S             IF WERE EXACTLY 2, GET NEXT SCB  R41 22246400
         SPACE 2                                                    R41 22246600
MVKWC0   TM    0(RSINK),SCBDUPLC   TEST FIRST SCB TO BE CONVERTED   R41 22246800
         BZ    MVKWC1C             BRANCH IF NONCOMP/NONDUP SCB     R41 22247000
         IC    RCPA,CPTCTT+SCSBLANK  ANTICIPATE PRIME WITH COUNT 1  R41 22247200
         BNO   MVKWC1R             BRANCH IF PRIME DUP              R41 22247400
         IC    RCPA,1(,RSINK)      ELSE TRANSLATE MASTER            R41 22247600
         IC    RCPA,CPTCTT(RCPA)    TO 8-BIT COMPACT FORM           R41 22247800
         CLI   0(RSINK),SCBDUPLC+2 SET COND CODE FOR COUNT 2 OR 3   R41 22248000
         BXLE  RSINK,RBY1,MVKWC0QA ADVANCE POINTER PAST SCB LOC &   R41C22248200
               (ALWAYS BRANCHES)    HANDLE REMAINING 2 OR 3 MASTERS R41 22248400
         SPACE 2                                                    R41 22248600
MVKWC10  LR    RPLAN,RSINK         SAVE ADDR OF OLD COMPACT SCB     R41 22248800
         NI    0(RSINK),SCBMAXCT   USE OLD COMPACT                  R41 22249000
         IC    RCPA,0(,RSINK)       SCB COUNT TO FIND               R41 22249200
         LA    RSINK,SCB(RCPA,RSINK) STRING TO BE CONVERTED         R41 22249400
         TM    0(RSINK),SCBDUPLC-SCBPRIME+4  TEST 1ST SCB (MUST BE  R41C22249600
                                             PRIME 3 OR DUP 3 OR 5) R41 22249800
         BNM   MVKWC2U             FINISH HANDLING PRIME 3 OR DUP 5 R41 22250000
         SPACE 1                                                    R41 22250200
MVKWC10B MVI   SCBMAXCT(RPLAN),SCBDUPLC+5  MAKE DUP 3 LOOK LIKE 5   R41 22250400
         MVI   0(RPLAN),SCBMAXCT   SHOW SCB NOW FULL                R41 22250600
         LA    RSINK,SCB+SCBMAXCT(,RPLAN)  COMPUTE START ADDRESS    R41 22250800
         ST    RSINK,SCWSCBCA               OF NEXT COMPACTION SCB  R41 22251000
         BCT   RSINK,MVKWC2W       BACK UP TO 'DUP 5' SCB & CONVERT R41C22251200
               (ALWAYS BRANCHES)    TO 2 PAIRS + ODD M--2ND COMPACT R41C22251400
                                     SCB COVERS 1 PAIR GIVING 3 M'S R41 22251600
         EJECT                                                      R41 22251800
MVKWC1C  IC    RLCHAR,0(,RSINK)    GET LENGTH OF NONCOMP/NONDUP SCB R41 22252000
         STC   RCPA,0(,RSINK)      REPLACE WITH ODD MASTER IF ANY   R41 22252200
MVKWC6D  IC    RCPA,0(RLCHAR,RSINK)  SAVE COPY OF LAST BYTE IN REG  R41 22252400
         SLR   RLCHAR,RBY1         DECREMENT FOR MACHINE LENGTH     R41 22252600
         EX    RLCHAR,MVKWCATR     TRANSLATE TO 8-BIT COMPACTED     R41 22252800
         LA    RSINK,1(RLCHAR,RSINK)  POINT TO END OF SCB STRING    R41 22253000
         LA    RPLAN,CPTCAT(RCPA)  TEST ATTRIBUTE OF                R41 22253200
         CLI   0(RPLAN),CPTMST      LAST BYTE IN STRING             R41 22253400
         BL    MVKWC2S             BRANCH IF NOT A MASTER           R41 22253600
         IC    RCPA,0(,RSINK)      SAVE 8-BIT TRANSLATED ODD MASTER R41 22253800
MVKWC3E  CLR   RSINK,REND          CHGE TO ODD COMPACT STATE        R41 22254000
         BNL   MVKWC11Z             IF STORED STRING EXHAUSTED      R41 22254200
MVKWC3F  TM    1(RSINK),SCBDUPLC   TEST SCB TYPE (CANNOT BE NONDUP) R41 22254400
         BO    MVKWC3H             BRANCH IF NON-PRIME DUP SCB      R41 22254600
         CLI   CPTCAT+SCSBLANK,CPTPMST  TEST PRIME CHAR ATTRIBUTE   R41 22254800
         BE    MVKWC3G             BRANCH IF PRIME IS A MASTER      R41 22255000
         STC   RCPA,0(,RSINK)      ELSE STORE ODD MASTER AS 8 BITS  R41 22255200
         IC    RCPA,CPTCTT+SCSBLANK  TRANSLATE PRIME TO             R41 22255400
         STC   RCPA,1(,RSINK)         8-BIT EQUIV & STORE           R41 22255600
         BXLE  RSINK,RBY1,MVKWC2S  ADVANCE POINTER OVER SCB LOC &   R41C22255800
               (ALWAYS BRANCHES)    CONTINUE IN EVEN COMPACT STATE  R41 22256000
         SPACE 1                                                    R41 22256200
MVKWC3G  IC    RLCHAR,MVKQXMF(RCPA)  MOVE ODD MSTR INTO LEFT NIBBLE R41 22256400
         IC    RCPA,CPTCTT+SCSBLANK  TRANSLATE PRIME TO 8-BIT EQUIV R41 22256600
         NR    RLCHAR,RCPA         FORM & STORE                     R41 22256800
         STC   RLCHAR,0(,RSINK)     MASTER PAIR                     R41 22257000
         CLI   1(RSINK),SCBPRIME+3 SET C.C. FOR COUNT 2, 3, OR 4    R41 22257200
         BXLE  RSINK,RBY1,MVKWC2Q  RESET PTR TO ORIGINAL SCB LOC &  R41C22257400
               (ALWAYS BRANCHES)    HANDLE REMAINING 1 2 OR 3 MSTRS R41 22257600
         SPACE 1                                                    R41 22257800
MVKWC3H  CLI   1(RSINK),SCBDUPLC+2 TEST SCB COUNT (2, 4, 5, OR 6)   R41 22258000
         BE    MVKWC3I             IF 2, HANDLE DOUBLE NON-MASTER   R41 22258200
         IC    RLCHAR,MVKQXMF(RCPA)  MOVE ODD MSTR INTO LEFT NIBBLE R41 22258400
         IC    RCPA,2(,RSINK)      TRANSLATE NON-PRIME DUP          R41 22258600
         IC    RCPA,CPTCTT(RCPA)    TO 8-BIT COMPACT EQUIVALENT     R41 22258800
         NR    RLCHAR,RCPA         FORM & STORE                     R41 22259000
         STC   RLCHAR,0(,RSINK)     MASTER PAIR                     R41 22259200
         CLI   1(RSINK),SCBDUPLC+5 SET C.C. FOR COUNT 4, 5, OR 6    R41 22259400
         BXLE  RSINK,RBY1,MVKWC2W  ADVANCE POINTER OVER SCB LOC &   R41C22259600
               (ALWAYS BRANCHES)    HANDLE REMAINING 3 4 OR 5 MSTRS R41 22259800
         SPACE 1                                                    R41 22260000
MVKWC3I  STC   RCPA,0(,RSINK)      STORE PENDING ODD MASTER         R41 22260200
         ALR   RSINK,RBY1          ADVANCE POINTER OVER SCB LOC     R41 22260400
         IC    RCPA,1(,RSINK)      TRANSLATE NON-PRIME DUP          R41 22260600
         IC    RCPA,CPTCTT(RCPA)    TO 8-BIT COMPACT EQUIVALENT     R41 22260800
MVKWC2J  STC   RCPA,0(,RSINK)      STORE 1ST OF 2 NON-MASTERS       R41 22261000
         ALR   RSINK,RBY1          ADVANCE POINTER OVER DUP CHAR    R41 22261200
MVKWC2K  STC   RCPA,0(,RSINK)      STORE TRANSLATED NON-MASTER      R41 22261400
         BXLE  RSINK,RBY1,MVKWC2T  GO FETCH NEXT SCB IF MORE TO DO  R41 22261600
MVKWC10M LR    REND,RSCBL          USE END OF SCB TO LIMIT LOOP     R41 22261800
         SLR   RCPZ,RCPZ           CLEAR WORK REG FOR COMPACTION    R41 22262000
         LA    RPLAN,MVKQCA10      CHANGE TO EVEN                   R41 22262200
         BR    RPLAN                COMPACTION STATE                R41 22262400
         EJECT                                                      R41 22262600
MVKWC1N  IC    RCPA,1(,RSINK)      TRANSLATE NON-PRIME DUP          R41 22262800
         IC    RCPA,CPTCTT(RCPA)    TO 8-BIT COMPACT EQUIVALENT     R41 22263000
         NR    RLCHAR,RCPA         ODD MASTER & NEW CHAR FORM PAIR  R41 22263200
         CLI   0(RSINK),SCBDUPLC+3 SET C.C. FOR COUNT = 2, 3 OR 4   R41 22263400
         STC   RLCHAR,0(,RSINK)    STORE MASTER PAIR                R41 22263600
         BXLE  RSINK,RBY1,MVKWC2Q  ADVANCE PTR TO DUP CHAR LOC &    R41C22263800
               (ALWAYS BRANCHES)    HANDLE REMAINING 1 2 OR 3 MSTRS R41 22264000
         SPACE 2                                                    R41 22264200
MVKWC2P  IC    RCPA,CPTCTT+SCSBLANK  TRANSLATE PRIME TO 8-BIT EQUIV R41 22264400
         CLI   CPTCAT+SCSBLANK,CPTPMST  TEST PRIME CHAR ATTRIBUTE   R41 22264600
         BNE   MVKWC2K             IF PRIME NOT MSTR ASSUME COUNT=1 R41 22264800
         CLI   0(RSINK),SCBPRIME+2 TEST REMAINING COUNT = 1, 2 OR 3 R41 22265000
MVKWC2Q  BL    MVKWC3E             BRANCH IF REMAINING COUNT WAS 1  R41 22265200
MVKWC0QA IC    RLCHAR,MVKQXMM(RCPA)  STORE 4-BIT                    R41 22265400
MVKWC2QB STC   RLCHAR,0(,RSINK)       MASTER PAIR                   R41 22265600
         BE    MVKWC2S             TRY FOR NEXT SCB IF COUNT WAS 2, R41C22265800
                                    ELSE SHIFT TO ODD COMPACT STATE R41 22266000
MVKWC1R  BXH   RSINK,RBY1,MVKWC11Z ENTER ODD COMPACT STATE IF DONE  R41 22266200
         TM    0(RSINK),SCBDUPLC   TEST SCB TYPE                    R41 22266400
         BZ    MVKWC1C             BRANCH IF NONCOMP/NONDUP SCB     R41 22266600
         IC    RLCHAR,MVKQXMF(RCPA)  GET ODD MASTER IN LEFT NIBBLE  R41 22266800
         BO    MVKWC1N             BRANCH IF NON-PRIME DUP SCB      R41 22267000
         IC    RCPA,CPTCTT+SCSBLANK  FORM PAIR FROM ODD             R41 22267200
         NR    RLCHAR,RCPA            MASTER & PRIME CHAR           R41 22267400
         CLI   0(RSINK),SCBPRIME+1 SET C.C. FOR COUNT = 1 OR 2      R41 22267600
         STC   RLCHAR,0(,RSINK)    STORE MASTER PAIR                R41 22267800
         BH    MVKWC1R             IF ODD MSTR LEFT OVER, HANDLE IT R41 22268000
MVKWC2S  BXH   RSINK,RBY1,MVKWC10M ENTER EVEN COMPACT STATE IF DONE R41 22268200
MVKWC2T  TM    0(RSINK),SCBDUPLC   TEST SCB TYPE (CANNOT BE NONDUP) R41 22268400
MVKWC2U  BNO   MVKWC2P             BRANCH IF PRIME DUP SCB          R41 22268600
MVKWC2V  IC    RCPA,1(,RSINK)      TRANSLATE NON-PRIME DUP          R41 22268800
         IC    RCPA,CPTCTT(RCPA)    TO 8-BIT COMPACT EQUIVALENT     R41 22269000
         CLI   0(RSINK),SCBDUPLC+2 TEST SCB COUNT (2, 3, 4, OR 5)   R41 22269200
         BE    MVKWC2J             IF 2, HANDLE DOUBLE NON-MASTER   R41 22269400
         CLI   0(RSINK),SCBDUPLC+4 SET COND CODE FOR COUNT 3 4 OR 5 R41 22269600
MVKWC2W  IC    RLCHAR,MVKQXMM(RCPA)  STORE 4-BIT MASTER             R41 22269800
         STC   RLCHAR,0(,RSINK)       PAIR OVER SCB LOC             R41 22270000
         LA    RSINK,1(,RSINK)     ADVANCE POINTER OVER DUP CHAR    R41 22270200
         BNL   MVKWC2QB            IF 2 OR 3 LEFT GO STORE 2ND PAIR R41 22270400
         CLR   RSINK,REND          TEST IF STORED STRING EXHAUSTED  R41 22270600
         BL    MVKWC3F             GO FETCH NEXT SCB IF MORE TO DO  R41 22270800
MVKWC11Z LR    REND,RSCBL          USE END OF SCB TO LIMIT LOOP     R41 22271000
         SLR   RCPZ,RCPZ           CLEAR WORK REG FOR COMPACTION    R41 22271200
         LA    RPLAN,MVKQCA11      ENTER ODD-MASTER                 R41 22271400
         BR    RPLAN                COMPACTION STATE                R41 22271600
         SPACE 3                                                    R41 22271800
MVKWCATR TR    1(*-*,RSINK),CPTCTT XLATE TO 8-BIT COMPACT *EXECUTE* R41 22272000
         EJECT                                                      R41 22272200
*                                                                   R41 22272400
*           COMPACTION PLANNER - NONCOMPRESS SCB STATE  (SUSPEND)   R41 22272600
*                                                                   R41 22272800
         SPACE 1                                                    R41 22273000
MVKQNCS  LR    RCPA,RCHAR          RESTORE COMPACTION RACING STATE  R41 22273200
         NOPR  0               -4  FEEDER-END ROUTINE DOESN'T EXIST,R41C22273400
                                    PLANNER-END ROUTINE IS NO-OP    R41 22273600
         BALR  RPLAN,RFEED         CHGE TO NON-COMPRESS SUSPD STATE R41C22273800
                                    & RETURN FROM PLANNER END RTNE  R41 22274000
         SPACE 1                                                    R41 22274200
         L     RSCBL,SCWSCBL       RETRIEVE OLD SCB UNUSED CAPACITY R41 22274400
         SPACE 1                                                    R41 22274600
MVKQNCSA IC    RGO,0(,RCHAR)       PICK UP ATTRIBUTE OF EMITTED     R41 22274800
         IC    RGO,CPTCAT(RGO)      CHARACTER FROM COMPACTION TABLE R41 22275000
         L     RGO,MVKQNCST(RGO)   USE AS INDEX INTO ADDRESS TABLE  R41 22275200
         SLR   RNUM,RLSRCE         COMPUTE # OF OCCURRENCES LESS 1  R41 22275400
         BR    RGO                 BRANCH WITH CONDITION CODE SET   R41 22275600
         SPACE 2                                                    R41 22275800
MVKQNCST DS    0F           *SUSP* NON-COMP STATE ATTRIBUTE HANDLERSR41 22276000
         DC    A(MVKQNSX)          NONPRIME NOT IN COMPACTION TABLE R41 22276200
         DC    A(MVKQNTX)          PRIME    NOT IN COMPACTION TABLE R41 22276400
         DC    A(MVKQNSN)          NONPRIME COMPACTIBLE NON-MASTER  R41 22276600
         DC    A(MVKQNTN)          PRIME    COMPACTIBLE NON-MASTER  R41 22276800
         DC    A(MVKQNSM)          NONPRIME MASTER                  R41 22277000
         DC    A(MVKQNTM)          PRIME    MASTER                  R41 22277200
         SPACE 6                                                    R41 22277400
MVKQNSXX BXH   RSINK,RBY1,MVKZOFLO SEND & RE-ENTER IF NO SPACE LEFT R41 22277600
         L     RSCBL,SCWSCBL       RETRIEVE OLD SCB UNUSED CAPACITY R41 22277800
         SPACE 1                                                    R41 22278000
MVKQNSX  BC    SLSP,MVKQNSXD       BRANCH IF MORE THAN SINGLE .X.   R41 22278200
MVKQNSXA SLR   RCPA,RCPA           SHOW COMPACTION NOT COMPETING    R41 22278400
MVKQNSXB L     RSINK,SCWSCBA       RETRIEVE SUSPENDED SCB ADDRESS   R41 22278600
MVKQNSXC ST    RCHAR,SCWSRCEB      SAVE STRING START ADDR FOR MOVER R41 22278800
         LA    RPLAN,MVKQNC        CHANGE TO NORMAL NONCOMP STATE   R41 22279000
         BCT   RSCBL,MVKEMITR      ADV SCB COUNT & GET NXT EMISSION R41 22279200
         LCR   RNUM,RBY1           IF SCB FULL, KILL DUP FACTOR TO  R41 22279400
         B     MVKWNC               SHOW EMISSION HANDLED & END SCB R41 22279600
         SPACE 3                                                    R41 22279800
MVKQNSXD LA    RPLAN,MVKQEY        ANTICIPATE CHANGE TO EMPTY STATE R41 22280000
         CLR   RNUM,RBY1           IF 3 OR MORE OCCURRENCES         R41 22280200
         BH    MVKWDU0              DON'T REVIVE SCB--GEN DUP       R41 22280400
         CLR   RNUM,RSCBL          IF EMISSION WON'T FIT            R41 22280600
         BNL   MVKWDU0              DON'T REVIVE SCB--GEN DUP       R41 22280800
         BCTR  RCHAR,0             BACK UP TO 1ST OF PAIR OF CHARS  R41 22281000
         BCT   RSCBL,MVKQNSXA      DECREASE REMAINING SPACE IN SCB  R41C22281200
               (ALWAYS BRANCHES)    BY 1 & TREAT AS IF SINGLE CHAR. R41 22281400
         EJECT                                                      R41 22281600
MVKQNTXX BXH   RSINK,RBY1,MVKZOFLO SEND & RE-ENTER IF NO SPACE LEFT R41 22281800
         L     RSCBL,SCWSCBL       RETRIEVE OLD SCB UNUSED CAPACITY R41 22282000
MVKQNTX  BC    SLSZ,MVKQNSXA       REVIVE SCB IF ONLY 1 OCCURRENCE  R41 22282200
MVKQNTXA LA    RPLAN,MVKQEY        ELSE CHANGE TO EMPTY STATE       R41 22282400
         B     MVKWPR0             DON'T REVIVE SCB, GEN PRIME      R41 22282600
         SPACE 3                                                    R41 22282800
MVKQNSN  BC    SLSZ,MVKQNTNA       BRANCH IF HANDLING SINGLE .N.    R41 22283000
         LA    RPLAN,MVKQEY        ANTICIPATE CHANGE TO EMPTY STATE R41 22283200
         CLR   RNUM,RBY1           IF 3 OR MORE OCCURRENCES         R41 22283400
         BH    MVKWDU0              DON'T REVIVE SCB--GEN DUP       R41 22283600
         OR    RCPA,RBY1           FORCE NO-RACE STATE, EXCEPT      R41 22283800
         SLR   RCPA,RBY1            SET STANDOFF STATE FOR CASES    R41C22284000
                                     STANDOFF/.NN. OR AHEAD/.NN.    R41 22284200
         LA    RPLAN,MVKVDU        ANTICIPATE NO FIT, EXIT FOR DUP  R41 22284400
         CLR   RNUM,RSCBL          IF EMISSION WON'T FIT            R41 22284600
         BNL   MVKWNCQ              REPROCESS IN EMPTY STATE        R41 22284800
         BCTR  RCHAR,0             BACK UP TO 1ST OF PAIR OF CHARS  R41 22285000
         BCT   RSCBL,MVKQNSXB      DECREASE REMAINING SPACE IN SCB  R41C22285200
               (ALWAYS BRANCHES)    BY 1 & TREAT AS IF SINGLE CHAR. R41 22285400
         SPACE 3                                                    R41 22285600
MVKQNTN  BC    SLSP,MVKQNTXA       GEN PRIME SCB FOR MULTIPLE .P.   R41 22285800
MVKQNTNA OR    RCPA,RBY1           FORCE NO-RACE STATE, EXCEPT      R41 22286000
         SLR   RCPA,RBY1            SET STANDOFF STATE FOR CASES    R41 22286200
         B     MVKQNSXB              STANDOFF/.N. OR AHEAD/.N.      R41 22286400
         SPACE 3                                                    R41 22286600
MVKQNTM  BC    SLSP,MVKWNCP        DON'T REVIVE SCB IF MULTIPLE .P. R41 22286800
MVKQNTMA ST    RCHAR,SCWSRCEB      SAVE STRING START ADDR FOR MOVER R41 22287000
         L     RSINK,SCWSCBA       RETRIEVE SUSPENDED SCB ADDRESS   R41 22287200
         LA    RPLAN,MVKQNC        REVERT TO NORMAL NONCOMPACT STATER41 22287400
         B     MVKQNOMA            GO HANDLE UNDER REVIVED NC SCB   R41 22287600
         EJECT                                                      R41 22287800
*********************************************************************** 22288000
*                                                                     * 22288200
*                 COMPACTION MOVERS - COMPACT SCB                     * 22288400
*                                                                     * 22288600
*   MAJOR ENTRY POINTS -                                              * 22288800
*      MVKWCT    NORMAL SCB TERMINATION ROUTINE.  STORES SCB.         * 22289000
*      MVKWCTAL  ENTRY POINTS TO NORMAL TERMINATION ROUTINE           * 22289200
*         & -ZL  USED WHEN SCB ENDED BY PRIME/DUPLICATE SCB.          * 22289400
*      MVKWCTI   SCB INTERRUPT ROUTINE FOR 'EVEN' COMPACT             * 22289600
*                STATE (NO UNPAIRED MASTER).  STORES SCB LIKE         * 22289800
*                TERMINATION ROUTINE, BUT ALSO PRESERVES REG          * 22290000
*                CONTENTS NEEDED TO ADD DATA TO THE SAME SCB          * 22290200
*                FROM NEXT SOURCE STRING.  GETS CONTROL VIA           * 22290400
*                FEEDER-END BRANCH, RETURNS ON REG 'RFEED'.           * 22290600
*      MVKWCTIZ  SCB INTERRUPT ROUTINE FOR 'ODD' COMPACT              * 22290800
*                STATE (UNPAIRED 'ODD' MASTER PRESENT).  LIKE         * 22291000
*                'MVKWCTI' EXCEPT THAT ODD MASTER IS STORED           * 22291200
*                IN 8-BIT FORM AND INCLUDED IN THE SCB COUNT.         * 22291400
*      MVKWCX    SCB TERMINATION AND INTERRUPT ROUTINE FOR            * 22291600
*                'ODD' COMPACT STATE IN 16-MASTER MODE.  LIKE         * 22291800
*                'MVKWCTIZ' EXCEPT THAT ODD MASTER IS USED TO         * 22292000
*                BEGIN A NONCOMP SCB & IS NOT INCLUDED IN THE         * 22292200
*                SCB COUNT.  WHEN NONCOMP SCB CAN'T BE BEGUN          * 22292400
*                BECAUSE ONLY 1 BYTE REMAINS IN R.U., THE ODD         * 22292600
*                MASTER IS SAVED (FOR REPROCESSING IN NEXT            * 22292800
*                R.U.) AND THE 'SCWODDMF' FLAG IS SET.                * 22293000
*                                                                     * 22293200
*********************************************************************** 22293400
         SPACE 2                                                    R41 22293600
MVKWCTI  ST    REND,SCWSCBCE       SAVE LONGEST ALLOWED SCB END LOC R41 22293800
         SPACE 1                                                    R41 22294000
MVKWCTAL SLR   RSINK,RBY1          BACK UP TO END OF SCB STRING     R41 22294200
MVKWCTZL LA    RPLAN,MVKPEYV       OTHER MOVE ROUTINE ENTERS HERE   R41C22294400
                                    TO TERMINATE COMPACT SCB.  RNUM R41C22294600
                                     (DUP FACTOR - 1) IS 0 OR PLUS. R41 22294800
         SPACE 1                                                    R41 22295000
MVKWCT   SLR   RCPA,RCPA           SHOW COMPACTION NOT COMPETING    R41 22295200
MVKWCT01 L     REND,SCWSCBCA       GET LOC OF COMPACTION SCB        R41 22295400
         LCR   RSCBL,REND                  CALCULATE                R41 22295600
         LA    RSCBL,SCBCPACT(RSINK,RSCBL)  SCB LENGTH              R41 22295800
         STC   RSCBL,0(,REND)                & STORE IT             R41 22296000
         L     REND,SCWRUEND       RESTORE END OF R.U. ADDRESS      R41 22296200
         LTR   RNUM,RNUM           TEST IF CALL FROM OTHER MOVE RTNER41 22296400
         BM    MVKWCTFS            BRANCH IF NOT                    R41 22296600
         BXLE  RSINK,RBY1,MVKQEYRR GO CHGE TO EMPTY STATE & RE-ENTERR41 22296800
         B     MVKZOFLO            IF R.U. FULL, GO SEND & RE-ENTER R41 22297000
         SPACE 1                                                    R41 22297200
MVKWCTFS BXH   RSINK,RBY1,MVKZFULL IF R.U. FULL GO SEND             R41 22297400
         ALR   RNUM,RBY1           TEST TYPE OF MOVE ROUTINE CALL   R41 22297600
         BC    ALDM,MVKQCAS        RETURN IF SUSPEND-TYPE CALL      R41 22297800
         LA    RPLAN,MVKQEY        ELSE FULL SCB CALL--CHANGE TO    R41 22298000
         B     MVKEMITR             EMPTY STATE & GET NEXT EMISSION R41 22298200
         EJECT                                                      R41 22298400
*                                                                   R41 22298600
*           COMPACTION PLANNER - COMPACTION SCB STATE  (SUSPEND)    R41 22298800
*                                                                   R41 22299000
         SPACE 1                                                    R41 22299200
         NOPR  0               -4  FEEDER-END ROUTINE DOESN'T EXIST,R41C22299400
                                    PLANNER-END ROUTINE IS NO-OP    R41 22299600
         SPACE 1                                                    R41 22299800
MVKQCAS  BALR  RPLAN,RFEED         CHANGE TO COMPACT SUSPEND STATE  R41C22300000
                                    & RETURN FROM PLANNER-END RTNE  R41 22300200
         SPACE 1                                                    R41 22300400
         IC    RGO,0(,RCHAR)       PICK UP 8-BIT COMPACTION         R41 22300600
         IC    RCPA,CPTCTT(RGO)     FORM OF EMITTED CHARACTER       R41 22300800
         IC    RGO,CPTCAT(RGO)     PICK UP ATTRIBUTE OF EMITTED CHARR41 22301000
         LA    RPLAN,MVKQEY        ANTICIPATE CHANGE TO EMPTY STATE R41 22301200
         L     RGO,MVKQCAST(RGO)   USE AS INDEX INTO ADDRESS TABLE  R41 22301400
         SLR   RNUM,RLSRCE         COMPUTE # OF OCCURRENCES LESS 1  R41 22301600
         BR    RGO                 BRANCH WITH CONDITION CODE SET   R41 22301800
         SPACE 2                                                    R41 22302000
MVKQCAST DS    0F      *EVEN,SUSP* COMPACT STATE ATTRIBUTE HANDLERS R41 22302200
         DC    A(MVKQEOX)          NONPRIME NOT IN COMPACTION TABLE R41 22302400
         DC    A(MVKWPR0)          PRIME    NOT IN COMPACTION TABLE R41 22302600
         DC    A(MVKQCSN)          NONPRIME COMPACTIBLE NON-MASTER  R41 22302800
         DC    X'80',AL3(MVKQCSN)  PRIME    COMPACTIBLE NON-MASTER  R41 22303000
         DC    A(MVKQCSM)          NONPRIME MASTER                  R41 22303200
         DC    A(MVKQCTM)          PRIME    MASTER                  R41 22303400
         SPACE 6                                                    R41 22303600
*                                                                   R41 22303800
*           COMPACTION MOVER - COMPACT SCB (SUSPEND IN ODD STATE)   R41 22304000
*                                                                   R41 22304200
         SPACE 1                                                    R41 22304400
MVKWCTIZ CLI   CPTNMAST,16         TEST FOR 16 MASTERS SPECIAL CASE R41 22304600
         BNL   MVKWCX              BRANCH IF PRESENT                R41 22304800
         STC   RCPA,0(,RSINK)      STORE ODD MASTER IN 8-BIT FORM   R41 22305000
         L     REND,SCWSCBCA       GET LOC OF COMPACTION SCB        R41 22305200
         LCR   RSCBL,REND                  CALCULATE                R41 22305400
         LA    RSCBL,SCBCPACT(RSINK,RSCBL)  SCB LENGTH              R41 22305600
         STC   RSCBL,0(,REND)                & STORE IT             R41 22305800
         ALR   RSINK,RBY1          UPDTE POINTER FOR 'RPLRLEN' CALC R41 22306000
         EJECT                                                      R41 22306200
*                                                                   R41 22306400
*           COMPACTION PLANNER - COMPACT SCB STATE  (ODD SUSPEND)   R41 22306600
*                                                                   R41 22306800
         SPACE 1                                                    R41 22307000
         NOPR  0               -4  FEEDER-END ROUTINE DOESN'T EXIST,R41C22307200
                                    PLANNER-END ROUTINE IS NO-OP    R41 22307400
MVKQCASZ BALR  RPLAN,RFEED         CHNGE TO ODD COMPACT SUSPD STATE R41C22307600
                                    & RETURN FROM PLANNER-END RTNE  R41 22307800
         SLR   RCPZ,RCPZ           CLEAR COMPACTION WORK REG        R41 22308000
         IC    RGO,0(,RCHAR)       PICK UP 8-BIT COMPACTION         R41 22308200
         IC    RCPZ,CPTCTT          FORM OF EMITTED CHARACTER       R41 22308400
         IC    RGO,CPTCAT(RGO)     PICK UP ATTRIBUTE OF EMITTED CHARR41 22308600
         LA    RPLAN,MVKQEY        ANTICIPATE CHANGE TO EMPTY STATE R41 22308800
         L     RGO,MVKQCASU(RGO)   USE AS INDEX INTO ADDRESS TABLE  R41 22309000
         SLR   RNUM,RLSRCE         COMPUTE # OF OCCURRENCES LESS 1  R41 22309200
         BCTR  RSINK,RGO           BACK UP TO 8-BIT ODD MASTER LOC  R41C22309400
               (ALWAYS BRANCHES)    & BRANCH WITH CONDITION CODE SETR41 22309600
         SPACE 2                                                    R41 22309800
MVKQCASU DS    0F       *ODD,SUSP* COMPACT STATE ATTRIBUTE HANDLERS R41 22310000
         DC    A(MVKQEOXZ)         NONPRIME NOT IN COMPACTION TABLE R41 22310200
         DC    A(MVKQEPXZ)         PRIME    NOT IN COMPACTION TABLE R41 22310400
         DC    A(MVKQCSNZ)         NONPRIME COMPACTIBLE NON-MASTER  R41 22310600
         DC    X'80',AL3(MVKQCSNZ) PRIME    COMPACTIBLE NON-MASTER  R41 22310800
         DC    A(MVKQCSMZ)         NONPRIME MASTER                  R41 22311000
         DC    A(MVKQCTMZ)         PRIME    MASTER                  R41 22311200
         SPACE 2                                                    R41 22311400
MVKQCSNZ BXH   RSINK,RBY1,MVKZOFLO SEND & RE-ENTER IF NO SPACE LEFT R41 22311600
         LR    RCPA,RCPZ           CHANGE WORK REGS FOR COMMON RTNE R41 22311800
MVKQCSN  BC    SLSP,MVKQCSNA       ABANDON SCB FOR DUP IF MULTIPLE  R41 22312000
         L     REND,SCWSCBCE       RESTORE COMPACT SCB ENDING LOC   R41 22312200
         LA    RPLAN,MVKQCA10      RESUME EVEN COMPACT STATE        R41 22312400
         B     MVKQCPMB            GO STORE SINGLE .N. & RESUME SCB R41 22312600
         SPACE 1                                                    R41 22312800
MVKQCSNA LTR   RGO,RGO             TEST ATTRIBUTE HANDLER ADDRESS   R41 22313000
         BM    MVKWPR0             JUST GEN DUP IF FLAGGED FOR PRIMER41 22313200
         CLR   RNUM,RBY1           IF 3 OR MORE OCCURRENCES         R41 22313400
         BH    MVKWDU0              ABANDON COMPACT SCB FOR DUP     R41 22313600
         L     REND,SCWSCBCE       RESTORE COMPACT SCB ENDING LOC   R41 22313800
         LA    RPLAN,MVKQCA10      RESUME EVEN COMPACT STATE        R41 22314000
         B     MVKQCONB            GO STORE DOUBLE .N. & RESUME SCB R41 22314200
         EJECT                                                      R41 22314400
*                   HANDLE NONCOMPACTIBLE NONPRIME CHAR             R41 22314600
         SPACE 1                                                    R41 22314800
MVKQCXXZ STC   RCPA,0(,RSINK)      STORE ODD MASTER IN 8-BIT FORM   R41 22315000
         BC    SLSP,MVKQCOXZ       BRANCH IF MORE THAN 1 OCCURRENCE R41 22315200
         CLI   CPTNMAST,16         TEST FOR 16 MASTERS SPECIAL CASE R41 22315400
         BL    MVKQCOXA            END SCB FOR NONCOMP SCB IF NOT   R41 22315600
         SPACE 2                                                    R41 22315800
*                                                                   R41 22316000
*           COMPACTION MOVER - COMPACT SCB (16-MASTER MODE)         R41 22316200
*                                                                   R41 22316400
         SPACE 1                                                    R41 22316600
MVKWCX   L     REND,SCWSCBCA       GET LOC OF COMPACTION SCB        R41 22316800
         LCR   RSCBL,REND                    CALCULATE              R41 22317000
         LA    RSCBL,SCBCPACT-1(RSINK,RSCBL)  SCB LENGTH            R41 22317200
         STC   RSCBL,0(,REND)                  & STORE IT           R41 22317400
         L     REND,SCWRUEND       RESTORE END OF R.U. ADDRESS      R41 22317600
         IC    RPLAN,CPTDTT(RCPA)  XLATE ODD MSTR BACK TO ORIGINAL  R41 22317800
         CLR   RSINK,REND          IF ONLY 1 BYTE LEFT IN R.U.      R41 22318000
         BNL   MVKWCXC              ODD MASTER MUST GO IN NEXT R.U. R41 22318200
         MVI   0(RSINK),SCBNONCO+1 STORE NONCOMP SCB WITH COUNT 1   R41 22318400
         STC   RPLAN,1(,RSINK)     STORE ODD MASTER UNTRANSLATED    R41 22318600
         LA    RSCBL,SCBMAXCT(,RSINK)  GET END OF FULL CAPACITY SCB R41 22318800
         CLR   RSCBL,REND          ATTEMPT TO FIT FULL CAPACITY SCB R41 22319000
         BNH   MVKWCXA             BRANCH IF CAN FIT                R41 22319200
         LR    RSCBL,REND          ELSE SUBSTITUTE END OF R.U.      R41 22319400
MVKWCXA  SLR   RSCBL,RSINK         COMPUTE UNUSED SCB CAPACITY      R41 22319600
         ST    RSCBL,SCWSCBNC      SAVE SCB STARTING CAPACITY       R41 22319800
         BCT   RSCBL,MVKWCXB       SHOW 1 BYTE OF SCB USED & BRANCH R41 22320000
         LA    RSINK,SCB+1(,RSINK) IF R.U. FULL, UPDATE POINTER FOR R41 22320200
         B     MVKZOFLO             'RPLRLEN' CALCULATION & GO SEND R41 22320400
         SPACE 3                                                    R41 22320600
MVKWCXB  LTR   RNUM,RNUM           TEST IF CALL FROM OTHER MOVE RTNER41 22320800
         BM    MVKWCXS             BRANCH IF NOT--MUST BE SUSPEND   R41 22321000
         LA    RCPA,SCWCANOT       ELSE SHOW COMPACTION NOT RACING  R41 22321200
         LA    RPLAN,MVKQNC        CHANGE TO NONCOMPACT SCB STATE   R41 22321400
         BZ    MVKQEONE            BR IF SINGLE NONCOMPACTIBLE CHAR R41 22321600
         LA    RPLAN,MVKQEY        ANTICIPATE CHANGING              R41 22321800
         LA    RSINK,SCB+1(,RSINK)  BACK TO EMPTY STATE             R41 22322000
         BR    RGO                 RETURN TO CALLER                 R41 22322200
         EJECT                                                      R41 22322400
MVKWCXC  LTR   RNUM,RNUM           IF EMISSION FOLLOWING ODD MASTER R41 22322600
         BNM   MVKWCXD              ALREADY IN PLAY (CALL WAS FROM  R41C22322800
                                     OTHER MOVE ROUTINE) GO HANDLE  R41 22323000
         ALR   RLSRCE,RBY1         ELSE SIMULATE NORMAL R.U.        R41 22323200
         SLR   RNUM,RNUM            OVERFLOW CONDITION WITH         R41 22323400
         BCT   RSRCE,MVKZOFLO        EMISSION OF SINGLE MASTER      R41C22323600
               (ALWAYS BRANCHES)   SEND & RE-ENTER FOR ODD MASTER   R41 22323800
         SPACE 1                                                    R41 22324000
MVKWCXD  STC   RPLAN,SCWODDM       SAVE ODD MASTER WHICH WON'T FIT  R41 22324200
         OI    SCWFLAGS,SCWODDMF   INDICATE 2 EMISSIONS BACKED UP   R41 22324400
         B     MVKZOFLO            SEND & RE-ENTER FOR ODD MASTER   R41 22324600
         SPACE 3                                                    R41 22324800
MVKWCXS  ST    RSINK,SCWSCBA       SAVE ADDRESS OF INTERRUPTED SCB  R41 22325000
         LA    RSINK,SCB+1(,RSINK) UPDTE POINTER FOR 'RPLRLEN' CALC R41 22325200
         ST    RSCBL,SCWSCBL       SAVE SCB UNUSED CAPACITY         R41 22325400
         SPACE 3                                                    R41 22325600
*                                                                   R41 22325800
*           COMPACTION PLANNER - COMPACT SCB STATE  (ODD SUSP 16-M) R41 22326000
*                                                                   R41 22326200
         SPACE 1                                                    R41 22326400
         NOPR  0               -4  FEEDER-END ROUTINE DOESN'T EXIST,R41C22326600
                                    PLANNER-END ROUTINE IS NO-OP    R41 22326800
         BALR  RPLAN,RFEED         CHG TO 16-MAST ODD COMPACT SUSPD R41C22327000
                                    STATE, & EXIT FROM PLANNER-END  R41 22327200
         SPACE 1                                                    R41 22327400
         SLR   RCPZ,RCPZ           CLEAR COMPACTION WORK REG        R41 22327600
         IC    RGO,0(,RCHAR)       PICK UP 8-BIT COMPACTION         R41 22327800
         IC    RCPZ,CPTCTT          FORM OF EMITTED CHARACTER       R41 22328000
         IC    RGO,CPTCAT(RGO)     PICK UP ATTRIBUTE OF EMITTED CHARR41 22328200
         L     RGO,MVKQCXST(RGO)   USE AS INDEX INTO ADDRESS TABLE  R41 22328400
         SLR   RNUM,RLSRCE         COMPUTE # OF OCCURRENCES LESS 1  R41 22328600
         BR    RGO                 BRANCH WITH CONDITION CODE SET   R41 22328800
         SPACE 2                                                    R41 22329000
MVKQCXST DS    0F   *ODD,SUSP,16M* COMPACT STATE ATTRIBUTE HANDLERS R41 22329200
         DC    A(MVKQNSXX)         NONPRIME NOT IN COMPACTION TABLE R41 22329400
         DC    A(MVKQNTXX)         PRIME    NOT IN COMPACTION TABLE R41 22329600
         DC    A(0)                CAN NEVER OCCUR                  R41 22329800
         DC    A(0)                CAN NEVER OCCUR                  R41 22330000
         DC    A(MVKQCSMX)         NONPRIME MASTER                  R41 22330200
         DC    A(MVKQCTMX)         PRIME    MASTER                  R41 22330400
         EJECT                                                      R41 22330600
*********************************************************************** 22330800
*                                                                     * 22331000
*           COMPACTION PLANNER ROUTINES - STRATEGY TABLE              * 22331200
*                                                                     * 22331400
*        COMPACTION PLANNER ROUTINES USE A FINITE-STATE MACHINE       * 22331600
*        STRATEGY TO FIND THE SHORTEST WAY TO REPRESENT SOURCE        * 22331800
*        DATA AS SCB STRINGS.  F.S.M. STATES ARE NUMBERED BY          * 22332000
*        MAJOR STATE (TYPE OF SCB CURRENTLY ACTIVE) AND RACING        * 22332200
*        STATE (MOMENTARY WASTE OR SAVINGS OF COMPACT FORM OVER       * 22332400
*        THE ALTERNATIVE) AS SHOWN IN THE FOLLOWING TABLE.            * 22332600
*                                                                     * 22332800
*              COMPACTION IS - NOT RACING   BEHIND    TIED    AHEAD   * 22333000
*        MAJOR STATE -         ----------   ------    ----    -----   * 22333200
*          EMPTY (NO SCB ACTIVE)     0        1        2        3     * 22333400
*          NONCOMPACT SCB ACTIVE     4        5        6        7     * 22333600
*          COMPACT SCB ACTIVE       N/A      N/A      10       11     * 22333800
*                                                                     * 22334000
*        EACH F.S.M. STATE IS ASSOCIATED WITH A MAJOR PLANNER         * 22334200
*        ROUTINE ADDRESS (IN REG 'RPLAN') AND A VALUE (IN BITS        * 22334400
*        1-31 OF 'RCPA') AS FOLLOWS -                                 * 22334600
*                                                                     * 22334800
*        IF FSM STATE IS     0-3       4-7       10        11         * 22335000
*        RPLAN HAS ADDR OF   MVKQEY    MVKQNC    MVKQCA10  MVKQCA11   * 22335200
*        AND RCPA CONTAINS   (A)       (A)       (B)       (C)        * 22335400
*                                                                     * 22335600
*        (A)  0  IF COMPACTION CANNOT COMPETE                         * 22335800
*             1  IF COMPACTION BEHIND BY 1/2 BYTE                     * 22336000
*             2  IF COMPACTION IN STANDOFF                            * 22336200
*             3  IF COMPACTION AHEAD  BY 1/2 BYTE                     * 22336400
*        (B)  (BITS  0-23) ZERO (BITS 24-31 = DON'T CARE)             * 22336600
*        (C)  (BITS  0-23) ZERO                                       * 22336800
*             (BITS 24-31) TRANSLATED ODD MASTER (X'F-')              * 22337000
*                                                                     * 22337200
*        INPUTS TO THE F.S.M. ARE 'EMISSIONS' (SEE EMITTER            * 22337400
*        PROLOG), DEFINED BY A POINTER (IN REG 'RCHAR') AND           * 22337600
*        A DUP FACTOR (IN REG 'RNUM').  EACH EMISSION HAS ONE         * 22337800
*        OF SIX DIFFERENT ATTRIBUTE COMBINATIONS -                    * 22338000
*                                                                     * 22338200
*        STRING    A T T R I B U T E S    CPTCAT  6TH AND 7TH CHAR    * 22338400
*        SYMBOL  MASTER  IN TABLE  PRIME  OFFSET  IN HANDLER LABEL    * 22338600
*        ------  ------  --------  -----  ------  (NORM)---(SUSPD)    * 22338800
*        .X.       NO       NO       NO     +0       OX      SX       * 22339000
*        .P(X).    NO       NO      YES     +4       PX      TX       * 22339200
*        .N.       NO      YES       NO     +8       ON      SN       * 22339400
*        .P(N).    NO      YES      YES    +12       PN      TN       * 22339600
*        .M.      YES    IMPLIED     NO    +16       OM      SM       * 22339800
*        .P(M).   YES    IMPLIED    YES    +20       PM      TM       * 22340000
*                                                                     * 22340200
*        THE COMPACTION ATTRIBUTE TABLE 'CPTCAT' CONTAINS THE         * 22340400
*        OFFSETS CORRESPONDING TO THE ATTRIBUTES OF EACH OF THE       * 22340600
*        256 EBCDIC CHARACTERS, TO FACILITATE A 6-WAY BRANCH,         * 22340800
*        AN INITIAL STEP IN ALL COMPACTION PLANNER ROUTINES.          * 22341000
*                                                                     * 22341200
*********************************************************************** 22341400
         EJECT                                                      R41 22341600
*********************************************************************** 22341800
*                                                                     * 22342000
*           COMPACTION PLANNER - STRATEGY TABLE (CONTINUED)           * 22342200
*                                                                     * 22342400
*        PLANNER ROUTINES REACT TO THE ATTRIBUTE AND DUP FACTOR       * 22342600
*        OF EMISSIONS, SIMULATING INPUTS DRIVING AN F.S.M.            * 22342800
*        THROUGH STATE TRANSITIONS.  THE FOLLOWING TABLE SUM-         * 22343000
*        MARIZES F.S.M. STRATEGY EXCLUDING FULL-SCB OR FULL-R.U.      * 22343200
*        EXCEPTION HANDLING.  (STATES ARE SHOWN ACROSS, AND           * 22343400
*        INPUTS DOWN DUE TO SPACE LIMITATIONS.  TABLE ENTRIES         * 22343600
*        SHOW RESULTING NEW STATE.)                                   * 22343800
*                                                                     * 22344000
*                    ----------------CURRENT STATE----------------    * 22344200
*              DUP       E M P T Y         N O N C P        C P       * 22344400
*        ATTR  FACT    0   1   2   3     4   5   6   7    10  11      * 22344600
*        ==========  =============================================    * 22344800
*        .X.    1     &4   4   4   4    &4   4   4   4     4  #4      * 22345000
*               2     &0   0   0   0    &4   4   4   4     0  #0      * 22345200
*               3+    &0   0   0   0    &0   0   0   0     0  #0      * 22345400
*        ----------  ---------------------------------------------    * 22345600
*        .P(X). 1     &0   0   0   0    &4   4   4   4     0  #0      * 22345800
*               2+    &0   0   0   0    &0   0   0   0     0  #0      * 22346000
*        ----------  ---------------------------------------------    * 22346200
*        .N.    1     *6   6  10  10     4   4   6   6    10  10      * 22346400
*               2      0   0   2   2     4   4   6   6    10  10      * 22346600
*               3+     0   0   0   0     0   0   0   0     0   0      * 22346800
*        ----------  ---------------------------------------------    * 22347000
*        .P(N). 1      0   0   2   2     4   4   6   6    10  10      * 22347200
*               2+     0   0   0   0     0   0   0   0     0   0      * 22347400
*        ----------  ---------------------------------------------    * 22347600
*        .M.    1     *7  10  11  10    *5   6   7  10    11  10      * 22347800
*               2     *2   3  10  11    *6   7  10  11    10  11      * 22348000
*               3     *1   2   3  10    *1   2   3  10    11  10      * 22348200
*               4      0   1   2   3     0   1   2   3    10  11      * 22348400
*               5      0   0   1   2     0   0   1   2    *1  10      * 22348600
*               6      0   0   0   1     0   0   0   1     0  *1      * 22348800
*               7+     0   0   0   0     0   0   0   0     0   0      * 22349000
*        ----------  ---------------------------------------------    * 22349200
*        .P(M). 1     *1   2   3  10    *5   6   7  10    11  10      * 22349400
*               2      0   1   2   3     0   1   2   3    10  11      * 22349600
*               3      0   0   1   2     0   0   1   2    *1  10      * 22349800
*               4      0   0   0   1     0   0   0   1     0  *1      * 22350000
*               5+     0   0   0   0     0   0   0   0     0   0      * 22350200
*        =========================================================    * 22350400
*        &   ENTRY IS PART OF COMPRESSION-ONLY SUBSTRATEGY.           * 22350600
*        *   RACE BEGINS.  INFORMATION STORED FOR CONVERTER.          * 22350800
*        #   16-MASTER MODE REPROCESSES EMISSION IN STATE 4.          * 22351000
*                                                                     * 22351200
*********************************************************************** 22351400
         EJECT                                                      R41 22351600
*                                                                   R41 22351800
*           COMPACTION PLANNER - EMPTY STATE  (NO CURRENT SCB)      R41 22352000
*                                                                   R41 22352200
         SPACE 1                                                    R41 22352400
         CNOP  0,8                 MAIN LOOP BRANCH TARGET ON DBLWD R41 22352600
         B     0(,RFEED)       -8  FEEDER-END AND PLANNER-          R41 22352800
         BR    RFEED           -4   END ROUTINES ARE NO-OPS         R41 22353000
         SPACE 1                                                    R41 22353200
MVKQEYRR BALR  RPLAN,RPLAN    INSTR THAT RETURNS TO CALLER OF SCB   R41C22353400
                               MOVERS 'MVKWNC' & 'MVKWCT', CHANGING R41C22353600
                                TO EMPTY STATE AT THE SAME TIME.    R41 22353800
         SPACE 1                                                    R41 22354000
MVKQEY   IC    RGO,0(,RCHAR)       PICK UP ATTRIBUTE OF EMITTED     R41 22354200
         IC    RGO,CPTCAT(RGO)      CHARACTER FROM COMPACTION TABLE R41 22354400
         L     RGO,MVKQEYAT(RGO)   USE AS INDEX INTO ADDRESS TABLE  R41 22354600
         SLR   RNUM,RLSRCE         COMPUTE # OF OCCURRENCES LESS 1  R41 22354800
         BR    RGO                 BRANCH WITH CONDITION CODE SET   R41 22355000
         SPACE 2                                                    R41 22355200
MVKQEYAT DS    0F                  EMPTY STATE ATTRIBUTE HANDLERS   R41 22355400
         DC    A(MVKQEOX)          NONPRIME NOT IN COMPACTION TABLE R41 22355600
         DC    A(MVKWPR0)          PRIME    NOT IN COMPACTION TABLE R41 22355800
         DC    A(MVKQEON)          NONPRIME COMPACTIBLE NON-MASTER  R41 22356000
         DC    A(MVKQEPN)          PRIME    COMPACTIBLE NON-MASTER  R41 22356200
         DC    A(MVKQEOM)          NONPRIME MASTER                  R41 22356400
         DC    A(MVKQEPM)          PRIME    MASTER                  R41 22356600
         SPACE 5                                                    R41 22356800
MVKQEOXZ BXH   RSINK,RBY1,MVKZOFLO SEND & RE-ENTER IF NO SPACE LEFT R41 22357000
MVKQEOX  BC    SLSP,MVKWDU0        GEN DUP SCB IF MULTIPLE .X.      R41 22357200
         SLR   RCPA,RCPA           ELSE SHOW COMPACTION NOT RACING  R41 22357400
         B     MVKQCOX4            GO START NONCOMP/NONDUP SCB      R41 22357600
         SPACE 3                                                    R41 22357800
MVKQEPXZ BXLE  RSINK,RBY1,MVKWPR0  GEN PRIME SCB IF ROOM IN R.U.    R41 22358000
         B     MVKZOFLO            ELSE GO SEND & RE-ENTER          R41 22358200
         EJECT                                                      R41 22358400
MVKQEONR SLR   RSINK,RBY1          BACK UP TO END OF SCB STRING     R41 22358600
         BAL   RPLAN,MVKWCT        GO STORE COUNT & CHK FOR RU END  R41 22358800
         SLR   RNUM,RCPA           SET COND CODE ON # OCCURRENCES-1 R41 22359000
         SPACE 1                                                    R41 22359200
MVKQEON  BC    SLSP,MVKQEONG       BR IF MORE THAN SINGLE CHARACTER R41 22359400
         CLR   RCPA,RBY1           TEST COMPACTION RACING STATUS    R41 22359600
         BH    MVKQEONF            BRANCH IF RACING, STANDOFF/AHEAD R41 22359800
         LA    RCPA,SCWSTAND       SHOW COMPACTION RACE IN STANDOFF R41 22360000
         BE    MVKQCOX4            ELSE BR IF RACING, COMPACT BEHINDR41 22360200
MVKQEONA LA    RPLAN,MVKQNC        CHANGE TO NONCOMP/NONDUP STATE   R41 22360400
MVKQEONB ST    RSINK,SCWSCBCA      SAVE POSSIBLE COMPACT SCB LOC    R41 22360600
         LA    RSCBL,SCBMAXCT(,RSINK)  GET END OF FULL CAPACITY SCB R41 22360800
         CLR   RSCBL,REND          ATTEMPT TO FIT FULL CAPACITY SCB R41 22361000
         BNH   MVKQEOND            BRANCH IF CAN FIT                R41 22361200
         LR    RSCBL,REND          ELSE SUBSTITUTE END OF R.U.      R41 22361400
MVKQEOND ST    RSCBL,SCWSCBCE      SAVE PLANNED COMPACT SCB END LOC R41 22361600
MVKQEON4 SLR   RSCBL,RSINK         COMPUTE UNUSED SCB CAPACITY      R41 22361800
         BC    SLSZ,MVKZOFLO       BRANCH IF NO ROOM FOR SCB + CHAR.R41 22362000
         ST    RSCBL,SCWSCBNC      SAVE SCB STARTING CAPACITY       R41 22362200
         MVI   0(RSINK),SCBNONCO+SCBEMPTY  SHOW NOTHING MOVED YET   R41 22362400
MVKQEONE ST    RCHAR,SCWSRCEB      SAVE STRING START ADDR FOR MOVER R41 22362600
         BCT   RSCBL,MVKEMITR      GET NEXT EMISSION                R41 22362800
         L     RSCBL,SCWSCBNC      IF SCB ALREADY                   R41 22363000
         STC   RSCBL,0(,RSINK)      FULL, STORE COUNT               R41 22363200
         ALR   RSINK,RSCBL           AND MOVE IN LAST               R41 22363400
         MVC   0(1,RSINK),0(RCHAR)    SINGLE CHARACTER              R41 22363600
         ALR   RSINK,RBY1          UPDTE POINTER FOR 'RPLRLEN' CALC R41 22363800
         BCT   RNUM,MVKZFULL       FORCE DUP FACTOR NEGATIVE & SEND R41C22364000
               (ALWAYS BRANCHES)    SINCE SHORT SCB IMPLIES FULL RU R41 22364200
         SPACE 1                                                    R41 22364400
MVKQEONF SLR   RGO,RGO             ANTICIPATE COMPACT--CLEAR WK REG R41 22364600
         SLR   RSINK,RBY1          COMPARE END OF STORED STRING WITHR41 22364800
         CLR   RSINK,RSCBL          END OF HYPOTHETICAL COMPACT SCB R41 22365000
         BL    MVKWCA              GO COMPACT IF COVERED BY 1 SCB   R41 22365200
         LA    RCPA,SCWSTAND       SHOW COMPACTION RACE IN STANDOFF R41 22365400
         BXLE  RSINK,RBY1,MVKQEONA ELSE RESET PTR TO ORIGINAL VALUE R41C22365600
               (ALWAYS BRANCHES)    & HANDLE AS IF RACE JUST BEGUN  R41 22365800
         SPACE 1                                                    R41 22366000
MVKQEONG SRL   RCPA,0(RNUM)        FORCE NO-RACE STATE, EXCEPT      R41 22366200
         ALR   RCPA,RCPA            SET STANDOFF STATE FOR CASES    R41C22366400
                                     STANDOFF/.NN. OR AHEAD/.NN.    R41 22366600
         B     MVKVDU              GO GEN DUP SCB VIA COMMON MOVER  R41 22366800
         SPACE 3                                                    R41 22367000
MVKQEPN  SRL   RCPA,1(RNUM)        FORCE NO-RACE STATE, EXCEPT      R41 22367200
         ALR   RCPA,RCPA            SET STANDOFF STATE FOR CASES    R41C22367400
                                     STANDOFF/.N. OR AHEAD/.N.      R41 22367600
         B     MVKVPR              GO GEN PRIME SCB VIA COMMON MOVERR41 22367800
         EJECT                                                      R41 22368000
MVKQEOMR SLR   RCPA,RCPA           REPROC EMISSION IN NO-RACE STATE R41 22368200
MVKQEOM  ALR   RCPA,RNUM           TEST DUP FACTOR & RACING STATE   R41 22368400
         BC    ALSZ,MVKQEOMC       BRANCH IF 1 MASTER & NOT RACING  R41 22368600
         SLR   RCPA,RNUM           TEST OLD RACING STATUS           R41 22368800
         LA    RCPA,SCWNPCOS+1(,RCPA)  GET NEW RACING STATE, STEP 1 R41 22369000
         BC    SLSP,MVKQEOMB       BRANCH IF RACING ALREADY BEGUN   R41 22369200
         ST    RSINK,SCWSCBCA      ELSE SAVE PLANNED COMPACT SCB LOCR41 22369400
         LA    RSCBL,SCBMAXCT(,RSINK)  GET END OF FULL CAPACITY SCB R41 22369600
         CLR   RSCBL,REND          ATTEMPT TO FIT FULL CAPACITY SCB R41 22369800
         BNH   MVKQEOMA            BRANCH IF CAN FIT                R41 22370000
         LR    RSCBL,REND          ELSE SUBSTITUTE END OF R.U.      R41 22370200
MVKQEOMA ST    RSCBL,SCWSCBCE      SAVE PLANNED COMPACT SCB END LOC R41 22370400
MVKQEOMB SLR   RCPA,RNUM           COMPUTE NEW RACING STATE, STEP 2 R41 22370600
         BC    NOT-SLSP,MVKWDU0    BRANCH IF UNAMBIGUOUS DUP CASE   R41 22370800
         CL    RCPA,MVKQXVA        TEST RACING STATE VALIDITY       R41 22371000
         BL    MVKVDU              GEN DUP & KEEP RACING IF VALID   R41 22371200
         SLR   RGO,RGO             ANTICIPATE COMPACT--CLEAR WK REG R41 22371400
         SLR   RSINK,RBY1          COMPARE END OF STORED STRING WITHR41 22371600
         CLR   RSINK,RSCBL          END OF HYPOTHETICAL COMPACT SCB R41 22371800
         BL    MVKWCA              GO COMPACT IF COVERED BY 1 SCB   R41 22372000
         BXLE  RSINK,RBY1,MVKQEOMR ELSE RESET POINTER TO PROPER     R41C22372200
               (ALWAYS BRANCHES)    VALUE & REDO IN NO-RACE STATE   R41 22372400
         SPACE 1                                                    R41 22372600
MVKQEOMC LA    RCPA,SCWAHEAD       SHOW COMPACTION AHEAD BY 1 MASTERR41 22372800
         LA    RPLAN,MVKQNC        CHANGE TO NONCOMPACT SCB STATE   R41 22373000
         B     MVKQEONB            GO START NONCOMP/NONDUP SCB      R41 22373200
         SPACE 3                                                    R41 22373400
MVKQEPMR SLR   RCPA,RCPA           REPROC EMISSION IN NO-RACE STATE R41 22373600
MVKQEPM  ALR   RCPA,RBY1           COMPUTE NEW RACING STATE, STEP 1 R41 22373800
         CLR   RCPA,RBY1           TEST OLD RACING STATUS           R41 22374000
         BNE   MVKQEPMC            BRANCH IF RACING ALREADY BEGUN   R41 22374200
MVKQEPMA ST    RSINK,SCWSCBCA      ELSE SAVE PLANNED COMPACT SCB LOCR41 22374400
         LA    RSCBL,SCBMAXCT(,RSINK)  GET END OF FULL CAPACITY SCB R41 22374600
         CLR   RSCBL,REND          ATTEMPT TO FIT FULL CAPACITY SCB R41 22374800
         BNH   MVKQEPMB            BRANCH IF CAN FIT                R41 22375000
         LR    RSCBL,REND          ELSE SUBSTITUTE END OF R.U.      R41 22375200
MVKQEPMB ST    RSCBL,SCWSCBCE      SAVE PLANNED COMPACT SCB END LOC R41 22375400
MVKQEPMC SLR   RCPA,RNUM           COMPUTE NEW RACING STATE, STEP 2 R41 22375600
         BC    NOT-SLSP,MVKWPR0    BRANCH IF UNAMBIGUOUS DUP CASE   R41 22375800
         CL    RCPA,MVKQXVA        TEST RACING STATE VALIDITY       R41 22376000
         BL    MVKVPR              GEN DUP & KEEP RACING IF VALID   R41 22376200
         SLR   RGO,RGO             ANTICIPATE COMPACT--CLEAR WK REG R41 22376400
         SLR   RSINK,RBY1          COMPARE END OF STORED STRING WITHR41 22376600
         CLR   RSINK,RSCBL          END OF HYPOTHETICAL COMPACT SCB R41 22376800
         BNH   MVKWCA              GO COMPACT IF COVERED BY 1 SCB   R41 22377000
         BXLE  RSINK,RBY1,MVKQEPMR ELSE RESET POINTER TO PROPER     R41C22377200
               (ALWAYS BRANCHES)    VALUE & REDO IN NO-RACE STATE   R41 22377400
         EJECT                                                      R41 22377600
*                                                                   R41 22377800
*           COMPACTION PLANNER - NONCOMPRESS SCB STATE (NORMAL)     R41 22378000
*                                                                   R41 22378200
         SPACE 1                                                    R41 22378400
         CNOP  0,8                 MAIN LOOP BRANCH TARGET ON DBLWD R41 22378600
         B     MVKWNCI         -8  BRANCH TO  FEEDER-END ROUTINE.   R41 22378800
         B     MVKWNCI         -4  BRANCH TO PLANNER-END ROUTINE.   R41 22379000
         SPACE 1                                                    R41 22379200
MVKQNC   IC    RGO,0(,RCHAR)       PICK UP ATTRIBUTE OF EMITTED     R41 22379400
         IC    RGO,CPTCAT(RGO)      CHARACTER FROM COMPACTION TABLE R41 22379600
         L     RGO,MVKQNCAT(RGO)   USE AS INDEX INTO ADDRESS TABLE  R41 22379800
         SLR   RNUM,RLSRCE         COMPUTE # OF OCCURRENCES LESS 1  R41 22380000
         BR    RGO                 BRANCH WITH CONDITION CODE SET   R41 22380200
         SPACE 2                                                    R41 22380400
MVKQNCAT DS    0F                  NON-COMP STATE ATTRIBUTE HANDLERSR41 22380600
         DC    A(MVKQNOX)          NONPRIME NOT IN COMPACTION TABLE R41 22380800
         DC    A(MVKQNPX)          PRIME    NOT IN COMPACTION TABLE R41 22381000
         DC    A(MVKQNON)          NONPRIME COMPACTIBLE NON-MASTER  R41 22381200
         DC    A(MVKQNPN)          PRIME    COMPACTIBLE NON-MASTER  R41 22381400
         DC    A(MVKQNOM)          NONPRIME MASTER                  R41 22381600
         DC    A(MVKQNPM)          PRIME    MASTER                  R41 22381800
         SPACE 5                                                    R41 22382000
MVKQNOX  BC    SLSP,MVKQNOXC       BRANCH IF MORE THAN SINGLE .X.   R41 22382200
MVKQNOXA SLR   RCPA,RCPA           SHOW COMPACTION NOT COMPETING    R41 22382400
MVKQNOXB BCT   RSCBL,MVKEMITR      LOOP BACK FOR NEXT EMISSION      R41 22382600
         BCT   RNUM,MVKWNC         IF SCB FULL, KILL DUP FACTOR TO  R41C22382800
               (ALWAYS BRANCHES)    SHOW EMISSION HANDLED & END SCB R41 22383000
MVKQNOXC CLR   RNUM,RBY1           IF 3 OR MORE OCCURRENCES         R41 22383200
         BH    MVKWNCAX             GO END SCB FOR DUPLICATE        R41 22383400
         CLR   RNUM,RSCBL          IF 2 CHARACTERS WON'T FIT        R41 22383600
         BNL   MVKWNCAX             GO END SCB FOR DUPLICATE        R41 22383800
         SLR   RNUM,RBY1           DECREASE DUP FACTOR BY 1         R41 22384000
         BCT   RSCBL,MVKQNOXA      DECREASE SPACE LEFT IN SCB BY 1  R41C22384200
               (ALWAYS BRANCHES)    & GO HANDLE AS IF SINGLE CHAR   R41 22384400
         SPACE 3                                                    R41 22384600
MVKQNPX  BC    SLSZ,MVKQNOXA       BRANCH IF SINGLE CHARACTER       R41 22384800
         B     MVKWNCAX            ELSE GO END SCB FOR PRIME DUP    R41 22385000
         EJECT                                                      R41 22385200
MVKQNON  BC    SLSP,MVKQNONC       BRANCH IF MORE THAN SINGLE .N.   R41 22385400
MVKQNONA OR    RCPA,RBY1           CHANGE NO- OR BEHIND TO NO-RACE  R41 22385600
         SLR   RCPA,RBY1            STATE, & EVEN OR AHEAD, TO EVEN R41 22385800
MVKQNONB BCT   RSCBL,MVKEMITR      LOOP BACK FOR NEXT EMISSION      R41 22386000
         BCT   RNUM,MVKWNC         IF SCB FULL, KILL DUP FACTOR TO  R41C22386200
               (ALWAYS BRANCHES)    SHOW EMISSION HANDLED & END SCB R41 22386400
MVKQNONC CLR   RNUM,RBY1           IF 3 OR MORE OCCURRENCES         R41 22386600
         BH    MVKWNCAX             GO END SCB FOR DUPLICATE        R41 22386800
         OR    RCPA,RBY1           CHANGE NO- OR BEHIND TO NO-RACE  R41 22387000
         SLR   RCPA,RBY1            STATE, & EVEN OR AHEAD, TO EVEN R41 22387200
MVKQNOND CLR   RNUM,RSCBL          IF 2 CHARACTERS WON'T FIT        R41 22387400
         BNL   MVKWNCAL             GO END SCB FOR DUPLICATE        R41 22387600
         SLR   RNUM,RBY1           DECREASE DUP FACTOR BY 1         R41 22387800
         BCT   RSCBL,MVKQNONB      DECREASE SPACE LEFT IN SCB BY 1  R41C22388000
               (ALWAYS BRANCHES)    & GO HANDLE AS IF SINGLE CHAR   R41 22388200
         SPACE 3                                                    R41 22388400
MVKQNPN  BC    SLSZ,MVKQNONA       BRANCH IF HANDLING SINGLE PRIME  R41 22388600
         B     MVKWNCAX            ELSE GO END SCB FOR PRIME DUP    R41 22388800
         SPACE 3                                                    R41 22389000
MVKQNOM  BC    SLSP,MVKQNOMF       BRANCH IF MORE THAN 1 MASTER     R41 22389200
MVKQNOMA IC    RNUM,MVKQNOMB(RCPA) SET UP BRANCH ON RACE=0, 1, 2, 3 R41 22389400
         AR    RCPA,RBY1           IMPROVE RACE STATE BY 1          R41 22389600
         B     MVKQN(RNUM)         TAKE 4-WAY BRANCH ON RACE STATE  R41 22389800
         SPACE 1                                                    R41 22390000
MVKQNOMB DS    0C                  NONCOMP/.M. RACE STATE HANDLERS  R41 22390200
         DC    AL1(MVKQNOMD-MVKQN) IF NOT RACING, BEGIN RACING NOW  R41 22390400
         DC    AL1(MVKQNOME-MVKQN) IF BEHIND, CONTINUE IN STANDOFF  R41 22390600
         DC    AL1(MVKQNOME-MVKQN) IF BEHIND, CONTINUE IN STANDOFF  R41 22390800
         DC    AL1(MVKQNOMC-MVKQN) IF AHEAD, GO COMPACT IF WILL FIT R41 22391000
         SPACE 1                                                    R41 22391200
MVKQN    DS    0H                  ORIGIN FOR BRANCH TABLE OFFSETS  R41 22391400
         SPACE 1                                                    R41 22391600
MVKQNOMC BM    MVKWNC              COMPACT IF RACE BEGAN IN THIS SCBR41 22391800
         L     RLCHAR,SCWSCBNC     COMPUTE WHERE CURRENT            R41 22392000
         SLR   RLCHAR,RSCBL         NONCOMPACT SCB WOULD END        R41 22392200
         LA    RPLAN,0(RLCHAR,RSINK) IF IT WERE TERMINATED NOW      R41 22392400
         CL    RPLAN,SCWSCBCE      TEST IF PLANNED COMPACT SCB      R41C22392600
                                    WILL COVER THE NONCOMPACT SCB   R41 22392800
         BNH   MVKWNC6             GO COMPACT IF IT WILL            R41 22393000
         LA    RPLAN,MVKQNC        ELSE RELOAD NONCOMPACT STATE     R41 22393200
         SPACE 1                                                    R41 22393400
MVKQNOMD L     RCPA,MVKQXIBH       RACE STATE = BEHIND + FLAG SHOW- R41C22393600
                                    ING RACE BEGAN INSIDE CURR SCB  R41 22393800
         ST    RSINK,SCWSCBNA      SAVE SCB ADDR  FOR LATER CALC    R41 22394000
         ST    RSCBL,SCWSCBNS      SAVE SCB SPACE FOR LATER CALC    R41 22394200
MVKQNOME BCT   RSCBL,MVKEMITR      LOOP BACK FOR NEXT EMISSION      R41 22394400
         LCR   RNUM,RBY1           IF R.U. FULL, KILL DUP FACTOR TO R41 22394600
         B     MVKWNC              SHOW EMISSION HANDLED & END SCB  R41 22394800
         EJECT                                                      R41 22395000
MVKQNSM  BC    SLSZ,MVKQNTMA       GO REVIVE SCB IF SINGLE MASTER   R41 22395200
         SLR   RCHAR,RNUM          ELSE BACK UP TO 1ST OCCURRENCE   R41 22395400
         ST    RCHAR,SCWSRCEB      SAVE STRING START ADDR FOR MOVER R41 22395600
         L     RSINK,SCWSCBA       RETRIEVE SUSPENDED SCB ADDRESS   R41 22395800
         LA    RPLAN,MVKQNC        REVERT TO NORMAL NONCOMPACT STATER41 22396000
         SPACE 1                                                    R41 22396200
MVKQNOMF SLR   RGO,RGO             CLEAR REG FOR MULTI-WAY BRANCH   R41 22396400
         CLR   RNUM,RBY1           TEST # OF OCCURRENCES LESS 1     R41 22396600
         IC    RGO,MVKQNOMH(RCPA)  TAKE 4-WAY BRANCH ON RACE STATE  R41 22396800
         BE    MVKQN(RGO)           IF EXACTLY 2 OCCURRENCES        R41 22397000
MVKQNOMG LA    RPLAN,MVKQEOM       ELSE CAUSE REPROCESSING IN EMPTY R41 22397200
         B     MVKWNC               STATE (RACE AS IS), & END SCB   R41 22397400
         SPACE 1                                                    R41 22397600
MVKQNOMH DS    0C                  NONCOMP/.MM. RACE STATE HANDLERS R41 22397800
         DC    AL1(MVKQNOMI-MVKQN) IF NOT RACING, BEGIN RACING NOW  R41 22398000
         DC    AL1(MVKQNOMK-MVKQN) IF BEHIND, CONTINUE AHEAD        R41 22398200
         DC    AL1(MVKQNOML-MVKQN) IF STANDOFF OR AHEAD & 2 MASTERS R41 22398400
         DC    AL1(MVKQNOML-MVKQN)  FIT IN PLANNED SCB, GO COMPACT  R41 22398600
         SPACE 1                                                    R41 22398800
MVKQNOMI CLR   RNUM,RSCBL          NOT RACING--IF 2 CHARS WON'T FIT R41 22399000
         BNL   MVKQNOMG             GO REPROCESS IN EMPTY STATE     R41 22399200
MVKQNOMJ L     RCPA,MVKQXIST       2 MASTERS START NEW RACE (TIED)  R41 22399400
         ST    RSINK,SCWSCBNA      SAVE SCB ADDR  FOR LATER CALC    R41 22399600
         ST    RSCBL,SCWSCBNS      SAVE SCB SPACE FOR LATER CALC    R41 22399800
         BCT   RSCBL,MVKQNOME      DECREASE SPACE LEFT IN SCB BY 1  R41C22400000
               (ALWAYS BRANCHES)    & GO CHECK REMAINING SCB SPACE  R41 22400200
         SPACE 1                                                    R41 22400400
MVKQNOMK AL    RCPA,MVKQXNPB       COMPUTE NEW RACING STATE         R41 22400600
         CLR   RNUM,RSCBL          IF 2 CHARACTERS WON'T FIT        R41 22400800
         BNL   MVKWNCAL             GO END SCB FOR DUPLICATE        R41 22401000
         BCT   RSCBL,MVKQNOME      DECREASE SPACE LEFT IN SCB BY 1  R41C22401200
               (ALWAYS BRANCHES)    & GO HANDLE AS FOR SINGLE CHAR  R41 22401400
         SPACE 1                                                    R41 22401600
MVKQNOML A     RCPA,MVKQXNPB       COMPUTE NEW RACING STATE         R41 22401800
         BM    MVKWNC              GO COMPACT IF RACE STATE FLAGGED R41 22402000
         L     RLCHAR,SCWSCBNC     COMPUTE WHERE CURRENT            R41 22402200
         SLR   RLCHAR,RSCBL         NONCOMPACT SCB WOULD END        R41 22402400
         LA    RPLAN,0(RLCHAR,RSINK) IF IT WERE TERMINATED NOW      R41 22402600
         CL    RPLAN,SCWSCBCE      TEST IF PLANNED COMPACT SCB      R41C22402800
                                    WILL COVER THE NC SCB & 2 CHARS R41 22403000
         BL    MVKWNC6             GO COMPACT IF IT WILL            R41 22403200
         SLR   RCPA,RCPA           ELSE SHOW COMPACTION NOT RACING  R41 22403400
         CLR   RNUM,RSCBL          IF 2 CHARS WON'T FIT IN NONCOMP  R41 22403600
         BNL   MVKQNOMG             SCB EITHER, GO TO EMPTY STATE   R41 22403800
         LA    RPLAN,MVKQNC        ELSE RELOAD NONCOMPACT STATE     R41 22404000
         B     MVKQNOMJ            ELSE USE .MM. TO BEGIN NEW RACE  R41 22404200
         SPACE 3                                                    R41 22404400
MVKQNPM  BC    SLSZ,MVKQNOMA       BRANCH IF ONLY 1 PRIME MASTER    R41 22404600
         LA    RPLAN,MVKQEPM       ELSE CAUSE REPROCESSING IN EMPTY R41 22404800
         B     MVKWNC               STATE (RACE AS IS), & END SCB   R41 22405000
         EJECT                                                      R41 22405200
*                                                                   R41 22405400
*           COMPACTION PLANNER - COMPACT SCB STATE (NORMAL)         R41 22405600
*                                                                   R41 22405800
         SPACE 1                                                    R41 22406000
         CNOP  0,8                 MAIN LOOP BRANCH TARGET ON DBLWD R41 22406200
         B     MVKWCTI         -8  BRANCH TO FEEDER-END ROUTINE.    R41 22406400
         B     0(,RFEED)       -4  PLANNER-END ROUTINE IS NO-OP     R41 22406600
         SPACE 1                                                    R41 22406800
MVKQCA10 IC    RGO,0(,RCHAR)       PICK UP 8-BIT COMPACTION         R41 22407000
         IC    RCPA,CPTCTT(RGO)     FORM OF EMITTED CHARACTER       R41 22407200
         IC    RGO,CPTCAT(RGO)     PICK UP ATTRIBUTE OF EMITTED CHARR41 22407400
         L     RGO,MVKQCAAT(RGO)   USE AS INDEX INTO ADDRESS TABLE  R41 22407600
         SLR   RNUM,RLSRCE         COMPUTE # OF OCCURRENCES LESS 1  R41 22407800
         BR    RGO                 BRANCH WITH CONDITION CODE SET   R41 22408000
         SPACE 2                                                    R41 22408200
MVKQCAAT DS    0F           *EVEN* COMPACT STATE ATTRIBUTE HANDLERS R41 22408400
         DC    A(MVKQCOX)          NONPRIME NOT IN COMPACTION TABLE R41 22408600
         DC    A(MVKWCTAL)         PRIME    NOT IN COMPACTION TABLE R41 22408800
         DC    A(MVKQCON)          NONPRIME COMPACTIBLE NON-MASTER  R41 22409000
         DC    A(MVKQCPN)          PRIME    COMPACTIBLE NON-MASTER  R41 22409200
         DC    A(MVKQCOM)          NONPRIME MASTER                  R41 22409400
         DC    A(MVKQCPM)          PRIME    MASTER                  R41 22409600
         SPACE 5                                                    R41 22409800
*                                                                   R41 22410000
*           COMPACTION PLANNER - COMPACT SCB STATE (ODD, NORMAL)    R41 22410200
*                                                                   R41 22410400
         SPACE 1                                                    R41 22410600
         CNOP  0,8                 MAIN LOOP BRANCH TARGET ON DBLWD R41 22410800
         B     MVKWCTIZ        -8  BRANCH TO FEEDER-END ROUTINE.    R41 22411000
         B     0(,RFEED)       -4  PLANNER-END ROUTINE IS NO-OP     R41 22411200
         SPACE 1                                                    R41 22411400
MVKQCA11 IC    RGO,0(,RCHAR)       PICK UP 8-BIT COMPACTION         R41 22411600
         IC    RCPZ,CPTCTT(RGO)     FORM OF EMITTED CHARACTER       R41 22411800
         IC    RGO,CPTCAT(RGO)     PICK UP ATTRIBUTE OF EMITTED CHARR41 22412000
         L     RGO,MVKQCAZT(RGO)   USE AS INDEX INTO ADDRESS TABLE  R41 22412200
         SLR   RNUM,RLSRCE         COMPUTE # OF OCCURRENCES LESS 1  R41 22412400
         BR    RGO                 BRANCH WITH CONDITION CODE SET   R41 22412600
         SPACE 2                                                    R41 22412800
MVKQCAZT DS    0F            *ODD* COMPACT STATE ATTRIBUTE HANDLERS R41 22413000
         DC    A(MVKQCXXZ)         NONPRIME NOT IN COMPACTION TABLE R41 22413200
         DC    A(MVKQCPXZ)         PRIME    NOT IN COMPACTION TABLE R41 22413400
         DC    A(MVKQCONZ)         NONPRIME COMPACTIBLE NON-MASTER  R41 22413600
         DC    A(MVKQCPNZ)         PRIME    COMPACTIBLE NON-MASTER  R41 22413800
         DC    A(MVKQCOMZ)         NONPRIME MASTER                  R41 22414000
         DC    A(MVKQCPMZ)         PRIME    MASTER                  R41 22414200
         EJECT                                                      R41 22414400
MVKQCOX  BC    SLSP,MVKWCTAL       END SCB FOR DUP IF MULTIPLE .X.  R41 22414600
         SLR   RSINK,RBY1          POINT TO LAST BYTE OF COMPACTED  R41 22414800
MVKQCOXA BAL   RPLAN,MVKWCT         STRING & GO END THE COMPACT SCB R41 22415000
MVKQCOX4 LA    RPLAN,MVKQNC        CHANGE TO NONCOMP/NONDUP STATE   R41 22415200
         LA    RSCBL,SCBMAXCT(,RSINK)  GET END OF FULL CAPACITY SCB R41 22415400
         CLR   RSCBL,REND          ATTEMPT TO FIT FULL CAPACITY SCB R41 22415600
         BNH   MVKQEON4            BRANCH IF CAN FIT                R41 22415800
         LR    RSCBL,REND          ELSE SUBSTITUTE END OF R.U.      R41 22416000
         B     MVKQEON4            GO START NONCOMP/NONDUP SCB      R41 22416200
         SPACE 3                                                    R41 22416400
MVKQCON  BC    SLSZ,MVKQCPMB       BRANCH IF ONLY 1 OCCURRENCE      R41 22416600
MVKQCONA CLR   RNUM,RBY1           TEST # OF OCCURRENCES LESS 1     R41 22416800
         BH    MVKWCTAL            END SCB IF 3 OR MORE OCCURRENCES R41 22417000
MVKQCONB STC   RCPA,0(,RSINK)      STORE 1ST COPY OF NON-MASTER     R41 22417200
         BXLE  RSINK,RBY1,MVKQCPMB BRANCH IF 2ND COPY WILL FIT      R41 22417400
         BCT   RSINK,MVKWCTAL      ELSE BACK UP PTR TO IGNORE COPY  R41C22417600
               (ALWAYS BRANCHES)    ALREADY STORED, & END THE SCB   R41 22417800
         SPACE 2                                                    R41 22418000
MVKQCPN  BC    SLSZ,MVKQCPMB       BRANCH IF ONLY 1 OCCURRENCE      R41 22418200
         BCT   RSINK,MVKWCTZL      ELSE BACK UP PTR TO STRING END   R41C22418400
               (ALWAYS BRANCHES)    & GO END THE SCB FOR PRIME DUP  R41 22418600
         SPACE 2                                                    R41 22418800
MVKQCSM  LA    RPLAN,MVKQCA10      RESUME EVEN COMPACT STATE        R41 22419000
         L     REND,SCWSCBCE       RESTORE COMPACT SCB ENDING LOC   R41 22419200
MVKQCOM  BC    SLSZ,MVKEMITZ       ENTER ODD COMPACT STATE IF 1 .M. R41 22419400
MVKQCOMA CL    RNUM,MVKQXOM        CHECK DUP FACTOR VS. LIMIT       R41 22419600
         BNL   MVKQCOMF            BRANCH IF MUST LEAVE COMPACTION  R41 22419800
         IC    RCPZ,MVKQXMM(RCPA)  STORE 4-BIT                      R41 22420000
         STC   RCPZ,0(,RSINK)       MASTER PAIR                     R41 22420200
         BCT   RNUM,MVKQCOMC       BR IF MORE THAN 2 OCCURRENCES    R41 22420400
         BXLE  RSINK,RBY1,MVKEMITR ADVANCE RU PTR, GET NXT EMISSION R41 22420600
         BCT   RNUM,MVKWCTAL       IF SCB FULL, KILL DUP FACTOR TO  R41C22420800
               (ALWAYS BRANCHES)    SHOW EMISSION HANDLED & END SCB R41 22421000
MVKQCOMC BCT   RNUM,MVKQCOMG       BRANCH IF EXACTLY 4 OCCURRENCES  R41 22421200
         BXLE  RSINK,RBY1,MVKEMITZ ADVANCE RU PTR, GET NXT EMISSION R41 22421400
         LA    RNUM,2              IF SCB FULL, RELOAD CORRECT DUP  R41 22421600
         SLR   RSINK,RNUM           FACTOR AND RESET POINTER TO     R41C22421800
                                     EXCLUDE PAIR ALREADY STORED    R41 22422000
MVKQCOMD LA    RPLAN,MVKVDU        CAUSE EXIT TO NONPRIME DUP MOVER R41 22422200
MVKQCOME MVI   SCWSCBCA,SCBMAXCT   SET FLAG FOR ADD TO EXISTING SCB R41 22422400
         LR    RCPA,RBY1           SHOW COMPACTION BEHIND           R41 22422600
         B     MVKWCT01            GO END CURRENT COMPACTION SCB    R41 22422800
         SPACE 1                                                    R41 22423000
MVKQCOMF BNE   MVKWCTAL            BR IF COMPACTION ENDS UNCOND'LY  R41 22423200
         BCT   RSINK,MVKQCOMD      ELSE BACK UP PTR TO STRING END & R41C22423400
               (ALWAYS BRANCHES)    END SCB FOR DUP IN BEHIND STATE R41 22423600
         SPACE 1                                                    R41 22423800
MVKQCOMG BXLE  RSINK,RBY1,MVKQCOMR ADVANCE R.U. POINTER & BRANCH    R41 22424000
         LA    RNUM,3              IF SCB FULL, RELOAD CORRECT DUP  R41 22424200
         BCT   RSINK,MVKWCTAL       FACTOR, SET PTR TO EXCLUDE PAIR R41C22424400
               (ALWAYS BRANCHES)     ALREADY STORED, & END THE SCB  R41 22424600
         EJECT                                                      R41 22424800
MVKQCTM  LA    RPLAN,MVKQCA10      RESUME EVEN COMPACT STATE        R41 22425000
         L     REND,SCWSCBCE       RESTORE COMPACT SCB ENDING LOC   R41 22425200
         SPACE 1                                                    R41 22425400
MVKQCPM  BC    SLSZ,MVKEMITZ       ENTER ODD COMPACT STATE IF 1 .M. R41 22425600
MVKQCPMA CL    RNUM,MVKQXPM        CHECK DUP FACTOR VS. LIMIT       R41 22425800
         BNL   MVKQCPMC            BRANCH IF MUST LEAVE COMPACTION  R41 22426000
         IC    RCPA,MVKQXMM(RCPA)  STORE 4-BIT                      R41 22426200
MVKQCPMB STC   RCPA,0(,RSINK)       MASTER PAIR                     R41 22426400
         BXLE  RSINK,RBY1,MVKEMITR ADVANCE RU PTR, GET NXT EMISSION R41 22426600
         LCR   RNUM,RBY1           IF SCB FULL, KILL DUP FACTOR TO  R41 22426800
         BCT   RSINK,MVKWCT         SHOW EMISSION DONE, BACK UP PTR R41C22427000
               (ALWAYS BRANCHES)     TO LAST BYTE, & GO END THE SCB R41 22427200
         SPACE 1                                                    R41 22427400
MVKQCPMC BNE   MVKWCTAL            BR IF COMPACTION ENDS UNCOND'LY  R41 22427600
         LA    RPLAN,MVKVPR        CAUSE EXIT TO PRIME DUP MOVER    R41 22427800
         BCT   RSINK,MVKQCOME      BACK UP POINTER TO STRING END &  R41C22428000
               (ALWAYS BRANCHES)    END SCB FOR DUP IN BEHIND STATE R41 22428200
         SPACE 2                                                    R41 22428400
MVKQCOXZ CLI   CPTNMAST,16         TEST FOR 16 MASTERS SPECIAL CASE R41 22428600
         BL    MVKWCTZL            GO END SCB FOR DUP IF NOT        R41 22428800
         BAL   RGO,MVKWCX          ELSE END SCB VIA SPECIAL ROUTINE R41 22429000
         CLR   RNUM,RBY1           IF 3 OR MORE OCCURRENCES,        R41 22429200
         BH    MVKVDU               GO GENERATE DUPLICATE SCB       R41 22429400
         CLR   RNUM,RSCBL          IF EMISSION WON'T FIT            R41 22429600
         BNL   MVKZOFLO             R.U. IS FULL--GO SEND           R41 22429800
         SLR   RCHAR,RBY1          BACK UP TO 1ST OF PAIR OF CHARS  R41 22430000
         SLR   RSINK,RBY1          BACK UP TO ADDRESS               R41 22430200
         SLR   RSINK,RBY1           OF NON-COMPACT SCB              R41 22430400
         BCT   RSCBL,MVKQNSXC      DECREASE REMAINING SPACE IN SCB  R41C22430600
               (ALWAYS BRANCHES)    BY 1 & TREAT AS IF SINGLE CHAR. R41 22430800
         SPACE 2                                                    R41 22431000
MVKQCPXZ STC   RCPA,0(,RSINK)      STORE ODD MASTER IN 8-BIT FORM   R41 22431200
         CLI   CPTNMAST,16         TEST FOR 16 MASTERS SPECIAL CASE R41 22431400
         BL    MVKWCTZL            END SCB FOR PRIME DUP IF NOT     R41 22431600
         LA    RGO,MVKVPR          ELSE POINT TO PRIME DUP MOVER    R41 22431800
         B     MVKWCX              GO END SCB VIA SPECIAL ROUTINE   R41 22432000
         SPACE 3                                                    R41 22432200
MVKQCONZ STC   RCPA,0(,RSINK)      STORE ODD MASTER IN 8-BIT FORM   R41 22432400
         BXH   RSINK,RBY1,MVKQEONR REVERT TO EMPTY STATE IF RU FULL R41 22432600
         BC    SLSZ,MVKQCOMQ       BRANCH IF SINGLE NON-MASTER      R41 22432800
         CLR   RNUM,RBY1           TEST # OF OCCURRENCES LESS 1     R41 22433000
         BH    MVKWCTAL            END SCB IF 3 OR MORE OCCURRENCES R41 22433200
         STC   RCPZ,0(,RSINK)      STORE 1ST COPY OF NON-MASTER     R41 22433400
         BXLE  RSINK,RBY1,MVKQCOMQ BRANCH IF 2ND COPY WILL FIT      R41 22433600
         BCT   RSINK,MVKWCTAL      ELSE BACK UP PTR TO IGNORE COPY  R41C22433800
               (ALWAYS BRANCHES)    ALREADY STORED, & END THE SCB   R41 22434000
         EJECT                                                      R41 22434200
MVKQCPNZ STC   RCPA,0(,RSINK)      STORE ODD MASTER IN 8-BIT FORM   R41 22434400
         BC    SLSP,MVKWCTZL       END SCB BY PRIME DUP IF MULT .P. R41 22434600
         BXLE  RSINK,RBY1,MVKQCOMQ ADVANCE R.U. POINTER & BRANCH    R41 22434800
         BCT   RSINK,MVKWCTZL      IF SCB FULL, BACK UP PTR TO LAST R41C22435000
               (ALWAYS BRANCHES)    BYTE STORED, AND GO END THE SCB R41 22435200
         SPACE 2                                                    R41 22435400
MVKQCSMX L     RSINK,SCWSCBA       RETRIEVE POINT OF INTERRUPTION   R41 22435600
MVKQCSMZ LA    RPLAN,MVKQCA11      RESUME ODD COMPACT STATE         R41 22435800
         L     REND,SCWSCBCE       RELOAD COMPACT SCB ENDING LOC    R41 22436000
         SPACE 1                                                    R41 22436200
MVKQCOMZ BC    SLSP,MVKQCOMS       BRANCH IF NOT SINGLE MASTER      R41 22436400
MVKQCOMP IC    RCPA,MVKQXMF(RCPA)  FORM PAIR FROM ODD MASTER        R41 22436600
         NR    RCPZ,RCPA            AND CURRENT EMISSION CHAR       R41 22436800
MVKQCOMQ LA    RPLAN,MVKQCA10      CHANGE TO EVEN COMPACTION STATE  R41 22437000
MVKQCOMR STC   RCPZ,0(,RSINK)      STORE GENERATED BYTE INTO R.U.   R41 22437200
         BXLE  RSINK,RBY1,MVKEMITR ADVANCE RU PTR, GET NXT EMISSION R41 22437400
         LCR   RNUM,RBY1           IF SCB FULL, KILL DUP FACTOR TO  R41 22437600
         BCT   RSINK,MVKWCT         SHOW EMISSION DONE, BACK UP PTR R41C22437800
               (ALWAYS BRANCHES)     TO LAST BYTE, & GO END THE SCB R41 22438000
         SPACE 1                                                    R41 22438200
MVKQCOMS IC    RGO,MVKQXMF(RCPA)   FORM PAIR FROM ODD               R41 22438400
         LR    RCPA,RCPZ            MASTER AND CURRENT              R41 22438600
         NR    RCPZ,RGO              EMISSION CHARACTER             R41 22438800
         STC   RCPZ,0(,RSINK)         AND STORE IT IN R.U.          R41 22439000
         BCT   RNUM,MVKQCOMT       BR IF 2 OR MORE COPIES REMAINING R41 22439200
         BXLE  RSINK,RBY1,MVKEMITR ELSE ADVANCE, STAY IN ODD STATE  R41 22439400
         LA    RPLAN,MVKQEOMC      HAVE REMAINING MSTR REPROCESSED  R41 22439600
         BCT   RSINK,MVKWCT         IN EMPTY STATE. BACK UP TO LAST R41C22439800
               (ALWAYS BRANCHES)     BYTE STORED, & GO END THE SCB  R41 22440000
         SPACE 1                                                    R41 22440200
MVKQCOMT LA    RPLAN,MVKQCA10      CHANGE TO EVEN COMPACT STATE     R41 22440400
         BXLE  RSINK,RBY1,MVKQCOMA GO HANDLE REMAINING OCCURRENCES  R41 22440600
         LA    RPLAN,MVKQEOM       IF SCB FULL, SET UP TO HANDLE    R41 22440800
         BCT   RSINK,MVKWCT         REMAINDER IN EMPTY STATE. BACK  R41C22441000
               (ALWAYS BRANCHES)     UP PTR TO LAST BYTE & END SCB  R41 22441200
         SPACE 2                                                    R41 22441400
MVKQCTMX L     RSINK,SCWSCBA       RETRIEVE POINT OF INTERRUPTION   R41 22441600
MVKQCTMZ LA    RPLAN,MVKQCA11      RESUME ODD COMPACT STATE         R41 22441800
         L     REND,SCWSCBCE       RELOAD COMPACT SCB ENDING LOC    R41 22442000
         SPACE 1                                                    R41 22442200
MVKQCPMZ BC    SLSZ,MVKQCOMP       BRANCH IF ONLY 1 OCCURRENCE      R41 22442400
         IC    RGO,MVKQXMF(RCPA)   FORM PAIR FROM ODD               R41 22442600
         LR    RCPA,RCPZ            MASTER AND CURRENT              R41 22442800
         NR    RCPZ,RGO              EMISSION CHARACTER             R41 22443000
         STC   RCPZ,0(,RSINK)         AND STORE IT IN R.U.          R41 22443200
         BCT   RNUM,MVKQCPMP       BR IF 2 OR MORE COPIES REMAINING R41 22443400
         BXLE  RSINK,RBY1,MVKEMITR ELSE ADVANCE, STAY IN ODD STATE  R41 22443600
         LR    RCPA,RBY1           ELSE SHOW COMPACTION BEHIND      R41 22443800
         LA    RPLAN,MVKQEPMA      HAVE REMAINING PRIME REPROCESSED R41 22444000
         BCT   RSINK,MVKWCT01       IN EMPTY STATE. BACK UP TO LAST R41C22444200
               (ALWAYS BRANCHES)     BYTE STORED, & GO END THE SCB  R41 22444400
         EJECT                                                      R41 22444600
MVKQCPMP LA    RPLAN,MVKQCA10      CHANGE TO EVEN COMPACT STATE     R41 22444800
         BXLE  RSINK,RBY1,MVKQCPMA GO HANDLE REMAINING OCCURRENCES  R41 22445000
         BCT   RSINK,MVKWCTZL      IF SCB FULL, BACK UP PTR TO LAST R41C22445200
               (ALWAYS BRANCHES)     BYTE STORED, & SWITCH TO PRIME R41 22445400
         SPACE 20                                                   R41 22445600
*                                                                   R41 22445800
*                        COMPACTION PLANNER - CONSTANTS             R41 22446000
*                                                                   R41 22446200
         SPACE 2                                                    R41 22446400
MVKQXVA  DC    A(SCWAHEAD+1)       RACING STATE VALIDITY CONSTANT   R41 22446600
         SPACE 1                                                    R41 22446800
MVKQXINO DC    X'80',AL3(SCWCANOT) RACING STATE CONSTANTS           R41 22447000
MVKQXIBH DC    X'80',AL3(SCWBHIND)  WITH FLAG TO SHOW THAT          R41 22447200
MVKQXIST DC    X'80',AL3(SCWSTAND)   RACE BEGAN INSIDE NC SCB       R41 22447400
         SPACE 1                                                    R41 22447600
MVKQXNP  DC    A(SCWNPCOS+1)       RACE STATE CONSTANTS             R41 22447800
MVKQXNPB DC    A(SCWNPCOS)          FOR NONPRIME STRATEGY           R41 22448000
         SPACE 1                                                    R41 22448200
MVKQXPM  DC    A(SCWSTAND)         RACE STATE CONSTANTS             R41 22448400
MVKQXOM  DC    A(SCWNPCOS+SCWSTAND) FOR MASTER STRATEGY             R41 22448600
         SPACE 3                                                    R41 22448800
MVKQXMF  EQU   *-CPTMAST0          4-BIT MASTERS IN LEFT NIBBLE     R41 22449000
         DC    X'0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFFF'                  R41 22449200
         SPACE 3                                                    R41 22449400
MVKQXMM  EQU   *-CPTMAST0          4-BIT DOUBLE MASTERS             R41 22449600
         DC    X'00112233445566778899AABBCCDDEEFF'                  R41 22449800
         EJECT                                                      R41 22450000
*********************************************************************** 22480000
*                                                                     * 22480500
*                   COMPRESS/COMPACT SEND ROUTINE                     * 22481000
*                                                                     * 22481500
*           OBJECTIVE - TO SET PROPER FLAGS AND RETURN TO             * 22482000
*           COMPOSER CALLER WHEN R.U. BUFFER FILLS.                   * 22482500
*                                                                     * 22483000
*           IF THERE IS MORE DATA TO BE PROCESSED (TRUE FOR           * 22483500
*           ENTRIES TO 'MVKZFULL' WITH 'SCWMORE' FLAG SET             * 22484000
*           AND FOR ALL ENTRIES TO 'MVKZOFLO'), ADDRESS AND           * 22484500
*           LENGTH OF THE EXCESS ARE SAVED, THE COMPOSER              * 22485000
*           EXITS TO CALLER WITH FLAG 'SCWMORE' SET, AND IT           * 22485500
*           IS EXPECTED THAT CALLING CODE WILL GET A NEW              * 22486000
*           BUFFER, SEND THE OLD BUFFER, AND CALL COMPOSER            * 22486500
*           AGAIN.  'SCWMORE' FLAG SET AT COMPOSER ENTRY              * 22487000
*           CAUSES BRANCH TO 'MVKZCNUE' TO HANDLE EXCESS.             * 22487500
*                                                                     * 22488000
*           IF FULL BUFFER HAPPENS TO COINCIDE WITH THE LAST          * 22488500
*           EMISSION FOR THIS CCW, COMPOSER RETURNS WITH              * 22489000
*           'SCWFULL ' FLAG SET INSTEAD OF 'SCWMORE'.  THE            * 22489500
*           CALLER JUST SENDS THE R.U. IN THIS CASE.                  * 22490000
*                                                                     * 22490500
*********************************************************************** 22491000
         SPACE 1                                                     R4 22491500
MVKZCNUE L     RNUM,SCWNUM         RETRIEVE SAVED DUP FACTOR         R4 22492000
         LCR   RCHAR,RBY1          LOAD -1 TO CALC EMISSION ADDRESS  R4 22492500
         SPACE 1                                                     R4 22493500
         L     RSRCE,SCWSRCE       RELOAD ADDRESS AND LENGTH         R4 22494000
         L     RLSRCE,SCWLSRCE      OF SOURCE STRING REMAINDER       R4 22494500
         L     RFEED,SCWFEED       RELOAD FEEDER ROUTINE RETURN ADDR R4 22495000
         TM    SCWFLAGS,SCWCTRL    TEST COMPOSER FLAGS               R4 22495500
         BZ    MVKZCNU1            BRANCH IF NOT CONTROL STRING     R41 22496000
         ALR   RSRCE,MBUF          CONVERT OFFSET TO ADDRESS         R4 22496500
MVKZCNU1 ALR   RCHAR,RSRCE         EMISSION CHARACTER ADDR = RSRCE-1R41 22497000
         SPACE 1                                                     R4 22497500
         LTR   RNUM,RNUM           TEST EMISSION DUP FACTOR          R4 22498000
         BM    MVKEMITR            IF EXHAUSTED GO GET NEXT EMISSION R4 22498500
         ALR   RNUM,RLSRCE         FIX UP REPEAT OF DUP FACTOR CALC. R4 22499000
         SLR   RGO,RGO             CLEAR WORK REG FOR WHERE-TO-GO   R41 22499500
         TM    SCWFLAGS,SCWODDMF   TEST COMPOSER FLAGS              R41 22499600
         BZR   RPLAN               BRANCH TO EMPTY STATE PLANNER IF R41C22499700
                                    NOT 16-MASTER ODD OVERFLOW CASE R41 22499800
         MVI   0(RSINK),SCBNONCO+1 CREATE NONCOMP SCB WITH COUNT 1  R41 22499900
         MVC   1(1,RSINK),SCWODDM  MOVE IN ODD MASTER               R41 22500000
         LA    RSCBL,SCBMAXCT      SET ORIGINAL SCB                 R41 22500100
         ST    RSCBL,SCWSCBNC       CAPACITY TO MAXIMUM             R41 22500200
         ST    RSINK,SCWSCBA       SAVE INTERRUPTED SCB ADDRESS     R41 22500300
         LA    RSINK,SCB+1(,RSINK) POINT PAST SCB AND SINGLE CHAR   R41 22500400
         NI    SCWFLAGS,255-SCWODDMF  RESET ODD MASTER SPECIAL FLAG R41 22500500
         BCT   RSCBL,MVKQNCSA      SHOW 1 BYTE OF SCB USED & GO     R41C22500600
               (ALWAYS BRANCHES)    HANDLE BACKED-UP EMISSION IN    R41C22500700
                                     SIMULATED NONCOMP SUSPND STATE R41 22500800
         EJECT                                                      R41 22500900
MVKZFULE OI    SCWFLAGS,SCWFULL    IF LAST FORCE CALLER TO SEND R.U.R41 22501000
         NI    SCWFLAGS,255-SCWLAST-SCWMORE  INDICATE COMPOSING DONER41 22501100
         B     MVKZFLEN            REJOIN COMMON RETURN LOGIC       R41 22501200
         SPACE 2                                                    R41 22501300
MVKZFULL DS    0H                  ENTRY USED IF RNUM ALREADY NEG.     C22501400
                                    MEANING EMISSION TAKEN CARE OF   R4 22501500
         TM    SCWFLAGS,SCWLAST    TEST COMPOSER FLAGS               R4 22501600
         BO    MVKZFULE            BRANCH IF LAST EMISSION          R41 22502000
         SPACE 1                                                    R41 22504000
MVKZOFLO DS    0H                  ENTRY USED IF EMISSION MUST BE      C22504500
                                    HANDLED ON RE-ENTRY W/NEW BUFFER R4 22505000
         TM    SCWFLAGS,SCWNSPAN   TEST COMPOSER FLAGS               R4 22505500
         BO    MVKZNSPA            BR IF SPANNED RECORDS FORBIDDEN   R4 22506000
         ST    RNUM,SCWNUM         SAVE EMISSION DUP FACTOR          R4 22506500
         TM    SCWFLAGS,SCWCTRL    TEST COMPOSER FLAGS               R4 22507000
         BZ    SKIP460             BRANCH IF NOT CONTROL STRING      R4 22507500
         SLR   RSRCE,MBUF          CONVERT ADDRESS TO OFFSET         R4 22508000
SKIP460  ST    RSRCE,SCWSRCE       SAVE ADDRESS AND LENGTH           R4 22508500
         ST    RLSRCE,SCWLSRCE      OF SOURCE STRING REMAINDER       R4 22509000
         ST    RFEED,SCWFEED       SAVE FEEDER RETURN ADDRESS        R4 22509500
         SPACE 1                                                     R4 22510000
MVKZFLEN L     REND,RPLAREA        CALCULATE                         R4 22510500
         SLR   RSINK,REND           R.U. LENGTH                      R4 22511000
         ST    RSINK,RPLRLEN       SET R.U. LENGTH IN RPL            R4 22511500
         SPACE 2                                                    R41 22511600
         POP   USING               RESTORE ACCESS METHOD REG USAGE  R41 22511700
         SPACE 2                                                    R41 22511900
MVKZNSPA L     SAVE,SCWSAV13       RESTORE                          R41 22512000
         L     R1,PCER1             REGISTER                        R41 22512500
         L     BASE1,PCEBASE1        ENVIRONMENT                    R41 22512700
        $RESTORE                   RESTORE ACCESS METHOD REGISTERS   R4 22513000
         L     ML,SCWRETRN         LOAD COMPOSER RETURN ADDRESS      R4 22513500
         BR    ML                  RETURN TO CALLER                  R4 22514000
         TITLE 'HASP SNA REMOTE TERMINAL CLOSE ROUTINE'              R4 22515500
*                                                                    R4 22516000
*                             VTAM CLOSE PROCESSING                  R4 22516500
*                                                                    R4 22517000
         SPACE 3                                                     R4 22517500
         USING RTAMVCLO,MBASE1     ESTABLISH SNA CLOSE ADDRESSAB'TY  R4 22518000
RTAMVNCL DS    0H                  ADDRESS OF RTAM SNA NCLOSE RTN   R41 22518500
         OI    MDCTSTAT,DCTADS     SHOW DATASET ABNORMAL TERMINATN  R41 22518600
         LA    MBASE1,RTAMVCLO-RTAMVNCL(,MBASE1) ADJUST BASE ...    R41 22518700
         ST    MBASE1,PCESAVEA     ..AND SAVE IN THE PCE            R41 22518800
         OI    PCESAVEA,X'80'      RESTORE NCLOSE INDICATOR    @OZ27835 22518850
         SPACE 2                                                    R41 22518900
RTAMVCLO DS    0H                  ENTRY POINT FOR RTAM SNA CLOSE    R4 22519000
         TM    MDCTSEL,DCTPOUTB    TEST DIRECTION BIT                R4 22519500
         BZ    MVCINBND            IF INBOUND GO TO INBOUND CLOSE    R4 22520000
         TM    MDCTSTAT,DCTPSUSP   TEST STREAM STATUS                R4 22522500
         BZ    SKIP470             BRANCH IF NOT SUSPENDED           R4 22523000
         BAL   ML,MVREQUME         WAIT FOR RESUME IF SUSPENDED      R4 22523500
SKIP470  TM    ICESNDST,ICEWTRSP+ICECNCEL  TEST SESSION SEND STATUS  R4 22524000
         BZ    SKIP480             BR IF L.M.-SENT REQST NOT PENDING R4 22524500
         BAL   ML,MVREQRSP         ELSE WAIT FOR L.M. TO ACCEPT RESP R4 22525000
SKIP480  TM    ICESNDST,ICEINSTR   TEST STREAM SEND STATUS           R4 22525500
         BO    MVCINSTR            BYPASS RESUME HDR IF IN STREAM    R4 22526000
         BAL   ML,MVRPLGET         GET BUFFER FOR 'RESUME' FM HEADER R4 22526500
         OI    ICESNDST,ICEOCPND   SET END CHN TO FORCE IMM FMH SEND R4 22527000
         LA    R1,FMHRESUM         LOAD 'RESUME' DATA STREAM ACTION  R4 22527500
         BAL   ML,MVFMHBLD         BUILD & SEND 'RESUME' FM HEADER   R4 22528000
         SPACE 1                                                     R4 22528500
MVCINSTR TM    MDCTSTAT,DCTFLUSH   TEST STREAM STATUS                R4 22529000
         BZ    MVCTRUNC            BRANCH IF STREAM NOT ABORTING     R4 22529500
         LTR   MBUF,MBUF           TEST RDCT-OWNED BUFFER ADDRESS    R4 22530000
         BZ    MVCENDBF            IF NO BUFFER, GET ONE & SEND ADS  R4 22530500
         L     R15,RPLNEXT         TEST RPL                          R4 22531000
         LTR   R15,R15              CHAIN FIELD                      R4 22531500
         BZ    MVCENDDS            GO BUILD ADS IF OWN ONLY 1 BUFFER R4 22532000
         BAL   ML,MVFREOUT         ELSE FREE FIRST BUFFER            R4 22532500
         L     MBUF,DCTBUFAD        AND GO BUILD ADS IN              R4 22533000
         B     MVCENDDS              THE REMAINING BUFFER            R4 22533500
         SPACE 1                                                     R4 22534000
MVCTRUNC LTR   MBUF,MBUF           TEST BUFFER ADDRESS               R4 22534500
         BNZ   MVCENDCH            GO TRY END CHAIN IF HAVE BUFFER   R4 22535000
         BAL   ML,MVRPLGET         GET BUFFER FOR END CHAIN OR EDS   R4 22535500
         TM    ICESNDST,ICEINCHN   TEST STREAM SENDING STATUS        R4 22536000
         BZ    MVCENDDS            GO SEND EDS IF NOT IN CHAIN       R4 22536500
         SPACE 1                                                     R4 22537000
MVCENDCH TM    ICESNDST,ICEINCHN   TEST STREAM SENDING STATUS        R4 22537500
         BO    SKIP490             SKIP ZERO LNGTH CHECK IF IN CHAIN R4 22538000
         L     R1,RPLRLEN          TEST R.U.                         R4 22538500
         LTR   R1,R1                LENGTH                           R4 22539000
         BZ    MVCENDDS            IF ZERO DON'T BOTHER TO SEND      R4 22539500
SKIP490  OI    ICESNDST,ICEOCPND   SET 'END OF CHAIN PENDING' FLAG   R4 22540000
         BAL   ML,MVRPLSND         CALL BUFFER SEND ROUTINE          R4 22540500
         EJECT                                                       R4 22541000
*                             SEND 'END' OR 'ABORT DATA STREAM'      R4 22541500
         SPACE 1                                                     R4 22542000
MVCENDBF BAL   ML,MVRPLGET         GET ANOTHER BUFFER FOR EDS        R4 22542500
MVCENDDS L     R15,ICESDCT         GET 1ST SUSPENDED REMOTE DCT      R4 22543000
         LTR   R15,R15             TEST ADDRESS                      R4 22543500
         BNZ   MVCNOTEB            BRANCH IF SUSPENDED RDCTS EXIST   R4 22544000
         TM    BINPRIP-ISTDBIND+ICEBIND,BINPSEB  TEST PRIMARY PRTCOL R4 22544500
         BZ    MVCHGDIR            BRANCH IF NOT ALLOWED TO SEND EB  R4 22545000
         OI    ICEFLAGS,ICEEBPND   SET 'END BRACKET PENDING' FLAG    R4 22545500
         B     MVCDSTRM            GO TO SEND FM HEADER              R4 22546000
         SPACE 1                                                     R4 22546500
         USING DCTDSECT,R15        USE TEMPORARY RDCT ADDRESSABILITY R4 22547000
MVCNOTEB TM    MDCTSEL,DCTPOUTB    TEST DIRECTION BIT                R4 22547500
         BO    MVCDSTRM            BRANCH IF SUSPENDED OUTBOUND      R4 22548000
         L     R15,MDCTSDCT        GET NEXT SUSPENDED RDCT           R4 22548500
         LTR   R15,R15             TEST ADDRESS                      R4 22549000
         BNZ   MVCNOTEB            BRANCH IF REMOTE DCT PRESENT      R4 22549500
         DROP  R15                 DISCARD TEMP RDCT ADDRESSABILITY  R4 22550000
         SPACE 1                                                     R4 22550500
MVCHGDIR OI    ICEFLAGS,ICECHDIR   SET 'CHGE DIRECTION PENDING' FLAG R4 22551000
         SPACE 1                                                     R4 22551500
MVCDSTRM LA    ML,MVTAMXIT         LOAD RETURN FOR HDR SERV ROUTINE  R4 22552000
         LA    R1,FMHNMEND         SET 'END DATA STREAM' ACTION CODE R4 22552500
         OI    ICESNDST,ICEOCPND   SET END CHN TO FORCE FMH SEND NOW R4 22553000
         TM    MDCTSTAT,DCTADS     TEST FOR NCLOSE SPECIFIED        R41 22553500
         BZ    MVFMHBLD            IF NOT GO BUILD 'EDS' FM HEADER  R41 22554000
         LA    R1,FMHABEND         ELSE , BUILD 'ADS' FM HEADER     R41 22554500
         B     MVFMHBLD            BUILD, SEND, & GET +RSP TO FM HDR   C22555000
                                    TRY STARTING NEXT STREAM & RETRN R4 22555500
         SPACE 2                                                     R4 22556000
*                                                                    R4 22556500
*                             INBOUND CLOSE PROCESSING               R4 22557000
*                                                                    R4 22557500
         SPACE 1                                                     R4 22558000
MVCINBND LA    ML,MVTAMXIT         LOAD RETURN FOR NORMAL CASE       R4 22558500
         B     MVRELBUF            ASSUME BUFFER CAUSING EDS IS        C22559000
                                    ATTACHED. GO FREE IT & RETURN    R4 22559500
         SPACE 1                                                     R4 22565000
         DROP  MDCT                RELEASE DCT ADDRESSABILITY        R4 22565500
         TITLE 'HASP SNA REMOTE TERMINAL ACCESS METHOD EXIT ROUTINE' R4 22566000
         USING DCTDSECT,R1         ESTABLISH DCT ADDRESSABILITY      R4 22566500
         SPACE 3                                                     R4 22567000
RTAMVSUB DS    0H                  RTAM SNA SUBROUTINE BASE ADDRESS  R4 22567500
         SPACE 3                                                     R4 22568000
*                                                                    R4 22568500
*                             SNA RTAM COMMON EXIT ROUTINE           R4 22569000
*                                                                    R4 22569500
         SPACE 3                                                     R4 22570000
MVTAMXIT DS    0H                  SNA RTAM NORMAL EXIT              R4 22570500
         LM    LINK,BASE2,PCELINK  RELOAD CALLER'S REGISTERS         R4 22571000
         NI    DCTSTAT,255-DCTRTAM SHOW RTAM PROCESSING COMPLETE     R4 22571500
         LPR   R0,R1               SET POSITIVE CONDITION CODE       R4 22572000
         BR    LINK                 AND RETURN                       R4 22572500
         SPACE 5                                                     R4 22573000
MVTAMXEX DS    0H                  SNA RTAM EXCEPTION EXIT           R4 22573500
         LM    LINK,BASE2,PCELINK  RELOAD CALLER'S REGISTERS         R4 22574000
         NI    DCTSTAT,255-DCTRTAM SHOW RTAM PROCESSING COMPLETE     R4 22574500
         LNR   R0,R1               SET NEGATIVE CONDITION CODE       R4 22575000
         BR    LINK                 AND RETURN                       R4 22575500
         SPACE 5                                                     R4 22576000
MVTAMXAB DS    0H                  SNA RTAM ABNORMAL EXIT            R4 22576500
         LM    LINK,BASE2,PCELINK  RELOAD CALLER'S REGISTERS         R4 22577000
         NI    DCTSTAT,255-DCTRTAM SHOW RTAM PROCESSING COMPLETE     R4 22577500
         SR    R0,R0               SET ZERO CONDITION CODE           R4 22578000
         BR    LINK                 AND RETURN                       R4 22578500
         SPACE 5                                                        22579000
MVTAMXOV DS    0H                  SNA RTAM OVERFLOW EXIT            R4 22579500
         LM    LINK,BASE2,PCELINK  RELOAD CALLER'S REGISTERS         R4 22580000
         NI    DCTSTAT,255-DCTRTAM SHOW RTAM PROCESSING COMPLETE     R4 22580500
         TM    DCTSTAT,DCTINUSE    SET 'ONES' (OVERFLOW) COND. CODE  R4 22581000
         BR    LINK                 AND RETURN                       R4 22581500
         SPACE 2                                                     R4 22582000
         DROP  R1                  RELEASE DCT ADDRESSABILITY        R4 22582500
         TITLE 'HASP SNA REMOTE TERMINAL ACCESS METHOD SUBROUTINES'  R4 22583000
         USING DCTDSECT,MDCT       ESTABLISH DCT ADDRESSABILITY      R4 22583500
         SPACE 3                                                     R4 22584000
*                                                                    R4 22584500
*                             RPL 'SEND' ROUTINE                     R4 22585000
*                                                                    R4 22585500
         SPACE 1                                                     R4 22586000
MVRPLWTR OI    ICESNDST,ICEWTRSP   INDICATE PROC. AWAITING RESPONSE  R4 22586500
         ST    MBUF,DCTBUFAD       DEFER BUF POP-UP TILL AFTER WAIT  R4 22587000
         SPACE 1                                                     R4 22587500
MVRPLWT  ST    ML,RPLBCHN          SAVE RETURN ADDRESS               R4 22588000
        $WAIT  WORK,SAVE=NO        WAIT FOR CONDITION TO CLEAR       R4 22588500
        $RESTORE                   RESTORE ACCESS METHOD REGISTERS   R4 22589000
         L     ML,RPLBCHN          RELOAD RETURN ADDRESS             R4 22589500
         TM    ICESNDST,ICECNCEL   TEST SESSION SEND STATUS          R4 22590000
         BO    MVREQCAN            ABORT $EXTP CALL IF CHAIN CANCEL  R4 22590500
         SPACE 1                                                     R4 22591000
MVRPLSND DS    0H                  RPL SCHEDULER MAIN ENTRY POINT    R4 22591500
         CLC   ICEOUTCT,ICEOUTLM   COMPARE OUTBD CIRCULATION & LIMIT R4 22592000
         BNL   MVRPLWT             AT LIMIT, BR - WAIT AND RE-ENTER  R4 22592500
         SPACE 1                                                     R4 22593000
         MVC   DCTBUFAD,RPLNEXT    POP DCT BUFFER POINTER            R4 22593500
         TM    ICESNDST,ICEINCHN   TEST SESSION SEND STATUS          R4 22594000
         BO    MVRPLHDR            SKIP LIMIT CHECK IF IN SAME CHAIN R4 22594500
         CLC   MDCTCHLM,ICERSPCT   TEST FOR LIMIT EXCESSION          R4 22595000
         BL    MVRPLWTR            YES, BRANCH - WAIT AND RE-ENTER   R4 22595500
         SPACE 1                                                     R4 22596000
MVRPLOCH IC    R15,ICERSPCT        INCREMENT                         R4 22596500
         LA    R15,1(,R15)          OVERLAPPING                      R4 22597000
         STC   R15,ICERSPCT          CHAIN COUNT                     R4 22597500
         SPACE 1                                                     R4 22598000
MVRPLHDR LA    R15,4               SET TRANSITION # FOR IN CHN, -EOC R4 22598500
         TM    ICESNDST,ICEINCHN   TEST SESSION STATUS               R4 22599000
         BO    MVRPLNFC            BAR FI/BB/EB UNLESS 1ST IN CHAIN  R4 22599500
         SLR   R15,R15             RESET TRANSITION NUMBER TO 0      R4 22600000
MVRPLFC1 TM    ICESNDST,ICENOFMH   TEST STREAM SENDING STATUS        R4 22606000
         BO    SKIP500             BRANCH IF NO FM HEADER PENDING    R4 22606500
         OI    RPLOPT12,RPLFMHDR   SET FORMAT (FM HEADER) INDICATOR  R4 22607000
SKIP500  TM    ICEFLAGS,ICEEBPND   TEST SESSION STATUS               R4 22607500
         BZ    MVRPLFC2            BR IF END BRACKET NOT PENDING     R4 22608000
         OI    RPLRH3,RPLEB        TURN ON END BRACKET BIT IN RH     R4 22608500
MVRPLFC2 TM    ICEFLAGS,ICEINBRK   TEST SESSION STATUS               R4 22609000
         BO    MVRPLNFC            BRANCH IF ALREADY IN BRACKET      R4 22609500
         OI    ICEFLAGS,ICEBBPND   SET 'BEGIN BRACKET PENDING' FLAG  R4 22610000
         OI    RPLRH3,RPLBB        TURN ON BEGIN BRACKET BIT IN RH   R4 22610500
         OI    ICEFLAGS,ICEOUTBD   MARK STREAM AS OUTBOUND           R4 22611000
         EJECT                                                       R4 22611500
MVRPLNFC TM    ICESNDST,ICEOCPND   TEST SESSION STATUS               R4 22612000
         BZ    MVRPLNEC            BRANCH IF NOT END OF CHN          R4 22612500
         LA    R15,2(,R15)         ADD 2 TO TRANSITION NUMBER        R4 22613000
         NI    RPLVTFL2,255-RPLNFME-RPLEX  SET 'REQ DEFINITE RESP'   R4 22613500
         CL    SAVE,$MLLMPCE       TEST CALLER'S PCE                 R4 22614000
         BE    MVRPLNWT            DON'T WAIT NOW IF L.M.      @OZ26937 22614500
         ST    ML,DCTEWF           SAVE 1ST LEVEL RETURN ADDRESS     R4 22615000
         LA    ML,MVREQWT          CLOSE WAIT FOR RESPONSE     @OZ26937 22615500
MVRPLNWT OI    ICESNDST,ICEWTRSP   INDICATE WAIT FOR RESPONSE  @OZ26937 22616000
         TM    ICEFLAGS,ICECHDIR   TEST SESSION STATUS         @OZ26937 22616500
         BZ    MVRPLNEC            BR IF CHANGE DIRECTION NOT PENDNG R4 22617000
         OI    RPLRH3,RPLCMD       TURN ON CHGE DIRECTION BIT IN RH  R4 22617500
         SPACE 1                                                     R4 22618000
MVRPLNEC TM    MDCTFMT,DCTPALTC    TEST DATA STREAM FORMAT           R4 22618500
         BZ    MVRPLCHN            SKIP XLATE IF ALT CODE FLAG OFF   R4 22619000
         L     R14,RPLAREA         GET 1ST DATA BYTE ADDRESS         R4 22619500
         L     R0,RPLRLEN          GET R.U. LENGTH                   R4 22620000
         TM    RPLOPT12,RPLFMHDR   TEST FORMAT (FM HDR) INDICATOR    R4 22620500
         BZ    MVRPLALT            BRANCH IF NO FM HEADERS           R4 22621000
         SLR   R1,R1               CLIP FM HDR OFF FRONT             R4 22621500
SKIP520  IC    R1,0(,R14)           OF R.U. BY SUBTRACTING           R4 22622000
         SLR   R0,R1                 FMH LTH FROM R.U. LTH           R4 22622500
         TM    FMHBYTE1-FMHDSECT(R14),FMHCNCAT TEST FMH CONCATENATED R4 22623000
         LA    R14,0(R1,R14)       ADD FMH LENGTH TO R.U. ADDRESS    R4 22623500
         BO    SKIP520             LOOP BACK IF MORE FM HEADERS      R4 22624000
         SPACE 1                                                     R4 22624500
*                                                                    R4 22625000
*                             R.U. ALTERNATE CODE TRANSLATION        R4 22625500
*                                                                    R4 22626000
         SPACE 1                                                     R4 22626500
MVRPLALT LTR   R0,R0               TEST LENGTH OF R.U. DATA          R4 22627000
         BNP   MVRPLCHN            BYPASS TRANSLATE IF NO DATA       R4 22627500
         OI    RPLRH3,RPLCSI       TURN ON ALTERNATE CODE BIT IN RH  R4 22628000
         BCTR  R0,0                ADJUST TRUE LENGTH TO MACHINE LTH R4 22628500
         LA    R1,255              LOAD MAX LTH FOR SINGLE EXECUTE   R4 22629000
MVRPLAL1 CLR   R1,R0               SEE IF 1 EX WILL COVER ACTUAL LTH R4 22629500
         BNH   SKIP530             BRANCH IF NOT OR IF JUST MAKES IT R4 22630000
MVRPLAL2 LR    R1,R0               LOAD REMAINDER FOR LAST EXECUTE   R4 22630500
SKIP530  EX    R1,MVRPLTRA         EXECUTE TRANSLATE TO SNA ALT CODE R4 22631000
         BNL   MVRPLCHN            EXIT IF WHOLE BUFFER DONE         R4 22631500
         LA    R14,256(,R14)       STEP TO NEXT POSITION IN BUFFER   R4 22632000
         SLR   R0,R1               REDUCE LENGTH BY 256 (R1 = 255,   R4 22632500
         BCT   R0,MVRPLAL1          +1 FOR BCT) & BRANCH IF PLUS     R4 22633000
         B     MVRPLAL2            BRANCH TO TRANSLATE LAST BYTE     R4 22633500
         SPACE 1                                                     R4 22634000
MVRPLTRA TR    0(*-*,R14),MVPASCII ** EXECUTE ONLY **                R4 22634500
         SPACE 1                                                     R4 22635000
MVRPLCHX DC    AL1(RPLFIRST)  *0*  OUT & -EOC = FIRST IN CHAIN       R4 22635500
         DC    AL1(ICEINCHN)                  = IN  & -EOC (EXCL.OR) R4 22636000
         DC    AL1(RPLONLY)   *2*  OUT &  EOC = ONLY IN CHAIN        R4 22636500
         DC    AL1(ICEOCPND)                  = OUT & -EOC (EXCL.OR) R4 22637000
         DC    AL1(RPLMIDLE)  *4*  IN  & -EOC = MIDDLE IN CHAIN      R4 22637500
         DC    AL1(0)                         = IN  & -EOC (EXCL.OR) R4 22638000
         DC    AL1(RPLLAST)   *6*  IN  &  EOC = LAST IN CHAIN        R4 22638500
         DC    AL1(ICEINCHN+ICEOCPND)         = OUT & -EOC (EXCL.OR) R4 22639000
         EJECT                                                       R4 22639500
*                                                                    R4 22640000
*                             SET R.U. CHAIN POSITION, UPDATE STATE  R4 22640500
*                                                                    R4 22641000
         SPACE 2                                                     R4 22641500
MVRPLCHN LA    R15,MVRPLCHX(R15)   USING OLD CHAIN STATE AS INDEX    R4 22642000
         MVC   RPLCHN,0(R15)        INTO TRANSITION TABLE, SET R.U.  R4 22642500
         XC    ICESNDST,1(R15)       CHAIN POSITION AND NEW STATE    R4 22643000
         SPACE 1                                                     R4 22643500
MVRPLOCR LH    R1,ICEOUTCT         INCREMENT                         R4 22644000
         LA    R1,1(,R1)            OUTBOUND                         R4 22644500
         STH   R1,ICEOUTCT           CIRCULATION                     R4 22645000
         SPACE 1                                                     R4 22645500
MVRPLRQN MVI   RPLSEQTP,VSEQSEND   SET 'SEND' CONTROL SEQUENCE       R4 22646000
         MVI   RPLREQ,RPLSNDCD     SET RPL REQUEST TYPE TO 'SEND'    R4 22646500
         SPACE 3                                                     R4 22647000
*                                                                    R4 22647500
*        ATTEMPT TO QUEUE RPL TO ICE OUTBOUND QUEUE                  R4 22648000
*                                                                    R4 22648500
         SPACE 2                                                     R4 22649000
MVRPLQOB MVC   RPLDCT+1(3),ICELDCT+1  MOVE LINE DCT ADDRESS TO RPL   R4 22649500
         ST    MICE,RPLICE         STORE ICE ADDRESS IN RPL          R4 22650000
         L     R0,ICECID           GET SESSION COMMUNICATION ID      R4 22650500
         ST    R0,RPLARG           STORE IN RPL ARG FIELD            R4 22651000
         L     R15,ICEOUTBF        TEST OUTBOUND CIRCULATION         R4 22651500
         O     R15,ICEOUTHD         FOR ANY CURRENT ACTIVITY         R4 22652000
         BZ    MVRPLXIN            EXECUTE THIS REQUEST IF NONE      R4 22652500
         LA    R1,0(,MBUF)         MOVE BUF ADDR TO 'NEW TAIL' REG.  R4 22653000
         L     MBUF,RPLNEXT        GET NEXT BUFFER ADDRESS IN CHAIN  R4 22653500
         SPACE 1                                                     R4 22654000
MVRPLQHD LM    R14,R15,ICEOUTHD    PICK UP OUTBOUND QUEUE POINTERS   R4 22654500
MVRPLQH1 LA    R0,ICEOUTHD         LOAD 'END OF QUEUE' SPECIAL VALUE R4 22655000
         LTR   R14,R14             TEST OLD HEAD ELEMENT ADDRESS     R4 22655500
         ST    R0,RPLNEXT-RPLDSECT(,R1)  STORE Q-END VALUE IN NEW BF R4 22656000
         BZ    MVRPLQUP            BRANCH IF QUEUE WAS EMPTY         R4 22656500
         USING RPLDSECT,R15        USE TEMPORARY RPL ADDRESSABILITY  R4 22657000
         CS    R0,R1,RPLNEXT       CHAIN NEW BUF TO OLD TAIL ELEMENT R4 22657500
         LR    R0,R14              NEW HEAD ELEM. = OLD HEAD ELEM.   R4 22658000
         BE    MVRPLQU1            CONTINUE IF UPDATE SUCCESSFUL     R4 22658500
         B     MVRPLQHD            ELSE START OVER FROM BEGINNING    R4 22659000
         DROP  R15                 DISCARD TEMP RPL ADDRESSABILITY   R4 22659500
         SPACE 1                                                     R4 22660000
MVRPLQUP LR    R0,R1               IF QUE EMPTY, NEW HEAD = NEW TAIL R4 22660500
MVRPLQU1 CDS   R14,R0,ICEOUTHD     UPDATE OUTBOUND QUEUE POINTERS    R4 22661000
         BER   ML                  RETURN TO CALLER IF SUCCESSFUL    R4 22661500
         B     MVRPLQH1            ELSE START OVER FROM BEGINNING    R4 22662000
         EJECT                                                       R4 22662500
*                                                                    R4 22663000
*        EXECUTE THE RPL - PASS IT TO VTAM                           R4 22663500
*                                                                    R4 22664000
         SPACE 1                                                     R4 22664500
MVRPLXIN TM    ICESTAT,ICEABORT    TEST SESSION STATUS               R4 22665000
         BO    MVFREEOQ            DISCARD ALL BUFFERS IF ABORTING   R4 22665500
         ST    MBUF,ICEOUTBF       SAVE ADDR OF CURRENT OUTB BUFF    R4 22666000
         SPACE 1                                                     R4 22666500
MVRPLXBR OI    RPLEXTDS,RPLBRANC   FORCE BRANCH ENTRY (FAST PATH)      C22667000
                                    FOR SEND/RESETSR/RECEIVE-ANY     R4 22667500
         SPACE 1                                                     R4 22668000
MVRPLXEC L     R15,=A(VEXITRPL)    SET RPL EXIT                      R4 22668500
         ST    R15,RPLECB           ROUTINE ADDRESS                  R4 22669000
         OI    RPLEXTDS,RPLEXIT    SHOW EXIT IS PRESENT              R4 22669500
         ST    SAVE,RPLPCE         SAVE PCE ADDRESS IN RPL           R4 22670000
         SLR   R0,R0               CLEAR REQ TYPE PARAMETER REG      R4 22670500
         LR    R1,MBUF             PLACE BUFFER ADDR IN R1 FOR VTAM  R4 22671000
         L     MBUF,RPLNEXT        GET NEXT BUFFER ADDRESS ON CHAIN  R4 22671500
         DROP  MBUF                TEMPORARILY CHANGE BASE           R4 22672000
         USING RPLDSECT,R1          FOR RPL ADDRESSABILITY           R4 22672500
         MVI   RPLOPT1,RPLSEQ+RPLASY  INDICATE ASYNCHRONOUS REQUEST  R4 22673000
         IC    R0,RPLREQ           PICK UP REQUEST TYPE FROM RPL     R4 22673500
         L     R14,RPLDACB         GET ADDRESS OF ACB                R4 22674000
         USING ACBDSECT,R14        USE TEMPORARY ACB ADDRESSABILITY  R4 22674500
         LA    R13,RPLSAVEA        GET SAVEAREA ADDR FOR VTAM        R4 22675000
         L     R15,ACBINRTN        GET ADDR OF INTERFACE ROUTINE     R4 22675500
         BALR  R14,R15             LINK TO THE INTERFACE ROUTINE     R4 22676000
         L     SAVE,RPLPCE         RESTORE PCE ADDRESS               R4 22676500
         LTR   R15,R15             CHECK FOR SUCCESSFUL COMPLETION   R4 22677000
         BZR   ML                  RETURN TO CALLER IF ACCEPTED      R4 22677500
         EJECT                                                       R4 22678000
*                                                                    R4 22678500
*        QUEUE RETRIES TO THE LINE MANAGER                           R4 22679000
*                                                                    R4 22679500
         SPACE 1                                                     R4 22680000
         CL    R15,=F'4'           TEST GENERAL RETURN CODE          R4 22680500
         BNE   R01                 TAKE DISASTER EXIT IF ACB NOT OPN R4 22681000
         CL    R0,=A(USFLOGIC)     TEST RECOVERY ACTION RETURN CODE  R4 22681500
         BNL   R01                 TAKE DISASTER EXIT IF LOGIC ERR   R4 22682000
         L     R0,$RJECHEQ         PICK UP LINE MANAGER BUFF QUEUE   R4 22682500
SKIP540  ST    R0,RPLNEXT          ATTEMPT TO CHAIN                  R4 22683000
         CS    R0,R1,$RJECHEQ       RETRY RPL TO QUEUE               R4 22683500
         BNE   SKIP540             RETRY IF UNSUCCESSFUL             R4 22684000
         SPACE 3                                                     R4 22684500
*                                                                    R4 22685000
*        POST THE LINE MANAGER FOR WORK                              R4 22685500
*                                                                    R4 22686000
         SPACE 1                                                     R4 22686500
         L     R14,RPLDACB         RESTORE ACB ADDRESS               R4 22687000
         L     R14,ACBLNDCT        GET ADDRESS OF LOGON DCT          R4 22687500
         USING DCTDSECT,R14        TEMPORARY DCT ADDRESSABILITY      R4 22688000
         L     R15,DCTPCE          GET LINE MANAGER PCE ADDRESS      R4 22688500
         $POST (R15),WORK          POST THE LINE MANAGER FOR WORK    R4 22689000
         BR    ML                  RETURN TO CALLER                  R4 22689500
         DROP  R14                 DISCARD LOGON DCT ADDRESSABILITY  R4 22690000
         DROP  R1                  RE-ESTABLISH NORMAL BASE          R4 22690500
         USING RPLDSECT,MBUF        FOR RPL ADDRESSABILITY           R4 22691000
         EJECT                                                       R4 22691500
*                                                                    R4 22692000
*                             CHECK IF OUTBOUND QE NEEDS RESTARTING  R4 22692500
*                                                                    R4 22693000
         SPACE 1                                                     R4 22693500
MVRPLKOQ DS    0H                  ROUTINE EXPECTS R0 TO BE ZERO     R4 22694000
         CL    R0,ICEOUTBF         COMPARE 0 & ADDR OF BUF IN VTAM   R4 22694500
         BNER  ML                  EXEC-RPL NOT NEEDED IF ONE ACTIVE R4 22695000
         CL    R0,ICEOUTHD         COMPARE 0 & 1ST ADDR ON OUTBD QUE R4 22695500
         BER   ML                  RETURN IF OUTBD QUEUE EMPTY       R4 22696000
         TM    ICESTAT,ICEABORT+ICECLOSE  TEST SESSION STATUS        R4 22696500
         BNZ   MVFREEOQ            GO FREE OUTBD QUEUE IF ABORTING   R4 22697000
         LR    R1,MBUF             SAVE CURRENT BUFFER POINTER       R4 22697500
         L     MBUF,ICEOUTHD       GET ADDR OF 1ST BUF ON OUTBOUND Q R4 22698000
         L     R14,RPLNEXT         GET NEXT BUFFER POINTER           R4 22698500
         ST    R1,RPLNEXT          CHAIN CURR BUF SO XEC-RPL POPS IT R4 22699000
         LA    R15,ICEOUTHD        LOAD SPECIAL VALUE TO CHECK Q END R4 22699500
         ST    R14,ICEOUTHD        PROMOTE NEXT BUFFER TO HEAD OF Q  R4 22700000
         CLR   R14,R15             COMPARE CHAIN PTR & SPECIAL VALUE R4 22700500
         BNE   SKIP550             BRANCH IF THIS BUFFER NOT LAST    R4 22701000
         XC    ICEOUTHD(8),ICEOUTHD  ELSE CLEAR OUTBD QUEUE POINTERS R4 22701500
         B     MVRPLXIN            GO EXECUTE RPL                    R4 22702000
         SPACE 1                                                     R4 22702500
         USING RPLDSECT,R14        USE TEMPORARY RPL ADDRESSABILITY  R4 22703000
SKIP550  C     R15,RPLNEXT         COMPARE SPEC. VALUE & 2ND CHN PTR R4 22703500
         BNE   MVRPLXIN            GO EXEC RPL IF NEW HEAD NOT LAST  R4 22704000
         ST    R14,ICEOUTTL        ELSE NEW HEAD IS ALSO NEW TAIL    R4 22704500
         B     MVRPLXIN            GO EXEC RPL AND RETURN TO CALLER  R4 22705000
         DROP  R14                 DISCARD TEMP. RPL ADDRESSABILITY  R4 22705500
         EJECT                                                       R4 22706000
*                                                                    R4 22706500
*                             MVRPLGET - GET VTAM RPL BUFFER         R4 22707000
*                                                                    R4 22707500
         SPACE 1                                                     R4 22708000
MVRPLNO  ST    ML,DCTEWF           SAVE RETURN ADDR ACROSS WAIT      R4 22708500
        $WAIT  BUF,SAVE=NO,INHIBIT=NO  WAIT FOR AVAILABLE BUFFERS    R4 22709000
        $RESTORE                   RESTORE ACCESS METHOD REGISTERS   R4 22709500
         L     ML,DCTEWF           RESTORE RETURN ADDRESS            R4 22710000
         TM    ICESNDST,ICECNCEL   TEST SESSION SEND STATUS          R4 22710500
         BO    MVREQCAN            ABORT $EXTP CALL IF CHAIN CANCEL  R4 22711000
         SPACE 1                                                     R4 22711500
MVRPLGET $GETBUF MVRPLNO,TYPE=VTAM GET A VTAM RPL BUFFER             R4 22712000
         MVI   RPLREQ-RPLDSECT(R1),RPLSNDCD  SET REQ TYPE TO 'SEND'  R4 22712500
         MVI   RPLSRTYP-RPLDSECT(R1),RPLNFSYN STYPE = REQUEST  @OZ32746C22712600
                                   RTYPE = NDFSYN,NDFASY,NRESP @OZ32746 22712700
         L     R15,ICEADCT         GET LOGON DCT ADDRESS             R4 22713000
         L     R15,DCTACB-DCTDSECT(,R15)  STORE ADDRESS              R4 22713500
         ST    R15,RPLDACB-RPLDSECT(,R1)   OF ACB IN RPL             R4 22714000
         LA    R15,RPLNEXT         POINT TO POSSIBLE BUF CHAIN FIELD R4 22714500
         LTR   MBUF,MBUF           TEST CURRENT BUFFER ADDRESS       R4 22715000
         BNZ   SKIP560             BRANCH IF BUFFER ALREADY PRESENT  R4 22715500
         LR    MBUF,R1             ELSE NEW BUFFER IS CURRENT BUFFER R4 22716000
         LA    R15,DCTBUFAD        POINT TO DCT BUF CHAIN ANCHOR     R4 22716500
SKIP560  ST    R1,0(,R15)          STORE NEW BUFFER ADDRESS          R4 22717000
         BR    ML                  RETURN TO CALLER                  R4 22717500
         EJECT                                                       R4 22718000
*                                                                    R4 22718500
*                   PURGE SESSION'S RPLS ON REMOTE CONSOLE QUEUE     R4 22719000
*                                                                    R4 22719500
         SPACE 2                                                     R4 22720000
         USING RPLDSECT,R15        USE TEMPORARY RPL ADDRESSABILITY  R4 22720500
MVFREEIQ LA    R15,$MCONMSG-(TPBLCCAD-BUFDSECT)  SIMULATE BISYNC BUF R4 22721000
         SPACE 1                                                     R4 22721500
MVFREEC1 LA    R14,TPBLCCAD-BUFDSECT(,R15) POINT TO BISYNC CHAIN FLD R4 22722000
         SPACE 1                                                     R4 22722500
MVFREEC2 L     R15,0(,R14)         GET ADDR OF NEXT BUFFER ON QUE    R4 22723000
         SPACE 1                                                     R4 22723500
MVFREEC3 LTR   R0,R15              SAVE COPY, TEST BUFFER ADDRESS    R4 22724000
         BZ    MVFREEC4            FREE INTERCEPTED RPLS IF AT Q END R4 22724500
         TM    RPLTYPE,BUFTP+BUFRPL  TEST TP BUFFER TYPE            R41 22725000
         BNO   MVFREEC1            GET NEXT BUFFER IF BSC           R41 22725500
         LR    R1,R14              SAVE PTR TO PREDECESSOR CHAIN FLD R4 22726000
         LA    R14,RPLNEXT         POINT TO SNA RPL CHAIN FIELD      R4 22726500
         CL    MICE,RPLICE         CHECK ASSOCIATED SESSION          R4 22727000
         BNE   MVFREEC2            GET NEXT BUFFER IF NOT THIS ICE   R4 22727500
         L     R15,0(,R14)         REMOVE INTERCEPTED BUFFER         R4 22728000
         ST    R15,0(,R1)           FROM REMOTE CONSOLE QUEUE        R4 22728500
         ST    MBUF,0(,R14)        JOIN TO REST OF                   R4 22729000
         LR    MBUF,R0              RPLS BEING FREED                 R4 22729500
         B     MVFREEC3            LOOP BACK TO CHECK FOR QUE END    R4 22730000
         SPACE 1                                                     R4 22730500
MVFREEC4 LTR   R14,MBUF            TEST 1ST INTERCEPTED RPL ADDRESS  R4 22731000
         BZ    MVFREEI1            GO FREE INBOUND QUE IF NONE       R4 22731500
         L     R15,ICEINTL         ELSE LOAD AND TEST ADDRESS        R4 22732000
         LTR   R15,R15              OF LAST RPL ON INBOUND QUE       R4 22732500
         BZ    MVFREEI2            GO FREE INTERCEPTEDS IF QUE EMPTY R4 22733000
         ST    MBUF,RPLNEXT        ELSE ADD INTERCEPTEDS TO INBD QUE R4 22733500
         DROP  R15                 DISCARD TEMP RPL ADDRESSABILITY   R4 22734000
         SPACE 2                                                     R4 22734500
*                             FREE ICE INBOUND QUEUE                 R4 22735000
         SPACE 1                                                     R4 22735500
MVFREEI1 L     R14,ICEINHD         GET ADDR OF 1ST BUF ON INBND QUE  R4 22736000
         USING RPLDSECT,R14        USE TEMPORARY RPL ADDRESSABILITY  R4 22736500
         LTR   MBUF,R14            SAVE AND TEST BUFFER ADDRESS      R4 22737000
         BZR   ML                  RETURN IF NOTHING TO FREE         R4 22737500
         SLR   R15,R15             CLEAR R15 FOR NUMBER OF BUFFERS   R4 22738000
         SPACE 1                                                     R4 22738500
MVFREEI2 L     R14,RPLNEXT         GET ADDR OF NEXT BUFFER IF ANY    R4 22739000
         BCTR  R15,0               COUNT A BUFFER                    R4 22739500
         LTR   R14,R14             TEST IF ANOTHER PRESENT           R4 22740000
         BNZ   MVFREEI2            LOOP UNTIL ALL EXHAUSTED          R4 22740500
         L     R1,ICEINLM          UPDATE COUNT OF INBOUND           R4 22741000
SKIP570  LA    R0,0(R15,R1)         DATA & SYNCH DFC'S ON ICE        R4 22741500
         CS    R1,R0,ICEINLM         INBND QUE AND L.M. WORK QUE     R4 22742000
         BNE   SKIP570             RETRY UNTIL SUCCESSFUL            R4 22742500
         XC    ICEINHD(8),ICEINHD  CLEAR INBOUND QUEUE POINTERS      R4 22743000
         B     MVFREPRG            FREE ALL UNHOOKED BUFS & RETURN   R4 22743500
         DROP  R14                 DISCARD TEMP RPL ADDRESSABILITY   R4 22744000
         EJECT                                                       R4 22744500
*                                                                    R4 22745000
*                             FREE ICE OUTBOUND QUEUE                R4 22745500
*                                                                    R4 22746000
         SPACE 1                                                     R4 22746500
MVFREEOQ SLR   R0,R0               GET DOUBLE ZERO                   R4 22747000
         SLR   R1,R1                FOR COMPARE & SWAP               R4 22747500
         LM    R14,R15,ICEOUTHD    UNHOOK                            R4 22748000
SKIP580  CDS   R14,R0,ICEOUTHD      OUTBOUND                         R4 22748500
         BNE   SKIP580               QUEUE                           R4 22749000
         LTR   MBUF,MBUF           TEST CURRENT BUFFER ADDRESS       R4 22749500
         BZ    SKIP590             BRANCH IF NONE                    R4 22750000
         ST    R14,RPLNEXT         MAKE CURRENT BUFFER APPEAR        R4 22750500
         LR    R14,MBUF             TO BE 1ST ON OUTBOUND QUEUE      R4 22751000
         LTR   R15,R15             MAKE CURRENT BUFFER APPEAR        R4 22751500
         BNZ   SKIP590              TO BE LAST ON OUTBOUND QUE       R4 22752000
         LR    R15,R14               IF REAL QUEUE WAS EMPTY         R4 22752500
SKIP590  LTR   MBUF,R14            TEST 1ST UNHOOKED BUFFER ADDRESS  R4 22753000
         LH    R1,ICEOUTCT         GET OUTBOUND CIRCULATION COUNT    R4 22753500
         BZR   ML                  RETURN IF NO BUFFERS TO FREE      R4 22754000
         ST    R0,RPLNEXT-RPLDSECT(,R15)  CLEAR END-Q SPECIAL VALUE  R4 22754500
         SPACE 1                                                     R4 22755000
         USING RPLDSECT,R14        USE TEMPORARY RPL ADDRESSABILITY  R4 22755500
MVFREEOT TM    RPLSRTYP,RPLSRESP   TEST SEND TYPE                    R4 22756000
         BO    MVFRERSP            GO CHANGE INBOUND CT IF RESPONSE  R4 22756500
         BCTR  R1,0                DECREMENT OUTBOUND CIRCULATION    R4 22757000
         CLC   RPLCNTDF(3),MSNADATA  TEST R.U. TYPE                  R4 22757500
         BNE   MVFREEOX            DON'T ADJUST COUNT IF SYNCH DFC   R4 22758000
         TM    RPLCHN,RPLLAST+RPLONLY  TEST R.U. CHAIN POSITION      R4 22758500
         BZ    MVFREEOX            NO ADJUST IF NOT END OF CHAIN     R4 22759000
         IC    R0,ICERSPCT         DECREMENT                         R4 22759500
         BCTR  R0,0                 OVERLAPPING                      R4 22760000
         STC   R0,ICERSPCT           CHAIN COUNT                     R4 22760500
         SPACE 1                                                     R4 22761000
MVFREEOX ICM   R14,15,RPLNEXT      GET NEXT UNHOOKED BUFFER          R4 22761500
         BNZ   MVFREEOT            LOOP BACK IF NOT END OF CHAIN     R4 22762000
         STH   R1,ICEOUTCT         REPLACE OUTBD CIRCULATION COUNT   R4 22762500
         B     MVFREPRG            PURGE UNHOOKED OUTBD Q & RETURN   R4 22763000
         SPACE 2                                                     R4 22763500
MVFRERSP STH   R1,ICEOUTCT         FREE UP R1 FOR 'CS' USE           R4 22764000
         L     R0,ICEINLM          DECREMENT                         R4 22764500
SKIP600  LR    R1,R0                INBOUND DATA                     R4 22765000
         BCTR  R1,0                  + SYNCH DFC                     R4 22765500
         CS    R0,R1,ICEINLM          OUTSTANDING                    R4 22766000
         BNE   SKIP600                 REQUEST COUNT                 R4 22766500
         LH    R1,ICEOUTCT         RELOAD OUTBOUND COUNT             R4 22767000
         B     MVFREEOX             AND RESUME LOOP                  R4 22767500
         DROP  R14                 DISCARD TEMP. RPL ADDRESSABILITY  R4 22768000
         EJECT                                                       R4 22768500
         SPACE 3                                                     R4 22769000
*                                                                    R4 22769500
*                             FREE 1 BUFFER FROM INBOUND CYCLE       R4 22770000
*                                                                    R4 22770500
         SPACE 2                                                     R4 22771000
MVFRELBF L     R15,RPLNEXT         GET ADDR OF NEXT BUF ON CHAIN     R4 22771500
         SLR   R0,R0               GET ZERO                          R4 22772000
         ST    R15,DCTBUFAD        POP NEXT BUF ADDR INTO DCT        R4 22772500
         ST    R0,RPLNEXT          CLEAR BUFFER CHAIN FIELD          R4 22773000
         SPACE 2                                                     R4 22773500
MVFRESPD TM    RPLVTFL2,RPLEX      TEST TYPE OF RESPONSE REQUESTED   R4 22774000
         BO    MVFREEIN            FREE IF EXCEPTION RESPONSES ONLY  R4 22774500
         SPACE 1                                                     R4 22775000
MVFRESPN MVI   RPLSRTYP,RPLSRESP+RPLNFSYN  SET STYPE = RESP &  @OZ32746C22775500
                                   RTYPE = NDFSYN,NDFASY,NRESP @OZ32746 22775600
         TM    RPLVTFL2,RPLNFME    TEST TYPE OF RESPONSE REQUESTED   R4 22776000
         BZ    MVRPLRQN            GO SEND IF DEFINITE RESPONSE 1    R4 22776500
         TM    RPLVTFL2,RPLRRN     TEST TYPE OF RESPONSE REQUESTED   R4 22777000
         BO    MVRPLRQN            GO SEND IF DEFINITE RESPONSE 2    R4 22777500
         SPACE 2                                                     R4 22778000
MVFREEIN TM    RPLSRTYP,RPLDFASY   TEST TYPE OF R.U. BEING FREED     R4 22778500
         BO    MVFREPRG            SKIP RESETSR CHECK IF NOT 'DFSYN' R4 22779000
         SPACE 1                                                     R4 22779500
         L     R0,ICEINLM          DECREMENT COUNT OF INBOUND,       R4 22780000
SKIP610  LR    R1,R0                OUTSTANDING DATA OR SYNCHR.      R4 22780500
         BCTR  R1,0                  DATA FLOW CONTROL RPLS, ON      R4 22781000
         CS    R0,R1,ICEINLM          ICE INBND Q OR L.M. WORK Q     R4 22781500
         BNE   SKIP610             RETRY IF UNSUCCESSFUL             R4 22782000
         TM    ICESTAT,ICERCVSP    TEST SESSION STATUS               R4 22782500
         BZ    MVFREPRG            SKIP RESETSR CHECK IF NOT CS MODE R4 22783000
         SPACE 1                                                     R4 22783500
         SRL   R0,17               HALVE INBOUND LIMIT VALUE        R41 22784000
         N     R1,=X'0000FFFF'     TRIM CURRENT COUNT VALUE         R41 22784200
         CLR   R1,R0               COMPARE 1/2 COUNT WITH LIMIT     R41 22784500
         BH    MVFREPRG            IF CNT GT 1/2 OF LMT, STILL      R41C22785000
                                    CONGESTED - DON'T 'RESETSR' YET  R4 22785500
         SPACE 1                                                     R4 22786000
         NI    ICESTAT,255-ICERCVSP  RESET 'CONTINUE SPECIFIC' FLAG R41 22786100
         MVI   RPLREQ,RPLRSRCD     SET 'RESETSR' CODE IN RPL         R4 22786500
         NI    RPLOPT5,255-RPLDLGIN  FORCE OPTCD = CA                R4 22787000
         MVI   RPLSRTYP,0          SET RTYPE = (NDFASY,NRESP,DFSYN)  R4 22787500
         MVI   RPLSEQTP,VSEQRSCA   PRESET LINE MANAGER SEQUENCE TYPE R4 22788000
         B     MVRPLQOB            EXEC RESETSR & RETURN VIA SUBR    R4 22788500
         EJECT                                                       R4 22789000
         SPACE 3                                                     R4 22789500
*                                                                    R4 22790000
*                             CHECK RECEIVE-ANY LEVEL FROM LINE MGR  R4 22790500
*                                                                    R4 22791000
         SPACE 2                                                     R4 22791500
MVFREELM LA    MBUF,0(,MBUF)       PURIFY AND TEST                   R4 22792000
         LTR   MBUF,MBUF            BUFFER ADDRESS                   R4 22792500
         BNZ   MVFREPR1            REJOIN COMMON LOGIC IF HAVE BUFF  R4 22793000
         L     R15,ICEADCT         GET APPL LOGON DCT ADDRESS        R4 22793500
         SPACE 1                                                     R4 22794000
         USING DCTDSECT,R15        USE TEMP LOGON DCT ADDRESSABILITY R4 22794500
MVFRECHK CLC   MDCTRALM,MDCTRACT   COMPARE ACTIVE LIMIT & ACTIVE CNT R4 22795000
         BNHR  ML                  RETURN IF ENOUGH RECEIVE-ANY'S UP R4 22795500
         TM    MDCTSTAT,DCTSINON+DCTSOFF  TEST LOGON DCT STATUS      R4 22796000
         BNMR  ML                  LET RCV-ANY'S QUIESCE IF INACTIVE R4 22796500
         SPACE 1                                                     R4 22797000
         L     WA,DCTACB           SAVE ACB ADDRESS ACROSS $GETBUF   R4 22797500
         DROP  R15                 DISCARD LOGON DCT ADDRESSABILITY  R4 22798000
         SPACE 1                                                     R4 22798500
        $GETBUF TYPE=VTAM          TRY TO GET BUFFER FOR RECEIVE-ANY R4 22799000
         BZR   ML                  IT'S OK IF CAN'T GET BUF - RETURN R4 22799500
         LA    MBUF,0(,R1)         LOAD PURIFIED BUFFER ADDRESS      R4 22800000
         ST    WA,RPLDACB          STORE ACB ADDRESS IN RPL          R4 22800500
         L     R14,=X'01000000'    LOAD CONSTANT FOR Q COUNT UPDATES R4 22801000
         L     R15,ACBLNDCT-ACBDSECT(,WA)  GET APPL LOGON DCT ADDR   R4 22801500
         B     MVFRECQE            UPDATE ACTIVE CNT & EXEC RECV-ANY R4 22802000
         SPACE 3                                                     R4 22802500
*                                                                    R4 22803000
*                             FREE 1 BUFFER FROM OUTBOUND CYCLE      R4 22803500
*                                                                    R4 22804000
         SPACE 1                                                     R4 22804500
MVFREOUT L     R15,RPLNEXT         GET ADDR OF NEXT BUF ON CHAIN     R4 22805000
         SLR   R0,R0               GET ZERO                          R4 22805500
         ST    R15,DCTBUFAD        POP NEXT BUF ADDR INTO DCT        R4 22806000
         ST    R0,RPLNEXT          CLEAR BUFFER CHAIN FIELD          R4 22806500
         EJECT                                                       R4 22807000
         SPACE 3                                                     R4 22807500
*                                                                    R4 22808000
*                                                                    R4 22808500
*                             PURGE 0 OR MORE VTAM RPL BUFFERS       R4 22809000
*                                                                    R4 22809500
         SPACE 2                                                     R4 22810000
MVFREPRG LA    MBUF,0(,MBUF)       PURIFY AND TEST                   R4 22810500
MVFREPR0 LTR   MBUF,MBUF            BUFFER ADDRESS                   R4 22811000
         BZR   ML                  RETURN IF NO MORE BUFFERS TO FREE R4 22811500
         SPACE 1                                                     R4 22812000
MVFREPR1 L     R15,RPLDACB         GO THROUGH                        R4 22812500
         USING ACBDSECT,R15         ACB TO GET                       R4 22813000
         L     R15,ACBLNDCT          APPL LOGON DCT                  R4 22813500
         USING DCTDSECT,R15           ADDRESSABILITY                 R4 22814000
         TM    MDCTSTAT,DCTSINON+DCTSOFF  TEST LOGON DCT STATUS      R4 22814500
         BNM   MVFREPR2            BYPASS BUF RECYCLING IF INACTIVE  R4 22815000
         L     R14,=X'01000000'    LOAD CONSTANT FOR Q COUNT UPDATES R4 22815500
         CLC   MDCTRALM,MDCTRACT   COMPARE ACTIVE LIMIT & ACTIVE CNT R4 22816000
         BH    MVFRECQE            BRANCH IF NEED ACTIVE RECEIVES    R4 22816500
         CLC   MDCTRQLM,MDCTRQCT   COMPARE AHEAD QUE LIMIT VS. COUNT R4 22817000
         BH    MVFRECQ0            BR IF AHEAD QUEUE NEEDS BUFFERS   R4 22817500
         SPACE 1                                                     R4 22818000
MVFREPR2 LR    R1,MBUF             COPY BUF ADDR TO R1 FOR $FREEBUF  R4 22818500
         L     MBUF,RPLNEXT        GET NEXT BUF ON CHAIN BEING FREED R4 22819000
        $FREEBUF (R1)              FREE THE RPL BUFFER               R4 22819500
         B     MVFREPRG            LOOP UNTIL BUF CHAIN EXHAUSTED    R4 22820000
         SPACE 2                                                     R4 22820500
MVFRECQE OR    MBUF,R14            PREPARE TO INCREMENT ACTIVE COUNT R4 22821000
MVFRECQ0 OI    RPLOPT5,RPLNODE     SET OPTCD = ANY (ALL TERMINALS)   R4 22821500
         OI    RPLOPT7,RPLQOPT     SET OPTCD = Q (WAIT IF NO DATA)   R4 22822000
         MVI   RPLSRTYP,RPLRRESP+RPLDFASY  RTYPE=(DFSYN,DFASY,RESP)  R4 22822500
         LA    R0,RPLBUFST         GET ADDRESS OF DATA AREA          R4 22823000
         ST    R0,RPLAREA          STORE IT IN RPL                   R4 22823500
         LH    R1,$BFSZSNA         INSURE CORRECT              @OZ28434 22823600
         ST    R1,RPLBUFL            SNA BUFFER SIZE           @OZ28434 22823700
         MVI   RPLSEQTP,VSEQRECV   SET L.M. SEQUENCE TO NORMAL SEQ   R4 22824000
         MVI   RPLREQ,RPLRCVCD     SET RPL REQUEST TYPE TO 'RECEIVE' R4 22824500
         STCM  R15,7,RPLDCT+1      SAVE LOGON DCT ADDR IN RPL        R4 22825000
         SLR   R0,R0               CLEAR                             R4 22825500
         ST    R0,RPLICE            ICE POINTER,                     R4 22826000
         ST    R0,RPLBCHN            RCV-ANY QE BACK-CHAIN ADDR,     R4 22826500
         ST    R0,RPLRLEN             LENGTH, AND                    R4 22827000
         STCM  R0,7,RPLCNTDF           R.U. TYPE INDICATORS          R4 22827500
         L     R0,MDCTRABF         GET RECEIVE Q COUNT & 1ST BUF AD  R4 22828000
         EJECT                                                       R4 22828500
         SPACE 3                                                     R4 22829000
MVFRECQ1 LTR   R1,R0               COPY DATA TO WORK REGISTER        R4 22829500
         ST    R0,RPLFCHN          JOIN RECEIVE Q TO CURRENT BUFFER  R4 22830000
         BZ    SKIP620             BYPASS BACK-CHN UPDATE IF 1ST BUF R4 22830500
         ST    MBUF,RPLBCHN-RPLDSECT(,R1)  BACK-CHAIN Q TO CURR BUF  R4 22831000
SKIP620  N     R1,=X'FF000000'     ISOLATE RECEIVE QUEUE COUNT       R4 22831500
         ALR   R1,MBUF             SET NEW 1ST BUF & INCREMENT COUNT R4 22832000
         CS    R0,R1,MDCTRABF      REPLACE QUEUE COUNT & 1ST BUF AD  R4 22832500
         BNE   MVFRECQ1            RETRY IF RECEIVE Q UPDATE FAILED  R4 22833000
         SPACE 1                                                     R4 22833500
         CLR   MBUF,R14            TEST FOR ACTIVE COUNT INCREMENTED R4 22834000
         BH    MVFRECVX            BRANCH TO EXEC RECEIVE-ANY IF YES R4 22834500
         OR    MBUF,R14            PREPARE TO INCREMENT AHEAD COUNT  R4 22835000
         L     R14,RPLNEXT         GET NEXT BUF OF CHAIN BEING FREED R4 22835500
         L     R0,MDCTRQBF         GET AHEAD QUE COUNT & 1ST BUF AD  R4 22836000
         SPACE 1                                                     R4 22836500
MVFRECQ2 LR    R1,R0               COPY DATA TO WORK REGISTER        R4 22837000
         ST    R0,RPLNEXT          JOIN AHEAD QUE TO CURRENT BUFFER  R4 22837500
         N     R1,=X'FF000000'     ISOLATE AHEAD QUEUE COUNT         R4 22838000
         ALR   R1,MBUF             SET NEW 1ST BUF & INCREMENT COUNT R4 22838500
         CS    R0,R1,MDCTRQBF      REPLACE QUEUE COUNT & 1ST BUF AD  R4 22839000
         BNE   MVFRECQ2            RETRY IF AHEAD QUE UPDATE FAILED  R4 22839500
         SPACE 1                                                     R4 22840000
         LA    MBUF,0(,R14)        PURIFY NEXT BUFFER ADDRESS        R4 22840500
         B     MVFREPR0            LOOP TILL BUF CHAIN EXHAUSTED     R4 22841000
         DROP  R15                 DISCARD LOGON DCT ADDRESSABILITY  R4 22841500
         SPACE 3                                                     R4 22842000
MVFRECVX CLM   R14,7,RPLNEXT+1     TEST IF MORE BUFFERS BEING FREED  R4 22842500
         BE    MVRPLXBR            IF NONE, GO EXEC RCV-ANY & RETURN R4 22843000
         L     R14,RPLNEXT         GET NEXT BUF ON CHAIN BEING FREED R4 22843500
         USING RPLDSECT,R14        USE TEMP RPL ADDRESSABILITY       R4 22844000
         ST    ML,RPLFCHN          SAVE 1ST LEVEL RETURN ADDRESS     R4 22844500
         DROP  R14                 DISCARD TEMP RPL ADDRESSABILITY   R4 22845000
         BAL   ML,MVRPLXBR         EXECUTE THE CURRENT RECEIVE-ANY   R4 22845500
         L     ML,RPLFCHN          RELOAD 1ST LEVEL RETURN ADDRESS   R4 22846000
         B     MVFREPRG            LOOP UNTIL BUF CHAIN EXHAUSTED    R4 22846500
         EJECT                                                       R4 22857500
*                                                                    R4 22858000
*                             SNA FUNCTION MGMT HEADER BUILD ROUTINE R4 22858500
*                                                                    R4 22859000
         SPACE 2                                                     R4 22859500
MVFMHBDS LA    R1,FMHBEGIN         SET FMH CODE TO 'BEGIN STREAM'    R4 22860000
MVFMHOPN NI    MDCTFMT,255-DCTPPRES-DCTPCPCT  BAN COMPRESS, COMPACT  R4 22861000
         LA    WA,ICEBIND          POINT TO BIND IMAGE               R4 22863000
         USING ISTDBIND,WA         ESTABLISH BIND IMAGE ADDRESSAB'TY R4 22863500
         OI    ICESTAT,ICEALLOC    MARK ICE ALLOCATED                R4 22864000
         TM    BINCMNP,BINALT      TEST COMMON PROTOCOL              R4 22864500
         BO    MVFMHBLD            BRANCH IF ALTERN CODE TO BE USED  R4 22865000
         TM    BINPRIP,BINPCMP     TEST PRIMARY NAU PROTOCOL         R4 22865500
         BZ    MVFMHBLD            BRANCH IF COMPRESSION NOT ALLOWED R4 22866000
         TM    MDCTFEAT,DCTPPRES+DCTPCPCT  TEST RMT DEVICE FEATURES R41 22867000
         BZ    MVFMHBLD            BR IF CAN'T SUPPORT COMPRESSION  R41 22867500
         BM    MVFMHOPP            BR IF COMPRESSION W/O COMPACTION R41 22868000
         TM    BINPFMB1,BINCMPCT   TEST PRIMARY NAU USAGE           R41 22868500
         BZ    MVFMHOPP            BRANCH IF COMPACTION NOT ALLOWED R41 22869000
         OI    MDCTFMT,DCTPCPCT    TURN ON COMPACT  FLAG            R41 22869500
MVFMHOPP OI    MDCTFMT,DCTPPRES    TURN ON COMPRESS FLAG            R41 22872000
         DROP  WA                  DISCARD BIND IMAGE ADDRESSABILITY R4 22872500
         SPACE 1                                                     R4 22873000
MVFMHBLD TM    BINCMNP-BINDSECT+ICEBIND,BINFMHD TEST COMMON PROTOCOL R4 22873500
         BZ    MVFMHNOP            SKIP BUILDING IF FM HDRS NOT USED R4 22874000
         L     WA,RPLAREA          GET ADDR WHERE FMH IS TO BE BUILT R4 22874500
         USING FMHDSECT,WA         ESTABLISH FM HDR ADDRESSABILITY   R4 22875000
         MVC   FMHDSECT(MFMHAL),MFMHA  GET PROTOTYPE TYPE 1          R4 22875500
         STC   R1,FMHPROPS         SET DATA STREAM CODE              R4 22876000
         NI    ICESNDST,255-ICEDSTRM  RESET STREAM SEND STATUS @OZ29180 22876500
         SRL   R1,5                GET FMH TYPE CODE           @OZ29180 22876600
         LA    R1,MVICEST(R1)      INDEX ICE STATE TABLE       @OZ29180 22877000
         OC    ICESNDST,0(R1)      SET FMH PENDING STATE       @OZ29180 22877100
         TM    MDCTFMT,DCTPPRES+DCTPCPCT  TEST DATA STREAM STATUS   R41 22878000
         BZ    MVFMHBL2            BRANCH IF COMPRESSION NOT USED   R41 22878500
         BM    MVFMHBL1            BRANCH IF COMPRESS W/O COMPACT   R41 22879000
         OI    FMHPROPS,FMHCPACT   SET FMH PROPERTY = COMPACTION    R41 22879500
MVFMHBL1 OI    FMHPROPS,FMHCPRSS   SET FMH PROPERTY = COMPRESSION   R41 22882000
MVFMHBL2 IC    R0,MDCTSEL          PICK UP SELECT BYTE FROM RDCT    R41 22882500
         STC   R0,FMHSEL           STORE IN FM HEADER                R4 22883000
         NI    FMHSEL,255-DCTPOUTB MASK OUT STREAM DIRECTION BIT     R4 22883500
         CLI   FMHSEL,FMHEXCH      TEST FOR EXCHANGE MEDIA     @OZ29180 22883550
         BL    MVFMHBL3            BRANCH IF NOT EXCHANGE      @OZ29180 22883600
         CLI   FMHSEL,FMHEXCH+FMHLDANY  TEST FOR EXCH MEDIA    @OZ29180 22883650
         BNH   MVFMHBL4            BRANCH IF EXCHANGE          @OZ29180 22883700
MVFMHBL3 CLI   FMHSEL,FMHCARD      TEST FOR CARD MEDIA         @OZ29180 22883750
         BL    MVFMHBL6            BRANCH IF NOT CARD          @OZ29180 22883800
         CLI   FMHSEL,FMHCARD+FMHLDANY  TEST FOR CARD MEDIA    @OZ29180 22883850
         BH    MVFMHBL6            BRANCH IF NOT CARD          @OZ29180 22883900
MVFMHBL4 CLI   0(R1),ICEBEGIN      TEST FOR BDS                @OZ29180 22883950
         BE    MVFMHBL5            BRANCH IF BDS               @OZ29180 22884000
         CLI   0(R1),ICECONT       TEST FOR CDS                @OZ29180 22884050
         BNE   MVFMHBL6            BRANCH IF NOT CDS           @OZ29180 22884100
MVFMHBL5 MVC   FMHERCL,MDCTRECL    SET RECORD LENGTH           @OZ29180 22884150
         TM    MDCTFEAT,DCTPNDST   TEST FOR BASIC/EXCHANGE     @OZ29180 22884200
         BO    MVFMHBL6            BR IF NOT BASIC EXCHANGE    @OZ29180 22884250
         OI    FMHPROPS,FMHDSTBX   SET DST BIT ON              @OZ29180 22884300
MVFMHBL6 LA    R0,MFMHAL           SET OUTPUT LENGTH           @OZ29180 22884400
         ST    R0,RPLRLEN           TO FMH LENGTH                    R4 22884500
         SPACE 1                                                     R4 22885000
MVFMHNOP TM    ICESNDST,ICEOCPND   TEST STREAM SENDING STATUS        R4 22885500
         BO    MVRPLSND            SEND FM HDR & WAIT IF END CHAIN   R4 22886000
         BR    ML                  ELSE RETURN, USER MAY APPEND DATA R4 22886500
         DROP  WA                  DISCARD FM HEADER ADDRESSABILITY  R4 22887000
         SPACE 3                                                    R41 22887100
MVFMHMVC MVC   0(*-*,R15),0(WA)    ** EXECUTE ONLY **               R41 22887200
MVFMHN16 DC    F'-16'              CONSTANT FOR LOOP CONTROL        R41 22887300
         EJECT                                                      R41 22887400
*                                                                   R41 22887500
*                             SNA FM HEADER BUILD - COMPACTION      R41 22887600
*                                                                   R41 22887700
         SPACE 1                                                    R41 22887800
         USING CPTDSECT,R1         COMPACTION TABLE ADDRESSABILITY  R41 22887900
MVFMHCPA SLR   R1,R1               LOAD TABLE NUMBER                R41 22888000
         ICM   R1,1,DCTACPTN        AS INDEX TO CPT MAP             R41 22888100
         BZR   R14                 TAKE ERROR EXIT IMMEDIATELY IF 0 R41 22888200
         L     R15,$MLLMPCE                PICK UP QUICK LOCATOR    R41 22888300
         IC    R1,MCPTMAP-PCEDSECT(R1,R15)  FROM COMPACT TABLE MAP  R41 22888400
         LTR   R1,R1               TAKE ERROR EXIT IF               R41 22888500
         BZR   R14                  TABLE DOES NOT EXIST            R41 22888600
         BCTR  R1,0                ELSE MODIFY INDEX FOR ORIGIN 0   R41 22888700
         MH    R1,MVFMHCPL         MULTIPLY BY COMPACT TABLE LENGTH R41 22888800
         AL    R1,$CPTPOOL         ADD COMPACT TABLE POOL ORIGIN    R41 22888900
         B     4(,R14)             RETURN WITH TABLE ADDRESS IN R1  R41 22889000
         SPACE 1                                                    R41 22889100
MVFMHCPL DC    Y(CPTEND-CPTDSECT)  LENGTH OF COMPACTION TABLE       R41 22889200
         SPACE 2                                                    R41 22889300
MVFMHCPT L     WA,RPLAREA          GET DATA AREA ADDRESS            R41 22889400
         USING FMHDSECT,WA         SPORADIC FM HDR ADDRESSABILITY   R41 22889500
         MVC   0(MFMHCL,WA),MFMHC  MOVE IN PROTOTYPE TYPE 3 HEADER  R41 22889600
         SLR   R0,R0               PICK UP NUMBER                   R41 22889700
         IC    R0,CPTNMAST          OF MASTERS (M)                  R41 22889800
         STC   R0,FMHBYTE3           & STORE IN FMH                 R41 22889900
         LA    R15,MFMHCL(,WA)     ADVANCE DESTINATION POINTER      R41 22890000
         LA    WA,CPTDTT+CPTMAST0  LOAD ADDRESS OF 1ST ROW TO MOVE  R41 22890100
         LR    R14,R0              COMPUTE ADDRESS OF LAST          R41 22890200
         SLL   R14,4                COMPLETE ROW TO BE MOVED        R41 22890300
         LA    R1,CPTDTT-1(R14)      LESS 1 FOR LOOP CONTROL        R41 22890400
         LCR   R14,R0              SAVE (- M) FOR LATER             R41 22890500
         L     R0,MVFMHN16         LOAD NEGATIVE 16 FOR LOOP CTRL   R41 22890600
MVFMHCP1 MVC   0(16,R15),0(WA)     MOVE A COMPLETE ROW              R41 22890700
         SLR   R15,R0              ADVANCE R.U. PTR BY -(-16) = +16 R41 22890800
         BXH   WA,R0,MVFMHCP1      LOOP FOR NEXT FULL ROW IF ANY    R41 22890900
         CLR   R14,R0              TEST FOR 16 MASTERS SPECIAL CASE R41 22891000
         BNH   MVFMHCP3            BRANCH IF YES, FM HDR COMPLETE   R41 22891100
         SLR   WA,R14              ADJUST  R.U. PTR BY  -(-M) = +M  R41C22891200
                                    TO POINT TO FIRST PARTIAL ROW   R41 22891300
         LA    R14,15(,R14)        GET MACHINE LENGTH OF PARTIAL    R41C22891400
                                    ROW = (16 - M) - 1 = -M + 15    R41 22891500
         L     R1,ICECPT           LOAD TABLE ORIGIN                R41 22891600
         LA    R1,CPTDTT            FOR LOOP CONTROL                R41 22891700
MVFMHCP2 EX    R14,MVFMHMVC        MOVE A PARTIAL ROW               R41 22891800
         LA    R15,1(R14,R15)      ADVANCE R.U. PTR BY PART ROW LTH R41 22891900
         BXH   WA,R0,MVFMHCP2      LOOP FOR NEXT PARTIAL ROW        R41 22892000
MVFMHCP3 L     WA,RPLAREA          UPDATE                           R41 22892100
         SLR   R15,WA               LENGTH                          R41 22892200
         ST    R15,RPLRLEN           IN RPL                         R41 22892300
         STC   R15,FMHLNGTH        SET FM HEADER LENGTH             R41 22892400
         OI    RPLOPT12,RPLFMHDR   SET FORMAT (FM HDR) INDICATOR    R41 22892500
         OI    ICESNDST,ICEOCPND   SET END CHN TO FORCE IMM FMH SENDR41 22892600
         B     MVRPLSND            CALL BUFFER SEND ROUTINE, RETURN R41 22892700
         DROP  R1,WA               DISCARD TEMPORARY ADDRESSABILITY R41 22892800
         EJECT                                                       R4 22892900
*                                                                    R4 22893000
*                             WAIT FOR RESPONSE AND/OR CANCEL CHAIN  R4 22893100
*                                                                    R4 22893200
         SPACE 1                                                     R4 22893300
MVREQRSP TM    ICESNDST,ICECNCEL   TEST STREAM SENDING STATUS        R4 22893400
         BZ    MVREQRS1            BRANCH IF CHAIN NOT CANCELLING    R4 22893500
         SPACE 1                                                     R4 22893600
MVREQCAN LR    WA,ML               ELSE SAVE 1ST LEVEL RETURN ADDR   R4 22893700
         BAL   ML,MVFREPRG         PURGE ANY BUFFERS RMT DCT MAY OWN R4 22893800
         LR    ML,WA               RESTORE 1ST LEVEL RETURN ADDRESS  R4 22893900
         ST    MBUF,DCTBUFAD       CLEAR REMOTE DCT BUFFER POINTER   R4 22894000
         SPACE 1                                                     R4 22894100
MVREQRS1 TM    ICESNDST,ICEWTRSP   TEST SESSION SEND STATUS          R4 22894200
         BZ    MVRSTATO            RESCIND BAD CHAIN IF NOT WAITING  R4 22894500
         ST    ML,DCTEWF           SAVE 1ST LEVEL RETURN ADDRESS     R4 22895000
         SPACE 1                                                     R4 22895500
MVREQWT  MVI   ICEPUTCH,0          RESET NUMBER OF PUTS IN CHAIN     R4 22896000
        $WAIT WORK,SAVE=NO         WAIT FOR +FME RESPONSE            R4 22896500
        $RESTORE                   RESTORE ACCESS METHOD REGISTERS   R4 22897000
         TM    ICESNDST,ICEWTRSP   TEST WAITING-FOR-RESPONSE BIT     R4 22897500
         BO    MVREQWT             POST WASN'T FOR US IF STILL ON    R4 22898000
         L     ML,DCTEWF           RESTORE 1ST LEVEL RETURN ADDRESS  R4 22898500
         SPACE 1                                                     R4 22899000
*                             OUTBOUND STATE-MACHINE DRIVER ROUTINE  R4 22899500
         SPACE 1                                                     R4 22900000
MVRSTATO LA    R1,ICESNDST         POINT TO SEND STATUS BYTE         R4 22900500
         TM    0(R1),ICECNCEL      TEST TYPE OF CHAIN COMPLETION     R4 22901000
         BO    MVRSTATC            IF BAD, GO TO BAD CHAIN S/MACHINE R4 22901500
         TM    ICEFLAGS,ICEBBPND   TEST SESSION STATUS               R4 22902000
         BZ    SKIP640             BR IF BRACKET NOT JUST BEGUN      R4 22902500
         NI    ICESTAT,255-ICERTRPD  RESET 'RDY TO RCV PENDING' FLAG R4 22903000
SKIP640  BAL   R14,MVRSTATE        GO DRIVE GOOD CHAIN STATE MACHINE R4 22903500
         EJECT                                                 @OZ29180 22904000
*                     STATE TABLE FOR GOOD CHAIN STATE MACHINE @OZ29180 22904100
         SPACE 1                                               @OZ29180 22904200
MVFMHGUD DC    AL1(ICEINSTR)       SUCCESSFUL RESUME = IN-STREAM     R4 22904500
         DC    AL1(ICENOFMH)       SUCCESSFUL END DS = OUT-OF-STREAM R4 22905000
         DC    AL1(ICEINSTR)       SUCCESSFUL BEGIN  = IN-STREAM     R4 22905500
         DC    AL1(ICENOFMH)       SUCCESSFUL ONLY C = OUT-OF-STREAM R4 22906000
         DC    AL1(ICENOFMH)       SUCCESSFUL SUSPND = OUT-OF-STREAM R4 22906500
         DC    AL1(ICENOFMH)       SUCCESSFUL ABORT  = OUT-OF-STREAM R4 22907000
         DC    AL1(ICEINSTR)       SUCCESSFUL CONT   = IN STRM @OZ29180 22907100
         DC    AL1(0)              INVALID STATE               @OZ29180 22907200
         DC    AL1(0)              INVALID STATE               @OZ29180 22907300
         DC    AL1(0)              INVALID STATE               @OZ29180 22907400
         DC    AL1(0)              INVALID STATE               @OZ29180 22907500
         DC    AL1(0)              INVALID STATE               @OZ29180 22907600
         DC    AL1(0)              INVALID STATE               @OZ29180 22907700
         DC    AL1(0)              INVALID STATE               @OZ29180 22907800
         DC    AL1(ICENOFMH)       NO FMH PEND+OUT=OUT-OF-STRM @OZ29180 22907900
         DC    AL1(ICEINSTR)       NO FMH PEND & IN  = IN-STREAM     R4 22908000
         SPACE 1                                               @OZ29180 22908100
MVFMHSTL EQU   *-MVFMHGUD          STATE TABLE LENGTH          @OZ29180 22908200
         SPACE 1                                                     R4 22908500
         DC    AL1(MVRSTIST-MVRST) 'RESUME' - GO IN STREAM           R4 22909000
         DC    AL1(MVRSTEND-MVRST) 'END (NORMAL)' - DEALLOCATE       R4 22909500
         DC    AL1(MVRSTIST-MVRST) 'BEGIN' - GO IN STREAM            R4 22910000
         DC    AL1(MVRSTEND-MVRST) 'ONLY CHAIN' - DEALLOCATE         R4 22910500
         DC    AL1(MVRSTSDS-MVRST) 'SUSPEND' - SUSPEND & DEALLOCATE  R4 22911000
         DC    AL1(MVRSTADS-MVRST) 'END (ABORTING)' - DEALLOCATE     R4 22911500
         DC    AL1(MVRSTIST-MVRST) 'CONTINUE' - GO IN STREAM   @OZ29180 22911600
         DC    AL1(MVRSTER-MVRST)  INVALID STATE               @OZ29180 22911700
         DC    AL1(MVRSTER-MVRST)  INVALID STATE               @OZ29180 22911800
         DC    AL1(MVRSTER-MVRST)  INVALID STATE               @OZ29180 22911900
         DC    AL1(MVRSTER-MVRST)  INVALID STATE               @OZ29180 22912000
         DC    AL1(MVRSTER-MVRST)  INVALID STATE               @OZ29180 22912100
         DC    AL1(MVRSTER-MVRST)  INVALID STATE               @OZ29180 22912200
         DC    AL1(MVRSTER-MVRST)  INVALID STATE               @OZ29180 22912300
         DC    AL1(MVRSTNOP-MVRST) NO FM HDR - NO ALLOC CHANGE @OZ29180 22912400
         DC    AL1(MVRSTIST-MVRST) IN STREAM - REMAIN IN STREAM      R4 22912500
         EJECT                                                       R4 22913000
*                             INBOUND STATE-MACHINE DRIVER ROUTINE   R4 22913500
         SPACE 1                                                     R4 22914000
MVRSTATI LR    WA,ML               SAVE 1ST LEVEL RETURN ADDRESS     R4 22914500
         BALR  ML,R15              SEND +RSP AND FREE BUFFER         R4 22915000
         LR    ML,WA               RESTORE 1ST LEVEL RETURN ADDRESS  R4 22915500
         LA    R1,ICERCVST         POINT TO RECEIVE STATUS BYTE      R4 22916000
         LA    R14,MVFMHGUD        POINT TO GOOD CHAIN TRANS. TABLE  R4 22916500
         TM    0(R1),ICECNCEL      TEST TYPE OF CHAIN COMPLETION     R4 22917000
         BZ    MVRSTATE            BRANCH IF GOOD COMPLETION         R4 22917500
         TM    ICERCVST,ICEINCHN   TEST SESSION RECEIVE STATUS       R4 22918000
         BO    MVREQBUF            IF STILL IN PURGING CHAIN STATE,    C22918500
                                    GET NEXT BUFF FROM INBOUND QUEUE   C22919000
                                     (Q SHD BE EMPTY IF CALLER=L.M.) R4 22919500
MVRSTATC LA    R14,MVFMHBAD        POINT TO BAD CHAIN TRANS. TABLE   R4 22920000
         SPACE 1                                                     R4 22920500
*                             COMMON STATE-MACHINE DRIVER ROUTINE    R4 22921000
         SPACE 1                                                     R4 22921500
MVRSTATE SLR   R15,R15             TRANSLATE                         R4 22922000
         IC    R15,0(,R1)           OLD FMH                          R4 22922500
         SRL   R15,4                 PENDING                   @OZ29180 22923000
         NI    0(R1),255-ICEDSTRM     STATE TO                 @OZ29180 22923500
         LA    R14,0(R15,R14)          CORRECT                       R4 22924000
         OC    0(1,R1),0(R14)           NEW STATE                    R4 22924500
         IC    R15,MVFMHSTL(,R14)  FMH PEND STATE TO INDEX TBL @OZ29180 22925000
         B     MVRST(R15)          BRANCH TO CORRECT ROUTINE         R4 22925500
         EJECT                                                 @OZ29180 22926000
*                             RESCIND BAD CHAIN, RECOVER ICE STATE   R4 22926500
         SPACE 1                                                     R4 22927000
MVFMHBAD DC    AL1(ICENOFMH)       FAILING RESUME = OUT-OF-STREAM    R4 22927500
         DC    AL1(ICEINSTR)       FAILING END DS = IN-STREAM        R4 22928000
         DC    AL1(ICENOFMH)       FAILING BEGIN  = OUT-OF-STREAM    R4 22928500
         DC    AL1(ICENOFMH)       FAILING ONLY C = OUT-OF-STREAM    R4 22929000
         DC    AL1(ICEINSTR)       FAILING SUSPND = IN-STREAM        R4 22929500
         DC    AL1(ICEINSTR)       FAILING ABORT  = IN-STREAM        R4 22930000
         DC    AL1(ICEINSTR)       FAILING CONT    = IN-STREAM @OZ29180 22930100
         DC    AL1(0)              INVALID STATE               @OZ29180 22930200
         DC    AL1(0)              INVALID STATE               @OZ29180 22930300
         DC    AL1(0)              INVALID STATE               @OZ29180 22930400
         DC    AL1(0)              INVALID STATE               @OZ29180 22930500
         DC    AL1(0)              INVALID STATE               @OZ29180 22930600
         DC    AL1(0)              INVALID STATE               @OZ29180 22930700
         DC    AL1(0)              INVALID STATE               @OZ29180 22930800
         DC    AL1(ICENOFMH)       FAIL DATA+OUT = OUT-OF-STRM @OZ29180 22930900
         DC    AL1(ICEINSTR)       FAILING DATA & IN = IN-STREAM     R4 22931000
         SPACE 1                                                     R4 22931500
         DC    AL1(MVRSTSDS-MVRST) BAD 'RESUME' - RE-SUSPEND         R4 22932000
         DC    AL1(MVRSTIST-MVRST) BAD 'END (NORM)' - STAY IN STREAM R4 22932500
         DC    AL1(MVRSTPAB-MVRST) BAD 'BEGIN' - ABORT PROCESSOR     R4 22933000
         DC    AL1(MVRSTPAB-MVRST) BAD 'ONLY CHN' - ABORT PROCESSOR  R4 22933500
         DC    AL1(MVRSTIST-MVRST) BAD 'SUSPEND' - STAY IN STREAM    R4 22934000
         DC    AL1(MVRSTIST-MVRST) BAD 'END(ABORT)' - STAY IN STREAM R4 22934500
         DC    AL1(MVRSTIST-MVRST) BAD 'CONTINUE' -STAY INSTRM @OZ29180 22934600
         DC    AL1(MVRSTER-MVRST)  INVALID STATE               @OZ29180 22934700
         DC    AL1(MVRSTER-MVRST)  INVALID STATE               @OZ29180 22934800
         DC    AL1(MVRSTER-MVRST)  INVALID STATE               @OZ29180 22934900
         DC    AL1(MVRSTER-MVRST)  INVALID STATE               @OZ29180 22935000
         DC    AL1(MVRSTER-MVRST)  INVALID STATE               @OZ29180 22935100
         DC    AL1(MVRSTER-MVRST)  INVALID STATE               @OZ29180 22935200
         DC    AL1(MVRSTER-MVRST)  INVALID STATE               @OZ29180 22935300
         DC    AL1(MVRSTNOP-MVRST) OUT OF STREAM - NO CHANGE   @OZ29180 22935400
         DC    AL1(MVRSTIST-MVRST) IN STREAM - STAY IN STREAM        R4 22935500
         EJECT                                                      R41 22936000
MVRST    EQU   *                   ORIGIN FOR BRANCH TABLE OFFSETS   R4 22936500
         SPACE 1                                                     R4 22937000
MVRSTER  B     R01                 INVALID STATE DETECTED      @OZ29180 22937100
         SPACE 1                                               @OZ29180 22937200
MVRSTPAB OI    MDCTSTAT,DCTABORT   HALT PROCESSOR RTAM FUNCTIONS     R4 22937500
         L     MBUF,DCTBUFAD       PURGE ANY BUFFER                 R41 22937600
         BAL   ML,MVFREPRG          THE REMOTE DCT MAY OWN          R41 22937700
         LA    ML,MVTAMXAB         ABORT CURRENT $EXTP CALL         R41 22937800
         SPACE 1                                                    R41 22938000
MVRSTADS OI    DCTFLAGS,DCTDELET+DCTRSTRT  TELL PRCSR TO DELETE JOB  R4 22938500
         B     MVRSTEND            BRANCH TO DEALLOCATE ROUTINE      R4 22939000
         SPACE 1                                                    R41 22939500
MVRSTIST TM    ICEFLAGS,ICEEBPND+ICECHDIR  TEST SESSION STATUS       R4 22940000
         BZ    MVRSTNOP            BYPASS IMPLIED SUSPND IF NO EB/CD R4 22940500
         XI    0(R1),ICEINSTR-ICENOFMH  SET NO FMH PEND, OUT OF STRM R4 22943000
         SPACE 1                                                     R4 22943500
MVRSTIMP LA    R0,ICESIMPL+ICESUSPD  LOAD IMPLIED SUSPEND CODE       R4 22944000
         B     MVRSTSD1            JOIN COMMON SUSPEND CODE         R41 22944500
         SPACE 1                                                     R4 22945000
MVRSTSDS LA    R0,ICESUSPD         LOAD EXPLICIT SUSPEND CODE        R4 22945500
         SPACE 1                                                    R41 22945600
MVRSTSD1 LA    R14,ICESDCT-(MDCTSDCT-DCTDSECT)  PTR TO SUSP Q HEAD  R41 22946000
         USING DCTDSECT,R14        GET TEMPORARY DCT ADDRESSABILITY R41 22946100
         TM    ICEFLGS2,ICEOUTBK   TEST SESSION STATUS FLAGS   @OZ29180 22946200
         BZ    MVRSTSD4            BR IF NOT OUTBD-OUTBD INTERRUPT  R41 22946300
         TM    ICEFLAGS,ICEOUTBD+ICECHDIR  TEST SESSION STATUS      R41 22946400
         BNO   MVRSTSD2            BR IF INBND INTERUPT NOT PENDNG  R41 22946500
         SPACE 1                                                    R41 22946600
         L     R15,ICESDCT         PICK UP OUTBD INTERRUPTING DCT   R41 22946700
         USING DCTDSECT,R15        ESTABLISH TEMP. ADDRESSABILITY   R41 22946800
         XC    MDCTICE,MDCTICE     CLEAR PRE-ALLOCATION POINTER     R41 22946900
         MVC   ICESDCT,MDCTSDCT     AND REMOVE FROM SUSPEND QUEUE   R41 22947000
         DROP  R15                 RELEASE TEMP. ADDRESSABILITY     R41 22947100
         B     MVRSTSD3            REJOIN COMMON PROCESSING         R41 22947200
         SPACE 1                                                    R41 22947300
MVRSTSD2 L     R14,ICESDCT         USE INTERRUPTING DCT Q ANCHOR    R41 22947400
         NI    DCTSTAT,255-DCTHOLD SHOW RDCT NO LONGER HELD         R41 22947500
         OI    MDCTSTAT,DCTPOST    SHOW RDCT WILL BE POSTED BELOW   R41 22947600
         SPACE 1                                                    R41 22947700
MVRSTSD3 NI    ICEFLGS2,255-ICEOUTBK  CLEAR OUTBD-OUTBD FLAG   @OZ29180 22947800
         SPACE 1                                                    R41 22947900
MVRSTSD4 L     R15,MDCTSDCT        GET HEAD OF SUSPENDED DCT QUEUE  R41 22948000
         ST    MDCT,MDCTSDCT       MAKE RDCT NEW SUSPEND QUEUE HEAD R41 22948100
         STC   R0,MDCTSDCT         SAVE SUSPD OR IMPLIED SUSPD FLAG R41 22948200
         DROP  R14                 DISCARD TEMP DCT ADDRESSABILITY  R41 22948300
         OI    MDCTSTAT,DCTPSUSP   INDICATE REMOTE DCT IS SUSPENDED  R4 22948400
         ST    R15,MDCTSDCT        CHAIN REST OF QUE TO CURRENT DCT R41 22948500
         B     MVRSTEN1            JOIN COMMON DE-ALLOCATION LOGIC  R41 22948600
         SPACE 1                                                     R4 22949000
MVRSTEND XC    MDCTICE,MDCTICE     CLEAR RDCT POINTER TO ICE         R4 22949500
MVRSTEN1 XC    ICERDCT,ICERDCT     CLEAR  ICE POINTER TO REMOTE DCT R41 22950000
         NI    ICESTAT,255-ICEALLOC  MARK ICE UNALLOCATED            R4 22951000
         TM    0(R1),ICENOFMH      TEST NEW STREAM STATUS            R4 22951500
         BNO   MVDALLOC            IF FMH PENDING, BDS OR ODS CAUSED   C22952000
                                    IMPLIED SUSPEND.  BRANCH TO COM-   C22952500
                                     PLETE BDS OR ODS ALLOCATION     R4 22953000
         SPACE 2                                               @OZ29180 22953200
MVRSTNOP TM    ICEFLAGS,ICECHDIR   TEST SESSION STATUS               R4 22953500
         BZ    SKIP670             BR IF CHG DIRECTION NOT PENDING   R4 22954000
         XI    ICEFLAGS,ICEINBND+ICEOUTBD+ICEREVFL  CHANGE DIRECTION R4 22954500
SKIP670  TM    ICEFLAGS,ICEBBPND+ICEEBPND  TEST SESSION STATUS       R4 22955000
         BNM   SKIP680             BR IF NOT BB ALONE OR EB ALONE    R4 22955500
         XI    ICEFLAGS,ICEINBRK   CHANGE BRACKET STATE              R4 22956000
SKIP680  NI    ICEFLAGS,255-ICEBBPND-ICEEBPND-ICECHDIR  CLEAR PENDS. R4 22956500
         TM    0(R1),ICECNCEL      TEST TYPE OF CHAIN COMPLETION     R4 22957000
         BZ    MVRSTRM0            BRANCH IF NOT CANCELLING          R4 22957500
         NI    0(R1),255-ICECNCEL  RESET CHAIN CANCEL INDICATOR      R4 22958000
         LTR   MBASE1,MBASE1       TEST TYPE OF $EXTP CALL           R4 22958500
         BM    MVRSTRMC            BR IF MAY NOT FLUSH (CLOSE OR LM) R4 22959000
         TM    MDCTSEL,DCTPOUTB    TEST DIRECTION BIT                R4 22959500
         BZ    MVRSTRMC            BRANCH IF NOT OUTBOUND (NOT PUT)  R4 22960000
         LA    ML,MVTAMXAB         ELSE ABORT $EXTP CALL             R4 22960500
         TM    ICEXRFBK,ICEXRCPY   TEST EXCEPTION RESPONSE FEEDBACK R41 22960600
         BZ    MVRSTRMA            BR IF NOT COPIES FUNCTION REJECT R41 22960700
         LA    ML,MVTAMXEX         ELSE SET $EXTP EXCEPTION RETURN  R41 22960800
         NI    ICEXRFBK,255-ICEXRCPY   CLEAR COPIES FUNCTION REJECT R41 22960900
         SPACE 1                                                    R41 22961000
MVRSTRMA TM    ICEXRFBK,ICEXRDNA   TEST EXCEPTION RECOVERY ACTION   R41 22961100
         BZ    MVRSTRMC            BR IF DEVICE STILL ACCEPTING DATAR41 22961500
         OI    MDCTSTAT,DCTFLUSH   ELSE SET DATA STREAM SOFT ABORT   R4 22962000
         NI    ICEXRFBK,255-ICEXRDNA TO BAR FURTHER SENDS TO DEVICE R41 22962100
         SPACE 1                                                     R4 22962500
MVRSTRMC TM    ICEFLAGS,ICEINBRK   TEST SESSION STATUS               R4 22963000
         BO    MVRSTRM1            GO FIND A STREAM IF IN BRACKET    R4 22963500
         TM    ICESTAT,ICEHOLD     TEST SESSION STATUS               R4 22964000
         BNZ   MVRSTRM0            IF YEILDING TO CONTENTION,       R41C22964500
                                                ABORT PROCESSOR     R41 22965000
         LA    R0,VXIDGBUF+VSEQGIBB   ELSE, SETUP TO SEND           R41 22965100
         L     WA,$MLLMPCE             NULL RU (BB+EB) UNDER        R41 22965200
         B     MICEREQ2                 LINE MANAGER                R41 22965300
MVRSTRM0 TM    ICEFLAGS,ICEINBRK   TEST SESSION STATUS               R4 22965500
         BZ    MICEAEB             BRANCH IF NOW OUT OF BRACKET      R4 22966000
MVRSTRM1 TM    0(R1),ICEINSTR      TEST NEW STREAM STATUS            R4 22966500
         BOR   ML                  IF IN STREAM RETURN TO CALLER     R4 22967000
*                                  ELSE GO TRY TO START NEXT STREAM  R4 22967500
         EJECT                                                       R4 22968000
*                                                                    R4 22968500
*                             REQUEST NEXT DATA STREAM               R4 22969000
*                                                                    R4 22969500
         SPACE 1                                                     R4 22970000
MVREQSTR TM    ICESTAT,ICEALLOC    TEST ICE STATUS                   R4 22970500
         BO    MVREQRET            RETURN IF ICE ALREADY ALLOCATED   R4 22971000
         TM    ICEFLAGS,ICEOUTBD+ICEINBRK  TEST SESSION STATUS       R4 22971500
         BNZ   MVREQSPQ            IF IN BRACKET, TRY TO POP SUSP Q. R4 22972000
         L     MDCT,ICELDCT        GET ADDRESS OF LINE DCT           R4 22972500
         SPACE 1                                                     R4 22973000
MVREQJOT OI    MDCTATTN,MDCTJOB1+MDCTJOB2 SHOW IDLE SESS. AND WORK  R41 22973500
         BAL   WA,MICETIME         REQUEST SESSION DELAY INTERVAL    R4 22974000
         L     R1,DCTPCE           GET LINE MANAGER PCE ADDRESS      R4 22974500
        $POST  (R1),WORK           TAP LINE MANAGER ON SHOULDER      R4 22975000
         B     MVREQBUF            GO ACCEPT INBOUND R.U. IF ANY     R4 22975500
         SPACE 2                                                     R4 22976000
MVREQSPQ LA    MDCT,ICESDCT-(MDCTSDCT-DCTDSECT)  FAKE ZERO SUSP RDCT R4 22976500
         BM    MVREQSPI            CHECK SUSP INBND RDCT IF INBOUND  R4 22977000
         SPACE 1                                                     R4 22977500
*                             RESUME SUSPENDED OUTBOUND STREAM       R4 22978000
         SPACE 1                                                     R4 22978500
MVREQSPO LR    R15,MDCT            SAVE CURRENT REMOTE DCT ADDR      R4 22979000
         L     MDCT,MDCTSDCT       GET NEXT SUSPENDED REMOTE DCT     R4 22979500
         LTR   MDCT,MDCT           TEST ADDRESS                      R4 22980000
         BZ    MICEGIEB            IF NO RDCTS, SEND IMMED END BRKT  R4 22980500
         TM    MDCTSEL,DCTPOUTB    TEST DIRECTION BIT                R4 22981000
         BZ    MVREQSPO            KEEP SEARCHING IF NOT OUTBOUND    R4 22981500
         LTR   MDCT,MDCT           TEST IMPLIED SUSPEND/RESUME BIT   R4 22982000
         BNM   MVDRSUMO            GO ALLOCATE & POST IF NOT IMPLIED R4 22982500
         OI    ICESNDST,ICEINSTR   ELSE GO IN STREAM AUTOMATICALLY   R4 22983000
         B     MVDRSUMO            GO ALLOCATE & POST                R4 22983500
         SPACE 2                                                     R4 22984000
*                             RESUME SUSPENDED INBOUND STREAM        R4 22984500
         SPACE 1                                                     R4 22985000
MVREQSPI LR    R15,MDCT            SAVE CURRENT RDCT ADDRESS         R4 22985500
         L     MDCT,MDCTSDCT       GET ADDR OF NEXT SUSPENDED RDCT   R4 22986000
         LTR   MDCT,MDCT           TEST                              R4 22986500
         BZ    MVREQBUF            IF NO SUSPENDED RDCTS, ACCEPT ANY   C22987000
                                    INBOUND RU (IF NONE DON'T WAIT)  R4 22987500
         TM    MDCTSEL,DCTPOUTB    TEST DIRECTION BIT                R4 22988000
         BO    MVREQSPI            KEEP SEARCHING IF NOT INBOUND     R4 22988500
         LTR   MDCT,MDCT           TEST IMPLIED SUSPEND/RESUME BIT   R4 22989000
         BM    MVDRSUMI            IF IMPLIED RESUME, GO REALLOCATE.   C22989500
                                    IF NO IMPLIED RESUME, ACCEPT ANY   C22990000
                                     INBOUND RU (IF NONE DON'T WAIT) R4 22990500
         EJECT                                                       R4 22991000
*********************************************************************** 22991500
*                                                                     * 22992000
*           MVREQBUF  -  REQUEST DATA BUFFER FOR APPLICATION INPUT    * 22992500
*                                                                     * 22993000
*           MVDECODE  -  DECODE SNA REQUEST & FUNCTION MGMT HEADERS   * 22993500
*                                                                     * 22994000
*********************************************************************** 22994500
         SPACE 1                                                     R4 22995000
MVREQBUF L     MBUF,ICEINHD        GET 1ST ADDR ON INBOUND QUEUE     R4 22995500
         LTR   MBUF,MBUF           TEST ADDRESS                      R4 22996000
         BNZ   MVREQUEU            BRANCH IF QUEUE NOT EMPTY         R4 22996500
         TM    ICESTAT,ICEALLOC    TEST SESSION STATUS               R4 22997000
         BZ    MVREQRET            RETURN IF CALLER IS CLOSE OR L.M.   C22997500
                                    OR WAIT IF CALLER IS SUSPENDING  R4 22998000
         ST    ML,DCTEWF           SAVE 1ST LEVEL RETURN ADDRESS     R4 22998500
        $WAIT  WORK,SAVE=NO        HAVE RTAM/GET WAIT FOR INPUT      R4 22999000
        $RESTORE                   RESTORE ACCESS METHOD REGISTERS   R4 22999500
         L     ML,DCTEWF           RELOAD 1ST LEVEL RETURN ADDRESS   R4 23000000
         B     MVREQBUF            BRANCH TO TRY FOR BUFFER          R4 23000500
         SPACE 2                                                     R4 23001000
MVREQUEU L     R0,RPLNEXT          GET NEXT ADDR ON INBOUND QUEUE    R4 23002000
         ST    R0,ICEINHD          MAKE NEXT ADDR NEW QUEUE HEAD     R4 23005000
         LTR   R0,R0               TEST ADDRESS                      R4 23005500
         BNZ   MVDECODE            BRANCH IF NOT ZERO                R4 23006000
         ST    R0,ICEINTL          CLEAR TAIL ADDRESS IF QUEUE EMPTY R4 23006500
         SPACE 1                                                     R4 23007000
MVDECODE LA    R14,ICEBIND         POINT TO BIND IMAGE IN ICE        R4 23007500
         USING ISTDBIND,R14        ESTABLISH BIND IMAGE ADDRESSAB'TY R4 23008000
         L     R0,ICESTAT          COPY ICE STATE TO REGISTER        R4 23008500
         SLR   R15,R15             CLEAR REG FOR TRANSITION NUMBER   R4 23009000
         ST    R0,SHWICEWA         STORE ICE STATE COPY IN WORK AREA R4 23009500
         ST    R15,RPLNEXT         CLEAR RPL CHAINING FIELD          R4 23010000
         XC    SHWDCTWA,SHWDCTWA   CLEAR DCT FMT MASK & 'GET' FLAGS  R4 23010500
         CLC   RPLCNTDF(3),MSNADATA  TEST R.U. TYPE                  R4 23011000
         BNE   MVDFCTRL            BRANCH IF NOT DATA                R4 23011500
         TM    SHWFLAGS,ICEOUTBD   TEST SESSION STATUS               R4 23012000
         BO    MVDX2004            FAIL IF SESSION MARKED OUTBOUND   R4C23012500
                                    (SENSE X'2004', DIRECTION ERROR) R4 23013000
         CLI   RPLRTNCD,USFXORDC   TEST RPL COMPLETION CODE          R4 23013500
         BE    MVDXRQST            ENTER PURGING CHAIN STATE         R4C23014000
                                    IF AN EXCEPTION REQUEST          R4 23014500
         EJECT                                                       R4 23015000
*                             DRIVE CHAINING STATE-MACHINE           R4 23015500
         SPACE 1                                                     R4 23016000
         TM    SHWRCVST,ICEINCHN   TEST SESSION RECEIVE STATUS       R4 23016500
         BO    SKIP690             BRANCH IF IN CHAIN                R4 23017000
         LA    R15,4               ELSE SET TRANSITION NUMBER TO 4   R4 23017500
SKIP690  TM    RPLCHN,RPLFIRST+RPLONLY TEST R.U. CHAIN POSITION      R4 23018000
         BZ    SKIP700             BRANCH IF NOT FIRST OR ONLY       R4 23018500
         LA    R15,2(,R15)         ADD 2 TO TRANSITION NUMBER        R4 23019000
SKIP700  TM    SHWRCVST,ICECNCEL   TEST STREAM RECEIVE STATUS        R4 23019500
         BZ    SKIP710             BR IF NOT IN PURGING CHAIN STATE  R4 23020000
         LA    R15,8               RESET TRANSITION NUMBER TO 8      R4 23021000
SKIP710  TM    RPLCHN,RPLLAST+RPLONLY   TEST R.U. CHAIN POSITION     R4 23021500
         BZ    SKIP720             BRANCH IF NOT LAST OR ONLY        R4 23022000
         LA    R15,1(,R15)         ELSE ADD 1 TO TRANSITION NUMBER   R4 23022500
SKIP720  IC    R15,*+8(R15)        USE TRANS. NUMBER AS TABLE INDEX  R4 23023000
         B     MVDCH(R15)          PERFORM TRANSITION                R4 23023500
         SPACE 1                                                     R4 23024000
         DC    AL1(MVDCHNOP-MVDCH) MIC INC  = INC  (NO CHANGE)       R4 23024500
         DC    AL1(MVDCHOUT-MVDCH) LIC INC  = OUTC (SWITCH STATE)    R4 23025000
         DC    AL1(MVDCHERR-MVDCH) FIC INC  = ERROR, SENSE X'2002'   R4 23025500
         DC    AL1(MVDCHERR-MVDCH) OIC INC  = ERROR, SENSE X'2002'   R4 23026000
         DC    AL1(MVDCHERR-MVDCH) MIC OUTC = ERROR, SENSE X'2002'   R4 23026500
         DC    AL1(MVDCHERR-MVDCH) LIC OUTC = ERROR, SENSE X'2002'   R4 23027000
         DC    AL1(MVDCHINC-MVDCH) FIC OUTC = INC  (SWITCH STATE)    R4 23027500
         DC    AL1(MVDCHNOP-MVDCH) OIC OUTC = OUTC (NO CHANGE)       R4 23028000
         DC    AL1(MVDCHPRG-MVDCH) MIC/FIC PURGEC = PURGEC (DISCARD) R4 23028500
         DC    AL1(MVDCHLVP-MVDCH) LIC/OIC PURGEC = OUTC   (DISCARD) R4 23029000
         SPACE 1                                                     R4 23029500
MVDCH    EQU   *                   ORIGIN FOR BRANCH TABLE OFFSETS   R4 23030000
         SPACE 1                                                     R4 23030500
MVDCHLVP NI    ICERCVST,255-ICEINCHN  SHOW PURGED CHAIN HAS ENDED    R4 23034000
         SPACE 1                                                     R4 23034500
MVDCHPRG LA    R15,MVFREEIN        POINT TO INBND BUF PURGE ROUTINE R41 23035000
         B     MVRSTATI            GO UPDATE RECEIVING STATE MACHINE R4 23035500
         SPACE 1                                                     R4 23036000
MVDCHINC TM    BINSECP,BINSCHN     TEST SECONDARY NAU PROTOCOLS      R4 23036500
         BO    MVDCHOUT            ACCEPT IF BIND SUPPORTS CHAINING. R4 23037000
         B     MVDX400B             FAIL IF NO MULTIPLE-R.U. CHAINS  R4C23037500
                                     (SENSE X'400B', CHNS NOT SUPPD) R4 23038000
MVDCHERR B     MVDX2002            GO ABORT ICE AND ANY STREAMS      R4 23038500
         SPACE 1                                                     R4 23039000
MVDCHOUT XI    SHWRCVST,ICEINCHN   INVERT CHAIN STATE                R4 23039500
         SPACE 1                                                     R4 23040000
MVDCHNOP EQU   *                   NO CHANGE                         R4 23040500
         EJECT                                                       R4 23041000
*                             DRIVE BRACKET STATE-MACHINE            R4 23041500
         SPACE 1                                                     R4 23042000
         SLR   R15,R15             CLEAR REG FOR TRANSITION NUMBER   R4 23042500
         TM    SHWFLAGS,ICEINBRK   TEST SESSION STATUS               R4 23043000
         BO    SKIP730             BRANCH IF IN BRACKET              R4 23043500
         LA    R15,4               ADD 4 TO TRANSITION NUMBER        R4 23044000
SKIP730  TM    RPLRH3,RPLEB        TEST REQUEST HEADER BYTE 3        R4 23044500
         BZ    SKIP740             BRANCH IF NOT END BRACKET         R4 23045000
         LA    R15,2(,R15)         ADD 2 TO TRANSITION NUMBER        R4 23045500
         OI    SHWFLAGS,ICEEBPND   SET 'END BRACKET PENDING' FLAG    R4 23046000
SKIP740  TM    RPLRH3,RPLBB        TEST REQUEST HEADER BYTE 3        R4 23046500
         BZ    *+8                 BRANCH IF NOT BEGIN BRACKET      R41 23047000
         LA    R15,1(,R15)         ADD 1 TO TRANSITION NUMBER        R4 23047500
         IC    R15,*+8(R15)        USE TRANS. NUMBER AS TABLE INDEX  R4 23048500
         B     MVDBK(R15)          PERFORM TRANSITION                R4 23049000
         SPACE 1                                                     R4 23049500
         DC    AL1(MVDBKNOP-MVDBK) -BB -EB  INB = INB (NO CHANGE)    R4 23050000
         DC    AL1(MVDBKERR-MVDBK)  BB -EB  INB = ERROR, SNS X'2003' R4 23050500
         DC    AL1(MVDBKEBP-MVDBK) -BB  EB  INB = INB AND EB PENDING R4 23051000
         DC    AL1(MVDBKERR-MVDBK)  BB  EB  INB = ERROR, SNS X'2003' R4 23051500
         DC    AL1(MVDBKNUS-MVDBK) -BB -EB OUTB = OK IF BKTS NOT USD R4 23052000
         DC    AL1(MVDBKINB-MVDBK)  BB -EB OUTB = INB                R4 23052500
         DC    AL1(MVDBKERR-MVDBK) -BB  EB OUTB = ERROR, SNS X'2003' R4 23053000
         DC    AL1(MVDBKBBP-MVDBK)  BB  EB OUTB = BB/EB PENDING     R41 23053500
         SPACE 1                                                     R4 23054000
MVDBK    EQU   *                   ORIGIN FOR BRANCH TABLE OFFSETS   R4 23054500
         SPACE 1                                                     R4 23055000
MVDBKNUS TM    RPLCHN,RPLFIRST+RPLONLY  TEST R.U. CHAIN POSITION     R4 23055500
         BZ    MVDBKNOP            BB NOT NEEDED IF NOT 1ST IN CHAIN R4 23056000
         CLC   RPLCNTDF(3),MSNADATA  TEST R.U. TYPE                  R4 23056500
         BNE   MVDBKNOP            BB NOT REQUIRED IF DATA FLOW CTRL R4 23057000
         TM    BINCMNP,BINBRAK     TEST COMMON NAU PROTOCOLS         R4 23057500
         BZ    MVDBKNOP            ALLOW CASE IF BRACKETS NOT USED     C23058000
                                    ELSE (X'2003') BRACKET STATE ERR R4 23058500
MVDBKERR B     MVDX2003            GO ABORT ICE AND ANY STREAMS      R4 23059500
         SPACE 1                                                     R4 23060000
MVDBKBBP OI    SHWFLAGS,ICEBBPND   SET 'BEGIN BRACKET PENDING'      R41 23060100
         SPACE 1                                                    R41 23060200
MVDBKEBP TM    BINSECP,BINSSEB     TEST SECONDARY NAU PROTOCOLS      R4 23060500
         BO    MVDBKIN1            BR IF SECONDARY MAY SEND EB      R41 23060600
         B     MVDX4004            FAIL IF SECNDRY CANT SEND EB     R41*23061000
                                   (SENSE X'4004', EB NOT ALLOWED)   R4 23061500
MVDBKINB OI    SHWFLAGS,ICEINBRK   BB/-EB, GO IN BRCKT IMMED.       R41 23062100
         OI    ICEFLAGS,ICEINBRK   INDICATE IN BRACKET         @OZ34188 23062150
         SPACE 1                                                    R41 23062200
MVDBKIN1 TM    BINCMNP,BINBRAK     TEST COMMON NAU PROTOCOLS        R41 23062500
         BZ    MVDX400C            FAIL IF BRACKETS NOT TO BE USED   R4C23063000
                                    (SENSE X'400C' BRKTS NOT SUPPD)  R4 23063500
         TM    RPLCHN,RPLFIRST+RPLONLY  TEST R.U. CHAIN POSITION     R4 23064000
         BZ    MVDX400X            FAIL IF BB OR EB NOT 1ST IN CHAIN R4C23064500
                                    (SENSE X'4003', BB NOT ALLOWED,    C23065000
                                     OR X'4004', EB NOT ALLOWED)     R4 23065500
         OI    SHWFLAGS,ICEINBND   MARK SESSION FOR INBOUND FLOW     R4 23066000
         NI    SHWSTAT,255-ICEHOLD RELSE OUTBD ALLOC CONTENTION LOCK R4 23066500
         SPACE 1                                                     R4 23067000
MVDBKNOP EQU   *                   NO CHANGE                         R4 23067500
         EJECT                                                       R4 23068000
*                             TEST FOR CHANGE DIRECTION              R4 23068500
         SPACE 1                                                     R4 23069000
         TM    RPLRH3,RPLCMD       TEST REQUEST HEADER BYTE 3        R4 23069500
         BZ    SKIP750             BRANCH IF CHANGE DIRECTION NOT ON R4 23070000
         TM    RPLCHN,RPLLAST+RPLONLY  TEST R.U. CHAIN POSITION      R4 23070500
         BZ    MVDX4009            FAIL IF NOT AT END OF CHAIN       R4C23071000
                                    (SENSE X'4009', CD NOT ALLOWED)  R4 23071500
         OI    SHWFLAGS,ICECHDIR   SET 'CHGE DIRECTION PENDING' FLAG R4 23072000
SKIP750  CLI   SHWCNTRL,0          TEST INDEX COMPUTED FROM R.U.TYPE R4 23072500
         BNE   MVDFCFIN            BRANCH IF DFC THAT ALLOWS EB/CD   R4 23073000
         SPACE 3                                                     R4 23073500
*                             TEST FOR ALTERNATE CODE                R4 23074000
         SPACE 1                                                     R4 23074500
         TM    RPLRH3,RPLCSI       TEST REQUEST HEADER BYTE 3        R4 23075000
         BZ    MVDECFMH            BRANCH IF NOT ALTERNATE CODE      R4 23075500
         TM    BINCMNP,BINALT      TEST COMMON NAU PROTOCOLS         R4 23076000
         BZ    MVDX4010            BRANCH IF ALT CODE NOT ALLOWED    R4C23076500
                                    (SENSE X'4010', ALT CD NOT SUPD) R4 23077000
         OI    SHWTFMTM,DCTPALTC   SET 'ALT CODE' IN DCT FMT MASK    R4 23077500
         EJECT                                                       R4 23078000
*                                                                    R4 23078500
*                             IDENTIFY FM HEADER TYPE AND LEVEL      R4 23079000
*                                                                    R4 23079500
         SPACE 1                                                     R4 23080000
MVDECFMH L     R1,RPLRLEN          LEAVE R.U. LENGTH IN R1 AND R.U.  R4 23080500
         L     WA,RPLAREA           ADDR IN WA, ON RETURN TO CALLER  R4 23081000
         TM    RPLOPT12,RPLFMHDR   TEST FORMAT INDICATOR             R4 23081500
         BZ    MVDNOFMH            BRANCH IF FM HEADER NOT PRESENT   R4 23082000
         LTR   R1,R1               TEST REMAINING R.U. LENGTH        R4 23082500
         BNP   MVDNOFMH            BRANCH IF R.U. ACTUALLY NULL      R4 23083000
         TM    RPLCHN,RPLFIRST+RPLONLY  TEST R.U. CHAIN POSITION     R4 23083500
         BZ    MVDX400F            FAIL IF FM HDR NOT ON 1ST OF CHN  R4 23084000
         TM    BINCMNP,BINFMHD     TEST COMMON NAU PROTOCOLS         R4 23084500
         BZ    MVDX400F            FAIL IF FM HDRS NOT TO BE USED    R4C23087500
                                    (SENSE X'400F', FMH NOT ALLOWED) R4 23088000
         SPACE 2                                                     R4 23089000
         USING FMHDSECT,WA         ESTABLISH FM HDR ADDRESSABILITY   R4 23089500
         SPACE 1                                                     R4 23090000
MVDECLIP SLR   R0,R0               CLIP FM HDR                       R4 23090500
         IC    R0,FMHLNGTH          OFF FRONT OF                     R4 23091000
         SLR   R1,R0                 R.U. BY MAKING                  R4 23091500
         ST    R1,RPLRLEN             LENGTH SHORTER                 R4 23092000
         ALR   R0,WA                   AND INCREASING                R4 23092500
         ST    R0,RPLAREA               ADDRESS POINTER              R4 23093000
         TM    FMHBYTE1,FMHCNCAT   TEST FM HDR CONCATENATED BIT      R4 23093500
         BO    SKIP760             BRANCH IF MORE FM HEADERS FOLLOW  R4 23094000
         NI    RPLOPT12,255-RPLFMHDR  RESET FORMAT INDICATOR IF NOT  R4 23094500
SKIP760  NI    FMHBYTE1,255-FMHCNCAT  FORCE CONCATENATED FMH BIT OFF R4 23095000
         CLI   FMHBYTE1,FMHTYPE1      TEST FMH TYPE                  R4 23095500
         BNE   MVDX1008            FAIL IF CANNOT RECOGNIZE FMH TYPE   C23096000
                                    (SENSE X'1008', INVALID FM HDR)  R4 23096500
         SPACE 1                                                     R4 23097000
*                                                                    R4 23097500
*                             FMH TYPE 1 - DATA STREAM HEADER        R4 23098000
*                                                                    R4 23098500
         SPACE 1                                                     R4 23099000
MVDTYPE1 TM    SHWRCVST,ICENOFMH   TEST SESSION STATUS               R4 23099500
         BNO   MVDX1008            FAIL IF TYPE 1 FMH ALREADY PENDG  R4C23100000
                                    (SENSE X'1008', INVALID FM HDR)  R4 23100500
         CLI   FMHLNGTH,MFMHAL     CHECK FM HEADER LENGTH            R4 23101000
         BNE   MVDX1008            FAIL IF LTH BAD OR UNSUPPORTED      C23101500
                                    (SENSE X'1008', INVALID FM HDR)  R4 23102000
         SLR   R15,R15             CLEAR WORK REGISTER         @OZ29180 23102100
         IC    R15,FMHPROPS        COPY PROPERTIES BYTE TO REGISTER  R4 23102500
         NI    SHWRCVST,255-ICEDSTRM  MASK DATA STREAM         @OZ29180 23103000
         SRL   R15,5               GET DATA STREAM ACTION CODE @OZ29180 23103500
         LA    R1,MVICEST(R15)     POINT TO FMH STATE FLAGS    @OZ29180 23104000
         OC    SHWRCVST,0(R1)      SET FMH PENDING STATE       @OZ29180 23104500
*                                  THIS CARD DELETED BY APAR   @OZ29180 23105000
         IC    R15,MVDDS(R15)      USE AS INDEX INTO OFFSET TABLE   R41 23105500
         TM    FMHSEL,FMHMEDIA     TEST FMH DESTINATION             R41 23105600
         BNZ   MVDDS(R15)          ENTER ROUTINE IF NOT CONSLE @OZ18406 23105700
         TM    RPLCHN,RPLONLY      ELSE, TEST FOR ONLY IN CHAIN     R41 23105800
         BO    MVDDS(R15)          BR IF YES, HANDLE CONSOLE        R41 23105900
         B     MVDX0811            FAIL IF NOT OC (X'0811')         R41 23106000
         SPACE 3                                               @OZ29180 23106100
MVICEST  DC    AL1(ICERESUM)       RESUME DATA STREAM          @OZ29180 23106200
         DC    AL1(ICENMEND)       END DATA STREAM             @OZ29180 23106300
         DC    AL1(ICEBEGIN)       BEGIN DATA STREAM           @OZ29180 23106400
         DC    AL1(ICEODS)         BEGIN/END DATA STREAM       @OZ29180 23106500
         DC    AL1(ICESPEND)       SUSPEND DATA STREAM         @OZ29180 23106600
         DC    AL1(ICEABEND)       ABORT DATA STREAM           @OZ29180 23106700
         DC    AL1(ICECONT)        CONTINUE DATA STREAM        @OZ29180 23106800
         DC    AL1(0)              RESERVED                    @OZ29180 23106900
         SPACE 1                                               @OZ29180 23107000
MVDDS    DC    AL1(MVDDSRES-MVDDS) 'RESUME DATA STREAM'        @OZ29180 23107100
         DC    AL1(MVDDSEND-MVDDS) 'END DATA STREAM' (NORMAL)        R4 23107500
         DC    AL1(MVDDSBGN-MVDDS) 'BEGIN DATA STREAM'               R4 23108000
         DC    AL1(MVDDSONL-MVDDS) 'ONLY CHAIN IN DATA STREAM'       R4 23108500
         DC    AL1(MVDDSEND-MVDDS) 'SUSPEND DATA STREAM'             R4 23109000
         DC    AL1(MVDDSEND-MVDDS) 'END DATA STREAM' (ABORTING)      R4 23109500
         DC    AL1(MVDDSCNT-MVDDS) 'CONTINUE DATA STREAM'      @OZ29180 23110000
         DC    AL1(MVDDSERR-MVDDS) ERROR, SENSE X'1008' INVALID FMH  R4 23110500
         EJECT                                                 @OZ29180 23112000
MVDDSERR B     MVDX1008            FAIL, SNS X'1008' INVALID FM HDR  R4 23112500
         SPACE 1                                                     R4 23113000
MVDDSEND TM    SHWSTAT,ICEALLOC    TEST SESSION STATUS               R4 23113500
         BO    MVDECFMH            IF ALLOCATED LOOP FOR NEXT FM HDR R4 23114000
         B     MVDX1008            FAIL IF EDS/ADS AND NOT ALLOCATED R4C23114500
                                    (SENSE X'1008', INVALID FM HDR)  R4 23115000
         SPACE 1                                               @OZ29180 23115100
MVDDSCNT TM    SHWSTAT,ICEALLOC    TEST SESSION STATUS         @OZ29180 23115200
         BZ    MVDX1008            FAIL IF NOT ALLOCATED       @OZ29180 23115300
         TM    FMHSEL,FMHMEDIA     TEST SELECTED MEDIUM        @OZ29180 23115350
         BZ    MVDX1008            FAIL IF CONSOLE             @OZ29180 23115375
         TM    DCTDEVTP,DCTRJR     TEST FOR REMOTE READER      @OZ29180 23115400
         BZ    MVDX1008            FAIL IF NOT REMOTE READER   @OZ29180 23115500
         TM    RPLCHN,RPLONLY      TEST FOR ONLY IN CHAIN      @OZ29180 23115600
         BZ    MVDX0811            FAIL IF NOT OC              @OZ29180 23115700
         B     SKIP770             TEST FOR COMPRESS/COMPACT   @OZ29180 23115800
         SPACE 1                                               @OZ29180 23115900
MVDDSRES TM    SHWSTAT,ICEALLOC    TEST SESSION STATUS               R4 23116000
         BO    MVDX1008            FAIL IF RDS AND ALLOCATED         R4C23116500
                                    (SENSE X'1008', INVALID FM HDR)  R4 23117000
         SPACE 1                                                     R4 23117500
MVDDSBGN TM    FMHSEL,FMHMEDIA     TEST SELECTED MEDIUM              R4 23118000
         BZ    MVDX0811            FAIL IF CONSOLE & NOT 'END D.S.'  R4C23118500
                                    (SENSE X'0811', BREAK)           R4 23119000
         SPACE 1                                                     R4 23119500
MVDDSONL TM    SHWSTAT,ICEALLOC    TEST SESSION STATUS               R4 23120000
         BZ    SKIP770             BR IF NOT ALLOCD, ELSE IMPL SUSPD R4 23120500
         TM    MDCTSEL,FMHMEDIA    TEST ACTIVE DATA STREAM MEDIUM    R4 23121000
         BZ    MVDX1008            FAIL IF TRYING TO SUSPD CONSOLE   R4C23121500
                                    (SENSE X'1008', INVALID FM HDR)  R4 23122000
SKIP770  NI    SHWTFMTM,255-DCTPPRES-DCTPCPCT  ASSSUME NO      @OZ29180C23122500
                                   COMPRESSION NO COMPACTION   @OZ29180 23122600
         TM    FMHPROPS,FMHCPRSS   TEST DATA STREAM PROPERTIES @OZ29180 23122700
         BZ    MVDDS01             BRANCH IF NO COMPRESSION    @OZ29180 23122800
         TM    BINSECP,BINSCMP     TEST SEC NAU PROTOCOLS      @OZ29180 23122900
         BZ    MVDX0826            FAIL IF COMPRESSION NOT     @OZ29180C23123000
                                   SUPPORTED                   @OZ29180 23123100
         OI    SHWTFMTM,DCTPPRES   SET COMPRESSION ON          @OZ29180 23123200
         SPACE 1                                               @OZ29180 23123300
MVDDS01  TM    FMHPROPS,FMHCPACT   TEST DATA STREAM PROPERTIES @OZ29180 23123400
         BZ    MVDDS02             BRANCH IF NO COMPACTION     @OZ29180 23123500
         TM    BINSFMB1,BINCMPCT   TEST SECONDARY PROTOCOLS    @OZ29180 23123600
         BZ    MVDX0826            FAIL IF COMPACTION NOT      @OZ29180C23123700
                                   SUPPORTED                   @OZ29180 23123800
         OI    SHWTFMTM,DCTPCPCT   SET COMPACTION ON           @OZ29180 23123900
         SPACE 1                                               @OZ29180 23124000
MVDDS02  CLI   0(R1),ICECONT       TEST FOR CDS FMH            @OZ29180 23124500
         BE    MVDDSLRC            BRANCH IF CDS               @OZ29180 23125000
         TM    FMHSEL,FMHMEDIA     TEST SELECTED MEDIUM        @OZ29180 23125500
         BZ    MVDECFMH            LOOP IF CONSOLE. LET RDCT ADR = 0 R4 23126000
         NI    FMHBYTE3,255-FMHDMAND  FORCE DMAND SLCT BIT OFF @OZ29180 23126500
         TM    FMHPROPS,FMHBEGIN   TEST DATA STREAM ACTION           R4 23127000
         BNZ   MVDCTFND            SEEK AVAIL. RDCT IF NOT 'RESUME'  R4 23127500
         EJECT                                                       R4 23128000
*                                                                    R4 23128500
*                             FIND REMOTE DCT IN SUSPENDED CHAIN     R4 23129000
*                                                                    R4 23129500
         SPACE 1                                                     R4 23130000
         LA    MDCT,ICESDCT-(MDCTSDCT-DCTDSECT)  FAKE ZERO SUSP RDCT R4 23130500
         SPACE 1                                                     R4 23131000
MVDCTSSP LR    R15,MDCT            SAVE PREVIOUS RDCT ADDRESS        R4 23131500
         L     MDCT,MDCTSDCT       GET NEXT SUSPENDED RDCT ADDRESS   R4 23132000
         LTR   MDCT,MDCT           TEST                              R4 23132500
         BZ    MVDX0825            BR IF NO MORE RDCT'S, CAN'T ALLOC   C23133000
                                    (SENSE X'0825', CMPON NOT AVAIL) R4 23133500
         CLC   FMHSEL,MDCTSEL      COMPARE SELECT BYTES              R4 23134000
         BNE   MVDCTSSP            LOOP FOR NEXT RDCT IF NOT A MATCH R4 23134500
         ST    R15,SHWRDCT         STORE PREV RDCT ADDR FOR REALLOC. R4 23135000
         B     MVDECFMH            LOOP BACK FOR NEXT FM HEADER      R4 23135500
         SPACE 3                                                     R4 23136000
*                                                                    R4 23136500
*                             FIND AN ELIGIBLE REMOTE DCT            R4 23137000
*                                                                    R4 23137500
         SPACE 1                                                     R4 23138000
MVDCTFND CLI   FMHSEL,FMHEXCH+FMHLDANY  TEST INCOMING MEDIUM   @OZ29180 23138500
         BH    SKIP790             BRANCH IF NOT 'EXCH'        @OZ29180 23139000
         MVZ   FMHSEL,=AL1(FMHCARD)  ELSE CHNGE EXCH TO CARD   @OZ29180 23139500
SKIP790  IC    R15,FMHSEL          GET DESIRED MEDIUM & LOGICAL DEV. R4 23140000
         SLR   R0,R0               ASSUME ZERO MASK, SPECIFIC DEVICE R4 23140500
         TM    FMHSEL,FMHLDANY     TEST FM HEADER LOGICAL DEVICE     R4 23141000
         BNO   SKIP800             BRANCH IF NOT GENERAL REQUEST     R4 23141500
         LA    R0,FMHLDANY         LOAD MASK FOR ANY AVAILABLE DEV.  R4 23142000
SKIP800  SLR   R1,R1               CLEAR REG FOR RDCT SELECT BYTE    R4 23142500
         L     MDCT,ICELDCT        GET ADDRESS OF LINE DCT           R4 23143000
         SPACE 1                                                     R4 23143500
MVDCTGET L     MDCT,MDCTDCT        GET RDCT ADDRESS                  R4 23144000
         LTR   MDCT,MDCT           TEST RDCT ADDRESS                 R4 23144500
         BZ    MVDX0825            BR IF NO MORE RDCT'S, CAN'T ALLOC   C23145000
                                    (SENSE X'0825', CMPON NOT AVAIL) R4 23145500
         IC    R1,MDCTSEL          GET REMOTE DCT SELECT BYTE        R4 23146000
         OR    R1,R0               OVERLAY GEN. REQUEST CODE IF NEC. R4 23146500
         CLR   R1,R15              COMPARE SELECT BYTES              R4 23147000
         BNE   MVDCTGET            LOOP FOR NEXT RDCT IF NOT A MATCH R4 23147500
         TM    DCTSTAT,DCTINUSE+DCTDRAIN  TEST RDCT STATUS           R4 23148000
         BNZ   MVDCTGET            LOOP FOR NEXT RDCT IF UNAVAILABLE R4 23148500
         ST    MDCT,SHWRDCT        STORE RDCT ADDRESS FOR ALLOCATION R4 23149000
MVDDSLRC MVC   MDCTRECL,DCTLRECL   SET LRECL TO JES2 DEFAULT   @OZ29180 23149100
         CLI   FMHERCL,0           LRECL SPECIFIED IN BDS      @OZ29180 23149200
         BE    MVDECFMH            NO, LOOP FOR MORE FM HDRS   @OZ29180 23149300
         MVC   MDCTRECL,FMHERCL    SET LRECL FROM BDS FMH      @OZ29180 23149400
         B     MVDECFMH            LOOP BACK FOR MORE FM HEADERS     R4 23149500
         EJECT                                                       R4 23150000
*                                                                    R4 23150500
*                        SET ERROR SENSE CODES FOR NEGATIVE RESPONSE R4 23151000
*                                                                    R4 23151500
         SPACE 1                                                     R4 23152000
*                             C.P.M.(R.H.) ERRORS - MAJOR CODE X'40' R4 23152500
         SPACE 1                                                     R4 23153000
MVDX4003 DS    0H                  CLASSIFY                          R4 23153500
MVDX4004 EQU   *                    'SHOULD                          R4 23154000
MVDX4009 EQU   *                     NEVER                           R4 23154500
MVDX400B EQU   *                      OCCUR'                         R4 23155000
MVDX400C EQU   *                       C.P.M.                        R4 23155500
MVDX400F EQU   *                        ERRORS                       R4 23156000
MVDX4010 EQU   *                         TOGETHER                    R4 23156500
MVDX400X BAL   R15,MVDXNRSP        SEND NEGATIVE RESPONSE & RETURN   R4 23157000
         DC    AL1(RPLCPMO,0,0,0) DUMMY C.P.M. ERROR CODE            R4 23157500
         SPACE 2                                                     R4 23158000
*                             STATE ERRORS - MAJOR CODE X'20'        R4 23158500
         SPACE 1                                                     R4 23159000
MVDX2002 BAL   R15,MVDXNRSP        SEND NEGATIVE RESPONSE & RTN     R41 23159500
         DC    AL1(RPLSTATO,X'02',0,0) 'CHAIN STATE ERROR' CODE     R41 23159600
         SPACE 1                                                    R41 23159700
MVDX2003 BAL   R15,MVDXNRSP        SEND NEGATIVE RESPONSE & RTN     R41 23160000
         DC    AL1(RPLSTATO,X'03',0,0) 'BRACKET STATE ERR' CODE     R41 23160100
         SPACE 1                                                    R41 23160200
MVDX2004 BAL   R15,MVDXNRSP        SEND NEGATIVE RESPONSE & RTN     R41 23160500
         DC    AL1(RPLSTATO,X'04',0,0) 'DIRECTION ERROR' CODE       R41 23161500
         SPACE 2                                                     R4 23162000
*                             FUNC INTRPTR ERRORS - MAJOR CODE X'10' R4 23162500
         SPACE 1                                                     R4 23163000
MVDX1003 BAL   R15,MVDXNRSP        SEND NEGATIVE RESPONSE & RETURN   R4 23163500
         DC    AL1(RPLFIO,X'03',0,0) 'FUNCTION NOT SUPPORTED' CODE   R4 23164000
         SPACE 1                                                     R4 23164500
MVDX1008 BAL   R15,MVDXNRSP        SEND NEGATIVE RESPONSE & RETURN   R4 23165000
         DC    AL1(RPLFIO,X'08',0,0) 'INVALID FM HEADER' CODE        R4 23165500
         SPACE 2                                                     R4 23166000
*                             REQUEST REJECT - MAJOR CODE X'08'      R4 23166500
         SPACE 1                                                     R4 23167000
MVDX0811 BAL   R15,MVDXNRSP        SEND NEGATIVE RESPONSE & RETURN   R4 23167500
         DC    AL1(RPLRRO,X'11',0,0) 'BREAK, I DON'T LIKE IT' CODE   R4 23168000
         SPACE 1                                                     R4 23168500
MVDX0819 BAL   R15,MVDXNRSP        SEND NEGATIVE RESPONSE & RETURN   R4 23169000
         DC    AL1(RPLRRO,X'19',0,0) 'RTR NOT REQUIRED' CODE         R4 23169500
         SPACE 1                                                     R4 23170000
MVDX0825 BAL   R15,MVDXNRSP        SEND NEGATIVE RESPONSE & RETURN   R4 23170500
         DC    AL1(RPLRRO,X'25',0,0) 'COMPONENT NOT AVAILABLE' CODE  R4 23171000
         SPACE 1                                                     R4 23171500
MVDX0826 BAL   R15,MVDXNRSP        SEND NEGATIVE RESPONSE & RETURN   R4 23172000
         DC    AL1(RPLRRO,X'26',0,0) 'FUNCTION NOT SUPPORTED' CODE   R4 23172500
         EJECT                                                       R4 23173000
*                             SEND -RSP AND RESTORE PRE-CHAIN STATE  R4 23173500
         SPACE 1                                                     R4 23174000
MVDXNRSP MVC   RPLFDBK2,0(R15)     SET INBOUND SENSE FOR MSG LOGGING R4 23174500
         SPACE 1                                                     R4 23175000
MVDXRQST MVC   RPLOSENS,RPLFDBK2   COPY INBOUND TO OUTBOUND SENSE    R4 23175500
         OI    RPLVTFL2,RPLEX      TURN ON EXCEPTION RESPONSE BIT   R41 23175600
         LA    R15,MVFRESPN        POINT TO EXCEPTION RESP ROUTINE  R41 23175700
         CLC   RPLCNTDF(3),MSNADATA  TEST FAILING REQUEST TYPE       R4 23176000
         BNER  R15                 BR IF SESSION OR DATA FLOW CNTRL R41 23176500
         NI    ICEFLAGS,255-ICEBBPND-ICEEBPND-ICECHDIR  RESET PENDS. R4 23177000
         TM    BINCMNP2,BINRCVR    TEST COMMON PROTOCAL        @OZ34188 23177500
         BO    MVDXPRGE            IF SENDER TAKES CARE OF RECOVERY R41C23178000
                                    DON'T CHGE DIRECTION, JUST PURGE R4 23178500
         OI    ICEFLAGS,ICECHDIR   ELSE GO TO OUTBOUND AT NEXT EOC   R4 23179000
         SPACE 1                                                    R41 23179500
MVDXPRGE OI    ICERCVST,ICEINCHN+ICECNCEL  ENTER PURGING CHAIN STATER41 23180000
         TM    RPLCHN,RPLLAST+RPLONLY  TEST R.U. CHAIN POSITION     R41 23180500
         BZ    MVRSTATI            IF NOT EOC, STAY IN PURGE STATE  R41 23181000
         NI    ICERCVST,255-ICEINCHN  SHOW PURGED CHAIN HAS ENDED   R41 23181100
         B     MVRSTATI            GO UPDATE RECEIVING STATE MACHINER41 23181200
         SPACE 1                                                     R4 23181500
         DROP  R14                 DISCARD BIND IMAGE ADDRESSABILITY R4 23182000
         EJECT                                                       R4 23182500
*                                                                    R4 23183000
*                        HANDLE SESSION & DATA FLOW CONTROL REQUESTS R4 23183500
*                                                                    R4 23184000
         SPACE 1                                                     R4 23184500
MVDFCTRL LA    WA,MVDFCLST+MVDFCL  POINT AT LIST OF DFC & SC CODES   R4 23185000
         LA    R1,MVDFCEND         POINT AT LAST ENTRY IN LIST       R4 23185500
         LA    R0,MVDFCL           LOAD LENGTH OF ONE ENTRY          R4 23186000
SKIP820  CLC   1(3,WA),RPLCNTDF    SEARCH FOR R.U. TYPE              R4 23186500
         BE    SKIP810             BRANCH IF FOUND                   R4 23187000
         BXLE  WA,R0,SKIP820       LOOP BACK UNTIL LIST EXHAUSTED    R4 23187500
SKIP810  LA    R0,MVDFCLST         CALCULATE INDEX                   R4 23188000
         SLR   WA,R0                IN DFC LIST OF                   R4 23188500
         SRL   WA,2                  MATCHING ENTRY                  R4 23189000
         STC   WA,SHWCNTRL         SAVE INDEX IN WORK AREA           R4 23189500
         IC    R15,*+8(WA)         GET OFFSET TO HANDLING ROUTINE    R4 23190000
         B     MVDFC(R15)          BRANCH TO CORRECT ROUTINE         R4 23190500
         SPACE 1                                                     R4 23191000
         DC    AL1(MVDFCR01-MVDFC)      DATA   NOT APPLICABLE        R4 23191500
         DC    AL1(MVDFCNCL-MVDFC)    CANCEL   RESCIND PENDING STATE R4 23192000
*        DC    AL1(MVDFC***-MVDFC)        QC   NOT SUPPORTED         R4 23192500
*        DC    AL1(MVDFC***-MVDFC)       QEC   NOT SUPPORTED         R4 23193000
*        DC    AL1(MVDFC***-MVDFC)     CHASE   NOT SUPPORTED         R4 23193500
*        DC    AL1(MVDFC***-MVDFC)      RELQ   NOT SUPPORTED         R4 23194000
         DC    AL1(MVDFCERR-MVDFC)       BID   NOT SUPPORTED INBOUND R4 23194500
         DC    AL1(MVDFCRTR-MVDFC)       RTR   SEND 'RTR NOT NEEDED' R4 23195000
         DC    AL1(MVDFCLUS-MVDFC)       LUS   ONLY INTV REQD SUPPTD R4 23195500
         DC    AL1(MVDFCSIG-MVDFC)    SIGNAL   BREAK OUTBOUND STREAM R4 23196000
*        DC    AL1(MVDFC***-MVDFC)       SDT   NOT SUPPORTED         R4 23196500
*        DC    AL1(MVDFC***-MVDFC)     CLEAR   NOT SUPPORTED         R4 23197000
*        DC    AL1(MVDFC***-MVDFC)      STSN   NOT SUPPORTED         R4 23197500
*        DC    AL1(MVDFC***-MVDFC)     SHUTD   NOT SUPPORTED         R4 23198000
*        DC    AL1(MVDFC***-MVDFC)     SHUTC   NOT SUPPORTED         R4 23198500
*        DC    AL1(MVDFC***-MVDFC)       RQR   NOT SUPPORTED         R4 23199000
         DC    AL1(MVDFCRSH-MVDFC)     RSHUT   DRAIN SESSION         R4 23199500
         DC    AL1(MVDFCERR-MVDFC) ANY OTHER TYPE - NOT SUPPORTED    R4 23200000
         EJECT                                                       R4 23200500
MVDFCLST DS    0F                  DFC CODES IN RPLCNTDF/RPLCNTDC    R4 23201000
MVDFCL   EQU   4                   TABLE ENTRY LENGTH                R4 23201500
         DC    AL1(0)                   DATA   -                     R4 23202000
MSNADATA DC    AL1(RPLDATA,0,0)    (RPLCNTDF)  DATA R.U.             R4 23202500
         DC    AL1(0)                 CANCEL   -                     R4 23203000
MSNACNCL DC    AL1(RPLCNCEL,0,0)   (RPLCNTDF) 'CANCEL'               R4 23203500
*        DC    AL1(0)                     QC   -                     R4 23204000
*SNAQC   DC    AL1(RPLQC,0,0)      (RPLCNTDF) 'QUIESCE COMPLETE'     R4 23204500
*        DC    AL1(0)                    QEC   -                     R4 23205000
*SNAQEC  DC    AL1(RPLQEC,0,0)     (RPLCNTDF) 'QUIESCE AT END OF CH' R4 23205500
*        DC    AL1(0)                  CHASE   -                     R4 23206000
*SNACHSE DC    AL1(RPLCHASE,0,0)   (RPLCNTDF) 'CHASE'                R4 23206500
*        DC    AL1(0)                   RELQ   -                     R4 23207000
*SNARELQ DC    AL1(RPLRELQ,0,0)    (RPLCNTDF) 'RELEASE QUIESCE'      R4 23207500
         DC    AL1(0)                    BID   -                     R4 23208000
MSNABID  DC    AL1(0,RPLBID,0)     (RPLCNTDC) 'BID'                  R4 23208500
         DC    AL1(0)                    RTR   -                     R4 23209000
MSNARTR  DC    AL1(0,RPLRTR,0)     (RPLCNTDC) 'READY TO RECEIVE'     R4 23209500
         DC    AL1(0)                    LUS   -                     R4 23210000
MSNALUS  DC    AL1(0,RPLLUS,0)     (RPLCNTDC) 'LOGICAL UNIT STATUS'  R4 23210500
         DC    AL1(0)                 SIGNAL   -                     R4 23211000
MSNASGNL DC    AL1(0,RPLSIGNL,0)   (RPLCNTDC) 'SIGNAL'               R4 23211500
*        DC    AL1(0)                    SDT   -                     R4 23212000
*SNASDT  DC    AL1(0,0,RPLSDT)     (RPLCNTSC) 'START DATA TRAFFIC'   R4 23212500
*        DC    AL1(0)                  CLEAR   -                     R4 23213000
*SNACLR  DC    AL1(0,0,RPLCLEAR)   (RPLCNTSC) 'CLEAR'                R4 23213500
*        DC    AL1(0)                   STSN   -                     R4 23214000
*SNASTSN DC    AL1(0,0,RPLSTSN)    (RPLCNTSC) 'SET & TEST SEQUENCE'  R4 23214500
*        DC    AL1(0)                  SHUTD   -                     R4 23215000
*SNASHTD DC    AL1(0,0,RPLSHUTD)   (RPLCNTSC) 'SHUTDOWN'             R4 23215500
*        DC    AL1(0)                  SHUTC   -                     R4 23216000
*SNASHTC DC    AL1(0,0,RPLSHUTC)   (RPLCNTSC) 'SHUTDOWN COMPLETE'    R4 23216500
*        DC    AL1(0)                    RQR   -                     R4 23217000
*SNARQR  DC    AL1(0,0,RPLRQR)     (RPLCNTSC) 'REQUEST RECOVERY'     R4 23217500
         DC    AL1(0)                  RSHUT   -                     R4 23218000
MSNARSHT DC    AL1(0,0,RPLRSHUT)   (RPLCNTSC) 'REQUEST SHUTDOWN'     R4 23218500
MVDFCEND EQU   *-MVDFCL            LAST VALID ENTRY IN TABLE         R4 23219000
         EJECT                                                       R4 23219500
*                                                                    R4 23220000
*                             FINISH HANDLING DFC'S THAT ALLOW EB/CD R4 23220500
*                                                                    R4 23221000
         SPACE 1                                                     R4 23221500
MVDFCFIN L     R0,SHWSTAT          UPDATE                            R4 23222000
         ST    R0,ICESTAT           ICE STATE                        R4 23222500
         LR    WA,ML               SAVE 1ST LEVEL RETURN ADDR.      R41 23223000
         ICM   WA,8,SHWCNTRL        WITH D.F.C. TYPE INDEX          R41 23223500
         BAL   ML,MVFRESPD         SEND +RSP AND FREE BUFFER        R41 23224000
         LR    ML,WA               RESTORE 1ST LVL RETURN ADDR.     R41 23224500
         SRL   WA,24               ISOLATE D.F.C. TYPE INDEX        R41 23225000
         IC    WA,*+8(WA)          BRANCH ON D.F.C.                  R4 23225500
         B     MVDFC(WA)            TYPE USING TABLE                 R4 23226000
         SPACE 2                                                     R4 23226500
         DC    AL1(MVDFCR01-MVDFC) DATA - LOGIC ERROR                R4 23227000
         DC    AL1(MVDFCNC2-MVDFC) 'CANCEL' - SET RDCT DELETE BITS   R4 23227500
*        DC    AL1(MVDFC***-MVDFC) 'QUIESCE COMPLETE' NOT SUPPORTED  R4 23228000
*        DC    AL1(MVDFC***-MVDFC) 'QUIESCE AT END CH' NOT SUPPORTED R4 23228500
*        DC    AL1(MVDFC***-MVDFC) 'CHASE' NOT SUPPORTED             R4 23229000
*        DC    AL1(MVDFC***-MVDFC) 'RELEASE QUIESCE' NOT SUPPORTED   R4 23229500
         DC    AL1(MVDFCR01-MVDFC) 'BID' NOT SUPPORTED INBOUND       R4 23230000
         DC    AL1(MVDFCR01-MVDFC) 'RDY TO RCV' - LOGIC ERROR        R4 23230500
         DC    AL1(MVDFCLU2-MVDFC) 'LU STAT' - RESET OUTB ALLOC LOCKR41 23231000
         DC    AL1(MVDFCR01-MVDFC) 'SIGNAL' - LOGIC ERROR            R4 23231500
*        DC    AL1(MVDFC***-MVDFC) 'STRT DATA TRAFFIC' NOT SUPPORTED R4 23232000
*        DC    AL1(MVDFC***-MVDFC) 'CLEAR' NOT SUPPORTED             R4 23232500
*        DC    AL1(MVDFC***-MVDFC) 'SET/TEST SEQ NBRS' NOT SUPPORTED R4 23233000
*        DC    AL1(MVDFC***-MVDFC) 'SHUTDOWN' NOT SUPPORTED          R4 23233500
*        DC    AL1(MVDFC***-MVDFC) 'SHUTDOWN COMPLETE' NOT SUPPORTED R4 23234000
*        DC    AL1(MVDFC***-MVDFC) 'REQUEST RECOVERY'  NOT SUPPORTED R4 23234500
         DC    AL1(MVDFCR01-MVDFC) 'REQUEST SHUTDOWN' - LOGIC ERROR  R4 23235000
         DC    AL1(MVDFCR01-MVDFC) ANY OTHER TYPE - LOGIC ERROR      R4 23235500
         SPACE 3                                                     R4 23236000
MVDFC    DS    0H                  ORIGIN FOR BRANCH TABLE OFFSETS   R4 23236500
         SPACE 1                                                     R4 23237000
MVDFCR01 B     R01                 JES2 CATASTR ERR IN RPL HANDLING  R4 23237500
         SPACE 1                                                     R4 23238000
MVDFCERR B     MVDX1003            FAIL, SNSE X'1003' FUNC NOT SUPPD R4 23238500
         SPACE 1                                                     R4 23239000
MVDFCRSH LR    WA,ML               SAVE 1ST LEVEL RETURN ADDRESS     R4 23239500
         BAL   ML,MVFREPRG         DISPOSE OF BUFFER                 R4 23240000
         LR    ML,WA               RESTORE 1ST LEVEL RETURN ADDRESS  R4 23240500
         B     MICETRAP            TREAT AS SESSION DRAIN REQUEST    R4 23241000
         EJECT                                                       R4 23241500
MVDFCSIG CLC   RPLSIGDA,=X'00010000'  TEST SIGNAL CODE               R4 23242000
         BNE   MVFREPRG            THROW AWAY SIGNAL IF NOT CD REQST R4 23242500
         TM    ICEFLAGS,ICEOUTBD+ICEREVFL  TEST SESSION STATUS      R41 23243000
         BZ    MVFREPRG            THROW AWAY SIGNAL IF NOT OUTBOUND R4 23243500
         TM    ICEFLAGS,ICEOUTBD   TEST SESSION STATUS              R41 23243600
         BZ    MVDFCSI2            SET FLAG IF STREAM IS SUSPENDED  R41 23243700
         TM    ICESTAT,ICEALLOC    TEST SESSION STATUS               R4 23244000
         BZ    MICEGICD            SEND CHANGE DIR IF NOT ALLOCATED  R4 23244500
         TM    ICESNDST,ICEINCHN   TEST SESSION SEND STATUS          R4 23245000
         BO    MVDFCSI1            JUST SET FLAG IF IN CHAIN         R4 23245500
         ICM   R0,7,DCTBUFAD+1     CHECK DCT BUFFER ANCHOR           R4 23246000
         BNZ   MVDFCSI1            SET FLAG IF HAVE 1ST BUF OF CHAIN R4 23246500
         TM    DCTSTAT,DCTRTAM     TEST WHERE PROCESSOR IS WAITING   R4 23247000
         BZ    MICEGICD            SEND CHANGE DIR IF NOT IN RTAM    R4 23247500
         SPACE 1                                                     R4 23248000
MVDFCSI1 TM    DCTDEVTP,DCTRPU     TEST REMOTE DEVICE TYPE           R4 23248500
         BO    MVDFCHIP            FORCE HI-PRIORITY INTRPT IF PUNCH R4 23249000
         TM    MDCTSEL,FMHMEDIA    TEST MEDIUM SELECTED              R4 23249500
         BZ    MVDFCHIP            BR IF CONSOLE - FORCE HIGH PRIO  R41 23250000
         L     MDCT,ICELDCT        GET ADDRESS OF LINE DCT           R4 23250500
         L     R15,MDCTRAT         GET ADDRESS OF RAT ENTRY          R4 23251000
         USING RATDSECT,R15        TEMPORARY RAT ADDRESSABILITY      R4 23251500
         TM    RATCONF,RATCONFC+RATCONFO  TEST CONSOLE AVAILABITY    R4 23252000
         BO    MVDFCHIP            ALWAYS HI-PRIO INTERRUPT IF AVAIL R4 23252500
MVDFCSI2 XI    ICEFLGS2,ICESIGNL   INVERT 'SIGNAL-RECEIVED'    @OZ29180 23253000
         TM    ICEFLGS2,ICESIGNL   TEST NEW FLAG VALUE         @OZ29180 23253500
         BO    MVFREPRG            IF ON, PROCESSING DONE - GO PURGE R4 23254000
         SPACE 1                                                     R4 23254500
MVDFCHIP OI    ICEFLGS2,ICESIGNL+ICEBREAK  SHOW HI-PRTY INTRP  @OZ29180 23255000
         B     MVFREPRG                    (2 CONSECUTIVE SIGNAL'S)  R4 23255500
         DROP  R15                 DISCARD TEMP RAT ADDRESSABILITY   R4 23256000
         SPACE 1                                                     R4 23256500
MVDFCRTR NI    ICESTAT,255-ICERTRPD  RESET 'READY TO RECVE PENDING'  R4 23257000
         B     MVDX0819            SEND SENSE X'0819', RTR NOT REQD  R4 23257500
         SPACE 1                                                     R4 23258000
MVDFCNCL NI    SHWRCVST,255-ICEINCHN  SHOW PURGED CHAIN ENDED        R4 23258500
         NI    SHWFLAGS,255-ICEBBPND-ICEEBPND-ICECHDIR  CLEAR PENDS. R4 23259000
         OI    SHWRCVST,ICECNCEL   SHOW CANCEL RECEIVED              R4 23259500
MVDFCLUS B     MVDCHNOP            BRANCH TO BRACKET S.M. TO HANDLE    C23260000
                                   BB/EB/CD ON 'CANCEL'/'LUS' REQST  R4 23260500
MVDFCLU2 CLC   RPLFDBK2(2),=X'0001'  TEST 'LUSTAT' SENSE CODE  @OZ24835 23261000
         BNER  ML                  RETURN IF NOT 'COMPONENT AVAIL.'  R4 23261500
         NI    ICESTAT,255-ICEHOLD ELSE ALLOW OUTBD ALLOC BANNED BY  R4 23262000
         BR    ML                   YIELDING CONTENTION, AND RETURN  R4 23262500
         SPACE 1                                                     R4 23263000
MVDFCNC2 LA    R1,ICERCVST         POINT TO RECEIVE STATUS BYTE     R41 23263500
         TM    ICESTAT,ICEALLOC    TEST FOR ALLOCATED SESSION       R41 23263600
         BZ    MVRSTATC            BR IF NO, RESCIND PENDING FMH    R41 23263700
         OI    DCTFLAGS,DCTDELET+DCTRSTRT  TELL PRCSR TO CANCEL JOB R41 23264000
         B     MVRSTATC            GO RESCIND PENDING FMH IF ANY     R4 23264500
         EJECT                                                       R4 23265000
*                             FM HEADERS EXHAUSTED OR NONE PRESENT   R4 23265500
         SPACE 1                                                     R4 23266000
MVDNOFMH TM    SHWRCVST,ICEINSTR   TEST RECEIVE STATUS               R4 23266500
         BO    MVDSTATE            GO UPDATE STATE IF IN STREAM      R4 23267000
         TM    SHWRCVST,ICENOFMH   TEST RECEIVE STATUS AGAIN         R4 23267500
         BNO   MVDSTATE            GO UPDATE STATE IF FMH PENDING    R4 23268000
         TM    RPLCHN,RPLONLY      TEST R.U. CHAIN POSITION          R4 23268500
         BZ    MVDX0811            FAIL IF CNSLE RU NOT ONLY IN CHN    C23269000
                                    (SENSE X'0811', BREAK)           R4 23269500
         LTR   R1,R1               TEST R.U. LENGTH                  R4 23270000
         BZ    MVDSTATE            DON'T PASS TO R.C.P. IF NO DATA   R4 23270500
         NI    SHWRCVST,255-ICEDSTRM  MASK OUT DATA STRM BITS  @OZ29180 23271000
         OI    SHWRCVST,ICEODS     SIMUATE 'ODS' FMH PENDING   @OZ29180 23271500
         SPACE 1                                                     R4 23272000
*                             UPDATE ICE STATE FROM WORK AREA        R4 23272500
         SPACE 1                                                     R4 23273000
MVDSTATE L     R0,SHWSTAT          UPDATE                            R4 23273500
         ST    R0,ICESTAT           ICE STATE                        R4 23274000
         TM    RPLCHN,RPLFIRST+RPLONLY  TEST R.U. CHAIN POSITION     R4 23274500
         BZ    MVDALNOP            HOLD FMH STATE IF NOT 1ST IN CHN  R4 23275000
         SLR   R15,R15             CLEAR REG FOR INDEX               R4 23275500
         IC    R15,ICERCVST        GET FMH PENDING BITS              R4 23276000
         SRL   R15,4                FROM RECEIVE STATUS        @OZ29180 23276500
         IC    R15,*+8(R15)        USE AS INDEX INTO OFFSET TABLE    R4 23277000
         B     MVDAL(R15)          BRANCH INTO CORRECT ROUTINE       R4 23277500
         SPACE 1                                                     R4 23278000
         DC    AL1(MVDALRAL-MVDAL) 'RESUME' - REALLOCATE             R4 23278500
         DC    AL1(MVDALNOP-MVDAL) 'END (NORMAL)' - NO ACTION        R4 23279000
         DC    AL1(MVDALIMS-MVDAL) 'BEGIN' - ALLOCATE                R4 23279500
         DC    AL1(MVDALIMS-MVDAL) 'ONLY CHAIN' - ALLOCATE           R4 23280000
         DC    AL1(MVDALNOP-MVDAL) 'SUSPEND' - NO ACTION             R4 23280500
         DC    AL1(MVDALNOP-MVDAL) 'END (ABORT)' - NO ACTION         R4 23281000
         DC    AL1(MVDALCDS-MVDAL) 'CONTINUE' - NO ACTION      @OZ29180 23281100
         DC    AL1(MVDALER-MVDAL)  INVALID STATE               @OZ29180 23281200
         DC    AL1(MVDALER-MVDAL)  INVALID STATE               @OZ29180 23281300
         DC    AL1(MVDALER-MVDAL)  INVALID STATE               @OZ29180 23281400
         DC    AL1(MVDALER-MVDAL)  INVALID STATE               @OZ29180 23281500
         DC    AL1(MVDALER-MVDAL)  INVALID STATE               @OZ29180 23281600
         DC    AL1(MVDALER-MVDAL)  INVALID STATE               @OZ29180 23281700
         DC    AL1(MVDALER-MVDAL)  INVALID STATE               @OZ29180 23281800
         DC    AL1(MVDALRLS-MVDAL) OUT OF STRM, NO T1 FMH, ONLY@OZ29180C23281900
                                    IN CHAIN, DATA LEN 0 - RLSE BUF  R4 23282000
         DC    AL1(MVDALNOP-MVDAL) IN STREAM, NO TY1 FMH - NO ACTION R4 23282500
         EJECT                                                      R41 23283000
MVDAL    DS    0H                  ORIGIN FOR BRANCH TABLE OFFSETS   R4 23283500
         SPACE 1                                                     R4 23284000
MVDALER  B     R01                 INVALID STATE DETECTED      @OZ29180 23284100
         SPACE 1                                               @OZ29180 23284150
MVDALCDS NI    MDCTFMT,255-DCTPPRES-DCTPCPCT  TURN COMPRESSION @OZ29180 23284200
*                                  AND COMPACTION FLGS OFF     @OZ29180 23284250
         B     MVDALNOP            LINK BUFFER TO RDCT         @OZ29180 23284300
         SPACE 1                                               @OZ29180 23284350
MVDALRLS LA    R15,MVFRESPD        LOAD ADDR OF BUF DISPOSAL ROUTINE R4 23284500
         B     MVRSTATI            RELEASE RESPONSE & UPDATE STATE   R4 23285000
         SPACE 1                                                     R4 23285500
         USING DCTDSECT,R15        USE TEMPORARY RDCT ADDRESSABILITY R4 23286000
MVDALRAL L     R15,SHWRDCT         RELOAD ADDRESS OF PRECEDING RDCT  R4 23286500
         L     MDCT,MDCTSDCT       GET ADDRESS OF DESIRED RDCT       R4 23287000
         DROP  R15                 DISCARD TEMP RDCT ADDRESSABILITY  R4 23287500
         NI    MDCTFMT,255-DCTPPRES-DCTPCPCT  RESET COMPRESSION BITS R4 23288000
         LTR   MDCT,MDCT           TEST REMOTE DCT IMPLIED SUSPD BIT R4 23288500
         BNM   MVDRSUMO            LEAVE 'RDS PENDG' IF NOT IMPLIED  R4 23289000
MVDRSUMI OI    ICERCVST,ICEINSTR   ELSE GO IN STREAM AUTOMATICALLY   R4 23289500
         SPACE 1                                                     R4 23290000
MVDRSUMO L     R0,MDCTSDCT                CHAIN REMAINDER OF SUSPEND R4 23290500
         ST    R0,MDCTSDCT-DCTDSECT(,R15)  QUEUE TO PREVIOUS RDCT    R4 23291000
         XC    MDCTSDCT,MDCTSDCT   CLEAR SUSPENDED DCT CHAIN POINTER R4 23291500
         B     MVDALRCN            GO RECONNECT ICE AND RDCT         R4 23292000
         SPACE 3                                                    R41 23292500
*                             PASS R.U. TO CONSOLE PROCESSOR         R4 23293000
         SPACE 1                                                     R4 23293500
MVDCNSLE OI    ICESTAT,ICEALLOC    MARK ICE ALLOCATED                R4 23294000
         LA    R15,$MCONMSG        PREPARE TO SCAN CONSOLE QUEUE     R4 23294500
         B     MVDCNSL2              TO ADD NEW BUFFER AT END        R4 23295000
         SPACE 1                                                    R41 23295200
MVDCNSL1 LA    R15,TPBLCCAD-BUFDSECT(,R1)   ASSUME BSC BUFFER CHAIN  R4 23295500
         TM    BUFTYPE-BUFDSECT(R1),BUFTP+BUFIOB TEST ASSUMPTN      R41 23296000
         BO    MVDCNSL2            VALID, SKIP NEXT                 R41 23296500
         LA    R15,RPLNEXT-RPLDSECT(,R1)    USE SNA CHAIN FIELD      R4 23297000
MVDCNSL2 L     R1,0(,R15)          LOCATE NEXT BUFFER                R4 23297500
         LTR   R1,R1               TEST FOR CHAIN END                R4 23298000
         BNZ   MVDCNSL1            NO, CONTINUE SCANNING             R4 23298500
         ST    MBUF,0(,R15)        ADD NEW BUFFER AFTER LAST         R4 23299000
         L     R15,$MCONPCE        GET ADDRESS OF REMOTE CONSOLE PCE R4 23299500
         LR    MBUF,R1             MAKE BUFFER ADDRESS UNAVAILABLE   R4 23300000
         B     MVDALPST            REJOIN COMMON ALLOCATION LOGIC    R4 23300500
         EJECT                                                      R41 23301000
*                             ALLOCATE REMOTE DCT AND ICE            R4 23301500
         SPACE 1                                                     R4 23302000
MVDALIMS TM    SHWSTAT,ICEALLOC    TEST SESSION STATUS               R4 23302500
         BZ    SKIP830             BR IF (AS EXPECTED) NOT ALLOCATED R4 23303000
         L     MDCT,PCER1          ELSE GET RDCT FOR IMPLIED SUSPEND R4 23303500
         LA    R1,ICERCVST         POINT TO STREAM RECEIVE STATUS    R4 23304000
         B     MVRSTIMP            GO SUSPND. RETRN = MVDALLOC BELOW R4 23304500
         SPACE 1                                                    R41 23304800
SKIP830  L     MDCT,ICERDCT        SEE IF PRE-ALLOCATED              R4 23305000
         LTR   MDCT,MDCT            REMOTE DCT IS PRESENT            R4 23305500
         BZ    MVDALLOC            BRANCH IF NOT                     R4 23306000
         OI    MDCTSTAT,DCTABORT   ELSE CAUSE OUTBOUND OPEN FAILURE  R4 23306500
         SLR   R0,R0               CLEAR PRE-                        R4 23307000
         ST    R0,MDCTICE           ALLOCATION                       R4 23307500
         ST    R0,ICERDCT            POINTERS                        R4 23308000
         SPACE 1                                                     R4 23308500
MVDALLOC L     MDCT,SHWRDCT        LOAD ADDR OF DESIRED RDCT         R4 23309000
         LTR   MDCT,MDCT           TEST ADDR OF DESIRED RDCT         R4 23309500
         BZ    MVDCNSLE            RDCT ADDR NOT AVAIL = RMT CONSOLE R4 23310000
         NI    DCTSTAT,255-DCTHOLD SHOW RDCT NO LONGER HELD          R4 23310500
         NI    MDCTFMT,255-DCTPPRES-DCTPCPCT  RESET COMPRESSION BITS R4 23311500
         NI    MDCTFMT,255-DCTPPRES  RESET COMPRESSION BIT           R4 23312500
         ST    MICE,MDCTICE        CONNECT ICE TO REMOTE DCT         R4 23313500
         SPACE 1                                                     R4 23314000
MVDALRCN LA    MDCT,0(,MDCT)       CLEAR SUSPEND FLAGS IF ANY        R4 23314500
         ST    MDCT,ICERDCT        RECONNECT RDCT TO ICE             R4 23315000
         OI    ICESTAT,ICEALLOC    MARK ICE ALLOCATED                R4 23315500
         MVI   ICEPUTCH,0          RESET NUMBER OF PUTS IN CHAIN     R4 23316000
         L     R15,DCTPCE          GET PCE ADDRESS TO POST           R4 23316500
         NI    MDCTSTAT,255-DCTPSUSP-DCTEOF  RESET SUSP & EOF FLAGS  R4 23317000
MVDALPST $POST (R15),WORK          FIRE BEGINNING/RESUMING PROCESSOR R4 23317500
         LTR   MBUF,MBUF           TEST BUF AD TO TELL WHO CALLER IS R4 23318000
         BZ    MVREQRET            NO BUF = MVREQSTR CALL, SO RETURN R4 23318500
         EJECT                                                       R4 23319000
*                             LINK REQUESTED BUFFER TO REMOTE DCT    R4 23319500
         SPACE 1                                                     R4 23320000
MVDALNOP NI    MDCTFMT,255-DCTPALTC  RESET ALTERNATE CODE FLAG       R4 23322500
         OC    MDCTFMT,SHWTFMTM    MERGE DCT FMT MASK INTO MDCTFMT   R4 23323500
         L     R15,DCTBUFAD        TEST IF BUFFER                    R4 23324000
         LTR   R15,R15              ON REMOTE DCT                    R4 23324500
         BZ    SKIP840             BRANCH IF NOT                     R4 23325000
         ST    MBUF,RPLNEXT-RPLDSECT(,R15)  SET UP RPL CHAIN FOR     R4 23325500
         LR    MBUF,R15                      'GET' 2-BUFFER CASE     R4 23326000
SKIP840  ST    MBUF,DCTBUFAD       CONNECT BUFFER TO NEW REMOTE DCT  R4 23326500
         SPACE 2                                                     R4 23327000
*                                                                    R4 23327500
*                             RETURN, OR WAIT IF SUSPEND IN PROGRESS R4 23328000
*                                                                    R4 23328500
         SPACE 1                                                     R4 23329000
MVREQRET TM    ICESDCT,ICESUSPD    TEST SUSPEND IN PROGRESS FLAG     R4 23329500
         BZR   ML                  RETURN IF NOT SUSPENDING          R4 23330000
         NI    ICESDCT,255-ICESUSPD  RESET SUSPEND IN PROGR FLAG     R4 23330500
         CL    SAVE,$MLLMPCE       TEST CALLER'S PCE                 R4 23331000
         BER   ML                  IF LINE MANAGER DON'T WAIT HERE   R4 23331500
         L     MDCT,ICESDCT        RETRIEVE SUSPENDING RDCT ADDRESS  R4 23332000
         SPACE 1                                                     R4 23332500
MVREQUME ST    ML,DCTEWF           SAVE 1ST LEVEL RETURN ADDRESS     R4 23333000
        $WAIT  WORK,SAVE=NO        WAIT ON RESUME POST FROM MVDALRCN R4 23333500
        $WAIT  ABIT,SAVE=NO        GIVE COMMANDS CHANCE TO PERCOLATE R4 23334000
        $RESTORE                   RESTORE ACCESS METHOD REGISTERS   R4 23334500
         TM    MDCTSEL,DCTPOUTB    TEST DIRECTION BIT                R4 23335000
         BZ    SKIP850             SKIP EARLY OP CMD CHECK IF INBND  R4 23335500
         LTR   MBASE1,MBASE1       TEST TYPE OF $EXTP CALL           R4 23336000
         BM    SKIP850             BR IF MAY NOT BE FLUSHED (CLOSE)  R4 23336500
         TM    DCTFLAGS,DCTDELET+DCTRSTRT  $C OR $E OR $I ENTERED    R4 23337000
         BNZ   MVTAMXAB            RETURN IMMED IF OPERATOR COMMAND  R4 23337500
SKIP850  L     ML,DCTEWF           RETRIEVE 1ST LEVEL RETURN ADDRESS R4 23338000
         TM    MDCTSTAT,DCTPSUSP   TEST IF POST WAS FROM RESUME      R4 23338500
         BO    MVREQUME            REINSTATE $WAIT IF NOT            R4 23339000
         TM    MDCTSEL,DCTPOUTB    TEST DIRECTION BIT AGAIN          R4 23339500
         BOR   ML                  RETURN IF OUTBOUND - CALLER KNOWS   C23340000
                                    IF 'RESUME D.S.' HEADER REQUIRED R4 23340500
         TM    ICERCVST,ICENOFMH   TEST STREAM RECEIVE STATUS        R4 23341000
         BO    MVREQBUF  IF NO FMH PENDING, MUST FINISH THE MVREQBUF   C23341500
                          CALL THAT WAS INTERRUPTED BY IMPLIED SUSPD R4 23342000
         BR    ML        TO REACH HERE MVRELBUF MUST BE CALLED WITH    C23342500
                          'SDS' PENDING. IN THIS ONE CASE, MVRELBUF    C23343000
                           RTRNS WITH DCTBUFAD NOT 0 (PTS TO 'RDS')  R4 23343500
         EJECT                                                       R4 23344000
*                                                                    R4 23344500
*                             RELEASE BUFFER TO SNA HEADER SERVICES  R4 23345000
*                                                                    R4 23345500
         SPACE 1                                                     R4 23346000
MVRELBUF LA    R15,MVFRELBF        LOAD ADDR OF BUF DISPOSAL ROUTINE R4 23346500
         TM    ICERCVST,ICEINCHN   TEST RECEIVE STATUS               R4 23347000
         BOR   R15                 JUST FREE BUFFER IF NOT CHAIN END R4 23347500
         TM    ICERCVST,ICEINSTR   TEST RECEIVE STATUS               R4 23348000
         BO    MVRSTATI            GO FREE BUFFER IF IN STREAM       R4 23348500
         TM    ICERCVST,ICENMEND   TEST RECEIVE STATE FMH PEND @OZ29180 23349000
         BZ    MVRSTATI            FREE BUFFER IF RDS/BDS/SDS/NO FMH R4 23349500
         TM    MDCTSTAT,DCTEOF     IF EDS/ODS/ADS TEST END-OF-FILE   R4 23350000
         BO    MVRSTATI            FREE IF END-OF-FILE ALREADY SET   R4 23350500
         OI    MDCTSTAT,DCTEOF     SET END OF FILE FOR EDS/ODS/ADS   R4 23351000
         BR    ML                  RETURN TO 'GET' WITHOUT FREEING   R4 23351500
         SPACE 2                                                    R41 23353000
         LTORG                                                       R4 23355500
         SPACE 3                                                     R4 23356000
         DROP  MBASE1,MBASE2,MBASE3  DROP RTAM ROUTINES...          R41 23356500
         DROP  BASE2              ...AND LINE MANAGER ADDRESSABILTY R41 23356600
         TITLE 'HASP SNA REMOTE TERMINAL R.U. COMPOSER WORK AREA'    R4 23357000
IFGRPL   DSECT                                                       R4 23357500
         ORG   RPLBCHN                                               R4 23358000
         DS    0D                  ASSURE DBLE WRD BOUNDARY    @OZ25087 23358200
SCWKOMSA DS    0CL(11*4)      COMPOSER SAVE AREA- MUST BE COPIED     R4 23358500
SCWCCWA  DS    0CL5                SCS MODEL CARRIAGE CONTROL STRING R4 23359000
SCWTRN   DS    CL2                 SCS TRANSPARENCY CODE AND COUNT   R4 23359500
SCWSEL   DS    CL2                 SCS CHANNEL SKIP ('SEL') CODE     R4 23360000
SCWCR    DS    CL1                 SCS CARRIAGE RETURN CODE          R4 23360500
SCWODDM  DS    CL1                 SAVED ODD MASTER IN COMPACTION   R41C23361000
                                    16-MASTER SPECIAL OVERFLOW CASE R41 23361100
SCWFLAGS DS    BL1                 COMPOSER FLAGS                    R4 23361500
SCWLCCC  DS    XL1                 LAST CHANNEL COMMAND CODE         R4 23362000
SCWINPT  DS    F                   SAVEWORD, INPUT STRING ADDRESS    R4 23362500
SCWLINPT DS    F                   SAVEWORD, INPUT STRING LENGTH     R4 23363000
         ORG   SCWINPT                                               R4 23363500
SCWSVFWA DS    0CL17               'SET VERTICAL FORMAT' WORK AREA   R4 23364000
         DS    CL2                 'FMT B' SCS CODE                  R4 23364500
SVFCOUNT DS    CL1                 # BYTES REMAINING INCL.THIS ONE   R4 23365000
SVFMAXPL DS    CL1                 MAX PRINT LINE                    R4 23365500
SVFTOPM  DS    CL1                 TOP MARGIN  (CHANNEL STOP 1)      R4 23366000
SVFBOTM  DS    0CL1                BOTTOM MARGIN                     R4 23366500
SVFTABWK DS    CL12                CHANNEL STOPS 1 THROUGH 12        R4 23367000
         DS    CL3                 RESERVED                          R4 23367500
         SPACE 1                                                     R4 23368000
SCWTEND  DS    0F                  TEMPORARY SAVEWORD, 'REND' VALUE  R4 23368500
SCWSRCEB DS    0F                  BEGIN ADDR, DATA TO MOVE INTO SCB R4 23369000
SCWSRCE  DS    F                   SAVEWORD, CURRENT SOURCE STR ADDR R4 23369500
SCWSCBA  DS    0F                  ADDRESS OF INTERRUPTED SCB        R4 23370500
SCWLSRCE DS    F                   SAVEWORD, LENGTH OF SOURCE STRING R4 23371000
SCWFEED  DS    F                   SAVEWORD, FEEDER ROUTINE RETURN   R4 23371500
SCWTSINK DS    0F                  TEMPORARY SAVEWORD, 'RSINK'      R41 23371800
SCWNUM   DS    F                   SAVEWORD, EMISSION DUPLIC. FACTOR R4 23372000
*                             END OF PORTION WHICH MUST BE COPIED    R4 23372500
SCWPLAN  DS    F                   SAVEWORD, PLANNER STATE ENTRY PT. R4 23373000
SCWCPARS DS    F                   SAVEWORD, COMPACTION RACE STATE  R41 23373100
SCWSCBL  DS    F                   SAVEWORD, UNUSED SCB CAPACITY     R4 23373500
SCWSCBNC DS    F                   SAVEWORD, STARTING SCB CAPACITY  R41 23373700
SCWRETRN DS    F                   SAVEWORD, COMPOSER RETURN ADDRESS R4 23374000
SCWSCBNA DS    0F                  SAVEWORD, OVERLAP NC SCB ADDRESS R41 23374100
SCWSCBCA DS    F                   SAVEWORD, COMPACTION SCB ADDRESS R41 23374200
SCWSCBNS DS    0F                  SAVEWORD, NC SPACE AT RACE BEGIN R41 23374400
SCWSCBCE DS    F                   SAVEWORD, FULL COMPACT SCB END   R41 23374500
SCWSAV13 DS    F                   SAVEWORD, POINTER TO PCE          R4 23375000
SCWRUEND DS    F                   SAVEWORD, ADDRESS OF R.U. END    R41 23375100
         EJECT                                                      R41 23375500
         SPACE 5                                                    R41 23375600
*                                                                    R4 23376000
*                             SCWFLAGS - SCB COMPOSER FLAGS          R4 23376500
*                                                                    R4 23377000
         SPACE 1                                                     R4 23377500
SCWMORE  EQU   B'01000000'         MORE DATA REMAINS TO BE COMPOSED  R4 23378500
SCWODDMF EQU   B'00100000'         EMITTER BACKED UP BY ODD MASTER  R41 23378800
SCWTRNSP EQU   B'00010000'         TRANSPARENCY CHECK REQUIRED       R4 23379000
SCWNSPAN EQU   B'00001000'         FORBID CROSS-R.U. RECORD SPANNING R4 23379500
SCWCTRL  EQU   B'00000100'         CONTROL (NOT TEXT) SOURCE STRING  R4 23380000
SCWFULL  EQU   B'00000010'         BUFFER READY TO SEND              R4 23380500
SCWLAST  EQU   B'00000001'         LAST EMISSION PASSED TO PLANNER   R4 23381000
         SPACE 5                                                    R41 23381100
*                                                                   R41 23381200
*                             EQUATES FOR COMPACTION RACING STATUS  R41 23381300
*                                                                   R41 23381400
         SPACE 1                                                    R41 23381500
SCWCANOT EQU   0                   COMPACTION NOT COMPETING         R41 23381600
SCWBHIND EQU   1                   COMPACTION BEHIND BY 1/2 BYTE    R41 23381700
SCWSTAND EQU   2                   COMPACTION IN STANDOFF           R41 23381800
SCWAHEAD EQU   3                   COMPACTION AHEAD  BY 1/2 BYTE    R41 23381900
SCWNPCOS EQU   2                   NON-PRIME DUP COST = 2 HALF-BYTESR41C23382000
                                    MORE THAN PRIME DUP COST        R41 23382100
         TITLE 'RTAM     HASP SNA GET WORK AREA'                    R41 23382200
         ORG   RPLBCHN                                              R41 23382300
SGWSTRT  DS    0X                  START OF SNA GET WORK AREA       R41 23382400
         DS    X                   INBND ALLOC SAVES MDCTFMT HERE   R41 23382500
SGWFLAGS DS    BL1                 FLAGS FOR SNA GET                R41 23382600
         DS    2X                  RESERVED                         R41 23382700
         SPACE 1                                                    R41 23382800
SGWRSAVE DS    0F                  STATUS REGISTER SAVE AREA        R41 23382900
SGWLINK  DS    F                   R14  LINK                        R41 23383000
SGWRPP   DS    F                   R15  RPP                         R41 23383100
SGWRTC   DS    F                   R0   RTC                         R41 23383200
         DS    F                   R1                               R41 23383300
         DS    F                   R2                               R41 23383400
SGWRSC   DS    F                   R3   RSC                         R41 23383500
SGWMBUF  DS    F                   R4   MBUF                        R41 23383600
SGWRDP   DS    F                   R5   RDP                         R41 23383700
SGWRPC   DS    F                   R6   RPC                         R41 23383800
         DS    F                   R7   MBASE1                      R41 23383900
         DS    F                   R8   MBASE2                      R41 23384000
         DS    F                   R9                               R41 23384100
         DS    F                   R10  JCT                         R41 23384200
         DS    F                   R11  BASE1                       R41 23384300
SGWRDC   DS    F                   R12  RDC                         R41 23384400
         SPACE 1                                                    R41 23384500
SGWRUA   DS    F                   CURRENT POINTER IN RU            R41 23384600
SGWRUE   DS    F                   END OF RU (OR PORTION OF RU)     R41 23384700
SGWEND   DS    0X                  END OF SNA GET WORK AREA         R41 23384800
         SPACE 1                                                    R41 23384900
*                             SGWFLAGS  --  BIT DEFINITIONS         R41 23385000
         SPACE 1                                                    R41 23385100
SGWNFRST EQU   X'80'               NOT THE FIRST GET IN THIS CHAIN  R41 23385200
SGWXEOR  EQU   X'40'               AN EXTRA EOR MAY OCCUR           R41 23385300
SGWDUP   EQU   X'20'               RDP POINTS TO A DUPLICATE FIELD  R41 23385400
SGWTRN   EQU   X'10'               SCS SCAN IS IN TRANSPARENT STRINGR41 23385500
         TITLE 'RTAM     HASP SNA HEADER DECODE WORK AREA'          R41 23385600
*                                                                    R4 23396500
*                             SNA HEADER DECODE ROUTINE WORK AREA    R4 23397000
*                                                                    R4 23397500
         SPACE 1                                                     R4 23398000
         ORG   RPLBCHN                                               R4 23398500
SHWDCTWA DS    0D             GROUP NAME FOR NEXT 8 BYTES            R4 23399000
SHWTFMTM DS    BL1                 ATTRIB MASK TO MERGE WITH MDCTFMT R4 23399500
         DS    BL1                 RESERVED FOR 'GET' DECOMPR FLAGS  R4 23400000
SHWCNTRL DS    BL1                 D.F.C. TYPE INDEX (0 = DATA)      R4 23400500
         DS    BL1                 RESERVED                          R4 23401000
SHWRDCT  DS    F                   REMOTE DCT ALLOCATION CANDIDATE   R4 23401500
SHWICEWA DS    0F             GROUP NAME FOR NEXT 4 BYTES            R4 23402000
SHWSTAT  DS    BL1                 COPY OF ICESTAT                   R4 23402500
SHWFLAGS DS    BL1                 COPY OF ICEFLAGS                  R4 23403000
SHWRCVST DS    BL1                 COPY OF ICERCVST                  R4 23403500
         DS    BL1                 RESERVED                          R4 23404000
         SPACE 3                                                     R4 23404500
HASPRTAM CSECT                                                       R4 23405000
         TITLE 'HASP SNA REMOTE TERMINAL CONSTANTS/TABLES'           R4 23405500
*                                                                    R4 23406000
*                             SNA FUNCTION MGMT HEADER PROTOTYPES    R4 23406500
*                                                                    R4 23407000
         SPACE 3                                                     R4 23407500
MFMHA    DC    AL1(MFMHAL)         LENGTH                            R4 23408000
         DC    AL1(FMHTYPE1)       TYPE                              R4 23408500
         DC    AL1(*-*)            SELECT BYTE - SET FROM RDCT       R4 23409000
         DC    AL1(0)              SRI, DEMAND SELECT, 4-7 RES @OZ29180 23409500
         DC    AL1(*-*)            PROPERTIES - SET FROM REGISTER R1 R4 23410000
         DC    AL1(0)              RECORD LENGTH               @OZ29180 23410500
MFMHAL   EQU   *-MFMHA             DEFINE MODEL FMH LENGTH           R4 23411000
         SPACE 2                                                    R41 23411100
MFMHC    DC    AL1(*-*)            LENGTH - COMPUTED FROM # MASTERS R41 23411200
         DC    AL1(FMHTYPE3)       TYPE                             R41 23411300
         DC    AL1(FMHCPT)         CODE = DEFINE COMPACTION TABLE   R41 23411400
         DC    AL1(*-*)            NUMBER OF MASTER CHARACTERS      R41 23411500
MFMHCL   EQU   *-MFMHC             DEFINE MODEL FMH LENGTH          R41 23411600
         SPACE 5                                                     R4 23411700
MVPASCII DS    0D             EBCDIC TO ASCII TRANSLATE TABLE (SNA)  R4 23412000
         SPACE 1                                                     R4 23412500
*                X0X1X2X3X4X5X6X7X8X9XAXBXCXDXEXF                    R4 23413000
         SPACE 1                                                     R4 23413500
         DC    X'0001020313091A7F1A1A1A0B0C0D0E0F'  0X               R4 23414000
         DC    X'101A1A1A1114081A18191A1A1C1D1E1F'  1X               R4 23414500
         DC    X'1A1A1A1A120A171B1A1A1A1A1A050607'  2X               R4 23415000
         DC    X'1A1A161A1A1A1A041A1A1A1A1A151A1A'  3X               R4 23415500
         DC    X'201A1A1A1A1A1A1A1A1A5B2E3C282B21'  4X               R4 23416000
         DC    X'261A1A1A1A1A1A1A1A1A5D242A293B5E'  5X               R4 23416500
         DC    X'2D2F1A1A1A1A1A1A1A1A7C2C255F3E3F'  6X               R4 23417000
         DC    X'1A1A1A1A1A1A1A1A1A603A2340273D22'  7X               R4 23417500
         DC    X'1A6162636465666768691A1A1A1A1A1A'  8X               R4 23418000
         DC    X'1A6A6B6C6D6E6F7071721A1A1A1A1A1A'  9X               R4 23418500
         DC    X'1A7E737475767778797A1A1A1A1A1A1A'  AX               R4 23419000
         DC    X'1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A'  BX               R4 23419500
         DC    X'7B4142434445464748491A1A1A1A1A1A'  CX               R4 23420000
         DC    X'7D4A4B4C4D4E4F5051521A1A1A1A1A1A'  DX               R4 23420500
         DC    X'5C1A535455565758595A1A1A1A1A1A1A'  EX               R4 23421000
         DC    X'303132333435363738391A1A1A1A1A1A'  FX               R4 23421500
         TITLE 'HASP LINE MANAGER -- GENERAL EVENT HANDLER'          R4 23422000
         USING BUFDSECT,MBUF       ESTABLISH BUFFER ADDRESSABILITY   R4 23422500
         SPACE 1                                                     R4 23423000
HASPMLLM $ENTRY BASE=BASE2,ENTRY=NO HASP LINE MANAGER                R4 23423500
         SPACE 2                                                    R41 23423600
*                                                                   R41 23423700
*        LINE MANAGER -- PROCESSOR INITIALIZATION                   R41 23423800
*                                                                   R41 23423900
         SPACE 1                                                    R41 23424000
         ST    SAVE,MSTQE+IPOST    SET TQE POST ADDRESS             R41 23424100
         LA    R14,MSCANTBL-MSCNTSIZ SETUP FOR                      R41 23424200
         ST    R14,MSCANADR        LINE MANAGER SCANS               R41 23424300
         MVI   MSCANREQ,MSCNUNIT+MSCNRAT REQUEST INITIAL SCANS      R41 23424500
         EJECT                                                      R41 23425100
*                                                                   R41 23425200
*        LINE MANAGER -- SCAN / EVENT SETUP                         R41 23425300
*                                                                   R41 23425400
         SPACE 2                                                    R41 23425500
*        SET SCAN INDICATORS                                        R41 23425600
         SPACE 1                                                    R41 23425700
MSEARCH  DS    0H                  SEARCH FOR REQUIRED ACTIONS      R41 23425800
         L     R1,$SSVT            GET SUBSYSTEM VECTOR TABLE ADDR   R4 23426000
         USING $SVDSECT,R1         TEMPORARY SSVT ADDRESSABILITY     R4 23426500
         MVI   $SVMLLM,0           ALLOW $$POSTING                   R4 23427000
         DROP  R1                  RELEASE TEMPORARY SSVT BASE       R4 23427500
         NI    MHASPECF+$EWBPOST,255-$EWFPOST RESET IMMED POST REQ   R4 23428000
         SPACE 1                                                     R4 23428500
         MVC   MSCANIND(2),MSCANREQ GET REQ SCAN AND EVENT INDIC     R4 23429000
         XC    MSCANREQ(2),MSCANREQ RESET REQUEST INDICATOR FIELDS   R4 23429500
         SPACE 2                                                    R41 23430000
*        INDICATE BASIC TIMER EVENT  ( 1 SECOND INTERVAL )          R41 23430100
         SPACE 1                                                    R41 23430200
         TM    MSTQE+IPOST,X'80'   CHECK FOR TIMER EXPIRED           R4 23430500
         BZ    MNOTIME             BRANCH IF NO TIMER INTERRUPT     R41 23431000
         MVI   MSTQE+IPOST,X'00'   RESET TIMER POST INDICATOR        R4 23431500
         OI    MSCANIND,MSCNBACT+MSCNSLNE REQ BSC AND SNA DCT SCAN   R4 23432000
         OI    MEVNTIND,MEVNTIME   INDICATE TIMER EVENT OCCURED      R4 23432500
         SPACE 2                                                    R41 23433000
*        INDICATE DISCONNECT INTERVAL EVENT ( 32 SECOND INTERVAL )  R41 23433100
         SPACE 1                                                    R41 23433200
MNOTIME  STCK  MCLOCK              GET TIME STAMP OF THIS DISPATCH  R41 23433500
         CLC   MDISTIME,MCLOCK     CHECK DISCONNECT LOOK INTERVAL    R4 23434000
         BH    MJOBSRCH            BRANCH IF INTERV NOT YET EXPIRED  R4 23434500
         LA    R1,32               SET INTERVAL FOR NEXT             R4 23435000
         AL    R1,MCLOCK            DISCONNECT LOOK IN               R4 23435500
         ST    R1,MDISTIME           APPROXIMATELY 32 SECONDS        R4 23436000
         OI    MSCANIND,MSCNBACT+MSCNSLNE+MSCNRAT  REQUIRED SCANS   R41 23436500
         OI    MEVNTIND,MEVNDISC   INDICATE DISCONNECT EVENT         R4 23437000
         SPACE 2                                                     R4 23437500
*        INIDCATE JOB POST EVENT                                    R41 23437600
         SPACE 1                                                    R41 23437700
MJOBSRCH DS    0H                  CHECK JOB POST EVENTS             R4 23438000
         TM    MHASPECF+$EWBJOT,$EWFJOT TEST MASTER EVENT CONTROL    R4 23438500
         BO    MQSTEST             BRANCH IF NO JOB POST       @OZ25901 23439000
         OI    MSCANIND,MSCNSLNE+MSCNBACT+MSCNRAT  NEEDED SCANS     R41 23443000
         OI    MEVNTIND,MEVNPJOB   SHOW JOB POST EVENT OCCURED       R4 23443500
         OI    MHASPECF+$EWBJOT,$EWFJOT SET MASTER EVENT CONTROL     R4 23444000
         EJECT                                                 @OZ25901 23444010
         SPACE 1                                               @OZ25901 23444020
*        INDICATE SHARED QUEUE OWNED EVENT                     @OZ25901 23444030
         SPACE 1                                               @OZ25901 23444040
MQSTEST $QSUSE TYPE=TEST           TEST STATUS OF SHARED QS    @OZ25901 23444050
         BNZ   MSCANEXT            BR IF NOT OWNED             @OZ25901 23444060
         OI    MEVNTIND,MEVNCKPT   ELSE INDICATE CHKPT OWNED   @OZ25901 23444070
         EJECT                                                      R41 23444500
*                                                                   R41 23445100
*        LINE MANAGER MAIN SCAN DRIVER                              R41 23445200
*                                                                   R41 23445300
         SPACE 2                                                    R41 23445400
MSCANEXT L     R14,MSCANADR        PICK UP CURRENT AND...           R41 23445500
         LA    R15,MSCANEND        ...LAST SCAN TABLE ENTRIES       R41 23445600
         USING MSCANTAB,R14        SHOW SCAN TABLE ADDRESSABLE      R41 23445700
         SPACE 1                                                    R41 23445800
MSCANXT1 LA    R14,MSCNEXT         BUMP TO NEXT SCAN TABLE ENTRY    R41 23445900
         CLR   R14,R15             TEST FOR END OF TABLE            R41 23446000
         BE    MSCANXIT            BRANCH IF YES, SCAN EXIT         R41 23446100
         SPACE 1                                                    R41 23446200
         SLR   R1,R1               GET SCAN CRITERIA FROM           R41 23446300
         IC    R1,MSCNID            SCAN TABLE ENTRY                R41 23446400
         LTR   R1,R1               TEST SCAN CRITERIA               R41 23446500
         BZ    MSCANEVN            BRANCH IF NONE, TRY EVENT   @OZ25901 23446600
         EX    R1,MSCANTM          TEST SCAN REQUIREMENTS           R41 23446700
         BNO   MSCANXT1            BRANCH IF NOT REQUIRED, NXT SCAN R41 23446800
         SPACE 1                                               @OZ25901 23446810
MSCANEVN IC    R1,MEVNTID          GET EVENT CRITERIA          @OZ25901 23446820
         LTR   R1,R1                FROM TABLE ENTRY           @OZ25901 23446830
         BZ    MSCANTST              BRANCH IF NONE, DO SCAN   @OZ25901 23446840
         EX    R1,MEVNTM           TEST EVENT REQUIREMENT      @OZ25901 23446850
         BNO   MSCANXT1            BR IF NOT REQ TO NEXT SCAN  @OZ25901 23446860
         XC    MSCANIND,MSCNID     RESET SCAN INDICATOR        @OZ25901 23446870
         SPACE 1                                               @OZ25901 23446880
MSCANTST EX    0,MSCNSET           SETUP FOR SCAN, GET WORK QUEUED  R41 23446900
         BZ    MSCANXT1            BRNCH IF NO WRK QUEUED, SKP SCAN R41 23447000
         SPACE 1                                                    R41 23447100
MSCAN    L     MBASE1,MSCNRTN      GET SCAN PROCESSING ROUTINE ADDR R41 23447200
         L     MBASE2,MSCNBASE     SETUP                            R41 23447300
         LA    MBASE3,2048(,MBASE2) COMMON SUBROUTINE               R41 23447400
         LA    MBASE3,2048(,MBASE3)  ADDRESSABILITY (8K)            R41 23447500
         ST    R14,MSCANADR         SAVE CURRENT SCAN TABLE ADDRESS R41 23447600
         BR    MBASE1              ENTER SCAN ROUTINE               R41 23447700
         SPACE 1                                                    R41 23447800
MSCANTM  TM    MSCANIND,*-*        *** EXECUTED ***                 R41 23447900
         SPACE 1                                               @OZ25901 23447910
MEVNTM   TM    MEVNTIND,*-*        *** EXECUTED ***            @OZ25901 23447920
         SPACE 2                                                    R41 23448000
MSCANXIT LA    R14,MSCANTBL-MSCNTSIZ  RE-INITIALIZE FOR NEXT        R41 23448100
         ST    R14,MSCANADR            LINE MANAGER DISPATCH        R41 23448200
         OC    MSCANREQ,MSCANIND   SET SCANS REQUIRED ON NEXT  @OZ25901C23448210
                                       LINE MANAGER DISPATCH   @OZ25901 23448220
         EJECT                                                      R41 23448300
*                                                                   R41 23448400
*        LINE MANAGER -- BUFFER PROCESSING                          R41 23448500
*                                                                   R41 23448600
         SPACE 1                                                    R41 23448700
MBUFSRCH DS    0H                  SEARCH READY BUFFER QUEUE         R4 23454000
         L     MBUF,$RJECHEQ       GET TOP OF RJE BUFFER QUEUE       R4 23454500
         LTR   MBUF,MBUF           CHECK FOR ANY BUFFER QUEUED       R4 23455000
         BZ    MTIMSRCH            BRANCH IF QUEUE IS EMPTY         R41 23455500
         SLR   R0,R0               GET EMPTY QUEUE INDICATOR        R41 23456000
MBUFRTRY CS    MBUF,R0,$RJECHEQ    ATTEMPT TO CLEAR QUEUE           R41 23456500
         BNE   MBUFRTRY            RETRY IF UNSUCCESSFUL            R41 23457000
MBUFIFO  L     R1,BUFCHAIN         GET ADDR OF NEXT BUFFER          R41 23457500
         LTR   R1,R1               IS ANY BUFFER CHAINED             R4 23458000
         BZ    MBUFPROC            PROCESS BUFF IF END OF CHAIN      R4 23458500
         ST    R0,BUFCHAIN         REORDER CHAINED BUFFERS           R4 23459000
         LR    R0,MBUF              FROM LIFO QUEUEING               R4 23459500
         LR    MBUF,R1               TO FIFO QUEUEING                R4 23460000
         B     MBUFIFO             LOOP UNTIL END OF CHAIN          R41 23460500
         SPACE 1                                                     R4 23461000
MBUFNEXT L     MBUF,MBUFQUE        PICK UP NEXT BUFFER ADDRESS      R41 23461600
         LTR   MBUF,MBUF           TEST FOR END OF CHAIN            R41 23461700
         BZ    MTIMSRCH            BRANCH IF YES                    R41 23461800
         L     R0,BUFCHAIN         PICK UP NEXT BUFFER ADDRESS      R41 23461900
MBUFPROC ST    R0,MBUFQUE          SAVE BUFF ADDR ON WORK QUEUE     R41 23462000
         SPACE 1                                                    R41 23462100
         L     MBASE1,MBUFBSCP     ASSUME BSC PROCESSING ROUTINE    R41 23462200
         L     MBASE2,=A(RTAMBSUB) PICK UP ADDRESSABILITY           R41 23462300
         LA    MBASE3,2048(,MBASE2) ON BSC COMMON                   R41 23462400
         LA    MBASE3,2048(,MBASE3)  SUBOUTINES                     R41 23462500
         TM    BUFTYPE,BUFTP+BUFIOB  CHECK BUFFER TYPE              R41 23462600
         BOR   MBASE1              PROCESS BSC BUFFER IF IOB        R41 23462700
         SPACE 1                                                    R41 23462800
         L     MBASE1,MBUFSNAP     GET ADDR OF SNA PROCESSING ROUTN R41 23462900
         L     MBASE2,=A(RTAMVSUB) PICK UP ADDRESSABILITY           R41 23463000
         LA    MBASE3,2048(,MBASE2) ON SNA COMMON                   R41 23463100
         LA    MBASE3,2048(,MBASE3)  SUBROUTINES                    R41 23463200
         BR    MBASE1               AND BRANCH TO HANDLE RPL        R41 23463300
         SPACE 2                                                    R41 23463400
         DS    0F                                                   R41 23463500
MBUFBSCP DC    A(MBSCPROC)         ADDR OF BSC BUFR PROCESSING RTN  R41 23463600
MBUFSNAP DC    AL1(X'80')          NO-FLUSH FLAG FOR SNA PROCESSING R41 23463700
         DC    AL3(MSNAPROC)       ADDR OF SNA BUFR PROCESSING RTN  R41 23463800
         EJECT                                                      R41 23463900
*                                                                   R41 23464000
*        LINE MANAGER -- POST SCAN PROCESSING AND WAIT              R41 23464100
*                                                                   R41 23464200
         SPACE 2                                                    R41 23464300
*        REACTIVATE LINE MANAGER MASTER TIME INTERVAL (1 SECOND)    R41 23464400
         SPACE 1                                                    R41 23464500
MTIMSRCH CLI   MSTQE+IPOST,X'20'   CHECK FOR STIMER REQUESTED       R41 23464600
         BE    MSINTVL             GO SET 1 SECOND INTERVAL         R41 23464700
         CLI   MSTQE+IPOST,X'00'   IF TIMER NOT STOPPED             R41 23464800
         BNE   MLLMWAIT             GO WAIT                         R41 23464900
MSINTVL  LA    R1,1                GET 1 SECOND                     R41 23465000
         ST    R1,MSTQE+ITIME       TIMER INTERVAL                  R41 23465100
        $STIMER MSTQE              KICK OFF TIMER                    R4 23465500
         MVI   MSTQE+IPOST,X'40'   INDICATE TIMER INTERVAL SET       R4 23466000
         SPACE 3                                                    R41 23466100
*        LINE MANAGER WAIT - FOR NEXT DISPATCH                      R41 23466200
         SPACE 1                                                     R4 23466500
MLLMWAIT DS    0H                  WAIT FOR MORE WORK TO DO          R4 23467000
        $WAIT  WORK                WAIT FOR SOMETHING TO DO          R4 23467500
         SPACE 1                                                     R4 23468000
         B     MSEARCH             BRANCH TO SEARCH FOR WORK        R41 23468600
         TITLE 'HASP LINE MANAGER --- MAIN SCAN DIRECTORY'          R41 23468700
*********************************************************************** 23468800
*                                                                     * 23468900
*                  LINE MANAGER MAIN SCAN DIRECTORY                   * 23469000
*                                                                     * 23469100
*********************************************************************** 23469200
         SPACE 2                                                    R41 23469300
MSCANTAB DSECT                                                      R41 23469400
MSCNID   DS    0XL1                SCAN REQUEST FLAG                R41 23469500
MSCNRTN  DS    A                   SCAN ROUTINE ADDRESS             R41 23469600
MSCNSET  DS    A                   SCAN SETUP INSTRUCTION           R41C23469700
                                     *** EXECUTED ***               R41 23469800
MEVNTID  DS    0XL1                EVENT REQUEST FLAG          @OZ25901 23469810
MSCNBASE DS    A                   SCAN COMMON SUBROUTINE BASE      R41 23469900
MSCNEXT  EQU   *                   NEXT SCAN TABLE ENTRY            R41 23470000
MSCNTSIZ EQU   *-MSCANTAB          SIZE OF SCAN TABLE ENTRY         R41 23470100
         SPACE 1                                                    R41 23470200
HASPRTAM CSECT                                                      R41 23470300
         SPACE 2                                                    R41 23470400
MSCANTBL DS    0F                                                   R41 23470500
         SPACE 1                                                    R41 23470600
         DC    AL1(MSCNBACT),AL3(MDCTSCAN)                          R41 23470700
         ICM   MDCT,15,MBSCACT                   ACTIVE BSC LINE    R41 23470800
         DC    AL1(0),AL3(RTAMBSUB)                  DCT SCAN  @OZ25901 23470900
         SPACE 1                                                    R41 23471000
         DC    AL1(MSCNSLOG),AL3(MSALGSCN)                          R41 23471100
         ICM   MDCT,15,MSNALOG                   ACTIVE SNA LOGON   R41 23471200
         DC    AL1(0),AL3(RTAMVSUB)                  DCT SCAN  @OZ25901 23471300
         SPACE 1                                                    R41 23471400
         DC    AL1(MSCNSLNE),AL3(MSLNESCN)                          R41 23471500
         ICM   MDCT,15,MSNALNE                   ACTIVE SNA LINE    R41 23471600
         DC    AL1(0),AL3(RTAMVSUB)                  DCT SCAN  @OZ25901 23471700
         SPACE 1                                                    R41 23471800
         DC    AL1(MSCNSIDL),AL3(MSIDLSCN)                          R41 23471900
         ICM   MDCT,15,MSNAIDL                     IDLE SNA LINE    R41 23472000
         DC    AL1(0),AL3(RTAMVSUB)                  DCT SCAN  @OZ25901 23472100
         SPACE 1                                                    R41 23472200
         DC    AL1(MSCNUNIT),AL3(MUNITSCN)                          R41 23472300
         B     MSCAN                             STARTED ($S CMD)   R41 23472400
         DC    AL1(0),AL3(RTAMBSUB)                 UNIT SCAN  @OZ25901 23472500
         SPACE 1                                                    R41 23472600
         DC    AL1(0),AL3(MLOGPROC)                                 R41 23472700
         ICM   MDCT,15,MLOGQUE                   LOGON DCT EXIT &   R41 23472800
         DC    AL1(0),AL3(RTAMVSUB)        ACB COMPLETION SCAN @OZ25901 23472900
         SPACE 1                                                    R41 23473000
         DC    AL1(0),AL3(MICEPROC)                                 R41 23473100
         ICM   MICE,15,MICEQUE                   ICE EXIT SERVICE   R41 23473200
         DC    AL1(0),AL3(RTAMVSUB)                    SCAN    @OZ25901 23473300
         SPACE 1                                                    R41 23473400
         DC    AL1(MSCNRAT),AL3(MRATPROC)                           R41 23473500
         ICM   WA,15,MSNALOG                  REMOTE AUTOLOGON @OZ25901 23473600
         DC    AL1(MEVNCKPT),AL3(RTAMVSUB)             SCAN    @OZ25901 23473700
         SPACE 1                                                    R41 23473800
MSCANEND DS    0H                                END OF SCAN TABLE  R41 23473900
         TITLE 'HASP LINE MANAGER -- CATASTROPHIC ERROR EXITS'      R41 23474000
*********************************************************************** 23474100
*                                                                     * 23474200
*        C A T A S T R O P H I C   E R R O R   E X I T S              * 23474300
*                                                                     * 23474400
*********************************************************************** 23474500
         SPACE 3                                                    R41 23474600
M01     $ERROR                     NON-ZERO DCT RJE BUFFER COUNT    R41 23474700
         SPACE 3                                                    R41 23474800
M03     $ERROR                     CONTROL BLOCK SETUP LOGIC ERROR  R41 23474900
         SPACE 3                                                    R41 23475000
R01     $ERROR                     JES2 ERROR IN RPL HANDLING       R41 23475100
       TITLE 'HASP LINE MANAGER -- SUBROUTINE TO REQUEST SHARED QUEUES' 23475105
         SPACE 1                                               @OZ25901 23475106
***************************************************************@OZ25901 23475107
*                                                              @OZ25901 23475108
*  LINE MANAGER -- ROUTINE TO QUEUE A BUFFER TO THE $RJECHEQ   @OZ25901 23475109
*                  AND POST THE CHECKPOINT PROCESSOR.          @OZ25901 23475110
*  ENTERED FROM MSIGNON, MDISCON AND MSNALPAR IF THE SHARED    @OZ25901 23475111
*  QUEUES ARE NOT OWNED (MEVNCHKPT IS NOT ON).                 @OZ25901 23475112
*  ON COMPLETION THE LINE MANAGER BRANCHES TO MBUFNEXT TO      @OZ25901 23475113
*  PROCESS THE NEXT BUFFER ON ITS CHANNEL END QUEUE (MBUFQUE). @OZ25901 23475114
*  MBUF CONTAINS THE ADDRESS OF THE BUFFER TO BE RE-QUEUED.    @OZ25901 23475115
*                                                              @OZ25901 23475116
***************************************************************@OZ25901 23475117
         SPACE 1                                               @OZ25901 23475120
MREQBUF  L     R0,$RJECHEQ         GET FIRST BUF ON $RJECHEQ   @OZ25901 23475125
MQRETRY  ST    R0,BUFCHAIN         CHAIN QUEUE TO MBUF         @OZ25901 23475130
         CS    R0,MBUF,$RJECHEQ    ATTEMPT TO QUEUE BUFFER     @OZ25901 23475135
         BNE   MQRETRY             RETRY IF NOT SUCCESSFUL     @OZ25901 23475140
         TM    BUFTYPE,BUFTP+BUFRPL  IF SNA BUFFER             @OZ25901 23475145
         BO    MQPOST                  POST CHECKPOINT         @OZ25901 23475150
         CLI   IOBECBCC,X'00'      NEED TO RESTORE...          @OZ27354 23475151
         BNE   MQCOUNTS            NO, NOT ZERO, CONTINUE      @OZ27354 23475152
         MVI   IOBECBCC,X'7F'      RESTORE COMPLETION CODE     @OZ27354 23475153
MQCOUNTS DS    0H                  RESET COUNTS                @OZ27354 23475154
         LH    R0,$EXCPCT          RETURN MASTER I/O COUNT     @OZ25901 23475155
         A     R0,=F'1'              TO PREVIOUS VALUE         @OZ25901 23475160
         STH   R0,$EXCPCT          STORE VALUE IN HCT          @OZ25901 23475165
         NI    MDCTATTN,255-MDCTIMER  RESET TIMER REQUEST      @OZ25901 23475168
         SLR   R0,R0               CLEAR R0                    @OZ25901 23475170
         IC    R0,DCTBUFCT         RETURN DCT I/O COUNT        @OZ25901 23475175
         A     R0,=F'1'              TO PREVIOUS VALUE         @OZ25901 23475180
         STC   R0,DCTBUFCT         STORE IN LINE DCT           @OZ25901 23475185
         L     R0,MDCTSXCP         RETURN SESSION EXCP         @OZ25901 23475190
         SL    R0,=F'1'              COUNT TO PREVIOUS         @OZ25901 23475195
         ST    R0,MDCTSXCP             VALUE IN DCT            @OZ25901 23475200
         IC    R15,MDCTRSEQ        RESET BLOCK                 @OZ25901 23475205
         LA    R15,15(,R15)          SEQUENCE COUNT            @OZ25901 23475210
         STC   R15,MDCTRSEQ            FOR MULTILEAVING        @OZ25901 23475215
         NI    MDCTRSEQ,X'0F'            SIGNON                @OZ25901 23475220
MQPOST   BAL   WA,MCKPOST          POST CHECKPOINT WRITER      @OZ25901 23475225
         B     MBUFNEXT            PROCESS NEW WORK            @OZ25901 23475230
         SPACE 2                                               @OZ25901 23475235
*                                                              @OZ25901 23475240
*        LINE MANAGER -- ROUTINE TO POST CHECKPOINT PROCESSOR  @OZ25901 23475245
*                                                              @OZ25901 23475250
         SPACE 1                                               @OZ25901 23475255
MCKPOST  OI    MHASPECF+$EWBPOST,$EWFPOST  REQUEST IMMED POST  @OZ25901 23475260
         TM    MHASPECF+$EWBCKPT,$EWFCKPT  TEST CHECKPOINT     @OZ25901 23475265
         BOR   WA                  RETURN IF ALREADY POSTED    @OZ25901 23475270
         OI    MHASPECF+$EWBCKPT,$EWFCKPT  REQUEST CKPT POST   @OZ25901 23475275
        $POST $HASPECF,CKPW        POST CHECKPOINT PROCESSOR   @OZ25901 23475280
         BR    WA                  RETURN TO CALLER            @OZ25901 23475285
      TITLE 'HASP LINE MANAGER -- SESSION CONTROL SUBROUTINE'  @OZ25901 23475290
         SPACE 1                                                    R41 23475300
*                                  ADDRESSABILITY --                R41 23475400
         USING ICEDSECT,MICE            -- ICE                      R41 23475500
         USING RTAMVSUB,MBASE2,MBASE3   -- COMMON SNA SUBROUTINES   R41 23475600
         SPACE 2                                                    R41 23475700
*                                                                   R41 23475800
*        SUBROUTINE TO QUEUE AN ICE TO THE LINE MANAGER             R41 23475900
*                         ICE EXIT QUEUE                            R41 23476000
*                                                                   R41 23476100
         SPACE 1                                                    R41 23476200
MICEREQU IC    R0,MCOMMAND         GET EXIT ROUTINE ACTION CODE     R41 23476300
         SPACE 1                                                    R41 23476400
MICEREQ1 LR    WA,SAVE             USE WA TO ADDRESS L.M. WORK AREA R41 23476500
         SPACE 1                                                    R41 23476600
MICEREQ2 OI    MHASPECF+$EWBBUF,$EWFBUF   SHOW LINE MANAGER REQ     R41 23476700
         OI    MHASPECF+$EWBPOST,$EWFPOST  DISP ON NEXT BUFF POST   R41 23476800
         SLL   R0,24               SHIFT ACTION CODE AND CLEAR REG  R41 23476900
         L     R15,ICEXTCHN        GET ICE EXIT ROUT CHAIN FIELD    R41 23477000
         SPACE 1                                                    R41 23477100
MICECHCK LTR   R15,R15             CHECK IF ICE IS ALREADY QUEUED   R41 23477200
         BNZ   MICEUPDT            TRY TO UPDATE ACTION CODE IF YES R41 23477300
         L     R1,MICEQUE-PCEDSECT(,WA)  GET ICE QUEUE HEAD POINTER R41 23477400
         SPACE 1                                                    R41 23477500
MICERTRY LA    R14,0(,R1)          CLEAR HIGH ORDER BYTE AND        R41 23477600
         ALR   R14,R0               ADD REQ ACTION CODE TO IT       R41 23477700
         CS    R15,R14,ICEXTCHN    ATTEMPT TO STORE CHAIN ADDR      R41 23477800
         BNE   MICEUPDT            BRANCH IF CHANGED MEANWHILE      R41 23477900
         LR    R15,R14             RELOAD REG15 FOR RETRY CASE      R41 23478000
         CS    R1,MICE,MICEQUE-PCEDSECT(WA)  TRY TO PUT ICE ON Q    R41 23478100
         BER   ML                  PROCESS NEXT ICE IF CHAINED      R41 23478200
         B     MICERTRY            RETRY IF UNSUCCESSFUL            R41 23478300
         SPACE 1                                                    R41 23478400
MICEUPDT LA    R14,0(,R15)         PURIFY CHAIN ADDRESS OF ICE      R41 23478500
         ALR   R14,R0              ADD ACTION CODE TO CHAIN ADDR    R41 23478600
         CLR   R14,R15             CHECK SEVERITY OF NEW REQ ACTION R41 23478700
         BNHR  ML                  PROCESS NEXT ICE IF LOWER        R41 23478800
         CS    R15,R14,ICEXTCHN    ATTEMPT TO UPDATE ACTION CODE    R41 23478900
         BER   ML                  PROCESS NEXT ICE IF STORED       R41 23479000
         B     MICECHCK            RETRY IF UNSUCCESSFUL            R41 23479100
         EJECT                                                      R41 23479200
*                                                                   R41 23479300
*        SUBROUTINE TO FREE ICES                                    R41 23479400
*                                                                   R41 23479500
         SPACE 1                                                    R41 23479600
MICEMELT DS    0H                                                   R41 23479700
         LR    WA,ML               SAVE 1ST LEVEL RETURN ADDRESS    R41 23479800
         BAL   ML,MVFREPRG         PURGE SPECIAL SEQ BUFFER IF ANY  R41 23479900
         LR    ML,WA               RESTORE 1ST LEVEL RETURN ADDRESS R41 23480000
         ST    MBUF,ICEBUFAD       CLEAR ICE SPECIAL SEQ BUFFER PTR R41 23480100
         TM    ICESTAT,ICEDRAIN    TEST IF ICE FREE REQUIRED        R41 23480200
         BZR   ML                  JUST RETURN IF NOT               R41 23480300
         LA    R0,VXIDISCN+VSEQDLGN  PRELOAD ICE-FREE SEQUENCE TYPE R41 23480400
         LH    R14,ICEOUTCT        TEST ICE OUTBOUND & INBOUND      R41 23480500
         AH    R14,ICEINCT          OUTSTANDING REQUEST COUNTS      R41 23480600
         BZ    MICEDRY             IF NONE REMAIN, NO NEED TO REQUE R41 23480700
         SPACE 1                                                    R41 23480800
         OI    MSTQE+IPOST,X'20'   INDICATE TIMER SERVICE REQUIRED  R41 23480900
         B     MICEREQ1            ENTER COMMON ICE REQUEUE ROUTINE R41 23481000
         SPACE 1                                                    R41 23481100
MICEDRY  L     R15,ICEADCT         GET APPL LOGON DCT ADDR          R41 23481200
         USING DCTDSECT,R15        ALLOW LOGON DCT ADDRESSABILITY   R41 23481300
         LH    R0,MDCTSNCT         PICK UP LOGGED-ON SESSION COUNT  R41 23481400
         BCT   R0,MICEFIND         DECREMENT CNT AND TEST FOR ZERO  R41 23481500
         SPACE 1                                                    R41 23481600
         STH   R0,MDCTSNCT         CLEAR LOGGED-ON SESSION COUNT    R41 23481700
         ST    R0,MDCTICE          CLEAR ICE CHAIN                  R41 23481800
         TM    DCTSTAT,DCTDRAIN    TEST LOGON DCT STATUS            R41 23481900
         BO    MICELGNP            GO CLOSE ACB IF DRAINED          R41 23482000
         TM    DCTFLAGS,DCTRSTRT   TEST LOGON DCT STATUS            R41 23482100
         BZ    MICEFREE            GO FREE ICE IF NOT RESTARTING    R41 23482200
MICELGNP LR    MDCT,R15            POINT TO LOGON CURRENT LOGON DCT R41 23482300
         BAL   WA,MLOGSTOP          AND REQ CLOSE ACB SUBTASK POST  R41 23482400
         SPACE 1                                                    R41 23482500
MICEFREE L     R1,$ICETRAY         GET ADDR OF FIRST FREE ICE       R41 23482600
MICEDEQ  ST    R1,ICEAPCHN         CONNECT ICE TO FREE CHAIN        R41 23482700
         CS    R1,MICE,$ICETRAY    ATTEMPT TO UPDATE FREE CHAIN     R41 23482800
         BNE   MICEDEQ             RETRY IF UNSUCCESSFUL            R41 23482900
         SLR   MICE,MICE           SHOW ICE NO LONGER EXISTS        R41 23483000
         OI    MSCANIND,MSCNRAT    INDICATE RAT SCAN NEEDED ON THIS R41 23483100
         OI    MSCANREQ,MSCNRAT     OR NEXT LINE MANAGER DISPATCH   R41 23483200
         BR    ML                  RETURN TO CALLER                 R41 23483300
         SPACE 1                                                    R41 23483400
MICEFIND STH   R0,MDCTSNCT         UPDATE LOGGED-ON  SESSION CNT    R41 23483500
         L     R0,ICEAPCHN         SAVE ADDR OF NEXT CHAINED ICE    R41 23483600
         LA    R15,MDCTICE-ICEAPCHN+ICEDSECT  GET PHONY ICE ADDR    R41 23483700
         SPACE 1                                                    R41 23483800
         USING ICEDSECT,R15        TEMPORARY ICE  ADDRESSABILITY    R41 23483900
MICELOOP L     R1,ICEAPCHN         GET  ADDR OF NEXT CHAINED ICE    R41 23484000
         CLR   R1,MICE             COMPARE  ICE POINTER TO OURS     R41 23484100
         BE    MICEREM             BRANCH IF ICE POINTS TO OURS     R41 23484200
         LTR   R15,R1              TEST FOR END OF CHAIN            R41 23484300
         BNZ   MICELOOP            GO TEST NEXT ICE IF NOT          R41 23484400
         B     M03                 LOGIC  ERROR IF ICE NOT FOUND    R41 23484500
MICEREM  ST    R0,ICEAPCHN         DISCONNECT OUR ICE FROM CHAIN    R41 23484600
         B     MICEFREE            RETURN ICE TO FREE ICE TRAY      R41 23484700
         DROP  R15                 RELEASE TEMPORARY ICE BASE       R41 23484800
         EJECT                                                      R41 23484900
*                                                                   R41 23485000
*        DELAYED REQUEST SUBROUTINE                                 R41 23485100
*                                                                   R41 23485200
         SPACE 1                                                    R41 23485300
MICEGIBB LA    R14,VSEQGIBB        SET BB+EB RU CODE IN CASE NO BUF R41 23485400
         B     MICEGSND            REJOIN COMMON PROCESSING         R41 23485500
         SPACE 1                                                    R41 23485600
MICEGIEB LA    R14,VSEQGIEB        SET EB RU CODE IN CASE NO BUFFER R41 23485700
         L     MDCT,ICELDCT        USE LINE DCT TO SEND EB     @OZ29815 23485750
         B     MICEGSND            REJOIN COMMON PROCESSING         R41 23485800
         SPACE 1                                                    R41 23485900
MICEGICD TM    ICEFLAGS,ICECHDIR   TEST FOR CD ALREADY PENDING      R41 23486000
         BO    MVFREPRG            BR IF YES-- FREE ANY BUFFER      R41 23486100
         LA    R14,VSEQGICD        SET CD RU CODE IN ICE            R41 23486200
         SPACE 1                                                    R41 23486300
MICEGSND LTR   MBUF,MBUF           TEST BUFFER ADDRESS              R41 23486400
         BNZ   MICEGHAV            BRANCH IF ALREADY HAVE BUFFER    R41 23486500
         SPACE 1                                                    R41 23486600
MICEGBUF LR    WA,R14              SAVE RU TYPE CODE AROUND $GETBUF R41 23486700
        $GETBUF TYPE=VTAM          TRY TO GET BUFFER FOR NULL RU    R41 23486800
         BNZ   MICEGTBF            BRANCH IF SUCCEEDED              R41 23486900
         LA    R0,VXIDGBUF(,WA)    ELSE PUT NULL RU CODE IN R0      R41 23487000
         L     WA,$MLLMPCE         POINT TO LINE MANAGER WORK AREA  R41 23487100
         B     MICEREQ2             AND REQUEUE ICE TO LINE MANAGER R41 23487200
MICEGTBF LR    R14,WA              RESTORE NULL RU TYPE CODE        R41 23487300
         LR    MBUF,R1             MOVE NEW BUFFER TO RPL BASE REG  R41 23487400
         USING RPLDSECT,MBUF        AND SHOW RPL ADDRESSABLE        R41 23487500
         ST    MICE,RPLICE                INITIALIZE                R41 23487600
         L     R1,ICEADCT                  ICE AND ACB              R41 23487700
         MVC   RPLDACB,DCTACB-DCTDSECT(R1)  ADDRESSES               R41 23487800
         CLM   R14,1,MICEGPND+VSEQGCLS  TEST DEFERRED BUF REQ TYPE  R41 23487900
         BE    MICECBLD            BRANCH IF FOR 'CLSDST'           R41 23488000
         SPACE 1                                                    R41 23488100
MICEGHAV LA    R1,MICEGPND(R14)    POINT TO DESIRED SESSION FLAGS   R41 23488200
         OC    ICEFLAGS,0(R1)      SET DESIRED FLAGS IN ICE         R41 23488300
         MVC   RPLCNTDF(3),MSNADATA  CHANGE RU TYPE TO DATA         R41 23488400
         OI    ICESNDST,ICEOCPND   FORCE 'ONLY IN CHAIN'            R41 23488500
         XC    RPLRLEN,RPLRLEN     SET NULL R.U. LENGTH             R41 23488600
         MVI   RPLSRTYP,RPLNFSYN   SET STYPE = REQUEST AND     @OZ32746C23488700
                                   RTYPE = NDFSYN,NDFASY,NRESP @OZ32746 23488720
         MVI   RPLVTFL2,RPLSCHED   SET POST=SCHED, DEFINITE RESP    R41 23488800
         NI    RPLOPT12,255-RPLFMHDR  RESET FM HEADER INDICATOR     R41 23488900
         B     MVRPLOCH            GO SEND CD OR EB UNDER L.M.      R41 23489000
         SPACE 2                                                    R41 23489100
MICEGPND DS    0C                  NULL R.U. PENDING ICE FLAGS      R41 23489200
         DC    AL1(ICEBBPND+ICEEBPND)  BEG/END BRKT PENDING         R41 23489300
         DC    AL1(ICEEBPND)       END BRACKET      PENDING         R41 23489400
         DC    AL1(ICECHDIR)       CHANGE DIRECTION PENDING         R41 23489500
         DC    AL1(VSEQGCLS)       CLSDST PENDING (NOT AN ICE FLAG) R41 23489600
         SPACE 2                                                    R41 23489700
         DROP  MBUF                RELEASE BUFFER ADDRESSABILITY    R41 23489800
         EJECT                                                      R41 23489900
*                                                                   R41 23490000
*        SESSION TERMINATION SUBROUTINES                            R41 23490100
*                                                                   R41 23490200
         SPACE 2                                                    R41 23490300
*                                                                   R41 23490400
*        SESSION DRAIN ENTRY -- CLOSE AT NEXT END BRACKET           R41 23490500
*                                                                   R41 23490600
         SPACE 1                                                    R41 23490700
MICETRAP OI    ICESTAT,ICEDRAIN+ICECLOSE  REQUEST SESSION CLOSEDOWN R41 23490800
         TM    ICESTAT,ICEALLOC    TEST SESSION STATUS              R41 23490900
         BOR   ML                  RETURN IF STILL ALLOCATED        R41 23491000
         TM    ICEFLAGS,ICEBRCKT   TEST SESSION BRACKET STATUS      R41 23491100
         BNZR  ML                  RETURN IF BRACKET STILL ACTIVE   R41 23491200
         SPACE 3                                                    R41 23491300
*                                                                   R41 23491400
*        SESSION ABORT ENTRY -- CLOSE IMMEDIATELY                   R41 23491500
*                                                                   R41 23491600
         SPACE 1                                                    R41 23491700
MICEABRT OI    ICESTAT,ICEDRAIN+ICECLOSE  REQ 'CLSDST' & FREE ICE   R41 23491800
         L     R15,ICERDCT         GET ADDRESS OF REMOTE DCT IF ANY R41 23491900
         USING DCTDSECT,R15        USE TEMP RMTE DCT ADDRESSABILITY R41 23492000
         SPACE 2                                                    R41 23492100
*        TRY TO LOCATE A SPECIAL SEQUENCE BUFFER                    R41 23492200
         SPACE 1                                                    R41 23492300
         SLR   MBUF,MBUF           CLEAR CURRENT BUFFER REGISTER    R41 23492400
         L     R0,ICEBUFAD         TEST SPECIAL SEQUENCE            R41 23492500
         LTR   R0,R0                BUFFER ADDRESS                  R41 23492600
         BNZ   MICEABUF            IF HAVE ONE, FREE ALL DCT BUFRS  R41 23492700
         L     R14,ICESDCT         GET 1ST SUSPENDED REMOTE DCT     R41 23492800
         LTR   R15,R15             TEST REMOTE DCT ADDRESS          R41 23492900
         BZ    MICEADCZ            GO ABORT SUSPENDS IF NONE        R41 23493000
         ICM   MBUF,7,DCTBUFAD+1   TEST DCT BUFFER ADDRESS          R41 23493100
         USING RPLDSECT,MBUF       SHOW BUFFER ADDRESSABLE          R41 23493200
         BZ    MICEASPQ            GO ABORT SUSPS IF NONE           R41 23493300
         ST    MBUF,ICEBUFAD       KEEP FIRST BUF FOR 'CLSDST' USE  R41 23493400
         L     MBUF,RPLNEXT        GET NEXT DCT-OWNED BUFFER IF ANY R41 23493500
         B     MICEABF0            GO ADJUST INBND CIRC IF NEEDED   R41 23493600
         EJECT                                                      R41 23493700
*                                                                   R41 23493800
*        SESSION ABANDON ENTRY -- FREE WITHOUT CLOSING              R41 23493900
*                                                                   R41 23494000
         SPACE 1                                                    R41 23494100
MICEABDN OI    ICESTAT,ICEABORT+ICEDRAIN  FREE ICE WITHOUT 'CLSDST' R41 23494200
         SPACE 2                                                    R41 23494300
*                                                                   R41 23494400
*        SESSION HOLD ENTRY -- PURGE QUEUES AND RESTRICT USE        R41 23494500
*                                                                   R41 23494600
         SPACE 1                                                    R41 23494700
MICEAHLD OI    ICESTAT,ICEHOLD     BLOCK ALLOCATION TO DATA STREAMS R41 23494800
         L     R15,ICERDCT         GET REMOTE DCT ADDRESS IF ANY    R41 23494900
         SPACE 2                                                    R41 23495000
*        PURGE RESIDUAL BUFFERS                                     R41 23495100
         SPACE 1                                                    R41 23495200
MICEABUF LTR   R15,R15             TEST REMOTE DCT ADDRESS          R41 23495300
         BZ    MICEABF2            BRANCH IF NONE                   R41 23495400
         ICM   R0,7,DCTBUFAD+1     TEST 1ST DCT-OWNED BUFFER ADDR   R41 23495500
         BZ    MICEABF2            BRANCH IF NONE                   R41 23495600
         LA    MBUF,0(,MBUF)       PURIFY AND TEST                  R41 23495700
         LTR   MBUF,MBUF            CURRENT BUFFER ADDRESS          R41 23495800
         BNZ   MICEABFD            BRANCH IF HAVE A CURRENT BUFFER  R41 23495900
         LR    MBUF,R0             ELSE GET ADDR OF DCT-OWNED BUFS  R41 23496000
MICEABFD CLM   MBUF,7,DCTBUFAD+1   COMPARE CURRENT BUF & DCT ANCHOR R41 23496100
         BE    MICEABF0            BRANCH IF SAME                   R41 23496200
         MVC   RPLNEXT,DCTBUFAD    ELSE CHAIN RDCT'S BUFS TO CURRNT R41 23496300
         SPACE 1                                                    R41 23496400
MICEABF0 TM    MDCTSEL,DCTPOUTB    TEST DIRECTION BIT               R41 23496500
         BO    MICEABF1            GO PURGE ANY 2ND BUF IF OUTBND   R41 23496600
         L     R0,ICEINLM          ELSE UPDATE INBOUND              R41 23496700
MICEABFR LR    R1,R0                CIRCULATION (NO. OF DATA        R41 23496800
         BCTR  R1,0                  OR SYN DFC INBOUND RPLS ON     R41 23496900
         CS    R0,R1,ICEINLM          RDCT, ICE, AND L.M. WORK Q)   R41 23497000
         BNE   MICEABFR            RETRY UNTIL UPDATE SUCCESSFUL    R41 23497100
         SPACE 1                                                    R41 23497200
MICEABF1 XC    DCTBUFAD,DCTBUFAD   CLEAR DCT BUFFER ANCHOR          R41 23497300
         SPACE 1                                                    R41 23497400
MICEABF2 LR    WA,ML               SAVE 1ST LEVEL RETURN ADDRESS    R41 23497500
         BAL   ML,MVFREPRG         PURGE CURRENT AND DCT-OWNED BUFS R41 23497600
         LR    ML,WA               RESTORE 1ST LEVEL RETURN ADDRESS R41 23497700
         SPACE 2                                                    R41 23497800
         DROP  MBUF                RELEASE RPL BUFR ADDRESSABILITY  R41 23497900
         EJECT                                                      R41 23498000
*                                                                   R41 23498100
*        ABORT SUSPENDED STREAMS   (ENTRY USED BY END BRACKET)      R41 23498200
*                                                                   R41 23498300
         SPACE 1                                                    R41 23498400
MICEAEB  DS    0H                  END BRACKET ENTRY POINT          R41 23498500
         SPACE 1                                                    R41 23498600
         SLR   R0,R0               LOAD ZERO FOR FIELD CLEARING     R41 23498700
         L     R14,ICESDCT         GET 1ST SUSPENDED REMOTE DCT     R41 23498800
         L     R15,ICERDCT         TEST REMOTE                      R41 23498900
         LTR   R15,R15              DCT ADDRESS                     R41 23499000
         BZ    MICEADCZ            IF UNALLOCATED GO ABORT SUSPNDS  R41 23499100
         SPACE 2                                                    R41 23499600
*        ABORT CURRENT REMOTE DCT                                   R41 23499700
         SPACE 1                                                    R41 23499800
MICEASPQ ST    R14,MDCTSDCT        ADD CURRENT RDCT TO SUSP QUEUE   R41 23499900
         ST    R0,ICERDCT          CLEAR CURRENT REMOTE DCT ADDRESS R41 23500000
         SPACE 2                                                    R41 23500100
*        ABORT SUSPENDED STREAMS                                    R41 23500200
         SPACE 1                                                    R41 23500300
MICEADCT OI    MDCTSTAT,DCTABORT   FORCE PROCESSOR ABORT            R41 23500400
         OI    DCTFLAGS,DCTRSTRT+DCTBKSP  RESTART JOB               R41 23500500
         NI    DCTFLAGS,255-DCTSTOP   RESET STOP BIT JUST IN CASE   R41 23500600
         NI    MDCTSTAT,255-DCTPSUSP  RESET STREAM SUSPENDED INDIC  R41 23500700
         ST    R0,MDCTICE          CLEAR DCT ICE POINTER            R41 23500800
         L     R1,DCTPCE           GET ADDRESS OF ASSOCIATED PCE    R41 23500900
         SPACE 1                                                    R41 23501000
        $POST  (R1),(IO,WORK)      POST PROCESSOR FOR IO AND WORK   R41 23501100
         SPACE 1                                                    R41 23501200
         L     R14,MDCTSDCT        GET NEXT SUSPENDED RDCT          R41 23501300
         ST    R0,MDCTSDCT         CLEAR SUSPENDED DCT CHAIN PTR    R41 23501400
         SPACE 1                                                    R41 23501500
MICEADCZ LTR   R15,R14             TEST ADDRESS                     R41 23501600
         BNZ   MICEADCT            BRANCH TO ABORT IF RDCT EXISTS   R41 23501700
         ST    R15,ICESDCT         SHOW SUSPEND QUEUE EMPTY         R41 23501800
         SPACE 2                                                    R41 23501900
*        RESET ICE STATUS                                           R41 23502000
         SPACE 1                                                    R41 23502100
         NI    ICESTAT,255-ICEALLOC  RESET                          R41 23502200
         NI    ICEFLGS2,255-ICESIGNL-ICEOUTBK-ICEBREAK  ICE    @OZ29180 23502250
         MVI   ICERCVST,ICENOFMH      STATUS                        R41 23502300
         MVI   ICESNDST,ICENOFMH       BYTES                        R41 23502400
MICEADED NI    ICEFLAGS,ICECNECT   RESET DIRECTION AND BRACKET FLGS R41 23502500
         EJECT                                                      R41 23502600
*        TEST FOR SESSION DRAIN REQUESTED                           R41 23502700
         SPACE 1                                                    R41 23502800
         L     R15,ICELDCT         GET LINE DCT ADDRESS             R41 23502900
         LTR   R15,R15             TEST FOR  SESSION DISCONNECTED   R41 23503000
         BZ    MICECLOS            BRANCH IF ALREADY DISCONNECTED   R41 23503100
         TM    ICESTAT,ICEDRAIN+ICECLOSE+ICEABORT  TEST ICE STATUS  R41 23503200
         BNZ   MICEAFRQ            GO CLEAR ICE QUEUES IF DRAINING  R41 23503300
         TM    MDCTSTAT,DCTSOFF    TEST LINE DCT STATUS             R41 23503400
         BO    MICEADRN            GO CLEAR ICE QUEUES IF DRAINING  R41 23503500
         LR    MDCT,R15            COPY LINE DCT ADDR TO MDCT       R41 23504000
         B     MVREQJOT            GO SEARCH FOR NEXT STREAM        R41 23504100
         DROP  R15                 DISCARD TEMP DCT ADDRESSABILITY  R41 23504200
         SPACE 1                                                    R41 23504300
MICEADRN OI    ICESTAT,ICEDRAIN+ICECLOSE  PROPAGATE DRAIN TO ICE    R41 23504400
         SPACE 2                                                    R41 23504500
*        CLEAR ICE INBOUND & OUTBOUND QUEUES                        R41 23504600
         SPACE 1                                                    R41 23504700
MICEAFRQ LR    WA,ML               SAVE 1ST LEVEL RETURN ADDRESS    R41 23504800
         BAL   ML,MVFREEOQ         CLEAR OUTBOUND QUEUE             R41 23504900
         BAL   ML,MVFREEIQ         CLEAR INBOUND  QUEUE, AFTER 1ST  R41C23505000
                                    PURGING REMOTE CONSOLE REQUESTS R41 23505100
         LR    ML,WA               RESTORE 1ST LEVEL RETURN ADDRESS R41 23505200
         LA    R0,VXIDISCN+VSEQDLNE  PRE-LOAD DISCONNECT CODE       R41 23505300
         L     WA,$MLLMPCE         GET POINTER TO L.M. WORK AREA    R41 23505400
         CLR   SAVE,WA             SEE IF LINE MANAGER NOW RUNNING  R41 23505500
         BNE   MICEREQ2            QUEUE TO L.M. FOR DISCONN IF NOT R41 23505600
         EJECT                                                      R41 23505700
*                                                                   R41 23505800
*        SESSION DISCONNECT SUBROUTINE                              R41 23505900
*                                                                   R41 23506000
         SPACE 1                                                    R41 23506100
MICEDISC DS    0H                                                   R41 23506200
         SPACE 2                                                    R41 23506300
         TM    MEVNTIND,MEVNCKPT   TEST SHARED QUEUES STATUS   @OZ25901 23506310
         BO    MICERMSG              IF QUES OWNED, DISCONNECT @OZ25901 23506320
         LA    R0,VXIDISCN+VSEQDLNE  PRE-LOAD DISC CODE        @OZ25901 23506330
         BAL   WA,MCKPOST          ELSE POST CHKPT PROCESSOR   @OZ25901 23506340
         B     MICEREQ1            REQUEUE ICE ON EXIT QUEUE   @OZ25901 23506350
         SPACE 1                                                    R41 23506400
*        WRITE SESSION DISCONNECT MESSAGE                           R41 23506500
         SPACE 1                                                    R41 23506600
MICERMSG L     R14,ICELDCT         PICK UP LINE DCT ADDRESS    @OZ25901 23506700
         LTR   R14,R14             ICE ALLOC TO LINE...        @OZ29432 23506710
         BZ    MICECLOS            NO, CLOSE SESSION           @OZ29432 23506720
         USING DCTDSECT,R14        GET LINE DCT ADDRESSABILITY      R41 23506800
         TM    ICEFLAGS,ICECNECT   TEST SESSION STATUS              R41 23506900
         BZ    MICECLIX            BR IF NOT CONNECTED         @OZ29432 23507000
         L     R1,$MWORK           GET AREA ADDRESS                 R41 23507100
         MVC   0(L'MLGOFMSG,R1),MLGOFMSG  SETUP MSG TEXT            R41 23507200
         USING MLGOFMSG,R1         ESTABLISH MSG ADDRESSABILITY     R41 23507300
         MVC   MLGOFLNE,DCTDEVN    MOVE LINE NAME INTO MESSAGE      R41 23507400
         MVC   MLGOFSYM,ICESYMB    MOVE LUNAME TO MESSAGE           R41 23507500
         DROP  R1                  RELEASE MESSAGE BASE             R41 23507600
         $WTO  (R1),L'MLGOFMSG,JOB=NO,WAIT=NO,         ISSUE        R41X23507700
               ROUTE=$TP+$LOG,CLASS=$NORMAL,PRI=$HI    MESSAGE      R41 23507800
         SPACE 2                                                    R41 23507900
*        ADD SESSION TOTALS TO LINE COUNTERS                        R41 23508000
         SPACE 1                                                    R41 23508100
         L     R14,ICELDCT         RELOAD LINE DCT ADDRESS          R41 23508200
         SLR   WA,WA               SET INITIAL INDEX TO ZERO        R41 23508300
         LA    R0,4                SET INDEX INCREMENT TO 4         R41 23508400
         LA    R1,L'MDCTOTAL-1     GET LOOP TERMINATION INDEX       R41 23508500
MICELTOT L     R15,MDCTOTAL(WA)    GET LINE TOTAL EVENT COUNT       R41 23508600
         AL    R15,ICETOTAL(WA)    ADD SESSION EVENT COUNT          R41 23508700
         ST    R15,MDCTOTAL(WA)    STORE NEW TOTAL COUNT            R41 23508800
         BXLE  WA,R0,MICELTOT      LOOP UNTIL ALL COUNTS TOTALED    R41 23508900
******** WRITE DISCONNECT SMF RECORD FOR THE SESSION                R41 23509000
         SPACE 1                                                    R41 23509100
MICECLIX LH    R0,MDCTSNCT         GET LINE ALLOCATED ICE COUNT     R41 23509200
         BCT   R0,MICEDFND         CHECK AND DECREMENT COUNT        R41 23509300
         EJECT                                                      R41 23509400
*        DISCONNECT REMOTE IF LAST SESSION DISCONNECT               R41 23509500
         SPACE 1                                                    R41 23509600
         STH   R0,MDCTSNCT         CLEAR ALLOCATED ICE COUNT AND    R41 23509700
         ST    R0,MDCTICE           ZERO ALLOCATED ICE CHAIN        R41 23509800
         L     R15,MDCTDCT         GET ADDR OF 1ST REMOTE DCT       R41 23509900
         ST    R0,MDCTDCT          DISCONNECT REMOTE DCT CHAIN      R41 23510000
         SPACE 3                                                    R41 23510100
*        RESET REMOTE DCTS                                          R41 23510200
         SPACE 1                                                    R41 23510300
         USING DCTDSECT,R15        USE TEMP RMT DCT ADDRESSABILITY  R41 23510400
MICERDSC ST    R0,DCTDCB           CLEAR LINE DCT PTR IN REMOTE DCT R41 23510500
         NI    MDCTSTAT,255-DCTSINON-DCTSOFF  SHOW RMT SIGNED OFF   R41 23510600
         L     R15,MDCTDCT         GET PTR TO NEXT REMOTE DCT       R41 23510700
         LTR   R15,R15             TEST FOR END OF REMOTE CHAIN     R41 23510800
         BNZ   MICERDSC            LOOP UNTIL NO MORE REMOTES       R41 23510900
         DROP  R15                 DROP REMOTE DCT ADDRESSABILITY   R41 23511000
         SPACE 3                                                    R41 23511100
*        RESET RAT CONNECTIONS                                      R41 23511200
         SPACE 1                                                    R41 23511300
         USING RATDSECT,WA         USE TEMPORARY RAT ADDRESSABILITY R41 23511400
         L     WA,MDCTRAT          SAVE ADDRESS OF RAT ENTRY        R41 23511500
         XC    MDCTRAT,MDCTRAT     INDICATE REMOTE DISCONNECTED     R41 23511600
         TM    MDCTSTAT,DCTLEASE+DCTSHARE  TEST FOR SHARED LINE     R41 23511700
         BO    MICELDED            DON'T CLEAR RAT LINE PTR IF YES  R41 23511800
         XC    RATLDCT,RATLDCT     RESET RAT LINE DCT POINTER       R41 23511900
         DROP  R14                 RELEASE LINE DCT ADDRESSABILITY  R41 23512000
         SPACE 2                                                    R41 23512100
*        INDICATE SIGN-OFF IN CHECKPOINT RECORD                     R41 23512200
         SPACE 1                                                    R41 23512300
*              THIS LINE DELETED BY APAR NUMBER                @OZ25901 23512400
MICELDED LR    R1,WA               COPY RAT ADDRESS            @OZ25901 23512500
         SL    R1,$RATABLE         WA = (RMT NUMBER -1) * RATTLE    R41 23512600
         LR    R15,R1              MULTIPLY                         R41 23512700
         ALR   R15,R1               BY                              R41 23512800
         ALR   R15,R1                THREE                          R41 23512900
         SLR   R14,R14             DIVIDE BY RATTLE                 R41 23513000
         D     R14,=A(RATTLE)       AND BY 8 GIVING OFFSET TO       R41 23513100
         D     R14,=A(8)             BYTE (QUOT) AND BIT (REMAIN)   R41 23513200
         AL    R15,$RMTSON         R15 = BYTE ADDR OF SIGNON BITS   R41 23513300
         L     R0,=A(-QUEBUSY*X'2000'-1)   GET BITS TO CLEAR BUSY   R41 23513400
         SRL   R0,0(R14)           SHIFT TO BIT OFFSET              R41 23513500
         STH   R0,MSONWORK         STORE FOR CLEAR                  R41 23513600
         NC    0(2,R15),MSONWORK   INDICATE REMOTE OFF SYSTEM       R41 23513700
         EJECT                                                      R41 23513800
         L     R1,MCLOCK           GET CURRENT TIME                 R41 23513900
         TM    RATFLAGS,RATSRMT+RATALM TEST FOR AUTOLOGON MODES     R41 23514000
         BZ    MICEDTIM            NO, BRANCH USE CURRENT TIME      R41 23514100
         AH    R1,=H'58'           ELSE, DELAY AUTOLOG RETRY 1 MIN. R41 23514200
MICEDTIM ST    R1,RATIMER          STORE TIME OFF VALUE             R41 23514300
         SPACE 2                                                    R41 23514400
*        WRITE REMOTE SIGN-OFF MESSAGE                              R41 23514500
         SPACE 1                                                    R41 23514600
         L     R14,ICELDCT         RE-LOAD LINE DCT POINTER         R41 23514700
         USING DCTDSECT,R14        RE-ESTABLISH DCT ADDRESSABILITY  R41 23514800
         TM    MDCTSTAT,DCTSINON   TEST FOR CONNECTED REMOTE        R41 23514900
         BZ    MICELDSC            BR IF NO, SKIP MESSAGE           R41 23515000
         L     R1,$MWORK           GET MESSAGE WORK AREA ADDR       R41 23515100
         MVC   0(L'MDSCMSG,R1),MDSCMSG  MOVE MSG TO WORK AREA       R41 23515200
         MVC   MDSCRMT-MDSCMSG(L'MDSCRMT,R1),RATNAME AND RMTID      R41 23515300
         $WTO  (R1),L'MDSCMSG,JOB=NO,WAIT=NO,  ISSUE DISCONNECT,,,  R41C23515400
               ROUTE=$LOG+$ERR+$TP,CLASS=$ALWAYS,PRI=$HI ..MESSAGE  R41 23515500
         EJECT                                                      R41 23515600
*        REMOVE LINE FROM ACTIVE QUEUE                              R41 23515700
         SPACE 1                                                    R41 23515800
MICELDSC L     R14,ICELDCT         RE-LOAD LINE DCT ADDRESS         R41 23515900
         L     R1,MDCTADCT         GET POINTER TO NEXT ACTIVE LNE   R41 23516000
         LA    R15,MSNALNE-MDCTADCT+DCTDSECT  GET PHONY DCT POINTER R41 23516100
         USING DCTDSECT,R15        GET TEMP LINE DCT ADDRESSABILITY R41 23516200
MICELDSL L     R0,MDCTADCT         GET ALLOCATED LINE CHAIN POINTER R41 23516300
         CLR   R0,R14              COMPARE WITH OUR LINE            R41 23516400
         BE    MICELDEQ            BRANCH IF LINE POINTS TO OURS    R41 23516500
         LTR   R15,R0              TEST FOR END OF ALLOC LINE CHAIN R41 23516600
         BNZ   MICELDSL            BRANCH TO TEST NEXT LINE IF NOT  R41 23516700
         B     M03                 LOGIC ERROR IF LINE NOT FOUND    R41 23516800
MICELDEQ ST    R1,MDCTADCT         DISCONNECT LINE FROM CHAIN       R41 23516900
         DROP  R15                 RELEASE TEMP DCT ADDRESSABILITY  R41 23517000
         NI    MDCTSTAT,255-DCTSINON-DCTSOFF  SHOW RMT SIGNED OFF   R41 23517100
         SLR   WA,WA               DISCONNECT...                    R41 23517200
         ST    WA,ICELDCT          ...LINE DCT FORM ICE             R41 23517300
         SPACE 2                                                    R41 23517400
*        RELEASE LINE DCT IF DRAINED                                R41 23517500
         SPACE 1                                                    R41 23517600
         TM    DCTSTAT,DCTDRAIN    TEST FOR DRAIN STATUS PENDING    R41 23517700
         BZ    MICEDOFF            SHOW LINE IS OFF SYSTEM IF NOT   R41 23517800
         DROP  WA                  RELEASE RAT ADDRESSABILITY       R41 23517900
         SPACE 1                                                    R41 23518000
        $FREUNIT (R14)             FREE THE LINE DCT                R41 23518100
         LR    R14,R1              RELOAD LINE DCT ADDRESS          R41 23518200
         SPACE 1                                                    R41 23518300
        $DORMANT                   INDICATE DORMANT FUNCTION        R41 23518400
         B     MICECLOS            AND SIGN OFF REMOTE              R41 23518500
         SPACE 2                                                    R41 23518600
*        PLACE LINE ON IDLE LINE QUEUE                              R41 23518700
         SPACE 1                                                    R41 23518800
MICEDOFF L     R1,MSNAIDL          GET IDLE SNA LINE CHAIN PTR      R41 23518900
         ST    R1,MDCTADCT         CONNECT IDLE LINES TO OUR LINE   R41 23519000
         ST    R14,MSNAIDL         UPDATE LINE MANAGER IDLE CHAIN   R41 23519100
         OI    MSCANIND,MSCNRAT    INDICATE RAT SCAN NEEDED         R41 23519200
         B     MICECLOS            BRANCH TO INITIATE CLSDST SEQ    R41 23519300
         EJECT                                                      R41 23519400
MDSCMSG $MSG   203,'RMTXXXXX DISCONNECTED'  SNA REMOTE DISCONN MSG  R41 23519500
MDSCRMT  EQU   MDSCMSG+2,8         REMOTE NAME                      R41 23519600
         SPACE 2                                                    R41 23519700
MLGOFMSG $MSG  210,'SESSION XXXXXXXX LOGGED OFF LINEYYYY'           R41 23519800
MLGOFSYM EQU   MLGOFMSG+10,8       LUNAME                           R41 23519900
MLGOFLNE EQU   MLGOFMSG+30,8       LINE NAME                        R41 23520000
         SPACE 1                                                    R41 23520100
MALMSG1  $MSG  207,'RMTXXXXX -- AUTOLOGON FAILED'                   R41 23520200
MALMSGR  EQU   MALMSG1+2,L'RATNAME     REMOTE NAME                  R41 23520300
         EJECT                                                      R41 23520400
*        REMOVE ICE FROM LINE DCT CHAIN                             R41 23520500
         SPACE 1                                                    R41 23520600
MICEDFND STH   R0,MDCTSNCT         UPDATE ALLOCATED ICE COUNT       R41 23520700
         L     R0,ICEALCHN         SAVE ADDRESS OF NEXT CHAINED ICE R41 23520800
         LA    R15,MDCTICE-ICEALCHN+ICEDSECT  GET PHONY ICE ADDRESS R41 23520900
         SPACE 1                                                    R41 23521000
         USING ICEDSECT,R15        PROVIDE TEMP ICE ADDRESSABILITY  R41 23521100
MICEDEAL L     R1,ICEALCHN         GET ADDRESS OF NEXT CHAINED ICE  R41 23521200
         CLR   R1,MICE             COMPARE WITH OUR ICE             R41 23521300
         BE    MICEDREM            BRANCH IF ICE POINTS TO OURS     R41 23521400
         LTR   R15,R1              CHECK FOR END OF CHAIN           R41 23521500
         BNZ   MICEDEAL            BRANCH TO TEST NEXT ICE          R41 23521600
         B     M03                 LOGIC ERROR IF ICE NOT FOUND     R41 23521700
MICEDREM ST    R0,ICEALCHN         DISCONNECT ICE FROM CHAIN        R41 23521800
         DROP  R14,R15             DROP TEMP ICE/LINE DCT BASE      R41 23521900
         SPACE 1                                                    R41 23522000
         XC    ICEALCHN,ICEALCHN   CLEAR ICE CHAIN POINTER          R41 23522100
         XC    ICELDCT,ICELDCT     CLEAR ICE LINE DCT POINTER       R41 23522200
         EJECT                                                      R41 23522300
*                                                                   R41 23522400
*        SESSION CLSDST SUBROUTINE                                  R41 23522500
*                                                                   R41 23522600
         SPACE 1                                                    R41 23522700
MICECLOS L     MBUF,ICEBUFAD       GET SPECIAL SEQ BUFFER ADDRESS   R41 23522800
         TM    ICESTAT,ICECLOSE    TEST IF CLSDST IS REQUIRED       R41 23522900
         BZ    MICEMELT            SKIP CLSDST ATTEMPT IF NOT       R41 23523000
         NI    ICEFLAGS,255-ICECNECT RESET SESSION CONNECT     @OZ29432 23523100
         TM    ICEINDEX,VSEQSPEC   IS ICE IN SPECIAL SEQUENCE STATE R41 23523200
         MVI   ICEINDEX,VSEQCLOS   INDICATE CLSDST SEQUENCE REQ     R41 23523300
         BNZR  ML                  WAIT FOR SEQUENCE TO COMPLETE    R41 23523400
         TM    ICESTAT,ICEABORT    TEST SESSION STATUS              R41 23523500
         BO    MICEMELT            SKIP CLSDST SEQ IF ABORTING      R41 23523600
         L     R15,ICEADCT         GET APPL LOGON DCT ADDR          R41 23523700
         TM    MDCTSTAT-DCTDSECT(R15),DCTABORT  TEST APPLIC STATUS  R41 23523800
         BO    MICEMELT            SKIP CLSDST SEQ IF ABORTING      R41 23523900
         LTR   MBUF,MBUF           TEST SPECIAL SEQ BUFFER ADDRESS  R41 23524000
         LA    R14,VSEQGCLS        SET CLSDST CODE IN CASE NO BUF   R41 23524100
         BZ    MICEGBUF            BRANCH IF NEED TO GET A BUFFER   R41 23524200
         SPACE 1                                                    R41 23524300
         USING RPLDSECT,MBUF       ALLOW RPL ADDRESSABILITY         R41 23524400
MICECBLD ST    MBUF,ICEBUFAD       STORE SPECIAL SEQ BUF ADDRESS    R41 23524500
         OI    ICESTAT,ICEABORT    PREVENT FURTHER CLSDST ATTEMPTS  R41 23524600
         MVC   RPLDCT+1(3),ICEADCT+1  MOVE LOGON DCT ADDR TO ICE    R41 23524700
         ST    MICE,RPLICE         STORE ICE ADDRESS IN RPL         R41 23524800
         MVI   RPLSEQTP,VSEQCLOS   INDICATE CLSDST SEQUENCE         R41 23524900
         MVI   RPLREQ,RPLCLOSE     SHOW RPL CLSDST REQUEST TYPE     R41 23525000
         MVC   RPLARG,ICECID       MOVE VTAM CID TO RPL             R41 23525100
         MVI   RPLEXTDS,0          SHOW NOT A BRANCH ENTRY REQ      R41 23525200
         B     MVRPLXEC            PASS REQUEST TO VTAM             R41 23525300
         SPACE 2                                                    R41 23525400
         DROP  MBUF                RELEASE RPL ADDRESSABILITY       R41 23525500
         EJECT                                                      R41 23525600
*                                                                   R41 23525700
*        SUBROUTINE TO REQUEST SESSION DELAY INTERVAL               R41 23525800
*                                                                   R41 23525900
         SPACE 1                                                    R41 23526000
MICETIME L     R1,MDCTRAT          GET TERMINAL RAT ENTRY ADDR      R41 23526100
         LH    R1,RATWTIME-RATDSECT(,R1)  GET TERMINAL WAIT TIME    R41 23526200
         LTR   R1,R1               WAIT TIME INTERVAL SPECIFIED     R41 23526300
         BNZ   MICEDLAY            USE TERMINAL VALUE IF YES        R41 23526400
         LH    R1,$WAITIME         GET INSTALLATION DEFAULT VALUE   R41 23526500
         SPACE 1                                                    R41 23526600
MICEDLAY AL    R1,MDCTIMOK         COMPUTE INTERVAL EXPIRATION TIME R41 23526700
         ST    R1,ICEWTIME         STORE IN ICE                     R41 23526800
         OI    ICESTAT,ICETIMER    SHOW ICE REQS WAIT TIME CHECK    R41 23526900
         BR    WA                  RETURN TO CALLER                 R41 23527000
         SPACE 2                                                    R41 23527100
         DROP  MICE                RELEASE ICE ADDRESSABILITY       R41 23527200
         TITLE 'HASP LINE MANAGER -- SMF RECORDING SUBROUTINES'     R41 23527300
*                                                                   R41 23527400
*        WRITE LINE START SMF RECORD SUBROUTINE                     R41 23527500
*                                                                   R41 23527600
         SPACE 1                                                    R41 23527700
MSMFSTRT DS    0H                  LINE START EVENT SMF RECORD      R41 23527800
         CLI   $NUMSMFB,2          CHECK SMF OPTIONS                R41 23527900
         BLR   ML                  RETURN IF NO SMF REQ             R41 23528000
        $GETSMFB WAIT=NO           TRY TO GET SMF BUFFER            R41 23528100
         BZR   ML                  RETURN IF FAILED TO GET BUFFER   R41 23528200
         USING SMFDSECT,R1         ESTABLISH SMF BUFFER ADDRESS     R41 23528300
         MVI   SMFRDW+1,SMF47LN2-SMFRDW  SET RECORD LENGTH          R41 23528400
         MVI   SMFHDRTY,SMFSSETP   SET START EVENT RECORD TYPE      R41 23528500
         MVI   SMF47EVT+1,SMFLINEV SET LINE EVENT TYPE              R41 23528600
         MVI   SMF47LN1+1,SMF47LN2-SMF47LN1  SET ID SECTION LENGTH  R41 23528700
         B     MSMFWRIT            BRANCH TO QUEUE SMF RECORD       R41 23528800
         SPACE 3                                                    R41 23528900
*                                                                   R41 23529000
*        WRITE REMOTE DISCONNECT RECORD SUBROUTINE                  R41 23529100
*                                                                   R41 23529200
         SPACE 1                                                    R41 23529300
MSMFDISC DS    0H                  REMOTE DISCONN EVENT SMF RECORD  R41 23529400
        $GETSMFB WAIT=NO           TRY TO GET SMF BUFFER            R41 23529500
         BZR   ML                  RETURN IF FAILED TO GET BUFFER   R41 23529600
         MVI   SMF48EVT+1,SMFRMTEV SET REMOTE EVENT TYPE            R41 23529700
         MVC   SMF48CTR,0(WA)      MOVE SESSION COUNTS              R41 23529800
         B     MSMFTERM            BRANCH TO FINISH RECORD          R41 23529900
         SPACE 3                                                    R41 23530000
*                                                                   R41 23530100
*        WRITE LINE STOP RECORD SUBROUTINE                          R41 23530200
*                                                                   R41 23530300
         SPACE 1                                                    R41 23530400
MSMFSTOP DS    0H                  LINE DRAIN EVENT SMF RECORD      R41 23530500
         CLI   $NUMSMFB,2          CHECK SMF OPTIONS                R41 23530600
         BLR   ML                  RETURN IF NO SMF REQ             R41 23530700
        $GETSMFB WAIT=NO           TRY TO GET SMF BUFFER            R41 23530800
         BZR   ML                  RETURN IF FAILED TO GET BUFF     R41 23530900
         MVI   SMF48EVT+1,SMFLINEV SET LINE EVENT TYPE              R41 23531000
         MVC   SMF48CTR,MDCTOTAL   MOVE LINE EVENT COUNTS           R41 23531100
         EJECT                                                      R41 23531200
*                                                                   R41 23531300
*        COMMON LINE STOP / REMOTE DISCONNECT RECORD CODE           R41 23531400
*                                                                   R41 23531500
         SPACE 1                                                    R41 23531600
MSMFTERM MVI   SMFRDW+1,SMF48END-SMFRDW  SET RECORD LENGTH          R41 23531700
         MVI   SMFHDRTY,SMFPSETP   SET STOP EVENT RECORD TYPE       R41 23531800
         TM    MDCTTYPE,DCTPSNA    CHECK LINE DCT TYPE              R41 23531900
         BZ    MSMFNSNA            BRANCH IF NO VTAM LINE           R41 23532000
         MVC   SMF48ADP,=C'SNA'    INDICATE SNA INTERFACE           R41 23532100
         B     MSMFWRIT            BRANCH TO QUEUE SMF RECORD       R41 23532200
MSMFNSNA L     R15,DCTDCB          GET LINE ADAPTER ADDRESS         R41 23532300
         L     R15,DCBDEBAD-DCBDSECT(,R15)  FROM THE UCB            R41 23532400
         L     R15,DEBSUCBA-DEBDSECT(,R15)   AND STORE IT IN        R41 23532500
         MVC   SMF48ADP,UCBNAME-UCBDSECT(R15)  THE SMF RECORD       R41 23532600
         SPACE 3                                                    R41 23532700
*                                                                   R41 23532800
*        COMMON SMF RECORD WRITE ROUTINE                            R41 23532900
*                                                                   R41 23533000
         SPACE 1                                                    R41 23533100
MSMFWRIT MVI   SMFSSID+1,SMFHSPID  SET HASP SUBSYSTEM ID            R41 23533200
         LH    R0,SMFRDW           COMPUTE AND STORE LENGTH OF      R41 23533300
         SH    R0,=Y(SMFSSTRT-SMFRDW)  THAT PORTION OF THE RECORD   R41 23533400
         STH   R0,SMFSSLEN          FOLLOWING THE SUBSYSTEM HDR     R41 23533500
         CLI   DCTDEVTP,DCTLOG     CHECK FOR LOGON DCT              R41 23533600
         BNE   SKIP1300            BRANCH IF LINE DCT               R41 23533700
         MVC   SMF48APN,MDCTAPPL   MOVE APPLICATION NAME            R41 23533800
         B     SKIP1310            SKIP TO FINISH SMF RECORD        R41 23533900
SKIP1300 ICM   R15,15,MDCTRAT      ANYTHING CONNECTED               R41 23534000
         BZ    SKIP1310            SKIP IF NOT                      R41 23534100
         MVC   SMF48RMT,RATNAME-RATDSECT(R15) SET IDENTIFICATION    R41 23534200
SKIP1310 MVC   SMF48LIN,DCTDEVN    SET LINE NAME IN RECORD          R41 23534300
         MVC   SMF48PSW,MDCTPSWD   SET PASSWORD FROM LINE           R41 23534400
        $QUESMFB                   QUEUE THE SMF RECORD FOR OUTPUT  R41 23534500
         BR    ML                  RETURN TO CALLER                 R41 23534600
         DROP  R1                  RELEASE TEMPORARY SMF BASE       R41 23534700
         TITLE 'HASP LINE MANAGER -- LOGON/LINE DCT INITIATION/TERMINATC23534800
               ION SUBROUTINES'                                     R41 23534900
*                                                                   R41 23535000
*        LINE/LOGON DCT BSC/SNA COMMON ALLOCATION SUBROUTINE        R41 23535100
*                                                                   R41 23535200
         SPACE 1                                                    R41 23535300
MLDCTGET DS    0H                                                   R41 23535400
        $GETUNIT (MDCT)            TRY TO ACQUIRE LOGON/LINE DCT    R41 23535500
         BZR   WA                  RETURN IF FAILED TO GET DCT      R41 23535600
         SPACE 1                                                    R41 23535700
        $ACTIVE                    INDICATE NEW ACTIVE FUNCTION     R41 23535800
         SPACE 1                                                    R41 23535900
         XC    MDCTOTAL,MDCTOTAL   CLEAR ALL EVENT COUNTERS         R41 23536000
         SPACE 1                                                    R41 23536100
         CLI   DCTDEVTP,DCTLOG     CHECK FOR LOGON DCT              R41 23536200
         BE    MLOGSTRT            INITIALIZE LOGON DCT IF YES      R41 23536300
         TM    MDCTTYPE,DCTPSNA    CHECK LINE DCT TYPE              R41 23536400
         BO    MSNASTRT            BRANCH IF SNA INTERFACE LINE     R41 23536500
         B     MBSCSTRT            BRANCH TO INIT BSC LINE DCT      R41 23536600
         SPACE 2                                                    R41 23536700
*                                                                   R41 23536800
*        LOGON/LINE DCT BSC/SNA COMMON DE-ALLOCATION SUBROUTINE     R41 23536900
*                                                                   R41 23537000
         SPACE 1                                                    R41 23537100
MLDCTREL OI    MSCANREQ,MSCNUNIT   REQ UNIT SCAN ON NEXT DISP       R41 23537200
         OI    MHASPECF+$EWBBUF,$EWFBUF   SHOW LINE MANAGER REQ     R41 23537300
         OI    MHASPECF+$EWBPOST,$EWFPOST  DISP ON NEXT BUFF POST   R41 23537400
         SPACE 1                                                    R41 23537500
MLDCTFRE DS    0H                                                   R41 23537600
         MVI   DCTBUFCT,0          FORCE OUTST BUFF COUNT ZERO      R41 23537700
        $FREUNIT (MDCT)            FREE THE LOGON/LINE DCT          R41 23537800
         SPACE 1                                                    R41 23537900
        $DORMANT                   INDICATE DORMANT FUNCTION        R41 23538000
         SPACE 1                                                    R41 23538100
         BR    WA                  RETURN TO CALLER                 R41 23538200
         EJECT                                                      R41 23538300
*                                                                   R41 23538400
*        SNA LOGON DCT INITIALIZATION AND ACB OPEN SUBROUTINE       R41 23538500
*                                                                   R41 23538600
         SPACE 1                                                    R41 23538700
MLOGSTRT DS    0H                  INITIALIZE SNA LOGON DCT         R41 23538800
        $GETBUF TYPE=VTAM          ACQUIRE AND INIT VTAM BUFFER     R41 23538900
         BZ    MLDCTREL            BRANCH IF FAILED FOR BUFFER      R41 23539000
         ST    R1,DCTBUFAD         STORE BUFFER ADDRESS IN DCT      R41 23539100
         SPACE 1                                                    R41 23539200
         NI    DCTFLAGS,DCTLOGAL   RESET FLAGS -EXCEPT LOGGING      R41 23539300
         MVI   MDCTSTAT,0          RESET LOGON DCT STATUS FLAGS     R41 23539400
         MVI   MDCTRALM,3          SHOW MAX ACTIVE RCV ANY BUF CNT  R41 23539500
         MVI   MDCTRQLM,5          SHOW MAX PRE-FORMATTED RCVS CNT  R41 23539600
*                                   AND GO POST ACB OPEN/CLOSE TASK R41 23539700
         SPACE 2                                                    R41 23539800
*                                                                   R41 23539900
*        VTAM ACB OPEN/CLOSE SUBTASK INTERFACE SUBROUTINE           R41 23540000
*                                                                   R41 23540100
         SPACE 1                                                    R41 23540200
MLOGPOST DS    0H                                                   R41 23540300
         L     R1,$VLOGQUE         GET POINTER OF LOGON DCT QUEUE   R41 23540400
MLOGPLOP ST    R1,MDCTADCT         CHAIN THIS LOGON DCT TO QUEUE    R41 23540500
         CS    R1,MDCT,$VLOGQUE    ATTEMPT TO UPDATE QUEUE POINTER  R41 23540600
         BNE   MLOGPLOP            RETRY IF UNSUCCESSFUL            R41 23540700
         SPACE 1                                                    R41 23540800
         LA    R1,$SNAECB          GET ADDR OF OPEN/CLOSE ACB       R41 23540900
         POST  (1)                  SUBTASK ECB AND POST FOR WORK   R41 23541000
         BR    WA                  RETURN TO CALLER                 R41 23541100
         EJECT                                                      R41 23541200
*                                                                   R41 23541300
*        SNA LOGON DCT TERMINATION AND ACB CLOSE SUBROUTINE         R41 23541400
*                                                                   R41 23541500
         SPACE 1                                                    R41 23541600
MLOGSTOP DS    0H                  TERMINATE SNA LOGON DCTS         R41 23541700
         L     R14,MDCTRQBF        CHECK RECEIVE-AHEAD              R41 23541800
         LTR   R14,R14              BUFFER QUEUE ANCHOR             R41 23541900
         BZ    MLOGSTP1            BRANCH IF NOTHING TO PURGE       R41 23542000
         LA    R1,0(R14)           PURIFY ADDR OF  1ST RPL TO PURGE R41 23542100
MLOGSPRC LR    R15,R14             CURRENT RPL ADDR = NEXT RPL ADDR R41 23542200
         USING RPLDSECT,R15        USE TEMPORARY RPL ADDRESSABILITY R41 23542300
         MVI   RPLRTNCD,USFDAMGE   SIMULATE RETURN CODES FOR        R41 23542400
         MVI   RPLFDB2,USFCLOCC     REQUEST CANCELLED BY CLOSE      R41 23542500
         ICM   R14,15,RPLNEXT      TEST ADDR OF NEXT RPL TO PURGE   R41 23542600
         BNZ   MLOGSPRC            LOOP TILL RECEIVE-AHEAD Q EMPTY  R41 23542700
         L     R0,$RJECHEQ         GET L.M. WORK QUEUE HEAD POINTER R41 23542800
MLOGSLOP ST    R0,RPLNEXT          ADD RPLS TO I/O COMPLETION QUEUE R41 23542900
         CS    R0,R1,$RJECHEQ      ATTEMPT TO UPDATE  QUEUE POINTER R41 23543000
         BNE   MLOGSLOP            RETRY IF UNSUCCESSFUL            R41 23543100
         ST    R14,MDCTRQBF        CLEAR RECEIVE-AHEAD QUE POINTER  R41 23543200
         DROP  R15                 DISCARD TEMP RPL ADDRESSABILITY  R41 23543300
         SPACE 1                                                    R41 23543400
MLOGSTP1 L     R0,MDCTADCT         SAVE ADDR OF NEXT CHAINED DCT    R41 23543500
         LA    R15,MSNALOG-MDCTADCT+DCTDSECT SET UP PHONY LOGON DCT R41 23543600
         SPACE 1                                                    R41 23543700
         USING DCTDSECT,R15        TEMPORARY DCT ADDRESSABILITY     R41 23543800
MLOGSFND L     R1,MDCTADCT         GET ADDR OF NEXT LOGON DCT       R41 23543900
         CLR   R1,MDCT             IS THIS DCT POINTING TO OUR DCT  R41 23544000
         BE    MLOGSDEQ            BRANCH IF THIS IS PRECEDING DCT  R41 23544100
         LTR   R15,R1              CHECK FOR END OF CHAIN           R41 23544200
         BNZ   MLOGSFND            BRANCH TO TEST NEXT LOGON DCT    R41 23544300
         B     M03                 LOGIC ERROR IF DCT NOT FOUND     R41 23544400
MLOGSDEQ ST    R0,MDCTADCT         DISCONNECT DCT FROM CHAIN        R41 23544500
         DROP  R15                 RELEASE TEMPORARY DCT BASE       R41 23544600
         SPACE 1                                                    R41 23544700
         OI    MDCTSTAT,DCTSOFF    INDICATE CLOSE ACB REQUESTED     R41 23544800
         B     MLOGPOST            BRANCH TO POST ACB SUBTASK       R41 23544900
         EJECT                                                      R41 23545000
*                                                                   R41 23545100
*        SNA LINE DCT INITIALIZATION SUBROUTINE                     R41 23545200
*                                                                   R41 23545300
         SPACE 1                                                    R41 23545400
MSNASTRT DS    0H                  INITIALIZE SNA LINE DCTS         R41 23545500
         L     R1,MSNAIDL          GET IDLE SNA LINE DCT PNTR       R41 23545600
         ST    R1,MDCTADCT         CHAIN IDLE LINES TO DCT          R41 23545700
         ST    MDCT,MSNAIDL        UPDATE LINE MANAGER DCT PNTR     R41 23545800
         OI    MSCANIND,MSCNRAT    FORCE RAT AUTOLOGON SCAN         R41 23545900
         BAL   ML,MSMFSTRT         WRITE LINE START SMF RECORD      R41 23546000
         BR    WA                  RETURN TO CALLER                 R41 23546100
         SPACE 3                                                    R41 23546200
*                                                                   R41 23546300
*        SNA LINE DCT TERMINATION SUBROUTINE                        R41 23546400
*                                                                   R41 23546500
         SPACE 1                                                    R41 23546600
MSNASTOP DS    0H                  TERMINATE SNA LINE DCTS          R41 23546700
         BAL   ML,MSMFSTOP         WRITE TERMINATION SMF RECORD     R41 23546800
         L     R0,MDCTADCT         SAVE ADDR OF NEXT CHAINED DCT    R41 23546900
         LA    R15,MSNAIDL-MDCTADCT+DCTDSECT SET UP PHONY LINE DCT  R41 23547000
         SPACE 1                                                    R41 23547100
         USING DCTDSECT,R15        TEMPORARY DCT ADDRESSABILITY     R41 23547200
MSNASNXT L     R1,MDCTADCT         GET ADDR OF NEXT LINE DCT        R41 23547300
         CLR   R1,MDCT             IS THIS DCT POINTING TO OUR DCT  R41 23547400
         BE    MSNASDSC            BRANCH IF THIS IS PRECEDING DCT  R41 23547500
         LTR   R15,R1              CHECK FOR END OF CHAIN           R41 23547600
         BNZ   MSNASNXT            BRANCH TO TEST NEXT LOGON DCT    R41 23547700
         B     M03                 LOGIC ERROR IF DCT NOT FOUND     R41 23547800
MSNASDSC ST    R0,MDCTADCT         DISCONNECT DCT FROM CHAIN        R41 23547900
         DROP  R15                 RELEASE TEMPORARY DCT BASE       R41 23548000
         SPACE 1                                                    R41 23548100
         XC    MDCTADCT,MDCTADCT   CLEAR LINE DCT CHAIN POINTER     R41 23548200
         B     MLDCTFRE            BRANCH TO FREE LINE DCT          R41 23548300
         EJECT                                                      R41 23548400
*                                  ADDRESSABILITY --                R41 23548500
         USING RTAMBSUB,MBASE2,MBASE3    -- COMMON BSC SUBROUTINES  R41 23548600
*                                                                   R41 23548700
*        BSC LINE DCT INITIALIZATION ROUTINE                        R41 23548800
*                                                                   R41 23548900
         SPACE 1                                                    R41 23549000
MBSCSTRT DS    0H                  INITIALIZE BSC LINE DCTS         R41 23549100
        $GETBUF TYPE=BSC,FIX=YES   ACQUIRE AND INIT BSC BUFFER      R41 23549200
         BZ    MLDCTREL            BRANCH IF FAILED FOR BUFFER      R41 23549300
         LR    MBUF,R1             SET UP BUFFER REGISTER           R41 23549400
         ST    MBUF,DCTBUFAD       STORE BUFFER ADDRESS IN DCT      R41 23549500
         USING BUFDSECT,MBUF       SHOW BUFFER ADDRESSABLE          R41 23549600
         SPACE 1                                                    R41 23549700
         L     R1,MBSCACT          GET ACTIVE BSC LINE DCT PNTR     R41 23549800
         ST    R1,MDCTADCT         CHAIN ACTIVE LINES TO OUR DCT    R41 23549900
         ST    MDCT,MBSCACT        UPDATE LINE MANAGER DCT PNTR     R41 23550000
         SPACE 1                                                    R41 23550100
         XC    MDCTCNTS,MDCTCNTS   CLEAR SESSION EVENT COUNTERS     R41 23550200
         BAL   ML,MSMFSTRT         WRITE LINE START SMF RECORD      R41 23550300
         SPACE 1                                                    R41 23550400
MBSCINIT MVI   MSEQTYPE,0          RESET SEQUENCE TYPE FIELD        R41 23550500
         MVI   MDCTERCT,8          RESET ERROR COUNT IN LINE        R41 23550600
         NI    DCTFLAGS,DCTLOGAL   RESET FLAGS -EXCEPT LOGGING      R41 23550700
         MVI   MDCTIMOK,255        SHOW MODEM ON HOOK               R41 23550800
         MVC   LCBMCB,MDCTMODE     SET UP SDA MODE BYTE             R41 23550900
         SPACE 1                                                    R41 23551000
         LA    MCODE,MEBCDIC       ASSUME EBCDIC CODE               R41 23551100
         TM    MDCTLINE,DCTPASCI   TEST CODE TYPE                   R41 23551200
         BZ    MBSCNASC            BRANCH IF EBCDIC                 R41 23551300
         LA    MCODE,MUSASCII      LOAD USASCII CODE                R41 23551400
         SPACE 1                                                    R41 23551500
MBSCNASC LR    R15,MDCT            ASSUME NOT LEASED LINE           R41 23551600
         TM    MDCTSTAT,DCTLEASE   TEST LINE STATUS                 R41 23551700
         BZ    MBSCNLSD            SKIP IF NOT LEASED LINE          R41 23551800
         L     R15,MDCTDCT         GET ADDRESS OF REMOTE DCT        R41 23551900
MBSCNLSD TM    MDCTLINE-DCTDSECT(R15),DCTPTRSP  TEST TRANSPARENCY   R41 23552000
         BZ    MBSCNXPR            BRANCH IF NO TRANSPARENCY        R41 23552100
         LA    MCODE,4(MCODE)      STEP TO TRANSPARENT 1/2 OF TABLE R41 23552200
MBSCNXPR ST    MCODE,MDCTCODE      SET CODE TABLE ADDRESS           R41 23552300
         SPACE 1                                                    R41 23552400
         MVI   TPBRECNT,C'E'       INDICATE EMPTY INPUT BUFFER      R41 23552500
         LA    R0,IOBCCW1          GET ADDRESS OF FIRST CCW         R41 23552600
         SPACE 1                                                    R41 23552700
         LA    R1,MBSCSEQ+MPREPSEQ REQ BSC PREPARE SEQUENCE         R41 23552800
         BAL   ML,MCCWINIT         INITIALIZE CCW'S                 R41 23552900
         BAL   ML,MERREXCP         INITIALIZE LINE I/O              R41 23553000
         SPACE 1                                                    R41 23553100
         BR    WA                  RETURN TO CALLER                 R41 23553200
         SPACE 1                                                    R41 23553300
         DROP  MBUF                RELEASE BUFFER ADDRESSABILITY    R41 23553400
         EJECT                                                      R41 23553500
*                                                                   R41 23553600
*        BSC LINE DCT TERMINATION SUBROUTINE                        R41 23553700
*                                                                   R41 23553800
         SPACE 1                                                    R41 23553900
MBSCSTOP DS    0H                  TERMINATE BSC LINE DCTS          R41 23554000
         SR    R1,R1               SET INITIAL INDEX TO ZERO        R41 23554100
         LA    R14,4               SET INDEX INCREMENT TO 4         R41 23554200
         LA    R15,L'MDCTOTAL-1    GET LOOP TERMINATION INDEX       R41 23554300
MBSCTOTL L     R0,MDCTOTAL(R1)     GET LINE TOTAL EVENT COUNT       R41 23554400
         AL    R0,MDCTCNTS(R1)     ADD SESSION EVENT COUNT          R41 23554500
         ST    R0,MDCTOTAL(R1)     STORE NEW TOTAL COUNT            R41 23554600
         BXLE  R1,R14,MBSCTOTL     LOOP UNTIL ALL COUNTS TOTALED    R41 23554700
         XC    MDCTCNTS,MDCTCNTS   RESET ALL SESSION COUNTS         R41 23554800
         SPACE 1                                                    R41 23554900
         BAL   ML,MSMFSTOP         WRITE TERMINATION SMF RECORD     R41 23555000
         SPACE 1                                                    R41 23555100
         L     R1,DCTBUFAD         LOAD BUFFER ADDR IN R1           R41 23555200
         LTR   R1,R1               TEST BUFFER ADDRESS              R41 23555300
         BZ    MBSCSDEQ            ZERO - GO TO ABNORMAL EXIT       R41 23555400
        $FREEBUF (R1)              FREE THE BUFFER                  R41 23555500
         SPACE 1                                                    R41 23555600
MBSCSDEQ L     R0,MDCTADCT         SAVE ADDR OF NEXT CHAINED LINE   R41 23555700
         LA    R15,MBSCACT-MDCTADCT+DCTDSECT  SET UP PHONY LINE DCT R41 23555800
         SPACE 1                                                    R41 23555900
         USING DCTDSECT,R15        TEMPORARY DCT ADDRESSABILITY     R41 23556000
MBSCSNXT L     R1,MDCTADCT         GET ADDR OF NEXT LINE DCT        R41 23556100
         CLR   R1,MDCT             IS THIS LINE POINTING TO OUR DCT R41 23556200
         BE    MBSCSDSC            BRANCH IF THIS IS PRECEDING DCT  R41 23556300
         LTR   R15,R1              CHECK FOR END OF CHAIN           R41 23556400
         BNZ   MBSCSNXT            BRANCH TO TEST NEXT LINE DCT     R41 23556500
         B     M03                 LOGIC ERROR IF DCT NOT FOUND     R41 23556600
MBSCSDSC ST    R0,MDCTADCT         DISCONNECT OUR DCT FROM CHAIN    R41 23556700
         DROP  R15                 RELEASE TEMPORARY DCT BASE       R41 23556800
         SPACE 1                                                    R41 23556900
         XC    MDCTADCT,MDCTADCT   CLEAR LINE DCT CHAIN POINTER     R41 23557000
         B     MLDCTFRE             DCT AND BRANCH TO FREE LINE     R41 23557100
         SPACE 2                                                    R41 23557200
         DROP  MBASE2,MBASE3       RELEASE SUBROUTINE ADDRESSABILTY R41 23557300
         SPACE 2                                                    R41 23557400
         LTORG                                                      R41 23557500
         TITLE 'HASP LINE MANAGER -- ACTIVE BSC LINE DCT WORK SCAN' R41 23557600
*********************************************************************** 23557700
*                                                                     * 23557800
*        LINE MANAGER - ACTIVE BSC LINE DCT SCAN ROUTINE              * 23557900
*                                                                     * 23558000
*********************************************************************** 23558100
         SPACE 1                                                    R41 23558200
*                                  ADDRESSABILITY --                R41 23558300
         USING DCTDSECT,MDCT           -- LINE DCT                  R41 23558400
         USING RTAMBSUB,MBASE2,MBASE3  -- COMMON SNA SUBROUTINES    R41 23558500
         USING MDCTSCAN,MBASE1         -- LOCAL ROUTINE BASE        R41 23558600
         SPACE 1                                                    R41 23558700
MDCTSCAN DS    0H                                                   R41 23558800
         SPACE 2                                                    R41 23558900
*                                                                   R41 23559000
*        PROPAGATE JOB POST EVENT                                   R41 23559100
*                                                                   R41 23559200
         SPACE 1                                                    R41 23559300
         TM    MEVNTIND,MEVNPJOB   TEST FOR JOB POST EVENT          R41 23559400
         BNO   MBACTIME            BRANCH IF NOT                    R41 23559500
         OI    MDCTATTN,MDCTJOB    SHOW THIS POSTED FOR JOB         R41 23559600
         EJECT                                                      R41 23559700
*                                                                   R41 23559800
*        BSC LINE DCT TIMER SERVICE SCAN                            R41 23559900
*                                                                   R41 23560000
         SPACE 1                                                    R41 23560100
MBACTIME TM    MEVNTIND,MEVNTIME   CHECK FOR TIMER INTERV EXPIRED   R41 23560200
         BZ    MBACTDSC            BRANCH IF NO TIMER SERVICE REQ   R41 23560300
         TM    MDCTATTN,MDCTIMER   DOES THIS DCT REQ TIMER SERVICE  R41 23560400
         BZ    MBACTDSC            CHECK FOR DISC INTERVAL IF NOT   R41 23560500
         SPACE 1                                                    R41 23560600
         L     MBUF,DCTBUFAD       GET ADDRESS OF BUFFER AND        R41 23560700
         USING BUFDSECT,MBUF        SHOW ADDRESSABILITY             R41 23560800
         L     MCODE,MDCTCODE      GET ADDRRESS OF CODE TABLE AND   R41 23560900
         USING MCODSECT,MCODE       SHOW ADDRESSABILITY             R41 23561000
         SPACE 1                                                    R41 23561100
         LA    ML,MBACTXCP         GET ADDR OF TIMED EXCP ROUTINE   R41 23561200
         TM    MSEQTYPE,MBSCSEQ+MCPUSEQ CHECK CCW SEQUENCE TYPE     R41 23561300
         BNO   MABORT              ABORT AND RESTART HARDWARE TERM  R41 23561400
         CLI   TPBRECNT,C'E'       TEST INPUT BUFFER STATUS         R41 23561500
         BE    MBACTXCP            BRANCH IF INPUT BUFFER IS EMPTY  R41 23561600
         TM    MDCTLINE,DCTPCTC    TEST FOR CTCA                    R41 23561700
         BZ    MTIMEWAB            SET BSC WAIT-A-BIT               R41 23561800
         SPACE 1                                                    R41 23561900
         MVC   IOBCCW2(8),IOBCCW6  MOVE WRITE CCW                   R41 23562000
         LA    R1,IOBCCW5          SET                              R41 23562100
         ST    R1,IOBCCW2           UP                              R41 23562200
         MVI   IOBCCW2,X'01'         A                              R41 23562300
         LA    R1,6                   NULL                          R41 23562400
         STH   R1,IOBCCW2+6            WAIT-                        R41 23562500
         LA    R1,IOBCCW7               A-                          R41 23562600
         ST    R1,IOBCCW4                BIT                        R41 23562700
         MVI   IOBCCW4,X'02'              SEQUENCE                  R41 23562800
         MVC   IOBCCW4+5(9),MWABTSEQ       FOR                      R41 23562900
         MVC   IOBCCW5(2),MSTXSEQ           CTC                     R41 23563000
         B     MBACTXCP                      RESPONSE               R41 23563100
         SPACE 1                                                    R41 23563200
MTIMEWAB MVC   IOBCCW2(4*8),IOBCCW5   NO,                           R41 23563300
         LA    R1,IOBCCW6            A NULL                         R41 23563400
         ST    R1,IOBCCW3             WAIT-A-BIT                    R41 23563500
         MVI   IOBCCW3,X'01'           SEQUENCE                     R41 23563600
         LA    R1,6                     FOR                         R41 23563700
         STH   R1,IOBCCW3+6              RESPONSE                   R41 23563800
         LA    R1,IOBCCW7                 TO                        R41 23563900
         ST    R1,IOBCCW5                  MULTI-                   R41 23564000
         MVI   IOBCCW5,X'02'                LEAVING                 R41 23564100
         MVC   IOBCCW5+5(9),MWABTSEQ         RJE                    R41 23564200
         MVC   IOBCCW6(2),MSTXSEQ             TERMINAL              R41 23564300
         SPACE 1                                                    R41 23564400
MBACTXCP MVC   IOBSTART,IOBRESTR   SET UP ADDRESS OF 1ST CCW        R41 23564500
         BAL   ML,MERREXCP         INITIATE CCW PROGRAM             R41 23564600
         B     MBACTNXT            BRANCH TO SCAN NEXT LINE DCT     R41 23564700
         EJECT                                                      R41 23564800
*                                                                   R41 23564900
*        BSC DISCONNECT INTERVAL SCAN                               R41 23565000
*                                                                   R41 23565100
         SPACE 1                                                    R41 23565200
MBACTDSC DS    0H                                                   R41 23565300
         TM    MEVNTIND,MEVNDISC   CHECK FOR DISC INTERV EXPIRED    R41 23565400
         BZ    MBACTNXT            BRANCH IF NO DISC SEARCH REQ     R41 23565500
         SPACE 2                                                    R41 23566000
         L     WA,MDCTRAT          GET ADDR OF REMOTES RAT ENTRY    R41 23566100
         USING RATDSECT,WA         TEMPORARY RAT ADDRESSABILITY     R41 23566200
         SPACE 1                                                    R41 23566300
         LA    R1,2                ASSUME 64 SECOND DISC INTERVAL   R41 23566400
         LTR   WA,WA               IS A REMOTE CONNECTED TO LINE    R41 23566500
         BZ    MBACTNON            SKIP IF NO REMOTE SIGNED ON      R41 23566600
         IC    R1,RATDINTV         GET DISCONN INTERVAL FROM RAT    R41 23566700
         SPACE 1                                                    R41 23566800
MBACTNON SLA   R1,5                MULTIPLY BY 32 TO GET MINUTES    R41 23566900
         BZ    MBACTNXT            BRANCH IF INTERVAL IS ZERO       R41 23567000
         AL    R1,MDCTIMOK         ADD LAST TEXT TRANSMISSION TIME  R41 23567100
         CL    R1,MCLOCK           COMPARE WITH CURRENT TIME STAMP  R41 23567200
         BH    MBACTNXT            BRANCH IF INTERVAL NOT EXPIRED   R41 23567300
         SPACE 1                                                    R41 23567400
         OI    MDCTSTAT,DCTSOFF    FORCE REMOTE SIGNOFF ACTION      R41 23567500
         OI    DCTFLAGS,DCTRSTRT   REQUEST LINE RESTART ACTION      R41 23567600
         SPACE 1                                                    R41 23567700
         DROP  WA                  RELEASE TEMPORARY RAT BASE       R41 23567800
         SPACE 2                                                    R41 23567900
MBACTNXT L     MDCT,MDCTADCT       GET ADDR OF NEXT LINE DCT        R41 23568000
         LTR   MDCT,MDCT           CHECK FOR END OF CHAIN           R41 23568100
         BNZ   MDCTSCAN            BRANCH TO PROC LINE IF NOT END   R41 23568200
         B     MSCANEXT             ELSE DO NEXT SCAN               R41 23568300
         SPACE 2                                                    R41 23568400
         DROP  MBASE1,MBASE2,MBASE3  RELEASE ROUTINE AND            R41 23568500
         DROP  MCODE,MDCT             DATA AREA ADDRESSABILITY      R41 23568600
         TITLE 'HASP LINE MANAGER -- ACTIVE SNA LOGON DCT SCAN'     R41 23568700
*********************************************************************** 23568800
*                                                                     * 23568900
*                 ACTIVE SNA LOGON DCT SCAN ROUTINE                   * 23569000
*                                                                     * 23569100
*********************************************************************** 23569200
         SPACE 1                                                    R41 23569300
*                                  ADDRESSABILITY --                R41 23569400
         USING DCTDSECT,MDCT            -- LOGON DCT                R41 23569500
         USING RTAMVSUB,MBASE2,MBASE3   -- COMMON SNA SUBROUTINES   R41 23569600
         USING MSALGSCN,MBASE1          -- LOCAL ROUTINE BASE       R41 23569700
         SPACE 2                                                    R41 23569800
MSALGSCN DS    0H                  SCAN SNA LOGON/LINE DCTS         R41 23569900
         SPACE 1                                                    R41 23570000
*                                                                   R41 23570100
*        $P / $E LOGON COMMAND SCAN ROUTINE                         R41 23570200
*                                                                   R41 23570300
         SPACE 1                                                    R41 23570400
MSLOGCMD MVC   MWORKQUE,MDCTADCT   SAVE ADDR OF NEXT LOGON DCT      R41 23570500
         L     MICE,MDCTICE        GET ADDR OF 1ST LOGGED ON ICE    R41 23570600
         LTR   MICE,MICE           CHECK FOR ANY ICE LOGGED ON      R41 23570700
         USING ICEDSECT,MICE       ESTABLISH ICE ADDRESSABILITY     R41 23570800
         BNZ   MSLOGRST            BRANCH TO TEST FOR RSTRT IF YES  R41 23570900
         TM    DCTSTAT,DCTDRAIN    CHECK FOR DRAIN STATUS PENDING   R41 23571000
         BO    MSLGNDRN            BRANCH TO CLOSE ACB IF DRAINING  R41 23571100
         TM    DCTFLAGS,DCTRSTRT   CHECK FOR RESTART PENDING        R41 23571200
         BZ    MSLOGNXT            BRANCH TO SCAN NEXT DCT IF NOT   R41 23571300
MSLGNDRN BAL   WA,MLOGSTOP         ENTER TERMINATION SUBROUTINE     R41 23571400
         B     MSLOGNXT            BRANCH TO PROCESS NEXT DCT       R41 23571500
         SPACE 1                                                    R41 23571600
MSLOGRST TM    DCTFLAGS,DCTRSTRT   CHECK FOR RESTART PENDING        R41 23571700
         BZ    MSLOGNXT            BRANCH TO SCAN NEXT DCT IF NOT   R41 23571800
MSLGKICE MVC   MBUFQUE,ICEAPCHN    SAVE ADDR OF NEXT LOGGED-ON ICE  R41 23571900
         BAL   ML,MICEABRT         CALL SESSION ABORT SUBROUTINE    R41 23572000
         L     MICE,MBUFQUE        GET  ADDR OF NEXT LOGGED-ON ICE  R41 23572100
         LTR   MICE,MICE           TEST FOR END OF CHAIN            R41 23572200
         BNZ   MSLGKICE            BRANCH TO ABORT ICE IF NOT       R41 23572300
         SPACE 1                                                    R41 23572400
         DROP  MICE                RELEASE ICE ADDRESSABILTY        R41 23572500
         SPACE 2                                                    R41 23572600
MSLOGNXT L     MDCT,MWORKQUE       GET ADDRESS OF NEXT LOGON DCT    R41 23572700
         LTR   MDCT,MDCT           CHECK FOR END OF CHAIN           R41 23572800
         BNZ   MSLOGCMD            PROCESS LOGON DCT IF NOT         R41 23572900
         B     MSCANEXT             ELSE, DO NEXT SCAN              R41 23573000
         SPACE 2                                                    R41 23573100
         DROP  MBASE1,MBASE2,MBASE3  RELEASE ROUTINE AND            R41 23573200
         DROP  MDCT                   LOGON DCT ADDRESSABILITY      R41 23573300
         TITLE 'HASP LINE MANAGER -- ACTIVE SNA LINE DCT SCAN'      R41 23573400
*********************************************************************** 23573500
*                                                                     * 23573600
*                   SNA ACTIVE LINE DCT SCAN ROUTINE                  * 23573700
*                                                                     * 23573800
*********************************************************************** 23573900
         SPACE 1                                                    R41 23574000
*                                  ADDRESSABILITY --                R41 23574100
         USING DCTDSECT,MDCT            -- LINE DCT                 R41 23574200
         USING RTAMVSUB,MBASE2,MBASE3   -- COMMON SNA SUBROUTINES   R41 23574300
         USING MSLNESCN,MBASE1          -- LOCAL ROUTINE BASE       R41 23574400
         SPACE 2                                                    R41 23574500
MSLNESCN DS    0H                  SCAN ALLOCATED SNA LINES         R41 23574600
         SPACE 1                                                    R41 23574700
MSLNECMD MVC   MWORKQUE,MDCTADCT   SAVE NEXT ACTIVE LINE DCT ADDR   R41 23574800
         L     MICE,MDCTICE        GET ADDR OF 1ST ALLOCATED ICE    R41 23574900
         USING ICEDSECT,MICE       SHOW ICE ADDRESSABLE             R41 23575000
         SPACE 2                                                    R41 23575100
*                                                                   R41 23575200
*        SNA ACTIVE LINE DCT - $E COMMAND AND DISCONNECT INTERVAL   R41 23575300
*                                         SCAN ROUTINE              R41 23575400
*                                                                   R41 23575500
         SPACE 1                                                    R41 23575600
         TM    DCTFLAGS,DCTRSTRT   CHECK FOR RESTART PENDING        R41 23575700
         BO    MSLNERST            ABORT ALL ACTIVITY IF YES        R41 23575800
         TM    MEVNTIND,MEVNDISC   CHECK FOR DISC INTERVAL EXPIRED  R41 23575900
         BZ    MSLNEJOT            GO TEST IF OUTPUT PRESENT IF NOT R41 23576000
         SPACE 1                                                    R41 23576100
         L     R1,MDCTRAT          GET ADDR OF REMOTES RAT ENTRY    R41 23576200
         SLR   R0,R0                      CLEAR REGISTER AND GET    R41 23576300
         IC    R0,RATDINTV-RATDSECT(,R1)   REMOTES DISC INTERVAL    R41 23576400
         SLA   R0,5                MULTIPLY BY 32 TO GET MINUTES    R41 23576500
         BZ    MSLNEJOT            BRANCH IF DISC CHECK DISABLED    R41 23576600
         AL    R0,MDCTIMOK         ADD LAST DATASET TRANSMISSION    R41 23576700
         CL    R0,MCLOCK            TIME AND CHECK AGAINST INTERVAL R41 23576800
         BH    MSLNEJOT            BRANCH IF INTERVAL NOT EXPIRED   R41 23576900
         SPACE 2                                                    R41 23577000
MSLNERST MVC   MBUFQUE,ICEALCHN    SAVE ADDR OF NEXT ALLOCATED ICE  R41 23577100
         BAL   ML,MICEABRT         CALL SESSION ABORT SUBROUTINE    R41 23577200
         L     MICE,MBUFQUE        GET  ADDR OF NEXT ALLOCATED ICE  R41 23577300
         LTR   MICE,MICE           TEST FOR END OF CHAIN            R41 23577400
         BNZ   MSLNERST            BRANCH TO ABORT ICE IF NOT       R41 23577500
         B     MSLNENXT            BRANCH TO PROCESS NEXT LINE      R41 23577600
         EJECT                                                      R41 23577700
*                                                                   R41 23577800
*        SNA ACTIVE LINE DCT SCAN - SESSION OUTBOUND ALLOCATION,    R41 23577900
*            SESSION SUB-SCAN       ACTIVATE RMT DEVICES WHEN WORK  R41 23578000
*                                   AND SESSION AVAILABLE           R41 23578100
         SPACE 1                                                    R41 23578200
MSLNEJOT TM    MEVNTIND,MEVNPJOB   TEST FOR JOB POST EVENT          R41 23578300
         BZ    MSLNETIM            CHECK FOR TIMER EVENT IF NOT     R41 23578400
         OI    MDCTATTN,MDCTJOB2   SET OUTPUT POST REQUEST INDIC    R41 23578500
         SPACE 2                                                    R41 23578600
*        LOCATE AVAILABLE SESSIONS                                  R41 23578700
         SPACE 1                                                    R41 23578800
MSLNETIM TM    MEVNTIND,MEVNTIME   TEST FOR TIMER INTERV EXPIRED    R41 23578900
         BZ    MSLNENXT            SCAN NEXT LINE DCT IF NOT        R41 23579000
         OI    MSTQE+IPOST,X'20'   REQUEST NEXT TIMER INTERVAL      R41 23579100
         SPACE 2                                                    R41 23579200
         LR    ML,MDCT             LOAD PHONY REMOTE DCT ADDRESS    R41 23579300
         NI    MDCTATTN,255-MDCTJOB1 RESET ANY SESSION IDLE INDIC   R41 23579400
         SPACE 1                                                    R41 23579500
MSLNTWTM TM    ICESTAT,ICETIMER    TEST FOR SESSION WAIT TIME REQ   R41 23579600
         BZ    MSLNTUSE            BRANCH TO CHECK USAGE IF NOT     R41 23579700
         SPACE 1                                                    R41 23579800
         L     R1,ICEWTIME         GET INTERVAL EXPIRATION TIME     R41 23579900
         CL    R1,MCLOCK           IS WAIT TIME INTERVAL ELAPSED    R41 23580000
         BH    MSLNTICE            WAIT FOR NEXT TIMER POP IF NOT   R41 23580100
         NI    ICESTAT,255-ICETIMER  RESET WAIT TIME INDICATOR      R41 23580200
         SPACE 2                                                    R41 23580300
MSLNTUSE TM    ICESTAT,ICEAVAIL    CHECK ICE ALLOCATION STATUS      R41 23580400
         BNZ   MSLNTICE            BRANCH IF ICE NOT AVAILABLE      R41 23580500
         ICM   R1,7,ICERDCT+1      TEST PREALLOCATION STATUS   @OZ29412 23580520
         BNZ   MSLNTICE            BRANCH IF PREALLOCATED      @OZ29412 23580540
         TM    ICEFLAGS,ICEOUTBD+ICEINBRK CHECK SESSION USAGE       R41 23580600
         BM    MSLNTICE            BRANCH IF ANY PATH IN USE        R41 23580700
         SPACE 1                                                    R41 23580800
         TM    MDCTSTAT,DCTSOFF    TEST FOR RMT SIGNING OFF         R41 23580900
         BZ    MSLNTCHK            NO, KEEP LOOKING FOR WORK        R41 23581000
         MVC   MBUFQUE,ICEALCHN    SAVE ADDRESS OF NEXT ICE         R41 23581100
         BAL   ML,MICEABRT         AND REMOVE IDLE SESSION          R41 23581200
         L     MICE,MBUFQUE        RELOAD ADDRESS OF NEXT ICE       R41 23581300
         B     MSLNNICE            GO PROCESS NEXT ICE              R41 23581400
         SPACE 1                                                    R41 23581500
MSLNTCHK TM    MDCTATTN,MDCTJOB2   TEST FOR ANY OUTPUT QUEUED       R41 23581600
         BZ    MSLNTIDL            SHOW IDLE SESSION IF NOT         R41 23581700
         EJECT                                                      R41 23581800
*        SCAN FOR QUEUED OUTPUT -- SESSION AVAILALBLE               R41 23581900
         SPACE 1                                                    R41 23582000
         USING DCTDSECT,ML         TEMP REMOTE DCT ADDRESSABILITY   R41 23582100
MSLNTDCT L     ML,MDCTDCT          GET ADDR OF NEXT REMOTE DCT      R41 23582200
         LTR   ML,ML               CHECK FOR END OF DCT CHAIN       R41 23582300
         BZ    MSLNTNOT            BRANCH IF YES                    R41 23582400
         SPACE 1                                                    R41 23582500
         TM    MDCTSTAT,DCTPOST    CHECK IF THIS DCT ALREADY POSTED R41 23582600
         BO    MSLNTDCT            YES, BRANCH TO TRY NEXT DCT      R41 23582700
         TM    DCTSTAT,DCTDRAIN+DCTINUSE TEST DEVICE AVAILABILITY   R41 23582800
         BNZ   MSLNTDCT            SCAN NEXT DCT IF NOT AVAILABLE   R41 23582900
         SPACE 1                                                    R41 23583000
         CLI   DCTDEVTP,DCTPRPU    TEST FOR OUTPUT OR CNSLE         R41 23583100
         BL    MSLNTDCT            BRANCH IF NOT, TRY NEXT DEVICE   R41 23583200
         CLI   DCTDEVTP,DCTRPU     TEST FOR REMOTE PUNCH            R41 23583300
         BE    MSLNJGET            BRANCH IF YES, GO LOOK FOR WORK  R41 23583400
         CLI   DCTDEVTP,DCTRCON    IF NOT REMOTE CONSOLE DCT        R41 23583500
         BNE   MSLNTDC1             GO TEST FOR SEPARATOR PAGE      R41 23583600
         SPACE 1                                                    R41 23583700
         L     R15,MDCTICE         IF REMOTE CONSOLE                R41 23583800
         LTR   R15,R15              NOT PREALLOCATED                R41 23583900
         BZ    MSLNMSG1              GO TEST FOR MESSAGES           R41 23584000
         USING ICEDSECT,R15        GET TEMPORARY ICE ADDRESSABILITY R41 23584100
         NI    ICEFLGS2,255-ICEOUTBK  RESET OUTBD-OUTBD INTRP  @OZ29180 23584200
         MVC   ICESDCT,MDCTSDCT    REMOVE FROM OTHER ICE'S SUSP QUE R41 23584300
         DROP  R15                 DISCARD TEMP ICE ADDRESSABILITY  R41 23584400
         SLR   R15,R15             CLEAR POINTERS TO                R41 23584500
         ST    R15,MDCTICE          PREALLOCATED ICE                R41 23584600
         ST    R15,MDCTSDCT          AND SUSPEND QUEUE              R41 23584700
         B     MSLNMSG1            GO SEE IF MESSAGES STILL THERE   R41 23584800
         SPACE 1                                                    R41 23584900
MSLNTDC1 TM    DCTPPSW,DCTPPSWS    IF SEPARATOR PAGE SUPPRESSED     R41 23585000
         BO    MSLNJGET             GO TEST FOR JOB OUTPUT          R41 23585100
         L     R1,MDCTRAT-DCTDSECT(,MDCT) POINT TO RAT              R41 23585200
         TM    RATCONF-RATDSECT(R1),RATCONFC  TEST FOR CONSOLE      R41 23585300
         BO    MSLNJGET            BRANCH IF SUPPORTED              R41 23585400
         SPACE 1                                                    R41 23585500
MSLNMSGS SLR   R15,R15             MULTIPLY                         R41 23585600
MSLNMSG1 IC    R15,DCTNO+1          REMOTE NUMBER                   R41 23585700
         LA    R1,0(R15,R15)         BY THREE TO                    R41 23585800
         ALR   R1,R15                 GET ADDRESS OF                R41 23585900
         AL    R1,$MSPOOLQ             MSG QUEUE ENTRY              R41 23586000
         CLC   1(1,R1),0(R1)       CHECK FOR SPOOLED OUTPUT         R41 23586100
         BNE   MSLNSDEV            YES, BRANCH - START DEVICE       R41 23586200
         SPACE 1                                                    R41 23586300
         CLI   DCTDEVTP,DCTRCON    TEST FOR REMOTE CONSOLE          R41 23586400
         BE    MSLNTDCT            BR IF YES, IGNORE PRINTER WORK   R41 23586500
         SPACE 1                                                    R41 23586600
MSLNJGET $#GET DCT=(ML),HAVE=NO    TEST FOR QUEUED OUTPUT           R41 23586700
         BZ    MSLNTDCT            NO - TRY NEXT REMOTE DCT         R41 23586800
         EJECT                                                      R41 23586900
*        IF QUEUED OUTPUT AND AVAILABLE SESSION -- START DEVICE     R41 23587000
         SPACE 1                                                    R41 23587100
MSLNSDEV NI    DCTSTAT,255-DCTHOLD MARK DCT AVAILABLE               R41 23587200
         OI    MDCTSTAT,DCTPOST    SHOW DCT POSTED                  R41 23587300
         ST    MICE,MDCTICE        SAVE ICE ADDR FOR OPEN           R41 23587400
         ST    ML,ICERDCT          SAVE PRE-ALLOCATED DCT IN ICE    R41 23587500
         L     R1,DCTPCE           GET ADDR OF PCE                  R41 23587600
        $POST  (R1),WORK           POST PCE FOR WORK                R41 23587700
         B     MSLNTIDL            BRANCH TO INDIC IDLE SESSION     R41 23587800
         DROP  ML                  DROP REMOTE DCT ADDRESSABILITY   R41 23587900
         EJECT                                                      R41 23588000
MSLNTNOT NI    MDCTATTN,255-MDCTJOB2  RESET OUTPUT QUEUED SWITCH    R41 23588100
         SPACE 1                                                    R41 23588200
MSLNTIDL OI    MDCTATTN,MDCTJOB1   SET ANY SESSION IDLE INDICATOR   R41 23588300
         SPACE 1                                                    R41 23588400
*                                                                   R41 23588500
*        SNA ACTIVE LINE DCT SCAN  - INTERRUPT OUTBOUND SESSION     R41 23588600
*        CONSOLE PRE-EMPT SUB-SCAN       FOR CONSOLE OUTPUT         R41 23588700
*                                                                   R41 23588800
         SPACE 1                                                    R41 23588900
MSLNTICE L     MICE,ICEALCHN       GET ADDR OF NEXT ALLOC ICE       R41 23589000
MSLNNICE LTR   MICE,MICE           CHECK FOR END OF ICE CHAIN       R41 23589100
         BNZ   MSLNTWTM            BRANCH TO CHECK NEW ICE          R41 23589200
         SPACE 1                                                    R41 23589300
         L     ML,MDCTDCT          POINT TO FIRST REMOTE DCT        R41 23589400
         USING DCTDSECT,ML         TEMPORARY DCT ADDRESSABILITY     R41 23589500
         CLI   DCTDEVTP,DCTRCON    TEST DEVICE TYPE                 R41 23589600
         BNE   MSLNENXT            BRANCH IF NO CONSOLE, NEXT LINE  R41 23589700
         TM    MDCTSTAT,DCTPOST    IF CONSOLE ALREADY POSTED        R41 23589800
         BO    MSLNENXT             GO TEST NEXT LINE               R41 23589900
         CL    MICE,MDCTICE        IF CONSOLE ALREADY PREALLOCATED  R41 23590000
         BNE   MSLNENXT             GO TEST NEXT LINE               R41 23590100
         SPACE 1                                                    R41 23590200
         SLR   R15,R15             MULTIPLY                         R41 23590300
         IC    R15,DCTNO+1          REMOTE NUMBER                   R41 23590400
         LA    R1,0(R15,R15)         BY THREE TO                    R41 23590500
         ALR   R1,R15                 GET ADDRESS OF                R41 23590600
         AL    R1,$MSPOOLQ             MSG QUEUE ENTRY              R41 23590700
         CLC   1(1,R1),0(R1)       CHECK FOR SPOOLED OUTPUT         R41 23590800
         BE    MSLNENXT            IF NONE GO TEST NEXT LINE        R41 23590900
         DROP  ML                  DISCARD TEMP DCT ADDRESSABILITY  R41 23591000
         L     MICE,MDCTICE        POINT TO FIRST ICE               R41 23591100
         SPACE 1                                                    R41 23591200
MSLNTIC1 TM    ICESTAT,ICEAVAIL-ICEALLOC  IF ICE NOT AVAILABLE      R41 23591300
         BNZ   MSLNICE                     GO TEST NEXT ICE         R41 23591400
         TM    ICEFLAGS,ICEOUTBD   IF ICE NOT ALLOCATED OUTBOUND    R41 23591500
         BNO   MSLNICE              GO TEST NEXT ICE                R41 23591600
         USING DCTDSECT,ML         RE-APPLY TEMP DCT ADDRESSABILITY R41 23591700
         ST    MICE,MDCTICE        SAVE ICE ADDRESS FOR OPEN        R41 23591800
         MVC   MDCTSDCT,ICESDCT    PLACE CONSOLE DCT ON             R41 23591900
         ST    ML,ICESDCT           FRONT OF SUSPEND QUEUE          R41 23592000
         OI    ICEFLGS2,ICEOUTBK   FLAG OUTBD-OUTBD INTERRUPT  @OZ29180 23592100
         DROP  ML                  DISCARD TEMP DCT ADDRESSABILITY  R41 23592200
         B     MSLNENXT            GO TEST NEXT LINE                R41 23592300
         SPACE 1                                                    R41 23592400
MSLNICE  L     MICE,ICEALCHN       GET NEXT ICE ADDRESS             R41 23592500
         LTR   MICE,MICE           TEST FOR END OF CHAIN            R41 23592600
         BNZ   MSLNTIC1            BRANCH IF NOT                    R41 23592700
         DROP  MICE                RELEASE ICE ADDRESSABILITY       R41 23592800
         SPACE 1                                                    R41 23592900
MSLNENXT L     MDCT,MWORKQUE       GET ADDR OF NEXT LINE DCT        R41 23593000
         LTR   MDCT,MDCT           CHECK FOR END OF CHAIN           R41 23593100
         BNZ   MSLNECMD            PROCESS LINE DCT IF NOT          R41 23593200
         B     MSCANEXT             ELESE GO DO NEXT SCAN           R41 23593300
         SPACE 2                                                    R41 23593400
         DROP  MBASE1,MBASE2,MBASE3  RELEASE ROUTINE                R41 23593500
         DROP  MDCT                   AND DCT ADDRESSABILITY        R41 23593600
         TITLE 'HASP LINE MANAGER -- IDLE SNA LINE DCT SCAN'        R41 23593700
*********************************************************************** 23593800
*                                                                     * 23593900
*                       SNA IDLE LINE DCT SCAN                        * 23594000
*                                                                     * 23594100
*********************************************************************** 23594200
         SPACE 1                                                    R41 23594300
*                                  ADDRESSABILITY --                R41 23594400
         USING DCTDSECT,MDCT            -- LINE DCT                 R41 23594500
         USING RTAMVSUB,MBASE2,MBASE3   -- COMMON SNA SUBROUTINES   R41 23594600
         USING MSIDLSCN,MBASE1          -- LOCAL ROUTINE BASE       R41 23594700
         SPACE 2                                                    R41 23594800
MSIDLSCN DS    0H                  SCAN IDLE SNA LINE DCTS          R41 23594900
         SPACE 2                                                    R41 23595000
*                                                                   R41 23595100
*        CHECK FOR $P LNE COMMAND                                   R41 23595200
*                                                                   R41 23595300
         SPACE 1                                                    R41 23595400
MSIDLCMD MVC   MWORKQUE,MDCTADCT   SAVE NEXT IDLE LINE DCT ADDR     R41 23595500
         TM    DCTSTAT,DCTDRAIN    CHECK FOR DRAIN STATUS PENDING   R41 23595600
         BZ    MSIDLNDR            SKIP IF NO DRAIN REQ OUTSTANDING R41 23595700
         BAL   WA,MSNASTOP         ENTER TERMINATION SUBROUTINE     R41 23595800
         SPACE 1                                                    R41 23595900
MSIDLNDR L     MDCT,MWORKQUE       GET ADDR OF NEXT IDLE LINE       R41 23596000
         LTR   MDCT,MDCT           CHECK FOR END OF CHAIN           R41 23596100
         BNZ   MSIDLCMD            PROCESS LINE DCT IF NOT          R41 23596200
         B     MSCANEXT             ELSE, GO DO NEXT SCAN           R41 23596300
         SPACE 2                                                    R41 23596400
         DROP  MBASE1,MBASE2,MBASE3  RELEASE ROUTINE AND            R41 23596500
         DROP  MDCT                     DCT ADDRESSABILITY          R41 23596600
         TITLE 'HASP LINE MANAGER -- INACTIVE DCT SCAN'             R41 23596700
*********************************************************************** 23597100
*                                                                     * 23597200
*             INACTIVE DCT (BSC/SNA - LNE/LGN) SCAN                   * 23597300
*                                                                     * 23597400
*                      ($S COMMAND PROCESSING)                        * 23597500
*                                                                     * 23597600
*********************************************************************** 23597700
         SPACE 1                                                    R41 23597800
*                                  ADDRESSABILITY --                R41 23597900
         USING RTAMBSUB,MBASE2,MBASE3    -- COMMON BSC SUBROUTINES  R41 23598000
         USING MUNITSCN,MBASE1           -- LOCAL ROUTINE BASE      R41 23598100
         SPACE 2                                                    R41 23598200
MUNITSCN DS    0H                                                   R41 23598300
         SPACE 2                                                    R41 23598400
*                                                                   R41 23598500
*        SCAN FOR STARTED LOGON DCTS                                R41 23598600
*                                                                   R41 23598700
         SPACE 1                                                    R41 23598800
         L     MDCT,$LOGNDCT       GET ADDR OF FIRST LOGON DCT      R41 23598900
         USING DCTDSECT,MDCT        AND SHOW ADDRESSABLE            R41 23599000
         LTR   MDCT,MDCT           CHECK FOR ANY LOGON DCT THERE    R41 23599100
         BZ    MUNITNLG            BRANCH IF NOT GENERATED           R4 23599500
         SPACE 1                                                     R4 23600000
MUNITLOG BAL   WA,MLDCTGET         TRY TO GET AND INIT LOGON DCT     R4 23600500
         L     MDCT,DCTCHAIN       GET ADDRESS OF NEXT LOGON DCT     R4 23601000
         LA    MDCT,0(,MDCT)       PURIFY DCT ADDRESS               R41 23601100
         LTR   MDCT,MDCT           CHECK FOR END OF DCT CHAIN        R4 23601500
         BZ    MUNITNLG            BRANCH IF NO MORE LOGON DCTS      R4 23602000
         CLI   DCTDEVTP,DCTLOG     IS THIS STILL A LOGON DCT         R4 23602500
         BE    MUNITLOG            BRANCH TO GET DCT IF YES          R4 23603000
         SPACE 2                                                     R4 23603500
*                                                                   R41 23604100
*        SCAN FOR STARTED LINE DCTS                                 R41 23604200
*                                                                   R41 23604300
         SPACE 1                                                    R41 23604400
MUNITNLG L     MDCT,$LNEDCT        GET ADDRESS OF FIRST LINE DCT    R41 23604500
MUNITLNE BAL   WA,MLDCTGET         TRY TO GET AND INIT LINE DCT     R41 23604600
         L     MDCT,DCTCHAIN       GET ADDRESS OF NEXT DCT           R4 23605000
         LA    MDCT,0(,MDCT)       PURIFY DCT ADDRESS               R41 23605100
         LTR   MDCT,MDCT           CHECK FOR END OF DCT CHAIN       R41 23605600
         BZ    MSCANEXT            BRANCH IF YES, GO DO NEXT SCAN   R41 23605700
         CLI   DCTDEVTP,DCTLNE     IS THIS STILL A LINE DCT         R41 23605800
         BE    MUNITLNE            BRANCH TO GET LINE DCT IF YES    R41 23605900
         SPACE 2                                                     R4 23607500
         B     MSCANEXT            ELSE, GO DO NEXT SCAN            R41 23608000
         SPACE 1                                                    R41 23618500
         DROP  MBASE1,MBASE2,MBASE3  RELEASE CODE ADDRESSABILITY    R41 23628500
         TITLE 'HASP LINE MANAGER -- LOGON DCT EXIT AND ACB SUBTASK COMC23698500
               PLETION SCAN'                                        R41 23699000
*********************************************************************** 23699100
*                                                                     * 23699200
*        LOGON DCT EXIT SERVICE AND ACB SUBTASK COMPLETION SCAN       * 23699300
*                                                                     * 23699400
*********************************************************************** 23699500
         SPACE 1                                                    R41 23699600
*                                  ADDRESSABILITY -                 R41 23699700
         USING DCTDSECT,MDCT             LOGON DCT                  R41 23699800
         USING RTAMVSUB,MBASE2,MBASE3    COMMON SNA SUBROUTINES     R41 23699900
         USING MLOGPROC,MBASE1           LOCAL ROUTINE BASE         R41 23700000
         SPACE 2                                                    R41 23700100
MLOGPROC DS    0H                                                   R41 23700200
         SLR   R0,R0               GET ZERO FOR CLEARING            R41 23700300
MLOGPDEQ CS    MDCT,R0,MLOGQUE     ATTEMPT TO ACQUIRE               R41 23700400
         BNE   MLOGPDEQ            BR IF NO, RETRY                  R41 23700500
         ST    MDCT,MWORKQUE        ELSE, STORE IN WORK QUEUE PTR   R41 23700600
MLOGNEXT L     MDCT,MWORKQUE       GET ADDR OF NEXT QUEUED DCT      R41 23700700
         LTR   MDCT,MDCT           CHECK FOR ANY LOGON DCT THERE    R41 23700800
         BZ    MSCANEXT            BRANCH IF END OF CHAIN           R41 23700900
         USING DCTDSECT,MDCT       PICK UP DCT ADDRESSABILITY       R41 23701000
         SLR   R0,R0               GET ZERO VALUE FOR RESET         R41 23701100
         SPACE 1                                                     R4 23701500
         NI    MFLAGS,255-MLOGGED  CLEAR MESSAGE-LOGGED FLAG        R41 23702000
         L     R15,MDCTEXIT        GET EXIT CODE AND NEXT DCT ADDR   R4 23702500
MLOGPDXT CS    R15,R0,MDCTEXIT     ATTEMPT TO RESET DCT CHAIN FIELD R41 23703000
         BNE   MLOGPDXT            RETRY IF UNSUCCESSFUL            R41 23703500
         LR    R14,R0              CLEAR R14 FOR EXIT CODE           R4 23704000
         SLDL  R14,8               ISOLATE EXIT ROUTINE CODE         R4 23704500
         SRL   R15,8               GET ADDR OF NEXT CHAINED DCT      R4 23705000
         ST    R15,MWORKQUE        SAVE DCT ADDR ON WORK QUEUE       R4 23705500
         LA    R15,X'F0'           GET MASK AND ISOLATE EXIT         R4 23706000
         NR    R15,R14              ROUTINE IDENTIFIER CODE          R4 23706500
         XR    R14,R15             GET EXIT ROUTINE COMPL CODE       R4 23707000
         SLL   R14,2               ADJUST RET CODE FOR TABLE SCAN    R4 23707500
         SRL   R15,2               ADJUST EXIT ID  FOR TABLE SCAN    R4 23708000
         L     ML,MLOGBTAB-4(R15)  GET APPROPRIATE TABLE ENTRY       R4 23708500
         TM    DCTFLAGS,DCTLOGAL   TEST FOR DIAGNOSTIC LOGGING       R4 23709000
         BZR   ML                  SKIP IF LOGGING NOT REQUESTED     R4 23709500
         B     MAPIEMSG            ELSE LOG APPL-RELATED ACTION      R4 23710000
         SPACE 1                                                     R4 23710500
MLOGBTAB DS    0F                  EXIT ROUTINE BRANCH TABLE         R4 23711000
         DC    A(MLOGOPEN)         OPEN  ACB  SUBTASK EVENT          R4 23711500
         DC    A(MLOGTPND)         TPEND EXIT ROUTINE EVENT          R4 23712000
         DC    A(MLOGCLOS)         CLOSE ACB  SUBTASK EVENT          R4 23712500
         EJECT                                                      R41 23713000
*                                                                   R41 23713100
*        OPEN ACB COMPLETION AND ERROR RECOVERY ROUTINE             R41 23713200
*                                                                   R41 23713300
         SPACE 1                                                    R41 23713400
MLOGOPEN DS    0H                  OPEN ACB SUBTASK COMPLETE EVENT  R41 23713500
         L     MBUF,DCTBUFAD       GET ADDR OF SETLOGON RPL          R4 23714000
         ST    R0,DCTBUFAD         INDICATE NO ACTIVE BUFFER         R4 23714500
         TM    MDCTSTAT,DCTABORT   CHECK FOR ANY ERROR IN SUBTASK    R4 23715000
         BZ    MLOGOPOK            BRANCH IF SUCCESSFUL COMPLETION   R4 23715500
         SPACE 2                                               @OZ18395 23715600
         OI    DCTSTAT,DCTDRAIN    SET LOGON DCT DRAIN STATUS  @OZ18395 23715700
         SPACE 1                                                     R4 23716000
         TM    MDCTSTAT,DCTSINON   TEST IF ACB HAS BEEN OPENED       R4 23716500
         BZ    MLOGOPER            BRANCH IF OPEN ACB FAILED         R4 23717000
         SPACE 2                                               @OZ18395 23717100
        $IOERROR (MBUF)            ISSUE I/O ERROR MESSAGE           R4 23717500
         OI    MDCTSTAT,DCTSOFF    INDICATE CLOSE ACB REQUEST  @OZ18395 23717600
         BAL   WA,MLOGPOST         CLOSE ACB                   @OZ18395 23717700
         B     MLOGOFRE             AND RELEASE BUFFER         @OZ18395 23718000
         SPACE 2                                               @OZ18395 23718100
MLOGOPER BAL   ML,MAPIEMSG         ISSUE OPEN ACB FAILED MSG         R4 23718500
*              THIS LINE DELETED BY APAR NUMBER                @OZ18395 23719000
         BAL   WA,MLDCTFRE         DISPOSE OF LOGON DCT              R4 23719500
         B     MLOGOFRE            BRANCH TO FREE BUFFER             R4 23720000
         SPACE 1                                                     R4 23720500
MLOGOPOK BAL   ML,MSMFSTRT         WRITE LOGON START SMF RECORD      R4 23721000
         L     R1,MSNALOG          GET ACTIVE LOGON DCT POINTER      R4 23721500
         ST    R1,MDCTADCT         CHAIN ACTIVE LOGON DCTS TO OURS   R4 23722000
         ST    MDCT,MSNALOG        UPDATE LINE MANAGER DCT POINTER   R4 23722500
         OI    MSCANIND,MSCNRAT    FORCE RAT AUTOLOGON SCAN         R41 23722600
         SPACE 1                                                     R4 23723000
MLOGOFRE DS    0H                  FREE SETLOGON START BUFFER        R4 23723500
        $FREEBUF (MBUF)            RETURN BUFFER TO FREE POOL        R4 23724000
         B     MLOGNEXT            GO SEARCH FOR MORE WORK           R4 23724500
         EJECT                                                       R4 23725000
*                                                                   R41 23725600
*        TPEND PORCESSING ROUTINE                                   R41 23725700
*                                                                   R41 23725800
         SPACE 1                                                     R4 23726500
MLOGTPND DS    0H                  TPEND EXIT SCHEDULED EVENT        R4 23727000
         L     MICE,MDCTICE        GET ADDR OF 1ST  LOGGED-ON ICE    R4 23728000
         LTR   MICE,MICE           TEST IF ANY SESSIONS              R4 23728500
         LA    WA,MLOGNEXT         LOAD RETURN FOR ACB CLOSE ROUT    R4 23729000
         BZ    MLOGSTOP            GO CLOSE ACB IF NO SESSIONS       R4 23729500
         USING ICEDSECT,MICE       SHOW ICE ADDRESSABILITY          R41 23729600
         OI    DCTSTAT,DCTDRAIN    SHOW APPLICATION DRAINING         R4 23730000
         LA    R1,MLOGTLIM         GET HIGHEST ALLOWED RETURN CODE   R4 23730500
         CLR   R14,R1              COMPARE RETURN CODE WITH LIMIT    R4 23731000
         BH    MLOGTRAP            FORCE APPLICATION ABORT IF HIGH   R4 23731500
         IC    R1,MLOGTTAB(R14)    PICK UP RETURN CODE ENTRY         R4 23732000
         B     MLOGT(R1)            AND BRANCH TO PROC ROUTINE       R4 23732500
         SPACE 1                                                     R4 23733000
MLOGTTAB DS    0C                  TPEND EXIT ERROR ACTION TABLE     R4 23733500
         DC    AL1(MLOGTDRN-MLOGT) ORDERLY SHUTDOWN   REQ  -DRAIN    R4 23734000
         DC    AL1(MLOGTRAP-MLOGT) QUICK   SHUTDOWN   REQ  -TERMIN   R4 23734500
         DC    AL1(MLOGABRT-MLOGT) VTAM  INITIATED  ABEND  -ABORT    R4 23735000
MLOGTLIM EQU   *-MLOGTTAB          HIGHEST ALLOWED ERROR CODE        R4 23735500
         SPACE 2                                                     R4 23736000
MLOGT    DS    0H                  ORIGIN FOR TPEND PROC ROUTINES    R4 23736500
         SPACE 2                                                    R41 23736600
*        DRAIN ALL APPLICATION SESSIONS                             R41 23736700
         SPACE 1                                                     R4 23737000
MLOGTDRN MVC   MBUFQUE,ICEAPCHN    SAVE ADDR OF NEXT LOGGED-ON ICE   R4 23737500
         BAL   ML,MICETRAP         MARK ICE DRAINING, CLOSE IF IDLE  R4 23738000
         L     MICE,MBUFQUE        RESTORE NEXT ICE ADDRESS          R4 23738500
         LTR   MICE,MICE           CHECK FOR END OF CHAIN            R4 23739000
         BNZ   MLOGTDRN            PROCESS THIS ICE IF NOT           R4 23739500
         B     MLOGNEXT            GO SEARCH FOR MORE WORK           R4 23740000
         SPACE 2                                                    R41 23740100
*        ABORT ALL APPLICATION SESSIONS                             R41 23740200
         SPACE 1                                                     R4 23740500
MLOGABRT OI    MDCTSTAT,DCTABORT   SHOW APPLICATION IS ABORTING      R4 23741000
         SPACE 1                                                     R4 23741500
MLOGTRAP MVC   MBUFQUE,ICEAPCHN    SAVE ADDR OF NEXT LOGGED-ON ICE   R4 23742000
         BAL   ML,MICEABRT         CALL SESSION ABORT SUBROUTINE     R4 23742500
         L     MICE,MBUFQUE        GET  ADDR OF NEXT LOGGED-ON ICE   R4 23743000
         LTR   MICE,MICE           TEST FOR END OF CHAIN             R4 23743500
         BNZ   MLOGTRAP            GO PROCESS NEXT ICE IF NOT        R4 23744000
         B     MLOGNEXT            SEARCH FOR MORE WORK              R4 23744500
         SPACE 2                                                     R4 23745000
         DROP  MICE                DROP ICE ADDRESSABILITY          R41 23745500
         EJECT                                                       R4 23746000
*                                                                   R41 23746100
*        ACB CLOSE COMPLETION PROCESSING ROUTINE                    R41 23746200
*                                                                   R41 23746300
         SPACE 1                                                    R41 23746400
MLOGCLOS DS    0H                  CLOSE ACB SUBTASK COMPLETE EVENT R41 23746500
         TM    MDCTSTAT,DCTABORT   HAS CLOSE ACB BEEN SUCCESSFUL     R4 23747000
         BZ    MLOGCLER            BRANCH IF NO ERRORS INDICATED    R41 23747500
         BAL   ML,MAPIEMSG         ISSUE CLOSE ACB FAILED MSG        R4 23748000
MLOGCLER BAL   ML,MSMFSTOP         WRITE LOGON STOP SMF RECORD      R41 23748500
         TM    DCTSTAT,DCTDRAIN    CHECK LOGON DCT DRAIN STATUS      R4 23749000
         LA    WA,MLOGNEXT         LOAD RETURN FOR ACB OPEN ROUTINE  R4 23749500
         BZ    MLOGSTRT            RESTART LOGON DCT IF NO DRAIN     R4 23750000
         B     MLDCTFRE            ELSE BRANCH TO FREE LOGON DCT     R4 23750500
         EJECT                                                      R41 23751000
*                                                                   R41 23751100
*        VTAM INTERFACE (API) ERROR MESSAGE SUBROUTINE              R41 23751200
*                                                                   R41 23751300
         SPACE 1                                                    R41 23751400
MAPIEMSG DS    0H                  ISSUE JES2/VTAM API ERROR MSG    R41 23751500
         TM    MFLAGS,MLOGGED      TEST CONTROL-BLOCK HANDLING FLAGS R4 23752000
         BOR   ML                  RETURN IF EVENT ALREADY LOGGED    R4 23752500
         L     R1,$MWORK           GET MESSAGE WORKAREA ADDRESS      R4 23753000
         MVC   0(L'MAPIMSG,R1),MAPIMSG  MOVE MSG TARGET TO WORKAREA  R4 23753500
         USING MAPIMSG,R1          PROVIDE MSG ADDRESSABILITY        R4 23754000
         STC   R14,MAPIWORK        SAVE RETURN CODE IN MSG           R4 23754500
         MVC   MAPINAME,DCTDEVN    MOVE LOGON DCT NAME TO MSG        R4 23755000
         UNPK  MAPISTAT(3),MAPIWORK(2)   SET UP RETURN  CODE INFO    R4 23755500
         UNPK  MAPISTAT+2(3),MDCTXERR(2) SET UP ACB FEEDBACK INFO    R4 23756000
         TR    MAPISTAT,$HEXTRAN         TRANSLATE INFO TO EBCDIC    R4 23756500
         LA    R15,MAPIRTAB-4(R15) POINT TO REQUEST ENTRY            R4 23757000
         MVC   MAPIREQC,0(R15)     MOVE REQUEST ID TO MSG            R4 23757500
         LR    WA,R14              SAVE R14 AROUND $WTO              R4 23758000
        $WTO   (R1),L'MAPIMSG,JOB=NO,WAIT=NO,  ISSUE ERROR MESSAGE     C23758500
               ROUTE=$LOG+$ERR+$TP,CLASS=$ALWAYS,PRI=$HI             R4 23759000
         OI    MFLAGS,MLOGGED      SHOW MESSAGE HAS BEEN LOGGED      R4 23759500
         LR    R14,WA              RESTORE R14 INDEX VALUE           R4 23760000
         BR    ML                  RETURN TO CALLER                  R4 23760500
         DROP  R1                  RELEASE MSG ADDRESSABILITY        R4 23761000
         SPACE 1                                                     R4 23761500
MAPIRTAB DC    C'OPEN',C'TPND',C'CLOS'  REQUEST TYPE TABLE           R4 23762000
*              THIS LINE DELETED BY APAR NUMBER              * @OZ32566 23762500
*              THIS LINE DELETED BY APAR NUMBER              * @OZ32566 23763000
         SPACE 1                                                     R4 23763500
MAPIMSG $MSG   092,'API ERROR ON LOGONXXX ACB,RRRR,VTAM,SSSS'        R4 23764000
MAPINAME EQU   MAPIMSG+15,8        LOGON DCT NAME                    R4 23764500
MAPIREQC EQU   MAPIMSG+28,4        REQUEST IDENTIFIER                R4 23765000
MAPIWORK EQU   MAPIMSG+30,1        WORK FIELD FOR UNPK               R4 23765500
MAPISTAT EQU   MAPIMSG+38,8        STATUS INFORMATION                R4 23766000
         SPACE 2                                                    R41 23766100
         DROP  MBASE1,MBASE2,MBASE3   RELEASE ROUTINES              R41 23766200
         DROP  MDCT                     AND DCT ADDRESSABILITY      R41 23766300
         TITLE 'HASP LINE MANAGER -- ICE EXIT ROUTINE PROCESSING SCAN'  23766500
*********************************************************************** 23767100
*                                                                     * 23767200
*                 ICE EXIT ROUTINE PROCESSING SCAN                    * 23767300
*                                                                     * 23767400
*********************************************************************** 23767500
         SPACE 1                                                     R4 23768500
*                                  ADDRESSABILITY -                 R41 23769100
         USING ICEDSECT,MICE             ICE                        R41 23769200
         USING RTAMVSUB,MBASE2,MBASE3    COMMON SNA SUBROUTINES     R41 23769300
         USING MICEPROC,MBASE1           LOCAL ROUTINE BASE         R41 23769400
         SPACE 2                                                    R41 23769500
MICEPROC DS    0H                                                   R41 23769600
         SLR   R0,R0               GET EMPTY QUEUE INDICATOR        R41 23769700
MICEPROQ CS    MICE,R0,MICEQUE     ATTEMPT TO CLEAR QUEUE           R41 23769800
         BNE   MICEPROQ            RETRY IF UNSUCCESSFUL            R41 23769900
         SPACE 1                                                    R41 23770000
         ST    MICE,MWORKQUE                                        R41 23770100
MICENEXT L     MICE,MWORKQUE       GET ADDR OF NEXT QUEUED ICE      R41 23770200
         LTR   MICE,MICE           CHECK FOR ANY MORE ICE           R41 23770300
         BZ    MSCANEXT            BRANCH IF END OF CHAIN           R41 23770400
         SLR   R0,R0               GET ZERO VALUE FOR RESET         R41 23770500
         SPACE 1                                                    R41 23770600
         L     R15,ICEXTCHN        GET EXIT CODE AND NEXT ICE ADDR   R4 23772000
MICEPDEX CS    R15,R0,ICEXTCHN     ATTEMPT TO RESET ICE CHAIN FIELD R41 23772500
         BNE   MICEPDEX            RETRY IF UNSUCCESSFUL            R41 23773000
         LR    R14,R0              CLEAR R14 FOR EXIT CODE           R4 23773500
         SLDL  R14,8               ISOLATE EXIT ROUTINE CODE         R4 23774000
         SRL   R15,8               GET ADDR OF NEXT CHAINED ICE      R4 23774500
         STC   R14,MCOMMAND        SAVE ACTION CODE FOR REQUEUE      R4 23775000
         ST    R15,MWORKQUE        SAVE ICE ADDR ON WORK QUEUE       R4 23775500
         LA    R15,X'F0'           GET MASK AND ISOLATE EXIT         R4 23776000
         NR    R15,R14              ROUTINE IDENTIFIER CODE          R4 23776500
         XR    R14,R15             GET EXIT ROUTINE COMPL CODE       R4 23777000
         SRL   R15,2               ADJUST EXIT ID  FOR TABLE SCAN   R41 23777500
         L     MDCT,ICEADCT        SET UP LOGON DCT ADDRESS          R4 23778000
         USING DCTDSECT,MDCT       SHOW LOGON DCT ADDRESSABLE       R41 23778100
         SLR   MBUF,MBUF           INDICATE NO CURRENT BUFFER        R4 23778500
         LA    ML,MICENEXT         SET UP COMMON RETURN ADDRESS      R4 23779000
         L     R1,MICEBTAB-4(R15)  GET APPROPRIATE TABLE ENTRY      R41 23779500
         BR    R1                  BRANCH TO PROCESSING ROUTINE     R41 23780000
         SPACE 3                                                    R41 23794500
MICEBTAB DS    0F                  EXIT ROUTINE BRANCH TABLE        R41 23795000
         DC    A(MICELOGN)         LOGON  EXIT SCHEDULED EVENT      R41 23795500
         DC    A(MICELOGN)         SIMULATED LOGON (AUTOLOGON)      R41 23795600
         DC    A(MICEGBUF)         DEFERRED BUFFER GET ATTEMPT      R41 23796000
         DC    A(MICETRAP)         RELREQ EXIT SCHEDULED EVENT      R41 23796500
         DC    A(MICEABRT)         SCIP   EXIT SCHEDULED EVENT      R41 23797000
         DC    A(MICELOST)         LSTTRM EXIT SCHEDULED EVENT      R41 23797500
         DC    A(MICETHAW)         DISCONNECT  ROUTINE              R41 23798000
         EJECT                                                      R41 23798500
*                                                                   R41 23800000
*        LOGON EXIT PROCESSING                                      R41 23800100
*                                                                   R41 23800200
         SPACE 1                                                    R41 23800300
MICELOGN DS    0H                  LOGON EXIT SCHEDULED EVENT       R41 23800400
        $GETBUF TYPE=VTAM          ACQUIRE AND INIT VTAM BUFFER     R41 23800500
         BZ    MICEREQU            REQUEUE THIS REQUEST IF FAILED   R41 23800600
         USING RPLDSECT,MBUF       SHOW RPL ADDRESSABILITY          R41 23800700
         LR    MBUF,R1             PROVIDE BUFFER ADDRESSABILITY    R41 23800800
         ST    MBUF,ICEBUFAD       SAVE BUFFER ADDRESS IN ICE       R41 23800900
         SPACE 1                                                    R41 23801000
         LA    R15,RPLBUFST        POINT TO NIB AREA                R41 23801100
         USING NIBDSECT,R15        ESTABLISH NIB ADDRESSABILITY     R41 23801200
         XC    NIBDSECT(NIBSIZE),NIBDSECT CLEAR NIB AREA            R41 23801300
         SPACE 1                                                    R41 23801400
         OI    ICESTAT,ICEHOLD     ICE NOT ELIGIBLE FOR ALLOC       R41 23801500
         MVI   ICEINDEX,VSEQLOGN+VSEQLDEV SET ICE LOGON STATUS      R41 23801600
         ST    MICE,RPLICE         SAVE ICE ADDR IN BUFFER          R41 23801700
         STCM  MDCT,7,RPLDCT+1     SAVE DCT ADDR IN BUFFER          R41 23801800
         MVC   RPLDACB,DCTACB      MOVE ACB ADDRESS TO RPL          R41 23801900
         MVI   RPLREQ,RPLINQIR     SHOW INQUIRE REQUEST TYPE        R41 23802000
         MVI   RPLOPT8,RPLODACP    SHOW OPNDST WILL BE ACCEPT       R41 23802100
         MVI   RPLOPT9,RPLDEVCH    SHOW INQUIRE DEVCHAR REQ         R41 23802200
         LA    R0,L'ISTDVCHR       GET REQUESTED DATA LENGTH        R41 23802300
         ST    R0,RPLBUFL           AND STORE IN RPL FOR INQUIRE    R41 23802400
         SPACE 1                                                    R41 23802500
         MVI   NIBID,NIBIDD        INIT NIB IDENT  FIELD            R41 23802600
         MVI   NIBLEN,NIBLNIB      INIT NIB LENGTH FIELD            R41 23802700
         ST    MICE,NIBUSER        INIT NIB USER   FIELD            R41 23802800
         MVC   NIBSYM,ICESYMB      SHOW TERMINAL NAME IN NIB        R41 23802900
         MVC   NIBMODE,=CL8'RECORD' INDIC RECORD MODE IN NIB        R41 23803000
         MVI   NIBPROCD,PRORPLC    SHOW RPLC PROC OPT IN NIB        R41 23803100
         ST    R15,RPLARG          STORE NIB ADDRESS  IN RPL        R41 23803200
         MVI   RPLEXTDS,RPLNIB     SHOW RPLARG POINTS TO NIB        R41 23803300
         LA    R1,NIBDEVCH         GET ADDR OF NIBDEVCH FIELD       R41 23803400
         ST    R1,RPLAREA           AND STORE IN RPL FOR INQUIRE    R41 23803500
         SPACE 1                                                    R41 23803600
         CLI   MCOMMAND,VXIDALOG   TEST FOR SIMULATED LOGON         R41 23803700
         BNE   MICELOG             BRANCH IF NOT                    R41 23803800
         L     R1,ICELDCT          PICK UP PRE-ALLOCATED LINE DCT   R41 23803900
         LTR   R1,R1               TEST LINE DCT ADDRESS            R41 23804000
         BZ    MICEABDN            BR IF GONE, ABANDON AUTOLOGON    R41 23804100
         L     R1,MDCTRAT-DCTDSECT(,R1)  LOCATE LOGON RAT ENTRY     R41 23804200
         ST    R1,NIBRAT           STORE RAT ADDRESS IN NIB         R41 23804300
         SPACE 1                                                    R41 23804400
         MVI   ICEINDEX,VSEQALOG+VSEQLDEV  SET ICE AUTOLOG STATUS   R41 23804500
         MVI   RPLOPT8,RPLODACQ    SHOW OPNDST WILL BE ACQUIRE      R41 23804600
         MVI   NIBLMODE,C' '        AND SET TO USE...               R41 23804700
         MVC   NIBLMODE+1(L'NIBLMODE-1),NIBLMODE ..DEFAULT LOGMODE  R41 23804800
         MVC   RPLSEQTP,ICEINDEX   SET RPL SPECIAL SEQUENCE TYPE    R41 23804900
         B     MVRPLXEC            PASS REQUEST TO VTAM AND RETURN  R41 23805000
         EJECT                                                      R41 23805100
MICELOG  L     R1,MDCTICE          GET LOGGED  ON ICE CHAIN         R41 23805200
         ST    R1,ICEAPCHN         CONNECT ICE TO OLD CHAIN         R41 23805300
         ST    MICE,MDCTICE         AND STORE NEW ICE CHAIN         R41 23805400
         LH    R1,MDCTSNCT         GET LOGGED  ON ICE COUNT         R41 23805500
         LA    R1,1(0,R1)          INCREMENT COUNTER BY ONE         R41 23805600
         STH   R1,MDCTSNCT          AND RESTORE COUNT VALUE         R41 23805700
         SPACE 1                                                    R41 23805800
         MVC   RPLSEQTP,ICEINDEX   SET RPL SPECIAL SEQUENCE TYPE    R41 23805900
         B     MVRPLXEC            PASS REQUEST TO VTAM AND RETURN  R41 23806000
         DROP  MBUF,R15            DROP RPL AND NIB ADDRESSABILITY  R41 23806100
         EJECT                                                      R41 23812400
*                                                                   R41 23812500
*        LOSTERM PROCESSING ROUTINE                                 R41 23812600
*                                                                   R41 23812700
         SPACE 1                                                    R41 23812800
MICELOST DS    0H                  LOSTERM EXIT SCHEDULED EVENT     R41 23812900
         LA    R1,MICELIMT         GET HIGHEST ALLOWED RETURN CODE  R41 23813000
         SLL   R14,2               MULTIPLY INDEX BY 4              R41 23813100
         CLR   R14,R1              COMPARE RETURN CODE WITH LIMIT   R41 23813200
         BNL   MICEABRT            FORCE SESSION ABORT IF NOT LOW   R41 23813300
         L     R1,MICELTAB(R14)    PICK UP COMPL CODE ENTRY         R41 23813400
         BR    R1                   AND BRANCH TO PROC ROUTINE      R41 23813500
         SPACE 2                                                    R41 23813600
MICELTAB DS    0F                  LOSTERM EXIT ERROR ACTION TABLE  R41 23813700
         DC    A(MICELRET)         ** NOT APPLICABLE **   - ERROR   R41 23813800
         DC    A(MICELRET)         ** NOT APPLICABLE **   - ERROR   R41 23813900
         DC    A(MICELRET)         ** NOT APPLICABLE **   - ERROR   R41 23814000
         DC    A(MICEABRT)         LU RESTART FAILED      - CLSDST  R41 23814100
         DC    A(MICEABRT)         LU RESTART SUCCESSFUL  - CLSDST  R41 23814200
         DC    A(MICEABRT)         LU LOGOFF UNCONDITIONAL- CLSDST  R41 23814300
         DC    A(MICEAHLD)         LU RESTART IN PROCESS  - PURGE   R41 23814400
         DC    A(MICELRET)         ** NOT APPLICABLE **   - ERROR   R41 23814500
         DC    A(MICETRAP)         LU LOGOFF CONDITIONAL  - DRAIN   R41 23814600
         DC    A(MICEABRT)         LU BUFF LIMIT EXCEEDED - CLSDST  R41 23814700
MICELIMT EQU   *-MICELTAB          HIGHEST ALLOWED ERROR CODE       R41 23814800
         SPACE 1                                                    R41 23814900
MICELRET BR    ML                  BRANCH TO PROCESS NEXT ICE       R41 23815000
         EJECT                                                      R41 23815100
MICETHAW LTR   R14,R14             TEST DISCONNECT SUBSEQUENCE      R41 23815200
         BZ    MICEDISC            BR IF ONLY DISCONNECT FROM LINE  R41 23815300
         B     MICEMELT             ELSE, FREE ICE                  R41 23816000
         SPACE 3                                                    R41 23825000
         DROP  MBASE1,MBASE2,MBASE3  RELEASE ROUTINES AND           R41 23835000
         DROP  MICE,MDCT               DATA AREA ADDRESSABILITY     R41 23845000
         SPACE 1                                                     R4 24053500
         LTORG                                                       R4 24059500
         TITLE 'HASP LINE MANAGER -- RAT SCAN FOR AUTOLOGON'        R41 24059600
*********************************************************************** 24059700
*                                                                     * 24059800
*                      RAT SCAN FOR AUTOLOGON                         * 24059900
*                                                                     * 24060000
*********************************************************************** 24060100
         SPACE 1                                                    R41 24060200
*                                  ADDRESSABILITY --                R41 24060300
         USING RATDSECT,WA               -- RAT                     R41 24060400
         USING RTAMVSUB,MBASE2,MBASE3    -- COMMON SNA SUBROUTINES  R41 24060500
         USING MRATPROC,MBASE1           -- LOCAL ROUTINE BASE      R41 24060600
         SPACE 2                                                    R41 24060700
MRATPROC DS    0H                                                   R41 24060800
         L     WA,$RATABLE         GET RAT ADDRESS             @OZ25901 24060850
         LH    WC,$NUMRJE          PICK UP NUMBER OF RAT ENTRIES    R41 24060900
*              THIS LINE DELETED BY APAR NUMBER                @OZ25901 24061000
         SPACE 1                                                    R41 24061100
*                                                                   R41 24061200
*        LOCATE REMOTES IN AUTOLOGON (OR $S) MODE                   R41 24061300
*                                                                   R41 24061400
         SPACE 1                                                    R41 24061500
MRATEST  TM    RATTYPE,DCTPSNA     TEST FOR SNA TYPE REMOTES        R41 24061600
         BZ    MRATNXT             BR IF NOT, DO NEXT REMOTE        R41 24061700
         TM    RATFLAGS,RATALM+RATSRMT  IF RMT NOT IN AUTOLOG MODE  R41 24061800
         BZ    MRATNXT             GO TRY NEXT RAT ENTRY            R41 24061900
         OI    MEVNTREQ,MEVNALM    SHOW REMOTE IN AUTOLOGON MODE    R41 24062000
         TM    MEVNTREQ,MEVNTIME   CHECK FOR TIME INTERVAL EXPIRED  R41 24062100
         BZ    MRATCHEK            BRANCH IF NO, GO CHECK RAT       R41 24062200
         OI    MSTQE+IPOST,X'20'   REQUEST NEXT TIME INTERVAL       R41 24062300
MRATCHEK L     R15,RATLDCT         PICK UP LINE DCT                 R41 24062400
         USING DCTDSECT,R15        TEMP. LINE DCT ADDRESSABILITY    R41 24062500
         LTR   R15,R15             TEST FOR REMOTE SIGNED ON        R41 24062600
         BZ    MRATCHK1            BR IF NO, GO CHECK TIMER         R41 24062700
         CL    WA,MDCTRAT          TEST FOR CONNECTED REMOTE        R41 24062800
         BE    MRATNXT             BR IF NO, TRY NEXT REMOTE        R41 24062900
         DROP  R15                                                  R41 24063000
         SPACE 2                                                    R41 24063100
MRATCHK1 L     R1,MCLOCK           COMPARE CURRENT TIME             R41 24063200
         CL    R1,RATIMER           TO REMOTE SIGNOFF TIME          R41 24063300
         BL    MRATNXT             SKIP AUTOLOGON IF STILL DELAYING R41 24063400
         EJECT                                                      R41 24063500
*                                                                   R41 24063600
*        IF REMOTE IN AUTOLOGON MODE - LOOK FOR OUTPUT (OR MSGS)    R41 24063700
*                                                                   R41 24063800
MRATWTST DS    0H                                                   R41 24063900
         TM    RATFLAGS,RATSRMT    TEST FOR START RMT COMMAND       R41 24064000
         BO    MALOGON             BRANCH IF YES, SKIP WORK TEST    R41 24064100
         L     MDCT,RATRDCT        FIRST REMOTE DCT ADDRESS         R41 24064200
         USING DCTDSECT,MDCT       REMOTE DCT ADDRESSABILTY         R41 24064300
         SLR   R14,R14             MULTIPLY                         R41 24064400
         IC    R14,DCTNO+1          REMOTE NUMBER                   R41 24064500
         LA    R1,0(R14,R14)         BY THREE TO                    R41 24064600
         ALR   R1,R14                 GET ADDR OF                   R41 24064700
         AL    R1,$MSPOOLQ             MSG QUEUE ENTRY              R41 24064800
         CLC   1(1,R1),0(R1)       IF MSG ON QUEUE                  R41 24064900
         BNE   MALOGON              GO DO AUTOLOGON                 R41 24065000
         SPACE 1                                                    R41 24065100
MRATPP   TM    DCTDEVTP,DCTPRPU    IF NOT A PRINT OR PUNCH DCT      R41 24065200
         BNO   MRATNDCT             GO GET NEXT REMOTE DCT          R41 24065300
         SPACE 1                                                    R41 24065400
        $#GET  DCT=(MDCT),HAVE=NO  IF DEVICE HAS QUEUED OUTPUT      R41 24065500
         SPACE 1                                                    R41 24065600
         BNZ   MALOGON              GO DO AUTOLOGON                 R41 24065700
         SPACE 1                                                    R41 24065800
MRATNDCT L     MDCT,MDCTDCT        FIND NEXT REMOTE DCT             R41 24065900
         LTR   MDCT,MDCT           TEST FOR END OF REMOTE CHAIN     R41 24066000
         BNZ   MRATPP              LOOP, CHECK FOR WORK             R41 24066100
         DROP  MDCT                RELEASE RMT DCT ADDRESSABILITY   R41 24066200
         SPACE 1                                                    R41 24066300
         B     MRATNXT             TRY NEXT REMOTE                  R41 24066400
         EJECT                                                      R41 24066500
*                                                                   R41 24066600
*        ATTEMPT TO AUTOLOGON                                       R41 24066700
*                                                                   R41 24066800
         SPACE 1                                                    R41 24066900
MALOGON  TM    RATFLAGS,RATPILUN   TEST FOR LUNAME DEFINED          R41 24067000
         BNO   MALMSG              BR NOT DEFINED, ISSUE MESSAGE    R41 24067100
         SPACE 2                                                    R41 24067200
*        LOCATE ACTIVE APPLICATION (LOGON DCT)                      R41 24067300
         SPACE 1                                                    R41 24067400
         LA    R15,$LOGNDCT-(DCTCHAIN-DCTDSECT) POINT TO 1ST LGN    R41 24067500
         USING DCTDSECT,R15        TEMP LOGON DCT ADDRESSABILITY    R41 24067600
MALOGSCN L     R15,DCTCHAIN        CHAIN TO NEXT DCT                R41 24067700
         LTR   R15,R15             TEST FOR CHAIN END               R41 24067800
         BZ    MSCANEXT            NO DCT AVAILABLE, EXIT RAT SCAN  R41 24067900
         CLI   DCTDEVTP,DCTLOG     TEST DCT TYPE                    R41 24068000
         BNE   MSCANEXT            BRANCH IF NOT LOGON, END SCAN    R41 24068100
         TM    MDCTSTAT,DCTSINON+DCTSOFF    TEST DCT  AVAILABILTY   R41 24068200
         BNM   MALOGSCN            NOT AVAILABLE CHECK OTHERS       R41 24068300
         DROP  R15                 RELEASE TEMP LOGON DCT BASE      R41 24068400
         SPACE 2                                                    R41 24068500
*        LOCATE AVAILABLE LINE DCT                                  R41 24068600
         SPACE 1                                                    R41 24068700
         L     MDCT,RATLDCT        PICK UP LINE DCT ADDRESS         R41 24068800
         USING DCTDSECT,MDCT       SHOW LINE DCT ADDRESSABLE        R41 24068900
         LTR   MDCT,MDCT           TEST FOR LINE DCT                R41 24069000
         BNZ   MALGLNED            BRANCH IF ALREADY PRESENT        R41 24069100
         LA    MDCT,MSNAIDL-(MDCTADCT-DCTDSECT) LOCATE IDLE DCTS    R41 24069200
MALGLNES L     MDCT,MDCTADCT       FIND NEXT IDLE DCT               R41 24069300
         LTR   MDCT,MDCT           TEST FOR END OF CHAIN            R41 24069400
         BZ    MRATNXT             BRANCH IF YES, NO LINE FOUND     R41 24069500
         TM    MDCTSTAT,DCTLEASE+DCTSHARE  TEST LINE STATUS         R41 24069600
         BNZ   MALGLNES            BRANCH IF LEASED OR SHARED, SKIP R41 24069700
         CLI   MDCTPSWD,C' '       TEST LINE PASSWORD               R41 24069800
         BNE   MALGLNES            USE ONLY LINES WITHOUT PASSWORDS R41 24069900
         L     R1,MDCTRAT          PICK UP ASSOCIATED RAT ADDRESS   R41 24070000
         LTR   R1,R1               TEST FOR UN-OWNED LINE           R41 24070100
         BNZ   MALGLNES            BRANCH IF NOT, TRY NEXT LINE     R41 24070200
         EJECT                                                      R41 24070300
*        TEST FOR REMOTE ALREADY CONNECTED TO OTHER SYSTEM          R41 24070400
         SPACE 1                                                    R41 24070500
MALGLNED LR    R0,WA               COPY RAT OFFSET                  R41 24070600
         SL    R0,$RATABLE         R0 = (RMT NO -1) * RATTLE        R41 24070700
         LR    R1,R0               MULTIPLY                         R41 24070800
         ALR   R1,R0                BY                              R41 24070900
         ALR   R1,R0                 THREE                          R41 24071000
         SLR   R0,R0               DIVIDE BY EIGHT AND              R41 24071100
         D     R0,=A(RATTLE)        RATTLE GIVING OFFSET TO         R41 24071200
         D     R0,=A(8)              BYTE (QUOT) AND BIT (REMAIN)   R41 24071300
         AL    R1,$RMTSON          R1 = BYTE ADDR OF SIGNON BITS    R41 24071400
         LR    R14,R0              MOVE BIT OFFSET                  R41 24071500
         L     R0,=A(QUEBUSY*X'2000')  GET BIT TO TEST BUSY         R41 24071600
         SRL   R0,0(R14)           SHIFT TO BIT OFFSET              R41 24071700
         STH   R0,MSONWORK         STORE IN WORK AREA FOR TEST      R41 24071800
         NC    MSONWORK,0(R1)      TEST FOR RMT ON ANY OTHER SYSTEM R41 24071900
         BNZ   MRATNXT             BRANCH IF YES, TRY NEXT REMOTE   R41 24072000
         SLR   R0,R0               GET BUSY BITS                    R41 24072100
         ICM   R0,4,$SIDBUSY         FOR THIS SYSTEM                R41 24072200
         SRL   R0,3(R14)           SHIFT TO BIT OFFSET              R41 24072300
         STH   R0,MSONWORK         STORE IN WORK AREA FOR SET       R41 24072400
         SPACE 2                                                    R41 24072500
*        ALLOCATE AVAILABLE ICE                                     R41 24072600
         SPACE 1                                                    R41 24072700
         L     MICE,$ICETRAY       GET FREE ICE ADDRESS             R41 24072800
         USING ICEDSECT,MICE       ESTABLISH ICE ADDRESSABILITY     R41 24072900
MALGICER LTR   MICE,MICE           TEST ICE AVAILABILTY             R41 24073000
         BZ    MSCANEXT            BRANCH IF NONE, ABANDON SCAN     R41 24073100
         L     R14,ICEAPCHN        LOCATE NEXT ICE ON CHAIN         R41 24073200
         CS    MICE,R14,$ICETRAY   TRY TO REMOVE ICE FROM TRAY      R41 24073300
         BNE   MALGICER            BRANCH IF FAILED, RE-TRY         R41 24073400
         XC    ICEDSECT(ICESIZE),ICEDSECT  CLEAR ICE                R41 24073500
         SPACE 2                                                    R41 24073600
*        SHOW RMT ON THIS SYSTEM                                    R41 24073700
         SPACE 1                                                    R41 24073800
         OC    0(2,R1),MSONWORK    SET BITS -- SHOW RMT ON SYSTEM   R41 24073900
         EJECT                                                      R41 24074000
*        PRE-ALLOCATE (AND PRE-CONNECT) LINE-REMOTE-ICE             R41 24074100
         SPACE 1                                                    R41 24074200
MALGTBUF MVC   ICESYMB,RATSYMB     MOVE LUNAME INTO ICE             R41 24074300
         ST    R15,ICEADCT         STORE LOGON DCT ADDRESS IN ICE   R41 24074400
         ST    MDCT,ICELDCT        STORE LINE DCT ADDRESS IN        R41 24074500
         ST    MDCT,RATLDCT         ICE AND RAT ENTRY               R41 24074600
         ST    WA,MDCTRAT          STORE RAT ADDRESS IN LINE DCT    R41 24074700
         NI    DCTFLAGS,DCTLOGAL   RESET FLAGS ---EXCEPT LOGGING    R41 24074800
         L     R1,RATRDCT          PICK UP FIRST REMOTE DCT ADDRESS R41 24074900
         ST    R1,MDCTDCT          STORE REMOTE ADDRESS IN LNE DCT  R41 24075000
MALGRMT  ST    MDCT,DCTDCB-DCTDSECT(,R1)  STORE LNE DCT ADDR IN RMT R41 24075100
         L     R1,MDCTDCT-DCTDSECT(,R1)  PICK UP ADDR OF NEXT DCT   R41 24075200
         LTR   R1,R1               TEST FOR END OF REMOTE CHAIN     R41 24075300
         BNZ   MALGRMT             BRANCH IF NO, DO THIS REMOTE     R41 24075400
         SPACE 2                                                    R41 24075500
*        REMOVE LINE DCT FROM IDLE AND ADD TO ACTIVE QUEUE          R41 24075600
         SPACE 1                                                    R41 24075700
         L     R1,MDCTADCT         GET ADDRESS OF NEXT IDLE DCT     R41 24075800
         LA    R14,MSNAIDL-(MDCTADCT-DCTDSECT)  PICK UP IDLE QUEUE  R41 24075900
         USING DCTDSECT,R14        PICK UP TEMP. DCT ADDRESSABILTY  R41 24076000
MALGLDSC L     R0,MDCTADCT         LOCATE NEXT IDLE DCT             R41 24076100
         CLR   MDCT,R0             COMPARE TO ALLOCATED LINE DCT    R41 24076200
         BE    MALGLDEQ            BR IF EQUAL, GO RE-QUEUE LINE    R41 24076300
         LTR   R14,R0              ELSE, BUMP TO NEXT IDLE DCT      R41 24076400
         BNZ   MALGLDSC            BR IF NOT END OF CHAIN, LOOP     R41 24076500
         B     M03                 LINE NOT ON IDLE QUEUE -- ERROR  R41 24076600
         SPACE 1                                                    R41 24076700
MALGLDEQ ST    R1,MDCTADCT         REMOVE LINE DCT FROM IDLE QUEUE  R41 24076800
         DROP  R14                 RELEASE TEMP. DCT ADDRESSABILTY  R41 24076900
         L     R14,MSNALNE         PICK UP ACTIVE LINE DCT QUEUE    R41 24077000
         ST    R14,MDCTADCT        PLACE ALLOCATED LINE             R41 24077100
         ST    MDCT,MSNALNE         AT TOP OF ACTIVE LINE QUEUE     R41 24077200
         L     R1,MDCTICE          PICK UP LINE DCT ICE CHAIN       R41 24077300
         ST    R1,ICEALCHN         ADD AUTOLOGON SESSION            R41 24077400
         ST    MICE,MDCTICE         TO ALLOCATED ICE CHAIN          R41 24077500
         LH    R1,MDCTSNCT         PICK UP LINE SESSION COUNT       R41 24077600
         LA    R1,1(,R1)            INCREMENT                       R41 24077700
         STH   R1,MDCTSNCT           STORE UPDATED COUNT            R41 24077800
         SPACE 2                                                    R41 24077900
*        PLACE THE ICE OF THE LOGON DCT CHAIN                       R41 24078000
         SPACE 1                                                    R41 24078100
         USING DCTDSECT,R15        PICK UP LOGON DCT ADDRESSABILITY R41 24078200
         L     R1,MDCTICE          PICK UP LOGON DCT CHAIN          R41 24078300
         ST    R1,ICEAPCHN         PLACE ICE AT TOP                 R41 24078400
         ST    MICE,MDCTICE        REPLACE LOGON DCT ICE CHAIN      R41 24078500
         LH    R1,MDCTSNCT         INCREMENT                        R41 24078600
         LA    R1,1(,R1)            APPLICATION                     R41 24078700
         STH   R1,MDCTSNCT           SESSION COUNT                  R41 24078800
         DROP  R15                 RELEASE LOGON DCT ADDRESSABILITY R41 24078900
         EJECT                                                      R41 24079000
*        SCHEDULE THE LOGON REQUEST (SIMULATE A LOGON)              R41 24079100
         SPACE 1                                                    R41 24079200
         OI    ICESTAT,ICEABORT+ICEHOLD  PREVENT CLSDST OR ALLOC    R41 24079300
         SPACE 1                                                    R41 24080000
         LR    MDCT,WA             SAVE RAT ENTRY ADDRESS           R41 24080100
         LA    R0,VXIDALOG         SETUP ICE EXIT CODE              R41 24080200
         BAL   ML,MICEREQ1         QUEUE ICE TO THE LINE MANAGER    R41 24080300
         LR    WA,MDCT             RELOAD RAT ENTRY ADDRESS         R41 24080400
         SPACE 2                                                    R41 24080500
*                                                                   R41 24080600
*        CONTINUE SCAN -- CHECK NEXT REMOTE                         R41 24080700
*                                                                   R41 24080800
         SPACE 1                                                    R41 24080900
MRATNXT  LA    WA,RATTLE(,WA)      POINT TO NEXT RAT ENTRY          R41 24081000
         BCT   WC,MRATEST           GO CHECK NEXT RAT ENTRY         R41 24081100
         B     MSCANEXT            GO DO NEXT SCAN                  R41 24081200
         SPACE 3                                                    R41 24081300
*                                                                   R41 24081400
*        AUTOLOGON FAILED -- LUNAME NOT SPECIFIED                   R41 24082000
*                                                                   R41 24082100
         SPACE 1                                                    R41 24082200
MALMSG   NI    RATFLAGS,255-RATALM-RATSRMT  RESET AUTOLOGON FLAGS   R41 24082300
         L     R1,$MWORK           PICK UP WORK AREA ADDRESS        R41 24082400
         MVC   0(L'MALMSG1,R1),MALMSG1   MOVE MSG TO WORK AREA      R41 24082500
         USING MALMSG1,R1          TEMPORARY MESSAGE ADDRESSABILTY  R41 24082600
         MVC   MALMSGR,RATNAME     MOVE REMOTE NAME TO MESSAGE      R41 24082700
         $WTO  (R1),L'MALMSG1,WAIT=NO,JOB=NO,       ISSUE MESSAGE   R41C24082800
               ROUTE=$LOG+$TP+$ERR,CLASS=$ALWAYS,PRI=$HI            R41 24082900
         DROP  R1                  RELEASE MESSAGE ADDRESSABILITY   R41 24083000
         SPACE 1                                                    R41 24083100
         B     MRATNXT             GO TRY NEXT REMOTE               R41 24083200
         SPACE 1                                                    R41 24083300
         SPACE 3                                                    R41 24083600
         LTORG                                                      R41 24083700
         SPACE 3                                                    R41 24083800
         DROP  MBASE1,MBASE2,MBASE3    RELEASE ROUTINES,            R41 24083900
         DROP  WA,MDCT                  RAT AND DCT ADDRESSABILITY  R41 24084000
         TITLE 'HASP LINE MANAGER -- BSC CHANNEL END PROCESSOR'     R41 24084100
*********************************************************************** 24084200
*                                                                     * 24084300
*                  BSC BUFFER PROCESSING ROUTINE                      * 24084400
*                                                                     * 24084500
*********************************************************************** 24084600
         SPACE 1                                                    R41 24084700
*                                  ADDRESSABILITY --                R41 24084800
         USING BUFDSECT,MBUF            -- BUFFER                   R41 24084900
         USING RTAMBSUB,MBASE2,MBASE3   -- COMMON BSC SUBROUTINES   R41 24085000
         USING MBSCPROC,MBASE1          -- LOCAL ROUTINE BASE       R41 24085100
         SPACE 3                                                    R41 24085200
MBSCPROC DS     0H                                                  R41 24085300
         SPACE 1                                                    R41 24085400
         LH    R0,$EXCPCT          DECREMENT                        R41 24085500
         S     R0,=F'1'             MASTER I/O COUNT                R41 24085600
         BM    M01                 ERROR IF NEGATIVE                R41 24085700
         STH   R0,$EXCPCT          UPDATE MASTER I/O COUNT          R41 24085800
         SPACE 1                                                    R41 24085900
         L     MDCT,BUFDCT         GET ASSOCIATED DCT ADDRESS       R41 24086000
         LA    MDCT,0(,MDCT)        PURIFY LINE DCT ADDRESS         R41 24086100
         USING DCTDSECT,MDCT         SHOW DCT ADDRESSABILITY        R41 24086200
         L     MCODE,MDCTCODE      GET ADDRESS OF CODE TABLE        R41 24086300
         USING MCODSECT,MCODE       SHOW CODE TABLE ADDRESSABILITY  R41 24086400
         SPACE 1                                                    R41 24086500
         SR    R1,R1               DECREMENT                        R41 24086600
         IC    R1,DCTBUFCT          ACTIVE                          R41 24086700
         S     R1,=F'1'              BUFFER COUNT                   R41 24086800
         BNZ   M01                 ERROR IF NOT ZERO                R41 24086900
         STC   R1,DCTBUFCT         STORE DECREMENTED BUFFER COUNT   R41 24087000
         SPACE 1                                                    R41 24087100
         L     R0,MDCTSXCP         INCREMENT                        R41 24087200
         AL    R0,=F'1'             SESSION                         R41 24087300
         ST    R0,MDCTSXCP           EXCP COUNT                     R41 24087400
         SPACE 1                                                    R41 24087500
         L     WA,IOBCSW-1         GET COMMAND ADDRESS FROM CSW     R41 24087600
         LA    WA,0(,WA)           CLEAR HIGH-ORDER BYTE            R41 24087700
         LTR   WA,WA               TEST                             R41 24087800
         BZ    MDRAINLN            MACHINE ERROR IF ZERO            R41 24087900
         SL    WA,=F'8'            GET LAST EXECUTED CSW            R41 24088000
         TM    IOBSIOCC,X'30'      TEST SIO CONDITION CODE          R41 24088100
         BZ    *+12                BRANCH IF SUCCESSFUL SIO         R41 24088200
         L     WA,IOBSTART         COMPENSATE FOR UNPREDICTABLE CSW R41 24088300
         BO    MDRAINLN            BRANCH IF LINE IS NOT AVAILABLE  R41 24088400
         MVC   MCOMMAND,5(WA)      COPY TP SEQUENCE TYPE FIELD      R41 24088500
         NI    MCOMMAND,X'0F'      EXTRACT CCW TYPE INDICATOR       R41 24088600
         EJECT                                                      R41 24088700
         TM    DCTFLAGS,DCTLOGAL   TEST FOR DIAGNOSTIC LOGGING      R41 24088800
         BZ    *+8                 BRANCH IF NO DIAGNOSTIC LOGGING  R41 24088900
         BAL   ML,MCELOG           LOG CHANNEL END                  R41 24089000
         SPACE 1                                                    R41 24089100
         TM    IOBCSW+4,X'BF'      TEST FOR DISASTROUS ERRORS       R41 24089200
         BNZ   MFORCERL            BR IF ANY TO FORCE ERROR AND LOG R41 24089300
         TM    IOBSENS0,X'80'      TEST SENSE BYTE                  R41 24089400
         BO    MCOMMREJ            BRANCH IF COMMAND REJECT         R41 24089500
         SPACE 1                                                    R41 24089600
         TM    DCTFLAGS,DCTRSTRT   TEST FOR LINE RESTART            R41 24089700
         BZ    MBSCPREP            SKIP IF NOT                      R41 24089800
         TM    MDCTSTAT,DCTSOFF    SHOULD DISCONNECT SEQ BE SENT    R41 24089900
         BO    MDRAINED            BRANCH IF YES                    R41 24090000
         B     MRSTLINE            ELSE GO ABORT AND DISCONNECT     R41 24090100
         EJECT                                                      R41 24090200
*                                                                   R41 24090300
*                             BSC PREPARE SEQUENCE PROCESSING       R41 24090400
*                                                                   R41 24090500
         SPACE 3                                                    R41 24090600
MBSCPREP TM    IOBCSW+3,X'03'      TEST CHANNEL END STATUS          R41 24090700
         BNZ   MBSCCE              BR IF UNIT CHECK OR UNIT EXCEPTN R41 24090800
         CLC   IOBCSW+5(2),6(WA)   CHECK RESIDUAL BYTE COUNT        R41 24090900
         BNE   MBSCCE              BRANCH IF NOT SAME AS INITIAL    R41 24091000
         CLI   0(WA),X'02'         CHECK FOR READ CCW               R41 24091100
         BNE   MBSCCE              BRANCH IF NOT READ                   24091200
         OI    IOBSENS0,X'02'      THIS IMPOSSIBLE CONDITION CAN ONLY   24091500
         OI    IOBCSW+3,X'02'       HAPPEN ON A 2703 -- SIMULATE ERROR  24092000
         SPACE 2                                                        24092500
MBSCCE   TM    5(WA),MPREPSEQ      TEST SEQUENCE TYPE                   24093000
         BZ    MBCERDWR            BRANCH IF NOT PREPARE                24093500
         SPACE 2                                                     R4 24094000
         CLI   0(WA),X'14'         TEST FOR CTCA SENSE COMMAND       R4 24094500
         BNE   MBSCPTOF            BRANCH IF NOT                     R4 24095000
         MVI   4(WA),X'60'         RE-CHAIN CTCA SENSE COMMAND       R4 24095500
         LA    R1,IOBCCW2          R1 = ADDRESS OF WRITE COMMAND     R4 24096000
         CLI   LCBMCB,0            IS OTHER SYSTEM WAITING IN READ   R4 24096500
         BNE   MNEWSTRT            BRANCH IF YES                     R4 24097000
         LA    R1,IOBCCW3          R1 = ADDRESS OF CONTROL COMMAND   R4 24097500
         B     MNEWSTRT            GO START CTCA                     R4 24098000
         SPACE 2                                                     R4 24098500
MBSCPTOF BAL   ML,MSIGNOFF         CHECK FOR DRAIN OR SIGN-OFF       R4 24099000
         SPACE 2                                                     R4 24099500
         TM    IOBCSW+3,X'01'      TEST CHANNEL END STATUS              24100000
         BO    MBSCPRUE            BRANCH IF UNIT EXCEPTION             24100500
         TM    MDCTLINE,DCTPCTC    TEST LINE TYPE                    R4 24101000
         BO    MBSCPTUC            BRANCH IF CTCA                    R4 24101500
         SPACE 1                                                     R4 24102000
         CLI   MCOMMAND,MENBCMD    TEST COMMAND TYPE                    24102500
         BL    MRETRY              BRANCH IF DISABLE OR SET MODE        24103000
         BE    MBSCPNAN            BRANCH IF ENABLE COMMAND             24103500
         CLI   MDCTIMOK,255        WAS MODEM ON HOOK                    24104000
         BNE   MBSCPNAN            BRANCH IF NOT                        24104500
         MVC   MDCTIMOK,MCLOCK     SET TIME MODEM FIRST READY           24105000
MBSCPNAN LA    R1,IOBCCW3          RESET RESTART ADDRESS                24105500
         ST    R1,IOBRESTR          TO BYPASS DISABLE AND SET MODE      24106000
         EJECT                                                       R4 24106500
MBSCPTUC TM    IOBCSW+3,X'02'      TEST CHANNEL END STATUS           R4 24107000
         BO    MBSCPRUC            BRANCH IF UNIT CHECK                 24107500
         MVI   IOBCCW3,X'27'       RESET CCW3 TO ENABLE              R4 24108000
         MVI   MDCTERCT,8          RESET ERROR COUNT                    24108500
         SPACE 2                                                        24109000
         LA    R1,TPBUFST-2        COMPUTE                              24109500
         AH    R1,6(,WA)            ADDRESS OF                          24110000
         SH    R1,IOBCSW+5           LAST TWO BYTES                     24110500
         MVC   LCBRCB,0(R1)        SAVE LAST TWO BYTES                  24111000
         SPACE 2                                                     R4 24111500
         CLC   MSOHENQ,LCBRCB      TEST RESPONSE                        24112000
         BE    MBSCPUST            BRANCH IF SOH-ENQ SEQUENCE           24112500
         TM    MSEQTYPE,MCPUSEQ    WAS SOH-ENQ SENT                  R4 24113000
         BNO   SKIP1320            SKIP IF NOT                       R4 24113500
         CLC   MACK0SEQ,LCBRCB     TEST RESPONSE                     R4 24114000
         BE    MBSCPUSA            BRANCH IF ACK0                    R4 24114500
SKIP1320 TM    MDCTLINE,DCTPCTC    TEST LINE TYPE                    R4 24115000
         BZ    MBSCPTNC            SKIP IF NOT CTCA                  R4 24115500
         OC    MDCTOBUF+1(3),MDCTOBUF+1 SIGNON TO BE SENT            R4 24116000
         BZ    SKIP1330            SKIP IF NOT                       R4 24116500
         OI    MSEQTYPE,MCPUSEQ    SET SENDING SOH-ENQ               R4 24117000
         LA    R1,MSOHENQ          POINY TO SOH-ENQ                  R4 24117500
         STCM  R1,7,IOBCCW2+1      SET WRITE CCW                     R4 24118000
SKIP1330 BAL   ML,MINITCDL         SETUP A DELAY                     R4 24118500
         B     MBUFNEXT            SEARCH FOR OTHER WORK             R4 24119000
         SPACE 2                                                     R4 24119500
MBSCPTNC CLC   MBSCENQ,LCBRCB+1    TEST RESPONSE                     R4 24120000
         BE    MSTARTRD            IF ENQ, START READER                 24120500
         CLC   MACK0SEQ,LCBRCB     IF ACK0,                             24121000
         BE    MSTARTPP             START PRINTER OR PUNCH              24121500
         CLC   MACK1SEQ,LCBRCB     IF ACK1,                             24122000
         BE    MSTARTPP             START PRINTER OR PUNCH              24122500
         CLC   MBSCNAK,LCBRCB+1    TEST RESPONSE FOR NAK             R4 24123000
         BE    MBSCPTST            BRANCH IF NAK                        24123500
         B     MRETRYL             OTHERWISE, LOG AND RETRY             24124000
         SPACE 2                                                        24124500
MBSCPRUE DS    0H                  BSC PREPARE UNIT EXCEPTION           24125000
         CLI   0(WA),X'01'         CHECK FOR WRITE COMMAND              24125500
         BE    MRESTART            GO CLEAR LOST DATA IF WRITE          24126000
         B     MRETRYL             OTHERWISE, LOG AND RETRY             24126500
         EJECT                                                          24127000
MBSCPRUC DS    0H                  BSC PREPARE UNIT CHECK               24127500
         CLI   0(WA),X'29'         TEST FOR UNSUCCESSFUL DIAL        R4 24128000
         BE    MFORCERL            IF YES, LOG AND RESTART LINE      R4 24128500
         MVI   IOBCCW3,X'27'       RESET CCW3 TO ENABLE              R4 24129000
         TM    IOBSENS0,X'02'      TEST FOR LOST DATA                   24129500
         BO    MRETRY              BRANCH IF LOST DATA                  24130000
         TM    IOBSENS0,X'41'      TEST FOR INT REQ OR TIMEOUT          24130500
         BZ    MRETRYL             BRANCH IF NEITHER TO LOG AND RETRY   24131000
         TM    IOBSENS0,X'40'      TEST FOR INTERVENTION REQUIRED       24131500
         BZ    MBSCPNAD            BRANCH IF NO                         24132000
         TM    MDCTLINE,DCTPNADS   SHOULD REMOTE BE DISCONNECTED        24132500
         BZ    MFORCERL            IF YES, LOG AND RESTART LINE         24133000
         BAL   ML,MCERRLOG         ELSE, LOG INT REQ           @OZ29621 24133200
         SPACE 1                                                     R4 24133500
MBSCPNAD CLI   MDCTIMOK,255        IF MODEM IS OFF HOOK              R4 24134000
         BE    MBSCPTD             TEST DIAL                         R4 24134500
         OC    MDCTOBUF+1(3),MDCTOBUF+1 SIGNON TO BE SENT            R4 24135000
         BZ    MBSCPNDI            BRANCH IF NOT                     R4 24135500
         OI    MSEQTYPE,MCPUSEQ    SET SENDING SOH-ENQ               R4 24136000
         LA    R1,MSOHENQ          POINT TO SOH-ENQ                  R4 24136500
         ST    R1,IOBCCW5          SET WRITE CCW ADDRESS             R4 24137000
         MVI   IOBCCW5,X'01'       SET WRITE OP-CODE                 R4 24137500
         MVI   IOBCCW5+7,2         SET COUNT                         R4 24138000
         B     MRETRY              RETRY I/O                         R4 24138500
         SPACE 1                                                     R4 24139000
MBSCPTD  CLI   IOBCCW7,0           NEED TO DIAL                      R4 24139500
         BZ    MRETRY              SKIP DIAL SETTING IF NOT          R4 24140000
         LA    R1,IOBCCW7+1        GET ADDRESS OF DIAL DIGITS        R4 24140500
         ST    R1,IOBCCW3          STORE IN CCW3                     R4 24141000
         MVI   IOBCCW3,X'29'       SET CCW3 TO DIAL                  R4 24141500
         MVC   IOBCCW3+7(1),IOBCCW7  SET COUNT OF DIAL DIGITS        R4 24142000
         MVI   IOBCCW7,0           RESET DIAL REQUEST                R4 24142500
         LA    R1,IOBCCW1          START AT DISABLE COMMAND          R4 24143000
         B     MNEWSTRT            GO TRY DIAL                       R4 24143500
         SPACE 1                                                     R4 24144000
MBSCPNDI CLI   MCOMMAND,MREADCMD   TEST COMMAND TYPE                 R4 24144500
         BNE   MRETRY              RETRY IF NOT READ                    24145000
         SPACE 1                                                     R4 24145500
MBSCPTST L     WA,MDCTDCT          GET ADDR OF FIRST REMOTE DCT         24146000
         LTR   WA,WA               TEST                                 24146500
         BZ    MRETRY              BRANCH IF NOT SIGNED ON              24147000
         TM    MDCTFMT-DCTDSECT(WA),DCTPROG  TEST FORMAT TYPE           24147500
         BNZ   MRETRY              BR IF PROGRAMMABLE INTERFACE         24148000
         SPACE 1                                                     R4 24148500
         CLI   IOBCCW5,X'01'       IS ENQ/EOT BEING SENT                24149000
         BNE   MBSCPNOP            BRANCH IF NO                         24149500
         XI    IOBCCW5+3,MBSCEOT-MBSCENQ     ALTERNATE ENQ AND EOT      24150000
         TM    IOBCCW5+3,MBSCEOT-MBSCENQ     IS EOT TO BE SENT          24150500
         BO    MRETRY              YES, SEND IT                         24151000
         EJECT                                                       R4 24151500
MBSCPNOP TM    MDCTATTN,MDCTJOB    TEST IF JOB HAS BEEN POSTED       R4 24152000
         BZ    MBSCPRNE            SET UP READ COMMAND IF NOT        R4 24152500
         BM    MRETRY              RETRY POLLING IF OUTPUT QUEUED    R4 24153000
         SPACE 1                                                     R4 24153500
         L     R1,MDCTRAT          GET TERMINAL RAT ENTRY ADDR       R4 24154000
         LH    R1,RATWTIME-RATDSECT(,R1) GET TERMINAL WAIT TIME      R4 24154500
         LTR   R1,R1               WAIT TIME INTERVAL SPECIFIED      R4 24155000
         BNZ   SKIP1340            USE TERMINAL VALUE IF YES         R4 24155500
         LH    R1,$WAITIME         GET INSTALLATION DEFAULT VALUE    R4 24156000
SKIP1340 AL    R1,MDCTIMOK         GET TIME INTERVAL EXPIRED AND     R4 24156500
         CL    R1,MCLOCK            CHECK AGAINST WAIT TIME VALUE    R4 24157000
         BH    MBSCPRNF            RETRY IF NOT YET EXPIRED    @OZ29391 24157500
         SPACE 1                                                     R4 24158000
         NI    MDCTATTN,255-MDCTJOB2    RESET QUEUE TO TEST INDIC.   R4 24158500
         L     WA,MDCTDCT-DCTDSECT(,WA) GET ADDR OF PRINTER DCT         24159000
         TM    DCTSTAT-DCTDSECT(WA),DCTDRAIN TEST STATUS                24159500
         BNZ   MBSCPRPU            BRANCH IF PRINTER IS DRAINED         24160000
         TM    DCTPPSW-DCTDSECT(WA),DCTPPSWS  TEST STATUS      @OZ20001 24160200
         BO    MBSCPRNC            BRANCH IF SEP PAGE SUPRESS  @OZ20001 24160300
         SLR   R15,R15             MULTIPLY                          R4 24160500
         IC    R15,DCTNO+1-DCTDSECT(,WA)  REMOTE NUMBER              R4 24161000
         LA    R1,0(R15,R15)               BY                        R4 24161500
         ALR   R1,R15                       THREE                    R4 24162000
         AL    R1,$MSPOOLQ         ADD ADDRESS OF REMOTE MSG QUEUES  R4 24162500
         CLC   1(1,R1),0(R1)       COMPARE RECORD NUMBERS               24163000
         BNE   MBSCPREQ            REMOTE MESSAGES QUEUED IF NOT EQUAL  24163500
         SPACE 1                                                     R4 24164000
MBSCPRNC DS    0H                                              @OZ20001 24164300
        $#GET  DCT=(WA),HAVE=NO    TEST FOR JOB TO PRINT                24164500
         BNZ   MBSCPREQ            BRANCH IF JOB AWAITING PRINT         24165000
         EJECT                                                       R4 24165500
MBSCPRPU DS    0H                                                    R4 24166000
         L     WA,MDCTDCT-DCTDSECT(,WA) GET ADDRESS OF PUNCH DCT        24166500
         LTR   WA,WA               IS THERE A PUNCH DCT                 24167000
         BZ    MBSCPRNE            BRANCH IF NO                         24167500
         TM    DCTSTAT-DCTDSECT(WA),DCTDRAIN TEST STATUS                24168000
         BNZ   MBSCPRNE            BRANCH IF PUNCH IS DRAINED           24168500
        $#GET  DCT=(WA),HAVE=NO    TEST FOR JOB TO PUNCH                24169000
         BNZ   MBSCPREQ            BRANCH IF JOB AWAITING PUNCH         24169500
         SPACE 1                                                     R4 24170000
MBSCPRNE NI    MDCTATTN,255-MDCTJOB1    RESET OUTPUT QUEUED INDIC.   R4 24170500
         SPACE 1                                               @OZ29391 24170900
MBSCPRNF MVI   IOBCCW5,X'03'       NOP ENQUIRY WRITE           @OZ29391 24171000
         TM    $RJEOPTS,$ADDSYNS   TEST ADDITIONAL IDLES OPTION      R4 24171500
         BZ    MRETRY              BR TO RETRY IF NOT SELECTED       R4 24172000
         MVI   IOBCCW4,X'03'       NOP ADD SYN WRITE                 R4 24172500
         MVI   IOBCCW4+4,X'60'     SET COMMAND CHAINING                 24173000
         B     MRETRY              RETRY READ COMMAND                R4 24173500
         SPACE 1                                                     R4 24174000
MBSCPREQ MVI   IOBCCW5,X'01'       ACTIVATE ENQUIRY WRITE            R4 24174500
         TM    $RJEOPTS,$ADDSYNS   TEST ADDITIONAL IDLES OPTION      R4 24175000
         BZ    MRETRY              RETRY IF NOT SET                  R4 24175500
         MVI   IOBCCW4,X'01'       ACTIVATE ADD SYN WRITE            R4 24176000
         MVI   IOBCCW4+4,X'A0'     SET DATA CHAINING                    24176500
         B     MRETRY              GO TO SEND ENQUIRY                R4 24177000
         EJECT                                                          24177500
*                                                                       24178000
*                             BSC READ/WRITE SEQUENCE PROCESSING        24178500
*                                                                       24179000
         SPACE 2                                                        24179500
MBCERDWR TM    5(WA),MCPUSEQ       TEST SEQUENCE TYPE                R4 24180000
         BZ    MBCENSF             BRANCH IF NOT PROGRAMMABLE INTERFACE 24180500
         OC    MDCTOBUF,MDCTOBUF   TEST OPEN AND OUTPUT STATUS       R4 24181000
         BNZ   MBCENSF             BRANCH IF REMOTE IS NOT IDLE         24181500
         BAL   ML,MSIGNOFF         CHECK FOR DRAIN OR SIGN-OFF          24182000
         SPACE 1                                                        24182500
MBCENSF  TM    IOBCSW+3,X'01'      TEST CHANNEL END STATUS           R4 24183000
         BO    MBSCRWUE            BRANCH IF UNIT EXCEPTION             24183500
         TM    IOBCSW+3,X'02'      TEST CHANNEL END STATUS              24184000
         BO    MBSCRWUC            BRANCH IF UNIT CHECK                 24184500
         MVI   MDCTERCT,8          RESET ERROR COUNT                    24185000
         SPACE 1                                                        24185500
         TM    5(WA),MCPUSEQ       TEST SEQUENCE TYPE                   24186000
         BZ    MBCE27X0            BRANCH IF NOT PROGRAMMABLE INTERFACE 24186500
         SPACE 1                                                        24187000
         MVI   IOBECBCC,0          RESET BUFFER BUSY STATUS          R4 24187500
         OI    MDCTSTAT,DCTPBUF    INDICATE OUTPUT NOT POSTED        R4 24188000
         NI    MDCTSTAT,255-DCTPOST INDICATE NO OUTPUT SENT          R4 24188500
         CLI   0(WA),X'02'         IS THIS A READ CCW               R41 24188600
         BNE   MFORCERL            IF NOT--FORCE ERROR & RESTART    R41 24188700
         L     R1,0(WA)            R1 = ADDRESS OF RESPONSE             24189000
         CLC   MSOHSTX,0(R1)       TEST RESPONSE                        24189500
         BE    MBCETEXT            BRANCH IF TEXT                       24190000
         CLC   MDLESTX,0(R1)       TEST RESPONSE                        24190500
         BE    MBCETEXT            BRANCH IF TRANSPARENT TEXT           24191000
         CLC   MACK0SEQ,0(R1)      TEST RESPONSE                        24191500
         BNE   MBCENAK0            BRANCH IF NOT ACK0                   24192000
         NI    MDCTFCS,X'BF'       TURN OFF WAIT-A-BIT INDICATION       24192500
         B     MBCEACK0            PROCESS ACK0                         24193000
         SPACE 1                                                        24193500
MBCENAK0 CLC   MSOHENQ,0(R1)       TEST RESPONSE                        24194000
         BE    MBSCPUST            BRANCH IF SOH-ENQ SEQUENCE           24194500
         CLC   MNAKSEQ,0(R1)       TEST FOR CTCA NAK                 R4 24195000
         BE    MFORCERL            LOG AND RESTART LINE IF NAK       R4 24195500
         CLC   MBSCNAK,0(R1)       TEST FIRST CHARACTER                 24196000
         BNE   MCWRNAKL            BRANCH IF INVALID RESPONSE           24196500
         BAL   ML,MCERRLOG         LOG NAK                              24197000
         CLI   MCOMMAND,MRRSPCMD   TEST LAST WRITE TYPE                 24197500
         BE    MBCENAK             BRANCH IF LAST WRITE WAS WAIT-A-BIT  24198000
         TM    5(WA),MWRITSEQ      TEST LAST WRITE TYPE                 24198500
         BO    MRETRY              BRANCH IF LAST WRITE WAS TEXT        24199000
         CLC   MACK0SEQ,LCBRCB     TEST LAST RESPONSE SENT              24199500
         BE    MBCENAK             BRANCH IF ACK0                       24200000
         TM    MDCTLINE,DCTPHASP   TEST LINE USAGE                      24200500
         BZ    MRETRY              BRANCH IF REMOTE WORKSTATION         24201000
         B     MBCENAK             AVOID NAK-NAK IF HASP                24201500
         EJECT                                                          24202000
MBCETEXT TM    MDCTLINE,DCTPCTC    TEST LINE TYPE                    R4 24202500
         BO    MBCETETB            BRANCH IF CTCA                    R4 24203000
         LR    R15,R1              COMPUTE                           R4 24203500
         AH    R15,6(WA)            ADDRESS                             24204000
         SH    R15,IOBCSW+5          OF                                 24204500
         BCTR  R15,0                  LAST BYTE                         24205000
         CLC   MBSCETB,0(R15)      TEST LAST BYTE                       24205500
         BE    MBCETETB            BRANCH IF LAST BYTE IS ETB           24206000
         MVC   IOBSENS0,0(R15)     SAVE LAST BYTE IN SENSE INFORMATION  24206500
         B     MCWRNAKL            WRITE NAK AND LOG                    24207000
MBCETETB MVC   MDCTFCS,3(R1)       SAVE FUNCTION CONTROL SEQUENCE       24207500
         SPACE 2                                                        24208000
         TM    2(R1),X'20'         TEST FOR RESET BLOCK SEQUENCE COUNT  24208500
         BZ    *+10                BRANCH IF NOT                        24209000
         MVN   MDCTRSEQ(1),2(R1)   YES, RESET COUNT                     24209500
         SPACE 1                                                        24210000
         TM    2(R1),X'30'         TEST FOR IGNORE BLOCK SEQUENCE COUNT 24210500
         BNZ   MBCENSEQ            BRANCH IF IGNORE OR RESET            24211000
         SPACE 1                                                        24211500
         MVN   MSEQWORK+1(1),2(R1) ISOLATE RECEIVED BLOCK COUNT         24212000
         SR    R15,R15             CLEAR REGISTER                       24212500
         IC    R15,MDCTRSEQ        PICK UP EXPECTED COUNT               24213000
         SH    R15,MSEQWORK        GENERATE ERROR                       24213500
         BZ    MBCEUSEQ            BRANCH IF NO ERROR                   24214000
         BP    *+8                 BRANCH IF NO DIGIT OVERFLOW          24214500
         LA    R15,16(R15)         CORRECT DIGIT OVERFLOW               24215000
         C     R15,=F'2'           COMPARE WITH MAXIMUM ERROR           24215500
         BNH   MBCEACK0            BRANCH IF DUPLICATE RECORD           24216000
         SPACE 1                                                        24216500
         MVI   IOBCSW+3,0          CLEAR CHANNEL END STATUS             24217000
         MVC   IOBSENS0,MSEQWORK+1 SET UP RECEIVED BLOCK SEQUENCE COUNT 24217500
         MVC   LCBACK,MDCTRSEQ     SET UP EXPECTED COUNT                24218000
         BAL   ML,MCERRLOG         LOG SEQUENCE ERROR                   24218500
         BAL   ML,MRSTRD           DELETE ALL INPUT PROCESSORS          24219000
         L     R1,0(WA)            RE-LOAD ADDRESS OF TEXT              24219500
         MVI   5(R1),0             NULLIFY TEXT                         24220000
         SPACE 1                                                        24220500
MBCEUSEQ LH    R15,MSEQWORK        INCREMENT RECEIVE                    24221000
         LA    R15,1(R15)           BLOCK SEQUENCE                      24221500
         STC   R15,MDCTRSEQ          COUNT                              24222000
         NI    MDCTRSEQ,X'0F'      TAKE MODULO SIXTEEN                  24222500
         EJECT                                                       R4 24223000
MBCENSEQ CLI   5(R1),X'E0'         TEST FOR REMOTE SEQUENCE ERROR       24223500
         BNE   MBCENSCK            BRANCH IF NOT                        24224000
         MVC   IOBCSW+3(2),=X'FFFF' INDICATE REMOTE SEQUENCE ERROR      24224500
         MVN   IOBSENS0,2(R1)      SET UP RECEIVED BLOCK SEQUENCE COUNT 24225000
         MVC   LCBACK,6(R1)        SET UP EXPECTED COUNT                24225500
         NI    LCBACK,X'0F'        ISOLATE SEQUENCE COUNT               24226000
         MVC   MDCTTSEQ(1),6(R1)   SAVE EXPECTED COUNT                  24226500
         L     R0,MDCTSREM         INCREMENT                            24227000
         AL    R0,=F'1'             NON-SPECIFIC                        24227500
         ST    R0,MDCTSREM           ERROR COUNT                        24228000
         BAL   ML,MCELOG           LOG SEQUENCE ERROR                   24228500
         BAL   ML,MRSTPP           RESTART ALL OUTPUT PROCESSORS        24229000
         L     R1,0(WA)            RE-LOAD ADDRESS OF TEXT              24229500
         SPACE 2                                                     R4 24230000
MBCENSCK LA    R1,5(R1)            GET ADDRESS OF FIRST RCB             24230500
         CLI   MCOMMAND,MRRSPCMD   TEST LAST WRITE TYPE                 24231000
         BNE   MBCEDATA            BRANCH IF NOT WAIT-A-BIT             24231500
         BAL   ML,MBCNTRLR         ANALYZE CONTROL RECORD               24232000
         B     MBCEDISC            CONTINUE PROCESSING               R4 24232500
         SPACE 1                                                        24233000
MBCEDATA ST    R1,TPBFDATA         INITIALIZE DATA POINTER              24233500
         BAL   ML,MBCNEXTR         PROCESS TEXT BUFFER                  24234000
         CLI   TPBRECNT,C'E'       IS INPUT BUFFER EMPTY                24234500
         BE    *+8                 SKIP IF YES                          24235000
         BAL   ML,MINITDLY         SETUP DELAY                          24235500
         MVC   MDCTIMOK,MCLOCK     SET TIME OF TEXT TRANSMISSION        24236000
MBCEDISC TM    DCTFLAGS,DCTRSTRT   WAS DISCONNECT RECORD RECEIVED    R4 24236500
         BO    MRSTLINE            BRANCH IF YES                     R4 24237000
         SPACE 2                                                     R4 24237500
MBCEACK0 TM    5(WA),MWRITSEQ      TEST LAST WRITE TYPE                 24238000
         BZ    MBCENTXT            BRANCH IF LAST WRITE WAS NOT TEXT    24238500
         MVC   MDCTIMOK,MCLOCK     SET TIME OF TEXT TRANSMISSION        24239000
         L     R1,MDCTOBUF         GET ADDRESS OF OUTPUT BUFFER         24239500
         MVC   MDCTOBUF+1(3),BUFCHAIN+1-BUFDSECT(R1)   DECHAIN BUFFER   24240000
         OI    MDCTSTAT,DCTPOST    INDICATE OUTPUT SENT              R4 24240500
         L     R15,BUFDCT-BUFDSECT(,R1) GET ADDRESS OF ASSOCIATED DCT   24241000
         OI    MDCTSTAT-DCTDSECT(R15),DCTPOST  SHOW I/O COMPLETE        24241500
         CLI   TPBUFST+5-BUFDSECT(R1),X'91'  TEST OUTPUT RCB            24242000
         BNE   MBCEOUT             BRANCH IF NOT CONSOLE                24242500
         LR    R15,R1              R15 IS 1ST OUTPUT BUFFER ADDR        24243000
MBCERC1  L     R15,BUFCHAIN-BUFDSECT(,R15)  GET ADDR NEXT BUFFER        24243500
         LTR   R15,R15             TEST BUFFER ADDRESS                  24244000
         BNZ   MBCERC2             BRANCH IF NOT END OF CHAIN           24244500
         MVI   MDCTCMCT,0          ZERO CONSOLE MESSAGE COUNT        R4 24245000
         B     MBCEOUT             GO FREE 1ST BUFFER                   24245500
MBCERC2  CLI   TPBUFST+5-BUFDSECT(R15),X'91'  TEST OUTPUT RCB           24246000
         BNE   MBCERC1             LOOP IF NOT CONSOLE                  24246500
MBCEOUT $FREEBUF (R1)              FREE OUTPUT BUFFER                   24247000
         EJECT                                                       R4 24247500
MBCENTXT TM    MDCTFCS,X'40'       TEST REMOTE FCS                      24248000
         BO    MBCENAK             BRANCH IF WAIT-A-BIT                 24248500
         LR    R1,MDCT             PREPARE TO POST OUTPUT PROCESSORS    24249000
         SPACE 3                                                        24249500
MBCENDCT L     R1,MDCTDCT-DCTDSECT(R1)  GET ADDRESS OF NEXT REMOTE DCT  24250000
         LTR   R1,R1               TEST FOR END OF CHAIN                24250500
         BZ    MBCENAK             BRANCH IF NO MORE REMOTE DCT'S       24251000
         SPACE 1                                                        24251500
         TM    MDCTSTAT-DCTDSECT(R1),DCTPOST      TEST DCT STATUS       24252000
         BZ    MBCENDCT            BRANCH IF I/O IS NOT COMPLETE        24252500
         SPACE 1                                                        24253000
         MVC   MFCSWORK,MDCTFCS-DCTDSECT(R1) GET UNIT FCS               24253500
         NC    MFCSWORK,MDCTFCS    APPLY REMOTE FCS                     24254000
         BZ    MBCENDCT            BRANCH IF UNIT WAS NOT POSTED        24254500
         SPACE 1                                                        24255000
         NI    MDCTSTAT,255-DCTPBUF-DCTPOST INDICATE OUTPUT POST     R4 24255500
         NI    MDCTSTAT-DCTDSECT(R1),255-DCTPOST  RESET I/O POST        24256000
         L     R15,DCTPCE-DCTDSECT(R1)  GET ADDRESS OF ASSOCIATED PCE   24256500
        $POST  (R15),WORK          POST PROCESSOR                       24257000
         B     MBCENDCT            GET NEXT DCT                         24257500
         SPACE 3                                                        24258000
MBCENAK  CLI   MCOMMAND,MREADCMD   TEST LAST WRITE TYPE                 24258500
         BE    MBCENWAB            BRANCH IF NOT WAIT-A-BIT             24259000
         LA    R1,MBSCSEQ+MCPUSEQ  RECONSTRUCT                          24259500
         BAL   ML,MCCWINIT          CCW CHAIN                           24260000
         EJECT                                                          24260500
MBCENWAB TM    MDCTATTN,MDCTIMER   WAS A DELAY SETUP                    24261000
         BO    *+8                 SKIP IF YES                          24261500
         BAL   ML,MINITIO          SETUP NEXT I/O OPERATION             24262000
         TM    MDCTSTAT,DCTPBUF    WAS OUTPUT POSTED                 R4 24262500
         BZ    SKIP1350            SKIP IF YES                       R4 24263000
         OI    MDCTSTAT,DCTPOST    INDICATE OUTPUT NOT POSTED        R4 24263500
SKIP1350 TM    MDCTATTN,MDCTJOB    TEST IF JOB HAS BEEN POSTED          24264000
         BZ    MBUFNEXT            BRANCH IF NO JOB POST             R4 24264500
         NI    MDCTATTN,255-MDCTJOB     RESET JOB POST INDICATION       24265000
         TM    DCTSTAT,DCTDRAIN    TEST LINE DCT STATUS                 24267500
         BO    MBUFNEXT            BRANCH IF DRAINING                R4 24268000
         TM    MDCTSTAT,DCTSOFF    TEST LINE DCT REMOTE STATUS          24268500
         BO    MBUFNEXT            BRANCH IF SIGNING OFF             R4 24269000
         SPACE 1                                                     R4 24269500
MBCENEXT L     MDCT,MDCTDCT        GET ADDRESS OF NEXT REMOTE DCT       24270000
         LTR   MDCT,MDCT           TEST FOR END OF CHAIN                24270500
         BZ    MBUFNEXT            BRANCH IF END OF CHAIN            R4 24271000
         CLI   DCTDEVTP,DCTRJR     TEST DEVICE TYPE                     24271500
         BE    MBCENEXT            BRANCH IF REMOTE READER              24272000
         TM    DCTSTAT,DCTINUSE+DCTDRAIN  TEST DEVICE STATUS            24272500
         BNZ   MBCENEXT            BRANCH IF IN USE OR DRAINED          24273000
         NI    DCTSTAT,255-DCTHOLD RESET HOLD BIT                       24273500
         L     R1,DCTPCE           INDICATE UNIT                     R4 24274000
        $POST  (R1),WORK            IS AVAILABLE                     R4 24274500
         B     MBCENEXT            GET NEXT DCT                         24275000
         SPACE 3                                                     R4 24275500
MRSTRD   LA    R15,16*O            SET MASK FOR INPUT DELETE         R4 24276000
         B     *+8                 ENTER COMMON CODE                    24276500
         SPACE 1                                                     R4 24277000
MRSTPP   LA    R15,16*Z            SET MASK FOR OUTPUT RESTART       R4 24277500
         LR    R1,MDCT             PREPARE TO SCAN REMOTE DCT'S         24278000
         SPACE 1                                                        24278500
MRSTNEXT L     R1,MDCTDCT-DCTDSECT(R1)  GET ADDRESS OF NEXT REMOTE DCT  24279000
         LTR   R1,R1               TEST FOR END OF CHAIN                24279500
         BCR   Z,ML                RETURN IF END OF CHAIN               24280000
         TM    DCTDEVTP-DCTDSECT(R1),DCTPRPU  TEST DEVICE TYPE       R4 24280500
         EX    R15,MRSTBC          BRANCH IF NOT SELECTED TYPE       R4 24281000
         OI    DCTFLAGS-DCTDSECT(R1),DCTRSTRT+DCTBKSP  RESTART JOB      24281500
         B     MRSTNEXT            GET NEXT DCT                         24282000
         SPACE 1                                                     R4 24282500
MRSTBC   BC    *-*,MRSTNEXT        *** EXECUTE ONLY ***              R4 24283000
         EJECT                                                          24283500
MBCE27X0 L     R1,0(,WA)           GET DATA ADDRESS                     24284000
         CLC   MSOHENQ,0(R1)       TEST FOR SOH-ENQ SEQUENCE            24284500
         BE    MFORCERL            RESTART LINE IF SOH-ENQ              24285000
         TM    5(WA),MWRITSEQ      TEST SEQUENCE TYPE                   24285500
         BO    MBCEHDWR            BRANCH IF WRITE SEQUENCE             24286000
         CLC   MBSCSTX,TPBUFST     TEST FIRST DATA BYTE                 24286500
         BE    MBCEHDRD            BRANCH IF STX                        24287000
         CLC   MDLESTX,TPBUFST     TEST FIRST TWO DATA BYTES            24287500
         BE    MBCEHDRD            BRANCH IF DLE-STX                    24288000
         CLC   MBSCENQ,TPBUFST     TEST FIRST DATA BYTE                 24288500
         BE    MRETRY              BRANCH IF ENQ                        24289000
         CLC   MBSCSOH,TPBUFST     TEST FIRST DATA BYTE                 24289500
         BE    MBCENULL            BRANCH IF SOH                        24290000
         B     MWRNAKL             INVALID DATA RECEIVED                24290500
         SPACE 1                                                        24291000
MBCEHDRD LA    R1,TPBUFST-1        COMPUTE                              24291500
         AH    R1,6(,WA)            ADDRESS OF                          24292000
         SH    R1,IOBCSW+5           LAST BYTE                          24292500
         CLC   MBSCENQ,0(R1)       TEST LAST BYTE                       24293000
         BE    MWRNAK              BRANCH IF ENQ                        24293500
         ST    R1,BUFEWF           SAVE ADDRESS OF LAST DATA BYTE       24294000
         NI    MDCTSTAT,255-DCTETX RESET ETX SWITCH                     24294500
         CLC   MBSCETX,0(R1)       TEST TERMINATION BYTE                24295000
         BNE   *+8                 BRANCH IF NOT ETX                    24295500
         OI    MDCTSTAT,DCTETX     SET ETX SWITCH, NEXT EOT IS EOF      24296000
         LH    R1,$BFSZBSC         GET                               R4 24296500
         BCTR  R1,0                 MAXIMUM                          R4 24297000
         BCTR  R1,0                  DATA LENGTH                     R4 24297500
         CLC   MBSCDLE,TPBUFST     TEST FIRST DATA BYTE                 24298000
         BNE   *+6                 BRANCH IF NOT DLE                    24298500
         BCTR  R1,0                REDUCE MAXIMUM DATA LENGTH           24299000
         CH    R1,IOBCSW+5         COMPARE WITH RESIDUAL LENGTH         24299500
         BH    MNORMAL             BRANCH IF DATA PRESENT               24300000
         SPACE 1                                                        24300500
MBCENULL L     R1,IOBRESTR         SET UP                               24301000
         ST    R1,IOBSTART          ADDRESS OF RESTART CCW              24301500
         BAL   ML,MEXCPNXT         READ NEXT BLOCK                      24302000
         B     MBUFNEXT            SEARCH FOR OTHER WORK             R4 24302500
         EJECT                                                       R4 24303000
MBCEHDWR CLC   MBSCDLE,LCBRCB      TEST FIRST CHARACTER OF RESPONSE     24303500
         BNE   MBSCHNAK            BRANCH IF NOT DLE                    24304000
         CLC   LCBACK,LCBRCB+1     TEST SECOND CHARACTER                24304500
         BE    MNORMAL             BRANCH IF ACK WAS THE ONE EXPECTED   24305000
         CLC   MBSCWACK,LCBRCB+1   TEST SECOND CHARACTER                24305500
         BE    MWRENQ              BRANCH IF WACK                       24306000
         CLI   MCOMMAND,MRREQCMD   TEST COMMAND TYPE                    24306500
         BNE   MWRENQL             WRITE ENQUIRY IF NOT ALREADY WRITTEN 24307000
         IC    ML,LCBRCB+1         GET                               R4 24307500
         X     ML,MBSCACKX-3-MCODSECT(,MCODE)  INVERTED ACK          R4 24308000
         EX    ML,MBCEHTST         COMPARE INVERTED ACK              R4 24308500
         BE    MRETRYL             BRANCH IF COUNT CHECK TO RETRY & LOG 24309000
         B     MWRENQL             INVALID RESPONSE, WRITE ENQ & LOG    24309500
         SPACE 1                                                        24310000
MBSCHNAK CLC   MBSCNAK,LCBRCB      TEST FOR NAK                         24310500
         BNE   MBCEHENQ            BRANCH IF NOT NAK                    24311000
         CLC   MBSCEOT,LCBRCB+1    TEST FOR PREVIOUS EOT                24311500
         BE    MWRENQ              BRANCH IF YES                        24312000
         CLI   MCOMMAND,MRREQCMD   TEST COMMAND TYPE                    24312500
         BE    MRETRY              BRANCH IF RESPONSE TO ENQ            24313000
         B     MRETRYL             OTHERWISE, LOG AND RETRY             24313500
         SPACE 1                                                        24314000
MBCEHENQ CLI   MCOMMAND,MRREQCMD   TEST COMMAND TYPE                    24314500
         BE    MWRENQ              BRANCH IF RESPONSE TO ENQ            24315000
         B     MWRENQL             OTHEWISE, WRITE ENQUIRY AND LOG      24315500
         SPACE 1                                                     R4 24316000
MBCEHTST CLI   LCBACK,*-*          *** EXECUTE ONLY ***              R4 24316500
         EJECT                                                          24317000
MBSCRWUE DS    0H                  PROCESS BSC UNIT EXCEPTION           24317500
         CLI   0(WA),X'01'         TEST COMMAND TYPE                    24318000
         BE    MRESTART            BRANCH IF WRITE COMMAND              24318500
         SPACE 2                                                        24319000
         TM    5(WA),MCPUSEQ       TEST SEQUENCE TYPE                   24319500
         BNZ   MCWRNAKL            BRANCH IF PROGRAMMABLE INTERFACE  R4 24320000
         SPACE 2                                                        24320500
         CLC   MBSCEOT,LCBRCB+1    TEST FOR PREVIOUS EOT                24321000
         BE    MRDTEST             BRANCH IF YES                        24321500
         MVC   LCBACK,MBSCACK0     SET ACK0 RESPONSE                    24322000
         CLC   MBSCWACK,LCBRCB+1   TEST LAST RESPONSE                   24322500
         BE    *+10                BRANCH IF WACK                       24323000
         MVC   LCBACK,MBSCACK1     SET ACK1 RESPONSE TO FORCE RETRY     24323500
         MVC   LCBRCB+1(1),MBSCEOT INDICATE EOT RECEIVED                24324000
MRDTEST  CLI   MCOMMAND,MRREQCMD   TEST COMMAND TYPE                    24324500
         BE    MPPSUSPD            BRANCH IF READ RESPONSE TO ENQ       24325000
         CLI   MCOMMAND,MRRSPCMD   TEST COMMAND TYPE                    24325500
         BNE   METXTEST            BRANCH IF NOT READ RESPONSE          24326000
MPPSUSPD DS    0H                  SUSPEND REMOTE OUTPUT DEVICES        24326500
         LR    R1,MDCT             SEARCH REMOTE DCTS                   24327000
         SPACE 1                                                        24327500
MPPSRCH  L     R1,MDCTDCT-DCTDSECT(,R1)  GET ADDR OF NEXT RMT DCT       24328000
         LTR   R1,R1               TEST FOR END OF CHAIN                24328500
         BZ    MWRENQL             BRANCH IF END OF CHAIN               24329000
         TM    DCTSTAT-DCTDSECT(R1),DCTINUSE  TEST DEVICE STATUS        24329500
         BZ    MPPSRCH             BRANCH IF NOT IN USE                 24330000
         TM    DCTPPFL-DCTDSECT(R1),DCTSUSPD  IS SUSPEND ALLOWED        24330500
         BZ    MWRENQL             BRANCH IF NO                         24331000
         OI    DCTFLAGS-DCTDSECT(R1),DCTRSTRT+DCTBKSP  SUSPEND          24331500
         B     MWRENQL             GO LOG AND WRITE ENQ                 24332000
         SPACE 2                                                        24332500
METXTEST TM    MDCTSTAT,DCTETX     TEST FOR ETX                         24333000
         BO    MREADEOT            BRANCH IF ETX, EOT IS REAL           24333500
         SPACE 2                                                        24334000
         MVC   LCBACK,MBSCACK0     SET RESPONSE                         24334500
         MVC   LCBRCB,MACK0SEQ      TO ACK0                             24335000
         B     MRDTXT                AND READ FOR ENQ                   24335500
         EJECT                                                          24336000
MBSCRWUC DS    0H                  PROCESS BSC UNIT CHECK               24336500
         TM    IOBSENS0,X'40'      TEST SENSE BYTE                      24337000
         BZ    MBUCNADS            BRANCH IF NOT INTV REQD              24337500
         TM    MDCTLINE,DCTPNADS   SHOULD REMOTE BE DISCONNECTED        24338000
         BZ    MFORCERL            IF YES, LOG AND RESTART LINE         24338500
         B     MBINTREQ            ELSE PROCESS INTV REQD               24339000
MBUCNADS DS    0H                  *                                    24339500
         CLI   MCOMMAND,MENBCMD    TEST COMMAND TYPE                    24340000
         BE    MBINTREQ            BRANCH IF ENABLE                     24340500
         SPACE 2                                                     R4 24341000
         TM    5(WA),MCPUSEQ       TEST SEQUENCE TYPE                   24341500
         BZ    MBUCHDWR            BRANCH IF NOT PROGRAMMABLE INTERFACE 24342000
         SPACE 3                                                        24342500
MCWRNAKL BAL   ML,MCERRLOG         LOG ERROR                            24343000
         TM    MDCTLINE,DCTPCTC    THIS FOR CTCA                     R4 24343500
         BO    MRSTLINE            RESTART LINE IF YES               R4 24344000
         LA    R0,IOBCCW2          RECONSTRUCT                          24344500
         LA    R1,MBSCSEQ+MCPUSEQ   CCW                                 24345000
         BAL   ML,MCCWINIT           CHAIN                              24345500
         CLI   TPBRECNT,C'E'       TEST INPUT BUFFER STATUS             24346000
         BE    MWRNAK              BR IF INPUT BUFFER IS EMPTY          24346500
         SPACE 2                                                        24347000
         LA    R1,IOBCCW7          NO, USE CCW AREA                     24347500
         ST    R1,IOBCCW4          SET ADDRESS OF READ CCW              24348000
         MVI   IOBCCW4,X'02'       SET READ CCW                         24348500
         MVC   IOBCCW4+5(3),MWABTSEQ    SET COMMAND TYPE AND BYTE COUNT 24349000
         B     MWRNAK              WRITE NAK                            24349500
         SPACE 3                                                        24350000
MBUCHDWR LA    R1,MBUCTAB-4        PREPARE TO SCAN UNIT CHECK TABLE  R4 24350500
         SPACE 3                                                        24351000
MBUCSRCH LA    R1,4(,R1)           ADVANCE TO NEXT ENTRY                24351500
         CLC   0(1,R1),MCOMMAND    TEST COMMAND TYPE                 R4 24352000
         BL    MBUCSRCH            BRANCH IF TABLE ENTRY IS LOW         24352500
         BNE   MFORCERL            BRANCH IF CONDITION IS NOT IN TABLE  24353000
         SPACE 2                                                     R4 24353500
         IC    ML,1(,R1)           GET SENSE MASK                    R4 24354000
         EX    ML,MBUCSENS         TEST SENSE BITS                   R4 24354500
         BZ    MBUCSRCH            BRANCH IF ALL SELECTED BITS ARE OFF  24355000
         SPACE 2                                                     R4 24355500
         LH    R1,2(R1)            LOAD ERROR SEQUENCE DISPLACEMENT     24356000
         B     0(R1,MBASE1)        BRANCH TO ERROR SEQUENCE          R4 24356500
         SPACE 1                                                     R4 24357000
MBUCSENS TM    IOBSENS0,*-*        *** EXECUTE ONLY ***              R4 24357500
         EJECT                                                       R4 24358000
MBUCTAB  DS    0H             BSC UNIT CHECK ERROR SEQUENCE TABLE       24358500
*                                  READ           LD/TO                 24359000
         DC    AL1(MREADCMD),X'03',Y(MRDTXT-MBSCPROC)                R4 24359500
*                                  READ           BO/DC/OR              24360000
         DC    AL1(MREADCMD),X'2C',Y(MWRNAKL-MBSCPROC)               R4 24360500
*                                  READ RESPONSE  BO/DC/OR/LD/TO        24361000
         DC    AL1(MRRSPCMD),X'2F',Y(MWRENQL-MBSCPROC)               R4 24361500
*                                  RD RSP TO ENQ  BO/DC/OR/LD/TO        24362000
         DC    AL1(MRREQCMD),X'2F',Y(MWRENQL-MBSCPROC)               R4 24362500
*                                  WRITE          BO                    24363000
         DC    AL1(MWRITCMD),X'20',Y(MWRENQL-MBSCPROC)               R4 24363500
*                                  WRITE RESPONSE BO                    24364000
         DC    AL1(MWRSPCMD),X'20',Y(MRESTART-MBSCPROC)              R4 24364500
*                                  WRITE ENQUIRY  BO                    24365000
         DC    AL1(MWENQCMD),X'20',Y(MWRENQL-MBSCPROC)               R4 24365500
         DC    X'FF'          END OF TABLE                              24366000
         SPACE 10                                                       24366500
MWRENQL  BAL   ML,MCERRLOG         LOG ERROR                            24367000
         B     MWRENQ              WRITE ENQUIRY                        24367500
         SPACE 5                                                        24368000
MRDTXT   BAL   ML,MCERRLOG         LOG ERROR                            24368500
         LA    R1,IOBCCW4          GET ADDRESS OF READ TEXT             24369000
         B     MNEWSTRT            INITIATE I/O                         24369500
         EJECT                                                          24370000
MBSCPUST DS    0H                                                    R4 24370500
         OI    DCTFLAGS,DCTRSTRT   ABORT ANY SIGNON ATTEMPT          R4 24371000
         BAL   ML,MABORT           ABORT ACTIVE FUNCTIONS            R4 24371500
MBSCPUSA XC    MDCTRSEQ(2),MDCTRSEQ  INIT BLOCK SEQUENCE COUNTS      R4 24372000
         MVC   MDCTFCS(2),MBASEFCS    AND FUNCTION CONTROL SEQUENCE  R4 24372500
         MVC   LCBRCB,MACK0SEQ     SET UP ACK0 RESPONSE                 24373000
         LA    R0,IOBCCW2          SET UP                               24373500
         TM    MDCTLINE,DCTPCTC     BEGINNING AT CCW2                R4 24374000
         BZ    SKIP1360             OR, IF CTCA,                     R4 24374500
         LA    R0,IOBCCW1           CCW1 THE                         R4 24375000
SKIP1360 LA    R1,MBSCSEQ+MCPUSEQ   BSC CPU                             24375500
         BAL   ML,MCCWINIT           CCW STRING                         24376000
         B     MRETRY              READ SIGN-ON RECORD                  24376500
         SPACE 3                                                        24377000
MRESTART LR    R1,WA               RESTART CCW STRING WITH READ CCW     24377500
         SPACE 1                                                        24378000
MRSTLOOP LA    R1,8(,R1)           GET NEXT CCW                         24378500
         CLI   0(R1),X'08'         TEST COMMAND CODE                    24379000
         BNE   *+8                 BRANCH IF NOT TIC                    24379500
         L     R1,0(,R1)           SIMULATE TIC                         24380000
         CLI   0(R1),X'02'         TEST COMMAND CODE                    24380500
         BE    MNEWSTRT            BRANCH IF READ                       24381000
         B     MRSTLOOP            GET NEXT CCW                         24381500
         SPACE 3                                                        24382000
MWRNAKL  BAL   ML,MCERRLOG         LOG ERROR                            24382500
         SPACE 1                                                        24383000
MWRNAK   MVC   LCBRCB,MNAKSEQ      SET UP NAK RESPONSE                  24383500
         SPACE 1                                                        24384000
MWRENQ   LA    R1,IOBCCW2          GET ADDRESS OF WRITE RESP/ENQ CCW    24384500
         TM    MDCTLINE,DCTPCTC    TEST LINE TYPE                    R4 24385000
         BZ    MNEWSTRT            GO WRITE NAK/ENQ IF NOT CTCA      R4 24385500
         LA    R1,IOBCCW1          START AT CCW1 FOR CTCA            R4 24386000
         B     MNEWSTRT            WRITE NAK RESPONSE                   24386500
         SPACE 3                                                        24387000
MBINTREQ BAL   ML,MCERRLOG         LOG INTERVENTION REQUIRED            24387500
         MVC   LCBRCB,MNAKSEQ      SET UP NAK RESPONSE                  24388000
         LA    R1,IOBCCW1          GET ADDRESS OF ENABLE                24388500
         B     MNEWSTRT            RESTART WITH ENABLE                  24389000
         SPACE 3                                                     R4 24389500
MSTARTRD L     WA,MDCTDCT          GET ADDRESS OF FIRST REMOTE DCT      24390000
         LTR   WA,WA               TEST                                 24390500
         BZ    MSONOPEN            BRANCH IF REMOTE HAS NOT SIGNED ON   24391000
         MVI   IOBCCW5,X'01'              SET WRITE COMMAND          R4 24391500
         OI    IOBCCW5+3,MBSCEOT-MBSCENQ  FORCE WRITE EOT            R4 24392000
         BAL   ML,MSTUNIT                 ATTEMPT TO START RDR       R4 24392500
         B     MRETRY                     SEND EOT IF FAILED         R4 24393000
         EJECT                                                       R4 24393500
MSTARTPP CLI   IOBCCW5,X'01'       TEST COMMAND TYPE                    24394000
         BNE   *+8                 BRANCH IF NOT WRITE                  24394500
         OI    IOBCCW5+3,MBSCEOT-MBSCENQ     FORCE WRITE EOT            24395000
         TM    MDCTATTN,MDCTJOB    TEST FOR JOB POST                 R4 24395500
         BZ    MRETRY              RETRY COMMAND IF NOT              R4 24396000
         SPACE 1                                                     R4 24396500
         L     WA,MDCTDCT          GET ADDRESS OF FIRST REMOTE DCT      24397000
         LTR   WA,WA               TEST                                 24397500
         BZ    MSTARTNO            BRANCH IF REMOTE NOT SIGNED ON    R4 24398000
         SPACE 2                                                     R4 24398500
         L     WA,MDCTDCT-DCTDSECT(,WA) GET ADDRESS OF PRINTER DCT      24399000
         TM    DCTPPSW-DCTDSECT(WA),DCTPPSWS      TEST STATUS           24399500
         BO    MSTARTPU            BRANCH IF SEPARATOR PAGE SUPPRESSED  24400000
         SPACE 1                                                     R4 24400500
         SLR   R15,R15             MULTIPLY                          R4 24401000
         IC    R15,DCTNO+1-DCTDSECT(,WA)  REMOTE NUMBER              R4 24401500
         LA    R1,0(R15,R15)               BY                        R4 24402000
         ALR   R1,R15                       THREE                    R4 24402500
         AL    R1,$MSPOOLQ         ADD ADDRESS OF REMOTE MSG QUEUES  R4 24403000
         CLC   1(1,R1),0(R1)       COMPARE RECORD NUMBERS               24403500
         BE    MSTARTPU            NO MESSAGES QUEUED IF EQUAL          24404000
         BAL   ML,MSTUNIT          ATTEMPT TO START REMOTE PRINTER      24404500
         SPACE 1                                                        24405000
MSTARTPU L     WA,MDCTDCT-DCTDSECT(,WA)  GET ADDRESS OF PUNCH DCT    R4 24405500
         LTR   WA,WA               IS THERE A PUNCH DCT                 24406000
         BZ    MSTARTPR            BRANCH IF NO                         24406500
        $#GET  DCT=(WA),HAVE=NO    TEST FOR JOB TO PUNCH                24407000
         BZ    *+8                 BRANCH IF NO JOB QUEUED FOR PUNCH    24407500
         BAL   ML,MSTUNIT          ATTEMPT TO START REMOTE PUNCH        24408000
         SPACE 1                                                     R4 24408500
MSTARTPR L     WA,MDCTDCT          GET ADDRESS OF FIRST REMOTE DCT      24409000
         L     WA,MDCTDCT-DCTDSECT(,WA) GET ADDRESS OF PRINTER DCT      24409500
        $#GET  DCT=(WA),HAVE=NO    TEST FOR JOB TO PRINT                24410000
         BZ    *+8                 BRANCH IF NO JOB QUEUED FOR PRINT    24410500
         BAL   ML,MSTUNIT          ATTEMPT TO START REMOTE PRINTER      24411000
         SPACE 1                                                     R4 24411500
MSTARTNO NI    MDCTATTN,255-MDCTJOB     RESET JOB POST INDICATOR     R4 24412000
         B     MRETRY                    AND RETRY COMMAND           R4 24412500
         EJECT                                                       R4 24413000
MSTUNIT  TM    DCTSTAT-DCTDSECT(WA),DCTINUSE+DCTDRAIN  TEST STATUS      24413500
         BCR   NZ,ML               RETURN IF DEVICE IS DRAINED          24414000
         ST    MBUF,DCTBUFAD-DCTDSECT(,WA)   SET BUFFER ADDRESS         24414500
         NI    DCTSTAT-DCTDSECT(WA),255-DCTHOLD  MAKE DEVICE AVAILABLE  24415000
         L     R1,DCTPCE-DCTDSECT(,WA)  INDICATE UNIT                R4 24415500
        $POST  (R1),WORK                 IS AVAILABLE                R4 24416000
         OI    MDCTATTN,MDCTIMER   INDICATE LINE PAUSE               R4 24416500
         OI    MSTQE+IPOST,X'20'    AND TIMER ACTION REQ             R4 24417000
         B     MBUFNEXT            SEARCH FOR OTHER WORK             R4 24417500
         SPACE 1                                                     R4 24418000
MNORMAL  LA    R1,TPBUFST          INITIALIZE ADDRESSES OF              24418500
         ST    R1,TPBLCCAD          FIRST CARRIAGE CONTROL              24419000
         ST    R1,TPBFDATA           AND FIRST DATA BYTE                24419500
         MVC   MDCTIMOK,MCLOCK     SET TIME OF TEXT TRANSMISSION        24420000
         SPACE 1                                                        24420500
MREADEOT MVC   BUFECBCC,IOBECBCC   SET COMPLETION CODE                  24421000
         MVC   IOBSTART,IOBRESTR   RESET ADDRESS OF FIRST CCW           24421500
         SLR   ML,ML               INITIALIZE $POST SWITCH           R4 24422000
         LR    R1,MDCT             PREPARE TO SEARCH REMOTE DCT'S       24422500
         SPACE 1                                                        24423000
MPOST    L     R1,MDCTDCT-DCTDSECT(R1)  GET NEXT REMOTE DCT             24423500
         LTR   R1,R1               TEST FOR END OF CHAIN                24424000
         BNZ   MPOSTACT            BR IF NO                          R4 24424500
         LTR   ML,ML                ELSE TEST $POST SWITCH           R4 24425000
         BZ    MSONGET             BRANCH IF REMOTE IS NOT SIGNED ON    24425500
         B     MBUFNEXT            BRANCH IF REMOTE IS SIGNED ON     R4 24426000
         SPACE 1                                                     R4 24426500
MPOSTACT TM    DCTSTAT-DCTDSECT(R1),DCTINUSE  TEST DCT STATUS        R4 24427000
         BZ    MPOST               BRANCH IF DCT IS NOT IN USE          24427500
         L     ML,DCTPCE-DCTDSECT(,R1)  GET PCE ADDR, SET $POST SW   R4 24428000
        $POST  (ML),WORK           FIRE UP PROCESSOR                 R4 24428500
         B     MPOST               PROCESS REST OF DCT CHAIN            24429000
         EJECT                                                       R4 24429500
MRETRYL  BAL   ML,MCERRLOG         LOG ERROR                            24430000
         SPACE 1                                                        24430500
MRETRY   L     R1,IOBRESTR         SET UP REGISTER FOR RETRY            24431000
         SPACE 1                                                        24431500
MNEWSTRT ST    R1,IOBSTART         SET ADDRESS OF RESTART CCW           24432000
         BAL   ML,MERREXCP         INITIATE I/O                         24432500
         B     MBUFNEXT            SEARCH FOR OTHER WORK             R4 24433000
         SPACE 2                                                        24433500
MCOMMREJ CLI   MCOMMAND,MDISCMD    TEST COMMAND TYPE                    24434000
         BNE   MFORCERL            BRANCH IF NOT DISABLE COMMAND        24434500
         SPACE 1                                                        24435000
MDRAINLN CLI   IOBECBCC,X'48'      WAS I/O PURGED                       24435500
         BE    MRSTLINE            RESTART LINE IF YES              R41 24436000
         OI    DCTSTAT,DCTDRAIN    FORCE LINE DRAIN                     24436500
         SPACE 1                                                        24437000
MFORCERL BAL   ML,MCERRLOG         LOG DISASTROUS LINE ERROR            24437500
         SPACE 1                                                        24438000
MRSTLINE BAL   ML,MABORT           ABORT ALL ACTIVE FUNCTIONS           24438500
         B     MSFORCE             FORCE SIGN-OFF                       24439000
         EJECT                                                          24439500
*                                                                       24440000
*                             CHANNEL END LOGGING SUBROUTINE            24440500
*                                                                       24441000
         SPACE 3                                                        24441500
MCERRLOG LA    R1,MDCTSREM         SET FOR NON-SPECIFIC COUNT           24442000
         CLI   0(WA),X'02'         WAS LAST COMMAND A READ              24442500
         BNE   MCERRINC            BRANCH IF NO                         24443000
         TM    IOBCSW+3,X'02'      TEST UNIT STATUS                     24443500
         BO    MCERRUC             BRANCH IF UNIT CHECK                 24444000
         TM    5(WA),MWRITSEQ      DID WE WRITE TEXT                    24444500
         BZ    MCERRINC            BRANCH IF NO                         24445000
         L     R15,0(,WA)          GET READ DATA ADDRESS                24445500
         CLC   MBSCNAK,0(R15)      WAS RESPONSE A NAK                   24446000
         BE    SKIP1370            SKIP IF YES                       R4 24446500
         CLC   MNAKSEQ,0(R15)      WAS RESPONSE A CTCA NAK           R4 24447000
         BNE   MCERRINC            BRANCH IF NO                         24447500
SKIP1370 LA    R1,MDCTSNAK         SET FOR NAK COUNT                    24448000
         B     MCERRINC            GO COUNT ERROR                       24448500
MCERRUC  CLI   MCOMMAND,MREADCMD   DID WE READ TEXT                     24449000
         BNE   MCERRINC            BRANCH IF NO                         24449500
         TM    IOBSENS0,X'08'      DATA CHECK SENSE                     24450000
         BZ    *+8                 SKIP IF NO                           24450500
         LA    R1,MDCTSDCK         SET FOR DATA CHECK COUNT             24451000
         TM    IOBSENS0,X'01'      TIMEOUT SENSE                        24451500
         BZ    MCERRINC            BRANCH IF NO                         24452000
         LA    R1,MDCTSTO          SET FOR TIMEOUT COUNT                24452500
MCERRINC L     R0,0(,R1)           INCREMENT                            24453000
         AL    R0,=F'1'             APPROPRIATE                         24453500
         ST    R0,0(,R1)             ERROR COUNT                        24454000
         SPACE 2                                                        24454500
         TM    IOBCSW+3,X'02'      TEST UNIT STATUS                     24455000
         BZ    MCELOG              BRANCH IF NO UNIT CHECK              24455500
         TM    IOBSENS0,X'41'      TEST FIRST SENSE BYTE                24456000
         BZ    MCELOG              BRANCH IF NOT TIMEOUT OR INT REQ     24456500
         IC    R1,MDCTERCT         INCREMENT                            24457000
         LA    R1,1(R1)             ERROR                               24457500
         STC   R1,MDCTERCT           COUNT                              24458000
         CLI   MDCTERCT,10         COMPARE ERROR COUNT WITH MAXIMUM     24458500
         BCR   L,ML                DO NOT LOG UNTIL MAXIMUM COUNT       24459000
         SPACE 2                                                        24459500
MCELOG   MVI   MDCTERCT,0          RESET ERROR COUNT                    24460000
         CLI   0(WA),X'02'         TEST COMMAND CODE                    24460500
         BNE   MCEGOLOG            BRANCH IF NOT READ                   24461000
         SPACE 1                                                        24461500
         L     R1,0(WA)            GET ADDRESS OF READ AREA             24462000
         MVC   IOBSENS1,1(R1)      MOVE RESPONSE TO SECOND SENSE BYTE   24462500
         CLC   MBSCDLE,0(R1)       TEST RESPONSE LENGTH                 24463000
         BE    MCEGOLOG            BRANCH IF TWO BYTE RESPONSE          24463500
         MVC   IOBSENS1,0(R1)      MOVE RESPONSE TO SECOND SENSE BYTE   24464000
         EJECT                                                       R4 24464500
MCEGOLOG DS    0H                                                    R4 24465000
        $IOERROR (MBUF)            LOG CHANNEL END                      24465500
         BR    ML                  RETURN                               24466000
         TITLE 'HASP LINE MANAGER -- SIGN-ON PROCESSING'             R4 24467500
MSONOPEN DS    0H                                                    R4 24468000
         OI    DCTFLAGS,DCTRSTRT   ABORT ANY SIGNON ATTEMPT          R4 24468500
         BAL   ML,MABORT           ABORT ACTIVE FUNCTIONS            R4 24469000
         ST    MBUF,MSONDCTB       SET BUFFER ADDRESS,               R4 24469500
         LA    MDCT,0(,MDCT)        LINE DCT ADDRESS,                R4 24470000
         ST    MDCT,MSONDCTD         AND REMOTE READER DEVICE TYPE   R4 24470500
         MVI   MSONDCTV,DCTRJR        IN DUMMY REMOTE DCT            R4 24471000
         LA    R1,MSONDCT          GET ADDRESS OF DUMMY DCT          R4 24471500
        $EXTP  OPEN,(R1)           INITIATE READ OF SIGN-ON CARD     R4 24472000
         B     MBUFNEXT            SEARCH FOR OTHER WORK             R4 24472500
         SPACE 3                                                     R4 24473000
MSONGET  ST    MBUF,MSONDCTB       SET BUFFER ADDRESS,               R4 24473500
         LA    MDCT,0(,MDCT)        LINE DCT ADDRESS,                R4 24474000
         ST    MDCT,MSONDCTD         REMOTE READER DEVICE TYPE,      R4 24474500
         MVI   MSONDCTV,DCTRJR        AND BASIC TERMINAL CODE        R4 24475000
         MVI   MSONDCTT,DCTP2770       IN DUMMY REMOTE DCT           R4 24475500
         ST    MBUF,BUFEWF         FORCE EMPTY BUFFER AFTER ONE CARD R4 24476000
         LA    R1,MSONDCT          GET ADDRESS OF DUMMY DCT          R4 24476500
        $EXTP  GET,(R1),MSONCARD   GET FIRST CARD IN BUFFER          R4 24477000
         BNP   MSONCLOS            CLOSE IF END OF FILE              R4 24477500
         SPACE 2                                                     R4 24478000
         CLC   MSONCODE,MSONCARD   TEST FOR /*SIGNON CARD            R4 24478500
         BE    MBUFNEXT            BRANCH IF /*SIGNON CARD           R4 24479000
         BAL   ML,MSOILEGL         NO, ISSUE ERROR MESSAGE           R4 24479500
         B     MBUFNEXT            SEARCH FOR OTHER WORK             R4 24480000
         SPACE 3                                                     R4 24480500
MSONCLOS LA    R1,MSONDCT          GET ADDRESS OF DUMMY DCT          R4 24481000
        $EXTP  CLOSE,(R1)          SET UP PREPARE SEQUENCE           R4 24481500
         B     MBUFNEXT            SEARCH FOR OTHER WORK             R4 24482000
         TITLE 'HASP LINE MANAGER -- DRAIN/SIGN-OFF PROCESSING'      R4 24485500
MSIGNOFF TM    DCTSTAT,DCTDRAIN    TEST LINE DCT STATUS              R4 24486000
         BO    MDRAINED            BRANCH IF DRAINED                 R4 24486500
         TM    MDCTSTAT,DCTSOFF    TEST LINE DCT REMOTE STATUS       R4 24487000
         BCR   Z,ML                RETURN IF NOT SIGN-OFF            R4 24487500
         SPACE 2                                                     R4 24488000
MDRAINED OI    DCTFLAGS,DCTRSTRT   SET LINE RESTART AFTER NEXT CE    R4 24488500
         NI    MDCTSTAT,255-DCTSOFF  RESET SIGNOFF BIT               R4 24489000
         TM    5(WA),MCPUSEQ       IS IT A MULTI-LEAVING TERMINAL    R4 24489500
         BO    MDISCPU             BRANCH IF YES                     R4 24490000
         TM    5(WA),MPREPSEQ      ARE PREPARE CCWS SETUP            R4 24490500
         BZ    MRSTLINE            IF NOT, GO ABORT AND DISCONNECT   R4 24491000
         TM    MDCTLINE,DCTPCTC    TEST LINE TYPE                    R4 24491500
         BO    MSFORCE             FORCE DISCONNECT IF CTC           R4 24492000
         LA    R0,MDLEEOT          POINT IOBCCW5 TO THE              R4 24492500
         ST    R0,IOBCCW5           DISCONNECT SEQUENCE, DLE EOT     R4 24493000
         MVI   IOBCCW5,X'01'       FORCE A WRITE                     R4 24493500
         MVI   IOBCCW5+7,2         SET LENGTH OF TWO                 R4 24494000
         MVI   IOBCCW6,X'2F'       CHANGE IOBCCW6 TO DISABLE         R4 24494500
         LA    R0,IOBCCW4          START WITH IOBCCW4                R4 24495000
         CLI   MDCTIMOK,255        WAS MODEM ON HOOK                R41 24495100
         BNE   MDISEXCP            NO, GO WRITE EOT AND DISABLE     R41 24495200
         LA    R0,IOBCCW6          YES, JUST DISABLE                R41 24495300
         B     MDISEXCP            GO SET STARTING CCW               R4 24495500
         SPACE 1                                                     R4 24496000
MDISCPU  LA    R0,IOBCCW5          RECONSTRUCT                       R4 24496500
         LA    R1,MBSCSEQ+MCPUSEQ   CCW                              R4 24497000
         BAL   ML,MCCWINIT           CHAIN                           R4 24497500
         LA    R0,TPBUFST          POINT TO IOBCCW6                  R4 24498000
         STCM  R0,7,IOBCCW6+1       TO TPBUFST                       R4 24498500
         LA    R0,L'MCDISCON+2     SET LENGTH OF                     R4 24499000
         STH   R0,IOBCCW6+6         DISCONNECT MESSAGE PLUS TWO      R4 24499500
         MVC   TPBUFST(2),MSTXSEQ  START BUFFER WITH STX SEQUENCE    R4 24500000
         MVC   TPBUFST+2(L'MCDISCON),MCDISCON  ADD DISCON MESSAGE    R4 24500500
         MVI   IOBCCW8,X'2F'       CHANGE IOBCCW8 TO DISABLE         R4 24501000
         TM    MDCTLINE,DCTPCTC    TEST LINE TYPE                    R4 24501500
         BZ    SKIP1380            SKIP IF NOT CTCA                  R4 24502000
         MVI   IOBCCW8,X'02'       SET TO READ RESPONSE              R4 24502500
SKIP1380 LA    R0,IOBCCW5          START WITH IOBCCW5                R4 24503000
MDISEXCP ST    R0,IOBSTART         STORE CCW ADDRESS IN IOBSTART     R4 24503500
         BAL   ML,MEXCP1           GO DO EXCP                        R4 24504000
         B     MBUFNEXT            SEARCH FOR OTHER WORK             R4 24504500
         SPACE 2                                                     R4 24505000
MSFORCE  BAL   ML,MDISCON          DISCONNECT REMOTE                 R4 24505500
         NI    MDCTSTAT,255-DCTSOFF RESET SIGN-OFF INDICATION        R4 24506000
         LA    WA,MBUFNEXT         SET UP RETURN ADDRESS             R4 24506500
         TM    DCTSTAT,DCTDRAIN    TEST LINE DCT STATUS              R4 24507000
         BZ    MBSCINIT            REINITIALIZE IF NOT DRAINED       R4 24507500
         B     MBSCSTOP            BRANCH TO DRAIN LINE DCT          R4 24508000
         SPACE 2                                                    R41 24508100
         DROP  MDCT,MCODE          RELEASE DCT AND CODE TABLE BASES R41 24508200
         SPACE 2                                                    R41 24508500
         DROP  MBASE1,MBASE2,MBASE3  RELEASE ROUTINES               R41 24509000
         DROP  MBUF                   AND BUFFER ADDRESSABILITY     R41 24509100
         SPACE 2                                                     R4 24509500
         LTORG                                                       R4 24510000
         TITLE 'HASP LINE MANAGER -- VTAM INTERFACE/REQ END PROCESSOR'  24510500
*********************************************************************** 24510600
*                                                                     * 24510700
*                  SNA BUFFER PROCESSING ROUTINE                      * 24510800
*                                                                     * 24510900
*********************************************************************** 24511000
         SPACE 1                                                    R41 24511100
*                                  ADDRESSABILITY -                 R41 24511200
         USING ICEDSECT,MICE             ICE                        R41 24511300
         USING RPLDSECT,MBUF             BUFFER (RPL)               R41 24511400
         USING RTAMVSUB,MBASE2,MBASE3    COMMON SNA SUBROUTINE      R41 24512000
         USING MSNAPROC,MBASE1           LOCAL ROUTINE BASE         R41 24512500
         SPACE 2                                                    R41 24513000
MSNAPROC DS    0H                                                   R41 24513100
         L     MDCT,RPLDCT         GET LINE OR LOGON DCT ADDRESS     R4 24514000
         USING DCTDSECT,MDCT        SHOW DCT ADDRESSABLE            R41 24514100
         NI    MFLAGS,255-MLOGGED-MWRKFLG1  CLEAR BUF HANDLING FLAGS R4 24514500
         TM    RPLSEQTP,255-VSEQRSET  TEST FOR RECEIVE ANY REQUEST   R4 24515000
         BNZ   MSNAPNRA               SKIP CHAIN MAINTENANCE IF NOT  R4 24515500
         LR    R15,MDCT            R15=LOGON DCT FOR MVFRECHK LATER  R4 24516000
         CLI   RPLRTNCD,USFRESSU   TEST COMPLETION RETURN CODE       R4 24516500
         BNE   SKIP1390            IF NOT RETRYING, TAKE OFF R-A QUE R4 24517000
         CLI   RPLERROR,254        TEST RETRY COUNT VS. LIMIT        R4 24517500
         BL    MSNAPLT2            LEAVE ON R-A QUE IF REQUEST RETRY R4 24518000
SKIP1390 L     ML,RPLBCHN          GET RCV-ANY BACKWRD-CHAIN POINTER R4 24518500
         L     WA,RPLFCHN          GET RCV-ANY FORWARD-CHAIN POINTER R4 24519000
         LTR   ML,ML               TEST BACKWARD-CHAIN POINTER       R4 24519500
         BNZ   MSNAPRA1            SKIP LOGON DCT UPDATE IF NOT ZERO R4 24520000
         L     R0,MDCTRABF         GET RCVE-ANY QE HEAD & ACTIVE CNT R4 24520500
SKIP1400 LR    R1,R0               COPY DATA TO WORK REG             R4 24521000
         ICM   R1,7,RPLFCHN+1      SET NEW QE HEAD, DON'T CHGE COUNT R4 24521500
         CS    R0,R1,MDCTRABF      UPDATE RCVE-ANY QE HEAD           R4 24522000
         BE    MSNAPRA2            CONTINUE IF UPDATE SUCCESSFUL     R4 24522500
         B     SKIP1400            ELSE RETRY WITH NEW ACTIVE COUNT  R4 24523000
         SPACE 1                                                     R4 24523500
MSNAPRA1 ST    WA,RPLFCHN-RPLDSECT(,ML)  TAKE BUF OFF FORWARD CHAIN  R4 24524000
MSNAPRA2 LTR   WA,WA               TEST FORWARD-CHAIN POINTER        R4 24524500
         BZ    SKIP1410            SKIP BACK-CHN UPDATE IF AT Q END  R4 24525000
         ST    ML,RPLBCHN-RPLDSECT(,WA)  TAKE BUF OFF BACKWARD CHAIN R4 24525500
SKIP1410 LR    MICE,MBUF           SAVE CURRENT BUFFER ADDRESS       R4 24526000
         BAL   ML,MVFRECHK         ISSUE NEW RECEIVE-ANY IF NEEDED   R4 24526500
         LR    MBUF,MICE           BRING BACK BUFFER ADDRESS         R4 24527000
         L     MICE,RPLICE         LOAD ICE ADDR (FROM RPL USER FLD) R4 24527500
         LR    R15,MDCT            R15=LOGON DCT IN CASE DESTROYED   R4 24528000
         LTR   MICE,MICE           TEST ICE ADDRESS                  R4 24528500
         BZ    MSNAPLT2            BRANCH IF ICE ADDR NOT AVAILABLE  R4 24529000
         L     R14,ICELDCT         TEST FOR LINE                     R4 24529500
         LTR   R14,R14              DCT ADDRESS                      R4 24530000
         BZ    MSNAPLT1            BRANCH IF DISCONNECTED            R4 24530500
         LR    MDCT,R14            ELSE GET LINE DCT ADDR IN MDCT    R4 24531000
         STCM  MDCT,7,RPLDCT+1     REPLACE LOGON DCT PTR WITH LINE   R4 24531500
         B     MSNAPLT1            REJOIN COMMON PROCESSING          R4 24532000
         EJECT                                                       R4 24532500
MSNAPNRA L     MICE,RPLICE         LOAD ICE ADDR (FROM RPL USER FLD) R4 24533000
         LTR   MICE,MICE           TEST FOR ICE ADDRESS PRESENT     R41 24533100
         BZ    MSNAPLT3            BR IF NO, SKIP INCREMENT         R41 24533200
         L     R15,ICEADCT         PLACE LOGON DCT ADDRESS IN R15    R4 24533500
         SPACE 1                                                     R4 24534000
MSNAPLT1 L     R14,ICETOTAL        INCREMENT ICE                     R4 24534500
         LA    R14,1(,R14)          SEND/RECEIVE                     R4 24535000
         ST    R14,ICETOTAL          TOTAL COUNT                     R4 24535500
         SPACE 1                                                     R4 24536000
         USING DCTDSECT,R15        USE TEMP LOGON DCT ADDRESSABILITY R4 24536500
MSNAPLT2 TM    DCTFLAGS,DCTLOGAL   TEST LOGON DCT STATUS             R4 24537000
         BO    MSNAPLOG            BRANCH IF DIAGNOSTIC LOGGING      R4 24537500
         DROP  R15                 DISCARD LOGON DCT ADDRESSABILITY  R4 24538000
         SPACE 1                                                     R4 24538500
MSNAPLT3 TM    DCTFLAGS,DCTLOGAL   TEST DCT STATUS                  R41 24539000
         BZ    MSNAPNOL            BRANCH IF NO DIAGNOSTIC LOGGING   R4 24539500
         SPACE 1                                                     R4 24540000
MSNAPLOG OI    MFLAGS,MLOGGED      SHOW DIAGNOSTIC LOGGING DONE      R4 24540500
        $IOERROR (MBUF)            LOG RPL REQUEST COMPLETION        R4 24541000
         SPACE 1                                                     R4 24541500
MSNAPNOL LA    ML,MBUFNEXT         LOAD COMMON RETURN FOR SNA SERVCE R4 24542000
         LA    WA,MVFREELM         POINT TO L.M. BUF DISPOSAL ROUTNE R4 24542500
         SLR   R0,R0               LOAD ZERO                         R4 24543000
         ST    R0,RPLNEXT          CLEAR BUFFER CHAIN FIELD          R4 24543500
         MVI   RPLACTIV,0          CLEAR RPL ACTIVE INDICATOR SINCE    C24544000
                                    JES2 NEVER ISSUES 'CHECK' MACRO  R4 24544500
         LR    R15,R0              BRANCH ON                         R4 24546000
         IC    R15,RPLRTNCD         RECOVERY                         R4 24546500
         L     R15,MSNAPTAB(R15)     ACTION CODE                    R41 24547000
         CLI   RPLRTNCD,MSNAIBAD      IF IT IS LESS                 R41 24547500
         BLR   R15                     THAN ERROR LIMIT             R41 24547600
         B     MSNAPBAD            ELSE GO HANDLE ERROR RETURN CODE R41 24547700
         SPACE 1                                                     R4 24548000
MSNAPTAB DS    0F                  RECOVERY ACTION BRANCH TABLE      R4 24548500
         DC    A(MSNAPAOK)         VTAM REQUEST O.K.              +0 R4 24549000
         DC    A(MSNAXRSP)         EXCEPTION REQUEST/RESPONSE     +4 R4 24549500
         DC    A(MSNAXTMP)         TEMPORARY COND - EXECUTE RETRY +8 R4 24550000
MSNAIBAD EQU   *-MSNAPTAB          ERROR DIRECTORY ADDRESSES FOLLOW R41 24550400
         DC    A(MSNAPDMG)         DATA INTEGRITY DAMAGE         +12R41 24550500
         DC    A(MSNAPENV)         ENVIRONMENT ERROR             +16R41 24551000
         DC    A(MSNAPBUG)         LOGIC OR TIMING ERROR  +20       R41 24551200
MSNAINVL EQU   *-MSNAPTAB          HIGHER = LOGIC ERROR             R41 24551500
         EJECT                                                       R4 24552000
*                                                                    R4 24552500
*                             HANDLE NORMAL (DATA) CONTROL SEQUENCE  R4 24553000
*                                                                    R4 24553500
         SPACE 1                                                     R4 24554000
MSNAPAOK MVI   RPLERROR,0          CLEAR ERROR RETRY COUNTER         R4 24554500
         CLI   RPLFDB2,USFAOOK     TEST RPL FEEDBACK CODE            R4 24555000
         BNE   MSNAPNOK            PROBABLE LOGIC ERROR IF NOT O.K.  R4 24555500
         TM    RPLSEQTP,VSEQSPEC   TEST L.M. CONTROL SEQ TYPE        R4 24556000
         BNZ   MSNAPSPC            BRANCH IF IN SPECIAL SEQUENCE     R4 24556500
         TM    ICEINDEX,VSEQSPEC   TEST ICE L.M. CONTROL SEQ TYPE    R4 24557000
         BNZ   MSNAPFLX            BRANCH IF IN SPECIAL SEQUENCE     R4 24557500
         MVC   MDCTIMOK,MCLOCK     SET LINE XMISSION TIME            R4 24558000
         LR    R15,R0              BRANCH ON                         R4 24558500
         IC    R15,RPLSEQTP         SUBSEQUENCE                      R4 24559000
         IC    R15,*+8-VSEQNORM(R15) CODE USING                      R4 24559500
         B     MSNAP(R15)             OFFSET TABLE                   R4 24560000
         SPACE 1                                                     R4 24560500
         DC    AL1(MSNAPRCV-MSNAP) RECEIVE COMPLETE                  R4 24561000
         DC    AL1(MSNAPSND-MSNAP) SEND COMPLETE                     R4 24561500
         DC    AL1(MSNAPRCS-MSNAP) RECEIVE COMPLETE & CONT-SPECIFIC  R4 24562000
         DC    AL1(MSNAPSCA-MSNAP) SESS. RESET COMPLETE (TO RCV-ANY) R4 24562500
         SPACE 1                                                     R4 24563000
MSNAPNOK CLI   RPLREQ,RPLINQIR     TEST VTAM REQUEST TYPE            R4 24563500
         BNE   MSNAPNK1            BRANCH IF NO, TEST FOR OPNDST    R41 24564000
         CLI   RPLFDB2,USFATSFI    TEST RPL FEEDBACK CODE            R4 24565000
         BE    MSNALINV            ABORT SESSION IF AREA TOO SMALL   R4 24565500
         B     R01                 OTHERWISE FAIL WITH LOGIC ERROR   R4 24566000
         SPACE 1                                                    R41 24566100
MSNAPNK1 CLI   RPLREQ,RPLOPNDS     TEST VTAM REQUEST TYPE           R41 24566200
         BNE   R01                 IF NOT OPNDST, LOGIC ERROR..FAIL R41 24566300
         CLI   RPLFDB2,USFDSTIU    SEE IF TERMINAL IN USE...        R41 24566400
         BNE   R01                 ...IF NOT -- LOGIC ERROR         R41 24566500
         ST    R0,ICEBUFAD         CLEAR SPECIAL SEQ BUFFER ADDRESS R41 24566600
         B     MSNAXVT3            ABANDON LOGON ATTEMPT...         R41C24566700
                                   ...WILL BE RETRIED LATER         R41 24566800
         EJECT                                                      R41 24566900
*                                                                    R4 24567000
*                             SPECIAL SEQUENCES NON-ERROR PROCESSING R4 24567500
*                                                                    R4 24568000
         SPACE 1                                                     R4 24568500
MSNAPSPC CLI   RPLSEQTP,MINVVSEQ   COMPARE SEQ TYPE WITH INVALID LIM R4 24569000
         BH    R01                 FAIL CATASTROPH IF UNDEFINED SEQ  R4 24569500
         LR    R14,R0              LOAD ZERO                         R4 24570000
         LA    R15,X'F0'           BRANCH                            R4 24570500
         IC    R14,RPLSEQTP         ON LINE                          R4 24571000
         NR    R15,R14               MANAGER                         R4 24571500
         XR    R14,R15                MAJOR                          R4 24572000
         SRL   R15,2                   CONTROL                       R4 24572500
         L     R15,MSNAPSEQ-4(R15)      SEQUENCE                     R4 24573000
         BR    R15                       TYPE                        R4 24573500
         SPACE 1                                                     R4 24574000
MSNAPSEQ DS    0F                  NON-ERROR CONTRL SEQ BRANCH TABLE R4 24574500
         DC    A(MSNALOGN)         SESSION INITIATION SEQUENCE       R4 24575000
         DC    A(MSNAHOLD)         SESSION HOLD   I/O SEQUENCE       R4 24575500
         DC    A(MSNACLOS)         SESSION CLOSE DOWN SEQUENCE       R4 24576000
         DC    A(MSNATERM)         SESSION ABN TERMIN SEQUENCE       R4 24576500
         DC    A(MSNARCVR)         SESSION RECOVR I/O SEQUENCE       R4 24577000
         DC    A(MSNALOGN)         SESSION AUTO-LOGON SEQUENCE      R41 24577100
MINVVSEQ EQU   (*-MSNAPSEQ)*4+15   HIGHER SEQUENCES ARE INVALID     R41 24577500
         EJECT                                                       R4 24578000
MSNAP    DS    0H                  ORIGIN FOR NORMAL SUBSEQ OFFSETS  R4 24578500
         SPACE 1                                                     R4 24580500
MSNAPSND BAL   ML,MVRPLKOQ         CHECK IF NEED EXEC FROM OUTBD QUE R4 24581000
         LA    ML,MBUFNEXT         RELOAD 1ST LEVEL RETURN ADDRESS   R4 24581500
         SPACE 1                                                     R4 24582000
MSNAPSN1 TM    RPLSRTYP,RPLSRESP   TEST SENT R.U. TYPE               R4 24582500
         BO    MVFREEIN            IF RESPONSE, USE INBND FREE RTNE  R4 24583000
         SPACE 1                                                     R4 24583500
MSNAPSN2 LH    R14,ICEOUTCT        DECREMENT                         R4 24584000
         BCTR  R14,0                ICE OUTBOUND                     R4 24584500
         STH   R14,ICEOUTCT          CIRCULATION                     R4 24585000
         CLI   RPLRTNCD,USFDAMGE   TEST RPL RETURN CODE              R4 24585500
         BNLR  WA                  JUST PURGE IF REQUEST CANCELLED   R4 24586000
         L     MDCT,ICERDCT        LOAD REMOTE DCT ADDRESS IF ANY    R4 24586500
         CLC   RPLCNTDF(3),MSNADATA  TEST SENT R.U. TYPE             R4 24587000
         BNE   MSNAPDFC            BRANCH IF DATA FLOW CONTROL       R4 24587500
         TM    RPLCHN,RPLLAST+RPLONLY  TEST R.U. CHAIN POSITION      R4 24588000
         BZ    SKIP1420            BRANCH IF NOT END OF CHAIN        R4 24588500
         TM    ICESNDST,ICECNCEL   ELSE TEST IF CHAIN WAS CANCELLED  R4 24589000
         BO    MSNAXRS2            IF SO, GO HANDLE DEFERRED -RSP    R4 24589500
SKIP1420 ALR   R14,R14             DOUBLE CURRENT COUNT              R4 24590000
         CH    R14,ICEOUTLM        COMPARE 2*COUNT WTH SESSION LIMIT R4 24590500
         BHR   WA                  IF COUNT .GT. 1/2 OF LIMIT, DON'T   C24591000
                                    POST YET, JUST PURGE BUFFER      R4 24591500
         TM    ICESNDST,ICEWTRSP   TEST SESSION SEND STATUS          R4 24592000
         BZ    MSNAPOST            GO POST IF NOT WAITING FOR RESP   R4 24592500
         BR    WA                  ELSE JUST DISPOSE OF BUFFER       R4 24593000
         SPACE 1                                                    R41 24593100
MSNAPSCA BR    WA                  DISPOSE OF BUFFER                R41 24593200
         SPACE 1                                                     R4 24593500
MSNAPRCS OI    ICESTAT,ICERCVSP    SET ICE 'RECEIVE SPECIFIC' FLAG   R4 24594000
         SPACE 1                                                     R4 24594500
MSNAPRCV TM    RPLSRTYP,RPLRRESP   TEST TYPE OF UNIT RECEIVED        R4 24595000
         BO    MSNAPRSP            BRANCH IF RESPONSE                R4 24595500
         SPACE 1                                                     R4 24596000
MSNAPRC1 TM    ICESTAT,ICEALLOC    TEST SESSION STATUS               R4 24596500
         BZ    MVDECODE            DECODE UNDER L.M.IF NOT ALLOCATED R4 24597000
         L     MDCT,ICERDCT        LOAD ADDRESS OF REMOTE DCT        R4 24597500
         TM    RPLSRTYP,RPLDFASY   TEST R.U. TYPE                    R4 24598000
         BO    MVDECODE            DECODE UNDER L.M.IF EXPEDITED FLO R4 24598500
         TM    RPLCNTDC,RPLLUS     TEST R.U. TYPE                    R4 24599000
         BO    MVDECODE            DECODE UNDER L.M. IF 'L.U. STAT'  R4 24599500
         LR    R1,MBUF             HIDE BUFFER ADDRESS               R4 24600000
         SLR   MBUF,MBUF            FROM 'MVFREELM' RTNE             R4 24600500
         L     R15,ICEINTL         PLACE BUFFER ON BACK              R4 24601000
         ST    R1,ICEINTL           OF ICE INBOUND QUEUE             R4 24601500
         LTR   R15,R15             TEST FORMER TAIL ADDRESS          R4 24602000
         BZ    MSNAPOSR            IF QUE EMPTY, GO POST FOR INPUT  R41 24602500
         ST    R1,RPLNEXT-RPLDSECT(,R15)  CHAIN BUF TO OLD QUE TAIL R41 24604000
         BR    WA                  GO CHECK IF NEED ISSUE RCV-ANY    R4 24604500
         EJECT                                                       R4 24605000
*                                                                    R4 24605500
*                             HANDLE DATA FLOW CONTROL, POST=RESP    R4 24606000
*                                                                    R4 24606500
         SPACE 1                                                     R4 24607000
MSNAPDFC NI    ICESNDST,255-ICEWTRSP  RESET WAITING-FOR-RESPONSE BIT R4 24607500
         CLI   RPLRTNCD,USFAOK     TEST DFC RPL COMPLETION CODE      R4 24608000
         BNE   MSNAPDFN            BRANCH IF EXCEPTION RESP TO DFC   R4 24608500
         CLC   RPLCNTDF(3),MSNABID   TEST SUCCESSFUL DFC TYPE        R4 24609000
         BNE   MSNAPRS2            GO HANDLE IF NOT +RSP(BID)        R4 24609500
         OI    ICEFLAGS,ICEBBPND+ICEOUTBD  MARK OUTB FLOW, BBP STATE R4 24610000
         B     MSNAPOST            GO POST PROCESSOR WAITING ON BID  R4 24610500
         SPACE 2                                                     R4 24611000
MSNAPDFN ST    R0,ICEOUTBF         CLEAR ACTIVE (IN VTAM) BUF ADDR   R4 24611500
         TM    MFLAGS,MLOGGED      TEST FOR DIAGNOSTIC LOGGING       R4 24612000
         BO    MSNAPDF1            SKIP MSG IF BUF ALREADY LOGGED    R4 24612500
        $IOERROR (MBUF)            ISSUE I/O ERROR MESSAGE           R4 24613000
         OI    MFLAGS,MLOGGED      SHOW MESSAGE ALREADY LOGGED      R41 24613200
         SPACE 1                                                     R4 24613500
MSNAPDF1 CLC   RPLCNTDF(3),MSNABID  TEST RESPONSE TYPE               R4 24614000
         BNER  WA                  CAN'T HANDLE -RSP(DFC) IF NOT BID R4 24614500
         CLC   RPLSSNSI,=AL1(RPLRRI,X'13')  TEST TYPE OF -RSP(BID)   R4 24615000
         BE    MSNAPDF2            HANDLE IF BID REJECT WITHOUT RTR R41 24615500
         CLC   RPLSSNSI,=AL1(RPLRRI,X'14')  TEST TYPE OF -RSP(BID)   R4 24616000
         BNER  WA                  IF NOT RTR PENDING, DON'T HANDLE  R4 24616500
         OI    ICESTAT,ICERTRPD    ELSE SET 'RTR PENDING' FLAG       R4 24617000
MSNAPDF2 L     R14,ICEBDREJ        INCREMENT                        R41 24617500
         LA    R14,1(,R14)          BID REJECT                       R4 24618000
         ST    R14,ICEBDREJ          COUNTER                         R4 24618500
         B     MSNAPOST            GO POST WAITING PROCESSOR         R4 24619000
         EJECT                                                       R4 24619500
*                                                                    R4 24620000
*                             SNA POSITIVE RESPONSE HANDLING ROUTINE R4 24620500
*                                                                    R4 24621000
         SPACE 1                                                     R4 24621500
MSNAPRSP CLC   RPLCNTDF(3),MSNADATA  TEST RESPONSE TYPE              R4 24622000
         BNE   R01                 FAIL IF ANYTHING EXCEPT DATA      R4 24622500
         IC    R14,ICERSPCT        DECREMENT                         R4 24623000
         BCTR  R14,0                OUTSTANDING                      R4 24623500
         STC   R14,ICERSPCT          RESPONSE COUNT                  R4 24624000
         SPACE 1                                                     R4 24624500
MSNAPRS0 L     MDCT,ICERDCT        LOAD REMOTE DCT ADDRESS IF ANY    R4 24625000
         SPACE 1                                                     R4 24625500
MSNAPRS1 NI    ICESNDST,255-ICEWTRSP  RESET WAITING-FOR-RESPONSE BIT R4 24626000
         SPACE 1                                                     R4 24626500
MSNAPRS2 TM    ICESTAT,ICEALLOC    TEST SESSION STATUS               R4 24627000
         BZ    SKIP1440            ACCEPT RESP UNDER L.M. IF UNALLOC R4 24627500
         TM    DCTSTAT,DCTRTAM     TEST PROCESSOR CURRENT STATUS     R4 24628000
         BO    MSNAPOST            GO POST IF WAITING IN RTAM        R4 24628500
SKIP1440 BALR  ML,WA               ELSE DISPOSE OF RESP BUFFER AND   R4 24629000
         LA    ML,MBUFNEXT          DO STATE CHANGE UNDER L.M. FOR   R4 24629500
         B     MVRSTATO              PROCESSOR WAITING ON FORM MOUNT R4 24630000
         SPACE 5                                                    R41 24630100
*                                                                   R41 24630200
*                             POST WAITING PROCESSOR                R41 24630300
*                                                                   R41 24630400
         SPACE 1                                                    R41 24630500
MSNAPOSR ST    R1,ICEINHD          SET QUEUE HEAD = TAIL = THIS RPL R41 24630600
         SPACE 1                                                    R41 24630700
MSNAPOST LTR   MDCT,MDCT           TEST ADDR OF SENDING REMOTE DCT   R4 24631000
         BZR   WA                  JUST PURGE BUFFER IF NO DCT       R4 24631500
         L     R1,DCTPCE           GET ADDRESS OF PCE TO POST        R4 24632000
        $POST  (R1),WORK           FIRE UP PROCESSOR                 R4 24632500
         BR    WA                  DISPOSE OF BUF AS NEEDED & RETURN R4 24633000
         EJECT                                                       R4 24633500
*                                                                    R4 24634000
*                             EXCEPTION REQUESTS & RESPONSES         R4 24634500
*                                                                    R4 24635000
         SPACE 1                                                     R4 24635500
MSNAXRSP MVI   RPLERROR,0          CLEAR ERROR RETRY COUNTER         R4 24636000
         CLI   RPLFDB2,USFEXRS     TEST RPL FEEDBACK CODE            R4 24636500
         BNE   MSNAXREQ            BRANCH IF NOT EXCEPTION RESPONSE  R4 24637000
         TM    RPLSEQTP,255-VSEQRSET  TEST L.M. CONTROL SEQUENCE     R4 24637500
         BNZ   MSNAPSN2            ASSUME POST=RESP DFC IF NOT RECVE R4 24638000
         L     R14,ICEXRESP        INCREMENT ICE                     R4 24638500
         LA    R14,1(,R14)          EXCEPTION RE-                    R4 24639000
         ST    R14,ICEXRESP          SPONSE COUNT                    R4 24639500
         CLC   RPLCNTDF(3),MSNADATA  TEST RESPONSE TYPE              R4 24640000
         BNE   R01                 FAIL IF ANYTHING EXCEPT DATA      R4 24640500
         CLI   RPLSSEI,RPLRRI      TEST MAJOR SYSTEM SENSE CODE      R4 24641000
         BNE   MSNAXRSQ            CHECK FURTHER IF NOT REQUEST REJ R41 24641500
         L     MDCT,ICERDCT        LOAD REMOTE DCT ADDRESS IF ANY    R4 24642000
         CNOP  0,4                 ALIGN TABLE ON FULLWORD BOUNDARY  R4 24642500
         LA    R14,RPLSSMI         POINT TO MINOR SYSTEM SENSE CODE  R4 24643000
         BAL   R15,MSNAPDIR        LOOK UP IN MINOR CODE DIRECTORY   R4 24643500
         SPACE 1                                                     R4 24644000
*                             CODES MUST APPEAR IN ASCENDING ORDER   R4 24644500
         SPACE 1                                                     R4 24645000
         DC    X'01',AL3(MSNAXCLS)                       - ABORT     R4 24645500
         DC    X'02',AL3(MSNAXITV) INTERVENTION REQUIRED - HOLD ICE  R4 24646000
         DC    X'10',AL3(MSNAXCLS)                       - ABORT     R4 24646500
         DC    X'11',AL3(MSNAXBRK) BREAK (REVERSE CANCL) - CAUSE $C  R4 24647000
         DC    X'12',AL3(MSNAXPRM) INSUFFICIENT RESOURCE - HOLD ICE R41 24647500
         DC    X'13',AL3(MSNAXYLD) BEGIN BRACKET REJECT  - YIELD     R4 24648000
         DC    X'14',AL3(MSNAXRTR) BEGIN BR REJECT, RTR  - SET RTRP  R4 24648500
         DC    X'1A',AL3(MSNAXCLS)                       - ABORT     R4 24649000
         DC    X'1B',AL3(MSNAXYLD) RECEIVER IN XMIT MODE - YIELD     R4 24649100
         DC    X'1C',AL3(MSNAXPRM) PERMANENT ERROR       - HOLD ICE R41 24649200
         DC    X'23',AL3(MSNAXCLS)                       - ABORT     R4 24649300
         DC    X'25',AL3(MSNAXNAV) COMPONENT NOT AVAIL   - PURGE CHN R4 24649400
         DC    X'FF',AL3(MSNAXCLS) ANY OTHER SENSE CODES - ABORT     R4 24649500
         SPACE 3                                                    R41 24649600
MSNAXRSQ CLC   RPLFDBK2(3),=AL1(RPLFII,X'08',X'08')  TEST SENSE INFOR41 24649700
         BNE   MSNAXCLS            GO ABORT IF NOT FUNCTION REJECT  R41 24649800
         L     MDCT,ICERDCT        LOAD REMOTE DCT ADDRESS IF ANY   R41 24649900
         CNOP  0,4                 ALIGN TABLE ON FULLWORD BOUNDARY R41 24650000
         LA    R14,RPLUSNSI+1      POINT TO MINOR APPLIC SENSE CODE R41 24650100
         BAL   R15,MSNAPDIR        LOOK UP IN FUNCTION ERR DIRECTORYR41 24650200
         SPACE 1                                                    R41 24650300
*                             CODES MUST APPEAR IN ASCENDING ORDER  R41 24650400
         SPACE 1                                                    R41 24650500
         DC    X'03',AL3(MSNAXCLS)                       - ABORT    R41 24650600
         DC    X'05',AL3(MSNAXCPY) CANNOT ACCEPT COPIES  - CHG PDIR R41 24650700
         DC    X'FF',AL3(MSNAXCLS) ANY OTHER SENSE CODES - ABORT    R41 24650800
         EJECT                                                      R41 24650900
         SPACE 3                                                    R41 24651000
*                                                                    R4 24652000
*                             HANDLE RECOVERABLE NEGATIVE RESPONSES  R4 24652500
*                                                                    R4 24653000
         SPACE 1                                                     R4 24653500
MSNAXCPY OI    ICEXRFBK,ICEXRCPY   SET COPIES FUNCTION REJECTED BIT R41 24653600
         B     MSNAXERR            GO ISSUE I/O ERROR MESSAGE       R41 24653700
         SPACE 1                                                    R41 24653800
MSNAXPRM SLR   R15,R15             SHOW PERMANENT ERROR CONDITION   R41 24653900
MSNAXITV LTR   MDCT,MDCT           TEST REMOTE DCT ADDRESS           R4 24654000
         BZ    MSNAXERR            BRANCH IF NOT ALLOCATED           R4 24654500
         TM    ICESNDST,ICENOFMH   TEST SESSION SEND STATUS          R4 24655000
         BNO   MSNAXERR            DO NOT HALT IF FM HDR PENDING     R4 24655500
         OI    DCTFLAGS,DCTSTOP    HALT PROCESSOR TO ALLOW COMMAND   R4 24656000
         LTR   R15,R15             TEST FOR TEMPORARY OR PERM ERROR R41 24656300
         BZ    MSNAXERP            GO DISABLE DEVICE IF PERM ERROR  R41 24656400
         B     MSNAXERR            ELSE GO ISSUE I/O ERROR MESSAGE  R41 24656500
         SPACE 1                                                     R4 24657000
MSNAXRTR OI    ICESTAT,ICERTRPD    SET READY TO RECEIVE PENDING BIT  R4 24657500
MSNAXYLD OI    ICESTAT,ICEHOLD     PREVENT OUTBD ALLOCATION UNTIL    R4C24658000
                                    'LUS' OR INBND STREAM COMPLETED  R4 24658500
         B     MSNAXRS1            TREAT AS ORDINARY CHAIN FAILURE   R4 24659000
         SPACE 1                                                     R4 24659500
MSNAXBRK LTR   MDCT,MDCT           TEST REMOTE DCT ADDRESS           R4 24660000
         BZ    MSNAXRS1            BRANCH IF NOT ALLOCATED           R4 24660500
         OI    DCTFLAGS,DCTDELET   DELETE DATA SET             @OZ27835 24661000
         OI    ICEXRFBK,ICEXRDNA   SHOW DEVICE NOT ACCEPTING DATA   R41 24661200
         B     MSNAXRS1            REJOIN COMMON -RSP PROCESSING     R4 24661500
         SPACE 1                                                     R4 24662000
MSNAXNAV LTR   MDCT,MDCT           TEST REMOTE DCT ADDRESS           R4 24662500
         BZ    MSNAXERR            BRANCH IF NOT ALLOCATED           R4 24663000
         OI    DCTSTAT,DCTDRAIN    SHOW DEVICE NO LONGER AVAILABLE   R4 24663500
         OI    DCTFLAGS,DCTBKSP+DCTRSTRT  INTERRUPT THE OUTPUT       R4 24664000
MSNAXERP OI    ICEXRFBK,ICEXRDNA   SHOW DEVICE NOT ACCEPTING DATA   R41 24664200
         SPACE 1                                                     R4 24664500
MSNAXERR TM    MFLAGS,MLOGGED      TEST FOR DIAGNOSTIC LOGGING       R4 24665000
         BO    MSNAXRS1            GO CANCEL CHAIN IF ALREADY LOGGED R4 24665500
        $IOERROR (MBUF)            ELSE LOG EXCEPTION RESPONSE       R4 24666000
         OI    MFLAGS,MLOGGED      SHOW MESSAGE ALREADY LOGGED      R41 24666200
         SPACE 1                                                     R4 24666500
MSNAXRS1 ICM   R14,1,ICERSPCT       DECREMENT                        R4 24667000
         BZ    SKIP1450              OUTSTANDING                     R4 24667500
         BCTR  R14,0                  RESPONSE COUNT                 R4 24668000
         STC   R14,ICERSPCT            (IF NOT NEGATIVE)             R4 24668500
SKIP1450 OI    ICESNDST,ICECNCEL+ICEWTRSP  SHOW CHAIN IS CANCELLED   R4 24669000
         NI    ICEFLAGS,255-ICEBBPND-ICEEBPND-ICECHDIR  RESET PENDS. R4 24669500
         EJECT                                                      R41 24670000
MSNAXRS2 ICM   R0,3,ICEOUTCT       CHECK OUTBOUND CIRCULATION        R4 24670500
         BNZR  WA                  IF NOT ZERO, WAIT FOR QUIESCE OR  R4C24671000
                                    'CANC BY PRIOR EX RESPONSE' RPL  R4 24671500
         TM    ICESNDST,ICEINCHN   TEST SESSION SEND STATUS          R4 24672000
         BZ    MSNAPRS1            LET RTAM HANDLE IF OUT OF CHAIN   R4 24672500
         SPACE 1                                                     R4 24673000
MSNAXRS3 NI    ICESNDST,255-ICEINCHN-ICEOCPND  FORCE RTAM OUT OF CHN R4 24673500
         MVC   RPLCNTDF(3),MSNACNCL  CHANGE                          R4 24674000
         MVI   RPLSRTYP,RPLNFSYN      INTERCEPTED              @OZ32746 24674500
         MVI   RPLVTFL2,RPLSCHED       RPL INTO                      R4 24675000
         MVI   RPLCHN,RPLONLY           'CANCEL' REQ                 R4 24675500
         OI    ICESNDST,ICEWTRSP   SHOW L.M.-SENT REQST EXPECTS RESP R4 24676000
         B     MVRPLOCR            SEND 'CANCEL' AND RETURN          R4 24676500
         SPACE 5                                                    R41 24677000
*                                                                    R4 24677500
*                             HANDLE EXCEPTION REQUESTS              R4 24678000
*                                                                    R4 24678500
         SPACE 1                                                     R4 24679000
MSNAXREQ CLI   RPLFDB2,USFEXRQ     TEST RPL FEEDBACK CODE            R4 24679500
         BNE   R01                 TRAP LOGIC ERR IF NOT EXCEP REQST R4 24680000
         OI    ICERCVST,ICECNCEL   SHOW CHAIN IS BEING CANCELLED     R4 24680500
         TM    MFLAGS,MLOGGED      TEST FOR DIAGNOSTIC LOGGING       R4 24681000
         BO    MSNAXRQ1            PASS IF BUFFER LOGGED       @OZ28435 24681500
        $IOERROR (MBUF)            ELSE LOG EXCEPTION REQUEST        R4 24682000
         OI    MFLAGS,MLOGGED      SHOW MESSAGE ALREADY LOGGED      R41 24682200
MSNAXRQ1 BAL   ML,MVFREEIN         PURGE BUFFER, SAVE COUNTS   @OZ28435 24682500
         LA    ML,MBUFNEXT         RESTORE RETURN ADDRESS      @OZ28435 24682600
         B     MICEABRT            GO CLOSE DOWN SESSION       @OZ28435 24682700
         SPACE 3                                                     R4 24683000
*                                                                    R4 24683500
*                             RE-EXECUTE RPLS TEMPORARILY REJECTED   R4 24684000
*                                                                    R4 24684500
         SPACE 1                                                     R4 24685000
MSNAXTMP L     R14,ICETEMP         INCREMENT                         R4 24685500
         LA    R14,1(,R14)          TEMPORARY                        R4 24686000
         ST    R14,ICETEMP           ERROR COUNT                     R4 24686500
         IC    R14,RPLERROR         INCREMENT                        R4 24687000
         LA    R14,1(,R14)           RPL RETRY                       R4 24687500
         STC   R14,RPLERROR           COUNT                          R4 24688000
         CLI   RPLFDB2,USFSTALF    TEST RPL FEEDBACK CODE            R4 24688500
         BNE   R01                 FAIL CATASTROPHICALLY (LOGIC ERR)   C24689000
                                    IF NOT TEMPORARY NO-STORAGE COND R4 24689500
         CLI   RPLERROR,255        TEST RPL RETRY COUNT              R4 24690000
         BL    MVRPLXEC            RETRY IF LESS THAN MAX            R4 24690500
         MVI   ICEINDEX,0          ELSE SHOW ANY SPECIAL SEQ ENDED   R4 24691000
         MVI   RPLERROR,0          CLEAR RPL RETRY COUNT             R4 24691500
         B     MSNAXCLS            GO FORCE DOWN SESSION             R4 24692000
         EJECT                                                       R4 24692500
*                                                                    R4 24693000
*                             HANDLE 'SEND' CANCELLED BY PRIOR -RSP  R4 24693500
*                                                                    R4 24694000
         SPACE 1                                                     R4 24694500
         SPACE 1                                                     R4 24695000
MSNAPIXR L     R0,ICEOUTHD         GET ADDR OF 1ST BUF ON OUTBD QUE  R4 24695500
         LH    R1,ICEOUTCT         GET OUTBOUND CIRCULATION COUNT    R4 24696000
         LTR   R0,R0               TEST 1ST OUTBD Q BUFFER ADDRESS   R4 24696500
         BZ    MSNAPIX5            GO CHECK FOR END CHAIN IF Q EMPTY R4 24697000
         LA    R15,ICEOUTHD-RPLNEXT+RPLDSECT  GET PHONY RPL ADDRESS  R4 24697500
         SPACE 1                                                     R4 24698000
         USING RPLDSECT,R15        USE TEMPORARY RPL ADDRESSABILITY  R4 24698500
         SPACE 1                                                     R4 24699000
MSNAPIX1 LR    R14,R15             SET PRECEDING BUF ADDR = CURRENT  R4 24699500
         SPACE 1                                                     R4 24700000
MSNAPIX2 CL    R15,ICEOUTTL        COMPARE BUF ADDR WITH QUE TAIL    R4 24700500
         LR    R15,R0              ADVANCE TO NEXT BUFFER IF ANY     R4 24701000
         BE    MSNAPIX4            REPLACE WHAT REMAINS IF QUE END   R4 24701500
         SPACE 1                                                     R4 24702000
MSNAPIX3 L     R0,RPLNEXT          LOAD ADDR OF NEXT BUFFER IF ANY   R4 24702500
         TM    RPLSRTYP,RPLSRESP   TEST SEND TYPE                    R4 24703000
         BO    MSNAPIX1            LEAVE BUFFER ON QE IF A RESPONSE  R4 24703500
         CLC   RPLCNTDF(3),MSNADATA  TEST R.U. TYPE                  R4 24704000
         BNE   MSNAPIX1            LEAVE BUFFER ON QE IF (SYNC) DFC  R4 24704500
         BCTR  R1,0                DECREMENT OUTBOUND CIRCULATION    R4 24705000
         MVC   RPLNEXT,RPLNEXT-RPLDSECT(MBUF)  PLACE BEHIND ORIGINAL R4 24705500
         ST    R15,RPLNEXT-RPLDSECT(,MBUF)      X'0C0D' BUF FOR FREE R4 24706000
         ST    R0,RPLNEXT-RPLDSECT(,R14)  REMOVE FROM OUTBD QUE      R4 24706500
         TM    RPLCHN,RPLLAST+RPLONLY  TEST R.U. CHAIN POSITION      R4 24707000
         BZ    MSNAPIX2            KEEP LOOKING IF NOT END OF CHAIN  R4 24707500
         DROP  R15                 DISCARD TEMP RPL ADDRESSABILITY   R4 24708000
         SPACE 1                                                     R4 24708500
MSNAPIX4 ST    R14,ICEOUTTL        STORE ADDR OF NEW LAST BUFFER     R4 24709000
         LA    R15,ICEOUTHD-RPLNEXT+RPLDSECT  GET PHONY RPL ADDRESS  R4 24709500
         CLR   R14,R15             COMPARE TAIL PTR & PHONY VALUE    R4 24710000
         BNE   MSNAPIX5            BRANCH IF QUE STILL HAS BUFFERS   R4 24710500
         XC    ICEOUTHD(8),ICEOUTHD  ELSE CLEAR OUTBD QUE POINTERS   R4 24711000
         SPACE 1                                                     R4 24711500
MSNAPIX5 BCTR  R1,0                COUNT ORIGINAL X'0C0D' BUFFER     R4 24712000
         STH   R1,ICEOUTCT         UPDATE OUTBOUND CIRCULATION       R4 24712500
         TM    RPLCHN,RPLLAST+RPLONLY  TEST R.U. CHAIN POSITION      R4 24713000
         BNZ   MSNAPRS0            LET RTAM HANDLE IF CHAIN ENDED    R4 24713500
         BAL   ML,MSNAXRS3         SEND 1ST INTERCEPTED RPL = CANCEL R4 24714000
         LA    ML,MBUFNEXT         RESTORE 1ST LEVEL RETURN ADDRESS  R4 24714500
         B     MVFREPRG            PURGE ANY REMAINING BUFFERS       R4 24715000
         EJECT                                                       R4 24715500
*                                                                    R4 24716000
*                             HANDLE RPL BAD RETURN CODES            R4 24716500
*                                                                    R4 24717000
         SPACE 1                                                     R4 24717500
MSNAPBAD MVI   RPLERROR,0          CLEAR ERROR RETRY COUNTER         R4 24718000
         LTR   MICE,MICE           TEST ICE ADDRESS                  R4 24718500
         BZ    MSNAPBA1            DON'T REFER TO ICE IF NOT AVAIL   R4 24719000
         LA    R14,ICEOUTBF        ASSUME REGULAR OUTBOUND BUFFER   R41 24719500
         CL    MBUF,ICEBUFAD       CHK CURRENT BUF VS. SPECIAL SEQ  R41 24720000
         BNE   MSNAPBA0            BRANCH IF REGULAR OUTBOUND BUFR  R41 24720500
         MVI   ICEINDEX,0          ELSE CLEAR SPECIAL SEQ. INDEX    R41 24721000
         LA    R14,ICEBUFAD        POINT TO SPECIAL SEQ BUFFER ADDR R41 24721500
MSNAPBA0 ST    R0,0(,R14)          CLEAR APPROPRIATE BUFFER POINTER R41 24722000
         SPACE 1                                                    R41 24722500
MSNAPBA1 LA    R14,RPLFDB2         POINT TO RPL FEEDBACK CODE       R41 24723000
         CLI   RPLRTNCD,MSNAINVL   COMPARE RTNCD WITH LIMIT         R41 24723500
         BL    MSNAPDIR            IF OK LOOK UP FDBK2 IN DIRECTORY R41 24723600
         B     R01                 ELSE FAIL CATASTROPHICALLY       R41 24723700
         EJECT                                                      R41 24723800
*                                                                   R41 24723900
*                            LOGIC ERRORS DIRECTORY                 R41 24724000
*                                                                   R41 24724100
         SPACE 1                                                    R41 24724200
MSNAPBUG DS    0F                  ALIGN TABLE ON FULLWORD BOUNDARY R41 24724300
         SPACE 1                                                    R41 24724600
*                            CODES MUST APPEAR IN SEQUENCE          R41 24724700
         SPACE 1                                                    R41 24724800
         DC    AL1(USFSINVC),AL3(R01-1) ALL LOWER ARE ERRORS        R41 24724900
         DC    AL1(USFSDFR),AL3(MSNAPFLX-1) NO SDT   - FLUSH        R41 24725000
         DC    AL1(USFINVNB),AL3(R01-1) INVLD CNTRL BLK - LOGIC ERR R41 24725100
         DC    AL1(USFNOPAU),AL3(MSNAXVTM-1) ACQ NOT AUTH - ABORT   R41 24725200
         DC    XL1'FF',AL3(R01-1)  OTHER CODES ARE LOGIC ERRORS     R41 24725300
         EJECT                                                       R4 24726000
*                                                                    R4 24726500
*                             ENVIRONMENT ERRORS DIRECTORY           R4 24727000
*                                                                    R4 24727500
         SPACE 1                                                     R4 24728000
MSNAPENV DS    0F                  ALIGN TABLE ON FULLWORD BOUNDARY R41 24728500
         SPACE 1                                                     R4 24730000
*                             CODES MUST APPEAR IN ASCENDING ORDER   R4 24730500
         SPACE 1                                                     R4 24731000
         DC    AL1(USFSBFAL),AL3(MSNAXVTM-1) TERM UNAVAIL/BIN       R41C24731500
                                   (OPNDST)         LOGON SEQ FAILS  R4 24732000
         DC    AL1(USFTAPUA),AL3(R01-1) APPL PASSD LGN REJECT       R41C24732500
                                   (CLSDST)         LOGIC ERROR      R4 24733000
         DC    AL1(USFVTHAL),AL3(MSNAXVTM-1) Z NET,QUICK CMND       R41C24733500
                                   (OPNDST)         ABANDON CONTACT  R4 24734000
         DC    AL1(USFILRS),AL3(R01-1) INCOMPAT VTAM/NCP DEFN       R41C24734500
                                   (BASIC MODE)     LOGIC ERROR      R4 24735000
         DC    AL1(USFPCF),AL3(MSNAXCLS-1) PERM CHNL/LINK FAIL      R41C24735500
                                   (OPNDST, RECEIVE, SEND, RESETSR,    C24736000
                                    SESSIONC)       ISSUE CLSDST     R4 24736500
         DC    AL1(USFANS),AL3(MSNAXVTM-1) AUTO NCP SHUTDOWN        R41C24737000
                                   (OPNDST)         LOGON SEQ FAILED R4 24737500
         DC    AL1(USFVOFOC),AL3(MSNAXCLS) CANCLD BY VARY DISC      R41C24737700
                                      (OPNDST, SEND, RESETSR,       R41C24737800
                                      SESSIONC) - ISSUE CLSDST      R41 24737900
         DC    AL1(USFDISCO),AL3(R01-1) CNCLD BY VARY/DIAL DISC     R41C24738000
                                   (BASIC MODE)     LOGIC ERROR      R4 24738500
         DC    AL1(USFUTSCR),AL3(MSNAXCLS-1) UNCOND TERMINATE       R41C24739000
                                   (OPNDST, RECEIVE, SEND, RESETSR,    C24739500
                                    SESSIONC)       ISSUE CLSDST     R4 24740000
         DC    AL1(USFSYERR),AL3(MSNAXVTM-1) VTAM LOGIC ERROR       R41C24740500
                                   (OPNDST, CLSDST, INQUIRE)           C24741000
                                                    ABANDON CONTACT  R4 24741500
         DC    AL1(USFDIDOL),AL3(MSNAXVTM-1) DIAL OUT DISC     @OZ34189*24741700
                                   (BASIC MODE)     ABANDON CONTACT     24741800
         DC    AL1(USFDIDIL),AL3(MSNAXVTM-1) DIAL IN/OUT DISC       R41C24742000
                                   (BASIC MODE)     LOGIC ERROR      R4 24742500
         DC    AL1(USFVTMNA),AL3(MSNAXVTM-1) VTAM INACT TO JES2     R41C24743000
                                   (ANY MACRO)      ABANDON CONTACT  R4 24743500
         DC    AL1(USFABNDO),AL3(R01-1) VTAM TCB ABEND         @OZ34189*24743550
                                   (ANY MACRO) LOGIC ERROR     @OZ34189 24743560
         DC    AL1(X'0F'),AL3(MSNAXVTM-1) NO VTAM BUFFERS      @OZ34189*24743580
                                  (ANY MACRO) ABANDON CONTACT  @OZ34189 24743590
         DC    AL1(X'10'),AL3(R01-1)      COND. TERM SELF      @OZ34189*24743600
                                   (OPNDST)           LOGIC ERROR       24743700
         DC    AL1(X'11'),AL3(MSNAXVTM-1) SDT FAILED           @OZ34189*24743800
                                   (OPNDST)       LOGON SEQ FAILS       24743900
         DC    XL1'FF',AL3(R01-1) OTHER CODES ARE LOGIC ERRORS      R41 24744000
         EJECT                                                       R4 24744500
*                                                                    R4 24745000
*                             DATA INTEGRITY DAMAGE DIRECTORY        R4 24745500
*                                                                    R4 24746000
         SPACE 1                                                     R4 24746500
MSNAPDMG DS    0F                  ALIGN TABLE ON FULLWORD BOUNDARY R41 24747000
         SPACE 1                                                     R4 24748500
*                             CODES MUST APPEAR IN ASCENDING ORDER   R4 24749000
         SPACE 1                                                     R4 24749500
         DC    AL1(USFLIORP),AL3(R01-1)  VARIOUS I/O ERRORS          R4C24750000
                                   (BASIC MODE)     LOGIC ERROR      R4 24750500
         DC    AL1(USFRTRAF),AL3(MSNAPURG-1)  CONN RECOV/TRM RESTART R4C24751000
                                   (RECEIVE, SEND,RESETSR, SESSIONC)   C24751500
                                                    LET LOSTERM RUN  R4 24752000
         DC    AL1(USFQOPDC),AL3(R01-1)  UNASSIGNED                  R4C24752500
                                   (NONE)           LOGIC ERROR      R4 24753000
         DC    AL1(USFCLRED),AL3(MSNAPURG)  CANC BY RSR/CLSDST/CLEAR   C24753500
                                   (RECEIVE,SEND, RESETSR, SESSIONC)   C24754000
                                                    PRGE BUF & CTNUE R4 24754500
         DC    AL1(USFPREXC),AL3(MSNAPIXR)  CANC BY PRIOR EXCPTN RSP   C24755000
                                   (SEND)           RESTART OUTBD QE R4 24755500
         DC    X'FF',AL3(R01-1)    ALL HIGHER CODES ARE LOGIC ERRORS R4 24756000
         EJECT                                                      R41 24756500
SKIP1470 LA    R15,4(,R15)         LOOK UP CODE                      R4 24757000
MSNAPDIR CLC   0(1,R14),0(R15)      IN TABLE FOR                     R4 24757500
         BH    SKIP1470              THIS LEVEL                      R4 24758000
         TM    3(R15),X'01'        TEST BRANCH ADDR LOW-ORDER BIT    R4 24758500
         L     R15,0(,R15)         LOAD INDICATED BRANCH ADDRESS     R4 24759000
         BZR   R15                 GO TO ERROR ROUTINE IF NOT ODD    R4 24759500
         TM    MFLAGS,MLOGGED      TEST FOR DIAGNOSTIC LOGGING       R4 24760000
         BO    1(,R15)             GO TO ERR RTNE IF ALREADY LOGGED  R4 24760500
         LA    ML,1(,R15)          SAVE BRANCH ADDR ACROSS $IOERROR  R4 24761000
        $IOERROR (MBUF)            ISSUE I/O ERROR MESSAGE           R4 24761500
         OI    MFLAGS,MLOGGED      SHOW MESSAGE ALREADY LOGGED      R41 24761700
         LR    R15,ML              RESTORE ROUTINE BRANCH ADDRESS    R4 24762000
         LA    ML,MBUFNEXT         RESTORE 1ST LEVEL RETURN ADDRESS  R4 24762500
         BR    R15                 GO TO ERROR ROUTINE               R4 24763000
         SPACE 1                                                     R4 24763500
*                                                                    R4 24764000
*                             FLUSH CANCELLED REQUESTS               R4 24764500
*                                                                    R4 24765000
         SPACE 1                                                     R4 24765500
MSNAPFLX MVI   RPLRTNCD,USFDAMGE   SIMULATE RPL                      R4 24766000
         MVI   RPLFDB2,USFCLOCC     CANCELLED CODE                   R4 24766500
         CLI   RPLSEQTP,VSEQRECV   TEST IF RPL TYPE IS RECEIVE       R4 24767000
         BNE   MSNAPURG            SKIP INBND COUNT ADJUST IF NOT    R4 24767500
         TM    RPLSRTYP,RPLRRESP   CHECK TYPE OF RECEIVE             R4 24768000
         BZ    MVFREEIN            IF REQUEST, GO FIX INBOUND COUNT  R4 24768500
         SPACE 1                                                     R4 24769000
         CNOP  0,4                 ALIGN TABLE ON FULLWORD BOUNDARY  R4 24769500
MSNAPURG LA    R14,RPLSEQTP        POINT TO RPL SEQUENCE TYPE        R4 24770000
         BAL   R15,MSNAPDIR        LOOK UP IN FREE ROUTINE DIRECTORY R4 24770500
         SPACE 1                                                     R4 24771000
*                             CODES MUST APPEAR IN ASCENDING ORDER   R4 24771500
         SPACE 1                                                     R4 24772000
         DC    AL1(VSEQRECV),AL3(MVFREPRG)  RECEIVE - PURGE          R4 24772500
         DC    AL1(VSEQSEND),AL3(MSNAPSN1)  SEND - MAINTAIN COUNTS   R4 24773000
         DC    AL1(VSEQRSET),AL3(MVFREEIN)  RESET CS - MAINTAIN CTS  R4 24773500
         DC    AL1(VSEQRSCA),AL3(MVFREPRG)  RESET CA - PURGE         R4 24774000
         DC    X'FF',AL3(R01)      ALL OTHER CODES ARE LOGIC ERRORS  R4 24774500
         EJECT                                                       R4 24775000
*                                                                    R4 24775500
*                        HANDLE PERMANENT OR ENVIRONMENTAL ERRORS    R4 24776000
*                                                                    R4 24776500
         SPACE 1                                                     R4 24777000
MSNAXCLS TM    MFLAGS,MLOGGED      TEST FOR ERROR ALREADY LOGGED     R4 24777500
         BO    MSNAXCL1            JUST ABORT IF RPL ALREADY LOGGED  R4 24778000
        $IOERROR (MBUF)            ISSUE I/O ERROR MESSAGE           R4 24778500
         OI    MFLAGS,MLOGGED      SHOW RPL HAS ALREADY BEEN LOGGED  R4 24779000
         SPACE 1                                                     R4 24779500
MSNAXCL1 LTR   MICE,MICE           TEST ICE ADDRESS                  R4 24780000
         BZ    MVFREPRG            JUST FREE BUFFER IF ICE NOT AVAIL R4 24780500
         TM    RPLSEQTP,VSEQSPEC   TEST L.M. CONTROL SEQ TYPE        R4 24781000
         BNZ   MICEABRT            BRANCH IF IN SPECIAL SEQUENCE     R4 24781500
         BAL   ML,MSNAPURG         ELSE DISPOSE OF BUFFER            R4 24782000
         LA    ML,MBUFNEXT         RESTORE 1ST LEVEL RETURN ADDRESS  R4 24782500
         B     MICEABRT            GO CLOSE DOWN SESSION             R4 24783000
         SPACE 2                                                     R4 24783500
MSNAXVTM TM    MFLAGS,MLOGGED      TEST FOR ERROR ALREADY LOGGED     R4 24784000
         BO    MSNAXVT1            YES -- SKIP DUPLICATE MESSAGE     R4 24784500
        $IOERROR (MBUF)            ISSUE I/O ERROR MESSAGE           R4 24785000
         OI    MFLAGS,MLOGGED      SHOW MESSAGE ALREADY LOGGED       R4 24785500
         SPACE 2                                                     R4 24786000
MSNAXVT1 LTR   MICE,MICE           TEST ICE ADDRESS                  R4 24786500
         BZ    MVFREPRG            JUST FREE BUFFER IF ICE NOT AVAIL R4 24787000
         SPACE 1                                                    R41 24787100
         CLI   RPLSEQTP,VSEQALOG   TEST FOR AUTOLOGON SEQUENCE TYPE R41 24787200
         BL    MSNAXVT3            BR IF NO, SKIP RAT RESET         R41 24787300
         CLI   RPLSEQTP,VSEQALOG+15 TEST FOR AUTLOGON SEQUENCE TYPE R41 24787400
         BH    MSNAXVT3            BR IF NO, SKIP RAT RESET         R41 24787500
         L     R15,ICELDCT         PICK UP ASSOCIATED LINE DCT ADDR R41 24787600
         LTR   R15,R15             TEST FOR LINE DCT PRESENT        R41 24787700
         BZ    MSNAXVT3            GONE, SKIP RAT RESET             R41 24787800
         L     R15,MDCTRAT-DCTDSECT(,R15)  LOAD RAT ADDRESS         R41 24787900
         NI    RATFLAGS-RATDSECT(R15),255-RATSRMT-RATALM RESET FLGS R41 24788000
         SPACE 1                                                    R41 24788100
         L     R1,$MWORK           PICK UP WORK AREA ADDRESS        R41 24788200
         MVC   0(L'MALMSG1,R1),MALMSG1    MOVE IN MESSAGE TEXT      R41 24788300
         USING MALMSG1,R1          TEMPORARY MESSAGE ADDRESSABILITY R41 24788400
         MVC   MALMSGR,RATNAME-RATDSECT(R15)  MOVE IN RMT NAME      R41 24788500
         DROP  R1                  RELEASE MSG ADDRESSABILITY       R41 24788600
         SPACE 1                                                    R41 24788700
         $WTO  (R1),L'MALMSG1,WAIT=NO,JOB=NO,    ISSUE MESSAGE      R41C24788800
               ROUTE=$LOG+$TP+$ERR,CLASS=$ALWAYS,PRI=$HI            R41 24788900
         EJECT                                                      R41 24789000
MSNAXVT3 TM    RPLSEQTP,VSEQSPEC   TEST L.M. CONTROL SEQ TYPE       R41 24789100
         BNZ   MICEABDN            BRANCH IF IN SPECIAL SEQUENCE    R41 24789200
         BAL   ML,MSNAPURG          ELSE DISPOSE OF BUFFER          R41 24789300
         LA    ML,MBUFNEXT         RESTORE 1ST LEVEL RETURN ADDRESS R41 24789400
         B     MICEABDN            ABANDON SESSION WITHOUT CLOSING   R4 24789500
         EJECT                                                       R4 24790000
MSNALOGN DS    0H                  PROCESS SNA LOGON SEQUENCE        R4 24790500
         SLL   R14,2               ADJUST RPL SUBSEQ FOR SCAN        R4 24791000
         L     R1,MSNALTAB-4(R14)  GET ADDR OF SUBSEQ ROUTINE       R41 24791500
         BR    R1                  ENTER PROCESSING ROUTINE          R4 24792000
         SPACE 1                                                     R4 24792500
MSNALTAB DS    0F                  LOGON SEQUENCE BRANCH TABLE       R4 24793000
         DC    A(MSNALDEV)         INQUIRE DEVCHAR  COMPLETE         R4 24794000
         DC    A(MSNALPAR)         INQUIRE SESSPARM COMPLETE         R4 24794500
         DC    A(MSNALOPD)         OPNDST  ACCEPT   COMPLETE         R4 24795000
         SPACE 2                                                     R4 24795500
         EJECT                                                       R4 24815000
         USING NIBDSECT,R15        ESTABLISH NIB  ADDRESSABILITY     R4 24815500
MSNALDEV L     R15,RPLARG          GET ADDRESS OF NIB FROM RPL       R4 24816000
         CLI   DEVTCODE,DEVLU      CHECK FOR LU TYPE TERMINAL        R4 24816500
         BNE   MSNALINV            REJECT LOGON REQUEST IF NOT      R41 24817000
         LA    R14,RPLBUFST+NIBSIZE GET AREA ADDR FOR SESSPARM       R4 24817500
         ST    R14,RPLAREA         STORE AREA ADDRESS IN RPL         R4 24818000
         ST    R14,NIBNDAR         STORE AREA ADDRESS IN NIB         R4 24818500
         LH    R1,$BFSZSNA         GET LENGTH OF SNA BUFFER          R4 24819000
         LA    R1,RPLBUFST(R1)     CALCULATE END OF BUFFER ADDR      R4 24819500
         SR    R1,R14               AND REMAINING DATA AREA LEFT     R4 24820000
         ST    R1,RPLBUFL          STORE IN RPL FOR INQUIRE          R4 24820500
         MVI   RPLOPT9,0           CLEAR INQUIRE DEVCHAR INDICATOR   R4 24821000
         MVI   RPLOPT10,RPLSPARM   SHOW INQUIRE SESSPARM REQUEST     R4 24821500
         NI    RPLSEQTP,X'F0'      SHOW RPL INQUIRE SESSION         R41 24821600
         OI    RPLSEQTP,VSEQLPAR    PARAMTERS SPECIAL SEQUENCE      R41 24822000
         NI    ICEINDEX,X'F0'      INDICATE SESSION IN              R41 24822100
         OI    ICEINDEX,VSEQLPAR    INQUIRE SESSPARM STATUS         R41 24822500
         B     MVRPLXEC            GO TO PASS REQUEST TO VTAM        R4 24823000
         DROP  R15                 RELEASE NIB ADDRESSABILITY        R4 24823500
         EJECT                                                 @OZ25901 24824000
         USING BINDSECT,R14        ESTABLISH BIND ADDRESSABILITY     R4 24824500
         USING NIBDSECT,R15        ESTABLISH NIB  ADDRESSABILITY     R4 24825000
MSNALPAR L     R14,RPLAREA         GET ADDR OF BIND IMAGE            R4 24825500
         L     R15,RPLARG          GET ADDR OF NIB                   R4 24826000
         IC    R0,BINUSEL          GET LENGTH  OF USER DATA          R4 24826500
         LA    R1,BINUSE           GET ADDRESS OF USER DATA          R4 24827000
         NC    BINDSECT(L'MBNDMASK),MBNDMASK ISOLATE VARIABLE PARMS  R4 24827500
         MVC   ICEBIND,MSNABIND    MOVE DEFAULT BIND IMAGE TO ICE    R4 24828000
         OC    ICEBIND(L'MBNDMASK),BINDSECT MERGE FIXED & VAR PARMS  R4 24828500
         LA    R14,ICEBIND         GET  DEFAULT BIND IMAGE ADDR      R4 24829000
         ST    R14,NIBNDAR         SET NIB POINTER TO BIND IMAGE     R4 24829500
         L     WA,NIBRAT           PICK UP PRE-CONNECT RAT          R41 24829600
         L     MDCT,ICELDCT         AND LINE DCT ADDRESSES          R41 24829700
         DROP  R14,R15             DROP BIND/NIB ADDRESSABILITY      R4 24830000
         SPACE 1                                                    R41 24830100
         LTR   WA,WA               RAT ADDRESS PRESENT...           R41 24830200
         BNZ   MSNALACQ            BR IF YES, GO DO OPNDST AQUIRE   R41 24830300
         SPACE 1                                                    R41 24830500
         TM    MEVNTIND,MEVNCKPT   TEST STATUS OF SHARED QS    @OZ25901 24830600
         BZ    MREQBUF             IF NOT OWNED, REQUEUE BUFR  @OZ25901 24830700
         SPACE 1                                               @OZ25901 24830800
         MVI   MSLGNWRK,C' '       MOVE BLANK TO LOGON WORKAREA      R4 24831000
         MVC   MSLGNWRK+1(MSLGNLEN-1),MSLGNWRK   CLEAR THE AREA      R4 24831500
         BAL   R14,MDELSCAN        SCAN FOR REMOTE NAME              R4 24832000
         B     MSNALINV            REJECT LOGON IF BAD NAME          R4 24832500
         EX    R15,MSNALRMT        MOVE NAME TO WORKAREA             R4 24833000
         BAL   R14,MDELSCAN        SCAN FOR LINE PASSWORD            R4 24833500
         B     MSNALINV            REJECT LOGON IF BAD PSWD          R4 24834000
         EX    R15,MSNALNPW        MOVE LINE PASSWORD                R4 24834500
         BAL   R14,MDELSCAN        SCAN FOR REMOTE PASSWORD          R4 24835000
         B     MSNALINV            REJECT LOGON IF BAD PSWD          R4 24835500
         EX    R15,MSNALRPW        MOVE LINE PASSWORD                R4 24836000
         BAL   R14,MDELSCAN        SCAN FOR LOGON MODE               R4 24836500
         B     MSNALINV            REJECT LOGON IF BAD MODE          R4 24837000
         EX    R15,MSNALMOD        MOVE LOGON MODE                   R4 24837500
         EJECT                                                       R4 24838000
         USING RATDSECT,WA         PROVIDE RAT ADDRESSABILITY        R4 24838500
         LH    R0,$NUMRJE          GET NUMBER OF REMOTES             R4 24839000
         L     WA,$RATABLE         GET ADDRESS OF RAT                R4 24839500
         LA    R14,ICESYMB         GET ADDR OF SESSION  SYMB NAME    R4 24840000
         LA    R1,RATSYMB-RATDSECT GET DISP OF REMOTE   SYMB NAME    R4 24840500
         CLI   MSLGNAME,C' '       HAS REMOTE NAME BEEN SPECIFIED    R4 24841000
         BE    MSNALOCA            SEARCH REMOTE USING  SYMB NAME    R4 24841500
         LA    R14,MSLGNAME        GET ADDR OF LOGON RMTE NAME       R4 24842000
         LA    R1,RATNAME-RATDSECT GET DISP OF TERMINAL RMTE NAME    R4 24842500
         CLC   =C'RMT',MSLGNAME    CHECK IF SHORT RMTE NAME GIVEN    R4 24843000
         BE    MSNALOCA            BRANCH TO LOCATE OUR REMOTE       R4 24843500
         CLC   =C'REMOTE',MSLGNAME CHECK FOR CORRECT LONG FORM       R4 24844000
         BNE   MSNALINV            REJECT LOGON IF IN ERROR          R4 24844500
         MVC   MSLGNRMT(3),=C'RMT' MOVE SHORT FORM TO WORKAREA       R4 24845000
         MVC   MSLGNRMT+3(2),MSLGNRMT+6 COPY REMOTE NUMBER           R4 24845500
         LA    R14,MSLGNRMT        POINT TO SHORT REMOTE NAME        R4 24846000
         SPACE 1                                                     R4 24846500
MSNALOCA LA    R15,RATDSECT(R1)    GET ADDR OF RAT ENTRY FIELD       R4 24847000
         CLC   0(8,R14),0(R15)     CHECK IF THIS IS OUR REMOTE       R4 24847500
         BE    MSNALFND            BRANCH IF CORRECT ENTRY FOUND     R4 24848000
         LA    WA,RATTLE(,WA)      STEP TO NEXT RAT ENTRY            R4 24848500
         BCT   R0,MSNALOCA         CHECK FOR END OF RAT              R4 24849000
         SPACE 1                                                     R4 24849500
MSNALINV L     MDCT,ICEADCT        RELOAD LOGON DCT ADDRESS         R41 24849600
         L     R1,MDCTINVL         GET LOGON FAILED FOR PARM COUNT  R41 24850000
         LA    R1,1(,R1)           INCREMENT LOGON FAILED COUNT      R4 24850500
         ST    R1,MDCTINVL         STORE UPDATED COUNTER VALUE       R4 24851000
******** WRITE INTEGRITY DAMAGE SMF RECORD                           R4 24851500
         L     R1,$MWORK           GET MESSAGE WORKAREA ADDR         R4 24852000
         MVC   0(L'MLGIMSG,R1),MLGIMSG MSG TARGET TO WORKAREA        R4 24852500
         USING MLGIMSG,R1          PROVIDE MSG ADDRESSABILITY        R4 24853000
         MVC   MLGILOG,DCTDEVN     MOVE LOGON DCT NAME TO MSG        R4 24853500
         MVC   MLGISYM,ICESYMB     MOVE SESSION SYMB NAME TO MSG     R4 24854000
         LA    R0,L'MLGIMSG        GET MESSAGE LENGTH FOR $WTO       R4 24854500
         B     MSNALREJ            BRANCH TO REJECT THIS LOGON       R4 24855000
         DROP  R1                  RELEASE MSG ADDRESSABILITY        R4 24855500
         EJECT                                                      R41 24855600
MDELSCAN DS    0H                  DELIMITER SCAN SUBROUTINE        R41 24855700
         LTR   R15,R0              CHECK AND SAVE FIELD LENGTH      R41 24855800
         BMR   R14                 ERROR RETURN IF INVALID LENGTH   R41 24855900
         BZ    8(0,R14)            NOP RETURN IF EMPTY FIELD LENGTH R41 24856000
         LR    WA,R1               SAVE FIELD START POINTER VALUE   R41 24856100
         CLI   0(R1),C'('          CHECK FOR OPEN PARENTHESIS       R41 24856200
         BNE   MDELCHCK            BRANCH IF NOT PRESENT            R41 24856300
         LA    WA,1(0,R1)          STEP PAST OPEN PARENTHESIS       R41 24856400
         BCT   R15,MDELINCR        DECREASE & CHECK FIELD LENGTH    R41 24856500
         BR    R14                 ERROR RETURN IF INVALID SYNTAX   R41 24856600
         SPACE 1                                                    R41 24856700
MDELCHCK CLI   0(R1),C' '          CHECK FOR BLANK CHARACTER        R41 24856800
         BE    MDELBLNK            BRANCH IF END OF STRING          R41 24856900
         CLI   0(R1),C','          CHECK FOR COMMA AS DELIMITER     R41 24857000
         BE    MDELCOMA            BRANCH IF END OF SUBSTRING       R41 24857100
         CLI   0(R1),C')'          CHECK FOR CLOSE PARENTHESIS      R41 24857200
         BE    MDELBLNK            HANDLE AS BLANK DELIMITER        R41 24857300
         SPACE 1                                                    R41 24857400
MDELINCR LA    R1,1(0,R1)          ADVANCE STRING POINTER           R41 24857500
         BCT   R0,MDELCHCK         CHECK FOR END OF FIELD           R41 24857600
         B     MDELBLNK            BRANCH IF END OF FIELD REACHED   R41 24857700
         SPACE 1                                                    R41 24857800
MDELCOMA LA    R1,1(0,R1)          STEP POINTER OVER COMMA          R41 24857900
         BCTR  R0,0                UPDATE FIELD LENGTH VALUE        R41 24858000
         BCTR  R15,0               ADJUST OLD TARGET LENGTH VALUE   R41 24858100
         SPACE 1                                                    R41 24858200
MDELBLNK BCTR  R15,0               DECREMENT FOR MACHINE LENGTH     R41 24858300
         SR    R15,R0              CALCULATE SUBSTRING LENGTH - 1   R41 24858400
         BM    8(0,R14)            NOP RETURN IF EMPTY SUBSTRING    R41 24858500
         CH    R15,=H'8'           CHECK FOR MAXIMUM STRING LENGTH  R41 24858600
         BL    4(0,R14)            RETURN WITH OPERAND IF GOOD      R41 24858700
         BR    R14                 ERROR RETURN IF TOO LONG         R41 24858800
         EJECT                                                       R4 24858900
MSNALFND CLC   RATPSWD,MSLGNRPW    DO REMOTE PASSWORDS MATCH         R4 24859000
         BNE   MSNALINV            REJECT LOGON IF INCORRECT         R4 24859100
         TM    RATTYPE,DCTPSNA     CHECK REMOTE TYPE                 R4 24859200
         BNO   MSNALINV            INVALID IF NOT SNA                R4 24859300
         SPACE 2                                                     R4 24859400
         L     MDCT,RATLDCT        GET ADDRES OF LINE (OR ZERO)     R41 24859500
*              THIS LINE DELETED BY APAR NUMBER                @OZ25901 24859600
         LA    R15,MSNAIDL-MDCTADCT+DCTDSECT  SET UP PHONY LINE DCT R41 24860100
         LTR   MDCT,MDCT           TRY TO GET A LINE IF NOT          R4 24860500
         BZ    MSNALGET            TRY TO GET A LINE IF NOT          R4 24861000
         DROP  MDCT                DROP LOGON DCT ADDRESSABILITY     R4 24861500
         EJECT                                                       R4 24862000
         USING DCTDSECT,MDCT       SET LINE ADDRESSABILITY           R4 24862500
         OC    MDCTDCT,MDCTDCT     TEST FOR RMT ALREADY CONNECTED   R41 24863000
         BZ    MSNALREM            REMOVE LINE FROM IDLE CHAIN       R4 24863500
         SPACE 1                                                    R41 24863600
         SPACE 1                                                     R4 24864000
         CLC   RATRDCT,MDCTDCT     IS OUR REMOTE ACTIVE ON LINE      R4 24864500
         BNE   MSNALNOT            REJECT LOGON IF NOT               R4 24865000
         CLC   RATSYMB(8),MSLGNMOD TEST LOGON LUNAME                R41 24865500
         BNE   MSNALNOT            REJECT LOGON IF NOT MLU MODE      R4 24866000
         CLC   MSLGNLPW,MDCTPSWD   DO LINE PASSWORDS MATCH           R4 24866500
         BNE   MSNALINV            REJECT LOGON IF FALSE PASSWORD    R4 24867000
         B     MSNALACC            BRANCH TO ACCEPT MULTIPLE LOGON   R4 24867500
         SPACE 1                                                     R4 24868000
MSNALGET L     MDCT,MDCTADCT-DCTDSECT(,R15)  GET NEXT IDLE LINE DCT  R4 24868500
         LTR   MDCT,MDCT           CHECK FOR ANY MORE LINES          R4 24869000
         BZ    MSNALNOT            REJECT LOGON IF NO IDLE LINE      R4 24869500
         TM    MDCTSTAT,DCTLEASE   CHECK FOR LEASED LINE DCT         R4 24870000
         BO    MSNALGNX            SKIP THIS LINE DCT IF LEASED     R41 24870500
         OC    MDCTRAT,MDCTRAT     CHECK FOR PRE-CONNECTED LINE     R41 24870600
         BNZ   MSNALGNX            BR IF YES, SKIP LINE             R41 24870700
         CLC   MDCTPSWD,MSLGNLPW   COMPARE LINE PASSWORDS            R4 24871000
         BE    MSNALDSC            ALLOC THIS LINE IF PSWD MATCH     R4 24871500
MSNALGNX LR    R15,MDCT            SAVE PRECEEDING LNE DCT ADDRESS  R41 24872000
         B     MSNALGET            GO TO CHECK NEXT LINE DCT         R4 24872500
         SPACE 1                                                     R4 24873000
MSNALREM L     R1,MDCTADCT-DCTDSECT(,R15) GET ADDR OF NEXT LINE DCT  R4 24873500
         CLR   R1,MDCT             IS THIS DCT POINTING TO OURS      R4 24874000
         BE    MSNALDSC            BRANCH TO DISC OUR DCT IF YES     R4 24874500
         LTR   R15,R1              CHECK FOR END OF CHAIN            R4 24875000
         BNZ   MSNALREM            BRANCH TO TEST NEXT LINE DCT      R4 24875500
         B     MSNALNOT            REJECT LOGON IF DCT NOT ACTIVE    R4 24876000
         SPACE 2                                                    R41 24876100
MSNALDSC DS    0H                                                   R41 24876200
         TM    RATFLAGS,RATPILUN   TEST FOR LUNAME SPECIFIED        R41 24876300
         BNO   MSNALMVE            BRANCH IF NO, USE LOGON LUNAME   R41 24876400
         CLC   RATSYMB(8),ICESYMB  ELSE TEST SPECIFIECD LUNAME      R41 24876500
         BNE   MSNALNOT            BRANCH IF NOT EQUAL, FAIL LOGON  R41 24876600
MSNALMVE MVC   RATSYMB(8),ICESYMB  MOVE IN LUNAME                   R41 24876700
         LR    R0,WA               COPY RAT OFFSET                  R41 24877000
         SL    R0,$RATABLE         R0 = (RMT NO -1) * RATTLE         R4 24877500
         LR    R1,R0               MULTIPLY                          R4 24878000
         ALR   R1,R0                BY                               R4 24878500
         ALR   R1,R0                 THREE                           R4 24879000
         SLR   R0,R0               DIVIDE BY EIGHT AND               R4 24879500
         D     R0,=A(RATTLE)        RATTLE GIVING OFFSET TO          R4 24880000
         D     R0,=A(8)              BYTE (QUOT) AND BIT (REMAIN)    R4 24880500
         AL    R1,$RMTSON          R1 = BYTE ADDR OF SIGNON BITS     R4 24881000
         LR    R14,R0              MOVE BIT OFFSET                   R4 24881500
         L     R0,=A(QUEBUSY*X'2000')  GET BIT TO TEST BUSY          R4 24882000
         SRL   R0,0(R14)           SHIFT TO BIT OFFSET               R4 24882500
         STH   R0,MSONWORK         STORE IN WORK AREA FOR TEST       R4 24883000
         NC    MSONWORK,0(R1)      TEST FOR RMT ON ANY OTHER SYSTEM  R4 24883500
         BNZ   MSNALNOX            BRANCH IF YES, --INVALID SIGNON  R41 24884000
         SLR   R0,R0               GET BUSY BITS                     R4 24884500
         ICM   R0,4,$SIDBUSY         FOR THIS SYSTEM                 R4 24885000
         SRL   R0,3(R14)           SHIFT TO BIT OFFSET               R4 24885500
         STH   R0,MSONWORK         STORE IN WORK AREA FOR SET        R4 24886000
         OC    0(2,R1),MSONWORK    SET BITS -- SHOW RMT ON SYSTEM    R4 24886500
         SPACE 2                                                     R4 24887000
         L     R0,MDCTADCT         PICK UP NEXT LINE DCT ADDRESS     R4 24887500
         ST    R0,MDCTADCT-DCTDSECT(,R15) REMOVE LINE DCT FROM CHAIN R4 24888000
         SPACE 1                                                     R4 24888500
         L     R1,MSNALNE          GET ADDR OF 1ST ALLOCATED LINE    R4 24889000
         ST    R1,MDCTADCT         CHAIN ALLOC LINES TO OUR LINE     R4 24889500
         ST    MDCT,MSNALNE        UPDATE LINE MGR ALLOC CHAIN       R4 24890000
         ST    MDCT,RATLDCT        STORE LINE DCT IN RAT             R4 24890500
         NI    DCTFLAGS,DCTLOGAL   RESET FLAGS -EXCEPT LOGGING      R41 24891500
         L     R1,RPLDCT           PICK UP LOGON DCT ADDRESS        R41 24891600
         ST    R1,DCTDCB           STORE LOGON DCT ADDRESS IN LINE  R41 24892000
         ST    WA,MDCTRAT          STORE RAT ADDRESS IN LINE DCT     R4 24892500
         L     R15,RATRDCT         GET ADDR OF FIRST REMOTE DCT      R4 24893000
         ST    R15,MDCTDCT         STORE REMOTE DCT CHAIN IN LINE    R4 24893500
         DROP  MDCT                DROP LINE DCT ADDRESSABILT        R4 24895000
         EJECT                                                       R4 24899500
         USING DCTDSECT,MDCT       GET LINE DCT ADDRESSABILITY       R4 24900000
MSNALACC ST    MDCT,ICELDCT        STORE LINE DCT ADDR INTO ICE      R4 24900500
         L     R1,MDCTICE          GET LOGGED ON ICE CHAIN           R4 24901500
         ST    R1,ICEALCHN         CONNECT ICE TO OLD CHAIN          R4 24902000
         ST    MICE,MDCTICE        RESTORE LOGGED ON ICE CHAIN       R4 24902500
         LH    R1,MDCTSNCT         GET LOGGED ON ICE COUNT           R4 24903000
         LA    R1,1(,R1)           INCREMENT COUNT BY ONE            R4 24903500
         STH   R1,MDCTSNCT         STORE UPDATED ICE COUNTER         R4 24904000
         SPACE 1                                                     R4 24904500
MSNALACQ LTR   MDCT,MDCT           TEST FOR LINE DCT PRESENT        R41 24904600
         BZ    MSNALABN            GONE, GO ABANDON LOGON ATTEMPT   R41 24904700
         STCM  MDCT,7,RPLDCT+1     STORE LINE DCT ADDREES IN RPL    R41 24904800
         LH    R1,RATBUFSZ         OBTAIN TERMINAL BUFFER SIZE       R4 24905000
         STH   R1,ICERULEN         SET MAXIMUM R.U. LENGTH          R41 24905200
         BAL   R14,MSNALGTH        CONVERT TO BIND-STYLE FLOATING PT R4 24905500
         MVC   MDCTIMOK,MCLOCK     SET TIME FOR DISCONNECT CHECK    R41 24905600
         OI    MSTQE+IPOST,X'20'   KICK OFF TIMER PULSES            R41 24905700
         SPACE 1                                                     R4 24906000
         USING BINDSECT,R15        ESTABLISH BIND ADDRESSABILITY     R4 24906500
         LA    R15,ICEBIND         GET ADDR OF SESSION BIND IMAGE    R4 24907000
         TM    RATFLAGS,RATEXCH    TEST FOR EXCHANGE MEDIA     @OZ29180 24907050
         BZ    MSNALNEX            BRANCH IF NOT EXCHANGE      @OZ29180 24907100
         OI    19(R15),X'20'       ALLOW SENDING EXCHANGE      @OZ29180 24907150
MSNALNEX TM    RATFLAGS,RATCARD    TEST FOR CARD MEDIA         @OZ29180 24907200
         BZ    MSNALPUN            NO, DO NOT BIND FOR CARDS   @OZ29180 24907250
         OI    19(R15),X'40'       INDICATE CARD FORMAT ALLOWED     R41 24907300
MSNALPUN TM    RATFEAT,DCTPPRES    COMPRESSION OPTION SELECTED      R41 24907500
         BZ    MSNALLTH            SKIP IF NOT SELECTED             R41 24908000
         OI    BINPRIP,BINPCMP     SHOW PRIMARY WILL SEND COMPRESSED R4 24908500
MSNALLTH STC   R1,BINSRUSZ         SET MAXIMUM INBOUND RU SIZE      R41 24909000
         STC   R1,BINPRUSZ         SET MAXIMUM OUTBOUND RU SIZE     R41 24909500
         MVC   BINPRIM(8),ICESYMB  MOVE PRIMARY LU NAME TO BIND      R4 24910000
         TM    RATFEAT,DCTPSHDR    PDIR OPTION SELECTED             R41 24910300
         BNO   MSNALHDR            NO, DO NOT BIND FOR PDIR         R41 24910400
         OI    15(R15),X'20'       YES, BIND FOR PDIR               R41 24910500
MSNALHDR TM    RATFEAT,DCTPCPCT    COMPACTION OPTION SELECTED       R41 24910600
         BNO   MSNALCPT            NO, DO NOT BIND FOR COMPACTION   R41 24910700
         OI    15(R15),X'40'       YES, BIND FOR COMPACTION         R41 24910800
         MVI   ICEACPTN,X'FF'      FORCE COMPACTION TABLE SEND      R41 24910900
MSNALCPT MVC   BINPRIM(8),ICESYMB  MOVE PRIMARY LUNAME TO BIND      R41 24911000
         NI    ICEINDEX,X'F0'      SHOW SESSION IN                  R41 24911100
         OI    ICEINDEX,VSEQLOPD    OPNDST SPECIAL SEQUENCE         R41 24911200
         NI    RPLSEQTP,X'F0'      INDICATE RPL IS                  R41 24911300
         OI    RPLSEQTP,VSEQLOPD    OPNDST REQUEST TYPE             R41 24911500
         MVI   RPLREQ,RPLOPNDS     SET REQUEST TYPE TO OPNDST       R41 24911600
         NI    RPLOPT5,255-RPLDLGIN-RPLNODE SHOW SPEC AND CA OPT     R4 24912000
         NI    RPLOPT7,255-RPLQOPT RESET RPL QUEUEING OPTION         R4 24912500
         MVI   ICEINLM+1,6         SET SESSION INBOUND LIMIT   @OZ27423 24913000
         MVI   ICEOUTLM+1,3        SET SESSION OUTBOUND LIMIT  @OZ27423 24913500
         B     MVRPLXEC            BRANCH TO PASS REQ TO VTAM        R4 24914500
         EJECT                                                      R41 24915000
MSNALNOT L     MDCT,ICEADCT        RELOAD LOGON DCT ADDRESS          R4 24915500
         L     R1,MDCTNLNE         GET LOGON FAILED FOR LINE CNTR    R4 24916000
         LA    R1,1(,R1)           INCREMT LOGON FAILED COUNTER      R4 24916500
         ST    R1,MDCTNLNE         STORE UPDATED COUNTER VALUE       R4 24917000
MSNALNOX CLI   RPLSEQTP,VSEQALOG+VSEQLPAR  TEST RPL SEQUENCE TYPE   R41 24917100
         BE    MSNALABN            BRANCH IF AUTOLOGON, ABANDON     R41 24917200
         L     R1,$MWORK           GET MESSAGE WORKAREA ADDRESS     R41 24917500
         MVC   0(L'MLGFMSG,R1),MLGFMSG MSG TARGET TO WORKAREA        R4 24918000
         USING MLGFMSG,R1          PROVIDE MSG ADDRESSABILITY        R4 24918500
         MVC   MLGFRMT,RATNAME     MOVE REMOTE NAME TO MESSAGE       R4 24919000
         MVC   MLGFSYM,ICESYMB     MOVE SESSION SYMB NAME TO MSG     R4 24919500
         LA    R0,L'MLGFMSG        GET LENGTH OF ERROR MESSAGE       R4 24920000
         DROP  R1                  RELEASE MSG ADDRESSABILITY        R4 24920500
         SPACE 1                                                     R4 24921000
MSNALREJ DS    0H                  REJECT LOGON REQUEST IN ERROR     R4 24921500
        $WTO   (R1),(R0),JOB=NO,WAIT=NO, ISSUE ERROR MESSAGE           C24922000
               ROUTE=$LOG+$ERR+$TP,CLASS=$ALWAYS,PRI=$HI             R4 24922500
         LH    R14,$BFSZSNA        RESET LENGTH SHORTENED FOR NIB    R4 24923000
         ST    R14,RPLBUFL          BACK TO FULL SNA BUFFER SIZE     R4 24923500
         MVI   RPLSEQTP,VSEQCLOS   SHOW SESSION CLSDST SEQ IN RPL    R4 24924000
         MVI   ICEINDEX,VSEQCLOS   INDICATE SESSION CLSDST STATUS    R4 24924500
         MVI   RPLREQ,RPLCLOSE     SHOW RPL CLSDST REQUEST TYPE      R4 24925000
         OI    ICESTAT,ICEDRAIN    SHOW ICE TO BE FREED AFTER CLSDST R4 24925500
         B     MVRPLXEC            BRANCH TO PASS REQ TO VTAM        R4 24926000
         DROP  WA                  RELEASE RAT ADDRESSABILITY        R4 24926500
         SPACE 2                                                    R41 24926600
MSNALABN MVI   ICEINDEX,0          CLEAR ICE INDEX FOR ABANDON      R41 24926700
         B     MICEABRT            ABORT SESSION ATTEMPT TO LOGON   R41 24926800
         EJECT                                                       R4 24927000
MSNALOPD LH    R14,$BFSZSNA        RESET LENGTH SHORTENED FOR NIB   R41 24927500
         ST    R14,RPLBUFL          BACK TO FULL SNA BUFFER SIZE    R41 24927600
         SPACE 1                                                    R41 24927700
         NI    ICESTAT,255-ICEHOLD-ICEABORT ALLOW ICE ALLOCATION    R41 24927800
         MVI   ICEINDEX,VSEQNORM   SHOW SESSION  IN NORMAL  STATUS  R41 24927900
         MVI   ICERCVST,ICENOFMH   SHOW RECV OUT OF STREAM  STATUS  R41 24928000
         MVI   ICESNDST,ICENOFMH   SHOW SEND OUT OF STREAM  STATUS  R41 24928100
         NI    ICEFLGS2,255-ICESIGNL-ICEOUTBK-ICEBREAK         @OZ29180 24928150
         MVC   ICECID,RPLARG       MOVE VTAM CID OF SESSION TO ICE  R41 24928200
*              THIS LINE DELETED BY APAR NUMBER                @OZ27423 24928300
*              THIS LINE DELETED BY APAR NUMBER                @OZ27423 24928400
         ST    R0,ICEBUFAD         CLEAR SPECIAL SEQ BUFFER ADDR    R41 24928500
         SPACE 1                                                    R41 24928600
         L     MDCT,ICELDCT        RELOAD ICE ADDRESS               R41 24928700
         LTR   MDCT,MDCT           TEST FOR LINE DCT PRESENT        R41 24928800
         BZ    MICEABRT            GONE, SESSION ABORTED            R41 24928900
         SPACE 1                                                    R41 24929000
         MVI   ICEFLAGS,ICECNECT   SHOW SESSION CONNECTED           R41 24929100
         SPACE 1                                                    R41 24929200
         L     R15,MDCTRAT         GET RAT  ENTRY ADDRESS           R41 24929300
         USING RATDSECT,R15        ESTABLISH RAT ADDRESSABILITY     R41 24929400
         OI    MDCTSTAT,DCTSINON   SHOW REMOTE SIGNED ON LINE       R41 24929500
         L     R14,MDCTDCT         PICK UP FIRST REMOTE DCT ADDRESS R41 24929600
         USING DCTDSECT,R14        GET REMOTE DCT ADDRESSABILITY    R41 24929700
MSNALSON OI    MDCTSTAT,DCTSINON   SHOW REMOTE IS SIGNED ON         R41 24929800
         ST    MDCT,DCTDCB         STORE LINE DCT ADDRESS IN REMOTE R41 24929900
         L     R14,MDCTDCT         GET ADDRESS OF NEXT REMOTE DCT   R41 24930000
         LTR   R14,R14             CHECK FOR END OF REMOTE DCT CHN  R41 24930100
         BNZ   MSNALSON            BRANCH TO PROCESS NEXT DCT       R41 24930200
         DROP  R14                 RELEASE REMOTE DCT ADDRESSABILTY R41 24930300
         SPACE 1                                                    R41 24930400
         NI    RATFLAGS,255-RATSRMT  FORCE $S RMT FLAG OFF          R41 24930500
         EJECT                                                      R41 24934400
         L     R1,$MWORK           GET MESSAGE WORKAREA ADDR         R4 24934500
         LA    R0,1                COMPARE SESSION                  R41 24934600
         CH    R0,MDCTSNCT          COUNT WITH 1                    R41 24934700
         BNE   MSNALOPS              BRANCH IF NOT FIRST SESSION    R41 24934800
         MVC   0(L'MLGNMSG,R1),MLGNMSG MSG TARGET TO WORKAREA        R4 24935000
         USING MLGNMSG,R1          PROVIDE MSG ADDRESSABILITY        R4 24935500
         MVC   MLGNRMT,RATNAME     MOVE REMOTE NAME TO MESSAGE       R4 24936000
         MVC   MLGNLNE,DCTDEVN     MOVE LINE DCT NAME TO MESSAGE     R4 24936500
         MVC   MLGNSYM,ICESYMB     MOVE SESSION SYMB NAME TO MSG     R4 24937000
         DROP  R1                  RELEASE MESSAGE ADDRESSABILITY   R41 24937100
        $WTO   (R1),L'MLGNMSG,JOB=NO,WAIT=NO,  ISSUE LOGON MESSAGE     C24937500
               ROUTE=$LOG+$ERR+$TP,CLASS=$ALWAYS,PRI=$HI             R4 24938000
         SPACE 1                                                     R4 24938500
         OI    MDCTATTN,MDCTJOB1+MDCTJOB2  SHOW IDLE SESSION AND       C24939000
                                            REQUEST SEARCH FOR WORK  R4 24939500
         B     MICETIME            REQST TIME DELAY, FREE BUF & RTRN R4 24940000
         SPACE 2                                                    R41 24940100
MSNALOPS MVC  0(L'MLGNMSG2,R1),MLGNMSG2  INITIALIZE MESSAGE         R41 24940200
         USING MLGNMSG2,R1         PICK UP MSG ADDRESSABILITY       R41 24940300
         MVC   MLGNSYM2,ICESYMB    MOVE LUNAME INTO MESSAGE         R41 24940400
         MVC   MLGNLNE2,DCTDEVN    MOVE LINE NAME INTO MESSAGE      R41 24940500
         $WTO  (R1),L'MLGNMSG2,JOB=NO,WAIT=NO,   ISSUE              R41X24940600
               ROUTE=$LOG+$TP,CLASS=$NORMAL,PRI=$HI   MESSAGE       R41 24940700
         SPACE 2                                                    R41 24940800
         OI    MDCTATTN,MDCTJOB1+MDCTJOB2     SHOW SESSION IDLE     R41 24940900
         B     MICETIME            GO REQUEST $WAITIME INTERVAL     R41 24941000
         SPACE 1                                                    R41 24941100
         DROP  R1,R15              DROP MSG AND RAT ADDRESSABILITY  R41 24941200
         EJECT                                                       R4 24941500
*                                                                    R4 24942000
*                CONVERT R.U. LENGTHS TO BIND FLOATING-POINT FORM    R4 24942500
*                                                                    R4 24943000
         SPACE 2                                                     R4 24943500
MSNALGTH LR    R0,R1               COPY LENGTH TO WORK REG           R4 24944000
         SLL   R1,4                SHIFT LENGTH INTO HI-ORDER NIBBLE R4 24944500
         SRA   R0,4                TEST VALUE                        R4 24945000
         BZR   R14                 DONE IF LESS THAN 16              R4 24945500
         SLR   R15,R15             CLEAR REG FOR CHARACTERISTIC      R4 24946000
SKIP1500 LA    R15,1(,R15)         INCREASE CHARACTERISTIC BY 1      R4 24946500
         SRA   R0,1                SHIFT OUT RIGHT-HAND BIT          R4 24947000
         BNZ   SKIP1500            LOOP UNTIL LAST BIT SHIFTED OUT   R4 24947500
         SRL   R1,4(R15)           FORM 4-BIT MANTISSA              R41 24948000
         SLL   R1,4                SHIFT INTO HI-ORDER NIBBLE        R4 24948500
         ALR   R1,R15              MERGE MANTISSA & CHARACTERISTIC   R4 24949000
         BR    R14                 RETURN TO CALLER, RESULT IN R1    R4 24949500
         EJECT                                                       R4 24950000
MSNACLOS EQU   MICEMELT            PROCESS SNA CLSDST COMPLETE RPL   R4 24950500
         SPACE 1                                                     R4 24951000
MSNAHOLD EQU   MBUFNEXT                                              R4 24951500
MSNATERM EQU   MBUFNEXT                                              R4 24952000
MSNARCVR EQU   MBUFNEXT                                              R4 24952500
         SPACE 2                                                     R4 24953000
MSNALRMT MVC   MSLGNAME(*-*),0(WA)  MOVE RMTE NAME *** EXECUTED ***  R4 24953500
MSNALNPW MVC   MSLGNLPW(*-*),0(WA)  MOVE LINE PSWD *** EXECUTED ***  R4 24954000
MSNALRPW MVC   MSLGNRPW(*-*),0(WA)  MOVE RMTE PSWD *** EXECUTED ***  R4 24954500
MSNALMOD MVC   MSLGNMOD(*-*),0(WA)  MOVE LOGN MODE *** EXECUTED ***  R4 24955000
         SPACE 2                                                     R4 24955500
MLGFMSG $MSG   204,'RMTXXXXX -- LOGON  FAILED -- SESSION ZZZZZZZZ'   R4 24956000
MLGFRMT  EQU   MLGFMSG+2,8         REMOTE  NAME                      R4 24956500
MLGFSYM  EQU   MLGFMSG+39,8        SESSION NAME                      R4 24957000
         SPACE 2                                                     R4 24957500
MLGIMSG $MSG   205,'LOGONXXX -- INVALID LOGON -- SESSION ZZZZZZZZ'   R4 24958000
MLGILOG  EQU   MLGIMSG+2,8         LOGON DCT NAME                    R4 24958500
MLGISYM  EQU   MLGIMSG+39,8        SESSION   NAME                    R4 24959000
         SPACE 2                                                     R4 24959500
MLGNMSG $MSG   200,'RMTXXXXX STARTED ON LINEYYYY SESSION ZZZZZZZZ'   R4 24960000
MLGNRMT  EQU   MLGNMSG+2,8         REMOTE   NAME                     R4 24960500
MLGNLNE  EQU   MLGNMSG+22,8        LINE DCT NAME                     R4 24961000
MLGNSYM  EQU   MLGNMSG+39,8        SESSION  NAME                     R4 24961500
         SPACE 2                                                    R41 24961600
MLGNMSG2 $MSG  209,'SESSION XXXXXXXX STARTED ON LINEYYYY'           R41 24961700
MLGNSYM2 EQU   MLGNMSG2+10,8       LUNAME                           R41 24961800
MLGNLNE2 EQU   MLGNMSG2+30,8       LINE NAME                        R41 24961900
         EJECT                                                      R41 24962000
         DROP  MDCT                                                 R41 24962100
         DROP  MBASE1,MBASE2,MBASE3   RELEASE ROUTINE               R41 24962500
         DROP  MBUF,MICE           BUFFER AND ICE ADDRESSABILTY     R41 24962600
         SPACE 2                                                     R4 24963000
         DROP  BASE2              RELEASE LINE MANAGER BASE         R41 24963100
         LTORG                                                       R4 24963500
         EJECT                                                       R4 24964000
MSNABIND DS    0CL36          DEFAULT SNA BATCH BIND IMAGE           R4 24964500
         DC    X'01'               COLD BIND REQUEST                 R4 24965000
         SPACE 1                                                     R4 24965500
*                             FM PROFILE AND TS PROFILE              R4 24966000
         SPACE 1                                                     R4 24966500
         DC    B'00000011'         FM HEADERS WILL BE USED           R4 24967000
         DC    B'00000011'         STSN   WILL NOT BE USED           R4 24967500
         SPACE 1                                                     R4 24968000
*                             SESSION PROTOCOLS                      R4 24968500
         SPACE 1                                                     R4 24969000
         DC    B'10110001'         PRIMARY   PROTOCOLS               R4 24969500
         DC    B'10100011'         SECONDARY PROTOCOLS               R4 24970000
         DC    B'01110000'         COMMON    PROTOCOLS               R4 24970500
         DC    B'10000000'         COMMON    PROTOCOLS               R4 24971000
         SPACE 1                                                     R4 24971500
*                             TRANSMISSION SERVICE USAGE             R4 24972000
         SPACE 1                                                     R4 24972500
         DC    AL1(0)              SLU SEND PACING COUNT            R41 24973000
         DC    AL1(1)              SLU RCVE PACING COUNT             R4 24973500
         DC    AL1(*-*)            MAX. INBOUND  RU SIZE             R4 24974000
         DC    AL1(*-*)            MAX. OUTBOUND RU SIZE             R4 24974500
         DC    XL2'00'             RESERVED                          R4 24975000
         DC    B'00000001'         LU PROFILE                        R4 24975500
         DC    B'00010000'         FMH SUBSET                          C24976000
                                   CARDS MAY NOT SPAN RUS            R4 24976500
         SPACE 1                                                     R4 24977000
*                             PRIMARY LU USAGE                       R4 24977500
         SPACE 1                                                     R4 24978000
         DC    B'00000000'         INTERRUPT LEVEL 2                   C24978500
                                   NO COMPACTION                       C24979000
                                   NO PDIR SETUP                     R4 24979500
         DC    X'00'               RESERVED                          R4 24980000
         DC    B'10010001'         SCS CHARACTER SET USE               C24980500
                                   BS/CR/INP/ENP/LF/SVF/               C24981000
                                   SEL/TRN   MAY BE SENT             R4 24981500
         DC    X'00'               RESERVED                          R4 24982000
         DC    B'10000000'         DOCUMENT FORMAT ONLY             R41 24982500
         SPACE 1                                                     R4 24983000
*                             SECONDARY LU USAGE                     R4 24983500
         SPACE 1                                                     R4 24984000
         DC    B'00000000'         INTERRUPT LEVEL 2                   C24984500
                                   NO COMPACTION                       C24985000
                                   NO PDIR SETUP                     R4 24985500
         DC    X'00'               RESERVED                          R4 24986000
         DC    B'00000001'         SCS CHARACTER SET USE               C24986500
                                   TRN   MAY BE SENT                 R4 24987000
         DC    X'00'               RESERVED                          R4 24987500
         DC    B'01000000'         CARDS MAY BE SENT                 R4 24988000
         SPACE 1                                                     R4 24988500
*                             ADDITIONAL INFORMATION                 R4 24989000
         SPACE 1                                                     R4 24989500
         DC    X'00'               NO CRYPTO                         R4 24990000
         DC    AL1(8)              PLU NAME LENGTH                   R4 24990500
         DC    CL8' '              PRIMARY LU NAME                   R4 24991000
         DC    AL1(0)              NO USER DATA                      R4 24991500
         EJECT                                                       R4 24992000
MBNDMASK DS    0CL26          VARIABLE BIND PARMS SELECT MASK        R4 24992500
         DC    X'00'               BIND REQUEST TYPE FIXED           R4 24993000
         SPACE 1                                                     R4 24993500
*                             FM PROFILE AND TS PROFILE              R4 24994000
         SPACE 1                                                     R4 24994500
         DC    B'00000000'         FM PROFILE FIXED                  R4 24995000
         DC    B'00000000'         TS PROFILE FIXED                  R4 24995500
         SPACE 1                                                     R4 24996000
*                             SESSION PROTOCOLS                      R4 24996500
         SPACE 1                                                     R4 24997000
         DC    B'00000010'         PRIMARY   COMPR  VARIABLE         R4 24997500
         DC    B'00000010'         SECONDARY COMPR  VARIABLE         R4 24998000
         DC    B'00001000'         ALTERNATE CODE   VARIABLE         R4 24998500
         DC    B'00000000'         COMMON PROTOCOLS FIXED            R4 24999000
         SPACE 1                                                     R4 24999500
*                             TRANSMISSION SERVICE USAGE             R4 25000000
         SPACE 1                                                     R4 25000500
         DC    AL1(1)              SLU SEND PACING FIXED            R41 25001000
         DC    AL1(0)              SLU RCVE PACING FIXED             R4 25001500
         DC    B'11111111'         MAX INBND RU SIZE VARIABLE        R4 25002000
         DC    B'11111111'         MAX OUTBD RU SIZE VARIABLE        R4 25002500
         DC    XL2'00'             RESERVED                          R4 25003000
         DC    B'00000000'         LU PROFILE FIXED                  R4 25003500
         DC    B'00000000'         FMH SUBSET FIXED                  R4 25004000
         SPACE 1                                                     R4 25004500
*                             PRIMARY LU USAGE                       R4 25005000
         SPACE 1                                                     R4 25005500
         DC    B'00000000'         DS  PROTOCOLS  FIXED              R4 25006000
         DC    X'00'               RESERVED                          R4 25006500
         DC    B'00000000'         SCS CHAR USAGE FIXED              R4 25007000
         DC    X'00'               RESERVED                          R4 25007500
         DC    B'00000000'         MEDIA  SELECT  FIXED              R4 25008000
         SPACE 1                                                     R4 25008500
*                             SECONDARY LU USAGE                     R4 25009000
         SPACE 1                                                     R4 25009500
         DC    B'00000000'         DS  PROTOCOLS  FIXED              R4 25010000
         DC    X'00'               RESERVED                          R4 25010500
         DC    B'00000000'         SCS CHAR USAGE FIXED              R4 25011000
         DC    X'00'               RESERVED                          R4 25011500
         DC    B'00000000'         MEDIA  SELECT  FIXED              R4 25012000
         SPACE 1                                                     R4 25012500
*                             ADDITIONAL INFORMATION                 R4 25013000
         SPACE 1                                                     R4 25013500
         DC    X'00'               NO  CRYPTO  FIXED                 R4 25014000
         TITLE 'HASP REMOTE CONSOLE PROCESSOR - INITIALIZATION'      R4 25015900
HASPRTAM CSECT                                                       R4 25025000
HASPMCON $ENTRY BASE=BASE2,ENTRY=NO REMOTE CONSOLE PROCESSOR         R4 25025500
         LA    WG,4096/2           SET                               R4 25026000
         LA    WG,4096/2(WG,BASE2) SECOND BASE                       R4 25026500
         USING HASPMCON+4096,WG                                      R4 25027000
         SPACE 10                                                       25027100
*********************************************************************** 25027200
*                                                                     * 25027300
*        HASPMCON -- REMOTE CONSOLE PROCESSOR (RCP) ENTRY POINT       * 25027400
*                                                                     * 25027500
*********************************************************************** 25027600
         LH    R1,$BUFSIZE                    COMPUTE AND            R4 25042000
         LA    R1,BUFSTART+2047-BUFDSECT(,R1)  SAVE BUFFER           R4 25042500
         SRL   R1,11                            SIZE                 R4 25043000
         SLL   R1,11                             ROUNDED TO          R4 25043500
         STH   R1,RCPBFSZ                         NEXT 2K            R4 25044000
         EJECT                                                          25044100
*********************************************************************** 25044200
*                                                                     * 25044300
*        GET BUFFER FOR MESSAGE SPOOLING                              * 25044400
*                                                                     * 25044500
*********************************************************************** 25044600
         CLI   $SPOLMSG,0          IF NO MSG SPOOL BUFFERS,          R4 25044700
         BE    MCDCT                DON'T GET STORAGE                R4 25045000
         MVC   RCPBFRS+1(1),$SPOLMSG  SET MSG SPOOL BUFFER COUNT     R4 25046000
         GETMAIN EU,LV=3*4096,A=RCPMSB1,MF=(E,RCPGM),BNDRY=PAGE      R4 25046500
*********************************************************************** 25047000
*                                                                     * 25047500
*        FILL OUT STATIC PORTIONS OF REMOTE CONSOLE DCT               * 25048000
*                                                                     * 25048500
*********************************************************************** 25049000
MCDCT    ST    SAVE,RCPPCE         POINT TO PCE                      R4 25049500
         MVI   RCPPCE,DCTINUSE     SET IN USE FLAG                   R4 25050000
         MVI   RCPDCTT,DCTRCON     REMOTE CONSOLE DEVICE TYPE        R4 25050500
         MVC   RCPFCS,=X'0040'     SET FUNCTION CONTROL SEQUENCE     R4 25051000
         MVC   RCPDEVNM,=CL8'CONSOLE' SET NAME                       R4 25051500
         EJECT                                                          25051900
*********************************************************************** 25052000
*                                                                     * 25052500
*        MISCELLANEOUS PCE INITIALIZATION                             * 25053000
*                                                                     * 25053500
*********************************************************************** 25054000
         MVI   RCPIN+(CMBFLAG-CMB),X'FF' INDICATE AREA EMPTY         R4 25054500
         MVC   RCPDMXCN,MCSDMXCN   SET INITIAL CONCURRENT EXITS      R4 25055000
         TITLE 'HASP REMOTE CONSOLE PROCESSOR - SCAN FOR OUTPUT'     R4 25069900
*********************************************************************** 25070000
*                                                                     * 25070100
*        MAIN LOOP                                                    * 25070200
*                                                                     * 25070300
*********************************************************************** 25070400
MCL      DS    0H                                                    R4 25070500
         STCK  RCPBASET            SET BASE TIME OF THIS SCAN        R4 25070600
         BAL   LINK,MCASYNC        CLEAR READY CONCURRENT FUNCTIONS  R4 25070700
         TM    $MCONPCE,$MCONACT   ANY NEW OUTPUT ACTIVITY           R4 25075500
         BZ    MCIN                SKIP OUTPUT SCAN                  R4 25076000
*********************************************************************** 25090500
*                                                                     * 25091000
*        HANDLE OUTPUT CMB TRAFFIC                                    * 25091500
*                                                                     * 25092000
*********************************************************************** 25092500
MCS      DS    0H                                                    R4 25093000
         LA    WC,$BUSYRQ-(CMBCMB-CMB) POINT TO CMB ZERO             R4 25093500
         USING CMBDSECT,WC                                           R4 25094000
MCSN     LR    WB,WC               SAVE CURRENT POINTER              R4 25094500
         L     WC,CMBCMB           POINT TO NEXT CMB                 R4 25095000
         LTR   WC,WC               ANY THERE                         R4 25095500
         BZ    MCIN                DO INPUT IF NO MORE OUTPUT        R4 25096000
         TITLE 'HASP REMOTE CONSOLE PROCESSOR - WORKSTATION OUTPUT'  R4 25099500
*********************************************************************** 25100000
*                                                                     * 25100500
*        HANDLE OUTPUT TO REMOTES - DEQUEUE AND SET ROUTINGS          * 25101000
*                                                                     * 25101500
*********************************************************************** 25102000
         MVC   RCPROUT+1(1),CMBRMT SET REMOTE NUMBER                 R4 25112500
         LH    WA,RCPROUT          PICK UP ROUTE CODE                R4 25113000
         LTR   WA,WA               REMOTE ROUTE ZERO?          @OZ26056 25113100
         BZ    MCSRFCMB            THROW AWAY MESSAGE          @OZ26056 25113200
         CH    WA,$NUMRJE          COMPARE WITH MAXIMUM ROUTING      R4 25113500
         BH    MCSRFCMB            IGNORE MESSAGE                    R4 25114000
         BCTR  WA,0                DOWN ONE                          R4 25114500
         MH    WA,=Y(RATTLE)       MULTIPLY BY RATTLE                R4 25115000
         AL    WA,$RATABLE         POINT TO RAT ELEMENT              R4 25115500
         USING RATDSECT,WA                                           R4 25116000
         L     WF,RATRDCT          POINT TO REMOTE DCT (READER)      R4 25116500
         USING DCTDSECT,WF                                           R4 25117000
         EJECT                                                       R4 25117500
*********************************************************************** 25118000
*                                                                     * 25118500
*        DETECT NEED TO DO MESSAGE SPOOLING                           * 25119000
*          1) IF REMOTE NOT SIGNED ON                                 * 25119100
*          2) IF REMOTE CONSOLE NON-OPERATIONAL OR NON-EXISTENT       * 25119200
*          3) IF NON-MULTI-LEAVING REMOTE                             * 25119300
*          4) IF LINE DCT MSG COUNT AT MAXIMUM                        * 25119400
*          5) IF LINE DCT INACTIVE                                    * 25119500
*          6) IF LINE DCT BUFFER NOT BSC (E.G., SNA BUFFER)           * 25119600
*                                                                     * 25119700
*********************************************************************** 25120000
         L     WE,RATLDCT          POINT TO LINE DCT                 R4 25120500
         LTR   WE,WE               IS RMT SIGNED ON                  R4 25121000
         BZ    MCOSPOOL            GO SPOOL IF NOT                   R4 25121500
         CLM   WF,7,MDCTDCT+1-DCTDSECT(WE) LINE'S ACTIVE RMT   @OZ31398 25121600
         BNE   MCOSPOOL            NO,SPOOL                    @OZ31398 25121700
         TM    RATCONF,RATCONFC+RATCONFO TEST CONSOLE FLAGS          R4 25122000
         BNO   MCOSPOOL            GO SPOOL IF NOT                   R4 25122500
         TM    MDCTFMT,DCTPROG     TEST DATA FORMAT                  R4 25123000
         BZ    MCOSPOOL            GO SPOOL IF NOT MULTI-LEAVING     R4 25123500
         CLC   MDCTCMCT-DCTDSECT(,WE),$MAXCMCT TEST MESSAGE COUNT    R4 25124000
         BNL   MCOSPOOL            GO SPOOL IF AT LIMIT              R4 25124500
         TM    DCTSTAT-DCTDSECT(WE),DCTINUSE IS LINE DCT ACTIVE      R4 25125000
         BZ    MCOSPOOL            GO IF NOT                         R4 25125500
*              THIS LINE DELETED BY APAR NUMBER                @OZ27354 25125600
*              THIS LINE DELETED BY APAR NUMBER                @OZ27354 25125650
         TM    DCTFLAGS-DCTDSECT(WE),DCTRSTRT LINE RESTART...  @OZ27354 25125700
         BO    MCOSPOOL            YES, GO SPOOL               @OZ27354 25125750
         TM    MDCTSTAT-DCTDSECT(WE),DCTSOFF SIGNING OFF...    @OZ27354 25125800
         BO    MCOSPOOL            YES, GO SPOOL               @OZ27354 25125850
         L     R1,DCTBUFAD-DCTDSECT(,WE) POINT TO LINE BUFFER        R4 25126000
         TM    MSEQTYPE-BUFDSECT(R1),MBSCSEQ+MCPUSEQ IS REMOTE ACTIVER4 25126500
         BNO   MCOSPOOL            GO SPOOL IF NOT                   R4 25127000
*********************************************************************** 25127500
*                                                                     * 25128000
*        HANDLE DIRECT TRANSMISSIONS TO REMOTE WORKSTATION - OPEN     * 25128500
*                                                                     * 25129000
*********************************************************************** 25129500
         BAL   LINK,MCSORC         PREPARE CONSOLE FOR OUTPUT        R4 25132000
         DROP  WF                                                    R4 25132500
         USING DCTDSECT,WD         LAST DCT FOR REMOTE               R4 25133000
         MVI   RCPRCB,X'91'        SET FOR REMOTE OUTPUT             R4 25133500
         MVI   RCPMAXLR,120        INDICATE MAXIMUM RECORD 120       R4 25134000
         $EXTP OPEN,(R1)           OPEN CONSOLE                      R4 25134500
         EJECT                                                       R4 25135000
*********************************************************************** 25135500
*                                                                     * 25136000
*        PUT MESSAGES TO REMOTE CONSOLE                               * 25136500
*                                                                     * 25137000
*********************************************************************** 25137500
MCSTRL   LA    WF,CMBTIME          POINT TO TIME STAMP               R4 25138000
         SLR   R0,R0               SET                               R4 25138500
         IC    R0,CMBML            MESSAGE LENGTH ASSUMING TS REQ'D  R4 25139000
         TM    RATCONF,RATCONFT    DISPLAY TS                        R4 25139500
         BO    MCSTRT              SKIP NEXT IF YES                  R4 25140000
         LA    R1,CMBJOBID-CMBTIME GET DELTA                         R4 25140500
         ALR   WF,R1               ADJUST ORIGIN                     R4 25141000
         SLR   R0,R1               AND LENGTH TO DISPLAY JOB ID      R4 25141500
         TM    RATCONF,RATCONFJ    DISPLAY JOB ID                    R4 25142000
         BO    MCSTRT              SKIP NEXT IF YES                  R4 25142500
         LA    R1,CMBMID-CMBJOBID  GET DELTA                         R4 25143000
         ALR   WF,R1               ADJUST ORIGIN                     R4 25143500
         SLR   R0,R1               AND LENGTH TO DISPLAY JOB ID      R4 25144000
MCSTRT   ST    WF,RCPCCW           SET MESSAGE ADDRESS IN PARM LIST  R4 25144500
         ST    R0,RCPCCW+4         SET LENGTH IN LIST                R4 25145000
         LA    R1,RCPDCT           POINT TO DCT                      R4 25145500
         $EXTP PUT,(R1),RCPCCW     WRITE TO REMOTE CONSOLE           R4 25146000
         TM    RCPTSTAT,DCTPBUF    DID WRITE GO                      R4 25146500
         BZ    MCSTRTE             EXIT IF NOT                       R4 25147000
         MVC   CMBCMB-CMB(,WB),CMBCMB  REMOVE FROM CHAIN             R4 25147500
         $FRECMB CMB=(WC)          FREE CMB                          R4 25148000
         SLR   R1,R1               ZERO R1                           R4 25148500
         IC    R1,MDCTCMCT-DCTDSECT(,WE) INCREMENT                   R4 25149000
         LA    R1,1(,R1)           LINE DCT CONSOLE MESSAGE          R4 25149500
         STC   R1,MDCTCMCT-DCTDSECT(,WE) COUNT                       R4 25150000
         CLC   MDCTCMCT-DCTDSECT(,WE),$MAXCMCT  TEST LIMIT           R4 25150500
         BNL   MCSTRC              CLOSE THE CONSOLE IF NOT BELOW    R4 25151000
         EJECT                                                       R4 25151500
*********************************************************************** 25152000
*                                                                     * 25152500
*        SCAN FOR CMBS FOR THIS REMOTE                                * 25153000
*                                                                     * 25153500
*********************************************************************** 25154000
         BAL   LINK,MCCMBSUB       CALL CMB SCAN SUBROUTINE         R41 25161100
         LTR   WC,WC               WAS ANOTHER QUALIFYING CMB FOUND R41 25161200
         BNZ   MCSTRL              BRANCH IF YES TO PUT MSG         R41 25161300
*********************************************************************** 25161500
*                                                                     * 25162000
*        CLOSE FOR NORMAL END OF CMBS FOR A GIVEN REMOTE              * 25162500
*                                                                     * 25163000
*********************************************************************** 25163500
MCSTRC   LA    R1,RCPDCT           POINT TO DCT                      R4 25164000
         $EXTP CLOSE,(R1)          CLOSE CONSOLE                     R4 25164500
         XC    MDCTDCT+1(3),MDCTDCT+1 BREAK AWAY FROM REMOTE DCTS    R4 25165000
         B     MCS                 LOOK FOR WORK                     R4 25165500
*********************************************************************** 25166000
*                                                                     * 25166500
*        CLOSE FOR TOO MANY MESSAGES FOR REMOTE                       * 25167000
*                                                                     * 25167500
*********************************************************************** 25168000
MCSTRTE  MVC   MDCTCMCT-DCTDSECT(,WE),$MAXCMCT  SET COUNT TO LIMIT   R4 25168500
         LA    R1,RCPDCT           POINT TO DCT                      R4 25169000
         $EXTP CLOSE,(R1)          CLOSE CONSOLE                     R4 25169500
         XC    MDCTDCT+1(3),MDCTDCT+1 BREAK AWAY FROM REMOTE DCTS    R4 25170000
         DROP  WA                                                    R4 25170500
         DROP  WD                                                    R4 25171000
*********************************************************************** 25171100
*                                                                     * 25171200
*        FALL THROUGH TO MESSAGE SPOOLING ROUTINE                     * 25171300
*                                                                     * 25171400
*********************************************************************** 25171500
         TITLE 'HASP REMOTE CONSOLE PROCESSOR - MESSAGE SPOOLING'    R4 25171600
*********************************************************************** 25172000
*                                                                     * 25172500
*        REMOTE CONSOLE MESSAGE SPOOLING ROUTINE                      * 25173000
*                                                                     * 25173500
* REGISTERS UPON ENTRY                                                * 25174000
*                                                                     * 25174500
*        WC    = ADDRESS OF CONSOLE MESSAGE BUFFER                    * 25175000
*        WB    = ADDRESS OF PREVIOUS CMB ON QUEUE                     * 25175500
*        WA    = RAT ELEMENT ADDRESS                                  * 25176000
*                                                                     * 25176100
*                                                                     * 25176200
*        NOTE -- $MSPOOLQ CONTAINS THE ADDRESS OF A TABLE WITH A      * 25176300
*        3-BYTE ENTRY FOR EACH REMOTE.                                * 25176400
*              BYTE 0 - LAST BLOCK* PRINTED                           * 25176500
*              BYTE 1 - LAST BLOCK WRITTEN                            * 25176600
*              BYTE 2 - LAST BLOCK ALLOCATED                          * 25176700
*                                                                     * 25176800
*              * BLOCK - RELATIVE BLOCK NUMBER (FOR THIS REMOTE)      * 25176900
*                        TO BE ADDED TO REMOTE NO. TIMES NO. OF       * 25177000
*                        BLOCKS PER REMOTE ($SPOLMSG) TO COME UP      * 25177100
*                        WITH RELATIVE MSG SPOOL BLOCK NO.            * 25177200
*                                                                     * 25177300
*              BYTE 0 (LAST PRINTED) IS UPDATED BY HASPPRPU WHEN      * 25177400
*                   OUTPUTTING SPOOLED MESSAGES TO REMOTE.  ALSO      * 25177500
*                   UPDATED BY RCP WHEN NEXT TO BE ALLOCATED          * 25177600
*                   CATCHES UP WITH LAST PRINTED (IN WHICH CASE       * 25177700
*                   THE OLDEST BLOCK IN THE WRAP-AROUND FILE          * 25177800
*                   WILL BE OVERWRITTEN.)                             * 25177900
*                                                                     * 25178000
*              BYTE 1 (LAST WRITTEN) IS UPDATED BY RCP WHEN THE       * 25178100
*                   WRITE EXCP FOR THE BLOCK COMPLETES.               * 25178200
*                                                                     * 25178300
*              BYTE 2 (LAST ALLOCATED) IS UPDATED BY RCP WHEN A       * 25178400
*                   NEW BUFFER TO HOLD MESSAGES FOR THIS REMOTE       * 25178500
*                   BECOMES NECESSARY.                                * 25178600
*                                                                     * 25178700
*********************************************************************** 25178800
         EJECT                                                          25178900
         USING RATDSECT,WA         ADDRESSABILITY                       25179000
MCOSPOOL DS    0H                  *                                    25179100
         CLI   $SPOLMSG,0          IF NO MSG SPOOL BUFFERS,          R4 25179200
         BE    MCSRFCMB             BR TO THROW AWAY MSG             R4 25179300
*********************************************************************** 25179400
*                                                                     * 25179500
*        INVOKE MSG SPOOLING EXIT ROUTINE TO SEE IF FUNCTION          * 25179600
*        AVAILABLE -- +0 RETURN IF FUNCTION UNAVAILABLE (DOES         * 25179700
*        NOT POINT TO DUMMY EXIT) OR UNABLE TO GET EXCLUSIVE          * 25179800
*        CONTROL OF QUEUE.                                            * 25179900
*                                                                     * 25180000
*********************************************************************** 25180100
         L     R15,RCPMSXIT        POINT TO WORK ROUTINE             R4 25180200
         BALR  R10,R15             ENTER MESSAGE SPOOLING            R4 25180300
         B     MCSN                EXIT IF BUSY             + 0      R4 25180500
         ST    WB,RCPMSHDR         SAVE CMB HEADER ADDRESS  + 4      R4 25181000
         SLR   WF,WF               ZERO REGISTER                     R4 25181500
         IC    WF,RATROUTE+1       GET REMOTE OFFSET                 R4 25182000
         LR    JCT,WF              MULTIPLY IT                          25182500
         ALR   JCT,WF               BY                                  25183000
         ALR   JCT,WF                THREE TO GENERATE                  25183500
         AL    JCT,$MSPOOLQ           ADDR OF THIS RMT'S MSG QUEUE   R4 25184000
         MH    WF,RCPBFRS          THIS RMT'S REC0 = ROUTE*&SPOLMSG  R4 25184500
         DROP  WA                                                       25185000
         L     WB,RCPMSB1          POINT TO FIRST BUFFER             R4 25185500
         ST    WB,RCPMSCB          SAVE FOR I/O COMPLETION CHECKING  R4 25186000
         USING BUFDSECT,WB                                           R4 25186500
         SLR   WA,WA               GET LAST ALLOCATED                   25187000
         IC    WA,2(,JCT)           RECORD NUMBER                       25187500
MCOSNBUF DS    0H                  INITIALIZE FOR NEW SPOOL BUFFER      25188000
         ST    WB,PCEBUFAD         STORE BUFFER ADDR IN DA DCT          25188500
         LA    WA,1(,WA)           ALLOCATE RECORD                      25189000
         CH    WA,RCPBFRS          IS IT MORE THAN MAX FOR THIS RMT  R4 25189500
         BL    *+6                 SKIP IF NOT                          25190000
         SLR   WA,WA               ALLOCATE RECORD ZERO                 25190500
         STC   WA,2(,JCT)          UPDATE LAST ALLOCATED NUMBER         25191000
         CLM   WA,1,0(JCT)         LAST ALLOCATED EQUAL LAST PRINTED    25191500
         BNE   MCOS0TTR            BRANCH IF NOT                        25192000
         LA    R0,1(,WA)           INCREASE                             25192500
         CH    R0,RCPBFRS           LAST                             R4 25193000
         BL    *+6                   PRINTED                            25193500
         SLR   R0,R0                  BY                                25194000
         STC   R0,0(,JCT)              ONE                              25194500
         CLM   WA,1,1(JCT)         LAST ALLOCATED EQUAL LAST WRITTEN    25195000
         BNE   MCOS0TTR            BRANCH IF NOT                        25195500
         STC   R0,1(,JCT)          INCREASE LAST WRITTEN BY ONE         25196000
         EJECT                                                          25196400
*********************************************************************** 25196500
*                                                                     * 25196600
*        COMPUTE DISK ADDRESS OF ALLOCATED BLOCK                      * 25196700
*                                                                     * 25196800
*********************************************************************** 25196900
MCOS0TTR LA    R15,0(WA,WF)        ADD REC0 NUMBER FOR THIS REMOTE      25197000
         SLR   R14,R14             ZERO FOR DIVIDE                      25197100
         L     WE,$TEDADDR         GET NUMBER OF RECORDS/TRACK       R4 25197500
         LH    WE,TNRT-TEDDSECT(,WE) FROM FIRST TED                  R4 25198000
         DR    R14,WE              DIVIDE BY RECORDS/TRACK           R4 25198500
         L     R1,$DACKPT          ADD BASE TT                       R4 25199000
         AH    R15,2(,R1)           TO QUOTIENT                      R4 25199500
         SLL   R15,8               POSITION AS 0TT0                     25200000
         LA    R14,1(R15,R14)      ADD REMAINDER +1 GIVING 0TTR         25200500
         ST    R14,PCESEEK         STORE 0TTR IN DA DCT                 25201000
        $BFRBLD (WB)               INITIALIZE BUFFER IOB AND CCWS       25201500
         MVC   HDBKEY,=C'MSPOOL'   SET DATA KEY TO 'MSPOOL'             25202000
         LA    WD,HDBSTART         ADDRESSABILITY FOR                   25202500
         USING LRCDSECT,WD          LRC MESSAGE HEADERS                 25203000
         LH    WE,$BUFSIZE              MAXIMUM                      R4 25203500
         SH    WE,=Y(HDBSTART-BUFSTART)  DATA SPACE                  R4 25204000
MCOSPUTM DS    0H                  ATTEMPT TO PUT MESSAGE IN BUFFER R41 25204400
         L     R1,RCPMSHDR         POINT TO CMB HEADER               R4 25204500
         SLR   R15,R15             GET CMB'S                            25205500
         IC    R15,CMBML           MESSAGE LENGTH                    R4 25206000
         LA    R0,LRCTEXT-LRCDSECT(,R15) ADD LENGTH OF LRC HEADER    R4 25206500
         SR    WE,R0               ALLOCATE SPACE                    R4 25207000
         BNP   MCOSWBUF            BR IF NO ROOM FOR THIS MESSAGE       25207500
         STC   R15,LRCTLENG        STORE TEXT LENGTH IN LRC             25208000
         EX    R15,MCOSMVC         MOVE TEXT (+1) INTO BUFFER           25208500
         MVI   LRCFLAG1,0          ZERO FLAGS IN LRC                    25209000
         ALR   WD,R0               POINT TO NEXT LRC                 R4 25209500
         MVI   LRCTLENG,X'FF'      SET BUFFER TERMINATOR                25210000
         MVC   CMBCMB-CMB(,R1),CMBCMB REMOVE FROM QUEUE              R4 25210500
        $FRECMB CMB=(WC)           FREE THE CMB                         25211000
         LR    R15,WB              SAVE BUFFER ADDRESS              R41 25218100
         L     WB,RCPMSHDR         LOAD CMB HEADER ADDRESS          R41 25218200
         BAL   LINK,MCCMBSUB       CALL CMB SCAN SUBROUTINE         R41 25218300
         ST    WB,RCPMSHDR         SAVE CMB HEADER ADDRESS          R41 25218400
         LR    WB,R15              RESET BUFFER ADDRESS             R41 25218500
         LTR   WC,WC               WAS ANOTHER QUALIFYING CMB FOUND R41 25218600
         BNZ   MCOSPUTM            YES--GO TO PUT MSG IN BUFFER     R41 25218700
         EJECT                                                          25219300
*********************************************************************** 25219400
*                                                                     * 25219500
*        WRITE BUFFER TO MESSAGE SPOOL FILE - UP TO THREE 4096        * 25219600
*        BYTE BLOCKS MAY BE FILLED AND WRITTEN (ASSUMING THERE        * 25219700
*        ARE THAT MANY MESSAGES QUEUED UP FOR THAT REMOTE) AT         * 25219800
*        A TIME.  BEFORE RETURNING TO MAINLINE CODE, THE MSG          * 25219900
*        SPOOLING EXIT ROUTINE ADDRESS (RCPMSXIT) IS SET UP TO        * 25220000
*        POINT TO ROUTINE WHICH CHECKS FOR MESSAGE SPOOLING           * 25220100
*        WRITE COMPLETIONS (WHEN ENTERED BY 'MCASYNC' AT BEGIN-       * 25220200
*        ING OF MAIN LOOP -- WHEN CALLED AT BEGINNING OF MSG          * 25220300
*        SPOOLING ROUTINE, IT MAKES +0 RETURN (BUSY)).                * 25220400
*                                                                     * 25220500
*********************************************************************** 25220600
MCOSWBUF DS    0H                  WRITE BUFFER TO SPOOL SPACE          25220700
         MVI   PCEDEVTP,PCEDAWR    SET TO WRITE                      R4 25220800
         LA    R1,PCEDADCT         POINT TO DA DCT                      25220900
        $EXCP  (R1)                START WRITE TO DISK                  25221000
         AH    WB,RCPBFSZ          POINT TO NEXT BUFFER              R4 25221500
         LR    R0,WB               COMPUTE AMOUNT OF                    25222000
         SL    R0,RCPMSB1           TOTAL BUFFER SPACE USED          R4 25222500
         CH    R0,=Y(3*4096)       COMPARE WITH MAX BUFFER SPACE        25223000
         BNL   MCOSTIOC            BRANCH IF ALL BUFFERS USED           25223500
         LTR   WC,WC               HAVE CMBS BEEN EXHAUSTED             25224000
         BNZ   MCOSNBUF            BRANCH IF NOT TO USE NEW BUFFER      25224500
MCOSTIOC ST    WB,RCPMSLBW         SAVE ADDRESS BEYOND LAST WRITTEN  R4 25225500
         LA    R15,MCOSXIT2        POINT TO EXIT ROUTINE             R4 25226000
         ST    R15,RCPMSXIT        SET EXIT ADDRESS                  R4 25226500
         ST    JCT,RCPMSCTL        SAVE LOCATION OF QUEUE CONTROL    R4 25227000
         STC   WA,RCPMSRN          SAVE LAST WRITTEN/ALLOCATED RECNO R4 25227500
         B     MCS                 CONTINUE PROCESSING               R4 25228000
         SPACE 10                                                   R41 25228200
MCOSMVC  MVC   LRCTEXT(*-*),CMBMSG *** EXECUTE ONLY ***             R41 25228300
         DROP  WD                                                   R41 25228400
         EJECT                                                      R41 25228500
*********************************************************************** 25228600
*                                                                     * 25228700
*        MCCMBSUB - CMB SCAN SUBROUTINE                               * 25228800
*                                                                     * 25228900
*                   THIS IS AN INTERNAL SUBROUTINE CALLED TO SCAN     * 25229000
*              THE REMAINING CMBS, LOOKING FOR ANOTHER CMB DESTINED   * 25229100
*              FOR THE SAME REMOTE.  IT SKIPS OVER NON-QUALIFYING     * 25229200
*              CMBS RETURNING TO CALLER WITH A HIT OR AT END OF       * 25229300
*              CMB CHAIN.                                             * 25229400
*                                                                     * 25229500
*        INPUT REGS:                                                  * 25229600
*              WB - ADDRESS OF CMB HEADER                             * 25229700
*                                                                     * 25229800
*        OUTPUT REGS:                                                 * 25229900
*              WB - UPDATED ADDRESS OF CMB HEADER                     * 25230000
*              WC - ADDRESS OF QUALIFYING CMB (IF ANY)                * 25230100
*                 - ZERO (IF NO QUALIFYING CMB)                       * 25230200
*                                                                     * 25230300
*        REGS SAVED: R14 THRU WD (WB AND WC MAY BE CHANGED)           * 25230400
*                                                                     * 25230500
*********************************************************************** 25230600
MCCMBSUB STM   LINK,WD,RCPREGSV    SAVE REGS                        R41 25230700
         LR    WC,WB               POINT TO CMB HEADER              R41 25230800
MCCLOOP  LR    WD,WC               UPDATE PREVIOUS CMB POINTER      R41 25230900
         L     WC,CMBCMB           POINT TO NEXT CMB                R41 25231000
         LTR   WC,WC               END OF CMB CHAIN                 R41 25231100
         BZ    MCCRTN              YES--RETURN                      R41 25231200
         IC    R2,CMBRMT           PICK UP REMOTE NUMBER            R41 25232100
         CLM   R2,1,RCPROUT+1      DO CMB REMOTE NUMBERS MATCH      R41 25233600
         BNE   MCCLOOP             BYPASS IF NOT                    R41 25233700
MCCRTN   LR    WB,WD               SET WB = CMB HEADER ADDRESS      R41 25233800
         STM   WB,WC,RCPREGSV+20   UPDATE WB AND WC IN SAVE AREA    R41 25233900
         LM    LINK,WD,RCPREGSV    RESTORE REGS                     R41 25234000
         BR    LINK                RETURN TO CALLER                 R41 25234100
         EJECT                                                       R4 25235000
*********************************************************************** 25235100
*                                                                     * 25235200
*        CHECK MSG SPOOLING WRITE COMPLETION(S) EXIT ROUTINE          * 25235300
*                                                                     * 25235400
*              THIS EXIT ROUTINE WILL BE ENTERED REPEATEDLY           * 25235500
*        VIA 'MCASYNC' AT BEGINNING OF RCP MAIN LOOP UNTIL            * 25235600
*        ALL OUTSTANDING MESSAGE SPOOLING WRITES ARE COM-             * 25235700
*        PLETE (UP TO THREE MAY BE OUTSTANDING AT ONCE).  AT          * 25235800
*        THAT TIME, A PAGE RELEASE ON THE BUFFER SPACE USED           * 25235900
*        WILL BE DONE, THE EXIT ROUTINE ADDRESS (RCPMSXIT)            * 25236000
*        WILL BE CHANGED TO POINT TO THE NEXT EXIT AND AN             * 25236100
*        IMMEDIATE BRANCH INTO THAT EXIT+4 IS TAKEN.                  * 25236200
*                                                                     * 25236300
*********************************************************************** 25236400
MCOSXIT2 B     0(,R10)             PREVENT NEW USE OF FUNCTION       R4 25236500
         L     WB,RCPMSCB          POINT TO BUFFER TO CHECK          R4 25236600
MCSMSCK  TM    BUFECBCC,X'7F'      I/O COMPLETE                      R4 25236700
         BZR   R10                 RETURN TO EXIT REQUESTOR          R4 25236800
MCOSTNXT AH    WB,RCPBFSZ          POINT TO NEXT BUFFER              R4 25237300
         ST    WB,RCPMSCB          SAVE IN CASE NOT COMPLETE         R4 25237400
         C     WB,RCPMSLBW         HAVE ALL BUFFERS BEEN TESTED      R4 25237500
         BL    MCSMSCK             PREPARE TO CHECK MORE             R4 25237600
         LA    R0,2048(,WB)        INCREASE BUFFER POINTER              25237700
         N     R0,=F'-4096'         TO NEXT PAGE BOUNDARY               25238000
         L     R1,RCPMSB1          POINT TO START OF BUFFER SPACE    R4 25238500
         SLR   R0,R1               COMPUTE LENGTH OF PAGES USED         25239000
        $PGSRVC RLSE,(R1),(R0)     RELEASE USED BUFFER PAGES         R4 25239500
         LA    R15,MCOSXIT3        POINT TO EXIT                     R4 25240000
         ST    R15,RCPMSXIT        SET EXIT                          R4 25240500
         B     MCOSXT3A            SKIP NSI                          R4 25241000
         EJECT                                                       R4 25241500
*********************************************************************** 25242000
*                                                                     * 25242500
*        UPDATE MESSAGE SPOOL QUEUES (EXIT)                           * 25243000
*                                                                     * 25243100
*              THIS EXIT ROUTINE IS ENTERED DIRECTLY FROM             * 25243200
*        'MCOSXIT2' AND THEN (ONLY IF UNABLE TO GET CONTROL           * 25243300
*        OF JOB QUEUE) REPEATEDLY VIA 'MCASYNC' UNTIL ABLE            * 25243400
*        TO GET CONTROL OF JOB QUEUE.  IT UPDATES BYTE 1              * 25243500
*        (LAST BLOCK WRITTEN) OF THE APPROPRIATE 3-BYTE               * 25243600
*        REMOTE ENTRY IN THE $MSPOOLQ TABLE TO AGREE WITH             * 25243700
*        BYTE 2 (LAST BLOCK ALLOCATED).  THE LOGIC IS COMPLI-         * 25243800
*        CATED BECAUSE OF SHARED SPOOL -- NOTE THAT BYTE 1            * 25243900
*        MIGHT ALREADY HAVE BEEN UPDATED BY ANOTHER MEMBER            * 25244000
*        OF THE SHARED SPOOL WHICH IS ALSO WRITING TO THE             * 25244100
*        MESSAGE SPOOLING FILE.  UPON COMPLETION OF THIS              * 25244200
*        EXIT ROUTINE THE ADDRESS OF THE DUMMY MESSAGE                * 25244300
*        SPOOLING EXIT ROUTINE (MCOSXIT1) IS STORED IN                * 25244400
*        RCPMSXIT TO ENABLE USE OF THE MESSAGE SPOOLING               * 25244500
*        FUNCTION.                                                    * 25244600
*                                                                     * 25244700
*********************************************************************** 25244800
MCOSXIT3 B     0(,R10)             REJECT NEW USE OF FUNCTION        R4 25244900
MCOSXT3A OI    RCPWF,RCPWFQX       ASSUME WE MUST WAIT               R4 25245000
         $QSUSE TYPE=TEST          DO WE HAVE JOB QUEUE              R4 25245500
         BNZR  R10                 RETURN                            R4 25246000
         NI    RCPWF,255-RCPWFQX   INDICATE NO NEED TO WAIT          R4 25246500
         L     WB,RCPMSCTL         POINT TO REMOTES QUEUE CONTROL    R4 25247000
         IC    WA,RCPMSRN          PICK UP LAST RECORD NUMBER FOR SYSR4 25247500
         CLC   1(1,WB),2(WB)       COMPARE LAST WRITTEN - ALLOCATED  R4 25248000
         BE    MCOSACMB            BRANCH IF EQUAL - NO POST            25248500
         BL    MCOSAND             BRANCH IF LAST WRITTEN IS LOW        25249000
         CLM   WA,1,1(WB)          IS NEW WRITTEN GREATER THAN OLD   R4 25249500
         BH    MCOSPOST            BRANCH IF YES - POST                 25250000
         B     MCOSOR              GO TEST AGAINST LAST ALLOCATED       25250500
MCOSAND  CLM   WA,1,1(WB)          IS NEW WRITTEN GREATER THAN OLD   R4 25251000
         BNH   MCOSACMB            BRANCH IF NOT - NO POST              25251500
MCOSOR   CLM   WA,1,2(WB)          IS NEW WRITTEN LE LAST ALLOCATED  R4 25252000
         BH    MCOSACMB            BRANCH IF NOT - NO POST              25252500
MCOSPOST STC   WA,1(,WB)           QUEUE COMPLETED WRITES FOR PRINT  R4 25253000
         NI    MHASPECF+$EWBJOT,255-$EWFJOT  TELL LINE MANAGER          25253500
         OI    $AQSE,QSEPMLM       INDICATE CROSS-SYSTEM $POST          25254000
MCOSACMB LA    R15,MCOSXIT1        POINT TO FIRST EXIT               R4 25254500
         ST    R15,RCPMSXIT        SET EXIT                          R4 25255000
         OI    $MCONPCE,$MCONACT   SHOW OUTPUT ACTIVITY REQUIRED     R4 25255500
         BR    R10                 EXIT                              R4 25256000
         EJECT                                                          25256400
*********************************************************************** 25256500
*                                                                     * 25257000
*        DUMMY EXIT ROUTINE -- USED FOR BOTH MESSAGE SPOOLING         * 25257500
*                              AND SPOOL OUTPUT FUNCTIONS             * 25257600
*                                                                     * 25257700
*              THIS ROUTINE WHEN ENTERED VIA 'MCASYNC' (AT            * 25257800
*        MCOSXIT1+4) RETURNS IMMEDIATELY.  WHEN ENTERED FROM          * 25257900
*        BEGINNING OF MESSAGE SPOOLING ROUTINE (MCOSPOOL) OR          * 25258000
*        SPOOL OUTPUT ROUTINE (MCSSOA), IT MAKES A +4 RETURN          * 25258100
*        (UNLESS UNABLE TO OBTAIN EXCLUSIVE CONTROL OF THE JOB        * 25258200
*        QUEUE) INDICATING THAT THE MESSAGE SPOOLING FUNC-            * 25258300
*        TION (OR SPOOL OUTPUT FUNCTION) IS AVAILABLE FOR USE.        * 25258400
*                                                                     * 25258500
*********************************************************************** 25258600
MCOSXIT1 B     SKIP1510            SKIP NEXT                         R4 25259000
         BR    R10                 RETURN TO ASYNRHRONOUS EXIT TESTERR4 25259500
SKIP1510 OI    RCPWF,RCPWFQO       ASSUME WE MUST WAIT               R4 25260000
         $QSUSE TYPE=TEST          WE HAVE JOB QUEUE                 R4 25260500
         BNZR  R10                 ERROR EXIT IF NOT                 R4 25261000
         NI    RCPWF,255-RCPWFQO   INDICATE NO NEED TO WAIT          R4 25261500
         B     4(,R10)             OK EXIT IF YES                    R4 25262000
         DROP  WB                                                    R4 25262500
         EJECT                                                       R4 25469000
*********************************************************************** 25469500
*                                                                     * 25470000
*        FREE CMB                                                     * 25470500
*                                                                     * 25471000
*********************************************************************** 25471500
MCSRFCMB MVC   CMBCMB-CMB(,WB),CMBCMB REMOVE CMB FROM QUEUE          R4 25474000
MCSFCMB  $FRECMB CMB=(WC)          FREE CMB                          R4 25474500
         LR    WC,WB               BACK UP TO PREVIOUS CMB           R4 25475000
         B     MCSN                LOOK AT NEXT CMB                  R4 25475500
         SPACE 10                                                       25476000
*********************************************************************** 25476100
*                                                                     * 25476200
*        REMOTE CONSOLE PROCESSOR INPUT PROCESSING ROUTINES           * 25476300
*                                                                     * 25476400
*********************************************************************** 25476500
MCIN     DS    0H                                                    R4 25476600
         NI    $MCONPCE,255-($MCONACT+$MCONWAT) RESET STATUS FLAGS   R4 25477000
         TITLE 'HASP REMOTE CONSOLE PROCESSOR - RECEIVE TRANSMISSIONS'  25737400
*********************************************************************** 25737500
*                                                                     * 25738000
*        HANDLE COMMAND AND MESSAGE INPUT FROM LINES                  * 25738500
*                                                                     * 25739000
*********************************************************************** 25739500
         USING BUFDSECT,WA                                           R4 25740000
         USING DCTDSECT,WE                                           R4 25740500
MCINL    LA    WC,RCPIN            POINT TO FAKE CMB                 R4 25741000
         CLI   CMBFLAG,X'FF'       IS THERE A CURRENT RECORD         R4 25743000
         BNE   MCINP               PUT MESSAGE INTO PROPER PLACE     R4 25743500
         L     WA,$MCONMSG         POINT TO FIRST INPUT BUFFER       R4 25744000
         LTR   WA,WA               EMPTY                             R4 25744500
         BZ    MCINN               NO MORE INPUT                     R4 25745300
         LA    WB,$MCONMSG         POINT TO QUEUE HEAD               R4 25745500
MCIL     L     WE,BUFDCT           POINT TO LINE DCT                 R4 25746000
         LA    WE,0(,WE)           PURIFY ADDRESS                    R4 25746500
         LA    R1,TPBLCCAD         POINT TO BSC CHAIN FIELD          R4 25747000
         TM    MDCTTYPE,DCTPSNA    TEST FOR SNA RPL                  R4 25747500
         BZ    MCIL1               BR IF NOT                        R41 25748000
         USING RPLDSECT,WA         USE TEMPORARY RPL ADDRESSABILITY  R4 25748500
         LA    R1,RPLNEXT          USE RPL CHAIN FIELD               R4 25749000
MCIL1    DS    0H                                                   R41 25749200
         EJECT                                                      R41 25764900
*********************************************************************** 25765000
*                                                                     * 25765500
*        INITIALIZE REMOTE CONSOLE DCT FOR INPUT                      * 25766000
*                                                                     * 25767000
*********************************************************************** 25767100
MCIR     MVC   0(4,WB),0(R1)       REMOVE FROM QUEUE                 R4 25769000
         TM    DCTFLAGS,DCTRSTRT   IS THIS LINE TO GO DOWN           R4 25771000
         BO    MCITRM              DISCARD IF YES                    R4 25771500
         LA    R1,RCPDCT           GET ADDR OF CONSOLE DCT           R4 25772000
         ST    WE,RCPDCTL          SET LINE DCT ADDRESS ...         R41 25772200
         ST    WA,RCPDCTBF          BUFFER ADDRESS AND ...          R41 25772300
         MVI   RCPTSTAT,0            AND STATUS FLAGS               R41 25772400
         TM    MDCTTYPE,DCTPSNA    IS THIS A VTAM LINE DCT           R4 25772500
         BNO   MCIML               CHECK FOR MULTI-LEAVING IF NOT    R4 25773000
         OC    RCPFMT(1),RPLFMTSV  RETRIEVE COMPRESSION INDICATOR    R4 25773500
         MVI   RCPTTYPE,DCTPLU1    MARK SNA TYPE CONSOLE DCT         R4 25774000
         MVI   RCPTSEL,FMHCNSLE    SET MEDIUM TO INBOUND CONSLE     R41 25774200
         L     R15,RPLICE          GET ADDRESS OF ICE                R4 25774500
         USING ICEDSECT,R15        TEMPORARY ICE ADDRESSABILITY      R4 25775000
         ST    R15,RCPICE          CHAIN ICE TO DCT                  R4 25775500
         ST    R1,ICERDCT           AND  DCT TO ICE                  R4 25776000
         DROP  R15,WA              RELEASE TEMPORARY BASE REGS       R4 25776500
         USING BUFDSECT,WA         ESTABLISH BUFFER ADDRESSABILITY   R4 25777000
         B     MCICO               CONTINUE OPEN ON COMMON FIELDS    R4 25777500
MCIML    TM    MSEQTYPE,MBSCSEQ+MCPUSEQ MULTI-LEAVING SEQUENCE       R4 25778000
         BNO   MCITRM              DISCARD IF NOT                    R4 25778500
         MVI   RCPTTYPE,DCTPCPU    BSC CPU TYPE CONSOLE DCT          R4 25779000
         MVI   RCPRCB,X'92'        SET REMOTE CONSOLE INPUT RCB      R4 25779500
         DROP  WA                                                    R4 25783500
         EJECT                                                      R41 25783900
*********************************************************************** 25784000
*                                                                     * 25784500
*        READ RECORD FROM REMOTE WORKSTATION                          * 25785000
*                                                                     * 25785100
*              THIS LOGIC IS COMPLICATED BY THE FACT THAT IF          * 25785200
*        THIS IS A BSC BUFFER RTAM AUTOMATICALLY GIVES US AN          * 25785300
*        EOF RETURN AND IF THIS RECORD IS IMMEDIATELY FOLLOWED        * 25785400
*        IN THE BUFFER BY ANOTHER RCP RECORD IT ALSO REQUEUES         * 25785500
*        THE BUFFER ON THE $MCONMSG QUEUE.  THIS IS NOT DONE BY       * 25785600
*        THE RTAM SNA GET ROUTINE.  NOTE THAT IN THE EOF ROU-         * 25785700
*        TINE (MCINCLOS) FOR A BSC LINE WE IMMEDIATELY BRANCH         * 25785800
*        BACK TO 'MCINBEOF' (AND EVENTUALLY TO 'MCINP') TO PRO-       * 25785900
*        CESS THE RECORD.  NOTE ALSO THAT IF AN SNA LINE, BE-         * 25786000
*        FORE BRANCHING TO 'MCINP' TO PROCESS THE RECORD, WE          * 25786100
*        EITHER REQUEUE THE BUFFER ON THE $MCONMSG QUEUE (IF          * 25786200
*        THIS RECORD FOLLOWED BY ANOTHER) OR ISSUE A $EXTP            * 25786300
*        CLOSE (IF LAST RECORD IN THE BUFFER).                        * 25786400
*                                                                     * 25786500
*********************************************************************** 25786600
MCICO    MVI   RCPMAXLR,L'CMBMSG   SET TO READ MAX CMD LENGTH       R41 25786700
MCINGET  LA    R1,RCPDCT           INSURE DCT ADDRESSABILITY        R41 25786800
         LA    WC,RCPIN            RELOAD PHONY CMB POINT           R41 25787000
         LA    R0,CMBMSG           POINT TO INPUT AREA               R4 25787500
         MVI   CMBMSG,C' '         MOVE BLANK TO CMBMSG        @OZ27001 25787600
         MVC   CMBMSG+1(L'CMBMSG-1),CMBMSG PROPAGATE BLKS      @OZ27001 25787700
         $EXTP GET,(R1),(R0)       READ COMMAND                      R4 25788000
         BM    MCINCLOS            CLOSE IF EOF                     R41 25788500
MCINBEOF LA    R1,CMBMSG+L'CMBMSG-1 POINT OT LAST CHARACTER         R41 25789000
         LA    R0,L'CMBMSG         GET MAX LENGTH                    R4 25789500
MCINTB   CLI   0(R1),C' '          BLANK                             R4 25790000
         BNE   MCINEB              EXIT IF NOT                       R4 25790500
         BCTR  R1,0                BACK UP ONE                       R4 25791000
         BCT   R0,MCINTB           TEST FOR BLANK                    R4 25791500
         TM    MDCTTYPE,DCTPSNA    CHECK DEVICE TYPE                R41 25792000
         BO    MCINGET             BR IF SNA, TRY ANOTHER GET       R41 25792100
         B     MCIN                GO TRY NEXT BUFFER               R41 25792200
MCINEB   MVC   CMBFLAG(L'CMBFLAG+L'CMBLEVEL+L'CMBTYPE),MCINWIC SET HDR  25792500
         STC   R0,CMBML            SET LENGTH OF MESSAGE             R4 25793000
         MVC   CMBMSG(1),$RCOMCHR  SET COMMAND ID CHARACTER          R4 25793500
         MVC   CMBTO,$SYSID        SET OUR SYSTEM IDENTIFICATION     R4 25794000
         MVC   CMBFM,CMBTO         MAKE TO AND FROM THE SAME         R4 25794500
         L     R1,MDCTRAT          POINT TO RAT                      R4 25795000
         MVC   CMBRMT,RATCONRT+1-RATDSECT(R1) SET REMOTE NUMBER      R4 25795500
         XC    CMBOUT+1(L'CMBOUT-1),CMBOUT+1 ZERO REST               R4 25796000
         TM    MDCTTYPE,DCTPSNA    TEST DEVICE TYPE                 R41 25796500
         BNO   MCINP               BR IF NOT SNA -PROCESS CMB       R41 25797500
         L     R1,RPLRLEN-RPLDSECT(,WA)   GET RPL DATA LENGTH       R41 25798000
         LTR   R1,R1               CHECK FOR ADDITIONAL DATA        R41 25798500
         BNZ   MCISNREQ            BR IF MORE TO REQUEUE RPL        R41 25799000
         OI    RCPTSTAT,DCTEOF     SHOW CLOSE EOF WAS REACHED       R41 25799500
         EJECT                                                          25801900
*********************************************************************** 25802000
*                                                                     * 25802500
*        CLOSE REMOTE CONSOLE AND QUEUE MESSAGE                       * 25803000
*                                                                     * 25803500
*********************************************************************** 25804000
         LA    R1,RCPDCT           RELOAD CONSOLE DCT ADDRESS       R41 25804100
         $EXTP CLOSE,(R1)         CLOSE CONSOLE                     R41 25804200
         B     MCINP               PROCESS CURRENT CMB              R41 25804300
         SPACE 5                                                        25804400
*********************************************************************** 25804500
*                                                                     * 25804600
*        CLOSE REMOTE CONSOLE - GET NEXT QUEUED BUFFER                * 25804700
*                                                                     * 25804800
*********************************************************************** 25804900
MCINCLOS TM    MDCTTYPE,DCTPSNA    TEST DEVICE TYPE                 R41 25805000
         BZ    MCINBEOF            IGNORE EOF IF NOT SNA            R41 25805500
         $EXTP CLOSE,(R1)          CLOSE REMOTE CONSOLE             R41 25805700
         B     MCIN                GO PROCESS MORE INPUT            R41 25806000
         SPACE 5                                                        25806100
*********************************************************************** 25806200
*                                                                     * 25806300
*        RE-QUEUE INCOMPLETE SNA BUFFERS                              * 25806400
*                                                                     * 25806500
*********************************************************************** 25806600
MCISNREQ MVC   RPLNEXT-RPLDSECT(4,WA),0(WB)  RE-QUEUE ...           R41 25806700
         ST    WA,0(,WB)                      INCOMPLETE RPL        R41 25806800
         DROP  WE                  RELEASE DCT ADDRESSABILTY        R41 25806900
*********************************************************************** 25807500
*                                                                     * 25808000
*        QUEUE TO COMMAND PROCESSOR                                   * 25808500
*                                                                     * 25809000
*********************************************************************** 25809500
MCINP    LA    WC,RCPINA           POINT TO FLAGS OF DUMMY CMB       R4 25810000
         BAL   R10,MCIPC           PUT COMMAND ON QUEUE              R4 25810500
         B     MCTEMW              WAIT IF NO GO            + 0      R4 25811000
MCITRM   MVI   CMBFLAG-CMB+RCPIN,X'FF' FREE AREA            + 4      R4 25811500
         B     MCIN                GET MORE INPUT                   R41 25812000
MCINWIC  DC    AL1(CMBFLAGC+CMBFLAGW+CMBFLAGR,$ALWAYS+$HI,0)         R4 25812500
MCINN    DS    0H                                                    R4 25813000
         EJECT                                                       R4 25962000
*********************************************************************** 25962500
*                                                                     * 25963000
*        CHECK FOR OUTPUT ACTIVITY                                    * 25963500
*                                                                     * 25963600
*              $MCONACT FLAG IS TURNED ON WHEN OUTPUT IS QUEUED       * 25963700
*        TO RCP VIA $BUSYRQ OR WHEN ONE OF THE RCP OUTPUT FUNC-       * 25963800
*        TIONS PREVIOUSLY UNAVAILABLE BECOMES AVAILABLE.  IF ON       * 25963900
*        NOW, BRANCH TO BEGINNING OF MAIN LOOP (MCL).                 * 25964000
*                                                                     * 25964100
*********************************************************************** 25964500
MCTEMW   DS    0H                  CHECK FOR OUTPUT ACTIVITY         R4 25964600
         TM    $MCONPCE,$MCONACT   IS THERE ANY ACTIVITY             R4 25965000
         BO    MCL                 LOOP IF YES                       R4 25965500
         TM    RCPWF,RCPWFQX+RCPWFQO NEED JOB QUEUE                  R4 25966500
         BNZ   MCWCKPTW            WAIT ON CHECKPOINT PROCESSOR      R4 25967000
         TM    RCPWF,RCPWFCMB      DO WE NEED CMB                    R4 25967500
         BZ    MCWWORK             WAIT ON WORK IF NOT               R4 25968000
         $WAIT CMB,INHIBIT=NO      WAIT ON CMB                       R4 25968500
         B     MCWTEST             TEST CONDITIONS                   R4 25969000
MCWCKPTW MVI   $MCONPCE,$MCONWAT   SET TO HURRY CHECKPOINT UP        R4 25969500
MCWWORK  $WAIT WORK,INHIBIT=NO     WAIT FOR WORK                     R4 25970000
MCWTEST  DS    0H                                                    R4 25970500
MCWTJQ   TM    RCPWF,RCPWFQO       OUTPUT WAITING ON JOB QUEUE       R4 25994500
         BZ    MCL                 LOOP                              R4 25995000
         $QSUSE TYPE=TEST          WE HAVE QUEUE NOW                 R4 25995500
         BNZ   MCL                 LOOP                              R4 25996000
         OI    $MCONPCE,$MCONACT   SHOW OUTPUT ACTIVITY              R4 25996500
         B     MCL                 LOOP                              R4 25997000
         EJECT                                                       R4 26045000
*********************************************************************** 26045500
*                                                                     * 26046000
*        SUBROUTINE TO QUEUE COMMANDS TO COMMAND PROCESSOR            * 26046500
*                                                                     * 26047000
*        R0    = WORK                                                 * 26047500
*        R1    = WORK                                                 * 26048000
*        R2    = WORK                                                 * 26048200
*        WB    = WORK                                                 * 26048500
*        WC    = CMBFLAGS BYTE OF INPUT RECORD, WORK                  * 26049000
*        R10   = LINK                                                 * 26049500
*        LINK  = WORK                                                 * 26050000
*        R15   = WORK                                                 * 26050500
*                                                                     * 26054800
*********************************************************************** 26054900
MCIPC    OC    CMBTYPE-(CMBFLAG-CMB)(L'CMBTYPE+L'CMBML),CMBTYPE-(CMBFLAC26055000
               G-CMB)              VALIDATE LENGTH                   R4 26055500
         BZ    4(,R10)             RETURN IF ERROR                   R4 26056000
         OI    RCPWF,RCPWFCMB      ASSUME WAIT ON CMB                R4 26056500
         $GETCMB NUMCMB=2,COUNT=1  GET TWO CMBS                      R4 26057000
         BZR   R10                 RETURN IF NO CMBS                 R4 26057500
         NI    RCPWF,255-RCPWFCMB  INDICATE NO NEED TO WAIT          R4 26058000
         SLR   R15,R15             ZERO WORK                         R4 26058500
         IC    R15,CMBML-(CMBFLAG-CMB) PICK UP LENGTH OF TEXT        R4 26059000
         LA    R15,CMBMSG-CMBFLAG-1(,R15) MACHINE LENGTH OF CMB      R4 26059500
         MVC   CMBMSG+1-CMB(8,R1),=CL8' ' INSURE 9 TEXT CHARACTERS   R4 26060000
         EX    R15,MCIPDMVX        MOVE HEADER AND TEXT              R4 26060500
         LR    WC,R1               POINT TO CMB 1                    R4 26061000
         L     WB,CMBCMB           POINT TO CMB 2                    R4 26061500
         CLI   CMBTYPE,0           THIS FORMATTED CMB                R4 26062000
         BNZ   MCIPDSI             SKIP REPEAT                       R4 26062500
MCMSG    EQU   CMBJOBN-CMB         DEFINE START OF REPEAT MESSAGE    R4 26063000
         MVC   MCMSG(2,WB),MCMID   SET MESSAGE ID                    R4 26063500
         MVC   MCMSG+2(5,WB),=C'R    ' SET REMOTE ID MASK            R4 26064000
         IC    R15,CMBRMT          PICK UP REMOTE NUMBER (RESPONSE)  R4 26064500
MCIPDC   CVD   R15,RCPCCW          CONVERT TO                        R4 26068000
         UNPK  MCMSG+3(3,WB),RCPCCW+6(2) EBCDIC                      R4 26068500
         OI    MCMSG+5(WB),C'0'    FORCE SIGN                        R4 26069000
MCIPDS   CLI   MCMSG+3(WB),C'0'    FIRST CHARACTER ZERO              R4 26069500
         BNE   MCIPDM              MOVE TEXT PART                    R4 26070000
         MVC   MCMSG+3(3,WB),MCMSG+4(WB) SHIFT                       R4 26070500
         B     MCIPDS              LOOP                              R4 26071000
MCIPDM   IC    R15,CMBML           PICK UP LENGTH OF MESSAGE         R4 26074000
         BCTR  R15,0               GET MACHINE LENGTH                R4 26074500
         LA    R0,CMBL-(MCMSG+7)-1 GET MAX MACHINE LENGTH            R4 26075000
         CR    R15,R0              TOO BIG                           R4 26075500
         BNH   SKIP1660            SKIP                              R4 26076000
         LR    R15,R0              SET MAX                           R4 26076500
SKIP1660 EX    R15,MCIPDMVC        MOVE TEXT                         R4 26077000
         LA    R0,8(,R15)          UP TO FULL MESSAGE LENGTH         R4 26077500
         $WTO  (WB),(R0),JOB=NO,CMB=YES, DISPLAY COMMAND             R4C26078000
               ROUTE=$LOG+$TP,CLASS=$NORMAL,PRI=$HI                  R4 26078500
MCIPDQ   L     R15,$SSVT           POINT TO SSVT                     R4 26095000
         USING SSVT,R15                                              R4 26096000
         L     R0,$SVCOMMQ         PICK UP QUEUE HEAD                R4 26096500
MCIPDQA  ST    R0,CMBCMB           PUT OLD BEHIND                    R4 26097000
         CS    R0,WC,$SVCOMMQ      QUEUE THE COMMAND                 R4 26097500
         BNZ   MCIPDQA             LOOP IF NOT QUEUED                R4 26098000
         DROP  R15                                                   R4 26098500
         L     R1,$COMMPCE         POINT TO COMMAND PROCESSOR PCE    R4 26099000
         $POST (R1),WORK           POST IT                           R4 26099500
         B     4(,R10)             RETURN                            R4 26100000
MCIPDMVC MVC   MCMSG+7(*-*,WB),CMBMSG *** EXECUTED INSTRUCTION ***   R4 26100500
MCIPDMVX MVC   CMBFLAG-CMB(*-*,R1),CMBFLAG-(CMBFLAG-CMB) * EXECUTED  R4 26101000
MCMID    $MSG  249                 REMOTE COMMAND MESSAGE IDENTIFIER R4 26103000
MCIPDSI  $FRECMB CMB=(WB)          FREE SECOND CMB                   R4 26103500
         B     MCIPDQ              QUEUE COMMAND                     R4 26106000
         EJECT                                                       R4 26143500
*********************************************************************** 26144000
*                                                                     * 26144500
*        MCSORC - REMOTE CONSOLE DCT BUILDER                          * 26145000
*                                                                     * 26145500
*              THIS SUBROUTINE IS CALLED BY THE REMOTE CONSOLE        * 26146000
*        PROCESSOR, BEFORE TRANSMITTING OVER A LINE, TO BUILD         * 26146500
*        A REMOTE CONSOLE DCT IN THE RCP PCE WORK AREA.  ON           * 26147000
*        ENTRY, R7(WF) POINTS TO THE FIRST REMOTE DCT CHAINED         * 26147100
*        OFF THE LINE DCT.  ON EXIT, R7 IS ZERO AND R5(WD)            * 26147200
*        POINTS TO THE LAST REMOTE DCT CHAINED OFF OF THE LINE        * 26147300
*        DCT WHICH NOW POINTS TO THE NEWLY-BUILT REMOTE CONSOLE       * 26147400
*        DCT (ALSO POINTED TO BY R1).  R14(LINK) IS USED FOR          * 26147500
*        LINKAGE.                                                     * 26147600
*                                                                     * 26147700
*********************************************************************** 26148000
MCSORC   DS    0H                                                    R4 26148500
         USING DCTDSECT,WF                                           R4 26149000
         XC    RCPDCTBF,RCPDCTBF   ZERO OUT BUFFER POINTER           R4 26149500
MCSORCL  LR    WD,WF               COPY DCT ADDRESS                  R4 26150000
         L     WF,MDCTDCT          POINT TO NEXT DCT                 R4 26150500
         LTR   WF,WF               END OF CHAIN                      R4 26151000
         BNZ   MCSORCL             LOOP                              R4 26151500
         DROP  WF                                                    R4 26152000
         USING DCTDSECT,WD                                           R4 26152500
         LA    R1,RCPDCT           POINT TO OUR DCT                  R4 26153000
         ST    R1,MDCTDCT          QUEUE TO END                      R4 26153500
         MVC   RCPDCTL,DCTDCB      DUPLICATE DCTDCB                  R4 26154000
         MVC   RCPTSTAT,MDCTSTAT     AND MDCTSTAT                    R4 26154500
         NI    RCPTSTAT,255-(DCTABORT+DCTPBUF)  RESET SOME FLAGS     R4 26155000
         MVC   RCPTTYPE,MDCTTYPE   DUPLICATE MDCTTYPE                R4 26155500
         MVC   RCPTLINE,MDCTLINE   DUPLICATE MDCTLINE                R4 26156000
         BR    LINK                RETURN                            R4 26158000
         DROP  WD                                                    R4 26158500
         EJECT                                                          26241900
*********************************************************************** 26242000
*                                                                     * 26242500
*        MCASYNC - ACTIVATE CONCURRENT COMPLETION CHECKS              * 26243000
*                                                                     * 26243100
*              THIS SUBROUTINE IS CALLED FROM THE BEGINNING OF        * 26243200
*        THE REMOTE CONSOLE PROCESSOR MAIN LOOP (MCL).  IT IN         * 26243300
*        TURN ENTERS EACH OF THE FOUR EXIT ROUTINES--                 * 26243400
*              1) RCPMSXIT--MESSAGE SPOOLING                          * 26243500
*              2) RCPSOXIT--OUTPUT SPOOLING                           * 26243600
*              3) RCPSIXIT--INPUT SPOOLING                            * 26243700
*              4) RCPIOXIT--'SPECIAL INPUT' OUTPUT SPOOLING           * 26243800
*        (AT ENTRY POINT +4) TO FINISH ANY WORK IN PROGRESS.          * 26243900
*        IF NO WORK IS CURRENTLY IN PROGRESS FOR A GIVEN FUNC-        * 26244000
*        TION, THE EXIT ROUTINE ADDRESS POINTS TO DUMMY EXIT          * 26244100
*        ROUTINE WHICH WHEN ENTERED AT ENTRY+4, RETURNS IMMED-        * 26244200
*        IATELY.                                                      * 26244300
*                                                                     * 26244400
*********************************************************************** 26244500
MCASYNC  ST    LINK,RCPXSAV        SAVE LINK REGISTER                R4 26244600
         LA    R1,RCPXIT           POINT TO FIRST                    R4 26245000
         LA    R0,L'RCPDMXCN/4     SET COUNT                         R4 26245500
MCASYNCL STM   R0,R1,RCPXSAV+4     SAVE                              R4 26246000
         L     R15,0(,R1)          POINT TO ROUTINE                  R4 26246500
         BAL   R10,4(,R15)         ENTER AS ASYNCHRONOUS ROUTINE     R4 26247000
         LM    R0,R1,RCPXSAV+4     RESTORE                           R4 26247500
         LA    R1,4(,R1)           UP TO NEXT                        R4 26248000
         BCT   R0,MCASYNCL         LOOP                              R4 26248500
         L     LINK,RCPXSAV        PICK UP RETURN                    R4 26249000
         BR    LINK                RETURN                            R4 26249500
         DROP  WC                                                    R4 26250000
         DROP  WG                                                    R4 26250500
         DROP  BASE2                                                 R4 26251000
         SPACE 2                                                        26251500
*********************************************************************** 26252000
*                                                                     * 26252500
*        INITIAL EXITS TO CONCURRENT OPERATION FUNCTIONS              * 26253000
*                                                                     * 26253500
*********************************************************************** 26254000
MCSDMXCN DS    0F                                                    R4 26254500
         DC    A(MCOSXIT1)         INITIAL VALUE FOR RCPMSXIT        R4 26255000
         EJECT                                                          26258400
         LTORG                                                       R4 26258500
         SPACE 2                                                     R4 26259000
         DROP  ,                   FORGET ALL ADDRESSABILITY         R4 26259500
         TITLE 'HASP VTAM API -- ACB OPEN / CLOSE SUBTASK'           R4 26260000
         SPACE 3                                                     R4 26260500
HASPVTAM $ENTRY BASE=R15,ENTRY=NO  ACB OPEN/CLOSE SUBTASK ENTRY      R4 26261000
         STM   R14,R12,12(R13)     SAVE CALLERS REGISTERS            R4 26261500
         LR    MBASE2,R15          ENTRY ADDRESS INTO BASE REG       R4 26262000
         USING HASPVTAM,MBASE2     SHOW SUBTASK ADDRESSABILITY       R4 26262500
         DROP  R15                 RELEASE TEMPORARY BASE REG        R4 26263000
         SPACE 1                                                     R4 26263500
         LA    R0,18*4             GET LENGTH VALUE OF SAVEAREA      R4 26264000
         GETMAIN R,LV=(0)          GETMAIN SAVE AREA                 R4 26264500
         SPACE 1                                                     R4 26265000
         ST    R13,4(,R1)          SAVE OLD SAVE AREA POINTER        R4 26265500
         ST    R1,8(,R13)          SAVE NEW SAVE AREA POINTER        R4 26266000
         LR    R13,R1              POINT TO NEW SAVE AREA            R4 26266500
         L     BASE1,=V(HASPNUC)   PROVIDE HCT ADDRESSABILITY        R4 26267000
         USING HCTDSECT,BASE1      SHOW HCT ADDRESSABILITY           R4 26267500
         SPACE 1                                                     R4 26268000
         SLR   R1,R1               ZERO SUBTASK                      R4 26268500
         ST    R1,$SNAECB           WORK ECB                         R4 26269000
         SPACE 1                                                     R4 26269500
         POST  $PSNAECB            VTAM SUBTASK IS AWAKE             R4 26270000
         SPACE 1                                                     R4 26270500
VACBWAIT DS    0H                                                    R4 26271000
         WAIT  1,ECB=$SNAECB       WAIT FOR WORK                     R4 26271500
         TM    $STATUS,$SYSEXIT    IS HASP TERMINATION REQUESTED     R4 26272000
         BZ    VACBWORK            BRANCH IF THIS IS WORK POST       R4 26272500
         EJECT                                                       R4 26273000
*                                                                    R4 26273500
*              SUBTASK EXIT HAS BEEN REQUESTED                       R4 26274000
*                                                                    R4 26274500
         SPACE 1                                                     R4 26275000
         LA    R0,18*4             GET LENGTH VALUE OF SAVEAREA      R4 26275500
         LR    R1,R13              HOLD CURRENT SAVE AREA POINTER    R4 26276000
         L     R13,4(R13)          RESTORE OLD SAVE AREA ADDRESS     R4 26276500
         SPACE 1                                                     R4 26277000
         FREEMAIN R,A=(1),LV=(0)   FREE SAVE AREA                    R4 26277500
         SPACE 1                                                     R4 26278000
         LM    R14,R12,12(R13)     RESTORE CALLERS REGISTERS         R4 26278500
         BR    R14                 RETURN TO CALLER                  R4 26279000
         SPACE 3                                                     R4 26279500
*                                                                    R4 26280000
*              CLEAR ECB AND GET LOGON DCT CHAIN                     R4 26280500
*                                                                    R4 26281000
         SPACE 1                                                     R4 26281500
VACBWORK SLR   R1,R1               GET ZERO VALUE FOR CLEARING       R4 26282000
         ST    R1,$SNAECB          CLEAR SUBTASK WORK ECB            R4 26282500
         L     MDCT,$VLOGQUE       GET ADDR OF QUEUED LOGON DCT      R4 26283000
         USING DCTDSECT,MDCT       SHOW DCT ADDRESSABILITY           R4 26283500
         LTR   MDCT,MDCT           CHECK FOR ANY LOGON DCT THERE     R4 26284000
         BZ    VACBWAIT            IGNORE THIS POST IF NONE          R4 26284500
SKIP1720 CS    MDCT,R1,$VLOGQUE    TRY TO CLEAR WORK QUEUE           R4 26285000
         BNE   SKIP1720            KEEP TRYING UNTIL CLEARED         R4 26285500
         EJECT                                                       R4 26286000
*                                                                    R4 26286500
*              CHECK FOR OPEN OR CLOSE REQUEST                       R4 26287000
*                                                                    R4 26287500
         SPACE 1                                                     R4 26288000
VACBPROC TM    MDCTSTAT,DCTSINON   HAS ACB ALREADY BEEN OPENED       R4 26288500
         BO    VACBCLOS            BRANCH FOR CLOSE PROC IF YES      R4 26289000
         LA    R2,VXIDOPEN         GET OPEN ACB EVENT EXIT CODE      R4 26289500
         SPACE 1                                                     R4 26290000
*                                                                    R4 26290500
*              GETMAIN AREA AND BUILD ACB                            R4 26291000
*                                                                    R4 26291500
         SPACE 1                                                     R4 26292000
         LA    R0,ACBSIZE          GET LENGTH VALUE OF ACB           R4 26292500
         GETMAIN R,LV=(0)          GET AREA FOR ACB                  R4 26293000
         SPACE 1                                                     R4 26293500
         LR    MACB,R1             SAVE ACB ADDRESS AND              R4 26294000
         USING ACBDSECT,MACB         SHOW ACB ADDRESSABILITY         R4 26294500
         ST    MACB,DCTACB         STORE ACB ADDRESS IN DCT          R4 26295000
         MVI   DCTACB,X'80'        SHOW PARM LIST END INDIC          R4 26295500
         XC    ACBDSECT(ACBSIZE),ACBDSECT CLEAR ACB AREA             R4 26296000
         MVI   ACBID,ACBIDVAL      SET ACB  IDENT  FIELD             R4 26296500
         MVI   ACBSTYP,ACBSVTAM    SET ACB SUBTYPE FIELD             R4 26297000
         LA    R0,ACBSIZE          GET CONTROL BLOCK LENGTH          R4 26297500
         STH   R0,ACBLENG           AND STORE IN ACB                 R4 26298000
         LA    R0,VACBINVL         GET ADDR OF INVALID ACB EXIT      R4 26298500
         ST    R0,ACBINRTN          AND STORE INTO ACB FOR VTAM      R4 26299000
         MVI   ACBDSOR2,ACBDORGA   SHOW DSORG ACB                    R4 26299500
         CLI   MDCTPSWD,C' '       CHECK LOGON DCT PASSWORD          R4 26300000
         BE    SKIP1730            BRANCH IF NONE SPECIFIED          R4 26300500
         LA    R0,MDCTPWDL         GET ADDR OF PASSWORD              R4 26301000
         ST    R0,ACBPASSW          AND STORE IN ACB                 R4 26301500
SKIP1730 LA    R0,VACBXLST         GET ADDR OF EXIT LIST             R4 26302000
         ST    R0,ACBEXLST          AND STORE IN ACB                 R4 26302500
         MVI   ACBDDNM,X'FF'       SHOW ACCESS METHOD VTAM           R4 26303000
         MVI   ACBOFLGS,ACBEXFG    INIT USER EXIT FLAG               R4 26303500
         LA    R0,MDCTAPNL         GET ADDR OF APPL NAME             R4 26304000
         ST    R0,ACBAPID           AND STORE IN ACB                 R4 26304500
         ST    MDCT,ACBLNDCT       STORE DCT ADDRESS IN ACB          R4 26305000
         EJECT                                                       R4 26305500
*                                                                    R4 26306000
*              OPEN ACB PROCESSING                                   R4 26306500
*                                                                    R4 26307000
         SPACE 1                                                     R4 26307500
         LA    R1,DCTACB           GET PARM LIST ADDR FOR OPEN       R4 26308000
         OPEN  MF=(E,(1))          ATTEMPT TO OPEN THE ACB           R4 26308500
         SPACE 1                                                     R4 26309000
         TM    ACBOFLGS,ACBOPEN    CHECK ACB OPEN FLAGS              R4 26309500
         BZ    VACBFAIL            BRANCH IF OPEN FAILED             R4 26310000
         OI    MDCTSTAT,DCTSINON   SHOW ACB HAS BEEN OPENED          R4 26310500
         SPACE 2                                                     R4 26311000
*                                                                    R4 26311500
*              ENABLE LOGON PROCESSING                               R4 26312000
*                                                                    R4 26312500
         SPACE 1                                                     R4 26313000
         L     R1,DCTBUFAD         GET RPL ADDR FROM DCT             R4 26313500
         USING RPLDSECT,R1         SHOW RPL ADDRESSABILITY           R4 26314000
         ST    MACB,RPLDACB        STORE ACB ADDR IN RPL             R4 26314500
         STCM  MDCT,7,RPLDCT+1     STORE DCT ADDR IN RPL             R4 26315000
         NI    RPLEXTDS,255-RPLBRANC SET NON BRANCH ENTRY REQUEST    R4 26315500
         MVI   RPLOPT1,RPLSEQ      INDICATE  SYNCHRONOUS  REQUEST    R4 26316000
         SPACE 1                                                     R4 26316500
VACBSETL LA    R0,RPLQUISE         INDICATE SETLOGON REQUEST CODE    R4 26317000
         STC   R0,RPLREQ             AND STORE IT IN RPL       @OZ18395 26317100
         L     R15,ACBINRTN        GET ADDR OF INTERFACE ROUTINE     R4 26317500
         BALR  R14,R15             LINK TO THE INTERFACE ROUTINE     R4 26318000
         SPACE 1                                                     R4 26318500
         SRA   R15,2               ADJUST SETLOGON COMPLETION CODE   R4 26319000
         BZ    VACBPOST            POST LINE MANAGER IF SUCCESSFUL   R4 26319500
         CLI   RPLRTNCD,USFRESSU   IS REQUEST RETRYABLE              R4 26320000
         BE    VACBSETL            RETRY REQUEST IF YES              R4 26320500
         OI    MDCTSTAT,DCTABORT   INDICATE SETLOGON REQ FAILED      R4 26321000
         ALR   R2,R15              GET SETLOGON EVENT COMPL CODE     R4 26321500
         B     VACBPOST            BRANCH TO POST LINE MANAGER       R4 26322000
         SPACE 2                                                     R4 26322500
*                                                                    R4 26323000
*              OPEN ACB FAILED EXIT FOR VTAM                         R4 26323500
*                                                                    R4 26324000
         SPACE 1                                                     R4 26324500
VACBINVL LA    R15,32              SET OPEN FAILED RETURN CODE       R4 26325000
         BR    R14                 RETURN TO CALLER                  R4 26325500
         EJECT                                                       R4 26326000
*                                                                    R4 26326500
*              CLOSE ACB PROCESSING                                  R4 26327000
*                                                                    R4 26327500
         SPACE 1                                                     R4 26328000
VACBCLOS TM    MDCTSTAT,DCTSOFF    IS ACB CLOSE REQUESTED            R4 26328500
         BNO   VACBNEXT            SEARCH FOR MORE WORK IF NOT       R4 26329000
         L     MACB,DCTACB         PICK UP ACB ADDRESS               R4 26329500
         LA    R2,VXIDCLOS         GET CLOSE ACB EVENT EXIT CODE     R4 26330000
         SPACE 1                                                     R4 26330500
         LA    R1,DCTACB           GET PARM LIST ADDR FOR CLOSE      R4 26331000
         CLOSE MF=(E,(1))          ATTEMPT TO CLOSE THE ACB          R4 26331500
         NI    MDCTSTAT,255-DCTSOFF-DCTSINON SHOW ACB CLOSED        R41 26331600
         SPACE 1                                                     R4 26332000
         SRL   R15,2               ADJUST CLOSE ACB COMPL CODE       R4 26332500
         TM    ACBOFLGS,ACBOPEN    TEST ACB OPEN FLAGS               R4 26333000
         BZ    VACBFREE            FREE ACB AREA IF SUCCESSFUL       R4 26333500
         SPACE 1                                                     R4 26334000
VACBFAIL SRL   R15,2               ADJUST OPEN/CLOSE RETURN CODE     R4 26334500
         ALR   R2,R15              GET OPEN/CLOSE ACB EVENT CODE     R4 26335000
         MVC   MDCTXERR,ACBERFLG   COPY ACB ERROR CODE TO DCT        R4 26335500
         OI    MDCTSTAT,DCTABORT   INDICATE ACB REQUEST FAILED       R4 26336000
         SPACE 2                                                     R4 26336500
*                                                                    R4 26337000
*              FREEMAIN ACB AREA                                     R4 26337500
*                                                                    R4 26338000
         SPACE 1                                                     R4 26338500
VACBFREE LA    R0,ACBSIZE          GET LENGTH OF ACB AREA            R4 26339000
         FREEMAIN R,A=(MACB),LV=(0) FREE THE ACB AREA                R4 26339500
         XC    DCTACB,DCTACB       INDICATE NO MORE ACB PRESENT      R4 26340000
         SPACE 3                                                     R4 26340500
*                                                                    R4 26341000
*              POST THE LINE MANAGER AND SEARCH FOR WORK             R4 26341500
*                                                                    R4 26342000
         SPACE 1                                                     R4 26342500
VACBPOST LR    WF,R13              SAVE REGISTER 13 ACROSS POST      R4 26343000
         BAL   ML,VDCTPOST         ENTER LINE MANAGER POST ROUTINE   R4 26343500
         LR    R13,WF              RESTORE SAVE AREA ADDRESS         R4 26344000
         SPACE 1                                                     R4 26344500
VACBNEXT L     MDCT,MDCTADCT       GET ADDR OF NEXT LOGON DCT        R4 26345000
         LA    MDCT,0(,MDCT)       PURIFY ADDRESS                    R4 26345500
         LTR   MDCT,MDCT           TEST FOR END OF DCT CHAIN         R4 26346000
         BNZ   VACBPROC            PROCESS IF MORE WORK QUEUED       R4 26346500
         SPACE 1                                                     R4 26347000
         B     VACBWAIT            GO TO WAIT FOR NEXT POST          R4 26347500
         SPACE 2                                                     R4 26348000
         DROP  ,                   FORGET ALL ADDRESSABILITY         R4 26348500
         TITLE 'HASP VTAM API -- ACB EXIT LIST DEFINITION'           R4 26349000
*********************************************************************** 26349500
*                                                                     * 26350000
*              COMMON VTAM ACB EXIT LIST DEFINITION                   * 26350500
*                                                                     * 26351000
*********************************************************************** 26351500
         SPACE 2                                                     R4 26352000
VACBXLST EXLST AM=VTAM,            COMMON ACB EXIT LIST DEFINITION     C26352500
               LOGON=VEXITLGN,LOSTERM=VEXITLST,TPEND=VEXITTND,         C26353000
               RELREQ=VEXITRLR,SCIP=VEXITSCP                         R4 26353500
         TITLE 'HASP VTAM API -- LOGON EXIT ROUTINE'                 R4 26354000
*********************************************************************** 26354500
*                                                                     * 26355000
*   VEXITLGN - VTAM API LOGON EXIT ROUTINE                            * 26355500
*                                                                     * 26356000
*                                                                     * 26356500
*   REGISTERS AT ENTRY                                                * 26357000
*                                                                     * 26357500
*        R1 =  ADDRESS OF PARAMETER LIST                              * 26358000
*              1ST WORD - ADDRESS OF ACB                              * 26358500
*              2ND WORD - ADDRESS OF TERMINALS SYMBOLIC NAME          * 26359000
*              3RD WORD - UNUSED                                      * 26359500
*              4TH WORD - LENGTH OF LOGON MESSAGE TEXT                * 26360000
*                                                                     * 26360500
*********************************************************************** 26361000
         SPACE 2                                                     R4 26361500
         USING VEXITLGN,R15        EXIT ROUTINE INITIAL BASE         R4 26362000
VEXITLGN L     MBASE2,=A(HASPVTAM) GET COMMON BASE ADDRESS           R4 26362500
         L     BASE1,=V(HASPNUC)   PICK UP HCT ADDRESS               R4 26363000
         USING HASPVTAM,MBASE2     SHOW PERMANENT ADDRESSABILITY     R4 26363500
         USING HCTDSECT,BASE1      SHOW HCT ADDRESSABILITY           R4 26364000
         DROP  R15                 RELEASE TEMPORARY BASE REG        R4 26364500
         L     MACB,0(,R1)         GET ADDRESS OF ACB                R4 26365000
         USING ACBDSECT,MACB         AND SHOW ADDRESSABLE            R4 26365500
         L     MDCT,ACBLNDCT       GET LOGON DCT ADDRESS             R4 26366000
         USING DCTDSECT,MDCT         AND SHOW ADDRESSABLE            R4 26366500
         SPACE 1                                                     R4 26367000
         TM    MDCTSTAT,DCTSINON+DCTSOFF CHECK FOR ACB AVAILABLE     R4 26367500
         BNMR  R14                 LET CLOSE REJECT LOGON IF NOT     R4 26368000
         TM    DCTSTAT,DCTDRAIN    TEST LOGON DCT STATUS             R4 26368500
         BOR   R14                 REJECT LOGON IF DRAINING          R4 26369000
         SPACE 1                                                     R4 26369500
         L     R2,MDCTLOGN         GET LOGON COUNT FROM DCT          R4 26370000
         LA    R2,1(,R2)           INCREMENT COUNT OF LOGONS         R4 26370500
         ST    R2,MDCTLOGN         STORE UPDATED COUNT IN DCT        R4 26371000
         SPACE 1                                                     R4 26371500
         LR    ML,R14              SAVE RETURN ADDRESS               R4 26372000
         L     R2,4(,R1)           SAVE ADDR OF SYMBOLIC NAME        R4 26372500
         SPACE 1                                                     R4 26373000
         L     MICE,$ICETRAY       GET NEXT AVAILABLE ICE            R4 26373500
         USING ICEDSECT,MICE       SHOW ICE ADDRESSABILITY           R4 26374000
VEXITLIC LTR   MICE,MICE           CHECK FOR EMPTY ICE TRAY         R41 26374500
         BZ    VLOGFAIL            REJECT LOGON IF EMPTY             R4 26375000
         L     R0,ICEAPCHN         ATTEMPT TO REMOVE                R41 26375500
         CS    MICE,R0,$ICETRAY     ICE FROM TRAY                    R4 26376000
         BNE   VEXITLIC            RETRY IF FAILED                  R41 26376500
         SPACE 1                                                     R4 26377000
         XC    ICEDSECT(ICESIZE),ICEDSECT CLEAR ALL FIELDS IN ICE    R4 26377500
         SPACE 1                                                     R4 26378000
         ST    MDCT,ICEADCT        SAVE LOGON DCT ADDR IN ICE        R4 26378500
         MVC   ICESYMB,0(R2)       MOVE SYMBOLIC NAME TO ICE         R4 26379000
         L     R2,12(,R1)          GET LENGTH OF LOGON MSG           R4 26379500
         STH   R2,ICERULEN          AND STORE IN ICE                 R4 26380000
         SPACE 1                                                     R4 26380500
         LA    R2,VXIDLOGN         GET LOGON EXIT ROUT INDICATOR     R4 26381000
         B     VICEPOST            GO TO QUEUE ICE AND POST MLLM     R4 26381500
         EJECT                                                       R4 26382000
*                                                                    R4 26382500
*              NO ICE AVAILABLE - REJECT LOGON REQUEST               R4 26383000
*                                                                    R4 26383500
         SPACE 2                                                     R4 26384000
VLOGFAIL L     R1,MDCTNICE         GET LOGON FAILED FOR ICE COUNTER  R4 26384500
         LA    R1,1(,R1)           INCREMENT COUNTER                 R4 26385000
         ST    R1,MDCTNICE          AND STORE UPDATED VALUE          R4 26385500
         SPACE 1                                                     R4 26386000
         LA    R0,RPLSIZE+NIBSIZE  GET LENGTH OF REQ RPL             R4 26386500
         GETMAIN R,LV=(0)          GET AREA FOR CLOSE DEST RPL       R4 26387000
         LR    MBUF,R1             ALLOW RPL ADDRESSABILITY          R4 26387500
         USING RPLDSECT,MBUF       SHOW RPL ADDRESSABILITY           R4 26388000
         SPACE 1                                                     R4 26388500
         $BFRBLD (R1),TYPE=VTAM    INITIALIZE AREA AS VTAM BUF       R4 26389000
         SPACE 1                                                     R4 26389500
         ST    MACB,RPLDACB        STORE ACB ADDRESS IN RPL          R4 26390000
         MVI   RPLREQ,RPLCLOSE     SHOW CLSDST REQUEST TYPE         R41 26390500
         LA    R15,RPLBUFST        ESTABLISH ADDRESS OF NIB          R4 26391000
         USING NIBDSECT,R15        SHOW NIB ADDRESSABILITY           R4 26391500
         ST    R15,RPLARG          PUT NIB POINTER INTO RPL          R4 26392000
         MVI   RPLEXTDS,RPLNIB     INDICATE NIB POINTER SET         R41 26392500
         MVI   RPLOPT1,RPLSEQ      SHOW SYNCHRONOUS REQUEST          R4 26393000
         LA    R13,RPLSAVEA        ESTABLISH SAVEAREA POINTER        R4 26393500
         SPACE 1                                                     R4 26394000
         XC    NIBDSECT(NIBSIZE),NIBDSECT CLEAR NIB AREA             R4 26394500
         MVI   NIBID,NIBIDD        INITIALIZE NIB ID FIELD          R41 26394600
         MVI   NIBLEN,NIBLNIB      INITIALIZE NIB LENGTH FIELD      R41 26394700
         MVC   NIBMODE(8),=CL8'RECORD'  SHOW RECORD MODE IN NIB     R41 26394800
         MVI   NIBPROCD,PRORPLC    SHOW RPL PROC OPTION             R41 26394900
         MVC   NIBSYM,0(R2)        MOVE SYMBOLIC NAME TO NIB         R4 26395000
         SPACE 1                                                     R4 26395500
         DROP  R15                 RELEASE NIB ADDRESSABILITY        R4 26396000
         EJECT                                                       R4 26396500
VLOGCLOS LA    R0,RPLCLOSE         GET CLSDST REQUEST CODE           R4 26397000
         L     R15,ACBINRTN        GET ADDR OF INTERFACE ROUT        R4 26397500
         BALR  R14,R15             LINK TO THE INTERFACE ROUT        R4 26398000
         SPACE 1                                                     R4 26398500
         LTR   R15,R15             WAS REQUEST SUCCESSFUL            R4 26399000
         BZ    VLOGFREE            BRANCH TO FREE RPL IF YES         R4 26399500
         CLI   RPLRTNCD,USFRESSU   IS REQUEST RETRYABLE              R4 26400000
         BE    VLOGCLOS            BRANCH TO RETRY REQUEST IF YES    R4 26400500
         SPACE 3                                                     R4 26401000
VLOGFREE DS    0H                                                   R41 26401500
         LR    R2,R1               SAVE R1 ACROSS $$WTO             R41 26402000
         MVC   0(MXSSMSGL,R1),MXSSMSG MOVE MESSAGE TO WORK AREA     R41 26402100
         $$WTO (R1)                ISSUE 'MAX SESS EXCEEDED' MSG    R41 26402200
         SPACE 1                                                    R41 26402300
         LR    R1,R2               RESTORE R1 FOR FREEMAIN          R41 26402400
         LA    R0,RPLSIZE+NIBSIZE  GET LENGTH OF RPL/NIB/MSG AREA   R41 26402500
         FREEMAIN R,A=(1),LV=(0)   FREE THE AREA                    R41 26402600
         SPACE 1                                                    R41 26402700
         B     VMLMPOST            GO POST THE LINE MANAGER         R41 26402800
         BR    ML                  RETURN TO VTAM                   R41 26402900
         SPACE 2                                                    R41 26403000
         $MID  206                 MESSAGE 206 ID                   R41 26403600
MXSSMSG  WTO   '&MID.LOGON FAILED -- MAXSESS EXCEEDED',MF=L         R41 26403700
MXSSMSGL EQU   *-MXSSMSG           LENGTH OF MASS SESS MSG          R41 26403800
         SPACE 3                                                    R41 26403900
         DROP  ,                   FORGET ALL ADDRESSABILITY         R4 26404000
         TITLE 'HASP VTAM API -- LOSTERM EXIT ROUTINE'               R4 26404500
*********************************************************************** 26405000
*                                                                     * 26405500
*   VEXITLST - VTAM API LOSTERM EXIT ROUTINE                          * 26406000
*                                                                     * 26406500
*                                                                     * 26407000
*        R1 =  ADDRESS OF PARAMETER LIST                              * 26407500
*                                                                     * 26408000
*              1ST WORD - ADDRESS OF ACB                              * 26408500
*              2ND WORD - CID OF TERMINAL                             * 26409000
*              3RD WORD - USERFLD/ICE ADDR                            * 26409500
*              4TH WORD - REASON CODE                                 * 26410000
*                          0 NOT APPLICABLE                           * 26410500
*                          4 NOT APPLICABLE                           * 26411000
*                          8 RESERVED                                 * 26411500
*                         12 LU RESTART FAILED                        * 26412000
*                         16 LU RESTART SUCCESSFUL                    * 26412500
*                         20 LU UNCOND TERMINATE SELF                 * 26413000
*                         24 LU RESTART IN PROCESS                    * 26413500
*                         28 RESERVED                                 * 26414000
*                         32 LU CONDIT TERMINATE SELF                 * 26414500
*                         36 LU BUFFER LIMIT EXCEEDED                 * 26415000
*                                                                     * 26415500
*********************************************************************** 26416000
         SPACE 2                                                     R4 26416500
         USING VEXITLST,R15        EXIT ROUTINE INITIAL BASE         R4 26417000
VEXITLST L     MBASE2,=A(HASPVTAM) GET COMMON BASE ADDRESS           R4 26417500
         L     BASE1,=V(HASPNUC)   GET HCT ADDRESS                   R4 26418000
         USING HASPVTAM,MBASE2     SHOW PERMANENT ADDRESSABILITY     R4 26418500
         USING HCTDSECT,BASE1      SHOW HCT ADDRESSABILITY           R4 26419000
         DROP  R15                 RELEASE TEMPORARY BASE REG        R4 26419500
         L     MACB,0(,R1)         GET ADDRESS OF ACB                R4 26420000
         USING ACBDSECT,MACB         AND SHOW ADDRESSABLE            R4 26420500
         L     MDCT,ACBLNDCT       GET LOGON DCT ADDRESS             R4 26421000
         USING DCTDSECT,MDCT         AND SHOW ADDRESSABLE            R4 26421500
         TM    MDCTSTAT,DCTSINON+DCTSOFF CHECK FOR ACB AVAILABLE     R4 26422000
         BNMR  R14                 LET CLOSE HANDLE IT IF NOT        R4 26422500
         LR    ML,R14              SAVE RETURN ADDRESS               R4 26423000
         L     MICE,8(,R1)         GET ADDRESS OF ICE                R4 26423500
         USING ICEDSECT,MICE       SHOW ICE ADDRESSABILITY           R4 26424000
         L     R2,12(,R1)          GET LOSTERM REASON CODE           R4 26424500
         SRL   R2,2                 DIVIDE BY 4 TO GET INDEX        R41 26424600
         LA    R2,VXIDLOST(,R2)      ADD LOSTERM EXIT ROUTINE IDENT R41 26425500
         B     VICEPOST               AND POST ACTION TO LINE MGR   R41 26426000
         SPACE 2                                                     R4 26426500
         DROP  ,                   FORGET ALL ADDRESSABILITY         R4 26427000
         TITLE 'HASP VTAM API -- TPEND EXIT ROUTINE'                 R4 26427500
*********************************************************************** 26428000
*                                                                     * 26428500
*   VEXITTND - VTAM API TPEND EXIT ROUTINE                            * 26429000
*                                                                     * 26429500
*                                                                     * 26430000
*        R1 =  ADDRESS OF PARAMETER LIST                              * 26430500
*                                                                     * 26431000
*              1ST WORD - ADDRESS OF ACB                              * 26431500
*              2ND WORD - REASON CODE                                 * 26432000
*                         0 ORDERLY SHUTDOWN - OPER COMMAND           * 26432500
*                         4 QUICK   SHUTDOWN - OPER COMMAND           * 26433000
*                         8 VTAM IS ABNORMALLY TERMINATING            * 26433500
*                                                                     * 26434000
*********************************************************************** 26434500
         SPACE 2                                                     R4 26435000
         USING VEXITTND,R15        EXIT ROUTINE INITIAL BASE         R4 26435500
VEXITTND L     MBASE2,=A(HASPVTAM) GET COMMON BASE ADDRESS           R4 26436000
         L     BASE1,=V(HASPNUC)   GET HCT ADDRESS                   R4 26436500
         USING HASPVTAM,MBASE2     SHOW PERMANENT ADDRESSABILITY     R4 26437000
         USING HCTDSECT,BASE1      SHOW HCT ADDRESSABILITY           R4 26437500
         DROP  R15                 RELEASE TEMPORARY BASE REG        R4 26438000
         L     MACB,0(,R1)         GET ADDRESS OF ACB                R4 26438500
         USING ACBDSECT,MACB         AND SHOW ADDRESSABLE            R4 26439000
         L     MDCT,ACBLNDCT       GET LOGON DCT ADDRESS             R4 26439500
         USING DCTDSECT,MDCT         AND SHOW ADDRESSABLE            R4 26440000
         TM    MDCTSTAT,DCTSINON+DCTSOFF CHECK FOR ACB AVAILABLE     R4 26440500
         BNMR  R14                 LET CLOSE HANDLE IT IF NOT        R4 26441000
         LR    ML,R14              SAVE RETURN ADDRESS               R4 26441500
         L     R2,4(,R1)           GET TPEND REASON CODE             R4 26442000
         SRL   R2,2                ADJUST REASON CODE FOR EXIT IDENT R4 26442500
         LA    R2,VXIDTPND(,R2)    ADD TPEND EXIT ROUTINE IDENTIFIER R4 26443000
         B     VDCTPOST             AND POST ACTION TO LINE MANAGER  R4 26443500
         SPACE 2                                                     R4 26444000
         DROP  ,                   FORGET ALL ADDRESSABILITY         R4 26444500
         TITLE 'HASP VTAM API -- SCIP EXIT ROUTINE'                  R4 26445000
*********************************************************************** 26445500
*                                                                     * 26446000
*   VEXITSCP - VTAM API SCIP EXIT ROUTINE                             * 26446500
*                                                                     * 26447000
*                                                                     * 26447500
*        R1 =  ADDRESS OF PARAMETER LIST                              * 26448000
*                                                                     * 26448500
*              1ST WORD - ADDRESS OF ACB                              * 26449000
*              2ND WORD - CID OF TERMINAL                             * 26449500
*              3RD WORD - USERFLD/ICE ADDR                            * 26450000
*              4TH WORD - RESERVED                                    * 26450500
*              5TH WORD - ADDRESS OF R/0 RPL                          * 26451000
*                                                                     * 26451500
*********************************************************************** 26452000
         SPACE 2                                                     R4 26452500
         USING VEXITSCP,R15        EXIT ROUTINE INITIAL BASE         R4 26453000
VEXITSCP L     MBASE2,=A(HASPVTAM) GET COMMON BASE ADDRESS           R4 26453500
         L     BASE1,=V(HASPNUC)   GET HCT ADDRESS                   R4 26454000
         USING HASPVTAM,MBASE2     SHOW PERMANENT ADDRESSABILITY     R4 26454500
         USING HCTDSECT,BASE1      SHOW HCT ADDRESSABILITY           R4 26455000
         DROP  R15                 RELEASE TEMPORARY BASE REG        R4 26455500
         L     MACB,0(,R1)         GET ADDRESS OF ACB                R4 26456000
         USING ACBDSECT,MACB         AND SHOW ADDRESSABLE            R4 26456500
         L     MDCT,ACBLNDCT       GET LOGON DCT ADDRESS             R4 26457000
         USING DCTDSECT,MDCT         AND SHOW ADDRESSABLE            R4 26457500
         TM    MDCTSTAT,DCTSINON+DCTSOFF CHECK FOR ACB AVAILABLE     R4 26458000
         BNMR  R14                 LET CLOSE HANDLE IT IF NOT        R4 26458500
         L     MICE,8(,R1)         GET ADDRESS OF ICE FOR POST       R4 26459000
         L     MBUF,16(,R1)        GET ADDRESS OF R/O RPL            R4 26459500
         USING RPLDSECT,MBUF       SHOW RPL ADDRESSABILITY           R4 26460000
         TM    RPLCNTSC,RPLRQR     CHECK FOR RQR RECEIVED            R4 26460500
         BNOR  R14                 IGNORE REQUEST IF NOT RQR         R4 26461000
         LR    ML,R14              SAVE RETURN ADDRESS               R4 26461500
         LA    R2,VXIDSCIP         GET SCIP EXIT ROUTINE IDENTIFIER  R4 26462000
         B     VICEPOST             AND POST ACTION TO LINE MANAGER  R4 26462500
         SPACE 2                                                     R4 26463000
         DROP  ,                   FORGET ALL ADDRESSABILITY         R4 26463500
         TITLE 'HASP VTAM API -- RELREQ EXIT ROUTINE'                R4 26464000
*********************************************************************** 26464500
*                                                                     * 26465000
*   VEXITRLR - VTAM API RELREQ EXIT ROUTINE                           * 26465500
*                                                                     * 26466000
*                                                                     * 26466500
*        R1 =  ADDRESS OF PARAMETER LIST                              * 26467000
*                                                                     * 26467500
*              1ST WORD - ADDRESS OF ACB                              * 26468000
*              2ND WORD - ADDRESS OF TERMINALS SYMBOLIC NAME          * 26468500
*                                                                     * 26469000
*********************************************************************** 26469500
         SPACE 2                                                     R4 26470000
         USING VEXITRLR,R15        EXIT ROUTINE INITIAL BASE         R4 26470500
VEXITRLR L     MBASE2,=A(HASPVTAM) GET COMMON BASE ADDRESS           R4 26471000
         L     BASE1,=V(HASPNUC)   GET HCT ADDRESS                   R4 26471500
         USING HASPVTAM,MBASE2     SHOW PERMANENT ADDRESSABILITY     R4 26472000
         USING HCTDSECT,BASE1      SHOW HCT ADDRESSABILITY           R4 26472500
         DROP  R15                 RELEASE TEMPORARY BASE REG        R4 26473000
         L     MACB,0(,R1)         GET ADDRESS OF ACB                R4 26473500
         USING ACBDSECT,MACB         AND SHOW ADDRESSABLE            R4 26474000
         L     MDCT,ACBLNDCT       GET LOGON DCT ADDRESS             R4 26474500
         USING DCTDSECT,MDCT         AND SHOW ADDRESSABLE            R4 26475000
         TM    MDCTSTAT,DCTSINON+DCTSOFF CHECK FOR ACB AVAILABLE     R4 26475500
         BNMR  R14                 LET CLOSE HANDLE IT IF NOT        R4 26476000
         L     R2,4(,R1)           GET ADDRESS OF SYMBOLIC NAME      R4 26476500
         L     MICE,MDCTICE        GET ADDR OF FIRST LOGGED ON ICE   R4 26477000
         USING ICEDSECT,MICE       SHOW ICE ADDRESSABILITY           R4 26477500
         SPACE 1                                                     R4 26478000
VRLRSRCH CLC   ICESYMB,0(R2)       CHECK FOR SYMBOLIC NAME MATCH     R4 26478500
         BNE   SKIP1750            BRANCH IF NOT REQ ICE FOUND       R4 26479000
         LA    R2,VXIDRLRQ         GET RELREQ EXIT ROUTINE IDENT     R4 26479500
         LR    ML,R14              SET UP RETURN ADDRESS             R4 26480000
         B     VICEPOST            POST ACTION TO LINE MANAGER       R4 26480500
SKIP1750 L     MICE,ICEAPCHN       GET ADDR OF NEXT LOGGED ON ICE    R4 26481000
         LTR   MICE,MICE           CHECK FOR ANY MORE ICE THERE      R4 26481500
         BNZ   VRLRSRCH            EXAMINE NEXT ICE IF PRESENT       R4 26482000
         BR    R14                 ELSE RETURN TO VTAM               R4 26482500
         SPACE 2                                                     R4 26483000
         DROP  ,                   FORGET ALL ADDRESSABILITY         R4 26483500
         TITLE 'HASP VTAM API -- RPL REQUEST COMPLETION EXIT ROUTINE'   26484000
*********************************************************************** 26484500
*                                                                     * 26485000
*   VEXITRPL - VTAM API REQUEST COMPLETION EXIT ROUTINE               * 26485500
*                                                                     * 26486000
*                                                                     * 26486500
*        R1 =  ADDRESS OF RPL                                         * 26487000
*                                                                     * 26487500
*********************************************************************** 26488000
         SPACE 2                                                     R4 26488500
         USING RPLDSECT,R1         GET BUFFER ADDRESSABILITY         R4 26489000
         USING VEXITRPL,R15        EXIT ROUTINE INITIAL BASE         R4 26489500
         SPACE 1                                                     R4 26490000
VEXITRPL DS    0H                  RPL REQUEST COMPLETE EXIT ROUTINE R4 26490500
         L     MBASE2,=A(HASPVTAM) GET COMMON BASE ADDRESS           R4 26491000
         DROP  R15                 RELEASE TEMPORARY BASE REG        R4 26491500
         USING HASPVTAM,MBASE2     SHOW PERMANENT ADDRESSABILITY     R4 26492000
         L     BASE1,=V(HASPNUC)   GET HCT ADDRESS                   R4 26492500
         USING HCTDSECT,BASE1      SHOW HCT ADDRESSABILITY           R4 26493000
         LR    WF,R14              SAVE RETURN ADDRESS               R4 26493500
         LR    ML,R14              SET  RETURN ADDRESS FOR VBUFPOST  R4 26494000
         SPACE 1                                                     R4 26494500
         TM    RPLSEQTP,VSEQSPEC   CHECK RPL SEQUENCE TYPE           R4 26495000
         BNZ   VBUFPOST            BRANCH IF SPECIAL SEQUENCE        R4 26495500
         TM    RPLSEQTP,VSEQSEND   CHECK RPL NORMAL SEQUENCE TYPE    R4 26496000
         BO    VRPLSEND            BRANCH IF SEND OR RESETSR-CA SEQ  R4 26496500
         L     MDCT,RPLDCT         GET ADDRESS OF LOGON DCT          R4 26497000
         CLI   RPLRTNCD,USFXORDC   CHECK RECEIVE COMPLETION          R4 26497500
         BH    VRPLRQUE            BRANCH IF COMPLETED WITH ERROR    R4 26498000
         EJECT                                                       R4 26498500
*                                                                    R4 26499000
*              RECEIVE REQUEST COMPLETION HANDLING                   R4 26499500
*                                                                    R4 26500000
         SPACE 1                                                     R4 26500500
VRPLRAOK TM    RPLSRTYP,RPLRRESP   CHECK TYPE OF RECEIVE             R4 26501000
         BO    VRPLRANY            DON'T COUNT INBOUND RESPONSES     R4 26501500
         TM    RPLSRTYP,RPLDFASY   CHECK TYPE OF  RECEIVE REQUEST    R4 26502000
         BO    VRPLRANY            BRANCH IF ASYNCHRONOUS REQUEST    R4 26502500
         SPACE 1                                                     R4 26503000
         USING ICEDSECT,MICE       ESTABLISH ICE ADDRESSABILITY      R4 26503500
         L     MICE,RPLICE         GET ADDRESS OF ICE                R4 26504000
         L     WA,ICEINLM          GET INBOUND QUEUE COUNT & LIMIT   R4 26504500
SKIP1760 LA    R14,1               SET UP COUNTER INCREMENT          R4 26505000
         ALR   R14,WA              UPDATE QUEUE COUNTER VALUE        R4 26505500
         CS    WA,R14,ICEINLM      ATTEMPT TO STORE NEW VALUE        R4 26506000
         BNE   SKIP1760            RETRY IF UNSUCCESSFUL             R4 26506500
         SRDL  R14,16              ISOLATE QUEUE LIMIT               R4 26507000
         SRL   R15,16               AND QUEUE COUNTER                R4 26507500
         CLR   R14,R15             CHECK FOR HIGHWATER MARK          R4 26508000
         BH    VRPLRANY            BRANCH IF NOT YET REACHED         R4 26508500
         SPACE 1                                                     R4 26509000
         MVI   RPLACTIV,0          RESET RPL BUSY INDICATOR          R4 26509500
         MVI   RPLSEQTP,VSEQRSCS   SHOW RESET CS REQUEST TYPE        R4 26510000
         MVI   RPLOPT1,RPLSEQ      SHOW SYNCHRONOUS REQUEST          R4 26510500
         OI    RPLOPT5,RPLDLGIN    REQUEST RESETSR CS MODE           R4 26511000
         NI    RPLSRTYP,255-(RPLNFSYN+RPLDFASY+RPLRRESP) SYNC DFL    R4 26511500
         LA    R0,RPLRSRCD         SHOW RESETSR REQUEST CODE         R4 26512000
         LA    R13,RPLSAVEA        PROVIDE SAVE AREA FOR VTAM       R41 26512200
         L     R15,RPLDACB                 GET ADDRESS OF ACB        R4 26512500
         L     R15,ACBINRTN-ACBDSECT(,R15)  INTERFACE ROUTINE        R4 26513000
         BALR  R14,R15             LINK TO THE INTERFACE ROUTINE     R4 26513500
         NI    RPLOPT5,255-RPLDLGIN  RESET CS OPTION           @OZ20662 26513600
         LTR   R15,R15             CHECK REQUEST COMPLETION          R4 26514000
         BNZ   VRPLRQUE            POST LINE MANAGER IF ERROR        R4 26514500
         SPACE 1                                                     R4 26515000
         USING DCTDSECT,MDCT       PROVIDE DCT ADDRESSABILITY        R4 26515500
VRPLRANY L     MBUF,MDCTRQBF       GET NEXT RECEIVE ANY BUFFER       R4 26516000
SKIP1770 LTR   MBUF,MBUF           CHECK FOR ANY RPL QUEUED          R4 26516500
         BZ    VRPLRQUE            BRANCH IF QUEUE IS EMPTY          R4 26517000
         L     R0,RPLNEXT-RPLDSECT(,MBUF) GET ADDR OF NEXT BUF       R4 26517500
         CS    MBUF,R0,MDCTRQBF    ATTEMPT TO UPDATE QUEUE           R4 26518000
         BNE   SKIP1770            RETRY IF UNSUCCESSFUL             R4 26518500
         STCM  MBUF,8,RPLFLAGS     SAVE RCV AHEAD QUEUE COUNT        R4 26519000
         BAL   ML,VBUFPOST         QUEUE BUFFER TO LINE MANAGER      R4 26519500
         SPACE 1                                                     R4 26520000
         LR    R1,MBUF             GET RCV ANY RPL ADDRESSABILITY    R4 26520500
         MVI   RPLOPT1,RPLSEQ      SHOW SYNCHRONOUS REQUEST          R4 26521000
         LA    R0,RPLRCVCD         SHOW RECEIVE REQUEST CODE         R4 26521500
         LA    R13,RPLSAVEA        PROVIDE A SAVEAREA FOR VTAM       R4 26522000
         L     R15,RPLDACB                 GET ADDRESS OF ACB        R4 26522500
         L     R15,ACBINRTN-ACBDSECT(,R15)  INTERFACE ROUTINE        R4 26523000
         BALR  R14,R15             LINK TO THE INTERFACE ROUTINE     R4 26523500
         LTR   R15,R15             CHECK REQUEST COMPLETION          R4 26524000
         BZ    VRPLRAOK            BRANCH IF SUCCESSFUL RCV          R4 26524500
         CLI   RPLRTNCD,USFXORDC   CHECK RECEIVE COMPLETION          R4 26525000
         BNH   VRPLRAOK            BRANCH IF EXCEPTION RCV           R4 26525500
         SPACE 1                                                     R4 26526000
VRPLRQUE MVI   RPLFLAGS,0          INDICATE NO RCV ANY ISSUED        R4 26526500
         BAL   ML,VBUFPOST         QUEUE BUFFER TO LINE MANAGER      R4 26527000
         DROP  R1                  RELEASE RPL ADDRESSABILITY        R4 26527500
         SPACE 1                                                     R4 26528000
VRPLRXIT L     R1,MDCTRABF         GET COUNT OF ACTIVE               R4 26528500
SKIP1780 L     R0,=A(-X'01000000')  RECEIVE ANY REQUESTS             R4 26529000
         ALR   R0,R1                 AND DECREMENT BY ONE            R4 26529500
         CS    R1,R0,MDCTRABF      ATTEMPT TO UPDATE COUNT           R4 26530000
         BER   WF                  RETURN TO VTAM IF STORED          R4 26530500
         B     SKIP1780            RETRY IF UNSUCCESSFUL             R4 26531000
         DROP  MDCT                RELEASE DCT ADDRESSABILITY        R4 26531500
         EJECT                                                       R4 26532000
*                                                                    R4 26532500
*              SEND REQUEST COMPLETION HANDLING                      R4 26533000
*                                                                    R4 26533500
         SPACE 1                                                     R4 26534000
         USING RPLDSECT,R1         PROVIDE RPL ADDRESSABILITY        R4 26534500
VRPLSEND CLI   RPLRTNCD,USFXORDC   CHECK REQUEST COMPLETION          R4 26535000
         BH    VBUFPOST            BRANCH IF COMPLETED WITH ERROR    R4 26535500
         L     MICE,RPLICE         GET ADDRESS OF ICE                R4 26536000
         SPACE 1                                                     R4 26536500
VRPLSAOK BAL   ML,VBUFPOST         QUEUE BUFFER TO L.M. AND POST     R4 26537000
         LM    R14,R15,ICEOUTHD    GET OUTBOUND QUEUE POINTERS       R4 26537500
         SPACE 1                                                     R4 26538000
         USING RPLDSECT,MBUF       PROVIDE RPL ADDRESSABILITY        R4 26538500
VRPLSDEQ LTR   MBUF,R14            CHECK FOR ANY BUFFER QUEUED       R4 26539000
         ST    MBUF,ICEOUTBF       SET UP ACTIVE OUTB RPL ADDR       R4 26539500
         BZR   WF                  RETURN TO VTAM IF OUTB QUE EMPTY  R4 26540000
         CLR   R14,R15             TEST FOR LAST BUFFER ON QUEUE     R4 26540500
         BE    VRPLSNGL            BRANCH IF ONE BUFFER ONLY         R4 26541000
         L     R0,RPLNEXT          GET ADDR OF NEXT BUFFER           R4 26541500
         LR    R1,R15              GET ADDR OF LAST BUFFER           R4 26542000
         CDS   R14,R0,ICEOUTHD     ATTEMPT TO UPDATE QUEUE PNTRS     R4 26542500
         BNE   VRPLSDEQ            RETRY IF UNSUCCESSFUL             R4 26543000
         SLR   R1,R1               CLEAR TAIL BUFFER POINTER         R4 26543500
         B     VRPLSRST            BRANCH TO RESET CHAIN FIELD       R4 26544000
         SPACE 1                                                     R4 26544500
VRPLSNGL SLR   R0,R0               CLEAR HEAD BUFFER POINTER         R4 26545000
         SLR   R1,R1               CLEAR TAIL BUFFER POINTER         R4 26545500
         CDS   R14,R0,ICEOUTHD     ATTEMPT TO RESET QUEUE            R4 26546000
         BNE   VRPLSDEQ            RETRY IF UNSUCCESSFUL             R4 26546500
         LA    R0,ICEOUTHD         GET LAST BUFFER CHAIN INDIC       R4 26547000
         SPACE 1                                                     R4 26547500
VRPLSRST CS    R0,R1,RPLNEXT       ATTEMPT TO RESET CHAIN FIELD      R4 26548000
         BNE   VRPLSRST            LOOP UNTIL SUCCESSFUL             R4 26548500
         MVI   RPLOPT1,RPLSEQ      SHOW SYNCHRONOUS REQUEST          R4 26549000
         SLR   R0,R0               CLEAR REQUEST PARAMETER REG       R4 26549500
         IC    R0,RPLREQ           GET   REQUEST TYPE FROM RPL       R4 26550000
         LR    R1,MBUF             LOAD RPL ADDRESS                  R4 26550500
         LA    R13,RPLSAVEA        PROVIDE SAVEAREA FOR VTAM         R4 26551000
         L     R15,RPLDACB                 GET ADDRESS OF ACB        R4 26551500
         L     R15,ACBINRTN-ACBDSECT(,R15)  INTERFACE ROUTINE        R4 26552000
         BALR  R14,R15             LINK TO THE INTERFACE ROUTINE     R4 26552500
         LTR   R15,R15             CHECK FOR SUCCESSFUL COMPLETION   R4 26553000
         BZ    VRPLSAOK            BRANCH IF ERROR FREE COMPLETION   R4 26553500
         LR    ML,WF               RESTORE VTAM EXIT RETURN ADDRESS  R4 26554000
         B     VBUFPOST            QUE BUF TO L.M. & RETURN TO VTAM  R4 26554500
         DROP  ,                   FORGET ALL ADDRESSABILITY         R4 26555000
         TITLE 'HASP VTAM API -- SUBROUTINES'                        R4 26555500
*********************************************************************** 26556000
*                                                                     * 26556500
*        SUBROUTINE TO QUEUE AN ICE TO THE LINE MANAGER               * 26557000
*                                                                     * 26557500
*********************************************************************** 26558000
         SPACE 2                                                     R4 26558500
         USING HASPVTAM,MBASE2     SHOW COMMON ADDRESSABILITY        R4 26559000
         USING HCTDSECT,BASE1      SHOW HCT ADDRESSABILITY           R4 26559500
         USING DCTDSECT,MDCT       SHOW DCT ADDRESSABILITY           R4 26560000
         USING ICEDSECT,MICE       SHOW ICE ADDRESSABILITY           R4 26560500
         SPACE 2                                                     R4 26561000
VICEPOST DS    0H                  QUEUE THE ICE TO LINE MANAGER     R4 26561500
         L     R1,DCTPCE           GET PCE ADDRESS FROM LOGON DCT    R4 26562000
         USING PCEDSECT,R1         SHOW PCE ADDRESSABILITY           R4 26562500
         SLL   R2,24               SHIFT REQ ACTION CODE TO LEFT     R4 26563000
         L     R15,ICEXTCHN        GET ICE EXIT ROUT CHAIN FIELD     R4 26563500
VICECHCK LTR   R15,R15             CHECK IF ICE IS ALREADY QUEUED    R4 26564000
         BNZ   VICEUPDT            UPDATE ACTION CODE IF YES         R4 26564500
         L     R0,MICEQUE          GET ICE QUEUE HEAD POINTER        R4 26565000
         SPACE 1                                                     R4 26565500
VICERTRY LR    R14,R0              COPY ICE QUEUE HEAD POINTER       R4 26566000
         LA    R14,0(,R14)           PURIFY ADDRESS                  R4 26566500
         ALR   R14,R2                 ADD REQ ACTION CODE TO IT      R4 26567000
         CS    R15,R14,ICEXTCHN    ATTEMPT TO STORE CHAIN ADDR       R4 26567500
         BNE   VICEUPDT            BRANCH IF CHANGED MEANWHILE       R4 26568000
         LR    R15,R14             RELOAD REG15 FOR RETRY CASE       R4 26568500
         CS    R0,MICE,MICEQUE     ATTEMPT TO CHAIN ICE TO QUEUE     R4 26569000
         BE    VMLMPOST            POST LINE MANAGER IF QUEUED       R4 26569500
         B     VICERTRY            RETRY IF UNSUCCESSFUL             R4 26570000
         SPACE 1                                                     R4 26570500
VICEUPDT LA    R14,0(,R15)         PURIFY CHAIN ADDRESS OF ICE       R4 26571000
         ALR   R14,R2              ADD ACTION CODE TO CHAIN ADDR     R4 26571500
         CLR   R14,R15             CHECK SEVERITY OF NEW REQ ACTION  R4 26572000
         BNHR  ML                  RETURN TO CALLER IF NOT HIGHER    R4 26572500
         CS    R15,R14,ICEXTCHN    ATTEMPT TO UPDATE ACTION CODE     R4 26573000
         BER   ML                  RETURN TO CALLER IF STORED        R4 26573500
         B     VICECHCK            RETRY IF UNSUCCESSFUL             R4 26574000
         SPACE 2                                                     R4 26574500
         DROP  R1                  RELEASE PCE ADDRESSABILITY        R4 26575000
         EJECT                                                       R4 26575500
*********************************************************************** 26576000
*                                                                     * 26576500
*        SUBROUTINE TO QUEUE A LOGON DCT TO LINE MANAGER              * 26577000
*                                                                     * 26577500
*********************************************************************** 26578000
         SPACE 2                                                     R4 26578500
VDCTPOST DS    0H                  QUEUE LOGON DCT TO LINE MANAGER   R4 26579000
         L     R1,DCTPCE           PICK UP PCE ADDRESS FROM PCE      R4 26579500
         USING PCEDSECT,R1         SHOW PCE ADDRESSABILITY           R4 26580000
         SLL   R2,24               SHIFT REQ ACTION CODE TO LEFT     R4 26580500
         L     R15,MDCTEXIT        GET DCT EXIT ROUT CHAIN FIELD     R4 26581000
VDCTCHCK LTR   R15,R15             CHECK IF DCT IS ALREADY QUEUED    R4 26581500
         BNZ   VDCTUPDT            UPDATE ACTION CODE IF YES         R4 26582000
         L     R0,MLOGQUE          GET DCT QUEUE HEAD POINTER        R4 26582500
VDCTRTRY LR    R14,R0              COPY DCT QUEUE HEAD POINTER       R4 26583000
         LA    R14,0(,R14)           PURIFY ADDRESS                  R4 26583500
         ALR   R14,R2                 ADD REQ ACTION CODE TO IT      R4 26584000
         CS    R15,R14,MDCTEXIT    ATTEMPT TO STORE CHAIN ADDR       R4 26584500
         BNE   VDCTUPDT            BRANCH IF CHANGED MEANWHILE       R4 26585000
         LR    R15,R14             RELOAD REG15 FOR RETRY CASE       R4 26585500
         CS    R0,MDCT,MLOGQUE     ATTEMPT TO CHAIN DCT TO QUEUE     R4 26586000
         BE    VMLMPOST            POST LINE MANAGER IF CHAINED      R4 26586500
         B     VDCTRTRY            RETRY IF UNSUCCESSFUL             R4 26587000
         SPACE 1                                                     R4 26587500
VDCTUPDT LA    R14,0(,R15)         PURIFY CHAIN ADDRESS OF DCT       R4 26588000
         ALR   R14,R2              ADD ACTION CODE TO CHAIN ADDR     R4 26588500
         CLR   R14,R15             CHECK SEVERITY OF NEW REQ ACTION  R4 26589000
         BNHR  ML                  RETURN TO CALLER IF NOT HIGHER    R4 26589500
         CS    R15,R14,MDCTEXIT    ATTEMPT TO UPDATE ACTION CODE     R4 26590000
         BER   ML                  RETURN TO CALLER IF STORED        R4 26590500
         B     VDCTCHCK             RETRY IF UNSUCCESSFUL            R4 26591000
         SPACE 2                                                     R4 26591500
         DROP  R1                  RELEASE PCE ADDRESSABILITY        R4 26592000
         EJECT                                                       R4 26592500
*********************************************************************** 26593000
*                                                                     * 26593500
*        SUBROUTINE TO QUEUE A BUFFER TO THE LINE MANAGER             * 26594000
*                                                                     * 26594500
*********************************************************************** 26595000
         SPACE 2                                                     R4 26595500
         USING RPLDSECT,R1         PROVIDE RPL ADDRESSABILITY        R4 26596000
         SPACE 1                                                     R4 26596500
VBUFPOST DS    0H                  QUEUE BUFFER TO LINE MANAGER      R4 26597000
         LA    R1,0(,R1)           CLEAR HIGH ORDER BYTE RPL   @OZ20651 26597200
         L     R0,$RJECHEQ         GET BUFFER QUEUE HEAD POINTER     R4 26597500
SKIP1790 ST    R0,RPLNEXT          ADD BUFFER TO RJE REQ END QUEUE   R4 26598000
         CS    R0,R1,$RJECHEQ      ATTEMPT TO UPDATE QUEUE POINTER   R4 26598500
         BNE   SKIP1790            RETRY IF UNSUCCESSFUL             R4 26599000
         DROP  R1                  RELEASE RPL ADDRESSABILITY        R4 26599500
         SPACE 3                                                     R4 26600000
*********************************************************************** 26600500
*                                                                     * 26601000
*        SUBROUTINE TO POST THE LINE MANAGER (QUICK POST ATTEMPT)     * 26601500
*                                                                     * 26602000
*********************************************************************** 26602500
         SPACE 2                                                     R4 26603000
VMLMPOST DS    0H                  POST THE LINE MANAGER AND JES     R4 26603500
         L     R10,=X'40000000'    GET POST COMPLETION CODE          R4 26604000
         L     R15,$SSVT           GET ADDRESS OF SSVT               R4 26604500
         USING $SVDSECT,R15        TEMPORARY SSVT ADDRESSABILITY     R4 26605000
         MVI   $SVMLLM,X'FF'       SET MLLM $POST REQUESTED          R4 26605500
         DROP  R15                 RELEASE SSVT TEMP. ADDRESSABILITY R4 26606000
         L     R15,$HASPECB        GET HASP ECB ADDRESS              R4 26606500
         MVI   $SVPOSTW(R15),X'FF' SET HASP DISPATCHER POST          R4 26607000
         SPACE 1                                                     R4 26607500
         L     R1,0(,R15)          CHECK THE ECB FOR                 R4 26608000
SKIP1800 LTR   R1,R1                HASP TASK WAITING                R4 26608500
         BM    VPOSTIT             DO LONG POST IF YES               R4 26609000
         CS    R1,R10,0(R15)       ATTEMPT TO QUICK POST             R4 26609500
         BNE   SKIP1800            RETRY IF UNSUCCESSFUL             R4 26610000
         BR    ML                  RETURN TO CALLER                  R4 26610500
         EJECT                                                       R4 26611000
*********************************************************************** 26611500
*                                                                     * 26612000
*        SUBROUTINE TO POST THE LINE MANAGER (VIA BRANCH ENTRY)       * 26612500
*              (REGS R0-R2,R10-R15 VOLATILE ACROSS ROUTINE)           * 26613000
*                                                                     * 26613500
*********************************************************************** 26614000
         SPACE 2                                                     R4 26614500
VPOSTIT  DS    0H                  ZERO KEY AND LOCAL LOCK FOR POST  R4 26615000
         SLR   R2,R2               ASSUME ZERO PROTECTION KEY        R4 26615500
         L     R1,PSATOLD-PSADSECT  PICK UP OLD TCB ADDRESS         R41 26616000
         LTR   R1,R1               TEST FOR NO TCB ADDR PRESENT     R41 26616500
         BZ    VPOSTLCK            SKIP MODESETS IF IN SRB MODE     R41 26617000
         SPACE 1                                                     R4 26617500
         MODESET MODE=SUP          ENTER SUPERVISOR STATE            R4 26618000
         SPACE 1                                                     R4 26618500
         MODESET EXTKEY=ZERO,SAVEKEY=(2) GET PROPER PSW KEY          R4 26619000
         SPACE 2                                                     R4 26619500
VPOSTLCK DS    0H                  GET LOCAL LOCK                    R4 26620000
         SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,RELATED=VPOSTREL      R4 26620500
         SPACE 1                                                     R4 26621000
         L     BASE1,=V(HASPNUC)   RELOAD HCT ADDRESS                R4 26621500
         L     R11,$HASPECB        RELOAD HASP ECB ADDRESS           R4 26622000
         DROP  BASE1               SHOW HCT ADDRESSABILITY KILLED    R4 26622500
         L     R1,CVTPTR           GET CVT ADDRESS                   R4 26623000
         USING CVTDSECT,R1         TEMPORARY CVT ADDRESSABILITY      R4 26623500
         L     R15,CVT0PT02        GET POST BRANCH ENTRY             R4 26624000
         BALR  R14,R15             ENTER POST ROUTINE                R4 26624500
         DROP  R1                  RELEASE TEMPORARY CVT BASE        R4 26625000
         EJECT                                                       R4 26625500
VPOSTREL DS    0H                  RELEASE LOCAL LOCK                R4 26626000
         SETLOCK RELEASE,TYPE=LOCAL,RELATED=VPOSTLCK                 R4 26626500
         SPACE 1                                                     R4 26627000
         L     BASE1,=V(HASPNUC)   RELOAD HCT ADDRESS                R4 26627500
         LTR   R2,R2               CHECK OLD PROTECTION KEY          R4 26628000
         BZR   ML                  RETURN TO CALLER IF IT WAS ZERO   R4 26628500
         SPACE 1                                                     R4 26629000
         MODESET EXTKEY=HASP       RETURN TO OLD PROTECT KEY         R4 26629500
         BR    ML                  RETURN TO CALLER                  R4 26630000
         SPACE 2                                                     R4 26630500
         DROP  ,                                                     R4 26631000
         SPACE 2                                                     R4 26631500
         LTORG                                                       R4 26632000
         SPACE 2                                                     R4 26632500
$DLENGTH $DLENGTH                  DISPLAY LENGTH OF ASSEMBLY        R4 26633000
APARNUM  DC    CL5'34189'          APAR NUMBER                          26633498
         END   ,                                                     R4 26633500
