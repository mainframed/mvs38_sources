         TITLE 'IFCEEDIT-EDIT MODULE FOR IFCEREP0                      *00001000
                        '                                               00002000
IFCEEDIT CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL1(16)                                             0001 00007000
         DC    C'IFCEEDIT  78.023'                                 0001 00008000
         DROP  @15                                                      00009000
@PROLOG  ST    @14,12(,@13)                                        0001 00010000
         STM   @00,@12,20(@13)                                     0001 00011000
         BALR  @11,0                                               0001 00012000
@PSTART  DS    0H                                                  0001 00013000
         USING @PSTART,@11                                         0001 00014000
         ST    @13,@SA00001+4                                      0001 00015000
         LA    @14,@SA00001                                        0001 00016000
         ST    @14,8(,@13)                                         0001 00017000
         LR    @13,@14                                             0001 00018000
*                                                                       00019000
*        THESE ARE USED FOR LENGH VALUES                                00020000
*                                                                       00021000
L0       EQU   0                                                        00022000
L1       EQU   1                                                        00023000
L2       EQU   2                                                        00024000
L3       EQU   3                                                        00025000
L4       EQU   4                                                        00026000
L5       EQU   5                                                        00027000
L6       EQU   6                                                        00028000
L7       EQU   7                                                        00029000
L8       EQU   8                                                        00030000
L12      EQU   12                                                       00031000
L14      EQU   14                                                       00032000
L15      EQU   15                                                       00033000
L16      EQU   16                                                       00034000
L17      EQU   17                                                       00035000
L18      EQU   18                                                       00036000
L20      EQU   20                                                       00037000
L24      EQU   24                                                       00038000
L28      EQU   28                                                       00039000
L29      EQU   29                                                       00040000
L32      EQU   32                                                       00041000
L119     EQU   119                                                      00042000
L127     EQU   127                                                      00043000
*                                                                       00044000
*        FOR MASKS                                                      00045000
*                                                                       00046000
*                                                                       00047000
HEX01    EQU   X'01'                                                    00048000
HEX02    EQU   X'02'                                                    00049000
HEX08    EQU   X'08'                                                    00050000
HEX09    EQU   X'09'                                                    00051000
HEX0A    EQU   X'0A'                                                    00052000
HEX0B    EQU   X'0B'                                                    00053000
HEX0C    EQU   X'0C'                                                    00054000
HEX0D    EQU   X'0D'                                                    00055000
HEX0E    EQU   X'0E'                                                    00056000
HEX0F    EQU   X'0F'                                                    00057000
HEX7F    EQU   X'7F'                                                    00058000
HEX80    EQU   X'80'                                                    00059000
HEXFE    EQU   X'FE'                                                    00060000
HEXFF    EQU   X'FF'                                                    00061000
*                                                                       00062000
*        MISC                                                           00063000
*                                                                       00064000
STAR     EQU   C'*'                                                     00065000
DOLLAR   EQU   C'$'                                                     00066000
BLANK    EQU   C' '                                                     00067000
         B     @PB00002                                            0083 00068000
PRINTIT  STM   @14,@12,@SA00002                                    0083 00069000
*  SWAPR2 = R2;                   /* SAVE R2                 @Z427VLS*/ 00070000
         ST    R2,SWAPR2                                           0084 00071000
*  R2 = SAVER2;                   /* COMMUNICATIONS ADDRESS  @Z427VLS*/ 00072000
         L     @10,SAVER2                                          0085 00073000
         LR    R2,@10                                              0085 00074000
*  MOVETOLN = MOVELINE;           /* OUTPUT LINE             @Z427VLS*/ 00075000
         MVC   MOVETOLN(133),MOVELINE                              0086 00076000
*  PRINTADR = ADDR(DUMBUFF);                               /*@Z427VLS*/ 00077000
         LA    @15,DUMBUFF                                         0087 00078000
         ST    @15,PRINTADR(,@10)                                  0087 00079000
*  CALL IOHND(RITEPRTR);                                   /*@Z427VLS*/ 00080000
         L     @15,ADIOHND(,@10)                                   0088 00081000
         LA    @01,@AL00088                                        0088 00082000
         BALR  @14,@15                                             0088 00083000
*  PRBUFF = DUMBUFF(3:120);                                /*@Z427VLS*/ 00084000
         MVI   PRBUFF+118,C' '                                     0089 00085000
         MVC   PRBUFF+119(14),PRBUFF+118                           0089 00086000
         MVC   PRBUFF(118),DUMBUFF+2                               0089 00087000
*  R2 = SWAPR2;                                            /*@Z427VLS*/ 00088000
         L     R2,SWAPR2                                           0090 00089000
* END;                                                     /*@Z427VLS*/ 00090000
@EL00002 DS    0H                                                  0091 00091000
@EF00002 DS    0H                                                  0091 00092000
@ER00002 LM    @14,@12,@SA00002                                    0091 00093000
         BR    @14                                                 0091 00094000
@PB00002 DS    0H                                                  0092 00095000
*/********************************************************************/ 00096000
*/*                                                          @Z427VLS*/ 00097000
*/*      SET UP PRIOR TO PROCESSING                          @Z427VLS*/ 00098000
*/*                                                          @Z427VLS*/ 00099000
*/********************************************************************/ 00100000
*        SAVER2 = R2;                                      /*@Z427VLS*/ 00101000
         ST    R2,SAVER2                                           0092 00102000
*         SAVER7 = R7;                                     /*@Z427VLS*/ 00103000
         ST    R7,SAVER7                                           0093 00104000
*        EDPRBUF=ADDR(PRBUFF);          /* SAVE PRINT BUFF PTR       */ 00105000
         LA    @10,PRBUFF                                          0094 00106000
         ST    @10,EDPRBUF                                         0094 00107000
*/********************************************************************/ 00108000
*/*                                                          @Z427VLS*/ 00109000
*/*      SET UP FOR TABLE                                    @Z427VLS*/ 00110000
*/*                                                          @Z427VLS*/ 00111000
*/********************************************************************/ 00112000
*EDPR0000:    ;                                            /*@Z427VLS*/ 00113000
EDPR0000 DS    0H                                                  0096 00114000
*        R3 = ADDR(PRBUFF);                                /*@Z427VLS*/ 00115000
         LA    R3,PRBUFF                                           0096 00116000
*        R2 = SAVER7;                                      /*@Z427VLS*/ 00117000
         L     R2,SAVER7                                           0097 00118000
*        EDSPBASE=R9;                   /* SAVE TABLE PTR    @Z427VLS*/ 00119000
         ST    R9,EDSPBASE                                         0098 00120000
*        GEN(L     R9,L0(R9));          /* SET PTR TO ENTRIES        */ 00121000
         L     R9,L0(R9)                                                00122000
*        GEN(MVC   EDFORM(L8),L0(R9));  /* SAVE FORMAT 1 & 2 @Z427VLS*/ 00123000
         MVC   EDFORM(L8),L0(R9)                                        00124000
*        GEN(MVC   EDLBBASE(L4),L8(R9));/* SAVE LABEL PTR    @Z427VLS*/ 00125000
         MVC   EDLBBASE(L4),L8(R9)                                      00126000
*        GEN(SH    R2,L12(R9));         /* DECREMENT BY DISP IF ANY  */ 00127000
         SH    R2,L12(R9)                                               00128000
*        GEN(LA    R9,L14(R9));         /* BUMP TO FIRST TRUE ENTRY  */ 00129000
         LA    R9,L14(R9)                                               00130000
*/********************************************************************/ 00131000
*/*                                                          @Z427VLS*/ 00132000
*/*      DETERMINE SUBROUTINE TO PROCESS ENTRY FOUND-SPECIAL @Z427VLS*/ 00133000
*/*                                                          @Z427VLS*/ 00134000
*/********************************************************************/ 00135000
*EDPR0001:    ;                         /*                   @Z427VLS*/ 00136000
EDPR0001 DS    0H                                                  0105 00137000
*        IF COUNT='FF'X                 /* IS TABLE DONE     @Z427VLS*/ 00138000
*              THEN                     /* IF YES EXIT       @Z427VLS*/ 00139000
         CLI   COUNT(R9),X'FF'                                     0105 00140000
         BE    @RT00105                                            0105 00141000
*                   GOTO EDDONE;        /* IF NO CONTINUE    @Z427VLS*/ 00142000
*        IF COUNT^='FE'X                /* IS ANOTHER TABLE  @Z427VLS*/ 00143000
*              THEN                     /* WANTED            @Z427VLS*/ 00144000
         CLI   COUNT(R9),X'FE'                                     0107 00145000
         BNE   @RT00107                                            0107 00146000
*                   GOTO EDPR0002;      /* BR-IF NO          @Z427VLS*/ 00147000
*        GEN(MVC   EDLOAD(L8),L1(R9));  /* PICK UP NAME OF NEEDED TBL*/ 00148000
         MVC   EDLOAD(L8),L1(R9)                                        00149000
*        DUMSW = OFF;                                      /*@Z427VLS*/ 00150000
         NI    DUMSW,B'10111111'                                   0110 00151000
*        IF DEBUG1 = ON THEN  /*PRINT THE NAME OF THE EDIT MODULE */    00152000
         L     @10,SAVER2                                          0111 00153000
         TM    DEBUG1(@10),B'01000000'                             0111 00154000
         BNO   @RF00111                                            0111 00155000
*         DO;                 /*THAT IS PRODUCING THE FOLLOWING   */    00156000
*          BUG1(8:15) = EDLOAD;/*LINES OF PRINT              @0001VLS*/ 00157000
         MVC   BUG1+7(8),EDLOAD                                    0113 00158000
*          PRBUFF = BUG1;    /*MOVE THE LINE OF INFO TO PRINT BUFFER*/  00159000
         MVI   PRBUFF+50,C' '                                      0114 00160000
         MVC   PRBUFF+51(82),PRBUFF+50                             0114 00161000
         MVC   PRBUFF(50),BUG1                                     0114 00162000
*          CALL PRINTIT;     /*GO PRINT THE MODULE NAME      @0001VLS*/ 00163000
         BAL   @14,PRINTIT                                         0115 00164000
*         END;                                             /*@0001VLS*/ 00165000
*        DO I = 1 BY 1 TO EDITNUM                                  0117 00166000
*          WHILE (DUMSW = OFF);         /* SEARCH FOR NAME IN TABLE  */ 00167000
@RF00111 LA    @10,1                                               0117 00168000
         ST    @10,I                                               0117 00169000
         B     @DE00117                                            0117 00170000
@DL00117 TM    DUMSW,B'01000000'                                   0117 00171000
         BNZ   @DC00117                                            0117 00172000
*           IF EDLOAD = LOADNAME(I) THEN                           0118 00173000
         MH    @10,@CH00064                                        0118 00174000
         L     @01,SAVER2                                          0118 00175000
         L     @15,ADEDITB(,@01)                                   0118 00176000
         ST    @10,@TF00001                                        0118 00177000
         ALR   @10,@15                                             0118 00178000
         AL    @10,@CF00648                                        0118 00179000
         CLC   EDLOAD(8),LOADNAME-4(@10)                           0118 00180000
         BNE   @RF00118                                            0118 00181000
*             DO;                                          /*@Z427VLS*/ 00182000
*               R9 = LOADPTR (I);       /* SET UP ENTRY POINTER      */ 00183000
         L     @10,@TF00001                                        0120 00184000
         L     R9,LOADPTR-12(@10,@15)                              0120 00185000
*               DUMSW = ON;                                /*@Z427VLS*/ 00186000
         OI    DUMSW,B'01000000'                                   0121 00187000
*             END;                                         /*@Z427VLS*/ 00188000
*        END;                                              /*@Z427VLS*/ 00189000
@RF00118 LA    @10,1                                               0123 00190000
         AL    @10,I                                               0123 00191000
         ST    @10,I                                               0123 00192000
@DE00117 L     @01,SAVER2                                          0123 00193000
         L     @01,ADEDITB(,@01)                                   0123 00194000
         CH    @10,EDITNUM(,@01)                                   0123 00195000
         BNH   @DL00117                                            0123 00196000
@DC00117 DS    0H                                                  0124 00197000
*        IF DUMSW = OFF THEN                                       0124 00198000
         TM    DUMSW,B'01000000'                                   0124 00199000
         BNZ   @RF00124                                            0124 00200000
*          DO;                                             /*@Z427VLS*/ 00201000
*            EDITNUM = EDITNUM + 1;     /* NEXT ENTRY        @Z427VLS*/ 00202000
         L     @10,SAVER2                                          0126 00203000
         L     @10,ADEDITB(,@10)                                   0126 00204000
         LA    @15,1                                               0126 00205000
         AH    @15,EDITNUM(,@10)                                   0126 00206000
         STH   @15,EDITNUM(,@10)                                   0126 00207000
*            LOADNAME(EDITNUM) = EDLOAD;  /* NEW NAME        @Z427VLS*/ 00208000
         MH    @15,@CH00064                                        0127 00209000
         ALR   @10,@15                                             0127 00210000
         AL    @10,@CF00648                                        0127 00211000
         MVC   LOADNAME-4(8,@10),EDLOAD                            0127 00212000
*             GEN (LOADEREP EPLOC=EDLOAD);  /* LOAD IT       @G51DGVS*/ 00213000
         LOADEREP EPLOC=EDLOAD                                          00214000
*            LOADPTR(EDITNUM) = R0;       /* ENTRY POINT     @Z427VLS*/ 00215000
         L     @10,SAVER2                                          0129 00216000
         L     @10,ADEDITB(,@10)                                   0129 00217000
         LH    @01,EDITNUM(,@10)                                   0129 00218000
         MH    @01,@CH00064                                        0129 00219000
         ST    R0,LOADPTR-12(@01,@10)                              0129 00220000
*            R9 = R0;                                      /*@Z427VLS*/ 00221000
         LR    R9,R0                                               0130 00222000
*          END;                                            /*@Z427VLS*/ 00223000
*        GOTO  EDPR0000 ;               /* LOOP BACK TO SET UP AGAIN */ 00224000
         B     EDPR0000                                            0132 00225000
*/********************************************************************/ 00226000
*/*                                                          @Z427VLS*/ 00227000
*/*      END OF TABLE ROUTINE   BLOCK GENERATE FOR SPECIAL HNDLING   */ 00228000
*/*                                                          @Z427VLS*/ 00229000
*/********************************************************************/ 00230000
*EDDONE :     ;                                            /*@Z427VLS*/ 00231000
EDDONE   DS    0H                                                  0134 00232000
*GENERATE ;                                                /*@Z427VLS*/ 00233000
         MVC   EDFORM1(L6),L1(R9)       PICK UP DUMP VALUES             00234000
EDDONE1  BAL   R9,EDHEXDMP              NO-DUMP RECORD IN HEX           00235000
         L     R9,EDSPBASE              PICK UP TABLE ADDRESS           00236000
         B     EDEND                    EXIT                            00237000
*/********************************************************************/ 00238000
*/*                                                          @Z427VLS*/ 00239000
*/*      DETERMINE NORMAL ENTRY TYPE                         @Z427VLS*/ 00240000
*/*                                                          @Z427VLS*/ 00241000
*/********************************************************************/ 00242000
*EDPR0002:    ;                                            /*@Z427VLS*/ 00243000
EDPR0002 DS    0H                                                  0136 00244000
*        R8=ADDR(EDPR0004);             /* ADDR OF RETURN POINT      */ 00245000
         LA    R8,EDPR0004                                         0136 00246000
*        R3=R3+EDFORM(1);               /* SET PTR INTO PRNT BUFF    */ 00247000
         AH    R3,EDFORM                                           0137 00248000
*        R12=COUNT;                     /* PICK UP ENTRY COUNT       */ 00249000
         SLR   R12,R12                                             0138 00250000
         IC    R12,COUNT(,R9)                                      0138 00251000
*        R9=R9+1 ;                      /* BUMP PTR OVER COUNT       */ 00252000
         AL    R9,@CF00051                                         0139 00253000
*        IF R12=0                       /* IF COUNT ZERO-NULL LINE   */ 00254000
*              THEN                     /* NOTHING TO DO THIS LINE   */ 00255000
         LTR   R12,R12                                             0140 00256000
         BZ    @RT00140                                            0140 00257000
*                   GOTO EDPR0005;      /* GO TO END OF SECTION      */ 00258000
*EDPR0003:    ;                         /*                   @Z427VLS*/ 00259000
EDPR0003 DS    0H                                                  0143 00260000
*/*                                                          @Z427VLS*/ 00261000
*/*      BLOCK GENERATE FOR TM INST EARLY BSL WOULD NOT WORK @Z427VLS*/ 00262000
*/*                                                          @Z427VLS*/ 00263000
*GENERATE;                                                 /*@Z427VLS*/ 00264000
         TM    L1(R9),HEX08             IS ENTRY 2 BYTE BIN             00265000
         BZ    EDBIN2                   YES                             00266000
         TM    L1(R9),HEX0F             IS ENTRY  FORMAT 2              00267000
         BO    EDFORMT2                 YES                             00268000
         TM    L1(R9),HEX0E             IS ENTRY  FORMAT 1              00269000
         BO    EDFORMT1                 YES                             00270000
         TM    L1(R9),HEX0D             IS ENTRY SPECIAL RTNE           00271000
         BO    EDSPCRTN                 YES                             00272000
         TM    L1(R9),HEX0C             IS ENTRY 4 BYTE BIN             00273000
         BO    EDBIN4                   YES                             00274000
         TM    L1(R9),HEX0B             IS ENTRY CARRIAGE CNTRL         00275000
         BO    EDCCLOOP                 YES                             00276000
         TM    L1(R9),HEX0A             IS ENTRY HEX                    00277000
         BO    EDHEX                    YES                             00278000
         TM    L1(R9),HEX09             IS IT CONVERT TO DEC ENTRY      00279000
         BO    EDCONV                   YES                             00280000
*        R9=R9+4 ;                      /* NO IGNORE ENTRY   @Z427VLS*/ 00281000
         AL    R9,@CF00060                                         0144 00282000
*EDPR0004 :    ;                                           /*@Z427VLS*/ 00283000
EDPR0004 DS    0H                                                  0146 00284000
*        R12=R12-1 ;                    /* DECREMENT ENTRY COUNT     */ 00285000
         BCTR  R12,0                                               0146 00286000
*        IF R12^=0                      /* IS LINE DONE ALL ENTRIES  */ 00287000
*              THEN                     /* PROCESSED         @Z427VLS*/ 00288000
         LTR   R12,R12                                             0147 00289000
         BNZ   @RT00147                                            0147 00290000
*                   GOTO EDPR0003;      /* BR-NO MORE TO DO  @Z427VLS*/ 00291000
*/********************************************************************/ 00292000
*/*                                                          @Z427VLS*/ 00293000
*/*      SETUP TO PLACE LABELS ONTO PRINT BUFF               @Z427VLS*/ 00294000
*/*                                                          @Z427VLS*/ 00295000
*/********************************************************************/ 00296000
*RESPECIFY (R4,R6,R7,R8) RESTRICTED;                       /*@Z427VLS*/ 00297000
*EDPR0005:    ;                         /* SET UP            @Z427VLS*/ 00298000
EDPR0005 DS    0H                                                  0151 00299000
*        R3=EDPRBUF ;                   /* PICK UP BUFF ADDR @Z427VLS*/ 00300000
         L     R3,EDPRBUF                                          0151 00301000
*        R4=R3  ;                       /* SET WORK REG      @Z427VLS*/ 00302000
         LR    R4,R3                                               0152 00303000
*        R3=R3-2;                       /* DECREMENT TO START OF BUFF*/ 00304000
         BCTR  R3,0                                                0153 00305000
         BCTR  R3,0                                                0153 00306000
*        R4=R4+EDFORM(3);               /* ADD IN FORMAT 2 CONSTANT  */ 00307000
         AH    R4,EDFORM+4                                         0154 00308000
*        R8=EDLBBASE;                   /* SET LABEL PTR     @Z427VLS*/ 00309000
         L     R8,EDLBBASE                                         0155 00310000
*EDLBLOOP:    ;                                            /*@Z427VLS*/ 00311000
EDLBLOOP DS    0H                                                  0157 00312000
*        R7=R8;                         /* SET RUNNING PTR   @Z427VLS*/ 00313000
         LR    R7,R8                                               0157 00314000
*        R6=0 ;                         /* SET COUNT OF CHARS        */ 00315000
         SLR   R6,R6                                               0158 00316000
*EDLBLP01:    ;                                            /*@Z427VLS*/ 00317000
EDLBLP01 DS    0H                                                  0160 00318000
*        IF LABELST='*' |               /* IS CHAR BEING INDEXED     */ 00319000
*           LABELST='$'                 /* THE * OR $ MARKING END OF */ 00320000
*              THEN                     /* A LABEL           @Z427VLS*/ 00321000
         CLI   LABELST(R7),C'*'                                    0160 00322000
         BE    @RT00160                                            0160 00323000
         CLI   LABELST(R7),C'$'                                    0160 00324000
         BE    @RT00160                                            0160 00325000
*                   GOTO EDLBLP02;      /* BR-YES            @Z427VLS*/ 00326000
*        R6=R6+1;                       /*  BUMP R6 BY 1     @Z427VLS*/ 00327000
         LA    @10,1                                               0162 00328000
         ALR   R6,@10                                              0162 00329000
*        R7=R7+1;                       /*  BUMP PTR TO NEXT CHAR    */ 00330000
         ALR   R7,@10                                              0163 00331000
*        GOTO EDLBLP01;                 /*  BACK TO DO COMPARE       */ 00332000
         B     EDLBLP01                                            0164 00333000
*EDLBLP02:    ;                         /*                   @Z427VLS*/ 00334000
EDLBLP02 DS    0H                                                  0166 00335000
*        IF NOPRINT='1'B                /*  IS NO PRINT SWITCH SET   */ 00336000
*              THEN                     /*  IF YES SKIP TO LP03      */ 00337000
         TM    NOPRINT,B'10000000'                                 0166 00338000
         BO    @RT00166                                            0166 00339000
*                   GOTO EDLBLP03;      /*                   @Z427VLS*/ 00340000
*        IF R6=0                        /*  IF COUNT(R6) IS ZERO     */ 00341000
*              THEN                     /*  ALSO SKIP TO LP03        */ 00342000
         LTR   R6,R6                                               0168 00343000
         BZ    @RT00168                                            0168 00344000
*                   GOTO EDLBLP03;      /*                   @Z427VLS*/ 00345000
*        R6=R6-1;                       /*  IF NOT THEN DECREMENT    */ 00346000
         BCTR  R6,0                                                0170 00347000
*        GEN(EX    R6,EDLBMOVE);        /*  COUNT FOR EX TO MOVE LABL*/ 00348000
         EX    R6,EDLBMOVE                                              00349000
*EDLBLP03:    ;                         /*                   @Z427VLS*/ 00350000
EDLBLP03 DS    0H                                                  0173 00351000
*        IF LABELST='$'                 /*  IS IT END OF LINE VERSUS */ 00352000
*              THEN                     /*  END OF LABEL     @Z427VLS*/ 00353000
         CLI   LABELST(R7),C'$'                                    0173 00354000
         BE    @RT00173                                            0173 00355000
*                   GOTO EDLBLP04;      /*  BR-END OF LINE   @Z427VLS*/ 00356000
*        R8=R7+1;                       /*  SET R8 TO START NXT LABEL*/ 00357000
         LA    R8,1                                                0175 00358000
         ALR   R8,R7                                               0175 00359000
*        R4=R4+EDFORM(4);               /*  BUMP BUFF PTR BY FORMT2  */ 00360000
         AH    R4,EDFORM+6                                         0176 00361000
*        GOTO EDLBLOOP;                 /*  LOOP BACK TO GET NXT LBL */ 00362000
         B     EDLBLOOP                                            0177 00363000
*EDLBLP04:    ;                         /*  LINE SET ENTRY   @Z427VLS*/ 00364000
EDLBLP04 DS    0H                                                  0179 00365000
*        IF NOPRINT='1'B                /*  IS NO PRINT ON   @Z427VLS*/ 00366000
*              THEN                     /*  IF YES           @Z427VLS*/ 00367000
         TM    NOPRINT,B'10000000'                                 0179 00368000
         BO    @RT00179                                            0179 00369000
*                   GOTO NOPUT;         /*  SKIP PUT         @Z427VLS*/ 00370000
*        CALL PRINTIT;                                     /*@Z427VLS*/ 00371000
         BAL   @14,PRINTIT                                         0181 00372000
*/********************************************************************/ 00373000
*/*                                                          @Z427VLS*/ 00374000
*/*      CLEAR PRINT BUFF WITH BLANKS   BLOCK GENERATE       @Z427VLS*/ 00375000
*/*                                                          @Z427VLS*/ 00376000
*/********************************************************************/ 00377000
*NOPUT  :     ;                                            /*@Z427VLS*/ 00378000
NOPUT    DS    0H                                                  0183 00379000
*GENERATE ;                                                /*@Z427VLS*/ 00380000
         MVC   L1(L1,R3),L0(R3)         RESET CHARIAGE CONTROL          00381000
         MVI   L2(R3),BLANK             SET IN BLANK                    00382000
         MVC   L3(L119,R3),L2(R3)       BLANK OUT LINE                  00383000
*                                                                    *  00384000
*        OTHER  CLEANUP                                              *  00385000
*                                                                    *  00386000
         NI    FLAGS,HEX7F              TURN OF NO PRINT FLAG           00387000
         LA    R8,L1(R7)                BUMP R8 TO NEXT LABEL           00388000
         LA    R3,L2(R3)                BUMP R3 TO PRINT BUFF           00389000
         ST    R8,EDLBBASE              SAVE R8 PTR TO NXT LABEL        00390000
         B     EDPR0001                 RETURN TO TOP OF LOOP           00391000
EDLBMOVE MVC   L0(L0,R4),L0(R8)                                         00392000
*        RESPECIFY(R6,R7) UNRESTRICTED;                    /*@Z427VLS*/ 00393000
*/********************************************************************/ 00394000
*/*                                                          @Z427VLS*/ 00395000
*/*      CARRIAGE CONTROL LOOP  CHANGE CC CHAR ON THE PRINT LINE     */ 00396000
*/*                                                          @Z427VLS*/ 00397000
*/********************************************************************/ 00398000
*EDCCLOOP:    ;                                            /*@Z427VLS*/ 00399000
EDCCLOOP DS    0H                                                  0186 00400000
*        R4=EDPRBUF;                    /* PICK UP PTR TO PRINT BUFF */ 00401000
         L     R4,EDPRBUF                                          0186 00402000
*        R4=R4-2 ;                      /* BACK OFF TO CARRIAGE CNTRL*/ 00403000
         BCTR  R4,0                                                0187 00404000
         BCTR  R4,0                                                0187 00405000
*        SAVECC=CC ;                    /* FIELDS AND SAVE CURRENT CC*/ 00406000
         MVC   SAVECC(1),CC                                        0188 00407000
*        IF BEFFLD1='00'X               /* IF FIELD 1 IS ZERO        */ 00408000
*              THEN                     /* THE CURRENT CC IS TO BE   */ 00409000
         CLI   BEFFLD1(R9),X'00'                                   0189 00410000
         BE    @RT00189                                            0189 00411000
*                   GOTO EDCCLP1;       /* USED WITHOUT CHANGE       */ 00412000
*        CC=BEFFLD1;                    /* IF NOT ZERO MOVE IN FIELD */ 00413000
         MVC   CC(1),BEFFLD1(R9)                                   0191 00414000
*EDCCLP1:      ;                        /*                   @Z427VLS*/ 00415000
EDCCLP1  DS    0H                                                  0193 00416000
*        IF BEFFLD2='00'X               /* IF FIELD 2 IS ZERO        */ 00417000
*              THEN                     /* THE SAVED CC IS TO BE LEFT*/ 00418000
         CLI   BEFFLD2(R9),X'00'                                   0193 00419000
         BE    @RT00193                                            0193 00420000
*                   GOTO EDCCLP2;       /* ALONE             @Z427VLS*/ 00421000
*        SAVECC=BEFFLD2;                /* IF NOT ZERO IT IS TO BE   */ 00422000
         MVC   SAVECC(1),BEFFLD2(R9)                               0195 00423000
*EDCCLP2:      ;                        /* OVERLAYED         @Z427VLS*/ 00424000
EDCCLP2  DS    0H                                                  0197 00425000
*        R9=R9+4 ;                      /* BUMP ENTRY PTR OVER ENTRY */ 00426000
         AL    R9,@CF00060                                         0197 00427000
*        GOTO R8 ;                      /* RETURN            @Z427VLS*/ 00428000
         BR    R8                                                  0198 00429000
*/********************************************************************/ 00430000
*/*                                                          @Z427VLS*/ 00431000
*/*      CONVERT LOOP CONVERT BINARY TO DECIMAL              @Z427VLS*/ 00432000
*/*                                                          @Z427VLS*/ 00433000
*/********************************************************************/ 00434000
*        RESPECIFY (R5,R6,R7) RESTRICTED;                  /*@Z427VLS*/ 00435000
*EDCONV  :     ;                                           /*@Z427VLS*/ 00436000
EDCONV   DS    0H                                                  0201 00437000
*        R4=NOFFSET;                    /* PICK UP DATA OFFSET       */ 00438000
         SLR   R4,R4                                               0201 00439000
         ICM   R4,3,NOFFSET(R9)                                    0201 00440000
*        GEN(SRL   R4,L4);              /* DROP OFF SIGN     @Z427VLS*/ 00441000
         SRL   R4,L4                                                    00442000
*        R4=R4+R2;                      /* COMPUTE ADDRESS OF DATA   */ 00443000
         ALR   R4,R2                                               0203 00444000
*        R5=0;                          /*                   @Z427VLS*/ 00445000
         SLR   R5,R5                                               0204 00446000
*        R6=NIN;                        /* PICK UP NUMBER OF CHARS IN*/ 00447000
         SLR   R6,R6                                               0205 00448000
         IC    R6,NIN(,R9)                                         0205 00449000
*CONVLOOP:     ;                                           /*@Z427VLS*/ 00450000
CONVLOOP DS    0H                                                  0207 00451000
*        GEN(SLL   R5,L8);              /* SHIFT DATA ONE BYTE LEFT  */ 00452000
         SLL   R5,L8                                                    00453000
*        GEN(IC    R5,L0(R4));          /* PICK UP A BYTE OF DATA    */ 00454000
         IC    R5,L0(R4)                                                00455000
*        R4=R4+1;                       /* BUMP DATA POINTER TO NXT  */ 00456000
         AL    R4,@CF00051                                         0209 00457000
*        GEN(BCT   R6,CONVLOOP);        /* LOOP TILL ALL PICKED UP   */ 00458000
         BCT   R6,CONVLOOP                                              00459000
*        GEN(CVD   R5,DBLWORK);         /* CONVERT TO DECIMAL        */ 00460000
         CVD   R5,DBLWORK                                               00461000
*        GEN(UNPK  WORK(L8),DBLWORK(L8));         /* UNPACK DECIMAL  */ 00462000
         UNPK  WORK(L8),DBLWORK(L8)                                     00463000
*        GEN(MVZ   WORK+L7(L1),WORK);   /* SET UP PROPER SIGN        */ 00464000
         MVZ   WORK+L7(L1),WORK                                         00465000
*        R4=NOUT;                       /* PICK UP NBR OF CHARS OUT  */ 00466000
         SLR   R4,R4                                               0214 00467000
         IC    R4,NOUT(,R9)                                        0214 00468000
*        Y=9-R4;                                           /*@ZA24135*/ 00469000
         LA    @10,9                                               0215 00470000
         SLR   @10,R4                                              0215 00471000
         STH   @10,Y                                               0215 00472000
*        X=R4-1;                                           /*@ZA24135*/ 00473000
         LR    @15,R4                                              0216 00474000
         BCTR  @15,0                                               0216 00475000
         STH   @15,X                                               0216 00476000
*        R4=R3-ADDR(PRBUFF)+1;                             /*@ZA24135*/ 00477000
         LA    R4,PRBUFF                                           0217 00478000
         LCR   R4,R4                                               0217 00479000
         ALR   R4,R3                                               0217 00480000
         AL    R4,@CF00051                                         0217 00481000
*        PRBUFF(R4:R4+X)=WORK(Y:8);     /* MOVE DATA TO PRINT BUFF   */ 00482000
         LA    @01,PRBUFF-1(R4)                                    0218 00483000
         LA    @14,WORK-1(@10)                                     0218 00484000
         EX    @15,@SM00650                                        0218 00485000
*        R9=R9+4;                       /* BUMP POINTER TO NEXT ENTRY*/ 00486000
         AL    R9,@CF00060                                         0219 00487000
*        R3=R3+EDFORM(2);               /* BUMP PTR TO NEXT COLUMN   */ 00488000
         AH    R3,EDFORM+2                                         0220 00489000
*        GOTO  R8;                      /* RETURN TO MAINLINE        */ 00490000
         BR    R8                                                  0221 00491000
*        RESPECIFY (R5,R6,R7) UNRESTRICTED;                /*@Z427VLS*/ 00492000
*/********************************************************************/ 00493000
*/*                                                          @Z427VLS*/ 00494000
*/*      FORMAT ROUTINE RESET THE COLUMN BOUNDARIES/SPACING  VALUE   */ 00495000
*/*                                                          @Z427VLS*/ 00496000
*/********************************************************************/ 00497000
*        RESPECIFY (R5) RESTRICTED;                        /*@Z427VLS*/ 00498000
*EDFORMT1:    ;                         /* FORMAT 1 ENTRY    @Z427VLS*/ 00499000
EDFORMT1 DS    0H                                                  0225 00500000
*        R4=1;                          /* SET INDEX TO 1    @Z427VLS*/ 00501000
         LA    R4,1                                                0225 00502000
*        GOTO  EDFORMLP ;               /* GOTO COMMON       @Z427VLS*/ 00503000
         B     EDFORMLP                                            0226 00504000
*EDFORMT2:     ;                        /* FORMAT 2 ENTRY    @Z427VLS*/ 00505000
EDFORMT2 DS    0H                                                  0228 00506000
*        R4=3 ;                         /* SET INDEX TO 3    @Z427VLS*/ 00507000
         LA    R4,3                                                0228 00508000
*EDFORMLP:    ;                         /*        COMMON     @Z427VLS*/ 00509000
EDFORMLP DS    0H                                                  0230 00510000
*        R5=BEFFLD1;                    /* PICK UP VALUE IN FLD 1    */ 00511000
         SLR   R5,R5                                               0230 00512000
         IC    R5,BEFFLD1(,R9)                                     0230 00513000
*        IF R5=0                        /* IF IT IS ZERO     @Z427VLS*/ 00514000
*              THEN                     /* NO CHANGE TO      @Z427VLS*/ 00515000
         LTR   R5,R5                                               0231 00516000
         BZ    @RT00231                                            0231 00517000
*                   GOTO EDFRMLP1;      /* COLUMN START VALUE        */ 00518000
*        R5=R5-1 ;                      /* DECREMENT BY 1    @Z427VLS*/ 00519000
         BCTR  R5,0                                                0233 00520000
*        IF R4=3                        /* IF FORMAT 2 ENTRY CHANGE  */ 00521000
*              THEN                     /* DOES NO AFFECT PRESENT    */ 00522000
         C     R4,@CF00073                                         0234 00523000
         BE    @RT00234                                            0234 00524000
*                   GOTO EDFRMLP0;      /* IF FORMAT C MUST RESET R3 */ 00525000
*        R3=EDPRBUF;                    /* RESET  STARTING  COL POS  */ 00526000
         L     R3,EDPRBUF                                          0236 00527000
*        R3=R3+R5;                      /* B4 ADDING OFFSET TO PRNTBF*/ 00528000
         ALR   R3,R5                                               0237 00529000
*EDFRMLP0:    ;                         /*                   @Z427VLS*/ 00530000
EDFRMLP0 DS    0H                                                  0239 00531000
*        EDFORM(R4)=R5;                 /* SAVE VALUE        @Z427VLS*/ 00532000
         LR    @10,R4                                              0239 00533000
         ALR   @10,@10                                             0239 00534000
         STH   R5,EDFORM-2(@10)                                    0239 00535000
*EDFRMLP1:    ;                                            /*@Z427VLS*/ 00536000
EDFRMLP1 DS    0H                                                  0241 00537000
*        R5=BEFFLD2 ;                   /* PICK UP SPACING VALUE     */ 00538000
         SLR   R5,R5                                               0241 00539000
         IC    R5,BEFFLD2(,R9)                                     0241 00540000
*        IF R5=0                        /* IF VALUE IS ZERO  @Z427VLS*/ 00541000
*              THEN                     /* SPACEING DOES NOT @Z427VLS*/ 00542000
         LTR   R5,R5                                               0242 00543000
         BZ    @RT00242                                            0242 00544000
*                   GOTO EDFRMLP2;      /* CHANGE            @Z427VLS*/ 00545000
*        R4=R4+1;                       /* IF NOT ZERO BUMP TO 2ND   */ 00546000
         AL    R4,@CF00051                                         0244 00547000
*        EDFORM(R4)=R5;                 /* HALF OF FORMAT & SAVE     */ 00548000
         LR    @10,R4                                              0245 00549000
         ALR   @10,@10                                             0245 00550000
         STH   R5,EDFORM-2(@10)                                    0245 00551000
*EDFRMLP2:                              /*                   @Z427VLS*/ 00552000
*        R9=R9+4;                       /* BUMP POINTER TO NXT ENTRY */ 00553000
EDFRMLP2 AL    R9,@CF00060                                         0246 00554000
*        GOTO R8;                       /* EXIT              @Z427VLS*/ 00555000
         BR    R8                                                  0247 00556000
*        RESPECIFY (R5) UNRESTRICTED;                      /*@Z427VLS*/ 00557000
*/********************************************************************/ 00558000
*/*                                                          @Z427VLS*/ 00559000
*/*      SPECIAL ENTRY   PASSES CONTROL TO SPECIAL SECTION OF TABLE  */ 00560000
*/*                                                          @Z427VLS*/ 00561000
*/********************************************************************/ 00562000
*EDSPCRTN:    ;                                            /*@Z427VLS*/ 00563000
EDSPCRTN DS    0H                                                  0250 00564000
*        RESPECIFY (R5,R6,R7,R8) RESTRICTED;               /*@Z427VLS*/ 00565000
*        R4=0 ;                         /* ZERO WORK REG     @Z427VLS*/ 00566000
         SLR   R4,R4                                               0251 00567000
*        GEN(IC    R4,L0(R9));          /* PICK UP           @Z427VLS*/ 00568000
         IC    R4,L0(R9)                                                00569000
*        GEN(SLL   R4,L8);              /* 12 BIT            @Z427VLS*/ 00570000
         SLL   R4,L8                                                    00571000
*        GEN(IC    R4,L1(R9));          /* ADDRESS           @Z427VLS*/ 00572000
         IC    R4,L1(R9)                                                00573000
*        GEN(SRL   R4,L4);              /* OFFSET            @Z427VLS*/ 00574000
         SRL   R4,L4                                                    00575000
*        R4=R4+R2 ;                     /* ADD R2 PTR INTO REC       */ 00576000
         ALR   R4,R2                                               0256 00577000
*        R6=DOFFSET ;                   /* PICK UP SPEC RTN OFFSET   */ 00578000
         SLR   R6,R6                                               0257 00579000
         ICM   R6,3,DOFFSET(R9)                                    0257 00580000
*        GEN(SRDL  R6,L12);             /* SHIFT 12 BIT OFFSET TO R7 */ 00581000
         SRDL  R6,L12                                                   00582000
*        GEN(SRL   R7,L20);             /* R6 HAS SPACE VALUE(SPEC)  */ 00583000
         SRL   R7,L20                                                   00584000
*        R5=R6 ;                        /* SET WORK REG      @Z427VLS*/ 00585000
         LR    R5,R6                                               0260 00586000
*        R6=R9 ;                        /* SAVE CURRENT ENTRY PTR    */ 00587000
         LR    R6,R9                                               0261 00588000
*        R9=EDSPBASE;                   /* PICK UP TABLE BASE        */ 00589000
         L     R9,EDSPBASE                                         0262 00590000
*        EDSPSV9=R6 ;                   /* SAVE CURR PTR IN TABLE    */ 00591000
         STCM  R6,15,EDSPSV9(R9)                                   0263 00592000
*        LABELPTR=EDLBBASE;             /* SAVE CURR LBL PTR IN TABLE*/ 00593000
         MVC   LABELPTR(4,R9),EDLBBASE                             0264 00594000
*        R7=R7+R9 ;                     /* COMPUTE OFFSET TO SPEC RTN*/ 00595000
         ALR   R7,R9                                               0265 00596000
*        R15=R7 ;                       /* LOAD R15          @Z427VLS*/ 00597000
         LR    R15,R7                                              0266 00598000
*        RESPECIFY (R0) RESTRICTED;                        /*@Z427VLS*/ 00599000
*        R0 = EDPRBUF - 1;                                 /*@Z427VLS*/ 00600000
         L     R0,EDPRBUF                                          0268 00601000
         BCTR  R0,0                                                0268 00602000
*        GEN(BALR  R14,R15);            /* BALR TO SPECIAL RTN IN TBL*/ 00603000
         BALR  R14,R15                                                  00604000
*        RESPECIFY (R0) UNRESTRICTED;                      /*@Z427VLS*/ 00605000
*        R5=R15 ;                       /* SAVE RTN CODE     @Z427VLS*/ 00606000
         LR    R5,R15                                              0271 00607000
*        EDLBBASE=LABELPTR;             /* RESET LABEL PTR   @Z427VLS*/ 00608000
         MVC   EDLBBASE(4),LABELPTR(R9)                            0272 00609000
*        R9=EDSPSV9 ;                   /* RESET R9 WITH CURR ENTRY  */ 00610000
         ICM   R9,15,EDSPSV9(R9)                                   0273 00611000
*        R9=R9+4;                       /* PTR AND BUMP TO NXT ENTRY */ 00612000
         AL    R9,@CF00060                                         0274 00613000
*        R3=R3+EDFORM(2);               /* BUMP TO NEXT COLUMN       */ 00614000
         AH    R3,EDFORM+2                                         0275 00615000
*        IF R5=0                        /* IF RETURN CODE    @Z427VLS*/ 00616000
*              THEN                     /* IS 0 THEN         @Z427VLS*/ 00617000
         LTR   R5,R5                                               0276 00618000
         BNZ   @RF00276                                            0276 00619000
*                   NOPRINT='1'B ;      /* NOPRINT HAS BEEN REQUESTED*/ 00620000
         OI    NOPRINT,B'10000000'                                 0277 00621000
*              ELSE                     /* IF NOT ZERO       @Z427VLS*/ 00622000
*                   NOPRINT='0'B ;      /* NOPRINT SW IS OFF @Z427VLS*/ 00623000
         B     @RC00276                                            0278 00624000
@RF00276 NI    NOPRINT,B'01111111'                                 0278 00625000
*        GOTO R8 ;                      /* RETURN            @Z427VLS*/ 00626000
@RC00276 BR    R8                                                  0279 00627000
*        RESPECIFY (R5,R6,R7) UNRESTRICTED;                /*@Z427VLS*/ 00628000
*/********************************************************************/ 00629000
*/*                                                          @Z427VLS*/ 00630000
*/*      HEX ENTRY ROUTINE   PRINT OUT DATA IN HEX           @Z427VLS*/ 00631000
*/*                                                          @Z427VLS*/ 00632000
*/********************************************************************/ 00633000
*        RESPECIFY (R1,R5,R6,R7) RESTRICTED;               /*@Z427VLS*/ 00634000
*EDHEX  :     ;                                            /*@Z427VLS*/ 00635000
EDHEX    DS    0H                                                  0283 00636000
*        EDSPSV8=R8;                    /* SAVE RTN POINT    @Z427VLS*/ 00637000
         ST    R8,EDSPSV8                                          0283 00638000
*        R1=R3;                         /* SET PTR FOR WORK  @Z427VLS*/ 00639000
         LR    R1,R3                                               0284 00640000
*        R4=0 ;                         /* ZERO R4           @Z427VLS*/ 00641000
         SLR   R4,R4                                               0285 00642000
*        GEN(IC    R4,L0(R9));          /* PICK UP           @Z427VLS*/ 00643000
         IC    R4,L0(R9)                                                00644000
*        GEN(SLL   R4,L8);              /* 12 BIT            @Z427VLS*/ 00645000
         SLL   R4,L8                                                    00646000
*        GEN(IC    R4,L1(R9));          /* OFFSET            @Z427VLS*/ 00647000
         IC    R4,L1(R9)                                                00648000
*        GEN(SRL   R4,L4);              /* TO ADD TO REC     @Z427VLS*/ 00649000
         SRL   R4,L4                                                    00650000
*        R4=R4+R2;                      /* ADD OFFSET-PTR INTO REC   */ 00651000
         ALR   R4,R2                                               0290 00652000
*        R6=0 ;                         /*                   @Z427VLS*/ 00653000
         SLR   R6,R6                                               0291 00654000
*        GEN(IC    R6,L3(R9));          /* PICK UP NUMBER    @Z427VLS*/ 00655000
         IC    R6,L3(R9)                                                00656000
*        GEN(SRL   R6,L4);              /* OF CHARS TO DO    @Z427VLS*/ 00657000
         SRL   R6,L4                                                    00658000
*        IF R6=0                        /* IF NO. OF CHARS   @Z427VLS*/ 00659000
*              THEN                     /* IS ZERO           @Z427VLS*/ 00660000
         LTR   R6,R6                                               0294 00661000
         BZ    @RT00294                                            0294 00662000
*                   GOTO EDHLOOP3;      /* SKIP TO LOOP3     @Z427VLS*/ 00663000
*        R8=ADDR(CHARTAB);              /* SET PTR TO EBCDIC CHARS   */ 00664000
         LA    R8,CHARTAB                                          0296 00665000
*EDHLOOP:    ;                          /*                   @Z427VLS*/ 00666000
EDHLOOP  DS    0H                                                  0298 00667000
*        R5=0;                          /*                   @Z427VLS*/ 00668000
         SLR   R5,R5                                               0298 00669000
*        GEN(IC    R5,L2(R9));          /* PICK UP SPACEING BTWN CHAR*/ 00670000
         IC    R5,L2(R9)                                                00671000
*        R7=127 ;                       /* SET VALUE 7F FOR ANDING   */ 00672000
         LA    R7,127                                              0300 00673000
*        GEN(NR    R5,R7);              /* DROP OF UNUSED BITS       */ 00674000
         NR    R5,R7                                                    00675000
*        IF ACMIN^='1'B                 /* IF SWITCH SET VALUE IS A  */ 00676000
*              THEN                     /* NEGATIVE OFFSET   @Z427VLS*/ 00677000
         TM    ACMIN(R9),B'10000000'                               0302 00678000
         BNO   @RT00302                                            0302 00679000
*                   GOTO EDHLOOP0;      /* SWITCH OFF IS SPACE VALUE */ 00680000
*        R1=R1-R5 ;                     /* ON-DECREMENT WORK PTR TO  */ 00681000
         SLR   R1,R5                                               0304 00682000
*        R5=0 ;                         /* BUFFER & SET SPACE VALUE=0*/ 00683000
         SLR   R5,R5                                               0305 00684000
*EDHLOOP0:    ;                         /*                   @Z427VLS*/ 00685000
EDHLOOP0 DS    0H                                                  0307 00686000
*        GEN(TM    L3(R9),HEX01);       /* IS RIGHT HALF ONLY ASKED  */ 00687000
         TM    L3(R9),HEX01                                             00688000
*        GEN(BZ    EDHLOOP1);           /* FOR IF SW OFF-BR-YES      */ 00689000
         BZ    EDHLOOP1                                                 00690000
*        R7=0 ;                         /* IF ON LEFT HALF WANTED    */ 00691000
         SLR   R7,R7                                               0309 00692000
*        GEN(IC    R7,L0(R4));          /* PICK UP BYTE INDEXED TO   */ 00693000
         IC    R7,L0(R4)                                                00694000
*        GEN(SRL   R7,L4);              /* DROP RIGHT HALF   @Z427VLS*/ 00695000
         SRL   R7,L4                                                    00696000
*        R7=R7+R8;                      /* INDEX INTO CHAR TABLE     */ 00697000
         ALR   R7,R8                                               0312 00698000
*        GEN(MVC   L0(L0,R1),L0(R7));   /* MOVE IN INDEXED CHAR      */ 00699000
         MVC   L0(L0,R1),L0(R7)                                         00700000
*EDHLOOP1:    ;                         /*                   @Z427VLS*/ 00701000
EDHLOOP1 DS    0H                                                  0315 00702000
*        GEN(TM    L3(R9),HEX02);       /* IS LEFT HALF ONLY ASKED   */ 00703000
         TM    L3(R9),HEX02                                             00704000
*        GEN(BZ    EDHLOOP2);           /* FOR IF SW OFF-BR-YES      */ 00705000
         BZ    EDHLOOP2                                                 00706000
*        GEN(IC    R7,L0(R4));          /* IF ON RIGHT HALF WANTED   */ 00707000
         IC    R7,L0(R4)                                                00708000
*        GEN(SLL   R7,L28);             /* PICK UP INDEXED BYTE &    */ 00709000
         SLL   R7,L28                                                   00710000
*        GEN(SRL   R7,L28);             /* DROP UNUSED BITS E        */ 00711000
         SRL   R7,L28                                                   00712000
*        R7=R7+R8;                      /* INDEX INTO CHAR TABLE     */ 00713000
         ALR   R7,R8                                               0320 00714000
*        GEN(MVC   L1(L1,R1),L0(R7));   /* MOVE IN INDEXED CHAR      */ 00715000
         MVC   L1(L1,R1),L0(R7)                                         00716000
*EDHLOOP2:    ;                         /*                   @Z427VLS*/ 00717000
EDHLOOP2 DS    0H                                                  0323 00718000
*        R4=R4+1 ;                      /* BUMP PTR TO NEXT INPUT CHR*/ 00719000
         AL    R4,@CF00051                                         0323 00720000
*        R1=R1+R5+2;                    /* BUMP OUT BUFF PTR BY 2+   */ 00721000
         LR    @10,R1                                              0324 00722000
         ALR   @10,R5                                              0324 00723000
         AL    @10,@CF00071                                        0324 00724000
         LR    R1,@10                                              0324 00725000
*        R6=R6-1;                       /* SPACING VALUE DECREMENT LP*/ 00726000
         BCTR  R6,0                                                0325 00727000
*        IF R6^=0                       /* COUNT IF IT IS NOT ZERO   */ 00728000
*              THEN                     /* LOOP BACK TO      @Z427VLS*/ 00729000
         LTR   R6,R6                                               0326 00730000
         BNZ   @RT00326                                            0326 00731000
*                   GOTO EDHLOOP0;      /* LOOP0             @Z427VLS*/ 00732000
*EDHLOOP3:    ;                         /* IF IS ZERO DONE   @Z427VLS*/ 00733000
EDHLOOP3 DS    0H                                                  0329 00734000
*        R9=R9+4;                       /* BUMP TO NEXT ENTRY        */ 00735000
         AL    R9,@CF00060                                         0329 00736000
*        R3=R3+EDFORM(2);               /* BUMR BUFF PTR TO NXT COL  */ 00737000
         AH    R3,EDFORM+2                                         0330 00738000
*        R8=EDSPSV8;                    /* RESTORE R8        @Z427VLS*/ 00739000
         L     R8,EDSPSV8                                          0331 00740000
*        GOTO R8;                       /* RETURN            @Z427VLS*/ 00741000
         BR    R8                                                  0332 00742000
*        RESPECIFY (R1,R5,R6,R7) UNRESTRICTED;             /*@Z427VLS*/ 00743000
*/********************************************************************/ 00744000
*/*                                                          @Z427VLS*/ 00745000
*/*      BINARY ENTRIES (2/4 BYTE)  PRINTS OUT BINARY BITS(MAX 32)   */ 00746000
*/*                                                          @Z427VLS*/ 00747000
*/********************************************************************/ 00748000
*        RESPECIFY (R1,R5,R6,R7) RESTRICTED;               /*@Z427VLS*/ 00749000
*EDBIN2 :     ;                         /* TWO BYTE ENTRY POINT      */ 00750000
EDBIN2   DS    0H                                                  0336 00751000
*        EDSPSV8=R8 ;                   /* SAVE RTN PTR      @Z427VLS*/ 00752000
         ST    R8,EDSPSV8                                          0336 00753000
*        EDSPSV5=2;                     /* SET IN NO. OF BYTE ENTRY  */ 00754000
         MVC   EDSPSV5(4),@CF00071                                 0337 00755000
*        GEN(IC    R4,L1(R9));          /* PICK UP SHIFT CHARACTER   */ 00756000
         IC    R4,L1(R9)                                                00757000
*        GEN(SLL   R4,L29);             /* DROP ALL BUT LOW  @Z427VLS*/ 00758000
         SLL   R4,L29                                                   00759000
*        GEN(SRL   R4,L29);             /* ORDER 3 BITS      @Z427VLS*/ 00760000
         SRL   R4,L29                                                   00761000
*        R8=R3;                         /* SET PTR OF BUFF TO WORK R8*/ 00762000
         LR    R8,R3                                               0341 00763000
*        R7=1 ;                         /* SET NO. OF CHARS TO DO    */ 00764000
         LA    R7,1                                                0342 00765000
*        GOTO EDOFFSET ;                /* BR-COMMON         @Z427VLS*/ 00766000
         B     EDOFFSET                                            0343 00767000
*EDBIN4 :     ;                         /* 4 BYTE ENTRY POINT        */ 00768000
EDBIN4   DS    0H                                                  0345 00769000
*        EDSPSV8=R8;                    /* SAVE RTN ADDR     @Z427VLS*/ 00770000
         ST    R8,EDSPSV8                                          0345 00771000
*        EDSPSV5=4 ;                    /* SET VALUE TO INDICATE 4   */ 00772000
         MVC   EDSPSV5(4),@CF00060                                 0346 00773000
*        R4=0 ;                         /* BYTE ENTRY        @Z427VLS*/ 00774000
         SLR   R4,R4                                               0347 00775000
*        GEN(IC    R4,L3(R9));          /* PICK UP SHIFT & NO. CHAR  */ 00776000
         IC    R4,L3(R9)                                                00777000
*        R7=R4 ;                        /* SAVE VALUE IN R7  @Z427VLS*/ 00778000
         LR    R7,R4                                               0349 00779000
*        GEN(SLL   R4,L29);             /* DROP ALL BUT LAST 3 BITS  */ 00780000
         SLL   R4,L29                                                   00781000
*        GEN(SRL   R4,L29);             /* SHIFT VALUE       @Z427VLS*/ 00782000
         SRL   R4,L29                                                   00783000
*        GEN(SRL   R7,L4);              /* R7 HAS NO. OF CHARS TO DO */ 00784000
         SRL   R7,L4                                                    00785000
*        GEN(IC    R5,L2(R9));          /* PICK UP SPACE BTWN CHAR   */ 00786000
         IC    R5,L2(R9)                                                00787000
*        R6=127 ;                       /* AND OFF ALL       @Z427VLS*/ 00788000
         LA    R6,127                                              0354 00789000
*        GEN(NR    R5,R6);              /* UNUSED BITS       @Z427VLS*/ 00790000
         NR    R5,R6                                                    00791000
*        R8=R3 ;                        /* SET PTR TO BUFF IN WORK   */ 00792000
         LR    R8,R3                                               0356 00793000
*        IF ACMIN^='1'B                 /* IF BIT IS OFF VALUE IN R5 */ 00794000
*              THEN                     /* IS SPACE BETWEEN CHARS    */ 00795000
         TM    ACMIN(R9),B'10000000'                               0357 00796000
         BNO   @RT00357                                            0357 00797000
*                   GOTO EDBIN4A;       /* IF IT IS ON VALUE A NEG   */ 00798000
*        R8=R8-R5;                      /* OFFSET TO BE DECREMENTED  */ 00799000
         SLR   R8,R5                                               0359 00800000
*        R5=0 ;                         /* THEN SPACE BTWN=0 @Z427VLS*/ 00801000
         SLR   R5,R5                                               0360 00802000
*EDBIN4A:     ;                         /*                   @Z427VLS*/ 00803000
EDBIN4A  DS    0H                                                  0362 00804000
*        IF R7=0                        /* ANY CHARS TO DO   @Z427VLS*/ 00805000
*              THEN                     /* IF VALUE ZERO     @Z427VLS*/ 00806000
         LTR   R7,R7                                               0362 00807000
         BZ    @RT00362                                            0362 00808000
*                   GOTO EDBLOOPD;      /* SKIP              @Z427VLS*/ 00809000
*EDOFFSET:    ;                         /*                   @Z427VLS*/ 00810000
EDOFFSET DS    0H                                                  0365 00811000
*        R6=0 ;                         /*                   @Z427VLS*/ 00812000
         SLR   R6,R6                                               0365 00813000
*        GEN(IC    R6,R0(R9));          /* PICK UP           @Z427VLS*/ 00814000
         IC    R6,R0(R9)                                                00815000
*        GEN(SLL   R6,L8);              /* 12 BIT            @Z427VLS*/ 00816000
         SLL   R6,L8                                                    00817000
*        GEN(IC    R6,L1(R9));          /* OFFSET INTO       @Z427VLS*/ 00818000
         IC    R6,L1(R9)                                                00819000
*        GEN(SRL   R6,L4);              /* INPUT RECORD      @Z427VLS*/ 00820000
         SRL   R6,L4                                                    00821000
*        R6=R6+R2;                      /* SET UP PTR TO INDEXED BITS*/ 00822000
         ALR   R6,R2                                               0370 00823000
*        R1=ADDR(CHARTAB);              /* SET PTR TO EBCDIC CHARS   */ 00824000
         LA    R1,CHARTAB                                          0371 00825000
*        GEN(MVC   BINCHARS(L4),L0(R6));/* MOVE OVER 4 BYTES @Z427VLS*/ 00826000
         MVC   BINCHARS(L4),L0(R6)                                      00827000
*/*                                                          @Z427VLS*/ 00828000
*/*      BLOCK=GENERATE  FOR SPECIAL HANDLING                @Z427VLS*/ 00829000
*/*                                                          @Z427VLS*/ 00830000
*GENERATE;                                                 /*@Z427VLS*/ 00831000
         L     R15,BINCHARS             PICK UP CHARS                   00832000
         LTR   R4,R4                    IS SHIFTING REQUESTED           00833000
         BZ    EDBLOOP                  BR-NO                           00834000
EDSHIFT  SLL   R15,L1                   YES DROP OFF HI ORDER BITS      00835000
         BCT   R4,EDSHIFT               AS SPECIFIED                    00836000
EDBLOOP  SR    R14,R14                                                  00837000
         SLDL  R14,L1                   BRING 1 BIT TO R14              00838000
         AR    R14,R1                   INDEX INTO CHARS                00839000
         MVC   L0(L1,R8),L0(R14)        MOVE INDEXED CHAR TO BUFF       00840000
         AR    R8,R5                    ADD IN SPACING VALUE            00841000
         LA    R8,L1(R8)                PLUS 1 MORE                     00842000
         BCT   R7,EDBLOOP               LOOP TILL DONE                  00843000
*EDBLOOPD:    ;                         /*                   @Z427VLS*/ 00844000
EDBLOOPD DS    0H                                                  0375 00845000
*        R9=R9+EDSPSV5;                 /* BUMP OVER ENTRY TO NEXT   */ 00846000
         AL    R9,EDSPSV5                                          0375 00847000
*        R3=R3+EDFORM(2);               /* BUMP BUFF PTR TO NXT COL  */ 00848000
         AH    R3,EDFORM+2                                         0376 00849000
*        R8=EDSPSV8;                    /* RESET RTN ADDR    @Z427VLS*/ 00850000
         L     R8,EDSPSV8                                          0377 00851000
*        GOTO R8 ;                      /* RETURN            @Z427VLS*/ 00852000
         BR    R8                                                  0378 00853000
*        RESPECIFY (R1,R5,R6,R7) UNRESTRICTED;             /*@Z427VLS*/ 00854000
*/********************************************************************/ 00855000
*/*                                                          @Z427VLS*/ 00856000
*/*      HEX DUMP ROUTINE-PROVIDE A HEX DUMP  BLOCK GEN FOR EASE     */ 00857000
*/*                                                 OF CODING & SPACE*/ 00858000
*/********************************************************************/ 00859000
*EDHEXDMP:    ;                                            /*@Z427VLS*/ 00860000
EDHEXDMP DS    0H                                                  0381 00861000
*GENERATE REFS(RECLNGTH);                                  /*@VS48704*/ 00862000
*        R2    PTR TO RECORD                                            00863000
*        R3    PTR TO PRINT BUFF                                        00864000
*        R9    RETURN REG                                               00865000
*                                                                       00866000
         CLC   EDFORM1(L2),ZERO         ANY DUMP WANTED                 00867000
         BCR   L8,R9                    BR-NO                           00868000
         BCTR  R3,R0                    POINT TO CARRIAGE CONTROL CHAR  00869000
         ST    R3,EDBUFSVE              SAVE REGS                       00870000
         ST    R9,EDDMPSVE              FOR RETURN                      00871000
         L     R4,SAVER2               GET ADDRESS OF COMTABLE @VS48704 00872000
         LH    R4,RECLNGTH(R4)         GET SIZE OF RECORD FROM COMTBL   00873000
         LH    R5,EDFORM1+L2            PICK UP OFFSET TO LOGOUT SECT   00874000
         LH    R6,EDFORM1+L4            PICK ADDR TO USE ON DUMP        00875000
         AR    R4,R2                    SET R4 TO END OF RECORD         00876000
         AR    R5,R2                    SET R5 TO END OF STANDARD SECT  00877000
*                                                                       00878000
*              HEADER MESSAGE OF HEX DUMP                               00879000
*                                                                       00880000
         MVC   L4(L18,R3),EDHEXMSG      PUT OUT MESSAGE                 00881000
*        CALL PRINTIT;                                     /*@Z427VLS*/ 00882000
         BAL   @14,PRINTIT                                         0382 00883000
*    GENERATE;                                             /*@Z427VLS*/ 00884000
         MVI   L4(R3),BLANK             CLEAR                           00885000
         MVC   L5(L17,R3),L4(R3)        BUFFER                          00886000
*                                                                       00887000
*              HEADER MESSAGE OF HEADER                                 00888000
*                                                                       00889000
         MVC   L4(L6,R3),EDHDMSG        SET HDR ON FIRST LINE OF DUMP   00890000
*                                                                       00891000
EDHDMP01 CR    R2,R5                    IS REGULAR SECT DONE            00892000
         BNL   EDHDMP02                 BR-YES                          00893000
         BAL   R9,EDHDMP05              BR TO SETUP LINE WITH NO ADDR   00894000
         L     R3,EDBUFSVE              RESET R3                        00895000
*        CALL  PRINTIT;                                    /*@Z427VLS*/ 00896000
         BAL   @14,PRINTIT                                         0384 00897000
*   GENERATE;                                              /*@Z427VLS*/ 00898000
         MVI   L1(R3),BLANK             BLANK                           00899000
         MVC   L2(L119,R3),L1(R3)       LINE                            00900000
         B     EDHDMP01                 LOOP TILL DONE                  00901000
*                                                                       00902000
*                                                                       00903000
*                                                                       00904000
EDHDMP02 EQU   *                                                        00905000
*        CALL  PRINTIT;                                    /*@Z427VLS*/ 00906000
         BAL   @14,PRINTIT                                         0386 00907000
*     GENERATE;                                            /*@Z427VLS*/ 00908000
EDHDMPA  EQU   *                                                        00909000
         BAL   R9,EDHDMP03              BR TO SETUP LINE WITH ADDR      00910000
         LA    R6,L32(R6)               UP INPUT PTR                    00911000
         L     R3,EDBUFSVE              RESET R3                        00912000
*        CALL  PRINTIT;                                    /*@Z427VLS*/ 00913000
         BAL   @14,PRINTIT                                         0388 00914000
*     GENERATE;                                            /*@Z427VLS*/ 00915000
         MVI   L1(R3),BLANK             BLANK                           00916000
         MVC   L2(L119,R3),L1(R3)       LINE                            00917000
         CR    R2,R4                    DONE WITH REC                   00918000
         BL    EDHDMPA                  NO LOOP                         00919000
         L     R9,EDDMPSVE              YES RESTORE RTN ADDR            00920000
         BR    R9                       RTN                             00921000
*                                                                       00922000
EDHDMP03 LA    R7,CHARTAB               PICK UP PTR TO CHARACTERS       00923000
         LA    R10,L4                   NUMBER OF BITS TO CONVERT       00924000
         LR    R15,R6                   NUMBER OF ADDR TO CONVERT       00925000
         SLL   R15,L16                  MOVE NUMBER TO HI END           00926000
EDHDMP04 SR    R14,R14                  MOVE 4 BITS TO R14              00927000
         SLDL  R14,L4                   INDEX INTO CHARACTERS           00928000
         AR    R14,R7                   TO FIND PROPER ONE              00929000
         MVC   L8(L1,R3),L0(R14)        THEN MOVE IT INTO BUFF          00930000
         LA    R3,L1(R3)                BUMP BUFF PTR                   00931000
         BCT   R10,EDHDMP04             LOOP TILL DONE                  00932000
         L     R3,EDBUFSVE              PICK UP BUFF PTR                00933000
         LR    R5,R4                    SET END OF AREA PTR             00934000
EDHDMP05 LA    R7,CHARTAB               SET PTR TO CHARS                00935000
         LA    R10,L2                   NO. DBL WDS PER LINE            00936000
         LA    R8,L4                    NO. WDS PER DBL WDS             00937000
         LR    R1,R8                    NO. BYTES PER WORD              00938000
EDHDMP06 CR    R2,R5                    DONE YET                        00939000
         BNL   EDHDMP07                 BR-YES                          00940000
         IC    R15,L0(R2)               PICK UP CHAR                    00941000
         SLL   R15,L24                  MOVE TO HI END                  00942000
         SR    R14,R14                  ZERO R14                        00943000
         SLDL  R14,L4                   MOVE 4 BITS TO R14              00944000
         AR    R14,R7                   INDEX TO CHAR                   00945000
         MVC   L14(L1,R3),L0(R14)       MOVE INDEXED CHAR TO BUFF       00946000
         SR    R14,R14                  ZERO R14                        00947000
         SLDL  R14,L4                   MOVE LAST 4 BITS TO R14         00948000
         AR    R14,R7                                                   00949000
         MVC   L15(L1,R3),L0(R14)                                       00950000
         LA    R3,L2(R3)                                                00951000
         LA    R2,L1(R2)                                                00952000
         BCT   R1,EDHDMP06                                              00953000
         LA    R1,L4                                                    00954000
         LA    R3,L4(R3)                                                00955000
         BCT   R8,EDHDMP06                                              00956000
         LA    R8,L4                                                    00957000
         LA    R3,L4(R3)                                                00958000
         BCT   R10,EDHDMP06                                             00959000
EDHDMP07 BR    R9                                                       00960000
EDHEXMSG DC    CL18'HEX DUMP OF RECORD'                                 00961000
EDHDMSG  DC    CL6'HEADER'                                              00962000
EDBUFSVE DS    F                                                        00963000
EDFORM1  DS    3H                                                       00964000
ZERO     DC    H'0'                                                     00965000
*/********************************************************************/ 00966000
*EDEND  :     ;                                            /*@Z427VLS*/ 00967000
*  RETURN;                                                 /*@Z427VLS*/ 00968000
@EL00001 L     @13,4(,@13)                                         0391 00969000
@EF00001 DS    0H                                                  0391 00970000
@ER00001 L     @14,12(,@13)                                        0391 00971000
         LM    @00,@12,20(@13)                                     0391 00972000
         BR    @14                                                 0391 00973000
*        END                                               /*@Z427VLS*/ 00974000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      * 00975000
*/*%INCLUDE SYSLIB  (COMTABLE)                                        * 00976000
*;                                                                 0392 00977000
         B     @EL00001                                            0392 00978000
@DATA    DS    0H                                                       00979000
@CH00064 DC    H'12'                                                    00980000
@SM00650 MVC   0(0,@01),0(@14)                                          00981000
         DS    0F                                                       00982000
@AL00088 DC    A(@CF00071+2)           LIST WITH   1 ARGUMENT(S)        00983000
         DS    0F                                                       00984000
@SA00001 DS    18F                                                      00985000
@SA00002 DS    15F                                                      00986000
@TF00001 DS    F                                                        00987000
         DS    0F                                                       00988000
@CF00051 DC    F'1'                                                     00989000
@CF00071 DC    F'2'                                                     00990000
@CH00071 EQU   @CF00071+2                                               00991000
@CF00073 DC    F'3'                                                     00992000
@CF00060 DC    F'4'                                                     00993000
@CF00648 DC    F'-8'                                                    00994000
         DS    0D                                                       00995000
SAVER2   DS    F                                                        00996000
EDSPSV8  DS    F                                                        00997000
EDPRBUF  DS    F                                                        00998000
EDLBBASE DS    F                                                        00999000
EDSPBASE DS    F                                                        01000000
EDSPSV5  DS    F                                                        01001000
SWAPR2   DS    F                                                        01002000
SAVER7   DS    F                                                        01003000
I        DC    F'0'                                                     01004000
BINCHARS DS    F                                                        01005000
EDDMPSVE DS    F                                                        01006000
EDPRDCB  DS    F                                                        01007000
SYNAD    DS    F                                                        01008000
X        DS    H                                                        01009000
Y        DS    H                                                        01010000
BBLANK   DC    CL1' '                                                   01011000
EDLOAD   DS    CL8                                                      01012000
         DS    CL7                                                      01013000
WORK     DS    CL8                                                      01014000
DUMBUFF  DC    CL134' '                                                 01015000
         ORG   DUMBUFF                                                  01016000
DDTYPE   DC    CL1'0'                                                   01017000
MOVETOLN DS    CL133                                                    01018000
         ORG   MOVETOLN                                                 01019000
SPACING  DC    X'09'                                                    01020000
         ORG   DUMBUFF+134                                              01021000
BUFFER   DS    CL122                                                    01022000
         ORG   BUFFER                                                   01023000
SAVECC   DS    BL1                                                      01024000
MOVELINE DS    CL133                                                    01025000
         ORG   MOVELINE                                                 01026000
CC       DC    X'09'                                                    01027000
PRBUFF   DC    CL133' '                                                 01028000
         ORG   BUFFER+135                                               01029000
FLAGS    DC    X'00'                                                    01030000
         ORG   FLAGS                                                    01031000
NOPRINT  DS    BL1                                                      01032000
DUMSW    EQU   FLAGS+0                                                  01033000
         ORG   FLAGS+1                                                  01034000
BUG1     DC    CL50'DEBUG1          IS PRODUCING THE FOLLOWING LINE(S)' 01035000
DBLWORK  DS    CL8                                                      01036000
EDDEL    DS    CL8                                                      01037000
SUPERZAP DC    3CL10'SUPERZAP'                                          01038000
EDFORM   DS    4H                                                       01039000
PATCH    DC    20H'0'                                                   01040000
CHARTAB  DC    CL1'0'                                                   01041000
         DC    CL1'1'                                                   01042000
         DC    CL1'2'                                                   01043000
         DC    CL1'3'                                                   01044000
         DC    CL1'4'                                                   01045000
         DC    CL1'5'                                                   01046000
         DC    CL1'6'                                                   01047000
         DC    CL1'7'                                                   01048000
         DC    CL1'8'                                                   01049000
         DC    CL1'9'                                                   01050000
         DC    CL1'A'                                                   01051000
         DC    CL1'B'                                                   01052000
         DC    CL1'C'                                                   01053000
         DC    CL1'D'                                                   01054000
         DC    CL1'E'                                                   01055000
         DC    CL1'F'                                                   01056000
IFCEEDIT CSECT                                                          01057000
         DC    S(SUPERZAP)                                              01058000
IFCEEDIT CSECT                                                          01059000
    DC  S(PATCH)                                                        01060000
IFCEEDIT CSECT                                                          01061000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       01062000
@01      EQU   01                                                       01063000
@02      EQU   02                                                       01064000
@03      EQU   03                                                       01065000
@04      EQU   04                                                       01066000
@05      EQU   05                                                       01067000
@06      EQU   06                                                       01068000
@07      EQU   07                                                       01069000
@08      EQU   08                                                       01070000
@09      EQU   09                                                       01071000
@10      EQU   10                                                       01072000
@11      EQU   11                                                       01073000
@12      EQU   12                                                       01074000
@13      EQU   13                                                       01075000
@14      EQU   14                                                       01076000
@15      EQU   15                                                       01077000
R0       EQU   @00                                                      01078000
R1       EQU   @01                                                      01079000
R2       EQU   @02                                                      01080000
R3       EQU   @03                                                      01081000
R4       EQU   @04                                                      01082000
R5       EQU   @05                                                      01083000
R6       EQU   @06                                                      01084000
R7       EQU   @07                                                      01085000
R8       EQU   @08                                                      01086000
R9       EQU   @09                                                      01087000
R12      EQU   @12                                                      01088000
R15      EQU   @15                                                      01089000
R10      EQU   @10                                                      01090000
R11      EQU   @11                                                      01091000
R13      EQU   @13                                                      01092000
R14      EQU   @14                                                      01093000
IOHND    EQU   0                                                        01094000
PARM     EQU   0                                                        01095000
RECTYPE  EQU   PARM                                                     01096000
SWITCHES EQU   PARM+2                                                   01097000
DEBUG    EQU   PARM+4                                                   01098000
DEBUG1   EQU   DEBUG                                                    01099000
DEBUGA   EQU   PARM+8                                                   01100000
MISC     EQU   PARM+12                                                  01101000
PRINTES  EQU   MISC                                                     01102000
OPENCLSE EQU   PARM+13                                                  01103000
OPENIO   EQU   OPENCLSE                                                 01104000
CLOSEIO  EQU   OPENCLSE+2                                               01105000
DATENOW  EQU   PARM+17                                                  01106000
STDT     EQU   PARM+23                                                  01107000
STDATE   EQU   STDT                                                     01108000
PSTD     EQU   STDATE+1                                                 01109000
ENDDT    EQU   PARM+31                                                  01110000
ENDDATE  EQU   ENDDT                                                    01111000
PEND     EQU   ENDDATE+1                                                01112000
STTIME1  EQU   PARM+39                                                  01113000
ENDTIME1 EQU   PARM+43                                                  01114000
STTIME2  EQU   PARM+47                                                  01115000
ENDTIME2 EQU   PARM+51                                                  01116000
STRTDATE EQU   PARM+55                                                  01117000
@NM00007 EQU   PARM+75                                                  01118000
ERRID    EQU   PARM+92                                                  01119000
IDTIMEA  EQU   ERRID+6                                                  01120000
IDTIME   EQU   IDTIMEA                                                  01121000
CCHHRLNG EQU   PARM+112                                                 01122000
RECLNGTH EQU   CCHHRLNG+6                                               01123000
ADIOHND  EQU   PARM+124                                                 01124000
ADIFCMSG EQU   PARM+128                                                 01125000
ADEDITB  EQU   PARM+132                                                 01126000
EVPTR    EQU   PARM+136                                                 01127000
SORTADR  EQU   PARM+140                                                 01128000
PRINTADR EQU   PARM+148                                                 01129000
CUAPTR   EQU   PARM+152                                                 01130000
DEVPTR   EQU   PARM+156                                                 01131000
MODPTR   EQU   PARM+160                                                 01132000
SERPTR   EQU   PARM+164                                                 01133000
VOLPTR   EQU   PARM+168                                                 01134000
CPUPTR   EQU   PARM+172                                                 01135000
CPCUAPTR EQU   PARM+176                                                 01136000
LIBADPTR EQU   PARM+180                                                 01137000
SYMCDPTR EQU   PARM+184                                                 01138000
SYSUMPTR EQU   PARM+188                                                 01139000
TRENPTR  EQU   PARM+192                                                 01140000
SHAREPTR EQU   PARM+196                                                 01141000
MERDCPTR EQU   PARM+208                                                 01142000
DUMPTABL EQU   PARM+228                                                 01143000
DUMPINFO EQU   DUMPTABL+4                                               01144000
TRENDONE EQU   0                                                        01145000
TREGEN   EQU   TRENDONE+8                                               01146000
TRECCH0  EQU   TREGEN+8                                                 01147000
TREND2   EQU   0                                                        01148000
TRENDKEY EQU   TREND2                                                   01149000
TRENDRT  EQU   TRENDKEY+1                                               01150000
TRENCPUS EQU   TRENDKEY+3                                               01151000
TRENDITM EQU   TRENDKEY+4                                               01152000
EVTABLE  EQU   0                                                        01153000
EVSTOP   EQU   EVTABLE                                                  01154000
EVKEY    EQU   EVTABLE+6                                                01155000
SORTABLE EQU   0                                                        01156000
SORTKEY  EQU   SORTABLE                                                 01157000
SORTCCHR EQU   SORTABLE+5                                               01158000
SYSUMONE EQU   0                                                        01159000
SYSUM2   EQU   0                                                        01160000
SYSUMKEY EQU   SYSUM2                                                   01161000
SYSRT    EQU   SYSUMKEY+1                                               01162000
SYSCPUS  EQU   SYSUMKEY+3                                               01163000
SYSITEM  EQU   SYSUMKEY+4                                               01164000
SHARE    EQU   0                                                        01165000
SHAREIO  EQU   SHARE+2                                                  01166000
SHRCUCPU EQU   SHAREIO                                                  01167000
SHARECUA EQU   SHRCUCPU                                                 01168000
EDITLOAD EQU   0                                                        01169000
EDITNUM  EQU   EDITLOAD                                                 01170000
EDITABLE EQU   EDITLOAD+4                                               01171000
LOADNAME EQU   EDITABLE                                                 01172000
LOADPTR  EQU   EDITABLE+8                                               01173000
CUA      EQU   0                                                        01174000
CUAVAL   EQU   CUA+2                                                    01175000
DEVICE   EQU   0                                                        01176000
MODELS   EQU   0                                                        01177000
DEVSERAL EQU   0                                                        01178000
VOLUME   EQU   0                                                        01179000
CPUS     EQU   0                                                        01180000
CPUCUAS  EQU   0                                                        01181000
CPUCUAV  EQU   CPUCUAS+2                                                01182000
LIBADR   EQU   0                                                        01183000
SYMCODE  EQU   0                                                        01184000
SYMVAL   EQU   SYMCODE+2                                                01185000
MERIDIAN EQU   0                                                        01186000
COUNT    EQU   0                                                        01187000
DUMMY    EQU   0                                                        01188000
B2ENTRY  EQU   0                                                        01189000
ACENTRY  EQU   0                                                        01190000
@NM00013 EQU   ACENTRY                                                  01191000
@NM00014 EQU   ACENTRY+2                                                01192000
ACMIN    EQU   @NM00014                                                 01193000
@NM00015 EQU   ACENTRY+3                                                01194000
BEFEN    EQU   0                                                        01195000
@NM00016 EQU   BEFEN                                                    01196000
BEFFLD1  EQU   BEFEN+2                                                  01197000
BEFFLD2  EQU   BEFEN+3                                                  01198000
DENTRY   EQU   0                                                        01199000
@NM00018 EQU   DENTRY                                                   01200000
DOFFSET  EQU   DENTRY+2                                                 01201000
NINENTRY EQU   0                                                        01202000
NOFFSET  EQU   NINENTRY                                                 01203000
NIN      EQU   NINENTRY+2                                               01204000
NOUT     EQU   NINENTRY+3                                               01205000
LABELST  EQU   0                                                        01206000
FRDTLD   EQU   0                                                        01207000
EDSPSV9  EQU   FRDTLD+12                                                01208000
LABELPTR EQU   FRDTLD+16                                                01209000
IFCMSG   EQU   0                                                        01210000
TRECCH   EQU   TRECCH0                                                  01211000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    01212000
FIRSTMOD EQU   FRDTLD+4                                                 01213000
@NM00019 EQU   FRDTLD                                                   01214000
NSIGN    EQU   NOFFSET+1                                                01215000
NRECA    EQU   NOFFSET                                                  01216000
DADDR    EQU   DOFFSET                                                  01217000
DSHIFT   EQU   DOFFSET                                                  01218000
DSIGN    EQU   @NM00018+1                                               01219000
DRECA    EQU   @NM00018                                                 01220000
BEFSIGN  EQU   @NM00016+1                                               01221000
@NM00017 EQU   @NM00016                                                 01222000
ACSHFT   EQU   @NM00015                                                 01223000
ACNO     EQU   @NM00015                                                 01224000
ACSPAC   EQU   @NM00014                                                 01225000
ACSIGN   EQU   @NM00013+1                                               01226000
ACRECA   EQU   @NM00013                                                 01227000
B2SHIFT  EQU   B2ENTRY+1                                                01228000
B2RECA   EQU   B2ENTRY                                                  01229000
FLAG     EQU   DUMMY+1                                                  01230000
@NM00012 EQU   DUMMY                                                    01231000
MODEL    EQU   MERIDIAN+2                                               01232000
MRDNUMBR EQU   MERIDIAN                                                 01233000
SYMVAL2  EQU   SYMVAL+2                                                 01234000
SYMVAL1  EQU   SYMVAL                                                   01235000
SYMCDNUM EQU   SYMCODE                                                  01236000
LIBVAL   EQU   LIBADR+2                                                 01237000
LIBADNUM EQU   LIBADR                                                   01238000
CPUCUX3  EQU   CPUCUAV+5                                                01239000
CPUCUX2  EQU   CPUCUAV+3                                                01240000
CPUCUX1  EQU   CPUCUAV                                                  01241000
CPCUANUM EQU   CPUCUAS                                                  01242000
CPUVAL   EQU   CPUS+2                                                   01243000
CPUNUM   EQU   CPUS                                                     01244000
VOLVAL   EQU   VOLUME+2                                                 01245000
VOLNUM   EQU   VOLUME                                                   01246000
SERVAL   EQU   DEVSERAL+2                                               01247000
SERNUM   EQU   DEVSERAL                                                 01248000
MODVAL   EQU   MODELS+2                                                 01249000
MODNUM   EQU   MODELS                                                   01250000
MDRVAL   EQU   DEVICE+204                                               01251000
MDRNUM   EQU   DEVICE+202                                               01252000
DEVVAL   EQU   DEVICE+2                                                 01253000
DEVNUM   EQU   DEVICE                                                   01254000
CUA2     EQU   CUAVAL+2                                                 01255000
CUA1     EQU   CUAVAL                                                   01256000
CUANUM   EQU   CUA                                                      01257000
SHARLET  EQU   SHAREIO+10                                               01258000
SHARSERB EQU   SHAREIO+7                                                01259000
SHARECUB EQU   SHAREIO+5                                                01260000
SHARSERA EQU   SHRCUCPU+2                                               01261000
SHAREDX  EQU   SHARECUA                                                 01262000
SHARENUM EQU   SHARE                                                    01263000
SYSTEMP  EQU   SYSUM2+9                                                 01264000
SYSPERM  EQU   SYSUM2+7                                                 01265000
SYSDEV   EQU   SYSUM2+5                                                 01266000
SYSOLDA  EQU   SYSITEM                                                  01267000
SYS3705  EQU   SYSITEM                                                  01268000
SYSOLD   EQU   SYSCPUS                                                  01269000
SYSCPU   EQU   SYSCPUS                                                  01270000
SYSCUA   EQU   SYSRT                                                    01271000
SYSGROUP EQU   SYSUMKEY                                                 01272000
SYSUMEOD EQU   SYSUMONE+96                                              01273000
SYSUMPER EQU   SYSUMONE+92                                              01274000
SYSUMPEA EQU   SYSUMONE+88                                              01275000
SYSUMPEI EQU   SYSUMONE+84                                              01276000
SYSUMCH  EQU   SYSUMONE+20                                              01277000
SYSUMMCN EQU   SYSUMONE+16                                              01278000
SYSUMMCR EQU   SYSUMONE+12                                              01279000
SYSUMNXT EQU   SYSUMONE+8                                               01280000
SYSUMIPL EQU   SYSUMONE+4                                               01281000
SYSUMNUM EQU   SYSUMONE                                                 01282000
SORTCORE EQU   SORTCCHR                                                 01283000
SORTTIME EQU   SORTKEY+1                                                01284000
SORTYEAR EQU   SORTKEY                                                  01285000
EVLETTER EQU   EVKEY+5                                                  01286000
EVSERIAL EQU   EVKEY+2                                                  01287000
EVMODEL  EQU   EVKEY                                                    01288000
EVNUM    EQU   EVTABLE+4                                                01289000
EVDAY    EQU   EVSTOP+1                                                 01290000
EVYEAR   EQU   EVSTOP                                                   01291000
TRETMP   EQU   TREND2+10                                                01292000
TREPRM   EQU   TREND2+8                                                 01293000
TRENDDEV EQU   TREND2+6                                                 01294000
TRENDDAT EQU   TRENDKEY+5                                               01295000
TRENDOD  EQU   TRENDITM                                                 01296000
TREND037 EQU   TRENDITM                                                 01297000
TRENDOLD EQU   TRENCPUS                                                 01298000
TRENDCPU EQU   TRENCPUS                                                 01299000
@NM00011 EQU   TRENDRT+1                                                01300000
TRENDCUA EQU   TRENDRT                                                  01301000
TRENDGRP EQU   TRENDKEY                                                 01302000
TREPRE   EQU   TREGEN+72                                                01303000
TRECCHF  EQU   TREGEN+68                                                01304000
TRECCHE  EQU   TREGEN+64                                                01305000
TRECCHD  EQU   TREGEN+60                                                01306000
TRECCHC  EQU   TREGEN+56                                                01307000
TRECCHB  EQU   TREGEN+52                                                01308000
TRECCHA  EQU   TREGEN+48                                                01309000
TRECCH9  EQU   TREGEN+44                                                01310000
TRECCH8  EQU   TREGEN+40                                                01311000
TRECCH7  EQU   TREGEN+36                                                01312000
TRECCH6  EQU   TREGEN+32                                                01313000
TRECCH5  EQU   TREGEN+28                                                01314000
TRECCH4  EQU   TREGEN+24                                                01315000
TRECCH3  EQU   TREGEN+20                                                01316000
TRECCH2  EQU   TREGEN+16                                                01317000
TRECCH1  EQU   TREGEN+12                                                01318000
TREMCH   EQU   TREGEN+4                                                 01319000
TREIPL   EQU   TREGEN                                                   01320000
TRENUM   EQU   TRENDONE+4                                               01321000
TRENEXT  EQU   TRENDONE                                                 01322000
DUMPSIZE EQU   DUMPINFO+4                                               01323000
DUMPADR  EQU   DUMPINFO                                                 01324000
DUMPNUM  EQU   DUMPTABL                                                 01325000
@NM00010 EQU   PARM+212                                                 01326000
RECLNGT1 EQU   PARM+204                                                 01327000
FRAMEPTR EQU   PARM+200                                                 01328000
ADCPUT   EQU   PARM+144                                                 01329000
LINECT   EQU   PARM+120                                                 01330000
@NM00009 EQU   CCHHRLNG+5                                               01331000
RECCCHHR EQU   CCHHRLNG                                                 01332000
USERPGM  EQU   PARM+102                                                 01333000
IDTSEC   EQU   IDTIME+3                                                 01334000
IDSEC    EQU   IDTIME+2                                                 01335000
IDMIN    EQU   IDTIME+1                                                 01336000
IDHOUR   EQU   IDTIME                                                   01337000
IDASID   EQU   ERRID+4                                                  01338000
IDCPU    EQU   ERRID+3                                                  01339000
@NM00008 EQU   ERRID+2                                                  01340000
IDVALUE  EQU   ERRID                                                    01341000
NUMDAYS  EQU   PARM+88                                                  01342000
SORTNUM  EQU   PARM+84                                                  01343000
TABSIZE  EQU   PARM+80                                                  01344000
SYSRETRN EQU   @NM00007                                                 01345000
@NM00006 EQU   PARM+72                                                  01346000
WRTHRSH  EQU   PARM+69                                                  01347000
RDTHRSH  EQU   PARM+66                                                  01348000
TERM     EQU   PARM+58                                                  01349000
EVSDAY   EQU   STRTDATE+1                                               01350000
EVSYEAR  EQU   STRTDATE                                                 01351000
PENSEC2  EQU   ENDTIME2+2                                               01352000
PENMIN2  EQU   ENDTIME2+1                                               01353000
PENHOUR2 EQU   ENDTIME2                                                 01354000
PSTSEC2  EQU   STTIME2+2                                                01355000
PSTMIN2  EQU   STTIME2+1                                                01356000
PSTHOUR2 EQU   STTIME2                                                  01357000
PENSEC1  EQU   ENDTIME1+2                                               01358000
PENMIN1  EQU   ENDTIME1+1                                               01359000
PENHOUR1 EQU   ENDTIME1                                                 01360000
PSTSEC1  EQU   STTIME1+2                                                01361000
PSTMIN1  EQU   STTIME1+1                                                01362000
PSTHOUR1 EQU   STTIME1                                                  01363000
@NM00005 EQU   ENDDT+4                                                  01364000
PENDY    EQU   PEND+1                                                   01365000
PENYR    EQU   PEND                                                     01366000
@NM00004 EQU   ENDDATE                                                  01367000
@NM00003 EQU   STDT+4                                                   01368000
PSTDY    EQU   PSTD+1                                                   01369000
PSTYR    EQU   PSTD                                                     01370000
@NM00002 EQU   STDATE                                                   01371000
YEARNOW  EQU   DATENOW+4                                                01372000
@NM00001 EQU   DATENOW+3                                                01373000
DAYNOW   EQU   DATENOW                                                  01374000
CSNAP    EQU   CLOSEIO                                                  01375000
CDRCTWRK EQU   CLOSEIO                                                  01376000
CSYSIN   EQU   CLOSEIO                                                  01377000
CACCDEV  EQU   CLOSEIO                                                  01378000
CACCIN   EQU   CLOSEIO                                                  01379000
CSERLOG  EQU   CLOSEIO                                                  01380000
CEREPPT  EQU   CLOSEIO                                                  01381000
CTOURIST EQU   CLOSEIO                                                  01382000
OSNAP    EQU   OPENIO                                                   01383000
ODRCTWRK EQU   OPENIO                                                   01384000
OSYSIN   EQU   OPENIO                                                   01385000
OACCDEV  EQU   OPENIO                                                   01386000
OACCIN   EQU   OPENIO                                                   01387000
OSERLOG  EQU   OPENIO                                                   01388000
OEREPPT  EQU   OPENIO                                                   01389000
OTOURIST EQU   OPENIO                                                   01390000
PASSFLAG EQU   MISC                                                     01391000
PLOGREC  EQU   MISC                                                     01392000
ERRORID  EQU   MISC                                                     01393000
PSUM     EQU   PRINTES                                                  01394000
PEDIT    EQU   PRINTES                                                  01395000
PHIST    EQU   MISC                                                     01396000
PACC     EQU   MISC                                                     01397000
PZERO    EQU   MISC                                                     01398000
DEBUG63  EQU   DEBUGA+3                                                 01399000
DEBUG62  EQU   DEBUGA+3                                                 01400000
DEBUG61  EQU   DEBUGA+3                                                 01401000
DEBUG60  EQU   DEBUGA+3                                                 01402000
DEBUG59  EQU   DEBUGA+3                                                 01403000
DEBUG58  EQU   DEBUGA+3                                                 01404000
DEBUG57  EQU   DEBUGA+3                                                 01405000
DEBUG56  EQU   DEBUGA+3                                                 01406000
DEBUG55  EQU   DEBUGA+2                                                 01407000
DEBUG54  EQU   DEBUGA+2                                                 01408000
DEBUG53  EQU   DEBUGA+2                                                 01409000
DEBUG52  EQU   DEBUGA+2                                                 01410000
DEBUG51  EQU   DEBUGA+2                                                 01411000
DEBUG50  EQU   DEBUGA+2                                                 01412000
DEBUG49  EQU   DEBUGA+2                                                 01413000
DEBUG48  EQU   DEBUGA+2                                                 01414000
DEBUG47  EQU   DEBUGA+1                                                 01415000
DEBUG46  EQU   DEBUGA+1                                                 01416000
DEBUG45  EQU   DEBUGA+1                                                 01417000
DEBUG44  EQU   DEBUGA+1                                                 01418000
DEBUG43  EQU   DEBUGA+1                                                 01419000
DEBUG42  EQU   DEBUGA+1                                                 01420000
DEBUG41  EQU   DEBUGA+1                                                 01421000
DEBUG40  EQU   DEBUGA+1                                                 01422000
DEBUG39  EQU   DEBUGA                                                   01423000
DEBUG38  EQU   DEBUGA                                                   01424000
DEBUG37  EQU   DEBUGA                                                   01425000
DEBUG36  EQU   DEBUGA                                                   01426000
DEBUG35  EQU   DEBUGA                                                   01427000
DEBUG34  EQU   DEBUGA                                                   01428000
DEBUG33  EQU   DEBUGA                                                   01429000
DEBUG32  EQU   DEBUGA                                                   01430000
DEBUG31  EQU   DEBUG+3                                                  01431000
DEBUG30  EQU   DEBUG+3                                                  01432000
DEBUG29  EQU   DEBUG+3                                                  01433000
DEBUG28  EQU   DEBUG+3                                                  01434000
DEBUG27  EQU   DEBUG+3                                                  01435000
DEBUG26  EQU   DEBUG+3                                                  01436000
DEBUG25  EQU   DEBUG+3                                                  01437000
DEBUG24  EQU   DEBUG+3                                                  01438000
DEBUG23  EQU   DEBUG+2                                                  01439000
DEBUG22  EQU   DEBUG+2                                                  01440000
DEBUG21  EQU   DEBUG+2                                                  01441000
DEBUG20  EQU   DEBUG+2                                                  01442000
DEBUG19  EQU   DEBUG+2                                                  01443000
DEBUG18  EQU   DEBUG+2                                                  01444000
DEBUG17  EQU   DEBUG+2                                                  01445000
DEBUG16  EQU   DEBUG+2                                                  01446000
DEBUG15  EQU   DEBUG+1                                                  01447000
DEBUG14  EQU   DEBUG+1                                                  01448000
DEBUG13  EQU   DEBUG+1                                                  01449000
DEBUG12  EQU   DEBUG+1                                                  01450000
DEBUG11  EQU   DEBUG+1                                                  01451000
DEBUG10  EQU   DEBUG+1                                                  01452000
DEBUG9   EQU   DEBUG+1                                                  01453000
DEBUG8   EQU   DEBUG+1                                                  01454000
DEBUG7   EQU   DEBUG                                                    01455000
DEBUG6   EQU   DEBUG                                                    01456000
DEBUG5   EQU   DEBUG                                                    01457000
DEBUG4   EQU   DEBUG                                                    01458000
DEBUG3   EQU   DEBUG                                                    01459000
DEBUG2   EQU   DEBUG                                                    01460000
DEBUG0   EQU   DEBUG                                                    01461000
SORTBRK  EQU   SWITCHES+1                                               01462000
COREFAIL EQU   SWITCHES+1                                               01463000
ANALYSIS EQU   SWITCHES+1                                               01464000
SHIFT3RD EQU   SWITCHES+1                                               01465000
DEVEXCL  EQU   SWITCHES+1                                               01466000
ZEROALL  EQU   SWITCHES+1                                               01467000
NOTALL   EQU   SWITCHES+1                                               01468000
NOSDR    EQU   SWITCHES                                                 01469000
TIMESEQ  EQU   SWITCHES                                                 01470000
SYSUM    EQU   SWITCHES                                                 01471000
PARMTHR  EQU   SWITCHES                                                 01472000
TREND    EQU   SWITCHES                                                 01473000
SHORTOBR EQU   SWITCHES                                                 01474000
PARMMES  EQU   SWITCHES                                                 01475000
RDESUM   EQU   SWITCHES                                                 01476000
PCCHFRAM EQU   RECTYPE+1                                                01477000
PMCHFRAM EQU   RECTYPE+1                                                01478000
PTTYP    EQU   RECTYPE+1                                                01479000
PEOD     EQU   RECTYPE                                                  01480000
PMIH     EQU   RECTYPE                                                  01481000
PDDR     EQU   RECTYPE                                                  01482000
PIPL     EQU   RECTYPE                                                  01483000
PSOFT    EQU   RECTYPE                                                  01484000
POBR     EQU   RECTYPE                                                  01485000
PCHAN    EQU   RECTYPE                                                  01486000
PMCH     EQU   RECTYPE                                                  01487000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      01488000
@RT00105 EQU   EDDONE                                                   01489000
@RT00107 EQU   EDPR0002                                                 01490000
@RF00124 EQU   EDPR0000                                                 01491000
@RT00140 EQU   EDPR0005                                                 01492000
@RT00147 EQU   EDPR0003                                                 01493000
@RT00160 EQU   EDLBLP02                                                 01494000
@RT00166 EQU   EDLBLP03                                                 01495000
@RT00168 EQU   EDLBLP03                                                 01496000
@RT00173 EQU   EDLBLP04                                                 01497000
@RT00179 EQU   NOPUT                                                    01498000
@RT00189 EQU   EDCCLP1                                                  01499000
@RT00193 EQU   EDCCLP2                                                  01500000
@RT00231 EQU   EDFRMLP1                                                 01501000
@RT00234 EQU   EDFRMLP0                                                 01502000
@RT00242 EQU   EDFRMLP2                                                 01503000
@RT00294 EQU   EDHLOOP3                                                 01504000
@RT00302 EQU   EDHLOOP0                                                 01505000
@RT00326 EQU   EDHLOOP0                                                 01506000
@RT00357 EQU   EDBIN4A                                                  01507000
@RT00362 EQU   EDBLOOPD                                                 01508000
EDEND    EQU   @EL00001                                                 01509000
@ENDDATA EQU   *                                                        01510000
         END   IFCEEDIT,(C'PLS2030',0701,78023)                         01511000
