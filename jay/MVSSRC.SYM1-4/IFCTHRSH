         TITLE 'IFCTHRSH - CONTROL FOR THRESHOLD PROCESSING            *00001000
                        '                                               00002000
IFCTHRSH CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL1(16)                                             0001 00007000
         DC    C'IFCTHRSH  77.316'                                 0001 00008000
         DROP  @15                                                      00009000
@PROLOG  ST    @14,12(,@13)                                        0001 00010000
         STM   @00,@12,20(@13)                                     0001 00011000
         BALR  @12,0                                               0001 00012000
@PSTART  LA    @11,4095(,@12)                                      0001 00013000
         LA    @10,4095(,@11)                                      0001 00014000
         LA    @05,4095(,@10)                                      0001 00015000
         USING @PSTART,@12                                         0001 00016000
         USING @PSTART+4095,@11                                    0001 00017000
         USING @PSTART+8190,@10                                    0001 00018000
         USING @PSTART+12285,@05                                   0001 00019000
         ST    @13,@SA00001+4                                      0001 00020000
         LA    @14,@SA00001                                        0001 00021000
         ST    @14,8(,@13)                                         0001 00022000
         LR    @13,@14                                             0001 00023000
         B     @PB00002                                            0169 00024000
SORT     STM   @14,@12,@SA00002                                    0169 00025000
*SRTCONT = ((NUMENT - ONE) * ELEVEN) + CURRPTR;            /*@0001VLS*/ 00026000
         L     @03,CURRPTR                                         0171 00027000
         L     @15,NUMENT                                          0171 00028000
         BCTR  @15,0                                               0171 00029000
         MH    @15,@CH00034                                        0171 00030000
         ALR   @15,@03                                             0171 00031000
         ST    @15,SRTCONT                                         0171 00032000
*R7 = CURRPTR;                     /* START OF THE SORT TABLE        */ 00033000
         LR    R7,@03                                              0172 00034000
*GENERATE REFS(CONTRTAB);                                  /*@0001VLS*/ 00035000
         LA    R15,ELEVEN          LOAD THE INCREMENT VALUE             00036000
         L     R4,SRTCONT          LOAD THE MAX LIMIT                   00037000
         LR    R1,R7               SET UP THE STOP LIMIT ON BACK UP     00038000
         B     DOIT                GO AROUND THIS CODE FIRST TIME       00039000
LOOPBCK1 ALR   R7,R15              MOVE THE POINTER TO NEXT ENTRY       00040000
         CR    R7,R4               ARE WE POINTING TO LAST ENTRY        00041000
         BNL   DONE                FINISHED WITH THE SORT SO EXIT       00042000
DOIT     CLC   CONTRTAB(ELEVEN,R7),CONTRTAB+ELEVEN(R7)                  00043000
         BNH   LOOPBCK1            DONT NEED TO SORT ITEM               00044000
         XC    CONTRTAB(ELEVEN,R7),CONTRTAB+ELEVEN(R7)                  00045000
         XC    CONTRTAB+ELEVEN(ELEVEN,R7),CONTRTAB(R7)                  00046000
         XC    CONTRTAB(ELEVEN,R7),CONTRTAB+ELEVEN(R7)                  00047000
         LR    R6,R7               SET NEW POINTER(BACKWARD)            00048000
LOOPBCK2 SR    R6,R15              POINT TO LAST ENTRY                  00049000
         CR    R6,R1               DONT BACK OUT OF THE TABLE           00050000
         BL    LOOPBCK1            START WITH NEXT ENTRY                00051000
         CLC   CONTRTAB(ELEVEN,R6),CONTRTAB+ELEVEN(R6)                  00052000
         BNH   LOOPBCK1            NO FUTHER SHUFFEL THIS SAMPLE        00053000
         XC    CONTRTAB+ELEVEN(ELEVEN,R6),CONTRTAB(R6)                  00054000
         XC    CONTRTAB(ELEVEN,R6),CONTRTAB+ELEVEN(R6)                  00055000
         XC    CONTRTAB+ELEVEN(ELEVEN,R6),CONTRTAB(R6)                  00056000
         B     LOOPBCK2            DOES IT NEED TO BE MOVED AGAIN       00057000
DONE     EQU   *                                                        00058000
ELEVEN   EQU   11                                                       00059000
*RESPECIFY (R6) UNRESTRICTED;                              /*@0001VLS*/ 00060000
*IF DEBUG8 = ON THEN                                               0175 00061000
         TM    DEBUG8(R2),B'10000000'                              0175 00062000
         BNO   @RF00175                                            0175 00063000
*  CALL DUMP;                    /*DUMP THE SORT TABLE       @0001VLS*/ 00064000
         BAL   @14,DUMP                                            0176 00065000
*MSGDS = CHARS(1);               /* EREPPT DATA SET OUTPUT   @0001VLS*/ 00066000
@RF00175 MVC   MSGDS(1),CHARS                                      0177 00067000
*END;                                                      /*@0001VLS*/ 00068000
@EL00002 DS    0H                                                  0178 00069000
@EF00002 DS    0H                                                  0178 00070000
@ER00002 LM    @14,@12,@SA00002                                    0178 00071000
         BR    @14                                                 0178 00072000
*/*                                                          @0001VLS*/ 00073000
*/* OUTPUT THE TWO HEADERS AT THE TOP OF THE PAGE.           @0001VLS*/ 00074000
*/*                                                          @0001VLS*/ 00075000
*OUTHED12: PROC;                                           /*@0001VLS*/ 00076000
OUTHED12 STM   @14,@12,@SA00003                                    0179 00077000
*  CALL PAGEJECT;                        /* NEW PAGE         @0001VLS*/ 00078000
         BAL   @14,PAGEJECT                                        0180 00079000
*  MSGADDR(40:39+LENGTH(CUASH1)) = CUASH1;                 /*@0001VLS*/ 00080000
         MVC   MSGADDR+39(40),CUASH1                               0181 00081000
*  CALL PRINTIT;                                           /*@0001VLS*/ 00082000
         BAL   @14,PRINTIT                                         0182 00083000
*  TEMPAREA(1:2) = CONTRCUA;             /* PRIMARY CUA      @0001VLS*/ 00084000
         L     @06,CURRPTR                                         0183 00085000
         MVC   TEMPAREA(2),CONTRCUA(@06)                           0183 00086000
*  SRL (TEMPAREA(1:2),FOUR);             /* CONTROL UNIT     @0001VLS*/ 00087000
         SLR   @06,@06                                             0184 00088000
         ICM   @06,3,TEMPAREA                                      0184 00089000
         SRL   @06,4                                               0184 00090000
         STCM  @06,3,TEMPAREA                                      0184 00091000
*  CALL CONVERT (TEMPAREA(2),CUASH2C,ONE);                 /*@0001VLS*/ 00092000
         LA    @01,@AL00185                                        0185 00093000
         BAL   @14,CONVERT                                         0185 00094000
*  MSGADDR(40:39+LENGTH(CUASH2)) = CUASH2;                 /*@0001VLS*/ 00095000
         MVC   MSGADDR+39(40),CUASH2                               0186 00096000
*  CALL PRINTIT;                                           /*@0001VLS*/ 00097000
         BAL   @14,PRINTIT                                         0187 00098000
*  MYLINCT = MYLINCT - TWO;                                /*@0001VLS*/ 00099000
         L     @06,MYLINCT                                         0188 00100000
         BCTR  @06,0                                               0188 00101000
         BCTR  @06,0                                               0188 00102000
         ST    @06,MYLINCT                                         0188 00103000
*  HEAD1 = ON;                                             /*@0001VLS*/ 00104000
         OI    HEAD1,B'00010000'                                   0189 00105000
* END;                                                     /*@0001VLS*/ 00106000
@EL00003 DS    0H                                                  0190 00107000
@EF00003 DS    0H                                                  0190 00108000
@ER00003 LM    @14,@12,@SA00003                                    0190 00109000
         BR    @14                                                 0190 00110000
*/*                                                          @0001VLS*/ 00111000
*/* OUTPUT THE NO RECORDS EXCEEDING THRESHOLD MESSAGE.       @0001VLS*/ 00112000
*/*                                                          @0001VLS*/ 00113000
*NOHEAD1: PROC;                                            /*@0001VLS*/ 00114000
NOHEAD1  STM   @14,@12,@SA00004                                    0191 00115000
*  CALL OUTHED12;                        /* DISMOUNT HEADERS @0001VLS*/ 00116000
         BAL   @14,OUTHED12                                        0192 00117000
*  CALL FINDDATE;                        /* FIND THE DATE RANGE      */ 00118000
         BAL   @14,FINDDATE                                        0193 00119000
*  CALL CONVERT (LOWDATE,TEMPAREA,THREE);                  /*@0001VLS*/ 00120000
         MVC   @AL00001+4(8),@AL00194                              0194 00121000
         L     @06,DATEPTR                                         0194 00122000
         LA    @06,LOWDATE(,@06)                                   0194 00123000
         ST    @06,@AL00001                                        0194 00124000
         LA    @01,@AL00001                                        0194 00125000
         BAL   @14,CONVERT                                         0194 00126000
*  CUASH6D1 = TEMPAREA(1:5);                               /*@0001VLS*/ 00127000
         MVC   CUASH6D1(5),TEMPAREA                                0195 00128000
*  CALL CONVERT (HIDATE,TEMPAREA,THREE);                   /*@0001VLS*/ 00129000
         MVC   @AL00001+4(8),@AL00196                              0196 00130000
         L     @06,DATEPTR                                         0196 00131000
         LA    @06,HIDATE(,@06)                                    0196 00132000
         ST    @06,@AL00001                                        0196 00133000
         LA    @01,@AL00001                                        0196 00134000
         BAL   @14,CONVERT                                         0196 00135000
*  CUASH6D2 = TEMPAREA(1:5);                               /*@0001VLS*/ 00136000
         MVC   CUASH6D2(5),TEMPAREA                                0197 00137000
*  MSGADDR(20:19+LENGTH(CUASH6)) = CUASH6;                 /*@0001VLS*/ 00138000
         MVC   MSGADDR+19(42),CUASH6                               0198 00139000
*  CALL PRINTIT;                                           /*@0001VLS*/ 00140000
         BAL   @14,PRINTIT                                         0199 00141000
*  MYLINCT = MYLINCT - ONE;                                /*@0001VLS*/ 00142000
         L     @06,MYLINCT                                         0200 00143000
         BCTR  @06,0                                               0200 00144000
         ST    @06,MYLINCT                                         0200 00145000
* END;                                                     /*@0001VLS*/ 00146000
@EL00004 DS    0H                                                  0201 00147000
@EF00004 DS    0H                                                  0201 00148000
@ER00004 LM    @14,@12,@SA00004                                    0201 00149000
         BR    @14                                                 0201 00150000
*/*                                                          @0001VLS*/ 00151000
*/* OUTPUT THE NO PERMANENT ERRORS MESSAGE.                  @0001VLS*/ 00152000
*/*                                                          @0001VLS*/ 00153000
*NOHEAD2: PROC;                                            /*@0001VLS*/ 00154000
NOHEAD2  STM   @14,@12,@SA00005                                    0202 00155000
*  MSGADDR = SPACER;                     /* SPACER LINE      @0001VLS*/ 00156000
         MVC   MSGADDR(132),SPACER                                 0203 00157000
*  CALL PRINTIT;                                           /*@0001VLS*/ 00158000
         BAL   @14,PRINTIT                                         0204 00159000
*  CALL PRINTIT;                                           /*@0001VLS*/ 00160000
         BAL   @14,PRINTIT                                         0205 00161000
*  MYLINCT = MYLINCT - TWO;                                /*@0001VLS*/ 00162000
         L     @06,MYLINCT                                         0206 00163000
         BCTR  @06,0                                               0206 00164000
         BCTR  @06,0                                               0206 00165000
         ST    @06,MYLINCT                                         0206 00166000
*  IF MYLINCT < FOUR THEN                /* EJECT TO NEW PAGE IF REST*/ 00167000
         C     @06,@CF00064                                        0207 00168000
         BNL   @RF00207                                            0207 00169000
*    CALL PAGEJECT;                      /* OF REPORT WILL NOT FIT   */ 00170000
         BAL   @14,PAGEJECT                                        0208 00171000
*  MSGADDR(44:43+LENGTH(CUAPH1)) = CUAPH1;                 /*@0001VLS*/ 00172000
@RF00207 MVC   MSGADDR+43(25),CUAPH1                               0209 00173000
*  CALL PRINTIT;                                           /*@0001VLS*/ 00174000
         BAL   @14,PRINTIT                                         0210 00175000
*  CALL FINDDATE;                        /* FIND THE DATE RANGE      */ 00176000
         BAL   @14,FINDDATE                                        0211 00177000
*  CALL CONVERT(LOWDATE,TEMPAREA,THREE);                   /*@0001VLS*/ 00178000
         MVC   @AL00001+4(8),@AL00212                              0212 00179000
         L     @06,DATEPTR                                         0212 00180000
         LA    @06,LOWDATE(,@06)                                   0212 00181000
         ST    @06,@AL00001                                        0212 00182000
         LA    @01,@AL00001                                        0212 00183000
         BAL   @14,CONVERT                                         0212 00184000
*  CUAPH5D1 = TEMPAREA(1:5);                               /*@0001VLS*/ 00185000
         MVC   CUAPH5D1(5),TEMPAREA                                0213 00186000
*  CALL CONVERT(HIDATE,TEMPAREA,THREE);                    /*@0001VLS*/ 00187000
         MVC   @AL00001+4(8),@AL00214                              0214 00188000
         L     @06,DATEPTR                                         0214 00189000
         LA    @06,HIDATE(,@06)                                    0214 00190000
         ST    @06,@AL00001                                        0214 00191000
         LA    @01,@AL00001                                        0214 00192000
         BAL   @14,CONVERT                                         0214 00193000
*  CUAPH5D2 = TEMPAREA(1:5);                               /*@0001VLS*/ 00194000
         MVC   CUAPH5D2(5),TEMPAREA                                0215 00195000
*  MSGADDR(20:19+LENGTH(CUAPH5)) = CUAPH5;                 /*@0001VLS*/ 00196000
         MVC   MSGADDR+19(47),CUAPH5                               0216 00197000
*  CALL PRINTIT;                                           /*@0001VLS*/ 00198000
         BAL   @14,PRINTIT                                         0217 00199000
*  MYLINCT = MYLINCT - TWO;                                /*@0001VLS*/ 00200000
         L     @06,MYLINCT                                         0218 00201000
         BCTR  @06,0                                               0218 00202000
         BCTR  @06,0                                               0218 00203000
         ST    @06,MYLINCT                                         0218 00204000
*  HEAD2 = ON;                                             /*@0001VLS*/ 00205000
         OI    HEAD2,B'00001000'                                   0219 00206000
*END;                                                      /*@0001VLS*/ 00207000
@EL00005 DS    0H                                                  0220 00208000
@EF00005 DS    0H                                                  0220 00209000
@ER00005 LM    @14,@12,@SA00005                                    0220 00210000
         BR    @14                                                 0220 00211000
*/*                                                          @0001VLS*/ 00212000
*/* EJECT TO A NEW PAGE.                                     @0001VLS*/ 00213000
*/*                                                          @0001VLS*/ 00214000
*PAGEJECT: PROC;                                           /*@0001VLS*/ 00215000
PAGEJECT STM   @14,@12,@SA00006                                    0221 00216000
* MSGCC = EJECT;                                           /*@0001VLS*/ 00217000
         MVI   MSGCC,X'89'                                         0222 00218000
* CALL PRINTIT;                                            /*@0001VLS*/ 00219000
         BAL   @14,PRINTIT                                         0223 00220000
* MSGCC = SPACE;                                           /*@0001VLS*/ 00221000
         MVI   MSGCC,X'09'                                         0224 00222000
* MYLINCT = LINECT - ONE;                                  /*@0001VLS*/ 00223000
         LH    @06,LINECT(,R2)                                     0225 00224000
         BCTR  @06,0                                               0225 00225000
         ST    @06,MYLINCT                                         0225 00226000
*END;                                                      /*@0001VLS*/ 00227000
@EL00006 DS    0H                                                  0226 00228000
@EF00006 DS    0H                                                  0226 00229000
@ER00006 LM    @14,@12,@SA00006                                    0226 00230000
         BR    @14                                                 0226 00231000
*/*                                                          @0001VLS*/ 00232000
*/* OUTPUT THE PERMANENT ERROR SECTION OF THE REPORT.  IF THE HEADERS*/ 00233000
*/* HAVE NOT BEEN PRINTED, PRINT THE SPACER, AND THEN THE HEADERS.   */ 00234000
*/* IF THE HEADERS FOR THE DISMOUNT SECTION HAVE NOT BEEN PRINTED,   */ 00235000
*/* PRINT THE HEADERS, AND THE MESSAGE THAT NO RECORDS EXCEED        */ 00236000
*/* THRESHOLD.                                               @0001VLS*/ 00237000
*/*                                                          @0001VLS*/ 00238000
*CUAPERMS: PROC;                                           /*@0001VLS*/ 00239000
CUAPERMS STM   @14,@12,@SA00007                                    0227 00240000
* RECCPU = CPU;                          /* INITIALIZE FOR SEARCH TO */ 00241000
         L     @06,CURRPTR                                         0228 00242000
         MVC   RECCPU(3),CPU(@06)                                  0228 00243000
* RECCUA = CONTRCUA;                     /* FIND DATE RANGE. @0001VLS*/ 00244000
         MVC   RECCUA(2),CONTRCUA(@06)                             0229 00245000
* IF HEAD1 = OFF THEN                                              0230 00246000
         TM    HEAD1,B'00010000'                                   0230 00247000
         BNZ   @RF00230                                            0230 00248000
*    CALL NOHEAD1;                       /* SECTION ONE HEADERS      */ 00249000
         BAL   @14,NOHEAD1                                         0231 00250000
* IF HEAD2 = OFF THEN                                              0232 00251000
@RF00230 TM    HEAD2,B'00001000'                                   0232 00252000
         BNZ   @RF00232                                            0232 00253000
*    DO;                                                   /*@0001VLS*/ 00254000
*      MSGADDR = SPACER;                 /* SPACER LINE      @0001VLS*/ 00255000
         MVC   MSGADDR(132),SPACER                                 0234 00256000
*      CALL PRINTIT;                                       /*@0001VLS*/ 00257000
         BAL   @14,PRINTIT                                         0235 00258000
*      CALL PRINTIT;                     /* BLANK LINE       @0001VLS*/ 00259000
         BAL   @14,PRINTIT                                         0236 00260000
*      MYLINCT = MYLINCT - TWO;                            /*@0001VLS*/ 00261000
         L     @06,MYLINCT                                         0237 00262000
         BCTR  @06,0                                               0237 00263000
         BCTR  @06,0                                               0237 00264000
         ST    @06,MYLINCT                                         0237 00265000
*      IF MYLINCT < TWELVE THEN          /* EJECT TO A NEW PAGE IF   */ 00266000
         C     @06,@CF00033                                        0238 00267000
         BNL   @RF00238                                            0238 00268000
*        CALL PAGEJECT;                  /* REST OF REPORT WONT FIT  */ 00269000
         BAL   @14,PAGEJECT                                        0239 00270000
*      MSGADDR(44:43+LENGTH(CUAPH1)) = CUAPH1;             /*@0001VLS*/ 00271000
@RF00238 MVC   MSGADDR+43(25),CUAPH1                               0240 00272000
*      CALL PRINTIT;                                       /*@0001VLS*/ 00273000
         BAL   @14,PRINTIT                                         0241 00274000
*      MSGADDR(74:73+LENGTH(CUAPH2)) = CUAPH2;             /*@0001VLS*/ 00275000
         MVC   MSGADDR+73(11),CUAPH2                               0242 00276000
*      CALL PRINTIT;                                       /*@0001VLS*/ 00277000
         BAL   @14,PRINTIT                                         0243 00278000
*      MSGADDR(81:80+LENGTH(CUAPH3)) = CUAPH3;             /*@0001VLS*/ 00279000
         MVC   MSGADDR+80(42),CUAPH3                               0244 00280000
*      CALL PRINTIT;                                       /*@0001VLS*/ 00281000
         BAL   @14,PRINTIT                                         0245 00282000
*      MSGADDR = CUAPH4;                                   /*@0001VLS*/ 00283000
         MVI   MSGADDR+120,C' '                                    0246 00284000
         MVC   MSGADDR+121(11),MSGADDR+120                         0246 00285000
         MVC   MSGADDR(120),CUAPH4                                 0246 00286000
*      CALL PRINTIT;                                       /*@0001VLS*/ 00287000
         BAL   @14,PRINTIT                                         0247 00288000
*      CALL PRINTIT;                                       /*@0001VLS*/ 00289000
         BAL   @14,PRINTIT                                         0248 00290000
*      MYLINCT = MYLINCT - FIVE;                           /*@0001VLS*/ 00291000
         L     @06,MYLINCT                                         0249 00292000
         SL    @06,@CF00036                                        0249 00293000
         ST    @06,MYLINCT                                         0249 00294000
*      HEAD2 = ON;                                         /*@0001VLS*/ 00295000
         OI    HEAD2,B'00001000'                                   0250 00296000
*    END;                                                  /*@0001VLS*/ 00297000
* IF MYLINCT < SEVEN THEN                /* EJECT TO NEW PAGE IF REST*/ 00298000
@RF00232 L     @06,MYLINCT                                         0252 00299000
         C     @06,@CF00082                                        0252 00300000
         BNL   @RF00252                                            0252 00301000
*   DO;                                  /* OF REPORT WILL NOT FIT   */ 00302000
*     CALL PAGEJECT;                                       /*@0001VLS*/ 00303000
         BAL   @14,PAGEJECT                                        0254 00304000
*     MSGADDR(44:43+LENGTH(CUAPH1)) = CUAPH1;              /*@0001VLS*/ 00305000
         MVC   MSGADDR+43(25),CUAPH1                               0255 00306000
*     CALL PRINTIT;                                        /*@0001VLS*/ 00307000
         BAL   @14,PRINTIT                                         0256 00308000
*     MSGADDR(74:73+LENGTH(CUAPH2)) = CUAPH2;              /*@0001VLS*/ 00309000
         MVC   MSGADDR+73(11),CUAPH2                               0257 00310000
*     CALL PRINTIT;                                        /*@0001VLS*/ 00311000
         BAL   @14,PRINTIT                                         0258 00312000
*     MSGADDR(81:80+LENGTH(CUAPH3)) = CUAPH3;              /*@0001VLS*/ 00313000
         MVC   MSGADDR+80(42),CUAPH3                               0259 00314000
*     CALL PRINTIT;                                        /*@0001VLS*/ 00315000
         BAL   @14,PRINTIT                                         0260 00316000
*     MSGADDR = CUAPH4;                                    /*@0001VLS*/ 00317000
         MVI   MSGADDR+120,C' '                                    0261 00318000
         MVC   MSGADDR+121(11),MSGADDR+120                         0261 00319000
         MVC   MSGADDR(120),CUAPH4                                 0261 00320000
*     CALL PRINTIT;                                        /*@0001VLS*/ 00321000
         BAL   @14,PRINTIT                                         0262 00322000
*     CALL PRINTIT;                                        /*@0001VLS*/ 00323000
         BAL   @14,PRINTIT                                         0263 00324000
*     MYLINCT = MYLINCT - FIVE;                            /*@0001VLS*/ 00325000
         L     @06,MYLINCT                                         0264 00326000
         SL    @06,@CF00036                                        0264 00327000
         ST    @06,MYLINCT                                         0264 00328000
*   END;                                                   /*@0001VLS*/ 00329000
* CALL CONVERT (SECUA2,TEMPAREA,TWO);    /* SECONDARY CUA    @0001VLS*/ 00330000
@RF00252 MVC   @AL00001+4(8),@AL00266                              0266 00331000
         LA    @06,SECUA2(,R7)                                     0266 00332000
         ST    @06,@AL00001                                        0266 00333000
         LA    @01,@AL00001                                        0266 00334000
         BAL   @14,CONVERT                                         0266 00335000
* OUTDEV = TEMPAREA(2:4);                                  /*@0001VLS*/ 00336000
         MVC   OUTDEV(3),TEMPAREA+1                                0267 00337000
* IF OSER74XX ^= HEXZEROS THEN                                     0268 00338000
         CLC   OSER74XX(2,R7),@CB00208                             0268 00339000
         BE    @RF00268                                            0268 00340000
*   CALL CONVBIN2(OSER74XX,OUTSER);      /* TAPE UNIT SERIAL NUMBER  */ 00341000
         LA    @06,OSER74XX(,R7)                                   0269 00342000
         ST    @06,@AL00001                                        0269 00343000
         LA    @06,OUTSER                                          0269 00344000
         ST    @06,@AL00001+4                                      0269 00345000
         LA    @01,@AL00001                                        0269 00346000
         BAL   @14,CONVBIN2                                        0269 00347000
* ELSE                                                             0270 00348000
*   OUTSER = NA;                                           /*@0001VLS*/ 00349000
         B     @RC00268                                            0270 00350000
@RF00268 MVC   OUTSER(5),@CC00483                                  0270 00351000
* IF SENSBIT3(1) = OFF THEN              /* PERMANENT ERROR  @0001VLS*/ 00352000
@RC00268 TM    SENSBIT3(R7),B'00010000'                            0271 00353000
         BNZ   @RF00271                                            0271 00354000
*   IF SENSBIT5(2) = ON THEN                                       0272 00355000
         TM    SENSBIT5+1(R7),B'00000100'                          0272 00356000
         BNO   @RF00272                                            0272 00357000
*     OUTERR = ERRTABC(1);                                 /*@0001VLS*/ 00358000
         MVC   OUTERR(2),ERRTABC                                   0273 00359000
*   ELSE                                                           0274 00360000
*     OUTERR = ERRTABC(2);                                 /*@0001VLS*/ 00361000
         B     @RC00272                                            0274 00362000
@RF00272 MVC   OUTERR(2),ERRTABC+34                                0274 00363000
* ELSE                                                             0275 00364000
*   IF SENSBIT5(8) = ON THEN             /* EQUIPMENT CHECK  @0001VLS*/ 00365000
         B     @RC00271                                            0275 00366000
@RF00271 TM    SENSBIT5+7(R7),B'00000100'                          0275 00367000
         BNO   @RF00275                                            0275 00368000
*     OUTERR = ERRTABC(5);                                 /*@0001VLS*/ 00369000
         MVC   OUTERR(2),ERRTABC+136                               0276 00370000
*   ELSE                                                           0277 00371000
*     IF SENSBIT7(8) = ON THEN                                     0277 00372000
         B     @RC00275                                            0277 00373000
@RF00275 TM    SENSBIT7+7(R7),B'00000001'                          0277 00374000
         BNO   @RF00277                                            0277 00375000
*       OUTERR = ERRTABC(7);                               /*@0001VLS*/ 00376000
         MVC   OUTERR(2),ERRTABC+204                               0278 00377000
*     ELSE                                                         0279 00378000
*       IF SENSBIT6(8) = ON THEN                                   0279 00379000
         B     @RC00277                                            0279 00380000
@RF00277 TM    SENSBIT6+7(R7),B'00000010'                          0279 00381000
         BNO   @RF00279                                            0279 00382000
*         OUTERR = ERRTABC(8);                             /*@0001VLS*/ 00383000
         MVC   OUTERR(2),ERRTABC+238                               0280 00384000
*       ELSE                                                       0281 00385000
*         IF SENSBIT3(8) = ON THEN                                 0281 00386000
         B     @RC00279                                            0281 00387000
@RF00279 TM    SENSBIT3+7(R7),B'00010000'                          0281 00388000
         BNO   @RF00281                                            0281 00389000
*           OUTERR = ERRTABC(11);                          /*@0001VLS*/ 00390000
         MVC   OUTERR(2),ERRTABC+340                               0282 00391000
*         ELSE                                                     0283 00392000
*           IF SENSBIT5(11) = ON THEN                              0283 00393000
         B     @RC00281                                            0283 00394000
@RF00281 TM    SENSBIT5+10(R7),B'00000100'                         0283 00395000
         BNO   @RF00283                                            0283 00396000
*             OUTERR = ERRTABC(9);                         /*@0001VLS*/ 00397000
         MVC   OUTERR(2),ERRTABC+272                               0284 00398000
*           ELSE                                                   0285 00399000
*             IF SENSBIT7(11) = ON THEN                            0285 00400000
         B     @RC00283                                            0285 00401000
@RF00283 TM    SENSBIT7+10(R7),B'00000001'                         0285 00402000
         BNO   @RF00285                                            0285 00403000
*               OUTERR = ERRTABC(10);                      /*@0001VLS*/ 00404000
         MVC   OUTERR(2),ERRTABC+306                               0286 00405000
*             ELSE                                                 0287 00406000
*               OUTERR = ERRTABC(4);                       /*@0001VLS*/ 00407000
         B     @RC00285                                            0287 00408000
@RF00285 MVC   OUTERR(2),ERRTABC+102                               0287 00409000
* PVOL = VOLID;                          /* VOLUME IDENTIFICATION    */ 00410000
@RC00285 DS    0H                                                  0288 00411000
@RC00283 DS    0H                                                  0288 00412000
@RC00281 DS    0H                                                  0288 00413000
@RC00279 DS    0H                                                  0288 00414000
@RC00277 DS    0H                                                  0288 00415000
@RC00275 DS    0H                                                  0288 00416000
@RC00271 MVC   PVOL(6),VOLID(R7)                                   0288 00417000
* CALL CONVERT (FAILCCW,PCCW,EIGHT);     /* FAILING CCW      @0001VLS*/ 00418000
         MVC   @AL00001+4(8),@AL00289                              0289 00419000
         LA    @06,FAILCCW(,R7)                                    0289 00420000
         ST    @06,@AL00001                                        0289 00421000
         LA    @01,@AL00001                                        0289 00422000
         BAL   @14,CONVERT                                         0289 00423000
* CALL CONVERT (CSW,PCSW,FOUR);          /* FAILING CSW      @0001VLS*/ 00424000
         MVC   @AL00001+4(8),@AL00290                              0290 00425000
         LA    @06,CSW(,R7)                                        0290 00426000
         ST    @06,@AL00001                                        0290 00427000
         LA    @01,@AL00001                                        0290 00428000
         BAL   @14,CONVERT                                         0290 00429000
* DO Z = ONE TO 24;                                        /*@0001VLS*/ 00430000
         LA    @06,1                                               0291 00431000
         ST    @06,Z                                               0291 00432000
@DL00291 DS    0H                                                  0292 00433000
*   CALL CONVERT (SENSE(Z),PSNSB(Z),ONE);  /* SENSE BYTES    @0001VLS*/ 00434000
         LA    @03,SENSE-1(@06,R7)                                 0292 00435000
         ST    @03,@AL00001                                        0292 00436000
         MH    @06,@CH00076                                        0292 00437000
         LA    @06,PSNSB-3(@06)                                    0292 00438000
         ST    @06,@AL00001+4                                      0292 00439000
         LA    @06,@CF00055                                        0292 00440000
         ST    @06,@AL00001+8                                      0292 00441000
         LA    @01,@AL00001                                        0292 00442000
         BAL   @14,CONVERT                                         0292 00443000
* END;                                                     /*@0001VLS*/ 00444000
         LA    @06,1                                               0293 00445000
         AL    @06,Z                                               0293 00446000
         ST    @06,Z                                               0293 00447000
         C     @06,@CF00227                                        0293 00448000
         BNH   @DL00291                                            0293 00449000
* CALL PRINTIT;                                            /*@0001VLS*/ 00450000
         BAL   @14,PRINTIT                                         0294 00451000
* MYLINCT = MYLINCT - ONE;                                 /*@0001VLS*/ 00452000
         L     @06,MYLINCT                                         0295 00453000
         BCTR  @06,0                                               0295 00454000
         ST    @06,MYLINCT                                         0295 00455000
*END;                                                      /*@0001VLS*/ 00456000
@EL00007 DS    0H                                                  0296 00457000
@EF00007 DS    0H                                                  0296 00458000
@ER00007 LM    @14,@12,@SA00007                                    0296 00459000
         BR    @14                                                 0296 00460000
*/*                                                          @0001VLS*/ 00461000
*/* OUTPUT THE DISMOUNT SECTION OF THE REPORT.  IF THE HEADERS HAVE  */ 00462000
*/* NOT BEEN PRINTED, THEN PRINT THE HEADERS FOR SECTION ONE.        */ 00463000
*/*                                                          @0001VLS*/ 00464000
* CUASTATS: PROC;                                          /*@0001VLS*/ 00465000
CUASTATS STM   @14,@12,@SA00008                                    0297 00466000
*    IF HEAD1 = OFF THEN            /* PRINT HEADERS         @0001VLS*/ 00467000
         TM    HEAD1,B'00010000'                                   0298 00468000
         BNZ   @RF00298                                            0298 00469000
*      DO;                                                 /*@0001VLS*/ 00470000
*        CALL OUTHED12;                                    /*@0001VLS*/ 00471000
         BAL   @14,OUTHED12                                        0300 00472000
*        CUASH3R = RDTHRSH;         /* READ THRESHOLD        @0001VLS*/ 00473000
         MVC   CUASH3R(3),RDTHRSH(R2)                              0301 00474000
*        CUASH3W = WRTHRSH;         /* WRITE THRESHOLD       @0001VLS*/ 00475000
         MVC   CUASH3W(3),WRTHRSH(R2)                              0302 00476000
*        MSGADDR(30:29+LENGTH(CUASH3)) = CUASH3;           /*@0001VLS*/ 00477000
         MVC   MSGADDR+29(61),CUASH3                               0303 00478000
*        CALL PRINTIT;                                     /*@0001VLS*/ 00479000
         BAL   @14,PRINTIT                                         0304 00480000
*        CALL PRINTIT;              /* BLANK LINE            @0001VLS*/ 00481000
         BAL   @14,PRINTIT                                         0305 00482000
*        MSGADDR = CUASH4;                                 /*@0001VLS*/ 00483000
         MVI   MSGADDR+130,C' '                                    0306 00484000
         MVI   MSGADDR+131,C' '                                    0306 00485000
         MVC   MSGADDR(130),CUASH4                                 0306 00486000
*        CALL PRINTIT;                                     /*@0001VLS*/ 00487000
         BAL   @14,PRINTIT                                         0307 00488000
*        MSGADDR = CUASH5;                                 /*@0001VLS*/ 00489000
         MVI   MSGADDR+129,C' '                                    0308 00490000
         MVC   MSGADDR+130(2),MSGADDR+129                          0308 00491000
         MVC   MSGADDR(129),CUASH5                                 0308 00492000
*        CALL PRINTIT;                                     /*@0001VLS*/ 00493000
         BAL   @14,PRINTIT                                         0309 00494000
*        CALL PRINTIT;                                     /*@0001VLS*/ 00495000
         BAL   @14,PRINTIT                                         0310 00496000
*        MYLINCT = MYLINCT - FIVE;                         /*@0001VLS*/ 00497000
         L     @06,MYLINCT                                         0311 00498000
         SL    @06,@CF00036                                        0311 00499000
         ST    @06,MYLINCT                                         0311 00500000
*      END;                                                /*@0001VLS*/ 00501000
*    IF MYLINCT < THREE THEN              /* EJECT TO NEW PAGE IF    */ 00502000
@RF00298 L     @06,MYLINCT                                         0313 00503000
         C     @06,@CF00076                                        0313 00504000
         BNL   @RF00313                                            0313 00505000
*      DO;                                /* REST OF REPORT WONT FIT */ 00506000
*        CALL PAGEJECT;                                    /*@0001VLS*/ 00507000
         BAL   @14,PAGEJECT                                        0315 00508000
*        MSGADDR(40:39+LENGTH(CUASH1)) = CUASH1;           /*@0001VLS*/ 00509000
         MVC   MSGADDR+39(40),CUASH1                               0316 00510000
*        CALL PRINTIT;                                     /*@0001VLS*/ 00511000
         BAL   @14,PRINTIT                                         0317 00512000
*        MSGADDR(40:39+LENGTH(CUASH2)) = CUASH2;           /*@0001VLS*/ 00513000
         MVC   MSGADDR+39(40),CUASH2                               0318 00514000
*        CALL PRINTIT;                                     /*@0001VLS*/ 00515000
         BAL   @14,PRINTIT                                         0319 00516000
*        MSGADDR(30:29+LENGTH(CUASH3)) = CUASH3;           /*@0001VLS*/ 00517000
         MVC   MSGADDR+29(61),CUASH3                               0320 00518000
*        CALL PRINTIT;                                     /*@0001VLS*/ 00519000
         BAL   @14,PRINTIT                                         0321 00520000
*        CALL PRINTIT;                                     /*@0001VLS*/ 00521000
         BAL   @14,PRINTIT                                         0322 00522000
*        MSGADDR = CUASH4;                                 /*@0001VLS*/ 00523000
         MVI   MSGADDR+130,C' '                                    0323 00524000
         MVI   MSGADDR+131,C' '                                    0323 00525000
         MVC   MSGADDR(130),CUASH4                                 0323 00526000
*        CALL PRINTIT;                                     /*@0001VLS*/ 00527000
         BAL   @14,PRINTIT                                         0324 00528000
*        MSGADDR = CUASH5;                                 /*@0001VLS*/ 00529000
         MVI   MSGADDR+129,C' '                                    0325 00530000
         MVC   MSGADDR+130(2),MSGADDR+129                          0325 00531000
         MVC   MSGADDR(129),CUASH5                                 0325 00532000
*        CALL PRINTIT;                                     /*@0001VLS*/ 00533000
         BAL   @14,PRINTIT                                         0326 00534000
*        CALL PRINTIT;                                     /*@0001VLS*/ 00535000
         BAL   @14,PRINTIT                                         0327 00536000
*        MYLINCT = MYLINCT - SEVEN;                        /*@0001VLS*/ 00537000
         L     @06,MYLINCT                                         0328 00538000
         SL    @06,@CF00082                                        0328 00539000
         ST    @06,MYLINCT                                         0328 00540000
*      END;                                                /*@0001VLS*/ 00541000
*    CALL CONVERT (OCUA2,TEMPAREA,TWO);   /* PRIMARY CUA     @0001VLS*/ 00542000
@RF00313 MVC   @AL00001+4(8),@AL00330                              0330 00543000
         LA    @06,OCUA2(,R7)                                      0330 00544000
         ST    @06,@AL00001                                        0330 00545000
         LA    @01,@AL00001                                        0330 00546000
         BAL   @14,CONVERT                                         0330 00547000
*    OUTCUA = TEMPAREA(2:4);                               /*@0001VLS*/ 00548000
         MVC   OUTCUA(3),TEMPAREA+1                                0331 00549000
*    IF SNSCNT <= 9 | OSER74XX = HEXZEROS THEN                     0332 00550000
         CLC   SNSCNT(2,R7),@CH00085                               0332 00551000
         BNH   @RT00332                                            0332 00552000
         CLC   OSER74XX(2,R7),@CB00208                             0332 00553000
         BNE   @RF00332                                            0332 00554000
@RT00332 DS    0H                                                  0333 00555000
*      TUSER = NA;                                         /*@0001VLS*/ 00556000
         MVC   TUSER(5),@CC00483                                   0333 00557000
*    ELSE                                                          0334 00558000
*      CALL CONVBIN2(OSER74XX,TUSER);     /* TAPE UNIT SERIAL NUMBER */ 00559000
         B     @RC00332                                            0334 00560000
@RF00332 LA    @06,OSER74XX(,R7)                                   0334 00561000
         ST    @06,@AL00001                                        0334 00562000
         LA    @06,TUSER                                           0334 00563000
         ST    @06,@AL00001+4                                      0334 00564000
         LA    @01,@AL00001                                        0334 00565000
         BAL   @14,CONVBIN2                                        0334 00566000
*    CALL CONVERT (DATE(2:4),TEMPAREA,SIX);                /*@0001VLS*/ 00567000
@RC00332 MVC   @AL00001+4(8),@AL00335                              0335 00568000
         LA    @06,DATE+1(,R7)                                     0335 00569000
         ST    @06,@AL00001                                        0335 00570000
         LA    @01,@AL00001                                        0335 00571000
         BAL   @14,CONVERT                                         0335 00572000
*    DAY = TEMPAREA(3:5);                                  /*@0001VLS*/ 00573000
         MVC   DAY(3),TEMPAREA+2                                   0336 00574000
*    YEAR = TEMPAREA(1:2);                                 /*@0001VLS*/ 00575000
         MVC   YEAR(2),TEMPAREA                                    0337 00576000
*    OVOLUME = VOLID;               /* VOLUME                @0001VLS*/ 00577000
         MVC   OVOLUME(6),VOLID(R7)                                0338 00578000
*    CALL CONVERT (TIME,TEMPAREA,EIGHT);                   /*@0001VLS*/ 00579000
         MVC   @AL00001+4(8),@AL00339                              0339 00580000
         LA    @06,TIME(,R7)                                       0339 00581000
         ST    @06,@AL00001                                        0339 00582000
         LA    @01,@AL00001                                        0339 00583000
         BAL   @14,CONVERT                                         0339 00584000
*    HH = TEMPAREA(1:2);                                   /*@0001VLS*/ 00585000
         MVC   HH(2),TEMPAREA                                      0340 00586000
*    MM = TEMPAREA(3:4);                                   /*@0001VLS*/ 00587000
         MVC   MM(2),TEMPAREA+2                                    0341 00588000
*    SS = TEMPAREA(5:6);                                   /*@0001VLS*/ 00589000
         MVC   SS(2),TEMPAREA+4                                    0342 00590000
*    POINT = PERIOD;                                       /*@0001VLS*/ 00591000
         MVI   POINT,C'.'                                          0343 00592000
*    TH = TEMPAREA(7:8);                                   /*@0001VLS*/ 00593000
         MVC   TH(2),TEMPAREA+6                                    0344 00594000
*    CALL CONVBIN1(READTH,OREADS);  /* TEMPORARY READ ERRORS @0001VLS*/ 00595000
         LA    @06,READTH(,R7)                                     0345 00596000
         ST    @06,@AL00001                                        0345 00597000
         LA    @06,OREADS                                          0345 00598000
         ST    @06,@AL00001+4                                      0345 00599000
         LA    @01,@AL00001                                        0345 00600000
         BAL   @14,CONVBIN1                                        0345 00601000
*    CALL CONVBIN1(RITETH,WRTS);    /* TEMPORARY WRITE ERRORS        */ 00602000
         LA    @06,RITETH(,R7)                                     0346 00603000
         ST    @06,@AL00001                                        0346 00604000
         LA    @06,WRTS                                            0346 00605000
         ST    @06,@AL00001+4                                      0346 00606000
         LA    @01,@AL00001                                        0346 00607000
         BAL   @14,CONVBIN1                                        0346 00608000
*    CALL CONVBIN2(RECSIOS,SIOCNT); /* SIO COUNT             @0001VLS*/ 00609000
         LA    @06,RECSIOS(,R7)                                    0347 00610000
         ST    @06,@AL00001                                        0347 00611000
         LA    @06,SIOCNT                                          0347 00612000
         ST    @06,@AL00001+4                                      0347 00613000
         LA    @01,@AL00001                                        0347 00614000
         BAL   @14,CONVBIN2                                        0347 00615000
*    NRZIN = NA;                    /* ONLY VALID FOR 800 BPI        */ 00616000
         MVC   NRZIN(5),@CC00483                                   0348 00617000
*    IF OSER74XX = HEXZEROS THEN                                   0349 00618000
         CLC   OSER74XX(2,R7),@CB00208                             0349 00619000
         BNE   @RF00349                                            0349 00620000
*      DENSITY = NA;                /* NO DENSITY            @0001VLS*/ 00621000
         MVC   DENSITY(4),@CC00483                                 0350 00622000
*    ELSE                                                          0351 00623000
*      IF SENSBIT5(4) = ON THEN                                    0351 00624000
         B     @RC00349                                            0351 00625000
@RF00349 TM    SENSBIT5+3(R7),B'00000100'                          0351 00626000
         BNO   @RF00351                                            0351 00627000
*        DENSITY = BPI1600;                                /*@0001VLS*/ 00628000
         MVC   DENSITY(4),@CC00479                                 0352 00629000
*      ELSE                                                        0353 00630000
*        IF SENSBIT4(7) = ON THEN   /* BIRCH DEVICE          @0001VLS*/ 00631000
         B     @RC00351                                            0353 00632000
@RF00351 TM    SENSBIT4+6(R7),B'00001000'                          0353 00633000
         BNO   @RF00353                                            0353 00634000
*          DENSITY = BPI6250;                              /*@0001VLS*/ 00635000
         MVC   DENSITY(4),@CC00481                                 0354 00636000
*        ELSE                                                      0355 00637000
*          DO;                                             /*@0001VLS*/ 00638000
         B     @RC00353                                            0355 00639000
@RF00353 DS    0H                                                  0356 00640000
*            DENSITY = BPI800;                             /*@0001VLS*/ 00641000
         MVC   DENSITY(4),@CC00477                                 0356 00642000
*            CALL CONVBIN1(NOISE,NRZIN);   /* CONVERT NRZI NOISE     */ 00643000
         LA    @06,NOISE(,R7)                                      0357 00644000
         ST    @06,@AL00001                                        0357 00645000
         LA    @06,NRZIN                                           0357 00646000
         ST    @06,@AL00001+4                                      0357 00647000
         LA    @01,@AL00001                                        0357 00648000
         BAL   @14,CONVBIN1                                        0357 00649000
*          END;                                            /*@0001VLS*/ 00650000
*    CALL CONVBIN1(RWVRC,ORWVRC);                          /*@0001VLS*/ 00651000
@RC00353 DS    0H                                                  0359 00652000
@RC00351 DS    0H                                                  0359 00653000
@RC00349 LA    @06,RWVRC(,R7)                                      0359 00654000
         ST    @06,@AL00001                                        0359 00655000
         LA    @06,ORWVRC                                          0359 00656000
         ST    @06,@AL00001+4                                      0359 00657000
         LA    @01,@AL00001                                        0359 00658000
         BAL   @14,CONVBIN1                                        0359 00659000
*    IF SNSCNT <= 9 THEN                                           0360 00660000
         CLC   SNSCNT(2,R7),@CH00085                               0360 00661000
         BH    @RF00360                                            0360 00662000
*      DO;                                                 /*@0001VLS*/ 00663000
*        WRTGVRC = NA;                                     /*@0001VLS*/ 00664000
         MVC   WRTGVRC(5),@CC00483                                 0362 00665000
*        ERLYBOR = NA;                                     /*@0001VLS*/ 00666000
         MVC   ERLYBOR(5),@CC00483                                 0363 00667000
*        OVELCHG = NA;                                     /*@0001VLS*/ 00668000
         MVC   OVELCHG(5),@CC00483                                 0364 00669000
*      END;                                                /*@0001VLS*/ 00670000
*    ELSE                                                          0366 00671000
*      DO;                                                 /*@0001VLS*/ 00672000
         B     @RC00360                                            0366 00673000
@RF00360 DS    0H                                                  0367 00674000
*        I = CCOMVRC & ZEROFOX;           /* RIGHT HALF OF THE FIELD */ 00675000
         LA    @06,15                                              0367 00676000
         SLR   @03,@03                                             0367 00677000
         IC    @03,CCOMVRC(,R7)                                    0367 00678000
         NR    @06,@03                                             0367 00679000
         STH   @06,I                                               0367 00680000
*        CALL CONVBIN2(I,WRTGVRC);                         /*@0001VLS*/ 00681000
         LA    @01,@AL00368                                        0368 00682000
         BAL   @14,CONVBIN2                                        0368 00683000
*        I = EXPEARL & ZEROFOX;           /* RIGHT HALF OF THE FIELD */ 00684000
         LA    @06,15                                              0369 00685000
         SLR   @03,@03                                             0369 00686000
         IC    @03,EXPEARL(,R7)                                    0369 00687000
         NR    @06,@03                                             0369 00688000
         STH   @06,I                                               0369 00689000
*        CALL CONVBIN2 (I,ERLYBOR);                        /*@0001VLS*/ 00690000
         LA    @01,@AL00370                                        0370 00691000
         BAL   @14,CONVBIN2                                        0370 00692000
*        I = RECVEL & ZEROFOX;            /* RIGHT HALF OF THE FIELD */ 00693000
         LA    @06,15                                              0371 00694000
         SLR   @03,@03                                             0371 00695000
         IC    @03,RECVEL(,R7)                                     0371 00696000
         NR    @06,@03                                             0371 00697000
         STH   @06,I                                               0371 00698000
*        CALL CONVBIN2 (I,OVELCHG);                        /*@0001VLS*/ 00699000
         LA    @01,@AL00372                                        0372 00700000
         BAL   @14,CONVBIN2                                        0372 00701000
*      END;                                                /*@0001VLS*/ 00702000
*    CALL CONVBIN1 (MTELRCR,LRCMTE);                       /*@0001VLS*/ 00703000
@RC00360 LA    @06,MTELRCR(,R7)                                    0374 00704000
         ST    @06,@AL00001                                        0374 00705000
         LA    @06,LRCMTE                                          0374 00706000
         ST    @06,@AL00001+4                                      0374 00707000
         LA    @01,@AL00001                                        0374 00708000
         BAL   @14,CONVBIN1                                        0374 00709000
*    CALL CONVBIN1 (EDCCRC,CRCEDC);                        /*@0001VLS*/ 00710000
         LA    @06,EDCCRC(,R7)                                     0375 00711000
         ST    @06,@AL00001                                        0375 00712000
         LA    @06,CRCEDC                                          0375 00713000
         ST    @06,@AL00001+4                                      0375 00714000
         LA    @01,@AL00001                                        0375 00715000
         BAL   @14,CONVBIN1                                        0375 00716000
*    CALL CONVBIN1 (RECVRC,ECCENV);                        /*@0001VLS*/ 00717000
         LA    @06,RECVRC(,R7)                                     0376 00718000
         ST    @06,@AL00001                                        0376 00719000
         LA    @06,ECCENV                                          0376 00720000
         ST    @06,@AL00001+4                                      0376 00721000
         LA    @01,@AL00001                                        0376 00722000
         BAL   @14,CONVBIN1                                        0376 00723000
*    I = RECOVER & ZEROFOX;               /* RIGHT HALF OF THE FIELD */ 00724000
         LA    @06,15                                              0377 00725000
         SLR   @03,@03                                             0377 00726000
         IC    @03,RECOVER(,R7)                                    0377 00727000
         NR    @06,@03                                             0377 00728000
         STH   @06,I                                               0377 00729000
*    CALL CONVBIN2 (I,SKEWERR);                            /*@0001VLS*/ 00730000
         LA    @01,@AL00378                                        0378 00731000
         BAL   @14,CONVBIN2                                        0378 00732000
*    CALL CONVERT (CPUMOD,MCPU,TWO);                       /*@0001VLS*/ 00733000
         MVC   @AL00001+4(8),@AL00379                              0379 00734000
         LA    @06,CPUMOD(,R7)                                     0379 00735000
         ST    @06,@AL00001                                        0379 00736000
         LA    @01,@AL00001                                        0379 00737000
         BAL   @14,CONVERT                                         0379 00738000
*    CALL CONVERT (CPUSER,SERCPU,THREE);                   /*@0001VLS*/ 00739000
         MVC   @AL00001+4(8),@AL00380                              0380 00740000
         LA    @06,CPUSER(,R7)                                     0380 00741000
         ST    @06,@AL00001                                        0380 00742000
         LA    @01,@AL00001                                        0380 00743000
         BAL   @14,CONVERT                                         0380 00744000
*    IF HDRSER = HEXZEROS THEN                                     0381 00745000
         CLC   HDRSER(2,R7),@CB00208                               0381 00746000
         BNE   @RF00381                                            0381 00747000
*      HEADSER = NA;                                       /*@0001VLS*/ 00748000
         MVC   HEADSER(5),@CC00483                                 0382 00749000
*    ELSE                                                          0383 00750000
*      CALL CONVBIN2 (HDRSER,HEADSER);                     /*@0001VLS*/ 00751000
         B     @RC00381                                            0383 00752000
@RF00381 LA    @06,HDRSER(,R7)                                     0383 00753000
         ST    @06,@AL00001                                        0383 00754000
         LA    @06,HEADSER                                         0383 00755000
         ST    @06,@AL00001+4                                      0383 00756000
         LA    @01,@AL00001                                        0383 00757000
         BAL   @14,CONVBIN2                                        0383 00758000
*    CALL PRINTIT;                                         /*@0001VLS*/ 00759000
@RC00381 BAL   @14,PRINTIT                                         0384 00760000
*    MYLINCT = MYLINCT - ONE;                              /*@0001VLS*/ 00761000
         L     @06,MYLINCT                                         0385 00762000
         BCTR  @06,0                                               0385 00763000
         ST    @06,MYLINCT                                         0385 00764000
* END;                                                     /*@0001VLS*/ 00765000
@EL00008 DS    0H                                                  0386 00766000
@EF00008 DS    0H                                                  0386 00767000
@ER00008 LM    @14,@12,@SA00008                                    0386 00768000
         BR    @14                                                 0386 00769000
*FINDDATE: PROC;                                           /*@0001VLS*/ 00770000
FINDDATE STM   @14,@12,@SA00009                                    0387 00771000
*   FOUND = OFF;                                           /*@0001VLS*/ 00772000
         NI    FOUND,B'11011111'                                   0388 00773000
*   CHAIN = CHAIN && CHAIN;                                /*@0001VLS*/ 00774000
         XC    CHAIN(5),CHAIN                                      0389 00775000
*   CHAINCPU = RECCPU;             /* CPU SERIAL NUMBER      @0001VLS*/ 00776000
         MVC   CHAINCPU(3),RECCPU                                  0390 00777000
*   CHAINCUX = RECCUA;                                     /*@0001VLS*/ 00778000
         MVC   CHAINCUX(2),RECCUA                                  0391 00779000
*   CHAINCUX(2) = CHAINCUX(2) & FOXZERO;   /* CONTROL UNIT   @0001VLS*/ 00780000
         NI    CHAINCUX+1,X'F0'                                    0392 00781000
*   DATEPTR = LHDATPTR;            /* INITIALIZE FOR SEARCH  @0001VLS*/ 00782000
         L     @06,LHDATPTR                                        0393 00783000
         ST    @06,DATEPTR                                         0393 00784000
*   DO WHILE(DATEPTR ^= ZERO & FOUND = OFF);               /*@0001VLS*/ 00785000
         B     @DE00394                                            0394 00786000
@DL00394 DS    0H                                                  0395 00787000
*     IF CHAIN = DATECC THEN                                       0395 00788000
         L     @06,DATEPTR                                         0395 00789000
         CLC   CHAIN(5),DATECC(@06)                                0395 00790000
         BNE   @RF00395                                            0395 00791000
*       FOUND = ON;                /* FOUND THE APPROPRIATE SET      */ 00792000
         OI    FOUND,B'00100000'                                   0396 00793000
*     ELSE                                                         0397 00794000
*       DO;                                                /*@0001VLS*/ 00795000
         B     @RC00395                                            0397 00796000
@RF00395 DS    0H                                                  0398 00797000
*         Z = DATEPTR;             /* SAVE THIS VALUE        @0001VLS*/ 00798000
         L     @06,DATEPTR                                         0398 00799000
         ST    @06,Z                                               0398 00800000
*         DATEPTR = NEXTDATE;      /* NEXT ENTRY             @0001VLS*/ 00801000
         L     @06,NEXTDATE(,@06)                                  0399 00802000
         ST    @06,DATEPTR                                         0399 00803000
*       END;                                               /*@0001VLS*/ 00804000
*   END;                                                   /*@0001VLS*/ 00805000
@RC00395 DS    0H                                                  0401 00806000
@DE00394 L     @06,DATEPTR                                         0401 00807000
         LTR   @06,@06                                             0401 00808000
         BZ    @DC00394                                            0401 00809000
         TM    FOUND,B'00100000'                                   0401 00810000
         BZ    @DL00394                                            0401 00811000
@DC00394 DS    0H                                                  0402 00812000
*   IF DATEPTR = ZERO THEN                                         0402 00813000
         L     @06,DATEPTR                                         0402 00814000
         LTR   @06,@06                                             0402 00815000
         BNZ   @RF00402                                            0402 00816000
*     DO;                          /* GENERATE A NEW SET OF ENTRIES  */ 00817000
*       RESPECIFY (R0,R15) RESTRICTED;                     /*@0001VLS*/ 00818000
*       R0 = LENGTH(DATEAREA);                             /*@0001VLS*/ 00819000
         LA    R0,15                                               0405 00820000
*       GEN(GETMAIN EC,LV=(0),A=DATEPTR);                  /*@0001VLS*/ 00821000
         GETMAIN EC,LV=(0),A=DATEPTR                                    00822000
*       RETCODE = R15;                                     /*@0001VLS*/ 00823000
         ST    R15,RETCODE                                         0407 00824000
*       RESPECIFY (R0,R15) UNRESTRICTED;                   /*@0001VLS*/ 00825000
*       IF RETCODE = ZERO THEN                                     0409 00826000
         L     @06,RETCODE                                         0409 00827000
         SLR   @03,@03                                             0409 00828000
         CR    @06,@03                                             0409 00829000
         BNE   @RF00409                                            0409 00830000
*         DO;                                              /*@0001VLS*/ 00831000
*           NEXTDATE = ZERO;       /* CLEAR NEXT AREA POINTER        */ 00832000
         L     @06,DATEPTR                                         0411 00833000
         ST    @03,NEXTDATE(,@06)                                  0411 00834000
*           LOWDATE = DATE(2:4);                           /*@0001VLS*/ 00835000
         MVC   LOWDATE(3,@06),DATE+1(R7)                           0412 00836000
*           HIDATE = DATE(2:4);                            /*@0001VLS*/ 00837000
         MVC   HIDATE(3,@06),DATE+1(R7)                            0413 00838000
*           DATECC = CHAIN;                                /*@0001VLS*/ 00839000
         MVC   DATECC(5,@06),CHAIN                                 0414 00840000
*           IF LHDATPTR = ZERO THEN                                0415 00841000
         C     @03,LHDATPTR                                        0415 00842000
         BNE   @RF00415                                            0415 00843000
*             LHDATPTR = DATEPTR;  /* POINT TO FIRST ENTRY   @0001VLS*/ 00844000
         ST    @06,LHDATPTR                                        0416 00845000
*           ELSE                                                   0417 00846000
*             Z -> NEXTDATE = DATEPTR;                     /*@0001VLS*/ 00847000
         B     @RC00415                                            0417 00848000
@RF00415 L     @06,DATEPTR                                         0417 00849000
         L     @03,Z                                               0417 00850000
         ST    @06,NEXTDATE(,@03)                                  0417 00851000
*         END;                                             /*@0001VLS*/ 00852000
@RC00415 DS    0H                                                  0419 00853000
*     END;                                                 /*@0001VLS*/ 00854000
@RF00409 DS    0H                                                  0420 00855000
*   IF HVOLDATE > DATE(2:4) THEN                                   0420 00856000
@RF00402 CLC   HVOLDATE(3),DATE+1(R7)                              0420 00857000
         BNH   @RF00420                                            0420 00858000
*     HVOLDATE = DATE(2:4);        /* HIGH VOLUME DATE       @0001VLS*/ 00859000
         MVC   HVOLDATE(3),DATE+1(R7)                              0421 00860000
*   IF LVOLDATE < DATE(2:4) THEN                                   0422 00861000
@RF00420 CLC   LVOLDATE(3),DATE+1(R7)                              0422 00862000
         BNL   @RF00422                                            0422 00863000
*     LVOLDATE = DATE(2:4);        /* LOW VOLUME DATE        @0001VLS*/ 00864000
         MVC   LVOLDATE(3),DATE+1(R7)                              0423 00865000
* END;                                                     /*@0001VLS*/ 00866000
@EL00009 DS    0H                                                  0424 00867000
@EF00009 DS    0H                                                  0424 00868000
@ER00009 LM    @14,@12,@SA00009                                    0424 00869000
         BR    @14                                                 0424 00870000
*OUTTYPES: PROC;                   /* SORT BREAK PROCESSING  @0001VLS*/ 00871000
OUTTYPES STM   @14,@12,@SA00010                                    0425 00872000
* IF HEAD3 = OFF THEN                                              0426 00873000
         TM    HEAD3,B'00000100'                                   0426 00874000
         BNZ   @RF00426                                            0426 00875000
*   DO;                                                    /*@0001VLS*/ 00876000
*     IF HEAD2 = ON THEN                                           0428 00877000
         TM    HEAD2,B'00001000'                                   0428 00878000
         BNO   @RF00428                                            0428 00879000
*       CALL OUTCODES;             /* THE ERROR CODES        @0001VLS*/ 00880000
         BAL   @14,OUTCODES                                        0429 00881000
*     MSGADDR = SPACER;            /* SPACER LINE            @0001VLS*/ 00882000
@RF00428 MVC   MSGADDR(132),SPACER                                 0430 00883000
*     CALL PRINTIT;                                        /*@0001VLS*/ 00884000
         BAL   @14,PRINTIT                                         0431 00885000
*     CALL PRINTIT;                                        /*@0001VLS*/ 00886000
         BAL   @14,PRINTIT                                         0432 00887000
*     MYLINCT = MYLINCT - TWO;                             /*@0001VLS*/ 00888000
         LA    @06,2                                               0433 00889000
         L     @03,MYLINCT                                         0433 00890000
         SLR   @03,@06                                             0433 00891000
         ST    @03,MYLINCT                                         0433 00892000
*     IF MYLINCT < TWO THEN        /* BOTH LINES WILL NOT FIT ON PAGE*/ 00893000
         CR    @03,@06                                             0434 00894000
         BNL   @RF00434                                            0434 00895000
*       CALL PAGEJECT;                                     /*@0001VLS*/ 00896000
         BAL   @14,PAGEJECT                                        0435 00897000
*     MSGADDR(40:39+LENGTH(CUATH1)) = CUATH1;              /*@0001VLS*/ 00898000
@RF00434 MVC   MSGADDR+39(44),CUATH1                               0436 00899000
*     CALL PRINTIT;                                        /*@0001VLS*/ 00900000
         BAL   @14,PRINTIT                                         0437 00901000
*     MSGADDR(20:19+LENGTH(NOTOTALS)) = NOTOTALS;          /*@0001VLS*/ 00902000
         MVC   MSGADDR+19(32),NOTOTALS                             0438 00903000
*     CALL PRINTIT;                                        /*@0001VLS*/ 00904000
         BAL   @14,PRINTIT                                         0439 00905000
*   END;                                                   /*@0001VLS*/ 00906000
* HEAD1 = OFF;                                             /*@0001VLS*/ 00907000
@RF00426 DS    0H                                                  0442 00908000
* HEAD2 = OFF;                                             /*@0001VLS*/ 00909000
* HEAD3 = OFF;                                             /*@0001VLS*/ 00910000
         NI    HEAD1,B'11100011'                                   0443 00911000
* IF EOTABLE ^= 'FFFF'X THEN                                       0444 00912000
         L     @06,CURRPTR                                         0444 00913000
         CLC   EOTABLE(2,@06),@CB00261                             0444 00914000
         BE    @RF00444                                            0444 00915000
*   OLDCPUCU = SORTCPUC;                                   /*@0001VLS*/ 00916000
         MVC   OLDCPUCU(5),SORTCPUC(@06)                           0445 00917000
* END;                                                     /*@0001VLS*/ 00918000
@EL00010 DS    0H                                                  0446 00919000
@EF00010 DS    0H                                                  0446 00920000
@ER00010 LM    @14,@12,@SA00010                                    0446 00921000
         BR    @14                                                 0446 00922000
*/*                                                          @0001VLS*/ 00923000
*/* OUTPUT THE TEMPORARY ERROR SUMMARY.  ONLY PRODUCE A LINE FOR EACH*/ 00924000
*/* CUA FOR WHICH THERE WERE ANY SIOS.                       @0001VLS*/ 00925000
*/*                                                          @0001VLS*/ 00926000
*TEMPSUM:  PROC;                                           /*@0001VLS*/ 00927000
TEMPSUM  STM   @14,@12,@SA00011                                    0447 00928000
*   SYSSIOS = ZERO;                                        /*@0001VLS*/ 00929000
         SLR   @06,@06                                             0448 00930000
         ST    @06,SYSSIOS                                         0448 00931000
*   SYSRDS = ZERO;                                         /*@0001VLS*/ 00932000
         ST    @06,SYSRDS                                          0449 00933000
*   SYSRTS = ZERO;                                         /*@0001VLS*/ 00934000
         ST    @06,SYSRTS                                          0450 00935000
*   SYSMNTS = ZERO;                                        /*@0001VLS*/ 00936000
         ST    @06,SYSMNTS                                         0451 00937000
*   RECCPU = CPU;                      /* INITIALIZE FOR THE SEARCH  */ 00938000
         L     @06,CURRPTR                                         0452 00939000
         MVC   RECCPU(3),CPU(@06)                                  0452 00940000
*   RECCUA = CONTRCUA;                 /* OF THE DATE RANGE  @0001VLS*/ 00941000
         MVC   RECCUA(2),CONTRCUA(@06)                             0453 00942000
*   IF HEAD1 = OFF THEN                                            0454 00943000
         TM    HEAD1,B'00010000'                                   0454 00944000
         BNZ   @RF00454                                            0454 00945000
*     CALL NOHEAD1;                    /* OUTPUT NO PART 1 MESSAGE   */ 00946000
         BAL   @14,NOHEAD1                                         0455 00947000
*   IF HEAD2 = OFF THEN                                            0456 00948000
@RF00454 TM    HEAD2,B'00001000'                                   0456 00949000
         BNZ   @RF00456                                            0456 00950000
*     CALL NOHEAD2;                    /* OUTPUT NO PART2 MESSAGE    */ 00951000
         BAL   @14,NOHEAD2                                         0457 00952000
*   ELSE                                                           0458 00953000
*     CALL OUTCODES;                   /* OUTPUT ERROR CODES @0001VLS*/ 00954000
         B     @RC00456                                            0458 00955000
@RF00456 BAL   @14,OUTCODES                                        0458 00956000
*   MSGADDR = SPACER;                                      /*@0001VLS*/ 00957000
@RC00456 MVC   MSGADDR(132),SPACER                                 0459 00958000
*   CALL PRINTIT;                                          /*@0001VLS*/ 00959000
         BAL   @14,PRINTIT                                         0460 00960000
*   CALL PRINTIT;                                          /*@0001VLS*/ 00961000
         BAL   @14,PRINTIT                                         0461 00962000
*   MYLINCT = MYLINCT - TWO;                               /*@0001VLS*/ 00963000
         L     @06,MYLINCT                                         0462 00964000
         BCTR  @06,0                                               0462 00965000
         BCTR  @06,0                                               0462 00966000
         ST    @06,MYLINCT                                         0462 00967000
*   IF MYLINCT < EIGHT THEN            /* PAGE EJECT IF REST OF REPRT*/ 00968000
         C     @06,@CF00066                                        0463 00969000
         BNL   @RF00463                                            0463 00970000
*     CALL PAGEJECT;                   /* WILL NOT FIT       @0001VLS*/ 00971000
         BAL   @14,PAGEJECT                                        0464 00972000
*   MSGADDR(40:39+LENGTH(CUATH1)) = CUATH1;                /*@0001VLS*/ 00973000
@RF00463 MVC   MSGADDR+39(44),CUATH1                               0465 00974000
*   CALL PRINTIT;                                          /*@0001VLS*/ 00975000
         BAL   @14,PRINTIT                                         0466 00976000
*   MSGADDR(7:6+LENGTH(CUATH2)) = CUATH2;                  /*@0001VLS*/ 00977000
         MVC   MSGADDR+6(82),CUATH2                                0467 00978000
*   CALL PRINTIT;                                          /*@0001VLS*/ 00979000
         BAL   @14,PRINTIT                                         0468 00980000
*   MSGADDR(11:10+LENGTH(CUATH3)) = CUATH3;                /*@0001VLS*/ 00981000
         MVC   MSGADDR+10(108),CUATH3                              0469 00982000
*   CALL PRINTIT;                                          /*@0001VLS*/ 00983000
         BAL   @14,PRINTIT                                         0470 00984000
*   MSGADDR = CUATH4;                                      /*@0001VLS*/ 00985000
         MVI   MSGADDR+119,C' '                                    0471 00986000
         MVC   MSGADDR+120(12),MSGADDR+119                         0471 00987000
         MVC   MSGADDR(119),CUATH4                                 0471 00988000
*   CALL PRINTIT;                                          /*@0001VLS*/ 00989000
         BAL   @14,PRINTIT                                         0472 00990000
*   CALL PRINTIT;                                          /*@0001VLS*/ 00991000
         BAL   @14,PRINTIT                                         0473 00992000
*   SUMPTR = TABCCHHR(1:4);            /* ADDRESS OF THE COUNTERS    */ 00993000
         L     @06,CURRPTR                                         0474 00994000
         MVC   SUMPTR(4),TABCCHHR(@06)                             0474 00995000
*   DO I = 1 TO 16;                                        /*@0001VLS*/ 00996000
         LA    @06,1                                               0475 00997000
         STH   @06,I                                               0475 00998000
@DL00475 DS    0H                                                  0476 00999000
*     IF SIOS(I) ^= ZERO THEN                                      0476 01000000
         MH    @06,@CH01401                                        0476 01001000
         L     @03,SUMPTR                                          0476 01002000
         AL    @03,@CF01417                                        0476 01003000
         L     @06,SIOS-16(@06,@03)                                0476 01004000
         LTR   @06,@06                                             0476 01005000
         BZ    @RF00476                                            0476 01006000
*       DO;                            /* ANY SIOS           @0001VLS*/ 01007000
*         IF MYLINCT < THREE THEN      /* NEW PAGE IF REST OF REPORT */ 01008000
         L     @06,MYLINCT                                         0478 01009000
         C     @06,@CF00076                                        0478 01010000
         BNL   @RF00478                                            0478 01011000
*           DO;                        /* WILL NOT FIT       @0001VLS*/ 01012000
*             CALL PAGEJECT;                               /*@0001VLS*/ 01013000
         BAL   @14,PAGEJECT                                        0480 01014000
*             MSGADDR(40:30+LENGTH(CUATH1)) = CUATH1;      /*@0001VLS*/ 01015000
         MVC   MSGADDR+39(35),CUATH1                               0481 01016000
*             CALL PRINTIT;                                /*@0001VLS*/ 01017000
         BAL   @14,PRINTIT                                         0482 01018000
*             MSGADDR(7:6+LENGTH(CUATH2)) = CUATH2;        /*@0001VLS*/ 01019000
         MVC   MSGADDR+6(82),CUATH2                                0483 01020000
*             CALL PRINTIT;                                /*@0001VLS*/ 01021000
         BAL   @14,PRINTIT                                         0484 01022000
*             MSGADDR(11:10+LENGTH(CUATH3)) = CUATH3;      /*@0001VLS*/ 01023000
         MVC   MSGADDR+10(108),CUATH3                              0485 01024000
*             CALL PRINTIT;                                /*@0001VLS*/ 01025000
         BAL   @14,PRINTIT                                         0486 01026000
*             MSGADDR = CUATH4;                            /*@0001VLS*/ 01027000
         MVI   MSGADDR+119,C' '                                    0487 01028000
         MVC   MSGADDR+120(12),MSGADDR+119                         0487 01029000
         MVC   MSGADDR(119),CUATH4                                 0487 01030000
*             CALL PRINTIT;                                /*@0001VLS*/ 01031000
         BAL   @14,PRINTIT                                         0488 01032000
*             CALL PRINTIT;                                /*@0001VLS*/ 01033000
         BAL   @14,PRINTIT                                         0489 01034000
*             MYLINCT = MYLINCT - FIVE;                    /*@0001VLS*/ 01035000
         L     @06,MYLINCT                                         0490 01036000
         SL    @06,@CF00036                                        0490 01037000
         ST    @06,MYLINCT                                         0490 01038000
*           END;                                           /*@0001VLS*/ 01039000
*         TEMPAREA(19:20) = CUX | (I-1);  /* CONVERT THE CUA @0001VLS*/ 01040000
@RF00478 LH    @06,I                                               0492 01041000
         BCTR  @06,0                                               0492 01042000
         L     @03,SUMPTR                                          0492 01043000
         SLR   @15,@15                                             0492 01044000
         ICM   @15,3,CUX(@03)                                      0492 01045000
         OR    @06,@15                                             0492 01046000
         STCM  @06,3,TEMPAREA+18                                   0492 01047000
*         CALL CONVERT(TEMPAREA(19:20),TEMPAREA,TWO);      /*@0001VLS*/ 01048000
         LA    @01,@AL00493                                        0493 01049000
         BAL   @14,CONVERT                                         0493 01050000
*         SUMCUA = TEMPAREA(2:4);                          /*@0001VLS*/ 01051000
         MVC   SUMCUA(3),TEMPAREA+1                                0494 01052000
*         CALL CALCPERC(READER(I),SIOS(I),READPERC);       /*@0001VLS*/ 01053000
         L     @06,SUMPTR                                          0495 01054000
         LH    @03,I                                               0495 01055000
         MH    @03,@CH01401                                        0495 01056000
         LA    @01,0(@03,@06)                                      0495 01057000
         AL    @01,@CF01418                                        0495 01058000
         ST    @01,@AL00001                                        0495 01059000
         AL    @06,@CF01417                                        0495 01060000
         LA    @06,SIOS-16(@03,@06)                                0495 01061000
         ST    @06,@AL00001+4                                      0495 01062000
         LA    @06,READPERC                                        0495 01063000
         ST    @06,@AL00001+8                                      0495 01064000
         LA    @01,@AL00001                                        0495 01065000
         BAL   @14,CALCPERC                                        0495 01066000
*         CALL CALCPERC(WRITER(I),SIOS(I),RITEPERC);       /*@0001VLS*/ 01067000
         L     @06,SUMPTR                                          0496 01068000
         LH    @03,I                                               0496 01069000
         MH    @03,@CH01401                                        0496 01070000
         LA    @01,0(@03,@06)                                      0496 01071000
         AL    @01,@CF01419                                        0496 01072000
         ST    @01,@AL00001                                        0496 01073000
         AL    @06,@CF01417                                        0496 01074000
         LA    @06,SIOS-16(@03,@06)                                0496 01075000
         ST    @06,@AL00001+4                                      0496 01076000
         LA    @06,RITEPERC                                        0496 01077000
         ST    @06,@AL00001+8                                      0496 01078000
         LA    @01,@AL00001                                        0496 01079000
         BAL   @14,CALCPERC                                        0496 01080000
*         CALL CONVERT (FDATE(I),TEMPAREA,THREE);          /*@0001VLS*/ 01081000
         MVC   @AL00001+4(8),@AL00497                              0497 01082000
         LH    @06,I                                               0497 01083000
         MH    @06,@CH01401                                        0497 01084000
         L     @03,SUMPTR                                          0497 01085000
         LA    @06,FDATE-48(@06,@03)                               0497 01086000
         ST    @06,@AL00001                                        0497 01087000
         LA    @01,@AL00001                                        0497 01088000
         BAL   @14,CONVERT                                         0497 01089000
*         SUMFDATE = TEMPAREA(1:5);                        /*@0001VLS*/ 01090000
         MVC   SUMFDATE(5),TEMPAREA                                0498 01091000
*         CALL CONVERT (TDATE(I),TEMPAREA,THREE);          /*@0001VLS*/ 01092000
         MVC   @AL00001+4(8),@AL00499                              0499 01093000
         LH    @06,I                                               0499 01094000
         MH    @06,@CH01401                                        0499 01095000
         L     @03,SUMPTR                                          0499 01096000
         LA    @06,TDATE-48(@06,@03)                               0499 01097000
         ST    @06,@AL00001                                        0499 01098000
         LA    @01,@AL00001                                        0499 01099000
         BAL   @14,CONVERT                                         0499 01100000
*         SUMTDATE = TEMPAREA(1:5);                        /*@0001VLS*/ 01101000
         MVC   SUMTDATE(5),TEMPAREA                                0500 01102000
*         CALL CONVBIN3(SIOS(I),SUMSIOS);                  /*@0001VLS*/ 01103000
         LH    @06,I                                               0501 01104000
         MH    @06,@CH01401                                        0501 01105000
         L     @03,SUMPTR                                          0501 01106000
         AL    @03,@CF01417                                        0501 01107000
         LA    @06,SIOS-16(@06,@03)                                0501 01108000
         ST    @06,@AL00001                                        0501 01109000
         LA    @06,SUMSIOS                                         0501 01110000
         ST    @06,@AL00001+4                                      0501 01111000
         LA    @01,@AL00001                                        0501 01112000
         BAL   @14,CONVBIN3                                        0501 01113000
*         SYSSIOS = SYSSIOS + SIOS(I);   /* TOTAL ALL SIOS   @0001VLS*/ 01114000
         L     @06,SUMPTR                                          0502 01115000
         LH    @03,I                                               0502 01116000
         MH    @03,@CH01401                                        0502 01117000
         L     @15,SYSSIOS                                         0502 01118000
         LA    @14,0(@03,@06)                                      0502 01119000
         AL    @14,@CF01417                                        0502 01120000
         AL    @15,SIOS-16(,@14)                                   0502 01121000
         ST    @15,SYSSIOS                                         0502 01122000
*         CALL CONVBIN (MOUNTS(I),SUMMNTS);                /*@0001VLS*/ 01123000
         AL    @06,@CF01420                                        0503 01124000
         LA    @06,MOUNTS-36(@03,@06)                              0503 01125000
         ST    @06,@AL00001                                        0503 01126000
         LA    @06,SUMMNTS                                         0503 01127000
         ST    @06,@AL00001+4                                      0503 01128000
         LA    @01,@AL00001                                        0503 01129000
         BAL   @14,CONVBIN                                         0503 01130000
*         SYSMNTS = SYSMNTS + MOUNTS(I);  /* TOTAL ALL MOUNTS        */ 01131000
         L     @06,SUMPTR                                          0504 01132000
         LH    @03,I                                               0504 01133000
         MH    @03,@CH01401                                        0504 01134000
         L     @15,SYSMNTS                                         0504 01135000
         LA    @14,0(@03,@06)                                      0504 01136000
         AL    @14,@CF01420                                        0504 01137000
         AL    @15,MOUNTS-36(,@14)                                 0504 01138000
         ST    @15,SYSMNTS                                         0504 01139000
*         SUMP1 = PERIOD;                                  /*@0001VLS*/ 01140000
         MVI   SUMP1,C'.'                                          0505 01141000
*         CALL CONVBIN (READER(I),SUMREAD);                /*@0001VLS*/ 01142000
         AL    @06,@CF01418                                        0506 01143000
         LA    @06,READER-20(@03,@06)                              0506 01144000
         ST    @06,@AL00001                                        0506 01145000
         LA    @06,SUMREAD                                         0506 01146000
         ST    @06,@AL00001+4                                      0506 01147000
         LA    @01,@AL00001                                        0506 01148000
         BAL   @14,CONVBIN                                         0506 01149000
*         SYSRDS = SYSRDS + READER(I);                     /*@0001VLS*/ 01150000
         L     @06,SUMPTR                                          0507 01151000
         LH    @03,I                                               0507 01152000
         MH    @03,@CH01401                                        0507 01153000
         L     @15,SYSRDS                                          0507 01154000
         LA    @14,0(@03,@06)                                      0507 01155000
         AL    @14,@CF01418                                        0507 01156000
         AL    @15,READER-20(,@14)                                 0507 01157000
         ST    @15,SYSRDS                                          0507 01158000
*         CALL CONVBIN (CLEANER(I),SUMCLEAN);              /*@0001VLS*/ 01159000
         AL    @06,@CF01421                                        0508 01160000
         LA    @06,CLEANER-24(@03,@06)                             0508 01161000
         ST    @06,@AL00001                                        0508 01162000
         LA    @06,SUMCLEAN                                        0508 01163000
         ST    @06,@AL00001+4                                      0508 01164000
         LA    @01,@AL00001                                        0508 01165000
         BAL   @14,CONVBIN                                         0508 01166000
*         SUMP2 = PERIOD;                                  /*@0001VLS*/ 01167000
         MVI   SUMP2,C'.'                                          0509 01168000
*         CALL CONVBIN (WRITER(I),SUMWRITE);               /*@0001VLS*/ 01169000
         LH    @06,I                                               0510 01170000
         MH    @06,@CH01401                                        0510 01171000
         L     @03,SUMPTR                                          0510 01172000
         AL    @03,@CF01419                                        0510 01173000
         LA    @06,WRITER-28(@06,@03)                              0510 01174000
         ST    @06,@AL00001                                        0510 01175000
         LA    @06,SUMWRITE                                        0510 01176000
         ST    @06,@AL00001+4                                      0510 01177000
         LA    @01,@AL00001                                        0510 01178000
         BAL   @14,CONVBIN                                         0510 01179000
*         SYSRTS = SYSRTS + WRITER(I);                     /*@0001VLS*/ 01180000
         L     @06,SUMPTR                                          0511 01181000
         LH    @03,I                                               0511 01182000
         MH    @03,@CH01401                                        0511 01183000
         L     @15,SYSRTS                                          0511 01184000
         LA    @14,0(@03,@06)                                      0511 01185000
         AL    @14,@CF01419                                        0511 01186000
         AL    @15,WRITER-28(,@14)                                 0511 01187000
         ST    @15,SYSRTS                                          0511 01188000
*         CALL CONVBIN (ERASE(I),SUMERASE);                /*@0001VLS*/ 01189000
         AL    @06,@CF01422                                        0512 01190000
         LA    @06,ERASE-32(@03,@06)                               0512 01191000
         ST    @06,@AL00001                                        0512 01192000
         LA    @06,SUMERASE                                        0512 01193000
         ST    @06,@AL00001+4                                      0512 01194000
         LA    @01,@AL00001                                        0512 01195000
         BAL   @14,CONVBIN                                         0512 01196000
*         SUMP3 = PERIOD;                                  /*@0001VLS*/ 01197000
         MVI   SUMP3,C'.'                                          0513 01198000
*         CALL CONVBIN2(VRC(I),SUMVRC);                    /*@0001VLS*/ 01199000
         LH    @06,I                                               0514 01200000
         MH    @06,@CH01401                                        0514 01201000
         L     @03,SUMPTR                                          0514 01202000
         AL    @03,@CF01423                                        0514 01203000
         LA    @06,VRC-40(@06,@03)                                 0514 01204000
         ST    @06,@AL00001                                        0514 01205000
         LA    @06,SUMVRC                                          0514 01206000
         ST    @06,@AL00001+4                                      0514 01207000
         LA    @01,@AL00001                                        0514 01208000
         BAL   @14,CONVBIN2                                        0514 01209000
*         CALL CONVBIN2(STRDCHK(I),SUMSTRD);               /*@0001VLS*/ 01210000
         LH    @06,I                                               0515 01211000
         MH    @06,@CH01401                                        0515 01212000
         L     @03,SUMPTR                                          0515 01213000
         AL    @03,@CF01424                                        0515 01214000
         LA    @06,STRDCHK-42(@06,@03)                             0515 01215000
         ST    @06,@AL00001                                        0515 01216000
         LA    @06,SUMSTRD                                         0515 01217000
         ST    @06,@AL00001+4                                      0515 01218000
         LA    @01,@AL00001                                        0515 01219000
         BAL   @14,CONVBIN2                                        0515 01220000
*         CALL CONVBIN2(PARTRECK(I),SUMPART);              /*@0001VLS*/ 01221000
         LH    @06,I                                               0516 01222000
         MH    @06,@CH01401                                        0516 01223000
         L     @03,SUMPTR                                          0516 01224000
         AL    @03,@CF01425                                        0516 01225000
         LA    @06,PARTRECK-44(@06,@03)                            0516 01226000
         ST    @06,@AL00001                                        0516 01227000
         LA    @06,SUMPART                                         0516 01228000
         ST    @06,@AL00001+4                                      0516 01229000
         LA    @01,@AL00001                                        0516 01230000
         BAL   @14,CONVBIN2                                        0516 01231000
*         CALL CONVBIN2(OVERRUNS(I),SUMOVER);              /*@0001VLS*/ 01232000
         LH    @06,I                                               0517 01233000
         MH    @06,@CH01401                                        0517 01234000
         L     @03,SUMPTR                                          0517 01235000
         BCTR  @03,0                                               0517 01236000
         BCTR  @03,0                                               0517 01237000
         LA    @06,OVERRUNS-46(@06,@03)                            0517 01238000
         ST    @06,@AL00001                                        0517 01239000
         LA    @06,SUMOVER                                         0517 01240000
         ST    @06,@AL00001+4                                      0517 01241000
         LA    @01,@AL00001                                        0517 01242000
         BAL   @14,CONVBIN2                                        0517 01243000
*         CALL CONVBIN2(VELCHGS(I),SUMVEL);                /*@0001VLS*/ 01244000
         LH    @06,I                                               0518 01245000
         MH    @06,@CH01401                                        0518 01246000
         L     @03,SUMPTR                                          0518 01247000
         LA    @06,VELCHGS-48(@06,@03)                             0518 01248000
         ST    @06,@AL00001                                        0518 01249000
         LA    @06,SUMVEL                                          0518 01250000
         ST    @06,@AL00001+4                                      0518 01251000
         LA    @01,@AL00001                                        0518 01252000
         BAL   @14,CONVBIN2                                        0518 01253000
*         CALL CONVBIN2(IBG(I),SUMIBG);                    /*@0001VLS*/ 01254000
         LH    @06,I                                               0519 01255000
         MH    @06,@CH01401                                        0519 01256000
         L     @03,SUMPTR                                          0519 01257000
         LA    @06,IBG-48(@06,@03)                                 0519 01258000
         ST    @06,@AL00001                                        0519 01259000
         LA    @06,SUMIBG                                          0519 01260000
         ST    @06,@AL00001+4                                      0519 01261000
         LA    @01,@AL00001                                        0519 01262000
         BAL   @14,CONVBIN2                                        0519 01263000
*         CALL PRINTIT;                                    /*@0001VLS*/ 01264000
         BAL   @14,PRINTIT                                         0520 01265000
*         MYLINCT = MYLINCT - ONE;                         /*@0001VLS*/ 01266000
         L     @06,MYLINCT                                         0521 01267000
         BCTR  @06,0                                               0521 01268000
         ST    @06,MYLINCT                                         0521 01269000
*       END;                                               /*@0001VLS*/ 01270000
*   END;                                                   /*@0001VLS*/ 01271000
@RF00476 LA    @06,1                                               0523 01272000
         AH    @06,I                                               0523 01273000
         STH   @06,I                                               0523 01274000
         C     @06,@CF00088                                        0523 01275000
         BNH   @DL00475                                            0523 01276000
*   CALL PRINTIT;                                          /*@0001VLS*/ 01277000
         BAL   @14,PRINTIT                                         0524 01278000
*   IF SYSSIOS ^= ZERO THEN                                        0525 01279000
         L     @06,SYSSIOS                                         0525 01280000
         LTR   @06,@06                                             0525 01281000
         BZ    @RF00525                                            0525 01282000
*     DO;                              /* TOTALS LINE        @0001VLS*/ 01283000
*       SUMT1 = TOTAL;                                     /*@0001VLS*/ 01284000
         MVC   SUMT1(6),@CC00500                                   0527 01285000
*       CALL CALCPERC(SYSRDS,SYSSIOS,READPERC);            /*@0001VLS*/ 01286000
         LA    @01,@AL00528                                        0528 01287000
         BAL   @14,CALCPERC                                        0528 01288000
*       CALL CALCPERC(SYSRTS,SYSSIOS,RITEPERC);            /*@0001VLS*/ 01289000
         LA    @01,@AL00529                                        0529 01290000
         BAL   @14,CALCPERC                                        0529 01291000
*       CALL CONVBIN3(SYSSIOS,SUMSIOS);                    /*@0001VLS*/ 01292000
         LA    @01,@AL00530                                        0530 01293000
         BAL   @14,CONVBIN3                                        0530 01294000
*       CALL CONVBIN (SYSMNTS,SUMMNTS);                    /*@0001VLS*/ 01295000
         LA    @01,@AL00531                                        0531 01296000
         BAL   @14,CONVBIN                                         0531 01297000
*       CALL CONVBIN (SYSRDS,SUMREAD);                     /*@0001VLS*/ 01298000
         LA    @01,@AL00532                                        0532 01299000
         BAL   @14,CONVBIN                                         0532 01300000
*       CALL CONVBIN (SYSRTS,SUMWRITE);                    /*@0001VLS*/ 01301000
         LA    @01,@AL00533                                        0533 01302000
         BAL   @14,CONVBIN                                         0533 01303000
*     END;                                                 /*@0001VLS*/ 01304000
*   ELSE                                                           0535 01305000
*     MSGADDR(1:LENGTH(NOTOTALS)) = NOTOTALS;              /*@0001VLS*/ 01306000
         B     @RC00525                                            0535 01307000
@RF00525 MVC   MSGADDR(32),NOTOTALS                                0535 01308000
*   CALL PRINTIT;                                          /*@0001VLS*/ 01309000
@RC00525 BAL   @14,PRINTIT                                         0536 01310000
*   HEAD3 = ON;                                            /*@0001VLS*/ 01311000
         OI    HEAD3,B'00000100'                                   0537 01312000
*   CONTRVOL(1:2) = EOT;                                   /*@0001VLS*/ 01313000
         L     @06,CURRPTR                                         0538 01314000
         MVC   CONTRVOL(2,@06),@CB00261                            0538 01315000
* END;                                                     /*@0001VLS*/ 01316000
@EL00011 DS    0H                                                  0539 01317000
@EF00011 DS    0H                                                  0539 01318000
@ER00011 LM    @14,@12,@SA00011                                    0539 01319000
         BR    @14                                                 0539 01320000
*/*                                                          @0001VLS*/ 01321000
*/* OUTPUT THE VOLUME SECTION OF THE REPORT.  FIRST PUT OUT THE      */ 01322000
*/* HEADERS.  IF NO RECORDS ARE PRESENT, THEN PUT OUT THE NO RECORDS */ 01323000
*/* MESSAGE.  OTHERWISE OUTPUT ONE LINE FOR EACH VOLUME.     @0001VLS*/ 01324000
*/*                                                          @0001VLS*/ 01325000
*OUTVOLID:  PROC;                                          /*@0001VLS*/ 01326000
OUTVOLID STM   @14,@12,@SA00012                                    0540 01327000
*     CALL PAGEJECT;                                       /*@0001VLS*/ 01328000
         BAL   @14,PAGEJECT                                        0541 01329000
*     VOLH1R = RDTHRSH;                /* READ THRESHOLD     @0001VLS*/ 01330000
         MVC   VOLH1R(3),RDTHRSH(R2)                               0542 01331000
*     VOLH1W = WRTHRSH;                /* WRITE THRESHOLD    @0001VLS*/ 01332000
         MVC   VOLH1W(3),WRTHRSH(R2)                               0543 01333000
*     MSGADDR = VOLHEAD1;                                  /*@0001VLS*/ 01334000
         MVI   MSGADDR+104,C' '                                    0544 01335000
         MVC   MSGADDR+105(27),MSGADDR+104                         0544 01336000
         MVC   MSGADDR(104),VOLHEAD1                               0544 01337000
*     CALL PRINTIT;                                        /*@0001VLS*/ 01338000
         BAL   @14,PRINTIT                                         0545 01339000
*     IF EXCTHRES(1) = ZERO & EXCTHRES(2) = ZERO THEN              0546 01340000
         SLR   @06,@06                                             0546 01341000
         C     @06,EXCTHRES                                        0546 01342000
         BNE   @RF00546                                            0546 01343000
         C     @06,EXCTHRES+4                                      0546 01344000
         BNE   @RF00546                                            0546 01345000
*       DO;                            /* NO VOLUMES PRESENT @0001VLS*/ 01346000
*         CALL CONVERT (LVOLDATE,TEMPAREA,THREE);  /* LOW DATE       */ 01347000
         LA    @01,@AL00548                                        0548 01348000
         BAL   @14,CONVERT                                         0548 01349000
*         VOLH5L = TEMPAREA(1:5);                          /*@0001VLS*/ 01350000
         MVC   VOLH5L(5),TEMPAREA                                  0549 01351000
*         CALL CONVERT (HVOLDATE,TEMPAREA,THREE);  /* HIGH DATE      */ 01352000
         LA    @01,@AL00550                                        0550 01353000
         BAL   @14,CONVERT                                         0550 01354000
*         VOLH5H = TEMPAREA(1:5);                          /*@0001VLS*/ 01355000
         MVC   VOLH5H(5),TEMPAREA                                  0551 01356000
*         MSGADDR(40:39+LENGTH(NOVOLS)) = NOVOLS;          /*@0001VLS*/ 01357000
         MVC   MSGADDR+39(46),NOVOLS                               0552 01358000
*         CALL PRINTIT;                                    /*@0001VLS*/ 01359000
         BAL   @14,PRINTIT                                         0553 01360000
*       END;                                               /*@0001VLS*/ 01361000
*     ELSE                                                         0555 01362000
*       DO;                                                /*@0001VLS*/ 01363000
         B     @RC00546                                            0555 01364000
@RF00546 DS    0H                                                  0556 01365000
*         MSGADDR = VOLH2;             /* HEADER             @0001VLS*/ 01366000
         MVC   MSGADDR(132),VOLH2                                  0556 01367000
*         CALL PRINTIT;                                    /*@0001VLS*/ 01368000
         BAL   @14,PRINTIT                                         0557 01369000
*         MSGADDR = VOLH3;             /* HEADER             @0001VLS*/ 01370000
         MVC   MSGADDR(132),VOLH3                                  0558 01371000
*         CALL PRINTIT;                                    /*@0001VLS*/ 01372000
         BAL   @14,PRINTIT                                         0559 01373000
*         CALL PRINTIT;                /* BLANK LINE         @0001VLS*/ 01374000
         BAL   @14,PRINTIT                                         0560 01375000
*         MYLINCT = MYLINCT - FIVE;                        /*@0001VLS*/ 01376000
         L     @06,MYLINCT                                         0561 01377000
         SL    @06,@CF00036                                        0561 01378000
         ST    @06,MYLINCT                                         0561 01379000
*         DO CURRPTR = CURRPTR BY ELEVEN WHILE(EOTABLE ^= EOT);    0562 01380000
         B     @DE00562                                            0562 01381000
@DL00562 DS    0H                                                  0563 01382000
*           RECCCHHR = TABCCHHR;          /* RECORD LOCATION @0001VLS*/ 01383000
         L     @06,CURRPTR                                         0563 01384000
         MVC   RECCCHHR(5,R2),TABCCHHR(@06)                        0563 01385000
*           RESPECIFY (R15) RESTRICTED;                    /*@0001VLS*/ 01386000
*           CALL IOHND(READIRCT);                          /*@0001VLS*/ 01387000
         L     @15,ADIOHND(,R2)                                    0565 01388000
         LA    @01,@AL00565                                        0565 01389000
         BALR  @14,@15                                             0565 01390000
*           RETCODE = R15;                                 /*@0001VLS*/ 01391000
         ST    R15,RETCODE                                         0566 01392000
*           RESPECIFY (R15) UNRESTRICTED;                  /*@0001VLS*/ 01393000
*           IF RETCODE = ZERO THEN                                 0568 01394000
         L     @06,RETCODE                                         0568 01395000
         SLR   @03,@03                                             0568 01396000
         CR    @06,@03                                             0568 01397000
         BNE   @RF00568                                            0568 01398000
*             DO;                                          /*@0001VLS*/ 01399000
*               IF MYLINCT <= ZERO THEN       /* LINE WILL NOT FIT   */ 01400000
         C     @03,MYLINCT                                         0570 01401000
         BL    @RF00570                                            0570 01402000
*                 DO;                         /* ON PAGE     @0001VLS*/ 01403000
*                   CALL PAGEJECT;                         /*@0001VLS*/ 01404000
         BAL   @14,PAGEJECT                                        0572 01405000
*                   MSGADDR = VOLHEAD1;                    /*@0001VLS*/ 01406000
         MVI   MSGADDR+104,C' '                                    0573 01407000
         MVC   MSGADDR+105(27),MSGADDR+104                         0573 01408000
         MVC   MSGADDR(104),VOLHEAD1                               0573 01409000
*                   CALL PRINTIT;                          /*@0001VLS*/ 01410000
         BAL   @14,PRINTIT                                         0574 01411000
*                   MSGADDR = VOLH2;                       /*@0001VLS*/ 01412000
         MVC   MSGADDR(132),VOLH2                                  0575 01413000
*                   CALL PRINTIT;                          /*@0001VLS*/ 01414000
         BAL   @14,PRINTIT                                         0576 01415000
*                   MSGADDR = VOLH3;                       /*@0001VLS*/ 01416000
         MVC   MSGADDR(132),VOLH3                                  0577 01417000
*                   CALL PRINTIT;                          /*@0001VLS*/ 01418000
         BAL   @14,PRINTIT                                         0578 01419000
*                   CALL PRINTIT;                          /*@0001VLS*/ 01420000
         BAL   @14,PRINTIT                                         0579 01421000
*                   MYLINCT = MYLINCT - FIVE;              /*@0001VLS*/ 01422000
         L     @06,MYLINCT                                         0580 01423000
         SL    @06,@CF00036                                        0580 01424000
         ST    @06,MYLINCT                                         0580 01425000
*                 END;                                     /*@0001VLS*/ 01426000
*               VVOLUME = VOLID;                           /*@0001VLS*/ 01427000
@RF00570 MVC   VVOLUME(6),VOLID(R7)                                0582 01428000
*               CALL CONVERT(DATE(2:4),TEMPAREA,SIX);      /*@0001VLS*/ 01429000
         MVC   @AL00001+4(8),@AL00583                              0583 01430000
         LA    @06,DATE+1(,R7)                                     0583 01431000
         ST    @06,@AL00001                                        0583 01432000
         LA    @01,@AL00001                                        0583 01433000
         BAL   @14,CONVERT                                         0583 01434000
*               VDAY = TEMPAREA(3:5);                      /*@0001VLS*/ 01435000
         MVC   VDAY(3),TEMPAREA+2                                  0584 01436000
*               VYEAR = TEMPAREA(1:2);                     /*@0001VLS*/ 01437000
         MVC   VYEAR(2),TEMPAREA                                   0585 01438000
*               CALL CONVERT(TIME,TEMPAREA,EIGHT);         /*@0001VLS*/ 01439000
         MVC   @AL00001+4(8),@AL00586                              0586 01440000
         LA    @06,TIME(,R7)                                       0586 01441000
         ST    @06,@AL00001                                        0586 01442000
         LA    @01,@AL00001                                        0586 01443000
         BAL   @14,CONVERT                                         0586 01444000
*               VHH = TEMPAREA(1:2);                       /*@0001VLS*/ 01445000
         MVC   VHH(2),TEMPAREA                                     0587 01446000
*               VMM = TEMPAREA(3:4);                       /*@0001VLS*/ 01447000
         MVC   VMM(2),TEMPAREA+2                                   0588 01448000
*               VSS = TEMPAREA(5:6);                       /*@0001VLS*/ 01449000
         MVC   VSS(2),TEMPAREA+4                                   0589 01450000
*               VPOINT = PERIOD;                           /*@0001VLS*/ 01451000
         MVI   VPOINT,C'.'                                         0590 01452000
*               VTH = TEMPAREA(7:8);                       /*@0001VLS*/ 01453000
         MVC   VTH(2),TEMPAREA+6                                   0591 01454000
*               CALL CONVERT(OCUA2,TEMPAREA,TWO);          /*@0001VLS*/ 01455000
         MVC   @AL00001+4(8),@AL00592                              0592 01456000
         LA    @06,OCUA2(,R7)                                      0592 01457000
         ST    @06,@AL00001                                        0592 01458000
         LA    @01,@AL00001                                        0592 01459000
         BAL   @14,CONVERT                                         0592 01460000
*               VCUA = TEMPAREA(2:4);                      /*@0001VLS*/ 01461000
         MVC   VCUA(3),TEMPAREA+1                                  0593 01462000
*               IF SNSCNT <= 9 | OSER74XX = HEXZEROS THEN          0594 01463000
         CLC   SNSCNT(2,R7),@CH00085                               0594 01464000
         BNH   @RT00594                                            0594 01465000
         CLC   OSER74XX(2,R7),@CB00208                             0594 01466000
         BNE   @RF00594                                            0594 01467000
@RT00594 DS    0H                                                  0595 01468000
*                 DO;                                      /*@0001VLS*/ 01469000
*                   VTUSER = NA;                           /*@0001VLS*/ 01470000
         MVC   VTUSER(5),@CC00483                                  0596 01471000
*                   VMODEL = NA;                           /*@0001VLS*/ 01472000
         MVC   VMODEL(5),@CC00483                                  0597 01473000
*                   VDENS = NA;                            /*@0001VLS*/ 01474000
         MVC   VDENS(5),@CC00483                                   0598 01475000
*                   VHDRSER = NA;                          /*@0001VLS*/ 01476000
         MVC   VHDRSER(5),@CC00483                                 0599 01477000
*                 END;                                     /*@0001VLS*/ 01478000
*               ELSE                                               0601 01479000
*                 DO;                                      /*@0001VLS*/ 01480000
         B     @RC00594                                            0601 01481000
@RF00594 DS    0H                                                  0602 01482000
*                   CALL CONVBIN2(OSER74XX,VTUSER);        /*@0001VLS*/ 01483000
         LA    @06,OSER74XX(,R7)                                   0602 01484000
         ST    @06,@AL00001                                        0602 01485000
         LA    @06,VTUSER                                          0602 01486000
         ST    @06,@AL00001+4                                      0602 01487000
         LA    @01,@AL00001                                        0602 01488000
         BAL   @14,CONVBIN2                                        0602 01489000
*                   IF SENSBIT5(4) = ON THEN                       0603 01490000
         TM    SENSBIT5+3(R7),B'00000100'                          0603 01491000
         BNO   @RF00603                                            0603 01492000
*                     VDENS = BPI1600;                     /*@0001VLS*/ 01493000
         MVI   VDENS+4,C' '                                        0604 01494000
         MVC   VDENS(4),@CC00479                                   0604 01495000
*                   ELSE                                           0605 01496000
*                     IF SENSBIT4(7) = ON THEN                     0605 01497000
         B     @RC00603                                            0605 01498000
@RF00603 TM    SENSBIT4+6(R7),B'00001000'                          0605 01499000
         BNO   @RF00605                                            0605 01500000
*                       VDENS = BPI6250;                   /*@0001VLS*/ 01501000
         MVI   VDENS+4,C' '                                        0606 01502000
         MVC   VDENS(4),@CC00481                                   0606 01503000
*                     ELSE                                         0607 01504000
*                       VDENS = BPI800;                    /*@0001VLS*/ 01505000
         B     @RC00605                                            0607 01506000
@RF00605 MVI   VDENS+4,C' '                                        0607 01507000
         MVC   VDENS(4),@CC00477                                   0607 01508000
*                   I = SENSE(7) & ZEROFOX;                /*@0001VLS*/ 01509000
@RC00605 DS    0H                                                  0608 01510000
@RC00603 LA    @06,15                                              0608 01511000
         SLR   @03,@03                                             0608 01512000
         IC    @03,SENSE+6(,R7)                                    0608 01513000
         NR    @06,@03                                             0608 01514000
         STH   @06,I                                               0608 01515000
*                   VMODEL(3:3) = MODNO(I+1);              /*@0001VLS*/ 01516000
         LA    @03,MODNO(@06)                                      0609 01517000
         MVC   VMODEL+2(1),0(@03)                                  0609 01518000
*                   CALL CONVBIN2(HDRSER,VHDRSER);         /*@0001VLS*/ 01519000
         LA    @06,HDRSER(,R7)                                     0610 01520000
         ST    @06,@AL00001                                        0610 01521000
         LA    @06,VHDRSER                                         0610 01522000
         ST    @06,@AL00001+4                                      0610 01523000
         LA    @01,@AL00001                                        0610 01524000
         BAL   @14,CONVBIN2                                        0610 01525000
*                 END;                                     /*@0001VLS*/ 01526000
*               IF DISMNT = OFF THEN                               0612 01527000
@RC00594 TM    DISMNT(R7),B'00000100'                              0612 01528000
         BNZ   @RF00612                                            0612 01529000
*                 IF SENSBIT3(1) = OFF THEN                        0613 01530000
         TM    SENSBIT3(R7),B'00010000'                            0613 01531000
         BNZ   @RF00613                                            0613 01532000
*                   IF SENSBIT5(2) = ON THEN                       0614 01533000
         TM    SENSBIT5+1(R7),B'00000100'                          0614 01534000
         BNO   @RF00614                                            0614 01535000
*                     VRDWRT = CHARW;            /* PERMANENT WRITE  */ 01536000
         MVI   VRDWRT,C'W'                                         0615 01537000
*                   ELSE                                           0616 01538000
*                     VRDWRT = CHARR;            /* PERMANENT READ   */ 01539000
         B     @RC00614                                            0616 01540000
@RF00614 MVI   VRDWRT,C'R'                                         0616 01541000
*                 ELSE                                             0617 01542000
*                   VRDWRT = CHARE;              /* EQUIPMENT CHECK  */ 01543000
         B     @RC00613                                            0617 01544000
@RF00613 MVI   VRDWRT,C'E'                                         0617 01545000
*               CALL CONVBIN1(PERMRDS,VPRDS);              /*@0001VLS*/ 01546000
@RC00613 DS    0H                                                  0618 01547000
@RF00612 LA    @06,PERMRDS(,R7)                                    0618 01548000
         ST    @06,@AL00001                                        0618 01549000
         LA    @06,VPRDS                                           0618 01550000
         ST    @06,@AL00001+4                                      0618 01551000
         LA    @01,@AL00001                                        0618 01552000
         BAL   @14,CONVBIN1                                        0618 01553000
*               CALL CONVBIN1(PERMRTS,VPRTS);              /*@0001VLS*/ 01554000
         LA    @06,PERMRTS(,R7)                                    0619 01555000
         ST    @06,@AL00001                                        0619 01556000
         LA    @06,VPRTS                                           0619 01557000
         ST    @06,@AL00001+4                                      0619 01558000
         LA    @01,@AL00001                                        0619 01559000
         BAL   @14,CONVBIN1                                        0619 01560000
*               CALL CONVBIN1(READTH,VTRDS);               /*@0001VLS*/ 01561000
         LA    @06,READTH(,R7)                                     0620 01562000
         ST    @06,@AL00001                                        0620 01563000
         LA    @06,VTRDS                                           0620 01564000
         ST    @06,@AL00001+4                                      0620 01565000
         LA    @01,@AL00001                                        0620 01566000
         BAL   @14,CONVBIN1                                        0620 01567000
*               CALL CONVBIN1(RITETH,VTRTS);               /*@0001VLS*/ 01568000
         LA    @06,RITETH(,R7)                                     0621 01569000
         ST    @06,@AL00001                                        0621 01570000
         LA    @06,VTRTS                                           0621 01571000
         ST    @06,@AL00001+4                                      0621 01572000
         LA    @01,@AL00001                                        0621 01573000
         BAL   @14,CONVBIN1                                        0621 01574000
*               CALL CONVBIN2(RECLEAN,VCLEAN);             /*@0001VLS*/ 01575000
         LA    @06,RECLEAN(,R7)                                    0622 01576000
         ST    @06,@AL00001                                        0622 01577000
         LA    @06,VCLEAN                                          0622 01578000
         ST    @06,@AL00001+4                                      0622 01579000
         LA    @01,@AL00001                                        0622 01580000
         BAL   @14,CONVBIN2                                        0622 01581000
*               CALL CONVBIN2(RECERASE,VERASE);            /*@0001VLS*/ 01582000
         LA    @06,RECERASE(,R7)                                   0623 01583000
         ST    @06,@AL00001                                        0623 01584000
         LA    @06,VERASE                                          0623 01585000
         ST    @06,@AL00001+4                                      0623 01586000
         LA    @01,@AL00001                                        0623 01587000
         BAL   @14,CONVBIN2                                        0623 01588000
*               CALL CONVBIN2(RECSIOS,VSIOS);              /*@0001VLS*/ 01589000
         LA    @06,RECSIOS(,R7)                                    0624 01590000
         ST    @06,@AL00001                                        0624 01591000
         LA    @06,VSIOS                                           0624 01592000
         ST    @06,@AL00001+4                                      0624 01593000
         LA    @01,@AL00001                                        0624 01594000
         BAL   @14,CONVBIN2                                        0624 01595000
*               CALL CONVBIN2(BLKLENG,VBLOCK);             /*@0001VLS*/ 01596000
         LA    @06,BLKLENG(,R7)                                    0625 01597000
         ST    @06,@AL00001                                        0625 01598000
         LA    @06,VBLOCK                                          0625 01599000
         ST    @06,@AL00001+4                                      0625 01600000
         LA    @01,@AL00001                                        0625 01601000
         BAL   @14,CONVBIN2                                        0625 01602000
*               VPGMID = JOBID;                            /*@0001VLS*/ 01603000
         MVC   VPGMID(8),JOBID(R7)                                 0626 01604000
*               CALL CONVERT(CPUMOD,VCPUMOD,TWO);          /*@0001VLS*/ 01605000
         MVC   @AL00001+4(8),@AL00627                              0627 01606000
         LA    @06,CPUMOD(,R7)                                     0627 01607000
         ST    @06,@AL00001                                        0627 01608000
         LA    @01,@AL00001                                        0627 01609000
         BAL   @14,CONVERT                                         0627 01610000
*               CALL CONVERT(CPUSER,VCPUSER,THREE);        /*@0001VLS*/ 01611000
         MVC   @AL00001+4(8),@AL00628                              0628 01612000
         LA    @06,CPUSER(,R7)                                     0628 01613000
         ST    @06,@AL00001                                        0628 01614000
         LA    @01,@AL00001                                        0628 01615000
         BAL   @14,CONVERT                                         0628 01616000
*               CALL PRINTIT;                              /*@0001VLS*/ 01617000
         BAL   @14,PRINTIT                                         0629 01618000
*               MYLINCT = MYLINCT - ONE;                   /*@0001VLS*/ 01619000
         L     @06,MYLINCT                                         0630 01620000
         BCTR  @06,0                                               0630 01621000
         ST    @06,MYLINCT                                         0630 01622000
*             END;                                         /*@0001VLS*/ 01623000
*         END;                                             /*@0001VLS*/ 01624000
@RF00568 LA    @06,11                                              0632 01625000
         AL    @06,CURRPTR                                         0632 01626000
         ST    @06,CURRPTR                                         0632 01627000
@DE00562 L     @06,CURRPTR                                         0632 01628000
         CLC   EOTABLE(2,@06),@CB00261                             0632 01629000
         BNE   @DL00562                                            0632 01630000
*       END;                                               /*@0001VLS*/ 01631000
* END;                                                     /*@0001VLS*/ 01632000
@EL00012 DS    0H                                                  0634 01633000
@EF00012 DS    0H                                                  0634 01634000
@ER00012 LM    @14,@12,@SA00012                                    0634 01635000
         BR    @14                                                 0634 01636000
*/********************************************************************/ 01637000
*/* THIS PROCEDURE WILL MAKE ENTRIES INTO THE SORT TABLE.  FOR EACH  */ 01638000
*/* PERM ERROR OR EACH DISMOUNT RECORD WHICH EXCEEDS THRESHOLD, AN   */ 01639000
*/* ENTRY IS MADE.  ALL DISMOUNT RECORDS ARE SUMMED INTO THE @0001VLS*/ 01640000
*/* APPROPRIATE CPU/CONTROL UNIT COUNTERS FOR THE TEMPORARY SUMMARY. */ 01641000
*/********************************************************************/ 01642000
*TABENT: PROC;                                             /*@0001VLS*/ 01643000
TABENT   STM   @14,@12,@SA00013                                    0635 01644000
*  RECCOUNT = RECCOUNT + ONE;                              /*@0001VLS*/ 01645000
         LH    @06,RECCOUNT                                        0636 01646000
         LA    @06,1(,@06)                                         0636 01647000
         STH   @06,RECCOUNT                                        0636 01648000
*  RECCUA = OCUA2;                    /* RECORD CUA FOR SHARE CONVERT*/ 01649000
         MVC   RECCUA(2),OCUA2(R7)                                 0637 01650000
*  RECCPU = CPUSER;                   /* RECORD CPU FOR SHARE CONVERT*/ 01651000
         MVC   RECCPU(3),CPUSER(R7)                                0638 01652000
*  IF SHAREPTR ^= ZERO THEN                                        0639 01653000
         L     @06,SHAREPTR(,R2)                                   0639 01654000
         LTR   @06,@06                                             0639 01655000
         BZ    @RF00639                                            0639 01656000
*    CALL CUASHARE;                   /* PERFORM ANY SHARE CONVERSION*/ 01657000
         BAL   @14,CUASHARE                                        0640 01658000
*  CALL FINDDATE;                     /* SET UP DATE RANGES  @0001VLS*/ 01659000
@RF00639 BAL   @14,FINDDATE                                        0641 01660000
*  IF LOWDATE > DATE(2:4) THEN                                     0642 01661000
         L     @06,DATEPTR                                         0642 01662000
         CLC   LOWDATE(3,@06),DATE+1(R7)                           0642 01663000
         BNH   @RF00642                                            0642 01664000
*    LOWDATE = DATE(2:4);             /* NEW LOW DATE        @0001VLS*/ 01665000
         MVC   LOWDATE(3,@06),DATE+1(R7)                           0643 01666000
*  IF HIDATE < DATE(2:4) THEN                                      0644 01667000
@RF00642 L     @06,DATEPTR                                         0644 01668000
         CLC   HIDATE(3,@06),DATE+1(R7)                            0644 01669000
         BNL   @RF00644                                            0644 01670000
*    HIDATE = DATE(2:4);              /* NEW HIGH DATE       @0001VLS*/ 01671000
         MVC   HIDATE(3,@06),DATE+1(R7)                            0645 01672000
*  IF DISMNT = ON THEN                /* DISMOUNT RECORD     @0001VLS*/ 01673000
@RF00644 TM    DISMNT(R7),B'00000100'                              0646 01674000
         BNO   @RF00646                                            0646 01675000
*    DO;                                                   /*@0001VLS*/ 01676000
*      CALL TEMPTOT;                  /* TOTAL FOR TEMP SUMMARY      */ 01677000
         BAL   @14,TEMPTOT                                         0648 01678000
*      IF RETCODE = ZERO & (READTH >= READS | RITETH >= WRITES) THEN    01679000
         L     @06,RETCODE                                         0649 01680000
         LTR   @06,@06                                             0649 01681000
         BNZ   @RF00649                                            0649 01682000
         CLC   READTH(1,R7),READS                                  0649 01683000
         BNL   @RT00649                                            0649 01684000
         CLC   RITETH(1,R7),WRITES                                 0649 01685000
         BL    @RF00649                                            0649 01686000
@RT00649 DS    0H                                                  0650 01687000
*        DO EXCTHRES(1) = EXCTHRES(1) + ONE;               /*@0001VLS*/ 01688000
         LA    @06,1                                               0650 01689000
         AL    @06,EXCTHRES                                        0650 01690000
         ST    @06,EXCTHRES                                        0650 01691000
*          CALL SAVEREC(ONE);         /* ENTER INTO TABLE AS TYPE 1  */ 01692000
         LA    @01,@AL00651                                        0651 01693000
         BAL   @14,SAVEREC                                         0651 01694000
*        END;                                              /*@0001VLS*/ 01695000
*    END;                                                  /*@0001VLS*/ 01696000
*  ELSE                                                            0654 01697000
*    IF (CSW34XX & UNITCK) = UNITCK THEN                           0654 01698000
         B     @RC00646                                            0654 01699000
@RF00646 MVC   @TS00001(1),CSW34XX(R7)                             0654 01700000
         NI    @TS00001,X'02'                                      0654 01701000
         CLI   @TS00001,X'02'                                      0654 01702000
         BNE   @RF00654                                            0654 01703000
*      DO EXCTHRES(2) = EXCTHRES(2) + ONE;                 /*@0001VLS*/ 01704000
         LA    @06,1                                               0655 01705000
         AL    @06,EXCTHRES+4                                      0655 01706000
         ST    @06,EXCTHRES+4                                      0655 01707000
*        CALL SAVEREC(TWO);           /* ENTER INTO TABLE AS TYPE 2  */ 01708000
         LA    @01,@AL00656                                        0656 01709000
         BAL   @14,SAVEREC                                         0656 01710000
*      END;                                                /*@0001VLS*/ 01711000
*END;                                                      /*@0001VLS*/ 01712000
@EL00013 DS    0H                                                  0658 01713000
@EF00013 DS    0H                                                  0658 01714000
@ER00013 LM    @14,@12,@SA00013                                    0658 01715000
         BR    @14                                                 0658 01716000
*/********************************************************************/ 01717000
*/* A RECORD IS SAVED IN THE SORT TABLE.  IF THE RECORD WAS INPUT    */ 01718000
*/* FROM HISTORY TAPE, THEN IT IS SAVED ON DIRECTWK.  THE TYPE IS    */ 01719000
*/* ENTERED FROM THE PARAMETER PASSED.                       @0001VLS*/ 01720000
*/*      TYPE 1 = DISMOUNT RECORD                            @0001VLS*/ 01721000
*/*      TYPE 2 = PERM ERROR                                 @0001VLS*/ 01722000
*/*      TYPE 3 = POINTER TO TEMP SUMMARY TABLE              @0001VLS*/ 01723000
*/********************************************************************/ 01724000
*SAVEREC: PROC(TYPEENT);                                   /*@0001VLS*/ 01725000
SAVEREC  STM   @14,@12,@SA00014                                    0659 01726000
         MVC   @PC00014(4),0(@01)                                  0659 01727000
*   DCL TYPEENT FIXED(31);                                 /*@0001VLS*/ 01728000
*   IF PHIST = ON THEN                 /* HISTORY INPUT      @0001VLS*/ 01729000
         TM    PHIST(R2),B'00100000'                               0661 01730000
         BNO   @RF00661                                            0661 01731000
*     DO;                                                  /*@0001VLS*/ 01732000
*       RESPECIFY (R15) RESTRICTED;                        /*@0001VLS*/ 01733000
*       CALL IOHND(RITESCRT);                              /*@0001VLS*/ 01734000
         L     @15,ADIOHND(,R2)                                    0664 01735000
         LA    @01,@AL00664                                        0664 01736000
         BALR  @14,@15                                             0664 01737000
*       RETCODE = R15;                                     /*@0001VLS*/ 01738000
         ST    R15,RETCODE                                         0665 01739000
*       RESPECIFY (R15) UNRESTRICTED;                      /*@0001VLS*/ 01740000
*     END;                                                 /*@0001VLS*/ 01741000
*   IF RETCODE = ZERO THEN                                         0668 01742000
@RF00661 L     @06,RETCODE                                         0668 01743000
         LTR   @06,@06                                             0668 01744000
         BNZ   @RF00668                                            0668 01745000
*     DO;                                                  /*@0001VLS*/ 01746000
*       CONTRCUA = RECCUA;             /* STORE CUA          @0001VLS*/ 01747000
         L     @06,CURRPTR                                         0670 01748000
         MVC   CONTRCUA(2,@06),RECCUA                              0670 01749000
*       CONTRCUA(2) = CONTRCUA(2) & FOXZERO;   /* CONTROL UNIT ENTRY */ 01750000
         NI    CONTRCUA+1(@06),X'F0'                               0671 01751000
*       CPU = RECCPU;                  /* STORE CPU          @0001VLS*/ 01752000
         MVC   CPU(3,@06),RECCPU                                   0672 01753000
*       TABCCHHR = RECCCHHR;           /* AUX STORAGE ADDRESS        */ 01754000
         MVC   TABCCHHR(5,@06),RECCCHHR(R2)                        0673 01755000
*       TYPE = TYPEENT;                /* TYPE OF ENTRY      @0001VLS*/ 01756000
         L     @03,@PC00014                                        0674 01757000
         L     @03,TYPEENT(,@03)                                   0674 01758000
         STC   @03,TYPE(,@06)                                      0674 01759000
*       NUMENT = NUMENT + ONE;                             /*@0001VLS*/ 01760000
         LA    @03,1                                               0675 01761000
         AL    @03,NUMENT                                          0675 01762000
         ST    @03,NUMENT                                          0675 01763000
*       CURRPTR = CURRPTR - ELEVEN;    /* POINT TO NEXT ENTRY        */ 01764000
         SL    @06,@CF00034                                        0676 01765000
         ST    @06,CURRPTR                                         0676 01766000
*     END;                                                 /*@0001VLS*/ 01767000
* END;                                                     /*@0001VLS*/ 01768000
@EL00014 DS    0H                                                  0678 01769000
@EF00014 DS    0H                                                  0678 01770000
@ER00014 LM    @14,@12,@SA00014                                    0678 01771000
         BR    @14                                                 0678 01772000
*/********************************************************************/ 01773000
*/* TOTAL THE DISMOUNT DATA INTO THE APPROPRIATE CPU/CONTROL UNIT    */ 01774000
*/* COUNTERS.  IF NONE EXIST, A NEW SET IS CREATED, AN ENTRY MADE IN */ 01775000
*/* THE SORT TABLE, AND THE ADDRESS OF THE COUNTERS STORED THERE.    */ 01776000
*/********************************************************************/ 01777000
*TEMPTOT: PROC;                                            /*@0001VLS*/ 01778000
TEMPTOT  STM   @14,@12,@SA00015                                    0679 01779000
*CUAINDEX = RECCUA & ZZZF;             /* UNITS ADDRESS      @0001VLS*/ 01780000
         LA    @06,15                                              0680 01781000
         SLR   @03,@03                                             0680 01782000
         ICM   @03,3,RECCUA                                        0680 01783000
         NR    @06,@03                                             0680 01784000
         ST    @06,CUAINDEX                                        0680 01785000
*CUAINDEX = CUAINDEX + ONE;                                /*@0001VLS*/ 01786000
         AL    @06,@CF00055                                        0681 01787000
         ST    @06,CUAINDEX                                        0681 01788000
*CALL FINDTOTS;                           /* FIND COUNTER AREA       */ 01789000
         BAL   @14,FINDTOTS                                        0682 01790000
*IF RETCODE = ZERO THEN                                            0683 01791000
         L     @06,RETCODE                                         0683 01792000
         LTR   @06,@06                                             0683 01793000
         BNZ   @RF00683                                            0683 01794000
*  DO;                                                     /*@0001VLS*/ 01795000
*    IF DATE(2:4) > TDATE(CUAINDEX) THEN                           0685 01796000
         L     @06,SUMPTR                                          0685 01797000
         L     @03,CUAINDEX                                        0685 01798000
         MH    @03,@CH01401                                        0685 01799000
         ST    @03,@TF00001                                        0685 01800000
         ALR   @03,@06                                             0685 01801000
         CLC   DATE+1(3,R7),TDATE-48(@03)                          0685 01802000
         BNH   @RF00685                                            0685 01803000
*      TDATE(CUAINDEX) = DATE(2:4);       /* HIGHER TO DATE  @0001VLS*/ 01804000
         AL    @06,@TF00001                                        0686 01805000
         MVC   TDATE-48(3,@06),DATE+1(R7)                          0686 01806000
*    IF DATE(2:4) < FDATE(CUAINDEX) THEN                           0687 01807000
@RF00685 L     @06,SUMPTR                                          0687 01808000
         L     @03,CUAINDEX                                        0687 01809000
         MH    @03,@CH01401                                        0687 01810000
         ST    @03,@TF00001                                        0687 01811000
         ALR   @03,@06                                             0687 01812000
         CLC   DATE+1(3,R7),FDATE-48(@03)                          0687 01813000
         BNL   @RF00687                                            0687 01814000
*      FDATE(CUAINDEX) = DATE(2:4);       /* LOWER FROM DATE @0001VLS*/ 01815000
         AL    @06,@TF00001                                        0688 01816000
         MVC   FDATE-48(3,@06),DATE+1(R7)                          0688 01817000
*    READER(CUAINDEX) = READER(CUAINDEX) + READTH;  /* # TEMP READS  */ 01818000
@RF00687 L     @06,SUMPTR                                          0689 01819000
         L     @03,CUAINDEX                                        0689 01820000
         MH    @03,@CH01401                                        0689 01821000
         SLR   @15,@15                                             0689 01822000
         IC    @15,READTH(,R7)                                     0689 01823000
         LA    @14,0(@03,@06)                                      0689 01824000
         AL    @14,@CF01418                                        0689 01825000
         AL    @15,READER-20(,@14)                                 0689 01826000
         LA    @14,0(@03,@06)                                      0689 01827000
         AL    @14,@CF01418                                        0689 01828000
         ST    @15,READER-20(,@14)                                 0689 01829000
*    WRITER(CUAINDEX) = WRITER(CUAINDEX) + RITETH;  /* # TEMP WRITES */ 01830000
         SLR   @15,@15                                             0690 01831000
         IC    @15,RITETH(,R7)                                     0690 01832000
         LA    @14,0(@03,@06)                                      0690 01833000
         AL    @14,@CF01419                                        0690 01834000
         AL    @15,WRITER-28(,@14)                                 0690 01835000
         LA    @14,0(@03,@06)                                      0690 01836000
         AL    @14,@CF01419                                        0690 01837000
         ST    @15,WRITER-28(,@14)                                 0690 01838000
*    SIOS(CUAINDEX) = SIOS(CUAINDEX) + RECSIOS;     /* # SIOS        */ 01839000
         SLR   @15,@15                                             0691 01840000
         ICM   @15,3,RECSIOS(R7)                                   0691 01841000
         LA    @14,0(@03,@06)                                      0691 01842000
         AL    @14,@CF01417                                        0691 01843000
         AL    @15,SIOS-16(,@14)                                   0691 01844000
         LA    @14,0(@03,@06)                                      0691 01845000
         AL    @14,@CF01417                                        0691 01846000
         ST    @15,SIOS-16(,@14)                                   0691 01847000
*    CLEANER(CUAINDEX) = CLEANER(CUAINDEX) + RECLEAN; /* # CLEANER   */ 01848000
         SLR   @15,@15                                             0692 01849000
         ICM   @15,3,RECLEAN(R7)                                   0692 01850000
         LA    @14,0(@03,@06)                                      0692 01851000
         AL    @14,@CF01421                                        0692 01852000
         AL    @15,CLEANER-24(,@14)                                0692 01853000
         LA    @14,0(@03,@06)                                      0692 01854000
         AL    @14,@CF01421                                        0692 01855000
         ST    @15,CLEANER-24(,@14)                                0692 01856000
*    ERASE(CUAINDEX) = ERASE(CUAINDEX) + RECERASE;  /* # ERASE GAPS  */ 01857000
         SLR   @15,@15                                             0693 01858000
         ICM   @15,3,RECERASE(R7)                                  0693 01859000
         LA    @14,0(@03,@06)                                      0693 01860000
         AL    @14,@CF01422                                        0693 01861000
         AL    @15,ERASE-32(,@14)                                  0693 01862000
         LA    @14,0(@03,@06)                                      0693 01863000
         AL    @14,@CF01422                                        0693 01864000
         ST    @15,ERASE-32(,@14)                                  0693 01865000
*    IF DISMNT = ON & EOD = OFF THEN                               0694 01866000
         TM    DISMNT(R7),B'00000100'                              0694 01867000
         BNO   @RF00694                                            0694 01868000
         TM    EOD(R7),B'10000000'                                 0694 01869000
         BNZ   @RF00694                                            0694 01870000
*      MOUNTS(CUAINDEX) = MOUNTS(CUAINDEX) + ONE;   /* ADD 1 TO MOUNT*/ 01871000
         LA    @15,1                                               0695 01872000
         LA    @14,0(@03,@06)                                      0695 01873000
         AL    @14,@CF01420                                        0695 01874000
         AL    @15,MOUNTS-36(,@14)                                 0695 01875000
         AL    @06,@CF01420                                        0695 01876000
         ST    @15,MOUNTS-36(@03,@06)                              0695 01877000
*    VRC(CUAINDEX) = VRC(CUAINDEX) + RECVRC;               /*@0001VLS*/ 01878000
@RF00694 L     @06,SUMPTR                                          0696 01879000
         L     @03,CUAINDEX                                        0696 01880000
         MH    @03,@CH01401                                        0696 01881000
         SLR   @15,@15                                             0696 01882000
         IC    @15,RECVRC(,R7)                                     0696 01883000
         LA    @14,0(@03,@06)                                      0696 01884000
         AL    @14,@CF01423                                        0696 01885000
         AH    @15,VRC-40(,@14)                                    0696 01886000
         LA    @14,0(@03,@06)                                      0696 01887000
         AL    @14,@CF01423                                        0696 01888000
         STH   @15,VRC-40(,@14)                                    0696 01889000
*    I = RECSTRD & ZEROFOX;                                /*@0001VLS*/ 01890000
         LA    @15,15                                              0697 01891000
         SLR   @14,@14                                             0697 01892000
         IC    @14,RECSTRD(,R7)                                    0697 01893000
         NR    @14,@15                                             0697 01894000
         STH   @14,I                                               0697 01895000
*    STRDCHK(CUAINDEX) = STRDCHK(CUAINDEX) + I;            /*@0001VLS*/ 01896000
         LA    @01,0(@03,@06)                                      0698 01897000
         AL    @01,@CF01424                                        0698 01898000
         AH    @14,STRDCHK-42(,@01)                                0698 01899000
         LA    @01,0(@03,@06)                                      0698 01900000
         AL    @01,@CF01424                                        0698 01901000
         STH   @14,STRDCHK-42(,@01)                                0698 01902000
*    I = RECPART;                                          /*@0001VLS*/ 01903000
         SLR   @14,@14                                             0699 01904000
         IC    @14,RECPART(,R7)                                    0699 01905000
         STH   @14,I                                               0699 01906000
*    SRL(I,FOUR);                                          /*@0001VLS*/ 01907000
         SRL   @14,4                                               0700 01908000
         STH   @14,I                                               0700 01909000
*    PARTRECK(CUAINDEX) = PARTRECK(CUAINDEX) + I;          /*@0001VLS*/ 01910000
         LA    @01,0(@03,@06)                                      0701 01911000
         AL    @01,@CF01425                                        0701 01912000
         LH    @14,PARTRECK-44(,@01)                               0701 01913000
         AH    @14,I                                               0701 01914000
         LA    @01,0(@03,@06)                                      0701 01915000
         AL    @01,@CF01425                                        0701 01916000
         STH   @14,PARTRECK-44(,@01)                               0701 01917000
*    I = RECOVER;                                          /*@0001VLS*/ 01918000
         SLR   @14,@14                                             0702 01919000
         IC    @14,RECOVER(,R7)                                    0702 01920000
         STH   @14,I                                               0702 01921000
*    SRL(I,FOUR);                                          /*@0001VLS*/ 01922000
         SRL   @14,4                                               0703 01923000
         STH   @14,I                                               0703 01924000
*    OVERRUNS(CUAINDEX) = OVERRUNS(CUAINDEX) + I;          /*@0001VLS*/ 01925000
         LA    @01,0(@03,@06)                                      0704 01926000
         BCTR  @01,0                                               0704 01927000
         BCTR  @01,0                                               0704 01928000
         LH    @14,OVERRUNS-46(,@01)                               0704 01929000
         AH    @14,I                                               0704 01930000
         LA    @01,0(@03,@06)                                      0704 01931000
         BCTR  @01,0                                               0704 01932000
         BCTR  @01,0                                               0704 01933000
         STH   @14,OVERRUNS-46(,@01)                               0704 01934000
*    I = RECVEL & ZEROFOX;                                 /*@0001VLS*/ 01935000
         SLR   @14,@14                                             0705 01936000
         IC    @14,RECVEL(,R7)                                     0705 01937000
         NR    @15,@14                                             0705 01938000
         STH   @15,I                                               0705 01939000
*    VELCHGS(CUAINDEX) = VELCHGS(CUAINDEX) + I;            /*@0001VLS*/ 01940000
         AH    @15,VELCHGS-48(@03,@06)                             0706 01941000
         STH   @15,VELCHGS-48(@03,@06)                             0706 01942000
*    I = RECIBG;                                           /*@0001VLS*/ 01943000
         SLR   @15,@15                                             0707 01944000
         IC    @15,RECIBG(,R7)                                     0707 01945000
         STH   @15,I                                               0707 01946000
*    SRL(I,FOUR);                                          /*@0001VLS*/ 01947000
         SRL   @15,4                                               0708 01948000
         STH   @15,I                                               0708 01949000
*    IBG(CUAINDEX) = IBG(CUAINDEX) + I;                    /*@0001VLS*/ 01950000
         LH    @15,IBG-48(@03,@06)                                 0709 01951000
         AH    @15,I                                               0709 01952000
         STH   @15,IBG-48(@03,@06)                                 0709 01953000
*  END;                                                    /*@0001VLS*/ 01954000
*END;                                                      /*@0001VLS*/ 01955000
@EL00015 DS    0H                                                  0711 01956000
@EF00015 DS    0H                                                  0711 01957000
@ER00015 LM    @14,@12,@SA00015                                    0711 01958000
         BR    @14                                                 0711 01959000
*/********************************************************************/ 01960000
*/* OUTPUT THE CUA STATISTICS PORTION OF THE REPORT.         @0001VLS*/ 01961000
*/********************************************************************/ 01962000
*PRINTCUA: PROC;                                           /*@0001VLS*/ 01963000
PRINTCUA STM   @14,@12,@SA00016                                    0712 01964000
* OLDCPUCU = SORTCPUC;                /* INITIALIZE SORT BREAK       */ 01965000
         L     @06,CURRPTR                                         0713 01966000
         MVC   OLDCPUCU(5),SORTCPUC(@06)                           0713 01967000
* DO CURRPTR = CURRPTR BY ELEVEN WHILE (EOTABLE ^= EOT);   /*@0001VLS*/ 01968000
         B     @DE00714                                            0714 01969000
@DL00714 DS    0H                                                  0715 01970000
*   IF OLDCPUCU ^= SORTCPUC THEN                                   0715 01971000
         L     @06,CURRPTR                                         0715 01972000
         CLC   OLDCPUCU(5),SORTCPUC(@06)                           0715 01973000
         BE    @RF00715                                            0715 01974000
*     CALL OUTTYPES;                  /* SORT BREAK.         @0001VLS*/ 01975000
         BAL   @14,OUTTYPES                                        0716 01976000
*   IF TYPE = THREE THEN                                           0717 01977000
@RF00715 L     @06,CURRPTR                                         0717 01978000
         CLI   TYPE(@06),3                                         0717 01979000
         BNE   @RF00717                                            0717 01980000
*     CALL TEMPSUM;                   /* OUTPUT THE SUMMARY SECTION  */ 01981000
         BAL   @14,TEMPSUM                                         0718 01982000
*   ELSE                                                           0719 01983000
*     DO;                                                  /*@0001VLS*/ 01984000
         B     @RC00717                                            0719 01985000
@RF00717 DS    0H                                                  0720 01986000
*       RECCCHHR = TABCCHHR;          /* SET LOCATION OF RECORD      */ 01987000
         L     @06,CURRPTR                                         0720 01988000
         MVC   RECCCHHR(5,R2),TABCCHHR(@06)                        0720 01989000
*       RESPECIFY (R15) RESTRICTED;                        /*@0001VLS*/ 01990000
*       CALL IOHND(READIRCT);         /* GET A RECORD        @0001VLS*/ 01991000
         L     @15,ADIOHND(,R2)                                    0722 01992000
         LA    @01,@AL00722                                        0722 01993000
         BALR  @14,@15                                             0722 01994000
*       RETCODE = R15;                /* RETURN CODE         @0001VLS*/ 01995000
         ST    R15,RETCODE                                         0723 01996000
*       RESPECIFY (R15) UNRESTRICTED;                      /*@0001VLS*/ 01997000
*       IF RETCODE = ZERO THEN                                     0725 01998000
         L     @06,RETCODE                                         0725 01999000
         LTR   @06,@06                                             0725 02000000
         BNZ   @RF00725                                            0725 02001000
*         DO;                                              /*@0001VLS*/ 02002000
*           IF TYPE = ONE THEN                                     0727 02003000
         L     @06,CURRPTR                                         0727 02004000
         CLI   TYPE(@06),1                                         0727 02005000
         BNE   @RF00727                                            0727 02006000
*             CALL CUASTATS;          /* RECORD EXCEEDS THRESHOLD    */ 02007000
         BAL   @14,CUASTATS                                        0728 02008000
*           ELSE                                                   0729 02009000
*             CALL CUAPERMS;          /* RECORD IS PERM ERROR        */ 02010000
         B     @RC00727                                            0729 02011000
@RF00727 BAL   @14,CUAPERMS                                        0729 02012000
*           CONTRVOL= VOLID;          /* INSERT THE VOLID FOR PASS 2 */ 02013000
@RC00727 L     @06,CURRPTR                                         0730 02014000
         MVC   CONTRVOL(6,@06),VOLID(R7)                           0730 02015000
*         END;                                             /*@0001VLS*/ 02016000
*       ELSE                                                       0732 02017000
*         CONTRVOL = CONTRVOL && CONTRVOL;  /* ERROR - DO NOTHING    */ 02018000
         B     @RC00725                                            0732 02019000
@RF00725 L     @06,CURRPTR                                         0732 02020000
         XC    CONTRVOL(6,@06),CONTRVOL(@06)                       0732 02021000
*     END;                                                 /*@0001VLS*/ 02022000
@RC00725 DS    0H                                                  0734 02023000
*  END;                                                    /*@0001VLS*/ 02024000
@RC00717 LA    @06,11                                              0734 02025000
         AL    @06,CURRPTR                                         0734 02026000
         ST    @06,CURRPTR                                         0734 02027000
@DE00714 L     @06,CURRPTR                                         0734 02028000
         CLC   EOTABLE(2,@06),@CB00261                             0734 02029000
         BNE   @DL00714                                            0734 02030000
*  CALL OUTTYPES;                                          /*@0001VLS*/ 02031000
         BAL   @14,OUTTYPES                                        0735 02032000
*END;                                                      /*@0001VLS*/ 02033000
@EL00016 DS    0H                                                  0736 02034000
@EF00016 DS    0H                                                  0736 02035000
@ER00016 LM    @14,@12,@SA00016                                    0736 02036000
         BR    @14                                                 0736 02037000
*/********************************************************************/ 02038000
*/* OUTPUT THE ERROR CODES FOR PERMANENT ERRORS.             @0001VLS*/ 02039000
*/********************************************************************/ 02040000
*OUTCODES: PROC;                                           /*@0001VLS*/ 02041000
OUTCODES STM   @14,@12,@SA00017                                    0737 02042000
* OUTCODE(1) = ERRTABLE(1);                                /*@0001VLS*/ 02043000
         MVC   OUTCODE(34),ERRTABLE                                0738 02044000
* OUTCODE(2) = ERRTABLE(2);                                /*@0001VLS*/ 02045000
         MVC   OUTCODE+40(34),ERRTABLE+34                          0739 02046000
* OUTCODE(3) = ERRTABLE(3);                                /*@0001VLS*/ 02047000
         MVC   OUTCODE+80(34),ERRTABLE+68                          0740 02048000
* CALL PRINTIT;                                            /*@0001VLS*/ 02049000
         BAL   @14,PRINTIT                                         0741 02050000
* OUTCODE(1) = ERRTABLE(4);                                /*@0001VLS*/ 02051000
         MVC   OUTCODE(34),ERRTABLE+102                            0742 02052000
* OUTCODE(2) = ERRTABLE(5);                                /*@0001VLS*/ 02053000
         MVC   OUTCODE+40(34),ERRTABLE+136                         0743 02054000
* OUTCODE(3) = ERRTABLE(6);                                /*@0001VLS*/ 02055000
         MVC   OUTCODE+80(34),ERRTABLE+170                         0744 02056000
* CALL PRINTIT;                                            /*@0001VLS*/ 02057000
         BAL   @14,PRINTIT                                         0745 02058000
* OUTCODE(1) = ERRTABLE(7);                                /*@0001VLS*/ 02059000
         MVC   OUTCODE(34),ERRTABLE+204                            0746 02060000
* OUTCODE(2) = ERRTABLE(8);                                /*@0001VLS*/ 02061000
         MVC   OUTCODE+40(34),ERRTABLE+238                         0747 02062000
* OUTCODE(3) = ERRTABLE(9);                                /*@0001VLS*/ 02063000
         MVC   OUTCODE+80(34),ERRTABLE+272                         0748 02064000
* CALL PRINTIT;                                            /*@0001VLS*/ 02065000
         BAL   @14,PRINTIT                                         0749 02066000
* OUTCODE(1) = ERRTABLE(10);                               /*@0001VLS*/ 02067000
         MVC   OUTCODE(34),ERRTABLE+306                            0750 02068000
* OUTCODE(2) = ERRTABLE(11);                               /*@0001VLS*/ 02069000
         MVC   OUTCODE+40(34),ERRTABLE+340                         0751 02070000
* CALL PRINTIT;                                            /*@0001VLS*/ 02071000
         BAL   @14,PRINTIT                                         0752 02072000
* MYLINCT = MYLINCT - FOUR;                                /*@0001VLS*/ 02073000
         L     @06,MYLINCT                                         0753 02074000
         SL    @06,@CF00064                                        0753 02075000
         ST    @06,MYLINCT                                         0753 02076000
*END;                                                      /*@0001VLS*/ 02077000
@EL00017 DS    0H                                                  0754 02078000
@EF00017 DS    0H                                                  0754 02079000
@ER00017 LM    @14,@12,@SA00017                                    0754 02080000
         BR    @14                                                 0754 02081000
*/********************************************************************/ 02082000
*/* A SEARCH IS MADE FOR THE APPROPRIATE SET OF CPU/CONTROL UNIT CTRS*/ 02083000
*/********************************************************************/ 02084000
*FINDTOTS: PROC;                                           /*@0001VLS*/ 02085000
FINDTOTS STM   @14,@12,@SA00018                                    0755 02086000
* FOUND = OFF;                        /* INIT SEARCH VARIABLE        */ 02087000
         NI    FOUND,B'11011111'                                   0756 02088000
* SUMPTR = TOTALPTR;                                       /*@0001VLS*/ 02089000
         L     @06,TOTALPTR                                        0757 02090000
         ST    @06,SUMPTR                                          0757 02091000
* DO WHILE (SUMPTR ^= ZERO & FOUND = OFF);                 /*@0001VLS*/ 02092000
         B     @DE00758                                            0758 02093000
@DL00758 DS    0H                                                  0759 02094000
*   IF CHAIN = CPUCUX THEN                                         0759 02095000
         L     @06,SUMPTR                                          0759 02096000
         CLC   CHAIN(5),CPUCUX(@06)                                0759 02097000
         BNE   @RF00759                                            0759 02098000
*     FOUND = ON;                                          /*@0001VLS*/ 02099000
         OI    FOUND,B'00100000'                                   0760 02100000
*   ELSE                                                           0761 02101000
*     DO;                                                  /*@0001VLS*/ 02102000
         B     @RC00759                                            0761 02103000
@RF00759 DS    0H                                                  0762 02104000
*       Z = SUMPTR;                   /* SAVE THE POINTER TO LAST ONE*/ 02105000
         L     @06,SUMPTR                                          0762 02106000
         ST    @06,Z                                               0762 02107000
*       SUMPTR = NEXTCPU;             /* NEXT ONE            @0001VLS*/ 02108000
         L     @06,NEXTCPU(,@06)                                   0763 02109000
         ST    @06,SUMPTR                                          0763 02110000
*     END;                                                 /*@0001VLS*/ 02111000
* END;                                                     /*@0001VLS*/ 02112000
@RC00759 DS    0H                                                  0765 02113000
@DE00758 L     @06,SUMPTR                                          0765 02114000
         LTR   @06,@06                                             0765 02115000
         BZ    @DC00758                                            0765 02116000
         TM    FOUND,B'00100000'                                   0765 02117000
         BZ    @DL00758                                            0765 02118000
@DC00758 DS    0H                                                  0766 02119000
* IF SUMPTR = ZERO THEN               /* MUST CREATE A NEW AREA      */ 02120000
         L     @06,SUMPTR                                          0766 02121000
         LTR   @06,@06                                             0766 02122000
         BNZ   @RF00766                                            0766 02123000
*  DO;                                                     /*@0001VLS*/ 02124000
*    RESPECIFY (R0,R15) RESTRICTED;                        /*@0001VLS*/ 02125000
*    R0 = LENGTH(SUMAREA);            /* SIZE OF NEW AREA    @0001VLS*/ 02126000
         LA    R0,784                                              0769 02127000
*    GEN(GETMAIN EC,LV=(0),A=SUMPTR);                      /*@0001VLS*/ 02128000
         GETMAIN EC,LV=(0),A=SUMPTR                                     02129000
*    RETCODE = R15;                                        /*@0001VLS*/ 02130000
         ST    R15,RETCODE                                         0771 02131000
*    RESPECIFY (R0,R15) UNRESTRICTED;                      /*@0001VLS*/ 02132000
*    IF RETCODE = ZERO THEN                                        0773 02133000
         L     @06,RETCODE                                         0773 02134000
         LTR   @06,@06                                             0773 02135000
         BNZ   @RF00773                                            0773 02136000
*      DO;                                                 /*@0001VLS*/ 02137000
*        DO I = ONE TO 16;                                 /*@0001VLS*/ 02138000
         LA    @06,1                                               0775 02139000
         STH   @06,I                                               0775 02140000
@DL00775 DS    0H                                                  0776 02141000
*          SUMTEMP(I) = SUMTEMP(I) && SUMTEMP(I);   /* CLEAR AREA    */ 02142000
         L     @03,SUMPTR                                          0776 02143000
         LR    @15,@06                                             0776 02144000
         MH    @15,@CH01401                                        0776 02145000
         ST    @15,@TF00001                                        0776 02146000
         ALR   @15,@03                                             0776 02147000
         AL    @15,@CF01417                                        0776 02148000
         XC    SUMTEMP-16(42,@15),SUMTEMP-16(@15)                  0776 02149000
*          FDATE(I,1:2) = EOT;                             /*@0001VLS*/ 02150000
         AL    @03,@TF00001                                        0777 02151000
         MVC   FDATE-48(2,@03),@CB00261                            0777 02152000
*        END;                                              /*@0001VLS*/ 02153000
         AL    @06,@CF00055                                        0778 02154000
         STH   @06,I                                               0778 02155000
         C     @06,@CF00088                                        0778 02156000
         BNH   @DL00775                                            0778 02157000
*        IF TOTALPTR = ZERO THEN                                   0779 02158000
         L     @06,TOTALPTR                                        0779 02159000
         LTR   @06,@06                                             0779 02160000
         BNZ   @RF00779                                            0779 02161000
*          TOTALPTR = SUMPTR;                              /*@0001VLS*/ 02162000
         L     @06,SUMPTR                                          0780 02163000
         ST    @06,TOTALPTR                                        0780 02164000
*        ELSE                                                      0781 02165000
*          Z -> NEXTCPU = SUMPTR;                          /*@0001VLS*/ 02166000
         B     @RC00779                                            0781 02167000
@RF00779 L     @06,SUMPTR                                          0781 02168000
         L     @03,Z                                               0781 02169000
         ST    @06,NEXTCPU(,@03)                                   0781 02170000
*        NEXTCPU = ZERO;                /* NOTHING IN CHAIN  @0001VLS*/ 02171000
@RC00779 L     @06,SUMPTR                                          0782 02172000
         SLR   @03,@03                                             0782 02173000
         ST    @03,NEXTCPU(,@06)                                   0782 02174000
*        CPUCUX = CHAIN;                /* CPU SERIAL/MODEL CUA      */ 02175000
         MVC   CPUCUX(5,@06),CHAIN                                 0783 02176000
*        CONTRCUA = CUX;                /* SORT TABLE ENTRY  @0001VLS*/ 02177000
         L     @03,CURRPTR                                         0784 02178000
         MVC   CONTRCUA(2,@03),CUX(@06)                            0784 02179000
*        CPU = RECCPU;                  /* SORT TABLE CPU ENTRY      */ 02180000
         MVC   CPU(3,@03),RECCPU                                   0785 02181000
*        TABCCHHR = SUMPTRC;            /* LOCATION OF SUMMARY AREA  */ 02182000
         MVI   TABCCHHR+4(@03),C' '                                0786 02183000
         MVC   TABCCHHR(4,@03),SUMPTRC                             0786 02184000
*        TYPE = THREE;                                     /*@0001VLS*/ 02185000
         MVI   TYPE(@03),X'03'                                     0787 02186000
*        NUMENT = NUMENT + ONE;                            /*@0001VLS*/ 02187000
         LA    @15,1                                               0788 02188000
         AL    @15,NUMENT                                          0788 02189000
         ST    @15,NUMENT                                          0788 02190000
*        CURRPTR = CURRPTR - ELEVEN;    /* DECREMENT TO NEXT ENTRY   */ 02191000
         SL    @03,@CF00034                                        0789 02192000
         ST    @03,CURRPTR                                         0789 02193000
*        FDATE(CUAINDEX) = DATE(2:4);   /* FROM DATE         @0001VLS*/ 02194000
         L     @03,CUAINDEX                                        0790 02195000
         MH    @03,@CH01401                                        0790 02196000
         ST    @03,@TF00001                                        0790 02197000
         ALR   @03,@06                                             0790 02198000
         MVC   FDATE-48(3,@03),DATE+1(R7)                          0790 02199000
*        TDATE(CUAINDEX) = DATE(2:4);   /* TO DATE           @0001VLS*/ 02200000
         AL    @06,@TF00001                                        0791 02201000
         MVC   TDATE-48(3,@06),DATE+1(R7)                          0791 02202000
*      END;                                                /*@0001VLS*/ 02203000
*    ELSE                                                          0793 02204000
*      DO;                                                 /*@0001VLS*/ 02205000
         B     @RC00773                                            0793 02206000
@RF00773 DS    0H                                                  0794 02207000
*        CALL IFCMSG(53,ADDR(MSGADDR));                    /*@0001VLS*/ 02208000
         LA    @06,MSGADDR                                         0794 02209000
         ST    @06,@AFTEMPS                                        0794 02210000
         L     @15,ADIFCMSG(,R2)                                   0794 02211000
         LA    @01,@AL00794                                        0794 02212000
         BALR  @14,@15                                             0794 02213000
*        CALL PRINTIT;                                     /*@0001VLS*/ 02214000
         BAL   @14,PRINTIT                                         0795 02215000
*      END;                                                /*@0001VLS*/ 02216000
*  END;                                                    /*@0001VLS*/ 02217000
* END;                                                     /*@0001VLS*/ 02218000
@EL00018 DS    0H                                                  0798 02219000
@EF00018 DS    0H                                                  0798 02220000
@ER00018 LM    @14,@12,@SA00018                                    0798 02221000
         BR    @14                                                 0798 02222000
*/********************************************************************/ 02223000
*/*    THIS PROC WILL PRINT THE DEBUG COUNTS SAVE AT VARIOUS POINTS  */ 02224000
*/*    THE COUNTS ARE ONLY FROM IFCTHRSH NOT CUA OR EEDIT    @0001VLS*/ 02225000
*/********************************************************************/ 02226000
*BUGDATA: PROC;               /* PRINT DEBUG16 DATA          @0001VLS*/ 02227000
BUGDATA  STM   @14,@12,@SA00019                                    0799 02228000
*MSGADDR = BUG16;                /*MOVE THE DEBUG HEADING INTO BUFFER*/ 02229000
         MVI   MSGADDR+31,C' '                                     0800 02230000
         MVC   MSGADDR+32(100),MSGADDR+31                          0800 02231000
         MVC   MSGADDR(31),BUG16                                   0800 02232000
*CALL PRINTIT;                   /*GO PRINT THE MESSAGE      @0001VLS*/ 02233000
         BAL   @14,PRINTIT                                         0801 02234000
*CALL CONVBIN(TOTREC,BUG10);          /* TOTAL NUMBER OF RECORDS READ*/ 02235000
         LA    @01,@AL00802                                        0802 02236000
         BAL   @14,CONVBIN                                         0802 02237000
*MSGADDR = BUG10;             /*MOVE THE MESSAGE TO THE PRINT BUFFER */ 02238000
         MVI   MSGADDR+26,C' '                                     0803 02239000
         MVC   MSGADDR+27(105),MSGADDR+26                          0803 02240000
         MVC   MSGADDR(26),BUG10                                   0803 02241000
*CALL PRINTIT;                /*GO PRINT THE MESSAGE         @0001VLS*/ 02242000
         BAL   @14,PRINTIT                                         0804 02243000
*CALL CONVBIN(OBRCT,BUG20);           /* NUMBER OF OBR RECORDS READ  */ 02244000
         LA    @01,@AL00805                                        0805 02245000
         BAL   @14,CONVBIN                                         0805 02246000
*MSGADDR = BUG20;             /*MOVE THE MESSAGE TO THE PRINT BUFFER */ 02247000
         MVI   MSGADDR+24,C' '                                     0806 02248000
         MVC   MSGADDR+25(107),MSGADDR+24                          0806 02249000
         MVC   MSGADDR(24),BUG20                                   0806 02250000
*CALL PRINTIT;                /*GO PRINT THE MESSAGE         @0001VLS*/ 02251000
         BAL   @14,PRINTIT                                         0807 02252000
*CALL CONVBIN(NUMSHORT,BUG30);        /* NUMBER OF SHORT RECORDS     */ 02253000
         LA    @01,@AL00808                                        0808 02254000
         BAL   @14,CONVBIN                                         0808 02255000
*MSGADDR = BUG30;             /*MOVE THE MESSAGE TO THE PRINT BUFFER */ 02256000
         MVI   MSGADDR+36,C' '                                     0809 02257000
         MVC   MSGADDR+37(95),MSGADDR+36                           0809 02258000
         MVC   MSGADDR(36),BUG30                                   0809 02259000
*CALL PRINTIT;                /*GO PRINT THE MESSAGE         @0001VLS*/ 02260000
         BAL   @14,PRINTIT                                         0810 02261000
*CALL CONVBIN(BADDEV,BUG31);          /* NUMBER OF NON-8003 DEVICES  */ 02262000
         LA    @01,@AL00811                                        0811 02263000
         BAL   @14,CONVBIN                                         0811 02264000
*MSGADDR = BUG31;             /*MOVE THE MESSAGE TO THE PRINT BUFFER */ 02265000
         MVI   MSGADDR+30,C' '                                     0812 02266000
         MVC   MSGADDR+31(101),MSGADDR+30                          0812 02267000
         MVC   MSGADDR(30),BUG31                                   0812 02268000
*CALL PRINTIT;                /*GO PRINT THE MESSAGE         @0001VLS*/ 02269000
         BAL   @14,PRINTIT                                         0813 02270000
*CALL CONVBIN(BADDAY,BUG40);        /* NUM RECORDS FAILED DATE RANGE */ 02271000
         LA    @01,@AL00814                                        0814 02272000
         BAL   @14,CONVBIN                                         0814 02273000
*MSGADDR = BUG40;             /*MOVE THE MESSAGE TO THE PRINT BUFFER */ 02274000
         MVI   MSGADDR+37,C' '                                     0815 02275000
         MVC   MSGADDR+38(94),MSGADDR+37                           0815 02276000
         MVC   MSGADDR(37),BUG40                                   0815 02277000
*CALL PRINTIT;                /*GO PRINT THE MESSAGE         @0001VLS*/ 02278000
         BAL   @14,PRINTIT                                         0816 02279000
*CALL CONVBIN(BADTIME,BUG50);       /* NUM RECORDS FAILED TIME RANGE */ 02280000
         LA    @01,@AL00817                                        0817 02281000
         BAL   @14,CONVBIN                                         0817 02282000
*MSGADDR = BUG50;             /*MOVE THE MESSAGE TO THE PRINT BUFFER */ 02283000
         MVI   MSGADDR+37,C' '                                     0818 02284000
         MVC   MSGADDR+38(94),MSGADDR+37                           0818 02285000
         MVC   MSGADDR(37),BUG50                                   0818 02286000
*CALL PRINTIT;                /*GO PRINT THE MESSAGE         @0001VLS*/ 02287000
         BAL   @14,PRINTIT                                         0819 02288000
*CALL CONVBIN(DROP3RD,BUG60);       /* NUM RECORDS FAILED 3RD SHIFT  */ 02289000
         LA    @01,@AL00820                                        0820 02290000
         BAL   @14,CONVBIN                                         0820 02291000
*MSGADDR = BUG60;             /*MOVE THE MESSAGE TO THE PRINT BUFFER */ 02292000
         MVI   MSGADDR+33,C' '                                     0821 02293000
         MVC   MSGADDR+34(98),MSGADDR+33                           0821 02294000
         MVC   MSGADDR(33),BUG60                                   0821 02295000
*CALL PRINTIT;                /*GO PRINT THE MESSAGE         @0001VLS*/ 02296000
         BAL   @14,PRINTIT                                         0822 02297000
*CALL CONVBIN(BADCPU,BUG70);        /* NUM RECORDS FAILED CPU SPECS  */ 02298000
         LA    @01,@AL00823                                        0823 02299000
         BAL   @14,CONVBIN                                         0823 02300000
*MSGADDR = BUG70;             /*MOVE THE MESSAGE TO THE PRINT BUFFER */ 02301000
         MVI   MSGADDR+35,C' '                                     0824 02302000
         MVC   MSGADDR+36(96),MSGADDR+35                           0824 02303000
         MVC   MSGADDR(35),BUG70                                   0824 02304000
*CALL PRINTIT;                /*GO PRINT THE MESSAGE         @0001VLS*/ 02305000
         BAL   @14,PRINTIT                                         0825 02306000
*CALL CONVBIN(BADCUA,BUG80);        /* NUM RECORDS FAILED CUA RANGE  */ 02307000
         LA    @01,@AL00826                                        0826 02308000
         BAL   @14,CONVBIN                                         0826 02309000
*MSGADDR = BUG80;             /*MOVE THE MESSAGE TO THE PRINT BUFFER */ 02310000
         MVI   MSGADDR+35,C' '                                     0827 02311000
         MVC   MSGADDR+36(96),MSGADDR+35                           0827 02312000
         MVC   MSGADDR(35),BUG80                                   0827 02313000
*CALL PRINTIT;                /*GO PRINT THE MESSAGE         @0001VLS*/ 02314000
         BAL   @14,PRINTIT                                         0828 02315000
*CALL CONVBIN(BADVOL,BUG90);        /* NUM RECORDS FAILED VOL SPECS  */ 02316000
         LA    @01,@AL00829                                        0829 02317000
         BAL   @14,CONVBIN                                         0829 02318000
*MSGADDR = BUG90;             /*MOVE THE MESSAGE TO THE PRINT BUFFER */ 02319000
         MVI   MSGADDR+37,C' '                                     0830 02320000
         MVC   MSGADDR+38(94),MSGADDR+37                           0830 02321000
         MVC   MSGADDR(37),BUG90                                   0830 02322000
*CALL PRINTIT;                /*GO PRINT THE MESSAGE         @0001VLS*/ 02323000
         BAL   @14,PRINTIT                                         0831 02324000
*CALL CONVBIN(BADSER,BUG100);        /* NUM RECORDS FAILED DEVSER    */ 02325000
         LA    @01,@AL00832                                        0832 02326000
         BAL   @14,CONVBIN                                         0832 02327000
*MSGADDR = BUG100;            /*MOVE THE MESSAGE TO THE PRINT BUFFER */ 02328000
         MVI   MSGADDR+45,C' '                                     0833 02329000
         MVC   MSGADDR+46(86),MSGADDR+45                           0833 02330000
         MVC   MSGADDR(45),BUG100                                  0833 02331000
*CALL PRINTIT;                /*GO PRINT THE MESSAGE         @0001VLS*/ 02332000
         BAL   @14,PRINTIT                                         0834 02333000
*CALL CONVBIN(SHAREMOD,BUG110);       /* NUM SHARE CHGS AS CONTROLLER*/ 02334000
         LA    @01,@AL00835                                        0835 02335000
         BAL   @14,CONVBIN                                         0835 02336000
*MSGADDR = BUG110;            /*MOVE THE MESSAGE TO THE PRINT BUFFER */ 02337000
         MVI   MSGADDR+66,C' '                                     0836 02338000
         MVC   MSGADDR+67(65),MSGADDR+66                           0836 02339000
         MVC   MSGADDR(66),BUG110                                  0836 02340000
*CALL PRINTIT;                /*GO PRINT THE MESSAGE         @0001VLS*/ 02341000
         BAL   @14,PRINTIT                                         0837 02342000
*CALL CONVBIN(SHARECU,BUG120);        /* NUM SHARE CHGS AS CUA       */ 02343000
         LA    @01,@AL00838                                        0838 02344000
         BAL   @14,CONVBIN                                         0838 02345000
*MSGADDR = BUG120;            /*MOVE THE MESSAGE TO THE PRINT BUFFER */ 02346000
         MVI   MSGADDR+56,C' '                                     0839 02347000
         MVC   MSGADDR+57(75),MSGADDR+56                           0839 02348000
         MVC   MSGADDR(56),BUG120                                  0839 02349000
*CALL PRINTIT;                /*GO PRINT THE MESSAGE         @0001VLS*/ 02350000
         BAL   @14,PRINTIT                                         0840 02351000
*CALL CONVBIN(EXCTHRES(1),BUG130);        /* NUM THRESHOLD EXCEEDS   */ 02352000
         LA    @01,@AL00841                                        0841 02353000
         BAL   @14,CONVBIN                                         0841 02354000
*MSGADDR = BUG130;            /*MOVE THE MESSAGE TO THE PRINT BUFFER */ 02355000
         MVI   MSGADDR+33,C' '                                     0842 02356000
         MVC   MSGADDR+34(98),MSGADDR+33                           0842 02357000
         MVC   MSGADDR(33),BUG130                                  0842 02358000
*CALL PRINTIT;                /*GO PRINT THE MESSAGE         @0001VLS*/ 02359000
         BAL   @14,PRINTIT                                         0843 02360000
*CALL CONVBIN(EXCTHRES(2),BUG140);        /* NUM PERM ERRORS @0001VLS*/ 02361000
         LA    @01,@AL00844                                        0844 02362000
         BAL   @14,CONVBIN                                         0844 02363000
*MSGADDR = BUG140;            /*MOVE THE MESSAGE TO THE PRINT BUFFER */ 02364000
         MVI   MSGADDR+30,C' '                                     0845 02365000
         MVC   MSGADDR+31(101),MSGADDR+30                          0845 02366000
         MVC   MSGADDR(30),BUG140                                  0845 02367000
*CALL PRINTIT;                /*GO PRINT THE MESSAGE         @0001VLS*/ 02368000
         BAL   @14,PRINTIT                                         0846 02369000
*END;                                                      /*@0001VLS*/ 02370000
@EL00019 DS    0H                                                  0847 02371000
@EF00019 DS    0H                                                  0847 02372000
@ER00019 LM    @14,@12,@SA00019                                    0847 02373000
         BR    @14                                                 0847 02374000
*/*                                                          @0001VLS*/ 02375000
*/* LOOK UP THE CUA IN THE SHARE TABLE FOR THE CONVERTED SHARE VALUE. * 02376000
*/* IF IT IS FOUND, RETURN THE CONVERTED VALUE IN NEW CUA. IF NOT,    * 02377000
*/* RETURN THE ORIGINAL VALUE IN NEWCUA.                     @0001VLS*/ 02378000
*/*                                                          @0001VLS*/ 02379000
*CUASHARE: PROC;                                           /*@0001VLS*/ 02380000
CUASHARE STM   @14,@12,12(@13)                                     0848 02381000
*    VALIDSHR = OFF;                          /* TURN OFF FOR SEARCH  * 02382000
         NI    VALIDSHR,B'01111111'                                0849 02383000
*    SHR74CUA = OCUA2;                        /* CUA FOR COMPARISON   * 02384000
         MVC   SHR74CUA(2),OCUA2(R7)                               0850 02385000
*    SHR74CPU = CPUIDENT;                     /* CPU FOR COMPARISON   * 02386000
         MVC   SHR74CPU(3),CPUIDENT(R7)                            0851 02387000
*    SHR74XXD = SHR74XXX;                     /* FOR CONTROLLER COMPR * 02388000
         MVC   SHR74XXD(5),SHR74XXX                                0852 02389000
*    SHR74CUX = SHR74CUX & FOXZERO;                        /*@0001VLS*/ 02390000
         NI    SHR74CUX,X'F0'                                      0853 02391000
*    SHR74XDD = ON;                                        /*@0001VLS*/ 02392000
         OI    SHR74XDD,B'10000000'                                0854 02393000
*    DO I = 1 TO SHARENUM BY 1 WHILE(VALIDSHR = OFF);      /*@0001VLS*/ 02394000
         LA    @06,1                                               0855 02395000
         STH   @06,I                                               0855 02396000
         B     @DE00855                                            0855 02397000
@DL00855 TM    VALIDSHR,B'10000000'                                0855 02398000
         BNZ   @DC00855                                            0855 02399000
*      IF SHAREDX(I) = ON THEN                                     0856 02400000
         MH    @06,@CH00034                                        0856 02401000
         L     @03,SHAREPTR(,R2)                                   0856 02402000
         ST    @06,@TF00001                                        0856 02403000
         ALR   @06,@03                                             0856 02404000
         AL    @06,@CF01429                                        0856 02405000
         TM    SHAREDX-2(@06),B'10000000'                          0856 02406000
         BNO   @RF00856                                            0856 02407000
*        DO;                                  /* CHECK FOR CONTROLLER * 02408000
*          IF SHR74XXD = SHRCUCPU(I) THEN                          0858 02409000
         LR    @06,@03                                             0858 02410000
         AL    @06,@TF00001                                        0858 02411000
         AL    @06,@CF01429                                        0858 02412000
         CLC   SHR74XXD(5),SHRCUCPU-2(@06)                         0858 02413000
         BNE   @RF00858                                            0858 02414000
*            DO;                                           /*@0001VLS*/ 02415000
*              /*                                            @0001VLS*/ 02416000
*              /* PUT IN CUA FROM SHARE TABLE WITH UNITS ADDR FROM REC* 02417000
*              /*                                            @0001VLS*/ 02418000
*              SHAREMOD = SHAREMOD + ONE; /*CONTROLLER LEVEL CHANGE*/   02419000
         LA    @06,1                                               0860 02420000
         AL    @06,SHAREMOD                                        0860 02421000
         ST    @06,SHAREMOD                                        0860 02422000
*              SHR74CUA = SHARECUB(I);                     /*@0001VLS*/ 02423000
         LR    @06,@03                                             0861 02424000
         AL    @06,@TF00001                                        0861 02425000
         AL    @06,@CF01425                                        0861 02426000
         MVC   SHR74CUA(2),SHARECUB-7(@06)                         0861 02427000
*              SHR74CUA = SHR74CUA & ZFFF;                 /*@0001VLS*/ 02428000
         NC    SHR74CUA(2),@CB00463                                0862 02429000
*              RECCUA = OCUA2 & ZZZF;                      /*@0001VLS*/ 02430000
         MVC   RECCUA(2),OCUA2(R7)                                 0863 02431000
         NC    RECCUA(2),@CB00465                                  0863 02432000
*              RECCUA = RECCUA | SHR74CUA;                 /*@0001VLS*/ 02433000
         OC    RECCUA(2),SHR74CUA                                  0864 02434000
*              RECCPU = SHARSERB(I);                       /*@0001VLS*/ 02435000
         AL    @03,@TF00001                                        0865 02436000
         BCTR  @03,0                                               0865 02437000
         BCTR  @03,0                                               0865 02438000
         MVC   RECCPU(3),SHARSERB-9(@03)                           0865 02439000
*              VALIDSHR = ON;                              /*@0001VLS*/ 02440000
         OI    VALIDSHR,B'10000000'                                0866 02441000
*            END;                                          /*@0001VLS*/ 02442000
*        END;                                              /*@0001VLS*/ 02443000
*      ELSE                                                        0869 02444000
*        IF SHR74XXX = SHRCUCPU(I) THEN                            0869 02445000
         B     @RC00856                                            0869 02446000
@RF00856 LH    @06,I                                               0869 02447000
         MH    @06,@CH00034                                        0869 02448000
         L     @03,SHAREPTR(,R2)                                   0869 02449000
         ST    @06,@TF00001                                        0869 02450000
         ALR   @06,@03                                             0869 02451000
         AL    @06,@CF01429                                        0869 02452000
         CLC   SHR74XXX(5),SHRCUCPU-2(@06)                         0869 02453000
         BNE   @RF00869                                            0869 02454000
*          DO;                                /* CUA ONLY.   @0001VLS*/ 02455000
*            SHARECU = SHARECU + ONE;   /*CUA LEVEL CHANGE   @0001VLS*/ 02456000
         LA    @06,1                                               0871 02457000
         AL    @06,SHARECU                                         0871 02458000
         ST    @06,SHARECU                                         0871 02459000
*            RECCUA = SHARECUB(I);                         /*@0001VLS*/ 02460000
         LR    @06,@03                                             0872 02461000
         AL    @06,@TF00001                                        0872 02462000
         AL    @06,@CF01425                                        0872 02463000
         MVC   RECCUA(2),SHARECUB-7(@06)                           0872 02464000
*            RECCPU = SHARSERB(I);                         /*@0001VLS*/ 02465000
         AL    @03,@TF00001                                        0873 02466000
         BCTR  @03,0                                               0873 02467000
         BCTR  @03,0                                               0873 02468000
         MVC   RECCPU(3),SHARSERB-9(@03)                           0873 02469000
*            VALIDSHR = ON;                                /*@0001VLS*/ 02470000
         OI    VALIDSHR,B'10000000'                                0874 02471000
*          END;                                            /*@0001VLS*/ 02472000
*    END;                                                  /*@0001VLS*/ 02473000
@RF00869 DS    0H                                                  0876 02474000
@RC00856 LA    @06,1                                               0876 02475000
         AH    @06,I                                               0876 02476000
         STH   @06,I                                               0876 02477000
@DE00855 L     @03,SHAREPTR(,R2)                                   0876 02478000
         CH    @06,SHARENUM(,@03)                                  0876 02479000
         BNH   @DL00855                                            0876 02480000
@DC00855 DS    0H                                                  0877 02481000
*    RETURN;                                               /*@0001VLS*/ 02482000
@EL00020 DS    0H                                                  0877 02483000
@EF00020 DS    0H                                                  0877 02484000
@ER00020 LM    @14,@12,12(@13)                                     0877 02485000
         BR    @14                                                 0877 02486000
* END;                                                     /*@0001VLS*/ 02487000
*/*                                                          @0001VLS*/ 02488000
*/*****************************************************************/    02489000
*/*    THIS PROC WILL HEX DUMP THE SORT TABLE ENTRIES ONE/LINE    */    02490000
*DUMP: PROC;                                               /*@0001VLS*/ 02491000
DUMP     STM   @14,@12,@SA00021                                    0879 02492000
* MSGDS = CHARS(2);              /* TOURIST DATA SET OUTPUT  @0001VLS*/ 02493000
         MVC   MSGDS(1),CHARS+1                                    0880 02494000
* MSGADDR = BUG8;                                          /*@0001VLS*/ 02495000
         MVI   MSGADDR+33,C' '                                     0881 02496000
         MVC   MSGADDR+34(98),MSGADDR+33                           0881 02497000
         MVC   MSGADDR(33),BUG8                                    0881 02498000
* CALL PRINTIT;                                            /*@0001VLS*/ 02499000
         BAL   @14,PRINTIT                                         0882 02500000
* DO Z = ONE BY ONE TO SORTNUM;                            /*@0001VLS*/ 02501000
         LA    @06,1                                               0883 02502000
         ST    @06,Z                                               0883 02503000
         B     @DE00883                                            0883 02504000
@DL00883 DS    0H                                                  0884 02505000
*  CALL CONVERT(SORTTAB(Z),MSGADDR,ELEVEN);                /*@0001VLS*/ 02506000
         MVC   @AL00001+4(8),@AL00884                              0884 02507000
         MH    @06,@CH00034                                        0884 02508000
         L     @03,SORTADR(,R2)                                    0884 02509000
         AL    @03,@CF01430                                        0884 02510000
         LA    @06,SORTTAB(@06,@03)                                0884 02511000
         ST    @06,@AL00001                                        0884 02512000
         LA    @01,@AL00001                                        0884 02513000
         BAL   @14,CONVERT                                         0884 02514000
*  CALL PRINTIT;                 /*PRINT THIS ENTRY OF THE SORT TABLE*/ 02515000
         BAL   @14,PRINTIT                                         0885 02516000
* END;                                                     /*@0001VLS*/ 02517000
         LA    @06,1                                               0886 02518000
         AL    @06,Z                                               0886 02519000
         ST    @06,Z                                               0886 02520000
@DE00883 C     @06,SORTNUM(,R2)                                    0886 02521000
         BNH   @DL00883                                            0886 02522000
*END;                                                      /*@0001VLS*/ 02523000
@EL00021 DS    0H                                                  0887 02524000
@EF00021 DS    0H                                                  0887 02525000
@ER00021 LM    @14,@12,@SA00021                                    0887 02526000
         BR    @14                                                 0887 02527000
*CONVBIN1: PROC(BWORD1,DADDR1);                            /*@0001VLS*/ 02528000
CONVBIN1 STM   @14,@12,@SA00022                                    0888 02529000
         MVC   @PC00022(8),0(@01)                                  0888 02530000
* DCL  BWORD1 FIXED(8);                                    /*@0001VLS*/ 02531000
* DCL  DADDR1 CHAR(20);                                    /*@0001VLS*/ 02532000
* L = BWORD1;                                              /*@0001VLS*/ 02533000
         L     @06,@PC00022                                        0891 02534000
         SLR   @03,@03                                             0891 02535000
         IC    @03,BWORD1(,@06)                                    0891 02536000
         ST    @03,L                                               0891 02537000
* CALL CONVBIN(L,DADDR1);                                  /*@0001VLS*/ 02538000
         LA    @06,L                                               0892 02539000
         ST    @06,@AL00001                                        0892 02540000
         L     @06,@PC00022+4                                      0892 02541000
         ST    @06,@AL00001+4                                      0892 02542000
         LA    @01,@AL00001                                        0892 02543000
         BAL   @14,CONVBIN                                         0892 02544000
*END;                                                      /*@0001VLS*/ 02545000
@EL00022 DS    0H                                                  0893 02546000
@EF00022 DS    0H                                                  0893 02547000
@ER00022 LM    @14,@12,@SA00022                                    0893 02548000
         BR    @14                                                 0893 02549000
*CONVBIN2: PROC(BWORD2,DADDR2);                            /*@0001VLS*/ 02550000
CONVBIN2 STM   @14,@12,@SA00023                                    0894 02551000
         MVC   @PC00023(8),0(@01)                                  0894 02552000
* DCL  BWORD2 FIXED(15);                                   /*@0001VLS*/ 02553000
* DCL  DADDR2 CHAR(20);                                    /*@0001VLS*/ 02554000
* L = BWORD2;                                              /*@0001VLS*/ 02555000
         L     @06,@PC00023                                        0897 02556000
         LH    @06,BWORD2(,@06)                                    0897 02557000
         ST    @06,L                                               0897 02558000
* CALL CONVBIN(L,DADDR2);                                  /*@0001VLS*/ 02559000
         LA    @06,L                                               0898 02560000
         ST    @06,@AL00001                                        0898 02561000
         L     @06,@PC00023+4                                      0898 02562000
         ST    @06,@AL00001+4                                      0898 02563000
         LA    @01,@AL00001                                        0898 02564000
         BAL   @14,CONVBIN                                         0898 02565000
*END;                                                      /*@0001VLS*/ 02566000
@EL00023 DS    0H                                                  0899 02567000
@EF00023 DS    0H                                                  0899 02568000
@ER00023 LM    @14,@12,@SA00023                                    0899 02569000
         BR    @14                                                 0899 02570000
*CONVBIN3: PROC(BWORD3,DADDR3);                            /*@0001VLS*/ 02571000
CONVBIN3 STM   @14,@12,12(@13)                                     0900 02572000
         MVC   @PC00024(8),0(@01)                                  0900 02573000
* DCL  BWORD3 FIXED(32) UNSIGNED;                          /*@0001VLS*/ 02574000
* DCL  DADDR3 CHAR(20);                                    /*@0001VLS*/ 02575000
* CVD(BWORD3,DBLWORD);                                     /*@0001VLS*/ 02576000
         L     @06,@PC00024                                        0903 02577000
         L     @06,BWORD3(,@06)                                    0903 02578000
         CVD   @06,DBLWORD                                         0903 02579000
* UNPK(WORK(1:8),DBLWORD);                                 /*@0001VLS*/ 02580000
         UNPK  WORK(8),DBLWORD(8)                                  0904 02581000
* WORK(8) = WORK(8) | FOXZERO;                             /*@0001VLS*/ 02582000
         OI    WORK+7,X'F0'                                        0905 02583000
* SWITCH1 = OFF;                                           /*@0001VLS*/ 02584000
         NI    SWITCH1,B'10111111'                                 0906 02585000
* DO L = 1 BY 1 TO 7 WHILE(SWITCH1 = OFF);                 /*@0001VLS*/ 02586000
         LA    @06,1                                               0907 02587000
         ST    @06,L                                               0907 02588000
@DL00907 TM    SWITCH1,B'01000000'                                 0907 02589000
         BNZ   @DC00907                                            0907 02590000
*  IF WORKOVER(L) = FOXZERO THEN /*REMOVE THE LEADING ZEROS  @0001VLS*/ 02591000
         LA    @03,WORKOVER-1(@06)                                 0908 02592000
         CLI   0(@03),X'F0'                                        0908 02593000
         BNE   @RF00908                                            0908 02594000
*    WORKOVER(L) = BLANK;        /*REPLACE WITH A BLANK CHARACTER*/     02595000
         LA    @03,WORKOVER-1(@06)                                 0909 02596000
         MVI   0(@03),C' '                                         0909 02597000
*   ELSE                                                           0910 02598000
*    SWITCH1 = ON;               /*TELL LOOP THE END OF LEADING ZEROS*/ 02599000
         B     @RC00908                                            0910 02600000
@RF00908 OI    SWITCH1,B'01000000'                                 0910 02601000
* END;                                                     /*@0001VLS*/ 02602000
@RC00908 LA    @06,1                                               0911 02603000
         AL    @06,L                                               0911 02604000
         ST    @06,L                                               0911 02605000
         C     @06,@CF00082                                        0911 02606000
         BNH   @DL00907                                            0911 02607000
@DC00907 DS    0H                                                  0912 02608000
* DADDR3(1:8) = WORK(1:8);       /* MOVE THE DATA TO THE OUTPUT LINE */ 02609000
         L     @06,@PC00024+4                                      0912 02610000
         MVC   DADDR3(8,@06),WORK                                  0912 02611000
*END;                                                      /*@0001VLS*/ 02612000
@EL00024 DS    0H                                                  0913 02613000
@EF00024 DS    0H                                                  0913 02614000
@ER00024 LM    @14,@12,12(@13)                                     0913 02615000
         BR    @14                                                 0913 02616000
*CONVBIN: PROC(BINWORD,DECADDR);                           /*@0001VLS*/ 02617000
CONVBIN  STM   @14,@12,12(@13)                                     0914 02618000
         MVC   @PC00025(8),0(@01)                                  0914 02619000
* DCL  BINWORD FIXED(31);                                  /*@0001VLS*/ 02620000
* DCL  DECADDR CHAR(20);                                   /*@0001VLS*/ 02621000
* RESPECIFY (R8) RESTRICTED;                               /*@0001VLS*/ 02622000
* R8 = BINWORD;                  /*LOAD THE ITEM TO CONVERT  @0001VLS*/ 02623000
         L     @06,@PC00025                                        0918 02624000
         L     R8,BINWORD(,@06)                                    0918 02625000
* CVD(R8,DBLWORD);                                         /*@0001VLS*/ 02626000
         CVD   R8,DBLWORD                                          0919 02627000
* UNPK(WORK(1:8),DBLWORD);                                 /*@0001VLS*/ 02628000
         UNPK  WORK(8),DBLWORD(8)                                  0920 02629000
* WORK(8) = WORK(8) | FOXZERO;                             /*@0001VLS*/ 02630000
         OI    WORK+7,X'F0'                                        0921 02631000
* SWITCH1 = OFF;                                           /*@0001VLS*/ 02632000
         NI    SWITCH1,B'10111111'                                 0922 02633000
* DO L = 1 BY 1 TO 7 WHILE(SWITCH1 = OFF);                 /*@0001VLS*/ 02634000
         LA    @09,1                                               0923 02635000
         ST    @09,L                                               0923 02636000
@DL00923 TM    SWITCH1,B'01000000'                                 0923 02637000
         BNZ   @DC00923                                            0923 02638000
*  IF WORKOVER(L) = FOXZERO THEN /*REMOVE THE LEADING ZEROS  @0001VLS*/ 02639000
         LA    @06,WORKOVER-1(@09)                                 0924 02640000
         CLI   0(@06),X'F0'                                        0924 02641000
         BNE   @RF00924                                            0924 02642000
*    WORKOVER(L) = BLANK;        /*REPLACE WITH A BLANK CHARACTER*/     02643000
         LA    @06,WORKOVER-1(@09)                                 0925 02644000
         MVI   0(@06),C' '                                         0925 02645000
*   ELSE                                                           0926 02646000
*    SWITCH1 = ON;               /*TELL LOOP THE END OF LEADING ZEROS*/ 02647000
         B     @RC00924                                            0926 02648000
@RF00924 OI    SWITCH1,B'01000000'                                 0926 02649000
* END;                                                     /*@0001VLS*/ 02650000
@RC00924 LA    @09,1                                               0927 02651000
         AL    @09,L                                               0927 02652000
         ST    @09,L                                               0927 02653000
         C     @09,@CF00082                                        0927 02654000
         BNH   @DL00923                                            0927 02655000
@DC00923 DS    0H                                                  0928 02656000
* DECADDR(1:5) = WORK(4:8);      /* MOVE THE DATA TO THE OUTPUT LINE */ 02657000
         L     @09,@PC00025+4                                      0928 02658000
         MVC   DECADDR(5,@09),WORK+3                               0928 02659000
* RESPECIFY (R8) UNRESTRICTED;                             /*@0001VLS*/ 02660000
*END;                                                      /*@0001VLS*/ 02661000
@EL00025 DS    0H                                                  0930 02662000
@EF00025 DS    0H                                                  0930 02663000
@ER00025 LM    @14,@12,12(@13)                                     0930 02664000
         BR    @14                                                 0930 02665000
*PRINTIT: PROC;                /*SET UP LINKAGE FOR I/O TO PRINT LINE*/ 02666000
PRINTIT  STM   @14,@12,@SA00026                                    0931 02667000
* IF DEBUG27 = OFF THEN                                            0932 02668000
         TM    DEBUG27(R2),B'00010000'                             0932 02669000
         BNZ   @RF00932                                            0932 02670000
*PRINTADR = ADDR(MESSAGE);     /*TELL I/O ADDRESS OF OUT BUFFER*/  0933 02671000
         LA    @06,MESSAGE                                         0933 02672000
         ST    @06,PRINTADR(,R2)                                   0933 02673000
*CALL IOHND(RITEPRTR);         /*PASS CONTROL TO I/O TO PRINT MESSAGE*/ 02674000
@RF00932 L     @15,ADIOHND(,R2)                                    0934 02675000
         LA    @01,@AL00934                                        0934 02676000
         BALR  @14,@15                                             0934 02677000
*END;                                                      /*@0001VLS*/ 02678000
@EL00026 DS    0H                                                  0935 02679000
@EF00026 DS    0H                                                  0935 02680000
@ER00026 LM    @14,@12,@SA00026                                    0935 02681000
         BR    @14                                                 0935 02682000
* /*                                                         @0001VLS*/ 02683000
* /* CONVERT CHARACTERS TO PRINTABLE                         @0001VLS*/ 02684000
* /*                                                         @0001VLS*/ 02685000
*CONVERT: PROC(NEXTBYTE,ADDNUM,LENNUM);                    /*@0001VLS*/ 02686000
CONVERT  STM   @14,@12,12(@13)                                     0936 02687000
         MVC   @PC00027(12),0(@01)                                 0936 02688000
* DCL NEXTBYTE  CHAR(11);                                  /*@0001VLS*/ 02689000
* DCL ADDNUM    CHAR(133);                                 /*@0001VLS*/ 02690000
* DCL LENNUM    FIXED(31);        /* HOW MUCH TO CONVERT     @0001VLS*/ 02691000
* RESPECIFY (R8,R9) RESTRICTED;                            /*@0001VLS*/ 02692000
* DO P = LENNUM BY -1 TO ONE;                              /*@0001VLS*/ 02693000
         L     @06,@PC00027+8                                      0941 02694000
         L     @06,LENNUM(,@06)                                    0941 02695000
         ST    @06,P                                               0941 02696000
         B     @DE00941                                            0941 02697000
@DL00941 DS    0H                                                  0942 02698000
*  R8 = NEXTBYTE(P);              /* LOAD THE NEXT BYTE      @0001VLS*/ 02699000
         L     @03,@PC00027                                        0942 02700000
         BCTR  @03,0                                               0942 02701000
         SLR   R8,R8                                               0942 02702000
         IC    R8,NEXTBYTE(@06,@03)                                0942 02703000
*  X = TWO * P;                   /* INDEX FOR STORING CONVERTED 1/2 */ 02704000
         LR    @03,@06                                             0943 02705000
         ALR   @03,@03                                             0943 02706000
         ST    @03,X                                               0943 02707000
*                                 /* BYTE.  INPUT IS 2 CHARS @0001VLS*/ 02708000
*  SRDL(R8,FOUR);                 /* SPLIT THE BYTE IN HALF  @0001VLS*/ 02709000
         SRDL  R8,4                                                0944 02710000
*  SRL(R9,28);                    /* RIGHT JUSTIFY SPLIT HALF BYTE   */ 02711000
         SRL   R9,28                                               0945 02712000
*  R9 = R9 + ONE;                                          /*@0001VLS*/ 02713000
         LA    @15,1                                               0946 02714000
         ALR   R9,@15                                              0946 02715000
*  R8 = R8 + ONE;                                          /*@0001VLS*/ 02716000
         ALR   R8,@15                                              0947 02717000
*  ADDNUM(X-ONE) = CHARS(R8);     /* CHARS IS 16 CHAR STRING FOR     */ 02718000
         L     @15,@PC00027+4                                      0948 02719000
         ALR   @03,@15                                             0948 02720000
         BCTR  @03,0                                               0948 02721000
         BCTR  @03,0                                               0948 02722000
         LA    @01,CHARS-1(R8)                                     0948 02723000
         MVC   ADDNUM(1,@03),0(@01)                                0948 02724000
*  ADDNUM(X)     = CHARS(R9);     /* CONVERTINAG HEX NUMS TO PRINT   */ 02725000
         L     @03,X                                               0949 02726000
         ALR   @15,@03                                             0949 02727000
         BCTR  @15,0                                               0949 02728000
         LA    @03,CHARS-1(R9)                                     0949 02729000
         MVC   ADDNUM(1,@15),0(@03)                                0949 02730000
* END;                                                     /*@0001VLS*/ 02731000
         BCTR  @06,0                                               0950 02732000
         ST    @06,P                                               0950 02733000
@DE00941 LTR   @06,@06                                             0950 02734000
         BP    @DL00941                                            0950 02735000
*END;                                                      /*@0001VLS*/ 02736000
@EL00027 DS    0H                                                  0951 02737000
@EF00027 DS    0H                                                  0951 02738000
@ER00027 LM    @14,@12,12(@13)                                     0951 02739000
         BR    @14                                                 0951 02740000
*RESPECIFY (R8,R9) UNRESTRICTED;                           /*@0001VLS*/ 02741000
* /*                                                         @0001VLS*/ 02742000
* /* CALCULATE THE PERCENTAGE FOR THE TEMPORARY SUMMARY      @0001VLS*/ 02743000
* /*                                                         @0001VLS*/ 02744000
*CALCPERC: PROC(DIVEND,DIVSOR,OUTLOC);                     /*@0001VLS*/ 02745000
CALCPERC STM   @14,@12,@SA00028                                    0953 02746000
         MVC   @PC00028(12),0(@01)                                 0953 02747000
* DCL DIVEND    FIXED(31);        /* DIVIDEND                @0001VLS*/ 02748000
* DCL DIVSOR    FIXED(32) UNSIGNED;  /* DIVISOR              @0001VLS*/ 02749000
* DCL OUTLOC    CHAR(5);          /* OUTPUT LOCATION         @0001VLS*/ 02750000
* /* Z = (DIVEND * 200000 * 100) / DIVSOR                    @0001VLS*/ 02751000
* RESPECIFY (R8,R9) RESTRICTED;                            /*@0001VLS*/ 02752000
* R8 = ZERO;                      /* CLEAR HIGH ORDER PART OF REGS   */ 02753000
         SLR   R8,R8                                               0958 02754000
* R9 = DIVEND;                    /* MULTIPLICAND            @0001VLS*/ 02755000
         L     @06,@PC00028                                        0959 02756000
         L     R9,DIVEND(,@06)                                     0959 02757000
* R7 = 20000000;                  /* MULTIPLIER              @0001VLS*/ 02758000
         L     R7,@CF01365                                         0960 02759000
* GEN (MR R8,R7);                 /* PRODUCT/DIVIDEND        @0001VLS*/ 02760000
         MR R8,R7                                                       02761000
* R7 = DIVSOR;                    /* DIVISOR                 @0001VLS*/ 02762000
         L     @03,@PC00028+4                                      0962 02763000
         L     R7,DIVSOR(,@03)                                     0962 02764000
* GEN (DR R8,R7);                                          /*@0001VLS*/ 02765000
         DR R8,R7                                                       02766000
* Z = R9;                         /* QUOTIENT                @0001VLS*/ 02767000
         ST    R9,Z                                                0964 02768000
* RESPECIFY (R8,R9) UNRESTRICTED;                          /*@0001VLS*/ 02769000
* IF Z >= 10000 THEN                                               0966 02770000
         L     @06,Z                                               0966 02771000
         C     @06,@CF01366                                        0966 02772000
         BL    @RF00966                                            0966 02773000
*   OUTLOC = HUNDPLUS;            /* OVER 100 PERCENT        @0001VLS*/ 02774000
         L     @06,@PC00028+8                                      0967 02775000
         MVC   OUTLOC(5,@06),@CC00502                              0967 02776000
* ELSE                                                             0968 02777000
*   DO;                                                    /*@0001VLS*/ 02778000
         B     @RC00966                                            0968 02779000
@RF00966 DS    0H                                                  0969 02780000
*     CVD (Z,DBLWORD);                                     /*@0001VLS*/ 02781000
         L     @06,Z                                               0969 02782000
         CVD   @06,DBLWORD                                         0969 02783000
*     UNPK (TEMPAREA(1:8),DBLWORD);                        /*@0001VLS*/ 02784000
         UNPK  TEMPAREA(8),DBLWORD(8)                              0970 02785000
*     TEMPAREA(8) = TEMPAREA(8) | FOXZERO;                 /*@0001VLS*/ 02786000
         OI    TEMPAREA+7,X'F0'                                    0971 02787000
*     IF TEMPAREA(5) = FOXZERO THEN                                0972 02788000
         CLI   TEMPAREA+4,X'F0'                                    0972 02789000
         BNE   @RF00972                                            0972 02790000
*       TEMPAREA(5) = BLANK;        /* CHANGE LEADING ZERO TO BLANK  */ 02791000
         MVI   TEMPAREA+4,C' '                                     0973 02792000
*     OUTLOC(1:2) = TEMPAREA(5:6);  /* TENS AND UNITS DIGITS @0001VLS*/ 02793000
@RF00972 L     @06,@PC00028+8                                      0974 02794000
         MVC   OUTLOC(2,@06),TEMPAREA+4                            0974 02795000
*     OUTLOC(3) = PERIOD;                                  /*@0001VLS*/ 02796000
         MVI   OUTLOC+2(@06),C'.'                                  0975 02797000
*     OUTLOC(4:5) = TEMPAREA(7:8);  /* TENTHS AND HUNDREDTHS @0001VLS*/ 02798000
         MVC   OUTLOC+3(2,@06),TEMPAREA+6                          0976 02799000
*   END;                                                   /*@0001VLS*/ 02800000
* END;                                                     /*@0001VLS*/ 02801000
@EL00028 DS    0H                                                  0978 02802000
@EF00028 DS    0H                                                  0978 02803000
@ER00028 LM    @14,@12,@SA00028                                    0978 02804000
         BR    @14                                                 0978 02805000
*/*                                                          @0001VLS*/ 02806000
*/* THE RECORD IS PASSED AGAINST THE FILTERING CRITERIA SET UP BY THE*/ 02807000
*/* PARAMETER ROUTINE.                                       @0001VLS*/ 02808000
*/*                                                          @0001VLS*/ 02809000
*FILTER: PROC;                                             /*@0001VLS*/ 02810000
FILTER   STM   @14,@12,12(@13)                                     0979 02811000
*  TOTREC = TOTREC + ONE;         /* KEEP TRACK OF TOTAL RECORDS READ*/ 02812000
         LA    @06,1                                               0980 02813000
         L     @03,TOTREC                                          0980 02814000
         ALR   @03,@06                                             0980 02815000
         ST    @03,TOTREC                                          0980 02816000
*  PASSFLAG = OFF;                /* ASSUME THE RECORD WILL FAIL     */ 02817000
         NI    PASSFLAG(R2),B'11111110'                            0981 02818000
*  IF (RECTYP & FOXZERO) = OBRREC THEN  /* IS IT AN OBR RECORD       */ 02819000
         MVC   @TS00001(1),RECTYP(R7)                              0982 02820000
         NI    @TS00001,X'F0'                                      0982 02821000
         CLI   @TS00001,X'30'                                      0982 02822000
         BNE   @RF00982                                            0982 02823000
*    DO OBRCT = OBRCT + ONE;                               /*@0001VLS*/ 02824000
         AL    @06,OBRCT                                           0983 02825000
         ST    @06,OBRCT                                           0983 02826000
*      IF SHORT = OFF THEN        /* IF SHORT RECORD, THEN DISCARD   */ 02827000
         TM    SHORT(R7),B'00100000'                               0984 02828000
         BNZ   @RF00984                                            0984 02829000
*        DO;                                               /*@0001VLS*/ 02830000
*          IF DEV2 = SAVEDEV THEN /* IS THIS DEVICE USED BY THIS RPT */ 02831000
         CLC   DEV2(2,R7),@CB00498                                 0986 02832000
         BNE   @RF00986                                            0986 02833000
*            DO;                                           /*@0001VLS*/ 02834000
*              IF DATE >= STDATE &            /* IS DATE IN RANGE    */ 02835000
*                DATE <= ENDDATE THEN                              0988 02836000
         CLC   DATE(4,R7),STDATE(R2)                               0988 02837000
         BL    @RF00988                                            0988 02838000
         CLC   DATE(4,R7),ENDDATE(R2)                              0988 02839000
         BH    @RF00988                                            0988 02840000
*                DO;                                       /*@0001VLS*/ 02841000
*                  IF (TIME >= STTIME1 & TIME <= ENDTIME1) |       0990 02842000
*                    (TIME >= STTIME2 & TIME <= ENDTIME2)  THEN    0990 02843000
         CLC   TIME(4,R7),STTIME1(R2)                              0990 02844000
         BL    @GL00009                                            0990 02845000
         CLC   TIME(4,R7),ENDTIME1(R2)                             0990 02846000
         BNH   @RT00990                                            0990 02847000
@GL00009 CLC   TIME(4,R7),STTIME2(R2)                              0990 02848000
         BL    @RF00990                                            0990 02849000
         CLC   TIME(4,R7),ENDTIME2(R2)                             0990 02850000
         BH    @RF00990                                            0990 02851000
@RT00990 DS    0H                                                  0991 02852000
*                    DO;                                   /*@0001VLS*/ 02853000
*                      IF SHIFT3RD = ON &                          0992 02854000
*                        ((DATE = STDATE & TIME < STTIME1) |       0992 02855000
*                        (DATE = ENDDATE & TIME > ENDTIME2)) THEN  0992 02856000
         TM    SHIFT3RD(R2),B'00010000'                            0992 02857000
         BNO   @RF00992                                            0992 02858000
         CLC   DATE(4,R7),STDATE(R2)                               0992 02859000
         BNE   @GL00013                                            0992 02860000
         CLC   TIME(4,R7),STTIME1(R2)                              0992 02861000
         BL    @RT00992                                            0992 02862000
@GL00013 CLC   DATE(4,R7),ENDDATE(R2)                              0992 02863000
         BNE   @RF00992                                            0992 02864000
         CLC   TIME(4,R7),ENDTIME2(R2)                             0992 02865000
         BNH   @RF00992                                            0992 02866000
@RT00992 DS    0H                                                  0993 02867000
*                         DROP3RD = DROP3RD + ONE; /* NUM FAIL TIME  */ 02868000
         LA    @06,1                                               0993 02869000
         AL    @06,DROP3RD                                         0993 02870000
         ST    @06,DROP3RD                                         0993 02871000
*                      ELSE                                        0994 02872000
*                        PASSFLAG = ON;       /* SET FLAG TO PASS RCD*/ 02873000
         B     @RC00992                                            0994 02874000
@RF00992 OI    PASSFLAG(R2),B'00000001'                            0994 02875000
*                    END;                                  /*@0001VLS*/ 02876000
*                  ELSE                                            0996 02877000
*                    BADTIME = BADTIME + ONE; /* # OF REC OUT OF TIME*/ 02878000
         B     @RC00990                                            0996 02879000
@RF00990 LA    @06,1                                               0996 02880000
         AL    @06,BADTIME                                         0996 02881000
         ST    @06,BADTIME                                         0996 02882000
*                END;                                      /*@0001VLS*/ 02883000
*              ELSE                                                0998 02884000
*                BADDAY = BADDAY + ONE;       /* # OF REC FAILING DAY*/ 02885000
         B     @RC00988                                            0998 02886000
@RF00988 LA    @06,1                                               0998 02887000
         AL    @06,BADDAY                                          0998 02888000
         ST    @06,BADDAY                                          0998 02889000
*            END;                                          /*@0001VLS*/ 02890000
*         ELSE                                                     1000 02891000
*           BADDEV = BADDEV + ONE;        /* # OF DEVICES NOT 8003   */ 02892000
         B     @RC00986                                            1000 02893000
@RF00986 LA    @06,1                                               1000 02894000
         AL    @06,BADDEV                                          1000 02895000
         ST    @06,BADDEV                                          1000 02896000
*        END;                                              /*@0001VLS*/ 02897000
*      ELSE                                                        1002 02898000
*        NUMSHORT = NUMSHORT + ONE;       /* OBR WITH SHORT SW ON    */ 02899000
         B     @RC00984                                            1002 02900000
@RF00984 LA    @06,1                                               1002 02901000
         AL    @06,NUMSHORT                                        1002 02902000
         ST    @06,NUMSHORT                                        1002 02903000
*    END;                                                  /*@0001VLS*/ 02904000
@RC00984 DS    0H                                                  1004 02905000
*  ELSE                                                            1004 02906000
*    BADREC = BADREC + ONE;               /* # REC THAT ARE NOT OBRS */ 02907000
         B     @RC00982                                            1004 02908000
@RF00982 LA    @06,1                                               1004 02909000
         AL    @06,BADREC                                          1004 02910000
         ST    @06,BADREC                                          1004 02911000
*  VALIDCUA = OFF;                                         /*@0001VLS*/ 02912000
@RC00982 NI    VALIDCUA,B'10111111'                                1005 02913000
*  VALIDCPU = OFF;                                         /*@0001VLS*/ 02914000
*  VALIDSER = OFF;                                         /*@0001VLS*/ 02915000
         NI    VALIDCPU,B'11111100'                                1007 02916000
*  VALIDVOL = OFF;                                         /*@0001VLS*/ 02917000
         NI    VALIDVOL,B'11011111'                                1008 02918000
*  IF PASSFLAG = YES THEN                 /* ALLOW RECORD TO CONTINUE*/ 02919000
         TM    PASSFLAG(R2),B'00000001'                            1009 02920000
         BNO   @RF01009                                            1009 02921000
*    DO;                                                   /*@0001VLS*/ 02922000
*      /*                                                    @0001VLS*/ 02923000
*      /* THIS SECTION OF CODE COMPARES THE OBR JUST READ WITH THE   */ 02924000
*      /* PARAMETERS BUILT BY THE PARAM ROUTINE.             @0001VLS*/ 02925000
*      /* IF NO CUA WAS SPECIFIED, THE POINTER TO THE CUA TABLE WILL */ 02926000
*      /* BE ZERO.  IF IT IS NOT, THEN A MAXIMUM OF SIXTEEN SINGLE   */ 02927000
*      /* OR RANGE CUAS MUST BE COMPARED WITH THE CUA IN THE RECORD. */ 02928000
*      /*                                                    @0001VLS*/ 02929000
*      IF CUAPTR ^= ZERO THEN               /* ARE ALL CUA'S WANTED  */ 02930000
         L     @06,CUAPTR(,R2)                                     1011 02931000
         LTR   @06,@06                                             1011 02932000
         BZ    @RF01011                                            1011 02933000
*        DO I = 1 TO CUANUM BY 1 WHILE (VALIDCUA = OFF);   /*@0001VLS*/ 02934000
         LA    @06,1                                               1012 02935000
         STH   @06,I                                               1012 02936000
         B     @DE01012                                            1012 02937000
@DL01012 TM    VALIDCUA,B'01000000'                                1012 02938000
         BNZ   @DC01012                                            1012 02939000
*          IF OCUA2 >= CUA1(I) &            /* DOES THE CUA LIE IN   */ 02940000
*            OCUA2 <= CUA2(I) THEN          /* RANGE SPECIFIED       */ 02941000
         SLA   @06,2                                               1013 02942000
         L     @03,CUAPTR(,R2)                                     1013 02943000
         ST    @06,@TF00001                                        1013 02944000
         ALR   @06,@03                                             1013 02945000
         BCTR  @06,0                                               1013 02946000
         BCTR  @06,0                                               1013 02947000
         CLC   OCUA2(2,R7),CUA1-2(@06)                             1013 02948000
         BL    @RF01013                                            1013 02949000
         AL    @03,@TF00001                                        1013 02950000
         CLC   OCUA2(2,R7),CUA2-4(@03)                             1013 02951000
         BH    @RF01013                                            1013 02952000
*            VALIDCUA = ON;                 /* ACCEPT RECORD @0001VLS*/ 02953000
         OI    VALIDCUA,B'01000000'                                1014 02954000
*        END;                                              /*@0001VLS*/ 02955000
@RF01013 LA    @06,1                                               1015 02956000
         AH    @06,I                                               1015 02957000
         STH   @06,I                                               1015 02958000
@DE01012 L     @03,CUAPTR(,R2)                                     1015 02959000
         CH    @06,CUANUM(,@03)                                    1015 02960000
         BNH   @DL01012                                            1015 02961000
@DC01012 DS    0H                                                  1016 02962000
*      ELSE                                                        1016 02963000
*        VALIDCUA = ON;                     /* ACCEPT RECORD @0001VLS*/ 02964000
         B     @RC01011                                            1016 02965000
@RF01011 OI    VALIDCUA,B'01000000'                                1016 02966000
*      /*                                                    @0001VLS*/ 02967000
*      /* A CHECK IS MADE TO SEE IF A LIST OF VOLIS'S WAS PASSED IN  */ 02968000
*      /* THE PARAMETER LIST.  IF IT WAS, THE VOLID IN THE RECORD IS */ 02969000
*      /* COMPARED TO THE VOLIDS IN THE LIST TO SEE IF THE RECORD    */ 02970000
*      /* SHOULD BE INCLUDED IN THE REPORTS.                 @0001VLS*/ 02971000
*      /*                                                    @0001VLS*/ 02972000
*      IF VOLPTR ^= ZERO THEN               /* WAS A VOLID SPECIFIED */ 02973000
@RC01011 L     @06,VOLPTR(,R2)                                     1017 02974000
         LTR   @06,@06                                             1017 02975000
         BZ    @RF01017                                            1017 02976000
*        DO I = 1 TO VOLNUM BY 1 WHILE(VALIDVOL = OFF);    /*@0001VLS*/ 02977000
         LA    @06,1                                               1018 02978000
         STH   @06,I                                               1018 02979000
         B     @DE01018                                            1018 02980000
@DL01018 TM    VALIDVOL,B'00100000'                                1018 02981000
         BNZ   @DC01018                                            1018 02982000
*          IF VOLVAL(I) = VOLID THEN        /* VOLUME IN LIST        */ 02983000
         MH    @06,@CH00080                                        1019 02984000
         L     @03,VOLPTR(,R2)                                     1019 02985000
         ALR   @03,@06                                             1019 02986000
         AL    @03,@CF01425                                        1019 02987000
         CLC   VOLVAL-2(6,@03),VOLID(R7)                           1019 02988000
         BNE   @RF01019                                            1019 02989000
*            VALIDVOL = ON;                 /* ACCEPT RECORD @0001VLS*/ 02990000
         OI    VALIDVOL,B'00100000'                                1020 02991000
*        END;                                              /*@0001VLS*/ 02992000
@RF01019 LA    @06,1                                               1021 02993000
         AH    @06,I                                               1021 02994000
         STH   @06,I                                               1021 02995000
@DE01018 L     @03,VOLPTR(,R2)                                     1021 02996000
         CH    @06,VOLNUM(,@03)                                    1021 02997000
         BNH   @DL01018                                            1021 02998000
@DC01018 DS    0H                                                  1022 02999000
*      ELSE                                                        1022 03000000
*        VALIDVOL = ON;                     /* ACCEPT RECORD @0001VLS*/ 03001000
         B     @RC01017                                            1022 03002000
@RF01017 OI    VALIDVOL,B'00100000'                                1022 03003000
*      /*                                                    @0001VLS*/ 03004000
*      /* A CHECK IS MADE TO SEE ANY CPUS WERE SPECIFIED.    @0001VLS*/ 03005000
*      /*                                                    @0001VLS*/ 03006000
*      IF CPUPTR ^= ZERO THEN                                      1023 03007000
@RC01017 L     @06,CPUPTR(,R2)                                     1023 03008000
         LTR   @06,@06                                             1023 03009000
         BZ    @RF01023                                            1023 03010000
*        DO I = 1 TO CPUNUM BY 1 WHILE(VALIDCPU = OFF);    /*@0001VLS*/ 03011000
         LA    @06,1                                               1024 03012000
         STH   @06,I                                               1024 03013000
         B     @DE01024                                            1024 03014000
@DL01024 TM    VALIDCPU,B'00000001'                                1024 03015000
         BNZ   @DC01024                                            1024 03016000
*          IF CPUIDENT = CPUVAL(I) THEN                            1025 03017000
         MH    @06,@CH00036                                        1025 03018000
         L     @03,CPUPTR(,R2)                                     1025 03019000
         ALR   @03,@06                                             1025 03020000
         AL    @03,@CF01435                                        1025 03021000
         CLC   CPUIDENT(5,R7),CPUVAL-2(@03)                        1025 03022000
         BNE   @RF01025                                            1025 03023000
*            VALIDCPU = ON;                                /*@0001VLS*/ 03024000
         OI    VALIDCPU,B'00000001'                                1026 03025000
*        END;                                              /*@0001VLS*/ 03026000
@RF01025 LA    @06,1                                               1027 03027000
         AH    @06,I                                               1027 03028000
         STH   @06,I                                               1027 03029000
@DE01024 L     @03,CPUPTR(,R2)                                     1027 03030000
         CH    @06,CPUNUM(,@03)                                    1027 03031000
         BNH   @DL01024                                            1027 03032000
@DC01024 DS    0H                                                  1028 03033000
*      ELSE                                                        1028 03034000
*        VALIDCPU = ON;                                    /*@0001VLS*/ 03035000
         B     @RC01023                                            1028 03036000
@RF01023 OI    VALIDCPU,B'00000001'                                1028 03037000
*      /*                                                    @0001VLS*/ 03038000
*      /* A CHECK IS MADE AGAINST ANY DEVICE SERIALS SPECIFIED.      */ 03039000
*      /*                                                    @0001VLS*/ 03040000
*      IF SERPTR ^= ZERO THEN                                      1029 03041000
@RC01023 L     @06,SERPTR(,R2)                                     1029 03042000
         LTR   @06,@06                                             1029 03043000
         BZ    @RF01029                                            1029 03044000
*        DO I = 1 TO SERNUM BY 1 WHILE(VALIDSER = OFF);    /*@0001VLS*/ 03045000
         LA    @06,1                                               1030 03046000
         STH   @06,I                                               1030 03047000
         B     @DE01030                                            1030 03048000
@DL01030 TM    VALIDSER,B'00000010'                                1030 03049000
         BNZ   @DC01030                                            1030 03050000
*          IF OSER74XX = SERVAL(I) THEN                            1031 03051000
         ALR   @06,@06                                             1031 03052000
         L     @03,SERPTR(,R2)                                     1031 03053000
         ALR   @03,@06                                             1031 03054000
         CLC   OSER74XX(2,R7),SERVAL-2(@03)                        1031 03055000
         BNE   @RF01031                                            1031 03056000
*            VALIDSER = ON;                                /*@0001VLS*/ 03057000
         OI    VALIDSER,B'00000010'                                1032 03058000
*        END;                                              /*@0001VLS*/ 03059000
@RF01031 LA    @06,1                                               1033 03060000
         AH    @06,I                                               1033 03061000
         STH   @06,I                                               1033 03062000
@DE01030 L     @03,SERPTR(,R2)                                     1033 03063000
         CH    @06,SERNUM(,@03)                                    1033 03064000
         BNH   @DL01030                                            1033 03065000
@DC01030 DS    0H                                                  1034 03066000
*      ELSE                                                        1034 03067000
*        VALIDSER = ON;                                    /*@0001VLS*/ 03068000
         B     @RC01029                                            1034 03069000
@RF01029 OI    VALIDSER,B'00000010'                                1034 03070000
*      /*                                                    @0001VLS*/ 03071000
*      IF DEBUG16 = ON THEN    /*IF YES CHECK TO ADD ANY DROPPED REC */ 03072000
@RC01029 TM    DEBUG16(R2),B'10000000'                             1035 03073000
         BNO   @RF01035                                            1035 03074000
*        DO;                                               /*@0001VLS*/ 03075000
*          IF VALIDCUA = OFF THEN                                  1037 03076000
         TM    VALIDCUA,B'01000000'                                1037 03077000
         BNZ   @RF01037                                            1037 03078000
*            BADCUA = BADCUA + ONE; /*NUMBER DROPPED FOR CUA @0001VLS*/ 03079000
         LA    @06,1                                               1038 03080000
         AL    @06,BADCUA                                          1038 03081000
         ST    @06,BADCUA                                          1038 03082000
*          ELSE                                                    1039 03083000
*            IF VALIDVOL = OFF THEN                                1039 03084000
         B     @RC01037                                            1039 03085000
@RF01037 TM    VALIDVOL,B'00100000'                                1039 03086000
         BNZ   @RF01039                                            1039 03087000
*              BADVOL = BADVOL + ONE; /* NUMBER DROPPED FOR VOLID    */ 03088000
         LA    @06,1                                               1040 03089000
         AL    @06,BADVOL                                          1040 03090000
         ST    @06,BADVOL                                          1040 03091000
*            ELSE                                                  1041 03092000
*              IF VALIDSER = OFF THEN                              1041 03093000
         B     @RC01039                                            1041 03094000
@RF01039 TM    VALIDSER,B'00000010'                                1041 03095000
         BNZ   @RF01041                                            1041 03096000
*                BADSER = BADSER + ONE;  /*INCORRECT SERIAL NUMBER   */ 03097000
         LA    @06,1                                               1042 03098000
         AL    @06,BADSER                                          1042 03099000
         ST    @06,BADSER                                          1042 03100000
*              ELSE                                                1043 03101000
*                IF VALIDCPU =  OFF THEN                           1043 03102000
         B     @RC01041                                            1043 03103000
@RF01041 TM    VALIDCPU,B'00000001'                                1043 03104000
         BNZ   @RF01043                                            1043 03105000
*                  BADCPU = BADCPU + ONE; /* CPU DOES NOT MATCH PARMS*/ 03106000
         LA    @06,1                                               1044 03107000
         AL    @06,BADCPU                                          1044 03108000
         ST    @06,BADCPU                                          1044 03109000
*        END;                                              /*@0001VLS*/ 03110000
*    END;                                                  /*@0001VLS*/ 03111000
*END;                                                      /*@0001VLS*/ 03112000
@EL00029 DS    0H                                                  1047 03113000
@EF00029 DS    0H                                                  1047 03114000
@ER00029 LM    @14,@12,12(@13)                                     1047 03115000
         BR    @14                                                 1047 03116000
*/*                                                          @0001VLS*/ 03117000
*/* AT END OF FILE THE PART OF THE CONTROL TABLE THAT HAS NOT BEEN   */ 03118000
*/* USED IS FREED AND THEN CONTROL IS PASSED TO SORT THE TABLE.      */ 03119000
*/*                                                          @0001VLS*/ 03120000
*ENDOFILE: PROC;                                           /*@0001VLS*/ 03121000
ENDOFILE STM   @14,@12,@SA00030                                    1048 03122000
* IF CURRPTR < TABPTR THEN               /* NOT ENOUGH TABLE SPACE   */ 03123000
         CLC   CURRPTR(4),TABPTR                                   1049 03124000
         BNL   @RF01049                                            1049 03125000
*   DO;                                                    /*@0001VLS*/ 03126000
*     CALL IFCMSG(53,ADDR(MSGADDR));                       /*@0001VLS*/ 03127000
         LA    @06,MSGADDR                                         1051 03128000
         ST    @06,@AFTEMPS+4                                      1051 03129000
         L     @15,ADIFCMSG(,R2)                                   1051 03130000
         LA    @01,@AL01051                                        1051 03131000
         BALR  @14,@15                                             1051 03132000
*     CALL PRINTIT;                                        /*@0001VLS*/ 03133000
         BAL   @14,PRINTIT                                         1052 03134000
*   END;                                                   /*@0001VLS*/ 03135000
* CURRPTR = CURRPTR + ELEVEN;            /* PUT WITHIN BOUNDS        */ 03136000
@RF01049 LA    @06,11                                              1054 03137000
         AL    @06,CURRPTR                                         1054 03138000
         ST    @06,CURRPTR                                         1054 03139000
* CALL IFCMSG(54,ADDR(MSGADDR));                           /*@0001VLS*/ 03140000
         LA    @06,MSGADDR                                         1055 03141000
         ST    @06,@AFTEMPS+4                                      1055 03142000
         L     @15,ADIFCMSG(,R2)                                   1055 03143000
         LA    @01,@AL01055                                        1055 03144000
         BALR  @14,@15                                             1055 03145000
* CVD (RECCOUNT,TEMPAREA(1:8));          /* CONVERT TO DECIMAL       */ 03146000
         LH    @06,RECCOUNT                                        1056 03147000
         CVD   @06,TEMPAREA                                        1056 03148000
* UNPK (NUMRECP,TEMPAREA(1:8));          /* PRINTABLE CHARACTERS     */ 03149000
         UNPK  NUMRECP(7),TEMPAREA(8)                              1057 03150000
* NUMRECP(7) = NUMRECP(7) | FOXZERO;                       /*@0001VLS*/ 03151000
         OI    NUMRECP+6,X'F0'                                     1058 03152000
* I = 1;                                                   /*@0001VLS*/ 03153000
         MVC   I(2),@CH00055                                       1059 03154000
* DO UNTIL (I > 6 | NUMRECP(I) ^= FOXZERO);                /*@0001VLS*/ 03155000
@DL01060 DS    0H                                                  1061 03156000
*   NUMRECP(I) = BLANK;                  /* SET LEADING ZERO TO BLANK*/ 03157000
         LH    @06,I                                               1061 03158000
         LA    @03,NUMRECP-1(@06)                                  1061 03159000
         MVI   0(@03),C' '                                         1061 03160000
*   I = I + 1;                                             /*@0001VLS*/ 03161000
         LA    @06,1(,@06)                                         1062 03162000
         STH   @06,I                                               1062 03163000
* END;                                                     /*@0001VLS*/ 03164000
@DE01060 LH    @06,I                                               1063 03165000
         C     @06,@CF00080                                        1063 03166000
         BH    @DC01060                                            1063 03167000
         LA    @03,NUMRECP-1(@06)                                  1063 03168000
         CLI   0(@03),X'F0'                                        1063 03169000
         BE    @DL01060                                            1063 03170000
@DC01060 DS    0H                                                  1064 03171000
* CALL PRINTIT;                                            /*@0001VLS*/ 03172000
         BAL   @14,PRINTIT                                         1064 03173000
* FREESIZE = (CURRPTR - TABPTR);         /* UNUSED SPACE     @0001VLS*/ 03174000
         L     @06,TABPTR                                          1065 03175000
         L     @03,CURRPTR                                         1065 03176000
         SLR   @03,@06                                             1065 03177000
         ST    @03,FREESIZE                                        1065 03178000
* IF FREESIZE > EIGHT THEN               /* OUTPUT MESSAGE   @0001VLS*/ 03179000
         C     @03,@CF00066                                        1066 03180000
         BNH   @RF01066                                            1066 03181000
*   DO;                                                    /*@0001VLS*/ 03182000
*     FREESIZE = FREESIZE & 'FFFFF8'X;   /* DOUBLE WORD AMOUNT       */ 03183000
         N     @03,@CF01376                                        1068 03184000
         ST    @03,FREESIZE                                        1068 03185000
*     RESPECIFY (R0,R1) RESTRICTED;                        /*@0001VLS*/ 03186000
*     R0 = FREESIZE;                                       /*@0001VLS*/ 03187000
         LR    R0,@03                                              1070 03188000
*     R1 = TABPTR;                                         /*@0001VLS*/ 03189000
         LR    R1,@06                                              1071 03190000
*     GEN(FREEMAIN R,LV=(R0),A=(R1));                      /*@0001VLS*/ 03191000
         FREEMAIN R,LV=(R0),A=(R1)                                      03192000
*     RESPECIFY (R0,R1) UNRESTRICTED;                      /*@0001VLS*/ 03193000
*   END;                                                   /*@0001VLS*/ 03194000
* TABPTR = CURRPTR;                      /* SAVE ADDRESS OF NEW TABLE*/ 03195000
@RF01066 L     @06,CURRPTR                                         1075 03196000
         ST    @06,TABPTR                                          1075 03197000
* SORTNUM = NUMENT;                      /* STORE THE NUMBER OF RCDS */ 03198000
         L     @03,NUMENT                                          1076 03199000
         ST    @03,SORTNUM(,R2)                                    1076 03200000
* SORTADR = TABPTR;                      /* LOCATION OF SORT TABLE   */ 03201000
         ST    @06,SORTADR(,R2)                                    1077 03202000
* IF PHIST = ON THEN                     /* HISTORY INPUT    @0001VLS*/ 03203000
         TM    PHIST(R2),B'00100000'                               1078 03204000
         BNO   @RF01078                                            1078 03205000
*   DO;                                                    /*@0001VLS*/ 03206000
*     /*                                                     @0001VLS*/ 03207000
*     /* INPUT DATA SETS MUST BE CLOSED IF HISTORY IS INPUT  @0001VLS*/ 03208000
*     /*                                                     @0001VLS*/ 03209000
*     CLOSEIO = CLOSEIO && CLOSEIO;                        /*@0001VLS*/ 03210000
         XC    CLOSEIO(2,R2),CLOSEIO(R2)                           1080 03211000
*     IF PLOGREC = ON THEN                                         1081 03212000
         TM    PLOGREC(R2),B'00000010'                             1081 03213000
         BNO   @RF01081                                            1081 03214000
*       CSERLOG = ON;                                      /*@0001VLS*/ 03215000
         OI    CSERLOG(R2),B'00100000'                             1082 03216000
*     CDRCTWRK = ON;                                       /*@0001VLS*/ 03217000
@RF01081 OI    CDRCTWRK(R2),B'00000010'                            1083 03218000
*     CALL IOHND (IOCLOSE);                                /*@0001VLS*/ 03219000
         L     @15,ADIOHND(,R2)                                    1084 03220000
         LA    @01,@AL01084                                        1084 03221000
         BALR  @14,@15                                             1084 03222000
*   END;                                                   /*@0001VLS*/ 03223000
*END;                                                      /*@0001VLS*/ 03224000
@EL00030 DS    0H                                                  1086 03225000
@EF00030 DS    0H                                                  1086 03226000
@ER00030 LM    @14,@12,@SA00030                                    1086 03227000
         BR    @14                                                 1086 03228000
@PB00030 DS    0H                                                  1087 03229000
*/*                                                          @0001VLS*/ 03230000
*/* INITIALLY THE ADDRESS OF THE PARAMETER LIST IS SAVED.  NEXT AN    * 03231000
*/* AREA OF CORE IS GOTTEN FOR THE CONTROL TABLE.            @0001VLS*/ 03232000
*/*                                                          @0001VLS*/ 03233000
*  SAVEPARM = R2;                     /* SAVE ADDR TO PARM TABLE     */ 03234000
         ST    R2,SAVEPARM                                         1087 03235000
*  RESPECIFY (R12,R15) RESTRICTED;                         /*@0001VLS*/ 03236000
*  IF DEBUG4 = ON THEN                /* DUMP PGM NAMES AND DATES    */ 03237000
         TM    DEBUG4(R2),B'00001000'                              1089 03238000
         BNO   @RF01089                                            1089 03239000
*    DO R15 = R12 - 27;                                    /*@0001VLS*/ 03240000
         LR    R15,R12                                             1090 03241000
         SL    R15,@CF01377                                        1090 03242000
*      GEN(MVC  MSGADDR(16),0(R15));                       /*@0001VLS*/ 03243000
         MVC  MSGADDR(16),0(R15)                                        03244000
*      CALL PRINTIT;                                       /*@0001VLS*/ 03245000
         BAL   @14,PRINTIT                                         1092 03246000
*    END;                                                  /*@0001VLS*/ 03247000
*  RESPECIFY (R0) RESTRICTED;                              /*@0001VLS*/ 03248000
@RF01089 DS    0H                                                  1095 03249000
*  R0 = TABSIZE / FOUR;               /* GET SIZE FOR TABLE  @0001VLS*/ 03250000
         L     R0,TABSIZE(,R2)                                     1095 03251000
         SRDA  R0,32                                               1095 03252000
         D     R0,@CF00064                                         1095 03253000
         LR    R0,@01                                              1095 03254000
*  GEN(GETMAIN EC,LV=(0),A=TABPTR GET SPACE FOR TABLE);    /*@0001VLS*/ 03255000
         GETMAIN EC,LV=(0),A=TABPTR GET SPACE FOR TABLE                 03256000
*  RETCODE = R15;                                          /*@0001VLS*/ 03257000
         ST    R15,RETCODE                                         1097 03258000
*  RESPECIFY (R0,R12,R15) UNRESTRICTED;                    /*@0001VLS*/ 03259000
*  IF RETCODE = ZERO THEN             /* IF GOOD RET CODE, CONTINUE  */ 03260000
         L     @06,RETCODE                                         1099 03261000
         LTR   @06,@06                                             1099 03262000
         BNZ   @RF01099                                            1099 03263000
*    DO;                                                   /*@0001VLS*/ 03264000
*      PACK(TEMPAREA(1:8),RDTHRSH);   /* CONVERT THE THRESHOLD VALUE */ 03265000
         PACK  TEMPAREA(8),RDTHRSH(3,R2)                           1101 03266000
*      CVB(CURRPTR,TEMPAREA(1:8));    /* TO A VALUE SIMILAR TO THAT  */ 03267000
         CVB   @06,TEMPAREA                                        1102 03268000
         ST    @06,CURRPTR                                         1102 03269000
*      READS = CURRPTR;               /* IN THE RECORD       @0001VLS*/ 03270000
         STC   @06,READS                                           1103 03271000
*      PACK(TEMPAREA(1:8),WRTHRSH);   /* CONVERT THE THRESHOLD VALUE */ 03272000
         PACK  TEMPAREA(8),WRTHRSH(3,R2)                           1104 03273000
*      CVB(CURRPTR,TEMPAREA(1:8));    /* TO A VALUE SIMILAR TO THAT  */ 03274000
         CVB   @06,TEMPAREA                                        1105 03275000
         ST    @06,CURRPTR                                         1105 03276000
*      WRITES = CURRPTR;              /* IN THE RECORD       @0001VLS*/ 03277000
         STC   @06,WRITES                                          1106 03278000
*      CURRPTR = TABPTR + (TABSIZE / FOUR) - 2;            /*@0001VLS*/ 03279000
         L     @00,TABSIZE(,R2)                                    1107 03280000
         SRDA  @00,32                                              1107 03281000
         D     @00,@CF00064                                        1107 03282000
         AL    @01,TABPTR                                          1107 03283000
         BCTR  @01,0                                               1107 03284000
         BCTR  @01,0                                               1107 03285000
         ST    @01,CURRPTR                                         1107 03286000
*      EOTABLE = EOT;                 /* PUT IN END OF TABLE INDICAT */ 03287000
         MVC   EOTABLE(2,@01),@CB00261                             1108 03288000
*      CURRPTR = CURRPTR - ELEVEN;                         /*@0001VLS*/ 03289000
         SL    @01,@CF00034                                        1109 03290000
         ST    @01,CURRPTR                                         1109 03291000
*      RESPECIFY (R15) RESTRICTED;                         /*@0001VLS*/ 03292000
*      CALL IOHND(READSEQ);           /* GET AN INPUT RECORD @0001VLS*/ 03293000
         L     @15,ADIOHND(,R2)                                    1111 03294000
         LA    @01,@AL01111                                        1111 03295000
         BALR  @14,@15                                             1111 03296000
*      RETCODE = R15;                                      /*@0001VLS*/ 03297000
         ST    R15,RETCODE                                         1112 03298000
*      RESPECIFY (R15) UNRESTRICTED;                       /*@0001VLS*/ 03299000
*      DO WHILE (CURRPTR >= TABPTR & RETCODE = ZERO);      /*@0001VLS*/ 03300000
         B     @DE01114                                            1114 03301000
@DL01114 DS    0H                                                  1115 03302000
*        CALL FILTER;                                      /*@0001VLS*/ 03303000
         BAL   @14,FILTER                                          1115 03304000
*        IF VALIDCUA = ON & VALIDVOL = ON & VALIDCPU = ON &        1116 03305000
*          VALIDSER = ON THEN                                      1116 03306000
         TM    VALIDCUA,B'01100000'                                1116 03307000
         BNO   @RF01116                                            1116 03308000
         TM    VALIDCPU,B'00000011'                                1116 03309000
         BNO   @RF01116                                            1116 03310000
*          CALL TABENT;                      /* MAKE A TABLE ENTRY   */ 03311000
         BAL   @14,TABENT                                          1117 03312000
*        IF RETCODE = ZERO THEN                                    1118 03313000
@RF01116 L     @06,RETCODE                                         1118 03314000
         LTR   @06,@06                                             1118 03315000
         BNZ   @RF01118                                            1118 03316000
*          DO;                                             /*@0001VLS*/ 03317000
*            RESPECIFY (R15) RESTRICTED;                   /*@0001VLS*/ 03318000
*            CALL IOHND (READSEQ);            /* GET ANOTHER RECORD  */ 03319000
         L     @15,ADIOHND(,R2)                                    1121 03320000
         LA    @01,@AL01121                                        1121 03321000
         BALR  @14,@15                                             1121 03322000
*            RETCODE = R15;                                /*@0001VLS*/ 03323000
         ST    R15,RETCODE                                         1122 03324000
*            RESPECIFY (R15) UNRESTRICTED;                 /*@0001VLS*/ 03325000
*          END;                                            /*@0001VLS*/ 03326000
*      END;                                                /*@0001VLS*/ 03327000
@RF01118 DS    0H                                                  1125 03328000
@DE01114 CLC   CURRPTR(4),TABPTR                                   1125 03329000
         BL    @DC01114                                            1125 03330000
         L     @06,RETCODE                                         1125 03331000
         LTR   @06,@06                                             1125 03332000
         BZ    @DL01114                                            1125 03333000
@DC01114 DS    0H                                                  1126 03334000
*      CALL ENDOFILE;                                      /*@0001VLS*/ 03335000
         BAL   @14,ENDOFILE                                        1126 03336000
*      /*                                                    @0001VLS*/ 03337000
*      /* WHEN END OF FILE HAS BEEN REACHED OR THE CONTROL TABLE IS  */ 03338000
*      /* FULL, THE ENTRIES ARE SORTED FOR PROCESSING.  THE COUNT OF */ 03339000
*      /* RECORDS AND ADDRESS OF THE FIRST ENTRY IS SAVED FOR SECOND */ 03340000
*      /* PASS.                                              @0001VLS*/ 03341000
*      /*                                                    @0001VLS*/ 03342000
*      IF RECCOUNT ^= ZERO THEN       /* ARE THERE ANY VALID RECORDS */ 03343000
         LH    @06,RECCOUNT                                        1127 03344000
         LTR   @06,@06                                             1127 03345000
         BZ    @RF01127                                            1127 03346000
*        DO;                                               /*@0001VLS*/ 03347000
*          IF DEBUG16 = ON THEN       /* DO THEY WANT THE DEBUG CTS  */ 03348000
         TM    DEBUG16(R2),B'10000000'                             1129 03349000
         BNO   @RF01129                                            1129 03350000
*            CALL BUGDATA;            /* GO PRINT THE COUNTS @0001VLS*/ 03351000
         BAL   @14,BUGDATA                                         1130 03352000
*          IF NUMENT > ONE THEN                                    1131 03353000
@RF01129 L     @06,NUMENT                                          1131 03354000
         C     @06,@CF00055                                        1131 03355000
         BNH   @RF01131                                            1131 03356000
*            CALL SORT;               /* SORT FOR CUA        @0001VLS*/ 03357000
         BAL   @14,SORT                                            1132 03358000
*          IF DEBUG11 = ON THEN       /* ABEND REQUESTED?    @0001VLS*/ 03359000
@RF01131 TM    DEBUG11(R2),B'00010000'                             1133 03360000
         BNO   @RF01133                                            1133 03361000
*            GEN (ABEND 520,DUMP);                         /*@0001VLS*/ 03362000
         ABEND 520,DUMP                                                 03363000
*          CALL PRINTCUA;             /* OUTPUT THE CUA STATISTICS   */ 03364000
@RF01133 BAL   @14,PRINTCUA                                        1135 03365000
*          SORTFLG = ON;                                   /*@0001VLS*/ 03366000
         OI    SORTFLG,B'10000000'                                 1136 03367000
*        DEBUG27 = OFF;                                    /*@0001VLS*/ 03368000
         NI    DEBUG27(R2),B'11101111'                             1137 03369000
*          CURRPTR = TABPTR;                               /*@0001VLS*/ 03370000
         L     @06,TABPTR                                          1138 03371000
         ST    @06,CURRPTR                                         1138 03372000
*          IF NUMENT > ONE THEN                                    1139 03373000
         L     @06,NUMENT                                          1139 03374000
         C     @06,@CF00055                                        1139 03375000
         BNH   @RF01139                                            1139 03376000
*            CALL SORT;               /* SORT FOR VOLUME ID  @0001VLS*/ 03377000
         BAL   @14,SORT                                            1140 03378000
*          CALL OUTVOLID;             /* OUTPUT THE VOLUME SECTION   */ 03379000
@RF01139 BAL   @14,OUTVOLID                                        1141 03380000
*        END;                                              /*@0001VLS*/ 03381000
*    END;                                                  /*@0001VLS*/ 03382000
*  ELSE                                                            1144 03383000
*    DO;                                                   /*@0001VLS*/ 03384000
         B     @RC01099                                            1144 03385000
@RF01099 DS    0H                                                  1145 03386000
*      CALL IFCMSG(55,ADDR(MSGADDR)); /* MSG FOR GETMAIN FAIL        */ 03387000
         LA    @06,MSGADDR                                         1145 03388000
         ST    @06,@AFTEMPS+8                                      1145 03389000
         L     @15,ADIFCMSG(,R2)                                   1145 03390000
         LA    @01,@AL01145                                        1145 03391000
         BALR  @14,@15                                             1145 03392000
*      CALL PRINTIT;                  /* PRINT THE ERROR OUT @0001VLS*/ 03393000
         BAL   @14,PRINTIT                                         1146 03394000
*    END;                                                  /*@0001VLS*/ 03395000
*  IF DEBUG12 = ON THEN               /* ABEND REQUESTED?    @0001VLS*/ 03396000
@RC01099 TM    DEBUG12(R2),B'00001000'                             1148 03397000
         BNO   @RF01148                                            1148 03398000
*    GEN(ABEND 540,DUMP);                                  /*@0001VLS*/ 03399000
         ABEND 540,DUMP                                                 03400000
*  RETURN;                                                 /*@0001VLS*/ 03401000
@EL00001 L     @13,4(,@13)                                         1150 03402000
@EF00001 DS    0H                                                  1150 03403000
@ER00001 L     @14,12(,@13)                                        1150 03404000
         LM    @00,@12,20(@13)                                     1150 03405000
         BR    @14                                                 1150 03406000
* END                                                      /*@0001VLS*/ 03407000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      * 03408000
*/*%INCLUDE SYSLIB  (COMTABLE)                                        * 03409000
*;                                                                 1151 03410000
         B     @EL00001                                            1151 03411000
@DATA    DS    0H                                                       03412000
@CH00085 DC    H'9'                                                     03413000
@CH01401 DC    H'48'                                                    03414000
         DS    0F                                                       03415000
@AL00185 DC    A(TEMPAREA+1)           LIST WITH   3 ARGUMENT(S)        03416000
         DC    A(CUASH2C)                                               03417000
@AL00651 DC    A(@CF00055)             LIST WITH   1 ARGUMENT(S)        03418000
@AL00289 DC    A(PCCW)                 LIST WITH   2 ARGUMENT(S)        03419000
         DC    A(@CF00066)                                              03420000
@AL00290 DC    A(PCSW)                 LIST WITH   2 ARGUMENT(S)        03421000
         DC    A(@CF00064)                                              03422000
@AL00335 EQU   *                       LIST WITH   2 ARGUMENT(S)        03423000
@AL00583 DC    A(TEMPAREA)             LIST WITH   2 ARGUMENT(S)        03424000
         DC    A(@CF00080)                                              03425000
@AL00339 EQU   *                       LIST WITH   2 ARGUMENT(S)        03426000
@AL00586 DC    A(TEMPAREA)             LIST WITH   2 ARGUMENT(S)        03427000
         DC    A(@CF00066)                                              03428000
@AL00368 DC    A(I)                    LIST WITH   2 ARGUMENT(S)        03429000
         DC    A(WRTGVRC)                                               03430000
@AL00370 DC    A(I)                    LIST WITH   2 ARGUMENT(S)        03431000
         DC    A(ERLYBOR)                                               03432000
@AL00372 DC    A(I)                    LIST WITH   2 ARGUMENT(S)        03433000
         DC    A(OVELCHG)                                               03434000
@AL00378 DC    A(I)                    LIST WITH   2 ARGUMENT(S)        03435000
         DC    A(SKEWERR)                                               03436000
@AL00379 DC    A(MCPU)                 LIST WITH   2 ARGUMENT(S)        03437000
         DC    A(@CF00074)                                              03438000
@AL00380 DC    A(SERCPU)               LIST WITH   2 ARGUMENT(S)        03439000
         DC    A(@CF00076)                                              03440000
@AL00493 DC    A(TEMPAREA+18)          LIST WITH   3 ARGUMENT(S)        03441000
@AL00266 EQU   *                       LIST WITH   2 ARGUMENT(S)        03442000
@AL00330 EQU   *                       LIST WITH   2 ARGUMENT(S)        03443000
@AL00592 DC    A(TEMPAREA)             LIST WITH   2 ARGUMENT(S)        03444000
         DC    A(@CF00074)                                              03445000
@AL00528 DC    A(SYSRDS)               LIST WITH   3 ARGUMENT(S)        03446000
         DC    A(SYSSIOS)                                               03447000
         DC    A(READPERC)                                              03448000
@AL00529 DC    A(SYSRTS)               LIST WITH   3 ARGUMENT(S)        03449000
         DC    A(SYSSIOS)                                               03450000
         DC    A(RITEPERC)                                              03451000
@AL00530 DC    A(SYSSIOS)              LIST WITH   2 ARGUMENT(S)        03452000
         DC    A(SUMSIOS)                                               03453000
@AL00531 DC    A(SYSMNTS)              LIST WITH   2 ARGUMENT(S)        03454000
         DC    A(SUMMNTS)                                               03455000
@AL00532 DC    A(SYSRDS)               LIST WITH   2 ARGUMENT(S)        03456000
         DC    A(SUMREAD)                                               03457000
@AL00533 DC    A(SYSRTS)               LIST WITH   2 ARGUMENT(S)        03458000
         DC    A(SUMWRITE)                                              03459000
@AL00548 DC    A(LVOLDATE)             LIST WITH   3 ARGUMENT(S)        03460000
         DC    A(TEMPAREA)                                              03461000
         DC    A(@CF00076)                                              03462000
@AL00550 DC    A(HVOLDATE)             LIST WITH   3 ARGUMENT(S)        03463000
@AL00194 EQU   *                       LIST WITH   2 ARGUMENT(S)        03464000
@AL00196 EQU   *                       LIST WITH   2 ARGUMENT(S)        03465000
@AL00212 EQU   *                       LIST WITH   2 ARGUMENT(S)        03466000
@AL00214 EQU   *                       LIST WITH   2 ARGUMENT(S)        03467000
@AL00497 EQU   *                       LIST WITH   2 ARGUMENT(S)        03468000
@AL00499 DC    A(TEMPAREA)             LIST WITH   2 ARGUMENT(S)        03469000
         DC    A(@CF00076)                                              03470000
@AL00565 EQU   *                       LIST WITH   1 ARGUMENT(S)        03471000
@AL00722 DC    A(@CF00080+2)           LIST WITH   1 ARGUMENT(S)        03472000
@AL00627 DC    A(VCPUMOD)              LIST WITH   2 ARGUMENT(S)        03473000
@AL00656 DC    A(@CF00074)             LIST WITH   1 ARGUMENT(S)        03474000
@AL00628 DC    A(VCPUSER)              LIST WITH   2 ARGUMENT(S)        03475000
         DC    A(@CF00076)                                              03476000
@AL00664 DC    A(@CF00036+2)           LIST WITH   1 ARGUMENT(S)        03477000
@AL00794 DC    A(@CF01299)             LIST WITH   2 ARGUMENT(S)        03478000
         DC    A(@AFTEMPS)                                              03479000
@AL00802 DC    A(TOTREC)               LIST WITH   2 ARGUMENT(S)        03480000
         DC    A(BUG10)                                                 03481000
@AL00805 DC    A(OBRCT)                LIST WITH   2 ARGUMENT(S)        03482000
         DC    A(BUG20)                                                 03483000
@AL00808 DC    A(NUMSHORT)             LIST WITH   2 ARGUMENT(S)        03484000
         DC    A(BUG30)                                                 03485000
@AL00811 DC    A(BADDEV)               LIST WITH   2 ARGUMENT(S)        03486000
         DC    A(BUG31)                                                 03487000
@AL00814 DC    A(BADDAY)               LIST WITH   2 ARGUMENT(S)        03488000
         DC    A(BUG40)                                                 03489000
@AL00817 DC    A(BADTIME)              LIST WITH   2 ARGUMENT(S)        03490000
         DC    A(BUG50)                                                 03491000
@AL00820 DC    A(DROP3RD)              LIST WITH   2 ARGUMENT(S)        03492000
         DC    A(BUG60)                                                 03493000
@AL00823 DC    A(BADCPU)               LIST WITH   2 ARGUMENT(S)        03494000
         DC    A(BUG70)                                                 03495000
@AL00826 DC    A(BADCUA)               LIST WITH   2 ARGUMENT(S)        03496000
         DC    A(BUG80)                                                 03497000
@AL00829 DC    A(BADVOL)               LIST WITH   2 ARGUMENT(S)        03498000
         DC    A(BUG90)                                                 03499000
@AL00832 DC    A(BADSER)               LIST WITH   2 ARGUMENT(S)        03500000
         DC    A(BUG100)                                                03501000
@AL00835 DC    A(SHAREMOD)             LIST WITH   2 ARGUMENT(S)        03502000
         DC    A(BUG110)                                                03503000
@AL00838 DC    A(SHARECU)              LIST WITH   2 ARGUMENT(S)        03504000
         DC    A(BUG120)                                                03505000
@AL00841 DC    A(EXCTHRES)             LIST WITH   2 ARGUMENT(S)        03506000
         DC    A(BUG130)                                                03507000
@AL00844 DC    A(EXCTHRES+4)           LIST WITH   2 ARGUMENT(S)        03508000
         DC    A(BUG140)                                                03509000
@AL00884 DC    A(MSGADDR)              LIST WITH   2 ARGUMENT(S)        03510000
         DC    A(@CF00034)                                              03511000
@AL00934 DC    A(@CF00074+2)           LIST WITH   1 ARGUMENT(S)        03512000
@AL01051 DC    A(@CF01299)             LIST WITH   2 ARGUMENT(S)        03513000
         DC    A(@AFTEMPS+4)                                            03514000
@AL01055 DC    A(@CF01375)             LIST WITH   2 ARGUMENT(S)        03515000
         DC    A(@AFTEMPS+4)                                            03516000
@AL01084 DC    A(@CF00082+2)           LIST WITH   1 ARGUMENT(S)        03517000
@AL01111 EQU   *                       LIST WITH   1 ARGUMENT(S)        03518000
@AL01121 DC    A(@CF00076+2)           LIST WITH   1 ARGUMENT(S)        03519000
@AL01145 DC    A(@CF01380)             LIST WITH   2 ARGUMENT(S)        03520000
         DC    A(@AFTEMPS+8)                                            03521000
         DS    0F                                                       03522000
@SA00001 DS    18F                                                      03523000
@SA00002 DS    15F                                                      03524000
@SA00021 DS    15F                                                      03525000
@SA00003 DS    15F                                                      03526000
@SA00006 DS    15F                                                      03527000
@SA00026 DS    15F                                                      03528000
@PC00027 DS    3F                                                       03529000
@SA00004 DS    15F                                                      03530000
@SA00009 DS    15F                                                      03531000
@SA00005 DS    15F                                                      03532000
@SA00007 DS    15F                                                      03533000
@SA00023 DS    15F                                                      03534000
@PC00023 DS    2F                                                       03535000
@SA00008 DS    15F                                                      03536000
@SA00022 DS    15F                                                      03537000
@PC00022 DS    2F                                                       03538000
@SA00010 DS    15F                                                      03539000
@SA00017 DS    15F                                                      03540000
@SA00011 DS    15F                                                      03541000
@SA00028 DS    15F                                                      03542000
@PC00028 DS    3F                                                       03543000
@PC00024 DS    2F                                                       03544000
@PC00025 DS    2F                                                       03545000
@SA00012 DS    15F                                                      03546000
@SA00013 DS    15F                                                      03547000
@SA00015 DS    15F                                                      03548000
@SA00014 DS    15F                                                      03549000
@PC00014 DS    1F                                                       03550000
@SA00018 DS    15F                                                      03551000
@SA00016 DS    15F                                                      03552000
@SA00019 DS    15F                                                      03553000
@SA00030 DS    15F                                                      03554000
@AL00001 DS    3A                                                       03555000
@TF00001 DS    F                                                        03556000
@AFTEMPS DS    3F                                                       03557000
         DS    0F                                                       03558000
@CF00055 DC    F'1'                                                     03559000
@CH00055 EQU   @CF00055+2                                               03560000
@CF00074 DC    F'2'                                                     03561000
@CF00076 DC    F'3'                                                     03562000
@CH00076 EQU   @CF00076+2                                               03563000
@CF00064 DC    F'4'                                                     03564000
@CF00036 DC    F'5'                                                     03565000
@CH00036 EQU   @CF00036+2                                               03566000
@CF00080 DC    F'6'                                                     03567000
@CH00080 EQU   @CF00080+2                                               03568000
@CF00082 DC    F'7'                                                     03569000
@CF00066 DC    F'8'                                                     03570000
@CF00034 DC    F'11'                                                    03571000
@CH00034 EQU   @CF00034+2                                               03572000
@CF00033 DC    F'12'                                                    03573000
@CF00088 DC    F'16'                                                    03574000
@CF00227 DC    F'24'                                                    03575000
@CF01377 DC    F'27'                                                    03576000
@CF01299 DC    F'53'                                                    03577000
@CF01375 DC    F'54'                                                    03578000
@CF01380 DC    F'55'                                                    03579000
@CF01366 DC    F'10000'                                                 03580000
@CF01365 DC    F'20000000'                                              03581000
@CF01417 DC    F'-32'                                                   03582000
@CF01418 DC    F'-28'                                                   03583000
@CF01421 DC    F'-24'                                                   03584000
@CF01419 DC    F'-20'                                                   03585000
@CF01422 DC    F'-16'                                                   03586000
@CF01420 DC    F'-12'                                                   03587000
@CF01430 DC    F'-11'                                                   03588000
@CF01429 DC    F'-9'                                                    03589000
@CF01423 DC    F'-8'                                                    03590000
@CF01424 DC    F'-6'                                                    03591000
@CF01425 DC    F'-4'                                                    03592000
@CF01435 DC    F'-3'                                                    03593000
@CF01376 DC    XL4'FFFFF8'                                              03594000
         DS    0D                                                       03595000
MYLINCT  DC    F'0'                                                     03596000
SAVEPARM DS    F                                                        03597000
CURRPTR  DS    A                                                        03598000
TABPTR   DS    A                                                        03599000
RETCODE  DS    F                                                        03600000
FREESIZE DC    F'8192'                                                  03601000
TOTREC   DC    F'0'                                                     03602000
OBRCT    DC    F'0'                                                     03603000
NUMSHORT DC    F'0'                                                     03604000
BADDEV   DC    F'0'                                                     03605000
BADDAY   DC    F'0'                                                     03606000
BADTIME  DC    F'0'                                                     03607000
DROP3RD  DC    F'0'                                                     03608000
BADCPU   DC    F'0'                                                     03609000
BADCUA   DC    F'0'                                                     03610000
BADVOL   DC    F'0'                                                     03611000
BADSER   DC    F'0'                                                     03612000
BADREC   DC    F'0'                                                     03613000
SHAREMOD DC    F'0'                                                     03614000
SHARECU  DC    F'0'                                                     03615000
Z        DC    F'0'                                                     03616000
L        DC    F'0'                                                     03617000
P        DC    F'0'                                                     03618000
X        DC    F'0'                                                     03619000
TOTALPTR DC    A(0)                                                     03620000
SUMPTR   DC    A(0)                                                     03621000
NUMENT   DC    F'0'                                                     03622000
SYSSIOS  DS    F                                                        03623000
SYSRDS   DS    F                                                        03624000
SYSRTS   DS    F                                                        03625000
SYSMNTS  DS    F                                                        03626000
SRTCONT  DC    F'0'                                                     03627000
CUAINDEX DS    F                                                        03628000
LHDATPTR DC    A(0)                                                     03629000
DATEPTR  DC    A(0)                                                     03630000
RECCOUNT DC    H'0'                                                     03631000
I        DS    H                                                        03632000
@TS00001 DS    CL1                                                      03633000
@CC00500 DC    C'TOTALS'                                                03634000
@CC00483 DC    C' N/A '                                                 03635000
@CC00502 DC    C'100+ '                                                 03636000
@CC00477 DC    C' 800'                                                  03637000
@CC00479 DC    C'1600'                                                  03638000
@CC00481 DC    C'6250'                                                  03639000
@CB00208 DC    X'0000'                                                  03640000
@CB00261 DC    X'FFFF'                                                  03641000
@CB00463 DC    X'0FFF'                                                  03642000
@CB00465 DC    X'000F'                                                  03643000
@CB00498 DC    X'8003'                                                  03644000
         DS    CL1                                                      03645000
DBLWORD  DS    CL8                                                      03646000
WORK     DS    CL8                                                      03647000
RECCPU   DC    CL3' '                                                   03648000
RECCUA   DC    CL2' '                                                   03649000
READS    DS    CL1                                                      03650000
WRITES   DS    CL1                                                      03651000
SWITCH   DC    X'8000'                                                  03652000
         ORG   SWITCH                                                   03653000
SORTFLG  DS    BL1                                                      03654000
SWITCH1  EQU   SWITCH+0                                                 03655000
FOUND    EQU   SWITCH+0                                                 03656000
HEAD1    EQU   SWITCH+0                                                 03657000
HEAD2    EQU   SWITCH+0                                                 03658000
HEAD3    EQU   SWITCH+0                                                 03659000
VALIDSER EQU   SWITCH+0                                                 03660000
VALIDCPU EQU   SWITCH+0                                                 03661000
VALIDSHR DS    BL1                                                      03662000
VALIDCUA EQU   SWITCH+1                                                 03663000
VALIDVOL EQU   SWITCH+1                                                 03664000
         ORG   SWITCH+2                                                 03665000
         DS    CL7                                                      03666000
TEMPAREA DS    CL20                                                     03667000
OLDCPUCU DS    CL5                                                      03668000
@NM00012 DS    CL10                                                     03669000
         ORG   @NM00012                                                 03670000
SHR74XXX DS    CL5                                                      03671000
         ORG   SHR74XXX                                                 03672000
SHR74CUA DS    BL2                                                      03673000
SHR74CPU DS    CL3                                                      03674000
         ORG   @NM00012+5                                               03675000
SHR74XXD DS    CL5                                                      03676000
         ORG   SHR74XXD                                                 03677000
@NM00013 DS    CL2                                                      03678000
         ORG   @NM00013                                                 03679000
SHR74XDD DS    BL1                                                      03680000
@NM00014 EQU   @NM00013+0                                               03681000
SHR74CUX DS    BL1                                                      03682000
         ORG   SHR74XXD+2                                               03683000
@NM00015 DS    CL3                                                      03684000
         ORG   @NM00012+10                                              03685000
HVOLDATE DC    X'000000'                                                03686000
LVOLDATE DC    X'FFFFFF'                                                03687000
CHARS    DC    CL16'0123456789ABCDEF'                                   03688000
BUG16    DC    CL31'DEBUG16 - INFORMATIONAL COUNTS'                     03689000
BUG10    DC    CL26'       TOTAL RECORDS FOUND'                         03690000
BUG20    DC    CL24'       OBR RECORDS FOUND'                           03691000
BUG30    DC    CL36'       SHORT RECORDS FOUND && DROPPED'              03692000
BUG31    DC    CL30'       DROPPED NOT DEVICE 34XX'                     03693000
BUG40    DC    CL37'       DROPPED, OUT OF THE DATE RANGE'              03694000
BUG50    DC    CL37'       DROPPED, OUT OF THE TIME RANGE'              03695000
BUG60    DC    CL33'       DROPPED DUE TO THIRD SHIFT'                  03696000
BUG70    DC    CL35'       DROPPED DUE TO CPU SELECTION'                03697000
BUG80    DC    CL35'       DROPPED DUE TO CUA SELECTION'                03698000
BUG90    DC    CL37'       DROPPED DUE TO VOLID SELECTION'              03699000
BUG8     DC    CL33'DEBUG8 HEX DUMP OF THE SORT TABLE'                  03700000
BUG100   DC    CL45'       DROPPED DUE TO DEVICE SERIAL SELECTION'      03701000
BUG110   DC    CL66'       CUAS AT THE CONTROLLER LEVEL MODIFIED DUE TOC03702000
                SHARE CARDS   '                                         03703000
BUG120   DC    CL56'       CUAS AT THE CUA LEVEL MODIFIED DUE TO SHARE C03704000
               CARDS'                                                   03705000
BUG130   DC    CL33'       RECORDS EXCEEDED THRESHOLD'                  03706000
BUG140   DC    CL30'       RECORDS WITH PERM ERROR'                     03707000
CUAPH1   DC    CL25'PERMANENT ERROR SUMMARY'                            03708000
CUAPH2   DC    CL11'...SENSE...'                                        03709000
CUAPH3   DC    CL42'1  1  1  1  1  1  1  1  1  1  2  2  2  2'           03710000
CUAPH4   DS    CL120                                                    03711000
         ORG   CUAPH4                                                   03712000
@NM00016 DC    CL40'DEV  SERIAL ERR  VOLID     LAST CCW     '           03713000
@NM00017 DC    CL40'CSW44-47  0  1  2  3  4  5  6  7  8  9  '           03714000
@NM00018 DC    CL40'0  1  2  3  4  5  6  7  8  9  0  1  2  3'           03715000
         ORG   CUAPH4+120                                               03716000
CUASH1   DC    CL40'XXXXX 34XX/3803 SUBSYSTEM SUMMARY XXXXX'            03717000
CUASH2   DC    CL40'XXXXX      PRIMARY CUA - NNX      XXXXX'            03718000
CUASH3   DS    CL61                                                     03719000
         ORG   CUASH3                                                   03720000
@NM00019 DC    CL32'CUA STATISTICS - CUAS EXCEEDING '                   03721000
CUASH3R  DC    CL3' '                                                   03722000
@NM00020 DC    CL13' TEMP RDS OR '                                      03723000
CUASH3W  DC    CL3' '                                                   03724000
@NM00021 DC    CL10' TEMP WRTS'                                         03725000
         ORG   CUASH3+61                                                03726000
CUASH4   DS    CL130                                                    03727000
         ORG   CUASH4                                                   03728000
@NM00022 DC    CL10' '                                                  03729000
@NM00023 DC    CL50'TU    DATE   VOLUME     TIME      --TEMP--   SIO'   03730000
@NM00024 DC    CL50'DEN- NRZI  R/W WR TG  LRC  CRC  ECC  SKEW ERLY VEL' 03731000
@NM00025 DC    CL20'  ----CPU----  HDR'                                 03732000
         ORG   CUASH4+130                                               03733000
CUASH5   DS    CL129                                                    03734000
         ORG   CUASH5                                                   03735000
@NM00026 DC    CL2' '                                                   03736000
@NM00027 DC    CL52' CUA  SERIAL DAY YR  SERIAL  HH MM SS.TH   RDS WRTSC03737000
               '                                                        03738000
@NM00028 DC    CL52'COUNT SITY NOISE VRC  VRC   MTE  EDC  ENV  ERR  BORC03739000
               '                                                        03740000
@NM00029 DC    CL23' CHG   ID  SERIAL  SER'                             03741000
         ORG   CUASH5+129                                               03742000
CUASH6   DS    CL42                                                     03743000
         ORG   CUASH6                                                   03744000
@NM00030 DC    CL28'NO CUAS EXCEEDED THRESHOLD: '                       03745000
CUASH6D1 DC    CL5' '                                                   03746000
@NM00031 DC    CL4' TO '                                                03747000
CUASH6D2 DC    CL5' '                                                   03748000
         ORG   CUASH6+42                                                03749000
SPACER   DS    CL132                                                    03750000
         ORG   SPACER                                                   03751000
@NM00032 DC    132CL1'X'                                                03752000
         ORG   SPACER+132                                               03753000
VOLHEAD1 DS    CL104                                                    03754000
         ORG   VOLHEAD1                                                 03755000
@NM00033 DC    CL30'  VOLUME STATISTICS - VOLUMES'                      03756000
@NM00034 DC    CL10'EXCEEDING'                                          03757000
VOLH1R   DC    CL3' '                                                   03758000
@NM00035 DC    CL20' TEMPORARY READS OR'                                03759000
VOLH1W   DC    CL3' '                                                   03760000
@NM00036 DC    CL38' TEMPORARY WRITES OR PERMANENT ERRORS'              03761000
         ORG   VOLHEAD1+104                                             03762000
NOVOLS   DS    CL46                                                     03763000
         ORG   NOVOLS                                                   03764000
@NM00037 DC    CL32'NO VOLUMES EXCEEDED THRESHOLD:'                     03765000
VOLH5L   DC    CL5' '                                                   03766000
@NM00038 DC    CL4' TO '                                                03767000
VOLH5H   DC    CL5' '                                                   03768000
         ORG   NOVOLS+46                                                03769000
VOLH2    DS    CL132                                                    03770000
         ORG   VOLH2                                                    03771000
@NM00039 DC    CL36'VOLUME  DATE      TIME'                             03772000
@NM00040 DC    CL36'TU     RD/ --PERM--  --TEMP--  CLNER'               03773000
@NM00041 DC    CL36' ERASE  SIO  BLOCK  PROGRAM  ----CPU'               03774000
@NM00042 DC    CL24'----   MOD   DEN-   HDR'                            03775000
         ORG   VOLH2+132                                                03776000
VOLH3    DS    CL132                                                    03777000
         ORG   VOLH3                                                    03778000
@NM00043 DC    CL36'SERIAL DAY YR  HH MM SS TH   CUA   S'               03779000
@NM00044 DC    CL36'ERIAL  WRT  RDS WRTS  RDS WRTS ACTNS'               03780000
@NM00045 DC    CL36' GAPS  COUNT LENGTH   ID      ID  SE'               03781000
@NM00046 DC    CL24'RIAL  NUMBER SITY   SER'                            03782000
         ORG   VOLH3+132                                                03783000
CUATH1   DC    CL44'34XX/3803 SUBSYSTEM TEMPORARY ERROR SUMMARY'        03784000
CUATH2   DS    CL82                                                     03785000
         ORG   CUATH2                                                   03786000
@NM00047 DC    CL50' ERRORS/100K'                                       03787000
@NM00048 DC    CL16'READ'                                               03788000
@NM00049 DC    CL13'WRITE'                                              03789000
@NM00050 DC    CL3'ECC'                                                 03790000
         ORG   CUATH2+82                                                03791000
CUATH3   DS    CL108                                                    03792000
         ORG   CUATH3                                                   03793000
@NM00051 DC    CL34'SIOS           DATE      TOTAL'                     03794000
@NM00052 DC    CL41'TOTAL    STATISTICS       STATISTICS'               03795000
@NM00053 DC    CL33'VRC   STRD  PART  OVER  VEL   IBG'                  03796000
         ORG   CUATH3+108                                               03797000
CUATH4   DS    CL119                                                    03798000
         ORG   CUATH4                                                   03799000
@NM00054 DC    CL1' '                                                   03800000
@NM00055 DC    CL45'CUA   READ  WRITE  -FROM---TO--    SIOS   MOU'      03801000
@NM00056 DC    CL45'NTS. ERRORS  CLNRAC . ERRORS  ERSGAP . ENV'         03802000
@NM00057 DC    CL28'CHK   RECK  RUN   CHG   DET'                        03803000
         ORG   CUATH4+119                                               03804000
CUAPH5   DS    CL47                                                     03805000
         ORG   CUAPH5                                                   03806000
@NM00058 DC    CL33'NO PERMANENT ERRORS ENCOUNTERED:'                   03807000
CUAPH5D1 DC    CL5' '                                                   03808000
@NM00059 DC    CL4' TO'                                                 03809000
CUAPH5D2 DC    CL5' '                                                   03810000
         ORG   CUAPH5+47                                                03811000
NOTOTALS DC    CL32'NO TEMPORARY ERRORS ENCOUNTERED'                    03812000
MESSAGE  DS    CL134                                                    03813000
         ORG   MESSAGE                                                  03814000
MSGDS    DC    CL1'1'                                                   03815000
MSGCC    DC    CL1' '                                                   03816000
MSGADDR  DC    CL132' '                                                 03817000
         ORG   MSGADDR                                                  03818000
@NM00060 DS    CL8                                                      03819000
NUMRECP  DS    CL7                                                      03820000
         ORG   MESSAGE+134                                              03821000
CHAIN    DS    CL5                                                      03822000
         ORG   CHAIN                                                    03823000
CHAINCPU DS    CL3                                                      03824000
CHAINCUX DS    CL2                                                      03825000
         ORG   CHAIN+5                                                  03826000
SUPERZAP DC    3CL10'SUPERZAP'                                          03827000
EXCTHRES DC    F'0'                                                     03828000
         DS    1XL4                                                     03829000
MODNO    DC    CL1'1'                                                   03830000
         DC    CL1'2'                                                   03831000
         DC    CL1'3'                                                   03832000
         DC    CL1'3'                                                   03833000
         DC    CL1'5'                                                   03834000
         DC    CL1'7'                                                   03835000
         DC    5CL1' '                                                  03836000
         DC    CL1'4'                                                   03837000
         DC    CL1'6'                                                   03838000
         DC    CL1'8'                                                   03839000
         DC    2CL1' '                                                  03840000
ERRTABLE DC    CL34'PW  PERMANENT WRITE'                                03841000
         ORG   ERRTABLE+0                                               03842000
ERRTABC  DS    CL2                                                      03843000
         ORG   ERRTABLE+34                                              03844000
         DC    CL34'PR  PERMANENT READ'                                 03845000
         ORG   ERRTABLE+68                                              03846000
         DC    CL34'PF  CAUSE UNKNOWN'                                  03847000
         ORG   ERRTABLE+102                                             03848000
         DC    CL34'EC  EQUIPMENT CHECK, CAUSE UNKNOWN'                 03849000
         ORG   ERRTABLE+136                                             03850000
         DC    CL34'EE  ERASE HEAD'                                     03851000
         ORG   ERRTABLE+170                                             03852000
         DC    CL34'EB  TAPE BOTTOM, LEFT OR RIGHT'                     03853000
         ORG   ERRTABLE+204                                             03854000
         DC    CL34'EL  LOAD FAILURE'                                   03855000
         ORG   ERRTABLE+238                                             03856000
         DC    CL34'EP  AIR BEARING PRESSURE'                           03857000
         ORG   ERRTABLE+272                                             03858000
         DC    CL34'ET  TACH START FAILURE'                             03859000
         ORG   ERRTABLE+306                                             03860000
         DC    CL34'EV  VELOCITY CHECK'                                 03861000
         ORG   ERRTABLE+340                                             03862000
         DC    CL34'ER  RESET KEY'                                      03863000
         ORG   ERRTABLE+374                                             03864000
PATCH    DC    20H'0'                                                   03865000
IFCTHRSH CSECT                                                          03866000
         DC    S(SUPERZAP)                                              03867000
IFCTHRSH CSECT                                                          03868000
         DC    S(PATCH)                                                 03869000
IFCTHRSH CSECT                                                          03870000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       03871000
@01      EQU   01                                                       03872000
@02      EQU   02                                                       03873000
@03      EQU   03                                                       03874000
@04      EQU   04                                                       03875000
@05      EQU   05                                                       03876000
@06      EQU   06                                                       03877000
@07      EQU   07                                                       03878000
@08      EQU   08                                                       03879000
@09      EQU   09                                                       03880000
@10      EQU   10                                                       03881000
@11      EQU   11                                                       03882000
@12      EQU   12                                                       03883000
@13      EQU   13                                                       03884000
@14      EQU   14                                                       03885000
@15      EQU   15                                                       03886000
R0       EQU   @00                                                      03887000
R1       EQU   @01                                                      03888000
R2       EQU   @02                                                      03889000
R4       EQU   @04                                                      03890000
R6       EQU   @06                                                      03891000
R7       EQU   @07                                                      03892000
R8       EQU   @08                                                      03893000
R9       EQU   @09                                                      03894000
R12      EQU   @12                                                      03895000
R15      EQU   @15                                                      03896000
R10      EQU   @10                                                      03897000
R11      EQU   @11                                                      03898000
R13      EQU   @13                                                      03899000
R14      EQU   @14                                                      03900000
R3       EQU   @03                                                      03901000
R5       EQU   @05                                                      03902000
IOHND    EQU   0                                                        03903000
IFCMSG   EQU   0                                                        03904000
PARM     EQU   0                                                        03905000
RECTYPE  EQU   PARM                                                     03906000
SWITCHES EQU   PARM+2                                                   03907000
SHIFT3RD EQU   SWITCHES+1                                               03908000
DEBUG    EQU   PARM+4                                                   03909000
DEBUG4   EQU   DEBUG                                                    03910000
DEBUG8   EQU   DEBUG+1                                                  03911000
DEBUG11  EQU   DEBUG+1                                                  03912000
DEBUG12  EQU   DEBUG+1                                                  03913000
DEBUG16  EQU   DEBUG+2                                                  03914000
DEBUG27  EQU   DEBUG+3                                                  03915000
DEBUGA   EQU   PARM+8                                                   03916000
MISC     EQU   PARM+12                                                  03917000
PHIST    EQU   MISC                                                     03918000
PRINTES  EQU   MISC                                                     03919000
PLOGREC  EQU   MISC                                                     03920000
PASSFLAG EQU   MISC                                                     03921000
OPENCLSE EQU   PARM+13                                                  03922000
OPENIO   EQU   OPENCLSE                                                 03923000
CLOSEIO  EQU   OPENCLSE+2                                               03924000
CSERLOG  EQU   CLOSEIO                                                  03925000
CDRCTWRK EQU   CLOSEIO                                                  03926000
DATENOW  EQU   PARM+17                                                  03927000
STDT     EQU   PARM+23                                                  03928000
STDATE   EQU   STDT                                                     03929000
PSTD     EQU   STDATE+1                                                 03930000
ENDDT    EQU   PARM+31                                                  03931000
ENDDATE  EQU   ENDDT                                                    03932000
PEND     EQU   ENDDATE+1                                                03933000
STTIME1  EQU   PARM+39                                                  03934000
ENDTIME1 EQU   PARM+43                                                  03935000
STTIME2  EQU   PARM+47                                                  03936000
ENDTIME2 EQU   PARM+51                                                  03937000
STRTDATE EQU   PARM+55                                                  03938000
RDTHRSH  EQU   PARM+66                                                  03939000
WRTHRSH  EQU   PARM+69                                                  03940000
@NM00007 EQU   PARM+75                                                  03941000
TABSIZE  EQU   PARM+80                                                  03942000
SORTNUM  EQU   PARM+84                                                  03943000
ERRID    EQU   PARM+92                                                  03944000
IDTIMEA  EQU   ERRID+6                                                  03945000
IDTIME   EQU   IDTIMEA                                                  03946000
CCHHRLNG EQU   PARM+112                                                 03947000
RECCCHHR EQU   CCHHRLNG                                                 03948000
LINECT   EQU   PARM+120                                                 03949000
ADIOHND  EQU   PARM+124                                                 03950000
ADIFCMSG EQU   PARM+128                                                 03951000
ADEDITB  EQU   PARM+132                                                 03952000
EVPTR    EQU   PARM+136                                                 03953000
SORTADR  EQU   PARM+140                                                 03954000
PRINTADR EQU   PARM+148                                                 03955000
CUAPTR   EQU   PARM+152                                                 03956000
DEVPTR   EQU   PARM+156                                                 03957000
MODPTR   EQU   PARM+160                                                 03958000
SERPTR   EQU   PARM+164                                                 03959000
VOLPTR   EQU   PARM+168                                                 03960000
CPUPTR   EQU   PARM+172                                                 03961000
CPCUAPTR EQU   PARM+176                                                 03962000
LIBADPTR EQU   PARM+180                                                 03963000
SYMCDPTR EQU   PARM+184                                                 03964000
SYSUMPTR EQU   PARM+188                                                 03965000
TRENPTR  EQU   PARM+192                                                 03966000
SHAREPTR EQU   PARM+196                                                 03967000
MERDCPTR EQU   PARM+208                                                 03968000
DUMPTABL EQU   PARM+228                                                 03969000
DUMPINFO EQU   DUMPTABL+4                                               03970000
TRENDONE EQU   0                                                        03971000
TREGEN   EQU   TRENDONE+8                                               03972000
TRECCH0  EQU   TREGEN+8                                                 03973000
TREND2   EQU   0                                                        03974000
TRENDKEY EQU   TREND2                                                   03975000
TRENDRT  EQU   TRENDKEY+1                                               03976000
TRENCPUS EQU   TRENDKEY+3                                               03977000
TRENDITM EQU   TRENDKEY+4                                               03978000
EVTABLE  EQU   0                                                        03979000
EVSTOP   EQU   EVTABLE                                                  03980000
EVKEY    EQU   EVTABLE+6                                                03981000
SORTABLE EQU   0                                                        03982000
SORTKEY  EQU   SORTABLE                                                 03983000
SORTCCHR EQU   SORTABLE+5                                               03984000
SYSUMONE EQU   0                                                        03985000
SYSUM2   EQU   0                                                        03986000
SYSUMKEY EQU   SYSUM2                                                   03987000
SYSRT    EQU   SYSUMKEY+1                                               03988000
SYSCPUS  EQU   SYSUMKEY+3                                               03989000
SYSITEM  EQU   SYSUMKEY+4                                               03990000
SHARE    EQU   0                                                        03991000
SHARENUM EQU   SHARE                                                    03992000
SHAREIO  EQU   SHARE+2                                                  03993000
SHRCUCPU EQU   SHAREIO                                                  03994000
SHARECUA EQU   SHRCUCPU                                                 03995000
SHAREDX  EQU   SHARECUA                                                 03996000
SHARECUB EQU   SHAREIO+5                                                03997000
SHARSERB EQU   SHAREIO+7                                                03998000
EDITLOAD EQU   0                                                        03999000
EDITABLE EQU   EDITLOAD+4                                               04000000
CUA      EQU   0                                                        04001000
CUANUM   EQU   CUA                                                      04002000
CUAVAL   EQU   CUA+2                                                    04003000
CUA1     EQU   CUAVAL                                                   04004000
CUA2     EQU   CUAVAL+2                                                 04005000
DEVICE   EQU   0                                                        04006000
MODELS   EQU   0                                                        04007000
DEVSERAL EQU   0                                                        04008000
SERNUM   EQU   DEVSERAL                                                 04009000
SERVAL   EQU   DEVSERAL+2                                               04010000
VOLUME   EQU   0                                                        04011000
VOLNUM   EQU   VOLUME                                                   04012000
VOLVAL   EQU   VOLUME+2                                                 04013000
CPUS     EQU   0                                                        04014000
CPUNUM   EQU   CPUS                                                     04015000
CPUVAL   EQU   CPUS+2                                                   04016000
CPUCUAS  EQU   0                                                        04017000
CPUCUAV  EQU   CPUCUAS+2                                                04018000
LIBADR   EQU   0                                                        04019000
SYMCODE  EQU   0                                                        04020000
SYMVAL   EQU   SYMCODE+2                                                04021000
MERIDIAN EQU   0                                                        04022000
CONTRTAB EQU   0                                                        04023000
CONTRVOL EQU   CONTRTAB                                                 04024000
SORTCPUC EQU   CONTRVOL                                                 04025000
CONTRCUA EQU   SORTCPUC                                                 04026000
EOTABLE  EQU   CONTRCUA                                                 04027000
CPU      EQU   SORTCPUC+2                                               04028000
TYPE     EQU   CONTRVOL+5                                               04029000
TABCCHHR EQU   CONTRTAB+6                                               04030000
SORTTAB  EQU   0                                                        04031000
BUFFER   EQU   0                                                        04032000
RECTYP   EQU   BUFFER                                                   04033000
SWITCHE  EQU   BUFFER+2                                                 04034000
SW2      EQU   SWITCHE+1                                                04035000
EOD      EQU   SW2                                                      04036000
SHORT    EQU   SW2                                                      04037000
DISMNT   EQU   SW2                                                      04038000
DATE     EQU   BUFFER+8                                                 04039000
TIME     EQU   BUFFER+12                                                04040000
CPUIDENT EQU   BUFFER+17                                                04041000
CPUSER   EQU   CPUIDENT                                                 04042000
CPUMOD   EQU   CPUIDENT+3                                               04043000
JOBID    EQU   BUFFER+24                                                04044000
FAILCCW  EQU   BUFFER+32                                                04045000
CSW      EQU   BUFFER+44                                                04046000
CSW34XX  EQU   CSW                                                      04047000
SECUA    EQU   BUFFER+49                                                04048000
SECUA2   EQU   SECUA+1                                                  04049000
ODEVICE  EQU   BUFFER+52                                                04050000
DEV2     EQU   ODEVICE+2                                                04051000
OCUA     EQU   BUFFER+57                                                04052000
OCUA2    EQU   OCUA+1                                                   04053000
SNSCNT   EQU   BUFFER+62                                                04054000
VOLID    EQU   BUFFER+64                                                04055000
BLKLENG  EQU   BUFFER+70                                                04056000
HDRSER   EQU   BUFFER+72                                                04057000
READTH   EQU   BUFFER+76                                                04058000
RITETH   EQU   BUFFER+77                                                04059000
RECSIOS  EQU   BUFFER+78                                                04060000
PERMRDS  EQU   BUFFER+80                                                04061000
PERMRTS  EQU   BUFFER+81                                                04062000
RECERASE EQU   BUFFER+84                                                04063000
RECLEAN  EQU   BUFFER+86                                                04064000
NOISE    EQU   BUFFER+89                                                04065000
RWVRC    EQU   BUFFER+90                                                04066000
MTELRCR  EQU   BUFFER+91                                                04067000
EDCCRC   EQU   BUFFER+92                                                04068000
RECVRC   EQU   BUFFER+93                                                04069000
RECOVER  EQU   BUFFER+94                                                04070000
CCOMVRC  EQU   BUFFER+95                                                04071000
@NM00141 EQU   BUFFER+96                                                04072000
RECSTRD  EQU   BUFFER+98                                                04073000
RECPART  EQU   BUFFER+99                                                04074000
RECIBG   EQU   BUFFER+100                                               04075000
EXPEARL  EQU   BUFFER+101                                               04076000
@NM00143 EQU   BUFFER+102                                               04077000
@NM00144 EQU   BUFFER+103                                               04078000
RECVEL   EQU   BUFFER+104                                               04079000
@NM00145 EQU   BUFFER+105                                               04080000
@NM00146 EQU   BUFFER+107                                               04081000
SENSE24  EQU   BUFFER+108                                               04082000
SENSE    EQU   SENSE24                                                  04083000
SENSBIT3 EQU   SENSE                                                    04084000
SENSBIT4 EQU   SENSE                                                    04085000
SENSBIT5 EQU   SENSE                                                    04086000
SENSBIT6 EQU   SENSE                                                    04087000
SENSBIT7 EQU   SENSE                                                    04088000
SUMAREA  EQU   0                                                        04089000
NEXTCPU  EQU   SUMAREA                                                  04090000
CPUCUX   EQU   SUMAREA+4                                                04091000
CUX      EQU   CPUCUX+3                                                 04092000
SUMTEMP  EQU   SUMAREA+16                                               04093000
SIOS     EQU   SUMTEMP                                                  04094000
READER   EQU   SUMTEMP+4                                                04095000
CLEANER  EQU   SUMTEMP+8                                                04096000
WRITER   EQU   SUMTEMP+12                                               04097000
ERASE    EQU   SUMTEMP+16                                               04098000
MOUNTS   EQU   SUMTEMP+20                                               04099000
VRC      EQU   SUMTEMP+24                                               04100000
STRDCHK  EQU   SUMTEMP+26                                               04101000
PARTRECK EQU   SUMTEMP+28                                               04102000
OVERRUNS EQU   SUMTEMP+30                                               04103000
VELCHGS  EQU   SUMTEMP+32                                               04104000
IBG      EQU   SUMTEMP+34                                               04105000
FDATE    EQU   SUMTEMP+36                                               04106000
TDATE    EQU   SUMTEMP+39                                               04107000
DATEAREA EQU   0                                                        04108000
NEXTDATE EQU   DATEAREA                                                 04109000
DATECC   EQU   DATEAREA+4                                               04110000
LOWDATE  EQU   DATEAREA+9                                               04111000
HIDATE   EQU   DATEAREA+12                                              04112000
TYPEENT  EQU   0                                                        04113000
BWORD1   EQU   0                                                        04114000
DADDR1   EQU   0                                                        04115000
BWORD2   EQU   0                                                        04116000
DADDR2   EQU   0                                                        04117000
BWORD3   EQU   0                                                        04118000
DADDR3   EQU   0                                                        04119000
BINWORD  EQU   0                                                        04120000
DECADDR  EQU   0                                                        04121000
NEXTBYTE EQU   0                                                        04122000
ADDNUM   EQU   0                                                        04123000
LENNUM   EQU   0                                                        04124000
DIVEND   EQU   0                                                        04125000
DIVSOR   EQU   0                                                        04126000
OUTLOC   EQU   0                                                        04127000
WORKOVER EQU   WORK                                                     04128000
SUMPTRC  EQU   SUMPTR                                                   04129000
CUASH2C  EQU   CUASH2+25                                                04130000
@NM00061 EQU   MSGADDR                                                  04131000
OUTCUA   EQU   @NM00061+3                                               04132000
TUSER    EQU   @NM00061+9                                               04133000
DAY      EQU   @NM00061+15                                              04134000
YEAR     EQU   @NM00061+19                                              04135000
OVOLUME  EQU   @NM00061+23                                              04136000
HH       EQU   @NM00061+31                                              04137000
MM       EQU   @NM00061+34                                              04138000
SS       EQU   @NM00061+37                                              04139000
POINT    EQU   @NM00061+39                                              04140000
TH       EQU   @NM00061+40                                              04141000
OREADS   EQU   @NM00061+43                                              04142000
WRTS     EQU   @NM00061+48                                              04143000
SIOCNT   EQU   @NM00061+54                                              04144000
DENSITY  EQU   @NM00061+60                                              04145000
NRZIN    EQU   @NM00061+65                                              04146000
ORWVRC   EQU   @NM00061+70                                              04147000
WRTGVRC  EQU   @NM00061+75                                              04148000
LRCMTE   EQU   @NM00061+80                                              04149000
CRCEDC   EQU   @NM00061+85                                              04150000
ECCENV   EQU   @NM00061+90                                              04151000
SKEWERR  EQU   @NM00061+96                                              04152000
ERLYBOR  EQU   @NM00061+101                                             04153000
OVELCHG  EQU   @NM00061+106                                             04154000
MCPU     EQU   @NM00061+112                                             04155000
SERCPU   EQU   @NM00061+117                                             04156000
HEADSER  EQU   @NM00061+124                                             04157000
@NM00078 EQU   MSGADDR                                                  04158000
OUTDEV   EQU   @NM00078                                                 04159000
OUTSER   EQU   @NM00078+6                                               04160000
OUTERR   EQU   @NM00078+12                                              04161000
PVOL     EQU   @NM00078+16                                              04162000
PCCW     EQU   @NM00078+23                                              04163000
PCSW     EQU   @NM00078+40                                              04164000
PSNS     EQU   @NM00078+48                                              04165000
PSNSB    EQU   PSNS+1                                                   04166000
@NM00085 EQU   MSGADDR                                                  04167000
VVOLUME  EQU   @NM00085                                                 04168000
VDAY     EQU   @NM00085+7                                               04169000
VYEAR    EQU   @NM00085+11                                              04170000
VHH      EQU   @NM00085+15                                              04171000
VMM      EQU   @NM00085+18                                              04172000
VSS      EQU   @NM00085+21                                              04173000
VPOINT   EQU   @NM00085+23                                              04174000
VTH      EQU   @NM00085+24                                              04175000
VCUA     EQU   @NM00085+29                                              04176000
VTUSER   EQU   @NM00085+35                                              04177000
VRDWRT   EQU   @NM00085+44                                              04178000
VPRDS    EQU   @NM00085+46                                              04179000
VPRTS    EQU   @NM00085+51                                              04180000
VTRDS    EQU   @NM00085+56                                              04181000
VTRTS    EQU   @NM00085+61                                              04182000
VCLEAN   EQU   @NM00085+67                                              04183000
VERASE   EQU   @NM00085+73                                              04184000
VSIOS    EQU   @NM00085+79                                              04185000
VBLOCK   EQU   @NM00085+85                                              04186000
VPGMID   EQU   @NM00085+92                                              04187000
VCPUMOD  EQU   @NM00085+101                                             04188000
VCPUSER  EQU   @NM00085+106                                             04189000
VMODEL   EQU   @NM00085+114                                             04190000
VDENS    EQU   @NM00085+120                                             04191000
VHDRSER  EQU   @NM00085+127                                             04192000
@NM00105 EQU   MSGADDR                                                  04193000
@NM00106 EQU   @NM00105                                                 04194000
OUTCODE  EQU   @NM00106                                                 04195000
@NM00108 EQU   MSGADDR                                                  04196000
SUMT1    EQU   @NM00108                                                 04197000
SUMCUA   EQU   SUMT1+1                                                  04198000
READPERC EQU   @NM00108+7                                               04199000
RITEPERC EQU   @NM00108+14                                              04200000
SUMFDATE EQU   @NM00108+20                                              04201000
SUMTDATE EQU   @NM00108+27                                              04202000
SUMSIOS  EQU   @NM00108+34                                              04203000
SUMMNTS  EQU   @NM00108+43                                              04204000
SUMP1    EQU   @NM00108+49                                              04205000
SUMREAD  EQU   @NM00108+52                                              04206000
SUMCLEAN EQU   @NM00108+60                                              04207000
SUMP2    EQU   @NM00108+66                                              04208000
SUMWRITE EQU   @NM00108+69                                              04209000
SUMERASE EQU   @NM00108+77                                              04210000
SUMP3    EQU   @NM00108+83                                              04211000
SUMVRC   EQU   @NM00108+84                                              04212000
SUMSTRD  EQU   @NM00108+90                                              04213000
SUMPART  EQU   @NM00108+96                                              04214000
SUMOVER  EQU   @NM00108+102                                             04215000
SUMVEL   EQU   @NM00108+108                                             04216000
SUMIBG   EQU   @NM00108+114                                             04217000
OSER74XX EQU   SENSE24+15                                               04218000
TRECCH   EQU   TRECCH0                                                  04219000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    04220000
@NM00127 EQU   @NM00108+113                                             04221000
@NM00126 EQU   @NM00108+107                                             04222000
@NM00125 EQU   @NM00108+101                                             04223000
@NM00124 EQU   @NM00108+95                                              04224000
@NM00123 EQU   @NM00108+89                                              04225000
@NM00122 EQU   @NM00108+82                                              04226000
@NM00121 EQU   @NM00108+74                                              04227000
@NM00120 EQU   @NM00108+67                                              04228000
@NM00119 EQU   @NM00108+65                                              04229000
@NM00118 EQU   @NM00108+57                                              04230000
@NM00117 EQU   @NM00108+50                                              04231000
@NM00116 EQU   @NM00108+48                                              04232000
@NM00115 EQU   @NM00108+42                                              04233000
@NM00114 EQU   @NM00108+32                                              04234000
@NM00113 EQU   @NM00108+25                                              04235000
@NM00112 EQU   @NM00108+19                                              04236000
@NM00111 EQU   @NM00108+12                                              04237000
@NM00110 EQU   @NM00108+6                                               04238000
@NM00109 EQU   SUMT1                                                    04239000
@NM00107 EQU   @NM00106+34                                              04240000
@NM00104 EQU   @NM00085+125                                             04241000
@NM00103 EQU   @NM00085+119                                             04242000
@NM00102 EQU   @NM00085+112                                             04243000
@NM00101 EQU   @NM00085+105                                             04244000
@NM00100 EQU   @NM00085+100                                             04245000
@NM00099 EQU   @NM00085+90                                              04246000
@NM00098 EQU   @NM00085+84                                              04247000
@NM00097 EQU   @NM00085+78                                              04248000
@NM00096 EQU   @NM00085+72                                              04249000
@NM00095 EQU   @NM00085+66                                              04250000
@NM00094 EQU   @NM00085+45                                              04251000
@NM00093 EQU   @NM00085+40                                              04252000
@NM00092 EQU   @NM00085+32                                              04253000
@NM00091 EQU   @NM00085+26                                              04254000
@NM00090 EQU   @NM00085+20                                              04255000
@NM00089 EQU   @NM00085+17                                              04256000
@NM00088 EQU   @NM00085+13                                              04257000
@NM00087 EQU   @NM00085+10                                              04258000
@NM00086 EQU   @NM00085+6                                               04259000
@NM00084 EQU   PSNS                                                     04260000
@NM00083 EQU   @NM00078+39                                              04261000
@NM00082 EQU   @NM00078+22                                              04262000
@NM00081 EQU   @NM00078+14                                              04263000
@NM00080 EQU   @NM00078+11                                              04264000
@NM00079 EQU   @NM00078+3                                               04265000
@NM00077 EQU   @NM00061+123                                             04266000
@NM00076 EQU   @NM00061+116                                             04267000
@NM00075 EQU   @NM00061+111                                             04268000
@NM00074 EQU   @NM00061+95                                              04269000
@NM00073 EQU   @NM00061+64                                              04270000
@NM00072 EQU   @NM00061+59                                              04271000
@NM00071 EQU   @NM00061+53                                              04272000
@NM00070 EQU   @NM00061+42                                              04273000
@NM00069 EQU   @NM00061+36                                              04274000
@NM00068 EQU   @NM00061+33                                              04275000
@NM00067 EQU   @NM00061+29                                              04276000
@NM00066 EQU   @NM00061+21                                              04277000
@NM00065 EQU   @NM00061+18                                              04278000
@NM00064 EQU   @NM00061+14                                              04279000
@NM00063 EQU   @NM00061+6                                               04280000
@NM00062 EQU   @NM00061                                                 04281000
CPUMSER  EQU   CPUCUX                                                   04282000
SENSBIT2 EQU   SENSE                                                    04283000
SENSBIT1 EQU   SENSE                                                    04284000
SENSBIT0 EQU   SENSE                                                    04285000
ALUHRDER EQU   @NM00146                                                 04286000
BUSOCHK  EQU   @NM00146                                                 04287000
BACKWARD EQU   BUFFER+106                                               04288000
EXP3     EQU   @NM00145                                                 04289000
EXP3A    EQU   @NM00145                                                 04290000
VELCHNG  EQU   RECVEL                                                   04291000
EXP2     EQU   RECVEL                                                   04292000
VELRETRY EQU   @NM00144                                                 04293000
SLWNDRD  EQU   @NM00144                                                 04294000
SLBGRD   EQU   @NM00143                                                 04295000
EARLNDRD EQU   @NM00143                                                 04296000
EARLBGRD EQU   EXPEARL                                                  04297000
EXP      EQU   EXPEARL                                                  04298000
FEEDTHRU EQU   RECIBG                                                   04299000
ORDROP   EQU   RECIBG                                                   04300000
EXCPAMB  EQU   RECPART                                                  04301000
PARTREC  EQU   RECPART                                                  04302000
@NM00142 EQU   RECSTRD                                                  04303000
WRTTMCHK EQU   RECSTRD                                                  04304000
TRKINERR EQU   BUFFER+97                                                04305000
PARITY   EQU   @NM00141                                                 04306000
MASKEXP  EQU   @NM00141                                                 04307000
PEIDCHK  EQU   @NM00141                                                 04308000
WRTTRVRC EQU   CCOMVRC                                                  04309000
CCOMPARE EQU   CCOMVRC                                                  04310000
SKEWCHK  EQU   RECOVER                                                  04311000
OVERRUN  EQU   RECOVER                                                  04312000
SPAR     EQU   BUFFER+88                                                04313000
@NM00140 EQU   BUFFER+83                                                04314000
NOISEBLK EQU   BUFFER+82                                                04315000
@NM00139 EQU   BUFFER+74                                                04316000
IORETRY  EQU   BUFFER+60                                                04317000
@NM00138 EQU   OCUA                                                     04318000
@NM00137 EQU   BUFFER+56                                                04319000
@NM00136 EQU   ODEVICE                                                  04320000
@NM00135 EQU   SECUA                                                    04321000
@NM00134 EQU   BUFFER+48                                                04322000
@NM00133 EQU   BUFFER+40                                                04323000
@NM00132 EQU   BUFFER+22                                                04324000
CPUVER   EQU   BUFFER+16                                                04325000
@NM00131 EQU   BUFFER+4                                                 04326000
@NM00130 EQU   SW2                                                      04327000
@NM00129 EQU   SW2                                                      04328000
@NM00128 EQU   SWITCHE                                                  04329000
SYSREL   EQU   BUFFER+1                                                 04330000
MODEL    EQU   MERIDIAN+2                                               04331000
MRDNUMBR EQU   MERIDIAN                                                 04332000
SYMVAL2  EQU   SYMVAL+2                                                 04333000
SYMVAL1  EQU   SYMVAL                                                   04334000
SYMCDNUM EQU   SYMCODE                                                  04335000
LIBVAL   EQU   LIBADR+2                                                 04336000
LIBADNUM EQU   LIBADR                                                   04337000
CPUCUX3  EQU   CPUCUAV+5                                                04338000
CPUCUX2  EQU   CPUCUAV+3                                                04339000
CPUCUX1  EQU   CPUCUAV                                                  04340000
CPCUANUM EQU   CPUCUAS                                                  04341000
MODVAL   EQU   MODELS+2                                                 04342000
MODNUM   EQU   MODELS                                                   04343000
MDRVAL   EQU   DEVICE+204                                               04344000
MDRNUM   EQU   DEVICE+202                                               04345000
DEVVAL   EQU   DEVICE+2                                                 04346000
DEVNUM   EQU   DEVICE                                                   04347000
LOADPTR  EQU   EDITABLE+8                                               04348000
LOADNAME EQU   EDITABLE                                                 04349000
EDITNUM  EQU   EDITLOAD                                                 04350000
SHARLET  EQU   SHAREIO+10                                               04351000
SHARSERA EQU   SHRCUCPU+2                                               04352000
SYSTEMP  EQU   SYSUM2+9                                                 04353000
SYSPERM  EQU   SYSUM2+7                                                 04354000
SYSDEV   EQU   SYSUM2+5                                                 04355000
SYSOLDA  EQU   SYSITEM                                                  04356000
SYS3705  EQU   SYSITEM                                                  04357000
SYSOLD   EQU   SYSCPUS                                                  04358000
SYSCPU   EQU   SYSCPUS                                                  04359000
SYSCUA   EQU   SYSRT                                                    04360000
SYSGROUP EQU   SYSUMKEY                                                 04361000
SYSUMEOD EQU   SYSUMONE+96                                              04362000
SYSUMPER EQU   SYSUMONE+92                                              04363000
SYSUMPEA EQU   SYSUMONE+88                                              04364000
SYSUMPEI EQU   SYSUMONE+84                                              04365000
SYSUMCH  EQU   SYSUMONE+20                                              04366000
SYSUMMCN EQU   SYSUMONE+16                                              04367000
SYSUMMCR EQU   SYSUMONE+12                                              04368000
SYSUMNXT EQU   SYSUMONE+8                                               04369000
SYSUMIPL EQU   SYSUMONE+4                                               04370000
SYSUMNUM EQU   SYSUMONE                                                 04371000
SORTCORE EQU   SORTCCHR                                                 04372000
SORTTIME EQU   SORTKEY+1                                                04373000
SORTYEAR EQU   SORTKEY                                                  04374000
EVLETTER EQU   EVKEY+5                                                  04375000
EVSERIAL EQU   EVKEY+2                                                  04376000
EVMODEL  EQU   EVKEY                                                    04377000
EVNUM    EQU   EVTABLE+4                                                04378000
EVDAY    EQU   EVSTOP+1                                                 04379000
EVYEAR   EQU   EVSTOP                                                   04380000
TRETMP   EQU   TREND2+10                                                04381000
TREPRM   EQU   TREND2+8                                                 04382000
TRENDDEV EQU   TREND2+6                                                 04383000
TRENDDAT EQU   TRENDKEY+5                                               04384000
TRENDOD  EQU   TRENDITM                                                 04385000
TREND037 EQU   TRENDITM                                                 04386000
TRENDOLD EQU   TRENCPUS                                                 04387000
TRENDCPU EQU   TRENCPUS                                                 04388000
@NM00011 EQU   TRENDRT+1                                                04389000
TRENDCUA EQU   TRENDRT                                                  04390000
TRENDGRP EQU   TRENDKEY                                                 04391000
TREPRE   EQU   TREGEN+72                                                04392000
TRECCHF  EQU   TREGEN+68                                                04393000
TRECCHE  EQU   TREGEN+64                                                04394000
TRECCHD  EQU   TREGEN+60                                                04395000
TRECCHC  EQU   TREGEN+56                                                04396000
TRECCHB  EQU   TREGEN+52                                                04397000
TRECCHA  EQU   TREGEN+48                                                04398000
TRECCH9  EQU   TREGEN+44                                                04399000
TRECCH8  EQU   TREGEN+40                                                04400000
TRECCH7  EQU   TREGEN+36                                                04401000
TRECCH6  EQU   TREGEN+32                                                04402000
TRECCH5  EQU   TREGEN+28                                                04403000
TRECCH4  EQU   TREGEN+24                                                04404000
TRECCH3  EQU   TREGEN+20                                                04405000
TRECCH2  EQU   TREGEN+16                                                04406000
TRECCH1  EQU   TREGEN+12                                                04407000
TREMCH   EQU   TREGEN+4                                                 04408000
TREIPL   EQU   TREGEN                                                   04409000
TRENUM   EQU   TRENDONE+4                                               04410000
TRENEXT  EQU   TRENDONE                                                 04411000
DUMPSIZE EQU   DUMPINFO+4                                               04412000
DUMPADR  EQU   DUMPINFO                                                 04413000
DUMPNUM  EQU   DUMPTABL                                                 04414000
@NM00010 EQU   PARM+212                                                 04415000
RECLNGT1 EQU   PARM+204                                                 04416000
FRAMEPTR EQU   PARM+200                                                 04417000
ADCPUT   EQU   PARM+144                                                 04418000
RECLNGTH EQU   CCHHRLNG+6                                               04419000
@NM00009 EQU   CCHHRLNG+5                                               04420000
USERPGM  EQU   PARM+102                                                 04421000
IDTSEC   EQU   IDTIME+3                                                 04422000
IDSEC    EQU   IDTIME+2                                                 04423000
IDMIN    EQU   IDTIME+1                                                 04424000
IDHOUR   EQU   IDTIME                                                   04425000
IDASID   EQU   ERRID+4                                                  04426000
IDCPU    EQU   ERRID+3                                                  04427000
@NM00008 EQU   ERRID+2                                                  04428000
IDVALUE  EQU   ERRID                                                    04429000
NUMDAYS  EQU   PARM+88                                                  04430000
SYSRETRN EQU   @NM00007                                                 04431000
@NM00006 EQU   PARM+72                                                  04432000
TERM     EQU   PARM+58                                                  04433000
EVSDAY   EQU   STRTDATE+1                                               04434000
EVSYEAR  EQU   STRTDATE                                                 04435000
PENSEC2  EQU   ENDTIME2+2                                               04436000
PENMIN2  EQU   ENDTIME2+1                                               04437000
PENHOUR2 EQU   ENDTIME2                                                 04438000
PSTSEC2  EQU   STTIME2+2                                                04439000
PSTMIN2  EQU   STTIME2+1                                                04440000
PSTHOUR2 EQU   STTIME2                                                  04441000
PENSEC1  EQU   ENDTIME1+2                                               04442000
PENMIN1  EQU   ENDTIME1+1                                               04443000
PENHOUR1 EQU   ENDTIME1                                                 04444000
PSTSEC1  EQU   STTIME1+2                                                04445000
PSTMIN1  EQU   STTIME1+1                                                04446000
PSTHOUR1 EQU   STTIME1                                                  04447000
@NM00005 EQU   ENDDT+4                                                  04448000
PENDY    EQU   PEND+1                                                   04449000
PENYR    EQU   PEND                                                     04450000
@NM00004 EQU   ENDDATE                                                  04451000
@NM00003 EQU   STDT+4                                                   04452000
PSTDY    EQU   PSTD+1                                                   04453000
PSTYR    EQU   PSTD                                                     04454000
@NM00002 EQU   STDATE                                                   04455000
YEARNOW  EQU   DATENOW+4                                                04456000
@NM00001 EQU   DATENOW+3                                                04457000
DAYNOW   EQU   DATENOW                                                  04458000
CSNAP    EQU   CLOSEIO                                                  04459000
CSYSIN   EQU   CLOSEIO                                                  04460000
CACCDEV  EQU   CLOSEIO                                                  04461000
CACCIN   EQU   CLOSEIO                                                  04462000
CEREPPT  EQU   CLOSEIO                                                  04463000
CTOURIST EQU   CLOSEIO                                                  04464000
OSNAP    EQU   OPENIO                                                   04465000
ODRCTWRK EQU   OPENIO                                                   04466000
OSYSIN   EQU   OPENIO                                                   04467000
OACCDEV  EQU   OPENIO                                                   04468000
OACCIN   EQU   OPENIO                                                   04469000
OSERLOG  EQU   OPENIO                                                   04470000
OEREPPT  EQU   OPENIO                                                   04471000
OTOURIST EQU   OPENIO                                                   04472000
ERRORID  EQU   MISC                                                     04473000
PSUM     EQU   PRINTES                                                  04474000
PEDIT    EQU   PRINTES                                                  04475000
PACC     EQU   MISC                                                     04476000
PZERO    EQU   MISC                                                     04477000
DEBUG63  EQU   DEBUGA+3                                                 04478000
DEBUG62  EQU   DEBUGA+3                                                 04479000
DEBUG61  EQU   DEBUGA+3                                                 04480000
DEBUG60  EQU   DEBUGA+3                                                 04481000
DEBUG59  EQU   DEBUGA+3                                                 04482000
DEBUG58  EQU   DEBUGA+3                                                 04483000
DEBUG57  EQU   DEBUGA+3                                                 04484000
DEBUG56  EQU   DEBUGA+3                                                 04485000
DEBUG55  EQU   DEBUGA+2                                                 04486000
DEBUG54  EQU   DEBUGA+2                                                 04487000
DEBUG53  EQU   DEBUGA+2                                                 04488000
DEBUG52  EQU   DEBUGA+2                                                 04489000
DEBUG51  EQU   DEBUGA+2                                                 04490000
DEBUG50  EQU   DEBUGA+2                                                 04491000
DEBUG49  EQU   DEBUGA+2                                                 04492000
DEBUG48  EQU   DEBUGA+2                                                 04493000
DEBUG47  EQU   DEBUGA+1                                                 04494000
DEBUG46  EQU   DEBUGA+1                                                 04495000
DEBUG45  EQU   DEBUGA+1                                                 04496000
DEBUG44  EQU   DEBUGA+1                                                 04497000
DEBUG43  EQU   DEBUGA+1                                                 04498000
DEBUG42  EQU   DEBUGA+1                                                 04499000
DEBUG41  EQU   DEBUGA+1                                                 04500000
DEBUG40  EQU   DEBUGA+1                                                 04501000
DEBUG39  EQU   DEBUGA                                                   04502000
DEBUG38  EQU   DEBUGA                                                   04503000
DEBUG37  EQU   DEBUGA                                                   04504000
DEBUG36  EQU   DEBUGA                                                   04505000
DEBUG35  EQU   DEBUGA                                                   04506000
DEBUG34  EQU   DEBUGA                                                   04507000
DEBUG33  EQU   DEBUGA                                                   04508000
DEBUG32  EQU   DEBUGA                                                   04509000
DEBUG31  EQU   DEBUG+3                                                  04510000
DEBUG30  EQU   DEBUG+3                                                  04511000
DEBUG29  EQU   DEBUG+3                                                  04512000
DEBUG28  EQU   DEBUG+3                                                  04513000
DEBUG26  EQU   DEBUG+3                                                  04514000
DEBUG25  EQU   DEBUG+3                                                  04515000
DEBUG24  EQU   DEBUG+3                                                  04516000
DEBUG23  EQU   DEBUG+2                                                  04517000
DEBUG22  EQU   DEBUG+2                                                  04518000
DEBUG21  EQU   DEBUG+2                                                  04519000
DEBUG20  EQU   DEBUG+2                                                  04520000
DEBUG19  EQU   DEBUG+2                                                  04521000
DEBUG18  EQU   DEBUG+2                                                  04522000
DEBUG17  EQU   DEBUG+2                                                  04523000
DEBUG15  EQU   DEBUG+1                                                  04524000
DEBUG14  EQU   DEBUG+1                                                  04525000
DEBUG13  EQU   DEBUG+1                                                  04526000
DEBUG10  EQU   DEBUG+1                                                  04527000
DEBUG9   EQU   DEBUG+1                                                  04528000
DEBUG7   EQU   DEBUG                                                    04529000
DEBUG6   EQU   DEBUG                                                    04530000
DEBUG5   EQU   DEBUG                                                    04531000
DEBUG3   EQU   DEBUG                                                    04532000
DEBUG2   EQU   DEBUG                                                    04533000
DEBUG1   EQU   DEBUG                                                    04534000
DEBUG0   EQU   DEBUG                                                    04535000
SORTBRK  EQU   SWITCHES+1                                               04536000
COREFAIL EQU   SWITCHES+1                                               04537000
ANALYSIS EQU   SWITCHES+1                                               04538000
DEVEXCL  EQU   SWITCHES+1                                               04539000
ZEROALL  EQU   SWITCHES+1                                               04540000
NOTALL   EQU   SWITCHES+1                                               04541000
NOSDR    EQU   SWITCHES                                                 04542000
TIMESEQ  EQU   SWITCHES                                                 04543000
SYSUM    EQU   SWITCHES                                                 04544000
PARMTHR  EQU   SWITCHES                                                 04545000
TREND    EQU   SWITCHES                                                 04546000
SHORTOBR EQU   SWITCHES                                                 04547000
PARMMES  EQU   SWITCHES                                                 04548000
RDESUM   EQU   SWITCHES                                                 04549000
PCCHFRAM EQU   RECTYPE+1                                                04550000
PMCHFRAM EQU   RECTYPE+1                                                04551000
PTTYP    EQU   RECTYPE+1                                                04552000
PEOD     EQU   RECTYPE                                                  04553000
PMIH     EQU   RECTYPE                                                  04554000
PDDR     EQU   RECTYPE                                                  04555000
PIPL     EQU   RECTYPE                                                  04556000
PSOFT    EQU   RECTYPE                                                  04557000
POBR     EQU   RECTYPE                                                  04558000
PCHAN    EQU   RECTYPE                                                  04559000
PMCH     EQU   RECTYPE                                                  04560000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      04561000
@RC00272 EQU   @RC00271                                                 04562000
@RF00422 EQU   @EL00009                                                 04563000
@RF00444 EQU   @EL00010                                                 04564000
@RC00614 EQU   @RC00613                                                 04565000
@RC00546 EQU   @EL00012                                                 04566000
@RF00654 EQU   @EL00013                                                 04567000
@RC00646 EQU   @EL00013                                                 04568000
@RF00668 EQU   @EL00014                                                 04569000
@RF00683 EQU   @EL00015                                                 04570000
@RF00766 EQU   @EL00018                                                 04571000
@RC00773 EQU   @EL00018                                                 04572000
@RF00858 EQU   @RC00856                                                 04573000
@RC00966 EQU   @EL00028                                                 04574000
@RC00986 EQU   @RC00984                                                 04575000
@RF01009 EQU   @EL00029                                                 04576000
@RF01035 EQU   @EL00029                                                 04577000
@RF01043 EQU   @EL00029                                                 04578000
@RC01041 EQU   @EL00029                                                 04579000
@RC01039 EQU   @EL00029                                                 04580000
@RC01037 EQU   @EL00029                                                 04581000
@PB00029 EQU   @PB00030                                                 04582000
@RF01078 EQU   @EL00030                                                 04583000
@RF01127 EQU   @RC01099                                                 04584000
@RF01148 EQU   @EL00001                                                 04585000
@RF00649 EQU   @RC00646                                                 04586000
@PB00028 EQU   @PB00029                                                 04587000
@RC00988 EQU   @RC00986                                                 04588000
@PB00027 EQU   @PB00028                                                 04589000
@RC00990 EQU   @RC00988                                                 04590000
@PB00026 EQU   @PB00027                                                 04591000
@RC00992 EQU   @RC00990                                                 04592000
@PB00025 EQU   @PB00026                                                 04593000
@PB00024 EQU   @PB00025                                                 04594000
@PB00023 EQU   @PB00024                                                 04595000
@PB00022 EQU   @PB00023                                                 04596000
@PB00021 EQU   @PB00022                                                 04597000
@PB00020 EQU   @PB00021                                                 04598000
@PB00019 EQU   @PB00020                                                 04599000
@PB00018 EQU   @PB00019                                                 04600000
@PB00017 EQU   @PB00018                                                 04601000
@PB00016 EQU   @PB00017                                                 04602000
@PB00015 EQU   @PB00016                                                 04603000
@PB00014 EQU   @PB00015                                                 04604000
@PB00013 EQU   @PB00014                                                 04605000
@PB00012 EQU   @PB00013                                                 04606000
@PB00011 EQU   @PB00012                                                 04607000
@PB00010 EQU   @PB00011                                                 04608000
@PB00009 EQU   @PB00010                                                 04609000
@PB00008 EQU   @PB00009                                                 04610000
@PB00007 EQU   @PB00008                                                 04611000
@PB00006 EQU   @PB00007                                                 04612000
@PB00005 EQU   @PB00006                                                 04613000
@PB00004 EQU   @PB00005                                                 04614000
@PB00003 EQU   @PB00004                                                 04615000
@PB00002 EQU   @PB00003                                                 04616000
@ENDDATA EQU   *                                                        04617000
         END   IFCTHRSH,(C'PLS0947',0701,77316)                         04618000
