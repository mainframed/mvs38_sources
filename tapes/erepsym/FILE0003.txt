./  ADD  SSI=90101240,NAME=IFCSYSUM
         TITLE 'IFCSYSUM-SYSTEM SUMMARY FOR EREP PROCESSING'            00001000
IFCSYSUM CSECT ,                                                   0001 00002000
@MAINENT DS    0H                                                  0001 00003000
         USING *,@15                                               0001 00004000
         B     @PROLOG                                             0001 00005000
         DC    AL1(16)                                             0001 00006000
         DC    C'IFCSYSUM  79.011'                                 0001 00007000
         DROP  @15                                                      00008000
@PROLOG  ST    @14,12(,@13)                                        0001 00009000
         STM   @00,@12,20(@13)                                     0001 00010000
         BALR  @10,0                                               0001 00011000
@PSTART  LA    @11,4095(,@10)                                      0001 00012000
         LA    @12,4095(,@11)                                      0001 00013000
         USING @PSTART,@10                                         0001 00014000
         USING @PSTART+4095,@11                                    0001 00015000
         USING @PSTART+8190,@12                                    0001 00016000
         ST    @13,@SA00001+4                                      0001 00017000
         LA    @14,@SA00001                                        0001 00018000
         ST    @14,8(,@13)                                         0001 00019000
         LR    @13,@14                                             0001 00020000
         B     @PB00002                                            0145 00021000
CONVBIN  STM   @14,@12,@SA00002                                    0145 00022000
* R8 = BINWORD;                  /*LOAD THE ITEM TO CONVERT  @Z427VLS*/ 00023000
         L     R8,BINWORD                                          0146 00024000
* GEN(CVD   R8,DBLWORD);         /*CONVERT THE NUMBER        @Z427VLS*/ 00025000
         CVD   R8,DBLWORD                                               00026000
* GEN(UNPK   WORK(8),DBLWORD);   /*UNPACK THE CONVERTED NUMBER       */ 00027000
         UNPK   WORK(8),DBLWORD                                         00028000
* GEN(OI  WORK+7,X'F0');         /*MAKE SURE NO PROBLEM      @Z427VLS*/ 00029000
         OI  WORK+7,X'F0'                                               00030000
* SWITCH4 = OFF;                 /*CLEAR THE SWITCH PRIOR TO START   */ 00031000
         NI    SWITCH4,B'11101111'                                 0150 00032000
* DO L = 1 BY 1 TO 7 WHILE (SWITCH4 = OFF);                /*@Z427VLS*/ 00033000
         LA    @03,1                                               0151 00034000
         ST    @03,L                                               0151 00035000
@DL00151 TM    SWITCH4,B'00010000'                                 0151 00036000
         BNZ   @DC00151                                            0151 00037000
*  IF WORKOVER(L)  = 'F0'X       /*IS IT A 0 IF SO MAKE IT A BLANK   */ 00038000
*    THEN                                                          0152 00039000
         LA    @01,WORKOVER-1(@03)                                 0152 00040000
         CLI   0(@01),X'F0'                                        0152 00041000
         BNE   @RF00152                                            0152 00042000
*      WORKOVER(L) = '40'X;      /*SET TO A BLANK            @Z427VLS*/ 00043000
         LA    @01,WORKOVER-1(@03)                                 0153 00044000
         MVI   0(@01),X'40'                                        0153 00045000
*    ELSE                                                          0154 00046000
*      SWITCH4 = ON;             /*SET SWITCH TO TERMINATE DO LOOP   */ 00047000
         B     @RC00152                                            0154 00048000
@RF00152 OI    SWITCH4,B'00010000'                                 0154 00049000
* END;                                                     /*@Z427VLS*/ 00050000
@RC00152 LA    @03,1                                               0155 00051000
         AL    @03,L                                               0155 00052000
         ST    @03,L                                               0155 00053000
         C     @03,@CF00080                                        0155 00054000
         BNH   @DL00151                                            0155 00055000
@DC00151 DS    0H                                                  0156 00056000
* IF (TEN   - L) > BNDECNUM      /*IS THE CONVERTED NUMBER TO LARGE  */ 00057000
*    THEN                                                          0156 00058000
         L     @03,TEN                                             0156 00059000
         SL    @03,L                                               0156 00060000
         C     @03,BNDECNUM                                        0156 00061000
         BNH   @RF00156                                            0156 00062000
*      DO;                                                 /*@Z427VLS*/ 00063000
*        GEN(MVI   WORKOVER,X'F9');  /*SET FIRST NINE IN THE MEASSAGE*/ 00064000
         MVI   WORKOVER,X'F9'                                           00065000
*        GEN(MVC   WORKOVER+1(7),WORKOVER);/*FILL WITH NINES @Z427VLS*/ 00066000
         MVC   WORKOVER+1(7),WORKOVER                                   00067000
*      END;                                                /*@Z427VLS*/ 00068000
* R8 = ADDR(WORKOVER) + (8-BNDECNUM);/*SET WHERE TO MOVE FROM ADDRESS*/ 00069000
@RF00156 LA    R8,WORKOVER                                         0161 00070000
         L     @03,BNDECNUM                                        0161 00071000
         LA    @15,8                                               0161 00072000
         SLR   @15,@03                                             0161 00073000
         ALR   R8,@15                                              0161 00074000
* R9 = BNDECNUM - ONE;           /*NUMBER OF BYTES TO MOVE   @Z427VLS*/ 00075000
         SL    @03,ONE                                             0162 00076000
         LR    R9,@03                                              0162 00077000
* RESPECIFY (R6) RESTRICTED;                               /*@Z427VLS*/ 00078000
* R6 = DECADDR;                  /*ADDRESS TO MOVE TO        @Z427VLS*/ 00079000
         L     R6,DECADDR                                          0164 00080000
* GEN(EX    R9,MVCINS);          /*MOVE DATA TO REQUESTED LOCATION   */ 00081000
         EX    R9,MVCINS                                                00082000
* GENERATE DATA;                                           /*@Z427VLS*/ 00083000
* RESPECIFY (R6) UNRESTRICTED;                             /*@Z427VLS*/ 00084000
*END;                                                      /*@Z427VLS*/ 00085000
@EL00002 DS    0H                                                  0168 00086000
@EF00002 DS    0H                                                  0168 00087000
@ER00002 LM    @14,@12,@SA00002                                    0168 00088000
         BR    @14                                                 0168 00089000
*/********************************************************************/ 00090000
*/* * * * * * * * * * * * * * * * * * * * * * *  * * * * * * * * * * */ 00091000
*/*    THIS PROC WILL CONVERT THE HEX DATA INTO PRINTABLE    @Z427VLS*/ 00092000
*/*                                                          @Z427VLS*/ 00093000
*/*    IF IT IS NECESSARY TO CONVERT ONLY 1/2 OF FIRST BYTE(CUA FOR  */ 00094000
*/*    EXP. THEN THE USER SHOULD SET THE SWITCH1 TO THEON CONDITION  */ 00095000
*CONVERT: PROC;                                            /*@Z427VLS*/ 00096000
CONVERT  STM   @14,@12,12(@13)                                     0169 00097000
* DO P = NUMBER BY -1 TO 1;      /*# = # OF BYTES TO CONVERT TO PRINT*/ 00098000
         L     @03,NUMBER                                          0170 00099000
         ST    @03,P                                               0170 00100000
         B     @DE00170                                            0170 00101000
@DL00170 DS    0H                                                  0171 00102000
*   R8 = NEXTBYTE(P);            /*LOAD THE NEXT BYTE TO CONVERT     */ 00103000
         L     @01,NEXTBY                                          0171 00104000
         BCTR  @01,0                                               0171 00105000
         SLR   R8,R8                                               0171 00106000
         IC    R8,NEXTBYTE(@03,@01)                                0171 00107000
*   X =  TWO * P;                /*OUTPUT INDEX MUST BE TWICE INPUT  */ 00108000
         L     @01,TWO                                             0172 00109000
         MR    @00,@03                                             0172 00110000
         ST    @01,X                                               0172 00111000
*   SRDL  (R8,FOUR);             /*MOVE 1/2 IN TO NEXT REG   @Z427VLS*/ 00112000
         SRDL  R8,4                                                0173 00113000
*   SRL   (R9,TWOEIGHT);         /*SHIFT THE REG 28 BITS     @Z427VLS*/ 00114000
         L     @15,TWOEIGHT                                        0174 00115000
         SRL   R9,0(@15)                                           0174 00116000
*   R9  =  R9 + NUMBER1;         /*INSURE INDEX BY 0 DOES NOT AFFECT */ 00117000
         L     @15,NUMBER1                                         0175 00118000
         ALR   R9,@15                                              0175 00119000
*   R8  =  R8 + NUMBER1;         /*SAME                      @Z427VLS*/ 00120000
         ALR   R8,@15                                              0176 00121000
*   IF SWITCH1 = ON & P = ONE    /*DO WE NOT PUT THE HALF BYTE OUT   */ 00122000
*    THEN                                                          0177 00123000
         TM    SWITCH1,B'10000000'                                 0177 00124000
         BNO   @RF00177                                            0177 00125000
         C     @03,ONE                                             0177 00126000
         BNE   @RF00177                                            0177 00127000
*     SWITCH1 = OFF;             /*TURN OFF THE SWITCH       @Z427VLS*/ 00128000
         NI    SWITCH1,B'01111111'                                 0178 00129000
*    ELSE                                                          0179 00130000
*     ADDNUM(X-ONE) = CHARS(R8);/*PUT THE PRINT CHAR INTO THE OUTPUT*/  00131000
         B     @RC00177                                            0179 00132000
@RF00177 L     @03,X                                               0179 00133000
         SL    @03,ONE                                             0179 00134000
         L     @01,ADDNXT                                          0179 00135000
         ALR   @01,@03                                             0179 00136000
         BCTR  @01,0                                               0179 00137000
         LA    @03,CHARS-1(R8)                                     0179 00138000
         MVC   ADDNUM(1,@01),0(@03)                                0179 00139000
*     ADDNUM(X)  = CHARS(R9);   /*FINSH THE BYTE             @Z427VLS*/ 00140000
@RC00177 L     @03,ADDNXT                                          0180 00141000
         AL    @03,X                                               0180 00142000
         BCTR  @03,0                                               0180 00143000
         LA    @01,CHARS-1(R9)                                     0180 00144000
         MVC   ADDNUM(1,@03),0(@01)                                0180 00145000
* END;                                                     /*@Z427VLS*/ 00146000
         SLR   @03,@03                                             0181 00147000
         BCTR  @03,0                                               0181 00148000
         AL    @03,P                                               0181 00149000
         ST    @03,P                                               0181 00150000
@DE00170 LTR   @03,@03                                             0181 00151000
         BP    @DL00170                                            0181 00152000
*END;                                                      /*@Z427VLS*/ 00153000
@EL00003 DS    0H                                                  0182 00154000
@EF00003 DS    0H                                                  0182 00155000
@ER00003 LM    @14,@12,12(@13)                                     0182 00156000
         BR    @14                                                 0182 00157000
*/********************************************************************/ 00158000
*/* * * * * * * * * * * * * * * * * * * * * * *  * * * * * * * * * * */ 00159000
*/*    THIS PROC WILL FORMAT THE DATE OF THE RUN & THE START STOP    */ 00160000
*/*    DATES OF THE DATA AND PRINT THE TOP THREE LINES OF THE HEADING*/ 00161000
*/*    FOR THE PART-1 OUTPUT                                 @Z427VLS*/ 00162000
*/*                                                          @Z427VLS*/ 00163000
*HEADING1:  PROC;                                          /*@Z427VLS*/ 00164000
HEADING1 STM   @14,@12,@SA00004                                    0183 00165000
*  SPACING = UPSPACE;      /*SET FOR A NEW PAGE              @Z427VLS*/ 00166000
         MVC   SPACING(1),UPSPACE                                  0184 00167000
*  CALL PRINTIT;                                           /*@Z427VLS*/ 00168000
         BAL   @14,PRINTIT                                         0185 00169000
*  SPACING = SINGLE;                                       /*@Z427VLS*/ 00170000
         MVC   SPACING(1),SINGLE                                   0186 00171000
*  DAYSDATE = DATENOW;     /*MOVE TODAYS DATE FROM PARM TABLE        */ 00172000
         MVC   DAYSDATE(6),DATENOW(R2)                             0187 00173000
*  HEADMOVE= LINE1;        /*MOVE IN THE FIRST LINE OF THE HEADING   */ 00174000
         MVC   HEADMOVE(59),LINE1                                  0188 00175000
*  CALL PRINTIT;           /*GO PRINT THE FIRST LINE OF THE HEADING  */ 00176000
         BAL   @14,PRINTIT                                         0189 00177000
*  NUMBER = TWO;           /*SET UP TO CONVERT TWO BYTES OF DATA     */ 00178000
         L     @03,TWO                                             0190 00179000
         ST    @03,NUMBER                                          0190 00180000
*  SRL(EVSDAY,FOUR);      /*DROP THE SIGN 1/2 BYTE           @Z427VLS*/ 00181000
         LH    @03,EVSDAY(,R2)                                     0191 00182000
         N     @03,@CF00924                                        0191 00183000
         SRL   @03,4                                               0191 00184000
         STH   @03,EVSDAY(,R2)                                     0191 00185000
*  NEXTBY = ADDR(EVSDAY);  /*SET WHERE TO FIND THE DATA TO CONVERT   */ 00186000
         LA    @03,EVSDAY(,R2)                                     0192 00187000
         ST    @03,NEXTBY                                          0192 00188000
*  ADDNXT = ADDR(FROMDATE)-1;/*  WHERE TO PUT THE CONVERTED TO PRINT */ 00189000
         LA    @03,FROMDATE                                        0193 00190000
         BCTR  @03,0                                               0193 00191000
         ST    @03,ADDNXT                                          0193 00192000
*  SWITCH1 = ON;           /*SET SO WILL NOT CONVERT THE LAST 1/2 BYT*/ 00193000
         OI    SWITCH1,B'10000000'                                 0194 00194000
*  CALL CONVERT;           /*GO AND CONVERT THE DATA TO PRINTABLE    */ 00195000
         BAL   @14,CONVERT                                         0195 00196000
*  NUMBER = ONE;           /*SET UP TO CONVERT ONE BYTE  OF DATA     */ 00197000
         L     @03,ONE                                             0196 00198000
         ST    @03,NUMBER                                          0196 00199000
*  NEXTBY = ADDR(EVSYEAR); /*SET WHERE TO FIND THE YEAR TO CONVERT   */ 00200000
         LA    @03,EVSYEAR(,R2)                                    0197 00201000
         ST    @03,NEXTBY                                          0197 00202000
*  ADDNXT = ADDR(FROMYEAR);/*SET WHERE TO PUT CONVERTED YEAR @Z427VLS*/ 00203000
         LA    @03,FROMYEAR                                        0198 00204000
         ST    @03,ADDNXT                                          0198 00205000
*  CALL CONVERT;           /*GO AND CONVERT THE YEAR TO PRINTABLE    */ 00206000
         BAL   @14,CONVERT                                         0199 00207000
*  HEADMOVE= LINE2;        /*MOVE SECOND LINE OF THE HEADING INTO LNE*/ 00208000
         MVC   HEADMOVE(59),LINE2                                  0200 00209000
*  CALL PRINTIT;           /*GO AND PRINT THE SECOND LINE OF HEADING */ 00210000
         BAL   @14,PRINTIT                                         0201 00211000
*  SRL(EVDAY,FOUR);        /*HAVE TO SHIFT OUT THE F IN THE DAY      */ 00212000
         L     @03,EVPTR(,R2)                                      0202 00213000
         SLR   @15,@15                                             0202 00214000
         ICM   @15,3,EVDAY(@03)                                    0202 00215000
         SRL   @15,4                                               0202 00216000
         STCM  @15,3,EVDAY(@03)                                    0202 00217000
*  NEXTBY = ADDR(EVDAY);   /*SET UP ADDRESS OF THE LAST DAY OF INPUT */ 00218000
         LA    @03,EVDAY(,@03)                                     0203 00219000
         ST    @03,NEXTBY                                          0203 00220000
*  ADDNXT = ADDR(TODATE)-1;/*WHERE TO PUT THE CONVERTED DAY  @Z427VLS*/ 00221000
         LA    @03,TODATE                                          0204 00222000
         BCTR  @03,0                                               0204 00223000
         ST    @03,ADDNXT                                          0204 00224000
*  SWITCH1 = ON;           /*AS DAY IS 3 BYTES SET TO DROP 1/2 BYTE  */ 00225000
         OI    SWITCH1,B'10000000'                                 0205 00226000
*  NUMBER = TWO;           /*SET TO PROCESS TWO BYTES OF DATA        */ 00227000
         L     @03,TWO                                             0206 00228000
         ST    @03,NUMBER                                          0206 00229000
*  CALL CONVERT;           /*GO AND CONVERT THE DAY TO PRINTABLE     */ 00230000
         BAL   @14,CONVERT                                         0207 00231000
*  NUMBER = ONE;           /*SET UP FOR ONE BYTE IN 2 OUT IN PRINTABL*/ 00232000
         L     @03,ONE                                             0208 00233000
         ST    @03,NUMBER                                          0208 00234000
*  ADDNXT = ADDR(TOYEAR);  /*ADDRESS OF WHERE TO PUT CONVERTED DATA  */ 00235000
         LA    @03,TOYEAR                                          0209 00236000
         ST    @03,ADDNXT                                          0209 00237000
*  NEXTBY = ADDR(EVYEAR);  /*ADDRESS OF WHERE THE DATA TO CONVERT IS */ 00238000
         L     @03,EVPTR(,R2)                                      0210 00239000
         ST    @03,NEXTBY                                          0210 00240000
*  CALL CONVERT;           /*GO CONVERT THE DATA TO PRINTABLE        */ 00241000
         BAL   @14,CONVERT                                         0211 00242000
*  HEADMOVE= LINE3;        /*MOVE THE LAST HEADING TO PRINT BUFFER   */ 00243000
         MVC   HEADMOVE(59),LINE3                                  0212 00244000
*  CALL PRINTIT;           /*GO AND PRINT THE LAST LINE      @Z427VLS*/ 00245000
         BAL   @14,PRINTIT                                         0213 00246000
*  SPACING= DOUBLE;        /*SPACE THE PAGE UP 3 LINES       @Z427VLS*/ 00247000
         MVC   SPACING(1),DOUBLE                                   0214 00248000
*  CALL PRINTIT;           /*GO UPSPACE THE PRINTABLE        @Z427VLS*/ 00249000
         BAL   @14,PRINTIT                                         0215 00250000
*  R9 =SIX * EVNUM + FIVE; /*SET UP NUMBER OF CHARS/CPU + TOTAL      */ 00251000
         L     @03,EVPTR(,R2)                                      0216 00252000
         L     R9,SIX                                              0216 00253000
         MH    R9,EVNUM(,@03)                                      0216 00254000
         AL    R9,FIVE                                             0216 00255000
*  R8 = ADDR(TOTAHED);                                     /*@Z427VLS*/ 00256000
         LA    R8,TOTAHED                                          0217 00257000
*  RESPECIFY (R6) RESTRICTED;                              /*@Z427VLS*/ 00258000
*  R6 = ADDR(PRTLINE) + 20;                                /*@Z427VLS*/ 00259000
         LA    R6,PRTLINE                                          0219 00260000
         AL    R6,@CF00734                                         0219 00261000
*  RESPECIFY (R6) UNRESTRICTED;                            /*@Z427VLS*/ 00262000
*  GEN(EX   R9,MOVETOTL);  /*EXEC MOVE CHAR R9 = # OF CHARS TO MOVE  */ 00263000
         EX   R9,MOVETOTL                                               00264000
*  CALL PRINTIT;           /*GO PRINT THE LINE WITH TOTAL & CPU-A ETC*/ 00265000
         BAL   @14,PRINTIT                                         0222 00266000
*  SPACING= SINGLE;        /*GO BACK TO SINGLE SPACING       @Z427VLS*/ 00267000
         MVC   SPACING(1),SINGLE                                   0223 00268000
*  GENERATE DATA;                                          /*@Z427VLS*/ 00269000
*END;                                                      /*@Z427VLS*/ 00270000
@EL00004 DS    0H                                                  0225 00271000
@EF00004 DS    0H                                                  0225 00272000
@ER00004 LM    @14,@12,@SA00004                                    0225 00273000
         BR    @14                                                 0225 00274000
*/********************************************************************/ 00275000
*/* * * * * * * * * * * * * * * * * * * * * * *  * * * * * * * * * * */ 00276000
*/*   THIS PROC WILL CONTROL THE OUTPUT FOR PART-1 BY CALLING PROCS  */ 00277000
*/*   TO PROCESS EACH DIFFERENT SECTION OF THE REPORT        @Z427VLS*/ 00278000
*/*                                                          @Z427VLS*/ 00279000
*TOTAL1:  PROC;                                            /*@Z427VLS*/ 00280000
TOTAL1   STM   @14,@12,@SA00005                                    0226 00281000
* ADDRSAVE = SYSUMPTR;       /*SAVE ADDRESS OF THE FIRST TABLE       */ 00282000
         L     ADDRSAVE,SYSUMPTR(,R2)                              0227 00283000
* CALL IPLWORK;                /*GO FORMAT CONVERT AND PRINT IPL DATA*/ 00284000
         BAL   @14,IPLWORK                                         0228 00285000
* CALL MCHWORK;                /*GO PROCESS INFO ABOUT MCH RECORDS   */ 00286000
         BAL   @14,MCHWORK                                         0229 00287000
* CALL CCHWORK;                /*GO PROCESS CCH TYPE DATA    @Z427VLS*/ 00288000
         BAL   @14,CCHWORK                                         0230 00289000
* CALL PROGERR;               /*HANDLE SOFTWARE DATA         @Z427VLS*/ 00290000
         BAL   @14,PROGERR                                         0231 00291000
* CALL EODWORK;                /*GO PROCESS EOD RECORDS IF ANY       */ 00292000
         BAL   @14,EODWORK                                         0232 00293000
* CALL PRT1TOT;                /*PRINT THE TOTAL FOR ALL     @Z427VLS*/ 00294000
         BAL   @14,PRT1TOT                                         0233 00295000
* IF DEBUG21 = ON THEN         /*REQUESTING HEX-DUMP OF PART 1 INFO  */ 00296000
         TM    DEBUG21(R2),B'00000100'                             0234 00297000
         BNO   @RF00234                                            0234 00298000
*  DO;                                                     /*@Z427VLS*/ 00299000
*   DDTYPE = 'F1'X;           /*MOVE OUTPUT TO TOURIST  DD   @Z427VLS*/ 00300000
         MVI   DDTYPE,X'F1'                                        0236 00301000
*   DO I = 1 BY 1 TO NUMTODO;                              /*@Z427VLS*/ 00302000
         LA    @15,1                                               0237 00303000
         ST    @15,I                                               0237 00304000
         B     @DE00237                                            0237 00305000
@DL00237 DS    0H                                                  0238 00306000
*    ADDNXT = ADDR(PRTLINE);  /*ADDRESS OF WHERE TO PUT OUTPUT       */ 00307000
         LA    @15,PRTLINE                                         0238 00308000
         ST    @15,ADDNXT                                          0238 00309000
*    NEXTBY = SYSUMPTR;       /*WHERE THE DATA IS TO HEX DUMP        */ 00310000
         L     @15,SYSUMPTR(,R2)                                   0239 00311000
         ST    @15,NEXTBY                                          0239 00312000
*    NUMBER = 52;             /*HAD TO STOP SOMEWHERE TO MANY FOR 1  */ 00313000
         MVC   NUMBER(4),@CF00834                                  0240 00314000
*    CALL CONVERT;            /*SET UP CORE DATA FOR PRINTING        */ 00315000
         BAL   @14,CONVERT                                         0241 00316000
*    CALL PRINTIT;            /*PRINT THE FIRST LINE         @Z427VLS*/ 00317000
         BAL   @14,PRINTIT                                         0242 00318000
*    NEXTBY = NEXTBY + 52;    /*MOVE POINTER PAST ALREADY DONE DATA  */ 00319000
         LA    @15,52                                              0243 00320000
         AL    @15,NEXTBY                                          0243 00321000
         ST    @15,NEXTBY                                          0243 00322000
*    NUMBER = 48;             /*SET UP TO PRINT REST OF TABLE        */ 00323000
         MVC   NUMBER(4),@CF00835                                  0244 00324000
*    CALL CONVERT;            /*GO CONVERT DATA TO PRINTABLE @Z427VLS*/ 00325000
         BAL   @14,CONVERT                                         0245 00326000
*    CALL PRINTIT;                                         /*@Z427VLS*/ 00327000
         BAL   @14,PRINTIT                                         0246 00328000
*    SYSUMPTR = SYSUMNXT;     /*SET ADDRESSABILITY FOR NEXT TABLE    */ 00329000
         L     @01,SYSUMPTR(,R2)                                   0247 00330000
         L     @15,SYSUMNXT(,@01)                                  0247 00331000
         ST    @15,SYSUMPTR(,R2)                                   0247 00332000
*   END;                                                   /*@Z427VLS*/ 00333000
         LA    @15,1                                               0248 00334000
         AL    @15,I                                               0248 00335000
         ST    @15,I                                               0248 00336000
@DE00237 C     @15,NUMTODO                                         0248 00337000
         BNH   @DL00237                                            0248 00338000
*  SYSUMPTR = ADDRSAVE;       /*RESTORE ADDRESS POINTER TO START     */ 00339000
         ST    ADDRSAVE,SYSUMPTR(,R2)                              0249 00340000
*  DDTYPE = 'F0'X;            /*RETURN TO THE CORRECT PRINT DATA SET */ 00341000
         MVI   DDTYPE,X'F0'                                        0250 00342000
* END;                                                     /*@Z427VLS*/ 00343000
*END;                                                      /*@Z427VLS*/ 00344000
@EL00005 DS    0H                                                  0252 00345000
@EF00005 DS    0H                                                  0252 00346000
@ER00005 LM    @14,@12,@SA00005                                    0252 00347000
         BR    @14                                                 0252 00348000
*/********************************************************************/ 00349000
*/* * * * * * * * * * * * * * * * * * * * * * *  * * * * * * * * * * */ 00350000
*/*    THIS PROC WILL PROCESS THE DATA FOR PROGERR DATA      @Z427VLS*/ 00351000
*PROGERR: PROC;                                            /*@Z427VLS*/ 00352000
PROGERR  STM   @14,@12,@SA00006                                    0253 00353000
* COUNTER = 22;                /*SET INDEX TO PROGER         @Z427VLS*/ 00354000
         MVC   COUNTER(4),@CF00483                                 0254 00355000
* CALL PRINTIT;                                            /*@Z427VLS*/ 00356000
         BAL   @14,PRINTIT                                         0255 00357000
* DATAINFO = DISCRIPT(COUNTER);/*MOVE MAIN HEADING FOR PROGERR IN    */ 00358000
         L     @15,COUNTER                                         0256 00359000
         MH    @15,@CH00474                                        0256 00360000
         LA    @14,DISCRIPT-17(@15)                                0256 00361000
         MVC   DATAINFO(17),0(@14)                                 0256 00362000
* CALL PRINTIT;                 /*PRINT THE HEADING          @Z427VLS*/ 00363000
         BAL   @14,PRINTIT                                         0257 00364000
* CALL PRINTIT;                /*ADD A BLANK LINE            @Z427VLS*/ 00365000
         BAL   @14,PRINTIT                                         0258 00366000
* COUNTER = COUNTER + ONE;      /*SPACE TO FIRST SUB GROUP OF PROGERR*/ 00367000
         L     @15,COUNTER                                         0259 00368000
         AL    @15,ONE                                             0259 00369000
         ST    @15,COUNTER                                         0259 00370000
* DATAINFO = DISCRIPT(COUNTER);                            /*@Z427VLS*/ 00371000
         MH    @15,@CH00474                                        0260 00372000
         LA    @14,DISCRIPT-17(@15)                                0260 00373000
         MVC   DATAINFO(17),0(@14)                                 0260 00374000
* DECADDR = ADDR(TOTAL);                                   /*@Z427VLS*/ 00375000
         LA    @15,TOTAL                                           0261 00376000
         ST    @15,DECADDR                                         0261 00377000
* DO I = 1 BY 1 TO NUMTODO;                                /*@Z427VLS*/ 00378000
         LA    @15,1                                               0262 00379000
         ST    @15,I                                               0262 00380000
         B     @DE00262                                            0262 00381000
@DL00262 DS    0H                                                  0263 00382000
*  BINWORD = SYSUMPEI;                                     /*@Z427VLS*/ 00383000
         L     @01,SYSUMPTR(,R2)                                   0263 00384000
         L     @14,SYSUMPEI(,@01)                                  0263 00385000
         ST    @14,BINWORD                                         0263 00386000
*   TOTALPRM(I) = TOTALPRM(I) + BINWORD; /*KEEP TRACK OF OVERALL TOT*/  00387000
         SLA   @15,2                                               0264 00388000
         AL    @14,TOTALPRM-4(@15)                                 0264 00389000
         ST    @14,TOTALPRM-4(@15)                                 0264 00390000
*  CALL CONVBIN;                                           /*@Z427VLS*/ 00391000
         BAL   @14,CONVBIN                                         0265 00392000
*  DECADDR = DECADDR + SIX;                                /*@Z427VLS*/ 00393000
         L     @15,DECADDR                                         0266 00394000
         AL    @15,SIX                                             0266 00395000
         ST    @15,DECADDR                                         0266 00396000
*  SYSUMPTR = SYSUMNXT;         /*KEEP THE ADDRESABITY CORRECT       */ 00397000
         L     @01,SYSUMPTR(,R2)                                   0267 00398000
         L     @15,SYSUMNXT(,@01)                                  0267 00399000
         ST    @15,SYSUMPTR(,R2)                                   0267 00400000
* END;                                                     /*@Z427VLS*/ 00401000
         LA    @15,1                                               0268 00402000
         AL    @15,I                                               0268 00403000
         ST    @15,I                                               0268 00404000
@DE00262 C     @15,NUMTODO                                         0268 00405000
         BNH   @DL00262                                            0268 00406000
* CALL PRINTIT;                                            /*@Z427VLS*/ 00407000
         BAL   @14,PRINTIT                                         0269 00408000
* DECADDR = ADDR(TOTAL);                                   /*@Z427VLS*/ 00409000
         LA    @15,TOTAL                                           0270 00410000
         ST    @15,DECADDR                                         0270 00411000
* COUNTER = COUNTER + ONE;                                 /*@Z427VLS*/ 00412000
         L     @15,COUNTER                                         0271 00413000
         AL    @15,ONE                                             0271 00414000
         ST    @15,COUNTER                                         0271 00415000
* SYSUMPTR = ADDRSAVE;                                     /*@Z427VLS*/ 00416000
         ST    ADDRSAVE,SYSUMPTR(,R2)                              0272 00417000
* DATAINFO = DISCRIPT(COUNTER);                            /*@Z427VLS*/ 00418000
         MH    @15,@CH00474                                        0273 00419000
         LA    @14,DISCRIPT-17(@15)                                0273 00420000
         MVC   DATAINFO(17),0(@14)                                 0273 00421000
* DO I = 1 BY 1 TO NUMTODO;                                /*@Z427VLS*/ 00422000
         LA    @15,1                                               0274 00423000
         ST    @15,I                                               0274 00424000
         B     @DE00274                                            0274 00425000
@DL00274 DS    0H                                                  0275 00426000
*  BINWORD = SYSUMPEA;                                     /*@Z427VLS*/ 00427000
         L     @01,SYSUMPTR(,R2)                                   0275 00428000
         L     @14,SYSUMPEA(,@01)                                  0275 00429000
         ST    @14,BINWORD                                         0275 00430000
*   TOTALPRM(I) = TOTALPRM(I) + BINWORD; /*KEEP TRACK OF OVERALL TOT*/  00431000
         SLA   @15,2                                               0276 00432000
         AL    @14,TOTALPRM-4(@15)                                 0276 00433000
         ST    @14,TOTALPRM-4(@15)                                 0276 00434000
*  CALL CONVBIN;                                           /*@Z427VLS*/ 00435000
         BAL   @14,CONVBIN                                         0277 00436000
*  DECADDR = DECADDR + SIX;                                /*@Z427VLS*/ 00437000
         L     @15,DECADDR                                         0278 00438000
         AL    @15,SIX                                             0278 00439000
         ST    @15,DECADDR                                         0278 00440000
*  SYSUMPTR = SYSUMNXT;         /*KEEP THE ADDRESSABILIITY CORRECT   */ 00441000
         L     @01,SYSUMPTR(,R2)                                   0279 00442000
         L     @15,SYSUMNXT(,@01)                                  0279 00443000
         ST    @15,SYSUMPTR(,R2)                                   0279 00444000
* END;                                                     /*@Z427VLS*/ 00445000
         LA    @15,1                                               0280 00446000
         AL    @15,I                                               0280 00447000
         ST    @15,I                                               0280 00448000
@DE00274 C     @15,NUMTODO                                         0280 00449000
         BNH   @DL00274                                            0280 00450000
* CALL PRINTIT;                                            /*@Z427VLS*/ 00451000
         BAL   @14,PRINTIT                                         0281 00452000
* DECADDR = ADDR(TOTAL);                                   /*@Z427VLS*/ 00453000
         LA    @15,TOTAL                                           0282 00454000
         ST    @15,DECADDR                                         0282 00455000
* SYSUMPTR = ADDRSAVE;                                     /*@Z427VLS*/ 00456000
         ST    ADDRSAVE,SYSUMPTR(,R2)                              0283 00457000
* COUNTER = COUNTER + ONE;                                 /*@Z427VLS*/ 00458000
         L     @15,COUNTER                                         0284 00459000
         AL    @15,ONE                                             0284 00460000
         ST    @15,COUNTER                                         0284 00461000
* DATAINFO = DISCRIPT(COUNTER);                            /*@Z427VLS*/ 00462000
         MH    @15,@CH00474                                        0285 00463000
         LA    @14,DISCRIPT-17(@15)                                0285 00464000
         MVC   DATAINFO(17),0(@14)                                 0285 00465000
* DO I = 1 BY 1 TO NUMTODO;                                /*@Z427VLS*/ 00466000
         LA    @15,1                                               0286 00467000
         ST    @15,I                                               0286 00468000
         B     @DE00286                                            0286 00469000
@DL00286 DS    0H                                                  0287 00470000
*  BINWORD = SYSUMPER;                                     /*@Z427VLS*/ 00471000
         L     @01,SYSUMPTR(,R2)                                   0287 00472000
         L     @14,SYSUMPER(,@01)                                  0287 00473000
         ST    @14,BINWORD                                         0287 00474000
*   TOTALPRM(I) = TOTALPRM(I) + BINWORD; /*KEEP TRACK OF OVERALL TOT*/  00475000
         SLA   @15,2                                               0288 00476000
         AL    @14,TOTALPRM-4(@15)                                 0288 00477000
         ST    @14,TOTALPRM-4(@15)                                 0288 00478000
*  CALL CONVBIN;                                           /*@Z427VLS*/ 00479000
         BAL   @14,CONVBIN                                         0289 00480000
*  SYSUMPTR = SYSUMNXT;         /*KEEP THE ADDRESSABILIITY CORRECT   */ 00481000
         L     @01,SYSUMPTR(,R2)                                   0290 00482000
         L     @15,SYSUMNXT(,@01)                                  0290 00483000
         ST    @15,SYSUMPTR(,R2)                                   0290 00484000
*  DECADDR = DECADDR + SIX;                                /*@Z427VLS*/ 00485000
         L     @15,DECADDR                                         0291 00486000
         AL    @15,SIX                                             0291 00487000
         ST    @15,DECADDR                                         0291 00488000
* END;                                                     /*@Z427VLS*/ 00489000
         LA    @15,1                                               0292 00490000
         AL    @15,I                                               0292 00491000
         ST    @15,I                                               0292 00492000
@DE00286 C     @15,NUMTODO                                         0292 00493000
         BNH   @DL00286                                            0292 00494000
* CALL PRINTIT;                                            /*@Z427VLS*/ 00495000
         BAL   @14,PRINTIT                                         0293 00496000
* SYSUMPTR = ADDRSAVE;          /*RESTORE THE ADDRESSABILITY @Z427VLS*/ 00497000
         ST    ADDRSAVE,SYSUMPTR(,R2)                              0294 00498000
*END;                                                      /*@Z427VLS*/ 00499000
@EL00006 DS    0H                                                  0295 00500000
@EF00006 DS    0H                                                  0295 00501000
@ER00006 LM    @14,@12,@SA00006                                    0295 00502000
         BR    @14                                                 0295 00503000
*/********************************************************************/ 00504000
*/* * * * * * * * * * * * * * * * * * * * * * *  * * * * * * * * * * */ 00505000
*/*    THIS PROC WILL PROCESS THE DATA FOR EOD OUTPUT        @Z427VLS*/ 00506000
*/*                                                          @Z427VLS*/ 00507000
*EODWORK: PROC;                                            /*@Z427VLS*/ 00508000
EODWORK  STM   @14,@12,@SA00007                                    0296 00509000
* CALL PRINTIT;                /*FOR SPACE BETWEEN LINES     @Z427VLS*/ 00510000
         BAL   @14,PRINTIT                                         0297 00511000
* DECADDR = ADDR(TOTAL);       /*SET POINTER TO PRINT START  @Z427VLS*/ 00512000
         LA    @15,TOTAL                                           0298 00513000
         ST    @15,DECADDR                                         0298 00514000
* DATAINFO = DISCRIPT(26);     /*MOVE THE DISCRIPTION INTO PRINT LINE*/ 00515000
         MVC   DATAINFO(17),DISCRIPT+425                           0299 00516000
*  DO I = 1 BY 1 TO NUMTODO;                               /*@Z427VLS*/ 00517000
         LA    @15,1                                               0300 00518000
         ST    @15,I                                               0300 00519000
         B     @DE00300                                            0300 00520000
@DL00300 DS    0H                                                  0301 00521000
*  BINWORD = SYSUMEOD;          /*SET UP ITEM TO CONVERT TO PRINT    */ 00522000
         L     @01,SYSUMPTR(,R2)                                   0301 00523000
         L     @14,SYSUMEOD(,@01)                                  0301 00524000
         ST    @14,BINWORD                                         0301 00525000
*   TOTALPRM(I) = TOTALPRM(I) + BINWORD; /*KEEP TRACK OF OVERALL TOT*/  00526000
         SLA   @15,2                                               0302 00527000
         AL    @14,TOTALPRM-4(@15)                                 0302 00528000
         ST    @14,TOTALPRM-4(@15)                                 0302 00529000
*  CALL CONVBIN;                /*GO DO THE BINARY TO PRINT CONVERT  */ 00530000
         BAL   @14,CONVBIN                                         0303 00531000
*  DECADDR = DECADDR + SIX;     /*MOVE THE POINTER DOWN THE PRINT LNE*/ 00532000
         L     @15,DECADDR                                         0304 00533000
         AL    @15,SIX                                             0304 00534000
         ST    @15,DECADDR                                         0304 00535000
*  SYSUMPTR = SYSUMNXT;         /*CHANGE ADDRESSABILITY FOR NEXT BLOK*/ 00536000
         L     @01,SYSUMPTR(,R2)                                   0305 00537000
         L     @15,SYSUMNXT(,@01)                                  0305 00538000
         ST    @15,SYSUMPTR(,R2)                                   0305 00539000
* END;                                                     /*@Z427VLS*/ 00540000
         LA    @15,1                                               0306 00541000
         AL    @15,I                                               0306 00542000
         ST    @15,I                                               0306 00543000
@DE00300 C     @15,NUMTODO                                         0306 00544000
         BNH   @DL00300                                            0306 00545000
* SPACING= DOUBLE;              /*AS NEW TYPE SKIP AN EXTRA LINE     */ 00546000
         MVC   SPACING(1),DOUBLE                                   0307 00547000
* CALL PRINTIT;                 /*GO PRINT THE MESSAGE       @Z427VLS*/ 00548000
         BAL   @14,PRINTIT                                         0308 00549000
* SPACING= SINGLE;              /*RESTORE THE SPACING TO SINGLE      */ 00550000
         MVC   SPACING(1),SINGLE                                   0309 00551000
* SYSUMPTR = ADDRSAVE;          /*RESTORE THE ADDRESSABILITY FOR NEXT*/ 00552000
         ST    ADDRSAVE,SYSUMPTR(,R2)                              0310 00553000
*END;                                                      /*@Z427VLS*/ 00554000
@EL00007 DS    0H                                                  0311 00555000
@EF00007 DS    0H                                                  0311 00556000
@ER00007 LM    @14,@12,@SA00007                                    0311 00557000
         BR    @14                                                 0311 00558000
*/********************************************************************/ 00559000
*/*    THIS PROC WILL PROCESS THE COUNTS FOR CHANNEL CHECKS  @Z427VLS*/ 00560000
*CCHWORK: PROC;                                            /*@Z427VLS*/ 00561000
CCHWORK  STM   @14,@12,@SA00008                                    0312 00562000
* CALL PRINTIT;                                            /*@Z427VLS*/ 00563000
         BAL   @14,PRINTIT                                         0313 00564000
* DATAINFO = DISCRIPT(5);    /*MOVE IN THE MAIN CHANNEL CHECK HEADING*/ 00565000
         MVC   DATAINFO(17),DISCRIPT+68                            0314 00566000
* CALL PRINTIT;              /*GO PRINT THE HEADING          @Z427VLS*/ 00567000
         BAL   @14,PRINTIT                                         0315 00568000
* CALL PRINTIT;              /*GO PRINT BLANK LINE           @Z427VLS*/ 00569000
         BAL   @14,PRINTIT                                         0316 00570000
* COUNTER = SIX;             /*SET INDEX TO FIRST CHANNEL VERBAGE    */ 00571000
         L     @15,SIX                                             0317 00572000
         ST    @15,COUNTER                                         0317 00573000
*/* SPACING = DOUBLE    AT C.E.S REQUEST SINGLE SPACE OCT 16,1976*****/ 00574000
* DO J = 1 BY 1 TO 16;       /*DO ALL 16 DIFFERENT CHANNELS + TOTAL  */ 00575000
         LA    @15,1                                               0318 00576000
         ST    @15,J                                               0318 00577000
@DL00318 DS    0H                                                  0319 00578000
*   DECADDR = ADDR(TOTAL);  /*SE UP THE ADDRESS OF WHERE TO PUT DATA*/  00579000
         LA    @15,TOTAL                                           0319 00580000
         ST    @15,DECADDR                                         0319 00581000
*   DATAINFO = DISCRIPT(COUNTER);/*MOVE DATA DISCRIPTION IN PRINT LIN*/ 00582000
         L     @15,COUNTER                                         0320 00583000
         MH    @15,@CH00474                                        0320 00584000
         LA    @14,DISCRIPT-17(@15)                                0320 00585000
         MVC   DATAINFO(17),0(@14)                                 0320 00586000
*   SYSUMPTR = ADDRSAVE;     /*SET UP ADDRESSABLE TO FIRST BLOCK OF  */ 00587000
         ST    ADDRSAVE,SYSUMPTR(,R2)                              0321 00588000
*   DO I = 1 BY 1  TO NUMTODO;                             /*@Z427VLS*/ 00589000
         LA    @15,1                                               0322 00590000
         ST    @15,I                                               0322 00591000
         B     @DE00322                                            0322 00592000
@DL00322 DS    0H                                                  0323 00593000
*     BINWORD = SYSUMCH(J);  /*PICK UP BINARY INFO FROM CHANNEL DATA */ 00594000
         L     @14,J                                               0323 00595000
         SLA   @14,2                                               0323 00596000
         L     @01,SYSUMPTR(,R2)                                   0323 00597000
         L     @14,SYSUMCH-4(@14,@01)                              0323 00598000
         ST    @14,BINWORD                                         0323 00599000
*   TOTALPRM(I) = TOTALPRM(I) + BINWORD; /*KEEP TRACK OF OVERALL TOT*/  00600000
         SLA   @15,2                                               0324 00601000
         AL    @14,TOTALPRM-4(@15)                                 0324 00602000
         ST    @14,TOTALPRM-4(@15)                                 0324 00603000
*     CALL CONVBIN;          /*CONVERT THE BINARY TO PRINTABLE       */ 00604000
         BAL   @14,CONVBIN                                         0325 00605000
*     DECADDR = DECADDR + SIX; /*MOVE DOWN PRINT LINE FOR EACH CPU   */ 00606000
         L     @15,DECADDR                                         0326 00607000
         AL    @15,SIX                                             0326 00608000
         ST    @15,DECADDR                                         0326 00609000
*     SYSUMPTR = SYSUMNXT;   /*SET UP THE ADDRESS FOR THE NEXT BLOCK */ 00610000
         L     @01,SYSUMPTR(,R2)                                   0327 00611000
         L     @15,SYSUMNXT(,@01)                                  0327 00612000
         ST    @15,SYSUMPTR(,R2)                                   0327 00613000
*   END;                                                   /*@Z427VLS*/ 00614000
         LA    @15,1                                               0328 00615000
         AL    @15,I                                               0328 00616000
         ST    @15,I                                               0328 00617000
@DE00322 C     @15,NUMTODO                                         0328 00618000
         BNH   @DL00322                                            0328 00619000
*   CALL PRINTIT;            /*GO AND PRINT THE INFORMATION  @Z427VLS*/ 00620000
         BAL   @14,PRINTIT                                         0329 00621000
*   COUNTER = COUNTER + ONE; /*MOVE INDEX TO NEXT CHANNEL DISCRIPTION*/ 00622000
         L     @15,COUNTER                                         0330 00623000
         AL    @15,ONE                                             0330 00624000
         ST    @15,COUNTER                                         0330 00625000
* END;                                                     /*@Z427VLS*/ 00626000
         LA    @15,1                                               0331 00627000
         AL    @15,J                                               0331 00628000
         ST    @15,J                                               0331 00629000
         C     @15,@CF00086                                        0331 00630000
         BNH   @DL00318                                            0331 00631000
*SYSUMPTR = ADDRSAVE;        /*SET UP ADDRESSABILITY FOR NEXT SECTION*/ 00632000
         ST    ADDRSAVE,SYSUMPTR(,R2)                              0332 00633000
*SPACING = SINGLE;           /*RESET TO SINGLE SPACING       @Z427VLS*/ 00634000
         MVC   SPACING(1),SINGLE                                   0333 00635000
*END;                                                      /*@Z427VLS*/ 00636000
@EL00008 DS    0H                                                  0334 00637000
@EF00008 DS    0H                                                  0334 00638000
@ER00008 LM    @14,@12,@SA00008                                    0334 00639000
         BR    @14                                                 0334 00640000
*/* * * * * * * * * * * * * * * * * * * * * * *  * * * * * * * * * * */ 00641000
*/*    THIS PROC WILL PROCESS THE DATA FOR MCH OUTPUT        @Z427VLS*/ 00642000
*MCHWORK: PROC;                                            /*@Z427VLS*/ 00643000
MCHWORK  STM   @14,@12,@SA00009                                    0335 00644000
* CALL PRINTIT;                                            /*@Z427VLS*/ 00645000
         BAL   @14,PRINTIT                                         0336 00646000
* DECADDR = ADDR(TOTAL);       /*SET POINTER TO PRINT START  @Z427VLS*/ 00647000
         LA    @15,TOTAL                                           0337 00648000
         ST    @15,DECADDR                                         0337 00649000
* DATAINFO = DISCRIPT(TWO);    /*MOVE THE DISCRIPTION INTO PRINT LINE*/ 00650000
         L     @15,TWO                                             0338 00651000
         MH    @15,@CH00474                                        0338 00652000
         LA    @14,DISCRIPT-17(@15)                                0338 00653000
         MVC   DATAINFO(17),0(@14)                                 0338 00654000
* CALL PRINTIT;                /*GO AND PRINT THE MAIN MCH HEADING   */ 00655000
         BAL   @14,PRINTIT                                         0339 00656000
* CALL PRINTIT;                /*GO AND PRINT BLANK LINE     @Z427VLS*/ 00657000
         BAL   @14,PRINTIT                                         0340 00658000
* DATAINFO = DISCRIPT(3);      /*MOVE FIRST MCH TYPE INTO LINE       */ 00659000
         MVC   DATAINFO(17),DISCRIPT+34                            0341 00660000
* DO I = 1 BY 1 TO NUMTODO;/*PROCESS ALL CPUS + 1 FOR TOTAL  @Z427VLS*/ 00661000
         LA    @15,1                                               0342 00662000
         ST    @15,I                                               0342 00663000
         B     @DE00342                                            0342 00664000
@DL00342 DS    0H                                                  0343 00665000
*  BINWORD = SYSUMMCR;          /*SET UP ITEM TO CONVERT TO PRINT    */ 00666000
         L     @01,SYSUMPTR(,R2)                                   0343 00667000
         L     @14,SYSUMMCR(,@01)                                  0343 00668000
         ST    @14,BINWORD                                         0343 00669000
*   TOTALPRM(I) = TOTALPRM(I) + BINWORD; /*KEEP TRACK OF OVERALL TOT*/  00670000
         SLA   @15,2                                               0344 00671000
         AL    @14,TOTALPRM-4(@15)                                 0344 00672000
         ST    @14,TOTALPRM-4(@15)                                 0344 00673000
*  CALL CONVBIN;                /*GO DO THE BINARY TO PRINT CONVERT  */ 00674000
         BAL   @14,CONVBIN                                         0345 00675000
*  DECADDR = DECADDR + SIX;     /*MOVE THE POINTER DOWN THE PRINT LNE*/ 00676000
         L     @15,DECADDR                                         0346 00677000
         AL    @15,SIX                                             0346 00678000
         ST    @15,DECADDR                                         0346 00679000
*  SYSUMPTR = SYSUMNXT;         /*CHANGE ADDRESSABILITY FOR NEXT BLOK*/ 00680000
         L     @01,SYSUMPTR(,R2)                                   0347 00681000
         L     @15,SYSUMNXT(,@01)                                  0347 00682000
         ST    @15,SYSUMPTR(,R2)                                   0347 00683000
* END;                                                     /*@Z427VLS*/ 00684000
         LA    @15,1                                               0348 00685000
         AL    @15,I                                               0348 00686000
         ST    @15,I                                               0348 00687000
@DE00342 C     @15,NUMTODO                                         0348 00688000
         BNH   @DL00342                                            0348 00689000
* CALL PRINTIT;                 /*GO PRINT THE MESSAGE       @Z427VLS*/ 00690000
         BAL   @14,PRINTIT                                         0349 00691000
* DATAINFO = DISCRIPT(4);       /*MOVE NON-RECOVERABLE WORDS TO LINE */ 00692000
         MVC   DATAINFO(17),DISCRIPT+51                            0350 00693000
* DECADDR = ADDR(TOTAL);        /*BACK UP POINTER FOR NEW OUTPUT     */ 00694000
         LA    @15,TOTAL                                           0351 00695000
         ST    @15,DECADDR                                         0351 00696000
* SYSUMPTR = ADDRSAVE;          /*RESTORE ADDRESSABILITY TO START    */ 00697000
         ST    ADDRSAVE,SYSUMPTR(,R2)                              0352 00698000
* DO I = 1 BY 1 TO NUMTODO;/*CPU'S + ONE FOR THE TOTALS      @Z427VLS*/ 00699000
         LA    @15,1                                               0353 00700000
         ST    @15,I                                               0353 00701000
         B     @DE00353                                            0353 00702000
@DL00353 DS    0H                                                  0354 00703000
*  BINWORD = SYSUMMCN;          /*MOVE # TO CONVERT TO PRINTABLE     */ 00704000
         L     @01,SYSUMPTR(,R2)                                   0354 00705000
         L     @14,SYSUMMCN(,@01)                                  0354 00706000
         ST    @14,BINWORD                                         0354 00707000
*   TOTALPRM(I) = TOTALPRM(I) + BINWORD; /*KEEP TRACK OF OVERALL TOT*/  00708000
         SLA   @15,2                                               0355 00709000
         AL    @14,TOTALPRM-4(@15)                                 0355 00710000
         ST    @14,TOTALPRM-4(@15)                                 0355 00711000
*  CALL CONVBIN;/*CONVERT BINWORD TO PRINTABLE               @Z427VLS*/ 00712000
         BAL   @14,CONVBIN                                         0356 00713000
*  DECADDR = DECADDR + SIX;     /*MOVE DOWN THE PRINT LINE NEXT CPU  */ 00714000
         L     @15,DECADDR                                         0357 00715000
         AL    @15,SIX                                             0357 00716000
         ST    @15,DECADDR                                         0357 00717000
*  SYSUMPTR = SYSUMNXT ;        /*CHANGE THE BASE FOR NEXT BLOCK     */ 00718000
         L     @01,SYSUMPTR(,R2)                                   0358 00719000
         L     @15,SYSUMNXT(,@01)                                  0358 00720000
         ST    @15,SYSUMPTR(,R2)                                   0358 00721000
* END;                                                     /*@Z427VLS*/ 00722000
         LA    @15,1                                               0359 00723000
         AL    @15,I                                               0359 00724000
         ST    @15,I                                               0359 00725000
@DE00353 C     @15,NUMTODO                                         0359 00726000
         BNH   @DL00353                                            0359 00727000
* CALL PRINTIT;                 /*GO PRINT LAST MCH DATA LINE        */ 00728000
         BAL   @14,PRINTIT                                         0360 00729000
* SYSUMPTR = ADDRSAVE;          /*RESTORE THE ADDRESSABILITY TO START*/ 00730000
         ST    ADDRSAVE,SYSUMPTR(,R2)                              0361 00731000
*END;                                                      /*@Z427VLS*/ 00732000
@EL00009 DS    0H                                                  0362 00733000
@EF00009 DS    0H                                                  0362 00734000
@ER00009 LM    @14,@12,@SA00009                                    0362 00735000
         BR    @14                                                 0362 00736000
*/********************************************************************/ 00737000
*/* * * * * * * * * * * * * * * * * * * * * * *  * * * * * * * * * * */ 00738000
*/*    THIS PROC WILL PROCESS THE DATA FOR CPU OUTPUT        @Z427VLS*/ 00739000
*/*                                                          @Z427VLS*/ 00740000
*CPUINFO: PROC;                                            /*@Z427VLS*/ 00741000
CPUINFO  STM   @14,@12,@SA00010                                    0363 00742000
*  SPACING = DOUBLE;           /*OFFSET ON THE PAGE          @Z427VLS*/ 00743000
         MVC   SPACING(1),DOUBLE                                   0364 00744000
*  CALL PRINTIT;               /*UPSPACE THREE LINE PRIOR TO START   */ 00745000
         BAL   @14,PRINTIT                                         0365 00746000
*  IF (LINECT - MYLINECT) < (EVNUM + 2  ) THEN                     0366 00747000
         LH    @03,LINECT(,R2)                                     0366 00748000
         SL    @03,MYLINECT                                        0366 00749000
         L     @01,EVPTR(,R2)                                      0366 00750000
         LA    @00,2                                               0366 00751000
         AH    @00,EVNUM(,@01)                                     0366 00752000
         CR    @03,@00                                             0366 00753000
         BNL   @RF00366                                            0366 00754000
*   DO;                                                    /*@Z427VLS*/ 00755000
*    MYLINECT = ZERO;                                      /*@Z427VLS*/ 00756000
         SLR   @03,@03                                             0368 00757000
         ST    @03,MYLINECT                                        0368 00758000
*    SPACING = UPSPACE;                                    /*@Z427VLS*/ 00759000
         MVC   SPACING(1),UPSPACE                                  0369 00760000
*    CALL PRINTIT;                                         /*@Z427VLS*/ 00761000
         BAL   @14,PRINTIT                                         0370 00762000
*    SPACING = DOUBLE;                                     /*@Z427VLS*/ 00763000
         MVC   SPACING(1),DOUBLE                                   0371 00764000
*   END;                                                   /*@Z427VLS*/ 00765000
*  CPULINE1 = CPULINE;         /*SET UP THE HEADING FOR CPU SERIAL   */ 00766000
@RF00366 MVC   CPULINE1(24),CPULINE                                0373 00767000
*  CALL PRINTIT ;              /*GO AND PRINT OUT THE HEADING        */ 00768000
         BAL   @14,PRINTIT                                         0374 00769000
*  SPACING = SINGLE;           /*RETURN SPACING TO SINGLE OR NORMAL  */ 00770000
         MVC   SPACING(1),SINGLE                                   0375 00771000
*  DO I = 1 BY 1 TO NUMTODO-1; /*SET TO PROCESS ALL CPUS + TOTALS    */ 00772000
         LA    @03,1                                               0376 00773000
         ST    @03,I                                               0376 00774000
         B     @DE00376                                            0376 00775000
@DL00376 DS    0H                                                  0377 00776000
*   CPUTYPE = EVLETTER(I);     /*SET IN ACTUAL LETTER        @Z427VLS*/ 00777000
         MH    @03,@CH00078                                        0377 00778000
         L     @15,EVPTR(,R2)                                      0377 00779000
         ST    @03,@TF00001                                        0377 00780000
         ALR   @03,@15                                             0377 00781000
         MVC   CPUTYPE(1),EVLETTER-6(@03)                          0377 00782000
*   NUMBER = TWO;              /*DO 2 BYTES OF DATA          @Z427VLS*/ 00783000
         L     @03,TWO                                             0378 00784000
         ST    @03,NUMBER                                          0378 00785000
*   ADDNXT = ADDR(CPUMODEL);   /*WHERE THE INFO IS TO BE PLACED      */ 00786000
         LA    @03,CPUMODEL                                        0379 00787000
         ST    @03,ADDNXT                                          0379 00788000
*   NEXTBY = ADDR(EVMODEL(I)); /*ADDRESS OF WHERE THE DATA IS        */ 00789000
         L     @03,@TF00001                                        0380 00790000
         LA    @03,EVMODEL-6(@03,@15)                              0380 00791000
         ST    @03,NEXTBY                                          0380 00792000
*   CALL CONVERT;              /*GO AND CONVERTB THE DATA    @Z427VLS*/ 00793000
         BAL   @14,CONVERT                                         0381 00794000
*   NUMBER = THREE;            /*SERIAL SHOULD HAVE 6 BYTES OF PRINT */ 00795000
         MVC   NUMBER(4),@CF00073                                  0382 00796000
*   ADDNXT = ADDR(CPUSERAL);   /*WHERE THE SERIAL INFO IS STORED     */ 00797000
         LA    @03,CPUSERAL                                        0383 00798000
         ST    @03,ADDNXT                                          0383 00799000
*   NEXTBY = ADDR(EVSERIAL(I));                            /*@Z427VLS*/ 00800000
         L     @03,I                                               0384 00801000
         MH    @03,@CH00078                                        0384 00802000
         L     @01,EVPTR(,R2)                                      0384 00803000
         LA    @03,EVSERIAL-6(@03,@01)                             0384 00804000
         ST    @03,NEXTBY                                          0384 00805000
*   CALL CONVERT;              /*GO AND CONVERT THE DATA     @Z427VLS*/ 00806000
         BAL   @14,CONVERT                                         0385 00807000
*   MOVECPU = CPUDATA;         /*MOVE CPU DATA TO PRINT BUFFER       */ 00808000
         MVC   MOVECPU(22),CPUDATA                                 0386 00809000
*   CALL PRINTIT;              /*GO AND PRINT THE RESULTS OF THIS    */ 00810000
         BAL   @14,PRINTIT                                         0387 00811000
*  END;                                                    /*@Z427VLS*/ 00812000
         LA    @03,1                                               0388 00813000
         AL    @03,I                                               0388 00814000
         ST    @03,I                                               0388 00815000
@DE00376 L     @15,NUMTODO                                         0388 00816000
         BCTR  @15,0                                               0388 00817000
         CR    @03,@15                                             0388 00818000
         BNH   @DL00376                                            0388 00819000
*END;                                                      /*@Z427VLS*/ 00820000
@EL00010 DS    0H                                                  0389 00821000
@EF00010 DS    0H                                                  0389 00822000
@ER00010 LM    @14,@12,@SA00010                                    0389 00823000
         BR    @14                                                 0389 00824000
*/********************************************************************/ 00825000
*/* * * * * * * * * * * * * * * * * * * * * * *  * * * * * * * * * * */ 00826000
*/*    THIS PROC WILL PROCESS THE DATA FOR THE IPL PART OF THE REPORT*/ 00827000
*/*                                                          @Z427VLS*/ 00828000
*IPLWORK: PROC;                                            /*@Z427VLS*/ 00829000
IPLWORK  STM   @14,@12,@SA00011                                    0390 00830000
*  DATAINFO = DISCRIPT(ONE);    /*MOVE IN IPL LABEL          @Z427VLS*/ 00831000
         L     @15,ONE                                             0391 00832000
         MH    @15,@CH00474                                        0391 00833000
         LA    @14,DISCRIPT-17(@15)                                0391 00834000
         MVC   DATAINFO(17),0(@14)                                 0391 00835000
*  DECADDR = ADDR(TOTAL);     /*SET UP ADDRESS TO PUT THE DATA       */ 00836000
         LA    @15,TOTAL                                           0392 00837000
         ST    @15,DECADDR                                         0392 00838000
*  DO I = 1 BY 1 TO NUMTODO;                               /*@Z427VLS*/ 00839000
         LA    @15,1                                               0393 00840000
         ST    @15,I                                               0393 00841000
         B     @DE00393                                            0393 00842000
@DL00393 DS    0H                                                  0394 00843000
*   BINWORD = SYSUMIPL;      /*LOAD THE VALUE TO CONVERT     @Z427VLS*/ 00844000
         L     @01,SYSUMPTR(,R2)                                   0394 00845000
         L     @14,SYSUMIPL(,@01)                                  0394 00846000
         ST    @14,BINWORD                                         0394 00847000
*   TOTALPRM(I) = TOTALPRM(I) + BINWORD; /*KEEP TRACK OF OVERALL TOT*/  00848000
         SLA   @15,2                                               0395 00849000
         AL    @14,TOTALPRM-4(@15)                                 0395 00850000
         ST    @14,TOTALPRM-4(@15)                                 0395 00851000
*   CALL CONVBIN;            /*GO CONVERT THE BINARY VALUE TO PRINT  */ 00852000
         BAL   @14,CONVBIN                                         0396 00853000
*   DECADDR = DECADDR + SIX; /*MOVE WHERE TO PUT THE DATA IN LINE    */ 00854000
         L     @15,DECADDR                                         0397 00855000
         AL    @15,SIX                                             0397 00856000
         ST    @15,DECADDR                                         0397 00857000
*   SYSUMPTR = SYSUMNXT;     /*CHANGE THE BASE FOR NEXT BLOCK OF DATA*/ 00858000
         L     @01,SYSUMPTR(,R2)                                   0398 00859000
         L     @15,SYSUMNXT(,@01)                                  0398 00860000
         ST    @15,SYSUMPTR(,R2)                                   0398 00861000
*  END;                                                    /*@Z427VLS*/ 00862000
         LA    @15,1                                               0399 00863000
         AL    @15,I                                               0399 00864000
         ST    @15,I                                               0399 00865000
@DE00393 C     @15,NUMTODO                                         0399 00866000
         BNH   @DL00393                                            0399 00867000
*  CALL PRINTIT;/*GO AND PRINT THE LINE OF DATA TO OUT       @Z427VLS*/ 00868000
         BAL   @14,PRINTIT                                         0400 00869000
*  SYSUMPTR = ADDRSAVE;      /*RESTORE THE ADDRESS ABILIITY TO START */ 00870000
         ST    ADDRSAVE,SYSUMPTR(,R2)                              0401 00871000
*END;                                                      /*@Z427VLS*/ 00872000
@EL00011 DS    0H                                                  0402 00873000
@EF00011 DS    0H                                                  0402 00874000
@ER00011 LM    @14,@12,@SA00011                                    0402 00875000
         BR    @14                                                 0402 00876000
*/********************************************************************/ 00877000
*/* * * * * * * * * * * * * * * * * * * * * * *  * * * * * * * * * * */ 00878000
*/*    THIS PROC WILL PRINT THE TOTAL COUNTS FOR EACH COLUMN PART-1  */ 00879000
*/*                                                          @Z427VLS*/ 00880000
*PRT1TOT: PROC;                                            /*@Z427VLS*/ 00881000
PRT1TOT  STM   @14,@12,@SA00012                                    0403 00882000
* PRTLINE = TOTCT;        /*MOVE IN THE LINE LABLE           @Z427VLS*/ 00883000
         MVI   PRTLINE+13,C' '                                     0404 00884000
         MVC   PRTLINE+14(138),PRTLINE+13                          0404 00885000
         MVC   PRTLINE(13),TOTCT                                   0404 00886000
* BNDECNUM = FIVE;           /*ALLOW FIVE PRINT POSITIONS IN CONVBIN*/  00887000
         L     @03,FIVE                                            0405 00888000
         ST    @03,BNDECNUM                                        0405 00889000
* DECADDR = ADDR(TOTAL);     /*ADDRESS OF WHERE TO PUT TOTAL VALUE   */ 00890000
         LA    @03,TOTAL                                           0406 00891000
         ST    @03,DECADDR                                         0406 00892000
* DO I = 1 BY 1 TO NUMTODO;  /*# CPUS + ONE FOR THE TOTAL    @Z427VLS*/ 00893000
         LA    @03,1                                               0407 00894000
         ST    @03,I                                               0407 00895000
         B     @DE00407                                            0407 00896000
@DL00407 DS    0H                                                  0408 00897000
*  BINWORD = TOTALPRM(I);    /*PICK UP THE VALUE TO CONVERT  @Z427VLS*/ 00898000
         SLA   @03,2                                               0408 00899000
         L     @03,TOTALPRM-4(@03)                                 0408 00900000
         ST    @03,BINWORD                                         0408 00901000
*  CALL CONVBIN;             /*GO AND CONVERT THE VALUE      @Z427VLS*/ 00902000
         BAL   @14,CONVBIN                                         0409 00903000
*  DECADDR = DECADDR + SIX;  /*MOVE DOWN THE PRINT LINE      @Z427VLS*/ 00904000
         L     @03,DECADDR                                         0410 00905000
         AL    @03,SIX                                             0410 00906000
         ST    @03,DECADDR                                         0410 00907000
* END;                                                     /*@Z427VLS*/ 00908000
         LA    @03,1                                               0411 00909000
         AL    @03,I                                               0411 00910000
         ST    @03,I                                               0411 00911000
@DE00407 C     @03,NUMTODO                                         0411 00912000
         BNH   @DL00407                                            0411 00913000
* CALL PRINTIT;              /*TELL THE WORLD THE TOTAL COUNTS FOR AL*/ 00914000
         BAL   @14,PRINTIT                                         0412 00915000
* GEN(XC  TOTALPRM(68),TOTALPRM);/*CLEAR THE TABLE FOR PART 2        */ 00916000
         XC  TOTALPRM(68),TOTALPRM                                      00917000
*END;                                                      /*@Z427VLS*/ 00918000
@EL00012 DS    0H                                                  0414 00919000
@EF00012 DS    0H                                                  0414 00920000
@ER00012 LM    @14,@12,@SA00012                                    0414 00921000
         BR    @14                                                 0414 00922000
*/********************************************************************/ 00923000
*/* * * * * * * * * * * * * * * * * * * * * * *  * * * * * * * * * * */ 00924000
*/*    THIS PROC WILL PRINT THE CPU PERM TEMP LINE OF DISCRIPTION    */ 00925000
*/*                                                          @Z427VLS*/ 00926000
*TOPLINE: PROC;                                            /*@Z427VLS*/ 00927000
TOPLINE  STM   @14,@12,@SA00013                                    0415 00928000
* RESPECIFY (R6) RESTRICTED;                               /*@Z427VLS*/ 00929000
* CALL PRINTIT;              /*PRINT BLANK LINE              @Z427VLS*/ 00930000
         BAL   @14,PRINTIT                                         0417 00931000
* R9 = 23 + 10 * EVNUM;      /*DETERMINE # OF HEADING TO MOVE        */ 00932000
         L     @07,EVPTR(,R2)                                      0418 00933000
         LH    R9,EVNUM(,@07)                                      0418 00934000
         MH    R9,@CH00274                                         0418 00935000
         AL    R9,@CF00595                                         0418 00936000
* R8 = ADDR(HEAD2);          /*WHERE THE HEADING IS          @Z427VLS*/ 00937000
         LA    R8,HEAD2                                            0419 00938000
* R6 = ADDR(PRTLINE);        /*WHERE TO MOVE THE DATA TO     @Z427VLS*/ 00939000
         LA    R6,PRTLINE                                          0420 00940000
* GEN(EX   R9,MOVETOTL);     /*ONLY WAY FOR VARABLE # OF CHARACTERS  */ 00941000
         EX   R9,MOVETOTL                                               00942000
* CALL PRINTIT;              /*GO PRINT THE HEADING LINE 1   @Z427VLS*/ 00943000
         BAL   @14,PRINTIT                                         0422 00944000
* R9 = 25 + 10 * EVNUM;      /*CHARS TO MOVE FOR THE SECOND LINE     */ 00945000
         L     @07,EVPTR(,R2)                                      0423 00946000
         LH    R9,EVNUM(,@07)                                      0423 00947000
         MH    R9,@CH00274                                         0423 00948000
         AL    R9,@CF00862                                         0423 00949000
* R8 = ADDR(HEAD20);         /*WHERE THE DATA FO  2 LINE IS AT       */ 00950000
         LA    R8,HEAD20                                           0424 00951000
* GEN(EX  R9,MOVETOTL);      /*MOVE THE CHARACTERS TO PRINTLINE      */ 00952000
         EX  R9,MOVETOTL                                                00953000
* CALL PRINTIT;              /*GO PRINT THE HEADING          @Z427VLS*/ 00954000
         BAL   @14,PRINTIT                                         0426 00955000
* RESPECIFY (R6) UNRESTRICTED;                             /*@Z427VLS*/ 00956000
*END;                                                      /*@Z427VLS*/ 00957000
@EL00013 DS    0H                                                  0428 00958000
@EF00013 DS    0H                                                  0428 00959000
@ER00013 LM    @14,@12,@SA00013                                    0428 00960000
         BR    @14                                                 0428 00961000
*/********************************************************************/ 00962000
*/* * * * * * * * * * * * * * * * * * * * * * *  * * * * * * * * * * */ 00963000
*/*    THIS PROC WILL PRINT DEBUG INFORMATION FOR THE USER   @Z427VLS*/ 00964000
*/*                                                          @Z427VLS*/ 00965000
*DODEBUG: PROC;                                            /*@Z427VLS*/ 00966000
DODEBUG  STM   @14,@12,@SA00014                                    0429 00967000
* DDTYPE = '1';              /*CHANGE THE DD SET DATA PRINTED ON     */ 00968000
         MVI   DDTYPE,C'1'                                         0430 00969000
* PRTLINE = BUG18;   /*MOVE THE HEADING INTO THE PRINT LINE  @0001VLS*/ 00970000
         MVI   PRTLINE+19,C' '                                     0431 00971000
         MVC   PRTLINE+20(132),PRTLINE+19                          0431 00972000
         MVC   PRTLINE(19),BUG18                                   0431 00973000
* CALL PRINTIT;      /*GO PRINT THE DEBUG HEADING            @0001VLS*/ 00974000
         BAL   @14,PRINTIT                                         0432 00975000
* DECADDR = ADDR(GROUPNUM) ; /*WHERE TO PUT CONVERTED NUMBER @Z427VLS*/ 00976000
         LA    @03,GROUPNUM                                        0433 00977000
         ST    @03,DECADDR                                         0433 00978000
* BNDECNUM = SIX;            /*SET UP FOR SIX CHARACTERS FROM BINARY#*/ 00979000
         L     @03,SIX                                             0434 00980000
         ST    @03,BNDECNUM                                        0434 00981000
* DO I = 1 BY 1 TO SIX;      /*CURRENNT LENGTY OF DEV GROUP  @Z427VLS*/ 00982000
         LA    @03,1                                               0435 00983000
         ST    @03,I                                               0435 00984000
         B     @DE00435                                            0435 00985000
@DL00435 DS    0H                                                  0436 00986000
*  BINWORD = DBUGCT(I);      /*PICK UP THE COUNT             @Z427VLS*/ 00987000
         SLA   @03,2                                               0436 00988000
         L     @03,DBUGCT-4(@03)                                   0436 00989000
         ST    @03,BINWORD                                         0436 00990000
*  CALL CONVBIN;             /*GO AND CONVERT THE BINARY NUMBER      */ 00991000
         BAL   @14,CONVBIN                                         0437 00992000
*  GPNAME = DEVGROUP(I);     /*MOVE IN THE NAME OF THE GROUP @Z427VLS*/ 00993000
         L     @03,I                                               0438 00994000
         MH    @03,@CH00549                                        0438 00995000
         LA    @01,DEVGROUP-13(@03)                                0438 00996000
         MVC   GPNAME(8),0(@01)                                    0438 00997000
*  PRTLINE = GROUPCT;        /*MOVE THE MESSAGE TO THE OUTPUT BUFFER */ 00998000
         MVI   PRTLINE+32,C' '                                     0439 00999000
         MVC   PRTLINE+33(119),PRTLINE+32                          0439 01000000
         MVC   PRTLINE(32),GROUPCT                                 0439 01001000
*  CALL PRINTIT;             /*GO PRINT THE BUFFER           @Z427VLS*/ 01002000
         BAL   @14,PRINTIT                                         0440 01003000
* END;                                                     /*@Z427VLS*/ 01004000
         LA    @03,1                                               0441 01005000
         AL    @03,I                                               0441 01006000
         ST    @03,I                                               0441 01007000
@DE00435 C     @03,SIX                                             0441 01008000
         BNH   @DL00435                                            0441 01009000
* BINWORD = CT - ONE;        /*MUST - 1 AS CT ONE AHEAD AT THIS TIME */ 01010000
         L     @03,CT                                              0442 01011000
         SL    @03,ONE                                             0442 01012000
         ST    @03,BINWORD                                         0442 01013000
* DECADDR = ADDR(TOTALCT);   /*WHERE TO PUT THE CONVERTED ITEM       */ 01014000
         LA    @03,TOTALCT                                         0443 01015000
         ST    @03,DECADDR                                         0443 01016000
* CALL  CONVBIN; /*GO AND CONVERT THE ITEM TO PRINTABLE      @Z427VLS*/ 01017000
         BAL   @14,CONVBIN                                         0444 01018000
* PRTLINE = TOTALS;          /*MOVE MESSAGE TO THE PRINT LINE        */ 01019000
         MVI   PRTLINE+22,C' '                                     0445 01020000
         MVC   PRTLINE+23(129),PRTLINE+22                          0445 01021000
         MVC   PRTLINE(22),TOTALS                                  0445 01022000
* CALL PRINTIT;                                            /*@Z427VLS*/ 01023000
         BAL   @14,PRINTIT                                         0446 01024000
* PRTLINE = BUGHEAD;         /*PRINT OUT THE WORDS DEBUG COUNTS      */ 01025000
         MVI   PRTLINE+16,C' '                                     0447 01026000
         MVC   PRTLINE+17(135),PRTLINE+16                          0447 01027000
         MVC   PRTLINE(16),BUGHEAD                                 0447 01028000
* CALL PRINTIT;              /*GO PRINT THE MESSAGE          @Z427VLS*/ 01029000
         BAL   @14,PRINTIT                                         0448 01030000
* PRTLINE = DBUGCT1;         /*MOVE THE HEADER IN TO BUFFER  @Z427VLS*/ 01031000
         MVI   PRTLINE+34,C' '                                     0449 01032000
         MVC   PRTLINE+35(117),PRTLINE+34                          0449 01033000
         MVC   PRTLINE(34),DBUGCT1                                 0449 01034000
* CALL PRINTIT;                                            /*@Z427VLS*/ 01035000
         BAL   @14,PRINTIT                                         0450 01036000
* DO I = 1 BY 1 TO NUMTODO - 1;                            /*@Z427VLS*/ 01037000
         LA    @03,1                                               0451 01038000
         ST    @03,I                                               0451 01039000
         B     @DE00451                                            0451 01040000
@DL00451 DS    0H                                                  0452 01041000
*  CPULETTR = EVLETTER(I);  /*MOVE IN CPU LETTER             @Z427VLS*/ 01042000
         LR    @15,@03                                             0452 01043000
         MH    @15,@CH00078                                        0452 01044000
         L     @01,EVPTR(,R2)                                      0452 01045000
         ALR   @01,@15                                             0452 01046000
         MVC   CPULETTR(1),EVLETTER-6(@01)                         0452 01047000
*  BINWORD  = PRIMEYES(I);    /*MOVE IN BINARY COUNT FOR THIS CPU     * 01048000
         SLA   @03,2                                               0453 01049000
         L     @03,PRIMEYES-4(@03)                                 0453 01050000
         ST    @03,BINWORD                                         0453 01051000
*  DECADDR = ADDR(PRTLINE) + 14;                           /*@Z427VLS*/ 01052000
         LA    @03,PRTLINE                                         0454 01053000
         AL    @03,@CF00725                                        0454 01054000
         ST    @03,DECADDR                                         0454 01055000
*  CALL CONVBIN;                                           /*@Z427VLS*/ 01056000
         BAL   @14,CONVBIN                                         0455 01057000
*  BINWORD = PRIMENO(I);                                   /*@Z427VLS*/ 01058000
         L     @03,I                                               0456 01059000
         SLA   @03,2                                               0456 01060000
         L     @03,PRIMENO-4(@03)                                  0456 01061000
         ST    @03,BINWORD                                         0456 01062000
*  DECADDR = DECADDR + TEN;          /*SPACE DOWN THE PRINT LINE BY10*/ 01063000
         L     @03,DECADDR                                         0457 01064000
         AL    @03,TEN                                             0457 01065000
         ST    @03,DECADDR                                         0457 01066000
*  CALL CONVBIN;                                           /*@Z427VLS*/ 01067000
         BAL   @14,CONVBIN                                         0458 01068000
*  CALL PRINTIT;                                           /*@Z427VLS*/ 01069000
         BAL   @14,PRINTIT                                         0459 01070000
* END;                                                     /*@Z427VLS*/ 01071000
         LA    @03,1                                               0460 01072000
         AL    @03,I                                               0460 01073000
         ST    @03,I                                               0460 01074000
@DE00451 L     @15,NUMTODO                                         0460 01075000
         BCTR  @15,0                                               0460 01076000
         CR    @03,@15                                             0460 01077000
         BNH   @DL00451                                            0460 01078000
* IF SPCHANGE ¬= ZERO THEN     /*ONLY PRINT IF HAD ODD CUA-DEV*/   0461 01079000
         L     @03,SPCHANGE                                        0461 01080000
         LTR   @03,@03                                             0461 01081000
         BZ    @RF00461                                            0461 01082000
*  DO;                                                     /*@0001VLS*/ 01083000
*   BINWORD = SPCHANGE;        /*SET UP THE NUMBER TO CONVERT   */ 0463 01084000
         ST    @03,BINWORD                                         0463 01085000
*   DECADDR = ADDR(SPNUM);     /*SET ADDRESS OF WHERE TO PUT IT */ 0464 01086000
         LA    @03,SPNUM                                           0464 01087000
         ST    @03,DECADDR                                         0464 01088000
*   CALL CONVBIN;              /*GO CONVERT THE ITEM TO PRINTABLE*/     01089000
         BAL   @14,CONVBIN                                         0465 01090000
*   PRTLINE = SPCHNG;          /*MOVE THE LINE OF PRINT TO BUFFER */    01091000
         MVI   PRTLINE+50,C' '                                     0466 01092000
         MVC   PRTLINE+51(101),PRTLINE+50                          0466 01093000
         MVC   PRTLINE(50),SPCHNG                                  0466 01094000
*   CALL PRINTIT;              /*GO PRINT THE MESSAGE        @0001VLS*/ 01095000
         BAL   @14,PRINTIT                                         0467 01096000
*  END;                                                    /*@0001VLS*/ 01097000
*END;                                                      /*@Z427VLS*/ 01098000
@EL00014 DS    0H                                                  0469 01099000
@EF00014 DS    0H                                                  0469 01100000
@ER00014 LM    @14,@12,@SA00014                                    0469 01101000
         BR    @14                                                 0469 01102000
*/********************************************************************/ 01103000
*/* * * * * * * * * * * * * * * * * * * * * * *  * * * * * * * * * * */ 01104000
*/*    THIS PROC WILL PRINT THE RESULT OF THE PROC DOCOUNT   @Z427VLS*/ 01105000
*/*                                                          @Z427VLS*/ 01106000
*DATALINE:  PROC;                                          /*@Z427VLS*/ 01107000
DATALINE STM   @14,@12,@SA00015                                    0470 01108000
*  R9 = CT - ONE;            /*SET UP TO LOOK BACK ON ENTRY  @0001VLS*/ 01109000
         L     @03,ONE                                             0471 01110000
         L     R9,CT                                               0471 01111000
         SLR   R9,@03                                              0471 01112000
* BNDECNUM = FIVE;                                         /*@Z427VLS*/ 01113000
         L     @15,FIVE                                            0472 01114000
         ST    @15,BNDECNUM                                        0472 01115000
* IF R9 > ZERO & SYSDEV(R9) ¬= SAVEDEV & OLDGROUP ¬= FIVE THEN     0473 01116000
         LTR   R9,R9                                               0473 01117000
         BNP   @RF00473                                            0473 01118000
         LR    @14,R9                                              0473 01119000
         MH    @14,@CH00725                                        0473 01120000
         L     @01,SORTADR(,R2)                                    0473 01121000
         ALR   @01,@14                                             0473 01122000
         AL    @01,@CF00926                                        0473 01123000
         CLC   SYSDEV-5(2,@01),SAVEDEV                             0473 01124000
         BE    @RF00473                                            0473 01125000
         C     @15,OLDGROUP                                        0473 01126000
         BE    @RF00473                                            0473 01127000
*  DO;                                                     /*@0001VLS*/ 01128000
*   SPCHANGE = SPCHANGE + ONE; /*KEEP TRACK OF ODD CASES     @0001VLS*/ 01129000
         AL    @03,SPCHANGE                                        0475 01130000
         ST    @03,SPCHANGE                                        0475 01131000
*  CALL DEVTYPE;          /*JUST IN CASE THE DEVICES ARE DIFFERENT*/    01132000
         BAL   @14,DEVTYPE                                         0476 01133000
*                         /*ON DIFFERENT CPUS & SAME CUA     @Z427VLS*/ 01134000
*  END;                                                    /*@0001VLS*/ 01135000
* DECADDR = ADDR(TOTE2) - 3;  /*SETUP ADDRESS OF WHERE TO PUT THE DAT*/ 01136000
@RF00473 LA    @03,TOTE2                                           0478 01137000
         SL    @03,@CF00073                                        0478 01138000
         ST    @03,DECADDR                                         0478 01139000
* BINWORD = SYS2TPRM;        /*SET UP TO CONVERT THE TOTAL OF PERMS  */ 01140000
         L     @03,SYS2TPRM                                        0479 01141000
         ST    @03,BINWORD                                         0479 01142000
* CALL CONVBIN;              /*GO CONVERT THE BINARY TO PRINTABLE    */ 01143000
         BAL   @14,CONVBIN                                         0480 01144000
* DECADDR = DECADDR + SIX ;  /*MOVE DOWN THE PRINT LINE FOR TOTAL TEM*/ 01145000
         L     @03,DECADDR                                         0481 01146000
         AL    @03,SIX                                             0481 01147000
         ST    @03,DECADDR                                         0481 01148000
* BINWORD = SYS2TTOT;        /*MOVE IN THE TEMPARY TOTAL     @Z427VLS*/ 01149000
         L     @03,SYS2TTOT                                        0482 01150000
         ST    @03,BINWORD                                         0482 01151000
* CALL CONVBIN;              /*GO AND CONVERT THE # TO PRINTABLE     */ 01152000
         BAL   @14,CONVBIN                                         0483 01153000
* DECADDR = DECADDR + TWO;                                 /*@Z427VLS*/ 01154000
         L     @03,DECADDR                                         0484 01155000
         AL    @03,TWO                                             0484 01156000
         ST    @03,DECADDR                                         0484 01157000
* BNDECNUM = FOUR;                                         /*@Z427VLS*/ 01158000
         MVC   BNDECNUM(4),@CF00060                                0485 01159000
* DO R = 1 BY 1 TO EVNUM;                                  /*@Z427VLS*/ 01160000
         LA    @03,1                                               0486 01161000
         ST    @03,R                                               0486 01162000
         B     @DE00486                                            0486 01163000
@DL00486 DS    0H                                                  0487 01164000
*  IF SHRFLGS(R) = ON THEN                                         0487 01165000
         SLR   @15,@15                                             0487 01166000
         IC    @15,SHRFLGS-1(@03)                                  0487 01167000
         C     @15,@CF00052                                        0487 01168000
         BNE   @RF00487                                            0487 01169000
*   DO;                                                    /*@Z427VLS*/ 01170000
*   DECADDR = DECADDR + FIVE;/*MOVE FIVE DOWN THE PRINT LINE @Z427VLS*/ 01171000
         L     @15,DECADDR                                         0489 01172000
         AL    @15,FIVE                                            0489 01173000
         ST    @15,DECADDR                                         0489 01174000
*   BINWORD = SYS2PERM(R);   /*PICK UP THE PERM ERRORS FOR NEXT CPU  */ 01175000
         SLA   @03,2                                               0490 01176000
         L     @03,SYS2PERM-4(@03)                                 0490 01177000
         ST    @03,BINWORD                                         0490 01178000
*   CALL CONVBIN;            /*GO CONVERT THE ITEM TO PRINTABLE      */ 01179000
         BAL   @14,CONVBIN                                         0491 01180000
*   DECADDR = DECADDR + FIVE;/*MOVE DOWN THE PRINT LINE FOR TEMP     */ 01181000
         L     @03,DECADDR                                         0492 01182000
         AL    @03,FIVE                                            0492 01183000
         ST    @03,DECADDR                                         0492 01184000
*   BINWORD = SYS2TEMP(R);   /*PICK UP THE NEXT TEMPARY COUNT TO CONV*/ 01185000
         L     @03,R                                               0493 01186000
         SLA   @03,2                                               0493 01187000
         L     @03,SYS2TEMP-4(@03)                                 0493 01188000
         ST    @03,BINWORD                                         0493 01189000
*   CALL CONVBIN;            /*GO CONVERT THE TEMPARY COUNT  @Z427VLS*/ 01190000
         BAL   @14,CONVBIN                                         0494 01191000
*   END;                                                   /*@Z427VLS*/ 01192000
*   ELSE                                                           0496 01193000
*    DO;                                                   /*@Z427VLS*/ 01194000
         B     @RC00487                                            0496 01195000
@RF00487 DS    0H                                                  0497 01196000
*     R9 = DECADDR + EIGHT;  /*WHERE TO PUT THE DASH         @Z427VLS*/ 01197000
         LA    R9,8                                                0497 01198000
         AL    R9,DECADDR                                          0497 01199000
*     GEN(MVI  0(R9),X'60'); /*PUT THE DASHH IN WHERE A ZERO WOULD BE*/ 01200000
         MVI  0(R9),X'60'                                               01201000
*     R9 = R9 + FIVE;        /*MOVE THE POINTER TO THE NEXT LOCATION */ 01202000
         AL    R9,FIVE                                             0499 01203000
*     GEN(MVI  0(R9),X'60'); /*ANGAIN MOVE IN A DASH         @Z427VLS*/ 01204000
         MVI  0(R9),X'60'                                               01205000
*     DECADDR = DECADDR + TEN;/*MOVE POINTER DOWN THE PRINT LINE     */ 01206000
         L     @03,DECADDR                                         0501 01207000
         AL    @03,TEN                                             0501 01208000
         ST    @03,DECADDR                                         0501 01209000
*    END;                                                  /*@Z427VLS*/ 01210000
* END;                                                     /*@Z427VLS*/ 01211000
@RC00487 LA    @03,1                                               0503 01212000
         AL    @03,R                                               0503 01213000
         ST    @03,R                                               0503 01214000
@DE00486 L     @01,EVPTR(,R2)                                      0503 01215000
         CH    @03,EVNUM(,@01)                                     0503 01216000
         BNH   @DL00486                                            0503 01217000
* CALL PRINTIT;              /*GO PRINT THIS GREAT INFO      @Z427VLS*/ 01218000
         BAL   @14,PRINTIT                                         0504 01219000
* SYS2TPRM = ZERO;           /*ZERO FOR THE NEXT PASS        @Z427VLS*/ 01220000
         SLR   @03,@03                                             0505 01221000
         ST    @03,SYS2TPRM                                        0505 01222000
* SYS2TTOT = ZERO;           /*SAME AS ABOVE                 @Z427VLS*/ 01223000
         ST    @03,SYS2TTOT                                        0506 01224000
*   IF SWITCH2 = ON & CT ¬> MAXLIMIT THEN /*CHECK IF DONE FIRST    */   01225000
         TM    SWITCH2,B'01000000'                                 0507 01226000
         BNO   @RF00507                                            0507 01227000
         L     @03,CT                                              0507 01228000
         C     @03,MAXLIMIT                                        0507 01229000
         BH    @RF00507                                            0507 01230000
*  DO;                       /*PROC CALLING PROC THAT WOULD CALL     */ 01231000
*   CALL HEADING2;           /*CALLING PROC                  @Z427VLS*/ 01232000
         BAL   @14,HEADING2                                        0509 01233000
*   CALL TOPLINE;            /*GOT TO HAVE COMLPETE HEADING  @Z427VLS*/ 01234000
         BAL   @14,TOPLINE                                         0510 01235000
*   SWITCH2 = OFF;           /*SO DONT RETURN TILL NEEDED    @Z427VLS*/ 01236000
         NI    SWITCH2,B'10111111'                                 0511 01237000
*   CALL PRTGROUP;           /*TELL THEM AGAIN ABOUT THE GROUP NAME  */ 01238000
         BAL   @14,PRTGROUP                                        0512 01239000
*   CALL DEVTYPE;            /*PUT IN TO THE PRINT LINE      @Z427VLS*/ 01240000
         BAL   @14,DEVTYPE                                         0513 01241000
*   CALL DOCUX;              /*PUT THE CUX INTO THE PRINT LINE       */ 01242000
         BAL   @14,DOCUX                                           0514 01243000
*  END;                                                    /*@Z427VLS*/ 01244000
* IF DEBUG22 = ON THEN                                             0516 01245000
@RF00507 TM    DEBUG22(R2),B'00000010'                             0516 01246000
         BNO   @RF00516                                            0516 01247000
*  DO;                                                     /*@Z427VLS*/ 01248000
* PRTLINE = BUG22MSG;           /*MOVE IN A LABLE FOR DEBUG DATA  */    01249000
         MVI   PRTLINE+16,C' '                                     0518 01250000
         MVC   PRTLINE+17(135),PRTLINE+16                          0518 01251000
         MVC   PRTLINE(16),BUG22MSG                                0518 01252000
*   DECADDR= ADDR(TOTE2) + 3;   /*ADDRESS OF WHERE TO PUT THE DATA */   01253000
         LA    @03,TOTE2                                           0519 01254000
         AL    @03,@CF00073                                        0519 01255000
         ST    @03,DECADDR                                         0519 01256000
*   BINWORD = NUMP;               /*NUMBER OF TIMES THIS PRIME CPU   */ 01257000
         L     @03,NUMP                                            0520 01258000
         ST    @03,BINWORD                                         0520 01259000
*   CALL CONVBIN;                 /*GO CONVERT TO PRINTABLE  @Z427VLS*/ 01260000
         BAL   @14,CONVBIN                                         0521 01261000
*   DO R = 1 BY 1 TO NUMTODO -1;  /*SET UP LOOP CONTROLS FOR ALL CPUS*/ 01262000
         LA    @03,1                                               0522 01263000
         ST    @03,R                                               0522 01264000
         B     @DE00522                                            0522 01265000
@DL00522 DS    0H                                                  0523 01266000
*    DECADDR= DECADDR+ TEN;       /*MOVE DOWN THE PRINT LINE @Z427VLS*/ 01267000
         L     @15,DECADDR                                         0523 01268000
         AL    @15,TEN                                             0523 01269000
         ST    @15,DECADDR                                         0523 01270000
*    BINWORD = NUMS(R);           /*LOAD COUNT OF ITEM IN SEC CPU    */ 01271000
         SLA   @03,2                                               0524 01272000
         L     @03,NUMS-4(@03)                                     0524 01273000
         ST    @03,BINWORD                                         0524 01274000
*    CALL CONVBIN;                /*CONVERT # OF ITEMS SUMED THIS CPU*/ 01275000
         BAL   @14,CONVBIN                                         0525 01276000
*   END;                                                   /*@Z427VLS*/ 01277000
         LA    @03,1                                               0526 01278000
         AL    @03,R                                               0526 01279000
         ST    @03,R                                               0526 01280000
@DE00522 L     @15,NUMTODO                                         0526 01281000
         BCTR  @15,0                                               0526 01282000
         CR    @03,@15                                             0526 01283000
         BNH   @DL00522                                            0526 01284000
*   CALL PRINTIT;                 /*GO PRINT THE DEBUG COUNTS        */ 01285000
         BAL   @14,PRINTIT                                         0527 01286000
*   NUMP = ZERO;                  /*CLEAR THE COUNTER        @Z427VLS*/ 01287000
         SLR   @03,@03                                             0528 01288000
         ST    @03,NUMP                                            0528 01289000
*   GEN(XC NUMS(64),NUMS);        /*CLEAR THE ARRAY          @Z427VLS*/ 01290000
         XC NUMS(64),NUMS                                               01291000
*  END;                                                    /*@Z427VLS*/ 01292000
* GEN(XC  SHRFLGS(16),SHRFLGS);/*CLEAR PRINT FLAGS FOR NEXT ENTRY    */ 01293000
@RF00516 DS    0H                                                  0531 01294000
         XC  SHRFLGS(16),SHRFLGS                                        01295000
* GEN(MVI SYS2TEMP,X'00');   /*CAN'T DO ALL FOUR AT ONCE DO TO COMPLI*/ 01296000
         MVI SYS2TEMP,X'00'                                             01297000
* GEN(MVC SYS2TEMP+1(127),SYS2TEMP);/*MAY PUT SINGLE ITEMS AWAY FROM */ 01298000
         MVC SYS2TEMP+1(127),SYS2TEMP                                   01299000
*                            /*WHERE IT PUTS THE ARRAYS WHY(?)       */ 01300000
*END;                                                      /*@Z427VLS*/ 01301000
@EL00015 DS    0H                                                  0534 01302000
@EF00015 DS    0H                                                  0534 01303000
@ER00015 LM    @14,@12,@SA00015                                    0534 01304000
         BR    @14                                                 0534 01305000
*/********************************************************************/ 01306000
*/* * * * * * * * * * * * * * * * * * * * * * *  * * * * * * * * * * */ 01307000
*/*    THIS PROC WILL DO THE WORK OF ADDING THE RECORDS UP   @Z427VLS*/ 01308000
*/*    SHRFLGS SETTING OF THIS TABLE IS TO SUPPRES THE # OF ZERO'S   */ 01309000
*/*    IN THE PRINT OUT WITH A BYTE FOR EACH CPU & ONE FOR THE TOTALS*/ 01310000
*/*    THE TOTALS IS ALWAYS INIT TO ONE SO ALWAYS PRINT TOTAL       */  01311000
*/*    FOR THE REST IF NO DATA FROM CPU PRIME OR SECONDARY THE NOTHIN*/ 01312000
*/*                                                          @Z427VLS*/ 01313000
*DOCOUNT:  PROC;                                           /*@Z427VLS*/ 01314000
DOCOUNT  STM   @14,@12,12(@13)                                     0535 01315000
*       R8 = LASTCPU + '10'X;      /*PICK UP PRIME CPU       @Z427VLS*/ 01316000
         LA    R8,16                                               0536 01317000
         AL    R8,LASTCPU                                          0536 01318000
*       SRL(R8,FOUR);             /*SET UP FOR INDEXING      @Z427VLS*/ 01319000
         SRL   R8,4                                                0537 01320000
*       SHRFLGS(R8) = ON;                                  /*@Z427VLS*/ 01321000
         LA    @03,1                                               0538 01322000
         STC   @03,SHRFLGS-1(R8)                                   0538 01323000
*       IF DEBUG22 = ON THEN      /*COUNT THE NUMBER FOR EACH SORT B */ 01324000
         TM    DEBUG22(R2),B'00000010'                             0539 01325000
         BNO   @RF00539                                            0539 01326000
*        DO;                                               /*@Z427VLS*/ 01327000
*         NUMP = NUMP + ONE;      /*COUNT OF # OF PRIME THIS SORT BRE*/ 01328000
         L     @03,ONE                                             0541 01329000
         L     @15,NUMP                                            0541 01330000
         ALR   @15,@03                                             0541 01331000
         ST    @15,NUMP                                            0541 01332000
*         NUMS(R8) = NUMS(R8) + ONE;/*SECONDARY CPU THIS SORT BREAK  */ 01333000
         LR    @15,R8                                              0542 01334000
         SLA   @15,2                                               0542 01335000
         AL    @03,NUMS-4(@15)                                     0542 01336000
         ST    @03,NUMS-4(@15)                                     0542 01337000
*        END;                                              /*@Z427VLS*/ 01338000
*       R9 = R8;                  /*SAVE FOR LATTER USE      @Z427VLS*/ 01339000
@RF00539 LR    R9,R8                                               0544 01340000
*       R8 = (SYSITEM(CT) & '0F'X) + ONE;/*INX TO POINTER TO OLD CPU*/  01341000
         L     @03,ONE                                             0545 01342000
         L     @15,CT                                              0545 01343000
         MH    @15,@CH00725                                        0545 01344000
         L     @14,SORTADR(,R2)                                    0545 01345000
         LA    R8,15                                               0545 01346000
         LA    @01,0(@15,@14)                                      0545 01347000
         AL    @01,@CF00928                                        0545 01348000
         SLR   @00,@00                                             0545 01349000
         IC    @00,SYSITEM-4(,@01)                                 0545 01350000
         NR    R8,@00                                              0545 01351000
         ALR   R8,@03                                              0545 01352000
*       SHRFLGS(R8) = ON;         /*A PRINT TIME IF ZERO NO PRINT    */ 01353000
         LA    @07,1                                               0546 01354000
         STC   @07,SHRFLGS-1(R8)                                   0546 01355000
*     SYS2TPRM = SYS2TPRM + SYSPERM(CT);                   /*@0099VLS*/ 01356000
         ST    @15,@TF00001                                        0547 01357000
         ALR   @15,@14                                             0547 01358000
         AL    @15,@CF00929                                        0547 01359000
         ICM   @15,12,SYSPERM-8(@15)                               0547 01360000
         SRA   @15,16                                              0547 01361000
         L     @07,SYS2TPRM                                        0547 01362000
         ALR   @07,@15                                             0547 01363000
         ST    @07,SYS2TPRM                                        0547 01364000
*     SYS2PERM(R8) = SYS2PERM(R8) + SYSPERM(CT);           /*@0099VLS*/ 01365000
         LR    @07,R8                                              0548 01366000
         SLA   @07,2                                               0548 01367000
         L     @06,SYS2PERM-4(@07)                                 0548 01368000
         ALR   @06,@15                                             0548 01369000
         ST    @06,SYS2PERM-4(@07)                                 0548 01370000
*     TOTALPRM(R8) = TOTALPRM(R8) + SYSPERM(CT);           /*@0099VLS*/ 01371000
         L     @06,TOTALPRM-4(@07)                                 0549 01372000
         ALR   @06,@15                                             0549 01373000
         ST    @06,TOTALPRM-4(@07)                                 0549 01374000
*     TOTALTOT = TOTALTOT + SYSPERM(CT);                   /*@0099VLS*/ 01375000
         AL    @15,TOTALTOT                                        0550 01376000
         ST    @15,TOTALTOT                                        0550 01377000
*       SYS2TEMP(R8) = SYS2TEMP(R8) + SYSTEMP(CT);         /*@Z427VLS*/ 01378000
         AL    @14,@TF00001                                        0551 01379000
         AL    @14,@CF00930                                        0551 01380000
         ICM   @15,15,SYSTEMP-10(@14)                              0551 01381000
         L     @14,SYS2TEMP-4(@07)                                 0551 01382000
         ALR   @14,@15                                             0551 01383000
         ST    @14,SYS2TEMP-4(@07)                                 0551 01384000
*       SYS2TTOT = SYS2TTOT + SYSTEMP(CT);                 /*@Z427VLS*/ 01385000
         L     @14,SYS2TTOT                                        0552 01386000
         ALR   @14,@15                                             0552 01387000
         ST    @14,SYS2TTOT                                        0552 01388000
*         TOTALTP = TOTALTP+ SYSTEMP(CT);                  /*@Z427VLS*/ 01389000
         L     @14,TOTALTP                                         0553 01390000
         ALR   @14,@15                                             0553 01391000
         ST    @14,TOTALTP                                         0553 01392000
*         TOTALTMP(R8) = TOTALTMP(R8) + SYSTEMP(CT);       /*@Z427VLS*/ 01393000
         AL    @15,TOTALTMP-4(@07)                                 0554 01394000
         ST    @15,TOTALTMP-4(@07)                                 0554 01395000
*       IF DEBUG18 = ON THEN                                       0555 01396000
         TM    DEBUG18(R2),B'00100000'                             0555 01397000
         BNO   @RF00555                                            0555 01398000
*        DO;                                               /*@Z427VLS*/ 01399000
*         DBUGCT(OLDGROUP) = DBUGCT(OLDGROUP) + ONE;       /*@Z427VLS*/ 01400000
         L     @06,OLDGROUP                                        0557 01401000
         SLA   @06,2                                               0557 01402000
         L     @15,DBUGCT-4(@06)                                   0557 01403000
         ALR   @15,@03                                             0557 01404000
         ST    @15,DBUGCT-4(@06)                                   0557 01405000
*         PRIMEYES(R8) = PRIMEYES(R8) + ONE;               /*@Z427VLS*/ 01406000
         L     @06,PRIMEYES-4(@07)                                 0558 01407000
         ALR   @06,@03                                             0558 01408000
         ST    @06,PRIMEYES-4(@07)                                 0558 01409000
*         IF R8 ¬= R9 THEN           /*IS THE ENTRY FROM A SHARED DEV*/ 01410000
         CR    R8,R9                                               0559 01411000
         BE    @RF00559                                            0559 01412000
*         PRIMENO(R9) = PRIMENO(R9) + ONE;                 /*@Z427VLS*/ 01413000
         LR    @15,R9                                              0560 01414000
         SLA   @15,2                                               0560 01415000
         AL    @03,PRIMENO-4(@15)                                  0560 01416000
         ST    @03,PRIMENO-4(@15)                                  0560 01417000
*        END;                                              /*@Z427VLS*/ 01418000
@RF00559 DS    0H                                                  0562 01419000
*       CT = CT + ONE;                                     /*@Z427VLS*/ 01420000
@RF00555 L     @03,CT                                              0562 01421000
         AL    @03,ONE                                             0562 01422000
         ST    @03,CT                                              0562 01423000
*END;                                                      /*@Z427VLS*/ 01424000
@EL00016 DS    0H                                                  0563 01425000
@EF00016 DS    0H                                                  0563 01426000
@ER00016 LM    @14,@12,12(@13)                                     0563 01427000
         BR    @14                                                 0563 01428000
*/********************************************************************/ 01429000
*/* * * * * * * * * * * * * * * * * * * * * * *  * * * * * * * * * * */ 01430000
*/*    THIS PROC WILL MOVE THE DEVICE TYPE INTO THE PRINT BUFFER     */ 01431000
*/*    IF THE DEVICE TYPE IS ALL ZEROS WORD UKNO IS MOVED IN @Z427VLS*/ 01432000
*/*                                                          @Z427VLS*/ 01433000
*DEVTYPE: PROC;                                            /*@Z427VLS*/ 01434000
DEVTYPE  STM   @14,@12,@SA00017                                    0564 01435000
*IF SYSDEV(CT) ¬= '0000'X THEN                                     0565 01436000
         L     @03,CT                                              0565 01437000
         MH    @03,@CH00725                                        0565 01438000
         L     @15,SORTADR(,R2)                                    0565 01439000
         ST    @03,@TF00001                                        0565 01440000
         ALR   @03,@15                                             0565 01441000
         AL    @03,@CF00926                                        0565 01442000
         CLC   SYSDEV-5(2,@03),@CB00206                            0565 01443000
         BE    @RF00565                                            0565 01444000
* DO;                                                              0566 01445000
* IF SYSDEV(CT) ¬= '3830'X THEN   /*IF DEVICE GROUP IS NOT 3830 THEN */ 01446000
         LR    @03,@15                                             0567 01447000
         AL    @03,@TF00001                                        0567 01448000
         AL    @03,@CF00926                                        0567 01449000
         CLC   SYSDEV-5(2,@03),@CB00885                            0567 01450000
         BE    @RF00567                                            0567 01451000
* DO;                                                              0568 01452000
* ADDNXT = ADDR(DEVTYP);          /*SET UP WHERE TO PUT CONVERTED    */ 01453000
         LA    @03,DEVTYP                                          0569 01454000
         ST    @03,ADDNXT                                          0569 01455000
* NUMBER = TWO;                   /*SET UP TO CHANGE 2 BYTES TO PRINT*/ 01456000
         L     @03,TWO                                             0570 01457000
         ST    @03,NUMBER                                          0570 01458000
* NEXTBY = ADDR(SYSDEV(CT));      /*ADDRESS OF WHERE TO GET THE DATA */ 01459000
         L     @03,@TF00001                                        0571 01460000
         AL    @15,@CF00926                                        0571 01461000
         LA    @03,SYSDEV-5(@03,@15)                               0571 01462000
         ST    @03,NEXTBY                                          0571 01463000
* CALL CONVERT;                   /*GO CONVERT THE ITEM TO PRINTABLE */ 01464000
         BAL   @14,CONVERT                                         0572 01465000
* END;                                                             0573 01466000
* ELSE                                                             0574 01467000
* DEVTYP = '38XX';                /* CHANGE DASD TO 38XX             */ 01468000
         B     @RC00567                                            0574 01469000
@RF00567 MVC   DEVTYP(4),@CC00886                                  0574 01470000
* END;                                                             0575 01471000
* ELSE                                                             0576 01472000
* DEVTYP = UKNO;                  /*MOVE UKNO INTO PRINT BUFFER      */ 01473000
         B     @RC00565                                            0576 01474000
@RF00565 MVC   DEVTYP(4),UKNO                                      0576 01475000
* SAVEDEV = SYSDEV(CT);   /*SAVE FOR LATER CHECK             @Z427VLS*/ 01476000
@RC00565 L     @03,CT                                              0577 01477000
         MH    @03,@CH00725                                        0577 01478000
         L     @01,SORTADR(,R2)                                    0577 01479000
         ALR   @01,@03                                             0577 01480000
         AL    @01,@CF00926                                        0577 01481000
         MVC   SAVEDEV(2),SYSDEV-5(@01)                            0577 01482000
*END;                                                      /*@Z427VLS*/ 01483000
@EL00017 DS    0H                                                  0578 01484000
@EF00017 DS    0H                                                  0578 01485000
@ER00017 LM    @14,@12,@SA00017                                    0578 01486000
         BR    @14                                                 0578 01487000
*/********************************************************************/ 01488000
*/* * * * * * * * * * * * * * * * * * * * * * *  * * * * * * * * * * */ 01489000
*/*    THIS PROC WILL MOVE THE CUA INTO THE PRINT BUFFER AND FOR SOME*/ 01490000
*/*    GROUPS WILL FORCE AN X IN THE LAST POSITION OF THE CUA        */ 01491000
*/*                                                          @Z427VLS*/ 01492000
*DOCUX: PROC;                                              /*@Z427VLS*/ 01493000
DOCUX    STM   @14,@12,@SA00018                                    0579 01494000
*  IF SYSTROLL(CT) = ON THEN                                       0580 01495000
         L     @03,CT                                              0580 01496000
         MH    @03,@CH00725                                        0580 01497000
         L     @15,SORTADR(,R2)                                    0580 01498000
         ST    @03,@TF00001                                        0580 01499000
         ALR   @03,@15                                             0580 01500000
         AL    @03,@CF00931                                        0580 01501000
         TM    SYSTROLL-2(@03),B'00000100'                         0580 01502000
         BNO   @RF00580                                            0580 01503000
*   DO;                                                    /*@D3506GB*/ 01504000
*     RESPECIFY (R0,R1) RESTRICTED;                        /*@D3506GB*/ 01505000
*     NUMBER = 2;                                          /*@D3506GB*/ 01506000
         MVC   NUMBER(4),@CF00071                                  0583 01507000
*     NEXTBY = ADDR(TEMPCUA);                              /*@D3506GB*/ 01508000
         LA    @03,TEMPCUA                                         0584 01509000
         ST    @03,NEXTBY                                          0584 01510000
*     R0 = SYSRT(CT);            /*LOAD THE CUA FOR THIS ENTRY*/   0585 01511000
         AL    @15,@TF00001                                        0585 01512000
         AL    @15,@CF00932                                        0585 01513000
         SLR   R0,R0                                               0585 01514000
         ICM   R0,3,SYSRT-1(@15)                                   0585 01515000
*     SRL(R0,4);                 /*DROP CONTROL FLAG         @D3506GB*/ 01516000
         SRL   R0,4                                                0586 01517000
*     TEMPCUA =  R0 ;            /*FINSH THE BUILDING OF LOW CUA*/ 0587 01518000
         STH   R0,TEMPCUA                                          0587 01519000
*     ADDNXT = ADDR(CUX);        /*LOCATION OF WHERE CONVERTED GOES*/   01520000
         LA    @03,CUX                                             0588 01521000
         ST    @03,ADDNXT                                          0588 01522000
*     SWITCH1 = ON;              /*ONLY PRINT 1 & 1/2 BYTES  @D3506GB*/ 01523000
         OI    SWITCH1,B'10000000'                                 0589 01524000
*     CALL CONVERT;              /*CHANGE TO PRINTABLE LOW END*/   0590 01525000
         BAL   @14,CONVERT                                         0590 01526000
*     NUMBER = 1;                                          /*@D3506GB*/ 01527000
         LA    @03,1                                               0591 01528000
         ST    @03,NUMBER                                          0591 01529000
*     NEXTBY = NEXTBY + 1;                                 /*@D3506GB*/ 01530000
         AL    @03,NEXTBY                                          0592 01531000
         ST    @03,NEXTBY                                          0592 01532000
*     TEMPCUA =SYSRANGE(CT) ;    /*LOAD THE TO CUA RANGE ON CONTROL */  01533000
         L     @03,CT                                              0593 01534000
         MH    @03,@CH00725                                        0593 01535000
         L     @15,SORTADR(,R2)                                    0593 01536000
         AL    @15,@CF00933                                        0593 01537000
         SLR   @14,@14                                             0593 01538000
         IC    @14,SYSRANGE-7(@03,@15)                             0593 01539000
         STH   @14,TEMPCUA                                         0593 01540000
*     ADDNXT = ADDNXT + 5;      /*MOVE DOWN THE PRINT LINE FOR TO CUA*/ 01541000
         LA    @03,5                                               0594 01542000
         AL    @03,ADDNXT                                          0594 01543000
         ST    @03,ADDNXT                                          0594 01544000
*     CALL CONVERT;              /*MAKE PRINTABLE TO CUA     @D3506GB*/ 01545000
         BAL   @14,CONVERT                                         0595 01546000
*    GEN(MVI  CUX+4,X'60');    /*MOVE IN THE DASH            @D3506GB*/ 01547000
         MVI  CUX+4,X'60'                                               01548000
*  RESPECIFY (R0,R1) UNRESTRICTED;                         /*@D3506GB*/ 01549000
*    END;                                                  /*@D3506GB*/ 01550000
*  ELSE                                                            0599 01551000
*   DO;                                                    /*@D3506GB*/ 01552000
         B     @RC00580                                            0599 01553000
@RF00580 DS    0H                                                  0600 01554000
* ADDNXT = ADDR(CUX);             /*SET UP WHERE TO PUT CONVERTED    */ 01555000
         LA    @03,CUX                                             0600 01556000
         ST    @03,ADDNXT                                          0600 01557000
* NUMBER = TWO;                   /*SET UP TO CHANGE 2 BYTES TO PRINT*/ 01558000
         L     @03,TWO                                             0601 01559000
         ST    @03,NUMBER                                          0601 01560000
* SWITCH1 = ON;                   /*SET NOT TO USE 1/2 OF FIRST BYTE */ 01561000
         OI    SWITCH1,B'10000000'                                 0602 01562000
* R8 = SYSRT(CT);                 /*PULL UP WORD WITH CUX INFO       */ 01563000
         L     @03,CT                                              0603 01564000
         MH    @03,@CH00725                                        0603 01565000
         L     @01,SORTADR(,R2)                                    0603 01566000
         ALR   @01,@03                                             0603 01567000
         AL    @01,@CF00932                                        0603 01568000
         SLR   R8,R8                                               0603 01569000
         ICM   R8,3,SYSRT-1(@01)                                   0603 01570000
* SRL(R8,FOUR);                   /*DUMP JUNK BITS & POSITION CORRECT*/ 01571000
         SRL   R8,4                                                0604 01572000
* TEMPCUA =  R8;                  /*SET VALUE IN ITEM TO CONVERT     */ 01573000
         STH   R8,TEMPCUA                                          0605 01574000
* NEXTBY = ADDR(TEMPCUA);         /*SET UP ADDRESS OF WHERE DATA KEPT*/ 01575000
         LA    @03,TEMPCUA                                         0606 01576000
         ST    @03,NEXTBY                                          0606 01577000
* CALL CONVERT;                   /*GO CONVERT THE DATA TO PRINTABLE */ 01578000
         BAL   @14,CONVERT                                         0607 01579000
* IF SYSGROUP(CT) = TWO |                                          0608 01580000
*    SYSGROUP(CT) = THREE |                                        0608 01581000
*    SYSGROUP(CT) = FOUR                                           0608 01582000
*   THEN                                                           0608 01583000
         L     @03,CT                                              0608 01584000
         MH    @03,@CH00725                                        0608 01585000
         L     @01,SORTADR(,R2)                                    0608 01586000
         AL    @01,@CF00934                                        0608 01587000
         SLR   @15,@15                                             0608 01588000
         IC    @15,SYSGROUP(@03,@01)                               0608 01589000
         C     @15,TWO                                             0608 01590000
         BE    @RT00608                                            0608 01591000
         C     @15,@CF00073                                        0608 01592000
         BE    @RT00608                                            0608 01593000
         C     @15,@CF00060                                        0608 01594000
         BNE   @RF00608                                            0608 01595000
@RT00608 DS    0H                                                  0609 01596000
*     GEN(MVI  CUX+3,X'E7');       /*MOVE IN TO LAST BYTE AN 'X'    */  01597000
         MVI  CUX+3,X'E7'                                               01598000
*   END;                                                   /*@D3506GB*/ 01599000
*END;                                                      /*@Z427VLS*/ 01600000
@EL00018 DS    0H                                                  0611 01601000
@EF00018 DS    0H                                                  0611 01602000
@ER00018 LM    @14,@12,@SA00018                                    0611 01603000
         BR    @14                                                 0611 01604000
*/********************************************************************/ 01605000
*/* * * * * * * * * * * * * * * * * * * * * * *  * * * * * * * * * * */ 01606000
*/*    THIS PROC WILL PRINT OUT THE HEADING FOR THE SECOND PART      */ 01607000
*/*                                                          @Z427VLS*/ 01608000
*HEADING2:  PROC;                                          /*@Z427VLS*/ 01609000
HEADING2 STM   @14,@12,@SA00019                                    0612 01610000
*  IF SWITCH2 = OFF THEN /*AVOID A BLANK PAGE                @Z427VLS*/ 01611000
         TM    SWITCH2,B'01000000'                                 0613 01612000
         BNZ   @RF00613                                            0613 01613000
*  DO;                                                     /*@Z427VLS*/ 01614000
*  SPACING = UPSPACE;    /*LET'S START ON A FRESH PAGE BY SKIP CHN 1 */ 01615000
         MVC   SPACING(1),UPSPACE                                  0615 01616000
*  MYLINECT = ZERO;                                        /*@Z427VLS*/ 01617000
         SLR   @03,@03                                             0616 01618000
         ST    @03,MYLINECT                                        0616 01619000
*  CALL PRINTIT;         /*GP SKIP TO CHANNEL ONE            @Z427VLS*/ 01620000
         BAL   @14,PRINTIT                                         0617 01621000
*  END;                                                    /*@Z427VLS*/ 01622000
*  SPACING = SINGLE ;    /*RESTORE THE SPACING TO SINGLE     @Z427VLS*/ 01623000
@RF00613 MVC   SPACING(1),SINGLE                                   0619 01624000
*  PART1 = PART2;        /*SET UP THE FIRST LINE TO REFLECT SECOND   */ 01625000
         MVC   PART1(8),PART2                                      0620 01626000
*  CHANGE1 = CHANGE2 ;   /*CHANGE SECOND LINE TO 2 PART OF OUTPUT    */ 01627000
         MVC   CHANGE1(23),CHANGE2                                 0621 01628000
*  HEADMOVE = LINE1;     /*MOVE IN THE FIRST LINE TO BUFFER  @Z427VLS*/ 01629000
         MVC   HEADMOVE(59),LINE1                                  0622 01630000
*  CALL PRINTIT;         /*GO & PRINT OUT THE FIRST LINE     @Z427VLS*/ 01631000
         BAL   @14,PRINTIT                                         0623 01632000
*  HEADMOVE = LINE2;     /*MOVE SECOND LINE TO THE OUTPUT BUFFER     */ 01633000
         MVC   HEADMOVE(59),LINE2                                  0624 01634000
*  CALL PRINTIT;         /*GO AND PRINT THE OUTPUT           @Z427VLS*/ 01635000
         BAL   @14,PRINTIT                                         0625 01636000
*  HEADMOVE = LINE3;     /*MOVE IN THE THIRD LINE OF HEADING @Z427VLS*/ 01637000
         MVC   HEADMOVE(59),LINE3                                  0626 01638000
*  CALL PRINTIT;         /*GO & PRINT THE LINE               @Z427VLS*/ 01639000
         BAL   @14,PRINTIT                                         0627 01640000
*END;                                                      /*@Z427VLS*/ 01641000
@EL00019 DS    0H                                                  0628 01642000
@EF00019 DS    0H                                                  0628 01643000
@ER00019 LM    @14,@12,@SA00019                                    0628 01644000
         BR    @14                                                 0628 01645000
*/********************************************************************/ 01646000
*/* * * * * * * * * * * * * * * * * * * * * * *  * * * * * * * * * * */ 01647000
*/*    THIS PROC WILL SETUP LINKAGE TO ACCESS I/O SERVICE PRINT      */ 01648000
*/*                                                          @Z427VLS*/ 01649000
*PRINTIT: PROC;                                            /*@Z427VLS*/ 01650000
PRINTIT  STM   @14,@12,@SA00020                                    0629 01651000
*  PRINTADR = ADDR(PRINTLNE); /*HAVE TO PASS I/O ADDRESS OF BUFFER   */ 01652000
         LA    @03,PRINTLNE                                        0630 01653000
         ST    @03,PRINTADR(,R2)                                   0630 01654000
*  CALL IOHND(RITEPRTR);      /*PASS CONTROL TO I/O HANDLER  @Z427VLS*/ 01655000
         L     @15,ADIOHND(,R2)                                    0631 01656000
         LA    @01,@AL00631                                        0631 01657000
         BALR  @14,@15                                             0631 01658000
*  IF SPACING= SINGLE & DDTYPE = '0' THEN                          0632 01659000
         CLC   SPACING(1),SINGLE                                   0632 01660000
         BNE   @RF00632                                            0632 01661000
         CLI   DDTYPE,C'0'                                         0632 01662000
         BNE   @RF00632                                            0632 01663000
*   MYLINECT = MYLINECT + ONE;                             /*@Z427VLS*/ 01664000
         L     @03,MYLINECT                                        0633 01665000
         AL    @03,ONE                                             0633 01666000
         ST    @03,MYLINECT                                        0633 01667000
*   ELSE                                                           0634 01668000
*    IF SPACING= DOUBLE THEN  /*DOUBLE SPACING               @Z427VLS*/ 01669000
         B     @RC00632                                            0634 01670000
@RF00632 CLC   SPACING(1),DOUBLE                                   0634 01671000
         BNE   @RF00634                                            0634 01672000
*     MYLINECT = MYLINECT + TWO; /*ADD 2 TO THE COUNT        @Z427VLS*/ 01673000
         L     @03,MYLINECT                                        0635 01674000
         AL    @03,TWO                                             0635 01675000
         ST    @03,MYLINECT                                        0635 01676000
*      ELSE                                                        0636 01677000
*       IF SPACING = TRIPLE      /* RIGHT,TRIPLE SPACING     @Z427VLS*/ 01678000
*         THEN MYLINECT = MYLINECT + THREE;/*OTHER WISE UPSPACE      */ 01679000
         B     @RC00634                                            0636 01680000
@RF00634 CLC   SPACING(1),TRIPLE                                   0636 01681000
         BNE   @RF00636                                            0636 01682000
         LA    @03,3                                               0637 01683000
         AL    @03,MYLINECT                                        0637 01684000
         ST    @03,MYLINECT                                        0637 01685000
*       ELSE                                                       0638 01686000
*        IF SPACING = UPSPACE THEN /*DO WE NEED TO RESET COUNT       */ 01687000
         B     @RC00636                                            0638 01688000
@RF00636 CLC   SPACING(1),UPSPACE                                  0638 01689000
         BNE   @RF00638                                            0638 01690000
*          MYLINECT = ZERO;      /*AVOID MULTI UPSPACES      @Z427VLS*/ 01691000
         SLR   @03,@03                                             0639 01692000
         ST    @03,MYLINECT                                        0639 01693000
*    IF MYLINECT =>  LINECT      /*LINECT SET BY USER DEFAULT = 50   */ 01694000
*      THEN                                                        0640 01695000
@RF00638 DS    0H                                                  0640 01696000
@RC00636 DS    0H                                                  0640 01697000
@RC00634 DS    0H                                                  0640 01698000
@RC00632 L     @03,MYLINECT                                        0640 01699000
         CH    @03,LINECT(,R2)                                     0640 01700000
         BL    @RF00640                                            0640 01701000
*       DO;                                                /*@Z427VLS*/ 01702000
*        SPACING= UPSPACE;       /*CHANGE THE CHARIAGE CONTROL CHAR  */ 01703000
         MVC   SPACING(1),UPSPACE                                  0642 01704000
*        MYLINECT = ZERO;                                  /*@Z427VLS*/ 01705000
         SLR   @03,@03                                             0643 01706000
         ST    @03,MYLINECT                                        0643 01707000
*        PRINTADR = ADDR(PRINTLNE);                        /*@Z427VLS*/ 01708000
         LA    @03,PRINTLNE                                        0644 01709000
         ST    @03,PRINTADR(,R2)                                   0644 01710000
*        CALL IOHND(RITEPRTR);                             /*@Z427VLS*/ 01711000
         L     @15,ADIOHND(,R2)                                    0645 01712000
         LA    @01,@AL00645                                        0645 01713000
         BALR  @14,@15                                             0645 01714000
*        SPACING= SINGLE;        /*CHANGE CC BACK TO SINGLE SPACE    */ 01715000
         MVC   SPACING(1),SINGLE                                   0646 01716000
*        IF SWITCH3 = ON THEN    /*MAKE SURE WE ARE IN PART 2        */ 01717000
         TM    SWITCH3,B'00100000'                                 0647 01718000
         BNO   @RF00647                                            0647 01719000
*        SWITCH2 = ON;           /*IF PART TWO WANT NEW HEADING      */ 01720000
         OI    SWITCH2,B'01000000'                                 0648 01721000
*       END;                                               /*@Z427VLS*/ 01722000
*END;                                                      /*@Z427VLS*/ 01723000
@EL00020 DS    0H                                                  0650 01724000
@EF00020 DS    0H                                                  0650 01725000
@ER00020 LM    @14,@12,@SA00020                                    0650 01726000
         BR    @14                                                 0650 01727000
*/********************************************************************/ 01728000
*/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * **/ 01729000
*/*    THIS PROC WILL BUILD THE COUNTS FOR PART TWO OF THE REPORT    */ 01730000
*/*    THE TABLE BEING USED IS BUILT BY IFCFILT2 PRIOR TO THIS BEING */ 01731000
*/*    CALLED.  3705 IS BROKEN OUT AS IT HAD EXTRA BREAK POINT AND  */  01732000
*/*    DID NOT FIT INTO OVER ALL SET UP.  WILL PROCESS UP TO 16      */ 01733000
*/*    DIFFERENT CPUS BUT WILL ONLY PRINT OUT 11 (MAX FIT ON PAGE)   */ 01734000
*/*    WAS EASIER TO DO IT THIS WAY IF EVER DECIDED TO USE A WRAP    */ 01735000
*/*    AROUND IDEA TO PRINT ALL 16 GOOD LUCK AS WILL BE ALL BROKEN UP*/ 01736000
*/*    NOTE IF GROUP ORDER IS CHANGED SYSUM WILL FALL APART MAKE SURE*/ 01737000
*/*    THEY ARE ADDED AT THE BOTTOM IN IFCFILT2 THEN THERE WILL BE   */ 01738000
*/*    IMPACT ONLY TO DEVGROUP                               @Z427VLS*/ 01739000
*/*    THE FOLLOWING IS THE LAY OUT OF THE TABLE USED BY TOTAL2      */ 01740000
*/*                                                          @Z427VLS*/ 01741000
*/*     DCL   1    SYSUM2(*)   BASED(SORTADR), SORTADR SET BY FILT2 **/ 01742000
*/*            2   SYSUMKEY,                                 @Z427VLS*/ 01743000
*/*             3  SYSGROUP   FIXED(8) BDY(BYTE)             @Z427VLS*/ 01744000
*/*             3  SYSRT      BIT(16)                        @Z427VLS*/ 01745000
*/*              4 SYSCUA     BIT(12)                        @Z427VLS*/ 01746000
*/*              4   *        BIT(4)                         @Z427VLS*/ 01747000
*/*             3  SYSCPUS    BIT(8)                         @Z427VLS*/ 01748000
*/*              4 SYSCPU     BIT(4)                         @Z427VLS*/ 01749000
*/*              4 SYSOLD     BIT(4)  WILL ALWAYS BE ZERO    @Z427VLS*/ 01750000
*/*            2   SYSITEM    BIT(8)                         @Z427VLS*/ 01751000
*/*             3  SYS3705    BIT(4)                         @Z427VLS*/ 01752000
*/*             3  SYSOLDA    BIT(4)                         @Z427VLS*/ 01753000
*/*            2   SYSDEV     CHAR(2)                        @Z427VLS*/ 01754000
*/*            2   SYSTEMP    FIXED(31)                      @Z427VLS*/ 01755000
*/*             3  SYSPERM    BIT(1)                         @Z427VLS*/ 01756000
*/*             3     *       BIT(15)                        @Z427VLS*/ 01757000
*/*                                                          @Z427VLS*/ 01758000
*TOTAL2: PROC;                                             /*@Z427VLS*/ 01759000
TOTAL2   STM   @14,@12,@SA00021                                    0651 01760000
* MAXLIMIT = SORTNUM;                                      /*@Z427VLS*/ 01761000
         L     @03,SORTNUM(,R2)                                    0652 01762000
         ST    @03,MAXLIMIT                                        0652 01763000
* OLDGROUP=  SYSGROUP(ONE);       /*SET INITIAL GROUP CONTROL       */  01764000
         L     @03,ONE                                             0653 01765000
         MH    @03,@CH00725                                        0653 01766000
         L     @15,SORTADR(,R2)                                    0653 01767000
         AL    @03,@CF00934                                        0653 01768000
         SLR   @14,@14                                             0653 01769000
         IC    @14,SYSGROUP(@03,@15)                               0653 01770000
         ST    @14,OLDGROUP                                        0653 01771000
* LASTCPU = (SYSCPUS(1) & 'F0'X); /*SET CPU = FIRST ENTRY FOR FIRST  */ 01772000
         LA    @03,240                                             0654 01773000
         SLR   @14,@14                                             0654 01774000
         IC    @14,SYSCPUS(,@15)                                   0654 01775000
         NR    @03,@14                                             0654 01776000
         ST    @03,LASTCPU                                         0654 01777000
* LASTCUA = (SYSRT(1) ); /*SET CUA = FIRST ENTRY FOR FIRST   @Z427VLS*/ 01778000
         SLR   @03,@03                                             0655 01779000
         ICM   @03,3,SYSRT(@15)                                    0655 01780000
         ST    @03,LASTCUA                                         0655 01781000
* CALL TOPLINE;                   /*PRINT OUT TOTAL PERM TEMP WORDS  */ 01782000
         BAL   @14,TOPLINE                                         0656 01783000
* CT = ONE;                       /*SET UP THE INDEX         @Z427VLS*/ 01784000
         L     @03,ONE                                             0657 01785000
         ST    @03,CT                                              0657 01786000
* DO UNTIL (CT  > MAXLIMIT);                               /*@Z427VLS*/ 01787000
@DL00658 DS    0H                                                  0659 01788000
*    IF OLDGROUP ¬= FIVE THEN /*3705 TAKEN CARE OF IN NEXT PROC  */     01789000
         L     @03,FIVE                                            0659 01790000
         C     @03,OLDGROUP                                        0659 01791000
         BE    @RF00659                                            0659 01792000
*     DO;                                                  /*@0001VLS*/ 01793000
*       IF   MYLINECT > (LINECT - FIVE )  THEN                     0661 01794000
         LCR   @03,@03                                             0661 01795000
         AH    @03,LINECT(,R2)                                     0661 01796000
         C     @03,MYLINECT                                        0661 01797000
         BNL   @RF00661                                            0661 01798000
*         CALL HEAD2P;         /*HEADING WITH GROUP          @0001VLS*/ 01799000
         BAL   @14,HEAD2P                                          0662 01800000
*        ELSE                                                      0663 01801000
*         CALL PRTGROUP;       /*JUST PRINT THE GROUP LABLE  @0001VLS*/ 01802000
         B     @RC00661                                            0663 01803000
@RF00661 BAL   @14,PRTGROUP                                        0663 01804000
*     END;                                                 /*@0001VLS*/ 01805000
@RC00661 DS    0H                                                  0665 01806000
* DO UNTIL(CT > MAXLIMIT     |   /*GROUP IS MAJOR BREAKPOINT @ZA25332*/ 01807000
*   OLDGROUP  ¬=  SYSGROUP(CT));                           /*@ZA25332*/ 01808000
@RF00659 DS    0H                                                  0665 01809000
@DL00665 DS    0H                                                  0666 01810000
*    IF OLDGROUP = FIVE           /*3705 IS SPECIAL PAIN IN THE      */ 01811000
*      THEN                                                        0666 01812000
         CLC   OLDGROUP(4),FIVE                                    0666 01813000
         BNE   @RF00666                                            0666 01814000
*       CALL DO3705;                                       /*@Z427VLS*/ 01815000
         BAL   @14,DO3705                                          0667 01816000
*    IF CT ¬> MAXLIMIT THEN                                        0668 01817000
@RF00666 L     @03,CT                                              0668 01818000
         C     @03,MAXLIMIT                                        0668 01819000
         BH    @RF00668                                            0668 01820000
*    DO;                                                   /*@Z427VLS*/ 01821000
*   CALL DOCUX;                    /* MOVE IN THE CUA OR CUX @0001VLS*/ 01822000
         BAL   @14,DOCUX                                           0670 01823000
*   CALL DEVTYPE;                  /* MOVE IN THE DEVICE TYPE        */ 01824000
         BAL   @14,DEVTYPE                                         0671 01825000
* DO UNTIL(CT > MAXLIMIT     |     /*SECOND MAJOR BREAKPOINT @ZA25332*/ 01826000
*    (SYSRT(CT)) ¬= LASTCUA) |                             /*@ZA25332*/ 01827000
*            OLDGROUP¬= SYSGROUP(CT);                      /*@Z427VLS*/ 01828000
@DL00672 DS    0H                                                  0673 01829000
*     CALL DOCUX;                                          /*@Z427VLS*/ 01830000
         BAL   @14,DOCUX                                           0673 01831000
* DO UNTIL(CT > MAXLIMIT     |     /*THIRD  MAJOR BREAKPOINT @ZA25332*/ 01832000
*    (SYSCPUS(CT) & 'F0'X) ¬= LASTCPU                              0674 01833000
*             | LASTCUA ¬=(SYSRT(CT) )                             0674 01834000
*             | OLDGROUP¬= SYSGROUP(CT));                  /*@Z427VLS*/ 01835000
@DL00674 DS    0H                                                  0675 01836000
*              CALL DOCOUNT;       /*GO ADD UP HTE RECORDS   @Z427VLS*/ 01837000
         BAL   @14,DOCOUNT                                         0675 01838000
*     END;                                                 /*@Z427VLS*/ 01839000
@DE00674 L     @03,CT                                              0676 01840000
         C     @03,MAXLIMIT                                        0676 01841000
         BH    @DC00674                                            0676 01842000
         MH    @03,@CH00725                                        0676 01843000
         L     @15,SORTADR(,R2)                                    0676 01844000
         LA    @14,240                                             0676 01845000
         LA    @01,0(@03,@15)                                      0676 01846000
         AL    @01,@CF00936                                        0676 01847000
         SLR   @00,@00                                             0676 01848000
         IC    @00,SYSCPUS-3(,@01)                                 0676 01849000
         NR    @14,@00                                             0676 01850000
         C     @14,LASTCPU                                         0676 01851000
         BNE   @DC00674                                            0676 01852000
         L     @14,LASTCUA                                         0676 01853000
         ST    @03,@TF00001                                        0676 01854000
         ALR   @03,@15                                             0676 01855000
         AL    @03,@CF00932                                        0676 01856000
         SLR   @07,@07                                             0676 01857000
         ICM   @07,3,SYSRT-1(@03)                                  0676 01858000
         CR    @14,@07                                             0676 01859000
         BNE   @DC00674                                            0676 01860000
         L     @03,OLDGROUP                                        0676 01861000
         L     @14,@TF00001                                        0676 01862000
         AL    @15,@CF00934                                        0676 01863000
         SLR   @07,@07                                             0676 01864000
         IC    @07,SYSGROUP(@14,@15)                               0676 01865000
         CR    @03,@07                                             0676 01866000
         BE    @DL00674                                            0676 01867000
@DC00674 DS    0H                                                  0677 01868000
*    CALL DATALINE ;               /*GO PRINT THE DATA ACCUMLATED   */  01869000
         BAL   @14,DATALINE                                        0677 01870000
*    IF CT ¬> MAXLIMIT THEN                                        0678 01871000
         L     @03,CT                                              0678 01872000
         C     @03,MAXLIMIT                                        0678 01873000
         BH    @RF00678                                            0678 01874000
*      LASTCPU = (SYSCPUS(CT) &'F0'X);                     /*@Z427VLS*/ 01875000
         MH    @03,@CH00725                                        0679 01876000
         L     @01,SORTADR(,R2)                                    0679 01877000
         LA    @00,240                                             0679 01878000
         AL    @01,@CF00936                                        0679 01879000
         SLR   @15,@15                                             0679 01880000
         IC    @15,SYSCPUS-3(@03,@01)                              0679 01881000
         NR    @00,@15                                             0679 01882000
         ST    @00,LASTCPU                                         0679 01883000
*    END;                                                  /*@Z427VLS*/ 01884000
@RF00678 DS    0H                                                  0680 01885000
@DE00672 L     @03,CT                                              0680 01886000
         C     @03,MAXLIMIT                                        0680 01887000
         BH    @DC00672                                            0680 01888000
         MH    @03,@CH00725                                        0680 01889000
         L     @15,SORTADR(,R2)                                    0680 01890000
         ST    @03,@TF00001                                        0680 01891000
         ALR   @03,@15                                             0680 01892000
         AL    @03,@CF00932                                        0680 01893000
         SLR   @14,@14                                             0680 01894000
         ICM   @14,3,SYSRT-1(@03)                                  0680 01895000
         C     @14,LASTCUA                                         0680 01896000
         BNE   @DC00672                                            0680 01897000
         L     @03,OLDGROUP                                        0680 01898000
         L     @14,@TF00001                                        0680 01899000
         AL    @15,@CF00934                                        0680 01900000
         SLR   @07,@07                                             0680 01901000
         IC    @07,SYSGROUP(@14,@15)                               0680 01902000
         CR    @03,@07                                             0680 01903000
         BE    @DL00672                                            0680 01904000
@DC00672 DS    0H                                                  0681 01905000
*    IF CT ¬> MAXLIMIT THEN                                        0681 01906000
         L     @03,CT                                              0681 01907000
         C     @03,MAXLIMIT                                        0681 01908000
         BH    @RF00681                                            0681 01909000
*      LASTCUA = (SYSRT(CT) );/*SET FOR NEW CUA              @Z427VLS*/ 01910000
         MH    @03,@CH00725                                        0682 01911000
         L     @01,SORTADR(,R2)                                    0682 01912000
         ALR   @01,@03                                             0682 01913000
         AL    @01,@CF00932                                        0682 01914000
         SLR   @03,@03                                             0682 01915000
         ICM   @03,3,SYSRT-1(@01)                                  0682 01916000
         ST    @03,LASTCUA                                         0682 01917000
*  END;                                                    /*@Z427VLS*/ 01918000
@RF00681 DS    0H                                                  0684 01919000
* END;                                                     /*@Z427VLS*/ 01920000
@RF00668 DS    0H                                                  0684 01921000
@DE00665 L     @03,CT                                              0684 01922000
         C     @03,MAXLIMIT                                        0684 01923000
         BH    @DC00665                                            0684 01924000
         MH    @03,@CH00725                                        0684 01925000
         L     @01,SORTADR(,R2)                                    0684 01926000
         L     @00,OLDGROUP                                        0684 01927000
         AL    @01,@CF00934                                        0684 01928000
         SLR   @15,@15                                             0684 01929000
         IC    @15,SYSGROUP(@03,@01)                               0684 01930000
         CR    @00,@15                                             0684 01931000
         BE    @DL00665                                            0684 01932000
@DC00665 DS    0H                                                  0685 01933000
*  IF CT ¬> MAXLIMIT THEN                                          0685 01934000
         L     @03,CT                                              0685 01935000
         C     @03,MAXLIMIT                                        0685 01936000
         BH    @RF00685                                            0685 01937000
*    OLDGROUP = SYSGROUP(CT);    /*RESET THE CONTROL TO NEW GROUP   */  01938000
         MH    @03,@CH00725                                        0686 01939000
         L     @01,SORTADR(,R2)                                    0686 01940000
         AL    @01,@CF00934                                        0686 01941000
         SLR   @00,@00                                             0686 01942000
         IC    @00,SYSGROUP(@03,@01)                               0686 01943000
         ST    @00,OLDGROUP                                        0686 01944000
*  SPACING = DOUBLE;                                       /*@Z427VLS*/ 01945000
@RF00685 MVC   SPACING(1),DOUBLE                                   0687 01946000
*  CALL PRINTIT;                                           /*@Z427VLS*/ 01947000
         BAL   @14,PRINTIT                                         0688 01948000
*  SPACING = SINGLE;                                       /*@Z427VLS*/ 01949000
         MVC   SPACING(1),SINGLE                                   0689 01950000
*END;                                                      /*@Z427VLS*/ 01951000
@DE00658 L     @03,CT                                              0690 01952000
         C     @03,MAXLIMIT                                        0690 01953000
         BNH   @DL00658                                            0690 01954000
*CALL ALLTOTAL;                /*PRINT TOTAL OF ALL COLUMNS  @Z427VLS*/ 01955000
         BAL   @14,ALLTOTAL                                        0691 01956000
* END;                                                     /*@Z427VLS*/ 01957000
@EL00021 DS    0H                                                  0692 01958000
@EF00021 DS    0H                                                  0692 01959000
@ER00021 LM    @14,@12,@SA00021                                    0692 01960000
         BR    @14                                                 0692 01961000
*/********************************************************************/ 01962000
*/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * **/ 01963000
*/*     THIS PROC WILL PROCESS GROUP 4(3705 TYPES) AS THEY REQUIRE   */ 01964000
*/*     SPECIAL PROCESSING  THEY ARE DONE COMPLETLY IN THIS PROC     */ 01965000
*/*     UPON EXIT ALL ITEM WILL BE SET TO PROCESS FOLLOWING GROUPS   */ 01966000
*DO3705: PROC;                                             /*@Z427VLS*/ 01967000
DO3705   STM   @14,@12,@SA00022                                    0693 01968000
* IF MYLINECT > LINECT - TWELVE                                    0694 01969000
*  THEN                                                            0694 01970000
         LH    @03,LINECT(,R2)                                     0694 01971000
         SL    @03,@CF00064                                        0694 01972000
         C     @03,MYLINECT                                        0694 01973000
         BNL   @RF00694                                            0694 01974000
*   CALL HEAD2P;               /*HEADING WITH THE GROUP LABLE      */   01975000
         BAL   @14,HEAD2P                                          0695 01976000
*  ELSE                                                            0696 01977000
*   CALL PRTGROUP;             /*JUST PRINT THE GROUP OUT    @0001VLS*/ 01978000
         B     @RC00694                                            0696 01979000
@RF00694 BAL   @14,PRTGROUP                                        0696 01980000
* DO UNTIL(CT > MAXLIMIT     |                             /*@ZA25332*/ 01981000
*   OLDGROUP  ¬=  SYSGROUP(CT));                           /*@ZA25332*/ 01982000
@RC00694 DS    0H                                                  0697 01983000
@DL00697 DS    0H                                                  0698 01984000
*   LASTCPU = (SYSCPUS(CT) & 'F0'X);/*SET UP LAST CPU CONTROL       */  01985000
         LA    @03,240                                             0698 01986000
         L     @15,CT                                              0698 01987000
         MH    @15,@CH00725                                        0698 01988000
         L     @14,SORTADR(,R2)                                    0698 01989000
         LA    @01,0(@15,@14)                                      0698 01990000
         AL    @01,@CF00936                                        0698 01991000
         SLR   @00,@00                                             0698 01992000
         IC    @00,SYSCPUS-3(,@01)                                 0698 01993000
         NR    @00,@03                                             0698 01994000
         ST    @00,LASTCPU                                         0698 01995000
*   LASTCUA = (SYSRT(CT) ); /*SET UP LAST CUA                @Z427VLS*/ 01996000
         ST    @15,@TF00001                                        0699 01997000
         ALR   @15,@14                                             0699 01998000
         AL    @15,@CF00932                                        0699 01999000
         SLR   @07,@07                                             0699 02000000
         ICM   @07,3,SYSRT-1(@15)                                  0699 02001000
         ST    @07,LASTCUA                                         0699 02002000
*   OLD3705 =(SYSITEM(CT)& 'F0'X); /*SET 3705 ODD BREAK POINT       */  02003000
         L     @15,@TF00001                                        0700 02004000
         AL    @14,@CF00928                                        0700 02005000
         SLR   @07,@07                                             0700 02006000
         IC    @07,SYSITEM-4(@15,@14)                              0700 02007000
         NR    @03,@07                                             0700 02008000
         ST    @03,OLD3705                                         0700 02009000
* DO UNTIL(CT > MAXLIMIT     |                             /*@ZA25332*/ 02010000
*   LASTCUA ¬= (SYSRT(CT) & 'FFF0'X)    /*CHECK FOR NEW CUA  @ZA25332*/ 02011000
*          | OLDGROUP¬= SYSGROUP(CT));                     /*@Z427VLS*/ 02012000
@DL00701 DS    0H                                                  0702 02013000
*  IF MYLINECT  >  LINECT - EIGHT THEN /*MUST HAVE ROOM FOR ALL   */    02014000
         LH    @03,LINECT(,R2)                                     0702 02015000
         SL    @03,@CF00062                                        0702 02016000
         C     @03,MYLINECT                                        0702 02017000
         BNL   @RF00702                                            0702 02018000
*   CALL HEAD2P;              /*THEN PRINT HEADING WITH GROUP      */   02019000
         BAL   @14,HEAD2P                                          0703 02020000
*   CALL DEVTYPE;                  /*GO MOVE IN DEVICE TYPE  @Z427VLS*/ 02021000
@RF00702 BAL   @14,DEVTYPE                                         0704 02022000
*   CALL DOCUX;                    /*GO MOVE IN THE CUX      @Z427VLS*/ 02023000
         BAL   @14,DOCUX                                           0705 02024000
*   CALL PRINTIT;                  /*GO PRINT THE DEVICE TYPE & CUA  */ 02025000
         BAL   @14,PRINTIT                                         0706 02026000
*     DO UNTIL(CT > MAXLIMIT       /* DO ALL OF SAME CPU     @ZA30596*/ 02027000
*       | (SYSCPUS(CT) & 'F0'X) ¬= LASTCPU /*                @ZA30596*/ 02028000
*       | (LASTCUA ¬= (SYSRT(CT) ))                                0707 02029000
*       | OLDGROUP ¬= SYSGROUP(CT));                       /*@Z427VLS*/ 02030000
@DL00707 DS    0H                                                  0708 02031000
*       R8 = SYSITEM(CT) + '10'X;   /*ADD ONE TO 3705 VALUE  @Z427VLS*/ 02032000
         L     @03,CT                                              0708 02033000
         MH    @03,@CH00725                                        0708 02034000
         L     @01,SORTADR(,R2)                                    0708 02035000
         LA    R8,16                                               0708 02036000
         AL    @01,@CF00928                                        0708 02037000
         SLR   @00,@00                                             0708 02038000
         IC    @00,SYSITEM-4(@03,@01)                              0708 02039000
         ALR   R8,@00                                              0708 02040000
*       SRL(R8,FOUR);                                      /*@Z427VLS*/ 02041000
         SRL   R8,4                                                0709 02042000
*       AT3705 = IS3705(R8);                               /*@Z427VLS*/ 02043000
         LR    @03,R8                                              0710 02044000
         MH    @03,@CH00078                                        0710 02045000
         LA    @01,IS3705-6(@03)                                   0710 02046000
         MVC   AT3705(6),0(@01)                                    0710 02047000
* DO UNTIL(CT > MAXLIMIT     |                             /*@ZA25332*/ 02048000
*   OLD3705 ¬= (SYSITEM(CT) & 'F0'X)                       /*@ZA25332*/ 02049000
*                |(SYSCPUS(CT) & 'F0'X) ¬= LASTCPU                 0711 02050000
*                | LASTCUA ¬= (SYSRT(CT) & 'FFF0'X)                0711 02051000
*                | OLDGROUP¬= SYSGROUP(CT));               /*@Z427VLS*/ 02052000
@DL00711 DS    0H                                                  0712 02053000
*         CALL DOCOUNT;             /*GO PROCESS ALL RECORDS @Z427VLS*/ 02054000
         BAL   @14,DOCOUNT                                         0712 02055000
*       END;                                               /*@Z427VLS*/ 02056000
@DE00711 L     @03,CT                                              0713 02057000
         C     @03,MAXLIMIT                                        0713 02058000
         BH    @DC00711                                            0713 02059000
         LA    @15,240                                             0713 02060000
         MH    @03,@CH00725                                        0713 02061000
         L     @14,SORTADR(,R2)                                    0713 02062000
         LA    @01,0(@03,@14)                                      0713 02063000
         AL    @01,@CF00928                                        0713 02064000
         SLR   @00,@00                                             0713 02065000
         IC    @00,SYSITEM-4(,@01)                                 0713 02066000
         NR    @00,@15                                             0713 02067000
         C     @00,OLD3705                                         0713 02068000
         BNE   @DC00711                                            0713 02069000
         LA    @01,0(@03,@14)                                      0713 02070000
         AL    @01,@CF00936                                        0713 02071000
         SLR   @00,@00                                             0713 02072000
         IC    @00,SYSCPUS-3(,@01)                                 0713 02073000
         NR    @15,@00                                             0713 02074000
         C     @15,LASTCPU                                         0713 02075000
         BNE   @DC00711                                            0713 02076000
         L     @15,@CF00906                                        0713 02077000
         ST    @03,@TF00001                                        0713 02078000
         ALR   @03,@14                                             0713 02079000
         AL    @03,@CF00932                                        0713 02080000
         SLR   @07,@07                                             0713 02081000
         ICM   @07,3,SYSRT-1(@03)                                  0713 02082000
         NR    @15,@07                                             0713 02083000
         C     @15,LASTCUA                                         0713 02084000
         BNE   @DC00711                                            0713 02085000
         L     @03,OLDGROUP                                        0713 02086000
         L     @15,@TF00001                                        0713 02087000
         AL    @14,@CF00934                                        0713 02088000
         SLR   @07,@07                                             0713 02089000
         IC    @07,SYSGROUP(@15,@14)                               0713 02090000
         CR    @03,@07                                             0713 02091000
         BE    @DL00711                                            0713 02092000
@DC00711 DS    0H                                                  0714 02093000
*       CALL DATALINE;              /*GO BUILD THE DATA LINE FOR PRT */ 02094000
         BAL   @14,DATALINE                                        0714 02095000
*       IF CT ¬> MAXLIMIT THEN                                     0715 02096000
         L     @03,CT                                              0715 02097000
         C     @03,MAXLIMIT                                        0715 02098000
         BH    @RF00715                                            0715 02099000
*         OLD3705 =(SYSITEM(CT) & 'F0'X);/*CHANGE CONTROL    @Z427VLS*/ 02100000
         MH    @03,@CH00725                                        0716 02101000
         L     @01,SORTADR(,R2)                                    0716 02102000
         LA    @00,240                                             0716 02103000
         AL    @01,@CF00928                                        0716 02104000
         SLR   @15,@15                                             0716 02105000
         IC    @15,SYSITEM-4(@03,@01)                              0716 02106000
         NR    @00,@15                                             0716 02107000
         ST    @00,OLD3705                                         0716 02108000
*     END;                                                 /*@Z427VLS*/ 02109000
@RF00715 DS    0H                                                  0717 02110000
@DE00707 L     @03,CT                                              0717 02111000
         C     @03,MAXLIMIT                                        0717 02112000
         BH    @DC00707                                            0717 02113000
         MH    @03,@CH00725                                        0717 02114000
         L     @15,SORTADR(,R2)                                    0717 02115000
         LA    @14,240                                             0717 02116000
         LA    @01,0(@03,@15)                                      0717 02117000
         AL    @01,@CF00936                                        0717 02118000
         SLR   @00,@00                                             0717 02119000
         IC    @00,SYSCPUS-3(,@01)                                 0717 02120000
         NR    @14,@00                                             0717 02121000
         C     @14,LASTCPU                                         0717 02122000
         BNE   @DC00707                                            0717 02123000
         L     @14,LASTCUA                                         0717 02124000
         ST    @03,@TF00001                                        0717 02125000
         ALR   @03,@15                                             0717 02126000
         AL    @03,@CF00932                                        0717 02127000
         SLR   @07,@07                                             0717 02128000
         ICM   @07,3,SYSRT-1(@03)                                  0717 02129000
         CR    @14,@07                                             0717 02130000
         BNE   @DC00707                                            0717 02131000
         L     @03,OLDGROUP                                        0717 02132000
         L     @14,@TF00001                                        0717 02133000
         AL    @15,@CF00934                                        0717 02134000
         SLR   @07,@07                                             0717 02135000
         IC    @07,SYSGROUP(@14,@15)                               0717 02136000
         CR    @03,@07                                             0717 02137000
         BE    @DL00707                                            0717 02138000
@DC00707 DS    0H                                                  0718 02139000
*    IF CT ¬> MAXLIMIT THEN                                        0718 02140000
         L     @03,CT                                              0718 02141000
         C     @03,MAXLIMIT                                        0718 02142000
         BH    @RF00718                                            0718 02143000
*      LASTCPU =(SYSCPUS(CT) & 'F0'X);                     /*@Z427VLS*/ 02144000
         MH    @03,@CH00725                                        0719 02145000
         L     @01,SORTADR(,R2)                                    0719 02146000
         LA    @00,240                                             0719 02147000
         AL    @01,@CF00936                                        0719 02148000
         SLR   @15,@15                                             0719 02149000
         IC    @15,SYSCPUS-3(@03,@01)                              0719 02150000
         NR    @00,@15                                             0719 02151000
         ST    @00,LASTCPU                                         0719 02152000
*   END;                                                   /*@Z427VLS*/ 02153000
@RF00718 DS    0H                                                  0720 02154000
@DE00701 L     @03,CT                                              0720 02155000
         C     @03,MAXLIMIT                                        0720 02156000
         BH    @DC00701                                            0720 02157000
         MH    @03,@CH00725                                        0720 02158000
         L     @15,SORTADR(,R2)                                    0720 02159000
         L     @14,@CF00906                                        0720 02160000
         ST    @03,@TF00001                                        0720 02161000
         ALR   @03,@15                                             0720 02162000
         AL    @03,@CF00932                                        0720 02163000
         SLR   @07,@07                                             0720 02164000
         ICM   @07,3,SYSRT-1(@03)                                  0720 02165000
         NR    @14,@07                                             0720 02166000
         C     @14,LASTCUA                                         0720 02167000
         BNE   @DC00701                                            0720 02168000
         L     @03,OLDGROUP                                        0720 02169000
         L     @14,@TF00001                                        0720 02170000
         AL    @15,@CF00934                                        0720 02171000
         SLR   @07,@07                                             0720 02172000
         IC    @07,SYSGROUP(@14,@15)                               0720 02173000
         CR    @03,@07                                             0720 02174000
         BE    @DL00701                                            0720 02175000
@DC00701 DS    0H                                                  0721 02176000
*  END;                                                    /*@Z427VLS*/ 02177000
@DE00697 L     @03,CT                                              0721 02178000
         C     @03,MAXLIMIT                                        0721 02179000
         BH    @DC00697                                            0721 02180000
         MH    @03,@CH00725                                        0721 02181000
         L     @01,SORTADR(,R2)                                    0721 02182000
         L     @00,OLDGROUP                                        0721 02183000
         AL    @01,@CF00934                                        0721 02184000
         SLR   @15,@15                                             0721 02185000
         IC    @15,SYSGROUP(@03,@01)                               0721 02186000
         CR    @00,@15                                             0721 02187000
         BE    @DL00697                                            0721 02188000
@DC00697 DS    0H                                                  0722 02189000
*END;                                                      /*@Z427VLS*/ 02190000
@EL00022 DS    0H                                                  0722 02191000
@EF00022 DS    0H                                                  0722 02192000
@ER00022 LM    @14,@12,@SA00022                                    0722 02193000
         BR    @14                                                 0722 02194000
*/*****************************************************************/    02195000
*/*            PROC WILL PRINT THE HEADING FOR PART 2 WITH THE GROUP*/  02196000
*/*            INFORMATION ALSO                              @0001VLS*/ 02197000
*HEAD2P: PROC;                                             /*@0001VLS*/ 02198000
HEAD2P   STM   @14,@12,@SA00023                                    0723 02199000
* CALL HEADING2 ;              /*PRINT THE TOP PART OF THE HEADING*/    02200000
         BAL   @14,HEADING2                                        0724 02201000
* CALL TOPLINE;                /*PRINT THE CPU TYPES ACROSS THE PAGE*/  02202000
         BAL   @14,TOPLINE                                         0725 02203000
* CALL PRTGROUP;               /*PRINT THE GROUP TYPE LABLE  @0001VLS*/ 02204000
         BAL   @14,PRTGROUP                                        0726 02205000
*END;                                                      /*@0001VLS*/ 02206000
@EL00023 DS    0H                                                  0727 02207000
@EF00023 DS    0H                                                  0727 02208000
@ER00023 LM    @14,@12,@SA00023                                    0727 02209000
         BR    @14                                                 0727 02210000
*/********************************************************************/ 02211000
*/*    THIS PROC WILL PRINT OUT THE DEVICE GROUP             @Z427VLS*/ 02212000
*PRTGROUP: PROC;                                           /*@Z427VLS*/ 02213000
PRTGROUP STM   @14,@12,@SA00024                                    0728 02214000
* IF OLDGROUP ¬= ZERO THEN                                         0729 02215000
         L     @03,OLDGROUP                                        0729 02216000
         LTR   @03,@03                                             0729 02217000
         BZ    @RF00729                                            0729 02218000
*   DO;                                                    /*@Z427VLS*/ 02219000
*  IF MYLINECT => LINECT - 3 THEN                                  0731 02220000
         LH    @03,LINECT(,R2)                                     0731 02221000
         SL    @03,@CF00073                                        0731 02222000
         C     @03,MYLINECT                                        0731 02223000
         BH    @RF00731                                            0731 02224000
*  DO;                                                     /*@Z427VLS*/ 02225000
*   CALL HEADING2;                                         /*@Z427VLS*/ 02226000
         BAL   @14,HEADING2                                        0733 02227000
*   CALL TOPLINE;                                          /*@Z427VLS*/ 02228000
         BAL   @14,TOPLINE                                         0734 02229000
*  END;                                                    /*@Z427VLS*/ 02230000
* R9 = 15 + 10 * EVNUM;   /*# OF ASTRICKS TO BUILD           @Z427VLS*/ 02231000
@RF00731 L     @03,EVPTR(,R2)                                      0736 02232000
         LH    R9,EVNUM(,@03)                                      0736 02233000
         MH    R9,@CH00274                                         0736 02234000
         AL    R9,@CF00035                                         0736 02235000
* GEN(MVI PRTLINE+10,X'5C');                               /*@Z427VLS*/ 02236000
         MVI PRTLINE+10,X'5C'                                           02237000
* GEN(EX  R9,MOVEGRP);                                     /*@Z427VLS*/ 02238000
         EX  R9,MOVEGRP                                                 02239000
* GENERATE DATA;                                           /*@Z427VLS*/ 02240000
* DEVGRP = DEVGROUP(OLDGROUP);/*MOVE THE NAME                @D3505GB*/ 02241000
         L     @03,OLDGROUP                                        0740 02242000
         MH    @03,@CH00549                                        0740 02243000
         LA    @01,DEVGROUP-13(@03)                                0740 02244000
         MVC   DEVGRP(13),0(@01)                                   0740 02245000
* CALL PRINTIT;               /*PRINT THE GROUP LABLE        @Z427VLS*/ 02246000
         BAL   @14,PRINTIT                                         0741 02247000
* CALL PRINTIT;               /*ADD A SPACE                  @Z427VLS*/ 02248000
         BAL   @14,PRINTIT                                         0742 02249000
*END;                                                      /*@Z427VLS*/ 02250000
*END;                                                      /*@Z427VLS*/ 02251000
@EL00024 DS    0H                                                  0744 02252000
@EF00024 DS    0H                                                  0744 02253000
@ER00024 LM    @14,@12,@SA00024                                    0744 02254000
         BR    @14                                                 0744 02255000
*/********************************************************************/ 02256000
*/*    THIS PROC WILL PRINT TOTALS OF EACH CPU               @Z427VLS*/ 02257000
* ALLTOTAL: PROC;                                          /*@Z427VLS*/ 02258000
ALLTOTAL STM   @14,@12,@SA00025                                    0745 02259000
*  PRTLINE = TOTLABLE;       /*MOVE IN THE LABLE FOR LINE    @Z427VLS*/ 02260000
         MVI   PRTLINE+6,C' '                                      0746 02261000
         MVC   PRTLINE+7(145),PRTLINE+6                            0746 02262000
         MVC   PRTLINE(6),TOTLABLE                                 0746 02263000
*  BNDECNUM = FIVE;          /*FOR THE TOTAL OF TOTALS       @Z427VLS*/ 02264000
         L     @03,FIVE                                            0747 02265000
         ST    @03,BNDECNUM                                        0747 02266000
*  BINWORD = TOTALTOT;       /*PRINT TOTAL OF THE TOTALS     @Z427VLS*/ 02267000
         L     @03,TOTALTOT                                        0748 02268000
         ST    @03,BINWORD                                         0748 02269000
*  DECADDR = ADDR(TOTE2) - 3;                              /*@Z427VLS*/ 02270000
         LA    @03,TOTE2                                           0749 02271000
         SL    @03,@CF00073                                        0749 02272000
         ST    @03,DECADDR                                         0749 02273000
*  CALL CONVBIN;             /*GO CONVERT THE ITEM TO PRINTABLE      */ 02274000
         BAL   @14,CONVBIN                                         0750 02275000
*  DECADDR = DECADDR + SIX; /*MOVE DOWN THE PRINT LINE BY SIX      */   02276000
         L     @03,DECADDR                                         0751 02277000
         AL    @03,SIX                                             0751 02278000
         ST    @03,DECADDR                                         0751 02279000
*  BINWORD = TOTALTP;        /*PICK UP TOTA OF TEMP TOTALS MAY OVER  */ 02280000
         L     @03,TOTALTP                                         0752 02281000
         ST    @03,BINWORD                                         0752 02282000
*                            /*FLOW 5 PRINT POSITIONS BUT THATS TO BD*/ 02283000
*  CALL CONVBIN;             /*GO AND CONVERT THE ITEM TO PRINTABLE  */ 02284000
         BAL   @14,CONVBIN                                         0753 02285000
*  DECADDR = DECADDR + 2;                                  /*@Z427VLS*/ 02286000
         LA    @03,2                                               0754 02287000
         AL    @03,DECADDR                                         0754 02288000
         ST    @03,DECADDR                                         0754 02289000
*  BNDECNUM = FOUR;          /*CHANGE BACK TO ONLY FOUR CHARS OUT    */ 02290000
         MVC   BNDECNUM(4),@CF00060                                0755 02291000
*  DO R = 1 BY 1 TO NUMTODO -ONE;                          /*@Z427VLS*/ 02292000
         LA    @03,1                                               0756 02293000
         ST    @03,R                                               0756 02294000
         B     @DE00756                                            0756 02295000
@DL00756 DS    0H                                                  0757 02296000
*   DECADDR = DECADDR + FIVE;/*MOVE DOWN THE LINE FIVE PRINT POSITION*/ 02297000
         L     @15,DECADDR                                         0757 02298000
         AL    @15,FIVE                                            0757 02299000
         ST    @15,DECADDR                                         0757 02300000
*   BINWORD = TOTALPRM(R);   /*PICK UP TOTAL PERM ERRORS THIS ENTRY */  02301000
         SLA   @03,2                                               0758 02302000
         L     @03,TOTALPRM-4(@03)                                 0758 02303000
         ST    @03,BINWORD                                         0758 02304000
*   CALL CONVBIN;            /*GO CONVERT TO PRINTABLE       @Z427VLS*/ 02305000
         BAL   @14,CONVBIN                                         0759 02306000
*   DECADDR = DECADDR + FIVE;/*RIGHT DOWN THE PRINT LINE 5 MORE CHARS*/ 02307000
         L     @03,DECADDR                                         0760 02308000
         AL    @03,FIVE                                            0760 02309000
         ST    @03,DECADDR                                         0760 02310000
*   BINWORD = TOTALTMP(R);   /*PICK UP THE NEXT TEMP TOTAL   @Z427VLS*/ 02311000
         L     @03,R                                               0761 02312000
         SLA   @03,2                                               0761 02313000
         L     @03,TOTALTMP-4(@03)                                 0761 02314000
         ST    @03,BINWORD                                         0761 02315000
*   CALL CONVBIN;            /*GO CONVERT THE ITEM TO PRINTABLE      */ 02316000
         BAL   @14,CONVBIN                                         0762 02317000
*  END;                                                    /*@Z427VLS*/ 02318000
         LA    @03,1                                               0763 02319000
         AL    @03,R                                               0763 02320000
         ST    @03,R                                               0763 02321000
@DE00756 L     @15,NUMTODO                                         0763 02322000
         SL    @15,ONE                                             0763 02323000
         CR    @03,@15                                             0763 02324000
         BNH   @DL00756                                            0763 02325000
* END;                                                     /*@Z427VLS*/ 02326000
@EL00025 DS    0H                                                  0764 02327000
@EF00025 DS    0H                                                  0764 02328000
@ER00025 LM    @14,@12,@SA00025                                    0764 02329000
         BR    @14                                                 0764 02330000
@PB00025 DS    0H                                                  0765 02331000
*/********************************************************************/ 02332000
*/*    THIS IS THE MAIN BODY OF THE PROGRAM                  @Z427VLS*/ 02333000
*/*    THE TABLES BUILT IN THE PARM TABLE BY IFCFILT2 ARE    @Z427VLS*/ 02334000
*/*                   USED BY TOTAL1 OF THIS SECTION-THE ITEMS HAVE  */ 02335000
*/*                   BEEN TOTALED BY THE FILTER AND ARE JUST        */ 02336000
*/*                   FORMATED & THEN PRINTED BY THIS SECTION        */ 02337000
*/*                   USED BY TOTAL2 IS FOR THE SECOND PART OF THE   */ 02338000
*/*                   REPORT  THESE ITEMS HAVE NOT BEEN TOTALED THIS */ 02339000
*/*                   IS DONE BY THIS SECTION ONE LINE AT A TIME THEN*/ 02340000
*/*                   PRINTED  ONLY GLITCH IS CAUSED BY THE 3705     */ 02341000
*IF DEBUG4  = ON THEN        /*PRINT NAME AND COMPILE DATE   @Z427VLS*/ 02342000
         TM    DEBUG4(R2),B'00001000'                              0765 02343000
         BNO   @RF00765                                            0765 02344000
* DO;                                                      /*@Z427VLS*/ 02345000
*  DDTYPE = '1';                                           /*@Z427VLS*/ 02346000
         MVI   DDTYPE,C'1'                                         0767 02347000
*  R15 = R10 - 27;                                         /*@Z427VLS*/ 02348000
         LR    R15,R10                                             0768 02349000
         SL    R15,@CF00916                                        0768 02350000
*  GEN(MVC  PRTLINE(16),0(R15));                           /*@Z427VLS*/ 02351000
         MVC  PRTLINE(16),0(R15)                                        02352000
*  CALL PRINTIT;                                           /*@Z427VLS*/ 02353000
         BAL   @14,PRINTIT                                         0770 02354000
*  DDTYPE = '0';                                           /*@Z427VLS*/ 02355000
         MVI   DDTYPE,C'0'                                         0771 02356000
* END;                                                     /*@Z427VLS*/ 02357000
*NUMTODO = EVNUM + ONE;      /*SET UP LOOP CONTROL           @Z427VLS*/ 02358000
@RF00765 L     @03,EVPTR(,R2)                                      0773 02359000
         LH    @03,EVNUM(,@03)                                     0773 02360000
         AL    @03,ONE                                             0773 02361000
         ST    @03,NUMTODO                                         0773 02362000
*CALL HEADING1;              /*GO PRINT OUT THE HEADING      @Z427VLS*/ 02363000
         BAL   @14,HEADING1                                        0774 02364000
*CALL TOTAL1;                /*GO COMPUTE THE TOTALS AND PRINT THEM  */ 02365000
         BAL   @14,TOTAL1                                          0775 02366000
*CALL CPUINFO;              /*PRINT THE CPU AND LETTER ASSOCIATED   */  02367000
         BAL   @14,CPUINFO                                         0776 02368000
*IF SORTNUM ¬= ZERO THEN                                           0777 02369000
         L     @03,SORTNUM(,R2)                                    0777 02370000
         LTR   @03,@03                                             0777 02371000
         BZ    @RF00777                                            0777 02372000
*DO;                                                       /*@Z427VLS*/ 02373000
*SWITCH3 = ON;               /*TELL  PRINTIT WE ARE DOING PART 2     */ 02374000
         OI    SWITCH3,B'00100000'                                 0779 02375000
*CALL HEADING2;              /*GO PRINT OUT THE HEADING PART 2       */ 02376000
         BAL   @14,HEADING2                                        0780 02377000
*CALL TOTAL2;                /*GO ADD UP THE TOTALS FOR PART 2       */ 02378000
         BAL   @14,TOTAL2                                          0781 02379000
*CALL CPUINFO;              /*PRINT OUT THE CPU AND LETTER   @Z427VLS*/ 02380000
         BAL   @14,CPUINFO                                         0782 02381000
*IF DEBUG18 = ON THEN       /*USER WANTS EXTRA DATA ABOUT THE PROGRAM*/ 02382000
         TM    DEBUG18(R2),B'00100000'                             0783 02383000
         BNO   @RF00783                                            0783 02384000
* CALL DODEBUG;                                            /*@Z427VLS*/ 02385000
         BAL   @14,DODEBUG                                         0784 02386000
*END;                                                      /*@Z427VLS*/ 02387000
@RF00783 DS    0H                                                  0786 02388000
*IF DEBUG12 = ON THEN       /*USER REQUESTED US TO DUMP CORE @Z427VLS*/ 02389000
@RF00777 TM    DEBUG12(R2),B'00001000'                             0786 02390000
         BNO   @RF00786                                            0786 02391000
* GEN(ABEND  240,DUMP);                                    /*@Z427VLS*/ 02392000
         ABEND  240,DUMP                                                02393000
*/********************************************************************/ 02394000
*/********************************************************************/ 02395000
*RETURN;                                                   /*@Z427VLS*/ 02396000
@EL00001 L     @13,4(,@13)                                         0788 02397000
@EF00001 DS    0H                                                  0788 02398000
@ER00001 L     @14,12(,@13)                                        0788 02399000
         LM    @00,@12,20(@13)                                     0788 02400000
         BR    @14                                                 0788 02401000
*END                                                       /*@Z427VLS*/ 02402000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      * 02403000
*/*%INCLUDE SYSLIB  (COMTABLE)                                        * 02404000
*;                                                                 0789 02405000
         B     @EL00001                                            0789 02406000
@DATA    DS    0H                                                       02407000
@CH00078 DC    H'6'                                                     02408000
@CH00274 DC    H'10'                                                    02409000
@CH00549 DC    H'13'                                                    02410000
@CH00474 DC    H'17'                                                    02411000
         DS    0F                                                       02412000
@AL00631 EQU   *                       LIST WITH   1 ARGUMENT(S)        02413000
@AL00645 DC    A(@CF00071+2)           LIST WITH   1 ARGUMENT(S)        02414000
         DS    0F                                                       02415000
@SA00001 DS    18F                                                      02416000
@SA00002 DS    15F                                                      02417000
@SA00004 DS    15F                                                      02418000
@SA00020 DS    15F                                                      02419000
@SA00005 DS    15F                                                      02420000
@SA00011 DS    15F                                                      02421000
@SA00009 DS    15F                                                      02422000
@SA00008 DS    15F                                                      02423000
@SA00006 DS    15F                                                      02424000
@SA00007 DS    15F                                                      02425000
@SA00012 DS    15F                                                      02426000
@SA00010 DS    15F                                                      02427000
@SA00013 DS    15F                                                      02428000
@SA00014 DS    15F                                                      02429000
@SA00015 DS    15F                                                      02430000
@SA00017 DS    15F                                                      02431000
@SA00019 DS    15F                                                      02432000
@SA00024 DS    15F                                                      02433000
@SA00018 DS    15F                                                      02434000
@SA00021 DS    15F                                                      02435000
@SA00023 DS    15F                                                      02436000
@SA00022 DS    15F                                                      02437000
@SA00025 DS    15F                                                      02438000
@TF00001 DS    F                                                        02439000
         DS    0F                                                       02440000
@CF00071 DC    F'2'                                                     02441000
@CF00073 DC    F'3'                                                     02442000
@CF00060 DC    F'4'                                                     02443000
@CF00080 DC    F'7'                                                     02444000
@CF00062 DC    F'8'                                                     02445000
@CF00064 DC    F'12'                                                    02446000
@CF00725 DC    F'14'                                                    02447000
@CH00725 EQU   @CF00725+2                                               02448000
@CF00035 DC    F'15'                                                    02449000
@CF00086 DC    F'16'                                                    02450000
@CF00734 DC    F'20'                                                    02451000
@CF00483 DC    F'22'                                                    02452000
@CF00595 DC    F'23'                                                    02453000
@CF00862 DC    F'25'                                                    02454000
@CF00916 DC    F'27'                                                    02455000
@CF00835 DC    F'48'                                                    02456000
@CF00834 DC    F'52'                                                    02457000
@CF00934 DC    F'-14'                                                   02458000
@CF00932 DC    F'-13'                                                   02459000
@CF00931 DC    F'-12'                                                   02460000
@CF00936 DC    F'-11'                                                   02461000
@CF00928 DC    F'-10'                                                   02462000
@CF00926 DC    F'-9'                                                    02463000
@CF00933 DC    F'-7'                                                    02464000
@CF00929 DC    F'-6'                                                    02465000
@CF00930 DC    F'-4'                                                    02466000
@CF00924 DC    XL4'0000FFFF'                                            02467000
@CF00906 DC    XL4'FFF0'                                                02468000
@CF00052 DC    BL4'1'                                                   02469000
         DS    0D                                                       02470000
PRT      DC    F'0'                                                     02471000
COUNTER  DC    F'0'                                                     02472000
TEN      DC    F'10'                                                    02473000
FIVE     DC    F'5'                                                     02474000
ONE      DC    F'1'                                                     02475000
TWOEIGHT DC    F'28'                                                    02476000
NEXTBY   DC    F'0'                                                     02477000
ADDNXT   DC    F'0'                                                     02478000
BINWORD  DC    F'0'                                                     02479000
NUMBER1  DC    F'1'                                                     02480000
BNDECNUM DC    F'5'                                                     02481000
DECADDR  DC    F'0'                                                     02482000
NUMTODO  DC    F'0'                                                     02483000
I        DC    F'0'                                                     02484000
NUMBER   DC    F'0'                                                     02485000
TWO      DC    F'2'                                                     02486000
MINUS1   DC    F'-1'                                                    02487000
SPCHANGE DC    F'0'                                                     02488000
J        DC    F'0'                                                     02489000
SYS2TPRM DC    F'0'                                                     02490000
SYS2TTOT DC    F'0'                                                     02491000
X        DC    F'0'                                                     02492000
SIX      DC    F'6'                                                     02493000
L        DC    F'0'                                                     02494000
P        DC    F'0'                                                     02495000
R        DC    F'0'                                                     02496000
CT       DC    F'0'                                                     02497000
OLDGROUP DC    F'0'                                                     02498000
LASTCUA  DC    F'0'                                                     02499000
MYLINECT DC    F'0'                                                     02500000
NUMP     DC    F'0'                                                     02501000
LASTCPU  DC    F'0'                                                     02502000
OLD3705  DC    F'0'                                                     02503000
TOTALTOT DC    F'0'                                                     02504000
TOTALTP  DC    F'0'                                                     02505000
BIGPERM  DC    F'0'                                                     02506000
MAXLIMIT DC    F'0'                                                     02507000
TEMPCUA  DC    H'0'                                                     02508000
@CC00886 DC    C'38XX'                                                  02509000
@CB00206 DC    X'0000'                                                  02510000
@CB00885 DC    X'3830'                                                  02511000
PRINTLNE DS    CL134                                                    02512000
         ORG   PRINTLNE                                                 02513000
DDTYPE   DC    CL1'0'                                                   02514000
SPACING  DC    CL1' '                                                   02515000
PRTLINE  DC    CL152' '                                                 02516000
         ORG   PRINTLNE+154                                             02517000
TOTAHED  DC    CL121'TOTAL CPU-A CPU-B CPU-C CPU-D CPU-E CPU-F CPU-G CPC02518000
               U-H CPU-I CPU-J CPU-K CPU-L CPU-M CPU-N CPU-O CPU-P     C02519000
               '                                                        02520000
PART2    DC    CL8'(PART 2)'                                            02521000
HEADING  DS    CL177                                                    02522000
         ORG   HEADING                                                  02523000
LINE1    DS    CL59                                                     02524000
         ORG   LINE1                                                    02525000
@NM00015 DC    CL53'S Y S T E M  S U M M A R Y               REPORT DATC02526000
               E '                                                      02527000
DAYSDATE DC    CL6'XXX XX'                                              02528000
         ORG   HEADING+59                                               02529000
LINE2    DS    CL59                                                     02530000
         ORG   LINE2                                                    02531000
@NM00016 DC    CL9'         '                                           02532000
PART1    DC    CL8'(PART 1)'                                            02533000
@NM00017 DC    CL36'                        PERIOD FROM '               02534000
FROMDATE DC    CL3'   '                                                 02535000
@NM00018 DC    CL1' '                                                   02536000
FROMYEAR DC    CL2'  '                                                  02537000
         ORG   HEADING+118                                              02538000
LINE3    DS    CL59                                                     02539000
         ORG   LINE3                                                    02540000
CHANGE   DC    CL23'CPU/CHANNEL/STORAGE/SCP'                            02541000
@NM00019 DC    CL30'                           TO '                     02542000
TODATE   DC    CL3'   '                                                 02543000
@NM00020 DC    CL1' '                                                   02544000
TOYEAR   DC    CL2'  '                                                  02545000
         ORG   HEADING+177                                              02546000
CPULINE  DC    CL24'CPU   MODEL   SERIAL NO.'                           02547000
CPUDATA  DC    CL22' '                                                  02548000
         ORG   CPUDATA                                                  02549000
@NM00021 DS    CL1                                                      02550000
CPUTYPE  DS    CL1                                                      02551000
@NM00022 DS    CL5                                                      02552000
CPUMODEL DS    CL3                                                      02553000
@NM00023 DS    CL6                                                      02554000
CPUSERAL DS    CL6                                                      02555000
         ORG   CPUDATA+22                                               02556000
CHANGE2  DC    CL23'      I/O SUBSYSTEM    '                            02557000
UPSPACE  DC    X'89'                                                    02558000
SINGLE   DC    X'09'                                                    02559000
DOUBLE   DC    X'11'                                                    02560000
NOTAPPLY DC    CL8'  N/A   '                                            02561000
CHARS    DC    CL16'0123456789ABCDEF'                                   02562000
         DS    CL6                                                      02563000
WORK     DS    CL8                                                      02564000
BUG18    DC    CL19'DEBUG18 INFORMATION'                                02565000
SPCHNG   DC    CL50' '                                                  02566000
         ORG   SPCHNG                                                   02567000
SPNUM    DS    CL5                                                      02568000
@NM00024 DC    CL45'     SAME CUA # WITH DIFFERENT DEVICES TYPES'       02569000
         ORG   SPCHNG+50                                                02570000
@NM00025 DS    CL17                                                     02571000
         ORG   @NM00025                                                 02572000
TOTFLG   DC    BL1'1'                                                   02573000
SHRFLGS  DC    16AL1(0)                                                 02574000
         ORG   @NM00025+17                                              02575000
SWITCHE  DC    AL1(0)                                                   02576000
         ORG   SWITCHE                                                  02577000
SWITCH1  DS    BL1                                                      02578000
SWITCH2  EQU   SWITCHE+0                                                02579000
SWITCH3  EQU   SWITCHE+0                                                02580000
SWITCH4  EQU   SWITCHE+0                                                02581000
         ORG   SWITCHE+1                                                02582000
TRIPLE   DC    X'1B'                                                    02583000
UKNO     DC    CL4'UKNO'                                                02584000
TOTLABLE DC    CL6'TOTALS'                                              02585000
TOTCT    DC    CL13'TOTAL RECORDS'                                      02586000
BUG22MSG DC    CL16'COUNT/BREAKPOINT'                                   02587000
HEAD20   DS    CL137                                                    02588000
         ORG   HEAD20                                                   02589000
@NM00026 DC    CL14' '                                                  02590000
@NM00027 DC    CL13'PERM  TEMP   '                                      02591000
@NM00028 DC    11CL10'PERM TEMP '                                       02592000
         ORG   HEAD20+137                                               02593000
BUGHEAD  DS    CL16                                                     02594000
         ORG   BUGHEAD                                                  02595000
@NM00029 DC    CL16'    DEBUG COUNTS'                                   02596000
         ORG   BUGHEAD+16                                               02597000
HEAD2    DC    CL134' '                                                 02598000
         ORG   HEAD2                                                    02599000
@NM00032 DC    CL17' '                                                  02600000
@NM00033 DC    CL5'TOTAL'                                               02601000
@NM00034 DC    CL2'  '                                                  02602000
@NM00035 DC    CL10'     CPU-A'                                         02603000
         DC    CL10'     CPU-B'                                         02604000
         DC    CL10'     CPU-C'                                         02605000
         DC    CL10'     CPU-D'                                         02606000
         DC    CL10'     CPU-E'                                         02607000
         DC    CL10'     CPU-F'                                         02608000
         DC    CL10'     CPU-G'                                         02609000
         DC    CL10'     CPU-H'                                         02610000
         DC    CL10'     CPU-I'                                         02611000
         DC    CL10'     CPU-J'                                         02612000
         DS    1XL10                                                    02613000
         ORG   HEAD2+134                                                02614000
DBUGCT1  DS    CL34                                                     02615000
         ORG   DBUGCT1                                                  02616000
@NM00036 DC    CL11'CPU COUNTS '                                        02617000
@NM00037 DC    CL11'AS PRIMARY '                                        02618000
@NM00038 DC    CL12'AS SECONDARY'                                       02619000
         ORG   DBUGCT1+34                                               02620000
TOTALS   DS    CL22                                                     02621000
         ORG   TOTALS                                                   02622000
TOTALCT  DC    CL6'      '                                              02623000
@NM00039 DC    CL16'  OVER ALL COUNT'                                   02624000
         ORG   TOTALS+22                                                02625000
GROUPCT  DS    CL32                                                     02626000
         ORG   GROUPCT                                                  02627000
GROUPNUM DC    CL6'      '                                              02628000
@NM00040 DC    CL2'  '                                                  02629000
@NM00041 DC    CL14'ITEMS IN GROUP'                                     02630000
@NM00042 DC    CL2'  '                                                  02631000
GPNAME   DC    CL8'        '                                            02632000
         ORG   GROUPCT+32                                               02633000
SAVEDEV  DC    X'0000'                                                  02634000
DBLWORD  DS    CL8                                                      02635000
SUPERZAP DC    3CL10'SUPERZAP'                                          02636000
DISCRIPT DC    CL17'IPL              '                                  02637000
         DC    CL17'MACHINE CHECK    '                                  02638000
         DC    CL17'  RECOVERABLE    '                                  02639000
         DC    CL17'  NON-RECOVERABLE'                                  02640000
         DC    CL17'CHANNEL CHECK    '                                  02641000
         DC    CL17'  CHANNEL 0      '                                  02642000
         DC    CL17'  CHANNEL 1      '                                  02643000
         DC    CL17'  CHANNEL 2      '                                  02644000
         DC    CL17'  CHANNEL 3      '                                  02645000
         DC    CL17'  CHANNEL 4      '                                  02646000
         DC    CL17'  CHANNEL 5      '                                  02647000
         DC    CL17'  CHANNEL 6      '                                  02648000
         DC    CL17'  CHANNEL 7      '                                  02649000
         DC    CL17'  CHANNEL 8      '                                  02650000
         DC    CL17'  CHANNEL 9      '                                  02651000
         DC    CL17'  CHANNEL A      '                                  02652000
         DC    CL17'  CHANNEL B      '                                  02653000
         DC    CL17'  CHANNEL C      '                                  02654000
         DC    CL17'  CHANNEL D      '                                  02655000
         DC    CL17'  CHANNEL E      '                                  02656000
         DC    CL17'  CHANNEL F      '                                  02657000
         DC    CL17'PROGRAM ERROR    '                                  02658000
         DC    CL17' PRGM INT        '                                  02659000
         DC    CL17' ABEND           '                                  02660000
         DC    CL17' RESTART         '                                  02661000
         DC    CL17'END OF DAY       '                                  02662000
DEVGROUP DC    CL13'CONS +UR     '                                      02663000
         DC    CL13'DASD STRINGS '                                      02664000
         DC    CL13'TAPE         '                                      02665000
         DC    CL13'DISPLAY      '                                      02666000
         DC    CL13'TP CNTRL     '                                      02667000
         DC    CL13'TERMINAL     '                                      02668000
         DS    2XL13                                                    02669000
IS3705   DC    CL6'CNTRLR'                                              02670000
         DC    CL6'NCP   '                                              02671000
         DC    CL6'LINES '                                              02672000
         DS    CL2                                                      02673000
SYS2TEMP DC    16F'0'                                                   02674000
SYS2PERM DC    16F'0'                                                   02675000
NUMS     DC    16F'0'                                                   02676000
PATCH    DC    20F'0'                                                   02677000
DBUGCT   DC    16F'0'                                                   02678000
TOTALTMP DC    16F'0'                                                   02679000
TOTALPRM DC    17F'0'                                                   02680000
PRIMEYES DC    16F'0'                                                   02681000
PRIMENO  DC    16F'0'                                                   02682000
IFCSYSUM CSECT                                                          02683000
         DC    S(SUPERZAP)                                              02684000
IFCSYSUM CSECT                                                          02685000
    DC  S(PATCH)                                                        02686000
IFCSYSUM CSECT                                                          02687000
MVCINS  MVC   R0(R0,R6),0(R8)                                           02688000
IFCSYSUM CSECT                                                          02689000
MOVETOTL   MVC  R0(R0,R6),0(R8)                                         02690000
IFCSYSUM CSECT                                                          02691000
MOVEGRP  MVC   PRTLINE+11(0),PRTLINE+10                                 02692000
IFCSYSUM CSECT                                                          02693000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       02694000
@01      EQU   01                                                       02695000
@02      EQU   02                                                       02696000
@03      EQU   03                                                       02697000
@04      EQU   04                                                       02698000
@05      EQU   05                                                       02699000
@06      EQU   06                                                       02700000
@07      EQU   07                                                       02701000
@08      EQU   08                                                       02702000
@09      EQU   09                                                       02703000
@10      EQU   10                                                       02704000
@11      EQU   11                                                       02705000
@12      EQU   12                                                       02706000
@13      EQU   13                                                       02707000
@14      EQU   14                                                       02708000
@15      EQU   15                                                       02709000
ADDRSAVE EQU   @03                                                      02710000
R10      EQU   @10                                                      02711000
R11      EQU   @11                                                      02712000
R12      EQU   @12                                                      02713000
R0       EQU   @00                                                      02714000
R1       EQU   @01                                                      02715000
R2       EQU   @02                                                      02716000
R6       EQU   @06                                                      02717000
R8       EQU   @08                                                      02718000
R9       EQU   @09                                                      02719000
R15      EQU   @15                                                      02720000
R13      EQU   @13                                                      02721000
R14      EQU   @14                                                      02722000
R3       EQU   @03                                                      02723000
R4       EQU   @04                                                      02724000
R5       EQU   @05                                                      02725000
R7       EQU   @07                                                      02726000
IOHND    EQU   0                                                        02727000
PARM     EQU   0                                                        02728000
RECTYPE  EQU   PARM                                                     02729000
SWITCHES EQU   PARM+2                                                   02730000
DEBUG    EQU   PARM+4                                                   02731000
DEBUG4   EQU   DEBUG                                                    02732000
DEBUG12  EQU   DEBUG+1                                                  02733000
DEBUG18  EQU   DEBUG+2                                                  02734000
DEBUG21  EQU   DEBUG+2                                                  02735000
DEBUG22  EQU   DEBUG+2                                                  02736000
DEBUGA   EQU   PARM+8                                                   02737000
MISC     EQU   PARM+12                                                  02738000
PRINTES  EQU   MISC                                                     02739000
OPENCLSE EQU   PARM+13                                                  02740000
OPENIO   EQU   OPENCLSE                                                 02741000
CLOSEIO  EQU   OPENCLSE+2                                               02742000
DATENOW  EQU   PARM+17                                                  02743000
STDT     EQU   PARM+23                                                  02744000
STDATE   EQU   STDT                                                     02745000
PSTD     EQU   STDATE+1                                                 02746000
ENDDT    EQU   PARM+31                                                  02747000
ENDDATE  EQU   ENDDT                                                    02748000
PEND     EQU   ENDDATE+1                                                02749000
STTIME1  EQU   PARM+39                                                  02750000
ENDTIME1 EQU   PARM+43                                                  02751000
STTIME2  EQU   PARM+47                                                  02752000
ENDTIME2 EQU   PARM+51                                                  02753000
STRTDATE EQU   PARM+55                                                  02754000
EVSYEAR  EQU   STRTDATE                                                 02755000
EVSDAY   EQU   STRTDATE+1                                               02756000
@NM00006 EQU   PARM+72                                                  02757000
@NM00007 EQU   PARM+75                                                  02758000
SORTNUM  EQU   PARM+84                                                  02759000
ERRID    EQU   PARM+92                                                  02760000
IDTIMEA  EQU   ERRID+6                                                  02761000
IDTIME   EQU   IDTIMEA                                                  02762000
CCHHRLNG EQU   PARM+112                                                 02763000
LINECT   EQU   PARM+120                                                 02764000
ADIOHND  EQU   PARM+124                                                 02765000
ADIFCMSG EQU   PARM+128                                                 02766000
ADEDITB  EQU   PARM+132                                                 02767000
EVPTR    EQU   PARM+136                                                 02768000
SORTADR  EQU   PARM+140                                                 02769000
PRINTADR EQU   PARM+148                                                 02770000
CUAPTR   EQU   PARM+152                                                 02771000
DEVPTR   EQU   PARM+156                                                 02772000
MODPTR   EQU   PARM+160                                                 02773000
SERPTR   EQU   PARM+164                                                 02774000
VOLPTR   EQU   PARM+168                                                 02775000
CPUPTR   EQU   PARM+172                                                 02776000
CPCUAPTR EQU   PARM+176                                                 02777000
LIBADPTR EQU   PARM+180                                                 02778000
SYMCDPTR EQU   PARM+184                                                 02779000
SYSUMPTR EQU   PARM+188                                                 02780000
TRENPTR  EQU   PARM+192                                                 02781000
SHAREPTR EQU   PARM+196                                                 02782000
MERDCPTR EQU   PARM+208                                                 02783000
DUMPTABL EQU   PARM+228                                                 02784000
DUMPINFO EQU   DUMPTABL+4                                               02785000
TRENDONE EQU   0                                                        02786000
TREGEN   EQU   TRENDONE+8                                               02787000
TRECCH0  EQU   TREGEN+8                                                 02788000
TREND2   EQU   0                                                        02789000
TRENDKEY EQU   TREND2                                                   02790000
TRENDRT  EQU   TRENDKEY+1                                               02791000
TRENCPUS EQU   TRENDKEY+3                                               02792000
TRENDITM EQU   TRENDKEY+4                                               02793000
EVTABLE  EQU   0                                                        02794000
EVSTOP   EQU   EVTABLE                                                  02795000
EVYEAR   EQU   EVSTOP                                                   02796000
EVDAY    EQU   EVSTOP+1                                                 02797000
EVNUM    EQU   EVTABLE+4                                                02798000
EVKEY    EQU   EVTABLE+6                                                02799000
EVMODEL  EQU   EVKEY                                                    02800000
EVSERIAL EQU   EVKEY+2                                                  02801000
EVLETTER EQU   EVKEY+5                                                  02802000
SORTABLE EQU   0                                                        02803000
SORTKEY  EQU   SORTABLE                                                 02804000
SORTCCHR EQU   SORTABLE+5                                               02805000
SYSUMONE EQU   0                                                        02806000
SYSUMIPL EQU   SYSUMONE+4                                               02807000
SYSUMNXT EQU   SYSUMONE+8                                               02808000
SYSUMMCR EQU   SYSUMONE+12                                              02809000
SYSUMMCN EQU   SYSUMONE+16                                              02810000
SYSUMCH  EQU   SYSUMONE+20                                              02811000
SYSUMPEI EQU   SYSUMONE+84                                              02812000
SYSUMPEA EQU   SYSUMONE+88                                              02813000
SYSUMPER EQU   SYSUMONE+92                                              02814000
SYSUMEOD EQU   SYSUMONE+96                                              02815000
SYSUM2   EQU   0                                                        02816000
SYSUMKEY EQU   SYSUM2                                                   02817000
SYSGROUP EQU   SYSUMKEY                                                 02818000
SYSRT    EQU   SYSUMKEY+1                                               02819000
SYSTROLL EQU   SYSRT+1                                                  02820000
SYSCPUS  EQU   SYSUMKEY+3                                               02821000
SYSITEM  EQU   SYSUMKEY+4                                               02822000
SYSDEV   EQU   SYSUM2+5                                                 02823000
SYSRANGE EQU   SYSUM2+7                                                 02824000
SYSPERM  EQU   SYSUM2+8                                                 02825000
SYSTEMP  EQU   SYSUM2+10                                                02826000
SHARE    EQU   0                                                        02827000
SHAREIO  EQU   SHARE+2                                                  02828000
SHRBASE  EQU   SHAREIO+1                                                02829000
SHRCUCPU EQU   SHAREIO+8                                                02830000
EDITLOAD EQU   0                                                        02831000
EDITABLE EQU   EDITLOAD+4                                               02832000
CUA      EQU   0                                                        02833000
CUAVAL   EQU   CUA+2                                                    02834000
DEVICE   EQU   0                                                        02835000
MODELS   EQU   0                                                        02836000
DEVSERAL EQU   0                                                        02837000
VOLUME   EQU   0                                                        02838000
CPUS     EQU   0                                                        02839000
CPUCUAS  EQU   0                                                        02840000
CPUCUAV  EQU   CPUCUAS+2                                                02841000
LIBADR   EQU   0                                                        02842000
SYMCODE  EQU   0                                                        02843000
SYMVAL   EQU   SYMCODE+2                                                02844000
MERIDIAN EQU   0                                                        02845000
NEXTBYTE EQU   0                                                        02846000
ADDNUM   EQU   0                                                        02847000
IFCMSG   EQU   0                                                        02848000
PRTOVER  EQU   PRTLINE                                                  02849000
DATAINFO EQU   PRTOVER                                                  02850000
TOTALHD  EQU   PRTOVER+20                                               02851000
TOTAL    EQU   TOTALHD                                                  02852000
MOVECPU  EQU   PRTLINE                                                  02853000
HEADMOVE EQU   PRTLINE                                                  02854000
CPULINE1 EQU   PRTLINE                                                  02855000
DEVGRP   EQU   PRTLINE                                                  02856000
CHANGE1  EQU   CHANGE                                                   02857000
DEVTYP   EQU   PRTLINE                                                  02858000
CUX      EQU   PRTLINE+5                                                02859000
AT3705   EQU   PRTLINE+3                                                02860000
WORKOVER EQU   WORK                                                     02861000
CPULETTR EQU   PRTLINE+2                                                02862000
NHEADL   EQU   PRTLINE                                                  02863000
TOTE2    EQU   NHEADL+16                                                02864000
ERRDATA  EQU   SYSUMPEI                                                 02865000
SHAREPT  EQU   TOTFLG                                                   02866000
TRECCH   EQU   TRECCH0                                                  02867000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    02868000
TEMP2    EQU   TOTE2+5                                                  02869000
@NM00031 EQU   TOTE2+4                                                  02870000
PERM2    EQU   TOTE2                                                    02871000
@NM00030 EQU   NHEADL                                                   02872000
@NM00014 EQU   TOTALHD+13                                               02873000
CPUA     EQU   TOTALHD+8                                                02874000
@NM00013 EQU   TOTALHD+5                                                02875000
@NM00012 EQU   PRTOVER+17                                               02876000
MODEL    EQU   MERIDIAN+2                                               02877000
MRDNUMBR EQU   MERIDIAN                                                 02878000
SYMVAL2  EQU   SYMVAL+2                                                 02879000
SYMVAL1  EQU   SYMVAL                                                   02880000
SYMCDNUM EQU   SYMCODE                                                  02881000
LIBVAL   EQU   LIBADR+2                                                 02882000
LIBADNUM EQU   LIBADR                                                   02883000
CPUCUX3  EQU   CPUCUAV+5                                                02884000
CPUCUX2  EQU   CPUCUAV+3                                                02885000
CPUCUX1  EQU   CPUCUAV                                                  02886000
CPCUANUM EQU   CPUCUAS                                                  02887000
CPUVAL   EQU   CPUS+2                                                   02888000
CPUNUM   EQU   CPUS                                                     02889000
VOLVAL   EQU   VOLUME+2                                                 02890000
VOLNUM   EQU   VOLUME                                                   02891000
SERVAL   EQU   DEVSERAL+2                                               02892000
SERNUM   EQU   DEVSERAL                                                 02893000
MODVAL   EQU   MODELS+2                                                 02894000
MODNUM   EQU   MODELS                                                   02895000
MDRVAL   EQU   DEVICE+204                                               02896000
MDRNUM   EQU   DEVICE+202                                               02897000
DEVVAL   EQU   DEVICE+2                                                 02898000
DEVNUM   EQU   DEVICE                                                   02899000
CUA2     EQU   CUAVAL+2                                                 02900000
CUA1     EQU   CUAVAL                                                   02901000
CUANUM   EQU   CUA                                                      02902000
LOADPTR  EQU   EDITABLE+8                                               02903000
LOADNAME EQU   EDITABLE                                                 02904000
EDITNUM  EQU   EDITLOAD                                                 02905000
SHARLET  EQU   SHAREIO+15                                               02906000
SHRCUAAH EQU   SHRCUCPU+5                                               02907000
SHRCUAAL EQU   SHRCUCPU+3                                               02908000
SHARSERA EQU   SHRCUCPU                                                 02909000
SHRCUABH EQU   SHRBASE+5                                                02910000
SHRCUABL EQU   SHRBASE+3                                                02911000
SHARSERB EQU   SHRBASE                                                  02912000
SHAREFLG EQU   SHAREIO                                                  02913000
SHARENUM EQU   SHARE                                                    02914000
SYSOLDA  EQU   SYSITEM                                                  02915000
SYS3705  EQU   SYSITEM                                                  02916000
SYSOLD   EQU   SYSCPUS                                                  02917000
SYSCPU   EQU   SYSCPUS                                                  02918000
SYSSPAN  EQU   SYSRT+1                                                  02919000
SYSCUA   EQU   SYSRT                                                    02920000
SYSUMNUM EQU   SYSUMONE                                                 02921000
SORTCORE EQU   SORTCCHR                                                 02922000
SORTTIME EQU   SORTKEY+1                                                02923000
SORTYEAR EQU   SORTKEY                                                  02924000
TRETMP   EQU   TREND2+10                                                02925000
TREPRM   EQU   TREND2+8                                                 02926000
TRENDDEV EQU   TREND2+6                                                 02927000
TRENDDAT EQU   TRENDKEY+5                                               02928000
TRENDOD  EQU   TRENDITM                                                 02929000
TREND037 EQU   TRENDITM                                                 02930000
TRENDOLD EQU   TRENCPUS                                                 02931000
TRENDCPU EQU   TRENCPUS                                                 02932000
@NM00011 EQU   TRENDRT+1                                                02933000
TRENDCUA EQU   TRENDRT                                                  02934000
TRENDGRP EQU   TRENDKEY                                                 02935000
TREPRE   EQU   TREGEN+72                                                02936000
TRECCHF  EQU   TREGEN+68                                                02937000
TRECCHE  EQU   TREGEN+64                                                02938000
TRECCHD  EQU   TREGEN+60                                                02939000
TRECCHC  EQU   TREGEN+56                                                02940000
TRECCHB  EQU   TREGEN+52                                                02941000
TRECCHA  EQU   TREGEN+48                                                02942000
TRECCH9  EQU   TREGEN+44                                                02943000
TRECCH8  EQU   TREGEN+40                                                02944000
TRECCH7  EQU   TREGEN+36                                                02945000
TRECCH6  EQU   TREGEN+32                                                02946000
TRECCH5  EQU   TREGEN+28                                                02947000
TRECCH4  EQU   TREGEN+24                                                02948000
TRECCH3  EQU   TREGEN+20                                                02949000
TRECCH2  EQU   TREGEN+16                                                02950000
TRECCH1  EQU   TREGEN+12                                                02951000
TREMCH   EQU   TREGEN+4                                                 02952000
TREIPL   EQU   TREGEN                                                   02953000
TRENUM   EQU   TRENDONE+4                                               02954000
TRENEXT  EQU   TRENDONE                                                 02955000
DUMPSIZE EQU   DUMPINFO+4                                               02956000
DUMPADR  EQU   DUMPINFO                                                 02957000
DUMPNUM  EQU   DUMPTABL                                                 02958000
@NM00010 EQU   PARM+212                                                 02959000
RECLNGT1 EQU   PARM+204                                                 02960000
FRAMEPTR EQU   PARM+200                                                 02961000
ADCPUT   EQU   PARM+144                                                 02962000
RECLNGTH EQU   CCHHRLNG+6                                               02963000
@NM00009 EQU   CCHHRLNG+5                                               02964000
RECCCHHR EQU   CCHHRLNG                                                 02965000
USERPGM  EQU   PARM+102                                                 02966000
IDTSEC   EQU   IDTIME+3                                                 02967000
IDSEC    EQU   IDTIME+2                                                 02968000
IDMIN    EQU   IDTIME+1                                                 02969000
IDHOUR   EQU   IDTIME                                                   02970000
IDASID   EQU   ERRID+4                                                  02971000
IDCPU    EQU   ERRID+3                                                  02972000
@NM00008 EQU   ERRID+2                                                  02973000
IDVALUE  EQU   ERRID                                                    02974000
NUMDAYS  EQU   PARM+88                                                  02975000
TABSIZE  EQU   PARM+80                                                  02976000
SYSRETRN EQU   @NM00007                                                 02977000
NUMIN222 EQU   @NM00006                                                 02978000
WRTHRSH  EQU   PARM+69                                                  02979000
RDTHRSH  EQU   PARM+66                                                  02980000
TERM     EQU   PARM+58                                                  02981000
PENSEC2  EQU   ENDTIME2+2                                               02982000
PENMIN2  EQU   ENDTIME2+1                                               02983000
PENHOUR2 EQU   ENDTIME2                                                 02984000
PSTSEC2  EQU   STTIME2+2                                                02985000
PSTMIN2  EQU   STTIME2+1                                                02986000
PSTHOUR2 EQU   STTIME2                                                  02987000
PENSEC1  EQU   ENDTIME1+2                                               02988000
PENMIN1  EQU   ENDTIME1+1                                               02989000
PENHOUR1 EQU   ENDTIME1                                                 02990000
PSTSEC1  EQU   STTIME1+2                                                02991000
PSTMIN1  EQU   STTIME1+1                                                02992000
PSTHOUR1 EQU   STTIME1                                                  02993000
@NM00005 EQU   ENDDT+4                                                  02994000
PENDY    EQU   PEND+1                                                   02995000
PENYR    EQU   PEND                                                     02996000
@NM00004 EQU   ENDDATE                                                  02997000
@NM00003 EQU   STDT+4                                                   02998000
PSTDY    EQU   PSTD+1                                                   02999000
PSTYR    EQU   PSTD                                                     03000000
@NM00002 EQU   STDATE                                                   03001000
YEARNOW  EQU   DATENOW+4                                                03002000
@NM00001 EQU   DATENOW+3                                                03003000
DAYNOW   EQU   DATENOW                                                  03004000
CSNAP    EQU   CLOSEIO                                                  03005000
CDRCTWRK EQU   CLOSEIO                                                  03006000
CSYSIN   EQU   CLOSEIO                                                  03007000
CACCDEV  EQU   CLOSEIO                                                  03008000
CACCIN   EQU   CLOSEIO                                                  03009000
CSERLOG  EQU   CLOSEIO                                                  03010000
CEREPPT  EQU   CLOSEIO                                                  03011000
CTOURIST EQU   CLOSEIO                                                  03012000
OSNAP    EQU   OPENIO                                                   03013000
ODRCTWRK EQU   OPENIO                                                   03014000
OSYSIN   EQU   OPENIO                                                   03015000
OACCDEV  EQU   OPENIO                                                   03016000
OACCIN   EQU   OPENIO                                                   03017000
OSERLOG  EQU   OPENIO                                                   03018000
OEREPPT  EQU   OPENIO                                                   03019000
OTOURIST EQU   OPENIO                                                   03020000
PASSFLAG EQU   MISC                                                     03021000
PLOGREC  EQU   MISC                                                     03022000
ERRORID  EQU   MISC                                                     03023000
PSUM     EQU   PRINTES                                                  03024000
PEDIT    EQU   PRINTES                                                  03025000
PHIST    EQU   MISC                                                     03026000
PACC     EQU   MISC                                                     03027000
PZERO    EQU   MISC                                                     03028000
DEBUG63  EQU   DEBUGA+3                                                 03029000
DEBUG62  EQU   DEBUGA+3                                                 03030000
DEBUG61  EQU   DEBUGA+3                                                 03031000
DEBUG60  EQU   DEBUGA+3                                                 03032000
DEBUG59  EQU   DEBUGA+3                                                 03033000
DEBUG58  EQU   DEBUGA+3                                                 03034000
DEBUG57  EQU   DEBUGA+3                                                 03035000
DEBUG56  EQU   DEBUGA+3                                                 03036000
DEBUG55  EQU   DEBUGA+2                                                 03037000
DEBUG54  EQU   DEBUGA+2                                                 03038000
DEBUG53  EQU   DEBUGA+2                                                 03039000
DEBUG52  EQU   DEBUGA+2                                                 03040000
DEBUG51  EQU   DEBUGA+2                                                 03041000
DEBUG50  EQU   DEBUGA+2                                                 03042000
DEBUG49  EQU   DEBUGA+2                                                 03043000
DEBUG48  EQU   DEBUGA+2                                                 03044000
DEBUG47  EQU   DEBUGA+1                                                 03045000
DEBUG46  EQU   DEBUGA+1                                                 03046000
DEBUG45  EQU   DEBUGA+1                                                 03047000
DEBUG44  EQU   DEBUGA+1                                                 03048000
DEBUG43  EQU   DEBUGA+1                                                 03049000
DEBUG42  EQU   DEBUGA+1                                                 03050000
DEBUG41  EQU   DEBUGA+1                                                 03051000
DEBUG40  EQU   DEBUGA+1                                                 03052000
DEBUG39  EQU   DEBUGA                                                   03053000
DEBUG38  EQU   DEBUGA                                                   03054000
DEBUG37  EQU   DEBUGA                                                   03055000
DEBUG36  EQU   DEBUGA                                                   03056000
DEBUG35  EQU   DEBUGA                                                   03057000
DEBUG34  EQU   DEBUGA                                                   03058000
DEBUG33  EQU   DEBUGA                                                   03059000
DEBUG32  EQU   DEBUGA                                                   03060000
DEBUG31  EQU   DEBUG+3                                                  03061000
DEBUG30  EQU   DEBUG+3                                                  03062000
DEBUG29  EQU   DEBUG+3                                                  03063000
DEBUG28  EQU   DEBUG+3                                                  03064000
DEBUG27  EQU   DEBUG+3                                                  03065000
DEBUG26  EQU   DEBUG+3                                                  03066000
DEBUG25  EQU   DEBUG+3                                                  03067000
DEBUG24  EQU   DEBUG+3                                                  03068000
DEBUG23  EQU   DEBUG+2                                                  03069000
DEBUG20  EQU   DEBUG+2                                                  03070000
DEBUG19  EQU   DEBUG+2                                                  03071000
DEBUG17  EQU   DEBUG+2                                                  03072000
DEBUG16  EQU   DEBUG+2                                                  03073000
DEBUG15  EQU   DEBUG+1                                                  03074000
DEBUG14  EQU   DEBUG+1                                                  03075000
DEBUG13  EQU   DEBUG+1                                                  03076000
DEBUG11  EQU   DEBUG+1                                                  03077000
DEBUG10  EQU   DEBUG+1                                                  03078000
DEBUG9   EQU   DEBUG+1                                                  03079000
DEBUG8   EQU   DEBUG+1                                                  03080000
DEBUG7   EQU   DEBUG                                                    03081000
DEBUG6   EQU   DEBUG                                                    03082000
DEBUG5   EQU   DEBUG                                                    03083000
DEBUG3   EQU   DEBUG                                                    03084000
DEBUG2   EQU   DEBUG                                                    03085000
DEBUG1   EQU   DEBUG                                                    03086000
DEBUG0   EQU   DEBUG                                                    03087000
SORTBRK  EQU   SWITCHES+1                                               03088000
COREFAIL EQU   SWITCHES+1                                               03089000
ANALYSIS EQU   SWITCHES+1                                               03090000
SHIFT3RD EQU   SWITCHES+1                                               03091000
DEVEXCL  EQU   SWITCHES+1                                               03092000
ZEROALL  EQU   SWITCHES+1                                               03093000
NOTALL   EQU   SWITCHES+1                                               03094000
NOSDR    EQU   SWITCHES                                                 03095000
TIMESEQ  EQU   SWITCHES                                                 03096000
SYSUM    EQU   SWITCHES                                                 03097000
PARMTHR  EQU   SWITCHES                                                 03098000
TREND    EQU   SWITCHES                                                 03099000
SHORTOBR EQU   SWITCHES                                                 03100000
PARMMES  EQU   SWITCHES                                                 03101000
RDESUM   EQU   SWITCHES                                                 03102000
PCCHFRAM EQU   RECTYPE+1                                                03103000
PMCHFRAM EQU   RECTYPE+1                                                03104000
PTTYP    EQU   RECTYPE+1                                                03105000
PEOD     EQU   RECTYPE                                                  03106000
PMIH     EQU   RECTYPE                                                  03107000
PDDR     EQU   RECTYPE                                                  03108000
PIPL     EQU   RECTYPE                                                  03109000
PSOFT    EQU   RECTYPE                                                  03110000
POBR     EQU   RECTYPE                                                  03111000
PCHAN    EQU   RECTYPE                                                  03112000
PMCH     EQU   RECTYPE                                                  03113000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      03114000
@RF00234 EQU   @EL00005                                                 03115000
@RF00461 EQU   @EL00014                                                 03116000
@RC00567 EQU   @RC00565                                                 03117000
@RC00580 EQU   @EL00018                                                 03118000
@RF00608 EQU   @EL00018                                                 03119000
@RF00640 EQU   @EL00020                                                 03120000
@RF00647 EQU   @EL00020                                                 03121000
@RF00729 EQU   @EL00024                                                 03122000
@PB00024 EQU   @PB00025                                                 03123000
@RF00786 EQU   @EL00001                                                 03124000
@PB00023 EQU   @PB00024                                                 03125000
@PB00022 EQU   @PB00023                                                 03126000
@PB00021 EQU   @PB00022                                                 03127000
@PB00020 EQU   @PB00021                                                 03128000
@PB00019 EQU   @PB00020                                                 03129000
@PB00018 EQU   @PB00019                                                 03130000
@PB00017 EQU   @PB00018                                                 03131000
@PB00016 EQU   @PB00017                                                 03132000
@PB00015 EQU   @PB00016                                                 03133000
@PB00014 EQU   @PB00015                                                 03134000
@PB00013 EQU   @PB00014                                                 03135000
@PB00012 EQU   @PB00013                                                 03136000
@PB00011 EQU   @PB00012                                                 03137000
@PB00010 EQU   @PB00011                                                 03138000
@PB00009 EQU   @PB00010                                                 03139000
@PB00008 EQU   @PB00009                                                 03140000
@PB00007 EQU   @PB00008                                                 03141000
@PB00006 EQU   @PB00007                                                 03142000
@PB00005 EQU   @PB00006                                                 03143000
@PB00004 EQU   @PB00005                                                 03144000
@PB00003 EQU   @PB00004                                                 03145000
@PB00002 EQU   @PB00003                                                 03146000
@ENDDATA EQU   *                                                        03147000
         END   IFCSYSUM                                                 03148000
./  ADD  SSI=90101241,NAME=IFCS0115
         TITLE 'IFCS0115 - (ALIAS IFCS0125) MCH SUMMARY TABLE FOR 115 A*00050000
               ND 125 CPU'                                              00100000
*********************************************************************** 00150000
**                                                                   ** 00200000
**                                                                   ** 00250000
**  MODULE NAME:   IFCS0115    (ALIAS IFCS0125)                      ** 00300000
**                                                                   ** 00350000
**  DESCRIPTIVE-NAME:   SUMMARY TABLE FOR 0115 AND 0125 CPUS         ** 00400000
**                                                                   ** 00450000
**  COPYRIGHT:  NONE                                                 ** 00500000
**                                                                   ** 00550000
**  STATUS:     N/A                                                  ** 00600000
**                                                                   ** 00650000
**  FUNCTION:   PROVIDES SUMMARY SUPPORT FOR 0115 AND 0125 MCH       ** 00700000
**              RECORDS                                              ** 00750000
**                                                                   ** 00800000
**  NOTES:                                                           ** 00850000
**                                                                   ** 00900000
**    DEPENDENCIES:   THIS MODULE WAS ASSEMBLED USING THE EBCDIC     ** 00950000
**                 CHARACTER SET.  IT MUST BE REASSEMBLED IF ANOTHER ** 01000000
**                CHARACTER SET IS TO BE USED AT EXECUTION.         **  01050000
**                                                                   ** 01100000
**    RESTRICTIONS:   N/A                                            ** 01150000
**                                                                   ** 01200000
**    REGISTER-CONVENTIONS:                                          ** 01250000
**          REG 2  = POINTER TO THE MCH RECORD (SUMMARY PORTION)     ** 01300000
**                   POINTER TO THE SUMMARY COUNTERS (EDIT PORTION)  ** 01350000
**          REG 3  = POINTER TO THE PRINT BUFFER (EDIT PORTION)      ** 01400000
**                   POINTER TO CURRENT SUMMARY COUNTER (SUMMARY)    ** 01450000
**          REG 4  = POINTER TO DATA ITEM REFERENCED IN 'ROUTINE'    ** 01500000
**          REG 14 = RETURN POINT FROM 'ROUTINE'                     ** 01550000
**          REG 15 = SET TO ZERO TO SUPPRESS PRINTING LINE           ** 01600000
**                                                                   ** 01650000
**    PATCH-LABEL:  PATCH                                            ** 01700000
**                                                                   ** 01750000
**  MODULE TYPE:    DATA                                             ** 01800000
**                                                                   ** 01850000
**    PROCESSOR:    370 ASSEMBLER                                    ** 01900000
**                                                                   ** 01950000
**    MODULE-SIZE:                                                   ** 02000000
**                                                                   ** 02050000
**    ATTRIBUTES:   SERIALLY REUSABLE                                ** 02100000
**                                                                   ** 02150000
**  ENTRY-POINT:    N/A                                              ** 02200000
**                                                                   ** 02250000
**    LINKAGE:      N/A                                              ** 02300000
**                                                                   ** 02350000
**  INPUT:     N/A                                                   ** 02400000
**                                                                   ** 02450000
**  OUTPUT:    N/A                                                   ** 02500000
**                                                                   ** 02550000
**  EXIT-NORMAL:     N/A                                             ** 02600000
**                                                                   ** 02650000
**  EXIT-ERROR:      N/A                                             ** 02700000
**                                                                   ** 02750000
**  EXTERNAL-REFERENCES:                                             ** 02800000
**                                                                   ** 02850000
**    ROUTINES:        NONE                                          ** 02900000
**                                                                   ** 02950000
**    DATA-AREAS:      NONE                                          ** 03000000
**                                                                   ** 03050000
**    CONTROL-BLOCKS:  NONE                                          ** 03100000
**                                                                   ** 03150000
**    TABLES:          NONE                                          ** 03200000
**                                                                   ** 03250000
**    MACROS:    EDIT AND SUMMARY TABLE MACROS                       ** 03300000
**                                                                   ** 03350000
*********************************************************************** 03400000
         EJECT                                                          03450000
         GBLC  &DSECT,&CSECT                                            03500000
         SUMMARY NAME=IFCS0115                                          03550000
         DSGEN (CLASRC,8),(SYSREL,8),(SWITCHES,16)                      03600000
         DSGEN (SPARE1,32)                                              03650000
         DSGEN (DATE,32)                                                03700000
         DSGEN (HOUR,32)                                                03750000
         DSGEN (SPARE2,8),(CPUSERL,24)                                  03800000
         DSGEN (CPUID,16),(MCEL,16),(PJID,128),(PSW,64)                 03850000
         DSGEN (SUBCD,1,0,7),(TNSCD,1,0,7),(STPVB,1,0,7)                03900000
         EJECT                                                          03950000
&CSECT   CSECT                                                          04000000
XSAVE    DC    5F'0'                                                    04050000
HEX00    DC    XL4'00000000'                                            04100000
*********************************************************************** 04150000
**                 SUMMARY ROUTINES ('SPECIAL' MACRO)                ** 04200000
*********************************************************************** 04250000
XDATE1   STM   R4,R8,XSAVE              SAVE REGS                       04300000
         LA    R5,L0(R3)                GET OUTDSELT POINTER RIGHT      04350000
         CLC   DATE(L4),HEX00           IS DATE ZERO                    04400000
         BE    RETURN                                                   04450000
         CLC   L0(L4,R3),HEX00          IS LOW DATE ZERO                04500000
         BNE   XDATE2                   BR-NO                           04550000
         MVC      L0(L4,R3),DATE                 MOVE IN DATE           04600000
XDATE2   CLC   DATE(L4),L0(R3)          CHECK FOR LOW DATE              04650000
         BL    SAVELOW                  LOWER SAVE IT                   04700000
         CLC   DATE(L4),L4(R3)          CHECK FOR HI                    04750000
         BNH   RETURN                   BR-NOT HI                       04800000
         MVC   L4(L4,R3),DATE      MOVE HI DATE                         04850000
         B     RETURN                                                   04900000
SAVELOW  MVC   L0(L4,R3),DATE           MOVE LOW DATE                   04950000
RETURN   LM    R4,R8,XSAVE              RESTORE REGS                    05000000
         BR    R14                      GO BACK                         05050000
         EJECT                                                          05100000
SENTRIES DS    0F                                                       05150000
         SPECIAL XDATE1,0,SPACE=4                                       05200000
         SUM   SUBCD0                                                   05250000
         SUM   SUBCD1                                                   05300000
         SUM   SUBCD2                                                   05350000
         SUM   SUBCD3                                                   05400000
         SUM   SUBCD4                                                   05450000
         SUM   SUBCD5                                                   05500000
         SUM   SUBCD7                                                   05550000
         SUM   TNSCD3                                                   05600000
         SPACE 1                                                        05650000
         SUM   TNSCD6                                                   05700000
         SUM   TNSCD7                                                   05750000
         SPACE 1                                                        05800000
         SUM   STPVB0                                                   05850000
         SUM   STPVB1                                                   05900000
         SUM   STPVB2                                                   05950000
         DC    X'FF'                                                    06000000
         SPACE 5                                                        06050000
         PROLOG                                                         06100000
         DSGEN (YDATES,64)                                              06150000
         DSGEN (YMCIC,16,0,7),(YITC,16,0,1),(YSPEC,16,0,2)              06200000
DSECTLEN EQU   *                                                        06250000
         EJECT                                                          06300000
&CSECT   CSECT                                                          06350000
WORK     DS    D                                                        06400000
XSAVE1   DC    5F'0'                                                    06450000
L28      EQU   28                                                       06500000
*********************************************************************** 06550000
**                      EDIT ROUTINES ('ROUTINE' MACRO)              ** 06600000
*********************************************************************** 06650000
CONVERT  STM   R5,R8,XSAVE1             SAVE REGS                       06700000
         LH    R5,L0(R4)                PICK UP COUNT                   06750000
         CVD   R5,WORK                  CONVERT TO DECIMAL              06800000
         UNPK  L0(L5,R3),WORK+L5(L3)    UNPACK TO PRINT BUFF            06850000
         MVZ   L4(L1,R3),L0(R3)         PUT IN TIGHT ZONE               06900000
RETURNA  LM    R5,R8,XSAVE1             RESTORE REGS                    06950000
         BR    R14                      RETURN                          07000000
         SPACE 3                                                        07050000
         FREETAB                                                        07100000
         SPACE 3                                                        07150000
SETDATES UNPK  WORK(L8),L0(L4,R4)       UNPACK LOW DATE                 07200000
         MVZ   WORK+L7(L1),WORK         MOVE IN RIGHT ZONE              07250000
         MVC   L0(L3,R3),WORK+L5        PUT DATE IN PTR BUFF            07300000
         MVC   L5(L2,R3),WORK+L3        PUT YEAR IN PTR BUFF            07350000
         UNPK  WORK(L8),L4(L4,R4)       UNPACK HIGH DATE                07400000
         MVZ   WORK+L7(L1),WORK         MOVE IN RIGHT ZONE              07450000
         MVC   L13(L3,R3),WORK+L5       PUT DATE IN PTR BUFF            07500000
         MVC   L18(L2,R3),WORK+L3       PUT YEAR IN PTR BUFF            07550000
         BR    R14                                                      07600000
         EJECT                                                          07650000
         ENTRIES PAGE                                                   07700000
         LINE  (23,60),(14,11),SKIP=2                                   07750000
         HEX   YCPU                                                     07800000
         LABEL 'MODEL',                                                X07850000
               'MACHINE CHECK RECORDS     DAY YEAR     DAY YEAR'        07900000
         SPACE 2                                                        07950000
         LINE  (51,60),(31,29),SKIP=2                                   08000000
         ROUTINE YDATES,SETDATES                                        08050000
         LABEL 'DATE RANGE -  FROM','TO'                                08100000
         SPACE 2                                                        08150000
         LINE  (76,1),(51,1)                                            08200000
         HEX   YSER                                                     08250000
         LABEL 'SERIAL NO. '                                            08300000
         SPACE 2                                                        08350000
         LINE  (72,10),(51,1)                                           08400000
         ROUTINE YNOREC,CONVERT                                         08450000
         LABEL 'NO.OF RECORDS'                                          08500000
         SPACE 2                                                        08550000
         LINE  (50,1),(26,26),SKIP=3                                    08600000
         HEX   YCPU                                                     08650000
         LABEL '--- SUMMARY OF MODEL','MACHINE CHECK RECORDS ---'       08700000
         SPACE 2                                                        08750000
         LINE  ,(26,1),SKIP=2                                           08800000
         LABEL '--- MACHINE CHECK INTERRUPT CODE ---'                   08850000
         SPACE 2                                                        08900000
         LINE  ,(36,1),SKIP=2                                           08950000
         LABEL '--- SUB CLASS ---'                                      09000000
         SPACE 2                                                        09050000
         LINE  (24,55),(1,55),SKIP=1                                    09100000
         CONVT (YMCIC0,2,4),(YMCIC4,2,4)                                09150000
         LABEL 'SYSTEM DAMAGE (SD)','CLOCK DAMAGE (CD)'                 09200000
         SPACE 2                                                        09250000
         LINE  ,                                                        09300000
         CONVT (YMCIC1,2,4),(YMCIC5,2,4)                                09350000
         LABEL 'PROC. DAMAGE (PD)','EXTERNAL DAMAGE (ED)'               09400000
         SPACE 2                                                        09450000
         LINE  ,                                                        09500000
         CONVT (YMCIC2,2,4),(YMCIC6,2,4)                                09550000
         LABEL 'SYSTEM RECOVERY (SR)','AUTO-CONFIG (AC)'                09600000
         SPACE 2                                                        09650000
         LINE  ,,SKIP=2                                                 09700000
         CONVT (YMCIC3,2,4),(YMCIC7,2,4)                                09750000
         LABEL 'TIMER DAMAGE (TD)','WARNING (W)'                        09800000
         SPACE 2                                                        09850000
         LINE  ,(28,1),SKIP=2                                           09900000
         LABEL '--- INTERRUPT TENSE CODES ---'                          09950000
         SPACE 2                                                        10000000
         LINE  ,(1,55),SKIP=2                                           10050000
         CONVT (YITC0,2,4),(YITC1,2,4)                                  10100000
         LABEL 'BACK-UP (B)','DELAYED (D)'                              10150000
         SPACE 2                                                        10200000
         LINE  ,(24,1),SKIP=2                                           10250000
         LABEL '--- STORAGE AND PROTECTION ERROR CODES ---'             10300000
         SPACE 2                                                        10350000
         LINE  (36,58),(1,55),SKIP=1                                    10400000
         CONVT (YSPEC0,2,4),(YSPEC2,2,4)                                10450000
         LABEL 'UNCORRECTED STORAGE ERRORS (SE)','UNCORRECTED PROTECTIO*10500000
               N ERRORS (PE)'                                           10550000
         SPACE 2                                                        10600000
         LINE  ,,SKIP=2                                                 10650000
         CONVT (YSPEC1,2,4)                                             10700000
         LABEL 'CORRECTED STORAGE ERRORS (SC)'                          10750000
         SPACE 2                                                        10800000
         ETEPILOG                                                       10850000
         END                                                            10900000
./  ADD  SSI=90101242,NAME=IFCS0165
       TITLE   'IFCS0165 MODEL 165/168 CPU SUMMARY TABLE'               00060002
*  DSGEN MACRO     DSGEN MACRO     DSGEN MACRO     DSGEN MACRO        * 00120002
         SPACE 2                                                        00180002
         MACRO                                                          00240002
&NAME    DSGEN                                                          00300002
.*                            THIS MACRO GENERATES ONE DSECT WORD       00360002
.*                                 FORMATTED FOR THE SUBJECT LOG RECORD 00420002
.*                                 EACH OPERAND HAS TWO SUB LISTS. THE  00480002
.*                                 FIRST IS THE NAME OF THE LOG ITEM    00540002
.*                                 WHILE THE SECOND IS THE # OF BITS TO 00600002
.*                                 ALLOCATE FOR THIS ITEM. ITEMS MUST   00660002
.*                                 BE DEFINED CONTIGUOUSLY WITHOUT GAPS 00720002
.*                                 UNUSED BIT GROUPS MUST BE GIVEN      00780002
.*                                 DUMMY NAMES. THE NAMES PROVIDED FOR  00840002
.*                                 THE LOG ITEMS MAY THEN BE USED IN    00900002
.*                                 THE CONVERSION MACRO INSTRUCTIONS.   00960002
         GBLC &ITEM(2000)                                               01020002
         GBLA &ITEMNBR,&BITS(2000),&SHIFT(2000)                         01080002
         LCLB  &ONLY1,&CTIND                                            01140002
         LCLA  &START1,&START2,&END1,&END2                              01200002
         LCLC  &SYMBOL,&EQUSYM                                          01260002
         LCLA  &OP,&COUNT,&BYTE,&EQUCNT                                 01320002
         ACTR  100000                                                   01380002
.START   AIF   (N'&SYSLIST(&OP+1) LT 3).LOOP                            01440002
         AIF   ('&SYSLIST(&OP+1,3)' EQ 'EQU').LOOP     TEST FOR EQU     01500002
  AIF   ('&SYSLIST(&OP+1,3)' EQ '' OR '&SYSLIST(&OP+1,4)' EQ '').ERR1   01560002
         AIF   ('&SYSLIST(&OP+1,3)' GT '&SYSLIST(&OP+1,4)').ERR3        01620002
&START1  SETA  &SYSLIST(&OP+1,3)        GET START COUNT OF 1            01680002
&START2  SETA  &SYSLIST(&OP+1,4)        GET FIRST END COUNT             01740002
         AGO   .SET2A                   BRANCH AROUND                   01800002
.ERR1    MNOTE '**FIRST SYMBOL CONCATENATION INCOMPLETE**'              01860002
         MEXIT                                                          01920002
.SET2A   AIF   ('&SYSLIST(&OP+1,5)' EQ ''AND '&SYSLIST(&OP+1,6)' EQ '' X01980002
               ).SET2                   TEST FOR NO SECOND              02040002
  AIF   ('&SYSLIST(&OP+1,5)' EQ '' OR '&SYSLIST(&OP+1,6)' EQ '').ERR2   02100002
         AIF   ('&SYSLIST(&OP+1,5)' GT '&SYSLIST(&OP+1,6)').ERR3        02160002
&END1    SETA  &SYSLIST(&OP+1,5)        GET START COUNT OF 2            02220002
&END2    SETA  &SYSLIST(&OP+1,6)        GET END COUNT OF 2              02280002
         AGO   .LOOP                                                    02340002
.SET2    ANOP                                                           02400002
&ONLY1   SETB  1                        INDICATE ONLY ONE CONCATENATION 02460002
         AGO   .LOOP                                                    02520002
.ERR2    MNOTE '**SECOND SYMBOL CONCATENATION INCOMPLETE**'             02580002
         MEXIT                                                          02640002
.ERR3    MNOTE '**START GREATER THAN END CONCATENATION**'               02700002
         MEXIT                                                          02760002
.LOOP    ANOP                                                           02820002
&OP      SETA  &OP+1                                                    02880002
         AIF   (&OP GT N'&SYSLIST).DONE      TEST IF ALL DONE           02940002
&ITEMNBR SETA  &ITEMNBR+1                                               03000002
         AIF   ('&SYSLIST(&OP,2)' NE '').OK1                            03060002
         MNOTE '**NULL BIT COUNT FIELD**'                               03120002
         MEXIT                                                          03180002
.OK1     ANOP                                                           03240002
&SYMBOL  SETC  '&SYSLIST(&OP,1)'                                        03300002
         AIF   ('&SYMBOL' NE '').OK                                     03360002
*              *****     LOG ITEM SYMBOL NOT PROVIDED     *****         03420002
         AIF   ('&SYSLIST(&OP,3)' NE 'EQU').CNT                         03480002
         AGO   .START                   GET NEXT                        03540002
.OK      AIF   (N'&SYSLIST(&OP) LT 3).NO3    TEST FOR OLD FORMAT        03600002
         AIF   ('&SYSLIST(&OP,3)' EQ 'EQU').EQU   TEST FOR EQU          03660002
         AIF   (&ONLY1).OK2             TEST FOR ONLY ONE CONCAT        03720002
&SYMBOL  SETC  '&SYMBOL.&START1.&END1'       GET 1 AND 2 CONCAT         03780002
         AGO   .NO3                     BRANCH AROUND                   03840002
.OK2     ANOP                                                           03900002
&SYMBOL  SETC  '&SYMBOL.&START1'        GET 1 CONCATENATED              03960002
.NO3     ANOP                                                           04020002
&SYMBOL  EQU   *+&BYTE                                                  04080002
&ITEM(&ITEMNBR) SETC '&SYMBOL'          GET LABEL IN GLOBAL             04140002
&BITS(&ITEMNBR) SETA &SYSLIST(&OP,2)                                    04200002
&SHIFT(&ITEMNBR) SETA &COUNT-&BYTE*8                                    04260002
.CNT     ANOP                                                           04320002
&CTIND   SETB  1                        SET COUNT INDICATOR             04380002
&COUNT   SETA  &COUNT+&SYSLIST(&OP,2)                                   04440002
&BYTE    SETA  &COUNT/8                                                 04500002
         AIF   (N'&SYSLIST(&OP) LT 3).START  TEST FOR OLD FORMAT        04560002
         AIF   (&ONLY1).TSTST           TEST FOR ONLY ONE CONCAT        04620002
         AIF   (&END1 EQ &END2).TSTST   TEST FOR SECOND END             04680002
&END1    SETA  &END1+1                  INCREMENT COUNT                 04740002
&OP      SETA  &OP-1                    DECREMENT INCREMENT             04800002
         AGO   .LOOP                    GENERATE NEXT                   04860002
.TSTST   ANOP                                                           04920002
         AIF   (&START1 EQ &START2).LPDONE   TEST FOR END               04980002
         AIF   (&ONLY1).NSET1           TEST FOR ONLY ONE CONCAT        05040002
&END1    SETA  &SYSLIST(&OP,5)          RE-INIT SECOND START COUNT      05100002
.NSET1   ANOP                                                           05160002
&OP      SETA  &OP-1                    DECREMENT INDEX                 05220002
&START1  SETA  &START1+1                INCREMENT FIRST COUNT           05280002
         AGO   .LOOP                    GO DO NEXT                      05340002
.LPDONE  ANOP                                                           05400002
&ONLY1   SETB  0                        CLEAR INDICATOR                 05460002
         AGO   .START                   GO TEST FOR MORE SUB-LISTS      05520002
.DONE    AIF   (&COUNT-&COUNT/8*8 NE 0).ERR  TEST FOR MULTIPLE OF EIGHT 05580002
         AIF   (&CTIND EQ 0).END        NO DS IF NO COUNT               05640002
&COUNT   SETA  &COUNT/8                 GET NUMBER OF BYTES             05700002
&NAME    DS    &COUNT.C                                                 05760002
.END     MEXIT                                                          05820002
.ERR     MNOTE '**BIT COUNT FLDS DO NOT TOTAL MULTIPLE OF 8**'          05880002
         MEXIT                                                          05940002
.EQU     AIF   ('&SYSLIST(&OP,4)' NE '').EQU1     TEST FOR NULL LABEL   06000002
.ERR4    MNOTE '**EQU OPERAND OMITTED OR NOT FOUND**'                   06060002
         MEXIT                                                          06120002
.EQU1    AIF   (&SYSLIST(&OP,2) LT 16).EQU2  COUNT OVER FIFTEEN         06180002
*****               THE FOLLOWING STATEMENT                *****        06240002
*****     NUMBER OF BITS EXCEED 15 - DO NOT USE AS BIN     *****        06300002
.EQU2    ANOP                                                           06360002
&EQUCNT  SETA  0                        CLEAR COUNTER                   06420002
&EQUSYM  SETC  '&SYSLIST(&OP,4)'        GET EQU OPERAND                 06480002
.EQULOP  ANOP                                                           06540002
&EQUCNT  SETA  &EQUCNT+1                INCREMENT INDEX                 06600002
         AIF   ('&ITEM(&EQUCNT)' EQ '&EQUSYM').EQUOUT  LABEL FOUND?     06660002
         AIF   (&EQUCNT EQ &ITEMNBR).ERR4    ALL TESTED?                06720002
         AGO   .EQULOP                  NO-GET NEXT                     06780002
.EQUOUT  ANOP                                                           06840002
&ITEM(&ITEMNBR) SETC '&SYMBOL'          GET LABEL NAME                  06900002
&BITS(&ITEMNBR) SETA &SYSLIST(&OP,2)    GET NUMBER OF BITS              06960002
&SHIFT(&ITEMNBR) SETA &SHIFT(&EQUCNT)   GET SHIFT COUNT                 07020002
&SYMBOL  EQU   &EQUSYM                  THIS SYMBOL EQUATED             07080002
         AGO   .START                   RETURN FOR NEXT                 07140002
         MEND                                                           07200002
         MACRO                                                          07260002
         LINEND                                                         07320002
.*                            THIS MACRO IS USED ONLY BY THE LINE       07380002
.*                                 MACRO TO SET THE NUMBER OF ENTRIES   07440002
.*                                 ASSOCIATED WITH EACH LINE.           07500002
         GBLA  &NRENTS                                                  07560002
         GBLC &NRENTSX                                                  07620002
         AIF   (&NRENTS EQ 0).NORENTS   TEST FOR NO COUNT               07680002
         ORG   &NRENTSX                                                 07740002
         DC    FL1'&NRENTS'                                             07800002
         ORG                                                            07860002
&NRENTS  SETA  0                                                        07920002
.NORENTS ANOP                                                           07980002
B&SYSNDX EQU   *                                                        08040002
&NRENTSX SETC  'B&SYSNDX'                                               08100002
         MEND                                                           08160002
*                                                                       08220002
         MACRO                                                          08280002
         BIN                                                            08340002
.*                                 &SYSLIST(&OP,1) - NAME OF LOG ITEM   08400002
.*                                      RECORD DSECT                    08460002
.*                                 $SYSLIST(&OP,2) - NBR OF SPACES      08520002
.*                                      TO SKIP ON MULTIPLE             08580002
.*                                      PRINT OR NBR OF SPACES          08640002
.*                                      TO BACK UP FROM COLUMN FOR      08700002
.*                                      START OF PRINTING. THE LETTER   08760002
.*                                      B PRECEEDS THE NUMBER (B5) IF   08820002
.*                                      THE LATTER IS DESIRED. OMISSION 08880002
.*                                      OF THIS OPERAND FORCES OPTION 2 08940002
.*                                      WITH BACKUP SPACING EQUAL TO    09000002
.*                                 THE NUMBER OF BITS IN THE ITEM       09060002
.*                                 DEFINITION (VIA MACRO 'DSGEN').      09120002
.*                            A LIMIT OF 15 BITS IS IMPOSED FOR THE     09180002
.*                                 TOTAL NUMBER OF BITS TO PRINT.       09240002
         GBLA  &INITIAL                                                 09300002
         GBLB  &DIAGTST,&DIAGSET,&DIAGLIN                               09360002
         GBLC &ITEM(2000)                                               09420002
         GBLA &ITEMNBR,&BITS(2000),&SHIFT(2000),&NRENTS                 09480002
         GBLC  &DSECT                                                   09540002
         LCLB  &B,&SUB                                                  09600002
         LCLA  &IBITS,&NDX,&ISHIFT,&K                                   09660002
         LCLA  &TEMP,&T,&OP                                             09720002
         LCLC  &S                                                       09780002
         AIF   (&DIAGTST EQ 0).NOMSG                                    09840002
         AIF   (&INITIAL EQ 0).NOMSG                                    09900002
         AIF   (&DIAGLIN EQ 1).NOMSG                                    09960002
         MNOTE '**NO LINE ASSOCIATED WITH THIS DATA**'                  10020002
*****THE FOLLOWING GENERATED FOR TEST PURPOSES*****                     10080002
*        LINE                                                           10140002
         LINE                                                           10200002
.NOMSG   ANOP                                                           10260002
         AIF   (K'&SYSLIST(1) EQ K'&SYSLIST(1,1)).LOOP                  10320002
&SUB     SETB  1                                                        10380002
.LOOP    ANOP                                                           10440002
&OP      SETA  &OP+1                                                    10500002
.LOOP1   ANOP                                                           10560002
&NDX     SETA  &NDX+1                                                   10620002
         AIF   ('&ITEM(&NDX)' EQ '&SYSLIST(&OP,1)').FOUND               10680002
         AIF   (&NDX LT &ITEMNBR).LOOP1                                 10740002
         MNOTE '**LOG ITEM NOT DEFINED**'                               10800002
         MEXIT                                                          10860002
.FOUND   ANOP                                                           10920002
&ISHIFT  SETA  &SHIFT(&NDX)                                             10980002
&IBITS   SETA  &BITS(&NDX)                                              11040002
&T       SETA  &IBITS-1                                                 11100002
&B       SETB  0                                                        11160002
         AIF   (&IBITS GT 0 AND &IBITS LT 16).SUB0                      11220002
         MNOTE '**NO. OF BITS OUTSIDE RANGE OF 1-15**'                  11280002
         MEXIT                                                          11340002
.SUB0    AIF   (&SUB EQ 1).SUBA                                         11400002
         AIF   ('&SYSLIST(2)' EQ '').BACKUP                             11460002
&K       SETA  K'&SYSLIST(2)                                            11520002
&B       SETB  ('&SYSLIST(2)'(1,1) EQ 'B')                              11580002
&S       SETC  '&SYSLIST(2)'(&B+1,&K-&B)                                11640002
         AGO   .SUBB                                                    11700002
.SUBA    ANOP                                                           11760002
         AIF   ('&SYSLIST(&OP,2)' EQ '').BACKUP                         11820002
&K       SETA  K'&SYSLIST(&OP,2)                                        11880002
&B       SETB  ('&SYSLIST(&OP,2)'(1,1) EQ 'B')                          11940002
&S       SETC  '&SYSLIST(&OP,2)'(&B+1,&K-&B)                            12000002
.SUBB    ANOP                                                           12060002
&T       SETA  &S                                                       12120002
.BACKUP  ANOP                                                           12180002
&NRENTS  SETA  &NRENTS+1                                                12240002
&TEMP    SETA  &ISHIFT                                                  12300002
         AIF   (&IBITS NE 1 OR &B NE 0).BIN2                            12360002
         DC    AL.12(&SYSLIST(&OP,1)-&DSECT),XL.4'&TEMP'                12420002
         AGO   .OUT                                                     12480002
.BIN2    AIF   ('&SYSLIST(&OP,2)' NE '').BIN3                           12540002
&B       SETB  1                                                        12600002
.BIN3    ANOP                                                           12660002
         DC    AL.12(&SYSLIST(&OP,1)-&DSECT),XL.4'C'                    12720002
         DC    BL.1'&B',AL.7(&T),AL.4(&IBITS),FL.4'&ISHIFT'             12780002
.OUT     ANOP                                                           12840002
&NDX     SETA  0                                                        12900002
         AIF   (&SUB EQ 0).OUTA                                         12960002
         AIF   (&OP LT N'&SYSLIST).LOOP                                 13020002
.OUTA    ANOP                                                           13080002
         MEND                                                           13140002
         MACRO                                                          13200002
         HEX                                                            13260002
.*                            THIS MACRO FACILITATES GENERATION OF THE  13320002
.*                                 TABLE ENTRIES SPECIFYING HEX TYPE    13380002
.*                                 CONVERSIONS.                         13440002
.*                            &SYSLIST(&OP,1) - NAME OF DATA ITEM TO BE 13500002
.*                                 CONVERTED                            13560002
.*                            &SYSLIST(&OP,2) - # OF SPACES TO SKIP ON  13620002
.*                                 MULTIPLE PRINT OR NBR OF SPACES TO   13680002
.*                                 BACK UP FROM COLUMN FOR START OF     13740002
.*                                 PRINTING. THE LETTER B PRECEEDS THE  13800002
.*                                 NUMBER (B8) IF THE LATTER OPTION IS  13860002
.*                                 DESIRED. OMISSION OF THIS OPERAND    13920002
.*                                 FORCES OPTION 2 WITH BACKUP SPACING  13980002
.*                                 EQUAL TO THE NUMBER OF BYTES SPECI-  14040002
.*                                 FIED BY THE NEXT OPERAND (TWICE THIS 14100002
.*                                 NUMBER IF SUFFIX IS EXPLICITLY OR    14160002
.*                                 IMPLICITLY B).                       14220002
.*                            &SYSLIST(&OP,3) - NUMBER OF BYTES TO      14280002
.*                                 PROCESS. THIS NUMBER IS SUFFIXED     14340002
.*                                 WITH AN L,R, OR B TO STIPULATE       14400002
.*                                 PRINTING OF THE LEFT HALF, RIGHT     14460002
.*                                 HALF, OR BOTH HALVES OF THE BYTE     14520002
.*                                 RESPECTIVELY. OMISSION OF THIS       14580002
.*                                 OPERAND DEFAULTS TO B WITH THE NUM-  14640002
.*                                 BER OF BYTES EQUAL TO THE ITEM LNGTH 14700002
.*                            A NEW ENTRY IS GENERATED ONLY WHEN NECES- 14760002
.*                                 SARY. THIS MACRO MUST BE THE FIRST   14820002
.*                                 MACRO INSTRUCTION ISSUED FOR THE     14880002
.*                                 SUBJECT LINE(S).                     14940002
         GBLC &ITEM(2000),&DSECT                                        15000002
         GBLA &ITEMNBR,&BITS(2000),&SHIFT(2000),&NRENTS                 15060002
         GBLA  &INITIAL                                                 15120002
         GBLB  &DIAGTST,&DIAGSET,&DIAGLIN                               15180002
         LCLB  &B,&SUB                                                  15240002
         LCLA  &IBITS,&NDX,&ISHIFT,&K,&T,&CODE,&BYTESP,&OP              15300002
         LCLC  &S,&LETTER                                               15360002
         AIF   (&DIAGTST EQ 0).NOMSG                                    15420002
         AIF   (&INITIAL EQ 0).NOMSG                                    15480002
         AIF   (&DIAGLIN EQ 1).NOMSG                                    15540002
         MNOTE '**NO LINE ASSOCIATED WITH THIS DATA**'                  15600002
*****THE FOLLOWING GENERATED FOR TEST PURPOSES*****                     15660002
*        LINE                                                           15720002
         LINE                                                           15780002
.NOMSG   ANOP                                                           15840002
         AIF   (K'&SYSLIST(1) EQ K'&SYSLIST(1,1)).LOOP                  15900002
&SUB     SETB  1                                                        15960002
.LOOP    ANOP                                                           16020002
&OP      SETA  &OP+1                                                    16080002
.LOOP1   ANOP                                                           16140002
&NDX     SETA  &NDX+1                                                   16200002
         AIF   ('&ITEM(&NDX)' EQ '&SYSLIST(&OP,1)').FOUND               16260002
         AIF   (&NDX LT &ITEMNBR).LOOP1                                 16320002
         MNOTE '**LOG ITEM NOT DEFINED**'                               16380002
         MEXIT                                                          16440002
.FOUND   ANOP                                                           16500002
&ISHIFT  SETA  &SHIFT(&NDX)                                             16560002
&IBITS   SETA  &BITS(&NDX)                                              16620002
         AIF   (&ISHIFT EQ 0 OR &ISHIFT EQ 4).ALIGN                     16680002
.ERR     MNOTE '**DATA NOT ALLIGNED ON HEX OR BYTE BOUNDARY**'          16740002
         MEXIT                                                          16800002
.ALIGN   ANOP                                                           16860002
&CODE    SETA  1                                                        16920002
         AIF   (&SUB EQ 1).SUBA                                         16980002
&K       SETA  K'&SYSLIST(3)                                            17040002
         AGO   .SUBB                                                    17100002
.SUBA    ANOP                                                           17160002
&K       SETA  K'&SYSLIST(&OP,3)                                        17220002
.SUBB    ANOP                                                           17280002
         AIF   (&IBITS-(&IBITS/4)*4 EQ 0).OK                            17340002
         MNOTE '**BIT LENGTH SPECIFICATION INCONSISTENT WITH CONTROL**' 17400002
         MEXIT                                                          17460002
.OK      AIF   (&SUB EQ 1).SUBC                                         17520002
         AIF   ('&SYSLIST(3)' EQ '').USEDEFN                            17580002
&LETTER  SETC  '&SYSLIST(3)'(&K,1)                                      17640002
&S       SETC  '&SYSLIST(3)'(1,&K-1)                                    17700002
         AGO   .SUBD                                                    17760002
.SUBC    ANOP                                                           17820002
         AIF   ('&SYSLIST(&OP,3)' EQ '').USEDEFN                        17880002
&LETTER  SETC  '&SYSLIST(&OP,3)'(&K,1)                                  17940002
&S       SETC  '&SYSLIST(&OP,3)'(1,&K-1)                                18000002
.SUBD    ANOP                                                           18060002
&BYTESP  SETA  &S                                                       18120002
         AIF   ('&LETTER' EQ 'B').BOTH                                  18180002
         AIF   ('&LETTER' EQ 'L').LEFT                                  18240002
&CODE    SETA  2                                                        18300002
         AGO   .L                                                       18360002
.LEFT    ANOP                                                           18420002
&CODE    SETA  1                                                        18480002
         AGO   .L                                                       18540002
.USEDEFN ANOP                                                           18600002
&BYTESP  SETA  &IBITS/8                                                 18660002
.BOTH    AIF   (&ISHIFT NE 0).ERR                                       18720002
&CODE    SETA  3                                                        18780002
&T       SETA  &BYTESP*2-1                                              18840002
&S       SETC  '&T'                                                     18900002
.OK2     AIF   (&ISHIFT EQ 0).L                                         18960002
&CODE    SETA  2                                                        19020002
.L       ANOP                                                           19080002
&B       SETB  1                                                        19140002
         AIF   (&SUB EQ 1).SUBE                                         19200002
         AIF   ('&SYSLIST(2)' EQ '').BACKUP                             19260002
&K       SETA  K'&SYSLIST(2)                                            19320002
&B       SETB  ('&SYSLIST(2)'(1,1) EQ 'B')                              19380002
&S       SETC  '&SYSLIST(2)'(&B+1,&K-&B)                                19440002
         AGO   .SUBF                                                    19500002
.SUBE    ANOP                                                           19560002
         AIF   ('&SYSLIST(&OP,2)' EQ '').BACKUP                         19620002
&K       SETA  K'&SYSLIST(&OP,2)                                        19680002
&B       SETB  ('&SYSLIST(&OP,2)'(1,1) EQ 'B')                          19740002
&S       SETC  '&SYSLIST(&OP,2)'(&B+1,&K-&B)                            19800002
.SUBF    ANOP                                                           19860002
.BACKUP  ANOP                                                           19920002
&NRENTS  SETA  &NRENTS+1                                                19980002
         AIF   (&BYTESP GT 0 AND &BYTESP LT 16).SUB0                    20040002
         MNOTE '**NO. OF BYTES OUTSIDE RANGE OF 1-15**'                 20100002
         MEXIT                                                          20160002
.SUB0    AIF   (&SUB EQ 1).SUBG                                         20220002
         DC    AL.12(&SYSLIST(1)-&DSECT),XL.4'A'                        20280002
         AGO   .SUBH                                                    20340002
.SUBG    ANOP                                                           20400002
         DC    AL.12(&SYSLIST(&OP,1)-&DSECT),XL.4'A'                    20460002
.SUBH    ANOP                                                           20520002
         DC    BL.1'&B',FL.7'&S',AL.4(&BYTESP),FL.4'&CODE'              20580002
.OUT     ANOP                                                           20640002
&NDX     SETA  0                                                        20700002
         AIF   (&SUB EQ 0).OUTA                                         20760002
         AIF   (&OP LT N'&SYSLIST).LOOP                                 20820002
.OUTA    ANOP                                                           20880002
         MEND                                                           20940002
         MACRO                                                          21000002
         LSTART                                                         21060002
.*                            THIS MACRO IS ISSUED WHEN THE LABEL AREA  21120002
.*                                 OF THE TABLE IS TO BEGIN.            21180002
         GBLA  &LABELNR                                                 21240002
         GBLC  &LBL(100)                                                21300002
         GBLC &LABELS(2000)                                             21360002
         GBLA  &LBLCTR(100)                                             21420002
         GBLB  &DIAGTST,&DIAGSET,&DIAGLIN                               21480002
         LCLA  &NDX,&CTR                                                21540002
         AIF   (&DIAGTST EQ 0).NODIAG                                   21600002
         AIF   (&DIAGSET EQ 0).NODIAG                                   21660002
         MNOTE '**NO LABEL ASSOCIATED WITH LAST SET**'                  21720002
***** THE FOLLOWING GENERATED FOR TEST PURPOSES *****                   21780002
*        LABEL '%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'       21840002
               LABEL '%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%' 21900002
.NODIAG  ANOP                                                           21960002
         LINEND                                                         22020002
&CTR     SETA  1                                                        22080002
.LOOP    ANOP                                                           22140002
&NDX     SETA  &NDX+1                                                   22200002
         AIF   (&LBLCTR(&CTR) NE &NDX).NOLBL                            22260002
&LBL(&CTR) DC  C'&LABELS(&NDX)'                                         22320002
&CTR     SETA  &CTR+1                                                   22380002
         AGO   .LOOPCTL                                                 22440002
.NOLBL   ANOP                                                           22500002
         DC    C'&LABELS(&NDX)'                                         22560002
.LOOPCTL AIF   (&NDX LT &LABELNR).LOOP                                  22620002
         MEND                                                           22680002
         MACRO                                                          22740002
&NAME    LABEL &LABEL1,&LABEL2,&LABEL3,&LABEL4,&LABEL5,&LABEL6,        C22800002
               &LABEL7,&LABEL8                                          22860002
.*                                 THIS MACRO ALLOWS LABELS TO          22920002
.*                                 BE SPECIFIED FOR A GIVEN LINE. THE   22980002
.*                                 LABELS SHOULD BE ENCLOSED IN QUOTA-  23040002
.*                                 TION MARKS. THE COLUMN AND LINE END  23100002
.*                                 CONTROLS WILL BE INSERTED BY THE     23160002
.*                                 MACRO. OMITTED OPERANDS MEAN NO      23220002
.*                                 LABEL REQUIRED FOR RESPECTIVE        23280002
.*                                 COLUMN.                              23340002
         GBLC &LABELS(2000)                                             23400002
         GBLC  &LBL(100)                                                23460002
         GBLA  &LBLCTR(100)                                             23520002
         GBLA  &LABELNR                                                 23580002
         GBLA  &NRENTS,&LPTR,&INITIAL                                   23640002
         GBLB  &DIAGTST,&DIAGSET,&DIAGLIN                               23700002
         LCLC  &MARGIN,&TACK                                            23760002
         LCLC  &TEXT                                                    23820002
         LCLA  &OP,&K,&START,&NRCHAR,&REMAIN                            23880002
         AIF   (&INITIAL EQ 0).DIAGCLR                                  23940002
         AIF   (&DIAGTST EQ 0).DIAGCLR                                  24000002
         AIF   (&DIAGLIN EQ 1).DIAGCLR                                  24060002
         MNOTE '**NO LINE ASSOCIATED WITH PREVIOUS LABEL**'             24120002
***** THE FOLLOWING GENERATED FOR TEST PURPOSES *****                   24180002
*        LINE                                                           24240002
         LINE                                                           24300002
.DIAGCLR ANOP                                                           24360002
&DIAGSET SETB  0                                                        24420002
&DIAGLIN SETB  0                                                        24480002
&MARGIN  SETC  '*'                                                      24540002
         AIF   ('&NAME' EQ '').LOOPOUT                                  24600002
&LPTR    SETA  &LPTR+1                                                  24660002
&LBL(&LPTR) SETC '&NAME'                                                24720002
&LBLCTR(&LPTR) SETA &LABELNR+1                                          24780002
.LOOPOUT ANOP                                                           24840002
&OP      SETA  &OP+1                                                    24900002
&K       SETA  K'&SYSLIST(&OP)                                          24960002
         AIF (&K GE 2).NORM                                             25020002
&K       SETA  2                                                        25080002
.NORM    ANOP                                                           25140002
&START   SETA  2                                                        25200002
         AIF (&OP LT N'&SYSLIST).NOTLAST                                25260002
&MARGIN  SETC  '$'                                                      25320002
.NOTLAST ANOP                                                           25380002
&NRCHAR  SETA  8                                                        25440002
&TACK    SETC  ''                                                       25500002
.LOOPIN  ANOP                                                           25560002
&REMAIN  SETA  &K-&START                                                25620002
         AIF (&REMAIN GE 8).MORE                                        25680002
&TACK    SETC  '&MARGIN'                                                25740002
&NRCHAR  SETA  &REMAIN                                                  25800002
.MORE    ANOP                                                           25860002
&TEXT    SETC  ''                                                       25920002
         AIF (&REMAIN EQ 0).ENDTEXT                                     25980002
&TEXT    SETC  '&SYSLIST(&OP)'(&START,&NRCHAR)                          26040002
.ENDTEXT ANOP                                                           26100002
&LABELNR SETA  &LABELNR+1                                               26160002
&LABELS(&LABELNR) SETC '&TEXT'.'&TACK'                                  26220002
&START   SETA  &START+8                                                 26280002
         AIF ('&TACK' EQ '').LOOPIN                                     26340002
         AIF ('&TACK' EQ '*').LOOPOUT                                   26400002
         MEND                                                           26460002
         MACRO                                                          26520002
&NAME    ROUTINE &LOGITEM,&RNAME                                        26580002
         GBLA  &NRENTS                                                  26640002
         GBLC  &DSECT,&CSECT                                            26700002
         GBLA  &INITIAL                                                 26760002
         GBLB  &DIAGTST,&DIAGSET,&DIAGLIN                               26820002
         AIF   (&DIAGTST EQ 0).NOMSG                                    26880002
         AIF   (&INITIAL EQ 0).NOMSG                                    26940002
         AIF   (&DIAGLIN EQ 1).NOMSG                                    27000002
         MNOTE '**NO LINE ASSOCIATED WITH THIS ROUTINE**'               27060002
*****THE FOLLOWING GENERATED FOR TEST PURPOSES*****                     27120002
*        LINE                                                           27180002
         LINE                                                           27240002
.NOMSG   ANOP                                                           27300002
&NAME    DC    AL.12(&LOGITEM-&DSECT),XL.4'D'                           27360002
         DC    AL2(&RNAME-&CSECT)                                       27420002
&NRENTS  SETA  &NRENTS+1                                                27480002
         MEND                                                           27540002
         MACRO                                                          27600002
&NAME    LINE  &DATA,&LABEL,&SKIP=                                      27660002
.*                            THIS MACRO ESTABLISHES THE MARGINS OR     27720002
.*                                 COLUMN SETTINGS FOR EACH LINE. IT    27780002
.*                                 GENERATES NECESSARY CARRIAGE CONTROL 27840002
.*                                 ENTRIES. LASTLY IT DETERMINES THE    27900002
.*                                 NUMBER OF ENTRIES ASSOCIATED WITH    27960002
.*                                 THE PREVIOUS LINE AND STORES THAT #  28020002
.*                                 INTO THE APPROPRIATE BYTE.           28080002
.*                            &DATA(1) - CHARACTER POSITION TO BEGIN    28140002
.*                                 DATA.                                28200002
.*                            &DATA(2) - # OF SPACES BETWEEN SUCCESSIVE 28260002
.*                                 DATA COLUMN STARTING CHARACTERS.     28320002
.*                            &LABEL(1) - CHAR. POS. TO BEGIN LABELS.   28380002
.*                            &LABEL(2) - # SPACES BETWEEN LINE'S LABEL 28440002
.*                                 STARTING CHARACTERS.                 28500002
.*                            &SKIP= - # OF LINES TO ADVANCE CARRIAGE   28560002
.*                                 TO BEGIN NEXT PRINTED LINE.          28620002
.*                            NEW ENTRIES ARE GENERATED ONLY WHEN       28680002
.*                                 NECESSARY. OMISSION OF ITEMS MEANS   28740002
.*                                 THEY HAVE NOT CHANGED SINCE PREVIOUS 28800002
.*                                 SETTINGS. A LINE MACRO IS REQUIRED   28860002
.*                                 FOR EACH PRINTED LINE. IF NO SETTING 28920002
.*                                 CHANGES ARE REQUIRED ALL OPERANDS    28980002
.*                                 ARE OMITTED IN WHICH CASE ONLY THE   29040002
.*                                 # OF ENTRIES FOR THE PREVIOUS LINE   29100002
.*                                 IS COMPUTED. THIS MACRO MUST BE THE  29160002
.*                                 FIRST MACRO INSTRUCTION ISSUED FOR   29220002
.*                                 THE SUBJECT LINE                     29280002
         GBLA  &DB,&DT,&LB,&LT,&NRENTS                                  29340002
         GBLA  &LASTCC,&INITIAL                                         29400002
         GBLC  &NRENTSX                                                 29460002
         GBLC  &CARRCON                                                 29520002
         GBLB  &TEST                                                    29580002
         GBLB  &DIAGTST,&DIAGSET,&DIAGLIN                               29640002
         LCLA  &S                                                       29700002
         AIF   (&INITIAL EQ 0 OR &DIAGTST EQ 0).DIAGSET                 29760002
         AIF   (&DIAGSET EQ 0).DIAGSET                                  29820002
         MNOTE '**NO LABEL ASSOCIATED WITH LAST SET**'                  29880002
***** THE FOLLOWING GENERATED FOR TEST PURPOSES *****                   29940002
*        LABEL '%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'       30000002
               LABEL '%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%' 30060002
.DIAGSET ANOP                                                           30120002
&DIAGSET SETB  1                                                        30180002
&DIAGLIN SETB  1                                                        30240002
&NAME    DS    0C                                                       30300002
         AIF   (&INITIAL EQ 0).FIRSTLN                                  30360002
         LINEND                                                         30420002
         AGO   .NTFIRST                                                 30480002
.FIRSTLN ANOP                                                           30540002
&NRENTSX SETC  'N&SYSNDX'                                               30600002
&INITIAL SETA  1                                                        30660002
N&SYSNDX EQU   *                                                        30720002
.NTFIRST ANOP                                                           30780002
         DC    AL1(0)                                                   30840002
         AIF   ('&DATA(1)' EQ '').CKDTABS                               30900002
         AIF   (&DATA(1) EQ &DB).CKDTABS                                30960002
&DB      SETA  &DATA(1)                                                 31020002
         AGO   .AA                                                      31080002
.CKDTABS AIF   ('&DATA(2)' EQ '').NCDATA                                31140002
         AIF   (&DATA(2) EQ &DT).NCDATA                                 31200002
         AGO   .CC                                                      31260002
.AA      AIF   ('&DATA(2)' EQ '').BB                                    31320002
         AIF   (&DATA(2) EQ &DT).BB                                     31380002
.CC      ANOP                                                           31440002
&DT      SETA  &DATA(2)                                                 31500002
.BB      DC    XL2'FFFE'                                                31560002
         DC    FL1'&DB'                                                 31620002
         DC    FL1'&DT'                                                 31680002
&NRENTS  SETA  &NRENTS+1                                                31740002
.NCDATA  ANOP                                                           31800002
         AIF   ('&LABEL(1)' EQ '').CKLTABS                              31860002
         AIF   (&LABEL(1) EQ &LB).CKLTABS                               31920002
&LB      SETA  &LABEL(1)                                                31980002
         AGO   .AAA                                                     32040002
.CKLTABS AIF   ('&LABEL(2)' EQ '').NCLABEL                              32100002
         AIF   (&LABEL(2) EQ &LT).NCLABEL                               32160002
         AGO   .CCC                                                     32220002
.AAA     AIF   ('&LABEL(2)' EQ '').BBB                                  32280002
         AIF   (&LABEL(2) EQ &LT).BBB                                   32340002
.CCC     ANOP                                                           32400002
&LT      SETA  &LABEL(2)                                                32460002
.BBB     DC    XL2'FFFF'                                                32520002
         DC    FL1'&LB'                                                 32580002
         DC    FL1'&LT'                                                 32640002
&NRENTS  SETA  &NRENTS+1                                                32700002
.NCLABEL ANOP                                                           32760002
         AIF   ('&SKIP' NE '').CONT                                     32820002
         AIF   (&TEST EQ 0).NOCHANG                                     32880002
         AGO   .DEFALTA                                                 32940002
.CONT    ANOP                                                           33000002
         AIF   (&TEST EQ 0).AB                                          33060002
         AIF   ('&SKIP' EQ 'E').AB                                      33120002
&S       SETA  &SKIP                                                    33180002
.DEFAULT ANOP                                                           33240002
         AIF   (&SKIP EQ &LASTCC).DEFALTA                               33300002
         ORG   &CARRCON+3                                               33360002
         DC    AL.3(0),AL.2(&S),AL.3(1)                                 33420002
         ORG                                                            33480002
&LASTCC  SETA  &S                                                       33540002
.DEFALTA ANOP                                                           33600002
&TEST    SETB  0                                                        33660002
         AGO   .DD                                                      33720002
.AB      AIF   ('&SKIP' NE 'E').ABB                                     33780002
A&SYSNDX DC    X'FFFB8B00'              EJECT                           33840002
         AGO   .ABC                                                     33900002
.ABB     AIF   (&SKIP EQ &LASTCC).NOCHANG                               33960002
A&SYSNDX DC    XL2'FFFB'                                                34020002
         DC    AL.3(0),AL.2(&SKIP),AL.3(1)                              34080002
         DC    AL.3(0),AL.2(&SKIP),AL.3(1)                              34140002
&LASTCC  SETA  &SKIP                                                    34200002
&TEST    SETB  1                                                        34260002
.ABC     ANOP                                                           34320002
&CARRCON SETC  'A&SYSNDX'                                               34380002
&NRENTS  SETA  &NRENTS+1                                                34440002
.DD      ANOP                                                           34500002
.NOCHANG ANOP                                                           34560002
         MEND                                                           34620002
         EJECT                                                          34680002
         MACRO                                                          34740002
         SUM   &LOGITEM,&MASK                                           34800002
.*                            THIS MACRO GENERATES A NORMAL EDIT ENTRY  34860002
.*                                 FOR PROCESSING BY THE SUMMARY MODULE 34920002
.*                            &LOGITEM - NAME OF DATA ITEM TO BE SUMMED 34980002
.*                            &MASK - BYTE MASK FOR BITS TO BE TESTED.  35040002
.*                                 THIS OPERAND SHOULD BE OMITTED FOR   35100002
.*                                 SINGLE BIT ITEMS IN WHICH CASE THE   35160002
.*                                 MASK WILL BE SET ACCORDING TO THE    35220002
.*                                 OFF BYTE BIT DISPLACEMENT OF THE     35280002
.*                                 ITEM AS DEFINED BY THE MACRO 'DSGEN' 35340002
         GBLA  &COUNTR,&ITEMNBR,&BITS(2000),&SHIFT(2000)                35400002
         GBLC  &ITEM(2000),&DSECT                                       35460002
         LCLA  &IBITS,&NDX,&ISHIFT,&M,&BITNBR                           35520002
.LOOP    ANOP                                                           35580002
&NDX     SETA  &NDX+1                                                   35640002
         AIF   ('&ITEM(&NDX)' EQ '&LOGITEM').FOUND                      35700002
         AIF   (&NDX LT &ITEMNBR).LOOP                                  35760002
         MNOTE *,'LOGITEM NOT FOUND'                                    35820002
         MEXIT                                                          35880002
.FOUND   ANOP                                                           35940002
         DC    AL1(0)                                                   36000002
&ISHIFT  SETA  &SHIFT(&NDX)                                             36060002
&IBITS   SETA  &BITS(&NDX)                                              36120002
         AIF   ('&MASK' EQ '').FORM                                     36180002
         DC    B'&MASK'                                                 36240002
         AGO   .ITEM                                                    36300002
.FORM    ANOP                                                           36360002
&BITNBR  SETA  &ISHIFT-7                                                36420002
&BITNBR  SETA  0-&BITNBR                                                36480002
&M       SETA  1                                                        36540002
.LOOP2   ANOP                                                           36600002
         AIF   (&BITNBR EQ 0).GOTIT                                     36660002
&M       SETA  &M*2                                                     36720002
&BITNBR  SETA  &BITNBR-1                                                36780002
         AGO   .LOOP2                                                   36840002
.GOTIT   ANOP                                                           36900002
         DC    AL1(&M)                                                  36960002
.ITEM    DC    AL2(&LOGITEM-&DSECT)                                     37020002
         DC    AL2(&COUNTR)                                             37080002
&COUNTR  SETA  &COUNTR+1                                                37140002
         MEND                                                           37200002
         EJECT                                                          37260002
         MACRO                                                          37320002
         SPECIAL &ROUTINE,&PARAM,&SPACE=                                37380002
.*                            THIS MACRO GENERATES A SPECIAL ROUTINE    37440002
.*                                 ENTRY TO BE PROCESSED BY THE SUM. M. 37500002
.*                            &ROUTINE - SYMBOL ON SPECIAL ROUTINE EWT. 37560002
.*                            &PARAM - AN 8 BIT BINARY REPRESENTATION   37620002
.*                                 TO OCCUPY THE 'MASK' FIELD BUT TO BE 37680002
.*                                 INTERPRETED AS AN ARGUMENT OF THE    37740002
.*                                 SPECIAL ROUTINE.                     37800002
.*                            &SPACE - THE NUMBER OF 2BYTE COUNTERS TO  37860002
.*                                 ALLOCATE FOR REQUIRED PROCESSING.    37920002
         GBLC  &CSECT                                                   37980002
         GBLA  &COUNTR                                                  38040002
         LCLA  &ADD                                                     38100002
         DC    AL1(128)                                                 38160002
         DC    BL.8'&PARAM'                                             38220002
         DC    AL2(&ROUTINE-&CSECT)                                     38280002
         DC    AL2(&COUNTR)                                             38340002
&ADD     SETA  1                                                        38400002
         AIF   ('&SPACE' EQ '').NORM                                    38460002
&ADD     SETA  &SPACE                                                   38520002
.NORM    ANOP                                                           38580002
&COUNTR  SETA  &COUNTR+&ADD                                             38640002
         MEND                                                           38700002
         EJECT                                                          38760002
         GBLC  &DSECT                                                   38820002
         GBLC  &CSECT                                                   38880002
&CSECT   SETC  'IFCS0165'                                               38940002
&DSECT   SETC  'INDEPEND'                                               39000002
IFCS0165 CSECT                                                          39060002
         USING *,R9                                                     39120002
INDEPEND DSECT                                                          39180002
         DS    0F                                                       39240002
         DSGEN (XKEY,16),(XSWS8,9),(XSWS9,1),(XSWS10,1),(XSWS11,1),    C39300002
               (XSWS12,1),(XSWS13,1),(XSWS14,1),(XSWS15,1)              39360002
         DSGEN (XDUM1,32)                                               39420002
         DSGEN (XDATE,32)                                               39480002
         DSGEN (XTIME,32)                                               39540002
         DSGEN (XDUM2,8),(XSER,24)                                      39600002
         DSGEN (XCPUMOD,16),(XDUM3,16)                                  39660002
         DSGEN (XPGMID,64)                                              39720002
         DSGEN (XJOBID,64)                                              39780002
         DSGEN (XMCKPSW,64)                                             39840002
         DSGEN (DUM1,32)                                          P0415 39900002
         DSGEN (DUM2,16),(EXTDLOG,16)                             P0415 39960002
M165     DS    212F                                                     40020002
         DSGEN (A1LB,32)                                                40080002
         DSGEN (A1LC,32)                                                40140002
         DSGEN (A1LD,32)                                                40200002
         DSGEN (A1LE,32)                                                40260002
         DSGEN (A1LF,32)                                                40320002
         DSGEN (A1LG,32)                                                40380002
         DSGEN (A1LH,32)                                                40440002
         DSGEN (A1LJ,32)                                                40500002
A1LK     DSGEN (A1LK00,1),(A1LK01,1),(DUM45,1),(A1LK03,1),(A1LK04,1),  C40560002
               (DUM46,3),(A1LK08,1),(DUM47,1),(A1LK10,1),(DUM48,1),    C40600002
               (A1LK12,1),(DUM49,3),(A1LK16,1),(A1LK17,1),(A1LK18,1),  C40640002
               (DM49,1),(A1LK20,1),(DUM50,3),(A1LK24,1),               C40680002
               (DUM51,1),(A1LK26,1),(DUM52,5)                           40740002
A1LL     DSGEN (DUM53,11),(A1LL43,1),(DUM54,1),(A1LL45,1),             C40800002
               (DUM55,4),(A1LL50,1),(DM55,13)                           40860002
         DSGEN (A2LB,32)                                                40920002
         DSGEN (A2LC,32)                                                40980002
         DSGEN (A2LD,32)                                                41040002
         DSGEN (A2LE,32)                                                41100002
         DSGEN (A2LF,32)                                                41160002
         DSGEN (A2LG,32)                                                41220002
         DSGEN (A2LH,32)                                                41280002
         DSGEN (A2LJ,32)                                                41340002
A2LK     DSGEN (DUM56,1),(A2LK01,1),(A2LK02,1),(A2LK03,1),             C41400002
               (A2LK04,1),(A2LK05,1),(DUM57,2),(A2LK08,1),             C41460002
               (A2LK09,1),(DUM58,1),(A2LK11,1),(A2LK12,1),             C41520002
               (A2LK13,1),(DUM59,4),(A2LK18,1),(A2LK19,1),             C41580002
               (A2LK20,1),(A2LK21,1),(DUM60,2),(A2LK24,1),             C41640002
               (A2LK25,1),(A2LK26,1),(A2LK27,1),(DUM61,4)               41700002
A2LL     DSGEN (DUM62,2),(A2LL34,1),(DUM63,6),(A2LL41,1),              C41760002
               (DUM64,1),(A2LL43,1),(A2LL44,1),(A2LL45,1),             C41820002
               (DUM65,18)                                               41880002
         DSGEN (A3LB,32)                                                41940002
         DSGEN (A3LC,32)                                                42000002
         DSGEN (A3LD,32)                                                42060002
         DSGEN (A3LE,32)                                                42120002
         DSGEN (A3LF,32)                                                42180002
         DSGEN (A3LG,32)                                                42240002
         DSGEN (A3LH,32)                                                42300002
         DSGEN (A3LJ,32)                                                42360002
         DSGEN (A3LK,32)                                                42420002
         DSGEN (A3LL,32)                                                42480002
         DSGEN (A4LB,32)                                                42540002
         DSGEN (A4LC,32)                                                42600002
         DSGEN (A4LD,32)                                                42660002
         DSGEN (A4LE,32)                                                42720002
         DSGEN (A4LF,32)                                                42780002
         DSGEN (A4LG,32)                                                42840002
         DSGEN (A4LH,32)                                                42900002
         DSGEN (A4LJ,32)                                                42960002
A4LK     DSGEN (DUM66,25),(A4LK25,1),(A4LK26,1),(A4LK27,1),            C43020002
               (A4LK28,1),(DUM67,3)                                     43080002
         DSGEN (A4LL,32)                                                43140002
         DSGEN (A5LB,32)                                                43200002
         DSGEN (A5LC,32)                                                43260002
         DSGEN (A5LD,32)                                                43320002
         DSGEN (A5LE,32)                                                43380002
         DSGEN (A5LF,32)                                                43440002
         DSGEN (A5LG,32)                                                43500002
         DSGEN (A5LH,32)                                                43560002
         DSGEN (A5LJ,32)                                                43620002
A5LK     DSGEN (A5LK00,1),(A5LK01,1),(A5LK02,1),(A5LK03,1),            C43680002
               (A5LK04,1),(A5LK05,1),(DUM68,2),(A5LK08,1),             C43740002
               (A5LK09,1),(A5LK10,1),(A5LK11,1),(A5LK12,1),            C43800002
               (A5LK13,1),(DUM69,2),(A5LK16,1),(DUM70,1),              C43860002
               (A5LK18,1),(A5LK19,1),(A5LK20,1),(A5LK21,1),            C43920002
               (DUM71,2),(A5LK24,1),(A5LK25,1),                        C43980002
               (A5LK26,1),(A5LK27,1),(A5LK28,1),(DUM72,3)               44040002
A5LL     DSGEN (A5LL32,1),(A5LL33,1),(A5LL34,1),(A5LL35,1),            C44100002
               (A5LL36,1),(A5LL37,1),(DUM73,2),(A5LL40,1),             C44160002
               (A5LL41,1),(A5LL42,1),(A5LL43,1),(A5LL44,1),            C44220002
               (A5LL45,1),(DUM74,2),(A5LL48,1),(A5LL49,1),             C44280002
               (A5LL50,1),(A5LL51,1),(A5LL52,1),(A5LL53,1),            C44340002
               (DUM75,2),(A5LL56,1),(DUM76,7)                           44400002
         DSGEN (A6LB,32)                                                44460002
         DSGEN (A6LC,32)                                                44520002
         DSGEN (A6LD,32)                                                44580002
         DSGEN (A6LE,32)                                                44640002
         DSGEN (A6LF,32)                                                44700002
         DSGEN (A6LG,32)                                                44760002
         DSGEN (A6LH,32)                                                44820002
         DSGEN (A6LJ,32)                                                44880002
         DSGEN (A6LK,32)                                                44940002
A6LL     DSGEN (A6LL32,1),(A6LL33,1),(A6LL34,1),(A6LL35,1),            C45000002
               (DUM77,4),(A6LL40,1),(A6LL41,1),(A6LL42,1),             C45060002
               (DUM78,1),(A6LL44,1),(A6LL45,1),(DUM79,3),(A6LL49,1),   C45120002
               (A6LL50,1),(A6LL51,1),(DUM80,1),(A6LL53,1),             C45180002
               (DUM81,2),(A6LL56,1),(A6LL57,1),(DUM82,6)                45240002
         DSGEN (A7LB,32)                                                45300002
         DSGEN (A7LC,32)                                                45360002
         DSGEN (A7LD,32)                                                45420002
         DSGEN (A7LE,32)                                                45480002
         DSGEN (A7LF,32)                                                45540002
         DSGEN (A7LG,32)                                                45600002
         DSGEN (A7LH,32)                                                45660002
         DSGEN (A7LJ,32)                                                45720002
         DSGEN (A7LK,32)                                                45780002
         DSGEN (A7LL,32)                                                45840002
         DSGEN (B0LB,32)                                                45900002
         DSGEN (B0LC,32)                                                45960002
         DSGEN (B0LD,32)                                                46020002
         DSGEN (B0LE,32)                                                46080002
         DSGEN (B0LF,32)                                                46140002
         DSGEN (B0LG,32)                                                46200002
         DSGEN (B0LH,32)                                                46260002
         DSGEN (B0LJ,32)                                                46320002
         DSGEN (B0LK,32)                                                46380002
         DSGEN (B0LL,32)                                                46440002
         DSGEN (B1LB,32)                                                46500002
         DSGEN (B1LC,32)                                                46560002
         DSGEN (B1LD,32)                                                46620002
         DSGEN (B1LE,32)                                                46680002
         DSGEN (B1LF,32)                                                46740002
         DSGEN (B1LG,32)                                                46800002
         DSGEN (B1LH,32)                                                46860002
         DSGEN (B1LJ,32)                                                46920002
         DSGEN (DM82,9),(B1LK09,1),(B1LK10,1),(B1LK11,1),(DM83,20)      46980002
         DSGEN (B1LL,32)                                                47040002
         DSGEN (B2LB,32)                                                47100002
         DSGEN (B2LC,32)                                                47160002
         DSGEN (B2LD,32)                                                47220002
         DSGEN (B2LE,32)                                                47280002
         DSGEN (B2LF,32)                                                47340002
         DSGEN (B2LG,32)                                                47400002
         DSGEN (B2LH,32)                                                47460002
         DSGEN (B2LJ,32)                                                47520002
         DSGEN (B2LK,32)                                                47580002
         DSGEN (B2LL,32)                                                47640002
         DSGEN (B3LB,32)                                                47700002
         DSGEN (B3LC,32)                                                47760002
         DSGEN (B3LD,32)                                                47820002
         DSGEN (B3LE,32)                                                47880002
         DSGEN (B3LF,32)                                                47940002
         DSGEN (B3LG,32)                                                48000002
         DSGEN (B3LH,32)                                                48060002
         DSGEN (B3LJ,32)                                                48120002
B3LK     DSGEN (B3LK00,1),(B3LK01,1),(B3LK02,1),(B3LK03,1),            C48180002
               (B3LK04,1),(B3LK05,1),(DUM83,2),(B3LK08,1),             C48240002
               (B3LK09,1),(B3LK10,1),(B3LK11,1),(DUM84,20)              48300002
         DSGEN (B3LL,32)                                                48360002
         DSGEN (B4LB,32)                                                48420002
         DSGEN (B4LC,32)                                                48480002
         DSGEN (B4LD,32)                                                48540002
         DSGEN (B4LE,32)                                                48600002
         DSGEN (B4LF,32)                                                48660002
         DSGEN (B4LG,32)                                                48720002
         DSGEN (B4LH,32)                                                48780002
         DSGEN (B4LJ,32)                                                48840002
         DSGEN (B4LK,32)                                                48900002
         DSGEN (B4LL,32)                                                48960002
         DSGEN (B5LB,32)                                                49020002
         DSGEN (B5LC,32)                                                49080002
         DSGEN (B5LD,32)                                                49140002
         DSGEN (B5LE,32)                                                49200002
         DSGEN (B5LF,32)                                                49260002
         DSGEN (B5LG,32)                                                49320002
         DSGEN (B5LH,32)                                                49380002
         DSGEN (B5LJ,32)                                                49440002
B5LK     DSGEN (DUM85,12),(B5LK12,1),(B5LK13,1),(DUM86,18)              49500002
         DSGEN (B5LL,32)                                                49560002
         DSGEN (B6LB,32)                                                49620002
         DSGEN (B6LC,32)                                                49680002
         DSGEN (B6LD,32)                                                49740002
         DSGEN (B6LE,32)                                                49800002
         DSGEN (B6LF,32)                                                49860002
         DSGEN (B6LG,32)                                                49920002
         DSGEN (B6LH,32)                                                49980002
         DSGEN (B6LJ,32)                                                50040002
         DSGEN (DUM91,13),(B6LK13,1),(DUM92,4),(B6LK18,1),(B6LK19,1),  C50100002
               (B6LK20,1),(DUM93,11)                           @YA07735 50130002
         DSGEN (B6LL,32)                                                50160002
         DSGEN (COLB,32)                                                50220002
         DSGEN (COLC,32)                                                50280002
         DSGEN (COLD,32)                                                50340002
         DSGEN (COLE,32)                                                50400002
         DSGEN (COLF,32)                                                50460002
         DSGEN (COLG,32)                                                50520002
         DSGEN (COLH,32)                                                50580002
         DSGEN (COLJ,32)                                                50640002
C0LK     DSGEN (C0LK00,1),(C0LK01,1),(C0LK02,1),(C0LK03,1),            C50700002
               (C0LK04,1),(C0LK05,1),(DUMC001,2),(C0LK08,1),(C0LK09,1),*50760002
               (DUMC002,19),(C0LK29,1),(DUMC003,2)                      50820002
C0LL    DSGEN  (C0LL32,1),(C0LL33,1),(C0LL34,1),(C0LL35,1),            C50880002
               (C0LL36,1),(DUMC004,2),(C0LL41,1),(DUMC005,24)           50940002
         DSGEN (C1LB,32)                                                51000002
         DSGEN (C1LC,32)                                                51060002
         DSGEN (C1LD,32)                                                51120002
         DSGEN (C1LE,32)                                                51180002
         DSGEN (C1LF,32)                                                51240002
         DSGEN (C1LG,32)                                                51300002
         DSGEN (C1LH,32)                                                51360002
         DSGEN (C1LJ,32)                                                51420002
C1LK     DSGEN (DUMC100,9),(C1LK09,1),(C1LK10,1),(C1LK11,1),           C51480002
               (C1LK12,1),(DUMC101,7),(C1LK20,1),(C1LK21,1),           C51540002
               (DUMC102,2),(C1LK24,1),(C1LK25,1),(DUMC103,6)            51600002
C1LL     DSGEN (DUMC104,9),(C1LL41,1),(C1LL42,1),(C1LL43,1),           C51660002
               (C1LL44,1),(C1LL45,1),(DUMC105,6),(C1LL52,1),           C51720002
               (C1LL53,1),(DUMC106,2),(C1LL56,1),(C1LL57,1),(DUMC107,6) 51780002
         DSGEN (C2LB,32)                                                51840002
         DSGEN (C2LC,32)                                                51900002
         DSGEN (C2LD,32)                                                51960002
         DSGEN (C2LE,32)                                                52020002
         DSGEN (C2LF,32)                                                52080002
         DSGEN (C2LG,32)                                                52140002
         DSGEN (C2LH,32)                                                52200002
         DSGEN (C2LJ,32)                                                52260002
         DSGEN (C2LK,32)                                                52320002
         DSGEN (C2LL,32)                                                52380002
         DSGEN (C3LB,32)                                                52440002
         DSGEN (C3LC,32)                                                52500002
         DSGEN (C3LD,32)                                                52560002
         DSGEN (C3LE,32)                                                52620002
         DSGEN (C3LF,32)                                                52680002
         DSGEN (C3LG,32)                                                52740002
         DSGEN (C3LH,32)                                                52800002
         DSGEN (C3LJ,32)                                                52860002
         DSGEN (C3LK,32)                                                52920002
         DSGEN (C3LL,32)                                                52980002
         DSGEN (C4LB,32)                                                53040002
         DSGEN (C4LC,32)                                                53100002
         DSGEN (C4LD,32)                                                53160002
         DSGEN (C4LE,32)                                                53220002
         DSGEN (C4LF,32)                                                53280002
         DSGEN (C4LG,32)                                                53340002
         DSGEN (C4LH,32)                                                53400002
         DSGEN (C4LJ,32)                                                53460002
         DSGEN (C4LK,32)                                                53520002
         DSGEN (C4LL,32)                                                53580002
         DSGEN (C5LB,32)                                                53640002
         DSGEN (C5LC,32)                                                53700002
         DSGEN (C5LD,32)                                                53760002
         DSGEN (C5LE,32)                                                53820002
         DSGEN (C5LF,32)                                                53880002
         DSGEN (C5LG,32)                                                53940002
         DSGEN (C5LH,32)                                                54000002
         DSGEN (C5LJ,32)                                                54060002
         DSGEN (C5LK,32)                                                54120002
         DSGEN (C5LL,32)                                                54180002
         DSGEN (C6LB,32)                                                54240002
         DSGEN (C6LC,32)                                                54300002
         DSGEN (C6LD,32)                                                54360002
         DSGEN (C6LE,32)                                                54420002
         DSGEN (C6LF,32)                                                54480002
         DSGEN (C6LG,32)                                                54540002
         DSGEN (C6LH,32)                                                54600002
         DSGEN (C6LJ,32)                                                54660002
         DSGEN (C6LK,32)                                                54720002
         DSGEN (C6LL,32)                                                54780002
IFCS0165 CSECT                                                          54840002
         USING INDEPEND,R2                                              54900002
         DC    A(ENTRIES)                                               54960002
         DC    A(PEDIT)                                                 55020002
REG8     DC    F'0'                                                     55080002
SCSIZE   DC    H'156'                                          @YA07735 55140002
R0       EQU   0                                                        55200002
R1       EQU   1                                                        55260002
R2       EQU   2                                                        55320002
R3       EQU   3                                                        55380002
R4       EQU   4                                                        55440002
R5       EQU   5                                                        55500002
R6       EQU   6                                                        55560002
R7       EQU   7                                                        55620002
R8       EQU   8                                                        55680002
R9       EQU   9                                                        55740002
R10      EQU   10                                                       55800002
R11      EQU   11                                                       55860002
R12      EQU   12                                                       55920002
R13      EQU   13                                                       55980002
R14      EQU   14                                                       56040002
R15      EQU   15                                                       56100002
C0       EQU   0                                                        56160002
C1       EQU   1                                                        56220002
*********                                                               56280002
*                                                                       56340002
* SPECIAL ROUTINES                                                      56400002
XDATE1   STM   R14,R12,L12(R13)         SAVE REGS                       56460002
         CLC   XDATE(L4),HEX00          IS DATE 0                       56520002
         BE    RETURN                   BRANCH IF DATE 0                56580002
         CLC   L0(L4,R3),HEX00          IS LOW DATE ZERO          P0415 56640002
         BNE   XDATE2                   BR-NO                     P0415 56700002
         MVC   L0(L4,R3),XDATE          MOVE IN DATE              P0415 56760002
XDATE2   EQU   *                                                  P0415 56820002
         CLC   XDATE(L4),L0(R3)         CHECK FOR LOW DATE              56880002
         BL    SAVELOW                  BRANCH IF LOW                   56940002
         CLC   XDATE(L4),L4(R3)         CHECK FOR HIGH DATE             57000002
         BNH   RETURN                   BRANCH IF NOT HIGH              57060002
SAVEHI   MVC   L4(L4,R3),XDATE          MOVE HIGH DATE                  57120002
         B     RETURN                   RETURN                          57180002
SAVELOW  MVC   L0(L4,R3),XDATE          MOVE LOW DATE                   57240002
RETURN   LM    R14,R12,L12(R13)         RESTORE REGS                    57300002
         BR    R14                      RETURN                          57360002
ROUT0    STM   R14,R12,L12(R13)         SAVE ROUTINE REGISTERS    P0415 57420002
         CLC   EXTDLOG(L2),HEX00        TEST FOR 0 LOGOUT LENGTH  P0415 57480002
         BNE   ROUT0A                   BRANCH IF LOGOUT RECORDED P0415 57540002
         CLC   XCPUMOD(L2),C168    IS IT A 168                          57550002
         BE    ROUT0A                                                   57560002
         CLC   XCPUMOD(L2),C3062   IS IT A 3062                         57570002
         BE    ROUT0A                                                   57580002
         LA    R0,ENDTBL-L6             LOAD ADDRESS OF LAST ENTRYP0415 57600002
         ST    R0,REG8                  STORE INTO CURRENT ENTRY  P0415 57660002
ROUT0A   LM    R14,R12,L12(R13)         RESTORE REGISTERS         P0415 57720002
         CLC   XCPUMOD(L2),C168    MOD 168?                    @YA07735 57727002
         BER   R14                 BRANCH IF YES               @YA07735 57734002
         TM    XDUM2,V2            MOD 165-M2?                 @YA07735 57741002
         BOR   R14                 BRANCH IF YES               @YA07735 57748002
         MVI   Y165,X1             SET M165 FLAG               @YA07735 57755002
         ST    R2,SAVE2            SAVE REG 2                  @YA07735 57762002
         SH    R2,X90              SET R2 TO START OF 165 REC  @YA07735 57769002
         BR    R14                      RETURN                    P0415 57780002
HEX00    DC    XL4'00'                                                  57840002
X90      DC    X'0090'                                         @YA07735 57870002
*********************************************************************** 57900002
*        THIS ROUTINE TESTS FOR VERSION OF M165                       * 57960002
*********************************************************************** 58020002
V2       EQU   X'01'                                                    58080002
CHKMOD   STM   R6,R7,XSAVE         SAVE R6 AND R7                       58140002
         CLI   Y165,X1             MOD 165?                    @YA07735 58148002
         BNE   CHKMOD2             BRANCH IF NO                @YA07735 58156002
         OI    L0(R3),C0           SET MOD 165 FLAG            @YA07735 58164002
         L     R2,SAVE2            RESTORE REG 2               @YA07735 58172002
         B     CHKMOD1             GO FOR RETURN               @YA07735 58180002
CHKMOD2  OI    L0(R3),C1           SET 165R/168 FLAG           @YA07735 58188002
V2EXIT   LA    R7,MFC-L6               CHANGE                           58560002
         ST    R7,REG8                   POINTER                        58620002
         TM    A4LJ,X10             7094 EMULATOR?             @YA07735 58624002
         BZ    TRY7080              BRANCH IF NO               @YA07735 58628002
         OI    L0(R3),X1           INDICATE 7094               @YA07735 58632002
         B     CHKMOD1                                         @YA07735 58636002
TRY7080  TM    A4LJ,X08             7080 EMULATOR?             @YA07735 58640002
         BZ    TRY7074              BRANCH IF NO               @YA07735 58644002
         OI    L0(R3),X8           INDICATE 7080               @YA07735 58648002
         B     CHKMOD1                                         @YA07735 58652002
TRY7074  TM    A4LJ,X04             7074 EMULATOR?             @YA07735 58656002
         BZ    CHKMOD1              BRANCH IF NO               @YA07735 58660002
         OI    L0(R3),X4           INDICATE 7074               @YA07735 58664002
CHKMOD1  LM    R6,R7,XSAVE         RESTORE REGS                @YA07735 58668002
         BR    R14                 EXIT                                 58800002
SAVE2    DC    F'0'                                            @YA07735 58830002
C168     DC    X'0168'                                                  58860002
Y165     DC    X'00'                                           @YA07735 58890002
C3062    DC    X'3062'                                                  58890102
L0       EQU   0                                                        58920002
L1       EQU   1                                                        58980002
L2       EQU   2                                                        59040002
L3       EQU   3                                                        59100002
L4       EQU   4                                                        59160002
L5       EQU   5                                                        59220002
L6       EQU   6                                                        59280002
L7       EQU   7                                                        59340002
L8       EQU   8                                                        59400002
L9       EQU   9                                                        59460002
L10      EQU   10                                                       59520002
L11      EQU   11                                                       59580002
L12      EQU   12                                                       59640002
X10      EQU   X'10'                                           @YA07735 59648002
X08      EQU   X'08'                                           @YA07735 59656002
X04      EQU   X'04'                                           @YA07735 59664002
X1       EQU   16                                              @YA07735 59672002
X8       EQU   8                                               @YA07735 59680002
X4       EQU   4                                               @YA07735 59688002
ENTRIES  DS    0F                                                       59700002
         SPECIAL    XDATE1,00000000,SPACE=4                             59760002
         SPECIAL    ROUT0,00000000,SPACE=0                        P0415 59820002
         SUM   A1LK00                                                   59880002
         SUM   A1LK01                                                   59940002
         SUM   A1LK03                                                   59950002
         SUM   A1LK04                                                   59970002
         SUM   A1LK08                                                   60000002
         SUM   A1LK10                                                   60060002
         SUM   A1LK12                                                   60120002
         SUM   A1LK16                                                   60130002
         SUM   A1LK17                                                   60140002
         SUM   A1LK18                                                   60150002
         SUM   A1LK20                                                   60180002
         SUM   A1LK24                                                   60240002
         SUM   A1LK26                                                   60300002
         SUM   A1LL43                                                   60360002
         SUM   A1LL45                                                   60420002
         SUM   A1LL50                                                   60450002
         SUM   A2LK01                                                   60480002
         SUM   A2LK02                                                   60540002
         SUM   A2LK03                                                   60600002
         SUM   A2LK04                                                   60660002
         SUM   A2LK05                                                   60720002
         SUM   A2LK08                                                   60780002
         SUM   A2LK09                                                   60840002
         SUM   A2LK11                                                   60900002
         SUM   A2LK12                                                   60960002
         SUM   A2LK13                                                   61020002
         SUM   A2LK18                                                   61080002
         SUM   A2LK19                                                   61140002
         SUM   A2LK20                                                   61200002
         SUM   A2LK21                                                   61260002
         SUM   A2LK24                                                   61320002
         SUM   A2LK25                                                   61380002
         SUM   A2LK26                                                   61440002
         SUM   A2LK27                                                   61500002
         SUM   A2LL34                                                   61560002
         SUM   A2LL41                                                   61620002
         SUM   A2LL43                                                   61680002
         SUM   A2LL44                                                   61740002
         SUM   A2LL45                                                   61800002
         SUM   A4LK25                                                   61860002
         SUM   A4LK26                                                   61920002
         SUM   A4LK27                                                   61980002
         SUM   A4LK28                                                   62040002
         SUM   A5LK00                                                   62100002
         SUM   A5LK01                                                   62160002
         SUM   A5LK02                                                   62220002
         SUM   A5LK03                                                   62280002
         SUM   A5LK04                                                   62340002
         SUM   A5LK05                                                   62400002
         SUM   A5LK08                                                   62460002
         SUM   A5LK09                                                   62520002
         SUM   A5LK10                                                   62580002
         SUM   A5LK11                                                   62640002
         SUM   A5LK12                                                   62700002
         SUM   A5LK13                                                   62760002
         SUM   A5LK16                                                   62820002
         SUM   A5LK18                                                   62880002
         SUM   A5LK19                                                   62940002
         SUM   A5LK20                                                   63000002
         SUM   A5LK21                                                   63060002
         SUM   A5LK24                                                   63120002
         SUM   A5LK25                                                   63180002
         SUM   A5LK26                                                   63240002
         SUM   A5LK27                                                   63300002
         SUM   A5LK28                                                   63360002
         SUM   A5LL32                                                   63420002
         SUM   A5LL33                                                   63480002
         SUM   A5LL34                                                   63540002
         SUM   A5LL35                                                   63600002
         SUM   A5LL36                                                   63660002
         SUM   A5LL37                                                   63720002
         SUM   A5LL40                                                   63780002
         SUM   A5LL41                                                   63840002
         SUM   A5LL42                                                   63900002
         SUM   A5LL43                                                   63960002
         SUM   A5LL44                                                   64020002
         SUM   A5LL45                                                   64080002
         SUM   A5LL48                                                   64140002
         SUM   A5LL49                                                   64200002
         SUM   A5LL50                                                   64260002
         SUM   A5LL51                                                   64320002
         SUM   A5LL52                                                   64380002
         SUM   A5LL53                                                   64440002
         SUM   A5LL56                                                   64500002
         SUM   A6LL32                                                   64560002
         SUM   A6LL33                                                   64620002
         SUM   A6LL34                                                   64680002
         SUM   A6LL35                                                   64740002
         SUM   A6LL40                                                   64800002
         SUM   A6LL41                                                   64860002
         SUM   A6LL42                                                   64920002
         SUM   A6LL44                                                   64980002
         SUM   A6LL45                                                   65010002
         SUM   A6LL49                                                   65040002
         SUM   A6LL50                                                   65100002
         SUM   A6LL51                                                   65160002
         SUM   A6LL53                                                   65220002
         SUM   A6LL56                                                   65280002
         SUM   A6LL57                                                   65340002
         SUM   B1LK09                                                   65350002
         SUM   B1LK10                                                   65360002
         SUM   B1LK11                                                   65370002
         SUM   B3LK00                                                   65400002
         SUM   B3LK01                                                   65460002
         SUM   B3LK02                                                   65520002
         SUM   B3LK03                                                   65580002
         SUM   B3LK04                                                   65640002
         SUM   B3LK05                                                   65700002
         SUM   B3LK08                                                   65760002
         SUM   B3LK09                                                   65820002
         SUM   B3LK10                                                   65880002
         SUM   B3LK11                                                   65940002
         SUM   B5LK12                                                   66060002
         SUM   B5LK13                                                   66120002
         SUM   B6LK13                                          @YA07735 66126002
         SUM   B6LK18                                          @YA07735 66132002
         SUM   B6LK19                                          @YA07735 66138002
         SUM   B6LK20                                          @YA07735 66144002
         SPECIAL    CHKMOD,00000000,SPACE=1                             66150002
ENDTBL1  DC    X'FFFF'                                                  66180002
MFC      EQU   *                                                        66240002
         SUM   C0LK00                                                   66300002
         SUM   C0LK01                                                   66360002
         SUM   C0LK02                                                   66420002
         SUM   C0LK03                                                   66480002
         SUM   C0LK04                                                   66540002
         SUM   C0LK05                                                   66570002
         SUM   C0LK08                                                   66600002
         SUM   C0LK09                                                   66660002
         SUM   C0LK29                                                   66720002
         SUM   C0LL32                                                   66840002
         SUM   C0LL33                                                   66900002
         SUM   C0LL34                                                   66960002
         SUM   C0LL35                                                   67020002
         SUM   C0LL36                                                   67080002
         SUM   C0LL41                                                   67140002
         SUM   C1LK09                                                   67200002
* (UNSUPPORTED ITEM C1LK10 DELETED)                            @ZA34990 67260000
         SUM   C1LK11                                                   67320002
         SUM   C1LK12                                                   67380002
         SUM   C1LK20                                                   67440002
         SUM   C1LK21                                                   67500002
         SUM   C1LK24                                                   67560002
         SUM   C1LK25                                                   67620002
         SUM   C1LL41                                                   67680002
         SUM   C1LL42                                                   67740002
* (REPETITION OF C1LL42 DELETED)                               @ZA34990 67800000
         SUM   C1LL43                                                   67850000
         SUM   C1LL44                                                   67900000
         SUM   C1LL45                                                   67950000
* (UNSUPPORTED ITEM C1LL52 DELETED)                            @ZA34990 68000000
         SUM   C1LL53                                                   68100002
         SUM   C1LL56                                                   68160002
         SUM   C1LL57                                                   68220002
ENDTBL   DC    X'FF'                                              P0415 68280002
PEDIT    DS    0F                                                       68340002
&CSECT   SETC  'PEDIT'                                                  68400002
&DSECT   SETC  'YYYA'                                                   68460002
         USING *,R9                                                     68520002
         DC    A(PENTRY)                                                68580002
         DC    CL8'IFCS0165'                                            68640002
YR9PTR   DS    1F                                                       68700002
YLABELP  DS    1F                                                       68760002
YYYA     DSECT                                                          68820002
         DS    3H                                                       68880002
         DSGEN (YDUMA,16),(YNOREC,16)                                   68940002
         DSGEN (YTYPE,8),(YCHAN,8),(YCUA,24),(YSER,24)                  69000002
         DSGEN (YCPU,16),(YSMSW,16)                                     69060002
         DSGEN (YLOWD,32)                                               69120002
         DSGEN (YHID,32)                                                69180002
         DSGEN (CTA1LK00,16),(CTA1LK01,16)                              69240002
         DSGEN (CTA1LK03,16),(CTA1LK04,16)                              69270002
         DSGEN (CTA1LK08,16),(CTA1LK10,16)                              69300002
         DSGEN (CTA1LK12,16),(CTA1LK16,16)                              69360002
         DSGEN (CTA1LK17,16),(CTA1LK18,16)                              69390002
         DSGEN (CTA1LK20,16),(CTA1LK24,16)                              69420002
         DSGEN (CTA1LK26,16),(CTA1LL43,16)                              69480002
         DSGEN (CTA1LL45,16),(CTA1LL50,16)                              69510002
         DSGEN (CTA2LK01,16),(CTA2LK02,16)                              69540002
         DSGEN (CTA2LK03,16),(CTA2LK04,16)                              69600002
         DSGEN (CTA2LK05,16),(CTA2LK08,16)                              69660002
         DSGEN (CTA2LK09,16),(CTA2LK11,16)                              69720002
         DSGEN (CTA2LK12,16),(CTA2LK13,16)                              69780002
         DSGEN (CTA2LK18,16),(CTA2LK19,16)                              69840002
         DSGEN (CTA2LK20,16),(CTA2LK21,16)                              69900002
         DSGEN (CTA2LK24,16),(CTA2LK25,16)                              69960002
         DSGEN (CTA2LK26,16),(CTA2LK27,16)                              70020002
         DSGEN (CTA2LL34,16),(CTA2LL41,16)                              70080002
         DSGEN (CTA2LL43,16),(CTA2LL44,16)                              70140002
         DSGEN (CTA2LL45,16),(CTA4LK25,16)                              70200002
         DSGEN (CTA4LK26,16),(CTA4LK27,16)                              70260002
         DSGEN (CTA4LK28,16),(CTA5LK00,16)                              70320002
         DSGEN (CTA5LK01,16),(CTA5LK02,16)                              70380002
         DSGEN (CTA5LK03,16),(CTA5LK04,16)                              70440002
         DSGEN (CTA5LK05,16),(CTA5LK08,16)                              70500002
         DSGEN (CTA5LK09,16),(CTA5LK10,16)                              70560002
         DSGEN (CTA5LK11,16),(CTA5LK12,16)                              70620002
         DSGEN (CTA5LK13,16),(CTA5LK16,16)                              70680002
         DSGEN (CTA5LK18,16),(CTA5LK19,16)                              70740002
         DSGEN (CTA5LK20,16),(CTA5LK21,16)                              70800002
         DSGEN (CTA5LK24,16),(CTA5LK25,16)                              70860002
         DSGEN (CTA5LK26,16),(CTA5LK27,16)                              70920002
         DSGEN (CTA5LK28,16),(CTA5LL32,16)                              70980002
         DSGEN (CTA5LL33,16),(CTA5LL34,16)                              71040002
         DSGEN (CTA5LL35,16),(CTA5LL36,16)                              71100002
         DSGEN (CTA5LL37,16),(CTA5LL40,16)                              71160002
         DSGEN (CTA5LL41,16),(CTA5LL42,16)                              71220002
         DSGEN (CTA5LL43,16),(CTA5LL44,16)                              71280002
         DSGEN (CTA5LL45,16),(CTA5LL48,16)                              71340002
         DSGEN (CTA5LL49,16),(CTA5LL50,16)                              71400002
         DSGEN (CTA5LL51,16),(CTA5LL52,16)                              71460002
         DSGEN (CTA5LL53,16),(CTA5LL56,16)                              71520002
         DSGEN (CTA6LL32,16),(CTA6LL33,16)                              71580002
         DSGEN (CTA6LL34,16),(CTA6LL35,16)                              71640002
         DSGEN (CTA6LL40,16),(CTA6LL41,16)                              71700002
         DSGEN (CTA6LL42,16),(CTA6LL44,16)                              71760002
         DSGEN (CTA6LL45,16)                                            71790002
         DSGEN (CTA6LL49,16),(CTA6LL50,16)                              71820002
         DSGEN (CTA6LL51,16),(CTA6LL53,16)                              71880002
         DSGEN (CTA6LL56,16),(CTA6LL57,16)                              71940002
         DSGEN (CTB1LK09,16),(CTB1LK10,16),(CTB1LK11,16)                71970002
         DSGEN (CTB3LK00,16),(CTB3LK01,16)                              72000002
         DSGEN (CTB3LK02,16),(CTB3LK03,16)                              72060002
         DSGEN (CTB3LK04,16),(CTB3LK05,16)                              72120002
         DSGEN (CTB3LK08,16),(CTB3LK09,16)                              72180002
         DSGEN (CTB3LK10,16),(CTB3LK11,16)                              72240002
         DSGEN (CTB5LK12,16),(CTB5LK13,16)                              72360002
         DSGEN (CTB6LK13,16),(CTB6LK18,16)                     @YA07735 72370002
         DSGEN (CTB6LK19,16),(CTB6LK20,16)                     @YA07735 72380002
         DSGEN (NEWVER,16)                                              72390002
         DSGEN (CTC0LK00,16),(CTC0LK01,16)                              72420002
         DSGEN (CTC0LK02,16),(CTC0LK03,16)                              72480002
         DSGEN (CTC0LK04,16),(CTC0LK05,16)                              72540002
         DSGEN (CTC0LK08,16),(CTC0LK09,16)                              72600002
         DSGEN (CTC0LK29,16),(CTC0LL32,16)                              72660002
         DSGEN (CTC0LL33,16),(CTC0LL34,16)                              72720002
         DSGEN (CTC0LL35,16),(CTC0LL36,16)                              72780002
         DSGEN (CTC0LL41,16)                                            72840002
         DSGEN (CTC1LK09,16)     (C1LK10 DELETED)              @ZA34990 72900000
         DSGEN (CTC1LK11,16),(CTC1LK12,16)                              72960002
         DSGEN (CTC1LK20,16),(CTC1LK21,16)                              73020002
         DSGEN (CTC1LK24,16),(CTC1LK25,16)                              73080002
         DSGEN (CTC1LL41,16),(CTC1LL42,16)                              73140002
         DSGEN (CTC1LL43,16),(CTC1LL44,16)                              73200002
         DSGEN (CTC1LL45,16)     (C1LL52 DELETED)              @ZA34990 73260000
         DSGEN (CTC1LL53,16),(CTC1LL56,16)                              73320002
         DSGEN (CTC1LL57,16)                                            73380002
YDUM1    EQU   *                                                        73440002
IFCS0165 CSECT                                                          73500002
         DROP  R2                                                       73560002
         USING YYYA,R2                                                  73620002
*********                                                               73680002
*                                                                       73740002
* SPECIAL ROUTINES                                                      73800002
M2       EQU   X'01'                                                    73860002
LL2      EQU   2                                                        73920002
CONVERT  STM   R5,R8,XSAVE              SAVE REGS                       73980002
         LH    R5,L0(R4)                PICK UP COUNT                   74040002
CONV1    CVD   R5,WORK                  CONVERT IT TO DEVIMALP          74100002
         UNPK  L0(L3,R3),WORK+L5(L3)    UNPACK IT TO PRINT BUFF         74160002
         MVZ   L2(L1,R3),L0(R3)         PUT ON PRINTABLE ZONE           74220002
RETURNA  LM    R5,R8,XSAVE              RESTORE REGS                    74280002
         BR    R14                                                      74340002
CHKEMU   ST    R5,RSAVE                                        @YA07735 74340302
         TM    L0(R4),C1           165R/168?                   @YA07735 74340602
         BZR   R14                 BRANCH IF NO                @YA07735 74340902
         TM    L0(R4),C10           7094 EMULATOR?             @YA07735 74341202
         BOR   R14                 BRANCH IF YES               @YA07735 74341502
         TM    L0(R4),C08          7080 EMULATOR?              @YA07735 74341802
         BNO   T7074               BRANCH IF NO                @YA07735 74342102
         L     R5,A7080            SET LINE AND LABEL          @YA07735 74342402
         ST    R5,YR9PTR           POINTERS FOR 7080           @YA07735 74342702
         L     R5,B7080                                        @YA07735 74343002
         ST    R5,YLABELP                                      @YA07735 74343302
         B     RETURN9                                         @YA07735 74343602
T7074    TM    L0(R4),C04          7074 EMULATOR?              @YA07735 74343902
         BNO   JUMP1               BRANCH IF NO                @YA07735 74344202
         L     R5,A7074            SET LINE AND LABEL          @YA07735 74344502
         ST    R5,YR9PTR           POINTERS FOR 7074           @YA07735 74344802
         L     R5,B7074                                        @YA07735 74345102
         ST    R5,YLABELP                                      @YA07735 74345402
         B     RETURN9                                         @YA07735 74345702
JUMP     ST    R5,RSAVE                                        @YA07735 74346002
         TM    NEWVER,C1           165R/168?                   @YA07735 74346302
         BZR   R14                 BRANCH IF NO                @YA07735 74346602
JUMP1    L     R5,AJUMP            SKIP EMULATOR PRINTOUTS     @YA07735 74346902
         ST    R5,YR9PTR                                       @YA07735 74347202
         L     R5,BJUMP                                        @YA07735 74347502
         ST    R5,YLABELP                                      @YA07735 74347802
RETURN9  L     R5,RSAVE                                        @YA07735 74348102
         BR    R14                                             @YA07735 74348402
*                                                                       74400002
SKIPPER  BR    R14                      RETURN                          74460002
*                                                                       74520002
SETDATE  UNPK  WORK(L8),L0(L4,R4)       PACK DATE                       74580002
         MVZ   WORK+L7(L1),WORK         MOVE ON ZONE                    74640002
         MVC   L0(L3,R3),WORK+L5        MOVE DATE TO PRINT LINE         74700002
         MVC   L5(L2,R3),WORK+L3        MOVE YEAR TO PRINT LINE         74760002
         BR    R14                                                      74820002
TESTMOD  STM   R6,R7,RSAVE              SAVE REGS                       74880002
         TM    NEWVER,C1                Q/IS IT NEW VER                 74940002
         BO    BEXIT                    YES-BR                          75000002
         BR    R14                      RETURN                          75060002
BEXIT    LA    R6,C0LINE-4              SET                             75120002
         LA    R7,C0LAB-1                TO                             75180002
         ST    R6,YR9PTR                  GO TO                         75240002
         ST    R7,YLABELP                  C0 PRINT                     75300002
         LM    R6,R7,RSAVE              RESTORE REGS                    75360002
         BR    R14                      RETURN                          75420002
RSAVE    DS    2F                                                       75480002
M168     DC    X'0168'                                                  75540002
MODCHK   STM   R6,R7,RSAVE              SAVE REGS                       75542002
         CLC   YCPU(L2),M168            Q/ IS THIS A 168                75544002
         BE    EXIT8                    YES-BR                          75546002
         BR    R14                      RETURN                          75548002
EXIT8    LA    R6,LIN168-L4            SET TO                           75550002
         L     R7,LAB1                                                  75552002
         ST    R6,YR9PTR                    TO                          75554002
         ST    R7,YLABELP                    168 PRINT                  75556002
         LM    R6,R7,RSAVE              RESTORE REGS                    75558002
         BR    R14                      RETURN                          75560002
C1BR     STM   R6,R7,RSAVE              SAVE REGS                       75562002
         LA    R6,C1LINE-L4             SET TO                          75564002
         L     R7,LAB2                                                  75566002
         ST    R6,YR9PTR                    TO                          75568002
         ST    R7,YLABELP                     C1 PRINT                  75570002
         LM    R6,R7,RSAVE              RESTIRE REGS                    75572002
         SR    R15,R15                  CLEAR 15                        75574002
         BR    R14                      RETURN                          75576002
LAB1     DC    A(LAB168-1)                                              75578002
LAB2     DC    A(C1LAB-1)                                               75580002
A7074    DC    A(LN7074-4)                                     @YA07735 75582002
B7074    DC    A(LB7074-1)                                     @YA07735 75584002
A7080    DC    A(LN7080-4)                                     @YA07735 75586002
B7080    DC    A(LB7080-1)                                     @YA07735 75588002
AJUMP    DC    A(LNJUMP-4)                                     @YA07735 75590002
BJUMP    DC    A(LBJUMP-1)                                     @YA07735 75592002
C10      EQU   X'10'                                           @YA07735 75594002
C08      EQU   X'08'                                           @YA07735 75596002
C04      EQU   X'04'                                           @YA07735 75598002
*                                                                       75600002
*        FREEE COUNTERS AREA LAST THING DONE                            75660002
*                                                                       75720002
FREECTR  STM   R14,R12,L12(R13)         SAVE ALL REGS                   75780002
         LR    R12,R13                  SAVE SAVE AREA ADDR             75840002
         LA    R13,FSAVE                POINT TO MY SAVE                75900002
         ST    R12,L4(R13)              SET CHAINING POINTERS           75960002
         ST    R13,L8(R12)                                              76020002
         L     R3,L4(R2)                PICK UP POINTER TO NEXT COUNTER 76080002
         ST    R3,L28(R12)              SAVE POINTER IN REG SAVE        76140002
         LH    R0,SIZE                  PICK UP SIZE OF AREA            76200002
         LR    R1,R2                    SET ADDRESS                     76260002
         FREEMAIN R,LV=(0),A=(1)                                        76320002
         LTR   R3,R3                    ANY MORE COUNTERS               76380002
         BZ    RETURN0                  NO  RETURN                      76440002
         LA    R5,PENTRY+L10            POINT TO TOP ENTRY - 4          76500002
         ST    R5,YR9PTR                                                76560002
         LA    R5,LABELS-L1               POINT TO FIRST LABEL - 1      76620002
         ST    R5,YLABELP               STORE IT IN TABLE               76680002
RETURN0  L    R13,L4(R13)               PICK UP &                       76740002
         LM    R14,R12,L12(R13)         RESTOR E REGS                   76800002
         BR    R14                                                      76860002
         LTORG                                                          76890000
*                                                                       76920002
HEX02    EQU   X'02'                                                    76980002
L14      EQU   14                                                       77040002
L28      EQU   28                                                       77100002
*                                                                       77160002
WORK     DS    D                                                        77220002
FSAVE    DS    18F                                                      77280002
XSAVE    DS    4F                                                       77340002
SIZE     DC    H'334'                                          @YA07735 77400002
PENTRY   DS    0F                                                       77460002
         DC    X'00010001'                                              77520002
         DC    X'00010001'                                              77580002
         DC    A(LABELS)                                                77640002
         DC    H'0'                                                     77700002
*              *****     EDIT ENTRIES AREA     *****                    77760002
         DC    X'01'                                                    77820002
         DC    X'000B8B00'                                              77880002
         LABEL ' '                                                      77940002
         LINE  ,(23,1)                                                  78000002
         ROUTINE    YDUM1,SKIPPER                                       78060002
         LABEL 'DAY YEAR   DAY YEAR'                                    78120002
         LINE  (23,11),(12,19),SKIP=2                             P0415 78180002
         ROUTINE    YLOWD,SETDATE                                       78240002
         ROUTINE    YHID,SETDATE                                        78300002
         LABEL 'DATE RANGE-','TO'                                       78360002
         LINE  (21,1),(12,11),SKIP=2                           @ZM43110 78420002
         HEX   YCPU                                                     78480002
         LABEL 'MODEL ','MACHINE CHECK SUMMARY'                         78540002
         LINE  (23,1),(12,1)                                            78600002
         HEX        YSER,0,3B                                    S21021 78660002
         LABEL      'SERIAL NO'                                  S21021 78720002
         LINE  (38,1),(12,1),SKIP=2                               P0415 78780002
         ROUTINE    YNOREC,CONVERT                                P0415 78840002
         LABEL 'TOTAL NUMBER OF RECORDS'                          P0415 78900002
         LINE  ,(19,1),SKIP=1                                           78960002
         ROUTINE    YCPU,TESTMOD                                        78990002
         LABEL 'M/F FRAME A1 STORAGE STATUS'                            79020002
         LINE  (22,26),(1,26)                                           79080002
         ROUTINE    CTA1LK00,CONVERT                                    79140002
         ROUTINE    CTA1LK01,CONVERT                                    79200002
         ROUTINE    CTA1LK08,CONVERT                                    79260002
         ROUTINE    CTA1LK10,CONVERT                                    79320002
         LABEL 'RIPPLE CE','RIPPLE UE','ECC CHK CE','ECC CHK UE'        79380002
         LINE  (22,26),(1,26)                                           79440002
         ROUTINE    CTA1LK12,CONVERT                                    79500002
         ROUTINE    CTA1LK20,CONVERT                                    79560002
         ROUTINE    CTA1LK24,CONVERT                                    79620002
         ROUTINE    CTA1LK26,CONVERT                                    79680002
         LABEL 'S/S CHK','STG CHK SDB1','STG CHK MRK','STG CHK ADR'     79740002
         LINE  (22,26),(1,26)                                           79800002
         ROUTINE    CTA1LL43,CONVERT                                    79860002
         ROUTINE    CTA1LL45,CONVERT                                    79920002
         LABEL 'STG CHK','UNRETRY STG CHK'                              79980002
         LINE  ,(19,1)                                                  80040002
         LABEL 'M/F FRAME A2 STORAGE CONTROL UNIT'                      80100002
         LINE  (22,26),(1,26)                                           80160002
         ROUTINE    CTA2LK01,CONVERT                                    80220002
         ROUTINE    CTA2LK02,CONVERT                                    80280002
         ROUTINE    CTA2LK03,CONVERT                                    80340002
         ROUTINE    CTA2LK04,CONVERT                                    80400002
         LABEL 'SCU INKEY','SCU SNK','SCU STG ADR','SCU STG ADR 8-15'   80460002
         ROUTINE    CTA2LK05,CONVERT                                    80520002
         LINE  (22,26),(1,26)                                           80580002
         ROUTINE    CTA2LK08,CONVERT                                    80640002
         ROUTINE    CTA2LK08,CONVERT                                    80700002
         ROUTINE    CTA2LK09,CONVERT                                    80760002
         ROUTINE    CTA2LK11,CONVERT                                    80820002
         LABEL 'SCU STG ADR 16-23','SCU STG ADR 24-28','INKEY CHK','BFRX80880002
               CTL SCU ADR'                                             80940002
         LINE  (22,26),(1,26)                                           81000002
         ROUTINE    CTA2LK12,CONVERT                                    81060002
         ROUTINE    CTA2LK13,CONVERT                                    81120002
         ROUTINE    CTA2LK18,CONVERT                                    81180002
         ROUTINE    CTA2LK19,CONVERT                                    81240002
         LABEL 'BFR CTL C40 ADR','BFR CTL C40 MRK','BFR DBO BYTE 0','BFX81300002
               R DBO BYTE 1'                                            81360002
         LINE  (22,26),(1,26)                                           81420002
         ROUTINE    CTA2LK20,CONVERT                                    81480002
         ROUTINE    CTA2LK21,CONVERT                                    81540002
         ROUTINE    CTA2LK24,CONVERT                                    81600002
         ROUTINE    CTA2LK25,CONVERT                                    81660002
         LABEL 'BFR DBO BYTE 2','BFR DBO BYTE 3','BFR DBO BYTE 4','BFR X81720002
               DBO BYTE 5'                                              81780002
         LINE  (22,26),(1,26)                                           81840002
         ROUTINE    CTA2LK26,CONVERT                                    81900002
         ROUTINE    CTA2LK27,CONVERT                                    81960002
         ROUTINE    CTA2LL34,CONVERT                                    82020002
         ROUTINE    CTA2LL41,CONVERT                                    82080002
         LABEL 'BFR DBO BYTE 6','BFR DBO BYTE 7','HANG DETECT','OUTKEY X82140002
               CHK'                                                     82200002
         LINE  (22,26),(1,26)                                           82260002
         ROUTINE    CTA2LL43,CONVERT                                    82320002
         ROUTINE    CTA2LL44,CONVERT                                    82380002
         ROUTINE    CTA2LL45,CONVERT                                    82440002
         LABEL 'BFR ARY BLK CMPR','BFR ARY MPLE CMPR','BFR ARY RPLCE ARX82500002
               Y'                                                       82560002
         LINE  ,(19,1)                                                  82620002
         LABEL 'M/F FRAME A4 CONTROL STORAGE'                           82680002
         LINE  (22,26),(1,26)                                           82740002
         ROUTINE    CTA4LK25,CONVERT                                    82800002
         ROUTINE    CTA4LK26,CONVERT                                    82860002
         ROUTINE    CTA4LK27,CONVERT                                    82920002
         ROUTINE    CTA4LK28,CONVERT                                    82980002
         LABEL 'CTL STG INVLD WD','CTL STG PTY 0-35','CTL STG PTY 36-71X83040002
               ','CTL STG PTY 72-107'                                   83100002
         LINE  ,(19,1)                                                  83160002
         LABEL 'M/F FRAME A5 ADDERS AND CHECKS'                         83220002
         LINE  (22,26),(1,26)                                           83280002
         ROUTINE    CTA5LK00,CONVERT                                    83340002
         ROUTINE    CTA5LK01,CONVERT                                    83400002
         ROUTINE    CTA5LK02,CONVERT                                    83460002
         ROUTINE    CTA5LK03,CONVERT                                    83520002
         LABEL 'PAR ADDR HS BYTE 0','PAR ADDR HS BYTE 1','PAR ADDR HS BX83580002
               YTE 2','PAR ADDR HS BYTE 3'                              83640002
         LINE  (22,26),(1,26)                                           83700002
         ROUTINE    CTA5LK04,CONVERT                                    83760002
         ROUTINE    CTA5LK05,CONVERT                                    83820002
         ROUTINE    CTA5LK08,CONVERT                                    83880002
         ROUTINE    CTA5LK09,CONVERT                                    83940002
         LABEL 'PAR ADDR HS BYTE 4','PAR ADDR HS BYTE 5','PAR ADDR HS BX84000002
               YTE 6','PAR ADDR HS BYTE 7'                              84060002
         LINE  (22,26),(1,26)                                           84120002
         ROUTINE    CTA5LK10,CONVERT                                    84180002
         ROUTINE    CTA5LK11,CONVERT                                    84240002
         ROUTINE    CTA5LK12,CONVERT                                    84300002
         ROUTINE    CTA5LK13,CONVERT                                    84360002
         LABEL 'PAR ADDR HS WD','E REG BYTE 0','E REG BYTE 1','SER ADDRX84420002
                HS'                                                     84480002
         LINE  (22,26),(1,26)                                           84540002
         ROUTINE    CTA5LK16,CONVERT                                    84600002
         ROUTINE    CTA5LK18,CONVERT                                    84660002
         ROUTINE    CTA5LK19,CONVERT                                    84720002
         ROUTINE    CTA5LK20,CONVERT                                    84780002
         LABEL 'SER ADDR FS','BYTES 0+4','BYTES 1+5','BYTES 2+6'        84840002
         LINE  (22,26),(1,26)                                           84900002
         ROUTINE    CTA5LK21,CONVERT                                    84960002
         ROUTINE    CTA5LK24,CONVERT                                    85020002
         ROUTINE    CTA5LK25,CONVERT                                    85080002
         ROUTINE    CTA5LK26,CONVERT                                    85140002
         LABEL 'BYTE 3','ENTER ERR','CTL STG INVLD WD','CTL STG PTY 0-3X85200002
               5'                                                       85260002
         LINE  (22,26),(1,26)                                           85320002
         ROUTINE    CTA5LK27,CONVERT                                    85380002
         ROUTINE    CTA5LK28,CONVERT                                    85440002
         ROUTINE    CTA5LL32,CONVERT                                    85500002
         ROUTINE    CTA5LL33,CONVERT                                    85560002
         LABEL 'CTL STG PTY 36-71','CTL STG PTY 72-107','PAR ADDR FS BYX85620002
               TE 0','PAR ADDR FS BYTE 1'                               85680002
         LINE  (22,26),(1,26)                                           85740002
         ROUTINE    CTA5LL34,CONVERT                                    85800002
         ROUTINE    CTA5LL35,CONVERT                                    85860002
         ROUTINE    CTA5LL36,CONVERT                                    85920002
         ROUTINE    CTA5LL37,CONVERT                                    85980002
         LABEL 'PAR ADDR FS BYTE 2','PAR ADDR FS BYTE 3','PAR ADDR FS BX86040002
               YTE 4','PAR ADDR FS BYTE 5'                              86100002
         LINE  (22,26),(1,26)                                           86160002
         ROUTINE    CTA5LL40,CONVERT                                    86220002
         ROUTINE    CTA5LL41,CONVERT                                    86280002
         ROUTINE    CTA5LL42,CONVERT                                    86340002
         ROUTINE    CTA5LL43,CONVERT                                    86400002
         LABEL 'PAR ADDR FS BYTE 6','PAR ADDR FS BYTE 7','PAR ADDR CARRX86460002
               Y','SHFTR OUT BYTE 0'                                    86520002
         LINE  (22,26),(1,26)                                           86580002
         ROUTINE    CTA5LL44,CONVERT                                    86640002
         ROUTINE    CTA5LL45,CONVERT                                    86700002
         ROUTINE    CTA5LL48,CONVERT                                    86760002
         ROUTINE    CTA5LL49,CONVERT                                    86820002
         LABEL 'SHFTR OUT BYTE 1','SHFTR OUT BYTE 2','SHFTR OUT BYTE 3'X86880002
               ,'SHFTR OUT BYTE 4'                                      86940002
         LINE  (22,26),(1,26)                                           87000002
         ROUTINE    CTA5LL50,CONVERT                                    87060002
         ROUTINE    CTA5LL51,CONVERT                                    87120002
         ROUTINE    CTA5LL52,CONVERT                                    87180002
         ROUTINE    CTA5LL53,CONVERT                                    87240002
         LABEL 'SHFTR OUT BYTE 5','SHFTR OUT BYTE 6','SHFTR OUT BYTE 7'X87300002
               ,'SHFTR INPUT'                                           87360002
         LINE  (22,26),(1,26)                                           87420002
         ROUTINE    CTA5LL56,CONVERT                                    87480002
         LABEL 'SHFTR CTL'                                              87540002
         LINE  ,(19,1)                                                  87600002
         LABEL 'M/F FRAME A6 I-UNIT AND 74/94 EMUL'                     87660002
         LINE  (22,26),(1,26)                                           87720002
         ROUTINE    CTA6LL32,CONVERT                                    87780002
         ROUTINE    CTA6LL33,CONVERT                                    87840002
         ROUTINE    CTA6LL34,CONVERT                                    87900002
         ROUTINE    CTA6LL35,CONVERT                                    87960002
         LABEL 'INST REG 0-7','INST REG 8-15','INST REG 16-23','INST REX88020002
               G 24-31'                                                 88080002
         LINE  (22,26),(1,26)                                           88140002
         ROUTINE    CTA6LL40,CONVERT                                    88200002
         ROUTINE    CTA6LL41,CONVERT                                    88260002
         ROUTINE    CTA6LL42,CONVERT                                    88320002
         ROUTINE    CTA6LL44,CONVERT                                    88380002
         LABEL 'ADR INCR LTH 8-15','ADR INCR LTH 16-23','ADR INCR LTH 2X88440002
               4-31','DIF CHK'                                          88500002
         LINE  (22,26),(1,26)                                           88560002
         ROUTINE    CTA6LL49,CONVERT                                    88620002
         ROUTINE    CTA6LL50,CONVERT                                    88680002
         ROUTINE    CTA6LL51,CONVERT                                    88740002
         ROUTINE    CTA6LL53,CONVERT                                    88800002
         LABEL 'ADR ADDR HS 8-15','ADR ADDR HS 16-23','ADR ADDR HS 24-3X88860002
               1','ADR ADDR FS 8-15'                                    88920002
         LINE  (22,26),(1,26)                                           88980002
         ROUTINE    CTA6LL56,CONVERT                                    89040002
         ROUTINE    CTA6LL57,CONVERT                                    89100002
         LABEL 'ADR ADDR FS 16-23','ADR ADDR FS 24-31'                  89160002
         LINE  ,(19,1)                                                  89220002
         LABEL 'M/F FRAME B3 HSM AND/OR EXTD CHN'                       89280002
         LINE  (22,26),(1,26)                                           89340002
         ROUTINE    CTB3LK00,CONVERT                                    89400002
         ROUTINE    CTB3LK01,CONVERT                                    89460002
         ROUTINE    CTB3LK02,CONVERT                                    89520002
         ROUTINE    CTB3LK03,CONVERT                                    89580002
         LABEL 'RESIDUE CHK','PTY MPLR CHK','PTY MPCD CHK','RSDUE CTL CX89640002
               HK MPCD'                                                 89700002
         LINE  (22,26),(1,26)                                           89760002
         ROUTINE    CTB3LK04,CONVERT                                    89820002
         ROUTINE    CTB3LK05,CONVERT                                    89880002
         ROUTINE    CTB3LK08,CONVERT                                    89940002
         ROUTINE    CTB3LK09,CONVERT                                    90000002
         LABEL 'RSDUE CTL CHK SUM','RSDUE CTL CHK CARRY','RSDUE CTL CHKX90010002
                MPLR','RSDUE CTL CHK SPAR'                              90020002
         LINE  (22,26),(1,26)                                           90030002
         ROUTINE    CTB3LK10,CONVERT                                    90040002
         ROUTINE    CTB3LK11,CONVERT                                    90050002
         LABEL 'RSD CTL CK CMPT RSLT','RSD CTL CK ACTL RSLT'            90060002
         LINE  ,(19,1)                                                  90070002
         LABEL ' '                                                      90080002
         LINE  ,(19,1)                                                  90090002
         LABEL 'M/F FRAME B5 7094 EMULATOR FEATURE'                     90100002
         LINE  (22,26),(1,26)                                           90110002
         ROUTINE    CTB5LK12,CONVERT                                    90120002
         ROUTINE    CTB5LK13,CONVERT                                    90130002
         LABEL 'TSLTR INPUT','WCS 108-125'                              90140002
         LINE  ,(19,1)                                         @YA07735 90140602
         LABEL 'M/F FRAME B6  7080 EMULATOR FEATURE'           @YA07735 90141202
         LINE  (22,26),(1,26)                                  @YA07735 90141802
         ROUTINE CTB6LK18,CONVERT                              @YA07735 90142402
         ROUTINE CTB6LK19,CONVERT                              @YA07735 90143002
         ROUTINE CTB6LK20,CONVERT                              @YA07735 90143602
         LABEL 'WCS 108-125','A SIDE ERR','B SIDE ERR'         @YA07735 90144202
         LINE   ,                                              @YA07735 90144802
         ROUTINE NEWVER,JUMP                                   @YA07735 90145402
         LABEL '  '                                            @YA07735 90146002
         LINE  ,(19,1)                                         @YA07735 90146602
         LABEL 'M/F FRAME B6  7074 EMULATOR FEATURE'           @YA07735 90147202
         LINE  (22,26),(1,26)                                  @YA07735 90147802
         ROUTINE CTB6LK13,CONVERT                              @YA07735 90148402
         LABEL 'WCS ERROR'                                     @YA07735 90149002
         LINE                                                           90150002
         ROUTINE    YDUM1,FREECTR                                       90160002
         LABEL ' '                                                      90170002
         DC    X'FF'                                                    90180002
         DC    XL6'00'                                                  90190002
         DC    C'$'                                                     90200002
         LINE  (23,25),(2,25)                                           90210002
         LABEL ' '                                                      90220002
C0LINE   LINE  ,(19,1)                                                  90230002
C0LAB    LABEL 'M/F FRAME A1 STORAGE STATUS'                            90240002
         LINE  (22,26),(1,26)                                           90250002
         ROUTINE    CTA1LK04,CONVERT                                    90260002
         ROUTINE    CTA1LK08,CONVERT                                    90270002
         ROUTINE    CTA1LK10,CONVERT                                    90280002
         ROUTINE    CTA1LK12,CONVERT                                    90290002
         LABEL 'SP MACH CK','ECC CHK CE','ECC CHK UE','S/S CHK'         90300002
         LINE  (22,26),(1,26)                                           90310002
         ROUTINE    CTA1LK16,CONVERT                                    90320002
         ROUTINE    CTA1LK17,CONVERT                                    90330002
         ROUTINE    CTA1LK18,CONVERT                                    90340002
         ROUTINE    CTA1LK20,CONVERT                                    90350002
         LABEL 'S/S ADV LOST CHK','S/S SYNC CHK','S/S OVERRUN CHK','STGC90360002
                CHK SDBI'                                               90365002
         LINE  (22,26),(1,26)                                           90370002
         ROUTINE    CTA1LK24,CONVERT                                    90380002
         ROUTINE    CTA1LK26,CONVERT                                    90390002
         ROUTINE    CTA1LL43,CONVERT                                    90393002
         ROUTINE    CTA1LL45,CONVERT                                    90396002
         LABEL 'STG CHKMRK','STG CHK ADR','STG CHK','UNRETRY STG CHK'   90400002
         LINE  (22,26),(1,26)                                           90410002
         ROUTINE    CTA1LL50,CONVERT                                    90412002
         LABEL 'MULT SEG CMPR'                                          90414002
         LINE  (22,26),(19,1)                                           90416002
         LABEL 'M/F FRAME A2 STORAGE CONTROL UNIT'                      90420002
         LINE  (22,26),(1,26)                                           90430002
         ROUTINE    CTA2LK02,CONVERT                                    90440002
         ROUTINE    CTA2LK03,CONVERT                                    90450002
         ROUTINE    CTA2LK04,CONVERT                                    90460002
         ROUTINE    CTA2LK05,CONVERT                                    90470002
         LABEL 'SCU SNK','SCU STG ADR','SCU STG ADR 8-15','SCU STG ADR C90480002
               16-23'                                                   90490002
         LINE  (22,26),(1,26)                                           90500002
         ROUTINE    CTA2LK08,CONVERT                                    90510002
         ROUTINE    CTA2LK11,CONVERT                                    90520002
         ROUTINE    CTA2LK12,CONVERT                                    90530002
         ROUTINE    CTA2LK13,CONVERT                                    90540002
         LABEL 'SCU STG ADR 24-28','BFR CTL SCU ADDR','BFR CTL C40 ADR'C90550002
               ,'BFR CTL C40 MARK'                                      90560002
         LINE  (22,26),(1,26)                                           90570002
         ROUTINE    CTA2LK18,CONVERT                                    90580002
         ROUTINE    CTA2LK19,CONVERT                                    90590002
         ROUTINE    CTA2LK20,CONVERT                                    90600002
         ROUTINE    CTA2LK21,CONVERT                                    90610002
         LABEL 'BDBO CHK TGR BYTE 0','BDBO CHK TGR BYTE 1','BDBO CHK TGC90620002
               R BYTE 2','BDBO CHK TGR BYTE 3'                          90630002
         LINE  (22,26),(1,26)                                           90640002
         ROUTINE    CTA2LK24,CONVERT                                    90650002
         ROUTINE    CTA2LK25,CONVERT                                    90660002
         ROUTINE    CTA2LK26,CONVERT                                    90670002
         ROUTINE    CTA2LK27,CONVERT                                    90680002
         LABEL 'BDBO CHK TGR BYTE 4','BDBO CHK TGR BYTE 5','BDBO CHK TGC90690002
               R BYTE 6','BDBO CHK TGR BYTE 7'                          90700002
         LINE  (22,26),(1,26)                                           90710002
         ROUTINE    CTA2LL34,CONVERT                                    90720002
         ROUTINE    CTA2LL43,CONVERT                                    90730002
         ROUTINE    CTA2LL44,CONVERT                                    90740002
         ROUTINE    CTA2LL45,CONVERT                                    90750002
         LABEL 'HANG DETECT','BFR ARY BLK CMPR','BFR ARY MPLE CMPR','BFC90760002
               R ARY RPLCE ARY'                                         90770002
         LINE  (22,26),(19,1)                                           90780002
         LABEL 'M/F FRAME A4 CONTROL STORAGE'                           90790002
         LINE  (22,26),(1,26)                                           90800002
         ROUTINE    CTA4LK25,CONVERT                                    90810002
         ROUTINE    CTA4LK26,CONVERT                                    90820002
         ROUTINE    CTA4LK27,CONVERT                                    90830002
         ROUTINE    CTA4LK28,CONVERT                                    90840002
         LABEL 'CTL STG INVLD WD','CTL STG PTY 0-35','CTL STG PTY 36-71C90850002
               ','CTL STG PTY 72-107'                                   90860002
         LINE  (22,26),(19,1)                                           90870002
         LABEL 'M/F FRAME A5 ADDERS AND CHECKS'                         90880002
         LINE  (22,26),(1,26)                                           90890002
         ROUTINE    CTA5LK00,CONVERT                                    90900002
         ROUTINE    CTA5LK01,CONVERT                                    90910002
         ROUTINE    CTA5LK02,CONVERT                                    90920002
         ROUTINE    CTA5LK03,CONVERT                                    90930002
         LABEL 'PAR ADDR HS BYTE 0','PAR ADDR HS BYTE 1','PAR ADDR HS BC90940002
               YTE 2','PAR ADDR HS BYTE 3'                              90950002
         LINE  (22,26),(1,26)                                           90960002
         ROUTINE    CTA5LK04,CONVERT                                    90970002
         ROUTINE    CTA5LK05,CONVERT                                    90980002
         ROUTINE    CTA5LK08,CONVERT                                    90990002
         ROUTINE    CTA5LK09,CONVERT                                    91000002
         LABEL 'PAR ADDR HS BYTE 4','PAR ADDR HS BYTE 5','PAR ADDR HS BC91010002
               YTE 6','PAR ADDR HS BYTE 7'                              91020002
         LINE  (22,26),(1,26)                                           91030002
         ROUTINE    CTA5LK10,CONVERT                                    91040002
         ROUTINE    CTA5LK11,CONVERT                                    91050002
         ROUTINE    CTA5LK12,CONVERT                                    91060002
         ROUTINE    CTA5LK13,CONVERT                                    91070002
         LABEL 'PAR ADDR HS WD','E REG BYTE 0','E REG BYTE 1','SER ADDRC91080002
                HS'                                                     91090002
         LINE  (22,26),(1,26)                                           91100002
         ROUTINE    CTA5LK16,CONVERT                                    91110002
         ROUTINE    CTA5LK18,CONVERT                                    91120002
         ROUTINE    CTA5LK19,CONVERT                                    91130002
         ROUTINE    CTA5LK20,CONVERT                                    91140002
         LABEL 'SER ADDR FS','TF ADDR CK','TOD CK','CPU TMR CK'         91150002
         LINE  (22,26),(1,26)                                           91160002
         ROUTINE    CTA5LK21,CONVERT                                    91170002
         ROUTINE    CTA5LK24,CONVERT                                    91180002
         ROUTINE    CTA5LK25,CONVERT                                    91190002
         ROUTINE    CTA5LK26,CONVERT                                    91200002
         LABEL 'CMPR CK','ENTER ERR','CTL STG INVLD WD','CTL STG PTY 0-C91210002
               35'                                                      91220002
         LINE  (22,26),(1,26)                                           91230002
         ROUTINE    CTA5LK27,CONVERT                                    91240002
         ROUTINE    CTA5LK28,CONVERT                                    91250002
         ROUTINE    CTA5LL32,CONVERT                                    91260002
         ROUTINE    CTA5LL33,CONVERT                                    91270002
         LABEL 'CTL STG PTY 36-71','CTL STG PTY 72-107','PAR ADDR FS BYC91280002
               TE 0','PAR ADDR FS BYTE 1'                               91290002
         LINE  (22,26),(1,26)                                           91300002
         ROUTINE    CTA5LL34,CONVERT                                    91310002
         ROUTINE    CTA5LL35,CONVERT                                    91320002
         ROUTINE    CTA5LL36,CONVERT                                    91330002
         ROUTINE    CTA5LL37,CONVERT                                    91340002
         LABEL 'PAR ADDR FS BYTE 2','PAR ADDR FS BYTE 3','PAR ADDR FS BC91350002
               YTE 4','PAR ADDR FS BYTE 5'                              91360002
         LINE  (22,26),(1,26)                                           91370002
         ROUTINE    CTA5LL40,CONVERT                                    91380002
         ROUTINE    CTA5LL41,CONVERT                                    91390002
         ROUTINE    CTA5LL42,CONVERT                                    91400002
         ROUTINE    CTA5LL43,CONVERT                                    91410002
         LABEL 'PAR ADDR FS BYTE 6','PAR ADDR FS BYTE 7','PAR ADDR CARRC91420002
               Y','SHFTR OUT BYTE 0'                                    91430002
         LINE  (22,26),(1,26)                                           91440002
         ROUTINE    CTA5LL44,CONVERT                                    91450002
         ROUTINE    CTA5LL45,CONVERT                                    91460002
         ROUTINE    CTA5LL48,CONVERT                                    91470002
         ROUTINE    CTA5LL49,CONVERT                                    91480002
         LABEL 'SHFTR OUT BYTE 1','SHFTR OUT BYTE 2','SHFTR OUT BYTE 3'C91490002
               ,'SHFTR OUT BYTE 4'                                      91500002
         LINE  (22,26),(1,26)                                           91510002
         ROUTINE    CTA5LL50,CONVERT                                    91520002
         ROUTINE    CTA5LL51,CONVERT                                    91530002
         ROUTINE    CTA5LL52,CONVERT                                    91540002
         ROUTINE    CTA5LL53,CONVERT                                    91550002
         LABEL 'SHFTR OUT BYTE 5','SHFTR OUT BYTE 6','SHFTR OUT BYTE 7'C91560002
               ,'SHFTR INPUT'                                           91570002
         LINE  (22,26),(1,26)                                           91580002
         ROUTINE    CTA5LL56,CONVERT                                    91590002
         LABEL 'SHFTR CTL'                                              91600002
         LINE  ,(19,1)                                                  91610002
         LABEL 'M/F FRAME A6 I-UNIT'                                    91620002
         LINE  (22,26),(1,26)                                           91630002
         ROUTINE    CTA6LL32,CONVERT                                    91640002
         ROUTINE    CTA6LL33,CONVERT                                    91650002
         ROUTINE    CTA6LL34,CONVERT                                    91660002
         ROUTINE    CTA6LL35,CONVERT                                    91670002
         LABEL 'INST REG 0-7','INST REG 8-15','INST REG 16-23','INST REC91680002
               G 24-31'                                                 91690002
         LINE  (22,26),(1,26)                                           91700002
         ROUTINE    CTA6LL40,CONVERT                                    91710002
         ROUTINE    CTA6LL41,CONVERT                                    91720002
         ROUTINE    CTA6LL42,CONVERT                                    91730002
         ROUTINE    CTA6LL44,CONVERT                                    91740002
         LABEL 'ADR INCR LTH 8-15','ADR INCR LTH 16-23','ADR INCR LTH 2C91750002
               4-31','DIF A CHK'                                        91760002
         LINE  (22,26),(1,26)                                           91770002
         ROUTINE    CTA6LL45,CONVERT                                    91780002
         ROUTINE    CTA6LL49,CONVERT                                    91790002
         ROUTINE    CTA6LL50,CONVERT                                    91800002
         ROUTINE    CTA6LL51,CONVERT                                    91810002
         LABEL 'DIF B CHK','ADR ADDR HS 8-15','ADR ADDR HS 16-23','ADR C91820002
               ADDR HS 24-31'                                           91830002
         LINE  (22,26),(1,26)                                           91840002
         ROUTINE    CTA6LL53,CONVERT                                    91850002
         ROUTINE    CTA6LL56,CONVERT                                    91860002
         ROUTINE    CTA6LL57,CONVERT                                    91870002
         LABEL 'ADR ADDR FS 8-15','ADR ADDR FS 16-23','ADR ADDR HS 24-3C91880002
               1'                                                       91890002
         LINE  ,(19,1)                                                  91900002
         LABEL 'M/F FRAME B1 CHANNEL AND STORAGE STATUS'                91910002
         LINE  (22,26),(1,26)                                           91920002
         ROUTINE    CTB1LK09,CONVERT                                    91930002
         ROUTINE    CTB1LK10,CONVERT                                    91940002
         ROUTINE    CTB1LK11,CONVERT                                    91950002
         LABEL 'BFR INV LOC PTY CK','BFR INV REM PTY CK','BFR INV OVRUNC91960002
                CK'                                                     91970002
         LINE  ,(19,1)                                                  91980002
         LABEL 'M/F FRAME B3 HSM AND/OR EXTD CHAN'                      91990002
         LINE  (22,26),(1,26)                                           92000002
         ROUTINE    CTB3LK00,CONVERT                                    92010002
         ROUTINE    CTB3LK01,CONVERT                                    92020002
         ROUTINE    CTB3LK02,CONVERT                                    92030002
         ROUTINE    CTB3LK03,CONVERT                                    92040002
         LABEL 'RESIDUE CHK','PTY MPLR CHK','PTY MPCD CHK','RSDUE CTL CC92050002
               HK MPCD'                                                 92060002
         LINE  (22,26),(1,26)                                           92070002
         ROUTINE    CTB3LK04,CONVERT                                    92080002
         ROUTINE    CTB3LK05,CONVERT                                    92090002
         ROUTINE    CTB3LK08,CONVERT                                    92100002
         ROUTINE    CTB3LK09,CONVERT                                    92110002
         LABEL 'RSDUE CTL CHK SUM','RSDUE CTL CHK CARRY','RSDUE CTL CHKC92120002
               MPLR','RSDUE CTL CHK SPAR'                               92130002
         LINE  (22,26),(1,26)                                           92140002
         ROUTINE    CTB3LK11,CONVERT                                    92150002
         LABEL 'RSD CTL CK ACT RSLT'                                    92160002
         LINE  ,(1,1),SKIP=1                                   @YA07735 92162002
         ROUTINE NEWVER,CHKEMU                                 @YA07735 92164002
         LABEL '  '                                            @YA07735 92166002
         LINE  ,(19,1)                                                  92170002
         LABEL 'M/F FRAME B5 7094 EMULATOR FEATURE'                     92180002
         LINE  (22,26),(1,26)                                           92190002
         ROUTINE    CTB5LK12,CONVERT                                    92200002
         ROUTINE    CTB5LK13,CONVERT                                    92210002
         LABEL 'TSLTR INPUT','WCS 108-125'                              92220002
         LINE   ,                                              @YA07735 92220502
         ROUTINE NEWVER,JUMP                                   @YA07735 92221002
         LABEL '  '                                            @YA07735 92221502
LN7080   LINE  ,(19,1)                                         @YA07735 92222002
LB7080   LABEL 'M/F FRAME B6  7080 EMULATOR FEATURE'           @YA07735 92222502
         LINE  (22,26),(1,26)                                  @YA07735 92223002
         ROUTINE CTB6LK18,CONVERT                              @YA07735 92223502
         ROUTINE CTB6LK19,CONVERT                              @YA07735 92224002
         ROUTINE CTB6LK20,CONVERT                              @YA07735 92224502
         LABEL 'WCS 108-125','A SIDE ERR','B SIDE ERR'         @YA07735 92225002
         LINE   ,                                              @YA07735 92225502
         ROUTINE NEWVER,JUMP                                   @YA07735 92226002
         LABEL '  '                                            @YA07735 92226502
LN7074   LINE  ,(19,1)                                         @YA07735 92227002
LB7074   LABEL 'M/F FRAME B6  7074 EMULATOR FEATURE'           @YA07735 92227502
         LINE  (22,26),(1,26)                                  @YA07735 92228002
         ROUTINE CTB6LK13,CONVERT                              @YA07735 92228502
         LABEL 'WCS ERROR'                                     @YA07735 92229002
LNJUMP   LINE  ,(19,1)                                         @YA07735 92230002
LBJUMP   LABEL 'M/F FRAME C0 FLT ADDR REGS AND SPF'            @YA07735 92240002
         LINE  (22,26),(1,26)                                           92250002
         ROUTINE    YCPU,MODCHK                                         92260002
         LABEL ' '                                                      92270002
         LINE                                                           92280002
         ROUTINE    CTC0LK00,CONVERT                                    92290002
         ROUTINE    CTC0LK01,CONVERT                                    92300002
         ROUTINE    CTC0LK02,CONVERT                                    92310002
         ROUTINE    CTC0LK03,CONVERT                                    92320002
         LABEL 'ST PROT CK ADR','ST PROT CK IN-KEY','ST PROT CK INBUF',C92330002
               'ST PROT CK OUT-KEY'                                     92340002
         LINE  (22,26),(1,26)                                           92350002
         ROUTINE    CTC0LK08,CONVERT                                    92360002
         LABEL 'ST PROT CK R/C'                                         92370002
         LINE                                                           92380002
         ROUTINE    YCPU,C1BR                                           92390002
         LABEL ' '                                                      92400002
LIN168   LINE  (22,26),(1,26)                                           92410002
         ROUTINE    CTC0LK01,CONVERT                                    92420002
         ROUTINE    CTC0LK03,CONVERT                                    92430002
         ROUTINE    CTC0LK04,CONVERT                                    92440002
         ROUTINE    CTC0LK05,CONVERT                                    92450002
LAB168   LABEL 'ST PROT CK IN-KEY','ST PROT CK OUT-KEY','ST PROT CK REFC92460002
               ','ST PROT CK CHNG'                                      92470002
         LINE  (22,26),(1,26)                                           92480002
         ROUTINE    CTC0LK29,CONVERT                                    92490002
         LABEL 'SCU PREFIX CK'                                          92500002
C1LINE   LINE  (22,26),(19,1)                                           92510002
C1LAB    LABEL 'M/F FRAME C1 STORAGE STATUS'                            92520002
         LINE  (22,26),(1,26)                                           92540002
         ROUTINE    CTC1LK09,CONVERT                                    92550002
* (UNSUPPORTED ITEM C1LK10 DELETED)                            @ZA34990 92560000
         ROUTINE    CTC1LK11,CONVERT                                    92570000
         ROUTINE    CTC1LK12,CONVERT                                    92580000
         LABEL 'STOK CK BFR','STOK CK STO PTY','STOK CK ID'    @ZA34990 92590000
         LINE  (22,26),(1,26)                                           92610002
         ROUTINE    CTC1LK20,CONVERT                                    92620002
         ROUTINE    CTC1LK21,CONVERT                                    92630002
         ROUTINE    CTC1LK24,CONVERT                                    92640002
         ROUTINE    CTC1LK25,CONVERT                                    92650002
         LABEL 'TIR PTY,CK','TAL HS CK 8-15','TAL HS CK 16-23','TAL AS C92660002
               CK 24-30'                                                92670002
         LINE  (22,26),(1,26)                                           92680002
         ROUTINE    CTC1LL41,CONVERT                                    92690002
         ROUTINE    CTC1LL42,CONVERT                                    92700002
         ROUTINE    CTC1LL43,CONVERT                                    92710002
         ROUTINE    CTC1LL44,CONVERT                                    92720002
         LABEL 'DLAT CK MULTI CMPR','DLAT CK CMPR','DLAT CK INKEY','DLAC92730002
               T CK OUTKEY'                                             92740002
         LINE  (22,26),(1,26)                                           92750002
         ROUTINE    CTC1LL45,CONVERT                                    92760002
* (UNSUPPORTED ITEM C1LL52 DELETED)                            @ZA34990 92770000
         ROUTINE    CTC1LL53,CONVERT                                    92780000
         ROUTINE    CTC1LL56,CONVERT                                    92790000
         LABEL 'DLAT CK RA','TAL FS CK 8-15','TAL FS CK 16-23' @ZA34990 92800000
         LINE  (22,26),(1,26)                                           92820002
         ROUTINE    CTC1LL57,CONVERT                                    92830002
         LABEL 'TAL FS CK 24-30'                                        92840002
         LINE                                                           92850002
         ROUTINE    YDUM1,FREECTR                                       92860002
         LABEL ' '                                                      92870002
         DC    X'FF'                                                    92880002
         DC    XL6'00'                                                  92890002
         DC    C'$'                                                     92900002
LABELS   EQU   *                                                        92910002
         LSTART                                                         92920002
         END                                                            92930002
./  ADD  SSI=90101243,NAME=IFCS1017
         TITLE 'IFCS1017 - SUMMARY TABLE FOR 1017'                      00050000
*********************************************************************** 00100000
**                                                                   ** 00150000
**                                                                   ** 00200000
**  MODULE NAME:   IFCS1017                                          ** 00250000
**                                                                   ** 00300000
**  DESCRIPTIVE-NAME:   SUMMARY TABLE FOR 1017 (DEVICE CODE 0831)    ** 00350000
**                                                                   ** 00400000
**  COPYRIGHT:  NONE                                                 ** 00450000
**                                                                   ** 00500000
**  STATUS:     N/A                                                  ** 00550000
**                                                                   ** 00600000
**  FUNCTION:   PROVIDES SUMMARY SUPPORT FOR 1017 OBR RECORDS        ** 00650000
**                                                                   ** 00700000
**  NOTES:                                                           ** 00750000
**                                                                   ** 00800000
**    DEPENDENCIES:   THIS MODULE WAS ASSEMBLED USING THE EBCDIC     ** 00850000
**                 CHARACTER SET.  IT MUST BE REASSEMBLED IF ANOTHER ** 00900000
**                CHARACTER SET IS TO BE USED AT EXECUTION.         **  00950000
**                                                                   ** 01000000
**    RESTRICTIONS:   N/A                                            ** 01050000
**                                                                   ** 01100000
**    REGISTER-CONVENTIONS:                                          ** 01150000
**          REG 2  = POINTER TO THE OBR RECORD (SUMMARY PORTION)     ** 01200000
**                   POINTER TO THE SUMMARY COUNTERS (EDIT PORTION)  ** 01250000
**          REG 3  = POINTER TO THE PRINT BUFFER (EDIT PORTION)      ** 01300000
**                   POINTER TO CURRENT SUMMARY COUNTER (SUMMARY)    ** 01350000
**          REG 4  = POINTER TO DATA ITEM REFERENCED IN 'ROUTINE'    ** 01400000
**          REG 14 = RETURN POINT FROM 'ROUTINE'                     ** 01450000
**          REG 15 = SET TO ZERO TO SUPPRESS PRINTING LINE           ** 01500000
**                                                                   ** 01550000
**    PATCH-LABEL:  PATCH                                            ** 01600000
**                                                                   ** 01650000
**  MODULE TYPE:    DATA                                             ** 01700000
**                                                                   ** 01750000
**    PROCESSOR:    370 ASSEMBLER                                    ** 01800000
**                                                                   ** 01850000
**    MODULE-SIZE:                                                   ** 01900000
**                                                                   ** 01950000
**    ATTRIBUTES:   SERIALLY REUSABLE                                ** 02000000
**                                                                   ** 02050000
**  ENTRY-POINT:    N/A                                              ** 02100000
**                                                                   ** 02150000
**    LINKAGE:      N/A                                              ** 02200000
**                                                                   ** 02250000
**  INPUT:     N/A                                                   ** 02300000
**                                                                   ** 02350000
**  OUTPUT:    N/A                                                   ** 02400000
**                                                                   ** 02450000
**  EXIT-NORMAL:     N/A                                             ** 02500000
**                                                                   ** 02550000
**  EXIT-ERROR:      N/A                                             ** 02600000
**                                                                   ** 02650000
**  EXTERNAL-REFERENCES:                                             ** 02700000
**                                                                   ** 02750000
**    ROUTINES:        NONE                                          ** 02800000
**                                                                   ** 02850000
**    DATA-AREAS:      NONE                                          ** 02900000
**                                                                   ** 02950000
**    CONTROL-BLOCKS:  NONE                                          ** 03000000
**                                                                   ** 03050000
**    TABLES:          NONE                                          ** 03100000
**                                                                   ** 03150000
**    MACROS:    EDIT AND SUMMARY TABLE MACROS                       ** 03200000
**                                                                   ** 03250000
*********************************************************************** 03300000
         EJECT                                                          03350000
         GBLC  &DSECT,&CSECT                                            03400000
         SUMMARY NAME=IFCS1017                                          03450000
         DSGEN (KEY,8),(LEVEL,8),(SWITCH,8,0,3)                         03500000
         DSGEN (RECNUM,8),(RSVD2,8),(DATE,32),(TIME,32),(VERSION,8)     03550000
         DSGEN (CPUSER,24),(CPUID,16),(MCEL,16)                         03600000
         DSGEN (TASKID,64)                                              03650000
         DSGEN (CCWCC,8),(CCWDA,24),(CCWFL,8),(CCWUN,8),(CCWCT,16)      03700000
         DSGEN (CSWK,8),(CSWCA,24),(CSWUS,8),(CSWCS,8),(CSWCT,16)       03750000
         ORG   CSWUS                                                    03800000
         DSGEN (CSWUSB,1,0,7),(CSWCSB,1,0,7)                            03850000
         ORG                                                            03900000
         DSGEN (RSVD3,16),(FCUA,16)                                     03950000
         DSGEN (PUBDTC,8),(RSVD4,24),(SDRLNG,8)                         04000000
         DSGEN (RSVD5,8),(NCUA,16)                                      04050000
         DSGEN (IORETRY,16),(SNSLNG,16)                                 04100000
         DSGEN (SDRBYT,8,1,10),(SNB0,1,0,7)                             04150000
         DSGEN (SNB,8,EQU,SNB00),(SIOCNT,32)                            04200000
&CSECT   CSECT                                                          04250000
L28      EQU   28                                                       04300000
L36      EQU   36                                                       04350000
X20      EQU   X'20'                                                    04400000
X00      DC    2F'0'                                                    04450000
REGSAVE  DC    4F'0'               REG SAVE AREA                        04500000
ENTRYNO  DC    H'0'                ENTRY NUMBER                         04550000
         DS    0F                                                       04600000
*********************************************************************** 04650000
**                    SUMMARY ROUTINES ('SPECIAL' MACRO)             ** 04700000
*********************************************************************** 04750000
RETURN   LM    R5,R8,REGSAVE       RESTORE REGS                         04800000
         BR    R14                 RETURN                               04850000
         SPACE 3                                                        04900000
ADDUP    EQU   *                                                        04950000
         LH    R6,L0(R5)           LOAD SUM CTR                         05000000
         LA    R6,L1(R6)           ADD ONE TO CTR                       05050000
         STH   R6,L0(R5)           SAVE CTR                             05100000
         LA    R5,L2(R5)           BUMP SUM CTR PTR                     05150000
         BR    R8                  RETURN                               05200000
         SPACE 3                                                        05250000
OBRCNT   DS    0H                                                       05300000
         STM   R5,R8,REGSAVE       SAVE REGS                            05350000
         LR    R5,R3               GET COUNTER PTR                      05400000
         TM    SWITCH1,X20         OBR SHORT RECORD ?                   05450000
         BNO   OBRLNG              NO,BRANCH TO LONG                    05500000
         BAL   R8,ADDUP            YES, BR TO BUMP CTR                  05550000
         LA    R5,L2(R5)           BUMP POINTER                         05600000
         MVC   REG8(4),SHORTA      SKIP SNB SUM FOR SHORT REC           05650000
         B     RETURN              RETURN                               05700000
SHORTA   DC    A(SHORTB-6)                                              05750000
         SPACE 3                                                        05800000
OBRLNG   DS    0H                                                       05850000
         LA    R5,L2(R5)           BUMP CTR PTR                         05900000
         BAL   R8,ADDUP            GO ADD TO CTR                        05950000
         B     RETURN              RETURN                               06000000
         SPACE 3                                                        06050000
XDATE1   DS    0H                                                       06100000
         STM   R5,R8,REGSAVE       SAVE REGS                            06150000
         CLC   DATE(L4),X00        IS DATE 0 ?                          06200000
         BE    RETURN              YES, BR                              06250000
         CLC   L0(L4,R3),X00       IS LO DATE / ?                       06300000
         BNE   XDATE2              NO, BR                               06350000
         MVC   L0(L4,R3),DATE      MOVE DATE IN                         06400000
XDATE2   EQU   *                                                        06450000
         CLC   DATE(L4),L0(R3)     CHECK FOR LO DATE                    06500000
         BL    SAVELOW             IT IS LOWER, BRANCH                  06550000
         CLC   DATE(L4),L4(R3)     CHECK FOR HI DATE                    06600000
         BNH   RETURN              IT IS IN BETWEEN, BR                 06650000
         MVC   L4(L4,R3),DATE      IT IS HIGHER, SAVE IT                06700000
         B     RETURN              RETURN                               06750000
         SPACE 3                                                        06800000
SAVELOW  EQU   *                                                        06850000
         MVC   L0(L4,R3),DATE      IT IS LO, SAVE IT                    06900000
         B     RETURN              RETURN                               06950000
         EJECT                                                          07000000
SENTRIES DS    0F                                                       07050000
         SPECIAL XDATE1,0,SPACE=4                                       07100000
         SPECIAL OBRCNT,0,SPACE=2                                       07150000
         SUM   SNB00                                                    07200000
         SUM   SNB01                                                    07250000
         SUM   SNB02                                                    07300000
         SUM   SNB03                                                    07350000
         SUM   SNB04                                                    07400000
         SUM   SNB05                                                    07450000
         SUM   SNB06                                                    07500000
         SUM   SNB07                                                    07550000
SHORTB   EQU   *                                                        07600000
         PROLOG                                                         07650000
         DSGEN (LODATE,32),(HIDATE,32),(OBRST,16),(OBRLG,16)            07700000
         DSGEN (SUMSNB0,16,0,7)                                         07750000
DSECTLEN EQU   *                                                        07800000
         EJECT                                                          07850000
&CSECT   CSECT                                                          07900000
         DS    0F                                                       07950000
*********************************************************************** 08000000
**                  EDIT ROUTINES ('ROUTINE' MACRO)                  ** 08050000
*********************************************************************** 08100000
RETURN1  LM    R5,R8,REGSAVE1           RESTORE REGS                    08150000
         BR    R14                 RETURN                               08200000
         SPACE 3                                                        08250000
SETCPUNO EQU   *                                                        08300000
         STM   R5,R8,REGSAVE1           SAVE REGS                       08350000
         SR    R5,R5                    ZERO R5                         08400000
         IC    R5,L0(R4)                PICK UP CPU TYPE                08450000
         SLL   R5,L8                      V                             08500000
         IC    R5,L1(R4)                  V                             08550000
         LTR   R5,R5                    IS IT ZERO ?                    08600000
         BNZ   RETURN1                  NO, BRANCH                      08650000
         LA    R6,L36                   BACK UP POINTER 36 BYTES        08700000
         SR    R3,R6                     TO PUT IN NEW INFO             08750000
         MVC   L0(L6,R3),SHARED         SAY MODEL = SHARED     @Z427VLS 08800000
         B     RETURN1                  RETURN                          08850000
         SPACE 3                                                        08900000
SETDATE  EQU   *                                                        08950000
         UNPK  WORK(L8),L0(L4,R4)       UNPACK A DATE                   09000000
         MVZ   WORK+L7(L1),WORK         MOVE IN ZONE BITS               09050000
         MVC   L0(L3,R3),WORK+L5        MOVE DAY TO PRINT BUFF          09100000
         MVC   L5(L2,R3),WORK+L3        MOVE YEAR TO RPINT BUFF         09150000
         BR    R14                      RETURN                          09200000
         SPACE 3                                                        09250000
         FREETAB                                                        09300000
         SPACE 3                                                        09350000
WORK     DC    D'0'                WORK AREA                            09400000
REGSAVE1 DC    4F'0'               REG SAVE AREA                        09450000
SHARED   DC    C'SHARED'                                                09500000
         EJECT                                                          09550000
         ENTRIES PAGE                                                   09600000
         SPACE 2                                                        09650000
         LINE  (97,18),(1,103),SKIP=2                                   09700000
         HEX   YCPU,0,2B                                                09750000
         HEX   YSER,0,3B                                                09800000
         ROUTINE YCPU,SETCPUNO                                          09850000
         LABEL 'SUMMARY OF I/O RECORDS  TYPE - OBR          SOURCE - OU*09900000
               TBOARD         DEVICE TYPE 1017    MODEL-','SERIAL NO.'  09950000
         SPACE 2                                                        10000000
         LINE  ,(13),SKIP=1                                             10050000
         LABEL 'DAY YEAR    DAY YEAR'                                   10100000
         SPACE 2                                                        10150000
         LINE  (13,12),(1,20),SKIP=1                                    10200000
         ROUTINE LODATE,SETDATE                                         10250000
         ROUTINE HIDATE,SETDATE                                         10300000
         LABEL 'DATE RANGE','TO'                                        10350000
         SPACE 2                                                        10400000
         LINE  (75),(50),SKIP=1                                         10450000
         CONVT OBRLG,2,4                                                10500000
         LABEL 'NO. OBR LONG RECORDS'                                   10550000
         SPACE 2                                                        10600000
         LINE  ,                                                        10650000
         CONVT OBRST,2,4                                                10700000
         LABEL 'NO. OBR SHORT RECORDS'                                  10750000
         SPACE 2                                                        10800000
         LINE  ,(74),SKIP=1                                             10850000
         LABEL '------'                                                 10900000
         SPACE 2                                                        10950000
         LINE  (31,44),(9,41),SKIP=2                                    11000000
         HEX   YCUA,0,2B                                                11050000
         CONVT YNOREC,2,4                                               11100000
         LABEL ' CHANNEL UNIT ADDRESS','TOTAL NUMBER OF RECORDS'        11150000
         SPACE 2                                                        11200000
         LINE  (46,1),(30,14),SKIP=2                                    11250000
         LABEL 'SENSE BYTE SUMMARY'                                     11300000
         SPACE 2                                                        11350000
         LINE  ,,SKIP=1                                                 11400000
         CONVT SUMSNB00,2,4                                             11450000
         LABEL 'COMMAND REJECT'                                         11500000
         SPACE 2                                                        11550000
         LINE  ,                                                        11600000
         CONVT SUMSNB01,2,4                                             11650000
         LABEL 'INTRVN REQD'                                            11700000
         SPACE 2                                                        11750000
         LINE  ,                                                        11800000
         CONVT SUMSNB02,2,4                                             11850000
         LABEL 'BUS OUT CHK'                                            11900000
         SPACE 2                                                        11950000
         LINE  ,                                                        12000000
         CONVT SUMSNB03,2,4                                             12050000
         LABEL 'EQUIP CHECK'                                            12100000
         SPACE 2                                                        12150000
         LINE  ,                                                        12200000
         CONVT SUMSNB04,2,4                                             12250000
         LABEL 'DATA CHECK'                                             12300000
         SPACE 2                                                        12350000
         LINE  ,                                                        12400000
         CONVT SUMSNB05,2,4                                             12450000
         LABEL 'OVERRUN'                                                12500000
         SPACE 2                                                        12550000
         LINE  ,                                                        12600000
         LABEL 'BIT 6','NO SUM'                                         12650000
         SPACE 2                                                        12700000
         LINE  ,                                                        12750000
         CONVT SUMSNB07,2,4                                             12800000
         LABEL 'BROKEN TAPE'                                            12850000
         SPACE 2                                                        12900000
         ETEPILOG                                                       12950000
         END                                                            13000000
./  ADD  SSI=90101244,NAME=IFCS1018
         TITLE 'IFCS1018 - SUMMARY TABLE FOR 1018'                      00050000
*********************************************************************** 00100000
**                                                                   ** 00150000
**                                                                   ** 00200000
**  MODULE NAME:   IFCS1018                                          ** 00250000
**                                                                   ** 00300000
**  DESCRIPTIVE-NAME:   SUMMARY TABLE FOR 1018 (DEVICE CODE 0832)    ** 00350000
**                                                                   ** 00400000
**  COPYRIGHT:  NONE                                                 ** 00450000
**                                                                   ** 00500000
**  STATUS:     N/A                                                  ** 00550000
**                                                                   ** 00600000
**  FUNCTION:   PROVIDES SUMMARY SUPPORT FOR 1018 OBR RECORDS        ** 00650000
**                                                                   ** 00700000
**  NOTES:                                                           ** 00750000
**                                                                   ** 00800000
**    DEPENDENCIES:   THIS MODULE WAS ASSEMBLED USING THE EBCDIC     ** 00850000
**                 CHARACTER SET.  IT MUST BE REASSEMBLED IF ANOTHER ** 00900000
**                CHARACTER SET IS TO BE USED AT EXECUTION.         **  00950000
**                                                                   ** 01000000
**    RESTRICTIONS:   N/A                                            ** 01050000
**                                                                   ** 01100000
**    REGISTER-CONVENTIONS:                                          ** 01150000
**          REG 2  = POINTER TO THE OBR RECORD (SUMMARY PORTION)     ** 01200000
**                   POINTER TO THE SUMMARY COUNTERS (EDIT PORTION)  ** 01250000
**          REG 3  = POINTER TO THE PRINT BUFFER (EDIT PORTION)      ** 01300000
**                   POINTER TO CURRENT SUMMARY COUNTER (SUMMARY)    ** 01350000
**          REG 4  = POINTER TO DATA ITEM REFERENCED IN 'ROUTINE'    ** 01400000
**          REG 14 = RETURN POINT FROM 'ROUTINE'                     ** 01450000
**          REG 15 = SET TO ZERO TO SUPPRESS PRINTING LINE           ** 01500000
**                                                                   ** 01550000
**    PATCH-LABEL:  PATCH                                            ** 01600000
**                                                                   ** 01650000
**  MODULE TYPE:    DATA                                             ** 01700000
**                                                                   ** 01750000
**    PROCESSOR:    370 ASSEMBLER                                    ** 01800000
**                                                                   ** 01850000
**    MODULE-SIZE:                                                   ** 01900000
**                                                                   ** 01950000
**    ATTRIBUTES:   SERIALLY REUSABLE                                ** 02000000
**                                                                   ** 02050000
**  ENTRY-POINT:    N/A                                              ** 02100000
**                                                                   ** 02150000
**    LINKAGE:      N/A                                              ** 02200000
**                                                                   ** 02250000
**  INPUT:     N/A                                                   ** 02300000
**                                                                   ** 02350000
**  OUTPUT:    N/A                                                   ** 02400000
**                                                                   ** 02450000
**  EXIT-NORMAL:     N/A                                             ** 02500000
**                                                                   ** 02550000
**  EXIT-ERROR:      N/A                                             ** 02600000
**                                                                   ** 02650000
**  EXTERNAL-REFERENCES:                                             ** 02700000
**                                                                   ** 02750000
**    ROUTINES:        NONE                                          ** 02800000
**                                                                   ** 02850000
**    DATA-AREAS:      NONE                                          ** 02900000
**                                                                   ** 02950000
**    CONTROL-BLOCKS:  NONE                                          ** 03000000
**                                                                   ** 03050000
**    TABLES:          NONE                                          ** 03100000
**                                                                   ** 03150000
**    MACROS:    EDIT AND SUMMARY TABLE MACROS                       ** 03200000
**                                                                   ** 03250000
*********************************************************************** 03300000
         EJECT                                                          03350000
         GBLC  &DSECT,&CSECT                                            03400000
         SUMMARY NAME=IFCS1018                                          03450000
         DSGEN (KEY,8),(LEVEL,8),(SWITCH,8,0,3)                         03500000
         DSGEN (RECNUM,8),(RSVD2,8),(DATE,32),(TIME,32),(VERSION,8)     03550000
         DSGEN (CPUSER,24),(CPUID,16),(MCEL,16)                         03600000
         DSGEN (TASKID,64)                                              03650000
         DSGEN (CCWCC,8),(CCWDA,24),(CCWFL,8),(CCWUN,8),(CCWCT,16)      03700000
         DSGEN (CSWK,8),(CSWCA,24),(CSWUS,8),(CSWCS,8),(CSWCT,16)       03750000
         ORG   CSWUS                                                    03800000
         DSGEN (CSWUSB,1,0,7),(CSWCSB,1,0,7)                            03850000
         ORG                                                            03900000
         DSGEN (RSVD3,16),(FCUA,16)                                     03950000
         DSGEN (PUBDTC,8),(RSVD4,24),(SDRLNG,8)                         04000000
         DSGEN (RSVD5,8),(NCUA,16)                                      04050000
         DSGEN (IORETRY,16),(SNSLNG,16)                                 04100000
         DSGEN (SDRBYT,8,1,10),(SNB0,1,0,7)                             04150000
         DSGEN (SNB,8,EQU,SNB00),(SIOCNT,32)                            04200000
&CSECT   CSECT                                                          04250000
L28      EQU   28                                                       04300000
L36      EQU   36                                                       04350000
X20      EQU   X'20'                                                    04400000
X00      DC    2F'0'                                                    04450000
REGSAVE  DC    4F'0'                    REG SAVE AREA                   04500000
ENTRYNO  DC    H'0'                     ENTRY NUMBER                    04550000
         DS    0F                                                       04600000
*********************************************************************** 04650000
**                    SUMMARY ROUTINES ('SPECIAL' MACRO)             ** 04700000
*********************************************************************** 04750000
RETURN   LM    R5,R8,REGSAVE            RESTORE REGS                    04800000
         BR    R14                      RETURN                          04850000
         SPACE 3                                                        04900000
ADDUP    EQU   *                                                        04950000
         LH    R6,L0(R5)                LOAD SUM CTR                    05000000
         LA    R6,L1(R6)                ADD ONE TO CTR                  05050000
         STH   R6,L0(R5)                SAVE CTR                        05100000
         LA    R5,L2(R5)                BUMP SUM CTR PTR                05150000
         BR    R8                       RETURN                          05200000
         SPACE 3                                                        05250000
OBRCNT   DS    0H                                                       05300000
         STM   R5,R8,REGSAVE            SAVE REGS                       05350000
         LR    R5,R3                    GET COUNTER PTR                 05400000
         TM    SWITCH1,X20              OBR SHORT RECORD ?              05450000
         BNO   OBRLNG                   NO,BRANCH TO LONG               05500000
         BAL   R8,ADDUP                 YES, BR TO BUMP CTR             05550000
         LA    R5,L2(R5)               BUMP POINTER                     05600000
         MVC   REG8(4),SHORTA      SKIP SNB SUM FOR SHORT               05650000
         B     RETURN                   RETURN                          05700000
SHORTA   DC    A(SHORTB-6)                                              05750000
         SPACE 3                                                        05800000
OBRLNG   DS    0H                                                       05850000
         LA    R5,L2(R5)                BUMP CTR PTR                    05900000
         BAL   R8,ADDUP                 GO ADD TO CTR                   05950000
         B     RETURN                   RETURN                          06000000
         SPACE 3                                                        06050000
XDATE1   DS    0H                                                       06100000
         STM   R5,R8,REGSAVE            SAVE REGS                       06150000
         CLC   DATE(L4),X00             IS DATE 0 ?                     06200000
         BE    RETURN                   YES, BR                         06250000
         CLC   L0(L4,R3),X00            IS LO DATE / ?                  06300000
         BNE   XDATE2                   NO, BR                          06350000
         MVC   L0(L4,R3),DATE           MOVE DATE IN                    06400000
XDATE2   EQU   *                                                        06450000
         CLC   DATE(L4),L0(R3)          CHECK FOR LO DATE               06500000
         BL    SAVELOW                  IT IS LOWER, BRANCH             06550000
         CLC   DATE(L4),L4(R3)          CHECK FOR HI DATE               06600000
         BNH   RETURN                   IT IS IN BETWEEN, BR            06650000
         MVC   L4(L4,R3),DATE           IT IS HIGHER, SAVE IT           06700000
         B     RETURN                   RETURN                          06750000
         SPACE 3                                                        06800000
SAVELOW  EQU   *                                                        06850000
         MVC   L0(L4,R3),DATE           IT IS LO, SAVE IT               06900000
         B     RETURN                   RETURN                          06950000
         EJECT                                                          07000000
SENTRIES DS    0F                                                       07050000
         SPECIAL XDATE1,0,SPACE=4                                       07100000
         SPECIAL OBRCNT,0,SPACE=2                                       07150000
         SUM   SNB00                                                    07200000
         SUM   SNB01                                                    07250000
         SUM   SNB02                                                    07300000
         SUM   SNB03                                                    07350000
         SUM   SNB04                                                    07400000
         SUM   SNB05                                                    07450000
         SUM   SNB06                                                    07500000
         SUM   SNB07                                                    07550000
SHORTB   EQU   *                                                        07600000
         PROLOG                                                         07650000
         DSGEN (LODATE,32),(HIDATE,32),(OBRST,16),(OBRLG,16)            07700000
         DSGEN (SUMSNB0,16,0,7)                                         07750000
DSECTLEN EQU   *                                                        07800000
         EJECT                                                          07850000
&CSECT   CSECT                                                          07900000
         DS    0F                                                       07950000
*********************************************************************** 08000000
**                  EDIT ROUTINES ('ROUTINE' MACRO)                  ** 08050000
*********************************************************************** 08100000
RETURN1  LM    R5,R8,REGSAVE1           RESTORE REGS                    08150000
         BR    R14                 RETURN                               08200000
         SPACE 3                                                        08250000
SETCPUNO EQU   *                                                        08300000
         STM   R5,R8,REGSAVE1           SAVE REGS                       08350000
         SR    R5,R5                    ZERO R5                         08400000
         ICM   R5,B'0011',L0(R4)   PICK UP CPU TYPE                     08450000
         LTR   R5,R5                    IS IT ZERO ?                    08500000
         BNZ   RETURN1                  NO, BRANCH                      08550000
         LA    R6,L36                   BACK UP POINTER 36 BYTES        08600000
         SR    R3,R6                     TO PUT IN NEW INFO             08650000
         MVC   L0(L6,R3),SHARED         SAY MODEL = SHARED     @Z427VLS 08700000
         B     RETURN1                  RETURN                          08750000
         SPACE 3                                                        08800000
SETDATE  EQU   *                                                        08850000
         UNPK  WORK(L8),L0(L4,R4)       UNPACK A DATE                   08900000
         MVZ   WORK+L7(L1),WORK         MOVE IN ZONE BITS               08950000
         MVC   L0(L3,R3),WORK+L5        MOVE DAY TO PRINT BUFF          09000000
         MVC   L5(L2,R3),WORK+L3        MOVE YEAR TO RPINT BUFF         09050000
         BR    R14                      RETURN                          09100000
         SPACE 3                                                        09150000
         FREETAB                                                        09200000
         SPACE 3                                                        09250000
WORK     DC    D'0'                WORK AREA                            09300000
REGSAVE1 DC    4F'0'               REG SAVE AREA                        09350000
SHARED   DC    C'SHARED'                                                09400000
         EJECT                                                          09450000
         ENTRIES PAGE                                                   09500000
         LINE  (97,18),(1,103),SKIP=2                                   09550000
         HEX   YCPU,0,2B                                                09600000
         HEX   YSER,0,3B                                                09650000
         ROUTINE YCPU,SETCPUNO                                          09700000
         LABEL 'SUMMARY OF I/O RECORDS  TYPE - OBR          SOURCE - OU*09750000
               TBOARD         DEVICE TYPE 1018    MODEL-','SERIAL NO.'  09800000
         SPACE 2                                                        09850000
         LINE  ,(13),SKIP=1                                             09900000
         LABEL 'DAY YEAR    DAY YEAR'                                   09950000
         SPACE 2                                                        10000000
         LINE  (13,12),(1,20),SKIP=1                                    10050000
         ROUTINE LODATE,SETDATE                                         10100000
         ROUTINE HIDATE,SETDATE                                         10150000
         LABEL 'DATE RANGE','TO'                                        10200000
         SPACE 2                                                        10250000
         LINE  (75),(50),SKIP=1                                         10300000
         CONVT OBRLG,2,4                                                10350000
         LABEL 'NO. OBR LONG RECORDS'                                   10400000
         SPACE 2                                                        10450000
         LINE  ,                                                        10500000
         CONVT OBRST,2,4                                                10550000
         LABEL 'NO. OBR SHORT RECORDS'                                  10600000
         SPACE 2                                                        10650000
         LINE  ,(74),SKIP=1                                             10700000
         LABEL '------'                                                 10750000
         SPACE 2                                                        10800000
         LINE  (31,44),(9,41),SKIP=2                                    10850000
         HEX   YCUA,0,2B                                                10900000
         CONVT YNOREC,2,4                                               10950000
         LABEL ' CHANNEL UNIT ADDRESS','TOTAL NUMBER OF RECORDS'        11000000
         SPACE 2                                                        11050000
         LINE  (46,1),(30,14),SKIP=2                                    11100000
         LABEL 'SENSE BYTE SUMMARY'                                     11150000
         SPACE 2                                                        11200000
         LINE  ,,SKIP=1                                                 11250000
         CONVT SUMSNB00,2,4                                             11300000
         LABEL 'COMMAND REJECT'                                         11350000
         SPACE 2                                                        11400000
         LINE  ,                                                        11450000
         CONVT SUMSNB01,2,4                                             11500000
         LABEL 'INTRVN REQD'                                            11550000
         SPACE 2                                                        11600000
         LINE  ,                                                        11650000
         CONVT SUMSNB02,2,4                                             11700000
         LABEL 'BUS OUT CHK'                                            11750000
         SPACE 2                                                        11800000
         LINE  ,                                                        11850000
         CONVT SUMSNB03,2,4                                             11900000
         LABEL 'EQUIP CHECK'                                            11950000
         SPACE 2                                                        12000000
         LINE  ,                                                        12050000
         CONVT SUMSNB04,2,4                                             12100000
         LABEL 'DATA CHECK'                                             12150000
         SPACE 2                                                        12200000
         LINE  ,                                                        12250000
         LABEL 'BIT 5','NO SUM'                                         12300000
         SPACE 2                                                        12350000
         LINE  ,                                                        12400000
         LABEL 'BIT 6','NO SUM'                                         12450000
         SPACE 2                                                        12500000
         LINE  ,                                                        12550000
         LABEL 'BIT 7','NO SUM'                                         12600000
         SPACE 2                                                        12650000
         ETEPILOG                                                       12700000
         END                                                            12750000
./  ADD  SSI=90101245,NAME=IFCS33XX
 GBLC   &CSECT,&DSECT                                                   00050000
        SUMMARY   NAME=IFCS33XX                                         00100000
&CSECT  CSECT                                                           00150000
GOTODASD STM  R0,R15,REGSAVE                                            00200000
         L    R15,ADDRDASD                                              00250000
         LA   R1,1                                                      00300000
         BALR R14,R15                                                   00350000
         LM   R0,R15,REGSAVE                                            00400000
         BR   R14                                                       00450000
PATCH    DC   10F'0'                                                    00500000
         DC   S(PATCH)                                                  00550000
XSAVE    DC   4F'0'                                                     00600000
REGSAVE  DC   16F'0'                                                    00650000
ADDRDASD DC   V(IFCSDASD)                                               00700000
         DC   S(PATCH)                                                  00750000
SENTRIES DS   0F                                                        00800000
         SPECIAL  GOTODASD,00000000,SPACE=0                             00850000
         PROLOG                                                         00900000
         DS   22C                                                       00950000
         DSGEN   (DUMMY,8)                                              01000000
         ORG    DUMMY                                                   01050000
         DS   16F                                                       01100000
         ORG                                                            01150000
DSECTLEN DS   0F                                                        01200000
IFCS33XX CSECT                                                          01250000
         FREETAB                                                        01300000
PRINTTOT STM   R0,R15,FSAVE                                             01350000
         L     R15,ADRDASD2                                             01400000
         LR    R4,R1                                                    01450000
         SR    R1,R1                                                    01500000
         BALR  R14,R15                                                  01550000
         LM    R0,R15,FSAVE                                             01600000
         SR    R15,R15                                                  01650000
         BR    R14                                                      01700000
ADRDASD2 DC    V(IFCSDASD)                                              01750000
         ENTRIES  PAGE                                                  01800000
         LINE  (1,1),(1,1)                                              01850000
         ROUTINE DUMMY,PRINTTOT                                         01900000
         LABEL ''                                                       01950000
         ETEPILOG                                                       02000000
         END                                                            02050000
./  ADD  SSI=90101246,NAME=IFCS5424
         TITLE 'IFCS5424 - SUMMARY TABLE FOR 5424'                      00050000
         GBLC  &CSECT,&DSECT                                            00100000
*********************************************************************** 00150000
**                                                                   ** 00200000
**                                                                   ** 00250000
**  MODULE NAME:   IFCS5424                                          ** 00300000
**                                                                   ** 00350000
**  DESCRIPTIVE-NAME:   SUMMARY TABLE FOR 5424 (DEVICE CODE 0000)    ** 00400000
**                                                                   ** 00450000
**  COPYRIGHT:  NONE                                                 ** 00500000
**                                                                   ** 00550000
**  STATUS:     N/A                                                  ** 00600000
**                                                                   ** 00650000
**  FUNCTION:   PROVIDES SUMMARY SUPPORT FOR 5424 OBR RECORDS        ** 00700000
**                                                                   ** 00750000
**  NOTES:                                                           ** 00800000
**                                                                   ** 00850000
**    DEPENDENCIES:   THIS MODULE WAS ASSEMBLED USING THE EBCDIC     ** 00900000
**                 CHARACTER SET.  IT MUST BE REASSEMBLED IF ANOTHER ** 00950000
**                 CHARACTER SET IS TO BE USED AT EXECUTION.         ** 01000000
**                                                                   ** 01050000
**    RESTRICTIONS:   N/A                                            ** 01100000
**                                                                   ** 01150000
**    REGISTER-CONVENTIONS:                                          ** 01200000
**          REG 2  = POINTER TO THE OBR RECORD (SUMMARY PORTION)     ** 01250000
**                   POINTER TO THE SUMMARY COUNTERS (EDIT PORTION)  ** 01300000
**          REG 3  = POINTER TO THE PRINT BUFFER (EDIT PORTION)      ** 01350000
**                   POINTER TO CURRENT SUMMARY COUNTER (SUMMARY)    ** 01400000
**          REG 4  = POINTER TO DATA ITEM REFERENCED IN 'ROUTINE'    ** 01450000
**          REG 14 = RETURN POINT FROM 'ROUTINE'                     ** 01500000
**          REG 15 = SET TO ZERO TO SUPPRESS PRINTING LINE           ** 01550000
**                                                                   ** 01600000
**    PATCH-LABEL:  PATCH                                            ** 01650000
**                                                                   ** 01700000
**  MODULE TYPE:    DATA                                             ** 01750000
**                                                                   ** 01800000
**    PROCESSOR:    370 ASSEMBLER                                    ** 01850000
**                                                                   ** 01900000
**    MODULE-SIZE:                                                   ** 01950000
**                                                                   ** 02000000
**    ATTRIBUTES:   SERIALLY REUSABLE                                ** 02050000
**                                                                   ** 02100000
**  ENTRY-POINT:    N/A                                              ** 02150000
**                                                                   ** 02200000
**    LINKAGE:      N/A                                              ** 02250000
**                                                                   ** 02300000
**  INPUT:     N/A                                                   ** 02350000
**                                                                   ** 02400000
**  OUTPUT:    N/A                                                   ** 02450000
**                                                                   ** 02500000
**  EXIT-NORMAL:     N/A                                             ** 02550000
**                                                                   ** 02600000
**  EXIT-ERROR:      N/A                                             ** 02650000
**                                                                   ** 02700000
**  EXTERNAL-REFERENCES:                                             ** 02750000
**                                                                   ** 02800000
**    ROUTINES:        NONE                                          ** 02850000
**                                                                   ** 02900000
**    DATA-AREAS:      NONE                                          ** 02950000
**                                                                   ** 03000000
**    CONTROL-BLOCKS:  NONE                                          ** 03050000
**                                                                   ** 03100000
**    TABLES:          NONE                                          ** 03150000
**                                                                   ** 03200000
**    MACROS:    EDIT AND SUMMARY TABLE MACROS                       ** 03250000
**                                                                   ** 03300000
*********************************************************************** 03350000
         EJECT                                                          03400000
         SUMMARY  NAME=IFCS5424                                         03450000
         DSGEN (KEY,8),(LEVEL,8),(SWITCH,8,0,3)                         03500000
         DSGEN (RECNUM,8),(RSVD2,8),(DATE,32),(TIME,32),(VERSION,8)     03550000
         DSGEN (CPUSER,24),(CPUID,16),(MCEL,16)                         03600000
         DSGEN (TASKID,64)                                              03650000
         DSGEN (CCWCC,8),(CCWDA,24),(CCWFL,8),(CCWUN,8),(CCWCT,16)      03700000
         DSGEN (CSWK,8),(CSWCA,24),(CSWUS,8),(CSWCS,8),(CSWCT,16)       03750000
         ORG   CSWUS                                                    03800000
         DSGEN (CSWUSB,1,0,7),(CSWCSB,1,0,7)                            03850000
         ORG                                                            03900000
         DSGEN (RSVD3,16),(FCUA,16)                                     03950000
         DSGEN (PUBDTC,8),(RSVD4,24),(SDRLNG,8)                         04000000
         DSGEN (RSVD5,8),(NCUA,16)                                      04050000
         DSGEN (IORETRY,16),(SNSLNG,16)                                 04100000
         DSGEN (SNB,1,0,12,0,7)                                         04150000
         ORG   SNB00                                                    04200000
         DSGEN (SNB,8,0,9),(SNBA,8),(SNBB,8),(SNBC,8),(SIOCNT,32)       04250000
         EJECT                                                          04300000
&CSECT   CSECT                                                          04350000
L28      EQU   28                                                       04400000
L46      EQU   46                                                       04450000
X20      EQU   X'20'                                                    04500000
ENTRYNO  DC    H'0'                ENTRY NUMBER                         04550000
M3       DC    F'3'                                                     04600000
X00      DC    2F'0'                                                    04650000
REGSAVE  DC    4F'0'                    REG SAVE AREA                   04700000
ONE      DC    H'1'                                                     04750000
         DS    0F                                                       04800000
         SPACE 3                                                        04850000
*********************************************************************** 04900000
**                    SUMMARY ROUTINES ('SPECIAL' MACRO)             ** 04950000
*********************************************************************** 05000000
RETURN   LM    R5,R8,REGSAVE            RESTORE REGS                    05050000
         BR    R14                      RETURN                          05100000
         SPACE 3                                                        05150000
XDATE1   DS    0H                                                       05200000
         STM   R5,R8,REGSAVE            SAVE REGS                       05250000
         CLC   DATE(L4),X00             IS DATE 0 ?                     05300000
         BE    RETURN                   YES, BR                         05350000
         CLC   L0(L4,R3),X00            IS LO DATE / ?                  05400000
         BNE   XDATE2                   NO, BR                          05450000
         MVC   L0(L4,R3),DATE           MOVE DATE IN                    05500000
XDATE2   EQU   *                                                        05550000
         CLC   DATE(L4),L0(R3)          CHECK FOR LO DATE               05600000
         BL    SAVELOW                  IT IS LOWER, BRANCH             05650000
         CLC   DATE(L4),L4(R3)          CHECK FOR HI DATE               05700000
         BNH   RETURN                   IT IS IN BETWEEN, BR            05750000
         MVC   L4(L4,R3),DATE           IT IS HIGHER, SAVE IT           05800000
         B     RETURN                   RETURN                          05850000
         SPACE 3                                                        05900000
SAVELOW  EQU   *                                                        05950000
         MVC   L0(L4,R3),DATE           IT IS LO, SAVE IT               06000000
         B     RETURN                   RETURN                          06050000
         SPACE 3                                                        06100000
COUNTSIO EQU   *                                                        06150000
         STM   R5,R6,REGSAVE       SAVE REGS                            06200000
         ICM   R6,X'F',SIOCNT      GET SIO COUNTER                      06250000
         ICM   R5,X'F',L0(R3)      GET SUMMARY COUNTER                  06300000
         AR    R5,R6               ADD COUNTERS                         06350000
         STCM  R5,X'F',L0(R3)      STORE COUNTER                        06400000
         LM    R5,R6,REGSAVE       RESTORE REGS                         06450000
         BR    R14                 RETURN                               06500000
         SPACE 3                                                        06550000
RPCHECK  EQU   *                                                        06600000
         TM    SNB10,X'C0'         READ CHECK OR PUNCH CHECK?           06650000
         BZR   R14                 NO...RETURN                          06700000
         STM   R5,R6,REGSAVE       SAVE REGS                            06750000
         LR    R6,R3               GET @ COUNTERS                       06800000
         TM    SNB10,X'80'         READ CHECK?                          06850000
         BO    RP1                 YES...                               06900000
         LA    R6,L3(R6)           GO TO PUNCH COUNTERS                 06950000
RP1      IC    R5,SNB40            GET SENSE BYTE 4                     07000000
         SRL   R5,L5               GET RID OF BITS 3-7                  07050000
         N     R5,M3               JUST KEEP BITS 1,2 (TIER MASK)       07100000
         LA    R6,L0(R5,R6)        GET PROPER COUNTER FOR THIS TIER     07150000
         OC    L0(L1,R6),SNB50     OR SENSE BYTE 5 WITH COUNTER         07200000
         LM    R5,R6,REGSAVE       RESTORE REGS                         07250000
         BR    R14                                                      07300000
         SPACE 3                                                        07350000
FDCHECK  EQU   *                                                        07400000
         TM    SNB10,X'02'         FEED CHECK?                          07450000
         BZR   R14                 NO...GO AWAY                         07500000
         STM   R5,R6,REGSAVE       SAVE REGS                            07550000
         XR    R5,R5               CLEAR REG                            07600000
         IC    R5,SNB30            GET FEED CHECK CODE                  07650000
         BCTR  R5,R0               MINUS 1                              07700000
         SLL   R5,L1               TIMES 2                              07750000
         LH    R6,L0(R5,R3)        GET COUNTER                          07800000
         AH    R6,ONE              INCREMENT                            07850000
         STH   R6,L0(R5,R3)        STORE COUNTER                        07900000
         LM    R5,R6,REGSAVE       RESTORE REGS                         07950000
         BR    R14                 RETURN                               08000000
         EJECT                                                          08050000
SENTRIES DS    0F                                                       08100000
         SPECIAL XDATE1,0,SPACE=4                                       08150000
         SPACE                                                          08200000
         SPECIAL COUNTSIO,0,SPACE=2                                     08250000
         SPACE                                                          08300000
         SUM   SNB00                                                    08350000
         SUM   SNB01                                                    08400000
         SUM   SNB02                                                    08450000
         SUM   SNB03                                                    08500000
         SUM   SNB04                                                    08550000
         SUM   SNB05                                                    08600000
         SUM   SNB06                                                    08650000
         SUM   SNB07                                                    08700000
         SPACE                                                          08750000
         SUM   SNB10                                                    08800000
         SUM   SNB11                                                    08850000
         SUM   SNB12                                                    08900000
         SUM   SNB13                                                    08950000
         SUM   SNB14                                                    09000000
         SUM   SNB15                                                    09050000
         SUM   SNB16                                                    09100000
         SUM   SNB17                                                    09150000
         SPACE                                                          09200000
         SPECIAL RPCHECK,0,SPACE=3                                      09250000
         SPACE                                                          09300000
         SPECIAL FDCHECK,0,SPACE=22                                     09350000
         SPACE                                                          09400000
         PROLOG                                                         09450000
         DSGEN (LODATE,32),(HIDATE,32),(SIOSUM,32),(SNBSUM,16,0,1,0,7),*09500000
               (RCHK,8,1,3),(PCHK,8,1,3),(FCHK,16,1,22)                 09550000
DSECTLEN EQU   *                                                        09600000
         EJECT                                                          09650000
&CSECT   CSECT                                                          09700000
*********************************************************************** 09750000
**                  EDIT ROUTINES ('ROUTINE' MACRO)                  ** 09800000
*********************************************************************** 09850000
RETURN1  LM    R5,R8,REGSAVE1           RESTORE REGS                    09900000
         BR    R14                 RETURN                               09950000
         SPACE 3                                                        10000000
SETCPUNO EQU   *                                                        10050000
         STM   R5,R8,REGSAVE1           SAVE REGS                       10100000
         SR    R5,R5                    ZERO R5                         10150000
         IC    R5,L0(R4)                PICK UP CPU TYPE                10200000
         SLL   R5,L8                      V                             10250000
         IC    R5,L1(R4)                  V                             10300000
         LTR   R5,R5                    IS IT ZERO ?                    10350000
         BNZ   RETURN1                  NO, BRANCH                      10400000
         LA    R6,L46                   BACK UP POINTER 46 BYTES        10450000
         SR    R3,R6                     TO PUT IN NEW INFO             10500000
         MVC   L0(L6,R3),SHARED         SAY MODEL = SHARED     @Z427VLS 10550000
         B     RETURN1                  RETURN                          10600000
         SPACE 3                                                        10650000
SETDATE  EQU   *                                                        10700000
         UNPK  WORK(L8),L0(L4,R4)       UNPACK A DATE                   10750000
         MVZ   WORK+L7(L1),WORK         MOVE IN ZONE BITS               10800000
         MVC   L0(L3,R3),WORK+L5        MOVE DAY TO PRINT BUFF          10850000
         MVC   L5(L2,R3),WORK+L3        MOVE YEAR TO RPINT BUFF         10900000
         BR    R14                      RETURN                          10950000
         SPACE 3                                                        11000000
NOSUMIT  ST    R5,REGSAVE1         SAVE REG                             11050000
         LR    R5,R3               GET PRINT POSITION                   11100000
         BCTR  R5,R0               MINUS 1                              11150000
         BCTR  R5,R0               MINUS ANOTHER 1                      11200000
         MVC   L0(L6,R5),NOSUM     MOVE IN LABEL                        11250000
         L     R5,REGSAVE1         RESTORE REG                          11300000
         BR    R14                 RETURN                               11350000
         SPACE 3                                                        11400000
BKUP     SH    R3,EIGHT            BACK UP 8 CHARS                      11450000
         BR    R14                 RETURN                               11500000
         SPACE 3                                                        11550000
         FREETAB                                                        11600000
         SPACE 3                                                        11650000
WORK     DC    D'0'                WORK AREA                            11700000
REGSAVE1 DC    4F'0'               REG SAVE AREA                        11750000
EIGHT    DC    H'8'                                                     11800000
SHARED   DC    C'SHARED'                                                11850000
NOSUM    DC    C'NO SUM'                                                11900000
         EJECT                                                          11950000
         ENTRIES PAGE                                                   12000000
         SPACE 2                                                        12050000
         LINE  (97,18),(1,103),SKIP=2                                   12100000
         HEX   YCPU,0,2B                                                12150000
         HEX   YSER,0,3B                                                12200000
         ROUTINE YCPU,SETCPUNO                                          12250000
         LABEL 'SUMMARY OF I/O RECORDS  TYPE - OBR          SOURCE - OU*12300000
               TBOARD         DEVICE TYPE 5424    MODEL-','SERIAL NO.'  12350000
         SPACE 2                                                        12400000
         LINE  ,(13),SKIP=1                                             12450000
         LABEL 'DAY YEAR    DAY YEAR'                                   12500000
         SPACE 2                                                        12550000
         LINE  (13,12),(1,20),SKIP=2                                    12600000
         ROUTINE LODATE,SETDATE                                         12650000
         ROUTINE HIDATE,SETDATE                                         12700000
         LABEL 'DATE RANGE','TO'                                        12750000
         SPACE 2                                                        12800000
         LINE  (31,30),(25,20),SKIP=2                                   12850000
         HEX   YCUA,0,2B                                                12900000
         CONVT YNOREC,2,4                                               12950000
         CONVT SIOSUM,4,8                                               13000000
         LABEL 'CUA -','TOTAL RECORDS -','  TOTAL START I/O COUNT -'    13050000
         SPACE 2                                                        13100000
         LINE  ,(45,1),SKIP=2                                           13150000
         LABEL 'SENSE DATA'                                             13200000
         SPACE 2                                                        13250000
         LINE  ,(23,36),SKIP=2                                          13300000
         LABEL 'BYTE 0 SUMMARY','BYTE 1 SUMMARY'                        13350000
         SPACE 2                                                        13400000
         LINE  (41,36),(21,36),SKIP=1                                   13450000
         ROUTINE SNBSUM00,NOSUMIT                                       13500000
         CONVT SNBSUM10,2,4                                             13550000
         LABEL 'COMMAND REJECT','READ CHECK'                            13600000
         SPACE 2                                                        13650000
         LINE  ,                                                        13700000
         CONVT SNBSUM01,2,4                                             13750000
         CONVT SNBSUM11,2,4                                             13800000
         LABEL 'INTERV REQD','PUNCH CHECK'                              13850000
         SPACE 2                                                        13900000
         LINE  ,                                                        13950000
         CONVT SNBSUM02,2,4                                             14000000
         CONVT SNBSUM12,2,4                                             14050000
         LABEL 'BUS OUT CHECK','CYCLE-STEAL ORUN'                       14100000
         SPACE 2                                                        14150000
         LINE  ,                                                        14200000
         CONVT SNBSUM03,2,4                                             14250000
         CONVT SNBSUM13,2,4                                             14300000
         LABEL 'EQUIP CHECK','PRINT DATA CHK'                           14350000
         SPACE 2                                                        14400000
         LINE  ,                                                        14450000
         CONVT SNBSUM04,2,4                                             14500000
         CONVT SNBSUM14,2,4                                             14550000
         LABEL 'DATA CHECK','PRINT CLUTCH CHK'                          14600000
         SPACE 2                                                        14650000
         LINE  ,                                                        14700000
         ROUTINE SNBSUM05,NOSUMIT                                       14750000
         CONVT SNBSUM15,2,4                                             14800000
         LABEL 'BIT 5 - UNUSED','HOPPER CHECK'                          14850000
         SPACE 2                                                        14900000
         LINE  ,                                                        14950000
         ROUTINE SNBSUM06,NOSUMIT                                       15000000
         CONVT SNBSUM16,2,4                                             15050000
         LABEL 'NO CARD AVAIL','FEED CHECK'                             15100000
         SPACE 2                                                        15150000
         LINE  ,,SKIP=3                                                 15200000
         ROUTINE SNBSUM07,NOSUMIT                                       15250000
         CONVT SNBSUM17,2,4                                             15300000
         LABEL 'BIT 7 - UNUSED','PUNCH DATA CHK'                        15350000
         SPACE 2                                                        15400000
         LINE  ,(20,25),SKIP=2                                          15450000
         LABEL 'READ CHECK SUMMARY','PUNCH CHECK SUMMARY','FEED CHECK S*15500000
               UMMARY'                                                  15550000
         SPACE 2                                                        15600000
         LINE  ,(23,25),SKIP=1                                          15650000
         LABEL 'ROW  DCBA8421','ROW  DCBA8421'                          15700000
         SPACE 2                                                        15750000
         LINE  (28,25),(20,25),SKIP=1                                   15800000
         BIN   (RCHK1,0,8),(PCHK1,0,8)                                  15850000
         ROUTINE FCHK1,BKUP                                             15900000
         CONVT FCHK1,2,4                                                15950000
         LABEL 'TIER 1','TIER 1','HOPPER EJECT CHECK'                   16000000
         SPACE 2                                                        16050000
         LINE  ,                                                        16100000
         BIN   (RCHK2,0,8),(PCHK2,0,8)                                  16150000
         ROUTINE FCHK2,BKUP                                             16200000
         CONVT FCHK2,2,4                                                16250000
         LABEL 'TIER 2','TIER 2','READ INJECT CHECK'                    16300000
         SPACE 2                                                        16350000
         LINE  ,                                                        16400000
         BIN   (RCHK3,0,8),(PCHK3,0,8)                                  16450000
         ROUTINE FCHK3,BKUP                                             16500000
         CONVT FCHK3,2,4                                                16550000
         LABEL 'TIER 3','TIER 3','READ STATION CHECK'                   16600000
         SPACE 2                                                        16650000
         LINE  (95,1),(70,1),SKIP=1                                     16700000
         CONVT FCHK4,2,4                                                16750000
         LABEL 'READ EJECT CHECK'                                       16800000
         SPACE 2                                                        16850000
         LINE  ,                                                        16900000
         CONVT FCHK5,2,4                                                16950000
         LABEL 'EARLY WAIT EJECT CHECK'                                 17000000
         SPACE 2                                                        17050000
         LINE  ,                                                        17100000
         CONVT FCHK6,2,4                                                17150000
         LABEL 'WAIT EJECT CHECK'                                       17200000
         SPACE 2                                                        17250000
         LINE  ,                                                        17300000
         CONVT FCHK7,2,4                                                17350000
         LABEL 'PUNCH INJECT CHECK'                                     17400000
         SPACE 2                                                        17450000
         LINE  ,                                                        17500000
         CONVT FCHK8,2,4                                                17550000
         LABEL 'PUNCH REG 1 CHECK'                                      17600000
         SPACE 2                                                        17650000
         LINE  ,                                                        17700000
         CONVT FCHK9,2,4                                                17750000
         LABEL 'PUNCH STATION CHECK'                                    17800000
         SPACE 2                                                        17850000
         LINE  ,                                                        17900000
         CONVT FCHK10,2,4                                               17950000
         LABEL 'PUNCH REG 2 CHECK'                                      18000000
         SPACE 2                                                        18050000
         LINE  ,                                                        18100000
         CONVT FCHK11,2,4                                               18150000
         LABEL 'PUNCH TRANSPORT CHECK'                                  18200000
         SPACE 2                                                        18250000
         LINE  ,                                                        18300000
         CONVT FCHK12,2,4                                               18350000
         LABEL 'PUNCH EJECT CHECK'                                      18400000
         SPACE 2                                                        18450000
         LINE  ,                                                        18500000
         CONVT FCHK13,2,4                                               18550000
         LABEL 'CORNER STATION CHECK'                                   18600000
         SPACE 2                                                        18650000
         LINE  ,                                                        18700000
         CONVT FCHK14,2,4                                               18750000
         LABEL 'CORNER EJECT CHECK'                                     18800000
         SPACE 2                                                        18850000
         LINE  ,                                                        18900000
         CONVT FCHK15,2,4                                               18950000
         LABEL 'PRINT INJECT CHECK'                                     19000000
         SPACE 2                                                        19050000
         LINE  ,                                                        19100000
         CONVT FCHK16,2,4                                               19150000
         LABEL 'PRINT STATION CHECK'                                    19200000
         SPACE 2                                                        19250000
         LINE  ,                                                        19300000
         CONVT FCHK17,2,4                                               19350000
         LABEL 'PRINT EJECT CHECK'                                      19400000
         SPACE 2                                                        19450000
         LINE  ,                                                        19500000
         CONVT FCHK18,2,4                                               19550000
         LABEL 'STACKER TNSPORT CHECK'                                  19600000
         SPACE 2                                                        19650000
         LINE  ,                                                        19700000
         CONVT FCHK19,2,4                                               19750000
         LABEL 'STACKER JAM CHECK'                                      19800000
         SPACE 2                                                        19850000
         LINE  ,                                                        19900000
         CONVT FCHK20,2,4                                               19950000
         LABEL 'GEAR EMITTER CHECK'                                     20000000
         SPACE 2                                                        20050000
         LINE  ,                                                        20100000
         CONVT FCHK21,2,4                                               20150000
         LABEL 'FIRE CB CHECK'                                          20200000
         SPACE 2                                                        20250000
         LINE  ,,SKIP=2                                                 20300000
         CONVT FCHK22,2,4                                               20350000
         LABEL 'COVER OPEN CHECK'                                       20400000
         SPACE 2                                                        20450000
         ETEPILOG                                                       20500000
         END                                                            20550000
./  ADD  SSI=90101247,NAME=IFCTHRSH
         TITLE 'IFCTHRSH - CONTROL FOR THRESHOLD PROCESSING'            00001000
IFCTHRSH CSECT ,                                                   0001 00002000
@MAINENT DS    0H                                                  0001 00003000
         USING *,@15                                               0001 00004000
         B     @PROLOG                                             0001 00005000
         DC    AL1(16)                                             0001 00006000
         DC    C'IFCTHRSH  79.011'                                 0001 00007000
         DROP  @15                                                      00008000
@PROLOG  ST    @14,12(,@13)                                        0001 00009000
         STM   @00,@12,20(@13)                                     0001 00010000
         BALR  @12,0                                               0001 00011000
@PSTART  LA    @11,4095(,@12)                                      0001 00012000
         LA    @10,4095(,@11)                                      0001 00013000
         LA    @05,4095(,@10)                                      0001 00014000
         LA    @04,4095(,@05)                                      0001 00015000
         LA    @03,4095(,@04)                                      0001 00016000
         USING @PSTART,@12                                         0001 00017000
         USING @PSTART+4095,@11                                    0001 00018000
         USING @PSTART+8190,@10                                    0001 00019000
         USING @PSTART+12285,@05                                   0001 00020000
         USING @PSTART+16380,@04                                   0001 00021000
         USING @PSTART+20475,@03                                   0001 00022000
         ST    @13,@SA00001+4                                      0001 00023000
         LA    @14,@SA00001                                        0001 00024000
         ST    @14,8(,@13)                                         0001 00025000
         LR    @13,@14                                             0001 00026000
         B     @PB00002                                            0213 00027000
SORT     STM   @14,@12,@SA00002                                    0213 00028000
*SRTCONT = ((NUMENT - ONE) * TWELVE) + CURRPTR;            /*@0001VLS*/ 00029000
         L     @08,CURRPTR                                         0215 00030000
         L     @15,NUMENT                                          0215 00031000
         BCTR  @15,0                                               0215 00032000
         MH    @15,@CH00033                                        0215 00033000
         ALR   @15,@08                                             0215 00034000
         ST    @15,SRTCONT                                         0215 00035000
*R7 = CURRPTR;                     /* START OF THE SORT TABLE        */ 00036000
         LR    R7,@08                                              0216 00037000
*GENERATE REFS(CONTRTAB);                                  /*@0001VLS*/ 00038000
         LA    R15,TWELVE          LOAD THE INCREMENT VALUE             00039000
         L     R9,SRTCONT          LOAD THE MAX LIMIT                   00040000
         LR    R1,R7               SET UP THE STOP LIMIT ON BACK UP     00041000
         B     DOIT                GO AROUND THIS CODE FIRST TIME       00042000
LOOPBCK1 ALR   R7,R15            MOVE THE POINTER TO NEXT ENTRY         00043000
         CR    R7,R9               ARE WE POINTING TO LAST ENTRY        00044000
         BNL   DONE                FINISHED WITH THE SORT SO EXIT       00045000
DOIT    CLC   CONTRTAB(TWELVE,R7),CONTRTAB+TWELVE(R7)                   00046000
         BNH   LOOPBCK1            DONT NEED TO SORT ITEM               00047000
         XC    CONTRTAB(TWELVE,R7),CONTRTAB+TWELVE(R7)                  00048000
         XC    CONTRTAB+TWELVE(TWELVE,R7),CONTRTAB(R7)                  00049000
         XC    CONTRTAB(TWELVE,R7),CONTRTAB+TWELVE(R7)                  00050000
         LR    R6,R7               SET NEW POINTER(BACKWARD)            00051000
LOOPBCK2 SR   R6,R15              POINT TO LAST ENTRY                   00052000
         CR    R6,R1               DONT BACK OUT OF THE TABLE           00053000
         BL    LOOPBCK1            START WITH NEXT ENTRY                00054000
         CLC   CONTRTAB(TWELVE,R6),CONTRTAB+TWELVE(R6)                  00055000
         BNH   LOOPBCK1            NO FUTHER SHUFFEL THIS SAMPLE        00056000
         XC    CONTRTAB+TWELVE(TWELVE,R6),CONTRTAB(R6)                  00057000
         XC    CONTRTAB(TWELVE,R6),CONTRTAB+TWELVE(R6)                  00058000
         XC    CONTRTAB+TWELVE(TWELVE,R6),CONTRTAB(R6)                  00059000
         B     LOOPBCK2            DOES IT NEED TO BE MOVED AGAIN       00060000
DONE    EQU   *                                                         00061000
TWELVE EQU 12                          /*                  @D3503SG*/   00062000
*RESPECIFY (R6,R9) UNRESTRICTED;                           /*@0001VLS*/ 00063000
*IF DEBUG8 = ON THEN                                               0219 00064000
         TM    DEBUG8(R2),B'10000000'                              0219 00065000
         BNO   @RF00219                                            0219 00066000
*  CALL DUMP;                    /*DUMP THE SORT TABLE       @0001VLS*/ 00067000
         BAL   @14,DUMP                                            0220 00068000
*MSGDS = CHARS(1);               /* EREPPT DATA SET OUTPUT   @0001VLS*/ 00069000
@RF00219 MVC   MSGDS(1),CHARS                                      0221 00070000
*END;                                                      /*@0001VLS*/ 00071000
@EL00002 DS    0H                                                  0222 00072000
@EF00002 DS    0H                                                  0222 00073000
@ER00002 LM    @14,@12,@SA00002                                    0222 00074000
         BR    @14                                                 0222 00075000
*/*                                                          @0001VLS*/ 00076000
*/* OUTPUT THE TWO HEADERS AT THE TOP OF THE PAGE.           @0001VLS*/ 00077000
*/*                                                          @0001VLS*/ 00078000
*OUTHED12: PROC;                                           /*@0001VLS*/ 00079000
OUTHED12 STM   @14,@12,@SA00003                                    0223 00080000
*  CALL PAGEJECT;                        /* NEW PAGE         @0001VLS*/ 00081000
         BAL   @14,PAGEJECT                                        0224 00082000
*  MSGADDR(40:39+LENGTH(CUASH1)) = CUASH1;                 /*@0001VLS*/ 00083000
         MVC   MSGADDR+39(44),CUASH1                               0225 00084000
*  CALL PRINTIT;                                           /*@0001VLS*/ 00085000
         BAL   @14,PRINTIT                                         0226 00086000
*  CALL CONVERT(CONTRCUA,CUASH2C,TWO); /*CONVERT LOW CUA     @D3506GB*/ 00087000
         MVC   @AL00001+4(8),@AL00227                              0227 00088000
         L     @06,CURRPTR                                         0227 00089000
         ST    @06,@AL00001                                        0227 00090000
         LA    @01,@AL00001                                        0227 00091000
         BAL   @14,CONVERT                                         0227 00092000
*  RECCPU=CPU;                                             /*@D3506GB*/ 00093000
         L     @06,CURRPTR                                         0228 00094000
         MVC   RECCPU(3),CPU(@06)                                  0228 00095000
*  RECCUA=CONTRCUA;                                        /*@D3506GB*/ 00096000
         MVC   RECCUA(2),CONTRCUA(@06)                             0229 00097000
*  CALL CONVCNTR;                      /*CONVERT HIGH BY CONTROL CARD * 00098000
         BAL   @14,CONVCNTR                                        0230 00099000
*  IF VALIDCON=OFF THEN                                            0231 00100000
         TM    VALIDCON,B'00010000'                                0231 00101000
         BNZ   @RF00231                                            0231 00102000
*    DO;                                                   /*@D3506GB*/ 00103000
*      CALL PRINTIT;                                       /*@D3506GB*/ 00104000
         BAL   @14,PRINTIT                                         0233 00105000
*      CALL IFCMSG(90,ADDR(MSGADDR));  /*CUA RANGE IS > 16   @D3506GB*/ 00106000
         LA    @06,MSGADDR                                         0234 00107000
         ST    @06,@AFTEMPS                                        0234 00108000
         L     @15,ADIFCMSG(,R2)                                   0234 00109000
         LA    @01,@AL00234                                        0234 00110000
         BALR  @14,@15                                             0234 00111000
*      CALL PRINTIT;                                       /*@D3506GB*/ 00112000
         BAL   @14,PRINTIT                                         0235 00113000
*    END;                                                  /*@D3506GB*/ 00114000
*  ELSE;                                                   /*@D3506GB*/ 00115000
@RF00231 DS    0H                                                  0238 00116000
*  CALL CONVERT(HIGHCUA,CUASH2C2,TWO); /*CONVERT HIGH CUA    @D3506GB*/ 00117000
         LA    @01,@AL00238                                        0238 00118000
         BAL   @14,CONVERT                                         0238 00119000
*  MSGADDR(40:39+LENGTH(CUASH2)) = CUASH2;                 /*@0001VLS*/ 00120000
         MVC   MSGADDR+39(44),CUASH2                               0239 00121000
*  CALL PRINTIT;                                           /*@0001VLS*/ 00122000
         BAL   @14,PRINTIT                                         0240 00123000
*  MYLINCT = MYLINCT - TWO;                                /*@0001VLS*/ 00124000
         L     @06,MYLINCT                                         0241 00125000
         BCTR  @06,0                                               0241 00126000
         BCTR  @06,0                                               0241 00127000
         ST    @06,MYLINCT                                         0241 00128000
*  HEAD1 = ON;                                             /*@0001VLS*/ 00129000
         OI    HEAD1,B'00010000'                                   0242 00130000
* END;                                                     /*@0001VLS*/ 00131000
@EL00003 DS    0H                                                  0243 00132000
@EF00003 DS    0H                                                  0243 00133000
@ER00003 LM    @14,@12,@SA00003                                    0243 00134000
         BR    @14                                                 0243 00135000
*/*                                                          @0001VLS*/ 00136000
*/* OUTPUT THE NO RECORDS EXCEEDING THRESHOLD MESSAGE.       @0001VLS*/ 00137000
*/*                                                          @0001VLS*/ 00138000
*NOHEAD1: PROC;                                            /*@0001VLS*/ 00139000
NOHEAD1  STM   @14,@12,@SA00004                                    0244 00140000
*  CALL OUTHED12;                        /* DISMOUNT HEADERS @0001VLS*/ 00141000
         BAL   @14,OUTHED12                                        0245 00142000
*  CALL FINDDATE;                        /* FIND THE DATE RANGE      */ 00143000
         BAL   @14,FINDDATE                                        0246 00144000
*  CALL CONVERT (LOWDATE,TEMPAREA,THREE);                  /*@0001VLS*/ 00145000
         MVC   @AL00001+4(8),@AL00247                              0247 00146000
         L     @06,DATEPTR                                         0247 00147000
         LA    @06,LOWDATE(,@06)                                   0247 00148000
         ST    @06,@AL00001                                        0247 00149000
         LA    @01,@AL00001                                        0247 00150000
         BAL   @14,CONVERT                                         0247 00151000
*  CUASH6D1 = TEMPAREA(1:5);                               /*@0001VLS*/ 00152000
         MVC   CUASH6D1(5),TEMPAREA                                0248 00153000
*  CALL CONVERT (HIDATE,TEMPAREA,THREE);                   /*@0001VLS*/ 00154000
         MVC   @AL00001+4(8),@AL00249                              0249 00155000
         L     @06,DATEPTR                                         0249 00156000
         LA    @06,HIDATE(,@06)                                    0249 00157000
         ST    @06,@AL00001                                        0249 00158000
         LA    @01,@AL00001                                        0249 00159000
         BAL   @14,CONVERT                                         0249 00160000
*  CUASH6D2 = TEMPAREA(1:5);                               /*@0001VLS*/ 00161000
         MVC   CUASH6D2(5),TEMPAREA                                0250 00162000
*  MSGADDR(20:19+LENGTH(CUASH6)) = CUASH6;                 /*@0001VLS*/ 00163000
         MVC   MSGADDR+19(42),CUASH6                               0251 00164000
*  CALL PRINTIT;                                           /*@0001VLS*/ 00165000
         BAL   @14,PRINTIT                                         0252 00166000
*  CALL PRINTIT;                                           /*@0001VLS*/ 00167000
         BAL   @14,PRINTIT                                         0253 00168000
*  MYLINCT = MYLINCT - TWO;                                /*@0001VLS*/ 00169000
         L     @06,MYLINCT                                         0254 00170000
         BCTR  @06,0                                               0254 00171000
         BCTR  @06,0                                               0254 00172000
         ST    @06,MYLINCT                                         0254 00173000
* END;                                                     /*@0001VLS*/ 00174000
@EL00004 DS    0H                                                  0255 00175000
@EF00004 DS    0H                                                  0255 00176000
@ER00004 LM    @14,@12,@SA00004                                    0255 00177000
         BR    @14                                                 0255 00178000
*/*                                                          @0001VLS*/ 00179000
*/* OUTPUT THE NO PERMANENT ERRORS MESSAGE.                  @0001VLS*/ 00180000
*/*                                                          @0001VLS*/ 00181000
*NOHEAD2: PROC;                                            /*@0001VLS*/ 00182000
NOHEAD2  STM   @14,@12,@SA00005                                    0256 00183000
*  MSGADDR = SPACER;                     /* SPACER LINE      @0001VLS*/ 00184000
         MVC   MSGADDR(132),SPACER                                 0257 00185000
*  CALL PRINTIT;                                           /*@0001VLS*/ 00186000
         BAL   @14,PRINTIT                                         0258 00187000
*  CALL PRINTIT;                                           /*@0001VLS*/ 00188000
         BAL   @14,PRINTIT                                         0259 00189000
*  MYLINCT = MYLINCT - TWO;                                /*@0001VLS*/ 00190000
         L     @06,MYLINCT                                         0260 00191000
         BCTR  @06,0                                               0260 00192000
         BCTR  @06,0                                               0260 00193000
         ST    @06,MYLINCT                                         0260 00194000
*  IF MYLINCT < FOUR THEN                /* EJECT TO NEW PAGE IF REST*/ 00195000
         C     @06,@CF00037                                        0261 00196000
         BNL   @RF00261                                            0261 00197000
*    CALL PAGEJECT;                      /* OF REPORT WILL NOT FIT   */ 00198000
         BAL   @14,PAGEJECT                                        0262 00199000
*  MSGADDR(44:43+LENGTH(CUAPH1)) = CUAPH1;                 /*@0001VLS*/ 00200000
@RF00261 MVC   MSGADDR+43(25),CUAPH1                               0263 00201000
*  CALL PRINTIT;                                           /*@0001VLS*/ 00202000
         BAL   @14,PRINTIT                                         0264 00203000
*  CALL PRINTIT;                                           /*@0001VLS*/ 00204000
         BAL   @14,PRINTIT                                         0265 00205000
*  CALL FINDDATE;                        /* FIND THE DATE RANGE      */ 00206000
         BAL   @14,FINDDATE                                        0266 00207000
*  CALL CONVERT(LOWDATE,TEMPAREA,THREE);                   /*@0001VLS*/ 00208000
         MVC   @AL00001+4(8),@AL00267                              0267 00209000
         L     @06,DATEPTR                                         0267 00210000
         LA    @06,LOWDATE(,@06)                                   0267 00211000
         ST    @06,@AL00001                                        0267 00212000
         LA    @01,@AL00001                                        0267 00213000
         BAL   @14,CONVERT                                         0267 00214000
*  CUAPH5D1 = TEMPAREA(1:5);                               /*@0001VLS*/ 00215000
         MVC   CUAPH5D1(5),TEMPAREA                                0268 00216000
*  CALL CONVERT(HIDATE,TEMPAREA,THREE);                    /*@0001VLS*/ 00217000
         MVC   @AL00001+4(8),@AL00269                              0269 00218000
         L     @06,DATEPTR                                         0269 00219000
         LA    @06,HIDATE(,@06)                                    0269 00220000
         ST    @06,@AL00001                                        0269 00221000
         LA    @01,@AL00001                                        0269 00222000
         BAL   @14,CONVERT                                         0269 00223000
*  CUAPH5D2 = TEMPAREA(1:5);                               /*@0001VLS*/ 00224000
         MVC   CUAPH5D2(5),TEMPAREA                                0270 00225000
*  MSGADDR(20:19+LENGTH(CUAPH5)) = CUAPH5;                 /*@0001VLS*/ 00226000
         MVC   MSGADDR+19(47),CUAPH5                               0271 00227000
*  CALL PRINTIT;                                           /*@0001VLS*/ 00228000
         BAL   @14,PRINTIT                                         0272 00229000
*  CALL PRINTIT;                                           /*@0001VLS*/ 00230000
         BAL   @14,PRINTIT                                         0273 00231000
*  MYLINCT = MYLINCT - FOUR;                               /*@0001VLS*/ 00232000
         L     @06,MYLINCT                                         0274 00233000
         SL    @06,@CF00037                                        0274 00234000
         ST    @06,MYLINCT                                         0274 00235000
*  HEAD2 = ON;                                             /*@0001VLS*/ 00236000
         OI    HEAD2,B'00001000'                                   0275 00237000
*END;                                                      /*@0001VLS*/ 00238000
@EL00005 DS    0H                                                  0276 00239000
@EF00005 DS    0H                                                  0276 00240000
@ER00005 LM    @14,@12,@SA00005                                    0276 00241000
         BR    @14                                                 0276 00242000
*/*                                                          @0001VLS*/ 00243000
*/* EJECT TO A NEW PAGE.                                     @0001VLS*/ 00244000
*/*                                                          @0001VLS*/ 00245000
*PAGEJECT: PROC;                                           /*@0001VLS*/ 00246000
PAGEJECT STM   @14,@12,@SA00006                                    0277 00247000
* MSGCC = EJECT;                                           /*@0001VLS*/ 00248000
         MVI   MSGCC,X'89'                                         0278 00249000
* CALL PRINTIT;                                            /*@0001VLS*/ 00250000
         BAL   @14,PRINTIT                                         0279 00251000
* MSGCC = SPACE;                                           /*@0001VLS*/ 00252000
         MVI   MSGCC,X'09'                                         0280 00253000
* MYLINCT = LINECT - ONE;                                  /*@0001VLS*/ 00254000
         LH    @06,LINECT(,R2)                                     0281 00255000
         BCTR  @06,0                                               0281 00256000
         ST    @06,MYLINCT                                         0281 00257000
*END;                                                      /*@0001VLS*/ 00258000
@EL00006 DS    0H                                                  0282 00259000
@EF00006 DS    0H                                                  0282 00260000
@ER00006 LM    @14,@12,@SA00006                                    0282 00261000
         BR    @14                                                 0282 00262000
*/*                                                          @0001VLS*/ 00263000
*/* OUTPUT THE PERMANENT ERROR SECTION OF THE REPORT.  IF THE HEADERS*/ 00264000
*/* HAVE NOT BEEN PRINTED, PRINT THE SPACER, AND THEN THE HEADERS.   */ 00265000
*/* IF THE HEADERS FOR THE DISMOUNT SECTION HAVE NOT BEEN PRINTED,   */ 00266000
*/* PRINT THE HEADERS, AND THE MESSAGE THAT NO RECORDS EXCEED        */ 00267000
*/* THRESHOLD.                                               @0001VLS*/ 00268000
*/*                                                          @0001VLS*/ 00269000
*CUAPERMS: PROC;                                           /*@0001VLS*/ 00270000
CUAPERMS STM   @14,@12,@SA00007                                    0283 00271000
* RECCPU = CPU;                          /* INITIALIZE FOR SEARCH TO */ 00272000
         L     @06,CURRPTR                                         0284 00273000
         MVC   RECCPU(3),CPU(@06)                                  0284 00274000
* RECCUA = CONTRCUA;                     /* FIND DATE RANGE. @0001VLS*/ 00275000
         MVC   RECCUA(2),CONTRCUA(@06)                             0285 00276000
* IF HEAD1 = OFF THEN                                              0286 00277000
         TM    HEAD1,B'00010000'                                   0286 00278000
         BNZ   @RF00286                                            0286 00279000
*    CALL NOHEAD1;                       /* SECTION ONE HEADERS      */ 00280000
         BAL   @14,NOHEAD1                                         0287 00281000
* IF HEAD2 = OFF THEN                                              0288 00282000
@RF00286 TM    HEAD2,B'00001000'                                   0288 00283000
         BNZ   @RF00288                                            0288 00284000
*    DO;                                                   /*@0001VLS*/ 00285000
*      MSGADDR = SPACER;                 /* SPACER LINE      @0001VLS*/ 00286000
         MVC   MSGADDR(132),SPACER                                 0290 00287000
*      CALL PRINTIT;                                       /*@0001VLS*/ 00288000
         BAL   @14,PRINTIT                                         0291 00289000
*      CALL PRINTIT;                     /* BLANK LINE       @0001VLS*/ 00290000
         BAL   @14,PRINTIT                                         0292 00291000
*      MYLINCT = MYLINCT - TWO;                            /*@0001VLS*/ 00292000
         L     @06,MYLINCT                                         0293 00293000
         BCTR  @06,0                                               0293 00294000
         BCTR  @06,0                                               0293 00295000
         ST    @06,MYLINCT                                         0293 00296000
*      IF MYLINCT < ELEVEN THEN          /* EJECT TO A NEW PAGE IF   */ 00297000
         C     @06,@CF00034                                        0294 00298000
         BNL   @RF00294                                            0294 00299000
*        CALL PAGEJECT;                  /* REST OF REPORT WONT FIT  */ 00300000
         BAL   @14,PAGEJECT                                        0295 00301000
*      MSGADDR(44:43+LENGTH(CUAPH1)) = CUAPH1;             /*@0001VLS*/ 00302000
@RF00294 MVC   MSGADDR+43(25),CUAPH1                               0296 00303000
*      CALL PRINTIT;                                       /*@0001VLS*/ 00304000
         BAL   @14,PRINTIT                                         0297 00305000
*      MSGADDR(74:73+LENGTH(CUAPH2)) = CUAPH2;             /*@0001VLS*/ 00306000
         MVC   MSGADDR+73(11),CUAPH2                               0298 00307000
*      CALL PRINTIT;                                       /*@0001VLS*/ 00308000
         BAL   @14,PRINTIT                                         0299 00309000
*      MSGADDR(81:80+LENGTH(CUAPH3)) = CUAPH3;             /*@0001VLS*/ 00310000
         MVC   MSGADDR+80(42),CUAPH3                               0300 00311000
*      CALL PRINTIT;                                       /*@0001VLS*/ 00312000
         BAL   @14,PRINTIT                                         0301 00313000
*      MSGADDR = CUAPH4;                                   /*@0001VLS*/ 00314000
         MVI   MSGADDR+120,C' '                                    0302 00315000
         MVC   MSGADDR+121(11),MSGADDR+120                         0302 00316000
         MVC   MSGADDR(120),CUAPH4                                 0302 00317000
*      CALL PRINTIT;                                       /*@0001VLS*/ 00318000
         BAL   @14,PRINTIT                                         0303 00319000
*      CALL PRINTIT;                                       /*@0001VLS*/ 00320000
         BAL   @14,PRINTIT                                         0304 00321000
*      MYLINCT = MYLINCT - FIVE;                           /*@0001VLS*/ 00322000
         L     @06,MYLINCT                                         0305 00323000
         SL    @06,@CF00036                                        0305 00324000
         ST    @06,MYLINCT                                         0305 00325000
*      HEAD2 = ON;                                         /*@0001VLS*/ 00326000
         OI    HEAD2,B'00001000'                                   0306 00327000
*    END;                                                  /*@0001VLS*/ 00328000
* IF MYLINCT < SEVEN THEN                /* EJECT TO NEW PAGE IF REST*/ 00329000
@RF00288 L     @06,MYLINCT                                         0308 00330000
         C     @06,@CF00082                                        0308 00331000
         BNL   @RF00308                                            0308 00332000
*   DO;                                  /* OF REPORT WILL NOT FIT   */ 00333000
*     CALL PAGEJECT;                                       /*@0001VLS*/ 00334000
         BAL   @14,PAGEJECT                                        0310 00335000
*     MSGADDR(44:43+LENGTH(CUAPH1)) = CUAPH1;              /*@0001VLS*/ 00336000
         MVC   MSGADDR+43(25),CUAPH1                               0311 00337000
*     CALL PRINTIT;                                        /*@0001VLS*/ 00338000
         BAL   @14,PRINTIT                                         0312 00339000
*     MSGADDR(74:73+LENGTH(CUAPH2)) = CUAPH2;              /*@0001VLS*/ 00340000
         MVC   MSGADDR+73(11),CUAPH2                               0313 00341000
*     CALL PRINTIT;                                        /*@0001VLS*/ 00342000
         BAL   @14,PRINTIT                                         0314 00343000
*     MSGADDR(81:80+LENGTH(CUAPH3)) = CUAPH3;              /*@0001VLS*/ 00344000
         MVC   MSGADDR+80(42),CUAPH3                               0315 00345000
*     CALL PRINTIT;                                        /*@0001VLS*/ 00346000
         BAL   @14,PRINTIT                                         0316 00347000
*     MSGADDR = CUAPH4;                                    /*@0001VLS*/ 00348000
         MVI   MSGADDR+120,C' '                                    0317 00349000
         MVC   MSGADDR+121(11),MSGADDR+120                         0317 00350000
         MVC   MSGADDR(120),CUAPH4                                 0317 00351000
*     CALL PRINTIT;                                        /*@0001VLS*/ 00352000
         BAL   @14,PRINTIT                                         0318 00353000
*     CALL PRINTIT;                                        /*@0001VLS*/ 00354000
         BAL   @14,PRINTIT                                         0319 00355000
*     MYLINCT = MYLINCT - FIVE;                            /*@0001VLS*/ 00356000
         L     @06,MYLINCT                                         0320 00357000
         SL    @06,@CF00036                                        0320 00358000
         ST    @06,MYLINCT                                         0320 00359000
*   END;                                                   /*@0001VLS*/ 00360000
* CALL CONVERT (SECUA2,TEMPAREA,TWO);    /* SECONDARY CUA    @0001VLS*/ 00361000
@RF00308 MVC   @AL00001+4(8),@AL00322                              0322 00362000
         LA    @06,SECUA2(,R7)                                     0322 00363000
         ST    @06,@AL00001                                        0322 00364000
         LA    @01,@AL00001                                        0322 00365000
         BAL   @14,CONVERT                                         0322 00366000
* OUTDEV = TEMPAREA(2:4);                                  /*@0001VLS*/ 00367000
         MVC   OUTDEV(3),TEMPAREA+1                                0323 00368000
* IF OSER74XX ¬= HEXZEROS THEN                                     0324 00369000
         CLC   OSER74XX(2,R7),@CB00208                             0324 00370000
         BE    @RF00324                                            0324 00371000
*   CALL CONVBIN2(OSER74XX,OUTSER);      /* TAPE UNIT SERIAL NUMBER  */ 00372000
         LA    @06,OSER74XX(,R7)                                   0325 00373000
         ST    @06,@AL00001                                        0325 00374000
         LA    @06,OUTSER                                          0325 00375000
         ST    @06,@AL00001+4                                      0325 00376000
         LA    @01,@AL00001                                        0325 00377000
         BAL   @14,CONVBIN2                                        0325 00378000
* ELSE                                                             0326 00379000
*   OUTSER = NA;                                           /*@0001VLS*/ 00380000
         B     @RC00324                                            0326 00381000
@RF00324 MVC   OUTSER(5),@CC00495                                  0326 00382000
* IF SENSBIT3(1) = OFF THEN              /* PERMANENT ERROR  @0001VLS*/ 00383000
@RC00324 TM    SENSBIT3(R7),B'00010000'                            0327 00384000
         BNZ   @RF00327                                            0327 00385000
*   IF SENSBIT5(2) = ON THEN                                       0328 00386000
         TM    SENSBIT5+1(R7),B'00000100'                          0328 00387000
         BNO   @RF00328                                            0328 00388000
*     OUTERR = ERRTABC(1);                             /* PW @0001VLS*/ 00389000
         MVC   OUTERR(2),ERRTABC                                   0329 00390000
*   ELSE                                                           0330 00391000
*     IF CCWBYT0 = CB |                   /* IS IT MODE SET  @ZA35214*/ 00392000
*        CCWBYT0 = C3 |                   /* IS IT MODE SET  @ZA35214*/ 00393000
*        CCWBYT0 = D3 THEN                /* IS IT MODE SET  @ZA35214*/ 00394000
         B     @RC00328                                            0330 00395000
@RF00328 CLI   CCWBYT0(R7),X'CB'                                   0330 00396000
         BE    @RT00330                                            0330 00397000
         CLI   CCWBYT0(R7),X'C3'                                   0330 00398000
         BE    @RT00330                                            0330 00399000
         CLI   CCWBYT0(R7),X'D3'                                   0330 00400000
         BNE   @RF00330                                            0330 00401000
@RT00330 DS    0H                                                  0331 00402000
*       OUTERR = ERRTABC(11);             /* YES          EM @ZA35214*/ 00403000
         MVC   OUTERR(2),ERRTABC+340                               0331 00404000
*     ELSE                                                         0332 00405000
*       OUTERR = ERRTABC(2);                            /* PR @ZA35214* 00406000
         B     @RC00330                                            0332 00407000
@RF00330 MVC   OUTERR(2),ERRTABC+34                                0332 00408000
* ELSE                                                             0333 00409000
*   IF SENSBIT5(8) = ON THEN             /* EQUIPMENT CHECK  @0001VLS*/ 00410000
         B     @RC00327                                            0333 00411000
@RF00327 TM    SENSBIT5+7(R7),B'00000100'                          0333 00412000
         BNO   @RF00333                                            0333 00413000
*     OUTERR = ERRTABC(5);                             /* EE @0001VLS*/ 00414000
         MVC   OUTERR(2),ERRTABC+136                               0334 00415000
*   ELSE                                                           0335 00416000
*     IF SENSBIT7(8) = ON THEN                                     0335 00417000
         B     @RC00333                                            0335 00418000
@RF00333 TM    SENSBIT7+7(R7),B'00000001'                          0335 00419000
         BNO   @RF00335                                            0335 00420000
*       OUTERR = ERRTABC(7);                           /* EL @0001VLS*/ 00421000
         MVC   OUTERR(2),ERRTABC+204                               0336 00422000
*     ELSE                                                         0337 00423000
*       IF SENSBIT6(8) = ON THEN                                   0337 00424000
         B     @RC00335                                            0337 00425000
@RF00335 TM    SENSBIT6+7(R7),B'00000010'                          0337 00426000
         BNO   @RF00337                                            0337 00427000
*         OUTERR = ERRTABC(8);                         /* EP @0001VLS*/ 00428000
         MVC   OUTERR(2),ERRTABC+238                               0338 00429000
*       ELSE                                                       0339 00430000
*         IF SENSBIT3(8) = ON THEN                                 0339 00431000
         B     @RC00337                                            0339 00432000
@RF00337 TM    SENSBIT3+7(R7),B'00010000'                          0339 00433000
         BNO   @RF00339                                            0339 00434000
*           OUTERR = ERRTABC(11);                      /* EM @ZA35214*/ 00435000
         MVC   OUTERR(2),ERRTABC+340                               0340 00436000
*         ELSE                                                     0341 00437000
*           IF SENSBIT5(11) = ON THEN                              0341 00438000
         B     @RC00339                                            0341 00439000
@RF00339 TM    SENSBIT5+10(R7),B'00000100'                         0341 00440000
         BNO   @RF00341                                            0341 00441000
*             OUTERR = ERRTABC(9);                     /* ET @0001VLS*/ 00442000
         MVC   OUTERR(2),ERRTABC+272                               0342 00443000
*           ELSE                                                   0343 00444000
*             IF SENSBIT7(11) = ON THEN                            0343 00445000
         B     @RC00341                                            0343 00446000
@RF00341 TM    SENSBIT7+10(R7),B'00000001'                         0343 00447000
         BNO   @RF00343                                            0343 00448000
*               OUTERR = ERRTABC(10);                  /* EV @0001VLS*/ 00449000
         MVC   OUTERR(2),ERRTABC+306                               0344 00450000
*             ELSE                                                 0345 00451000
*               OUTERR = ERRTABC(4);                   /* EC @0001VLS*/ 00452000
         B     @RC00343                                            0345 00453000
@RF00343 MVC   OUTERR(2),ERRTABC+102                               0345 00454000
* PVOL = VOLID;                          /* VOLUME IDENTIFICATION    */ 00455000
@RC00343 DS    0H                                                  0346 00456000
@RC00341 DS    0H                                                  0346 00457000
@RC00339 DS    0H                                                  0346 00458000
@RC00337 DS    0H                                                  0346 00459000
@RC00335 DS    0H                                                  0346 00460000
@RC00333 DS    0H                                                  0346 00461000
@RC00327 MVC   PVOL(6),VOLID(R7)                                   0346 00462000
* CALL CONVERT (FAILCCW,PCCW,EIGHT);     /* FAILING CCW      @0001VLS*/ 00463000
         MVC   @AL00001+4(8),@AL00347                              0347 00464000
         LA    @06,FAILCCW(,R7)                                    0347 00465000
         ST    @06,@AL00001                                        0347 00466000
         LA    @01,@AL00001                                        0347 00467000
         BAL   @14,CONVERT                                         0347 00468000
* CALL CONVERT (CSW,PCSW,FOUR);          /* FAILING CSW      @0001VLS*/ 00469000
         MVC   @AL00001+4(8),@AL00348                              0348 00470000
         LA    @06,CSW(,R7)                                        0348 00471000
         ST    @06,@AL00001                                        0348 00472000
         LA    @01,@AL00001                                        0348 00473000
         BAL   @14,CONVERT                                         0348 00474000
* DO Z = ONE TO 24;                                        /*@0001VLS*/ 00475000
         LA    @06,1                                               0349 00476000
         ST    @06,Z                                               0349 00477000
@DL00349 DS    0H                                                  0350 00478000
*   CALL CONVERT (SENSE(Z),PSNSB(Z),ONE);  /* SENSE BYTES    @0001VLS*/ 00479000
         LA    @15,SENSE-1(@06,R7)                                 0350 00480000
         ST    @15,@AL00001                                        0350 00481000
         MH    @06,@CH00038                                        0350 00482000
         LA    @06,PSNSB-3(@06)                                    0350 00483000
         ST    @06,@AL00001+4                                      0350 00484000
         LA    @06,@CF00057                                        0350 00485000
         ST    @06,@AL00001+8                                      0350 00486000
         LA    @01,@AL00001                                        0350 00487000
         BAL   @14,CONVERT                                         0350 00488000
* END;                                                     /*@0001VLS*/ 00489000
         LA    @06,1                                               0351 00490000
         AL    @06,Z                                               0351 00491000
         ST    @06,Z                                               0351 00492000
         C     @06,@CF00227                                        0351 00493000
         BNH   @DL00349                                            0351 00494000
* CALL PRINTIT;                                            /*@0001VLS*/ 00495000
         BAL   @14,PRINTIT                                         0352 00496000
* MYLINCT = MYLINCT - ONE;                                 /*@0001VLS*/ 00497000
         L     @06,MYLINCT                                         0353 00498000
         BCTR  @06,0                                               0353 00499000
         ST    @06,MYLINCT                                         0353 00500000
*END;                                                      /*@0001VLS*/ 00501000
@EL00007 DS    0H                                                  0354 00502000
@EF00007 DS    0H                                                  0354 00503000
@ER00007 LM    @14,@12,@SA00007                                    0354 00504000
         BR    @14                                                 0354 00505000
*/********************************************************************/ 00506000
*/*                      8809DEV                             @D3503SG*/ 00507000
*/* OUTPUT THE PERMANENT ERROR SECTION OF THE REPORT.  IF THE HEADERS*/ 00508000
*/* HAVE NOT BEEN PRINTED, PRINT THE SPACER, AND THEN THE HEADERS.   */ 00509000
*/* IF THE HEADERS FOR THE DISMOUNT SECTION HAVE NOT BEEN PRINTED,   */ 00510000
*/* PRINT THE HEADERS, AND THE MESSAGE THAT NO RECORDS EXCEED        */ 00511000
*/* THRESHOLD.                                               @000@SSG*/ 00512000
*/********************************************************************/ 00513000
*SFPERMS: PROC;                                           /*@000@SSG*/  00514000
SFPERMS  STM   @14,@12,@SA00008                                    0355 00515000
* RECCPU = CPU;                          /* INITIALIZE FOR SEARCH TO */ 00516000
         L     @06,CURRPTR                                         0356 00517000
         MVC   RECCPU(3),CPU(@06)                                  0356 00518000
* RECCUA = CONTRCUA;                     /* FIND DATE RANGE. @000@SSG*/ 00519000
         MVC   RECCUA(2),CONTRCUA(@06)                             0357 00520000
* IF HEAD1 = OFF THEN                                              0358 00521000
         TM    HEAD1,B'00010000'                                   0358 00522000
         BNZ   @RF00358                                            0358 00523000
*    CALL NOHEAD1;                       /* SECTION ONE HEADERS      */ 00524000
         BAL   @14,NOHEAD1                                         0359 00525000
* IF HEAD2 = OFF THEN                                              0360 00526000
@RF00358 TM    HEAD2,B'00001000'                                   0360 00527000
         BNZ   @RF00360                                            0360 00528000
*    DO;                                                   /*@D3503SG*/ 00529000
*      MSGADDR = SPACER;                 /* SPACER LINE      @D3503SG*/ 00530000
         MVC   MSGADDR(132),SPACER                                 0362 00531000
*      CALL PRINTIT;                                       /*@D3503SG*/ 00532000
         BAL   @14,PRINTIT                                         0363 00533000
*      CALL PRINTIT;                     /* BLANK LINE       @D3503SG*/ 00534000
         BAL   @14,PRINTIT                                         0364 00535000
*      MYLINCT = MYLINCT - TWO;                            /*@D3503SG*/ 00536000
         L     @06,MYLINCT                                         0365 00537000
         BCTR  @06,0                                               0365 00538000
         BCTR  @06,0                                               0365 00539000
         ST    @06,MYLINCT                                         0365 00540000
*      IF MYLINCT < ELEVEN THEN          /* EJECT TO A NEW PAGE IF   */ 00541000
         C     @06,@CF00034                                        0366 00542000
         BNL   @RF00366                                            0366 00543000
*        CALL PAGEJECT;                  /* REST OF REPORT WONT FIT  */ 00544000
         BAL   @14,PAGEJECT                                        0367 00545000
*      MSGADDR(44:43+LENGTH(CUAPH1)) = CUAPH1;             /*@D3503SG*/ 00546000
@RF00366 MVC   MSGADDR+43(25),CUAPH1                               0368 00547000
*      CALL PRINTIT;                                       /*@D3503SG*/ 00548000
         BAL   @14,PRINTIT                                         0369 00549000
*      CALL PRINTIT;                                       /*@D3503SG*/ 00550000
         BAL   @14,PRINTIT                                         0370 00551000
*      MSGADDR = CUAPH6;                                   /*@D3503SG*/ 00552000
         MVI   MSGADDR+99,C' '                                     0371 00553000
         MVC   MSGADDR+100(32),MSGADDR+99                          0371 00554000
         MVC   MSGADDR(99),CUAPH6                                  0371 00555000
*      CALL PRINTIT;                                       /*@D3503SG*/ 00556000
         BAL   @14,PRINTIT                                         0372 00557000
*      MSGADDR =CUAPH7;                                    /*@D3503SG*/ 00558000
         MVI   MSGADDR+100,C' '                                    0373 00559000
         MVC   MSGADDR+101(31),MSGADDR+100                         0373 00560000
         MVC   MSGADDR(100),CUAPH7                                 0373 00561000
*      CALL PRINTIT;                                       /*@D3503SG*/ 00562000
         BAL   @14,PRINTIT                                         0374 00563000
*      MYLINCT = MYLINCT - FIVE;                           /*@D3503SG*/ 00564000
         L     @06,MYLINCT                                         0375 00565000
         SL    @06,@CF00036                                        0375 00566000
         ST    @06,MYLINCT                                         0375 00567000
*      HEAD2 = ON;                                         /*@D3503SG*/ 00568000
         OI    HEAD2,B'00001000'                                   0376 00569000
*    END;          /*IF HEAD2 = OFF                          @D3503SG*/ 00570000
* IF MYLINCT < SEVEN THEN                /* EJECT TO NEW PAGE IF REST*/ 00571000
@RF00360 L     @06,MYLINCT                                         0378 00572000
         C     @06,@CF00082                                        0378 00573000
         BNL   @RF00378                                            0378 00574000
*   DO;                                  /* OF REPORT WILL NOT FIT   */ 00575000
*     CALL PAGEJECT;                                       /*@D3503SG*/ 00576000
         BAL   @14,PAGEJECT                                        0380 00577000
*     MSGADDR(44:43+LENGTH(CUAPH1)) = CUAPH1;              /*@D3503SG*/ 00578000
         MVC   MSGADDR+43(25),CUAPH1                               0381 00579000
*     CALL PRINTIT;                                        /*@D3503SG*/ 00580000
         BAL   @14,PRINTIT                                         0382 00581000
*     CALL PRINTIT;                                        /*@D3503SG*/ 00582000
         BAL   @14,PRINTIT                                         0383 00583000
*     MSGADDR = CUAPH6;                                    /*@D3503SG*/ 00584000
         MVI   MSGADDR+99,C' '                                     0384 00585000
         MVC   MSGADDR+100(32),MSGADDR+99                          0384 00586000
         MVC   MSGADDR(99),CUAPH6                                  0384 00587000
*     CALL PRINTIT;                                        /*@D3503SG*/ 00588000
         BAL   @14,PRINTIT                                         0385 00589000
*     MSGADDR = CUAPH7;                                    /*@D3503SG*/ 00590000
         MVI   MSGADDR+100,C' '                                    0386 00591000
         MVC   MSGADDR+101(31),MSGADDR+100                         0386 00592000
         MVC   MSGADDR(100),CUAPH7                                 0386 00593000
*     MYLINCT = MYLINCT - FIVE;                            /*@D3503SG*/ 00594000
         L     @06,MYLINCT                                         0387 00595000
         SL    @06,@CF00036                                        0387 00596000
         ST    @06,MYLINCT                                         0387 00597000
*   END;           /*IF MYLINCT < SEVEN                      @D3503SG*/ 00598000
* CALL CONVERT (OCUA2,TEMPAREA,2);       /* SECONDARY CUA #  @D3503SG*/ 00599000
@RF00378 MVC   @AL00001+4(8),@AL00389                              0389 00600000
         LA    @06,OCUA2(,R7)                                      0389 00601000
         ST    @06,@AL00001                                        0389 00602000
         LA    @01,@AL00001                                        0389 00603000
         BAL   @14,CONVERT                                         0389 00604000
* SPCUA = TEMPAREA(2:4);                 /*                  @D3503SG*/ 00605000
         MVI   SPCUA+3,C' '                                        0390 00606000
         MVC   SPCUA(3),TEMPAREA+1                                 0390 00607000
* IF SOWCHK1 = ON  |                     /*BYTE 20,BIT 2=1   @D3503SG*/ 00608000
*    SOWCHK2 = ON   THEN                 /*BYTE 20,BIT 3=1   @D3503SG*/ 00609000
         TM    SOWCHK1(R7),B'00110000'                             0391 00610000
         BZ    @RF00391                                            0391 00611000
*      SPERR = ERRTABLE(12);    /* WC-SET WRITE CURRENT ERR. @D3503SG*/ 00612000
         MVC   SPERR(2),ERRTABLE+374                               0392 00613000
* ELSE                                   /*                  @D3503SG*/ 00614000
*    IF (SOSYMP & 'F0'X) = CBX  |        /*BYTE 30=X'B'      @D3503SG*/ 00615000
*       (SOSYMP & 'F0'X) = CCX  |        /*BYTE 30=X'C'      @D3503SG*/ 00616000
*       (SOSYMP & 'F0'X) = CDX  THEN     /*BYTE 30=X'D'      @D3503SG*/ 00617000
         B     @RC00391                                            0393 00618000
@RF00391 MVC   @TS00001(1),SOSYMP(R7)                              0393 00619000
         NI    @TS00001,X'F0'                                      0393 00620000
         CLI   @TS00001,X'B0'                                      0393 00621000
         BE    @RT00393                                            0393 00622000
         MVC   @TS00001(1),SOSYMP(R7)                              0393 00623000
         NI    @TS00001,X'F0'                                      0393 00624000
         CLI   @TS00001,X'C0'                                      0393 00625000
         BE    @RT00393                                            0393 00626000
         MVC   @TS00001(1),SOSYMP(R7)                              0393 00627000
         NI    @TS00001,X'F0'                                      0393 00628000
         CLI   @TS00001,X'D0'                                      0393 00629000
         BNE   @RF00393                                            0393 00630000
@RT00393 DS    0H                                                  0394 00631000
*         SPERR = ERRTABLE(4);  /* EC-SET EQUIPMENT CHECK    @D3503SG*/ 00632000
         MVC   SPERR(2),ERRTABLE+102                               0394 00633000
*    ELSE                                /*                  @D3503SG*/ 00634000
*      IF SOSYMP = CE1  |                /*BYTE 30=X'E1'     @D3503SG*/ 00635000
*         SOSYMP = CE2  THEN             /*BYTE 30=X'E2'     @D3503SG*/ 00636000
         B     @RC00393                                            0395 00637000
@RF00393 CLI   SOSYMP(R7),X'E1'                                    0395 00638000
         BE    @RT00395                                            0395 00639000
         CLI   SOSYMP(R7),X'E2'                                    0395 00640000
         BNE   @RF00395                                            0395 00641000
@RT00395 DS    0H                                                  0396 00642000
*           SPERR = ERRTABLE(1);/* PW-SET PERMANENT WRITE ER.@D3503SG*/ 00643000
         MVC   SPERR(2),ERRTABLE                                   0396 00644000
*      ELSE                              /*                  @D3503SG*/ 00645000
*        IF SOSYMP = CE3  THEN           /*BYTE 30=X'E3'     @D3503SG*/ 00646000
         B     @RC00395                                            0397 00647000
@RF00395 CLI   SOSYMP(R7),X'E3'                                    0397 00648000
         BNE   @RF00397                                            0397 00649000
*             SPERR = ERRTABLE(2); /* PR-SET PERM. READ ERR. @D3503SG*/ 00650000
         MVC   SPERR(2),ERRTABLE+34                                0398 00651000
*        ELSE                            /*UNKNOWN           @D3503SG*/ 00652000
*          SPERR = ERRTABLE(3);    /* PF-NONE OF THE ABOVE   @D3503SG*/ 00653000
         B     @RC00397                                            0399 00654000
@RF00397 MVC   SPERR(2),ERRTABLE+68                                0399 00655000
* SPVOLID = VOLID;                       /*VOLUME ID.        @D3503SG*/ 00656000
@RC00397 DS    0H                                                  0400 00657000
@RC00395 DS    0H                                                  0400 00658000
@RC00393 DS    0H                                                  0400 00659000
@RC00391 MVC   SPVOLID(6),VOLID(R7)                                0400 00660000
* CALL CONVERT(FAILCCW,SPCCW,8);         /*FAILING CCW       @D3503SG*/ 00661000
         MVC   @AL00001+4(8),@AL00401                              0401 00662000
         LA    @06,FAILCCW(,R7)                                    0401 00663000
         ST    @06,@AL00001                                        0401 00664000
         LA    @01,@AL00001                                        0401 00665000
         BAL   @14,CONVERT                                         0401 00666000
* CALL CONVERT(CSW34XX,SPCSW,4);         /*BITS 4-7 CSW      @D3503SG*/ 00667000
         MVC   @AL00001+4(8),@AL00402                              0402 00668000
         LA    @06,CSW34XX(,R7)                                    0402 00669000
         ST    @06,@AL00001                                        0402 00670000
         LA    @01,@AL00001                                        0402 00671000
         BAL   @14,CONVERT                                         0402 00672000
* CALL CONVERT(DATE(2:4),TEMPAREA,6);    /*DATE DATA         @D3503SG*/ 00673000
         MVC   @AL00001+4(8),@AL00403                              0403 00674000
         LA    @06,DATE+1(,R7)                                     0403 00675000
         ST    @06,@AL00001                                        0403 00676000
         LA    @01,@AL00001                                        0403 00677000
         BAL   @14,CONVERT                                         0403 00678000
* SPDAY = TEMPAREA(3:5);                 /*DATE-DAY          @D3503SG*/ 00679000
         MVC   SPDAY(3),TEMPAREA+2                                 0404 00680000
* SPYEAR = TEMPAREA(1:2);                /*DATE-YEAR         @D3503SG*/ 00681000
         MVC   SPYEAR(2),TEMPAREA                                  0405 00682000
* CALL CONVERT(TIME,TEMPAREA,8);         /*TIME DATA         @D3503SG*/ 00683000
         MVC   @AL00001+4(8),@AL00406                              0406 00684000
         LA    @06,TIME(,R7)                                       0406 00685000
         ST    @06,@AL00001                                        0406 00686000
         LA    @01,@AL00001                                        0406 00687000
         BAL   @14,CONVERT                                         0406 00688000
* SPHH = TEMPAREA(1:2);                  /*TIME-HOURS        @D3503SG*/ 00689000
         MVC   SPHH(2),TEMPAREA                                    0407 00690000
* SPMM = TEMPAREA(3:4);                  /*TIME-MINUTES      @D3503SG*/ 00691000
         MVC   SPMM(2),TEMPAREA+2                                  0408 00692000
* SPSS = TEMPAREA(5:6);                  /*TIME-SECONDS      @D3503SG*/ 00693000
         MVC   SPSS(2),TEMPAREA+4                                  0409 00694000
* SPPOINT = PERIOD;                      /*DECIMAL POINT     @D3503SG*/ 00695000
         MVI   SPPOINT,C'.'                                        0410 00696000
* SPTH = TEMPAREA(7:8);                  /*TIME-TENTHS       @D3503SG*/ 00697000
         MVC   SPTH(2),TEMPAREA+6                                  0411 00698000
* IF SOIPSB = ON   THEN                  /*BYTE 80 IS SET    @D3503SG*/ 00699000
         TM    SOIPSB(R7),B'00000010'                              0412 00700000
         BNO   @RF00412                                            0412 00701000
*    SPIPS = CHONE;                      /*SET 100 IN/SEC.   @D3503SG*/ 00702000
         MVI   SPIPS,C'1'                                          0413 00703000
* ELSE                                   /*                  @D3503SG*/ 00704000
*    SPIPS = CHZERO;                     /*RESET 100 IN/SEC. @D3503SG*/ 00705000
         B     @RC00412                                            0414 00706000
@RF00412 MVI   SPIPS,C'0'                                          0414 00707000
* IF SOLGM = ON   THEN                   /*LONG GAP MODE ?   @D3503SG*/ 00708000
@RC00412 TM    SOLGM(R7),B'00001000'                               0415 00709000
         BNO   @RF00415                                            0415 00710000
*   SPLGM = CHONE;                       /*YES-SET INDICATER @D3503SG*/ 00711000
         MVI   SPLGM,C'1'                                          0416 00712000
* ELSE                                   /*                  @D3503SG*/ 00713000
*   SPLGM = CHZERO;                      /*NO-RESET INDCATER @D3503SG*/ 00714000
         B     @RC00415                                            0417 00715000
@RF00415 MVI   SPLGM,C'0'                                          0417 00716000
* CALL CONVERT(SOSYMCD,SPSYMCD,TWO);     /*SYMPTOM CODE      @D3503SG*/ 00717000
@RC00415 MVC   @AL00001+4(8),@AL00418                              0418 00718000
         LA    @06,SOSYMCD(,R7)                                    0418 00719000
         ST    @06,@AL00001                                        0418 00720000
         LA    @01,@AL00001                                        0418 00721000
         BAL   @14,CONVERT                                         0418 00722000
* CALL PRINTIT;                          /*                  @D3503SG*/ 00723000
         BAL   @14,PRINTIT                                         0419 00724000
* MYLINCT = MYLINCT - ONE;               /*                  @D3503SG*/ 00725000
         L     @06,MYLINCT                                         0420 00726000
         BCTR  @06,0                                               0420 00727000
         ST    @06,MYLINCT                                         0420 00728000
*END ;           /*  SFPERMS PROC.                           @D3503SG*/ 00729000
@EL00008 DS    0H                                                  0421 00730000
@EF00008 DS    0H                                                  0421 00731000
@ER00008 LM    @14,@12,@SA00008                                    0421 00732000
         BR    @14                                                 0421 00733000
*/*                                                          @0001VLS*/ 00734000
*/* OUTPUT THE DISMOUNT SECTION OF THE REPORT.  IF THE HEADERS HAVE  */ 00735000
*/* NOT BEEN PRINTED, THEN PRINT THE HEADERS FOR SECTION ONE.        */ 00736000
*/*                                                          @0001VLS*/ 00737000
* CUASTATS: PROC;                                          /*@0001VLS*/ 00738000
CUASTATS STM   @14,@12,@SA00009                                    0422 00739000
*    IF HEAD1 = OFF THEN            /* PRINT HEADERS         @0001VLS*/ 00740000
         TM    HEAD1,B'00010000'                                   0423 00741000
         BNZ   @RF00423                                            0423 00742000
*      DO;                                                 /*@0001VLS*/ 00743000
*        CALL OUTHED12;                                    /*@0001VLS*/ 00744000
         BAL   @14,OUTHED12                                        0425 00745000
*        CUASH3R = RDTHRSH;         /* READ THRESHOLD        @0001VLS*/ 00746000
         MVC   CUASH3R(3),RDTHRSH(R2)                              0426 00747000
*        CUASH3W = WRTHRSH;         /* WRITE THRESHOLD       @0001VLS*/ 00748000
         MVC   CUASH3W(3),WRTHRSH(R2)                              0427 00749000
*        MSGADDR(30:29+LENGTH(CUASH3)) = CUASH3;           /*@0001VLS*/ 00750000
         MVC   MSGADDR+29(61),CUASH3                               0428 00751000
*        CALL PRINTIT;                                     /*@0001VLS*/ 00752000
         BAL   @14,PRINTIT                                         0429 00753000
*        CALL PRINTIT;              /* BLANK LINE            @0001VLS*/ 00754000
         BAL   @14,PRINTIT                                         0430 00755000
*        MSGADDR = CUASH4;                                 /*@0001VLS*/ 00756000
         MVI   MSGADDR+130,C' '                                    0431 00757000
         MVI   MSGADDR+131,C' '                                    0431 00758000
         MVC   MSGADDR(130),CUASH4                                 0431 00759000
*        CALL PRINTIT;                                     /*@0001VLS*/ 00760000
         BAL   @14,PRINTIT                                         0432 00761000
*        MSGADDR = CUASH5;                                 /*@0001VLS*/ 00762000
         MVI   MSGADDR+129,C' '                                    0433 00763000
         MVC   MSGADDR+130(2),MSGADDR+129                          0433 00764000
         MVC   MSGADDR(129),CUASH5                                 0433 00765000
*        CALL PRINTIT;                                     /*@0001VLS*/ 00766000
         BAL   @14,PRINTIT                                         0434 00767000
*        CALL PRINTIT;                                     /*@0001VLS*/ 00768000
         BAL   @14,PRINTIT                                         0435 00769000
*        MYLINCT = MYLINCT - FIVE;                         /*@0001VLS*/ 00770000
         L     @06,MYLINCT                                         0436 00771000
         SL    @06,@CF00036                                        0436 00772000
         ST    @06,MYLINCT                                         0436 00773000
*      END;                                                /*@0001VLS*/ 00774000
*    IF MYLINCT < THREE THEN              /* EJECT TO NEW PAGE IF    */ 00775000
@RF00423 L     @06,MYLINCT                                         0438 00776000
         C     @06,@CF00038                                        0438 00777000
         BNL   @RF00438                                            0438 00778000
*      DO;                                /* REST OF REPORT WONT FIT */ 00779000
*        CALL PAGEJECT;                                    /*@0001VLS*/ 00780000
         BAL   @14,PAGEJECT                                        0440 00781000
*        MSGADDR(40:39+LENGTH(CUASH1)) = CUASH1;           /*@0001VLS*/ 00782000
         MVC   MSGADDR+39(44),CUASH1                               0441 00783000
*        CALL PRINTIT;                                     /*@0001VLS*/ 00784000
         BAL   @14,PRINTIT                                         0442 00785000
*        MSGADDR(40:39+LENGTH(CUASH2)) = CUASH2;           /*@0001VLS*/ 00786000
         MVC   MSGADDR+39(44),CUASH2                               0443 00787000
*        CALL PRINTIT;                                     /*@0001VLS*/ 00788000
         BAL   @14,PRINTIT                                         0444 00789000
*        MSGADDR(30:29+LENGTH(CUASH3)) = CUASH3;           /*@0001VLS*/ 00790000
         MVC   MSGADDR+29(61),CUASH3                               0445 00791000
*        CALL PRINTIT;                                     /*@0001VLS*/ 00792000
         BAL   @14,PRINTIT                                         0446 00793000
*        CALL PRINTIT;                                     /*@0001VLS*/ 00794000
         BAL   @14,PRINTIT                                         0447 00795000
*        MSGADDR = CUASH4;                                 /*@0001VLS*/ 00796000
         MVI   MSGADDR+130,C' '                                    0448 00797000
         MVI   MSGADDR+131,C' '                                    0448 00798000
         MVC   MSGADDR(130),CUASH4                                 0448 00799000
*        CALL PRINTIT;                                     /*@0001VLS*/ 00800000
         BAL   @14,PRINTIT                                         0449 00801000
*        MSGADDR = CUASH5;                                 /*@0001VLS*/ 00802000
         MVI   MSGADDR+129,C' '                                    0450 00803000
         MVC   MSGADDR+130(2),MSGADDR+129                          0450 00804000
         MVC   MSGADDR(129),CUASH5                                 0450 00805000
*        CALL PRINTIT;                                     /*@0001VLS*/ 00806000
         BAL   @14,PRINTIT                                         0451 00807000
*        CALL PRINTIT;                                     /*@0001VLS*/ 00808000
         BAL   @14,PRINTIT                                         0452 00809000
*        MYLINCT = MYLINCT - SEVEN;                        /*@0001VLS*/ 00810000
         L     @06,MYLINCT                                         0453 00811000
         SL    @06,@CF00082                                        0453 00812000
         ST    @06,MYLINCT                                         0453 00813000
*      END;                                                /*@0001VLS*/ 00814000
*        CALL CONVERT (OCUA2,TEMPAREA,TWO); /* PRIMARY CUA   @0001VLS*/ 00815000
@RF00438 MVC   @AL00001+4(8),@AL00455                              0455 00816000
         LA    @06,OCUA2(,R7)                                      0455 00817000
         ST    @06,@AL00001                                        0455 00818000
         LA    @01,@AL00001                                        0455 00819000
         BAL   @14,CONVERT                                         0455 00820000
*        OUTCUA = TEMPAREA(2:4);                           /*@0001VLS*/ 00821000
         MVC   OUTCUA(3),TEMPAREA+1                                0456 00822000
*        IF SNSCNT <= 9 | OSER74XX = HEXZEROS THEN                 0457 00823000
         CLC   SNSCNT(2,R7),@CH00085                               0457 00824000
         BNH   @RT00457                                            0457 00825000
         CLC   OSER74XX(2,R7),@CB00208                             0457 00826000
         BNE   @RF00457                                            0457 00827000
@RT00457 DS    0H                                                  0458 00828000
*          TUSER = NA;                                     /*@0001VLS*/ 00829000
         MVC   TUSER(5),@CC00495                                   0458 00830000
*        ELSE                                                      0459 00831000
*          CALL CONVBIN2(OSER74XX,TUSER); /* TAPE UNIT SERIAL NUMBER */ 00832000
         B     @RC00457                                            0459 00833000
@RF00457 LA    @06,OSER74XX(,R7)                                   0459 00834000
         ST    @06,@AL00001                                        0459 00835000
         LA    @06,TUSER                                           0459 00836000
         ST    @06,@AL00001+4                                      0459 00837000
         LA    @01,@AL00001                                        0459 00838000
         BAL   @14,CONVBIN2                                        0459 00839000
*        CALL CONVERT (DATE(2:4),TEMPAREA,SIX);            /*@0001VLS*/ 00840000
@RC00457 MVC   @AL00001+4(8),@AL00460                              0460 00841000
         LA    @06,DATE+1(,R7)                                     0460 00842000
         ST    @06,@AL00001                                        0460 00843000
         LA    @01,@AL00001                                        0460 00844000
         BAL   @14,CONVERT                                         0460 00845000
*        DAY = TEMPAREA(3:5);                              /*@0001VLS*/ 00846000
         MVC   DAY(3),TEMPAREA+2                                   0461 00847000
*        YEAR = TEMPAREA(1:2);                             /*@0001VLS*/ 00848000
         MVC   YEAR(2),TEMPAREA                                    0462 00849000
*        OVOLUME = VOLID;           /* VOLUME                @0001VLS*/ 00850000
         MVC   OVOLUME(6),VOLID(R7)                                0463 00851000
*        CALL CONVERT (TIME,TEMPAREA,EIGHT);               /*@0001VLS*/ 00852000
         MVC   @AL00001+4(8),@AL00464                              0464 00853000
         LA    @06,TIME(,R7)                                       0464 00854000
         ST    @06,@AL00001                                        0464 00855000
         LA    @01,@AL00001                                        0464 00856000
         BAL   @14,CONVERT                                         0464 00857000
*        HH = TEMPAREA(1:2);                               /*@0001VLS*/ 00858000
         MVC   HH(2),TEMPAREA                                      0465 00859000
*        MM = TEMPAREA(3:4);                               /*@0001VLS*/ 00860000
         MVC   MM(2),TEMPAREA+2                                    0466 00861000
*        SS = TEMPAREA(5:6);                               /*@0001VLS*/ 00862000
         MVC   SS(2),TEMPAREA+4                                    0467 00863000
*        POINT = PERIOD;                                   /*@0001VLS*/ 00864000
         MVI   POINT,C'.'                                          0468 00865000
*        TH = TEMPAREA(7:8);                               /*@0001VLS*/ 00866000
         MVC   TH(2),TEMPAREA+6                                    0469 00867000
*        CALL CONVBIN1(READTH,OREADS);   /* TEMP. READ ERRORS @0001VLS* 00868000
         LA    @06,READTH(,R7)                                     0470 00869000
         ST    @06,@AL00001                                        0470 00870000
         LA    @06,OREADS                                          0470 00871000
         ST    @06,@AL00001+4                                      0470 00872000
         LA    @01,@AL00001                                        0470 00873000
         BAL   @14,CONVBIN1                                        0470 00874000
*        CALL CONVBIN1(RITETH,WRTS); /* TEMPORARY WRITE ERRORS       */ 00875000
         LA    @06,RITETH(,R7)                                     0471 00876000
         ST    @06,@AL00001                                        0471 00877000
         LA    @06,WRTS                                            0471 00878000
         ST    @06,@AL00001+4                                      0471 00879000
         LA    @01,@AL00001                                        0471 00880000
         BAL   @14,CONVBIN1                                        0471 00881000
*        CALL CONVBIN2(RECSIOS,SIOCNT); /* SIO COUNT         @0001VLS*/ 00882000
         LA    @06,RECSIOS(,R7)                                    0472 00883000
         ST    @06,@AL00001                                        0472 00884000
         LA    @06,SIOCNT                                          0472 00885000
         ST    @06,@AL00001+4                                      0472 00886000
         LA    @01,@AL00001                                        0472 00887000
         BAL   @14,CONVBIN2                                        0472 00888000
*        NRZIN = NA;                /* ONLY VALID FOR 800 BPI        */ 00889000
         MVC   NRZIN(5),@CC00495                                   0473 00890000
*        IF OSER74XX = HEXZEROS THEN                               0474 00891000
         CLC   OSER74XX(2,R7),@CB00208                             0474 00892000
         BNE   @RF00474                                            0474 00893000
*        DENSITY = NA;              /* NO DENSITY            @0001VLS*/ 00894000
         MVC   DENSITY(4),@CC00495                                 0475 00895000
*      ELSE                                                        0476 00896000
*        IF SENSBIT5(4) = ON  THEN                                 0476 00897000
         B     @RC00474                                            0476 00898000
@RF00474 TM    SENSBIT5+3(R7),B'00000100'                          0476 00899000
         BNO   @RF00476                                            0476 00900000
*        DENSITY = BPI1600;                                /*@0001VLS*/ 00901000
         MVC   DENSITY(4),@CC00491                                 0477 00902000
*      ELSE                                                        0478 00903000
*        IF SENSBIT4(7) = ON THEN   /* BIRCH DEVICE          @0001VLS*/ 00904000
         B     @RC00476                                            0478 00905000
@RF00476 TM    SENSBIT4+6(R7),B'00001000'                          0478 00906000
         BNO   @RF00478                                            0478 00907000
*          DENSITY = BPI6250;                              /*@0001VLS*/ 00908000
         MVC   DENSITY(4),@CC00493                                 0479 00909000
*        ELSE                                                      0480 00910000
*          DO;                                             /*@0001VLS*/ 00911000
         B     @RC00478                                            0480 00912000
@RF00478 DS    0H                                                  0481 00913000
*            DENSITY = BPI800;                             /*@0001VLS*/ 00914000
         MVC   DENSITY(4),@CC00489                                 0481 00915000
*            CALL CONVBIN1(NOISE,NRZIN);   /* CONVERT NRZI NOISE     */ 00916000
         LA    @06,NOISE(,R7)                                      0482 00917000
         ST    @06,@AL00001                                        0482 00918000
         LA    @06,NRZIN                                           0482 00919000
         ST    @06,@AL00001+4                                      0482 00920000
         LA    @01,@AL00001                                        0482 00921000
         BAL   @14,CONVBIN1                                        0482 00922000
*          END;                                            /*@0001VLS*/ 00923000
*    CALL CONVBIN1(RWVRC,ORWVRC);                          /*@0001VLS*/ 00924000
@RC00478 DS    0H                                                  0484 00925000
@RC00476 DS    0H                                                  0484 00926000
@RC00474 LA    @06,RWVRC(,R7)                                      0484 00927000
         ST    @06,@AL00001                                        0484 00928000
         LA    @06,ORWVRC                                          0484 00929000
         ST    @06,@AL00001+4                                      0484 00930000
         LA    @01,@AL00001                                        0484 00931000
         BAL   @14,CONVBIN1                                        0484 00932000
*    IF SNSCNT <= 9 THEN                                           0485 00933000
         CLC   SNSCNT(2,R7),@CH00085                               0485 00934000
         BH    @RF00485                                            0485 00935000
*      DO;                                                 /*@0001VLS*/ 00936000
*        WRTGVRC = NA;                                     /*@0001VLS*/ 00937000
         MVC   WRTGVRC(5),@CC00495                                 0487 00938000
*        ERLYBOR = NA;                                     /*@0001VLS*/ 00939000
         MVC   ERLYBOR(5),@CC00495                                 0488 00940000
*        OVELCHG = NA;                                     /*@0001VLS*/ 00941000
         MVC   OVELCHG(5),@CC00495                                 0489 00942000
*      END;                                                /*@0001VLS*/ 00943000
*    ELSE                                                          0491 00944000
*      DO;                                                 /*@0001VLS*/ 00945000
         B     @RC00485                                            0491 00946000
@RF00485 DS    0H                                                  0492 00947000
*        I = CCOMVRC & ZEROFOX;           /* RIGHT HALF OF THE FIELD */ 00948000
         LA    @06,15                                              0492 00949000
         SLR   @15,@15                                             0492 00950000
         IC    @15,CCOMVRC(,R7)                                    0492 00951000
         NR    @06,@15                                             0492 00952000
         STH   @06,I                                               0492 00953000
*        CALL CONVBIN2(I,WRTGVRC);                         /*@0001VLS*/ 00954000
         LA    @01,@AL00493                                        0493 00955000
         BAL   @14,CONVBIN2                                        0493 00956000
*        I = EXPEARL & ZEROFOX;           /* RIGHT HALF OF THE FIELD */ 00957000
         LA    @06,15                                              0494 00958000
         SLR   @15,@15                                             0494 00959000
         IC    @15,EXPEARL(,R7)                                    0494 00960000
         NR    @06,@15                                             0494 00961000
         STH   @06,I                                               0494 00962000
*        CALL CONVBIN2 (I,ERLYBOR);                        /*@0001VLS*/ 00963000
         LA    @01,@AL00495                                        0495 00964000
         BAL   @14,CONVBIN2                                        0495 00965000
*        I = RECVEL & ZEROFOX;            /* RIGHT HALF OF THE FIELD */ 00966000
         LA    @06,15                                              0496 00967000
         SLR   @15,@15                                             0496 00968000
         IC    @15,RECVEL(,R7)                                     0496 00969000
         NR    @06,@15                                             0496 00970000
         STH   @06,I                                               0496 00971000
*        CALL CONVBIN2 (I,OVELCHG);                        /*@0001VLS*/ 00972000
         LA    @01,@AL00497                                        0497 00973000
         BAL   @14,CONVBIN2                                        0497 00974000
*      END;                                                /*@0001VLS*/ 00975000
*    CALL CONVBIN1 (MTELRCR,LRCMTE);                       /*@0001VLS*/ 00976000
@RC00485 LA    @06,MTELRCR(,R7)                                    0499 00977000
         ST    @06,@AL00001                                        0499 00978000
         LA    @06,LRCMTE                                          0499 00979000
         ST    @06,@AL00001+4                                      0499 00980000
         LA    @01,@AL00001                                        0499 00981000
         BAL   @14,CONVBIN1                                        0499 00982000
*    CALL CONVBIN1 (EDCCRC,CRCEDC);                        /*@0001VLS*/ 00983000
         LA    @06,EDCCRC(,R7)                                     0500 00984000
         ST    @06,@AL00001                                        0500 00985000
         LA    @06,CRCEDC                                          0500 00986000
         ST    @06,@AL00001+4                                      0500 00987000
         LA    @01,@AL00001                                        0500 00988000
         BAL   @14,CONVBIN1                                        0500 00989000
*    CALL CONVBIN1 (RECVRC,ECCENV);                        /*@0001VLS*/ 00990000
         LA    @06,RECVRC(,R7)                                     0501 00991000
         ST    @06,@AL00001                                        0501 00992000
         LA    @06,ECCENV                                          0501 00993000
         ST    @06,@AL00001+4                                      0501 00994000
         LA    @01,@AL00001                                        0501 00995000
         BAL   @14,CONVBIN1                                        0501 00996000
*    I = RECOVER & ZEROFOX;               /* RIGHT HALF OF THE FIELD */ 00997000
         LA    @06,15                                              0502 00998000
         SLR   @15,@15                                             0502 00999000
         IC    @15,RECOVER(,R7)                                    0502 01000000
         NR    @06,@15                                             0502 01001000
         STH   @06,I                                               0502 01002000
*    CALL CONVBIN2 (I,SKEWERR);                            /*@0001VLS*/ 01003000
         LA    @01,@AL00503                                        0503 01004000
         BAL   @14,CONVBIN2                                        0503 01005000
*    CALL CONVERT (CPUMOD,MCPU,TWO);                       /*@0001VLS*/ 01006000
         MVC   @AL00001+4(8),@AL00504                              0504 01007000
         LA    @06,CPUMOD(,R7)                                     0504 01008000
         ST    @06,@AL00001                                        0504 01009000
         LA    @01,@AL00001                                        0504 01010000
         BAL   @14,CONVERT                                         0504 01011000
*    CALL CONVERT (CPUSER,SERCPU,THREE);                   /*@0001VLS*/ 01012000
         MVC   @AL00001+4(8),@AL00505                              0505 01013000
         LA    @06,CPUSER(,R7)                                     0505 01014000
         ST    @06,@AL00001                                        0505 01015000
         LA    @01,@AL00001                                        0505 01016000
         BAL   @14,CONVERT                                         0505 01017000
*    IF HDRSER = HEXZEROS THEN                                     0506 01018000
         CLC   HDRSER(2,R7),@CB00208                               0506 01019000
         BNE   @RF00506                                            0506 01020000
*      HEADSER = NA;                                       /*@0001VLS*/ 01021000
         MVC   HEADSER(5),@CC00495                                 0507 01022000
*    ELSE                                                          0508 01023000
*      CALL CONVBIN2 (HDRSER,HEADSER);                     /*@0001VLS*/ 01024000
         B     @RC00506                                            0508 01025000
@RF00506 LA    @06,HDRSER(,R7)                                     0508 01026000
         ST    @06,@AL00001                                        0508 01027000
         LA    @06,HEADSER                                         0508 01028000
         ST    @06,@AL00001+4                                      0508 01029000
         LA    @01,@AL00001                                        0508 01030000
         BAL   @14,CONVBIN2                                        0508 01031000
*    CALL PRINTIT;                                         /*@0001VLS*/ 01032000
@RC00506 BAL   @14,PRINTIT                                         0509 01033000
*    MYLINCT = MYLINCT - ONE;                              /*@0001VLS*/ 01034000
         L     @06,MYLINCT                                         0510 01035000
         BCTR  @06,0                                               0510 01036000
         ST    @06,MYLINCT                                         0510 01037000
* END;                                                     /*@0001VLS*/ 01038000
@EL00009 DS    0H                                                  0511 01039000
@EF00009 DS    0H                                                  0511 01040000
@ER00009 LM    @14,@12,@SA00009                                    0511 01041000
         BR    @14                                                 0511 01042000
*/********************************************************************/ 01043000
*/*             8809DEV - CUA STATISTICS                     @000@SSG*/ 01044000
*/* OUTPUT THE DISMOUNT SECTION OF THE REPORT.  IF THE       @D3503SG*/ 01045000
*/* HEADERS HAVE NOT BEEN PRINTED, THEN PRINT THE HEADERS    @D3503SG*/ 01046000
*/* FOR SECTION ONE.                                         @D3503SG*/ 01047000
*/********************************************************************/ 01048000
* SFSTATS:  PROC;                                          /*@D3503SG*/ 01049000
SFSTATS  STM   @14,@12,@SA00010                                    0512 01050000
*    IF HEAD1 = OFF THEN            /* PRINT HEADERS         @D3503SG*/ 01051000
         TM    HEAD1,B'00010000'                                   0513 01052000
         BNZ   @RF00513                                            0513 01053000
*      DO;                                                 /*@D3503SG*/ 01054000
*        CALL OUTHED12;             /*8809DEV LABELS 1/2     @D3503SG*/ 01055000
         BAL   @14,OUTHED12                                        0515 01056000
*        CUASH3R = RDTHRSH;         /* READ THRESHOLD        @D3503SG*/ 01057000
         MVC   CUASH3R(3),RDTHRSH(R2)                              0516 01058000
*        CUASH3W = WRTHRSH;         /* WRITE THRESHOLD       @D3503SG*/ 01059000
         MVC   CUASH3W(3),WRTHRSH(R2)                              0517 01060000
*        MSGADDR(30:29+LENGTH(CUASH3)) = CUASH3;           /*@D3503SG*/ 01061000
         MVC   MSGADDR+29(61),CUASH3                               0518 01062000
*        CALL PRINTIT;                                     /*@D3503SG*/ 01063000
         BAL   @14,PRINTIT                                         0519 01064000
*        CALL PRINTIT;              /* BLANK LINE            @D3503SG*/ 01065000
         BAL   @14,PRINTIT                                         0520 01066000
*        MSGADDR = CUASH10;                                /*@D3503SG*/ 01067000
         MVI   MSGADDR+101,C' '                                    0521 01068000
         MVC   MSGADDR+102(30),MSGADDR+101                         0521 01069000
         MVC   MSGADDR(101),CUASH10                                0521 01070000
*        CALL PRINTIT;                                     /*@D3503SG*/ 01071000
         BAL   @14,PRINTIT                                         0522 01072000
*        MSGADDR = CUASH11;                                /*@D3503SG*/ 01073000
         MVI   MSGADDR+108,C' '                                    0523 01074000
         MVC   MSGADDR+109(23),MSGADDR+108                         0523 01075000
         MVC   MSGADDR(108),CUASH11                                0523 01076000
*        CALL PRINTIT;                                     /*@D3503SG*/ 01077000
         BAL   @14,PRINTIT                                         0524 01078000
*        CALL PRINTIT;                                     /*@D3503SG*/ 01079000
         BAL   @14,PRINTIT                                         0525 01080000
*        MYLINCT = MYLINCT - FIVE;                         /*@D3503SG*/ 01081000
         L     @06,MYLINCT                                         0526 01082000
         SL    @06,@CF00036                                        0526 01083000
         ST    @06,MYLINCT                                         0526 01084000
*      END;         /*IF HEAD1 = OFF                         @D3503SG*/ 01085000
*    IF MYLINCT < THREE THEN              /* EJECT TO NEW PAGE IF    */ 01086000
@RF00513 L     @06,MYLINCT                                         0528 01087000
         C     @06,@CF00038                                        0528 01088000
         BNL   @RF00528                                            0528 01089000
*      DO;                                /* REST OF REPORT WONT FIT */ 01090000
*        CALL PAGEJECT;                                    /*@D3503SG*/ 01091000
         BAL   @14,PAGEJECT                                        0530 01092000
*        MSGADDR(40:39+LENGTH(CUASH1)) = CUASH1;           /*@D3503SG*/ 01093000
         MVC   MSGADDR+39(44),CUASH1                               0531 01094000
*        CALL PRINTIT;                                     /*@D3503SG*/ 01095000
         BAL   @14,PRINTIT                                         0532 01096000
*        MSGADDR(40:39+LENGTH(CUASH2)) = CUASH2;           /*@D3503SG*/ 01097000
         MVC   MSGADDR+39(44),CUASH2                               0533 01098000
*        CALL PRINTIT;                                     /*@D3503SG*/ 01099000
         BAL   @14,PRINTIT                                         0534 01100000
*        MSGADDR(30:29+LENGTH(CUASH3)) = CUASH3;           /*@D3503SG*/ 01101000
         MVC   MSGADDR+29(61),CUASH3                               0535 01102000
*        CALL PRINTIT;                                     /*@D3503SG*/ 01103000
         BAL   @14,PRINTIT                                         0536 01104000
*        CALL PRINTIT;                                     /*@D3503SG*/ 01105000
         BAL   @14,PRINTIT                                         0537 01106000
*        MSGADDR = CUASH10;                                /*@D3503SG*/ 01107000
         MVI   MSGADDR+101,C' '                                    0538 01108000
         MVC   MSGADDR+102(30),MSGADDR+101                         0538 01109000
         MVC   MSGADDR(101),CUASH10                                0538 01110000
*        CALL PRINTIT;                                     /*@D3503SG*/ 01111000
         BAL   @14,PRINTIT                                         0539 01112000
*        MSGADDR = CUASH11;                                /*@D3503SG*/ 01113000
         MVI   MSGADDR+108,C' '                                    0540 01114000
         MVC   MSGADDR+109(23),MSGADDR+108                         0540 01115000
         MVC   MSGADDR(108),CUASH11                                0540 01116000
*        CALL PRINTIT;                                     /*@D3503SG*/ 01117000
         BAL   @14,PRINTIT                                         0541 01118000
*        CALL PRINTIT;                                     /*@D3503SG*/ 01119000
         BAL   @14,PRINTIT                                         0542 01120000
*        MYLINCT = MYLINCT - SEVEN;                        /*@D3503SG*/ 01121000
         L     @06,MYLINCT                                         0543 01122000
         SL    @06,@CF00082                                        0543 01123000
         ST    @06,MYLINCT                                         0543 01124000
*      END;           /*IF MYLINCT < THREE                   @D3503SG*/ 01125000
*      CALL CONVERT(SMCUA,TEMPAREA,2);   /*                  @D3503SG*/ 01126000
@RF00528 MVC   @AL00001+4(8),@AL00545                              0545 01127000
         LA    @06,SMCUA(,R7)                                      0545 01128000
         ST    @06,@AL00001                                        0545 01129000
         LA    @01,@AL00001                                        0545 01130000
         BAL   @14,CONVERT                                         0545 01131000
*      SCCUA=TEMPAREA(2:4);              /*1 PHYSICAL CUA    @D3503SG*/ 01132000
         MVI   SCCUA+3,C' '                                        0546 01133000
         MVC   SCCUA(3),TEMPAREA+1                                 0546 01134000
*      CALL CONVERT(SMDATE(2:4),TEMPAREA,6);    /*           @D3503SG*/ 01135000
         MVC   @AL00001+4(8),@AL00547                              0547 01136000
         LA    @06,SMDATE+1(,R7)                                   0547 01137000
         ST    @06,@AL00001                                        0547 01138000
         LA    @01,@AL00001                                        0547 01139000
         BAL   @14,CONVERT                                         0547 01140000
*      SCDAY=TEMPAREA(3:5);              /*2A DATE-DAY       @D3503SG*/ 01141000
         MVC   SCDAY(3),TEMPAREA+2                                 0548 01142000
*      SCYEAR=TEMPAREA(1:2);             /*2B DATE-YEAR      @D3503SG*/ 01143000
         MVC   SCYEAR(2),TEMPAREA                                  0549 01144000
*      SCSER=SMVOLID;                    /*3 VOL.SER.        @D3503SG*/ 01145000
         MVC   SCSER(6),SMVOLID(R7)                                0550 01146000
*      CALL CONVERT(TIME,TEMPAREA,8);    /*                  @D3503SG*/ 01147000
         MVC   @AL00001+4(8),@AL00551                              0551 01148000
         LA    @06,TIME(,R7)                                       0551 01149000
         ST    @06,@AL00001                                        0551 01150000
         LA    @01,@AL00001                                        0551 01151000
         BAL   @14,CONVERT                                         0551 01152000
*      SCHH=TEMPAREA(1:2);               /*4A TIME-HOUR      @D3503SG*/ 01153000
         MVC   SCHH(2),TEMPAREA                                    0552 01154000
*      SCMM=TEMPAREA(3:4);               /*4B TIME-MINUTE    @D3503SG*/ 01155000
         MVC   SCMM(2),TEMPAREA+2                                  0553 01156000
*      SCSS=TEMPAREA(5:6);               /*4C TIME-SECOND    @D3503SG*/ 01157000
         MVC   SCSS(2),TEMPAREA+4                                  0554 01158000
*      SCPOINT=PERIOD;                   /*DECIMAL POINT     @D3503SG*/ 01159000
         MVI   SCPOINT,C'.'                                        0555 01160000
*      SCTH=TEMPAREA(7:8);               /*4D TIME-TENTHS    @D3503SG*/ 01161000
         MVC   SCTH(2),TEMPAREA+6                                  0556 01162000
*      CALL CONVERT(SMCPSER,SCCPSER,THREE); /*19 SERIAL #    @D3503SG*/ 01163000
         MVC   @AL00001+4(8),@AL00557                              0557 01164000
         LA    @06,SMCPSER(,R7)                                    0557 01165000
         ST    @06,@AL00001                                        0557 01166000
         LA    @01,@AL00001                                        0557 01167000
         BAL   @14,CONVERT                                         0557 01168000
*      CALL CONVERT(SMCPMDL,SCCPMDL,TWO);   /*18 MODEL #     @D3503SG*/ 01169000
         MVC   @AL00001+4(8),@AL00558                              0558 01170000
         LA    @06,SMCPMDL(,R7)                                    0558 01171000
         ST    @06,@AL00001                                        0558 01172000
         LA    @01,@AL00001                                        0558 01173000
         BAL   @14,CONVERT                                         0558 01174000
*      CALL CONVBIN1(SMVEL,SCVEL);       /*17 VELOCITY CHK.  @D3503SG*/ 01175000
         LA    @06,SMVEL(,R7)                                      0559 01176000
         ST    @06,@AL00001                                        0559 01177000
         LA    @06,SCVEL                                           0559 01178000
         ST    @06,@AL00001+4                                      0559 01179000
         LA    @01,@AL00001                                        0559 01180000
         BAL   @14,CONVBIN1                                        0559 01181000
*      CALL CONVBIN1(SMSKEW,SCSKEW);     /*16 SKEW ERROR     @D3503SG*/ 01182000
         LA    @06,SMSKEW(,R7)                                     0560 01183000
         ST    @06,@AL00001                                        0560 01184000
         LA    @06,SCSKEW                                          0560 01185000
         ST    @06,@AL00001+4                                      0560 01186000
         LA    @01,@AL00001                                        0560 01187000
         BAL   @14,CONVBIN1                                        0560 01188000
*      CALL CONVBIN1(SMCRE,SCCRE);       /*15 CREASE ERROR.  @D3503SG*/ 01189000
         LA    @06,SMCRE(,R7)                                      0561 01190000
         ST    @06,@AL00001                                        0561 01191000
         LA    @06,SCCRE                                           0561 01192000
         ST    @06,@AL00001+4                                      0561 01193000
         LA    @01,@AL00001                                        0561 01194000
         BAL   @14,CONVBIN1                                        0561 01195000
*      CALL CONVBIN1(SMNOP,SCNOP);       /*14 NO POINTER ER. @D3503SG*/ 01196000
         LA    @06,SMNOP(,R7)                                      0562 01197000
         ST    @06,@AL00001                                        0562 01198000
         LA    @06,SCNOP                                           0562 01199000
         ST    @06,@AL00001+4                                      0562 01200000
         LA    @01,@AL00001                                        0562 01201000
         BAL   @14,CONVBIN1                                        0562 01202000
*      CALL CONVBIN1(SMENV,SCENV);       /*13 ENVELOPE CHK.  @D3503SG*/ 01203000
         LA    @06,SMENV(,R7)                                      0563 01204000
         ST    @06,@AL00001                                        0563 01205000
         LA    @06,SCENV                                           0563 01206000
         ST    @06,@AL00001+4                                      0563 01207000
         LA    @01,@AL00001                                        0563 01208000
         BAL   @14,CONVBIN1                                        0563 01209000
*      CALL CONVBIN1(SMRBF,SCRBF);       /*12 READ BACK FAIL @D3503SG*/ 01210000
         LA    @06,SMRBF(,R7)                                      0564 01211000
         ST    @06,@AL00001                                        0564 01212000
         LA    @06,SCRBF                                           0564 01213000
         ST    @06,@AL00001+4                                      0564 01214000
         LA    @01,@AL00001                                        0564 01215000
         BAL   @14,CONVBIN1                                        0564 01216000
*      CALL CONVBIN1(SMSRC,SCSRC);       /*11 START READ CHK.@D3503SG*/ 01217000
         LA    @06,SMSRC(,R7)                                      0565 01218000
         ST    @06,@AL00001                                        0565 01219000
         LA    @06,SCSRC                                           0565 01220000
         ST    @06,@AL00001+4                                      0565 01221000
         LA    @01,@AL00001                                        0565 01222000
         BAL   @14,CONVBIN1                                        0565 01223000
*      CALL CONVBIN1(SMEDC,SCEDC);       /*10 END DATA CHK.  @D3503SG*/ 01224000
         LA    @06,SMEDC(,R7)                                      0566 01225000
         ST    @06,@AL00001                                        0566 01226000
         LA    @06,SCEDC                                           0566 01227000
         ST    @06,@AL00001+4                                      0566 01228000
         LA    @01,@AL00001                                        0566 01229000
         BAL   @14,CONVBIN1                                        0566 01230000
*      CALL CONVBIN1(SMMUTE,SCMTE);      /*9 MULTI-TRK.ERS.  @D3503SG*/ 01231000
         LA    @06,SMMUTE(,R7)                                     0567 01232000
         ST    @06,@AL00001                                        0567 01233000
         LA    @06,SCMTE                                           0567 01234000
         ST    @06,@AL00001+4                                      0567 01235000
         LA    @01,@AL00001                                        0567 01236000
         BAL   @14,CONVBIN1                                        0567 01237000
*      CALL CONVBIN2(SMWTSIO,SCWTSIO);   /*8 SIO WRITE       @D3503SG*/ 01238000
         LA    @06,SMWTSIO(,R7)                                    0568 01239000
         ST    @06,@AL00001                                        0568 01240000
         LA    @06,SCWTSIO                                         0568 01241000
         ST    @06,@AL00001+4                                      0568 01242000
         LA    @01,@AL00001                                        0568 01243000
         BAL   @14,CONVBIN2                                        0568 01244000
*      CALL CONVBIN2(SMRDSIO,SCRDSIO);   /*7 SIO READ        @D3503SG*/ 01245000
         LA    @06,SMRDSIO(,R7)                                    0569 01246000
         ST    @06,@AL00001                                        0569 01247000
         LA    @06,SCRDSIO                                         0569 01248000
         ST    @06,@AL00001+4                                      0569 01249000
         LA    @01,@AL00001                                        0569 01250000
         BAL   @14,CONVBIN2                                        0569 01251000
*      CALL CONVBIN1(SMTWRT,SCWRTS);     /*6 TEMP.WRITE ERS. @D3503SG*/ 01252000
         LA    @06,SMTWRT(,R7)                                     0570 01253000
         ST    @06,@AL00001                                        0570 01254000
         LA    @06,SCWRTS                                          0570 01255000
         ST    @06,@AL00001+4                                      0570 01256000
         LA    @01,@AL00001                                        0570 01257000
         BAL   @14,CONVBIN1                                        0570 01258000
*      CALL CONVBIN1(SMTRD,SCRDS);       /*5 TEMP.READ ERS.  @D3503SG*/ 01259000
         LA    @06,SMTRD(,R7)                                      0571 01260000
         ST    @06,@AL00001                                        0571 01261000
         LA    @06,SCRDS                                           0571 01262000
         ST    @06,@AL00001+4                                      0571 01263000
         LA    @01,@AL00001                                        0571 01264000
         BAL   @14,CONVBIN1                                        0571 01265000
*      CALL PRINTIT;                     /*                  @D3503SG*/ 01266000
         BAL   @14,PRINTIT                                         0572 01267000
*      MYLINCT = MYLINCT - 1;            /*                  @D3503SG*/ 01268000
         L     @06,MYLINCT                                         0573 01269000
         BCTR  @06,0                                               0573 01270000
         ST    @06,MYLINCT                                         0573 01271000
*   END SFSTATS;     /*8809DEV CUA STATISTICS.PROCESSING     @D3503SG*/ 01272000
@EL00010 DS    0H                                                  0574 01273000
@EF00010 DS    0H                                                  0574 01274000
@ER00010 LM    @14,@12,@SA00010                                    0574 01275000
         BR    @14                                                 0574 01276000
*FINDDATE: PROC;                                           /*@0001VLS*/ 01277000
FINDDATE STM   @14,@12,@SA00011                                    0575 01278000
*   FOUND = OFF;                                           /*@0001VLS*/ 01279000
         NI    FOUND,B'11011111'                                   0576 01280000
*   CHAIN = CHAIN && CHAIN;                                /*@0001VLS*/ 01281000
         XC    CHAIN(6),CHAIN                                      0577 01282000
*   CHAINCPU = RECCPU;             /* CPU SERIAL NUMBER      @0001VLS*/ 01283000
         MVC   CHAINCPU(3),RECCPU                                  0578 01284000
*   CHAINCUX = RECCUA;                                     /*@0001VLS*/ 01285000
         MVC   CHAINCUX(2),RECCUA                                  0579 01286000
*   CALL CONVCNTR;                     /*CONVERT CUA TO CONTROL LEVEL * 01287000
         BAL   @14,CONVCNTR                                        0580 01288000
*   CHAINCUX=LOWCUA;                   /*SAVE CONVERTED VALUE         * 01289000
         MVC   CHAINCUX(2),LOWCUA                                  0581 01290000
*   CHAINDEV = RECDEV;                     /*DEVICE REQ'ST   @D3503SG*/ 01291000
         MVC   CHAINDEV(1),RECDEV                                  0582 01292000
*   DATEPTR = LHDATPTR;            /* INITIALIZE FOR SEARCH  @0001VLS*/ 01293000
         L     @06,LHDATPTR                                        0583 01294000
         ST    @06,DATEPTR                                         0583 01295000
*   DO WHILE(DATEPTR ¬= ZERO & FOUND = OFF);               /*@0001VLS*/ 01296000
         B     @DE00584                                            0584 01297000
@DL00584 DS    0H                                                  0585 01298000
*     IF CHAIN = DATECC THEN                                       0585 01299000
         L     @06,DATEPTR                                         0585 01300000
         CLC   CHAIN(6),DATECC(@06)                                0585 01301000
         BNE   @RF00585                                            0585 01302000
*       FOUND = ON;                /* FOUND THE APPROPRIATE SET      */ 01303000
         OI    FOUND,B'00100000'                                   0586 01304000
*     ELSE                                                         0587 01305000
*       DO;                                                /*@0001VLS*/ 01306000
         B     @RC00585                                            0587 01307000
@RF00585 DS    0H                                                  0588 01308000
*         Z = DATEPTR;             /* SAVE THIS VALUE        @0001VLS*/ 01309000
         L     @06,DATEPTR                                         0588 01310000
         ST    @06,Z                                               0588 01311000
*         DATEPTR = NEXTDATE;      /* NEXT ENTRY             @0001VLS*/ 01312000
         L     @06,NEXTDATE(,@06)                                  0589 01313000
         ST    @06,DATEPTR                                         0589 01314000
*       END;     /*CHAIN ¬= DATECC                           @0001VLS*/ 01315000
*   END;         /*DO WHILE DATEPTR ¬= ZERO & FOUND = OFF    @0001VLS*/ 01316000
@RC00585 DS    0H                                                  0591 01317000
@DE00584 L     @06,DATEPTR                                         0591 01318000
         LTR   @06,@06                                             0591 01319000
         BZ    @DC00584                                            0591 01320000
         TM    FOUND,B'00100000'                                   0591 01321000
         BZ    @DL00584                                            0591 01322000
@DC00584 DS    0H                                                  0592 01323000
*   IF DATEPTR = ZERO THEN                                         0592 01324000
         L     @06,DATEPTR                                         0592 01325000
         LTR   @06,@06                                             0592 01326000
         BNZ   @RF00592                                            0592 01327000
*     DO;                          /* GENERATE A NEW SET OF ENTRIES  */ 01328000
*       RESPECIFY (R0,R15) RESTRICTED;                     /*@0001VLS*/ 01329000
*       R0 = LENGTH(DATEAREA);                             /*@0001VLS*/ 01330000
         LA    R0,16                                               0595 01331000
*       GEN(GETMAIN EC,LV=(0),A=DATEPTR);                  /*@0001VLS*/ 01332000
         GETMAIN EC,LV=(0),A=DATEPTR                                    01333000
*       RETCODE = R15;                                     /*@0001VLS*/ 01334000
         ST    R15,RETCODE                                         0597 01335000
*       RESPECIFY (R0,R15) UNRESTRICTED;                   /*@0001VLS*/ 01336000
*       IF RETCODE = ZERO THEN                                     0599 01337000
         L     @06,RETCODE                                         0599 01338000
         SLR   @15,@15                                             0599 01339000
         CR    @06,@15                                             0599 01340000
         BNE   @RF00599                                            0599 01341000
*         DO;                                              /*@0001VLS*/ 01342000
*           NEXTDATE = ZERO;       /* CLEAR NEXT AREA POINTER        */ 01343000
         L     @06,DATEPTR                                         0601 01344000
         ST    @15,NEXTDATE(,@06)                                  0601 01345000
*           LOWDATE = DATE(2:4);                           /*@0001VLS*/ 01346000
         MVC   LOWDATE(3,@06),DATE+1(R7)                           0602 01347000
*           HIDATE = DATE(2:4);                            /*@0001VLS*/ 01348000
         MVC   HIDATE(3,@06),DATE+1(R7)                            0603 01349000
*           DATECC = CHAIN;                                /*@0001VLS*/ 01350000
         MVC   DATECC(6,@06),CHAIN                                 0604 01351000
*           IF LHDATPTR = ZERO THEN                                0605 01352000
         C     @15,LHDATPTR                                        0605 01353000
         BNE   @RF00605                                            0605 01354000
*             LHDATPTR = DATEPTR;  /* POINT TO FIRST ENTRY   @0001VLS*/ 01355000
         ST    @06,LHDATPTR                                        0606 01356000
*           ELSE                                                   0607 01357000
*             Z -> NEXTDATE = DATEPTR;                     /*@0001VLS*/ 01358000
         B     @RC00605                                            0607 01359000
@RF00605 L     @06,DATEPTR                                         0607 01360000
         L     @01,Z                                               0607 01361000
         ST    @06,NEXTDATE(,@01)                                  0607 01362000
*         END;                                             /*@0001VLS*/ 01363000
@RC00605 DS    0H                                                  0609 01364000
*     END;                                                 /*@0001VLS*/ 01365000
@RF00599 DS    0H                                                  0610 01366000
*   IF HVOLDATE > DATE(2:4) THEN                                   0610 01367000
@RF00592 CLC   HVOLDATE(3),DATE+1(R7)                              0610 01368000
         BNH   @RF00610                                            0610 01369000
*     HVOLDATE = DATE(2:4);        /* HIGH VOLUME DATE       @0001VLS*/ 01370000
         MVC   HVOLDATE(3),DATE+1(R7)                              0611 01371000
*   IF LVOLDATE < DATE(2:4) THEN                                   0612 01372000
@RF00610 CLC   LVOLDATE(3),DATE+1(R7)                              0612 01373000
         BNL   @RF00612                                            0612 01374000
*     LVOLDATE = DATE(2:4);        /* LOW VOLUME DATE        @0001VLS*/ 01375000
         MVC   LVOLDATE(3),DATE+1(R7)                              0613 01376000
* END;                                                     /*@0001VLS*/ 01377000
@EL00011 DS    0H                                                  0614 01378000
@EF00011 DS    0H                                                  0614 01379000
@ER00011 LM    @14,@12,@SA00011                                    0614 01380000
         BR    @14                                                 0614 01381000
*OUTTYPES: PROC;                   /* SORT BREAK PROCESSING  @0001VLS*/ 01382000
OUTTYPES STM   @14,@12,@SA00012                                    0615 01383000
* IF HEAD3 = OFF THEN                                              0616 01384000
         TM    HEAD3,B'00000100'                                   0616 01385000
         BNZ   @RF00616                                            0616 01386000
*   DO;                                                    /*@0001VLS*/ 01387000
*     IF HEAD2 = ON THEN                                           0618 01388000
         TM    HEAD2,B'00001000'                                   0618 01389000
         BNO   @RF00618                                            0618 01390000
*       CALL OUTCODES;             /* THE ERROR CODES        @0001VLS*/ 01391000
         BAL   @14,OUTCODES                                        0619 01392000
*     MSGADDR = SPACER;            /* SPACER LINE            @0001VLS*/ 01393000
@RF00618 MVC   MSGADDR(132),SPACER                                 0620 01394000
*     CALL PRINTIT;                                        /*@0001VLS*/ 01395000
         BAL   @14,PRINTIT                                         0621 01396000
*     CALL PRINTIT;                                        /*@0001VLS*/ 01397000
         BAL   @14,PRINTIT                                         0622 01398000
*     MYLINCT = MYLINCT - TWO;                             /*@0001VLS*/ 01399000
         LA    @06,2                                               0623 01400000
         L     @15,MYLINCT                                         0623 01401000
         SLR   @15,@06                                             0623 01402000
         ST    @15,MYLINCT                                         0623 01403000
*     IF MYLINCT < TWO THEN        /* BOTH LINES WILL NOT FIT ON PAGE*/ 01404000
         CR    @15,@06                                             0624 01405000
         BNL   @RF00624                                            0624 01406000
*       CALL PAGEJECT;                                     /*@0001VLS*/ 01407000
         BAL   @14,PAGEJECT                                        0625 01408000
*     MSGADDR(40:39+LENGTH(CUATH1)) = CUATH1;              /*@0001VLS*/ 01409000
@RF00624 MVC   MSGADDR+39(48),CUATH1                               0626 01410000
*     CALL PRINTIT;                                        /*@0001VLS*/ 01411000
         BAL   @14,PRINTIT                                         0627 01412000
*     MSGADDR(20:19+LENGTH(NOTOTALS)) = NOTOTALS;          /*@0001VLS*/ 01413000
         MVC   MSGADDR+19(32),NOTOTALS                             0628 01414000
*     CALL PRINTIT;                                        /*@0001VLS*/ 01415000
         BAL   @14,PRINTIT                                         0629 01416000
*   END;                                                   /*@0001VLS*/ 01417000
* HEAD1 = OFF;                                             /*@0001VLS*/ 01418000
@RF00616 DS    0H                                                  0632 01419000
* HEAD2 = OFF;                                             /*@0001VLS*/ 01420000
* HEAD3 = OFF;                                             /*@0001VLS*/ 01421000
         NI    HEAD1,B'11100011'                                   0633 01422000
* IF EOTABLE ¬= 'FFFF'X THEN                                       0634 01423000
         L     @06,CURRPTR                                         0634 01424000
         CLC   EOTABLE(2,@06),@CB00261                             0634 01425000
         BE    @RF00634                                            0634 01426000
*   OLDCPUCU = SORTCPUC;                                   /*@0001VLS*/ 01427000
         MVC   OLDCPUCU(6),SORTCPUC(@06)                           0635 01428000
* END;                                                     /*@0001VLS*/ 01429000
@EL00012 DS    0H                                                  0636 01430000
@EF00012 DS    0H                                                  0636 01431000
@ER00012 LM    @14,@12,@SA00012                                    0636 01432000
         BR    @14                                                 0636 01433000
*/*                                                          @0001VLS*/ 01434000
*/* OUTPUT THE TEMPORARY ERROR SUMMARY.  ONLY PRODUCE A LINE FOR EACH*/ 01435000
*/* CUA FOR WHICH THERE WERE ANY SIOS.                       @0001VLS*/ 01436000
*/*                                                          @0001VLS*/ 01437000
*TEMPSUM:  PROC;                                           /*@0001VLS*/ 01438000
TEMPSUM  STM   @14,@12,@SA00013                                    0637 01439000
*   SYSSIOS = ZERO;                                        /*@0001VLS*/ 01440000
         SLR   @06,@06                                             0638 01441000
         ST    @06,SYSSIOS                                         0638 01442000
*   SYSRDS = ZERO;                                         /*@0001VLS*/ 01443000
         ST    @06,SYSRDS                                          0639 01444000
*   SYSRTS = ZERO;                                         /*@0001VLS*/ 01445000
         ST    @06,SYSRTS                                          0640 01446000
*   SYSMNTS = ZERO;                                        /*@0001VLS*/ 01447000
         ST    @06,SYSMNTS                                         0641 01448000
*   RECCPU = CPU;                      /* INITIALIZE FOR THE SEARCH  */ 01449000
         L     @06,CURRPTR                                         0642 01450000
         MVC   RECCPU(3),CPU(@06)                                  0642 01451000
*   RECCUA = CONTRCUA;                 /* OF THE DATE RANGE  @0001VLS*/ 01452000
         MVC   RECCUA(2),CONTRCUA(@06)                             0643 01453000
*   RECDEV = DEVTYPE;                  /* DEVICE REQS'TD.    @D3503SG*/ 01454000
         MVC   RECDEV(1),DEVTYPE(@06)                              0644 01455000
*   IF HEAD1 = OFF THEN                                            0645 01456000
         TM    HEAD1,B'00010000'                                   0645 01457000
         BNZ   @RF00645                                            0645 01458000
*     CALL NOHEAD1;                    /* OUTPUT NO PART 1 MESSAGE   */ 01459000
         BAL   @14,NOHEAD1                                         0646 01460000
*   IF HEAD2 = OFF THEN                                            0647 01461000
@RF00645 TM    HEAD2,B'00001000'                                   0647 01462000
         BNZ   @RF00647                                            0647 01463000
*     CALL NOHEAD2;                    /* OUTPUT NO PART2 MESSAGE    */ 01464000
         BAL   @14,NOHEAD2                                         0648 01465000
*   ELSE                                                           0649 01466000
*     CALL OUTCODES;                   /* OUTPUT ERROR CODES @0001VLS*/ 01467000
         B     @RC00647                                            0649 01468000
@RF00647 BAL   @14,OUTCODES                                        0649 01469000
*   MSGADDR = SPACER;                                      /*@0001VLS*/ 01470000
@RC00647 MVC   MSGADDR(132),SPACER                                 0650 01471000
*   CALL PRINTIT;                                          /*@0001VLS*/ 01472000
         BAL   @14,PRINTIT                                         0651 01473000
*   CALL PRINTIT;                                          /*@0001VLS*/ 01474000
         BAL   @14,PRINTIT                                         0652 01475000
*   MYLINCT = MYLINCT - TWO;                               /*@0001VLS*/ 01476000
         L     @06,MYLINCT                                         0653 01477000
         BCTR  @06,0                                               0653 01478000
         BCTR  @06,0                                               0653 01479000
         ST    @06,MYLINCT                                         0653 01480000
*   IF MYLINCT < EIGHT THEN            /* PAGE EJECT IF REST OF REPRT*/ 01481000
         C     @06,@CF00067                                        0654 01482000
         BNL   @RF00654                                            0654 01483000
*     CALL PAGEJECT;                   /* WILL NOT FIT       @0001VLS*/ 01484000
         BAL   @14,PAGEJECT                                        0655 01485000
*   MSGADDR(40:39+LENGTH(CUATH1)) = CUATH1;                /*@0001VLS*/ 01486000
@RF00654 MVC   MSGADDR+39(48),CUATH1                               0656 01487000
*   CALL PRINTIT;                                          /*@0001VLS*/ 01488000
         BAL   @14,PRINTIT                                         0657 01489000
*   MSGADDR(7:6+LENGTH(CUATH2)) = CUATH2;                  /*@0001VLS*/ 01490000
         MVC   MSGADDR+6(82),CUATH2                                0658 01491000
*   CALL PRINTIT;                                          /*@0001VLS*/ 01492000
         BAL   @14,PRINTIT                                         0659 01493000
*   MSGADDR(11:10+LENGTH(CUATH3)) = CUATH3;                /*@0001VLS*/ 01494000
         MVC   MSGADDR+10(108),CUATH3                              0660 01495000
*   CALL PRINTIT;                                          /*@0001VLS*/ 01496000
         BAL   @14,PRINTIT                                         0661 01497000
*   MSGADDR = CUATH4;                                      /*@0001VLS*/ 01498000
         MVI   MSGADDR+119,C' '                                    0662 01499000
         MVC   MSGADDR+120(12),MSGADDR+119                         0662 01500000
         MVC   MSGADDR(119),CUATH4                                 0662 01501000
*   CALL PRINTIT;                                          /*@0001VLS*/ 01502000
         BAL   @14,PRINTIT                                         0663 01503000
*   CALL PRINTIT;                                          /*@0001VLS*/ 01504000
         BAL   @14,PRINTIT                                         0664 01505000
*   SUMPTR = TABCCHHR(1:4);            /* ADDRESS OF THE COUNTERS    */ 01506000
         L     @06,CURRPTR                                         0665 01507000
         MVC   SUMPTR(4),TABCCHHR(@06)                             0665 01508000
*   DO I = 1 TO 16;                                        /*@0001VLS*/ 01509000
         LA    @06,1                                               0666 01510000
         STH   @06,I                                               0666 01511000
@DL00666 DS    0H                                                  0667 01512000
*     IF SIOS(I) ¬= ZERO THEN                                      0667 01513000
         MH    @06,@CH00727                                        0667 01514000
         L     @01,SUMPTR                                          0667 01515000
         AL    @01,@CF01754                                        0667 01516000
         L     @06,SIOS-8(@06,@01)                                 0667 01517000
         LTR   @06,@06                                             0667 01518000
         BZ    @RF00667                                            0667 01519000
*       DO;                            /* ANY SIOS           @0001VLS*/ 01520000
*         IF MYLINCT < THREE THEN      /* NEW PAGE IF REST OF REPORT */ 01521000
         L     @06,MYLINCT                                         0669 01522000
         C     @06,@CF00038                                        0669 01523000
         BNL   @RF00669                                            0669 01524000
*           DO;                        /* WILL NOT FIT       @0001VLS*/ 01525000
*             CALL PAGEJECT;                               /*@0001VLS*/ 01526000
         BAL   @14,PAGEJECT                                        0671 01527000
*             MSGADDR(40:30+LENGTH(CUATH1)) = CUATH1;      /*@0001VLS*/ 01528000
         MVC   MSGADDR+39(39),CUATH1                               0672 01529000
*             CALL PRINTIT;                                /*@0001VLS*/ 01530000
         BAL   @14,PRINTIT                                         0673 01531000
*             MSGADDR(7:6+LENGTH(CUATH2)) = CUATH2;        /*@0001VLS*/ 01532000
         MVC   MSGADDR+6(82),CUATH2                                0674 01533000
*             CALL PRINTIT;                                /*@0001VLS*/ 01534000
         BAL   @14,PRINTIT                                         0675 01535000
*             MSGADDR(11:10+LENGTH(CUATH3)) = CUATH3;      /*@0001VLS*/ 01536000
         MVC   MSGADDR+10(108),CUATH3                              0676 01537000
*             CALL PRINTIT;                                /*@0001VLS*/ 01538000
         BAL   @14,PRINTIT                                         0677 01539000
*             MSGADDR = CUATH4;                            /*@0001VLS*/ 01540000
         MVI   MSGADDR+119,C' '                                    0678 01541000
         MVC   MSGADDR+120(12),MSGADDR+119                         0678 01542000
         MVC   MSGADDR(119),CUATH4                                 0678 01543000
*             CALL PRINTIT;                                /*@0001VLS*/ 01544000
         BAL   @14,PRINTIT                                         0679 01545000
*             CALL PRINTIT;                                /*@0001VLS*/ 01546000
         BAL   @14,PRINTIT                                         0680 01547000
*             MYLINCT = MYLINCT - FIVE;                    /*@0001VLS*/ 01548000
         L     @06,MYLINCT                                         0681 01549000
         SL    @06,@CF00036                                        0681 01550000
         ST    @06,MYLINCT                                         0681 01551000
*           END;                                           /*@0001VLS*/ 01552000
*         TEMPAREA(19:20) = CUX | (I-1);  /* CONVERT THE CUA @0001VLS*/ 01553000
@RF00669 LH    @06,I                                               0683 01554000
         BCTR  @06,0                                               0683 01555000
         L     @01,SUMPTR                                          0683 01556000
         SLR   @00,@00                                             0683 01557000
         ICM   @00,3,CUX(@01)                                      0683 01558000
         OR    @06,@00                                             0683 01559000
         STCM  @06,3,TEMPAREA+18                                   0683 01560000
*         CALL CONVERT(TEMPAREA(19:20),TEMPAREA,TWO);      /*@0001VLS*/ 01561000
         LA    @01,@AL00684                                        0684 01562000
         BAL   @14,CONVERT                                         0684 01563000
*         SUMCUA = TEMPAREA(2:4);                          /*@0001VLS*/ 01564000
         MVC   SUMCUA(3),TEMPAREA+1                                0685 01565000
*         CALL CALCPERC(READER(I),SIOS(I),READPERC);       /*@0001VLS*/ 01566000
         L     @06,SUMPTR                                          0686 01567000
         LH    @15,I                                               0686 01568000
         MH    @15,@CH00727                                        0686 01569000
         LA    @01,0(@15,@06)                                      0686 01570000
         AL    @01,@CF01755                                        0686 01571000
         ST    @01,@AL00001                                        0686 01572000
         AL    @06,@CF01754                                        0686 01573000
         LA    @06,SIOS-8(@15,@06)                                 0686 01574000
         ST    @06,@AL00001+4                                      0686 01575000
         LA    @06,READPERC                                        0686 01576000
         ST    @06,@AL00001+8                                      0686 01577000
         LA    @01,@AL00001                                        0686 01578000
         BAL   @14,CALCPERC                                        0686 01579000
*         CALL CALCPERC(WRITER(I),SIOS(I),RITEPERC);       /*@0001VLS*/ 01580000
         L     @06,SUMPTR                                          0687 01581000
         LH    @15,I                                               0687 01582000
         MH    @15,@CH00727                                        0687 01583000
         LA    @01,0(@15,@06)                                      0687 01584000
         AL    @01,@CF01756                                        0687 01585000
         ST    @01,@AL00001                                        0687 01586000
         AL    @06,@CF01754                                        0687 01587000
         LA    @06,SIOS-8(@15,@06)                                 0687 01588000
         ST    @06,@AL00001+4                                      0687 01589000
         LA    @06,RITEPERC                                        0687 01590000
         ST    @06,@AL00001+8                                      0687 01591000
         LA    @01,@AL00001                                        0687 01592000
         BAL   @14,CALCPERC                                        0687 01593000
*         CALL CONVERT (FDATE(I),TEMPAREA,THREE);          /*@0001VLS*/ 01594000
         MVC   @AL00001+4(8),@AL00688                              0688 01595000
         LH    @06,I                                               0688 01596000
         MH    @06,@CH00727                                        0688 01597000
         L     @01,SUMPTR                                          0688 01598000
         AL    @01,@CF01757                                        0688 01599000
         LA    @06,FDATE-52(@06,@01)                               0688 01600000
         ST    @06,@AL00001                                        0688 01601000
         LA    @01,@AL00001                                        0688 01602000
         BAL   @14,CONVERT                                         0688 01603000
*         SUMFDATE = TEMPAREA(1:5);                        /*@0001VLS*/ 01604000
         MVC   SUMFDATE(5),TEMPAREA                                0689 01605000
*         CALL CONVERT (TDATE(I),TEMPAREA,THREE);          /*@0001VLS*/ 01606000
         MVC   @AL00001+4(8),@AL00690                              0690 01607000
         LH    @06,I                                               0690 01608000
         MH    @06,@CH00727                                        0690 01609000
         L     @01,SUMPTR                                          0690 01610000
         BCTR  @01,0                                               0690 01611000
         LA    @06,TDATE-55(@06,@01)                               0690 01612000
         ST    @06,@AL00001                                        0690 01613000
         LA    @01,@AL00001                                        0690 01614000
         BAL   @14,CONVERT                                         0690 01615000
*         SUMTDATE = TEMPAREA(1:5);                        /*@0001VLS*/ 01616000
         MVC   SUMTDATE(5),TEMPAREA                                0691 01617000
*         CALL CONVBIN3(SIOS(I),SUMSIOS);                  /*@0001VLS*/ 01618000
         LH    @06,I                                               0692 01619000
         MH    @06,@CH00727                                        0692 01620000
         L     @01,SUMPTR                                          0692 01621000
         AL    @01,@CF01754                                        0692 01622000
         LA    @06,SIOS-8(@06,@01)                                 0692 01623000
         ST    @06,@AL00001                                        0692 01624000
         LA    @06,SUMSIOS                                         0692 01625000
         ST    @06,@AL00001+4                                      0692 01626000
         LA    @01,@AL00001                                        0692 01627000
         BAL   @14,CONVBIN3                                        0692 01628000
*         SYSSIOS = SYSSIOS + SIOS(I);   /* TOTAL ALL SIOS   @0001VLS*/ 01629000
         L     @06,SUMPTR                                          0693 01630000
         LH    @15,I                                               0693 01631000
         MH    @15,@CH00727                                        0693 01632000
         L     @14,SYSSIOS                                         0693 01633000
         LA    @01,0(@15,@06)                                      0693 01634000
         AL    @01,@CF01754                                        0693 01635000
         AL    @14,SIOS-8(,@01)                                    0693 01636000
         ST    @14,SYSSIOS                                         0693 01637000
*         CALL CONVBIN (MOUNTS(I),SUMMNTS);                /*@0001VLS*/ 01638000
         AL    @06,@CF01758                                        0694 01639000
         LA    @06,MOUNTS-28(@15,@06)                              0694 01640000
         ST    @06,@AL00001                                        0694 01641000
         LA    @06,SUMMNTS                                         0694 01642000
         ST    @06,@AL00001+4                                      0694 01643000
         LA    @01,@AL00001                                        0694 01644000
         BAL   @14,CONVBIN                                         0694 01645000
*         SYSMNTS = SYSMNTS + MOUNTS(I);  /* TOTAL ALL MOUNTS        */ 01646000
         L     @06,SUMPTR                                          0695 01647000
         LH    @15,I                                               0695 01648000
         MH    @15,@CH00727                                        0695 01649000
         L     @14,SYSMNTS                                         0695 01650000
         LA    @01,0(@15,@06)                                      0695 01651000
         AL    @01,@CF01758                                        0695 01652000
         AL    @14,MOUNTS-28(,@01)                                 0695 01653000
         ST    @14,SYSMNTS                                         0695 01654000
*         SUMP1 = PERIOD;                                  /*@0001VLS*/ 01655000
         MVI   SUMP1,C'.'                                          0696 01656000
*         CALL CONVBIN (READER(I),SUMREAD);                /*@0001VLS*/ 01657000
         AL    @06,@CF01755                                        0697 01658000
         LA    @06,READER-12(@15,@06)                              0697 01659000
         ST    @06,@AL00001                                        0697 01660000
         LA    @06,SUMREAD                                         0697 01661000
         ST    @06,@AL00001+4                                      0697 01662000
         LA    @01,@AL00001                                        0697 01663000
         BAL   @14,CONVBIN                                         0697 01664000
*         SYSRDS = SYSRDS + READER(I);                     /*@0001VLS*/ 01665000
         L     @06,SUMPTR                                          0698 01666000
         LH    @15,I                                               0698 01667000
         MH    @15,@CH00727                                        0698 01668000
         L     @14,SYSRDS                                          0698 01669000
         LA    @01,0(@15,@06)                                      0698 01670000
         AL    @01,@CF01755                                        0698 01671000
         AL    @14,READER-12(,@01)                                 0698 01672000
         ST    @14,SYSRDS                                          0698 01673000
*         CALL CONVBIN (CLEANER(I),SUMCLEAN);              /*@0001VLS*/ 01674000
         AL    @06,@CF01759                                        0699 01675000
         LA    @06,CLEANER-16(@15,@06)                             0699 01676000
         ST    @06,@AL00001                                        0699 01677000
         LA    @06,SUMCLEAN                                        0699 01678000
         ST    @06,@AL00001+4                                      0699 01679000
         LA    @01,@AL00001                                        0699 01680000
         BAL   @14,CONVBIN                                         0699 01681000
*         SUMP2 = PERIOD;                                  /*@0001VLS*/ 01682000
         MVI   SUMP2,C'.'                                          0700 01683000
*         CALL CONVBIN (WRITER(I),SUMWRITE);               /*@0001VLS*/ 01684000
         LH    @06,I                                               0701 01685000
         MH    @06,@CH00727                                        0701 01686000
         L     @01,SUMPTR                                          0701 01687000
         AL    @01,@CF01756                                        0701 01688000
         LA    @06,WRITER-20(@06,@01)                              0701 01689000
         ST    @06,@AL00001                                        0701 01690000
         LA    @06,SUMWRITE                                        0701 01691000
         ST    @06,@AL00001+4                                      0701 01692000
         LA    @01,@AL00001                                        0701 01693000
         BAL   @14,CONVBIN                                         0701 01694000
*         SYSRTS = SYSRTS + WRITER(I);                     /*@0001VLS*/ 01695000
         L     @06,SUMPTR                                          0702 01696000
         LH    @15,I                                               0702 01697000
         MH    @15,@CH00727                                        0702 01698000
         L     @14,SYSRTS                                          0702 01699000
         LA    @01,0(@15,@06)                                      0702 01700000
         AL    @01,@CF01756                                        0702 01701000
         AL    @14,WRITER-20(,@01)                                 0702 01702000
         ST    @14,SYSRTS                                          0702 01703000
*         CALL CONVBIN (ERASE(I),SUMERASE);                /*@0001VLS*/ 01704000
         AL    @06,@CF01760                                        0703 01705000
         LA    @06,ERASE-24(@15,@06)                               0703 01706000
         ST    @06,@AL00001                                        0703 01707000
         LA    @06,SUMERASE                                        0703 01708000
         ST    @06,@AL00001+4                                      0703 01709000
         LA    @01,@AL00001                                        0703 01710000
         BAL   @14,CONVBIN                                         0703 01711000
*         SUMP3 = PERIOD;                                  /*@0001VLS*/ 01712000
         MVI   SUMP3,C'.'                                          0704 01713000
*         CALL CONVBIN2(VRC(I),SUMVRC);                    /*@0001VLS*/ 01714000
         LH    @06,I                                               0705 01715000
         MH    @06,@CH00727                                        0705 01716000
         L     @01,SUMPTR                                          0705 01717000
         AL    @01,@CF01761                                        0705 01718000
         LA    @06,VRC-40(@06,@01)                                 0705 01719000
         ST    @06,@AL00001                                        0705 01720000
         LA    @06,SUMVRC                                          0705 01721000
         ST    @06,@AL00001+4                                      0705 01722000
         LA    @01,@AL00001                                        0705 01723000
         BAL   @14,CONVBIN2                                        0705 01724000
*         CALL CONVBIN2(STRDCHK(I),SUMSTRD);               /*@0001VLS*/ 01725000
         LH    @06,I                                               0706 01726000
         MH    @06,@CH00727                                        0706 01727000
         L     @01,SUMPTR                                          0706 01728000
         AL    @01,@CF01762                                        0706 01729000
         LA    @06,STRDCHK-42(@06,@01)                             0706 01730000
         ST    @06,@AL00001                                        0706 01731000
         LA    @06,SUMSTRD                                         0706 01732000
         ST    @06,@AL00001+4                                      0706 01733000
         LA    @01,@AL00001                                        0706 01734000
         BAL   @14,CONVBIN2                                        0706 01735000
*         CALL CONVBIN2(PARTRECK(I),SUMPART);              /*@0001VLS*/ 01736000
         LH    @06,I                                               0707 01737000
         MH    @06,@CH00727                                        0707 01738000
         L     @01,SUMPTR                                          0707 01739000
         AL    @01,@CF01763                                        0707 01740000
         LA    @06,PARTRECK-44(@06,@01)                            0707 01741000
         ST    @06,@AL00001                                        0707 01742000
         LA    @06,SUMPART                                         0707 01743000
         ST    @06,@AL00001+4                                      0707 01744000
         LA    @01,@AL00001                                        0707 01745000
         BAL   @14,CONVBIN2                                        0707 01746000
*         CALL CONVBIN2(OVERRUNS(I),SUMOVER);              /*@0001VLS*/ 01747000
         LH    @06,I                                               0708 01748000
         MH    @06,@CH00727                                        0708 01749000
         L     @01,SUMPTR                                          0708 01750000
         AL    @01,@CF01764                                        0708 01751000
         LA    @06,OVERRUNS-46(@06,@01)                            0708 01752000
         ST    @06,@AL00001                                        0708 01753000
         LA    @06,SUMOVER                                         0708 01754000
         ST    @06,@AL00001+4                                      0708 01755000
         LA    @01,@AL00001                                        0708 01756000
         BAL   @14,CONVBIN2                                        0708 01757000
*         CALL CONVBIN2(VELCHGS(I),SUMVEL);                /*@0001VLS*/ 01758000
         LH    @06,I                                               0709 01759000
         MH    @06,@CH00727                                        0709 01760000
         L     @01,SUMPTR                                          0709 01761000
         AL    @01,@CF01765                                        0709 01762000
         LA    @06,VELCHGS-48(@06,@01)                             0709 01763000
         ST    @06,@AL00001                                        0709 01764000
         LA    @06,SUMVEL                                          0709 01765000
         ST    @06,@AL00001+4                                      0709 01766000
         LA    @01,@AL00001                                        0709 01767000
         BAL   @14,CONVBIN2                                        0709 01768000
*         CALL CONVBIN2(IBG(I),SUMIBG);                    /*@0001VLS*/ 01769000
         LH    @06,I                                               0710 01770000
         MH    @06,@CH00727                                        0710 01771000
         L     @01,SUMPTR                                          0710 01772000
         AL    @01,@CF01766                                        0710 01773000
         LA    @06,IBG-50(@06,@01)                                 0710 01774000
         ST    @06,@AL00001                                        0710 01775000
         LA    @06,SUMIBG                                          0710 01776000
         ST    @06,@AL00001+4                                      0710 01777000
         LA    @01,@AL00001                                        0710 01778000
         BAL   @14,CONVBIN2                                        0710 01779000
*         CALL PRINTIT;                                    /*@0001VLS*/ 01780000
         BAL   @14,PRINTIT                                         0711 01781000
*         MYLINCT = MYLINCT - ONE;                         /*@0001VLS*/ 01782000
         L     @06,MYLINCT                                         0712 01783000
         BCTR  @06,0                                               0712 01784000
         ST    @06,MYLINCT                                         0712 01785000
*       END;                                               /*@0001VLS*/ 01786000
*   END;                                                   /*@0001VLS*/ 01787000
@RF00667 LA    @06,1                                               0714 01788000
         AH    @06,I                                               0714 01789000
         STH   @06,I                                               0714 01790000
         C     @06,@CF00088                                        0714 01791000
         BNH   @DL00666                                            0714 01792000
*   CALL PRINTIT;                                          /*@0001VLS*/ 01793000
         BAL   @14,PRINTIT                                         0715 01794000
*   IF SYSSIOS ¬= ZERO THEN                                        0716 01795000
         L     @06,SYSSIOS                                         0716 01796000
         LTR   @06,@06                                             0716 01797000
         BZ    @RF00716                                            0716 01798000
*     DO;                              /* TOTALS LINE        @0001VLS*/ 01799000
*       SUMT1 = TOTAL;                                     /*@0001VLS*/ 01800000
         MVC   SUMT1(6),@CC00518                                   0718 01801000
*       CALL CALCPERC(SYSRDS,SYSSIOS,READPERC);            /*@0001VLS*/ 01802000
         LA    @01,@AL00719                                        0719 01803000
         BAL   @14,CALCPERC                                        0719 01804000
*       CALL CALCPERC(SYSRTS,SYSSIOS,RITEPERC);            /*@0001VLS*/ 01805000
         LA    @01,@AL00720                                        0720 01806000
         BAL   @14,CALCPERC                                        0720 01807000
*       CALL CONVBIN3(SYSSIOS,SUMSIOS);                    /*@0001VLS*/ 01808000
         LA    @01,@AL00721                                        0721 01809000
         BAL   @14,CONVBIN3                                        0721 01810000
*       CALL CONVBIN (SYSMNTS,SUMMNTS);                    /*@0001VLS*/ 01811000
         LA    @01,@AL00722                                        0722 01812000
         BAL   @14,CONVBIN                                         0722 01813000
*       CALL CONVBIN (SYSRDS,SUMREAD);                     /*@0001VLS*/ 01814000
         LA    @01,@AL00723                                        0723 01815000
         BAL   @14,CONVBIN                                         0723 01816000
*       CALL CONVBIN (SYSRTS,SUMWRITE);                    /*@0001VLS*/ 01817000
         LA    @01,@AL00724                                        0724 01818000
         BAL   @14,CONVBIN                                         0724 01819000
*     END;                                                 /*@0001VLS*/ 01820000
*   ELSE                                                           0726 01821000
*     MSGADDR(1:LENGTH(NOTOTALS)) = NOTOTALS;              /*@0001VLS*/ 01822000
         B     @RC00716                                            0726 01823000
@RF00716 MVC   MSGADDR(32),NOTOTALS                                0726 01824000
*   CALL PRINTIT;                                          /*@0001VLS*/ 01825000
@RC00716 BAL   @14,PRINTIT                                         0727 01826000
*   HEAD3 = ON;                                            /*@0001VLS*/ 01827000
         OI    HEAD3,B'00000100'                                   0728 01828000
*   EOTABLE(1:2) = EOT;                                    /*@D3503SG*/ 01829000
         L     @06,CURRPTR                                         0729 01830000
         MVC   EOTABLE(2,@06),@CB00261                             0729 01831000
* END;                                                     /*@0001VLS*/ 01832000
@EL00013 DS    0H                                                  0730 01833000
@EF00013 DS    0H                                                  0730 01834000
@ER00013 LM    @14,@12,@SA00013                                    0730 01835000
         BR    @14                                                 0730 01836000
*/********************************************************************/ 01837000
*/*                      8809DEV                             @D3503SG*/ 01838000
*/* OUTPUT THE TEMPORARY ERROR SUMMARY.  ONLY PRODUCE A LINE @D3503SG*/ 01839000
*/* FOR EACH CUA FOR WHICH THERE WERE ANY SIOS.              @D3503SG*/ 01840000
*/*                                                          @D3503SG*/ 01841000
*/********************************************************************/ 01842000
*SFSUM:  PROC;                                            /*@D3503SG*/  01843000
SFSUM    STM   @14,@12,@SA00014                                    0731 01844000
*   SYSSIOS = ZERO;                                        /*@D3503SG*/ 01845000
         SLR   @06,@06                                             0732 01846000
         ST    @06,SYSSIOS                                         0732 01847000
*   SYWTSIOS = ZERO;                                       /*@D3503SG*/ 01848000
         ST    @06,SYWTSIOS                                        0733 01849000
*   SYSRDS = ZERO;                                         /*@D3503SG*/ 01850000
         ST    @06,SYSRDS                                          0734 01851000
*   SYSRTS = ZERO;                                         /*@D3503SG*/ 01852000
         ST    @06,SYSRTS                                          0735 01853000
*   SYSMNTS = ZERO;                                        /*@D3503SG*/ 01854000
         ST    @06,SYSMNTS                                         0736 01855000
*   RECCPU = CPU;                      /* INITIALIZE FOR THE SEARCH  */ 01856000
         L     @06,CURRPTR                                         0737 01857000
         MVC   RECCPU(3),CPU(@06)                                  0737 01858000
*   RECCUA = CONTRCUA;                 /* OF THE DATE RANGE  @D3503SG*/ 01859000
         MVC   RECCUA(2),CONTRCUA(@06)                             0738 01860000
*   RECDEV = DEVTYPE;                  /* DEVICE REQST'D.    @D3503SG*/ 01861000
         MVC   RECDEV(1),DEVTYPE(@06)                              0739 01862000
*   IF HEAD1 = OFF THEN                                            0740 01863000
         TM    HEAD1,B'00010000'                                   0740 01864000
         BNZ   @RF00740                                            0740 01865000
*     CALL NOHEAD1;                    /* OUTPUT NO PART 1 MESSAGE   */ 01866000
         BAL   @14,NOHEAD1                                         0741 01867000
*   IF HEAD2 = OFF THEN                                            0742 01868000
@RF00740 TM    HEAD2,B'00001000'                                   0742 01869000
         BNZ   @RF00742                                            0742 01870000
*     CALL NOHEAD2;                    /* OUTPUT NO PART2 MESSAGE    */ 01871000
         BAL   @14,NOHEAD2                                         0743 01872000
*   ELSE                                                           0744 01873000
*     CALL OUTCODES;                   /* OUTPUT ERROR CODES @D3503SG*/ 01874000
         B     @RC00742                                            0744 01875000
@RF00742 BAL   @14,OUTCODES                                        0744 01876000
*   MSGADDR = SPACER;                                      /*@D3503SG*/ 01877000
@RC00742 MVC   MSGADDR(132),SPACER                                 0745 01878000
*   CALL PRINTIT;                                          /*@D3503SG*/ 01879000
         BAL   @14,PRINTIT                                         0746 01880000
*   CALL PRINTIT;                                          /*@D3503SG*/ 01881000
         BAL   @14,PRINTIT                                         0747 01882000
*   MYLINCT = MYLINCT - TWO;                               /*@D3503SG*/ 01883000
         L     @06,MYLINCT                                         0748 01884000
         BCTR  @06,0                                               0748 01885000
         BCTR  @06,0                                               0748 01886000
         ST    @06,MYLINCT                                         0748 01887000
*   IF MYLINCT < EIGHT THEN            /* PAGE EJECT IF REST OF REPRT*/ 01888000
         C     @06,@CF00067                                        0749 01889000
         BNL   @RF00749                                            0749 01890000
*     CALL PAGEJECT;                   /* WILL NOT FIT       @D3503SG*/ 01891000
         BAL   @14,PAGEJECT                                        0750 01892000
*   MSGADDR(40:39+LENGTH(CUATH1)) = CUATH1;                /*@D3503SG*/ 01893000
@RF00749 MVC   MSGADDR+39(48),CUATH1                               0751 01894000
*   CALL PRINTIT;                                          /*@D3503SG*/ 01895000
         BAL   @14,PRINTIT                                         0752 01896000
*   CALL PRINTIT;                                          /*@D3503SG*/ 01897000
         BAL   @14,PRINTIT                                         0753 01898000
*   MSGADDR(7:6+LENGTH(CUATH6)) = CUATH6;                  /*@D3503SG*/ 01899000
         MVC   MSGADDR+6(92),CUATH6                                0754 01900000
*   CALL PRINTIT;                                          /*@D3503SG*/ 01901000
         BAL   @14,PRINTIT                                         0755 01902000
*   MSGADDR(11:10+LENGTH(CUATH7)) = CUATH7;                /*@D3503SG*/ 01903000
         MVC   MSGADDR+10(91),CUATH7                               0756 01904000
*   CALL PRINTIT;                                          /*@D3503SG*/ 01905000
         BAL   @14,PRINTIT                                         0757 01906000
*   MSGADDR(3:2+LENGTH(CUATH8)) = CUATH8;                  /*@D3503SG*/ 01907000
         MVC   MSGADDR+2(99),CUATH8                                0758 01908000
*   CALL PRINTIT;                                          /*@D3503SG*/ 01909000
         BAL   @14,PRINTIT                                         0759 01910000
*   CALL PRINTIT;                                          /*@D3503SG*/ 01911000
         BAL   @14,PRINTIT                                         0760 01912000
*   SUMPTR = TABCCHHR(1:4);            /* ADDRESS OF THE COUNTERS    */ 01913000
         L     @06,CURRPTR                                         0761 01914000
         MVC   SUMPTR(4),TABCCHHR(@06)                             0761 01915000
*   DO I = 1 TO 16;                                        /*@D3503SG*/ 01916000
         LA    @06,1                                               0762 01917000
         STH   @06,I                                               0762 01918000
@DL00762 DS    0H                                                  0763 01919000
*     IF SIOS(I) ¬= ZERO THEN                                      0763 01920000
         MH    @06,@CH00727                                        0763 01921000
         L     @01,SUMPTR                                          0763 01922000
         AL    @01,@CF01754                                        0763 01923000
         L     @06,SIOS-8(@06,@01)                                 0763 01924000
         LTR   @06,@06                                             0763 01925000
         BZ    @RF00763                                            0763 01926000
*       DO;                            /* ANY SIOS           @D3503SG*/ 01927000
*         IF MYLINCT < THREE THEN      /* NEW PAGE IF REST OF REPORT */ 01928000
         L     @06,MYLINCT                                         0765 01929000
         C     @06,@CF00038                                        0765 01930000
         BNL   @RF00765                                            0765 01931000
*           DO;                        /* WILL NOT FIT       @D3503SG*/ 01932000
*             CALL PAGEJECT;                               /*@D3503SG*/ 01933000
         BAL   @14,PAGEJECT                                        0767 01934000
*             MSGADDR(40:39+LENGTH(CUATH1)) = CUATH1;      /*@D3503SG*/ 01935000
         MVC   MSGADDR+39(48),CUATH1                               0768 01936000
*             CALL PRINTIT;                                /*@D3503SG*/ 01937000
         BAL   @14,PRINTIT                                         0769 01938000
*             MSGADDR(7:6+LENGTH(CUATH6)) = CUATH6;        /*@D3503SG*/ 01939000
         MVC   MSGADDR+6(92),CUATH6                                0770 01940000
*             CALL PRINTIT;                                /*@D3503SG*/ 01941000
         BAL   @14,PRINTIT                                         0771 01942000
*             MSGADDR(11:10+LENGTH(CUATH7)) = CUATH7;      /*@D3503SG*/ 01943000
         MVC   MSGADDR+10(91),CUATH7                               0772 01944000
*             CALL PRINTIT;                                /*@D3503SG*/ 01945000
         BAL   @14,PRINTIT                                         0773 01946000
*             MSGADDR(3:2+LENGTH(CUATH8)) = CUATH8;        /*@D3503SG*/ 01947000
         MVC   MSGADDR+2(99),CUATH8                                0774 01948000
*             CALL PRINTIT;                                /*@D3503SG*/ 01949000
         BAL   @14,PRINTIT                                         0775 01950000
*             CALL PRINTIT;                                /*@D3503SG*/ 01951000
         BAL   @14,PRINTIT                                         0776 01952000
*             MYLINCT = MYLINCT - FIVE;                    /*@D3503SG*/ 01953000
         L     @06,MYLINCT                                         0777 01954000
         SL    @06,@CF00036                                        0777 01955000
         ST    @06,MYLINCT                                         0777 01956000
*           END;        /*MYLINCT < THREE                    @D3503SG*/ 01957000
*         TEMPAREA(19:20) = CUX | (I-1);  /*1 CONVRT THE CUA @D3503SG*/ 01958000
@RF00765 LH    @06,I                                               0779 01959000
         BCTR  @06,0                                               0779 01960000
         L     @01,SUMPTR                                          0779 01961000
         SLR   @00,@00                                             0779 01962000
         ICM   @00,3,CUX(@01)                                      0779 01963000
         OR    @06,@00                                             0779 01964000
         STCM  @06,3,TEMPAREA+18                                   0779 01965000
*         CALL CONVERT(TEMPAREA(19:20),TEMPAREA,2);  /*      @D3503SG*/ 01966000
         LA    @01,@AL00780                                        0780 01967000
         BAL   @14,CONVERT                                         0780 01968000
*         STCUA = TEMPAREA(2:4);         /*                  @D3503SG*/ 01969000
         MVC   STCUA(3),TEMPAREA+1                                 0781 01970000
*         CALL CALCPERC(READER(I),SIOS(I),STRDPRC);  /*2 READ ERS.PER*/ 01971000
         L     @06,SUMPTR                                          0782 01972000
         LH    @15,I                                               0782 01973000
         MH    @15,@CH00727                                        0782 01974000
         LA    @01,0(@15,@06)                                      0782 01975000
         AL    @01,@CF01755                                        0782 01976000
         ST    @01,@AL00001                                        0782 01977000
         AL    @06,@CF01754                                        0782 01978000
         LA    @06,SIOS-8(@15,@06)                                 0782 01979000
         ST    @06,@AL00001+4                                      0782 01980000
         LA    @06,STRDPRC                                         0782 01981000
         ST    @06,@AL00001+8                                      0782 01982000
         LA    @01,@AL00001                                        0782 01983000
         BAL   @14,CALCPERC                                        0782 01984000
*         CALL CALCPERC(WRITER(I),WTSIOS(I),STWTPRC); /*3 WTE.ERS.PER*/ 01985000
         L     @06,SUMPTR                                          0783 01986000
         LH    @15,I                                               0783 01987000
         MH    @15,@CH00727                                        0783 01988000
         LA    @01,0(@15,@06)                                      0783 01989000
         AL    @01,@CF01756                                        0783 01990000
         ST    @01,@AL00001                                        0783 01991000
         AL    @06,@CF01768                                        0783 01992000
         LA    @06,WTSIOS-32(@15,@06)                              0783 01993000
         ST    @06,@AL00001+4                                      0783 01994000
         LA    @06,STWTPRC                                         0783 01995000
         ST    @06,@AL00001+8                                      0783 01996000
         LA    @01,@AL00001                                        0783 01997000
         BAL   @14,CALCPERC                                        0783 01998000
*         CALL CONVERT(FDATE(I),TEMPAREA,3);  /*             @D3503SG*/ 01999000
         MVC   @AL00001+4(8),@AL00784                              0784 02000000
         LH    @06,I                                               0784 02001000
         MH    @06,@CH00727                                        0784 02002000
         L     @01,SUMPTR                                          0784 02003000
         AL    @01,@CF01757                                        0784 02004000
         LA    @06,FDATE-52(@06,@01)                               0784 02005000
         ST    @06,@AL00001                                        0784 02006000
         LA    @01,@AL00001                                        0784 02007000
         BAL   @14,CONVERT                                         0784 02008000
*         STFRDATE = TEMPAREA(1:5);      /*4A FROM DATE      @D3503SG*/ 02009000
         MVC   STFRDATE(5),TEMPAREA                                0785 02010000
*         CALL CONVERT(TDATE(I),TEMPAREA,3);  /*             @D3503SG*/ 02011000
         MVC   @AL00001+4(8),@AL00786                              0786 02012000
         LH    @06,I                                               0786 02013000
         MH    @06,@CH00727                                        0786 02014000
         L     @01,SUMPTR                                          0786 02015000
         BCTR  @01,0                                               0786 02016000
         LA    @06,TDATE-55(@06,@01)                               0786 02017000
         ST    @06,@AL00001                                        0786 02018000
         LA    @01,@AL00001                                        0786 02019000
         BAL   @14,CONVERT                                         0786 02020000
*         STTODATE = TEMPAREA(1:5);      /*4B TO DATE        @D3503SG*/ 02021000
         MVC   STTODATE(5),TEMPAREA                                0787 02022000
*         CALL CONVBIN(SIOS(I),STRDSIO); /*5 READ SIOS       @D3503SG*/ 02023000
         LH    @06,I                                               0788 02024000
         MH    @06,@CH00727                                        0788 02025000
         L     @01,SUMPTR                                          0788 02026000
         AL    @01,@CF01754                                        0788 02027000
         LA    @06,SIOS-8(@06,@01)                                 0788 02028000
         ST    @06,@AL00001                                        0788 02029000
         LA    @06,STRDSIO                                         0788 02030000
         ST    @06,@AL00001+4                                      0788 02031000
         LA    @01,@AL00001                                        0788 02032000
         BAL   @14,CONVBIN                                         0788 02033000
*         SYSSIOS = SYSSIOS + SIOS(I);   /* TOTAL READS      @D3503SG*/ 02034000
         L     @06,SUMPTR                                          0789 02035000
         LH    @15,I                                               0789 02036000
         MH    @15,@CH00727                                        0789 02037000
         L     @14,SYSSIOS                                         0789 02038000
         LA    @01,0(@15,@06)                                      0789 02039000
         AL    @01,@CF01754                                        0789 02040000
         AL    @14,SIOS-8(,@01)                                    0789 02041000
         ST    @14,SYSSIOS                                         0789 02042000
*         CALL CONVBIN(WTSIOS(I),STWTSIO);  /*6 WRITE SIOS   @D3503SG*/ 02043000
         AL    @06,@CF01768                                        0790 02044000
         LA    @06,WTSIOS-32(@15,@06)                              0790 02045000
         ST    @06,@AL00001                                        0790 02046000
         LA    @06,STWTSIO                                         0790 02047000
         ST    @06,@AL00001+4                                      0790 02048000
         LA    @01,@AL00001                                        0790 02049000
         BAL   @14,CONVBIN                                         0790 02050000
*         SYWTSIOS = SYWTSIOS + WTSIOS(I); /* TOTAL WRITES   @D3503SG*/ 02051000
         L     @06,SUMPTR                                          0791 02052000
         LH    @15,I                                               0791 02053000
         MH    @15,@CH00727                                        0791 02054000
         L     @14,SYWTSIOS                                        0791 02055000
         LA    @01,0(@15,@06)                                      0791 02056000
         AL    @01,@CF01768                                        0791 02057000
         AL    @14,WTSIOS-32(,@01)                                 0791 02058000
         ST    @14,SYWTSIOS                                        0791 02059000
*         CALL CONVBIN(MOUNTS(I),STUMNTS);   /*7 MOUNTS      @D3503SG*/ 02060000
         AL    @06,@CF01758                                        0792 02061000
         LA    @06,MOUNTS-28(@15,@06)                              0792 02062000
         ST    @06,@AL00001                                        0792 02063000
         LA    @06,STUMNTS                                         0792 02064000
         ST    @06,@AL00001+4                                      0792 02065000
         LA    @01,@AL00001                                        0792 02066000
         BAL   @14,CONVBIN                                         0792 02067000
*         SYSMNTS = SYSMNTS + MOUNTS(I); /* TOTAL MOUNTS     @D3503SG*/ 02068000
         L     @06,SUMPTR                                          0793 02069000
         LH    @15,I                                               0793 02070000
         MH    @15,@CH00727                                        0793 02071000
         L     @14,SYSMNTS                                         0793 02072000
         LA    @01,0(@15,@06)                                      0793 02073000
         AL    @01,@CF01758                                        0793 02074000
         AL    @14,MOUNTS-28(,@01)                                 0793 02075000
         ST    @14,SYSMNTS                                         0793 02076000
*         CALL CONVBIN(READER(I),STRDERS);  /*8 READ ERRORS  @D3503SG*/ 02077000
         AL    @06,@CF01755                                        0794 02078000
         LA    @06,READER-12(@15,@06)                              0794 02079000
         ST    @06,@AL00001                                        0794 02080000
         LA    @06,STRDERS                                         0794 02081000
         ST    @06,@AL00001+4                                      0794 02082000
         LA    @01,@AL00001                                        0794 02083000
         BAL   @14,CONVBIN                                         0794 02084000
*         SYSRDS = SYSRDS + READER(I);   /* TOTAL READS      @D3503SG*/ 02085000
         L     @06,SUMPTR                                          0795 02086000
         LH    @15,I                                               0795 02087000
         MH    @15,@CH00727                                        0795 02088000
         L     @14,SYSRDS                                          0795 02089000
         LA    @01,0(@15,@06)                                      0795 02090000
         AL    @01,@CF01755                                        0795 02091000
         AL    @14,READER-12(,@01)                                 0795 02092000
         ST    @14,SYSRDS                                          0795 02093000
*         CALL CONVBIN(SRDTRYS(I),STRDTRES); /*9 READ RETRIES@D3503SG*/ 02094000
         AL    @06,@CF01769                                        0796 02095000
         LA    @06,SRDTRYS-36(@15,@06)                             0796 02096000
         ST    @06,@AL00001                                        0796 02097000
         LA    @06,STRDTRES                                        0796 02098000
         ST    @06,@AL00001+4                                      0796 02099000
         LA    @01,@AL00001                                        0796 02100000
         BAL   @14,CONVBIN                                         0796 02101000
*         CALL CONVBIN(WRITER(I),STWTERS);   /*10 WRITE ERS. @D3503SG*/ 02102000
         LH    @06,I                                               0797 02103000
         MH    @06,@CH00727                                        0797 02104000
         L     @01,SUMPTR                                          0797 02105000
         AL    @01,@CF01756                                        0797 02106000
         LA    @06,WRITER-20(@06,@01)                              0797 02107000
         ST    @06,@AL00001                                        0797 02108000
         LA    @06,STWTERS                                         0797 02109000
         ST    @06,@AL00001+4                                      0797 02110000
         LA    @01,@AL00001                                        0797 02111000
         BAL   @14,CONVBIN                                         0797 02112000
*         SYSRTS = SYSRTS + WRITER(I);   /* TOTAL WRITES     @D3503SG*/ 02113000
         L     @06,SUMPTR                                          0798 02114000
         LH    @15,I                                               0798 02115000
         MH    @15,@CH00727                                        0798 02116000
         L     @14,SYSRTS                                          0798 02117000
         LA    @01,0(@15,@06)                                      0798 02118000
         AL    @01,@CF01756                                        0798 02119000
         AL    @14,WRITER-20(,@01)                                 0798 02120000
         ST    @14,SYSRTS                                          0798 02121000
*         CALL CONVBIN(ERASE(I),STERGAPS);  /*11 ERASE GAPS  @D3503SG*/ 02122000
         AL    @06,@CF01760                                        0799 02123000
         LA    @06,ERASE-24(@15,@06)                               0799 02124000
         ST    @06,@AL00001                                        0799 02125000
         LA    @06,STERGAPS                                        0799 02126000
         ST    @06,@AL00001+4                                      0799 02127000
         LA    @01,@AL00001                                        0799 02128000
         BAL   @14,CONVBIN                                         0799 02129000
*         CALL CONVBIN2(OVERRUNS(I),STOVRUN); /*12 OVERRUNS  @D3503SG*/ 02130000
         LH    @06,I                                               0800 02131000
         MH    @06,@CH00727                                        0800 02132000
         L     @01,SUMPTR                                          0800 02133000
         AL    @01,@CF01764                                        0800 02134000
         LA    @06,OVERRUNS-46(@06,@01)                            0800 02135000
         ST    @06,@AL00001                                        0800 02136000
         LA    @06,STOVRUN                                         0800 02137000
         ST    @06,@AL00001+4                                      0800 02138000
         LA    @01,@AL00001                                        0800 02139000
         BAL   @14,CONVBIN2                                        0800 02140000
*         CALL CONVBIN2(VELCHGS(I),STVELCHK); /*13 VEL.CHKS. @D3503SG*/ 02141000
         LH    @06,I                                               0801 02142000
         MH    @06,@CH00727                                        0801 02143000
         L     @01,SUMPTR                                          0801 02144000
         AL    @01,@CF01765                                        0801 02145000
         LA    @06,VELCHGS-48(@06,@01)                             0801 02146000
         ST    @06,@AL00001                                        0801 02147000
         LA    @06,STVELCHK                                        0801 02148000
         ST    @06,@AL00001+4                                      0801 02149000
         LA    @01,@AL00001                                        0801 02150000
         BAL   @14,CONVBIN2                                        0801 02151000
*         CALL PRINTIT;                  /*                  @D3503SG*/ 02152000
         BAL   @14,PRINTIT                                         0802 02153000
*         MYLINCT = MYLINCT - ONE;       /*                  @D3503SG*/ 02154000
         L     @06,MYLINCT                                         0803 02155000
         BCTR  @06,0                                               0803 02156000
         ST    @06,MYLINCT                                         0803 02157000
*       END;         /*SIOS ¬= ZERO                          @D3503SG*/ 02158000
*   END;           /*DO 1 TO 16                              @D3503SG*/ 02159000
@RF00763 LA    @06,1                                               0805 02160000
         AH    @06,I                                               0805 02161000
         STH   @06,I                                               0805 02162000
         C     @06,@CF00088                                        0805 02163000
         BNH   @DL00762                                            0805 02164000
*   CALL PRINTIT;                    /*                      @D3503SG*/ 02165000
         BAL   @14,PRINTIT                                         0806 02166000
*   IF SYSSIOS ¬= 0  THEN            /*                      @D3503SG*/ 02167000
         L     @06,SYSSIOS                                         0807 02168000
         LTR   @06,@06                                             0807 02169000
         BZ    @RF00807                                            0807 02170000
*     DO;                            /*                      @D3503SG*/ 02171000
*       SUMT1 = TOTAL;               /*                      @D3503SG*/ 02172000
         MVC   SUMT1(6),@CC00518                                   0809 02173000
*       CALL CALCPERC(SYSRDS,SYSSIOS,STRDPRC);  /*2 READ ERS.@D3503SG*/ 02174000
         LA    @01,@AL00810                                        0810 02175000
         BAL   @14,CALCPERC                                        0810 02176000
*       CALL CALCPERC(SYSRTS,SYWTSIOS,STWTPRC); /*3 WRITE ER.@D3503SG*/ 02177000
         LA    @01,@AL00811                                        0811 02178000
         BAL   @14,CALCPERC                                        0811 02179000
*       CALL CONVBIN(SYSSIOS,STRDSIO);        /*5 READ SIOS  @D3503SG*/ 02180000
         LA    @01,@AL00812                                        0812 02181000
         BAL   @14,CONVBIN                                         0812 02182000
*       CALL CONVBIN(SYWTSIOS,STWTSIO);       /*6 WRITE SIOS @D3503SG*/ 02183000
         LA    @01,@AL00813                                        0813 02184000
         BAL   @14,CONVBIN                                         0813 02185000
*       CALL CONVBIN(SYSMNTS,STUMNTS);        /*7 MOUNTS     @D3503SG*/ 02186000
         LA    @01,@AL00814                                        0814 02187000
         BAL   @14,CONVBIN                                         0814 02188000
*       CALL CONVBIN(SYSRDS,STRDERS);         /*8 READ ERS.  @D3503SG*/ 02189000
         LA    @01,@AL00815                                        0815 02190000
         BAL   @14,CONVBIN                                         0815 02191000
*       CALL CONVBIN(SYSRTS,STWTERS);         /*10 WRITE ERS.@D3503SG*/ 02192000
         LA    @01,@AL00816                                        0816 02193000
         BAL   @14,CONVBIN                                         0816 02194000
*     END;            /* SYSSIOS NOT = ZERO                  @D3503SG*/ 02195000
*   ELSE              /* SYSSIOS = ZERO                      @D3503SG*/ 02196000
*     MSGADDR(1:LENGTH(NOTOTALS)) = NOTOTALS;  /*            @D3503SG*/ 02197000
         B     @RC00807                                            0818 02198000
@RF00807 MVC   MSGADDR(32),NOTOTALS                                0818 02199000
*   CALL PRINTIT;                  /*                        @D3503SG*/ 02200000
@RC00807 BAL   @14,PRINTIT                                         0819 02201000
*   EOTABLE(1:2) = EOT;            /*MARK END OF RECORDS     @D3503SG*/ 02202000
         L     @06,CURRPTR                                         0820 02203000
         MVC   EOTABLE(2,@06),@CB00261                             0820 02204000
*   HEAD3 = ON;                    /*                        @D3503SG*/ 02205000
         OI    HEAD3,B'00000100'                                   0821 02206000
* END;                  /* END PROC SFSUM                    @D3503SG*/ 02207000
@EL00014 DS    0H                                                  0822 02208000
@EF00014 DS    0H                                                  0822 02209000
@ER00014 LM    @14,@12,@SA00014                                    0822 02210000
         BR    @14                                                 0822 02211000
*/*                                                          @0001VLS*/ 02212000
*/* OUTPUT THE VOLUME SECTION OF THE REPORT.  FIRST PUT OUT THE      */ 02213000
*/* HEADERS.  IF NO RECORDS ARE PRESENT, THEN PUT OUT THE NO RECORDS */ 02214000
*/* MESSAGE.  OTHERWISE OUTPUT ONE LINE FOR EACH VOLUME.     @0001VLS*/ 02215000
*/*                                                          @0001VLS*/ 02216000
*OUTVOLID:  PROC;                                          /*@0001VLS*/ 02217000
OUTVOLID STM   @14,@12,@SA00015                                    0823 02218000
*     CALL PAGEJECT;                                       /*@0001VLS*/ 02219000
         BAL   @14,PAGEJECT                                        0824 02220000
*     VOLH1R = RDTHRSH;                /* READ THRESHOLD     @0001VLS*/ 02221000
         MVC   VOLH1R(3),RDTHRSH(R2)                               0825 02222000
*     VOLH1W = WRTHRSH;                /* WRITE THRESHOLD    @0001VLS*/ 02223000
         MVC   VOLH1W(3),WRTHRSH(R2)                               0826 02224000
*     MSGADDR = VOLHEAD1;                                  /*@0001VLS*/ 02225000
         MVI   MSGADDR+104,C' '                                    0827 02226000
         MVC   MSGADDR+105(27),MSGADDR+104                         0827 02227000
         MVC   MSGADDR(104),VOLHEAD1                               0827 02228000
*     CALL PRINTIT;                                        /*@0001VLS*/ 02229000
         BAL   @14,PRINTIT                                         0828 02230000
*     IF EXCTHRES(1) = ZERO & EXCTHRES(2) = ZERO THEN              0829 02231000
         SLR   @06,@06                                             0829 02232000
         C     @06,EXCTHRES                                        0829 02233000
         BNE   @RF00829                                            0829 02234000
         C     @06,EXCTHRES+4                                      0829 02235000
         BNE   @RF00829                                            0829 02236000
*       DO;                            /* NO VOLUMES PRESENT @0001VLS*/ 02237000
*         CALL CONVERT (LVOLDATE,TEMPAREA,THREE);  /* LOW DATE       */ 02238000
         LA    @01,@AL00831                                        0831 02239000
         BAL   @14,CONVERT                                         0831 02240000
*         VOLH5L = TEMPAREA(1:5);                          /*@0001VLS*/ 02241000
         MVC   VOLH5L(5),TEMPAREA                                  0832 02242000
*         CALL CONVERT (HVOLDATE,TEMPAREA,THREE);  /* HIGH DATE      */ 02243000
         LA    @01,@AL00833                                        0833 02244000
         BAL   @14,CONVERT                                         0833 02245000
*         VOLH5H = TEMPAREA(1:5);                          /*@0001VLS*/ 02246000
         MVC   VOLH5H(5),TEMPAREA                                  0834 02247000
*         MSGADDR(40:39+LENGTH(NOVOLS)) = NOVOLS;          /*@0001VLS*/ 02248000
         MVC   MSGADDR+39(46),NOVOLS                               0835 02249000
*         CALL PRINTIT;                                    /*@0001VLS*/ 02250000
         BAL   @14,PRINTIT                                         0836 02251000
*       END;                                               /*@0001VLS*/ 02252000
*     ELSE                                                         0838 02253000
*       DO;                                                /*@0001VLS*/ 02254000
         B     @RC00829                                            0838 02255000
@RF00829 DS    0H                                                  0839 02256000
*         MSGADDR = VOLH2;             /* HEADER             @0001VLS*/ 02257000
         MVC   MSGADDR(132),VOLH2                                  0839 02258000
*         CALL PRINTIT;                                    /*@0001VLS*/ 02259000
         BAL   @14,PRINTIT                                         0840 02260000
*         MSGADDR = VOLH3;             /* HEADER             @0001VLS*/ 02261000
         MVC   MSGADDR(132),VOLH3                                  0841 02262000
*         CALL PRINTIT;                                    /*@0001VLS*/ 02263000
         BAL   @14,PRINTIT                                         0842 02264000
*         CALL PRINTIT;                /* BLANK LINE         @0001VLS*/ 02265000
         BAL   @14,PRINTIT                                         0843 02266000
*         MYLINCT = MYLINCT - FIVE;                        /*@0001VLS*/ 02267000
         L     @06,MYLINCT                                         0844 02268000
         SL    @06,@CF00036                                        0844 02269000
         ST    @06,MYLINCT                                         0844 02270000
*         DO CURRPTR = CURRPTR BY TWELVE WHILE(EOTABLE ¬= EOT);    0845 02271000
         B     @DE00845                                            0845 02272000
@DL00845 DS    0H                                                  0846 02273000
*           RECCCHHR = TABCCHHR;          /* RECORD LOCATION @0001VLS*/ 02274000
         L     @06,CURRPTR                                         0846 02275000
         MVC   RECCCHHR(5,R2),TABCCHHR(@06)                        0846 02276000
*           RESPECIFY (R15) RESTRICTED;                    /*@0001VLS*/ 02277000
*           CALL IOHND(READIRCT);                          /*@0001VLS*/ 02278000
         L     @15,ADIOHND(,R2)                                    0848 02279000
         LA    @01,@AL00848                                        0848 02280000
         BALR  @14,@15                                             0848 02281000
*           RETCODE = R15;                                 /*@0001VLS*/ 02282000
         ST    R15,RETCODE                                         0849 02283000
*           RESPECIFY (R15) UNRESTRICTED;                  /*@0001VLS*/ 02284000
*           IF RETCODE = ZERO THEN                                 0851 02285000
         L     @06,RETCODE                                         0851 02286000
         SLR   @15,@15                                             0851 02287000
         CR    @06,@15                                             0851 02288000
         BNE   @RF00851                                            0851 02289000
*             DO;                                          /*@0001VLS*/ 02290000
*               IF MYLINCT <= ZERO THEN       /* LINE WILL NOT FIT   */ 02291000
         C     @15,MYLINCT                                         0853 02292000
         BL    @RF00853                                            0853 02293000
*                 DO;                         /* ON PAGE     @0001VLS*/ 02294000
*                   CALL PAGEJECT;                         /*@0001VLS*/ 02295000
         BAL   @14,PAGEJECT                                        0855 02296000
*                   MSGADDR = VOLHEAD1;                    /*@0001VLS*/ 02297000
         MVI   MSGADDR+104,C' '                                    0856 02298000
         MVC   MSGADDR+105(27),MSGADDR+104                         0856 02299000
         MVC   MSGADDR(104),VOLHEAD1                               0856 02300000
*                   CALL PRINTIT;                          /*@0001VLS*/ 02301000
         BAL   @14,PRINTIT                                         0857 02302000
*                   MSGADDR = VOLH2;                       /*@0001VLS*/ 02303000
         MVC   MSGADDR(132),VOLH2                                  0858 02304000
*                   CALL PRINTIT;                          /*@0001VLS*/ 02305000
         BAL   @14,PRINTIT                                         0859 02306000
*                   MSGADDR = VOLH3;                       /*@0001VLS*/ 02307000
         MVC   MSGADDR(132),VOLH3                                  0860 02308000
*                   CALL PRINTIT;                          /*@0001VLS*/ 02309000
         BAL   @14,PRINTIT                                         0861 02310000
*                   CALL PRINTIT;                          /*@0001VLS*/ 02311000
         BAL   @14,PRINTIT                                         0862 02312000
*                   MYLINCT = MYLINCT - FIVE;              /*@0001VLS*/ 02313000
         L     @06,MYLINCT                                         0863 02314000
         SL    @06,@CF00036                                        0863 02315000
         ST    @06,MYLINCT                                         0863 02316000
*                 END;                                     /*@0001VLS*/ 02317000
*               IF (RECTYP & FOXZERO) = OBRREC  THEN       /*@D3503SG*/ 02318000
@RF00853 MVC   @TS00001(1),RECTYP(R7)                              0865 02319000
         NI    @TS00001,X'F0'                                      0865 02320000
         CLI   @TS00001,X'30'                                      0865 02321000
         BNE   @RF00865                                            0865 02322000
*                 DO;                                      /*@D3503SG*/ 02323000
*                   VVOLUME = VOLID;                       /*@D3503SG*/ 02324000
         MVC   VVOLUME(6),VOLID(R7)                                0867 02325000
*                   CALL CONVERT(DATE(2:4),TEMPAREA,SIX);  /*@D3503SG*/ 02326000
         MVC   @AL00001+4(8),@AL00868                              0868 02327000
         LA    @06,DATE+1(,R7)                                     0868 02328000
         ST    @06,@AL00001                                        0868 02329000
         LA    @01,@AL00001                                        0868 02330000
         BAL   @14,CONVERT                                         0868 02331000
*                   VDAY = TEMPAREA(3:5);                  /*@D3503SG*/ 02332000
         MVC   VDAY(3),TEMPAREA+2                                  0869 02333000
*                   VYEAR = TEMPAREA(1:2);                 /*@D3503SG*/ 02334000
         MVC   VYEAR(2),TEMPAREA                                   0870 02335000
*                   CALL CONVERT(TIME,TEMPAREA,EIGHT);     /*@D3503SG*/ 02336000
         MVC   @AL00001+4(8),@AL00871                              0871 02337000
         LA    @06,TIME(,R7)                                       0871 02338000
         ST    @06,@AL00001                                        0871 02339000
         LA    @01,@AL00001                                        0871 02340000
         BAL   @14,CONVERT                                         0871 02341000
*                   VHH = TEMPAREA(1:2);                   /*@D3503SG*/ 02342000
         MVC   VHH(2),TEMPAREA                                     0872 02343000
*                   VMM = TEMPAREA(3:4);                   /*@D3503SG*/ 02344000
         MVC   VMM(2),TEMPAREA+2                                   0873 02345000
*                   VSS = TEMPAREA(5:6);                   /*@D3503SG*/ 02346000
         MVC   VSS(2),TEMPAREA+4                                   0874 02347000
*                   VPOINT = PERIOD;                       /*@D3503SG*/ 02348000
         MVI   VPOINT,C'.'                                         0875 02349000
*                   VTH = TEMPAREA(7:8);                   /*@D3503SG*/ 02350000
         MVC   VTH(2),TEMPAREA+6                                   0876 02351000
*                   IF SNSCNT <= 9 | OSER74XX = HEXZEROS THEN      0877 02352000
         CLC   SNSCNT(2,R7),@CH00085                               0877 02353000
         BNH   @RT00877                                            0877 02354000
         CLC   OSER74XX(2,R7),@CB00208                             0877 02355000
         BNE   @RF00877                                            0877 02356000
@RT00877 DS    0H                                                  0878 02357000
*                     DO;                                  /*@D3503SG*/ 02358000
*                       VTUSER = NA;                       /*@D3503SG*/ 02359000
         MVC   VTUSER(5),@CC00495                                  0879 02360000
*                       VMODEL = NA;                       /*@D3503SG*/ 02361000
         MVC   VMODEL(5),@CC00495                                  0880 02362000
*                       VDENS = NA;                        /*@D3503SG*/ 02363000
         MVC   VDENS(5),@CC00495                                   0881 02364000
*                       VHDRSER = NA;                      /*@D3503SG*/ 02365000
         MVC   VHDRSER(5),@CC00495                                 0882 02366000
*                     END;                                 /*@D3503SG*/ 02367000
*                   ELSE                                           0884 02368000
*                     DO;                                  /*@D3503SG*/ 02369000
         B     @RC00877                                            0884 02370000
@RF00877 DS    0H                                                  0885 02371000
*                       CALL CONVBIN2(OSER74XX,VTUSER);    /*@D3503SG*/ 02372000
         LA    @06,OSER74XX(,R7)                                   0885 02373000
         ST    @06,@AL00001                                        0885 02374000
         LA    @06,VTUSER                                          0885 02375000
         ST    @06,@AL00001+4                                      0885 02376000
         LA    @01,@AL00001                                        0885 02377000
         BAL   @14,CONVBIN2                                        0885 02378000
*                       IF SENSBIT5(4) = ON THEN                   0886 02379000
         TM    SENSBIT5+3(R7),B'00000100'                          0886 02380000
         BNO   @RF00886                                            0886 02381000
*                         VDENS = BPI1600;                 /*@D3503SG*/ 02382000
         MVI   VDENS+4,C' '                                        0887 02383000
         MVC   VDENS(4),@CC00491                                   0887 02384000
*                       ELSE                                       0888 02385000
*                         IF SENSBIT4(7) = ON THEN                 0888 02386000
         B     @RC00886                                            0888 02387000
@RF00886 TM    SENSBIT4+6(R7),B'00001000'                          0888 02388000
         BNO   @RF00888                                            0888 02389000
*                             VDENS = BPI6250;             /*@D3503SG*/ 02390000
         MVI   VDENS+4,C' '                                        0889 02391000
         MVC   VDENS(4),@CC00493                                   0889 02392000
*                         ELSE                                     0890 02393000
*                             VDENS = BPI800;              /*@D3503SG*/ 02394000
         B     @RC00888                                            0890 02395000
@RF00888 MVI   VDENS+4,C' '                                        0890 02396000
         MVC   VDENS(4),@CC00489                                   0890 02397000
*                       I = SENSE(7) & ZEROFOX;            /*@D3503SG*/ 02398000
@RC00888 DS    0H                                                  0891 02399000
@RC00886 LA    @06,15                                              0891 02400000
         SLR   @15,@15                                             0891 02401000
         IC    @15,SENSE+6(,R7)                                    0891 02402000
         NR    @06,@15                                             0891 02403000
         STH   @06,I                                               0891 02404000
*                       VMODEL(3:3) = MODNO(I+1);          /*@D3503SG*/ 02405000
         LA    @01,MODNO(@06)                                      0892 02406000
         MVC   VMODEL+2(1),0(@01)                                  0892 02407000
*                       CALL CONVBIN2(HDRSER,VHDRSER);     /*@D3503SG*/ 02408000
         LA    @06,HDRSER(,R7)                                     0893 02409000
         ST    @06,@AL00001                                        0893 02410000
         LA    @06,VHDRSER                                         0893 02411000
         ST    @06,@AL00001+4                                      0893 02412000
         LA    @01,@AL00001                                        0893 02413000
         BAL   @14,CONVBIN2                                        0893 02414000
*                     END;                                 /*@D3503SG*/ 02415000
*                   CALL CONVERT(OCUA2,TEMPAREA,TWO);      /*@D3503SG*/ 02416000
@RC00877 MVC   @AL00001+4(8),@AL00895                              0895 02417000
         LA    @06,OCUA2(,R7)                                      0895 02418000
         ST    @06,@AL00001                                        0895 02419000
         LA    @01,@AL00001                                        0895 02420000
         BAL   @14,CONVERT                                         0895 02421000
*                   VCUA = TEMPAREA(2:4);                  /*@D3503SG*/ 02422000
         MVC   VCUA(3),TEMPAREA+1                                  0896 02423000
*                   IF DEVCODE = NONSF  THEN  /*             @D3503SG*/ 02424000
         CLI   DEVCODE,X'00'                                       0897 02425000
         BNE   @RF00897                                            0897 02426000
*                     DO;                /*                  @D3503SG*/ 02427000
*                       IF DISMNT = OFF THEN                       0899 02428000
         TM    DISMNT(R7),B'00000100'                              0899 02429000
         BNZ   @RF00899                                            0899 02430000
*                         IF SENSBIT3(1) = OFF THEN                0900 02431000
         TM    SENSBIT3(R7),B'00010000'                            0900 02432000
         BNZ   @RF00900                                            0900 02433000
*                           IF SENSBIT5(2) = ON THEN               0901 02434000
         TM    SENSBIT5+1(R7),B'00000100'                          0901 02435000
         BNO   @RF00901                                            0901 02436000
*                             VRDWRT = CHARW;       /*PERMANENT WRITE*/ 02437000
         MVI   VRDWRT,C'W'                                         0902 02438000
*                           ELSE                                   0903 02439000
*                             VRDWRT = CHARR;       /*PERMANENT READ*/  02440000
         B     @RC00901                                            0903 02441000
@RF00901 MVI   VRDWRT,C'R'                                         0903 02442000
*                         ELSE                                     0904 02443000
*                             VRDWRT = CHARE;       /*EQUIPMENT CHECK*/ 02444000
         B     @RC00900                                            0904 02445000
@RF00900 MVI   VRDWRT,C'E'                                         0904 02446000
*                       CALL CONVBIN1(PERMRDS,VPRDS);      /*@D3503SG*/ 02447000
@RC00900 DS    0H                                                  0905 02448000
@RF00899 LA    @06,PERMRDS(,R7)                                    0905 02449000
         ST    @06,@AL00001                                        0905 02450000
         LA    @06,VPRDS                                           0905 02451000
         ST    @06,@AL00001+4                                      0905 02452000
         LA    @01,@AL00001                                        0905 02453000
         BAL   @14,CONVBIN1                                        0905 02454000
*                       CALL CONVBIN1(PERMRTS,VPRTS);      /*@D3503SG*/ 02455000
         LA    @06,PERMRTS(,R7)                                    0906 02456000
         ST    @06,@AL00001                                        0906 02457000
         LA    @06,VPRTS                                           0906 02458000
         ST    @06,@AL00001+4                                      0906 02459000
         LA    @01,@AL00001                                        0906 02460000
         BAL   @14,CONVBIN1                                        0906 02461000
*                       CALL CONVBIN1(READTH,VTRDS);       /*@D3503SG*/ 02462000
         LA    @06,READTH(,R7)                                     0907 02463000
         ST    @06,@AL00001                                        0907 02464000
         LA    @06,VTRDS                                           0907 02465000
         ST    @06,@AL00001+4                                      0907 02466000
         LA    @01,@AL00001                                        0907 02467000
         BAL   @14,CONVBIN1                                        0907 02468000
*                       CALL CONVBIN1(RITETH,VTRTS);       /*@D3503SG*/ 02469000
         LA    @06,RITETH(,R7)                                     0908 02470000
         ST    @06,@AL00001                                        0908 02471000
         LA    @06,VTRTS                                           0908 02472000
         ST    @06,@AL00001+4                                      0908 02473000
         LA    @01,@AL00001                                        0908 02474000
         BAL   @14,CONVBIN1                                        0908 02475000
*                       CALL CONVBIN2(RECLEAN,VCLEAN);     /*@D3503SG*/ 02476000
         LA    @06,RECLEAN(,R7)                                    0909 02477000
         ST    @06,@AL00001                                        0909 02478000
         LA    @06,VCLEAN                                          0909 02479000
         ST    @06,@AL00001+4                                      0909 02480000
         LA    @01,@AL00001                                        0909 02481000
         BAL   @14,CONVBIN2                                        0909 02482000
*                       CALL CONVBIN2(RECERASE,VERASE);    /*@D3503SG*/ 02483000
         LA    @06,RECERASE(,R7)                                   0910 02484000
         ST    @06,@AL00001                                        0910 02485000
         LA    @06,VERASE                                          0910 02486000
         ST    @06,@AL00001+4                                      0910 02487000
         LA    @01,@AL00001                                        0910 02488000
         BAL   @14,CONVBIN2                                        0910 02489000
*                       CALL CONVBIN2(RECSIOS,VSIOS);      /*@D3503SG*/ 02490000
         LA    @06,RECSIOS(,R7)                                    0911 02491000
         ST    @06,@AL00001                                        0911 02492000
         LA    @06,VSIOS                                           0911 02493000
         ST    @06,@AL00001+4                                      0911 02494000
         LA    @01,@AL00001                                        0911 02495000
         BAL   @14,CONVBIN2                                        0911 02496000
*                       CALL CONVBIN2(BLKLENG,VBLOCK);     /*@D3503SG*/ 02497000
         LA    @06,BLKLENG(,R7)                                    0912 02498000
         ST    @06,@AL00001                                        0912 02499000
         LA    @06,VBLOCK                                          0912 02500000
         ST    @06,@AL00001+4                                      0912 02501000
         LA    @01,@AL00001                                        0912 02502000
         BAL   @14,CONVBIN2                                        0912 02503000
*                       VPGMID = JOBID;                    /*@D3503SG*/ 02504000
         MVC   VPGMID(8),JOBID(R7)                                 0913 02505000
*                       CALL CONVERT(CPUMOD,VCPUMOD,TWO);          0914 02506000
         MVC   @AL00001+4(8),@AL00914                              0914 02507000
         LA    @06,CPUMOD(,R7)                                     0914 02508000
         ST    @06,@AL00001                                        0914 02509000
         LA    @01,@AL00001                                        0914 02510000
         BAL   @14,CONVERT                                         0914 02511000
*                       CALL CONVERT(CPUSER,VCPUSER,THREE);        0915 02512000
         MVC   @AL00001+4(8),@AL00915                              0915 02513000
         LA    @06,CPUSER(,R7)                                     0915 02514000
         ST    @06,@AL00001                                        0915 02515000
         LA    @01,@AL00001                                        0915 02516000
         BAL   @14,CONVERT                                         0915 02517000
*                       CALL PRINTIT;                      /*@D3503SG*/ 02518000
         BAL   @14,PRINTIT                                         0916 02519000
*                       MYLINCT = MYLINCT - ONE;           /*@D3503SG*/ 02520000
         L     @06,MYLINCT                                         0917 02521000
         BCTR  @06,0                                               0917 02522000
         ST    @06,MYLINCT                                         0917 02523000
*                     END;             /*  3410 OBR          @D3503SG*/ 02524000
*                   ELSE               /*                    @D3503SG*/ 02525000
*                     DO;              /*  8809 OBR          @D3503SG*/ 02526000
         B     @RC00897                                            0919 02527000
@RF00897 DS    0H                                                  0920 02528000
*                       IF SOPRWB = OFF  THEN      /*        @D3503SG*/ 02529000
         TM    SOPRWB(R7),B'10000000'                              0920 02530000
         BNZ   @RF00920                                            0920 02531000
*                         VRDWRT = CHARR; /*R=PERM.READ      @D3503SG*/ 02532000
         MVI   VRDWRT,C'R'                                         0921 02533000
*                       ELSE             /*                  @D3503SG*/ 02534000
*                         VRDWRT = CHARW; /*W=PERM.WRITE     @D3503SG*/ 02535000
         B     @RC00920                                            0922 02536000
@RF00920 MVI   VRDWRT,C'W'                                         0922 02537000
*                       CALL CONVBIN2(BLKLENG,VBLOCK);     /*@D3503SG*/ 02538000
@RC00920 LA    @06,BLKLENG(,R7)                                    0923 02539000
         ST    @06,@AL00001                                        0923 02540000
         LA    @06,VBLOCK                                          0923 02541000
         ST    @06,@AL00001+4                                      0923 02542000
         LA    @01,@AL00001                                        0923 02543000
         BAL   @14,CONVBIN2                                        0923 02544000
*                       VPGMID = JOBID;                    /*@D3503SG*/ 02545000
         MVC   VPGMID(8),JOBID(R7)                                 0924 02546000
*                       CALL CONVERT(CPUMOD,VCPUMOD,TWO);          0925 02547000
         MVC   @AL00001+4(8),@AL00925                              0925 02548000
         LA    @06,CPUMOD(,R7)                                     0925 02549000
         ST    @06,@AL00001                                        0925 02550000
         LA    @01,@AL00001                                        0925 02551000
         BAL   @14,CONVERT                                         0925 02552000
*                       CALL CONVERT(CPUSER,VCPUSER,THREE);        0926 02553000
         MVC   @AL00001+4(8),@AL00926                              0926 02554000
         LA    @06,CPUSER(,R7)                                     0926 02555000
         ST    @06,@AL00001                                        0926 02556000
         LA    @01,@AL00001                                        0926 02557000
         BAL   @14,CONVERT                                         0926 02558000
*                       CALL PRINTIT;                      /*@D3503SG*/ 02559000
         BAL   @14,PRINTIT                                         0927 02560000
*                       MYLINCT = MYLINCT - ONE;           /*@D3503SG*/ 02561000
         L     @06,MYLINCT                                         0928 02562000
         BCTR  @06,0                                               0928 02563000
         ST    @06,MYLINCT                                         0928 02564000
*                     END;            /* 8809 OBR            @D3503SG*/ 02565000
*                 END;                /* OBR RECORD          @D3503SG*/ 02566000
*               ELSE                  /*                     @D3503SG*/ 02567000
*                   CALL SFVOLID;     /* MDR RECORD          @D3503SG*/ 02568000
         B     @RC00865                                            0931 02569000
@RF00865 BAL   @14,SFVOLID                                         0931 02570000
*             END;           /*RETCODE ¬= ZERO               @D3503SG*/ 02571000
@RC00865 DS    0H                                                  0933 02572000
*         END;           /*CURRPTR BY 12 WHILE NOT EOT       @D3503SG*/ 02573000
@RF00851 LA    @06,12                                              0933 02574000
         AL    @06,CURRPTR                                         0933 02575000
         ST    @06,CURRPTR                                         0933 02576000
@DE00845 L     @06,CURRPTR                                         0933 02577000
         CLC   EOTABLE(2,@06),@CB00261                             0933 02578000
         BNE   @DL00845                                            0933 02579000
*       END;         /*EXCTHRES(1/2) = ZERO                  @D3503SG*/ 02580000
*END OUTVOLID;                                             /*@D3503SG*/ 02581000
@EL00015 DS    0H                                                  0935 02582000
@EF00015 DS    0H                                                  0935 02583000
@ER00015 LM    @14,@12,@SA00015                                    0935 02584000
         BR    @14                                                 0935 02585000
*/********************************************************************/ 02586000
*/*                  8809DEV                                 @D3503SG*/ 02587000
*/* OUTPUT THE VOLUME SECTION OF THE REPORT.  PUT OUT ONE    @D3503SG*/ 02588000
*/* LINE FOR EACH VOLUME.                                    @D3503SG*/ 02589000
*/*                                                          @D3503SG*/ 02590000
*/********************************************************************/ 02591000
*SFVOLID:  PROC;                                           /*@D3503SG*/ 02592000
SFVOLID  STM   @14,@12,@SA00016                                    0936 02593000
*  VVOLUME= SMVOLID;                                       /*@D3503SG*/ 02594000
         MVC   VVOLUME(6),SMVOLID(R7)                              0937 02595000
*  CALL CONVERT(DATE(2:4),TEMPAREA,6);                     /*@D3503SG*/ 02596000
         MVC   @AL00001+4(8),@AL00938                              0938 02597000
         LA    @06,DATE+1(,R7)                                     0938 02598000
         ST    @06,@AL00001                                        0938 02599000
         LA    @01,@AL00001                                        0938 02600000
         BAL   @14,CONVERT                                         0938 02601000
*  VDAY = TEMPAREA(3:5);                                   /*@D3503SG*/ 02602000
         MVC   VDAY(3),TEMPAREA+2                                  0939 02603000
*  VYEAR = TEMPAREA(1:2);                                  /*@D3503SG*/ 02604000
         MVC   VYEAR(2),TEMPAREA                                   0940 02605000
*  CALL CONVERT(TIME,TEMPAREA,8);                          /*@D3503SG*/ 02606000
         MVC   @AL00001+4(8),@AL00941                              0941 02607000
         LA    @06,TIME(,R7)                                       0941 02608000
         ST    @06,@AL00001                                        0941 02609000
         LA    @01,@AL00001                                        0941 02610000
         BAL   @14,CONVERT                                         0941 02611000
*  VHH = TEMPAREA(1:2);                                    /*@D3503SG*/ 02612000
         MVC   VHH(2),TEMPAREA                                     0942 02613000
*  VMM = TEMPAREA(3:4);                                    /*@D3503SG*/ 02614000
         MVC   VMM(2),TEMPAREA+2                                   0943 02615000
*  VSS = TEMPAREA(5:6);                                    /*@D3503SG*/ 02616000
         MVC   VSS(2),TEMPAREA+4                                   0944 02617000
*  VPOINT = PERIOD;                                        /*@D3503SG*/ 02618000
         MVI   VPOINT,C'.'                                         0945 02619000
*  VTH = TEMPAREA(7:8);                                    /*@D3503SG*/ 02620000
         MVC   VTH(2),TEMPAREA+6                                   0946 02621000
*  CALL CONVERT(SMCUA,TEMPAREA,2);                         /*@D3503SG*/ 02622000
         MVC   @AL00001+4(8),@AL00947                              0947 02623000
         LA    @06,SMCUA(,R7)                                      0947 02624000
         ST    @06,@AL00001                                        0947 02625000
         LA    @01,@AL00001                                        0947 02626000
         BAL   @14,CONVERT                                         0947 02627000
*  VCUA = TEMPAREA(2:4);                /*4 CONTROL UNIT AD. @D3503SG*/ 02628000
         MVC   VCUA(3),TEMPAREA+1                                  0948 02629000
*  CALL CONVBIN1(SMTRD,VTRDS);          /*7 TEMPORARY READ   @D3503SG*/ 02630000
         LA    @06,SMTRD(,R7)                                      0949 02631000
         ST    @06,@AL00001                                        0949 02632000
         LA    @06,VTRDS                                           0949 02633000
         ST    @06,@AL00001+4                                      0949 02634000
         LA    @01,@AL00001                                        0949 02635000
         BAL   @14,CONVBIN1                                        0949 02636000
*  CALL CONVBIN1(SMTWRT,VTRTS);         /*8 TEMPORARY WRITE  @D3503SG*/ 02637000
         LA    @06,SMTWRT(,R7)                                     0950 02638000
         ST    @06,@AL00001                                        0950 02639000
         LA    @06,VTRTS                                           0950 02640000
         ST    @06,@AL00001+4                                      0950 02641000
         LA    @01,@AL00001                                        0950 02642000
         BAL   @14,CONVBIN1                                        0950 02643000
*  CALL CONVBIN2(SMRDTRY,VRETRY);       /*9 READ RETRY       @D3503SG*/ 02644000
         LA    @06,SMRDTRY(,R7)                                    0951 02645000
         ST    @06,@AL00001                                        0951 02646000
         LA    @06,VRETRY                                          0951 02647000
         ST    @06,@AL00001+4                                      0951 02648000
         LA    @01,@AL00001                                        0951 02649000
         BAL   @14,CONVBIN2                                        0951 02650000
*  CALL CONVBIN2(SMERGAP,VERASE);       /*10 ERASE GAPS      @D3503SG*/ 02651000
         LA    @06,SMERGAP(,R7)                                    0952 02652000
         ST    @06,@AL00001                                        0952 02653000
         LA    @06,VERASE                                          0952 02654000
         ST    @06,@AL00001+4                                      0952 02655000
         LA    @01,@AL00001                                        0952 02656000
         BAL   @14,CONVBIN2                                        0952 02657000
*  CALL CONVBIN2(SMRDSIO,VSIOS);        /*11 READ SIOS       @D3503SG*/ 02658000
         LA    @06,SMRDSIO(,R7)                                    0953 02659000
         ST    @06,@AL00001                                        0953 02660000
         LA    @06,VSIOS                                           0953 02661000
         ST    @06,@AL00001+4                                      0953 02662000
         LA    @01,@AL00001                                        0953 02663000
         BAL   @14,CONVBIN2                                        0953 02664000
*  CALL CONVBIN2(SMWTSIO,VCWRTS);       /*12 WRITE SIOS      @D3503SG*/ 02665000
         LA    @06,SMWTSIO(,R7)                                    0954 02666000
         ST    @06,@AL00001                                        0954 02667000
         LA    @06,VCWRTS                                          0954 02668000
         ST    @06,@AL00001+4                                      0954 02669000
         LA    @01,@AL00001                                        0954 02670000
         BAL   @14,CONVBIN2                                        0954 02671000
*  CALL CONVBIN2(SMBLTH,VBLOCK);        /*13 BLK LENGTH      @D3503SG*/ 02672000
         LA    @06,SMBLTH(,R7)                                     0955 02673000
         ST    @06,@AL00001                                        0955 02674000
         LA    @06,VBLOCK                                          0955 02675000
         ST    @06,@AL00001+4                                      0955 02676000
         LA    @01,@AL00001                                        0955 02677000
         BAL   @14,CONVBIN2                                        0955 02678000
*  CALL CONVERT(SMCPMDL,VCPUMOD,TWO);   /*15A MODEL#.        @D3503SG*/ 02679000
         MVC   @AL00001+4(8),@AL00956                              0956 02680000
         LA    @06,SMCPMDL(,R7)                                    0956 02681000
         ST    @06,@AL00001                                        0956 02682000
         LA    @01,@AL00001                                        0956 02683000
         BAL   @14,CONVERT                                         0956 02684000
*  CALL CONVERT(SMCPSER,VCPUSER,THREE); /*15B SERIAL#        @D3503SG*/ 02685000
         MVC   @AL00001+4(8),@AL00957                              0957 02686000
         LA    @06,SMCPSER(,R7)                                    0957 02687000
         ST    @06,@AL00001                                        0957 02688000
         LA    @01,@AL00001                                        0957 02689000
         BAL   @14,CONVERT                                         0957 02690000
*  CALL PRINTIT;                         /*                  @D3503SG*/ 02691000
         BAL   @14,PRINTIT                                         0958 02692000
*  MYLINCT = MYLINCT - ONE;              /*                  @D3503SG*/ 02693000
         L     @06,MYLINCT                                         0959 02694000
         BCTR  @06,0                                               0959 02695000
         ST    @06,MYLINCT                                         0959 02696000
* END SFVOLID;   /*END PROCEEDURE                            @D3503SG*/ 02697000
@EL00016 DS    0H                                                  0960 02698000
@EF00016 DS    0H                                                  0960 02699000
@ER00016 LM    @14,@12,@SA00016                                    0960 02700000
         BR    @14                                                 0960 02701000
*/********************************************************************/ 02702000
*/* THIS PROCEDURE WILL MAKE ENTRIES INTO THE SORT TABLE.  FOR EACH  */ 02703000
*/* PERM ERROR OR EACH DISMOUNT RECORD WHICH EXCEEDS THRESHOLD, AN   */ 02704000
*/* ENTRY IS MADE.  ALL DISMOUNT RECORDS ARE SUMMED INTO THE @0001VLS*/ 02705000
*/* APPROPRIATE CPU/CONTROL UNIT COUNTERS FOR THE TEMPORARY SUMMARY. */ 02706000
*/********************************************************************/ 02707000
*TABENT: PROC;                                             /*@0001VLS*/ 02708000
TABENT   STM   @14,@12,@SA00017                                    0961 02709000
*  RECCOUNT = RECCOUNT + ONE;                              /*@0001VLS*/ 02710000
         LH    @06,RECCOUNT                                        0962 02711000
         LA    @06,1(,@06)                                         0962 02712000
         STH   @06,RECCOUNT                                        0962 02713000
*  RECCUA = OCUA2;                   /* RECORD CUA FOR SHARE CONVERT */ 02714000
         MVC   RECCUA(2),OCUA2(R7)                                 0963 02715000
*  RECCPU = CPUSER;                  /* RECORD CPU FOR SHARE CONVERT */ 02716000
         MVC   RECCPU(3),CPUSER(R7)                                0964 02717000
*  RECDEV = NONSF;                   /* RECORD RECORD TYPE   @D3503SG*/ 02718000
         MVI   RECDEV,X'00'                                        0965 02719000
*  IF SHAREPTR ¬= ZERO THEN                                        0966 02720000
         L     @06,SHAREPTR(,R2)                                   0966 02721000
         LTR   @06,@06                                             0966 02722000
         BZ    @RF00966                                            0966 02723000
*    CALL CUASHARE;                   /* PERFORM ANY SHARE CONVERSION*/ 02724000
         BAL   @14,CUASHARE                                        0967 02725000
*  CALL FINDDATE;                     /* SET UP DATE RANGES  @0001VLS*/ 02726000
@RF00966 BAL   @14,FINDDATE                                        0968 02727000
*  IF LOWDATE > DATE(2:4) THEN                                     0969 02728000
         L     @06,DATEPTR                                         0969 02729000
         CLC   LOWDATE(3,@06),DATE+1(R7)                           0969 02730000
         BNH   @RF00969                                            0969 02731000
*    LOWDATE = DATE(2:4);             /* NEW LOW DATE        @0001VLS*/ 02732000
         MVC   LOWDATE(3,@06),DATE+1(R7)                           0970 02733000
*  IF HIDATE < DATE(2:4) THEN                                      0971 02734000
@RF00969 L     @06,DATEPTR                                         0971 02735000
         CLC   HIDATE(3,@06),DATE+1(R7)                            0971 02736000
         BNL   @RF00971                                            0971 02737000
*    HIDATE = DATE(2:4);              /* NEW HIGH DATE       @0001VLS*/ 02738000
         MVC   HIDATE(3,@06),DATE+1(R7)                            0972 02739000
*  IF DISMNT = ON THEN                /* DISMOUNT RECORD     @0001VLS*/ 02740000
@RF00971 TM    DISMNT(R7),B'00000100'                              0973 02741000
         BNO   @RF00973                                            0973 02742000
*    DO;                                                   /*@0001VLS*/ 02743000
*      CALL TEMPTOT;                  /* TOTAL FOR TEMP SUMMARY      */ 02744000
         BAL   @14,TEMPTOT                                         0975 02745000
*      IF RETCODE = ZERO & (READTH >= READS | RITETH >= WRITES) THEN    02746000
         L     @06,RETCODE                                         0976 02747000
         LTR   @06,@06                                             0976 02748000
         BNZ   @RF00976                                            0976 02749000
         CLC   READTH(1,R7),READS                                  0976 02750000
         BNL   @RT00976                                            0976 02751000
         CLC   RITETH(1,R7),WRITES                                 0976 02752000
         BL    @RF00976                                            0976 02753000
@RT00976 DS    0H                                                  0977 02754000
*        DO EXCTHRES(1) = EXCTHRES(1) + ONE;               /*@0001VLS*/ 02755000
         LA    @06,1                                               0977 02756000
         AL    @06,EXCTHRES                                        0977 02757000
         ST    @06,EXCTHRES                                        0977 02758000
*          CALL SAVEREC(ONE);         /* ENTER INTO TABLE AS TYPE 1  */ 02759000
         LA    @01,@AL00978                                        0978 02760000
         BAL   @14,SAVEREC                                         0978 02761000
*        END;                                              /*@0001VLS*/ 02762000
*    END;                                                  /*@0001VLS*/ 02763000
*  ELSE                                                            0981 02764000
*    IF (CSW34XX & UNITCK) = UNITCK THEN                           0981 02765000
         B     @RC00973                                            0981 02766000
@RF00973 MVC   @TS00001(1),CSW34XX(R7)                             0981 02767000
         NI    @TS00001,X'02'                                      0981 02768000
         CLI   @TS00001,X'02'                                      0981 02769000
         BNE   @RF00981                                            0981 02770000
*      DO EXCTHRES(2) = EXCTHRES(2) + ONE;                 /*@0001VLS*/ 02771000
         LA    @06,1                                               0982 02772000
         AL    @06,EXCTHRES+4                                      0982 02773000
         ST    @06,EXCTHRES+4                                      0982 02774000
*        CALL SAVEREC(TWO);           /* ENTER INTO TABLE AS TYPE 2  */ 02775000
         LA    @01,@AL00983                                        0983 02776000
         BAL   @14,SAVEREC                                         0983 02777000
*      END;                                                /*@0001VLS*/ 02778000
*END;                                                      /*@0001VLS*/ 02779000
@EL00017 DS    0H                                                  0985 02780000
@EF00017 DS    0H                                                  0985 02781000
@ER00017 LM    @14,@12,@SA00017                                    0985 02782000
         BR    @14                                                 0985 02783000
*/********************************************************************/ 02784000
*/*        8809DEV TABLE ENTRY PROCESSING                    @D3503SG*/ 02785000
*/********************************************************************/ 02786000
*SFBENT: PROC;                                             /*@D3503SG*/ 02787000
SFBENT   STM   @14,@12,@SA00018                                    0986 02788000
*  RECCOUNT = RECCOUNT + ONE;                              /*@D3503SG*/ 02789000
         LH    @06,RECCOUNT                                        0987 02790000
         LA    @06,1(,@06)                                         0987 02791000
         STH   @06,RECCOUNT                                        0987 02792000
*  RECCPU = CPUSER;                   /*RECORD CPU FOR SHARE CONVERT */ 02793000
         MVC   RECCPU(3),CPUSER(R7)                                0988 02794000
*  IF (RECTYP & FOXZERO) = MDRREC  THEN  /*                  @D3503SG*/ 02795000
         MVC   @TS00001(1),RECTYP(R7)                              0989 02796000
         NI    @TS00001,X'F0'                                      0989 02797000
         CLI   @TS00001,X'90'                                      0989 02798000
         BNE   @RF00989                                            0989 02799000
*    RECCUA = SMCUA;                     /*                  @D3503SG*/ 02800000
         MVC   RECCUA(2),SMCUA(R7)                                 0990 02801000
*  ELSE                                  /*OBR RECORD        @D3503SG*/ 02802000
*    RECCUA = OCUA2;                     /*                  @D3503SG*/ 02803000
         B     @RC00989                                            0991 02804000
@RF00989 MVC   RECCUA(2),OCUA2(R7)                                 0991 02805000
*  RECDEV = SFOBR;                    /*INDICATE 8809DEV     @D3503SG*/ 02806000
@RC00989 MVI   RECDEV,X'01'                                        0992 02807000
*  IF SHAREPTR ¬= ZERO THEN                                        0993 02808000
         L     @06,SHAREPTR(,R2)                                   0993 02809000
         LTR   @06,@06                                             0993 02810000
         BZ    @RF00993                                            0993 02811000
*    CALL CUASHARE;                   /* PERFORM ANY SHARE CONVERSION*/ 02812000
         BAL   @14,CUASHARE                                        0994 02813000
*  CALL FINDDATE;                     /* SET UP DATE RANGES  @D3503SG*/ 02814000
@RF00993 BAL   @14,FINDDATE                                        0995 02815000
*  IF LOWDATE > DATE(2:4) THEN                                     0996 02816000
         L     @06,DATEPTR                                         0996 02817000
         CLC   LOWDATE(3,@06),DATE+1(R7)                           0996 02818000
         BNH   @RF00996                                            0996 02819000
*    LOWDATE = DATE(2:4);             /* NEW LOW DATE        @D3503SG*/ 02820000
         MVC   LOWDATE(3,@06),DATE+1(R7)                           0997 02821000
*  IF HIDATE < DATE(2:4) THEN                                      0998 02822000
@RF00996 L     @06,DATEPTR                                         0998 02823000
         CLC   HIDATE(3,@06),DATE+1(R7)                            0998 02824000
         BNL   @RF00998                                            0998 02825000
*    HIDATE = DATE(2:4);                 /* NEW HIGH DATE    @D3503SG*/ 02826000
         MVC   HIDATE(3,@06),DATE+1(R7)                            0999 02827000
*  IF (RECTYP & FOXZERO) = MDRREC THEN   /* MDR RECORD       @D3503SG*/ 02828000
@RF00998 MVC   @TS00001(1),RECTYP(R7)                              1000 02829000
         NI    @TS00001,X'F0'                                      1000 02830000
         CLI   @TS00001,X'90'                                      1000 02831000
         BNE   @RF01000                                            1000 02832000
*    DO;                                                   /*@D3503SG*/ 02833000
*      CALL SFTOT;      /*TOTAL FOR TEMPORARY SUMMARY  2     @D3503SG*/ 02834000
         BAL   @14,SFTOT                                           1002 02835000
*      IF RETCODE = ZERO   &                               /*@D3503SG*/ 02836000
*         (SMTRD >= READS | SMTWRT >= WRITES)  THEN        /*@D3503SG*/ 02837000
         L     @06,RETCODE                                         1003 02838000
         LTR   @06,@06                                             1003 02839000
         BNZ   @RF01003                                            1003 02840000
         CLC   SMTRD(1,R7),READS                                   1003 02841000
         BNL   @RT01003                                            1003 02842000
         CLC   SMTWRT(1,R7),WRITES                                 1003 02843000
         BL    @RF01003                                            1003 02844000
@RT01003 DS    0H                                                  1004 02845000
*        DO EXCTHRES(1) = EXCTHRES(1) + ONE;               /*@D3503SG*/ 02846000
         LA    @06,1                                               1004 02847000
         AL    @06,EXCTHRES                                        1004 02848000
         ST    @06,EXCTHRES                                        1004 02849000
*          CALL SAVEREC(ONE);   /*ENTER INTO TABLE AS TYPE 1 @D3503SG*/ 02850000
         LA    @01,@AL01005                                        1005 02851000
         BAL   @14,SAVEREC                                         1005 02852000
*        END;                                              /*@D3503SG*/ 02853000
*    END;                                                  /*@D3503SG*/ 02854000
*  ELSE                                                            1008 02855000
*    DO;                                                   /*@D3503SG*/ 02856000
         B     @RC01000                                            1008 02857000
@RF01000 DS    0H                                                  1009 02858000
*      EXCTHRES(2) = EXCTHRES(2) + ONE;                    /*@D3503SG*/ 02859000
         LA    @06,1                                               1009 02860000
         AL    @06,EXCTHRES+4                                      1009 02861000
         ST    @06,EXCTHRES+4                                      1009 02862000
*      CALL SAVEREC(TWO);       /*ENTER INTO TABLE AS TYPE 2 @D3503SG*/ 02863000
         LA    @01,@AL01010                                        1010 02864000
         BAL   @14,SAVEREC                                         1010 02865000
*    END;                                /*                  @D3503SG*/ 02866000
*END;                                    /*                  @D3503SG*/ 02867000
@EL00018 DS    0H                                                  1012 02868000
@EF00018 DS    0H                                                  1012 02869000
@ER00018 LM    @14,@12,@SA00018                                    1012 02870000
         BR    @14                                                 1012 02871000
*/********************************************************************/ 02872000
*/* A RECORD IS SAVED IN THE SORT TABLE.  IF THE RECORD WAS INPUT    */ 02873000
*/* FROM HISTORY TAPE, THEN IT IS SAVED ON DIRECTWK.  THE TYPE IS    */ 02874000
*/* ENTERED FROM THE PARAMETER PASSED.                       @0001VLS*/ 02875000
*/*      TYPE 1 = DISMOUNT RECORD                            @0001VLS*/ 02876000
*/*      TYPE 2 = PERM ERROR                                 @0001VLS*/ 02877000
*/*      TYPE 3 = POINTER TO TEMP SUMMARY TABLE              @0001VLS*/ 02878000
*/********************************************************************/ 02879000
*SAVEREC: PROC(TYPEENT);                                   /*@0001VLS*/ 02880000
SAVEREC  STM   @14,@12,@SA00019                                    1013 02881000
         MVC   @PC00019(4),0(@01)                                  1013 02882000
*   DCL TYPEENT FIXED(31);                                 /*@0001VLS*/ 02883000
*   IF PHIST = ON THEN                 /* HISTORY INPUT      @0001VLS*/ 02884000
         TM    PHIST(R2),B'00100000'                               1015 02885000
         BNO   @RF01015                                            1015 02886000
*     DO;                                                  /*@0001VLS*/ 02887000
*       RESPECIFY (R15) RESTRICTED;                        /*@0001VLS*/ 02888000
*       CALL IOHND(RITESCRT);                              /*@0001VLS*/ 02889000
         L     @15,ADIOHND(,R2)                                    1018 02890000
         LA    @01,@AL01018                                        1018 02891000
         BALR  @14,@15                                             1018 02892000
*       RETCODE = R15;                                     /*@0001VLS*/ 02893000
         ST    R15,RETCODE                                         1019 02894000
*       RESPECIFY (R15) UNRESTRICTED;                      /*@0001VLS*/ 02895000
*     END;                                                 /*@0001VLS*/ 02896000
*   IF RETCODE = ZERO THEN                                         1022 02897000
@RF01015 L     @06,RETCODE                                         1022 02898000
         LTR   @06,@06                                             1022 02899000
         BNZ   @RF01022                                            1022 02900000
*     DO;                                                  /*@0001VLS*/ 02901000
*       CONTRCUA = RECCUA;             /* STORE CUA          @0001VLS*/ 02902000
         L     @06,CURRPTR                                         1024 02903000
         MVC   CONTRCUA(2,@06),RECCUA                              1024 02904000
*       CALL CONVCNTR;                 /*CONVERT CUA TO CONTROL LEVEL * 02905000
         BAL   @14,CONVCNTR                                        1025 02906000
*       CONTRCUA=LOWCUA;               /*SAVE CONVERTED VALUE         * 02907000
         L     @06,CURRPTR                                         1026 02908000
         MVC   CONTRCUA(2,@06),LOWCUA                              1026 02909000
*       CPU = RECCPU;                  /* STORE CPU          @0001VLS*/ 02910000
         MVC   CPU(3,@06),RECCPU                                   1027 02911000
*       TABCCHHR = RECCCHHR;           /* AUX STORAGE ADDRESS        */ 02912000
         MVC   TABCCHHR(5,@06),RECCCHHR(R2)                        1028 02913000
*       TYPE = TYPEENT;                /* TYPE OF ENTRY      @0001VLS*/ 02914000
         L     @15,@PC00019                                        1029 02915000
         L     @15,TYPEENT(,@15)                                   1029 02916000
         STC   @15,TYPE(,@06)                                      1029 02917000
*       DEVTYPE = RECDEV;              /* SF OR NON-SF RECRD.@D3503SG*/ 02918000
         MVC   DEVTYPE(1,@06),RECDEV                               1030 02919000
*       NUMENT = NUMENT + ONE;                             /*@0001VLS*/ 02920000
         LA    @15,1                                               1031 02921000
         AL    @15,NUMENT                                          1031 02922000
         ST    @15,NUMENT                                          1031 02923000
*       CURRPTR = CURRPTR - TWELVE;    /* POINT TO NEXT ENTRY        */ 02924000
         SL    @06,@CF00033                                        1032 02925000
         ST    @06,CURRPTR                                         1032 02926000
*     END;                                                 /*@0001VLS*/ 02927000
* END;                                                     /*@0001VLS*/ 02928000
@EL00019 DS    0H                                                  1034 02929000
@EF00019 DS    0H                                                  1034 02930000
@ER00019 LM    @14,@12,@SA00019                                    1034 02931000
         BR    @14                                                 1034 02932000
*/********************************************************************/ 02933000
*/* TOTAL THE DISMOUNT DATA INTO THE APPROPRIATE CPU/CONTROL UNIT    */ 02934000
*/* COUNTERS.  IF NONE EXIST, A NEW SET IS CREATED, AN ENTRY MADE IN */ 02935000
*/* THE SORT TABLE, AND THE ADDRESS OF THE COUNTERS STORED THERE.    */ 02936000
*/********************************************************************/ 02937000
*TEMPTOT: PROC;                                            /*@0001VLS*/ 02938000
TEMPTOT  STM   @14,@12,@SA00020                                    1035 02939000
*CUAINDEX = RECCUA & ZZZF;             /* UNITS ADDRESS      @0001VLS*/ 02940000
         LA    @06,15                                              1036 02941000
         SLR   @15,@15                                             1036 02942000
         ICM   @15,3,RECCUA                                        1036 02943000
         NR    @06,@15                                             1036 02944000
         ST    @06,CUAINDEX                                        1036 02945000
*CUAINDEX = CUAINDEX + ONE;                                /*@0001VLS*/ 02946000
         AL    @06,@CF00057                                        1037 02947000
         ST    @06,CUAINDEX                                        1037 02948000
*CALL FINDTOTS;                           /* FIND COUNTER AREA       */ 02949000
         BAL   @14,FINDTOTS                                        1038 02950000
*IF RETCODE = ZERO THEN                                            1039 02951000
         L     @06,RETCODE                                         1039 02952000
         LTR   @06,@06                                             1039 02953000
         BNZ   @RF01039                                            1039 02954000
*  DO;                                                     /*@0001VLS*/ 02955000
*    IF DATE(2:4) > TDATE(CUAINDEX) THEN                           1041 02956000
         L     @06,SUMPTR                                          1041 02957000
         L     @15,CUAINDEX                                        1041 02958000
         MH    @15,@CH00727                                        1041 02959000
         ST    @15,@TF00001                                        1041 02960000
         ALR   @15,@06                                             1041 02961000
         BCTR  @15,0                                               1041 02962000
         CLC   DATE+1(3,R7),TDATE-55(@15)                          1041 02963000
         BNH   @RF01041                                            1041 02964000
*      TDATE(CUAINDEX) = DATE(2:4);       /* HIGHER TO DATE  @0001VLS*/ 02965000
         AL    @06,@TF00001                                        1042 02966000
         BCTR  @06,0                                               1042 02967000
         MVC   TDATE-55(3,@06),DATE+1(R7)                          1042 02968000
*    IF DATE(2:4) < FDATE(CUAINDEX) THEN                           1043 02969000
@RF01041 L     @06,SUMPTR                                          1043 02970000
         L     @15,CUAINDEX                                        1043 02971000
         MH    @15,@CH00727                                        1043 02972000
         ST    @15,@TF00001                                        1043 02973000
         ALR   @15,@06                                             1043 02974000
         AL    @15,@CF01757                                        1043 02975000
         CLC   DATE+1(3,R7),FDATE-52(@15)                          1043 02976000
         BNL   @RF01043                                            1043 02977000
*      FDATE(CUAINDEX) = DATE(2:4);       /* LOWER FROM DATE @0001VLS*/ 02978000
         AL    @06,@TF00001                                        1044 02979000
         AL    @06,@CF01757                                        1044 02980000
         MVC   FDATE-52(3,@06),DATE+1(R7)                          1044 02981000
*    READER(CUAINDEX) = READER(CUAINDEX) + READTH;  /* # TEMP READS  */ 02982000
@RF01043 L     @06,SUMPTR                                          1045 02983000
         L     @15,CUAINDEX                                        1045 02984000
         MH    @15,@CH00727                                        1045 02985000
         SLR   @14,@14                                             1045 02986000
         IC    @14,READTH(,R7)                                     1045 02987000
         LA    @01,0(@15,@06)                                      1045 02988000
         AL    @01,@CF01755                                        1045 02989000
         AL    @14,READER-12(,@01)                                 1045 02990000
         LA    @01,0(@15,@06)                                      1045 02991000
         AL    @01,@CF01755                                        1045 02992000
         ST    @14,READER-12(,@01)                                 1045 02993000
*    WRITER(CUAINDEX) = WRITER(CUAINDEX) + RITETH;  /* # TEMP WRITES */ 02994000
         SLR   @14,@14                                             1046 02995000
         IC    @14,RITETH(,R7)                                     1046 02996000
         LA    @01,0(@15,@06)                                      1046 02997000
         AL    @01,@CF01756                                        1046 02998000
         AL    @14,WRITER-20(,@01)                                 1046 02999000
         LA    @01,0(@15,@06)                                      1046 03000000
         AL    @01,@CF01756                                        1046 03001000
         ST    @14,WRITER-20(,@01)                                 1046 03002000
*    SIOS(CUAINDEX) = SIOS(CUAINDEX) + RECSIOS;     /* # SIOS        */ 03003000
         SLR   @14,@14                                             1047 03004000
         ICM   @14,3,RECSIOS(R7)                                   1047 03005000
         LA    @01,0(@15,@06)                                      1047 03006000
         AL    @01,@CF01754                                        1047 03007000
         AL    @14,SIOS-8(,@01)                                    1047 03008000
         LA    @01,0(@15,@06)                                      1047 03009000
         AL    @01,@CF01754                                        1047 03010000
         ST    @14,SIOS-8(,@01)                                    1047 03011000
*    CLEANER(CUAINDEX) = CLEANER(CUAINDEX) + RECLEAN; /* # CLEANER   */ 03012000
         SLR   @14,@14                                             1048 03013000
         ICM   @14,3,RECLEAN(R7)                                   1048 03014000
         LA    @01,0(@15,@06)                                      1048 03015000
         AL    @01,@CF01759                                        1048 03016000
         AL    @14,CLEANER-16(,@01)                                1048 03017000
         LA    @01,0(@15,@06)                                      1048 03018000
         AL    @01,@CF01759                                        1048 03019000
         ST    @14,CLEANER-16(,@01)                                1048 03020000
*    ERASE(CUAINDEX) = ERASE(CUAINDEX) + RECERASE;  /* # ERASE GAPS  */ 03021000
         SLR   @14,@14                                             1049 03022000
         ICM   @14,3,RECERASE(R7)                                  1049 03023000
         LA    @01,0(@15,@06)                                      1049 03024000
         AL    @01,@CF01760                                        1049 03025000
         AL    @14,ERASE-24(,@01)                                  1049 03026000
         LA    @01,0(@15,@06)                                      1049 03027000
         AL    @01,@CF01760                                        1049 03028000
         ST    @14,ERASE-24(,@01)                                  1049 03029000
*    IF DISMNT = ON & EOD = OFF THEN                               1050 03030000
         TM    DISMNT(R7),B'00000100'                              1050 03031000
         BNO   @RF01050                                            1050 03032000
         TM    EOD(R7),B'10000000'                                 1050 03033000
         BNZ   @RF01050                                            1050 03034000
*      MOUNTS(CUAINDEX) = MOUNTS(CUAINDEX) + ONE;   /* ADD 1 TO MOUNT*/ 03035000
         LA    @14,1                                               1051 03036000
         LA    @01,0(@15,@06)                                      1051 03037000
         AL    @01,@CF01758                                        1051 03038000
         AL    @14,MOUNTS-28(,@01)                                 1051 03039000
         AL    @06,@CF01758                                        1051 03040000
         ST    @14,MOUNTS-28(@15,@06)                              1051 03041000
*    VRC(CUAINDEX) = VRC(CUAINDEX) + RECVRC;               /*@0001VLS*/ 03042000
@RF01050 L     @06,SUMPTR                                          1052 03043000
         L     @15,CUAINDEX                                        1052 03044000
         MH    @15,@CH00727                                        1052 03045000
         SLR   @14,@14                                             1052 03046000
         IC    @14,RECVRC(,R7)                                     1052 03047000
         LA    @01,0(@15,@06)                                      1052 03048000
         AL    @01,@CF01761                                        1052 03049000
         AH    @14,VRC-40(,@01)                                    1052 03050000
         LA    @01,0(@15,@06)                                      1052 03051000
         AL    @01,@CF01761                                        1052 03052000
         STH   @14,VRC-40(,@01)                                    1052 03053000
*    I = RECSTRD & ZEROFOX;                                /*@0001VLS*/ 03054000
         LA    @14,15                                              1053 03055000
         SLR   @09,@09                                             1053 03056000
         IC    @09,RECSTRD(,R7)                                    1053 03057000
         NR    @09,@14                                             1053 03058000
         STH   @09,I                                               1053 03059000
*    STRDCHK(CUAINDEX) = STRDCHK(CUAINDEX) + I;            /*@0001VLS*/ 03060000
         LA    @08,0(@15,@06)                                      1054 03061000
         AL    @08,@CF01762                                        1054 03062000
         AH    @09,STRDCHK-42(,@08)                                1054 03063000
         LA    @08,0(@15,@06)                                      1054 03064000
         AL    @08,@CF01762                                        1054 03065000
         STH   @09,STRDCHK-42(,@08)                                1054 03066000
*    I = RECPART;                                          /*@0001VLS*/ 03067000
         SLR   @09,@09                                             1055 03068000
         IC    @09,RECPART(,R7)                                    1055 03069000
         STH   @09,I                                               1055 03070000
*    SRL(I,FOUR);                                          /*@0001VLS*/ 03071000
         SRL   @09,4                                               1056 03072000
         STH   @09,I                                               1056 03073000
*    PARTRECK(CUAINDEX) = PARTRECK(CUAINDEX) + I;          /*@0001VLS*/ 03074000
         LA    @01,0(@15,@06)                                      1057 03075000
         AL    @01,@CF01763                                        1057 03076000
         LH    @09,PARTRECK-44(,@01)                               1057 03077000
         AH    @09,I                                               1057 03078000
         LA    @08,0(@15,@06)                                      1057 03079000
         AL    @08,@CF01763                                        1057 03080000
         STH   @09,PARTRECK-44(,@08)                               1057 03081000
*    I = RECOVER;                                          /*@0001VLS*/ 03082000
         SLR   @09,@09                                             1058 03083000
         IC    @09,RECOVER(,R7)                                    1058 03084000
         STH   @09,I                                               1058 03085000
*    SRL(I,FOUR);                                          /*@0001VLS*/ 03086000
         SRL   @09,4                                               1059 03087000
         STH   @09,I                                               1059 03088000
*    OVERRUNS(CUAINDEX) = OVERRUNS(CUAINDEX) + I;          /*@0001VLS*/ 03089000
         LA    @01,0(@15,@06)                                      1060 03090000
         AL    @01,@CF01764                                        1060 03091000
         LH    @09,OVERRUNS-46(,@01)                               1060 03092000
         AH    @09,I                                               1060 03093000
         LA    @08,0(@15,@06)                                      1060 03094000
         AL    @08,@CF01764                                        1060 03095000
         STH   @09,OVERRUNS-46(,@08)                               1060 03096000
*    I = RECVEL & ZEROFOX;                                 /*@0001VLS*/ 03097000
         SLR   @09,@09                                             1061 03098000
         IC    @09,RECVEL(,R7)                                     1061 03099000
         NR    @14,@09                                             1061 03100000
         STH   @14,I                                               1061 03101000
*    VELCHGS(CUAINDEX) = VELCHGS(CUAINDEX) + I;            /*@0001VLS*/ 03102000
         LA    @01,0(@15,@06)                                      1062 03103000
         AL    @01,@CF01765                                        1062 03104000
         AH    @14,VELCHGS-48(,@01)                                1062 03105000
         LA    @01,0(@15,@06)                                      1062 03106000
         AL    @01,@CF01765                                        1062 03107000
         STH   @14,VELCHGS-48(,@01)                                1062 03108000
*    I = RECIBG;                                           /*@0001VLS*/ 03109000
         SLR   @14,@14                                             1063 03110000
         IC    @14,RECIBG(,R7)                                     1063 03111000
         STH   @14,I                                               1063 03112000
*    SRL(I,FOUR);                                          /*@0001VLS*/ 03113000
         SRL   @14,4                                               1064 03114000
         STH   @14,I                                               1064 03115000
*    IBG(CUAINDEX) = IBG(CUAINDEX) + I;                    /*@0001VLS*/ 03116000
         LA    @01,0(@15,@06)                                      1065 03117000
         AL    @01,@CF01766                                        1065 03118000
         LH    @14,IBG-50(,@01)                                    1065 03119000
         AH    @14,I                                               1065 03120000
         AL    @06,@CF01766                                        1065 03121000
         STH   @14,IBG-50(@15,@06)                                 1065 03122000
*  END;                                                    /*@0001VLS*/ 03123000
*END;                                                      /*@0001VLS*/ 03124000
@EL00020 DS    0H                                                  1067 03125000
@EF00020 DS    0H                                                  1067 03126000
@ER00020 LM    @14,@12,@SA00020                                    1067 03127000
         BR    @14                                                 1067 03128000
*/********************************************************************/ 03129000
*/*                        8809DEV                           @D3503SG*/ 03130000
*/* TOTAL THE DISMOUNT DATA INTO THE APPROPRIATE CPU/CONTROL UNIT    */ 03131000
*/* COUNTERS.  IF NONE EXIST, A NEW SET IS CREATED, AN ENTRY MADE IN */ 03132000
*/* THE SORT TABLE, AND THE ADDRESS OF THE COUNTERS STORED THERE.    */ 03133000
*/********************************************************************/ 03134000
*SFTOT:   PROC;                                            /*@0001VLS*/ 03135000
SFTOT    STM   @14,@12,@SA00021                                    1068 03136000
*CUAINDEX = RECCUA & ZZZF;             /* UNITS ADDRESS      @0001VLS*/ 03137000
         LA    @06,15                                              1069 03138000
         SLR   @15,@15                                             1069 03139000
         ICM   @15,3,RECCUA                                        1069 03140000
         NR    @06,@15                                             1069 03141000
         ST    @06,CUAINDEX                                        1069 03142000
*CUAINDEX = CUAINDEX + ONE;                                /*@0001VLS*/ 03143000
         AL    @06,@CF00057                                        1070 03144000
         ST    @06,CUAINDEX                                        1070 03145000
*CALL FINDTOTS;                           /* FIND COUNTER AREA       */ 03146000
         BAL   @14,FINDTOTS                                        1071 03147000
*IF RETCODE = ZERO THEN                                            1072 03148000
         L     @06,RETCODE                                         1072 03149000
         LTR   @06,@06                                             1072 03150000
         BNZ   @RF01072                                            1072 03151000
*  DO;                                                     /*@0001VLS*/ 03152000
*    IF DATE(2:4) > TDATE(CUAINDEX) THEN                           1074 03153000
         L     @06,SUMPTR                                          1074 03154000
         L     @15,CUAINDEX                                        1074 03155000
         MH    @15,@CH00727                                        1074 03156000
         ST    @15,@TF00001                                        1074 03157000
         ALR   @15,@06                                             1074 03158000
         BCTR  @15,0                                               1074 03159000
         CLC   DATE+1(3,R7),TDATE-55(@15)                          1074 03160000
         BNH   @RF01074                                            1074 03161000
*      TDATE(CUAINDEX) = DATE(2:4);       /* HIGHER TO DATE  @0001VLS*/ 03162000
         AL    @06,@TF00001                                        1075 03163000
         BCTR  @06,0                                               1075 03164000
         MVC   TDATE-55(3,@06),DATE+1(R7)                          1075 03165000
*    IF DATE(2:4) < FDATE(CUAINDEX) THEN                           1076 03166000
@RF01074 L     @06,SUMPTR                                          1076 03167000
         L     @15,CUAINDEX                                        1076 03168000
         MH    @15,@CH00727                                        1076 03169000
         ST    @15,@TF00001                                        1076 03170000
         ALR   @15,@06                                             1076 03171000
         AL    @15,@CF01757                                        1076 03172000
         CLC   DATE+1(3,R7),FDATE-52(@15)                          1076 03173000
         BNL   @RF01076                                            1076 03174000
*      FDATE(CUAINDEX) = DATE(2:4);       /* LOWER FROM DATE @0001VLS*/ 03175000
         AL    @06,@TF00001                                        1077 03176000
         AL    @06,@CF01757                                        1077 03177000
         MVC   FDATE-52(3,@06),DATE+1(R7)                          1077 03178000
*    VELCHGS(CUAINDEX)=VELCHGS(CUAINDEX)+SMVEL; /*VEL.CHK.   @D3503SG*/ 03179000
@RF01076 L     @06,SUMPTR                                          1078 03180000
         L     @15,CUAINDEX                                        1078 03181000
         MH    @15,@CH00727                                        1078 03182000
         SLR   @14,@14                                             1078 03183000
         IC    @14,SMVEL(,R7)                                      1078 03184000
         LA    @01,0(@15,@06)                                      1078 03185000
         AL    @01,@CF01765                                        1078 03186000
         AH    @14,VELCHGS-48(,@01)                                1078 03187000
         LA    @01,0(@15,@06)                                      1078 03188000
         AL    @01,@CF01765                                        1078 03189000
         STH   @14,VELCHGS-48(,@01)                                1078 03190000
*    READER(CUAINDEX)=READER(CUAINDEX)+SMTRD;   /*READ ERS.  @D3503SG*/ 03191000
         SLR   @14,@14                                             1079 03192000
         IC    @14,SMTRD(,R7)                                      1079 03193000
         LA    @01,0(@15,@06)                                      1079 03194000
         AL    @01,@CF01755                                        1079 03195000
         AL    @14,READER-12(,@01)                                 1079 03196000
         LA    @01,0(@15,@06)                                      1079 03197000
         AL    @01,@CF01755                                        1079 03198000
         ST    @14,READER-12(,@01)                                 1079 03199000
*    WRITER(CUAINDEX)=WRITER(CUAINDEX)+SMTWRT;  /*WRITE ERS. @D3503SG*/ 03200000
         SLR   @14,@14                                             1080 03201000
         IC    @14,SMTWRT(,R7)                                     1080 03202000
         LA    @01,0(@15,@06)                                      1080 03203000
         AL    @01,@CF01756                                        1080 03204000
         AL    @14,WRITER-20(,@01)                                 1080 03205000
         LA    @01,0(@15,@06)                                      1080 03206000
         AL    @01,@CF01756                                        1080 03207000
         ST    @14,WRITER-20(,@01)                                 1080 03208000
*    SIOS(CUAINDEX)=SIOS(CUAINDEX)+SMRDSIO;     /*READ SIOS  @D3503SG*/ 03209000
         SLR   @14,@14                                             1081 03210000
         ICM   @14,3,SMRDSIO(R7)                                   1081 03211000
         LA    @01,0(@15,@06)                                      1081 03212000
         AL    @01,@CF01754                                        1081 03213000
         AL    @14,SIOS-8(,@01)                                    1081 03214000
         LA    @01,0(@15,@06)                                      1081 03215000
         AL    @01,@CF01754                                        1081 03216000
         ST    @14,SIOS-8(,@01)                                    1081 03217000
*    WTSIOS(CUAINDEX)=WTSIOS(CUAINDEX)+SMWTSIO; /*WRITE SIOS @D3503SG*/ 03218000
         SLR   @14,@14                                             1082 03219000
         ICM   @14,3,SMWTSIO(R7)                                   1082 03220000
         LA    @01,0(@15,@06)                                      1082 03221000
         AL    @01,@CF01768                                        1082 03222000
         AL    @14,WTSIOS-32(,@01)                                 1082 03223000
         LA    @01,0(@15,@06)                                      1082 03224000
         AL    @01,@CF01768                                        1082 03225000
         ST    @14,WTSIOS-32(,@01)                                 1082 03226000
*    IF EOD = OFF  THEN                         /*NOT END DAY@D3503SG*/ 03227000
         TM    EOD(R7),B'10000000'                                 1083 03228000
         BNZ   @RF01083                                            1083 03229000
*      MOUNTS(CUAINDEX)=MOUNTS(CUAINDEX)+SMOUNT; /*MOUNTS    @D3503SG*/ 03230000
         SLR   @14,@14                                             1084 03231000
         IC    @14,SMOUNT(,R7)                                     1084 03232000
         LA    @01,0(@15,@06)                                      1084 03233000
         AL    @01,@CF01758                                        1084 03234000
         AL    @14,MOUNTS-28(,@01)                                 1084 03235000
         AL    @06,@CF01758                                        1084 03236000
         ST    @14,MOUNTS-28(@15,@06)                              1084 03237000
*    OVERRUNS(CUAINDEX)=OVERRUNS(CUAINDEX)+SMOVRUN; /*OVERRUNS0002SSG*/ 03238000
@RF01083 L     @06,SUMPTR                                          1085 03239000
         L     @15,CUAINDEX                                        1085 03240000
         MH    @15,@CH00727                                        1085 03241000
         SLR   @14,@14                                             1085 03242000
         IC    @14,SMOVRUN(,R7)                                    1085 03243000
         LA    @01,0(@15,@06)                                      1085 03244000
         AL    @01,@CF01764                                        1085 03245000
         AH    @14,OVERRUNS-46(,@01)                               1085 03246000
         LA    @01,0(@15,@06)                                      1085 03247000
         AL    @01,@CF01764                                        1085 03248000
         STH   @14,OVERRUNS-46(,@01)                               1085 03249000
*    ERASE(CUAINDEX)=ERASE(CUAINDEX)+SMERGAP;   /*ERASE GAPS @D3503SG*/ 03250000
         SLR   @14,@14                                             1086 03251000
         ICM   @14,3,SMERGAP(R7)                                   1086 03252000
         LA    @01,0(@15,@06)                                      1086 03253000
         AL    @01,@CF01760                                        1086 03254000
         AL    @14,ERASE-24(,@01)                                  1086 03255000
         LA    @01,0(@15,@06)                                      1086 03256000
         AL    @01,@CF01760                                        1086 03257000
         ST    @14,ERASE-24(,@01)                                  1086 03258000
*    SRDTRYS(CUAINDEX)=SRDTRYS(CUAINDEX)+SMRDTRY; /*READ RTRS@D3503SG*/ 03259000
         SLR   @14,@14                                             1087 03260000
         ICM   @14,3,SMRDTRY(R7)                                   1087 03261000
         LA    @01,0(@15,@06)                                      1087 03262000
         AL    @01,@CF01769                                        1087 03263000
         AL    @14,SRDTRYS-36(,@01)                                1087 03264000
         AL    @06,@CF01769                                        1087 03265000
         ST    @14,SRDTRYS-36(@15,@06)                             1087 03266000
*  END;                                  /*                  @D3503SG*/ 03267000
*END;                                    /*                  @D3503SG*/ 03268000
@EL00021 DS    0H                                                  1089 03269000
@EF00021 DS    0H                                                  1089 03270000
@ER00021 LM    @14,@12,@SA00021                                    1089 03271000
         BR    @14                                                 1089 03272000
*/********************************************************************/ 03273000
*/* OUTPUT THE CUA STATISTICS PORTION OF THE REPORT.         @0001VLS*/ 03274000
*/********************************************************************/ 03275000
*PRINTCUA: PROC;                                           /*@0001VLS*/ 03276000
PRINTCUA STM   @14,@12,@SA00022                                    1090 03277000
* OLDCPUCU = SORTCPUC;               /*INITIALIZE SORT BREAK @0001VLS*/ 03278000
         L     @06,CURRPTR                                         1091 03279000
         MVC   OLDCPUCU(6),SORTCPUC(@06)                           1091 03280000
* DO CURRPTR = CURRPTR BY TWELVE WHILE (EOTABLE ¬= EOT);   /*@0002VLS*/ 03281000
         B     @DE01092                                            1092 03282000
@DL01092 DS    0H                                                  1093 03283000
*   IF OLDCPUCU ¬= SORTCPUC THEN                                   1093 03284000
         L     @06,CURRPTR                                         1093 03285000
         CLC   OLDCPUCU(6),SORTCPUC(@06)                           1093 03286000
         BE    @RF01093                                            1093 03287000
*     CALL OUTTYPES;                  /* SORT BREAK.         @0001VLS*/ 03288000
         BAL   @14,OUTTYPES                                        1094 03289000
*   IF TYPE = THREE THEN                                           1095 03290000
@RF01093 L     @06,CURRPTR                                         1095 03291000
         CLI   TYPE(@06),3                                         1095 03292000
         BNE   @RF01095                                            1095 03293000
*     IF DEVTYPE = NONSF  THEN           /*NON 8809DEV       @D3503SG*/ 03294000
         CLI   DEVTYPE(@06),X'00'                                  1096 03295000
         BNE   @RF01096                                            1096 03296000
*       CALL TEMPSUM;                 /* OUTPUT THE SUMMARY SECTION  */ 03297000
         BAL   @14,TEMPSUM                                         1097 03298000
*     ELSE                               /*8809DEV           @D3503SG*/ 03299000
*       CALL SFSUM;                   /* OUTPUT THE SUMMARY SECTION  */ 03300000
         B     @RC01096                                            1098 03301000
@RF01096 BAL   @14,SFSUM                                           1098 03302000
*   ELSE                                                           1099 03303000
*     DO;                                                  /*@0001VLS*/ 03304000
         B     @RC01095                                            1099 03305000
@RF01095 DS    0H                                                  1100 03306000
*       RECCCHHR = TABCCHHR;          /* SET LOCATION OF RECORD      */ 03307000
         L     @06,CURRPTR                                         1100 03308000
         MVC   RECCCHHR(5,R2),TABCCHHR(@06)                        1100 03309000
*       RESPECIFY (R15) RESTRICTED;                        /*@0001VLS*/ 03310000
*       CALL IOHND(READIRCT);         /* GET A RECORD        @0001VLS*/ 03311000
         L     @15,ADIOHND(,R2)                                    1102 03312000
         LA    @01,@AL01102                                        1102 03313000
         BALR  @14,@15                                             1102 03314000
*       RETCODE = R15;                /* RETURN CODE         @0001VLS*/ 03315000
         ST    R15,RETCODE                                         1103 03316000
*       RESPECIFY (R15) UNRESTRICTED;                      /*@0001VLS*/ 03317000
*       IF RETCODE = ZERO THEN                                     1105 03318000
         L     @06,RETCODE                                         1105 03319000
         LTR   @06,@06                                             1105 03320000
         BNZ   @RF01105                                            1105 03321000
*         DO;                                              /*@0001VLS*/ 03322000
*           IF TYPE = ONE THEN                                     1107 03323000
         L     @06,CURRPTR                                         1107 03324000
         CLI   TYPE(@06),1                                         1107 03325000
         BNE   @RF01107                                            1107 03326000
*             IF DEVTYPE = NONSF  THEN   /*                  @D3503SG*/ 03327000
         CLI   DEVTYPE(@06),X'00'                                  1108 03328000
         BNE   @RF01108                                            1108 03329000
*               CALL CUASTATS;        /* RECORD EXCEEDS THRESHOLD    */ 03330000
         BAL   @14,CUASTATS                                        1109 03331000
*             ELSE                       /*                  @D3503SG*/ 03332000
*               CALL SFSTATS;            /*                  @D3503SG*/ 03333000
         B     @RC01108                                            1110 03334000
@RF01108 BAL   @14,SFSTATS                                         1110 03335000
*           ELSE                                                   1111 03336000
*             IF DEVTYPE = NONSF  THEN   /*                  @D3503SG*/ 03337000
         B     @RC01107                                            1111 03338000
@RF01107 L     @06,CURRPTR                                         1111 03339000
         CLI   DEVTYPE(@06),X'00'                                  1111 03340000
         BNE   @RF01111                                            1111 03341000
*               CALL CUAPERMS;     /*RECORD IS PERM.ERROR-NON 8809DEV*/ 03342000
         BAL   @14,CUAPERMS                                        1112 03343000
*             ELSE                       /*                  @D3503SG*/ 03344000
*               CALL SFPERMS;      /*RECORD IS PERM.ERROR 8809DEV    */ 03345000
         B     @RC01111                                            1113 03346000
@RF01111 BAL   @14,SFPERMS                                         1113 03347000
*             IF (RECTYP & FOXZERO) = MDRREC  THEN   /*      @D3503SG*/ 03348000
@RC01111 DS    0H                                                  1114 03349000
@RC01107 MVC   @TS00001(1),RECTYP(R7)                              1114 03350000
         NI    @TS00001,X'F0'                                      1114 03351000
         CLI   @TS00001,X'90'                                      1114 03352000
         BNE   @RF01114                                            1114 03353000
*                CONTRVOL = SMVOLID;     /*MDR VOLID         @D3503SG*/ 03354000
         L     @06,CURRPTR                                         1115 03355000
         MVI   CONTRVOL+6(@06),C' '                                1115 03356000
         MVC   CONTRVOL(6,@06),SMVOLID(R7)                         1115 03357000
*             ELSE                       /*                  @D3503SG*/ 03358000
*                CONTRVOL = VOLID;       /*OBR VOLID         @D3503SG*/ 03359000
         B     @RC01114                                            1116 03360000
@RF01114 L     @06,CURRPTR                                         1116 03361000
         MVI   CONTRVOL+6(@06),C' '                                1116 03362000
         MVC   CONTRVOL(6,@06),VOLID(R7)                           1116 03363000
*         END;                                             /*@0001VLS*/ 03364000
*       ELSE                                                       1118 03365000
*         CONTRVOL = CONTRVOL && CONTRVOL;  /* ERROR - DO NOTHING    */ 03366000
         B     @RC01105                                            1118 03367000
@RF01105 L     @06,CURRPTR                                         1118 03368000
         XC    CONTRVOL(7,@06),CONTRVOL(@06)                       1118 03369000
*     END;        /* DO TYPE ¬= THREE                        @0001VLS*/ 03370000
@RC01105 DS    0H                                                  1120 03371000
*  END;           /* DO CURRPTR LOOP                         @0001VLS*/ 03372000
@RC01095 LA    @06,12                                              1120 03373000
         AL    @06,CURRPTR                                         1120 03374000
         ST    @06,CURRPTR                                         1120 03375000
@DE01092 L     @06,CURRPTR                                         1120 03376000
         CLC   EOTABLE(2,@06),@CB00261                             1120 03377000
         BNE   @DL01092                                            1120 03378000
*  CALL OUTTYPES;                                          /*@0001VLS*/ 03379000
         BAL   @14,OUTTYPES                                        1121 03380000
*END;                                                      /*@0001VLS*/ 03381000
@EL00022 DS    0H                                                  1122 03382000
@EF00022 DS    0H                                                  1122 03383000
@ER00022 LM    @14,@12,@SA00022                                    1122 03384000
         BR    @14                                                 1122 03385000
*/********************************************************************/ 03386000
*/* OUTPUT THE ERROR CODES FOR PERMANENT ERRORS.             @0001VLS*/ 03387000
*/********************************************************************/ 03388000
*OUTCODES: PROC;                                           /*@0001VLS*/ 03389000
OUTCODES STM   @14,@12,@SA00023                                    1123 03390000
*CALL PRINTIT;                           /*                  @D3503SG*/ 03391000
         BAL   @14,PRINTIT                                         1124 03392000
* OUTCODE(1) = ERRTABLE(1);                                /*@0001VLS*/ 03393000
         MVC   OUTCODE(34),ERRTABLE                                1125 03394000
* OUTCODE(2) = ERRTABLE(2);                                /*@0001VLS*/ 03395000
         MVC   OUTCODE+40(34),ERRTABLE+34                          1126 03396000
* OUTCODE(3) = ERRTABLE(3);                                /*@0001VLS*/ 03397000
         MVC   OUTCODE+80(34),ERRTABLE+68                          1127 03398000
* CALL PRINTIT;                                            /*@0001VLS*/ 03399000
         BAL   @14,PRINTIT                                         1128 03400000
* OUTCODE(1) = ERRTABLE(4);                                /*@0001VLS*/ 03401000
         MVC   OUTCODE(34),ERRTABLE+102                            1129 03402000
* OUTCODE(2) = ERRTABLE(5);                                /*@0001VLS*/ 03403000
         MVC   OUTCODE+40(34),ERRTABLE+136                         1130 03404000
* OUTCODE(3) = ERRTABLE(6);                                /*@0001VLS*/ 03405000
         MVC   OUTCODE+80(34),ERRTABLE+170                         1131 03406000
* CALL PRINTIT;                                            /*@0001VLS*/ 03407000
         BAL   @14,PRINTIT                                         1132 03408000
* OUTCODE(1) = ERRTABLE(7);                                /*@0001VLS*/ 03409000
         MVC   OUTCODE(34),ERRTABLE+204                            1133 03410000
* OUTCODE(2) = ERRTABLE(8);                                /*@0001VLS*/ 03411000
         MVC   OUTCODE+40(34),ERRTABLE+238                         1134 03412000
* OUTCODE(3) = ERRTABLE(9);                                /*@0001VLS*/ 03413000
         MVC   OUTCODE+80(34),ERRTABLE+272                         1135 03414000
* CALL PRINTIT;                                            /*@0001VLS*/ 03415000
         BAL   @14,PRINTIT                                         1136 03416000
* OUTCODE(1) = ERRTABLE(10);                               /*@0001VLS*/ 03417000
         MVC   OUTCODE(34),ERRTABLE+306                            1137 03418000
* OUTCODE(2) = ERRTABLE(11);                               /*@0001VLS*/ 03419000
         MVC   OUTCODE+40(34),ERRTABLE+340                         1138 03420000
* OUTCODE(3) = ERRTABLE(12);         /*WC-WRITE CURRENT CHK. @D3503SG*/ 03421000
         MVC   OUTCODE+80(34),ERRTABLE+374                         1139 03422000
* CALL PRINTIT;                                            /*@0001VLS*/ 03423000
         BAL   @14,PRINTIT                                         1140 03424000
* CALL PRINTIT;                          /*                  @D3503SG*/ 03425000
         BAL   @14,PRINTIT                                         1141 03426000
* MYLINCT = MYLINCT - SIX;                                 /*@0001VLS*/ 03427000
         L     @06,MYLINCT                                         1142 03428000
         SL    @06,@CF00080                                        1142 03429000
         ST    @06,MYLINCT                                         1142 03430000
*END;                                                      /*@0001VLS*/ 03431000
@EL00023 DS    0H                                                  1143 03432000
@EF00023 DS    0H                                                  1143 03433000
@ER00023 LM    @14,@12,@SA00023                                    1143 03434000
         BR    @14                                                 1143 03435000
*/********************************************************************/ 03436000
*/* A SEARCH IS MADE FOR THE APPROPRIATE SET OF CPU/CONTROL UNIT CTRS*/ 03437000
*/********************************************************************/ 03438000
*FINDTOTS: PROC;                                           /*@0001VLS*/ 03439000
FINDTOTS STM   @14,@12,@SA00024                                    1144 03440000
* FOUND = OFF;                        /* INIT SEARCH VARIABLE        */ 03441000
         NI    FOUND,B'11011111'                                   1145 03442000
* SUMPTR = TOTALPTR;                                       /*@0001VLS*/ 03443000
         L     @06,TOTALPTR                                        1146 03444000
         ST    @06,SUMPTR                                          1146 03445000
* DO WHILE (SUMPTR ¬= ZERO & FOUND = OFF);                 /*@0001VLS*/ 03446000
         B     @DE01147                                            1147 03447000
@DL01147 DS    0H                                                  1148 03448000
*   IF CHAIN = CPUCUX THEN                                         1148 03449000
         L     @06,SUMPTR                                          1148 03450000
         CLC   CHAIN(6),CPUCUX(@06)                                1148 03451000
         BNE   @RF01148                                            1148 03452000
*     FOUND = ON;                                          /*@0001VLS*/ 03453000
         OI    FOUND,B'00100000'                                   1149 03454000
*   ELSE                                                           1150 03455000
*     DO;                                                  /*@0001VLS*/ 03456000
         B     @RC01148                                            1150 03457000
@RF01148 DS    0H                                                  1151 03458000
*       Z = SUMPTR;                   /* SAVE THE POINTER TO LAST ONE*/ 03459000
         L     @06,SUMPTR                                          1151 03460000
         ST    @06,Z                                               1151 03461000
*       SUMPTR = NEXTCPU;             /* NEXT ONE            @0001VLS*/ 03462000
         L     @06,NEXTCPU(,@06)                                   1152 03463000
         ST    @06,SUMPTR                                          1152 03464000
*     END;                                                 /*@0001VLS*/ 03465000
* END;                                                     /*@0001VLS*/ 03466000
@RC01148 DS    0H                                                  1154 03467000
@DE01147 L     @06,SUMPTR                                          1154 03468000
         LTR   @06,@06                                             1154 03469000
         BZ    @DC01147                                            1154 03470000
         TM    FOUND,B'00100000'                                   1154 03471000
         BZ    @DL01147                                            1154 03472000
@DC01147 DS    0H                                                  1155 03473000
* IF SUMPTR = ZERO THEN               /* MUST CREATE A NEW AREA      */ 03474000
         L     @06,SUMPTR                                          1155 03475000
         LTR   @06,@06                                             1155 03476000
         BNZ   @RF01155                                            1155 03477000
*  DO;                                                     /*@0001VLS*/ 03478000
*    RESPECIFY (R0,R15) RESTRICTED;                        /*@0001VLS*/ 03479000
*    R0 = LENGTH(SUMAREA);            /* SIZE OF NEW AREA    @0001VLS*/ 03480000
         LA    R0,910                                              1158 03481000
*    GEN(GETMAIN EC,LV=(0),A=SUMPTR);                      /*@0001VLS*/ 03482000
         GETMAIN EC,LV=(0),A=SUMPTR                                     03483000
*    RETCODE = R15;                                        /*@0001VLS*/ 03484000
         ST    R15,RETCODE                                         1160 03485000
*    RESPECIFY (R0,R15) UNRESTRICTED;                      /*@0001VLS*/ 03486000
*    IF RETCODE = ZERO THEN                                        1162 03487000
         L     @06,RETCODE                                         1162 03488000
         LTR   @06,@06                                             1162 03489000
         BNZ   @RF01162                                            1162 03490000
*      DO;                                                 /*@0001VLS*/ 03491000
*        DO I = ONE TO 16;                                 /*@0001VLS*/ 03492000
         LA    @06,1                                               1164 03493000
         STH   @06,I                                               1164 03494000
@DL01164 DS    0H                                                  1165 03495000
*          SUMTEMP(I) = SUMTEMP(I) && SUMTEMP(I);   /* CLEAR AREA    */ 03496000
         L     @15,SUMPTR                                          1165 03497000
         LR    @14,@06                                             1165 03498000
         MH    @14,@CH00727                                        1165 03499000
         ST    @14,@TF00001                                        1165 03500000
         ALR   @14,@15                                             1165 03501000
         AL    @14,@CF01754                                        1165 03502000
         XC    SUMTEMP-8(50,@14),SUMTEMP-8(@14)                    1165 03503000
*          FDATE(I,1:2) = EOT;                             /*@0001VLS*/ 03504000
         AL    @15,@TF00001                                        1166 03505000
         AL    @15,@CF01757                                        1166 03506000
         MVC   FDATE-52(2,@15),@CB00261                            1166 03507000
*        END;                                              /*@0001VLS*/ 03508000
         AL    @06,@CF00057                                        1167 03509000
         STH   @06,I                                               1167 03510000
         C     @06,@CF00088                                        1167 03511000
         BNH   @DL01164                                            1167 03512000
*        IF TOTALPTR = ZERO THEN                                   1168 03513000
         L     @06,TOTALPTR                                        1168 03514000
         LTR   @06,@06                                             1168 03515000
         BNZ   @RF01168                                            1168 03516000
*          TOTALPTR = SUMPTR;                              /*@0001VLS*/ 03517000
         L     @06,SUMPTR                                          1169 03518000
         ST    @06,TOTALPTR                                        1169 03519000
*        ELSE                                                      1170 03520000
*          Z -> NEXTCPU = SUMPTR;                          /*@0001VLS*/ 03521000
         B     @RC01168                                            1170 03522000
@RF01168 L     @06,SUMPTR                                          1170 03523000
         L     @01,Z                                               1170 03524000
         ST    @06,NEXTCPU(,@01)                                   1170 03525000
*        NEXTCPU = ZERO;                /* NOTHING IN CHAIN  @0001VLS*/ 03526000
@RC01168 L     @06,SUMPTR                                          1171 03527000
         SLR   @15,@15                                             1171 03528000
         ST    @15,NEXTCPU(,@06)                                   1171 03529000
*        CPUCUX = CHAIN;                /* CPU SERIAL/MODEL CUA      */ 03530000
         MVC   CPUCUX(6,@06),CHAIN                                 1172 03531000
*        CONTRCUA = CUX;                /* SORT TABLE ENTRY  @0001VLS*/ 03532000
         L     @15,CURRPTR                                         1173 03533000
         MVC   CONTRCUA(2,@15),CUX(@06)                            1173 03534000
*        CPU = RECCPU;                  /* SORT TABLE CPU ENTRY      */ 03535000
         MVC   CPU(3,@15),RECCPU                                   1174 03536000
*        TABCCHHR = SUMPTRC;            /* LOCATION OF SUMMARY AREA  */ 03537000
         MVI   TABCCHHR+4(@15),C' '                                1175 03538000
         MVC   TABCCHHR(4,@15),SUMPTRC                             1175 03539000
*        TYPE = THREE;                                     /*@0001VLS*/ 03540000
         MVI   TYPE(@15),X'03'                                     1176 03541000
*        DEVTYPE = RECDEV;               /*                  @D3503SG*/ 03542000
         MVC   DEVTYPE(1,@15),RECDEV                               1177 03543000
*        NUMENT = NUMENT + ONE;                            /*@0001VLS*/ 03544000
         LA    @14,1                                               1178 03545000
         AL    @14,NUMENT                                          1178 03546000
         ST    @14,NUMENT                                          1178 03547000
*        CURRPTR = CURRPTR - TWELVE;    /* DECREMENT TO NEXT ENTRY   */ 03548000
         SL    @15,@CF00033                                        1179 03549000
         ST    @15,CURRPTR                                         1179 03550000
*        FDATE(CUAINDEX) = DATE(2:4);   /* FROM DATE         @0001VLS*/ 03551000
         L     @15,CUAINDEX                                        1180 03552000
         MH    @15,@CH00727                                        1180 03553000
         ST    @15,@TF00001                                        1180 03554000
         ALR   @15,@06                                             1180 03555000
         AL    @15,@CF01757                                        1180 03556000
         MVC   FDATE-52(3,@15),DATE+1(R7)                          1180 03557000
*        TDATE(CUAINDEX) = DATE(2:4);   /* TO DATE           @0001VLS*/ 03558000
         AL    @06,@TF00001                                        1181 03559000
         BCTR  @06,0                                               1181 03560000
         MVC   TDATE-55(3,@06),DATE+1(R7)                          1181 03561000
*      END;                                                /*@0001VLS*/ 03562000
*    ELSE                                                          1183 03563000
*      DO;                                                 /*@0001VLS*/ 03564000
         B     @RC01162                                            1183 03565000
@RF01162 DS    0H                                                  1184 03566000
*        CALL IFCMSG(53,ADDR(MSGADDR));                    /*@0001VLS*/ 03567000
         LA    @06,MSGADDR                                         1184 03568000
         ST    @06,@AFTEMPS+4                                      1184 03569000
         L     @15,ADIFCMSG(,R2)                                   1184 03570000
         LA    @01,@AL01184                                        1184 03571000
         BALR  @14,@15                                             1184 03572000
*        CALL PRINTIT;                                     /*@0001VLS*/ 03573000
         BAL   @14,PRINTIT                                         1185 03574000
*      END;                                                /*@0001VLS*/ 03575000
*  END;                                                    /*@0001VLS*/ 03576000
* END;                                                     /*@0001VLS*/ 03577000
@EL00024 DS    0H                                                  1188 03578000
@EF00024 DS    0H                                                  1188 03579000
@ER00024 LM    @14,@12,@SA00024                                    1188 03580000
         BR    @14                                                 1188 03581000
*/********************************************************************/ 03582000
*/*    THIS PROC WILL PRINT THE DEBUG COUNTS SAVE AT VARIOUS POINTS  */ 03583000
*/*    THE COUNTS ARE ONLY FROM IFCTHRSH NOT CUA OR EEDIT    @0001VLS*/ 03584000
*/********************************************************************/ 03585000
*BUGDATA: PROC;               /* PRINT DEBUG16 DATA          @0001VLS*/ 03586000
BUGDATA  STM   @14,@12,@SA00025                                    1189 03587000
*MSGADDR = BUG16;                /*MOVE THE DEBUG HEADING INTO BUFFER*/ 03588000
         MVI   MSGADDR+31,C' '                                     1190 03589000
         MVC   MSGADDR+32(100),MSGADDR+31                          1190 03590000
         MVC   MSGADDR(31),BUG16                                   1190 03591000
*CALL PRINTIT;                   /*GO PRINT THE MESSAGE      @0001VLS*/ 03592000
         BAL   @14,PRINTIT                                         1191 03593000
*CALL CONVBIN(TOTREC,BUG10);          /* TOTAL NUMBER OF RECORDS READ*/ 03594000
         LA    @01,@AL01192                                        1192 03595000
         BAL   @14,CONVBIN                                         1192 03596000
*MSGADDR = BUG10;             /*MOVE THE MESSAGE TO THE PRINT BUFFER */ 03597000
         MVI   MSGADDR+26,C' '                                     1193 03598000
         MVC   MSGADDR+27(105),MSGADDR+26                          1193 03599000
         MVC   MSGADDR(26),BUG10                                   1193 03600000
*CALL PRINTIT;                /*GO PRINT THE MESSAGE         @0001VLS*/ 03601000
         BAL   @14,PRINTIT                                         1194 03602000
*CALL CONVBIN(OBRCT,BUG20);           /* NUMBER OF OBR RECORDS READ  */ 03603000
         LA    @01,@AL01195                                        1195 03604000
         BAL   @14,CONVBIN                                         1195 03605000
*MSGADDR = BUG20;             /*MOVE THE MESSAGE TO THE PRINT BUFFER */ 03606000
         MVI   MSGADDR+24,C' '                                     1196 03607000
         MVC   MSGADDR+25(107),MSGADDR+24                          1196 03608000
         MVC   MSGADDR(24),BUG20                                   1196 03609000
*CALL PRINTIT;                /*GO PRINT THE MESSAGE         @0001VLS*/ 03610000
         BAL   @14,PRINTIT                                         1197 03611000
*CALL CONVBIN(MDRCT,BUG21);           /* NUMBER OF MDR RECORDS READ  */ 03612000
         LA    @01,@AL01198                                        1198 03613000
         BAL   @14,CONVBIN                                         1198 03614000
*MSGADDR = BUG21;             /*MOVE THE MESSAGE TO THE PRINT BUFFER */ 03615000
         MVI   MSGADDR+24,C' '                                     1199 03616000
         MVC   MSGADDR+25(107),MSGADDR+24                          1199 03617000
         MVC   MSGADDR(24),BUG21                                   1199 03618000
*CALL PRINTIT;                /*GO PRINT THE MESSAGE         @0001VLS*/ 03619000
         BAL   @14,PRINTIT                                         1200 03620000
*CALL CONVBIN(NUMSHORT,BUG30);        /* NUMBER OF SHORT RECORDS     */ 03621000
         LA    @01,@AL01201                                        1201 03622000
         BAL   @14,CONVBIN                                         1201 03623000
*MSGADDR = BUG30;             /*MOVE THE MESSAGE TO THE PRINT BUFFER */ 03624000
         MVI   MSGADDR+36,C' '                                     1202 03625000
         MVC   MSGADDR+37(95),MSGADDR+36                           1202 03626000
         MVC   MSGADDR(36),BUG30                                   1202 03627000
*CALL PRINTIT;                /*GO PRINT THE MESSAGE         @0001VLS*/ 03628000
         BAL   @14,PRINTIT                                         1203 03629000
*CALL CONVBIN(BADDEV,BUG31);          /* NUMBER OF NON-8003 DEVICES  */ 03630000
         LA    @01,@AL01204                                        1204 03631000
         BAL   @14,CONVBIN                                         1204 03632000
*MSGADDR = BUG31;             /*MOVE THE MESSAGE TO THE PRINT BUFFER */ 03633000
         MVI   MSGADDR+30,C' '                                     1205 03634000
         MVC   MSGADDR+31(101),MSGADDR+30                          1205 03635000
         MVC   MSGADDR(30),BUG31                                   1205 03636000
*CALL PRINTIT;                /*GO PRINT THE MESSAGE         @0001VLS*/ 03637000
         BAL   @14,PRINTIT                                         1206 03638000
*CALL CONVBIN(BADDAY,BUG40);        /* NUM RECORDS FAILED DATE RANGE */ 03639000
         LA    @01,@AL01207                                        1207 03640000
         BAL   @14,CONVBIN                                         1207 03641000
*MSGADDR = BUG40;             /*MOVE THE MESSAGE TO THE PRINT BUFFER */ 03642000
         MVI   MSGADDR+37,C' '                                     1208 03643000
         MVC   MSGADDR+38(94),MSGADDR+37                           1208 03644000
         MVC   MSGADDR(37),BUG40                                   1208 03645000
*CALL PRINTIT;                /*GO PRINT THE MESSAGE         @0001VLS*/ 03646000
         BAL   @14,PRINTIT                                         1209 03647000
*CALL CONVBIN(BADTIME,BUG50);       /* NUM RECORDS FAILED TIME RANGE */ 03648000
         LA    @01,@AL01210                                        1210 03649000
         BAL   @14,CONVBIN                                         1210 03650000
*MSGADDR = BUG50;             /*MOVE THE MESSAGE TO THE PRINT BUFFER */ 03651000
         MVI   MSGADDR+37,C' '                                     1211 03652000
         MVC   MSGADDR+38(94),MSGADDR+37                           1211 03653000
         MVC   MSGADDR(37),BUG50                                   1211 03654000
*CALL PRINTIT;                /*GO PRINT THE MESSAGE         @0001VLS*/ 03655000
         BAL   @14,PRINTIT                                         1212 03656000
*CALL CONVBIN(DROP3RD,BUG60);       /* NUM RECORDS FAILED 3RD SHIFT  */ 03657000
         LA    @01,@AL01213                                        1213 03658000
         BAL   @14,CONVBIN                                         1213 03659000
*MSGADDR = BUG60;             /*MOVE THE MESSAGE TO THE PRINT BUFFER */ 03660000
         MVI   MSGADDR+33,C' '                                     1214 03661000
         MVC   MSGADDR+34(98),MSGADDR+33                           1214 03662000
         MVC   MSGADDR(33),BUG60                                   1214 03663000
*CALL PRINTIT;                /*GO PRINT THE MESSAGE         @0001VLS*/ 03664000
         BAL   @14,PRINTIT                                         1215 03665000
*CALL CONVBIN(BADCPU,BUG70);        /* NUM RECORDS FAILED CPU SPECS  */ 03666000
         LA    @01,@AL01216                                        1216 03667000
         BAL   @14,CONVBIN                                         1216 03668000
*MSGADDR = BUG70;             /*MOVE THE MESSAGE TO THE PRINT BUFFER */ 03669000
         MVI   MSGADDR+35,C' '                                     1217 03670000
         MVC   MSGADDR+36(96),MSGADDR+35                           1217 03671000
         MVC   MSGADDR(35),BUG70                                   1217 03672000
*CALL PRINTIT;                /*GO PRINT THE MESSAGE         @0001VLS*/ 03673000
         BAL   @14,PRINTIT                                         1218 03674000
*CALL CONVBIN(BADCUA,BUG80);        /* NUM RECORDS FAILED CUA RANGE  */ 03675000
         LA    @01,@AL01219                                        1219 03676000
         BAL   @14,CONVBIN                                         1219 03677000
*MSGADDR = BUG80;             /*MOVE THE MESSAGE TO THE PRINT BUFFER */ 03678000
         MVI   MSGADDR+35,C' '                                     1220 03679000
         MVC   MSGADDR+36(96),MSGADDR+35                           1220 03680000
         MVC   MSGADDR(35),BUG80                                   1220 03681000
*CALL PRINTIT;                /*GO PRINT THE MESSAGE         @0001VLS*/ 03682000
         BAL   @14,PRINTIT                                         1221 03683000
*CALL CONVBIN(BADVOL,BUG90);        /* NUM RECORDS FAILED VOL SPECS  */ 03684000
         LA    @01,@AL01222                                        1222 03685000
         BAL   @14,CONVBIN                                         1222 03686000
*MSGADDR = BUG90;             /*MOVE THE MESSAGE TO THE PRINT BUFFER */ 03687000
         MVI   MSGADDR+37,C' '                                     1223 03688000
         MVC   MSGADDR+38(94),MSGADDR+37                           1223 03689000
         MVC   MSGADDR(37),BUG90                                   1223 03690000
*CALL PRINTIT;                /*GO PRINT THE MESSAGE         @0001VLS*/ 03691000
         BAL   @14,PRINTIT                                         1224 03692000
*CALL CONVBIN(BADSER,BUG100);        /* NUM RECORDS FAILED DEVSER    */ 03693000
         LA    @01,@AL01225                                        1225 03694000
         BAL   @14,CONVBIN                                         1225 03695000
*MSGADDR = BUG100;            /*MOVE THE MESSAGE TO THE PRINT BUFFER */ 03696000
         MVI   MSGADDR+45,C' '                                     1226 03697000
         MVC   MSGADDR+46(86),MSGADDR+45                           1226 03698000
         MVC   MSGADDR(45),BUG100                                  1226 03699000
*CALL PRINTIT;                /*GO PRINT THE MESSAGE         @0001VLS*/ 03700000
         BAL   @14,PRINTIT                                         1227 03701000
*CALL CONVBIN(SHAREMOD,BUG110);       /* NUM SHARE CHGS AS CONTROLLER*/ 03702000
         LA    @01,@AL01228                                        1228 03703000
         BAL   @14,CONVBIN                                         1228 03704000
*MSGADDR = BUG110;            /*MOVE THE MESSAGE TO THE PRINT BUFFER */ 03705000
         MVI   MSGADDR+66,C' '                                     1229 03706000
         MVC   MSGADDR+67(65),MSGADDR+66                           1229 03707000
         MVC   MSGADDR(66),BUG110                                  1229 03708000
*CALL PRINTIT;                /*GO PRINT THE MESSAGE         @0001VLS*/ 03709000
         BAL   @14,PRINTIT                                         1230 03710000
*CALL CONVBIN(SHARECU,BUG120);        /* NUM SHARE CHGS AS CUA       */ 03711000
         LA    @01,@AL01231                                        1231 03712000
         BAL   @14,CONVBIN                                         1231 03713000
*MSGADDR = BUG120;            /*MOVE THE MESSAGE TO THE PRINT BUFFER */ 03714000
         MVI   MSGADDR+56,C' '                                     1232 03715000
         MVC   MSGADDR+57(75),MSGADDR+56                           1232 03716000
         MVC   MSGADDR(56),BUG120                                  1232 03717000
*CALL PRINTIT;                /*GO PRINT THE MESSAGE         @0001VLS*/ 03718000
         BAL   @14,PRINTIT                                         1233 03719000
*CALL CONVBIN(EXCTHRES(1),BUG130);        /* NUM THRESHOLD EXCEEDS   */ 03720000
         LA    @01,@AL01234                                        1234 03721000
         BAL   @14,CONVBIN                                         1234 03722000
*MSGADDR = BUG130;            /*MOVE THE MESSAGE TO THE PRINT BUFFER */ 03723000
         MVI   MSGADDR+33,C' '                                     1235 03724000
         MVC   MSGADDR+34(98),MSGADDR+33                           1235 03725000
         MVC   MSGADDR(33),BUG130                                  1235 03726000
*CALL PRINTIT;                /*GO PRINT THE MESSAGE         @0001VLS*/ 03727000
         BAL   @14,PRINTIT                                         1236 03728000
*CALL CONVBIN(EXCTHRES(2),BUG140);        /* NUM PERM ERRORS @0001VLS*/ 03729000
         LA    @01,@AL01237                                        1237 03730000
         BAL   @14,CONVBIN                                         1237 03731000
*MSGADDR = BUG140;            /*MOVE THE MESSAGE TO THE PRINT BUFFER */ 03732000
         MVI   MSGADDR+30,C' '                                     1238 03733000
         MVC   MSGADDR+31(101),MSGADDR+30                          1238 03734000
         MVC   MSGADDR(30),BUG140                                  1238 03735000
*CALL PRINTIT;                /*GO PRINT THE MESSAGE         @0001VLS*/ 03736000
         BAL   @14,PRINTIT                                         1239 03737000
*END;                                                      /*@0001VLS*/ 03738000
@EL00025 DS    0H                                                  1240 03739000
@EF00025 DS    0H                                                  1240 03740000
@ER00025 LM    @14,@12,@SA00025                                    1240 03741000
         BR    @14                                                 1240 03742000
*/*                                                          @0001VLS*/ 03743000
*/* LOOK UP THE CUA IN THE SHARE TABLE FOR THE CONVERTED SHARE VALUE. * 03744000
*/* IF IT IS FOUND, RETURN THE CONVERTED VALUE IN NEW CUA. IF NOT,    * 03745000
*/* RETURN THE ORIGINAL VALUE IN NEWCUA.                     @0001VLS*/ 03746000
*/*                                                          @0001VLS*/ 03747000
*CUASHARE: PROC;                                           /*@0001VLS*/ 03748000
CUASHARE STM   @14,@12,12(@13)                                     1241 03749000
*    VALIDSHR = OFF;                          /* TURN OFF FOR SEARCH  * 03750000
         NI    VALIDSHR,B'01111111'                                1242 03751000
*    SHR74CUA = RECCUA;                       /* CUA FOR COMPARISON   * 03752000
         MVC   SHR74CUA(2),RECCUA                                  1243 03753000
*    SHR74CPU = CPUIDENT;                     /* CPU FOR COMPARISON   * 03754000
         MVC   SHR74CPU(3),CPUIDENT(R7)                            1244 03755000
*    DO I = 1 TO SHARENUM BY 1 WHILE(VALIDSHR = OFF);      /*@0001VLS*/ 03756000
         LA    @06,1                                               1245 03757000
         STH   @06,I                                               1245 03758000
         B     @DE01245                                            1245 03759000
@DL01245 TM    VALIDSHR,B'10000000'                                1245 03760000
         BNZ   @DC01245                                            1245 03761000
*      IF SHAREFLG(I)=LETTERS&SHR74CPU=SHARSERA(I) THEN            1246 03762000
         SLA   @06,4                                               1246 03763000
         L     @15,SHAREPTR(,R2)                                   1246 03764000
         ST    @06,@TF00001                                        1246 03765000
         ALR   @06,@15                                             1246 03766000
         AL    @06,@CF01762                                        1246 03767000
         CLC   SHAREFLG-2(1,@06),LETTERS                           1246 03768000
         BNE   @RF01246                                            1246 03769000
         LR    @06,@15                                             1246 03770000
         AL    @06,@TF00001                                        1246 03771000
         AL    @06,@CF01766                                        1246 03772000
         CLC   SHR74CPU(3),SHARSERA-10(@06)                        1246 03773000
         BNE   @RF01246                                            1246 03774000
*        IF SHR74CUA>=SHRCUAAL(I)&SHR74CUA<=SHRCUAAH(I) THEN       1247 03775000
         LR    @06,@15                                             1247 03776000
         AL    @06,@TF00001                                        1247 03777000
         AL    @06,@CF01771                                        1247 03778000
         CLC   SHR74CUA(2),SHRCUAAL-13(@06)                        1247 03779000
         BL    @RF01247                                            1247 03780000
         LR    @06,@15                                             1247 03781000
         AL    @06,@TF00001                                        1247 03782000
         BCTR  @06,0                                               1247 03783000
         CLC   SHR74CUA(2),SHRCUAAH-15(@06)                        1247 03784000
         BH    @RF01247                                            1247 03785000
*          DO;                                /* CUA ONLY.   @0001VLS*/ 03786000
*            IF SHRCUAAL(I)¬=SHRCUAAH(I) THEN                      1249 03787000
         LR    @06,@15                                             1249 03788000
         AL    @06,@TF00001                                        1249 03789000
         AL    @06,@CF01771                                        1249 03790000
         AL    @15,@TF00001                                        1249 03791000
         BCTR  @15,0                                               1249 03792000
         CLC   SHRCUAAL-13(2,@06),SHRCUAAH-15(@15)                 1249 03793000
         BE    @RF01249                                            1249 03794000
*              SHARECU=SHARECU+ONE;    /*CUA LEVEL CHANGE    @D3506GB*/ 03795000
         LA    @06,1                                               1250 03796000
         AL    @06,SHARECU                                         1250 03797000
         ST    @06,SHARECU                                         1250 03798000
*            ELSE                                                  1251 03799000
*              SHAREMOD=SHAREMOD+ONE;  /*CONTROLLER LEVEL CHANGE      * 03800000
         B     @RC01249                                            1251 03801000
@RF01249 LA    @06,1                                               1251 03802000
         AL    @06,SHAREMOD                                        1251 03803000
         ST    @06,SHAREMOD                                        1251 03804000
*            RECCUA=SHRCUABL(I)+SHR74CUA-SHRCUAAL(I);      /*@D3506GB*/ 03805000
@RC01249 LH    @06,I                                               1252 03806000
         SLA   @06,4                                               1252 03807000
         L     @15,SHAREPTR(,R2)                                   1252 03808000
         ST    @06,@TF00001                                        1252 03809000
         ALR   @06,@15                                             1252 03810000
         AL    @06,@CF01764                                        1252 03811000
         SLR   @14,@14                                             1252 03812000
         ICM   @14,3,SHRCUABL-6(@06)                               1252 03813000
         SLR   @06,@06                                             1252 03814000
         ICM   @06,3,SHR74CUA                                      1252 03815000
         ALR   @14,@06                                             1252 03816000
         LR    @06,@15                                             1252 03817000
         AL    @06,@TF00001                                        1252 03818000
         AL    @06,@CF01771                                        1252 03819000
         SLR   @09,@09                                             1252 03820000
         ICM   @09,3,SHRCUAAL-13(@06)                              1252 03821000
         SLR   @14,@09                                             1252 03822000
         STCM  @14,3,RECCUA                                        1252 03823000
*            RECCPU = SHARSERB(I);                         /*@0001VLS*/ 03824000
         AL    @15,@TF00001                                        1253 03825000
         AL    @15,@CF01772                                        1253 03826000
         MVC   RECCPU(3),SHARSERB-3(@15)                           1253 03827000
*            VALIDSHR = ON;                                /*@0001VLS*/ 03828000
         OI    VALIDSHR,B'10000000'                                1254 03829000
*          END;                                            /*@0001VLS*/ 03830000
*    END;                                                  /*@0001VLS*/ 03831000
@RF01247 DS    0H                                                  1256 03832000
@RF01246 LA    @06,1                                               1256 03833000
         AH    @06,I                                               1256 03834000
         STH   @06,I                                               1256 03835000
@DE01245 L     @01,SHAREPTR(,R2)                                   1256 03836000
         CH    @06,SHARENUM(,@01)                                  1256 03837000
         BNH   @DL01245                                            1256 03838000
@DC01245 DS    0H                                                  1257 03839000
*    RETURN;                                               /*@0001VLS*/ 03840000
@EL00026 DS    0H                                                  1257 03841000
@EF00026 DS    0H                                                  1257 03842000
@ER00026 LM    @14,@12,12(@13)                                     1257 03843000
         BR    @14                                                 1257 03844000
* END;                                                     /*@0001VLS*/ 03845000
*/*                                                          @D3506GB*/ 03846000
*/* LOOK UP THE CUA IN THE SHARE/CONTROLLER TABLE FOR A CONTROLLER    * 03847000
*/* ENTRY THAT MATCHES THE IMPUT VALUE AND THEN CONVERT. IF NO        * 03848000
*/* CONTROLLER VALUE IS FOUND CONVERT THE LOW END OF THE RANGE TO 0   * 03849000
*/*                                                          @D3506GB*/ 03850000
*CONVCNTR: PROC;                                           /*@D3506GB*/ 03851000
CONVCNTR STM   @14,@12,12(@13)                                     1259 03852000
*  VALIDCON=ON;                        /*SWITCH FOR VALID CUA RANGE   * 03853000
*  VALIDSHR=OFF;                       /*SWITCH FOR DO LOOP  @D3506GB*/ 03854000
         OI    VALIDCON,B'00010000'                                1261 03855000
         NI    VALIDSHR,B'01111111'                                1261 03856000
*  IF SHAREPTR ¬= 0 THEN                                           1262 03857000
         L     @06,SHAREPTR(,R2)                                   1262 03858000
         LTR   @06,@06                                             1262 03859000
         BZ    @RF01262                                            1262 03860000
*   DO I = 1 TO SHARENUM BY 1 WHILE(VALIDSHR=OFF);         /*@D3506GB*/ 03861000
         LA    @06,1                                               1263 03862000
         STH   @06,I                                               1263 03863000
         B     @DE01263                                            1263 03864000
@DL01263 TM    VALIDSHR,B'10000000'                                1263 03865000
         BNZ   @DC01263                                            1263 03866000
*    IF SHAREFLG(I)=LETTERC THEN       /* TEST FOR CONTROLLER ENTRY   * 03867000
         SLA   @06,4                                               1264 03868000
         L     @15,SHAREPTR(,R2)                                   1264 03869000
         ST    @06,@TF00001                                        1264 03870000
         ALR   @06,@15                                             1264 03871000
         AL    @06,@CF01762                                        1264 03872000
         CLC   SHAREFLG-2(1,@06),LETTERC                           1264 03873000
         BNE   @RF01264                                            1264 03874000
*      IF RECCPU=SHARSERB(I) THEN      /*SAME CPU            @D3506GB*/ 03875000
         LR    @06,@15                                             1265 03876000
         AL    @06,@TF00001                                        1265 03877000
         AL    @06,@CF01772                                        1265 03878000
         CLC   RECCPU(3),SHARSERB-3(@06)                           1265 03879000
         BNE   @RF01265                                            1265 03880000
*        IF RECCUA>=SHRCUABL(I) & RECCUA<=SHRCUABH(I) THEN         1266 03881000
         LR    @06,@15                                             1266 03882000
         AL    @06,@TF00001                                        1266 03883000
         AL    @06,@CF01764                                        1266 03884000
         CLC   RECCUA(2),SHRCUABL-6(@06)                           1266 03885000
         BL    @RF01266                                            1266 03886000
         LR    @06,@15                                             1266 03887000
         AL    @06,@TF00001                                        1266 03888000
         AL    @06,@CF01765                                        1266 03889000
         CLC   RECCUA(2),SHRCUABH-8(@06)                           1266 03890000
         BH    @RF01266                                            1266 03891000
*          IF SHRCUABH(I)-SHRCUABL(I)>DEC15 THEN                   1267 03892000
         LR    @06,@15                                             1267 03893000
         AL    @06,@TF00001                                        1267 03894000
         AL    @06,@CF01765                                        1267 03895000
         SLR   @14,@14                                             1267 03896000
         ICM   @14,3,SHRCUABH-8(@06)                               1267 03897000
         AL    @15,@TF00001                                        1267 03898000
         AL    @15,@CF01764                                        1267 03899000
         SLR   @06,@06                                             1267 03900000
         ICM   @06,3,SHRCUABL-6(@15)                               1267 03901000
         SLR   @14,@06                                             1267 03902000
         C     @14,@CF00032                                        1267 03903000
         BNH   @RF01267                                            1267 03904000
*            DO;                                           /*@D3506GB*/ 03905000
*              LOWCUA=RECCUA&ZFFZ;     /*SET DEFAULT RANGE   @D3506GB*/ 03906000
         MVC   LOWCUA(2),RECCUA                                    1269 03907000
         NC    LOWCUA(2),@CB00475                                  1269 03908000
*              HIGHCUA=RECCUA|ZZZF;                        /*@D3506GB*/ 03909000
         MVC   HIGHCUA(2),RECCUA                                   1270 03910000
         OC    HIGHCUA(2),@CB00473                                 1270 03911000
*              VALIDCON=OFF;           /*ERROR IN CUA RANGE IN TABLE  * 03912000
*              VALIDSHR=ON;                                /*@D3506GB*/ 03913000
         OI    VALIDSHR,B'10000000'                                1272 03914000
         NI    VALIDCON,B'11101111'                                1272 03915000
*            END;                                          /*@D3506GB*/ 03916000
*          ELSE                        /*CUA RANGE IS VALID  @D3506GB*/ 03917000
*            DO;                       /*CUA IN CORRECT RANGE         * 03918000
         B     @RC01267                                            1274 03919000
@RF01267 DS    0H                                                  1275 03920000
*              LOWCUA=SHRCUABL(I);     /*GET LOW END OF CONTROLLER    * 03921000
         LH    @06,I                                               1275 03922000
         SLA   @06,4                                               1275 03923000
         L     @15,SHAREPTR(,R2)                                   1275 03924000
         ST    @06,@TF00001                                        1275 03925000
         ALR   @06,@15                                             1275 03926000
         AL    @06,@CF01764                                        1275 03927000
         MVC   LOWCUA(2),SHRCUABL-6(@06)                           1275 03928000
*              HIGHCUA=SHRCUABH(I);    /*GET HIGH END OF CONTROLLER   * 03929000
         AL    @15,@TF00001                                        1276 03930000
         AL    @15,@CF01765                                        1276 03931000
         MVC   HIGHCUA(2),SHRCUABH-8(@15)                          1276 03932000
*              VALIDSHR=ON;                                /*@D3506GB*/ 03933000
         OI    VALIDSHR,B'10000000'                                1277 03934000
*            END;                                          /*@D3506GB*/ 03935000
*        ELSE;                         /*CUA NOT IN RANGE    @D3506GB*/ 03936000
@RF01266 DS    0H                                                  1280 03937000
*      ELSE;                           /*CPU IS DIFFERENT    @D3506GB*/ 03938000
@RF01265 DS    0H                                                  1281 03939000
*    ELSE;                             /*SHARE ENTRY         @D3506GB*/ 03940000
@RF01264 DS    0H                                                  1282 03941000
*   END;                                                   /*@D3506GB*/ 03942000
@RC01264 LA    @06,1                                               1282 03943000
         AH    @06,I                                               1282 03944000
         STH   @06,I                                               1282 03945000
@DE01263 L     @01,SHAREPTR(,R2)                                   1282 03946000
         CH    @06,SHARENUM(,@01)                                  1282 03947000
         BNH   @DL01263                                            1282 03948000
@DC01263 DS    0H                                                  1283 03949000
*  IF VALIDSHR=OFF THEN                /* CONTROLLER ENTRY MISSING    * 03950000
@RF01262 TM    VALIDSHR,B'10000000'                                1283 03951000
         BNZ   @RF01283                                            1283 03952000
*    DO;                                                   /*@D3506GB*/ 03953000
*      LOWCUA=RECCUA&ZFFZ;             /* 0 LAST FOUR BITS   @D3506GB*/ 03954000
         MVC   LOWCUA(2),RECCUA                                    1285 03955000
         NC    LOWCUA(2),@CB00475                                  1285 03956000
*      HIGHCUA=RECCUA|ZZZF;            /* SET LAST FOUR BITS TO 1     * 03957000
         MVC   HIGHCUA(2),RECCUA                                   1286 03958000
         OC    HIGHCUA(2),@CB00473                                 1286 03959000
*      DO I = 1 TO SHARENUM BY 1;                          /*@D3506GB*/ 03960000
         LA    @06,1                                               1287 03961000
         STH   @06,I                                               1287 03962000
         B     @DE01287                                            1287 03963000
@DL01287 DS    0H                                                  1288 03964000
*         J = SHARENUM - I + ONE;   /*INDEX OF TABLE FROM BOTTOM*/ 1288 03965000
         LA    @15,1                                               1288 03966000
         L     @14,SHAREPTR(,R2)                                   1288 03967000
         LH    @09,SHARENUM(,@14)                                  1288 03968000
         SLR   @09,@06                                             1288 03969000
         ALR   @09,@15                                             1288 03970000
         STH   @09,J                                               1288 03971000
*         IF SHAREFLG(I) = LETTERC & RECCPU = SHARSERB(I) THEN     1289 03972000
         SLA   @06,4                                               1289 03973000
         ST    @06,@TF00001                                        1289 03974000
         ALR   @06,@14                                             1289 03975000
         AL    @06,@CF01762                                        1289 03976000
         CLC   SHAREFLG-2(1,@06),LETTERC                           1289 03977000
         BNE   @RF01289                                            1289 03978000
         LR    @06,@14                                             1289 03979000
         AL    @06,@TF00001                                        1289 03980000
         AL    @06,@CF01772                                        1289 03981000
         CLC   RECCPU(3),SHARSERB-3(@06)                           1289 03982000
         BNE   @RF01289                                            1289 03983000
*            IF LOWCUA >= SHRCUABL(I)&LOWCUA<=SHRCUABH(I) THEN     1290 03984000
         LR    @06,@14                                             1290 03985000
         AL    @06,@TF00001                                        1290 03986000
         AL    @06,@CF01764                                        1290 03987000
         CLC   LOWCUA(2),SHRCUABL-6(@06)                           1290 03988000
         BL    @RF01290                                            1290 03989000
         LR    @06,@14                                             1290 03990000
         AL    @06,@TF00001                                        1290 03991000
         AL    @06,@CF01765                                        1290 03992000
         CLC   LOWCUA(2),SHRCUABH-8(@06)                           1290 03993000
         BH    @RF01290                                            1290 03994000
*               LOWCUA = SHRCUABH(I) + HONE;               /*@D3506GB*/ 03995000
         AL    @14,@TF00001                                        1291 03996000
         AL    @14,@CF01765                                        1291 03997000
         SLR   @06,@06                                             1291 03998000
         ICM   @06,3,SHRCUABH-8(@14)                               1291 03999000
         ALR   @15,@06                                             1291 04000000
         STCM  @15,3,LOWCUA                                        1291 04001000
*            ELSE;                                         /*@D3506GB*/ 04002000
@RF01290 DS    0H                                                  1293 04003000
*         ELSE;                                            /*@D3506GB*/ 04004000
@RF01289 DS    0H                                                  1294 04005000
*         IF SHAREFLG(J) = LETTERC & RECCPU = SHARSERB(J) THEN     1294 04006000
         LH    @06,J                                               1294 04007000
         SLA   @06,4                                               1294 04008000
         L     @15,SHAREPTR(,R2)                                   1294 04009000
         ST    @06,@TF00001                                        1294 04010000
         ALR   @06,@15                                             1294 04011000
         AL    @06,@CF01762                                        1294 04012000
         CLC   SHAREFLG-2(1,@06),LETTERC                           1294 04013000
         BNE   @RF01294                                            1294 04014000
         LR    @06,@15                                             1294 04015000
         AL    @06,@TF00001                                        1294 04016000
         AL    @06,@CF01772                                        1294 04017000
         CLC   RECCPU(3),SHARSERB-3(@06)                           1294 04018000
         BNE   @RF01294                                            1294 04019000
*            IF HIGHCUA>= SHRCUABL(J)&HIGHCUA<=SHRCUABH(J) THEN    1295 04020000
         LR    @06,@15                                             1295 04021000
         AL    @06,@TF00001                                        1295 04022000
         AL    @06,@CF01764                                        1295 04023000
         CLC   HIGHCUA(2),SHRCUABL-6(@06)                          1295 04024000
         BL    @RF01295                                            1295 04025000
         LR    @06,@15                                             1295 04026000
         AL    @06,@TF00001                                        1295 04027000
         AL    @06,@CF01765                                        1295 04028000
         CLC   HIGHCUA(2),SHRCUABH-8(@06)                          1295 04029000
         BH    @RF01295                                            1295 04030000
*               HIGHCUA = SHRCUABL(J) - HONE;              /*@D3506GB*/ 04031000
         AL    @15,@TF00001                                        1296 04032000
         AL    @15,@CF01764                                        1296 04033000
         SLR   @06,@06                                             1296 04034000
         ICM   @06,3,SHRCUABL-6(@15)                               1296 04035000
         BCTR  @06,0                                               1296 04036000
         STCM  @06,3,HIGHCUA                                       1296 04037000
*            ELSE;                                         /*@D3506GB*/ 04038000
@RF01295 DS    0H                                                  1298 04039000
*         ELSE;                                            /*@D3506GB*/ 04040000
@RF01294 DS    0H                                                  1299 04041000
*      END;                                                /*@D3506GB*/ 04042000
         LA    @06,1                                               1299 04043000
         AH    @06,I                                               1299 04044000
         STH   @06,I                                               1299 04045000
@DE01287 L     @01,SHAREPTR(,R2)                                   1299 04046000
         CH    @06,SHARENUM(,@01)                                  1299 04047000
         BNH   @DL01287                                            1299 04048000
*    END;                                                  /*@D3506GB*/ 04049000
*  ELSE;                               /* CONTROLLER ENTRY FOUND      * 04050000
@RF01283 DS    0H                                                  1302 04051000
*END CONVCNTR;                                             /*@D3506GB*/ 04052000
@EL00027 DS    0H                                                  1302 04053000
@EF00027 DS    0H                                                  1302 04054000
@ER00027 LM    @14,@12,12(@13)                                     1302 04055000
         BR    @14                                                 1302 04056000
*/********************************************************************* 04057000
*/* THIS PROC WILL SORT THE SHARE/CONTROL TABLE BASED ON THE BASE     * 04058000
*/* CPU/CUA.                                                 @D3506GB*/ 04059000
*/********************************************************************* 04060000
*SORTSHAR: PROC;                                           /*@D3506GB*/ 04061000
SORTSHAR STM   @14,@12,12(@13)                                     1303 04062000
*  DO J = 1 BY 1 TO SHARENUM - 1;                          /*@D3506GB*/ 04063000
         LA    @06,1                                               1304 04064000
         STH   @06,J                                               1304 04065000
         B     @DE01304                                            1304 04066000
@DL01304 DS    0H                                                  1305 04067000
*     DO K = J + 1 BY 1 TO SHARENUM;                       /*@D3506GB*/ 04068000
         AL    @06,@CF00057                                        1305 04069000
         STH   @06,K                                               1305 04070000
         B     @DE01305                                            1305 04071000
@DL01305 DS    0H                                                  1306 04072000
*        IF SHRBASE(J) > SHRBASE(K) THEN                           1306 04073000
         LH    @15,J                                               1306 04074000
         SLA   @15,4                                               1306 04075000
         L     @14,SHAREPTR(,R2)                                   1306 04076000
         SLA   @06,4                                               1306 04077000
         ST    @15,@TF00001                                        1306 04078000
         ALR   @15,@14                                             1306 04079000
         AL    @15,@CF01772                                        1306 04080000
         ST    @06,@TF00002                                        1306 04081000
         ALR   @06,@14                                             1306 04082000
         AL    @06,@CF01772                                        1306 04083000
         CLC   SHRBASE-3(7,@15),SHRBASE-3(@06)                     1306 04084000
         BNH   @RF01306                                            1306 04085000
*           DO;                                            /*@D3506GB*/ 04086000
*              SHAREIO(J)=(SHAREIO(J)&&SHAREIO(K));        /*@D3506GB*/ 04087000
         LR    @06,@14                                             1308 04088000
         AL    @06,@TF00001                                        1308 04089000
         AL    @06,@CF01762                                        1308 04090000
         LR    @15,@14                                             1308 04091000
         AL    @15,@TF00001                                        1308 04092000
         AL    @15,@CF01762                                        1308 04093000
         MVC   @TS00001(16),SHAREIO-2(@15)                         1308 04094000
         LR    @15,@14                                             1308 04095000
         AL    @15,@TF00002                                        1308 04096000
         AL    @15,@CF01762                                        1308 04097000
         XC    @TS00001(16),SHAREIO-2(@15)                         1308 04098000
         MVC   SHAREIO-2(16,@06),@TS00001                          1308 04099000
*              SHAREIO(K)=(SHAREIO(K)&&SHAREIO(J));        /*@D3506GB*/ 04100000
         LR    @06,@14                                             1309 04101000
         AL    @06,@TF00002                                        1309 04102000
         AL    @06,@CF01762                                        1309 04103000
         LR    @15,@14                                             1309 04104000
         AL    @15,@TF00002                                        1309 04105000
         AL    @15,@CF01762                                        1309 04106000
         MVC   @TS00001(16),SHAREIO-2(@15)                         1309 04107000
         LR    @15,@14                                             1309 04108000
         AL    @15,@TF00001                                        1309 04109000
         AL    @15,@CF01762                                        1309 04110000
         XC    @TS00001(16),SHAREIO-2(@15)                         1309 04111000
         MVC   SHAREIO-2(16,@06),@TS00001                          1309 04112000
*              SHAREIO(J)=(SHAREIO(J)&&SHAREIO(K));        /*@D3506GB*/ 04113000
         LR    @06,@14                                             1310 04114000
         AL    @06,@TF00001                                        1310 04115000
         AL    @06,@CF01762                                        1310 04116000
         LR    @15,@14                                             1310 04117000
         AL    @15,@TF00001                                        1310 04118000
         AL    @15,@CF01762                                        1310 04119000
         MVC   @TS00001(16),SHAREIO-2(@15)                         1310 04120000
         AL    @14,@TF00002                                        1310 04121000
         AL    @14,@CF01762                                        1310 04122000
         XC    @TS00001(16),SHAREIO-2(@14)                         1310 04123000
         MVC   SHAREIO-2(16,@06),@TS00001                          1310 04124000
*           END;                                           /*@D3506GB*/ 04125000
*        ELSE;                                             /*@D3506GB*/ 04126000
@RF01306 DS    0H                                                  1313 04127000
*     END;                                                 /*@D3506GB*/ 04128000
         LA    @06,1                                               1313 04129000
         AH    @06,K                                               1313 04130000
         STH   @06,K                                               1313 04131000
@DE01305 L     @01,SHAREPTR(,R2)                                   1313 04132000
         CH    @06,SHARENUM(,@01)                                  1313 04133000
         BNH   @DL01305                                            1313 04134000
*  END;                                                    /*@D3506GB*/ 04135000
         LA    @06,1                                               1314 04136000
         AH    @06,J                                               1314 04137000
         STH   @06,J                                               1314 04138000
@DE01304 L     @01,SHAREPTR(,R2)                                   1314 04139000
         LH    @15,SHARENUM(,@01)                                  1314 04140000
         BCTR  @15,0                                               1314 04141000
         CR    @06,@15                                             1314 04142000
         BNH   @DL01304                                            1314 04143000
*END SORTSHAR;                                             /*@D3506GB*/ 04144000
@EL00028 DS    0H                                                  1315 04145000
@EF00028 DS    0H                                                  1315 04146000
@ER00028 LM    @14,@12,12(@13)                                     1315 04147000
         BR    @14                                                 1315 04148000
*/*                                                          @0001VLS*/ 04149000
*/*****************************************************************/    04150000
*/*    THIS PROC WILL HEX DUMP THE SORT TABLE ENTRIES ONE/LINE    */    04151000
*DUMP: PROC;                                               /*@0001VLS*/ 04152000
DUMP     STM   @14,@12,@SA00029                                    1316 04153000
* MSGDS = CHARS(2);              /* TOURIST DATA SET OUTPUT  @0001VLS*/ 04154000
         MVC   MSGDS(1),CHARS+1                                    1317 04155000
* MSGADDR = BUG8;                                          /*@0001VLS*/ 04156000
         MVI   MSGADDR+33,C' '                                     1318 04157000
         MVC   MSGADDR+34(98),MSGADDR+33                           1318 04158000
         MVC   MSGADDR(33),BUG8                                    1318 04159000
* CALL PRINTIT;                                            /*@0001VLS*/ 04160000
         BAL   @14,PRINTIT                                         1319 04161000
* DO Z = ONE BY ONE TO SORTNUM;                            /*@0001VLS*/ 04162000
         LA    @06,1                                               1320 04163000
         ST    @06,Z                                               1320 04164000
         B     @DE01320                                            1320 04165000
@DL01320 DS    0H                                                  1321 04166000
*  CALL CONVERT(SORTTAB(Z),MSGADDR,TWELVE);                /*@0001VLS*/ 04167000
         MVC   @AL00001+4(8),@AL01321                              1321 04168000
         MH    @06,@CH00033                                        1321 04169000
         L     @01,SORTADR(,R2)                                    1321 04170000
         AL    @01,@CF01763                                        1321 04171000
         LA    @06,SORTTAB(@06,@01)                                1321 04172000
         ST    @06,@AL00001                                        1321 04173000
         LA    @01,@AL00001                                        1321 04174000
         BAL   @14,CONVERT                                         1321 04175000
*  CALL PRINTIT;                 /*PRINT THIS ENTRY OF THE SORT TABLE*/ 04176000
         BAL   @14,PRINTIT                                         1322 04177000
* END;                                                     /*@0001VLS*/ 04178000
         LA    @06,1                                               1323 04179000
         AL    @06,Z                                               1323 04180000
         ST    @06,Z                                               1323 04181000
@DE01320 C     @06,SORTNUM(,R2)                                    1323 04182000
         BNH   @DL01320                                            1323 04183000
*END;                                                      /*@0001VLS*/ 04184000
@EL00029 DS    0H                                                  1324 04185000
@EF00029 DS    0H                                                  1324 04186000
@ER00029 LM    @14,@12,@SA00029                                    1324 04187000
         BR    @14                                                 1324 04188000
*CONVBIN1: PROC(BWORD1,DADDR1);                            /*@0001VLS*/ 04189000
CONVBIN1 STM   @14,@12,@SA00030                                    1325 04190000
         MVC   @PC00030(8),0(@01)                                  1325 04191000
* DCL  BWORD1 FIXED(8);                                    /*@0001VLS*/ 04192000
* DCL  DADDR1 CHAR(20);                                    /*@0001VLS*/ 04193000
* L = BWORD1;                                              /*@0001VLS*/ 04194000
         L     @06,@PC00030                                        1328 04195000
         SLR   @15,@15                                             1328 04196000
         IC    @15,BWORD1(,@06)                                    1328 04197000
         ST    @15,L                                               1328 04198000
* CALL CONVBIN(L,DADDR1);                                  /*@0001VLS*/ 04199000
         LA    @06,L                                               1329 04200000
         ST    @06,@AL00001                                        1329 04201000
         L     @06,@PC00030+4                                      1329 04202000
         ST    @06,@AL00001+4                                      1329 04203000
         LA    @01,@AL00001                                        1329 04204000
         BAL   @14,CONVBIN                                         1329 04205000
*END;                                                      /*@0001VLS*/ 04206000
@EL00030 DS    0H                                                  1330 04207000
@EF00030 DS    0H                                                  1330 04208000
@ER00030 LM    @14,@12,@SA00030                                    1330 04209000
         BR    @14                                                 1330 04210000
*CONVBIN2: PROC(BWORD2,DADDR2);                            /*@0001VLS*/ 04211000
CONVBIN2 STM   @14,@12,@SA00031                                    1331 04212000
         MVC   @PC00031(8),0(@01)                                  1331 04213000
* DCL  BWORD2 FIXED(15);                                   /*@0001VLS*/ 04214000
* DCL  DADDR2 CHAR(20);                                    /*@0001VLS*/ 04215000
* L = BWORD2;                                              /*@0001VLS*/ 04216000
         L     @06,@PC00031                                        1334 04217000
         LH    @06,BWORD2(,@06)                                    1334 04218000
         ST    @06,L                                               1334 04219000
* CALL CONVBIN(L,DADDR2);                                  /*@0001VLS*/ 04220000
         LA    @06,L                                               1335 04221000
         ST    @06,@AL00001                                        1335 04222000
         L     @06,@PC00031+4                                      1335 04223000
         ST    @06,@AL00001+4                                      1335 04224000
         LA    @01,@AL00001                                        1335 04225000
         BAL   @14,CONVBIN                                         1335 04226000
*END;                                                      /*@0001VLS*/ 04227000
@EL00031 DS    0H                                                  1336 04228000
@EF00031 DS    0H                                                  1336 04229000
@ER00031 LM    @14,@12,@SA00031                                    1336 04230000
         BR    @14                                                 1336 04231000
*CONVBIN3: PROC(BWORD3,DADDR3);                            /*@0001VLS*/ 04232000
CONVBIN3 STM   @14,@12,12(@13)                                     1337 04233000
         MVC   @PC00032(8),0(@01)                                  1337 04234000
* DCL  BWORD3 FIXED(32) UNSIGNED;                          /*@0001VLS*/ 04235000
* DCL  DADDR3 CHAR(20);                                    /*@0001VLS*/ 04236000
* CVD(BWORD3,DBLWORD);                                     /*@0001VLS*/ 04237000
         L     @06,@PC00032                                        1340 04238000
         L     @06,BWORD3(,@06)                                    1340 04239000
         CVD   @06,DBLWORD                                         1340 04240000
* UNPK(WORK(1:8),DBLWORD);                                 /*@0001VLS*/ 04241000
         UNPK  WORK(8),DBLWORD(8)                                  1341 04242000
* WORK(8) = WORK(8) | FOXZERO;                             /*@0001VLS*/ 04243000
         OI    WORK+7,X'F0'                                        1342 04244000
* SWITCH1 = OFF;                                           /*@0001VLS*/ 04245000
         NI    SWITCH1,B'10111111'                                 1343 04246000
* DO L = 1 BY 1 TO 7 WHILE(SWITCH1 = OFF);                 /*@0001VLS*/ 04247000
         LA    @06,1                                               1344 04248000
         ST    @06,L                                               1344 04249000
@DL01344 TM    SWITCH1,B'01000000'                                 1344 04250000
         BNZ   @DC01344                                            1344 04251000
*  IF WORKOVER(L) = FOXZERO THEN /*REMOVE THE LEADING ZEROS  @0001VLS*/ 04252000
         LA    @01,WORKOVER-1(@06)                                 1345 04253000
         CLI   0(@01),X'F0'                                        1345 04254000
         BNE   @RF01345                                            1345 04255000
*    WORKOVER(L) = BLANK;        /*REPLACE WITH A BLANK CHARACTER*/     04256000
         LA    @01,WORKOVER-1(@06)                                 1346 04257000
         MVI   0(@01),C' '                                         1346 04258000
*   ELSE                                                           1347 04259000
*    SWITCH1 = ON;               /*TELL LOOP THE END OF LEADING ZEROS*/ 04260000
         B     @RC01345                                            1347 04261000
@RF01345 OI    SWITCH1,B'01000000'                                 1347 04262000
* END;                                                     /*@0001VLS*/ 04263000
@RC01345 LA    @06,1                                               1348 04264000
         AL    @06,L                                               1348 04265000
         ST    @06,L                                               1348 04266000
         C     @06,@CF00082                                        1348 04267000
         BNH   @DL01344                                            1348 04268000
@DC01344 DS    0H                                                  1349 04269000
* DADDR3(1:8) = WORK(1:8);       /* MOVE THE DATA TO THE OUTPUT LINE */ 04270000
         L     @06,@PC00032+4                                      1349 04271000
         MVC   DADDR3(8,@06),WORK                                  1349 04272000
*END;                                                      /*@0001VLS*/ 04273000
@EL00032 DS    0H                                                  1350 04274000
@EF00032 DS    0H                                                  1350 04275000
@ER00032 LM    @14,@12,12(@13)                                     1350 04276000
         BR    @14                                                 1350 04277000
*CONVBIN: PROC(BINWORD,DECADDR);                           /*@0001VLS*/ 04278000
CONVBIN  STM   @14,@12,12(@13)                                     1351 04279000
         MVC   @PC00033(8),0(@01)                                  1351 04280000
* DCL  BINWORD FIXED(31);                                  /*@0001VLS*/ 04281000
* DCL  DECADDR CHAR(20);                                   /*@0001VLS*/ 04282000
* RESPECIFY (R8) RESTRICTED;                               /*@0001VLS*/ 04283000
* R8 = BINWORD;                  /*LOAD THE ITEM TO CONVERT  @0001VLS*/ 04284000
         L     @06,@PC00033                                        1355 04285000
         L     R8,BINWORD(,@06)                                    1355 04286000
* CVD(R8,DBLWORD);                                         /*@0001VLS*/ 04287000
         CVD   R8,DBLWORD                                          1356 04288000
* UNPK(WORK(1:8),DBLWORD);                                 /*@0001VLS*/ 04289000
         UNPK  WORK(8),DBLWORD(8)                                  1357 04290000
* WORK(8) = WORK(8) | FOXZERO;                             /*@0001VLS*/ 04291000
         OI    WORK+7,X'F0'                                        1358 04292000
* SWITCH1 = OFF;                                           /*@0001VLS*/ 04293000
         NI    SWITCH1,B'10111111'                                 1359 04294000
* DO L = 1 BY 1 TO 7 WHILE(SWITCH1 = OFF);                 /*@0001VLS*/ 04295000
         LA    @09,1                                               1360 04296000
         ST    @09,L                                               1360 04297000
@DL01360 TM    SWITCH1,B'01000000'                                 1360 04298000
         BNZ   @DC01360                                            1360 04299000
*  IF WORKOVER(L) = FOXZERO THEN /*REMOVE THE LEADING ZEROS  @0001VLS*/ 04300000
         LA    @06,WORKOVER-1(@09)                                 1361 04301000
         CLI   0(@06),X'F0'                                        1361 04302000
         BNE   @RF01361                                            1361 04303000
*    WORKOVER(L) = BLANK;        /*REPLACE WITH A BLANK CHARACTER*/     04304000
         LA    @06,WORKOVER-1(@09)                                 1362 04305000
         MVI   0(@06),C' '                                         1362 04306000
*   ELSE                                                           1363 04307000
*    SWITCH1 = ON;               /*TELL LOOP THE END OF LEADING ZEROS*/ 04308000
         B     @RC01361                                            1363 04309000
@RF01361 OI    SWITCH1,B'01000000'                                 1363 04310000
* END;                                                     /*@0001VLS*/ 04311000
@RC01361 LA    @09,1                                               1364 04312000
         AL    @09,L                                               1364 04313000
         ST    @09,L                                               1364 04314000
         C     @09,@CF00082                                        1364 04315000
         BNH   @DL01360                                            1364 04316000
@DC01360 DS    0H                                                  1365 04317000
* DECADDR(1:5) = WORK(4:8);      /* MOVE THE DATA TO THE OUTPUT LINE */ 04318000
         L     @09,@PC00033+4                                      1365 04319000
         MVC   DECADDR(5,@09),WORK+3                               1365 04320000
* RESPECIFY (R8) UNRESTRICTED;                             /*@0001VLS*/ 04321000
*END;                                                      /*@0001VLS*/ 04322000
@EL00033 DS    0H                                                  1367 04323000
@EF00033 DS    0H                                                  1367 04324000
@ER00033 LM    @14,@12,12(@13)                                     1367 04325000
         BR    @14                                                 1367 04326000
*PRINTIT: PROC;                /*SET UP LINKAGE FOR I/O TO PRINT LINE*/ 04327000
PRINTIT  STM   @14,@12,@SA00034                                    1368 04328000
* IF DEBUG27 = OFF THEN                                            1369 04329000
         TM    DEBUG27(R2),B'00010000'                             1369 04330000
         BNZ   @RF01369                                            1369 04331000
*   DO;                                  /*                  @D3503SG*/ 04332000
*     PRINTADR = ADDR(MESSAGE);     /*TELL I/O ADDRESS OF OUT BUFFER*/  04333000
         LA    @06,MESSAGE                                         1371 04334000
         ST    @06,PRINTADR(,R2)                                   1371 04335000
*     CALL IOHND(RITEPRTR);    /*PASS CONTROL TO I/O TO PRINT MESSAGE*/ 04336000
         L     @15,ADIOHND(,R2)                                    1372 04337000
         LA    @01,@AL01372                                        1372 04338000
         BALR  @14,@15                                             1372 04339000
*   END;                                 /*                  @D3503SG*/ 04340000
*END;                                                      /*@0001VLS*/ 04341000
@EL00034 DS    0H                                                  1374 04342000
@EF00034 DS    0H                                                  1374 04343000
@ER00034 LM    @14,@12,@SA00034                                    1374 04344000
         BR    @14                                                 1374 04345000
* /*                                                         @0001VLS*/ 04346000
* /* CONVERT CHARACTERS TO PRINTABLE                         @0001VLS*/ 04347000
* /*                                                         @0001VLS*/ 04348000
*CONVERT: PROC(NEXTBYTE,ADDNUM,LENNUM);                    /*@0001VLS*/ 04349000
CONVERT  STM   @14,@12,12(@13)                                     1375 04350000
         MVC   @PC00035(12),0(@01)                                 1375 04351000
* DCL NEXTBYTE  CHAR(11);                                  /*@0001VLS*/ 04352000
* DCL ADDNUM    CHAR(133);                                 /*@0001VLS*/ 04353000
* DCL LENNUM    FIXED(31);        /* HOW MUCH TO CONVERT     @0001VLS*/ 04354000
* RESPECIFY (R8,R9) RESTRICTED;                            /*@0001VLS*/ 04355000
* DO P = LENNUM BY -1 TO ONE;                              /*@0001VLS*/ 04356000
         L     @06,@PC00035+8                                      1380 04357000
         L     @06,LENNUM(,@06)                                    1380 04358000
         ST    @06,P                                               1380 04359000
         B     @DE01380                                            1380 04360000
@DL01380 DS    0H                                                  1381 04361000
*  R8 = NEXTBYTE(P);              /* LOAD THE NEXT BYTE      @0001VLS*/ 04362000
         L     @15,@PC00035                                        1381 04363000
         BCTR  @15,0                                               1381 04364000
         SLR   R8,R8                                               1381 04365000
         IC    R8,NEXTBYTE(@06,@15)                                1381 04366000
*  X = TWO * P;                   /* INDEX FOR STORING CONVERTED 1/2 */ 04367000
         LR    @15,@06                                             1382 04368000
         ALR   @15,@15                                             1382 04369000
         ST    @15,X                                               1382 04370000
*                                 /* BYTE.  INPUT IS 2 CHARS @0001VLS*/ 04371000
*  SRDL(R8,FOUR);                 /* SPLIT THE BYTE IN HALF  @0001VLS*/ 04372000
         SRDL  R8,4                                                1383 04373000
*  SRL(R9,28);                    /* RIGHT JUSTIFY SPLIT HALF BYTE   */ 04374000
         SRL   R9,28                                               1384 04375000
*  R9 = R9 + ONE;                                          /*@0001VLS*/ 04376000
         LA    @14,1                                               1385 04377000
         ALR   R9,@14                                              1385 04378000
*  R8 = R8 + ONE;                                          /*@0001VLS*/ 04379000
         ALR   R8,@14                                              1386 04380000
*  ADDNUM(X-ONE) = CHARS(R8);     /* CHARS IS 16 CHAR STRING FOR     */ 04381000
         L     @14,@PC00035+4                                      1387 04382000
         ALR   @15,@14                                             1387 04383000
         BCTR  @15,0                                               1387 04384000
         BCTR  @15,0                                               1387 04385000
         LA    @01,CHARS-1(R8)                                     1387 04386000
         MVC   ADDNUM(1,@15),0(@01)                                1387 04387000
*  ADDNUM(X)     = CHARS(R9);     /* CONVERTINAG HEX NUMS TO PRINT   */ 04388000
         L     @15,X                                               1388 04389000
         ALR   @14,@15                                             1388 04390000
         BCTR  @14,0                                               1388 04391000
         LA    @15,CHARS-1(R9)                                     1388 04392000
         MVC   ADDNUM(1,@14),0(@15)                                1388 04393000
* END;                                                     /*@0001VLS*/ 04394000
         BCTR  @06,0                                               1389 04395000
         ST    @06,P                                               1389 04396000
@DE01380 LTR   @06,@06                                             1389 04397000
         BP    @DL01380                                            1389 04398000
*END;                                                      /*@0001VLS*/ 04399000
@EL00035 DS    0H                                                  1390 04400000
@EF00035 DS    0H                                                  1390 04401000
@ER00035 LM    @14,@12,12(@13)                                     1390 04402000
         BR    @14                                                 1390 04403000
*RESPECIFY (R8,R9) UNRESTRICTED;                           /*@0001VLS*/ 04404000
* /*                                                         @0001VLS*/ 04405000
* /* CALCULATE THE PERCENTAGE FOR THE TEMPORARY SUMMARY      @0001VLS*/ 04406000
* /*                                                         @0001VLS*/ 04407000
*CALCPERC: PROC(DIVEND,DIVSOR,OUTLOC);                     /*@0001VLS*/ 04408000
CALCPERC STM   @14,@12,@SA00036                                    1392 04409000
         MVC   @PC00036(12),0(@01)                                 1392 04410000
* DCL DIVEND    FIXED(31);        /* DIVIDEND                @0001VLS*/ 04411000
* DCL DIVSOR    FIXED(32) UNSIGNED;  /* DIVISOR              @0001VLS*/ 04412000
* DCL OUTLOC    CHAR(5);          /* OUTPUT LOCATION         @0001VLS*/ 04413000
* /* Z = (DIVEND * 200000 * 100) / DIVSOR                    @0001VLS*/ 04414000
* RESPECIFY (R8,R9) RESTRICTED;                            /*@0001VLS*/ 04415000
* R8 = ZERO;                      /* CLEAR HIGH ORDER PART OF REGS   */ 04416000
         SLR   R8,R8                                               1397 04417000
* R9 = DIVEND;                    /* MULTIPLICAND            @0001VLS*/ 04418000
         L     @06,@PC00036                                        1398 04419000
         L     R9,DIVEND(,@06)                                     1398 04420000
* R7 = 10000000;                  /* MULTIPLIER              @ZA34987*/ 04421000
         L     R7,@CF01690                                         1399 04422000
* GEN (MR R8,R7);                 /* PRODUCT/DIVIDEND        @0001VLS*/ 04423000
         MR R8,R7                                                       04424000
* R7 = DIVSOR;                    /* DIVISOR                 @0001VLS*/ 04425000
         L     @15,@PC00036+4                                      1401 04426000
         L     R7,DIVSOR(,@15)                                     1401 04427000
* GEN (DR R8,R7);                                          /*@0001VLS*/ 04428000
         DR R8,R7                                                       04429000
* Z = R9;                         /* QUOTIENT                @0001VLS*/ 04430000
         ST    R9,Z                                                1403 04431000
* RESPECIFY (R8,R9) UNRESTRICTED;                          /*@0001VLS*/ 04432000
* IF Z >= 10000 THEN                                               1405 04433000
         L     @06,Z                                               1405 04434000
         C     @06,@CF01691                                        1405 04435000
         BL    @RF01405                                            1405 04436000
*   OUTLOC = HUNDPLUS;            /* OVER 100 PERCENT        @0001VLS*/ 04437000
         L     @06,@PC00036+8                                      1406 04438000
         MVC   OUTLOC(5,@06),@CC00520                              1406 04439000
* ELSE                                                             1407 04440000
*   DO;                                                    /*@0001VLS*/ 04441000
         B     @RC01405                                            1407 04442000
@RF01405 DS    0H                                                  1408 04443000
*     CVD (Z,DBLWORD);                                     /*@0001VLS*/ 04444000
         L     @06,Z                                               1408 04445000
         CVD   @06,DBLWORD                                         1408 04446000
*     UNPK (TEMPAREA(1:8),DBLWORD);                        /*@0001VLS*/ 04447000
         UNPK  TEMPAREA(8),DBLWORD(8)                              1409 04448000
*     TEMPAREA(8) = TEMPAREA(8) | FOXZERO;                 /*@0001VLS*/ 04449000
         OI    TEMPAREA+7,X'F0'                                    1410 04450000
*     IF TEMPAREA(5) = FOXZERO THEN                                1411 04451000
         CLI   TEMPAREA+4,X'F0'                                    1411 04452000
         BNE   @RF01411                                            1411 04453000
*       TEMPAREA(5) = BLANK;        /* CHANGE LEADING ZERO TO BLANK  */ 04454000
         MVI   TEMPAREA+4,C' '                                     1412 04455000
*     OUTLOC(1:2) = TEMPAREA(5:6);  /* TENS AND UNITS DIGITS @0001VLS*/ 04456000
@RF01411 L     @06,@PC00036+8                                      1413 04457000
         MVC   OUTLOC(2,@06),TEMPAREA+4                            1413 04458000
*     OUTLOC(3) = PERIOD;                                  /*@0001VLS*/ 04459000
         MVI   OUTLOC+2(@06),C'.'                                  1414 04460000
*     OUTLOC(4:5) = TEMPAREA(7:8);  /* TENTHS AND HUNDREDTHS @0001VLS*/ 04461000
         MVC   OUTLOC+3(2,@06),TEMPAREA+6                          1415 04462000
*   END;                                                   /*@0001VLS*/ 04463000
* END CALCPERC;                                            /*@0001VLS*/ 04464000
@EL00036 DS    0H                                                  1417 04465000
@EF00036 DS    0H                                                  1417 04466000
@ER00036 LM    @14,@12,@SA00036                                    1417 04467000
         BR    @14                                                 1417 04468000
*/********************************************************************/ 04469000
*/*                                                          @D3503SG*/ 04470000
*/*  TEST INPUT DEVICE CODES. IS THIS DEVICE TO BE USED      @D3503SG*/ 04471000
*/*       IN THIS REPORT                                     @D3503SG*/ 04472000
*/*                                                          @D3503SG*/ 04473000
*/********************************************************************/ 04474000
*DEVCHK:  PROC;                        /*                    @D3503SG*/ 04475000
DEVCHK   STM   @14,@12,12(@13)                                     1418 04476000
*CHKCDE = OFF;                         /*                    @D3503SG*/ 04477000
         NI    CHKCDE,B'01111111'                                  1419 04478000
*IF POBR = ON & (RECTYP & FOXZERO) = OBRREC  THEN          /*@D3503SG*/ 04479000
         TM    POBR(R2),B'00100000'                                1420 04480000
         BNO   @RF01420                                            1420 04481000
         MVC   @TS00001(1),RECTYP(R7)                              1420 04482000
         NI    @TS00001,X'F0'                                      1420 04483000
         CLI   @TS00001,X'30'                                      1420 04484000
         BNE   @RF01420                                            1420 04485000
*  DO;                                   /*                  @D3503SG*/ 04486000
*    OBRCT = OBRCT + ONE;              /*COUNT OBR RECORDS   @D3503SG*/ 04487000
         LA    @06,1                                               1422 04488000
         AL    @06,OBRCT                                           1422 04489000
         ST    @06,OBRCT                                           1422 04490000
*    IF DEV2 = OBRDEV  THEN              /*8809 DEVICE ?     @D3503SG*/ 04491000
         CLC   DEV2(2,R7),@CB00547                                 1423 04492000
         BNE   @RF01423                                            1423 04493000
*      DEVCODE = SFOBR;                  /*YES-8809 OBR      @D3503SG*/ 04494000
         MVI   DEVCODE,X'01'                                       1424 04495000
*    ELSE                                /*                  @D3503SG*/ 04496000
*      DEVCODE = NONSF;                  /*N0-3410 OBR       @D3503SG*/ 04497000
         B     @RC01423                                            1425 04498000
@RF01423 MVI   DEVCODE,X'00'                                       1425 04499000
*    IF DEVPTR ¬= ZERO  THEN           /* ENTRIES IN TABLE ? @D3503SG*/ 04500000
@RC01423 L     @06,DEVPTR(,R2)                                     1426 04501000
         LTR   @06,@06                                             1426 04502000
         BZ    @RF01426                                            1426 04503000
*      DO I = 1 TO DEVNUM BY 1;        /* LOOP DEVICE TABLE  @D3503SG*/ 04504000
         LA    @06,1                                               1427 04505000
         STH   @06,I                                               1427 04506000
         B     @DE01427                                            1427 04507000
@DL01427 DS    0H                                                  1428 04508000
*        IF DEVVAL(I) = DEV2  THEN     /*OBR TYPE DEVICE?    @D3503SG*/ 04509000
         ALR   @06,@06                                             1428 04510000
         L     @01,DEVPTR(,R2)                                     1428 04511000
         ALR   @01,@06                                             1428 04512000
         CLC   DEVVAL-2(2,@01),DEV2(R7)                            1428 04513000
         BNE   @RF01428                                            1428 04514000
*          CHKCDE = ON;                  /*YES               @D3503SG*/ 04515000
         OI    CHKCDE,B'10000000'                                  1429 04516000
*      END;                           /*DO LOOP              @D3503SG*/ 04517000
@RF01428 LA    @06,1                                               1430 04518000
         AH    @06,I                                               1430 04519000
         STH   @06,I                                               1430 04520000
@DE01427 L     @01,DEVPTR(,R2)                                     1430 04521000
         CH    @06,DEVNUM(,@01)                                    1430 04522000
         BNH   @DL01427                                            1430 04523000
*    ELSE                             /*RECORD REQUESTED     @D3503SG*/ 04524000
*      CHKCDE = ON;                   /*NO DEVICES SPEC'D.   @D3503SG*/ 04525000
         B     @RC01426                                            1431 04526000
@RF01426 OI    CHKCDE,B'10000000'                                  1431 04527000
*  END;          /*END OBR DEVICE                            @D3503SG*/ 04528000
*ELSE                                                      /*@D3503SG*/ 04529000
*  DO;                                   /*                  @D3503SG*/ 04530000
         B     @RC01420                                            1433 04531000
@RF01420 DS    0H                                                  1434 04532000
*    IF PTTYP = ON & (RECTYP & FOXZERO) = MDRREC  THEN     /*@D3503SG*/ 04533000
         TM    PTTYP(R2),B'10000000'                               1434 04534000
         BNO   @RF01434                                            1434 04535000
         MVC   @TS00001(1),RECTYP(R7)                              1434 04536000
         NI    @TS00001,X'F0'                                      1434 04537000
         CLI   @TS00001,X'90'                                      1434 04538000
         BNE   @RF01434                                            1434 04539000
*      DO;                               /*                  @D3503SG*/ 04540000
*        DEVCODE = SFMDR;                /*SET MDR TYPE      @D3503SG*/ 04541000
         MVI   DEVCODE,X'02'                                       1436 04542000
*        IF DEVPTR ¬= ZERO  THEN         /*ANY ENTRIES ?     @D3503SG*/ 04543000
         L     @06,DEVPTR(,R2)                                     1437 04544000
         LTR   @06,@06                                             1437 04545000
         BZ    @RF01437                                            1437 04546000
*          DO I = 1 TO MDRNUM BY 1;      /*YES CHECK DEVICES @D3503SG*/ 04547000
         LA    @06,1                                               1438 04548000
         STH   @06,I                                               1438 04549000
         B     @DE01438                                            1438 04550000
@DL01438 DS    0H                                                  1439 04551000
*            IF MDRVAL(I) = SMDEV  THEN  /*MDR TYPE DEVICE?  @D3503SG*/ 04552000
         L     @01,DEVPTR(,R2)                                     1439 04553000
         ALR   @01,@06                                             1439 04554000
         CLC   MDRVAL-1(1,@01),SMDEV(R7)                           1439 04555000
         BNE   @RF01439                                            1439 04556000
*              CHKCDE = ON;              /*YES SET GOOD ONE  @D3503SG*/ 04557000
         OI    CHKCDE,B'10000000'                                  1440 04558000
*          END;                          /*                  @D3503SG*/ 04559000
@RF01439 LA    @06,1                                               1441 04560000
         AH    @06,I                                               1441 04561000
         STH   @06,I                                               1441 04562000
@DE01438 L     @01,DEVPTR(,R2)                                     1441 04563000
         CH    @06,MDRNUM(,@01)                                    1441 04564000
         BNH   @DL01438                                            1441 04565000
*        ELSE                            /*                  @D3503SG*/ 04566000
*          CHKCDE = ON;                  /*NO DEVICES SPEC'D @D3503SG*/ 04567000
         B     @RC01437                                            1442 04568000
@RF01437 OI    CHKCDE,B'10000000'                                  1442 04569000
*      END;        /*END MDR DEVICE                          @D3503SG*/ 04570000
*    ELSE                                /*                  @D3503SG*/ 04571000
*      BADREC = BADREC + ONE;     /*COUNT NON MDR/OBR RECORDS@D3503SG*/ 04572000
         B     @RC01434                                            1444 04573000
@RF01434 LA    @06,1                                               1444 04574000
         AL    @06,BADREC                                          1444 04575000
         ST    @06,BADREC                                          1444 04576000
*  END;       /*END MDR/OBR DEVICE                           @D3503SG*/ 04577000
*END DEVCHK;                             /*                  @D3503SG*/ 04578000
@EL00037 DS    0H                                                  1446 04579000
@EF00037 DS    0H                                                  1446 04580000
@ER00037 LM    @14,@12,12(@13)                                     1446 04581000
         BR    @14                                                 1446 04582000
*/* THE RECORD IS PASSED AGAINST THE FILTERING CRITERIA SET UP BY THE*/ 04583000
*/* PARAMETER ROUTINE.                                       @0001VLS*/ 04584000
*/*                                                          @0001VLS*/ 04585000
*FILTER: PROC;                                             /*@0001VLS*/ 04586000
FILTER   STM   @14,@12,@SA00038                                    1447 04587000
* DCL TEMPVOL CHAR(6);                   /*WORK VOLUME ID.   @D3503SG*/ 04588000
* DCL TEMPCUA CHAR(2);                   /*WORK CUA.#        @D3503SG*/ 04589000
*  TOTREC = TOTREC + ONE;         /* KEEP TRACK OF TOTAL RECORDS READ*/ 04590000
         LA    @06,1                                               1450 04591000
         AL    @06,TOTREC                                          1450 04592000
         ST    @06,TOTREC                                          1450 04593000
*  PASSFLAG = OFF;                /* ASSUME THE RECORD WILL FAIL     */ 04594000
         NI    PASSFLAG(R2),B'11111110'                            1451 04595000
*  CALL DEVCHK;            /*DEVICE USED BY THIS     @D3503SG*/    1452 04596000
         BAL   @14,DEVCHK                                          1452 04597000
*  IF CHKCDE = ON   THEN        /*REPORT ?           @D3503SG*/    1453 04598000
         TM    CHKCDE,B'10000000'                                  1453 04599000
         BNO   @RF01453                                            1453 04600000
*    DO;                                           /*@0001VLS*/    1454 04601000
*      IF SHORT = OFF THEN        /* IF SHORT RECORD, THEN DISCARD   */ 04602000
         TM    SHORT(R7),B'00100000'                               1455 04603000
         BNZ   @RF01455                                            1455 04604000
*        DO;                                               /*@0001VLS*/ 04605000
*          IF DATE >= STDATE &            /* IS DATE IN RANGE    */     04606000
*            DATE <= ENDDATE THEN                                  1457 04607000
         CLC   DATE(4,R7),STDATE(R2)                               1457 04608000
         BL    @RF01457                                            1457 04609000
         CLC   DATE(4,R7),ENDDATE(R2)                              1457 04610000
         BH    @RF01457                                            1457 04611000
*            DO;                                       /*@0001VLS*/     04612000
*              IF (TIME >= STTIME1 & TIME <= ENDTIME1) |           1459 04613000
*                 (TIME >= STTIME2 & TIME <= ENDTIME2)  THEN       1459 04614000
         CLC   TIME(4,R7),STTIME1(R2)                              1459 04615000
         BL    @GL00025                                            1459 04616000
         CLC   TIME(4,R7),ENDTIME1(R2)                             1459 04617000
         BNH   @RT01459                                            1459 04618000
@GL00025 CLC   TIME(4,R7),STTIME2(R2)                              1459 04619000
         BL    @RF01459                                            1459 04620000
         CLC   TIME(4,R7),ENDTIME2(R2)                             1459 04621000
         BH    @RF01459                                            1459 04622000
@RT01459 DS    0H                                                  1460 04623000
*                DO;                                   /*@0001VLS*/     04624000
*                  IF SHIFT3RD = ON &                              1461 04625000
*                     ((DATE = STDATE & TIME < STTIME1) |          1461 04626000
*                     (DATE = ENDDATE & TIME > ENDTIME2)) THEN     1461 04627000
         TM    SHIFT3RD(R2),B'00010000'                            1461 04628000
         BNO   @RF01461                                            1461 04629000
         CLC   DATE(4,R7),STDATE(R2)                               1461 04630000
         BNE   @GL00029                                            1461 04631000
         CLC   TIME(4,R7),STTIME1(R2)                              1461 04632000
         BL    @RT01461                                            1461 04633000
@GL00029 CLC   DATE(4,R7),ENDDATE(R2)                              1461 04634000
         BNE   @RF01461                                            1461 04635000
         CLC   TIME(4,R7),ENDTIME2(R2)                             1461 04636000
         BNH   @RF01461                                            1461 04637000
@RT01461 DS    0H                                                  1462 04638000
*                        DROP3RD = DROP3RD + ONE; /* NUM FAIL TIME  */  04639000
         LA    @06,1                                               1462 04640000
         AL    @06,DROP3RD                                         1462 04641000
         ST    @06,DROP3RD                                         1462 04642000
*                  ELSE                                            1463 04643000
*                        PASSFLAG = ON;       /* SET FLAG TO PASS RCD*/ 04644000
         B     @RC01461                                            1463 04645000
@RF01461 OI    PASSFLAG(R2),B'00000001'                            1463 04646000
*                END;                      /*@0001VLS*/            1464 04647000
*              ELSE                                                1465 04648000
*                BADTIME = BADTIME + ONE;     /* # OF REC OUT OF TIME*/ 04649000
         B     @RC01459                                            1465 04650000
@RF01459 LA    @06,1                                               1465 04651000
         AL    @06,BADTIME                                         1465 04652000
         ST    @06,BADTIME                                         1465 04653000
*            END;     /*DATE CHECK                           @0001VLS*/ 04654000
*          ELSE                                                    1467 04655000
*            BADDAY = BADDAY + ONE;       /* # OF REC FAILING DAY*/     04656000
         B     @RC01457                                            1467 04657000
@RF01457 LA    @06,1                                               1467 04658000
         AL    @06,BADDAY                                          1467 04659000
         ST    @06,BADDAY                                          1467 04660000
*        END;                                          /*@0001VLS*/     04661000
*      ELSE                                                        1469 04662000
*        NUMSHORT = NUMSHORT + ONE;     /* OBR WITH SHORT SW ON */ 1469 04663000
         B     @RC01455                                            1469 04664000
@RF01455 LA    @06,1                                               1469 04665000
         AL    @06,NUMSHORT                                        1469 04666000
         ST    @06,NUMSHORT                                        1469 04667000
*    END;                                                /*@0001VLS*/   04668000
*  ELSE                                                            1471 04669000
*    BADDEV = BADDEV + ONE;               /*NOT 80XX RECORD          */ 04670000
         B     @RC01453                                            1471 04671000
@RF01453 LA    @06,1                                               1471 04672000
         AL    @06,BADDEV                                          1471 04673000
         ST    @06,BADDEV                                          1471 04674000
*  VALIDCUA = OFF;                                         /*@0001VLS*/ 04675000
@RC01453 NI    VALIDCUA,B'10111111'                                1472 04676000
*  VALIDCPU = OFF;                                         /*@0001VLS*/ 04677000
*  VALIDSER = OFF;                                         /*@0001VLS*/ 04678000
         NI    VALIDCPU,B'11111100'                                1474 04679000
*  VALIDVOL = OFF;                                         /*@0001VLS*/ 04680000
         NI    VALIDVOL,B'11011111'                                1475 04681000
*  IF PASSFLAG = YES THEN                 /* ALLOW RECORD TO CONTINUE*/ 04682000
         TM    PASSFLAG(R2),B'00000001'                            1476 04683000
         BNO   @RF01476                                            1476 04684000
*    DO;                                                   /*@0001VLS*/ 04685000
*      IF (RECTYP & FOXZERO) = MDRREC  THEN   /* MDR RECORD  @D3503SG*/ 04686000
         MVC   @TS00001(1),RECTYP(R7)                              1478 04687000
         NI    @TS00001,X'F0'                                      1478 04688000
         CLI   @TS00001,X'90'                                      1478 04689000
         BNE   @RF01478                                            1478 04690000
*        DO;                             /*                  @D3503SG*/ 04691000
*          TEMPVOL = SMVOLID;            /*SAVE VOLUME ID.   @D3503SG*/ 04692000
         MVC   TEMPVOL(6),SMVOLID(R7)                              1480 04693000
*          TEMPCUA = SMCUA;              /*SAVE CUA #        @D3503SG*/ 04694000
         MVC   TEMPCUA(2),SMCUA(R7)                                1481 04695000
*        END;                            /*                  @D3503SG*/ 04696000
*      ELSE                              /*                  @D3503SG*/ 04697000
*        DO;                             /* OBR RECORD       @D3503SG*/ 04698000
         B     @RC01478                                            1483 04699000
@RF01478 DS    0H                                                  1484 04700000
*          TEMPVOL = VOLID;              /*SAVE VOLUME ID.   @D3503SG*/ 04701000
         MVC   TEMPVOL(6),VOLID(R7)                                1484 04702000
*          TEMPCUA = OCUA2;              /*SAVE CUA#         @D3503SG*/ 04703000
         MVC   TEMPCUA(2),OCUA2(R7)                                1485 04704000
*        END;                            /*                  @D3503SG*/ 04705000
*      /*                                                    @0001VLS*/ 04706000
*      /* THIS SECTION OF CODE COMPARES THE OBR JUST READ WITH THE   */ 04707000
*      /* PARAMETERS BUILT BY THE PARAM ROUTINE.             @0001VLS*/ 04708000
*      /* IF NO CUA WAS SPECIFIED, THE POINTER TO THE CUA TABLE WILL */ 04709000
*      /* BE ZERO.  IF IT IS NOT, THEN A MAXIMUM OF SIXTEEN SINGLE   */ 04710000
*      /* OR RANGE CUAS MUST BE COMPARED WITH THE CUA IN THE RECORD. */ 04711000
*      /*                                                    @0001VLS*/ 04712000
*      IF CUAPTR ¬= ZERO THEN               /* ARE ALL CUA'S WANTED  */ 04713000
@RC01478 L     @06,CUAPTR(,R2)                                     1487 04714000
         LTR   @06,@06                                             1487 04715000
         BZ    @RF01487                                            1487 04716000
*        DO I = 1 TO CUANUM BY 1 WHILE (VALIDCUA = OFF);   /*@0001VLS*/ 04717000
         LA    @06,1                                               1488 04718000
         STH   @06,I                                               1488 04719000
         B     @DE01488                                            1488 04720000
@DL01488 TM    VALIDCUA,B'01000000'                                1488 04721000
         BNZ   @DC01488                                            1488 04722000
*          IF TEMPCUA >= CUA1(I) &          /* DOES THE CUA LIE IN   */ 04723000
*             TEMPCUA <= CUA2(I) THEN       /* RANGE SPECIFIED       */ 04724000
         SLA   @06,2                                               1489 04725000
         L     @15,CUAPTR(,R2)                                     1489 04726000
         ST    @06,@TF00001                                        1489 04727000
         ALR   @06,@15                                             1489 04728000
         BCTR  @06,0                                               1489 04729000
         BCTR  @06,0                                               1489 04730000
         CLC   TEMPCUA(2),CUA1-2(@06)                              1489 04731000
         BL    @RF01489                                            1489 04732000
         AL    @15,@TF00001                                        1489 04733000
         CLC   TEMPCUA(2),CUA2-4(@15)                              1489 04734000
         BH    @RF01489                                            1489 04735000
*            VALIDCUA = ON;                 /* ACCEPT RECORD @0001VLS*/ 04736000
         OI    VALIDCUA,B'01000000'                                1490 04737000
*        END;                                              /*@0001VLS*/ 04738000
@RF01489 LA    @06,1                                               1491 04739000
         AH    @06,I                                               1491 04740000
         STH   @06,I                                               1491 04741000
@DE01488 L     @01,CUAPTR(,R2)                                     1491 04742000
         CH    @06,CUANUM(,@01)                                    1491 04743000
         BNH   @DL01488                                            1491 04744000
@DC01488 DS    0H                                                  1492 04745000
*      ELSE                                                        1492 04746000
*        VALIDCUA = ON;                     /* ACCEPT RECORD @0001VLS*/ 04747000
         B     @RC01487                                            1492 04748000
@RF01487 OI    VALIDCUA,B'01000000'                                1492 04749000
*      /*                                                    @0001VLS*/ 04750000
*      /* A CHECK IS MADE TO SEE IF A LIST OF VOLIS'S WAS PASSED IN  */ 04751000
*      /* THE PARAMETER LIST.  IF IT WAS, THE VOLID IN THE RECORD IS */ 04752000
*      /* COMPARED TO THE VOLIDS IN THE LIST TO SEE IF THE RECORD    */ 04753000
*      /* SHOULD BE INCLUDED IN THE REPORTS.                 @0001VLS*/ 04754000
*      /*                                                    @0001VLS*/ 04755000
*      IF VOLPTR ¬= ZERO THEN               /* WAS A VOLID SPECIFIED */ 04756000
@RC01487 L     @06,VOLPTR(,R2)                                     1493 04757000
         LTR   @06,@06                                             1493 04758000
         BZ    @RF01493                                            1493 04759000
*        DO I = 1 TO VOLNUM BY 1 WHILE(VALIDVOL = OFF);    /*@0001VLS*/ 04760000
         LA    @06,1                                               1494 04761000
         STH   @06,I                                               1494 04762000
         B     @DE01494                                            1494 04763000
@DL01494 TM    VALIDVOL,B'00100000'                                1494 04764000
         BNZ   @DC01494                                            1494 04765000
*          IF VOLVAL(I) = TEMPVOL  THEN    /* VOLUME IN LIST        */  04766000
         MH    @06,@CH00080                                        1495 04767000
         L     @01,VOLPTR(,R2)                                     1495 04768000
         ALR   @01,@06                                             1495 04769000
         AL    @01,@CF01757                                        1495 04770000
         CLC   VOLVAL-2(6,@01),TEMPVOL                             1495 04771000
         BNE   @RF01495                                            1495 04772000
*            VALIDVOL = ON;                 /* ACCEPT RECORD @0001VLS*/ 04773000
         OI    VALIDVOL,B'00100000'                                1496 04774000
*        END;                                              /*@0001VLS*/ 04775000
@RF01495 LA    @06,1                                               1497 04776000
         AH    @06,I                                               1497 04777000
         STH   @06,I                                               1497 04778000
@DE01494 L     @01,VOLPTR(,R2)                                     1497 04779000
         CH    @06,VOLNUM(,@01)                                    1497 04780000
         BNH   @DL01494                                            1497 04781000
@DC01494 DS    0H                                                  1498 04782000
*      ELSE                                                        1498 04783000
*        VALIDVOL = ON;                     /* ACCEPT RECORD @0001VLS*/ 04784000
         B     @RC01493                                            1498 04785000
@RF01493 OI    VALIDVOL,B'00100000'                                1498 04786000
*      /*                                                    @0001VLS*/ 04787000
*      /* A CHECK IS MADE TO SEE ANY CPUS WERE SPECIFIED.    @0001VLS*/ 04788000
*      /*                                                    @0001VLS*/ 04789000
*      IF CPUPTR ¬= ZERO THEN                                      1499 04790000
@RC01493 L     @06,CPUPTR(,R2)                                     1499 04791000
         LTR   @06,@06                                             1499 04792000
         BZ    @RF01499                                            1499 04793000
*        DO I = 1 TO CPUNUM BY 1 WHILE(VALIDCPU = OFF);    /*@0001VLS*/ 04794000
         LA    @06,1                                               1500 04795000
         STH   @06,I                                               1500 04796000
         B     @DE01500                                            1500 04797000
@DL01500 TM    VALIDCPU,B'00000001'                                1500 04798000
         BNZ   @DC01500                                            1500 04799000
*          IF CPUIDENT = CPUVAL(I) THEN                            1501 04800000
         MH    @06,@CH00036                                        1501 04801000
         L     @01,CPUPTR(,R2)                                     1501 04802000
         ALR   @01,@06                                             1501 04803000
         AL    @01,@CF01771                                        1501 04804000
         CLC   CPUIDENT(5,R7),CPUVAL-2(@01)                        1501 04805000
         BNE   @RF01501                                            1501 04806000
*            VALIDCPU = ON;                                /*@0001VLS*/ 04807000
         OI    VALIDCPU,B'00000001'                                1502 04808000
*        END;                                              /*@0001VLS*/ 04809000
@RF01501 LA    @06,1                                               1503 04810000
         AH    @06,I                                               1503 04811000
         STH   @06,I                                               1503 04812000
@DE01500 L     @01,CPUPTR(,R2)                                     1503 04813000
         CH    @06,CPUNUM(,@01)                                    1503 04814000
         BNH   @DL01500                                            1503 04815000
@DC01500 DS    0H                                                  1504 04816000
*      ELSE                                                        1504 04817000
*        VALIDCPU = ON;                                    /*@0001VLS*/ 04818000
         B     @RC01499                                            1504 04819000
@RF01499 OI    VALIDCPU,B'00000001'                                1504 04820000
*      /*                                                    @0001VLS*/ 04821000
*      /* A CHECK IS MADE AGAINST ANY DEVICE SERIALS SPECIFIED.      */ 04822000
*      /*                                                    @0001VLS*/ 04823000
*      IF SERPTR ¬= ZERO &                                         1505 04824000
*         (RECTYP & FOXZERO) = OBRREC &  /*                  @D3503SG*/ 04825000
*         DEV2 ¬= OBRDEV  THEN           /*                  @D3503SG*/ 04826000
@RC01499 L     @06,SERPTR(,R2)                                     1505 04827000
         LTR   @06,@06                                             1505 04828000
         BZ    @RF01505                                            1505 04829000
         MVC   @TS00001(1),RECTYP(R7)                              1505 04830000
         NI    @TS00001,X'F0'                                      1505 04831000
         CLI   @TS00001,X'30'                                      1505 04832000
         BNE   @RF01505                                            1505 04833000
         CLC   DEV2(2,R7),@CB00547                                 1505 04834000
         BE    @RF01505                                            1505 04835000
*        DO I = 1 TO SERNUM BY 1 WHILE(VALIDSER = OFF);    /*@0001VLS*/ 04836000
         LA    @06,1                                               1506 04837000
         STH   @06,I                                               1506 04838000
         B     @DE01506                                            1506 04839000
@DL01506 TM    VALIDSER,B'00000010'                                1506 04840000
         BNZ   @DC01506                                            1506 04841000
*          IF OSER74XX = SERVAL(I) THEN                            1507 04842000
         ALR   @06,@06                                             1507 04843000
         L     @01,SERPTR(,R2)                                     1507 04844000
         ALR   @01,@06                                             1507 04845000
         CLC   OSER74XX(2,R7),SERVAL-2(@01)                        1507 04846000
         BNE   @RF01507                                            1507 04847000
*            VALIDSER = ON;                                /*@0001VLS*/ 04848000
         OI    VALIDSER,B'00000010'                                1508 04849000
*        END;                                              /*@0001VLS*/ 04850000
@RF01507 LA    @06,1                                               1509 04851000
         AH    @06,I                                               1509 04852000
         STH   @06,I                                               1509 04853000
@DE01506 L     @01,SERPTR(,R2)                                     1509 04854000
         CH    @06,SERNUM(,@01)                                    1509 04855000
         BNH   @DL01506                                            1509 04856000
@DC01506 DS    0H                                                  1510 04857000
*      ELSE                                                        1510 04858000
*        VALIDSER = ON;                                    /*@0001VLS*/ 04859000
         B     @RC01505                                            1510 04860000
@RF01505 OI    VALIDSER,B'00000010'                                1510 04861000
*      /*                                                    @0001VLS*/ 04862000
*      IF DEBUG16 = ON THEN    /*IF YES CHECK TO ADD ANY DROPPED REC */ 04863000
@RC01505 TM    DEBUG16(R2),B'10000000'                             1511 04864000
         BNO   @RF01511                                            1511 04865000
*        DO;                                               /*@0001VLS*/ 04866000
*          IF VALIDCUA = OFF THEN                                  1513 04867000
         TM    VALIDCUA,B'01000000'                                1513 04868000
         BNZ   @RF01513                                            1513 04869000
*            BADCUA = BADCUA + ONE; /*NUMBER DROPPED FOR CUA @0001VLS*/ 04870000
         LA    @06,1                                               1514 04871000
         AL    @06,BADCUA                                          1514 04872000
         ST    @06,BADCUA                                          1514 04873000
*          ELSE                                                    1515 04874000
*            IF VALIDVOL = OFF THEN                                1515 04875000
         B     @RC01513                                            1515 04876000
@RF01513 TM    VALIDVOL,B'00100000'                                1515 04877000
         BNZ   @RF01515                                            1515 04878000
*              BADVOL = BADVOL + ONE; /* NUMBER DROPPED FOR VOLID    */ 04879000
         LA    @06,1                                               1516 04880000
         AL    @06,BADVOL                                          1516 04881000
         ST    @06,BADVOL                                          1516 04882000
*            ELSE                                                  1517 04883000
*              IF VALIDSER = OFF THEN                              1517 04884000
         B     @RC01515                                            1517 04885000
@RF01515 TM    VALIDSER,B'00000010'                                1517 04886000
         BNZ   @RF01517                                            1517 04887000
*                BADSER = BADSER + ONE;  /*INCORRECT SERIAL NUMBER   */ 04888000
         LA    @06,1                                               1518 04889000
         AL    @06,BADSER                                          1518 04890000
         ST    @06,BADSER                                          1518 04891000
*              ELSE                                                1519 04892000
*                IF VALIDCPU =  OFF THEN                           1519 04893000
         B     @RC01517                                            1519 04894000
@RF01517 TM    VALIDCPU,B'00000001'                                1519 04895000
         BNZ   @RF01519                                            1519 04896000
*                  BADCPU = BADCPU + ONE; /* CPU DOES NOT MATCH PARMS*/ 04897000
         LA    @06,1                                               1520 04898000
         AL    @06,BADCPU                                          1520 04899000
         ST    @06,BADCPU                                          1520 04900000
*        END;                                              /*@0001VLS*/ 04901000
*    END;                                                  /*@0001VLS*/ 04902000
*END FILTER;                                               /*@0001VLS*/ 04903000
@EL00038 DS    0H                                                  1523 04904000
@EF00038 DS    0H                                                  1523 04905000
@ER00038 LM    @14,@12,@SA00038                                    1523 04906000
         BR    @14                                                 1523 04907000
*/*                                                          @0001VLS*/ 04908000
*/* AT END OF FILE THE PART OF THE CONTROL TABLE THAT HAS NOT BEEN   */ 04909000
*/* USED IS FREED AND THEN CONTROL IS PASSED TO SORT THE TABLE.      */ 04910000
*/*                                                          @0001VLS*/ 04911000
*ENDOFILE: PROC;                                           /*@0001VLS*/ 04912000
ENDOFILE STM   @14,@12,@SA00039                                    1524 04913000
* IF CURRPTR < TABPTR THEN               /* NOT ENOUGH TABLE SPACE   */ 04914000
         CLC   CURRPTR(4),TABPTR                                   1525 04915000
         BNL   @RF01525                                            1525 04916000
*   DO;                                                    /*@0001VLS*/ 04917000
*     CALL IFCMSG(53,ADDR(MSGADDR));                       /*@0001VLS*/ 04918000
         LA    @06,MSGADDR                                         1527 04919000
         ST    @06,@AFTEMPS+8                                      1527 04920000
         L     @15,ADIFCMSG(,R2)                                   1527 04921000
         LA    @01,@AL01527                                        1527 04922000
         BALR  @14,@15                                             1527 04923000
*     CALL PRINTIT;                                        /*@0001VLS*/ 04924000
         BAL   @14,PRINTIT                                         1528 04925000
*   END;                                                   /*@0001VLS*/ 04926000
* CURRPTR = CURRPTR + TWELVE;            /* PUT WITHIN BOUNDS        */ 04927000
@RF01525 LA    @06,12                                              1530 04928000
         AL    @06,CURRPTR                                         1530 04929000
         ST    @06,CURRPTR                                         1530 04930000
* CALL IFCMSG(54,ADDR(MSGADDR));                           /*@0001VLS*/ 04931000
         LA    @06,MSGADDR                                         1531 04932000
         ST    @06,@AFTEMPS+8                                      1531 04933000
         L     @15,ADIFCMSG(,R2)                                   1531 04934000
         LA    @01,@AL01531                                        1531 04935000
         BALR  @14,@15                                             1531 04936000
* CVD (RECCOUNT,TEMPAREA(1:8));          /* CONVERT TO DECIMAL       */ 04937000
         LH    @06,RECCOUNT                                        1532 04938000
         CVD   @06,TEMPAREA                                        1532 04939000
* UNPK (NUMRECP,TEMPAREA(1:8));          /* PRINTABLE CHARACTERS     */ 04940000
         UNPK  NUMRECP(7),TEMPAREA(8)                              1533 04941000
* NUMRECP(7) = NUMRECP(7) | FOXZERO;                       /*@0001VLS*/ 04942000
         OI    NUMRECP+6,X'F0'                                     1534 04943000
* I = 1;                                                   /*@0001VLS*/ 04944000
         MVC   I(2),@CH00057                                       1535 04945000
* DO UNTIL (I > 6 | NUMRECP(I) ¬= FOXZERO);                /*@0001VLS*/ 04946000
@DL01536 DS    0H                                                  1537 04947000
*   NUMRECP(I) = BLANK;                  /* SET LEADING ZERO TO BLANK*/ 04948000
         LH    @06,I                                               1537 04949000
         LA    @01,NUMRECP-1(@06)                                  1537 04950000
         MVI   0(@01),C' '                                         1537 04951000
*   I = I + 1;                                             /*@0001VLS*/ 04952000
         LA    @06,1(,@06)                                         1538 04953000
         STH   @06,I                                               1538 04954000
* END;                                                     /*@0001VLS*/ 04955000
@DE01536 LH    @06,I                                               1539 04956000
         C     @06,@CF00080                                        1539 04957000
         BH    @DC01536                                            1539 04958000
         LA    @01,NUMRECP-1(@06)                                  1539 04959000
         CLI   0(@01),X'F0'                                        1539 04960000
         BE    @DL01536                                            1539 04961000
@DC01536 DS    0H                                                  1540 04962000
* CALL PRINTIT;                                            /*@0001VLS*/ 04963000
         BAL   @14,PRINTIT                                         1540 04964000
* FREESIZE = (CURRPTR - TABPTR);         /* UNUSED SPACE     @0001VLS*/ 04965000
         L     @06,TABPTR                                          1541 04966000
         L     @15,CURRPTR                                         1541 04967000
         SLR   @15,@06                                             1541 04968000
         ST    @15,FREESIZE                                        1541 04969000
* IF FREESIZE > EIGHT THEN               /* OUTPUT MESSAGE   @0001VLS*/ 04970000
         C     @15,@CF00067                                        1542 04971000
         BNH   @RF01542                                            1542 04972000
*   DO;                                                    /*@0001VLS*/ 04973000
*     FREESIZE = FREESIZE & 'FFFFF8'X;   /* DOUBLE WORD AMOUNT       */ 04974000
         N     @15,@CF01707                                        1544 04975000
         ST    @15,FREESIZE                                        1544 04976000
*     RESPECIFY (R0,R1) RESTRICTED;                        /*@0001VLS*/ 04977000
*     R0 = FREESIZE;                                       /*@0001VLS*/ 04978000
         LR    R0,@15                                              1546 04979000
*     R1 = TABPTR;                                         /*@0001VLS*/ 04980000
         LR    R1,@06                                              1547 04981000
*     GEN(FREEMAIN R,LV=(R0),A=(R1));                      /*@0001VLS*/ 04982000
         FREEMAIN R,LV=(R0),A=(R1)                                      04983000
*     RESPECIFY (R0,R1) UNRESTRICTED;                      /*@0001VLS*/ 04984000
*   END;                                                   /*@0001VLS*/ 04985000
* TABPTR = CURRPTR;                      /* SAVE ADDRESS OF NEW TABLE*/ 04986000
@RF01542 L     @06,CURRPTR                                         1551 04987000
         ST    @06,TABPTR                                          1551 04988000
* SORTNUM = NUMENT;                      /* STORE THE NUMBER OF RCDS */ 04989000
         L     @15,NUMENT                                          1552 04990000
         ST    @15,SORTNUM(,R2)                                    1552 04991000
* SORTADR = TABPTR;                      /* LOCATION OF SORT TABLE   */ 04992000
         ST    @06,SORTADR(,R2)                                    1553 04993000
* IF PHIST = ON THEN                     /* HISTORY INPUT    @0001VLS*/ 04994000
         TM    PHIST(R2),B'00100000'                               1554 04995000
         BNO   @RF01554                                            1554 04996000
*   DO;                                                    /*@0001VLS*/ 04997000
*     /*                                                     @0001VLS*/ 04998000
*     /* INPUT DATA SETS MUST BE CLOSED IF HISTORY IS INPUT  @0001VLS*/ 04999000
*     /*                                                     @0001VLS*/ 05000000
*     CLOSEIO = CLOSEIO && CLOSEIO;                        /*@0001VLS*/ 05001000
         XC    CLOSEIO(2,R2),CLOSEIO(R2)                           1556 05002000
*     IF PLOGREC = ON THEN                                         1557 05003000
         TM    PLOGREC(R2),B'00000010'                             1557 05004000
         BNO   @RF01557                                            1557 05005000
*       CSERLOG = ON;                                      /*@0001VLS*/ 05006000
         OI    CSERLOG(R2),B'00100000'                             1558 05007000
*     CDRCTWRK = ON;                                       /*@0001VLS*/ 05008000
@RF01557 OI    CDRCTWRK(R2),B'00000010'                            1559 05009000
*     CALL IOHND (IOCLOSE);                                /*@0001VLS*/ 05010000
         L     @15,ADIOHND(,R2)                                    1560 05011000
         LA    @01,@AL01560                                        1560 05012000
         BALR  @14,@15                                             1560 05013000
*   END;                                                   /*@0001VLS*/ 05014000
*END;                                                      /*@0001VLS*/ 05015000
@EL00039 DS    0H                                                  1562 05016000
@EF00039 DS    0H                                                  1562 05017000
@ER00039 LM    @14,@12,@SA00039                                    1562 05018000
         BR    @14                                                 1562 05019000
@PB00039 DS    0H                                                  1563 05020000
*/*                                                          @0001VLS*/ 05021000
*/* INITIALLY THE ADDRESS OF THE PARAMETER LIST IS SAVED.  NEXT AN    * 05022000
*/* AREA OF CORE IS GOTTEN FOR THE CONTROL TABLE.            @0001VLS*/ 05023000
*/*                                                          @0001VLS*/ 05024000
*  SAVEPARM = R2;                     /* SAVE ADDR TO PARM TABLE     */ 05025000
         ST    R2,SAVEPARM                                         1563 05026000
*  RESPECIFY (R12,R15) RESTRICTED;                         /*@0001VLS*/ 05027000
*  IF DEBUG4 = ON THEN                /* DUMP PGM NAMES AND DATES    */ 05028000
         TM    DEBUG4(R2),B'00001000'                              1565 05029000
         BNO   @RF01565                                            1565 05030000
*    DO R15 = R12 - 27;                                    /*@0001VLS*/ 05031000
         LR    R15,R12                                             1566 05032000
         SL    R15,@CF01708                                        1566 05033000
*      GEN(MVC  MSGADDR(16),0(R15));                       /*@0001VLS*/ 05034000
         MVC  MSGADDR(16),0(R15)                                        05035000
*      CALL PRINTIT;                                       /*@0001VLS*/ 05036000
         BAL   @14,PRINTIT                                         1568 05037000
*    END;                                                  /*@0001VLS*/ 05038000
*IF SHAREPTR ¬= 0 THEN                                             1570 05039000
@RF01565 L     @14,SHAREPTR(,R2)                                   1570 05040000
         LTR   @14,@14                                             1570 05041000
         BZ    @RF01570                                            1570 05042000
* CALL SORTSHAR;                                           /*@D3506GB*/ 05043000
         BAL   @14,SORTSHAR                                        1571 05044000
*  RESPECIFY (R0) RESTRICTED;                              /*@0001VLS*/ 05045000
@RF01570 DS    0H                                                  1573 05046000
*  R0 = TABSIZE / FOUR;               /* GET SIZE FOR TABLE  @0001VLS*/ 05047000
         L     R0,TABSIZE(,R2)                                     1573 05048000
         SRDA  R0,32                                               1573 05049000
         D     R0,@CF00037                                         1573 05050000
         LR    R0,@01                                              1573 05051000
*  GEN(GETMAIN EC,LV=(0),A=TABPTR GET SPACE FOR TABLE);    /*@0001VLS*/ 05052000
         GETMAIN EC,LV=(0),A=TABPTR GET SPACE FOR TABLE                 05053000
*  RETCODE = R15;                                          /*@0001VLS*/ 05054000
         ST    R15,RETCODE                                         1575 05055000
*  RESPECIFY (R0,R12,R15) UNRESTRICTED;                    /*@0001VLS*/ 05056000
*  IF RETCODE = ZERO THEN             /* IF GOOD RET CODE, CONTINUE  */ 05057000
         L     @06,RETCODE                                         1577 05058000
         LTR   @06,@06                                             1577 05059000
         BNZ   @RF01577                                            1577 05060000
*    DO;                                                   /*@0001VLS*/ 05061000
*      PACK(TEMPAREA(1:8),RDTHRSH);   /* CONVERT THE THRESHOLD VALUE */ 05062000
         PACK  TEMPAREA(8),RDTHRSH(3,R2)                           1579 05063000
*      CVB(CURRPTR,TEMPAREA(1:8));    /* TO A VALUE SIMILAR TO THAT  */ 05064000
         CVB   @06,TEMPAREA                                        1580 05065000
         ST    @06,CURRPTR                                         1580 05066000
*      READS = CURRPTR;               /* IN THE RECORD       @0001VLS*/ 05067000
         STC   @06,READS                                           1581 05068000
*      PACK(TEMPAREA(1:8),WRTHRSH);   /* CONVERT THE THRESHOLD VALUE */ 05069000
         PACK  TEMPAREA(8),WRTHRSH(3,R2)                           1582 05070000
*      CVB(CURRPTR,TEMPAREA(1:8));    /* TO A VALUE SIMILAR TO THAT  */ 05071000
         CVB   @06,TEMPAREA                                        1583 05072000
         ST    @06,CURRPTR                                         1583 05073000
*      WRITES = CURRPTR;              /* IN THE RECORD       @0001VLS*/ 05074000
         STC   @06,WRITES                                          1584 05075000
*      CURRPTR = TABPTR + (TABSIZE / FOUR) - 2;            /*@0001VLS*/ 05076000
         L     @00,TABSIZE(,R2)                                    1585 05077000
         SRDA  @00,32                                              1585 05078000
         D     @00,@CF00037                                        1585 05079000
         AL    @01,TABPTR                                          1585 05080000
         BCTR  @01,0                                               1585 05081000
         BCTR  @01,0                                               1585 05082000
         ST    @01,CURRPTR                                         1585 05083000
*      EOTABLE = EOT;                 /* PUT IN END OF TABLE INDICAT */ 05084000
         MVC   EOTABLE(2,@01),@CB00261                             1586 05085000
*      CURRPTR = CURRPTR - TWELVE;                         /*@0001VLS*/ 05086000
         SL    @01,@CF00033                                        1587 05087000
         ST    @01,CURRPTR                                         1587 05088000
*      RESPECIFY (R15) RESTRICTED;                         /*@0001VLS*/ 05089000
*      CALL IOHND(READSEQ);           /* GET AN INPUT RECORD @0001VLS*/ 05090000
         L     @15,ADIOHND(,R2)                                    1589 05091000
         LA    @01,@AL01589                                        1589 05092000
         BALR  @14,@15                                             1589 05093000
*      RETCODE = R15;                                      /*@0001VLS*/ 05094000
         ST    R15,RETCODE                                         1590 05095000
*      RESPECIFY (R15) UNRESTRICTED;                       /*@0001VLS*/ 05096000
*      DO WHILE (CURRPTR >= TABPTR & RETCODE = ZERO);      /*@0001VLS*/ 05097000
         B     @DE01592                                            1592 05098000
@DL01592 DS    0H                                                  1593 05099000
*        CALL FILTER;                                      /*@0001VLS*/ 05100000
         BAL   @14,FILTER                                          1593 05101000
*        IF VALIDCUA = ON & VALIDVOL = ON & VALIDCPU = ON &        1594 05102000
*          VALIDSER = ON THEN                                      1594 05103000
         TM    VALIDCUA,B'01100000'                                1594 05104000
         BNO   @RF01594                                            1594 05105000
         TM    VALIDCPU,B'00000011'                                1594 05106000
         BNO   @RF01594                                            1594 05107000
*          IF DEVCODE = NONSF  THEN      /*NOT 8809DEV       @D3503SG*/ 05108000
         CLI   DEVCODE,X'00'                                       1595 05109000
         BNE   @RF01595                                            1595 05110000
*            CALL TABENT;                /*MAKE A TABLE ENTRY@D3503SG*/ 05111000
         BAL   @14,TABENT                                          1596 05112000
*          ELSE                          /*8809DEV RECORD    @D3503SG*/ 05113000
*            CALL SFBENT;                /*MAKE A TABLE ENTRY@D3503SG*/ 05114000
         B     @RC01595                                            1597 05115000
@RF01595 BAL   @14,SFBENT                                          1597 05116000
*        IF RETCODE = ZERO THEN                                    1598 05117000
@RC01595 DS    0H                                                  1598 05118000
@RF01594 L     @06,RETCODE                                         1598 05119000
         LTR   @06,@06                                             1598 05120000
         BNZ   @RF01598                                            1598 05121000
*          DO;                                             /*@0001VLS*/ 05122000
*            RESPECIFY (R15) RESTRICTED;                   /*@0001VLS*/ 05123000
*            CALL IOHND (READSEQ);            /* GET ANOTHER RECORD  */ 05124000
         L     @15,ADIOHND(,R2)                                    1601 05125000
         LA    @01,@AL01601                                        1601 05126000
         BALR  @14,@15                                             1601 05127000
*            RETCODE = R15;                                /*@0001VLS*/ 05128000
         ST    R15,RETCODE                                         1602 05129000
*            RESPECIFY (R15) UNRESTRICTED;                 /*@0001VLS*/ 05130000
*          END;                                            /*@0001VLS*/ 05131000
*      END;                                                /*@0001VLS*/ 05132000
@RF01598 DS    0H                                                  1605 05133000
@DE01592 CLC   CURRPTR(4),TABPTR                                   1605 05134000
         BL    @DC01592                                            1605 05135000
         L     @06,RETCODE                                         1605 05136000
         LTR   @06,@06                                             1605 05137000
         BZ    @DL01592                                            1605 05138000
@DC01592 DS    0H                                                  1606 05139000
*      CALL ENDOFILE;                                      /*@0001VLS*/ 05140000
         BAL   @14,ENDOFILE                                        1606 05141000
*      /*                                                    @0001VLS*/ 05142000
*      /* WHEN END OF FILE HAS BEEN REACHED OR THE CONTROL TABLE IS  */ 05143000
*      /* FULL, THE ENTRIES ARE SORTED FOR PROCESSING.  THE COUNT OF */ 05144000
*      /* RECORDS AND ADDRESS OF THE FIRST ENTRY IS SAVED FOR SECOND */ 05145000
*      /* PASS.                                              @0001VLS*/ 05146000
*      /*                                                    @0001VLS*/ 05147000
*      IF RECCOUNT ¬= ZERO THEN       /* ARE THERE ANY VALID RECORDS */ 05148000
         LH    @06,RECCOUNT                                        1607 05149000
         LTR   @06,@06                                             1607 05150000
         BZ    @RF01607                                            1607 05151000
*        DO;                                               /*@0001VLS*/ 05152000
*          IF DEBUG16 = ON THEN       /* DO THEY WANT THE DEBUG CTS  */ 05153000
         TM    DEBUG16(R2),B'10000000'                             1609 05154000
         BNO   @RF01609                                            1609 05155000
*            CALL BUGDATA;            /* GO PRINT THE COUNTS @0001VLS*/ 05156000
         BAL   @14,BUGDATA                                         1610 05157000
*          IF NUMENT > ONE THEN                                    1611 05158000
@RF01609 L     @06,NUMENT                                          1611 05159000
         C     @06,@CF00057                                        1611 05160000
         BNH   @RF01611                                            1611 05161000
*            CALL SORT;               /* SORT FOR CUA        @0001VLS*/ 05162000
         BAL   @14,SORT                                            1612 05163000
*          IF DEBUG11 = ON THEN       /* ABEND REQUESTED?    @0001VLS*/ 05164000
@RF01611 TM    DEBUG11(R2),B'00010000'                             1613 05165000
         BNO   @RF01613                                            1613 05166000
*            GEN (ABEND 520,DUMP);                         /*@0001VLS*/ 05167000
         ABEND 520,DUMP                                                 05168000
*          CALL PRINTCUA;                /*                  @D3503SG*/ 05169000
@RF01613 BAL   @14,PRINTCUA                                        1615 05170000
*          SORTFLG = ON;                                   /*@0001VLS*/ 05171000
         OI    SORTFLG,B'10000000'                                 1616 05172000
*          DEBUG27 = OFF;                                  /*@0001VLS*/ 05173000
         NI    DEBUG27(R2),B'11101111'                             1617 05174000
*          CURRPTR = TABPTR;                               /*@0001VLS*/ 05175000
         L     @06,TABPTR                                          1618 05176000
         ST    @06,CURRPTR                                         1618 05177000
*          IF NUMENT > ONE THEN                                    1619 05178000
         L     @06,NUMENT                                          1619 05179000
         C     @06,@CF00057                                        1619 05180000
         BNH   @RF01619                                            1619 05181000
*            CALL SORT;               /* SORT FOR VOLUME ID  @0001VLS*/ 05182000
         BAL   @14,SORT                                            1620 05183000
*          CALL OUTVOLID;             /*                     @D3503SG*/ 05184000
@RF01619 BAL   @14,OUTVOLID                                        1621 05185000
*        END;      /*IF RECOUNT ¬= ZERO                      @0001VLS*/ 05186000
*    END;                                                  /*@0001VLS*/ 05187000
*  ELSE                                                            1624 05188000
*    DO;                                                   /*@0001VLS*/ 05189000
         B     @RC01577                                            1624 05190000
@RF01577 DS    0H                                                  1625 05191000
*      CALL IFCMSG(55,ADDR(MSGADDR)); /* MSG FOR GETMAIN FAIL        */ 05192000
         LA    @06,MSGADDR                                         1625 05193000
         ST    @06,@AFTEMPS+12                                     1625 05194000
         L     @15,ADIFCMSG(,R2)                                   1625 05195000
         LA    @01,@AL01625                                        1625 05196000
         BALR  @14,@15                                             1625 05197000
*      CALL PRINTIT;                  /* PRINT THE ERROR OUT @0001VLS*/ 05198000
         BAL   @14,PRINTIT                                         1626 05199000
*    END;                                                  /*@0001VLS*/ 05200000
*  IF DEBUG12 = ON THEN               /* ABEND REQUESTED?    @0001VLS*/ 05201000
@RC01577 TM    DEBUG12(R2),B'00001000'                             1628 05202000
         BNO   @RF01628                                            1628 05203000
*    GEN(ABEND 540,DUMP);                                  /*@0001VLS*/ 05204000
         ABEND 540,DUMP                                                 05205000
*  RETURN;                                                 /*@0001VLS*/ 05206000
@EL00001 L     @13,4(,@13)                                         1630 05207000
@EF00001 DS    0H                                                  1630 05208000
@ER00001 L     @14,12(,@13)                                        1630 05209000
         LM    @00,@12,20(@13)                                     1630 05210000
         BR    @14                                                 1630 05211000
* END                                                      /*@0001VLS*/ 05212000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      * 05213000
*/*%INCLUDE SYSLIB  (COMTABLE)                                        * 05214000
*;                                                                 1631 05215000
         B     @EL00001                                            1631 05216000
@DATA    DS    0H                                                       05217000
@CH00085 DC    H'9'                                                     05218000
@CH00727 DC    H'56'                                                    05219000
         DS    0F                                                       05220000
@AL00227 DC    A(CUASH2C)              LIST WITH   2 ARGUMENT(S)        05221000
         DC    A(@CF00075)                                              05222000
@AL00234 DC    A(@CF01519)             LIST WITH   2 ARGUMENT(S)        05223000
         DC    A(@AFTEMPS)                                              05224000
@AL00238 DC    A(HIGHCUA)              LIST WITH   3 ARGUMENT(S)        05225000
         DC    A(CUASH2C2)                                              05226000
         DC    A(@CF00075)                                              05227000
@AL00347 DC    A(PCCW)                 LIST WITH   2 ARGUMENT(S)        05228000
         DC    A(@CF00067)                                              05229000
@AL00348 DC    A(PCSW)                 LIST WITH   2 ARGUMENT(S)        05230000
         DC    A(@CF00037)                                              05231000
@AL00401 DC    A(SPCCW)                LIST WITH   2 ARGUMENT(S)        05232000
         DC    A(@CF00067)                                              05233000
@AL00402 DC    A(SPCSW)                LIST WITH   2 ARGUMENT(S)        05234000
         DC    A(@CF00037)                                              05235000
@AL00403 EQU   *                       LIST WITH   2 ARGUMENT(S)        05236000
@AL00460 EQU   *                       LIST WITH   2 ARGUMENT(S)        05237000
@AL00547 EQU   *                       LIST WITH   2 ARGUMENT(S)        05238000
@AL00868 EQU   *                       LIST WITH   2 ARGUMENT(S)        05239000
@AL00938 DC    A(TEMPAREA)             LIST WITH   2 ARGUMENT(S)        05240000
         DC    A(@CF00080)                                              05241000
@AL00406 EQU   *                       LIST WITH   2 ARGUMENT(S)        05242000
@AL00464 EQU   *                       LIST WITH   2 ARGUMENT(S)        05243000
@AL00551 EQU   *                       LIST WITH   2 ARGUMENT(S)        05244000
@AL00871 EQU   *                       LIST WITH   2 ARGUMENT(S)        05245000
@AL00941 DC    A(TEMPAREA)             LIST WITH   2 ARGUMENT(S)        05246000
         DC    A(@CF00067)                                              05247000
@AL00418 DC    A(SPSYMCD)              LIST WITH   2 ARGUMENT(S)        05248000
         DC    A(@CF00075)                                              05249000
@AL00493 DC    A(I)                    LIST WITH   2 ARGUMENT(S)        05250000
         DC    A(WRTGVRC)                                               05251000
@AL00495 DC    A(I)                    LIST WITH   2 ARGUMENT(S)        05252000
         DC    A(ERLYBOR)                                               05253000
@AL00497 DC    A(I)                    LIST WITH   2 ARGUMENT(S)        05254000
         DC    A(OVELCHG)                                               05255000
@AL00503 DC    A(I)                    LIST WITH   2 ARGUMENT(S)        05256000
         DC    A(SKEWERR)                                               05257000
@AL00504 DC    A(MCPU)                 LIST WITH   2 ARGUMENT(S)        05258000
         DC    A(@CF00075)                                              05259000
@AL00505 DC    A(SERCPU)               LIST WITH   2 ARGUMENT(S)        05260000
         DC    A(@CF00038)                                              05261000
@AL00557 DC    A(SCCPSER)              LIST WITH   2 ARGUMENT(S)        05262000
         DC    A(@CF00038)                                              05263000
@AL00558 DC    A(SCCPMDL)              LIST WITH   2 ARGUMENT(S)        05264000
         DC    A(@CF00075)                                              05265000
@AL00684 EQU   *                       LIST WITH   3 ARGUMENT(S)        05266000
@AL00780 DC    A(TEMPAREA+18)          LIST WITH   3 ARGUMENT(S)        05267000
@AL00322 EQU   *                       LIST WITH   2 ARGUMENT(S)        05268000
@AL00389 EQU   *                       LIST WITH   2 ARGUMENT(S)        05269000
@AL00455 EQU   *                       LIST WITH   2 ARGUMENT(S)        05270000
@AL00545 EQU   *                       LIST WITH   2 ARGUMENT(S)        05271000
@AL00895 EQU   *                       LIST WITH   2 ARGUMENT(S)        05272000
@AL00947 DC    A(TEMPAREA)             LIST WITH   2 ARGUMENT(S)        05273000
         DC    A(@CF00075)                                              05274000
@AL00719 DC    A(SYSRDS)               LIST WITH   3 ARGUMENT(S)        05275000
         DC    A(SYSSIOS)                                               05276000
         DC    A(READPERC)                                              05277000
@AL00720 DC    A(SYSRTS)               LIST WITH   3 ARGUMENT(S)        05278000
         DC    A(SYSSIOS)                                               05279000
         DC    A(RITEPERC)                                              05280000
@AL00721 DC    A(SYSSIOS)              LIST WITH   2 ARGUMENT(S)        05281000
         DC    A(SUMSIOS)                                               05282000
@AL00722 DC    A(SYSMNTS)              LIST WITH   2 ARGUMENT(S)        05283000
         DC    A(SUMMNTS)                                               05284000
@AL00723 DC    A(SYSRDS)               LIST WITH   2 ARGUMENT(S)        05285000
         DC    A(SUMREAD)                                               05286000
@AL00724 DC    A(SYSRTS)               LIST WITH   2 ARGUMENT(S)        05287000
         DC    A(SUMWRITE)                                              05288000
@AL00810 DC    A(SYSRDS)               LIST WITH   3 ARGUMENT(S)        05289000
         DC    A(SYSSIOS)                                               05290000
         DC    A(STRDPRC)                                               05291000
@AL00811 DC    A(SYSRTS)               LIST WITH   3 ARGUMENT(S)        05292000
         DC    A(SYWTSIOS)                                              05293000
         DC    A(STWTPRC)                                               05294000
@AL00812 DC    A(SYSSIOS)              LIST WITH   2 ARGUMENT(S)        05295000
         DC    A(STRDSIO)                                               05296000
@AL00813 DC    A(SYWTSIOS)             LIST WITH   2 ARGUMENT(S)        05297000
         DC    A(STWTSIO)                                               05298000
@AL00814 DC    A(SYSMNTS)              LIST WITH   2 ARGUMENT(S)        05299000
         DC    A(STUMNTS)                                               05300000
@AL00815 DC    A(SYSRDS)               LIST WITH   2 ARGUMENT(S)        05301000
         DC    A(STRDERS)                                               05302000
@AL00816 DC    A(SYSRTS)               LIST WITH   2 ARGUMENT(S)        05303000
         DC    A(STWTERS)                                               05304000
@AL00831 DC    A(LVOLDATE)             LIST WITH   3 ARGUMENT(S)        05305000
         DC    A(TEMPAREA)                                              05306000
         DC    A(@CF00038)                                              05307000
@AL00833 DC    A(HVOLDATE)             LIST WITH   3 ARGUMENT(S)        05308000
@AL00247 EQU   *                       LIST WITH   2 ARGUMENT(S)        05309000
@AL00249 EQU   *                       LIST WITH   2 ARGUMENT(S)        05310000
@AL00267 EQU   *                       LIST WITH   2 ARGUMENT(S)        05311000
@AL00269 EQU   *                       LIST WITH   2 ARGUMENT(S)        05312000
@AL00688 EQU   *                       LIST WITH   2 ARGUMENT(S)        05313000
@AL00690 EQU   *                       LIST WITH   2 ARGUMENT(S)        05314000
@AL00784 EQU   *                       LIST WITH   2 ARGUMENT(S)        05315000
@AL00786 DC    A(TEMPAREA)             LIST WITH   2 ARGUMENT(S)        05316000
         DC    A(@CF00038)                                              05317000
@AL00848 EQU   *                       LIST WITH   1 ARGUMENT(S)        05318000
@AL01102 DC    A(@CF00080+2)           LIST WITH   1 ARGUMENT(S)        05319000
@AL00914 EQU   *                       LIST WITH   2 ARGUMENT(S)        05320000
@AL00925 EQU   *                       LIST WITH   2 ARGUMENT(S)        05321000
@AL00956 DC    A(VCPUMOD)              LIST WITH   2 ARGUMENT(S)        05322000
@AL00983 EQU   *                       LIST WITH   1 ARGUMENT(S)        05323000
@AL01010 DC    A(@CF00075)             LIST WITH   1 ARGUMENT(S)        05324000
@AL00915 EQU   *                       LIST WITH   2 ARGUMENT(S)        05325000
@AL00926 EQU   *                       LIST WITH   2 ARGUMENT(S)        05326000
@AL00957 DC    A(VCPUSER)              LIST WITH   2 ARGUMENT(S)        05327000
         DC    A(@CF00038)                                              05328000
@AL00978 EQU   *                       LIST WITH   1 ARGUMENT(S)        05329000
@AL01005 DC    A(@CF00057)             LIST WITH   1 ARGUMENT(S)        05330000
@AL01018 DC    A(@CF00036+2)           LIST WITH   1 ARGUMENT(S)        05331000
@AL01184 DC    A(@CF00777)             LIST WITH   2 ARGUMENT(S)        05332000
         DC    A(@AFTEMPS+4)                                            05333000
@AL01192 DC    A(TOTREC)               LIST WITH   2 ARGUMENT(S)        05334000
         DC    A(BUG10)                                                 05335000
@AL01195 DC    A(OBRCT)                LIST WITH   2 ARGUMENT(S)        05336000
         DC    A(BUG20)                                                 05337000
@AL01198 DC    A(MDRCT)                LIST WITH   2 ARGUMENT(S)        05338000
         DC    A(BUG21)                                                 05339000
@AL01201 DC    A(NUMSHORT)             LIST WITH   2 ARGUMENT(S)        05340000
         DC    A(BUG30)                                                 05341000
@AL01204 DC    A(BADDEV)               LIST WITH   2 ARGUMENT(S)        05342000
         DC    A(BUG31)                                                 05343000
@AL01207 DC    A(BADDAY)               LIST WITH   2 ARGUMENT(S)        05344000
         DC    A(BUG40)                                                 05345000
@AL01210 DC    A(BADTIME)              LIST WITH   2 ARGUMENT(S)        05346000
         DC    A(BUG50)                                                 05347000
@AL01213 DC    A(DROP3RD)              LIST WITH   2 ARGUMENT(S)        05348000
         DC    A(BUG60)                                                 05349000
@AL01216 DC    A(BADCPU)               LIST WITH   2 ARGUMENT(S)        05350000
         DC    A(BUG70)                                                 05351000
@AL01219 DC    A(BADCUA)               LIST WITH   2 ARGUMENT(S)        05352000
         DC    A(BUG80)                                                 05353000
@AL01222 DC    A(BADVOL)               LIST WITH   2 ARGUMENT(S)        05354000
         DC    A(BUG90)                                                 05355000
@AL01225 DC    A(BADSER)               LIST WITH   2 ARGUMENT(S)        05356000
         DC    A(BUG100)                                                05357000
@AL01228 DC    A(SHAREMOD)             LIST WITH   2 ARGUMENT(S)        05358000
         DC    A(BUG110)                                                05359000
@AL01231 DC    A(SHARECU)              LIST WITH   2 ARGUMENT(S)        05360000
         DC    A(BUG120)                                                05361000
@AL01234 DC    A(EXCTHRES)             LIST WITH   2 ARGUMENT(S)        05362000
         DC    A(BUG130)                                                05363000
@AL01237 DC    A(EXCTHRES+4)           LIST WITH   2 ARGUMENT(S)        05364000
         DC    A(BUG140)                                                05365000
@AL01321 DC    A(MSGADDR)              LIST WITH   2 ARGUMENT(S)        05366000
         DC    A(@CF00033)                                              05367000
@AL01372 DC    A(@CF00075+2)           LIST WITH   1 ARGUMENT(S)        05368000
@AL01527 DC    A(@CF00777)             LIST WITH   2 ARGUMENT(S)        05369000
         DC    A(@AFTEMPS+8)                                            05370000
@AL01531 DC    A(@CF01706)             LIST WITH   2 ARGUMENT(S)        05371000
         DC    A(@AFTEMPS+8)                                            05372000
@AL01560 DC    A(@CF00082+2)           LIST WITH   1 ARGUMENT(S)        05373000
@AL01589 EQU   *                       LIST WITH   1 ARGUMENT(S)        05374000
@AL01601 DC    A(@CF00038+2)           LIST WITH   1 ARGUMENT(S)        05375000
@AL01625 DC    A(@CF01711)             LIST WITH   2 ARGUMENT(S)        05376000
         DC    A(@AFTEMPS+12)                                           05377000
         DS    0F                                                       05378000
@SA00001 DS    18F                                                      05379000
@SA00002 DS    15F                                                      05380000
@SA00029 DS    15F                                                      05381000
@SA00003 DS    15F                                                      05382000
@SA00006 DS    15F                                                      05383000
@SA00034 DS    15F                                                      05384000
@PC00035 DS    3F                                                       05385000
@SA00004 DS    15F                                                      05386000
@SA00011 DS    15F                                                      05387000
@SA00005 DS    15F                                                      05388000
@SA00007 DS    15F                                                      05389000
@SA00031 DS    15F                                                      05390000
@PC00031 DS    2F                                                       05391000
@SA00008 DS    15F                                                      05392000
@SA00009 DS    15F                                                      05393000
@SA00030 DS    15F                                                      05394000
@PC00030 DS    2F                                                       05395000
@SA00010 DS    15F                                                      05396000
@SA00012 DS    15F                                                      05397000
@SA00023 DS    15F                                                      05398000
@SA00013 DS    15F                                                      05399000
@SA00036 DS    15F                                                      05400000
@PC00036 DS    3F                                                       05401000
@PC00032 DS    2F                                                       05402000
@PC00033 DS    2F                                                       05403000
@SA00014 DS    15F                                                      05404000
@SA00015 DS    15F                                                      05405000
@SA00016 DS    15F                                                      05406000
@SA00017 DS    15F                                                      05407000
@SA00020 DS    15F                                                      05408000
@SA00019 DS    15F                                                      05409000
@PC00019 DS    1F                                                       05410000
@SA00018 DS    15F                                                      05411000
@SA00021 DS    15F                                                      05412000
@SA00024 DS    15F                                                      05413000
@SA00022 DS    15F                                                      05414000
@SA00025 DS    15F                                                      05415000
@SA00038 DS    15F                                                      05416000
@SA00039 DS    15F                                                      05417000
@AL00001 DS    3A                                                       05418000
@TF00001 DS    F                                                        05419000
@TF00002 DS    F                                                        05420000
@AFTEMPS DS    4F                                                       05421000
         DS    0F                                                       05422000
@CF00057 DC    F'1'                                                     05423000
@CH00057 EQU   @CF00057+2                                               05424000
@CF00075 DC    F'2'                                                     05425000
@CF00038 DC    F'3'                                                     05426000
@CH00038 EQU   @CF00038+2                                               05427000
@CF00037 DC    F'4'                                                     05428000
@CF00036 DC    F'5'                                                     05429000
@CH00036 EQU   @CF00036+2                                               05430000
@CF00080 DC    F'6'                                                     05431000
@CH00080 EQU   @CF00080+2                                               05432000
@CF00082 DC    F'7'                                                     05433000
@CF00067 DC    F'8'                                                     05434000
@CF00034 DC    F'11'                                                    05435000
@CF00033 DC    F'12'                                                    05436000
@CH00033 EQU   @CF00033+2                                               05437000
@CF00032 DC    F'15'                                                    05438000
@CF00088 DC    F'16'                                                    05439000
@CF00227 DC    F'24'                                                    05440000
@CF01708 DC    F'27'                                                    05441000
@CF00777 DC    F'53'                                                    05442000
@CF01706 DC    F'54'                                                    05443000
@CF01711 DC    F'55'                                                    05444000
@CF01519 DC    F'90'                                                    05445000
@CF01691 DC    F'10000'                                                 05446000
@CF01690 DC    F'10000000'                                              05447000
@CF01754 DC    F'-48'                                                   05448000
@CF01755 DC    F'-44'                                                   05449000
@CF01759 DC    F'-40'                                                   05450000
@CF01756 DC    F'-36'                                                   05451000
@CF01760 DC    F'-32'                                                   05452000
@CF01758 DC    F'-28'                                                   05453000
@CF01768 DC    F'-24'                                                   05454000
@CF01769 DC    F'-20'                                                   05455000
@CF01761 DC    F'-16'                                                   05456000
@CF01762 DC    F'-14'                                                   05457000
@CF01772 DC    F'-13'                                                   05458000
@CF01763 DC    F'-12'                                                   05459000
@CF01764 DC    F'-10'                                                   05460000
@CF01765 DC    F'-8'                                                    05461000
@CF01766 DC    F'-6'                                                    05462000
@CF01757 DC    F'-4'                                                    05463000
@CF01771 DC    F'-3'                                                    05464000
@CF01707 DC    XL4'FFFFF8'                                              05465000
         DS    0D                                                       05466000
SYWTSIOS DS    F                                                        05467000
MDRCT    DC    F'0'                                                     05468000
MYLINCT  DC    F'0'                                                     05469000
SAVEPARM DS    F                                                        05470000
CURRPTR  DS    A                                                        05471000
TABPTR   DS    A                                                        05472000
RETCODE  DS    F                                                        05473000
FREESIZE DC    F'8192'                                                  05474000
TOTREC   DC    F'0'                                                     05475000
OBRCT    DC    F'0'                                                     05476000
NUMSHORT DC    F'0'                                                     05477000
BADDEV   DC    F'0'                                                     05478000
BADDAY   DC    F'0'                                                     05479000
BADTIME  DC    F'0'                                                     05480000
DROP3RD  DC    F'0'                                                     05481000
BADCPU   DC    F'0'                                                     05482000
BADCUA   DC    F'0'                                                     05483000
BADVOL   DC    F'0'                                                     05484000
BADSER   DC    F'0'                                                     05485000
BADREC   DC    F'0'                                                     05486000
SHAREMOD DC    F'0'                                                     05487000
SHARECU  DC    F'0'                                                     05488000
Z        DC    F'0'                                                     05489000
L        DC    F'0'                                                     05490000
P        DC    F'0'                                                     05491000
X        DC    F'0'                                                     05492000
TOTALPTR DC    A(0)                                                     05493000
SUMPTR   DC    A(0)                                                     05494000
NUMENT   DC    F'0'                                                     05495000
SYSSIOS  DS    F                                                        05496000
SYSRDS   DS    F                                                        05497000
SYSRTS   DS    F                                                        05498000
SYSMNTS  DS    F                                                        05499000
SRTCONT  DC    F'0'                                                     05500000
CUAINDEX DS    F                                                        05501000
LHDATPTR DC    A(0)                                                     05502000
DATEPTR  DC    A(0)                                                     05503000
RECCOUNT DC    H'0'                                                     05504000
I        DS    H                                                        05505000
J        DS    H                                                        05506000
K        DS    H                                                        05507000
@TS00001 DS    CL16                                                     05508000
@CC00518 DC    C'TOTALS'                                                05509000
@CC00495 DC    C' N/A '                                                 05510000
@CC00520 DC    C'100+ '                                                 05511000
@CC00489 DC    C' 800'                                                  05512000
@CC00491 DC    C'1600'                                                  05513000
@CC00493 DC    C'6250'                                                  05514000
@CB00208 DC    X'0000'                                                  05515000
@CB00261 DC    X'FFFF'                                                  05516000
@CB00473 DC    X'000F'                                                  05517000
@CB00475 DC    X'0FF0'                                                  05518000
@CB00547 DC    X'8006'                                                  05519000
DEVCODE  DC    X'00'                                                    05520000
CHKCDE   DS    BL1                                                      05521000
         DS    CL4                                                      05522000
DBLWORD  DS    CL8                                                      05523000
WORK     DS    CL8                                                      05524000
RECCPU   DC    CL3' '                                                   05525000
RECCUA   DC    CL2' '                                                   05526000
RECDEV   DC    CL1' '                                                   05527000
READS    DS    CL1                                                      05528000
WRITES   DS    CL1                                                      05529000
SWITCH   DC    X'8000'                                                  05530000
         ORG   SWITCH                                                   05531000
SORTFLG  DS    BL1                                                      05532000
SWITCH1  EQU   SWITCH+0                                                 05533000
FOUND    EQU   SWITCH+0                                                 05534000
HEAD1    EQU   SWITCH+0                                                 05535000
HEAD2    EQU   SWITCH+0                                                 05536000
HEAD3    EQU   SWITCH+0                                                 05537000
VALIDSER EQU   SWITCH+0                                                 05538000
VALIDCPU EQU   SWITCH+0                                                 05539000
VALIDSHR DS    BL1                                                      05540000
VALIDCUA EQU   SWITCH+1                                                 05541000
VALIDVOL EQU   SWITCH+1                                                 05542000
VALIDCON EQU   SWITCH+1                                                 05543000
         ORG   SWITCH+2                                                 05544000
         DS    CL6                                                      05545000
TEMPAREA DS    CL20                                                     05546000
OLDCPUCU DS    CL6                                                      05547000
@NM00012 DS    CL5                                                      05548000
         ORG   @NM00012                                                 05549000
SHR74XXX DS    CL5                                                      05550000
         ORG   SHR74XXX                                                 05551000
SHR74CUA DS    BL2                                                      05552000
SHR74CPU DS    CL3                                                      05553000
         ORG   @NM00012+5                                               05554000
LOWCUA   DS    CL2                                                      05555000
HIGHCUA  DS    CL2                                                      05556000
LETTERS  DC    CL1'S'                                                   05557000
LETTERC  DC    CL1'C'                                                   05558000
HVOLDATE DC    X'000000'                                                05559000
LVOLDATE DC    X'FFFFFF'                                                05560000
CHARS    DC    CL16'0123456789ABCDEF'                                   05561000
BUG16    DC    CL31'DEBUG16 - INFORMATIONAL COUNTS'                     05562000
BUG10    DC    CL26'       TOTAL RECORDS FOUND'                         05563000
BUG20    DC    CL24'       OBR RECORDS FOUND'                           05564000
BUG21    DC    CL24'       MDR RECORDS FOUND'                           05565000
BUG30    DC    CL36'       SHORT RECORDS FOUND && DROPPED'              05566000
BUG31    DC    CL30'       DROPPED NOT DEVICE 34XX'                     05567000
BUG40    DC    CL37'       DROPPED, OUT OF THE DATE RANGE'              05568000
BUG50    DC    CL37'       DROPPED, OUT OF THE TIME RANGE'              05569000
BUG60    DC    CL33'       DROPPED DUE TO THIRD SHIFT'                  05570000
BUG70    DC    CL35'       DROPPED DUE TO CPU SELECTION'                05571000
BUG80    DC    CL35'       DROPPED DUE TO CUA SELECTION'                05572000
BUG90    DC    CL37'       DROPPED DUE TO VOLID SELECTION'              05573000
BUG8     DC    CL33'DEBUG8 HEX DUMP OF THE SORT TABLE'                  05574000
BUG100   DC    CL45'       DROPPED DUE TO DEVICE SERIAL SELECTION'      05575000
BUG110   DC    CL66'       CUAS AT THE CONTROLLER LEVEL MODIFIED DUE TOC05576000
                SHARE CARDS   '                                         05577000
BUG120   DC    CL56'       CUAS AT THE CUA LEVEL MODIFIED DUE TO SHARE C05578000
               CARDS'                                                   05579000
BUG130   DC    CL33'       RECORDS EXCEEDED THRESHOLD'                  05580000
BUG140   DC    CL30'       RECORDS WITH PERM ERROR'                     05581000
CUAPH1   DC    CL25'PERMANENT ERROR SUMMARY'                            05582000
CUAPH2   DC    CL11'...SENSE...'                                        05583000
CUAPH3   DC    CL42'1  1  1  1  1  1  1  1  1  1  2  2  2  2'           05584000
CUAPH4   DS    CL120                                                    05585000
         ORG   CUAPH4                                                   05586000
@NM00013 DC    CL40'DEV  SERIAL ERR  VOLID     LAST CCW     '           05587000
@NM00014 DC    CL40'CSW44-47  0  1  2  3  4  5  6  7  8  9  '           05588000
@NM00015 DC    CL40'0  1  2  3  4  5  6  7  8  9  0  1  2  3'           05589000
         ORG   CUAPH4+120                                               05590000
CUAPH5   DS    CL47                                                     05591000
         ORG   CUAPH5                                                   05592000
@NM00016 DC    CL33'NO PERMANENT ERRORS ENCOUNTERED:'                   05593000
CUAPH5D1 DC    CL5' '                                                   05594000
@NM00017 DC    CL4' TO'                                                 05595000
CUAPH5D2 DC    CL5' '                                                   05596000
         ORG   CUAPH5+47                                                05597000
CUAPH6   DS    CL99                                                     05598000
         ORG   CUAPH6                                                   05599000
@NM00018 DC    CL53' '                                                  05600000
@NM00019 DC    CL46'DATE        TIME       100         SYMP'            05601000
         ORG   CUAPH6+99                                                05602000
CUAPH7   DS    CL100                                                    05603000
         ORG   CUAPH7                                                   05604000
@NM00020 DC    CL40'DEV   ERR   VOL ID       LAST CCW'                  05605000
@NM00021 DC    CL36'CSW 44-47   DAY YR   HH MM SS TH'                   05606000
@NM00022 DC    CL24'IPS   LGM   CODE'                                   05607000
         ORG   CUAPH7+100                                               05608000
CUASH1   DC    CL44'XXXXX 34XX/3803/8809 SUBSYSTEM SUMMARY XXXXX'       05609000
CUASH2   DC    CL44'XXXXX    PRIMARY CUA       -           XXXXX'       05610000
CUASH3   DS    CL61                                                     05611000
         ORG   CUASH3                                                   05612000
@NM00023 DC    CL32'CUA STATISTICS - CUAS EXCEEDING '                   05613000
CUASH3R  DC    CL3' '                                                   05614000
@NM00024 DC    CL13' TEMP RDS OR '                                      05615000
CUASH3W  DC    CL3' '                                                   05616000
@NM00025 DC    CL10' TEMP WRTS'                                         05617000
         ORG   CUASH3+61                                                05618000
CUASH4   DS    CL130                                                    05619000
         ORG   CUASH4                                                   05620000
@NM00026 DC    CL10' '                                                  05621000
@NM00027 DC    CL50'TU    DATE   VOLUME     TIME      --TEMP--   SIO'   05622000
@NM00028 DC    CL50'DEN- NRZI  R/W WR TG  LRC  CRC  ECC  SKEW ERLY VEL' 05623000
@NM00029 DC    CL20'  ----CPU----  HDR'                                 05624000
         ORG   CUASH4+130                                               05625000
CUASH5   DS    CL129                                                    05626000
         ORG   CUASH5                                                   05627000
@NM00030 DC    CL2' '                                                   05628000
@NM00031 DC    CL52' CUA  SERIAL DAY YR  SERIAL  HH MM SS.TH   RDS WRTSC05629000
               '                                                        05630000
@NM00032 DC    CL52'COUNT SITY NOISE VRC  VRC   MTE  EDC  ENV  ERR  BORC05631000
               '                                                        05632000
@NM00033 DC    CL23' CHG   ID  SERIAL  SER'                             05633000
         ORG   CUASH5+129                                               05634000
CUASH6   DS    CL42                                                     05635000
         ORG   CUASH6                                                   05636000
@NM00034 DC    CL28'NO CUAS EXCEEDED THRESHOLD: '                       05637000
CUASH6D1 DC    CL5' '                                                   05638000
@NM00035 DC    CL4' TO '                                                05639000
CUASH6D2 DC    CL5' '                                                   05640000
         ORG   CUASH6+42                                                05641000
CUASH10  DS    CL101                                                    05642000
         ORG   CUASH10                                                  05643000
@NM00036 DC    CL37'       DATE   VOLUME     TIME'                      05644000
@NM00037 DC    CL64'  TEMP    SIO COUNT'                                05645000
         ORG   CUASH10+101                                              05646000
CUASH11  DS    CL108                                                    05647000
         ORG   CUASH11                                                  05648000
@NM00038 DC    CL35'CUA   DAY YR  SERIAL  HH MM SS TH'                  05649000
@NM00039 DC    CL36'  RDS WRTS  RDS  WRTS   MTE EDC SRC'                05650000
@NM00040 DC    CL37'RBF ENV NOP CRE SKEW VEL MODEL SERIAL'              05651000
         ORG   CUASH11+108                                              05652000
SPACER   DS    CL132                                                    05653000
         ORG   SPACER                                                   05654000
@NM00041 DC    132CL1'X'                                                05655000
         ORG   SPACER+132                                               05656000
VOLHEAD1 DS    CL104                                                    05657000
         ORG   VOLHEAD1                                                 05658000
@NM00042 DC    CL30'  VOLUME STATISTICS - VOLUMES'                      05659000
@NM00043 DC    CL10'EXCEEDING'                                          05660000
VOLH1R   DC    CL3' '                                                   05661000
@NM00044 DC    CL20' TEMPORARY READS OR'                                05662000
VOLH1W   DC    CL3' '                                                   05663000
@NM00045 DC    CL38' TEMPORARY WRITES OR PERMANENT ERRORS'              05664000
         ORG   VOLHEAD1+104                                             05665000
NOVOLS   DS    CL46                                                     05666000
         ORG   NOVOLS                                                   05667000
@NM00046 DC    CL32'NO VOLUMES EXCEEDED THRESHOLD:'                     05668000
VOLH5L   DC    CL5' '                                                   05669000
@NM00047 DC    CL4' TO '                                                05670000
VOLH5H   DC    CL5' '                                                   05671000
         ORG   NOVOLS+46                                                05672000
VOLH2    DS    CL132                                                    05673000
         ORG   VOLH2                                                    05674000
@NM00048 DC    CL32'VOLUME  DATE     TIME'                              05675000
@NM00049 DC    CL36'TU    RD/  --PERM--  --TEMP-- RD RTR'               05676000
@NM00050 DC    CL3'Y/'                                                  05677000
@NM00051 DC    CL37'ERASE  SIO COUNT BLOCK  PROGRAM  ----'              05678000
@NM00052 DC    CL24'CPU----  MOD  DEN- HDR'                             05679000
         ORG   VOLH2+132                                                05680000
VOLH3    DS    CL132                                                    05681000
         ORG   VOLH3                                                    05682000
@NM00053 DC    CL32'SERIAL DAY YR HH MM SS TH CUA  S'                   05683000
@NM00054 DC    CL36'ERIAL WRT  RDS WRTS  RDS WRTS CLNR A'               05684000
@NM00055 DC    CL3'CT'                                                  05685000
@NM00056 DC    CL37' GAPS  RDS  WRTS LENGTH   ID     ID  '              05686000
@NM00057 DC    CL24' SERIAL   #   SITY SER'                             05687000
         ORG   VOLH3+132                                                05688000
CUATH1   DC    CL48'34XX/3803/8809 SUBSYSTEM TEMPORARY ERROR SUMMARY'   05689000
CUATH2   DS    CL82                                                     05690000
         ORG   CUATH2                                                   05691000
@NM00058 DC    CL50' ERRORS/100K'                                       05692000
@NM00059 DC    CL16'READ'                                               05693000
@NM00060 DC    CL13'WRITE'                                              05694000
@NM00061 DC    CL3'ECC'                                                 05695000
         ORG   CUATH2+82                                                05696000
CUATH3   DS    CL108                                                    05697000
         ORG   CUATH3                                                   05698000
@NM00062 DC    CL34'SIOS           DATE      TOTAL'                     05699000
@NM00063 DC    CL41'TOTAL    STATISTICS       STATISTICS'               05700000
@NM00064 DC    CL33'VRC   STRD  PART   OVER  VEL  IBG'                  05701000
         ORG   CUATH3+108                                               05702000
CUATH4   DS    CL119                                                    05703000
         ORG   CUATH4                                                   05704000
@NM00065 DC    CL1' '                                                   05705000
@NM00066 DC    CL45'CUA   READ  WRITE  -FROM---TO--    SIOS   MOU'      05706000
@NM00067 DC    CL45'NTS. ERRORS  CLNRAC . ERRORS  ERSGAP . ENV'         05707000
@NM00068 DC    CL28'CHK   RECK   RUN   CHG  DET'                        05708000
         ORG   CUATH4+119                                               05709000
CUATH6   DS    CL92                                                     05710000
         ORG   CUATH6                                                   05711000
@NM00069 DC    CL51' ERRORS/100K'                                       05712000
@NM00070 DC    CL16'READ'                                               05713000
@NM00071 DC    CL25'WRITE'                                              05714000
         ORG   CUATH6+92                                                05715000
CUATH7   DS    CL91                                                     05716000
         ORG   CUATH7                                                   05717000
@NM00072 DC    CL29'SIOS         DATE      TOTAL'                       05718000
@NM00073 DC    CL34'SIOS    TOTAL     STATISTICS'                       05719000
@NM00074 DC    CL28'STATISTICS    OVER   VEL'                           05720000
         ORG   CUATH7+91                                                05721000
CUATH8   DS    CL99                                                     05722000
         ORG   CUATH8                                                   05723000
@NM00075 DC    CL36'CUA  READ  WRITE -FROM---TO--  READ'                05724000
@NM00076 DC    CL40'WRITE    MOUNTS  ERRORS RETRIES  ERRORS'            05725000
@NM00077 DC    CL23'ERS GAP  RUN    CHK'                                05726000
         ORG   CUATH8+99                                                05727000
NOTOTALS DC    CL32'NO TEMPORARY ERRORS ENCOUNTERED'                    05728000
MESSAGE  DS    CL134                                                    05729000
         ORG   MESSAGE                                                  05730000
MSGDS    DC    CL1'1'                                                   05731000
MSGCC    DC    CL1' '                                                   05732000
MSGADDR  DC    CL132' '                                                 05733000
         ORG   MSGADDR                                                  05734000
@NM00078 DS    CL8                                                      05735000
NUMRECP  DS    CL7                                                      05736000
         ORG   MESSAGE+134                                              05737000
CHAIN    DS    CL6                                                      05738000
         ORG   CHAIN                                                    05739000
CHAINCPU DS    CL3                                                      05740000
CHAINCUX DS    CL2                                                      05741000
CHAINDEV DS    CL1                                                      05742000
         ORG   CHAIN+6                                                  05743000
TEMPVOL  DS    CL6                                                      05744000
TEMPCUA  DS    CL2                                                      05745000
SUPERZAP DC    3CL10'SUPERZAP'                                          05746000
         DS    CL3                                                      05747000
EXCTHRES DC    F'0'                                                     05748000
         DS    1XL4                                                     05749000
MODNO    DC    CL1'1'                                                   05750000
         DC    CL1'2'                                                   05751000
         DC    CL1'3'                                                   05752000
         DC    CL1'3'                                                   05753000
         DC    CL1'5'                                                   05754000
         DC    CL1'7'                                                   05755000
         DC    5CL1' '                                                  05756000
         DC    CL1'4'                                                   05757000
         DC    CL1'6'                                                   05758000
         DC    CL1'8'                                                   05759000
         DC    2CL1' '                                                  05760000
ERRTABLE DC    CL34'PW  PERMANENT WRITE'                                05761000
         ORG   ERRTABLE+0                                               05762000
ERRTABC  DS    CL2                                                      05763000
         ORG   ERRTABLE+34                                              05764000
         DC    CL34'PR  PERMANENT READ'                                 05765000
         ORG   ERRTABLE+68                                              05766000
         DC    CL34'PF  CAUSE UNKNOWN'                                  05767000
         ORG   ERRTABLE+102                                             05768000
         DC    CL34'EC  EQUIPMENT CHECK, CAUSE UNKNOWN'                 05769000
         ORG   ERRTABLE+136                                             05770000
         DC    CL34'EE  ERASE HEAD'                                     05771000
         ORG   ERRTABLE+170                                             05772000
         DC    CL34'EB  TAPE BOTTOM, LEFT OR RIGHT'                     05773000
         ORG   ERRTABLE+204                                             05774000
         DC    CL34'EL  LOAD FAILURE'                                   05775000
         ORG   ERRTABLE+238                                             05776000
         DC    CL34'EP  AIR BEARING PRESSURE'                           05777000
         ORG   ERRTABLE+272                                             05778000
         DC    CL34'ET  TACH START FAILURE'                             05779000
         ORG   ERRTABLE+306                                             05780000
         DC    CL34'EV  VELOCITY CHECK'                                 05781000
         ORG   ERRTABLE+340                                             05782000
         DC    CL34'ER  RESET KEY'                                      05783000
         ORG   ERRTABLE+374                                             05784000
         DC    CL34'WC  WRITE CURRENT CHECK'                            05785000
         ORG   ERRTABLE+408                                             05786000
PATCH    DC    20H'0'                                                   05787000
IFCTHRSH CSECT                                                          05788000
         DC    S(SUPERZAP)                                              05789000
IFCTHRSH CSECT                                                          05790000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       05791000
@01      EQU   01                                                       05792000
@02      EQU   02                                                       05793000
@03      EQU   03                                                       05794000
@04      EQU   04                                                       05795000
@05      EQU   05                                                       05796000
@06      EQU   06                                                       05797000
@07      EQU   07                                                       05798000
@08      EQU   08                                                       05799000
@09      EQU   09                                                       05800000
@10      EQU   10                                                       05801000
@11      EQU   11                                                       05802000
@12      EQU   12                                                       05803000
@13      EQU   13                                                       05804000
@14      EQU   14                                                       05805000
@15      EQU   15                                                       05806000
R0       EQU   @00                                                      05807000
R1       EQU   @01                                                      05808000
R2       EQU   @02                                                      05809000
R6       EQU   @06                                                      05810000
R7       EQU   @07                                                      05811000
R8       EQU   @08                                                      05812000
R9       EQU   @09                                                      05813000
R12      EQU   @12                                                      05814000
R15      EQU   @15                                                      05815000
R10      EQU   @10                                                      05816000
R11      EQU   @11                                                      05817000
R13      EQU   @13                                                      05818000
R14      EQU   @14                                                      05819000
R3       EQU   @03                                                      05820000
R4       EQU   @04                                                      05821000
R5       EQU   @05                                                      05822000
IOHND    EQU   0                                                        05823000
IFCMSG   EQU   0                                                        05824000
PARM     EQU   0                                                        05825000
RECTYPE  EQU   PARM                                                     05826000
POBR     EQU   RECTYPE                                                  05827000
PTTYP    EQU   RECTYPE+1                                                05828000
SWITCHES EQU   PARM+2                                                   05829000
SHIFT3RD EQU   SWITCHES+1                                               05830000
DEBUG    EQU   PARM+4                                                   05831000
DEBUG4   EQU   DEBUG                                                    05832000
DEBUG8   EQU   DEBUG+1                                                  05833000
DEBUG11  EQU   DEBUG+1                                                  05834000
DEBUG12  EQU   DEBUG+1                                                  05835000
DEBUG16  EQU   DEBUG+2                                                  05836000
DEBUG27  EQU   DEBUG+3                                                  05837000
DEBUGA   EQU   PARM+8                                                   05838000
MISC     EQU   PARM+12                                                  05839000
PHIST    EQU   MISC                                                     05840000
PRINTES  EQU   MISC                                                     05841000
PLOGREC  EQU   MISC                                                     05842000
PASSFLAG EQU   MISC                                                     05843000
OPENCLSE EQU   PARM+13                                                  05844000
OPENIO   EQU   OPENCLSE                                                 05845000
CLOSEIO  EQU   OPENCLSE+2                                               05846000
CSERLOG  EQU   CLOSEIO                                                  05847000
CDRCTWRK EQU   CLOSEIO                                                  05848000
DATENOW  EQU   PARM+17                                                  05849000
STDT     EQU   PARM+23                                                  05850000
STDATE   EQU   STDT                                                     05851000
PSTD     EQU   STDATE+1                                                 05852000
ENDDT    EQU   PARM+31                                                  05853000
ENDDATE  EQU   ENDDT                                                    05854000
PEND     EQU   ENDDATE+1                                                05855000
STTIME1  EQU   PARM+39                                                  05856000
ENDTIME1 EQU   PARM+43                                                  05857000
STTIME2  EQU   PARM+47                                                  05858000
ENDTIME2 EQU   PARM+51                                                  05859000
STRTDATE EQU   PARM+55                                                  05860000
RDTHRSH  EQU   PARM+66                                                  05861000
WRTHRSH  EQU   PARM+69                                                  05862000
@NM00006 EQU   PARM+72                                                  05863000
@NM00007 EQU   PARM+75                                                  05864000
TABSIZE  EQU   PARM+80                                                  05865000
SORTNUM  EQU   PARM+84                                                  05866000
ERRID    EQU   PARM+92                                                  05867000
IDTIMEA  EQU   ERRID+6                                                  05868000
IDTIME   EQU   IDTIMEA                                                  05869000
CCHHRLNG EQU   PARM+112                                                 05870000
RECCCHHR EQU   CCHHRLNG                                                 05871000
LINECT   EQU   PARM+120                                                 05872000
ADIOHND  EQU   PARM+124                                                 05873000
ADIFCMSG EQU   PARM+128                                                 05874000
ADEDITB  EQU   PARM+132                                                 05875000
EVPTR    EQU   PARM+136                                                 05876000
SORTADR  EQU   PARM+140                                                 05877000
PRINTADR EQU   PARM+148                                                 05878000
CUAPTR   EQU   PARM+152                                                 05879000
DEVPTR   EQU   PARM+156                                                 05880000
MODPTR   EQU   PARM+160                                                 05881000
SERPTR   EQU   PARM+164                                                 05882000
VOLPTR   EQU   PARM+168                                                 05883000
CPUPTR   EQU   PARM+172                                                 05884000
CPCUAPTR EQU   PARM+176                                                 05885000
LIBADPTR EQU   PARM+180                                                 05886000
SYMCDPTR EQU   PARM+184                                                 05887000
SYSUMPTR EQU   PARM+188                                                 05888000
TRENPTR  EQU   PARM+192                                                 05889000
SHAREPTR EQU   PARM+196                                                 05890000
MERDCPTR EQU   PARM+208                                                 05891000
DUMPTABL EQU   PARM+228                                                 05892000
DUMPINFO EQU   DUMPTABL+4                                               05893000
TRENDONE EQU   0                                                        05894000
TREGEN   EQU   TRENDONE+8                                               05895000
TRECCH0  EQU   TREGEN+8                                                 05896000
TREND2   EQU   0                                                        05897000
TRENDKEY EQU   TREND2                                                   05898000
TRENDRT  EQU   TRENDKEY+1                                               05899000
TRENCPUS EQU   TRENDKEY+3                                               05900000
TRENDITM EQU   TRENDKEY+4                                               05901000
EVTABLE  EQU   0                                                        05902000
EVSTOP   EQU   EVTABLE                                                  05903000
EVKEY    EQU   EVTABLE+6                                                05904000
SORTABLE EQU   0                                                        05905000
SORTKEY  EQU   SORTABLE                                                 05906000
SORTCCHR EQU   SORTABLE+5                                               05907000
SYSUMONE EQU   0                                                        05908000
SYSUM2   EQU   0                                                        05909000
SYSUMKEY EQU   SYSUM2                                                   05910000
SYSRT    EQU   SYSUMKEY+1                                               05911000
SYSCPUS  EQU   SYSUMKEY+3                                               05912000
SYSITEM  EQU   SYSUMKEY+4                                               05913000
SHARE    EQU   0                                                        05914000
SHARENUM EQU   SHARE                                                    05915000
SHAREIO  EQU   SHARE+2                                                  05916000
SHAREFLG EQU   SHAREIO                                                  05917000
SHRBASE  EQU   SHAREIO+1                                                05918000
SHARSERB EQU   SHRBASE                                                  05919000
SHRCUABL EQU   SHRBASE+3                                                05920000
SHRCUABH EQU   SHRBASE+5                                                05921000
SHRCUCPU EQU   SHAREIO+8                                                05922000
SHARSERA EQU   SHRCUCPU                                                 05923000
SHRCUAAL EQU   SHRCUCPU+3                                               05924000
SHRCUAAH EQU   SHRCUCPU+5                                               05925000
EDITLOAD EQU   0                                                        05926000
EDITABLE EQU   EDITLOAD+4                                               05927000
CUA      EQU   0                                                        05928000
CUANUM   EQU   CUA                                                      05929000
CUAVAL   EQU   CUA+2                                                    05930000
CUA1     EQU   CUAVAL                                                   05931000
CUA2     EQU   CUAVAL+2                                                 05932000
DEVICE   EQU   0                                                        05933000
DEVNUM   EQU   DEVICE                                                   05934000
DEVVAL   EQU   DEVICE+2                                                 05935000
MDRNUM   EQU   DEVICE+202                                               05936000
MDRVAL   EQU   DEVICE+204                                               05937000
MODELS   EQU   0                                                        05938000
DEVSERAL EQU   0                                                        05939000
SERNUM   EQU   DEVSERAL                                                 05940000
SERVAL   EQU   DEVSERAL+2                                               05941000
VOLUME   EQU   0                                                        05942000
VOLNUM   EQU   VOLUME                                                   05943000
VOLVAL   EQU   VOLUME+2                                                 05944000
CPUS     EQU   0                                                        05945000
CPUNUM   EQU   CPUS                                                     05946000
CPUVAL   EQU   CPUS+2                                                   05947000
CPUCUAS  EQU   0                                                        05948000
CPUCUAV  EQU   CPUCUAS+2                                                05949000
LIBADR   EQU   0                                                        05950000
SYMCODE  EQU   0                                                        05951000
SYMVAL   EQU   SYMCODE+2                                                05952000
MERIDIAN EQU   0                                                        05953000
CONTRTAB EQU   0                                                        05954000
CONTRVOL EQU   CONTRTAB                                                 05955000
SORTCPUC EQU   CONTRVOL                                                 05956000
CONTRCUA EQU   SORTCPUC                                                 05957000
EOTABLE  EQU   CONTRCUA                                                 05958000
CPU      EQU   SORTCPUC+2                                               05959000
DEVTYPE  EQU   SORTCPUC+5                                               05960000
TYPE     EQU   CONTRVOL+6                                               05961000
TABCCHHR EQU   CONTRTAB+7                                               05962000
SORTTAB  EQU   0                                                        05963000
BUFFER   EQU   0                                                        05964000
RECTYP   EQU   BUFFER                                                   05965000
SWITCHE  EQU   BUFFER+2                                                 05966000
SW2      EQU   SWITCHE+1                                                05967000
EOD      EQU   SW2                                                      05968000
SHORT    EQU   SW2                                                      05969000
DISMNT   EQU   SW2                                                      05970000
DATE     EQU   BUFFER+8                                                 05971000
TIME     EQU   BUFFER+12                                                05972000
CPUIDENT EQU   BUFFER+17                                                05973000
CPUSER   EQU   CPUIDENT                                                 05974000
CPUMOD   EQU   CPUIDENT+3                                               05975000
JOBID    EQU   BUFFER+24                                                05976000
FAILCCW  EQU   BUFFER+32                                                05977000
CCWBYT0  EQU   FAILCCW                                                  05978000
CSW      EQU   BUFFER+44                                                05979000
CSW34XX  EQU   CSW                                                      05980000
SECUA    EQU   BUFFER+49                                                05981000
SECUA2   EQU   SECUA+1                                                  05982000
ODEVICE  EQU   BUFFER+52                                                05983000
DEV2     EQU   ODEVICE+2                                                05984000
OCUA     EQU   BUFFER+57                                                05985000
OCUA2    EQU   OCUA+1                                                   05986000
SNSCNT   EQU   BUFFER+62                                                05987000
VOLID    EQU   BUFFER+64                                                05988000
BLKLENG  EQU   BUFFER+70                                                05989000
HDRSER   EQU   BUFFER+72                                                05990000
READTH   EQU   BUFFER+76                                                05991000
RITETH   EQU   BUFFER+77                                                05992000
RECSIOS  EQU   BUFFER+78                                                05993000
SOPRWB   EQU   RECSIOS                                                  05994000
PERMRDS  EQU   BUFFER+80                                                05995000
SOIPSB   EQU   PERMRDS                                                  05996000
PERMRTS  EQU   BUFFER+81                                                05997000
RECERASE EQU   BUFFER+84                                                05998000
RECLEAN  EQU   BUFFER+86                                                05999000
NOISE    EQU   BUFFER+89                                                06000000
RWVRC    EQU   BUFFER+90                                                06001000
SOLGM    EQU   RWVRC                                                    06002000
MTELRCR  EQU   BUFFER+91                                                06003000
EDCCRC   EQU   BUFFER+92                                                06004000
SOWCHK1  EQU   EDCCRC                                                   06005000
SOWCHK2  EQU   EDCCRC                                                   06006000
RECVRC   EQU   BUFFER+93                                                06007000
RECOVER  EQU   BUFFER+94                                                06008000
CCOMVRC  EQU   BUFFER+95                                                06009000
@NM00161 EQU   BUFFER+96                                                06010000
RECSTRD  EQU   BUFFER+98                                                06011000
RECPART  EQU   BUFFER+99                                                06012000
RECIBG   EQU   BUFFER+100                                               06013000
EXPEARL  EQU   BUFFER+101                                               06014000
SOSYMCD  EQU   BUFFER+102                                               06015000
SOSYMP   EQU   SOSYMCD                                                  06016000
RECVEL   EQU   BUFFER+104                                               06017000
@NM00163 EQU   BUFFER+105                                               06018000
@NM00164 EQU   BUFFER+107                                               06019000
SENSE24  EQU   BUFFER+108                                               06020000
SENSE    EQU   SENSE24                                                  06021000
SENSBIT3 EQU   SENSE                                                    06022000
SENSBIT4 EQU   SENSE                                                    06023000
SENSBIT5 EQU   SENSE                                                    06024000
SENSBIT6 EQU   SENSE                                                    06025000
SENSBIT7 EQU   SENSE                                                    06026000
SMBUF    EQU   0                                                        06027000
SMDEV    EQU   SMBUF+4                                                  06028000
SMDATE   EQU   SMBUF+8                                                  06029000
SMIDENT  EQU   SMBUF+17                                                 06030000
SMCPSER  EQU   SMIDENT                                                  06031000
SMCPMDL  EQU   SMIDENT+3                                                06032000
SMCUA    EQU   SMBUF+24                                                 06033000
SMVOLID  EQU   SMBUF+26                                                 06034000
SMBLTH   EQU   SMBUF+32                                                 06035000
SMMUTE   EQU   SMBUF+42                                                 06036000
SMEDC    EQU   SMBUF+43                                                 06037000
SMSRC    EQU   SMBUF+44                                                 06038000
SMRBF    EQU   SMBUF+45                                                 06039000
SMENV    EQU   SMBUF+46                                                 06040000
SMNOP    EQU   SMBUF+47                                                 06041000
SMCRE    EQU   SMBUF+48                                                 06042000
SMSKEW   EQU   SMBUF+49                                                 06043000
SMVEL    EQU   SMBUF+53                                                 06044000
SMTRD    EQU   SMBUF+54                                                 06045000
SMTWRT   EQU   SMBUF+55                                                 06046000
SMRDSIO  EQU   SMBUF+56                                                 06047000
SMWTSIO  EQU   SMBUF+58                                                 06048000
SMOUNT   EQU   SMBUF+60                                                 06049000
SMOVRUN  EQU   SMBUF+61                                                 06050000
SMERGAP  EQU   SMBUF+62                                                 06051000
SMRDTRY  EQU   SMBUF+64                                                 06052000
SUMAREA  EQU   0                                                        06053000
NEXTCPU  EQU   SUMAREA                                                  06054000
SUMTEMP  EQU   SUMAREA+8                                                06055000
SIOS     EQU   SUMTEMP                                                  06056000
READER   EQU   SUMTEMP+4                                                06057000
CLEANER  EQU   SUMTEMP+8                                                06058000
WRITER   EQU   SUMTEMP+12                                               06059000
ERASE    EQU   SUMTEMP+16                                               06060000
MOUNTS   EQU   SUMTEMP+20                                               06061000
WTSIOS   EQU   SUMTEMP+24                                               06062000
SRDTRYS  EQU   SUMTEMP+28                                               06063000
VRC      EQU   SUMTEMP+32                                               06064000
STRDCHK  EQU   SUMTEMP+34                                               06065000
PARTRECK EQU   SUMTEMP+36                                               06066000
OVERRUNS EQU   SUMTEMP+38                                               06067000
VELCHGS  EQU   SUMTEMP+40                                               06068000
IBG      EQU   SUMTEMP+42                                               06069000
FDATE    EQU   SUMTEMP+44                                               06070000
TDATE    EQU   SUMTEMP+47                                               06071000
CPUCUX   EQU   SUMAREA+904                                              06072000
CUX      EQU   CPUCUX+3                                                 06073000
DATEAREA EQU   0                                                        06074000
NEXTDATE EQU   DATEAREA                                                 06075000
DATECC   EQU   DATEAREA+4                                               06076000
LOWDATE  EQU   DATEAREA+10                                              06077000
HIDATE   EQU   DATEAREA+13                                              06078000
TYPEENT  EQU   0                                                        06079000
BWORD1   EQU   0                                                        06080000
DADDR1   EQU   0                                                        06081000
BWORD2   EQU   0                                                        06082000
DADDR2   EQU   0                                                        06083000
BWORD3   EQU   0                                                        06084000
DADDR3   EQU   0                                                        06085000
BINWORD  EQU   0                                                        06086000
DECADDR  EQU   0                                                        06087000
NEXTBYTE EQU   0                                                        06088000
ADDNUM   EQU   0                                                        06089000
LENNUM   EQU   0                                                        06090000
DIVEND   EQU   0                                                        06091000
DIVSOR   EQU   0                                                        06092000
OUTLOC   EQU   0                                                        06093000
WORKOVER EQU   WORK                                                     06094000
SUMPTRC  EQU   SUMPTR                                                   06095000
CUASH2C  EQU   CUASH2+23                                                06096000
CUASH2C2 EQU   CUASH2+28                                                06097000
@NM00079 EQU   MSGADDR                                                  06098000
OUTCUA   EQU   @NM00079+3                                               06099000
TUSER    EQU   @NM00079+9                                               06100000
DAY      EQU   @NM00079+15                                              06101000
YEAR     EQU   @NM00079+19                                              06102000
OVOLUME  EQU   @NM00079+23                                              06103000
HH       EQU   @NM00079+31                                              06104000
MM       EQU   @NM00079+34                                              06105000
SS       EQU   @NM00079+37                                              06106000
POINT    EQU   @NM00079+39                                              06107000
TH       EQU   @NM00079+40                                              06108000
OREADS   EQU   @NM00079+43                                              06109000
WRTS     EQU   @NM00079+48                                              06110000
SIOCNT   EQU   @NM00079+54                                              06111000
DENSITY  EQU   @NM00079+60                                              06112000
NRZIN    EQU   @NM00079+65                                              06113000
ORWVRC   EQU   @NM00079+70                                              06114000
WRTGVRC  EQU   @NM00079+75                                              06115000
LRCMTE   EQU   @NM00079+80                                              06116000
CRCEDC   EQU   @NM00079+85                                              06117000
ECCENV   EQU   @NM00079+90                                              06118000
SKEWERR  EQU   @NM00079+96                                              06119000
ERLYBOR  EQU   @NM00079+101                                             06120000
OVELCHG  EQU   @NM00079+106                                             06121000
MCPU     EQU   @NM00079+112                                             06122000
SERCPU   EQU   @NM00079+117                                             06123000
HEADSER  EQU   @NM00079+124                                             06124000
@NM00096 EQU   MSGADDR                                                  06125000
OUTDEV   EQU   @NM00096                                                 06126000
OUTSER   EQU   @NM00096+6                                               06127000
OUTERR   EQU   @NM00096+12                                              06128000
PVOL     EQU   @NM00096+16                                              06129000
PCCW     EQU   @NM00096+23                                              06130000
PCSW     EQU   @NM00096+40                                              06131000
PSNS     EQU   @NM00096+48                                              06132000
PSNSB    EQU   PSNS+1                                                   06133000
@NM00103 EQU   MSGADDR                                                  06134000
VVOLUME  EQU   @NM00103                                                 06135000
VDAY     EQU   @NM00103+7                                               06136000
VYEAR    EQU   @NM00103+11                                              06137000
VHH      EQU   @NM00103+14                                              06138000
VMM      EQU   @NM00103+17                                              06139000
VSS      EQU   @NM00103+20                                              06140000
VPOINT   EQU   @NM00103+22                                              06141000
VTH      EQU   @NM00103+23                                              06142000
VCUA     EQU   @NM00103+26                                              06143000
VTUSER   EQU   @NM00103+30                                              06144000
VRDWRT   EQU   @NM00103+38                                              06145000
VPRDS    EQU   @NM00103+40                                              06146000
VPRTS    EQU   @NM00103+45                                              06147000
VTRDS    EQU   @NM00103+50                                              06148000
VTRTS    EQU   @NM00103+55                                              06149000
VCLEAN   EQU   @NM00103+63                                              06150000
VRETRY   EQU   VCLEAN                                                   06151000
VERASE   EQU   @NM00103+71                                              06152000
VSIOS    EQU   @NM00103+77                                              06153000
VCWRTS   EQU   @NM00103+83                                              06154000
VBLOCK   EQU   @NM00103+89                                              06155000
VPGMID   EQU   @NM00103+95                                              06156000
VCPUMOD  EQU   @NM00103+104                                             06157000
VCPUSER  EQU   @NM00103+109                                             06158000
VMODEL   EQU   @NM00103+116                                             06159000
VDENS    EQU   @NM00103+121                                             06160000
VHDRSER  EQU   @NM00103+126                                             06161000
@NM00122 EQU   MSGADDR                                                  06162000
@NM00123 EQU   @NM00122                                                 06163000
OUTCODE  EQU   @NM00123                                                 06164000
@NM00125 EQU   MSGADDR                                                  06165000
SUMT1    EQU   @NM00125                                                 06166000
SUMCUA   EQU   SUMT1+1                                                  06167000
READPERC EQU   @NM00125+7                                               06168000
RITEPERC EQU   @NM00125+14                                              06169000
SUMFDATE EQU   @NM00125+20                                              06170000
SUMTDATE EQU   @NM00125+27                                              06171000
SUMSIOS  EQU   @NM00125+34                                              06172000
SUMMNTS  EQU   @NM00125+43                                              06173000
SUMP1    EQU   @NM00125+49                                              06174000
SUMREAD  EQU   @NM00125+52                                              06175000
SUMCLEAN EQU   @NM00125+60                                              06176000
SUMP2    EQU   @NM00125+66                                              06177000
SUMWRITE EQU   @NM00125+69                                              06178000
SUMERASE EQU   @NM00125+77                                              06179000
SUMP3    EQU   @NM00125+83                                              06180000
SUMVRC   EQU   @NM00125+84                                              06181000
SUMSTRD  EQU   @NM00125+90                                              06182000
SUMPART  EQU   @NM00125+96                                              06183000
SUMOVER  EQU   @NM00125+102                                             06184000
SUMVEL   EQU   @NM00125+108                                             06185000
SUMIBG   EQU   @NM00125+114                                             06186000
OSER74XX EQU   SENSE24+15                                               06187000
@NM00171 EQU   MSGADDR                                                  06188000
SCCUA    EQU   @NM00171                                                 06189000
SCDAY    EQU   @NM00171+6                                               06190000
SCYEAR   EQU   @NM00171+10                                              06191000
SCSER    EQU   @NM00171+14                                              06192000
SCHH     EQU   @NM00171+22                                              06193000
SCMM     EQU   @NM00171+25                                              06194000
SCSS     EQU   @NM00171+28                                              06195000
SCPOINT  EQU   @NM00171+30                                              06196000
SCTH     EQU   @NM00171+31                                              06197000
SCRDS    EQU   @NM00171+34                                              06198000
SCWRTS   EQU   @NM00171+39                                              06199000
SCRDSIO  EQU   @NM00171+45                                              06200000
SCWTSIO  EQU   @NM00171+51                                              06201000
SCMTE    EQU   @NM00171+57                                              06202000
SCEDC    EQU   @NM00171+61                                              06203000
SCSRC    EQU   @NM00171+65                                              06204000
SCRBF    EQU   @NM00171+69                                              06205000
SCENV    EQU   @NM00171+73                                              06206000
SCNOP    EQU   @NM00171+77                                              06207000
SCCRE    EQU   @NM00171+81                                              06208000
SCSKEW   EQU   @NM00171+86                                              06209000
SCVEL    EQU   @NM00171+90                                              06210000
SCCPMDL  EQU   @NM00171+96                                              06211000
SCCPSER  EQU   @NM00171+102                                             06212000
@NM00193 EQU   MSGADDR                                                  06213000
SPCUA    EQU   @NM00193                                                 06214000
SPERR    EQU   @NM00193+6                                               06215000
SPVOLID  EQU   @NM00193+12                                              06216000
SPCCW    EQU   @NM00193+21                                              06217000
SPCSW    EQU   @NM00193+40                                              06218000
SPDAY    EQU   @NM00193+52                                              06219000
SPYEAR   EQU   @NM00193+56                                              06220000
SPHH     EQU   @NM00193+61                                              06221000
SPMM     EQU   @NM00193+64                                              06222000
SPSS     EQU   @NM00193+67                                              06223000
SPPOINT  EQU   @NM00193+69                                              06224000
SPTH     EQU   @NM00193+70                                              06225000
SPIPS    EQU   @NM00193+77                                              06226000
SPLGM    EQU   @NM00193+83                                              06227000
SPSYMCD  EQU   @NM00193+88                                              06228000
@NM00206 EQU   MSGADDR                                                  06229000
STCUA    EQU   @NM00206+2                                               06230000
STRDPRC  EQU   @NM00206+7                                               06231000
STWTPRC  EQU   @NM00206+13                                              06232000
STFRDATE EQU   @NM00206+19                                              06233000
STTODATE EQU   @NM00206+26                                              06234000
STRDSIO  EQU   @NM00206+32                                              06235000
STWTSIO  EQU   @NM00206+38                                              06236000
STUMNTS  EQU   @NM00206+46                                              06237000
STRDERS  EQU   @NM00206+54                                              06238000
STRDTRES EQU   @NM00206+60                                              06239000
STWTERS  EQU   @NM00206+69                                              06240000
STERGAPS EQU   @NM00206+76                                              06241000
STOVRUN  EQU   @NM00206+86                                              06242000
STVELCHK EQU   @NM00206+91                                              06243000
TRECCH   EQU   TRECCH0                                                  06244000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    06245000
@NM00220 EQU   @NM00206+88                                              06246000
@NM00219 EQU   @NM00206+81                                              06247000
@NM00218 EQU   @NM00206+74                                              06248000
@NM00217 EQU   @NM00206+65                                              06249000
@NM00216 EQU   @NM00206+59                                              06250000
@NM00215 EQU   @NM00206+51                                              06251000
@NM00214 EQU   @NM00206+43                                              06252000
@NM00213 EQU   @NM00206+37                                              06253000
@NM00212 EQU   @NM00206+31                                              06254000
@NM00211 EQU   @NM00206+24                                              06255000
@NM00210 EQU   @NM00206+18                                              06256000
@NM00209 EQU   @NM00206+12                                              06257000
@NM00208 EQU   @NM00206+5                                               06258000
@NM00207 EQU   @NM00206                                                 06259000
@NM00205 EQU   @NM00193+84                                              06260000
@NM00204 EQU   @NM00193+78                                              06261000
@NM00203 EQU   @NM00193+72                                              06262000
@NM00202 EQU   @NM00193+66                                              06263000
@NM00201 EQU   @NM00193+63                                              06264000
@NM00200 EQU   @NM00193+58                                              06265000
@NM00199 EQU   @NM00193+55                                              06266000
@NM00198 EQU   @NM00193+48                                              06267000
@NM00197 EQU   @NM00193+37                                              06268000
@NM00196 EQU   @NM00193+18                                              06269000
@NM00195 EQU   @NM00193+8                                               06270000
@NM00194 EQU   @NM00193+4                                               06271000
@NM00192 EQU   @NM00171+99                                              06272000
@NM00191 EQU   @NM00171+92                                              06273000
@NM00190 EQU   @NM00171+88                                              06274000
@NM00189 EQU   @NM00171+84                                              06275000
@NM00188 EQU   @NM00171+80                                              06276000
@NM00187 EQU   @NM00171+76                                              06277000
@NM00186 EQU   @NM00171+72                                              06278000
@NM00185 EQU   @NM00171+68                                              06279000
@NM00184 EQU   @NM00171+64                                              06280000
@NM00183 EQU   @NM00171+60                                              06281000
@NM00182 EQU   @NM00171+56                                              06282000
@NM00181 EQU   @NM00171+50                                              06283000
@NM00180 EQU   @NM00171+43                                              06284000
@NM00179 EQU   @NM00171+38                                              06285000
@NM00178 EQU   @NM00171+33                                              06286000
@NM00177 EQU   @NM00171+27                                              06287000
@NM00176 EQU   @NM00171+24                                              06288000
@NM00175 EQU   @NM00171+20                                              06289000
@NM00174 EQU   @NM00171+12                                              06290000
@NM00173 EQU   @NM00171+9                                               06291000
@NM00172 EQU   @NM00171+4                                               06292000
@NM00144 EQU   @NM00125+113                                             06293000
@NM00143 EQU   @NM00125+107                                             06294000
@NM00142 EQU   @NM00125+101                                             06295000
@NM00141 EQU   @NM00125+95                                              06296000
@NM00140 EQU   @NM00125+89                                              06297000
@NM00139 EQU   @NM00125+82                                              06298000
@NM00138 EQU   @NM00125+74                                              06299000
@NM00137 EQU   @NM00125+67                                              06300000
@NM00136 EQU   @NM00125+65                                              06301000
@NM00135 EQU   @NM00125+57                                              06302000
@NM00134 EQU   @NM00125+50                                              06303000
@NM00133 EQU   @NM00125+48                                              06304000
@NM00132 EQU   @NM00125+42                                              06305000
@NM00131 EQU   @NM00125+32                                              06306000
@NM00130 EQU   @NM00125+25                                              06307000
@NM00129 EQU   @NM00125+19                                              06308000
@NM00128 EQU   @NM00125+12                                              06309000
@NM00127 EQU   @NM00125+6                                               06310000
@NM00126 EQU   SUMT1                                                    06311000
@NM00124 EQU   @NM00123+34                                              06312000
@NM00121 EQU   @NM00103+115                                             06313000
@NM00120 EQU   @NM00103+108                                             06314000
@NM00119 EQU   @NM00103+103                                             06315000
@NM00118 EQU   @NM00103+94                                              06316000
@NM00117 EQU   @NM00103+88                                              06317000
@NM00116 EQU   @NM00103+82                                              06318000
@NM00115 EQU   @NM00103+76                                              06319000
@NM00114 EQU   @NM00103+68                                              06320000
@NM00113 EQU   @NM00103+60                                              06321000
@NM00112 EQU   @NM00103+39                                              06322000
@NM00111 EQU   @NM00103+35                                              06323000
@NM00110 EQU   @NM00103+29                                              06324000
@NM00109 EQU   @NM00103+25                                              06325000
@NM00108 EQU   @NM00103+19                                              06326000
@NM00107 EQU   @NM00103+16                                              06327000
@NM00106 EQU   @NM00103+13                                              06328000
@NM00105 EQU   @NM00103+10                                              06329000
@NM00104 EQU   @NM00103+6                                               06330000
@NM00102 EQU   PSNS                                                     06331000
@NM00101 EQU   @NM00096+39                                              06332000
@NM00100 EQU   @NM00096+22                                              06333000
@NM00099 EQU   @NM00096+14                                              06334000
@NM00098 EQU   @NM00096+11                                              06335000
@NM00097 EQU   @NM00096+3                                               06336000
@NM00095 EQU   @NM00079+123                                             06337000
@NM00094 EQU   @NM00079+116                                             06338000
@NM00093 EQU   @NM00079+111                                             06339000
@NM00092 EQU   @NM00079+95                                              06340000
@NM00091 EQU   @NM00079+64                                              06341000
@NM00090 EQU   @NM00079+59                                              06342000
@NM00089 EQU   @NM00079+53                                              06343000
@NM00088 EQU   @NM00079+42                                              06344000
@NM00087 EQU   @NM00079+36                                              06345000
@NM00086 EQU   @NM00079+33                                              06346000
@NM00085 EQU   @NM00079+29                                              06347000
@NM00084 EQU   @NM00079+21                                              06348000
@NM00083 EQU   @NM00079+18                                              06349000
@NM00082 EQU   @NM00079+14                                              06350000
@NM00081 EQU   @NM00079+6                                               06351000
@NM00080 EQU   @NM00079                                                 06352000
@NM00221 EQU   CPUCUX+5                                                 06353000
CPUMSER  EQU   CPUCUX                                                   06354000
@NM00170 EQU   SMBUF+50                                                 06355000
@NM00169 EQU   SMBUF+34                                                 06356000
@NM00168 EQU   SMBUF+22                                                 06357000
@NM00167 EQU   SMBUF+16                                                 06358000
SMTIME   EQU   SMBUF+12                                                 06359000
@NM00166 EQU   SMBUF+5                                                  06360000
@NM00165 EQU   SMBUF                                                    06361000
SENSBIT2 EQU   SENSE                                                    06362000
SENSBIT1 EQU   SENSE                                                    06363000
SENSBIT0 EQU   SENSE                                                    06364000
ALUHRDER EQU   @NM00164                                                 06365000
BUSOCHK  EQU   @NM00164                                                 06366000
BACKWARD EQU   BUFFER+106                                               06367000
EXP3     EQU   @NM00163                                                 06368000
EXP3A    EQU   @NM00163                                                 06369000
VELCHNG  EQU   RECVEL                                                   06370000
EXP2     EQU   RECVEL                                                   06371000
VELRETRY EQU   SOSYMCD+1                                                06372000
SLWNDRD  EQU   SOSYMCD+1                                                06373000
SLBGRD   EQU   SOSYMP                                                   06374000
EARLNDRD EQU   SOSYMP                                                   06375000
EARLBGRD EQU   EXPEARL                                                  06376000
EXP      EQU   EXPEARL                                                  06377000
FEEDTHRU EQU   RECIBG                                                   06378000
ORDROP   EQU   RECIBG                                                   06379000
EXCPAMB  EQU   RECPART                                                  06380000
PARTREC  EQU   RECPART                                                  06381000
@NM00162 EQU   RECSTRD                                                  06382000
WRTTMCHK EQU   RECSTRD                                                  06383000
TRKINERR EQU   BUFFER+97                                                06384000
PARITY   EQU   @NM00161                                                 06385000
MASKEXP  EQU   @NM00161                                                 06386000
PEIDCHK  EQU   @NM00161                                                 06387000
WRTTRVRC EQU   CCOMVRC                                                  06388000
CCOMPARE EQU   CCOMVRC                                                  06389000
SKEWCHK  EQU   RECOVER                                                  06390000
OVERRUN  EQU   RECOVER                                                  06391000
@NM00160 EQU   EDCCRC                                                   06392000
@NM00159 EQU   RWVRC                                                    06393000
SPAR     EQU   BUFFER+88                                                06394000
SOSNS14  EQU   RECLEAN                                                  06395000
@NM00158 EQU   BUFFER+83                                                06396000
NOISEBLK EQU   BUFFER+82                                                06397000
@NM00157 EQU   PERMRDS                                                  06398000
@NM00156 EQU   BUFFER+74                                                06399000
IORETRY  EQU   BUFFER+60                                                06400000
@NM00155 EQU   OCUA                                                     06401000
@NM00154 EQU   BUFFER+56                                                06402000
@NM00153 EQU   ODEVICE                                                  06403000
@NM00152 EQU   SECUA                                                    06404000
@NM00151 EQU   BUFFER+48                                                06405000
@NM00150 EQU   BUFFER+40                                                06406000
@NM00149 EQU   BUFFER+22                                                06407000
CPUVER   EQU   BUFFER+16                                                06408000
@NM00148 EQU   BUFFER+4                                                 06409000
@NM00147 EQU   SW2                                                      06410000
@NM00146 EQU   SW2                                                      06411000
@NM00145 EQU   SWITCHE                                                  06412000
SYSREL   EQU   BUFFER+1                                                 06413000
MODEL    EQU   MERIDIAN+2                                               06414000
MRDNUMBR EQU   MERIDIAN                                                 06415000
SYMVAL2  EQU   SYMVAL+2                                                 06416000
SYMVAL1  EQU   SYMVAL                                                   06417000
SYMCDNUM EQU   SYMCODE                                                  06418000
LIBVAL   EQU   LIBADR+2                                                 06419000
LIBADNUM EQU   LIBADR                                                   06420000
CPUCUX3  EQU   CPUCUAV+5                                                06421000
CPUCUX2  EQU   CPUCUAV+3                                                06422000
CPUCUX1  EQU   CPUCUAV                                                  06423000
CPCUANUM EQU   CPUCUAS                                                  06424000
MODVAL   EQU   MODELS+2                                                 06425000
MODNUM   EQU   MODELS                                                   06426000
LOADPTR  EQU   EDITABLE+8                                               06427000
LOADNAME EQU   EDITABLE                                                 06428000
EDITNUM  EQU   EDITLOAD                                                 06429000
SHARLET  EQU   SHAREIO+15                                               06430000
SYSTEMP  EQU   SYSUM2+10                                                06431000
SYSPERM  EQU   SYSUM2+8                                                 06432000
SYSRANGE EQU   SYSUM2+7                                                 06433000
SYSDEV   EQU   SYSUM2+5                                                 06434000
SYSOLDA  EQU   SYSITEM                                                  06435000
SYS3705  EQU   SYSITEM                                                  06436000
SYSOLD   EQU   SYSCPUS                                                  06437000
SYSCPU   EQU   SYSCPUS                                                  06438000
SYSTROLL EQU   SYSRT+1                                                  06439000
SYSSPAN  EQU   SYSRT+1                                                  06440000
SYSCUA   EQU   SYSRT                                                    06441000
SYSGROUP EQU   SYSUMKEY                                                 06442000
SYSUMEOD EQU   SYSUMONE+96                                              06443000
SYSUMPER EQU   SYSUMONE+92                                              06444000
SYSUMPEA EQU   SYSUMONE+88                                              06445000
SYSUMPEI EQU   SYSUMONE+84                                              06446000
SYSUMCH  EQU   SYSUMONE+20                                              06447000
SYSUMMCN EQU   SYSUMONE+16                                              06448000
SYSUMMCR EQU   SYSUMONE+12                                              06449000
SYSUMNXT EQU   SYSUMONE+8                                               06450000
SYSUMIPL EQU   SYSUMONE+4                                               06451000
SYSUMNUM EQU   SYSUMONE                                                 06452000
SORTCORE EQU   SORTCCHR                                                 06453000
SORTTIME EQU   SORTKEY+1                                                06454000
SORTYEAR EQU   SORTKEY                                                  06455000
EVLETTER EQU   EVKEY+5                                                  06456000
EVSERIAL EQU   EVKEY+2                                                  06457000
EVMODEL  EQU   EVKEY                                                    06458000
EVNUM    EQU   EVTABLE+4                                                06459000
EVDAY    EQU   EVSTOP+1                                                 06460000
EVYEAR   EQU   EVSTOP                                                   06461000
TRETMP   EQU   TREND2+10                                                06462000
TREPRM   EQU   TREND2+8                                                 06463000
TRENDDEV EQU   TREND2+6                                                 06464000
TRENDDAT EQU   TRENDKEY+5                                               06465000
TRENDOD  EQU   TRENDITM                                                 06466000
TREND037 EQU   TRENDITM                                                 06467000
TRENDOLD EQU   TRENCPUS                                                 06468000
TRENDCPU EQU   TRENCPUS                                                 06469000
@NM00011 EQU   TRENDRT+1                                                06470000
TRENDCUA EQU   TRENDRT                                                  06471000
TRENDGRP EQU   TRENDKEY                                                 06472000
TREPRE   EQU   TREGEN+72                                                06473000
TRECCHF  EQU   TREGEN+68                                                06474000
TRECCHE  EQU   TREGEN+64                                                06475000
TRECCHD  EQU   TREGEN+60                                                06476000
TRECCHC  EQU   TREGEN+56                                                06477000
TRECCHB  EQU   TREGEN+52                                                06478000
TRECCHA  EQU   TREGEN+48                                                06479000
TRECCH9  EQU   TREGEN+44                                                06480000
TRECCH8  EQU   TREGEN+40                                                06481000
TRECCH7  EQU   TREGEN+36                                                06482000
TRECCH6  EQU   TREGEN+32                                                06483000
TRECCH5  EQU   TREGEN+28                                                06484000
TRECCH4  EQU   TREGEN+24                                                06485000
TRECCH3  EQU   TREGEN+20                                                06486000
TRECCH2  EQU   TREGEN+16                                                06487000
TRECCH1  EQU   TREGEN+12                                                06488000
TREMCH   EQU   TREGEN+4                                                 06489000
TREIPL   EQU   TREGEN                                                   06490000
TRENUM   EQU   TRENDONE+4                                               06491000
TRENEXT  EQU   TRENDONE                                                 06492000
DUMPSIZE EQU   DUMPINFO+4                                               06493000
DUMPADR  EQU   DUMPINFO                                                 06494000
DUMPNUM  EQU   DUMPTABL                                                 06495000
@NM00010 EQU   PARM+212                                                 06496000
RECLNGT1 EQU   PARM+204                                                 06497000
FRAMEPTR EQU   PARM+200                                                 06498000
ADCPUT   EQU   PARM+144                                                 06499000
RECLNGTH EQU   CCHHRLNG+6                                               06500000
@NM00009 EQU   CCHHRLNG+5                                               06501000
USERPGM  EQU   PARM+102                                                 06502000
IDTSEC   EQU   IDTIME+3                                                 06503000
IDSEC    EQU   IDTIME+2                                                 06504000
IDMIN    EQU   IDTIME+1                                                 06505000
IDHOUR   EQU   IDTIME                                                   06506000
IDASID   EQU   ERRID+4                                                  06507000
IDCPU    EQU   ERRID+3                                                  06508000
@NM00008 EQU   ERRID+2                                                  06509000
IDVALUE  EQU   ERRID                                                    06510000
NUMDAYS  EQU   PARM+88                                                  06511000
SYSRETRN EQU   @NM00007                                                 06512000
NUMIN222 EQU   @NM00006                                                 06513000
TERM     EQU   PARM+58                                                  06514000
EVSDAY   EQU   STRTDATE+1                                               06515000
EVSYEAR  EQU   STRTDATE                                                 06516000
PENSEC2  EQU   ENDTIME2+2                                               06517000
PENMIN2  EQU   ENDTIME2+1                                               06518000
PENHOUR2 EQU   ENDTIME2                                                 06519000
PSTSEC2  EQU   STTIME2+2                                                06520000
PSTMIN2  EQU   STTIME2+1                                                06521000
PSTHOUR2 EQU   STTIME2                                                  06522000
PENSEC1  EQU   ENDTIME1+2                                               06523000
PENMIN1  EQU   ENDTIME1+1                                               06524000
PENHOUR1 EQU   ENDTIME1                                                 06525000
PSTSEC1  EQU   STTIME1+2                                                06526000
PSTMIN1  EQU   STTIME1+1                                                06527000
PSTHOUR1 EQU   STTIME1                                                  06528000
@NM00005 EQU   ENDDT+4                                                  06529000
PENDY    EQU   PEND+1                                                   06530000
PENYR    EQU   PEND                                                     06531000
@NM00004 EQU   ENDDATE                                                  06532000
@NM00003 EQU   STDT+4                                                   06533000
PSTDY    EQU   PSTD+1                                                   06534000
PSTYR    EQU   PSTD                                                     06535000
@NM00002 EQU   STDATE                                                   06536000
YEARNOW  EQU   DATENOW+4                                                06537000
@NM00001 EQU   DATENOW+3                                                06538000
DAYNOW   EQU   DATENOW                                                  06539000
CSNAP    EQU   CLOSEIO                                                  06540000
CSYSIN   EQU   CLOSEIO                                                  06541000
CACCDEV  EQU   CLOSEIO                                                  06542000
CACCIN   EQU   CLOSEIO                                                  06543000
CEREPPT  EQU   CLOSEIO                                                  06544000
CTOURIST EQU   CLOSEIO                                                  06545000
OSNAP    EQU   OPENIO                                                   06546000
ODRCTWRK EQU   OPENIO                                                   06547000
OSYSIN   EQU   OPENIO                                                   06548000
OACCDEV  EQU   OPENIO                                                   06549000
OACCIN   EQU   OPENIO                                                   06550000
OSERLOG  EQU   OPENIO                                                   06551000
OEREPPT  EQU   OPENIO                                                   06552000
OTOURIST EQU   OPENIO                                                   06553000
ERRORID  EQU   MISC                                                     06554000
PSUM     EQU   PRINTES                                                  06555000
PEDIT    EQU   PRINTES                                                  06556000
PACC     EQU   MISC                                                     06557000
PZERO    EQU   MISC                                                     06558000
DEBUG63  EQU   DEBUGA+3                                                 06559000
DEBUG62  EQU   DEBUGA+3                                                 06560000
DEBUG61  EQU   DEBUGA+3                                                 06561000
DEBUG60  EQU   DEBUGA+3                                                 06562000
DEBUG59  EQU   DEBUGA+3                                                 06563000
DEBUG58  EQU   DEBUGA+3                                                 06564000
DEBUG57  EQU   DEBUGA+3                                                 06565000
DEBUG56  EQU   DEBUGA+3                                                 06566000
DEBUG55  EQU   DEBUGA+2                                                 06567000
DEBUG54  EQU   DEBUGA+2                                                 06568000
DEBUG53  EQU   DEBUGA+2                                                 06569000
DEBUG52  EQU   DEBUGA+2                                                 06570000
DEBUG51  EQU   DEBUGA+2                                                 06571000
DEBUG50  EQU   DEBUGA+2                                                 06572000
DEBUG49  EQU   DEBUGA+2                                                 06573000
DEBUG48  EQU   DEBUGA+2                                                 06574000
DEBUG47  EQU   DEBUGA+1                                                 06575000
DEBUG46  EQU   DEBUGA+1                                                 06576000
DEBUG45  EQU   DEBUGA+1                                                 06577000
DEBUG44  EQU   DEBUGA+1                                                 06578000
DEBUG43  EQU   DEBUGA+1                                                 06579000
DEBUG42  EQU   DEBUGA+1                                                 06580000
DEBUG41  EQU   DEBUGA+1                                                 06581000
DEBUG40  EQU   DEBUGA+1                                                 06582000
DEBUG39  EQU   DEBUGA                                                   06583000
DEBUG38  EQU   DEBUGA                                                   06584000
DEBUG37  EQU   DEBUGA                                                   06585000
DEBUG36  EQU   DEBUGA                                                   06586000
DEBUG35  EQU   DEBUGA                                                   06587000
DEBUG34  EQU   DEBUGA                                                   06588000
DEBUG33  EQU   DEBUGA                                                   06589000
DEBUG32  EQU   DEBUGA                                                   06590000
DEBUG31  EQU   DEBUG+3                                                  06591000
DEBUG30  EQU   DEBUG+3                                                  06592000
DEBUG29  EQU   DEBUG+3                                                  06593000
DEBUG28  EQU   DEBUG+3                                                  06594000
DEBUG26  EQU   DEBUG+3                                                  06595000
DEBUG25  EQU   DEBUG+3                                                  06596000
DEBUG24  EQU   DEBUG+3                                                  06597000
DEBUG23  EQU   DEBUG+2                                                  06598000
DEBUG22  EQU   DEBUG+2                                                  06599000
DEBUG21  EQU   DEBUG+2                                                  06600000
DEBUG20  EQU   DEBUG+2                                                  06601000
DEBUG19  EQU   DEBUG+2                                                  06602000
DEBUG18  EQU   DEBUG+2                                                  06603000
DEBUG17  EQU   DEBUG+2                                                  06604000
DEBUG15  EQU   DEBUG+1                                                  06605000
DEBUG14  EQU   DEBUG+1                                                  06606000
DEBUG13  EQU   DEBUG+1                                                  06607000
DEBUG10  EQU   DEBUG+1                                                  06608000
DEBUG9   EQU   DEBUG+1                                                  06609000
DEBUG7   EQU   DEBUG                                                    06610000
DEBUG6   EQU   DEBUG                                                    06611000
DEBUG5   EQU   DEBUG                                                    06612000
DEBUG3   EQU   DEBUG                                                    06613000
DEBUG2   EQU   DEBUG                                                    06614000
DEBUG1   EQU   DEBUG                                                    06615000
DEBUG0   EQU   DEBUG                                                    06616000
SORTBRK  EQU   SWITCHES+1                                               06617000
COREFAIL EQU   SWITCHES+1                                               06618000
ANALYSIS EQU   SWITCHES+1                                               06619000
DEVEXCL  EQU   SWITCHES+1                                               06620000
ZEROALL  EQU   SWITCHES+1                                               06621000
NOTALL   EQU   SWITCHES+1                                               06622000
NOSDR    EQU   SWITCHES                                                 06623000
TIMESEQ  EQU   SWITCHES                                                 06624000
SYSUM    EQU   SWITCHES                                                 06625000
PARMTHR  EQU   SWITCHES                                                 06626000
TREND    EQU   SWITCHES                                                 06627000
SHORTOBR EQU   SWITCHES                                                 06628000
PARMMES  EQU   SWITCHES                                                 06629000
RDESUM   EQU   SWITCHES                                                 06630000
PCCHFRAM EQU   RECTYPE+1                                                06631000
PMCHFRAM EQU   RECTYPE+1                                                06632000
PEOD     EQU   RECTYPE                                                  06633000
PMIH     EQU   RECTYPE                                                  06634000
PDDR     EQU   RECTYPE                                                  06635000
PIPL     EQU   RECTYPE                                                  06636000
PSOFT    EQU   RECTYPE                                                  06637000
PCHAN    EQU   RECTYPE                                                  06638000
PMCH     EQU   RECTYPE                                                  06639000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      06640000
@RC00330 EQU   @RC00327                                                 06641000
@RC00328 EQU   @RC00327                                                 06642000
@RF00612 EQU   @EL00011                                                 06643000
@RF00634 EQU   @EL00012                                                 06644000
@RC00901 EQU   @RC00900                                                 06645000
@RC00897 EQU   @RC00865                                                 06646000
@RC00829 EQU   @EL00015                                                 06647000
@RF00981 EQU   @EL00017                                                 06648000
@RC00973 EQU   @EL00017                                                 06649000
@RC01000 EQU   @EL00018                                                 06650000
@RF01022 EQU   @EL00019                                                 06651000
@RF01039 EQU   @EL00020                                                 06652000
@RF01072 EQU   @EL00021                                                 06653000
@RC01096 EQU   @RC01095                                                 06654000
@RC01108 EQU   @RC01107                                                 06655000
@RC01114 EQU   @RC01105                                                 06656000
@RF01155 EQU   @EL00024                                                 06657000
@RC01162 EQU   @EL00024                                                 06658000
@RC01265 EQU   @RC01264                                                 06659000
@RF01369 EQU   @EL00034                                                 06660000
@RC01405 EQU   @EL00036                                                 06661000
@RC01420 EQU   @EL00037                                                 06662000
@RC01434 EQU   @EL00037                                                 06663000
@RC01455 EQU   @RC01453                                                 06664000
@RF01476 EQU   @EL00038                                                 06665000
@RF01511 EQU   @EL00038                                                 06666000
@RF01519 EQU   @EL00038                                                 06667000
@RC01517 EQU   @EL00038                                                 06668000
@RC01515 EQU   @EL00038                                                 06669000
@RC01513 EQU   @EL00038                                                 06670000
@PB00038 EQU   @PB00039                                                 06671000
@RF01554 EQU   @EL00039                                                 06672000
@RF01607 EQU   @RC01577                                                 06673000
@RF01628 EQU   @EL00001                                                 06674000
@RF00976 EQU   @RC00973                                                 06675000
@RF01003 EQU   @RC01000                                                 06676000
@RC01266 EQU   @RC01265                                                 06677000
@RC01426 EQU   @RC01420                                                 06678000
@RC01437 EQU   @RC01434                                                 06679000
@PB00037 EQU   @PB00038                                                 06680000
@RC01457 EQU   @RC01455                                                 06681000
@RC01267 EQU   @RC01266                                                 06682000
@PB00036 EQU   @PB00037                                                 06683000
@RC01459 EQU   @RC01457                                                 06684000
@PB00035 EQU   @PB00036                                                 06685000
@RC01461 EQU   @RC01459                                                 06686000
@PB00034 EQU   @PB00035                                                 06687000
@PB00033 EQU   @PB00034                                                 06688000
@PB00032 EQU   @PB00033                                                 06689000
@PB00031 EQU   @PB00032                                                 06690000
@PB00030 EQU   @PB00031                                                 06691000
@PB00029 EQU   @PB00030                                                 06692000
@PB00028 EQU   @PB00029                                                 06693000
@PB00027 EQU   @PB00028                                                 06694000
@PB00026 EQU   @PB00027                                                 06695000
@PB00025 EQU   @PB00026                                                 06696000
@PB00024 EQU   @PB00025                                                 06697000
@PB00023 EQU   @PB00024                                                 06698000
@PB00022 EQU   @PB00023                                                 06699000
@PB00021 EQU   @PB00022                                                 06700000
@PB00020 EQU   @PB00021                                                 06701000
@PB00019 EQU   @PB00020                                                 06702000
@PB00018 EQU   @PB00019                                                 06703000
@PB00017 EQU   @PB00018                                                 06704000
@PB00016 EQU   @PB00017                                                 06705000
@PB00015 EQU   @PB00016                                                 06706000
@PB00014 EQU   @PB00015                                                 06707000
@PB00013 EQU   @PB00014                                                 06708000
@PB00012 EQU   @PB00013                                                 06709000
@PB00011 EQU   @PB00012                                                 06710000
@PB00010 EQU   @PB00011                                                 06711000
@PB00009 EQU   @PB00010                                                 06712000
@PB00008 EQU   @PB00009                                                 06713000
@PB00007 EQU   @PB00008                                                 06714000
@PB00006 EQU   @PB00007                                                 06715000
@PB00005 EQU   @PB00006                                                 06716000
@PB00004 EQU   @PB00005                                                 06717000
@PB00003 EQU   @PB00004                                                 06718000
@PB00002 EQU   @PB00003                                                 06719000
@ENDDATA EQU   *                                                        06720000
         END   IFCTHRSH                                                 06721000
./  ADD  SSI=90101248,NAME=IFCTREND
         TITLE 'IFCTREND - SYSTEM SUMMARY FOR EREP PROCESSING'          00001000
IFCTREND CSECT ,                                                   0001 00002000
@MAINENT DS    0H                                                  0001 00003000
         USING *,@15                                               0001 00004000
         B     @PROLOG                                             0001 00005000
         DC    AL1(16)                                             0001 00006000
         DC    C'IFCTREND  79.011'                                 0001 00007000
         DROP  @15                                                      00008000
@PROLOG  ST    @14,12(,@13)                                        0001 00009000
         STM   @00,@12,20(@13)                                     0001 00010000
         BALR  @12,0                                               0001 00011000
@PSTART  LA    @11,4095(,@12)                                      0001 00012000
         LA    @10,4095(,@11)                                      0001 00013000
         USING @PSTART,@12                                         0001 00014000
         USING @PSTART+4095,@11                                    0001 00015000
         USING @PSTART+8190,@10                                    0001 00016000
         ST    @13,@SA00001+4                                      0001 00017000
         LA    @14,@SA00001                                        0001 00018000
         ST    @14,8(,@13)                                         0001 00019000
         LR    @13,@14                                             0001 00020000
*/********************************************************************/ 00021000
*/*                                                          @Z427VLS*/ 00022000
*/* THIS IS THE ROOT SEGMENT.                                @Z427VLS*/ 00023000
*/* IT EXECUTES THE PROCS WHICH PRINT PARTS 1 AND 2 OF THE TREND     */ 00024000
*/* REPORT.                                                  @Z427VLS*/ 00025000
*/*                                                          @Z427VLS*/ 00026000
*/* PART 1 - THE TRENDONE TABLE PROVIDES CPU ERROR DATA TO PRODUCE   */ 00027000
*/*          A SYSTEM OVERVIEW BY DAY, BY CPU.               @Z427VLS*/ 00028000
*/*                                                          @Z427VLS*/ 00029000
*  IF DEBUG4 = ON THEN       /*PRINT THE NAME AND THE COMPILE DATE   */ 00030000
         TM    DEBUG4(R2),B'00001000'                              0123 00031000
         BNO   @RF00123                                            0123 00032000
*   DO;                                                    /*@Z427VLS*/ 00033000
*R15 = R12 -27;                                            /*@0099VLS*/ 00034000
         LR    R15,R12                                             0125 00035000
         SL    R15,@CF00680                                        0125 00036000
*    DDTYPE = '1';                                         /*@Z427VLS*/ 00037000
         MVI   DDTYPE,C'1'                                         0126 00038000
*    GEN(MVC  PRTLINE(16),0(R15));                         /*@Z427VLS*/ 00039000
         MVC  PRTLINE(16),0(R15)                                        00040000
*    CALL PRINT2;                                          /*@Z427VLS*/ 00041000
         BAL   @14,PRINT2                                          0128 00042000
*    DDTYPE = '0';                                         /*@Z427VLS*/ 00043000
         MVI   DDTYPE,C'0'                                         0129 00044000
*   END;                                                   /*@Z427VLS*/ 00045000
*  IF DEBUG21 = ON THEN                                            0131 00046000
@RF00123 TM    DEBUG21(R2),B'00000100'                             0131 00047000
         BNO   @RF00131                                            0131 00048000
*   CALL HEXDUMP;                                          /*@Z427VLS*/ 00049000
         BAL   @14,HEXDUMP                                         0132 00050000
*  CALL HEADING1;            /* PRINT REPORT HEADING.        @Z427VLS*/ 00051000
@RF00131 BAL   @14,HEADING1                                        0133 00052000
*  CALL HEADING2;            /* PRINT DAY HEADING.           @Z427VLS*/ 00053000
         BAL   @14,HEADING2                                        0134 00054000
*  MYLINECT = FOUR;              /* LINECT AFTER HEADER      @ZA26429*/ 00055000
         MVC   MYLINECT(4),@CF00063                                0135 00056000
*  CALL CPUERREC;            /* PRINT ERROR COUNTS.          @Z427VLS*/ 00057000
         BAL   @14,CPUERREC                                        0136 00058000
*  CALL CPUMODSN;            /* PRINT CPU, MODEL, SERIAL NO. LIST.   */ 00059000
         BAL   @14,CPUMODSN                                        0137 00060000
*                            /* FREE TRENDONE STORAGE        @Z427VLS*/ 00061000
*/* PART 2 - THE TREND2 TABLE PROVIDES I/O SUBSYSTEM ERROR DATA TO   */ 00062000
*/*          PRODUCE A SUBSYSTEM SUMMARY BY DAY, BY CUA.     @Z427VLS*/ 00063000
*/*                                                          @Z427VLS*/ 00064000
*  IF SORTNUM ¬= ZERO & DEBUG51 ¬= ON THEN                         0138 00065000
         L     @03,SORTNUM(,R2)                                    0138 00066000
         LTR   @03,@03                                             0138 00067000
         BZ    @RF00138                                            0138 00068000
         TM    DEBUG51(R2),B'00010000'                             0138 00069000
         BO    @RF00138                                            0138 00070000
*    DO;                                                   /*@Z427VLS*/ 00071000
*      CALL INITPRT2;        /* INITIALIZE REPORT HEADING,PARAMETERS.*/ 00072000
         BAL   @14,INITPRT2                                        0140 00073000
*      CALL HEADING1;        /* PRINT REPORT HEADING.        @Z427VLS*/ 00074000
         BAL   @14,HEADING1                                        0141 00075000
*      CALL HEADING2;        /* PRINT DAY HEADING.           @Z427VLS*/ 00076000
         BAL   @14,HEADING2                                        0142 00077000
*      MYLINECT = FOUR;          /* LINECT AFTER HEADER      @ZA26429*/ 00078000
         MVC   MYLINECT(4),@CF00063                                0143 00079000
*      CALL CUAERREC;        /* SUMMARIZE ERROR COUNTS, PRINT.       */ 00080000
         BAL   @14,CUAERREC                                        0144 00081000
*      CALL CPUMODSN;        /* PRINT CPU, MODEL, SERIAL NO. LIST.   */ 00082000
         BAL   @14,CPUMODSN                                        0145 00083000
*    END;                                                  /*@Z427VLS*/ 00084000
*  IF DEBUG12 = ON THEN                                            0147 00085000
@RF00138 TM    DEBUG12(R2),B'00001000'                             0147 00086000
         BNO   @RF00147                                            0147 00087000
*    GEN(ABEND 340,DUMP);                                  /*@Z427VLS*/ 00088000
         ABEND 340,DUMP                                                 00089000
*  RESPECIFY (R15) RESTRICTED;                             /*@Z427VLS*/ 00090000
@RF00147 DS    0H                                                  0150 00091000
*  R15 = RETCODE;            /* NORMAL RETURN                @Z427VLS*/ 00092000
         LH    R15,RETCODE                                         0150 00093000
*  RESPECIFY (R15) UNRESTRICTED;                           /*@Z427VLS*/ 00094000
*  RETURN;                                                 /*@Z427VLS*/ 00095000
@EL00001 L     @13,4(,@13)                                         0152 00096000
@EF00001 DS    0H                                                  0152 00097000
@ER00001 L     @14,12(,@13)                                        0152 00098000
         LM    @00,@12,20(@13)                                     0152 00099000
         BR    @14                                                 0152 00100000
*/********************************************************************/ 00101000
*/*                                                          @Z427VLS*/ 00102000
*/* THIS PROC PRINTS THE REPORT HEADING FOR PARTS 1 AND 2.   @Z427VLS*/ 00103000
*/*                                                          @Z427VLS*/ 00104000
*HEADING1:  PROC;                                          /*@Z427VLS*/ 00105000
HEADING1 STM   @14,@12,@SA00002                                    0153 00106000
*  CALL PRINT2;              /* PRINT BLANK LINE - SKIP TO NEW PAGE  */ 00107000
         BAL   @14,PRINT2                                          0154 00108000
*  SPACING = SINGLE;                                       /*@Z427VLS*/ 00109000
         MVI   SPACING,X'09'                                       0155 00110000
*  LNESPACE = ONE;                                         /*@Z427VLS*/ 00111000
         MVC   LNESPACE(4),@CF00054                                0156 00112000
*  DAYSDATE = DATENOW;       /* MOVE REPORT DATE TO PRINT LINE       */ 00113000
         MVC   DAYSDATE(6),DATENOW(R2)                             0157 00114000
*  HEADMOVE = LINE1;         /* MOVE LINE 1 OF HEADING TO PRINT AREA */ 00115000
         MVC   HEADMOVE(57),LINE1                                  0158 00116000
*  CALL PRINT2;              /* PRINT HEADING - 1ST LINE  - NEW PAGE */ 00117000
         BAL   @14,PRINT2                                          0159 00118000
*  NUMBER = TWO;             /* TWO BYTES TO BE CONVERTED    @Z427VLS*/ 00119000
         MVC   NUMBER(4),@CF00073                                  0160 00120000
*  SAVEDAY = EVSDAY;                                       /*@Z427VLS*/ 00121000
         MVC   SAVEDAY(2),EVSDAY(R2)                               0161 00122000
*  SRL (SAVEDAY,FOUR);       /* REMOVE SIGN                  @Z427VLS*/ 00123000
         SLR   @03,@03                                             0162 00124000
         ICM   @03,3,SAVEDAY                                       0162 00125000
         SRL   @03,4                                               0162 00126000
         STCM  @03,3,SAVEDAY                                       0162 00127000
*  NEXTBY = ADDR(SAVEDAY);   /* DATA SOURCE                  @Z427VLS*/ 00128000
         LA    @03,SAVEDAY                                         0163 00129000
         ST    @03,NEXTBY                                          0163 00130000
*  ADDNXT = ADDR(FROMDATE)-1;/* DATA DESTINATION - 2ND PRINT LINE    */ 00131000
         LA    @03,FROMDATE                                        0164 00132000
         BCTR  @03,0                                               0164 00133000
         ST    @03,ADDNXT                                          0164 00134000
*  SWITCH1 = ON;             /* DON'T CONVERT LEFT-MOST HALF BYTE    */ 00135000
         OI    SWITCH1,B'00001000'                                 0165 00136000
*  CALL CONVERT;             /* CONVERT 'PERIOD FROM' DAY TO EBCDIC  */ 00137000
         BAL   @14,CONVERT                                         0166 00138000
*  NUMBER = ONE;             /* ONE BYTE TO BE CONVERTED     @Z427VLS*/ 00139000
         MVC   NUMBER(4),@CF00054                                  0167 00140000
*  NEXTBY = ADDR(EVSYEAR);   /* DATA SOURCE - PARM TABLE     @Z427VLS*/ 00141000
         LA    @03,EVSYEAR(,R2)                                    0168 00142000
         ST    @03,NEXTBY                                          0168 00143000
*  ADDNXT = ADDR(FROMYEAR);  /* DATA DESTINATION - 2ND PRINT LINE    */ 00144000
         LA    @03,FROMYEAR                                        0169 00145000
         ST    @03,ADDNXT                                          0169 00146000
*  CALL CONVERT;             /* CONVERT 'PERIOD FROM' YEAR TO EBCDIC */ 00147000
         BAL   @14,CONVERT                                         0170 00148000
*  HEADMOVE = LINE2;         /* MOVE LINE 2 OF HEADING TO PRINT AREA */ 00149000
         MVC   HEADMOVE(57),LINE2                                  0171 00150000
*  CALL PRINT2;              /* PRINT HEADING - 2ND LINE     @Z427VLS*/ 00151000
         BAL   @14,PRINT2                                          0172 00152000
*  NUMBER = TWO;             /* TWO BYTES TO BE CONVERTED    @Z427VLS*/ 00153000
         MVC   NUMBER(4),@CF00073                                  0173 00154000
*  SAVEDAY = EVDAY;                                        /*@Z427VLS*/ 00155000
         L     @03,EVPTR(,R2)                                      0174 00156000
         MVC   SAVEDAY(2),EVDAY(@03)                               0174 00157000
*  SRL (SAVEDAY,FOUR);       /* REMOVE SIGN                  @Z427VLS*/ 00158000
         SLR   @03,@03                                             0175 00159000
         ICM   @03,3,SAVEDAY                                       0175 00160000
         SRL   @03,4                                               0175 00161000
         STCM  @03,3,SAVEDAY                                       0175 00162000
*  NEXTBY = ADDR(SAVEDAY);   /* DATA SOURCE                  @Z427VLS*/ 00163000
         LA    @03,SAVEDAY                                         0176 00164000
         ST    @03,NEXTBY                                          0176 00165000
*  ADDNXT = ADDR(TODATE)-1;  /* DATA DESTINATION - 3RD PRINT LINE    */ 00166000
         LA    @03,TODATE                                          0177 00167000
         BCTR  @03,0                                               0177 00168000
         ST    @03,ADDNXT                                          0177 00169000
*  SWITCH1 = ON;             /* DON'T CONVERT LEFT-MOST HALF BYTE    */ 00170000
         OI    SWITCH1,B'00001000'                                 0178 00171000
*  CALL CONVERT;             /* CONVERT 'PERIOD TO' DAY TO EBCDIC    */ 00172000
         BAL   @14,CONVERT                                         0179 00173000
*  NUMBER = ONE;             /* ONE BYTE TO BE CONVERTED     @Z427VLS*/ 00174000
         MVC   NUMBER(4),@CF00054                                  0180 00175000
*  NEXTBY = ADDR(EVYEAR);    /* DATA SOURCE - PARM TABLE     @Z427VLS*/ 00176000
         L     @03,EVPTR(,R2)                                      0181 00177000
         ST    @03,NEXTBY                                          0181 00178000
*  ADDNXT = ADDR(TOYEAR);    /* DATA DESTINATION - 3RD PRINT LINE    */ 00179000
         LA    @03,TOYEAR                                          0182 00180000
         ST    @03,ADDNXT                                          0182 00181000
*  CALL CONVERT;             /* CONVERT 'PERIOD TO' YEAR TO EBCDIC   */ 00182000
         BAL   @14,CONVERT                                         0183 00183000
*  HEADMOVE = LINE3;         /* MOVE LINE 3 OF HEADING TO PRINT AREA */ 00184000
         MVC   HEADMOVE(57),LINE3                                  0184 00185000
*  CALL PRINT2;              /* PRINT HEADING - 3RD LINE     @Z427VLS*/ 00186000
         BAL   @14,PRINT2                                          0185 00187000
*END;                                                      /*@Z427VLS*/ 00188000
@EL00002 DS    0H                                                  0186 00189000
@EF00002 DS    0H                                                  0186 00190000
@ER00002 LM    @14,@12,@SA00002                                    0186 00191000
         BR    @14                                                 0186 00192000
*/********************************************************************/ 00193000
*/*                                                          @Z427VLS*/ 00194000
*/* THIS PROC PRINTS THE DAY HEADING FOR PARTS 1 AND 2.      @Z427VLS*/ 00195000
*/*                                                          @Z427VLS*/ 00196000
*HEADING2:  PROC;                                          /*@Z427VLS*/ 00197000
HEADING2 STM   @14,@12,@SA00003                                    0187 00198000
*  CALL PRINT2;              /* PRINT BLANK LINE             @Z427VLS*/ 00199000
         BAL   @14,PRINT2                                          0188 00200000
*  NUMBER = ONE;             /* ONE BYTE TO BE CONVERTED     @Z427VLS*/ 00201000
         MVC   NUMBER(4),@CF00054                                  0189 00202000
*  NEXTBY = ADDR(PSTYR);     /* DATA SOURCE - PARM TABLE     @Z427VLS*/ 00203000
         LA    @03,PSTYR(,R2)                                      0190 00204000
         ST    @03,NEXTBY                                          0190 00205000
*  ADDNXT = ADDR(JYEAR);     /* DATA DESTINATION - 1ST PRINT LINE    */ 00206000
         LA    @03,JYEAR                                           0191 00207000
         ST    @03,ADDNXT                                          0191 00208000
*  CALL CONVERT;             /* CONVERT 'PERIOD FROM' YEAR TO EBCDIC */ 00209000
         BAL   @14,CONVERT                                         0192 00210000
*                            /*                              @Z427VLS*/ 00211000
*                            /* CONVERT STARTING DAY FROM HEX PLUS   */ 00212000
*                            /* SIGN(PACKED) TO BINARY TO COMPUTE    */ 00213000
*                            /* SUCCESSIVE DAYS FOR LINE 2 OF HEADING*/ 00214000
*                            /* THEN, CONVERT DAYS TO EBCDIC AND     */ 00215000
*                            /* FILL IN PRINT LINE           @Z427VLS*/ 00216000
*  CVB  (BINWORD,PSTDY);    /* - BINWORD - INPUT TO 'CONVBIN'       */  00217000
         XC    @TS00001(8),@TS00001                                0193 00218000
         MVC   @TS00001+6(2),PSTDY(R2)                             0193 00219000
         CVB   @03,@TS00001                                        0193 00220000
         ST    @03,BINWORD                                         0193 00221000
*  DO M = 1 TO NUMDAYS;                                    /*@Z427VLS*/ 00222000
         LA    @03,1                                               0194 00223000
         B     @DE00194                                            0194 00224000
@DL00194 DS    0H                                                  0195 00225000
*    DECADDR = ADDR(DAYNO(M))+1;  /* POINT TO DAY SLOT IN PRINT LINE */ 00226000
         SLA   @03,2                                               0195 00227000
         LA    @03,DAYNO-4(@03)                                    0195 00228000
         AL    @03,@CF00054                                        0195 00229000
         ST    @03,DECADDR                                         0195 00230000
*    CALL CONVBIN;                /* CONVERT DAY TO EBCDIC   @Z427VLS*/ 00231000
         BAL   @14,CONVBIN                                         0196 00232000
*    IF BINWORD = 365 THEN                                         0197 00233000
         CLC   BINWORD(4),@CF00701                                 0197 00234000
         BNE   @RF00197                                            0197 00235000
*      DO;                                                 /*@Z427VLS*/ 00236000
*        SAVEYR(2) = EVSYEAR;                              /*@Z427VLS*/ 00237000
         MVC   SAVEYR+1(1),EVSYEAR(R2)                             0199 00238000
*        SLL (SAVEYR,FOUR);                                /*@Z427VLS*/ 00239000
         SLR   @03,@03                                             0200 00240000
         ICM   @03,3,SAVEYR                                        0200 00241000
         SLL   @03,4                                               0200 00242000
         STCM  @03,3,SAVEYR                                        0200 00243000
*        SAVEYR(2) = SAVEYR(2) | SIGNPLUS;                 /*@Z427VLS*/ 00244000
         OI    SAVEYR+1,X'0F'                                      0201 00245000
*        CVB (BINYR,SAVEYR);                               /*@Z427VLS*/ 00246000
         XC    @TS00001(8),@TS00001                                0202 00247000
         MVC   @TS00001+6(2),SAVEYR                                0202 00248000
         CVB   @03,@TS00001                                        0202 00249000
         ST    @03,BINYR                                           0202 00250000
*        IF (BINYR/4 * 4) ¬= BINYR THEN                            0203 00251000
         LR    @00,@03                                             0203 00252000
         SRDA  @00,32                                              0203 00253000
         D     @00,@CF00063                                        0203 00254000
         SLA   @01,2                                               0203 00255000
         CR    @01,@03                                             0203 00256000
         BE    @RF00203                                            0203 00257000
*          BINWORD = ZERO;        /* NORMAL YEAR             @Z427VLS*/ 00258000
         SLR   @03,@03                                             0204 00259000
         ST    @03,BINWORD                                         0204 00260000
*      END;                                                /*@Z427VLS*/ 00261000
*    ELSE                                                          0206 00262000
*      DO;                                                 /*@Z427VLS*/ 00263000
         B     @RC00197                                            0206 00264000
@RF00197 DS    0H                                                  0207 00265000
*        IF BINWORD = 366 THEN                                     0207 00266000
         CLC   BINWORD(4),@CF00703                                 0207 00267000
         BNE   @RF00207                                            0207 00268000
*          BINWORD = ZERO;        /* RESET DAY TALLY         @Z427VLS*/ 00269000
         SLR   @03,@03                                             0208 00270000
         ST    @03,BINWORD                                         0208 00271000
*      END;                                                /*@Z427VLS*/ 00272000
@RF00207 DS    0H                                                  0210 00273000
*      IF BINWORD = ZERO THEN     /*GOT TO MOVE IN ANOTHER YEAR LABEL*/ 00274000
@RC00197 L     @03,BINWORD                                         0210 00275000
         LTR   @03,@03                                             0210 00276000
         BNZ   @RF00210                                            0210 00277000
*       DO;                                                /*@Z427VLS*/ 00278000
*        NUMBER = ONE;                                     /*@Z427VLS*/ 00279000
         MVC   NUMBER(4),@CF00054                                  0212 00280000
*        NEXTBY = ADDR(PENYR);/* PICK UP NEXT YEAR           @Z427VLS*/ 00281000
         LA    @03,PENYR(,R2)                                      0213 00282000
         ST    @03,NEXTBY                                          0213 00283000
*        ADDNXT =(DECADDR + 5 - ADDR(DAYNO))+ (ADDR(LN1) + EIGHT); 0214 00284000
         LA    @03,5                                               0214 00285000
         AL    @03,DECADDR                                         0214 00286000
         LA    @15,DAYNO                                           0214 00287000
         SLR   @03,@15                                             0214 00288000
         LA    @15,LN1                                             0214 00289000
         AL    @15,@CF00065                                        0214 00290000
         ALR   @03,@15                                             0214 00291000
         ST    @03,ADDNXT                                          0214 00292000
*        CALL  CONVERT;      /* GO CONVERT TO PRINT          @Z427VLS*/ 00293000
         BAL   @14,CONVERT                                         0215 00294000
*       END;                                               /*@Z427VLS*/ 00295000
*      BINWORD = BINWORD + ONE;   /* SET NEXT DAY            @Z427VLS*/ 00296000
@RF00210 LA    @03,1                                               0217 00297000
         AL    @03,BINWORD                                         0217 00298000
         ST    @03,BINWORD                                         0217 00299000
*  END;                                                    /*@Z427VLS*/ 00300000
         LA    @03,1                                               0218 00301000
         AL    @03,M                                               0218 00302000
@DE00194 ST    @03,M                                               0218 00303000
         C     @03,NUMDAYS(,R2)                                    0218 00304000
         BNH   @DL00194                                            0218 00305000
*  HD2MOVE = LN1;            /* MOVE YEAR HEADING LINE TO PRINT AREA */ 00306000
         MVC   HD2MOVE(128),LN1                                    0219 00307000
*  CALL PRINT2;              /* PRINT YEAR HEADING           @Z427VLS*/ 00308000
         BAL   @14,PRINT2                                          0220 00309000
*  HD2MOVE = LN2;            /* MOVE DAY HEADING LINE TO PRINT AREA  */ 00310000
         MVC   HD2MOVE(128),LN2                                    0221 00311000
*  CALL PRINT2;              /* PRINT DAY HEADING            @Z427VLS*/ 00312000
         BAL   @14,PRINT2                                          0222 00313000
*  CALL PRINT2;              /* BLANK LINE                   @Z427VLS*/ 00314000
         BAL   @14,PRINT2                                          0223 00315000
*END;                                                      /*@Z427VLS*/ 00316000
@EL00003 DS    0H                                                  0224 00317000
@EF00003 DS    0H                                                  0224 00318000
@ER00003 LM    @14,@12,@SA00003                                    0224 00319000
         BR    @14                                                 0224 00320000
*HEXDUMP: PROC;                                            /*@Z427VLS*/ 00321000
HEXDUMP  STM   @14,@12,@SA00004                                    0225 00322000
*DCL BYTECT FIXED(31) INIT(0);                             /*@Z427VLS*/ 00323000
*SAVEPTR = TRENPTR;                                        /*@Z427VLS*/ 00324000
         L     @03,TRENPTR(,R2)                                    0227 00325000
         ST    @03,SAVEPTR                                         0227 00326000
*DDTYPE = '1';                                             /*@Z427VLS*/ 00327000
         MVI   DDTYPE,C'1'                                         0228 00328000
*BYTECT =(76 * NUMDAYS) + EIGHT;                           /*@0099VLS*/ 00329000
         L     @03,NUMDAYS(,R2)                                    0229 00330000
         MH    @03,@CH00708                                        0229 00331000
         AL    @03,@CF00065                                        0229 00332000
         ST    @03,BYTECT                                          0229 00333000
*DO J = 1 BY 1 TO EVNUM;                                   /*@Z427VLS*/ 00334000
         LA    @03,1                                               0230 00335000
         ST    @03,J                                               0230 00336000
         B     @DE00230                                            0230 00337000
@DL00230 DS    0H                                                  0231 00338000
* NUMBER = 66;                                             /*@Z427VLS*/ 00339000
         LA    @03,66                                              0231 00340000
         ST    @03,NUMBER                                          0231 00341000
* ADDNXT =ADDR(PRTLINE);                                   /*@Z427VLS*/ 00342000
         LA    @15,PRTLINE                                         0232 00343000
         ST    @15,ADDNXT                                          0232 00344000
* NEXTBY = TRENPTR;                                        /*@Z427VLS*/ 00345000
         L     @15,TRENPTR(,R2)                                    0233 00346000
         ST    @15,NEXTBY                                          0233 00347000
* DO I = 66 BY 66 TO BYTECT;                               /*@0099VLS*/ 00348000
         ST    @03,I                                               0234 00349000
         B     @DE00234                                            0234 00350000
@DL00234 DS    0H                                                  0235 00351000
*  CALL CONVERT;                                           /*@Z427VLS*/ 00352000
         BAL   @14,CONVERT                                         0235 00353000
*  NEXTBY = NEXTBY + 66;                                   /*@Z427VLS*/ 00354000
         LA    @03,66                                              0236 00355000
         AL    @03,NEXTBY                                          0236 00356000
         ST    @03,NEXTBY                                          0236 00357000
*  CALL PRINT2;                                            /*@Z427VLS*/ 00358000
         BAL   @14,PRINT2                                          0237 00359000
* END;                                                     /*@Z427VLS*/ 00360000
         LA    @03,66                                              0238 00361000
         AL    @03,I                                               0238 00362000
         ST    @03,I                                               0238 00363000
@DE00234 C     @03,BYTECT                                          0238 00364000
         BNH   @DL00234                                            0238 00365000
* IF NUMBER = BYTECT -(J - 66) THEN                                0239 00366000
         LA    @03,66                                              0239 00367000
         SL    @03,J                                               0239 00368000
         AL    @03,BYTECT                                          0239 00369000
         C     @03,NUMBER                                          0239 00370000
         BNE   @RF00239                                            0239 00371000
*  DO;                                                     /*@Z427VLS*/ 00372000
*   CALL CONVERT;                                          /*@Z427VLS*/ 00373000
         BAL   @14,CONVERT                                         0241 00374000
*   CALL PRINT2;                                           /*@Z427VLS*/ 00375000
         BAL   @14,PRINT2                                          0242 00376000
*  END;                                                    /*@Z427VLS*/ 00377000
* TRENPTR = TRENEXT;                                       /*@Z427VLS*/ 00378000
@RF00239 L     @03,TRENPTR(,R2)                                    0244 00379000
         L     @03,TRENEXT(,@03)                                   0244 00380000
         ST    @03,TRENPTR(,R2)                                    0244 00381000
*END;                                                      /*@Z427VLS*/ 00382000
         LA    @03,1                                               0245 00383000
         AL    @03,J                                               0245 00384000
         ST    @03,J                                               0245 00385000
@DE00230 L     @01,EVPTR(,R2)                                      0245 00386000
         CH    @03,EVNUM(,@01)                                     0245 00387000
         BNH   @DL00230                                            0245 00388000
*TRENPTR = SAVEPTR;                                        /*@Z427VLS*/ 00389000
         L     @03,SAVEPTR                                         0246 00390000
         ST    @03,TRENPTR(,R2)                                    0246 00391000
*DDTYPE = '0';                                             /*@Z427VLS*/ 00392000
         MVI   DDTYPE,C'0'                                         0247 00393000
*J = ZERO;                                                 /*@Z427VLS*/ 00394000
         SLR   @03,@03                                             0248 00395000
         ST    @03,J                                               0248 00396000
*X = ZERO;                                                 /*@Z427VLS*/ 00397000
         ST    @03,X                                               0249 00398000
*END;                                                      /*@Z427VLS*/ 00399000
@EL00004 DS    0H                                                  0250 00400000
@EF00004 DS    0H                                                  0250 00401000
@ER00004 LM    @14,@12,@SA00004                                    0250 00402000
         BR    @14                                                 0250 00403000
*/********************************************************************/ 00404000
*/*                                                          @Z427VLS*/ 00405000
*/* THIS PROC PRINTS ERROR COUNTS BY DAY BY CPU BY TYPE OF CPU       */ 00406000
*/* ERROR  - I.E. - IPL, MACHINE CHECK, CHANNEL CHECK, PROGRAM ERROR */ 00407000
*/*                                                          @Z427VLS*/ 00408000
*CPUERREC:  PROC;                                          /*@Z427VLS*/ 00409000
CPUERREC STM   @14,@12,@SA00005                                    0251 00410000
*DCL TREND6(16,30) FIXED(31) INIT((480)0);                 /*@0099VLS*/ 00411000
*DCL 1 NEWSW BIT(8) INIT('00'X),                                   0253 00412000
*    2 FOUND BIT(1) ,                                              0253 00413000
*    2 OUTSWTCH BIT(1);                                    /*@0099VLS*/ 00414000
*DCL NOFOUND CHAR(29) INIT('NO ERRORS FOUND FOR THIS CPU');/*@0099VLS*/ 00415000
*DCL CHAN CHAR(4) INIT('CHAN');                            /*@0099VLS*/ 00416000
*DCL Z1 FIXED(31) INIT(0);                                 /*@0099VLS*/ 00417000
*DCL Q FIXED(31) INIT(0);                                  /*@0099VLS*/ 00418000
*DCL Z2 FIXED(31) INIT(0);                                 /*@0099VLS*/ 00419000
*DCL ZCPU CHAR(3) INIT('CPU');                             /*@0099VLS*/ 00420000
*DCL   CHANZ(16) CHAR(6)                                           0260 00421000
*   INIT(' CHN-0',                                                 0260 00422000
*        ' CHN-1',                                                 0260 00423000
*        ' CHN-2',                                                 0260 00424000
*        ' CHN-3',                                                 0260 00425000
*        ' CHN-4',                                                 0260 00426000
*        ' CHN-5',                                                 0260 00427000
*        ' CHN-6',                                                 0260 00428000
*        ' CHN-7',                                                 0260 00429000
*        ' CHN-8',                                                 0260 00430000
*        ' CHN-9',                                                 0260 00431000
*        ' CHN-A',                                                 0260 00432000
*        ' CHN-B',                                                 0260 00433000
*        ' CHN-C',                                                 0260 00434000
*        ' CHN-D',                                                 0260 00435000
*        ' CHN-E',                                                 0260 00436000
*        ' CHN-F');                                        /*@0099VLS*/ 00437000
*DCL CHANID CHAR(6) DEFINED(LIN2) POS(3);                  /*@0099VLS*/ 00438000
*  SAVEPTR = TRENPTR;        /* SAVE POINTER TO ERROR TABLE - 1ST CPU*/ 00439000
         L     @03,TRENPTR(,R2)                                    0262 00440000
         ST    @03,SAVEPTR                                         0262 00441000
*  DO I = 1 TO FOUR;         /* LOOP FOR 4 CPU ERROR TYPES   @Z427VLS*/ 00442000
         LA    @03,1                                               0263 00443000
         ST    @03,I                                               0263 00444000
@DL00263 DS    0H                                                  0264 00445000
*    CALL PRINT1;            /* PRINT BLANK LINE             @Z427VLS*/ 00446000
         BAL   @14,PRINT1                                          0264 00447000
*    DSCRPT = DESCRIPT(I);   /* MOVE ERROR TYPE TO HEADING LINE      */ 00448000
         MVI   DSCRPT+13,C' '                                      0265 00449000
         MVC   DSCRPT+14(3),DSCRPT+13                              0265 00450000
         L     @03,I                                               0265 00451000
         MH    @03,@CH00548                                        0265 00452000
         LA    @01,DESCRIPT-13(@03)                                0265 00453000
         MVC   DSCRPT(13),0(@01)                                   0265 00454000
*    HD3MOVE = LIN1;         /* MOVE PRINT LINE TO PRINT AREA        */ 00455000
         MVC   HD3MOVE(128),LIN1                                   0266 00456000
*    CALL PRINT1;            /* PRINT ERROR TYPE HEADING     @Z427VLS*/ 00457000
         BAL   @14,PRINT1                                          0267 00458000
*    NUMCPUS = EVNUM;        /* NUMBER OF CPU'S - LOOP CONTROL       */ 00459000
         L     @03,EVPTR(,R2)                                      0268 00460000
         LH    @03,EVNUM(,@03)                                     0268 00461000
         ST    @03,NUMCPUS                                         0268 00462000
*  IF I = 3 THEN                                                   0269 00463000
         CLC   I(4),@CF00075                                       0269 00464000
         BNE   @RF00269                                            0269 00465000
*   DO Q  = 1 BY 1 TO NUMCPUS;                             /*@0099VLS*/ 00466000
         LA    @03,1                                               0270 00467000
         ST    @03,Q                                               0270 00468000
         B     @DE00270                                            0270 00469000
@DL00270 DS    0H                                                  0271 00470000
*   FOUND = NO;                                            /*@0099VLS*/ 00471000
         NI    FOUND,B'01111111'                                   0271 00472000
*    DO J = 1 BY 1 TO NUMDAYS;                             /*@0099VLS*/ 00473000
         LA    @03,1                                               0272 00474000
         ST    @03,J                                               0272 00475000
         B     @DE00272                                            0272 00476000
@DL00272 DS    0H                                                  0273 00477000
*     TREND6(1,J) = TRECCH0(J);                            /*@0099VLS*/ 00478000
         LR    @15,@03                                             0273 00479000
         SLA   @15,2                                               0273 00480000
         LR    @14,@03                                             0273 00481000
         MH    @14,@CH00708                                        0273 00482000
         L     @09,TRENPTR(,R2)                                    0273 00483000
         LA    @01,0(@14,@09)                                      0273 00484000
         AL    @01,@CF00822                                        0273 00485000
         L     @08,TRECCH0-16(,@01)                                0273 00486000
         ST    @08,TREND6-4(@15)                                   0273 00487000
*     TREND6(2,J) = TRECCH1(J);                            /*@0099VLS*/ 00488000
         LA    @01,0(@14,@09)                                      0274 00489000
         AL    @01,@CF00823                                        0274 00490000
         L     @08,TRECCH1-20(,@01)                                0274 00491000
         ST    @08,TREND6+116(@15)                                 0274 00492000
*     TREND6(3,J) = TRECCH2(J);                            /*@0099VLS*/ 00493000
         LA    @01,0(@14,@09)                                      0275 00494000
         AL    @01,@CF00824                                        0275 00495000
         L     @08,TRECCH2-24(,@01)                                0275 00496000
         ST    @08,TREND6+236(@15)                                 0275 00497000
*     TREND6(4,J) = TRECCH3(J);                            /*@0099VLS*/ 00498000
         LA    @01,0(@14,@09)                                      0276 00499000
         AL    @01,@CF00825                                        0276 00500000
         L     @08,TRECCH3-28(,@01)                                0276 00501000
         ST    @08,TREND6+356(@15)                                 0276 00502000
*     TREND6(5,J) = TRECCH4(J);                            /*@0099VLS*/ 00503000
         LA    @01,0(@14,@09)                                      0277 00504000
         AL    @01,@CF00826                                        0277 00505000
         L     @08,TRECCH4-32(,@01)                                0277 00506000
         ST    @08,TREND6+476(@15)                                 0277 00507000
*     TREND6(6,J) = TRECCH5(J);                            /*@0099VLS*/ 00508000
         LA    @01,0(@14,@09)                                      0278 00509000
         AL    @01,@CF00827                                        0278 00510000
         L     @08,TRECCH5-36(,@01)                                0278 00511000
         ST    @08,TREND6+596(@15)                                 0278 00512000
*     TREND6(7,J) = TRECCH6(J);                            /*@0099VLS*/ 00513000
         LA    @01,0(@14,@09)                                      0279 00514000
         AL    @01,@CF00828                                        0279 00515000
         L     @08,TRECCH6-40(,@01)                                0279 00516000
         ST    @08,TREND6+716(@15)                                 0279 00517000
*     TREND6(8,J) = TRECCH7(J);                            /*@0099VLS*/ 00518000
         LA    @01,0(@14,@09)                                      0280 00519000
         AL    @01,@CF00829                                        0280 00520000
         L     @08,TRECCH7-44(,@01)                                0280 00521000
         ST    @08,TREND6+836(@15)                                 0280 00522000
*     TREND6(9,J) = TRECCH8(J);                            /*@0099VLS*/ 00523000
         LA    @01,0(@14,@09)                                      0281 00524000
         AL    @01,@CF00830                                        0281 00525000
         L     @08,TRECCH8-48(,@01)                                0281 00526000
         ST    @08,TREND6+956(@15)                                 0281 00527000
*     TREND6(10,J) = TRECCH9(J);                           /*@0099VLS*/ 00528000
         LA    @01,0(@14,@09)                                      0282 00529000
         AL    @01,@CF00831                                        0282 00530000
         L     @08,TRECCH9-52(,@01)                                0282 00531000
         ST    @08,TREND6+1076(@15)                                0282 00532000
*     TREND6(11,J) = TRECCHA(J);                           /*@0099VLS*/ 00533000
         LA    @01,0(@14,@09)                                      0283 00534000
         AL    @01,@CF00832                                        0283 00535000
         L     @08,TRECCHA-56(,@01)                                0283 00536000
         ST    @08,TREND6+1196(@15)                                0283 00537000
*     TREND6(12,J) = TRECCHB(J);                           /*@0099VLS*/ 00538000
         LA    @01,0(@14,@09)                                      0284 00539000
         AL    @01,@CF00833                                        0284 00540000
         L     @08,TRECCHB-60(,@01)                                0284 00541000
         ST    @08,TREND6+1316(@15)                                0284 00542000
*     TREND6(13,J) = TRECCHC(J);                           /*@0099VLS*/ 00543000
         LA    @01,0(@14,@09)                                      0285 00544000
         AL    @01,@CF00834                                        0285 00545000
         L     @08,TRECCHC-64(,@01)                                0285 00546000
         ST    @08,TREND6+1436(@15)                                0285 00547000
*     TREND6(14,J) = TRECCHD(J);                           /*@0099VLS*/ 00548000
         LA    @01,0(@14,@09)                                      0286 00549000
         AL    @01,@CF00835                                        0286 00550000
         L     @08,TRECCHD-68(,@01)                                0286 00551000
         ST    @08,TREND6+1556(@15)                                0286 00552000
*     TREND6(15,J) = TRECCHE(J);                           /*@0099VLS*/ 00553000
         LA    @01,0(@14,@09)                                      0287 00554000
         AL    @01,@CF00836                                        0287 00555000
         L     @08,TRECCHE-72(,@01)                                0287 00556000
         ST    @08,TREND6+1676(@15)                                0287 00557000
*     TREND6(16,J) = TRECCHF(J);                           /*@0099VLS*/ 00558000
         L     @14,TRECCHF-76(@14,@09)                             0288 00559000
         ST    @14,TREND6+1796(@15)                                0288 00560000
*    END;                                                  /*@0099VLS*/ 00561000
         AL    @03,@CF00054                                        0289 00562000
         ST    @03,J                                               0289 00563000
@DE00272 C     @03,NUMDAYS(,R2)                                    0289 00564000
         BNH   @DL00272                                            0289 00565000
*    DO Z1 = 1 BY 1 TO 16;                                 /*@0099VLS*/ 00566000
         LA    @03,1                                               0290 00567000
         ST    @03,Z1                                              0290 00568000
@DL00290 DS    0H                                                  0291 00569000
*    LIN2 = LIN2 && LIN2;                                  /*@0099VLS*/ 00570000
         XC    LIN2(128),LIN2                                      0291 00571000
*    OUTSWTCH = OFF;                                       /*@0099VLS*/ 00572000
         NI    OUTSWTCH,B'10111111'                                0292 00573000
*    DO Z2 = 1 BY  1 TO NUMDAYS WHILE(OUTSWTCH = OFF);     /*@0099VLS*/ 00574000
         LA    @03,1                                               0293 00575000
         ST    @03,Z2                                              0293 00576000
         B     @DE00293                                            0293 00577000
@DL00293 TM    OUTSWTCH,B'01000000'                                0293 00578000
         BNZ   @DC00293                                            0293 00579000
*     IF TREND6(Z1,Z2) ¬= 0 THEN                                   0294 00580000
         L     @15,Z1                                              0294 00581000
         MH    @15,@CH00546                                        0294 00582000
         ALR   @15,@03                                             0294 00583000
         SLA   @15,2                                               0294 00584000
         L     @03,TREND6-124(@15)                                 0294 00585000
         LTR   @03,@03                                             0294 00586000
         BZ    @RF00294                                            0294 00587000
*      OUTSWTCH = ON;                                      /*@0099VLS*/ 00588000
         OI    OUTSWTCH,B'01000000'                                0295 00589000
*    END;                                                  /*@0099VLS*/ 00590000
@RF00294 LA    @03,1                                               0296 00591000
         AL    @03,Z2                                              0296 00592000
         ST    @03,Z2                                              0296 00593000
@DE00293 C     @03,NUMDAYS(,R2)                                    0296 00594000
         BNH   @DL00293                                            0296 00595000
@DC00293 DS    0H                                                  0297 00596000
*    IF OUTSWTCH = ON THEN                                         0297 00597000
         TM    OUTSWTCH,B'01000000'                                0297 00598000
         BNO   @RF00297                                            0297 00599000
*     DO;                                                  /*@0099VLS*/ 00600000
*    IF FOUND = OFF THEN                                           0299 00601000
         TM    FOUND,B'10000000'                                   0299 00602000
         BNZ   @RF00299                                            0299 00603000
*    DO;                                                   /*@0099VLS*/ 00604000
*    LIN2(3:5) = ZCPU;                                     /*@0099VLS*/ 00605000
         MVC   LIN2+2(3),ZCPU                                      0301 00606000
*    LETTER = EVLETTER(Q);                                 /*@0099VLS*/ 00607000
         L     @03,Q                                               0302 00608000
         MH    @03,@CH00080                                        0302 00609000
         L     @01,EVPTR(,R2)                                      0302 00610000
         ALR   @01,@03                                             0302 00611000
         MVC   LETTER(1),EVLETTER-6(@01)                           0302 00612000
*    HD3MOVE = LIN2;                                       /*@0099VLS*/ 00613000
         MVC   HD3MOVE(128),LIN2                                   0303 00614000
*    CALL PRINT1;                                          /*@0099VLS*/ 00615000
         BAL   @14,PRINT1                                          0304 00616000
*    END;                                                  /*@0099VLS*/ 00617000
*      FOUND = ON;                                         /*@0099VLS*/ 00618000
@RF00299 OI    FOUND,B'10000000'                                   0306 00619000
*      CHANID = CHANZ(Z1);                                 /*@0099VLS*/ 00620000
         L     @03,Z1                                              0307 00621000
         MH    @03,@CH00080                                        0307 00622000
         LA    @01,CHANZ-6(@03)                                    0307 00623000
         MVC   CHANID(6),0(@01)                                    0307 00624000
*      DO K = 1 BY 1 TO NUMDAYS;                           /*@0099VLS*/ 00625000
         LA    @03,1                                               0308 00626000
         ST    @03,K                                               0308 00627000
         B     @DE00308                                            0308 00628000
@DL00308 DS    0H                                                  0309 00629000
*       BINWORD = TREND6(Z1,K);                            /*@0099VLS*/ 00630000
         L     @15,Z1                                              0309 00631000
         MH    @15,@CH00546                                        0309 00632000
         ALR   @15,@03                                             0309 00633000
         SLA   @15,2                                               0309 00634000
         L     @15,TREND6-124(@15)                                 0309 00635000
         ST    @15,BINWORD                                         0309 00636000
*       DECADDR = ADDR(ERCNT(K)) + 1;                      /*@0099VLS*/ 00637000
         SLA   @03,2                                               0310 00638000
         LA    @03,ERCNT-4(@03)                                    0310 00639000
         AL    @03,@CF00054                                        0310 00640000
         ST    @03,DECADDR                                         0310 00641000
*       CALL CONVBIN;                                      /*@0099VLS*/ 00642000
         BAL   @14,CONVBIN                                         0311 00643000
*      END;                                                /*@0099VLS*/ 00644000
         LA    @03,1                                               0312 00645000
         AL    @03,K                                               0312 00646000
         ST    @03,K                                               0312 00647000
@DE00308 C     @03,NUMDAYS(,R2)                                    0312 00648000
         BNH   @DL00308                                            0312 00649000
*      HD3MOVE = LIN2;                                     /*@0099VLS*/ 00650000
         MVC   HD3MOVE(128),LIN2                                   0313 00651000
*      CALL PRINT1;                                        /*@0099VLS*/ 00652000
         BAL   @14,PRINT1                                          0314 00653000
*      LIN2 = HD3MOVE;                                     /*@0099VLS*/ 00654000
         MVC   LIN2(128),HD3MOVE                                   0315 00655000
*     END;                                                 /*@0099VLS*/ 00656000
*    END;                                                  /*@0099VLS*/ 00657000
@RF00297 LA    @03,1                                               0317 00658000
         AL    @03,Z1                                              0317 00659000
         ST    @03,Z1                                              0317 00660000
         C     @03,@CF00088                                        0317 00661000
         BNH   @DL00290                                            0317 00662000
*    IF FOUND = NO THEN                                            0318 00663000
         TM    FOUND,B'10000000'                                   0318 00664000
         BNZ   @RF00318                                            0318 00665000
*    DO;                                                   /*@0099VLS*/ 00666000
*    DO K = 1 BY 1 TO NUMDAYS;                             /*@0099VLS*/ 00667000
         LA    @03,1                                               0320 00668000
         ST    @03,K                                               0320 00669000
         B     @DE00320                                            0320 00670000
@DL00320 DS    0H                                                  0321 00671000
*     ERCNT(K) = '404040F0'X;                              /*@0099VLS*/ 00672000
         LR    @15,@03                                             0321 00673000
         SLA   @15,2                                               0321 00674000
         LA    @14,ERCNT-4(@15)                                    0321 00675000
         MVC   0(4,@14),@CB00749                                   0321 00676000
*    END;                                                  /*@0099VLS*/ 00677000
         AL    @03,@CF00054                                        0322 00678000
         ST    @03,K                                               0322 00679000
@DE00320 C     @03,NUMDAYS(,R2)                                    0322 00680000
         BNH   @DL00320                                            0322 00681000
*    LETTER = EVLETTER(Q);                                 /*@0099VLS*/ 00682000
         L     @03,Q                                               0323 00683000
         MH    @03,@CH00080                                        0323 00684000
         L     @01,EVPTR(,R2)                                      0323 00685000
         ALR   @01,@03                                             0323 00686000
         MVC   LETTER(1),EVLETTER-6(@01)                           0323 00687000
*    LIN2(3:5) = ZCPU;                                     /*@0099VLS*/ 00688000
         MVC   LIN2+2(3),ZCPU                                      0324 00689000
*    HD3MOVE = LIN2;                                       /*@0099VLS*/ 00690000
         MVC   HD3MOVE(128),LIN2                                   0325 00691000
*    CALL PRINT1;                                          /*@0099VLS*/ 00692000
         BAL   @14,PRINT1                                          0326 00693000
*    END;                                                  /*@0099VLS*/ 00694000
*  TRENPTR = TRENEXT;                                      /*@0099VLS*/ 00695000
@RF00318 L     @03,TRENPTR(,R2)                                    0328 00696000
         L     @03,TRENEXT(,@03)                                   0328 00697000
         ST    @03,TRENPTR(,R2)                                    0328 00698000
*  LIN2(3:5) = ZCPU;                                       /*@0099VLS*/ 00699000
         MVC   LIN2+2(3),ZCPU                                      0329 00700000
* END;                                                     /*@0099VLS*/ 00701000
         LA    @03,1                                               0330 00702000
         AL    @03,Q                                               0330 00703000
         ST    @03,Q                                               0330 00704000
@DE00270 C     @03,NUMCPUS                                         0330 00705000
         BNH   @DL00270                                            0330 00706000
* ELSE                                                             0331 00707000
* DO;                                                      /*@0099VLS*/ 00708000
         B     @RC00269                                            0331 00709000
@RF00269 DS    0H                                                  0332 00710000
*  IF I = 4 THEN I = 19; /*MAKE UP FOR CHANNEL COUNTS        @0199VLS*/ 00711000
         CLC   I(4),@CF00063                                       0332 00712000
         BNE   @RF00332                                            0332 00713000
         MVC   I(4),@CF00625                                       0333 00714000
*  LIN2(3:5) = ZCPU;                                       /*@0099VLS*/ 00715000
@RF00332 MVC   LIN2+2(3),ZCPU                                      0334 00716000
*  TRENPTR = SAVEPTR;                                      /*@0099VLS*/ 00717000
         L     @03,SAVEPTR                                         0335 00718000
         ST    @03,TRENPTR(,R2)                                    0335 00719000
*    DO J = 1 TO NUMCPUS;    /* LOOP FOR NUMBER OF CPU'S     @Z427VLS*/ 00720000
         LA    @03,1                                               0336 00721000
         B     @DE00336                                            0336 00722000
@DL00336 DS    0H                                                  0337 00723000
*      LETTER = EVLETTER(J); /* MOVE CPU LETTER TO PRINT LINE        */ 00724000
         MH    @03,@CH00080                                        0337 00725000
         L     @01,EVPTR(,R2)                                      0337 00726000
         ALR   @01,@03                                             0337 00727000
         MVC   LETTER(1),EVLETTER-6(@01)                           0337 00728000
*      DO K = 1 TO NUMDAYS;  /* LOOP FOR NUMBER OF DAYS      @Z427VLS*/ 00729000
         LA    @03,1                                               0338 00730000
         B     @DE00338                                            0338 00731000
@DL00338 DS    0H                                                  0339 00732000
*        BINWORD = TREITM(K,I);   /* ERROR COUNT DATA        @Z427VLS*/ 00733000
         LR    @15,@03                                             0339 00734000
         MH    @15,@CH00625                                        0339 00735000
         AL    @15,I                                               0339 00736000
         SLA   @15,2                                               0339 00737000
         L     @01,TRENPTR(,R2)                                    0339 00738000
         AL    @01,@CF00840                                        0339 00739000
         L     @15,TREITM-8(@15,@01)                               0339 00740000
         ST    @15,BINWORD                                         0339 00741000
*        DECADDR = ADDR(ERCNT(K)) + 1; /* DAY SLOT IN PRINT LINE     */ 00742000
         SLA   @03,2                                               0340 00743000
         LA    @03,ERCNT-4(@03)                                    0340 00744000
         AL    @03,@CF00054                                        0340 00745000
         ST    @03,DECADDR                                         0340 00746000
*        CALL CONVBIN;            /* CONVERT ERROR DATA TO EBCDIC    */ 00747000
         BAL   @14,CONVBIN                                         0341 00748000
*      END;                                                /*@Z427VLS*/ 00749000
         LA    @03,1                                               0342 00750000
         AL    @03,K                                               0342 00751000
@DE00338 ST    @03,K                                               0342 00752000
         C     @03,NUMDAYS(,R2)                                    0342 00753000
         BNH   @DL00338                                            0342 00754000
*      HD3MOVE = LIN2;       /* MOVE PRINT LINE TO PRINT AREA        */ 00755000
         MVC   HD3MOVE(128),LIN2                                   0343 00756000
*      CALL PRINT1;          /* PRINT DAILY ERROR COUNTS - THIS CPU  */ 00757000
         BAL   @14,PRINT1                                          0344 00758000
*      TRENPTR = TRENEXT;    /* POINT TO ERROR TABLE - NEXT CPU      */ 00759000
         L     @03,TRENPTR(,R2)                                    0345 00760000
         L     @03,TRENEXT(,@03)                                   0345 00761000
         ST    @03,TRENPTR(,R2)                                    0345 00762000
*    END;                                                  /*@Z427VLS*/ 00763000
         LA    @03,1                                               0346 00764000
         AL    @03,J                                               0346 00765000
@DE00336 ST    @03,J                                               0346 00766000
         C     @03,NUMCPUS                                         0346 00767000
         BNH   @DL00336                                            0346 00768000
*  END;                                                    /*@0099VLS*/ 00769000
*    TRENPTR = SAVEPTR;      /* RE-SET POINT TO ERROR TABLE - 1ST    */ 00770000
@RC00269 L     @03,SAVEPTR                                         0348 00771000
         ST    @03,TRENPTR(,R2)                                    0348 00772000
*                            /* CPU - TO PROCESS NEXT ERROR TYPE     */ 00773000
*  END;                                                    /*@Z427VLS*/ 00774000
         LA    @03,1                                               0349 00775000
         AL    @03,I                                               0349 00776000
         ST    @03,I                                               0349 00777000
         C     @03,@CF00063                                        0349 00778000
         BNH   @DL00263                                            0349 00779000
*END;                                                      /*@Z427VLS*/ 00780000
@EL00005 DS    0H                                                  0350 00781000
@EF00005 DS    0H                                                  0350 00782000
@ER00005 LM    @14,@12,@SA00005                                    0350 00783000
         BR    @14                                                 0350 00784000
*/********************************************************************/ 00785000
*/*                                                          @Z427VLS*/ 00786000
*/* THIS PROC PRINTS THE MODEL AND SERIAL NO. OF THE CPU'S FOR WHICH */ 00787000
*/* ERROR COUNTS HAVE BEEN PRINTED                           @Z427VLS*/ 00788000
*/*                                                          @Z427VLS*/ 00789000
*CPUMODSN:  PROC;                                          /*@Z427VLS*/ 00790000
CPUMODSN STM   @14,@12,@SA00006                                    0351 00791000
*  IF ((LINECT - TWO) - MYLINECT) < (FIVE + NUMCPUS) THEN          0352 00792000
         LH    @03,LINECT(,R2)                                     0352 00793000
         BCTR  @03,0                                               0352 00794000
         BCTR  @03,0                                               0352 00795000
         SL    @03,MYLINECT                                        0352 00796000
         LA    @15,5                                               0352 00797000
         AL    @15,NUMCPUS                                         0352 00798000
         CR    @03,@15                                             0352 00799000
         BNL   @RF00352                                            0352 00800000
*    DO;                     /* DATA TO BE PRINTED WILL NOT FIT IN   */ 00801000
*      MYLINECT = ZERO;      /* REMAINING VERTICAL SPACE     @Z427VLS*/ 00802000
         SLR   @03,@03                                             0354 00803000
         ST    @03,MYLINECT                                        0354 00804000
*      SPACING = UPSPACE;                                  /*@Z427VLS*/ 00805000
         MVI   SPACING,X'89'                                       0355 00806000
*      CALL HEADING1;                                      /*@Z427VLS*/ 00807000
         BAL   @14,HEADING1                                        0356 00808000
*    END;                                                  /*@Z427VLS*/ 00809000
*      MYLINECT = ZERO;      /* REMAINING VERTICAL SPACE     @Z427VLS*/ 00810000
@RF00352 SLR   @03,@03                                             0358 00811000
         ST    @03,MYLINECT                                        0358 00812000
*      SPACING = TRIPLE;                                   /*@Z427VLS*/ 00813000
         MVI   SPACING,X'19'                                       0359 00814000
*      LNESPACE = THREE;                                   /*@Z427VLS*/ 00815000
         MVC   LNESPACE(4),@CF00075                                0360 00816000
*      CALL PRINT1;          /* SKIP 3 LINES                 @Z427VLS*/ 00817000
         BAL   @14,PRINT1                                          0361 00818000
*      SPACING = SINGLE;                                   /*@Z427VLS*/ 00819000
         MVI   SPACING,X'09'                                       0362 00820000
*      LNESPACE = ONE;                                     /*@Z427VLS*/ 00821000
         MVC   LNESPACE(4),@CF00054                                0363 00822000
*      CPULINE1 = CPULINE;   /* MOVE HEADING LINE TO PRINT AREA      */ 00823000
         MVC   CPULINE1(24),CPULINE                                0364 00824000
*      CALL PRINT1;          /* PRINT HEADING                @Z427VLS*/ 00825000
         BAL   @14,PRINT1                                          0365 00826000
*      CALL PRINT1;          /* PRINT BLANK LINE             @Z427VLS*/ 00827000
         BAL   @14,PRINT1                                          0366 00828000
*      DO I = 1 TO NUMCPUS;                                /*@Z427VLS*/ 00829000
         LA    @03,1                                               0367 00830000
         B     @DE00367                                            0367 00831000
@DL00367 DS    0H                                                  0368 00832000
*        CPUTYPE = EVLETTER(I);   /* MOVE CPU LETTER TO PRINT LINE   */ 00833000
         MH    @03,@CH00080                                        0368 00834000
         L     @15,EVPTR(,R2)                                      0368 00835000
         ST    @03,@TF00001                                        0368 00836000
         ALR   @03,@15                                             0368 00837000
         MVC   CPUTYPE(1),EVLETTER-6(@03)                          0368 00838000
*        NUMBER = TWO;            /* TWO BYTES TO BE CONVERTED       */ 00839000
         MVC   NUMBER(4),@CF00073                                  0369 00840000
*        NEXTBY = ADDR(EVMODEL(I));    /* DATA SOURCE - PARM TABLE   */ 00841000
         L     @03,@TF00001                                        0370 00842000
         LA    @03,EVMODEL-6(@03,@15)                              0370 00843000
         ST    @03,NEXTBY                                          0370 00844000
*        ADDNXT = ADDR(CPUMODEL); /* DATA DESTINATION - PRINT LINE   */ 00845000
         LA    @03,CPUMODEL                                        0371 00846000
         ST    @03,ADDNXT                                          0371 00847000
*        CALL CONVERT;            /* CONVERT CPU MODEL NO. TO EBCDIC */ 00848000
         BAL   @14,CONVERT                                         0372 00849000
*        NUMBER = THREE;          /* THREE BYTES TO BE CONVERTED     */ 00850000
         MVC   NUMBER(4),@CF00075                                  0373 00851000
*        NEXTBY = ADDR(EVSERIAL(I));   /* DATA SOURCE - PARM TABLE   */ 00852000
         L     @03,I                                               0374 00853000
         MH    @03,@CH00080                                        0374 00854000
         L     @01,EVPTR(,R2)                                      0374 00855000
         LA    @03,EVSERIAL-6(@03,@01)                             0374 00856000
         ST    @03,NEXTBY                                          0374 00857000
*        ADDNXT = ADDR(CPUSERAL);  /* DATA DESTINATION - PRINT LINE  */ 00858000
         LA    @03,CPUSERAL                                        0375 00859000
         ST    @03,ADDNXT                                          0375 00860000
*        CALL CONVERT;            /* CONVERT CPU SERIAL NO. TO EBCDIC*/ 00861000
         BAL   @14,CONVERT                                         0376 00862000
*        CPULINE1 = CPUDATA;      /* MOVE PRINT LINE TO PRINT AREA   */ 00863000
         MVI   CPULINE1+20,C' '                                    0377 00864000
         MVC   CPULINE1+21(3),CPULINE1+20                          0377 00865000
         MVC   CPULINE1(20),CPUDATA                                0377 00866000
*        CALL PRINT1;             /* PRINT CPU, MODEL, SERIAL NO.    */ 00867000
         BAL   @14,PRINT1                                          0378 00868000
*      END;                                                /*@Z427VLS*/ 00869000
         LA    @03,1                                               0379 00870000
         AL    @03,I                                               0379 00871000
@DE00367 ST    @03,I                                               0379 00872000
         C     @03,NUMCPUS                                         0379 00873000
         BNH   @DL00367                                            0379 00874000
*END;                                                      /*@Z427VLS*/ 00875000
@EL00006 DS    0H                                                  0380 00876000
@EF00006 DS    0H                                                  0380 00877000
@ER00006 LM    @14,@12,@SA00006                                    0380 00878000
         BR    @14                                                 0380 00879000
*/********************************************************************/ 00880000
*/*                                                          @Z427VLS*/ 00881000
*/* THIS PROC INITIALIZES PRINT CONTROLS AND LINES 2 AND 3 OF THE    */ 00882000
*/* REPORT HEADING FOR PART 2.                               @Z427VLS*/ 00883000
*INITPRT2:  PROC OPTIONS(NOSAVEAREA);                      /*@Z427VLS*/ 00884000
INITPRT2 STM   @14,@12,12(@13)                                     0381 00885000
*  SPACING = UPSPACE;        /* SET CARRIAGE CONTROL TO NEXT PAGE    */ 00886000
         MVI   SPACING,X'89'                                       0382 00887000
*  MYLINECT = ZERO;          /* CLEAR PRINT LINE COUNTER     @Z427VLS*/ 00888000
         SLR   @03,@03                                             0383 00889000
         ST    @03,MYLINECT                                        0383 00890000
*  LNESPACE = ZERO;          /* SET LINE COUNTER INCREMENT TO 0      */ 00891000
         ST    @03,LNESPACE                                        0384 00892000
*  LINE2 = LINE2P2;          /* CHANGE LINES 2, 3 OF REPORT HEADING  */ 00893000
         MVI   LINE2+51,C' '                                       0385 00894000
         MVC   LINE2+52(5),LINE2+51                                0385 00895000
         MVC   LINE2(51),LINE2P2                                   0385 00896000
*  LINE3 = LINE3P2;          /* TO PART 2 DATA               @Z427VLS*/ 00897000
         MVI   LINE3+51,C' '                                       0386 00898000
         MVC   LINE3+52(5),LINE3+51                                0386 00899000
         MVC   LINE3(51),LINE3P2                                   0386 00900000
*  DO J = 1 TO 30;                                         /*@Z427VLS*/ 00901000
         LA    @03,1                                               0387 00902000
         ST    @03,J                                               0387 00903000
@DL00387 DS    0H                                                  0388 00904000
*    PERMCT(J) = ZERO;                                     /*@Z427VLS*/ 00905000
         SLR   @15,@15                                             0388 00906000
         LR    @14,@03                                             0388 00907000
         SLA   @14,2                                               0388 00908000
         LA    @01,PERMCT-4(@14)                                   0388 00909000
         STCM  @15,15,0(@01)                                       0388 00910000
*    TEMPCT(J) = ZERO;                                     /*@Z427VLS*/ 00911000
         LA    @01,TEMPCT-4(@14)                                   0389 00912000
         STCM  @15,15,0(@01)                                       0389 00913000
*  END;                                                    /*@Z427VLS*/ 00914000
         AL    @03,@CF00054                                        0390 00915000
         ST    @03,J                                               0390 00916000
         C     @03,@CF00546                                        0390 00917000
         BNH   @DL00387                                            0390 00918000
* END;                                                     /*@Z427VLS*/ 00919000
@EL00007 DS    0H                                                  0391 00920000
@EF00007 DS    0H                                                  0391 00921000
@ER00007 LM    @14,@12,12(@13)                                     0391 00922000
         BR    @14                                                 0391 00923000
*/********************************************************************/ 00924000
*/*                                                          @Z427VLS*/ 00925000
*/* THIS PROC PERFORMS INITIALIZATION FOR TWO OTHER PROCS - ACCUMERR */ 00926000
*/* AND PRINTALL - WHICH SUMMARIZE OBR,MDR TEMPORARY AND PERMANENT   */ 00927000
*/* ERROR COUNTS BY DAY,BY CUA AND THEN PRINT RESPECTIVELY. SHARED   */ 00928000
*/* I/O IS REFLECTED IN THE REPORT,IF REQUESTED.             @Z427VLS*/ 00929000
*/*                                                          @Z427VLS*/ 00930000
*CUAERREC:  PROC;                                          /*@Z427VLS*/ 00931000
CUAERREC STM   @14,@12,@SA00008                                    0392 00932000
*  PREVGRP = TRENDGRP(1);               /* FIRST GROUP       @Z427VLS*/ 00933000
         L     @15,SORTADR(,R2)                                    0393 00934000
         SLR   PREVGRP,PREVGRP                                     0393 00935000
         IC    PREVGRP,TRENDGRP(,@15)                              0393 00936000
*  PREVDEV = TRENDDEV(1);               /* FIRST DEVICE      @Z427VLS*/ 00937000
         MVC   PREVDEV(2),TRENDDEV(@15)                            0394 00938000
*  PREVCPU = TRENCPUS(1) & 'F0'X;       /* FIRST CPU         @Z427VLS*/ 00939000
         MVC   PREVCPU(1),TRENCPUS(@15)                            0395 00940000
         NI    PREVCPU,X'F0'                                       0395 00941000
*  PREVCUA = TRENDRT(1) & 'FFF0'X;      /* FIRST CUA         @Z427VLS*/ 00942000
         MVC   PREVCUA(2),TRENDRT(@15)                             0396 00943000
         NC    PREVCUA(2),@CB00760                                 0396 00944000
*  I = 1;                                                  /*@Z427VLS*/ 00945000
         MVC   I(4),@CF00054                                       0397 00946000
*  DO UNTIL (I > SORTNUM);                                 /*@Z427VLS*/ 00947000
@DL00398 DS    0H                                                  0399 00948000
*    CALL PRTGROUP;               /* PRINT GROUP HEADING     @Z427VLS*/ 00949000
         BAL   @14,PRTGROUP                                        0399 00950000
*    DO UNTIL (I > SORTNUM | PREVGRP ¬= TRENDGRP(I));      /*@Z427VLS*/ 00951000
@DL00400 DS    0H                                                  0401 00952000
*      IF PREVGRP = 5 THEN                                         0401 00953000
         C     PREVGRP,@CF00078                                    0401 00954000
         BNE   @RF00401                                            0401 00955000
*        CALL TPCNTRL;               /* DO TP CONTROLLER     @Z427VLS*/ 00956000
         BAL   @14,TPCNTRL                                         0402 00957000
*      IF I ¬> SORTNUM THEN                                        0403 00958000
@RF00401 L     @15,I                                               0403 00959000
         C     @15,SORTNUM(,R2)                                    0403 00960000
         BH    @RF00403                                            0403 00961000
*       DO;                                                /*@Z427VLS*/ 00962000
*      CALL DODEVTYP;               /* PRINT THE DEVICE TYPE @Z427VLS*/ 00963000
         BAL   @14,DODEVTYP                                        0405 00964000
*      DO UNTIL (I > SORTNUM | PREVGRP ¬= TRENDGRP(I) |            0406 00965000
*                PREVDEV ¬= TRENDDEV(I));                  /*@Z427VLS*/ 00966000
@DL00406 DS    0H                                                  0407 00967000
*        CALL DOCUA;                 /* DETERMINE THE CUA    @Z427VLS*/ 00968000
         BAL   @14,DOCUA                                           0407 00969000
*        DO UNTIL (I > SORTNUM | PREVGRP ¬= TRENDGRP(I) |          0408 00970000
*                  PREVDEV ¬= TRENDDEV(I) |                        0408 00971000
*                  PREVCUA ¬= (TRENDRT(I) & 'FFF0'X));     /*@Z427VLS*/ 00972000
@DL00408 DS    0H                                                  0409 00973000
*          CPUWORK = PREVCPU;                              /*@Z427VLS*/ 00974000
         MVC   CPUWORK(1),PREVCPU                                  0409 00975000
*          SRL (CPUWORK,FOUR);                             /*@Z427VLS*/ 00976000
         SLR   @15,@15                                             0410 00977000
         IC    @15,CPUWORK                                         0410 00978000
         SRL   @15,4                                               0410 00979000
         STC   @15,CPUWORK                                         0410 00980000
*          LABELCPU(CPU+1) = 1;      /* SET FOR BASE CPU     @Z427VLS*/ 00981000
         SLR   @01,@01                                             0411 00982000
         IC    @01,CPU                                             0411 00983000
         LA    @00,1                                               0411 00984000
         STC   @00,LABELCPU(@01)                                   0411 00985000
*          DO UNTIL (I > SORTNUM | PREVGRP ¬= TRENDGRP(I) |        0412 00986000
*                    PREVDEV ¬= TRENDDEV(I) |                      0412 00987000
*                    PREVCUA ¬= (TRENDRT(I) & 'FFF0'X) |           0412 00988000
*                    PREVCPU ¬= (TRENCPUS(I) & 'F0'X));    /*@Z427VLS*/ 00989000
@DL00412 DS    0H                                                  0413 00990000
*            CALL ACCUMERR;           /* TOTAL INTO THE BUCKETS      */ 00991000
         BAL   @14,ACCUMERR                                        0413 00992000
*          END;                                            /*@Z427VLS*/ 00993000
@DE00412 L     @15,I                                               0414 00994000
         C     @15,SORTNUM(,R2)                                    0414 00995000
         BH    @DC00412                                            0414 00996000
         MH    @15,@CH00484                                        0414 00997000
         L     @14,SORTADR(,R2)                                    0414 00998000
         LA    @01,0(@15,@14)                                      0414 00999000
         AL    @01,@CF00841                                        0414 01000000
         SLR   @00,@00                                             0414 01001000
         IC    @00,TRENDGRP(,@01)                                  0414 01002000
         CR    PREVGRP,@00                                         0414 01003000
         BNE   @DC00412                                            0414 01004000
         ST    @15,@TF00001                                        0414 01005000
         ALR   @15,@14                                             0414 01006000
         AL    @15,@CF00835                                        0414 01007000
         CLC   PREVDEV(2),TRENDDEV-6(@15)                          0414 01008000
         BNE   @DC00412                                            0414 01009000
         LR    @15,@14                                             0414 01010000
         AL    @15,@TF00001                                        0414 01011000
         AL    @15,@CF00842                                        0414 01012000
         MVC   @TS00001(2),TRENDRT-1(@15)                          0414 01013000
         NC    @TS00001(2),@CB00760                                0414 01014000
         CLC   PREVCUA(2),@TS00001                                 0414 01015000
         BNE   @DC00412                                            0414 01016000
         AL    @14,@TF00001                                        0414 01017000
         AL    @14,@CF00843                                        0414 01018000
         MVC   @TS00001(1),TRENCPUS-3(@14)                         0414 01019000
         NI    @TS00001,X'F0'                                      0414 01020000
         CLC   PREVCPU(1),@TS00001                                 0414 01021000
         BE    @DL00412                                            0414 01022000
@DC00412 DS    0H                                                  0415 01023000
*          CALL OUTCUA;               /* OUTPUT CUA AND CPU LETTERS  */ 01024000
         BAL   @14,OUTCUA                                          0415 01025000
*          CALL CNVRTPRT;             /* OUTPUT THE ERROR LINES      */ 01026000
         BAL   @14,CNVRTPRT                                        0416 01027000
*          IF I ¬> SORTNUM THEN                                    0417 01028000
         L     @15,I                                               0417 01029000
         C     @15,SORTNUM(,R2)                                    0417 01030000
         BH    @RF00417                                            0417 01031000
*            PREVCPU = TRENCPUS(I) & 'F0'X;                /*@Z427VLS*/ 01032000
         MH    @15,@CH00484                                        0418 01033000
         L     @01,SORTADR(,R2)                                    0418 01034000
         ALR   @01,@15                                             0418 01035000
         AL    @01,@CF00843                                        0418 01036000
         MVC   PREVCPU(1),TRENCPUS-3(@01)                          0418 01037000
         NI    PREVCPU,X'F0'                                       0418 01038000
*        END;                                              /*@Z427VLS*/ 01039000
@RF00417 DS    0H                                                  0419 01040000
@DE00408 L     @15,I                                               0419 01041000
         C     @15,SORTNUM(,R2)                                    0419 01042000
         BH    @DC00408                                            0419 01043000
         MH    @15,@CH00484                                        0419 01044000
         L     @14,SORTADR(,R2)                                    0419 01045000
         LA    @01,0(@15,@14)                                      0419 01046000
         AL    @01,@CF00841                                        0419 01047000
         SLR   @00,@00                                             0419 01048000
         IC    @00,TRENDGRP(,@01)                                  0419 01049000
         CR    PREVGRP,@00                                         0419 01050000
         BNE   @DC00408                                            0419 01051000
         ST    @15,@TF00001                                        0419 01052000
         ALR   @15,@14                                             0419 01053000
         AL    @15,@CF00835                                        0419 01054000
         CLC   PREVDEV(2),TRENDDEV-6(@15)                          0419 01055000
         BNE   @DC00408                                            0419 01056000
         AL    @14,@TF00001                                        0419 01057000
         AL    @14,@CF00842                                        0419 01058000
         MVC   @TS00001(2),TRENDRT-1(@14)                          0419 01059000
         NC    @TS00001(2),@CB00760                                0419 01060000
         CLC   PREVCUA(2),@TS00001                                 0419 01061000
         BE    @DL00408                                            0419 01062000
@DC00408 DS    0H                                                  0420 01063000
*        IF I ¬> SORTNUM THEN                                      0420 01064000
         L     @15,I                                               0420 01065000
         C     @15,SORTNUM(,R2)                                    0420 01066000
         BH    @RF00420                                            0420 01067000
*          PREVCUA = TRENDRT(I) & 'FFF0'X;                 /*@Z427VLS*/ 01068000
         MH    @15,@CH00484                                        0421 01069000
         L     @01,SORTADR(,R2)                                    0421 01070000
         ALR   @01,@15                                             0421 01071000
         AL    @01,@CF00842                                        0421 01072000
         MVC   PREVCUA(2),TRENDRT-1(@01)                           0421 01073000
         NC    PREVCUA(2),@CB00760                                 0421 01074000
*      END;                                                /*@Z427VLS*/ 01075000
@RF00420 DS    0H                                                  0422 01076000
@DE00406 L     @15,I                                               0422 01077000
         C     @15,SORTNUM(,R2)                                    0422 01078000
         BH    @DC00406                                            0422 01079000
         MH    @15,@CH00484                                        0422 01080000
         L     @14,SORTADR(,R2)                                    0422 01081000
         LA    @01,0(@15,@14)                                      0422 01082000
         AL    @01,@CF00841                                        0422 01083000
         SLR   @00,@00                                             0422 01084000
         IC    @00,TRENDGRP(,@01)                                  0422 01085000
         CR    PREVGRP,@00                                         0422 01086000
         BNE   @DC00406                                            0422 01087000
         ALR   @14,@15                                             0422 01088000
         AL    @14,@CF00835                                        0422 01089000
         CLC   PREVDEV(2),TRENDDEV-6(@14)                          0422 01090000
         BE    @DL00406                                            0422 01091000
@DC00406 DS    0H                                                  0423 01092000
*      IF I ¬> SORTNUM THEN                                        0423 01093000
         L     @15,I                                               0423 01094000
         C     @15,SORTNUM(,R2)                                    0423 01095000
         BH    @RF00423                                            0423 01096000
*        PREVDEV = TRENDDEV(I);                            /*@Z427VLS*/ 01097000
         MH    @15,@CH00484                                        0424 01098000
         L     @01,SORTADR(,R2)                                    0424 01099000
         ALR   @01,@15                                             0424 01100000
         AL    @01,@CF00835                                        0424 01101000
         MVC   PREVDEV(2),TRENDDEV-6(@01)                          0424 01102000
*     END;                           /*END TO THE IF  STATEMENT     */  01103000
@RF00423 DS    0H                                                  0426 01104000
*    END;                                                  /*@Z427VLS*/ 01105000
@RF00403 DS    0H                                                  0426 01106000
@DE00400 L     @15,I                                               0426 01107000
         C     @15,SORTNUM(,R2)                                    0426 01108000
         BH    @DC00400                                            0426 01109000
         MH    @15,@CH00484                                        0426 01110000
         L     @01,SORTADR(,R2)                                    0426 01111000
         AL    @01,@CF00841                                        0426 01112000
         SLR   @14,@14                                             0426 01113000
         IC    @14,TRENDGRP(@15,@01)                               0426 01114000
         CR    PREVGRP,@14                                         0426 01115000
         BE    @DL00400                                            0426 01116000
@DC00400 DS    0H                                                  0427 01117000
*    IF I ¬> SORTNUM THEN                                          0427 01118000
         L     @15,I                                               0427 01119000
         C     @15,SORTNUM(,R2)                                    0427 01120000
         BH    @RF00427                                            0427 01121000
*      DO;                                                 /*@Z427VLS*/ 01122000
*        CALL PRINT1;                /* SKIP A LINE          @Z427VLS*/ 01123000
         BAL   @14,PRINT1                                          0429 01124000
*        PREVGRP = TRENDGRP(I);                            /*@Z427VLS*/ 01125000
         L     @15,I                                               0430 01126000
         MH    @15,@CH00484                                        0430 01127000
         L     @01,SORTADR(,R2)                                    0430 01128000
         AL    @01,@CF00841                                        0430 01129000
         SLR   PREVGRP,PREVGRP                                     0430 01130000
         IC    PREVGRP,TRENDGRP(@15,@01)                           0430 01131000
*      END;                                                /*@Z427VLS*/ 01132000
*  END;                                                    /*@Z427VLS*/ 01133000
@RF00427 DS    0H                                                  0432 01134000
@DE00398 L     @15,I                                               0432 01135000
         C     @15,SORTNUM(,R2)                                    0432 01136000
         BNH   @DL00398                                            0432 01137000
*END;                                                      /*@Z427VLS*/ 01138000
@EL00008 DS    0H                                                  0433 01139000
@EF00008 DS    0H                                                  0433 01140000
@ER00008 LM    @14,@12,@SA00008                                    0433 01141000
         BR    @14                                                 0433 01142000
*/********************************************************************/ 01143000
*/*                                                          @Z427VLS*/ 01144000
*/* THIS PROC TOTALS THE TEMPORARY AND PERMANENT COUNTS INTO THE     */ 01145000
*/* BUCKET FOR THE APPORPRIATE DAY.                          @Z427VLS*/ 01146000
*/*                                                          @Z427VLS*/ 01147000
*ACCUMERR:  PROC;                                          /*@Z427VLS*/ 01148000
ACCUMERR STM   @14,@12,12(@13)                                     0434 01149000
*  CPUWORK = TRENDITM(I) & '0F'X;  /* BASE CPU - LEFT JUSTIFIED      */ 01150000
         L     @03,I                                               0435 01151000
         LR    @15,@03                                             0435 01152000
         MH    @15,@CH00484                                        0435 01153000
         L     @14,SORTADR(,R2)                                    0435 01154000
         ST    @15,@TF00001                                        0435 01155000
         ALR   @15,@14                                             0435 01156000
         AL    @15,@CF00844                                        0435 01157000
         MVC   CPUWORK(1),TRENDITM-4(@15)                          0435 01158000
         NI    CPUWORK,X'0F'                                       0435 01159000
*  LABELCPU(CPU+1) = 1;                                    /*@Z427VLS*/ 01160000
         LA    @15,1                                               0436 01161000
         SLR   @01,@01                                             0436 01162000
         IC    @01,CPU                                             0436 01163000
         STC   @15,LABELCPU(@01)                                   0436 01164000
*  J = TRENDDAT(I);                    /* SET THE DATE INDEX @Z427VLS*/ 01165000
         L     @01,@TF00001                                        0437 01166000
         AL    @01,@CF00845                                        0437 01167000
         SLR   @00,@00                                             0437 01168000
         IC    @00,TRENDDAT-5(@01,@14)                             0437 01169000
         ST    @00,J                                               0437 01170000
*     PERMCT(J) = PERMCT(J) + TREPRM(I);                   /*@0099VLS*/ 01171000
         SLA   @00,2                                               0438 01172000
         LR    @01,@00                                             0438 01173000
         LA    @09,PERMCT-4(@01)                                   0438 01174000
         ICM   @08,15,0(@09)                                       0438 01175000
         LR    @09,@14                                             0438 01176000
         AL    @09,@TF00001                                        0438 01177000
         AL    @09,@CF00846                                        0438 01178000
         ICM   @09,12,TREPRM-8(@09)                                0438 01179000
         SRA   @09,16                                              0438 01180000
         ALR   @08,@09                                             0438 01181000
         LR    @09,@00                                             0438 01182000
         LA    @01,PERMCT-4(@09)                                   0438 01183000
         STCM  @08,15,0(@01)                                       0438 01184000
*     TEMPCT(J) = TEMPCT(J) + TRETMP(I);                   /*@0099VLS*/ 01185000
         LR    @01,@00                                             0439 01186000
         LA    @09,TEMPCT-4(@01)                                   0439 01187000
         ICM   @08,15,0(@09)                                       0439 01188000
         AL    @14,@TF00001                                        0439 01189000
         AL    @14,@CF00836                                        0439 01190000
         ICM   @09,15,TRETMP-10(@14)                               0439 01191000
         ALR   @08,@09                                             0439 01192000
         LR    @09,@00                                             0439 01193000
         LA    @01,TEMPCT-4(@09)                                   0439 01194000
         STCM  @08,15,0(@01)                                       0439 01195000
*  I = I + 1;                                              /*@Z427VLS*/ 01196000
         ALR   @03,@15                                             0440 01197000
         ST    @03,I                                               0440 01198000
*END;                                                      /*@Z427VLS*/ 01199000
@EL00009 DS    0H                                                  0441 01200000
@EF00009 DS    0H                                                  0441 01201000
@ER00009 LM    @14,@12,12(@13)                                     0441 01202000
         BR    @14                                                 0441 01203000
*/********************************************************************/ 01204000
*/*                                                          @Z427VLS*/ 01205000
*/* THIS PROC PRINT THE GROUP HEADING.                       @Z427VLS*/ 01206000
*/*                                                          @Z427VLS*/ 01207000
*PRTGROUP: PROC;                                           /*@Z427VLS*/ 01208000
PRTGROUP STM   @14,@12,12(@13)                                     0442 01209000
*  GROUPLBL = DEVGROUP(PREVGRP);                           /*@Z427VLS*/ 01210000
         LR    @15,PREVGRP                                         0443 01211000
         SLA   @15,3                                               0443 01212000
         LA    @14,DEVGROUP-8(@15)                                 0443 01213000
         MVC   GROUPLBL(8),0(@14)                                  0443 01214000
*  LINESPRT = LINESPRT + NUMBER1;       /* PRINT A LINE      @Z427VLS*/ 01215000
         LA    @15,1                                               0444 01216000
         AL    @15,LINESPRT                                        0444 01217000
         ST    @15,LINESPRT                                        0444 01218000
*  GRPOUT = ON;                                            /*@Z427VLS*/ 01219000
         OI    GRPOUT,B'10000000'                                  0445 01220000
*END;                                                      /*@Z427VLS*/ 01221000
@EL00010 DS    0H                                                  0446 01222000
@EF00010 DS    0H                                                  0446 01223000
@ER00010 LM    @14,@12,12(@13)                                     0446 01224000
         BR    @14                                                 0446 01225000
*/********************************************************************/ 01226000
*/*                                                          @Z427VLS*/ 01227000
*/* THIS PROC PRINT THE DEVICE TYPE HEADING.                 @Z427VLS*/ 01228000
*/*                                                          @Z427VLS*/ 01229000
*DODEVTYP: PROC;                                           /*@Z427VLS*/ 01230000
DODEVTYP STM   @14,@12,@SA00011                                    0447 01231000
*  IF PREVDEV ¬= '0000'X THEN                                      0448 01232000
         CLC   PREVDEV(2),@CB00208                                 0448 01233000
         BE    @RF00448                                            0448 01234000
*  DO;                                                     /*@Z427VLS*/ 01235000
*  NUMBER = TWO;                                           /*@Z427VLS*/ 01236000
         MVC   NUMBER(4),@CF00073                                  0450 01237000
*  NEXTBY = ADDR(PREVDEV);                                 /*@Z427VLS*/ 01238000
         LA    @03,PREVDEV                                         0451 01239000
         ST    @03,NEXTBY                                          0451 01240000
*  ADDNXT = ADDR(CUDEV);                                   /*@Z427VLS*/ 01241000
         LA    @03,CUDEV                                           0452 01242000
         ST    @03,ADDNXT                                          0452 01243000
*  CALL CONVERT;                                           /*@Z427VLS*/ 01244000
         BAL   @14,CONVERT                                         0453 01245000
*  END;                                                    /*@Z427VLS*/ 01246000
*  ELSE                                                            0455 01247000
*  CUDEV = UKNO;         /*DEVICE IS UKNOWN (FROM FILTER)    @Z427VLS*/ 01248000
         B     @RC00448                                            0455 01249000
@RF00448 MVC   CUDEV(4),UKNO                                       0455 01250000
*  LINESPRT = LINESPRT + NUMBER1;        /* PRINT A LINE     @Z427VLS*/ 01251000
@RC00448 LA    @03,1                                               0456 01252000
         AL    @03,LINESPRT                                        0456 01253000
         ST    @03,LINESPRT                                        0456 01254000
*  DEVOUT = ON;                                            /*@Z427VLS*/ 01255000
         OI    DEVOUT,B'01000000'                                  0457 01256000
*END;                                                      /*@Z427VLS*/ 01257000
@EL00011 DS    0H                                                  0458 01258000
@EF00011 DS    0H                                                  0458 01259000
@ER00011 LM    @14,@12,@SA00011                                    0458 01260000
         BR    @14                                                 0458 01261000
*/********************************************************************/ 01262000
*/*                                                          @Z427VLS*/ 01263000
*/* THIS PROC CREATED THE CUA HEADING.                       @Z427VLS*/ 01264000
*/*                                                          @Z427VLS*/ 01265000
*DOCUA: PROC;                                              /*@Z427VLS*/ 01266000
DOCUA    STM   @14,@12,@SA00012                                    0459 01267000
*  CUACONV = PREVCUA;                                      /*@Z427VLS*/ 01268000
         MVC   CUACONV(2),PREVCUA                                  0460 01269000
*  SRL (CUACONV,FOUR);                                     /*@Z427VLS*/ 01270000
         SLR   @03,@03                                             0461 01271000
         ICM   @03,3,CUACONV                                       0461 01272000
         SRL   @03,4                                               0461 01273000
         STCM  @03,3,CUACONV                                       0461 01274000
*  NUMBER = TWO;                                           /*@Z427VLS*/ 01275000
         MVC   NUMBER(4),@CF00073                                  0462 01276000
*  NEXTBY = ADDR(CUACONV);                                 /*@Z427VLS*/ 01277000
         LA    @03,CUACONV                                         0463 01278000
         ST    @03,NEXTBY                                          0463 01279000
*  ADDNXT = ADDR(CUADATA);                                 /*@Z427VLS*/ 01280000
         LA    @03,CUADATA                                         0464 01281000
         ST    @03,ADDNXT                                          0464 01282000
*  SWITCH1 = ON;                                           /*@Z427VLS*/ 01283000
         OI    SWITCH1,B'00001000'                                 0465 01284000
*  CALL CONVERT;                                           /*@Z427VLS*/ 01285000
         BAL   @14,CONVERT                                         0466 01286000
*END;                                                      /*@Z427VLS*/ 01287000
@EL00012 DS    0H                                                  0467 01288000
@EF00012 DS    0H                                                  0467 01289000
@ER00012 LM    @14,@12,@SA00012                                    0467 01290000
         BR    @14                                                 0467 01291000
*/********************************************************************/ 01292000
*/*                                                          @Z427VLS*/ 01293000
*/* THIS PROC OUTPUTS THE CUA HEADING AND THE CPU LETTERS.   @Z427VLS*/ 01294000
*/*                                                          @Z427VLS*/ 01295000
*OUTCUA: PROC;                                             /*@Z427VLS*/ 01296000
OUTCUA   STM   @14,@12,12(@13)                                     0468 01297000
*  K = 1;                                                  /*@Z427VLS*/ 01298000
         LA    @03,1                                               0469 01299000
         ST    @03,K                                               0469 01300000
*  DO J = 1 TO 16;                                         /*@Z427VLS*/ 01301000
         ST    @03,J                                               0470 01302000
@DL00470 DS    0H                                                  0471 01303000
*    IF LABELCPU (J) = 1 THEN                                      0471 01304000
         LA    @15,1                                               0471 01305000
         SLR   @14,@14                                             0471 01306000
         IC    @14,LABELCPU-1(@03)                                 0471 01307000
         CR    @15,@14                                             0471 01308000
         BNE   @RF00471                                            0471 01309000
*      DO;                                                 /*@Z427VLS*/ 01310000
*        CPULBL(K) = EVLETTER(J);         /*  PLACE THE CPU LETTER   */ 01311000
         L     @14,K                                               0473 01312000
         LA    @01,CPULBL-1(@14)                                   0473 01313000
         LR    @09,@03                                             0473 01314000
         MH    @09,@CH00080                                        0473 01315000
         L     @08,EVPTR(,R2)                                      0473 01316000
         ALR   @08,@09                                             0473 01317000
         MVC   0(1,@01),EVLETTER-6(@08)                            0473 01318000
*        K = K + 1;                                        /*@Z427VLS*/ 01319000
         ALR   @14,@15                                             0474 01320000
         ST    @14,K                                               0474 01321000
*        LABELCPU(J) = ZERO;                               /*@Z427VLS*/ 01322000
         SLR   @15,@15                                             0475 01323000
         STC   @15,LABELCPU-1(@03)                                 0475 01324000
*      END;                                                /*@Z427VLS*/ 01325000
*  END;                                                    /*@Z427VLS*/ 01326000
@RF00471 LA    @03,1                                               0477 01327000
         AL    @03,J                                               0477 01328000
         ST    @03,J                                               0477 01329000
         C     @03,@CF00088                                        0477 01330000
         BNH   @DL00470                                            0477 01331000
*  LINESPRT = LINESPRT + NUMBER1;         /* PRINT ONE LINE  @Z427VLS*/ 01332000
         LA    @03,1                                               0478 01333000
         AL    @03,LINESPRT                                        0478 01334000
         ST    @03,LINESPRT                                        0478 01335000
*  CUAOUT = ON;                                            /*@Z427VLS*/ 01336000
         OI    CUAOUT,B'00100000'                                  0479 01337000
*END;                                                      /*@Z427VLS*/ 01338000
@EL00013 DS    0H                                                  0480 01339000
@EF00013 DS    0H                                                  0480 01340000
@ER00013 LM    @14,@12,12(@13)                                     0480 01341000
         BR    @14                                                 0480 01342000
*/********************************************************************/ 01343000
*/*                                                          @Z427VLS*/ 01344000
*/* THIS PROC PROCESSES THE TP CONTROLLER GROUP.             @Z427VLS*/ 01345000
*/*                                                          @Z427VLS*/ 01346000
*TPCNTRL:   PROC;                                          /*@Z427VLS*/ 01347000
TPCNTRL  STM   @14,@12,@SA00014                                    0481 01348000
*  DO UNTIL (I > SORTNUM | PREVGRP ¬= TRENDGRP(I));        /*@Z427VLS*/ 01349000
@DL00482 DS    0H                                                  0483 01350000
*    PREVCPU = TRENCPUS(I) & 'F0'X;       /* CPU             @Z427VLS*/ 01351000
         L     @15,I                                               0483 01352000
         MH    @15,@CH00484                                        0483 01353000
         L     @14,SORTADR(,R2)                                    0483 01354000
         ST    @15,@TF00001                                        0483 01355000
         ALR   @15,@14                                             0483 01356000
         AL    @15,@CF00843                                        0483 01357000
         MVC   PREVCPU(1),TRENCPUS-3(@15)                          0483 01358000
         NI    PREVCPU,X'F0'                                       0483 01359000
*    PREVDEV = TRENDDEV(I);               /* DEVICE          @Z427VLS*/ 01360000
         LR    @15,@14                                             0484 01361000
         AL    @15,@TF00001                                        0484 01362000
         AL    @15,@CF00835                                        0484 01363000
         MVC   PREVDEV(2),TRENDDEV-6(@15)                          0484 01364000
*    PREVCUA = TRENDRT(I) & 'FFF0'X;      /* CUA             @Z427VLS*/ 01365000
         LR    @15,@14                                             0485 01366000
         AL    @15,@TF00001                                        0485 01367000
         AL    @15,@CF00842                                        0485 01368000
         MVC   PREVCUA(2),TRENDRT-1(@15)                           0485 01369000
         NC    PREVCUA(2),@CB00760                                 0485 01370000
*    PREV37  = TRENDITM(I) & 'F0'X;       /* 3705 FLAG       @Z427VLS*/ 01371000
         AL    @14,@TF00001                                        0486 01372000
         AL    @14,@CF00844                                        0486 01373000
         MVC   PREV37(1),TRENDITM-4(@14)                           0486 01374000
         NI    PREV37,X'F0'                                        0486 01375000
*    CALL DODEVTYP;                      /* PRINT THE DEVICE TYPE   */  01376000
         BAL   @14,DODEVTYP                                        0487 01377000
*    DO UNTIL (I > SORTNUM | PREVGRP ¬= TRENDGRP(I) |              0488 01378000
*              PREVDEV ¬= TRENDDEV(I));                    /*@Z427VLS*/ 01379000
@DL00488 DS    0H                                                  0489 01380000
*      CALL DOCUA;              /* CREATE THE CUA            @Z427VLS*/ 01381000
         BAL   @14,DOCUA                                           0489 01382000
*      DO UNTIL (I > SORTNUM | PREVGRP ¬= TRENDGRP(I) |            0490 01383000
*                PREVDEV ¬= TRENDDEV(I) |                          0490 01384000
*                PREVCUA ¬= (TRENDRT(I) & 'FFF0'X));       /*@Z427VLS*/ 01385000
@DL00490 DS    0H                                                  0491 01386000
*        CPUWORK = PREVCPU;                                /*@Z427VLS*/ 01387000
         MVC   CPUWORK(1),PREVCPU                                  0491 01388000
*        SRL (CPUWORK,FOUR);                               /*@Z427VLS*/ 01389000
         SLR   @15,@15                                             0492 01390000
         IC    @15,CPUWORK                                         0492 01391000
         SRL   @15,4                                               0492 01392000
         STC   @15,CPUWORK                                         0492 01393000
*        LABELCPU(CPU+1) = 1;        /* SET CPU INDICATOR    @Z427VLS*/ 01394000
         SLR   @01,@01                                             0493 01395000
         IC    @01,CPU                                             0493 01396000
         LA    @00,1                                               0493 01397000
         STC   @00,LABELCPU(@01)                                   0493 01398000
*        DO UNTIL (I > SORTNUM | PREVGRP ¬= TRENDGRP(I) |          0494 01399000
*                  PREVDEV ¬= TRENDDEV(I) |                        0494 01400000
*                  PREVCUA ¬= (TRENDRT(I) & 'FFF0'X) |             0494 01401000
*                  PREVCPU ¬= (TRENCPUS(I) & 'F0'X));      /*@Z427VLS*/ 01402000
@DL00494 DS    0H                                                  0495 01403000
*          J = TRENDITM(I);                                /*@Z427VLS*/ 01404000
         L     @15,I                                               0495 01405000
         MH    @15,@CH00484                                        0495 01406000
         L     @01,SORTADR(,R2)                                    0495 01407000
         AL    @01,@CF00844                                        0495 01408000
         SLR   @14,@14                                             0495 01409000
         IC    @14,TRENDITM-4(@15,@01)                             0495 01410000
         ST    @14,J                                               0495 01411000
*          SRL (J,FOUR);                                   /*@Z427VLS*/ 01412000
         SRL   @14,4                                               0496 01413000
         ST    @14,J                                               0496 01414000
*          CONTRLBL = TPLABEL(J+1);    /* 3705 LABELS.       @Z427VLS*/ 01415000
         L     @15,J                                               0497 01416000
         SLA   @15,3                                               0497 01417000
         LA    @14,TPLABEL(@15)                                    0497 01418000
         MVC   CONTRLBL(8),0(@14)                                  0497 01419000
*          DO UNTIL (I > SORTNUM | PREVGRP ¬= TRENDGRP(I) |        0498 01420000
*                    PREVDEV ¬= TRENDDEV(I) |                      0498 01421000
*                    PREVCUA ¬= (TRENDRT(I) & 'FFF0'X) |           0498 01422000
*                    PREVCPU ¬= (TRENCPUS(I) & 'F0'X) |            0498 01423000
*                    PREV37 ¬= (TRENDITM(I) & 'F0'X));     /*@Z427VLS*/ 01424000
@DL00498 DS    0H                                                  0499 01425000
*            CALL ACCUMERR;                                /*@Z427VLS*/ 01426000
         BAL   @14,ACCUMERR                                        0499 01427000
*          END;                                            /*@Z427VLS*/ 01428000
@DE00498 L     @15,I                                               0500 01429000
         C     @15,SORTNUM(,R2)                                    0500 01430000
         BH    @DC00498                                            0500 01431000
         MH    @15,@CH00484                                        0500 01432000
         L     @14,SORTADR(,R2)                                    0500 01433000
         LA    @01,0(@15,@14)                                      0500 01434000
         AL    @01,@CF00841                                        0500 01435000
         SLR   @00,@00                                             0500 01436000
         IC    @00,TRENDGRP(,@01)                                  0500 01437000
         CR    PREVGRP,@00                                         0500 01438000
         BNE   @DC00498                                            0500 01439000
         ST    @15,@TF00001                                        0500 01440000
         ALR   @15,@14                                             0500 01441000
         AL    @15,@CF00835                                        0500 01442000
         CLC   PREVDEV(2),TRENDDEV-6(@15)                          0500 01443000
         BNE   @DC00498                                            0500 01444000
         LR    @15,@14                                             0500 01445000
         AL    @15,@TF00001                                        0500 01446000
         AL    @15,@CF00842                                        0500 01447000
         MVC   @TS00001(2),TRENDRT-1(@15)                          0500 01448000
         NC    @TS00001(2),@CB00760                                0500 01449000
         CLC   PREVCUA(2),@TS00001                                 0500 01450000
         BNE   @DC00498                                            0500 01451000
         LR    @15,@14                                             0500 01452000
         AL    @15,@TF00001                                        0500 01453000
         AL    @15,@CF00843                                        0500 01454000
         MVC   @TS00001(1),TRENCPUS-3(@15)                         0500 01455000
         NI    @TS00001,X'F0'                                      0500 01456000
         CLC   PREVCPU(1),@TS00001                                 0500 01457000
         BNE   @DC00498                                            0500 01458000
         AL    @14,@TF00001                                        0500 01459000
         AL    @14,@CF00844                                        0500 01460000
         MVC   @TS00001(1),TRENDITM-4(@14)                         0500 01461000
         NI    @TS00001,X'F0'                                      0500 01462000
         CLC   PREV37(1),@TS00001                                  0500 01463000
         BE    @DL00498                                            0500 01464000
@DC00498 DS    0H                                                  0501 01465000
*          CALL OUTCUA;           /* OUTPUT THE CUA          @Z427VLS*/ 01466000
         BAL   @14,OUTCUA                                          0501 01467000
*          N3705OUT = ON;                                  /*@Z427VLS*/ 01468000
         OI    N3705OUT,B'00010000'                                0502 01469000
*          LINESPRT = LINESPRT + 7;                        /*@Z427VLS*/ 01470000
         LA    @15,7                                               0503 01471000
         AL    @15,LINESPRT                                        0503 01472000
         ST    @15,LINESPRT                                        0503 01473000
*          CALL CNVRTPRT;         /* OUTPUT THE ERROR LINES  @Z427VLS*/ 01474000
         BAL   @14,CNVRTPRT                                        0504 01475000
*          IF I ¬> SORTNUM THEN                                    0505 01476000
         L     @15,I                                               0505 01477000
         C     @15,SORTNUM(,R2)                                    0505 01478000
         BH    @RF00505                                            0505 01479000
*            PREV37 = TRENDITM(I) & 'F0'X;                 /*@Z427VLS*/ 01480000
         MH    @15,@CH00484                                        0506 01481000
         L     @01,SORTADR(,R2)                                    0506 01482000
         ALR   @01,@15                                             0506 01483000
         AL    @01,@CF00844                                        0506 01484000
         MVC   PREV37(1),TRENDITM-4(@01)                           0506 01485000
         NI    PREV37,X'F0'                                        0506 01486000
*        END;                                              /*@Z427VLS*/ 01487000
@RF00505 DS    0H                                                  0507 01488000
@DE00494 L     @15,I                                               0507 01489000
         C     @15,SORTNUM(,R2)                                    0507 01490000
         BH    @DC00494                                            0507 01491000
         MH    @15,@CH00484                                        0507 01492000
         L     @14,SORTADR(,R2)                                    0507 01493000
         LA    @01,0(@15,@14)                                      0507 01494000
         AL    @01,@CF00841                                        0507 01495000
         SLR   @00,@00                                             0507 01496000
         IC    @00,TRENDGRP(,@01)                                  0507 01497000
         CR    PREVGRP,@00                                         0507 01498000
         BNE   @DC00494                                            0507 01499000
         ST    @15,@TF00001                                        0507 01500000
         ALR   @15,@14                                             0507 01501000
         AL    @15,@CF00835                                        0507 01502000
         CLC   PREVDEV(2),TRENDDEV-6(@15)                          0507 01503000
         BNE   @DC00494                                            0507 01504000
         LR    @15,@14                                             0507 01505000
         AL    @15,@TF00001                                        0507 01506000
         AL    @15,@CF00842                                        0507 01507000
         MVC   @TS00001(2),TRENDRT-1(@15)                          0507 01508000
         NC    @TS00001(2),@CB00760                                0507 01509000
         CLC   PREVCUA(2),@TS00001                                 0507 01510000
         BNE   @DC00494                                            0507 01511000
         AL    @14,@TF00001                                        0507 01512000
         AL    @14,@CF00843                                        0507 01513000
         MVC   @TS00001(1),TRENCPUS-3(@14)                         0507 01514000
         NI    @TS00001,X'F0'                                      0507 01515000
         CLC   PREVCPU(1),@TS00001                                 0507 01516000
         BE    @DL00494                                            0507 01517000
@DC00494 DS    0H                                                  0508 01518000
*        IF I ¬> SORTNUM THEN                                      0508 01519000
         L     @15,I                                               0508 01520000
         C     @15,SORTNUM(,R2)                                    0508 01521000
         BH    @RF00508                                            0508 01522000
*          PREVCPU = TRENCPUS(I) & 'F0'X;                  /*@Z427VLS*/ 01523000
         MH    @15,@CH00484                                        0509 01524000
         L     @01,SORTADR(,R2)                                    0509 01525000
         ALR   @01,@15                                             0509 01526000
         AL    @01,@CF00843                                        0509 01527000
         MVC   PREVCPU(1),TRENCPUS-3(@01)                          0509 01528000
         NI    PREVCPU,X'F0'                                       0509 01529000
*      END;                                                /*@Z427VLS*/ 01530000
@RF00508 DS    0H                                                  0510 01531000
@DE00490 L     @15,I                                               0510 01532000
         C     @15,SORTNUM(,R2)                                    0510 01533000
         BH    @DC00490                                            0510 01534000
         MH    @15,@CH00484                                        0510 01535000
         L     @14,SORTADR(,R2)                                    0510 01536000
         LA    @01,0(@15,@14)                                      0510 01537000
         AL    @01,@CF00841                                        0510 01538000
         SLR   @00,@00                                             0510 01539000
         IC    @00,TRENDGRP(,@01)                                  0510 01540000
         CR    PREVGRP,@00                                         0510 01541000
         BNE   @DC00490                                            0510 01542000
         ST    @15,@TF00001                                        0510 01543000
         ALR   @15,@14                                             0510 01544000
         AL    @15,@CF00835                                        0510 01545000
         CLC   PREVDEV(2),TRENDDEV-6(@15)                          0510 01546000
         BNE   @DC00490                                            0510 01547000
         AL    @14,@TF00001                                        0510 01548000
         AL    @14,@CF00842                                        0510 01549000
         MVC   @TS00001(2),TRENDRT-1(@14)                          0510 01550000
         NC    @TS00001(2),@CB00760                                0510 01551000
         CLC   PREVCUA(2),@TS00001                                 0510 01552000
         BE    @DL00490                                            0510 01553000
@DC00490 DS    0H                                                  0511 01554000
*      IF I ¬> SORTNUM THEN                                        0511 01555000
         L     @15,I                                               0511 01556000
         C     @15,SORTNUM(,R2)                                    0511 01557000
         BH    @RF00511                                            0511 01558000
*        PREVCUA = TRENDRT(I) & 'FFF0'X;                   /*@Z427VLS*/ 01559000
         MH    @15,@CH00484                                        0512 01560000
         L     @01,SORTADR(,R2)                                    0512 01561000
         ALR   @01,@15                                             0512 01562000
         AL    @01,@CF00842                                        0512 01563000
         MVC   PREVCUA(2),TRENDRT-1(@01)                           0512 01564000
         NC    PREVCUA(2),@CB00760                                 0512 01565000
*    END;                                                  /*@Z427VLS*/ 01566000
@RF00511 DS    0H                                                  0513 01567000
@DE00488 L     @15,I                                               0513 01568000
         C     @15,SORTNUM(,R2)                                    0513 01569000
         BH    @DC00488                                            0513 01570000
         MH    @15,@CH00484                                        0513 01571000
         L     @14,SORTADR(,R2)                                    0513 01572000
         LA    @01,0(@15,@14)                                      0513 01573000
         AL    @01,@CF00841                                        0513 01574000
         SLR   @00,@00                                             0513 01575000
         IC    @00,TRENDGRP(,@01)                                  0513 01576000
         CR    PREVGRP,@00                                         0513 01577000
         BNE   @DC00488                                            0513 01578000
         ALR   @14,@15                                             0513 01579000
         AL    @14,@CF00835                                        0513 01580000
         CLC   PREVDEV(2),TRENDDEV-6(@14)                          0513 01581000
         BE    @DL00488                                            0513 01582000
@DC00488 DS    0H                                                  0514 01583000
*    IF I ¬> SORTNUM THEN                                          0514 01584000
         L     @15,I                                               0514 01585000
         C     @15,SORTNUM(,R2)                                    0514 01586000
         BH    @RF00514                                            0514 01587000
*      PREVDEV = TRENDDEV(I);                              /*@Z427VLS*/ 01588000
         MH    @15,@CH00484                                        0515 01589000
         L     @01,SORTADR(,R2)                                    0515 01590000
         ALR   @01,@15                                             0515 01591000
         AL    @01,@CF00835                                        0515 01592000
         MVC   PREVDEV(2),TRENDDEV-6(@01)                          0515 01593000
*  END;                                                    /*@Z427VLS*/ 01594000
@RF00514 DS    0H                                                  0516 01595000
@DE00482 L     @15,I                                               0516 01596000
         C     @15,SORTNUM(,R2)                                    0516 01597000
         BH    @DC00482                                            0516 01598000
         MH    @15,@CH00484                                        0516 01599000
         L     @01,SORTADR(,R2)                                    0516 01600000
         AL    @01,@CF00841                                        0516 01601000
         SLR   @14,@14                                             0516 01602000
         IC    @14,TRENDGRP(@15,@01)                               0516 01603000
         CR    PREVGRP,@14                                         0516 01604000
         BE    @DL00482                                            0516 01605000
@DC00482 DS    0H                                                  0517 01606000
*END;                                                      /*@Z427VLS*/ 01607000
@EL00014 DS    0H                                                  0517 01608000
@EF00014 DS    0H                                                  0517 01609000
@ER00014 LM    @14,@12,@SA00014                                    0517 01610000
         BR    @14                                                 0517 01611000
*/********************************************************************/ 01612000
*/*                                                          @Z427VLS*/ 01613000
*/* THIS PROC CONVERTS THE SUMMARIZED PERMANENT AND TEMPORARY ERROR  */ 01614000
*/* COUNT DATA TO EBCDIC FOR PRINTING AND THEN PRINTS BOTH LINES.    */ 01615000
*/*                                                          @Z427VLS*/ 01616000
*CNVRTPRT:  PROC;                                          /*@Z427VLS*/ 01617000
CNVRTPRT STM   @14,@12,@SA00015                                    0518 01618000
*  LINESPRT = LINESPRT + 2;   /* TOTAL NUMBER OF LINES TO PRINT      */ 01619000
         LA    @03,2                                               0519 01620000
         L     @15,LINESPRT                                        0519 01621000
         ALR   @15,@03                                             0519 01622000
         ST    @15,LINESPRT                                        0519 01623000
*  IF LINESPRT + MYLINECT => (LINECT - TWO) THEN                   0520 01624000
         AL    @15,MYLINECT                                        0520 01625000
         LCR   @03,@03                                             0520 01626000
         AH    @03,LINECT(,R2)                                     0520 01627000
         CR    @15,@03                                             0520 01628000
         BL    @RF00520                                            0520 01629000
*    DO;                                                   /*@Z427VLS*/ 01630000
*      SPACING = UPSPACE;    /* UPSPACE TO A NEW PAGE        @Z427VLS*/ 01631000
         MVI   SPACING,X'89'                                       0522 01632000
*      CALL HEADING1;                                      /*@Z427VLS*/ 01633000
         BAL   @14,HEADING1                                        0523 01634000
*      CALL HEADING2;                                      /*@Z427VLS*/ 01635000
         BAL   @14,HEADING2                                        0524 01636000
*      MYLINECT = FOUR;                                    /*@Z427VLS*/ 01637000
         MVC   MYLINECT(4),@CF00063                                0525 01638000
*    END;                                                  /*@Z427VLS*/ 01639000
*  LINESPRT = ZERO;                                        /*@Z427VLS*/ 01640000
@RF00520 SLR   @03,@03                                             0527 01641000
         ST    @03,LINESPRT                                        0527 01642000
*  IF GRPOUT = ON THEN                                             0528 01643000
         TM    GRPOUT,B'10000000'                                  0528 01644000
         BNO   @RF00528                                            0528 01645000
*    DO;                                                   /*@Z427VLS*/ 01646000
*      LABELLNE = GROUPLBL;   /* GROUP LABEL                 @Z427VLS*/ 01647000
         MVC   LABELLNE(8),GROUPLBL                                0530 01648000
*      CALL PRINT1;                                        /*@Z427VLS*/ 01649000
         BAL   @14,PRINT1                                          0531 01650000
*      GRPOUT = OFF;                                       /*@Z427VLS*/ 01651000
         NI    GRPOUT,B'01111111'                                  0532 01652000
*    END;                                                  /*@Z427VLS*/ 01653000
*  IF DEVOUT = ON THEN                                             0534 01654000
@RF00528 TM    DEVOUT,B'01000000'                                  0534 01655000
         BNO   @RF00534                                            0534 01656000
*    DO;                                                   /*@Z427VLS*/ 01657000
*      LABELLNE = CUDVDATA;   /* DEVICE LINE                 @Z427VLS*/ 01658000
         MVC   LABELLNE(8),CUDVDATA                                0536 01659000
*      CALL PRINT1;                                        /*@Z427VLS*/ 01660000
         BAL   @14,PRINT1                                          0537 01661000
*      DEVOUT = OFF;                                       /*@Z427VLS*/ 01662000
         NI    DEVOUT,B'10111111'                                  0538 01663000
*    END;                                                  /*@Z427VLS*/ 01664000
*  IF CUAOUT = ON THEN                                             0540 01665000
@RF00534 TM    CUAOUT,B'00100000'                                  0540 01666000
         BNO   @RF00540                                            0540 01667000
*    DO;                                                   /*@Z427VLS*/ 01668000
*      LABELLNE = CUALINE;    /* CUA CPU LINE                @Z427VLS*/ 01669000
         MVC   LABELLNE(8),CUALINE                                 0542 01670000
*      CALL PRINT1;                                        /*@Z427VLS*/ 01671000
         BAL   @14,PRINT1                                          0543 01672000
*      CUAOUT = OFF;                                       /*@Z427VLS*/ 01673000
         NI    CUAOUT,B'11011111'                                  0544 01674000
*    END;                                                  /*@Z427VLS*/ 01675000
*  IF N3705OUT = ON THEN                                           0546 01676000
@RF00540 TM    N3705OUT,B'00010000'                                0546 01677000
         BNO   @RF00546                                            0546 01678000
*    DO;                                                   /*@Z427VLS*/ 01679000
*      LABELLNE = CONTRLBL;   /* 3705 FLAG LINE              @Z427VLS*/ 01680000
         MVC   LABELLNE(8),CONTRLBL                                0548 01681000
*      CALL PRINT1;                                        /*@Z427VLS*/ 01682000
         BAL   @14,PRINT1                                          0549 01683000
*      N3705OUT = OFF;                                     /*@Z427VLS*/ 01684000
         NI    N3705OUT,B'11101111'                                0550 01685000
*    END;                                                  /*@Z427VLS*/ 01686000
*  DO J = 1 TO NUMDAYS;                                    /*@Z427VLS*/ 01687000
@RF00546 LA    @03,1                                               0552 01688000
         B     @DE00552                                            0552 01689000
@DL00552 DS    0H                                                  0553 01690000
*    BINWORD = PERMCT(J);    /* PERMANENT ERROR DATA TO BE CONVERTED.*/ 01691000
         SLA   @03,2                                               0553 01692000
         LA    @01,PERMCT-4(@03)                                   0553 01693000
         ICM   @00,15,0(@01)                                       0553 01694000
         ST    @00,BINWORD                                         0553 01695000
*    DECADDR = ADDR(PERM(J)) + 1; /*  WHERE - POSITION IN PRINT LINE.*/ 01696000
         LA    @03,PERM-4(@03)                                     0554 01697000
         AL    @03,@CF00054                                        0554 01698000
         ST    @03,DECADDR                                         0554 01699000
*    CALL CONVBIN;           /* CONVERT TO EBCDIC.           @Z427VLS*/ 01700000
         BAL   @14,CONVBIN                                         0555 01701000
*    BINWORD = TEMPCT(J);    /* TEMPORARY ERROR DATA TO BE CONVERTED.*/ 01702000
         L     @03,J                                               0556 01703000
         SLA   @03,2                                               0556 01704000
         LA    @01,TEMPCT-4(@03)                                   0556 01705000
         ICM   @00,15,0(@01)                                       0556 01706000
         ST    @00,BINWORD                                         0556 01707000
*    DECADDR = ADDR(TEMP(J)) + 1; /*  WHERE - POSITION IN PRINT LINE.*/ 01708000
         LA    @03,TEMP-4(@03)                                     0557 01709000
         AL    @03,@CF00054                                        0557 01710000
         ST    @03,DECADDR                                         0557 01711000
*    CALL CONVBIN;           /* CONVERT TO EBCDIC.           @Z427VLS*/ 01712000
         BAL   @14,CONVBIN                                         0558 01713000
*  END;                                                    /*@Z427VLS*/ 01714000
         LA    @03,1                                               0559 01715000
         AL    @03,J                                               0559 01716000
@DE00552 ST    @03,J                                               0559 01717000
         C     @03,NUMDAYS(,R2)                                    0559 01718000
         BNH   @DL00552                                            0559 01719000
*  HD2MOVE = PERMELNE;       /* MOVE PRINT LINE TO PRINT AREA.       */ 01720000
         MVC   HD2MOVE(128),PERMELNE                               0560 01721000
*  CALL PRINT1;              /* PRINT PERMANENT ERROR SUMMARY LINE.  */ 01722000
         BAL   @14,PRINT1                                          0561 01723000
*  HD2MOVE = TEMPELNE;       /* MOVE PRINT LINE TO PRINT AREA.       */ 01724000
         MVC   HD2MOVE(128),TEMPELNE                               0562 01725000
*  CALL PRINT1;              /* PRINT TEMPORARY ERROR SUMMARY LINE.  */ 01726000
         BAL   @14,PRINT1                                          0563 01727000
*  DO J = 1 TO 30;                                         /*@Z427VLS*/ 01728000
         LA    @03,1                                               0564 01729000
         ST    @03,J                                               0564 01730000
@DL00564 DS    0H                                                  0565 01731000
*    PERMCT(J) = ZERO;       /* CLEAR PERM COUNT TO ZERO     @Z427VLS*/ 01732000
         SLR   @15,@15                                             0565 01733000
         LR    @14,@03                                             0565 01734000
         SLA   @14,2                                               0565 01735000
         LA    @01,PERMCT-4(@14)                                   0565 01736000
         STCM  @15,15,0(@01)                                       0565 01737000
*    TEMPCT(J) = ZERO;       /* CLEAR TEMP COUNT TO ZERO     @Z427VLS*/ 01738000
         LA    @01,TEMPCT-4(@14)                                   0566 01739000
         STCM  @15,15,0(@01)                                       0566 01740000
*    CPULBL(J) = ' ';        /* CLEAR CPU LABELS TO BLANKS   @Z427VLS*/ 01741000
         LA    @01,CPULBL-1(@03)                                   0567 01742000
         MVI   0(@01),C' '                                         0567 01743000
*  END;                                                    /*@Z427VLS*/ 01744000
         AL    @03,@CF00054                                        0568 01745000
         ST    @03,J                                               0568 01746000
         C     @03,@CF00546                                        0568 01747000
         BNH   @DL00564                                            0568 01748000
*END;                                                      /*@Z427VLS*/ 01749000
@EL00015 DS    0H                                                  0569 01750000
@EF00015 DS    0H                                                  0569 01751000
@ER00015 LM    @14,@12,@SA00015                                    0569 01752000
         BR    @14                                                 0569 01753000
*/********************************************************************/ 01754000
*/*                                                          @Z427VLS*/ 01755000
*/* THIS PROC SETS UP LINKAGE TO ACCESS I/O SERVICE PRINT -  @Z427VLS*/ 01756000
*/*                                                          @Z427VLS*/ 01757000
*PRINT1:    PROC;                                          /*@Z427VLS*/ 01758000
PRINT1   STM   @14,@12,@SA00016                                    0570 01759000
*  CALL PRINT2;                                            /*@Z427VLS*/ 01760000
         BAL   @14,PRINT2                                          0571 01761000
*  MYLINECT = MYLINECT + LNESPACE;          /* BUMP LINE COUNTER     */ 01762000
         L     @03,MYLINECT                                        0572 01763000
         AL    @03,LNESPACE                                        0572 01764000
         ST    @03,MYLINECT                                        0572 01765000
*      IF MYLINECT => (LINECT-TWO) &  /* IF PAGE OVERFLOW AND @0001VLS* 01766000
*         I ¬> SORTNUM THEN           /* NOT LAST RCD, PRINT  @0001VLS* 01767000
         LH    @15,LINECT(,R2)                                     0573 01768000
         BCTR  @15,0                                               0573 01769000
         BCTR  @15,0                                               0573 01770000
         CR    @03,@15                                             0573 01771000
         BL    @RF00573                                            0573 01772000
         L     @03,I                                               0573 01773000
         C     @03,SORTNUM(,R2)                                    0573 01774000
         BH    @RF00573                                            0573 01775000
*    DO;                                    /* DAY HEADING - NEXT PG.*/ 01776000
*      SPACING = UPSPACE;                                  /*@Z427VLS*/ 01777000
         MVI   SPACING,X'89'                                       0575 01778000
*      CALL HEADING1;                                      /*@Z427VLS*/ 01779000
         BAL   @14,HEADING1                                        0576 01780000
*      CALL HEADING2;                                      /*@Z427VLS*/ 01781000
         BAL   @14,HEADING2                                        0577 01782000
*      MYLINECT = FOUR;                     /* CLEAR LINE COUNTER    */ 01783000
         MVC   MYLINECT(4),@CF00063                                0578 01784000
*    END;                                                  /*@Z427VLS*/ 01785000
*END;                                                      /*@Z427VLS*/ 01786000
@EL00016 DS    0H                                                  0580 01787000
@EF00016 DS    0H                                                  0580 01788000
@ER00016 LM    @14,@12,@SA00016                                    0580 01789000
         BR    @14                                                 0580 01790000
*/********************************************************************/ 01791000
*/*                                                          @Z427VLS*/ 01792000
*/* WRITE TO THE PRINTER                                     @Z427VLS*/ 01793000
*/*                                                          @Z427VLS*/ 01794000
*PRINT2:    PROC;                                          /*@Z427VLS*/ 01795000
PRINT2   STM   @14,@12,@SA00017                                    0581 01796000
*  PRINTADR = ADDR(PRINTLNE);               /* LINE TO BE PRINTED    */ 01797000
         LA    @03,PRINTLNE                                        0582 01798000
         ST    @03,PRINTADR(,R2)                                   0582 01799000
*  CALL IOHND(RITEPRTR);                    /* PRINT IT      @Z427VLS*/ 01800000
         L     @15,ADIOHND(,R2)                                    0583 01801000
         LA    @01,@AL00583                                        0583 01802000
         BALR  @14,@15                                             0583 01803000
*END;                                                      /*@Z427VLS*/ 01804000
@EL00017 DS    0H                                                  0584 01805000
@EF00017 DS    0H                                                  0584 01806000
@ER00017 LM    @14,@12,@SA00017                                    0584 01807000
         BR    @14                                                 0584 01808000
*/********************************************************************/ 01809000
*/*                                                          @Z427VLS*/ 01810000
*/* THIS PROC CONVERTS THE BINARY NUMBER IN ITEM BINWORD TO DISPLAY. */ 01811000
*/* IF THE CONVERTED NUMBER IS > THAN THE NUMBER OF DIGITS REQUESTED */ 01812000
*/* (IN ITEM BNDECNUM), A NINE IS PLACED IN EACH PRINT POSITION.     */ 01813000
*/* LEADING ZEROS ARE SUPPRESSED.                            @Z427VLS*/ 01814000
*/*                                                          @Z427VLS*/ 01815000
*CONVBIN:   PROC;                                          /*@Z427VLS*/ 01816000
CONVBIN  STM   @14,@12,@SA00018                                    0585 01817000
*  RESPECIFY (R8,R9) RESTRICTED;                           /*@Z427VLS*/ 01818000
*  R8 = BINWORD;             /* DATA TO BE CONVERTED.        @Z427VLS*/ 01819000
         L     R8,BINWORD                                          0587 01820000
*  GEN(CVD R8,DBLWORD);      /* CONVERT TO PACKED DECIMAL.   @Z427VLS*/ 01821000
         CVD R8,DBLWORD                                                 01822000
*  GEN(UNPK WORK(8),DBLWORD);   /* UNPACK CONVERTED NO.      @Z427VLS*/ 01823000
         UNPK WORK(8),DBLWORD                                           01824000
*  GEN(OI WORK+7,X'F0');     /* INSERT 'PLUS' SIGN.          @Z427VLS*/ 01825000
         OI WORK+7,X'F0'                                                01826000
*  SWITCH2 = OFF;            /* TURN OFF SWITCH.             @Z427VLS*/ 01827000
         NI    SWITCH2,B'11111011'                                 0591 01828000
*  DO L = 1 TO 7 WHILE (SWITCH2 = OFF);  /* SCAN NUMBER -    @Z427VLS*/ 01829000
         LA    @03,1                                               0592 01830000
         ST    @03,L                                               0592 01831000
@DL00592 TM    SWITCH2,B'00000100'                                 0592 01832000
         BNZ   @DC00592                                            0592 01833000
*    IF WORKOVER(L) = 'F0'X THEN                                   0593 01834000
         LA    @01,WORKOVER-1(@03)                                 0593 01835000
         CLI   0(@01),X'F0'                                        0593 01836000
         BNE   @RF00593                                            0593 01837000
*      WORKOVER(L) = '40'X;  /* SET LEADING 0'S TO BLANKS.   @Z427VLS*/ 01838000
         LA    @01,WORKOVER-1(@03)                                 0594 01839000
         MVI   0(@01),X'40'                                        0594 01840000
*    ELSE                                                          0595 01841000
*      SWITCH2 = ON;         /* TURN ON SWITCH TO TERMINATE LOOP     */ 01842000
         B     @RC00593                                            0595 01843000
@RF00593 OI    SWITCH2,B'00000100'                                 0595 01844000
*  END;                      /* WHEN 1ST NON-ZERO DIGIT FOUND.       */ 01845000
@RC00593 LA    @03,1                                               0596 01846000
         AL    @03,L                                               0596 01847000
         ST    @03,L                                               0596 01848000
         C     @03,@CF00082                                        0596 01849000
         BNH   @DL00592                                            0596 01850000
@DC00592 DS    0H                                                  0597 01851000
*  IF (10 - L) > BNDECNUM THEN                                     0597 01852000
         LA    @03,10                                              0597 01853000
         SL    @03,L                                               0597 01854000
         C     @03,BNDECNUM                                        0597 01855000
         BNH   @RF00597                                            0597 01856000
*    DO;                                                   /*@Z427VLS*/ 01857000
*      GEN(MVI WORKOVER,X'F9');          /* NUMBER TOO LARGE -       */ 01858000
         MVI WORKOVER,X'F9'                                             01859000
*      GEN(MVC WORKOVER+1(7),WORKOVER);  /* REPLACE WITH 9'S.        */ 01860000
         MVC WORKOVER+1(7),WORKOVER                                     01861000
*    END;                                                  /*@Z427VLS*/ 01862000
*  R8 = ADDR(WORKOVER) + (8-BNDECNUM);   /* ADDRESS - BEGIN. OF DATA.*/ 01863000
@RF00597 LA    R8,WORKOVER                                         0602 01864000
         L     @03,BNDECNUM                                        0602 01865000
         LA    @15,8                                               0602 01866000
         SLR   @15,@03                                             0602 01867000
         ALR   R8,@15                                              0602 01868000
*  R9 = BNDECNUM - ONE;                  /* NO. OF BYTES TO MOVE.    */ 01869000
         BCTR  @03,0                                               0603 01870000
         LR    R9,@03                                              0603 01871000
*  RESPECIFY (R6) RESTRICTED;                              /*@Z427VLS*/ 01872000
*  R6 = DECADDR;                         /* ADDRESS - DATA DESTINAT. */ 01873000
         L     R6,DECADDR                                          0605 01874000
*  GEN(EX R9,MVCINS);                    /* MOVE DATA.       @Z427VLS*/ 01875000
         EX R9,MVCINS                                                   01876000
*  GENERATE DATA;                                          /*@Z427VLS*/ 01877000
*  RESPECIFY (R6) UNRESTRICTED;                            /*@Z427VLS*/ 01878000
*END;                                                      /*@Z427VLS*/ 01879000
@EL00018 DS    0H                                                  0609 01880000
@EF00018 DS    0H                                                  0609 01881000
@ER00018 LM    @14,@12,@SA00018                                    0609 01882000
         BR    @14                                                 0609 01883000
*/********************************************************************/ 01884000
*/*                                                          @Z427VLS*/ 01885000
*/* THIS PROC CONVERTS HEX DATA TO DISPLAY.                  @Z427VLS*/ 01886000
*/* TO SUPPRESS CONVERSION OF LEFT-MOST HALF OF HIGH ORDER BYTE,     */ 01887000
*/* USER SHOULD SET SWITCH1 ON.                              @Z427VLS*/ 01888000
*/*                                                          @Z427VLS*/ 01889000
*CONVERT:   PROC;                                          /*@Z427VLS*/ 01890000
CONVERT  STM   @14,@12,12(@13)                                     0610 01891000
*  RESPECIFY (R8,R9) RESTRICTED;                           /*@Z427VLS*/ 01892000
*  DO P = NUMBER BY -1 TO 1; /* NUMBER OF BYTES TO CONVERT.  @Z427VLS*/ 01893000
         L     @03,NUMBER                                          0612 01894000
         ST    @03,P                                               0612 01895000
         B     @DE00612                                            0612 01896000
@DL00612 DS    0H                                                  0613 01897000
*    R8 = NEXTBYTE(P);       /* NEXT BYTE TO CONVERT.        @Z427VLS*/ 01898000
         L     @01,NEXTBY                                          0613 01899000
         BCTR  @01,0                                               0613 01900000
         SLR   R8,R8                                               0613 01901000
         IC    R8,NEXTBYTE(@03,@01)                                0613 01902000
*    X =  TWO * P;           /* OUTPUT INDEX MUST BE TWICE INPUT.    */ 01903000
         LR    @15,@03                                             0614 01904000
         ALR   @15,@15                                             0614 01905000
         ST    @15,X                                               0614 01906000
*    SRDL  (R8,FOUR);        /* MOVE 1/2 BYTE INTO NEXT REGISTER.    */ 01907000
         SRDL  R8,4                                                0615 01908000
*    SRL   (R9,TWOEIGHT);    /* SHIFT TO LOW END.            @Z427VLS*/ 01909000
         SRL   R9,28                                               0616 01910000
*    R9 = R9 + NUMBER1;                                    /*@Z427VLS*/ 01911000
         LA    @15,1                                               0617 01912000
         ALR   R9,@15                                              0617 01913000
*    R8 = R8 + NUMBER1;                                    /*@Z427VLS*/ 01914000
         ALR   R8,@15                                              0618 01915000
*    IF SWITCH1 = ON & P = ONE THEN    /* IF HIGH ORDER BYTE AND NO  */ 01916000
         TM    SWITCH1,B'00001000'                                 0619 01917000
         BNO   @RF00619                                            0619 01918000
         CR    @03,@15                                             0619 01919000
         BNE   @RF00619                                            0619 01920000
*      SWITCH1 = OFF;                  /* LEFT-HALF CONVERSION, TURN */ 01921000
         NI    SWITCH1,B'11110111'                                 0620 01922000
*                                      /* OFF SWITCH.        @Z427VLS*/ 01923000
*    ELSE                                                          0621 01924000
*      ADDNUM(X-ONE) = CHARS(R8);      /* PUT PRINT CHAR. INTO OUTPUT*/ 01925000
         B     @RC00619                                            0621 01926000
@RF00619 L     @03,ADDNXT                                          0621 01927000
         AL    @03,X                                               0621 01928000
         BCTR  @03,0                                               0621 01929000
         BCTR  @03,0                                               0621 01930000
         LA    @01,CHARS-1(R8)                                     0621 01931000
         MVC   ADDNUM(1,@03),0(@01)                                0621 01932000
*      ADDNUM(X) = CHARS(R9);          /* FINISH BYTE.       @Z427VLS*/ 01933000
@RC00619 L     @03,ADDNXT                                          0622 01934000
         AL    @03,X                                               0622 01935000
         BCTR  @03,0                                               0622 01936000
         LA    @01,CHARS-1(R9)                                     0622 01937000
         MVC   ADDNUM(1,@03),0(@01)                                0622 01938000
*  END;                                                    /*@Z427VLS*/ 01939000
         SLR   @03,@03                                             0623 01940000
         BCTR  @03,0                                               0623 01941000
         AL    @03,P                                               0623 01942000
         ST    @03,P                                               0623 01943000
@DE00612 LTR   @03,@03                                             0623 01944000
         BP    @DL00612                                            0623 01945000
*END;                                                      /*@Z427VLS*/ 01946000
@EL00019 DS    0H                                                  0624 01947000
@EF00019 DS    0H                                                  0624 01948000
@ER00019 LM    @14,@12,12(@13)                                     0624 01949000
         BR    @14                                                 0624 01950000
*END  /* CLOSING END TO IFCTREND                             @Z427VLS*/ 01951000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      * 01952000
*/*%INCLUDE SYSLIB  (COMTABLE)                                        * 01953000
*;                                                                 0625 01954000
@DATA    DS    0H                                                       01955000
@CH00080 DC    H'6'                                                     01956000
@CH00548 DC    H'13'                                                    01957000
@CH00484 DC    H'14'                                                    01958000
@CH00708 DC    H'76'                                                    01959000
         DS    0F                                                       01960000
@AL00583 DC    A(@CF00073+2)           LIST WITH   1 ARGUMENT(S)        01961000
         DS    0F                                                       01962000
@SA00001 DS    18F                                                      01963000
@SA00017 DS    15F                                                      01964000
@SA00004 DS    15F                                                      01965000
@SA00002 DS    15F                                                      01966000
@SA00003 DS    15F                                                      01967000
@SA00005 DS    15F                                                      01968000
@SA00006 DS    15F                                                      01969000
@SA00008 DS    15F                                                      01970000
@SA00018 DS    15F                                                      01971000
@SA00016 DS    15F                                                      01972000
@SA00014 DS    15F                                                      01973000
@SA00011 DS    15F                                                      01974000
@SA00012 DS    15F                                                      01975000
@SA00015 DS    15F                                                      01976000
@TF00001 DS    F                                                        01977000
         DS    0F                                                       01978000
@CF00054 DC    F'1'                                                     01979000
@CF00073 DC    F'2'                                                     01980000
@CF00075 DC    F'3'                                                     01981000
@CF00063 DC    F'4'                                                     01982000
@CF00078 DC    F'5'                                                     01983000
@CF00082 DC    F'7'                                                     01984000
@CF00065 DC    F'8'                                                     01985000
@CF00088 DC    F'16'                                                    01986000
@CF00625 DC    F'19'                                                    01987000
@CH00625 EQU   @CF00625+2                                               01988000
@CF00680 DC    F'27'                                                    01989000
@CF00546 DC    F'30'                                                    01990000
@CH00546 EQU   @CF00546+2                                               01991000
@CF00701 DC    F'365'                                                   01992000
@CF00703 DC    F'366'                                                   01993000
@CF00840 DC    F'-72'                                                   01994000
@CF00822 DC    F'-60'                                                   01995000
@CF00823 DC    F'-56'                                                   01996000
@CF00824 DC    F'-52'                                                   01997000
@CF00825 DC    F'-48'                                                   01998000
@CF00826 DC    F'-44'                                                   01999000
@CF00827 DC    F'-40'                                                   02000000
@CF00828 DC    F'-36'                                                   02001000
@CF00829 DC    F'-32'                                                   02002000
@CF00830 DC    F'-28'                                                   02003000
@CF00831 DC    F'-24'                                                   02004000
@CF00832 DC    F'-20'                                                   02005000
@CF00833 DC    F'-16'                                                   02006000
@CF00841 DC    F'-14'                                                   02007000
@CF00842 DC    F'-13'                                                   02008000
@CF00834 DC    F'-12'                                                   02009000
@CF00843 DC    F'-11'                                                   02010000
@CF00844 DC    F'-10'                                                   02011000
@CF00845 DC    F'-9'                                                    02012000
@CF00835 DC    F'-8'                                                    02013000
@CF00846 DC    F'-6'                                                    02014000
@CF00836 DC    F'-4'                                                    02015000
         DS    0D                                                       02016000
NEXTBY   DC    F'0'                                                     02017000
ADDNXT   DC    F'0'                                                     02018000
LINESPRT DC    F'0'                                                     02019000
NUMBER   DC    F'0'                                                     02020000
L        DC    F'0'                                                     02021000
MYLINECT DC    F'0'                                                     02022000
P        DC    F'0'                                                     02023000
X        DC    F'0'                                                     02024000
LNESPACE DC    F'0'                                                     02025000
I        DC    F'0'                                                     02026000
BINWORD  DC    F'0'                                                     02027000
BNDECNUM DC    F'3'                                                     02028000
DECADDR  DC    F'0'                                                     02029000
SAVEPTR  DC    F'0'                                                     02030000
J        DC    F'0'                                                     02031000
K        DC    F'1'                                                     02032000
NUMCPUS  DC    F'0'                                                     02033000
BINYR    DC    F'0'                                                     02034000
M        DC    F'0'                                                     02035000
BYTECT   DC    F'0'                                                     02036000
Z1       DC    F'0'                                                     02037000
Q        DC    F'0'                                                     02038000
Z2       DC    F'0'                                                     02039000
RETCODE  DC    H'0'                                                     02040000
         DS    0D                                                       02041000
@TS00001 DS    CL8                                                      02042000
@CB00749 DC    X'404040F0'                                              02043000
@CB00208 DC    X'0000'                                                  02044000
@CB00760 DC    X'FFF0'                                                  02045000
PRINTLNE DS    CL134                                                    02046000
         ORG   PRINTLNE                                                 02047000
DDTYPE   DC    CL1'0'                                                   02048000
SPACING  DC    X'89'                                                    02049000
PRTLINE  DC    CL132' '                                                 02050000
         ORG   PRINTLNE+134                                             02051000
HEAD1    DC    CL171' '                                                 02052000
         ORG   HEAD1                                                    02053000
LINE1    DS    CL57                                                     02054000
         ORG   LINE1                                                    02055000
@NM00012 DC    CL25'T R E N D S   R E P O R T'                          02056000
@NM00013 DC    CL14' '                                                  02057000
@NM00014 DC    CL12'REPORT DATE '                                       02058000
DAYSDATE DC    CL6'XXX XX'                                              02059000
         ORG   HEAD1+57                                                 02060000
LINE2    DS    CL57                                                     02061000
         ORG   LINE2                                                    02062000
@NM00015 DC    CL17'         (PART 1)'                                  02063000
@NM00016 DC    CL22' '                                                  02064000
@NM00017 DC    CL12'PERIOD FROM '                                       02065000
FROMDATE DS    CL3                                                      02066000
@NM00018 DC    CL1' '                                                   02067000
FROMYEAR DS    CL2                                                      02068000
         ORG   HEAD1+114                                                02069000
LINE3    DS    CL57                                                     02070000
         ORG   LINE3                                                    02071000
@NM00019 DC    CL24' CPU/CHANNEL/STORAGE/SCP'                           02072000
@NM00020 DC    CL22' '                                                  02073000
@NM00021 DC    CL5'TO   '                                               02074000
TODATE   DS    CL3                                                      02075000
@NM00022 DC    CL1' '                                                   02076000
TOYEAR   DS    CL2                                                      02077000
         ORG   HEAD1+171                                                02078000
CPULINE  DC    CL24'CPU   MODEL   SERIAL NO.'                           02079000
CPUDATA  DC    CL20' '                                                  02080000
         ORG   CPUDATA                                                  02081000
@NM00023 DC    CL1' '                                                   02082000
CPUTYPE  DS    CL1                                                      02083000
@NM00024 DC    CL5' '                                                   02084000
CPUMODEL DS    CL3                                                      02085000
@NM00025 DC    CL4' '                                                   02086000
CPUSERAL DS    CL6                                                      02087000
         ORG   CPUDATA+20                                               02088000
HEAD2    DC    CL256' '                                                 02089000
         ORG   HEAD2                                                    02090000
LN1      DS    CL128                                                    02091000
         ORG   LN1                                                      02092000
@NM00026 DC    CL10' JULIAN   '                                         02093000
JYEAR    DS    CL2                                                      02094000
@NM00027 DC    CL116' '                                                 02095000
         ORG   HEAD2+128                                                02096000
LN2      DS    CL128                                                    02097000
         ORG   LN2                                                      02098000
@NM00028 DC    CL8'   DAY  '                                            02099000
DAYNO    DC    CL4' '                                                   02100000
         DS    29XL4                                                    02101000
         ORG   HEAD2+256                                                02102000
HEAD3    DC    CL256' '                                                 02103000
         ORG   HEAD3                                                    02104000
LIN1     DS    CL128                                                    02105000
         ORG   LIN1                                                     02106000
DSCRPT   DS    CL17                                                     02107000
@NM00029 DC    CL111' '                                                 02108000
         ORG   HEAD3+128                                                02109000
LIN2     DS    CL128                                                    02110000
         ORG   LIN2                                                     02111000
@NM00030 DC    CL6'  CPU '                                              02112000
@NM00031 DC    CL1' '                                                   02113000
LETTER   DC    CL1'X'                                                   02114000
ERCNT    DC    CL4' '                                                   02115000
         DS    29XL4                                                    02116000
         ORG   HEAD3+256                                                02117000
SWITCHE  DC    AL1(0)                                                   02118000
         ORG   SWITCHE                                                  02119000
GRPOUT   DS    BL1                                                      02120000
DEVOUT   EQU   SWITCHE+0                                                02121000
CUAOUT   EQU   SWITCHE+0                                                02122000
N3705OUT EQU   SWITCHE+0                                                02123000
SWITCH1  EQU   SWITCHE+0                                                02124000
SWITCH2  EQU   SWITCHE+0                                                02125000
         ORG   SWITCHE+1                                                02126000
CHARS    DC    CL16'0123456789ABCDEF'                                   02127000
SAVEDAY  DC    CL2' '                                                   02128000
SAVEYR   DC    CL2' '                                                   02129000
         DS    CL6                                                      02130000
WORK     DS    CL8                                                      02131000
HEAD1P2  DC    CL102' '                                                 02132000
         ORG   HEAD1P2                                                  02133000
LINE2P2  DS    CL51                                                     02134000
         ORG   LINE2P2                                                  02135000
@NM00032 DC    CL17'         (PART 2)'                                  02136000
@NM00033 DS    CL22                                                     02137000
@NM00034 DC    CL12'PERIOD FROM '                                       02138000
         ORG   HEAD1P2+51                                               02139000
LINE3P2  DS    CL51                                                     02140000
         ORG   LINE3P2                                                  02141000
@NM00035 DC    CL24'     I/O SUBSYSTEM      '                           02142000
@NM00036 DS    CL22                                                     02143000
@NM00037 DC    CL5'TO   '                                               02144000
         ORG   HEAD1P2+102                                              02145000
GROUPLBL DC    CL8' '                                                   02146000
CUDVDATA DC    CL8' '                                                   02147000
         ORG   CUDVDATA                                                 02148000
CUDEV    DC    CL4' '                                                   02149000
@NM00038 DS    CL4                                                      02150000
         ORG   CUDVDATA+8                                               02151000
CUALINE  DC    CL128' '                                                 02152000
         ORG   CUALINE                                                  02153000
CUADATA  DS    CL3                                                      02154000
@NM00039 DS    CL2                                                      02155000
CPULBL   DC    CL1' '                                                   02156000
         DS    29XL1                                                    02157000
         ORG   CUALINE+128                                              02158000
         DS    CL2                                                      02159000
ERSUMLNE DC    CL256' '                                                 02160000
         ORG   ERSUMLNE                                                 02161000
PERMELNE DS    CL128                                                    02162000
         ORG   PERMELNE                                                 02163000
@NM00040 DC    CL8'  PERM  '                                            02164000
PERM     DC    CL4' '                                                   02165000
         DS    29XL4                                                    02166000
         ORG   ERSUMLNE+128                                             02167000
TEMPELNE DS    CL128                                                    02168000
         ORG   TEMPELNE                                                 02169000
@NM00041 DC    CL8'  TEMP  '                                            02170000
TEMP     DC    CL4' '                                                   02171000
         DS    29XL4                                                    02172000
         ORG   ERSUMLNE+256                                             02173000
UKNO     DC    CL4'UKNO'                                                02174000
CONTRLBL DC    CL8' '                                                   02175000
PREVCUA  DS    BL2                                                      02176000
PREV37   DS    CL1                                                      02177000
PREVCPU  DS    BL1                                                      02178000
PREVDEV  DS    CL2                                                      02179000
SAVECUA  DS    BL2                                                      02180000
CPUWORK  DS    BL1                                                      02181000
NEWSW    DC    X'00'                                                    02182000
         ORG   NEWSW                                                    02183000
FOUND    DS    BL1                                                      02184000
OUTSWTCH EQU   NEWSW+0                                                  02185000
         ORG   NEWSW+1                                                  02186000
NOFOUND  DC    CL29'NO ERRORS FOUND FOR THIS CPU'                       02187000
CHAN     DC    CL4'CHAN'                                                02188000
ZCPU     DC    CL3'CPU'                                                 02189000
         DS    CL6                                                      02190000
DBLWORD  DS    CL8                                                      02191000
OLDWORK  DS    BL1                                                      02192000
SUPERZAP DC    3CL10'SUPERZAP'                                          02193000
DEVGROUP DC    CL8'CONS+UR '                                            02194000
         DC    CL8'DASD    '                                            02195000
         DC    CL8'TAPE    '                                            02196000
         DC    CL8'DISPLAY '                                            02197000
         DC    CL8'TP CNTRL'                                            02198000
         DC    CL8'TERMINAL'                                            02199000
DESCRIPT DC    CL13'IPL          '                                      02200000
         DC    CL13'MACHINE CHECK'                                      02201000
         DC    CL13'CHANNEL CHECK'                                      02202000
         DC    CL13'PROGRAM ERROR'                                      02203000
         DS    CL1                                                      02204000
PATCH    DC    30F'0'                                                   02205000
TPLABEL  DC    CL8'  CNTRLR'                                            02206000
         DC    CL8'  NCP   '                                            02207000
         DC    CL8'  LINES '                                            02208000
LABELCPU DC    16AL1(0)                                                 02209000
TREND6   DC    480F'0'                                                  02210000
CHANZ    DC    CL6' CHN-0'                                              02211000
         DC    CL6' CHN-1'                                              02212000
         DC    CL6' CHN-2'                                              02213000
         DC    CL6' CHN-3'                                              02214000
         DC    CL6' CHN-4'                                              02215000
         DC    CL6' CHN-5'                                              02216000
         DC    CL6' CHN-6'                                              02217000
         DC    CL6' CHN-7'                                              02218000
         DC    CL6' CHN-8'                                              02219000
         DC    CL6' CHN-9'                                              02220000
         DC    CL6' CHN-A'                                              02221000
         DC    CL6' CHN-B'                                              02222000
         DC    CL6' CHN-C'                                              02223000
         DC    CL6' CHN-D'                                              02224000
         DC    CL6' CHN-E'                                              02225000
         DC    CL6' CHN-F'                                              02226000
IFCTREND CSECT                                                          02227000
         DC    S(SUPERZAP)                                              02228000
IFCTREND CSECT                                                          02229000
    DC  S(PATCH)                                                        02230000
IFCTREND CSECT                                                          02231000
MVCINS  MVC  R0(R0,R6),0(R8)                                            02232000
IFCTREND CSECT                                                          02233000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       02234000
@01      EQU   01                                                       02235000
@02      EQU   02                                                       02236000
@03      EQU   03                                                       02237000
@04      EQU   04                                                       02238000
@05      EQU   05                                                       02239000
@06      EQU   06                                                       02240000
@07      EQU   07                                                       02241000
@08      EQU   08                                                       02242000
@09      EQU   09                                                       02243000
@10      EQU   10                                                       02244000
@11      EQU   11                                                       02245000
@12      EQU   12                                                       02246000
@13      EQU   13                                                       02247000
@14      EQU   14                                                       02248000
@15      EQU   15                                                       02249000
PREVGRP  EQU   @03                                                      02250000
R2       EQU   @02                                                      02251000
R6       EQU   @06                                                      02252000
R8       EQU   @08                                                      02253000
R9       EQU   @09                                                      02254000
R12      EQU   @12                                                      02255000
R15      EQU   @15                                                      02256000
R0       EQU   @00                                                      02257000
R1       EQU   @01                                                      02258000
R10      EQU   @10                                                      02259000
R11      EQU   @11                                                      02260000
R13      EQU   @13                                                      02261000
R14      EQU   @14                                                      02262000
R3       EQU   @03                                                      02263000
R4       EQU   @04                                                      02264000
R5       EQU   @05                                                      02265000
R7       EQU   @07                                                      02266000
IOHND    EQU   0                                                        02267000
PARM     EQU   0                                                        02268000
RECTYPE  EQU   PARM                                                     02269000
SWITCHES EQU   PARM+2                                                   02270000
DEBUG    EQU   PARM+4                                                   02271000
DEBUG4   EQU   DEBUG                                                    02272000
DEBUG12  EQU   DEBUG+1                                                  02273000
DEBUG21  EQU   DEBUG+2                                                  02274000
DEBUGA   EQU   PARM+8                                                   02275000
DEBUG51  EQU   DEBUGA+2                                                 02276000
MISC     EQU   PARM+12                                                  02277000
PRINTES  EQU   MISC                                                     02278000
OPENCLSE EQU   PARM+13                                                  02279000
OPENIO   EQU   OPENCLSE                                                 02280000
CLOSEIO  EQU   OPENCLSE+2                                               02281000
DATENOW  EQU   PARM+17                                                  02282000
STDT     EQU   PARM+23                                                  02283000
STDATE   EQU   STDT                                                     02284000
PSTD     EQU   STDATE+1                                                 02285000
PSTYR    EQU   PSTD                                                     02286000
PSTDY    EQU   PSTD+1                                                   02287000
ENDDT    EQU   PARM+31                                                  02288000
ENDDATE  EQU   ENDDT                                                    02289000
PEND     EQU   ENDDATE+1                                                02290000
PENYR    EQU   PEND                                                     02291000
STTIME1  EQU   PARM+39                                                  02292000
ENDTIME1 EQU   PARM+43                                                  02293000
STTIME2  EQU   PARM+47                                                  02294000
ENDTIME2 EQU   PARM+51                                                  02295000
STRTDATE EQU   PARM+55                                                  02296000
EVSYEAR  EQU   STRTDATE                                                 02297000
EVSDAY   EQU   STRTDATE+1                                               02298000
@NM00006 EQU   PARM+72                                                  02299000
@NM00007 EQU   PARM+75                                                  02300000
SORTNUM  EQU   PARM+84                                                  02301000
NUMDAYS  EQU   PARM+88                                                  02302000
ERRID    EQU   PARM+92                                                  02303000
IDTIMEA  EQU   ERRID+6                                                  02304000
IDTIME   EQU   IDTIMEA                                                  02305000
CCHHRLNG EQU   PARM+112                                                 02306000
LINECT   EQU   PARM+120                                                 02307000
ADIOHND  EQU   PARM+124                                                 02308000
ADIFCMSG EQU   PARM+128                                                 02309000
ADEDITB  EQU   PARM+132                                                 02310000
EVPTR    EQU   PARM+136                                                 02311000
SORTADR  EQU   PARM+140                                                 02312000
PRINTADR EQU   PARM+148                                                 02313000
CUAPTR   EQU   PARM+152                                                 02314000
DEVPTR   EQU   PARM+156                                                 02315000
MODPTR   EQU   PARM+160                                                 02316000
SERPTR   EQU   PARM+164                                                 02317000
VOLPTR   EQU   PARM+168                                                 02318000
CPUPTR   EQU   PARM+172                                                 02319000
CPCUAPTR EQU   PARM+176                                                 02320000
LIBADPTR EQU   PARM+180                                                 02321000
SYMCDPTR EQU   PARM+184                                                 02322000
SYSUMPTR EQU   PARM+188                                                 02323000
TRENPTR  EQU   PARM+192                                                 02324000
SHAREPTR EQU   PARM+196                                                 02325000
MERDCPTR EQU   PARM+208                                                 02326000
DUMPTABL EQU   PARM+228                                                 02327000
DUMPINFO EQU   DUMPTABL+4                                               02328000
TRENDONE EQU   0                                                        02329000
TRENEXT  EQU   TRENDONE                                                 02330000
TREGEN   EQU   TRENDONE+8                                               02331000
TRECCH0  EQU   TREGEN+8                                                 02332000
TRECCH1  EQU   TREGEN+12                                                02333000
TRECCH2  EQU   TREGEN+16                                                02334000
TRECCH3  EQU   TREGEN+20                                                02335000
TRECCH4  EQU   TREGEN+24                                                02336000
TRECCH5  EQU   TREGEN+28                                                02337000
TRECCH6  EQU   TREGEN+32                                                02338000
TRECCH7  EQU   TREGEN+36                                                02339000
TRECCH8  EQU   TREGEN+40                                                02340000
TRECCH9  EQU   TREGEN+44                                                02341000
TRECCHA  EQU   TREGEN+48                                                02342000
TRECCHB  EQU   TREGEN+52                                                02343000
TRECCHC  EQU   TREGEN+56                                                02344000
TRECCHD  EQU   TREGEN+60                                                02345000
TRECCHE  EQU   TREGEN+64                                                02346000
TRECCHF  EQU   TREGEN+68                                                02347000
TREND2   EQU   0                                                        02348000
TRENDKEY EQU   TREND2                                                   02349000
TRENDGRP EQU   TRENDKEY                                                 02350000
TRENDRT  EQU   TRENDKEY+1                                               02351000
TRENCPUS EQU   TRENDKEY+3                                               02352000
TRENDITM EQU   TRENDKEY+4                                               02353000
TRENDDAT EQU   TRENDKEY+5                                               02354000
TRENDDEV EQU   TREND2+6                                                 02355000
TREPRM   EQU   TREND2+8                                                 02356000
TRETMP   EQU   TREND2+10                                                02357000
EVTABLE  EQU   0                                                        02358000
EVSTOP   EQU   EVTABLE                                                  02359000
EVYEAR   EQU   EVSTOP                                                   02360000
EVDAY    EQU   EVSTOP+1                                                 02361000
EVNUM    EQU   EVTABLE+4                                                02362000
EVKEY    EQU   EVTABLE+6                                                02363000
EVMODEL  EQU   EVKEY                                                    02364000
EVSERIAL EQU   EVKEY+2                                                  02365000
EVLETTER EQU   EVKEY+5                                                  02366000
SORTABLE EQU   0                                                        02367000
SORTKEY  EQU   SORTABLE                                                 02368000
SORTCCHR EQU   SORTABLE+5                                               02369000
SYSUMONE EQU   0                                                        02370000
SYSUM2   EQU   0                                                        02371000
SYSUMKEY EQU   SYSUM2                                                   02372000
SYSRT    EQU   SYSUMKEY+1                                               02373000
SYSCPUS  EQU   SYSUMKEY+3                                               02374000
SYSITEM  EQU   SYSUMKEY+4                                               02375000
SHARE    EQU   0                                                        02376000
SHAREIO  EQU   SHARE+2                                                  02377000
SHRBASE  EQU   SHAREIO+1                                                02378000
SHRCUCPU EQU   SHAREIO+8                                                02379000
EDITLOAD EQU   0                                                        02380000
EDITABLE EQU   EDITLOAD+4                                               02381000
CUA      EQU   0                                                        02382000
CUAVAL   EQU   CUA+2                                                    02383000
DEVICE   EQU   0                                                        02384000
MODELS   EQU   0                                                        02385000
DEVSERAL EQU   0                                                        02386000
VOLUME   EQU   0                                                        02387000
CPUS     EQU   0                                                        02388000
CPUCUAS  EQU   0                                                        02389000
CPUCUAV  EQU   CPUCUAS+2                                                02390000
LIBADR   EQU   0                                                        02391000
SYMCODE  EQU   0                                                        02392000
SYMVAL   EQU   SYMCODE+2                                                02393000
MERIDIAN EQU   0                                                        02394000
NEXTBYTE EQU   0                                                        02395000
ADDNUM   EQU   0                                                        02396000
IFCMSG   EQU   0                                                        02397000
HEADMOVE EQU   PRTLINE                                                  02398000
CPULINE1 EQU   PRTLINE                                                  02399000
HD2MOVE  EQU   PRTLINE                                                  02400000
HD3MOVE  EQU   PRTLINE                                                  02401000
WORKOVER EQU   WORK                                                     02402000
TREITM   EQU   TREGEN                                                   02403000
LABELLNE EQU   PRTLINE                                                  02404000
PERMCT   EQU   PERM                                                     02405000
TEMPCT   EQU   TEMP                                                     02406000
CUACONV  EQU   SAVECUA                                                  02407000
CPU      EQU   CPUWORK                                                  02408000
CHANID   EQU   LIN2+2                                                   02409000
TRECCH   EQU   TRECCH0                                                  02410000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    02411000
MODEL    EQU   MERIDIAN+2                                               02412000
MRDNUMBR EQU   MERIDIAN                                                 02413000
SYMVAL2  EQU   SYMVAL+2                                                 02414000
SYMVAL1  EQU   SYMVAL                                                   02415000
SYMCDNUM EQU   SYMCODE                                                  02416000
LIBVAL   EQU   LIBADR+2                                                 02417000
LIBADNUM EQU   LIBADR                                                   02418000
CPUCUX3  EQU   CPUCUAV+5                                                02419000
CPUCUX2  EQU   CPUCUAV+3                                                02420000
CPUCUX1  EQU   CPUCUAV                                                  02421000
CPCUANUM EQU   CPUCUAS                                                  02422000
CPUVAL   EQU   CPUS+2                                                   02423000
CPUNUM   EQU   CPUS                                                     02424000
VOLVAL   EQU   VOLUME+2                                                 02425000
VOLNUM   EQU   VOLUME                                                   02426000
SERVAL   EQU   DEVSERAL+2                                               02427000
SERNUM   EQU   DEVSERAL                                                 02428000
MODVAL   EQU   MODELS+2                                                 02429000
MODNUM   EQU   MODELS                                                   02430000
MDRVAL   EQU   DEVICE+204                                               02431000
MDRNUM   EQU   DEVICE+202                                               02432000
DEVVAL   EQU   DEVICE+2                                                 02433000
DEVNUM   EQU   DEVICE                                                   02434000
CUA2     EQU   CUAVAL+2                                                 02435000
CUA1     EQU   CUAVAL                                                   02436000
CUANUM   EQU   CUA                                                      02437000
LOADPTR  EQU   EDITABLE+8                                               02438000
LOADNAME EQU   EDITABLE                                                 02439000
EDITNUM  EQU   EDITLOAD                                                 02440000
SHARLET  EQU   SHAREIO+15                                               02441000
SHRCUAAH EQU   SHRCUCPU+5                                               02442000
SHRCUAAL EQU   SHRCUCPU+3                                               02443000
SHARSERA EQU   SHRCUCPU                                                 02444000
SHRCUABH EQU   SHRBASE+5                                                02445000
SHRCUABL EQU   SHRBASE+3                                                02446000
SHARSERB EQU   SHRBASE                                                  02447000
SHAREFLG EQU   SHAREIO                                                  02448000
SHARENUM EQU   SHARE                                                    02449000
SYSTEMP  EQU   SYSUM2+10                                                02450000
SYSPERM  EQU   SYSUM2+8                                                 02451000
SYSRANGE EQU   SYSUM2+7                                                 02452000
SYSDEV   EQU   SYSUM2+5                                                 02453000
SYSOLDA  EQU   SYSITEM                                                  02454000
SYS3705  EQU   SYSITEM                                                  02455000
SYSOLD   EQU   SYSCPUS                                                  02456000
SYSCPU   EQU   SYSCPUS                                                  02457000
SYSTROLL EQU   SYSRT+1                                                  02458000
SYSSPAN  EQU   SYSRT+1                                                  02459000
SYSCUA   EQU   SYSRT                                                    02460000
SYSGROUP EQU   SYSUMKEY                                                 02461000
SYSUMEOD EQU   SYSUMONE+96                                              02462000
SYSUMPER EQU   SYSUMONE+92                                              02463000
SYSUMPEA EQU   SYSUMONE+88                                              02464000
SYSUMPEI EQU   SYSUMONE+84                                              02465000
SYSUMCH  EQU   SYSUMONE+20                                              02466000
SYSUMMCN EQU   SYSUMONE+16                                              02467000
SYSUMMCR EQU   SYSUMONE+12                                              02468000
SYSUMNXT EQU   SYSUMONE+8                                               02469000
SYSUMIPL EQU   SYSUMONE+4                                               02470000
SYSUMNUM EQU   SYSUMONE                                                 02471000
SORTCORE EQU   SORTCCHR                                                 02472000
SORTTIME EQU   SORTKEY+1                                                02473000
SORTYEAR EQU   SORTKEY                                                  02474000
TRENDOD  EQU   TRENDITM                                                 02475000
TREND037 EQU   TRENDITM                                                 02476000
TRENDOLD EQU   TRENCPUS                                                 02477000
TRENDCPU EQU   TRENCPUS                                                 02478000
@NM00011 EQU   TRENDRT+1                                                02479000
TRENDCUA EQU   TRENDRT                                                  02480000
TREPRE   EQU   TREGEN+72                                                02481000
TREMCH   EQU   TREGEN+4                                                 02482000
TREIPL   EQU   TREGEN                                                   02483000
TRENUM   EQU   TRENDONE+4                                               02484000
DUMPSIZE EQU   DUMPINFO+4                                               02485000
DUMPADR  EQU   DUMPINFO                                                 02486000
DUMPNUM  EQU   DUMPTABL                                                 02487000
@NM00010 EQU   PARM+212                                                 02488000
RECLNGT1 EQU   PARM+204                                                 02489000
FRAMEPTR EQU   PARM+200                                                 02490000
ADCPUT   EQU   PARM+144                                                 02491000
RECLNGTH EQU   CCHHRLNG+6                                               02492000
@NM00009 EQU   CCHHRLNG+5                                               02493000
RECCCHHR EQU   CCHHRLNG                                                 02494000
USERPGM  EQU   PARM+102                                                 02495000
IDTSEC   EQU   IDTIME+3                                                 02496000
IDSEC    EQU   IDTIME+2                                                 02497000
IDMIN    EQU   IDTIME+1                                                 02498000
IDHOUR   EQU   IDTIME                                                   02499000
IDASID   EQU   ERRID+4                                                  02500000
IDCPU    EQU   ERRID+3                                                  02501000
@NM00008 EQU   ERRID+2                                                  02502000
IDVALUE  EQU   ERRID                                                    02503000
TABSIZE  EQU   PARM+80                                                  02504000
SYSRETRN EQU   @NM00007                                                 02505000
NUMIN222 EQU   @NM00006                                                 02506000
WRTHRSH  EQU   PARM+69                                                  02507000
RDTHRSH  EQU   PARM+66                                                  02508000
TERM     EQU   PARM+58                                                  02509000
PENSEC2  EQU   ENDTIME2+2                                               02510000
PENMIN2  EQU   ENDTIME2+1                                               02511000
PENHOUR2 EQU   ENDTIME2                                                 02512000
PSTSEC2  EQU   STTIME2+2                                                02513000
PSTMIN2  EQU   STTIME2+1                                                02514000
PSTHOUR2 EQU   STTIME2                                                  02515000
PENSEC1  EQU   ENDTIME1+2                                               02516000
PENMIN1  EQU   ENDTIME1+1                                               02517000
PENHOUR1 EQU   ENDTIME1                                                 02518000
PSTSEC1  EQU   STTIME1+2                                                02519000
PSTMIN1  EQU   STTIME1+1                                                02520000
PSTHOUR1 EQU   STTIME1                                                  02521000
@NM00005 EQU   ENDDT+4                                                  02522000
PENDY    EQU   PEND+1                                                   02523000
@NM00004 EQU   ENDDATE                                                  02524000
@NM00003 EQU   STDT+4                                                   02525000
@NM00002 EQU   STDATE                                                   02526000
YEARNOW  EQU   DATENOW+4                                                02527000
@NM00001 EQU   DATENOW+3                                                02528000
DAYNOW   EQU   DATENOW                                                  02529000
CSNAP    EQU   CLOSEIO                                                  02530000
CDRCTWRK EQU   CLOSEIO                                                  02531000
CSYSIN   EQU   CLOSEIO                                                  02532000
CACCDEV  EQU   CLOSEIO                                                  02533000
CACCIN   EQU   CLOSEIO                                                  02534000
CSERLOG  EQU   CLOSEIO                                                  02535000
CEREPPT  EQU   CLOSEIO                                                  02536000
CTOURIST EQU   CLOSEIO                                                  02537000
OSNAP    EQU   OPENIO                                                   02538000
ODRCTWRK EQU   OPENIO                                                   02539000
OSYSIN   EQU   OPENIO                                                   02540000
OACCDEV  EQU   OPENIO                                                   02541000
OACCIN   EQU   OPENIO                                                   02542000
OSERLOG  EQU   OPENIO                                                   02543000
OEREPPT  EQU   OPENIO                                                   02544000
OTOURIST EQU   OPENIO                                                   02545000
PASSFLAG EQU   MISC                                                     02546000
PLOGREC  EQU   MISC                                                     02547000
ERRORID  EQU   MISC                                                     02548000
PSUM     EQU   PRINTES                                                  02549000
PEDIT    EQU   PRINTES                                                  02550000
PHIST    EQU   MISC                                                     02551000
PACC     EQU   MISC                                                     02552000
PZERO    EQU   MISC                                                     02553000
DEBUG63  EQU   DEBUGA+3                                                 02554000
DEBUG62  EQU   DEBUGA+3                                                 02555000
DEBUG61  EQU   DEBUGA+3                                                 02556000
DEBUG60  EQU   DEBUGA+3                                                 02557000
DEBUG59  EQU   DEBUGA+3                                                 02558000
DEBUG58  EQU   DEBUGA+3                                                 02559000
DEBUG57  EQU   DEBUGA+3                                                 02560000
DEBUG56  EQU   DEBUGA+3                                                 02561000
DEBUG55  EQU   DEBUGA+2                                                 02562000
DEBUG54  EQU   DEBUGA+2                                                 02563000
DEBUG53  EQU   DEBUGA+2                                                 02564000
DEBUG52  EQU   DEBUGA+2                                                 02565000
DEBUG50  EQU   DEBUGA+2                                                 02566000
DEBUG49  EQU   DEBUGA+2                                                 02567000
DEBUG48  EQU   DEBUGA+2                                                 02568000
DEBUG47  EQU   DEBUGA+1                                                 02569000
DEBUG46  EQU   DEBUGA+1                                                 02570000
DEBUG45  EQU   DEBUGA+1                                                 02571000
DEBUG44  EQU   DEBUGA+1                                                 02572000
DEBUG43  EQU   DEBUGA+1                                                 02573000
DEBUG42  EQU   DEBUGA+1                                                 02574000
DEBUG41  EQU   DEBUGA+1                                                 02575000
DEBUG40  EQU   DEBUGA+1                                                 02576000
DEBUG39  EQU   DEBUGA                                                   02577000
DEBUG38  EQU   DEBUGA                                                   02578000
DEBUG37  EQU   DEBUGA                                                   02579000
DEBUG36  EQU   DEBUGA                                                   02580000
DEBUG35  EQU   DEBUGA                                                   02581000
DEBUG34  EQU   DEBUGA                                                   02582000
DEBUG33  EQU   DEBUGA                                                   02583000
DEBUG32  EQU   DEBUGA                                                   02584000
DEBUG31  EQU   DEBUG+3                                                  02585000
DEBUG30  EQU   DEBUG+3                                                  02586000
DEBUG29  EQU   DEBUG+3                                                  02587000
DEBUG28  EQU   DEBUG+3                                                  02588000
DEBUG27  EQU   DEBUG+3                                                  02589000
DEBUG26  EQU   DEBUG+3                                                  02590000
DEBUG25  EQU   DEBUG+3                                                  02591000
DEBUG24  EQU   DEBUG+3                                                  02592000
DEBUG23  EQU   DEBUG+2                                                  02593000
DEBUG22  EQU   DEBUG+2                                                  02594000
DEBUG20  EQU   DEBUG+2                                                  02595000
DEBUG19  EQU   DEBUG+2                                                  02596000
DEBUG18  EQU   DEBUG+2                                                  02597000
DEBUG17  EQU   DEBUG+2                                                  02598000
DEBUG16  EQU   DEBUG+2                                                  02599000
DEBUG15  EQU   DEBUG+1                                                  02600000
DEBUG14  EQU   DEBUG+1                                                  02601000
DEBUG13  EQU   DEBUG+1                                                  02602000
DEBUG11  EQU   DEBUG+1                                                  02603000
DEBUG10  EQU   DEBUG+1                                                  02604000
DEBUG9   EQU   DEBUG+1                                                  02605000
DEBUG8   EQU   DEBUG+1                                                  02606000
DEBUG7   EQU   DEBUG                                                    02607000
DEBUG6   EQU   DEBUG                                                    02608000
DEBUG5   EQU   DEBUG                                                    02609000
DEBUG3   EQU   DEBUG                                                    02610000
DEBUG2   EQU   DEBUG                                                    02611000
DEBUG1   EQU   DEBUG                                                    02612000
DEBUG0   EQU   DEBUG                                                    02613000
SORTBRK  EQU   SWITCHES+1                                               02614000
COREFAIL EQU   SWITCHES+1                                               02615000
ANALYSIS EQU   SWITCHES+1                                               02616000
SHIFT3RD EQU   SWITCHES+1                                               02617000
DEVEXCL  EQU   SWITCHES+1                                               02618000
ZEROALL  EQU   SWITCHES+1                                               02619000
NOTALL   EQU   SWITCHES+1                                               02620000
NOSDR    EQU   SWITCHES                                                 02621000
TIMESEQ  EQU   SWITCHES                                                 02622000
SYSUM    EQU   SWITCHES                                                 02623000
PARMTHR  EQU   SWITCHES                                                 02624000
TREND    EQU   SWITCHES                                                 02625000
SHORTOBR EQU   SWITCHES                                                 02626000
PARMMES  EQU   SWITCHES                                                 02627000
RDESUM   EQU   SWITCHES                                                 02628000
PCCHFRAM EQU   RECTYPE+1                                                02629000
PMCHFRAM EQU   RECTYPE+1                                                02630000
PTTYP    EQU   RECTYPE+1                                                02631000
PEOD     EQU   RECTYPE                                                  02632000
PMIH     EQU   RECTYPE                                                  02633000
PDDR     EQU   RECTYPE                                                  02634000
PIPL     EQU   RECTYPE                                                  02635000
PSOFT    EQU   RECTYPE                                                  02636000
POBR     EQU   RECTYPE                                                  02637000
PCHAN    EQU   RECTYPE                                                  02638000
PMCH     EQU   RECTYPE                                                  02639000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      02640000
@RF00203 EQU   @RC00197                                                 02641000
@RF00573 EQU   @EL00016                                                 02642000
@ENDDATA EQU   *                                                        02643000
         END   IFCTREND                                                 02644000
