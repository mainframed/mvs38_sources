./  ADD  SSI=72900006,NAME=IEBBAM
IEBBAM   CSECT                                                   S20201 00200020
         TITLE 'IEBBAM  IEBCOPY BUFFER ALLOCATION'                      00400020
         SPACE 1                                                 S20201 00600020
*A401000                                                         A38728 00610000
*C814000                                                         A41780 00650000
*C114000,752000                                                  A44144 00700000
*A750500-751500                                                  A44144 00750000
*D666000                                                         A50938 00760000
*A668500                                                         A50938 00770000
*C668000,670000-672000                                           A50938 00780000
*A123000,123500,142600,143200,276000,282100-283200,303000      @ZA26248 00780199
*A401500,406200-407200,411000,442100-443900,614600,615200      @ZA26248 00783199
*C398000,410000                                                @ZA26248 00786199
*D278000,280000                                                @ZA26248 00789199
*****************************************************************S20201 00800020
*TITLE- IEBCOPY BUFFER ALLOCATION- IEBBAM                        S20201 01000020
* 192000,196000,222000,458000,246000-258000,264000,276000-278000 X010XX 01050000
* 386000,418000-438000                                           X010XX 01100000
*                                                                S20201 01200020
* CODE FROM IEBDSCPY HAS BEEN MOVED INTO THIS NEW MODULE TO      S20201 01400020
* MAINTAIN DESIGN POINT                                          S20201 01600020
*                                                                S20201 01800020
*STATUS- CHANGE LEVEL 000                                        S20201 02000020
*                                                                S20201 02200020
*FUNCTION/OPERATION- THIS MODULE ALLOCATES BUFFER AREAS          S20201 02400020
*                                                                S20201 02600020
*ENTRY POINT- ENTERED AT IEBBAM                                  S20201 02800020
*                                                                S20201 03000020
*INPUT- OPENED DCB'S                                             S20201 03200020
*                                                                S20201 03400020
*OUTPUT- ALLOCATED I/O BUFFERS                                   S20201 03600020
*                                                                S20201 03800020
*EXITS- NORMAL RETURN TO CALLER (IEBDSCPY)                       S20201 04000020
*****************************************************************S20201 04200020
         EJECT                                                          04400020
R0       EQU   0                                                 S20201 04600020
R1       EQU   1                                                 S20201 04800020
R2       EQU   2                                                 S20201 05000020
R3       EQU   3                                                 S20201 05200020
R4       EQU   4                  POINTER TO IEBMCA              S20201 05400020
R5       EQU   5                                                 S20201 05600020
R6       EQU   6                                                 S20201 05800020
R7       EQU   7                                                 S20201 06000020
R8       EQU   8                                                 S20201 06200020
R9       EQU   9                                                 S20201 06400020
R10      EQU   10                                                S20201 06600020
R11      EQU   11                                                S20201 06800020
R12      EQU   12                 BASE REGISTER                  S20201 07000020
R13      EQU   13                                                S20201 07200020
R14      EQU   14                                                S20201 07400020
R15      EQU   15                                                S20201 07600020
L3       EQU   3                                                 S20201 07800020
KL       EQU   8                                                 S20201 08000020
BL       EQU   256                                               S20201 08200020
KBLEN    EQU   KL+BL                                             S20201 08400020
CON12    EQU   12                                                S20201 08600020
FF       EQU   X'FF'                                             S20201 08800020
DIV2     EQU   1                                                 S20201 09000020
TKOFLO   EQU   X'20'                                             S20201 09200020
DBOFF    EQU   4                                                 S20201 09400020
TKOFUDGE EQU   12                                                S20201 09600020
P1       EQU   1                                                 S20201 09800020
X0       EQU   0                                                 S20201 10000020
TABLEN   EQU   10                                                S20201 10200020
NAMLEN   EQU   8                                                 S20201 10400020
SXTN     EQU   NAMLEN+NAMLEN                                     S20201 10600020
NMDISP   EQU   2                                                 S20201 10800020
L2       EQU   2                                                 S20201 11000020
L4       EQU   4                                                 S20201 11200020
CH8      EQU   C'8'                                              A44144 11400000
CHAINBK  EQU   4                                                 S20201 11600020
CHAINTHS EQU   8                                                 S20201 11800020
RETCOD4  EQU   4                                                 S20201 12000020
RETCOD8  EQU   8                                                 S20201 12200020
OFF22    EQU   22                 OFFSET OF 22                   X010XX 12250000
C1       EQU   1                                               @ZA26248 12300099
C4       EQU   4                                               @ZA26248 12330099
         EJECT                                                          12400020
         SAVE  (14,12),,*                                        S20201 12600020
         BALR  R12,R0             ESTABLISH ADDRESSABILITY       S20201 12800020
         USING START,R12                                         S20201 13000020
         USING IEBMCA,R4                                         S20201 13200020
         USING IHADCB,R3                                         X010XX 13250000
START    EQU   *                                                 S20201 13400020
         ST    R13,SV2+CHAINBK    SET UP SAVE AREA LINKAGE       S20201 13600020
         LA    R10,SV2                                           S20201 13800020
         ST    R10,CHAINTHS(R13)                                 S20201 14000020
         LR    R13,R10                                           S20201 14200020
         SR    R5,R5     CLEAR REG 5                           @ZA26248 14260099
         ST    R5,CCWAREA  CLEAR CCWAREA POINTER               @ZA26248 14300099
* FIRST, DETERMINE IF ENOUGH CORE IS AVAILABLE TO CONTAIN AT     S20201 14400020
* LEAST TWO DIRECTORY BLOCKS + FLAGS - THIS IS AN ABSOLUTE       S20201 14600020
* MINIMUM REQUIREMENT.                                           S20201 14800020
         LA    R5,KBLEN+CON12     SIZE OF 1 BLOCK + KEYLENGTH+12 S20201 15000020
         AR    R5,R5              DOUBLE IT                      S20201 15200020
         L     R7,SVHI            ADDR OF HIGHEST CORE + 1       S20201 15400020
         SR    R7,R5              CALC ADDR OF LOW END OF BUFFER S20201 15600020
         C     R7,LOCOR           WOULD THIS OVLAY EXISTNG TABLESS20201 15800020
         BNH   NOCORE             IF SO, WRT ERMSG AND GET NEXT  S20201 16000020
*                                 COPY OPER.                     S20201 16200020
         SPACE 1                                                 S20201 16400020
* MANDATORY MINIMUM CORE IS AVAILABLE. NOW CHECK FOR             S20201 16600020
* COMPRESS-IN-PLACE                                              S20201 16800020
         TM    COMDCDSW,COMPRESS  COMPRESS-IN-PLACE SPECIFIED    S20201 17000020
         BZ    ALLOCONT           NO, CONTINUE WITH ALLOCATION   S20201 17200020
         TM    COMDCDSW,SELECTSC+EXCLUDES   IS THIS IN FULL      S20201 17400020
*                                 COPY MODE                      S20201 17600020
         BZ    LDOUT              YES - GET OUTPUT TRACK CAPACITYS20201 17800020
         B     CMPERR1            NO - GO SET UP AND WRITE ERROR S20201 18000020
*                                  MESSAGE                       S20201 18200020
         SPACE 1                                                 S20201 18400020
ALLOCONT EQU   *                                                 S20201 18600020
* DETERMINE LARGEST (INPUT OR OUTPUT) BLOCKSIZE + KEYLEN         S20201 18800020
         SR    R6,R6                                             X010XX 18850000
         SR    R10,R10                                           X010XX 18900000
         TM    ULLDST,UNLOAD      ON UNLOAD                      X010XX 18950000
         BZ    BAM00100           ALSO USE UNLOADED DS BLKSIZE   X010XX 18960000
         LA    R3,ULOADDCB        GET BSAM WRITE DCB             X010XX 18970000
         LH    R10,DCBBLKSI       GET BLKSIZE                    X010XX 18980000
BAM00100 EQU   *                                                 X010XX 18990000
         LH    R8,OBLKSIZE        OUTPUT BLOCKSIZE               S20201 19000020
         LA    R3,OUTDCB          ADDR OF OUTPUT DCB             S20201 19400020
         IC    R6,DCBKEYLE        GET KEYLENGTH FROM OUTPUT DCB  S20201 19800020
         AR    R8,R6              CALC OUTPUT BLKSIZE+KEYLEN     S20201 20000020
         LA    R8,CON12(R8)       ADD CONSTANT OF 12             X010XX 20050000
         CR    R8,R10             ULOAD DCB BLKSIZE GT THIS VALUEX010XX 20100000
         BH    BAM00200           NO,USE THIS VALUE              X010XX 20150000
         LR    R8,R10             ELSE USE ULOAD BLKSIZE         X010XX 20160000
BAM00200 TM    ULLDST,LOAD        ON LOAD                        X010XX 20170000
         BZ    BAM00210           ALSO USE LOAD DCB BLKSIZE      X010XX 20180000
         LA    R3,LOADDCB         GET BSAM READ DCB              X010XX 20190000
         LH    R10,DCBBLKSI       GET BLKSIZE                    X010XX 20192000
BAM00210 EQU   *                                                 X010XX 20194000
         LH    R9,IBLKSIZE        INPUT BLOCKSIZE                S20201 20200020
         LA    R3,INDCB                                          S20201 20400020
         IC    R6,DCBKEYLE                                       S20201 20600020
         AR    R9,R6              CALC INPUT BLKSIZE+KEYLEN      S20201 20800020
         LA    R9,CON12(R9)       ADD CONSTANT OF 12             X010XX 20850000
         CR    R9,R10             LOAD BLKSIZE GT THIS VALUE     X010XX 20900000
         BH    BAM00220           NO,USE THIS VALUE              X010XX 20950000
         LR    R9,R10             ELSE USE LOAD BLKSIZE          X010XX 20960000
BAM00220 EQU   *                                                 X010XX 20970000
         CR    R9,R8              COMP INPUT VS. OUTPUT          S20201 21000020
         BNH   USEOUT             IF NOT HIGHER, USE OUTPUT SIZE S20201 21200020
         LR    R8,R9              ELSE USE INPUT SIZE INSTEAD    S20201 21400020
         SPACE 1                                                 S20201 21600020
USEOUT   EQU   *                  DETERMINE IF SIZE USED EXCEEDS S20201 21800020
*                                 MINIMUM FOR TWO DIRCTY BLKS    S20201 22000020
         LR    R9,R8                                             S20201 22400020
         AR    R9,R9              DOUBLE SIZE                    S20201 22600020
         CR    R9,R5              IS 2 X SIZE GRTR TH MINIMUM REQS20201 22800020
*                                 FOR TWO DIRECTORY BLOCKS       S20201 23000020
         BH    SETMAX             YES, SEE IF ENOUGH CORE FOR NEWS20201 23200020
*                                 MANDATORY MINIMUM              S20201 23400020
         SPACE 1                                                 S20201 23600020
         LA    R10,KBLEN+CON12    NO - STILL USE DIRCTY BLKSIZE  S20201 23800020
         ST    R10,MAXBLK         SET LENGTH OF 1 MIN BFR AREA   S20201 24000020
         ST    R5,MINSIZ          SET LENGTH OF 1 PAIR OF MIN BFRS20201 24200020
*                                 AREAS                          S20201 24400020
TR2BLKS  EQU   *                                                 X010XX 24450000
         SPACE 1                                                 S20201 26000020
* NOW SEE IF 2 OF THE LARGEST CURRENT (INPUT OR OUTPUT) DEVICE   S20201 26200020
* BLOCKSIZES ARE GREATER THAN  THE MINIMUM BUFFER SIZE           X010XX 26400000
* ALREADY KNOWN TO BE AVAILABLE                                  S20201 26600020
         SR    R1,R1                                             X010XX 26650000
         TM    ULLDST,UNLOAD      ON UNLOAD                      X010XX 26700000
         BO    BAM00270           ONLY INPUT DEVTYPE MATTERS     X010XX 26750000
         L     R1,OUTCHAR+DBOFF   GET OUTPUT TRACK-BLOCKSIZE     S20201 26800020
BAM00270 TM    ULLDST,LOAD        ON LOAD                        X010XX 26850000
         BO    CKDBSZ             ONLY OUTPUT DEVTYPE MATTERS    X010XX 26900000
         C     R1,INCHAR+DBOFF    IS IT LESS THAN INPUT          S20201 27000020
         BNL   CKDBSZ             NO, USE IT                     S20201 27200020
         L     R1,INCHAR+DBOFF    YES, USE INPUT TRACK-BLOCKSIZE S20201 27400020
CKDBSZ   LA    R1,CON12(R1)  ALLOW ROOM FOR FLAG AND COUNT FLD @ZA26248 27600099
         L     R7,SVHI            ADDR OF HICORE + 1             S20201 27650099
         SLL   R1,C1         DOUBLE TRACK SIZE                 @ZA26248 27700099
         CR    R1,R10        IS TWO TRK GREATER THAN ONE BLOCK @ZA26248 27750099
         BH    BAM00274        NO, USE ONE BLOCK               @ZA26248 27800099
         LR    R1,R10          USE ONE BLOCK                   @ZA26248 27850099
BAM00274 EQU   *                                               @ZA26248 27900099
         LR    R0,R1          RESERVE SPACE FOR ONE            @ZA26248 27950099
*                             CCW PER 128 BYTES                @ZA26248 28000099
         SRL   R0,C4                                           @ZA26248 28050099
         SR    R7,R0                                           @ZA26248 28100099
         SRL   R7,C4           PUT ON DOUBLE WORD BOUNDARY     @ZA26248 28150099
         SLL   R7,C4                                           @ZA26248 28200099
         ST    R7,CCWAREA                                      @ZA26248 28250099
         SR    R7,R1              SUBTR 2 X LARGEST TRACK BLKSIZES20201 28400020
         SR    R7,R1                                             S20201 28600020
         C     R7,LOCOR           ENOUGH CORE FOR 2 TRKS (APPR.) S20201 28800020
         BNH   TRYHALF            NO - TRY FOR 1/2 OF WHATEVER ISS20201 29000020
*                                  AVAILABLE                     S20201 29200020
         LR    R10,R1             YES - SET TO ALLOCATE 2 TRKS   S20201 29400020
         OI    FLG2,TRKS2         INDICATE USING 2 TRKLENGT BFRS S20201 29600020
         NI    FLG2,FF-MBUSED                                    S20201 29800020
         B     SETBCB             GO TEST FOR OUTPUT TRK OVFLO   S20201 30000020
         SPACE 1                                                 X010XX 30050000
*  NOW TRY TO GET 4 BLOCKSIZES IF NOT AVAILABLE,USE MIN BUFFERS  X010XX 30100000
TRYHALF  L     R7,SVHI            ADDR OF HIGH CORE + 1          S20201 30200020
         XC    CCWAREA(C4),CCWAREA  CLEAR CCWAREA POINTER      @ZA26248 30300099
         LR    R3,R7                                             S20201 30400020
         S     R3,LOCOR           CALC AMT OF AVAILANLE SPACE    S20201 30600020
         LR    R6,R5              GET MINIMUM BUFFERPAIR SIZE    X010XX 30650000
         AR    R6,R6              DOUBLE IT TO 4 BLOCKS          X010XX 30700000
         CR    R3,R6              ENOUGH SPACE FOR THAT          X010XX 30750000
         BNH   USEMIN             NO,USE MINIMUM BUFFERS         X010XX 30760000
         SPACE 1                                                 X010XX 30770000
*ALLOCATE THE LARGER OF 4 BLOCKSIZES AND HALF THE AVAILABLE SPACEX010XX 30780000
         SRL   R3,DIV2            DIVIDE BY 2                    S20201 30800020
         LR    R2,R7              ADDR OF HIGH CORE + 1          S20201 31000020
         SR    R7,R3              CALC LOW ADDR OF THIS SPACE    S20201 31200020
         SR    R2,R6              SUBTR LENGTH OF DOUBLE MIN BFR S20201 31400020
*                                  PAIR                          S20201 31600020
         CR    R7,R2              IS HICOR-LOCOR/2 LESS THAN     S20201 31800020
*                                 HICOR-2 BFR PAIR               S20201 32000020
         BNL   USE2BLK2           IF NOT, THEN THE AMOUNT OF CORES20201 32200020
*                                  FOR USING 2 BFRS OF 2         S20201 32400020
*                                 BLOCKSIZES EACH IS LARGER, SO  S20201 32600020
*                                  IT WILL BE USED FOR ALLOC.    S20201 32800020
         SRL   R3,DIV2            CALC SIZE OF 1/2 BUFFER AREA   S20201 33000020
*                                  (MAY TRUNCATE,BUT THIS IS OK) S20201 33200020
         LR    R10,R3             GET SIZE INTO R10 FOR SETUP OF S20201 33400020
*                                  BCB                           S20201 33600020
         B     XTRK2              GO RESET TRKS2 AND SET UP BCB  S20201 33800020
SETMAX   EQU   *                  MINIMUM CORE REQUIRED IS TWICE S20201 34000020
*                                 LARGEST (BLKSIZE+KEYLEN+12)    S20201 34200020
         L     R7,SVHI            ADDR OF HIGHEST AVAIL CORE + 1 S20201 34400020
         SR    R7,R9              CALC ADDR OF START OF MIN BFR  S20201 34600020
         C     R7,LOCOR           ENOUGH SPACE FOR MINIMUM BUFFERS20201 34800020
         BNH   NOCORE             NO - WRT ERMSG AND GO TO NXT   S20201 35000020
*                                  COPY OPER.                    S20201 35200020
         ST    R8,MAXBLK          SET LENGTH OF 1 MIN BFR AREA   S20201 35400020
         ST    R9,MINSIZ          SET LENGTH OF 1 PAIR OF MIN BFRS20201 35600020
         LR    R5,R9              SET UP MIN LENGTH TO USE IN TRYS20201 35800020
*                                  FOR LARGER AREA               S20201 36000020
         LR    R10,R8                                            S20201 36200020
         B     TR2BLKS            TRY FOR AT LEAST DOUBLE-SIZE   S20201 36400020
*                                  BUFFERS                       S20201 36600020
         SPACE 1                                                 S20201 36800020
USE2BLK2 EQU   *                                                 S20201 37000020
*                 ONE TRK IS GT. 1 BLK ,BUT NOT ENOUGH CORE FOR  X010XX 37200000
*                 2 TRKS IS AVAILABLE.  FURTHERMORE, 1/2 OF      S20201 37400020
*                 AVAILABLE CORE IS LESS THAN 4 BLOCKSIZES. SINCES20201 37600020
*                  LARGER BUFFERS ENHANCE PERFORMANCE, SPACE FOR S20201 37800020
*                 4 BLOCKSIZES WILL BE ALLOCATED IN THIS CASE.   S20201 38000020
*                 AVAILABILITY CHECKED IN 306000 ETC             X010XX 38050000
         LR    R7,R2              SET UP WHAT WILL BE LOW ADDR   S20201 38200020
*                                  IN BCB                        S20201 38400020
         LR    R10,R5             GET LENGTH OF 1 BFR AREA       S20201 38450000
*                                  FOR LATER                     S20201 38500000
         B     XTRK2              NOW GO HANDLE JUST AS IF AREA  X010XX 38600000
*                                 TO BE ALLOCATED IS GREATER     S20201 38800020
*                                  THAN 2 TRKS                   S20201 39000020
         SPACE 2                                                 S20201 39200020
LDOUT    EQU   *                  SET TO ALLOCATE FOR            S20201 39400020
*                 COMPRESS-IN-PLACE.  MANDATORY BUFFER REQ'MENT  S20201 39600020
*              IS TWO 1-TRACK BUFFERS, TRY FOR 4 FIRST         @ZA26248 39800099
         L     R10,OUTCHAR+DBOFF  GET OUTPUT TRACK-BLOCKSIZE     S20201 39850099
         LA    R10,CON12(R10)     ADD 12 TO SIZE BEING USED      A38728 39900099
         SLL   R10,C1         DOUBLE THE BUFFER SIZE           @ZA26248 39950099
         LR    R9,R10                                            S20201 40000099
         AR    R9,R9              DOUBLE THE SIZE OF 1 TRACK     S20201 40050099
         L     R7,SVHI            ADDR OF HICORE + 1             S20201 40100099
         LR    R0,R9          ALLOW ROOM FOR CCW               @ZA26248 40150099
         SRA   R0,C4          PER 128 BYTES OF BUFFER          @ZA26248 40200099
         SR    R7,R0                                           @ZA26248 40250099
         SRL   R7,C4          PUT ON DDOUBLE WORD              @ZA26248 40300099
         SLL   R7,C4                                           @ZA26248 40350099
         ST    R7,CCWAREA     SET POINTER TO CCW AREA          @ZA26248 40400099
         SR    R7,R9              CALC WHERE BFRS WOULD START    S20201 40450099
         C     R7,LOCOR           SPACE FOR TWO 2-TRACK BFRS   @ZA26248 40500099
         BNH   NOCOREC1           NO - GO TRY 1 TRK BUF        @ZA26248 40550099
         BNH   NOCOREC            NO - GO WRT ERROR MSG          S20201 41200020
         OI    FLG2,MBUSED        INDICATE NO BUFFER-SQUEEZING   S20201 41400020
*                                  ALLOWED                       S20201 41600020
*                                 GO RESET 'TRKS2' AND           X010XX 41800000
*                                  ALLOCATE BCB                  S20201 42000020
         SPACE 1                                                 S20201 42200020
XTRK2    NI    FLG2,FF-TRKS2      RESET INDICATOR OF 2-TRK ALLOC.S20201 44000020
         B     SETBCB             GO SET UP BCB                  S20201 44200020
NOCOREC1 L     R10,OUTCHAR+DBOFF  GET OUTPUT TRACK-BLOCKSIZE   @ZA26248 44210099
         LA    R10,CON12(R10)     ADD 12 TO SIZE BEING USED    @ZA26248 44219099
         LR    R9,R10                                          @ZA26248 44228099
         AR    R9,R9              DOUBLE THE SIZE OF 1 TRACK   @ZA26248 44237099
         L     R7,SVHI            ADDR OF HICORE + 1           @ZA26248 44246099
         LR    R0,R9          ALLOW ROOM FOR CCW               @ZA26248 44255099
         SRA   R0,C4          PER 128 BYTES OF BUFFER          @ZA26248 44264099
         SR    R7,R0                                           @ZA26248 44273099
         SRL   R7,C4          PUT ON DDOUBLE WORD              @ZA26248 44282099
         SLL   R7,C4                                           @ZA26248 44291099
         ST    R7,CCWAREA     SET POINTER TO CCW AREA          @ZA26248 44300099
         SR    R7,R9              CALC WHERE BFRS WOULD START  @ZA26248 44309099
         C     R7,LOCOR           SPACE FOR TWO 1-TRACK BFRS   @ZA26248 44318099
         BNH   NOCOREC            NO - GO WRT ERROR MSG        @ZA26248 44327099
         OI    FLG2,MBUSED        INDICATE NO BUFFER-SQUEEZING @ZA26248 44336099
*                                  ALLOWED                     @ZA26248 44345099
*                                 GO RESET 'TRKS2' AND         @ZA26248 44354099
*                                  ALLOCATE BCB                @ZA26248 44363099
        B      XTRK2                                           @ZA26248 44372099
         SPACE 1                                                 S20201 44400020
USEMIN   EQU   *                  ALLOCATE MINIMUM SIZES INTO BCBS20201 44600020
         OI    FLG2,MBUSED        INDIC NO 'SQUEEZING' OF BFR    S20201 44800020
*                                  ALLOWED                       S20201 45000020
         NI    FLG2,FF-TRKS2                                     S20201 45200020
         L     R7,SVHI            COMPUTE STARTING ADDR+1 OF BCB S20201 45400020
         S     R7,MINSIZ                                         S20201 45600020
SETBCB   TM    ULLDST,UNLOAD      ON UNLOAD                      X010XX 45800000
         BO    SETBCB1            DONT CARE FOR OVERFLOW         X010XX 45850000
         LA    R3,OUTDCB          ADDR OF OUTDCB                 X010XX 45900000
         TM    DCBRECFM,TKOFLO    IS TRACK OVERFLOW SPECIFIED ON S20201 46000020
*                                  OUTPUT                        S20201 46200020
         BZ    SETBCB1            NO - BCB CAN NOW BE ALLOCATED  S20201 46400020
*              IF YES, IT IS NECESSARY TO ADD TO THE SIZE OF THE S20201 46600020
*              SECOND (OR ''OUTPUT'') BUFFER AREA TO ACCOMMODATE S20201 46800020
*              ENOUGH EXTRA SPACE FOR ADDITIONAL SEGMENTATION    S20201 47000020
*              OF OUTPUT RECORDS.                                S20201 47200020
         C     R10,OUTCHAR+DBOFF  IS ''INPUT'' BFR GT OUTPUT     S20201 47400020
*                                  TRACKSIZE                     S20201 47600020
         BH    CALC12X            YES - NEED TO COMPUTE A        S20201 47800020
*                                  FUDGE FACTOR                  S20201 48000020
         LA    R9,TKOFUDGE        NO - SET FUDGE FACTOR TO 12,   S20201 48200020
*                                 TO ALLOW FOR ONE EXTRA SEGMENT S20201 48400020
*                                 IF NEEDED                      S20201 48600020
ADDX     LR    R8,R10             SET TO CALC LENGTH OF          S20201 48800020
*                                  INPUT+OUTPUT+FUDGE FACTOR     S20201 49000020
         AR    R8,R8                                             S20201 49200020
         AR    R8,R9              ADD FUDGE FACTOR TO TWICE      S20201 49400020
*                                  INPUT BFRLEN                  S20201 49600020
         L     R2,SVHI            GET ADDR OF HIGHEST AVAIL-     S20201 49800020
*                                  ABLE CORE + 1                 S20201 50000020
         SR    R2,R8              SUBTR TOTAL ADJUSTED BUFFER    S20201 50200020
*                                  LENGTH                        S20201 50400020
         C     R2,LOCOR           IS ENOUGH EXTRA CORE SPACE     S20201 50600020
*                                  AVAILABLE                     S20201 50800020
         BNH   TSTMXB             IF NOT, SEE IF IT IS POSSIBLE  S20201 51000020
*                                  TO SHORTEN THE LENGTH OF THE  S20201 51200020
*                                 ''INPUT'' BUFFER,THEREBY EFFEC-S20201 51400020
*                                  TIVELY INCREASING THE LENGTH  S20201 51600020
*                                  OF THE OUTPUT BUFFER          S20201 51800020
         SR    R7,R9              ELSE ADJUST POIMTER TO START OFS20201 52000020
*                                  BUFFER AREA  BY NUMBER OF     S20201 52200020
*                                  BYTES IN FUDGE FACTOR         S20201 52400020
SETMB    OI    FLG2,MBUSED        INHIBIT FUTURE DE-ALLOCATION   S20201 52600020
         B     SETBCB1            NOW GO SET UP BCB              S20201 52800020
         SPACE 1                                                 S20201 53000020
TSTMXB   C     R10,MAXBLK         IS LENGTH OF ''INPUT'' BUFFER  S20201 53200020
*                                  GT THE MINIM. ALLOWABLE SIZE  S20201 53400020
         BNH   NOCORE             IF NOT,CANT SHORTEN IT -       S20201 53600020
*                                 GO WRITE MSG                   S20201 53800020
         SR    R10,R9             YES - DECREASE LENGTH OF       S20201 54000020
*                                  ''INPUT'' BFR BY FUDGE FACTOR S20201 54200020
         C     R10,MAXBLK         WAS TOO MUCH TAKEN OUT OF THIS S20201 54400020
*                                  BUFFER                        S20201 54600020
         BL    NOCORE             YES - WRT ERROR MESSAGE        S20201 54800020
         B     SETMB              NO - GO SET UP TO ALLOCATE BCB S20201 55000020
         SPACE 1                                                 S20201 55200020
CALC12X  SR    R8,R8                                             S20201 55400020
         L     R5,OUTCHAR+DBOFF   GET LENGTH OF TRACK-BLOCKSIZE  S20201 55600020
*                                  FROM DEVTYPE AREA             S20201 55800020
         LR    R9,R10             LENGTH OF INPUT BUFFER AREA    S20201 56000020
         DR    R8,R5              DIV TRK-BLKSIZE INTO INPUT     S20201 56200020
*                                 BUFFERSIZE                     S20201 56400020
         LTR   R8,R8              ANY REMAINDER                  S20201 56600020
         BZ    ADDONE             NO, DONT ADD TWO TO QUOTIENT   S20201 56800020
         LA    R9,P1(R9)          ADD 1 TO QUOTIENT, AND THEN -  S20201 57000020
ADDONE   LA    R9,P1(R9)          ADD 1 TO QUOTIENT              S20201 57200020
         SR    R8,R8                                             S20201 57400020
         LA    R5,TKOFUDGE        GET FIDGE FACTOR FOR 1 SEGMENT S20201 57600020
         MR    R8,R5              MPLY BY NBR OF OUTPUT TRACK-BLKS20201 57800020
*                                  SIZES (CEILING + 1) WHICH FIT S20201 58000020
*                                  INTO INPUT BUFFER LENGTH.     S20201 58200020
*                                  THIS YIELDS MAXIMUM SUM OF    S20201 58400020
*                                  12-BYTE SEGMENTATION FACTORS  S20201 58600020
*                                  TO BE ADDED TO LENGTH OF      S20201 58800020
*                                  OUTPUT BUFFER                 S20201 59000020
         B     ADDX               ADD THIS MUCH TO TOTAL BFR LNGTS20201 59200020
SETBCB1  BCTR  R7,R0              SUBTR 1 FROM ADDR IN R7        S20201 59400020
         ST    R7,BCB             SET STARTING ADDR OF FIRST     S20201 59600020
*                                  BUFFER AREA                   S20201 59800020
         ST    R7,HICOR           SET AS ADDR+1 OF HIGHEST       S20201 60000020
*                                  AVAILABLE CORE                S20201 60200020
         AR    R7,R10             ADD KENGTH OF 1 BFR AREA       S20201 60400020
         ST    R7,ENDFST1         SET ADDR OF END OF 1ST BUFFER  S20201 60600020
         LA    R7,P1(R7)          ADD 1 TO GET ADDR OF START OF  S20201 60800020
*                                  SECOND BUFFER                 S20201 61000020
         ST    R7,BEGFST2         SET STARTING ADDR OF 2ND BFR   S20201 61200020
         ST    R10,BUFSIZ         SAVE LENGTH OF 1 BUFFER AREA   S20201 61400020
         AR    R7,R10         GET END OF SECOND BUFFER         @ZA26248 61460099
         ST    R7,END2ND2     SET POINTER TO END SEC BUFFER    @ZA26248 61500099
         DROP  R3                                                S20201 61600020
*        END OF BUFFER ALLOCATION                                S20201 61800020
         EJECT                                                          62000020
* PREPARE TO SCAN INPUT DIRECTORY ENTRIES FOR MEMBERS TO BE      S20201 62200020
* COPIED FROM THE ''CURRENT'' INPUT DATA SET -                   S20201 62400020
         TM    COMDCDSW,SELECTSC  IS THIS A SELECTIVE COPY       S20201 62600020
         BZ    SETNNCT1           IF NOT, GO CLEAR NEWNAME COUNT S20201 62800020
         L     R7,CTAD            ADDR OF CTLTAB TO VARIOUS AREASS20201 63000020
         ST    R7,BUMP                                           S20201 63200020
         ST    R7,NMAD                                           S20201 63400020
         TM    FLG3,FTINGP        HAS INDD-GROUP INITIALIZION    S20201 63600020
*                                  OCCURRED                      S20201 63800020
         BO    TESUF              YES,CHECK CNT OF UNFOUND MBRS  S20201 64000020
         OI    FLG3,FTINGP        SET INDD-GROUP-INITIALIZED SW. S20201 64200020
         LH    R7,NNCT1           ANY NEWNAMES                   S20201 64400020
         LTR   R7,R7                                             S20201 64600020
         BZ    ASRT1              IF NOT, GO SORT SETAB ALPH. BY S20201 64800020
*                                  MEMBERNAME                    S20201 65000020
         L     R7,BUMP            ADDR OF SETAB                  S20201 65200020
         L     R6,BCB             SET UP TO EXTRACT OLD/NEWNAME  S20201 65400020
*                                 PAIRS                          S20201 65600020
         LA    R6,X0(R6)          ADDR OF BFR - SET HI ORDER BYTES20201 65800020
*                                  TO ZERO                       S20201 66000020
TSB2     TM    X0(R7),SEBIT2      IS THIS A RENAMED MEMBER       S20201 66200020
         BO    SVNOLD             IF SO, SAVE OLD/NEW NAME PAIRS S20201 66400020
NLST     LA    R7,TABLEN(R7)      POINT TO NXT SETAB ENTRY       A50938 66800000
         C     R7,SESTOP          IS THIS THE LAST ENTRY         A50938 66850000
         BL    TSB2               IF NOT LAST ENTRY DONE,LOOP    A50938 67000000
*                                 TO TEST NEXT                   A50938 67200000
         B     ASRT1              IF SO, DO ALPH. SORT OF TABLE  S20201 67400020
SVNOLD   LA    R8,SXTN(R6)        ADD 16 TO CURR. BUFFER ADDR    S20201 67600020
         C     R8,ENDFST1         IF THIS EXCEEDS AVAIL BFR AREA,S20201 67800020
         BNL   NOCORENN           GO WRT MSG AND TERM.           S20201 68000020
         MVC   X0(NAMLEN,R6),NMDISP(R7)  MOVE OLDNAME TO BUFFER  S20201 68200020
         MVC   NAMLEN(NAMLEN,R6),TABLEN+NMDISP(R7)  NEWNAME TO   S20201 68400020
*                                 BUFFER                         S20201 68600020
         LA    R6,SXTN(R6)        POINT TO NXT AVAIL BFR AREA    S20201 68800020
         LA    R7,TABLEN(R7)      SKIP OLDN. AND                 S20201 69000020
         B     NLST               GO SEE IF NEWNAME IS LAST ENTRYS20201 69200020
SETNNCT1 XC    NNCT1(L2),NNCT1    SET NEWNAME COUNT TO 0         S20201 69400020
         XC    ENCT(L2),ENCT      SET CTLTAB ENTRY-COUNT TO 0    S20201 69600020
         L     R8,LOCOR           ADDR OF LOWEST YET-UNUSED CORE S20201 69800020
         ST    R8,CTAD            INIT WHERE TO BLD CTLTAB       S20201 70000020
*                                 (EXCL/FULL)                    S20201 70200020
         ST    R8,BUMP            INIT POINTER USED WHILE BLDG   S20201 70400020
*                                  TLTAB                         S20201 70600020
         TM    COMDCDSW,EXCLUDES  IS THIS AN EXCLUSIVE COPY      S20201 70800020
         BZ    SBFLGS             IF NOT, GO PREPARE TO READ     S20201 71000020
*                                 INPUT DIR                      S20201 71200020
         MVC   NMAD(L4),SEBEGIN   SET ADDR OF NAMES FROM ADDR OF S20201 71400020
*                                  SETAB                         S20201 71600020
         TM    FLG3,SORTDONE      WAS ALPH SORT DONE (CURRENT    S20201 71800020
*                                  INDD GRP)                     S20201 72000020
         BO    SBFLGS             IF SO, GO SET UP I/O FLAGS     S20201 72200020
         B     ASRT1              ELSE GO DO ALPH SORT OF SETAB  S20201 72400020
TESUF    SR    R8,R8                                             S20201 72600020
         CH    R8,UFCT            IS COUNT OF UNFOUND MBRS = 0   S20201 72800020
         BNE   SBFLGS             IF NOT, LOOK FOR MORE ON THIS  S20201 73000020
*                                 IN DS                          S20201 73200020
         STH   R8,INDDCT          ELSE SET TO SKIP REST OF       S20201 73400020
*                                  INPUT DD'S                    S20201 73600020
* AT THIS POINT, SET UP TO WRT INFORMATIVE MSG SAYING ALL        S20201 73800020
*        SELECTED MEMBERS WERE FOUND, AND NOT ALL INPUT          S20201 74000020
*        DATA SETS WERE REQUIRED.                                S20201 74200020
*        LINK TO WRT MSG                                         S20201 74400020
         B     TOTERM1            GO TO TERMINATE CURR INDD GROUPS20201 74600020
         EJECT                                                          74800020
SLMSGGSC EQU   *                                                 S20201 75000020
         CLI   RCBUF,CH8          IS COMPLETION CODE 8 OR HIGHER A44144 75050000
         BNL   DONTSET            YES- DON'T SET RETURN CODE     A44144 75100000
         MVI   RCBUF,CH8          SET COMPLETION CODE            A44144 75150000
DONTSET  EQU   *                                                 A44144 75200000
         MVI   VTMFLG1,UNUSEND    INDICATE UNUSUAL TERMINATION OFS20201 75400020
*                                 THIS COPY STEP/OPERATION       S20201 75600020
SLMSG    EQU   *                                                 S20201 75800020
         LA    R15,RETCOD8        SET RETURN CODE=8              S20201 76000020
         B     RETMAIN            TO RETURN TO IEBDSCPY          S20201 76200020
TOTERM1  EQU   *       CURR INDD-GROUP SUCCESSFULLY COMPLETED -  S20201 76400020
*                                 NEXT CARD                      S20201 76600020
         MVI   PARAMS,MSGULLD     MSG COULD BE CHANGED           X010XX 76650000
         MVI   COPDISP,OFF22      AT DISPLACEMENT OF 22          X010XX 76700000
         MVI   MSG1+P1,M48        MSG CODE                       S20201 76800020
         B     SLMSG              GO TO SET LAST MSG INDICATOR   S20201 77000020
NOCORE   EQU   *    CANT GET MIN I/O BFR SPACE - GET NXT COPY CD S20201 77200020
         MVI   MSG1+P1,M40        MSG CODE                       S20201 77400020
         B     SLMSGGSC           SET RC TO 4, WRT MSG, TERMINATES20201 77600020
NOCOREC  EQU   *    NOT ENUF CORE FOR I/O BFRS DURING COMPRESS   S20201 77800020
         MVI   MSG1+P1,M41        MSG CODE                       S20201 78000020
         B     SLMSGGSC           SET RC TO 4, WRT MSG, TERMINATES20201 78200020
NOCORENN EQU   *   OLD/NEW NAMES DONT ALL FIT IN BFR-NXT COPY CD S20201 78400020
         MVI   MSG1+P1,M43        MSG CODE                       S20201 78600020
         B     SLMSGGSC           SET RC TO 4, WRT MSG, TERMINATES20201 78800020
ASRT1    EQU   *                                                 S20201 79000020
         SR    R15,R15            SET RETURN CODE=0              S20201 79200020
         B     RETMAIN            TO RETURN TO IEBDSCPY          S20201 79400020
CMPERR1  EQU   *                  CANNOT COMPRESS WITH SELECT/   S20201 79600020
*                                 EXCLUDE                        S20201 79800020
         MVI   MSG1+P1,M39        MSG CODE                       S20201 80000020
         B     SLMSGGSC           SET RC TO 4,WRT MSG,TERMINATE  S20201 80200020
SBFLGS   EQU   *                                                 S20201 80400020
         LA    R15,RETCOD4        SET RETURN CODE=4              S20201 80600020
RETMAIN  L     R13,SV2+CHAINBK    RESTORE PTR TO SAVEAREA        S20201 80800020
         RETURN (14,12),,RC=(15)  RETURN TO BRANCHTABLE IN DSCPY S20201 81000020
PATCHLN  EQU   (*-START)/20       5 PER-CENT PATCH AREA LENGTH   S20201 81200020
PATCH    DC    XL(PATCHLN)'00'    PATCH AREA                     A41780 81400000
         EJECT                                                          81600020
IEBMCA   DSECT                                                   S20201 81800020
         IEBMCA                                                  S20201 82000020
         DCBD  DSORG=PS                                          S20201 82200020
         END                                                            82400020
./  ADD  SSI=72900007,NAME=IEBCNVT
CNVT     TITLE 'IEBCOPY TTR / MBBCCHHR CONVERT ROUTINE - IEBCNVT'       00350000
IEBCNVT  CSECT                                                          00400000
         SPACE 2                                                        00600000
****************************************************************        00900000
*                                                              *        01200000
* TITLE - IEBCOPY LOAD TTR / MBBCCHHR CONVERSION ROUTINE.      *        01500000
*                                                              *        01800000
* STATUS - CHANGE LEVEL 003.                                   *        02100000
*                                                              *        02400000
* FUNCTION - CONVERT RELATIVE DISK ADDRESSES OF THE FORM TTR0  *        02700000
*            TO FULL DISK ADDRESS MBBCCHHR OR VISE VERSA FOR   *        03000000
*            PDS'S THAT ARE BEING LOADED ONLY.                 *        03300000
*                                                              *        03600000
* ENTRY POINTS - THIS MODULE HAS TWO ENTRY POINTS WHICH ARE    *        03900000
*                IEBCNVT AND IEBCNVT1.                         *        04200000
*                                                              *        04500000
* **** ENTRY POINT IEBCNVT - TTR0 TO MBBCCHHR CONVERSION ***** *        04550000
*                                                              *        04600000
* INPUT - REGISTER 0 CONTAINS TTR0 TO BE CONVERTED.            *        04800000
*         REGISTER 1 CONTAINS ADDRESS OF ORIGINAL UNLOADED     *        05100000
*                    DEB.                                      *        05400000
*         REGISTER 2 CONTAINS ADDRESS OF AN 8 BYTE AREA FOR    *        05700000
*                    THE RESULTANT MBBCCHHR.                   *        06000000
*                                                              *        06300000
* OUTPUT - MBBCCHHR IN AREA POINTED TO BY REGISTER 2 ON INPUT. *        06600000
*                                                              *        06900000
* ************************************************************ *        06950000
*                                                              *        07000000
* **** ENTRY POINT IEBCNVT1 - MBBCCHHR TO TTR0 CONVERSION **** *        07050000
*                                                              *        07100000
* INPUT - REGISTER 1 CONTAINS ADDRESS OF ORIGINAL UNLOADED     *        07150000
*                    DEB.                                      *        07160000
*         REGISTER 2 CONTAINS ADDRESS OF AN 8 BYTE AREA        *        07170000
*                    CONTAINING THE MBBCCHHR TO BE CONVERTED.  *        07180000
*                                                              *        07190000
* OUTPUT - REGISTER 0 CONTAINS THE RESULTANT TTR0.             *        07192000
*                                                              *        07194000
* ************************************************************ *        07196000
*                                                              *        07198000
* EXTERNAL REFERENCES - NONE.                                  *        07200000
*                                                              *        07500000
* EXITS NORMAL - RETURN TO CALLER WITH A RETURN CODE OF 0 IN   *        07800000
*                REGISTER 15.                                  *        08100000
*                                                              *        08400000
* EXITS ERROR - RETURN TO CALLER WITH A RETURN CODE OF 4 IN    *        08700000
*               REGISTER 15.                                   *        09000000
*                                                              *        09300000
* TABLES/WORK AREAS - 'DEVTAB' DSECT (DEVTYPE MAPPING).        *        09900000
*                   - 'MBBCCHHR' DSECT (MBBCCHHR MAPPING).     *        10200000
*                   - 'IECDSECT' DSECT (DEB MAPPING).          *        10500000
*                                                              *        10800000
* ATTRIBUTES - SERIAL REUSABLE.                                *        11100000
*                                                              *        11400000
* CHARACTER CODE DEPENDENCY - NONE.                            *        11700000
*                                                              *        12000000
* NOTES - STANDARD LINKAGE IS DONE, BUT NO NEW SAVE AREA       *        12300000
*          IS PROVIDED SINCE NO EXTERNAL CALL'S ARE MADE.      *        12350000
*                                                              *        12600000
****************************************************************        12900000
         EJECT                                                          13200000
* THE FOLLOWING ARE REGISTER EQUATES                                    13500000
         SPACE 1                                                        13800000
RGTTR    EQU   0                  TTR PARAMETER REGISTER                14100000
RGDEB    EQU   1                  INPUT DEB POINTER REGISTER            14400000
RGMBB    EQU   2                  POINTER TO MBBCCHHR AREA              14700000
RGBASE   EQU   8                  BASE REGISTER                         15000000
RGV      EQU   9                  WORK REGISTER                         15300000
RGW      EQU   10                 WORK REGISTER                         15600000
RGX      EQU   11                 WORK REGISTER                         15900000
RGY      EQU   12                 WORK REGISTER                         16200000
RGZ      EQU   13                 SAVE AREA POINTER REGISTER            16500000
RGRCD    EQU   15                 RETURN CODE REGISTER                  16800000
         SPACE 1                                                        17100000
****************************************************************        17400000
         SPACE 1                                                        17700000
* THE FOLLOWING ARE EQUATES FOR SYMBOLIC CONSTANT REFERENCE             18000000
         SPACE 1                                                        18300000
C1       EQU   1                  GENERAL CONSTANT OF 1                 18900000
         SPACE 1                                                        19800000
SAV20    EQU   20                 SAVE AREA DISPLACEMENT TO             20450000
*                                  SAVED CONTENTS OF REGISTER 0         20500000
         SPACE 1                                                        20700000
ONEBYTE  EQU   8                  LENGTH IN BITS OF ONE BYTE            21000000
         SPACE 1                                                        21300000
LENBCH   EQU   6                  LENGTH OF BBCCHH                      21600000
LENXTN   EQU   16                 LENGTH OF DA DEB EXTENT               22200000
         SPACE 1                                                        22500000
RC4      EQU   4                  A RETURN CODE OF 4                    22800000
         SPACE 1                                                        23100000
DEVBUMP  EQU   16                 OFFSET FOR DEVTYPE POINTER            23400000
*                                  ADJUSTMENT                           23700000
****************************************************************        24000000
         EJECT                                                          24300000
         SAVE  (14,12),,*         SAVE REGISTERS                        24600000
         SPACE 1                                                        24900000
CNVT0000 EQU   *                                                        24950000
         BALR  RGBASE,0           ESTABLISH ADDRESSABILITY              25200000
         USING *,RGBASE                                                 25500000
         SPACE 1                                                        25800000
         USING DXDEB,RGDEB        DEB DSECT ADDRESSABILITY              27900000
         USING MBBCCHHR,RGMBB     MBBCCHHR DSECT ADDRESSABILITY         28200000
         SPACE 1                                                        28500000
         SR    RGRCD,RGRCD        ZERO RETURN CODE REGISTER             28550000
         SR    RGV,RGV            CLEAR WORK REGISTER                   28800000
         IC    RGV,DXDEBUSR       LOAD NUMBER OF EXTENTS                29100000
         LR    RGW,RGV            LOAD LIMIT FOR LOOP CONTROL           29400000
         SRL   RGTTR,ONEBYTE      SHIFT OUT N OF TTRN                   29700000
         STC   RGTTR,R            STORE R OF MBBCCHHR                   30000000
         SRL   RGTTR,ONEBYTE      SHIFT OUT R OF TTRN - TT IS           30300000
*                                  NOW IN LOW ORDER 2 BYTES             30600000
*                                  OF REGISTER                          30900000
CNVT0020 EQU   *                                                        31200000
         SH    RGTTR,DXDEBNTR     DECREASE TT BY NUMBER OF              31500000
*                                  TRACKS IN CURRENT EXTENT             31800000
*                                  DESCRIPTION                          32100000
         BM    CNVT0040           IF THE RESULT OF THE ABOVE            32400000
*                                  SUBTRACTION IS NEGATIVE, THEN        32700000
*                                  THE PROPER EXTENT FOR FURTHER        33000000
*                                  CONVERSION HAS BEEN FOUND            33300000
         LA    RGDEB,LENXTN(0,RGDEB) BUMP DEB ADDRESSABILITY            33600000
*                                     REGISTER TO ACCESS NEXT           33900000
*                                     EXTENT DESCRIPTION                34200000
         BCT   RGW,CNVT0020       CONTINUE SEARCHING FOR PROPER         34500000
*                                  EXTENT DESCRIPTION UNLESS ALL        34800000
*                                  HAVE ALREADY BEEN USED               35100000
         LA    RGRCD,RC4          ALL EXTENT DESCRIPTIONS HAVE          35400000
*                                  BEEN INVESTIGATED, THEREFORE         35700000
*                                  THE INPUT TTR WAS INVALID SO         36000000
*                                  SET THE RETURN CODE TO 4             36300000
         B     CNVT0100           BRANCH TO EXIT LINKAGE                36600000
CNVT0040 EQU   *                                                        36900000
         SR    RGV,RGW            CALCULATE M OF MBBCCHHR               37200000
         STC   RGV,M              STORE M OF MBBCCHHR                   37500000
         MVC   BB(LENBCH),DXDEBBIN  INITIALIZE BBCCHH OF                37800000
*                                    MBBCCHHR                           38100000
         AH    RGTTR,DXDEBNTR     ADD BACK THE NUMBER OF TRACKS         38400000
*                                  WHICH WHEN SUBTRACTED MADE           38700000
*                                  TT OF TTRN NEGATIVE                  39000000
         SPACE 1                                                        39300000
****************************************************************        39600000
*                                                              *        39900000
*   THE VALUE TT IN REGISTER RGTTR NOW CONTAINS THE TRACK      *        40200000
* ADDRESS RELATIVE TO THE CURRENT EXTENT DESCRIPTION WHICH IS  *        40500000
* TO BE PLACED IN THE CCHH PORTION OF THE OUTPUT MBBCCHHR.     *        40800000
*                                                              *        41100000
****************************************************************        41400000
         SPACE 1                                                        41700000
         BZ    CNVT0100           IF THE RESULT OF THE ABOVE            42000000
*                                  ADDITION IS 0, THEN THE INIT-        42300000
*                                  IALIZED VALUE OF THE CCHH            42600000
*                                  PORTION OF MBBCCHHR IS VALID,        42900000
*                                  SO RETURN TO CALLER                  43200000
         L     RGY,DXDEBUCB       LOAD POINTER TO UNLOADED DEV-         43500000
*                                  TYPE INFORMATION MINUS 16            43800000
*                                  BYTES                                44100000
         LA    RGY,DEVBUMP(0,RGY) ADJUST POINTER TO ADDRESS OF          44400000
*                                  UNLOADED DEVTYPE INFORMATION         44700000
         SPACE 1                                                        45000000
         USING DEVTAB,RGY         DEVTYPE DSECT ADDRESSABILITY          45300000
         SPACE 1                                                        45600000
         LR    RGX,RGTTR          INITIALIZE FOR LATER DIVISION         45650000
         LH    RGV,DEVTRK         LOAD NUMBER OF TRACKS PER             45700000
*                                  CYLINDER                             45750000
         AH    RGX,DXDEBSHH       ADD CURRENT DEB EXTENT START          45800000
*                                  HH TO CURRENT VALUE OF TT            45850000
         SR    RGW,RGW            CLEAR WORK REGISTER FOR               45900000
*                                  DIVISION                             45950000
         DR    RGW,RGV            DIVIDE UPDATED TT BY NUMBER OF        46000000
*                                  TRACKS PER CYLINDER                  46050000
         SPACE 1                                                        46100000
****************************************************************        46150000
*                                                              *        46200000
*   THE RESULT OF THE ABOVE DIVISION IS AS FOLLOWS -           *        46250000
*        RGW - THE REMAINDER REGISTER CONTAINS THE FINAL       *        46300000
*               HH VALUE OF THE OUTPUT MBBCCHHR.               *        46350000
*        RGX - THE QUOTIENT REGISTER CONTAINS THE VALUE        *        46400000
*               TO BE ADDED TO THE CURRENT DEB EXTENT          *        46450000
*               START CC WHICH WILL YIELD THE FINAL CC         *        46500000
*               VALUE OF THE OUTPUT MBBCCHHR.                  *        46550000
*                                                              *        46600000
****************************************************************        46650000
         SPACE 1                                                        46700000
         STC   RGW,HH+C1          STORE FINAL HH VALUE OF OUTPUT        46750000
*                                  MBBCCHHR (HIGH ORDER HH BYTE         46800000
*                                  IS ALWAYS 0 FOR ALL SUPPORTED        46850000
*                                  DEVICES AND IS NOT STORED)           46900000
         AH    RGX,DXDEBSCC       ADD CURRENT DEB EXTENT START          46950000
*                                  CC TO ABOVE CALCULATED               47000000
*                                  QUOTIENT                             47050000
         STC   RGX,CC+C1          STORE LOW ORDER C OF OUTPUT           47100000
*                                  MBBCCHHR                             47150000
         SRL   RGX,ONEBYTE        SHIFT HIGH ORDER C BYTE TO            47200000
*                                  LOW ORDER BYTE OF REGISTER           47250000
         STC   RGX,CC             STORE HIGH ORDER C OF OUTPUT          47300000
*                                  MBBCCHHR                             47350000
         SPACE 1                                                        47400000
CNVT0100 EQU   *                                                        54600000
         RETURN (14,12),T,RC=(15) RETURN TO CALLER                      56100000
         EJECT                                                          56150000
         DS    0F                 FULL WORD ALIGNMENT                   56200000
         ENTRY IEBCNVT1                                                 56250000
IEBCNVT1 EQU   *                  MBBCCHHR TO TTR0 ENTRY POINT          56300000
         SAVE  (14,12),,IEBCNVT1  SAVE REGISTERS                        56350000
CNVT2000 EQU   *                                                        56400000
         BALR  RGBASE,0           ESTABLISH ADDRESSABILITY              56450000
         LA    RGY,CNVT2000-CNVT0000 RELATIVE TO FIRST                  56500000
         SR    RGBASE,RGY             ENTRY POINT                       56550000
         SPACE 1                                                        56600000
         SR    RGTTR,RGTTR        CLEAR TTR0 OUTPUT REGISTER            56650000
         SR    RGRCD,RGRCD        ZERO RETURN CODE REGISTER             56700000
         SR    RGY,RGY            CLEAR WORK REGISTER                   56750000
         SPACE 1                                                        56800000
         IC    RGY,M              PICK UP M OF INPUT MBBCCHHR           56850000
         LTR   RGY,RGY            IS M LARGER THAN 0                    56900000
         BZ    CNVT2040           NO, DO CONVERSION USING               56950000
*                                  FIRST DEB EXTENT                     57000000
         SPACE 1                                                        57050000
CNVT2020 EQU   *                                                        57100000
         AH    RGTTR,DXDEBNTR     ADD NUMBER OF TRACKS IN               57150000
*                                  CURRENT EXTENT DESCRIPTION           57200000
*                                  TO CURRENT VALUE OF TT               57250000
         LA    RGDEB,LENXTN(0,RGDEB) BUMP DEB ADDRESSABILITY            57300000
*                                     REGISTER TO ACCESS NEXT           57350000
*                                     EXTENT DESCRIPTION                57400000
         BCT   RGY,CNVT2020       CONTINUE LOOPING UNTIL PROPER         57450000
*                                  DEB EXTENT IS FOUND                  57500000
         SPACE 1                                                        57550000
CNVT2040 EQU   *                                                        57600000
         L     RGY,DXDEBUCB       LOAD POINTER TO UNLOADED              57650000
*                                  DEVTYPE INFORMATION MINUS 16         57700000
*                                  BYTES                                57750000
         LA    RGY,DEVBUMP(0,RGY) ADJUST POINTER TO ADDRESS OF          57800000
*                                  UNLOADED DEVTYPE INFORMATION         57850000
         SPACE 1                                                        57900000
         SR    RGW,RGW            CLEAR WORK REGISTER                   57950000
         IC    RGW,CC             LOAD HIGH ORDER C OF INPUT            58000000
*                                  MBBCCHHR                             58050000
         SLL   RGW,ONEBYTE        SHIFT TO MAKE ROOM FOR LOW            58100000
*                                  ORDER C BYTE                         58150000
         IC    RGW,CC+C1          LOAD LOW ORDER C OF INPUT             58200000
*                                  MBBCCHHR                             58250000
         SH    RGW,DXDEBSCC       SUBTRACT CURRENT DEB EXTENT           58300000
*                                  START CC FROM CC OF INPUT            58350000
*                                  MBBCCHHR                             58400000
         MH    RGW,DEVTRK         MULTIPLY RESIDUAL NUMBER OF           58410000
*                                  CYLINDERS BY THE NUMBER OF           58420000
*                                  TRACKS PER CYLINDER                  58430000
         SR    RGX,RGX            CLEAR WORK REGISTER                   58440000
         IC    RGX,HH+C1          LOAD LOW ORDER H OF INPUT             58442000
*                                  MBBCCHHR (HIGH ORDER H BYTE          58444000
*                                  FOR ALL SUPPORTED DEVICES            58446000
*                                  IS ALWAYS 0)                         58448000
         SH    RGX,DXDEBSHH       SUBTRACT CURRENT DEB EXTENT           58448400
*                                  START HH FROM HH OF INPUT            58448800
*                                  MBBCCHHR                             58449200
         AR    RGW,RGX            CALCULATE TOTAL NUMBER OF             58450000
*                                  RESIDUAL TRACKS                      58500000
         AR    RGTTR,RGW          ADD RESIDUAL TRACKS TO NUMBER         58550000
*                                  OF TRACKS IN PREVIOUS EXTENTS        58600000
*                                  (IF ANY)                             58650000
         SLL   RGTTR,ONEBYTE      MAKE ROOM FOR R OF TTR0               58700000
         IC    RGTTR,R            LOAD R FROM MBBCCHHR                  58750000
         SLL   RGTTR,ONEBYTE      MAKE FINAL RESULT TTR0                58800000
         ST    RGTTR,SAV20(0,RGZ) STORE TTR0 IN CALLERS SAVE            58850000
*                                  SO THAT IT WILL BE PLACED            58900000
*                                  IN REGISTER 0 BY RETURN              58950000
*                                  MACRO EXPANSION                      59000000
         B     CNVT0100           RETURN TO CALLER                      59050000
         EJECT                                                          66000000
****************************************************************        66300000
*                                                              *        66600000
*   THE FOLLOWING IS IEBCNVT'S WORK AREA                       *        66900000
*                                                              *        67200000
****************************************************************        67500000
         SPACE 1                                                        68400000
PATCHLEN EQU   (*-IEBCNVT)/20     LENGTH OF 5 PERCENT PATCH AREA        68700000
CNVT9000 DC    XL(PATCHLEN)'00'   PATCH AREA                            69000000
         EJECT                                                          69300000
****************************************************************        69600000
*                                                              *        69900000
*   DEVTYPE MAPPING DSECT                                      *        70200000
*                                                              *        70500000
****************************************************************        70800000
         SPACE 1                                                        71100000
DEVTAB   DSECT                                                          71400000
         DS    XL10               UNREFERENCED FIELDS                   71700000
DEVTRK   DS    XL2                TRACKS PER CYLINDER                   72900000
         SPACE 2                                                        73200000
****************************************************************        73500000
*                                                              *        73800000
*   MBBCCHHR MAPPING DSECT                                     *        74100000
*                                                              *        74400000
****************************************************************        74700000
         SPACE 1                                                        75000000
MBBCCHHR DSECT                                                          75300000
M        DS    XL1                EXTENT NUMBER                         75600000
BB       DS    XL2                BIN NUMBER                            75900000
CC       DS    XL2                CYLINDER NUMBER                       76200000
HH       DS    XL2                HEAD NUMBER                           76500000
R        DS    XL1                RECORD NUMBER                         76800000
         EJECT                                                          77100000
IECDSECT DSECT                                                          77400000
         IECDSECT                                                       77700000
         END                                                            78000000
./  ADD  SSI=72900008,NAME=IEBDRB
RBDB     TITLE 'REBLOCK/DEBLOCK ROUTINE- IEBDRB'                        00200019
IEBDRB   CSECT                                                          00400019
*C713600                                                         A41780 00450000
* 110000,112000,260000,262000,488000,490000                      X010XX 00450100
*C051960,656100                                                  A44144 00460000
*A655900-656000,656600                                           A44144 00470000
**********************************************************************  00500000
         SPACE 1                                                        00600019
*TITLE- IEBDSCPY REBLOCK/DEBLOCK ROUTINE                              * 00610019
*                                                                     * 00620019
*STATUS- CHANGE LEVEL 001                                             * 00630019
*                                                                     * 00640019
*FUNCTION/OPERATION-  THIS MODULE BLOCKS OR UNBLOCKS INPUT DATA FROM  * 00650019
*        THE INPUT BUFFER INTO THE OUTPUT BUFFER. FIXED OR VARIABLE   * 00660019
*        FORMAT RECORDS ARE HANDLED. READS AND WRITES ARE ISSUED BY   * 00670019
*        THIS MODULE AND PROCESSING CONTINUES WITHIN THIS MODULE      * 00680019
*        UNTIL AN END OF FILE IS READ AND WRITTEN.                    * 00690019
*                                                                     * 00700019
*ENTRY POINT- ENTERED AT IEBDRB                                       * 00710019
*                                                                     * 00720019
*INPUT- THE MEMBERS OF THE CURRENT INPUT DATA SET.                    * 00730019
*                                                                     * 00740019
*OUTPUT- THE OUTPUT DATA SET.                                         * 00750019
*                                                                     * 00760019
*EXITS- NORMAL RETURN GIVEN TO CALLER. ERROR RESULTS IN A MESSAGE     * 00770019
*        BEING GIVEN AND A CONDITION CODE SET.                        * 00780019
*                                                                     * 00790019
*EXTERNAL ROUTINES- READ, WRITE, MESSAGE WRITER, CONVERT ROUTINE.     * 00800019
*                                                                     * 00810019
*ATTRIBUTES- SERIAL REUSABLE.                                         * 00820019
*                                                                     * 00830019
         SPACE 1                                                        00840019
*                                                                     * 01000019
*               SYMBOLIC REGISTERS FOR DEBLOCK ROUTINE                * 01200019
*                                                                     * 01400019
*          BASE ADDRESS REGISTER 12, COMMON AREA REGISTER 4           * 01600019
*                                                                     * 01800019
GR0      EQU   0                                                        02000019
GR1      EQU   1                                                        02200019
GR2      EQU   2                                                        02400019
GR3      EQU   3                                                        02600019
GR4      EQU   4             COMMON AREA POINTER                        02800019
GR5      EQU   5                                                        03000019
GR6      EQU   6                                                        03200019
GR7      EQU   7                                                        03400019
GR8      EQU   8                                                        03600019
GR9      EQU   9                                                        03800019
GR10     EQU   10                                                       04000019
GR11     EQU   11                                                       04200019
GR12     EQU   12            BASE REGISTER                              04400019
GR13     EQU   13                                                       04600019
GR14     EQU   14                                                       04800019
GR15     EQU   15                                                       05000019
FF       EQU   X'FF'                                                    05060019
ZERO     EQU   X'00'                                                    05120019
SAV4     EQU   4                  DISPLACEMENT OF 4                     05124019
SAV8     EQU   8                  DISPLACEMENT OF 8                     05128019
DISP0    EQU   0                  DISPLACEMENT OF 0                     05132019
DISP10   EQU   10                 DISPLACEMENT OF 10                    05136019
LEN2     EQU   2                  LENGTH OF 2                           05140019
DISP12   EQU   12                 DISPLACEMENT OF 12                    05144019
LEN4     EQU   4                  LENGTH OF 4                           05148019
LEN8     EQU   8                  LENGTH OF 8                           05152019
MS8      EQU   8                  MASK OF 8                             05156019
LEN256   EQU   256                LENGTH OF 256                         05160019
LEN255   EQU   255                LENGTH OF 255                         05164019
MS7      EQU   7                  MASK OF 7                             05168019
DISP1    EQU   1                  DISPLACEMENT OF 1                     05172019
LEN3     EQU   3                  LENGTH OF 3                           05176019
KEYLTH   EQU   X'00'              ZERO KEY LENGTH                       05180019
DISP9    EQU   9                  DISPLACEMENT OF 9                     05184019
DISP16   EQU   16                 DISPLACEMENT OF 16                    05188019
DISP14   EQU   14                 DISPLACEMENT OF 14                    05192019
RTCDE    EQU   C'8'               RETURN CODE                    A44144 05196000
         EJECT                                                          05200019
         USING START,GR12                                               05400019
         USING IEBMCA,GR4                                               05600019
         SAVE  (14,12),,*                                               06200019
         SPACE 1                                                        06800019
         BALR  GR12,GR0           ESTABLISH ADDRESSIBILITY              06900019
START    EQU   *                                                        07000019
         ST    GR13,SV2+SAV4      POINTER TO OLD SAVE AREA IN NEW       07300019
         LA    GR15,SV2                                                 07600019
         ST    GR15,SAV8(GR13)    POINTER TO NEW SAVE AREA IN OLD       07800019
         LR    GR13,GR15               POINTER TO NEW SAVE AREA         08000019
*                                                                       08200019
*   GR5    POINTER TO BEGINNING OF INPUT BLOCK                          08400019
*   GR6    POINTER TO BEGINNING OF LOGICAL INPUT RECORD                 08600019
*   GR7    POINTER TO BEGINNING OF OUTPUT BLOCK                         08800019
*   GR8    POINTER TO BEGINNING OF LOGICAL OUTPUT RECORD                09000019
*                                                                       09200019
         OI    FLG1,STOPEND1           SET TO READ INTO FIRST           09260019
*                                         BUFFER ONLY                   09320019
         NI    STATUS,STAT5            RESET ALL PUT NEW OUTPUT DS      09400019
         OI    STATUS,STAT4            SET READING MEMBER SWITCH        09500019
         MVI   SENSE,ZERO         RESET INDICATORS                      09700019
         NI    TAG,TAG5+TAG6                                            09800019
         NI    FLG2,FF-FSTWRT-RDEOF                                     09900019
         OI    TAG,TAG2                SET WRITING MEMBER SWITCH        10200019
         L     GR5,BCB                                                  10400019
         LA    GR5,DISP0(GR5)     GET POINTER TO FIRST BUFFER           10600019
         ST    GR5,READNEXT            SET AS WHERE TO READ             10800019
         BAL   GR1,DRB00100       GO LINK TO READ ROUTINES       X010XX 11000000
         L     GR7,BEGFST2        START OF OUTPUT BUFFER                11400019
         L     GR8,END2ND2             END OF OUTPUT BUFFER             12300019
         STM   GR7,GR8,STARTOUT        STORE STARTAND END OF BUFFER     13200019
         ST    GR7,WRTNEXT             WHERE TO WRITE FROM (2ND BUFFER) 13400019
         ST    GR7,LASTRECX            ADDRESS OF LAST RECORD PROCESSED 13440019
         CLC   DISP10(LEN2,GR5),ZROS   NEXT RECORD AN EOF               13480019
         BE    FRSTEOF                 YES- STOP                        13520019
         MVI   DISP0(GR7),ZERO    CLEAR FLAG FIELD                      13560019
         TM    FORM,FORM1              INPUT VARIABLE                   13600019
         BO    VARIAB             YES, GO PROCESS VARIABLE RECS         13800019
         LA    GR6,DISP12(GR5)    UPDATE INPUT POINTER OVER COUNT       14000019
         MVC   WKLNG(LEN2),DISP10(GR5) SIZE OF RECORD LAST MAY BE SHORT 14200019
         LH    GR1,INLRECL             LOGICAL RECORD LENGTH INPUT      14520019
         LH    GR3,WKLNG               DATA LENGTH                      14580019
         LPR   GR3,GR3                 MAKE POSITIVE                    14640019
         LPR   GR1,GR1                 MAKE POSITIVE                    14700019
         SR    GR2,GR2                                                  14760019
         DR    GR2,GR1                 GET BLOCKING FACTOR LAST RECORD  14820019
         STH   GR3,INBLKNO             STORE BLOCK COUNT                14880019
BFREMPTY EQU   *                                                        14920019
         L     GR7,STARTOUT            START OF OUTPUT BUFFER           14960019
         LA    GR8,DISP12(GR7)    START OF OUTPUT IN SECOND BUFFER      15030019
         SPACE 1                                                        15100019
BEGIN    EQU   *                                                        15200019
         LH    GR1,OBLKFAC             OUTPUT BLOCKING FACTOR           15400019
         STH   GR1,OBLKNO              STORE IN WORK AREA               15600019
         XC    BYTEMV(LEN2),BYTEMV                                      15700019
         LH    GR11,OBLKSIZE      OUTPUT BLOCKSIZE                      15900019
         AR    GR11,GR8           ADD TO START OF NEXT REC TO BE BUILT  16000019
         C     GR11,ENDOUT        ENUF ROOM IN BFR TO BUILD THIS RECORD 16100019
         BNH   TRANS                   YES, GO BUILD IT                 16170019
         L     GR14,LASTRECX           LAST RECORD BUILT                16250019
         MVI   DISP0(GR14),LASTREC+ENDPROC NO,SET FLAGS IN BUFFER FOR   16350019
         LA    GR9,BFREMPTY            RETURN FROM WRITE                16470019
         SPACE 1                                                        16540019
*                                                                     * 16610019
*                   GENERAL WRITE CALL                                * 16680019
*                                                                     * 16750019
WRITES   EQU   *                                                        16820019
         MVC   READNEXT(LEN4),WRTNEXT  SET POINTER TO OUTPUT            16910019
         L     GR15,VIEBVWS            ADDRESS OF WRITE SETUP ROUTINE   17000019
         BALR  GR14,GR15               ENTER WRITE SETUP ROUTINE        17200019
         MVC   READNEXT(LEN4),BCB  SET POINTER TO FIRST BUFFER          17400019
         BR    GR9                     RETURN FROM WRITE                17720019
DRB00100 TM    ULLDST,LOAD        ON LOAD                        X010XX 17770000
         BO    DRB00110           DONT USE VIEBDRD               X010XX 17820000
         L     GR15,VIEBDRD       ADDR OF READ ROUTINE           X010XX 17870000
         B     DRB00120           READ EXCP                      X010XX 17920000
DRB00110 L     GR15,VRSAM1        READ SEQUENTIAL                X010XX 17970000
DRB00120 BALR  GR14,GR15          CALL READ                      X010XX 18020000
         BR    GR1                RETURN                         X010XX 18070000
         SPACE 1                                                        18400019
TRANS    EQU   *                                                        18600019
         LH    GR9,INLRECL             GET INPUT LRECL SIZE             18800019
         LPR   GR9,GR9            ASSURE POSITIVE SIGN                  18900019
         LA    GR2,BYTEMV                                               19000019
         LA    GR14,MOVED              RETURN FROM MOVING DATA          19300019
         SPACE 1                                                        19600019
MOVEM    EQU   *                                                        19800019
         LR    GR10,GR9                LRECL                            20000019
         AH    GR9,DISP0(GR2)     ADD BYTEMV OR LLOUT                   20200019
         LR    GR1,GR10                SAVE LRECL                       20400019
         STH   GR9,DISP0(GR2)     STORE COUNT                           20600019
         SRL   GR10,LEN8          DIVIDE LRECL BY 256                   20800019
         LTR   GR10,GR10                                                21000019
         BC    MS8,MOVE1          LESS THAN 256- DO IN ONE MOVE         21200019
         SPACE 1                                                        21400019
MOVE256  EQU   *                                                        21600019
         MVC   DISP0(LEN256,GR8),DISP0(GR6)  MOVE 256 BYTES             21800019
         LA    GR8,LEN256(GR8)    UP LOGICAL OUTPUT POINTER BY 256      22000019
         LA    GR6,LEN256(GR6)    UP LOGICAL INPUT POINTER BY 256       22200019
         BCT   GR10,MOVE256            MORE BLOCKS OF 256 BYTES TO MOVE 22400019
         SPACE 1                                                        22600019
MOVE1    EQU   *                                                        22800019
         LA    GR15,LEN255        LOAD MASK                             23040019
         NR    GR1,GR15                ZERO HIGH ORDER THREE BYTES      23080019
         LR    GR10,GR1                SAVE LRECL OR RESIDUAL LENGTH    23100019
         LTR   GR1,GR1                 ZERO                             23120019
         BZ    AROUND                  YES, GO AROUND                   23160019
         BCTR  GR1,GR0            DECREMENT FOR 'EX'                    23260019
         EX    GR1,MOVE                MOVE LAST OR ONLY RECORD         23400019
AROUND   EQU   *                                                        23500019
         AR    GR8,GR10                UP OUTPUT BUFFER POINTER         23600019
         AR    GR6,GR10                UP INPUT  BUFFER POINTER         23800019
         BR    GR14                    RETURN                           24000019
         SPACE 1                                                        24200019
MOVED    EQU   *                                                        24400019
         LH    GR3,INBLKNO             BLOCK FACTOR INPUT               24600019
         BCTR  GR3,GR0            SUBTRACT ONE                          24800019
         LTR   GR3,GR3                 MOVED ALL BLOCKS                 25000019
         BC    MS7,STORBLK        NO- NOT ZERO- CONTINUE                25200019
         TM    DISP0(GR5),ENDPROC LAST RECORD IN INPUT BUFFER           25400019
         BZ    DOMORE             NO- CONTINUE                          25600019
         MVC   READNEXT+DISP1(LEN3),BCB+DISP1  POINT TO START OF BUFFER 25800019
         BAL   GR1,DRB00100       GO LINK TO READ ROUTINES       X010XX 26000000
         L     GR5,READNEXT            START OF INPUT                   27200019
         B     SETS               GO CHECK FOR NEXT RECORD BEING EOF    28200019
         SPACE 1                                                        29800019
DOMORE   EQU   *                                                        30000019
         LR    GR5,GR6                 NEXT INPUT BLOCK                 30400019
         SPACE 1                                                        30800019
SETS     EQU   *                                                        31000019
         CLC   DISP10(LEN2,GR5),ZROS   NEXT RECORD AN EOF               31040019
         BE    PROEOD                  YES- STOP                        31080019
         MVC   WKLNG(LEN2),DISP10(GR5) SIZE OF RECORD LAST MAYBE SHORT  31120019
         LH    GR1,INLRECL             LOGICAL RECORD LENGTH INPUT      31160019
         LPR   GR1,GR1                 MAKE POSITIVE                    31200019
         LH    GR3,WKLNG               DATA LENGTH                      31240019
         LPR   GR3,GR3                 MAKE POSITIVE                    31280019
         SR    GR2,GR2                                                  31320019
         DR    GR2,GR1                 GET BLOCKING FACTOR LAST RECORD  31360019
         LA    GR6,DISP12(GR5)    POINT TO 1ST RECORD IN NET INPUT BLK  31460019
         SPACE 1                                                        31600019
STORBLK  EQU   *                                                        31800019
         STH   GR3,INBLKNO                                              32000019
         LH    GR2,OBLKNO                                               32200019
         BCTR  GR2,GR0            DECREMENT OUTPUT BLOCK NUMBER         32400019
         STH   GR2,OBLKNO         SAVE DECREMENTED OUTPUT BLOCK COUNT   32700019
         LTR   GR2,GR2                 BLOCK COUNT ZERO                 32800019
         BC    MS7,TRANS          NO- CONTINUE BLOCKING                 32900019
         MVC   DISP10(LEN2,GR7),OBLKSIZE SET DATA LENGTH IN COUNT FIELD 33000019
         MVI   DISP9(GR7),KEYLTH       MAKE KEY LENGTH ZERO             33100019
         ST    GR7,LASTRECX            LAST RECORD PROCESSED            33460019
         MVI   DISP0(GR7),ZERO         CLEAR FLAG FIELD                 33560019
         LR    GR7,GR8                 POINT TO NEXT RECORD SLOT        33720019
         LA    GR8,DISP12(GR8)         POINT TO DATA                    33920019
         B     BEGIN                   CONTINUE                         34200019
         SPACE 1                                                        34400019
PROEOD   EQU   *                                                        34600019
         MVC   DISP10(LEN2,GR7),BYTEMV BYTES IN LAST BLOCK              34700019
ENDPROC1 EQU   *                                                        34900019
         MVI   DISP9(GR7),KEYLTH  CLEAR KEY FIELD                       35100019
         MVI   DISP0(GR7),ZERO         CLEAR FLAG FIELD                 35300019
         LA    GR9,DISP12(GR8)    SIZE OF FLAG + COUNT OF EOF REC       35500019
         SR    GR10,GR10                                                35850019
         IC    GR10,DISP9(GR5)    EOF KEY SIZE IF ANY                   35900019
         AR    GR9,GR10                TOTAL LENGTH EOF RECORD          35950019
         C     GR9,ENDOUT              EXCEED BUFFER                    36000019
         BNH   BLDEOF                  NO, GO BUILD IT                  36200019
         MVI   DISP0(GR7),LASTREC+ENDPROC SET LAST REC-LAST BUFFER SW   36500019
         BAL   GR9,WRITES              WRITE THE BUFFER                 36800019
FRSTEOF  EQU   *                                                        37200019
         L     GR8,STARTOUT            START OF BUFFER                  37600019
         SPACE 1                                                        37800019
BLDEOF   EQU   *                                                        38000019
         MVI   DISP0(GR8),LASTREC+ENDPROC SET LAST REC- LAST BUFFER     38100019
         SR    GR10,GR10                                                38280019
         IC    GR10,DISP9(GR5)    EOF KEY SIZE IF ANY                   38360019
         LA    GR1,LEN3           KL + DL COUNT FIELD                   38440019
         AR    GR1,GR10                TOTAL LENGTH EOF RECORD          38520019
         LA    GR6,DISP9(GR5)     FROM ADDRESS                          38600019
         LA    GR8,DISP9(GR8)     TARGET ADDRESS                        38680019
         BCTR  GR1,GR0            DECREMENT FOR 'EX'                    38760019
         EX    GR1,MOVE                MOVE EOF RECORD KL+DL+KEY IF ANY 38840019
         BAL   GR9,WRITES              WRITE THE BUFFER                 38920019
         SPACE 1                                                        39000019
RETRNS   EQU   *                                                        39200019
         L     GR13,SV2+SAV4                                            39300019
         NI    FLG1,FF-STOPEND1        TURN OFF STOP AFTER FIRST        39500019
*                                         BUFFER SWITCH                 39600019
         RETURN  (14,12)                                                39700019
         SPACE 1                                                        39800019
         EJECT                                                          39900019
*                                                                     * 40000019
*              VARIABLE LENGTH RECORD PROCESSING                      * 40100019
*                                                                     * 40200019
         SPACE 1                                                        40600019
VARIAB   EQU   *                                                        40800019
         MVC   LLIN(LEN2),DISP12(GR5)  SAVE TOTAL RECORD SIZE LLBB      41300019
         LH    GR2,LLIN                                                 41800019
         LA    GR1,LEN4                                                 42000019
         SR    GR2,GR1                                                  42200019
         STH   GR2,LLIN                SUBTRACT 4 FOR TOTAL LLBB        42400019
         LA    GR6,DISP16(GR5)    ALLOW FOR LLBB AND LITTLE LLBB        42600019
VARNOBLK EQU   *                                                        42800019
         MVI   DISP0(GR7),KEYLTH  CLEAR FLAG FIELD                      43100019
         MVC   OUTBLKSI(LEN2),OBLKSIZE  SAVE OUTPUT BLOCKSIZE           43400019
         XC    LLOUT(LEN2),LLOUT  CLEAR OUTPUT BLOCK COUNT              43700019
         LH    GR2,OUTBLKSI                                             44200019
         LA    GR1,LEN4                                                 44400019
         SR    GR2,GR1                                                  44600019
         STH   GR2,OUTBLKSI            ALLOW FOR 4 BYTE LLBB            44800019
         LA    GR8,DISP16(GR7)    POINT TO DATA                         45000019
         SPACE 1                                                        45200019
OUTNOBLK EQU   *                                                        45400019
         MVC   WKLNG(LEN2),DISP0(GR6)  MOVE IN INPUT LENGTH- SMALL LLBB 45600019
         CLC   WKLNG(LEN2),OBLKSIZE    INPUT DATA LEN VS OUTPUT BLKSIZE 45800019
         BH    ERROR6                  YES- ERROR                       46000019
         LH    GR9,WKLNG               LRECL                            46200019
         LA    GR2,LLOUT               BYTES MOVED                      46400019
         BAL   GR14,MOVEM              MOVE RECORD                      46600019
         LH    GR2,LLIN                TOTAL RECORD SIZE                46800019
         SH    GR2,WKLNG               REDUCE BY AMOUNT JUST MOVED      47000019
         LTR   GR2,GR2                 ZERO                             47600019
         BC    MS7,DOMOREV        NO- MORE TO BLOCK                     47900019
         TM    DISP0(GR5),ENDPROC  LAST RECORD IN BUFFER                48200019
         BZ    CONTMORE            NO- CONTINUE                         48500019
         BAL   GR1,DRB00100       GO LINK TO READ ROUTINES       X010XX 48800000
         L     GR5,READNEXT            START OF INPUT                   49900019
         B     SETSV                   CONTINUE                         50800019
         SPACE 1                                                        51000019
CONTMORE EQU   *                                                        51200019
         LR    GR5,GR6                 NEXT INPUT BLOCK                 51600019
SETSV    EQU   *                                                        52000019
         MVC   LLIN(LEN2),DISP10(GR5)  MOVE IN LRECL                    52200019
         CLC   DISP10(LEN2,GR5),ZROS   NEXT RECORD AN EOF               52400019
         BE    EODPROC                 YES                              52800019
         LA    GR6,DISP16(GR5)    SPACE OVER BIG LLBB                   53200019
         LH    GR2,LLIN                                                 53600019
         LA    GR1,LEN4                                                 54000019
         SR    GR2,GR1                 ALLOW FOR BIG LLBB SIZE          54400019
         SPACE 1                                                        54800019
DOMOREV  EQU   *                                                        55000019
         STH   GR2,LLIN                REMAINING BLOCKS                 55200019
         LH    GR3,OUTBLKSI            OUTPUT BLOCK SIZE                55400019
         SH    GR3,WKLNG          LENGTH USED                           55600019
         STH   GR3,OUTBLKSI            REMAINING                        55800019
         MVC   WKLNG(LEN2),DISP0(GR6)  MOVE IN LLBB                     56200019
         TM    FORM,FORM3              OUTPUT BLOCKED                   56600019
         BZ    TAB2                    NO                               57000019
         LH    GR15,OUTBLKSI                                            57400019
         CH    GR15,WKLNG         AMOUNT MOVED EQUAL BLOCKSIZE          57600019
         BNL   OUTNOBLK                NO- CONTINUE                     57800019
TAB2     EQU   *                                                        57900019
         LH    GR3,LLOUT                                                58000019
         LA    GR3,LEN4(GR3)      ALLOW FOR LLBB IN SIZE                58200019
         STH   GR3,LLOUT                                                58400019
         MVC   DISP12(LEN2,GR7),LLOUT  STORE NEW LL                     58600019
         XC    DISP14(LEN2,GR7),DISP14(GR7)  CLEAR BB FIELD             58800019
         MVC   DISP10(LEN2,GR7),LLOUT  STORE NEW DATA LENGTH            59000019
         MVI   DISP9(GR7),KEYLTH  CLEAR COUNT OF KEY LENGTH             59200019
         MVI   DISP0(GR7),KEYLTH  CLEAR FLAG FIELD                      59400019
         LA    GR1,DISP12(GR8)                                          59600019
         AH    GR1,OBLKSIZE            SIZE OF NEXT RECORD              59800019
         C     GR1,ENDOUT              EXCEED BUFFER                    60000019
         BNH   MOREIN                  NO, KEEP BUILDING BLOCKS         60200019
         MVI   DISP0(GR7),LASTREC+ENDPROC SET FOR LAST RECORD-LAST BUF  60400019
         BAL   GR9,WRITES              WRITE THE BUFFER                 60700019
         L     GR8,STARTOUT            START OF BUFFER                  61600019
         SPACE 1                                                        61800019
MOREIN   EQU   *                                                        62000019
         LR    GR7,GR8                                                  62200019
         LH    GR15,OUTBLKSI                                            62800019
         LA    GR1,LEN4                                                 63000019
         SR    GR15,GR1                ALLOW FOR BIG LLBB               63200019
         STH   GR15,OUTBLKSI                                            63400019
         LA    GR8,DISP16(GR7)    UP BEYOND BIG LLBB                    63600019
         B     VARNOBLK                START AGAIN                      63800019
         SPACE 1                                                        64000019
ERROR6   EQU   *                                                        65400019
         LA    GR2,INVALRBC            INVALID REBLOCK MESSAGE          65470019
GIVEMESS EQU   *                                                        65540019
         CLI   RCBUF,RTCDE        IS RETURN CODE 8 OR HIGHER     A44144 65590000
         BNL   DONTSET            YES- DON'T SET                 A44144 65600000
         MVI   RCBUF,RTCDE        SET RETURN CODE = 8            A44144 65610000
DONTSET  EQU *                                                   A44144 65660000
         STH   GR2,MSGLIST                                              65680019
         MVI   MSGLIST,LASTMSG         SET LAST MESSAGE                 65750019
         L     GR15,VIEBVMS            MESSAGE WRITER ADDRESS           65820019
         BALR  GR14,GR15               GIVE MESSAGE- NO RETURN          65890019
         SPACE 1                                                        65910019
         MVI   VTMFLG1,UNUSEND         SET SWITCH FOR VTM               65930019
         L     GR15,VIEBVTM            LOAD PTR TO VTM                  65950019
         BALR  GR14,GR15               GO TO VTM  (NO RETURN)           65970019
         SPACE 1                                                        66000019
EODPROC  EQU   *                                                        66200019
         LH    GR1,LLOUT                                                67600019
         LA    GR1,LEN4(GR1)                                            67700019
         STH   GR1,LLOUT                                                67900019
         MVC   DISP12(LEN2,GR7),LLOUT  MOVE RECORD SIZE TO LL FIELD     68000019
         XC    DISP14(LEN2,GR7),DISP14(GR7) CLEAR BB FIELD              68100019
         MVC   DISP10(LEN2,GR7),LLOUT  SET RECORD SIZE IN COUNT FIELD   68200019
         B     ENDPROC1                SET UP EOF                       68600019
         SPACE 1                                                        68800019
STARTOUT DS    F                       START OF BLOCKED OUTPUT          69200019
ENDOUT   DS    F                       END OF BLOCKED OUTPUT            69400019
LASTRECX DS    F                       ADDRESS OF LAST RECORD PROCESSED 69600019
MOVE     MVC   DISP0(DISP1,GR8),DISP0(GR6) MOVE INPUT TO OUTPUT         69800019
INBLKNO  DS    H                       INPUT BLOCKING FACTOR            70000019
OBLKNO   DS    H                       OUTPUT BLOCKING FACTOR           70200019
OUTBLKSI DS    H                  OUTPUT BLOCKSIZE                      70400019
BYTEMV   DS    H                       BYTE COUNT                       70600019
LLIN     DS    H                       PSEUDO LRECL- VARIABLE RECORDS   70800019
LLOUT    DS    H                       TOTAL OUTPUT DATA                71000019
WKLNG    DS    H                  INPUT DATA LENGTH                     71200019
         SPACE 1                                                        71240019
         DS    0F                                                       71280019
PATCHLN  EQU   (*-START)/20            PATCH AREA  SIZE 5 PER CENT      71320019
PATCH    DC    XL(PATCHLN)'00'         START OF PATCH AREA       A41780 71360000
         EJECT                                                          71400019
IEBMCA   DSECT                                                          71600019
         IEBMCA                                                         71800019
         END                                                            81800019
./  ADD  SSI=72900009,NAME=IEBDRD
READ     TITLE 'IEBCOPY  READ ROUTINE- IEBDRD WITH TRACK OVERFLOW'      00200019
IEBDRD   CSECT                                                          00400019
*C 298440                                                      @YM06446 00402002
*A 298440-298492                                               @YM06435 00410002
*A 298100-298420,845394                                        @YM06434 00450002
*C 299500,299800,299600,299988                                 @YM06434 00452002
*D 299600,299900,299980,299992                                 @YM06434 00454002
*A 298500-299992                                               @YM06433 00456002
*D320500-321500                                                  A34431 00460021
*D460400-461600                                                  A36080 00520021
*D699200                                                         A37873 00560021
*C845200                                                         A41780 00570021
*C455200-455800,458420-459000,462600-466500                      A41741 00570121
* 600000,789000                                                  X010XX 00570200
*A685100                                                        OY01181 00579202
*A508510-508560                                                 OY01185 00588202
*A419500-421498                                                 YA01454 00591202
*C420000                                                        YA01454 00594202
*A294020-296000                                                 YL026VD 00596202
*A178200-178840                                                @ZA00915 00596402
*A224000-225500                                                @ZA04404 00596699
*A359930-360630                                                @ZA10909 00596799
*A156500-157999,158499-158939,294088-294099,294232-294455      @ZA26248 00597799
*A294841-295927,296341-297838,298045,436500-437999,            @ZA26248 00598199
*A438499-439889,830500-836984,884500-885999,886499             @ZA26248 00598599
*D158000,294500,296000,298000,438000,886000                    @ZA26248 00598999
         SPACE 1                                                        00600019
*TITLE- IEBCOPY READ ROUTINE- IEBDRD                                  * 00800019
*                                                                     * 01000019
*STATUS- CHANGE LEVEL 001                                             * 01200019
*                                                                     * 01400019
*FUNCTION/OPERATION-  THIS MODULE READS DIRECTORIES, MEMBER DATA OR   * 01600019
*       NOTE LISTS FROM THE OUTPUT DATA SET, THE INPUT DATA SET,      * 01800019
*       SYSUT3 AND SYSUT4 DATA SETS. IT  STARTS READING INTO THE      * 02000019
*       LOCATION POINTED TO BY 'READNEXT' AND READS UNTIL AN          * 02200019
*       END OF FILE IS READ OR THE BUFFERS ARE FULL.                  * 02400019
*                                                                     * 02600019
*ENTRY POINTS- ENTERED AT IEBDRD FOR NORMAL READ                      * 02800019
*                                                                     * 03400019
*INPUT- SWITCH NAMED 'STATUS' IS SET BY CALLER TO TELL READ ROUTINE   * 03600019
*       WHICH DATA SET IS BEING READ  (INPUT OR OUTPUT).              * 03800019
*       SWITCH NAMED 'SENSE' IS SET BY CALLER TO TELL READ ROUTINE    * 04000019
*       WHICH DATA SET IS BEING READ (SYSUT3,SYSUT4 OR NOTE LIST).    * 04200019
*       BUFFER CONTROL BLOCK NAMED 'BCB' IS SET TO POINT TO BUFFERS   * 04400019
*       WHERE DATA IS TO BE READ.                                     * 04600019
*       'READNEXT' IS SET TO ADDRESS WHERE DATA IS TO BE READ.        * 04800019
*       INITIALIZE FDAD IN PROPER DCB BEFORE FIRST READ BY CALLER     * 05000019
*                                                                     * 05200019
*OUTPUT- DATA IS READ INTO LOCATION SPECIFIED. LAST RECORD IN A       * 05400019
*       BUFFER AND LAST RECORD IN LAST BUFFER (LASTREC AND ENDPROC    * 05600019
*       RESPECTIVELY) ARE SET IN FLAG FIELD FOR PROPER RECORD. IOB IS * 05800019
*       UPDATED FOR EACH READ                                         * 06000019
*       'RDGSW' SET TO SHOW READ BEING DONE.                          * 06050019
*       'RDEOF' SWITCH SET WHEN END OF FILE READ                      * 06100019
*       SYNADAF MACRO GIVEN TO CLARIFY HARD I/O ERRORS                * 06150019
*                                                                     * 06200019
*EXTERNAL ROUTINES- PCI APPENDAGE IGG019C8, EXCP, WAIT, SYNADAF MACRO,* 06300019
*                                                                     * 06600019
*EXITS- RETURN TO CALLER ON SUCCESSFUL READ                           * 06900019
*       ENTER MODULE WHICH GIVES SYNADAF AND PREPARES AND ISSUES      * 07200019
*     MESSAGE IDENTIFYING THE I/O ERROR.                              * 07500019
*                                                                     * 07800019
*TABLES/WORK AREAS-                                                   * 08000019
*       -BCB-       POINTERS TO BUFFERS                               * 08200019
*       -IOB-       NEEDED BY EXCP- INIOB,OUTIOB,UT3IOB,UT4IOB        * 08400019
*       -EVENTCB-   EVENT CONTROL BLOCK FOR EXCP                      * 08600019
*       -RDPTR1-    ADDRESS OF CURRENT CCW                            * 08800019
*       -RDPTR2-    ADDRESS OF NEXT CCW                               * 09000019
*       -SV4-       REGISTER SAVE AREA USED IN IEBMCA                 * 09200019
*                                                                     * 09400019
*ATTRIBUTES- SERIAL REUSABLE                                          * 09600019
*                                                                     * 09800019
         EJECT                                                          10000019
*                                                                     * 11400019
*              SYMBOLIC REGISTERS FOR READ ROUTINE                    * 11600019
*                                                                     * 11800019
*                     BASE ADDRESS REGISTER 12, COMMON AREA- 4        * 12000019
*                                                                     * 12200019
         SPACE 1                                                        12400019
GR0   EQU 0                                                             12600019
GR1   EQU 1                                                             12800019
GR2   EQU 2                                                             13000019
GR3      EQU   3                  POINTER TO END OF BUFFER              13200019
GR4      EQU   4                  COMMON AREA POINTER                   13400019
GR5      EQU   5                  POINTER TO IOB                        13600019
GR6      EQU   6                  POINTER TO START OF RECORD            13800019
GR7   EQU 7                                                             14000019
GR8   EQU 8                                                             14200019
GR9      EQU   9                  POINTER TO END OF NXT REC TO BE READ  14400019
GR10  EQU 10                                                            14600019
GR11     EQU   11                                                       14800019
GR12     EQU   12        BASE ADDRESS REGISTER                          15000019
GR13     EQU   13                                                       15200019
GR14     EQU   14                                                       15400019
GR15     EQU   15                                                       15600019
C1       EQU   1                                               @ZA26248 15650099
R0       EQU   0                                               @ZA26248 15659099
R2       EQU   2                                               @ZA26248 15668099
R1       EQU   1                                               @ZA26248 15677099
R3       EQU   3                                               @ZA26248 15686099
C2       EQU   2                                               @ZA26248 15695099
L5       EQU   5                                               @ZA26248 15704099
C4       EQU   4                                               @ZA26248 15713099
R5       EQU   5                                               @ZA26248 15722099
R6       EQU   6                                               @ZA26248 15731099
R7       EQU   7                                               @ZA26248 15740099
R8       EQU   8                                               @ZA26248 15749099
R9       EQU   9                                               @ZA26248 15758099
R10      EQU   10                                              @ZA26248 15767099
R11      EQU   11                                              @ZA26248 15776099
*                                                              @ZA26248 15785099
C5       EQU   5                                               @ZA26248 15794099
C6       EQU   6                                               @ZA26248 15803099
C7       EQU   7                                               @ZA26248 15812099
C8       EQU   8                                               @ZA26248 15821099
C9       EQU   9                                               @ZA26248 15830099
C10      EQU   10                                              @ZA26248 15839099
C12      EQU   12                                              @ZA26248 15848099
KBLEN    EQU   256+8          DIRECTORY PLUS KEY               @ZA26248 15857099
*                                                              @ZA26248 15866099
         EJECT                                                          15899919
         SAVE  (14,12),,*                                               16000019
         BALR  GR12,GR0                GET ADDRESSABILITY               16200019
         USING START,GR12                                               16400019
         USING IEBMCA,4                                                 16600019
START    EQU   *                                                        16800019
         ST    GR13,SV5+P4             POINTER TO OLD SAVE AREA IN NEW  17000019
         LA    GR15,SV5                                                 17200019
         ST    GR15,X8(GR13)           POINTER TO NEW SAVE AREA IN OLD  17500019
         LR    GR13,GR15                                                17800019
         LA    GR3,SECTOR              RESTORE THE ADDRESSES   @ZA00915 17820002
         ST    GR3,SSECTOR              IN THE SET/READ SECTOR @ZA00915 17840002
         MVI   SSECTOR,X'23'            CCWS TO VIRTUAL, IS    @ZA00915 17860002
         ST    GR3,RSECTOR              CHANGED TO REAL BY     @ZA00915 17880002
         MVI   RSECTOR,X'22'            IGG019FT               @ZA00915 17884002
         LA    GR9,ERREPTST            EXCP RETURN ADDRESS-INITIALIZE   17900019
         OI    AOS,PCI                 TURN ON PCI PROC FLAG     X010XX 17950000
         OI    WSFLAG,RDGSW            SET READING SWITCH               18000019
         LA    GR6,RDCW11              GET 1ST CCW ADDRESS              18020019
         LA    GR7,RDCW21              GET 2ND CCW ADDRESS              18040019
         STM   GR6,GR7,RDPTR1          INITIALIZE POINTERS              18060019
         L     GR5,READNEXT            WHERE TO START READ              18080019
         MVC   X1(L3,GR7),READNEXT+P1  INIT SECOND CHAIN TO      X010XX 18090000
         MVC   X9(L3,GR7),READNEXT+P1  POINT WITHIN BUFFER       X010XX 18100000
         MVI   X0(GR5),ZERO            INITIALIZE F BYTE                18110019
         LA    GR5,X4(GR5)             SPACE POINTER OVER FMBB          18140019
         ST    GR5,X0(GR6)             STORE ADDRESS WHERE COUNT READ   18170019
         TM    SENSE,SENSE3            SPECIAL READ 1 RECORD AT A TIME  18200019
         BO    SPECIAL                 YES                              18400019
         TM    STATUS,STAT4            READING INPUT MEMBER             18600019
         BZ    DIRECTB                 NO                               18700019
SETBLK   EQU   *                                                        18900019
         SR    GR10,GR10                                                18950019
         LA    GR11,INDCB                                               19000019
         USING IHADCB,GR11                                              19050019
         IC    GR10,DCBKEYLE           GET KEY LN. FROM DCB             19130019
         AH    GR10,IBLKSIZE           KEY LN + BLOCKSIZE               19190019
         TM    DCBRECFM,OVERFLOW       INPUT TRK OVERFLOW               19210019
         BO    TRKOVFL                 YES-GO TO SPECIAL READ SUB/RTN.  19230019
         STH   GR10,RDCW12+P6          SET INTO RKD CCW BYTE COUNT      19260019
         STH   GR10,RDCW22+P6          SET INTO RKD CCW BYTE COUNT      19290019
         SRL   GR10,X11                DIV BY 2K                 X010XX 19300000
         STC   GR10,RDL1               STORE MAX LENGTH IN LIST  X010XX 19310000
         OI    RDL1,X80                RESTORE OPTION BIT        X010XX 19312000
         STC   GR10,RDL2               STORE MAX LENGTH IN LIST  X010XX 19314000
         OI    RDL2,X80                RESTORE OPTION BIT        X010XX 19316000
         LA    GR11,OUTDCB             GET OUTPUT DCB PTR.              19320019
         TM    DCBRECFM,OVERFLOW       OVERFLOW ON OUTPUT ONLY          19340019
         BZ    GETADDR                 NO-CONTINUE                      19360019
         OI    FLG1,STOPEND1           YES - USE ONLY 1ST BUFFER        19380019
         B     GETADDR                 CONTINUE                         19400019
         SPACE 1                                                        19600019
DIRECTB  EQU   *                                                        19800019
         MVC   RDCW12+P6(L2),MAXRECI   MAXIMUM DIRECTORY RECORD SIZE    20000019
         MVC   RDCW22+P6(L2),MAXRECI   SIZE = 264 BYTES                 20200019
         MVI   RDL1,X80                RESTORE LENGTH LT 2K      X010XX 20250000
         MVI   RDL2,X80                RESTORE LENGTH LT 2K      X010XX 20300000
         SPACE 1                                                        20400019
GETADDR  EQU   *                                                        20600019
         LA    GR8,X8                                                   20800019
         AR    GR5,GR8                 POINT TO KEY/DATA FIELD          21000019
         SPACE 1                                                        21200019
SETUPALL EQU   *                                                        21400019
         ST    GR5,X8(GR6)             STORE IN FIRST RKD CCW           21500019
         MVI   X0(GR6),RCMT            RESTORE RC-MT OP CODE            21600019
         ST    GR8,X4(GR6)             RESTORE COUNT                    21700019
         MVI   X4(GR6),FLAG40          SET CC                           21800019
*                                      MAY HAVE CHANGED CCW             22150019
         MVI   X8(GR6),RKD             RESTORE RKD OP CODE              22250019
         MVI   X12(GR6),FLAG68         SET CC,SLI,PCI                   22350019
         TM    STATUS,STAT4       READING MEMBER?              @ZA04404 22400099
         BO    AROUND             YES,KEEP OPTION BITS IN CCW  @ZA04404 22450099
         NI    X12(GR6),X'DF'     NO,TURN OFF SLI BIT          @ZA04404 22500099
AROUND   EQU   *                                               @ZA04404 22550099
         TM    SENSE,SENSE4            READING FOR COMPRESS             22800019
         BO    SETSCAN                 YES, USE OUTDCB                  22900019
         TM    STATUS,STAT1+STAT4      READING INPUT DIRECTORY OR MEMBR 23000019
         BC    MIXONE,SPLUT4           YES                              23200019
         TM    STATUS,STAT2            READING OUTPUT DIRECTORY         23400019
         BO    SPLUT3                  ESTABLISH CORRECT DCB AND IOB    23900019
         LA    GR5,UT4IOB              PUT CORRECT IOB IN GR5 LEAVE IT  24400019
         B     GETGOING                SET UP FOR EXCP                  24600019
         SPACE 1                                                        24800019
SETSCAN  EQU   *                                                        24840019
         L     GR5,RDPTR2              START OF NEXT CCW CHAIN TO DO    24880019
         MVC   X0(L12,GR5),X0(GR6)     MAKE BOTH CCW CHAINS THE SAME    24900019
         TM    STATUS,STAT2            READING OUTPUT DIRECTORY         24930019
         BZ    SPLUT4                  NO-XFER TO READ INPUT MEMBER     24940019
         SPACE 1                                                        24960019
SPLUT3   EQU   *                                                        25000019
         LA    GR5,OUTIOB              PUT CORRECT IOB IN GR5 LEAVE IT  25200019
         B     GETGOING                SET UP FOR EXCP                  25400019
SPLUT4   EQU   *                                                        25600019
         LA    GR5,INIOB               PUT CORRECT IOB IN GR5 LEAVE IT  25800019
GETGOING EQU   *                                                        26000019
         L     GR7,DCB4IOB(GR5)        DCB POINTER FROM IOB             26200019
         LA    GR7,X0(GR7)             CLEAR HIGH ORDER BYTE            26300019
         MVC   IOBMCCHH(L8,GR5),DISKADR(GR7) MOVE FDAD TO IOB SEEK ADR  26400019
         SPACE 1                                                        26600019
IOBCAWST EQU   *                                                        26800019
         OI    IOBFLGS(GR5),NONSEQEN   SET COMD CHAIN-UNRELATED FLAGS   27000019
         LA    GR6,IOBCCHHR(GR5)       PICK CCHHR OUT OF IOB            27200019
         LA    GR1,CCW1                STARTING CCW                     27400019
         ST    GR6,X0(GR1)             STORE SEARCH ID CCHHR            27600019
         MVI   X0(GR1),SIDEQ           RESTORE SIDEQ OP CODE            27800019
         ST    GR1,READLIST            BEGIN OF CHAIN            X010XX 27802000
*                                        (FOR EXTEND LIST)       X010XX 27802400
         MVI   READLIST,X03            LENGTH OF CHAIN           X010XX 27804000
         L     GR6,RDPTR1              PTR TO FIRST CHAIN        S20201 27805020
         LA    GR6,X0(GR0,GR6)         CLEAR HIGH ORDER BYTE     S20201 27810020
         TM    SENSE,SENSE7            READING FIRST RECORD OF A S20201 27815020
*                                        TRACK OVERFLOW MEMBER   S20201 27820020
         BNO   NOTFIRST                NO, GO AROUND             S20201 27825020
         LA    GR8,X8                  LOAD CONSTANT OF 8        S20201 27830020
         SR    GR6,GR8                 SUBTRACT 8 FROM POINTER   S20201 27835020
*                                 IN RDPTR1 SO THAT NOP AND      S20201 27840020
*                                 POSSIBLY RS CCW WILL BE        S20201 27845020
*                                 CONSTRUCTED IN THE CORRECT     S20201 27850020
*                                 CCW SLOT                       S20201 27855020
NOTFIRST EQU   *                                                 S20201 27860020
         MVI   X16(GR6),NOP            CONSTRUCT NOP CCW         S20201 27865020
*                                        AFTER FIRST CHAIN       S20201 27870020
         LA    GR8,DEVOFF(GR0,GR5)     GET PTR TO DEVTYPE INFO   S20201 27875020
         TM    X1(GR8),RPS             IS THIS AN RPS DEVICE     S20201 27880020
         BNO   NOTRPS                  NO, GO ON                 S20201 27885020
         SPACE 1                                                 S20201 27890020
*   IF RPS IS SUPPORTED A SET SECTOR  CCW CHAIN IS               S20201 27895000
* APPENDED TO THE NORMAL CCW CHAIN                               S20201 27900000
         SPACE 1                                                 S20201 27905020
         LA    GR1,SSECTOR             PTR TO SET SECTOR CCW     S20201 27910020
         ST    GR1,READLIST            BEGIN OF CHAIN            X010XX 27912000
*                                        (FOR EXTEND LIST)       X010XX 27912400
         MVI   READLIST,X04            LENGTH OF CHAIN           X010XX 27914000
         MVC   X16(L4,GR6),RSECTOR     REPLACE NOP WITH RS       S20201 27915020
         LA    GR6,SCTOFF(GR0,GR5)     LOAD PTR TO CURRENT       S20201 27920020
*                                        SECTOR VALUE            S20201 27925020
         MVC   SECTOR(L1),X0(GR6)      MOVE VALUE TO ''SECTOR''  S20201 27930020
         TM    SENSE,SENSE3            READ ONE RECORD ONLY      S20201 27935020
         BNO   NOTRPS                  NO, GO ON                 S20201 27940020
         TM    SENSE,SENSE2            READING NOTELIST          S20201 27945020
         BNO   NOTRPS                  NO, GO ON                 S20201 27950020
         MVI   SECTOR,X0               SET SECTOR VALUE TO 0     S20201 27955020
*                                      (DON'T KNOW CORRECT       S20201 27960020
*                                      VALUE)                    S20201 27965020
NOTRPS   EQU   *                                                 S20201 27970020
         ST    GR1,IOBCAW(GR5)         ADDRESS FIRST CCW TO BE DONE     28000019
         SPACE 1                                                        28200019
BUILDTIC EQU   *                                                        28400019
         MVC   CCW3+P1(L3),RDPTR1+P1   MOVE ADDRESS TO TIC CCW          28600019
         SPACE 1                                                        28800019
         SPACE 1                                                        29200019
STRTIO   EQU   *                                                        29400019
         TM    AOS,PCI                 NEED PCI HANDLING        YL026VD 29402002
         BO    STRTIOVR                YES, DO EXCPVR           YL026VD 29404002
         EXCP  (GR5)                   ISSUE EXCP READ MACRO    YL026VD 29406002
         WAIT  1,ECB=EVENTCB           ISSUE WAIT MACRO         YL026VD 29408002
         BR    GR9                     RETURN FROM READING      YL026VD 29408402
STRTIOVR ST    GR5,IOBVRPTR                                     YL026VC 29408699
*              TEST TO SEE IF COMMAND CHANNING ONLY            @ZA26248 29408899
*              SHOULD BE USED AND IF IT CAN BUILD              @ZA26248 29411899
*              ALTERNATE SET OF CCWS TO PERFORM                @ZA26248 29414899
*              OPERATION.                                      @ZA26248 29417899
*                                                              @ZA26248 29420899
*              REGISTER R6, R7, R1, R0, R5                     @ZA26248 29423899
*                                                              @ZA26248 29426899
*                                                              @ZA26248 29429899
         TM    COMDCDSW,COMPRESS IF COMPRESS USE COMMAND CHAIN @ZA26248 29432899
         BO    BX25                                            @ZA26248 29435899
         TM    FLG2,TRKS2 TEST IF A 2 TRACK BUF                @ZA26248 29438899
*              ALLOCATED YES, PROCEED                          @ZA26248 29441899
*                                                              @ZA26248 29444899
         BZ    BX2                                             @ZA26248 29447899
*                                                              @ZA26248 29450899
BX25     TM    STATUS,STAT1+STAT2+STAT3 ONLY HANDLE            @ZA26248 29453899
         BZ    BX2            NO USE PCI                       @ZA26248 29456899
*                                                              @ZA26248 29459899
BX20     NI    AOS,X'FF'-PCI  TURW                             @ZA26248 29462899
*                                                              @ZA26248 29465899
         L     R1,CCWAREA     POINTER OF WHERE TO BUILD CCWS   @ZA26248 29468899
         LM    R6,R7,DRCCW1   MODELCCW                         @ZA26248 29471899
         L     R5,CCW3        GET CCW PLANED TO BE USED        @ZA26248 29474899
*                                                              @ZA26248 29477899
         L     R5,X0(X0,R5)   GET BUFFER ADDRESS               @ZA26248 29480899
         LA    R5,X0(X0,R5)   WHICH IS +4 TO JUMP FMBB         @ZA26248 29483899
BX6      EQU   *                                               @ZA26248 29486899
         LA    R0,KBLEN+C12(R5)    TEMP ADVANCE TO NEXT SLOT   @ZA26248 29489899
         TM    FLG7,DM        MERGING DIRECTORIES              @ZA26248 29492899
         BZ    BUF2ND         NO ASSUME BUFFER NOT SPLIT       @ZA26248 29495899
*                                                              @ZA26248 29498899
         C     R0,ENDFST1     EXCEED FIRST BUFFER              @ZA26248 29501899
         BNL   BX5            YES, GO READ THESE BUFFERS       @ZA26248 29504899
BX7      LA    R0,X4          BACK UP TO FLAG FIELD            @ZA26248 29507899
         SR    R5,R0                                           @ZA26248 29510899
         MVI   X0(R5),X0        CLEAR FLAG                     @ZA26248 29513899
         AR    R5,R0          INCREMENT TO PATH AREA.          @ZA26248 29516899
         STM   R6,R7,X0(R1)                                    @ZA26248 29519899
         STCM  R5,C7,X1(R1)   INSERT ADDRESS                   @ZA26248 29522899
         LA    R1,X8(X0,R1)   BUMP TO NEXT CCW SLOT            @ZA26248 29525899
         C     R1,SVHI        TEST IF USED UP CCW AREA         @ZA26248 29528899
         BNL   BX5            YES, GO READ WHAT'S BUILT        @ZA26248 29531899
*                                                              @ZA26248 29534899
         LA    R5,KBLEN+C12(R5) ADVANCE TO NEXT SLOT IN BUFFER @ZA26248 29537899
*                                                              @ZA26248 29540899
         B     BX6            LOOP BACK                        @ZA26248 29543899
BUF2ND   C     R0,END2ND2      EXCEEDED END 2ND BUFFER         @ZA26248 29546899
         BNH   BX7            NO, CONTINUE BUILD               @ZA26248 29549899
*                                                              @ZA26248 29552899
*                                                              @ZA26248 29555899
*                                                              @ZA26248 29558899
BX5      EQU   *              PREPARE TO READ THIS LOAD        @ZA26248 29561899
*                                                              @ZA26248 29564899
         LA    R0,X8          BACK UP TO LAST CCW              @ZA26248 29567899
         SR    R1,R0                                           @ZA26248 29570899
         NI    X4(R1),X'FF'-CC      TURN OFF COMD CHAIN        @ZA26248 29573899
*                                                              @ZA26248 29576899
         L     R5,X0(X0,R1)   GET ADDRESS LAST BUFFER          @ZA26248 29579899
         LA    R0,X4          BACK UP TO                       @ZA26248 29582899
         LA    R5,X0(X0,R5)   FLAG FIELD                       @ZA26248 29585899
         SR    R5,R0                                           @ZA26248 29588899
*                                                              @ZA26248 29591899
         MVI   X0(R5),LASTREC+ENDPROC                          @ZA26248 29594899
*                                                              @ZA26248 29597899
         MVC   CCW3+X1(L3),CCWAREA+X1                          @ZA26248 29600899
*                                                              @ZA26248 29603899
         L     R5,IOBVRPTR    GET IOB                          @ZA26248 29606899
BX9      EXCP  (R5)           REQUEST IO BE DONE               @ZA26248 29609899
*                                                              @ZA26248 29612899
         WAIT  1,ECB=EVENTCB  WAIT FOR COMPLETION              @ZA26248 29615899
         USING DXIOB,R5                                        @ZA26248 29618899
         L     R6,IOBCSW  GET LAST CCW+8                       @ZA26248 29621899
         LA    R6,X0(R6)      CLEAR OP FIELD                   @ZA26248 29624899
         DROP  R5                                              @ZA26248 29627899
         LA       R0,X8 BACK UP TO CCW                         @ZA26248 29630899
         SLR   R6,R0                                           @ZA26248 29633899
*                                                              @ZA26248 29636899
         CLI   EVENTCB,INTRCEPT                                @ZA26248 29639899
         BE    BX9            YES-REISSUE EXCP                 @ZA26248 29642899
*                                                              @ZA26248 29645899
         MVC   CURRCCW2+X1(L3),X1(R6)                          @ZA26248 29648899
         CLI   EVENTCB,PERMIO TEXT FOR ERRORS                  @ZA26248 29651899
         BNE   BX8            NO, CONTINUE PROCESSION          @ZA26248 29654899
*                                                              @ZA26248 29657899
         TM    IOBCSWST(R5),UNCHK                              @ZA26248 29660899
         BNO   BX8            YES ERROR                        @ZA26248 29663899
*                                                              @ZA26248 29666899
         SR    R6,R0          GO BACK TO GOOD CCCW             @ZA26248 29669899
         C     R6,CCWAREA     TEST THAT ENDED IN CCWAREA       @ZA26248 29672899
         BL    BX13           NO, GET OUT                      @ZA26248 29675899
         C     R6,SVHI                                         @ZA26248 29678899
         BH    BX13           NO ,GET OUT                      @ZA26248 29681899
BX8      NI    X4(R6),X'FF'-CC                                 @ZA26248 29684899
*                                                              @ZA26248 29687899
         LA    R0,X4          SETR0 TO BACK TO FLAG            @ZA26248 29690899
         L     R6,CCWAREA     GET FIRST CCW                    @ZA26248 29693899
BX11     L     R1,X0(X0,R6)   GET BUFFER                       @ZA26248 29696899
         SLR   R1,R0          BACK TO FLAG                     @ZA26248 29699899
         MVC   X1(L3,R1),IOBMCCHH(R5)                          @ZA26248 29702899
         MVC   IOBCCHHR(L5,R5),X4(R1) MOVE CCHHR TO IOB FOR    @ZA26248 29705899
*                                     POSSIBLE RESTART         @ZA26248 29708899
*                                                              @ZA26248 29711899
*                         IF READING OUTPUT DIRECTORY COUNT DIR@ZA26248 29714899
*                               BLOCKS, FIND HIGHEST R         @ZA26248 29717899
         TM    STATUS,STAT2   TEST IF READING OUT DIR          @ZA26248 29720899
         BZ    BX12        BRANCH NO                           @ZA26248 29723899
*                                                              @ZA26248 29726899
         CLC   IOBRECNO(L1,R5),NDBTR IS CURRENT REC HIGH       @ZA26248 29729899
         BL    BX14                                            @ZA26248 29732899
         MVC   NDBTR(L1),IOBRECNO(R5) SET NEW HIGH             @ZA26248 29735899
*                                                              @ZA26248 29738899
BX14     TM    TAG,CTOUT      CHECK COUNTING DIR BLOCKS        @ZA26248 29741899
         BZ    BX12   BRANCH  NOT CNT  DIRECTORY               @ZA26248 29744899
         LH    R7,DIRBCNT     INCREMENT COUNT                  @ZA26248 29747899
         LA    R7,X1(X0,R7)   OF                               @ZA26248 29750899
         STH   R7,DIRBCNT     DIRECTORY BLOCKS                 @ZA26248 29753899
*                                                              @ZA26248 29756899
BX12     TM    X4(R6),CC                                       @ZA26248 29759899
         BZ    BX13A                                           @ZA26248 29762899
         LA    R6,X8(X0,R6)                                    @ZA26248 29765899
         B     BX11                                            @ZA26248 29768899
BX13A    TM    SENSE,SENSE4     TEST FOR SCANNING              @ZA26248 29771899
         BNO   BX13             BRANCH IF NOT SCANNING         @ZA26248 29774899
         CLI   EVENTCB,OKCODE     IF NOT EOF OR EXETENT        @ZA26248 29777899
         BE    BX20             CONTINUE SCANNING              @ZA26248 29780899
         B     BX13          REACHED ENDING CONDITION, GET OUT @ZA26248 29783899
BX2      L     GR5,IOBVRPTR                                    @ZA26248 29786899
         OI    AOS,PCI                                         @ZA26248 29789899
         LR    GR1,GR5                                          YL026VD 29792899
         EXCPVR (1),SUBSYS             ISSUE EXCPVR READ MACRO  YL026VD 29795899
         WAIT  1,ECB=EVENTCB           ISSUE WAIT MACRO                 29798899
BX13     OI    AOS,PCI        FAKE PCI                         @ZA26248 29801899
         L     GR6,IOBVRPTR            ADDR OF IOB JUST USED   @YMO6434 29810002
         LA    GR6,C35(GR6)            ADDR OF CCHHR           @YM06434 29820002
         STCM  GR6,X7,CCW1+X1          STORE INTO SIDEQ CCW    @YM06434 29830002
         LA    GR6,CCW1                GET ADDR OF SIDEQ CCW   @YM06434 29840002
         STCM  GR6,X7,CCW2+X1         STORE VIRT INTO TIC BACK @YM06434 29842002
         LA    GR6,SECTOR              FOR SET/READ SECT & NOP @YM06446 29844002
         STCM  GR6,X7,SSECTOR+X1       STORE IN SET SECTOR     @YM06435 29844402
         STCM  GR6,X7,RSECTOR+X1       STORE IN READ SECTOR    @YM06435 29846002
         MVI   RSECTOR,X22             RESTORE OP CODE         @YM06435 29848002
         STCM  GR6,X7,RDCW13+X1        MOVE ADDR TO 1ST NO-OP  @YM06435 29848402
         MVI   RDCW13,X03              RESTORE OP CODE         @YM06435 29848802
         MVC   RDCW23(L4),RDCW13       RESTORE SECOND NO-OP    @YM06435 29849202
         L     GR6,RDPTR1              GET CURRENT READ CCW    @YM06433 29850002
         L     GR7,CURRCCW1                                    @YM06433 29900002
         STCM  GR7,X7,X1(GR6)          STORE VIRT RD CT ADDR   @YM06434 29950002
         LA    GR7,X8(GR7)                                     @YM06433 29970002
         STCM  GR7,X7,X9(GR6)          STORE VIRT RD K/D ADDR  @YM06434 29980002
         L     GR6,RDPTR2                                      @YM06433 29992002
         L     GR7,CURRCCW2                                    @YM06433 29994002
         STCM  GR7,X7,X1(GR6)          STORE VIRT RD CT ADDR   @YM06434 29996002
         LA    GR7,X8(GR7)                                     @YM06433 29998402
         STCM  GR7,X7,X9(GR6)          STORE VIRT RD K/D ADDR  @YM06434 29998802
         BR    GR9                     RETURN FROM READING              30000019
         SPACE 1                                                        30200019
ERREPTST EQU   *                                                        30400019
         L     GR6,RDPTR2              ADDRESS OF LAST CCW EXECUTED     30600019
*     SET POINTER IN GR7 TO LAST RECORD FLAG FIELD                      30800019
         L     GR7,X0(GR6)             GET ADDRESS FIELD FROM CCW       31000019
         LA    GR7,X0(GR7)             CLEAR OP CODE                    31200019
         LA    GR8,X4                  SIZE OF FMBB                     31400019
         SR    GR7,GR8                 BACK UP TO FLAG FIELD            31600019
         CLI   EVENTCB,OKCODE          ERRORS                           31800019
         BNE   TESTERR                 MAYBE- CHECK FOR END OF FILE     32000019
GOT7F    EQU   *                                                        32020019
         TM    SENSE,SENSE3            SPECIAL READ              A34431 32040020
         BNO   CHKMISS                 NO, CHECK FOR MISSED PCI  A34431 32060020
         TM    SENSE,SENSE1            READING FROM SYSUT3       A34431 32080020
         BO    UPDTESCT                YES, UPDATE SECTOR VALUE  A34431 32100020
         B     RESTREGS                NO, MUST BE EITHER NOTE   A34431 32120020
*                                       LIST OR RC REQUEST -     A34431 32140020
*                                       RETURN TO CALLER         A34431 32160020
CHKMISS  EQU   *                                                 A34431 32180020
         TM    X0(GR7),ENDPROC         LAST RECORD IN (BUFFERS FULL)    32200019
         BO    NOERRS                  YES-PREPARE TO EXIT              32250019
         B     BUILDTIC                NO, PCI MISSED - RESTART  S20201 32350020
*                                      I/O                       S20201 32450020
         SPACE 1                                                        32600019
NOERRS   EQU   *                                                        32800019
         L     GR8,DCB4IOB(GR5)        POINTER TO DCB FROM IOB          33000019
         LA    GR8,X0(GR8)             CLEAR HIGH ORDER BYTE            33900019
         MVC    DISKADR(L8,GR8),X1(GR7) MOVE FDAD TO DCB                34800019
         TM    STATUS,STAT4            MEMBER                           35860019
         BZ    EXIT                    NO, EXIT                         35880019
         TM    COMDCDSW,COMPRESS       IS A COMPRESS BEING DONE         35900019
         BZ    EXIT                    NO-EXIT                          35934019
         SR    GR2,GR2                                                  35941019
         IC    GR2,X9(GR7)             GET KEY LN                       35948019
         MVC   WKA1(L2),X10(GR7)       MOVE DATA LN TO FULL WORD BNDRY  35955019
         AH    GR2,WKA1                KEY LN + DATA LN                 35962019
         LA    GR2,X12(GR2)            + FMBB + COUNT FIELD SIZE        35969019
         AR    GR2,GR7                 POINT TO END OF RECORD           35976019
         ST    GR2,EOREAD              SAVE FOR WRITE SET UP            35983019
         CLC   EOREAD,END2ND2     IS END OF RECORD             @ZA10909 35993099
*                                 OUTSIDE THE BUFFER?          @ZA10909 36003099
         BL    EXIT               INSIDE                       @ZA10909 36013099
         L     GR2,END2ND2        OUTSIDE, A RECORD >          @ZA10909 36023099
         BCTR  GR2,GR0            BLKSIZE HAS BEEN READ,       @ZA10909 36033099
         ST    GR2,EOREAD         SET REAL END OF BUFFER       @ZA10909 36043099
*                                 AND LET IEBWSU TEST          @ZA10909 36053099
*                                 AND GIVE MSG188I             @ZA10909 36063099
EXIT   EQU  *                                                           39200019
         TM    SENSE,SENSE3            READ ONLY ONE RECORD      S20201 39210020
         BNO   UPDTESCT                NO, UPDATE SECTOR VALUE   S20201 39220020
         TM    SENSE,SENSE1            READING FROM SYSUT3       S20201 39225020
         BO    UPDTESCT                YES, UPDATE SECTOR VALUE  S20201 39230020
         B     RESTREGS                NO, MUST BE EITHER NOTE   S20201 39235020
*                                       LIST OR RC REQUEST -     S20201 39240020
*                                       DON'T UPDATE SECTOR      S20201 39245020
UPDTESCT EQU   *                                                 S20201 39250020
         LA    GR6,SCTOFF(GR0,GR5)     LOAD PTR TO CURRENT       S20201 39260020
*                                      SECTOR SLOT               S20201 39270020
         MVC   X0(L1,GR6),SECTOR       UPDATE TO LAST SECTOR     S20201 39280020
*                                        READ                    S20201 39290020
RESTREGS EQU   *                                                 S20201 39300020
         L     GR13,SV5+P4             POINTER TO SAVE AREA             39400019
         RETURN (14,12)                RETURN TO CALLER                 39700019
         SPACE 1                                                        40000019
TESTERR  EQU   *                                                        40200019
         CLI   EVENTCB,OUTEXT          EXTENT VIOLATED                  40400019
         BE    GETEXTEN                YES                              40600019
TESTPIO  EQU   *                                                 A37873 40650020
         CLI   EVENTCB,PERMIO          PERMANENT I/O ERROR              40700019
         BNE   TESTINT                 NO, GO AROUND                    40800019
         TM    IOBCSWST(GR5),UNCHK     UNIT CHECK                       40900019
         BO    IOERR                   YES                              41000019
         TM    IOBCSWST(GR5),UNEX      UNIT EXCEPTION (EOF)             41100019
         BZ    IOERR                   NO, I/O ERROR                    41200019
ERREOF   EQU   *                                                        41900019
         CLC   X10(L2,GR7),ZROS        TEST TO SEE IF RDPTR2    YA01454 41950002
*                                       POINTS TO THE EOF       YA01454 42000002
*                                       RECORD                  YA01454 42008002
         BE    EOFIN                   YES, SET LAST RECORD READYA01454 42016002
*                                      IF NOT, PCI HAS MISSED   YA01454 42024002
*                                       AND RDPTR1 POINTS TO THEYA01454 42032002
*                                       EOF RECORD              YA01454 42040002
         L     GR8,RDPTR1              GET CURRENT READ CCW     YA01454 42048002
*                                       ADDRESS                 YA01454 42056002
         L     GR7,X0(GR8)             GET CURRENT READ DATA    YA01454 42064002
*                                       ADDRESS                 YA01454 42072002
         LA    GR7,X0(GR7)             CLEAR COMMAND CODE       YA01454 42080002
         LA    GR8,X4                  SIZE OF FMBB             YA01454 42088002
         SR    GR7,GR8                 BACK UP TO FLAG FIELD    YA01454 42096002
         MVC   X1(L3,GR7),IOBMCCHH(GR5) MOVE MBB FROM IOB TO    YA01454 42104002
*                                       RECORD                  YA01454 42112002
EOFIN    MVI   X0(GR7),LASTREC+ENDPROC SET LAST RECORD READ IN  YA01454 42120002
*                                       BUFFER                  YA01454 42128002
ERRNLAST EQU   *                                                        42150019
         OI    FLG2,RDEOF              SET EOF READ SWITCH              42200019
         TM    STATUS,STAT2            READING OUTPUT DIRECTORY         42400019
         BZ    NOERRS                  NO                               42600019
         TM    TAG,CTOUT               COUNTING DIRECTORY BLOCKS        42800019
         BZ    NOERRS                  NO                               43000019
         LH    GR6,DIRBCNT             DIRECTORY BLOCK COUNT            43200019
         BCTR  GR6,GR0                 COUNT INCLUDED EOF RECORD        43400019
         STH   GR6,DIRBCNT             ACCURATE COUNT                   43600019
*                               COMPUTE TRACK BALANCE AFTER EOF@ZA26248 43650099
*                               ON OUT PUT DIRECTORY           @ZA26248 43657099
*                            R2, R8, R10, R1, R6 AVABLE GR5=IOB@ZA26248 43664099
         TM    SENSE,SENSE4   DON'T COMPUTE TRK BAL UNLESS     @ZA26248 43671099
         BZ    BX16           SCANNING.                        @ZA26248 43678099
         LA    GR10,OUTCHAR   ADDRESS OF DEVTAB CONSTANTS      @ZA26248 43685099
         USING DEVTAB,GR10                                     @ZA26248 43692099
*                                                              @ZA26248 43699099
         LA    R2,KBLEN       LENGTH OF DIRECTORY BLOK AND KEY @ZA26248 43706099
         SR R8,R8             CLEAR REG                        @ZA26248 43713099
         IC    R8,OVERI       OVERHEAD NOT LAST REC            @ZA26248 43720099
         TM    DEVFLAG,HALFOVER TWOBYTE OVERHEAD               @ZA26248 43727099
         BNO   NOTTWO         NOTTWO                           @ZA26248 43734099
         LH    R8,OVERI       GET TWO BYTE OVERHEAD            @ZA26248 43741099
NOTTWO   EQU   *                                               @ZA26248 43748099
         TM    DEVFLAG,TOLFAC TEST TOLERANCE FACTOR            @ZA26248 43755099
         BZ    NOTOLER        NO,                              @ZA26248 43762099
*                                                              @ZA26248 43769099
         MH    R2,TOLER       ADJUST FOR SPEED OF DRIVE        @ZA26248 43776099
         SRL   R2,C9          DIVIDE BY 512                    @ZA26248 43783099
NOTOLER  EQU   *                                               @ZA26248 43790099
         AR    R2,R8          ADD OVERHEAD                     @ZA26248 43797099
         LH    R1,TRKCAP      GET CAP OF TRACK                 @ZA26248 43804099
         SR    R6,R6          CLEAR REQ                        @ZA26248 43811099
         IC    R6,IOBRECNO(R5) GET RECORD NO                   @ZA26248 43818099
         BCTR  R6,R0          DECREMENT BY 1                   @ZA26248 43825099
         LR    R3,R2          SET UP ODD REG FOR MULTIPLY      @ZA26248 43832099
         MR    R2,R6          GET SPACE USED THIS TRACK        @ZA26248 43839099
         SR    R1,R3          COMPUTE AMT REMAINING            @ZA26248 43846099
*                                                              @ZA26248 43853099
*                             COMPUTE OVERHEAD OF EOR          @ZA26248 43860099
         IC    R6,OVERK       GET OVERHEAD OF KEY              @ZA26248 43867099
         SR    R8,R6          EOF IS NOT KEYED                 @ZA26248 43874099
*                                                              @ZA26248 43881099
         CLI   DEVCODE+3,X'08' IS IT A 2314?                   @ZA26248 43888099
         BE    ADDONE         YES,SKIP ADD OF ONE BYTE         @ZA26248 43895099
         LA    R2,C1          ADD 1 TO KL+DL OF EOF            @ZA26248 43902099
ADDONE   TM    DEVFLAG,TOLFAC TEST TO SEE IF TOLERANCE         @ZA26248 43909099
         BZ    BX15           REQUIRED N                       @ZA26248 43916099
         MH    R2,TOLER       ALLOW FOR VARIATIONS IN DRIVE    @ZA26248 43923099
         SRL   R2,C9          DIVIDE BY 512                    @ZA26248 43930099
*                                                              @ZA26248 43937099
BX15     AR    R2,R8          ADD OVERHEAD                     @ZA26248 43944099
*                                                              @ZA26248 43951099
         SR    R1,R2          REDUCE TRK BALANCE               @ZA26248 43958099
         STH   R1,OUTDS1+C4   UPDATE TRK BAL FOR WSU           @ZA26248 43965099
*                                                              @ZA26248 43972099
BX16     EQU   *                                               @ZA26248 43979099
         B     NOERRS         RETURN- EOF READ AND FLAGGED     @ZA26248 43986099
         SPACE 1                                                        44000019
GETEXTEN EQU   *                                                        44200019
         L     GR3,DCB4IOB(GR5)        DCB POINTER FROM IOB             45200019
         L     GR6,DEBPTR(GR3)         GET DEB POINTER FROM DCB         45400019
         LA    GR6,X0(GR6)             CLEAR FLAGS                      45500019
         SR    GR8,GR8                                           A41741 45520021
         IC    GR8,IOBMCCHH(GR5)        OBTAIN 'M' FROM IOB      A41741 45540021
         LA    GR8,X1(GR8)              UP 'M' BY ONE            A41741 45560021
         STC   GR8,IOBMCCHH(GR5)        STORE NEW 'M'            A41741 45580021
         CLC   IOBMCCHH(L1,GR5),DEBEXTNM(GR6) COMPARE 'M'- EXTENT NMBR  45600019
         BL    BUMPM                   GO AROUND IF LOW                 45840019
*          END OF EXTENTS REACHED WITHOUT EOF                    A41741 45842021
*          NEXT INSTRUCTIONS WILL SET UP EOF IN BUFFER           A41741 45842121
         BCTR  GR8,GR0                  RESET 'M'                A41741 45842221
         STC   GR8,IOBMCCHH(GR5)        RESTORE 'M'              A41741 45842321
         IC    GR8,IOBRECNO(GR5)        OBTAIN 'R' FROM IOB      A41741 45842421
         LA    GR8,X1(GR8)              UP 'R' BY ONE            A41741 45842821
         STC   GR8,IOBRECNO(GR5)        STORE NEW 'R'            A41741 45843221
         L     GR6,RDPTR1              ADDR OF NEXT CCW          A41741 45843621
*     SET POINTER IN GR7 TO LAST RECORD FLAG FIELD               A41741 45844021
         L     GR7,X0(GR6)             GET ADDRESS FLD FROM CCW  A41741 45846021
         LA    GR7,X0(GR7)             CLEAR OP CODE             A41741 45848021
         LA    GR8,X4                  SIZE OF FMBB              A41741 45850021
         SR    GR7,GR8                 BACK UP TO FLAG FIELD     A41741 45860021
         MVI   X0(GR7),LASTREC+ENDPROC SET LAST REC READ IN BFR  A41741 45870021
         MVC   X1(L8,GR7),IOBMCCHH(GR5) SET UP EOF RECORD ADDR   A41741 45880021
         XC    X9(L3,GR7),X9(GR7)       SET KEY-DATA-LEN ZERO    A41741 45890021
         B     ERRNLAST                BRANCH AS IF END OF FILE  A41741 45900021
         SPACE 1                                                        45920019
BUMPM    EQU   *                                                        45930019
         SLA   GR8,X4             MULTIPLY BY 16 BYTES/EXTENT    A41741 46260021
         AR    GR8,GR6           POINTER TO CORRECT EXTENT BLOCK A41741 46400021
         MVC  IOBBCCHH(L6,GR5),EXTBBDEB(GR8) NEXT EXTENT BBCCHH  A41741 46600021
*                                                  TO IOB        A41741 46650021
         MVI   IOBRECNO(GR5),ZERO      RESET TO RECORD 0 FOR SEARCH     46800019
         MVI SECTOR,X0                 SET ''SECTOR'' TO 0       S20201 46900020
*                                        (USED ONLY IF RPS)      S20201 47000020
         B     BUILDTIC                GET I/O RESTARTED         S20201 47100020
         SPACE 1                                                        47200019
         SPACE 1                                                        49400019
TESTINT  EQU   *                                                        49600019
         CLI   EVENTCB,INTRCEPT        INTERCEPT POSTED                 49800019
         BE    STRTIO                  YES-RE-ISSUE EXCP                50000019
         SPACE 1                                                        50200019
IOERR    EQU   *                                                        50400019
         L     GR15,VIEBDSRE           ENTRY POINT IN DSCPY TO   A33288 50500020
*                                        TRANSFER CONTROL TO     A33288 50600020
*                                        IEBIOE                  A33288 50700020
         BALR  GR14,GR15               GO TO IDENTIFY THE I/O ERROR     50800019
IEBDRDR  EQU   *                                                 A33288 50803020
         ENTRY IEBDRDR                                           A33288 50806020
         LA    GR11,INDCB              LOAD PTR TO INDCB                50810019
         TM    DCBRECFM,OVERFLOW       INPUT TRACK OVERFLOW             50820019
         BO    GOT7FTOV                YES, ERROR CAN BE IGNORED -      50830019
*                                         CONTINUE TRACK OVERFLOW       50840019
*                                         PROCESSING                    50850019
         SR    GR8,GR8            IF ERROR IGNORED,             OY01185 50851002
         IC    GR8,IOBRECNO(GR5)  DIMINISH RECNO                OY01185 50852002
         BCTR  GR8,GR0            NOT TO DROP A RECORD          OY01185 50853002
         STC   GR8,IOBRECNO(GR5)  NEXT TO THE ONE WITH DATA CHCKOY01185 50854002
         MVC   DCBFDAD(L8),IOBMCCHH(GR5)    PUT IT ALSO IN DCB  OY01185 50855002
         B     GOT7F                   IF IEBIOE RETURNS CONTROL,       50860019
*                                        ERROR CAN BE IGNORED           50920019
         EJECT                                                          51000019
SPECIAL  EQU   *                       READING 1 RECORD AT A TIME       51200019
*                                                                     * 51400019
*                         FROM INPUT DIRECTORY NOT IN CORE= SYSUT3    * 51600019
*                     OR THE COUNT + DATA OF THE NOTELIST RECORD (RCKD) 52000019
*                  OR READS TO SCAN FOR 'HOLES' FOR COMPRESS          * 52400019
*                  GR6 CONTAINS POINTER TO FIRST CCW (RDPTR1)         * 52800019
         SPACE 1                                                        52850000
         NI    AOS,FF-PCI              TURN OFF PCI PROC FLAG    X010XX 52900000
         SPACE 1                                                        53200019
         TM    SENSE,SENSE2            READING NOTELIST                 53600019
         BO    NOTESL                  YES, READ CKD FROM INPUT         54000019
         TM    SENSE,SENSE1            READING FROM SYSUT3       A34431 54100020
         BNO   RCONLY                  NO, MUST BE A RC REQUEST  A34431 54200020
*                                       FOR INPUT DATA SET       A34431 54300020
         L     GR5,ADWK                GET PTR FOR SYSUT3               54400019
         LA    GR5,X12(GR5)            SPACE OVER COUNT + FMBB FIELDS   54800019
         ST    GR5,X0(GR6)             STORE IN CCW DATA ADDRESS        55200019
         MVI   X0(GR6),RDMT            RESTORE RD-MT OP CODE            55600019
         LA    GR5,UT3IOB              SYSUT3 IOB                       56000019
         LH    GR7,UT3LRECL            SIZE OF SYSUT3 RECORDS           56400019
         SPACE 1                                                        56800019
SET4READ EQU   *                                                        57200019
         STH   GR7,X6(GR6)             STORE LENGTH TO BE READ          57600019
         MVI   X4(GR6),FLAG60          SET SLI AND CC FLAGS      S20201 57700020
         LA    GR7,X16(GR0,GR6)        GET POINTER TO NOP/TIC/RS S20201 57800020
*                                        CCW SLOT                S20201 57900020
         ST    GR7,X8(GR0,GR6)         PLACE IN RKD SLOT TO ACT  S20201 58000020
*                                        AS NOP                  S20201 58100020
         MVI   X8(GR6),TIC             COMPLETE CONSTRUCTION     S20201 58200020
*                                        OF TIC CCW              S20201 58300020
         B     GETGOING                SET UP AND ISSUE READ            58400019
         SPACE 1                                                        58800019
NOTESL   EQU   *                                                        59200019
         LA    GR5,INIOB               INPUT IOB                        59600019
         LA    GR7,MAXNOTE             MAXIMUM C+K+D NOTELIST    X010XX 60000000
         MVI   X0(GR6),RCKD            SET RCKD OP CODE                 60400019
         B     SET4READ                SET UP CCWS                      60800019
         SPACE 1                                                 A34431 61000020
RCONLY   EQU   *                                                 A34431 61200020
         LA    GR5,INIOB               POINTER TO INPUT IOB      A34431 61400020
         LA    GR7,X8                  LOAD LENGTH OF COUNT      A34431 61600020
*                                       FIELD                    A34431 61800020
         MVI   X0(GR6),RCMT            SET RC M/T OP CODE        A34431 62000020
         B     SET4READ                SET UP CCW'S              A34431 62200020
         EJECT                                                          62400019
*                                                                       62600019
*********************************************************************** 62800019
*                                                                     * 63000019
*              TRACK OVERFLOW  SUB-ROUTINE                            * 63200019
*                                                                     * 63400019
*********************************************************************** 63600019
*                                                                       63800019
*        SET UP SPECIAL CCWS-READ ONE RECORD AT A TIME                  64000019
*                                                                       64400019
*        GR10 - HAS DATA AND KEY LENGTH                                 64500019
         USING DXIOB,GR5                                                64600019
TRKOVFL  EQU   *                                                        64800019
         NI    AOS,FF-PCI              TURN OFF PCI PROC FLAG    X010XX 64850000
         ST    GR5,RDCW11              SET-UP DATA ADDRESS-DUMMY-       65000019
         MVI   RDCW11,RKD              SET RKD OP CODE                  65100019
         STH   GR10,RDCW11+P6          SET LENGTH FOR READ              65200019
         MVI   RDCW11+P4,FLAG70        SET CC,SLI,SKIP                  65300019
*                                                                       65600019
         ST    GR5,RDCW12              DATA ADDRESS                     65800019
         MVI   RDCW12,RCKDMT           SET RCKD-MT OP CODE              66000019
         LA    GR10,X8(GR10)           ADD LENGTH OF COUNT FIELD        66200019
         STH   GR10,RDCW12+P6          SET LENGTH TO BE READ            66400019
         MVI   RDCW12+P4,FLAG20        SET SLI FLAG              S20201 66700020
*                                                                       67000019
         LA    GR5,INIOB               INPUT IOB                        67200019
         TM    STATUS,STAT8            EOF LAST READ                    67230019
         BZ    SKIPREAD                NO- READ WITH K/D AND SKIP       67260019
         LA    GR10,RDCW12             YESUSE 2ND CCW TO START WITH     67290019
         ST    GR10,RDPTR1             STORE FOR TIC SET UP             67320019
         OI    SENSE,SENSE7            SET FIRST RECORD OF A     S20201 67327020
*                                        TRACK OVERFLOW MEMBER   S20201 67334020
*                                        SWITCH                  S20201 67341020
SKIPREAD EQU   *                                                        67350019
         BAL   GR9,GETGOING            GO SET-UP FOR I/O                67400019
*        RETURN HERE AFTER EXCP COMPLETED                               67600019
         NI    STATUS,FF-STAT8         TURN OFF FIRST RECORD SWITCH     67650019
         NI    SENSE,FF-SENSE7         TURN OFF SENSE7           S20201 67670020
         LA    GR10,RDCW11             PT. TO 1ST CCW                   67700019
         ST    GR10,RDPTR1             STOW FOR TIC                     67750019
         L     GR7,RDCW12              GET DATA ADDRESS                 67810019
         LA    GR7,X0(GR7)             CLEAR OP CODE                    67870019
         LA    GR8,X4                  LENGTH OF FMBB FIELD             67930019
         SR    GR7,GR8                 POINT BACK TO BEGINNING          67990019
         MVI   X0(GR7),ZERO            CLEAR FLAG BYTE                  68060019
         MVC   X1(L3,GR7),DXDAADDR     FETCH MBB FROM IOB               68130019
*        FIND  ACTUAL NUMBER OF BYTES READ                              68200019
         IC    GR8,X9(GR7)             GET KEY LN                       68250019
         LR    GR10,GR8                SAVE IT                          68300019
         LA    GR8,X8(GR8)             ADD COUNT FIELD LN               68380019
         LH    GR6,RDCW12+P6           GET COUNT STARTED WITH           68460019
         LPR   GR6,GR6                 MAKE SURE IT'S POSITIVE  OY01181 68500002
         SH    GR6,IOBCNT              SUB. COUNT READ - FROM IOB       68550019
         SR    GR6,GR8                 TAKE OFF KL AND COUNT LENGTH     68650019
         STH   GR6,WKA1                SAVE UM                          68750019
         MVC   X10(L2,GR7),WKA1        PLACE ACTUAL NUMBER OF DATA      68850019
*                                        BYTES READ INTO COUNT FIELD    68950019
*                                        (COUNT FIELD READ INTO CORE    69050019
*                                         TELLS NUMBER OF BYTES IN      69150019
*                                         FIRST SEGMENT ONLY)           69250019
         CLI   EVENTCB,OKCODE          ERROR POSTED                     69350019
         BE    GOT7FTOV                NO, I/O OK                A37873 69400020
         CLI   EVENTCB,OUTEXT          OUT OF EXTENT POSTED      A37873 69450020
         BNE   TESTPIO                 NO, GO TEST FOR PERMANENT A37873 69500020
*                                       I/O ERROR                A37873 69550020
         LA    GR3,RDCW12              LOAD PTR TO RCKD CCW      A37873 69600020
         ST    GR3,RDPTR1              STORE AS FIRST CCW SO     A37873 69650020
*                                       THAT RKD CCW WILL BE     A37873 69700020
*                                       SKIPPED- IF THIS WAS NOT A37873 69750020
*                                       DONE, FIRST RECORD IN    A37873 69800020
*                                       NEW EXTENT WOULD BE      A37873 69850020
*                                       SKIPPED                  A37873 69900020
         B     GETEXTEN                GO FIND NEXT EXTENT       A37873 69950020
*        GO FIND NEXT BUFFER AND SEE RECORD WILL FIT                    70000019
GOT7FTOV EQU   *                                                        70300019
         LA    GR8,X12(GR6,GR10)       ADD KL + DL + 12                 70500019
         AR    GR8,GR7                 POINT TO END OF RECORD JUST READ 70800019
*                                                                       71000019
         AH    GR10,IBLKSIZE           GET WHAT WILL BE NEXT ONE        71200019
         LA    GR10,X12(GR8,GR10)      POINT TO END OF NEXT ONE TO READ 71400019
*                                                                       71600019
         LA    GR11,OUTDCB             GET OUTPUT DCB ADDR.             71800019
         TM    DCBRECFM,OVERFLOW       IS OUTPUT OVERFLOW ALLOWED       72000019
         BO    ONEPRBFS                YES-USE ONLY ONE LOGICAL BUFFER  72200019
         TM    FLG1,P2FLG1             ARE BUFFERS SPLIT                72400019
         BZ    SECBUF                  NO-NOT SPLIT                     72600019
         TM    FLG1,IN2ND              INTO SECOND BUFFER ALREADY       72800019
         BO    SECBUF                  YES-CHECK 2ND ONE                73000019
         C     GR10,ENDFST1            NO-AT END OF FIRST YET           73200019
         BNH   CONTINU                 NO-GO ON                         73400019
         OI    X0(GR7),LASTREC         OTHERWISE SET LAST IN BUFFER     73600019
         L     GR8,BEGFST2             GET NEXT ONE                     73800019
         OI    FLG1,IN2ND              SET IN 2ND BUFFER SWITCH         74000019
*        PREPARE TO ISSUE EXCP AGAIN                                    74200019
CONTINU  EQU   *                                                        74400019
         LA    GR8,X4(GR8)             BUMP PASSED FMBB                 74500019
         ST    GR8,RDCW12              STOW WHERE TO GO                 74600019
         MVI   RDCW12,RCKDMT           RESET RCKD-MT OP CODE            74800019
         LA    GR11,INDCB              GET INPUT DCB                    75000019
         MVC   DCBFDAD(L8),X1(GR7)     MOVE IN PREVIOUS MBBCCHHR        75200019
         B     GETGOING                GO DO UM AGAIN                   75400019
*        OUTPUT NOT OVERFLOW                                            75600019
SECBUF   EQU   *                                                        75800019
         C     GR10,END2ND2            END OF ALL BUFFER SPACE          76000019
         BNH   CONTINU                 NO-GO GET SOMEMORE               76200019
         OI    X0(GR7),LASTREC+ENDPROC SET FLAGS FOR LAST RECORD        76400019
         B     NOERRS                  NO MORE ROOM EXIT                76600019
*        OUTPUT IS OVERFLOW USE ONLY ONE LOGICAL BUFFER                 76800019
ONEPRBFS EQU   *                                                        77000019
         C     GR10,ENDFST1            END OF 1ST BUFFER                77200019
         BNH   CONTINU                 NO, CONTINUE PROCESSING          77400019
         OI    X0(GR7),LASTREC+ENDPROC YES, NO MORE ROOM                77600019
         B     NOERRS                  EXIT                             77800019
         SPACE 2                                                        78300019
MAXRECI  DC    H'264'                  MAXIMUM DIRECTORY SIZE KEY+DATA  79000019
         SPACE 1                                                        81400019
         SPACE 1                                                        83000019
*                             READING CCWS MODEL               @ZA26248 83050099
*                                                              @ZA26248 83070099
DRCCW1   CCW   X'9E',0,X'40',KBLEN+X8 READ COUNT KEY AND DATA  @ZA26248 83090099
*        LENGTH FIELD MODIFIED TO BLOK SIZE AND 8              @ZA26248 83110099
*                             FOR OTHER INPUTS.                @ZA26248 83130099
*              DIRECTOR, WRITING CCW MODEL                     @ZA26248 83150099
*                                                              @ZA26248 83170099
DWCCW1   CCW   X'31',R0CNTF,X'60',5  SERCH ON FIRST CNT        @ZA26248 83190099
DWCCW2   CCW   X'08',DWCCW1,X'00',1  TIC UNTIL FOUND           @ZA26248 83210099
DWCCW3   CCW   X'08',DWCCW4,X'00',1  TIC AROUND CNT            @ZA26248 83230099
R0CNTF   DC    D'0'                                            @ZA26248 83250099
DWCCW4   CCW   X'0D',0,X'40',KBLEN  WRITE KEY AND DATA         @ZA26248 83270099
*                                                              @ZA26248 83290099
*        DWCCW4 REPEATS AS MANY TIMES AS BLOCKS/TRACK          @ZA26248 83310099
TRKSWL   EQU   DWCCW4-DWCCW1  LENGTH OF TRACK SWITCH MODEL     @ZA26248 83330099
*                                                              @ZA26248 83350099
*        OUTPUT CCW MODEL USED IN PLACE DWCCW4                 @ZA26248 83370099
DACCW4   CCW   X'1D',0,X'60',0                                 @ZA26248 83390099
*                                                              @ZA26248 83410099
CC       EQU   X'60'          COMMAND CHAIN                    @ZA26248 83430099
R0OFSET  EQU   R0CNTF-DWCCW1                                   @ZA26248 83450099
DCCW3OST EQU   DWCCW3-DWCCW1                                   @ZA26248 83470099
PATCHLN  EQU   (*-START)/20            5 PERCENT PATCH AREA LENGTH      83700019
PATCH    DC    XL(PATCHLN)'00'         PATCH AREA                A41780 84520021
         EJECT                                                          84521019
*   THE FOLLOWING EQUATES ARE USED TO REFER TO SYMBOLIC LOCATIONS PLUS  84522019
*  A CONSTANT                                                           84523019
P1       EQU   1                                                        84524019
P4       EQU   4                                                        84525019
P6       EQU   6                                                        84526019
*   THE FOLLOWING EQUATES ARE USED IN INSTRUCTIONS WHICH REQUIRE LENGTH 84527019
*  SPECIFICATIONS SUCH AS MVC                                           84528019
L1       EQU   1                                                        84529019
L2       EQU   2                                                        84530019
L3       EQU   3                                                        84531019
L4       EQU   4                                                 S20201 84531520
L6       EQU   6                                                        84532019
L8       EQU   8                                                        84533019
L12      EQU   12                                                       84534019
*   THE FOLLOWING EQUATES ARE USED AS DISPLACEMENT CONSTANTS            84535019
X0       EQU   0                                                        84536019
X1       EQU   1                                                        84537019
X4       EQU   4                                                        84538019
X6       EQU   6                                                        84539019
X7       EQU   7                                               @YM06434 84539402
X8       EQU   8                                                        84540019
X9       EQU   9                                                        84541019
X10      EQU   10                                                       84542019
X11      EQU   11                                                X010XX 84542400
X12      EQU   12                                                       84543019
X16      EQU   16                                                       84544019
C35      EQU   35                OFFSET INTO IOB OF CCHHR      @YM06434 84544402
*   THE FOLLOWING ARE MISC EQUATES                                      84545019
FF       EQU   X'FF'                                                    84546019
X80      EQU   X'80'                                             X010XX 84546400
X03      EQU   X'03'                                             X010XX 84546800
X04      EQU   X'04'                                             X010XX 84546900
X22      EQU   X'22'                                           @YM06435 84548102
RDMT     EQU   X'86'                                                    84550802
RCKDMT   EQU   X'9E'                                                    84552002
RKD      EQU   X'0E'                                                    84553202
RCMT     EQU   X'92'                                                    84554402
RCKD     EQU   X'1E'                                                    84555602
NOP      EQU   X'03'                                                    84556802
SIDEQ    EQU   X'31'                                                    84558002
TIC      EQU   X'08'                                                    84559202
ZERO     EQU   0                                                        84560402
MIXONE   EQU   5                                                        84561602
OKCODE   EQU   X'7F'                                                    84562802
PERMIO   EQU   X'41'                                                    84564002
INTRCEPT EQU   X'44'                                                    84565202
OUTEXT   EQU   X'42'                                                    84566402
UNCHK    EQU   X'02'                                                    84567602
UNEX     EQU   X'01'                                                    84568802
FLAG20   EQU   X'20'                                             S20201 84570002
FLAG40   EQU   X'40'                                                    84571202
FLAG60   EQU   X'60'                                             S20201 84572402
FLAG68   EQU   X'68'                                                    84573602
FLAG70   EQU   X'70'                                                    84574802
RPS      EQU   X'10'                                             S20201 84576020
MAXNOTE  EQU   1291                    MAXIMUM NOTELIST LENGTH   X010XX 84586000
         EJECT                                                          84600019
         DCBD  DSORG=PS                                                 84800019
DISKADR  EQU   DCBFDAD-IHADCB          MBBCCHHR RECORD JUST READ        85000019
DEBPTR   EQU   DCBDEBAD-IHADCB         DEB POINTER IN DCB               85200019
OVERFLOW EQU   X'20'              OVERFLOW FLAG IN DCBRECFM             85300019
         EJECT                                                          85400019
IECDSECT DSECT                                                          85600019
         IECDSECT                                                       85800019
         SPACE 1                                                        86000019
DCB4IOB  EQU   IOBDCBPT-DXIOB-1        POINTER TO DCB IN IOB            86200019
IOBCAW   EQU   IOBSIOCC-DXIOB          STARTING CCW ADDRESS (CAW) IOB   86400019
IOBCSWST EQU   IOBSTAT0-DXIOB          CSW STATUS IN IOB                86600019
IOBFLGS  EQU   IOBFLAG1-DXIOB          FLAGS IN IOB, READ AFTER EOF     86800019
NONSEQEN EQU   X'42'                   COMD CHAINING, UNRELATED FLAGS   87000019
IOBMCCHH EQU  DXDAADDR-DXIOB           MBBCCHH IN IOB                   87200019
IOBBCCHH EQU  DXDAADDR-DXIOB+1         BBCCHH IN IOB                    87400019
IOBCCHHR EQU  DXDAADDR-DXIOB+3         CCHHR IN IOB                     87600019
IOBRECNO EQU  DXDAADDR-DXIOB+7         RECORD NUMBER (R) IN IOB         87800019
         SPACE 1                                                        88000019
DEBEXTNM EQU   DXDEBUSR-DXDEB          NUMBER OF EXTENTS FROM DEB       88200019
EXTBBDEB EQU   DXDEBBIN-DXDEB          BBCCHH FOR START OF EXTENT DEB   88400019
DEVTAB   DSECT                                                 @ZA26248 88450099
*                                                              @ZA26248 88460099
*     DIRECT ACCESS DEVICE TABLE OVERLAY  OUTCHAR IN IEBMCA    @ZA26248 88470099
*                                                              @ZA26248 88480099
DEVCODE  DS    F                DEVICE CODE FROM UCB           @ZA26248 88490099
MAXSIZE  DS    F                MAXIMUM SIZE UNKEYED BLOCK     @ZA26248 88500099
MAXCC    DS    H                NUMBER OF CYLINDER             @ZA26248 88510099
MAXHH    DS    H                NUMBER OF TRACKS               @ZA26248 88520099
TRKCAP   DS    H                MAXIMUM TRACK LENGTH           @ZA26248 88530099
OVERI    DS    XL1              OVERHEAD NOT LAST RECORD       @ZA26248 88540099
OVERL    DS    XL1              OVERHEAD LAST RECORD           @ZA26248 88550099
OVERK    DS    XL1              OVERHEAD REDUCTION FOR NON-KEY @ZA26248 88560099
DEVFLAG  DS    XL1              APPLY TOLERANCE FACTOR NOT LST @ZA26248 88570099
TOLER    DS    H                GAP LENGTH CALCULATE TOLERANCE @ZA26248 88580099
TOLFAC   EQU   X'01'            TOLERANCE FACTOR TO BE ADDED   @ZA26248 88590099
HALFOVER EQU   X'08'            TWO BYTE OVERHEAD              @ZA26248 88600099
*                                                            * @ZA26248 88610099
*       END OF DEVTAB OVERLAY                                * @ZA26248 88620099
*                                                            * @ZA26248 88630099
         EJECT                                                          88699919
IEBMCA   DSECT                                                          88800019
         IEBMCA                                                         89000019
         SPACE 1                                                        89200019
         END                                                            89400019
./  ADD  SSI=73640047,NAME=IEBDSCPY
         TITLE 'IEBDSCPY - MAIN PROCESSING MODULE'                      00060019
IEBDSCPY CSECT                                                          00120019
*A042044,520100-520198,521300-521340                           @ZA02997 00120199
*A 105240-105296,154700                                        @YM06438 00120402
*C 389200,390000,392400                                        @YA06439 00122002
*A 391700,392900                                               @YA06439 00124002
*A914500                                                        YM06972 00124402
*D180800,496200,497200-497900,504120-504340,504440,564400-566400 A34431 00126021
*D181100-271200,403500-403800,405600-418800  (IEBBAM)            S20201 00132021
*C642510,962100                                                  A41780 00134021
*C041960-041980                                                  A44338 00134121
*041840,084600,421000,556200,921600,921900                       X010XX 00134221
*C041960-041980                                                  A44338 00134321
*C834600                                                         A44336 00136121
*C403300                                                         A44144 00138100
*A402920-403100,618300-619300,631400-631900,831000-831300        A44144 00138500
*A402500-402540                                                  A44144 00138602
*D403400,403500-403800,619800,830500                             A44144 00138702
*C389200,390000,392400                                          YA01718 00138802
*A402500-402540                                                  A44144 00138900
*D403400,403500-403800,619800,830500                             A44144 00139300
*042244,115100-1151140                                          YA01688 00139602
*D391800,393000                                                 YA01718 00140002
*C389200,390000,392400                                         @YA02603 00140702
*A391700-392300                                                @YA02603 00140802
*********************************************************************** 00140902
*A083410-083430,085745-085755                                   YA02536 00142002
*D085700,085784                                                 YA02536 00144002
*C085760                                                        YA02536 00146002
*C392400                                                       @ZA07317 00146199
*D392900                                                       @ZA07317 00146299
*D520100-520198,521300-521340                                  @ZA10904 00146399
*A957800-958000                                                @ZA11929 00146499
*C956400                                                       @ZA11929 00146599
*A078500,078520                                                @ZA13720 00146699
*A788900-788980,835800                                         @ZA13739 00146799
*C788400                                                       @ZA13739 00146899
*A047450-047984,460050,520850-522456                           @ZA11923 00148899
*C459200,460000,517800                                         @ZA11923 00149299
*A521010-521050                                                @ZA24081 00149699
*C055200                                                       @ZA26345 00149799
*D047450-047984,459200-460050,517800-519600,520850-522456      @ZA26345 00149899
*********************************************************************** 00150002
*                                                                     * 00160019
*TITLE   IEBDSCPY - IEBCOPY MAIN CONTROL MODULE                       * 00180019
*STATUS  CHANGE LEVEL 001                                               00200019
*                                                                     * 00220019
*FUNCTION/OPERATION  -  MONITORS THE FLOW OF CONTROL FOR THE IEBCOPY  * 00240019
*        UTILITY                                                      * 00250019
*        ALLOCATES CORE STORAGE                                       * 00260019
*        INITIALIZES FOR THE PROCESSING OF AN INDD-GROUP              * 00270019
*        DOES NECESSARY INITIALIZATION FOR PROCESSING MULTIPLE INDD'S * 00280019
*        AND/OR OUTDD'S                                               * 00290019
*        ALLOCATES I/O BUFFERS                                        * 00300019
*        'FINDS' SELECTED OR UN-EXCLUDED INPUT MEMBERS                * 00310019
*        PERFORMS OUTPUT PRESCAN FOR DUPLICATE INPUT DIRECTORY        * 00360019
*        ENTRIES                                                      * 00380019
*        SETS UP FOR COPYING A MEMBER                                 * 00400019
*        CONVERTS TTR'S TO MBBCCHHR'S                                 * 00420019
*        CONVERTS MBBCCHHR'S TO TTR'S                                 * 00440019
*        HANDLES SYSIN AND SYSPRINT I/O ERRORS                        * 00460019
*        RETURNS A POINTER TO AN OUTPUT DIRECTORY ENTRY IN THE I/O    * 00480019
*        BUFFER                                                       * 00500019
*        BUILDS THE CTLTAB AND SAVES INPUT DIRECTORY ENTRIES IN  CORE * 00520019
*        WHEN POSSIBLE                                                * 00540019
*        RETURNS A POINTER TO AN INPUT DIRECTORY ENTRY IN CORE OR     * 00560019
*        READS IN A SPILLED INPUT DIRECTORY ENTRY AND RETURNS A       * 00580019
*        POINTER TO IT                                                * 00610019
*        SAVES OUTPUT DIRECTORY BLOCKS IN CORE WHEN POSSIBLE          * 00640019
*ENTRY POINTS                                                         * 00680019
*IEBDSCPY - ALLOCATES CORE STORAGE,DOES INITIALIZATION FOR PROCESSING * 00700019
*        AN INDD GROUP                                                * 00720019
*IEBGME - FOR RE-ISSUING GETMAIN IF IEBVTM ISSUED FREEMAIN BETWEEN    * 00730019
*        COPY OPERATIONS                                              * 00740019
*IEBMNI - ALLOCATES I/O BUFFERS, SEARCHES INPUT DIRECTORY FOR SELECTED* 00750019
*        OR NON-EXCLUDED MEMBERS, PERFORMS OUTPUT DIRECTORY 'PRE-SCAN'* 00760019
*IEBMNM - SETS UP FOR COPYING A MEMBER WITHOUT RE/DE BLOCKING         * 00780019
*IEBEOF - SYSIN EODAD INTERFACE                                       * 00800019
*IEBIOE - EXCP READ OR WRITE I/O ERROR HANDLING                       * 00820019
*IEBCER - SYSIN SYNAD EXIT                                            * 00840019
*IEBPER - SYSPRINT SYNAD EXIT                                         * 00860019
*IEBSCX - USED BY IEBVTM TO EXIT TO IEBSCN                            * 00880019
*IEBDSCP2 -  A CSECT WITHIN THE MAIN CONTROL MODULE,CONTAINING        * 00900019
*        SUBROUTINES WHICH MUST ALWAYS BE IN CORE (IN ROOT SEGMENT)   * 00930019
*                                                                     * 00960019
*THE FOLLOWING SUBROUTINES ARE CONTAINED WITHIN IEBDSCP2 -            * 00980019
*TTOCC - CONVERTS TTR'S TO MBBCCHHR'S                                 * 01000019
*CCOTT - CONVERTS MBBCCHHR'S TO TTR'S                                 * 01020019
*IEBMGD - RETURNS A POINTER TO AN OUTPUT DIRECTORY ENTRY IN THE I/O   * 01040019
*        BUFFER.                                                      * 01060019
*IEBMBT - BUILDS CTLTAB AND SAVES IDE'S                               * 01080019
*IEBMGI - RETURNS A POINTER TO AN IDE IN CORE OR READS AN IDE IN IF IT* 01100019
*        IS SPILLED.                                                  * 01120019
*IEBMKO - RETAINS OUTPUT DIRECTORY ENTRIES IN CORE                    * 01140019
*INPUT - PARAMETER LIST FROM INVOKER                                  * 01160019
*        INPUT AND OUTPUT DIRECTORIES                                 * 01180019
*        MEMBERS TO BE COPIED                                         * 01200019
*                                                                     * 01220019
*OUTPUT - COPIED MEMBERS                                              * 01240019
*        MERGED OUTPUT DIRECTORY                                      * 01260019
*                                                                     * 01280019
*EXITS - NORMAL - RETURNS TO CALLER VIA IEBVTM WITH A RETURN CODE IN  * 01300019
*        REGISTER 15 OF -                                             * 01320019
*        00- NORMAL TERMINATION                                       * 01340019
*        04- AN ERROR CONDITION EXISTS PROCESSING CAN CONTINUE        * 01360019
*        08- AN ERROR CONDITION EXISTS - PROCESSING CANNOT CONTINUE   * 01380019
*       ERROR - SYSIN/SYSPRINT I/O ERRORS EXIT BACK TO I/O-ISSUING    * 01390019
*               MODULE                                                * 01400019
*                                                                     * 01410019
*EXTERNAL ROUTINES -                                                  * 01420019
*                  IEBDV1                                             * 01430019
*                  IEBSCN                                             * 01460019
*                  IEBDRD                                             * 01480019
*                  IEBVCT                                             * 01500019
*                  IEBVTT                                             * 01520019
*                  IEBVWS                                             * 01540019
*                  IEBDWR                                             * 01560019
*                  IEBVDM                                             * 01580019
*                  IEBVTM                                             * 01600019
*                  IEBVMS                                             * 01620019
*                  IEBMCM                                             * 01640019
*                  IEBDRB                                             * 01660019
*                  IEBIOE                                             * 01666019
*                  IGG019C8 (PCI APPENDAGE)                           * 01672019
*                  IEBBAM                                        S20201 01675020
*                                                                     * 01678019
*TABLES/WORK AREAS -                                                  * 01684019
*        ALL SWITCHES, TABLES, AND WORK AREAS NECESSARY FOR           * 01690019
*        MONITORING THE IEBCOPY UTILITY                               * 01700019
*                                                                     * 01720019
*ATTRIBUTES - SERIALLY REUSEABLE                                      * 01740019
*                                                                     * 01760019
*********************************************************************** 01780019
*                                                                       02160019
         EJECT                                                          02220019
* GENERAL REGISTER DEFINITION / USAGE                                   02280019
         SPACE 2                                                        02340019
R0       EQU   0             WORK REG                                   02400019
R1       EQU   1             WORK REG                                   02460019
R2       EQU   2             WORK REG                                   02520019
R3       EQU   3             WORK REG                                   02580019
R4       EQU   4             ADDR OF COMMUNICATION AREA                 02640019
R5       EQU   5             WORK REG                                   02700019
R6       EQU   6             WORK REG                                   02760019
R7       EQU   7             WORK REG                                   02820019
R8       EQU   8             WORK REG                                   02880019
R9       EQU   9             WORK REG                                   02940019
R10      EQU   10            WORK REG                                   03000019
R11      EQU   11            BASE REG 1                                 03060019
R12      EQU   12            WORK REG                                   03120019
R13      EQU   13            ADDR OF SAVE AREA                          03180019
R14      EQU   14            LINK-BACK REG                              03240019
R15      EQU   15            LINK-OUT REG                               03300019
TKOFLO   EQU   X'20'              BIT FOR TRACK OVERFLOW TEST OF DCB    03360019
TABLEN   EQU   10                 LENGTH OF ONE SETAB/CTLTAB ENTRY      03420019
C1CTEL   EQU   TABLEN                                                   03450019
CON12    EQU   12                 LENGTH OF FLAG+MBB+COUNT FIELDS       03480019
NLLEN    EQU   1300          LENGTH OF RESERVED NOTE-LIST WORK AREA     03570019
ZERO     EQU   X'00'              CONSTANT                              03660019
ONE      EQU   X'01'              CONSTANT                              03720019
FF       EQU   X'FF'              CONSTANT                              03750019
XF0      EQU   X'F0'                                             X010XX 03752000
RPS      EQU   X'10'              RPS BIT IN DEVICE INFO         S20201 03757020
S16      EQU   16                 SHIFT VALUE OF 16              S20201 03764020
S24      EQU   24                 SHIFT VALUE OF 24              S20201 03771020
NMDISP   EQU   2             DISPLACEMENT OF NAME FRM BEG OF TBL ENTRY  03780019
NAMLEN   EQU   8                  LENGTH OF NAME IN TABLE(S)            03840019
DBOFF    EQU   4                  OFFSET FROM START OF DEVTYPE TO BLKSZ 03900019
SXTN     EQU   NAMLEN+NAMLEN      TWO TIMES LENGTH OF NAME FIELD        03960019
OPEN     EQU   X'10'              TO TEST DCBOFLGS FOR OPENED DCB       04080019
USERMASK EQU   X'60'              TO TEST FOR ANY USER TTRN IN DIR ENT  04140019
ADCVT    EQU   16                 ABSOLUTE ADDR OF POINTER TO CVT       04142019
BLNK     EQU   C' '               BLANK CHARACTER                       04144019
CHAINBK  EQU   4                  FOR SAVE AREA LINKAGE                 04146019
CHAINTHS EQU   8                  FOR SAVE AREA LINKAGE                 04148019
DDLORPG  EQU   X'80'              BIT TO TEST FOR DDNAME LIST OR PG NBR 04150019
DIV2     EQU   1                  TO DIVIDE BY 2 VIA 'SRL' INSTRUCTION  04152019
ENDOFPNO EQU   3                  END OF PAGE NBR AREA                  04154019
FDEOFF   EQU   22                 OFFSET TO 1ST DE IN BLOCK             04156019
LEN8     EQU   8                  LENGTH OF 8                           04158019
LFT8     EQU   8                  FOR 'SLL' INSTRUCTION                 04160019
LFT25    EQU   25                 USED IN 'SLL' INSTRUCTIONS            04162019
LFT27    EQU   27                 USED IN 'SLL' INSTRUCTIONS            04164019
LSYN1    EQU   78                 *  UP                                 04166019
LSYN2    EQU   21                 * SYNADAF                             04168019
LSYN3    EQU   22                 *  MSG                                04170019
MAXDE    EQU   80                 LENGTH(+6) OF MAXIMUM DIR ENTRY       04172019
MBLEN    EQU   120                LENGTH (-1) OF MSG BUFFER             04174019
NNLEN    EQU   4                  LENGTH OF 1 ENTRY IN NNPTRTAB         04176019
NOT0     EQU   7                  FOR BC INSTRUCTIONS                   04178019
OFF140I  EQU   0                  OFFSET IN MSG IEB140I FOR DDNAME      04180019
OFF141I  EQU   54                 OFFSET IN MSG IEB141I FOR MBRNAME     04182019
OFF159I  EQU   54                 OFFSET IN MSG IEB159I FOR DDNAMX010XX 04184000
PRFXLEN  EQU   7                  * AND MSG NBR                         04186019
REC      EQU   7                  OFFSET TO 'R' OF MBBCCHHR             04188019
RT26     EQU   26                 USED IN 'SRL' INSTRUCTIONS            04190019
RT30     EQU   30                 USED IN 'SRL' INSTRUCTIONS            04192019
SPILLEN  EQU   80                 LENGTH OF SYSUT3 RECORD               04194019
SYNMT    EQU   50                 * TEXT                         A44338 04196021
SYN1     EQU   42                 * USED                         A44338 04198021
SYN2     EQU   19                 *  TO                                 04200019
SYN3     EQU   18                 *  SET                                04202019
TKOFUDGE EQU   12                 FUDGE FACTOR FOR TRK OVFLO BFR ALLOC  04204019
L0       EQU   0                  LENGTH OF 0                  @ZA02997 04204499
L1       EQU   1                  LENGTH OF 1                           04206019
L2       EQU   2                  LENGTH OF 2                           04208019
L3       EQU   3                  LENGTH OF 3                           04210019
L4       EQU   4                  LENGTH OF 4                           04212019
P1       EQU   1                  TO ADD 1 TO SOMETHING                 04214019
P2       EQU   2                  TO ADD 2 TO SOMETHING                 04216019
P3       EQU   3                  TO ADD 3 TO SOMETHING                 04218019
P4       EQU   4                  TO ADD 4 TO SOMETHING                 04220019
P8       EQU   8                  TO ADD 8 TO SOMETHING                 04222019
P16      EQU   16                 TO ADD 16 TO SOMETHING                04224019
P20      EQU   20                 TO ADD 20 TO SOMETHING        YA01688 04225002
P24      EQU   24                 TO ADD 24 TO SOMETHING                04226019
P32      EQU   32                 TO ADD 32 TO SOMETHING                04228019
P40      EQU   40                 TO ADD 40 TO SOMETHING                04230019
X0       EQU   0                  OFFSET OF ZERO                        04232019
X1       EQU   1                  OFFSET OF 1                           04234019
X2       EQU   2                  OFFSET OF 2                           04236019
X3       EQU   3                  OFFSET OF 3                           04238019
X4       EQU   4                  OFFSET OF 4                           04240019
X5       EQU   5                  LENGTH OF 5                    X010XX 04240400
X6       EQU   6                  OFFSET OF 6                           04242019
X7       EQU   7                  OFFSET OF 7                           04244019
X8       EQU   8                  OFFSET OF 8                           04246019
X10      EQU   10                 SHIFT OF TEN                   X010XX 04246400
X11      EQU   11                 OFFSET OF 11                   X010XX 04246800
X12      EQU   12                 OFFSET OF 12                          04248019
* FOLLOWING EQUATES MUST BE CHANGED IF DIRECTORY FORMAT IS CHANGED -    04260019
C1KL     EQU   9             OFFSET FROM BEGINNING OF A DIRECTORY BLOCK 04320019
*                            TO THE KEYLENGTH FIELD OF THE HDWR COUNT   04380019
C1DL     EQU   10            OFFSET FROM BEGINNING OF A DIRECTORY BLOCK 04440019
*                            TO THE DTALENGTH FIELD OF THE HDWR COUNT   04500019
C1DECT   EQU   11            OFFSET FROM BEGINNING OF DE TO COUNT BYTE  04560019
*                            OF NBR OF USER HALFWORDS                   04620019
C1FXL    EQU   12            LENGTH OF FIXED PORTION OF A DE -          04680019
*                            MBRNAME=8, MBRTTR=3, COUNT BYTE=1          04740019
KL       EQU   8                  LENGTH OF DIRECTORY KEY               04800019
BL       EQU   256                LENGTH OF ONE DIRECTORY BLOCK         04860019
KBLEN    EQU   KL+BL              LENGTH OF KEY + BLOCK                 04920019
HDRLEN1  EQU   60                 LENGTH OF FIRST HEADER RECORD  X010XX 04970000
SPIDEOFF EQU   12                 OFFSET FROM BEGINNING OF WORK AREA TO 04980019
*                                 ACCESS 1ST BYTE OF A SPILLED INPUT DE 05040019
CH4      EQU   C'4'               CHAR. CONSTANT FOR COMPLETION CODE    05160019
CH8      EQU   C'8'               CHAR. CONSTANT FOR COMPLETION CODE    05220019
CHK      EQU   C'K'                                              X010XX 05270000
CHCOMMA  EQU   C','                                              X010XX 05272000
         EJECT                                                          05280019
MAINFLOW EQU   *                                                        05340019
         SPACE 2                                                        05400019
         ENTRY IEBDSCME                                                 05440019
         ENTRY IEBDSCNI                                                 05480019
         SAVE  (14,12),T,IEBDSCPY-OZ26345 SAVE REGS            @ZA26345 05520099
         BALR  R11,R0             ADDRESSIBILITY                        05580019
         USING *,R11                                                    05640019
         L     R4,VCOMM                ADDR OF COMMUNICATION AREA       05700019
         USING IEBMCA,R4               BASE REG FOR COMMUNICATION AREA  05760019
         ST    R13,SV1+CHAINBK    SET UP SAVE AREA LINKAGE              05820019
         LA    R10,SV1                                                  05880019
         ST    R10,CHAINTHS(R13)                                        05940019
         LR    R13,R10                                                  06000019
         LA    R2,NAMLEN          INITIALIZE REGS FOR INVOKATION TESTS  06060019
         SR    R7,R7                                                    06120019
         SR    R8,R8                                                    06180019
         SR    R9,R9                                                    06240019
         TM    X0(R1),DDLORPG     IS THERE A DDNAME LIST                06300019
         BO    EXTEST             IF NOT, TEST FOR PARAMETER - COMPRESS 06360019
         L     R5,X4(R1)          GET ADDR OF LIST                      06420019
         LH    R6,X0(R5)          GET LENGTH OF LIST                    06480019
         LA    R5,X2(R5)          ACTUAL ADDR OF LIST ENTRY             06540019
DDFIN    LTR   R6,R6              IS LIST EXHAUSTED                     06600019
         BNH   TSTPG              YES, GO SEE IF PAGE NBR IS SPECIFIED  06660019
         LA    R9,P1(R9)          NO, ADD 1 TO SLOT-MODIFIER            06720019
         CH    R9,DDSL(R8)        IS THIS SLOT MODIFYABLE BY USER       06780019
         BNE   NEXTDD             IF NOT, GO SET TO TRY NEXT SLOT       06840019
         CLI   X0(R5),ZERO        IS THERE A NON-ZERO ENTRY HERE        06900019
         BE    NXTDD1             IF NOT, USER DIDNT CHANGE THIS DDNAME 06960019
         LA    R14,DDLIST(R7)     ELSE GET ADDR WHERE TO MOVE THIS NAME 07020019
         MVC   X0(NAMLEN,R14),X0(R5)  OVLY ASSEMB DDNAME WITH USER'S    07080019
NXTDD1   AR    R7,R2              INDEX TO NEXT NAME IN DDNAME TABLE    07140019
         LA    R8,P2(R8)          POINT TO NEXT SLOT INDICATOR          07200019
NEXTDD   SR    R6,R2              DECREASE LENGTH OF LIST BY 8          07260019
         AR    R5,R2              POINT TO NEXT ENTRY IN USERS DDLIST   07320019
         B     DDFIN              LOOP TO SEE IF ALL DONE               07380019
*                                                                       07440019
*        USE USER'S PAGE NBR IF SPECIFIED                               07500019
*                                                                       07560019
TSTPG    TM    X4(R1),DDLORPG     IS THERE A USER-SPECIFIED PAGE NUMBER 07620019
         BO    EXTEST             IF NOT, CHECK FOR COMPRESS            07680019
         L     R5,X8(R1)          ADDR OF PAGE NBR-2 (LENGTH FIELD)     07740019
         LH    R6,X0(R5)          LENGTH OF NBR                         07800019
         LTR   R6,R6              IS THERE A LNGTH OF PGNOLIST @ZA13720 07850099
         BZ    EXTEST             NO,USE DEFAULT PAGE NUMBER   @ZA13720 07852099
         BCTR  R6,R0              LENGTH-1 FOR EXECUTING MVC            07860019
         LA    R8,PGNO+ENDOFPNO   POINT TO END OF PAGE NBR AREA         07920019
         SR    R8,R6              ADJUST TO POINT TO 1ST CHARACTER TO   07980019
*                                 BE OVERLAYED BY USER'S PAGE NUMBER    08040019
         EX    R6,SETPGNO         MOVE IN USERS PAGE NUMBER             08100019
EXTEST   L     R1,X0(R1)          ADDR OF POINTER LIST                  08160019
         LH    R6,X0(R1)          LENGTH OF LIST                        08220019
DSC00080 EQU   *                                                 X010XX 08270000
         LTR   R6,R6              IS THERE A LIST                       08280019
         BNH   SETDCBNS           IF NOT, DONT LOOK FOR 'COMPRESS'      08340019
         LA    R7,X8                                            YA02536 08390002
         CLR   R6,R7              WILL 'COMPRESS' FIT IN LIST   YA02536 08392002
         BL    DSC00090           NO, CHECK FOR 'SIZE='         YA02536 08394002
         CLC   X2(LEN8,R1),COMP   DOES PARAMETER = 'COMPRESS'           08400019
         BNE   DSC00090           GO COMPARE TO 'SIZE='          X010XX 08460000
         OI    COMDCDSW,COMPRESS  ELSE SET SWITCH                       08520019
         SR    R6,R7              SUBTRACT 8 FROM LENGTH         X010XX 08572000
         LA    R1,X8(R1)          BUMP PARM POINTER              X010XX 08574000
DSC00090 LA    R7,X4                                            YA02536 08574402
         CLR   R6,R7              WILL 'SIZE=' FIT IN LIST      YA02536 08574802
         BL    DSC00190           NO, DO NOT COMPARE            YA02536 08575202
         CLC   X2(X5,R1),COMP1    COMPARE TO 'SIZE='            YA02536 08577202
         BNE   DSC00190           COMPARE NEXT PLACE             X010XX 08578000
         SR    R6,R7              SUBTRACT 4 FROM LENGTH         X010XX 08578800
         LA    R1,X0(R1)          CLEAR HIGH ORDER BYTE          X010XX 08579200
         LR    R8,R1                                             X010XX 08579600
DSC00100 CLI   X7(R8),CHK         K INDICATES SPECIAL CASE       X010XX 08579700
         BE    DSC00120           SET SWITCH AND CONVERT         X010XX 08579800
         CLI   X7(R8),CHCOMMA     NEXT BYTE A COMMA              X010XX 08579900
         BE    DSC00130           NUMBER OK CONVERT IT           X010XX 08599900
         BCT   R6,DSC00110        IF LIST EXHAUSTED              X010XX 08609900
         B     DSC00130           GO TO CONVERT                  X010XX 08619900
DSC00110 LA    R8,X1(R8)          BUMP DIGIT COUNT               X010XX 08626600
         CLI   X6(R8),XF0         WAS LAST BYTE NUMERIC          X010XX 08628600
         BNL   DSC00100           YES CONTINUE SCAN              X010XX 08630600
         LA    R1,X4(R8)          NO RESTORE POINTER             X010XX 08632600
         B     DSC00080           SCAN REMAINDER OF PARM FIELD   X010XX 08633000
DSC00120 OI    FLG2,NBRK          SET K SWITCH                   X010XX 08638300
DSC00130 SR    R8,R1              NOW R8 HOLDS DIGIT COUNT       X010XX 08640000
         BZ    DSC00170           IF 0 RETURN                    X010XX 08649900
         LA    R7,X8                                             X010XX 08659900
         CLR   R8,R7              COUNT GT 8                     X010XX 08661900
         BH    DSC00170           RETURN ,IGNORE SIZE            X010XX 08663900
         BCTR  R8,R0              SUBTRACT 1 FOR EXECUTE         X010XX 08665900
         XC    CCIMAGE,CCIMAGE                                   X010XX 08666000
         EX    R8,PACK            PACK THE NUMBER OF BYTES       X010XX 08666300
         CVB   R7,CCIMAGE         CONVERT TO BINARY              X010XX 08666400
         TM    FLG2,NBRK          SWITCH ON                      X010XX 08666500
         BZ    DSC00150           NO,DONT MULTIPLY BY K          X010XX 08672100
         SLL   R7,X10             MULTIPLY BY K                  X010XX 08674100
         LTR   R7,R7              NUMBER TO BIG FOR SHIFT        X010XX 08676100
         BP    DSC00150           OK,CONVERT NUMBER              X010XX 08676500
         LA    R7,X1(R0)          ELSE MAKE                      X010XX 08676900
         SLL   R7,RT30                 BIG NUMBER                X010XX 08677300
DSC00150 ST    R7,MAXBUF          STORE SIZE                     X010XX 08677400
         LA    R1,X1(R1)                                         X010XX 08677500
DSC00170 LA    R1,X4(R8,R1)       ADJUST PARM POINTER            X010XX 08677600
         B     DSC00080           SCAN REMAINDER OF PARM FIELD   X010XX 08683200
DSC00190 LA    R1,X1(R1)          BUMP POINTER                   X010XX 08683300
         BCT   R6,DSC00080        SCAN REMAINING FIELD IF ANY    X010XX 08685300
SETDCBNS LA    R6,CARDCB                                         X010XX 08688800
         USING IHADCB,R6                                         X010XX 08694400
         MVC   DCBDDNAM(NAMLEN),DDLIST                                  08700019
         LA    R6,PRTDCB                                                08760019
         MVC   DCBDDNAM(NAMLEN),DDLIST+P8                               08820019
         LA    R6,INDCB                                                 08880019
         MVC   DCBDDNAM(NAMLEN),DDLIST+P16                              08940019
         LA    R6,OUTDCB                                                09000019
         MVC   DCBDDNAM(NAMLEN),DDLIST+P24                              09060019
         LA    R6,UT3DCB                                                09120019
         MVC   DCBDDNAM(NAMLEN),DDLIST+P32                              09180019
         LA    R6,UT4DCB                                                09240019
         MVC   DCBDDNAM(NAMLEN),DDLIST+P40                              09300019
         DROP  R6                                                       09360019
         LA    R14,ENTSCAN        SET UP EXIT REG FOR IEBVMS USE        09420019
         STM   R11,R14,RESET1     SAVE CRITICAL REGS - USED BY IEBVTM   09450019
*                                 TO RESTORE FROM IF EXITING TO IEBSCN  09480019
         MVI   VTMFLG1,NOMAIN     SET INDICATOR IN CASE CANNOT OPEN     09510019
*                                 SYSIN OR CANT SUCCESSFULLY GETMAIN    09540019
         MVI   IOEF2,NOSYSIN      PRESET BAD-SYSIN SWITCH               09940019
         L     R15,VIEBDV0        ADDR OF ROUTINE TO OPEN AND VALIDATE  10380019
*                                 SYSIN AND SYSPRINT DCB'S              10440019
         BALR  R14,R15            LINK TO ROUTINE                       10500019
         NI    IOEF2,SPRNOPN      RESET ALL BUT POSSIBLY THIS BIT       10510019
         OI    CCSWITCH,FIRSTSCN  SET FIRST ENTRY TO SCN SWITCH         10520019
         SPACE                                                          10522002
* GET A 48-BYTE AREA OUT OF PLPA FOR THE LIST PASSED TO PAGE   @YM06438 10524002
* FIX IN THE START I/O APPENDAGE (IGG019FT).  THIS LIST AREA   @YM06438 10526002
* MUST BE OBTAINED OUT OF FIXED STORAGE                        @YM06438 10528002
* THE AREA WILL BE FREED AT EOJ IN IEBVTM.                     @YM06438 10528402
         SPACE                                                          10528802
         L     R7,SIXENTRY        GET LENGTH OF AREA-48 BYTES  @YM06438 10528902
         GETMAIN R,LV=(R7),SP=253                              @YM06438 10529202
         ST    R1,FIXLIST         STORE ADDR OF GOTTEN AREA    @YM06438 10529602
         SPACE                                                          10529702
IEBGME   EQU   *                  ENTRY POINT - USED WHEN IEBVTM HAS    10530019
*                                 ISSUED A FREEMAIN BETWEEN COPY OPERA- 10540019
*                                 TIONS AND ANOTHER GETMAIN MUST BE DUN 10550019
IEBDSCME EQU   IEBGME                                                   10555019
         GETMAIN VC,LA=ADWANT,A=ADGOT                                   10560019
         LTR   R15,R15                                                  10620019
         BC    NOT0,LACKCORE      IF RC NOT 0, TELL USER AND TERMINATE  10660019
         MVI   VTMFLG1,ZERO       CLEAR ALL POSS ERROR INDICATORS       10710019
         SPACE 2                                                        10740019
***                                                                     10800019
* PERFORM ALL ONE-TIME INITIALIZATION HERE                              10860019
***                                                                     10920019
         LM    R7,R8,ADGOT        GET ADDR AND LENGTH OF ACQUIRED CORE  10980019
         AR    R8,R7                   ADDR OF LOWCORE + LENGTH =       11040019
*                                      ADDR OF HICORE (+1)              11100019
         L     R0,FREEAMT         GET LENGTH OF CORE TO FREE UP         11160019
         SR    R8,R0              SUBTR FROM CALCULATED MAX HI ADDRESS  11220019
         LR    R1,R8              GET ADDRESS FROM WHICH TO FREE UP     11280019
         ST    R8,HICOR                PUT MODIFIED ADDR INTO COMMAREA  11340019
         ST    R8,SVHI            SAVE ADDR OF HIGHEST AVAIL CORE       11400019
         ST    R8,END2ND2         SET ENDING ADDR OF 2ND I/O BUFFER     11460019
         LA    R7,P20(R7)         ADD UP ADNL TO FIT            YA01688 11470002
*                                  COUNT FIELD INTO             YA01688 11480002
*                                  GOTTEN AREA                  YA01688 11490002
         ST    R7,ADNL                 ADDR OF NOTE-LIST WKAREA         11520019
         LA    R7,NLLEN(R7)            ADD LENGTH OF NOTE-LIST AREA     11580019
         ST    R7,ADWK            ADDR OF 128-BYTE WORK AREA            11640019
         LA    R7,WKLEN(R7)            ADD LENGTH                       11700019
         ST    R7,LOCOR           SET ADDR OF LOWEST UNUSED CORE        11760019
         ST    R7,INBEGIN              THIS IS ADDR OF 1ST CURRENTLY    11820019
*                                      UNUSED BYTE OF AVAILABLE CORE -  11880019
*                                      INDD TABLE WILL START HERE       11940019
         ST    R7,NXTINDS         SET AS ADDR OF CURRENT INDD NAME      12000019
         FREEMAIN   R,LV=(0),A=(1) FREE CORE AT HI END OF ACQUIRED AREA 12060019
         OI    FLG4,NEWODS        INITIALIZE 'OUTDD-NOT-WRITTEN-TO' SW  12090019
         SPACE 2                                                        12120019
         L     R15,VIEBSCN   GET ADDR OF CTL-CD SCAN MODULE             12960019
         BALR  R14,R15       EXIT TO CCSCAN                             13020019
         EJECT                                                          13080019
* CCSCAN RETURNS TO THIS POINT...THE SCAN WILL HAVE SET UP THE FOL-     13140019
* LOWING TABLES -                                                       13200019
*        INDDTAB   -TABLE OF INPUT DD NAMES SPECIFIED IN ''THE CUR-     13260019
*                   RENT'' INDD                                         13320019
*        OUTNAME   -NAME OF THE OUTPUT DD                               13380019
*        SETAB     -IF SELECT, TABLE OF NAMES TO BE SELECTED AND NEW-   13440019
*                   NAMES, IF ANY SPECIFIED.                            13500019
*                  -IF EXCLUDE, TABLE OF NAMES TO BE EXCLUDED           13560019
* CARDCB WILL BE OPENED BY IEBSCN WHEN FIRSTENT SW IS SET.              13620019
* ALSO, SEVERAL SWITCHES AND ADDRESSES WILL BE SET IN COMMAREA.         13680019
*                                                                       13740019
* CCSCAN CAN ENTER MAINFLOW AT THIS POINT WITH EITHER ONLY A NEW INDD-  13800019
* GROUP OR WITH BOTH A NEW INDD-GROUP AND NEW OUTDD.                    13860019
*                                                                       13920019
* FIRST, MAINFLOW PERFORMS ALL NECESSARY INITIALIZATION FOR THE NEW     13980019
* INDD-GROUP.                                                           14040019
ENTSCAN  EQU   *                                                        14100019
         XC    ADNNPTRT(L4),ADNNPTRT   ZERO PTR TO NEWNAME TABLE        14130019
         MVC   LOCOR(L4),SESTOP   SET CURRENT ADDR OF AVAIL CORE (LOW)  14160019
         MVC   INIDDCTS(L2),INDDCT SAVE NBR OF CURRENT INDD'S           14190019
*                                 THIS NUMBER MAY BE USED TO AID IN DE- 14234019
*                                 TERMINING WHETHER ANY INPUT DATA SETS 14241019
*                                 HAVE BEEN PROCESSED, SINCE 'INDDCT'   14248019
*                                 WILL HAVE BEEN DECREMENTED WHILE      14255019
*                                 'INIDDCTS' REMAINS UNCHANGED UNTIL    14262019
*                                 THE NEXT INDD-GROUP IS BEGUN.         14269019
         MVC   UFCT(L2),ENCT      PRIME COUNT OF NOT-YET-FOUND'S        14299019
         MVI   FLG3,ZERO               TURN OFF SWITCHES                14340019
         TM    COMDCDSW,SELECTSC+EXCLUDES  IS THIS A FULL COPY          14346019
         BZ    CKICT              IF SO, DONT TEST FOR ONLY 1 SETAB ENT 14352019
         LA    R6,ONE                                                   14360019
         CH    R6,COUNT           IS ONLY 1 MBR BEING SELECTED/EXCLUDED 14368019
         BNE   CKICT              IF NOT, DONT WORRY ABOUT FLAG         14376019
         L     R7,SEBEGIN         ELSE GET ADDR OF THE ONE SETAB ENTRY  14384019
         OI    X0(R7),SEBIT6      MAKE SURE LAST-ENTRY BIT IS SET       14394019
         B     CKICT              SINCE THIS IS 1ST TIME THRU THE CUR-  14414019
*                                 RENT INDD GROUP, DONT BUMP 'NXTINDS'  14434019
VCOMM    DC    V(IEBDSMCA)        ADDRESS OF COMMUNICATION REGION       14494019
COMP     DC    CL8'COMPRESS'      COMPARAND FOR 'PARM=COMPRESS'         14560019
COMP1    DC    CL5'SIZE='         COMPARAND FOR PARM SCAN        X010XX 14610000
DDSL     DC    H'5'               *INDEX *                              14660019
         DC    H'6'               *COUNTS*                              14760019
         DC    H'8'               * FOR  *                              14860019
         DC    H'9'               *VALID *                              14960019
         DC    H'10'              *DDLIST*                              15060019
         DC    H'11'              *SLOTS *                              15160019
SETPGNO  MVC   X0(L1,R8),X2(R5)   EXECUTED TO SET UP USER'S PAGE NUMBER 15260019
PACK     PACK  CCIMAGE,X7(X0,R1)                                 X010XX 15310000
TENCON   DC    H'10'              CONSTANT OF 10                        15420019
SIXENTRY DC    F'48'              LENGTH OF FIX LIST IN SIO    @YM06438 15470002
         SPACE 2                                                        15480019
* CONTROL IS RETURNED TO THIS POINT BY THE TERMINATION ROUTINE WHENEVER 15540019
* IT DETERMINES THAT THERE ARE MORE UN-PROCESSED INPUT DATA SETS (DD-   15600019
* NAMES) IN THE INDD TABLE.                                             15660019
         SPACE 2                                                        15720019
IEBMNI   EQU   *                  ENTRY POINT FOR NXT IN DS OF SAME GRP 15780019
IEBDSCNI EQU   IEBMNI                                                   15810019
         L     R6,NXTINDS    SET ADDR OF NEXT INPUT DDNAME IN INDDTAB   15840019
         LA    R6,TABLEN(R6) NOTE - THIS IS THE ONLY DIFFERENCE BETW.   15900019
         ST    R6,NXTINDS    THE NEXT INPUT DS OF SAME INDD GRP AND     15960019
*                            THE 1ST INPUT DS OF A NEW INDD GRP.        16020019
         MVC   END2ND2(L4),SVHI   RESET ADDR OF END OF 2ND BUFFER       16024019
         SPACE 2                                                        16028019
CKICT    EQU   *                                                        16078019
         LH    R6,INDDCT     DECREMENT COUNT OF NBR OF INPUT DATA SETS  16140019
         LPR   R6,R6         STILL TO BE PROCESSED AFTER CURRENT ONE    16200019
         BCTR  R6,R0         SUBTR 1 FROM INDDCT                        16260019
         STH   R6,INDDCT                                                16320019
         MVC   HICOR(L4),SVHI     RE-INIT PTR TO HIGHEST AVAIL CORE     16380019
         XC    ICPT(OBCT+P2-ICPT),ICPT INITIALIZE AREA TO ZEROES        16440019
         MVI   FLG7,FRSTMBR       SET FIRST-MEMBER INDICATOR            16500019
         L     R6,NXTINDS                                               16560019
         LA    R1,INDCB           SET UP DCB ADDR FOR MOVING            16620019
         USING IHADCB,R1                                                16680019
         MVC   DCBDDNAM(NAMLEN),NMDISP(R6) INPUT DDNAME TO DCB          16740019
         DROP  R1                                                       16860019
         SPACE 1                                                        16960019
* NOW CHECK TO SEE IF OUTDD WAS PROCESSED BY SCAN JUST NOW              17030019
         TM    FLG4,NEWCOPOP      DID SCAN FIND A NEW COPY OPERATION    17100019
         BZ    EXVAL2             NO, GO OPEN AND VALIDATE INPUT ONLY   17170019
         SPACE 1                                                        17240019
         NI    FLG4,FF-NEWCOPOP   RESET NEW COPY OPERATION SWITCH       17310019
         MVI   STATUS,ZERO        CLEAR SWITCHES                        17400019
         XC    DIRBCNT(L2),DIRBCNT RESET DIRECTORY BLK COUNT TO 0       17460019
         MVI   NDBTR,ZERO         RESET BLOCKS PER TRACK COUNT   A36049 17490000
         OI    TAG,CTOUT          INDIC NEED TO CT NBR BLKS IN OUT DIR  17520019
* NOW GO TO VALIDATE I/O DEVICE ASSIGNMENTS                             17580019
         L     R15,VIEBDV1        GET ADDR OF E.P. FOR INPUT AND OUTPUT 17640019
         B     GOVAL              GO TO LINK TO VALIDATE INPUT & OUTPUT 17700019
EXVAL2   L     R15,VIEBDV2        ENTRY-POINT FOR INPUT ONLY            17760019
GOVAL    EQU   *                                                        17820019
         BALR  R14,R15       EXIT TO I/O VALIDATION ROUTINE             17880019
* RETURN FROM VALIDATION ONLY IF THE DCB(S) OPEN AND VALIDATED          17940019
         EJECT                                                          18000019
* THE MAIN PROGRAM NOW MUST DETERMINE SIZE AND LOCATION OF I/O BUFFERS. 18060019
         L     R15,VIEBBAM             ADDR OF BUFFER ALLOCATION S20201 18084020
         BALR  R14,R15                 EXIT TO BUFFER ALLOCATION S20201 18088020
         B     *+4(R15)           RETURNING FROM IEBBAM INTO     S20201 18092020
         B     ASRT1              BRANCH TABLE                   S20201 18096020
         B     SBFLGS             BRANCH TABLE                   S20201 18100020
         B     SLMSG              BRANCH TABLE                   S20201 18104020
ASRT1    EQU   *                                                        27180019
         L     R15,VIEBVCT        ADDR OF TABLE-SORTING RTNE            27240019
         BALR  R14,R15            LINK TO ROUTINE                       27300019
         EJECT                                                          27360019
* WHEN RETURNED TO AT THIS POINT, MAINFLOW EXPECTS SETAB TO BE SORTED.  27420019
* IF SELECT, LOCOR WILL CONTAIN ADDR IN SESTOP (IF NO NEWNAMES), OR     27480019
* ADDR OF NNPTRTAB END + 1 IF NEWNAMES WERE SPECIFIED.  NOW READY TO    27540019
* SET UP TO SEARCH FOR MEMBERS TO BE COPIED FROM THE CURRENT INPUT DATA 27640019
* SET.                                                                  27740019
SBFLGS   OI    FLG2,FMTSPL        INDICATE TO WRITE CT-KEY-DATA IF NEED 27840019
*                                 TO SPILL IDE'S TO SYSUT3 ARISES       28090019
         MVI   UT3SCTOR,ZERO      SET UT3 SECTOR VALUE TO 0      S20201 28092020
*                                   (USED ONLY IF ON AN RPS      S20201 28094020
*                                   DEVICE)                      S20201 28096020
         MVI   SENSE,ZERO         RESET SWITCHES                        28100019
         NI    STATUS,STAT5+STAT7 RESET SWITCHES                        28110019
         OI    STATUS,STAT1       INDIC READING INPUT DIRECTORY         28140019
         MVI   INSCTOR,ZERO       SET INPUT SECTOR VALUE TO 0    S20201 28150020
*                                   (USED ONLY IF ON AN RPS      S20201 28160020
*                                   DEVICE)                      S20201 28170020
         MVC   SVLO(L4),LOCOR     SAVE PTR TO LOWEST AVAILABLE CORE     28190019
         TM    ULLDST,LOAD        ON LOAD                        X010XX 28240000
         BO    DSC00350           CANT RDLNK TO READ INPUT DIRCT X010XX 28242000
         BAL   R2,RDLNK           LINK TO SET TO READ INTO 1ST BFR-AREA 28250019
DSC00300 EQU   *                                                 X010XX 28300000
         SPACE 2                                                        28309019
         MVC   WRTNEXT+X1(L3),BEGFST1  INITIALIZE POINTER FOR IEBDWR    28339019
         L     R15,VIEBMGD   ADDR OF RTNE TO FIND NEXT DE IN BFR        28380019
         BALR  R14,R15       GO GET THE 1ST DE FROM BFR                 28440019
         B     NOMBRS             IF NO DE FOUND, GO WRT MSG            28500019
*              IEBMGD RETURNS TO R14+4 IF DE IS FOUND                   28560019
         TM    COMDCDSW,SELECTSC+EXCLUDES  FULL COPY (NEITHER BIT ON)   28620019
         BZ    NMEQ          IF SO, GO SAVE DE AND BUILD CTLTAB ENTRY   28680019
         L     R9,NMAD            ADDR OF NEXT ENTRY IN SETAB           28740019
         TM    COMDCDSW,EXCLUDES  IS IT AN EXCLUSIVE COPY               28800019
         BO    CN1           IF SO, GO COMP NAME                        28860019
         SPACE 2                                                        28920019
* FOLLOWING CODE IS EXECUTED FOR SELECTIVE COPY ONLY                    28980019
TSL1     TM    X0(R9),SEBIT1+SEBIT4+SEBIT5                              29040019
*                            IS THIS ENTRY FLAGGED AS NEWNAME, DONTCO-  29100019
*                            PY, OR FOUND                               29160019
         BZ    CN2           IF NOT, GO COMP. NAME                      29220019
TS6      TM    X0(R9),SEBIT6      IS THIS THE LAST ENTRY IN THE SETAB   29280019
         BO    TFCT               IF SO, TEST COUNT OF ''FOUNDS''       29340019
ABMNM    LA    R9,TABLEN(R9)      SET POINTER TO CTLTAB TO NEXT ENTRY   29400019
         ST    R9,BUMP                                                  29460019
         ST    R9,NMAD            SINCE THIS IS A SELECT, SET POINTER   29520019
*                                 TO NAME BEING SOUGHT TO SAME AS BUMP  29580019
         B     TSL1               LOOP TO TEST NEXT ENTRY               29640019
CN2      L     R6,DEPTR           ADDR OF NEXT DE IN BFR                29700019
         CLC   NMDISP(NAMLEN,R9),X0(R6) TABLE NAME VS. MBRNAME FROM DE  29760019
         BL    TS6                IF TABLE LO, SEE IF THIS IS LAST ENT. 29820019
         BE    NMEQ               IF SAME, GO SAVE DE                   29880019
         BAL   R2,NXID1           GO LINK TO GET NEXT IDE               29940019
         B     CN2                IF DE FOUND, GO COMP WITH TABLE       30000019
TFCT     SR    R8,R8              EOD WAS REACHED (OR EOF)              30060019
         CH    R8,FCT             DOES NBR MBRS ''FOUND'' = ZERO        30120019
         BE    NOMBRSCP           IF SO, WRT 'NO MBRS COPIED' MSG       30180019
         TM    COMDCDSW,SELECTSC  IS THIS A SELECTIVE COPY              30240019
         BO    ONU                IF SO, GO SETUP FOR OUTPUT PRE-SCAN   30300019
         L     R9,BUMP            GET ADDR OF ''NEXT'' CTLTAB SLOT      30360019
         SH    R9,TENCON          SUBTRACT LENGTH OF ONE CTLTAB ENTRY   30450019
         OI    X0(R9),SEBIT6      SET LAST-ENTRY INDICATOR IN THIS ENT. 30520019
         B     ONU                NOW SET UP FOR OUTPUT PRE-SCAN        30600019
         SPACE 2                                                        30660019
* THIS CODE EXECUTED FOR AN EXCLUSIVE COPY ONLY                         30720019
CN1      EQU   *                                                        30780019
         L     R6,DEPTR           ADDR OF ''NEXT'' DE IN BFR            30840019
         CLC   NMDISP(NAMLEN,R9),X0(R6) TABLE NAME VS. MBRNAME FROM DE  30900019
         BH    NMEQ               IF TABLE HI, GO SAVE THIS DE, GET NXT 30960019
         BL    LSTEX              IF TABLE LO, GO UPDT PTR TO TBL IF    31020019
*                                 THIS ISNT LAST ENTRY                  31080019
*                                 TABLE NAME EQUALS MBRNAME             31140019
         BAL   R2,NXID1           GO GET NEXT DE PRIOR TO BUMPING PTR   31200019
LSTEX    TM    X0(R9),SEBIT6      IS THIS LAST ENTRY IN SETAB           31260019
         BO    NMEQ               IF SO, DONT TRY MORE COMPARING        31320019
         LA    R9,TABLEN(R9)      BUMP PTR TO NXT NAME TO BE EXCLUDED   31380019
         ST    R9,NMAD                                                  31440019
         B     CN1                GO TO COMPARE TABLE VS DE             31500019
         SPACE 2                                                        31560019
* THIS CODE IS EXECUTED FOR ALL MODES OF COPY                           31620019
NXID1    L     R15,VIEBMGD        ADDR OF GETDE SUBRTNE                 31680019
         BALR  R14,R15            LINK TO GET ADDR OF NXT DE IN BFR     31740019
         B     TFCT               IF NO DE GOTTEN SEE IF ANY WERE FOUND 31800019
*              IEBMGD RETURNS TO R14+4 IF DE IS FOUND                   31860019
         BR    R2                 EXIT TO INTERNAL LINK ADDR            31920019
         SPACE 1                                                        31980019
NMEQ     L     R15,VIEBMBT        GET ADDR OF BLDTAB SUBR               32040019
         BALR  R14,R15            LINK TO BLD CTLTAB ENTRY              32100019
         TM    COMDCDSW,SELECTSC  IS THIS A SELECTIVE COPY              32160019
         BO    DECUF              IF SO, GO TEST COUNT OF ''UN-FOUNDS'' 32220019
         SPACE 2                                                        32280019
* THIS CODE IS EXECUTED FOR EXCLUSIVE AND FULL COPY                     32340019
         LH    R8,ENCT            ADD 1 TO COUNT OF ENTRIES             32400019
         LPR   R8,R8              ASSURE POSITIVE VALUE                 32460019
         LA    R8,P1(R8)                                                32520019
         STH   R8,ENCT                                                  32580019
         BAL   R2,NXID1           GO GET POINTER TO NEXT DE             32640019
         TM    COMDCDSW,EXCLUDES  IS THIS AN EXCLUSIVE COPY             32700019
         BO    CN1                IF SO, GO CK NEXT DE VS TABLE         32760019
         B     NMEQ               ELSE GO BLD NEXT CTLTAB ENTRY         32820019
         SPACE 2                                                        32880019
* FOLLOWING CODE IS EXECUTED FOR SELECTIVE COPY ONLY                    32940019
DECUF    LH    R8,UFCT            GET COUNT OF ''NOT-YET-FOUNDS''       33000019
         BCTR  R8,R0              SUBTRACT 1 - ONE MORE WAS FOUND       33060019
         STH   R8,UFCT            SAVE UPDATED CT                       33120019
         LTR   R8,R8              IS COUNT = TO ZERO                    33180019
         BZ    TFCT               IF SO, SEE IF ANY FOUND               33240019
         BAL   R2,NXID1           GO GET POINTER TO NEXT DE             33300019
         B     ABMNM              ELSE LOCATE NXT SELECT TABLE ENTRY    33360019
DSC00350 MVC   READNEXT+P1(L3),BEGFST1   ADDR TO READ TO         X010XX 33410000
         L     R15,VRSAM          DO LOADDCB DIRECTORY READ      X010XX 33460000
         BALR  R14,R15            LINK TO READ                   X010XX 33510000
         B     DSC00300           GO BACK                        X010XX 33560000
         EJECT                                                          33840019
ONU      EQU   *                                                        33890019
         SPACE 2                                                        33950019
* AT THIS POINT, PREPARE TO PERFORM PRE-SCAN OF OUTPUT DIRECTORY TO AS- 33960019
* SURE THAT NO DUPLICATE NAMED MEMBERS (WITHOUT REPLACE OPTION) GET     34020019
* COPIED.                                                               34080019
         NI    FLG5,FF-DEFSW      ASSURE INITIALIZATION SWITCH IS       34100019
*                                   OFF FOR IEBMGD                      34120019
         MVI   SENSE,ZERO         RESET SWITCHES                        34140019
         NI    FLG2,TRKS2+MBUSED  RESET RDEOF SWITCH                    34200019
         MVI   SWITCH1,ZERO       RESET IEBMGI SWITCHES                 34230019
         TM    ULLDST,UNLOAD      ON UNLOAD                      X010XX 34240000
         BO    DSC00450           GO WRITE HEADER AND DIRECTORY  X010XX 34250000
         TM    COMDCDSW,COMPRESS  IS COMPRESS-IN-PLACE SPECIFIED        34260019
         BO    PRETTR             IF SO, SKIP PRESCAN AND GO DO TTRSORT 34320019
         MVI   STATUS,STAT2       INDIC RDG OUT DIR FROM OUTPUT DATASET 34800019
         MVI   OUTSCTOR,ZERO      SET OUTPUT SECTOR VALUE TO 0   S20201 34810020
*                                   (USED ONLY IF ON AN RPS      S20201 34820020
*                                   DEVICE)                      S20201 34830020
         TM    FLG4,ODALT         IS OUT DIR ON SYSUT4                  34860019
         BZ    SETORD             IF NOT, LEAVE 'STAT2' SET             34920019
         MVI   UT4SCTOR,ZERO      SET UT4 SECTOR VALUE TO 0      S20201 34930020
*                                   (USED ONLY IF ON AN RPS      S20201 34940020
*                                   DEVICE)                      S20201 34950020
         MVI   STATUS,STAT3       INDIC RDG OUT DIR FROM SYSUT4 DATASET 34980019
SETORD   EQU   *                                                        35040019
         BAL   R2,RDLNK           LINK TO SET TO READ INTO 1ST BFR-AREA 35090019
         SPACE 2                                                        35148019
         TM    FLG6,SPL           WERE ANY INPUT DE'S SPILLED           35160019
         BO    OSCIN              IF SO, DONT ATTEMPT TO RETAIN ODE'S   35220019
         MVC   SVFSTO(L4),LOCOR   ADDR OF 1ST OUT DIR BLOCK TO BE SAVED 35280019
         MVC   ALO(L4),LOCOR      INITIALIZE FOR IEBMKO - ADDR AND      35340019
         XC    OBCT(L2),OBCT      NBR OF BLOCKS SAVED IN CORE           35400019
         L     R15,VIEBMKO        ADDR OF ROUTINE TO RETAIN OUTPUT DE'S 35460019
         BALR  R14,R15            LINK TO ROUTINE                       35510019
         SPACE 2                                                        35569019
OSCIN    TM    FLG5,OSCAN         WAS SCAN OF OUT DIR INITIALIZED       35580019
         BO    GNODE              IF SO, BYPASS INITIALIZATION          35640019
         OI    FLG5,OSCAN+OSW1    INDIC OUTPUT DIRECTORY PRESCAN AND    35670019
*                                 SET INITIALIZATION BIT                35700019
         NI    FLG4,FF-LE         RESET IEBMGI'S LAST-ENTRY BIT         35730019
         XC    NNTCT(L2),NNTCT    SET NEWNAME-TABLE INDEX TO ZERO       35770019
         L     R15,VIEBMGD        ADDR OF RTNE TO GET DE FROM BFR       35820019
         BALR  R14,R15            LINK TO GET 1ST DE OF OUT DIR         35880019
         B     SETST5             INDIC NULL OUTPUT - NO OUTPUT DE'S    35940019
*              IEBMGD RETURNS TO R14+4 IF DE IS FOUND                   36000019
GNI      L     R15,VIEBMGI        RTNE TO GET NXT IDE (USING CTLTAB)    36060019
         BALR  R14,R15            LINK TO RTNE                          36120019
* IEBMGI WILL RETURN ADDR OF THE INPUT NAME (OR NEWNAME IF INPUT RE-    36180019
* NAMED) IN ''IDEAD''                                                   36240019
         TM    SWITCH1,MGINODE    WAS NO IDE RETURNED DUE TO UT3 ERROR  36247019
         BZ    CMPNS              NO - AN IDE WAS RETURNED              36254019
         NI    SWITCH1,FF-MGINODE RESET 'NO-IDE' SWITCH                 36261019
         L     R8,TABAD                                                 36268019
         SH    R8,TENCON          POINT TO CTLTAB ENTRY FOR WHICH THE   36275019
*                                 IDE COULD NOT BE RETRIEVED FROM UT3   36282019
         B     SETDNTCP           GO TO FLAG IT AS DONT-COPY            36289019
CMPNS    L     R6,DEPTR           ADDR OF NEXT OUTPUT DE IN BFR         36300019
         L     R7,IDEAD           ADDR OF NAME OF ''NEXT'' INPUT MEMBER 36360019
         CLC   X0(NAMLEN,R6),X0(R7) OUTPUT MBRNAME VS. INPUT MBRNAME    36420019
         BL    GNODE              IF OUTNAME LO, GET NEXT OUTNAME       36480019
         BH    TLE                IF HI, SEE IF THERE ARE MORE INPUT DE 36540019
         L     R9,NXTINDS         GET ADDR IF INDDTAB ENTRY FOR THIS DS 36600019
         TM    X0(R9),REPLACOP    IS INDD-LEVEL REPLACE SPECIFIED       36660019
         BO    GNODE              IF SO, GO GET NEXT OUTPUT DE          36720019
         L     R8,TABAD           GET PTR TO NEXT TABLE ELEMENT         36780019
         SH    R8,TENCON          ADJUST TO POINT TO CURRENT ELEMENT    36840019
         TM    X0(R8),SEBIT3      IS MEMBER-LEVEL REPLACE SPECIFIED     36900019
         BO    GNODE              IF SO, ALLOW TABLE ENTRY TO REMAIN    36960019
         LR    R7,R8              SAVE PTR TO ENTRY IN CASE ITS NEWNAME 37020019
         TM    X0(R8),SEBIT1      IS THIS A NEWNAME ENTRY               37080019
         BO    DCOLD              IF SO, FIND OLDNAME AND SET DONTCPY   37140019
SETDNTCP EQU   *                                                        37170019
         OI    X0(R8),SEBIT4      SET 'DONT-COPY' INDICATOR             37240019
         MVI   X2(R8),FF          SET OFFSET BYTE TO INHIBIT USE        37310019
         LH    R7,FCT             GET CT OF NBR OF CTLTAB ENTRIES       37380019
         LPR   R7,R7                                                    37440019
         BCTR  R7,R0              SUBTRACT 1 FROM CT, TO REFLECT DE-    37500019
*                                 LETED ENTRY                           37560019
         LTR   R7,R7              IS COUNT NOW SET TO ZERO              37620019
         BZ    NOMBRSCP           IF SO, WRT 'NO MBRS COPIED' MSG       37680019
         STH   R7,FCT             ELSE SET DECREMENTED COUNT            37740019
TLE      TM    FLG4,LE            WAS LAST IDE GOTTEN YET               37800019
         BO    ODEALL             IF SO, SEE IF OUT DIR PROCESSING DONE 37860019
         B     GNI                ELSE GO GET NEXT IDE                  37920019
GNODE    L     R15,VIEBMGD        SET TO GET ADDR OF NXT ODE IN BFR     37980019
         BALR  R14,R15            LINK TO SUBROUTINE                    38040019
         B     ODEALL             IF NO MORE ODE'S, SEE IF ALL SAVED    38100019
         B     CMPNS              ELSE GO COMPARE MBRNAMES              38160019
SETST5   OI    STATUS,STAT5       INDICATE ABSENCE OF AN OUTPUT DATASET 38220019
TSTCTO   TM    TAG,CTOUT          IS MAX LENGTH OF OUT DIR TO BE CALC   38280019
         BZ    ALLDUN             IF NOT, CLEANUP AND GO TO SORT CTLTAB 38320019
*                                 BY MEMBER TTR                         38360019
         TM    FLG2,RDEOF         WAS EOF REACHED ON OUTPUT DS          38400019
         BZ    RDTILEOF           IF NOT, NEED TO RD AND CT TILL EOF    38460019
ALLDUN   NI    TAG,FF-CTOUT       RESET SWITCH USED BY READ ROUTINE     38520019
         NI    FLG2,FF-RDEOF      RESET EOF-REACHED SWITCH              38580019
         NI    FLG4,FF-LE         RESET LAST-ENTRY-REACHED INDICATOR    38640019
         B     PRETTR             GO PREPARE FOR TTR SORT               38700019
ODEALL   TM    FLG2,RDEOF         DID EOF OCCUR ON OUTPUT DIRECTORY YET 38760019
         BO    ALLDUN             IF SO, DONT TRY TO READ MORE          38820019
         TM    FLG4,LE            NEED TO DO MORE SCANNING OF OUTPUT    38830019
         BO    TF6SPL             NO.  SEE IF POSSIBLE TO RETAIN MORE   38840019
*                                 ODE'S IN CORE                         38850019
RDMOROUT EQU   *                                                        38860019
         MVI   SENSE,ZERO         RESET BITS IN CASE SYSUT3 WAS USED    38870019
         BAL   R2,RDLNK           ELSE READ MORE OF OUTPUT DIRECTORY    38880019
         TM    FLG6,SPL           WERE ANY IDE'S SPILLED                38900019
         BO    TRYLE              SEE IF NAMES ARE TO BE COMP  @YA02603 38920002
         TM    FLG5,NSP           DID IEBMKO INDIC NO SPACE REMAINING   38940019
         BO    TRYLE              SEE IF NAMES ARE TO BE COMP  @YA02603 39000002
         L     R15,VIEBMKO        ADDR OF ROUTINE TO RETAIN OUTPUT DE'S 39060019
         BALR  R14,R15            LINK TO ROUTINE                       39120019
TRYLE    TM    FLG4,LE            WAS LAST IDE GOTTEN YET      @YA02603 39170002
         BZ    GNODE              NO, GET NEXT ODE TO COMP     @YA02603 39220002
         NI    FLG5,FF-DEFSW      RESET INIT SWITCH, LAST IDE  @YA02603 39230002
         B     GNODE              MAY NOT BE COMP TO ALL ODE'S @ZA07317 39240099
TF6SPL   TM    FLG6,SPL           WAS ANY ''SPILLING'' DONE             39310019
         BO    TSTCTO             YES - SEE IF NEED TO COUNT OUTPUT     39320019
*                                 DIRECTORY BLOCKS                      39330019
         B     RDMOROUT           NO, SO TRY TO READ AND RETAIN MORE    39340019
RDTILEOF MVI   SENSE,ZERO         RESET BITS POSSIBLY USED TO READ UT3  39360019
LNKRTEOF BAL   R2,RDLNK           GO TO READ AND COUNT OUT DIR BLOCKS   39380019
         TM    FLG2,RDEOF         WAS EOF REACHED ON OUTPUT DIRECTORY   39410019
         BZ    LNKRTEOF           NO, LOOP UNTIL OUTPUT DIR EOF REACHED 39440019
         B     ALLDUN             WHEN GET HERE, MAX NO BLKS IS CALC    39480019
DCOLD    L     R8,NNTABAD         PTR TO 'NXT' NEWNAME PTRTAB ENTRY     39540019
         LA    R15,NNLEN          LENGTH OF ONE NNPTRTAB ENTRY          39600019
         SR    R8,R15             ADJUST POINTER TO CURRENT ENTRY       39660019
         L     R8,X0(R8)          POINT TO OLDNAME ENTRY IN CTLTAB      39720019
         TM    X0(R8),SEBIT5      IS OLDNAME FLAGGED AS 'FOUND'         39780019
         BZ    TLE                IF NOT, GET NEXT ENTRY.  THE INDD     39840019
*                                 ON WHICH THIS OLDNAME MIGHT BE FOUND  39900019
*                                 MAY HAVE THE INDD-REPLACE OPTION.     39960019
         OI    X0(R7),SEBIT4      SET 'DONT-COPY' INDICATOR IN NEWNAME  40020019
*                                 CTLTAB ELEMENT                        40080019
         B     SETDNTCP           GO TO SET IT IN THE OLDNAME ELEMENT   40140019
         EJECT                                                          40200019
DSC00400 MVI   MSG1+P1,M72        MSG CODE                       A44144 40250000
         OI    VTMFLG1,UNUSEND    AN ERROR OCCURRED              A44144 40252000
         B     SETRTCD                                           A44144 40254000
LACKCORE EQU   *        MIN CORE NOT AVAIL - TERMINATE ENTIRE JOB       40260019
         MVI   MSG1+P1,M38        MSG CODE                              40290019
SETRTCD  EQU   *                                                 A44144 40292000
         CLI   RCBUF,CH8          IS COMPLETION CODE 8 OR HIGHER A44144 40300000
         BNL   SLMSG              YES- DON'T SET RETURN CODE     A44144 40310000
         MVI   RCBUF,CH8          SET COMPLETION CODE            A44144 40340022
SLMSG    EQU   *                                                        40390019
         MVI   MSG1,LASTMSG       INDICATE THE LAST MSG CODE IN LIST    40400019
EXWRM    EQU   *                                                        40410019
         L     R15,VIEBVMS        ADDR OF MESSAGE WRITER                40420019
         BALR  R14,R15            WRITE MESSAGE                         40430019
         L     R15,VIEBVTM        ADDR OF STEP/OPERATION TERMINATOR     40440019
         BALR  R14,R15            EXIT TO TERMINATE THIS COPY OPERATION 40450019
*                                 NO RETURN WILL BE MADE TO THIS POINT  40460019
*                                 BY IEBVTM                             40470019
NOMBRS   EQU   *                  NULL INPUT DATA SET MSG               41940019
         TM    COMDCDSW,COMPRESS  WAS A COMPRESS IN PLACE TO HAVE BEEN  41942019
*                                 DONE                                  41944019
         BZ    SETM45             IF NOT, GO SET UP MESSAGE             41946019
*              IF YES, NEED TO MAKE SURE THAT, WHEN THE OUTPUT DCB IS   41948019
*              CLOSED, THE DSCB WILL SHOW ALL UNUSED SPACE FOLLOWING    41950019
*              THE DIRECTORY -                                          41952019
         MVC   READNEXT(L4),BCB   SET POINTER FOR READ                  41953019
         MVI   SENSE,SENSE4       SET TO READ WITH NO DATA XFR          41954019
         MVI   STATUS,STAT2       INDIC READING OUTPUT DIRECTORY FROM   41956019
*                                 OUTPUT DATA SET                       41958019
         BAL   R2,RDLNK           GO TO CALL IEBDRD TO READ THE DIR.    41960019
         LA    R1,OUTDCB          POINT TO THE OUTPUT DCB JUST USED     41962019
         USING IHADCB,R1                                                41964019
         MVC   OUTFDAD(LEN8),DCBFDAD SAVE LAST RECORD'S FULL DISK ADDR  41965019
         LA    R2,FDAD(R1)        POINT TO DCBFDAD FIELD WITHIN THE DCB 41966019
         DROP  R1                                                       41968019
         L     R15,VCCOTT                                               41970019
         BALR  R14,R15            GO TO CONVERT THE MBBCCHHR OF THE EOF 41972019
*                                 OF THE OUTPUT DIRECTORY TO A TTR      41974019
         MVC   OUTDS1(L4),WKA1    SAVE TTR OF EOF OF OUTPUT DIRECTORY   41975019
         MVC   OUTPTTR(LEN8),OUTDS1 ALSO SAVE TTR AND TRKBALANCE AGAIN  41976019
         NI    FLG2,FF-RDEOF      RESET 'EOF REACHED' BIT               41978019
SETM45   EQU   *                                                        41980019
         MVI   MSG1+P1,M45        MSG CODE                              42000019
         MVI   NAMEDISP,OFF140I   OFFSET IN MSG IEB140I FOR NAME        42020019
         MVI   PARAMS,ZERO                                       X010XX 42030000
NOMSETUP EQU   *                                                        42040019
         OI    FLG7,SUPPRMSG+NOPRNBDB  SET INDICATORS TO SUPPRESS PRIN- 42045019
*                                 TING OF MEMBERNAMES AND UNUSED DIREC- 42050019
*                                 TORY BLOCKS MSGS BY THE IEBVTM ROUT.  42055019
         TM    FLG4,NEWODS        HAS A DIRECTORY MERGE OCCURED         42055719
*                                   TO CURRENT OUTPUT DATA SET          42056419
         BO    LEAVESET           NO, LEAVE FLG7 AS SET                 42057119
         NI    FLG7,FF-NOPRNBDB   RESET DON'T PRINT UNUSED              42057819
*                                   DIRECTORY BLOCKS MSG SWITCH         42058519
LEAVESET EQU   *                                                        42059219
         L     R1,NXTINDS                                               42060019
         MVC   NAMEFLD(LEN8),NMDISP(R1) DDNAME TO BE PUT INTO MSG       42080019
         OI    PARAMS,NAME        INDICATE NAME IS TO BE PUT IN  X010XX 42100000
         MVI   MSG1,LASTMSG+PBIT                                        42140019
         B     EXWRM              WRT MSG AND EXIT TO IEBVTM            42150019
NOMBRSCP EQU   *                  NO MBRS COPIED FROM INPUT DATA SET    42160019
*                                 REFERENCED BY (DDNAME)                42170019
         MVI   MSG1+P1,NOMBCPDM   MSG CODE                              42190019
         MVI   NAMEDISP,OFF159I   OFFSET FOR NAME IN MSG                42210019
         MVI   PARAMS,MSGULLD     'COPIED' MAY HAVE TOBE REPLACEDX010XX 42220000
         MVI   COPDISP,X11        DISPLACEMENT OF COPIED         X010XX 42230000
         B     NOMSETUP           GO SET UP REST OF MSG INDICATORS      42240019
         EJECT                                                          42960019
PRETTR   NI    FLG5,OSCAN+NSP     RESET DEFSW, NMUP, OSW1 BITS          43020019
         L     R15,VIEBVTT        ADDR OF TTR SORT ROUTINE              43080019
         BALR  R14,R15            GO SORT VALID CTLTAB ENTRIES BY TTR   43140019
* UPON RETURN, THOSE CTLTAB ENTRIES WHICH WERE FLAGGED AS FOUND (SEBIT5 43200019
* ON) AND NOT NEWNAME (SEBIT1) OR DONTCOPY (SEBIT4) WILL BE SORTED SUCH 43260019
* THAT EACH ENTRY HAS ONE DE-POINTER IN ALPHAMERIC SEQUENCE AND ANOTHER 43320019
* DE-POINTER IN TTR SEQUENCE.                                           43380019
         TM    COMDCDSW,COMPRESS  IS THIS A COMPRESS-IN-PLACE           43400019
         BO    CMPRSS             IF SO, GO TO EXIT TO IEBMCM           43420019
         TM    FLG6,OIC           WAS ALL OUTPUT DIR RETAINED IN CORE   43440019
         BZ    GFCT               IF NOT, GO PREPARE TO GET NEXT IDE    43500019
         LA    R6,OUTDCB          POINT TO OUTPUT DCB                   43510019
         USING IHADCB,R6                                                43520019
         TM    DCBRECFM,TKOFLO    IS TRACK OVERFLOW SPECIFIED ON OUTPUT 43530019
         BO    GFCT               IF SO, DONT CHANGE BUFFER ALLOCATION  43540019
         DROP  R6                                                       43550019
         B     SPLITBUF           TRY TO ALLOCATE SECOND BUFFER  X010XX 43552000
DSC00450 L     R15,VWSAM1         WRITE HEADER                   X010XX 43554000
         BALR  R14,R15            LINK TO WRITE HEADER ROUTINE   X010XX 43556000
         L     R15,VIEBVTT        SORT CTLTAB ON TTR             X010XX 43558000
         BALR  R14,R15            LINK TO SORT                   X010XX 43558400
         L     R15,VIEBDSU        WRITE OUTPUT DIRECTORY         X010XX 43558800
         BALR  R14,R15            LINK TO DIRECTORY SETUP ROUTN  X010XX 43559200
         MVC   ALO(L4),LOCOR      INITIALIZE ALO                 X010XX 43559600
*                                 (NOT YET DONE FOR AN UNLOAD)   X010XX 43559700
         SPACE 2                                                        43560019
SPLITBUF EQU   *        SUBRTNE TO ATTEMPT TO ALLOC SECOND BFR AREA     43620019
         L     R5,ICPT            ADDR OF CTLTAB ENTRY FOR MOST RECENT  43680019
*                                 INPUT DIR ENTRY SAVED IN CORE         43740019
         MVC   WKA1(L4),X6(R5)    PUT ADDR OF DE (FROM ALPHABETICALLY   43800019
*                                 SEQUENCED SIDE OF CTLTAB) INTO WKAREA 43860019
         L     R5,WKA1            GET POINTER TO THE DIRECTORY ENTRY    43920019
         L     R6,ALO             ADDR+1 OF END OF LAST OUTPUT DIR      43980019
*                                 BLOCK SAVED IN CORE                   44040019
         SR    R5,R6              DIFFERENCE = AMT OF AVAILABLE CORE    44100019
         L     R7,BUFSIZ          LENGTH OF 1/2 BUFFER (ORIGINAL ALLOC) 44160019
         AR    R7,R7              MPLY BY 2 TO GET ENTIRE LENGTH        44220019
         CR    R5,R7              IS AVAILABLE CORE LESS THAN THIS AMT  44280019
         BL    GFCT               IF SO, DON'T ALLOCATE                 44340019
         L     R8,MAXBUF          GET MAX BUFFER LENGTH          X010XX 44390000
         CL    R8,ZROS            WAS IT SPECIFIED               X010XX 44392000
         BE    GFCT               NO,DONT SPLIT BUFFERS          X010XX 44394000
         SR    R8,R7              SUBTRACT LENGTH ALLOCATED      X010XX 44396000
         CR    R8,R7              REMAINDER GT ORIGINAL BUFFER   X010XX 44398000
         BL    GFCT               NO,DONT SPLIT BUFFERS          X010XX 44398400
         CR    R8,R5              REMAINDER GT AVAILABLE CORE    X010XX 44398800
         BH    DSC00470           USE AVAILABLE CORE             X010XX 44399200
         LR    R5,R8              ELSE USE MAX BUFFER LENGTH     X010XX 44399600
DSC00470 EQU   *                                                 X010XX 44399700
         MVC   ENDFST1(L4),END2ND2 SET PTR TO END OF 1ST BUFFER EQ TO   44400019
*                                 THE ADDR WHICH HAD BEEN USED (UNTIL   44460019
*                                 NOW) AS THE ADDR OF THE END OF THE    44520019
*                                 2ND BUFFER.                           44580019
         MVC   BEGFST2(L4),ALO    SET PTR TO START OF NEW 2ND BUFFER    44640019
         AR    R6,R5              ADD LENGTH OF AREA TO BEGINNING ADDR  44700019
         BCTR  R6,R0              SUBTR 1 TO PREVENT OVLAYING INPUT DES 44760019
         ST    R6,END2ND2         SET ADDR OF END OF AREA               44820019
         OI    FLG1,P2FLG1        SET 2-BUFFER-AREAS FLAG IN BCB        44880019
* END OF SUBROUTINE ''SPLITBUF''                                        44940019
         SPACE 2                                                        45000019
GFCT     EQU   *                                                        45060019
         OI    FLG7,COP           SET TO GET INPUT DE'S IN TTR SEQUENCE 45420019
*                                 DURING COPY PHASE                     45480019
         MVI   OUTSCTOR,ZERO      SET OUTPUT SECTOR VALUE TO 0   S20201 45490020
*                                   (USED ONLY IF ON AN RPS      S20201 45500020
*                                   DEVICE)                      S20201 45510020
         XC    SWITCH1(L2),SWITCH1 RESET 'SWITCH1' AND 'UTTRFLAG' BYTES 45520019
         MVC   WRTNEXT+P1(L3),BEGFST1  INIT WHERE TO WRITE FROM         45560019
         MVC   READNEXT(L4),WRTNEXT    INIT WHERE TO READ INTO          45600019
RDNXTOK  EQU   *                                                        45660019
         L     R15,VIEBMGI        SUBRTNE TO GET ADDR OF INPUT DE       45720019
         BALR  R14,R15            LINK TO RTNE                          45780019
         TM    SWITCH1,MGINODE    WAS NO IDE RETURNED DUE TO UT3 ERROR  45784019
         BZ    GOTIDE1            NO - AN IDE WAS RETURNED              45788019
         NI    SWITCH1,FF-MGINODE RESET 'NO-IDE' SWITCH                 45792019
         TM    FLG4,LE            WAS THIS THE ONLY/LAST IDE TO TRY TO  45796019
*                                 GET                                   45800019
         BO    NOMBRSCP           YES - WRT NO MBRS COPIED MSG          45804019
         L     R8,TABAD           NO                                    45808019
         SH    R8,TENCON          POINT TO CTLTAB ENTRY FOR THE IDE     45812019
*                                 WHICH WAS NOT RETRIEVABLE FROM SYSUT3 45816019
         OI    X0(R8),SEBIT4      SET 'DONT-COPY' INDICATOR             45820019
         B     RDNXTOK            TRY FOR ANOTHER IDE                   45824019
GOTIDE1  EQU   *                                                        45828019
         L     R6,IDEAD           GET ADDR OF 1ST IDE                   45840019
MVMTTR   MVC   OLDTTR(L3),NAMLEN(R6)   MOVE MEMBER TTR FOR COMPARING    46070019
         LA    R1,INDCB           SET UP PARAM REGS TO CONVERT INPUT    46140019
         MVC   WKA1(L3),OLDTTR    GET TTR OF NEXT MEMBER TO BE READ     46200019
         MVI   WKA1+P3,ZERO       CLEAR LOW ORDER BYTE                  46260019
         L     R0,WKA1            PUT INTO PARAMETER REG                46320019
         LA    R3,SETRDNXT        SET RETURN REG TO NSI AFTER CONVERT   46380019
LKTTOCC  LA    R2,FDAD(R1)        ADDR TO PUT MBBCCHHR (DCBFDAD)        46440019
         L     R15,VTTOCC                                               46500019
         BALR  R14,R15            GO LINK TO CONVERT TTR TO MBBCCHHR    46560019
         IC    R6,REC(R2)         GET 'R' FROM MBBCCHHR IN DCBFDAD      46620019
         BCTR  R6,R0              SUBTRACT 1 FROM 'R'                   46680019
         STC   R6,REC(R2)         PUT BACK DECREMENTED 'R'              46740019
         BR    R3                 EXIT TO NSI OR TO CALLER              46800019
SETRDNXT EQU   *                                                        46860019
         NI    STATUS,STAT5+STAT7+STAT8                                 46920019
         OI    STATUS,STAT4       INDICATE READING INPUT MEMBER         46980019
         NI    FLG2,FF-RDEOF      TURN OFF EOF-REACHED SWITCH           47040019
         NI    TAG,TAG5+TAG6+TAG8 RESET TAG1,2,3,4, AND 7               47100019
         OI    TAG,TAG2           INDICATE COPYING MBR TO OUTPUT DS     47160019
         OI    WSFLAG,FRSTMREC    SET FIRST RECORD OF A MEMBER   A34431 47170020
*                                  SWITCH                        A34431 47180020
         NI    WSFLAG,FF-USERTTR  RESET POSSIBLE NOTELIST/USERTTR SW    47190019
         L     R6,IDEAD           ADDR OF CURRENT IDE                   47220019
         TM    C1DECT(R6),USERMASK  ANY USER OR NOTE-LIST TTRN'S        47280019
         BZ    TSTRB              IF NOT, TEST FOR RE/DE-BLOCKING       47340019
         OI    WSFLAG,USERTTR     INDICATE PRESENCE OF NOTELIST AND/OR  47470019
*                                 USER TTRN(S)                          47480019
         SR    R7,R7              SET INDICATOR REG TO 0                47490019
         IC    R2,C1DECT(R6)      GET 'C' BYTE FROM DIRECTORY ENTRY     47520019
         SLL   R2,LFT25           ISOLATE NBR OF NOTE-LIST/USER TTR'S   47580019
         SRL   R2,RT30            USE THIS NBR AS LOOP CONTROL          47640019
         LA    R6,C1DECT+P1(R6)   POINT TO 1ST TTRN IN THIS DIR ENTRY   47700019
NLPREP   CLI   X3(R6),ZERO        IS 'N' EQUAL TO '0'                   47760019
         BE    NLSETUP            IF SO, GET NEXT TTRN (IF ANY MORE)    47820019
         LA    R7,P1              SET INDICATOR REG TO 1                47880019
         MVC   WKA1(L3),X0(R6)    SAVE TTR OF THIS NOTE-LIST            47940019
*                                 (ASSUMES ONLY ONE NOTE-LIST PER MBR)  48000019
         MVI   WKA1+P3,ZERO       CLEAR LOW ORDER BYTE FOR CONVERSION   48040019
NLSETUP  LA    R6,X4(R6)          POINT TO 'N' FIELD OF NEXT TTRN       48080019
         BCT   R2,NLPREP          LOOP IF MORE TO CHECK                 48120019
         LTR   R7,R7              IS ANY NOTE LIST TTRN PRESENT         48180019
         BZ    GONOMODS           IF NOT, GO PROCESS THIS MEMBER NOW    48240019
         TM    ULLDST,LOAD        ON LOAD                        X010XX 48290000
         BO    GONOMODS           GO TO PROCESS MEMBER AND       X010XX 48292000
*              NOTELIST AT ONCE (DCBFDAD=ADDR MEMBER-1)          X010XX 48294000
         L     R0,WKA1            ELSE GET INPUT TTR OF NOTE-LIST REC   48300019
         LA    R1,INDCB           ADDR OF DCB TO BE USED                48420019
         MVC   WKA1+P8(LEN8),FDAD(R1)  SAVE CURRENT MEMBER'S MBBCCHHR   48480019
         BAL   R3,LKTTOCC         GO TO LINK TO CONVERT TTR TO MBBCCHHR 48540019
         MVI   SENSE,SENSE2+SENSE3 INDIC TO READ 1 NOTE-LIST RECORD     48600019
         L     R3,READNEXT        SAVE CURRENT BUFFER-POINTER           48660019
         MVC   READNEXT(L4),ADNL  SET TO READ INTO NOTE-LIST BUFFER     48720019
         L     R15,VIEBDRD        ADDR OF READ ROUTINE                  48780019
         BALR  R14,R15            GO TO READ NOTE-LIST INTO CORE        48840019
         ST    R3,READNEXT        RESTORE SAVED BUFFER-POINTER          48900019
         LA    R1,INDCB                                                 48960019
         MVC   FDAD(LEN8,R1),WKA1+P8   RESTORE MEMBER'S MBBCCHHR TO DCB 49020019
         B     GONOMODS           NOW GO TO PROCESS MEMBER              49080019
CMPRSS   EQU   *                                                        49140019
         L     R15,VIEBMCM        ADDR OF COMPRESS-IN-PLACE ROUTINE     49380019
         BALR  R14,R15            LINK TO PERFORM COMPRESS              49440019
         B     *+P4(R15)          UPON RETURN FROM IEBMCM, R15 HAS A    49500019
*                                 COMPLETION CODE IN IT -               49560019
         B     SETRDNXT           R15 = 0, SO SET UP TO COPY     A34431 49600020
*                                   THIS MEMBER                  A34431 49640020
         B     MRGDONE            R15 = 4, SO BYPASS DIRECTORY MERGE    49680019
TSTRB    TM    FLG3,REBLK         WAS RE/DE-BLOCKING SPECIFIED          49920019
         BZ    GONOMODS           IF NOT, GO TO 'NORMAL' COPY ROUTINE   49980019
         MVI   INSCTOR,ZERO       SET INPUT SECTOR VALUE TO 0    S20201 49990020
*                                   (USED ONLY IF ON AN RPS      S20201 50000020
*                                   DEVICE)                      S20201 50010020
         L     R15,VIEBDRB        ADDR OF RE/DE-BLOCKING ROUTINE        50040019
         BALR  R14,R15            LINK TO ROUTINE                       50080019
         B     UPDATR             CLEAN-UP AND SEE IF MORE              50130019
GONOMODS MVI   SENSE,ZERO         RESET SWITCHES USED BY I/O ROUTINES   50160019
         L     R15,VIEBMNM        ADDR OF ROUTINE TO COPY A MEMBER -    50190019
*                                 NO RE/DE-BLOCKING OF THIS MEMBER WILL 50220019
*                                 BE DONE.  THE MEMBER MAY HAVE USER    50250019
*                                 TTRN'S AND/OR A NOTE LIST.            50280019
         BALR  R14,R15            LINK TO ROUTINE                       50340019
         TM    ULLDST,UNLOAD      ON UNLOAD                      X010XX 50350000
         BO    TLSTCPYD           DONT UPDATE MEMBER TTR         X010XX 50360000
UPDATR   EQU   *                                                        50370019
         L     R6,IDEAD           LOCATE CURRENT DIR ENTRY              50406019
         MVC   NAMLEN(L3,R6),SVTTR PUT INCREMENTED TTR INTO DIR ENTRY   50439019
TSTUT3   EQU   *                                                        50452019
         L     R8,TABAD           GET CTLTAB PTR                        50456019
         SH    R8,TENCON          ADJUST TO POINT TO CURRENT ELEMENT    50460019
         NI    TAG,TAG5+TAG6+TAG8 RESET POSSIBLE UNWANTED BITS          50480019
         OI    TAG,TAG2           INDICATE WRITING OUTPUT MEMBER DATA   50500019
         CLI   X2(R8),ONE         WAS THIS DE ON SYSUT3                 50530019
         BE    PUTBACK            IF SO, WRITE UPDATED DE BACK IN       50560019
*                                 PLACE ONTO SYSUT3                     50600019
TLSTCPYD TM    FLG4,LE            HAS LAST CTLTAB ENTRY BEEN PROCESSED  50640019
         BO    MBRSCPYD           IF SO, ALL MBRS ARE NOW COPIED        50700019
         L     R6,IDEAD           LOCATE CURRENT UPDATED DE             50760019
         MVI   UTTRFLAG,ZERO      RESET TTRN/NOTELIST FLAG FOR IEBVWS   50790019
         L     R7,ADNL            ADDR OF WORK AREA                     50860019
         MVC   X0(MAXDE,R7),X0(R6) MOVE DE (+ ANYTHING) TO AREA         50940019
GOTOGI2  EQU   *                                                        51030019
         L     R15,VIEBMGI        ELSE GO LOCATE NXT MEMBER'S DIR ENTRY 51060019
         BALR  R14,R15            LINK TO ROUTINE                       51090019
         TM    SWITCH1,MGINODE    WAS NO IDE RETURNED DUE TO UT3 ERROR  51123019
         BZ    GOTIDE2            NO - AN IDE WAS RETURNED              51126019
         NI    SWITCH1,FF-MGINODE RESET 'NO-IDE' SWITCH                 51129019
         TM    FLG4,LE            ANY MORE IDE'S TO TRY TO GET          51132019
         BO    MBRSCPYD           NO - ALL MEMBERS WHOSE IDE'S WERE AC- 51135019
*                                 CESSIBLE HAVE NOW BEEN COPIED         51138019
         B     GOTOGI2            YES - TRY FOR NEXT IDE                51141019
GOTIDE2  EQU   *                                                        51144019
         MVI   SENSE,ZERO         RESET BITS POSSIBLY USED TO READ UT3  51150019
         L     R8,IDEAD           GET POINTER TO DIR ENTRY              51180019
         LR    R6,R8              SET UP POINTER IN CASE 'BZ' TAKEN     51240019
         TM    NAMLEN+P3(R8),ALIAS DOES THIS DE REFERENCE AN ALIAS      51300019
         BZ    MVMTTR             IF NOT, CANT BE SAME AS PREVIOUS MBR, 51360019
*                                 SO GO SAVE IT AND COPY                51420019
         CLC   NAMLEN(L3,R8),OLDTTR IS THIS INPUT MEMBER TTR SAME AS    51450019
*                                 THE INPUT MEMBER TTR OF THE MEMBER    51480019
*                                 JUST NOW COPIED                       51510019
         BE    PROCAL             IF SO, THEN MAIN-MBR DIR ENTRY HAS    51540019
*                                 BEEN PROCESSED, SO MERGE FIELDS       51600019
*        IF NOT EQUAL, CURRENT MEMBER'S TTR MUST BE GREATER THAN THE    51660019
*        TTR OF THE MEMBER JUST COPIED.                                 51720019
         B     MVMTTR             GO PROCESS AS IF IT WERE NOT AN ALIAS 51780099
         SPACE 2                                                        51780199
* IF MEMBER TTR EQ OLDTTR, AN ALIAS HAS BEEN OR IS BEING PROCESSED.     52250499
* THE MEMBER TTR AND UP TO 3 USER TTRN'S WILL BE MERGED FROM THE DIREC- 52255299
* TORY ENTRY WHICH WAS ''SAVED'' TO THE CURRENT DIRECTORY ENTRY.        52260019
         DS    0H                                                       52310099
PROCAL   EQU   *                                                        52320019
         MVC   NAMLEN(L3,R8),NAMLEN(R7) OVLAY MBR-TTR IN CURRENT D.E.   52380019
         IC    R5,C1DECT(R8)      GET 'C' BYTE FROM ALIAS DE            52440019
         SLL   R5,LFT25           SHIFT OUT 'ALIAS' BIT                 52500019
         SRL   R5,RT30            ISOLATE USER-TTRN COUNT BITS          52560019
         LA    R6,C1FXL(R8)       SET PTR TO CURRENT TTRN'S             52620019
         LA    R3,C1FXL(R7)       SET PTR TO PREVIOUS DE'S TTRN'S       52680019
         LTR   R5,R5              ANY USER/NOTELIST TTRN TO BE REPLACED 52740019
         BZ    TSTUT3             IF NOT, GO SEE WHERE CURR DE CAME FRM 52800019
MVLOOP   EQU   *                                                        52830019
         MVC   X0(L4,R6),X0(R3)   MOVE TTRN FROM PREVIOUS DE TO CURR DE 52880019
         LA    R3,P4(R3)          BUMP POINTERS TO PREVIOUS             52930019
         LA    R6,P4(R6)               AND CURRENT TTRN'S               52980019
         BCT   R5,MVLOOP          DECREM TTRN COUNT BY 1 AND LOOP       53040019
         B     TSTUT3             NOW SEE IF NEED TO WRT THIS DE TO UT3 53070019
* SINCE THERE CAN BE (AT MOST) ONLY 2 LOW ORDER BITS ON IN R5, 'MERGE'  53100019
* WILL BE DONE FOR A MAXIMUM OF THREE FIELDS OF USER TTRN'S.            53160019
         SPACE 2                                                        53190019
PUTBACK  EQU   *                                                        53220019
         NI    TAG,TAG5+TAG6      RESET SWITCHES USED BY WRITE RTNE     53400019
         OI    TAG,TAG4           INDICATE 'WRITING TO SYSUT3'          53460019
         L     R15,ADWK           ADDR OF IDE TO BE RE-WRITTEN (-12)    53465019
         LA    R14,UT3DCB                                               53470019
         MVC   X1(LEN8,R15),FDAD(R14) PUT MBBCCHHR OF SYSUT3 REC TO BE  53475019
*                                 WRITTEN INTO AREA PRECEEDING RECORD   53480019
         MVI   X0(R15),ENDPROC    INDICATE THAT THIS IS THE 'LAST' REC  53485019
*                                 TO BE WRITTEN OUT (ALSO IS ONLY REC,  53490019
*                                 SINCE ONLY ONE REC BEING WRITTEN BACK 53495019
*                                 AT A TIME).  IT WILL BE WRITTEN BACK  53500019
*                                 TO SAME PLACE IT WAS READ FROM, USING 53505019
*                                 WRITE KEY-DATA CCW TO AVOID FORMAT-   53510019
*                                 TING REST OF TRACK AFTER THIS RECORD. 53515019
         L     R15,VIEBDWR        GET ADDR OF WRITE ROUTINE             53520019
         BALR  R14,R15            GO TO WRITE PREVIOUSLY READ SPILLED   53580019
*                                 DIR ENTRY WHICH HAS NOW BEEN UPDATED  53640019
         B     TLSTCPYD           GO SEE IF MORE MEMBERS TO BE COPIED   53740019
MBRSCPYD EQU   *                                                        53840019
         TM    WSFLAG,NOWRT       WAS LAST BFR-FULL OF MBR DATA WRITTEN 53940019
         BZ    SKPURGE            IF SO, DONT TRY TO PURGE BUFFER       54000019
         NI    TAG,TAG5+TAG6      RESET ALL BUT TAG5,6                  54020019
         OI    TAG,TAG2           INDICATE WRITING MEMBER DATA          54040019
         OI    WSFLAG,FORCEWRT    ELSE INDIC NEED TO PURGE I/O BUFFER   54060019
         L     R15,VIEBVWS                                              54120019
         BALR  R14,R15            GO VIA IEBVWS TO EMPTY OUT BUFFER     54180019
SKPURGE  NI    FLG7,FF-COP        RESET INDICATOR BIT USED BY IEBMGI    54240019
         MVC   OUTPTTR(LEN8),OUTDS1 SAVE LAST RECORD'S TTRN AND TRKBAL  54260019
         TM    ULLDST,UNLOAD      ON UNLOAD                      X010XX 54270000
         BO    DSC00530           NO DIRECTORY MERGE             X010XX 54280000
         MVI   SWITCH1,ZERO       RESET IEBMGI SWITCHES                 54295019
         L     R15,VIEBVDM        ADDR OF DIRECTORY MERGE RTNE          54300019
         BALR  R14,R15            GO TO MERGE DIRECTORY                 54360019
MRGDONE  L     R15,VIEBVTM        ADDR OF TERMINATION ROUTINE           54420019
         BALR  R14,R15            EXIT TO TERMINATE INDD/STEP/OPER/JOB  54480019
DSC00530 L     R15,VIEBDSU1       MODIFY CTLTAB                  X010XX 54530000
         BALR  R14,R15            LINK TO CTLTAB MODIFIER        X010XX 54580000
         MVI   SWITCH1,ZERO       RESET IEBMGI SWITCHES          X010XX 54630000
         B     MRGDONE            TERMINATE OPERATION            X010XX 54680000
         EJECT                                                          54730000
IEBDSFRC EQU   *                                                 X010XX 54780000
         ENTRY IEBDSFRC                                                 54830000
         SAVE  (14,12)            SAVE REGS                      X010XX 54880000
         BALR  R11,R0             GET BASE FOR THIS RTN IN R 11  X010XX 54890000
         LA    R15,IEBDSFRC-IEBDSCPY   ADJUST BASE REG           X010XX 54892000
         SR    R11,R15            TO HOLD IEBDSCPY BASE          X010XX 54894000
         ST    R13,SV6+CHAINBK    SET UP SAVE AREA               X010XX 54896000
         LA    R10,SV6                                           X010XX 54898000
         ST    R10,CHAINTHS(R13)                                 X010XX 54898400
         LR    R13,R10                                           X010XX 54898800
         L     R1,HICOR           GET HIGH END OF AVAILABLE CORE X010XX 54899200
         L     R0,FREEAMT2        AMOUNT OF CORE TO BE FREED     X010XX 54899600
         SR    R1,R0              GET REMAINDER                  X010XX 54899700
         L     R5,LOCOR           GET LOW END OF AVAILABLE CORE  X010XX 54899800
         AH    R5,HDRLEN          ADD LENGTH OF HEADER RECORDS   X010XX 54899900
         CLR   R1,R5              SPACE ENOUGH                   X010XX 54919900
         BNH   DSC00400           NO,WRITE MESSAGE               X010XX 54929900
         L     R2,LENGOT          TOTAL LENGTH OF CORE GETMAINED X010XX 54939900
         SR    R2,R0              ADJUST IT                      X010XX 54946600
         ST    R2,LENGOT          AND STORE IT BACK              X010XX 54948600
         FREEMAIN R,LV=(0),A=(1)  FREE CORE FOR BSAM WORK AREA   X010XX 54950600
         OI    ULLDST,CFREED      INDICATE CORE FREED            X010XX 54952600
         L     R1,HICOR           RESTORE REG1 TO PREVIOUS        M2661 54952702
         S     R1,FREEAMT2          VALUE,WAS CHANGED             M2661 54952802
         SH    R1,HDRLEN          CALCULATE ADDR OF HEADER       X010XX 54953000
         ST    R1,ACOPYR1         STORE IT                       X010XX 54953100
         ST    R1,HICOR           HIGH END OF UNUSED CORE        X010XX 54953200
         ST    R1,SVHI            WILL STAY SO AFTER EACH INDD   X010XX 54969900
         ST    R1,END2ND2         END OF SECOND BUFFER           X010XX 54979900
         LA    R1,HDRLEN1(R1)     CALCULATE ADDR OF COPYR2       X010XX 54981900
         ST    R1,ACOPYR2         STORE IT                       X010XX 54983900
         L     R13,SV6+CHAINBK    RESTORE CALLERS REGS           X010XX 54985900
         RETURN (14,12)           RETURN TO CALLER               X010XX 54986300
         EJECT                                                          54986600
IEBMNM   EQU   *                                                 X010XX 55003300
* SUBROUTINE TO COPY THE MEMBER WITH NO MODIFICATIONS (I.E., NO RE/DE-  55020019
* BLOCKING).  THERE MAY OR MAY NOT BE A NOTE-LIST RECORD AND/OR USER    55080019
* TTRN'S SPECIFIED FOR THIS MEMBER.                                     55140019
IEBDSCNM EQU   IEBMNM                                                   55180019
         ENTRY IEBDSCNM                                                 55220019
         ST    R14,SV14           SAVE EXIT REG CONTENTS                55260019
         NI    TAG,TAG5+TAG6+TAG8 RESET TAG1,2,3,4, AND 7               55320019
         OI    TAG,TAG2           INDIC COPYING MBR TO OUTPUT DATA SET  55380019
         NI    STATUS,STAT5+STAT7+STAT8                                 55440019
         OI    STATUS,STAT4+STAT8 INDIC READING 1ST REC OF INPUT MEMBER 55530019
         MVI   INSCTOR,ZERO       SET INPUT SECTOR VALUE TO 0    S20201 55550020
*                                   (USED ONLY IF ON AN RPS      S20201 55570020
*                                   DEVICE)                      S20201 55590020
RDMORDTA EQU    *                                                X010XX 55620000
         TM    ULLDST,LOAD        ON LOAD                        X010XX 55670000
         BO    DSC00550           DONT USE IEBDRD                X010XX 55672000
         L     R15,VIEBDRD        ADDR OF READ ROUTINE           X010XX 55674000
         B     DSC00560           USE EXCP                       X010XX 55676000
DSC00550 L     R15,VRSAM1         USE LOADDCB                    X010XX 55678000
DSC00560 EQU   *                                                 X010XX 55678400
         BALR  R14,R15            LINK TO READ A BUFFER-FULL            55680019
         TM    ULLDST,UNLOAD      ON UNLOAD                      X010XX 55730000
         BO    DSC00580           DONT USE IEBDWR                X010XX 55732000
         L     R15,VIEBVWS        GO TO WRITE WHAT WAS JUST READ        55740019
         B     DSC00590           USE EXCP WRITE                 X010XX 55790000
DSC00580 L     R15,VWSAM          USE ULOADDCB                   X010XX 55800000
DSC00590 EQU   *                                                 X010XX 55810000
         BALR  R14,R15            LINK TO ROUTINE                       55840019
TRDEOF   TM    FLG2,RDEOF         WAS ALL OF MEMBER READ AND WRITTEN    56040019
         BZ    RDMORDTA           IF NOT, GO READ MORE MEMBER DATA      56100019
         NI    FLG2,FF-RDEOF      RESET EOF-READ INDICATOR              56160019
         L     R14,SV14           RESTORE EXIT REG                      56220019
         BR    R14                GO BACK TO MAINFLOW                   56280019
SV14     DC    F'0'               SVAREA FOR LINK REG                   56340019
         SPACE 2                                                        57000019
RDLNK    EQU   *             LINKAGE TO IEBDRD - USED WHEN READING INTO 57040019
*                            ''1ST'' I/O BUFFER AREA                    57080019
         MVC   READNEXT+P1(L3),BEGFST1 SET ADDR WHERE TO READ INTO      57130019
         L     R15,VIEBDRD        ADDR OF READ SUBROUTINE               57180019
         BALR  R14,R15            LINK TO READ                          57240019
         BR    R2                 RETURN TO CALLER                      57300019
*              IF AN EOF OCCURRED, IEBDRD WILL HAVE SET RDEOF SWITCH    57360019
         SPACE 2                                                        57420019
*        SYSIN EODAD INTERFACE                                          57480019
IEBEOF   EQU   *                                                        57540019
IEBDSCEF EQU   IEBEOF                                                   57580019
         ENTRY IEBDSCEF                                                 57620019
         L     R15,VIEBSEF        ADDR OF ENTRY POINT IN IEBSCN         57660019
         BR    R15                EXIT TO HANDLE SYSIN EOF              57720019
*        MEMBER EODAD INTERFACE                                  X010XX 57770000
IEBDSOE2 EQU   *                                                 X010XX 57772000
         ENTRY IEBDSOE2                                          X010XX 57774000
         L     R15,VIEBIOE2       EODAD ROUTINE IN IOE           X010XX 57776000
         BR    R15                EXIT TO HANDLE EOF             X010XX 57778000
         EJECT                                                          57780019
IEBCER   EQU   *                                                        58580019
IEBDSCCE EQU   IEBCER                                                   58880019
         ENTRY IEBDSCCE                                                 59180019
* THIS IS THE ENTRY POINT FOR SYSIN SYNAD EXIT                          59580019
*                                                                       59640019
         USING IEBCER,R15                                               59760019
         SYNADAF   ACSMETH=QSAM                                         59780019
         ST    R6,SAV6X           SAVE REG USED IN THIS ROUTINE         59880019
         SR    R6,R6              SET REG TO 0 TO INDIC SYSIN SYNAD     59980019
         B     SYNRLS             GO SET UP MSG IN BUFFER               60080019
         SPACE 2                                                        60360019
IEBPER   EQU   *                                                        60420019
IEBDSCPE EQU   IEBPER                                                   60460019
         ENTRY IEBDSCPE                                                 60500019
* THIS IS THE ENTRY POINT FOR SYSPRINT SYNAD EXIT                       60540019
*                                                                       60600019
         USING IEBPER,R15                                               60720019
         SYNADAF   ACSMETH=QSAM                                         60740019
         L     R15,AIOE2          GET ADDR OF PRIMARY ENTRY POINT       60780019
         DROP  R15                                                      60840019
         USING IEBCER,R15                                               60880019
         ST    R6,SAV6X           SAVE REG USED IN THIS ROUTINE         60920019
         LA    R6,ONE             SET REG TO +1 FOR SYSPRINT SYNAD IND  60960019
         B     SYNRLS             GO SET UP MSG IN BUFFER               61000019
         SPACE 1                                                        61040019
AIOE2    DC    A(IEBCER)          ADDR OF PRIMARY SYNAD EXIT E.P.       61080019
         SPACE 2                                                        61140019
SYNRLS   EQU   *                                                        61260019
         MVI   MSGBUF,BLNK        CLEAR MSG BUFFER                      61330019
         MVC   MSGBUF+P1(MBLEN),MSGBUF                                  61400019
         LTR   R6,R6              WAS ERROR ON SYSPRINT                 61480019
         BP    PRTMSG             YES - SET UP MSG FOR WTO/WTP          61580019
         MVC   MSGBUF+SYN1(LSYN1),SYNMT(R1) NO- SET UP SYSIN SYNAD MSG  61680019
         MVC   MSGBUF+SYN2(LSYN2),RFSYS MOVE IN MSG PREFIX              61780019
         CLI   RCBUF,CH8          IS COMPLETION CODE 8 OR HIGHER A44144 61830000
         BNL   SETCODES           YES- DON'T SET RETURN CODE     A44144 61880000
         MVI   RCBUF,CH8          SET COMPLETION CODE            A44144 61930000
SETCODES EQU   *                                                        62080019
         MVI   MSG1,LASTMSG+IOERF  SET INDICATORS FOR IEBVMS            62180019
         MVC   MSGBUF+P1(PRFXLEN),IEBPRFX                               62480019
         L     R6,SAV6X           RESTORE REG USED BY THIS ROUTINE      62840019
         SYNADRLS                                                       62870019
         BR    R8                 EXIT TO SYNAD RETURN POINT IN CALLER  62930019
PRTMSG   EQU   *                                                        62970019
         MVC   MSGBUF+SYN1(LSYN1),SYNMT(R1) SET UP SYSPRINT SYNADAF MSG 63010019
         MVC   MSGBUF+SYN3(LSYN3),WTPRT                                 63050019
         OI    IOEF2,SPRNOPN      INDICATE TO NOP PRINTING OF MESSAGES  63090019
         CLI   RCBUF,CH4          IS COMPLETION CODE 4 OR HIGHER A44144 63140000
         BNL   SETCODES           YES- DON'T SET RETURN CODE     A44144 63190000
         MVI   RCBUF,CH4          NO - SET IT TO 4               A44144 63210000
         B     SETCODES           GO SET IEBVMS INDICATORS              63270019
SAV6X    DS    F                  AREA FOR SAVING CALLERS REG           63340019
* THE FOLLOWING 3 DC'S ARE USED IN SETTING UP SYNADAF MSG TEXT          63360019
RFSYS    DC    C'READING FROM SYSIN - '                                 63380019
WTPRT    DC    C'WRITING TO SYSPRINT - '                                63420019
IEBPRFX  DC    C'IEB139I'                                               63510019
         DROP  R15                                                      63600019
         DROP  R11                                                      63660019
         SPACE 2                                                        63720019
         DS    0H                                                       63750019
IEBSCX   EQU   *             ENTRY POINT IN MAINFLOW                    63780019
* THIS ENTRY POINT IS USED BY THE TERMINATION ROUTINE (IEBVTM) WHEN     63840019
* IT IS NECESSARY TO EXIT TO THE CONTROL-CARD SCAN ROUTINE (IEBSCN).    63900019
* THE ENTRY POINT IS IN MAINFLOW IN ORDER TO AVOID AN EXCLUSIVE CALL    63960019
* IF THIS UTILITY PROGRAM IS IN OVERLAY STRUCTURE.                      64020019
IEBDSCSX EQU   IEBSCX                                                   64060019
         ENTRY IEBDSCSX                                                 64100019
         L     R15,VIEBSCN        ADDR OF CONTROL-CARD SCAN ROUTINE     64140019
         BR    R15                EXIT TO IEBSCN                        64170019
         SPACE 2                                                        64203019
         DS    0H                                                       64206019
IEBM04   EQU   *                  ENTRY POINT IN MAIN PROGRAM           64209019
* THIS ENTRY POINT IS USED BY THE DIRECTORY MERGE ROUTINE (IEBVDM) WHEN 64212019
* IT IS NECESSARY FOR IT TO CALL THE VALIDATION ROUTINE (AT ENTRY POINT 64215019
* IEBDV4) TO OPEN AND VALIDATE SYSUT4.  THIS ENTRY POINT IS IN THE MAIN 64218019
* PROGRAM IN ORDER TO AVOID AN EXCLUSIVE CALL IF THIS UTILITY PROGRAM   64221019
* IS LINK-EDITED IN OVERLAY.                                            64224019
IEBDSCM4 EQU   IEBM04                                                   64226019
         ENTRY IEBDSCM4                                                 64228019
         L     R15,VIEBDV4        E.P. IN IEBDV1 CSECT                  64230019
         BALR  R14,R15            EXIT TO OPEN/VALIDATE SYSUT4 DCB      64233019
         L     R15,VIEBRTM        RETURN POINT IN IEBVDM CSECT          64236019
         BR    R15                RETURN TO DIRECTORY MERGE ROUTINE     64239019
         SPACE 1                                                 A33288 64239120
IEBDSRE  EQU   *                                                 A33288 64239220
         ENTRY IEBDSRE                                           A33288 64239320
* THIS ENTRY POINT IS TO AVOID AN EXCLUSIVE CALL BETWEEN IEBDRD  A33288 64239420
* AND IEBIOE                                                     A33288 64239520
         SPACE 1                                                 A33288 64239620
         L     R15,VIEBIOE        ADDR OF IEBIOE                 A33288 64239720
         BALR  R14,R15            LINK TO IEBIOE                 A33288 64239820
         L     R15,VIEBDRDR       ADDR OF RETURN POINT IN IEBDRD A33288 64239920
         BR    R15                RETURN                         A33288 64240020
         SPACE 1                                                 A33288 64240120
IEBDSWE  EQU   *                                                 A33288 64240220
         ENTRY IEBDSWE                                           A33288 64240320
* THIS ENTRY POINT IS TO AVOID AN EXCLUSIVE CALL BETWEEN IEBDWR  A33288 64240420
* AND IEBIOE                                                     A33288 64240520
         SPACE 1                                                 A33288 64240620
         L     R15,VIEBIOE        ADDR OF IEBIOE                 A33288 64240720
         BALR  R14,R15            LINK TO IEBIOE                 A33288 64240820
         L     R15,VIEBDWRR       ADDR OR RETURN POINT IN IEBDWR A33288 64240920
         BR    R15                RETURN                         A33288 64241020
         SPACE 1                                                 A33288 64241120
         SPACE 1                                                        64242019
         DS    0F                                                       64245019
PATCHLN  EQU   (*-MAINFLOW)/20    5 PER-CENT PATCH AREA LENGTH          64248019
PATCH    DC    XL(PATCHLN)'00'    PATCH AREA FOR THIS CSECT      A41780 64251021
         EJECT                                                          64260019
IEBDSCP2 CSECT                                                          64320019
         SPACE 2                                                        64380019
*                                                                       64440019
* THIS CSECT CONSISTS OF SUBROUTINES WHICH WILL REMAIN WITHIN THE       64500019
* ROOT SEGMENT IF THIS PROGRAM IS IN OVERLAY STRUCTURE.                 64560019
*                                                                       64620019
         SPACE 2                                                        64680019
         USING IEBMCA,RG4                                               64740019
* SUBROUTINE TO EFFECT LINKAGE TO SYSTEM ROUTINE WHICH CONVERTS TTR TO  64770019
* MBBCCHHR                                                              64800019
*                                                                       64830019
* INPUT TO ROUTINE - R1 = ADDR OF DCB, R0 = TTR TO BE CONVERTED,        64860019
* R2 POINTS TO LOCATION FOR ROUTINE TO PUT MBBCCHHR, R13 = SVAREA ADDR, 64920019
* R14 = RETURN REG.  NOTE--R15 MIGHT NOT HAVE ADDR OF ROUTINE IN IT...  64980019
* THIS WILL NOT MATTER.                                                 65040019
TTOCC    EQU   *                                                        65100019
IEBDSTOC EQU   TTOCC                                                    65140019
         ENTRY IEBDSTOC                                                 65180019
         SAVE  (14,12)            STANDARD LINKAGE CONVENTIONS          65220019
*                                 (EXCEPT FOR USE OF REG 15)            65280019
         USING TTOCC,R10          ESTABLISH ADRESSABILITY        X010XX 65330000
         LR    R10,R15                                           X010XX 65332000
         ST    R13,SV4+CHAINBK                                          65340019
         LA    R9,SV4                                                   65400019
         ST    R9,CHAINTHS(R13)                                         65460019
         LR    R13,R9                                                   65520019
         LA    R1,X0(R1)          CLEAR HI ORDER BYTE            X010XX 65570000
         TM    ULLDST,LOAD        NO LOAD                        X010XX 65572000
         BZ    DSC00650           USE SYSTEM CONVERT ROUTINE     X010XX 65574000
         LA    R9,INDCB           AT THIS TIME INDCB IN R1 IF    X010XX 65576000
         CR    R9,R1                CONVERTING FOR SEQ INPUT DS  X010XX 65578000
         BNE   DSC00650           NOT FOR INPUT,USE SYSTEM CONV. X010XX 65578400
         L     R15,VIEBCNVT       ELSE USE IEBCOPY CONVERT ROUT. X010XX 65578800
         B     DSC00660           GO USE OWN CONVERT ROUTINE     X010XX 65579200
DSC00650 EQU   *                                                 X010XX 65579600
         L     R15,ADCVT          ADDR OF CVT                           65580019
         L     R15,TPCNVT(R15)    ADDR OF TTR-TO-MBBCCHHR CONVERT RTNE  65640019
DSC00660 EQU   *                                                 X010XX 65690000
         USING IHADCB,R1          SET DCB BASE REG                      65700019
         L     R1,DCBDEBAD        ADDR OF DEB FROM DCB                  65760019
         LA    R1,X0(R1)          CLEAR HI ORDER BYTE                   65820019
         BALR  R14,R15            LINK TO CONVERT ROUTINE               65880019
         L     R13,SV4+CHAINBK                                          65940019
         RETURN (14,12),RC=(15)                                         66000019
         DROP  R1                                                       66060019
         DROP  R10                                               X010XX 66110000
         EJECT                                                          66120019
* SUBROUTINE TO EFFECT LINKAGE TO SYSTEM ROUTINE WHICH CONVERTS         66150019
* MBBCCHHR TO TTR                                                       66180019
*                                                                       66210019
* INPUT TO ROUTINE - R1 = ADDR OF DCB, R2 = POINTER TO MBBCCHHR         66240019
* R14 = RETURN REG.  OUTPUT = TTRN STORED IN ''WKA1''.                  66300019
CCOTT    EQU   *                                                        66360019
IEBDSCOT EQU   CCOTT                                                    66400019
         ENTRY IEBDSCOT                                                 66440019
         SAVE  (14,12)            STANDARD LINKAGE CONVENTIONS          66480019
*                                 (EXCEPT FOR USE OF REG 15)            66540019
         USING CCOTT,R10          ESTABLISH ADRESSABILITY        X010XX 66590000
         LR    R10,R15                                           X010XX 66592000
         ST    R13,SV4+CHAINBK                                          66600019
         LA    R9,SV4                                                   66660019
         ST    R9,CHAINTHS(R13)                                         66720019
         LR    R13,R9                                                   66780019
         LA    R1,X0(R1)          CLEAR HI ORDER BYTE            X010XX 66830000
         TM    ULLDST,LOAD        NO LOAD                        X010XX 66832000
         BZ    DSC00670           USE SYSTEM CONVERT ROUTINE     X010XX 66834000
         LA    R9,INDCB           AT THIS TIME INDCB IN R1 IF    X010XX 66836000
         CR    R9,R1                CONVERTING FOR SEQ INPUT DS  X010XX 66838000
         BNE   DSC00670           NOT FOR INPUT,USE SYSTEM CONV. X010XX 66838400
         L     R15,VIEBCNV1       ELSE USE IEBCOPY CONVERT ROUT. X010XX 66838800
         B     DSC00680           GO USE OWN CONVERT ROUTINE     X010XX 66839200
DSC00670 EQU   *                                                 X010XX 66839600
         L     R15,ADCVT          ADDR OF CVT                           66840019
         L     R15,TPRLTV(R15)    ADDR OF ABSOL TO REL TTR CONVERT RTNE 66900019
DSC00680 EQU   *                                                 X010XX 66950000
         USING IHADCB,R1                                                66960019
         L     R1,DCBDEBAD        ADDR OF DEB FROM DCB                  67020019
         LA    R1,X0(R1)          CLEAR HI ORDER BYTE                   67080019
         SR    R0,R0              CLEAR ANSWER REG                      67140019
         BALR  R14,R15            LINK OUT TO CONVERT MBBCCHHR TO TTR   67200019
         ST    R0,WKA1            TTRN TO CORE                          67260019
         L     R13,SV4+CHAINBK                                          67320019
         RETURN (14,12)                                                 67380019
         DROP  R10                                               X010XX 67430000
         DROP  R1                                                       67440019
         EJECT                                                          67500019
IEBMGD   EQU   *                  SUBRTNE TO LOCATE NEXT DE IN I/O BFR  67560019
IEBDSCGD EQU   IEBMGD                                                   67600019
         ENTRY IEBDSCGD                                                 67640019
         SAVE  (14,12)            SAVE CALLER'S REGS                    67680019
         LR    R3,R15             ESTAB ADDRESSIBILITY                  67740019
         USING IEBMGD,R3                                                67800019
         ST    R13,SV3+CHAINBK    STD LINKAGE                           67860019
         LA    R12,SV3                                                  67920019
         ST    R12,CHAINTHS(R13)                                        67980019
         LR    R13,R12                                                  68040019
         TM    FLG5,DEFSW         IS SUBRTNE INITIALIZATION DONE        68100019
         BO    DVSC               IF SO, GO COMPARE ADDR OF THIS DE     68160019
         OI    FLG5,DEFSW         TURN ON INITIALIZATION SW.            68220019
* THIS SUBROUTINE TAKES ADVANTAGE OF ''KNOWING'' THAT IT IS GETTING     68280019
* DIR. ENTRIES FROM THE 'FIRST' BUFFER AREA POINTED TO BY THE BCB.      68340019
SDEPTR   MVC   DEPTR+P1(L3),BEGFST1 POINT TO 1ST BLOCK IN BUFFER        68400019
CKCT     EQU   *                                                        68460019
         L     R5,DEPTR           ADDR OF DE                            68520019
         TM    FLG2,RDEOF         WAS AN EOF READ YET                   68580019
         BZ    SVKEY              IF NOT, DONT TEST FOR EOD YET         68640019
         CLC   C1DL(L2,R5),ZROS   DOES DATA LENGTH = 0 (EOF RECORD)     68700019
         BNE   SVKEY              GO SAVE KEY IF NOT                    68760019
DE0      XC    DEPTR(L4),DEPTR    CLEAR PTR TO DE, INDICATING ALL DONE  68820019
DEX      EQU   *                                                        68880019
         NI    FLG5,FF-DEFSW      TURN OFF INITIALIZATION SWITCH        68940019
         L     R13,CHAINBK(R13)   RESTORE ADDR OF CALLER'S SAVE AREA    69000019
         RETURN (14,12)           RETURN TO CALLER+0, INDIC NO DE FOUND 69060019
DVSC     L     R5,DEPTR           GET ADDR OF CURRENT DIR ENTRY         69120019
         CLC   X0(NAMLEN,R5),DBKEY IS THIS THE LAST DE IN THE BLOCK     69180019
         BE    BMP1               IF SO, FIND THE NEXT BLOCK            69240019
         SR    R6,R6                                                    69300019
         IC    R6,C1DECT(R5)      GET COUNT BYTE OF CURRENT DE          69360019
         SLL   R6,LFT27           CLEAR HI ORDER 3 BITS                 69420019
         SRL   R6,RT26            MPLY WHATS LEFT BY 2 = NBR USER BYTES 69480019
         LA    R6,C1FXL(R6)       ADD FIXED LENGTH (12) TO FIND NEXT DE 69540019
         A     R6,DEPTR           ADD THIS LENGTH TO ADDR OF CURR DE    69600019
CKFFS    EQU   *                                                        69630019
         CLI   X0(R6),FF          IS THIS AN END-OF-DIRECTORY NAME      69670019
         BE    DE0                IF SO, GO TO ZERO DEPTR AND EXIT      69720019
         ST    R6,DEPTR           SET AS ADDR OF NEXT ENTRY IN BLOCK    69780019
         B     RTCAL              GO TO EXIT                            69840019
SVKEY    MVC   DBKEY(LEN8),CON12(R5) SAVE THIS DIRECTORY BLOCK'S KEY    69900019
         ST    R5,BLKAD           BLKAD = DEPTR                         69960019
         LA    R6,FDEOFF(R5)      POINT TO NAME OF 1ST DE IN BLOCK      70060019
         B     CKFFS              SEE IF ITS NAME IS 'FF'S              70160019
BMP1     L     R6,BLKAD           BUMP POINTER TO ADDR OF NEXT BLOCK    70320019
         TM    X0(R6),LASTREC+ENDPROC  IS THIS LAST BLOCK IN THE BUFFER 70380019
         BC    NOT0,RDMOR         IF SO, SEE IF CAN READ MORE INTO BFR  70440019
         LA    R6,KBLEN+CON12(R6) ADD TOTAL LENGTH                      70500019
         ST    R6,BLKAD           SAVE ADDR                             70560019
         ST    R6,DEPTR           SET AS ADDR OF NEXT DE                70620019
         B     CKCT               GO CHECK FOR COUNT OF ZERO (EOF REC)  70680019
RDMOR    TM    FLG5,OSW1          IS OUTPUT PRE-SCAN BEING DONE         70740019
         BO    DEX                IF SO, LEAVE 'DEPTR' AS IS, AND GO TO 70860019
*                                 LET CALLER ISSUE HIS OWN 'READ'.      70920019
         TM    FLG7,DM            IS DIRECTORY MERGE BEING DONE         70940019
         BO    DEX                YES - LET CALLER READ MORE OUTPUT DES 70960019
         MVC   READNEXT+P1(L3),BEGFST1 SET ADDR WHERE TO READ INTO      71000019
         TM    ULLDST,LOAD        ON LOAD                        X010XX 71010000
         BO    DSC00710           DONT USE IEBDRD                X010XX 71020000
         L     R15,VIEBDRD        ADDR OF READ SUBROUTINE               71040019
         B     DSC00720           USE EXCP READ                  X010XX 71090000
DSC00710 L     R15,VRSAM          USE LOADDCB                    X010XX 71092000
DSC00720 EQU   *                                                 X010XX 71094000
         BALR  R14,R15            LINK TO READ                          71100019
         B     SDEPTR             GO SET POINTER TO 1ST REC IN BUFFER   71220019
RTCAL    L     R13,CHAINBK(R13)   RESTORE ADDR OF CALLER'S SAVE AREA    71260019
         LM    R14,R12,X12(R13)   RESTORE CALLERS REGS                  71300019
         B     X4(R14)            EXIT TO CALLER'S RETURN POINT + 4,    71340019
*                                 INDICATING THAT A POINTER TO A D.E.   71380019
*                                 IS IN 'DEPTR'                         71420019
         EJECT                                                          71460019
         DS    0H                                                       71490019
IEBMBT   EQU   *                                                        71510019
*                  SUBROUTINE TO BUILD CTLTAB ENTRIES AND EITHER RE-    71530019
*              TAIN OR SPILL (TO SYSUT3) THE NEEDED INPUT DE'S          71550019
IEBDSCBT EQU   IEBMBT                                                   71580019
         ENTRY IEBDSCBT                                                 71610019
* THIS SUBROUTINE GETS CONTROL FROM MAINFLOW WHENEVER A CONTROL TABLE   71640019
* ENTRY IS TO BE ''BUILT''.  THIS SUBROUTINE WILL BUILD THE ENTRY, AND  71700019
* IF CORE IS AVAILABLE, SAVE THE DE IN CORE.  IF NOT ENOUGH SPACE RE-   71760019
* MAINS FOR THE CTLTAB, PREVIOUSLY RETAINED DE'S ARE SPILLED TO SYSUT3, 71820019
* AS WELL AS ANY AND ALL FURTHER NEEDED DE'S FROM THIS DATA SET.        71880019
* IF THERE ARE NO DE'S LEFT TO BE SPILLED, AND THERE IS NOT ENOUGH      71940019
* SPACE FOR THIS CTLTAB ENTRY, THEN AN ERROR MSG IS WRITTEN BY MAINFLOW 72000019
* (NOROOM). IF THE CTLTAB ENTRY IS SUCCESSFULLY BUILT, RETURN IS MADE   72060019
* TO CALLER VIA R14.                                                    72120019
         SAVE  (14,12)            SET UP SVAREA LINKAGE                 72180019
         LR    R10,R15                                                  72240019
         USING IEBMBT,R10                                               72300019
         ST    R13,SV3+CHAINBK                                          72360019
         LA    R12,SV3                                                  72420019
         ST    R12,CHAINTHS(R13)                                        72480019
         LR    R13,R12                                                  72540019
*              INITIALIZE REGS                                          72600019
         L     R5,HICOR           ADDR OF HIGHEST UNUSED BYTE IN CORE   72660019
         L     R6,DEPTR           ADDR OF CURRENT DE                    72720019
         L     R1,BUMP            ADDR OF NXT SLOT IN CTLTAB (OR SETAB) 72780019
         TM    FLG3,REBLK         WAS RE/DE-BLOCKING SPECIFIED          72840019
         BZ    TSPL               IF NOT, SEE IF ANY SPILL HAS OCCURRED 72900019
         TM    C1DECT(R6),USERMASK  ANY NOTE-LIST OR USER TTRN'S        72960019
         BC    NOT0,SETM46        IF SO, CANT ALSO BE RE/DE-BLOCKING    73020019
TSPL     EQU   *                                                        73080019
         TM    FLG6,SPL           HAS ANY SPILL OCCURRED YET            73140019
         BO    C1TSPC             IF SO, GO TEST FOR CORE SPACE         73200019
         IC    R7,C1DECT(R6)      GET COUNT BYTE                        73260019
         SLL   R7,LFT27           CLEAR HI ORDER 3 BITS                 73320019
         SRL   R7,RT26            MPLY WHATS LEFT BY 2 = NBR USER BYTES 73380019
         LA    R7,C1FXL(R7)       ADD LENGTH OF FIXED PORTION OF DE     73440019
* R7 NOW CONTAINS LENGTH IN BYTES OF DIR ENTRY TO BE SAVED              73500019
         LR    R8,R7              SAVE LENGTH IN R8                     73560019
         TM    COMDCDSW,SELECTSC  IS THIS A SELECTIVE COPY              73620019
         BO    C1TSTHI            IF SO, DONT ADD CTLTAB ENTRY LENGTH   73680019
         LA    R7,C1CTEL(R7)      ELSE ADD LENGTH OF ENTRY              73740019
         SR    R5,R7              CALC HICOR MINUS LENGTH               73800019
         C     R5,BUMP            IS RESULTING ADDR LESS THAN ADDR      73860019
*                                 WHERE CTLTAB ENTRY SHOULD GO          73920019
         BL    C1SETSP            IF SO, GO SET SPILL SW                73980019
         XC    X0(C1CTEL,R1),X0(R1) CLEAR NEXT 10 BYTES OF CTLTAB       74040019
*              R6 CONTAINS ADDR OF DE TO BE MOVED                       74100019
*              R8 CONTAINS ACTUAL LENGTH OF DE                          74160019
C1MVDE   L     R5,HICOR           GET ADDR OF HIGHEST UNUSED CORE       74220019
         SR    R5,R8              SUBTR LENGTH OF DE TO BE MOVED        74280019
         BCTR  R8,R0              DECREMENT LENGTH BY 1 FOR EXECUTE     74340019
         EX    R8,C1MOVE                                                74400019
         ST    R5,WKA1            SAVE ADDR WHERE MOVED TO              74460019
         ST    R5,HICOR                                                 74520019
         LH    R8,CDCT            ADD 1 TO COUNT OF IN-CORE INPUT DE'S  74580019
         LPR   R8,R8              ASSURE POSITIVE SIGN                  74640019
         LA    R8,X1(R8)                                                74700019
         STH   R8,CDCT                                                  74760019
*              R1 CONTAINS ADDR OF NXT ENTRY IN CTLTAB                  74820019
         MVC   X3(L3,R1),WKA1+P1  PUT 3-BYTE ADDR OF IN-CORE D.E. INTO  74860019
*                                 TABLE                                 74900019
         MVI   X2(R1),ZERO        INDICATE THAT THIS IS AN IN-CORE PTR  74940019
         ST    R1,ICPT            SAVE ADDR OF THIS CTLTAB ENTRY AS THE 75000019
*                                 MOST RECENT ONE REFERENCING AN IN-    75060019
*                                 CORE DIR ENTRY                        75120019
C1MVTTR  MVC   X7(L3,R1),NAMLEN(R6) MOVE MBR TTR FROM DE TO CTLTAB      75180019
         MVI   X6(R1),ZERO        CLEAR INDICATOR BYTE                  75240019
         TM    NAMLEN+P3(R6),ALIAS DOES THIS DE REFERENCE AN ALIAS      75300019
         BZ    INCFCT             IF NOT, GO UPDATE FCT                 75360019
         MVI   X1(R1),ALIAS       ELSE INDICATE ALIAS IN CTLTAB ENTRY   75420019
INCFCT   EQU   *                                                        75480019
         TM    X0(R1),SEBIT4      WAS 'DONT-COPY' SET WHILE THIS CTLTAB 75490019
*                                 ENTRY WAS BEING BUILT                 75500019
         BO    ADDEL              IF SO, DONT INCREMENT FOUND-COUNT     75510019
         LH    R8,FCT             ADD 1 TO COUNT OF ''FOUND'' MBRS      75540019
         LPR   R8,R8              ASSURE POSITIVE SIGN                  75600019
         LA    R8,X1(R8)                                                75660019
         STH   R8,FCT                                                   75720019
         OI    X0(R1),SEBIT5      INDICATE 'FOUND' IN CTLTAB ENTRY      75760019
ADDEL    EQU   *                                                        75810019
         LA    R1,C1CTEL(R1)      ADD ELEMENT LENGTH TO POINTER         75840019
         ST    R1,BUMP            UPDATE POINTER FOR NEXT TIME THRU     75900019
         TM    COMDCDSW,SELECTSC  IS THIS A SELECTIVE COPY              75960019
         BO    C1RETRN            IF SO, GO EXIT                        76020019
         ST    R1,LOCOR           ELSE UPDATE ADDR OF LOWEST UNUSED COR 76080019
C1RETRN  L     R13,CHAINBK(R13)   RESTORE PTR TO CALLER'S SAVE AREA     76140019
         RETURN (14,12)           RESTORE REGS AND EXIT TO CALLER       76200019
C1TSTHI  SR    R5,R7              CALC HICOR MINUS LENGTH OF DE         76260019
         C     R5,LOCOR           WILL THIS DE FIT                      76320019
         BNL   C1MVDE             IF SO, GO MOVE IT INTO CORE AREA      76380019
         OI    FLG6,SPL           ELSE INDIC NEED TO SPILL              76440019
         B     C1CVCC             GO SPILL THIS DIRECTORY ENTRY         76500019
C1TSPC   TM    COMDCDSW,SELECTSC  IS THIS A SELECTIVE COPY              76560019
         BO    C1CVCC             IF SO, GO TO SPILL THIS IDE           76620019
         B     C1GEL              ELSE SEE IF ENUF SPACE FOR CTLTAB ENT 76680019
C1SETSP  OI    FLG6,SPL           SET SPILL SWITCH                      76740019
C1GEL    LA    R11,C1CTEL         GET LENGTH OF CTLTAB ENTRY            76800019
         L     R5,HICOR           GET ADDR OF HIGHEST UNUSED CORE       76860019
         SR    R5,R11             HICOR = HICOR - 10                    76920019
         CR    R5,R1              IS THERE ENOUGH ROOM FOR NEXT         76980019
*                                 ENTRY IN CTLTAB                       77040019
         BNL   C1ZR10             IF SO, GO WRITE THE DE TO SYSUT3      77100019
         LH    R11,CDCT           GET CT OF NBR OF IN-CORE INPUT DE'S   77160019
         LTR   R11,R11            ARE THERE ANY                         77220019
         BZ    TSTMBUSE           IF NOT, GO SEE IF BFR CAN BE SQUEEZED 77280019
         L     R11,ICPT           GET ADDR OF CTLTAB ENTRY FOR MOST     77340019
*                                 RECENTLY SAVED-IN-CORE DE             77400019
         MVC   WKA1(L4),X2(R11)   PUT ADDR OF DE INTO WORK AREA         77460019
         L     R3,WKA1            ADDR OF DE INTO R3                    77520019
         LA    R9,C1RET1          SET UP EXIT ADDR FOR USE WHEN PRE-    77580019
*                                 VIOUSLY SAVED DE IS SPILLED TO SYSUT3 77640019
         IC    R2,C1DECT(R3)      CALC LENGTH OF THIS DE IN R2          77700019
         SLL   R2,LFT27                                                 77760019
         SRL   R2,RT26                                                  77820019
         LA    R2,C1FXL(R2)       ADD LENGTH OF FIXED PORTION OF DE     77880019
         ST    R2,WKA1+P24        SAVE LENGTH OF DE BEING SPILLED       77940019
C1SETUT3 LA    R2,UT3DCB                                                78000019
         USING IHADCB,R2                                                78060019
         TM    DCBOFLGS,OPEN      WAS SYSUT3 OPENED YET                 78120019
         BO    C1GOWS             IF SO, DONT TRY TO RE-OPEN IT         78180019
         DROP  R2                                                       78240019
         L     R15,VIEBDV3        ADDR OF VALIDATION ROUTINE FOR SYSUT3 78300019
         BALR  R14,R15            GO TO OPEN AND CHECK OUT SYSUT3 -     78360019
*                                 ONLY RETURN IF OPENED OKAY AND VALID  78420019
C1GOWS   L     R12,ADWK           ADDR OF WORK AREA CONTAINING DE       78480019
         MVI   X0(R12),ENDPROC    INDIC THIS IS LAST REC IN ANY BUFFER  78540019
         MVI   C1KL(R12),ZERO     SET KEYLEN TO ZERO                    78600019
         MVC   C1DL(L2,R12),C180  SET FIXED LENGTH OF 80 IN COUNT FIELD 78660019
*                                 OF RECORD TO BE SPILLED TO SYSUT3     78720019
         LA    R12,C1FXL(R12)     SAVE 12 BYTES FOR FLG, MBB, AND COUNT 78780019
         IC    R2,C1DECT(R3)      CALC LENGTH OF THIS DE IN R2 @ZA13739 78840099
         SLL   R2,LFT27           STRIP OUT LENGTH             @ZA13739 78890099
         SRL   R2,RT26            AND MULTIPLY BY TWO          @ZA13739 78892099
         LA    R2,C1FXL(R2)       ADD LEN FIXED PORTION OF DE  @ZA13739 78894099
         BCTR  R2,R0              DECREMENT BY 1 FOR EXECUTE   @ZA13739 78896099
         EX    R2,C1MOVE1         MOVE IDE TO BE SPILLED       @ZA13739 78898099
         L     R2,ADWK            GET ADDRESS OF BUFFER AREA            78900019
         LA    R2,X1(R2)          ADDR OF MBBCCHHR (IN UT3 BFR + 1)     78960019
         NI    TAG,TAG5+TAG6+CTOUT RESET ANY EXTRANEOUS BITS            79020019
         OI    TAG,TAG4           SET INDIC FOR SYSUT3 WRITING          79080019
         L     R15,VIEBVWS                                              79140019
         BALR  R14,R15            LINK TO PLUG IN CCHHR AND WRITE REC   79200019
         SPACE 2                                                        79202019
* NOW NEED TO SET UP TO CALL SYSTEM ROUTINE TO CONVERT MBBCCHHR TO TTR  79252019
         LA    R1,UT3DCB                                                79320019
         L     R15,VCCOTT         GET ADDR OF LINKAGE TO CONVERT TTR    79380019
         BALR  R14,R15            GO TO CONVERT MBBCCHHR TO TTR         79440019
* ADDR OF CTLTAB ENTRY REFERENCING THE DE JUST SPILLED IS IN R11        79500019
         MVC   X3(L3,R11),WKA1    TTR INTO CTLTAB, OVERLAYING CORE ADDR 79560019
         MVI   X2(R11),ONE        SET OFFSET BYTE TO INDIC THIS IS TTR  79620019
         BR    R9                 GO TO CALLER OF C1SETUT3 OR TO NSI    79680019
C1RET1   LA    R9,C1CTEL          LENGTH OF CTLTAB ENTRY                79740019
         SR    R11,R9                                                   79800019
         ST    R11,ICPT           SET ICPT TO ADDR OF PREVIOUS CTLTAB   79860019
*                                 ENTRY WH. REF. AN IN-CORE DE          79920019
         LH    R11,CDCT                                                 79980019
         LPR   R11,R11            ASSURE POSITIVE SIGN                  80040019
         BCTR  R11,R0             SUBTR 1 FROM COUNT OF IN-CORE IDE'S   80100019
         STH   R11,CDCT                                                 80160019
         L     R5,WKA1+P24        GET LENGTH OF SPILLED DE              80220019
         A     R5,HICOR           ADD TO PREVIOUS ADDR OF HIGHEST UN-   80280019
*                                 UTILIZED CORE                         80340019
         ST    R5,HICOR           HICOR = HICOR + LENGTH OF SPILLED DE  80400019
         L     R1,BUMP            RE-INITIALIZE REGS                    80460019
         L     R6,DEPTR                                                 80520019
         B     C1TSPC             GO TO TEST FOR SPACE FOR NXT CTLTAB   80580019
*                                 ENTRY                                 80610019
C1ZR10   XC    X0(C1CTEL,R1),X0(R1) CLEAR NEXT SLOT FOR CTLTAB ENTRY    80650019
C1CVCC   L     R3,DEPTR           NOW GET ADDR OF CURR DE TO BE SPILLED 80700019
         L     R11,BUMP           PT TO SETAB/CTLTAB SLOT BEING USED    80730019
         BAL   R9,C1SETUT3        GO WRITE TO SYSUT3 AND PUT ADDRESS,   80760019
*                                 IN TTR FORM, INTO SETAB/CTLTAB        80790019
         L     R1,BUMP            RE-INIT POINTER TO CTLTAB SLOT        80880019
         L     R6,DEPTR           RE-INIT POINTER TO DIRECTORY ENTRY    80940019
         B     C1MVTTR            GO SAVE MEMBER TTR AND EXIT           81000019
TSTMBUSE EQU   *                                                        81060019
         TM    FLG2,MBUSED        IS MINIMUM BUFFER-SIZE NOW ALLOCATED  81120019
         BO    NOROOM1            IF SO, CANT SQUEEZE IT DOWN           81180019
         L     R11,END2ND2        GET ADDR OF HI END OF 2ND I/O BFR     81184019
         S     R11,BCB            CALC CURRENT LENGTH OF ENTIRE BFR     81188019
*                                 AREA                                  81192019
         S     R11,MINSIZ         SUBTR AMOUNT OF CORE WHICH WOULD BE   81196019
*                                 DE-ALLOCATED                          81200019
         C     R11,MINSIZ         IS AT LEAST AN EQUAL AMOUNT OF CORE   81204019
*                                 STILL AVAILABLE AFTER DE-ALLOCATION   81208019
         BL    NOROOM1             NO - CANNOT DE-ALLOCATE I/O BUFFER   81212019
         BH    DEALLOC            IF HI, OKAY TO DEALLOCATE             81216019
         OI    FLG2,MBUSED        IF AMT LEFT = AMT TO BE DEALLOCATED,  81220019
*                                 INHIBIT FURTHER DEALLOCATION          81224019
DEALLOC  EQU   *                                                        81228019
         L     R5,BCB             ADDR OF START OF IO BUFFER            81240019
         A     R5,MINSIZ          ADD MINIMUM BUFFER-LENGTH             81300019
         ST    R5,BCB             SET ADJUSTED ADDR AS START OF IO BFR  81540019
*                                 NO BCB FLGS WILL BE SET AT THIS POINT 81600019
*                                 SO DONT NEED TO WORRY ABOUT RESET-    81660019
*                                 TING THEM INADVERTENTLY.              81720019
         ST    R5,HICOR           SET NEW HI ADDR OF UNUSED CORE        81780019
         L     R5,ENDFST1         ADDR OF END OF 1ST BUFFER             81840019
         A     R5,MAXBLK          ADD LENGTH OF 1/2 OF MINIMUM TOTAL    81900019
*                                 BFR-LENGTH TO GET NEW ENDING ADDR     81960019
         ST    R5,ENDFST1         SET ADJUSTED POINTER INTO BCB         82020019
         LA    R5,X1(R5)          ADD 1 TO GET STARTING ADDR OF 2ND BFR 82080019
         ST    R5,BEGFST2         SET ADJUSTED POINTER INTO BCB         82140019
* I/O BUFFER HAS NOW BEEN 'SQUEEZED' BY SUBTRACTING THE MINIMUM SIZE    82200019
* WHICH COULD POSSIBLY BE ALLOCATED FROM THE ACTUAL SIZE ALLOCATED.     82260019
         NI    FLG2,FF-TRKS2      RESET 2-TRACKS-ALLOCATED SWITCH       82320019
         B     C1GEL              AND CONTINUE BUILDING CTLTAB          82740019
NOROOM1  MVI   MSG1+P1,M47        MSG CODE                              82800019
         MVI   MSG1,LASTMSG       INDIC LAST MSG IN LIST                82870019
         OI    FLG7,SUPPRMSG      SUPPRESS MEMBERNAME PRINTING BY VTM   82910019
STOPBLDT EQU   *                                                        82950019
         CLI   RCBUF,CH8          IS COMPLETION CODE 8 OR HIGHER A44144 83100000
         BNL   DONOTSET           YES- DON'T SET RETURN CODE     A44144 83110000
         MVI   RCBUF,CH8          SET COMPLETION CODE            A44144 83120000
DONOTSET EQU   *                                                 A44144 83130000
         MVI   VTMFLG1,UNUSEND    INDIC UNUSUAL END OF COPY OPERATION   83150019
         L     R15,VIEBVMS        ADDR OF MSG-WRITER ROUTINE            83280019
         BALR  R14,R15            EXIT TO ROUTINE                       83340019
         L     R15,VIEBVTM        ADDR OF TERMINATION ROUTINE           83360019
         BR    R15                EXIT TO TERMINATE THIS COPY OPERATION 83380019
SETM46   MVI   MSG1+P1,M46        MSG CODE                              83420019
         L     R1,DEPTR           POINT TO MBRNAME FOR ERROR MSG A44336 83460021
         MVI   MSG1,LASTMSG+PBIT  INDICATORS FOR IEBVMS                 83470019
         MVI   PARAMS,NAME                                              83480019
         MVC   NAMEFLD(LEN8),X0(R1) EXTRACT MEMBERNAME FROM DIR ENTRY   83500019
         MVI   NAMEDISP,OFF141I   OFFSET FOR NAME IN MSG                83520019
         B     STOPBLDT           SET INDICATORS, WRT MSG, EXIT TO VTM  83540019
C1MOVE   MVC   X0(L1,R5),X0(R6)   EXECUTED TO MOVE IDE FROM I/O BFR     83570019
C1MOVE1  MVC   X0(L1,R12),X0(R3)  MOVE IDE TO BUFFER           @ZA13739 83580099
C180     DC    H'80'              LENGTH OF AN IDE TO BE SPILLED TO UT3 83610019
         EJECT                                                          83640019
         DS    0H                                                       83690019
IEBMGI   EQU   *                                                        83720019
IEBDSCGI EQU   IEBMGI                                                   83730019
         ENTRY IEBDSCGI                                                 83740019
*                   SUBROUTINE TO LOCATE THE NEXT APPROPRIATE CTLTAB    83750019
*              ENTRY AND ACCESS THE ADDRESS OF THE PROPER INPUT DIR ENT 83790019
*              DEPENDING UPON THE PHASE OF PROCESSING.  IF THE IDE IS   83840019
*              ON SYSUT3, THIS ROUTINE CALLS IEBDRD TO READ IT INTO     83890019
*              CORE.  IF THE ATTEMPT TO READ FAILS (DUE TO AN I/O ERROR 83940019
*              ON SYSUT3), THE BIT NAMED 'MGINODE' IS SET IN 'SWITCH1'. 83990019
*              WHEN A POINTER TO THE IDE IS ACQUIRED, IT IS PASSED BACK 84040019
*              TO THE CALLER IN THE LOCATION NAMED 'IDEAD', IN THE COM- 84090019
*              MUNICATION AREA.  IF THE IDE BEING ACCESSED IS THE LAST  84140019
*              ONE WHICH CAN BE REQUESTED BY THE CALLER, THE BIT NAMED  84190019
*              'LE' IS SET IN 'FLG4'.                                   84240019
* REGISTER DEFINITIONS -                                                84340019
RG0      EQU   0                                                        84390019
RG1      EQU   1                                                        84440019
RG2      EQU   2                                                        84490019
RG3      EQU   3                                                        84540019
RG4      EQU   4                  ADDRESS OF COMMUNICATION AREA         84590019
RG5      EQU   5                                                        84640019
RG6      EQU   6                                                        84690019
RG7      EQU   7                                                        84740019
RG8      EQU   8                                                        84790019
RG9      EQU   9                                                        84840019
RG10     EQU   10                                                       84890019
RG11     EQU   11                 BASE REGISTER                         84940019
RG12     EQU   12                                                       84990019
RG13     EQU   13                                                       85040019
RG14     EQU   14                                                       85090019
RG15     EQU   15                                                       85140019
         SAVE  (14,12)                                                  85260019
         BALR  RG11,RG0            ESTABLISH ADDRESSABILITY             85320019
         USING *,RG11                                                   85380019
         LA    RG12,SV2           LINKAGE CONVENTIONS                   85440019
         ST    RG12,CHAINTHS(RG13) STD LINKAGE                          85500019
         ST    RG13,CHAINBK(RG12)                                       85560019
         LR    RG13,RG12                                                85620019
         NI    SWITCH1,FF-ENTERNN RESET 'PUT IN NEWNAME'SWITCH   X010XX 85670000
         TM    SWITCH1,TIME1                                            85680019
         BO    LTABAD             DONT INITIALIZE AGAIN IF 'TIME1' ON   85740019
         MVC   GIFCT(L2),FCT      SET UP INTERNAL COUNT OF THE NUMBER   85800019
*                                 OF MEMBERS 'FOUND' ON THE CURRENT     85860019
*                                 INPUT DATA SET                        85920019
         MVC   TABAD(L4),CTAD     INIT PTR TO CTLTAB                    85980019
         MVC   NNTABAD(L4),ADNNPTRT INIT PTR TO NEWNAME POINTER TABLE   86040019
         OI    SWITCH1,TIME1                                            86100019
LTABAD   L     RG2,TABAD                                                86160019
TESTDC   TM    X0(RG2),SEBIT4     IS 'DONT-COPY' INDICATOR ON           86200019
         BZ    TESTF              IF NOT, CHECK FOR NEWNAME OR 'FOUND'  86250019
         TM    X0(RG2),SEBIT1     IS THIS A NEWNAME ENTRY               86270019
         BZ    GETNEXT            NO                                    86300019
         L     RG8,NNTABAD        SET POINTER TO NNPTRTAB FOR NEXT SLOT 86310019
         LA    RG8,X4(RG8)        BUMP POINTER                          86320019
         ST    RG8,NNTABAD                                              86330019
GETNEXT  LA    RG2,TABLEN(RG2)    POINT TO NEXT CTLTAB ENTRY            86360019
         B     TESTDC             SEE IF 'DONT COPY' BIT IS SET         86400019
TESTF    TM    X0(RG2),SEBIT1     IS THIS A NEWNAME ENTRY               86460019
         BO    NEWENT             YES                                   86520019
         TM    X0(RG2),SEBIT5     WAS THIS MEMBER 'FOUND'               86580019
         BZ    GETNEXT            NO, GO LOOK FOR NEXT CTLTAB ENTRY     86640019
         TM    FLG7,COP           IS PGM NOW IN THE COPY PHASE          86740019
         BO    LEFTHALF           IF SO, WANT RENAMED ENTRY NOW, NOT    86840019
*                                 NEWNAME                               86940019
RENAME   TM    X0(RG2),SEBIT2     WAS THIS MEMBER RENAMED               87040019
         BO    GETNEXT            ENTRY IS RENAMED AND IT IS NOT        87300019
*                                 THE COPY PHASE                        87360019
         TM    FLG5,OSW1          IS OUTPUT DIR PRESCAN BEING DONE      87420019
         BO    LEFTHALF           IF PRESCAN ACCESS LEFT HALF OF        87480019
*                                 CTLTAB                                87540019
RTHALF   SR    RG3,RG3            IF DIRECTORY MERGE ACCESS             87600019
*                                 RIGHT HALF OF CTLTAB                  87660019
         IC    RG3,X6(RG2)        GET INDICATOR BYTE                    87740019
         MVC   FULLWD+P1(L3),X7(RG2) PUT POINTER INFO INTO WK AREA      87820019
         L     RG5,FULLWD                                               87900019
         LTR   RG3,RG3            IF NON-ZERO, DE POINTED TO IS ON UT3  87930019
         BZ    STIDEAD            RETURN A PTR TO THE IDE IN CORE       87960019
         LR    RG0,RG5            IDE IS NOT IN CORE                    88020019
         SLL   RG0,LFT8           SET UP 'TTR0' FOR CONVERSION          88100019
         B     NOTCORE            GO GET IDE INTO CORE FROM UT3         88180019
RETNAME  LA    RG5,X2(RG2)        IF DOING OUTPUT DIR PRE-SCAN, SET PTR 88260019
*                                 TO THE NEWNAME                        88340019
         L     RG8,NNTABAD                                              88440019
         L     RG7,X0(RG8)        GET ADDR OF CTLTAB ENTRY WHICH WAS    88470019
*                                 RENAMED                               88500019
         LA    RG8,X4(RG8)        BUMP POINTER                          88530019
         ST    RG8,NNTABAD        UPDATE NNPTRT TO NEXT ENTRY           88560019
         TM    X0(RG7),SEBIT4     IS RENAMED ENTRY FLAGGED AS 'DONTCPY' 88570019
         BZ    TSTBFV             NO, GO SEE IF IT WAS FOUND            88580019
         OI    X0(RG2),SEBIT4     YES, SO SET 'DONTCOPY' IN NEWNAME ENT 88590019
         B     GETNEXT            GO LOOK FOR NEXT CTLTAB ENTRY         88600019
TSTBFV   TM    X0(RG7),SEBIT5     WAS THIS OLDNAME FOUND                88610019
         BZ    GETNEXT            NO, GO LOOK FOR NEXT CTLTAB ENTRY     88620019
         B     STIDEAD            YES, GO SET ADDRESS OF NEWNAME INTO   88630019
*                                 IDEAD AND RETURN TO CALLER            88640019
LEFTHALF SR    RG3,RG3                                                  88680019
         IC    RG3,X2(RG2)        GET INDICATOR BYTE                    88740019
         LTR   RG3,RG3                                                  88800019
         BP    GISPTTR            IF NON-ZERO, IDE MUST BE ON SYSUT3    88860019
         MVC   IDEAD+P1(L3),X3(RG2) SET UP ADDR OF IDE                  88920019
         B     ENDFND             SEE IF THIS IS LAST ENTRY TO BE TRIED 88990019
GISPTTR  EQU   *                                                        89070019
         MVC   FULLWD1(L3),X3(RG2) PUT TTR OF SPILLED DE INTO WK AREA   89140019
         L     RG0,FULLWD1        PLACE TTR IN RG0 FOR CONVERSION       89220019
         B     NOTCORE            GO GET IDE INTO CORE FROM UT3         89270019
NEWENT   TM    FLG5,OSW1          IS OUTPUT DIRECTORY PRESCAN BEING     89320019
*                                 DONE NOW                              89370019
         BO    RETNAME            IF SO, SET UP POINTER TO THE NEWNAME  89420019
         TM    FLG7,COP           IS THIS FOR USE DURING COPY PHASE     89500019
         BO    GETNEXT            IF COPY PHASE, DONT USE NEWNAME ENTRY 89660019
         L     RG6,NNTABAD        GET ADDR OF PTR TO RENAMED CTLTAB ENT 89710019
         L     RG7,X0(RG6)        GET ADDR OF RENAMED ENTRY ITSELF      89760019
         LA    RG6,X4(RG6)        POINT TO NXT NNPTRTAB SLOT            89810019
         ST    RG6,NNTABAD        SAVE UPDATED POINTER                  89860019
         TM    X0(RG7),SEBIT4     IS THE CTLTAB ENTRY FOR THE ''OLD-    89900019
*                                 NAME'' FLAGGED AS 'DONTCOPY'          89940019
         BZ    NNRTHALF           NO                                    89980019
         OI    X0(RG2),SEBIT4     YES, SET 'DONTCOPY' IN NEWNAME ENTRY  90020019
         B     GETNEXT            LOOK FOR NEXT DESIRED CTLTAB ENTRY    90060019
NNRTHALF TM    X0(RG7),SEBIT5     WAS OLDNAME 'FOUND'                   90120019
         BZ    GETNEXT            NOT YET- GO GET NEXT CTLTAB ENTRY     90180019
         SR    RG3,RG3            SET UP TO GET INDICATOR BYTE          90210019
         IC    RG3,X6(RG7)        INDICATOR BYTE FROM RENAMED CTLTAB    90280019
         MVC   FULLWD(L4),X6(RG7) POINTER INFO INTO WORK AREA           90350019
         L     RG5,FULLWD                                               90420019
         LR    RG0,RG5                                                  90440019
         SLL   RG0,LFT8           SET UP 'TTR0' FOR CONVERSION          90460019
         OI    SWITCH1,ENTERNN    INDICATES THAT NEW NAME WILLL BE      90480019
*                                 PLUGGED INTO THE DIRECTORY ENTRY      90540019
         LTR   RG3,RG3            IS RENAMED DE IN CORE (INDIC NON-0)   90570019
         BP    NOTCORE            NO, GO READ IT FROM SYSUT3            90600019
         TM    SWITCH1,UNLDTM     IF CALLED BY DSU (NOT DSU1)    X010XX 90610000
         BO    STIDEAD            DONT PUT IN NEWNAME            X010XX 90620000
         MVC   X0(LEN8,RG5),X2(RG2) NEWNAME INTO IN-CORE INPUT DIREC-   90640019
*                                 TORY ENTRY, OVERLAYING OLDNAME        90680019
         B     STIDEAD            GO SET 'IDEAD' POINTER FOR CALLER     90730019
NOTCORE  LA    RG1,UT3DCB                                               90780019
         LR    RG10,RG2           SAVE POINTER TO CTLTAB ENTRY          90840019
         LA    RG2,FDAD(RG1)      PTR TO DCBFDAD                        90900019
         L     RG15,VTTOCC                                              90960019
         BALR  RG14,RG15          GO CONVERT TTR TO MBBCCHHR            91020019
         TM    UT3CHAR+P1,RPS     IS UT3 ON AN RPS DEVICE        S20201 91022020
         BNO   NOTRPS             NO, GO AROUND SECTOR CODE      S20201 91024020
         SPACE 1                                                 S20201 91026020
*   IF SYSUT3 IS ON AN RPS DEVICE, MUST GO TO SECTOR CONVERT     S20201 91028020
* ROUTINE TO GET SECTOR VALUE                                    S20201 91030020
         SPACE 1                                                 S20201 91032020
         STM   RG0,RG15,SV4       SAVE ALL REGS                  S20201 91034020
         IC    RG3,UT3CHAR+P3     INSERT UCB UNIT TYPE CODE      S20201 91036020
         SLL   RG3,S24            SHIFT TO HIGH ORDER BYTE       S20201 91038020
         LA    RG2,UT3SCTOR       LOAD PTR TO SECTOR SLOT        S20201 91040020
         OR    RG2,RG3            OR IN UCB UNIT CODE            S20201 91042020
*   PARAMETER REGISTER 2 IS NOW SET UP FOR CONVERT ROUTINE       S20201 91044020
         LH    RG0,UT3LRECL       LOAD UT3 RECORD LENGTH         S20201 91046020
         SLL   RG0,S16            SHIFT RECORD SIZE TO HIGH      S20201 91048020
*                                   ORDER TWO BYTES              S20201 91050020
         IC    RG0,SV4+P2         INSERT RECORD NUMBER (TTR0     S20201 91052020
*                                   WAS IN REG0 BEFORE ABOVE     S20201 91054020
*                                   STM INSTRUCTION EXECUTED     S20201 91056020
         SPACE 1                                                 S20201 91058020
*   PARAMETER REGISTER 0 IS NOW SET UP FOR CONVERT ROUTINE       S20201 91060020
         SPACE 1                                                 S20201 91062020
         L     RG15,ADCVT         ADDR OF CVT                    S20201 91064020
         USING CVT,RG15                                          S20201 91066020
         L     RG15,CVT0SCR1      ADDR OF SECTOR CONVERT ROUTINE S20201 91068020
         DROP  RG15                                              S20201 91070020
         BALR  RG14,RG15          LINK TO CONVERT ROUTINE        S20201 91072020
         SPACE 1                                                 S20201 91074020
         LM    RG0,RG15,SV4       RESTORE REGISTERS              S20201 91076020
NOTRPS   EQU   *                                                 S20201 91078020
         MVC   XWKA1(LEN8),X0(RG2) SAVE MBBCCHHR FROM SYSUT3 DCB        91080019
         MVI   SENSE,SENSE1+SENSE3 TURN ON SENSE1 AND SENSE3            91140019
         L     RG15,VIEBDRD                                             91320019
         BALR  RG14,RG15          GO TO READ SPILLED IDE FROM SYSUT3    91350019
         TM    IOEF1,ERF8         DID AN I/O ERROR OCCUR WHILE READING  91380019
         BZ    NOIOER3            IF NOT, RESTORE UT3 MBBCCHHR          91410019
         OI    SWITCH1,MGINODE    ELSE SET 'NO IDE' BIT                 91440019
         LR    RG2,RG10           RESTORE RG2                   YM06972 91450002
         B     RETPTR             GO TO RET TO CALLER WITH NO IDE       91470019
NOIOER3  EQU   *                                                        91500019
         MVC   X0(LEN8,RG2),XWKA1 RESTORE MBBCCHHR TO SYSUT3 DCB        91530019
*                                 TO ALLOW TO BE WRITTEN BACK           91560019
*                                 FROM WHERE IT WAS READ DURING         91620019
*                                 COPY PHASE                            91680019
         LR    RG2,RG10           RESTORE RG2                           91740019
         TM    SWITCH1,ENTERNN                                          91800019
         BZ    RETPTR             IF NO NEED TO PUT NEWNAME INTO THIS   91830019
*                                 IDE, PREPARE TO SET UP 'IDEAD' NOW    91860019
         TM    SWITCH1,UNLDTM     IF CALLED BY DSU (NOT DSU1)    X010XX 91870000
         BO    RETPTR             DONT PUT IN NEWNAME            X010XX 91880000
         L     RG10,ADWK                                                91900019
         MVC   SPIDEOFF(NAMLEN,RG10),X2(RG2) PUT NEWNAME INTO UT3 IDE-  91940019
*                                 THIS IS DURING DIRECTORY MERGE PHASE. 91980019
RETPTR   L     RG5,ADWK                                                 92040019
         LA    RG5,SPIDEOFF(RG5)  POINT TO 1ST BYTE OF SPILLED DE       92100019
STIDEAD  ST    RG5,IDEAD          SET POINTER TO IDE FOR CALLER USE     92130019
ENDFND   CLC   GIFCT(L2),ONE1     ANY MORE CTLTAB ENTRIES TO BE SEARCH- 92220019
*                                 ED AFTER THIS                         92250019
         BE    LAST               IF NOT, INDICATE NO MORE TO BE SOUGHT 92290019
         LH    RG3,GIFCT                                                92340019
         BCT   RG3,RETURN         DECREMENT INTERNAL COUNT OF NBR OF    92380019
*                                 ENTRIES TO BE SOUGHT                  92420019
LAST     OI    FLG4,LE            SET 'LAST-ENTRY-PROCESSED' INDICATOR  92460019
         NI    SWITCH1,FF-TIME1   RESET 1ST-TIME INTERNAL SWITCH        92520019
RETURN   LA    RG2,TABLEN(RG2)    BUMP CTLTAB POINTER                   92580019
         ST    RG2,TABAD                                                92640019
         STH   RG3,GIFCT               SET DECREMENTED COUNT            92700019
         L     RG13,SV2+CHAINBK                                         92760019
         RETURN  (14,12)                                                92820019
         SPACE 2                                                        92840019
XWKA1    DS    2F                 AREA TO SAVE SYSUT3 MBBCCHHR          92860019
FULLWD   DC    F'0'               WORK AREA                             92900019
FULLWD1  DC    F'0'               AREA FOR USE IN TTR-MBBCCHHR CONVERT  92940019
GIFCT    DC    H'0'               INTERNAL CT OF NBR OF ENTRIES TO TRY  93040019
ONE1     DC    H'1'               COMPARAND VALUE                       93140019
         EJECT                                                          93300019
         DS    0H                                                       93340019
IEBMKO   EQU   *                                                        93380019
IEBDSCKO EQU   IEBMKO                                                   93390019
         ENTRY IEBDSCKO                                                 93400019
* INPUT TO ROUTINE -                                                    93420019
*        ALO = ADDR WHERE TO BEGIN SAVING OUTPUT DIR BLKS (CALLER ONLY  93480019
*              INIT. ONCE PER INPUT DD, SUBRTNE UPDATES THEREAFTER)     93540019
*        NSP, ODIC AND OIC SWITCHES MUST ALL BE OFF (ZERO=OFF)          93600019
*        OBCT MUST BE INIT TO ZERO PRIOR TO 1ST CALL FOR CURR. INPUT DD 93660019
         SPACE 2                                                        93720019
         SAVE  (14,12)            SAVE CALLER'S REGS                    93840019
         BALR  R10,R0             ESTAB ADDRESSIBILITY                  93900019
         USING *,R10                                                    93960019
         ST    R13,SV3+CHAINBK    SAVE AREA LINKAGE                     94020019
         LA    R12,SV3                                                  94080019
         ST    R12,CHAINTHS(R13)                                        94140019
         LR    R13,R12                                                  94200019
         TM    FLG5,NSP           IS NO-SPACE SWITCH ON                 94260019
         BO    C3BK1              IF SO, DON'T SAVE ANY MORE            94320019
         L     R5,BCB                                                   94380019
         LA    R5,X0(R5)          ADDR OF 1ST BLOCK IN BUFFER           94440019
C3GALO   L     R6,ALO             ADDR WHERE THIS BLOCK IS TO BE PUT    94500019
         LA    R7,KBLEN+CON12(R6) ADD LENGTH OF FMBB+CT+KEY+DIR BLOCK   94560019
         C     R7,HICOR           IS THIS ADDR G.T. HIGHEST AVAIL LOC.  94620019
         BH    C3CKOB             IF SO, GO SEE IF ANY BLOCKS SAVED     94680019
         MVC   X0(KL+CON12,R6),X0(R5) MOVE FMBB+COUNT+KEY TO CORE AREA  94740019
         MVC   KL+CON12(BL,R6),KL+CON12(R5) MOVE DIRECTORY BLK TO CORE  94800019
         LH    R8,OBCT            GET CT OF NBR BLKS SAVED IN CORE      94860019
         LPR   R8,R8                                                    94920019
         LA    R8,X1(R8)          ADD 1 TO COUNT                        94980019
         STH   R8,OBCT            SAVE UPDATED COUNT                    95040019
         ST    R6,SVLSTO          SAVE ADDR OF LAST IN-CORE BLOCK       95100019
         ST    R7,ALO             SET ADDR OF LOWEST AVAIL CORE         95160019
         CLI   CON12(R5),FF       IS KEYNAME = TO 'FF' (LAST USEFUL BK) 95220019
         BNE   C1TEP              IF NO, SEE IF THIS IS LAST BLK IN BFR 95280019
         OI    FLG6,OIC           ELSE SET ALL-ODES-SAVED-IN-CORE SW.   95340019
C3BK1    L     R13,CHAINBK(R13)   RESTORE CALLER'S SAVE AREA ADDR       95400019
         RETURN (14,12)           RETURN TO CALLER                      95460019
C1TEP    EQU   *                                                        95520019
         TM    X0(R5),ENDPROC     IS THIS LAST REC IN BFR               95580019
         BO    C3SWOFF            YES,TURN LASTREC/ENDPROC OFF @ZA11929 95640099
         LA    R5,KBLEN+CON12(R5) POINT TO NEXT BLOCK IN BFR            95700019
         B     C3GALO             GET NXT LOC WHERE TO PUT NXT BLOCK    95760019
C3SWOFF  NI    X0(R6),FF-LASTREC-ENDPROC SW OFF IN SAVE BUFFER @ZA11929 95780099
         B     C3BK1              GO AND RETURN TO CALLER      @ZA11929 95800099
C3CKOB   OI    FLG5,NSP           INDIC NO MORE SPACE LEFT FOR OUT DIR  95820019
         SR    R8,R8              SET COMPARAND REG TO ZEROES           95880019
         CH    R8,OBCT            ARE THERE ANY OUT DIR BLKS SAVED      95940019
         BE    C3BK1              IF NOT, GO EXIT TO CALLER             96000019
         OI    FLG6,ODIC          INDICATE SOME-BUT-NOT-ALL BLKS SAVED  96060019
         MVC   OUTDAD1(LEN8),X1(R5) MBBCCHHR OF 1ST UN-RETAINED OD BLK  96120019
         B     C3BK1              GO TO EXIT TO CALLER                  96180019
         DS    0F                                                       96190019
PATCHL2  EQU   (*-IEBDSCP2)/20    5 PER-CENT PATCH AREA LENGTH          96200019
PATCH2   DC    XL(PATCHL2)'00'    PATCH AREA FOR THIS CSECT      A41780 96210021
         EJECT                                                          96240019
         DS    0D                                                       96300019
IEBDSMCA CSECT                                                          96340019
IEBMCA   EQU   IEBDSMCA                                                 96380019
         IEBMCA                                                         96420019
         EJECT                                                          96480019
         DCBD  DSORG=PO                                                 96540019
FDAD     EQU   DCBFDAD-IHADCB     OFFSET TO DCBFDAD FIELD               96600019
         EJECT                                                          96660019
CVT      DSECT                                                          96720019
         CVT                                                            96780019
TPCNVT   EQU   CVTPCNVT-CVTTCBP   DISPLACEMENT TO TTR-MBBCCHHR CONVERT  96840019
TPRLTV   EQU   CVTPRLTV-CVTTCBP   DISPLACEMENT TO MBBCCHHR-TTR CONVERT  96900019
         EJECT                                                          96960019
IECDSECT DSECT                                                          97020019
         IECDSECT                                                       97080019
TAOFF    EQU   DXDAADDR-DXIOB     OFFSET FROM START OF IOB TO MBBCCHHR  97140019
         END                                                            97200019
./  ADD  SSI=72900011,NAME=IEBDSU
         TITLE 'IEBDSU IEBCOPY S DIRECTORY SET UP FOR UNLOAD'           00010000
         LCLA  &T,&SPN                                            0001  00020000
.@001    ANOP                                                     0001  00030000
IEBDSU   CSECT ,                                                  0001  00040000
         STM   @E,@C,12(@D)                                       0001  00050000
         BALR  @B,0                                               0001  00060000
@PSTART  DS    0H                                                 0001  00070000
         USING @PSTART+00000,@B                                   0001  00080000
         ST    @D,@SAV001+4                                       0001  00090000
         LA    @F,@SAV001                                         0001  00100000
         ST    @F,8(0,@D)                                         0001  00110000
         LR    @D,@F                                              0001  00120000
         USING IEBMCA,MCABASE                                           00130000
         DS    0H                                                       00140000
*         SWITCH1(1)='0'B;              /* MAKE SURE IEBMGI WILL INIT   00150000
*                                          ITSELF FIRST TIME THROUGH  * 00160000
         NI    SWITCH1,B'01111111'                                0023  00170000
*         FLG5='00'X;                   /* INIT THESE SWITCHES TO ZERO* 00180000
         MVI   FLG5,X'00'                                         0024  00190000
*         FLG4(2)='0'B;                 /* ASSURE THAT LAST ENTRY BIT   00200000
*                                          IS OFF.                    * 00210000
         NI    FLG4,B'10111111'                                   0025  00220000
*         FLG7(3)='1'B;                 /* INDIC THAT DIR MERGE IS      00230000
*                                          BEING DONE.                * 00240000
         OI    FLG7,B'00100000'                                   0026  00250000
*         FLG7(1)='0'B;                 /* ASSURE THAT SWITCH INDIC     00260000
*                                          COPY PHASE IS OFF.         * 00270000
         NI    FLG7,B'01111111'                                   0027  00280000
*         SWITCH1(4)='1'B;              /* INDIC THAT DIR SET UP IS     00290000
*                                          BEING DONE FOR UNLOAD.     * 00300000
         OI    SWITCH1,B'00010000'                                0028  00310000
*         BLKAD=BEGFST1;                /* INIT ADDRESS WHERE TO BUILD  00320000
*                                          DIR BLOCK TO BEGIN OF BUF  * 00330000
         MVC   BLKAD+1(3),BEGFST1                                 0029  00340000
         MVI   BLKAD,X'00'                                        0029  00350000
*                                                                       00360000
*         CALL PREPBLK;                 /* GO PREPARE A BLOCK         * 00370000
         BAL   @E,PREPBLK                                         0030  00380000
*         CALL GETDE;                   /* GO GET DIR ENTRIES         * 00390000
         BAL   @E,GETDE                                           0031  00400000
*                                                                       00410000
*         FLG4(2)='0'B;                 /* ASSURE LAST ENTRY BIT OFF  * 00420000
         NI    FLG4,B'10111111'                                   0032  00430000
*         SWITCH1(4)='0'B;              /* TURN OFF SW INDIC DIR SET    00440000
*                                          UP FOR UNLOAD              * 00450000
         NI    SWITCH1,B'11101111'                                0033  00460000
*         RETURN;                       /* RETURN TO CALLER(IEBDSCPY) * 00470000
         BC    15,@EL01                                           0034  00480000
* /******************************************************************** 00490000
* /* AT THIS ENTRY POINT MEMBER NAMES ARE RETURNED TO THE CONTROL     * 00500000
* /* TABLE SO THAT THE MESSAGE ROUTINE CAN FIND THEM.                 * 00510000
* /******************************************************************** 00520000
*                                                                       00530000
* IEBDSU1:  ENTRY;                                                      00540000
IEBDSU1  STM   @E,@C,12(@D)                                       0035  00550000
         BALR  @B,0                                               0035  00560000
         LA    @F,IEBDSU1-IEBDSU                                  0035  00570000
         SR    @B,@F                                              0035  00580000
         ST    @D,@SAV001+4                                       0035  00590000
         LA    @F,@SAV001                                         0035  00600000
         ST    @F,8(0,@D)                                         0035  00610000
         LR    @D,@F                                              0035  00620000
*         SWITCH1(1)='0'B;              /* MAKE SURE IEBMGI WILL INIT   00630000
*                                          ITSELF FIRST TIME THROUGH  * 00640000
@9FF     NI    SWITCH1,B'01111111'                                0036  00650000
*         FLG5='00'X;                   /* INIT THESE SWITCHES TO ZERO* 00660000
         MVI   FLG5,X'00'                                         0037  00670000
*         FLG4(2)='0'B;                 /* ASSURE THAT LAST ENTRY BIT   00680000
*                                          IS OFF.                    * 00690000
         NI    FLG4,B'10111111'                                   0038  00700000
*         FLG7(3)='1'B;                 /* INDIC THAT DIR MERGE IS      00710000
*                                          BEING DONE.                * 00720000
         OI    FLG7,B'00100000'                                   0039  00730000
*         FLG7(1)='0'B;                 /* ASSURE THAT SWITCH INDIC     00740000
*                                          COPY PHASE IS OFF.         * 00750000
         NI    FLG7,B'01111111'                                   0040  00760000
*                                                                       00770000
* /******************************************************************** 00780000
* /* THIS GENERATE BRANCHES TO IEBMGI TO GET ONE DIRECTORY ENTRY      * 00790000
* /* ADDRESS IN IDEAD                                                 * 00800000
* /******************************************************************** 00810000
*                                                                       00820000
* DSU10006: GENERATE;                                                   00830000
DSU10006 EQU   *                                                  0041  00840000
         STM   RETAD,ENTPT,SV6         SAVE RETURN AND ENTRY ADDRESS    00850000
         L     ENTPT,VIEBMGI           ROUTINE TO GET 1 DIR ENTRY       00860000
         BALR  RETAD,ENTPT             GO GET A DIR ENTRY               00870000
         LM    RETAD,ENTPT,SV6         RESTORE RETURN AND ENTRY ADDR    00880000
         DS    0H                                                       00890000
*                                                                       00900000
*           /*--------------------------------------------------------* 00910000
*           /* NOW A TEST HAS TO BE MADE TO SEE IF IEBMGI RETURNED A  * 00920000
*           /* DIRECTORY ENTRY OR NOT.                                * 00930000
*           /*--------------------------------------------------------* 00940000
*                                                                       00950000
*           IF SWITCH1(3)='0'B          /* WAS A DIR ENTRY RETURNED   * 00960000
*              THEN                     /* YES                        * 00970000
         TM    SWITCH1,B'00100000'                                0042  00980000
         BC    05,@9FE                                            0042  00990000
*                DO;                                                    01000000
*                  NEWNAME=MEMNAM;      /* PUT NAME IN CONTROL TABLE  * 01010000
         L     @1,IDEAD                                           0044  01020000
         L     @5,TABAD                                           0044  01030000
         LR    @A,@5                                              0044  01040000
         SH    @A,@D1                                             0044  01050000
         MVC   0(8,@A),0(@1)                                      0044  01060000
*                  COPIED(4)='1'B;      /* INDIC MEMBER COPIED        * 01070000
         LR    @A,@5                                              0045  01080000
         SH    @A,@D2                                             0045  01090000
         OI    0(@A),B'00010000'                                  0045  01100000
         BC    15,@9FD                                            0047  01110000
*                END;                                                   01120000
*              ELSE                     /* NO - NO DIR ENTRY RETURNED * 01130000
*                  SWITCH1(3)='0'B;     /* RESET NO ENTRY INDIC       * 01140000
@9FE     NI    SWITCH1,B'11011111'                                0047  01150000
*                                                                       01160000
*             /*------------------------------------------------------* 01170000
*             /* NOW A TEST HAS TO BE MADE TO SEE IF THERE ARE MORE   * 01180000
*             /* DIRECTORY ENTRIES.                                   * 01190000
*             /*------------------------------------------------------* 01200000
*                                                                       01210000
*             IF FLG4(2)='0'B           /* MORE DIR ENTRIES           * 01220000
*                THEN                   /* YES                        * 01230000
@9FD     TM    FLG4,B'01000000'                                   0048  01240000
*                    GO TO DSU10006;    /* GET NEXT ENTRY             * 01250000
         BC    08,DSU10006                                        0049  01260000
*                                                                       01270000
*                ELSE                   /* NO - NO MORE ENTRIES       * 01280000
*                    RETURN;            /* RETURN TO CALLER           * 01290000
         BC    15,@EL01                                           0050  01300000
*                                                                       01310000
* /******************************************************************** 01320000
* /* THIS NESTED PROCEDURE GETS A DIRECTORY ENTRY VIA CTLTAB AND      * 01330000
* /* PUTS THIS ENTRY IN THE DIRECTORY BLOCK, IF THE BLOCK IS FULL, IT * 01340000
* /* WILL CALL THE NESTED PROCEDURE PREPBLK FOR ALLOCATION OF A NEW   * 01350000
* /* DIRECTORY BLOCK                                                  * 01360000
* /******************************************************************** 01370000
*                                                                       01380000
* GETDE:    PROCEDURE;                                                  01390000
@EL01    L     @D,4(0,@D)                                         0051  01400000
         LM    @E,@C,12(@D)                                       0051  01410000
         BCR   15,@E                                              0051  01420000
GETDE    STM   @E,@C,12(@D)                                       0051  01430000
         ST    @D,@SAV002+4                                       0051  01440000
         LA    @F,@SAV002                                         0051  01450000
         ST    @F,8(0,@D)                                         0051  01460000
         LR    @D,@F                                              0051  01470000
*                                                                       01480000
*           RESTRICT(4);                /* ADDRESSABILITY OF IEBMCA   * 01490000
*                                                                       01500000
* /******************************************************************** 01510000
* /* IN THIS GENERATE STATEMENT A BRANCH IS TAKEN TO IEBMGI IN        * 01520000
* /* IEBDSCPY TO OBTAIN THE ADDRESS OF A DIRECTORY ENTRY              * 01530000
* /******************************************************************** 01540000
*                                                                       01550000
* GETDE006: GENERATE;                                                   01560000
GETDE006 EQU   *                                                  0053  01570000
         STM   RETAD,ENTPT,SV6         SAVE RETURN AND ENTRY ADDRESS    01580000
         L     ENTPT,VIEBMGI           GO TO IEBMGI TO GET A DIR ENTRY  01590000
         BALR  RETAD,ENTPT             ADDRESS IN IDEAD                 01600000
         LM    RETAD,ENTPT,SV6         RESTORE RETURN AND ENTRY ADDR    01610000
         DS    0H                                                       01620000
*                                                                       01630000
*           /*--------------------------------------------------------* 01640000
*           /* TEST TO SEE WHETHER IEBMGI RETURNED AN ENTRY OR WHETHER* 01650000
*           /* DUE TO I/O ERROR FROM SYSUT3 NO ENTRY WAS RETURNED.    * 01660000
*           /*--------------------------------------------------------* 01670000
*                                                                       01680000
*           IF SWITCH1(3)='0'B          /* WAS A DIR ENTRY RETURNED?  * 01690000
*              THEN                     /* YES                        * 01700000
         TM    SWITCH1,B'00100000'                                0054  01710000
         BC    05,@9FC                                            0054  01720000
*                DO;                    /* PUT IN DIR BLK FOR OUTPUT  * 01730000
*                  WORK=''B;            /* CLEAR WORK AREA FOR C FIELD* 01740000
         XC    WORK(2),WORK                                       0056  01750000
*                  WORK(9:16)=CFLD;        /* PUT C FIELD ON HWORD BDY* 01760000
         L     @1,IDEAD                                           0057  01770000
         MVC   WORK+1(1),11(@1)                                   0057  01780000
*                  WORK(9:11)='000'B;       /* CLEAR 3 HI ORDER BITS  * 01790000
         NI    WORK+1,B'00011111'                                 0058  01800000
*                  WCOUNT=WORK;         /* PREPARE THIS VALUE FOR ARITH 01810000
*                                          OPERATION                  * 01820000
         MVC   WCOUNT(2),WORK                                     0059  01830000
*                  WCOUNT=              /* TOTAL NB OF USERS BYTES    * 01840000
*                    WCOUNT*2           /* MAKE NB OF HWORDS NB OF BYT* 01850000
*                    + 12;              /* ADD FIXED LEN OF DE        * 01860000
         LA    @E,2                                               0060  01870000
         MH    @E,WCOUNT                                          0060  01880000
         AH    @E,@D3                                             0060  01890000
         STH   @E,WCOUNT                                          0060  01900000
*                                                                       01910000
* /******************************************************************** 01920000
* /* THERE IS A DIRECTORY ENTRY AND ITS LENGTH IS CALCULATED IN       * 01930000
* /* WCOUNT A TEST HAS TO BE MADE TO SEE WHETHER THE ENTRY WILL FIT   * 01940000
* /* INTO THIS DIRECTORY BLOCK OR IF A NEW ONE IS NEEDED              * 01950000
* /******************************************************************** 01960000
*                                                                       01970000
* GETDE012:   IF BC + WCOUNT <=254      /* WILL ENTRY FIT IN BLOCK?   * 01980000
*                THEN                   /* YES                        * 01990000
GETDE012 LH    @F,WCOUNT                                          0061  02000000
         AH    @F,BC                                              0061  02010000
         CH    @F,@D4                                             0061  02020000
         BC    02,@9FB                                            0061  02030000
*                  DO;                  /* PUT IT IN THIS BLOCK       * 02040000
*                    ENTRIES(BC+1:BC+WCOUNT)=ENTRI(1:WCOUNT);           02050000
         L     @1,IDEAD                                           0063  02060000
         LR    @E,@1                                              0063  02070000
         LH    @5,WCOUNT                                          0063  02080000
         AH    @5,BC                                              0063  02090000
         LA    @C,1                                               0063  02100000
         AH    @C,BC                                              0063  02110000
         SR    @5,@C                                              0063  02120000
         L     @8,BLOCK                                           0063  02130000
         LA    @A,21(@C,@8)                                       0063  02140000
         EX    @5,@MVC                                            0063  02150000
*                                                                       02160000
*               /*----------------------------------------------------* 02170000
*               /* THE ENTRY FITS INTO THE PRESENT BLOCK, A TEST IS   * 02180000
*               /* NOW PERFORMED TO SEE WETHER A NEW NAME WAS SPECI-  * 02190000
*               /* -FIED IN A SELECTIVE COPY STMT.                    * 02200000
*               /*----------------------------------------------------* 02210000
*                                                                       02220000
*               IF SWITCH1(2)='1'B      /* NEED TO PLUG IN NEWNAME?   * 02230000
*                  THEN                 /* YES PLUG IN NEW NAME       * 02240000
         TM    SWITCH1,B'01000000'                                0064  02250000
         BC    12,@9FA                                            0064  02260000
*                      ENTRIES(BC+1:BC+8)=NEWNAME;                      02270000
         L     @5,TABAD                                           0065  02280000
         LR    @E,@5                                              0065  02290000
         SH    @E,@D1                                             0065  02300000
         LA    @9,8                                               0065  02310000
         AH    @9,BC                                              0065  02320000
         LA    @6,1                                               0065  02330000
         AH    @6,BC                                              0065  02340000
         SR    @9,@6                                              0065  02350000
         LA    @A,21(@6,@8)                                       0065  02360000
         EX    @9,@MVC                                            0065  02370000
*                  ELSE;                /* NO NO NEED FOR NEW NAME    * 02380000
@9FA     EQU   *                                                  0066  02390000
*                    OLDKEY=ENTRIES(BC+1:BC+8);       /* SAVE NAME OF   02400000
*                                                        ENTRY FOR KEY* 02410000
@9F9     LA    @1,8                                               0067  02420000
         AH    @1,BC                                              0067  02430000
         LA    @5,1                                               0067  02440000
         AH    @5,BC                                              0067  02450000
         SR    @1,@5                                              0067  02460000
         L     @C,BLOCK                                           0067  02470000
         LA    @E,21(@5,@C)                                       0067  02480000
         LA    @A,OLDKEY                                          0067  02490000
         MVI   0(@A),C' '                                         0067  02500000
         MVC   1(007,@A),0(@A)                                    0067  02510000
         EX    @1,@MVC                                            0067  02520000
*                    BC=BC+WCOUNT;      /* UPDATE NB OF BYTES IN DIR    02530000
*                                          BLOCK                      * 02540000
         LH    @F,WCOUNT                                          0068  02550000
         AH    @F,BC                                              0068  02560000
         STH   @F,BC                                              0068  02570000
*                    GO TO GETDE018;    /* GO SEE IF MORE ENTRIES TO    02580000
*                                          PROCESS.                   * 02590000
         BC    15,GETDE018                                        0069  02600000
*                  END;                                                 02610000
*                ELSE                   /* NO DOES NOT FIT IN BLOCK   * 02620000
*                  DO;                  /* COMPLETE BLK GET NEW ONE   * 02630000
*                    KEY=OLDKEY;        /* FILL IN LAST ENTRY NAME AS   02640000
*                                          KEY OF THIS BLOCK          * 02650000
@9FB     L     @1,BLOCK                                           0072  02660000
         MVC   12(8,@1),OLDKEY                                    0072  02670000
*                    BCNT=BC+2;         /* FILL IN NB OF BYTES USED IN  02680000
*                                          THIS DIR BLOCK             * 02690000
         LA    @F,2                                               0073  02700000
         AH    @F,BC                                              0073  02710000
         ST    @F,@TEMP4                                          0073  02720000
         MVC   20(2,@1),@TEMP4+2                                  0073  02730000
*                    BLKAD=             /* ADDRESS OF END OF THIS BLK * 02740000
*                      BLOCK+           /* ADDRESS OF BEGIN OF BLK +  * 02750000
*                      276;             /* LENGHT OF A DIR BLOCK      * 02760000
         LA    @F,276                                             0074  02770000
         A     @F,BLOCK                                           0074  02780000
         ST    @F,BLKAD                                           0074  02790000
*                    CALL PREPBLK;      /* GO PREPARE NEW BLOCK       * 02800000
         BAL   @E,PREPBLK                                         0075  02810000
*                    GO TO GETDE012;    /* PUT  ENTRY IN NEXT AVAIL-    02820000
*                                          -LABLE BLOCK.              * 02830000
         BC    15,GETDE012                                        0076  02840000
*                  END;                                                 02850000
*                END;                                                   02860000
*              ELSE                     /* NO NO ENTRY RETURNED       * 02870000
*                 SWITCH1(3)='0'B;      /* TURN OFF SW INDIC NO ENTRY * 02880000
@9FC     NI    SWITCH1,B'11011111'                                0079  02890000
*                                                                       02900000
* /******************************************************************** 02910000
* /* NOW THE ENTRY HAS BEEN PROCESSED, A TEST IS MADE TO SEE IF       * 02920000
* /* THERE ARE MORE DIRECTORY ENTRIES TO PROCESS                      * 02930000
* /******************************************************************** 02940000
*                                                                       02950000
* GETDE018: IF FLG4(2)='0'B             /* MORE ENTRIES TO GET?       * 02960000
*              THEN                     /* YES                        * 02970000
@9F7     EQU   *                                                  0080  02980000
GETDE018 TM    FLG4,B'01000000'                                   0080  02990000
*                GO TO GETDE006;        /* GO GET NEXT ENTRY          * 03000000
         BC    08,GETDE006                                        0081  03010000
*              ELSE                     /* NO                         * 03020000
*                DO;                    /* NO MORE ENTRIES TO PROCESS * 03030000
*                                                                       03040000
* /******************************************************************** 03050000
* /* THERE ARE NO MORE ENTRIES TO PROCESS A FF DIRECTORY ENTRY HAS    * 03060000
* /* TO BE MADE, A TEST TO SEE WETHER A NEW BLOCK IS NEEDED FOR THIS  * 03070000
* /* ENTRY FOLLOWS                                                    * 03080000
* /******************************************************************** 03090000
*                                                                       03100000
* GETDE024:   IF BC+12 <= 254           /* WILL FF REC FIT IN THIS      03110000
*                                          BLOCK                      * 03120000
*                THEN                   /* YES                        * 03130000
GETDE024 LA    @F,12                                              0083  03140000
         AH    @F,BC                                              0083  03150000
         CH    @F,@D4                                             0083  03160000
         BC    02,@9F6                                            0083  03170000
*                  DO;                  /* PUT FF REC IN THIS BLOCK   * 03180000
*                    ENTRIES(BC+1:BC+8)='FFFFFFFFFFFFFFFF'X;/*          03190000
*                                                      INSERT FFNAME  * 03200000
         LA    @E,@X6                                             0085  03210000
         LA    @1,8                                               0085  03220000
         AH    @1,BC                                              0085  03230000
         LA    @5,1                                               0085  03240000
         AH    @5,BC                                              0085  03250000
         SR    @1,@5                                              0085  03260000
         L     @C,BLOCK                                           0085  03270000
         LA    @A,21(@5,@C)                                       0085  03280000
         EX    @1,@MVC                                            0085  03290000
*                    BCNT= BC + 12 + 2;     /* PUT IN BYTE COUNT      * 03300000
         LA    @F,2                                               0086  03310000
         AH    @F,@D3                                             0086  03320000
         AH    @F,BC                                              0086  03330000
         ST    @F,@TEMP4                                          0086  03340000
         MVC   20(2,@C),@TEMP4+2                                  0086  03350000
*                    KEY='FFFFFFFFFFFFFFFF'X;/*                         03360000
*                                          SET KEY OF BLOCK TO FF'S   * 03370000
         MVC   12(8,@C),@X6                                       0087  03380000
*                    BLKAD=BLOCK + 276;    /* POINT TO END OF THIS      03390000
*                                             BLOCK                   * 03400000
         LA    @F,276                                             0088  03410000
         A     @F,BLOCK                                           0088  03420000
         ST    @F,BLKAD                                           0088  03430000
*                                                                       03440000
* /******************************************************************** 03450000
* /* NOW THAT THE FF ENTRY IS PLACED IN A BLOCK, A END OF FILE MARK   * 03460000
* /* CONSISTING OF 12 BYTES OF ZERO'S HAS TO BE INTRODUCED IN THE     * 03470000
* /* BUFFER, A TEST FOR THIS SPACE FOLLOWS.                           * 03480000
* /******************************************************************** 03490000
*                                                                       03500000
* GETDE030:       IF BLKAD+12 <= END2ND2   /* WILL EOF FIT IN BUFFER  * 03510000
*                  THEN                 /* YES                        * 03520000
GETDE030 LA    @F,12                                              0089  03530000
         A     @F,BLKAD                                           0089  03540000
         C     @F,END2ND2                                         0089  03550000
         BC    02,@9F5                                            0089  03560000
*                    DO;                /* INSERT EOF (12 BYTES ZERO) * 03570000
*                      ENDOF(2)= '00'X;  /* ZERO OUT THE 12 BYTES FOR   03580000
*                                           EOF                       * 03590000
         L     @1,BLKAD                                           0091  03600000
         MVI   1(@1),X'00'                                        0091  03610000
*                      ENDOF(3:12)=ENDOF(2:11);                         03620000
         MVC   2(10,@1),1(@1)                                     0092  03630000
*                      ENDOF(1)='40'X+'80'X;       /* INDIC LAST REC    03640000
*                                                     IN ANY BUFFER   * 03650000
         LA    @F,X'80'                                           0093  03660000
         LA    @0,X'40'                                           0093  03670000
         AR    @F,@0                                              0093  03680000
         STC   @F,0(0,@1)                                         0093  03690000
*                                                                       03700000
*                      /*********************************************** 03710000
*                      /* NOW,THE WHOLE DIRECTORY IS SET UP IEBSAM2   * 03720000
*                      /* MUST NOW BE CALLED TO WRITE OUT THE BUFFER  * 03730000
*                      /*********************************************** 03740000
*                                                                       03750000
*                      CALL IEBSAM2;    /* GO WRITE OUT BUFFER        * 03760000
         BAL   @E,IEBSAM2                                         0094  03770000
*                      RETURN;          /* THE WHOLE DIR IS SET UP    * 03780000
         BC    15,@EL01                                           0095  03790000
*                    END;                                               03800000
*                  ELSE                 /* NO EOF DOES NOT FIT IN BUF * 03810000
*                    DO;                /* PREPARE TO WRITE DATA      * 03820000
*                      CNT(1)='40'X +     /* INDICATE LAST RECORD IN  * 03830000
*                                 '80'X;  /* THE BUFFER               * 03840000
@9F5     LA    @F,X'80'                                           0098  03850000
         LA    @0,X'40'                                           0098  03860000
         AR    @F,@0                                              0098  03870000
         L     @1,BLOCK                                           0098  03880000
         STC   @F,0(0,@1)                                         0098  03890000
*                                                                       03900000
*                      /*********************************************** 03910000
*                      /* NOW THE BUFFER MUST BE WRITTEN OUT BEFORE   * 03920000
*                      /* THE END OF FILE RECORD CAN BE WRITTEN       * 03930000
*                      /*********************************************** 03940000
*                                                                       03950000
*                      CALL IEBSAM2;    /* GO WRITE OUT BUFFERS       * 03960000
         BAL   @E,IEBSAM2                                         0099  03970000
*                      BLKAD=BEGFST1;   /* BUILD AGAIN AT BEGINNING     03980000
*                                          OF BUFFER AREA             * 03990000
         MVC   BLKAD+1(3),BEGFST1                                 0100  04000000
         MVI   BLKAD,X'00'                                        0100  04010000
*                      GO TO GETDE030;  /* GO SET UP EOF FOR DIR      * 04020000
         BC    15,GETDE030                                        0101  04030000
*                    END;                                               04040000
*                  END;                                                 04050000
*                ELSE                   /* NO FF REC DOES NOT FIT     * 04060000
*                  DO;                  /* SET UP BLOCK FOR FF'S      * 04070000
*                    BCNT=BC+2;         /* FILL NB OF BYTES IN BLK    * 04080000
@9F6     LA    @F,2                                               0105  04090000
         AH    @F,BC                                              0105  04100000
         L     @1,BLOCK                                           0105  04110000
         ST    @F,@TEMP4                                          0105  04120000
         MVC   20(2,@1),@TEMP4+2                                  0105  04130000
*                    KEY=OLDKEY;        /* SET BLOCK KEY              * 04140000
         MVC   12(8,@1),OLDKEY                                    0106  04150000
*                    BLKAD=BLOCK+276;   /* NEXT BLOCK ADDRESS         * 04160000
         LA    @F,276                                             0107  04170000
         A     @F,BLOCK                                           0107  04180000
         ST    @F,BLKAD                                           0107  04190000
*                    CALL PREPBLK;      /* GET NEW DIR BLOCK          * 04200000
         BAL   @E,PREPBLK                                         0108  04210000
*                    GO TO GETDE024;    /* MAKE FF ENTRY AND EOF MARK * 04220000
         BC    15,GETDE024                                        0109  04230000
*                  END;                                                 04240000
*                END;                                                   04250000
*           END GETDE;                                                  04260000
* /******************************************************************** 04270000
* /* THIS PART OF THE ROUTINE WILL TEST WHETHER A NEW DIRECTORY BLOCK * 04280000
* /* WILL FIT IN THE BUFFER, IF IT DOES THEN IT WILL PREPARE IT AND   * 04290000
* /* CLEAR IT, IF IT DOES NOT FIT, IT WILL SET THE APPROPRIATE FLAGS  * 04300000
* /* FOR IEBSAM2 AND HAVE THE BUFFER WRITTEN OUT.                     * 04310000
* /******************************************************************** 04320000
*                                                                       04330000
* PREPBLK:  PROCEDURE;                                                  04340000
PREPBLK  STM   @E,@C,12(@D)                                       0113  04350000
         ST    @D,@SAV003+4                                       0113  04360000
         LA    @F,@SAV003                                         0113  04370000
         ST    @F,8(0,@D)                                         0113  04380000
         LR    @D,@F                                              0113  04390000
*                                                                       04400000
*           RESTRICT(4);                /* ADDRESSABILITY OF IEBMCA   * 04410000
*                                                                       04420000
* /******************************************************************** 04430000
* /* THE ADDRESS WHERE A POSSIBLE NEW BLOCK WILL END IS CALCULATED    * 04440000
* /******************************************************************** 04450000
*                                                                       04460000
* PRBLK006: BLKEND=BLKAD + 276;         /* ADD 276 TO CURRENT POSSIBLE  04470000
*                                          DIR BLOCK ADDRESS          * 04480000
PRBLK006 LA    @F,276                                             0115  04490000
         A     @F,BLKAD                                           0115  04500000
         ST    @F,BLKEND                                          0115  04510000
*                                                                       04520000
*           /*--------------------------------------------------------* 04530000
*           /* A NEW BLOCK HAS TO BE PREPARED, A TEST TO SEE IF IT    * 04540000
*           /* FITS IN THE BUFFER HAS TO BE MADE, IF IT DOES NOT FIT, * 04550000
*           /* THE BUFFER IS EMPTIED BEFORE STARTING THE CONSTRUCTION * 04560000
*           /* OF A NEW BLOCK.                                        * 04570000
*           /*--------------------------------------------------------* 04580000
*                                                                       04590000
*           IF BLKEND <= END2ND2        /* TESTING WHETHER A NEW BLOCK  04600000
*                                          WILL FIT INTO BUF.         * 04610000
*              THEN                     /* YES IT DOES, PREPARE BLOCK * 04620000
         L     @F,END2ND2                                         0116  04630000
         C     @F,BLKEND                                          0116  04640000
         BC    04,@9F2                                            0116  04650000
*                DO;                    /* TO FILL IN ENTRIES         * 04660000
*                  BLOCK=BLKAD;         /* UPDATE PTR TO NEW DIR BLOCK* 04670000
         MVC   BLOCK(4),BLKAD                                     0118  04680000
*                  CNT(1)='00'X;        /* SET F BYTE AND MBBCCHHR TO * 04690000
         L     @1,BLOCK                                           0119  04700000
         MVI   0(@1),X'00'                                        0119  04710000
*                  CNT(2:9)=CNT(1:8);             /* ZERO AND SET     * 04720000
         MVC   1(8,@1),0(@1)                                      0120  04730000
*                  CNT(10:12)=KLDL;         /* KEY TO 8, DATA TO 256  * 04740000
         MVC   9(3,@1),KLDL                                       0121  04750000
*                  ENTRIES(1)='00'X;    /* CLEAR AREA FOR DIRECTORIES * 04760000
         MVI   22(@1),X'00'                                       0122  04770000
*                  ENTRIES(2:254)=ENTRIES(1:253);            /*ENTRIES* 04780000
         MVC   23(253,@1),22(@1)                                  0123  04790000
*                                                                       04800000
*                  /*************************************************** 04810000
*                  /* NOW THE BLOCK HAS BEEN PREPARED AND ENTRIES CAN * 04820000
*                  /* BE INSERTED.                                    * 04830000
*                  /*************************************************** 04840000
*                                                                       04850000
*                  BC=0;                /* SET NB OF BYTES IN THIS BLK  04860000
*                                          TO ZERO                    * 04870000
         SR    @F,@F                                              0124  04880000
         STH   @F,BC                                              0124  04890000
*                  RETURN;              /* GO BACK TO CALLER,BLK READY* 04900000
         BC    15,@EL01                                           0125  04910000
*                END;                   /* END OF BLOCK PREPARATION   * 04920000
*              ELSE                     /* NO - NO MORE BUFFER SPACE  * 04930000
*                DO;                    /* PREPARE TO WRITE OUT DATA  * 04940000
*                  CNT(1)='40'X+'80'X;      /* INDICATE LAST RECORD     04950000
*                                              IN BUFFER              * 04960000
@9F2     LA    @F,X'80'                                           0128  04970000
         LA    @0,X'40'                                           0128  04980000
         AR    @F,@0                                              0128  04990000
         L     @1,BLOCK                                           0128  05000000
         STC   @F,0(0,@1)                                         0128  05010000
*                  CALL IEBSAM2;        /* WRITE OUT BUFFER           * 05020000
         BAL   @E,IEBSAM2                                         0129  05030000
*                  BLKAD=BEGFST1;       /* INIT ADDRESS WHERE TO START  05040000
*                                          TO BUILD NEW BLOCK         * 05050000
         MVC   BLKAD+1(3),BEGFST1                                 0130  05060000
         MVI   BLKAD,X'00'                                        0130  05070000
*                  GO TO PRBLK006;      /* GO PREPARE DIRECTORY BLOCK * 05080000
         BC    15,PRBLK006                                        0131  05090000
*                END;                                                   05100000
*           END PREPBLK;                                                05110000
* /******************************************************************** 05120000
* /* THIS  NESTED PROCEDURE BRANCHES TO IEBWSAM TO WRITE OUT THE DIR  * 05130000
* /******************************************************************** 05140000
*                                                                       05150000
* IEBSAM2:  PROCEDURE OPTIONS (DONTSAVE,NOSAVEAREA);                    05160000
IEBSAM2  EQU   *                                                  0134  05170000
*                                                                       05180000
*           GENERATE;                                                   05190000
         STM   RETAD,ENTPT,SV6         SAVE RETURN AND ENTRY ADDR       05200000
         L     ENTPT,VWSAM             ADDR OF WRITE ROUTINE            05210000
         MVC   WRTNEXT+1(3),BEGFST1    POINT TO START OF BUFF  @ZA04405 05220000
         BALR  RETAD,ENTPT             WRITE OUT BUFFER                 05230000
         LM    RETAD,ENTPT,SV6         RESTORE RETURN AND ENTRY ADDR    05240000
         DS    0H                                                       05250000
*           RETURN;                     /* BUFFER WRITTEN OUT -BACK TO  05260000
*                                          CALLER                     * 05270000
*           END IEBSAM2;                                                05280000
@EL04    BCR   15,@E                                              0137  05290000
*         END IEBDSU;                                                   05300000
@DATA1   EQU   *                                                        05310000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           05320000
@1       EQU   01                                                       05330000
@2       EQU   02                                                       05340000
@3       EQU   03                                                       05350000
@4       EQU   04                                                       05360000
@5       EQU   05                                                       05370000
@6       EQU   06                                                       05380000
@7       EQU   07                                                       05390000
@8       EQU   08                                                       05400000
@9       EQU   09                                                       05410000
@A       EQU   10                                                       05420000
@B       EQU   11                                                       05430000
@C       EQU   12                                                       05440000
@D       EQU   13                                                       05450000
@E       EQU   14                                                       05460000
@F       EQU   15                                                       05470000
@D1      DC    H'8'                                                     05480000
@D2      DC    H'9'                                                     05490000
@D3      DC    H'12'                                                    05500000
@D4      DC    H'254'                                                   05510000
@MVC     MVC   0(1,@A),0(@E)                                            05520000
         DS    0F                                                       05530000
@X6      DC    X'FFFFFFFFFFFFFFFF'                                      05540000
         DS    0D                                                       05550000
@DATA    EQU   *                                                        05560000
@SAV001  EQU   @DATA+00000000      72 BYTE(S) ON WORD                   05570000
         ORG   @DATA+00000072                                           05580000
KLDL     EQU   *                   3 BYTE(S)                            05590000
         DC    X'080100'                                                05600000
WORK     EQU   @DATA+00000076      16 BIT(S) ON HWORD                   05610000
WCOUNT   EQU   @DATA+00000078      HALFWORD INTEGER                     05620000
MEMTABLE EQU   00000009            9 BYTE(S)                            05630000
COPIED   EQU   MEMTABLE+00000000   8 BIT(S)                             05640000
NEWNAME  EQU   MEMTABLE+00000001   8 BYTE(S)                            05650000
DIRBLK   EQU   00000000            276 BYTE(S)                          05660000
CNT      EQU   DIRBLK+00000000     12 BYTE(S)                           05670000
KEY      EQU   DIRBLK+00000012     8 BYTE(S)                            05680000
BCNT     EQU   DIRBLK+00000020     2 BYTE(S)                            05690000
ENTRIES  EQU   DIRBLK+00000022     254 BYTE(S)                          05700000
ENTRI    EQU   00000000            74 BYTE(S)                           05710000
MEMNAM   EQU   ENTRI+00000000      8 BYTE(S)                            05720000
TTR      EQU   ENTRI+00000008      3 BYTE(S)                            05730000
CFLD     EQU   ENTRI+00000011      8 BIT(S)                             05740000
OPUSDAT  EQU   ENTRI+00000012      62 BYTE(S)                           05750000
BLKEND   EQU   @DATA+00000080      FULLWORD POINTER                     05760000
ENDOF    EQU   00000000            12 BYTE(S)                           05770000
         ENTRY IEBDSU1                                                  05780000
@SAV002  EQU   @DATA+00000084      72 BYTE(S) ON WORD                   05790000
@SAV003  EQU   @DATA+00000156      72 BYTE(S) ON WORD                   05800000
         ORG   @DATA                                                    05810000
         DS    00000228C                                                05820000
@TEMPS   DS    0F                                                       05830000
@TEMP4   DC    F'0'                                                     05840000
MCABASE  EQU   4                       BASE FOR IEBMCA                  05850000
RETAD    EQU   14                      RETURN ADDR FROM OTHER MODULES   05860000
ENTPT    EQU   15                      ENTRY PNT ADDR FROM OTHER MODULE 05870000
PATCHLN  EQU   (*-IEBDSU)/20           5 PERCENT OF MODULE LENGTH       05880000
PATCH    DC    XL(PATCHLN)'00'         MODULE PATCH AREA                05890000
IEBMCA   DSECT                         MACRO TO GENERATH THE COMMUNI-   05900000
         IEBMCA                        -CATION AREA IEBMCA              05910000
@DATEND  EQU   *                                                        05920000
@9F8     EQU   @9F7                                                     05930000
@EL02    EQU   @EL01                                                    05940000
@9F3     EQU   @EL01                                                    05950000
@EL03    EQU   @EL01                                                    05960000
@9F1     EQU   @EL01                                                    05970000
@9F4     EQU   @9F3                                                     05980000
         END   IEBDSU                                                   05990000
./  ADD  SSI=72900012,NAME=IEBDV1
VALD     TITLE 'IEBDV1 VALIDATE ROUTINE- OUT DATA SET'                  00080000
IEBDV1   CSECT                                                          00160019
*A197600-203200                                                  A33299 00200000
*A204000                                                         A36059 00220000
*C138318,138336                                       VS08432 = OZ00100 00222002
*C889600                                                         A41780 00230021
*A603300-603900,896600-896700                                    A37881 00230121
*D856000-860800,869600                                           A41809 00230400
* 009600,025600-026400,052800,096000,098400,111200-116000,138000 X010XX 00230800
* 320000,331200-336000,352000-364000,784800-785600,865600-866400 X010XX 00232100
* 886400,801600-803200                                           X010XX 00234100
*D156800-160800                                                  A45216 00236022
*A146500-147160                                                  A45216 00238022
*C144800,154400                                                  A45216 00238422
*D575600,576800,577600,813600-815200                             A44144 00238822
*C696000,868000,80400,561600                                     A44144 00238922
*A576500,813300-815940                                           A44144 00239222
*D136000,A076730,A131400-131600,A136000-136700,A340744-340789   OY01182 00239302
*D340761-340784,A874430-875000                                  OY01182 00239402
*A138306-138384                                                @YA02573 00239502
*C138400                                                       @YA02573 00239602
*A465400-465560,763800-763920                                  @ZA06526 00239799
*C459200                                                       @ZA06526 00259799
*C874910                                                       @ZA06528 00259899
*A465420-465440                                                @ZA07344 00269899
*C874670                                                       @ZA18344 00279899
*********************************************************************** 00280099
         ENTRY IEBDV0                                                   00300099
        ENTRY IEBDV2                                                    00320019
        ENTRY IEBDV3                                                    00400019
        ENTRY IEBDV4                                                    00480019
         ENTRY IEBDVJCB                                                 00560019
         SPACE 1                                                        00640019
*                                                                     * 00720019
*TITLE- IEBDSCPY VALIDATE ROUTINE- IEBDV1                             * 00800019
*                                                                     * 00880019
*STATUS- CHANGE LEVEL 002                                        X010XX 00960000
*                                                                     * 01040019
*FUNCTION/OPERATION- THIS MODULE OPENS DATA SETS FOR INPUT, OUTPUT    * 01120019
*       SYSUT3 AND SYSUT4 DATA SETS. THE CHARACTERISTICS OF THE DATA  * 01200019
*       SETS ARE VERIFIED. IT DETERMINES IF BLOCKING/REBLOCKING IS    * 01280019
*       TO BE DONE.                                                   * 01360019
*                                                                     * 01440019
*ENTRY POINTS- ENTERED AT IEBDV1 TO OPEN AND VALIDATE OUTPUT DATA SET * 01520019
*       ALWAYS VALIDATE AND OPEN AN INPUT DATA SET ALSO SO RIGHT AFTER* 01600019
*       ENTER INPUT VALIDATION/OPEN ROUTINE AT 'DOINDCB'              * 01680019
*              ENTERED AT IEBDV2 TO VALIDATE/OPEN AN INPUT DATA SET   * 01760019
*       AFTER FIRST ONE IS VALIDATED ALONG WITH OUTPUT DATA SET       * 01840019
*              ENTERED AT IEBDV3 TO VALIDATE SYSUT 3 DATA SET. GENERAL* 01920019
*       SUB-ROUTINE 'VALIDS34' USED TO VALIDATE AND OPEN SYSUT3 OR    * 02000019
*       SYSUT4.                                                       * 02080019
*              ENTERED AT IEBDV4 TO VALIDATE SYSUT4 DATA SET. GENERAL * 02160019
*       SUB-ROUTINE 'VALIDS34' USED TO VALIDATE AND OPEN SYSUT3 OR    * 02240019
*       SYSUT4 WORK DATA SETS USED IF SPILL NECESSARY.                * 02320019
*              ENTERED AT IEBDV0 TO OPEN AND VALIDATE SYSPRINT/SYSIN. * 02400019
*                                                                     * 02480019
*INPUT- REGISTER 4 POINTS TO IEBMCA COMMUNICATION AREA           X010XX 02560000
*                                                                     * 02720019
*OUTPUT- SWITCHES IN 'FORM' ARE SET TO DENOTE RECFM OF DATA SETS-     * 02800019
*       'FORM1' SET MEANS INPUT DATA SET HAS VARIABLE RECORD FORMAT   * 02880019
*       'FORM2' SET MEANS INPUT DATA SET HAS BLOCKED RECORDS          * 02960019
*       'FORM3' SET MEANS OUTPUT DATA SET HAS BLOCKED RECORDS.        * 03040019
*       'FORM4' SET IF INPUT OR OUTPUT MAY HAVE TRACK OVERFLOW RECORDS* 03120019
*       'TAG5' IN 'TAG' SET IF READ BACK CHECK TO BE DONE             * 03200019
*       SWITCH 'REBLK' IN 'FLG3' SET IF BLOCK/REBLOCK TO BE DONE      * 03280019
*       -BADBLOCK- SET BY DCB EXLST ROUTINE IF SYSPRINT/SYSIN HAVE    * 03360019
*                  INVALID BLOCKSIZE.                                 * 03440019
*            AREAS SET UP BY VALIDATE IN IEBMCA--                     * 03520019
*       -OBLKSIZE- OUTPUT DATA SET BLOCKSIZE                          * 03600019
*       -IBLKSIZE- INPUT DATA SET BLOCKSIZE                           * 03680019
*       -INLRECL-  INPUT DATA SET LOGICAL RECORD LENGTH               * 03760019
*       -OUTLRECL- OUTPUT DATA SET LOGICAL RECORD LENGTH              * 03840019
*       -OBLKFAC-  OUTPUT DATA SET BLOCKING FACTOR                    * 03920019
*       -IBLKFAC-  INPUT DATA SET BLOCKING FACTOR                     * 04000019
*       -OUTDS1-   TTR AND TRACK BALANCE END OF DATA SET OUTPUT DSCB  * 04080019
*       -INDS1-    TTR AND TRACK BALANCE END OF DATA SET INPUT DSCB   * 04160019
*       -UT3DS1-   TTR AND TRACK BALANCE END OF DATA SET SYSUT3 DSCB  * 04240019
*       -UT4DS1-   TTR AND TRACK BALANCE END OF DATA SET SYSUT4 DSCB  * 04320019
*       -FDAD-     IN PROPER DCB SET TO BBCCHH OF INITIAL RECORD      * 04400019
*       -OUTCHAR-   DEVICE CHARACTERISTIC BUFFER OUTPUT DATA SET      * 04480019
*       -INCHAR-    DEVICE CHARACTERISTIC BUFFER INPUT DATA SET       * 04560019
*       -UT3CHAR-   DEVICE CHARACTERISTIC BUFFER SYSUT3 DATA SET      * 04640019
*       -UT4CHAR-   DEVICE CHARACTERISTIC BUFFER SYSUT4 DATA SET      * 04720019
*       -OUTNAME-   OUTPUT DATA SET DDNAME                            * 04800019
*       -DDVALNM-   AREA THAT HOLDS DDNAME OF DATA SET BEING VALIDATED* 04880019
*       -NOTRKS-   NUMBER OF TRACKS IN EXTENT OUTPUT DATA SET         * 04960019
*                                                                     * 05040019
*EXTERNAL ROUTINES- SYSTEM MACROS- OBTAIN,RDJFCB,DEVTYPE,OPEN         * 05120019
*                   IF AN UNLOAD CONDITION IS FOUND, A LINK IS   X010XX 05170000
*                     DONE TO THE ENTRY POINT IEBLDUL2 IN        X010XX 05180000
*                     IEBLDUL                                    X010XX 05190000
*                   IF A LOAD CONDITION IS FOUND, A LINK IS      X010XX 05192000
*                     DONE TO THE ENTRY POINT IEBLDUL1 IN        X010XX 05194000
*                     IEBLDUL                                    X010XX 05196000
*                                                                     * 05200019
*EXITS - NORMAL                                                  X010XX 05280000
*        RETURN TO CALLER                                        X010XX 05330000
*                                                                X010XX 05340000
*EXITS - ERROR                                                   X010XX 05350000
*        MESSAGE SET UP DEFINING ERROR AND DATASET AND ISSUED    X010XX 05352000
*        BY MESSAGE WRITER ROUTINE WHICH WILL RETURN TO IEBSCN        * 05360019
*       PROGRAM TO FLUSH TO NEXT COPY STATEMENT                       * 05440019
*                                                                     * 05520019
*TABLES/WORK AREAS-                                                   * 05600019
*       -JFCB1-     JFCB WORK AREA (RDJFCB)                           * 05680019
*       -DSCB-      DSCB WORK AREA (CAMLST FOR OBTAIN)                * 05760019
*                                                                     * 05840019
*ATTRIBUTES- SERIAL REUSABLE                                          * 05920019
*                                                                     * 06000019
         EJECT                                                          06080019
*                                                                     * 06160019
*                SYMBOLIC REGISTERS FOR VALIDATE ROUTINE              * 06240019
*                                                                     * 06320019
GR0      EQU   0                                                        06400019
GR1      EQU   1                                                        06480019
GR2      EQU   2                                                        06560019
GR3      EQU   3                                                        06640019
GR4      EQU   4                       COMMON AREA POINTER              06720019
GR5      EQU   5                                                        06800019
GR6      EQU   6                                                        06880019
GR7      EQU   7                                                        06960019
GR8      EQU   8                                                        07040019
GR9      EQU   9                                                        07120019
GR10     EQU   10                                                       07200019
GR11     EQU   11                                                       07280019
GR12     EQU   12                      BASE REGISTER FOR VALIDATE       07360019
GR13     EQU   13                                                       07440019
GR14     EQU   14                                                       07520019
GR15     EQU   15                                                       07600019
SAV4     EQU   4                  SAVE AREA DISPLACEMENT                07603019
SAV8     EQU   8                  SAVE AREA DISPLACEMENT                07606019
LEN8     EQU   8                                                        07609019
X00      EQU   X'00'                                                    07612019
LEN6     EQU   6                  L                                     07615019
LEN44    EQU   44                                                       07618019
LEN46    EQU   46                                                X010XX 07620000
LEN1     EQU   1                                                        07621019
LEN2     EQU   2                                                        07624019
XFF      EQU   X'FF'                                                    07627019
LEN3     EQU   3                                                        07630019
LEN4     EQU   4                                                        07633019
LEN11    EQU   11                                                X010XX 07635000
LEN12    EQU   12                                                       07636019
LEN0     EQU   0                                                        07639019
LEN16    EQU   16                                                       07642019
X40      EQU   X'40'                                                    07645019
LEN120   EQU   120                                                      07648019
LEN37    EQU   37                                                       07651019
LEN10    EQU   10                                                       07654019
RTCDE    EQU   C'8'                                                     07657019
MS8      EQU   8                                                        07660019
RTCD     EQU   C'4'                                                     07663019
X1E      EQU   X'1E'                                                    07666019
X01     EQU   X'01'                                             OY01182 07673002
         EJECT                                                          07680019
         SAVE  (14,12),,*                                               07760019
*                                                                     * 07840019
*                  BASE ADDRESS REGISTER GR12- COMMUNICATION GR4      * 07920019
         BALR  GR12,GR0           GET ADDRESSABILITY                    08000019
         USING START,GR12                                               08080019
         USING IEBMCA,GR4                                               08160019
START    EQU   *                                                        08240019
*ENTRY VALIDATE/OPEN OUTPUT DATA SET PLUS FIRST INPUT DATA SET        * 08320019
         SPACE 1                                                        08400019
         ST    GR13,SV5+SAV4      POINTER TO OLD SAVE AREA              08480019
         LA    GR15,SV5                 PTR TO SAVE AREA                08560019
         ST    GR15,SAV8(GR13)    POINTER TO NEW SAVE AREA IN OLD       08640019
         LR    GR13,GR15               POINTER TO NEW SAVE AREA         08720019
         OI    FLG3,OUTPUTEP           SET FOR ENTRY AT DV1             08800019
         NI    ULLDST,XFF-UNLOAD       TURN OFF UNLOAD SWITCH    X010XX 08810000
         SPACE 1                                                 X010XX 08820000
         LA    GR5,OUTDCB              SET DCB POINTER REGISTER  X010XX 08830000
*                                       TO ADDRESS OF OUTPUT PDS X010XX 08832000
*                                       DCB                      X010XX 08834000
         USING IHADCB,GR5              DCB DSECT ADDRESSABILITY  X010XX 08836000
         MVI   DCBKEYLE,X00            CLEAR DCB KEYLEN FIELD    X010XX 08838000
         NI    DCBOPTCD,AOSFB          CLEAR DCB OPTCD FIELD     X010XX 08838400
         MVI   DCBRECFM,X00            CLEAR DCB RECFM FIELD     X010XX 08838800
         SPACE 1                                                 X010XX 08839200
         NI    FORM,XFF-FORM4          TURN OFF OVERFLOW FLAG    A36059 08840020
         BAL   GR9,DOINDCB             OPEN FIRST INPUT DATA SET        08880019
         SPACE 1                                                        08960019
*                                                                     * 09040019
*                  READ IN JFCB THEN OPEN AND THEN OBTAIN DSCB TO     * 09120019
*         GET BLOCKSIZE, TTRS AND TRACK BALANCE OF OUTPUT DATA SET,   * 09200019
*         AND CHECK DATA SET ORGANIZATION FOR PARTITIONED.            * 09280019
*                  GR5 MAINTAINS DCB ADDRESS AS LONG AS NECESSARY     * 09360019
*                                                                     * 09440019
         SPACE 1                                                        09520019
         LA    GR5,OUTDCB                                               09680019
         MVC   DDVALNM(LEN8),DDNAME1(GR5) SAV NAME OF DS VALIDATING     09760019
         LA    GR8,JFCB1               POINTER TO JFCB                  09920019
         ST    GR8,LIST1               STORE IN EXIT LIST               10000019
         MVI   LIST1,JFCBECON          SET JFCB EXIT+LAST ENTRY         10080019
         SPACE 1                                                        10160019
         LA    GR1,BPAMOUT             ADDRESS OF OUTPUT DATA SET BPAM  10240019
         MVC   DDNAME1(LEN8,GR1),DDNAME1(GR5) NAME OF CURRENT OUTPUT DS 10320019
         SPACE                                                          10400019
         DEVTYPE DDVALNM,OUTCHAR,DEVTAB GET OUTPUT DEVICE DATA   S20201 10480020
         LTR   GR15,GR15               MISSING DD CARD                  10560019
         BZ    ODDPRES                 NO, OK                           10640019
         SPACE 1                                                        10720019
         BAL   GR8,NODDCD              GIVE ERROR MSG                   10800019
         B     GETNEXT                 GO TO ERROR RTN                  10880019
         SPACE 1                                                        10960019
ODDPRES  EQU   *                                                        11040019
         SPACE 1                                                        11680019
         RDJFCB ((GR5))                                                 11760019
         LA    GR8,JFCB1               JFCB BUFFER ADDRESS              11840019
         USING INFMJFCB,GR8                                             11920019
         MVC   OTDSNAME(LEN44),JFCBDSNM MOVE OUTPUT DSNAME TO COMM AREA 12000019
         MVC   OUTVOL(LEN6),JFCBVOLS  SAVE OUTPUT VOLID                 12080019
         SPACE 1                                                 X010XX 12130000
         CLI   OUTUCBTP,UCBDIRCT       IS OUTPUT DATA SET DASD   X010XX 12140000
         BNE   DV000200                NO, GO TO UNLOAD INITIAL- X010XX 12150000
*                                       IZATION ROUTINE          X010XX 12152000
         SPACE 1                                                 X010XX 12154000
         SPACE                                                          12160019
*********************************************************************** 12240019
*                                                                     * 12320019
*  THIS SECTION OF CODE 1) OBTAINS THE OUTPUT DSCB, 2) DETERMINES     * 12400019
*  DATA SET CHARACTERISTICS THAT ARE NULL IN THE OUTPUT DSCB AND      * 12480019
*  OUTPUT JFCB, 3) FILLS THESE NULL OUTPUT CHARACTERISTICS WITH THE   * 12560019
*   FIRST INPUT DATA SET'S CHARACTERISTICS                            * 12640019
*                                                                     * 12720019
*********************************************************************** 12800019
         SPACE                                                          12880019
         USING DXDSCB,GR2                                               12960019
         LA    GR2,DSCB                POINTER TO DSCB                  13040019
         LA    GR3,INDCB               POINTER TO INPUT DCB             13120019
         NI    FLG3,XFF-ENTOBT         SET OBTAIN NOT ENTERED YET 01182 13140002
OUTOBT   EQU   *                                                OY01182 13160002
         SPACE                                                          13200019
         OBTAIN OBTL                   GET OUTPUT DSCB                  13280019
         LTR   GR15,GR15               OBTAIN OK                        13360019
         BZ    OUTOBTOK                YES, GO ON                       13440019
         SPACE 1                                                        13520019
         LA    GR8,LEN4                                         OY01182 13600002
         CR    GR15,GR8                WAS VOLUME MOUNTED       OY01182 13607002
         BH    BADOBT                  NO,VALIDATION ERROR      OY01182 13614002
*     TRY TO MOUNT IT NOW                                       OY01182 13621002
         TM    FLG3,ENTOBT             DO NOT LOOP              OY01182 13628002
         BO    BADOBT                                           OY01182 13635002
         MVI   MNTJFCB+117,X01         1 VOLUME ON LIST         OY01182 13642002
         MVC   MNTJFCB+118(LEN6),INVOL GET VOLUME SER           OY01182 13649002
         MVI   MNTJFCB+124,X40    NO MORE VOLUMES               OY01182 13656002
         LA    GR7,OUTOBT         SET RETURN ADDR               OY01182 13663002
         B     OPENVTOC                ISSUE MOUNT REQUEST      OY01182 13670002
         SPACE 1                                                        13680019
OUTOBTOK EQU   *                                                        13760019
         TM    DS1DSORG(GR2),PARTORG   PARTIONED ORGANIZATION    A33299 13770020
         BO    OUTPDS                  YES, OK                   A33299 13780020
         SPACE 1                                                 X010XX 13782000
         TM    DS1DSORG(GR2),BADDSORG  IS OR DA DSORG            X010XX 13784000
         BZ    DV000200                NO, GO TO UNLOAD INITIAL- X010XX 13786000
*                                       IZATION ROUTINE          X010XX 13788000
         SPACE 1                                                 A33299 13790020
         BAL   GR8,DV000800            GIVE ERROR MESSAGE        X010XX 13800000
         B     GETNEXT                 GO TO ERROR RTN           A33299 13810020
         SPACE 1                                                 A33299 13820020
OUTPDS   EQU   *                                                 A33299 13830020
         TM    JFCBIND2,JFCNEW    IS OUTPUT A 'NEW' DS         @YA02573 13830602
         BO    TESTKEY            YES                          @YA02573 13831202
         CLC   KEYLENGT(LEN1,GR3),JFCKEYLE  INPUT KEY LENGTH =  OZ00100 13831802
*                                      OUTPUT JFCB KEY LENGTH  @YA02573 13832402
         BE    TESTRCFM           YES                          @YA02573 13833002
         CLC   KEYLENGT(LEN1,GR3),DSCKEYL   INPUT KEY LENGTH =  OZ00100 13833602
*                                      OUTPUT DSCB KEY LENGTH  @YA02573 13834202
         BE    TESTRCFM           YES                          @YA02573 13834802
         L     GR1,NXTINDS        NO; LOAD POINTER TO INDD     @YA02573 13835402
*                                  NAME                        @YA02573 13836002
         MVC   DDVALNM(LEN8),LEN2(GR1)  MOVE IN INDD NAME      @YA02573 13836602
*                                       TO BE USED IN MSG      @YA02573 13837202
         BAL   GR8,KEYERR         WRITE KEYLENGTH ERROR MSG    @YA02573 13837802
         B     GETNEXT            GO TO ERROR RTN              @YA02573 13838402
TESTKEY  MVC   WKA1(LEN1),DSCKEYL MOVE OUTPUT DSCB KEY LENGTH  @YA02573 13840002
         OC    WKA1(LEN1),JFCKEYLE  OR OUTPUT JFCB KEY LENGTH           13920019
         BNZ   TESTRCFM                BRANCH IF BOTH NOT ZERO          14000019
         MVC   JFCKEYLE(LEN1),KEYLENGT(GR3)  MOVE INPUT KEY LENGTH TO   14080019
*                                         OUTPUT JFCB                   14160019
TESTRCFM EQU   *                                                        14240019
         MVC   WKA1(LEN1),DSCRECFM  MOVE OUTPUT DSCB RECFM              14320019
         OC    WKA1(LEN1),JFCRECFM  ARE THEY BOTH ZERO                  14400019
         BNZ   LRCLNEED             NO, GO AROUND                A45216 14480022
         MVC   JFCRECFM(LEN1),RECFMFLD(GR3) MOVE INPUT RECFM TO OUTPUT  14560019
*                                        JFCB                           14640019
LRCLNEED EQU   *                                                 A45216 14650022
         TM    JFCRECFM,UNDEFREC       OUTPUT UNDEFINED RECRDS   A45216 14660022
         BO    TESTOPCD                YES-DON'T FILL LRECL      A45216 14670022
         BM    TESTLRCL                NO-DO LRECL               A45216 14680022
         TM    DSCRECFM,UNDEFREC       OUTPUT UNDEFINED RECRDS   A45216 14682022
         BO    TESTOPCD                YES-DON'T FILL LRECL      A45216 14684022
TESTLRCL EQU   *                                                 A45216 14690022
         MVC   WKA1(LEN2),DSCLRECL     MOVE OUTPUT DSCB LRECL    A45216 14700022
         OC    WKA1(LEN2),JFCLRECL     ARE THEY BOTH ZERO        A45216 14710022
         BNZ   TESTOPCD                NO, GO AROUND             A45216 14712022
         MVC   JFCLRECL(LEN2),INLRECL  MOVE INPT LRECL TO OUTPUT A45216 14714022
*                                        JFCB                    A45216 14716022
TESTOPCD EQU   *                                                        14720019
         MVC   WKA1(LEN1),DSCOPTCD  MOVE OUTPUT DSCB OPTCD              14800019
         OC    WKA1(LEN1),JFCOPTCD  ARE THEY BOTH ZERO                  14880019
         BNZ   TESTBLKS                NO, GO AROUND                    14960019
         MVC   JFCOPTCD(LEN1),OPTCDFLD(GR3) MOVE INPUT OPTCD TO OUTPUT  15040019
*                                        JFCB                           15120019
TESTBLKS EQU   *                                                        15200019
         MVC   WKA1(LEN2),DSCBLKL  MOVE OUTPUT DSCB BLKSIZE             15280019
         OC    WKA1(LEN2),JFCBLKSI ARE THEY BOTH ZERO                   15360019
         BNZ   FILLDONE                NO, GO AROUND             A45216 15440022
         MVC   JFCBLKSI(LEN2),IBLKSIZE  MOVE INPUT BLOCKSIZE TO OUTPUT  15520019
*                                        JFCB                           15600019
FILLDONE EQU   *                                                        16160019
         SPACE                                                          16240019
         SPACE 1                                                        16320019
         OPEN  ((GR5),OUTIN),TYPE=J    OPEN OUTPUT DCB                  16400019
         SPACE 1                                                        16480019
         TM    OPENFLGS(GR5),OPENOK    OPEN ERROR                       16560019
         BO    OUTOPEND                NO, OK                           16640019
         SPACE 1                                                        16720019
         BAL   GR8,OPENBAD             GIVE ERROR MSG                   16800019
         B     GETNEXT                 GO TO ERROR RTN                  16880019
         SPACE 1                                                        16960019
OUTOPEND EQU   *                                                        17040019
         NI    OPENFLGS(GR5),XFF-LWR  TURN OFF LAST OPERATION WAS       17200019
*                                        A WRITE IN OUTPUT DCB SO       17280019
*                                        THAT IF AN ABEND OCCURS        17360019
*                                        CLOSE WON'T UPDATE DSCLSTAR    17440019
*                                        FIELD IN DSCB                  17520019
         SPACE 1                                                        17600019
OBTAINS  OBTAIN OBTL                   OBTAIN OUTPUT DSCB               17680019
         LTR   GR15,GR15               OBTAIN OKAY                      17760019
         BZ    OUTOBTGD                YES, GO ON                       17840019
         SPACE 1                                                        17920019
BADOBT   EQU   *                                                        18000019
         BAL   GR8,OBTAINBD            GIVE ERROR MSG                   18080019
         B     GETNEXT                 GO TO ERROR RTN                  18160019
         SPACE 1                                                        18240019
OUTOBTGD EQU   *                                                        18320019
         MVC   OUTDS1(LEN3),DS1LSTAR(GR2) MOVE TTR TO BUFFER (LAST REC) 18400019
         MVI   OUTDS1+LEN3,X00          SET N=0                         18480019
         MVC   OUTDS1+LEN4(LEN2),DS1LSTAR+LEN3(GR2) MOVE TRACK BALANCE  18560019
         MVC   OUTPTTR(LEN6),OUTDS1  SAVE TTRN/TB IN BACK UP BUFFER     18640019
         MVC   TRKBALAN(LEN2,GR5),OUTDS1+LEN4  MOVE TRACK BAL TO DCB    18720019
         MVC   ERPTTR(LEN4),OUTDS1  MOVE TTRN TO WORK AREA              18800019
         MVC   ERPTB(LEN2),OUTDS1+LEN4 MOVE TRACK BAL TO WORK AREA      18880019
         MVC   BPAMOUT+DIRCTDCB(LEN2),DSCBLDBL   SAVE NUMBER OF BYTES   18890019
*                                                  USED IN LAST         18900019
*                                                  DIRECTORY BLOCK      18910019
*                                                  IN CASE WE RUN OUT   18920019
*                                                  OF DIRECTORY SPACE   18930019
         SPACE 1                                                        18960019
         LR    GR1,GR5                 OUTDCB ADDRESS                   19040019
         L     GR0,OUTDS1              TTRN TO CONVERT (LAST RECORD)    19120019
         LA    GR2,OUTFDAD             BUFFER FOR MBBCCHHR              19200019
         L     GR15,VTTOCC             TTRN TO MBBCCHHR CONVERT ROUTINE 19280019
         BALR  GR14,GR15               CONVERT TO MBBCCHHR STORE 0(GR2) 19360019
         SPACE 1                                                        19440019
         MVC   TRBALBUF(LEN2),OUTCHAR+LEN12  MAXIMUM RECORD ON TRACK    19520019
         MVC   ERPLMFD(LEN8),OUTFDAD                                    19600019
         LA    GR2,DSCB                POINTER TO DSCB           A33299 19640020
         SPACE                                                          19680019
         TM    RECFMFLD(GR5),OVERFLOW  DATA SET HAS OVERFLOW            20480019
         BNO   NOTOVRFL                NO, GO AROUND                    20560019
         OI    FORM,FORM4              SET FOR A DATA SET WITH OVERFLOW 20640019
NOTOVRFL EQU   *                                                        20720019
         LH    GR7,DS1BLKL(GR2)        DATA SET BLOCK LENGTH DSCB       20800019
         LTR   GR7,GR7                                                  20880019
         BP    OBGTZERO                BLOCKSIZE GT THAN ZERO (OK)      20960019
         SPACE 1                                                        21040019
         B     OBLKERR                 GIVE ERROR MSG                   21120019
         SPACE 1                                                        21200019
OBGTZERO EQU   *                                                        21280019
         STH   GR7,OBLKSIZE            STORE BLOCK SIZE IN BUFFER       21360019
         LH    GR6,DS1LRECL(GR2)       DATA SET LRECL IN DSCB           21440019
         STH   GR6,OUTLRECL            STORE LRECL IN BUFFER            21520019
         XR    GR15,GR15               CLEAR REG                        21530019
         IC    GR15,OUTBOLST           INSERT BLOCK OVERHEAD LAST REC   21540019
         TM    OUTDEVFG,HALFOVER       TWO BYTE OVERHEAD         S20201 21542020
         BNO   NOTTWO                  NO, GO AROUND             S20201 21544020
         LH    GR15,OUTOVER2           LOAD OVERHEAD VALUE       S20201 21546020
NOTTWO   EQU   *                                                 S20201 21548020
         AH    GR15,OBLKSIZE           ADD BLOCKSIZE                    21550019
         XR    GR14,GR14               CLEAR REG                        21560019
         IC    GR14,KEYLENGT(GR5)      INSERT KEY LENGTH                21570019
         AR    GR15,GR14               ADD TO BLOCKSIZE + OVERHEAD      21580019
         LTR   GR14,GR14               KEY LENGTH ZERO                  21590019
         BNZ   ITSKEYED                YES, DON'T SUBTRACT KEY OVHD     21600019
         IC    GR14,OUTKEYOV           INSERT KEY OVERHEAD              21610019
         SR    GR15,GR14               SUBTRACT FROM BLOCKSIZE+         21620019
*                                         KEYLENGTH+BLOCK OVERHEAD      21630019
ITSKEYED EQU   *                                                        21640019
         CH    GR15,TRBALBUF           WILL MAXIMUM SIZE RECORD FIT     21650019
*                                         ON ONE TRACK                  21660019
         BNH   OKGO                    YES, GO ON                       21670019
         TM    RECFMFLD(GR5),OVERFLOW  OVERFLOW RECORDS ON DATA SET     21760019
         BO    OKGO                    YES, OK                          21840019
         SPACE 1                                                        21920019
OBLKERR  EQU   *                                                        22000019
         BAL   GR8,BLOCKERR            GIVE ERROR MSG                   22080019
         B     GETNEXT                 GO TO ERROR RTN                  22160019
         SPACE 1                                                        22240019
OKGO     EQU   *                                                        22320019
         L     GR1,DEBADDR(GR5)        DEB POINTER FROM DCB             22400019
         LA    GR1,LEN0(GR1)   CLEAR HIGH ORDER BYTE                    22480019
         LA    GR6,OUTIOB                                               22560019
         XC    FDADADDR(LEN8,GR5),FDADADDR(GR5) CLEAR FDAD FIELD IN DCB 22640019
         MVC   FDADADDR+LEN1(LEN6,GR5),DEBBCCHH(GR1) BBCCHH-FDAD OUTDCB 22720019
         NI    TAG,XFF-TAG5       RESET VALIDITY CHECK SWITCH           22800019
         MVC   OKEYLEN(LEN1),KEYLENGT(GR5)  MOVE KEY LENGTH TO BUFFER   22880019
         CLI   OUTUCBDV,THE2321        IS OUTPUT DEVICE A 2321          22960019
         BE    SET4CHKB                FORCE READ BACK CHECKING         23040019
         TM    OPTCDFLD(GR5),VALCHK    CHECK FOR READBACK CHECK         23120019
         BZ    NEXTINS                 NO                               23200019
SET4CHKB EQU   *                                                        23280019
         OI    TAG,TAG5                SET VALIDITY CHECK SWITCH        23360019
         SPACE 1                                                        23440019
NEXTINS  EQU   *                                                        23520019
         TM    RECFMFLD(GR5),UNDEFREC  RECORD FORMAT UNDEFINED TYPE     23600019
         BO    UNDEFNOB           UNDEFINED IF BOTH ON- NO BLOCK        23680019
         TM    RECFMFLD(GR5),VARREC    OUTPUT VARIABLE                  23760019
         BNO   BLOCKTST                NO, GO ON                        23840019
         SPACE 1                                                        23920019
         LH    GR2,OBLKSIZE            LOAD OUTPUT BLKSIZE              24000019
         LH    GR1,OUTLRECL            LOAD OUTPUT LRECL                24080019
         LA    GR1,LEN4(GR0,GR1)     ADD 4 TO LRECL                     24160019
         SR    GR2,GR1                 BLKSIZE=LRECL+4  (OR MORE)       24240019
         BNM   BLOCKTST              YES, GO ON                         24320019
         SPACE 1                                                        24400019
         B     OBLKERR                 GIVE ERROR MSG                   24480019
         SPACE 1                                                        24560019
BLOCKTST EQU   *                                                        24640019
         TM    RECFMFLD(GR5),BLOCKREC  RECORDS BLOCKED                  24720019
         BZ    CHKOFIXD                NO, CHECK FOR FIXED UNBLOCKED    24800019
         LH    GR1,OUTLRECL            LOAD OUTPUT LRECL                24880019
         LTR   GR1,GR1                 LRECL=0 OR LESS                  24960019
         BP    OLRECLOK                NO, OK                           25040019
         SPACE 1                                                        25120019
         BAL   GR8,LRECLBAD            GIVE ERROR MSG                   25200019
         B     GETNEXT                 GO TO ERROR RTN                  25280019
         SPACE 1                                                        25360019
OLRECLOK EQU   *                                                        25440019
         LH    GR3,OBLKSIZE            OUTPUT BLOCKING FACTOR           25520019
         SR    GR2,GR2                                                  25600019
         DR    GR2,GR1                                                  25680019
         LTR   GR2,GR2                 ANY REMAINDER                    25760019
         BZ    SETOBLK                 NO, GO ON                        25840019
         TM    RECFMFLD(GR5),VARREC    VARIABLE LENGTH RECORDS          25920019
         BO    SETOBLK                 YES, GO ON                       26000019
         SPACE 1                                                        26080019
         B     OBLKERR                 GIVE ERROR MSG                   26160019
         SPACE 1                                                        26240019
SETOBLK  EQU   *                                                        26320019
         OI    FORM,FORM3              SET SWITCH FOR BLOCKED OUTPUT    26400019
         B     PUTBLK                  STORE BLOCKING FACTOR            26480019
         SPACE 1                                                        26560019
CHKOFIXD EQU   *                                                        26640019
         TM    RECFMFLD(GR5),FIXEDREC  RIXED RECFM                      26720019
         BZ    UNDEFNOB                NO, GO AROUND                    26800019
         LH    GR1,OUTLRECL            LOAD OUTPUT LRECL                26880019
         LTR   GR1,GR1                 IS IT ZERO                       26960019
         BNZ   OLVOB                   NO, GO ON                        27040019
         MVC   OUTLRECL(LEN2),OBLKSIZE SET OUTPUT LRECL=OUTPUT BLKSIZE  27120019
OLVOB    EQU   *                                                        27200019
         CLC   OUTLRECL(LEN2),OBLKSIZE BLOCKSIZE=LRECL - OUTPUT         27280019
         BE    UNDEFNOB                YES, GO ON                       27360019
         SPACE 1                                                        27440019
         B     OBLKERR                 GIVE ERROR MSG                   27520019
         SPACE 1                                                        27600019
UNDEFNOB EQU   *                                                        27680019
         NI    FORM,XFF-FORM3     RESET OUTPUT BLOCKED SWITCH           27760019
         LA    GR3,LEN1           BLOCKING FACTOR IF UNBLOCKED          27840019
         SPACE 1                                                        27920019
PUTBLK   EQU   *                                                        28000019
         STH   GR3,OBLKFAC             STORE BLOCKING FACTOR            28080019
         XC    NOTRKS(LEN2),NOTRKS                                      28160019
         L     GR2,DEBADDR(GR5)        DEB POINTER FROM DCB             28240019
         SR    GR5,GR5                                                  28320019
         IC    GR5,EXTNODEB(GR2)       PICK FROM DEB NUMBER OF EXTENTS  28400019
         LR    GR8,GR5                 SAVE EXTENT FOR COUNT            28480019
         SLL   GR5,LEN4           MULTIPLY BY 16                        28560019
         LA    GR5,DEBNMTRK(GR5)       UP PAST LAST DEBNMTRK FIELD      28640019
         AR    GR5,GR2                 POINT TO LAST EXTENT DEBNMTRK    28720019
         LA    GR6,LEN16          SIZE OF EXTENT APPENDAGE ON DEB       28800019
         SPACE 1                                                        28880019
EXTENTLP EQU   *                                                        28960019
         SR    GR5,GR6                 BACK UP TO EXTENT DEBNMTRK       29040019
         LH    GR7,LEN0(GR5)      GET NUMBER OF TRACKS IN EXTENT        29120019
         AH    GR7,NOTRKS                                               29200019
         STH   GR7,NOTRKS              UP TOTAL TRACK NUMBER            29280019
         BCT   GR8,EXTENTLP            TOTAL TRACKS IN ALL EXTENTS      29360019
         LA    GR9,CMPINOUT            SET UP RETURN ADDRESS TO BE      29440019
*                                        USED LATER ON WHEN A           29520019
*                                        VALIDATION ERROR OCCURS ON     29600019
*                                        AN INPUT DATA SET              29680019
         B     CMPINOUT                COMPARE INPUT AND OUTPUT DATA    29760019
*                                         DATA SETS                     29840019
DV000200 EQU   *                                                 X010XX 29890000
         SPACE 1                                                 X010XX 29900000
         LA    GR1,PARMLST             LOAD PARAMETER LIST       X010XX 29910000
*                                       ADDRESS                  X010XX 29912000
         L     GR15,VLDUL2             LOAD ADDRESS OF UNLOAD    X010XX 29914000
*                                       INITIALIZATION ROUTINE   X010XX 29916000
         BALR  GR14,GR15               OPEN UNLOAD DATA SET      X010XX 29918000
         SPACE 1                                                 X010XX 29918400
         LTR   GR15,GR15               ERROR FOUND BY IEBLDUL2   X010XX 29918800
         BZ    TSTCMPRS                NO, CHECK FOR PARM=       X010XX 29919200
*                                       COMPRESS                 X010XX 29919600
         B     GETNEXT                 YES, GO TO ERROR ROUTINE  X010XX 29919700
         SPACE                                                          29920019
         TITLE 'IEBDV1 VALIDATE ROUTINE- IN DATA SET - IEBDV2'          30000019
         DS    0F                      FORCE ALIGNMENT                  30080019
IEBDV2   EQU   *                                                        30160019
*ENTRY VALIDATE/OPEN INPUT DATA SET- NOT FIRST ONE                    * 30240019
         SAVE  (14,12),,IEBDV2                                          30320019
         BALR  GR12,GR0           GET ADDRESSABILITY                    30400019
         LA    GR15,IEBDV2-IEBDV1      ESTABLISH TOTAL ADDRESSABILITY   30480019
         SR    GR12,GR15               RELATIVE TO START OF CSECT       30560019
         ST    GR13,SV5+SAV4      POINTER TO OLD SAVE AREA              30640019
         LA    GR15,SV5                 PTR TO SAVE AREA                30720019
         ST    GR15,LEN8(GR13)                                          30800019
         LR    GR13,GR15               POINTER TO NEW SAVE AREA         30880019
         NI    FLG3,XFF-OUTPUTEP  RESET FOR ENTRY AT DV2                30960019
         LA    GR5,OUTDCB         GET POINTER TO OUTPUT DCB      A38778 30970021
         TM    DCBRECFM,OVERFLOW  IS OUTPUT TRACK OVERFLOW       A38778 30980021
         BO    DV105000           YES, GO AROUND                 A38778 30990021
         SPACE 1                                                 A38778 31000021
         NI    FORM,XFF-FORM4     RESET SWITCH INDICATING OUTPUT A38778 31010021
*                                OR INPUT PDS HAS TRACK OVERLLOW A38778 31020021
DV105000 EQU   *                                                 A38778 31030021
         LA    GR9,CMPINOUT            TO BE USED LATER FOR BRANCH      31040019
         SPACE 1                                                        31120019
*                                                                     * 31200019
*                  READ IN JFCB THEN OPEN AND THEN OBTAIN DSCB TO     * 31280019
*         GET BLOCKSIZE, TTRS AND TRACK BALANCE OF OUTPUT DATA SET,   * 31360019
*         AND CHECK DATA SET ORGANIZATION FOR PARTITIONED.            * 31440019
*                  GR5 MAINTAINS DCB ADDRESS AS LONG AS NECESSARY     * 31520019
*                                                                     * 31600019
         SPACE 1                                                        31680019
DOINDCB  EQU   *                                                        31760019
         LA    GR5,INDCB                                                31840019
         MVC   DDVALNM(LEN8),DDNAME1(GR5) SAVE NAME OF DS VALIDATING    31920019
         NI    ULLDST,XFF-LOAD         TURN OFF LOAD SWITCH      X010XX 32000000
         MVI   DCBKEYLE,X00            CLEAR DCB KEYLEN FIELD    X010XX 32050000
         NI    DCBOPTCD,AOSFB          CLEAR DCB OPTCD FIELD     X010XX 32060000
         MVI   DCBRECFM,X00            CLEAR DCB RECFM FIELD     X010XX 32070000
         LA    GR1,JFCB1               POINTER TO JFCB                  32080019
         ST    GR1,LIST1               STORE IN EXIT LIST               32160019
         MVI   LIST1,JFCBECON          SET FOR JFCB EXIT+LAST           32240019
         SPACE                                                          32320019
         DEVTYPE DDVALNM,INCHAR,DEVTAB GET INPUT DEVICE DATA     S20201 32400020
         LTR   GR15,GR15               MISSING DD CARD                  32480019
         BZ    IDDPRES                 NO, OK                           32560019
         SPACE 1                                                        32640019
         BAL   GR8,NODDCD              GIVE ERROR MSG                   32720019
         B     GETNEXT                 GO TO ERROR RTN                  32800019
         SPACE 1                                                        32880019
IDDPRES  EQU   *                                                        32960019
         BAL   GR7,CHECKCAT            CHECK FOR CONCATENATION          33040019
         SPACE                                                          33680019
         RDJFCB ((GR5))                                                 33760019
         LA    GR8,JFCB1               JFCB BUFFER ADDRESS              33840019
         MVC   INDSNAME(LEN44),JFCBDSNM  MOVE INPUT DSNAME TO COMM AREA 33920019
         MVC   INVOL(LEN6),JFCBVOLS    SAVE INPUT VOLID                 33970000
         SPACE 1                                                 X010XX 34050100
         CLI   INUCBTP,UCBDIRCT        IS INPUT DATA SET DASD    X010XX 34060100
         BNE   DV000600                NO, GO TO LOAD INITIALIZ- X010XX 34070100
*                                        ATION ROUTINE           X010XX 34072100
         SPACE 1                                                 X010XX 34074100
         NI    FLG3,XFF-ENTOBT         FIRST OBTAIN FOR DATASET OY01182 34074202
INOBT    EQU   *                                                OY01182 34074302
         OBTAIN  OBTL                  OBTAIN INPUT DSCB        OY01182 34074402
         LTR   GR15,GR15               OBTAIN OK                OY01182 34074502
         BZ    DV000400                YES,GO ON                OY01182 34074602
         LA    GR8,LEN4                                         OY01182 34074702
         CR    GR15,GR8                VOLUME NOT MOUNTED       OY01182 34074802
         BH    BDIOBT                  NO,VALIDATION ERROR      OY01182 34074902
         TM    FLG3,ENTOBT             DONT LOOP                OY01182 34075002
         BO    BDIOBT                                           OY01182 34075102
         MVI   MNTJFCB+117,X01         1 VOLUME ON LIST         OY01182 34075202
         MVC   MNTJFCB+118(LEN6),INVOL GET VOLSER               OY01182 34075302
         MVI   MNTJFCB+124,X40         NO MORE VOLUMES          OY01182 34075402
         LA    GR7,INOBT               SET RETURN ADDRESS       OY01182 34075502
         B     OPENVTOC                GO ISSUE MOUNT REQUEST   OY01182 34075602
BDIOBT   EQU   *                                                OY01182 34075702
         SPACE 1                                                 X010XX 34078800
         BAL   GR8,OBTAINBD            GIVE ERROR MESSAGE        X010XX 34079200
         B     GETNEXT                 GO TO ERROR ROUTINE       X010XX 34079600
         SPACE 1                                                 X010XX 34079700
DV000400 EQU   *                                                 X010XX 34079800
         LA    GR2,DSCB                LOCATION DSCB JUST READ   X010XX 34079900
         TM    DS1DSORG(GR2),PARTORG   PARTITIONED PRGANIZATION  X010XX 34106600
         BO    INPDS                   YES, GO OPEN DCB          X010XX 34116600
         SPACE 1                                                 X010XX 34126600
         TM    DS1DSORG(GR2),BADDSORG  IS OR DA DSORG            X010XX 34128600
         BZ    DV000600                NO, GO TO LOAD INITIALIZ- X010XX 34130600
*                                        ATION ROUTINE           X010XX 34132600
         SPACE 1                                                 X010XX 34133000
         BAL   GR8,DV000800            GIVE ERROR MESSAGE        X010XX 34133100
         B     GETNEXT                 GO TO ERROR ROUTINE       X010XX 34133200
         SPACE 1                                                 X010XX 34142100
INPDS    EQU   *                                                 X010XX 34144100
         SPACE 1                                                 X010XX 34151100
         OPEN  ((GR5),INPUT),TYPE=J    OPEN INPUT DCB                   34160019
         TM    OPENFLGS(GR5),OPENOK    OPEN ERROR                       34240019
         BO    INOPEND                 NO, OK                           34320019
         SPACE 1                                                        34400019
         BAL   GR8,OPENBAD             GIVE ERROR MSG                   34480019
         B     GETNEXT                 GO TO ERROR RTN                  34560019
         SPACE 1                                                        34640019
INOPEND  EQU   *                                                        34720019
         L     GR1,DEBADDR(GR5)        DEB POINTER FROM DCB             34800019
         LA    GR1,LEN0(GR1)      CLEAR HIGH ORDER BYTE                 34880019
         XC    FDADADDR(LEN8,GR5),FDADADDR(GR5) CLEAR FDAD FIELD IN DCB 34960019
         MVC   FDADADDR+LEN1(LEN6,GR5),DEBBCCHH(GR1) BBCCHH -FDAD-INDCB 35040019
         B     SETFIXED                BRANCH AROUND LOAD CODE   X010XX 35090000
         SPACE 1                                                 X010XX 35100000
DV000600 EQU   *                                                 X010XX 35110000
         LA    GR1,PARMLST             LOAD PARAMETER LIST       X010XX 35112000
*                                       ADDRESS                  X010XX 35114000
         L     GR15,VLDUL1             LOAD ADDRESS OF LOAD INIT-X010XX 35116000
*                                       IALIZATION ROUTINE       X010XX 35118000
         BALR  GR14,GR15               OPEN LOAD DCB             X010XX 35118400
         SPACE 1                                                 X010XX 35118800
         LTR   GR15,GR15               ERROR FOUND BY IEBLDUL1   X010XX 35119200
         BP    GETNEXT                 YES, GO TO ERROR ROUTINE  X010XX 35119600
         SPACE 1                                                 X010XX 35119700
         SPACE 1                                                        35120019
SETFIXED EQU   *                                                        36480019
         NI    FORM,XFF-FORM1     SET FOR FIXED INPUT                   36560019
         TM    RECFMFLD(GR5),VARREC    INPUT V (OR U)                   36640019
         BNO   CHECKBLK                NO, GO AROUND                    36720019
         OI    FORM,FORM1              SET FOR V RECORDS   (OR U)       36800019
CHECKBLK EQU *                                                          36880019
         LA    GR8,JFCB1               POINTER TO JFCB                  36960019
         LH    GR7,JFCBLKSZ(GR0,GR8)   LOAD JFCB BLKSIZE                37040019
         LTR   GR7,GR7                 IS IT ZERO                       37120019
         BP    STOREBLK                NO, LET IT OVER-RIDE DSCB        37200019
         LH    GR7,DS1BLKL(GR2)        DATA SET BLOCK LENGTH DSCB       37280019
         LTR   GR7,GR7                 BLOCKSIZE ZERO                   37360019
         BP    STOREBLK                NO, OK                           37440019
         SPACE 1                                                        37520019
IBLKERR  EQU   *                                                        37600019
         BAL   GR8,BLOCKERR            GIVE ERROR MSG                   37680019
         B     GETNEXT                 GO TO ERROR RTN                  37760019
         SPACE 1                                                        37840019
STOREBLK EQU   *                                                        37920019
         STH   GR7,IBLKSIZE            STORE INPUT BLOCKSIZE            38000019
         LH    GR6,JFCBLREC(GR0,GR8)   LOAD JFCB LRECL                  38080019
         LTR   GR6,GR6                 IS IT ZERO                       38160019
         BP    STORELRC                NO, LET IT OVER-RIDE DSCB        38240019
         LH    GR6,DS1LRECL(GR2)       DATA SET LRECL IN DSCB           38320019
STORELRC EQU   *                                                        38400019
         STH   GR6,INLRECL             STORE INPUT LRECL                38480019
         SPACE 1                                                        38560019
         TM    RECFMFLD(GR5),OVERFLOW  DEVICE HAVE OVERFLOW- INPUT      38640019
         BNO   NOTOVRFO                NO, INPUT NOT OVERFLOW           38720019
TRKOVRST EQU   *                                                        38800019
         OI    FORM,FORM4              SET FOR A DATA SET WITH OVERFLOW 38880019
NOTOVRFO EQU   *                                                        38960019
         TM    RECFMFLD(GR5),UNDEFREC  RECORD FORMAT UNDEFINED TYPE     39040019
         BO    SKPLRECL           UNDEFINED RECORDS LRECL=0             39120019
         TM    RECFMFLD(GR5),VARREC    IS INPUT VARIABLE                39200019
         BNO   CHKINBLK                NO, GO ON                        39280019
         SPACE 1                                                        39360019
         LH    GR6,IBLKSIZE            LOAD INPUT BLKSIZE               39440019
         LH    GR1,INLRECL             LOAD INPUT LRECL                 39520019
         LA    GR1,LEN4(GR0,GR1)  ADD 4 TO LRECL                        39600019
         SR    GR6,GR1                 BLKSIZE=LRECL+4  (OR MORE)       39680019
         BNM   CHKINBLK           YES, GO ON                            39760019
         SPACE 1                                                        39840019
         B     IBLKERR                 GIVE ERROR MESSAGE               39920019
         SPACE 1                                                        40000019
CHKINBLK EQU   *                                                        40080019
         TM    RECFMFLD(GR5),BLOCKREC  RECORDS BLOCKED                  40160019
         BZ    CHKIFIXD                NO, CHECK FOR FIXED UNBLOCKED    40240019
         LH    GR1,INLRECL             LOAD INPUT LRECL                 40320019
         LTR   GR1,GR1                 LRECL=0 OR LESS                  40400019
         BP    ILGTZERO                NO, OK                           40480019
         SPACE 1                                                        40560019
ILRECERR EQU   *                                                        40640019
         BAL   GR8,LRECLBAD            GIVE ERROR MSG                   40720019
         B     GETNEXT                 GO TO ERROR RTN                  40800019
         SPACE 1                                                        40880019
ILGTZERO EQU   *                                                        40960019
         LH    GR7,IBLKSIZE            INPUT BLOCK SIZE                 41040019
         SR    GR6,GR6                                                  41120019
         DR    GR6,GR1                                                  41200019
         LTR   GR6,GR6                 ANY REMAINDER                    41280019
         BZ    SETIBLK                 NO, GO ON                        41360019
         TM    RECFMFLD(GR5),VARREC    VARIABLE LENGTH RECORDS          41440019
         BO    SETIBLK                 YES, GO ON                       41520019
         SPACE 1                                                        41600019
         B     IBLKERR                 GIVE ERROR MSG                   41680019
         SPACE 1                                                        41760019
SETIBLK  EQU   *                                                        41840019
         OI    FORM,FORM2              SET INPUT BLOCKED SWITCH         41920019
         B     GETDEVIN                STORE BLOCKING FACTOR            42000019
         SPACE 1                                                        42080019
CHKIFIXD  EQU   *                                                       42160019
         TM    RECFMFLD(GR5),FIXEDREC  FIXED RECFM                      42240019
         BZ    SKPLRECL                NO, GO AROUND                    42320019
         LH    GR1,INLRECL             LOAD INPUT LRECL                 42400019
         LTR   GR1,GR1                 IS IT ZERO                       42480019
         BNZ   ILVIB                   NO, GO ON                        42560019
         MVC   INLRECL(LEN2),IBLKSIZE  SET INPUT LRECL=INPUT BLKSIZE    42640019
ILVIB    EQU   *                                                        42720019
         CLC   IBLKSIZE(LEN2),INLRECL  BLKSIZE=LRECL - INPUT            42800019
         BE    SKPLRECL                YES, GO ON                       42880019
         SPACE 1                                                        42960019
         B     IBLKERR                 GIVE ERROR MSG                   43040019
         SPACE 1                                                        43120019
SKPLRECL EQU   *                                                        43200019
         LA    GR7,LEN1           ASSUME BLOCKING FACTOR OF 1           43280019
         NI    FORM,XFF-FORM2     RESET INPUT BLOCKED SWITCH            43360019
GETDEVIN EQU   *                                                        43440019
         STH   GR7,IBLKFAC             BLOCKING FACTOR                  43520019
         BR    GR9                     RETURN TO DV1 IF OPENING OUTPUT  43600019
*                                         NEXT OR FALL THROUGH AND      43680019
*                                         COMPARE INPUT VS. OUTPUT      43760019
         SPACE 1                                                        43840019
CMPINOUT EQU   *                                                        43920019
         SPACE 1                                                        44000019
         L     GR1,NXTINDS             LOAD POINTER TO INDD NAME        44080019
         MVC   DDVALNM(LEN8),LEN2(GR1) MOVE IN INDD NAME IN CASE AN     44160019
*                                         ERROR IS FOUND                44240019
         SPACE 1                                                        44320019
         NI    FLG3,XFF-REBLK     RESET BLOCKING SWITCH                 44400019
         LA    GR3,OUTDCB              POINTER TO OUT DCB               44480019
         LA    GR5,INDCB               POINTER TO INPUT DCB             44560019
         SPACE 1                                                        45120019
GOONSS   EQU   *                                                        45200019
         CLC   KEYLENGT(LEN1,GR5),OKEYLEN  EQUAL KEY LENGTHS            45280019
         BE    KEYSOK                  YES, GO ON                       45360019
         SPACE 1                                                        45440019
         BAL   GR8,KEYERR              GIVE ERROR MSG                   45520019
         B     GETNEXT                 GO TO ERROR RTN                  45600019
         SPACE 1                                                        45680019
KEYSOK   EQU   *                                                        45760019
         TM    RECFMFLD(GR3),UNDEFREC  IS OUTPUT U                      45840019
         BO    BLKTEST                 TEST BLOCKSIZE          @ZA06526 45920099
         MVC   WKA1(LEN1),RECFMFLD(GR5) RECORD FORMAT FROM INDCB        46000019
         XC    WKA1(LEN1),RECFMFLD(GR3) RECORD FORMAT FROM OUTDCB       46080019
         TM    WKA1,FIXEDREC+VARREC    F TO V OR V TO F                 46160019
         BZ    THERECMP                NO, GO ON                        46240019
         SPACE 1                                                        46320019
         BAL   GR8,UNEQRCFM            GIVE ERROR MSG                   46400019
         B     GETNEXT                 GO TO ERROR RTN                  46480019
         SPACE 1                                                        46530099
BLKTEST  EQU   *                                               @ZA06526 46540099
         TM    RECFMFLD(GR5),UNDEFREC  IS INPUT U              @ZA07344 46542099
         BO    COMPTEST                YES-OK                  @ZA07344 46544099
         CLC   OBLKSIZE(LEN2),IBLKSIZE BLKSIZES THE SAME       @ZA06526 46550099
         BE    COMPTEST                YES-TEST FOR COMPRESS   @ZA06526 46552099
         BAL   GR8,NOREDEB             NO-GIVE ERROR MSG132    @ZA06526 46554099
         B     GETNEXT                 GO TO ERROR RTN         @ZA06526 46556099
         SPACE 1                                                        46560019
THERECMP EQU   *                                                        46640019
         CLC   INLRECL(LEN2),OUTLRECL   LOGICAL RECORD LENGTHS EQUAL    46720019
         BE    SETREBLK                YES, OK                          46800019
         SPACE 1                                                        46880019
         B     ILRECERR                GIVE ERROR MSG                   46960019
         SPACE 1                                                        47040019
         SPACE 1                                                        47120019
SETREBLK EQU   *                                                        47200019
         CLC   OBLKSIZE(LEN2),IBLKSIZE  BLOCKING FACTORS THE SAME       47280019
         BE    COMPTEST                YES, NO REBLOCKING               47360019
         TM    FORM,FORM4              INPUT OR OUTPUT HAVE TRACK OVERF 47440019
         BNO   CHKFRKEY                NO, GO ON                        47520019
         SPACE 1                                                        47600019
         BAL   GR8,NOREBLOV            GIVE ERROR MSG                   47680019
         B     GETNEXT                 GO TO ERROR RTN                  47760019
         SPACE 1                                                        47840019
CHKFRKEY EQU   *                                                        47920019
         MVC   WKA1(LEN1),OKEYLEN   INPUT OR                            48000019
         OC    WKA1(LEN1),KEYLENGT(GR5)  OUTPUT KEYED                   48080019
         BZ    NOKEYS                  NO, GO ON                        48160019
         SPACE 1                                                        48240019
         BAL   GR8,NOREBLKY            GIVE ERROR MSG                   48320019
         B     GETNEXT                 GO TO ERROR RTN                  48400019
         SPACE 1                                                        48480019
NOKEYS   EQU   *                                                        48560019
         OI    FLG3,REBLK              SET FLAG FOR REBLOCKING          48640019
         SPACE 1                                                        48720019
**  CHECK FOR COMPRESS                                                  48800019
         SPACE 1                                                        48880019
COMPTEST EQU   *                                                        48960019
         SPACE 1                                                        49040019
         CLC   INDSNAME(LEN44),OTDSNAME  DSNAMES EQUAL                  49120019
         BNE   TSTCMPRS                NO, CHECK PARM=COMPRESS          49200019
         CLC   OUTVOL(LEN6),INVOL  VOLUME=SER'S EQUAL                   49280019
         BNE   TSTCMPRS                NO, CHECK PARM=COMPRESS          49360019
         TM    DSCB+DS1DSORG,UNMOVEBL  IS OUTPUT (ALSO INPUT) DATA      49440019
*                                        SET UNMOVEABLE                 49520019
         BNO   TESTKEYS                NO, GO ON                        49600019
         SPACE 1                                                        49680019
         BAL   GR8,NOMOVE              GIVE ERROR MSG                   49760019
         B     GETNEXT                 TRY NEXT INPUT DATA SET          49840019
         SPACE 1                                                        49920019
TESTKEYS EQU   *                                                        50000019
         OC    OKEYLEN(LEN1),OKEYLEN  KEY LENGTH = 0                    50080019
         BZ    TESTRB                  NO, GO ON                        50160019
         SPACE 1                                                        50240019
         BAL   GR8,NCMPKEYS            GIVE ERROR MSG                   50320019
         B     GETNEXT                 GO TO ERROR RTN                  50400019
         SPACE 1                                                        50480019
TESTRB   EQU   *                                                        50560019
         TM    FLG3,REBLK              RE/DE BLOCKING REQUESTED         50640019
         BZ    TESTSE                  NO, GO ON                        50720019
         SPACE 1                                                        50800019
         BAL   GR8,NCMPRB              GIVE ERROR MSG                   50880019
         B     GETNEXT                 GO TO ERROR RTN                  50960019
         SPACE 1                                                        51040019
TESTSE   EQU   *                                                        51120019
         TM    COMDCDSW,SELECTSC+EXCLUDES  SELECTIVE OR EXCLUSIVE       51200019
*                                          COPY OPERATION               51280019
         BZ    TESTOV                  NO, GO ON                        51360019
         SPACE 1                                                        51440019
         BAL   GR8,NCMPSE              GIVE ERROR MESSAGE               51520019
         B     GETNEXT                 GO TO ERROR ROUTINE              51600019
         SPACE 1                                                        51680019
TESTOV   EQU   *                                                        51760019
         TM    FORM,FORM4              TRACK OVERFLOW                   51840019
         BZ    SETCMPSW                NO, GO ON                        51920019
         SPACE 1                                                        52000019
         BAL   GR8,NCMPOV              GIVE ERROR MSG                   52080019
         B     GETNEXT                 GO TO ERROR RTN                  52160019
         SPACE 1                                                        52240019
SETCMPSW EQU   *                                                        52320019
         OI    COMDCDSW,COMPRESS       SET COMPRESS BIT                 52400019
         BAL   GR8,COMPMESS            GIVE COMPRESS MESSAGE            52480019
         B     LEAVE                   GO ON                            52560019
         SPACE 1                                                        52640019
TSTCMPRS EQU   *                                                        52720019
         TM    COMDCDSW,COMPRESS       WAS PARM=COMPRESS                52800019
         BNO   LEAVE                   NO, GO ON                        52880019
         NI    COMDCDSW,XFF-COMPRESS  TURN OFF COMPRESS SWITCH          52960019
         BAL   GR8,NCMPMSG             GIVE NO COMPRESS MSG             53040019
         SPACE 1                                                        53120019
LEAVE    EQU   *                                                        53200019
         SPACE 1                                                        53280019
         L     GR13,SV5+SAV4      CALLERS SAVE AREA                     53360019
         RETURN (14,12)                RETURN TO CALLER- NO ERRORS      53440019
         TITLE 'IEBDV1 VALIDATE ROUTINE- SYSPRINT/SYSIN - IEBDV0'       53520019
         DS    0F                      FORCE ALIGNMENT                  53600019
IEBDV0   EQU   *                                                        53680019
*ENTRY VALIDATE/OPEN SYSPRINT/SYSIN                                     53760019
         SAVE  (14,12),,IEBDV0                                          53840019
         BALR  GR12,GR0           SET BASE REGISTER UP                  53920019
         LA    GR15,IEBDV0-IEBDV1      ESTABLISH TOTAL ADDRESSIBILITY   54000019
         SR    GR12,GR15               RELATIVE TO START OF CSECT       54080019
         ST    GR13,SV5+SAV4      POINTER TO OLD SAVE AREA              54160019
         LA    GR15,SV5                 PTR TO SAVE AREA                54240019
         ST    GR15,LEN8(GR13)                                          54320019
         LR    GR13,GR15               POINTER TO NEW SAVE AREA         54400019
         SPACE 1                                                        54480019
*                    OPEN AND VALIDATE SYSPRINT                       * 54560019
         SPACE 1                                                        54640019
         LA    GR5,PRTDCB              PRINTER DCB POINTER              54720019
         MVC   SYNADADR(LEN4,GR5),VIEBPER  ADDR OF SYSPRNT SYNAD TO DCB 54800019
         LA    GR3,PRDEXLST            PRINTER EXLST HANDLER- SYSIN TOO 54880019
         ST    GR3,LIST2               SET POINTER INTO EXIT LIST       54960019
         MVI   LIST2,LIST2SET          SET CODE FOR OPEN EXLST          55040019
         MVC   DDVALNM(LEN8),DDNAME1(GR5) SAVE NAME OF DS VALIDATING    55120019
         SPACE 1                                                        55200019
         OPEN  ((GR5),OUTPUT)          OPEN SYSPRINT                    55280019
         SPACE 1                                                        55360019
         TM    OPENFLGS(GR5),OPENOK    OPEN ERROR                       55440019
         BO    PRTOPEN                 NO, GO ON                        55520019
         SPACE                                                          55600019
ROTTENPT EQU   *                                                        55680019
         OI    IOEF2,SPRNOPN           SET SYSPRINT NOT OPEN SWITCH     55760019
         MVI   MSG1+LEN1,BADPRINT   BAD SYSPRINT MESSAGE                55840019
         MVI   MSG1,LASTMSG+PBIT       LAST MSG + BUILD                 55920019
         MVI   NAMEDISP,X00       OFFSET FOR NAME                       56000019
         MVI   PARAMS,NAME             EBDIC MSG                        56080019
         BAL   GR8,GIVEMES4            GIVE MESSAGE              A44144 56160022
         SPACE                                                          56240019
PRTOPEN  EQU   *                                                        56320019
         TM    CCDELIM,BADBLOCK        WAS THERE AN ERROR IN BLOCKSIZE  56400019
         BNO   OPENSYSN                NO, GO ON                        56480019
         NI    CCDELIM,XFF-BADBLOCK  TURN OFF ERROR SWITCH              56560019
         SPACE 1                                                        56640019
         CLOSE ((GR5))                 CLOSE SYSPRINT                   56720019
         SPACE 1                                                        56800019
         L     GR3,AMSG                LOAD POINTER TO MESSAGE CSECT    56880019
         USING IEBDV1MG,GR3            ADDRESSABILITY TO MSG CSECT      56960019
         MVI   MSGBUF,X40         SET BLANK IN BUFFER                   57040019
         MVC   MSGBUF+LEN1(LEN120),MSGBUF  CLEAR MSG BUFFER             57120019
         MVC   MSGBUF+LEN1(LEN37),TEXT1 SET INVALID SYSPRINT BLKSIZE    57200019
*                                         MSG IN BUFFER                 57280019
         MVC   MSGBUF+LEN10(LEN8),DDNAME1(GR5) MOVE DDNAME TO MESSAGE   57360019
         DROP  GR3                                                      57440019
         OI    IOEF2,SPRNOPN           SET SYSPRINT NOT OPEN SWITCH     57520019
         MVI   MSG1,IOERF+LASTMSG      SET AS SYNAD MSG+LAST            57600019
         BAL   GR8,GIVEMES4            SET RCD WRITE MESSAGE     A44144 57650022
         SPACE 1                                                        57840019
*                     OPEN AND VALIDATE SYSIN                         * 57920019
OPENSYSN EQU   *                                                        58000019
         LA    GR5,CARDCB              SYSIN DCB                        58080019
         MVC   EOFADDRS(LEN3,GR5),VIEBEOF+LEN1  SYSIN EODAD - TO DCB    58160019
         MVC   SYNADADR(LEN4,GR5),VIEBCER  ADDR OF SYSIN SYNAT TO DCB   58240019
         MVC   DDVALNM(LEN8),DDNAME1(GR5)  MOVE NAME TO BUFFER          58320019
         SPACE 1                                                        58400019
         OPEN  ((GR5),INPUT)           OPEN SYSIN                       58480019
         SPACE 1                                                        58560019
         TM    OPENFLGS(GR5),OPENOK    OPEN ERROR                       58640019
         BO    INOPEN                  NO, GO ON                        58720019
         SPACE                                                          58800019
         BAL   GR8,OPENBAD             GIVE MESSAGE                     58880019
ROTTENIN EQU   *                                                        58960019
         MVI   RCBUF,RTCDE        SET RETURN CODE=8                     59040019
         OI    IOEF2,NOSYSIN           SET SYSIN ERROR SWITCH           59120019
         OI    VTMFLG1,UNUSEND         SET SWITCH FOR VTM               59200019
         OI    FLG4,NEWODS             SET SWITCH FOR VTM               59280019
         B     SYSINVTM                TERMINATE                        59360019
         SPACE                                                          59440019
INOPEN   EQU   *                                                        59520019
         TM    CCDELIM,BADBLOCK        WAS THERE AN ERROR IN BLOCKSIZE  59600019
         BNO   SYSINOK                 NO, CONTINUE                     59680019
         SPACE 1                                                        59760019
         CLOSE ((GR5))                 CLOSE SYSIN                      59840019
         SPACE 1                                                        59920019
         BAL   GR8,BLOCKERR            GIVE ERROR MSG                   60000019
         B     ROTTENIN                TERMINATE                        60080019
         SPACE 1                                                        60160019
SYSINOK  EQU   *                                                        60240019
         MVI   CPARAMSW,READ1          PREPARE SO SCAN WILL READ A CARD 60320019
         USING CVT,GR1                                           A37881 60370000
         L     GR1,CVTPTR         ADDR OF COMM VECTOR TABLE      A37881 60380000
         L     GR2,CVTSVDCB       ADDR OF DCB FOR SYS1.SVCLIB    X010XX 60390000
         DROP  GR1                                               A37881 60392000
         LOAD  EP=IGG019C8,DCB=(GR2)   PRELOAD PCIAPPENDAGE      X010XX 60394000
         LOAD  EP=IGG019FT,DCB=(GR2)   PRELOAD SIOAPPENDAGE      X010XX 60396000
         B     LEAVE                   ALL DONE- SYSPRINT/SYSIN OK      60400019
         SPACE 1                                                        60480019
*                                      REGISTER 1 HAD DCB ADDRESS       60560019
*  EXIT LIST SYSPRINT/SYSIN            REGISTERS 2-13 SHOULD BE THE     60640019
*                                      SAME AS TIME OPEN WAS GIVEN      60720019
*                                      DON'T CLOBBER REGISTER 14        60800019
         SPACE 1                                                        60880019
PRDEXLST EQU   *        SYSIN/SYSPRINT EXIT LIST HANDLER BLKSIZE CHECK  60960019
         LH    GR6,LRECLDCB(GR1)       OBTAIN LRECL FROM DCB (121)      61040019
*                                      SYSIN DCB MACRO SET FOR 80 BYTES 61120019
         SR    GR8,GR8                 SYSPRINT DCB MACRO SET FOR 121   61200019
         LH    GR9,BLKSZDCB(GR1)       OBTAIN SYSPRINT BLOCKSIZE WHICH  61280019
*  WAS MERGED INTO DCB- OR SHOULD HAVE BEEN. SAME FOR SYSIN             61360019
         LTR   GR9,GR9                 BLOCKSIZE ZERO                   61440019
         BZ    NOBLKSZ                 YES- ASSUME LRECL                61520019
         DR    GR8,GR6                 DIVIDE BLKSIZE BY LRECL          61600019
         LTR   GR8,GR8                 ANY REMAINDER                    61680019
         BCR   MS8,GR14           NO REMAINDER RETURN TO OPEN           61760019
         OI    CCDELIM,BADBLOCK        SET BAD BLOCK SIZE SWITCH        61840019
NOBLKSZ  EQU   *                                                        61920019
         STH   GR6,BLKSZDCB(GR1)       MAKE BLOCKSIZE EQUAL LRECL       62000019
         BR    GR14                    RETURN TO OPEN                   62080019
         TITLE 'IEBDV1 VALIDATE ROUTINE- SYSUT3 DATA SET - IEBDV3'      62160019
         DS    0F                      FORCE ALIGNMENT                  62240019
IEBDV3   EQU   *                                                        62320019
*ENTRY VALIDATE/OPEN SYSUT3 DATA SET                                  * 62400019
         SAVE  (14,12),,IEBDV3                                          62480019
         BALR  GR12,GR0           GET ADDRESSABILITY                    62560019
         LA    GR15,IEBDV3-IEBDV1      ESTABLISH TOTAL ADDRESSIBILITY   62640019
         SR    GR12,GR15               RELATIVE TO START OF CSECT       62720019
         ST    GR13,SV5+SAV4      POINTER TO OLD SAVE AREA              62800019
         LA    GR15,SV5                 PTR TO SAVE AREA                62880019
         ST    GR15,LEN8(GR13)                                          62960019
         LR    GR13,GR15               POINTER TO NEW SAVE AREA         63040019
         SPACE 1                                                        63120019
         LA    GR5,UT3DCB                                               63200019
         LA    GR1,JFCB1               POINTER TO JFCB                  63280019
         ST    GR1,LIST1               STORE IN EXIT LIST               63360019
         MVI   LIST1,JFCBECON          SET JFCB EXIT+LAST ENTRY         63440019
         MVC   DDVALNM(LEN8),DDNAME1(GR5) SAVE NAME OF DS VALIDATING    63520019
         SPACE                                                          63600019
         DEVTYPE DDVALNM,UT3CHAR,DEVTAB GET SYSUT3 DEVICE DATA   S20201 63680020
         LTR   GR15,GR15               MISSING DD CARD                  63760019
         BZ    S3DDPRES                NO, GO ON                        63840019
         SPACE 1                                                        63920019
         BAL   GR8,NODDCD              GIVE ERROR MSG                   64000019
         B     SYSUT3PT                GO TO ERROR RTN                  64080019
         SPACE 1                                                        64160019
S3DDPRES EQU   *                                                        64240019
         CLI   UT3UCBTP,UCBDIRCT       IS SYSUT3 DASD                   64320019
         BE    UT3DIRCT                YES, GO ON                       64340019
         SPACE 1                                                        64360019
         BAL   GR8,NODIRECT            GIVE ERROR MESSAGE               64380019
         B     SYSUT3PT                GO TO ERROR ROUTINE              64400019
         SPACE 1                                                        64420019
UT3DIRCT EQU   *                                                        64440019
         LH    GR11,UT3LRECL           VALID LRECL                      64480019
         LA    GR9,DEVSYSU3            RETURN FROM 'VALIDS34'           64560019
         SPACE 1                                                        64640019
*                                                                     * 64720019
*  VALIDS34 IS GENERAL SUBROUTINE FOR VALIDATING AND OPENING EITHER   * 64800019
* SYSUT3 OR SYSUT4 UTILITY DATA SET. UPON ENTRY TO VALIDS34, GR9 IS   * 64880019
* SET WITH RETURN ADDRESS AND GR5 IS SET WITH DCB ADDRESS OF DATA SET * 64960019
* GR6 IS SET WITH UT3DS1 OR UT4DS1- TTR/TRACK BALANCE LAST RECORD BUF.* 65040019
* TO VALIDATE AND OPEN AND GR11 IS SET WITH VALID LRECL FOR THE DATA  * 65120019
* SET. SYSUT3 LRECL = 80 BYTES, SYSUT4 DATA SET LRECL = 272 BYTES     * 65200019
* GR2 HAS A POINTER TO BUFFER FOR MBBCCHHR OF LAST RECORD ON DATA SET * 65280019
*                                                                     * 65360019
         SPACE 1                                                        65440019
VALIDS34 EQU   *                                                        65520019
*                                                                     * 65600019
*                  READ IN JFCB AND OPEN                              * 65680019
*                                                                     * 65760019
         RDJFCB ((GR5))                READ JFCB SYSUT3 OR SYSUT4       65840019
         LA    GR8,JFCB1               JFCB BUFFER ADDRESS              65920019
         STH   GR11,JFCBLREC(GR8)      STORE LRECL IN JFCB              66000019
         STH   GR11,JFCBLKSZ(GR8)      STORE BLKSIZE IN JFCB            66080019
         SPACE 1                                                        66160019
         OPEN  ((GR5),OUTIN),TYPE=J    OPEN SYSUT3 AND SYSUT4           66240019
         BR    GR9                     RETURN                           66320019
         SPACE 1                                                        66400019
DEVSYSU3 EQU   *                                                        66480019
         TM    OPENFLGS(GR5),OPENOK    OPEN ERROR                       66560019
         BO    UT3OPEN                 NO, OK                           66640019
         SPACE 1                                                        66720019
         BAL   GR8,OPENBAD             GIVE MESSAGE                     66800019
         B     SYSUT3PT                GO TO ERROR RTN                  66880019
         SPACE 1                                                        66960019
UT3OPEN  EQU   *                                                        67040019
         L     GR1,DEBADDR(GR5)        DEB POINTER FROM DCB             67120019
         XC    UT3FDAD(LEN8),UT3FDAD   SET FDAD                         67200019
         MVC   UT3FDAD+LEN1(LEN6),DEBBCCHH(GR1)  IN BUFFER              67280019
         XC    UT3DS1(LEN8),UT3DS1   CLEAR TTR AND TRACK SIZE           67360019
         MVC   UT3DS1+LEN4(LEN2),UT3TSIZE SET TRK BALANCE=TRK SIZE      67440019
         MVC   SYS3TTR(LEN8),UT3DS1  MOVE TTRN/TB TO BACK UP BUFFER     67520019
         MVC   TRKBALAN(LEN2,GR5),UT3TSIZE  SET TRK BALANCE IN DCB      67600019
         MVC   FDADADDR(LEN8,GR5),UT3FDAD  SET FDAD IN DCB              67680019
         B     LEAVE                   RETURN- VALIDATE SYSUT3 DONE     67760019
         EJECT                                                          67840019
*********************************************************************** 67920019
*                                                                     * 68000019
*   THIS ROUTINE IS ENTERED WHEN A VALIDATION ERROR OCCURS ON         * 68080019
*  SYSUT3 OR SYSUT4.  IT HAS TWO ENTRY POINTS 'SYSUT3PT' FOR SYSUT3   * 68160019
*  AND 'SYSUT4PT' FOR SYSUT4                                          * 68240019
*                                                                     * 68320019
*********************************************************************** 68400019
         SPACE 1                                                        68480019
SYSUT4PT EQU   *                                                        68580019
         NI    FLG4,XFF-ODALT     TURN OFF ODALT                        68650019
         B     UT34OPEN                GO AROUND                        68730019
SYSUT3PT EQU   *                                                        68780019
         OI    FLG7,NOPRNBDB+SUPPRMSG  INHIBIT SOME MSGS BY IEBVTM      68880019
UT34OPEN EQU   *                                                        68980019
         TM    OPENFLGS(GR5),OPENOK    WORK FILE OPEN                   69120019
         BNO   WCLOSED                 NO, GO AROUND                    69200019
         SPACE 1                                                        69280019
         CLOSE ((GR5))                 CLOSE WORK FILE                  69360019
         SPACE 1                                                        69440019
WCLOSED  EQU   *                                                        69520019
         MVI   RCBUF,RTCDE             SET RETURN CODE=8         A44144 69600022
         B     TERMINAT                TERMINATE                        69680019
         TITLE 'IEBDV1 VALIDATE ROUTINE- SYSUT4 DATA SET - IEBDV4'      69760019
         DS    0F                      FORCE ALIGNMENT                  69840019
IEBDV4   EQU   *                                                        69920019
*ENTRY VALIDATE/OPEN SYSUT4 DATA SET                                  * 70000019
         SAVE  (14,12),,IEBDV4                                          70080019
         BALR  GR12,GR0           GET ADDRESSABILITY                    70160019
         LA    GR15,IEBDV4-IEBDV1      ESTABLISH TOTAL ADDRESSIBILITY   70240019
         SR    GR12,GR15               RELATIVE TO START OF CSECT       70320019
         ST    GR13,SV5+SAV4      POINTER TO OLD SAVE AREA              70400019
         LA    GR15,SV5                 PTR TO SAVE AREA                70480019
         ST    GR15,SAV8(GR13)                                          70560019
         LR    GR13,GR15               POINTER TO NEW SAVE AREA         70640019
         SPACE 1                                                        70720019
         LA    GR5,UT4DCB              DCB TO CHECK                     70800019
         LA    GR1,JFCB1               POINTER TO JFCB                  70880019
         ST    GR1,LIST1               STORE IN EXIT LIST               70960019
         MVI   LIST1,JFCBECON          SET JFCB EXIT+LAST ENTRY         71040019
         MVC   DDVALNM(LEN8),DDNAME1(GR5)  SAVE NAME OF DS VALIDATING   71120019
         SPACE                                                          71200019
         DEVTYPE DDVALNM,UT4CHAR,DEVTAB GET SYSUT4 DEVICE DATA   S20201 71280020
         LTR   GR15,GR15               MISSING DD CARD                  71360019
         BZ    S4DDPRES                NO, GO ON                        71440019
         SPACE 1                                                        71520019
         BAL   GR8,NODDCD              GIVE ERROR MSG                   71600019
         B     SYSUT4PT                GO TO ERROR RTN                  71680019
         SPACE 1                                                        71760019
S4DDPRES EQU   *                                                        71840019
         CLI   UT4UCBTP,UCBDIRCT       IS SYSUT4 DASD                   71920019
         BE    UT4DIRCT                YES, GO ON                       71940019
         SPACE 1                                                        71960019
         BAL   GR8,NODIRECT            GIVE ERROR MESSAGE               71980019
         B     SYSUT4PT                GO TO ERROR ROUTINE              72000019
         SPACE 1                                                        72020019
UT4DIRCT EQU   *                                                        72040019
         LH    GR11,UT4LRECL           VALID LRECL                      72080019
         BAL   GR9,VALIDS34            CHECK SYSUT4 AND OPEN            72160019
         SPACE 1                                                        72240019
         TM    OPENFLGS(GR5),OPENOK    OPEN ERROR                       72320019
         BO    UT4OPEN                 NO, OK                           72400019
         SPACE 1                                                        72480019
         BAL   GR8,OPENBAD             GIVE MESSAGE                     72560019
         B     SYSUT4PT                GO TO ERROR RTN                  72640019
         SPACE 1                                                        72720019
UT4OPEN  EQU   *                                                        72800019
         L     GR1,DEBADDR(GR5)        DEB POINTER FROM DCB             72880019
         XC    UT4FDAD(LEN8),UT4FDAD  SET FDAD                          72960019
         MVC   UT4FDAD+LEN1(LEN6),DEBBCCHH(GR1)  IN BUFFER              73040019
         XC    UT4DS1(LEN8),UT4DS1   CLEAR TTR AND TRACK SIZE           73120019
         MVC   UT4DS1+LEN4(LEN2),UT4TSIZE  SET TRK BAL=TRK SIZE         73200019
         MVC   SYS4TTR(LEN8),UT4DS1  MOVE TTRN/TB TO BACK UP BUFFER     73280019
         MVC   TRKBALAN(LEN2,GR5),UT4TSIZE SET TRK BALANCE IN DCB       73360019
         MVC   FDADADDR(LEN8,GR5),UT4FDAD  SET FDAD IN DCB              73440019
         B     LEAVE                   RETURN- VALIDATE SYSUT4 DONE     73520019
         TITLE 'IEBDV1 VALIDATE ROUTINE MESSAGES AND CONSTANTS'         73600019
*                                                                     * 73680019
*                 VALIDATION ERROR MESSAGES PREPARATION AREA          * 73760019
*                                                                     * 73840019
         SPACE 1                                                        73920019
NOREBLKY EQU   *                                                        74000019
         MVI   MSG2+LEN1,NORBKEYS  NO REBLOCK KEYED RECORDS MESS        74080019
         B     GENVALMS                SET UP HEADER AND THIS MESSAGE   74160019
         SPACE                                                          74240019
CATERROR EQU   *                                                        74320019
         MVI   MSG2+LEN1,CONCATBD  CONCATENATION ERROR                  74400019
         B     GENVALMS                SET UP HEADER AND THIS MESSAGE   74480019
         SPACE 1                                                        74560019
NOREBLOV EQU   *                                                        74640019
         MVI   MSG2+LEN1,NORBOVRF  NO REBLOCK OVERFLOW RECORDS          74720019
         B     GENVALMS                SET UP HEADER AND THIS MESSAGE   74800019
         SPACE 1                                                        74880019
KEYERR   EQU   *                                                        74960019
         MVI   MSG2+LEN1,UNEQKEYS  UNEQUAL KEY LENGTH                   75040019
         B     GENVALMS                SET UP HEADER AND THIS MESSAGE   75120019
         SPACE 1                                                        75200019
UNEQRCFM EQU   *                                                        75280019
         MVI   MSG2+LEN1,RECFMINC  RECORD FORMAT INCOMPATIBLE           75360019
         B     GENVALMS                SET UP HEADER AND THIS MESSAGE   75440019
         SPACE 1                                                        75520019
NOMOVE   EQU   *                                                        75600019
         MVI   MSG1+LEN1,UNMOVEDS                                       75680019
         MVI   MSG1,LASTMSG+PBIT       LAST MSG + BUILD                 75760019
         MVI   NAMEDISP,X00        OFFSET FOR NAME                      75840019
         MVI   PARAMS,NAME             EBDIC NAME                       75920019
         B     GIVEMESS                GIVE MSG                         76000019
         SPACE 1                                                        76080019
NCMPKEYS EQU   *                                                        76160019
         MVI   MSG2+LEN1,INVALRFM  NO COMPRESS WITH KEYS                76240019
         B     GENVALMS                SET UP HEADER AND THIS MSG       76320019
         SPACE 1                                                        76370099
NOREDEB  EQU   *                                               @ZA06526 76380099
         MVI   MSG2+LEN1,INVALRBC      NO RE/DE BLOCK IF UNDEF @ZA06526 76390099
         B     GENVALMS                SET UP HDR AND THIS MSG @ZA06526 76392099
         SPACE 1                                                        76400019
NCMPRB   EQU   *                                                        76480019
         MVI   MSG2+LEN1,M51      NO COMPRESS WITH RE/DE BLOCK          76560019
         B     GENVALMS                SET UP HEADER AND THIS MSG       76640019
         SPACE 1                                                        76720019
NCMPSE   EQU   *                                                        76800019
         MVI   MSG2+LEN1,M39      NO COMPRESS WITH SELECT               76880019
*                                        OR EXCLUDE                     76960019
         B     GENVALMS                SET UP HEADER AND THIS MESSAGE   77040019
         SPACE 1                                                        77120019
NCMPOV   EQU   *                                                        77200019
         MVI   MSG2+LEN1,M50      NO COMPRESS WITH TRKOVFLOW            77280019
         B     GENVALMS                SET UP HEADER AND THIS MSG       77360019
         SPACE 1                                                        77440019
LRECLBAD EQU   *                                                        77520019
         MVI   MSG2+LEN1,INVALREC  INVALID LRECL MESSAGE                77600019
         B     GENVALMS                SET UP HEADER AND THIS MESSAGE   77680019
         SPACE 1                                                        77760019
BLOCKERR EQU   *                                                        77840019
         MVI   MSG2+LEN1,INVALBLK  INVALID BLOCKSIZE                    77920019
         B     GENVALMS                SET UP HEADER AND THIS MESSAGE   78000019
         SPACE 1                                                        78080019
OBTAINBD EQU   *                                                        78160019
         MVI   MSG2+LEN1,OBTAINER  OBTAIN ERROR                         78240019
         B     GENVALMS                SET UP HEADER AND THIS MESSAGE   78320019
         SPACE 1                                                        78400019
DV000800 EQU   *                                                 X010XX 78480000
         MVI   MSG2+LEN1,NOTPDSER  INVALID DSORG                 X010XX 78530000
         B     GENVALMS                SET UP HEADER AND THIS MESSAGE   78640019
         SPACE 1                                                        78720019
NODIRECT EQU   *                                                        78800019
         MVI   MSG2+LEN1,NOTDA     NOT A DASD DATA SET                  78880019
         B     GENVALMS                SET UP HEADER AND THIS MESSAGE   78960019
         SPACE                                                          79040019
NODDCD   EQU   *                                                        79120019
         MVI   MSG2+LEN1,NODDCARD  DD CARD NOT FOUND                    79200019
         B     GENVALMS                SET UP HEADER AND THIS MESSAGE   79280019
         SPACE 1                                                        79360019
COMPMESS EQU   *                                                        79440019
         MVI   MSG1+LEN1,IMPCOMPR  IMPLIED COMPRESS                     79520019
         MVI   MSG1,LASTMSG+PBIT       LAST MSG + BUILD                 79600019
         MVI   NAMEDISP,LEN37      OFFSET FOR NAME                      79680019
         MVI   PARAMS,NAME             EBDIC NAME                       79760019
         B     KEEPCODE                GIVE MESSAGE                     79840019
         SPACE 1                                                        79920019
NCMPMSG  EQU   *                                                        80000019
         MVI   MSG1+LEN1,NOCMPOSS  NO COMPRESS MESSAGE                  80080019
         MVI   MSG1,LASTMSG            LAST MESSAGE              X010XX 80160000
         B     GIVEMES4                GIVE MESSAGE              A44144 80400022
         SPACE                                                          80480019
OPENBAD  EQU   *                                                        80560019
         MVI   MSG2+LEN1,OPENERRX  OPEN ERROR                           80640019
         SPACE 1                                                        80720019
GENVALMS EQU   *                                                        80800019
         MVI   MSG1+LEN1,GENERUAL  GENERAL VALIDATE MESSAGE             80880019
         MVI   MSG1,PBIT               SET TO SHOW MESSAGE TO BE BUILT  80960019
         MVI   PARAMS,NAME             EBDIC NAME                       81040019
         MVI   NAMEDISP,X00       PUT DDNAME IN FRONT OF MESSAGE        81120019
         MVI   MSG2,LASTMSG            SET LAST MESSAGE SWITCH          81200019
GIVEMESS EQU   *                                                        81280019
         CLI   RCBUF,RTCDE             PRESENT CODE LOWER 8      A44144 81330022
         BNL   KEEPCODE                NO                        A44144 81380022
         MVI   RCBUF,RTCDE             YES-MOVE IN CODE OF 8     A44144 81430022
         B     KEEPCODE                GIVE MESSAGE              A44144 81570022
GIVEMES4 EQU   *                                                 A44144 81580022
         CLI   RCBUF,RTCD              PRESENT CODE LOWER 4      A44144 81590022
         BNL   KEEPCODE                NO                        A44144 81592022
         MVI   RCBUF,RTCD              YES-MOVE IN CODE OF 4     A44144 81594022
KEEPCODE EQU   *                                                        81600019
         L     GR15,VIEBVMS            ADDRESS OF MESSAGE WRITER        81680019
         BALR  GR14,GR15               WRITE MESSAGE                    81760019
         SPACE                                                          81840019
         BR    GR8                     RETURN                           81920019
         EJECT                                                          82000019
*********************************************************************** 82080019
*                                                                     * 82160019
*        THIS ROUTINE CHECKS FOR CONCATENATED DD CARDS WHICH ARE      * 82240019
*     INVALID FOR THIS PROGRAM ON INDD CARDS                          * 82320019
*                                                                     * 82400019
*********************************************************************** 82480019
         SPACE                                                          82560019
CHECKCAT EQU   *                                                        82640019
         SPACE                                                          82720019
         EXTRACT TIOT,FIELDS=(TIOT)    PLACE TIOT ADDRESS AT TIOT       82800019
         SPACE                                                          82880019
         XR    GR0,GR0                 CLEAR WORK REGISTER              82960019
         L     GR1,TIOT                POINTER TO TIOT                  83040019
         LA    GR1,DDENTRY(GR0,GR1)  BUMP TO FIRST DD CARD              83120019
         SPACE                                                          83200019
CHECKDD  EQU   *                                                        83280019
         IC    GR0,LEN0(GR0,GR1)     INSERT  DD ENTRY LENGTH            83360019
         CLC   NAMEDD(LEN8,GR1),DDVALNM  IS THIS CURRENT DD NAME        83440019
         BE    NEXTBLNK                YES, CHECK FOR CONCATENATION     83520019
         AR    GR1,GR0                 BUMP TO NEXT DD ENTRY            83600019
         B     CHECKDD                 TRY AGAIN                        83680019
         SPACE                                                          83760019
NEXTBLNK EQU   *                                                        83840019
         AR    GR1,GR0                 BUMP TO NEXT ENTRY               83920019
         CLI   LEN0(GR1),X00      IS THIS LAST ENTRY                    84000019
         BE    CHECKOK            YES, OK (NO CONCATENATION)            84080019
         SPACE                                                          84160019
         CLI   NAMEDD(GR1),BLANK       IS DDNAME BLANK                  84240019
         BNE   CHECKOK                 NO, OK                           84320019
         SPACE 1                                                        84400019
         BAL   GR8,CATERROR            GIVE ERROR MSG                   84480019
         B     GETNEXT                 GO TO ERROR RTN                  84560019
         SPACE                                                          84640019
CHECKOK  EQU   *                                                        84720019
         BR    GR7                     RETURN                           84800019
         EJECT                                                          84880019
*********************************************************************** 84960019
*                                                                     * 85040019
*    THIS ROUTINE IS ENTERED FOR VALIDATION ERRORS OCCURING ON THE    * 85120019
*  OUTPUT OR INPUT DATA SET.  CONTROL IS GIVEN TO IEBVTM.             * 85200019
*                                                                     * 85280019
*********************************************************************** 85360019
         SPACE 1                                                        85440019
GETNEXT  EQU   *                                                        85520019
         TM    FLG3,OUTPUTEP           ENTERED AT DV1                   86160019
         BZ    TERMINAT                NO, GO ON                        86240019
         SPACE 1                                                        86320019
         MVI   MSG1+LEN1,NONECOPY NO MEMBERS COPIED MSG                 86400019
         MVI   MSG1,LASTMSG+PBIT       LAST MSG + BUILD                 86480019
         MVI   PARAMS,NAME+MSGULLD     INDIC NAME PARAMETER      X010XX 86560000
*                                       AND ' COPIED ' IN MSG    X010XX 86610000
         MVI   NAMEDISP,LEN46          SET OFFSET FOR NAME       X010XX 86620000
         MVI   COPDISP,LEN11           DISP OF ' COPIED ' IN MSG X010XX 86630000
         MVC   DDVALNM(LEN8),OUTNAME  MOVE OUTDD NAME FOR MSG           86720019
         BAL   GR8,GIVEMESS            GIVE MESSAGE              A44144 86800022
         SPACE 1                                                        87040019
TERMINAT EQU   *                                                        87120019
         MVI   VTMFLG1,UNUSEND         SET SWITCH FOR VTM               87200019
SYSINVTM EQU   *                                                        87240019
         L    GR15,VIEBVTM                                              87280019
         BALR  GR14,GR15               GO TO VTM (NO RETURN)            87360019
         EJECT                                                          87440019
**       A MOUNT REQUEST IS GIVEN NOW BY MEANS OF AN            OY01182 87443002
**       OPENJ OF THE VTOC OF THE VOLUME  SEARCHED FOR          OY01182 87446002
OPENVTOC LA    GR8,OPENJDCB            DCB FOR THE VTOC         OY01182 87449002
         USING IHADCB,GR8                                       OY01182 87452002
         OI    FLG3,ENTOBT             PREVENT LOOP             OY01182 87455002
         OI    MNTJFCB+87,JFCSHARE                              OY01182 87458002
         MVC   DCBDDNAM(MS8),DDNAME1(GR5)                       OY01182 87461002
         OPEN  ((GR8),INPUT),TYPE=J    OPEN VTOC                OY01182 87464002
         CLOSE ((GR8))            OK,VOLUME SHOULD BE MOUNTED  @ZA18344 87467099
         DROP  GR8                                              OY01182 87470002
         BR    GR7                REPEAT OBTAIN,VOLUME MOUNTED  OY01182 87473002
OPENJDCB DCB   DSORG=PS,MACRF=R,EXLST=MNTLIST,BLKSIZE=96,       OY01182C87476002
               LRECL=96,KEYLEN=44,RECFM=F                       OY01182 87479002
         DS    0F                                               OY01182 87482002
MNTLIST  DC    X'87'                                            OY01182 87485002
         DC    AL3(MNTJFCB)                                     OY01182 87488002
MNTJFCB  DC    44X'04'                                         @ZA06528 87491099
         DC    8C' '                                            OY01182 87494002
         DC    X'08'                   WRITE BACK INHIBIT       OY01182 87497002
         DC    XL123'00'                                        OY01182 87500002
         SPACE 1                                                        87520019
IEBDVJCB DC    44F'0'                  JFCB AREA                        87570019
JFCB1    EQU   IEBDVJCB                                                 87620019
         SPACE                                                          87680019
         SPACE                                                          87760019
TIOT     DC    F'0'                    ADDRESS OF TIOT FILLED IN BY     87840019
*                                        EXTRACT MACRO                  87920019
         SPACE 1                                                        88000019
INVOL    DS    CL6                     VOLID OF INPUT                   88080019
         SPACE 1                                                        88160019
INDSNAME DS    CL44                    FIELD FOR INPUT DSNAME           88240019
         SPACE 1                                                        88320019
OBTL     CAMLST  SEARCH,JFCB1,JFCBVOLD,DSCB  OBTAIN MACRO               88400019
         SPACE 1                                                        88480019
DSCB     DS    0F                                                       88560019
         DS    148C                    DSCB BUFFER               X010XX 88640000
         SPACE 1                                                        88720019
AMSG     DC    A(IEBDV1MG)             ADDRESS OF MSG CSECT             88800019
PARMLST  DC    A(IEBDVJCB)             ADDRESS OF JFCB AREA      X010XX 88850000
         DC    A(DSCB)                 ADDRESS OF DSCB AREA      X010XX 88860000
         DC    A(INVOL)                ADDRESS OF INPUT VOLID    X010XX 88870000
*                                       AREA                     X010XX 88872000
         DC    A(INDSNAME)             ADDRESS OF INPUT DSNAME   X010XX 88874000
*                                       AREA                     X010XX 88876000
PATCHLEN EQU   (*-IEBDV1)/20      LENGTH OF 5 PER CENT PATCH AREA       88880019
PATCH    DC    XL(PATCHLEN)'00'   5 PER CENT PATCH AREA          A41780 88960021
         EJECT                                                          89040019
IEBDV1MG CSECT                                                          89120019
TEXT1    DC    C'IEB173I           - INVALID BLOCKSIZE'  ERROR MSG      89200019
         EJECT                                                          89280019
IEBMCA   DSECT                                                          89360019
         IEBMCA                                                         89440019
         EJECT                                                          89520019
         DCBD  DSORG=PS                                                 89600019
         EJECT                                                          89610000
CVT      DSECT                                                   A37881 89620000
         CVT                                                     A37881 89630000
         EJECT                                                          89650021
IECDSECT DSECT                                                          89760019
         IECDSECT                                                       89840019
         EJECT                                                          89920019
*                      GENERAL EQUATES                                  90000019
         SPACE 1                                                        90080019
PARTORG  EQU   X'02'                   BIT 6 SET IF PDS.                90160019
BADDSORG EQU   X'A0'                   DSORG BITS USED ONLY FOR  X010XX 90210000
*                                        IS OR DA DATA SETS      X010XX 90220000
UNMOVEBL EQU   X'01'                   DSORG SETTING INMOVABLE DATA SET 90240019
FIXEDREC EQU   X'80'                   DCB RECFM FIELD FOR FIXED RECORD 90320019
VARREC   EQU   X'40'                   DCB RECFM FIELD FOR VAR RECORDS  90400019
UNDEFREC EQU   X'C0'                   DCB RECFM FIELD FOR UNDEFINED RC 90480019
BLOCKREC EQU   X'10'                   DCB RECFM FIELD FOR BLOCKED REC. 90560019
VARBLOCK EQU   X'50'                   DCB RECFM FIELD VARIABLE BLOCKED 90640019
OVERFLOW EQU   X'20'                   DCB RECFM FIELD FOR OVERFLOW REC 90720019
OPENOK   EQU   X'10'                   TEST FOR OPEN ERROR              90800019
NEWDATAS EQU   X'11'                   CODE FOR NEW DATA SET            90880019
VALCHK   EQU   X'80'                   SET IF VALIDITY CHECK TO BE DONE 90960019
CLEAR0   EQU   X'00'                                                    91040019
THE2321  EQU   X'05'                   UCB CODE FOR 2321                91120019
NMDISP   EQU   2                       DISPLACEMENT OF DDNAME IN        91200019
*                                         INDD TABLE                    91280019
INCRINDD EQU   10                      LENGTH OF INDD TABLE ENTRY       91360019
BLANK    EQU   X'40'                   EBCDIC BLANK                     91440019
         SPACE 1                                                        91520019
*                     JFCB FIELDS                                       91600019
VOLIDJCB EQU   JFCBVOLS-INFMJFCB       OFFSET OF VOLID IN JFCB          91680019
JFCBVOLD EQU   JFCB1+VOLIDJCB          VOLID AREA JFCB FOR OBTAIN MACRO 91760019
JFCBMOD  EQU   JFCBIND2-INFMJFCB       '01' = OLD,'11' = NEW, '10'=MOD  91840019
JFCBMRGE EQU   JFCBUFNO-INFMJFCB       CLEAR 20 BYTES FOR MERGE         91920019
JFCBLREC EQU   JFCLRECL-INFMJFCB       LRECL FIELD                      92000019
JFCBLKSZ EQU   JFCBLKSI-INFMJFCB       BLOCK SIZE                       92080019
JFCBVALC EQU   JFCOPTCD-INFMJFCB       VALIDITY CHECK IF '80'           92160019
         SPACE 1                                                        92240019
*                     DSCB FIELDS                                       92320019
DS1DSORG EQU   DSCFILTY-DXDSCB         DATA SET ORGANIZATION FIELD DSCB 92400019
DS1LRECL EQU   DSCLRECL-DXDSCB         DATA SET LRECL DSCB              92480019
DS1BLKL  EQU    DSCBLKL-DXDSCB         DATA SET BLOCK SIZE DSCB         92560019
DS1LSTAR EQU   DSCLSTAR-DXDSCB         TTR + TRACK BALANCE LAST TRACK   92640019
         SPACE 1                                                        92720019
*                      DEB FIELDS                                       92800019
EXTNODEB EQU   DXDEBUSR-DXDEB          NUMBER OF EXTENTS FROM DEB       92880019
DEBNMTRK EQU   DXDEBNTR-DXDEB          EXTENT TRACKS                    92960019
DEBBCCHH EQU   DXDEBBIN-DXDEB          BBCCHH IN DEB                    93040019
UCBPTR   EQU   DXDEBUCB-DXDEB          POINTER TO UCB IN DEB            93120019
         SPACE 1                                                        93200019
*                      IOB FIELDS                                       93280019
IOBBCCHH EQU   DXDAADDR-DXIOB+1        BBCCHH IN IOB                    93360019
IOBMCCHH EQU   DXDAADDR-DXIOB          MBBCCHHR IN IOB                  93440019
         SPACE 1                                                        93520019
*                      DCB FIELDS                                       93600019
FDADADDR EQU   DCBFDAD-IHADCB          FDAD ADDRESS IN DCB              93680019
TRKBALAN EQU   DCBTRBAL-IHADCB         DCB TRACK BALANCE                93760019
KEYLENGT EQU   DCBKEYLE-IHADCB         KEY LENGTH IN DCB                93840019
RECFMFLD EQU   DCBRECFM-IHADCB         RECFM FIELD IN DCB               93920019
DDNAME1  EQU   DCBDDNAM-IHADCB         DD NAME IN DCB                   94000019
OPENFLGS EQU   DCBOFLGS-IHADCB         OPEN FLAGS IN DCB                94080019
DEBADDR  EQU   DCBDEBAD-IHADCB         DEB POINTER IN DCB               94160019
SYNADADR EQU   DCBSYNAD-IHADCB         SYNAD ADDRESS IN DCB             94240019
EOFADDRS EQU   DCBEODAD-IHADCB+1       EODAD ADDRESS IN DCB             94320019
LRECLDCB EQU   DCBLRECL-IHADCB         DCB LRECL FIELD                  94400019
BLKSZDCB EQU   DCBBLKSI-IHADCB         DCB BLOCK SIZE FIELD             94480019
OPTCDFLD EQU   DCBOPTCD-IHADCB         DCB OPTCD FIELD                  94560019
DIRCTDCB EQU   DCBDIRCT-IHADCB         DCB DIRECTORY BYTE COUNT FIELD   94600019
LWR      EQU   X'80'                   LAST OPERATION WAS A WRITE       94640019
*                                        (HIGH ORDER BIT OF DCBOFLAGS)  94720019
AOSFB    EQU   X'08'                   FIX LIST APPENDAGE INDIC- X010XX 94770000
*                                        ATOR IN DCBOPTCD FIELD  X010XX 94780000
         SPACE                                                          94800019
*                      TIOT FIELDS                                      94880019
DDENTRY  EQU   24                      OFFSET TO FIRST DD CARD ENTRY    94960019
NAMEDD   EQU   4                       OFFSET TO DDNAMES FROM DD ENTRY  95040019
         SPACE 1                                                        95120019
*                      DEVTYPE FIELDS                                   95200019
UT3UCBTP EQU   UT3CHAR+2               UCBTYPE FIELDS                   95280019
UT4UCBTP EQU   UT4CHAR+2                  FROM DEVTYPE MACRO            95360019
UT3TSIZE EQU   UT3CHAR+12              TRACK SIZE FIELD                 95440019
UT4TSIZE EQU   UT4CHAR+12              TRACK SIZE FIELD                 95520019
UCBDIRCT EQU   X'20'                   DIRECT ACCESS                    95600019
INUCBTP  EQU   INCHAR+2    INDCB UCB TYPE FROM DEVTYPE                  95680019
OUTUCBTP EQU   OUTCHAR+2  OUTDCB UCB TYPE FROM DEVTYPE                  95760019
OUTUCBDV EQU   OUTCHAR+3               DEVICE CODE FROM UCB (DEVTYPE)   95840019
OUTBOLST EQU   OUTCHAR+15    BLOCK OVERHEAD LAST RECORD - 1 BYTE FIELD  95860019
OUTKEYOV EQU   OUTCHAR+16    KEY OVERHEAD - 1 BYTE FIELD                95880019
OUTDEVFG EQU   OUTCHAR+17    OUTPUT DEVICE FLAG FIELD            S20201 95885020
HALFOVER EQU   X'08'         OVERHEAD LAST=OVERHEAD NOT LAST     S20201 95890020
*                               AND IS A TWO BYTE FIELD          S20201 95895020
OUTOVER2 EQU   OUTCHAR+14    OUTPUT DEVICE RECORD IF THIS IS A   S20201 95900020
*                               DEVICE WITH A TWO BYTE OVERHEAD  S20201 95905020
*                               VALUE                            S20201 95910020
         END                                                            95920019
./  ADD  SSI=72900013,NAME=IEBDWR
WRTE     TITLE 'IEBCOPY  WRITE ROUTINE- IEBDWR'                         00300019
IEBDWR   CSECT                                                          00600019
         SPACE 1                                                        00900019
*TITLE- IEBCOPY WRITE ROUTINE- IEBDWR                                 * 00910019
*A 315004319620-319800                                         @YM04451 00910402
*A 315550-315640                                               @YM06447 00910802
*D 315424                                                      @YM06447 00911602
*A 315424,315464,319100-320100                                 @YM06435 00914002
*A 080910,315020-315084                                        @YM06434 00915602
*A 080990-080994,315100-318600                                 @YM06433 00917202
*C 309100                                                      @YM06433 00918802
*D611400                                                         A35473 00920402
*C716000                                                         A41780 00922002
*C366000                                                        OY01184 00923602
*A309020-312000                                                 YL026VD 00925202
*C687200                                                        YL026VD 00926802
*C309060                                                        YM06949 00927202
*A309044                                                        YM06949 00927602
*A129500-130700                                                @ZA00915 00927802
*D190700-190720,209900-209920                                  @ZA01672 00928002
*A080997,309100-309322,315002-315008,702100-706600             @ZA26248 00928199
*D709000,716000                                                @ZA26248 00928299
*                                                                     * 00928402
*STATUS- CHANGE LEVEL 001                                             * 00930019
*                                                                     * 00940019
*FUNCTION/OPERATION- THIS MODULE WRITES DIRECTORIES OR MEMBER DATA TO * 00950019
*       THE OUTPUT DATA SET. THE SPILL FILES, SYSUT3 AND SYSUT4 CAN   * 00960019
*       ALSO BE WRITTEN. IT STARTS WRITING FROM THE RECORD POINTED TO * 00970019
*       BY 'WRTNEXT' AND STOPS AFTER WRITING THE RECORD THAT HAS THE  * 00980019
*       'ENDPROC' SWITCH SET IN THE FLAG FIELD.                       * 00990019
*                                                                     * 01000019
*ENTRY POINTS- ENTERED AT IEBDWR                                      * 01010019
*                                                                     * 01020019
*INPUT- SWITCH NAMED 'TAG' IS SET BY CALLER TO TELL IEBDWR WHICH DATA * 01030019
*      SET IS BEING WRITTEN. 'TAG5' SET IF TO READ BACK CHECK.        * 01040019
*                    ALWAYS READ BACK CHECKS DIRECTORY BLOCKS AFTER   * 01050019
*       WRITING. WILL READ BACK CHECK ENTIRE DATA SET WRITTEN IF      * 01060019
*       'TAG5' SWITCH SET IN 'TAG' BEFORE ENTRY TO IEBDWR.            * 01070019
*       'WRTNEXT' POINTS TO STARTING RECORD TO BE WRITTEN.            * 01080019
*       'WRTOVR' SWITCH SET IN FLAG FIELD AHEAD OF RECORD TO BE       * 01090019
*      WRITTEN IF TO WRITE 'SPECIAL' COUNT/KEY/DATA FOR A SEGMENT OF  * 01100019
*      AN OVERFLOW RECORD.                                            * 01110019
*       'LASTREC' SWITCH SET IN FLAG OF LAST RECORD IN CURRENT BUFFER.* 01120019
*       'ENDPROC' SWITCH SET IN FLAG OF LAST RECORD TO BE WRITTEN.    * 01130019
*                                                                     * 01140019
*OUTPUT- MBBCCHHR IN FDAD OF DCB SET TO REFLECT LAST RECORD THAT WAS  * 01150019
*       SUCCESSFULLY WRITTEN.                                         * 01160019
*       'RDGSW' IN SWITCH 'WSFLAG' RESET BECAUSE ARE WRITING NOT      * 01170019
*      READING. PCI APPENDAGE USES THIS SWITCH TO DETERMINE WHETHER   * 01180019
*      ARE READING OR WRITING.                                        * 01190019
*                                                                     * 01200019
*EXTERNAL ROUTINES- PCI APPENDAGE IGG019C8, EXCP WRITE, WAIT, SYNADAF,* 01210019
*                                                                     * 01230019
*EXITS- NORMAL RETURN TO CALLER ON LINK REGISTER.                     * 01240019
*       ENTRY TO SYNADAF ROUTINE ON HARD I/O ERROR. (IEBIOE)          * 01250019
*                                                                     * 01260019
*TABLES/WORK AREAS-                                                   * 01270019
*       -BCB-      POINTERS TO BUFFERS                                * 01280019
*       -IOB-      NEED BY EXCP- OUTIOB,UT3IOB,UT4IOB                 * 01290019
*       -EVENTCB-  EVENT CONTROL BLOCK FOR EXCP                       * 01300019
*       -DCB-      OUTDCB,UT3DCB,UT4DCB FOR UPDATING FDAD MBBCCHHR    * 01310019
*       -WRPTR1-   ADDRESS OF CURRENT CCW                             * 01320019
*       -WRPTR2-   ADDRESS OF NEXT CCW                                * 01330019
*       -SV4-      REGISTER SAVE AREA IN IEBMCA COMMUNICATION AREA    * 01340019
*       -LASTADDR- MBBCCHHR USED TO PREPARE FOR HEAD SWITCH/RETRY     * 01350019
*       -WRCNT-    NUMBER OF RECORDS WRITTEN.                         * 01360019
*                                                                     * 01370019
*ATTRIBUTES- SERIAL REUSABLE.                                         * 01380019
         EJECT                                                          01390019
*                                                                     * 01800019
*                  SYMBOLIC REGISTERS FOR WRITE ROUTINE               * 02100019
*                                                                     * 02400019
*           BASE ADDRESS REGISTER 12, COMMON AREA REGISTER 4          * 02700019
*                                                                     * 03000019
GR0      EQU   0                                                        03300019
GR1      EQU   1                                                        03600019
GR2      EQU   2                                                        03900019
GR3      EQU   3                                                        04200019
GR4      EQU   4                       POINTER TO COMMUNICATIONS AREA   04500019
GR5      EQU   5                                                        04800019
GR6      EQU   6                                                        05100019
GR7      EQU   7                                                        05400019
GR8      EQU   8                                                        05700019
GR9      EQU   9                                                        06000019
GR10     EQU   10                                                       06300019
GR11     EQU   11                                                       06600019
GR12     EQU   12                      BASE ADDRESS REGISTER            06900019
GR13     EQU   13                                                       07200019
GR14     EQU   14                                                       07500019
GR15     EQU   15                                                       07800019
SAV4     EQU   4                  SAVE AREA DISPLACEMENT                07809019
SAV8     EQU   8                  SAVE AREA DISPLACEMENT                07818019
XFF      EQU   X'FF'              RESETS SWITCHES                       07827019
LEN4     EQU   4                  LENGTH OF 4                           07836019
X68      EQU   X'68'              PCI  FLAG                             07845019
X03      EQU   X'03'              NOP COMMAND                           07854019
LEN8     EQU   8                  LENGTH OF 8                           07863019
LEN0     EQU   0                  LENGTH OF 0                           07872019
X1D      EQU   X'1D'              WRITE  C/K/D                          07881019
X60      EQU   X'60'              CC/SLI FLAGS                   S20201 07890020
LEN12    EQU   12                 LENGTH OF 12                          07899019
X0D      EQU   X'0D'              WRITE KEY DATA                        07908019
LEN6     EQU   6                  LENGTH OF 6                           07917019
L264     EQU   264                LENGTH OF 264                         07926019
X01      EQU   X'01'              WRITE SPECIAL C/K/D                   07935019
LEN9     EQU   9                  LENGTH OF 9                           07944019
LEN2     EQU   2                  LENGTH OF 2                           07953019
LEN10    EQU   10                 LENGTH OF 10                          07962019
LEN7     EQU   7                  LENGTH OF 7                           07971019
LEN1     EQU   1                  LENGTH OF 1                           07980019
X31      EQU   X'31'              OP CODE                               07989019
LEN3     EQU   3                  LENGTH OF 3                           07998019
X08      EQU   X'08'              TIC                                   08007019
X7F      EQU   X'7F'              SUCCESSFUL                            08016019
LEN5     EQU   5                  LENGTH OF 5                           08025019
MS5      EQU   5                  MASK OF 5                             08034019
X80      EQU   X'80'                                             X010XX 08036000
X04      EQU   X'04'                                             X010XX 08038000
X78      EQU   X'78'              PCP SKIP SLI                          08043019
X41      EQU   X'41'              I/O ERROR                             08052019
X42      EQU   X'42'              EXTENT ADDR VIOLATED                  08061019
LEN16    EQU   16                 LENGTH OF 16                          08070019
X00      EQU   X'00'              RECORD NUMBER = 0                     08079019
LEN11    EQU   11                                                X010XX 08081000
RPS      EQU   X'10'              RPS INDICATOR                  S20201 08089020
C35      EQU   35                                              @YM06434 08091002
C7       EQU   7                                               @YM06433 08099002
C1       EQU   1                                               @YM06433 08099402
LEN20    EQU   20                                              @ZA26248 08099799
         EJECT                                                          08100019
         SAVE  (14,12),,*                                               08200019
         BALR  GR12,GR0           ESTABLISH ADDRESSABILITY              08400019
         USING START,GR12                                               08700019
         USING IEBMCA,GR4                                               09000019
         SPACE 1                                                        09300019
         SPACE 1                                                        11100019
START    EQU   *                                                        11400019
         ST    GR13,SV5+SAV4      POINTER TO OLD SAVE AREA IN NEW       11800019
         LA    GR15,SV5                                                 12200019
         ST    GR15,SAV8(GR13)    POINTER TO NEW SAVE AREA IN OLD       12500019
         LR    GR13,GR15               POINTER TO NEW SAVE AREA         12900019
         LA    GR3,SECTOR              RESTORE THE ADDRESSES   @ZA00915 12950002
         ST    GR3,SSECTOR              IN THE SET/READ SECTOR @ZA00915 13000002
         MVI   SSECTOR,X'23'            CCWS TO VIRTUAL, IS    @ZA00915 13050002
         ST    GR3,RSECTOR              CHANGED TO REAL BY     @ZA00915 13060002
         MVI   RSECTOR,X'22'            IGG019FT               @ZA00915 13070002
         NI    WSFLAG,XFF-RDGSW   RESET READING SWITCH                  13100019
         OI    AOS,PCI            TURN ON PCI PROCESSING FLAG    X010XX 13150000
         TM    FORM,ERASE              ENTERED TO ERASE A TRACK(S)      13400019
*                                        USED ONLY FOR TRACK OVFLOW     13600019
         BO    ERASEIT                 YES, GO TO ERASE RTN             13800019
         XC    WRPCICNT(LEN4),WRPCICNT CLEAR PCI COUNT BUFFER           14000019
         LA    GR8,WRCW11              FETCH 1ST CCW IN LIST            14200019
         LA    GR9,WRCW21              FETCH 2ND CCW IN LIST            14300019
         MVC   LEN1(LEN3,GR9),WRTNEXT+LEN1   INIT SECOND CHAIN   X010XX 14350000
*                                 TO POINT WITHIN BUFFER         X010XX 14360000
         STM   GR8,GR9,WRPTR1          INITIALIZE CCW CONTROL           14400019
         NI    TAG,XFF-TAG6       RESET TAG6                            14700019
         L     GR6,WRTNEXT             WHERE TO WRITE FROM              15000019
         LA    GR7,LEN4(GR6)      SPACE OVER FMBB TO START COUNT        15300019
         MVI   LEN4(GR8),X68      RESET PCI FLAG                        15600019
         TM    TAG,TAG4                WRITING SYSUT3                   16250019
         BO    UT3WRT             YES                                   16300019
         TM    TAG,TAG1                WRITING OUTPUT DIRECTORY         16350019
         BO    OUTDIR             YES- WRITE KEY/DATA NOT COUNT         16650019
         ST    GR7,LEN0(GR8)      STORE START OF COUNT IN CCW ADR.      16950019
         TM    LEN0(GR6),WRTOVR   OVERFLOW SEGMENT                      17250019
         BO    WRTSPECL           YES- WRITE SPECIAL C/K/D OP CODE      17550019
         MVI   LEN0(GR8),X1D      MAKE OP CODE WRITE C/K/D              17850019
         TM    TAG,TAG2                PROCESSING MEMBER                18600019
         BO    MEMBPROS           YES                                   18700019
         LA    GR3,UT4IOB              SYSUT4 IOB ADDRESS               18960019
         LH    GR1,UT4LRECL            SYSUT4 RECORD SIZE               19020019
         B     STRSPILL                SET UP CCW AND IOB               19080019
         SPACE 1                                                        19140019
UT3WRT   EQU   *                                                        19200019
         NI    AOS,XFF-PCI        TURN OFF PCI PROCESSING FLAG   X010XX 19250000
         LA    GR3,UT3IOB              SYSUT3 IOB ADDRESS               19260019
         LH    GR1,UT3LRECL            SYSUT3 RECORD SIZE               19320019
         L     GR6,ADWK                FETCH SYSUT3 BUFFER PTR.         19380019
         MVI   LEN4(GR8),X60           SET CC/SLI - ONLY ONE     S20201 19420020
*                                        RECORD WRITE            S20201 19460020
         LA    GR7,LEN4(GR6)      SPACE OVER FMBB                       19500019
         TM    FLG2,FMTSPL             FORMAT WRITE                     19560019
         BO    UT3FMTWT                YES-XFER                         19620019
         LA    GR10,LEN12(GR6)    NO-SKIP TO COUNT FIELD                19680019
         ST    GR10,LEN0(GR8)     STORE INTO CCW DATA ADDR              19740019
         MVI   LEN0(GR8),X0D      SET WRITE KEY/DATA OP CODE            19800019
         STH   GR1,LEN6(GR8)      STOW BYTE COUNT                       19860019
         OI    TAG,TAG6                INDICATE NON-FORMAT WRITE        19920019
         B     SETUPIOB                GO TO SET UP IOB                 19980019
UT3FMTWT EQU   *                                                        20040019
         ST    GR7,LEN0(GR8)      STORE INTO CCW DATA ADDR.             20100019
         MVI   LEN0(GR8),X1D      SET WRITE  C/K/D                      20160019
         SPACE 1                                                        20220019
STRSPILL EQU   *                                                        20280019
         LA    GR1,LEN8(GR1)      ALLOW 8 BYTE COUNT FIELD              20340019
         STH   GR1,LEN6(GR8)      COUNT SYSUT3/4 TO WRITE               20400019
         B     SETUPIOB                SET UP IOB FIELDS                20460019
         SPACE 1                                                        20520019
OUTDIR   EQU   *                                                        20580019
         LA    GR1,LEN12(GR6)     SPACE OVER FMBBCCHHR                  20640019
         ST    GR1,LEN0(GR8)      STOW IN CCW DATA ADDR.                20700019
         MVI   LEN0(GR8),X0D      WRITE KEY/DATA OP CODE                20760019
         LA    GR1,L264           FETCH COUNT                           20820019
         STH   GR1,LEN6(GR8)      STORE COUNT IN CCW                    20880019
         LA    GR3,OUTIOB              OUTPUT IOB ADDRESS               20940019
         B     SETUPIOB                SET UP CCWS AND IOB              21000019
WRTSPECL EQU   *                                                        21060019
         MVI   LEN0(GR8),X01      WRITE SPECIAL C/K/D CCW OP CODE       21120019
         SPACE 1                                                        21180019
         SPACE 1                                                        21600019
MEMBPROS EQU   *                                                        21900019
         SR    GR1,GR1                                                  22200019
         IC    GR1,LEN9(GR6)      GET KEY SIZE                          22500019
         LA    GR1,LEN8(GR1)      ADD 8 FOR COUNT SIZE                  22800019
         MVC   WKA1(LEN2),LEN10(GR6)   MOVE IN DATA LENGTH              23100019
         AH    GR1,WKA1                BOUNDARY OK NOW TO ADD FROM      23400019
         STH   GR1,LEN6(GR8)      TOTAL LENGTH OF MEMBER READ           23800019
         LA    GR3,OUTIOB              LOAD POINTER TO OUTPUT IOB       24300019
         SR    GR1,GR1            CLEAR REG                      X010XX 24350000
         LA    GR5,OUTDCB         LOAD POINTER TO DCB            X010XX 24400000
         IC    GR1,KEYDCB(GR0,GR5)  INSERT KEY LENGTH            X010XX 24450000
         AH    GR1,OBLKSIZE       ADD BLOCK SIZE                 X010XX 24500000
         LA    GR1,LEN8(GR0,GR1)  ADD COUNT FIELD LENGTH         X010XX 24550000
         SRL   GR1,LEN11          DIV BY 2K                      X010XX 24600000
         STC   GR1,WRL1           STORE MAX LENGTH IN LIST       X010XX 24650000
         OI    WRL1,X80           RESTORE OPTION BIT             X010XX 24700000
         STC   GR1,WRL2           STORE MAX LENGTH IN LIST       X010XX 24750000
         OI    WRL2,X80           RESTORE OPTION BIT             X010XX 24800000
         SPACE 1                                                        24900019
SETUPIOB EQU   *                                                        25200019
         L     GR5,DCB4IOB(GR3)        DCB ADDRESS FROM IOB             25400019
         LA    GR5,LEN0(GR5)      CLEAR HIGH ORDER BYTE                 25600019
         LA    GR1,CCW1           POINTER TO SEARCH EQUAL ID CCW X010XX 25800000
         ST    GR1,WRITLIST       BEGIN OF CHAIN(FOR EXTEND LIST)X010XX 25802000
         ST    GR1,RBLIST         BEGIN OF CHAIN(FOR EXTEND LIST)X010XX 25804000
         MVI   WRITLIST,X03       LENGTH OF CHAIN                X010XX 25804400
         MVI   RBLIST,X03         LENGTH OF CHAIN                X010XX 25804800
         LA    GR2,LEN16(GR8)          LOAD PTR TO STOP CCW SLOT S20201 25806020
         ST    GR2,LEN8(GR0,GR8)       STORE IN TIC CCW SLOT     S20201 25812020
         MVI   LEN8(GR8),X08           RESTORE TIC OP CODE       S20201 25818020
         MVI   LEN16(GR8),X03          SET STOP CCW TO NOP       S20201 25824020
         LA    GR2,DEVOFF(GR0,GR3)     PTR TO DEVICE INFO        S20201 25830020
         TM    LEN1(GR2),RPS           IS THIS AN RPS DEVICE     S20201 25840020
         BNO   NOTRPS1                 NO, GO ON                 S20201 25850020
         SPACE 1                                                 S20201 25860020
*    IF RPS IS SUPPORTED A SET SECTOR  CCW IS                    S20201 25870000
* APPENDED TO THE NORMAL CCW CHAIN                               S20201 25880020
*                                                                S20201 25890020
         LA    GR1,SSECTOR        PTR TO SET SECTOR CCW          S20201 25900020
         ST    GR1,WRITLIST       BEGIN OF CHAIN(FOR EXTEND LIST)X010XX 25902000
         ST    GR1,RBLIST         BEGIN OF CHAIN(FOR EXTEND LIST)X010XX 25904000
         MVI   RBLIST,X04         LENGTH OF CHAIN                X010XX 25906000
         MVI   WRITLIST,X04       LENGTH OF CHAIN                X010XX 25908000
         LA    GR2,SCTOFF(GR0,GR3)     PTR TO CURRENT SECTOR     S20201 25910020
*                                        VALUE                   S20201 25920020
         MVC   SECTOR(LEN1),LEN0(GR2)  MOVE VALUE TO ''SECTOR''  S20201 25930020
         MVC   RDBKSAVE(LEN1),LEN0(GR2)  SAVE CURRENT SECTOR     S20201 25940020
*                                        VALUE IN CASE READ      S20201 25950020
*                                        BACK CHECK REQUIRED     S20201 25960020
         SPACE 1                                                 S20201 25970020
         MVC   LEN16(LEN4,GR8),RSECTOR REPLACE NOP CCW WITH RS   S20201 25980020
NOTRPS1  EQU   *                                                 S20201 25990020
         MVC   WRCW23(LEN4),WRCW13     MAKE STOP CCW'S EQUAL     S20201 25993020
*                                       (EITHER NOP OR RS)       S20201 25996020
         ST    GR1,IOBCAW(GR3)         ADDRESS OF START CCW INTO IOB    26000019
         LA    GR1,CCW1           LOAD PTR TO SIDEQ CCW          S20201 26050020
*                                   GR1 MAY HAVE POINTED TO      S20201 26100020
*                                   SET SECTOR CCW               S20201 26150020
         SR    GR2,GR2                                                  26200019
         IC    GR2,LEN4(GR7)      PICK UP 'R' FROM COUNT FIELD          26300019
         TM    TAG,TAG1+TAG6           DIRECTORY OR SYSUT3 NON FORMAT   26500019
         BM    ARNDRDEC                DO NOT CHANGE R WRITE KEY/DATA   26600019
         BCTR  GR2,GR0            DECREMENT FOR SEARCH                  26700019
ARNDRDEC EQU   *                                                        26800019
         MVC   DISKADR(LEN7,GR5),LEN1(GR6)  MOVE MBBCCHH TO FDAD IN DCB 27000019
         STC   GR2,DISKREC(GR5)        SET R FIELD IN FDAD OF DCB       27300019
         MVC   IOBMCCHH(LEN8,GR3),DISKADR(GR5) MBBCCHHR FDAD TO IOB     27600019
         MVC   LASTADDR(LEN8),DISKADR(GR5)  SAVE MBBCCHHR FOR RESTART   27900019
         OI    IOBFLGS(GR3),NONSEQEN   SET COMD CHAIN-UNRELATED IN IOB  28200019
         LA    GR6,IOBCCHHR(GR3)       CCHHR FROM IOB                   28500019
         ST    GR6,LEN0(GR1)      STORE SEARCH ID ADDRESS               28800019
         MVI   LEN0(GR1),X31      RESTORE OP CODE                       29100019
         NI    TAG,XFF-TAG6       RESET TAG6                            29400019
         SPACE 1                                                        29700019
TRY      EQU   *                                                        30000019
         SR    GR5,GR5                 CLEAR REGISTER            S20201 30010020
         IC    GR5,IOBRECNO(GR0,GR3)   LOAD SEARCH RECORD        S20201 30020020
*                                        NUMBER                  S20201 30030020
         LTR   GR5,GR5                 RECORD NUMBER = 0         S20201 30040020
         BZ    ZEROSCTR                YES, UPDATE ''SECTOR''    S20201 30050020
         TM    TAG,TAG1                WRITING OUTPUT DIRECTORY  S20201 30060020
         BNO   ARND1                   NO, GO AROUND             S20201 30070020
         CLI   IOBRECNO(GR3),LEN1      UPDATING RECORD 1         S20201 30080020
         BNE   ARND1                   NO, GO AROUND             S20201 30090020
ZEROSCTR EQU   *                                                 S20201 30100020
         MVI   SECTOR,X00              SET ''SECTOR'' = 0        S20201 30110020
ARND1    EQU   *                                                 S20201 30120020
         MVC   CCW3+LEN1(LEN3),WRPTR1+LEN1  SET UP TIC ADDRESS          30200019
         MVI   CCW3,X08           MAKE SURE ITS A TIC                   30400019
         SPACE 1                                                        30600019
RESTART  EQU   *                                                        30900019
         TM    AOS,PCI                 NEED PCI HANDLING        YL026VD 30902002
         BO    RESTART1                YES, DO EXCPVR           YL026VD 30904002
         LR    GR1,GR3                 SET IOB ADDRESS          YM06949 30904402
         EXCP  (1)                     ISSUE WRITE EXCP         YM06949 30906002
         WAIT  1,ECB=EVENTCB           WAIT MACRO               YL026VD 30908002
         B     SAME1                                            YL026VD 30908402
         SPACE 1                                                        30908802
RESTART1 ST    GR3,IOBVRPTR                                    @YM06433 30910002
*                             THIS ROUTINE  REPLACES PCI       @ZA26248 30910199
*                             CHANNEL PROGRAMS WITH SINGEL     @ZA26248 30912199
*                             COMMAND CHAIN OF CCW'S TO WRITE  @ZA26248 30914199
*                             TOTAL BUFFERS AND SIMULATES      @ZA26248 30916199
*                             PCI ROUTINE. IT IS USED IF TWO   @ZA26248 30918199
*                             FULL TRK BUFFERS OR COMPRESSING  @ZA26248 30920199
*                                                              @ZA26248 30922199
         L     GR6,CCWAREA    GET ADDESS OF CCWAREA TO TEST IF @ZA26248 30924199
         LTR   GR6,GR6        IT IS PRESENT. IF NOT, USE PCI   @ZA26248 30926199
         BZ    BX49           BRANCH NO CCWAREA  USE PCI       @ZA26248 30928199
BX48     TM    TAG,TAG6       TEST IF THIS REENTRY FOR RDBACK  @ZA26248 30930199
         BO    BX51           YES, WE ALREADY PERFORMED EXIT   @ZA26248 30932199
         STM   GR5,GR13,PCISAVE    SAVE REGS                   @ZA26248 30934199
*                                                              @ZA26248 30936199
         NI    AOS,X'FF'-PCI  TURN OFF PCI                     @ZA26248 30938199
*                                                              @ZA26248 30940199
         L     GR5,WRPTR1     GET ADDRESS OF WHERE TO          @ZA26248 30942199
         L     GR5,LEN0(GR5)  WRITE FROM CCW                   @ZA26248 30944199
         LA    GR5,LEN0(GR5)  CLER OP CODE                     @ZA26248 30946199
*                                                              @ZA26248 30948199
         LA    GR0,X04        CONSTANT 4 TO BACK UP            @ZA26248 30950199
         TM    TAG,TAG1       TEST IF WRITING OUTPUT DIR BLKS  @ZA26248 30952199
         BNO   BX42           BRANCH IF NOT                    @ZA26248 30954199
         LA    GR0,LEN12      SET UP TO SKIP FMBBCCHHRKDD      @ZA26248 30956199
BX42     SR    GR5,GR0        TO FMBB                          @ZA26248 30958199
BX47     L     GR6,CCWAREA    GET ADDESS WHERE TO              @ZA26248 30960199
         TM    TAG,TAG1       TEST WRITING DIRECTORY           @ZA26248 30962199
         BZ    BX43           BRANCH NOT                       @ZA26248 30964199
         LA    GR6,DWRTL-LEN8(GR6) INCREMENT TO FIRST WRITE    @ZA26248 30966199
BX43     EQU   *                                               @ZA26248 30968199
*                             BUILD CCW'S                      @ZA26248 30970199
         STCM  GR6,C7,CCW3+C1 INITLISE TIC TO WRITES           @ZA26248 30972199
         L     GR6,CCWAREA                                     @ZA26248 30974199
*                                                              @ZA26248 30976199
*                                                              @ZA26248 30978199
BX25     LR    GR8,GR6        SAVE WHERE TO BUILD RD BACK TO.  @ZA26248 30980199
         MVC   R0CNTF(LEN5),LEN4(GR5)  SAVE CCHHR FOR READ     @ZA26248 30982199
BX38     EQU   *                       BACK CHECK              @ZA26248 30984199
         TM    TAG,TAG1       TEST FOR DIRECTORY WRITE OUTPUT  @ZA26248 30986199
         BO    BX33           BRANCH YES                       @ZA26248 30988199
         MVC   LEN0(LEN8,GR6),DACCW4   MOVE IN MODEL CCW       @ZA26248 30990199
*                                                              @ZA26248 30992199
         MVI   LEN0(GR6),X1D  SET WRITE COUNT KEY DATA         @ZA26248 30994199
         TM    LEN0(GR5),WRTOVR  TEST TRACK OVERFLOW           @ZA26248 30996199
         BZ    BX36           BRANCH NO TRAK OVERFLOW          @ZA26248 30998199
         MVI   LEN0(GR6),X01  SET WRITE SPECIAL                @ZA26248 31000199
BX36     EQU   *                                               @ZA26248 31002199
         SR    GR10,GR10      CLEAR REG                        @ZA26248 31004199
         IC    GR10,LEN9(GR5) GET KEY  LENGTH                  @ZA26248 31006199
         LH    GR9,LEN10(GR5)  GET DATA LENGTH                 @ZA26248 31008199
         LA    GR9,LEN8(GR9,GR10) ADD LENGTH OF COUNT KEY DATA @ZA26248 31010199
         STH   GR9,LEN6(GR6)  SET LENGTH IN CCW                @ZA26248 31012199
         LA    GR7,LEN4(GR5)  INCREMENT TO COUNT FIELD         @ZA26248 31014199
         B     BX34                                            @ZA26248 31016199
BX33     EQU   *                                               @ZA26248 31018199
         MVC   LEN0(DWRTL,GR6),DWCCW4  SET UP DIR WRITE CCWS   @ZA26248 31020199
         STCM  GR6,C7,LEN9(GR6)        SET TIC ADDRESS         @ZA26248 31022199
         LA    GR7,LEN4(GR5)           INCREMENT TO CCHHR FLD  @ZA26248 31024199
         STCM  GR7,C7,LEN1(GR6)        SET SERCH ADDRESS       @ZA26248 31026199
         LA    GR6,LEN8+LEN8(GR6)     INCREMENT OVER SERCH TIC @ZA26248 31028199
*                             BUILD WRITE KEY DATA             @ZA26248 31030199
*                                                              @ZA26248 31032199
         LA    GR7,LEN12(GR5) INCREMENT TO KEY FIELD           @ZA26248 31034199
*                                                              @ZA26248 31036199
BX34     STCM  GR7,C7,LEN1(GR6)  SET ADDRESS OF KEY DATA       @ZA26248 31038199
*                                                              @ZA26248 31040199
         LA    GR6,LEN8(GR6)  INCREMENT NEXT CCW LOCATION      @ZA26248 31042199
         TM    LEN0(GR5),ENDPROC+LASTREC    TEST LAST RECORD   @ZA26248 31044199
         BZ    BX35           NOT LAST RECORD CONT.            @ZA26248 31046199
*                                                              @ZA26248 31048199
         BO    BX29           YES, ALL READY TO BREAK CHAIN    @ZA26248 31050199
*                             + RD BACKCHECK                   @ZA26248 31052199
         L     GR5,BEGFST2    GETSTART SECOND BUFFER           @ZA26248 31054199
*                                                              @ZA26248 31056199
BX28     LA    GR0,LEN4        INDICATE HH SWITCH              @ZA26248 31058199
         SR    GR9,GR9                                         @ZA26248 31060199
         TM    TAG,TAG5+TAG1+TAG3  TEST FOR RD BACK            @ZA26248 31062199
         BZ    BX50           BRANCH ON NOT RDBACK             @ZA26248 31064199
         IC    GR9,LEN8(GR5)  GET RECORD NO.                   @ZA26248 31066199
*                                                              @ZA26248 31068199
         LA    GR9,LEN20(GR9) ROOM FOR 1 RD BK,TRK SW,ETC      @ZA26248 31070199
BX50     LA    GR9,LEN8(GR9) ROOM FOR 1 TRK SW, 1 REC+NOP      @ZA26248 31072199
         SLL   GR9,LEN3      MULTIPLY BY 8 TO GET SPACE REQ.   @ZA26248 31074199
*                             TO BUILD RD BACK CCW'S           @ZA26248 31076199
         AR    GR9,GR6        COMPUTE CURRENT THERORETICAL     @ZA26248 31078199
*                             END                              @ZA26248 31080199
         C     GR9,SVHI       TEST IF ROOM FOR CCW'S           @ZA26248 31082199
         BH    BX29          BRANCH ON NO ROOM                 @ZA26248 31084199
         CLI   LEN8(GR5),LEN1 IS NEXT RECORD R1                @ZA26248 31086199
         BNE   BX38           YES,GO BUILD RD BACK & CHANGE HH @ZA26248 31088199
BX30     BAL   GR10,RDBACX    LINK BUILD RD BACK CCW'S         @ZA26248 31090199
         B     BX25                                            @ZA26248 31092199
RCKD     EQU   X'1E'          RD COUNT KEY & DATA              @ZA26248 31094199
RKD      EQU   X'0E'          RD KEK AND DATA COMMAND          @ZA26248 31096199
*                             RD BACK AND CONDITIONALLY HEAD   @ZA26248 31098199
*                             SWITCH CCW BUILD SUBROUTINE      @ZA26248 31100199
*                             IF RO=O JUST DO RD BACK          @ZA26248 31102199
*                             GR5=RECORD FLAG FIELD            @ZA26248 31104199
*                             GR6=WHERE NEXT CCW GOES          @ZA26248 31106199
*                             GR8=FIRST CCW TO RD BACK         @ZA26248 31108199
*                                                              @ZA26248 31110199
RDBACX   EQU   *                                               @ZA26248 31112199
         LR    GR11,GR6                                        @ZA26248 31114199
         TM    TAG,TAG5+TAG1+TAG3  TEST FOR RD BACK            @ZA26248 31116199
*              BRANCH ON NO RD BACK REQUIRED                   @ZA26248 31118199
         BZ    BX37                                            @ZA26248 31120199
         MVC   LEN0(LEN8,GR6),DCCWHA SET READ HA TO CROSS INDX @ZA26248 31122199
         LA    GR6,LEN8(GR6) ADVANCE TO NEXT CCW SLOT          @ZA26248 31124199
         MVC   LEN0(TRKSWL,GR6),DWCCW1 MOVE TRACK SW CCW'S     @ZA26248 31126199
         MVI   LEN0(GR6),X31 SET COMMAND SEARCH ID EQUAL NO MT @ZA26248 31128199
         SR    GR1,GR1            CLEAR REG                    @ZA26248 31130199
         IC    GR1,R0CNTF+LEN4-DWCCW1(GR6) BACK UP R BY ONE    @ZA26248 31132199
         BCTR  GR1,GR0            REDUCE BY ONE                @ZA26248 31134199
         STC   GR1,R0CNTF+LEN4-DWCCW1(GR6)                     @ZA26248 31136199
*          CCHH   AND       RECNO ALLREADY IN R0CNTF           @ZA26248 31138199
         STCM  GR6,C7,LEN1+LEN8(GR6)   SET TIC ADDRESS         @ZA26248 31140199
*                                                              @ZA26248 31142199
         LA    GR1,R0CNTF-DWCCW1(GR6)   INCREMENT CCH          @ZA26248 31144199
*                                                              @ZA26248 31146199
         STCM  GR1,C7,LEN1(GR6)   SET ADDRESS IN SERCH         @ZA26248 31148199
*                                                              @ZA26248 31150199
         LA    GR1,TRKSWL(GR6)   ADDR NEXT CCW AREA            @ZA26248 31152199
         STCM  GR1,C7,DCCW3OST+LEN1(GR6)    TIC AROUN CCHHR    @ZA26248 31154199
         LR    GR6,GR1                                         @ZA26248 31156199
BX32     TM    TAG,TAG1       CHECK FOR WRITING OUTPUT DIR     @ZA26248 31158199
         BZ    BX44           BRANCH NOT WRITING  OF RECORD    @ZA26248 31160199
         LA    GR8,LEN8+LEN8(GR8)  INCREMENT OVER SERCH TIC    @ZA26248 31162199
BX44     MVC   LEN0(LEN8,GR6),LEN0(GR8) WRITE CCW OF RECORD    @ZA26248 31164199
*                             TO BE CHECKED                    @ZA26248 31166199
SKIP     EQU   X'10'          SUPPRESS TRANSFR BIT             @ZA26248 31168199
X22      EQU   X'22'           READ SECTOR OP CODE             @ZA26248 31170199
         OI    LEN4(GR6),SKIP SET NO TRANSFR                   @ZA26248 31172199
         MVI   LEN0(GR6),RKD  SET RD KEY & DATA                @ZA26248 31174199
         CLI   LEN0(GR8),X0D  WRITE KEY DATA                   @ZA26248 31176199
         BE    BX31                                            @ZA26248 31178199
         MVI   LEN0(GR6),RCKD                                  @ZA26248 31180199
BX31     EQU   *                                               @ZA26248 31182199
RDCNT    EQU   X'12'         RD COUN COMMAND CODE              @ZA26248 31184199
         LH    GR1,LEN6(GR6) GET RECORD LENGTH                 @ZA26248 31186199
         CH    GR1,=H'8'     IF IT IS EIGHT DO RD COUNT        @ZA26248 31188199
         BNE   BX45                                            @ZA26248 31190199
         MVI   LEN0(GR6),RDCNT SET READ COUNT COMMAND          @ZA26248 31192199
BX45     LA    GR6,LEN8(GR6)  INCREMENT TO NEXT CCW'S          @ZA26248 31194199
         LA    GR8,LEN8(GR8)                                   @ZA26248 31196199
*                                                              @ZA26248 31198199
         CR    GR8,GR11       TEST RD BACKS ALL BUILD          @ZA26248 31200199
         BL    BX32           BRANCH NOT ALL DONE              @ZA26248 31202199
*                                                              @ZA26248 31204199
BX37     LTR   GR0,GR0        TEST FOR HEAD SWITCH             @ZA26248 31206199
         BZR  GR10            ZERO=NO HEAD SWITCH              @ZA26248 31208199
*                                                              @ZA26248 31210199
         MVC   LEN0(TRKSWL,GR6),DWCCW1  MOVE TRAC SWITCH CCW'S @ZA26248 31212199
*                                                              @ZA26248 31214199
         MVC   R0OFSET(LEN4,GR6),LEN4(GR5)  MOVE CCHH          @ZA26248 31216199
         MVI   R0OFSET+LEN4(GR6),X00   SET R0                  @ZA26248 31218199
*                                                              @ZA26248 31220199
         STCM  GR6,C7,LEN1+LEN8(GR6)   SET TIC ADDRESS         @ZA26248 31222199
*                                                              @ZA26248 31224199
         LA    GR8,R0CNTF-DWCCW1(GR6)   INCREMENT CCH          @ZA26248 31226199
*                                                              @ZA26248 31228199
         STCM  GR8,C7,LEN1(GR6)   SET ADDRESS IN SERCH         @ZA26248 31230199
*                                                              @ZA26248 31232199
         LA    GR8,TRKSWL(GR6)   ADDR NEXT CCW AREA            @ZA26248 31234199
         STCM  GR8,C7,DCCW3OST+LEN1(GR6)    TIC AROUN CCHHR    @ZA26248 31236199
*                                                              @ZA26248 31238199
         LR    GR6,GR8        ADVANCE TO NEXT SLOT             @ZA26248 31240199
*                                                              @ZA26248 31242199
         BR    GR10           RETURN                           @ZA26248 31244199
*                                                              @ZA26248 31246199
BX29     EQU   *              RD BACK AND BREAK CHAIN          @ZA26248 31248199
         SR    GR0,GR0                                         @ZA26248 31250199
         BAL   GR10,RDBACX    GO BUILD RD BACK CCWS            @ZA26248 31252199
         MVC   LEN0(LEN8,GR6),WRCW13 TERM WITH RD SECTOR/NOP   @ZA26248 31254199
         EXCP  (GR3)       PERFORM THE WRITES                  @ZA26248 31256199
         WAIT  1,ECB=EVENTCB                                   @ZA26248 31258199
         USING DXIOB,GR3                                       @ZA26248 31260199
         L     GR6,IOBCSW       GET CSW                        @ZA26248 31262199
         LA    GR6,LEN0(GR6)                                   @ZA26248 31264199
         DROP  GR3                                             @ZA26248 31266199
         LA    GR7,LEN8         LENGTH OF CCW                  @ZA26248 31268199
         SR    GR6,GR7         BACK UP ONE CCW                 @ZA26248 31270199
XB1      EQU   X'B1'      SEARCH ID EQUAL MT COMMAND           @ZA26248 31272199
         CLI   LEN0(GR6),XB1    IS IT A SERCH                  @ZA26248 31274199
         BNE   BX39                                            @ZA26248 31276199
         LA    GR6,TRKSWL(GR6)    SEARCH INREMENT TO WRITE     @ZA26248 31278199
         B     BX39                                            @ZA26248 31280199
BX41     SR    GR6,GR7          BACK UP ONE CCW                @ZA26248 31282199
BX39     CLI   LEN0(GR6),X22    IS IT A RD SECTOR              @ZA26248 31284199
         BE    BX41             BRANCH YES                     @ZA26248 31286199
         CLI   LEN0(GR6),X03    IS IT A NOP                    @ZA26248 31288199
         BE    BX41             BRANCH YES                     @ZA26248 31290199
         L     GR7,LEN0(GR6)    GET AREA LAST WRITTEN OR TRIED @ZA26248 31292199
         STCM  GR7,C7,CURRCCW1+LEN1   SAVE FOR TERMINATION     @ZA26248 31294199
         STCM  GR7,C7,CURRCCW2+LEN1   SAVE FOR TERMINATION     @ZA26248 31296199
         LA    GR1,LEN4      CONSTANT TO STEP BACK TO FLAG FLD @ZA26248 31298199
         TM    TAG,TAG1               IS THIS OUTPUT DIR WRITE @ZA26248 31300199
         BNO   BX40                   BRANCH ON NO             @ZA26248 31302199
         LA    GR1,LEN8(GR1) CONSTANT TO REACH FLAG FIELD      @ZA26248 31304199
BX40     SR    GR7,GR1                BACK UP TO FLAG FIELD    @ZA26248 31306199
         MVC   LASTADDR(LEN8),LEN1(GR7)                        @ZA26248 31308199
         CLI   EVENTCB,X7F   CHECK IF COMPLETED NORMAL         @ZA26248 31310199
         BE    BX46                    BRANCH ON NORMAL        @ZA26248 31312199
         SR    GR0,GR0       BACK UP R BY ONE ON ABNORMAL      @ZA26248 31314199
         IC    GR0,LASTADDR+LEN7       GET LAST WROTE REC NO.  @ZA26248 31316199
         BCTR  GR0,GR0                 REDUCE BY ONE           @ZA26248 31318199
         STC   GR0,LASTADDR+LEN7       POINT REC-1             @ZA26248 31320199
         B     BX27                    EXIT FOR ERROR HANDLING @ZA26248 31322199
BX46     TM    LEN0(GR7),ENDPROC TST WROTE LAST RECORD WRITTEN @ZA26248 31324199
         BO    BX27                    BRANCH YES, EXIT        @ZA26248 31326199
         MVC   IOBMCCHH(LEN8,GR3),LEN1(GR5)  SET SEEK ADDRESS  @ZA26248 31328199
         SR    GR0,GR0            CLEAR REG                    @ZA26248 31330199
         IC    GR0,IOBRECNO(GR3)  GET RECORD NO OF NEXT RECORD @ZA26248 31332199
         BCTR  GR0,GR0            BACK UP ONE RECORD           @ZA26248 31334199
         STC   GR0,IOBRECNO(GR3)  FOR SERCH PREVIOUS           @ZA26248 31336199
         L     GR6,CCWAREA   RESET TO START OF CCW AREA        @ZA26248 31338199
         B     BX43  IOB POINTS TO PREVIOUS REC SO USE SCH CNT @ZA26248 31340199
BX35     SR    GR10,GR10     CLEAR REG                         @ZA26248 31342199
         IC    GR10,LEN9(GR5) GET KEY LENGTH                   @ZA26248 31344199
         AH    GR5,LEN10(GR5) INCREMENT BY RECORD LENGTH       @ZA26248 31346199
         LA    GR5,LEN12(GR5,GR10) FMBBCCHHKLDL + KEY AND DATA @ZA26248 31348199
         B     BX28                                            @ZA26248 31350199
BX49     EQU   *                                               @ZA26248 31352199
         LR    GR1,GR3                                          YL026VD 31354199
         EXCPVR (1),SUBSYS       ISSUE WRITE/READ ON PROPER IOB YL026VD 31356199
         WAIT  1,ECB=EVENTCB                                            31358199
         B     BX51                                            @ZA26248 31360199
BX27     EQU   *                                               @ZA26248 31362199
         LM    GR5,GR13,PCISAVE                                @ZA26248 31364199
BX51     EQU   *                                               @ZA26248 31366199
         OI    AOS,PCI            RESTORE PCI BIT              @YM04451 31501002
         L     GR10,IOBVRPTR      GET ADDR OF IOB LAST USED    @YM06434 31502002
         LA    GR10,C35(GR10)     GET ADDRESS OF CCHHR         @YM06434 31504002
         STCM  GR10,C7,CCW1+C1    STORE VIRT INTO SIDEQ CCW    @YM06434 31506002
         LA    GR10,CCW1          GET ADDRESS OF SIDEQ CCW     @YM06434 31508002
         STCM  GR10,C7,CCW2+C1    STORE VIRT INTO TIC BACK     @YM06434 31508402
         TM    TAG,TAG6           READ BACK CHECKING           @YM06433 31510002
         BZ    ISWRITE            NO, JUST DID WRITE           @YM06433 31520002
         LA    GR10,LASTADDR      ADR OF READ BACK CHECK COUNT @YM06433 31530002
         STCM  GR10,C7,RDCKCW11+C1 RESTORE VIRTUAL ADDRESS     @YM06433 31540002
         STCM  GR10,C7,RDCKCW12+C1 RESTORE VIRTUAL ADDRESS     @YM06433 31542002
         STCM  GR10,C7,RDCKCW21+C1 RESTORE VIRTUAL ADDRESS     @YM06433 31544002
         STCM  GR10,C7,RDCKCW22+C1 RESTORE VIRTUAL ADDRESS     @YM06433 31546002
         LA    GR10,SECTOR        ADRRESS OF 'SECTOR'          @YM06447 31555002
         STCM  GR10,C7,RDCKCW13+C1 RESTORE VIRTUAL ADDRESS     @YM06447 31564002
         STCM  GR10,C7,RDCKCW23+C1 RESTORE VIRTUAL ADDRESS     @YM06435 31573002
         B     SAME1              GO CHECK COMPLETION          @YM06433 31582002
ISWRITE  L     GR10,WRPTR1        GET ADDR OF WRITE CCW        @YM06433 31591002
         L     GR5,CURRCCW1       GET VIRTUAL DATA ADDRESS     @YM06433 31600002
         STCM  GR5,C7,LEN1(GR10)  STORE VIRTUAL ADDRESS        @YM06433 31610002
         L     GR10,WRPTR2        GET ADDR OF WRITE CCW        @YM06433 31800002
         L     GR5,CURRCCW2       GET VIRTUAL DATA ADDRESS     @YM06433 31850002
         STCM  GR5,C7,LEN1(GR10)  STORE VIRTUAL ADDRESS        @YM06433 31860002
         LA    GR10,WRCW13        GET VIRTUAL NO-OP ADDR       @YM06435 31910002
         STCM  GR10,C7,WRCW13+C1  STORE IN 1ST NO-OP           @YM06435 31960002
         STCM  GR10,C7,WRCW12+C1  STORE IN 1ST TIC             @YM04451 31970002
         LA    GR10,WRCW23        GET VIRTUAL NO-OP ADDR       @YM04451 31980002
         STCM  GR10,C7,WRCW22+C1  STORE IN 2ND TIC             @YM04451 31990002
         STCM  GR10,C7,WRCW23+C1  STORE IN 2ND NO-OP           @YM06435 32010002
         SPACE 1                                                        34200019
SAME1    EQU   *                                                        34500019
         CLI   EVENTCB,X7F        I/O COMPLETED OK                      34800019
         BNE   CHKERRX                 NO- CHECK FOR ERROR              35100019
GOT7F    EQU   *                                                        35200019
         TM    TAG,TAG6                READ BACK CHECKING               35400019
         BZ    WRTCHKS            NO- JUST WROTE                        35600019
ERRRDBK  EQU   *                                                        35800019
         L     GR10,WRPCICNT           COUNT OF RECORDS WRITTEN         36000019
         LTR   GR10,GR10               ALL DONE                         36300019
         BNP   RETRNS             YES,EXIT                      OY01184 36600002
         MVC   CCW3(LEN4),RDCKPTR1  SET UP TIC FOR NEXT WRITE           36900019
         MVI   CCW3,X08           RESTORE TIC OP CODE                   37200019
         MVC   IOBCCHHR(LEN5,GR3),LASTADDR  MOVE SEEK ADDR. TO IOB      37500019
         B     RESTART                 ISSUE READ                       37800019
         SPACE 1                                                        38100019
WRTCHKS  EQU   *                                                        38400019
         TM    TAG,TAG4                SYSUT3                           38500019
         BO    RETRNS             IF SO, AM ALL DONE WRITING RECORD     38600019
         L     GR5,WRPTR2              GET CCW OF PCI JUST PROCESSED    38700019
         L     GR6,LEN0(GR5)      GET WRITE ADDRESS                     38800019
         LA    GR6,LEN0(GR6)      CLEAR OP CODE                         38900019
         LA    GR5,LEN4           SET NUMBER OF BYTES BEFORE POINTER    39000019
         TM    TAG,TAG1                WRITING DIRECTORY                39420019
         BZ    NOTDIRTY                NO-XFER                          39440019
         LA    GR5,LEN12          SKIP BACK TO FLAG BYTE                39460019
NOTDIRTY EQU   *                                                        39480019
         SR    GR6,GR5            POINT TO FLAG PRECEEDING CCHHR        39500019
         MVC   IOBMCCHH(LEN8,GR3),LASTADDR  MOVE IN SEEK ADDRESS        39600019
         TM    LEN0(GR6),ENDPROC  WROTE VERY LAST RECORD                39700019
         BZ    TRY                NO- GO WRITE- PCI LATE                39800019
         TM    TAG,TAG2                MEMBERS                          39940019
         BZ    RDBKTEST                NO-GO TEST FOR READ BACKING      39980019
         MVC   OUTFDAD(LEN8),LEN1(GR6) YES-SAVE LAST MBBCCHHR           40020019
RDBKTEST EQU   *                                                        40060019
         TM    TAG,TAG1+TAG3+TAG5      WROTE DIRECTORY OR READ BACK ON  40100019
         BC    MS5,RDBKCKRT       YES- READ BACK CHECK                  40300019
         SPACE 1                                                        40500019
RETRNS   EQU   *                                                        40700019
         LA    GR6,SCTOFF(GR0,GR3)     PTR TO SECTOR SAVE SLOT   S20201 40750020
         MVC   LEN0(LEN1,GR6),SECTOR   SAVE LAST SECTOR VALUE    S20201 40800020
RETRNS1  EQU   *                                                 S20201 40850020
         L     GR13,SV5+SAV4      POINTER TO SAVE AREA                  40900019
         RETURN (14,12)                RETURN TO CALLER                 41100019
         SPACE 1                                                        41700019
RDBKCKRT EQU   *                                                        42000019
         L     GR5,WRTNEXT             START BEGIN FOR REBACK CHECKING  42300019
         LA    GR3,UT4IOB              IOB FOR SYSUT4                   42600019
         TM    TAG,TAG3                WRITING OUTPUT DIRECTORY SYSUT4  42900019
         BO    GOTIOBD            YES- IOB POINTER SET IN GR3           43200019
         LA    GR3,OUTIOB              IOB FOR OUTPUT DATA SET          43500019
         SPACE 1                                                        43800019
GOTIOBD  EQU   *                                                        44100019
         MVC   SECTOR(LEN1),RDBKSAVE   RESTORE INITIAL SECTOR    S20201 44200020
*                                         VALUE FOR READBACK     S20201 44300020
*                                         CHECK                  S20201 44400020
         MVC   IOBMCCHH(LEN8,GR3),LEN1(GR5) SET UP MBBCCHHR IN IOB      44700019
         SR    GR7,GR7                                                  45300019
         IC    GR7,LEN8(GR5)      GET RECORD NUMBER (R)                 45600019
         BCTR  GR7,GR0            DECREMENT RECORD NUMBER BY 1          45900019
         STC   GR7,IOBRECNO(GR3)       STORE NEW RECORD NUMBER FOR SEEK 46200019
         LTR   GR7,GR7                 IS SEARCH RECORD          S20201 46250020
*                                        NUMBER = 0              S20201 46300020
         BNZ   ARND2                   NO, GO AROUND             S20201 46350020
         MVI   SECTOR,X00              SET ''SECTOR'' = 0        S20201 46400020
ARND2    EQU   *                                                 S20201 46450020
         LA    GR2,IOBCCHHR(GR3)       POINT TO SEARCH ADDRESS          46500019
         ST    GR2,CCW1                STORE SEARCH ADDRESS IN CCW1     46800019
         MVI   CCW1,X31           RESTORE OP CODE FOR SEARCH ID=        47100019
         LA    GR6,RDCKCW11                                             47400019
         ST    GR6,RDCKPTR1            STORE POINTER TO START READ BACK 47700019
         LA    GR7,RDCKCW21                                             48000019
         ST    GR7,RDCKPTR2            STORE POINTER TO SECOND CCW LIST 48300019
         ST    GR6,CCW3                SET UP TIC TO RDCKOW11           48600019
         MVI   RDCKCW13,X03       INITIALIZE NOP                        48700019
         LA    GR6,DEVOFF(GR0,GR3)     PTR TO DEVTYPE INFO       S20201 48710020
         TM    LEN1(GR6),RPS           IS THIS AN RPS DEVICE     S20201 48720020
         BNO   NOTRPS2                 NO, GO ON                 S20201 48730020
         SPACE 1                                                 S20201 48740020
         MVC   RDCKCW13(LEN4),RSECTOR  REPLACE NOP WITH RS CCW   S20201 48750020
NOTRPS2  EQU   *                                                 S20201 48760020
         MVI   RDCKCW12+LEN4,X78  INITIALIZE PCI SKIP SLI               48800019
         OI    TAG,TAG6                SET FOR READ BACK CHECKING       48900019
         MVI   CCW3,X08           RESTORE TIC OP CODE                   49200019
         B     RESTART                 START READ BACK CHECKING         49500019
         SPACE 1                                                        49800019
CHKERRX  EQU   *                                                        50100019
         TM    TAG,TAG2+TAG3+TAG4      MEMBER SYSUT4 SYSUT3             50500019
         BZ    ERROR4             NO                                    50700019
         CLI   EVENTCB,X41        I/O ERROR                             50900019
         BE    EOFTEST                 YES-TEST FOR WHOM AND WHY        51100019
         CLI   EVENTCB,X42        EXTENT ADDRESS VIOLATED-OUTPUT        51300019
         BNE   ERROR4                  YES- TYPE 4 ERROR END OF EXTENT  51600019
         LA    GR5,RDCKPTR1            READ PTR.                        51900019
         TM    TAG,TAG6                READ BACK CHECKING               52200019
         BO    RDCKING            YES                                   52500019
         LA    GR5,WRPTR1              WRITE PTR.                       52800019
         SPACE 1                                                        53100019
RDCKING  EQU   *                                                        53400019
         MVC   CCW3+LEN1(LEN3),LEN1(GR5) MOVE CORRECT ADDR. TO TIC      53700019
         SR    GR6,GR6                                                  54000019
         LR    GR8,GR3                                                  54100019
         L     GR7,DCB4IOB(GR8)        GET DCB POINTER FROM IOB         54200019
         LA    GR7,LEN0(GR7)      CLEAR HIGH ORDER BYTE                 54400019
         IC    GR6,IOBMCCHH(GR8)       OBTAIN M (EXTENT NUMBER)         54600019
         L     GR5,DEBPTR(GR7)         POINTER TO DEB                   55800019
         SR    GR7,GR7                                                  56100019
         IC    GR7,LEN16(GR5)     GET NUMBER OF EXTENTS FROM DEB        56400019
         LA    GR6,LEN1(GR0,GR6)       UP EXTENT NUMBER BY 1            56500019
         CR    GR6,GR7                 EXTENTS EXCEEDED                 56700019
         BL    ARND                    NO                               56780019
         MVI   IOBECBCD(GR8),ENDEXT    SET END EXTENT CODE IN IOB       56860019
         B     ERROR4                  GO TO ERROR ANALYSIS ROUTINE     56940019
ARND     EQU   *                                                        57020019
         STC   GR6,IOBMCCHH(GR8)       STORE NEW M                      57200019
         SLA   GR6,LEN4           MULTIPLY EXTENT BY 16                 57400019
         AR    GR6,GR5                 ADD TO START OF DEB TO GET ADDR  57600019
         MVC   IOBBCCHH(LEN6,GR8),EXTBBDEB(GR6)  SEEK ADDRESS           57900019
         MVI   IOBRECNO(GR8),X00  MAKE RECORD NUMBER R=0                58200019
         LA    GR9,IOBCCHHR(GR8)       POINTER TO CCHHR FOR SEARCH      58500019
         ST    GR9,CCW1                STORE SEARCH ADDRESS POINTER     58800019
         MVI   CCW1,X31           RESTORE SEARCH ID = OP CODE           59800019
         B     RESTART                 WRITE SOME MORE                  60900019
EOFTEST  EQU   *                                                        60930019
         TM    TAG,TAG3+TAG6           SYSUT4+READ BACKING              60960019
         BO    UNCHECK                 YES- CHECK UNIT EXCEPTION        60990019
         TM    TAG,TAG2+TAG6           MEMBER + READ BACKING            61020019
         BZ    ERROR4                  NO-MUST BE ERROR CAN'T BE OTHER  61050019
UNCHECK  EQU   *                                                        61080019
         TM    IOBCSWST(GR3),X01  EOF                                   61110019
         BO    ERRRDBK                 CHECK TO SEE IF VALIDITY  A35473 61130021
*                                        CHECKING IS COMPLETED   A35473 61150021
*                                                                       61170019
         SPACE 1                                                        61200019
         SPACE 1                                                        62200019
ERROR4   EQU   *                                                        63200019
         LR    GR5,GR3                 GET IOB ADDRESS FOR SYNADAF      63700019
         L     GR15,VIEBDSWE           ENTRY POINT IN DSCPY TO   A33288 64000020
*                                        TRANSFER CONTROL TO     A33288 64300020
*                                        IEBIOE                  A33288 64600020
         BALR  GR14,GR15               GO TO IDENTIFY THE I/O ERROR     65200019
IEBDWRR  EQU   *                                                 A33288 65220020
         ENTRY IEBDWRR                                           A33288 65240020
         B     GOT7F                   IF IEBIOE RETURNS CONTROL,       65280019
*                                        ERROR CAN BE IGNORED           65360019
         EJECT                                                          65440019
*********************************************************************** 65520019
*                                                                     * 65600019
*     THIS ROUTINE IS USED BY IEBWSU WHEN SETTING UP OVERFLOW RECORDS * 65680019
*  AND WRITING CANNOT BE DONE TO THE END OF A CYLINDER OR EXTENT      * 65760019
*  BOUNDRY.  THIS HAPPENS BECAUSE THE CROSSING OF THESE BOUNDRIES     * 65840019
*  WITH SEGMENTS IS NOT ALLOWED.  IF THE REMAINING TRACKS ARE NOT     * 65920019
*  ERASED, READING OF THE DATA CANNOT BE DONE PROPERLY.               * 66000019
*                                                                     * 66080019
*  INPUT - FIRSTERS CONTAINS THE TTR OF THE FIRST TRACK TO            * 66160019
*          BE ERASED                                                  * 66240019
*        - LASTERS CONTAINS THE TTR OF THE LAST TRACK TO BE           * 66320019
*          ERASED                                                     * 66400019
*                                                                     * 66480019
*  OUTPUT- ALL TRACKS FROM FIRSTERS TO AND INCLUDING LASTERS ARE      * 66560019
*          ERASED                                                     * 66640019
*                                                                     * 66720019
*********************************************************************** 66800019
         SPACE 2                                                        66880019
ERASEIT  EQU   *                                                        66960019
         NI    AOS,XFF-PCI             TURN OFF PCI PROCESS FLAG X010XX 67010000
         LA    GR2,OUTIOB              LOAD PTR TO IOB                  67040019
         MVI   IOBFLGS(GR2),NONSEQEN   SET COMMAND CHAIN-UNRELATED      67120019
         LA    GR7,CCW1                LOAD PTR TO SIDEQ                67200019
         LA    GR8,DEVOFF(GR0,GR2)     PTR TO DEVTYPE INFO       S20201 67206020
         TM    LEN1(GR8),RPS           IS THIS AN RPS DEVICE     S20201 67212020
         BNO   NOTRPSER                NO, GO ON                 S20201 67218020
         SPACE 1                                                 S20201 67224020
*   IF RPS IS SUPPORTED A SET SECTOR  CCW  IS                    S20201 67230000
*  APPENDED TO THE NORMAL CCW CHAIN                              S20201 67236020
*                                                                S20201 67242020
         LA    GR7,SSECTOR             PTR TO SET SECTOR CCW     S20201 67248020
         MVI   SECTOR,X00              SET SECTOR VALUE TO 0     S20201 67254020
         SPACE 1                                                 S20201 67260020
NOTRPSER EQU   *                                                 S20201 67266020
         ST    GR7,IOBCAW(GR0,GR2)  STORE  IN  IOB CAW                  67280019
         LA    GR2,IOBCCHHR(GR0,GR2) BUMP PTR TO SEEK ADDRESS           67360019
         ST    GR2,CCW1                STORE IN SIDEQ CCW               67440019
         MVI   CCW1,X31           RESTORE SIDEQ  OP CODE                67520019
         LA    GR6,ERSCCW              LOAD PTR TO ERASE CCW            67600019
         ST    GR6,CCW3                MAKE TIC PT TO ERASE             67680019
         MVI   CCW3,X08           RESTORE TIC OP CODE                   67760019
         L     GR11,FIRSTERS           LOAD TTR OF FIRST TRACK          67840019
*                                        TO BE ERASED                   67920019
         SPACE 1                                                        68000019
ERSLOOP  EQU   *                                                        68080019
         L     GR15,VTTOCC             LOAD PTR TO CONVERT RTN          68160019
         LA    GR1,OUTDCB              LOAD PTR TO OUTPUT DCB           68240019
         LA    GR2,OUTIOB              LOAD PTR TO                      68320019
         LA    GR2,IOBMCCHH(GR0,GR2)   IOB  SEEK  ADDRESS               68400019
         LR    GR0,GR11                LOAD TTR TO BE CONVERTED         68480019
         BALR  GR14,GR15               GO TO CONVERT ROUTINE            68560019
         SPACE 1                                                        68640019
         EXCP  OUTIOB                  ISSUE EXCP FOR ERASE     YL026VD 68720002
         SRL   GR11,LEN16         SHIFT OUT  RN OF TTRN                 68800019
         LA    GR11,LEN1(GR0,GR11)  BUMP TT BY ONE                      68880019
         SLL   GR11,LEN16         SHIFT  BACK FOR TTRN                  68960019
         WAIT  1,ECB=EVENTCB           WAIT FOR I/O TO COMPLETE         69040019
         SPACE 1                                                        69120019
         CLI   EVENTCB,X7F        I/O  OK                               69200019
         BE    ERASEOK                 YES, GO AROUND                   69280019
         SPACE 1                                                        69310019
         LA    GR3,OUTIOB              LOAD PTR TO IOB                  69340019
         B     ERROR4                  GO TO ERROR RTN                  69370019
         SPACE 1                                                        69400019
ERASEOK  EQU   *                                                        69440019
         CL    GR11,LASTERS            MORE TO ERASE                    69520019
         BNH   ERSLOOP                 NO, CONTINUE                     69600019
         SPACE 1                                                        69680019
         B     RETRNS1                 RETURN                    S20201 69880020
         SPACE 1                                                        70200019
*                             READING CCWS MODEL               @ZA26248 70210099
*                                                              @ZA26248 70240099
DRCCW1   CCW   X'9E',0,X'40',KBLEN+X8 READ COUNT KEY AND DATA  @ZA26248 70270099
*        LENGTH FIELD MODIFIED TO BLOK SIZE AND 8              @ZA26248 70300099
*                             FOR OTHER INPUTS.                @ZA26248 70330099
*              DIRECTOR, WRITING CCW MODEL                     @ZA26248 70360099
*                                                              @ZA26248 70390099
DWCCW1   CCW   X'B1',R0CNTF,X'60',5  SERCH ON FIRST CNT        @ZA26248 70420099
DWCCW2   CCW   X'08',DWCCW1,X'00',1  TIC UNTIL FOUND           @ZA26248 70450099
DWCCW3   CCW   X'08',DWCCW4,X'00',1  TIC AROUND CNT            @ZA26248 70480099
R0CNTF   DC    D'0'                                            @ZA26248 70510099
DWCCW4   CCW   X'B1',*,X'60',5 SEARCH FOR COUNT OF DIRECTORY   @ZA26248 70540099
         CCW   X'08',*,X'60',1      TIC TO SERCH ID            @ZA26248 70570099
         CCW   X'0D',0,X'60',KBLEN WRITE KEY+DATA CC AND SLI   @ZA26248 70600099
DWRTL    EQU   *-DWCCW4      LENGTH OF DIRECTORY WRITE CCW'S   @ZA26248 70630099
*        DWCCW4 REPEATS AS MANY TIMES AS BLOCKS/TRACK          @ZA26248 70660099
TRKSWL   EQU   DWCCW4-DWCCW1  LENGTH OF TRACK SWITCH MODEL     @ZA26248 70690099
*                                                              @ZA26248 70720099
*        OUTPUT CCW MODEL USED IN PLACE DWCCW4                 @ZA26248 70750099
DACCW4   CCW   X'1D',0,X'60',0                                 @ZA26248 70780099
DCCWHA  CCW   X'1A',*,X'70',16   READ HA CC SLI AND SKIP       @ZA26248 70810099
*                                                              @ZA26248 70840099
CC       EQU   X'60'          COMMAND CHAIN                    @ZA26248 70870099
R0OFSET  EQU   R0CNTF-DWCCW1                                   @ZA26248 70900099
DCCW3OST EQU   DWCCW3-DWCCW1                                   @ZA26248 70930099
*                                                              @ZA26248 70960099
PATCHLN  EQU   (*-START)/20            5 PER-CENT PATCH AREA LENGTH     70990099
PATCH    DC    XL(PATCHLN)'00'         PATCH AREA                A41780 71020099
*                                                              @ZA26248 71050099
DEVTAB   DSECT                                                 @ZA26248 71080099
*                                                              @ZA26248 71110099
*     DIRECT ACCESS DEVICE TABLE OVERLAY  OUTCHAR IN IEBMCA    @ZA26248 71140099
*                                                              @ZA26248 71170099
DEVCODE  DS    F                       DEVICE CODE FROM UCB    @ZA26248 71200099
MAXSIZE  DS    F                       MAX SIZE UNKEYED BLOCK  @ZA26248 71230099
MAXCC    DS    H                       NUMBER OF CYLINDER      @ZA26248 71260099
MAXHH    DS    H                       NUMBER OF TRACKS        @ZA26248 71290099
TRKCAP   DS    H                       MAXIMUM TRACK LENGTH    @ZA26248 71320099
OVERI    DS    XL1                     OVERHEAD NOT LAST RCD   @ZA26248 71350099
OVERL    DS    XL1                     OVERHEAD LAST RECORD    @ZA26248 71380099
OVERK    DS    XL1           OVERHEAD REDUCTION FOR NON-KEY    @ZA26248 71410099
DEVFLAG  DS    XL1           APPLY TOLERANCE FACTOR NOT LAST   @ZA26248 71440099
TOLER    DS    H             GAP LENGTH CALCULATE TOLERANCE    @ZA26248 71470099
TOLFAC   EQU   X'01'         TOLERANCE FACTOR TO BE ADDED      @ZA26248 71500099
HALFOVER EQU   X'08'                                    S20201 @ZA26248 71530099
*                                                              @ZA26248 71560099
*       END OF DEVTAB OVERLAY                                  @ZA26248 71590099
*                                                              @ZA26248 71620099
KBLEN   EQU  256+8    DIRECTORY BLOCK PLUS KEY                 @ZA26248 71650099
X8      EQU  X'08'                                             @ZA26248 71680099
         EJECT                                                          72300019
IEBMCA   DSECT                                                          72600019
         IEBMCA                                                         72900019
         EJECT                                                          73200019
         DCBD  DSORG=PS                                                 73500019
         EJECT                                                          73800019
IECDSECT DSECT                                                          74100019
         IECDSECT                                                       74400019
         SPACE 1                                                        74700019
IOBCAW   EQU   IOBSIOCC-DXIOB          STARTING CCW ADDRESS (CAW) IOB   75000019
DCB4IOB  EQU   IOBDCBPT-DXIOB-1        POINTER TO DCB IN IOB            75100019
IOBCSWST EQU   IOBSTAT0-DXIOB          CSW STATUS IN IOB                75300019
IOBMCCHH EQU   DXDAADDR-DXIOB          MBBCCHHR IN IOB                  75600019
IOBBCCHH EQU   DXDAADDR-DXIOB+1        BBCCHHR IN IOB                   75900019
IOBCCHHR EQU   DXDAADDR-DXIOB+3        CCHHR IN IOB                     76200019
IOBRECNO EQU   DXDAADDR-DXIOB+7        R OF MBBCCHHR IN IOB             76500019
IOBFLGS  EQU   IOBFLAG1-DXIOB          FLAG AREA IN IOB                 76800019
IOBECBCD EQU   IOBECBPT-DXIOB          ECB CODE IN IOB                  76900019
ENDEXT   EQU   X'42'                   END OF EXTENT CODE IOB/ECB       77000019
NONSEQEN EQU   X'42'                   IOB FLAGS                        77100019
         SPACE 1                                                        77400019
EXTBBDEB EQU   DXDEBBIN-DXDEB          BBCCHH FOR START OF EXTENT DEB   77700019
         SPACE 1                                                        78000019
DISKADR  EQU   DCBFDAD-IHADCB          MBBCCHHR RECORD JUST WRITTEN     78300019
DISKREC  EQU   DCBFDAD-IHADCB+7        R FIELD IN FDAD OF DCB           78600019
DEBPTR   EQU   DCBDEBAD-IHADCB         DEB POINTER IN DCB               78900019
KEYDCB   EQU   DCBKEYLE-IHADCB    KEY LENGTH IN DCB                     78950000
         END                                                            79200019
./  ADD  SSI=72900014,NAME=IEBIOE
  TITLE  'IEBIOE - IEBCOPY EXCP I/O ERROR ROUTINE'                      00400019
*D276000                                                         A34431 00450000
*C753000                                                         A41780 00500000
*A698100-698800,736100-736120                                    A44144 00510000
*C339000,374000,524000,577000,668000,711311                      A44144 00520000
*D711385-711445                                                  A44144 00530000
*A461500,461600,745500                                         @YA02574 00540002
*********************************************************************** 00550000
         SPACE 1                                                        00600000
IEBIOE   CSECT                                                          00800019
* 76000,676000-677000,708000-711000,714000,729000,753510         X010XX 01010000
*                                                                     * 01600019
*TITLE-  IEBIOE  I/O ERROR ANALYSIS ROUTINE FOR READ OR WRITE ERRORS. * 02000019
*              ON INPUT, OUTPUT OR SYSUT3 OR SYSUT4 DATA SETS.        * 02400019
*                                                                     * 02800019
*STATUS- CHANGE LEVEL 001                                             * 03200019
*                                                                     * 03600019
*FUNCTION/OPERATION-  ISSUES SYNADAF                                  * 04000019
*          PREPARES SYNADAF MESSAGE THEN GIVES IT                     * 04400019
*          ANALYSIS ERROR CONDITION                                   * 04800019
*          SETS PROPER SWITCHES                                       * 05200019
*          IN THE CASE OF AN UNLOAD OPERATION IT FLAGS THE       X010XX 05250000
*          UNLOADED DATASET AS NOT LOADABLE AND GIVES MESSAGE    X010XX 05300000
*          ISSUES SYNADRLS                                            * 05600019
*          RETURNS TO CALLER OR ENTERS TERMINATE ROUTINE              * 06000019
*                                                                     * 06400019
*ENTRY POINTS- IEBIOE                                                 * 06800019
*              IEBIOE2 -LOAD END OF FILE                         X010XX 06850000
*                      -UNLOAD BLOCKSIZE ERROR                   X010XX 06900000
*              IEBIOE3 -LOAD SYNAD ROUTINE                       X010XX 06950000
*              IEBIOE4 -UNLOAD SYNAD ROUTINE                     X010XX 07000000
*                                                                     * 07200019
*INPUT - IEBIOE-  REGISTER 5 POINTS TO IOB                       X010XX 07600000
*        IEBIOE3,IEBIOE4- PARAMETERS IN REGS 0 AND 1             X010XX 07650000
*                                                                     * 08000019
*OUTPUT- MESSAGES TO PRINTER                                          * 08400019
*        SWITCHES SET                                                 * 08800019
*                                                                     * 09200019
*EXITS-  RETURN TO CALLER IF 'SOFT' ERRORS.                           * 09600019
*        ENTER IEBVTM TERMINATE ROUTINE IF 'HARD' ERRORS.             * 10000019
*                                                                     * 10400019
*EXTERNAL ROUTINES- IEBVMS                                            * 10800019
*                                                                     * 11200019
*TABLES/WORK AREAS- SYNADAF BUFFER                                    * 11600019
*                                                                     * 12000019
*ATTRIBUTES- SERIALLY REUSEABLE                                       * 12400019
*                                                                     * 12800019
         EJECT                                                          13200019
*                                                                     * 13600019
*                         GENERAL REGISTERS                           * 14000019
*                                                                     * 14400019
         SPACE 1                                                        14800019
GR0   EQU 0                                                             15200019
GR1   EQU 1                                                             15600019
GR2   EQU 2                                                             16000019
GR3   EQU 3                                                             16400019
GR4   EQU 4                            IEBMCA POINTER                   16800019
GR5   EQU 5                            ADDRESS OF IOB                   17200019
GR6   EQU 6                                                             17600019
GR7   EQU 7                                                             18000019
GR8   EQU 8                                                             18400019
GR9   EQU 9                                                             18800019
GR10     EQU   10                      BASE REGISTER TO MESSAGE CSECT   19200019
GR11  EQU 11                                                            19600019
GR12     EQU   12                      MAIN BASE REGISTER               20000019
GR13     EQU   13                                                       20400019
GR14     EQU   14                                                       20800019
GR15     EQU   15                                                       20900019
         SPACE 1                                                        21000019
         USING IEBIOE,GR15             ADDRESSABILITY FOR SYNADAF       21100019
         USING IEBMCA,GR4              ADDRESABILITY TO MCA             21200019
         USING DXIOB,GR5               ADDRESSABILITY TO IOB            21300019
         SPACE 1                                                        21400019
         SAVE  (14,12),,*              STANDARD LINKAGE                 21500019
         SPACE 1                                                        21600019
*    THE FOLLOWING MACRO PLACES AN ERROR MESSAGE IN A DYNAMIC           21700019
*  BUFFER, OBTAINS A SAVE AREA, AND LINKS THE NEW SAVE AREA WITH        21800019
*  THE OLD ONE                                                          21900019
         SPACE 1                                                        22000019
         SYNADAF  ACSMETH=EXCP,PARM1=(GR5)                              22100019
         SPACE 1                                                        22200019
         DROP  GR15                                                     22300019
         BALR  GR12,GR0                INITIALIZE BASE REGISTER         22400019
         USING START,GR12              ESTABLISH ADDRESSABILITY         22500019
START    EQU   *                                                        22600019
         L     GR10,AMSG               LOAD PTR TO MSG CSECT            22700019
         USING IEBIOEMG,GR10           ADDRESSABILITY TO MESG'S         22800019
         SPACE 1                                                        22850000
         OI    IOEF2,SNDFUSED+IOEFENT  INDICATE SYNADAF ISSUED   X010XX 22860000
*                                        AND IOE ENTERED         X010XX 22870000
         SPACE 1                                                        22880000
         MVI   MSGBUF,BLANK                                             22900019
         MVC   MSGBUF+P1(L120),MSGBUF  CLEAR MSG BUFFER                 23000019
         CLI   RCBUF,RC4               RETURN CODE GT THAN 4            23100019
         BNL   SETUP                   YES, GO AROUND                   23200019
         MVI   RCBUF,RC4               SET RETURN CODE = 4              23300019
SETUP    EQU   *                                                        23400019
         MVC   MSGBUF+P1(L7),IEBPRFX   SET UP MSG NUMBER                23500019
         MVC   MSGBUF+P9(L9),TEXT5     I/O ERROR                        23600019
         MVC   MSGBUF+P42(L78),X50(GR1) MOVE SYNADAF MSG TO BUFFER      23700019
         SPACE 1                                                        23800019
         TM    WSFLAG,RDGSW            READING                          23900019
         BO    SETREAD                 YES, GO ON                       24000019
         TM    FORM,ERASE              ERASING                          24100019
         BO    SETERS                  YES, GO ON                       24200019
         TM    TAG,TAG6                READ BACK CHECKING               24300019
         BO    SETRDCK                 YES, GO ON                       24400019
         SPACE 1                                                        24500019
         MVC   MSGBUF+P19(L14),WCN     ERROR PREFIX=WRITE               24600019
         B     GIVEMESS                GIVE MESSAGE                     24700019
         SPACE 1                                                        24800019
SETREAD  EQU   *                                                        24900019
         MVC   MSGBUF+P19(L13),RCN     ERROR PREFIX=READ                25000019
         B     GIVEMESS                GIVE ERROR MESSAGE               25100019
         SPACE 1                                                        25200019
SETERS   EQU   *                                                        25300019
         MVC   MSGBUF+P19(L14),ERSCON  ERROR PREFIX=ERASE               25400019
         B     GIVEMESS                GIVE ERROR MESSAGE               25500019
         SPACE 1                                                        25600019
SETRDCK  EQU   *                                                        25700019
         MVC   MSGBUF+P19(L22),RBCN    ERROR PREFIX=READBACK CHECK      25800019
         SPACE 1                                                        25900019
GIVEMESS EQU   *                                                        26000019
         MVI   MSG1,IOERF+LASTMSG      SET SYNAD MESSAGE+LAST           26100019
         BAL   GR9,GOVMS               GO TO MESSAGE WRITER             26200019
         SPACE 1                                                        26300019
         TM    WSFLAG,RDGSW            ERROR READING                    26400019
         BNO   WRITERR                 NO, GO TO WRITE ERROR ROUTINE    26500019
         EJECT                                                          26600019
*                                                                       26700019
*     THIS SECTION HANDLES READ ERRORS BY GIVING CONTROL TO             26800019
*  APPROPRIATE ROUTINES                                                 26900019
*                                                                       27000019
*     NOTE THAT TESTING FOR TYPE OF READ DONE MUST BE THE SAME AS       27030019
*  THE LOGIC IN MODULE IEBDRD                                           27060019
         SPACE 2                                                        27100019
         TM    SENSE,SENSE3            ONE RECORD AT A TIME PROCESSING  27200019
         BZ    CHECKMOR                NO, GO AROUND                    27300019
         TM    SENSE,SENSE2            READING NOTELIST                 27400019
         BO    INMRERR                 YES, GO HANDLE                   27500019
         TM    SENSE,SENSE1            READING FROM SYSUT3       A34431 27520020
         BO    UT3READ                 YES, GO HANDLE            A34431 27540020
         B     INMRERR                 MUST BE A RC REQUEST ON   A34431 27560020
*                                       THE INPUT DATA SET       A34431 27580020
*                                       HANDLE AS A MEMBER READ  A34431 27600020
*                                       ERROR                    A34431 27620020
CHECKMOR EQU   *                                                        27700019
         TM    STATUS,STAT4            INPUT MEMBER ERROR               27800019
         BO    INMRERR                 YES, GO HANDLE                   27900019
         TM    STATUS,STAT1            INPUT DIRECTORY ERROR            28000019
         BO    INDRERR                 YES, GO HANDLE                   28100019
         TM    STATUS,STAT2            OUTPUT DIRECTORY ERROR           28200019
         BO    OTDRERR                 YES, GO HANDLE                   28300019
         B     UT4READ                 MUST BE A SYSUT4 ERROR           28400019
         EJECT                                                          28500019
*                                                                       28600019
*     THIS ROUTINE HANDLES INPUT DIRECTORY READ ERRORS                  28700019
*                                                                       28800019
         SPACE 2                                                        28900019
INDRERR  EQU   *                                                        29000019
         MVI   IOEF1,ERF2              INDICATE INPUT DIRECTORY READ    29100019
*                                         ERROR                         29200019
         B     EXIT                    GO TO EXIT ROUTINE               29300019
         EJECT                                                          29400019
*                                                                       29500019
*     THIS ROUTINE HANDLES INPUT MEMBER DATA READ ERRORS                29600019
*                                                                       29700019
         SPACE 2                                                        29800019
INMRERR  EQU   *                                                        29900019
         L     GR3,IDEAD               LOAD PTR TO MEMBER NAME          30000019
         SPACE 1                                                        30100019
         MVC   MSGBUF+P1(L7),NUMB0     SET UP MESSAGE                   30200019
         MVC   MSGBUF+P10(L24),TEXT5                                    30300019
         MVC   MSGBUF+P20(L7),TEXT1                                     30400019
         MVC   MSGBUF+P35(L8),X0(GR3)                                   30500019
         SPACE 1                                                        30600019
         MVI   MSG1,IOERF+LASTMSG      SET SYNAD MESSAGE+LAST           30700019
         BAL   GR9,GOVMS               GO TO MSG WRITER                 30800019
         SPACE 1                                                        30900019
         BAL   GR9,TESTSTAT            CHECK FOR HARD OR SOFT ERROR     31000019
*                                      RETURN+0 = SOFT ERROR            31100019
*                                      RETURN+4 = HARD ERROR            31200019
         B     IGNORE                  SOFT ERROR, IGNORE               31300019
         SPACE 1                                                        31400019
         BAL   GR7,XTRAMSG             GO PRINT ONE MORE ERROR          31500019
*                                        MESSAGE                        31600019
         MVI   IOEF1,ERF3              INDICATE MEMBER READ ERROR       31700019
         B     EXIT                    GO TO EXIT ROUTINE               31800019
         EJECT                                                          31900019
*                                                                       32000019
*     THIS SECTION HANDLES OUTPUT DIRECTORY READ ERRORS                 32100019
*                                                                       32200019
         SPACE 2                                                        32300019
OTDRERR  EQU   *                                                        32400019
         MVI   IOEF1,ERF4              INDICATE AS OD READ ERROR        32500019
         NI    IOEF2,FF-ERF10          TURN OFF ERF10                   32600019
         B     EXIT                    GO TO EXIT ROUTINE               32700019
         EJECT                                                          32800019
*                                                                       32900019
*     THIS ROUTINE HANDLES SYSUT3 READ ERRORS                           33000019
*                                                                       33100019
         SPACE 2                                                        33200019
UT3READ  EQU   *                                                        33300019
         MVC   MSGBUF+P1(L7),NUMB2     SET UP MESSAGE                   33400019
         MVC   MSGBUF+P10(L29),TEXT3                                    33500019
         MVC   MSGBUF+P40(L16),SUFFIX                                   33600019
         SPACE 1                                                        33700019
         MVI   MSG1,IOERF+LASTMSG      SET SYNAD MESSAGE+LAST           33800019
         BAL   GR9,GOVMS8              GO TO MSG WRITER          A44144 33900000
         SPACE 1                                                        34000019
         MVI   IOEF1,ERF8              FLAG AS SYSUT3 READ ERROR        34100019
         TM    ULLDST,UNLOAD           UNLOAD OPERATION          X010XX 34110000
         BO    IOE00785                YES - GO TO EXIT RTN BUT  X010XX 34120000
*                                        SKIP TEST UNLOAD        X010XX 34122000
         TM    SENSE,SENSE8       DID VTT REQUEST I/O            A33287 34130020
         BO    EXIT                    YES, EXIT TO VTM          A33287 34160020
         TM    COMDCDSW,COMPRESS       COMPRESS OPERATION               34200019
         BZ    FLAGIT1                 NO, GO AROUND                    34300019
         TM    TAG,TAG8                LOOKING FOR HOLES - MCM          34330019
         BO    FLAGIT1                 YES, GO AROUND                   34360019
         SPACE 1                                                        34400019
         MVC   MSGBUF+P1(L78),TEXT6    SET UP INVALID DIRECTORY MSG     34500019
         MVI   MSG1,IOERF+LASTMSG      SET SYNAD+LAST MSG               34600019
         BAL   GR9,GOVMS               ISSUE ERROR MSG                  34700019
         B     EXIT                    GO TO EXIT ROUTINE               34800019
         SPACE 1                                                        34900019
FLAGIT1  EQU   *                                                        35000019
         MVI   VTMFLG1,IOERROR         INDICATE IOERROR                 35100019
         L     GR3,TABAD               FLAG APPROPRIATE CTLTAB ENTRY    35200019
         LA    GR2,X10                    AS DON'T COPY                 35300019
         SR    GR3,GR2                                                  35400019
         OI    X0(GR3),SEBIT4                                           35500019
         B     IGNORE                  GO TO EXIT ROUTINE               35600019
         EJECT                                                          35700019
*                                                                       35800019
*     THIS ROUTINE HANDLES SYSUT4 READ ERRORS                           35900019
*                                                                       36000019
         SPACE 2                                                        36100019
UT4READ  EQU   *                                                        36200019
         NI    IOEF1,FF-ERF4           ASSURE ERF4=0                    36300019
         OI    IOEF2,ERF10             INDICATE ERROR READING           36400019
*                                         FROM SYSUT4                   36500019
         TM    FLG7,DM                 DIRECTORY MERGE PHASE            36600019
         BO    DONTSET                 YES, LEAVE ERF4=0                36700019
         OI    IOEF1,ERF4              INDICATE SYSUT4 ERROR NOT IN     36800019
*                                         DIRECTORY MERGE PHASE         36900019
         B     EXIT                    GO TO EXIT ROUTINE               37000019
DONTSET  EQU   *                                                        37100019
         MVI   MSG1+P1,WODINC          INCMP DIRECTORY MSG              37200019
         MVI   MSG1,LASTMSG            SET LAST MESSAGE                 37300019
         BAL   GR9,GOVMS12             GO TO MESSAGE WTR         A44144 37400000
         B     EXIT                    GO TO EXIT ROUTINE               37500019
         EJECT                                                          37600019
*                                                                       37700019
*     THIS SECTION HANDLES WRITE ERRORS BY GIVING CONTROL TO            37800019
*  APPROPRIATE ROUTINES                                                 37900019
*                                                                       38000019
*     NOTE THAT TESTING FOR TYPE OF WRITE DONE MUST BE THE SAME AS      38030019
*  THE LOGIC IN MODULE IEBDWR                                           38060019
         SPACE 2                                                        38100019
WRITERR  EQU   *                                                        38200019
         TM    FORM,ERASE              ERASE ERROR                      38300019
         BO    OTMERS                  YES, GO HANDLE                   38400019
         SPACE 1                                                        38500019
         TM    TAG,TAG4                WRITE UT3 ERROR                  38600019
         BO    UT3WRITE                YES, GO HANDLE                   38700019
         TM    TAG,TAG1                WRITING ODB'S TO OUTPUT          38800019
         BO    OTDWERR                 YES, GO HANDLE                   38900019
         TM    TAG,TAG2                WRITING MEMBER DATA              39000019
         BO    OTMWERR                 YES, GO HANDLE                   39100019
         B     UT4WRITE                MUST BE A UT4 WRITE ERROR        39200019
         EJECT                                                          39600019
*                                                                       39700019
*     THIS ROUTINE HANDLES OUTPUT DIRECTORY WRITE ERRORS                39800019
*                                                                       39900019
         SPACE 2                                                        40000019
OTDWERR  EQU   *                                                        40100019
         L     GR3,WRPCICNT            LOAD NUMBER PCI'S TAKEN          40200019
         LTR   GR3,GR3                 IS IT ZERO                       40300019
         BZ    USEPTR1                 YES GO AROUND                    40400019
         SPACE 1                                                        40500019
         L     GR7,WRPTR2              LOAD ADDRESS OF WRITE NOT        40600019
*                                         EXECUTED (ATLEAST ONE PCI     40700019
*                                         TAKEN)                        40800019
         B     FINDBLOK                GO AROUND                        40900019
USEPTR1  EQU   *                                                        41000019
         L     GR7,WRPTR1              LOAD ADDRESS OF WRITE NOT        41100019
*                                         EXECUTED (NO PCI'S TAKEN)     41200019
         SPACE 1                                                        41300019
FINDBLOK EQU   *                                                        41400019
         L     GR6,X0(GR0,GR7)         LOAD FAILING CCW (POINTS TO      41500019
*                                         BLOCK NOT WRITTEN)            41600019
         LA    GR6,FIRSTNAM(GR0,GR6)   BUMP TO FIRST NAME IN BLOCK      41700019
         SPACE 1                                                        41800019
         MVC   MSGBUF+P1(L7),NUMB3     SET UP MESSAGE                   41900019
         MVC   MSGBUF+P10(L59),TEXT4                                    42000019
         MVC   MSGBUF+P18(L8),X0(GR6)                                   42100019
         MVC   MSGBUF+P70(L16),SUFFIX                                   42200019
         SPACE 1                                                        42300019
         TM    TAG,TAG6                RDBACK CHECKING                  42400019
         BNO   CHKCCWS                 NO, GO AROUND                    42450019
         MVC   MSGBUF+P18(L8),ASTERICS MOVE **'S TO BUFFER              42500019
         B     ISSUEMSG                ISSUE MSG                        42550019
         SPACE 1                                                        42600019
*   THE NUMBER OF PCI'S TAKEN IS NOW INSPECTED TO SEE IF THE VALUE      42800019
*  IS ATLEAST 2.  IF IT IS NOT, NO FURTHER ERROR RECOVERY IS POSSIBLE   43000019
*  SINCE THE LOCATION 'LASTGB' MAY CONTAIN GARBAGE.                     43200019
         SPACE 1                                                        43400019
CHKCCWS  EQU   *                                                        43600019
         L     GR3,WRPCICNT            LOAD NUMBER OF PCI'S TAKEN       43800019
         CH    GR3,TWOPCIS             HAVE ATLEAST TWO PCI'S BEEN      44000019
*                                        TAKEN                          44200019
         BL    ISSUEMSG                NO, CAN'T DO ANY MORE            44400019
         SPACE 1                                                        44600019
         LA    GR2,LASTGB              LOAD POINTER TO MBBCCHHR OF      44800019
*                                        LAST SUCCESSFULLY WRITTEN      45000019
*                                        BLOCK                          45200019
         SPACE 1                                                        45800019
         L     GR1,IOBWGHT                                              45900019
         LA    GR5,ERRIOB              CHANGE BASE REGISTER FOR IOB     46000019
         ST    GR1,IOBWGHT             STORE DCB PTR IN ERRORIOB        46100019
         ST    GR4,MCAADDR             STORE ADDR. OF IEBMCA   @YA02574 46130002
*                                      IN ERRORIOB             @YA02574 46160002
         MVC   DXDAADDR(L8),X0(GR2)    MOVE ADDRESS OF LAST GOOD        46200019
*                                        ODB TO SEEK ADDRESS            46300019
         LA    GR7,CCWS                PTR TO CCW CHAIN                 46400019
         ST    GR7,IOBSIOCC            STORE IN IOB                     46500019
         L     GR8,FLG1                PTR TO FIRST BUFFER              46600019
         LA    GR8,X0(GR0,GR8)          CLEAR HIGH ORDER BYTE           46700019
         ST    GR8,RDWRT               STORE IN CCW                     46800019
         MVI   RDWRT,RKD               RESTORE RKD                      46900019
         LA    GR9,FINDLAST            SET UP FOR LATER BRANCH          47000019
         SPACE 1                                                        47100019
EXCP     EXCP  (GR5)                   READ/WRITE A SINGLE BLOCK        47200019
         WAIT  ECB=ERRECB              WAIT FOR I/O COMPLETION          47300019
         CLI   ERRECB,OKCODE           I/O OK                           47400019
         BNE   ISSUEMSG                NO, CAN'T DO ANY MORE            47500019
         BR    GR9                     RETURN OR NSI                    47600019
         SPACE 1                                                        47700019
*    THE LAST DE IN BLOCK IS SEARCHED FOR AND REPLACED WITH FF'S        47800019
         SPACE 1                                                        47900019
FINDLAST EQU   *                                                        48000019
         LA    GR1,X2                  INITIALIZE COUNT OF BYTES        48100019
*                                        USED IN DB TO 2                48200019
         LA    GR7,MASK1F              PLACE MASK OF X'1F' IN REGISTER  48300019
         LA    GR6,X10(GR0,GR8)        PTR TO FIRST DE IN BLOCK         48400019
CMPLOOP  EQU   *                                                        48500019
         CLC   X0(L8,GR8),X0(GR6)      LAST ENTRY                       48600019
         BNH   GOTLAST                 YES, GO ON                       48700019
         SR    GR11,GR11                                                48800019
         IC    GR11,X11(GR0,GR6)       GET C OF TTRC                    48900019
         NR    GR11,GR7                CLEAR ALIAS AND USER TTR         49000019
*                                        INFORMATION                    49100019
*                                      (GR11 NOW CONTAINS NO. HALF-     49200019
*                                      WORDS OF USER DATA)              49300019
         AR    GR11,GR11               GET NO. BYTES OF USER DATA       49400019
         LA    GR11,X12(GR0,GR11)      ADD NAME LENGTH+TTRC LENGTH      49500019
         AR    GR6,GR11                BUMP TO NEXT DE                  49600019
         AR    GR1,GR11                UP COUNT OF DB BYTES USED        49700019
         B     CMPLOOP                 CONTINUE CHECKING                49800019
         SPACE 1                                                        49900019
GOTLAST  EQU   *                                                        50000019
         MVC   WKA1(L8),X0(GR8)        SAVE OLD KEY                     50100019
         MVI   X0(GR8),FF              SET KEY=FF'S                     50200019
         MVC   X1(L7,GR8),X0(GR8)                                       50300019
         SPACE 1                                                        50400019
         MVC   X0(L8,GR6),X0(GR8)      SET LAST ENTRY = FF'S            50500019
         XC    X8(L4,GR6),X8(GR6)      ZERO TTR6 FIELD OF LAST ENTRY    50600019
         LA    GR1,X12(GR0,GR1)        UP COUNT OF DB BYTES USED TO     50700019
*                                        INCLUDE FF'S ENTRY             50800019
         STH   GR1,WKA1+P8             STORE DB BYTE COUNT              50900019
         MVC   X8(L2,GR8),WKA1+P8        IN UPDATED BLOCK               51000019
         MVI   RDWRT,WKD               CHANGE RKD CCW TO WKD            51100019
         BAL   GR9,EXCP                UPDATE ODB                       51200019
         SPACE 1                                                        51300019
         MVC   MSGBUF+P18(L8),WKA1     UPDATE MESSAGE                   51400019
         SPACE 1                                                        51500019
ISSUEMSG EQU   *                                                        51600019
         MVI   MSG1,IOERF+LASTMSG      SET SYNAD MESSAGE+LAST           51700019
         BAL   GR9,GOVMS               GO TO MESSAGE WRITER             51800019
         SPACE 1                                                        51900019
         MVI   IOEF1,ERF5              INDICATE OUTPUT DIRECTORY        52000019
*                                      WRITE ERROR ON OUTPUT            52100019
         MVI   MSG1+P1,PLAMPID         POSS LOSS OR INCMP DIR MSG       52200019
         MVI   MSG1,LASTMSG            SET LAST MESSAGE                 52300019
         BAL   GR9,GOVMS12             GO TO MESSAGE WTR         A44144 52400000
         B     EXIT                    GO TO EXIT ROUTINE               52500019
         EJECT                                                          52600019
*                                                                       52700019
*     THIS ROUTINE HANDLES OUTPUT MEMBER WRITE ERRORS                   52800019
*                                                                       52900019
         SPACE 2                                                        53000019
OTMWERR  EQU   *                                                        53100019
         LA    GR2,DXDAADDR            POINT TO IOB SEEK ADDRESS        53200019
         L     GR1,IOBWGHT             POINT TO DCB                     53300019
         L     GR15,VCCOTT             PTR TO CCOTT                     53400019
         BALR  GR14,GR15               CONVERT TO TTR                   53500019
         SPACE 1                                                        53600019
         MVC   MSGBUF+P1(L7),NUMB1     SET UP MESSAGE                   53700019
         MVC   MSGBUF+P10(L37),TEXT5                                    53800019
         UNPK  MSGBUF+P47(L7),WKA1(L4)                                  53900019
         TR    MSGBUF+P47(L6),TABLE-P240                                54000019
         MVI   MSGBUF+P53,BLANK                                         54100019
         TM    TAG,TAG6                ERROR ON RDBACK CHK              54200019
         BNO   DONTMOVE                NO, GO AROUND                    54300019
         MVC   MSGBUF+P54(L21),TEXT8                                    54400019
DONTMOVE EQU   *                                                        54500019
         SPACE 1                                                        54600019
         MVI   MSG1,IOERF+LASTMSG      SET SYNAD MESSAGE+LAST           54700019
         BAL   GR9,GOVMS               GO TO MESSAGE WRITER             54800019
         SPACE 1                                                        54900019
         TM    TAG,TAG6                ERROR DURING READBACK CHECK      55000019
         BNO   NOTRB                   NO, GO AROUND                    55100019
         SPACE 1                                                        55200019
         BAL   GR9,TESTSTAT            CHECK FOR HARD OR SOFT ERROR     55300019
*                                      RETURN+0 = SOFT ERROR            55400019
*                                      RETURN+4 = HARD ERROR            55500019
         B     IGNORE                  IGNORE SOFT ERROR                55600019
         SPACE 1                                                        55700019
NOTRB    EQU   *                                                        55800019
         BAL   GR7,XTRAMSG             GO PRINT ONE MORE ERROR          55900019
*                                        MESSAGE                        56000019
         MVI   IOEF1,ERF6              INDICATE MEMBER WRITE ERROR      56100019
         B     EXIT                    GO TO EXIT ROUTINE               56200019
         EJECT                                                          56300019
*                                                                       56400019
*     THIS ROUTINE HANDLES SYSUT3 WRITE ERRORS                          56500019
*                                                                       56600019
         SPACE 2                                                        56700019
UT3WRITE EQU   *                                                        56800019
         MVC   MSGBUF+P1(L7),NUMB2     SET UP MESSAGE                   56900019
         MVC   MSGBUF+P10(L29),TEXT3                                    57000019
         MVC   MSGBUF+P40(L16),SUFFIX                                   57100019
         L     GR3,ADWK                                                 57200019
         LA    GR3,X12(GR0,GR3)        GET PTR TO NAME                  57300019
         MVC   MSGBUF+P17(L8),X0(GR3)                                   57400019
         SPACE 1                                                        57500019
         MVI   MSG1,IOERF+LASTMSG      SET SYNAD+LAST MSG               57600019
         BAL   GR9,GOVMS8              GO TO MESSAGE WRITER      A44144 57700000
         SPACE 1                                                        57800019
         MVI   IOEF1,ERF7              INDICATE SYSUT3 WRITE ERROR      57900019
         TM    ULLDST,UNLOAD           UNLOAD OPERATION          X010XX 57910000
         BO    IOE00785                YES - GO TO EXIT RTN BUT  X010XX 57920000
*                                        SKIP TEST UNLOAD        X010XX 57922000
         TM    SENSE,SENSE8            DID VTT REQUEST I/O       A33287 57930020
         BO    EXIT                    YES, EXIT TO VTM          A33287 57960020
         TM    COMDCDSW,COMPRESS       COMPRESS OPERATION               58000019
         BZ    FLAGIT2                 NO, GO AROUND                    58100019
         SPACE 1                                                        58200019
         MVC   MSGBUF+P1(L78),TEXT6    SET UP INVALID DIRECTORY MSG     58300019
         MVI   MSG1,IOERF+LASTMSG      SET SYNAD+LAST MSG               58400019
         BAL   GR9,GOVMS               ISSUE ERROR MSG                  58500019
         B     EXIT                    GO TO EXIT ROUTINE               58600019
         SPACE 1                                                        58700019
FLAGIT2  EQU   *                                                        58800019
         MVI   VTMFLG1,IOERROR         INDICATE IOERROR                 58900019
         SPACE 1                                                        59000019
         TM    FLG7,COP                IN MEMBER COPY PHASE             59100019
         BO    CPYPHASE                YES, GO AROUND                   59200019
         SPACE 1                                                        59300019
*     NOTE THAT IF THIS IS THE BUILD PHASE, THE ONLY WAY TO FIND        59400019
*  THE APPROPRIATE CTLTAB ENTRY TO FLAG AS DON'T COPY IS THROUGH        59500019
*  IEBMBT'S SAVE AREA                                                   59600019
         SPACE 1                                                        59700019
         L     GR3,SV3+SV3TAB          GET PTR TO CTLTAB ENTRY          59800019
*                                      BEING BUILT                      59900019
         B     FLAGIT                  GO AROUND                        60000019
         SPACE 1                                                        60100019
CPYPHASE EQU   *                                                        60200019
         L     GR3,TABAD                                                60300019
         LA    GR2,X10                                                  60400019
         SR    GR3,GR2                 GET PTR TO ENTRY BEING           60500019
*                                         BUILT                         60600019
         SPACE 1                                                        60700019
FLAGIT   EQU   *                                                        60800019
         OI    X0(GR3),SEBIT4          FLAG ENTRY AS DON'T COPY         60900019
         B     IGNORE                  GO TO EXIT ROUTINE               61000019
         EJECT                                                          61100019
*                                                                       61200019
*     THIS ROUTINE HANDLES SYSUT4 WRITE ERRORS                          61300019
*                                                                       61400019
         SPACE 2                                                        61500019
UT4WRITE EQU   *                                                        61600019
         BAL   GR7,XTRAMSG             GIVE NO MEMBERS COPIED MSG       61700019
         MVI   IOEF1,ERF9              INDICATE SYSUT4 WRITE ERROR      61800019
         B     EXIT                    GO TO EXIT ROUTINE               61900019
         EJECT                                                          62000019
*                                                                       62100019
*     THIS ROUTINE TESTS FOR SOFT AND HARD ERRORS.  IF THE ERROR        62200019
*  IS SOFT, THE CALLER IS RETURNED TO AT REGISTER 9 +0.  IF THE ERROR   62300019
*  IS HARD, THE CALLER IS RETURNED TO AT REGISTER 9 +4.                 62400019
*                                                                       62500019
         SPACE 2                                                        62600019
TESTSTAT EQU   *                                                        62700019
         CLI   EVENTCB,PERMIO          ECB POSTED AS X'41'              62800019
*                                      (THIS IS THE ONLY TIME THAT      62900019
*                                      IOBCSW CONTENTS ARE USEFUL)      63000019
         BNE   HARDERR                 NO, HARD ERROR                   63100019
         SPACE 1                                                        63200019
         TM    IOBSTAT0,UCHECK         UNIT CHECK POSTED                63300019
*                                      (THIS BIT MUST BE ON TO          63400019
*                                      ASSURE IOB SENSE INFORMATION     63500019
*                                      HAS BEEN BEEN PROVIDED)          63600019
         BNO   HARDERR                 NO, HARD ERROR                   63700019
         SPACE 1                                                        63800019
         CLI   IOBSENS0,DATACK         DAT CHECK ONLY                   63900019
         BNE   HARDERR                 NO, HARD ERROR                   64000019
         SPACE 1                                                        64100019
         CLI   IOBSENS1,ZERO           SENSE BYTE1=0                    64200019
*                                      (THIS MUST BE ZERO SINCE WE      64300019
*                                      CAN'T HANDLE.  FOR EXAMPLE,      64400019
*                                      DATA CHECK IN COUNT FIELD        64500019
*                                      WOULD SET DATA CHECK IN SENSE    64600019
*                                      BYTE 0 AND DATA CHECK IN COUNT   64700019
*                                      FIELD IN SENSE BYTE1)            64800019
         BE    SOFTERR                 YES, SOFT ERROR                  64900019
         SPACE 1                                                        65000019
HARDERR  EQU   *                                                        65100019
         LA    GR9,X4(GR0,GR9)         BUMP RETURN ADDRESS BY 4         65200019
SOFTERR  EQU   *                                                        65300019
         BR    GR9                     RETURN                           65400019
         EJECT                                                          65500019
*                                                                       65600019
*   THIS ROUTINE PRINTS ONE OF TWO ADDITIONAL ERROR MESSAGES            65700019
*  AND IS USED BY OTMWERR AND INMRERR                                   65800019
*                                                                       65900019
         SPACE 2                                                        66000019
XTRAMSG  EQU   *                                                        66100019
         TM    COMDCDSW,COMPRESS       COMPRESS BEING DONE              66200019
         BZ    NOTCMPRS                NO, GO AROUND                    66300019
         SPACE 1                                                        66400019
         MVC   MSGBUF+P1(L78),TEXT6    SET UP DIRECTORY INVALID         66500019
*                                        MESSAGE                        66600019
         MVI   MSG1,IOERF+LASTMSG      SET SYNAD MESSAGE + LAST         66700019
         BAL   GR9,GOVMS8              ISSUE MESSAGE             A44144 66800000
         SPACE 1                                                        66900019
         BR    GR7                     RETURN                           67000019
         SPACE 1                                                        67100019
NOTCMPRS EQU   *                                                        67200019
         L     GR3,NXTINDS             LOAD PTR TO INDD TABLE           67300019
*                                        ENTRY                          67400019
         MVC   NAMEFLD(L8),X2(GR3)     MOVE INDD NAME FOR PRINTING      67500019
         MVI   PARAMS,NAME+MSGULLD     INDIC NAME TO BE PRINTED  X010XX 67600000
*                                        AND ' COPIED ' IN MSG   X010XX 67650000
         MVI   NAMEDISP,X36            SET OFFSET FOR NAME       X010XX 67700000
         MVI   COPDISP,OFF11           DISP OF ' COPIED ' IN MSG X010XX 67750000
         MVI   MSG1,LASTMSG+PBIT       SET LAST MSG+BUILD               67800019
         MVI   MSG1+P1,NOMBCPDM        NO MEMBERS COPIED FROM INDD MSG  67900019
         BAL   GR9,GOVMS               ISSUE MSG                        68000019
         SPACE 1                                                        68100019
         BR    GR7                     RETURN                           68200019
         EJECT                                                          68300019
*                                                                       68400019
*  THIS SECTION HANDLES ERASE ERRORS                                    68500019
*                                                                       68600019
         SPACE 2                                                        68700019
OTMERS   EQU   *                                                        68800019
         BAL   GR7,XTRAMSG             GIVE NO MEMBERS COPIED MSG       68900019
         SPACE 1                                                        69000019
         MVI   IOEF1,ERF6              INDICATE MEMBER WRITE ERROR      69100019
         B     EXIT                    GO TO EXIT ROUTINE               69200019
         EJECT                                                          69300019
*                                                                       69400019
*     THIS ROUTINE DOES ALL MESSAGE WRITING FOR IEBIOE.  CONTROL IS     69500019
* PASSED TO IEBVMS AND RETURN IS MADE TO THE CALLER                     69600019
*                                                                       69700019
         SPACE 2                                                        69800019
GOVMS12  EQU   *                                                 A44144 69810000
         MVI   RCBUF,RC12         HIGHEST RETURN CODE            A44144 69820000
         B     GOVMS              GO WRITE MSG                   A44144 69830000
GOVMS8   EQU   *                                                 A44144 69850000
         CLI   RCBUF,RC8               RETURN CODE 8 OR HIGHER   A44144 69860000
         BNL   GOVMS                   YES, GO AROUND            A44144 69870000
         MVI   RCBUF,RC8               SET RETURN CODE = 8       A44144 69880000
GOVMS    EQU   *                                                        69900019
         L     GR15,VIEBVMS            LOAD PTR TO VMS                  70000019
         BALR  GR14,GR15               PRINT MESSAGE                    70100019
         SPACE 1                                                        70200019
         MVI   MSGBUF,BLANK            CLEAR BUFFER                     70300019
         MVC   MSGBUF+P1(L120),MSGBUF                                   70400019
         SPACE 1                                                        70500019
         BR    GR9                     RETURN                           70600019
         EJECT                                                          70700019
*                                                                X010XX 70750000
*   THIS SECTION HANDLES-  END OF FILE WHEN LOADING              X010XX 70760000
*                          BLOCKSIZE ERROR WHEN UNLOADING        X010XX 70770000
*                                                                X010XX 70780000
         SPACE 2                                                        70790000
IEBIOE2  EQU   *                                                 X010XX 70792000
         ENTRY IEBIOE2                                           X010XX 70794000
         SPACE 1                                                        70796000
*   AT THIS ENTRY POINT REGISTERS ARE NOT SAVED AS CALLER IS NOT X010XX 70796400
* RETURNED TO AND SAVING MAY RESULT IN CORRUPTION OF IEBIOE'S    X010XX 70796800
* OWN CODE BECAUSE OF THE OVERLAY STRUCTURE                      X010XX 70797200
         SPACE 1                                                        70797600
         BALR  GR12,GR0                LOAD ADDR NEXT SEQ INSTR  X010XX 70798800
IOE00710 EQU   *                                                 X010XX 70799200
         LA    GR15,IOE00710-START                               X010XX 70799600
         SR    GR12,GR15               ESTABLISH ADDRESSABILITY  X010XX 70799700
         L     GR10,AMSG               LOAD POINTER TO MSG CSECT X010XX 70799800
         SPACE 1                                                        70799900
         LA    GR13,SV5                ADDR OF SAVE AREA FOR     X010XX 70843200
*                                        CALLED ROUTINES         X010XX 70845200
         SPACE 1                                                        70865200
         NI    IOEF2,FF-SNDFUSED       INDICATE NO SYNADAF USED  X010XX 70865600
         OI    IOEF2,IOEFENT           INDICATE IOE ENTERED      X010XX 70866000
         SPACE 1                                                        70866400
         MVI   MSGBUF,BLANK            CLEAR MESSAGE BUFFER      X010XX 70866500
         MVC   MSGBUF+P1(L120),MSGBUF                            X010XX 70874000
         SPACE 1                                                        70877700
         TM    IOEF2,VERPEST           UNLOAD BLOCKSIZE ERROR    X010XX 70887700
         BO    IOE00720                YES - SET UP APPROPR MSG  X010XX 70888100
         SPACE 1                                                        70888500
         MVC   MSGBUF+P1(L57),TEXT9    SET UP MSG - END OF FILE  X010XX 70888600
*                                        READ ON LOAD DATA SET   X010XX 70888700
         L     GR3,NXTINDS             POINT TO INDD SLOT        X010XX 70888800
         MVC   MSGBUF+P58(L8),X2(GR3)  MOVE IN NAME LOAD DATASET X010XX 70892500
         B     IOE00770                CONTIN IN LOAD/UNLOAD     X010XX 70894500
*                                        SYNAD ROUTINE           X010XX 70895000
         SPACE 1                                                        70895300
IOE00720 EQU   *                       SET UP FIRST PART         X010XX 70895700
         MVC   MSGBUF+P1(L78),TEXT11A  OF BLKSIZE ERROR MSG      X010XX 70896100
         L     GR3,IDEAD               PTR TO MEMBERNAME         X010XX 70896200
         MVC   MSGBUF+P45(L8),X0(GR3)  MOVE IN MEMBER NAME       X010XX 70922100
         L     GR3,NXTINDS             PTR TO INDD SLOT          X010XX 70932100
         MVC   MSGBUF+P68(L8),X2(GR3)  MOVE IN NAME INP DATASET  X010XX 70942100
         SPACE 1                                                        70944100
         MVI   MSG1,IOERF+LASTMSG      SET SYNAD MSG+LAST        X010XX 70946100
         BAL   GR9,GOVMS               GO TO MSG WRITER          X010XX 70948100
         SPACE 2                                                        70956700
         MVC   MSGBUF+P10(L56),TEXT11B SET UP 2ND PART OF MSG    X010XX 70958700
         SPACE 1                                                        70960700
         L     GR3,READNEXT            OBTAIN POINTER TO         X010XX 70962700
         LA    GR3,X12(GR3)            CCHHRKDD                  X010XX 70964700
         SPACE 1                                                        70965100
         UNPK  MSGBUF+P66(L11),X0(L6,GR3)    MAKE CCHHRKDD       X010XX 70965200
         UNPK  MSGBUF+P76(L7),X5(L4,GR3)     PRINTABLE           X010XX 70965300
         TR    MSGBUF+P66(L16),TABLE-P240                        X010XX 70965400
         MVI   MSGBUF+P82,BLANK                                  X010XX 70974000
         SPACE 1                                                        70974100
         B     IOE00770                CONTIN IN LOAD/UNLOAD     X010XX 70976100
*                                        SYNAD ROUTINE           X010XX 70978100
         EJECT                                                          70980100
*                                                                X010XX 70982100
*   LOAD SYNAD ROUTINE                                           X010XX 70982500
*                                                                X010XX 70982600
*   UNLOAD SYNAD ROUTINE                                         X010XX 70982700
*                                                                X010XX 71006100
         SPACE 2                                                        71016100
IEBIOE3  EQU   *                       LOAD SYNAD ROUTINE E.P.   X010XX 71026100
         ENTRY IEBIOE3                                           X010XX 71028100
         SPACE 1                                                        71028500
         OI    IOEF2,ENTIOE3           ENTERED THROUGH IEBIOE3   X010XX 71028900
         SPACE 1                                                        71029300
         BALR  GR15,GR0                LOAD ADDR NEXT SEQ INSTR  X010XX 71029700
         SPACE 1                                                        71037500
IEBIOE4  EQU   *                       UNLOAD SYNAD ROUTINE E.P. X010XX 71039500
         ENTRY IEBIOE4                                           X010XX 71041500
         USING IEBIOE4,GR15            ADDRESSABLTY FOR SYNADAF  X010XX 71043500
         SPACE 1                                                        71043900
*   AT THIS ENTRY POINT REGISTERS ARE NOT SAVED AS CALLER IS NOT X010XX 71044000
* RETURNED TO AND SAVING MAY RESULT IN CORRUPTION OF IEBIOE'S    X010XX 71044100
* OWN CODE BECAUSE OF THE OVERLAY STRUCTURE                      X010XX 71044200
         SPACE 1                                                        71044700
         TM    IOEF2,IOEFENT           ENTERED BEFORE            X010XX 71045100
         BO    IOE00730                YES - GO AROUND SYNADAF   X010XX 71045200
*                                      (ENTERED FOR 2ND TIME     X010XX 71045300
*                                      TRYING TO WRITE FLAGGED   X010XX 71047200
*                                      COPYR1 DESCRIPTOR RECORD) X010XX 71049200
         SPACE 1                                                        71050200
         LA    GR13,SV5                TO AVOID CORRUPTION OF    X010XX 71052200
*                                        IEBIOE'S OWN CODE WHEN  X010XX 71052600
*                                        SYNADAF LINKS SAVAREA'S X010XX 71053000
         SPACE 1                                                        71054900
*   THE FOLLOWING MACRO PLACES AN ERROR MESSAGE IN A DYNAMIC     X010XX 71058700
* BUFFER, OBTAINS A SAVE AREA, AND LINKS THE NEW SAVE AREA WITH  X010XX 71060600
* THE OLD ONE                                                    X010XX 71062500
         SPACE 1                                                        71064400
         SYNADAF  ACSMETH=BSAM                                   X010XX 71066300
         SPACE 1                                                        71068200
IOE00730 EQU   *                                                 X010XX 71070100
         SPACE 1                                                        71072000
         DROP  GR15                                              X010XX 71073900
         BALR  GR12,GR0                LOAD ADDR NEXT SEQ INSTR  X010XX 71075800
IOE00740 EQU   *                                                 X010XX 71077700
         LA    GR15,IOE00740-START                               X010XX 71079600
         SR    GR12,GR15               ESTABLISH ADDRESSABILITY  X010XX 71081500
         L     GR10,AMSG               LOAD PTR TO MSG CSECT     X010XX 71083400
         SPACE 1                                                        71085300
         TM    IOEF2,IOEFENT           ENTERED BEFORE            X010XX 71087200
         BO    IOE00800                YES - PREPARE EXIT TO VTM X010XX 71089100
*                                      (ENTERED FOR 2ND TIME AS  X010XX 71091000
*                                      RESULT OF ATTEMPT TO WRT  X010XX 71092900
*                                      FLAGGED COPYR1 DESCR REC) X010XX 71094800
         SPACE 1                                                        71096700
         OI    IOEF2,SNDFUSED+IOEFENT  INDICATE SYNADAF ISSUED   X010XX 71098600
*                                        AND IOE ENTERED         X010XX 71100500
         SPACE 1                                                        71102400
         MVI   MSGBUF,BLANK            CLEAR MESSAGE BUFFER      X010XX 71104300
         MVC   MSGBUF+P1(L120),MSGBUF                            X010XX 71106200
         SPACE 1                                                        71108100
         TM    IOEF2,ENTIOE3           ENTERED THROUGH IEBIOE3   X010XX 71110000
         BO    IOE00750                YES - ERROR PREFIX=LOAD   X010XX 71112000
         MVC   MSGBUF+P19(L15),ULCN    ERROR PREFIX=UNLOAD       X010XX 71114000
         B     IOE00760                GO AROUND                 X010XX 71116000
IOE00750 EQU   *                                                 X010XX 71116400
         MVC   MSGBUF+P19(L13),LDCN    ERROR PREFIX=LOAD         X010XX 71116800
         NI    IOEF2,FF-ENTIOE3        RESET ENTERED THROUGH     X010XX 71117200
*                                        IEBIOE3 SWITCH          X010XX 71117300
         SPACE 1                                                        71117600
IOE00760 EQU   *                                                 X010XX 71117700
         MVC   MSGBUF+P1(L7),IEBPRFX   SET UP MSG NUMBER         X010XX 71117800
         MVC   MSGBUF+P9(L9),TEXT5     I/O ERROR                 X010XX 71117900
         MVC   MSGBUF+P42(L78),X50(GR1) MOVE SNDF MSG TO BUFFER  X010XX 71124700
IOE00770 EQU   *                                                 X010XX 71126700
         MVI   MSG1,IOERF+LASTMSG      SET SYNAD MSG + LAST MSG  X010XX 71128700
         SPACE 1                                                        71130700
         BAL   GR9,GOVMS8              ISSUE MESSAGE             A44144 71131100
         SPACE 1                                                        71131500
         MVI   IOEF1,ERF3              FAKE ERROR READING MEMBER X010XX 71131600
*                                        FOR IEBVTM              X010XX 71138400
         EJECT                                                          71144900
*                                                                X010XX 71145400
*   THIS SECTION HANDLES EXIT LINKAGE AND EITHER RETURNS CONTROL X010XX 71152200
* TO THE CALLER OR IEBVTM                                        X010XX 71159000
*                                                                X010XX 71179500
*   IN THE CASE OF A HARD ERROR DURING UNLOAD OPERATION          X010XX 71189500
* THE UNLOADED DATA SET WILL BE FLAGGED AS NOT LOADABLE          X010XX 71199500
*                                                                X010XX 71199900
         SPACE 2                                                        71200019
EXIT     EQU   *                                                        71300019
         SPACE 2                                                        71350000
         TM    ULLDST,UNLOAD           UNLOAD SPECIFIED          X010XX 71360000
         BZ    IOE00800                NO - GO AROUND CODE FOR   X010XX 71370000
*                                        FLAGGING UNLOAD DATASET X010XX 71380000
         SPACE 1                                                        71390000
IOE00785 EQU   *                       SYSUT3 READ/WRITE ERROR   X010XX 71392000
*                                        OCCURRED DURING UNLOAD  X010XX 71394000
         SPACE 1                                                        71396000
         LA    GR2,ULOADDCB            POINTER TO DCB            X010XX 71398000
         USING IHADCB,GR2                                        X010XX 71398400
         TM    DCBOFLGS,OPEN           IS DCB OPEN               X010XX 71398800
         BZ    IOE00800                NO - GO AROUND CODE FOR   X010XX 71399200
*                                        FLAGGING UNLOAD DATASET X010XX 71403000
         SPACE 1                                                        71404600
*                                                                X010XX 71406200
*   PREPARE FOR WRITING FLAGGED COPYR1 DESCRIPTOR RECORD BY      X010XX 71407800
* CONSECUTIVELY CLOSING AND OPENING THE UNLOAD DCB               X010XX 71409400
*                                                                X010XX 71411000
         SPACE 1                                                        71422100
         CLOSE ((GR2),REREAD)                                    X010XX 71432100
         SPACE 1                                                        71437700
         L     GR3,DCBEXLST            GET ADDRESS OF EXITLIST   X010XX 71439400
         LA    GR3,X0(GR0,GR3)         CLEAR HIGH ORDER BYTE     X010XX 71441100
         NI    X0(GR3),DEACT           DEACTIVATE EXITLIST ENTRY X010XX 71442800
         SPACE 1                                                        71444500
         OPEN  ((GR2),OUTPUT)                                    X010XX 71446200
         SPACE 1                                                        71447900
         OI    X0(GR3),ACT             ACTIVATE EXITLIST ENTRY   X010XX 71449600
         SPACE 1                                                        71451300
         TM    DCBOFLGS,OPEN           IS DCB OPEN               X010XX 71453000
         BZ    IOE00800                NO - GO AROUND            X010XX 71454700
         SPACE 1                                                        71456400
         L     GR3,ACOPYR1             GR3 POINTS TO COPYR1      X010XX 71458100
*                                        IMAGE IN CORE           X010XX 71459800
         SPACE 1                                                        71461500
         OI    X8(GR3),CPR1FLAG        FLAG AS NOT LOADABLE      X010XX 71463200
         SPACE 1                                                        71465200
         WRITE DECBIOE,SF,(GR2),(GR3)  WRITE FLAGGED COPYR1      X010XX 71465600
         SPACE 1                                                        71465700
         CHECK DECBIOE                                           X010XX 71466000
         SPACE 1                                                        71466400
         MVC   MSGBUF+P1(L80),TEXT10   PREP MSG UNLOAD DATASET   X010XX 71466500
         MVC   MSGBUF+P40(L8),OUTNAME  FLAGGED AS NOT LOADABLE   X010XX 71466600
         MVI   MSG1,IOERF+LASTMSG      SET SYNAD MSG + LAST MSG  X010XX 71477700
         SPACE 1                                                        71487700
         BAL   GR9,GOVMS               ISSUE MESSAGE             X010XX 71488100
         SPACE 2                                                        71488500
IOE00800 EQU   *                                                 X010XX 71488600
         SPACE 2                                                        71488700
         MVI   VTMFLG1,IOERROR         SET IOERROR               X010XX 71488900
         OI    FLG7,SUPPRMSG+NOPRNBDB  SET INDICATORS TO SUPPRESS       71500019
*                                         PRINTING OF MEMBER NAMES      71600019
*                                         AND UNUSED DIRECTORY BLOCK    71700019
*                                         MESSAGES BY IEBVTM            71800019
         TM    IOEF1,ERF5              OUTPUT DIRECTORY WRITE ERROR     71810019
         BZ    NOTODBER                NO, GO AROUND                    71820019
         SPACE 1                                                        71830019
         NI    FLG7,FF-NOPRNBDB        TURN OFF DON'T PRINT UNUSED      71840019
*                                         DIRECTORY BLOCKS MSG          71850019
         SPACE 1                                                        71860019
NOTODBER EQU   *                                                        71870019
         BAL   GR9,SYNADRLS            RELEASE CORE                     71900019
         NI    IOEF2,FF-IOEFENT        RESET IOE ENTERED FLAG    X010XX 71950000
         L     GR15,VIEBVTM            LOAD POINTER TO VTM              72000019
         BALR  GR14,GR15               GO TO VTM  (NO RETURN)           72100019
         SPACE 4                                                        72200019
IGNORE   EQU   *                                                        72300019
         BAL   GR9,SYNADRLS            RELEASE CORE                     72400019
         NI    IOEF2,FF-IOEFENT        RESET IOE ENTERED FLAG    X010XX 72450000
         RETURN (14,12)                RETURN TO CALLER                 72500019
         SPACE 4                                                        72700019
*                                      RELEASE CORE OBTAINED BY         72800019
SYNADRLS EQU   *                         SYNADAF AND REST GR13   X010XX 72900000
         TM    IOEF2,SNDFUSED          WAS SYNADAF ISSUED        X010XX 72950000
         BCR   MASK8,GR9               NO - RETURN               X010XX 72960000
         SYNADRLS                                                X010XX 72970000
         NI    IOEF2,FF-SNDFUSED       RESET SYNADAF USED FLAG   X010XX 72980000
         BR    GR9                     RETURN                           73000019
         EJECT                                                          73100019
FIRSTNAM EQU   10                      OFFSET IN BUFFER TO FIRST        73200019
*                                         ENTRY IN BLOCK                73300019
OFF11    EQU   11                      DISP OF ' COPIED ' IN MSG X010XX 73360000
X36      EQU   X'36'                   DISP OF NAME IN MSG       X010XX 73370000
DATACK   EQU   X'08'                   DATA CHECK SENSE BIT             73400019
UCHECK   EQU   X'02'                   UNIT CHECK BIT IN CSW            73500019
PERMIO   EQU   X'41'                   ECB POST CODE - CSW OK           73600019
RC4      EQU   C'4'                                                     73608019
RC8      EQU   C'8'                                              A44144 73610000
RC12     EQU   X'FC'                                             A44144 73612000
BLANK    EQU   C' '                                                     73616019
OKCODE   EQU   X'7F'                                                    73624019
SV3TAB   EQU   64                                                       73632019
ZERO     EQU   0                                                        73640019
FF       EQU   X'FF'                                                    73648019
SIDEQMT  EQU   X'B1'                                                    73656019
SIDEQ    EQU   X'31'                                                    73664019
WKD      EQU   X'0D'                                                    73672019
RKD      EQU   X'0E'                                                    73680019
MASK1F   EQU   X'1F'                                                    73688019
MASK8    EQU   8                       MASK IN BCR INSTR         X010XX 73698000
CPR1FLAG EQU   X'80'                   TO FLG COPYR1 NOT LOADBLE X010XX 73698400
DEACT    EQU   X'80'                   TO DEACTIV EXITLIST ENTRY X010XX 73698500
ACT      EQU   X'05'                   TO ACTIV EXITLIST ENTRY   X010XX 73698600
OPEN     EQU   X'10'                   FOR TESTING DCBOFLGS      X010XX 73698800
TABLE    DC    C'0123456789ABCDEF'     TRANSLATE TABLE                  73700019
TWOPCIS  DC    H'2'                    USED TO COMPARE THE NUMBER OF    73760019
*                                        PCI'S TAKEN                    73820019
AMSG     DC    A(IEBIOEMG)             PTR TO MSG CSECT                 73900019
ERRIOB   EQU   *                                                        74000019
         DC    X'42'                    E                               74100019
         DC    AL3(0)                    R                              74200019
         DC    A(ERRECB)                I R                             74300019
         DC    6F'0'                     O O                            74400019
ERRSEEK  DC    2F'0'                      B R                           74500019
MCAADDR  DC    AL4(0)                   POINTER TO COMMON AREA @YA02574 74550002
ERRECB   DC    F'0'                     ERROR ECB                       74600019
         DS    0D                                                       74700019
CCWS     EQU   *                                                        74800019
         CCW   X'31',ERRSEEK+3,X'40',5                                  74900019
         CCW   X'08',CCWS,X'40',1                                       75000019
RDWRT    CCW   X'0E',0,X'00',264                                        75100019
PATCHLN  EQU   (*-IEBIOE)/20           5 PERCENT PATCH AREA LENGTH      75200019
PATCH    DC    XL(PATCHLN)'00'          PATCH AREA               A41780 75300000
         EJECT                                                          75301019
*   THE FOLLOWING EQUATES ARE USED TO REFER TO SYMBOLIC ADDRESS PLUS    75302019
* A CONSTANT                                                            75303019
P1       EQU   1                                                        75304019
P8       EQU   8                                                        75305019
P9       EQU   9                                                        75306019
P10      EQU   10                                                       75307019
P17      EQU   17                                                       75308019
P18      EQU   18                                                       75309019
P19      EQU   19                                                       75310019
P20      EQU   20                                                       75311019
P35      EQU   35                                                       75312019
P40      EQU   40                                                       75313019
P42      EQU   42                                                       75314019
P45      EQU   45                                                X010XX 75314400
P47      EQU   47                                                       75315019
P53      EQU   53                                                       75316019
P54      EQU   54                                                       75317019
P58      EQU   58                                                X010XX 75317400
P66      EQU   66                                                X010XX 75317800
P68      EQU   68                                                X010XX 75317900
P70      EQU   70                                                       75318019
P76      EQU   76                                                X010XX 75318400
P82      EQU   82                                                X010XX 75318800
P240     EQU   240                                                      75319019
         EJECT                                                          75320019
*   THE FOLLOWING EQUATES ARE USED IN INSTRUCTIONS REQUIRING LENGTH     75321019
* SPECIFICATIONS SUCH AS MVC                                            75322019
L2       EQU   2                                                        75323019
L3       EQU   3                                                        75324019
L4       EQU   4                                                        75325019
L6       EQU   6                                                        75326019
L7       EQU   7                                                        75327019
L8       EQU   8                                                        75328019
L9       EQU   9                                                        75329019
L11      EQU   11                                                X010XX 75329400
L13      EQU   13                                                       75330019
L14      EQU   14                                                       75331019
L15      EQU   15                                                X010XX 75331400
L16      EQU   16                                                       75332019
L17      EQU   17                                                X010XX 75332400
L21      EQU   21                                                       75333019
L22      EQU   22                                                       75334019
L24      EQU   24                                                       75335019
L29      EQU   29                                                       75336019
L37      EQU   37                                                       75337019
L52      EQU   52                                                X010XX 75337400
L56      EQU   56                                                X010XX 75337800
L57      EQU   57                                                X010XX 75337900
L59      EQU   59                                                       75338019
L78      EQU   78                                                       75339019
L80      EQU   80                                                X010XX 75339400
L120     EQU   120                                                      75340019
         EJECT                                                          75341019
*   THE FOLLOWING EQUATES ARE USED FOR OFFSETS WITH REGISTER NOTATION   75342019
X0       EQU   0                                                        75343019
X1       EQU   1                                                        75344019
X2       EQU   2                                                        75345019
X4       EQU   4                                                        75346019
X5       EQU   5                                                 X010XX 75346400
X8       EQU   8                                                        75347019
X10      EQU   10                                                       75348019
X11      EQU   11                                                       75349019
X12      EQU   12                                                       75350019
X50      EQU   50                                                       75352019
         EJECT                                                          75400019
IEBIOEMG CSECT                                                          75500019
*  THE FOLLOWING IS MESSAGE TEXT FOR ERROR MESSAGES ISSUED BY IEBIOE    75550019
ERSCON   DC    C'DURING ERASE -'                                        75600019
RBCN     DC    C'DURING READBACK CHECK-'                                75700019
RCN      DC    C'DURING READ -'                                         75800019
WCN      DC    C'DURING WRITE -'                                        75900019
LDCN     DC    C'DURING LOAD -'                                  X010XX 75950000
ULCN     DC    C'DURING UNLOAD -'                                X010XX 75960000
SUFFIX   DC    C'DUE TO '                                               76000019
TEXT5    DC    C'I/O ERROR '                                            76100019
TEXT2    DC    C'WRITING '                                              76200019
TEXT7    DC    C'MEMBER DATA AT TTR='                                   76300019
TEXT1    DC    C'READING'                                               76400019
TEXT8    DC    C'-(READ BACK CHECKING)'                                 76500019
TEXT3    DC    C'MEMBER ******** NOT PROCESSED'                         76600019
TEXT4    DC    C'MEMBERS XXXXXXXX THROUGH END OF DATA'                  76700019
         DC    C' SET ARE NOT ACCESSIBLE'                               76800019
TEXT9    DC    C'IEB183I  END OF FILE READ ON LOAD DATA SET '    X010XX 76850000
         DC    C'REFERENCED BY '                                 X010XX 76860000
TEXT10   DC    C'IEB182I  UNLOAD DATA SET REFERENCED BY'         X010XX 76870000
         DC    C'          HAS BEEN FLAGGED AS NOT LOADABLE'     X010XX 76880000
TEXT11A  DC    C'IEB184I  MEMBER DATA RECORD READ FOR MEMBER'    X010XX 76890000
         DC    C'          REFERENCED BY          IS'            X010XX 76892000
TEXT11B  DC    C'LONGER THAN DATA SET BLOCKSIZE '                X010XX 76894000
         DC    C'PLUS KEYLENGTH, CCHHRKDD='                      X010XX 76896000
NUMB0    DC    C'IEB100I'                                               76900019
NUMB1    DC    C'IEB101I'                                               77000019
NUMB2    DC    C'IEB102I'                                               77100019
NUMB3    DC    C'IEB103I'                                               77200019
IEBPRFX  DC    C'IEB139I'              SYNADAF MESSAGE NUMBER           77300019
TEXT6    DC    C'IEB171I  ** WARNING ** DIRECTORY MAY NOT '             77400019
         DC    C'REFLECT VALID LOCATION OF MEMBER DATA'                 77500019
ASTERICS DC    C'********'                                              77550019
         EJECT                                                          77600019
IECDSECT DSECT                                                          77700019
         IECDSECT                                                       77800019
         EJECT                                                          77900019
IEBMCA   DSECT                                                          78000019
         IEBMCA                                                         78100019
         EJECT                                                          78150000
         DCBD  DSORG=PO                                          X010XX 78160000
         END                                                            78200019
./  ADD  SSI=72900015,NAME=IEBLDUL
         TITLE 'IEBLDUL - IEBCOPY LOAD/UNLOAD INITIALIZATION ROUTINE'   00010000
*C120400,889000                                                  A44144 00020000
*A888800,888920,889500,889600                                    A44144 00030000
         LCLA  &T,&SPN                                            0002  00040000
.@001    ANOP                                                     0002  00050000
IEBLDUL  CSECT ,                                                  0002  00060000
         ST    @E,12(0,@D)                                        0002  00070000
         STM   @0,@C,20(@D)                                       0002  00080000
         BALR  @B,0                                               0002  00090000
@PSTART  DS    0H                                                 0002  00100000
         USING @PSTART+00000,@B                                   0002  00110000
         ST    @D,@SAV001+4                                       0002  00120000
         LA    @F,@SAV001                                         0002  00130000
         ST    @F,8(0,@D)                                         0002  00140000
         LR    @D,@F                                              0002  00150000
         BC    15,@9FF                                            0076  00160000
* IEBLDUL1: ENTRY;                                                      00170000
IEBLDUL1 ST    @E,12(0,@D)                                        0076  00180000
         STM   @0,@C,20(@D)                                       0076  00190000
         BALR  @B,0                                               0076  00200000
         LA    @F,IEBLDUL1-IEBLDUL                                0076  00210000
         SR    @B,@F                                              0076  00220000
         ST    @D,@SAV001+4                                       0076  00230000
         LA    @F,@SAV001                                         0076  00240000
         ST    @F,8(0,@D)                                         0076  00250000
         LR    @D,@F                                              0076  00260000
@9FF     EQU   *                                                  0076  00270000
*                                                                       00280000
*         /************************************************************ 00290000
*         /* THE FOLLOWING GENERATE ESTABLISHES ADDRESSABILITY TO     * 00300000
*         /* IEBMCA AND THE DCB,JFCB AND DSCB CONTROL BLOCKS.         * 00310000
*         /************************************************************ 00320000
*                                                                       00330000
*         GENERATE;                                                     00340000
         USING IEBMCA,@4          IEBMCA ADDRESSABILITY                 00350000
         USING INFMJFCB,@7        JFCB ADDRESSABILITY                   00360000
         USING DXDSCB,@6          DSCB ADDRESSABILITY                   00370000
         USING IHADCB,@5          DCB ADDRESSABILITY                    00380000
         DS    0H                                                       00390000
*         JFCBREG=ADDR(JFCBBUF);        /* INITIALIZE JFCB POINTER      00400000
*                                          REGISTER                   * 00410000
         L     @C,0(0,@1)          ADDRESS OF JFCBBUF             0078  00420000
         LR    @7,@C                                              0078  00430000
*         DSCBREG=ADDR(DSCBBUF);        /* INITIALIZE DSCB POINTER      00440000
*                                          REGISTER                   * 00450000
         L     @8,4(0,@1)          ADDRESS OF DSCBBUF             0079  00460000
         LR    @6,@8                                              0079  00470000
*         ULLDST(1)='1'B;               /* SET LOAD SWITCH            * 00480000
         OI    ULLDST,B'10000000'                                 0080  00490000
*                                                                       00500000
*         /*----------------------------------------------------------* 00510000
*         /* A TEST IS MADE TO DETERMINE IF THE DATA SET TO BE LOADED * 00520000
*         /* IS ALLOCATED TO OTHER THAN A DA OR TAPE DEVICE.  IF IT   * 00530000
*         /* IS, THEN AN ERROR HAS BEEN FOUND.                        * 00540000
*         /*----------------------------------------------------------* 00550000
*                                                                       00560000
*         IF INCHAR(3) ¬= '80'X &       /* IS THE INPUT DATA SET      * 00570000
*            INCHAR(3) ¬= '20'X         /* ALLOCATED TO OTHER THAN A    00580000
*                                          DISK OR TAPE DEVICE        * 00590000
*            THEN                       /* YES, IT IS SO ISSUE        * 00600000
         CLI   INCHAR+2,X'80'                                     0081  00610000
         BC    08,@9FE                                            0081  00620000
         CLI   INCHAR+2,X'20'                                     0081  00630000
*              GO TO LDUL0102;          /* ERROR MESSAGE              * 00640000
         BC    07,LDUL0102                                        0082  00650000
*            ELSE;                      /* NO, OK CONTINUE            * 00660000
@9FD     EQU   *                                                  0083  00670000
@9FE     EQU   *                                                  0083  00680000
*                                                                       00690000
*         /*----------------------------------------------------------* 00700000
*         /* A TEST IS MADE TO INSURE THAT THE DATA SET TO BE LOADED  * 00710000
*         /* IS NOT A SYSIN DATA SET WHICH IS AN ERROR CONDITION.     * 00720000
*         /*----------------------------------------------------------* 00730000
*                                                                       00740000
*         IF JFCBTSDM(3) = '1'B         /* IS THE INPUT DATA SET        00750000
*                                          A SYSIN DATA SET           * 00760000
*            THEN                       /* YES, IT IS SO ISSUE        * 00770000
         TM    JFCBTSDM,B'00100000'                               0084  00780000
*              GO TO LDUL0102;          /* ERROR MESSAGE              * 00790000
         BC    01,LDUL0102                                        0085  00800000
*            ELSE;                      /* NO, OK CONTINUE            * 00810000
*                                                                       00820000
*         /*----------------------------------------------------------* 00830000
*         /* A TEST IS MADE TO DETERMINE IF A FREEMAIN HAS BEEN DONE  * 00840000
*         /* FOR THE LOADING OF DATA MANAGEMENT ROUTINES.             * 00850000
*         /*----------------------------------------------------------* 00860000
*                                                                       00870000
*         IF ULLDST(3)='1'B             /* HAS FREEMAIN BEEN DONE     * 00880000
*            THEN                       /* YES, IT HAS BEEN DONE      * 00890000
         TM    ULLDST,B'00100000'                                 0087  00900000
*              GO TO LDUL0004;          /* BRANCH AROUND FREEMAIN       00910000
*                                          LINKAGE                    * 00920000
         BC    01,LDUL0004                                        0088  00930000
*            ELSE                       /* NO, FREMAIN HAS NOT BEEN     00940000
*                                          DONE                       * 00950000
*              DO;                      /* LINK TO IEBDSCPY TO ISSUE    00960000
*                                          FREEMAIN                   * 00970000
*                                                                       00980000
*                /***************************************************** 00990000
*                /* LINKAGE TO THE ENTRY POINT IEBDSFRC IN MODULE     * 01000000
*                /* IEBDSCPY IS NOW GENERATED.                        * 01010000
*                /***************************************************** 01020000
*                                                                       01030000
*                GENERATE;                                              01040000
         STM   @E,@F,REGSAVE1     SAVE REGISTERS 14 AND 15              01050000
         L     @F,VDSFRC          1 ADDRESS OF ENTRY POINT              01060000
*                                  IEBDSFRC                             01070000
         BALR  @E,@F                   LINK TO DO FREEMAIN              01080000
         LM    @E,@F,REGSAVE1     RESTORE REGISTERS 14 AND 15           01090000
         DS    0H                                                       01100000
*              END;                                                     01110000
* LDUL0004:                             /* FREEMAIN HAS BEEN DONE     * 01120000
*         DCBREG=ADDR(LOADDCB);         /* SET CURRENT DCB POINTER TO   01130000
*                                          ADDRESS OF LOAD DCB        * 01140000
LDUL0004 LA    @5,LOADDCB                                         0092  01150000
*         DCBDDNAM=DDVALNM;             /* INITIALIZE DDNAME FIELD IN   01160000
*                                          LOAD DCB                   * 01170000
         MVC   DCBDDNAM(8),DDVALNM                                0093  01180000
*         LIST5ADR=ADDR(LOADVAL);       /* PLACE ADDRESS OF DCB EXIT    01190000
*                                          ROUTINE FOR THE LOAD DCB     01200000
*                                          IN IT'S EXIT LIST          * 01210000
         LA    @F,LOADVAL                                         0094  01220000
         ST    @F,@TEMP4                                          0094  01230000
         MVC   LIST5ADR(3),@TEMP4+1                               0094  01240000
*         SYNAD24=VIEBIOE3;             /* PLACE ADDRESS OF SYNAD       01250000
*                                          ROUTINE IN LOAD DCB        * 01260000
         MVC   SYNAD24(3),VIEBIOE3+1                              0095  01270000
*         EODAD24=VDSIOE2;              /* PLACE ADDRESS OF EODAD       01280000
*                                          ROUTINE IN LOAD DCB        * 01290000
         MVC   EODAD24(3),VDSIOE2+1                               0096  01300000
*         DCBBLKSI=0;                   /* INITIALIZE LOAD DCB BLKSIZE  01310000
*                                          FIELD TO ZERO              * 01320000
         SR    @F,@F                                              0097  01330000
         STH   @F,DCBBLKSI                                        0097  01340000
*         DCBLRECL=0;                   /* INITIALIZE LOAD DCB LRECL    01350000
*                                          FIELD TO ZERO              * 01360000
         STH   @F,DCBLRECL                                        0098  01370000
* LDUL0008:                             /* OPEN THE LOAD DCB          * 01380000
*                                                                       01390000
*         /************************************************************ 01400000
*         /* THE FOLLOWING GENERATE IS FOR EXPANSION OF THE OPEN      * 01410000
*         /* MACRO WHICH IS USED TO OPEN THE LOAD DCB.                * 01420000
*         /************************************************************ 01430000
*                                                                       01440000
*         GENERATE;                                                     01450000
LDUL0008 EQU   *                                                  0099  01460000
         STM   @E,@1,REGSAVE1     STORE REGISTERS 14,15,0 AND 1         01470000
         OPEN  ((@5),INPUT)       OPEN 1 DCB                            01480000
         LM    @E,@1,REGSAVE1     RESTORE REGISTERS 14,15,0 AND 1       01490000
         DS    0H                                                       01500000
*                                                                       01510000
*         /*----------------------------------------------------------* 01520000
*         /* A TEST IS NOW MADE TO SEE IF THE LOAD DCB HAS BEEN       * 01530000
*         /* SUCCESSFULLY OPENED.                                     * 01540000
*         /*----------------------------------------------------------* 01550000
*                                                                       01560000
*         IF DCBOFLGS(4)='1'B           /* OPEN OK                    * 01570000
*            THEN                       /* YES                        * 01580000
         TM    DCBOFLGS,B'00010000'                               0100  01590000
*              GO TO LDUL0012;          /* BRANCH AROUND ERROR CODE   * 01600000
*            ELSE                       /* NO, OPEN ERROR             * 01610000
*              GO TO LDUL0100;          /* PREPARE AND ISSUE ERROR      01620000
*                                          MESSAGE                    * 01630000
         BC    14,LDUL0100                                        0102  01640000
* LDUL0012:                             /* GET READY TO READ COPYR1   * 01650000
*         IF DCBBLKSI > ACOPYR1 - LOCOR - 60       /*NO BUFFER   M2744  01660000
*                                          CAN BE MADE AVAILABLE M2744* 01670000
*            THEN                                              /*M2744* 01680000
LDUL0012 LH    @F,@D1                                             0103  01690000
         S     @F,LOCOR                                           0103  01700000
         A     @F,ACOPYR1                                         0103  01710000
         CH    @F,DCBBLKSI                                        0103  01720000
*            GO TO LDUL0114 ;                /*STOP TRY TO LOAD  M2744* 01730000
         BC    04,LDUL0114                                        0104  01740000
*            ELSE ;                          /*GO READ HAEDER    M2744* 01750000
*         READPTR=LOCOR;                     /* READ INTO LOW PART M274 01760000
*                                               OF IEBCOPY CORE  M2744* 01770000
         MVC   READPTR(4),LOCOR                                   0106  01780000
*         CALL READHD;                  /* READ THE COPYR1 HEADER       01790000
*                                          RECORD                     * 01800000
         BAL   @E,READHD                                          0107  01810000
*         COPYR1 = TEMP1HDR ;                /* MOVE IT TO ACPYR1M2744* 01820000
         L     @C,READPTR                                         0108  01830000
         L     @8,ACOPYR1                                         0108  01840000
         MVC   0(60,@8),0(@C)                                     0108  01850000
*                                                                       01860000
*         /*----------------------------------------------------------* 01870000
*         /* A TEST IS MADE TO SEE IF THIS IS AN IEBCOPY UNLOADED     * 01880000
*         /* PDS.                                                     * 01890000
*         /*----------------------------------------------------------* 01900000
*                                                                       01910000
*         IF ID='CA6D0F'X               /* IS ID FIELD IN COPYR1        01920000
*                                          RECORD VALID               * 01930000
*            THEN                       /* YES, FIELD IS VALID        * 01940000
         CLC   9(3,@8),@X4                                        0109  01950000
*              GO TO LDUL0016;          /* BRANCH AROUND ERROR CODE   * 01960000
         BC    08,LDUL0016                                        0110  01970000
*            ELSE                       /* NO, FIELD IS NOT VALID     * 01980000
*              GO TO LDUL0104;          /* PREPARE AND ISSUE ERROR      01990000
*                                          MESSAGE                    * 02000000
         BC    15,LDUL0104                                        0111  02010000
* LDUL0016:                             /* ID IS OK                   * 02020000
*                                                                       02030000
*         /*----------------------------------------------------------* 02040000
*         /* A TEST IS MADE TO SEE IF THE 'NOT LOADABLE' INDICATOR    * 02050000
*         /* IS SET IN THE COPYR1 HEADER RECORD.                      * 02060000
*         /*----------------------------------------------------------* 02070000
*                                                                       02080000
*         IF LOADSTAT='1'B              /* IS THE NOT LOADABLE SWITCH   02090000
*                                          IN THE COPYR1 RECORD ON    * 02100000
*            THEN                       /* YES, IT IS ON              * 02110000
LDUL0016 L     @C,ACOPYR1                                         0112  02120000
         TM    8(@C),B'10000000'                                  0112  02130000
*              GO TO LDUL0106;          /* PREPARE AND ISSUE ERROR      02140000
*                                          MESSAGE                    * 02150000
         BC    01,LDUL0106                                        0113  02160000
*            ELSE;                      /* NO, OK CONTINUE            * 02170000
*                                                                       02180000
*         /*----------------------------------------------------------* 02190000
*         /* A TEST IS MADE TO SEE IF THE LOAD DCB BLKSIZE IS EQUAL   * 02200000
*         /* TO THE BLKSIZE USED WHEN THE PDS WAS ORIGINALLY UNLOADED.* 02210000
*         /*----------------------------------------------------------* 02220000
*                                                                       02230000
*         IF DCBBLKSI=TBLKSIZE          /* IS THE LOAD DCB BLKSIZE      02240000
*                                          EQUAL TO THE BLKSIZE FIELD   02250000
*                                          OF THE COPYR1 DESCRIPTOR     02260000
*                                          RECORD                     * 02270000
*            THEN                       /* YES, THEY ARE EQUAL        * 02280000
         LH    @F,22(0,@C)                                        0115  02290000
         CH    @F,DCBBLKSI                                        0115  02300000
*              GO TO LDUL0020;          /* BRANCH AROUND CLOSE/         02310000
*                                          REOPEN CODE                * 02320000
         BC    08,LDUL0020                                        0116  02330000
*            ELSE                       /* NO, THEY ARE NOT EQUAL     * 02340000
*              DO;                                                      02350000
*                                                                       02360000
*                /***************************************************** 02370000
*                /* THE FOLLOWING GENERATED CODE CLOSES THE LOAD      * 02380000
*                /* DCB.                                              * 02390000
*                /***************************************************** 02400000
*                                                                       02410000
*                GENERATE;                                              02420000
         STM   @E,@1,REGSAVE1     SAVE REGISTERS 14,15,0 AND 1          02430000
         CLOSE ((@5),REREAD)      CLOSE 1 DCB WITH REREAD OPTION        02440000
         LM    @E,@1,REGSAVE1     RESTORE REGISTERS 14,15,0 AND 1       02450000
         DS    0H                                                       02460000
*                DCBBLKSI=TBLKSIZE;     /* SET CORRECT BLKSIZE INTO     02470000
*                                          LOAD DCB                   * 02480000
         MVC   DCBBLKSI(2),22(@C)                                 0119  02490000
*                DCBLRECL=DCBBLKSI-4;        /* SET CORRECT LRECL       02500000
*                                               INTO THE LOAD DCB     * 02510000
         LH    @F,DCBBLKSI                                        0120  02520000
         SH    @F,@D2                                             0120  02530000
         STH   @F,DCBLRECL                                        0120  02540000
*                GO TO LDUL0008;        /* GO REOPEN THE LOAD DCB     * 02550000
         BC    15,LDUL0008                                        0121  02560000
*              END;                                                     02570000
* LDUL0020:                             /* BLKSIZE IS OK              * 02580000
*         READPTR=LOCOR + 60;                /* POINT TO SAFE    M2744  02590000
*                                               PLACE TO READ IN M2744* 02600000
LDUL0020 LA    @F,60                                              0123  02610000
         A     @F,LOCOR                                           0123  02620000
         ST    @F,READPTR                                         0123  02630000
*         CALL READHD;                  /* READ THE COPYR2 HEADER       02640000
*                                          RECORD                     * 02650000
         BAL   @E,READHD                                          0124  02660000
*         COPYR2(1:255) = TEMP2HDR(1:255); /* MOVE 1ST PART      M2744* 02670000
         L     @C,READPTR                                         0125  02680000
         L     @8,ACOPYR2                                         0125  02690000
         MVC   0(255,@8),0(@C)                                    0125  02700000
*         COPYR2(256:284) = TEMP2HDR(256:284); /* MOVE 2ND PART  M2744* 02710000
         MVC   255(29,@8),255(@C)                                 0126  02720000
*                                                                       02730000
*         /************************************************************ 02740000
*         /* THE DCB POINTER REGISTER IS NOW CHANGED TO POINT TO THE  * 02750000
*         /* INPUT PDS DCB.  VARIOUS FIELDS IN THE INPUT DCB,JFCB,    * 02760000
*         /* AND DSCB AS WELL AS THE INPUT DEVTYPE CHARACTERISTICS    * 02770000
*         /* ARE CHANGED TO 'LOOK' AS IF THE INPUT DATA SET IS A PDS. * 02780000
*         /************************************************************ 02790000
*                                                                       02800000
*         DCBREG=ADDR(INDCB);           /* RE-ESTABLISH DCB ADDRESS-    02810000
*                                          ABILITY TO INPUT PDS DCB   * 02820000
         LA    @5,INDCB                                           0127  02830000
*         DSCBLKL=UBLKSIZE;             /* SET DSCB BLKSIZE=COPYR1      02840000
*                                          DSORG FIELD                * 02850000
         L     @9,ACOPYR1                                         0128  02860000
         MVC   DSCBLKL(2),14(@9)                                  0128  02870000
*         DSCLRECL=ULRECL;              /* SET DSCB LRECL=COPYR1        02880000
*                                          LRECL FIELD                * 02890000
         MVC   DSCLRECL(2),16(@9)                                 0129  02900000
*         DCBRECFM=URECFM;              /* SET INPUT PDS DCB RECFM=     02910000
*                                          COPYR1 RECFM FIELD         * 02920000
         MVC   DCBRECFM(1),18(@9)                                 0130  02930000
*         DCBKEYLE=UKEYLEN;             /* SET INPUT PDS DCB KEYLEN=    02940000
*                                          COPYR1 KEYLEN FIELD        * 02950000
         MVC   DCBKEYLE(1),19(@9)                                 0131  02960000
*         DCBOPTCD=DCBOPTCD|UOPTCD;     /* SET INPUT PDS DCB OPTCD=     02970000
*                                          COPYR1 OPTCD FIELD         * 02980000
         OC    DCBOPTCD(1),20(@9)                                 0132  02990000
*         JFCBLKSI=UBLKSIZE;            /* SET JFCB BLKSIZE=COPYR1      03000000
*                                          BLKSIZE FIELD              * 03010000
         MVC   JFCBLKSI(2),14(@9)                                 0133  03020000
*         JFCLRECL=ULRECL;              /* SET JFCB LRECL=COPYR1        03030000
*                                          LRECL FIELD                * 03040000
         MVC   JFCLRECL(2),16(@9)                                 0134  03050000
*         INCHAR=UDEVTYPE;              /* SET INPUT DEVICE CHARACTER-  03060000
*                                          ISTICS=COPYR1 DEVICE CHAR-   03070000
*                                          ACTERISTICS FIELD          * 03080000
         MVC   INCHAR(20),24(@9)                                  0135  03090000
*                                                                       03100000
*         /************************************************************ 03110000
*         /* THE UNLOADED EXTENT DESCRIPTIONS IN THE UDEBX FIELD OF   * 03120000
*         /* THE COPYR2 RECORD ARE NOW UPDATED TO FACILITATE TTR TO   * 03130000
*         /* MBBCCHHR CONVERSION.                                     * 03140000
*         /************************************************************ 03150000
*                                                                       03160000
*         DEBAD24=ADDR(UDEBL16)-16;     /* SET INPUT PDS DCBDEBAD       03170000
*                                          FIELD TO POINT TO THE        03180000
*                                          COPYR2 UDEBL16 FIELD MINUS   03190000
*                                          16 BYTES                   * 03200000
         LH    @F,@D3                                             0136  03210000
         LA    @0,8(0,@8)                                         0136  03220000
         AR    @F,@0                                              0136  03230000
         ST    @F,@TEMP4                                          0136  03240000
         MVC   DEBAD24(3),@TEMP4+1                                0136  03250000
*         DEBXPTR=ADDR(UDEBX);          /* INITIALIZE UNLOADED DEB      03260000
*                                          EXTENT FIELD POINTER TO      03270000
*                                          ADDRESS OF UDEBX FIELD OF    03280000
*                                          THE COPYR2 RECORD          * 03290000
         LA    @F,24(0,@8)                                        0137  03300000
         ST    @F,DEBXPTR                                         0137  03310000
*         XTENTCTR=UDEBL16(1);          /* INITIALIZE EXTENT COUNTER    03320000
*                                          TO THE NUMBER OF EXTENT      03330000
*                                          DESCRIPTIONS IN THE UDEBX    03340000
*                                          FIELD OF THE COPYR2 RECORD * 03350000
         SR    @F,@F                                              0138  03360000
         IC    @F,8(0,@8)                                         0138  03370000
         STH   @F,XTENTCTR                                        0138  03380000
*                                                                       03390000
*         /************************************************************ 03400000
*         /* THE FOLLOWING ITERATIVE DO GROUP IS USED TO INITIALIZE   * 03410000
*         /* THE UCB POINTER FIELD OF EACH UNLOADED EXTENT DESCRIP-   * 03420000
*         /* TION IN THE UDEBX FIELD OF THE COPYR2 RECORD TO THE      * 03430000
*         /* ADDRESS OF THE UDEVTYPE FIELD OF THE COPYR1 RECORD MINUS * 03440000
*         /* 16 BYTES.                                                * 03450000
*         /************************************************************ 03460000
*                                                                       03470000
*         DO XTENTCTR=                                                  03480000
*            XTENTCTR                                                   03490000
*            BY -1                                                      03500000
         BC    15,@DO9FB                                          0139  03510000
*            TO 1;                                                      03520000
*                                                                       03530000
*               UCBAD=ADDR(UDEVTYPE) -  /* PLACE ADDRESS OF UDEVTYPE  * 03540000
*                     16;               /* FIELD MINUS 16 BYTES IN      03550000
*                                          EACH UNLOADED DEB EXTENT   * 03560000
@DO9FC   LH    @F,@D3                                             0140  03570000
         L     @C,ACOPYR1                                         0140  03580000
         LA    @0,24(0,@C)                                        0140  03590000
         AR    @F,@0                                              0140  03600000
         L     @8,DEBXPTR                                         0140  03610000
         ST    @F,@TEMP4                                          0140  03620000
         MVC   1(3,@8),@TEMP4+1                                   0140  03630000
*               DEBXPTR=DEBXPTR +       /* BUMP THE DEB EXTENT        * 03640000
*                       16;             /* POINTER TO THE NEXT ENTRY    03650000
*                                          WITHIN THE UDEBX FIELD     * 03660000
         LA    @F,16                                              0141  03670000
         A     @F,DEBXPTR                                         0141  03680000
         ST    @F,DEBXPTR                                         0141  03690000
*         END;                          /* END OF UDEBX FIELD           03700000
*                                          INITIALIZATION             * 03710000
* LDUL0024:                             /* RETURN TO CALLER           * 03720000
*         RTCDREG=0;                    /* SET RETURN CODE TO ZERO    * 03730000
         LH    @F,XTENTCTR                                        0142  03740000
         BCTR  @F,0                                               0142  03750000
@DO9FB   STH   @F,XTENTCTR                                        0142  03760000
         CH    @F,@D4                                             0142  03770000
         BC    10,@DO9FC                                          0142  03780000
LDUL0024 SR    @F,@F                                              0143  03790000
*         RETURN;                                                       03800000
         BC    15,@EL01                                           0144  03810000
* /******************************************************************** 03820000
* /*         THIS IS THE DCB EXIT ROUTINE FOR THE LOAD DCB.           * 03830000
* /******************************************************************** 03840000
*                                                                       03850000
* LOADVAL:                                                              03860000
*                                                                       03870000
*         /*----------------------------------------------------------* 03880000
*         /* A TEST IS MADE TO DETERMINE IF THE LOAD DCB BLKSIZE IS   * 03890000
*         /* LARGER OR EQUAL TO THE MINIMUM VALID BLKSIZE.            * 03900000
*         /*----------------------------------------------------------* 03910000
*                                                                       03920000
*         IF DCBBLKSI < 284             /* IS THE LOAD DCB BLKSIZE      03930000
*                                          LESS THAN THE ABSOLUTE       03940000
*                                          MINIMUM                    * 03950000
*            THEN                       /* YES, IT IS TOO SMALL       * 03960000
LOADVAL  LA    @F,284                                             0145  03970000
         CH    @F,DCBBLKSI                                        0145  03980000
         BC    12,@9F8                                            0145  03990000
*              DCBBLKSI=284;            /* SET LOAD DCB BLKSIZE TO      04000000
*                                          MINIMUM VALUE              * 04010000
         STH   @F,DCBBLKSI                                        0146  04020000
*            ELSE;                      /* NO, IT IS OK - CONTINUE    * 04030000
@9F8     EQU   *                                                  0147  04040000
*         DCBLRECL=DCBBLKSI-4;          /* ASSURE THAT THE LOAD DCB     04050000
*                                          LRECL FIELD IS EQUAL TO      04060000
*                                          THE LOAD DCB BLKSIZE FIELD   04070000
*                                          MINUS THE LENGTH OF THE      04080000
*                                          BIG LL FIELD               * 04090000
@9F7     LH    @F,DCBBLKSI                                        0148  04100000
         SH    @F,@D2                                             0148  04110000
         STH   @F,DCBLRECL                                        0148  04120000
* LOADVAL8:                             /* RETURN TO OPEN             * 04130000
*                                                                       04140000
*         /************************************************************ 04150000
*         /* THE FOLLOWING GENERATED CODE IS FOR RETURN LINKAGE TO    * 04160000
*         /* OPEN.                                                    * 04170000
*         /************************************************************ 04180000
*                                                                       04190000
*         GENERATE;                                                     04200000
LOADVAL8 EQU   *                                                  0149  04210000
         BR    @E                 RETURN TO OPEN                        04220000
         DS    0H                                                       04230000
         BC    15,@9F6                                            0150  04240000
*                                                                       04250000
* /******************************************************************** 04260000
* /*         THIS IS THE ENTRY POINT FOR UNLOAD PROCESSING            * 04270000
* /******************************************************************** 04280000
*                                                                       04290000
* IEBLDUL2: ENTRY;                                                      04300000
IEBLDUL2 ST    @E,12(0,@D)                                        0150  04310000
         STM   @0,@C,20(@D)                                       0150  04320000
         BALR  @B,0                                               0150  04330000
         LA    @F,IEBLDUL2-IEBLDUL                                0150  04340000
         SR    @B,@F                                              0150  04350000
         ST    @D,@SAV001+4                                       0150  04360000
         LA    @F,@SAV001                                         0150  04370000
         ST    @F,8(0,@D)                                         0150  04380000
         LR    @D,@F                                              0150  04390000
*                                                                       04400000
*         JFCBREG=ADDR(JFCBBUF);        /* INITIALIZE JFCB POINTER      04410000
*                                          REGISTER                   * 04420000
@9F6     L     @C,0(0,@1)          ADDRESS OF JFCBBUF             0151  04430000
         LR    @7,@C                                              0151  04440000
*         ULLDST(2)='1'B;               /* SET UNLOAD SWITCH          * 04450000
         OI    ULLDST,B'01000000'                                 0152  04460000
*                                                                       04470000
*         /*----------------------------------------------------------* 04480000
*         /* A TEST IS MADE TO DETERMINE IF THE INPUT AND OUTPUT DATA * 04490000
*         /* ARE ONE AND THE SAME.                                    * 04500000
*         /*----------------------------------------------------------* 04510000
*                                                                       04520000
*         IF INDSNBUF=JFCBDSNM &        /* ARE THE INPUT AND OUTPUT   * 04530000
*            INVOLBUF=JFCBVOLS          /* DATA SETS ONE AND THE SAME * 04540000
*            THEN                       /* YES, A COMPRESS REQUEST      04550000
*                                          HAS BEEN DETECTED          * 04560000
         L     @8,12(0,@1)         ADDRESS OF INDSNBUF            0153  04570000
         CLC   0(44,@8),JFCBDSNM                                  0153  04580000
         BC    07,@9F5                                            0153  04590000
         L     @9,8(0,@1)          ADDRESS OF INVOLBUF            0153  04600000
         CLC   0(6,@9),JFCBVOLS                                   0153  04610000
*              GO TO LDUL0108;          /* PREPARE AND ISSUE ERROR      04620000
*                                          MESSAGE                    * 04630000
         BC    08,LDUL0108                                        0154  04640000
*            ELSE;                      /* NO, OK CONTINUE            * 04650000
@9F4     EQU   *                                                  0155  04660000
@9F5     EQU   *                                                  0155  04670000
*                                                                       04680000
*         /*----------------------------------------------------------* 04690000
*         /* A TEST IS MADE TO DETERMINE IF THE INPUT AND OUTPUT DATA * 04700000
*         /* SETS VOLUME SERIAL NUMBERS ARE EQUAL AND THE OUTPUT DATA * 04710000
*         /* SET IS ON A TAPE DEVICE WHICH IS AN ERROR CONDITION      * 04720000
*         /* SINCE TWO DATA SETS CANNOT BE OPENED ON THE SAME TAPE    * 04730000
*         /* VOLUME AT THE SAME TIME.                                 * 04740000
*         /*----------------------------------------------------------* 04750000
*                                                                       04760000
*         IF INVOLBUF=JFCBVOLS &        /* ARE THE INPUT AND OUTPUT   * 04770000
*            OUTCHAR(3)='80'X           /* DATA SETS ON THE SAME TAPE   04780000
*                                          VOLUME                     * 04790000
*            THEN                       /* YES, THEY ARE SO ISSUE     * 04800000
         L     @C,8(0,@1)          ADDRESS OF INVOLBUF            0156  04810000
         CLC   0(6,@C),JFCBVOLS                                   0156  04820000
         BC    07,@9F3                                            0156  04830000
         CLI   OUTCHAR+2,X'80'                                    0156  04840000
*              GO TO LDUL0101;          /* ERROR MESSAGE              * 04850000
         BC    08,LDUL0101                                        0157  04860000
*            ELSE;                      /* NO, OK CONTINUE            * 04870000
@9F2     EQU   *                                                  0158  04880000
@9F3     EQU   *                                                  0158  04890000
*                                                                       04900000
*         /*----------------------------------------------------------* 04910000
*         /* A TEST IS MADE TO DETERMINE IF THE DATA SET TO CONTAIN   * 04920000
*         /* THE UNLOADED PDS IS ALLOCATED TO OTHER THAN A DA OR TAPE * 04930000
*         /* DEVICE. IF IT IS, AN ERROR HAS BEEN FOUND.               * 04940000
*         /*----------------------------------------------------------* 04950000
*                                                                       04960000
*         IF OUTCHAR(3) ¬= '80'X &       /* IS THE OUTPUT DATA SET    * 04970000
*            OUTCHAR(3) ¬= '20'X        /* ALLOCATED TO OTHER THAN A    04980000
*                                          DISK OR TAPE DEVICE        * 04990000
*            THEN                       /* YES, IT IS SO ISSUE        * 05000000
         CLI   OUTCHAR+2,X'80'                                    0159  05010000
         BC    08,@9F1                                            0159  05020000
         CLI   OUTCHAR+2,X'20'                                    0159  05030000
*              GO TO LDUL0102;          /* ERROR MESSAGE              * 05040000
         BC    07,LDUL0102                                        0160  05050000
*            ELSE;                      /* NO, OK CONTINUE            * 05060000
@9F0     EQU   *                                                  0161  05070000
@9F1     EQU   *                                                  0161  05080000
*                                                                       05090000
*         /*----------------------------------------------------------* 05100000
*         /* A TEST IS MADE TO INSURE THAT THE DATA SET TO CONTAIN    * 05110000
*         /* THE UNLOADED PDS IS NOT A SYSOUT DATA SET WHICH IS AN    * 05120000
*         /* ERROR CONDITION.                                         * 05130000
*         /*----------------------------------------------------------* 05140000
*                                                                       05150000
*         IF JFCBTSDM(3) = '1'B         /* IS THE OUTPUT DATA SET A     05160000
*                                          A SYSOUT DATA SET          * 05170000
*            THEN                       /* YES, IT IS SO ISSUE        * 05180000
         TM    JFCBTSDM,B'00100000'                               0162  05190000
*              GO TO LDUL0102;          /* ERROR MESSAGE              * 05200000
         BC    01,LDUL0102                                        0163  05210000
*            ELSE;                      /* NO, CONTINUE               * 05220000
*                                                                       05230000
*         /*----------------------------------------------------------* 05240000
*         /* A TEST IS MADE TO DETERMINE IF A FREEMAIN HAS BEEN DONE  * 05250000
*         /* FOR THE LOADING OF DATA MANAGEMENT ROUTINES.             * 05260000
*         /*----------------------------------------------------------* 05270000
*                                                                       05280000
*         IF ULLDST(3)='1'B             /* HAS FREEMAIN BEEN DONE     * 05290000
*            THEN                       /* YES, IT HAS                * 05300000
         TM    ULLDST,B'00100000'                                 0165  05310000
*              GO TO LDUL0026;          /* BRANCH AROUND FREEMAIN       05320000
*                                          LINKAGE                    * 05330000
         BC    01,LDUL0026                                        0166  05340000
*            ELSE                       /* NO, IT HAS NOT             * 05350000
*              DO;                      /* LINK TO IEBDSCPY TO ISSUE    05360000
*                                          FREEMAIN                   * 05370000
*                                                                       05380000
*                /***************************************************** 05390000
*                /* LINKAGE TO THE ENTRY POINT IEBDSFRC IN MODULE     * 05400000
*                /* IEBDSCPY IS NOW GENERATED.                        * 05410000
*                /***************************************************** 05420000
*                                                                       05430000
*                GENERATE;                                              05440000
         STM   @E,@F,REGSAVE1     SAVE REGISTERS 14 AND 15              05450000
         L     @F,VDSFRC          1 ADDRESS OF ENTRY POINT              05460000
*                                  IEBDSFRC                             05470000
         BALR  @E,@F                   LINK TO DO FREEMAIN              05480000
         LM    @E,@F,REGSAVE1     RESTORE REGISTERS 14 AND 15           05490000
         DS    0H                                                       05500000
*              END;                                                     05510000
* LDUL0026:                             /* FREEMAIN IS DONE           * 05520000
*         DCBREG=ADDR(ULOADDCB);        /* SET CURRENT DCB POINTER TO   05530000
*                                          ADDRESS OF UNLOAD DCB      * 05540000
LDUL0026 LA    @5,ULOADDCB                                        0170  05550000
*         DCBDDNAM=DDVALNM;             /* INITIALIZE DDNAME FIELD IN   05560000
*                                          UNLOAD DCB                 * 05570000
         MVC   DCBDDNAM(8),DDVALNM                                0171  05580000
*         LIST6ADR=ADDR(ULOADVAL);      /* PLACE ADDRESS OF DCB EXIT    05590000
*                                          ROUTINE FOR THE UNLOAD DCB   05600000
*                                          IN IT'S EXIT LIST          * 05610000
         LA    @F,ULOADVAL                                        0172  05620000
         ST    @F,@TEMP4                                          0172  05630000
         MVC   LIST6ADR(3),@TEMP4+1                               0172  05640000
*         SYNAD24=VIEBIOE4;             /* PLACE ADDRESS OF SYNAD       05650000
*                                          ROUTINE IN UNLOAD DCB      * 05660000
         MVC   SYNAD24(3),VIEBIOE4+1                              0173  05670000
*         DCBBLKSI=0;                   /* INITIALIZE UNLOAD DCB        05680000
*                                          BLKSIZE FIELD TO ZERO      * 05690000
         SR    @F,@F                                              0174  05700000
         STH   @F,DCBBLKSI                                        0174  05710000
*         DCBLRECL=0;                   /* INITIALIZE UNLOAD DCB        05720000
*                                          LRECL FIELD TO ZERO        * 05730000
         STH   @F,DCBLRECL                                        0175  05740000
*                                                                       05750000
*         /************************************************************ 05760000
*         /* THE FOLLOWING GENERATE IS FOR EXPANSION OF THE OPEN      * 05770000
*         /* MACRO WHICH IS USED TO OPEN THE UNLOAD DCB.              * 05780000
*         /************************************************************ 05790000
*                                                                       05800000
*         GENERATE;                                                     05810000
         STM   @E,@1,REGSAVE1     STORE REGISTERS 14,15,0 AND 1         05820000
         OPEN  ((@5),OUTPUT)      OPEN 2 DCB                            05830000
         LM    @E,@1,REGSAVE1     RESTORE REGISTERS 14,15,0 AND 1       05840000
         DS    0H                                                       05850000
*                                                                       05860000
*         /*----------------------------------------------------------* 05870000
*         /* A TEST IS NOW MADE TO SEE IF THE UNLOAD DCB HAS BEEN     * 05880000
*         /* SUCCESSFULLY OPENED.                                     * 05890000
*         /*----------------------------------------------------------* 05900000
*                                                                       05910000
*         IF DCBOFLGS(4)='1'B           /* OPEN OK                    * 05920000
*            THEN                       /* YES                        * 05930000
         TM    DCBOFLGS,B'00010000'                               0177  05940000
*              GO TO LDUL0030;          /* BRANCH AROUND ERROR CODE   * 05950000
*            ELSE                       /* NO, OPEN ERROR             * 05960000
*              GO TO LDUL0100;          /* PREPARE AND ISSUE ERROR      05970000
*                                          MESSAGE                    * 05980000
         BC    14,LDUL0100                                        0179  05990000
* LDUL0030:                             /* UNLOAD DCB IS OPEN         * 06000000
*         OBLKSIZE=IBLKSIZE;            /* OUTPUT PDS BLKSIZE=INPUT     06010000
*                                          PDS BLKSIZE                * 06020000
LDUL0030 MVC   OBLKSIZE(2),IBLKSIZE                               0180  06030000
*         OUTLRECL=INLRECL;             /* OUTPUT PDS LRECL=INPUT       06040000
*                                          PDS LRECL                  * 06050000
         MVC   OUTLRECL(2),INLRECL                                0181  06060000
*         OUTCHAR=INCHAR;               /* OUTPUT PDS DEVICE CHARACT-   06070000
*                                          ERISTICS=INPUT PDS DEVICE    06080000
*                                          CHARACTERISTICS            * 06090000
         MVC   OUTCHAR(20),INCHAR                                 0182  06100000
*         DCBREG=ADDR(INDCB);           /* SET CURRENT DCB POINTER TO   06110000
*                                          ADDRESS OF INPUT PDS DCB   * 06120000
         LA    @5,INDCB                                           0183  06130000
*         OKEYLEN=DCBKEYLE;             /* OUTPUT PDS KEYLEN=INPUT      06140000
*                                          PDS DCB KEYLEN             * 06150000
         MVC   OKEYLEN(1),DCBKEYLE                                0184  06160000
*         OBLKFAC=IBLKFAC;              /* OUTPUT PDS BLOCKING FACTOR   06170000
*                                          = INPUT PDS BLOCKING         06180000
*                                          FACTOR                     * 06190000
         MVC   OBLKFAC(2),IBLKFAC                                 0185  06200000
*                                                                       06210000
*         /************************************************************ 06220000
*         /* THE FOLLOWING GENERATED CODE IS USED TO SET VARIOUS      * 06230000
*         /* OUTPUT PDS DCB FIELDS EQUAL TO THE CORRESPONDING INPUT   * 06240000
*         /* PDS DCB FIELDS.                                          * 06250000
*         /************************************************************ 06260000
*                                                                       06270000
*         GENERATE;                                                     06280000
         STM   @6,@9,REGSAVE1     SAVE REGISTERS 6,7,8 AND 9            06290000
         IC    @6,DCBKEYLE        INSERT INPUT PDS DCB KEYLEN FIELD     06300000
         IC    @7,DCBOPTCD        INSERT INPUT PDS DCB OPTCD FIELD      06310000
         IC    @8,DCBRECFM        INSERT INPUT PDS DCB RECFM FIELD      06320000
         LA    @5,OUTDCB          CHANGE IHADCB ADDRESSABILITY          06330000
*                                  REGISTER TO POINT TO OUTPUT PDS      06340000
*                                  DCB                                  06350000
         STC   @6,DCBKEYLE        SET OUTPUT PDS DCB KEYLEN FIELD       06360000
*                                  = INPUT PDS DCB KEYLEN FIELD         06370000
         STC   @7,DCBOPTCD        SET OUTPUT PDS DCB OPTCD FIELD        06380000
*                                  = INPUT PDS DCB OPTCD FIELD          06390000
         STC   @8,DCBRECFM        SET OUTPUT PDS DCB RECFM FIELD        06400000
*                                  = INPUT PDS DCB RECFM FIELD          06410000
         LM    @6,@9,REGSAVE1     RESTORE REGISTERS 6,7,8 AND 9         06420000
         DS    0H                                                       06430000
*         DCBREG=ADDR(ULOADDCB);        /* CHANGE CURRENT DCB POINTER   06440000
*                                          REGISTER TO ADDRESS OF       06450000
*                                          UNLOAD DCB                 * 06460000
         LA    @5,ULOADDCB                                        0187  06470000
*         TBLKSIZE=DCBBLKSI;            /* INITIALIZE THE TBLKSIZE      06480000
*                                          FIELD OF THE COPYR1          06490000
*                                          RECORD                     * 06500000
         L     @C,ACOPYR1                                         0188  06510000
         MVC   22(2,@C),DCBBLKSI                                  0188  06520000
*                                                                       06530000
*         /*----------------------------------------------------------* 06540000
*         /* A TEST IS NOW MADE TO SEE IF A LOAD IS BEING DONE, IF IT * 06550000
*         /* IS THEN THERE IS NO NEED TO BUILD COPYR1 AND COPYR2      * 06560000
*         /* RECORDS SINCE THEY HAVE ALREADY BEEN READ INTO THEIR     * 06570000
*         /* BUFFERS AND NEED ONLY BE COPIED.                         * 06580000
*         /*----------------------------------------------------------* 06590000
*                                                                       06600000
*         IF ULLDST(1)='1'B             /* IS A LOAD BEING DONE       * 06610000
*            THEN                       /* YES, IT IS                 * 06620000
         TM    ULLDST,B'10000000'                                 0189  06630000
*              GO TO LDUL0024;          /* RETURN TO CALLER           * 06640000
         BC    01,LDUL0024                                        0190  06650000
*            ELSE;                      /* NO, IT IS NOT, CONTINUE      06660000
*                                          AND BUILD COPYR1 AND         06670000
*                                          COPYR2 RECORDS             * 06680000
*                                                                       06690000
*         /************************************************************ 06700000
*         /* THE COPYR1 RECORD IS NOW BUILT.                          * 06710000
*         /************************************************************ 06720000
*                                                                       06730000
*         COPYR1(1)='00'X;              /* CLEAR COPYR1 RECORD BUFFER * 06740000
         MVI   0(@C),X'00'                                        0192  06750000
*         COPYR1(2:60)=COPYR1(1:59);                        /* CLEAR  * 06760000
         MVC   1(59,@C),0(@C)                                     0193  06770000
*         DCBREG=ADDR(OUTDCB);          /* SET CURRENT DCB POINTER      06780000
*                                          REGISTER TO ADDRESS OF       06790000
*                                          OUTPUT PDS DCB             * 06800000
         LA    @5,OUTDCB                                          0194  06810000
*         BLL1=60;                      /* INITIALIZE COPYR1 BIG LL     06820000
*                                          FIELD                      * 06830000
         LA    @F,60                                              0195  06840000
         STH   @F,0(0,@C)                                         0195  06850000
*         LLL1=56;                      /* INITIALIZE COPYR1 LITTLE     06860000
*                                          LL FIELD                   * 06870000
         LA    @F,56                                              0196  06880000
         STH   @F,4(0,@C)                                         0196  06890000
*         INDC='00'X;                   /* CLEAR INDICATOR BYTE       * 06900000
         MVI   8(@C),X'00'                                        0197  06910000
*         ID='CA6D0F'X;                 /* INITIALIZE ID FIELD        * 06920000
         MVC   9(3,@C),@X4                                        0198  06930000
*         UDSORG=DCBDSORG;              /* INITIALIZE UDSORG FIELD    * 06940000
         MVC   12(2,@C),DCBDSORG                                  0199  06950000
*         UBLKSIZE=OBLKSIZE;            /* INITIALIZE UBLKSIZE FIELD  * 06960000
         MVC   14(2,@C),OBLKSIZE                                  0200  06970000
*         ULRECL=OUTLRECL;              /* INITIALIZE ULRECL FIELD    * 06980000
         MVC   16(2,@C),OUTLRECL                                  0201  06990000
*         URECFM=DCBRECFM;              /* INITIALIZE URECFM FIELD    * 07000000
         MVC   18(1,@C),DCBRECFM                                  0202  07010000
*         UKEYLEN=DCBKEYLE;             /* INITIALIZE UKEYLEN FIELD   * 07020000
         MVC   19(1,@C),DCBKEYLE                                  0203  07030000
*         UOPTCD=DCBOPTCD;              /* INITIALIZE UOPTCD FIELD    * 07040000
         MVC   20(1,@C),DCBOPTCD                                  0204  07050000
*         DCBREG=ADDR(ULOADDCB);        /* CHANGE CURRENT DCB POINTER   07060000
*                                          REGISTER TO ADDRESS OF       07070000
*                                          UNLOAD DCB                 * 07080000
         LA    @5,ULOADDCB                                        0205  07090000
*         TBLKSIZE=DCBBLKSI;            /* INITIALIZE THE TBLKSIZE      07100000
*                                          FIELD OF THE COPYR1          07110000
*                                          RECORD                     * 07120000
         MVC   22(2,@C),DCBBLKSI                                  0206  07130000
*         UDEVTYPE=OUTCHAR;             /* INITIALIZE UDEVTYPE FIELD  * 07140000
         MVC   24(20,@C),OUTCHAR                                  0207  07150000
*                                                                       07160000
*         /************************************************************ 07170000
*         /* THE COPYR2 RECORD IS NOW BUILT                           * 07180000
*         /************************************************************ 07190000
*                                                                       07200000
*         UDEBX(1)='00'X;               /* CLEAR UDEBX FIELD OF COPYR2  07210000
*                                          RECORD BUFFER              * 07220000
         L     @8,ACOPYR2                                         0208  07230000
         MVI   24(@8),X'00'                                       0208  07240000
*         UDEBX(2:256)=UDEBX(1:255);                    /* CLEAR      * 07250000
         MVC   25(255,@8),24(@8)                                  0209  07260000
*         URES2(1)='00'X;               /* CLEAR URES2 FIELD OF COPYR2  07270000
*                                          RECORD BUFFER              * 07280000
         MVI   280(@8),X'00'                                      0210  07290000
*         URES2(2:4)=URES2(1:3);                        /* CLEAR      * 07300000
         MVC   281(3,@8),280(@8)                                  0211  07310000
*         DCBREG=ADDR(INDCB);           /* SET CURRENT DCB POINTER TO   07320000
*                                          ADDRESS OF INPUT PDS DCB   * 07330000
         LA    @5,INDCB                                           0212  07340000
*         DEBREG=DEBAD24;               /* SET DEB ADDRESSABILITY       07350000
*                                          REGISTER TO ADDRESS OF       07360000
*                                          INPUT PDS DEB              * 07370000
         MVC   @TEMP3+1(3),DEBAD24                                0213  07380000
         L     @7,@TEMP3                                          0213  07390000
*                                                                       07400000
*         /************************************************************ 07410000
*         /* THE FOLLOWING GENERATED CODE IS FOR OBTAINING DEB        * 07420000
*         /* ADDRESSABILITY.                                          * 07430000
*         /************************************************************ 07440000
*                                                                       07450000
*         GENERATE;                                                     07460000
         DROP  @7                                                       07470000
         USING DXDEB,@7           DEB ADDRESSABILITY                    07480000
         DS    0H                                                       07490000
*         BLL2=284;                     /* INITIALIZE COPYR2 BIG LL     07500000
*                                          FIELD - FIRST HALF         * 07510000
         LA    @F,284                                             0215  07520000
         STH   @F,0(0,@8)                                         0215  07530000
*         BLL200=0;                     /* INITIALIZE COPYR2 BIG LL     07540000
*                                          FIELD - LAST HALF          * 07550000
         SR    @F,@F                                              0216  07560000
         STH   @F,2(0,@8)                                         0216  07570000
*         LLL2=280;                     /* INITIALIZE COPYR2 LITTLE     07580000
*                                          LL FIELD - FIRST HALF      * 07590000
         LA    @F,280                                             0217  07600000
         STH   @F,4(0,@8)                                         0217  07610000
*         LLL200=0;                     /* INITIALIZE COPYR2 LITTLE     07620000
*                                          LL FIELD - LAST HALF       * 07630000
         SR    @F,@F                                              0218  07640000
         STH   @F,6(0,@8)                                         0218  07650000
*         UDEBL16=DXDEBUSR;             /* INITIALIZE UDEBL16 FIELD   * 07660000
         MVC   8(16,@8),DXDEBUSR                                  0219  07670000
*         ENDCHAR=DXDEBUSR(1) *         /* CALCULATE TOTAL SIZE OF    * 07680000
*                 16;                   /* DEB EXTENT SECTION         * 07690000
         LA    @F,16                                              0220  07700000
         SR    @0,@0                                              0220  07710000
         IC    @0,DXDEBUSR                                        0220  07720000
         MR    @E,@0                                              0220  07730000
         STH   @F,ENDCHAR                                         0220  07740000
*         UDEBX(1:ENDCHAR) =            /* INITIALIZE UDEBX FIELD OF  * 07750000
*           DXDEBMOD(1:ENDCHAR);        /* COPYR2 RECORD              * 07760000
         LA    @E,DXDEBMOD                                        0221  07770000
         LR    @9,@F                                              0221  07780000
         BCTR  @9,0                                               0221  07790000
         LA    @A,24(0,@8)                                        0221  07800000
         EX    @9,@MVC                                            0221  07810000
*         GO TO LDUL0024;               /* RETURN TO CALLER           * 07820000
         BC    15,LDUL0024                                        0222  07830000
* /******************************************************************** 07840000
* /*         THIS IS THE DCB EXIT ROUTINE FOR THE UNLOAD DCB          * 07850000
* /******************************************************************** 07860000
*                                                                       07870000
* ULOADVAL:                                                             07880000
*         DCBREG=ADDR(INDCB);           /* SET CURRENT DCB POINTER      07890000
*                                          REGISTER TO ADDRESS OF       07900000
*                                          INPUT PDS DCB              * 07910000
ULOADVAL LA    @5,INDCB                                           0223  07920000
*         MINBLK=12 +                   /* SET MINIMUM UNLOAD DATA    * 07930000
*                8 +                    /*  SET BLKSIZE TO LENGTH OF  * 07940000
*                DCBKEYLE +             /*  FMBBCCHHRKDD FIELD +      * 07950000
*                IBLKSIZE;              /*  LENGTH OF BIG AND LITTLE    07960000
*                                           LL FIELDS + KEY LENGTH      07970000
*                                           AND DATA LENGTH OF DATA     07980000
*                                           SET TO BE UNLOADED        * 07990000
         LH    @F,IBLKSIZE                                        0224  08000000
         SR    @0,@0                                              0224  08010000
         IC    @0,DCBKEYLE                                        0224  08020000
         AR    @F,@0                                              0224  08030000
         AH    @F,@D5                                             0224  08040000
         AH    @F,@D6                                             0224  08050000
         ST    @F,MINBLK                                          0224  08060000
*                                                                       08070000
*         /*----------------------------------------------------------* 08080000
*         /* A TEST IS NOW MADE TO SEE IF THE MINIMUM BLKSIZE CALCU-  * 08090000
*         /* LATED ABOVE IS LESS THAN 284 BYTES.  IF IT IS, THE MIN-  * 08100000
*         /* IMUM BLKSIZE IS SET TO 284.                              * 08110000
*         /*----------------------------------------------------------* 08120000
*                                                                       08130000
*         IF MINBLK < 284               /* IS THE VALUE CALCULATED      08140000
*                                          ABOVE FOR MINBLK LESS        08150000
*                                          THAN THE ABSOLUTE MINUMUM  * 08160000
*            THEN                       /* YES IT IS                  * 08170000
         LA    @F,284                                             0225  08180000
         C     @F,MINBLK                                          0225  08190000
         BC    12,@9EF                                            0225  08200000
*              MINBLK=284;              /* SET MINBLK TO ABSOLUTE       08210000
*                                          MINIMUM (ASSUMING NO         08220000
*                                          SPANNING REQUIRED)         * 08230000
         ST    @F,MINBLK                                          0226  08240000
*            ELSE;                      /* NO, IT IS GREATER OR EQUAL   08250000
*                                          SO DON'T CHANGE IT         * 08260000
@9EF     EQU   *                                                  0227  08270000
*         DCBREG=ADDR(ULOADDCB);        /* SET CURRENT DCB POINTER      08280000
*                                          TO ADDRESS OF UNLOAD DCB   * 08290000
@9EE     LA    @5,ULOADDCB                                        0228  08300000
*                                                                       08310000
*         /*----------------------------------------------------------* 08320000
*         /* A TEST IS NOW MADE TO DETERMINE IF THE UNLOAD DCB BLK-   * 08330000
*         /* SIZE (USER SUPPLIED OR 0) IS LESS THAN THE MINIMUM       * 08340000
*         /* REQUIRED FOR UNLOADING.  IF IT IS, IT IS SET TO THE      * 08350000
*         /* MINIMUM VALUE.                                           * 08360000
*         /*----------------------------------------------------------* 08370000
*                                                                       08380000
*         IF DCBBLKSI < MINBLK          /* IS THE UNLOAD DCB BLKSIZE    08390000
*                                          LESS THAN THE ABOVE CALC-    08400000
*                                          ULATED MINIMUM             * 08410000
*            THEN                       /* YES, IT IS TOO SMALL       * 08420000
         L     @F,MINBLK                                          0229  08430000
         CH    @F,DCBBLKSI                                        0229  08440000
         BC    12,@9ED                                            0229  08450000
*              DCBBLKSI=MINBLK;         /* SET IT TO CORRECT MINIMUM    08460000
*                                          VALUE                      * 08470000
         MVC   DCBBLKSI(2),MINBLK+2                               0230  08480000
         BC    15,@9EC                                            0231  08490000
*            ELSE;                      /* NO, IT IS LARGER OR EQUAL    08500000
*                                          SO DO NOT CHANGE IT        * 08510000
@9ED     EQU   *                                                  0231  08520000
*                                                                       08530000
*         /*----------------------------------------------------------* 08540000
*         /* A TEST IS NOW MADE TO DETERMINE IF THE UNLOAD DATA SET   * 08550000
*         /* CAN PHYSICALLY CONTAIN A RECORD WHOSE LENGTH IS AS LONG  * 08560000
*         /* AS THAT SPECIFIED BY THE UNLOAD DCB BLKSIZE FIELD.       * 08570000
*         /*----------------------------------------------------------* 08580000
*                                                                       08590000
*         IF DCBBLKSI > OUTMXBLK        /* IS THE UNLOAD DCB BLKSIZE    08600000
*                                          LARGER THAN THE MAXIMUM      08610000
*                                          RECORD LENGTH ALLOWED ON     08620000
*                                          THE UNLOAD DEVICE          * 08630000
*            THEN                       /* YES, IT IS LARGER          * 08640000
@9EC     L     @F,OUTMXBLK                                        0232  08650000
         CH    @F,DCBBLKSI                                        0232  08660000
         BC    10,@9EB                                            0232  08670000
*              DCBBLKSI=OUTMXBLK;       /* SET THE UNLOAD DCB BLKSIZE   08680000
*                                          TO DEVICE MAXIMUM RECORD     08690000
*                                          LENGTH - SPANNING MAY HAVE   08700000
*                                          TO BE DONE OF THE UNLOADED   08710000
*                                          DATA                       * 08720000
         MVC   DCBBLKSI(2),OUTMXBLK+2                             0233  08730000
*            ELSE;                      /* NO, IT IS NOT LARGER, SO     08740000
*                                          DO NOT CHANGE IT           * 08750000
@9EB     EQU   *                                                  0234  08760000
*         DCBLRECL=DCBBLKSI-4;          /* ASSURE THAT THE UNLOAD DCB   08770000
*                                          LRECL FIELD IS EQUAL TO      08780000
*                                          THE UNLOAD DCB BLKSIZE       08790000
*                                          FIELD MINUS THE LENGTH OF    08800000
*                                          THE BIG LL FIELD           * 08810000
@9EA     LH    @F,DCBBLKSI                                        0235  08820000
         SH    @F,@D2                                             0235  08830000
         STH   @F,DCBLRECL                                        0235  08840000
*                                                                       08850000
*         /************************************************************ 08860000
*         /* THE FOLLOWING GENERATED CODE IS FOR RETURN LINKAGE TO    * 08870000
*         /* TO OPEN.                                                 * 08880000
*         /************************************************************ 08890000
*                                                                       08900000
*         GENERATE;                                                     08910000
         BR    @E                 RETURN TO OPEN                        08920000
         DS    0H                                                       08930000
* /******************************************************************** 08940000
* /*         THIS SECTION HANDLES VALIDATION ERRORS FOUND IN THIS     * 08950000
* /*         MODULE.                                                  * 08960000
* /******************************************************************** 08970000
*                                                                       08980000
* LDUL0100:                             /* OPEN ERROR                 * 08990000
*         MSG2='8012'X;                 /* INDICATE OPEN ERROR MESSAGE* 09000000
LDUL0100 MVC   MSG2(2),@X6                                        0237  09010000
*         GO TO LDUL0112;               /* SET HEADER INDICATOR       * 09020000
         BC    15,LDUL0112                                        0238  09030000
* LDUL0101:                             /* INPUT AND OUTPUT DATA SETS   09040000
*                                          ON SAME TAPE VOLUME ERROR  * 09050000
*         MSG2='804A'X;                 /* INDICATE INPUT AND OUTPUT    09060000
*                                          DATA SET ON SAME TAPE        09070000
*                                          VOLUME MESSAGE             * 09080000
LDUL0101 MVC   MSG2(2),@X7                                        0239  09090000
*         GO TO LDUL0112;               /* SET HEADER INDICATOR       * 09100000
         BC    15,LDUL0112                                        0240  09110000
* LDUL0102:                             /* LOAD OR UNLOAD DATA SET      09120000
*                                          NOT ON A TAPE OR DISK        09130000
*                                          DEVICE ERROR               * 09140000
*         MSG2='804B'X;                 /* INDICATE LOAD OR UNLOAD      09150000
*                                          DATA SET NOT ON A TAPE       09160000
*                                          OR DISK DEVICE             * 09170000
LDUL0102 MVC   MSG2(2),@X8                                        0241  09180000
*         GO TO LDUL0112;               /* SET HEADER INDICATOR       * 09190000
         BC    15,LDUL0112                                        0242  09200000
* LDUL0104:                             /* INVALID COPYR1 ID FIELD    * 09210000
*         MSG2='8045'X;                 /* INDICATE NOT AN IEBCOPY      09220000
*                                          UNLOADED PDS ERROR MESSAGE * 09230000
LDUL0104 MVC   MSG2(2),@X9                                        0243  09240000
*         GO TO LDUL0112;               /* SET HEADER INDICATOR       * 09250000
         BC    15,LDUL0112                                        0244  09260000
* LDUL0106:                             /* NOT A LOADBLE DATA SET     * 09270000
*         MSG2='8049'X;                 /* INDICATE NOT A LOADABLE DATA 09280000
*                                          DATA SET MESSAGE           * 09290000
LDUL0106 MVC   MSG2(2),@X10                                       0245  09300000
*         GO TO LDUL0112;               /* SET HEADER INDICATOR       * 09310000
         BC    15,LDUL0112                                        0246  09320000
* LDUL0108:                             /* PARM='COMPRESS' ERROR      * 09330000
*         MSG1='8046'X;                 /* INDICATE COMPRESS PARAMETER  09340000
*                                          INVALID ERROR MESSAGE      * 09350000
LDUL0108 MVC   MSG1(2),@X11                                       0247  09360000
*         GO TO LDUL0116;               /* GO ISSUE ERROR MESSAGE     * 09370000
         BC    15,LDUL0116                                        0248  09380000
* LDUL0112:                             /* PREPARE DDNAME MESSAGE     * 09390000
*         MSG1='0811'X;                 /* INDICATE DDNAME HEADER       09400000
*                                          ERROR MESSAGE              * 09410000
LDUL0112 MVC   MSG1(2),@X12                                       0249  09420000
*         PARAMS='80'X;                 /* INDICATE NAME TO BE PLACED   09430000
*                                          IN MESSAGE                 * 09440000
         MVI   PARAMS,X'80'                                       0250  09450000
*         NAMEDISP='00'X;               /* INDICATE DISPLACEMENT FOR    09460000
*                                          NAME IN MESSAGE            * 09470000
         MVI   NAMEDISP,X'00'                                     0251  09480000
*         GO TO LDUL0116 ;                   /*GO ISSUE ERROR MSGM2744* 09490000
         BC    15,LDUL0116                                        0252  09500000
* LDUL0114 :                                                   /*M2744* 09510000
*         MSG1 = '8020'X ;                   /*GIVE NO BUFFER    M2744  09520000
*                                               AVAILABLE MSG    M2744* 09530000
LDUL0114 MVC   MSG1(2),@X13                                       0253  09540000
* LDUL0116:                             /* LINK TO IEBVMS             * 09550000
*                                                                       09560000
*         /************************************************************ 09570000
*         /* THE FOLLOWING GENERATED CODE IS FOR LINKAGE TO THE       * 09580000
*         /* MESSAGE HANDLING ROUTINE IEBVMS.                         * 09590000
*         /************************************************************ 09600000
*                                                                       09610000
*         GENERATE;                                                     09620000
LDUL0116 EQU   *                                                  0254  09630000
         STM   @E,@F,REGSAVE1     SAVE REGISTERS 14 AND 15              09640000
         L     @F,VIEBVMS         1 ADDRESS OF MESSAGE HANDLING         09650000
*                                  ROUTINE                              09660000
         BALR  @E,@F              LINK TO IEBVMS                        09670000
         LM    @E,@F,REGSAVE1     RESTORE REGISTERS 14 AND 15           09680000
         DS    0H                                                       09690000
*    IF RCBUF<'F8'X              /* IF RETURN CODE LESS THAN 8  A44144* 09700000
*            THEN                /* YES, IT IS SMALLER          A44144* 09710000
         CLI   RCBUF,X'F8'                                        0255  09720000
         BC    10,@9E9                                            0255  09730000
*         RCBUF='F8'X;           /* SET RETURN CODE TO 8        A44144* 09740000
         MVI   RCBUF,X'F8'                                        0256  09750000
*            ELSE;               /* NO, IT IS NOT SMALLER SO            09760000
*                                   DO NOT CHANGE IT            A44144* 09770000
@9E9     EQU   *                                                  0257  09780000
*         RTCDREG=4;                    /* SET RETURN CODE TO FOUR    * 09790000
@9E8     LA    @F,4                                               0258  09800000
*         RETURN;                       /* RETURN TO CALLER           * 09810000
* /******************************************************************** 09820000
* /*        THIS NESTED PROCEDURE IS USED TO READ THE COPYR1 AND      * 09830000
* /*        COPYR2 DESCRIPTOR RECORDS.                                * 09840000
* /******************************************************************** 09850000
*                                                                       09860000
* READHD: PROCEDURE;                                                    09870000
@EL01    L     @D,4(0,@D)                                         0260  09880000
         L     @E,12(0,@D)                                        0260  09890000
         LM    @0,@C,20(@D)                                       0260  09900000
         BCR   15,@E                                              0260  09910000
READHD   STM   @E,@C,12(@D)                                       0260  09920000
         ST    @D,@SAV002+4                                       0260  09930000
         LA    @F,@SAV002                                         0260  09940000
         ST    @F,8(0,@D)                                         0260  09950000
         LR    @D,@F                                              0260  09960000
*                                                                       09970000
*         /************************************************************ 09980000
*         /* THE FOLLOWING ARE REGISTER RESTRICTIONS.                 * 09990000
*         /************************************************************ 10000000
*                                                                       10010000
*         RESTRICT(4);                  /* IEBMCA AREA POINTER        * 10020000
*         RESTRICT(5);                  /* CURRENT DCB POINTER        * 10030000
*         RESTRICT(6);                  /* BUFFER POINTER             * 10040000
*         /************************************************************ 10050000
*         /* THE FOLLOWING DATA DEFINITIONS ARE FOR VARIABLES         * 10060000
*         /* USED ONLY IN THIS PROCEDURE.                             * 10070000
*         /************************************************************ 10080000
*                                                                       10090000
*         DCL                                                           10100000
*           BUFPOINT REGISTER(6) POINTER(31); /* CURRENT DESCRIPTOR     10110000
*                                                RECORD BUFFER POINTER* 10120000
*         BUFPOINT=READPTR;             /* LOAD BUFFER POINTER        * 10130000
         L     @6,READPTR                                         0265  10140000
*                                                                       10150000
*         /************************************************************ 10160000
*         /* THE FOLLOWING GENERATED CODE IS USED TO READ COPYR1      * 10170000
*         /* AND COPYR2 DESCRIPTOR RECORDS.                           * 10180000
*         /************************************************************ 10190000
*                                                                       10200000
*         GENERATE;                                                     10210000
         STM   @E,@1,REGSAVE1     SAVE REGISTERS 14,15,0 AND 1          10220000
         READ  HDECB,SF,(@5),(@6) READ A HEADER RECORD                  10230000
         CHECK HDECB              WAIT FOR I/O COMPLETED OK             10240000
         LM    @E,@1,REGSAVE1     RESTORE REGISTERS 14,15,0 AND 1       10250000
         DS    0H                                                       10260000
*         RETURN;                       /* RETURN TO CALLER OF READHD * 10270000
*         END READHD;                                                   10280000
@EL02    L     @D,4(0,@D)                                         0268  10290000
         LM    @E,@C,12(@D)                                       0268  10300000
         BCR   15,@E                                              0268  10310000
*         END IEBLDUL;                                                  10320000
@DATA1   EQU   *                                                        10330000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           10340000
@1       EQU   01                                                       10350000
@2       EQU   02                                                       10360000
@3       EQU   03                                                       10370000
@4       EQU   04                                                       10380000
@5       EQU   05                                                       10390000
@6       EQU   06                                                       10400000
@7       EQU   07                                                       10410000
@8       EQU   08                                                       10420000
@9       EQU   09                                                       10430000
@A       EQU   10                                                       10440000
@B       EQU   11                                                       10450000
@C       EQU   12                                                       10460000
@D       EQU   13                                                       10470000
@E       EQU   14                                                       10480000
@F       EQU   15                                                       10490000
@D1      DC    H'-60'                                                   10500000
@D2      DC    H'4'                                                     10510000
@D3      DC    H'-16'                                                   10520000
@D4      DC    H'1'                                                     10530000
@D5      DC    H'8'                                                     10540000
@D6      DC    H'12'                                                    10550000
@MVC     MVC   0(1,@A),0(@E)                                            10560000
         DS    0F                                                       10570000
@X6      DC    X'8012'                                                  10580000
@X7      DC    X'804A'                                                  10590000
@X8      DC    X'804B'                                                  10600000
@X9      DC    X'8045'                                                  10610000
@X10     DC    X'8049'                                                  10620000
@X11     DC    X'8046'                                                  10630000
@X12     DC    X'0811'                                                  10640000
@X13     DC    X'8020'                                                  10650000
@X4      DC    X'CA6D0F'                                                10660000
         DS    0D                                                       10670000
@DATA    EQU   *                                                        10680000
@SAV001  EQU   @DATA+00000000      72 BYTE(S) ON WORD                   10690000
JFCBBUF  EQU   00000000            176 BYTE(S)                          10700000
DSCBBUF  EQU   00000000            96 BYTE(S)                           10710000
INVOLBUF EQU   00000000            6 BYTE(S)                            10720000
INDSNBUF EQU   00000000            44 BYTE(S)                           10730000
REGSAVE1 EQU   @DATA+00000072      16 BYTE(S) ON WORD                   10740000
READPTR  EQU   @DATA+00000088      FULLWORD POINTER                     10750000
MINBLK   EQU   @DATA+00000092      FULLWORD INTEGER                     10760000
ENDCHAR  EQU   @DATA+00000096      HALFWORD INTEGER                     10770000
DEBXPTR  EQU   @DATA+00000100      FULLWORD POINTER                     10780000
XTENTCTR EQU   @DATA+00000104      HALFWORD INTEGER                     10790000
RTCDREG  EQU   00000015            FULLWORD INTEGER REGISTER            10800000
JFCBREG  EQU   00000007            FULLWORD POINTER REGISTER            10810000
DSCBREG  EQU   00000006            FULLWORD POINTER REGISTER            10820000
DEBREG   EQU   00000007            FULLWORD POINTER REGISTER            10830000
DCBREG   EQU   00000005            FULLWORD POINTER REGISTER            10840000
COPYR1   EQU   00000000            60 BYTE(S) ON WORD                   10850000
BLL1     EQU   COPYR1+00000000     HALFWORD INTEGER                     10860000
BLL100   EQU   COPYR1+00000002     HALFWORD INTEGER                     10870000
LLL1     EQU   COPYR1+00000004     HALFWORD INTEGER                     10880000
LLL100   EQU   COPYR1+00000006     HALFWORD INTEGER                     10890000
INDC     EQU   COPYR1+00000008     8 BIT(S)                             10900000
LOADSTAT EQU   COPYR1+00000008     1 BIT(S)                             10910000
A00000   EQU   COPYR1+00000008     7 BIT(S)                             10920000
ID       EQU   COPYR1+00000009     3 BYTE(S)                            10930000
UDSORG   EQU   COPYR1+00000012     16 BIT(S)                            10940000
UBLKSIZE EQU   COPYR1+00000014     HALFWORD INTEGER                     10950000
ULRECL   EQU   COPYR1+00000016     HALFWORD INTEGER                     10960000
URECFM   EQU   COPYR1+00000018     8 BIT(S)                             10970000
UKEYLEN  EQU   COPYR1+00000019     8 BIT(S)                             10980000
UOPTCD   EQU   COPYR1+00000020     8 BIT(S)                             10990000
A00001   EQU   COPYR1+00000021     8 BIT(S)                             11000000
TBLKSIZE EQU   COPYR1+00000022     HALFWORD INTEGER                     11010000
UDEVTYPE EQU   COPYR1+00000024     20 BYTE(S)                           11020000
A00002   EQU   COPYR1+00000044     16 BYTE(S)                           11030000
COPYR2   EQU   00000000            284 BYTE(S) ON WORD                  11040000
BLL2     EQU   COPYR2+00000000     HALFWORD INTEGER                     11050000
BLL200   EQU   COPYR2+00000002     HALFWORD INTEGER                     11060000
LLL2     EQU   COPYR2+00000004     HALFWORD INTEGER                     11070000
LLL200   EQU   COPYR2+00000006     HALFWORD INTEGER                     11080000
UDEBL16  EQU   COPYR2+00000008     16 BYTE(S)                           11090000
UDEBX    EQU   COPYR2+00000024     256 BYTE(S)                          11100000
URES2    EQU   COPYR2+00000280     4 BYTE(S)                            11110000
TEMP1HDR EQU   00000000            60 BYTE(S)                           11120000
TEMP2HDR EQU   00000000            284 BYTE(S)                          11130000
DEBXFLD  EQU   00000000            16 BYTE(S) ON WORD                   11140000
FILEMASK EQU   DEBXFLD+00000000    8 BIT(S)                             11150000
UCBAD    EQU   DEBXFLD+00000001    3  BYTE  POINTER ON WORD+1           11160000
A00003   EQU   DEBXFLD+00000004    12 BYTE(S)                           11170000
         ENTRY IEBLDUL1                                                 11180000
         ENTRY IEBLDUL2                                                 11190000
@SAV002  EQU   @DATA+00000108      72 BYTE(S) ON WORD                   11200000
BUFPOINT EQU   00000006            FULLWORD POINTER REGISTER            11210000
         DS    00000180C                                                11220000
@TEMPS   DS    0F                                                       11230000
@TEMP3   DC    F'0'                                                     11240000
@TEMP4   DC    F'0'                                                     11250000
PATCHLEN EQU   (*-IEBLDUL)/20     5 PERCENT OF MODULE LENGTH            11260000
         DS    0H                                                       11270000
PATCH    DS    CL(PATCHLEN)       5 PERCENT PATCH AREA                  11280000
         EJECT                                                          11290000
IEBMCA   DSECT                                                          11300000
         IEBMCA                                                         11310000
LIST5ADR EQU   LIST5+1            ADDRESS PORTION OF LIST5              11320000
LIST6ADR EQU   LIST6+1            ADDRESS PORTION OF LIST6              11330000
OUTMXBLK EQU   OUTCHAR+4          OUTPUT DEVICE CHARACTERISTICS         11340000
*                                  MAXIMUM RECORD LENGTH FIELD          11350000
         EJECT                                                          11360000
         DCBD  DSORG=PS                                                 11370000
EODAD24  EQU   DCBEODAD+1         DCB EODAD ADDRESS FIELD               11380000
SYNAD24  EQU   DCBSYNAD+1         DCB SYNAD ADDRESS FIELD               11390000
DEBAD24  EQU   DCBDEBAD+1         DCB DEB ADDRESS FIELD                 11400000
         EJECT                                                          11410000
IECDSECT DSECT                                                          11420000
         IECDSECT                                                       11430000
@DATEND  EQU   *                                                        11440000
         END   IEBLDUL                                                  11450000
./  ADD  SSI=72900016,NAME=IEBMCM
CMCM     TITLE 'COMPRESS-IN-PLACE SUBROUTINE OF IEBCOPY- IEBMCM'        00600019
IEBMCM   CSECT                                                          01200019
*C582000-594000                                                  A34431 01500000
*C938000                                                         A41780 01550000
*C270000,876000-891000                                           A44144 01560000
*C574500-575000                                                  A48753 01570000
*A575100-575200                                                  A48753 01580000
*C603500,604500                                                @ZA11964 01580199
*A605100,605200                                                @ZA13707 01580299
*C605100,605200                                                @ZA13751 01580399
*C375000                                                       @ZA26248 01580499
**********************************************************************  01600000
*                                                                       01800019
*        FUNCTION - PROCESS FOR IN-PLACE COMPRESSION ALL MEMBERS WHICH  02400019
*                   ARE ALREADY IN PLACE.  WHEN THE FIRST NOT-IN-PLACE  03000019
*                   MEMBER IS ENCOUNTERED, SET TO HANDLE THIS AND ALL   03600019
*                   SUBSEQUENT MEMBERS AS THOUGH THIS WAS A NON-        04200019
*                   COMPRESS FULL COPY.                                 04800019
*                                                                       05400019
*        INPUT - R15 = ADDR OF IEBMCM                                   06000019
*              - R4  = ADDR OF COMMUNICATION AREA                       06600019
*              - R13 = CALLER'S SAVE AREA                               07200019
*                                                                       07800019
*        SUBROUTINES CALLED -                                           08400019
*              IEBVMS - MESSAGE WRITER                                  09000019
*              IEBDRD - READ ROUTINE                                    09600019
*              IEBMGI - FIND INPUT DIR. ENT. USING CTLTAB               10200019
*              TTOCC  - CONVERT TTR TO MBBCCHHR                         10800019
*                                                                       11400019
*        EXITS - TO THE MAIN PROGRAM (CALLER), WITH R15 SET AS FOLLOWS- 12000019
*              - 0 = NEED TO PROCESS,CURRENT AND ANY FURTHER MEMBERS    12600019
*                    SIMILARLY TO FULL COPY                             13200019
*              - 4 = ALL MBRS WERE ALREADY IN PLACE - NONE WERE MOVED   13800019
*                                                                       15000019
*        REGISTER DEFINITION                                            15600019
*                                                                       16200019
R0       EQU   0                  WORK/PARAM REG                        16800019
R1       EQU   1                  WORK/PARAM REG                        17400019
R2       EQU   2                  WORK REG                              18000019
R3       EQU   3                  WORK REG                              18600019
R4       EQU   4                  ADDR OF IEBMCA                        19200019
R5       EQU   5                  WORK REG                              19800019
R6       EQU   6                  WORK REG                              20400019
R7       EQU   7                  WORK REG                              21000019
R8       EQU   8                  WORK REG                              21600019
R9       EQU   9                  WORK REG                              22200019
R10      EQU   10                 WORK REG                              22800019
R11      EQU   11                 WORK REG                              23400019
R12      EQU   12                 BASE REG                              24000019
R13      EQU   13                 ADDR OF REG SAVE AREA                 24600019
R14      EQU   14                 PARAM/LINK REG                        25200019
R15      EQU   15                 PARAM/LINK REG                        25800019
         SPACE 2                                                        26400019
C8       EQU   C'8'               FOR SETTING COMPLETION CODE    A44144 27000000
TKOFLO   EQU   X'20'         MASK FOR TESTING TRACK OVERFLOW IN DCB     27300019
ZERO     EQU   0                                                        27600019
FF       EQU   X'FF'                                                    28200019
         EJECT                                                          28800019
         SAVE  (14,12),,*                                               29400019
         BALR  R12,R0             ADDRESSIBILITY                        30000019
         USING *,R12                                                    30600019
         USING IEBMCA,R4          ADDR OF COMMUNICATION AREA            31200019
         LA    R2,SV6                                                   31800019
         ST    R13,X4(R0,R2)      FORWARD AND BACKWARD LINKAGE          32400019
         ST    R2,X8(R13)                                               33000019
         LR    R13,R2                                                   33600019
         LA    R1,OUTDCB                                                34200019
         USING IHADCB,R1                                                34800019
         NI    FLG4,FF-LE         ASSURE THAT 'LE' IS OFF               37300019
         OI    TAG,TAG8           SET SWITCH FOR IEBVWS        @ZA26248 37500099
         TM    TAG,CTOUT          IS THERE A NEED TO COUNT OD BLOCKS    37800019
         BZ    RNDX               IF NOT, DONT RESET COUNT              38400019
         XC    DIRBCNT(P2),DIRBCNT ELSE INITIALIZE COUNT TO ZERO        39000019
         MVI   NDBTR,ZERO          RESET NDBTR                   A36049 39300000
RNDX     MVI   SENSE,SENSE4       INDICATE TO READ WITH NO DATA XFR     39600019
         NI    STATUS,STAT5+STAT7 RESET MOST STATUS BITS                39700019
         OI    STATUS,STAT2       INDIC READING OUTPUT DIRECTORY FROM   39800019
*                                 OUTPUT DATA SET                       39900019
         MVI   OUTSCTOR,ZERO      SET OUTPUT SECTOR VALUE TO 0   S20201 40000020
*                                   (USED ONLY IF ON AN RPS      S20201 40100020
*                                   DEVICE)                      S20201 40200020
         MVC   READNEXT(L4),BCB   SET POINTER FOR READ                  40300019
         L     R15,VIEBDRD                                              40800019
         BALR  R14,R15            LINK TO READ TO EOF - NO DATA XFR     41400019
         NI    FLG2,FF-RDEOF      RESET EOF-REACHED SWITCH              42000019
         NI    TAG,FF-CTOUT       INDIC OUTPUT DIRECTORY BLOCKS ALLO-   42100019
*                                 CATED ARE NOW COUNTED                 42200019
         NI    STATUS,STAT5+STAT7 RESET MOST STATUS BITS                42300019
         OI    STATUS,STAT4       INDIC READING INPUT MBR DATA          42400019
         MVI   INSCTOR,ZERO       SET INPUT SECTOR VALUE TO 0    S20201 42450020
*                                   (USED ONLY IF ON AN RPS      S20201 42500020
*                                   DEVICE)                      S20201 42550020
         OI    FLG7,COP           INDICATE NEED TO GET PTRS IN TTR SEQ  42600019
         MVI   SWITCH1,ZERO       RESET IEBMGI'S SWITCH                 43200019
CMPNGI   L     R15,VIEBMGI                                              43800019
         BALR  R14,R15            GO FIND THE 1ST/NEXT DIRECTORY ENTRY  44400019
         TM    SWITCH1,MGINODE    WAS NO IDE RETURNED DUE TO UT3 ERROR  44410019
         BZ    GOTTHEDE           NO - AN IDE WAS RETURNED              44420019
         NI    SWITCH1,FF-MGINODE RESET 'NO IDE' SWITCH                 44430019
         MVI   MSG1+P1,WONTCOM    SET MSG CODE - DUE TO ERROR READING   44440019
*                                 FROM SYSUT3, COMPRESS-IN-PLACE OPERA- 44450019
*                                 TION TERMINATED                       44460019
         NI    IOEF1,FF-ERF8      RESET POSSIBLE I/O ERROR FLAG         44470019
         B     CMCRC              SET RETURN CODE                       44480019
GOTTHEDE EQU   *                                                        44490019
         MVI   SENSE,SENSE4       INDICATE READ WITH NO DATA XFR        44500019
*                                 (BIT MAY HAVE BEEN TURNED OFF BY      44600019
*                                 IEBMGI IF DIRECTORY ENTRY WAS READ    44700019
*                                 FROM SYSUT3)                          44800019
         L     R7,IDEAD           POINT TO DE JUST LOCATED              45000019
         LA    R1,INDCB           POINT TO DCB                          45600019
         LA    R2,DCBFDAD         AREA TO GET MBBCCHHR                  46800019
         MVI   WKA1+P3,ZERO                                             47400019
         MVC   WKA1(L3),X8(R7)    SET UP TO CONVERT MBR-TTR             48000019
         L     R0,WKA1            SET R0 TO 'TTR0'                      48600019
         L     R15,VTTOCC                                               49200019
         BALR  R14,R15            GO CONVERT INPUT MBR TTR TO MBBCCHHR  49800019
         IC    R6,DCBFDAD+P7      DECREMENT MBBCCHHR OF MBR BY R-1, TO  50400019
         BCTR  R6,R0              SET APPROPRIATE SEEK ADDRESS FOR READ 51000019
         STC   R6,DCBFDAD+P7                                            51600019
CMBB     LA    R1,OUTDCB                                                52200019
         LA    R2,DCBFDAD                                               52600019
         L     R15,VCCOTT         SET TO CONVERT MBBCCHHR OF LAST REC-  53000019
*                                 ORD WRITTEN TO TTR                    53400019
         BALR  R14,R15            LINK TO ROUTINE                       53800019
         MVC   OUTDS1(L4),WKA1    UPON RETURN FROM CONVERT ROUTINE, TTR 54200019
*                                 IS IN WKA1.  MOVE IT TO AREA FOR USE  54600019
*                                 BY IEBWSU ROUTINE                     55000019
         IC    R6,WKA1+P2              ADD                              55400019
         LA    R6,X1(R6)               ONE                              55800019
         STC   R6,WKA1+P2              TO R                             56200019
         LA    R1,INDCB                                                 56600019
         CLC   X8(L3,R7),WKA1     INPUT TTR VS OUTPUT TTR+1             57400019
         BE    INPLACE            IF EQUAL, (IN PLACE) FIND      A48753 57450000
*                                  EOF OF THIS MEMBER            A48753 57500000
         BL    TSTLE              IF LOW, (ALIAS) IGNORE         A48753 57510000
*                                  READING THIS MEMBER AGAIN     A48753 57520000
         MVC   WORKWORD(L3),X8(R7) MOVE TTR FOR THIS MEMBER      A34431 57550020
*                                  TO FULL WORD BOUNDRY          A34431 57600020
         LH    R15,WORKWORD       LOAD TT                        A34431 57650020
         BCTR  R15,R0              AND DECREMENT BY 1            A34431 57700020
         SH    R15,WKA1           DO THE TT'S DIFFER BY MORE     A34431 57750020
*                                  THAN ONE                      A34431 57800020
         BP    SETPROC            YES, A GAP HAS BEEN FOUND,     A34431 57850020
*                                  GO PREPARE TO COPY THIS AND   A34431 57900020
*                                  ALL SUBSEQUENT MEMBERS        A34431 57950020
         CLI   X10(R7),X1         DOES R OF TTR FOR THIS         A34431 58000020
*                                  MEMBER=1                      A34431 58050020
         BNE   SETPROC            NO, A GAP HAS BEEN FOUND, GO   A34431 58100020
*                                  PREPARE TO COPY THIS AND      A34431 58150020
*                                  ALL SUBSEQUENT MEMBERS        A34431 58200020
* MCM MUST NOW CHECK TO SEE IF THE FIRST MEMBER RECORD COULD     A34431 58250020
* HAVE BEEN WRITTEN ON THE PREVIOUS TRACK FOLLOWING THE LAST     A34431 58300020
* EOF THAT WAS READ.  IEBDRD IS CALLED TO READ THE COUNT FIELD   A34431 58350020
* OF THE FIRST RECORD OF THE MEMBER.  BY INSPECTING THE KDD PART A34431 58400020
* OF IT'S COUNT FIELD AND THE TRACK BALANCE FOLLOWING THE LAST   A34431 58450020
* EOF READ, IT CAN BE DETERMINED IF A GAP REALLY EXISTS.         A34431 58500020
         SPACE 1                                                 A34431 58550020
         LA    R1,INDCB           LOAD PTR TO INPUT DCB          A34431 58600020
         MVC   FDADSAVE(L8),DCBFDAD SAVE DCB FDAD FIELD - INDCB  A34431 58650020
         MVC   READNEXT(L4),ADNL  SET FOR READ INTO NOTELIST     A34431 58700020
*                                   BUFFER                       A34431 58750020
         L     R0,WORKWORD        LOAD TTR FOR CONVERSION        A34431 58800020
         L     R15,VTTOCC         CONVERSION ROUTINE ADDRESS     A34431 58850020
         LA    R2,DCBFDAD         WANT OUTPUT OF CONVERSION      A34431 58900020
*                                   IN INPUT DCB                 A34431 58950020
         BALR  R14,R15            CONVERT TTR TO FDAD            A34431 59000020
         SR    R15,R15            CLEAR WORK REG                 A34431 59050020
         IC    R15,X7(R0,R2)      INSERT R OF FDAD               A34431 59100020
         BCTR  R15,R0             DECREMENT BY 1                 A34431 59150020
         STC   R15,X7(R0,R2)      STORE DECREMENTED R            A34431 59200020
         MVI   SENSE,SENSE3       INDICATE READ COUNT FIELD      A34431 59250020
         L     R15,VIEBDRD        READ ROUTINE ADDRESS           A34431 59300020
         BALR  R14,R15            GO READ FIRST MEMBER RECORD    A34431 59350020
*                                   INTO NOTELIST BUFFER         A34431 59400020
         MVI   SENSE,SENSE4       RESTORE SENSE (READ WITH NO    A34431 59450020
*                                  DATA XFER)                    A34431 59500020
         LA    R1,INDCB           POINTER TO INPUT DCB           A34431 59550020
         MVC   DCBFDAD(L8),FDADSAVE RESTORE INDCB FDAD           A34431 59600020
         MVC   READNEXT(L4),BCB   RESTORE READNEXT               A34431 59650020
         SPACE 1                                                 A34431 59700020
         LA    R15,INCHAR         POINTER TO INPUT DEVTYPE INFO  A34431 59750020
         USING DEVTAB,R15         ADDRESSABILITY USING DEVTAB    A34431 59800020
         L     R14,ADNL           POINTER TO RECORD JUST READ    A34431 59850020
         SR    R9,R9              CLEAR WORK REG                 A34431 59900020
         IC    R9,X9(R0,R14)      INSERT KEY LENGTH              A34431 59950020
         MVC   WORKWORD(L2),X10(R14) MOVE DATA LENGTH TO WORD    A34431 60000020
*                                   BOUNDRY                      A34431 60050020
         AH    R9,WORKWORD        ADD DATA LENGTH TO KEY LENGTH  A34431 60100020
         SR    R8,R8              CLEAR WORK REG                 A34431 60150020
         IC    R8,OVERL           INSERT LAST RECORD OVERHEAD    A34431 60200020
         TM    DEVFLAG,HALFOVER   TWO BYTE OVERHEAD VALUE FOR    A34431 60250020
*                                   THIS DEVICE                  A34431 60300020
         BNO   NOTTWO        NO,USE ONE BYTE                   @ZA11964 60350099
         LH    R8,OVERI           LOAD TWO BYTE OVERHEAD         A34431 60400020
NOTTWO   OC    WORKWORD(L2),WORKWORD IS DATA LNGTH ZERO (EOF)  @ZA11964 60450099
         BNZ   NOTHALF            NO, GO ON                      A34431 60500020
         CLI   DEVCODE+3,X'08'    IS IT A 2314?                @ZA13751 60510099
         BE    NOTHALF            YES,DON'T ADD ONE BYTE       @ZA13751 60520099
         SPACE 1                                                 A34431 60550020
*  FOR I/O DEVICES WITH A TWO BYTE OVERHEAD VALUE, THE ONE BYTE  A34431 60600020
* OF DATA WRITTEN BY THE HARDWARE FOR AN EOF RECORD MUST BE      A34431 60650020
* INCLUDED IN TRACK BALANCE COMPUTATIONS                         A34431 60700020
         SPACE 1                                                 A34431 60750020
         LA    R9,X1(R0,R9)       YES, ADD 1 TO KEYLEN PLUS DATA A34431 60800020
*                                  LENGTH FOR EOF                A34431 60850020
NOTHALF  EQU   *                                                 A34431 60900020
         AR    R9,R8              ADD OVERHEAD TO DD + K         A34431 60950020
         CLI   X9(R14),X0         IS KEY LENGTH 0                A34431 61000020
         BNZ   SKIPDEC            NO, GO AROUND                  A34431 61050020
         SR    R8,R8              CLEAR WORK REG                 A34431 61100020
         IC    R8,OVERK           INSERT KEY OVERHEAD            A34431 61150020
         SR    R9,R8              SUBTRACT KEY OVERHEAD          A34431 61200020
SKIPDEC  EQU   *                                                 A34431 61250020
         CH    R9,OUTDS1+P4       WOULD THIS RECORD HAVE FIT ON  A34431 61300020
*                                   THE PREVIOUS TRACK           A34431 61350020
         BNH   SETPROC            YES, A GAP HAS BEEN FOUND, GO  A34431 61400020
*                                  PREPARE TO COPY THIS AND ALL  A34431 61450020
*                                  SUBSEQUENT MEMBERS            A34431 61500020
         B     INPLACE            NO, IT IS INPLACE, FIND EOF OF A34431 61550020
*                                  THIS MEMBER                   A34431 61600020
* SET UP FOLLOWING MESSAGE -                                            61800019
* IEB583I XXXXXXXX    COMPRESSED - WAS ALREADY IN PLACE AND NOT MOVED   62400019
TSTLE    MVC   NAMEFLD(L8),X0(R7) PUT MEMBERNAME INTO MSG PARM AREA     63000019
         MVI   MSG1+P1,M59        MESSAGE CODE                          63600019
         MVI   NAMEDISP,ZERO      DISPLACEMENT FOR NAME IN MSG          64200019
         MVI   PARAMS,NAME        INDICATE PRESENCE OF A NAME           64800019
         MVI   MSG1,LASTMSG+PBIT                                        65400019
         L     R15,VIEBVMS        ADDR OF MSG WRITER                    66000019
         BALR  R14,R15            LINK TO WRT MSG                       66600019
         TM    FLG4,LE            ARE THERE MORE INPUT MBRS TO CHECK    67200019
         BZ    CMPNGI                  LOCATE NEXT INPUT DIR. ENTRY     68200019
* SET UP MSG CODE FOR MSG -                                             70200019
* IEB585I ALL MEMBERS COMPRESSED - ALL WERE ORIGINALLY COMPRESSED       70800019
         MVI   MSG1+P1,M60        MESSAGE CODE                          71400019
         MVI   MSG1,LASTMSG                                             72000019
         L     R15,VIEBVMS        ADDR OF MSG WRITER                    72600019
         BALR  R14,R15            LINK TO WRT MSG                       73200019
         NI    COMDCDSW,FF-COMPRESS    RESET INDICATION OF COMPRESS     73800019
* MAKE SURE THAT WHEN THE OUTPUT DATASET IS CLOSED, THE DSCB WILL SHOW  73830019
* ALL SPACE AFTER THE LAST MEMBER IS AVAILABLE                          73860019
         LA    R1,OUTDCB          POINT TO OUTPUT DCB                   73890019
         MVC   OUTFDAD(L8),DCBFDAD SAVE LAST RECORDS FULL DISK ADDRESS  73920019
         MVC   OUTPTTR(L8),OUTDS1  SAVE LAST RECORDS TTRN AND TRKBALAN  73950019
FAKERTRN EQU   *                                                        74000019
         OI    FLG7,NOPRNBDB+SUPPRMSG SUPPRESS MEMBER NAME AND UNUSED   74100019
*                                      BLOCKS MESSAGE.                  74200019
         LA    R15,X4             SET RET CODE TO GO TO IEBVTM - NO     74600019
*                                 MERGE OF DIRECTORY IS REQUIRED        75000019
RETURN   MVI   SENSE,ZERO         RESET SENSE4 TO ALLOW DATA XFR LATER  75600019
         L     R13,X4(R13)                                              76200019
         RETURN (14,12),RC=(15)   RETURN WITH CODE IN R15               76800019
SETPROC  EQU   *                  SET UP TO GO COPY THIS AND ALL SUB-   79200019
*                                 SEQUENT MEMBERS                       79800019
         MVC   OLDTTR(L3),X8(R7)  SAVE THIS INPUT MBR TTR               80800019
         SR    R15,R15            SET RET CODE TO GO COPY THIS MBR      82200019
         B     RETURN             GO TO RETURN TO MAIN PGM              82800019
INPLACE  MVC   OLDTTR(L3),X8(R7)  SET THIS MEMBER TTR AS 'OLD'          83400019
         L     R15,VIEBDRD                                              84000019
         BALR  R14,R15            LINK TO READ TO EOF OF THIS MEMBER    84600019
         LA    R2,INDCB                                                 84700019
         LA    R1,OUTDCB                                                84800019
         MVC   DCBFDAD(L8),FDAD(R2) PUT THIS MEMBER'S EOF MBBCCHHR INTO 84900019
*                                 THE DCBFDAD FIELD OF THE OUTPUT DCB   85000019
         MVC   OUTSCTOR(L1),INSCTOR  SET OUTPUT SECTOR VALUE     S20201 85040020
*                                      EQUAL INPUT SECTOR VALUE  S20201 85080020
*                                      (USED ONLY IF ON AN RPS   S20201 85120020
*                                      DEVICE)                   S20201 85160020
         NI    FLG2,FF-RDEOF      RESET EOF-REACHED SWITCH              85200019
         B     TSTLE              SEE IF ANY MORE INPUT MEMBERS         85800019
CMCRC    CLI   RCBUF,C8           IS HIGHEST COMPL CODE LT/EQ 8  A44144 87600000
         BNL   CMSK8              IF SO, DONT SET IT             A44144 88200000
         MVI   RCBUF,C8           ELSE SET COMPLETION CODE TO 8  A44144 88800000
CMSK8    MVI   MSG1,LASTMSG       INDIC 1 MSG TO BE WRITTEN      A44144 89100000
         MVI   VTMFLG1,UNUSEND    INDICATE UNUSUAL END OF OPERATION -   89400019
*                                 RESET 'TERMIN' AND 'IOERROR' IF ON    89700019
         MVI   PARMSWCH,FLUSHSW   INDIC TO LOOK FOR NEXT COPY OPERATION 90000019
         L     R15,VIEBVMS        ADDR OF MSG ROUTINE                   90600019
         BALR  R14,R15            GO WRITE MESSAGE                      91000019
         B     FAKERTRN           GO TO CAUSE MAIN PROGRAM TO EXIT DI-  91400019
*                                 RECTLY TO IEBVTM                      91600019
PATCHLEN EQU   (*-IEBMCM)/20      LENGTH OF 5 PER CENT PATCH AREA       93400019
PATCH    DC    XL(PATCHLEN)'00'   5 PER CENT PATCH AREA          A41780 93800000
         EJECT                                                   A34431 93805020
FDADSAVE DC    2F'0'              DCBFDAD SAVE AREA              A34431 93810020
WORKWORD DC    F'0'               FULL WORD WORK AREA            A34431 93815020
         EJECT                                                          93820019
*   THE FOLLOWING EQUATES ARE USED TO REFERENCE SYMBOLIC LOCATIONS      93840019
*  PLUS A CONSTANT                                                      93860019
P1       EQU   1                                                        93880019
P2       EQU   2                                                        93900019
P3       EQU   3                                                        93920019
P4       EQU   4                                                 A34431 93930020
P7       EQU   7                                                        93940019
P8       EQU   8                                                 A34431 93944020
P16      EQU   16                                                A34431 93948020
P20      EQU   20                                                A34431 93952020
P23      EQU   23                                                A34431 93956020
*   THE FOLLOWING EQUATES ARE USED FOR INSTRUCTIONS REQUIRING LENGTH    93960019
*  SPECIFICATIONS SUCH AS MVC                                           93980019
L1       EQU   1                                                 S20201 93990020
L2       EQU   2                                                 A34431 93995020
L3       EQU   3                                                        94000019
L4       EQU   4                                                        94020019
L8       EQU   8                                                        94040019
*   THE FOLLOWING EQUATES ARE USED FOR OFFSETS WITH REGISTER NOTATION   94060019
X0       EQU   0                                                        94080019
X1       EQU   1                                                        94100019
X4       EQU   4                                                        94120019
X7       EQU   7                                                 A34431 94130020
X8       EQU   8                                                        94140019
X9       EQU   9                                                 A34431 94143020
X10      EQU   10                                                A34431 94146020
         EJECT                                                   A34431 94149020
DEVTAB   DSECT                    DEVTYPE DSECT                  A34431 94152020
DEVCODE  DS    F                  DEVICE TYPE CODE               A34431 94155020
MAXSIZE  DS    F                  MAX SIZE UNKEYED BLOCKS        A34431 94158020
MAXCC    DS    H                  NUMBER OF CYLINDERS            A34431 94161020
MAXHH    DS    H                  NUMBER OF TRACKS PER CYLINDER  A34431 94164020
TRKCAP   DS    H                  MAX TRACK LENGTH               A34431 94167020
OVERI    DS    XL1                OVERHEAD FOR NOT LAST RECORD   A34431 94170020
OVERL    DS    XL1                OVERHEAD FOR LAST RECORD       A34431 94173020
OVERK    DS    XL1                OVERHEAD REDUCTION IF NO KEY   A34431 94176020
DEVFLAG  DS    XL1                FLAG FIELD                     A34431 94179020
TOLER    DS    H                  TOLERANCE FACTOR               A34431 94182020
HALFOVER EQU   X'08'              OVERHEAD LAST=OVERHEAD NOT     A34431 94185020
*                                  LAST AND IS A 2 BYTE VALUE    A34431 94188020
         EJECT                                                          94200019
         DS    0D                                                       94800019
IEBMCA   DSECT                                                          95400019
         IEBMCA                                                         96000019
         EJECT                                                          96600019
         DCBD  DSORG=PO                                                 97200019
FDAD     EQU   DCBFDAD-IHADCB     OFFSET INTO DCB FOR DCBFDAD FIELD     97500019
         END                                                            97800019
./  ADD  SSI=72900017,NAME=IEBRSAM
         TITLE 'IEBRSAM - IEBCOPY READ ROUTINE FOR UNLOADED DATA SETS'  00010000
         LCLA  &T,&SPN                                            0001  00020000
.@001    ANOP                                                     0001  00030000
IEBRSAM  CSECT ,                                                  0001  00040000
         STM   @E,@C,12(@D)                                       0001  00050000
         BALR  @B,0                                               0001  00060000
@PSTART  DS    0H                                                 0001  00070000
         USING @PSTART+00000,@B                                   0001  00080000
         ST    @D,@SAV001+4                                       0001  00090000
         LA    @F,@SAV001                                         0001  00100000
         ST    @F,8(0,@D)                                         0001  00110000
         LR    @D,@F                                              0001  00120000
******************************APARS FIXED****************************** 00130000
*                                                                     * 00140000
*A263500-263800,270500,433500                @YA14033-@XA15454-@ZA13782 00150000
*                                                                     * 00160000
*********************************************************************** 00170000
         USING IEBMCA,MCABASE          ESTABLISH ADDRESSABILITY         00180000
         LA    DCBA,LOADDCB                                             00190000
         USING IHADCB,DCBA                                              00200000
         B     AROUND                                          @ZA13782 00210000
         DC    C'IEBRSAM-OZ13782'                              @ZA13782 00220000
         DS    0F                                              @ZA13782 00230000
AROUND   EQU   *                                               @ZA13782 00240000
         DS    0H                                                       00250000
*         WSFLAG(5)='1'B;               /* INDICATE READING           * 00260000
         OI    WSFLAG,B'00001000'                                 0036  00270000
*         FLG2(3)='0'B;                 /* ASURE FLAG INDIC NO MORE TO  00280000
*                                          READ IS OFF                * 00290000
         NI    FLG2,B'11011111'                                   0037  00300000
*         RDNXT=READNEXT-8;             /* PTR TO WHERE TO START READ * 00310000
         L     @F,READNEXT                                        0038  00320000
         SH    @F,@D1                                             0038  00330000
         ST    @F,RDNXT                                           0038  00340000
*         RDNXT=RDNXT&'00FFFFFF'X;  /* CLEAR HIGH ORDER BYTE @ZA13782 * 00350000
         NC    RDNXT(4),@X3                                       0039  00360000
*                                                                       00370000
*                                                                       00380000
* /******************************************************************** 00390000
* /* NOW A BLOCK OF DATA CAN BE READ INTO THE BUFFER                  * 00400000
* /******************************************************************** 00410000
*                                                                       00420000
* RSAM0006: CALL READBLK;                                               00430000
RSAM0006 BAL   @E,READBLK                                         0040  00440000
*                                                                       00450000
* /******************************************************************** 00460000
* /* EACH RECORD READ IS TESTED FOR END OF DATA AT THIS POINT         * 00470000
* /******************************************************************** 00480000
* RSAM0012:;                                                            00490000
*         /*----------------------------------------------------------* 00500000
*         /* NOW THAT A RECORD HAS BEEN READ INTO THE BUFFER,A TEST IS* 00510000
*         /* MADE TO SEE IF THERE ARE MORE DIRECTORY BLOCKS TO BE READ* 00520000
*         /* IF DATA LENGTH OF THE DIRECTORY BLOCK IS ZERO THERE      * 00530000
*         /* IS NO MORE TO BE READ OTHERWISE AN OTHER BLOCK EXISTS    * 00540000
*         /*----------------------------------------------------------* 00550000
*                                                                       00560000
*         IF DATA ¬= '0000'X            /*  IS KEY + DATA LENGHT ZERO * 00570000
*            THEN                       /* NO                         * 00580000
RSAM0012 L     @1,REDAD                                           0042  00590000
         CLC   10(2,@1),@X4                                       0042  00600000
         BC    08,@9FF                                            0042  00610000
*              DO;                      /* PREPARE FOR TESTING NEXT     00620000
*                                          BLOCK AND POSSIBLY READING   00630000
*                                          MORE BLOCKS                * 00640000
*                                                                       00650000
*           /*--------------------------------------------------------* 00660000
*           /* NOW THERE IS A POINTER TO THE NEXT DIR BLOCK,A TEST IS * 00670000
*           /* MADE TO SEE IF THAT BLOCK HAS ALREADY BEEN READ        * 00680000
*           /*--------------------------------------------------------* 00690000
*                                                                       00700000
*           IF REDAD+276 < BLKEX        /* READ ANOTHER DIR BLOCK     * 00710000
*              THEN                     /* YES                        * 00720000
         LA    @F,276                                             0044  00730000
         A     @F,REDAD                                           0044  00740000
         C     @F,BLKEX                                           0044  00750000
         BC    10,@9FE                                            0044  00760000
*                DO;                                                    00770000
*                  REDAD=REDAD + 276;   /* POINT TO NEXT DIR BLOCK    * 00780000
         LA    @F,276                                             0046  00790000
         A     @F,REDAD                                           0046  00800000
         ST    @F,REDAD                                           0046  00810000
*                  GO TO RSAM0012;      /* SEE IF IT IS THE LAST      * 00820000
         BC    15,RSAM0012                                        0047  00830000
*                END;                                                   00840000
*              ELSE;                    /* NO  READ IT                * 00850000
@9FE     EQU   *                                                  0049  00860000
*                  RDEND = RDNXT +      /* POINT TO END OF NEXT POSS  * 00870000
*                         DCBBLKSI;     /* BLOCK IN THE BUFFER        * 00880000
@9FD     LH    @F,DCBBLKSI                                        0050  00890000
         A     @F,RDNXT                                           0050  00900000
         ST    @F,RDEND                                           0050  00910000
*                                                                       00920000
*           /*--------------------------------------------------------* 00930000
*           /* NOW AN OTHER DIR BLOCK HAS TO BE READ,A TEST IS MADE TO* 00940000
*           /* SEE WHETHER IT WILL FIT IN THE BUFFER                  * 00950000
*           /*--------------------------------------------------------* 00960000
*                                                                       00970000
*           IF RDEND <= END2ND2         /* WILL NEXT READ FIT IN BUF  * 00980000
*              THEN                     /* YES                        * 00990000
         L     @F,END2ND2                                         0051  01000000
         C     @F,RDEND                                           0051  01010000
*                  GO TO RSAM0006;      /* READ ANOTHER BLOCK         * 01020000
         BC    10,RSAM0006                                        0052  01030000
         BC    15,@9FC                                            0055  01040000
*              ELSE;                    /* NO  HAVE THIS BUF PROCESSED* 01050000
*              END;                                                     01060000
*            ELSE                       /* YES KEY AND DATA LEN ZERO  * 01070000
*                FLG2(3)='1'B;          /* INDIC NO MORE TO READ      * 01080000
@9FF     OI    FLG2,B'00100000'                                   0055  01090000
*         F='80'X+ '40'X;               /* INDIC LAST REC IN ANY BUF  * 01100000
@9FC     LA    @F,X'40'                                           0056  01110000
         LA    @0,X'80'                                           0056  01120000
         AR    @F,@0                                              0056  01130000
         L     @1,REDAD                                           0056  01140000
         STC   @F,0(0,@1)                                         0056  01150000
*         RETURN;                       /* GO BACK TO CALLER          * 01160000
         BC    15,@EL01                                           0057  01170000
* /******************************************************************** 01180000
* /* AT THIS ENTRY OF THE READ ROUTINE MEMBER DATA IS READ INTO THE   * 01190000
* /* BUFFER UNTIL THE BUFFER IS FILLED OR UNTIL THE END OF THE MEMBER.* 01200000
* /* ALSO THE NOTE LIST IF ANY IS PLACED INTO THE NOTE LIST AREA.     * 01210000
* /******************************************************************** 01220000
*                                                                       01230000
* IEBRSAM1: ENTRY;                                                      01240000
IEBRSAM1 STM   @E,@C,12(@D)                                       0058  01250000
         BALR  @B,0                                               0058  01260000
         LA    @F,IEBRSAM1-IEBRSAM                                0058  01270000
         SR    @B,@F                                              0058  01280000
         ST    @D,@SAV001+4                                       0058  01290000
         LA    @F,@SAV001                                         0058  01300000
         ST    @F,8(0,@D)                                         0058  01310000
         LR    @D,@F                                              0058  01320000
*                                                                       01330000
*           WSFLAG(5)='1'B;             /* INDICATE READING           * 01340000
@9FB     OI    WSFLAG,B'00001000'                                 0059  01350000
*           SECAV='0'B;                 /* INDIC 2ND BUF NOT AVAIL    * 01360000
         NI    SECAV,B'01111111'                                  0060  01370000
*           FLG2(3)='0'B;               /* ASSURE FLAG INDIC NO MORE    01380000
*                                          TO READ IS OFF             * 01390000
         NI    FLG2,B'11011111'                                   0061  01400000
*                                                                       01410000
*           /********************************************************** 01420000
*           /* TO BE ABLE TO GET THE KEY LENGTH AND THE DCBFDAD FIELD * 01430000
*           /* OF THE INPUT DCB REGISTER 6 MUST CONTAIN THE INPUT     * 01440000
*           /* DCB ADDRESS.                                           * 01450000
*           /********************************************************** 01460000
*                                                                       01470000
*           GENERATE;                                                   01480000
         LA    DCBA,INDCB              ADDRESS OF INPUT DCB             01490000
         DS    0H                                                       01500000
*           FDAD=DCBFDAD;               /* SAVE VALUE OF DCBFDAD FOR    01510000
*                                          THIS MEMBER                * 01520000
         MVC   FDAD(8),DCBFDAD                                    0063  01530000
*           BLKRD=IBLKSIZE +            /* MAXIMUM SIZE OF INPUT BLOCK* 01540000
*                  DCBKEYLE +           /* IS INPUT BLOCKSIZE + KEY   * 01550000
*                   12 +                /* LENGTH + COUNT LENGTH +    * 01560000
*                    8;                 /* RECORD DESCRIPTOR LENGTH   * 01570000
         LA    @F,8                                               0064  01580000
         AH    @F,@D2                                             0064  01590000
         SR    @0,@0                                              0064  01600000
         IC    @0,DCBKEYLE                                        0064  01610000
         AR    @F,@0                                              0064  01620000
         AH    @F,IBLKSIZE                                        0064  01630000
         ST    @F,BLKRD                                           0064  01640000
*                                                                       01650000
*           /********************************************************** 01660000
*           /* NOW THERE IS A NEED TO FIND OUT IF THE OUTPUT DATA     * 01670000
*           /* SET IS TRACK OVERFLOW AS THEN ONLY THE FIRST BUFFER MAY* 01680000
*           /* BE USED.                                               * 01690000
*           /********************************************************** 01700000
*                                                                       01710000
*           GENERATE;                                                   01720000
         LA    DCBA,OUTDCB             DCB OF OUTPUT PDS                01730000
         DS    0H                                                       01740000
*           RECFMO=DCBRECFM;            /* SAVE RECORD FORMAT         * 01750000
         MVC   RECFMO(1),DCBRECFM                                 0066  01760000
*                                                                       01770000
*           /********************************************************** 01780000
*           /* NOW IT IS NECESSARY TO KNOW THE BLOCKSIZE OF THE DATA  * 01790000
*           /* SET TO BE LOADED.                                      * 01800000
*           /********************************************************** 01810000
*                                                                       01820000
*           GENERATE;                                                   01830000
         LA    DCBA,LOADDCB            ADDRESS OF LOAD DCB              01840000
         DS    0H                                                       01850000
*                                                                       01860000
*           /*--------------------------------------------------------* 01870000
*           /* NOW THE BIGGER OF THE MAXIMUM INPUT BLOCK AND THE      * 01880000
*           /* UNLOADED DATA SET'S BLOCKSIZE IS NEEDED TO BE ABLE TO  * 01890000
*           /* DETERMINE WHETHER THE NEXT BLOCK TO BE READ WILL FIT   * 01900000
*           /* INTO THE BUFFER.                                       * 01910000
*           /*--------------------------------------------------------* 01920000
*                                                                       01930000
*           IF BLKRD < DCBBLKSI         /* PDS RECORD LESS THAN         01940000
*                                          UNLOADED DS BLOCKSIZE      * 01950000
*              THEN                     /* YES                        * 01960000
         LH    @F,DCBBLKSI                                        0068  01970000
         C     @F,BLKRD                                           0068  01980000
         BC    12,@9FA                                            0068  01990000
*                  BLKRD=DCBBLKSI;      /* USE UNLOADED DS BLOCKSIZE  * 02000000
         ST    @F,BLKRD                                           0069  02010000
         BC    15,@9F9                                            0070  02020000
*              ELSE;                    /* NO - USE PDS BLOCK LENGTH  * 02030000
@9FA     EQU   *                                                  0070  02040000
*                                                                       02050000
*           /********************************************************** 02060000
*           /* NOW BUFFER DELIMITATIONS HAVE TO BE MADE TO READ IN    * 02070000
*           /* MEMBER DATA.                                           * 02080000
*           /********************************************************** 02090000
*                                                                       02100000
*           /*--------------------------------------------------------* 02110000
*           /* A TEST IS MADE TO SEE IF BOTH BUFFERS ARE AVAILLABLE   * 02120000
*           /* FOR MEMBER DATA OR WHETHER ONE HAS TO BE RESERVED FOR  * 02130000
*           /* FUTURE PROCESSING(REBLOCKING-TRACK OVERFLOW )          * 02140000
*           /*--------------------------------------------------------* 02150000
*                                                                       02160000
*           IF FLG1(3)='0'B & RECFMO(3)='0'B         /* ALL BUF AVAIL * 02170000
*              THEN                     /* YES                        * 02180000
@9F9     TM    FLG1,B'00100000'                                   0071  02190000
         BC    05,@9F8                                            0071  02200000
         TM    RECFMO,B'00100000'                                 0071  02210000
         BC    05,@9F7                                            0071  02220000
*                                                                       02230000
*             /*------------------------------------------------------* 02240000
*             /* BOTH BUFFERS ARE AVAILLABLE,A TEST IS NOW MADE TO SEE* 02250000
*             /* IF THEY ARE CONTIGUOUS IN WHICH CASE THEY CAN BE     * 02260000
*             /* CONSIDERED AS ONE IF NOT THEY HAVE TO BE FILLED      * 02270000
*             /* SEPERATELY                                           * 02280000
*             /*------------------------------------------------------* 02290000
*                                                                       02300000
*             IF FLG1(1)='1'B           /* ARE BUFFERS CONTIGUOUS     * 02310000
*                THEN                   /* NO                         * 02320000
         TM    FLG1,B'10000000'                                   0072  02330000
         BC    12,@9F6                                            0072  02340000
*                                                                       02350000
*               /*----------------------------------------------------* 02360000
*               /* NOW A TEST HAS TO BE MADE TO SEE IF PROCESSING     * 02370000
*               /* ALREADY OCCURS IN THE 2ND BUFFER.                  * 02380000
*               /*----------------------------------------------------* 02390000
*                                                                       02400000
*               IF FLG1(2)='0'B         /* PROCESS IN 2ND BUFFER      * 02410000
*                  THEN                 /* NO                         * 02420000
         TM    FLG1,B'01000000'                                   0073  02430000
         BC    05,@9F5                                            0073  02440000
*                    DO;                /* FILL 1ST BUFFER            * 02450000
*                      BUFEND=ENDFST1;  /* END FOR FILLING DATA       * 02460000
         MVC   BUFEND(4),ENDFST1                                  0075  02470000
*                      SECAV='1'B;      /* INDIC SEC BUFFER AVAILLABLE* 02480000
         OI    SECAV,B'10000000'                                  0076  02490000
         BC    15,@9F4                                            0078  02500000
*                    END;                                               02510000
*                  ELSE                 /* YES- PROCESS IN 2ND        * 02520000
*                      BUFEND=END2ND2;  /* END FOR FILLING DATA       * 02530000
@9F5     MVC   BUFEND(4),END2ND2                                  0078  02540000
*                ELSE                   /* YES- BUFFERS ARE CONTIG    * 02550000
*                    BUFEND=END2ND2;    /* END OF BUFFER AREA IS END    02560000
*                                          OF SECOND BUFFER           * 02570000
         BC    15,@9F3                                            0079  02580000
@9F6     MVC   BUFEND(4),END2ND2                                  0079  02590000
*              ELSE                     /* NO - FILL 1 BUF ONLY       * 02600000
*                  BUFEND=ENDFST1;      /* SET END OF 1ST BUFFER      * 02610000
         BC    15,@9F2                                            0080  02620000
@9F7     EQU   *                                                  0080  02630000
@9F8     MVC   BUFEND(4),ENDFST1                                  0080  02640000
*                                                                       02650000
* /******************************************************************** 02660000
* /* NOW BEFORE READING A BLOCK OF DATA THE READ ADDRESS IS SET TO    * 02670000
* /* EICHT BYTES BEFORE THE BUFFER AREA                               * 02680000
* /******************************************************************** 02690000
*                                                                       02700000
* RSAM1003:  RDNXT=READNEXT-8;          /* PTR TO WHERE TO START READ * 02710000
@9F2     EQU   *                                                  0081  02720000
RSAM1003 L     @F,READNEXT                                        0081  02730000
         SH    @F,@D1                                             0081  02740000
         ST    @F,RDNXT                                           0081  02750000
*         RDNXT=RDNXT&'00FFFFFF'X;  /* CLEAR HIGH ORDER BYTE @ZA13782 * 02760000
         NC    RDNXT(4),@X3                                       0082  02770000
*                                                                       02780000
* /******************************************************************** 02790000
* /* NOW THAT THE BUFFER DELIMITATIONS ARE SET UP, A BLOCK OF DATA    * 02800000
* /* CAN BE READ INTO THE BUFFER                                      * 02810000
* /******************************************************************** 02820000
*                                                                       02830000
* RSAM1006:  CALL READBLK;              /*  GO READ A BLOCK OF DATA   * 02840000
RSAM1006 BAL   @E,READBLK                                         0083  02850000
*                                                                       02860000
*           /*--------------------------------------------------------* 02870000
*           /* A BLOCK OF DATA IS IN THE BUFFER, A TEST HAS TO BE MADE* 02880000
*           /* TO SEE IF THIS MEMBER HAS A NOTE LIST.                 * 02890000
*           /*--------------------------------------------------------* 02900000
*                                                                       02910000
*           IF F(1:3)='111'B            /* IS IT A NOTE LIST          * 02920000
*              THEN                     /* YES                        * 02930000
         L     @1,REDAD                                           0084  02940000
         TM    0(@1),B'11100000'                                  0084  02950000
         BC    12,@9F1                                            0084  02960000
*                DO;                    /* MOVE IT TO NOTE LIST AREA  * 02970000
*                  CNT=1;               /* FIRST BYTE TO MOVE         * 02980000
         LA    @F,1                                               0086  02990000
         STH   @F,CNT                                             0086  03000000
*                  BYTRD=BLKEX - REDAD; /* LENGTH OF NOTE LIST        * 03010000
         L     @F,BLKEX                                           0087  03020000
         S     @F,REDAD                                           0087  03030000
         STH   @F,BYTRD                                           0087  03040000
*                                                                       03050000
* /******************************************************************** 03060000
* /* AS ONLY 256 BYTES CAN BE MOVED IN ONE INSTRUCTION AND AS THE     * 03070000
* /* NOTE LIST CAN BE LONGER A LOOP IS MADE TO MOVE A MAXIMUM OF      * 03080000
* /* 256 BYTES AT A TIME WHENEVER THIS IS NECESSARY                   * 03090000
* /******************************************************************** 03100000
*                                                                       03110000
* RSAM1007:;                             /* LOOP TO MOVE NOTE LIST    * 03120000
*             /*------------------------------------------------------* 03130000
*             /* TEST WETHER THE NUMBER OF BYTES TO MOVE IS BIGGER    * 03140000
*             /* THAN 256                                             * 03150000
*             /*------------------------------------------------------* 03160000
*             IF BYTRD > 256            /* TOO MUCH FOR ONE MOVE      * 03170000
*               THEN                    /* YES                        * 03180000
RSAM1007 LA    @F,256                                             0089  03190000
         CH    @F,BYTRD                                           0089  03200000
         BC    10,@9F0                                            0089  03210000
*                  DO;                  /* MOVE 256 AT A TIME         * 03220000
*                    NOTE(CNT:CNT+256-1)=       /* NOTE LIST WORK AREA* 03230000
*                       INAREA(CNT:CNT+256-1);       /* BUFFER AREA   * 03240000
         LH    @1,CNT                                             0091  03250000
         L     @5,REDAD                                           0091  03260000
         LA    @E,0(@1,@5)                                        0091  03270000
         BCTR  @E,0                                               0091  03280000
         LH    @7,@D3                                             0091  03290000
         AH    @7,@D4                                             0091  03300000
         AH    @7,CNT                                             0091  03310000
         SR    @7,@1                                              0091  03320000
         L     @C,ADNL                                            0091  03330000
         LA    @A,0(@1,@C)                                        0091  03340000
         BCTR  @A,0                                               0091  03350000
         EX    @7,@MVC                                            0091  03360000
*                    CNT=CNT + 256;     /* UPDATE MOVE ADDRESS        * 03370000
         LA    @F,256                                             0092  03380000
         AH    @F,CNT                                             0092  03390000
         STH   @F,CNT                                             0092  03400000
*                    BYTRD=BYTRD - 256;     /* BYTES LEFT TO MOVE     * 03410000
         LH    @F,BYTRD                                           0093  03420000
         SH    @F,@D4                                             0093  03430000
         STH   @F,BYTRD                                           0093  03440000
*                    GO TO RSAM1007;    /* SEE IF MORE TO MOVE        * 03450000
         BC    15,RSAM1007                                        0094  03460000
*                  END;                                                 03470000
*               ELSE;                   /* NO LESS THAN 256 TO MOVE   * 03480000
@9F0     EQU   *                                                  0096  03490000
*                  NOTE(CNT:CNT+BYTRD-1)=  /* NOTE LIST WORK AREA     * 03500000
*                  INAREA(CNT:CNT+BYTRD-1);  /* NOTE LIST IN BUFFER   * 03510000
@9EF     LH    @1,CNT                                             0097  03520000
         L     @5,REDAD                                           0097  03530000
         LA    @E,0(@1,@5)                                        0097  03540000
         BCTR  @E,0                                               0097  03550000
         LH    @7,@D3                                             0097  03560000
         AH    @7,BYTRD                                           0097  03570000
         AH    @7,CNT                                             0097  03580000
         SR    @7,@1                                              0097  03590000
         L     @C,ADNL                                            0097  03600000
         LA    @A,0(@1,@C)                                        0097  03610000
         BCTR  @A,0                                               0097  03620000
         EX    @7,@MVC                                            0097  03630000
*                  GO TO RSAM1003;      /* GO TO READ THE MEMBER DATA * 03640000
         BC    15,RSAM1003                                        0098  03650000
*                END;                                                   03660000
*              ELSE;                    /* NO - IT IS MEMBER DATA     * 03670000
@9F1     EQU   *                                                  0100  03680000
*                                                                       03690000
*           /*--------------------------------------------------------* 03700000
*           /* NOW THAT A BLOCK OF DATA HAS BEEN READ INTO THE BUFFER * 03710000
*           /* A TEST IS MADE TO SEE IF IT IS THE MEMBER THAT IS      * 03720000
*           /* NEEDED BY COMPARING THE COUNT FIELDS.                  * 03730000
*           /*--------------------------------------------------------* 03740000
*                                                                       03750000
*           IF MBBCCHHR <= FDAD         /* IS THIS THE WANTED DATA    * 03760000
*              THEN                     /* NO                         * 03770000
@9EE     L     @1,REDAD                                           0101  03780000
         CLC   1(8,@1),FDAD                                       0101  03790000
*                  GO TO RSAM1003;      /* GO READ NEXT DATA BLOCK    * 03800000
         BC    12,RSAM1003                                        0102  03810000
*              ELSE                     /* YES - WANTED MEMBER DATA   * 03820000
*                  GO TO RSAM1012;      /* GO ANALYSE MEMBER DATA     * 03830000
         BC    15,RSAM1012                                        0103  03840000
*                                                                       03850000
* /******************************************************************** 03860000
* /* A NEW BLOCK OF DATA HAS TO BE READ AT THIS POINT                 * 03870000
* /******************************************************************** 03880000
*                                                                       03890000
* RSAM1008:;                                                            03900000
*           CALL READBLK;               /* READ A BLOCK OF DATA       * 03910000
RSAM1008 BAL   @E,READBLK                                         0105  03920000
*                                                                       03930000
*                                                                       03940000
* /******************************************************************** 03950000
* /* MEMBER DATA IS NOW IN THE BUFFER,A TEST IS MADE TO SEE IF THE    * 03960000
* /* END OF THE MEMBER HAS BEEN REACHED                               * 03970000
* /******************************************************************** 03980000
* RSAM1012:   IF DATA='0000'X           /* IS DATA LENTHT ZERO        * 03990000
*                THEN                   /* YES                        * 04000000
RSAM1012 L     @1,REDAD                                           0106  04010000
         CLC   10(2,@1),@X4                                       0106  04020000
         BC    07,@9ED                                            0106  04030000
*                  DO;                                                  04040000
*                    FLG2(3)='1'B;      /* INDIC NO MORE TO READ      * 04050000
         OI    FLG2,B'00100000'                                   0108  04060000
         BC    15,@9EC                                            0110  04070000
*                  END;                                                 04080000
*                ELSE                   /* NO NOT END OF DATA         * 04090000
*                  DO;                  /* GET LENGTH OF THIS RECORD  * 04100000
*                    AWRK=KEY + DATA +  /* LENGHT OF THIS RECORD IS   * 04110000
*                            12;        /* KEY + DATA + FIXED LENGHT  * 04120000
@9ED     LA    @F,12                                              0111  04130000
         L     @1,REDAD                                           0111  04140000
         MVC   @TEMP2+2(2),10(@1)                                 0111  04150000
         A     @F,@TEMP2                                          0111  04160000
         SR    @0,@0                                              0111  04170000
         IC    @0,9(0,@1)                                         0111  04180000
         AR    @F,@0                                              0111  04190000
         STH   @F,AWRK                                            0111  04200000
*                                                                       04210000
*               /*----------------------------------------------------* 04220000
*               /* NOW A TEST TO SEE IF MORE DATA RECORDS HAVE BEEN   * 04230000
*               /* READ HAS TO BE MADE.                               * 04240000
*               /*----------------------------------------------------* 04250000
*                                                                       04260000
*               IF REDAD+AWRK < BLKEX   /* HAS MORE DATA BEEN READ    * 04270000
*                  THEN                 /* YES                        * 04280000
         A     @F,REDAD                                           0112  04290000
         C     @F,BLKEX                                           0112  04300000
         BC    10,@9EB                                            0112  04310000
*                    DO;                                                04320000
*                      REDAD=REDAD+AWRK; /* POINT TO NEXT DATA RECORD * 04330000
         LH    @F,AWRK                                            0114  04340000
         A     @F,REDAD                                           0114  04350000
         ST    @F,REDAD                                           0114  04360000
*                      GO TO RSAM1012;  /* SEE IF THIS ONE IS EOD     * 04370000
         BC    15,RSAM1012                                        0115  04380000
*                    END;                                               04390000
*                  ELSE                 /* NO                         * 04400000
*                    DO;                /* NEED TO READ MORE DATA     * 04410000
*                      RDEND=RDNXT +    /* END OF NEXT POSSIBLE BLOCK * 04420000
*                          BLKRD;       /* MAXIMUM SIZE OF BLOCK      * 04430000
@9EB     L     @F,BLKRD                                           0118  04440000
         A     @F,RDNXT                                           0118  04450000
         ST    @F,RDEND                                           0118  04460000
*                                                                       04470000
*                 /*--------------------------------------------------* 04480000
*                 /* NOW A TEST HAS TO BE MADE TO SEE IF THE NEXT     * 04490000
*                 /* BLOCK WHEN READ WILL FIT INTO THE BUFFER.        * 04500000
*                 /*--------------------------------------------------* 04510000
*                                                                       04520000
*                 IF RDEND <= BUFEND    /* NEXT BLOCK FIT INTO BUFFER * 04530000
*                    THEN               /* YES                        * 04540000
         L     @F,BUFEND                                          0119  04550000
         C     @F,RDEND                                           0119  04560000
*                        GO TO RSAM1008;/* GO AND READ IT             * 04570000
         BC    10,RSAM1008                                        0120  04580000
*                    ELSE               /* NO                         * 04590000
*                      DO;              /* IT DOES NOT FIT            * 04600000
*                                                                       04610000
*                   /*------------------------------------------------* 04620000
*                   /* NOW THAT THERE IS NO MORE SPACE IN THIS BUFFER * 04630000
*                   /* A TEST IS MADE TO SEE IF THE SECOND BUF IS     * 04640000
*                   /* STILL AVAILLABLE AND IF IT MAY BE USED         * 04650000
*                   /*------------------------------------------------* 04660000
*                                                                       04670000
*                   IF SECAV='1'B       /* 2ND BUFFER STILL AVAILLABLE* 04680000
*                      THEN             /* YES                        * 04690000
         TM    SECAV,B'10000000'                                  0122  04700000
         BC    12,@9E9                                            0122  04710000
*                        DO;            /* SET APPROPRIATE ADDRESSES  * 04720000
*                          RDNXT=BEGFST2-8;   /* BEGIN OF 2ND BUFFER  * 04730000
         L     @F,BEGFST2                                         0124  04740000
         SH    @F,@D1                                             0124  04750000
         ST    @F,RDNXT                                           0124  04760000
*                          BUFEND = END2ND2; /* END OF 2ND BUFFER     * 04770000
         MVC   BUFEND(4),END2ND2                                  0125  04780000
*                          F= '40'X;    /* INDIC LAST RECORD IN BUFFER* 04790000
         L     @1,REDAD                                           0126  04800000
         MVI   0(@1),X'40'                                        0126  04810000
*                          FLG1(2)='1'B;   /* INDIC PROCESS IN 2ND BUF* 04820000
         OI    FLG1,B'01000000'                                   0127  04830000
*                          SECAV='0'B;  /* 2ND BUF NO MORE AVAILLABLE * 04840000
         NI    SECAV,B'01111111'                                  0128  04850000
*                          GO TO RSAM1008; /* GO FILL SECOND BUFFER   * 04860000
         BC    15,RSAM1008                                        0129  04870000
*                        END;                                           04880000
*                      ELSE;            /* NO - 2ND BUFFER FULL       * 04890000
@9E9     EQU   *                                                  0131  04900000
*                      END;                                             04910000
@9E8     EQU   *                                                  0132  04920000
*                    END;                                               04930000
*                  END;                                                 04940000
@9EA     EQU   *                                                  0134  04950000
*                     F='40'X + '80'X;     /* INDIC LAST RECORD IN ANY  04960000
*                                             BUFFER                  * 04970000
@9EC     LA    @F,X'80'                                           0135  04980000
         LA    @0,X'40'                                           0135  04990000
         AR    @F,@0                                              0135  05000000
         L     @1,REDAD                                           0135  05010000
         STC   @F,0(0,@1)                                         0135  05020000
*                     RETURN;           /* GO BACK TO CALLER          * 05030000
* /******************************************************************** 05040000
* /* THIS NESTED PROCEDURE READS A BLOCK OF DATA, GIVES A POINTER     * 05050000
* /* TO THE END OF DATA READ, AND TELLS HOW MANY BYTES HAVE BEEN      * 05060000
* /* READ                                                             * 05070000
* /******************************************************************** 05080000
*                                                                       05090000
*                                                                       05100000
* READBLK:  PROCEDURE;                                                  05110000
@EL01    L     @D,4(0,@D)                                         0137  05120000
         LM    @E,@C,12(@D)                                       0137  05130000
         BCR   15,@E                                              0137  05140000
READBLK  STM   @E,@C,12(@D)                                       0137  05150000
         ST    @D,@SAV002+4                                       0137  05160000
         LA    @F,@SAV002                                         0137  05170000
         ST    @F,8(0,@D)                                         0137  05180000
         LR    @D,@F                                              0137  05190000
*                                                                       05200000
*           RESTRICT(4);                /* RESTRICT THIS REGISTER FOR   05210000
*                                          ADDRESSABILITY TO IEBMCA   * 05220000
*           RESTRICT(6);                /* HOLDS DCB ADDRESS          * 05230000
*           REDAD=RDNXT+8;              /* POINT TO 1ST RECORD IN       05240000
*                                          BLOCK READ                 * 05250000
         LA    @F,8                                               0140  05260000
         A     @F,RDNXT                                           0140  05270000
         ST    @F,REDAD                                           0140  05280000
*                                                                       05290000
* /******************************************************************** 05300000
* /* AT THIS POINT THE RECORD DESCRIPTOR WORD AREA IS SAVED AND A     * 05310000
* /* BLOCK OF DATA IS READ. IF THE BLOCK READ WAS A SEGMENT OF A PDS  * 05320000
* /* RECORD CONTROL COMES BACK HERE TO READ THE OTHER SEGMENTS.       * 05330000
* /******************************************************************** 05340000
* READ0006:;                                                            05350000
*           RECDESAV=VFIELD;            /* SAVE RECORD CONTROL FIELD  * 05360000
READ0006 L     @1,RDNXT                                           0142  05370000
         MVC   RECDESAV(8),0(@1)                                  0142  05380000
*                                                                       05390000
*           /********************************************************** 05400000
*           /* THE FOLLOWING GENERATE READS 1 BLOCK OF DATA AT A PLACE* 05410000
*           /* IN THE BUFFER POINTED TO BY RDNXT                      * 05420000
*           /********************************************************** 05430000
*                                                                       05440000
*           GENERATE;                                                   05450000
         L     RDA,RDNXT               GET ADDR WHERE TO READ IN        05460000
         READ  DECB,SF,LOADDCB,(RDA),MF=E READ 1 BLOCK                  05470000
         CHECK DECB                    CHECK FOR SUCCESSFULL READ       05480000
         DS    0H                                                       05490000
*                                                                       05500000
*           BLKEX=RDNXT + BLLA;         /* END OF BLOCK JUST READ     * 05510000
         L     @1,RDNXT                                           0144  05520000
         MVC   @TEMP2+2(2),0(@1)                                  0144  05530000
         L     @F,@TEMP2                                          0144  05540000
         A     @F,RDNXT                                           0144  05550000
         ST    @F,BLKEX                                           0144  05560000
*                                                                       05570000
*           /*--------------------------------------------------------* 05580000
*           /* A TEST IS NOW MADE TO SEE IF THE BLOCK JUST READ HOLDS * 05590000
*           /* A WHOLE PDS RECORD OR ONLY A SEGMENT OF A PDS RECORD   * 05600000
*           /* IN WHICH CASE THE OTHER SEGMENTS HAVE TO BE READ       * 05610000
*           /*--------------------------------------------------------* 05620000
*           IF SLLB ¬= '0000'X          /* NORMAL BLOCK               * 05630000
*              THEN                     /* NO - SEGMENTED             * 05640000
         CLC   6(2,@1),@X4                                        0145  05650000
         BC    08,@9E7                                            0145  05660000
*                                                                       05670000
*             /*------------------------------------------------------* 05680000
*             /* NOW SEGMENTS OF PDS RECORDS ARE BEING READ, A TEST IS* 05690000
*             /* MADE TO SEE IF THE LAST SEGMENT HAS BEEN READ.       * 05700000
*             /*------------------------------------------------------* 05710000
*             IF SLLB ¬= '8000'X        /* LAST SEGMENT OF DATA BLOCK * 05720000
*                THEN                   /* NO                         * 05730000
         CLC   6(2,@1),@X8                                        0146  05740000
         BC    08,@9E6                                            0146  05750000
*                  DO;                  /* READ OTHER SEGMENTS        * 05760000
*                    VFIELD=RECDESAV;   /* RESET CONTROL FIELD AREA   * 05770000
         MVC   0(8,@1),RECDESAV                                   0148  05780000
*                    RDNXT=BLKEX - 8;   /* UPDATE READ ADDRESS        * 05790000
         L     @F,BLKEX                                           0149  05800000
         SH    @F,@D1                                             0149  05810000
         ST    @F,RDNXT                                           0149  05820000
*                    GO TO READ0006;    /* READ NEXT SEGMENT          * 05830000
         BC    15,READ0006                                        0150  05840000
*                  END;                                                 05850000
*                ELSE;                  /* YES WHOLE BLOCK READ       * 05860000
@9E6     EQU   *                                                  0152  05870000
*                    VFIELD=RECDESAV;   /* RESET CONTROL FIELD AREA   * 05880000
@9E5     EQU   *                                                  0153  05890000
@9E7     L     @1,RDNXT                                           0153  05900000
         MVC   0(8,@1),RECDESAV                                   0153  05910000
*                    RDNXT=BLKEX - 8;   /* SET ADDR FOR NEXT READ     * 05920000
         L     @F,BLKEX                                           0154  05930000
         SH    @F,@D1                                             0154  05940000
         ST    @F,RDNXT                                           0154  05950000
*           END READBLK;                                                05960000
         BC    15,@EL01                                           0155  05970000
*         END IEBRSAM;                                                  05980000
@DATA1   EQU   *                                                        05990000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           06000000
@1       EQU   01                                                       06010000
@2       EQU   02                                                       06020000
@3       EQU   03                                                       06030000
@4       EQU   04                                                       06040000
@5       EQU   05                                                       06050000
@6       EQU   06                                                       06060000
@7       EQU   07                                                       06070000
@8       EQU   08                                                       06080000
@9       EQU   09                                                       06090000
@A       EQU   10                                                       06100000
@B       EQU   11                                                       06110000
@C       EQU   12                                                       06120000
@D       EQU   13                                                       06130000
@E       EQU   14                                                       06140000
@F       EQU   15                                                       06150000
@D1      DC    H'8'                                                     06160000
@D2      DC    H'12'                                                    06170000
@D3      DC    H'-1'                                                    06180000
@D4      DC    H'256'                                                   06190000
@MVC     MVC   0(1,@A),0(@E)                                            06200000
         DS    0F                                                       06210000
@X3      DC    X'00FFFFFF'                                              06220000
@X4      DC    X'0000'                                                  06230000
@X8      DC    X'8000'                                                  06240000
         DS    0D                                                       06250000
@DATA    EQU   *                                                        06260000
@SAV001  EQU   @DATA+00000000      72 BYTE(S) ON WORD                   06270000
REDAD    EQU   @DATA+00000072      FULLWORD POINTER                     06280000
BUFEND   EQU   @DATA+00000076      FULLWORD POINTER                     06290000
BLKRD    EQU   @DATA+00000080      FULLWORD INTEGER                     06300000
SECAV    EQU   @DATA+00000084      1 BIT(S) ON BYTE                     06310000
FDAD     EQU   @DATA+00000085      8 BYTE(S)                            06320000
AWRK     EQU   @DATA+00000094      HALFWORD INTEGER                     06330000
BLKEX    EQU   @DATA+00000096      FULLWORD POINTER                     06340000
RDEND    EQU   @DATA+00000100      FULLWORD POINTER                     06350000
RDNXT    EQU   @DATA+00000104      FULLWORD POINTER                     06360000
INAREA   EQU   00000000            12 BYTE(S)                           06370000
F        EQU   INAREA+00000000     8 BIT(S)                             06380000
MBBCCHHR EQU   INAREA+00000001     8 BYTE(S)                            06390000
KDD      EQU   INAREA+00000009     3 BYTE(S)                            06400000
KEY      EQU   INAREA+00000009     8 BIT(S)                             06410000
DATA     EQU   INAREA+00000010     16 BIT(S)                            06420000
BYTRD    EQU   @DATA+00000108      HALFWORD INTEGER                     06430000
CNT      EQU   @DATA+00000110      HALFWORD INTEGER                     06440000
VFIELD   EQU   00000000            8 BYTE(S)                            06450000
BLLA     EQU   VFIELD+00000000     2 BYTE(S)                            06460000
BLLB     EQU   VFIELD+00000002     2 BYTE(S)                            06470000
SLLA     EQU   VFIELD+00000004     2 BYTE(S)                            06480000
SLLB     EQU   VFIELD+00000006     2 BYTE(S)                            06490000
RECDESAV EQU   @DATA+00000112      8 BYTE(S)                            06500000
NOTE     EQU   00000000            4 BYTE(S)                            06510000
RECFMO   EQU   @DATA+00000120      8 BIT(S) ON BYTE                     06520000
         ENTRY IEBRSAM1                                                 06530000
@SAV002  EQU   @DATA+00000124      72 BYTE(S) ON WORD                   06540000
         DS    00000196C                                                06550000
@TEMPS   DS    0F                                                       06560000
@TEMP2   DC    F'0'                                                     06570000
DCBA     EQU   6                       ADDRESSABILITY TO INP DCB        06580000
MCABASE  EQU   4                       USED AS BASE REG FOR IEBMCA      06590000
RDA      EQU   6                       ADDR TO READ FROM                06600000
         READ  DECB,SF,MF=L                                             06610000
         DS    0F                                                       06620000
PATCHLN  EQU   (*-IEBRSAM)/20          5 PERCENT OF MODULE LENGHT       06630000
PATCH    DC    XL(PATCHLN)'00'         5 PERCENT PATCH AREA             06640000
IEBMCA   DSECT                         COMMON AREA DSECT                06650000
         IEBMCA                        MACRO FOR COMMON AREA DATA       06660000
         DCBD  DSORG=PS                                                 06670000
@DATEND  EQU   *                                                        06680000
@9F3     EQU   @9F2                                                     06690000
@EL02    EQU   @EL01                                                    06700000
@9F4     EQU   @9F3                                                     06710000
         END   IEBRSAM                                                  06720000
./  ADD  SSI=72900018,NAME=IEBSCN
SCAN     TITLE 'IEBCOPY  CONTROL CARD SCAN- IEBSCN'                     00080019
IEBSCN   CSECT                                                          00160019
*C946800                                                         A41780 00170021
*A481000-481080                                                  A41802 00170100
*C464200                                                         A45150 00180021
*A464220-464260,466100                                           A45150 00190021
*D464700                                                         A45150 00192021
*C481700                                                         A45174 00194022
*A481720-481780                                                  A45174 00196022
*A114500-115100,639900-640900,649800-749300,770100-770400        A48742 00196422
*D145060-145260                                                  A48742 00196522
*C768800                                                         A48742 00196822
*A474100                                                         A45185 00198022
*A642600-642632,064620                                           A44144 00198122
*C642520,632500,754910                                           A44144 00198222
*D754850-754880,754970-755030                                    A44144 00198322
*A116500-116700                                                  A48800 00198722
*C471800,472200,473600,498690                                    A48799 00199122
*D366860-367040                                                  A48799 00199222
*A581500-582200,366860,471900-472120                             A48799 00199522
*A041300,374120-374140                                          OY01183 00204502
*A222050,374925,822450-822800,852050                           @ZA07365 00204699
*C822400,823200,852000                                         @ZA07365 00204799
*A487100,487120                         (ORG)@XA16031/@YA14042/@ZA13792 00204899
**********************************************************************  00210022
         ENTRY IEBSCF                                                   00220022
         SPACE 1                                                        00240019
*                                                                     * 00260019
*TITLE- IEBCOPY CONTROL CARD SCAN AND ANALYSIS CSECT- IEBSCN          * 00280019
*                                                                     * 00320019
*STATUS- CHANGE LEVEL 001                                             * 00400019
*                                                                     * 00480019
*FUNCTION/OPERATION-  THIS MODULE SCANS CONTROL CARDS AND GIVES       * 00560019
*       MESSAGES FOR SYNTAX OR SEQUENCE ERRORS. IT BUILDS AN INDD     * 00640019
*       TABLE OF DD NAMES OF INPUT DATA SETS WHICH CONTAIN MEMBERS    * 00720019
*       TO BE COPIED. IT BUILDS AN SE TABLE OF MEMBER NAMES TO BE     * 00800019
*       SELECTED OR EXCLUDED IN THE COPY. IT STORES THE NAME OF       * 00880019
*       THE OUTPUT DD STATEMENT IN BUFFER 'OUTNAME'.                  * 00960019
*                                                                     * 01040019
*ENTRY POINTS- ENTERED AT IEBSCN.                                     * 01120019
*        ENTERED AT IEBSEF ON EOF ON SYSIN                            * 01140019
*                                                                     * 01200019
*INPUT- SYSIN WHICH CONSISTS OF CONTROL STATEMENTS.                   * 01280019
*                                                                     * 01360019
*OUTPUT- SYSPRINT WHICH CONTAINS THE DIAGNOSTIC MESSAGES AND THE      * 01440019
*        CONTENTS OF SYSIN                                            * 01520019
*                                                                     * 01600019
*EXITS-  ERROR- IF AN ERROR OCCURS, A CODE IS STORED, A MESSAGE IS    * 01680019
*        GIVEN TO THE USER EXPLAINING THE ERROR CONDITION AND A       * 01760019
*        RETURN TO THE CALLING PROGRAM IS GIVEN.                      * 01840019
*                                                                     * 02240019
*EXTERNAL ROUTINES- READ CARD (GET), PRINT CARD OR ERROR MESSAGE (PUT)* 02320019
*                                                                     * 02400019
*TABLES/WORK AREAS-                                                   * 02480019
*      -KEYTAB-    LIST OF VALID KEYWORDS                             * 02560019
*      -COMDTABL-  LIST OF VALID COMMAND WORDS                        * 02640019
*      -CCIMAGE-   BUFFER CONTAINING CONTROL CARD IMAGE               * 02720019
*      -INDD TABLE-POINTED TO BY INBEGIN                              * 02800019
*      -SE TABLE-  POINTED TO BY SEBEGIN                              * 02880019
*      -CTAD-      POINTER TO CONTROL TABLE BUILT WHEN SELECTIVE COPY * 02960019
*      -PARMSWCH-  INTERNAL SCAN SWITCHES                             * 03040019
*      -CCSWITCH-  EXTERNAL SCAN SWITCHES                             * 03120019
*      -COMDCDSW-  EXTERNAL SCAN SWITCHES                             * 03200019
*      -CPARAMSW-  INTERNAL SCAN SWITCHES                             * 03280019
*      -SV2-       REGISTER SAVE AREA                                 * 03360019
*                                                                     * 03440019
*ATTRIBUTES- SERIAL REUSABLE                                          * 03520019
*                                                                     * 03600019
         EJECT                                                          03680019
         SPACE 1                                                        03740019
*                                                                     * 03760019
*                    SCAN ROUTINE CONSTANTS                           * 03840019
*                                                                     * 03920019
ANAT     EQU   C'@'                    NATIONAL SYMBOL- OKAY IN MEMBER  03960019
APOUND   EQU   C'#'                    NATIONAL SYMBOL- OKAY IN MEMBER  04000019
ADOLLAR  EQU   C'$'                    NATIONAL SYMBOL- OKAY IN MEMBER  04040019
AC       EQU   C'C'                                                     04080019
ANUNDRSC EQU   C'_'                                             OY01183 04120002
ANA      EQU   X'C0'                   START OF VALID CHARACTER         04160019
EQUAL    EQU   C'='                    HEX 'EQUAL'                      04240019
COMMA    EQU   C','                    HEX 'COMMA'                      04320019
BLANKCOL EQU   C' '                    HEX 'BLANK'                      04400019
PARENLFT EQU   C'('                    LEFT PARENTHESIS                 04480019
PARENRGT EQU   C')'                    RIGHT PARENTHESIS                04560019
CRESET0  EQU   X'00'                   RESETS SWITCHES                  04640019
         SPACE 1                                                        04720019
*                                                                     * 04800019
*                      SYMBOLIC REGISTER FOR SCAN                     * 04880019
         SPACE 1                                                        04960019
LENGTH   EQU   9                       LENGTH OF PARAMETER REGISTER 9   05040019
SCANADR  EQU   1                       ADDRESS OF PARAMETER REGISTER 1  05120019
GR0      EQU   0                                                        05200019
GR1      EQU   1                                                        05280019
GR2      EQU   2                                                        05360019
GR3      EQU   3                                                        05440019
GR4      EQU   4                       COMMUNICATION AREA POINTER       05520019
GR5      EQU   5                                                        05600019
GR6      EQU   6                                                        05680019
GR7      EQU   7                                                        05760019
GR8      EQU   8                                                        05840019
GR9      EQU   9                                                        05920019
GR10     EQU   10                                                       06000019
GR11     EQU   11                                                       06080019
GR12     EQU   12                      REGISTER USED FOR BASE ADDRESS   06160019
GR13     EQU   13                                                       06240019
GR14     EQU   14                                                       06320019
GR15     EQU   15                                                       06400019
FF       EQU   X'FF'              ALL BITS ON                           06403019
LEN8     EQU   8                  LENGTH OF COMMAND OR KEYWORD          06406019
LEN12    EQU   12                 LENGTH OF ENTRY                       06409019
SAV4     EQU   4                  OLD SAVE AREA                         06412019
SAV8     EQU   8                  SAVE                                  06415019
TABLE0   EQU   0                  ZERO TABLE DISPLACEMENT               06418019
INDD1    EQU   1                  ENTRIES IN INDD TABLE                 06421019
LEN10    EQU   10                 LENGTH OF  10                         06424019
LEN2     EQU   2                  LENGTH OF  2                          06427019
LEN4     EQU   4                  LENGTH OF  4                          06430019
COL71    EQU   71                 COLUMN 72                             06433019
COL70    EQU   70                 COLUMN 71                             06436019
SCAN0    EQU   0                  COLUMN BEING SCANNED                  06439019
UP1      EQU   1                  COLUMN UPDATE                         06442019
PARCNT   EQU   X'01'              PARENTHESIS COUNT                     06445019
MS7      EQU   7                  MASK OF 7                             06448019
MS5      EQU   5                  MASK OF 5                             06451019
EX       EQU   C'E'               E FOR EXCLUDE                         06454019
IN       EQU   C'I'               I FOR INCLUDE                         06457019
COMPCD   EQU   C'4'               COMPLETION CODE                       06460019
COMPCDE  EQU   C'8'               COMPLETION CODE                A44144 06462022
MS8      EQU   8                  MASK OF 8                             06463019
LEN3     EQU   3                  LENGTH OF 3                           06466019
MS2      EQU   2                  MASK OF 2                             06469019
         EJECT                                                          06480019
         SAVE  (14,12),,*                                               06560019
*                                                                       06640019
*                    BASE ADDRESS REGISTER GR12-- COMMUNICATION AREA 4  06720019
*                                                                       06800019
         BALR  GR12,GR0           ESTABLISH ADDRESSABILITY              06880019
         USING NEXT,GR12                                                06960019
         USING IEBMCA,4                                                 07040019
         SPACE 1                                                        07120019
NEXT     EQU   *                                                        07200019
         ST    GR13,SV2+SAV4      SAVE POINTER TO OLD SAVE AREA         07300019
         LA    GR15,SV2                NEW SAVE AREA THIS CSECT         07440019
         ST    GR15,SAV8(GR13)    POINTER TO NEW SAVE AREA IN OLD       07540019
         LR    GR13,GR15               POINTER TO THIS CSECT SAVE AREA  07680019
         SPACE 1                                                        07760019
         TM    CCSWITCH,SYSINEOF       END OF FILE ON LAST READ         10880019
         BO    TERMS              YES- TERMINATE JOB-- SYSIN DONE       10930019
         TM    PARMSWCH,FLUSHSW        FLUSHING                         10980019
         BO    IGNORE             YES- GET NEXT CARD                    11010019
         TM    CCSWITCH,IEBCOPYC       HAVE IEBCOPY CONTROL CARDS       11040019
         BO    SCANERRM           YES- MIXED CODES                      11100019
         NI    COMDCDSW,FF-SELECTSC-EXCLUDES-MEMBRCD1 RESET SWITCHES    11160019
         B     TOSCAN                  CONTINUE                         11240019
         SPACE 1                                                        11340019
IGNORE   EQU   *                                                        11440019
         TM    CPARAMSW,COL72BLK       IS THIS CARD CONTINUED    A48742 11450022
         BO    IGNRENXT                NO                        A48742 11460022
         NI    SCANSWCH,FF-NOCMMEXP    RESET BYPASS SCAN SWITCH  A48742 11470022
         B     IGNOREON                AND CONTINUE              A48742 11480022
IGNRENXT EQU   *                                                 A48742 11490022
         OI    SCANSWCH,NOCMMEXP       SET BYPASS SCAN SWITCH    A48742 11500022
IGNOREON EQU   *                                                 A48742 11510022
         MVI   COMDCDSW,CRESET0                                         11520019
         MVI   CCDELIM2,CRESET0                                         11600019
         TM    CCSWITCH,CARDPRTD  WAS THE CARD PRINTED           A48800 11650022
         BO    GOONSC             YES                            A48800 11660022
         BAL   GR9,PRNTCRD        NO, PRINT THE CARD             A48800 11670022
         SPACE 1                                                        11680019
GOONSC   EQU   *                                                        11760019
         MVI   CCSWITCH,CRESET0        CLEAR SWITCHES FIRST TIME THRU   11840019
GOONS    EQU   *                                                        11920019
         MVI   CPARAMSW,READ1          FORCE READ FIRST CONTROL CARD    12000019
         SPACE 1                                                        12080019
TOSCAN   EQU   *                                                        12160019
         BAL   GR14,RDCARD             GO TO CONTROL CARD SCAN          12240019
RETRTOSC EQU   *                                                        12280019
         L     LENGTH,CSTOREG          LENGTH OF PARAMETER              12320019
         L     SCANADR,CSTOREG+SAV4 START OF PARAMETER                  12400019
         LTR   LENGTH,LENGTH           IS SCAN LENGTH ZERO              12480019
         BZ    BADPARM                 BAD PARAMETER                    12560019
         TM    CCSWITCH,COMDNOW        IS COMMAND SWITCH ON             12640019
         BO    OPRLUP             YES- CHECK COMMAND WORDS              12720019
*                                                                     * 12800019
*   KEYWORD LOOKUP ROUTINE                                              12880019
         LA    GR5,KEYTAB              START OF KEY WORD TABLE          12960019
         LA    GR7,KEYEND              END OF KEY WORD TABLE            13040019
         B     SCANTBL                 SEARCH FOR KEY WORD              13120019
         SPACE 1                                                        13200019
*   COMMAND WORD LOOKUP TABLE                                           13280019
OPRLUP   LA    GR5,COMDTABL            START OF COMMAND TABLE           13360019
         LA    GR7,COMDEND             END OF COMMAND TABLE             13440019
SCANTBL  EQU   *                                                        13520019
         LA    GR6,LEN8           MAXIMUM LENGTH OF KEYWORD OR COMMAND  13600019
         CR    LENGTH,GR6              TEST IF LENGTH EXCEEDS 8         13680019
         BH    PRTBAD                  PRINT BAD CARD                   13760019
         LA    GR6,LEN12          INCREMENT VALUE- 12 BYTE ENTRIES      13840019
         MVC   SARG(LEN8),BLANKS8 MOVE BLANKS TO SEARCH ARGUMENT        13920019
         BCTR  LENGTH,GR0         DECREMENT FOR EXECUTE COUNT           14000019
         EX    LENGTH,OPRLUP3          MOVE PARAMETER TO 'SARG'         14080019
OPRCMP   CLC   SARG(LEN8),TABLE0(GR5) TEST IF SEARCH ARGUMENT IN TABLE  14160019
         BNE   OPRLUP2                 NO- CONTINUE SCAN OF TABLE       14240019
         LA    GR5,LEN8(GR5)      ENTRY ADDRESS OF ROUTINE              14320019
         BR    GR5                     ENTER PROPER ROUTINE             14400019
OPRLUP2  BXLE  GR5,GR6,OPRCMP          LOOP TO CONTINUE SCAN            14480019
PRTBAD   EQU   *                                                        14500019
         LA    GR2,INALCNTR            INVALID COMMAND OR KEYWORD       14560019
         B     GIVESCNE           PRT CARD, SET RC TO 4, WRT MSG        14860019
         EJECT                                                          15200019
*     COMMAND LOOKUP TABLE                                              15280019
* FORMAT OF TABLE -                                                     15300019
*     1) KEYWORD OR ABBREVIATION (ALWAYS AN 8-BYTE 'DC')                15320019
*     2) BRANCH TO ANALYZER SUBROUTINE                                  15340019
COMDTABL DS    0F                      START OF VALID COMMAND TABLE     15360019
         DC    C'COPY    '        KEYWORD                               15420019
         B     CHKCOPY            BRANCH TO ANALYZER                    15480019
         DC    C'C       '        ABBREVIATION                          15540019
         B     CHKCOPY            BRANCH TO ANALYZER                    15600019
* SUBSEQUENT TABLE ELEMENTS ARE IN SAME FORMAT AS THE ABOVE             15660019
         DC    C'EXCLUDE '                                              15760019
         B     CHKEXCLD           CHECK EXCLUDE                         15840019
         DC    C'E       '                                              15920019
         B     CHKEXCLD           CHECK EXCLUDE                         16000019
         DC    C'MEMBER  '                                              16080019
         B     CHKMEMB            MEMBER COMMAND                        16130019
* NOTE - NO ABBREVIATION ALLOWED FOR 'MEMBER' WHEN USED AS A COMMAND,   16180019
*        BECAUSE THIS CONTEXT IS FOR PREVIOUS VERSIONS OF IEBCOPY.      16200019
         DC    C'SELECT  '                                              16240019
         B     CHKSELCT           CHECK SELECT                          16320019
COMDEND  DC    C'S       '             END OF COMMAND WORD TABLE        16400019
         B     CHKSELCT           CHECK SELECT                          16480019
         EJECT                                                          16560019
*     KEYWORD LOOKUP TABLE                                              16640019
* FORMAT OF TABLE -                                                     16680019
*     1) KEYWORD OR ABBREVIATION (ALWAYS AN 8-BYTE 'DC')                16720019
*     2) BRANCH TO ANALYZER SUBROUTINE                                  16760019
KEYTAB   DS    0F                 START OF KEY WORD TABLE               16800019
         DC    C'MEMBER  '        KEYWORD                               16840019
         B     MEMBRANL           BRANCH TO ANALYZER                    16880019
         DC    C'M       '        ABBREVIATION                          16920019
         B     MEMBRANL           BRANCH TO ANALYZER                    16960019
* SUBSEQUENT TABLE ELEMENTS ARE IN SAME FORMAT AS THE ABOVE             17000019
         DC    C'OUTDD   '                                              17120019
         B     OUTDDANL           CHECK OUTDD                           17200019
         DC    C'O       '                                              17280019
         B     OUTDDANL           CHECK OUTDD                           17360019
         DC    C'INDD    '                                              17440019
         B     INDDANL            CHECK INDD                            17520019
         DC    C'I       '                                              17600019
         B     INDDANL            CHECK INDD                            17680019
         DC    C'LIST    '                                              17760019
         B     LISTANL            CHECK LIST KEYWORD                    17840019
         DC    C'L       '                                              17920019
         B     LISTANL            CHECK LIST KEYWORD                    17970019
* NOTE - THE FOLLOWING 3 KEYWORDS ARE FOR COMPATIBILITY WITH PREVIOUS   18020019
*        VERSIONS, AND HAVE NO ABBREVIATION                             18040019
         DC    C'NAME    '                                              18080019
         B     NAMEANL            NAME KEYWORD                          18160019
         DC    C'TYPCOPY '                                              18240019
         B     TYPCPANL           TYPCOPY KEYWORD                       18320019
KEYEND   DC    C'MAXNAME '             END OF TABLE OF KEYWORDS         18400019
         B     NOPMAX             MAXNAME KEYWORD                       18480019
         EJECT                                                          18560019
CHKMEMB  EQU   *                                                        18640019
         BAL   GR9,PRNTCRD             PRINT THE CARD                   18720019
         TM    CCSWITCH,IEBCOPYC       WITH IEBCOPY CONTROL CARDS       18800019
         BZ    SCANERRM           NO- MIXING CONTROL CARDS              18880019
         TM    COMDCDSW,EXCLUDES+SELECTSC  WITH SELECT OR EXCLUDE       18960019
         BZ    SCANSEQR           NO- CARD MAYBE OUT OF SEQUENCE        19000019
         TM    COMDCDSW,MEMBRCD1       ALREADY HAD A MEMBER CARD        19050019
         BZ    ARNDS              NO                                    19060019
         OI    CCSWITCH,MULTSE         FLAG AS MULTIPLE MEMBER CARDS    19070019
ARNDS    EQU   *                                                        19080019
         OI    COMDCDSW,MEMBRCD1       SET MEMBER COMMAND SWITCH        19120019
         B     TOSCAN                  CONTINUE SCANNING                19200019
         SPACE 1                                                        19280019
NOPMAX   EQU   *                                                        19360019
         TM    PARMSWCH,COPYNOW        ON COPY STATEMENT                19440019
         BZ    SCANSEQR           NO- SEQUENCE ERROR                    19490019
         TM    CCSWITCH,FIRSTSCN       FIRST ENTRY                      19540019
         BZ    SCANERRM           NO, MIXED CODE                        19570019
         OI    CCSWITCH,IEBCOPYC       FLAG AS IEBCOPY CONTROL CARDS    19600019
         BAL   GR14,RDCARD             GET PARAMETER AFTER EQUAL SIGN   19680019
         SPACE 1                                                        19760019
CHLAST   EQU   *                                                        19840019
         TM    CCSWITCH,LASTPARM       LAST PARAMETER ON CARD SCANNED   19920019
         BZ    TOSCAN             NO- CONTINUE SCANNING CARD            20000019
         MVI   PARMSWCH,CRESET0        RESET 'COPYNOW' SWITCH           20080019
         OI    COMDCDSW,COPYDONE       SET AS COPY CARD SCANNED         20120019
         B     GOONS                   GET NEXT CARD                    20160019
         SPACE 1                                                        20240019
NAMEANL  EQU   *                                                        20320019
         TM    CCSWITCH,IEBCOPYC       WITH IEBCOPY CONTROL CARDS       20400019
         BZ    SCANERRM           MIXED CONTROL CARDS                   20480019
         TM    COMDCDSW,MEMBRCD1       WITH MEMBER STATEMENT            20560019
         BZ    SCANERR            NO- ERROR                             20610019
         TM    CCSWITCH,MULTSE         MULTIPLE MEMBER CARDS            20660019
         BO    STRMEMBS           ADD THESE NAMES TO TABLE              20690019
         LA    GR9,STRMEMBS            RETURN FROM SET4OLDC ROUTINE     20720019
         SPACE 1                                                        20800019
SET4OLDC EQU   *                                                        20880019
         L     GR8,INBEGIN             START OF INDD TABLE              20960019
         LA    GR6,INDD1          COUNT OF ENTRIES                      21040019
         STH   GR6,INDDCT              MAKE INDD COUNT 1                21120019
         MVC   TABLE0(LEN10,GR8),FLAGBYTS CLEAR FLAG BYTES AND NAME     21180019
         LA    GR6,INDCB               INPUT DATA SET DCB ADDRESS       21250019
         MVC   LEN2(LEN8,GR8),DDNAME1(GR6) MAKE INDD ENTRY INDCB-SYSUT1 21280019
         LA    GR6,OUTDCB              OUTPUT DATA SET DCB ADDRESS      21310019
         MVC   OUTNAME(LEN8),DDNAME1(GR6) OUTPUT DATA SET SYSUT2        21350019
         LA    GR8,LEN10(GR8)     UP TABLE POINTER                      21390019
         ST    GR8,SEBEGIN             STORE START AND END OF SETABLE   21440019
         ST    GR8,SESTOP                                               21520019
         BR    GR9                     RETURN                           21680019
         SPACE 1                                                        21760019
OUTDDANL EQU   *                                                        21840019
         TM    PARMSWCH,FLUSHSW        DOING A FLUSH                    21920019
         BO    IGNORE             YES- SKIP THIS CARD                   22000019
         TM    PARMSWCH,COPYNOW        ON COPY STATEMENT                22080019
         BZ    INVALODL           ERROR- OUTDD NOT ON COPY CARD         22120019
         TM    COMDCDSW,COMPRESS       PARM= COMPRESS ON EXEC CARD      22170019
         BO    COMPEXEC           YES- MEANINGLESS IN IEBDSCPY          22180019
         SPACE 1                                                        22190019
COMPRETN EQU   *                       RETURN POINT AFTER MESSAGE       22200019
         OI    PARMSWCH,SCANNAME  INDICATE SCAN OF NAME        @ZA07365 22205099
         OI    COMDCDSW,NEWOUT         SET OUTDD SCANNED SWITCH         22240019
         OI    FLG4,NEWODS+NEWCOPOP    SET SWITCHES TO INDICATE A NEW   22290019
*                                        COPY OPERATION HAS BEEN FOUND  22340019
         TM    CPARAMSW,DELIMEND       NAME ON NEXT CARD (= IN COL 71)  22400019
         BZ    PICKNAME           NO- NORMAL PROCESSING                 22480019
         BAL   GR10,GETPARM            GET NEXT CARD- POSITION TO PARM  22560019
         SPACE 1                                                        22640019
PICKNAME EQU   *                                                        22720019
         BAL   GR14,RDCARD             GET PARAMETER                    22800019
         L     SCANADR,CSTOREG+SAV4 START OF PARAMETER                  22880019
         L     LENGTH,CSTOREG          SIZE OF PARAMETER                22960019
         LA    GR6,LEN8           MAXIMUM LENGTH OF NAME                23040019
         CR    GR6,LENGTH                                               23120019
         BL    BADPARM                 NAME GREATER THAN 8 BYTES        23200019
         LA    GR6,OUTDCB              OUTPUT DATA SET DCB ADDRESS      23250019
         MVC   DDNAME1(LEN8,GR6),BLANKS8 CLEAR DCB DDNAME FIELD         23300019
         BCTR  LENGTH,GR0         DECREMENT FOR EXECUTE COUNT           23350019
         EX    LENGTH,MOVEOUTD         MOVE OUTDD NAME TO OUTPUT DCB    23410019
         MVC   OUTNAME(LEN8),DDNAME1(GR6) MOVE OUTDD NAME TO COMMON     23440019
*                                         AREA                          23470019
         TM    CCSWITCH,LASTPARM       LAST PARAMETER ON CARD           23520019
         BZ    TOSCAN             NO- CHECK FOR LIST OPTION             23620019
         B     CHKCOMSC                CHECK FOR CONTINUED COMMENTS     23800019
         SPACE 1                                                        24080019
LISTANL  EQU   *                                                        24160019
         TM    PARMSWCH,FLUSHSW        FLUSHING                         24180019
         BO    IGNORE             YES- IGNORE THIS CARD                 24210019
         TM    PARMSWCH,COPYNOW        ON COPY STATEMENT                24240019
         BZ    INVALODL           NOT ON COPY STATEMENT                 24320019
         TM    CPARAMSW,DELIMEND       NAME ON NEXT CARD (= IN COL 71)  24400019
         BZ    ONTHISC            NO- NORMAL PROCESSING                 24480019
         BAL   GR10,GETPARM            GET NEXT CARD- POSITION TO PARM  24560019
         SPACE 1                                                        24720019
ONTHISC  EQU   *                                                        24800019
         BAL   GR14,RDCARD             GET PARAMETER                    24880019
         L     SCANADR,CSTOREG+SAV4 START OF PARAMETER                  24960019
         L     LENGTH,CSTOREG          LENGTH OF PARAMETER              25040019
         LA    GR6,LEN2                                                 25120019
         CR    LENGTH,GR6                                               25200019
         BNE   BADPARM                 PARAMETER LARGER THAN 'NO'       25280019
         CLC   SCAN0(LEN2,SCANADR),LISTALLC  IS PARAMETER 'NO'          25360019
         BNE   BADPARM                 ERROR                            25440019
         TM    CCSWITCH,IEBCOPYC       WITH IEBCOPY STATEMENTS          25520019
         BO    SCANERRM           YES- MIXING STATEMENT TYPES           25600019
         OI    COMDCDSW,LISTSW         SET TO NOT LIST MEMBERS COPIED   25680019
         TM    CCSWITCH,LASTPARM       LAST PARAMETER ON CARD           25760019
         BZ    TOSCAN             NO- CONTINUE                          25840019
         TM    COMDCDSW,NEWOUT         HAVE OUTDD ALREADY               25920019
         BZ    NOINDDSP           INDD/LIST WITHOUT OUTDD               25940019
CHKCOMSC EQU   *                                                        25968019
         TM    CPARAMSW,COL72BLK       CONTINUED CARD                   25976019
         BZ    COPYALLD           FINISH UP COPY CARD SCAN              25984019
         BAL   GR9,CHK4COMT            CHECK FOR CONTINUED COMMENTS     25992019
COPYALLD EQU   *                                                        26000019
         OI    COMDCDSW,COPYDONE       SET DONE WITH COPY CARD SWITCH   26040019
         MVI   PARMSWCH,CRESET0        RESET ALL, ESPECIALLY 'COPYNOW'  26080019
         B     GOONSC                  GET NEXT CARD                    26120019
         SPACE 1                                                        26160019
CHKEXCLD EQU   *                                                        26240019
         TM    PARMSWCH,FLUSHSW        FLUSHING                         26250019
         BO    IGNORE             YES- IGNORE THIS CARD                 26260019
         TM    COMDCDSW,SELECTSC       SELECT CARD AHEAD                26270019
         BO    MULTS              YES- ERROR TO HAVE BOTH               26280019
         LA    GR7,RETRNEV             RETURN ADDRESS                   26290019
         TM    COMDCDSW,EXCLUDES       MULTIPLE EXCLUDES                26300019
         BZ    TESTCSE            NO                                    26310019
         B     MULTSET                 SET MULTIPLE S/E SWITCH          26320019
         SPACE 1                                                        26330019
RETRNEV  EQU   *                                                        26340019
         OI    COMDCDSW,EXCLUDES       SET EXCLUDE SWITCH               26400019
         NI    COMDCDSW,FF-MEMBRCD1    INDIC MEMBER KEYWORD FOR  A38724 26420021
*           THIS EXCLUDE COMMAND NOT YET FOUND                   A38724 26430021
         B     TOSCAN                  CONTINUE                         26480019
         SPACE 1                                                        26560019
CHKSELCT EQU   *                                                        26640019
         LA    GR7,SELCTOK             RETURN FROM FOLLOWING ROUTINE    26720019
         TM    PARMSWCH,FLUSHSW        DOING A FLUSH                    26880019
         BO    IGNORE             YES- SKIP THIS CARD                   26920019
         TM    COMDCDSW,EXCLUDES       EXCLUDE CARD AHEAD OF SELECT     26970019
         BO    MULTS              YES- ERROR TO MIX THEM                26980019
         TM    COMDCDSW,SELECTSC       PREVIOUS SELECT                  26990019
         BZ    TESTCSE            ONLY ONE SELECT                       27000019
MULTSET  EQU   *                                                        27010019
         OI    CCSWITCH,MULTSE         MULTIPLE SELECT/EXCLUDE          27020019
TESTCSE  EQU   *                                                        27030019
         TM    PARMSWCH,COMDPART       PART OF COMMAND ON NEXT CARD     27040019
         BZ    NOGOON             NO- GO ON AND PRINT CARD              27120019
         MVI   PARMSWCH,CRESET0        RESET ENTIRE SWITCH              27200019
         B     AFTRPRT                 DO NOT PRINT CARD                27280019
         SPACE 1                                                        27360019
NOGOON   EQU   *                                                        27440019
         BAL   GR9,PRNTCRD             PRINT THE CARD                   27520019
AFTRPRT  EQU   *                                                        27600019
         TM    COMDCDSW,NEWINDD        HAVE AN INDD                     27840019
         BZ    NOINDDSP           NO- SEQUENCE ERROR                    28040019
         TM    CCSWITCH,LASTPARM       MORE PARAMETERS ON CARD          28320019
         BO    NULLP              NO- MUST HAVE MEMBER KEYWORD          28400019
         NI    CCSWITCH,FF-COMDNOW RESET COMMAND WORD SWITCH            28480019
         BR    GR7                     RETURN                           28560019
         SPACE 1                                                        28640019
SELCTOK  EQU   *                                                        28720019
         OI    COMDCDSW,SELECTSC       SET SELECT SWITCH                28800019
         NI    COMDCDSW,FF-MEMBRCD1    INDIC MEMBER KEYWORD FOR  A38724 28820021
*           THIS EXCLUDE COMMAND NOT YET FOUND                   A38724 28830021
         B     TOSCAN                  CONTINUE                         28880019
         SPACE 1                                                        28960019
INDDANL  EQU   *                                                        29040019
         TM    PARMSWCH,FLUSHSW        DOING A FLUSH                    29120019
         BO    IGNORE             YES- SKIP THIS CARD                   29200019
         TM    CCSWITCH,IEBCOPYC       IEBCOPY STATEMENTS               29280019
         BO    SCANERRM           YES- MIXED MODES                      29330019
         TM    PARMSWCH,COPYNOW        INDD ON COPY CARD                29380019
         BO    NEXTI              YES                                   29410019
         TM    COMDCDSW,SELECTSC+EXCLUDES  JUST GOT SELECT OR EXCLUDE   29450019
         BM    RESETIN            YES- DO A COPY                        29470019
         BAL   GR9,PRNTCRD             PRINT INDD CARD                  29490019
         TM    COMDCDSW,NEWINDD        JUST HAD AN INDD                 29510019
         BO    STRMEMBS           ADD THESE NAMES TO TABLE              29550019
         NI    CCSWITCH,FF-MULTSE RESET MULTIPLE S/E SWITCH             29590019
         B     GOGOGO                  GO BUILD THE INDD TABLE          29630019
         SPACE 1                                                        29680019
NEXTI    EQU   *                                                        29730019
         TM    COMDCDSW,NEWINDD        INDD ON COPY CARD ALREADY        29780019
         BO    SCANERR            YES- ONLY ONE INDD PER COPY CARD      29830019
GOGOGO   EQU   *                                                        29880019
         OI    COMDCDSW,NEWINDD        FLAG AS HAVE AN INDD             29930019
         NI    COMDCDSW,FF-SELECTSC-EXCLUDES-MEMBRCD1 RESET SWITCHES    29980019
         SPACE 1                                                        30030019
**********                                                   ********** 30080019
**********         BUILD TABLE OF INDD NAMES                 ********** 30160019
**********                                                   ********** 30240019
         SPACE 1                                                        30320019
         XC    COUNT(LEN2),COUNT  CLEAR COUNT                           30400019
         XC    ENCT(LEN2),ENCT    CLEAR SE TABLE ENTRY COUNT            30480019
         XC    NNCT1(LEN2),NNCT1  CLEAR NEW NAME COUNT                  30560019
         XC    INDDCT(LEN2),INDDCT CLEAR INDD COUNT                     30640019
         MVC   SESTOP(LEN4),INBEGIN NO SE OR INDD ENTRIES YET           30720019
STRMEMBS EQU   *                                                        30800019
         TM    CPARAMSW,DELIMEND       NAME ON NEXT CARD (= IN 71)      30880019
         BZ    CONTSC             NO- CONTINUE NORMAL PROCESSING        30960019
GETNEXTC EQU   *                                                        31040019
         LA    GR10,SCANSOME           RETURN FROM FOLLOWING ROUTINE    31120019
         SPACE 1                                                        31200019
*  ROUTINE 'GETPARM' READS NEXT CARD AND POSITIONS TO CONTINUATION      31280019
*   PARAMETER. GR10 SET ON ENTRY TO ROUTINE WITH RETURN ADDRESS.        31360019
         SPACE 1                                                        31440019
GETPARM  EQU   *                                                        31520019
         BAL   GR9,READCC              GET NEXT CARD                    31600019
         BAL   GR9,PRNTCRD             PRINT THE CARD                   31680019
         MVI   CPARAMSW,CRESET0        CLEAR PARAMETER SWITCH           31760019
         CLI   CCIMAGE+COL71,BLANKCOL COL 72 BLANK                      31840019
         BE    ARNDNXT                 YES- NOT CONTINUED               31920019
         OI    CPARAMSW,COL72BLK       SET COLUMN 72 NOT BLANK SWITCH   32000019
ARNDNXT  EQU   *                                                        32080019
         LA    GR6,CCIMAGE+COL70  END OF CARD PARAMETER COLUMN          32180019
         BAL   GR9,NAMESCAN            SCAN OVER NAME IF ANY            32440019
         SPACE 1                                                        32720019
LOOP2    EQU   *                                                        32800019
         CLI   SCAN0(GR3),BLANKCOL COLUMN BLANK                         32880019
         BNE   STRTPARM                NO- START OF PARAMETER           32960019
LOOPPARM EQU   *                                                        33040019
         LA    GR3,UP1(GR3)       UPDATE TO NEXT COLUMN                 33120019
         CR    GR3,GR6                                                  33200019
         BNH   LOOP2                   SCAN TO COLUMN 71                33300019
         B     GETPARM                 GET NEXT CARD                    33400019
         SPACE 1                                                        33760019
STRTPARM EQU   *                                                        33840019
         ST    GR3,CSTOREG+SAV8   STORE START OF PARAMETER              33940019
         NI    PARMSWCH,FF-COMDPART RESET PARAMETER CONTINUED SWITCH    34040019
         OI    CPARAMSW,PARMCOME       SET TO EXPECT PARAMETER          34240019
         BR    GR10                    RETURN                           34320019
         SPACE 1                                                        34400019
CONTSC   EQU   *                                                        34480019
         L     GR3,CSTOREG+SAV8   COLUMN TO START SCAN                  34500019
         NI    CCSWITCH,FF-UNECPARN RESET PARENTHESIS SWITCH            34520019
         XC    LEFTPCNT(LEN4),LEFTPCNT CLEAR PARENTHESIS COUNT BUFFER   34540019
         CLI   SCAN0(GR3),PARENLFT  START WITH LEFT PAREN               34560019
         BNE   SCANSOME                GET NEXT PARAMETER               34581019
         OI    CCSWITCH,UNECPARN       SET PARENTHESIS SWITCH           34588019
         LA    GR3,UP1(GR3)       UP TO ACTUAL NAME- SET 4 BCTR         34668019
         MVI   LEFTPCNT+UP1,PARCNT MAKE LEFT PAREN COUNT 1              34748019
SCANSOME EQU   *                                                        34850019
         NI    PARMSWCH,COPYNOW        RESET ALL BUT COPY NOW SWITCH    34900019
         SR    GR7,GR7                 CLEAR PARAMETER SIZE             34930019
         BCTR  GR3,GR0            BACK UP POINTER                       34950019
         SPACE 1                                                        34970019
*********************************************************************** 34980019
*** START OF GENERAL INDD OR MEMBER NAME SCAN ROUTINE AT INDDLOOP.  *** 34990019
*********************************************************************** 35000019
         SPACE 1                                                        35040019
INDDLOOP EQU   *                                                        35120019
         LA    GR3,UP1(GR3)       UP TO NEXT COLUMN                     35160019
         TM    CPARAMSW,DELIMEND       UP TO 71                         35210019
         BZ    NOGET              NO                                    35220019
         BAL   GR10,GETPARM            GET PARAMETER FROM NEXT CARD     35230019
NOGET    EQU   *                                                        35240019
         BAL   GR9,TESTLAST            CHECK IF UP TO COLUMN 71         35280019
         CLI   SCAN0(GR3),COMMA   COMMA                                 35360019
         BH    TRYNAME                 NO- HIGHER THAN COMMA            35440019
         BE    CHKCOMMA                YES- DELIMITER                   35520019
         CLI   SCAN0(GR3),PARENLFT     LEFT PARENTHESIS                 35600019
         BE    CHKPARNL                YES                              35680019
         CLI   SCAN0(GR3),PARENRGT     RIGHT PARENTHESIS                35760019
         BE    CHKPARNR                YES                              35840019
         CLI   SCAN0(GR3),ADOLLAR      IS IT A NATIONAL SYMBOL '$'      35860019
         BE    STRNAME                 YES- OKAY                        35880019
         CLI   SCAN0(GR3),BLANKCOL     BLANK                            35940019
         BNE   BADPARM                 BAD PARAMETER                    36000019
         TM    PARMSWCH,SCANNAME       BEEN SCANNING NAME               36080019
         BO    BLNKSTP                 YES- STOP NAME SCAN              36160019
         SPACE 1                                                        36240019
SET4READ EQU   *                                                        36320019
         CLC   LEFTPCNT(LEN2),RGHTPCNT EQUAL NUMBER LEFT AND RIGHT PARE 36400019
         BNE   MISSPARN                ERROR- MISSING PARENTHESIS       36480019
         TM    CPARAMSW,COL72BLK       CARD CONTINUED                   36560019
         BZ    GOONS                   NO GET NEXT CARD                 36569019
         BAL   GR9,CHK4COMT            CHECK FOR CONTINUED COMMENTS     36578019
         B     GOONS                   GET NEXT CARD                    36587019
         SPACE 1                                                        36596019
CHK4COMT EQU   *                                                        36605019
         ST    GR9,SARG                SAVE RETURN ADDRESS              36614019
         LA    GR6,CCIMAGE+COL71       COLUMN 72                        36623019
LOOPCOM  EQU   *                                                        36632019
         CLI   SCAN0(GR3),BLANKCOL     NEXT COLUMN BLANK                36641019
         BNE   ACOMMENT                NO- START OF COMMENT             36650019
         LA    GR3,UP1(GR3)                                             36659019
         CR    GR3,GR6                 END OF CARD NO COMMENT FOUND     36668019
         BNE   LOOPCOM                 CONTINUE COMMENT SCAN            36677019
         B     CONTINV                 INVALID CONTINUATION      A48799 36686022
         SPACE 1                                                        36713019
ACOMMENT EQU   *                                                        36722019
         BAL   GR9,READCC              READ NEXT CARD                   36731019
         BAL   GR9,PRNTCRD             PRINT THE COMMENT CARD           36740019
         CLI   CCIMAGE+COL71,BLANKCOL  COMMENT CONTINUED                36749019
         BNE   ACOMMENT                YES- GET NEXT COMMENT CARD       36758019
         NI    CPARAMSW,FF-COL72BLK    RESET CONTINUED SWITCH           36762019
         L     GR9,SARG                LOAD RETURN ADDRESS              36767019
         BR    GR9                     RETURN TO CALLER                 36776019
         SPACE 1                                                        36800019
CHKIFSTP EQU   *                                                        36880019
         LA    GR3,UP1(GR3)                                             36920019
         TM    PARMSWCH,COMDPART       UP TO COL 71 PARM CONTINUED      36960019
         BO    GETNEXTC                YES- GET NEXT CARD               37000019
         CLI   SCAN0(GR3),BLANKCOL     NEXT COLUMN BLANK                37040019
         BNE   SCANSOME                NO- SCAN SOME MORE               37080019
         B     CHKCONTY                CHECK IF CARD CONTINUED          37120019
         SPACE 1                                                        37200019
TRYNAME  EQU   *                                                        37280019
         CLI   SCAN0(GR3),ANA                                           37320019
         BNL   STRNAME                 OKAY- ALPHABETIC OR NUMERIC      37365019
         SPACE 1                                                        37370019
*  THREE NATIONAL SYMBOLS ALLOWED IN MEMBER NAMES- 'AT' SIGN, POUND     37375019
*    SIGN, AND DOLLAR SIGN. CHECK BEFORE FOR DOLLAR SIGN MUST CHECK     37380019
*    HERE FOR 'AT' AND POUND SYMBOL.                                    37385019
         SPACE 1                                                        37390019
         CLI   SCAN0(GR3),ANAT         IS IT AN 'AT' SIGN               37395019
         BE    STRNAME                 YES- OKAY                        37400019
         CLI   SCAN0(GR3),APOUND       IS IT A 'POUND' SIGN             37405019
         BE    STRNAME            YES - OKAY                            37410019
         CLI   SCAN0(GR3),ANUNDRSC     AN UNDER SCORE           OY01183 37411002
         BE    STRNAME                 YES,OKAY                 OY01183 37412002
         CLI   SCAN0(GR3),EQUAL        COULD IT BE AN EQUAL SIGN        37415019
         BNE   BADPARM            IF ITS NOT, ITS INVALID               37420019
         TM    COMDCDSW,MEMBRCD1       EQUAL SIGN IN MEMBER NAME SCAN   37425019
         BO    BADPARM                 YES- NOT ALLOWED                 37430019
         TM    PARMSWCH,COPYNOW        EQUAL SIGN WITH INDD ON COPY     37435019
         BZ    BADPARM                 NO- NOT ALLOWED IF NOT ON COPY   37440019
         TM    PARMSWCH,COMDPART       DELIMITER IN COLUMN 71           37446019
         BZ    TSTDLM                  NOT IN 71                        37448019
         OI    CPARAMSW,DELIMEND       SET IN 71 SWITCH                 37450019
TSTDLM   EQU   *                                                        37452019
         TM    CPARAMSW,CONTINY        PARAMETER WAS CONTINUED          37454019
         BZ    SETRETOK                NO                               37456019
         NI    CCSWITCH,FF-COMDNOW     RESET COMMAND SWITCH             37458019
         BAL   GR9,KCREATE             RECREATE KEYWORD                 37460019
         OI    CPARAMSW,PARMCOME  SET BIT                               37462019
         SPACE 1                                                        37464019
*          NAME NOT SCANNED, IF AN EQUAL SIGN IS A KEYWORD, POINTERS    37470019
*   ALL SET,   GO TO KPASS AND WILL RETURN TO CHECK KEYWORD JUST AS IF  37475019
*   RDCARD ROUTINE HAD SCANNED THE KEYWORD.                             37480019
         SPACE 1                                                        37485019
SETRETOK EQU   *                                                        37490019
         NI    PARMSWCH,FF-SCANNAME RESET SCAN OF NAME SW      @ZA07365 37492599
         LA    GR14,RETRTOSC           RETURN FROM INITIALIZED 'KPASS'  37495019
         ST    GR14,SARG               STORE RETURN SO RDCARD CAN FIND  37500019
         B     KPASS                   SET UP AS IF 'RDCARD' SCANNED    37505019
         SPACE 1                                                        37510019
STRNAME  EQU   *                                                        37515019
         LA    GR7,UP1(GR7)            UP COUNT OF CHARACTERS IN NAME   37522019
         TM    PARMSWCH,SCANNAME       ALREADY SCANNING NAME            37530019
         BO    ALLSCAN                 YES                              37540019
         OI    PARMSWCH,SCANNAME       SET NAME SCANNING SWITCH         37550019
         LR    GR1,GR3                 LOAD POINTER TO START OF NAME    37560019
ALLSCAN  EQU   *                                                        37570019
         TM    PARMSWCH,COMDPART       CONTINUED NAME                   37600019
         BZ    SAMECARD                NO- CARD COMPLETE                37680019
         OI    CPARAMSW,CONTINY        SET TO CONTINUE ON NEXT CARD     37760019
         LA    GR14,INDDLOOP           RETURN ADDRESS                   37840019
         ST    GR14,SARG               STORE RETURN ADDRESS FOR SCAN    37920019
         B     KPART                   SET UP FIRST PART OF PARAMETER   38000019
         SPACE 1                                                        38080019
SAMECARD EQU   *                                                        38160019
         TM    CPARAMSW,DELIMEND       CHARACTER IN 71, NOT CONTINUED   38260019
         BZ    INDDLOOP                NO- CONTINUE SCAN                38360019
         B     ENDNAME                 STORE NAME                       38460019
         SPACE 1                                                        38640019
CHKPARNL EQU   *                                                        38720019
*                                                                       38800019
*    NAMES ON MEMBER STATEMENT ONLY IN () IF RENAME OR REPLACE OPTION   38880019
*   WAS SPECIFIED.  HOWEVER, FOR COMPATIBILITY, ALSO ALLOW LIST OF      38930019
*   MBR NAMES WITHIN PARENS.                                            38980019
*                                                                       39040019
         TM    CCSWITCH,IEBCOPYC       IEBCOPY CONTROL CARDS            39120019
         BZ    TSTRGHT                 NO                               39200019
         NI    PARMSWCH,FF-ONELEFT     RESET LEFT PARENTHESIS SWITCH    39280019
         B     CONTCPPY           ADD 1 TO LEFT-PAREN COUNT             39360019
         SPACE 1                                                        39440019
TSTRGHT  EQU   *                                                        39520019
         TM    COMDCDSW,EXCLUDES       REPLACE/RENAME ON EXCLUDE        39600019
         BO    NORENAME           IF SO, ITS INVALID                    39680019
         TM    PARMSWCH,ONELEFT   WAS A LEFT PAREN ALREADY SCANNED      39760019
         BO    BADREPLC                YES- INVALID REPLACE SPECIFIED   39840019
         OI    PARMSWCH,SET4REPL+ONELEFT  SET SWITCHES FOR REPLACE      39920019
         SPACE 1                                                        40000019
CONTCPPY EQU   *                                                        40080019
         LH    GR6,LEFTPCNT                                             40160019
         LA    GR6,UP1(GR6)            UP COUNT BY 1                    40240019
         STH   GR6,LEFTPCNT            STORE NEW COUNT                  40320019
         TM    PARMSWCH,SCANNAME       LEFT PAREN WHILE SCAN OF NAME    40400019
         BO    BADREPLC                YES- INVALID REPLACE SPECIFIED   40480019
         B     INDDLOOP                CONTINUE SCAN                    40560019
         SPACE 1                                                        40570019
CHKDUPC  EQU   *                                                        40580019
         TM    CPARAMSW,DELIMEND       COMMA IN COLUMN 71               40583019
         BO    ENDNAME                 YES- END SCAN OF NAME            40588019
         CLI   UP1(GR3),COMMA          NEXT CHARACTER ALSO A COMMA      40593019
         BE    NULLP                   YES- NULL PARAMETER ERROR        40600019
         CLI   UP1(GR3),PARENRGT       IS COMMA FOLLOWED BY RIGHT PAREN 40603019
         BE    NULLP              YES - NULL PARAMETER                  40607019
         B     ENDNAME                 CONTINUE                         40610019
         SPACE 1                                                        40640019
BLNKSTP  EQU   *                                                        40720019
         MVI   CCDELIM,BLANKSGN        SET AS DELIMITER A BLANK         40800019
ENDNAME  EQU   *                                                        40880019
         TM    CPARAMSW,CONTINY        PARM CONTINUED                   40960019
         BZ    NOCONT                  NO                               41010019
         NI    CCSWITCH,FF-COMDNOW     RESET COMMAND SWITCH             41060019
         BAL   GR9,KCREATE             YES- RECREATE PARAMETER          41120019
NOCONT   EQU   *                                                        41200019
         LA    GR9,LEN8                                                 41280019
         CR    GR7,GR9                                                  41360019
         BH    BADPARM                 BAD PARAMETER                    41440019
         L     GR8,SESTOP              NEXT SLOT IN INDD TABLE          41520019
         LR    GR6,GR8            SAVE NEXT SLOT ADDRESS                41540019
         LA    GR8,LEN10(GR8)     SEE IF ENOUGH ROOM FOR THIS ENTRY     41560019
         C     GR8,HICOR               EXCEEDING TABLE SPACE            41600019
         BNL   OUTOFCOR                YES- ERROR                       41680019
         LR    GR8,GR6            RESTORE NEXT SLOT ADDRESS             41720019
         MVC   TABLE0(LEN10,GR8),FLAGBYTS  CLEAR FLAGS, BLANK NAME      41760019
         BCTR  GR7,GR0                 DECREMENT COUNT FOR EXECUTE      41840019
         EX    GR7,MOVEDDNM            MOVE DD NAME TO TABLE            41920019
         NI    PARMSWCH,FF-SCANNAME    RESET SCANNING NAME SWITCH       42220019
         TM    COMDCDSW,MEMBRCD1       MEMBER STATEMENT                 42560019
         BO    MEMBRCD                 YES- HANDLE DATA SET NAMES       42640019
         TM    PARMSWCH,SET4REPL       THIS NAME A REPLACE              42720019
         BZ    REGNAME                 NO- CONTINUE                     42800019
         OI    TABLE0(GR8),REPLACOP    SET REPLACE OPTION BIT           42880019
         NI    PARMSWCH,FF-SET4REPL-HASNEWNM  RESET SWITCHES            42960019
         SPACE 1                                                        43040019
REGNAME  EQU   *                                                        43120019
         LH    GR6,INDDCT                                               43200019
         LA    GR6,UP1(GR6)            UP DD COUNT                      43280019
         STH   GR6,INDDCT              STORE NEW COUNT                  43360019
         LA    GR8,LEN10(GR8)          NEXT SLOT IN INDD BUFFER         43440019
         ST    GR8,SESTOP              END OF SE TABLE                  43520019
         SR    GR7,GR7                 CLEAR COUNT REGISTR              43600019
         TM    CCDELIM,BLANKSGN        END OF NAMES REACHED             43680019
         BZ    INDDLOOP                NO- SCAN FOR MORE NAMES          43760019
         CLI   SCAN0(GR3),COMMA        REALLY STOPPED AT A COMMA        43840019
         BE    CHKCONTY                YES                              43920019
ISDONE   EQU   *                                                        43970019
         NI    PARMSWCH,FF-COPYNOW     RESET COPY CARD SCAN SWITCH      44040019
         TM    COMDCDSW,NEWOUT         HAD AN OUTDD ON COPY CARD        44120019
         BZ    NOINDDSP                NO OUTDD SPECIFIED               44220019
         OI    COMDCDSW,COPYDONE+NEWOUT+NEWINDD BE SURE ALL ARE SET     44320019
         B     SET4READ                GET NEXT CARD                    44560019
         SPACE 1                                                        44640019
RESETIN  EQU   *                                                        44720019
         NI    COMDCDSW,FF-NEWINDD     RESET HAVE AN INDD SWITCH        44800019
         LA    GR3,CCIMAGE             START OF CARD                    44880019
         NI    CPARAMSW,COL72BLK       RESET ALL BUT CONTINUATION PUNCH 44960019
         ST    GR3,CSTOREG+SAV8        STORE COLUMN TO SCAN NEXT        45040019
         NI    CCSWITCH,CRESET0        CLEAR SWITCH                     45120019
         B     GETOUT                  RETURN TO MAINSTREAM             45200019
         SPACE 1                                                        45280019
TESTLAST EQU   *                                                        45360019
         LA    GR5,CCIMAGE+COL70       LAST COLUMN (71)                 45440019
         CR    GR3,GR5                 UP TO COLUMN 71                  45520019
         BCR   MS7,GR9                 NO- CONTINUE                     45580019
         OI    CPARAMSW,DELIMEND       CHARACTER IN COLUMN 71           45640019
         TM    CPARAMSW,COL72BLK       CONTINUATION PUNCH IN COLUMN 72  45680019
         BO    SETCONT                 SET FOR CONTINUED PARAMETER      45740019
         MVI   CCDELIM,BLANKSGN        SET TO STOP SCAN                 45800019
         BR    GR9                     RETURN                           45860019
SETCONT  EQU   *                                                        45920019
         OI    PARMSWCH,COMDPART       SET AS CONTINUED PARAMETER       46000019
         BR    GR9                     RETURN                           46080019
         SPACE 1                                                        46160019
CHKCOMMA EQU   *                                                        46240019
         TM    PARMSWCH,SCANNAME       SCANNING NAME                    46320019
         BZ    CHKIFSTP                NO- CHECK IF CAN STOP (N,R),NAME 46360019
         TM    CPARAMSW,DELIMEND       COMMA IN COLUMN 71               46410019
         BO    CHKCONT                 YES                       A45150 46420021
         CLI   UP1(GR3),BLANKCOL       NEXT COLUMN BLANK         A45150 46422021
         BNE   NOCMBLNK                NO                        A45150 46424021
CHKCONT  EQU   *                                                 A45150 46426021
         TM    PARMSWCH,SET4REPL+HASNEWNM REPLACE/RENAME SPECIFIED      46430019
         BC    MS5,CONTINV             YES ILLEGAL TO CONTINUE          46440019
         TM    CPARAMSW,COL72BLK       PUNCH IN COLUMN 72               46450019
         BZ    CONTINV                 NO- CONTINUATION ERROR           46460019
         CLI   UP1(GR3),BLANKCOL       NEXT COLUMN BLANK                46510019
         BE    BLNKSTP                 YES                              46560019
NOCMBLNK EQU   *                                                 A45150 46610021
         TM    PARMSWCH,SET4REPL       REPLACE EXPECTED                 46640019
         BZ    CHKDUPC            NO - CHECK NEXT COLUMN FIRST          46720019
         NI    PARMSWCH,FF-ONELEFT     RESET LEFT PARENTHESIS SWITCH    46800019
         TM    COMDCDSW,MEMBRCD1       DOING MEMBER SCAN                46880019
         BO    REPMEMB                 YES CHECK RENAME REPLACE         46960019
         SPACE 1                                                        47040019
ON2TST   EQU   *                                                        47120019
         TM    CPARAMSW,DELIMEND                                        47140019
         BO    CONTINV            INVALID TO CONTINUE REPLACE    A48799 47180022
         LA    GR3,UP1(GR3)       UP SCAN POINTER                A48799 47190022
         BAL   GR9,TESTLAST       CHECK IF UP TO COLUMN 71       A48799 47200022
         TM    CPARAMSW,DELIMEND  UP TO COLUMN 71                A48799 47210022
         BO    CONTINV            INVALID TO CONTINUE REPLACE    A48799 47212022
         CLC   SCAN0(LEN2,GR3),RPARN  DOES 'R)' FOLLOW           A48799 47220022
         BNE   BADREPLC           IF NOT, ITS INVALID                   47280019
         LA    GR3,UP1(GR3)       UP SCAN POINTER                A48799 47360022
         BAL   GR9,TESTLAST            CHECK IF UP TO COLUMN 71  A45185 47410022
         SPACE 1                                                        47440019
CHKPARNR EQU   *                                                        47520019
         TM    PARMSWCH,ONELEFT        WAS SWITCH RESET                 47600019
         BO    BADREPLC           IF NOT, INVALID CTL CARD              47680019
         LH    GR6,RGHTPCNT                                             47760019
         LA    GR6,UP1(GR6)            UP COUNT RIGHT PARENS            47840019
         STH   GR6,RGHTPCNT            STORE NEW COUNT                  47920019
         CLC   LEFTPCNT(LEN2),RGHTPCNT COMPARE PARENTHESIS COUNT        47970019
         BNE   CHKIFUNC                CHECK IF STARTED WITH LEFT PAREN 48020019
         TM    CCSWITCH,UNECPARN       STARTED WITH PARENTHESIS         48040019
         BZ    ALLOK                   NO                               48050019
         CLI   UP1(GR3),BLANKCOL       NEXT COLUMN BLANK                48060019
         BNE   MORETEST           KEEP ON                               48082019
         TM    COMDCDSW,MEMBRCD1  MEMBER NAME                           48084019
         BO    ALLOK                   YES,STORE NAME                   48085019
         TM    PARMSWCH,SCANNAME  WAS A NAME BEING SCANNED              48086619
         BO    BLNKSTP                 IF SO, GO TO STORE THE NAME      48087319
         B     ISDONE             DD NAME STORED                        48088019
MORETEST EQU   *                                                        48090019
         CLI   UP1(GR3),PARENLFT       NEXT CHARACTER LEFT PAREN        48092019
         BE    MISSPARN                UNEQUAL PARENTHESIS              48094019
         CLI   UP1(GR3),PARENRGT       NEXT CHARACTER RIGHT PAREN       48096019
         BE    MISSPARN                UNEQUAL PARENTHESIS              48098019
         TM    PARMSWCH,COPYNOW        COPY CARD                 A41802 48100000
         BO    ALLOK                   YES                       A41802 48102000
         B     BADREPLC                INVALID CTL CARD          A41802 48108021
ALLOK    EQU   *                                                        48120019
         TM    PARMSWCH,SCANNAME       SCANNING NAME                    48160019
         BO    NAMEFND                 YES- NAME COMPLETE        A45174 48170022
         TM    CPARAMSW,DELIMEND       UP TO 71                  A45174 48172022
         BO    GOONS                   YES- GET NEXT CARD        A45174 48174022
         B     INDDLOOP                NO- CONTINUE SCAN         A45174 48176022
NAMEFND  EQU   *                                                 A45174 48178022
         TM    CPARAMSW,DELIMEND       UP TO 71                         48186019
         BO    BLNKSTP                 YES- SET AS IF BLANK STOPPED     48196019
         CLI   UP1(GR3),BLANKCOL       IS NEXT COLUMN BLANK             48206019
         BNE   ENDNAME                 NO- END SCAN OF THIS NAME        48220019
         B     BLNKSTP                 SET STOPPED ON BLANK SWITCH      48240019
         SPACE 1                                                        48260019
CHKIFUNC EQU   *                                                        48280019
         TM    CCSWITCH,UNECPARN       STARTED WITH PARENTHESIS         48300019
         BZ    MISSPARN                NO- UNEQUAL PAREN COUNT          48330019
         B     ENDNAME                 STORE NAME                       48360019
         SPACE 1                                                        48400019
MEMBRANL EQU   *                                                        48480019
         TM    COMDCDSW,SELECTSC+EXCLUDES   SELECT OR EXCLUDE           48560019
         BZ    BADMEMBS           IF NEITHER, CANT SAY 'MEMBER'         48640019
         TM    CCSWITCH,IEBCOPYC  IEBCOPY CONTROL STATEMENTS            48660019
         BO    SCANERRM           YES MIXED CODES                       48680019
         TM    COMDCDSW,MEMBRCD1  WAS MEMBER KEYWRD FOUND ALRDY  A38724 48690021
         BO    BADMEMBS           YES-CANT SAY 'MEMBER'          A38724 48700021
         TM    CCDELIM,EQUALSGN   WAS LAST DELIMITER AN EQUAL? @ZA13792 48710099
         BNO   PRTBAD             NO,GIVE ERROR MSG 104        @ZA13792 48712099
         OI    COMDCDSW,MEMBRCD1       SET MEMBER KEYWORD SWITCH        48720019
         TM    CCSWITCH,MULTSE         CONSECUTIVE S/E                  48740019
         BO    STRMEMBS                ADD NAMES TO TABLE               48780019
         MVC   SEBEGIN(LEN4),SESTOP    START OF SE TABLE                48820019
         B     STRMEMBS                START INTERNAL MEMBER NAME SCAN  48880019
         SPACE 1                                                        48960019
REPMEMB  EQU   *                                                        49040019
         LA    GR3,UP1(GR3)            UP TO NEXT NAME                  49120019
         BAL   GR9,TESTLAST            CHECK IF UP TO COLUMN 71         49200019
         CLI   SCAN0(GR3),ADOLLAR      VALID MEMBER NAME CHARACTER      49220019
         BE    OK4NAMEM                YES                              49240019
         CLI   SCAN0(GR3),COMMA        NEXT CHARACTER A COMMA           49300019
         BE    CHK4R                   YES- MUST BE R)                  49360019
         BL    BADPARM            IF LT COMMA, ITS AN INVALID CHARACTER 49420019
OK4NAMEM EQU   *                                                        49480019
         ST    GR3,CSTOREG+SAV4        SAVE POINTER START OF NEW NAME   49540019
         SR    GR10,GR10               SECOND PARAMETER COUNT REGISTER  49600019
         SPACE 1                                                        49680019
NAME2LOP EQU   *                                                        49760019
         LA    GR10,UP1(GR10)          UP NAME CHARACTER COUNT          49810019
         TM    CPARAMSW,DELIMEND                                        49860019
         BO    CONTINV               INVALID TO CONTINUE REPLACE A48799 49869022
         CLI   SCAN0(GR3),ANA          USUAL CHARACTERS IN NAME         49878019
         BNL   OKCHAR                  YES- VALID CHARACTER             49888019
         CLI   SCAN0(GR3),ADOLLAR      A DOLLAR SIGN                    49892019
         BE    OKCHAR                  YES, OK                          49896019
         CLI   SCAN0(GR3),ANAT         AN 'AT' SIGN                     49900019
         BE    OKCHAR                  YES- VALID CHARACTER             49904019
         CLI   SCAN0(GR3),APOUND       A 'POUND' SIGN                   49908019
         BNE   BADPARM                 WILL NOT BE , OR ) HERE          49912019
OKCHAR   EQU   *                                                        49916019
         LA    GR3,UP1(GR3)            POINT TO NEXT CHARACTER          49956019
         BAL   GR9,TESTLAST            TEST IF IN COLUMN 71             50000019
         CLI   SCAN0(GR3),COMMA        COMMA                            50080019
         BL    CHKRTPAR                CHECK IF RIGHT PARENTHESIS       50160019
         BH    NAME2LOP                SCAN TO END OF NAME              50240019
         OI    PARMSWCH,SET4REPL+HASNEWNM  SET REPLACE-NEW NAME SWITCH  50320019
         B     ON2TST                  UP POINTER AND RIGHT PAREN COUNT 50400019
         SPACE 1                                                        50480019
CHKRTPAR EQU   *                                                        50560019
         CLI   SCAN0(GR3),ADOLLAR      VALID MEMBER NAME CHARACTER      50580019
         BE    NAME2LOP                YES                              50600019
         CLI   SCAN0(GR3),PARENRGT     RIGHT PARENTHESIS                50660019
         BNE   BADPARM            IF NOT, ITS AN INVALID CHARACTER      50720019
         NI    PARMSWCH,FF-SET4REPL    RESET REPLACE SWITCH             50800019
         OI    PARMSWCH,HASNEWNM       SET NEW NAME- NO REPLACE         50880019
         B     CHKPARNR                UP RIGHT PAREN COUNT             51040019
         SPACE 1                                                        51120019
CHK4R    EQU   *                                                        51200019
         OI    PARMSWCH,SET4REPL       SET REPLACE- NO NEW NAME SW      51520019
         B     ON2TST                  UP POINTERS                      51620019
         SPACE 1                                                        51760019
MEMBRCD  EQU   *                                                        51840019
         TM    PARMSWCH,HASNEWNM       HAVE A NEW NAME                  51920019
         BZ    ONLYOLD                 NO                               52000019
         OI    TABLE0(GR8),SEBIT2      FLAG AS HAS A NEW NAME           52080019
ONLYOLD  TM    PARMSWCH,SET4REPL       REPLACE OPTION                   52160019
         BZ    NOREPL                  NO REPLACE                       52240019
         OI    TABLE0(GR8),REPLACOP    SET REPLACE OPTION               52320019
NOREPL   EQU   *                                                        52400019
         TM    PARMSWCH,HASNEWNM       NEW NAME                         52480019
         BZ    NAMEDONE           NO                                    52560019
         LA    GR9,LEN8                                                 52640019
         LA    GR8,LEN10(GR8)          UP SE TABLE POINTER              52720019
         CR    GR10,GR9                NEW NAME GREATER THAN 8 BYTES    52800019
         BH    BADPARM            IF SO, ITS TOO LONG                   52880019
         MVC   TABLE0(LEN10,GR8),FLAGBYTS CLEAR FLAGS, BLK NAME SE TAB  52960019
         L     GR1,CSTOREG+SAV4        GET START OF NEW NAME            53040019
         BCTR  GR10,GR0                DECREMENT LENGTH FOR EXECUTE     53120019
         EX    GR10,MOVEDDNM           MOVE MEMBER NAME TO SE TABLE     53200019
         OI    TABLE0(GR8),SEBIT1      FLAG AS THIS IS NEW NAME         53280019
         LH    GR6,ENCT                                                 53360019
         LA    GR6,UP1(GR6)                                             53440019
         STH   GR6,ENCT                UP SE ENTRY COUNT                53520019
         LH    GR6,NNCT1                                                53600019
         LA    GR6,UP1(GR6)            INCREMENT NEW NAME COUNT         53680019
         STH   GR6,NNCT1               STORE UPPED NEW NAME COUNT       53760019
         TM    PARMSWCH,SET4REPL       REPLACE OPTION                   53840019
         BZ    NAMEDONE                NO REPLACE                       53920019
         OI    TABLE0(GR8),SEBIT3      FLAG AS MEMBER REPLACE OPTION    54000019
         SPACE 1                                                        54080019
NAMEDONE EQU   *                                                        54160019
         LA    GR8,LEN10(GR8)          UP TO NEXT SLOT SE TABLE         54240019
         LH    GR6,ENCT                                                 54320019
         LA    GR6,UP1(GR6)                                             54400019
         STH   GR6,ENCT                UP SE ENTRY COUNT                54480019
         NI    PARMSWCH,FF-SET4REPL-HASNEWNM  RESET SWITCHES            54560019
         ST    GR8,SESTOP              END OF SE TABLE                  54640019
         SR    GR7,GR7                                                  54720019
         TM    CCDELIM,BLANKSGN        JUST REACHED A BLANK             54800019
         BZ    INDDLOOP                NO- SCAN TILL BLANK              54880019
         CLI   SCAN0(GR3),COMMA        REALLY STOPPED AT COMMA          54960019
         BNE   SET4READ                NO- ALL DONE                     55040019
         SPACE 1                                                        55120019
CHKCONTY EQU   *                                                        55200019
         TM    CPARAMSW,COL72BLK       PUNCH IN CONTINUE COLUMN 72      55280019
         BZ    CONTINV            IF NOT, SET UP INVALID CONTINUE MSG   55340019
         MVI   CCDELIM,CRESET0         RESET STOPPED ON BLANK SWITCH    55400019
         LA    GR10,SCANSOME           RETURN FROM READING NEXTCARD     55440019
         B     GETPARM                 GET NEXT CARD                    55480019
         SPACE 1                                                        55520019
TYPCPANL EQU   *                                                        55600019
         TM    PARMSWCH,COPYNOW        ON COPY STATEMENT                55680019
         BZ    SCANSEQR                NO- SEQUENCE ERROR               55730019
         TM    CCSWITCH,FIRSTSCN       FIRST ENTRY                      55780019
         BZ    SCANERRM                NO, MIXED MODE                   55810019
         OI    CCSWITCH,IEBCOPYC       FLAG AS IEBCOPY CONTROL CARDS    55840019
         BAL   GR14,RDCARD             GET PARAMETER                    55920019
         CLI   CSTOREG+LEN3,PARCNT  PARAMETER COUNT GREATER THAN 1      56000019
         BNE   BADPARM            IF SO, INVALID CTL STMT               56080019
         L     SCANADR,CSTOREG+SAV4    START OF PARAMETER               56160019
         CLI   SCAN0(SCANADR),EX       E FOR EXCLUDE                    56240019
         BNE   CHKIS                   CHECK IF INCLUSIVE (SELECT)      56320019
         OI    COMDCDSW,EXCLUDES       SET EXCLUDE SWITCH               56400019
         B     CHLAST                  CHECK IF LAST PARAMETER SCANNED  56480019
         SPACE 1                                                        56560019
CHKIS    EQU   *                                                        56640019
         CLI   SCAN0(SCANADR),IN       I FOR SELECT                     56720019
         BNE   BADPARM                 BAD PARAMETER                    56800019
         OI    COMDCDSW,SELECTSC       SET SELECT SWITCH                56880019
         B     CHLAST                  CHECK IF LAST PARAMETER          56960019
         SPACE 1                                                        57040019
BADPARM  EQU   *                                                        57120019
         LA    GR2,INVALSPR                                             57200019
         B     GIVESCNE           PRT CARD, SET RC TO 4, WRT MSG        57300019
         SPACE 1                                                        57440019
INVALODL EQU   *                                                        57520019
         LA    GR2,INVALIST            OUTDD NOT ON COPY CARD           57600019
         B     GIVESCNE           PRT CARD, SET RC TO 4, WRT MSG        57700019
         SPACE 1                                                        57840019
BADMEMBS EQU   *                                                        57920019
         LA    GR2,MEMNOSE                                              58000019
         B     GIVESCNE           PRT CARD, SET RC TO 4, WRT MSG        58100019
         SPACE 1                                                        58150022
CONTINV  EQU   *                                                 A48799 58200022
         LA    GR2,INVALCON            INVALID CONTINUATION      A48799 58210022
         B     GIVESCNE                GIVE MESSAGE              A48799 58220022
         SPACE 1                                                        58240019
BADREPLC EQU   *                                                        58320019
         LA    GR2,INVALREP                                             58400019
         B     GIVESCNE           PRT CARD, SET RC TO 4, WRT MSG        58500019
         SPACE 1                                                        58640019
NORENAME EQU   *                                                        58720019
         LA    GR2,NORREN                                               58800019
         B     GIVESCNE           PRT CARD, SET RC TO 4, WRT MSG        58900019
         SPACE 1                                                        59040019
MISSPARN EQU   *                                                        59120019
         LA    GR2,ONEQPARN       MESSAGE CODE                          59200019
         B     GIVESCNE           PRT CARD, SET RC TO 4, WRT MSG        59500019
         SPACE 1                                                        59840019
PRTNULL1 EQU   *                                                        59860019
         TM    PARMSWCH,FLUSHSW        FLUSHING                         59880019
         BO    IGNORE                  YES- GET NEXT CARD               59910019
NULLP    EQU   *                                                        59940019
         LA    GR2,NULLPARM            NULL PARAMETER MESSAGE           60000019
         B     GIVESCNE           PRT CARD, SET RC TO 4, WRT MSG        60100019
         SPACE 1                                                        60240019
NOINDDSP EQU   *                                                        60320019
         LA    GR2,NOINDD                                               60400019
         B     GIVESEQS                GIVE MESSAGES                    60560019
         SPACE 1                                                        60640019
OUTOFCOR EQU   *                                                        60720019
         LA    GR2,COREGONE                                             60820019
         B     ERRSTOP                 GIVE MESSAGE AND QUIT            60960019
         SPACE 1                                                        61440019
SCANERRM EQU   *                                                        61680019
         LA    GR2,MODEERR                                              61760019
         B     ERRSTOP                 GIVE MESSAGE                     61840019
         SPACE 1                                                        61920019
MULTS    EQU   *                                                        62000019
         LA    GR2,MULTSSEE                                             62080019
         SPACE 1                                                        62240019
GIVESEQS EQU   *                                                        62320019
         BAL   GR11,WRITEOUT      PRT CARD, SET RC TO 4, WRT MSG        62380019
SCANSEQR EQU   *                                                        62440019
         LA    GR2,SEQERROR            STATEMENT SEQUENCE ERROR         62480019
         B     ERRSTOP                 GIVE MESSAGE                     62520019
         SPACE 1                                                        62560019
MSSEQER  EQU   *                                                        62640019
         LA    GR2,SEQERROR                                             62740019
         BAL   GR11,WRITEOUT      PRT CARD, SET RC TO 4, WRT MSG        62760019
         B     NEWSCAN                 SCAN THIS COPY- DON'T FLUSH IT   62780019
         SPACE 1                                                        62800019
COMPEXEC EQU   *                                                        63000019
         LA    GR2,PARMEXEC            MESSAGE NUMBER                   63220019
         LA    GR11,COMPRETN           RETURN TO OUTDD ANAL             63230019
         NI    COMDCDSW,FF-COMPRESS    RESET COMPRESS SWITCH            63240019
         B     SETC4                   GIVE MESSAGE              A44144 63250022
         SPACE 1                                                        63260019
GIVESCNE EQU   *                                                        63280019
         BAL   GR11,WRITEOUT      PRT CARD, SET RC TO 4, WRT MSG        63360019
SCANERR  EQU   *                                                        63440019
         LA    GR2,SCANMSG                                              63540019
ERRSTOP  EQU   *                                                        63680019
         TM    PARMSWCH,FLUSHSW        STATEMENT ERROR WHILE FLUSHING   63760019
         BO    IGNORE             YES                                   63850019
         MVI   PARMSWCH,FLUSHSW        SET FLUSH SWITCH                 63940019
         TM    CPARAMSW,COL72BLK       IS THIS CARD CONTINUED    A48742 63990022
         BZ    WRITEOUT                NO                        A48742 64040022
         OI    SCANSWCH,NOCMMEXP       SET BYPASS SCAN SWITCH    A48742 64090022
         SPACE 1                                                        64160019
WRITEOUT EQU   *                                                        64240019
         TM    CCSWITCH,CARDPRTD       WAS CARD PRINTED                 64246019
         BO    SETC8                   YES                       A44144 64252022
         BAL   GR9,PRNTCRD             PRINT THE CARD                   64258019
SETC8    EQU   *                                                 A44144 64260022
         CLI   RCBUF,COMPCDE           IS RETURN CODE 8 OR MORE  A44144 64262022
         BNL   STRMESS                 YES- DO NOT CHANGE IT     A44144 64262422
         MVI   RCBUF,COMPCDE           SET CODE TO 8             A44144 64262822
         B     STRMESS                 AND STORE MSG NUMBER      A44144 64263222
SETC4    EQU   *                                                        64264019
         CLI   RCBUF,COMPCD            IS COMPLETION CODE 4 OR MORE     64284019
         BNL   STRMESS                 YES- DO NOT CHANGE IT            64320019
         MVI   RCBUF,COMPCD            SET CODE TO 4                    64360019
STRMESS  EQU   *                                                        64400019
         STH   GR2,MSGLIST             STORE MESSAGE NUMBER             64440019
         MVI   MSGLIST,LASTMSG         FLAG AS LAST MESSAGE             64480019
KEEPCODE EQU   *                                                        64660019
         L     GR15,VIEBVMS            MESSAGE WRITER                   64730019
         BALR  GR14,GR15               GIVE THE MESSAGE                 64800019
         TM    PARMSWCH,FLUSHSW        ERROR                            64870019
         BCR   MS8,GR11                RETURN CARD OR MESSAGE PRINTED   64920019
         NI    PARMSWCH,FF-FLUSHSW     RESET FLUSH SWITCH               64970019
         NI    SCANSWCH,FF-NOCMMEXP    RESET BYPASS SCAN SWITCH  A48742 64980022
         MVI   VTMFLG1,UNUSEND         SET SWITCH FOR VTM               65020019
         L     GR15,VIEBVTM            ADDRESS OF TERMINATE ROUTINE     65060019
         BALR  GR14,GR15               ENTER TERMINATE-- NO RETURN      65160019
         SPACE 1                                                        65520019
IEBSEF   EQU   *                       SYSIN EODAD ROUTINE              65600019
IEBSCF   EQU   IEBSEF                                                   65640019
         OI    CCSWITCH,SYSINEOF       FLAG AS END OF FILE SYSIN        65680019
         TM    CPARAMSW,COL72BLK  EOF AFTER CONTINUED CARD              65700019
         BO    CONTINV            YES- INVALID CONTINUATION             65720019
         TM    PARMSWCH,FLUSHSW        EOF WHILE FLUSHING CARDS         65760019
         BO    TERMS                   GIVE EOF MESSAGE AND QUIT        65840019
         TM    COMDCDSW,COPYDONE       HAD A COPY STATEMENT             65920019
         BZ    FULLCOPY                NO- IEBCOPY FULL COPY            66000019
         TM    CCSWITCH,IEBCOPYC       IEBCOPY CONTROL CARDS            66080019
         BO    CHKSMEM                 YES- CHECK IF HAVE ALL CARDS     66160019
         TM    COMDCDSW,NEWOUT+NEWINDD HAD AN OUTDD AND AN INDD         66240019
         BO    GETOUT                  BEGIN COPY                       66320019
         BM    NOINDDSP                NO- SET TO ISSUE ERROR MESSAGE   66400019
         SPACE 1                                                        66480019
FULLCOPY EQU   *                                                        66560019
         OI    CCSWITCH,IEBCOPYC       FLAG AS IEBCOPY STATEMENT        66640019
         BAL   GR9,SET4OLDC            SET UP INDD TABLE ENTRY SYSUT1   66720019
         TM    CCSWITCH,SYSINEOF       LAST CARD AN EOF                 66730019
         BO    SETODS                  YES- DON'T READ ANY MORE CARDS   66740019
         OI    COMDCDSW,COPYDONE       SET AS COPY CARD SCANNED         66750019
         BAL   GR9,READCC              READ ANOTHER CARD                66760019
         SPACE 1                                                        66800019
SETODS   EQU   *                                                        66880019
         OI    FLG4,NEWODS+NEWCOPOP    SET SWITCHES TO INDICATE A NEW   66930019
*                                        COPY OPERATION HAS BEEN FOUND  66980019
         SPACE 1                                                        67040019
GETOUT   EQU   *                                                        67120019
         MVC   COUNT(LEN2),ENCT        NEED SE COUNT EXCLUDE/SELECT     67200019
         TM    COMDCDSW,SELECTSC       SELECT OPERATION                 67280019
         BZ    TESTEX                  NO- EXCLUDE OR FULL COPY         67480019
         MVC   CTAD(LEN4),SEBEGIN      STORE CTAD FOR SELECT COPY       67680019
         B     DOCOPY                  CONTINUE                         68000019
         SPACE 1                                                        68080019
TESTEX   EQU   *                                                        68160019
         XC    NNCT1(LEN2),NNCT1       CLEAR NEW NAME COUNT             68240019
         XC    ENCT(LEN2),ENCT         CLEAR FOR EXCLUDE/FULL           68320019
         MVC   CTAD(LEN4),SESTOP       SET TO SESTOP ON FULL/EXCLUDE    68400019
         TM    COMDCDSW,EXCLUDES       EXCLUSIVE COPY                   68480019
         BO    DOCOPY                  YES- FINISH UP                   68560019
         XC    COUNT(LEN2),COUNT       CLEAR SE COUNT ON FULL COPY      68640019
         MVC   SEBEGIN(LEN4),SESTOP    FULL COPY NO ENTRIES IN SE TABLE 68720019
         SPACE 1                                                        68800019
DOCOPY   EQU   *                                                        69600019
         NI    CCSWITCH,FF-FIRSTSCN    TURN OFF FIRST ENTRY SWITCH      69900019
         L     GR13,LEN4(GR13)         SAVE AREA POINTER                70200019
         RETURN (14,12)                RETURN TO CALLER                 70600019
         SPACE 1                                                        70700019
TERMS    EQU   *                                                        70800019
         LA    GR2,ENDMESS             SYSIN EOF MESSAGE                70900019
         OI    PARMSWCH,FLUSHSW        SET TO RETURN TO TERMINATE       70950019
         OI    IOEF2,NOSYSIN           SET SWITCH FOR VTM               70970019
         B     STRMESS                 GIVE MESSAGE- NO RETURN          71000019
         SPACE 1                                                        71600019
READCC   EQU   *                                                        71680019
         LA    GR0,CCIMAGE             CONTROL CARD BUFFER              71760019
         LA    GR1,CARDCB              SYSIN DCB                        71840019
         LA    GR8,SYSINERX            SYSIN ERROR RETURN ADDRESS       71880019
         GET   (GR1),(GR0)             GET NEXT STATEMENT               71890019
         NI    CCSWITCH,FF-CARDPRTD    RESET CARD PRINTED SWITCH        71910019
         BR    GR9                     RETURN                           71930019
         SPACE 1                                                        71940019
SYSINERX EQU   *                                                        71950019
         MVI   VTMFLG1,UNUSEND         SET SWITCH FOR VTM               71952019
         OI    IOEF2,NOSYSIN                                            71954019
         OI    CCSWITCH,SYSINEOF       FAKE AN EOF READ                 71958019
         OI    PARMSWCH,FLUSHSW        SET FLUSH SWITCH                 71998019
         B     KEEPCODE                GIVE SYNAD MESSAGE               72038019
         SPACE 1                                                        72080019
PRNTCRD  EQU   *                                                        72160019
         MVI   MSGLIST,LASTMSG+CTLCD   SET TO PRINT CONTROL CARD        72460019
         MVI   MSGLIST+UP1,CRESET0     CLEAR MSG NUMBER                 72480019
         L     GR15,VIEBVMS            MESSAGE WRITER                   72510019
         BALR  GR14,GR15               PRINT THE CARD                   72560019
         OI    CCSWITCH,CARDPRTD       SET CARD PRINTED SWITCH          72610019
         BR    GR9                     RETURN- CARD IS PRINTED          72660019
         SPACE 1                                                        72760019
CHKCOPY  EQU   *                       ANALYSE COPY COMMAND             73440019
         TM    PARMSWCH,FLUSHSW        DOING A FLUSH                    73520019
         BO    NEWSCAN                 YES- RESET COMMAND SWITCHES      73600019
         NI    CCSWITCH,FF-COMDNOW-MULTSE  RESET SWITCHES               73680019
         TM    COMDCDSW,COPYDONE       PREVIOUS COPY DONE               73760019
         BZ    NEWSCAN                 NO- SCAN REST OF CARD            73840019
         SPACE 1                                                        73920019
*  NOW MUST ENTER MAINFLOW TO FINISH UP PREVIOUS COPY OPERATION         74000019
         SPACE 1                                                        74080019
KEEPCOPY EQU   *                                                        74120019
         TM    CCSWITCH,IEBCOPYC       HAVE IEBCOPY CONTROL CARDS       74160019
         BO    CHKSMEM                 YES- CHECK IF HAVE ALL CARDS     74240019
         TM    COMDCDSW,NEWINDD        INDD KEYWORD BEFORE COPY         74320019
         BZ    MSSEQER                 NO- SEQUENCE ERROR COPY FOLLOWS  74400019
         NI    COMDCDSW,SELECTSC+EXCLUDES+COMPRESS+LISTSW RESET REST    74480019
         NI    CPARAMSW,COL72BLK       KEEP FLAG COLUMN 72 NOT BLANK ON 74560019
         MVI   CCSWITCH,CRESET0        RESET SWITCH                     74640019
         OI    PARMSWCH,COPYNOW        SET SWITCH TO SHOW COPY PENDING  74680019
         B     GETOUT                  FINISH THIS COPY STEP            74720019
         SPACE 1                                                        74800019
NEWSCAN  EQU   *                                                        74880019
         MVI   PARMSWCH,COPYNOW        SET FOR SCAN, RESET FLUSH        74920019
         NI    SCANSWCH,FF-NOCMMEXP    RESET BYPASS SCAN SWITCH  A48742 74930022
         TM    CCSWITCH,CARDPRTD       IF CONTINUED WAS PRINTED         74960019
         BO    PRNTDONE                ALREADY PRINTED                  75000019
         MVI   LINECT,CRESET0          RESET LINE COUNT TO FORCE HEADER 75040019
         BAL   GR9,PRNTCRD             PRINT HEADER AND COPY CARD       75080019
PRNTDONE EQU   *                                                        75120019
         NI    COMDCDSW,COMPRESS       SAVE COMPRESS FLAG               75200019
         NI    CPARAMSW,FF-PARTPARM-CONTINY  RESET SOME SWITCHES        75240019
         TM    CCSWITCH,LASTPARM       LAST PARAMETER SCANNED           75280019
         BZ    TOSCAN                  NO- GET PARAMETERS               75310019
         TM    CCSWITCH,FIRSTSCN       FIRST ENTRY                      75340019
         BZ    SCANERRM                NO, MIXED CODE                   75370019
         B     FULLCOPY                DO FULL COPY ONLY                75400019
         SPACE 1                                                        75443019
CHKSMEM  EQU   *                                                        75446019
         TM    COMDCDSW,EXCLUDES+SELECTSC  SELECT OR EXCLUDE            75449019
         BZ    SETODS                  NO                               75452019
         TM    COMDCDSW,MEMBRCD1       HAVE MEMBER CARD                 75455019
         BO    SETODS                  YES                              75458019
         TM    COMDCDSW,EXCLUDES       EXCLUSIVE COPY- NO MEMBER NAMES  75461019
         BO    DOFULLY                 DEFAULT TO FULL COPY             75464019
         LA    GR2,NOCOPY              WILL NOT COPY                    75467019
         B     ERRSTOP                 GIVE MESSAGE AND QUIT            75470019
         SPACE 1                                                        75473019
DOFULLY  EQU   *                                                        75476019
         NI    COMDCDSW,FF-EXCLUDES    RESET EXCLUSIVE COPY INDICATOR   75479019
         LA    GR2,DOFULLCP                                             75482019
         BAL   GR11,SETC4              GIVE MESSAGE              A44144 75491022
         BAL   GR9,SET4OLDC            SET UP INDD TABLE                75494019
         B     SETODS                  CONTINUE                         75506019
         EJECT                                                          75520019
*********************************************************************** 75600019
*                      CONTROL STATEMENT ANALYSIS ROUTINES            * 75680019
*********************************************************************** 75760019
         SPACE 1                                                        75840019
RDCARD   EQU   *                                                        75920019
         MVI   CCDELIM,CRESET0         RESET DELIMITER SWITCH           76080019
         ST    GR14,SARG               SAVE RETURN REGISTER             76160019
         TM    CPARAMSW,READ1          IS READ CARD SWITCH ON           76240019
         BZ    GOTCARD                 DON'T READ ANOTHER CARD YET      76320019
         SPACE 1                                                        76400019
KGTCD    EQU   *                                                        76480019
         NI    CPARAMSW,PARTPARM+CONTINY+COL72BLK SAVE ALL CONT SWITS.  76530019
         BAL   GR9,READCC              GET NEXT CARD FROM SYSIN         76640019
         NI    CPARAMSW,FF-COL72BLK    RESET CONTINUED CARD SWITCH      76720019
         CLI   CCIMAGE+COL71,BLANKCOL  COLUMN 72 BLANK                  76800019
         BE    SCANCHK                 YES                       A48742 76880022
         OI    CPARAMSW,COL72BLK       COLUMN 72 NOT BLANK              76960019
SCANCHK  EQU   *                                                 A48742 77010022
         TM    SCANSWCH,NOCMMEXP       SCAN NEEDED               A48742 77020022
         BO    IGNORE                  NO                        A48742 77030022
         B     KPFOL                   START SCAN                A48742 77040022
         SPACE 1                                                        77120019
GOTCARD  EQU   *                                                        77200019
         L     GR3,CSTOREG+SAV8        LOAD ADDRESS OF LAST PASS        77280019
         TM    CPARAMSW,PARMCOME       DOES A PARAMETER FOLLOW          77360019
         BO    SCANCARD                YES- SCAN THE CARD               77440019
         SPACE 1                                                        77520019
KPFOL    EQU   *                                                        77600019
         LA    GR9,KOMMD               RETURN ADDRESS                   77620019
NAMESCAN EQU   *                                                        77640019
         LA    GR3,CCIMAGE             START OF CONTROL STATEMENT       77680019
         CLC   SCAN0(LEN3,GR3),SLASHEOF  /* CARD                        77690019
         BE    IEBSEF                  YES- ENTER EODAD ROUTINE         77700019
         SR    GR7,GR7                 CLEAR COUNT BUFFER               77710019
         LA    GR1,LEN8                                                 77730019
KNAME    EQU   *                                                        77760019
         CLI   SCAN0(GR3),BLANKCOL     IS COLUMN BLANK                  77800019
         BCR   MS8,GR9                 FIRST COLUMN BLANK OR NAME ENDS  77840019
         LA    GR7,UP1(GR7)            UP CHARACTER COUNT               77880019
         CR    GR7,GR1                 NAME GREATER THAN 8 CHARACTERS   77930019
         BH    BADPARM                 YES- INVALID NAME                77960019
         LA    GR3,UP1(GR3)            GO TO NEXT COLUMN                78020019
         B     KNAME                   CHECK FOR BLANK                  78080019
         SPACE 1                                                        78160019
KOMMD    LA    GR3,UP1(GR3)            SPACE TO NEXT COLUMN AFTER NAME  78240019
         LA    GR5,CCIMAGE+COL70       LAST COLUMN (71)                 78320019
         OI    CCSWITCH,COMDNOW        SET COMMAND SWITCH               78400019
KABC     CLI   SCAN0(GR3),BLANKCOL     IS COLUMN BLANK                  78480019
         BNE   SCANCARD                NO- CHECK PARAMETERS             78560019
         CR    GR3,GR5                 IS THIS THE END COLUMN           78640019
         BE    PRTNULL1                YES- END OF CARD REACHED         78720019
         LA    GR3,UP1(GR3)            ADJUST POINTER TO NEXT COLUMN    78800019
         B     KABC                    CONTINUE SCAN                    78880019
         SPACE 1                                                        78960019
SCANCARD EQU   *                                                        79040019
         MVC   CCDELIM2(UP1),CCDELIM   SAVE DELIMETER SWITCH SETTING    79120019
         MVI   CCDELIM,CRESET0         RESET DELIMITER SWITCH           79200019
         LR    GR1,GR3                 SAVE POINTER TO PRESENT COLUMN   79280019
         ST    GR3,CSTOREG+SAV4        SAVE START OF PARAMETER          79320019
         SR    GR7,GR7                 CLEAR LENGTH REGISTER            79360019
         LA    GR5,CCIMAGE+COL70       LAST COLUMN (71)                 79440019
         TM    CPARAMSW,PARTPARM       PARTIAL PARAMETER                79520019
         BZ    KCONT                   NO- CONTINUE                     79620019
         TM    PARMSWCH,COMDPART       COMMAND WORD                     79760019
         BO    DONTRSTC                YES- KEEP COMDNOW SWITCH ON      79840019
         NI    CCSWITCH,FF-COMDNOW     RESET ANALYSING COMMAND SWITCH   79920019
DONTRSTC EQU   *                                                        80000019
         TM    CCSWITCH,CARDPRTD  WAS CARD PRINTED                      80030019
         BO    NOPR               IF SO, DONT PRINT IT AGAIN            80060019
         BAL   GR9,PRNTCRD        ELSE PRINT CONTINUED CARD             80090019
NOPR     EQU   *                                                        80120019
         L     GR1,CSTOREG+SAV4        RESTORE POINTER                  80220019
         TM    CPARAMSW,CONTINY        FROM MEMBER/INDD SCAN            80400019
         BZ    KOMPAR                  NO- CONTINUE SCAN                80480019
         BCTR  GR3,GR0                 BACK UP POINTER BY ONE           80560019
         NI    PARMSWCH,FF-COMDPART    RESET COMDPART SWITCH            80640019
         B     TESTRETN                STORE AND RETURN                 80720019
         SPACE 1                                                        80800019
KFORZRO  EQU   *                                                        80880019
         TM    CCDELIM,BLANKSGN        IS IT A BLANK                    80960019
         BZ    BADPARM                 INVALID NAME/PARAMETER           81040019
         B     NOTFIRST                NO FIRST PARAMETER PART FAKE IT  81120019
         SPACE 1                                                        81200019
KCONT    EQU   *                                                        81280019
         NI    CCSWITCH,FF-LASTPARM    RESET SWITCH                     81360019
         CR    GR3,GR5                 SCANNED BEYOND COLUMN 71         81440019
         BNH   KOMPAR                  NO- CHECK PARAMETERS             81520019
         SPACE 1                                                        81600019
NOTFIRST EQU   *                                                        81680019
         TM    CPARAMSW,COL72BLK       CONTINUATION PUNCH IN 72         81760019
         BZ    CONTINV            IF NOT, CONTINUATION IS INVALID       81840019
         SR    GR7,GR7                 NO COUNT FOR FIRST PARAMETER     81920019
         B     APARM0                  SET UP FOR PARTIAL PARAMETER     82000019
         SPACE 1                                                        82080019
KOMPAR   CLI   SCAN0(GR3),EQUAL        IS CHARACTER A DELIMITER         82160019
         BH    KEEPON             NO DELIMITER. CONT SCAN      @ZA07365 82240099
         TM    PARMSWCH,SCANNAME  SCANNING NAME?               @ZA07365 82245099
         BNO   DELIMIT            NO,GO AND TEST DELIMITER     @ZA07365 82250099
         CLI   SCAN0(GR3),ADOLLAR IS CHARACTER A DOLLAR?       @ZA07365 82255099
         BE    KEEPON             YES.VALID.CONTINUE SCAN      @ZA07365 82260099
         CLI   SCAN0(GR3),APOUND  IS CHARACTER A POUND?        @ZA07365 82265099
         BE    KEEPON             YES.VALID.CONTINUE SCAN      @ZA07365 82270099
         CLI   SCAN0(GR3),ANAT    IS CHARACTER AN AT?          @ZA07365 82275099
         BNE   DELIMIT            NO,GO AND TEST DELIMITER     @ZA07365 82280099
KEEPON   LA    GR7,UP1(GR7)       ADD ONE TO LENGTH            @ZA07365 82320099
         CR    GR3,GR5                 IS THIS THE END COLUMN           82400019
         BE    KPTERR                  YES- SAVE PARTIAL PARAMETER      82480019
         LA    GR3,UP1(GR3)            UP POINTER TO NEXT COLUMN        82560019
         B     KOMPAR                  CONTINUE SCANNING FOR DELIMITER  82640019
         SPACE 1                                                        82720019
KPTERR   EQU   *                                                        82800019
         TM    CCSWITCH,COMDNOW   SCANNING COMMAND WORD                 82880019
         BZ    NOTCOMD                 NO                               82920019
         CLI   SCAN0(GR1),AC           WORD STARTS WITH C               82960019
         BNE   PRTANDGO                NO                               83000019
         TM    COMDCDSW,COPYDONE       MIGHT BE COPY                    83020019
         BO    KEEPCOPY                NOT FIRST COPY                   83040019
         MVI   LINECT,CRESET0          RESET LINE COUNT TO FORCE HEADER 83060019
PRTANDGO EQU   *                                                        83080019
         BAL   GR9,PRNTCRD             PRINT COPY CARD                  83100019
         L     GR1,CSTOREG+SAV4        RESTORE POINTER TO START OF PARM 83150019
         OI    PARMSWCH,COMDPART       SET TO KEEP 'COMDNOW' SET        83200019
NOTCOMD  EQU   *                                                        83280019
         TM    CPARAMSW,COL72BLK       IS COLUMN 72 BLANK               83360019
         BZ    KETBYP                  YES- SET LAST PARM GET NEXT CARD 83440019
KPART    EQU   *                                                        83520019
         LR    GR2,GR7                                                  83600019
         BCTR  GR2,GR0                 DECREMENT FOR EXECUTE            83680019
         EX    GR2,MOVEP               SAVE PARTIAL PARAMETER           83760019
APARM0   EQU   *                                                        83840019
         OI    CPARAMSW,PARTPARM       SET PARTIAL PARAMETER SWITCH     83920019
         ST    GR7,CSTOREG             SAVE PARTIAL PARAMETER COUNT     84000019
         B     KGTCD                   GET NEXT CARD                    84080019
         SPACE 1                                                        84160019
KETBYP   EQU   *                                                        84240019
         OI    CCSWITCH,LASTPARM       NO MORE PARAMETERS               84320019
KPASS    LA    GR3,UP1(GR3)            UP POINTER TO NEXT COLUMN        84400019
KWENT    EQU   *                                                        84480019
         NI    CPARAMSW,FF-READ1-PARMZERO  RESET SWITCHES               84560019
         ST    GR7,CSTOREG             STORE LENGTH REGISTER            84640019
TESTRETN EQU   *                                                        84720019
         L     GR14,SARG               RESTORE RETURN REGISTER          84800019
         ST    GR1,CSTOREG+SAV4        STORE SCAN ADDRESS REGISTER      84880019
         ST    GR3,CSTOREG+SAV8        STORE ADDRESS REGISTER           84960019
         BR    GR14                    RETURN TO MAINSTREAM             85040019
         SPACE 1                                                        85120019
DELIMIT  NI    PARMSWCH,FF-SCANNAME RESET SCAN OF NAME SWMN    @ZA07365 85200099
         CR    GR3,GR5            IS THIS END COLUMN           @ZA07365 85205099
         BE    SETCC2                  YES- SET INDICATOR               85280019
         TM    CPARAMSW,PARTPARM       IS PARTIAL PARAMETER SWITCH ON   85360019
         BO    KPPAR                   YES-COMPLETE PARAMETER           85440019
         B     TESTPAR                 CHECK PARAMETER                  85520019
         SPACE 1                                                        85600019
SETCC2   EQU   *                                                        85680019
         OI    CPARAMSW,DELIMEND       SET DELIMITER IN END COLUMN SW   85760019
         CLI   SCAN0(GR3),BLANKCOL     BLANK                            85780019
         BE    ABLNKCOL                YES                              85800019
         TM    CPARAMSW,COL72BLK       PUNCH IN COLUMN 72               85840019
         BZ    CONTINV            IF NOT, CTL STMT IS INVALID           85920019
         TM    CPARAMSW,PARTPARM       PARTIAL PARAMETER                86000019
         BO    CONTINV                 SECOND LEVEL CONTINUATION        86080019
         SPACE 1                                                        86160019
TESTPAR  LTR   GR7,GR7                 TEST IF LENGTH ZERO              86240019
         BC    MS2,DELIM               LENGTH NOT ZERO                  86320019
         OI    CPARAMSW,PARMZERO       SET LENGTH ZERO SWITCH           86400019
         SPACE 1                                                        86480019
DELIM    CLI   SCAN0(GR3),EQUAL        TEST IF DELIMITER IS AN EQUAL    86560019
         BE    KEY                     YES- GO TO KEY WORD ROUTINE      86640019
         CLI   SCAN0(GR3),COMMA        TEST FOR COMMA                   86720019
         BE    PARAMC                  YES- GO TO PARAMETER ROUTINE     86800019
         CLI   SCAN0(GR3),BLANKCOL     TEST FOR BLANK                   86880019
         BNE   BADPARM                 BAD PARAMETER                    86960019
ABLNKCOL EQU   *                                                        87000019
         TM    CCSWITCH,COMDNOW        IS COMMAND SWITCH ON             87040019
         BO    KPCMD                   YES-GO TO ADJUST POINTER         87120019
         MVI   CCDELIM,BLANKSGN        SET BLANK DELIMITER              87200019
DECID    TM    CPARAMSW,DELIMEND       IS DELIMITER IN END COLUMN       87280019
         BO    KWENT                   YES- SET UP COUNT OF FIRST PART  87360019
         TM    CPARAMSW,PARMZERO       LENGTH EQUAL ZERO                87440019
         BO    KFORZRO                 YES- SET UP ZERO LENGTH          87520019
         OI    CPARAMSW,PARMCOME       SET PARAMETER FOLLOWS SWITCH     87600019
         TM    CCDELIM,BLANKSGN        IS IT A BLANK                    87680019
         BZ    KPASS              NO- RETURN WITH POINTERS SET          87760019
         B     KETBYP                  CONTINUE                         87840019
         SPACE 1                                                        87920019
KEY      EQU   *                                                        88000019
         NI    CCSWITCH,FF-COMDNOW     RESET ANALYSING COMMAND SWITCH   88080019
         MVI   CCDELIM,EQUALSGN        SET DELIMITER AN EQUAL           88160019
         CLI   UP1(GR3),BLANKCOL       COLUMN AFTER = BLANK             88240019
         BNE   DECID                   GO TO CHECK DELIMITER            88320019
         TM    COMDCDSW,NEWOUT         HAD AN OUTDD                     88400019
         BZ    NULLP              IF NOT, SET UP NULL PARAMS MSG        88490019
         B     PRTNULL1                PRINT THE CARD                   88580019
         SPACE 1                                                        88720019
PARAMC   EQU   *                                                        88800019
         MVI   CCDELIM,COMMASGN        SET DELIMITER COMMA              88880019
         CLI   UP1(GR3),BLANKCOL       COLUMN AFTER COMMA BLANK         88960019
         BNE   DECID                   NO- CONTINUE                     89040019
         TM    CPARAMSW,COL72BLK       COLUMN 72 BLANK                  89120019
         BZ    CONTINV            IF NOT, CTL STMT IS INVALID           89200019
         B     DECID                   GO TO CHECK DELIMITER            89280019
         SPACE 1                                                        89360019
KPPAR    EQU   *                                                        89440019
        LA    GR9,DELIM               RETURN FROM PARAMETER CREATE      89520019
KCREATE  EQU   *                                                        89600019
         L     GR8,CSTOREG             SIZE OF FIRST PART OF PARAMETER  89680019
         LTR   GR7,GR7            IS LENGTH OF SECOND PART ZERO         89760019
         BC    MS8,KOMPL               YES- THE PARAMETER IS COMPLETE   89840019
         LA    GR6,SAVEPAPR            NO- ADDRESS OF FIRST PART        89920019
         AR    GR6,GR8                 ADDRESS TO MOVE IN SECOND PART   90000019
         LR    GR10,GR7                                                 90080019
         BCTR  GR10,GR0                DECREMENT COUNT FOR EXECUTE      90160019
         EX    GR10,MOVEPP             MOVE SECOND PART TO BUFFER       90240019
KOMPL    AR    GR7,GR8                 TOTAL LENGTH OF PARAMETER        90320019
         LA    GR1,SAVEPAPR            LOAD PARAMETER BUFFER ADDRESS    90400019
         MVC   CCDELIM2(UP1),CCDELIM   SAVE DELIMITER                   90480019
         MVI   CCDELIM,CRESET0         CLEAR DELIMITER SETTINGS         90560019
         NI    CPARAMSW,FF-CONTINY-PARTPARM  RESET CONTINUED SWITCHES   90640019
         NI    PARMSWCH,FF-COMDPART    RESET COMDPART SWITCH            90720019
         BR    GR9                     RETURN                           90800019
         SPACE 1                                                        90880019
KPCMD    LA    GR3,UP1(GR3)            ADJUST POINTER TO NEXT COLUMN    90960019
         CLI   SCAN0(GR3),BLANKCOL     IS COLUMN BLANK                  91040019
         BNE   KPCMA                   NO- CHECK FOR COMMA              91120019
         CR    GR5,GR3                 IS THIS THE LAST COLUMN          91200019
         BE    KETBYP                  YES- NO PARAMETER FOLLOWS        91280019
         B     KPCMD                   CONTINUE SCAN                    91360019
         SPACE 1                                                        91440019
KPCMA    CLI   SCAN0(GR3),COMMA        IS COMMA THE FIRST CHARACTER     91520019
         BE    KETBYP                  YES- NO PARAMETER FOLLOWS        91600019
         BCTR  GR3,GR0                 BACK UP REGISTER 3 TO PARAMETER  91680019
         OI    CPARAMSW,PARMCOME       SET PARAMETER FOLLOWS SWITCH     91760019
         B     KPASS                   GO TO RETURN                     91840019
         SPACE 1                                                        91920019
*                                                                       92000019
*                 EXECUTE STATEMENTS USED IN SCAN ROUTINE               92080019
*                                                                       92160019
         SPACE 1                                                        92240019
MOVEP    MVC   SAVEPAPR(UP1),SCAN0(GR1) STORE PARTIAL PARAMETER         92330019
MOVEPP   MVC   SCAN0(UP1,GR6),SCAN0(GR1) RECREATES PARAMETER            92420019
OPRLUP3  MVC   SARG(UP1),SCAN0(SCANADR)  MOVE TO SEARCH ARGUMENT        92510019
MOVEDDNM MVC   LEN2(UP1,GR8),SCAN0(GR1)  MOVE DD NAME TO INDD TABLE     92600019
MOVEOUTD MVC   DDNAME1(UP1,GR6),SCAN0(SCANADR) MOVE OUTDD NAME - OUTDCB 92690019
         SPACE 1                                                        92800019
LISTALLC DC    C'NO'                   DO NOT LIST MEMBERS COPIED       93360019
RPARN    DC    C'R)'                   FLAGS RENAME OR REPLACE          93520019
SLASHEOF DC    C'/* '                  SIGNALS EOF                      93560019
         SPACE 1                                                        93600019
FLAGBYTS DC    XL10'00004040404040404040'  INDD SE TABLE ENTRY FORM     93680019
BLANKS8  EQU   FLAGBYTS+2              DOUBLE WORD OF BLANKS            93760019
         SPACE 1                                                        93780019
         SPACE 1                                                        93840019
         SPACE 1                                                        94480019
PATCHLEN EQU   (*-IEBSCN)/20      LENGTH OF 5 PER CENT PATCH AREA       94580019
PATCH    DC    XL(PATCHLEN)'00'   5 PER CENT PATCH AREA          A41780 94680021
         EJECT                                                          94920019
         SPACE 1                                                        94960019
         SPACE 1                                                        95040019
         DCBD  DSORG=PS                                                 95340019
BOFLGS   EQU   DCBOFLGS-IHADCB         OPEN FLAGS IN DCB                95640019
DDNAME1  EQU   DCBDDNAM-IHADCB         DD NAME FIELD IN DCB             95940019
SYNADADR EQU   DCBSYNAD-IHADCB         SYNAD ADDRESS IN DCB             96240019
EOFADDRS EQU   DCBEODAD-IHADCB+1       EODAD ADDRESS IN DCB             96540019
         SPACE 1                                                        97120019
         EJECT                                                          97280019
IEBMCA   DSECT                                                          97360019
         IEBMCA                                                         97440019
         SPACE 1                                                        98240019
         END                                                            99040019
./  ADD  SSI=72900019,NAME=IEBVCT
 TITLE 'IEBVCT - ALPHA SORT OF SETAB / BLD NEWNAME PTRTAB - IEBDSCPY'   00200019
IEBVCT   CSECT                                                          00400019
*C912000                                                         A41780 00410000
*C094000,303000                                                  A44144 00420000
*A301500-302000,303500                                           A44144 00422000
**********************************************************************  00450019
*TITLE IEBVCT - IEBCOPY S/E TABLE SORT                                * 00500019
*                                                                     * 00550019
*STATUS  CHANGE LEVEL 001                                             * 00600019
*                                                                     * 00650019
*FUNCTION/OPERATION -SORTS THE S/E TABLE ALPHABETICALLY                 00700019
*                  BUILDS THE NEWNAME POINTER TABLE WHEN NEWNAMES     * 00750019
*                  HAVE BEEN SPECIFIED.                               * 00800019
*ENTRY POINTS - IEBVCT                                                * 00850019
*                                                                     * 00900019
*INPUT - A POINTER TO UNSORTED S/E TABLE                              * 00950019
*        A COUNT OF THE NUMBER OF ENTRIES IN THE S/E TABLE              01000019
*        A COUNT OF THE NUMBER OF NEW NAMES                             01050019
*        A POINTER TO LOWEST CURRENTLY AVAILABLE CORE -(TO BE USED    * 01100019
*        AS THE BEGINNING OF THE NEWNAME POINTER TABLE)                 01150019
*                                                                     * 01200019
*OUTPUT - AN ALPHABETICALLY SORTED S/E TABLE                          * 01250019
*        A NEWNAME POINTER TABLE(IF THERE ARE NEWNAMES)               * 01300019
*        A POINTER TO THE LOWEST CURRENTLY AVAILABLE CORE - (NOW POINT* 01350019
*        TO ONE BYTE AFTER THE END OF THE NEWNAME POINTER TABLE - IF  * 01400019
*        THERE ARE NEWNAMES5                                          * 01450019
*EXITS - NORMAL - RETURN TO CALLER                                      01480019
*      - ERROR  - ISSUE ERROR MSG AND LINK TO IEBVTM (NO RETURN)        01510019
*                                                                     * 01550019
*EXTERNAL ROUTINES - NONE                                             * 01600019
*                                                                     * 01650019
*TABLES WORK ARES - S/E TABLE,NEWNAME POINTER TABLE                   * 01700019
*                                                                     * 01750019
*ATTRIBUTES - SERIALLY REUSEABLE                                      * 01800019
**********************************************************************  01850019
FF       EQU   X'FF'                                                    02800019
REG0     EQU   0                                                        03200019
REG1     EQU   1                                                        03600019
REG2     EQU   2                                                        04000019
REG3     EQU   3                                                        04400019
REG4     EQU   4                                                        04800019
REG5     EQU   5                                                        05200019
REG6     EQU   6                                                        05600019
REG7     EQU   7                                                        06000019
REG8     EQU   8                                                        06400019
REG9     EQU   9                                                        06800019
REG10    EQU   10                                                       07200019
REG11    EQU   11                                                       07600019
REG12    EQU   12                                                       08000019
REG13    EQU   13                                                       08400019
REG14    EQU   14                                                       08800019
REG15    EQU   15                                                       09200019
SAV8     EQU   8                       SAVE AREA DISPLACEMENT           09220019
SAV4     EQU   4                       SAVE AREA DISPLACEMENT           09240019
LEN10    EQU   10                      DISPLACEMENT                     09260019
OFF      EQU   X'00'                   OFF SETTING OF INTERNAL SWITCHES 09280019
LEN2     EQU   2                       LENGTH OF 2                      09300019
LEN8     EQU   8                       LENGTH OF 8                      09320019
LEN4     EQU   4                       LENGTH OF 4                      09340019
DUPNAM   EQU   X'46'                   OFFSET IN MESSAGE FOR DUP NAME   09360019
LEN1     EQU   1                       DISPLACEMENT OF 1                09380019
RCD8     EQU   C'8'                    COMPLETION CODE           A44144 09400000
DISP0    EQU   0                       0 DISPLACEMENT                   09420019
LEN16    EQU   16                      LENGTH OF 16                     09440019
LEN0     EQU   0                       LENGTH OF 0                      09460019
         SAVE  (14,12),,*                                               09500019
         BALR  REG11,REG0         ESTABLISH ADDRESSIBILITY              09800019
         USING *,REG11                                                  10100019
         USING IEBMCA,4                                                 10400019
         LA    REG12,SV3                                                10700019
         ST    REG12,SAV8(REG13)       SAVE ADDRESS OF CALLEDROUTINES   11000019
*                                      SAVE AREA                        11300019
         ST    REG13,SAV4(REG12)       SAVE ADDRESS OF CALLERS SAVE     11600019
*                                      AREA                             11900019
         LR    REG13,REG12                                              12400019
         LA    REG2,LEN10                                               13200019
         ST    REG2,INCRE                                               14000019
         ST    REG2,LEN                                                 14200019
         MVI   SWITCH,OFF              INITIALIZE ALL INTERNAL SWITCHES 14300019
         L     REG2,SEBEGIN       ADDRESS OF SETAB                      14400019
         LH    REG7,COUNT         NUMBER OF ENTRIES IN SETAB            14800019
         LTR   REG7,REG7                                                15200019
         BZ    RETURN             FULL COPY, SO NO NEED TO SORT         15600019
         BCTR  REG7,REG0               SUBTRACT 1 FROM NO. ENTRIES      15900019
         LA    REG8,LEN10         MULTIPLY NUMBER OF CTLTAB ENTRIES-1   16200019
*                                 BY 10                                 16500019
         SR    REG6,REG6                                                17000019
         MR    REG6,REG8                                                17200019
         AR    REG7,REG2          ADD PRODUCT TO ADDRESS OF CTLTAB      17600019
         ST    REG7,ENDPTR                                              18000019
         CLC   COUNT(LEN2),ONE    ONLY ONE ENTRY IN SETAB               18100019
         BNH   PROCNN             YES - NO NEED TO SORT SETAB           18200019
         ST    REG2,ENTRY1        ENTRY1=SEBEGIN                        18600019
         ST    REG2,TABBEGIN      TABBEGIN=SEBEGIN                      19000019
         LA    REG2,LEN10(REG2)                                         19500019
         ST    REG2,ENTRY2        ENTRY2=SEBEGIN+10                     20000019
TWOLAST  CLC   ENDPTR,ENTRY2       IS ENTRY2 THE LAST ENTRY             21200019
         BH    COMPARE            IF NOT DON'T SET INDICATOR            21600019
         OI    SWITCH,ENDSORT      TURN ON ENDSORT                      22000019
COMPARE  L     REG5,ENTRY1                                              22400019
         L     REG6,ENTRY2                                              22800019
         TM    SWITCH,BUFSORT      IS BUFFER SORT BEING DONE            23200019
         BO    SKIPIN             BRANCH IF YES                         23600019
         CLC   LEN2(LEN8,REG5),LEN2(REG6) COMPARE ENTRY1 + 2 FOR SETAB  23800019
*                                         SORT                          24000019
         B     RESULT             GO CHECK RESULT                       24400019
SKIPIN   CLC   LEN8(LEN8,REG5),LEN8(REG6) COMPARE ENTRY1+2 FOR OLDNAME  24800019
*                                         NEWNAME PAIR SORT             25200019
RESULT   BNL   PREPUSH            IF ENTRY1 NOT LOW, SEE IF ENT1 = ENT2 25600019
NEXTPAIR TM    SWITCH,ENDSORT      ENDSORT SET                          26000019
         BO    PROCNN             IF SO, SEE ABOUT OLD/NEW-NAME PAIRS   26400019
         MVC   ENTRY1(LEN4),ENTRY2     ENTRY1=ENTRY2                    26800019
         L     REG2,ENTRY2                                              27200019
         A     REG2,INCRE          ENTRY2=ENTRY2+INCRE                  27600019
         ST    REG2,ENTRY2                                              28000019
         B     TWOLAST            SEE IF ENTRY2 IS LAST ENTRY           28300019
PREPUSH  BNE   CARRYON            BRANCH IF ENTRY1 GT ENTRY2            28600019
SETERMS  MVC   NAMEFLD(LEN8),LEN2(REG5) PUT DUP NAME IN PARAM AREA      28800019
SETERMS1 MVI   VTMFLG1,UNUSEND    INDICATE UNUSUAL END OF OPERATION     29000019
         MVI   MSG1,LASTMSG+PBIT  LAST MESSAGE PLUS PARAMETER           29200019
         MVI   NAMEDISP,DUPNAM    OFFSET IN MSG FOR DUPE NAME           29300019
         MVI   PARAMS,NAME        INDIC NAME TO BE PRINTED              29400019
         MVI   MSG1+LEN1,M42           MSG CODE                         29700019
* CANNOT SPECIFY DUPLICATE MEMBERNAMES FOR SEL/EXCL/RENAME              30000019
SETCODE  EQU   *                                                        30100019
         CLI   RCBUF,RCD8         IS COMPLETION CODE 8 OR HIGHER A44144 30150000
         BNL   DONTSET            YES-DON'T SET RETURN CODE      A44144 30200000
         MVI   RCBUF,RCD8         SET COMPLETION CODE TO 8       A44144 30300000
DONTSET  EQU   *                                                 A44144 30350000
         L     REG15,VIEBVMS      ADDR OF MSG WRITER                    30600019
         BALR  REG14,REG15        LINK TO WRITE ERROR MSG               30900019
         L     REG15,VIEBVTM      ADDR OF TERMINATION ROUTINE           31200019
         BALR  REG14,REG15        EXIT TO TERMINATE OPERATION -         31500019
*                                 NO RETURN IS MADE TO HERE BY IEBVTM   31800019
CARRYON  MVC   SAVED(LEN4),ENTRY2      SAVED=ENTRY2                     32400019
         MVC   NEWENT(LEN4),ENTRY1     NEWENT=ENTRY1                    33000019
         L     REG2,NEWENT                                              33600019
         L     REG3,SAVED                                               34000019
COMPENT  TM    SWITCH,BUFSORT      IS BUFFER SORT BEINGDONE             34400019
         BO    SKIPIT             BRANCH IF YES                         34800019
         CLC   LEN2(LEN8,REG2),LEN2(REG3) COMPARE 'SAVED' VS 'NEWENT'   35200019
*                                         FOR CTLTAB SORT               35600019
         B     CONDCODE           GO CHECK RESULTS OF COMPARISON        36000019
SKIPIT   CLC   LEN8(LEN8,REG2),LEN8(REG3) COMPARE SAVED AND NEWENT FOR  36400019
*                                         ON NN PAIR SORT               36800019
CONDCODE BL    NEXTPAIR           SAVED LT NEWENT                       37200019
         BNE   CONTINUE           NEWENT LT SAVED                       37600019
         MVC   NAMEFLD(LEN8),LEN2(REG2) PUT DUP NAME IN PARAM AREA      38000019
         B    SETERMS1            GO SET UP ERROR MESSAGE               38400019
CONTINUE L     REG7,LEN                                                 38800019
         BCTR  REG7,REG0          SUBTR 1 FOR EXECUTION                 39200019
         EX    REG7,EX1            EXCHANGE SAVED AND NEWENT            39600019
         EX    REG7,EX2            EXCHANGE SAVED AND NEWENT            40000019
         EX    REG7,EX1                                                 40400019
SUBINCRE CLC   TABBEGIN,NEWENT                                          40800019
         BE    NEXTPAIR           BRANCH IF NEWENT NOW AT TOP OF TABLE  41200019
         L     REG2,NEWENT                                              41600019
         ST    REG2,SAVED         SAVED=NEWENT                          42000019
         S     REG2,INCRE         NEWENT=NEWENT-INCRE                   42400019
         ST    REG2,NEWENT                                              42800019
         L     REG3,SAVED                                               43200019
         B     COMPENT            GO COMPARE SAVED AND NEWENT           43600019
PROCNN   OI    FLG3,SORTDONE       TURN ON SORTDONE                     44000019
         TM    SWITCH,BUFSORT     ARE OLD/NEW NAME PR'S IN BFR SORTED   44100019
         BO    BLDNNTAB           YES - GO SEARCH SETAB FOR OLDNAMES    44200019
         L     REG10,ENDPTR                                             44400019
         OI    DISP0(REG10),SEBIT6     TURN ON LAST ENTRY BIT           44800019
         CLC   NNCT1(LEN2),ZROS        ANY NEWNAMES                     45200019
         BE    RETURN              NO NEWNAMES-RETURN TO CALLER         45600019
         LA    REG2,LEN10                                               46000019
         CL    REG2,INCRE         IS 10 THE CURRENT INCREMENT FACTOR    46500019
         BNE   BLDNNTAB           IF NOT, BUFFER SORT HAS BEEN DONE     47000019
         LA    REG2,LEN16                                               47500019
         ST    REG2,INCRE          INCRE=16                             48000019
         ST    REG2,LEN                                                 48400019
         MVI   SWITCH,BUFSORT     INDIC SORTING OLD/NEW NAME PRS IN     48600019
*                                 BFR                                   48800019
         LH    REG5,NNCT1         GET NN COUNT                          49000019
         BCTR  REG5,REG0          DECREM BY 1                           49200019
         LTR   REG5,REG5          IS COUNT NOW 0                        49400019
         BZ    BLDNNTAB           YES - NO NEED TO SORT NAMES IN BFR    49600019
*                                 BY NEWNAME                            49800019
         SLL   REG5,LEN4          MPLY NBR OF NEW NAMES-1 BY 16         50300019
         L    REG2,BCB            PTR TO BUFFER                         50800019
         ST    REG2,TABBEGIN                                            51200019
         AR    REG5,REG2          ADD PRODUCT TO ADDRESS OF BUFFER1     51600019
         ST    REG5,ENDPTR        PTR TO LAST ENTRY                     52000019
         ST    REG2,ENTRY1         ENTRY1= PTR BUFFER 1                 52400019
         LA    REG2,LEN16(REG2)                                         52800019
         ST    REG2,ENTRY2         ENTRY2= PTR BUFFER+16                53200019
         B     TWOLAST            SEE IF ENTRY2 LAST NAME IN BUFFER     53600019
BLDNNTAB L     REG2,BCB                                                 54000019
         LA    REG2,X0(REG2)      CLEAR HIGH ORDER BYTE                 54200019
         LA    REG15,X4           PUT 4 INTO REG                        54400019
         SR    REG2,REG15         GET POINTER TO BUFFER-4               54600019
         ST    REG2,BUFAD         SAVE POINTER                          54800019
         AR    REG2,REG15         RESTORE BUFFER POINTER                55000019
         L     REG3,LOCOR                                               55200019
         SRL   REG3,LEN2                                                56000019
         SLL   REG3,LEN2                                                56800019
         LA    REG3,LEN4(REG3)    ASSURE FULLWORD BOUNDARY FOR          57600019
*                                 NEWNAME POINTER TABLE                 58400019
         ST    REG3,ADNNPTRT      ESTAB ADDR OF NEWNAME PTR TABLE       59200019
         LH    REG6,NNCT1         NBR OF NEWNAMES                       60000019
STRTIT   L     REG5,SEBEGIN       ADDR OF START OF SETAB                60800019
* AT THIS POINT, R2 HAS ADDR OF 1ST OLDNAME OR 'NEXT' OLDNAME IN BFR    61600019
         B     TRYBIT2            DONT BUMP POINTER 1ST TIME            62600019
LOOP2    LA    REG5,LEN10(REG5)   BUMP POINTER TO NEXT CTLTAB ENTRY     63600019
TRYBIT2  TM    DISP0(REG5),SEBIT2 IS THIS RENAMED                       64600019
         BZ    LOOP2              NO - LOCATE NEXT ENTRY                66400019
         CLC   LEN2(LEN8,REG5),DISP0(REG2) IS THIS RENAMED OLDNAME      67200019
*                                      ENTRY THE ONE NOW BEING SOUGHT   68000019
         BNE   LOOP2              NO - LOCATE NEXT SETAB ENTRY          68800019
         C     REG3,BUFAD         WILL THIS ENTRY FIT                   68870019
         BNH   BUILDIT            YES, GO ON AND BUILD NNPTRTAB ENTRY   68940019
         SPACE 1                                                        69010019
         MVI   MSG1+P1,M43        SET CANNOT PROCESS ALL OLD NEW NAMES  69080019
*                                    SPECIFIED MSG                      69150019
         MVI   MSG1,LASTMSG       SET LAST MSG SWITCH                   69220019
         MVI   VTMFLG1,UNUSEND    INDICATE UNUSUAL END                  69290019
         B     SETCODE            SET RETURN CODE AND ISSUE MSG         69360019
         SPACE 1                                                        69430019
BUILDIT  EQU   *                                                        69500019
         ST    REG5,WKA1          YES - SET SETAB ADDR INTO NNPTRTAB    69600019
         MVC   DISP0(LEN4,REG3),WKA1                                    70400019
         LA    REG3,LEN4(REG3)    POINT TO NEXT NNPTRTAB SLOT           71200019
         LA    REG2,LEN16(REG2)   POINT TO NEXT POSSIBLE OLDNAME        72000019
         BCT   REG6,STRTIT        LOOP TO LOCATE NXT ENTRY              72800019
         ST    REG3,LOCOR         NO MORE TO LOCATE - REINIT LOCOR ADDR 73600019
         LH    REG6,NNCT1         NUMBER OF NEWNAMES                    73700019
         L     REG2,SEBEGIN       ADDR OF SETAB                         73800019
         L     REG3,ADNNPTRT      ADDR OF NEWNAME POINTER TABLE         73900019
         B     TRYNNBIT           DONT BUMP POINTER THIS TIME           74000019
ADD10    LA    REG2,LEN10(REG2)                                         74100019
TRYNNBIT TM    DISP0(REG2),SEBIT2 IS THIS A NEWNAME                     74200019
         BZ    ADD10              NO - POINT TO NXT SETAB ENTRY         74300019
         TM    DISP0(REG2),SEBIT4      IS IT FLAGGED AS DON'T COPY      74400019
         BZ    BUMP3              NO - SET TO GET NEXT PTR IN           74500019
*                                 NNPTRTAB                              74600019
         L     REG5,DISP0(REG3)   YES - GET POINTER TO OLDNAME ENTRY    74700019
         OI    DISP0(REG5),SEBIT4      SET IT AS DON'T COPY             74800019
BUMP3    LA    REG3,LEN4(REG3)         POINT TO NEXT POSSIBLE NNPTRTAB  74900019
*                                 SLOT                                  75000019
         BCT   REG6,ADD10         LOOP FOR NEXT NEWNAME SEARCH          75200019
RETURN   EQU   *                                                        75400019
         L     REG13,LEN4(DISP0,REG13)                                  77400019
         RETURN  (14,12)                                                79800019
         DS    0F                                                       80400019
INCRE    DC    F'0'               INCREMENT FACTOR                      80800019
LEN      DC    F'0'               LENGTH FACTOR                         81200019
SAVED    DC    F'0'                ENTRY BEING COMPARED FOR EXCHANGE    81600019
NEWENT   DC    F'0'                ENTRY BEING COMPARED FOR EXCHANGE    82000019
ENTRY1   DC    F'0'                MOST RECENT ENTRY IN TABLE TO BE     82400019
*                                  COMPARED                             82800019
ENTRY2   DC    F'0'                MOST RECENT ENTRY IN TABLE TO BE     83200019
*                                  COMPARED                             83600019
BUFAD    DC    F'0'               INTERNAL POINTER AREA                 84600019
TABBEGIN DC    F'0'               INTERNAL POINTER AREA                 85600019
EX1      XC    DISP0(LEN0,REG2),DISP0(REG3) EXCHANGE SAVED AND NEWENT   86600019
EX2      XC    DISP0(LEN0,REG3),DISP0(REG2) EXCHANGE SAVED AND NEWENT   87600019
ONE      DC    XL2'01'             COMPARED TO ENCT                     89600019
SWITCH   DC    X'00'              INTERNAL SWITCH                       89700019
ENDSORT  EQU   X'80'              ON = SETAB IS SORTED NOW              89800019
BUFSORT  EQU   X'40'              ON = BUFFER SORT IS BEING DONE        89900019
*              LO ORDER 6 BITS NOT USED                                 90000019
X0       EQU   0                  CONSTANT OF 0                         90100019
X4       EQU   4                  CONSTANT OF 4                         90200019
P1       EQU   1                  CONSTANT OF 1                         90300019
ENDPTR   DC    F'0'                PTR LAST ENTRY IN TABLE BEING        90400019
*                                  SORTED                               90800019
PATCHLEN EQU   (*-IEBVCT)/20      LENGTH OF 5 PER CENT PATCH AREA       91000019
PATCH    DC    XL(PATCHLEN)'00'   5 PER CENT PATCH AREA          A41780 91200000
         EJECT                                                          91500019
         DS    0D                                                       91800019
IEBMCA   DSECT                                                          92000019
         IEBMCA                                                         92400019
         END                                                            92800019
./  ADD  SSI=72900020,NAME=IEBVDM
         TITLE 'IEBVDM - DIRECTORY MERGE SUBROUTINE OF IEBCOPY'         00200019
IEBVDM   CSECT                                                          00400019
*D082300                                                         A37901 00403000
*C827000                                                         A41780 00405000
*C045800,716800                                                  A44144 00405400
*A045820,716700-716720,717300,720100                             A44144 00405800
*A433300-433400                                                 YA01719 00405902
*A471500                                                       @ZA01673 00406102
*********************************************************************** 00406302
*TITLE - IEBVDM - IEBCOPY DIRECTORY MERGE                             * 00412019
*                                                                     * 00418019
*STATUS - CHANGE LEVEL 001                                            * 00424019
*                                                                     * 00430019
*FUNCTION/OPERATION - MERGES THE INPUT DIRECTORY ENTRIES WITH THE     * 00436019
*        OUTPUT DIRECTORY ENTRIES                                     * 00442019
*ENTRY POINTS - IEBVDM                                                * 00448019
*                                                                     * 00454019
*INPUT - INPUT DIRECTORY ENTRIES                                      * 00460019
*        OUTPUT DIRECTORY ENTRIES                                     * 00466019
*                                                                     * 00472019
*OUTPUT - A MERGED OUTPUT DIRECTORY                                   * 00478019
*        THE NUMBER OF BLOCKS IN THE OUTPUT DIRECTORY                 * 00484019
*                                                                     * 00490019
*EXITS - NORMAL - RETURN TO CALLER                                    * 00496019
*                                                                     * 00502019
*EXTERNAL ROUTINES - IEBDV4,AN ENTRY POINT IN IEBDV1                  * 00508019
*                  IEBDRD(FOR READING IN OUTPUT + INPUT DIRECTORY ENT-* 00514019
*                  RIES)                                              * 00520019
*                  IEBMGD -GETS AN OUTPUT DIRECTORY ENTRY             * 00526019
*                  IEBMGI                                             * 00532019
*                  IEBVMS                                             * 00538019
*TABLES/WORK AREA - I/O BUFFERS                                       * 00544019
*                  AREAS WHERE INPUT + OUTPUT DIRECTORY ENTRIES HAVE  * 00550019
*                  BEEN RETAINED                                      * 00556019
*ATTRIBUTES - SERIALLY REUSEABLE                                      * 00562019
*********************************************************************** 00568019
TWNTY    EQU   20                 OFFSET FROM BEGINNING OF BLK TO COUNT 00600019
TW2      EQU   22                 OFFSET FROM BEG. OF BLK TO 1ST ENTRY  00800019
FF       EQU   X'FF'                                                    01000019
OPEN     EQU   X'10'              MASK USED FOR TESTING DCBOFLGS        01200019
R0       EQU   0                                                        01400019
R1       EQU   1                                                        01600019
R2       EQU   2                                                        01800019
R3       EQU   3                                                        02000019
R4       EQU   4                                                        02200019
R5       EQU   5                                                        02400019
R6       EQU   6                                                        02600019
R7       EQU   7                                                        02800019
R8       EQU   8                                                        03000019
R9       EQU   9                                                        03200019
R10      EQU   10                                                       03400019
R11      EQU   11                                                       03600019
R12      EQU   12                                                       03800019
R13      EQU   13                                                       04000019
R14      EQU   14                                                       04200019
R15      EQU   15                                                       04400019
SAV8     EQU   8                  SAVE AREA DISPLACEMENT                04410019
SAV4     EQU   4                  SAVE AREA DISPLACEMENT                04420019
FLGSET   EQU   X'00'              FLAG SETTING                          04430019
LEN1     EQU   1                  LENGTH OR DISPLACEMENT OF 1           04440019
LEN2     EQU   2                  LENGTH OR DISPLACEMENT OF 2           04450019
LEN3     EQU   3                  LENGTH OR DISPLACEMENT OF 3           04460019
LEN4     EQU   4                                                        04470019
LEN8     EQU   8                  LENGTH OR DISPLACEMENT OF 8           04480019
DISP4    EQU   4                  DISPLACEMENT OR LENGTH OF 4           04490019
LEN254   EQU   254                LENGTH OF 254                         04500019
DISP0    EQU   0                  0 DISPLACEMENT                        04510019
LEN11    EQU   11                 LENGTH OF 11                          04520019
LEN27    EQU   27                 LENGTH OF 27                          04530019
LEN26    EQU   26                 LENGTH OF 26                          04540019
LEN10    EQU   10                 LENGTH OF 10                          04550019
LEN7     EQU   7                  LENGTH OF 7                           04560019
MSGN     EQU   X'47'              OFFSET IN MSG FOR NAME                04570019
RTCDE    EQU   C'8'               RETURN CODE                    A44144 04580000
RTCD12   EQU   X'FC'              RETURN CODE                    A44144 04582000
ZERO     EQU   0                  VALUE OF ZERO                  S20201 04590020
         EJECT                                                          04600019
         SAVE  (14,12),,*                                               04800019
         BALR  R11,R0             BASE REG                              05000019
         USING *,R11               ESTABLISH ADDRESSABILITY             05200019
         USING IEBMCA,4                                                 05300019
         LA    R12,SV6                                                  05400019
         ST    R12,SAV8(R13)      SAVE ADDRESS OF CALLED ROUTINES SAVE  05600019
*                                  AREA                                 05800019
         ST    R13,SAV4(R12)      SAVE ADDRESS OF CALLERS SAVE AREA     06000019
         LR    R13,R12                                                  06200019
         OI    FLG7,DM            INDICATE THAT DIR MERGE IS BEING DONE 06400019
         NI    WSFLAG,FF-USERTTR       ASSURE NOTELIST/USER TTR SWITCH  06660019
*                                        IS OFF                         06720019
         NI    FLG4,FF-LE         ASSURE THAT LAST INPUT ENTRY BIT OFF  06800019
         MVI   FLG5,FLGSET        RESET FLAGS                           06900019
         XC    BC(LEN2),BC        INITIALIZE BC TO 0                    07000019
         XC    DMSW(LEN1),DMSW    RESET INTERNAL SWITCHES               07100019
         LA    R15,LEN1                                                 07200019
         STH   R15,DBCNT          INIT OUTPUT DIRECTORY BLK CT TO 1     07400019
         LA    R15,TW2            INITIAL VALUE FOR DISPLACEMENT        07600019
         STH   R15,DISPO          INITIALIZE DISPLACEMENT TO 22         07800019
         MVI   UT4SCTOR,ZERO      SET UT4 SECTOR VALUE TO 0      S20201 07820020
*                                   (USED ONLY IF ON AN RPS      S20201 07840020
*                                   DEVICE)                      S20201 07860020
         MVI   OUTSCTOR,ZERO      SET OUTPUT SECTOR VALUE TO 0   S20201 07880020
*                                   (USED ONLY IF ON AN RPS      S20201 07900020
*                                   DEVICE)                      S20201 07920020
         L     R15,VIEBMGI                                              08000019
TRNI     EQU   *                                                        08100019
         BALR  R14,R15            GET FIRST IDE                         08200019
         TM    SWITCH1,MGINODE    WAS NO IDE RETURNED BY IEBMGI         08206019
         BZ    GOTIDE1            NO - AN IDE WAS RETURNED AND IS POIN- 08212019
*                                 TED TO BY 'IDEAD'                     08218019
         NI    SWITCH1,FF-MGINODE YES - RESET 'NO IDE' SWITCH           08224019
         TM    FLG4,LE            WAS THIS THE ONLY/LAST IDE TO  A37901 08228000
*                                 BE MERGED                      A37901 08232000
         BZ    TRNI               NO - TRY FOR ANOTHER ONE              08236019
         OI    DMSW,E             YES - INDICATE THAT THERE ARE NO MORE 08242019
*                                 INPUT DE'S TO BE MERGED               08248019
GOTIDE1  EQU   *                                                        08254019
         XC    OUTDS1(LEN8),OUTDS1 SET TTRN IN AREA TO ZEROES           08294019
         MVC   OUTDS1+DISP4(LEN2),TRBALBUF SET TRK BAL FOR OUTPUT DIR   08334019
         TM    COMDCDSW,COMPRESS  IS A COMPRESS BEING DONE              08400019
         BO    NULLOUT            IF NO OUTPUT DATA SET, SET UP TO      08800019
*                                 PROCESS INPUT ONLY                    09000019
         TM    STATUS,STAT5       IS OUTPUT NULL                        09200019
         BO    NULLOUT            IF SO PROCESS INPUT ONLY              09400019
         TM    FLG6,OIC           ALL OUTPUT IN CORE                    09600019
         BO    NULLOUT            YES, DONT NEED TO READ ODE'S          09800019
         TM    FLG4,ODALT         NEED TO READ OUTPUT FROM SYSUT4       10000019
         BO    WROUT              YES- SETUP TO READ FROM UT4           10200019
         LA    R6,OUTDCB          ESTABLISH PTR TO DCB TO BE USED       10400019
*                                 WHEN READING OUTPUT DIR               10600019
         ST    R6,READDCB                                               10800019
         NI    STATUS,STAT7+STAT8                                       11000019
         OI    STATUS,STAT2+STAT6 INDIC  MERGING DIR FROM OUTPUT D.S.   11200019
         LA    R5,UT4DCB                                                11400019
         ST    R5,WRTDCB          ESTABLISH UT4DCB AS DCB TO BE USED    11600019
*                                 WHEN WRITING MERGED DIRECTORY         11800019
         OI    FLG4,ODALT         SET INDICATION OF WHERE OUTPUT DIREC- 11850019
*                                 TORY IS TO BE READ FROM FOR NEXT INDD 11900019
*                                 PROCESSING                            11950019
         MVC   UT4DS1(LEN8),SYS4TTR RE-INIT TTRN AND TRK BALANCE AREA   12050019
*                                 IF DCB NOT YET OPEN, DOESN'T MATTER   12200019
         NI    TAG,TAG5+TAG6                                            12400019
         OI    TAG,TAG3           INDIC WRITING TO SYSUT4 DS            12600019
         USING IHADCB,R5                                                12800019
         TM    DCBOFLGS,OPEN      IS SYSUT4 DCB OPEN                    13000019
         BO    SETRDNXT           YES - SET READ AND WRITE BFR PTRS     13200019
         DROP  R5                                                       13300019
         L     R15,VIEBM04        ADDR OF E.P. IN MAIN PROGRAM TO CALL  13380019
*                                 IEBDV4 TO OPEN/VALIDATE SYSUT4 DCB    13460019
         BALR  R14,R15            EXIT TO E.P.                          13540019
IEBRTM   EQU   *                  RETURN POINT IN IEBVDM FROM MAIN PGM  13620019
IEBVDRTM EQU   IEBRTM                                                   13660019
         ENTRY IEBVDRTM                                                 13730019
SETRDNXT MVC   READNEXT+LEN1(LEN3),BEGFST1  SET BFR ADDR FOR READ       13830019
         MVC   ENDWRT(DISP4),END2ND2   END OF WRT BFR                   13930019
         L     R7,BEGFST2                                               14300019
         XC    TW2(LEN254,R7),TW2(R7)  CLEAR AREA TO BLD 1ST OUTPUT BLK 14400019
         ST    R7,WRTNEXT         SET POINTER FOR IEBDWR                14500019
         MVI   DISP0(R7),FLGSET        SET F=0                          14550019
         ST    R7,BLOCK           SET INTERNAL POINTER TO 1ST BLOCK     14600019
         TM    FLG6,ODIC          ANY ODE'S IN CORE                     14800019
         BO    SOPTR              IF SO, LOCATE 1ST SAVED BLOCK         15000019
         SR    R0,R0              SET TTR 0 FOR BEGIN OF DIR TO BE READ 15200019
         L     R1,READDCB         ADDR OF DCB                           15400019
         LA    R2,FDAD(R1)        POINT TO DCBFDAD FIELD FOR MBBCCHHR   15600019
         L     R15,VTTOCC         CONVERT TTR TO MBBCCHHR               15800019
         BALR  R14,R15            LINK TO ROUTINE                       16000019
RDOUT    EQU   *                                                        16100019
         NI    SENSE,SENSE7+SENSE8 RESET POSSIBLE UNWANTED BITS         16200019
         L     R15,VIEBDRD        ADDR OF READ ROUTINE                  16300019
         BALR  R14,R15            LINK TO READ OUT DIR INTO I/O BFR     16400019
GOBFR    L     R15,VIEBMGD                                              16800019
         BALR  R14,R15            OBTAIN PTR TO 'NEXT' ODE IN BFR       17000019
         B     CKDEPTR            THIS INSTRUCTION WILL BE EXECUTED IF  17200019
*                                 IEBMGD DOES NOT RETURN A PTR TO THE   17400019
*                                 ODE                                   17600019
TME      TM    DMSW,E             ANY INPUT DE'S TO COMPARE AGAINST     17800019
         BO    DOOUT              IF NOT, JUST PUT THIS ODE INTO THE    18000019
*                                 OUTPUT DIRECTORY                      18200019
SETCOMP  L     R2,IDEAD           ADDR OF IDE                           18400019
         L     R6,DEPTR           ADDR OF ODE                           18600019
         CLC   DISP0(LEN8,R2),DISP0(R6) COMPARE INPUT MBRNAME VS OUTPUT 18700019
*                                       NAME                            18800019
         BE    TOIC               IF SAME, GET NEXT ODE                 19000019
         BNL   DOOUT              IF OUTPUT LOW MERGE IT                19200019
SETI     OI    DMSW,I             INDIC IDE BEING MERGED                19400019
* NOTE - AT THIS POINT, R2 POINTS TO THE DE TO BE MERGED                19600019
ADDADE   SR    R3,R3                                                    19800019
         IC    R3,LEN11(R2)       GET 'C' FIELD FROM THIS DE            20000019
*                                 NEED TO ISOLATE NUMBER OF USER HALFWD 20200019
         SLL   R3,LEN27                                                 20400019
         SRL   R3,LEN26           MPLY BY 2 FOR NBR OF USER BYTES       20600019
         LA    R3,TWLV(R3)        ADD THE FIXED MINIMUM LENGTH TO THE   20800019
*                                 NUMBER OF USER DATA BYTES TO CALC.    21000019
*                                 TOTAL LENGTH OF THIS DE               21200019
BCUPD    LH    R6,BC              GET BYTE COUNT OF CURR BLK BEING BLT  21400019
         AR    R6,R3              ADD LENGTH OF CURR DE                 21600019
         CH    R6,TWO54           DOES BYTE COUNT EXCEED 254            21800019
         BH    NEWBLK             IF SO, FINISH UP CURRENT BLK          22000019
         LH    R8,DISPO           GET CURRENT VALUE OF DISPLACEMENT     22200019
         A     R8,BLOCK           ADD TO STARTING ADDR OF DB            22400019
         BCTR  R3,R0              DECREMENT LENGTH OF DE BY 1 FOR EX    22600019
         EX    R3,ADDENT                                                22800019
         MVC   OLDKEY(LEN8),DISP0(R2)  SAVE NAME OF DE JUST MOVED       23000019
         ST    R8,ADLAST          SAVE ADDR OF LAST DE MERGED IN OUTDIR 23200019
         STH   R6,BC              SAVE UPDATED BYTE-COUNT               23300019
         LA    R6,TW2(R6)         ADD 22 TO CURR VALUE OF BC            23400019
         STH   R6,DISPO           SET AS NEW VALUE OF DISPO             23600019
         TM    DMSW,I             WAS AN IDE JUST MERGED                23800019
         BZ    CKR                IF NOT, SEE IF THIS WAS LAST ODE      24000019
         NI    DMSW,FF-I          ELSE RESET IDE-MERGED SWITCH          24200019
         L     R15,TABAD                                                24400019
         LA    R14,LEN10                                                24600019
         SR    R15,R14            POINT TO CTLTAB ENTRY FOR THIS MEMBER 24800019
         MVC   LEN2(LEN8,R15),OLDKEY PUT NAME OF IDE MERGED INTO CTL-   24900019
*                                 TAB ENTRY FOR PRINTING BY IEBVTM      25000019
         OI    LEN1(R15),JSTCPD   INDIC NEED TO PRINT THIS NAME IN MSG  25100019
SETBIT4  OI    DISP0(R15),SEBIT4  SET 'DONT-COPY' FLAG IN CTLTAB ENTRY  25200019
         TM    DISP0(R15),SEBIT1  IS THIS A NEWNAME ENTRY               25300019
         BZ    TF4LE              NO, TEST FOR MORE IDE'S TO MERGE      25400019
         L     R14,NNTABAD        GET POINTER TO CURRENT ENTRY IN       25460019
*                                 NNPTRTAB (SET BY IEBMGI)              25520019
         LA    R15,DISP4                                                25540019
         SR    R14,R15            POINT TO CURRENT NNPTRTAB SLOT        25560019
         L     R15,DISP0(R14)     POINT TO RELATED OLDNAME CTLTAB ENTRY 25660019
         B     SETBIT4            GO SET 'DONT-COPY' IN OLDNAME ENTRY   25900019
TF4LE    EQU   *                                                        26000019
         TM    FLG4,LE            ANY MORE IDE'S                        27200019
         BO    SETE               IF NOT, SET INDICATOR 'E'             27400019
         L     R15,VIEBMGI                                              27600019
         BALR  R14,R15            OBTAIN POINTER TO NEXT IDE            27800019
         TM    SWITCH1,MGINODE    WAS NO IDE RETURNED BY IEBMGI         27820019
         BZ    GOTIDEN            NO - AN IDE WAS RETURNED AND IS POIN- 27840019
*                                 TED TO BY 'IDEAD'                     27860019
         NI    SWITCH1,FF-MGINODE YES - RESET 'NO IDE' SWITCH           27880019
         B     TF4LE              SEE IF ANY MORE IDE'S TO BE TRIED FOR 27900019
GOTIDEN  EQU   *                                                        27920019
         TM    DMSW,R             ANY ODE'S                             28000019
         L     R2,IDEAD           POINT TO NXT IDE IN CASE NEED IT      28100019
         BO    SETI               IF NOT, PUT THIS IDE INTO OUT DIR     28200019
         B     SETCOMP            ELSE COMPARE IDE TO ODE               28400019
WROUT    LA    R6,OUTDCB          ESTAB PTR TO DCB TO BE WRITTEN TO     28600019
         ST    R6,WRTDCB                                                28800019
         LA    R5,UT4DCB          ESTAB PTR TO DCB TO READ FROM         29000019
         ST    R5,READDCB                                               29200019
         NI    FLG4,FF-ODALT      RESET INDICATOR - OUTPUT DIRECTORY    29250019
*                                 WILL BE READ FROM OUTPUT DATA SET     29300019
*                                 WHEN PROCESSING NEXT INDD             29350019
         NI    STATUS,STAT7+STAT8                                       29400019
         OI    STATUS,STAT3+STAT6 INDIC READING FROM SYSUT4 AND MERGING 29600019
         NI    TAG,TAG5+TAG6                                            29800019
         OI    TAG,TAG1           INDIC WRTG OUTPUT DIRECTORY TO OUT DS 30000019
         MVC   FDAD(LEN8,R5),UT4FDAD RESET MBBCCHHR OF BEG OF UT4 DATA  30200019
         B     SETRDNXT           SET POINTERS FOR I/O ROUTINES         30400019
DOOUT    L     R2,DEPTR           POINT TO ODE TO BE MERGED             30600019
         B     ADDADE             GO TO MERGE IT                        30800019
NEWBLK   L     R8,BLOCK           PT TO OUTPUT BLK                      31000019
         ST    R8,WKA1            SAVE ADDR OF THIS BLK IN CASE NO MORE 31200019
         LH    R9,BC              GET CT OF NBR BYTES USED IN THIS DB   31400019
         LA    R9,LEN2(R9)        ADD 2 TO ACCOUNT FOR LENGTH OF COUNT  31600019
         STH   R9,BC              SET TO MOVE UPDTD CT INTO DIR BLOCK   31800019
         MVC   TWNTY(LEN2,R8),BC  MOVE TOTAL LENGTH INTO DIRECTORY BLK  32000019
         MVC   TWLV(LEN8,R8),OLDKEY SET UP KEY OF THIS DIRECTORY BLOCK  32200019
         MVC   KLLOC(LEN3,R8),KLDL  SET UP KEY-LENGTH AND DATA-LENGTH   32400019
         LH    R15,DBCNT          ADD 1 TO CURR NBR OUT BLKS BUILT      32800019
         LA    R15,LEN1(R15)                                            33000019
         CH    R15,DIRBCNT        IS THERE SPACE FOR AT LEAST 1 MORE    33200019
         BH    TOOMANY            IF NOT, OUT OF ALLOCATED DIR SPACE    33400019
         STH   R15,DBCNT          ELSE SAVE UPDATED BLOCK-COUNT         33600019
         LA    R8,BLKLEN(R8)      POINT TO NEXT POSSIBLE BLOCK          33800019
         ST    R8,BLOCK           SAVE NEW PTR IN CASE SPACE IN BFR     34000019
         LA    R8,BLKLEN(R8)      CALC, WHERE NXT BLK WOULD END         34200019
         C     R8,ENDWRT          SPACE FOR NEXT BLK                    34400019
         BNL   SETREC             IF NOT SEE IF MORE BFR SPACE AVAIL    34600019
INITNXT  XC    BC(LEN2),BC        RESET BYTE COUNT TO 0                 34700019
         L     R8,BLOCK           RESET POINTER TO ADDR OF NEXT BLOCK   34830019
         MVI   DISP0(R8),FLGSET   SET  F=0                              34880019
         XC    TW2(LEN254,R8),TW2(R8)  CLEAR NEXT BLOCK                 34930019
         LA    R15,TW2            RESET DISPLACEMENT TO 22              35000019
         STH   R15,DISPO                                                35200019
         B     BCUPD              NOW GO PUT NXT DE INTO OUTPUT BLK     35400019
CKR      TM    DMSW,R             ANY MORE ODE'S                        35600019
         BZ    TOIC               IF SO GET NXT ODE TO BE MERGED        35800019
         L     R2,IDEAD           POINT TO IDE IN CASE NEED TO MERGE    36000019
         TM    DMSW,E             ANY MORE IDE'S TO BE MERGED           36200019
         BZ    SETI               YES - GO MERGE NXT IDE                36400019
         B     SETFF              ELSE SET 'FF' RECORD INTO LAST BLK    36600019
SETE     OI    DMSW,E             INDIC NO MORE IDE'S TO BE MERGED      36800019
         TM    DMSW,R             ANY MORE ODE'S TO BE MERGED           37000019
         BZ    DOOUT              IF SO, GET ADDR OF NXT ONE TO MERGE   37200019
SETFF    LH    R7,BC              GET CURR NBR BYTES IN LAST O.D. BLOCK 37400019
         LA    R7,DLEOD(R7)       ADD 12 FOR 'FF'S                      37600019
         L     R8,BLOCK                                                 37800019
         CH    R7,TWO54           ENOUGH ROOM FOR FF'S IN THIS BLOCK    38000019
         BH    CKALLOC            IF NOT, SEE IF ALLOCATION FOR ANOTHER 38100019
*                                 BLOCK IS AVAILABLE                    38200019
         LR    R9,R8              SAVE POINTER TO START OF BLOCK        38400019
         AH    R8,DISPO           ELSE CALC ADDR TO PUT FF'S AT         38600019
         MVI   DISP0(R8),FF                                             38700019
         MVC   LEN1(LEN7,R8),DISP0(R8) MOVE NME OF 'FF' INTO OUTPUT DIR 38800019
         MVC   TWLV(LEN8,R9),DISP0(R8) SET KEY TO THIS BLOCK TO 'FF'    38900019
         MVC   KLLOC(LEN3,R9),KLDL     SET KEY LENGTH AND DATA LENGTH   39000019
         LA    R7,LEN2(R0,R7)     ADD 2 TO ACCOUNT FOR LENGTH OF        39003019
*                                    COUNT                              39006019
         CLC   DBCNT(LEN2),DIRBCNT     ARE FF'S BEING PLACED IN LAST    39010019
*                                   DIRECTORY BLOCK                     39020019
         BNE   NOPAM1             NO, GO AROUND                         39030019
         STH   R7,BPAMOUT+DIRCTDCB  STORE BYTE COUNT IN BPAM DCB        39040019
NOPAM1   EQU   *                                                        39050019
         STH   R7,WKA1            SET BYTE-COUNT INTO AREA TO MOVE FROM 39500019
         MVC   TWNTY(LEN2,R9),WKA1 MOVE BYTE-COUNT INTO DIR BLOCK       39600019
TSTTAG3  TM    TAG,TAG3           IS OUT DIR BEING WRITTEN TO SYSUT4    39800019
         BZ    SETLREP            IF NOT, GO TO WRT THE OUTPUT DIR.     40000019
         LR    R15,R9             SAVE ADDR OF LAST FULL BLOCK IN BFR   40100019
         LA    R9,BLKLEN(R9)      ADD 276 TO CURRENT ADDR OF BLOCK      40200019
         LA    R8,TWLV(R9)        ADD 12 TO ACCOMMODATE AN EOF RECORD   40400019
         C     R8,ENDWRT          ENOUGH ROOM IN BFR FOR THE EOF        40600019
         BL    MV0                IF SO, SET UP AN EOF RECORD           40800019
         OI    DMSW,RETEOD        ELSE INDICATE NEED TO SET UP/WRT EOF  41000019
         MVI   DISP0(R15),LASTREC+ENDPROC  SET FLGS INTO BFR FOR IEBVWS 41100019
SETTOWRT  EQU  *                                                        41200019
         MVC   READNEXT(DISP4),WRTNEXT SET POINTER FOR USE BY IEBVWS    41800019
         L     R15,VIEBVWS        ROUTINE TO SET UP OUTPUT MBBCCHHR'S   42400019
         BALR  R14,R15            GO SET UP AND WRT MERGED OUTPUT DIR   42600019
         TM    DMSW,RETEOD        NEED TO WRITE SEPARATE EOF RECORD     42800019
         BO    SETUPEOF           YES - GO SET UP  EOF RECORD           43000019
DONE     EQU   *                                                        43020019
         TM    FLG4,ODALT         WAS DIRECTORY JUST WRITTEN TO SYSUT4  43040019
         BO    DMTO4              YES - SEE IF I/O ERR OCCURRED TO UT4  43060019
         MVC   ERPLMFD(LEN8),OUTFDAD SET PTR TO MOST RECENT MBBCCHHR OF 43110019
*                                 AN EOF OF MEMBER DATA FOR WHEN MERGED 43160019
*                                 DIRECTORY IS ON THE OUTPUT DATA SET   43180019
         MVC   ERPTTR(DISP4),OUTPTTR SAME FOR TTRN OF LAST MEMBER'S EOF 43200019
         MVC   ERPTB(LEN2),OUTPTTR+DISP4  SAME FOR TRACK BALANCE        43220019
DONE1A   EQU   *                                                        43240019
         NI    FLG4,FF-NEWODS     RESET BIT TO INDICATE THAT THE OUTPUT 43260019
*                                 DATA SET HAS BEEN WRITTEN TO, I.E.,   43280019
*                                 IS NOT UNCHANGED.                     43300019
DONE1    EQU   *                                                        43320019
         MVC   MSG1+LEN1(LEN1),ZROS   CLEAR MSG CODE MAYBE USED YA01719 43330002
*                                         IN IGG019FT           YA01719 43340002
         L     R13,SV6+SAV4       ADDR OF SAVE AREA +4                  43360019
         RETURN (14,12)           RETURN TO CALLER                      43400019
DMTO4    EQU   *                                                        43420019
         MVC   ERPLMFD4(LEN8),OUTFDAD  SET PTR TO LATEST MBBCCHHR OF    43480019
*                                 AN EOF OF MEMBER DATA FOR WHEN MERGED 43540019
*                                 DIRECTORY IS ON THE SYSUT4 DATA SET   43560019
         MVC   ERPTTR4(DISP4),OUTPTTR  SAME TTRN OF LAST MEMBER'S EOF   43580019
         MVC   ERPTB4(LEN2),OUTPTTR+DISP4  SAME FOR TRACK BALANCE       43600019
         B     DONE1A             GO TO EXIT TO CALLER AFTER RESETTING  43620019
*                                 'NEWODS' TO INDIC OUTPUT DS WRITTEN   43640019
MV0      XC    KLLOC(LEN3,R9),KLLOC(R9) SET KEY/DATALENGTH TO 0 FOR EOF 43740019
SETLREP  MVI   DISP0(R9),LASTREC+ENDPROC  SET INDIC FOR IEBVWS USE      43840019
         B     SETTOWRT           GO WRT THRU LAST BLOCK AND/OR EOF     44200019
CKALLOC  EQU   *                                                        44220019
         LH    R15,DBCNT          GET COUNT OF NBR OF BLOCKS BUILT      44240019
         LA    R15,LEN1(R15)           ADD 1                            44260019
         CH    R15,DIRBCNT        IS AT LEAST 1 MORE BLOCK ALLOCATED    44280019
         BH    TOOMANY            IF NOT, CLOBBER LAST BLOCK BUILT      44300019
         STH   R15,DBCNT          ELSE RETAIN UPDATED BLOCK COUNT       44320019
         B     MVNM               GO COMPLETE PREVIOUS BLOCK WITHOUT    44340019
*                                 PUTTING IN 'FF'S                      44360019
SETUPEOF MVC   WRTNEXT(DISP4),BEGFST2  SET UP WHERE TO WRITE FROM FOR   44440019
*                                      IEBDWR                           44520019
         L     R9,WRTNEXT                                               44600019
         XC    LEN1(LEN11,R9),LEN1(R9)                                  44800019
         NI    DMSW,FF-RETEOD     RESET EOD-NEEDED INDICATOR            45000019
         B     SETLREP            EOD RECORD SET UP                     45200019
MVNM     MVC   TWLV(LEN8,R8),OLDKEY    MOVE NAME OF LAST DE INTO KEY    45400019
         LH    R7,BC              NBR BYTES USED IN THIS (LAST) BLOCK   45600019
         LA    R7,LEN2(R7)        ADD 2 FOR LENGTH OF COUNT AREA        45800019
         STH   R7,WKA1                                                  46100019
         MVC   TWNTY(LEN2,R8),WKA1 SAVE NO. IN COUNT FIELD OF OUTPUT BL 46160019
         MVC   KLLOC(LEN3,R8),KLDL SET KEYLENGTH AND DATALENGTH         46220019
         LR    R9,R8              SAVE ADDR OF THIS BLOCK               46300019
         LA    R8,BLKLEN(R8)      LOCATE BEGIN NXT POSSIBLE BLK         46400019
         LA    R6,BLKLEN(R8)                                            46600019
         C     R6,ENDWRT          ROOM IN BUFFER FOR LAST BLK           46800019
         BL    CLEAR              IF SO, SET UP DIR BLK WITH FF'S       47000019
         MVI   DISP0(R9),LASTREC+ENDPROC INDIC LAST REC TO BE PROCESSED 47100019
         MVC   READNEXT(DISP4),WRTNEXT SET POINTER FOR IEBWSU  @ZA01673 47150002
         L     R15,VIEBVWS                                              47200019
         BALR  R14,R15            ELSE GO WRT DIR TO (BUT NOT THRU)     47400019
*                                 FF'S RECORD, SINCE IT IS NOT YET SET  47600019
*                                 UP                                    47800019
FAKEFFS  EQU   *                                                        47900019
         MVC   WRTNEXT(DISP4),BEGFST2  SET UP WHERE TO WTE FROM FOR DWR 48000019
         L     R9,WRTNEXT                                               48200019
XC1      EQU   *                                                        48300019
         MVI   DISP0(R9),FLGSET   SET F BYTE = 0                 A33294 48350020
         XC    TW2(LEN254,R9),TW2(R9)  CLEAR LAST BLOCK                 48400019
         MVI   TWLV(R9),FF                                              48600019
         MVC   TWLV+LEN1(LEN7,R9),TWLV(R9)  SET KEY TO FF'S             48800019
         MVC   TW2(LEN8,R9),TWLV(R9)  MOVE FF'S INTO NAME FIELD         49000019
         MVC   KLLOC(LEN3,R9),KLDL  SET KEY-LENGTH AND DATA-LENGTH      49200019
         MVC   TW2-LEN2(LEN2,R9),FRTEEN  SET LENGTH FIELD IN DE TO 14   49400019
         CLC   DBCNT(LEN2),DIRBCNT     ARE FF'S BEING PLACED IN LAST    49420019
*                                   DIRECTORY BLOCK                     49440019
         BNE   NOPAM2             NO, GO AROUND                         49460019
         LA    R15,FAKELEN        LOAD LENGTH OF BLOCK                  49480019
         STH   R15,BPAMOUT+DIRCTDCB  STORE IN BPAM DCB                  49500019
NOPAM2   EQU   *                                                        49520019
         B     TSTTAG3            CK WHERE TO WRT MERGED OUT DIR        49600019
CLEAR    LR    R9,R8              GET PTR TO NXT BLOCK                  49800019
         B     XC1                GO SET UP FF'S RECORD                 50000019
NULLOUT  MVC   BLOCK+LEN1(LEN3),BEGFST1  INIT PTR TO 1ST BLK TO BUILD   50200019
         L     R8,BLOCK                                                 50400019
         XC    TW2(LEN254,R8),TW2(R8)  CLEAR AREA FOR 1ST BLK           50600019
         ST    R8,WRTNEXT         INITIALIZE WHERE TO START WRT'G       50800019
         MVI   DISP0(R8),FLGSET        SET  F=0                         50900019
         MVC   ENDWRT(DISP4),ENDFST1  SET PTR WHERE TO STOP WRITING     51000019
         LA    R6,OUTDCB                                                51200019
         ST    R6,WRTDCB          INDIC DCB TO WRITE TO                 51400019
         NI    TAG,TAG5+TAG6      RESET ALL BUT POSSIBLE RDBACK-CK BITS 51600019
         OI    TAG,TAG1           INDIC WRT'G OUT DIR TO OUTPUT DATASET 51800019
         NI    COMDCDSW,FF-COMPRESS    ASSURE THAT BIT INDICATING COM-  51860019
*                                 PRESS-IN-PLACE IS OFF                 51920019
         TM    FLG6,OIC           WERE ALL ODE'S RETAINED IN CORE       51940019
         BO    SOPTR              IF SO, SET TO FIND 1ST ODE IN CORE    51960019
SETRI    OI    DMSW,R+I           INDICATE NO ODES AND DOING AN IDE     52000019
         TM    DMSW,E             ANY INPUT DE'S TO BE MERGED           52050019
         BO    FAKEFFS            NO - SET UP A FAKE END-OF-DIRECTORY   52100019
*                                 BLOCK                                 52150019
         L     R2,IDEAD           POINT TO IDE TO BE PUT OUT            52200019
         B     ADDADE             GO BEGIN TO BUILD OUTPUT DIRECTORY    52400019
SOPTR    L     R2,SVFSTO          POINT TO 1ST OUT DIR BLK SAVED INCORE 54000019
         ST    R2,ODEPTR          SET INTERNAL PTR                      54200019
         MVC   DBKEY(LEN8),TWLV(R2)    SAVE KEY                         54400019
         CLI   TW2(R2),FF         1ST ENTRY NAME = FF                   54600019
         BE    SETRI              YES - SET TO MERGE ONLY INPUT         54800019
         ST    R2,BLKAD           SAVE ADDR OF BLOCK                    55000019
         LA    R2,TW2(R2)         POINT TO 1ST ENTRY                    55200019
         ST    R2,DEPTR           SAVE POINTER TO ODE                   55400019
         B     TME                TEST TO SEE IF ANY IDE'S              55600019
CKDEPTR  CLC   DEPTR(LEN4),ZROS   WAS END OF OUTPUT DIRECTORY REACHED   55800019
         BNE   RDOUT              NO, JUST END OF BFR.  GO RD MORE ODES 56000019
SETR     OI    DMSW,R             YES, INDIC NO MORE ODES TO MERGE      56200019
         TM    DMSW,E             ANY MORE IDE'S TO BE MERGED           56400019
         L     R2,IDEAD           SET UP REG IN CASE THERE ARE MORE     56600019
         BZ    SETI               YES, GO PUT AN IDE INTO MERGED OUTPUT 56800019
         B     SETFF              ELSE SET UP MBRNAME OF FF'S           57000019
TOIC     TM    FLG6,OIC+ODIC      ALL OUTPUT DE'S IN CORE               57200019
         BZ    GOBFR              NO, GET ADDR OF NXT ODE IN I/O BFR    57400019
         L     R5,DEPTR                                                 57600019
         CLC   DISP0(LEN8,R5),DBKEY  IS THIS LAST ENTRY IN OUT DIR BLK  57800019
         BE    BMP1               IF SO, CK FOR ANOTHER BLOCK IN CORE   58000019
         SR    R6,R6              ELSE COMPUTE LENGTH OF THIS DE        58200019
         IC    R6,LEN11(R5)                                             58400019
         SLL   R6,LEN27                                                 58600019
         SRL   R6,LEN26                                                 58800019
         LA    R6,TWLV(R6)                                              59000019
         AR    R6,R5              ADD ADDR OF DE TO LENGTH FOR ADDR NXT 59200019
         CLI   DISP0(R6),FF       IS NEXT DE NAMED FF'S                 59400019
         BE    SETR               IF SO, DONE WITH OUTPUT DIRECTORY     59600019
         ST    R6,DEPTR           ELSE SAVE ADDR OF NXT DE              59800019
TSTEON   TM    DMSW,E             ANY MORE IDE'S                        60000019
         BO    DOOUT              IF NOT, GO MERGE THIS ODE             60200019
         B     SETCOMP            ELSE COMPARE IDE VS. ODE NAMES        60400019
BMP1     L     R6,BLKAD                                                 60600019
         C     R6,SVLSTO          IS THIS THE LAST BLOCK IN CORE        60800019
         BNE   MORBLKS            NO, LOCATE NEXT BLOCK                 61000019
         TM    FLG6,OIC           WERE ALL ODE'S SAVED IN CORE          61200019
         BO    SETR               YES - NO MORE ODE'S TO LOOK AT        61400019
         NI    FLG6,FF-ODIC       NO, RESET INDICATOR THAT SOME ARE IN  61600019
*                                 CORE - THESE HAVE BEEN PROCESSED AND  61800019
*                                 IT IS NOW NECESSARY TO READ INTO THE  62000019
*                                 I/O BUFFER                            62200019
         L     R6,READDCB         POINT TO WHICHEVER DCB IS TO BE READ  62400019
         USING IHADCB,R6                                                62600019
         MVC   DCBFDAD(LEN8),OUTDAD1 MOVE MBBCCHHR OF 1ST UNRETANED BLK 62800019
         SR    R7,R7                                                    63000019
         IC    R7,DCBFDAD+LEN7                                          63200019
         BCTR  R7,R0              SUBTRACT 1 FROM 'R' OF MBBCCHHR -SRCH 63400019
         STC   R7,DCBFDAD+LEN7                                          63600019
         B     RDOUT              GO TO READ OUTPUT DIRECTORY INTO BFR  63800019
MORBLKS  LA    R6,BLKLEN(R6)      POINT TO NXT BLOCK IN CORE            64000019
         ST    R6,BLKAD           SAVE ITS ADDRESS                      64200019
         MVC   DBKEY(LEN8),TWLV(R6)    SAVE KEY OF THIS BLOCK           64400019
         LA    R5,TW2(R6)         PT TO 1ST ENTRY IN BLOCK              64600019
         CLI   DISP0(R5),FF       NAME OF 1ST ENTRY = 'FF'              64800019
         BE    SETR               YES - DONE WITH OUTPUT DIR            65000019
         ST    R5,DEPTR           NO - WANT TO USE 1ST ENTRY NAME       65200019
         B     TSTEON             GO CHECK FOR NEED TO COMPARE WITH IDE 65400019
SETREC   L     R8,WKA1            GET ADDR OF LAST COMPLETE BLOCK TO BE 65600019
*                                 WRITTEN                               65800019
         MVI   DISP0(R8),LASTREC+ENDPROC  INDIC LST REC TO BE PROCESSED 66000019
         L     R10,READNEXT       SAVE PTR WHERE TO READ                66200019
         MVC   READNEXT(DISP4),WRTNEXT  SET UP STARTING ADDR FOR VWS    68200019
         L     R15,VIEBVWS        ADDR OF RTNE TO PREPARE FOR WRITING   70200019
         BALR  R14,R15            LINK TO SET UP MBBCCHHR'S AND WRITE   70400019
         OI    DMSW,DIRWRT        INDICATE THAT SOME OF THE DIRECTORY   70460019
*                                 HAS NOW BEEN WRITTEN                  70520019
         ST    R10,READNEXT       RESTORE PTR WHERE TO READ             70600019
         MVC   BLOCK(DISP4),WRTNEXT  RESET PTR TO NXT BLOCK TO BE BUILT 70800019
         B     INITNXT            SET TO BUILD 1ST BLOCK IN NEXT BFR    71000019
TOOMANY  MVI   MSG1+LEN1,NORMOD   MSG CODE - NO MORE SPACE IN OUT DIR   71100019
         MVI   MSG1,LASTMSG+PBIT  SET INDICATORS FOR IEBVMS             71260019
         MVI   VTMFLG1,UNUSEND    INDICATE UNUSUAL END OF OPERATION     71330019
         MVI   PARAMS,NAME        INDICATE NAME TO BE PUT INTO MSG TEXT 71400019
         L     R15,NXTINDS        POINT TO INDD NAME                    71500019
         MVC   NAMEFLD(LEN8),LEN2(R15) PUT NAME INTO PARAMETER AREA     71560019
         MVI   NAMEDISP,MSGN      OFFSET IN MSG TEXT FOR NAME           71620019
         CLI   RCBUF,RTCDE        IS RETURN CODE 8 OR MORE       A44144 71670000
         BNL   DONTSET            YES- DO NOT CHANGE IT          A44144 71672000
         MVI   RCBUF,RTCDE        SET RETURN CODE TO 8           A44144 71680000
DONTSET  EQU   *                                                 A44144 71730000
         OI    FLG7,SUPPRMSG      SET INDICATOR TO SUPPRESS PRINTING    71740019
*                                 MEMBERNAME MESSAGE(S)                 71760019
         L     R15,VIEBVMS        ADDR OF MSG WRITER                    71780019
         BALR  R14,R15            LINK TO WRITE ERROR MESSAGE           71800019
         TM    FLG4,ODALT         WAS THIS MERGE BEING DONE TO UT4      71820019
         BZ    TSTDIRW            NO, SEE IF ANY WAS WRITTEN YET        71840019
         NI    FLG4,FF-ODALT      YES, RESET SYSUT4 INDICATOR           71860019
         B     DONE1              NOW EXIT TO IEBVTM VIA MAIN PGM       71880019
TSTDIRW  TM    DMSW,DIRWRT        WAS ANY OF THIS DIRECTORY WRITTEN YET 71900019
         BZ    DONE1              NO, EXIT TO IEBVTM VIA MAIN PGM       71920019
         TM    STATUS,STAT5       WAS OUTPUT DIRECTORY NULL BEFORE MRGE 71940019
         BZ    TSTOIC             IF NOT, SEE IF OUTPUT BLOCKS IN CORE  71960019
         MVI   MSG1+LEN1,PLAMPID  YES, SET UP ADDITIONAL MSG CODE       71980019
         MVI   MSG1,LASTMSG       INDIC LAST MSG IN LIST                72000019
         MVI   RCBUF,RTCD12       SET HIGHEST RETURN CODE        A44144 72010000
         L     R15,VIEBVMS        ADDR OF MSG WRITER                    72020019
         BALR  R14,R15            LINK TO WRITE ERROR MESSAGE           72040019
         MVI   TWLV(R8),FF        SET KEYNAME TO FF'S                   72200019
         MVC   TWLV+LEN1(LEN7,R8),TWLV(R8)                              72400019
         MVI   DISP0(R8),LASTREC+ENDPROC  FLAG FOR IEBVWS AND IEBDWR    72600019
         L     R15,ADLAST                                               72800019
         MVC   DISP0(LEN8,R15),TWLV(R8)  SET NAME OF LAST ENTRY IN THIS 73000019
*                                 BLOCK TO FF'S                         73200019
         LA    R7,LEN8(R0,R8)     * CALCULATE AMOUNT OF SPACE *         73210019
         SR    R15,R7             *  USED IN LAST DB =        *         73220019
*                                 * ADLAST - (BLOCK+20-12)    *         73230019
         STH   R15,BPAMOUT+DIRCTDCB  STORE IN BPAM DCB                  73240019
         ST    R15,WKA1                                                 73260019
         MVC   TWNTY(LEN2,R8),WKA1  UPDATE COUNT FIELD                  73270019
         MVC   READNEXT(DISP4),WRTNEXT  SET POINTER FOR USE BY IEBVWS   73300019
         L     R15,VIEBVWS        WRT TRUNCATED OUTPUT DIRECTORY        73400019
         BALR  R14,R15            LINK TO ROUTINE                       73500019
         B     DONE1              NOW GO TO EXIT TO IEBVTM VIA MAIN PGM 73620019
TSTOIC   EQU   *                                                        73640019
         TM    FLG6,OIC           ARE ALL OUTPUT DIR BLKS IN CORE       73660019
         BO    REWRTOUT           IF SO, THEY CAN BE RE-WRITTEN BACK TO 73680019
*                                 THE OUTPUT DATA SET DIRECTORY         73700019
         OI    FLG4,ODALT         SET BIT TO CAUSE THE PREVIOUS VALID   73720019
*                                 OUTPUT DIRECTORY TO BE COPIED FROM    73740019
*                                 SYSUT4 BY THE IEBVTM MODULE           73760019
         MVC   OUTFDAD(LEN8),ERPLMFD4  RESET POINTERS AND TRK BAL WHICH 73780019
*                                 WERE VALID WHEN UT4 WAS LAST USED     73800019
         MVC   OUTPTTR(DISP4),ERPTTR4                                   73820019
         MVC   OUTPTTR+DISP4(LEN2),ERPTB4                               73840019
         B     DONE1              GO TO EXIT TO IEBVTM VIA MAIN PGM     73860019
REWRTOUT EQU   *                                                        73880019
         MVC   READNEXT(DISP4),SVFSTO  POINT TO FST SAVED-IN-CORE OUTPT 73900019
*                                 DIRECTORY BLOCK TO BE WRITTEN BACK    73920019
         MVC   WRTNEXT(DISP4),SVFSTO                                    73940019
         L     R1,SVLSTO          POINT TO LAST SAVED-IN-CORE BLOCK     73960019
         MVI   DISP0(R1),LASTREC+ENDPROC  ASSURE THAT THIS BLK IS FLAG- 73980019
*                                 GED AS THE LAST ONE TO BE PROCESSED   74000019
*                                 AND WRITTEN                           74020019
         XC    OUTDS1(LEN8),OUTDS1  RESET OUTPUT TTRN TO ZERO (DIRECT)  74040019
         MVC   OUTDS1+DISP4(LEN2),TRBALBUF  RESET TRK BAL FOR DIR WRITE 74060019
         L     R15,VIEBVWS                                              74080019
         BALR  R14,R15            LINK TO SET UP AND REWRITE OUTPUT DIR 74100019
         B     DONE1              GO TO EXIT TO IEBVTM VIA MAIN PGM     74120019
         EJECT                                                          74200019
ADDENT   MVC   DISP0(LEN1,R8),DISP0(R2) EXEC TO MOVE A DE TO THE OUTPUT 74400019
*                                 DIR BLK BEING BUILT                   74600019
TWO54    DC    H'254'             MAX LENGTH-2 OF 1 DIRECTORY BLOCK     74800019
FRTEEN   DC    H'14'              FOR DL FIELD OF DE CONTAINING FF ONLY 74900019
KLDL     DC    X'080100'          KEY LENGTH AND DATA LENGTH FOR A      75000019
*                                 DIRECTORY BLOCK                       75200019
KLLOC    EQU   9                  OFFSET FROM START OF A BLK TO KEYLEN  75400019
TWLV     EQU   12                 OFFSET FROM START OF A BLK TO KEY     75600019
FAKELEN  EQU   14                 LENGTH OF FF'S DIRECTORY              75660019
*                                   ENTRY + COUNT                       75720019
BLKLEN   EQU   276                LENGTH OF 1 ENTIRE BLOCK -            75800019
*                                 FLG, MBBCCHHR, KEYLEN, DATALEN, KEY,  76000019
*                                 AND DIRECTORY BLOCK                   76200019
DLEOD    EQU   12                 FOR DATA LENGTH OF EOD RECORD         76400019
DISPO    DC    H'22'              THE DISPLACEMENT FROM THE BEGINNING   80200019
*                                 OF A DIRECTORY BLOCK TO WHICH         80400019
*                                  ENTRIES ARE TO BE ADDED              80600019
         DS    0F                                                       81300019
PATCHLEN EQU   (*-IEBVDM)/20      LENGTH OF 5 PER CENT PATCH AREA       82000019
PATCH    DC    XL(PATCHLEN)'00'   5 PER CENT PATCH AREA          A41780 82700000
         EJECT                                                          83600019
         DCBD  DSORG=PS                                                 83800019
FDAD     EQU   DCBFDAD-IHADCB     OFFSET IN DCB TO DCBFDAD              83900019
DIRCTDCB EQU   DCBDIRCT-IHADCB    OFFSET IN DCB TO DIRECTORY BYTE       83930019
*                                 COUNT USED IN LAST BLOCK              83960019
         EJECT                                                          84000019
IEBMCA   DSECT                                                          84200019
         IEBMCA                                                         84400019
         END                                                            84600019
./  ADD  SSI=72900021,NAME=IEBVMS
         TITLE  'IEBVMS - IEBCOPY MESSAGE HANDLING ROUTINE '            00200019
IEBVMS   CSECT                                                          00400019
*C840000-842000                                                  A36047 00500021
*C835000-837000                                                  A36049 00510021
*C418000                                                         A41780 00550021
*C618000,956000-962000                                           A38720 00550100
* 618000,716000-718000,800000-804000,856000-864000,              X010XX 00550200
*D102000,150000                                                  A44144 00552100
*A100500-103600,148500-151500,040500-041600                      A44144 00554100
* 878000-880000,892000-896000,908000-924000,964000               X010XX 00560000
*C300000,3100000                                               @YA02613 00560202
*A312500                                                       @YA02613 00560302
*A950500                                                       @ZA04370 00570303
*C950000                                                       @ZA04370 00580303
*********************************************************************** 00590303
GR0      EQU   0                                                        00600019
GR1      EQU   1                                                        00800019
GR2      EQU   2                                                        01000019
GR3      EQU   3                                                        01200019
GR4      EQU   4                                                        01400019
GR5      EQU   5                                                        01600019
GR6      EQU   6                                                        01800019
GR7      EQU   7                                                        02000019
GR8      EQU   8                                                        02200019
GR9      EQU   9                                                        02400019
GR10     EQU   10                 BASE REGISTER 1                       02600019
GR11     EQU   11                 BASE REGISTER 2                       02800019
GR12     EQU   12                                                       03000019
GR13     EQU   13                                                       03200019
GR14     EQU   14                                                       03400019
GR15     EQU   15                                                       03600019
TRIPLESP EQU   C'-'                                                     03800019
SKPSPACE EQU   C' '                                                     04000019
C0       EQU   C'0'               EQUATES                        A44144 04050000
C1       EQU   C'1'                 TO SET UP                    A44144 04100000
C2       EQU   C'2'                   RETURN CODE                A44144 04150000
C9       EQU   C'9'                     IN EOJ MSG               A44144 04160000
FF       EQU   X'FF'                                                    04200019
FIFTYSIX EQU   56                                                       04400019
BLNK     EQU   C' '               BLANK CHARACTER                       04405019
BUFL     EQU   120                LENGTH (MINUS 1) OF MSG BUFFER        04410019
CCLEN    EQU   80                 LENGTH OF CONTROL CARD                04415019
CHAR0    EQU   C'0'               FOR SETTING PAGE NBR ZONE BITS        04420019
COFF     EQU   20                 OFFSET IN BFR FOR CTL CD IMAGE        04425019
IEBMNO   EQU   4                  OFFSET INTO 'IEB1  I' FOR MSG NBR     04430019
LFT2     EQU   2                  FOR USE WITH 'SLL' INSTRUCTION        04435019
LINE1    EQU   1                  FOR ADDING 1 TO LINE COUNT            04440019
LINES3   EQU   3                  FOR ADDING 3 TO LINE COUNT            04445019
LNKBK    EQU   4                  FOR STD LINKAGE USE                   04450019
LNKTHS   EQU   8                  FOR STD LINKAGE USE                   04455019
MSGK     EQU   3                  CONSTANT LENGTH OF 3 BYTES WHICH BE-  04460019
*                                 GIN EACH MESSAGE 'DC'                 04465019
M2       EQU   2                  LENGTH OF EACH MSG LIST ENTRY         04470019
NAMLEN   EQU   8                  LENGTH OF NAME                        04475019
NBRLEN   EQU   7                  LENGTH OF NUMBER AND OF 'IEB1  I' CON 04480019
NLEN     EQU   2                  LENGTH OF MSG NBR PUT INTO 'IEB1  I'  04485019
OFF172I  EQU   12                 OFFSET INTO MSG IEB172I FOR NAME      04490019
PGOFF    EQU   116                OFFSET INTO PAGE HEADER FOR PAGE NBR  04495019
PNLEN    EQU   4                  LENGTH OF PAGE NUMBER                 04500019
RCOFF    EQU   25                 OFFSET IN EOJ MSG (WTO) FOR RET CODE  04505019
RCOFFP   EQU   16                 OFFSET IN EOJ MSG (NOT WTO) FOR R.C.  04510019
SYN1     EQU   62                 LENGTH OF 1ST PART OF SYNADAF MSG     04515019
SYN2     EQU   58                 LENGTH OF 2ND PART OF SYNADAF MSG     04520019
TXTOFF   EQU   9                  OFFSET IN BFR FOR MSG TEXT            04525019
VALOFF   EQU   3                  OFFSET INTO VALIDATION ERR MSG        04530019
ZRO      EQU   0                  CONSTANT OF ZERO                      04535019
L1       EQU   1                  LENGTH OF 1                           04540019
L3       EQU   3                  LENGTH OF 3                           04545019
L8       EQU   8                  LENGTH OF 8                           04550019
P1       EQU   1                  TO BE ADDED TO SOMETHING              04555019
P4       EQU   4                  TO ADD 4 TO SOMETHING                 04560019
X0       EQU   0                  OFFSET OF ZERO                        04565019
X1       EQU   1                  OFFSET OF ONE                         04570019
LSYN1    EQU   SYN1+P1                                                  04575019
         EJECT                                                          04580019
         SAVE  (14,12),,*                                               04600019
         LR    GR10,GR15          ADDRESSIBILITY                        04800019
         USING IEBVMS,GR10                                              05000019
         USING IEBMCA,4                                                 05200019
         LA    GR12,SAVE                                                05400019
         ST    GR12,LNKTHS(GR13)  STD LINKAGE                           05600019
         ST    GR13,LNKBK(GR12)   ADDR OF CALLER'S SAVE AREA            05800019
         LR    GR13,GR12                                                06000019
         LA    GR2,MSGLIST                                              06200019
         TM    IOEF2,SPRNOPN      I/O ERROR ON SYSPRINT                 06400019
         BZ    PRNTMSG            NO - PROCEED TO WRITE MSG             06600019
         TM    X0(GR2),IOERF      IS I/O ERR MSG IN BUFFER ALREADY      06800019
         BO    WTOS               ISSUE SYNADAF MSG AS WTO              07000019
         CLI   X1(GR2),BADPRINT   IS SYSPRINT BAD - WTO TO BE ISSUED    07200019
         BNE   TESTM53            NO - SEE IF 'END OF JOB' WTO TO       07400019
*                                 BE WRITTEN                            07600019
         L     GR9,ATXT           ADDR OF MESSAGE TEXT CSECT            07800019
         USING TXTCSECT,GR9                                             08000019
         MVC   IEB172I+OFF172I(NAMLEN),NAMEFLD PUT NAME INTO WTO TEXT   08200019
*                                 MOVE NAME OF SYSPRINT DD WHICH        08400019
*                                 COULD NOT BE OPENED INTO              08600019
*                                 WTOLFBAD WTO                          08800019
         LA    GR1,IEB172I        POINT TO WTO MESSAGE                  09000019
         WTO   MF=(E,(1))                                               09200019
TESTM53  CLI   X1(GR2),M53        IS 'END OF JOB' WTO TO BE ISSUED NOW  09400019
         BNE   RETURN             IF NOT, RETURN TO CALLER NOW          09600019
         LA    GR1,WTOLF5         ADDRESS OF LIST FORM                  09800019
*                                 'END OF JOB' WTO                      10000019
         CLI   RCBUF,C9           IS RETURN CODE 10 OR HIGHER    A44144 10050000
         BH    WTORC12            YES, MOVE IN 12                A44144 10100000
         MVI   RCOFF-P1(GR1),C0   NO, MOVE IN 0X                 A44144 10150000
         MVC   RCOFF(L1,GR1),RCBUF  MOVE IN RETURN CODE          A44144 10160000
         B     GOWTO              AND WRITE EOJ WTO MSG          A44144 10170000
WTORC12  EQU   *                                                 A44144 10250000
         MVI   RCOFF-P1(GR1),C1   MOVE IN 10                     A44144 10300000
         MVI   RCOFF(GR1),C2      MOVE IN 2                      A44144 10350000
GOWTO    EQU   *                                                 A44144 10360000
         WTO   MF=(E,(1))         EXECUTE 'END OF JOB' WTO              10400019
         B     RETURN             NOW EXIT TO CALLER                    10600019
PRNTMSG  EQU   *                                                        10800019
         SR    GR3,GR3                                                  11000019
         IC    GR3,LINECT                                               11200019
         LTR   GR3,GR3            DOES LINE-COUNT NOW = 0               11400019
         BZ    PRNTHEAD           IF SO, GO PRINT PAGE HEADER           11600019
RDYWRT1  EQU   *                                                        11800019
         MVI   MSGBUF,SKPSPACE                                          12000019
RDYWRTHD TM    X0(GR2),IOERF      IS THERE A MSG IN THE BUFFER          12200019
         BO    WRTMSG             IF SO, GO WRITE IT                    12400019
RDYWRT2  EQU   *                                                        12600019
         LA    GR6,MSGBUF+P1                                            12800019
         TM    X0(GR2),CTLCD      IS A CONTROL STMT TO BE PRINTED       13000019
         BO    ADCC               IF ON, GO PRINT THE CONTROL STMT      13200019
         SR    GR11,GR11                                                13400019
         IC    GR11,X1(GR2)       GET MESSAGE CODE                      13600019
         SLL   GR11,LFT2          MULTIPLY MSG CODE NUMBER BY 4 TO      13800019
*                                 USE IT AS AN INDEX TO THE TABLE OF    14000019
*                                 POINTERS TO MESSAGE TEXT              14200019
         L     GR5,MSGTAB(GR11)   OBTAIN THE POINTER TO THE MESSAGE TXT 14400019
         TM    X0(GR2),RCODE      IS A RETURN CODE TO BE PUT INTO MSG   14600019
         BZ    ANYPARM            NO- SEE IF ANY PARAMETERS             14800019
         CLI   RCBUF,C9           IS RETURN CODE 10 OR HIGHER    A44144 14850000
         BH    WRTRC12            YES, MOVE IN 12                A44144 14900000
         MVI   RCOFFP-P1(GR5),C0  NO, MOVE IN 0X                 A44144 14950000
         MVC   RCOFFP(L1,GR5),RCBUF MOVE IN RETURN CODE          A44144 14960000
         B     ANYPARM            AND WRITE EOJ MSG              A44144 14970000
WRTRC12  EQU   *                                                 A44144 15050000
         MVI   RCOFFP-P1(GR5),C1  MOVE IN 10                     A44144 15100000
         MVI   RCOFFP(GR5),C2     MOVE IN 2                      A44144 15150000
ANYPARM  EQU   *                                                        15200019
         TM    X0(GR2),PBIT       ARE THERE ANY PARAMETERS              15400019
         BZ    NOPARAM            NO - CONTINUE PROCESSING              15600019
         TM    PARAMS,NAME        IS THERE A NAME PARAMETER             15800019
         BZ    NBRPARM            NO - IS THERE A NBR PARAMETER         16000019
         SR    GR8,GR8                                                  16200019
         IC    GR8,NAMEDISP       DISPLACEMENT OF NAME FROM BEGINING    16400019
*                                 OF MSG IS IN GR8                      16600019
         AR    GR8,GR5            ADD DISPLACEMENT TO MESSAGE ADDRESS   16800019
         LA    GR8,MSGK(GR8)      POINT TO START OF MSG TEXT            17000019
         MVC   X0(NAMLEN,GR8),NAMEFLD  PUT NAME INTO MSG TEXT           17200019
NBRPARM  TM    PARAMS,NBR         IS THERE A NUMBER PARAMETER           17400019
         BZ    NOPARAM            NO - CONTINUE PROCESSING              17600019
         SR    GR8,GR8                                                  17800019
         IC    GR8,NODISP         DISPLACEMENT OF NAME FROM             18000019
*                                 BEGINNING OF MSG IS IN GR8            18200019
         AR    GR8,GR5            ADD DISPLACEMENT TO MESSAGE ADDRESS   18400019
         LA    GR8,MSGK(GR8)      POINT TO START OF MSG TEXT            18600019
         MVC   X0(NBRLEN,GR8),NOFLD    PUT NUMBER INTO MSG TEXT         18800019
NOPARAM  EQU   *                                                        19000019
         CLI   X1(GR2),GENERUAL   IS THIS A 'VALIDATION ERROR' MSG      19200019
         BNE   NOTVALID           IF NOT, NO SPECIAL SETUP REQUIRED     19400019
         MVC   VALOFF(NAMLEN,GR5),DDVALNM   PUT NAME BEING VALIDATED IN 19600019
*                                 GENERVAL MSG                          19800019
NOTVALID EQU   *                                                        20000019
         MVC   X0(NBRLEN,GR6),IEBCON   SET UP 'IEB1XXI' IN BUFFER       20200019
*                                 BUFFER                                20400019
         MVC   IEBMNO(NLEN,GR6),X1(GR5) PUT MSG NBR INTO 'IEB1  I'      20600019
         SR    GR7,GR7                                                  20800019
         IC    GR7,X0(GR5)        GET LENGTH OF MSG TEXT (IN BYTES)     21000019
         BCTR  GR7,GR0            SUBTR 1 FOR EX                        21200019
         EX    GR7,MOVEMSG        LENGTH OF MSG IS IN GR7               21400019
         TM    PARAMS,MSGULLD     MSG CONTAINING 'COPIED'        X010XX 21450000
         BZ    WRTMSG             NO,GO WRITE MSG                X010XX 21500000
         NI    PARAMS,FF-MSGULLD  RESET FLAG                     X010XX 21550000
         SR    GR8,GR8                                           X010XX 21560000
         IC    GR8,COPDISP        DISPLAC OF ' COPIED ' FROM     X010XX 21570000
*                                 BEGIN OF MSG IS IN GR8         X010XX 21580000
         LA    GR8,TXTOFF(GR8,GR6)     GET POINTER TO ' COPIED ' X010XX 21590000
*                                      IN MSG BUFFER             X010XX 21592000
         TM    ULLDST,LOAD        DOING A LOAD                   X010XX 21594000
         BZ    VMS00220           DONT ALTER MSG                 X010XX 21596000
         MVC   X0(NAMLEN,GR8),LD  MOVE IN 'LOADED'               X010XX 21598000
VMS00220 EQU   *                                                 X010XX 21598400
         TM    ULLDST,UNLOAD      DOING AN UNLOAD                X010XX 21598800
         BZ    WRTMSG             NO,GO WRITE MSG                X010XX 21599200
         MVC   X0(NAMLEN,GR8),UNL MOVE IN 'UNLOADED'             X010XX 21599600
         B     WRTMSG             GO WRITE THE MSG                      21600019
ADCC     LA    GR5,CCIMAGE                                              21800019
         MVC   COFF(CCLEN,GR6),X0(GR5) PUT CONTROL CARD IMAGE           22000019
*                                 INTO THE BUFFER                       22200019
WRTMSG   EQU   *                                                        22400019
         LA    GR6,MSGBUF                                               22600019
WRTHEAD  EQU   *                                                        22800019
         LA    GR7,PRTDCB                                               23000019
         LA    GR8,WTOS           ADDRESS TO BE USED BY SYNAD ROUTINE   23200019
*                                 IF I/O ERROR OCCURRS WHILE 'PRINTING' 23400019
         PUT   (GR7),(GR6)        PRINT MESSAGE                         23600019
         TM    IOEF2,SPRNOPN      I/O ERROR ON SYSPRINT                 23800019
         BZ    NOPUTERR           NO - CONTINUE PROCESSING              24000019
WTOS     MVC   WTOLF1+P4(SYN1),MSGBUF+P1 PUT 1ST PART OF SYNADAF        24200019
*                                 MESSAGE INTO WTO BUFFER               24400019
         MVC   WTOLF2+P4(SYN2),MSGBUF+LSYN1 PUT SECOND PART OF          24600019
*                                 SYNADAF MESSAGE INTO WTO BUFFER       24800019
         LA    GR1,WTOLF1         ADDRESS OF LIST FORM WTO IN GR1       25000019
         WTO   MF=(E,(1))         EXECUTE WTO                           25200019
         LA    GR1,WTOLF2         ADDRESS OF LIST FORM WTO IN GR1       25400019
         WTO   MF=(E,(1))         EXECUTE WTO                           25600019
*                                 TWO WTO'S MUST BE ISSUED BECAUSE      25800019
*                                 IMPLEMENTATION OF MCS DOES NOT        26000019
*                                 ALLOW MORE THAN 72 BYTES PER LINE     26200019
*                                 ON THE OPERATORS CONSOLE              26400019
         B     TESTM53            SEE IF END OF JOB MSG TO BE WRITTEN   26600019
NOPUTERR EQU   *                                                        26800019
         TM    SWITCH,WRTHDMSG    WAS A HEADER JUST PRINTED             27000019
         BO    NISWOFF            YES - DONT CLEAR BUFFER               27200019
         MVI   MSGBUF,BLNK        SET MSG BUFFER TO BLANKS AFTER WRITE  27400019
         MVC   MSGBUF+P1(BUFL),MSGBUF                                   27600019
         B     NOTHEAD            SINCE MSG ISNT A HEADER, GO TO        27800019
*                                 GET THE NEXT MESSAGE                  28000019
NISWOFF  EQU   *                                                        28200019
         NI    SWITCH,FF-WRTHDMSG TURN OFF HEADER SWITCH                28400019
         MVI   MSGBUF,TRIPLESP    IF A HEADER WAS PRINTED,              28600019
*                                 SET CARRIAGE CONTROL CHARACTER TO     28800019
*                                 TRIPLE SPACE                          29000019
         LA    GR3,LINES3(GR3)    ADD 3 TO LINE COUNT                   29200019
         B     RDYWRTHD           BRANCH TO SET UP FOR PRINTING THE     29400019
*                                 MESSAGE WHICH FOLLOWS THE HEADER      29600019
WTOLF1   WTO   '                                                       X29800019
                      ',MF=L,ROUTCDE=11 1ST PART OF MSG        @YA02613 30000002
WTOLF2   WTO   '                                                       X30800019
                  ',MF=L,ROUTCDE=11     2ND PART OF MSG        @YA02613 31000002
WTOLF5   WTO   'IEB147I END OF JOB - X WAS HIGHEST SEVERITY CODE',MF=L,X31200002
               ROUTCDE=11                                      @YA02613 31250002
         SPACE 1                                                        31900019
NOTHEAD  EQU   *                                                        32600019
         LA    GR3,LINE1(GR3)     ADD 1 TO LINE COUNT                   32800019
         STC   GR3,LINECT                                               33000019
         CLI   LINECT,FIFTYSIX    WAS THE 56'TH LINE JUST PRINTED       33200019
         BL    RETCAL             IF NOT, SEE IF NECESSARY TO RETURN    33400019
*                                 TO CALLER                             33600019
         MVI   LINECT,ZRO         RESET LINE COUNT                      33800019
RETCAL   TM    X0(GR2),LASTMSG    IS THIS THE LAST MSG TO HANDLE NOW    34000019
         BO    RETURN             IF SO, EXIT TO CALLER                 34200019
         LA    GR2,M2(GR2)        ELSE POINT TO NXT MSG LIST ENTRY      34400019
         CLI   LINECT,ZRO         DOES PAGE HEADER NEED TO BE PRINTED   34600019
         BNE   RDYWRT1            IF NOT, GO TO SET UP NEXT MESSAGE     34800019
         SR    GR3,GR3                                                  35000019
PRNTHEAD OI    SWITCH,WRTHDMSG                                          35200019
         LA    GR6,HEADBUF                                              35400019
         MVC   PGOFF(PNLEN,GR6),PGNO   PUT PAGE NBR INTO HEADER MSG     35600019
         PACK  PGCONVRT(L8),PGNO+P1(L3) NOW INCREMENT IT                35800019
         CVB   GR8,PGCONVRT       CONVERT PACKED PAGE NUMBER TO         36000019
*                                 BINARY                                36200019
         LA    GR8,X1(GR8)        ADD 1 TO PAGE NUMBER                  36400019
         CVD   GR8,PGCONVRT       CONVERT BACK TO DECIMAL               36600019
         UNPK  PGNO+P1(L3),PGCONVRT                                     36800019
         OI    PGNO+L3,CHAR0      CHANGE SIGN OF LOW ORDER BYTE TO ZONE 37000019
         B     WRTHEAD            GO WRITE THE HEADER                   37400019
RETURN   L     GR13,SAVE+LNKBK                                          37600019
         RETURN  (14,12)                                                37800019
PGCONVRT DC    D'0'               AREA FOR PAGE NBR CONVERSION          38200019
ATXT     DC    A(TXTCSECT)        ADDR OF MESSAGE TEXT CSECT            38600019
SAVE     DC    18F'0'             REGISTER SAVE AREA                    38900019
MOVEMSG  MVC   TXTOFF(X0,GR6),MSGK(GR5) EXECUTED TO PUT MSG INTO BUFFER 39100019
SWITCH   DC    X'00'              INTERNAL SWITCH                       39400019
WRTHDMSG EQU   X'80'         ON = A PAGE HEADER IS BEING WRITTEN        39600019
*              LOW ORDER 7 BITS NOT USED                                39800019
IEBCON   DC    C'IEB1  I'         MESSAGE NUMBER CONSTANT               39900019
LD       DC    CL8' LOADED '                                     X010XX 39950000
UNL      DC    CL8'UNLOADED'                                     X010XX 40000000
* THE FOLLOWING 121 BYTES ARE THE PAGE HEADER TEXT                      40100019
HEADBUF  DC    C'1'            CARRIAGE CONTROL=EJECT                   40200019
         DC    40C' '                                                   40400019
         DC    C'IEBCOPY MESSAGES AND CONTROL STATEMENTS '              40600019
         DC    30C' '                                                   40800019
         DC    C'PAGE '                                                 41000019
         DC    5C' '                                                    41200019
         DS    0F                                                       41400019
PATCHLEN EQU   (*-IEBVMS)/20      LENGTH OF 5 PER CENT PATCH AREA       41600019
PATCH    DC    XL(PATCHLEN)'00'   5 PER CENT PATCH AREA          A41780 41800021
         DS    0F                                                       42000019
MSGTAB   EQU   *-4                MSGTAB IS A TABLE OF POINTERS TO      42200019
*                                 THE MESSAGES. IT MUST START AT THE    42400019
*                                 FIRST ENTRY-4 BECAUSE THERE IS NO     42600019
*                                 MESSAGE WITH THE NUMBER 0             42800019
* NOTE - EACH ADCON IS ACCESSED AS NEEDED BY USING THE MESSAGE CODE AND 42850019
*        MULTIPLYING IT BY 4.  IT IS THEREFORE IMPORTANT TO RETAIN THE  42900019
*        SAME SEQUENCE OF ADCONS AND MESSAGE CODES.                     42950019
*        DC    AL4(IEB100I)       MESSAGE TEXT NOT IN THIS MODULE       43000019
*        DC    AL4(IEB101I)       MESSAGE TEXT NOT IN THIS MODULE       43200019
*        DC    AL4(IEB102I)       MESSAGE TEXT NOT IN THIS MODULE       43400019
*        DC    AL4(IEB103I)       MESSAGE TEXT NOT IN THIS MODULE       43600019
         DC    AL4(IEB104I)                                             43800019
         DC    AL4(IEB105I)                                             44000019
         DC    AL4(IEB106I)                                             44200019
         DC    AL4(IEB107I)                                             44400019
         DC    AL4(IEB108I)                                             44600019
         DC    AL4(IEB109I)                                             44800019
         DC    AL4(IEB110I)                                             45000019
         DC    AL4(IEB111I)                                             45200019
         DC    AL4(IEB112I)                                             45400019
         DC    AL4(IEB113I)                                             45600019
         DC    AL4(IEB114I)                                             45800019
         DC    AL4(IEB115I)                                             46000019
         DC    AL4(IEB116I)                                             46200019
         DC    AL4(IEB117I)                                             46400019
         DC    AL4(IEB118I)                                             46600019
         DC    AL4(IEB119I)                                             46800019
         DC    AL4(IEB120I)                                             47000019
         DC    AL4(IEB121I)                                             47200019
         DC    AL4(IEB122I)                                             47400019
         DC    AL4(IEB123I)                                             47600019
         DC    AL4(IEB124I)                                             47800019
         DC    AL4(IEB125I)                                             48000019
         DC    AL4(IEB126I)                                             48200019
         DC    AL4(IEB127I)                                             48400019
         DC    AL4(IEB128I)                                             48600019
         DC    AL4(IEB129I)                                             48800019
         DC    AL4(IEB130I)                                             49000019
         DC    AL4(IEB131I)                                             49200019
         DC    AL4(IEB132I)                                             49400019
         DC    AL4(IEB133I)                                             49600019
         DC    AL4(IEB134I)                                             49800019
         DC    AL4(IEB135I)                                             50000019
         DC    AL4(IEB136I)                                             50200019
         DC    AL4(IEB137I)                                             50400019
         DC    AL4(IEB138I)                                             50600019
*        DC    AL4(IEB139I)       SYNADAF MSG - TEXT NOT IN THIS MODULE 50800019
         DC    AL4(IEB140I)                                             51000019
         DC    AL4(IEB141I)                                             51200019
         DC    AL4(IEB142I)                                             51400019
         DC    AL4(IEB143I)                                             51600019
         DC    AL4(IEB144I)                                             51800019
         DC    AL4(IEB145I)                                             52000019
         DC    AL4(IEB146I)                                             52200019
         DC    AL4(IEB147I)                                             52400019
         DC    AL4(IEB148I)                                             52600019
         DC    AL4(IEB149I)                                             52800019
         DC    AL4(IEB150I)                                             53000019
         DC    AL4(IEB151I)                                             53200019
         DC    AL4(IEB152I)                                             53400019
         DC    AL4(IEB153I)                                             53600019
         DC    AL4(IEB154I)                                             53800019
         DC    AL4(IEB155I)                                             54000019
         DC    AL4(IEB156I)                                             54200019
         DC    AL4(IEB157I)                                             54400019
         DC    AL4(IEB158I)                                             54600019
         DC    AL4(IEB159I)                                             54800019
         DC    AL4(IEB160I)                                             55000019
         DC    AL4(IEB161I)                                             55200019
         DC    AL4(IEB162I)                                             55400019
         DC    AL4(IEB163I)                                             55600019
         DC    AL4(IEB164I)                                             55800019
         DC    AL4(IEB165I)                                             56000019
         DC    AL4(IEB166I)                                             56200019
         DC    AL4(IEB167I)                                             56400019
         DC    AL4(IEB168I)                                             56600019
         DC    AL4(IEB169I)                                             56800019
         DC    AL4(IEB170I)                                             57000019
*        DC    AL4(IEB171I)       I/O ERROR MSG - TEXT IN IEBIOE MODULE 57200019
         DC    AL4(IEB172I)                                             57400019
*        DC    AL4(IEB173I)       MESSAGE TEXT NOT IN THIS MODULE       57600019
*        DC    AL4(IEB174I)       MESSAGE TEXT NOT IN THIS MODULE       57800019
*        DC    AL4(IEB175I)       MESSAGE TEXT NOT IN THIS MODULE       58000019
*        DC    AL4(IEB176I)       MESSAGE TEXT NOT IN THIS MODULE       58200019
         DC    AL4(IEB177I)                                             58250019
         DC    AL4(IEB178I)                                      X010XX 58260100
         DC    AL4(IEB179I)                                      X010XX 58270000
         DC    AL4(IEB180I)                                      X010XX 58280000
         DC    AL4(IEB181I)                                      X010XX 58290000
*        DC    AL4(IEB182I)       MESSAGE TXT NOT IN THIS MODULE X010XX 58292000
*        DC    AL4(IEB183I)       MESSAGE TXT NOT IN THIS MODULE X010XX 58294000
*        DC    AL4(IEB184I)       MESSAGE TXT NOT IN THIS MODULE X010XX 58296000
         DC    AL4(IEB185I)                                      X010XX 58298000
         DC    AL4(IEB186I)                                      X010XX 58298400
         DC    AL4(IEB187I)                                      X010XX 58298800
*        DC    AL4(IEB188I)       MSG TEXT NOT IN THIS MODULE    A38720 58299200
         EJECT                                                          58300019
IEBVMTXT CSECT                                                          58400019
TXTCSECT EQU   IEBVMTXT                                                 58500019
*********************************************************************** 58600019
* MESSAGE TEXT FORMAT -                                                 58800019
* A 1 BYTE HEXADECIMAL CONSTANT , WHICH IS THE HEXADECIMAL            * 59000019
* EQUIVALENT OF THE NUMBER OF BYTES  IN THE MESSAGE TEXT , IS         * 59200019
* DEFINED                                                             * 59400019
* FOLLOWING THE 1 BYTE HEXADECIMAL CONSTANT IS THE MESSAGE TEXT.      * 59600019
* THE MESSAGE TEXT IS A VARIABLE LENGTH CHARACTER DEFINED FIELD       * 59800019
* OF WHICH THE FIRST TWO BYTES ARE THE VARIABLE TO BE USED AS THE     * 60000019
* MESSAGE NUMBER IN IEB1  I CONSTANT FIELD                              60200019
*********************************************************************** 60400019
*                                                                     * 60600019
* NOTE - NOT ALL MESSAGES ISSUED BY THIS UTILITY PROGRAM HAVE THEIR     60800019
*        MESSAGE TEXT CONTAINED WITHIN THIS MODULE.  THOSE MESSAGES NOT 61000019
* CONTAINED HEREIN ARE NOTED IN THEIR APPROPRIATE LOCATIONS WITHIN THE  61200019
*        MESSAGES HERE.                                                 61400019
* MESSAGE NUMBERS CURRENTLY IN USE ARE -                                61600019
*IEB100I THROUGH IEB187I                                                61800000
*                                                                     * 62000019
*********************************************************************** 62200019
* THE FOLLOWING 4 MESSAGES ARE CONTAINED WITHIN IEBIOE MODULE -         62400019
*IEB100I - I/O ERROR READING MEMBER (MBRNAME)                           62600019
*IEB101I - I/O ERROR WRITING MEMBER DATA AT TTR = (TTR) /READBACK CHECK 62800019
*IEB102I MEMBER (NAME) NOT COPIED DUE TO I/O ERROR                      63000019
*IEB103I MEMBERS (MBRNAME) THROUGH END OF DATA SET ARE NOT ACCESSIBLE   63200019
*        DUE TO I/O ERROR                                               63400019
IEB104I  DC    X'1A'              MSG LENGTH                            63600019
         DC    C'04INVALID COMMAND OR KEYWORD'                          63800019
IEB105I  DC    X'11'              MSG LENGTH                            64000019
         DC    C'05PARAMETER INVALID'                                   64200019
IEB106I  DC    X'13'              MSG LENGTH                            64400019
         DC    C'06UNEQUAL PARENTHESIS'                                 64600019
IEB107I  DC    X'14'              MSG LENGTH                            64800019
         DC    C'07INVALID CONTINUATION'                                65000019
IEB108I  DC    X'20'              MSG LENGTH                            65200019
         DC    C'08MEMBER WITHOUT SELECT OR EXCLUDE'                    65400019
IEB109I  DC    X'37'              MSG LENGTH                            65600019
         DC    C'09NO MIXING OF SELECT AND EXCLUDE MODES IN SAME'       65800019
         DC    C' COPY STEP'                                            66000019
IEB110I  DC    X'19'              MSG LENGTH                            66200019
         DC    C'10INVALID REPLACE SPECIFIED'                           66400019
IEB111I  DC    X'0F'              MSG LENGTH                            66600019
         DC    C'11NULL PARAMETERS'                                     66800019
IEB112I  DC    X'20'              MSG LENGTH                            67000019
         DC    C'12CANNOT RENAME/REPLACE ON EXCLUDE'                    67200019
IEB113I  DC    X'1B'              MSG LENGTH                            67400019
         DC    C'13OUTDD OR INDD NOT SPECIFIED'                         67600019
IEB114I  DC    X'1B'              MSG LENGTH                            67800019
         DC    C'14OUTDD/LIST NOT ON COPY CARD'                         68000019
IEB115I  DC    X'14'              MSG LENGTH                            68200019
         DC    C'15END OF FILE ON SYSIN'                                68400019
IEB116I  DC    X'3D'              MSG LENGTH                            68600019
         DC    C'16MIXING CONTROL STATEMENTS FROM OLD AND NEW '         68800019
         DC    C'VERSION OF IEBCOPY'                                    69000019
IEB117I  DC    X'1C'              MSG LENGTH                            69200019
         DC    C'17TABLES EXCEED ALLOCATED CORE'                        69400019
IEB118I  DC    X'17'              MSG LENGTH                            69600019
         DC    C'18CONTROL STATEMENT ERROR'                             69800019
IEB119I  DC    X'18'              MSG LENGTH                            70000019
         DC    C'19STATEMENT SEQUENCE ERROR'                            70200019
IEB120I  DC    X'19'              MSG LENGTH                            70400019
         DC    C'20         VALIDATION ERROR'                           70600019
IEB121I  DC    X'0A'              MSG LENGTH                            70800019
         DC    C'21OPEN ERROR'                                          71000019
IEB122I  DC    X'1A'              MSG LENGTH                            71200019
         DC    C'22DSCB COULD NOT BE OBTAINED'                          71400019
IEB123I  DC    X'0D'              MSG LENGTH                     X010XX 71600000
         DC    C'23INVALID DSORG'                                X010XX 71650000
IEB124I  DC    X'0D'              MSG LENGTH                            72000019
         DC    C'24INVALID LRECL'                                       72200019
IEB125I  DC    X'11'              MSG LENGTH                            72400019
         DC    C'25INVALID BLOCKSIZE'                                   72600019
IEB126I  DC    X'29'              MSG LENGTH                            72800019
         DC    C'26         REFERENCES AN UNMOVABLE DATA SET'           73000019
IEB127I  DC    X'12'              MSG LENGTH                            73200019
         DC    C'27RECFM INCOMPATIBLE'                                  73400019
IEB128I  DC    X'26'              MSG LENGTH                            73600019
         DC    C'28CANNOT REBLOCK TRACK OVERFLOW DATA SET'              73800019
IEB129I  DC    X'1E'              MSG LENGTH                            74000019
         DC    C'29CANNOT REBLOCK KEYED DATA SETS'                      74200019
IEB130I  DC    X'13'              MESSAGE LENGTH                        74400019
         DC    C'30KEY LENGTHS UNEQUAL'                                 74600019
IEB131I  DC    X'1E'              MSG LENGTH                            74800019
         DC    C'31CANNOT COMPRESS KEYED DATA SET'                      75000019
IEB132I  DC    X'16'              MSG LENGTH                            75200019
         DC    C'32INVALID RE/DE-BLOCKING'                              75400019
IEB133I  DC    X'24'              MSG LENGTH                            75600019
         DC    C'33MINIMUM REQUESTED CORE NOT AVAILABLE'                75800019
IEB134I  DC    X'26'              MSG LENGTH                            76000019
         DC    C'34CANNOT COMPRESS WITH SELECT OR EXCLUDE'              76200019
IEB135I  DC    X'22'              MSG LENGTH                            76400019
         DC    C'35MINIMUM I/O BUFFER NOT ALLOCATABLE'                  76600019
IEB136I  DC    X'36'              MSG LENGTH                     YM7924 76800002
         DC    C'36CANNOT ALLOCATE TWO TRACKS OF I/O BUFFERS FOR '      77000019
         DC    C'COMPRESS'                                       YM7924 77200002
IEB137I  DC    X'4E'                                                    77400019
         DC    C'37CANNOT SPECIFY DUPLICATE MEMBERNAMES FOR SELECT/EXCLX77600019
               UDE/RENAME - NAME=        '                              77800019
IEB138I  DC    X'2A'              MSG LENGTH                            78000019
         DC    C'38CANNOT PROCESS ALL OLD/NEW-NAMES SPECIFIED'          78200019
*IEB139I - SYNADAF MESSAGE TEXT, NOT CONTAINED WITHIN THIS MODULE       78400019
IEB140I  DC    X'29'              MSG LENGTH                            78600019
         DC    C'40         REFERENCES A NULL INPUT DATA SET'           78800019
IEB141I  DC    X'3E'              MSG LENGTH                            79000019
         DC    C'41CANNOT RE/DE-BLOCK WITH NOTE-LIST/USER TTRN IN '     79200019
         DC    C'MEMBER         '                                       79400019
IEB142I  DC    X'1F'              MSG LENGTH                            79600019
         DC    C'42CANNOT CONTINUE TO BUILD CTLTAB'                     79800019
IEB143I  DC    X'40'              MSG LENGTH                     X010XX 80000000
         DC    C'43ALL SELECTED MEMBERS  COPIED  - DID NOT USE ' X010XX 80050000
         DC    C'ALL SPECIFIED INDD''S'                          X010XX 80100000
IEB144I  DC    X'49'              MSG LENGTH                            80600019
         DC    C'44THERE ARE         UNUSED TRACKS IN OUTPUT DATA SET ' 80800019
         DC    C'REFERENCED BY         '                                81000019
IEB145I  DC    X'27'              MSG LENGTH                            81200019
         DC    C'45CANNOT COMPRESS TRACK OVERFLOW DATA SET'             81400019
IEB146I  DC    X'23'              MSG LENGTH                            81600019
         DC    C'46CANNOT COMPRESS WITH RE/DE-BLOCKING'                 81800019
IEB147I  DC    X'28'              MSG LENGTH                            82000019
         DC    C'47END OF JOB - X WAS HIGHEST SEVERITY CODE'            82200019
IEB148I  DC    X'4F'              MSG LENGTH                            82400019
         DC    C'48NO SPACE IN OUTPUT DIRECTORY FOR DIRECTORY ENTRIES'  82600019
         DC    C' FROM INPUT DATA SET         '                         82800019
IEB149I  DC    X'3E'              MSG LENGTH                            83000019
         DC    C'49THERE ARE          UNUSED DIRECTORY BLOCKS IN '      83200019
         DC    C'OUTPUT DIRECTORY'                                      83400019
IEB150I  DC    X'56'              MSG LENGTH                     A36049 83500000
         DC    C'50**WARNING** THE OUTPUT DS REF BY XXXXXXXX CONTAINS T*83600000
               OO MANY DIRECTORY BLOCKS PER TRACK'               A36049 83700000
IEB151I  DC    X'20'              MSG LENGTH                     A36047 84000020
         DC    C'51JOB HAS TERMINATED WITH ERROR(S)'             A36047 84200020
IEB152I  DC    X'38'              MSG LENGTH                            84400019
         DC    C'52         COMPRESSED - WAS ALREADY IN PLACE AND NOT ' 84600019
         DC    C'MOVED'                                                 84800019
IEB153I  DC    X'37'              MSG LENGTH                            85000019
         DC    C'53ALL MEMBERS COMPRESSED - ALL WERE ORIGINALLY '       85200019
         DC    C'COMPRESSED'                                            85400019
IEB154I  DC    X'27'              MSG LENGTH                     X010XX 85600000
         DC    C'54         HAS BEEN SUCCESSFULLY  COPIED '      X010XX 85650000
IEB155I  DC    X'3A'              MSG LENGTH                     X010XX 85700000
         DC    C'55         HAS BEEN SUCCESSFULLY  COPIED  AND ' X010XX 85750000
         DC    C'IS A ''NEWNAME'''                               X010XX 85800000
IEB156I  DC    X'1C'              MSG LENGTH                            86600019
         DC    C'56NOT A DIRECT ACCESS DATA SET'                        86800019
IEB157I  DC    X'16'              MSG LENGTH                            87000019
         DC    C'57DD STATEMENT NOT FOUND'                              87200019
IEB158I  DC    X'1D'              MSG LENGTH                            87400019
         DC    C'58PARM EQUAL COMPRESS NOT VALID'                       87600019
IEB159I  DC    X'3E'              MSG LENGTH                     X010XX 87800000
         DC    C'59NO MEMBERS  COPIED  FROM INPUT DATA SET '     X010XX 87850000
         DC    C'REFERENCED BY         '                                88200019
IEB160I  DC    X'16'              MSG LENGTH                            88400019
         DC    C'60CONCATENATED DATA SETS'                              88600019
IEB161I  DC    X'2D'              MSG LENGTH                            88800019
         DC    C'61COMPRESS TO BE DONE USING INDD NAMED         '       89000019
IEB162I  DC    X'1B'              MSG LENGTH                     X010XX 89200000
         DC    C'62PARM EQUAL COMPRESS IGNORED'                  X010XX 89250000
IEB163I  DC    X'2F'              MSG LENGTH                            89800019
         DC    C'63NO MEMBER NAMES FOR PARTIAL COPY, '                  90000019
         DC    C'WILL NOT COPY'                                         90200019
IEB164I  DC    X'12'              MSG LENGTH                            90400019
         DC    C'64TOTAL COPY ASSUMED'                                  90600019
IEB165I  DC    X'4B'              MSG LENGTH                     X010XX 90800000
         DC    C'65         ''FOUND'' BUT NOT  COPIED , DUE TO ' X010XX 90850000
         DC    C'I/O ERROR READING INPUT DIRECTORY'              X010XX 90900000
IEB166I  DC    X'36'              MSG LENGTH                     X010XX 90950000
         DC    C'66NO MEMBERS  COPIED  TO DATA SET REFERENCED '  X010XX 91000000
         DC    C'BY         '                                    X010XX 91050000
IEB167I  DC    X'49'              MSG LENGTH                     X010XX 91100000
         DC    C'67FOLLOWING MEMBER(S)  COPIED  FROM INPUT '     X010XX 91150000
         DC    C'DATA SET REFERENCED BY          -'              X010XX 91200000
IEB168I  DC    X'5C'              MSG LENGTH                            92600019
         DC    C'68**WARNING** DUE TO ERROR, POSSIBLE LOSS OF '         92800019
         DC    C'ACCESS TO MEMBER DATA AND/OR INCOMPLETE DIRECTORY'     93000019
IEB169I  DC    X'4A'              MSG LENGTH                            93200019
         DC    C'69**WARNING** DUE TO I/O ERROR ON SYSUT4, OUTPUT '     93400019
         DC    C'DIRECTORY MAY BE INCOMPLETE'                           93600019
IEB170I  DC    X'5D'              MSG LENGTH                            93800019
         DC    C'70**WARNING** DUE TO SYSUT3 I/O ERROR, COMPRESS-IN-PLAX94000019
               CE NOT DONE AND COPY OPERATION TERMINATED'               94200019
* THE FOLLOWING MESSAGE IS CONTAINED WITHIN IEBIOE MODULE -             94400019
*IEB171I **WARNING** DIRECTORY MAY NOT REFLECT VALID LOCATION OF MEM-   94600019
*        BER DATA                                                       94800019
IEB172I  WTO   'IEB172I          COULD NOT BE OPENED',MF=L,    @ZA04370*95000003
               ROUTCDE=11                                      @ZA04370 95050003
*IEB173I - MESSAGE TEXT FOR THIS MSG IS IN IEBDV1 MODULE                95200019
* THE FOLLOWING 3 MESSAGES ARE CONTAINED WITHIN THE IEBWSU MODULE -     95400019
*IEB174I ** WARNING ** INPUT RECORD IS A SHORT LENGTH RECORD     A38720 95600021
*        -DDNAME=          -OUTPUT TTRN=                         A38720 95650021
*IEB175I ** WARNING ** INPUT RECORD IS GREATER THAN OUTPUT       A38720 95800021
*        BLKSIZE  -DDNAME=          -OUTPUT TTRN=                A38720 95850021
*IEB176I MEMBER        IN DATASET REFERENCED BY        HAS MORE  A38720 96000021
*        THAN ONE NOTELIST POINTER                               A38720 96200021
IEB177I  DC    X'39'              MSG LENGTH                            96250019
         DC    C'77         WAS SELECTED BUT NOT FOUND IN ANY INPUT DATX96300019
               A SET'                                                   96350019
IEB178I  DC    X'20'              MSG LENGTH                     X010XX 96360100
         DC    C'78NOT AN IEBCOPY UNLOADED DATA SET'             X010XX 96370100
IEB179I  DC    X'2B'              MSG LENGTH                     X010XX 96380000
         DC    C'79COMPRESS IN PLACE NOT VALID FOR LOAD/UNLOAD'  X010XX 96390000
IEB180I  DC    X'3B'              MSG LENGTH                     X010XX 96392000
         DC    C'80MORE THAN ONE INPUT DATA SET SPECIFIED FOR '  X010XX 96394000
         DC    C'UNLOAD OPERATION'                               X010XX 96396000
IEB181I  DC    X'34'              MSG LENGTH                     X010XX 96398000
         DC    C'81CORE CAN NOT BE ALLOCATED FOR LOAD/UNLOAD '   X010XX 96398400
         DC    C'PROCESSING'                                     X010XX 96398800
*      THE FOLLOWING MESSAGES ARE CONTAINED IN THE IEBIOE MODULE X010XX 96399200
* IEB182I  UNLOAD DATA SET REFERENCED BY (NAME) HAS BEEN         X010XX 96399600
*          FLAGGED AS NOT LOADABLE                               X010XX 96399700
* IEB183I  END OF FILE READ ON LOAD DATA SET                     X010XX 96399800
*          REFERENCED BY (NAME)                                  X010XX 96399900
* IEB184I  MEMBER DATA RECORD READ FOR MEMBER (NAME) REFERENCED  X010XX 96449900
*          BY (NAME) IS LONGER THAN DATA SET BLOCKSIZE PLUS      X010XX 96459900
*          KEYLENGTH,CCHHRKDD=(NUMBER)                           X010XX 96469900
IEB185I  DC    X'1A'              MSG LENGTH                     X010XX 96479900
         DC    C'85IS NOT A LOADABLE DATA SET'                   X010XX 96489900
IEB186I  DC    X'2D'              MSG LENGTH                     X010XX 96491900
         DC    C'86INPUT AND OUTPUT DATASETS ON SAME TAPE '      X010XX 96493900
         DC    C'VOLUME'                                         X010XX 96494300
IEB187I  DC    X'23'              MSG LENGTH                     X010XX 96495900
         DC    C'87NOT A DIRECT ACCESS OR TAPE DATASET'          X010XX 96497900
* THE FOLLOWING MESSAGE IS CONTAINED WITHIN MODULE IEBWSU -      A38720 96498300
*IEB188I MEMBER        IN DATASET REFERENCED BY        HAS       A38720 96498700
*        RECORDS GREATER THAN BLKSIZE                            A38720 96499100
         DS    0D                                                X010XX 96499900
         EJECT                                                          96600019
IEBMCA   DSECT                                                          96800019
         IEBMCA                                                         97000019
         END                                                            97200019
./  ADD  SSI=72900022,NAME=IEBVTM
         TITLE 'IEBVTM - INTERMEDIATE AND FINAL TERMINATION PROCESSOR'  00300019
IEBVTM   CSECT                                                          00400019
*A 052980-052984679600-679984,747500                           @YM06438 00410002
*C751000                                                         A41780 00450021
*A678500,679000                                                  A37881 00450100
*A051500,655092-655095                                           A44144 00452222
*C052020,125945,125953                                           A44144 00452600
*A558540-558552                                                  A48762 00454222
*A059500,666500,674500,710500-710700                             A48806 00456200
*********************************************************************** 00460222
*C147000                                                         A41828 00480200
* 532330-532420,552000,725000                                    X010XX 00490100
*D427000-431000,466000-474000                                  @YA02527 00494102
*A076500-076800                                                @ZA01676 00494302
*C077000                                                       @ZA01676 00494502
*D089000-093000                                                @ZA01676 00494702
*A679905,679910,679993                                         @ZA04372 00494803
*C655490                                @XA19752,@YA19226,(ORG)@ZA24954 00496899
*                                                                       00500019
*        FUNCTION -                                                     00600019
*            - CLOSE AND/OR RE-INITIALIZE APPROPRIATE DCB'S             00700019
*            - IF NECESSARY, COPIES 'SPILLED' MERGED OUTPUT DIRECTORY   00800019
*              FROM SYSUT4 TO OUTPUT DATA SET                           00900019
*            - WRITES APPROPRIATE TERMINATION MSGS                      01000019
*                                                                       01100019
*        INPUT - R15 = ADDR OF IEBVTM                                   01200019
*              - R13 = CALLER'S SAVE AREA                               01300019
*              - R4  = POINTER TO COMMUNICATION AREA                    01400019
*                                                                       01500019
*        SUBROUTINES CALLED -                                           01600019
*              IEBVMS - MESSAGE WRITER                                  01700019
*              IEBDRD - READ ROUTINE                                    01800019
*              IEBDWR - WRITE ROUTINE                                   01900019
*                                                                       02000019
*        EXITS -                                                        02100019
*            - TO 'IEBSCN' IF NECESSARY TO READ MORE CONTROL CARDS      02200019
*            - TO 'IEBMNI' IF NECESSARY TO PROCESS ''THE NEXT'' INPUT   02300019
*              DATA SET IN THE CURRENT ''INDD-GROUP''                   02400019
*            - TO THE CALLER/SYSTEM IF AT END-OF-JOB                    02500019
*                                                                       02600019
*        REGISTER DEFINITION                                            02700019
*                                                                       02800019
R0       EQU   0                  WORK/PARAM REG                        02900019
R1       EQU   1                  WORK/PARAM REG                        03000019
R2       EQU   2                  USED INTERNALLY TO POINT TO DCB       03100019
R3       EQU   3                  WORK REG                              03200019
R4       EQU   4                  ADDR OF IEBMCA                        03300019
R5       EQU   5                  INTERNAL SUBROUTINE LINKAGE REG       03400019
R6       EQU   6                  WORK REG                              03500019
R7       EQU   7                  WORK REG                              03600019
R8       EQU   8                  WORK REG                              03700019
R9       EQU   9                  WORK REG                              03800019
R10      EQU   10                 BASE REG                              03900019
R11      EQU   11                 WORK REG                              04000019
R12      EQU   12                 WORK REG                              04100019
R13      EQU   13                 ADDR OF REG SAVE AREA                 04200019
R14      EQU   14                 PARAM/LINK REG                        04300019
R15      EQU   15                 PARAM/LINK REG                        04400019
ZERO     EQU   0                                                        04500019
ONE      EQU   1                                                        04600019
OPEN     EQU   X'10'              FOR TESTING DCBOFLGS                  04700019
LWR      EQU   X'80'              TO SET DCBOFLGS IN OUTDCB, INDICATING 04800019
*                                 LAST OPERATION WAS A WRITE            04900019
PAMDIR   EQU   X'80'              FOR SETTING BPAM DCB - OUTPUT         05000019
FF       EQU   X'FF'                                                    05100019
RTCD     EQU   C'4'                                                     05150000
RCRFRSH  EQU   C'0'               TO REFRESH RETURN CODE IN IEBMCA      05200019
RCCHAR8  EQU   C'8'               TO SET RETURN CODE IF REQUIRED A44144 05202000
D8       EQU   8                  LENGTH OR DISPLACEMENT OF 8           05204019
D2       EQU   2                                                        05208019
D4       EQU   4                                                        05212019
D0       EQU   0                                                        05216019
MS7      EQU   7                                                        05220019
D10      EQU   10                                                       05224019
X00      EQU   X'00'                                                    05228019
D3       EQU   3                                                        05232019
D1       EQU   1                                                        05236019
X01      EQU   X'01'                                                    05240019
D5       EQU   5                                                        05244019
D12      EQU   12                                                       05248019
MS8      EQU   8                                                        05252019
D6       EQU   6                                                        05256019
MS1      EQU   1                                                        05260019
O33      EQU   33             OFFSET IN MSG TEXT FOR OUTDD NAME  A36049 05262000
OFF20    EQU   20                 DISP IN MSG FOR ' COPIED '     X010XX 05264000
OFF27    EQU   27                 DISP IN MSG FOR ' COPIED '     X010XX 05266000
OFF31    EQU   31                 DISP IN MSG FOR ' COPIED '     X010XX 05266400
OFF63    EQU   63                 DISP IN MSG FOR NAME           X010XX 05266800
D7       EQU   7                                                        05268019
D9       EQU   9                                                        05272019
D16      EQU   16                                                       05276019
MS11     EQU   11                 MASK IN BCR INSTR              X010XX 05278000
C0       EQU   C'0'                                                     05280019
X0A      EQU   X'0A'              DISP IN MSG FOR NBR OF TRKS           05284019
X41      EQU   X'41'              DISP IN MSG FOR OUTDD NAME            05288019
X0F      EQU   X'0F'              RETURN CODE BITS (HIGH ORDER)         05292019
D48      EQU   48                 LENGTH OF DDLIST                      05296019
SP253    EQU   253                SUBPOOL FOR PLPA STORAGE     @YM06438 05298002
C24      EQU   24                 SHIFT SP TO HIGH-ORDER BYTE  @YM06438 05298402
         EJECT                                                          05300019
* CALLER'S REGS ARE NOT SAVED, AS CALLER IS NOT RETURNED TO             05400019
         LR    R10,R15            ADDRESSIBILITY                        05500019
         USING IEBVTM,R10                                               05600019
         USING IEBMCA,R4                                                05700019
         LA    R13,RSA            ADDR OF SAVE AREA FOR CALLED RTNES    05800019
         NI    FLG7,NOPRNBDB+SUPPRMSG  RESET SEVERAL BITS               05900019
         SR    R7,R7              INDICATE NO FREEPOOL NEEDED    A48806 05950000
         LA    R2,INDCB                                                 06100019
         USING IHADCB,R2                                                06200019
         BAL   R3,CLOSE           CLOSE INPUT DCB IF IT IS OPEN  X010XX 06300000
         LA    R2,LOADDCB         POINT TO LOAD DCB              X010XX 06350000
         BAL   R3,CLOSE           CLOSE LOAD DCB IF IT IS OPEN   X010XX 06400000
         SPACE 2                                                        06600019
TSTTER   EQU   *                                                        06700019
         TM    VTMFLG1,NOMAIN     WAS GETMAIN NOT SATISFACTORY          06800019
         BO    WEJFTM             YES - WRITE EOJ MSGS AND TERMINATE    06900019
         TM    VTMFLG1,UNUSEND    DID A NON-I/O ERROR OCCUR             07000019
         BO    TSTVAL             YES - SEE IF IT WAS IN IEBDV1         07100019
         TM    VTMFLG1,IOERROR    DID A NON-FATAL I/O ERROR OCCUR       07200019
         BO    TSTERFS            YES - SEE WHAT TYPE OF ERROR          07300019
         SPACE 2                                                        07400019
* NORMAL END OF INPUT DATA SET PROCESSING HAS OCCURRED -                07500019
         TM    ULLDST,UNLOAD      UNLOAD OPERATION               X010XX 07550000
         BO    VTM00120           YES-GO TO ROUTINE FOR NORMAL   X010XX 07560000
*                                 UNLOAD OPERATION TERMINATION   X010XX 07570000
         SPACE 2                                                        07580000
         BAL   R5,RESUT34         LINK TO RESET UT3/4 DCB'S IF REQUIRED 07600019
         TM    FLG4,ODALT         IS DIRECTORY ON SYSUT4       @ZA01676 07650002
         BZ    NRC1               IF NOT, DONT RE-COPY IT      @ZA01676 07660002
         BAL   R5,RCPY            IF UT DIRECTORY IS ON SYSUT4,@ZA01676 07670002
*                                 RE-COPY TO THE OUTPUT DS     @ZA01676 07680002
NRC1     SR    R8,R8                                           @ZA01676 07700002
         CH    R8,INDDCT          ANY MORE INPUT DATA SETS IN THE CUR-  07800019
*                                 RENT 'INDD-GROUP'                     07900019
         BNE   GETNXTIN           YES - SET UP TO PROCESS NEXT ONE      08000019
         TM    CCSWITCH,SYSINEOF  EOF ON SYSIN (NO MORE CONTROL STMTS)  08100019
         BO    NORMTALT           YES - SEE IF NEED TO RE-COPY FROM UT4 08200019
         TM    PARMSWCH,COPYNOW   NO - IS NXT CTL STATEMENT A 'COPY'    08300019
         BZ    PRNIGRP            NO - GO TO PREPARE TO PROCESS NEXT    08400019
*                                 ''INDD-GROUP''                        08500019
         SPACE 2                                                        08600019
NORMTALT EQU   *                  THE FOLLOWING CODE WILL BE EXECUTED   08670019
*                                 WHEN ''NORMAL'' END OF COPY STEP/OP-  08740019
*                                 ERATION HAS OCCURRED                  08810019
         BAL   R5,PRTMBRS         PRINT NAMES OF MEMBERS COPIED         09400019
         BAL   R5,PS0             SEE IF A SELECTIVE COPY               09450019
         BAL   R5,PUDUT           PRT UNUSED TRACKS/BLOCKS MSGS         09500019
         BAL   R5,PREDASD     SEE IF OUTPUT PDS HAD TOO MANY     A36049 09530000
*                      DIRECTORY BLOCKS PER TRACK                A36049 09560000
         BAL   R5,COUTDCB         CLOSE OUTPUT DCB IF IT IS OPEN        09600019
         TM    CCSWITCH,SYSINEOF  DID EOF ON SYSIN OCCUR                09700019
         BZ    RMISC              IF NOT, GO TO EXIT TO IEBSCN          09800019
         TM    VTMFLG1,NOMAIN     WAS IT NECESSARY FOR CORE TO BE FREED 09900019
         BZ    EOJMS              NO, WRITE EOJ MSG AND END JOB         10000019
         BAL   R5,RESODS          YES, LINK TO SET UP BPAM DCB          10100019
         B     EOJMS              WRITE EOJ COMPLETION CODE MSG, CLOSE  10200019
*                                 ALL OPEN DCB'S, FREE CORE, AND RETURN 10300019
*                                 TO SYSTEM/INVOKER                     10400019
         SPACE 2                                                        10500019
PRNIGRP  EQU   *                  EXECUTED WHEN AN INP DATASET'S X010XX 10600000
*                   MEMBRS HAVE BEEN ''NORMALLY'' COPIED/LOADED, X010XX 10650000
*                   THIS WAS THE LAST INPUT DATA SET IN THE CURRENT     10800019
*                   INDD-GROUP, AND THE NEXT CONTROL STATEMENT TO BE    10900019
*                   PROCESSED IS NOT A 'COPY' STATEMENT.                11000019
         BAL   R5,RESOUT          RESET OUTDCB FOR USE WITH NEXT INDD   11100019
         BAL   R5,PRTMBRS         IF DIRECTORY NOT ON SYSUT4, PRINT     11200019
*                                 NAMES OF MEMBERS JUST COPIED          11300019
         BAL   R5,PS0             SEE IF A SELECTIBE COPY               11350019
         B     RMISC              SET UP AND EXIT TO IEBMNI IN MAIN     11400019
*                                 CSECT OF PROGRAM                      11500019
         SPACE 2                                                        11600019
GETNXTIN EQU   *                  EXECUTED WHEN AN INP DATASET'S X010XX 11700000
*                   MEMBRS HAVE BEEN ''NORMALLY'' COPIED/LOADED, X010XX 11750000
*                   THERE IS ANOTHER INPUT DATA SET TO BE PROCESSED IN  11900019
*                   THE CURRENT ''INDD-GROUP''.                         12000019
         BAL   R5,RESOUT          RESET OUTDCB FOR USE WITH NEXT INDD   12100019
         BAL   R5,PRTMBRS         PRT NAMES OF MBRS JUST COPIED UNLESS  12200019
*                                 OUTPUT DIRECTORY IS ON SYSUT4         12300019
         B     SLOCOR             RESET POINTERS AND EXIT TO IEBMNI     12400019
         SPACE 2                                                        12450000
VTM00120 EQU   *                  THIS CODE IS EXECUTED AFTER    X010XX 12460000
*                   NORMAL COMPLETION OF AN UNLOAD OPERATION     X010XX 12470000
         BAL   R5,PRTMBRS         PRINT NAMES OF MEMBRS UNLOADED X010XX 12480000
         BAL   R5,PS0             SEE IF A SELECTIVE UNLOAD AND  X010XX 12490000
*                                 IF SO LOOK FOR UNFOUNDS        X010XX 12492000
         BAL   R5,RESUT34         TO RESET UT3 DCB IF REQUIRED   X010XX 12494000
         SR    R8,R8                                             X010XX 12496000
         CH    R8,INDDCT          MORE INPUT DATASETS IN         X010XX 12498000
*                                 CURRENT INDD GROUP             X010XX 12498600
         BE    VTM00130           NO-DO NOT PRINT ERROR MSG      X010XX 12498800
         BAL   R5,VTM00150        WRITE ERRMSG,SET RET CODE      X010XX 12499000
VTM00130 EQU   *                                                 X010XX 12499200
         TM    CCSWITCH,SYSINEOF  EOF ON SYSIN                   X010XX 12499600
         BO    EOJMS              WRITE EOJ COMPLETION CODE MSG, X010XX 12499800
*                                 CLOSE ALL OPEN DCB'S,FREE CORE X010XX 12499900
*                                 AND RETURN TO SYSTEM/INVOKER   X010XX 12500000
         OI    FLG4,NEWODS        INDICATE NEXT OUTPUT DATASET'S X010XX 12533200
*                                 DIRECTORY NOT UPDATED          X010XX 12543200
         TM    PARMSWCH,COPYNOW   IS NEXT CONTROL STMT A 'COPY'  X010XX 12553200
         BO    VTM00140           YES - GO AROUND                X010XX 12563200
         OI    PARMSWCH,FLUSHSW   NO - CAUSE IEBSCN TO FLUSH TO  X010XX 12565200
*                                 NEXT 'COPY' COMMAND OR TO /*   X010XX 12565600
         SR    R8,R8                                             X010XX 12566000
         CH    R8,INDDCT          ERRMSG ALREADY PRINTED         X010XX 12566400
         BNE   VTM00140           YES - GO AROUND                X010XX 12566500
         BAL   R5,VTM00150        NO - WRITE ERRMSG,SET RET CODE X010XX 12566600
VTM00140 EQU   *                                                 X010XX 12577700
         XC    INDDCT(D2),INDDCT  SET CNT PENDING INDD'S TO ZERO X010XX 12587700
         B     RMISC              SET TO EXIT TO IEBSCN          X010XX 12588100
VTM00150 EQU   *                                                 X010XX 12588500
         MVI   MSG1+D1,MTOINDS    MSGCODE-MORE THAN ONE INP DSET X010XX 12588600
         MVI   MSG1,LASTMSG       INDICATE LAST MESSAGE          X010XX 12588700
         L     R15,VIEBVMS        ADDR OF MESSAGE WRITER         X010XX 12588800
         BALR  R14,R15            LINK TO WRITE MESSAGE          X010XX 12592500
         CLI   RCBUF,RCCHAR8      RETURN CODE GE 8               A44144 12594500
         BCR   MS11,R5            YES-RETURN TO CALLER           X010XX 12594900
         MVI   RCBUF,RCCHAR8      SET RETURN CODE TO 8           A44144 12595300
         BR    R5                 RETURN TO CALLER               X010XX 12595700
         SPACE 2                                                        12596300
TSTVAL   EQU   *                                                        12600019
         OI    FLG7,SUPPRMSG      SET SWITCH SO THAT MEMBSERS COPIED    12630019
*                                 MSGS WILL NOT BE ISSUED               12660019
         TM    IOEF2,NOSYSIN      WAS THERE A PROBLEM EITHER OPENING OR 12700019
*                                 USING SYSIN                           12800019
         BZ    TVFL               NEITHER - HANDLE AS ANY OTHER NON-I/O 12900019
*                                 ERROR                                 13000019
         TM    ULLDST,UNLOAD      IS THIS AN UNLOAD OPERATION    X010XX 13050000
         BO    WEJFTM             YES-WRT EOJ MSGS AND TERM JOB  X010XX 13060000
         TM    FLG4,NEWODS        WAS ANYTHING WRITTEN TO THE OUTPUT    13100019
*                                 DATA SET                              13200019
         BO    WEJFTM             NO - WRT EOJ MSGS AND TERMINATE JOB   13300019
         TM    FLG4,ODALT         IS MERGED DIRECTORY ON SYSUT4         13400019
         BO    T03RCPY            YES - RECOPY AND RESET OUTDCB         13500019
         BAL   R5,CLODS           NO - SET OUTDCB TO PREVIOUS VALID EOF 13600019
         B     WEJFTM             WRT EOJ MSGS AND TERMINATE JOB STEP   13700019
T03RCPY  EQU   *                                                        13800019
         BAL   R5,RCPY            RE-COPY DIRECTORY FROM SYSUT4 TO OUT- 13900019
*                                 PUT DATA SET                          14000019
         LA    R2,OUTDCB                                                14100019
         TM    DCBOFLGS,OPEN      IS OUTPUT DCB OPEN                    14200019
         BZ    WEJFTM             NO - WRT MSGS AND TERMINATE JOB STEP  14300019
         MVC   DCBFDAD(D8),ERPLMFD4    POINT TO PREVIOUS VALID EOF FOR  14400019
*                                      WHEN DIR WAS WRITTEN TO SYSUT4   14500019
         MVC   DCBTRBAL(D2),ERPTB4     SET PREVIOUS VALID TRACK BALANCE 14600019
         MVC   DCBRELAD(D4),ERPTTR4  SET PREV VAL LAST REC TTRN  A41828 14700021
         BAL   R5,CLODCB          CLOSE OUTPUT DCB                      14800019
         B     WEJFTM             WRT EOJ MSGS AND TERMINATE JOB STEP   14900019
         SPACE 2                                                        15000019
TVFL     EQU   *                                                        15100019
         TM    FLG4,NEWODS        WAS ANYTHING WRITTEN TO THE OUTPUT    15200019
*                                 DATA SET YET                          15300019
         BO    RSUTS              NO - SET UP TO FLUSH                  15400019
ERF7ON   EQU   *                  I/O ERROR WRITING TO SYSUT3           15500019
ERF8ON   EQU   *                  I/O ERROR READING FROM SYSUT3         15600019
         TM    ULLDST,UNLOAD      IS THIS AN UNLOAD OPERATION    X010XX 15650000
         BO    RSUTS              YES-SKIP                       X010XX 15660000
         TM    FLG4,ODALT         IS MERGED DIRECTORY ON SYSUT4         15700019
         BZ    SKR9               NO                                    15800019
         BAL   R5,RCPY            RE-COPY DIRECTORY FROM UT4 TO OUTDCB  15900019
SKR9     EQU   *                                                        16000019
         BAL   R5,PRTMBRS         PRINT NAMES OF MEMBERS JUST COPIED    16100019
         BAL   R5,PAMSETUP        SET UP FOR BPAM CLOSE                 16150019
         BAL   R5,COUTDCB         SET OUTDCB TO ''CURRENT'' EOF STATUS  16200019
         SPACE 2                                                        16300019
RSUTS    EQU   *                                                        16400019
         BAL   R5,RESUT34         RESET SYSUT3 AND SYSUT4 DCB'S         16500019
         TM    VTMFLG1,NOMAIN     WAS IT NECESSARY FOR CORE TO BE FREED 16600019
         BZ    TSEOF              NO, DONT SET UP BPAM DCB              16700019
         BAL   R5,RESODS          YES, LINK TO SET UP BPAM DCB          16800019
TSEOF    EQU   *                                                        16900019
         TM    CCSWITCH,SYSINEOF  DID EOF OCCUR ON SYSIN                17000019
         BO    WEJFTM             YES- WRT EOJ MSGS AND TERMINATE JOB   17100019
         NI    IOEF2,SPRNOPN      RESET ALL BUT POSSIBLY THIS BIT       17200019
         XC    INDDCT(D2),INDDCT  SET COUNT OF PENDING INDD'S TO ZERO   17300019
         BAL   R5,CLODS           CLOSE OUTPUT DCB TO PREVIOUS VALID    17330019
*                                   EOF                                 17360019
         OI    FLG4,NEWODS        SET INDICATION THAT (NEXT) OUTPUT DA- 17400019
*                                 TA SET HAS NOT BEEN WRITTEN TO        17500019
         TM    PARMSWCH,COPYNOW   IS NEXT CONTROL STMT A 'COPY'         17600019
         BO    RMISC              YES - SET TO EXIT TO IEBSCN           17700019
         OI    PARMSWCH,FLUSHSW   NO - SET TO CAUSE IEBSCN TO 'FLUSH'   17800019
*                                 TO NEXT 'COPY' COMMAND OR TO '/*'     17900019
         B     RMISC              NOW SET TO EXIT TO IEBSCN             18000019
         SPACE 2                                                        18100019
TSTERFS  EQU   *                  THIS CODE EXECUTED WHEN A ''HARD''    18200019
*                                 I/O ERROR HAS OCCURRED                18300019
         TM    IOEF1,ERF2         I/O ERROR READING INPUT DIRECTORY     18400019
         BO    ERF2ON             YES - SEE IF SELECT WAS BEING DONE    18500019
         TM    IOEF1,ERF3         I/O ERROR READING MEMBER DATA         18600019
*                                 OR I/O ERR LOADING/UNLOADING   X010XX 18650000
         BO    ERF3ON             YES - SEE IF ANY DATA WRITTEN TO OUT- 18700019
*                                 PUT DATA SET                          18800019
         TM    IOEF1,ERF4         I/O ERROR READING OUTPUT DIRECTORY    18900019
         BO    ERF4ON             YES - CHECK FOR ERF10 ON              19000019
         TM    IOEF1,ERF5         I/O ERROR WRITING DIRECTORY TO OUTDCB 19100019
         BO    ERF5ON             YES - CLOSE OUTPUT DCB                19200019
         TM    IOEF1,ERF6         I/O ERROR WRITING MEMBER DATA         19300019
         BO    ERF6ON             YES                                   19400019
         TM    IOEF1,ERF7         I/O ERROR WRITING TO SYSUT3           19500019
         BO    ERF7ON             YES                                   19600019
         TM    IOEF1,ERF8         I/O ERROR READING FROM SYSUT3         19700019
         BO    ERF8ON             YES                                   19800019
         TM    IOEF2,ERF9         I/O ERROR WRITING DIRECTORY TO UT4DCB 19900019
         BO    ERF9ON             YES                                   20000019
         TM    IOEF2,ERF10        I/O ERROR READING DIRECTORY FROM UT4  20100019
         BO    ERF10ON            YES - CHECK FOR ERF4 ON               20200019
***** NOTE - THE FOLLOWING CODE SHOULD NEVER GET EXECUTED -             20300019
         B     WEJFTM             WRITE EOJ ERROR MESSAGE, EOJ COMPLE-  20400019
*                                 TION CODE MSG, CLOSE ALL OPEN DCB'S,  20500019
*                                 FREE CORE, AND RETURN TO SYSTEM/CALLR 20600019
         SPACE 2                                                        20700019
ERF2ON   EQU   *                  I/O ERR READING INPUT PDS DIRECTORY   20800019
         TM    COMDCDSW,SELECTSC  WAS A SELECTIVE COPY BEING DONE       20900019
         BZ    ERF3ON             NO, SEE IF ANY OUTPUT WAS WRITTEN YET 21000019
         L     R6,SEBEGIN         ADDR OF SETAB                         21100019
ERF2L1   EQU   *                                                        21200019
         TM    D0(R6),SEBIT1+SEBIT4  IS DONTCOPY OR NEWNAME BIT ON      21300019
         BC    MS7,ERF2L2         YES- SEE IF THIS IS THE LAST ENTRY    21400019
         TM    D0(R6),SEBIT5      NO- WAS THIS MEMBERNAME ''FOUND''     21500019
         BO    ERF2L3             YES - GET MEMBERNAME FROM THE IDE     21600019
ERF2L2   EQU   *                                                        21700019
         TM    D0(R6),SEBIT6      IS THIS THE LAST ENTRY IN THE SETAB   21800019
         LA    R6,D10(R6)         BUMP POINTER IN CASE IT ISNT          21900019
         BZ    ERF2L1             NOT LAST ENTRY - CHECK NEXT           22000019
         B     ERF3ON             NOW SEE IF ANY OUTPUT WAS WRITTEN YET 22100019
ERF2L3   EQU   *                                                        22200019
         MVI   WKA1,X00                                                 22300019
         MVC   WKA1+D1(D3),D3(R6) SET POINTER TO IDE INTO WORK AREA (ON 22400019
*                                 FULL-WORD BOUNDARY) - POINTER MAY BE  22500019
*                                 AN IN-CORE ADDRESS OR A SYSUT3 TTR.   22600019
         TM    D2(R6),X01         IS THE IDE ON SYSUT3                  22700019
         BO    ERF2RUT3           YES - SET TO READ IT FROM SYSUT3      22800019
         L     R7,WKA1            NO - GET POINTER TO MBRNAME IN IDE    22900019
ERF2SM   EQU   *                                                        23000019
         MVI   MSG1+D1,MFBNC      MSG CODE- MBR FOUND BUT NOT COPIED    23100019
         MVI   MSG1,LASTMSG+PBIT  LAST MSG+BUILD                        23200019
         MVI   PARAMS,NAME+MSGULLD     INDIC NAME PARAMETER AND  X010XX 23300000
*                                      ' COPIED ' IN MSG         X010XX 23350000
         MVI   COPDISP,OFF27      OFFSET OF ' COPIED ' IN MSG    X010XX 23360000
         MVC   NAMEFLD(D8),D0(R7) NAME OF MEMBER TO MSG PARAMETER AREA  23400019
         L     R15,VIEBVMS        ADDR OF MSG WRITING ROUTINE           23500019
         BALR  R14,R15            LINK TO WRITE MSG                     23600019
         B     ERF2L2             SEE IF MORE MEMBERNAMES               23700019
ERF2RUT3 EQU   *                                                        23800019
         L     R0,WKA1            GET SYSUT3 TTR OF SPILLED IDE         23900019
         LA    R1,UT3DCB          SET TO CONVERT                        24000019
         LA    R2,D5(R1)          POINT TO FDAD FIELD OF SYSUT3 DCB     24100019
         L     R15,VTTOCC                                               24200019
         BALR  R14,R15            LINK TO CONVERT TTR TO MBBCCHHR       24300019
         MVI   SENSE,SENSE1+SENSE3 SET TO READ FROM SYSUT3              24400019
         L     R15,VIEBDRD                                              24500019
         BALR  R14,R15            LINK TO READ THE SPILLED IDE          24600019
         L     R7,ADWK            ADDR OF WHERE IDE WAS READ INTO       24700019
         LA    R7,D12(R7)         POINT TO IDE WITHIN WORK BUFFER       24800019
         B     ERF2SM             GO TO PUT MEMBERNAME FROM THE SPILLED 24900019
*                                 IDE INTO THE MESSAGE                  25000019
         SPACE 1                                                        25100019
ERF3ON   EQU   *                  I/O ERROR READING MEMBER DATA         25200019
*                                 OR I/O ERROR LOADING/UNLOADING X010XX 25250000
         TM    ULLDST,UNLOAD      UNLOAD OPERATION               X010XX 25260000
         BO    RSUTS              YES - GO AROUND                X010XX 25270000
         TM    FLG4,NEWODS        ANYTHING WRITTEN TO OUTPUT DATA SET   25300019
         BO    ERF5ON             IF NOT, DONT PRINT TRKS/BLKS MESSAGES 25400019
         BAL   R5,PUDUT           WRITE UNUSED TRKS / UNUSED BLKS MSGS  25500019
ERF5ON   EQU   *                  I/O ERROR WRITING DIRECTORY TO OUTDCB 25600019
ERF6ON   EQU   *                  I/O ERROR WRITING MEMBER DATA         25700019
ERF9ON   EQU   *                  I/O ERROR WRITING DIRECTORY TO UT4DCB 25800019
ERF10ON  EQU   *                  I/O ERROR READING DIRECTORY FROM UT4  25900019
         BAL   R5,CLODS                SET OUTDCB TO PREVIOUS VALID EOF 26000019
         B     RSUTS              GO TO RESET UT3/UT4 DCB'S AND FLUSH   26100019
         SPACE 2                                                        26200019
ERF4ON   EQU   *                  I/O ERR READING OUTPUT DIRECTORY      26300019
         TM    IOEF2,ERF10        DID ERROR OCCUR WHILE READING FROM    26400019
*                                 SYSUT4                                26500019
         BZ    ERF5ON             NO                                    26600019
*                                 YES - MUST HAVE BEEN DURING OUTPUT    26700019
*                                 PRESCAN, SINCE ERF4 AND ERF10 BOTH ON 26800019
         B     ERF3ON             SEE IF COPYING HAS BEEN DONE TO THE   26900019
*                                 OUTPUT DATA SET                       27000019
         SPACE 2                                                        40600019
*********************************************************************** 40700019
RESUT34  LA    R2,UT3DCB                                                40800019
         TM    DCBOFLGS,OPEN      IS SYSUT3 DCB OPEN                    40900019
         BZ    RPT1               IF NOT, SEE IF UT4 DCB IS OPEN        41000019
         MVC   UT3DS1(D8),SYS3TTR RE-INIT PTR TO CURRENT UT3 TTR + TB   41100019
         MVC   DCBFDAD(D8),UT3FDAD SET DCB TO ADDR OF WHERE TO PUT DATA 41200019
RPT1     LA    R2,UT4DCB                                                41300019
         TM    DCBOFLGS,OPEN      IS UT4DCB OPEN                        41400019
         BCR   MS8,R5             IF NOT, RETURN TO CALLER              41500019
         MVC   UT4DS1(D8),SYS4TTR RE-INIT PTR TO CURRENT UT4 TTR + TB   41600019
         MVC   DCBFDAD(D8),UT4FDAD SET DCB TO ADDR OF WHERE TO PUT DATA 41700019
         BR    R5                 NOW RETURN TO CALLER                  41800019
*********************************************************************** 41900019
         SPACE 2                                                        42000019
*********************************************************************** 42100019
RCPY     EQU   *                  RE-COPY MERGED OUTPUT DIRECTORY FROM  42200019
*                   SYSUT4 TO OUTPUT DATA SET                           42300019
         ST    R5,SAV5            SAVE CALLER'S LINKREG                 42400019
         BAL   R5,RESOUT          RESET OUTDCB FOR RECOPYING OUTPUT DIR 42500019
         BAL   R5,RESUT34         RESET SYSUT3 AND SYSUT4 DCB'S         42600019
BCBSET   EQU   *                                                        43200019
         XC    OUTDS1(D4),OUTDS1  SET TTRN TO ZEROES, FOR DIRECTORY     43300019
         MVC   OUTDS1+D4(D2),TRBALBUF  SET TRK BAL TO= TRK CAPACITY     43400019
         MVI   UT4SCTOR,X00       SET UT4 AND OUTPUT SECTOR      S20201 43420020
         MVI   OUTSCTOR,X00         VALUES TO 0 (USED ONLY IF    S20201 43440020
*                                   THEY ARE ON RPS DEVICES)     S20201 43460020
         NI    TAG,TAG5+TAG6                                            43500019
         OI    TAG,TAG1           INDIC WRT'G OUTPUT DIRECTORY TO OUTDS 43600019
         NI    STATUS,STAT7                                             43700019
         OI    STATUS,STAT3       INDIC READ'G DIRECTORY FROM UT4       43800019
         MVI   SENSE,X00                                                43900019
         MVI   FLG2,X00           RESET EOF-REACHED SWITCH              44000019
RWLOOP   MVC   READNEXT(D4),BCB   SET POINTER FOR IEBDRD                44100019
         L     R15,VIEBDRD                                              44200019
         BALR  R14,R15            GO TO READ SPILLED, MERGED OUTPUT     44300019
*                                 DIRECTORY FROM SYSUT4                 44400019
         MVC   WRTNEXT,BCB        SET POINTER FOR IEBDWR                44500019
         L     R15,VIEBVWS                                              44600019
         BALR  R14,R15            GO TO WRITE MERGED OUTPUT DIRECTORY   44700019
*                                 (WHICH WAS JUST READ FROM SYSUT4)     44800019
*                                 ONTO OUTPUT DATA SET.                 44900019
         TM    FLG2,RDEOF         WAS EOF READ/WRITTEN                  45000019
         BZ    RWLOOP             IF NOT, LOOP TO READ AND WRITE MORE   45100019
         LA    R2,UT4DCB                                                45200019
         MVC   DCBFDAD(D8),UT4FDAD RESET SYSUT4 DCBFDAD POINTER         45300019
         MVC   OUTDS1(D6),OUTPTTR  RESET OUTPUT TTRN AND TRBAL          45400019
         NI    FLG4,FF-ODALT      RESET INDICATOR - MERGED OUTPUT DI-   45500019
*                                 RECTORY IS NO LONGER ON SYSUT4        45600019
         CLC   FCT(D2),ZROS       WERE ANY CTLTAB ENTRIES BUILT FOR THE 45700019
*                                 CURRENT INPUT DATA SET JUST PROCESSED 45800019
         BNE   SOMEFD             IF SO, GO ON                          45900019
         MVI   FCT+D1,ONE         ELSE SET FCT TO FAKE OUT PRINTING OF  46000019
*                               NAMES OF MEMBERS 'JUST' COPIED          46100019
SOMEFD   EQU   *                                                        46200019
         L     R5,SAV5            RESTORE CALLER'S LINK REG             46300019
         BR    R5                 RETURN TO CALLER                      46400019
*********************************************************************** 47500019
         SPACE 2                                                        47600019
*********************************************************************** 47700019
RESOUT   LA    R2,OUTDCB          POINT TO OUTPUT DCB                   47800019
         TM    DCBOFLGS,OPEN      IS THE DCB OPEN                       47900019
         BCR   MS8,R5             NO- DONT RESET IT                     48000019
         L     R3,DCBDEBAD        POINT TO OUTPUT DCB'S DEB             48100019
         LA    R3,D0(R3)                                                48200019
         USING DXDEB,R3                                                 48300019
         XC    DCBFDAD(D8),DCBFDAD ZERO OUT CURRENT FDAD                48400019
         MVC   DCBFDAD+D1(D6),DXDEBBIN PUT IN BBCCHH OF OUTPUT DIRECT.  48500019
         DROP  R3                                                       48600019
         MVC   OUTDS1(D6),OUTPTTR SET TTRN AND TRACK BALANCE TO REFLECT 48700019
*                                 STATUS OF OUTPUT DATA SET AFTER LAST  48800019
*                                 DATA RECORD WAS WRITTEN.              48900019
         BR    R5                 EXIT TO CALLER                        49000019
*********************************************************************** 49100019
         SPACE 2                                                        49200019
*********************************************************************** 49300019
COUTDCB  LA    R2,OUTDCB          POINT TO OUTPUT DCB                   49400019
         TM    DCBOFLGS,OPEN      IS THE DCB OPEN                       49500019
         BCR   MS8,R5             IF NOT, IT HASN'T BEEN WRITTEN TO     49600019
         MVC   DCBFDAD(D8),OUTFDAD SET DCB TO POINT TO EOF OF DATA SET  49700019
         MVC   DCBTRBAL(D2),OUTPTTR+D4  SET TRKBAL INTO DCB FOR CLOSE   49800019
         MVC   DCBRELAD(D4),OUTPTTR    PUT LAST REC'S TTRN INTO DCB     49900019
CLODCB   OI    DCBOFLGS,LWR       INDIC LAST OPERATION WAS WRITE        50000019
         CLOSE ((R2))             CLOSE OUTPUT DATA SET                 50100019
         BR    R5                 RETURN TO CALLER                      50200019
CLODS    LA    R2,OUTDCB                                                50300019
         TM    DCBOFLGS,OPEN      IS THE DCB OPEN                       50400019
         BCR   MS8,R5             IF NOT, IT HASN'T BEEN WRITTEN TO     50500019
         MVC   DCBFDAD(D8),ERPLMFD POINT TO PREVIOUS VALID EOF FOR WHEN 50600019
*                                 DIRECTORY WAS WRITTEN TO THE OUTPUT   50700019
*                                 DATA SET                              50800019
         MVC   DCBTRBAL(D2),ERPTB  SET PREVIOUS VALID TRACK BALANCE     50900019
         MVC   DCBRELAD(D4),ERPTTR SET PREVIOUS VALID LASTREC TTRN      51000019
         B     CLODCB             GO SET OFLGS AND CLOSE DCB            51100019
*********************************************************************** 51200019
         SPACE 2                                                        51300019
*********************************************************************** 51400019
PRTMBRS  EQU   *                  PRINT NAMES OF MEMBERS COPIED TO THE  51500019
*                                 OUTPUT DATASET                        52100019
         TM    FLG7,SUPPRMSG      ARE MBRNAMES TO BE PRINTED            52800019
         BCR   MS1,R5             IF SO, DONT PRINT MEMBERS COPIED MSGS 52900019
         CLC   FCT(D2),ZROS       WERE ANY CTLTAB ENTRIES BUILT FOR THE 53000019
*                                 CURRENT INPUT DATA SET                53100019
         BCR   MS8,R5             IF NOT, DONT TRY TO PRINT MBRNAMES    53150019
         TM    COMDCDSW,LISTSW    WAS ''LIST = NO'' SPECIFIED           53203019
         BO    TJCM4              YES - DONT PRINT MESSAGE              53206019
         MVI   MSG1,LASTMSG+PBIT  INDIC LAST MSG AND USE PARAMETER LIST 53215019
         MVI   MSG1+D1,FOLLMCPD   MESSAGE CODE                          53224019
         MVI   PARAMS,NAME+MSGULLD     INDIC NAME PARAMETER AND  X010XX 53233000
*                                      ' COPIED ' IN MSG         X010XX 53235000
         MVI   NAMEDISP,OFF63     OFFSET IN MSG TEXT FOR NAME    X010XX 53237000
         MVI   COPDISP,OFF20      OFFSET OF ' COPIED ' IN MSG    X010XX 53239000
         L     R3,NXTINDS         POINT TO INDD SLOT                    53251019
         MVC   NAMEFLD(D8),D2(R3) PUT INDD NAME INTO PARAMETER LIST     53260019
         L     R15,VIEBVMS        ADDR OF MSG WRITER                    53270019
         BALR  R14,R15            LINK TO WRITE MSG                     53280019
TJCM4    EQU   *                                                        53290019
         L     R3,CTAD            ADDRESS OF CTLTAB                     53300019
TJC      TM    D1(R3),JSTCPD      WAS THIS MEMBER 'JUST NOW' COPIED     53400019
         BO    PUTIT              YES, GO WRT MSG AND RESET 'JSTCPD'    53500019
TSTBIT6  TM    D0(R3),SEBIT6      IS THIS THE LAST CTLTAB ENTRY         53600019
         BCR   MS1,R5             YES, EXIT TO CONTINUE PROCESSING      53700019
         LA    R3,D10(R3)         NO, POINT TO NEXT CTLTAB ENTRY        53800019
         B     TJC                GO TEST TO SEE IF MBRNAME TO PRINT    53900019
PUTIT    EQU   *                                                        54000019
         TM    IOEF2,SPRNOPN      IS SYSPRINT USABLE                    54100019
         BO    NONAMPRT           IF NOT, DONT BOTHER TO SET UP MSG     54200019
         TM    COMDCDSW,LISTSW    WAS ''LIST=NO'' SPECIFIED             54300019
         BO    NONAMPRT           YES - DONT LIST NAMES OF MBRS COPIED  54400019
         TM    D0(R3),SEBIT1      IS THIS A NEWNAME                     54500019
         BZ    REGMSG             NO, SET UP 'NORMAL' MSG CODE          54600019
         MVI   MSG1+D1,RNMEMCOP   YES, SET UP 'NEWNAME' MSG CODE        54700019
         B     SLP                BRANCH AROUND 'NORMAL' MSG CODE       54800019
REGMSG   MVI   MSG1+D1,MEMCOP     SET UP NORMAL (NOT NEWNAME) MSG       54900019
SLP      MVC   NAMEFLD(D8),D2(R3) MEMBERNAME TO IEBVMS PARAM AREA       55000019
         MVI   MSG1,LASTMSG+PBIT  SET INDICATORS FOR IEBVMS INTERFACE   55100019
         MVI   PARAMS,NAME+MSGULLD     INDIC NAME PARAMETER AND  X010XX 55200000
*                                      ' COPIED ' IN MSG         X010XX 55250000
         MVI   COPDISP,OFF31      OFFSET OF ' COPIED ' IN MSG    X010XX 55260000
         MVI   NAMEDISP,X00       OFFSET IN MSG FOR NAME                55300019
         L     R15,VIEBVMS                                              55400019
         BALR  R14,R15            LINK TO PRINT MSG                     55500019
NONAMPRT NI    D1(R3),FF-JSTCPD   RESET NEED-TO-PRINT-NAME BIT          55600019
         B     TSTBIT6            SEE IF DONE WITH CTLTAB SCAN          55700019
*********************************************************************** 55800019
  SPACE 2                                                               55804019
*********************************************************************** 55808019
PS0      TM    COMDCDSW,SELECTSC  WAS A SELECTIVE COPY BEING DONE       55812019
         BCR   D8,R5              IF NOT,DONT LOOK FOR UN-FOUNDS        55816019
         L     R3,SEBEGIN         POINT TO START OF SETAB               55820019
PS1      TM    D0(R3),SEBIT1+SEBIT4+SEBIT5  WAS THIS MEMBER A NEWNAME   55824019
*                                 FOUND, OR FLAGGED AS DONT-COPY        55828019
         BC    D7,PS2             IF SO,SEE IF MORE TO BE TRIED         55832019
         MVI   NAMEDISP,D0        OFFSET IN MSG FOR NAME                55836019
         MVI MSG1,LASTMSG+PBIT  INDIC LAST MSG IN LIST + PARAMETER      55840019
         MVI   PARAMS,NAME        INDIC PARAMETER IS A NAME             55844019
         MVI   MSG1+D1,SMNF       SET UP MSG CODE                       55848019
         MVC   NAMEFLD(D8),D2(R3) PUT MBR NAME INTO PARAM LIST          55852019
         CLI   RCBUF,RTCD         IS RETURN CODE 4 OR HIGHER     A48762 55854022
         BNL   DONTSET            YES- DON'T SET                 A48762 55854422
         MVI   RCBUF,RTCD         SET RETURN CODE 4              A48762 55854822
DONTSET  EQU   *                                                 A48762 55855222
         L     R15,VIEBVMS                                              55856019
         BALR  R14,R15            WRT MBR SELECTED BUT NOT FOUND MSG    55860019
PS2      TM    D0(R3),SEBIT6      IS THIS THE LAST MBR NAME IN SETAB    55864019
         LA    R3,D10(R3)         BUMP PTR IN CASE NOT                  55868019
         BZ    PS1                LOOP IF NOT LAST NAME                 55872019
         BR    R5                 RETURN TO CALLER                      55876019
*********************************************************************** 55880019
         SPACE 2                                                        55900019
*********************************************************************** 56000019
PUDUT    EQU   *                  FORMAT AND PRINT UNUSED TRACKS & UN-  56100019
*                   USED DIRECTORY BLOCKS MESSAGES -                    56200019
         LA    R2,OUTDCB                                                56300019
         TM    DCBOFLGS,OPEN      IS THE OUTPUT DCB OPEN                56400019
         BCR   MS8,R5             IF NOT, CANT PRINT EITHER MESSAGE     56500019
         ST    R5,SAV5            ELSE SAVE CALLER'S LINK REG           56600019
         TM    IOEF2,SPRNOPN      IS SYSPRINT USABLE                    56700019
         BO    TMISSUED           IF NOT, DONT BOTHER TO SET UP MSG     56800019
* FORMAT MSG AS FOLLOWS-                                                56900019
* IEB574I XXX UNUSED TRACKS IN OUTPUT DATA SET REFERENCED BY (DDNAME)   57000019
* SET UP DDNAME AND NBR OF TRKS IN PARAMETER AREA FOR MSG WRITER        57100019
         L     R3,DCBDEBAD                                              57200019
         LA    R3,D0(R3)          POINT TO CORRESPONDING DEB            57300019
         USING DXDEB,R3                                                 57400019
         XR    R6,R6                   CLEAR WORK REGISTER              57500019
         IC    R6,DXDEBUSR             INSERT NUMBER OF EXTENTS         57600019
         BCTR  R6,R0              SUBTRACT ONE                          57700019
         STC   R6,DWORD2               STORE M OF LAST EXTENT           57800019
         SLL   R6,D4              MULTIPLY M BY 16                      57900019
         AR    R3,R6                   BUMP BASE REGISTER OF DEB TO     58000019
*                                        USE LAST EXTENT DESCRIPTION    58100019
*                                        WITH DSECT                     58200019
         MVC   DWORD2+D1(D2),DXDEBBIN  MOVE BIN NUMBER LAST EXTENT      58300019
         MVC   DWORD2+D3(D4),DXDEBECC  MOVE CCHH OF LAST TRACK          58400019
         MVI   DWORD2+D7,X00      SET  R=0                              58500019
         LA    R1,OUTDCB               POINTER TO DCB                   58600019
         BAL   R8,GETATTR              GET TTR                          58700019
         LH    R9,WKA1                 LOAD ENDING TT                   58800019
         MVC   DWORD2(D8),OUTFDAD  MOVE OUTFDAD FOR CONVERSION          58900019
         LA    R1,OUTDCB               POINTER TO DCB                   59000019
         BAL   R8,GETATTR              GET TTR                          59100019
         SH    R9,WKA1                 GET NUMBER OF UNUSED TRACKS      59200019
         CVD   R9,WKA1            MAKE THE RESULT PRINTABLE             59300019
         UNPK  WKA1+D8(D9),WKA1+D3(D5)                                  59400019
         OI    WKA1+D16,C0                                              59500019
         MVC   NOFLD(D7),WKA1+D10  PUT NBR OF TRKS IN MSG PARAM LIST    59600019
         MVC   NAMEFLD(D8),OUTNAME PUT OUTPUT DDNAME IN PARAMETER LIST  59700019
         MVI   PARAMS,NBR+NAME    INDICATE PRESENCE OF NUMBER AND NAME  59800019
*                                 TO IEBVMS (FOR INSERTION INTO MSG)    59900019
         MVI   NODISP,X0A         DISPLACEMENT IN MSG FOR NBR TRKS      60000019
         MVI   NAMEDISP,X41       DISPLACEMENT IN MSG FOR OUTDD NAME    60100019
         B     TRKSDONE           DONE                                  60200019
GETATTR  EQU   *                                                        60300019
         LA    R2,DWORD2               POINTER TO MBBCCHHR              60400019
         L     R15,VCCOTT              POINTER TO CCOTT                 60500019
         BALR  R14,R15                 GET TTR                          60600019
         BR    R8                      RETURN                           60700019
         SPACE                                                          60800019
TRKSDONE EQU   *                                                        60900019
         MVI   MSG1+D1,M49        MSG CODE - TRKS UNUSED                61000019
         MVI   MSG1,LASTMSG+PBIT                                        61100019
         L     R15,VIEBVMS                                              61200019
         BALR  R14,R15            LINK TO WRT MSG                       61300019
TMISSUED EQU   *                                                        61400019
         TM    FLG7,NOPRNBDB      NEED TO SUPPRESS THIS MSG             61700019
         BO    FM2                YES - DONT SET IT UP                  61800019
*              NOW FORMAT NEXT MESSAGE AS FOLLOWS -                     61900019
* IEB580I XXX UNUSED DIRECTORY BLOCKS IN OUTPUT DATA SET REFERENCED BY  62000019
* (DDNAME)                                                              62100019
*                                                                       62200019
         LH    R5,DIRBCNT         GET CT OF MAX POSSIBLE NBR OD BLKS    62300019
         LPR   R5,R5                                                    62400019
         LH    R6,DBCNT           ACTUAL NBR BLOCKS MERGED OUTPUT DIR   62500019
         LPR   R6,R6                                                    62600019
         SR    R5,R6              GET DIFFERENCE                        62700019
         TM    IOEF1,ERF5         DID AN I/O ERROR OCCUR WHILE WRITING  62800019
*                                 DIRECTORY TO OUTPUT DATA SET          62900019
         BO    NOBLKPRT           IF SO, DONT FORMAT OR PRINT MSG       63000019
         TM    IOEF2,SPRNOPN      IS SYSPRINT USABLE                    63100019
         BO    NOBLKPRT           IF NOT, DONT BOTHER TO SET UP MSG     63200019
         CVD   R5,WKA1                                                  63300019
         UNPK  WKA1+D8(D9),WKA1+D3(D5)                                  63400019
         OI    WKA1+D16,C0        MAKE NBR UNUSED BLOCKS PRINTABLE      63500019
         MVC   NOFLD(D7),WKA1+D10                                       63600019
         MVI   NODISP,X0A         DISPLACEMENT IN MSG FOR NBR BLKS      63700019
         MVI   PARAMS,NBR                                               63800019
         MVI   MSG1+D1,UNUSDDB    MSG CODE - DIRECTORY BLOCKS           63900019
         MVI   MSG1,LASTMSG+PBIT                                        64000019
         L     R15,VIEBVMS                                              64100019
         BALR  R14,R15            LINK TO WRT MSG                       64200019
NOBLKPRT EQU   *                                                        64300019
         LTR   R5,R5              WAS LAST OUTPUT DIRECTORY BLOCK WRIT- 64400019
*                                 TEN ON BY 'IEBVDM' ROUTINE            64500019
         BNZ   FM2                IF NOT, RETURN TO CALLER              64600019
DOFREE   EQU   *                                                        64640019
         LM    R1,R2,ADGOT        GET ADDR AND LENGTH OF ORIGINALLY     64680019
*                                 ACQUIRED CORE                         64760019
         S     R2,FREEAMT         SUBTRACT LENGTH INITIALLY FREED       64840019
         LR    R0,R2              PUT CORRECT LENGTH INTO PARAMETER REG 64920019
         FREEMAIN   R,LV=(0),A=(1) FREE ALL ACQUIRED CORE               65000019
         OI    VTMFLG1,NOMAIN     INDICATE FREEMAIN DONE                65080019
         NI    ULLDST,FF-CFREED   RESET CORE FREED FLAG          X010XX 65130000
*                                 USED BY DSCPY                  X010XX 65180000
FM2      L     R5,SAV5            RESTORE CALLER'S LINK REG             65200019
         BR    R5                 RETURN TO CALLER                      65300019
PAMSETUP EQU   *                                                        65310019
         ST    R5,SAV5            SAVE RETURN REG                       65320019
         LH    R5,BPAMOUT+DIRCTDCB  LOAD COUNT OF BYTES USED IN         65330019
*                                     LAST DIRECTORY BLOCK              65340019
         LTR   R5,R5              HAS LAST BLOCK BEEN USED              65350019
         BZ    FM2                NO, RETURN                            65360019
         B     DOFREE             ISSUE FREEMAIN                        65370019
*********************************************************************** 65400019
         SPACE 2                                                        65500019
*********************************************************************** 65507019
PREDASD  EQU   *                                                 A36049 65507200
         TM    FLG4,REDASD        WAS INVALID NDBTR FOUND        A36049 65507400
         BCR   MS8,R5             NO, DON'T WRITE MSG            A36049 65507600
         TM    IOEF2,SPRNOPN      IS SYSPRINT USABLE             A36049 65507800
         BCR   MS1,R5             NO, DON'T WRITE MSG            A36049 65508000
         MVI   MSG1,LASTMSG+PBIT  INDIC LAST MSG AND USE PARAM   A36049 65508200
*                                 LIST                           A36049 65508400
         MVI   MSG1+D1,TMDBTR     MESSAGE CODE                   A36049 65508600
         MVI   PARAMS,NAME        INDIC NAME TO BE PUT INTO MSG  A36049 65508800
         MVI   NAMEDISP,O33       OFFSET IN MESSAGETEXT FOR NAME A36049 65509000
         MVC  NAMEFLD(D8),OUTNAME PUT OUTDD NAME INTO PARAM LIST A36049 65509122
         CLI   RCBUF,RTCD         IS RETURN CODE 4 OR HIGHER     A44144 65509222
         BNL   DONOTSET           YES- DON'T SET                 A44144 65509322
         MVI   RCBUF,RTCD         SET RETURN CODE 4              A44144 65509422
DONOTSET EQU   *                                                 A44144 65509522
         L     R15,VIEBVMS        ADDR OF MSG WRITER             A36049 65509622
         BALR  R14,R15            LINK TO WRITE MSG              A36049 65509722
         NI    FLG4,FF-REDASD     RESET INDIC TO WRITE WARNING   A36049 65509800
*                                  MESSAGE                       A36049 65510000
         BR    R5                 RETURN TO CALLER               A36049 65510200
*********************************************************************** 65510400
         SPACE 3                                                        65510600
*********************************************************************** 65510800
RESODS   EQU   *                  ROUTINE TO OPEN AND CLOSE BPAM        65512019
*                                   DCB WHEN THE LAST DIRECTORY         65517019
*                                   BLOCK HAS BEEN MODIFIED.  THIS      65522019
*                                   WILL UPDATE THE DSCB                65527019
         LA    R2,BPAMOUT         GET ADDR OF THE BPAM DCB              65535019
         ST    R5,SAV5            SAVE LINK REG                         65536019
         LH    R5,DCBDIRCT        SAVE COUNT OF BYTES USED IN LAST      65537019
*                                   DIRECTORY BLOCK                     65538019
         OPEN  ((R2),OUTPUT)                                            65542019
         OI    DCBCIND2,PAMDIR    INDICATE THAT THE OUTPUT DIR @ZA24954 65549099
*                                 WAS MODIFIED                          65556019
         STH   R5,DCBDIRCT        RESTORE COUNT OF BYTES USED IN        65558019
*                                   LAST DIRECTORY BLOCK                65560019
         CLOSE ((R2))                                                   65563019
         L     R5,SAV5            RESTORE LINK REG                      65566019
         BR    R5                 RETURN TO THE CALLER                  65570019
*********************************************************************** 65577019
         SPACE 2                                                        65584019
*********************************************************************** 65600019
WEJFTM   MVI   MSG1+D1,M58        MSG CODE - ABNORMAL END               65700019
         MVI   MSG1,LASTMSG                                             65800019
         L     R15,VIEBVMS                                              65900019
         BALR  R14,R15            LINK TO WRT MSG                       66000019
EOJMS    MVI   MSG1+D1,M53        MSG CODE - EOJ MSG                    66100019
* FORMAT MSG AS FOLLOWS -                                               66200019
* IEB147I END OF JOB - X WAS HIGHEST COMPLETION CODE                    66300019
         MVI   MSG1,LASTMSG+RCODE                                       66400019
         L     R15,VIEBVMS                                              66500019
         BALR  R14,R15            GO WRT EOJ MSG                        66600019
         SR    R7,R7              INDICATE NO FREEPOOL NEEDED    A48806 66650022
         LA    R2,UT3DCB          POINT TO SYSUT3 DCB                   66900019
         BAL   R3,CLOSE           GO CLOSE IT IF ITS OPEN               67000019
         LA    R2,UT4DCB          POINT TO SYSUT4 DCB                   67100019
         BAL   R3,CLOSE           GO CLOSE IT IF ITS OPEN               67200019
         LA    R2,OUTDCB          POINT TO OUTPUT DCB                   67300019
         BAL   R3,CLOSE           GO CLOSE IT IF ITS OPEN               67400019
         LA    R2,ULOADDCB        POINT TO UNLOAD DCB            X010XX 67450000
         BAL   R3,CLOSE           GO CLOSE IT IF ITS OPEN        X010XX 67460000
         LA    R2,PRTDCB          POINT TO SYSPRINT DCB                 67500019
         BCTR  R7,R0              INDICATE FREEPOOL TO BE DONE   A48806 67550022
         BAL   R3,CLOSE           GO CLOSE IT IF ITS OPEN               67600019
         LA    R2,CARDCB          POINT TO SYSIN DCB                    67700019
         BAL   R3,CLOSE           GO CLOSE IT IF ITS OPEN               67800019
         DELETE  EP=IGG019C8      THE PCIAPPENDAGE WAS PRELOADED A37881 67850000
         DELETE  EP=IGG019FT      THE SIOAPPENDAGE WAS PRELOADED A37881 67900000
         SPACE                                                          67950002
* THE FOLLOWING INSTRUCTIONS FREE THE PAGE FIX LIST OBTAINED   @YM06438 67960002
* IN IEBDSCPY AND USED IN THE PAGE FIX PORTION OF THE START    @YM06438 67970002
* I/O APPENDAGE (IGG019FT).                                    @YM06438 67980002
         SPACE                                                          67990002
         TM    MSG2+ONE,OPENERRX  OPEN ERROR ON SYSIN?         @ZA04372 67990503
         BO    DONTFREE           YES,BRANCH AROUND FREEMAIN   @ZA04372 67991003
         LA    R0,SP253(R0,R0)     PICK UP SUBPOOL NUMBER      @YM06438 67992002
         SLL   R0,C24(R0)         SHIFT TO HIGH ORDER BYTE     @YM06438 67994002
         O     R0,SIXENTRY        INSERT LENGTH INTO REG       @YM06438 67996002
         L     R1,FIXLIST         ADDRESS OF GOTTEN AREA       @YM06438 67998002
         FREEMAIN R,LV=(0),A=(1)  FREE FIXLIST AREA            @YM06438 67998402
         SPACE                                                          67998802
DONTFREE EQU   *                                               @ZA04372 67999303
         TM    VTMFLG1,NOMAIN     NEED TO INHIBIT FREEMAIN              68000019
         BO    NOFREE             YES - DONT EXECUTE FREEMAIN SEQUENCE  68100019
         LM    R1,R2,ADGOT        GET ADDR AND LENGTH OF ORIGINALLY     68200019
*                                 ACQUIRED CORE                         68300019
         S     R2,FREEAMT         SUBTRACT LENGTH INITIALLY FREED       68400019
         LR    R0,R2              PUT CORRECT LENGTH INTO PARAMETER REG 68500019
         FREEMAIN   R,LV=(0),A=(1) FREE ALL ACQUIRED CORE               68600019
         SPACE                                                          68700019
NOFREE   EQU   *                                                        68800019
         SR    R15,R15            CLEAR RETURN CODE REGISTER            68900019
         NI    RCBUF,X0F          TURN OFF HIGH ORDER RETURN CODE BITS  69000019
         IC    R15,RCBUF          SET UP RETURN CODE                    69100019
*                   THE FOLLOWING CODE RE-INITIALIZES THE COMMUNICATION 69200019
*                   AREA FOR RE-USE IN CASE THIS PROGRAM IS RE-INVOKED  69300019
*                   WITHOUT BEING RELOADED INTO CORE -                  69400019
         XC    BCB(EOREAD+D4-BCB),BCB                                   69500019
         XC    ADNL(OUTNAME+D8-ADNL),ADNL                               69600019
         XC    WKA1(SV1-WKA1),WKA1                                      69700019
         XC    OUTPTTR(INIDDCTS+D2-OUTPTTR),OUTPTTR              S20201 69800020
         XC    FLG3(NOFLD+D7-FLG3),FLG3                                 69900019
         MVI   LINECT,X00                                               70000019
         MVC   DDLIST(D48),DDLRFRSH RESET DDLIST IN CASE RE-INVOKED     70100019
         MVC   PGNO(D4),PGRFRSH   RESET PAGE NUMBER IN CASE RE-INVOKED  70200019
         MVI   RCBUF,RCRFRSH      RESET RETURN CODE IN CASE RE-INVOKED  70300019
         LA    R13,SV1            POINT TO PRIMARY SAVE AREA            70400019
         L     R13,D4(R13)                                              70500019
         RETURN (14,12),RC=(15)   RETURN TO INVOKER                     70600019
         SPACE 1                                                        70700019
CLOSE    TM    DCBOFLGS,OPEN      IS THIS DCB OPEN                      70800019
         BCR   MS8,R3             IF NOT, DONT CLOSE IT                 70900019
         CLOSE ((R2))             CLOSE THE OPEN DATA SET               71000019
         LTR   R7,R7              FREEPOOL TO BE DONE            A48806 71050022
         BCR   MS8,R3             NO,  EXIT TO CALLER            A48806 71060022
         FREEPOOL (R2)            YES, FREE BUFFER POOL          A48806 71070022
         BR    R3                 EXIT TO NSI OR TO CALLER              71100019
*********************************************************************** 71200019
         SPACE 2                                                        71300019
*********************************************************************** 71400019
SLOCOR   EQU   *                                                        71500019
         MVC   LOCOR(D4),SVLO     RESET POINTER TO LOWEST USABLE CORE   71580019
         MVI   FLG7,X00           RESET THIS SWITCH                     71660019
         NI    COMDCDSW,FF-COMPRESS RESET POSSIBLY-ON COMPRESS SWITCH   71750019
         NI    ULLDST,FF-LOAD     RESET POSSIBLY ON LOAD FLAG    X010XX 71800000
         XC    FCT(D2),FCT        RESET COUNT OF NBR OF CTLTAB ENTRIES  71820019
         LM    R11,R14,RESET1     RESTORE CRITICAL REGS                 71900019
         L     R15,VIEBMNI        ADDR OF ENTRY PT IN MAINFLOW          72000019
         BR    R15                EXIT                                  72100019
*********************************************************************** 72200019
         SPACE 2                                                        72300019
*********************************************************************** 72400019
RMISC    EQU   *                                                 X010XX 72500000
         LA    R2,ULOADDCB        POINT TO ULOADDCB              X010XX 72550000
         BAL   R3,CLOSE           CLOSE IT IF IT IS OPEN         X010XX 72560000
         NI    ULLDST,FF-LOAD-UNLOAD    RESET POSSIBLY ON LOAD   X010XX 72570000
*                                       AND UNLOAD FLAGS         X010XX 72580000
         L     R5,SVHI            RE-INIT POINTERS IN IEBMCA     X010XX 72590000
         ST    R5,HICOR                                                 72600019
         ST    R5,END2ND2                                               72700019
         L     R5,ADWK                                                  72800019
         LA    R5,WKLEN(R5)                                             72900019
         ST    R5,LOCOR                                                 73000019
         ST    R5,INBEGIN                                               73100019
         ST    R5,NXTINDS                                               73200019
         MVI   FLG7,X00           RESET THIS SWITCH                     73270019
         NI    COMDCDSW,FF-COMPRESS RESET POSSIBLY-ON COMPRESS SWITCH   73350019
         XC    FCT(D2),FCT        RESET COUNT OF NBR OF CTLTAB ENTRIES  73420019
         LM    R11,R14,RESET1     RESET CRITICAL REGS                   73500019
         TM    VTMFLG1,NOMAIN     WAS IT NECESSARY FOR CORE TO BE FREED 73510019
         BZ    CLRVTM             NO, DONT SET TO DO ANOTHER GETMAIN    73520019
         XC    VTMFLG1(D2),VTMFLG1 RESET VTMFLG1 AND IOEF1              73530019
         BAL   R5,RESODS          NOW LINK TO SET UP BPAM DCB           73540019
         L     R15,VIEBGME        ADDR OF E.P. TO RE-ISSUE GETMAIN      73550019
         BR    R15                EXIT TO MAIN PROGRAM                  73560019
CLRVTM   XC    VTMFLG1(D2),VTMFLG1 RESET VTMFLG1 AND IOEF1              73580019
         L     R15,VIEBSCX        ADDR OF CTL-CD SCAN MODULE LINKAGE    73600019
         BR    R15                EXIT TO MAINFLOW TO GO TO IEBSCN      73700019
*********************************************************************** 73800019
         SPACE 2                                                        73900019
*********************************************************************** 74000019
DDLRFRSH DC    CL8'SYSIN   '      DDNAMES USED TO REFRESH LIST IN MCA   74100019
         DC    CL8'SYSPRINT'                                            74200019
         DC    CL8'SYSUT1  '                                            74300019
         DC    CL8'SYSUT2  '                                            74400019
         DC    CL8'SYSUT3  '                                            74500019
         DC    CL8'SYSUT4  '                                            74600019
PGRFRSH  DC    C'0001'            TO REFRESH PAGE NO. IN IEBMCA         74700019
SIXENTRY DC    F'48'              MAX LENGTH OF PAGE FIX LIST  @YM06438 74750002
RSA      DC    18F'0'             REGISTER SAVE AREA                    74800019
SAV5     DC    F'0'               INTERNAL SAVE AREA FOR LINKREG        74900019
PTCHLEN  EQU   (*-IEBVTM)/20      LENGTH OF 5 PER CENT PATCH AREA       75000019
PATCH    DC    XL(PTCHLEN)'00'    5 PER CENT PATCH AREA          A41780 75100021
         EJECT                                                          75200019
IEBMCA   DSECT                                                          75300019
         IEBMCA                                                         75400019
         EJECT                                                          75500019
         DCBD  DSORG=PO                                                 75600019
DIRCTDCB EQU   DCBDIRCT-IHADCB    OFFSET IN DCB TO COUNT                75630019
*                                   OF BYTES USED IN LAST DIR BLOCK     75660019
IECDSECT DSECT                                                          75700019
         IECDSECT                                                       75800019
DWORD2   EQU   WKA1+8                  WORK AREA                        75900019
         END                                                            76000019
./  ADD  SSI=72900023,NAME=IEBVTT
         TITLE 'IEBVTT - IEBCOPY CTLTAB SORT'                           00400019
IEBVTT   CSECT                                                          00800019
*D282000-315000                                                  A33287 00805000
*C846000                                                         A41780 00807000
*C831440                                                        YA01455 00808002
*D832160                                                        YA01455 00809002
*********************************************************************** 00810019
*TITLE   IEBVTT - IEBCOPY CTLTAB SORT                                 * 00820019
*                                                                     * 00830019
*STATUS  CHANGE LEVEL 001                                             * 00840019
*                                                                     * 00850019
*FUNCTION/OPERATION - SORTS CTLTAB SO THAT THERE ARE POINTERS TO      * 00860019
*             INPUT DIRECTORY ENTRIES ARRANGED IN TTR ORDER AND IN    * 00870019
*             ALPHABETICAL ORDER.                                     * 00880019
*ENTRY POINTS - IEBVTT                                                * 00890019
*                                                                     * 00900019
*INPUT - A POINTER TO THE CTLTAB                                      * 00910019
*        NUMBER OF ENTRIES TO BE SORTED FOR 'CURRENT' INPUT DATA SET  * 00920019
*        A BIT INDICATING THAT A PARTICULAR ENTRY IS IN 'CURRENT'     * 00930019
*        INPUT DATA SET.                                              * 00940019
*                                                                     * 00950019
*OUTPUT - CTLTAB WITH POINTERS TO INPUT DIRECTORY ENTRIES SORTED      * 00960019
*        IN TTR ORDER AND IN ALPHABETICAL ORDER                       * 00970019
*                                                                     * 00980019
*EXITS - NORMAL - RETURN TO CALLER                                    * 00990019
*        ERROR - RETURN TO IEBVTM VIA IEBVMS.                         * 01000019
*                                                                     * 01010019
*EXTERNAL ROUTINES -NONE                                              * 01020019
*                                                                     * 01030019
*TABLES/WORK AREA - CTLTAB                                            * 01040019
*ATTRIBUTES - SERIALLY REUSEABLE                                      * 01050019
*********************************************************************** 01060019
R0       EQU   0                                                        02400019
R1       EQU   1                                                        03000019
R2       EQU   2                                                        03600019
R3       EQU   3                                                        04200019
R4       EQU   4                                                        04800019
R5       EQU   5                                                        05400019
R6       EQU   6                                                        06000019
R7       EQU   7                                                        06600019
R8       EQU   8                                                        07200019
R9       EQU   9                                                        07800019
R10      EQU   10                                                       08400019
R11      EQU   11                                                       09000019
R12      EQU   12                                                       09600019
R13      EQU   13                                                       10200019
R14      EQU   14                                                       10800019
R15      EQU   15                                                       11400019
SAV8     EQU   8             SAVE AREA DISPLACEMENT                     11430019
SAV4     EQU   4             SAVE AREA DISPLACEMENT                     11460019
LEN10    EQU   10            LENGTH OF 10                               11490019
OFF      EQU   X'00'         OFF POSITION FOR INTERNAL SWITCH           11520019
DISP0    EQU   0             DISPLACEMENT OF 0                          11550019
MS7      EQU   7             MASK OF 7                                  11580019
LEN4     EQU   4             LENGTH OF 4                                11610019
LEN2     EQU   2             LENGTH OF 2                                11640019
LEN1     EQU   1             LENGTH OF 1                                11670019
RTCDE    EQU   C'4'          RETURN CODE OF 4                           11700019
DISP6    EQU   6             DISPLACEMENT OF 6                          11730019
DISP7    EQU   7             DISPLACEMENT OF 7                          11760019
LEN3     EQU   3             LENGTH OF 3                                11790019
DISP1    EQU   1             DISPLACEMENT OF 1                          11820019
LEN9     EQU   9             LENGTH OF 9                                11850019
DISP4    EQU   4             DISPLACEMENT OF 4                          11880019
         SAVE  (14,12),,*                                               12000019
         BALR  R11,R0              ESTABLISH ADDRESSABILITY             12600019
         USING *,R11                                                    13200019
         USING IEBMCA,R4                                                13500019
         LA    R12,SV3                                                  13800019
         ST    R12,SAV8(R13)      SAVE ADDRESS OF CALLED ROUTINES SAVE  14400019
*                                  AREA                                 15000019
         ST    R13,SAV4(R12)      SAVE ADDRESS OF CALLERS SAVE AREA     15600019
         LR    R13,R12                                                  16200019
         LA    R7,LEN10                                                 16400019
         MVI   SWITCH,OFF         INITIALIZE INTERNAL SWITCH            16600019
         L     R10,ADWK           LOAD POINTER TO UT3 BUFFER     A33287 16607020
         MVC   KEYDISP(LEN3,R10),KDD   INITIALIZE KDD PORTION    A33287 16614020
*                                    OF COUNT FIELD INCASE SPILL A33287 16621020
*                                    NEEDED                      A33287 16628020
         LA    R10,DATADISP(R0,R10)    GET POINTER TO FIRST      A33287 16635020
*                                    DATA BYTE IN BUFFER         A33287 16642020
         ST    R10,WORKADDR       INITIALIZE POINTER             A33287 16649020
         SR    R12,R12            CLEAR REG                      A33287 16656020
         STH   R12,NUMENT         INITIALIZE COUNTER             A33287 16663020
         MVI   SPSWITCH,OFF       RESET SPILL SWITCH             A33287 16670020
         OI    FLG2,FMTSPL        INDICATE TO WRITE CT-KEY-DATA  A33287 16677020
*                                   IF NEED TO USE SYSUT3        A33287 16684020
         IC    R12,TAG            SAVE                           A33287 16691020
         STC   R12,TAGSAVE          SWITCHES                     A33287 16698020
         IC    R12,SENSE             TAG AND                     A33287 16705020
         STC   R12,SENSSAVE           SENSE                      A33287 16712020
         SPACE 1                                                 A33287 16719020
*   IN CASE SPILLING MUST BE DONE SWITCHES SENSE AND TAG ARE SET A33287 16726020
*  AT THIS TIME                                                  A33287 16733020
         MVI   SENSE,SENSE1+SENSE3+SENSE8  INDICATE READING ALPHAA33287 16740020
*                                 SORTED INFORMATION FROM SYSUT3 A33287 16747020
*                                 (ALTHOUGH SENSE8 IS NOT USED BYA33287 16754020
*                                 IEBDRD,IEBWSU OR IEBDWR IT IS  A33287 16761020
*                                 USED BY IEBIOE IN CASE AN I/O  A33287 16768020
*                                 ERROR OCCURS)                  A33287 16775020
         MVI   TAG,TAG4           INDICATE WRITING TO SYSUT3     A33287 16782020
MOVEINIT L     R2,CTAD                                                  16800019
         L     R3,BCB                                                   17400019
         ST    R3,BUFAD       INITIALIZE PTR BUFFER1                    18000019
         L     R3,END2ND2                                               18600019
         ST    R3,ENDBUF      SAVE PTR END BUFFER1                      19200019
MOVEDE   TM    DISP0(R2),SEBIT1+SEBIT4 IS ENTRY NEWNAME OR NOT TO BE    19600019
*                                      PROCESSED                        20000019
         BC    MS7,LASTENT             IF EITHER, SEE IF ITS LAST ENTRY 20400019
         TM    DISP0(R2),SEBIT5        IS ENTRY FOUND                   20800019
         BZ    LASTENT            IF NOT, SEE IF THIS IS THE LAST ENTRY 21600019
         L     R3,BUFAD                                                 22200019
         TM    SWITCH,BUFTOTAB                                          22800019
         BO    REVERSE            IF BIT ON, MOVING FROM BUFFER TO TAB. 23400019
         LA    R5,LEN4(R3)                                              24000019
         C     R5,ENDBUF                                                24600019
         LA    R8,LASTENT         LOAD RETURN ADDRESS INCASE     A33287 24800020
*                                    BRANCH TAKEN                A33287 25000020
         BH    BUFFEXT            IF NO MORE SPACE IN BUFFER     A33287 25200020
*                                    GO TO SUBROUTINE TO SET     A33287 25400020
*                                    UP TO SPILL                 A33287 25600020
         MVC   DISP0(LEN4,R3),LEN2(R2) MOVE BYTES 2 THRU 5 OF CTLTAB    25800019
*                                      ENTRY TO BUFFER                  26400019
         ST    R5,BUFAD                                                 27000019
         B     LASTENT            SEE IF MORE ENTRIES TO BE TRIED       27600019
REVERSE  EQU   *                                                 A33287 28000020
         LA    R15,LEN4(R0,R3)    BUMP CURRENT POINTER BY 4      A33287 28400020
         C     R15,ENDBUF         IS THE CURRENT ENTRY ENTIRELY  A33287 28800020
*                                    WITHIN THE BUFFER           A33287 29200020
         LA    R8,LASTENT         LOAD RETURN POINTER IN CASE    A33287 29600020
*                                    BRANCH IS TAKEN             A33287 30000020
         BH    RETRIEVE           NO, GO GET NEXT ENTRY FROM     A33287 30400020
*                                    SYSUT3                      A33287 30800020
         MVC   DISP6(LEN4,R2),DISP0(R3)  YES, RESTORE CTLTAB     A33287 31200020
*                                    ENTRY FROM BUFFER           A33287 31600020
         LA    R3,LEN4(R3)             UPDATE PTR TO NEXT ENTRY IN BUFF 32500019
         ST    R3,BUFAD                                                 33000019
*                             CTLTAB                                    33600019
LASTENT  TM    DISP0(R2),SEBIT6   IS THIS THE LAST ENTRY TO PROCESS     34200019
         BZ    UPDATE              NOT LAST ENTRY THEN UPDATE TO NEXT   34800019
*                                  ENTRY                                35400019
         TM    SWITCH,BUFTOTAB                                          36000019
         BO    RETURN              TTR SORT IS DONE AND ALL ENTRIES     36600019
*                                  HAVE BEEN MOVED FROM BUFFER TO       37200019
*                                  CTLTAB                               37800019
         BAL   R8,PURGE           MAKE SURE THAT LAST BLOCK      A33287 37900020
*                                    HAS BEEN WRITTEN TO UT3     A33287 38000020
*                                    (NO WRITING WILL BE DONE IF A33287 38100020
*                                    SYSUT3 HAS NOT BEEN USED)   A33287 38200020
         MVC   UT3SCTOR(LEN1),SECTSAVE  RESTORE SYSUT3 SECTOR    S20201 38250020
*                                      AS IT WAS BEFORE WRITING  S20201 38300020
*                                      WAS DONE TO SYSUT3        S20201 38350020
         L     R2,CTAD                                                  38400019
         B     FINDENT1           GO LOOK FOR 1ST ENTRY TO PROCESS      39000019
UPDATE   LA    R2,LEN10(R2)       UPDATE PTR NEXT CTLTAB ENTRY          39600019
         B     MOVEDE             GO TEST FOR NEWNAME OR DONT-COPY      40200019
FINDENT1 TM    DISP0(R2),SEBIT1+SEBIT4                                  40800019
         BZ    ENTF               IF NOT NEWNAME OR DONTCOPY, BRANCH    41400019
NEXT     LA    R2,LEN10(R2)                                             42000019
         B     FINDENT1           LOOP TO TEST NEXT CTLTAB ENTRY        42600019
ENTF     TM    DISP0(R2),SEBIT5        WAS THIS ENTRY FOUND             43200019
         BZ    NEXT               IF NOT, TRY NEXT ONE                  43800019
         LA    R3,LEN1                                                  44400019
         CH    R3,FCT                                                   45000019
         ST    R2,ENTRY1                                                45600019
         BL    TEST2              IF MORE THAN 1 ENTRY TO PROCESS, BR.  46200019
         MVC   DISP6(LEN4,R2),LEN2(R2) MOVE PTR TO DE TO RIGHT SIDE OF  46800019
*                                 CTLTAB                                47400019
         B     RETURN             HAVE NOW SET-UP THE ONLY CTLTAB ENTRY 48000019
TEST2    LA    R2,LEN10(R2)                                             48600019
         TM    DISP0(R2),SEBIT1+SEBIT4 IS THIS ENTRY NEW NAME OR DON'T  49200019
*                                 COPY                                  49800019
         BZ    FOUND               SEE IF FOUND                         50400019
LAST     TM    DISP0(R2),SEBIT6   IS THIS THE LAST CTLTAB ENTRY         51000019
         BZ    TEST2               TEST NEXT ENTRY                      51600019
         OI    SWITCH,ENDSORT      TURN ON ENDSORT                      52200019
         B     NEXTPAIR           SEE IF NEED TO MOVE PTRS BACK TO TAB. 52800019
FOUND    TM    DISP0(R2),SEBIT5   ENTRY2 FOUND                          53400019
         BZ    LAST               IF NOT, SEE IF ITS THE LAST ENTRY     54000019
         ST    R2,ENTRY2                                                54600019
         TM    DISP0(R2),SEBIT6   IS THE 2ND COMPARAND THE LAST ENTRY   55200019
         BZ    COMPARE            IF NOT, DONT SET 'ENDSORT' SWITCH     55800019
         OI    SWITCH,ENDSORT                                           56400019
COMPARE  L     R5,ENTRY1                                                57000019
         L     R6,ENTRY2                                                57600019
         CLC   DISP7(LEN3,R5),DISP7(R6) COMPARE ENTRY 1 TO ENTRY2       58200019
         BL    NEXTPAIR            IF IN ORDER SET UP NEXT PAIR         58800019
         ST    R5,NEWENT          IF ENTRY1 HIGH   NEWENT=ENTRY1        59400019
         ST    R6,SAVED           SAVED=ENTRY2                          60000019
COMPENT  L     R2,NEWENT                                                60600019
         L     R3,SAVED                                                 61200019
         CLC   DISP7(LEN3,R2),DISP7(R3) COMPARE NEWENT TO SAVED ENTRY   61600019
         BL    NEXTPAIR           IF IN ORDER, SET UP NEXT PAIR         62100019
         BE    ALIASP             IF SAME, CHECK FOR ALIAS INDICATORS   62400019
INTERC   EQU   *                                                        62800019
         XC    DISP1(LEN9,R2),DISP1(R3)                                 63300019
         XC    DISP1(LEN9,R3),DISP1(R2)                                 63800019
         XC    DISP1(LEN9,R2),DISP1(R3)                                 64300019
         ST    R2,SAVED           SAVED=NEWENT                          64800019
SUBTRACT SR    R2,R7              NEWENT=NEWENT-10                      66000019
         C     R2,CTAD            IS NEWENT BELOW THE CTLTAB            66600019
         BL    NEXTPAIR           YES - AM AT TOP OF CTLTAB NOW         67200019
         TM    DISP0(R2),SEBIT1+SEBIT4                                  67800019
         BC    MS7,SUBTRACT       IF NEWNAME AND/OR DON'T COPY, BRANCH  68400019
         TM    DISP0(R2),SEBIT5   IS 'FOUND' INDICATOR ON               69000019
         BZ    SUBTRACT           IF NOT, SEE IF AT TOP OF CTLTAB YET   69600019
         ST    R2,NEWENT                                                70200019
         B     COMPENT            NOW SEE IF IN SEQUENCE YET            70800019
NEXTPAIR TM    SWITCH,ENDSORT      IS SORT DONE                         71400019
         BZ    UPDATE1            IF NOT, SET TO GET NEXT PAIR          72000019
         OI    SWITCH,BUFTOTAB                                          72600019
         B     MOVEINIT            SORT IS DONE MOVE & PTRS BACK TO     73200019
*                                  TABLE                                73800019
UPDATE1  MVC   ENTRY1(LEN4),ENTRY2  SORT IS NOT DONE GET NEXT PAIR      74400019
         L     R2,ENTRY2                                                75000019
         B     TEST2              GO UPDATE 'ENTRY2' POINTER            75600019
RETURN   EQU   *                                                 A33287 75700020
         NI    FLG2,FF-FMTSPL     TURN OFF FORMAT SPILL SWITCH   A33287 75800020
         IC    R9,TAGSAVE         RESTORE                        A33287 75900020
         IC    R8,SENSSAVE         SWITCHES                      A33287 76000020
         STC   R9,TAG               TAG AND                      A33287 76100020
         STC   R8,SENSE              SENSE                       A33287 76200020
         L     R13,DISP4(R0,R13)  RESTORE REG 13                 A33287 76300020
         RETURN (14,12)                                                 76800019
ALIASP   TM    DISP1(R2),ALIAS                                          77200019
         BZ    NEXTPAIR           IF 'NEWENT' NOT AN ALIAS, DONT SWITCH 77600019
         TM    DISP1(R3),ALIAS                                          77700019
         BO    NEXTPAIR           IF 'SAVED' IS AN ALIAS, DONT SWITCH   77800019
         B     INTERC             ELSE PUT ALIAS ENTRY AFTER MAIN ENTRY 77900019
 DS      0F                                                             78000019
ENTRY1   DC    F'0'               1ST PRIMARY COMPARAND                 78500019
ENTRY2   DC    F'0'               2ND PRIMARY COMPARAND                 79000019
BUFAD    DC    F'0'               PTR TO START OF BFR USED AS WORK AREA 79500019
ENDBUF   DC    F'0'               PTR TO END OF BFR USED AS WORK AREA   80000019
SAVED    DC    F'0'               1ST SECONDARY COMPARAND               80500019
NEWENT   DC    F'0'               2ND SECONDARY COMPARAND               81000019
SWITCH   DC    XL1'0'             INTERNAL SWITCHES -                   81500019
ENDSORT  EQU   X'80'         ON = LAST ENTRY HAS BEEN PROCESSED         82000019
BUFTOTAB EQU   X'40'         ON = MOVING POINTERS FROM BFR BACK TO TAB. 82500019
*              LO ORDER 6 BITS NOT USED                                 83000019
         EJECT                                                   A33287 83006020
**************************************************************** A33287 83012020
*                                                                A33287 83018020
*     THE PURPOSE OF THIS SUBROUTINE IS TO RETAIN OR PASS BACK   A33287 83024020
*   SAVED ALPHA SORTED INFORMATION WHEN THERE IS NO ROOM LEFT IN A33287 83030020
*   THE I/O BUFFER                                               A33287 83036020
*                                                                A33287 83042020
**************************************************************** A33287 83048020
         SPACE 2                                                 A33287 83054020
         DS    0H                                                A33287 83060020
BUFFEXT  EQU   *                                                 A33287 83066020
         SPACE 1                                                 A33287 83072020
         MVC   DISP0(LEN4,R10),LEN2(R2) MOVE BYTES 2 THRU 5 OF   A33287 83078020
*                                   CTLTAB TO UT3 I/O BUFFER     A33287 83084020
         LA    R10,DISP4(R0,R10)  BUMP CURRENT UT3 BUFFER        A33287 83090020
*                                    LOCATION                    A33287 83096020
         LH    R1,NUMENT          LOAD CURRENT COUNT OF ENTRIES  A33287 83102020
*                                    IN THIS BLOCK               A33287 83108020
         LA    R1,DISP1(R0,R1)    UP COUNTER BY 1                A33287 83114020
         STH   R1,NUMENT          SAVE UPDATED COUNT             A33287 83120020
         CH    R1,LIMITENT        ENTIRE BLOCK BUILT             A33287 83126020
         BCR   LOW,R8             NO, RETURN                     A33287 83132020
         SPACE 1                                                 A33287 83138020
WRITE    LA    R1,UT3DCB               GET POINTER TO UT3 DCB   YA01455 83144002
         USING IHADCB,R1                                         A33287 83150020
         TM    DCBOFLGS,OPEN      IS SYSUT3 OPEN                 A33287 83156020
OPEN     EQU   X'10'              DCB OPEN FLAG                  A33287 83162020
         BO    UT3OPEN            YES, GO AROUND                 A33287 83168020
         DROP  R1                                                A33287 83174020
         SPACE 1                                                 A33287 83180020
         L     R15,VIEBDV3        ADDR OF ROUTINE TO OPEN UT3    A33287 83186020
         BALR  R14,R15            OPEN UT3 - NO RETURN IF        A33287 83192020
*                                    NOT OPEN                    A33287 83198020
         SPACE 1                                                 A33287 83204020
UT3OPEN  EQU   *                                                 A33287 83210020
         L     R15,VIEBVWS        LINK TO WRITE                  A33287 83222020
         BALR  R14,R15               THIS BLOCK                  A33287 83228020
         SPACE 1                                                 A33287 83234020
         TM    SPSWITCH,FRSTSPIL  IT THIS THE FIRST TIME TO UT3  A33287 83240020
         BO    DONEONCE           NO, GO AROUND                  A33287 83246020
         SPACE 1                                                 A33287 83252020
         OI    SPSWITCH,FRSTSPIL  SET SWITCH                     A33287 83258020
         MVC   SPILLTTR(LEN3),UT3DS1   SAVE TTR OF FIRST RECORD  A33287 83264020
         MVC   SECTSAVE(LEN1),UT3SCTOR  SAVE SYSUT3 SECTOR VALUE S20201 83265020
*                                      SO IT CAN BE USED WHEN    S20201 83266020
*                                      IT IS TIME TO READ THE    S20201 83267020
*                                      SPILLED INFORMATION       S20201 83268020
* CALCULATE THE NUMBER OF SYSUT3 RECORDS TO BE WRITTEN PER TRACK A33287 83270020
*   THIS VALUE WILL BE NEEDED TO READ BACK THE SPILLED ALPHA     A33287 83276020
*   SORTED CTLTAB ENTRIES AFTER THE TTR SORT IS DONE             A33287 83282020
*                                                                A33287 83288020
*   THE FOLLOWING FORMULA IS USED -                              A33287 83294020
*                                                                A33287 83300020
*   NUMBER OF RECORDS PER TRACK =                                A33287 83306020
*                                                                A33287 83312020
*   1 + (( TRK CAP - LENGTH LAST REC) / LENGTH NOT LAST REC)     A33287 83318020
         SPACE 2                                                 A33287 83324020
         LA    R9,UT3CHAR         LOAD POINTER TO UT3 DEVICE     A33287 83330020
*                                    INFORMATION                 A33287 83336020
         USING DEVCSECT,R9                                       A33287 83342020
         SPACE 1                                                 A33287 83348020
         LH    R15,TRKCAP         LOAD TRACK CAPACITY            A33287 83354020
         LH    R1,UT3LRECL        LOAD UT3 DATA LENGTH           A33287 83360020
         SR    R15,R1             SUBTRACT DATA LENGTH FROM      A33287 83366020
*                                    TRACK CAPACITY              A33287 83372020
         SR    R0,R0              CLEAR REG                      A33287 83378020
         SR    R14,R14            CLEAR REG                      A33287 83384020
         IC    R0,OVERL           INSERT LAST RECORD OVERHEAD    A33287 83390020
         TM    DEVFLAG,HALFOVER   TWO BYTE OVERHEAD FOR THIS     S20201 83390620
*                                    DEVICE                      S20201 83391220
         BNO   NOTTWO             NO, USE ONE BYTE OVERHEAD      S20201 83391820
         SPACE 1                                                 S20201 83392420
         LH    R0,OVERI           LOAD TWO BYTE OVERHEAD         S20201 83393020
*                                    (OVERHEAD LAST=OVERHEAD     S20201 83393620
*                                    NOT LAST RECORD)            S20201 83394220
NOTTWO   EQU   *                                                 S20201 83394820
         IC    R14,OVERK          INSERT KEYED OVERHEAD          A33287 83396020
         SR    R0,R14             SUBTRACT KEYED OVERHEAD FROM   A33287 83402020
*                                    LAST RECORD OVERHEAD        A33287 83408020
         SR    R15,R0             SUBTRACT TOTAL OVERHEAD OF     A33287 83414020
*                                    LAST RECORD FROM (TRK CAP - A33287 83420020
*                                    DATA LENGTH)                A33287 83426020
         TM    DEVFLAG,TOLFAC     TOLERANCE FACTOR TO BE USED    A33287 83432020
*                                    (ONLY APPLIES TO NOT        A33287 83438020
*                                    LAST RECORD)                A33287 83444020
         BZ    NOTOLER            NO, GO AROUND                  A33287 83450020
         SPACE 1                                                 A33287 83456020
         MH    R1,TOLER           EFFECTIVE DATA LENGTH =        A33287 83462020
         SRL   R1,LEN9               ((DL * TOLER) / 512)        A33287 83468020
         SPACE 1                                                 A33287 83474020
NOTOLER  EQU   *                                                 A33287 83480020
         TM    DEVFLAG,HALFOVER   TWO BYTE OVERHEAD FOR THIS     S20201 83481020
*                                    DEVICE                      S20201 83482020
         BO    USETWO             YES, GO AROUND - R0 ALREADY    S20201 83483020
*                                    CONTAINS (OVERHEAD NOT LAST S20201 83484020
*                                    - KEY OVERHEAD)             S20201 83485020
         IC    R0,OVERI           INSERT OVERHEAD NOT LAST       A33287 83486020
*                                    RECORD                      A33287 83492020
         SR    R0,R14             SUBTRACT KEY OVERHEAD FROM     A33287 83498020
*                                    OVERHEAD NOT LAST RECORD    A33287 83504020
USETWO   EQU   *                                                 S20201 83507020
         AR    R1,R0              ADD TOTAL OVERHEAD TO DATA     A33287 83510020
*                                    LENGTH (OR EFFECTIVE DATA   A33287 83516020
*                                    LENGTH)                     A33287 83522020
         SR    R14,R14            CLEAR REG FOR DIVISION         A33287 83528020
         DR    R14,R1             ((TRK CAP - DL LAST)/DL NOT    A33287 83534020
*                                    LAST))                      A33287 83540020
         LA    R15,LEN1(R0,R15)   ADD ONE TO QUOTIENT            A33287 83546020
         STH   R15,MAXREC         STORE AS NUMBER OF RECORDS PER A33287 83552020
*                                    SYSUT3 TRACK                A33287 83558020
         DROP  R9                                                A33287 83564020
         SPACE 1                                                 A33287 83570020
DONEONCE EQU   *                                                 A33287 83576020
         L     R10,WORKADDR       RESTORE POINTER FOR NEXT PASS  A33287 83582020
         SR    R15,R15            CLEAR REG                      A33287 83588020
         STH   R15,NUMENT         INITIALIZE COUNTER             A33287 83594020
         BR    R8                 RETURN                         A33287 83600020
         SPACE 2                                                 A33287 83606020
PURGE    EQU   *                                                 A33287 83612020
         LH    R15,NUMENT         LOAD ENTRY COUNTER             A33287 83618020
         LTR   R15,R15            IS IT ZERO                     A33287 83624020
         BNZ   WRITE              NO, GO WRITE OUT LAST BLOCK    A33287 83630020
         BR    R8                 YES, RETURN                    A33287 83636020
         SPACE 3                                                 A33287 83642020
RETRIEVE EQU   *                                                 A33287 83648020
         LH    R9,NUMENT          LOAD CURRENT ENTRY NUMBER      A33287 83654020
         LTR   R9,R9              IS IT ZERO                     A33287 83660020
         BNZ   GOTSOME            NO, I/O NOT NEEDED             A33287 83666020
         SPACE 1                                                 A33287 83672020
         USING IHADCB,R1                                         A33287 83678020
         LA    R1,UT3DCB          LOAD POINTER TO UT3 DCB        A33287 83684020
         LR    R9,R2              SAVE R2                        A33287 83690020
         LA    R2,DCBFDAD         GET POINTER TO FDAD FIELD      A33287 83696020
         DROP  R1                                                A33287 83702020
         L     R0,SPILLTTR        LOAD TTR TO BE CONVERTED       A33287 83708020
         L     R15,VTTOCC         GO CONVERT TTR TO MBBCCHHR     A33287 83714020
         BALR  R14,R15            FOR READ                       A33287 83720020
         LR    R2,R9              RESTORE R2                     A33287 83726020
         L     R15,VIEBDRD        LOAD PTR TO READ ROUTINE       A33287 83732020
         BALR  R14,R15            GO READ A RECORD               A33287 83738020
         SPACE 1                                                 A33287 83744020
         SR    R1,R1              CLEAR REG                      A33287 83750020
         IC    R1,SPILLTTR+LEN2   INSERT R OF CURRENT TTR        A33287 83756020
         LA    R1,LEN1(R0,R1)     BUMP R BY ONE                  A33287 83762020
         CH    R1,MAXREC          IS NEXT RECORD ON SAME TRACK   A33287 83768020
         BNH   SAMETRK            YES, GO AROUND                 A33287 83774020
         SPACE 1                                                 A33287 83780020
         LA    R1,LEN1            SET RECORD NUMBER TO ONE       A33287 83786020
         LH    R9,SPILLTTR        LOAD CURRENT TT                A33287 83792020
         LA    R9,LEN1(R0,R9)     UP TT BY ONE                   A33287 83798020
         STH   R9,SPILLTTR        STORE BACK UPDATED TT          A33287 83804020
         SPACE 1                                                 A33287 83810020
SAMETRK  EQU   *                                                 A33287 83816020
         STC   R1,SPILLTTR+LEN2   STORE R OF NEXT RECORD         A33287 83822020
         L     R10,WORKADDR       INITIALIZE CURRENT UT3 BUFFER  A33287 83828020
*                                    POINTER                     A33287 83834020
         MVC   NUMENT(LEN2),LIMITENT   SET FOR MAX ENTRIES IN    A33287 83840020
*                                    UT3 RECORD                  A33287 83846020
GOTSOME  EQU   *                                                 A33287 83852020
         MVC   DISP6(LEN4,R2),DISP0(R10)  MOVE FOUR BYTE ENTRY   A33287 83858020
*                                    FROM BUFFER TO CTLTAB       A33287 83864020
         LA    R10,DISP4(R0,R10)  BUMP CURRENT UT3 BUFFER POINTERA33287 83870020
         LH    R15,NUMENT         LOAD CURRENT NUMBER OF ENTRIES A33287 83876020
*                                    IN BUFFER                   A33287 83882020
         BCTR  R15,R0             DECREMENT NUMBER OF ENTRIES    A33287 83888020
*                                    BY ONE                      A33287 83894020
         STH   R15,NUMENT         UPDATE COUNTER                 A33287 83900020
         BR    R8                 RETURN                         A33287 83906020
         SPACE 2                                                 A33287 83912020
* CONSTANTS AND WORK AREA FOR SPILL                              A33287 83918020
NUMENT   DC    H'0'               CURRENT NUMBER OF ENTRIES IN   A33287 83924020
*                                    UT3 BUFFER                  A33287 83930020
LIMITENT DC    H'20'              MAXIMUM NUMBER OF ENTRIES FOR  A33287 83936020
*                                   UT3 BLOCK                    A33287 83942020
KDD      DC    X'000050'          KDD VALUE FOR SYSUT3 RECORDS   A33287 83948020
SPSWITCH DC    X'00'              SWITCH                         A33287 83954020
FRSTSPIL EQU   X'80'              IF ON - ATLEAST ONE SPILL HAS  A33287 83960020
*                                    OCCURED TO SYSUT3           A33287 83966020
MAXREC   DC    H'0'               MAX NUMBER OF 80 BYTE REC /    A33287 83972020
*                                    UT3 TRACK                   A33287 83978020
WORKADDR DC    F'0'               POINTER TO FIRST DATA BYTE IN  A33287 83984020
*                                    UT3 BUFFER                  A33287 83990020
SPILLTTR DC    F'0'               TTR OF FIRST BLOCK WRITTEN     A33287 83996020
SENSSAVE DC    X'00'              SWITCH SAVE AREA               A33287 84002020
TAGSAVE  DC    X'00'              SWITCH SAVE AREA               A33287 84008020
SECTSAVE DC    X'00'              SECTOR VALUE OF FIRST BLOCK    S20201 84009020
*                                    WRITTEN (VALID ONLY IF      S20201 84010020
*                                    SYSUT3 IS ON AN RPS DEVICE) S20201 84011020
KEYDISP  EQU   9             DISPLACEMENT TO KDD PORTION OF A    A33287 84014020
*                               COUNT FIELD                      A33287 84020020
DATADISP EQU   12                 LENGTH OF FMBBCCHHRKDD         A33287 84026020
LOW      EQU   4                  CONDITION CODE FOR BCR INST    A33287 84032020
FF       EQU   X'FF'              FLAG OF 1'S                    A33287 84038020
         DS    0F                                                       84200019
PATCHLEN EQU   (*-IEBVTT)/20      LENGTH OF 5 PER CENT PATCH AREA       84400019
PATCH    DC    XL(PATCHLEN)'00'   5 PER CENT PATCH AREA          A41780 84600000
         EJECT                                                          84800019
         DS    0D                                                       85000019
IEBMCA   DSECT                                                          85200019
         IEBMCA                                                         85800019
DEVCSECT DSECT                                                          85830020
*                                                                A33287 85860020
*  DIRECT ACCESS DEVICE TABLE DSECT FOR UT3CHAR                  A33287 85890020
*                                                                A33287 85920020
         SPACE 1                                                 A33287 85950020
DEVCODE  DS    F                  DEVICE CODE                    A33287 85980020
MAXSIZE  DS    F                  MAX RECORD LENGTH              A33287 86010020
MAXCC    DS    H                  MAX CC VALUE                   A33287 86040020
MAXHH    DS    H                  MAX HH VALUE                   A33287 86070020
TRKCAP   DS    H                  TRACK CAPACITY                 A33287 86100020
OVERI    DS    XL1                OVERHEAD NOT LAST RECORD       A33287 86130020
OVERL    DS    XL1                OVERHEAD LAST RECORD           A33287 86160020
OVERK    DS    XL1                KEY OVERHEAD                   A33287 86190020
DEVFLAG  DS    XL1                FLAG FIELD                     A33287 86220020
TOLER    DS    H                  TOLERANCE FACTOR               A33287 86250020
TOLFAC   EQU   X'01'              ADD TOL FAC SWITCH             A33287 86280020
HALFOVER EQU   X'08'              OVERHEAD LAST=OVERHEAD NOT     S20201 86290020
*                                    LAST AND IS A 2 BYTE FIELD  S20201 86300020
         DCBD  DSORG=PS                                          A33287 86310020
         END                                                            86400019
./  ADD  SSI=72900024,NAME=IEBWSAM
         TITLE 'IEBWSAM IEBCOPY WRITE ROUTINE FOR UNLOADED DATA SETS'   00010000
         LCLA  &T,&SPN                                            0001  00020000
.@001    ANOP                                                     0001  00030000
IEBWSAM  CSECT ,                                                  0001  00040000
         STM   @E,@C,12(@D)                                       0001  00050000
         BALR  @B,0                                               0001  00060000
@PSTART  DS    0H                                                 0001  00070000
         USING @PSTART+00000,@B                                   0001  00080000
         ST    @D,@SAV001+4                                       0001  00090000
         LA    @F,@SAV001                                         0001  00100000
         ST    @F,8(0,@D)                                         0001  00110000
         LR    @D,@F                                              0001  00120000
         USING IEBMCA,@4               ADDRESSABILITY TO IEBMCA         00130000
         USING IHADCB,@7               ADDRESSABILITY TO DCB FIELDS     00140000
         DS    0H                                                       00150000
*         WSFLAG(5)='0'B;               /* INDICATE WRITING           * 00160000
         NI    WSFLAG,B'11110111'                                 0037  00170000
*         REDAD=WRTNEXT;                /* ADDRESS OF AREA FROM WHERE   00180000
*                                          TO START WRITING           * 00190000
         MVC   REDAD(4),WRTNEXT                                   0038  00200000
*         NBTTR=0;                      /* SET TTR COUNTER TO ZERO    * 00210000
         SR    @F,@F                                              0039  00220000
         STH   @F,NBTTR                                           0039  00230000
*         WRCNT=8;                      /* INIT COUNTER OF NUMBER OF    00240000
*                                          BYTES TO WRITE TO EICHT    * 00250000
         LA    @F,8                                               0040  00260000
         STH   @F,WRCNT                                           0040  00270000
*                                                                       00280000
*         /*----------------------------------------------------------* 00290000
*         /* NOW A TEST IS MADE TO SEE IF WE ARE PROCESSING MEMBER    * 00300000
*         /* DATA OR DIRECTORY BLOCKS                                 * 00310000
*         /*----------------------------------------------------------* 00320000
*                                                                       00330000
*         IF TAG(2)='0'B                /* WRITING DIRECTORY          * 00340000
*            THEN                       /* YES                        * 00350000
         TM    TAG,B'01000000'                                    0041  00360000
*                GO TO WSAM0003;        /* WRITE OUT DIRECTORY        * 00370000
         BC    08,WSAM0003                                        0042  00380000
*            ELSE;                      /* NO-MEMBER DATA TO PROCESS  * 00390000
*                                                                       00400000
*         /*----------------------------------------------------------* 00410000
*         /* AS A NOTE LIST PRECEDES MEMBER DATA IN THE UNLOADED DATA * 00420000
*         /* SET A TEST IS MADE TO SEE IF THIS MEMBER HAS ONE.        * 00430000
*         /*----------------------------------------------------------* 00440000
*                                                                       00450000
*         IF WSFLAG(1)='1'B             /* USER TTR PRESENT           * 00460000
*            THEN                       /* YES                        * 00470000
         TM    WSFLAG,B'10000000'                                 0044  00480000
         BC    12,@9FF                                            0044  00490000
*              DO;                      /* SEE IF NOTE LIST PRESENT   * 00500000
*                WSFLAG(1)='0'B;        /* TURN OFF SWITCH INDIC USER   00510000
*                                          TTR'S PRESENT              * 00520000
         NI    WSFLAG,B'01111111'                                 0046  00530000
*                                                                       00540000
*           /*--------------------------------------------------------* 00550000
*           /* A TEST IS NOW MADE TO SEE IF THERE ARE AT LEAST 2 USER * 00560000
*           /* TTR'S                                                  * 00570000
*           /*--------------------------------------------------------* 00580000
*                                                                       00590000
*           IF CFLD(2)='1'B             /* 2 USER TTR'S PRESENT       * 00600000
*              THEN                     /* YES                        * 00610000
         L     @1,IDEAD                                           0047  00620000
         TM    11(@1),B'01000000'                                 0047  00630000
         BC    12,@9FE                                            0047  00640000
*                  TTRNB(7)='1'B;       /* SET TWO IN TTRN COUNTER    * 00650000
         OI    NBTTR+1,B'00000010'                                0048  00660000
*              ELSE;                    /* NO LESS THAN 2 USER TTR'S  * 00670000
@9FE     EQU   *                                                  0049  00680000
*                                                                       00690000
*           /*--------------------------------------------------------* 00700000
*           /* A TEST IS NOW MADE TO SEE IF THE NEXT BIT IN THE C     * 00710000
*           /* FIELD IS ALSO ON INDICATING ONE MORE USER TTR          * 00720000
*           /*--------------------------------------------------------* 00730000
*                                                                       00740000
*           IF CFLD(3)='1'B             /* ONE MORE USER TTR          * 00750000
*              THEN                     /* YES                        * 00760000
@9FD     TM    11(@1),B'00100000'                                 0050  00770000
         BC    12,@9FC                                            0050  00780000
*                  TTRNB(8)='1'B;       /* ADD ONE TO USER TTR COUNTER* 00790000
         OI    NBTTR+1,B'00000001'                                0051  00800000
*              ELSE;                    /* NO NOMORE USER TTRN'S      * 00810000
@9FC     EQU   *                                                  0052  00820000
*                                                                       00830000
*                /*---------------------------------------------------* 00840000
*                /* NOW A ITERATIVE DO LOOP IS MADE TO SEE IF ANY OF  * 00850000
*                /* THE TTRN'S POINTS TO A NOTE LIST                  * 00860000
*                /*---------------------------------------------------* 00870000
*                                                                       00880000
*                DO J=1 TO NBTTR BY 1;                                  00890000
@9FB     LA    @F,1                                               0053  00900000
         BC    15,@DO9F9                                          0053  00910000
*                                                                       00920000
*           /*--------------------------------------------------------* 00930000
*           /* A TEST IS NOW MADE TO SEE IF ANY OF THE USER TTR'S     * 00940000
*           /* POINT TO A NOTE LIST                                   * 00950000
*           /*--------------------------------------------------------* 00960000
*                                                                       00970000
*           IF TTRNS(J,4) ¬= '00'X      /* N OF TTRN NOT ZERO         * 00980000
*              THEN                     /* YES                        * 00990000
@DO9FA   LH    @1,J                                               0054  01000000
         BCTR  @1,0                                               0054  01010000
         SLA   @1,2                                               0054  01020000
         L     @5,IDEAD                                           0054  01030000
         LA    @A,15(@1,@5)                                       0054  01040000
         CLI   0(@A),X'00'                                        0054  01050000
*                  GO TO WSAM0036;      /* GO WRITE NOTE LIST         * 01060000
         BC    07,WSAM0036                                        0055  01070000
*              ELSE;                    /* NO                         * 01080000
*                END;                   /* ALL USER TTRNS ARE TESTED  * 01090000
*              END;                                                     01100000
         LH    @F,J                                               0057  01110000
         AH    @F,@D1                                             0057  01120000
@DO9F9   STH   @F,J                                               0057  01130000
         CH    @F,NBTTR                                           0057  01140000
         BC    12,@DO9FA                                          0057  01150000
         BC    15,@9F6                                            0059  01160000
*            ELSE;                      /* NO                         * 01170000
@9FF     EQU   *                                                  0059  01180000
*                                                                       01190000
* /******************************************************************** 01200000
* /* AT THIS POINT ACTUAL DATA IN THE BUFFER IS PREPARED FOR WRITING. * 01210000
* /* THE ADDRESS TO WRITE IS SET AT THE BEGINNING OF A BUFFER AND THE * 01220000
* /* AREA USED FOR THE RECORD DESCRIPTOR WORDS IS SAVED SO THAT IT MAY* 01230000
* /* BE RESTITUTED TO ITS INITIAL VALUE WHEN ITS USE IS ENDED.        * 01240000
* /******************************************************************** 01250000
*                                                                       01260000
* WSAM0003:;                                                            01270000
@9F6     EQU   *                                                  0060  01280000
*                                                                       01290000
*             /******************************************************** 01300000
*             /* THIS GENERATE IS TO OBTAIN THE ADDR OF THE OUTPUT DCB* 01310000
*             /* SO AS TO OBTAIN THE BLOCKSIZE                        * 01320000
*             /******************************************************** 01330000
*             GENERATE;                                                 01340000
WSAM0003 EQU   *                                                  0061  01350000
         LA    @7,ULOADDCB             DCB ADDR OF UNLOADED DATA SET    01360000
         DS    0H                                                       01370000
*                                                                       01380000
*             READNEXT=REDAD - 8;       /* ADDR OF CURRENT BLOCK TO BE  01390000
*                                          WRITTEN.                   * 01400000
         L     @F,REDAD                                           0062  01410000
         SH    @F,@D2                                             0062  01420000
         ST    @F,READNEXT                                        0062  01430000
*             RECDESAV=VFIELD;          /* SAVE AREA FOR RECORD         01440000
*                                          CONTROL FIELDS AS IT HOLDS   01450000
*                                          NEEDED IEBCOPY INFORMATION * 01460000
         LR    @1,@F                                              0063  01470000
         MVC   RECDESAV(8),0(@1)                                  0063  01480000
*             FIRSTM='1'B;              /* INDICATE THAT RECORD         01490000
*                                          CONTROL FIELDS HAVE BEEN     01500000
*                                          SAVED                      * 01510000
         OI    FIRSTM,B'10000000'                                 0064  01520000
*             N=0;                      /* INIT NB OF PDS RECORDS TO    01530000
*                                          ZERO.                      * 01540000
         SR    @F,@F                                              0065  01550000
         STH   @F,N                                               0065  01560000
*                                                                       01570000
* /******************************************************************** 01580000
* /* NOW EACH PDS RECORD IS SCANNED FOR LAST RECORD AND AS MANY OF    * 01590000
* /* THEM AS POSSIBLE ARE BLOCKED UP IN ONE BLOCK OF THE SEQUENTIAL   * 01600000
* /* DATA SET                                                         * 01610000
* /******************************************************************** 01620000
*                                                                       01630000
* WSAM0006:;                                                            01640000
*             RECB=KEY + DATA + 12;     /* GET LENGHT OF THIS RECORD  * 01650000
WSAM0006 LA    @F,12                                              0067  01660000
         L     @1,REDAD                                           0067  01670000
         MVC   @TEMP2+2(2),10(@1)                                 0067  01680000
         A     @F,@TEMP2                                          0067  01690000
         SR    @0,@0                                              0067  01700000
         IC    @0,9(0,@1)                                         0067  01710000
         AR    @F,@0                                              0067  01720000
         ST    @F,RECB                                            0067  01730000
*             N=N + 1;                  /* UPDATE BY ONE NUMBER OF PDS  01740000
*                                          RECORDS                    * 01750000
         LA    @F,1                                               0068  01760000
         AH    @F,N                                               0068  01770000
         STH   @F,N                                               0068  01780000
*                                                                       01790000
*             /*------------------------------------------------------* 01800000
*             /* NOW A TEST HAS TO BE MADE TO SEE IF THERE ARE MORE   * 01810000
*             /* RECORDS IN THE BUFER AFTER THIS ONE.                 * 01820000
*             /*------------------------------------------------------* 01830000
*                                                                       01840000
*             IF F(2)='1'B              /* LAST RECORD IN BUFFER      * 01850000
*                THEN                   /* YES                        * 01860000
         TM    0(@1),B'01000000'                                  0069  01870000
         BC    12,@9F5                                            0069  01880000
*                  DO;                  /* SEE IF MORE DATA TO PROCESS* 01890000
*                                                                       01900000
*               /*----------------------------------------------------* 01910000
*               /* NOW A TEST IS MADE TO SEE IF IT WAS LAST RECORD IN * 01920000
*               /* THIS BUFFER OR LAST RECORD TO PROCESS.             * 01930000
*               /*----------------------------------------------------* 01940000
*                                                                       01950000
*               IF F(1)='1'B            /* LAST RECORD IN ANY BUFFER  * 01960000
*                  THEN                 /* YES                        * 01970000
         TM    0(@1),B'10000000'                                  0071  01980000
         BC    12,@9F4                                            0071  01990000
*                      RETAD=ADDR(WSAM0030);/* SET RETURN ADDR OF       02000000
*                                              PROCESSING LAST RECORD * 02010000
         LA    @F,WSAM0030                                        0072  02020000
         ST    @F,@TEMP4                                          0072  02030000
         MVC   RETAD(3),@TEMP4+1                                  0072  02040000
         BC    15,@9F3                                            0073  02050000
*                  ELSE                 /* NO LAST REC IN THIS BUFFER * 02060000
*                      RETAD=ADDR(WSAM0024);/* SET RETURN ADDR OF       02070000
*                                              PROCESSING LAST RECORD   02080000
*                                              IN THIS BUFFER         * 02090000
@9F4     LA    @F,WSAM0024                                        0073  02100000
         ST    @F,@TEMP4                                          0073  02110000
         MVC   RETAD(3),@TEMP4+1                                  0073  02120000
*                    F='00'X;           /* RESET F BYTE OF COUNT FIELD  02130000
*                                          TO ZERO BEFORE WRITING     * 02140000
@9F3     MVI   0(@1),X'00'                                        0074  02150000
         BC    15,@9F2                                            0076  02160000
*                  END;                                                 02170000
*                ELSE                   /* NO - NO MORE DATA IN BUFFER* 02180000
*                    RETAD=ADDR(WSAM0018);/* RETURN ADDR TO PROCESS     02190000
*                                            NEXT RECORD IN BUFFER    * 02200000
@9F5     LA    @F,WSAM0018                                        0076  02210000
         ST    @F,@TEMP4                                          0076  02220000
         MVC   RETAD(3),@TEMP4+1                                  0076  02230000
*                                                                       02240000
* /******************************************************************** 02250000
* /* AT THIS POINT A PDS RECORD IS ANALYSED TO SEE IF IT HAS TO BE    * 02260000
* /* WRITTEN IN SPANNED VARIABLE FORMAT OR JUST VARIABLE FORMAT OR    * 02270000
* /* WHETHER MORE DATA WILL FIT INTO THE BLOCK TO BE WRITTEN          * 02280000
* /******************************************************************** 02290000
*                                                                       02300000
* WSAM0009:;                                                            02310000
@9F2     EQU   *                                                  0077  02320000
*                                                                       02330000
*             /*------------------------------------------------------* 02340000
*             /* A TEST IS NOW MADE TO SEE IF THE DATA SO FAR ANALYSED* 02350000
*             /* WILL FIT IN ONE BLOCK OF THE SEQUENTIAL DATA SET AND * 02360000
*             /* IF SO A TRY IS MADE TO ADD YET ANOTHER PDS RECORD    * 02370000
*             /* OTHERWISE THE DATA HAS TO BE WRITTHEN                * 02380000
*             /*------------------------------------------------------* 02390000
*                                                                       02400000
*             IF WRCNT+RECB <=  DCBBLKSI/* DATA FIT IN THIS BLOCK     * 02410000
*                THEN                   /* YES                        * 02420000
WSAM0009 L     @F,RECB                                            0078  02430000
         AH    @F,WRCNT                                           0078  02440000
         CH    @F,DCBBLKSI                                        0078  02450000
         BC    02,@9F1                                            0078  02460000
*                  DO;                  /* SEE IF MORE WILL FIT       * 02470000
*                    WRCNT=WRCNT + RECB;/* UPDATE WRITE COUNTER       * 02480000
         L     @F,RECB                                            0080  02490000
         AH    @F,WRCNT                                           0080  02500000
         STH   @F,WRCNT                                           0080  02510000
*                    GO TO NEXTPROC;    /* GO PROCESS MORE DATA       * 02520000
         MVC   @TEMP3+1(3),RETAD                                  0081  02530000
         L     @1,@TEMP3           RETAD                          0081  02540000
         BCR   15,@1                                              0081  02550000
*                  END;                                                 02560000
*                ELSE;                  /* NO-HAVE TO WRITE THIS BLOCK* 02570000
@9F1     EQU   *                                                  0083  02580000
*                                                                       02590000
*             /*------------------------------------------------------* 02600000
*             /* A TEST IS NOW MADE TO SEE IF THIS BLOCK CAN BE       * 02610000
*             /* WRITTEN AS A WHOLE OR WHETHER THE BLOCK HAS TO BE    * 02620000
*             /* SPANNED                                              * 02630000
*             /*------------------------------------------------------* 02640000
*                                                                       02650000
*             IF N ¬= 1                 /* ONLY ONE PDS RECORD BIGGER   02660000
*                                          THAN SEQUENTIAL BLOCK      * 02670000
*                THEN                   /* NO MORE THAN ONE REC IN BLK* 02680000
@9F0     LA    @F,1                                               0084  02690000
         CH    @F,N                                               0084  02700000
         BC    08,@9EF                                            0084  02710000
*                  DO;                  /* PROCESS NORMALLY           * 02720000
*                    BLLA=WRCNT;        /* FILL BLOCK DESCRIPTOR WORD * 02730000
         L     @1,READNEXT                                        0086  02740000
         MVC   0(2,@1),WRCNT                                      0086  02750000
*                    SLLA=WRCNT - 4;    /* FILL RECORD DESCRIPTOR WORD* 02760000
         LH    @F,WRCNT                                           0087  02770000
         SH    @F,@D3                                             0087  02780000
         ST    @F,@TEMP4                                          0087  02790000
         MVC   4(2,@1),@TEMP4+2                                   0087  02800000
*                    BLLB='0000'X;      /* SET RESERVED BYTES IN      * 02810000
         MVC   2(2,@1),@X4                                        0088  02820000
*                    SLLB='0000'X;      /* DESCRIPTOR WORDS TO ZERO   * 02830000
         MVC   6(2,@1),@X4                                        0089  02840000
*                    CALL WRITER;       /* WRITE THIS BLOCK OF DATA   * 02850000
         BAL   @E,WRITER                                          0090  02860000
*                    READNEXT=REDAD-8;   /* SET NEXT WRITE ADDRESS    * 02870000
         L     @F,REDAD                                           0091  02880000
         SH    @F,@D2                                             0091  02890000
         ST    @F,READNEXT                                        0091  02900000
*                    N=1;               /* RESET NB OF PDS RECORDS TO   02910000
*                                          PROCESS TO ONE             * 02920000
         LA    @F,1                                               0092  02930000
         STH   @F,N                                               0092  02940000
*                    GO TO WSAM0009;    /* ANALYSE NEXT PDS RECORD    * 02950000
         BC    15,WSAM0009                                        0093  02960000
*                  END;                                                 02970000
*                ELSE;                  /* YES- NEED VARIABLE SPANNED * 02980000
@9EF     EQU   *                                                  0095  02990000
*                                                                       03000000
*             /*------------------------------------------------------* 03010000
*             /* NOW IT IS POSSIBLE DUE TO AN OVERWRITE THAT THE DCB  * 03020000
*             /* BLOCKSIZE DOES NOT REPRESENT THE ACTUAL DATA LENGTH  * 03030000
*             /* AND THAT DUE TO THAT THE UNLOADED DATA SETS BLOCKSIZE* 03040000
*             /* HAS BEEN CHOSEN TOO SMALL THIS GIVES AN ERROR        * 03050000
*             /* CONDITION AS THE DATA SET CAN NOT BE LOADED.         * 03060000
*             /*------------------------------------------------------* 03070000
*                                                                       03080000
*             IF DATA > IBLKSIZE        /* DATA LENGHT TOO BIG        * 03090000
*                THEN                   /* YES                        * 03100000
@9EE     L     @1,REDAD                                           0096  03110000
         CLC   10(2,@1),IBLKSIZE                                  0096  03120000
         BC    12,@9ED                                            0096  03130000
*                  DO;                  /* INDIC ERROR CONDITION      * 03140000
*                    IOEF2(7)='1'B;     /* SET ERROR SWITCH           * 03150000
         OI    IOEF2,B'00000010'                                  0098  03160000
*                                                                       03170000
*                    /************************************************* 03180000
*                    /* A BRANCH IS NOW MADE TO IEBIOE TO HANDLE THE  * 03190000
*                    /* ERROR CONDITION                               * 03200000
*                    /************************************************* 03210000
*                                                                       03220000
*                    GENERATE;                                          03230000
         L     @F,VIEBIOE2             ENTRY POINT IN ERROR ROUTINE     03240000
         BR    @F                      GO TO ERROR ROUTINE              03250000
         DS    0H                                                       03260000
*                                                                       03270000
*                  END;                                                 03280000
*                ELSE;                  /* NO - DATA LENGTH IS OK     * 03290000
@9ED     EQU   *                                                  0101  03300000
*                    SLLB='4000'X;      /* INDIC 1ST SEGMENT OF BLOCK * 03310000
@9EC     L     @1,READNEXT                                        0102  03320000
         MVC   6(2,@1),@X5                                        0102  03330000
*                                                                       03340000
* /******************************************************************** 03350000
* /* AT THIS POINT THE DESCRIPTOR WORDS FOR THE VARIABLE SPANNED      * 03360000
* /* RECORDS ARE FILLED IN                                            * 03370000
* /******************************************************************** 03380000
*                                                                       03390000
* WSAM0012:;                                                            03400000
*                    BLLA=DCBBLKSI;     /* BLOCK DESCRIPTOR WORD      * 03410000
WSAM0012 L     @1,READNEXT                                        0104  03420000
         MVC   0(2,@1),DCBBLKSI                                   0104  03430000
*                    SLLA=DCBBLKSI - 4;   /* RECORD DESCRIPTOR WORD   * 03440000
         LH    @F,DCBBLKSI                                        0105  03450000
         SH    @F,@D3                                             0105  03460000
         ST    @F,@TEMP4                                          0105  03470000
         MVC   4(2,@1),@TEMP4+2                                   0105  03480000
*                    BLLB='0000'X;      /* RESERVED BYTES TO ZERO     * 03490000
         MVC   2(2,@1),@X4                                        0106  03500000
*                    RECB=RECB -        /* NUMBER OF BYTES LEFT TO    * 03510000
*                           DCBBLKSI +  /* WRITE FOR NEXT SEGMENT     * 03520000
*                             8;        /* RECORD DESCRIPTOR LENGTH   * 03530000
         LA    @F,8                                               0107  03540000
         SH    @F,DCBBLKSI                                        0107  03550000
         A     @F,RECB                                            0107  03560000
         ST    @F,RECB                                            0107  03570000
*                    CALL WRITER;       /* WRITE PREPARED BLOCK       * 03580000
         BAL   @E,WRITER                                          0108  03590000
*                    READNEXT=READNEXT +/* ADDRESS POINTING TO NEXT   * 03600000
*                              DCBBLKSI -/* SEGMENT FOR NEXT WRITE    * 03610000
*                               8;      /*  ADDRESS                   * 03620000
         LH    @F,@D4                                             0109  03630000
         AH    @F,DCBBLKSI                                        0109  03640000
         A     @F,READNEXT                                        0109  03650000
         ST    @F,READNEXT                                        0109  03660000
*                                                                       03670000
*             /*------------------------------------------------------* 03680000
*             /* NOW A TEST IS MADE TO SEE IF THERE ARE STILL MORE    * 03690000
*             /* SEGMENTS BEFORE THE LAST ONE                         * 03700000
*             /*------------------------------------------------------* 03710000
*                                                                       03720000
*             IF RECB + 8 > DCBBLKSI    /* A MIDDLE SEGMENT           * 03730000
*                THEN                   /* YES                        * 03740000
         LA    @F,8                                               0110  03750000
         A     @F,RECB                                            0110  03760000
         CH    @F,DCBBLKSI                                        0110  03770000
         BC    12,@9EB                                            0110  03780000
*                  DO;                  /* PREPARE IT FOR WRITING     * 03790000
*                    SLLB='C000'X;      /* INDIC MIDDLE SEGMENT       * 03800000
         L     @1,READNEXT                                        0112  03810000
         MVC   6(2,@1),@X6                                        0112  03820000
*                    GO TO WSAM0012;    /* GO WRITE BLOCK             * 03830000
         BC    15,WSAM0012                                        0113  03840000
*                  END;                                                 03850000
*                ELSE;                  /* NO - LAST SEGMENT          * 03860000
@9EB     EQU   *                                                  0115  03870000
*                    BLLA=RECB + 8;     /* FILL BLOCK DESCRIPTOR WORD * 03880000
@9EA     LA    @F,8                                               0116  03890000
         A     @F,RECB                                            0116  03900000
         L     @1,READNEXT                                        0116  03910000
         ST    @F,@TEMP4                                          0116  03920000
         MVC   0(2,@1),@TEMP4+2                                   0116  03930000
*                    SLLA=RECB + 4;     /* FILL RECORD DESCRIPTOR WORD* 03940000
         LA    @F,4                                               0117  03950000
         A     @F,RECB                                            0117  03960000
         ST    @F,@TEMP4                                          0117  03970000
         MVC   4(2,@1),@TEMP4+2                                   0117  03980000
*                    BLLB='0000'X;      /* SET RESERVED BYTES TO ZERO * 03990000
         MVC   2(2,@1),@X4                                        0118  04000000
*                    SLLB='8000'X;      /* INDIC LAST SEGMENT         * 04010000
         MVC   6(2,@1),@X7                                        0119  04020000
*                    CALL WRITER;       /* WRITE LAST SEGMENT         * 04030000
         BAL   @E,WRITER                                          0120  04040000
*                    N=0;               /* SET COUNTER OF NUMBER OF     04050000
*                                          PDS RECORDS TO ZERO        * 04060000
         SR    @F,@F                                              0121  04070000
         STH   @F,N                                               0121  04080000
*                    REDAD=READNEXT +   /* SET ADDRESS TO LAST PDS    * 04090000
*                                8;     /* RECORD PROCESSED.          * 04100000
         LA    @F,8                                               0122  04110000
         A     @F,READNEXT                                        0122  04120000
         ST    @F,REDAD                                           0122  04130000
*                    READNEXT=READNEXT +/* POINT TO NEXT RECORD TO    * 04140000
*                              RECB;    /* WRITE.                     * 04150000
         L     @F,RECB                                            0123  04160000
         A     @F,READNEXT                                        0123  04170000
         ST    @F,READNEXT                                        0123  04180000
*                    GO TO NEXTPROC;    /* GO TO ADDRESS SET          * 04190000
         MVC   @TEMP3+1(3),RETAD                                  0124  04200000
         L     @1,@TEMP3           RETAD                          0124  04210000
         BCR   15,@1                                              0124  04220000
* /******************************************************************** 04230000
* /* AT THIS POINT THERE ARE MORE RECORDS IN THE BUFFER TO BE WRITTEN * 04240000
* /* OUT SO THE POINTER IS UPDATED AND THE NEXT RECORD IS PROCESSED   * 04250000
* /******************************************************************** 04260000
*                                                                       04270000
* WSAM0018:;                                                            04280000
*             REDAD=REDAD + RECB;       /* POINT TO NEXT PDS RECORD   * 04290000
WSAM0018 L     @F,RECB                                            0126  04300000
         A     @F,REDAD                                           0126  04310000
         ST    @F,REDAD                                           0126  04320000
*             GO TO WSAM0006;           /* GO PROCESS IT              * 04330000
         BC    15,WSAM0006                                        0127  04340000
*                                                                       04350000
* /******************************************************************** 04360000
* /* AT THIS POINT THE END OF THE FIRST BUFFER WAS REACHED PREPARATION* 04370000
* /* IS MADE FOR PROCESSING IN THE SECOND BUFFER                      * 04380000
* /******************************************************************** 04390000
*                                                                       04400000
* WSAM0024:;                                                            04410000
*                                                                       04420000
*             /*------------------------------------------------------* 04430000
*             /* A TEST HAS TO BE MADE TO SEE IF THE LAST RECORD OF   * 04440000
*             /* THE PREVIOUS BUFFER STILL HAS TO BE WRITTEN          * 04450000
*             /*------------------------------------------------------* 04460000
*                                                                       04470000
*             IF N ¬= 0                 /* LAST RECORD STILL TO WRITE * 04480000
*                THEN                   /* YES                        * 04490000
WSAM0024 SR    @F,@F                                              0129  04500000
         CH    @F,N                                               0129  04510000
         BC    08,@9E9                                            0129  04520000
*                  DO;                  /* PREPARE IT AND WRITE IT    * 04530000
*                    BLLA=WRCNT;        /* FILL BLOCK DESCRIPTOR WORD * 04540000
         L     @1,READNEXT                                        0131  04550000
         MVC   0(2,@1),WRCNT                                      0131  04560000
*                    SLLA=WRCNT - 4;    /* FILL RECORD DESCRIPTOR WORD* 04570000
         LH    @F,WRCNT                                           0132  04580000
         SH    @F,@D3                                             0132  04590000
         ST    @F,@TEMP4                                          0132  04600000
         MVC   4(2,@1),@TEMP4+2                                   0132  04610000
*                    BLLB='0000'X;      /* SET RESERVED BYTES IN      * 04620000
         MVC   2(2,@1),@X4                                        0133  04630000
*                    SLLB='0000'X;      /* DESCRIPTOR WORDS TO ZERO   * 04640000
         MVC   6(2,@1),@X4                                        0134  04650000
*                    CALL WRITER;       /* WRITE LAST BLOCK OF 1ST BUF* 04660000
         BAL   @E,WRITER                                          0135  04670000
*                  END;                                                 04680000
*                ELSE;                  /* NO 1ST BUF HAS BEEN WRITTEN* 04690000
@9E9     EQU   *                                                  0137  04700000
*                    REDAD=BEGFST2;     /* POINT TO BEGIN OF 2ND BUF  * 04710000
@9E8     MVC   REDAD(4),BEGFST2                                   0138  04720000
*                    GO TO WSAM0003;    /* PROCESS 2ND BUFFER         * 04730000
         BC    15,WSAM0003                                        0139  04740000
*                                                                       04750000
* /******************************************************************** 04760000
* /* AT THIS POINT THERE IS NO MORE DATA IN THE BUFFERS TO PROCESS    * 04770000
* /* A LAST RECORD MAY HAVE TO BE WRITTEN AND THEN CONTROL IS GIVEN   * 04780000
* /* BACK TO THE CALLER                                               * 04790000
* /******************************************************************** 04800000
*                                                                       04810000
* WSAM0030:;                                                            04820000
*                                                                       04830000
*             /*------------------------------------------------------* 04840000
*             /* A TEST HAS TO BE MADE TO SEE IF THE LAST RECORD IN   * 04850000
*             /* THE LAST BUFFER HAS BEEN WRITTEN                     * 04860000
*             /*------------------------------------------------------* 04870000
*                                                                       04880000
*             IF N ¬= 0                 /* LAST RECORD STIL TO WRITE  * 04890000
*                THEN                   /* YES                        * 04900000
WSAM0030 SR    @F,@F                                              0141  04910000
         CH    @F,N                                               0141  04920000
         BC    08,@9E7                                            0141  04930000
*                  DO;                  /* PREPARE AND WRITE IT       * 04940000
*                    BLLA=WRCNT;        /* FILL BLOCK DESCRIPTOR WORD * 04950000
         L     @1,READNEXT                                        0143  04960000
         MVC   0(2,@1),WRCNT                                      0143  04970000
*                    SLLA=WRCNT - 4;    /* FILL RECORD DESCRIPTOR WORD* 04980000
         LH    @F,WRCNT                                           0144  04990000
         SH    @F,@D3                                             0144  05000000
         ST    @F,@TEMP4                                          0144  05010000
         MVC   4(2,@1),@TEMP4+2                                   0144  05020000
*                    BLLB='0000'X;      /* SET RESERVED BYTES IN      * 05030000
         MVC   2(2,@1),@X4                                        0145  05040000
*                    SLLB='0000'X;      /* DESCRIPTOR WORDS TO ZERO   * 05050000
         MVC   6(2,@1),@X4                                        0146  05060000
*                    CALL WRITER;       /* WRITE LAST BLOCK           * 05070000
         BAL   @E,WRITER                                          0147  05080000
*                  END;                                                 05090000
*                ELSE;                  /* NO NO MORE TO WRITE        * 05100000
@9E7     EQU   *                                                  0149  05110000
*                    READNEXT=WRTNEXT;  /* RESET WRITE ADDRESS        * 05120000
@9E6     MVC   READNEXT(4),WRTNEXT                                0150  05130000
*                    RETURN;            /* GO BACK TO CALLER OF RTN   * 05140000
         BC    15,@EL01                                           0151  05150000
* /******************************************************************** 05160000
* /* AT THIS POINT THE MEMBER HAS A NOTE LIST AND PREPARATION IS MADE * 05170000
* /* FOR THE WRITING OF THIS NOTE LIST TO THE UNLOADED DATA SET       * 05180000
* /******************************************************************** 05190000
*                                                                       05200000
* WSAM0036:;                                                            05210000
*                                                                       05220000
*         /************************************************************ 05230000
*         /* THIS GENERATE IS TO OBTAIN THE ADDR OF THE INPUT PDS DCB * 05240000
*         /* ADDR SO AS TO OBTAIN THE RECORD FORMAT                   * 05250000
*         /************************************************************ 05260000
*         GENERATE;                                                     05270000
WSAM0036 EQU   *                                                  0153  05280000
         LA    @7,INDCB                ADDR OF INPUT PDS DCB            05290000
         DS    0H                                                       05300000
*                                                                       05310000
*         TTRNB(1:8)=                   /* PUT IN COUNTER  NUMBER OF  * 05320000
*                TTRNS(J,4);            /* NOTE LIST TTR'S            * 05330000
         LH    @1,J                                               0154  05340000
         BCTR  @1,0                                               0154  05350000
         SLA   @1,2                                               0154  05360000
         L     @5,IDEAD                                           0154  05370000
         LA    @E,15(@1,@5)                                       0154  05380000
         MVC   NBTTR+1(1),0(@E)                                   0154  05390000
*         READNEXT=ADNL-8;              /* ADDRESS WHERE TO START       05400000
*                                          WRITING                    * 05410000
         L     @F,ADNL                                            0155  05420000
         SH    @F,@D2                                             0155  05430000
         ST    @F,READNEXT                                        0155  05440000
*         NF='111'B;                    /* SET NOTE LIST INDICATOR    * 05450000
         L     @6,ADNL                                            0156  05460000
         MVI   0(@6),B'11100000'                                  0156  05470000
*         WRCNT= WRCNT +                /* NB OF BYTES TO WRITE       * 05480000
*                 NBTTR*4 +             /* NOTE LIST LENGTH           * 05490000
*                    NKEY +             /* KEY LENGTH                 * 05500000
*                       12;             /* LENGTH OF COUNT FIELD      * 05510000
         LA    @E,4                                               0157  05520000
         MH    @E,NBTTR                                           0157  05530000
         AH    @E,WRCNT                                           0157  05540000
         AH    @E,@D5                                             0157  05550000
         SR    @0,@0                                              0157  05560000
         IC    @0,9(0,@6)                                         0157  05570000
         AR    @E,@0                                              0157  05580000
         STH   @E,WRCNT                                           0157  05590000
*                                                                       05600000
*         /************************************************************ 05610000
*         /* THIS TEST IS TO FIND OUT IF THE INPUT PDS HAD VARIABLE   * 05620000
*         /* RECORD FORMAT IN WHICH CASE 8 HAS TO BE ADDED TO THE     * 05630000
*         /* LENGTH OF THE NOTE LIST TO BE WRITTEN                    * 05640000
*         /************************************************************ 05650000
*         IF DCBRECFM(1) = '0'B         /* RECORD FORMAT VARIABLE     * 05660000
*            THEN                       /* YES                        * 05670000
         TM    DCBRECFM,B'10000000'                               0158  05680000
         BC    05,@9E5                                            0158  05690000
*                 WRCNT =WRCNT  + 8;    /* ADD 8 TO NOTE LIST LENGTH  * 05700000
         LA    @F,8                                               0159  05710000
         AH    @F,WRCNT                                           0159  05720000
         STH   @F,WRCNT                                           0159  05730000
*            ELSE;                      /* NO LENGTH OK               * 05740000
@9E5     EQU   *                                                  0160  05750000
*                                                                       05760000
*         RECDESAV=VFIELD;              /* SAVE CONTROL AREA INFORM   * 05770000
@9E4     L     @C,READNEXT                                        0161  05780000
         MVC   RECDESAV(8),0(@C)                                  0161  05790000
*         FIRSTM='1'B;                  /* INDIC SAVED RECORD CONTROL   05800000
*                                          FIELD.                     * 05810000
         OI    FIRSTM,B'10000000'                                 0162  05820000
*         BLLA=WRCNT;                   /* FILL BLOCK DESCRIPTOR WORD * 05830000
         MVC   0(2,@C),WRCNT                                      0163  05840000
*         SLLA=WRCNT - 4;               /* FILL RECORD DESCRIPTOR WORD* 05850000
         LH    @F,WRCNT                                           0164  05860000
         SH    @F,@D3                                             0164  05870000
         ST    @F,@TEMP4                                          0164  05880000
         MVC   4(2,@C),@TEMP4+2                                   0164  05890000
*         BLLB='0000'X;                 /* SET RESERVED BYTES IN      * 05900000
         MVC   2(2,@C),@X4                                        0165  05910000
*         SLLB='0000'X;                 /* DESCRIPTOR WORDS TO ZERO   * 05920000
         MVC   6(2,@C),@X4                                        0166  05930000
*         CALL WRITER;                  /* GO WRITE THIS BLOCK        * 05940000
         BAL   @E,WRITER                                          0167  05950000
*         GO TO WSAM0003;               /* GO PROCESS MEMBER          * 05960000
         BC    15,WSAM0003                                        0168  05970000
* /******************************************************************** 05980000
* /* AT THIS ENTRY POINT THE HEADER LABEL NEEDED FOR AN UNLOADED      * 05990000
* /* DATA SET IS WRITTEN TO THE OUTPUT DATA SET                       * 06000000
* /******************************************************************** 06010000
*                                                                       06020000
* IEBWSAM1: ENTRY;                                                      06030000
IEBWSAM1 STM   @E,@C,12(@D)                                       0169  06040000
         BALR  @B,0                                               0169  06050000
         LA    @F,IEBWSAM1-IEBWSAM                                0169  06060000
         SR    @B,@F                                              0169  06070000
         ST    @D,@SAV001+4                                       0169  06080000
         LA    @F,@SAV001                                         0169  06090000
         ST    @F,8(0,@D)                                         0169  06100000
         LR    @D,@F                                              0169  06110000
*           WSFLAG(5)='0'B;             /* INDIC WRITING              * 06120000
@9E3     NI    WSFLAG,B'11110111'                                 0170  06130000
*           FIRSTM='0'B;                /* INDIC NO NEED TO SAVE RECORD 06140000
*                                          CONTROL FIELD.             * 06150000
         NI    FIRSTM,B'01111111'                                 0171  06160000
*           ACOP(1)=ACOPYR1;            /* ADDR OF 1ST HEADER LABEL   * 06170000
         MVC   ACOP(4),ACOPYR1                                    0172  06180000
*           ACOP(2)=ACOPYR2;            /* ADDR OF 2ND HEADER LABEL   * 06190000
         MVC   ACOP+4(4),ACOPYR2                                  0173  06200000
*                                                                       06210000
*           /********************************************************** 06220000
*           /* AS TWO RECORDS HAVE TO BE WRITTEN A ITERITIVE DO LOOP  * 06230000
*           /* IS SET UP.                                             * 06240000
*           /********************************************************** 06250000
*                                                                       06260000
*           DO J=1 TO 2;                                                06270000
         LA    @F,1                                               0174  06280000
         STH   @F,J                                               0174  06290000
*             READNEXT=ACOP(J);         /* GET LABEL ADDRESS          * 06300000
@DO9E2   LH    @1,J                                               0175  06310000
         SLA   @1,2                                               0175  06320000
         L     @F,ACOP-4(@1)                                      0175  06330000
         ST    @F,READNEXT                                        0175  06340000
*             CALL WRITER;              /* WRITE HEADER LABEL         * 06350000
         BAL   @E,WRITER                                          0176  06360000
*           END;                        /* HEADER RECORDS WRITTEN     * 06370000
*                                                                       06380000
*           READNEXT=WRTNEXT;           /* RESET READ POINTER         * 06390000
         LH    @F,J                                               0177  06400000
         AH    @F,@D1                                             0177  06410000
@DO9E1   STH   @F,J                                               0177  06420000
         CH    @F,@D6                                             0177  06430000
         BC    12,@DO9E2                                          0177  06440000
         MVC   READNEXT(4),WRTNEXT                                0178  06450000
*           RETURN;                     /* BACK TO CALLER             * 06460000
* /******************************************************************** 06470000
* /* THIS INTERNAL PROCEDURE WRITES OUT THE RECORDS FROM THE BUFFER   * 06480000
* /******************************************************************** 06490000
*                                                                       06500000
* WRITER:   PROCEDURE;                                                  06510000
@EL01    L     @D,4(0,@D)                                         0180  06520000
         LM    @E,@C,12(@D)                                       0180  06530000
         BCR   15,@E                                              0180  06540000
WRITER   STM   @E,@C,12(@D)                                       0180  06550000
         ST    @D,@SAV002+4                                       0180  06560000
         LA    @F,@SAV002                                         0180  06570000
         ST    @F,8(0,@D)                                         0180  06580000
         LR    @D,@F                                              0180  06590000
*           RESTRICT(4);                /* FOR ADDRESSABILITY TO        06600000
*                                          IEBMCA                     * 06610000
*           RESTRICT(7);                /* TO CONTAIN THE ADDRESS OF    06620000
*                                          THE AREA TO WRITE FROM     * 06630000
*                                                                       06640000
*           /********************************************************** 06650000
*           /* IN THE FOLLOWING GENERATE, A BLOCK OF DATA IS WRITTEN  * 06660000
*           /* TO THE UNLOADED OUTPUT DATA SET                        * 06670000
*           /********************************************************** 06680000
*                                                                       06690000
*           GENERATE;                                                   06700000
         L     @7,READNEXT             ADDR TO WRITE FROM               06710000
         WRITE DECB1,SF,ULOADDCB,(@7),MF=E                              06720000
         CHECK DECB1                                                    06730000
         DS    0H                                                       06740000
*                                                                       06750000
*           WRCNT=8;                    /* INIT WRITE COUNT TO 8      * 06760000
         LA    @F,8                                               0184  06770000
         STH   @F,WRCNT                                           0184  06780000
*                                                                       06790000
*             /*------------------------------------------------------* 06800000
*             /* A TEST IS NOW MADE TO SEE IF THE RECORD CONTROL      * 06810000
*             /* FIELD HAD BEEN SAVED IN WHICH CASE IT HAS TO BE      * 06820000
*             /* RESTORED.                                            * 06830000
*             /*------------------------------------------------------* 06840000
*                                                                       06850000
*             IF FIRSTM='1'B            /* SAVED REC CONTROL FIELD    * 06860000
*                THEN                   /* YES                        * 06870000
         TM    FIRSTM,B'10000000'                                 0185  06880000
         BC    12,@9DE                                            0185  06890000
*                  DO;                  /* RESET IT.                  * 06900000
*                    VFIELD=RECDESAV;   /* RESTORE INITIAL FIELD      * 06910000
         L     @1,READNEXT                                        0187  06920000
         MVC   0(8,@1),RECDESAV                                   0187  06930000
*                    FIRSTM='0'B;       /* INDIC FIELD RESTORED       * 06940000
         NI    FIRSTM,B'01111111'                                 0188  06950000
*                  END;                                                 06960000
*                ELSE;                  /* NO-NO NEED TO RESTORE      * 06970000
*           END WRITER;                                                 06980000
         BC    15,@EL01                                           0191  06990000
*          END IEBWSAM;                                                 07000000
@DATA1   EQU   *                                                        07010000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           07020000
@1       EQU   01                                                       07030000
@2       EQU   02                                                       07040000
@3       EQU   03                                                       07050000
@4       EQU   04                                                       07060000
@5       EQU   05                                                       07070000
@6       EQU   06                                                       07080000
@7       EQU   07                                                       07090000
@8       EQU   08                                                       07100000
@9       EQU   09                                                       07110000
@A       EQU   10                                                       07120000
@B       EQU   11                                                       07130000
@C       EQU   12                                                       07140000
@D       EQU   13                                                       07150000
@E       EQU   14                                                       07160000
@F       EQU   15                                                       07170000
@D1      DC    H'1'                                                     07180000
@D2      DC    H'8'                                                     07190000
@D3      DC    H'4'                                                     07200000
@D4      DC    H'-8'                                                    07210000
@D5      DC    H'12'                                                    07220000
@D6      DC    H'2'                                                     07230000
         DS    0F                                                       07240000
@X4      DC    X'0000'                                                  07250000
@X5      DC    X'4000'                                                  07260000
@X6      DC    X'C000'                                                  07270000
@X7      DC    X'8000'                                                  07280000
         DS    0D                                                       07290000
@DATA    EQU   *                                                        07300000
@SAV001  EQU   @DATA+00000000      72 BYTE(S) ON WORD                   07310000
RETAD    EQU   @DATA+00000073      3  BYTE  POINTER ON WORD+1           07320000
REDAD    EQU   @DATA+00000076      FULLWORD POINTER                     07330000
N        EQU   @DATA+00000080      HALFWORD INTEGER                     07340000
J        EQU   @DATA+00000082      HALFWORD INTEGER                     07350000
ACOP     EQU   @DATA+00000084      2*FULLWORD POINTER                   07360000
RECB     EQU   @DATA+00000092      FULLWORD INTEGER                     07370000
OUTA     EQU   00000000            12 BYTE(S)                           07380000
F        EQU   OUTA+00000000       8 BIT(S)                             07390000
MBBCCHHR EQU   OUTA+00000001       8 BYTE(S)                            07400000
KEY      EQU   OUTA+00000009       1 BYTE(S)                            07410000
DATA     EQU   OUTA+00000010       2 BYTE(S)                            07420000
FIRSTM   EQU   @DATA+00000096      1 BIT(S) ON BYTE                     07430000
USTTRN   EQU   00000011            13 BYTE(S)                           07440000
CFLD     EQU   USTTRN+00000000     8 BIT(S)                             07450000
TTRNS    EQU   USTTRN+00000001     3*4 BYTE(S)                          07460000
NBTTR    EQU   @DATA+00000098      HALFWORD INTEGER                     07470000
TTRNO    EQU   NBTTR+00000000      8 BIT(S)                             07480000
TTRNB    EQU   NBTTR+00000001      8 BIT(S)                             07490000
NOTA     EQU   00000000            12 BYTE(S)                           07500000
NF       EQU   NOTA+00000000       8 BIT(S)                             07510000
NCNT     EQU   NOTA+00000001       8 BYTE(S)                            07520000
NKEY     EQU   NOTA+00000009       1 BYTE(S)                            07530000
NDATA    EQU   NOTA+00000010       2 BYTE(S)                            07540000
WRCNT    EQU   @DATA+00000100      HALFWORD INTEGER                     07550000
VFIELD   EQU   00000000            8 BYTE(S)                            07560000
BLLA     EQU   VFIELD+00000000     2 BYTE(S)                            07570000
BLLB     EQU   VFIELD+00000002     2 BYTE(S)                            07580000
SLLA     EQU   VFIELD+00000004     2 BYTE(S)                            07590000
SLLB     EQU   VFIELD+00000006     2 BYTE(S)                            07600000
RECDESAV EQU   @DATA+00000102      8 BYTE(S)                            07610000
         ENTRY IEBWSAM1                                                 07620000
@SAV002  EQU   @DATA+00000112      72 BYTE(S) ON WORD                   07630000
         DS    00000184C                                                07640000
@TEMPS   DS    0F                                                       07650000
@TEMP2   DC    F'0'                                                     07660000
@TEMP3   DC    F'0'                                                     07670000
@TEMP4   DC    F'0'                                                     07680000
PATCHLN  EQU   (*-IEBWSAM)/20          5 PERCENT OF MODULE LENGTH       07690000
PATCH    DC    XL(PATCHLN)'00'         5 PERCENT PATCH AREA             07700000
         WRITE DECB1,SF,MF=L                                            07710000
         DCBD  DSORG=PS                                                 07720000
IEBMCA   DSECT                                                          07730000
         IEBMCA                                                         07740000
@DATEND  EQU   *                                                        07750000
@EL02    EQU   @EL01                                                    07760000
@9DD     EQU   @EL01                                                    07770000
@9DE     EQU   @EL01                                                    07780000
         END   IEBWSAM                                                  07790000
./  ADD  SSI=73320094,NAME=IEBWSU
VWSU     TITLE 'IEBCOPY -WRITE SETUP ROUTINE-IEBWSU'                    00100019
IEBWSU   CSECT                                                          00200019
*D905000-908000,916000-921000                                    A33288 00250021
*C933000                                                         A41780 00260021
*C536000,539000                                                  A41760 00260121
*C665000-666000,883000,888000,941000-942000                      A38720 00260221
*C665000-666000,883000,888000,941000-942000                      A38720 00260400
*A057764-057768,662100-662600,795500-795700,                     A38720 00270021
*A535500-535984,538500-538920                                    A41760 00270121
*A887500,888500,941500,942100                                    A38720 00280021
*D540000-543000                                                  A41760 00280121
*A429500-429800,651500,667500-667600,690500-690600,695500        A44345 00282121
*A697500-697600,702500                                           A44345 00284121
*C311000,319000,415000                                           A44345 00286121
*D715000                                                         A44345 00288121
*A308500-308600,312500                                           A45136 00290121
*A057104,057880,362020-362740,872500                             A45142 00292121
*D361000                                                         A45142 00294121
*A736500-737960                                                  X010XX 00294500
*D737000                                                         X010XX 00296100
*A057772,852500-852800,898500-898600,899500                      A44144 00310000
*C057780,899000                                                  A44144 00320000
*A472300-472600                                                @ZA01712 00330003
*C448270,448729                                                @ZA10902 00330199
*D448756-448783                                                @ZA10902 00330299
*A448741,448744                                                @ZA13707 00330399
*A448741,448744                                                @ZA13751 00340399
*A105500,111300,111600,202100-202600,215500,505800             @ZA26248 00340499
*C110000,202000,203000,215000,512000                           @ZA26248 00342499
*D091000,092000,189000-201000,218000-237000                    @ZA26248 00344499
*A797300-798300,849300-849600           (ORG)@XA16941,@YA19690,@ZA27766 00345499
*C798400,895000                         (ORG)@XA16941,@YA19690,@ZA27766 00346499
*A057920-057960,538630-538750           @XA20499,@YA19841,(ORG)@ZA16486 00347499
*C538600,538780                         @XA20499,@YA19841,(ORG)@ZA16486 00348499
*********************************************************************** 00350000
*TITLE-  WRITE SETUP-IEBWSU                                             00400019
*                                                                     * 00500019
*STATUS- CHANGE LEVEL 001                                             * 00600019
*                                                                     * 00700019
*FUNCTION/OPERATION- THIS MODULE PROCESSES RECORDS TO PREPARE THE     * 00800019
*       COUNT FIELDS FOR THE OUTPUT TARGET ADDRESS. RECORDS ARE       * 00900019
*       GENERALLY PROCESSED STARTING WITH THE RECORD POINTED TO BY    * 01000019
*       'WRTNEXT' AND CONTINUE THRU THE RECORD WHICH HAS THE          * 01100019
*       'ENDPROC' FLAG ON.                                            * 01200019
*                                                                     * 01300019
*ENTRY POINT- ENTERED AT IEBWSU                                       * 01400019
*                                                                     * 01500019
*INPUT- POINTER TO FIRST RECORD IN BUFFER TO PROCESS IN 'WRTNEXT'     * 01600019
*       'FORCEWRT' SWITCH SET TO MAKE IEBVWS PURGE THE BUFFERS        * 01700019
*       'USERTTR' SWITCH SET WHEN DATA SET HAS USER TTRS TO PROCESS   * 01800019
*       'NOTELST' SWITCH SET WHEN DATA SET HAS NOTE LIST TTR TO DO    * 01900019
*                                                                     * 02000019
*OUTPUT- 'READNEXT'-POINTS TO SPACE IN BUFFER AFTER LAST RECORD DONE  * 02100019
*        'NOWRT' SWITCH SET IF EOF OF PRESENT MEMBER PROCESSED BUT    * 02200019
*    BUFFER HAS ROOM FOR MORE RECORDS FROM NEXT MEMBER, IF ANY, SO    * 02300019
*    BUFFER WAS NOT WRITTEN.                                          * 02400019
*                                                                     * 02500019
*EXTERNAL ROUTINES- IEBDWR WRITE ROUTINE, SYSTEM TTR/CCHH CONVERSION  * 02600019
*        ROUTINES,IEBVMS -MESSAGE WRITER ROUTINE                        02700019
*                                                                     * 02800019
*EXITS- RETURN TO CALLER ON NORMAL COMPLETION                         * 02900019
*                                                                     * 03000019
*TABLES/WORK AREAS-                                                   * 03100019
*        -IEBMCA- COPY COMMUNICATIONS AREA                              03200019
*        -SAVERGS- REGISTER SAVE AREA                                 * 03300019
*                                                                     * 03400019
*ATTRIBUTES- SERIAL REUSABLE                                          * 03500019
*                                                                     * 03600019
         EJECT                                                          03700019
*                                                                     * 03800019
*                         SYMBOLIC REGISTERS FOR IEBWSU               * 03900019
*                                                                     * 04000019
*                                                                       04100019
GR0      EQU   0                                                        04200019
GR1      EQU   1                  DCB ADDRESS                           04300019
GR2      EQU   2                                                        04400019
GR3      EQU   3                                                        04500019
GR4      EQU   4                  COMMUNICATIONS AREA (IEBMCA) ADDRESS  04600019
GR5      EQU   5                                                        04700019
GR6      EQU   6                  TTRN ADDRESS                          04800019
GR7      EQU   7                  DEVICE CHARACTERISTIC TABLE ADDRESS   04900019
GR8      EQU   8                                                        05000019
GR9      EQU   9                                                        05100019
GR10     EQU   10                 LINKAGE POINTER FROM SUBROUTINES      05200019
GR11     EQU   11                                                       05300019
GR12     EQU   12                 BASE REGISTER                         05400019
GR13     EQU   13                                                       05500019
GR14     EQU   14                                                       05600019
GR15     EQU   15                                                       05700019
W4       EQU   4                                                        05702019
W8       EQU   8                                                        05704019
W0       EQU   0                                                        05706019
W10      EQU   10                                                       05708019
W2       EQU   2                                                        05710019
W24      EQU   24                                                A45142 05710421
W276     EQU   276                                                      05712019
XFF      EQU   X'FF'                                                    05714019
X00      EQU   X'00'                                                    05716019
W3       EQU   3                                                        05718019
W9       EQU   9                                                        05720019
W12      EQU   12                                                       05722019
W5       EQU   5                                                        05724019
W1       EQU   1                                                        05726019
MS8      EQU   8                                                        05728019
X80      EQU   X'80'                                                    05730019
SVC55    EQU   55                                                       05732019
X7F      EQU   X'7F'                                                    05734019
MS9      EQU   9                                                        05736019
W25      EQU   25                                                       05738019
W30      EQU   30                                                       05740019
W256     EQU   256                                                      05742019
MS1      EQU   1                                                        05744019
MSGCLR   EQU   C' '                                                     05746019
W120     EQU   120                                                      05748019
W7       EQU   7                                                        05750019
W29      EQU   29                                                       05752019
W40      EQU   40                                                       05754019
W27      EQU   27                                                       05756019
W68      EQU   68                                                       05758019
W76      EQU   76                                                       05760019
W85      EQU   85                                                       05762019
W13      EQU   13                                                       05764019
W98      EQU   98                                                       05766019
W28      EQU   28                                                       05768019
W99      EQU   99                                                       05770019
W93      EQU   93                                                       05772019
W51      EQU   51                                                       05774019
W17      EQU   17                                                       05776019
W53      EQU   53                                                A38720 05776421
W64      EQU   64                                                A38720 05776821
RTCD     EQU   C'4'                                              A44144 05777200
RTCDE    EQU   C'8'                                              A44144 05778000
DBOFF    EQU   4                  OFFSET IN DEVTYPE TO TRACKSIZE A45142 05788021
W6       EQU   6                                               @ZA16486 05792099
W36      EQU   36                                              @ZA16486 05796099
*                                                                       05800019
         SAVE  (14,12),,*                                               05900019
         BALR  GR12,GR0           ESTABLISH ADDRESSABILITY              06000019
*                                                                       06100019
         USING START,GR12                                               06200019
         USING IEBMCA,4                                                 06300019
         USING IHADCB,GR1                                               06400019
         USING DEVTAB,GR7                                               06500019
*                                                                       06600019
START    EQU   *                                                        06700019
         ST    GR13,SAVERGS+W4                                          06800019
         LA    GR15,SAVERGS                                             06900019
         ST    GR15,W8(GR13)      POINTER TO NEW SAVE AREA IN OLD       07000019
         LR    GR13,GR15                                                07100019
*                                                                       07200019
         TM    WSFLAG,FORCEWRT         BUFFER TO BE PURGED              07300019
         BZ    MEMBER                  NO-GO TEST FOR MEMBER FIRST      07400019
         L     GR5,LASTMREC            POINTER TO LAST RECORD IN BUFFER 07500019
         MVI   W0(GR5),LASTREC+ENDPROC SET LAST RECORD FLAGS            07600019
         B     MUSTWRTE                WRITE BUFFER                     07700019
         EJECT                                                          07800019
*                                                                       07900019
*********************************************************************** 08000019
*        MEMBER OUTPUT                                                  08100019
*********************************************************************** 08200019
*                                                                       08300019
MEMBER   EQU   *                                                        08400019
         L     GR5,READNEXT            GET FIRST INPUT ENTRY            08500019
         LA    GR5,W0(GR5)        LOP OFF HI BYTE                       08600019
         LA    GR6,OUTDS1              TTRNLL ADDRESS                   08700019
         LA    GR1,OUTDCB              DCB PTR                          08800019
         TM    TAG,TAG2                WRITING MEMBER                   08900019
         BZ    DIRTY                   NO-GO TEST DIRECTORY             09000019
         TM    FLG3,REBLK              REBLOCKING                       09300019
         BO    REBLKING                YES-XFER                         09400019
         TM    DCBRECFM,OVERFLOW       OUTPUT TRKOVERFLOW               09500019
         BO    TRKOVER                 YES-XFER TO PROCESS              09600019
*                                                                       09700019
RECYCLE1 EQU   *                                                        09800019
         LA    GR7,OUTCHAR             GET DEVICE CHARACTERISTICS       09900019
         BAL   GR10,GOTRKBAL           GO TO TRACK BALANCE              10000019
         BAL   GR10,CHKFIRST      CHECK FOR FIRST RECORD OF A    A34431 10030020
*                                  MEMBER PROCESSING             A34431 10060020
         TM    WSFLAG,USERTTR          USER TTR TO PROCESS              10100019
         BZ    NOTNOTE1                NO-XFER                          10200019
         BAL   GR10,CHKUTTRS           GO TO CHECK FOR USER TTRS        10300019
NOTNOTE1 EQU   *                                                        10400019
         BAL   GR10,CONVERT            GO CONVERT TO MBBCCHHR-OUTPUT    10500019
         ST    GR5,LASTMREC  SAVE LAST RECORD PROCESSED        @ZA26248 10550099
         BAL   GR10,RECLNVAL           GO VALIDATE RECORD LENGTH        10600019
         BAL   GR10,UPDATE             GO SEE IF MORE RECORDS           10700019
         B     RECYCLE1                YES-TRY SOME MORE                10800019
         CLC   W10(W2,GR5),ZROS   AT- EOF                               10900019
         BNE   MUSTWR      NO, MUST BE NO MORE ROOM IN BUFFER  @ZA26248 11000099
         BAL   GR10,MORERUUM           YES-GO SEE IT WE CAN READ AGAIN  11030099
MUSTWR   TM    COMDCDSW,COMPRESS       COMPRESS                @ZA26248 11060099
         BO    COMPRS                  YES-XFER                @ZA26248 11090099
MUSTWRTE EQU   *                  NO ROOM WRITE OUT                     11200019
         MVC   READNEXT(W4),WRTNEXT RESET BUFFER POINTERS               11300019
         LA    GR10,GOBACK             RETURN TO CALLER AFTER WRITING   11400019
         B     WRITEUM            GO WRITE IT                           11500019
*                                                                       11600019
*********************************************************************** 11700019
*        DIRECTORY                                                      11800019
*********************************************************************** 11900019
*                                                                       12000019
DIRTY    EQU   *                                                        12100019
         TM    TAG,TAG1                DIRECTORY OUTPUT                 12200019
         BZ    TUT3                    NO-GO TEST FOR SYSUT4            12300019
         LA    GR7,OUTCHAR             DEVICE CHARACTERISTS             12400019
RECYCLE2 EQU   *                                                        12500019
         BAL   GR10,GOTRKBAL           TRK BAL. FIRST                   12600019
         BAL   GR10,CONVERT            CONVERT IT                       12700019
         BAL   GR10,UPDATE        GO SEE IF MORE                        12800019
         B     RECYCLE2                YES- TRY AGAIN                   12900019
         CLC   W10(W2,GR5),ZROS   EOF ONLY FROM SYSUT4                  13000019
         BNE   MUSTWRTE                NO EOF FOR OUTPUT MUST WRITE IT  13100019
         C     GR5,WRTNEXT             SYSUT4 - AT START OF BUFFER      13200019
         BE    GOBACK                           YES-GO BACK TO CALLER   13300019
         LA    GR11,W276          NO- GO BACK PREVIOUS                  13400019
         SR    GR5,GR11                         RECORD                  13500019
         MVI   W0(GR5),LASTREC+ENDPROC  AND WRITE IT OUT                13600019
         B     MUSTWRTE                WRITE BUFFER                     13700019
*                                                                       13800019
*********************************************************************** 13900019
*        SYSUT3                                                         14000019
*********************************************************************** 14100019
*                                                                       14200019
TUT3     EQU   *                                                        14300019
         TM    TAG,TAG4                IS IT SYSUT3                     14400019
         BZ    TUT4                    NO-GO TEST NEXT ONE              14500019
         L     GR5,ADWK           GET PTR TO SYSUT3 RECORD              14600019
         LA    GR7,UT3CHAR             UT3-OUTPUT CHARACTERISTICS       14700019
         LA    GR6,UT3DS1                 -TTRNLL                       14800019
         LA    GR1,UT3DCB                 -DCB                          14900019
         BAL   GR10,GOTRKBAL           BALANCE IT                       15000019
         BAL   GR10,CONVERT            CONVERT IT                       15100019
         MVI   W0(GR5),LASTREC+ENDPROC INDIC NO MORE RECS IN BFRS       15200019
         LA    GR10,GOBACK             RETURN TO CALLER AFTER WRITING   15300019
         B     WRITEUM            WRITE IT                              15400019
*                                                                       15500019
*********************************************************************** 15600019
*        SYSUT4                                                         15700019
*********************************************************************** 15800019
*                                                                       15900019
TUT4     EQU   *                                                        16000019
         LA    GR7,UT4CHAR             UT4-OUTPUT CHARACTERISTICS       16100019
         LA    GR6,UT4DS1                 -TTRNLL                       16200019
         LA    GR1,UT4DCB                 -DCB                          16300019
RECYCLE3 EQU   *                                                        16400019
         BAL   GR10,GOTRKBAL           BALANCE IT                       16500019
         BAL   GR10,CONVERT       CONVERT IT                            16600019
         BAL   GR10,UPDATE             SEE IF SOME MORE                 16700019
         B     RECYCLE3                YES TRY AGAIN                    16800019
         B     MUSTWRTE                NO- MUST WRITE                   16900019
*                                                                       17000019
*********************************************************************** 17100019
*        REBLOCKED RECORDS                                            * 17200019
*********************************************************************** 17300019
*                                                                       17400019
REBLKING EQU   *                                                        17500019
         LA    GR7,OUTCHAR             FETCH DEV. CHARACT. TABLE PTR.   17600019
RECYCLE7 EQU   *                                                        17700019
         BAL   GR10,GOTRKBAL           GO TO TRACK BALANCE              17800019
         BAL   GR10,CHKFIRST      CHECK FOR FIRST RECORD OF A    A34431 17830020
*                                  MEMBER PROCESSING             A34431 17860020
         BAL   GR10,CONVERT            CONVERT TTR TO MBBCCHHR          17900019
         BAL   GR10,UPDATE             SEE IF MORE RECORDS              18000019
         B     RECYCLE7                YES-XFER                         18100019
         B     MUSTWRTE                NO- MUST WRITE                   18200019
*                                                                       18300019
*********************************************************************** 18400019
*        COMPRESS IN PLACE                                              18500019
*********************************************************************** 18600019
*                                                                       18700019
COMPRS   EQU   *                                                        18800019
*       IF COMPRESSING WRITE ALL COMPLETE TRKS AND MOVE PARTIAL@ZA26248 20200099
*       TRK TO FRONT OF THE BUFFER                             @ZA26248 20220099
         MVI   W0(GR5),X00        TURN OFF LAST RECORD IND.    @ZA26248 20240099
         L     GR5,LASTTRK           SET UP TO MOVE ALL OF THE @ZA26248 20260099
         MVI   W0(GR5),X00        PARTIAL TRK THAT MAY BE IN   @ZA26248 20280099
         BAL   GR10,UPDATE        THE BUFFER                   @ZA26248 20300099
         ST    GR5,READNEXT          SET WHERE TO MOVE FROM    @ZA26248 20320099
         L     GR5,LASTTRK   YES,FIND END OF LAST WHOLE TRACK  @ZA26248 20340099
         MVI   W0(GR5),LASTREC+ENDPROC TURN ON LAST RECORD IN BUFFER    20400019
         BAL   GR10,WRITEUM            WRITE IT OUT                     20500019
         L     GR2,READNEXT            FETCH PTR. TO NEXT RECORD        20600019
         L     GR8,EOREAD              PTR. TO END RECORDS READ         20700019
         L     GR3,BCB                 WHERE TO MOVE TO                 20800019
         LA    GR3,W0(GR3)        LOP OFF HI BYTE                       20900019
         LR    GR5,GR3                 SAVE ADDRESS FOR RECYCLE         21000019
         SR    GR8,GR2                 FIND LENGTH OF MUVE              21100019
         LR    GR11,GR8                ADD LENGTH OF MOVE TO WHERE      21200019
         AR    GR11,GR5                IT IS GOING TO BE MOVED TO       21300019
         ST    GR11,EOREAD             AND SAVE AS LOGICAL END OF BUF.  21400019
         ST    GR11,READNEXT SET WHERE TO START READING        @ZA26248 21500099
         LA    GR10,GOBACK             EXIT ADDRESS FOR MOVE   @ZA26248 21530099
         B     MOVEUM                  GO MOVE RECORDS                  21600019
*                                                                       21700019
*                                                                       23800019
*********************************************************************** 23900019
*        TRACK OVERFLOW RECORDS                                         24000019
*********************************************************************** 24100019
*                                                                       24200019
TRKOVER  EQU   *                                                        24300019
         NI    FLG1,XFF-STOPEND1  TURN OFF STOP AFTER 1ST BUFFER        24400019
         OI    WSFLAG,RETRNOVR         SET OVERFLOW FLAG                24500019
         L     GR9,BEGFST2        INITIALIZE POINTER                    24600019
         MVI   SEGKLDL+W3,X00     TURN OFF ALL INTERNAL FLAGS           24700019
         ST    GR9,WRTNEXT        WRITE FROM SECOND BUFFER              24800019
RECYCLE5 EQU   *                                                        24900019
         TM    WSFLAG,USERTTR          NOTE/LIST USER TTRS       A44345 24950021
         BZ    NOTNOTE4                NO-XFER                   A44345 24960021
         OI    WSFLAG,NTELSTRC         RECORD MAY BE NOTELIST    A44345 24962021
         BAL   GR10,CHKUTTRS           GO PROCESS NOTE/USER TTRS A44345 24970021
         NI    WSFLAG,XFF-NTELSTRC     IF NOTELIST, THEN IT'S    A44345 24972021
*                                          UPDATED               A44345 24972421
NOTNOTE4 EQU   *                                                 A44345 24980021
         LA    GR7,OUTCHAR             PT. TO DEVICE TABLE              25000019
         BAL   GR10,GOTRKBAL           GET TRK BAL.                     25100019
*                                                                       25200019
*        RETURN +0 - RECORD WILL FIT AND MAY BE A SEGMENT               25300019
*                  - LENGTH FOUND IN INPUT BUFFER                       25400019
*        RETURN +4 - RECORD WILL NOT FIT MUST MAKE SEGMENT              25500019
*                  - LENGTH IN GR0                                      25600019
         B     WILLFIT            SEE IF AT LEAST 1 SEGMENT MADE        25700019
         LR    GR8,GR0                 GET LENGTH OF SEGMENT            25800019
         TM    SEGKLDL+W3,WRTOVR  FIRST SEGMENT                         25900019
         BO    NOTFSEG                 NO-XFER                          26000019
*        FIRST SEGMENT                                                  26100019
         OI    SEGKLDL+W3,WRTOVR  SET FLAG TO INDICATE AT               26200019
*                                      LEAST ONE SEG                    26300019
         MVC   SEGTTRN(W4),OUTDS1 SAVE 1ST TTRN FOR NOTELIST PROC.      26400019
         MVC   SEGKLDL(W3),W9(GR5) SAVE INPUT KEY AND DATA LENGTHS      26500019
         MVI   W9(GR5),X00        ZERO INPUT KEY LN. FOR NEXT PASS      26600019
         MVC   WRTPROC(W4),WRTNEXT  INITIALIZE SEGMENT PTR.             26700019
         LA    GR2,W12(GR5)       UPDATE PRESENT INPUT                  26800019
         ST    GR2,READPROC       PAST FMBBCCHHRKDD FOR MOVING DATA     26900019
         L     GR3,WRTPROC                                              27000019
         ST    GR3,LASTSEG             INITIALIZE LAST SEGMENT PTR      27100019
         IC    GR9,SEGKLDL             GET ORIGINAL KEY LN.             27200019
         STC   GR9,W9(GR3)        PLACE IN FIRST SEGMENT ONLY           27300019
         B     SEGPROC                 GO PROCESS SEGMENT               27400019
*        MORE THAN ONE SEGMENT                                          27500019
NOTFSEG  EQU   *                                                        27600019
         L     GR3,WRTPROC             FETCH PTR TO NEXT SEGMENT        27700019
         MVI   W9(GR3),X00        MAKE KEY LN ZERO                      27800019
         L     GR2,READPROC            FETCH PTR TO NEXT DATA           27900019
*        CREAT SEGMENT                                                  28000019
SEGPROC  EQU   *                                                        28100019
         MVI   W0(GR3),WRTOVR     TURN ON SEG FLAG ONLY- OUTPUT         28200019
         STH   GR8,WKA1                MOVE                             28300019
         MVC   W10(W2,GR3),WKA1   DATA LENGTH TO SEGMENT                28400019
         MVC   WKA1(W2),W10(GR5)  GET INPUT LENGTH                      28500019
         LH    GR9,WKA1                ON FULL WORD BOUNDARY            28600019
         SR    GR9,GR8                 TAKE AWAY AMOUNT THAT THIS SEG   28700019
         STH   GR9,WKA1                WILL USE                         28800019
         MVC   W10(W2,GR5),WKA1   STOW BACK AS AMOUNT LEFT              28900019
*        UPDATE POINTER AND MOVE DATA TO OUTPUT BUFFER                  29000019
FINALSEG EQU   *                                                        29100019
         LR    GR5,GR3                 GET OUTPUT PTR. TO CONVERT       29200019
         LR    GR9,GR2                 SAVE INPUT DATA PTR.             29300019
         BAL   GR10,CONVERT            CONVERT SEGMENT                  29400019
         LR    GR2,GR9                 RESTORE INPUT DATA PTR.          29500019
         L     GR9,WRTNEXT             GET BEGIN OF 1ST SEGMENT         29600019
*        ALL SEGMENTS OF A RECORD MUST BE ON SAME CYL.,BIN AND EXTENT   29700019
         LA    GR15,W5            COMPARE MBBCCH FOR 2321               29720019
         CLI   OUTUCBDV,A2321          IS OUTPUT DEVICE A 2321          29740019
         BE    DONTSUB                 YES, GO AROUND                   29760019
         BCTR  GR15,GR0                COMPARE MBBCC FOR OTHER DEVICES  29780019
DONTSUB  EQU   *                                                        29800019
         EX    GR15,COMPSEGS           ALL SEGMENTS WITHIN SAME BOUNDRY 29820019
         L     GR5,READNEXT            FETCH INPUT AGAIN                29900019
         BNE   RESTART                 NO MUST START OVER-MUST BE SAME  30000019
*                                                                       30100019
         ST    GR3,LASTSEG             SAVE LAST SEG PTR.               30200019
         LA    GR3,W12(GR3)       BUMP PASS FMBBCCHHR FOR OUTPUT        30300019
         LA    GR9,W0(GR8,GR3)    PT. TO NEXT SEG.                      30400019
         ST    GR9,WRTPROC             SAVE IT FOR NEXT PASS            30500019
         L     GR9,READPROC            FETCH THIS DATA ADDRESS          30600019
         LA    GR9,W0(GR8,GR9)    ADD LENGTH OF MOVE                    30700019
         ST    GR9,READPROC            UPDATE FOR NEXT SEG.             30800019
         LTR   GR8,GR8            IS DATA LENGTH ZERO            A45136 30850021
         BZ    NULLDATA           YES, BRANCH AROUND             A45136 30860021
         BAL   GR10,MOVEUM             MOVE DATE FROM INPUT TO OUTPUT   30900019
         TM    SEGKLDL+W3,WRTOVR  ARE WE AT LAST SEG.                   31000019
         BO    NOTNOTE4                NO-XFER GETNEXT ONE       A44345 31100021
*        LAST SEGMENT-RESTORE INPUT FOR NOTE LIST AND BUFFER UPDATING   31200019
NULLDATA EQU   *                                                 A45136 31250021
         MVC   W9(W3,GR5),SEGKLDL RESTORE KEY AND DATA LENGTHS          31300019
         L     GR9,OUTDS1              YES-MUST SET                     31400019
         MVC   OUTDS1(W4),SEGTTRN TTRN TO FIRST SEGMENT ONLY            31500019
         ST    GR9,SEGTTRN             SAVE THIS ONE                    31600019
         BAL   GR10,CHKFIRST      CHECK FOR FIRST RECORD OF A    A34431 31630020
*                                  MEMBER PROCESSING             A34431 31660020
         TM    WSFLAG,USERTTR          NOTE/LIST USER TTRS              31700019
         BZ    NOTNOTE3                NO-XFER                          31800019
         BAL   GR10,CHKUTTRL           GO PROCESS NOTE/USER TTRS A44345 31900021
NOTNOTE3 EQU   *                                                        32000019
         BAL   GR10,RECLNVAL           GO VALIDATE RECORD LENGTH        32100019
         MVC   OUTDS1(W4),SEGTTRN  RESTORE TTRN                         32200019
SEGDONE  EQU   *                                                        32300019
         TM    W0(GR5),LASTREC+ENDPROC LASTRECORD PROCESSED             32400019
         BZ    RECYCLE6                NO-XFER TO UPDATE POINTERS       32500019
         MVC   WRTNEXT(W4),BEGFST2  RESET WRTNEXT FOR WRITING           32600019
         BAL   GR10,WRITEUM       GO WRITE BUFFER-FULL                  32700019
         L     GR5,BCB                 RESET                            32800019
         LA    GR5,W0(GR5)        LOP OFF HI BYTE                       32900019
         ST    GR5,READNEXT            EVERYTHING                       33000019
         ST    GR5,WRTNEXT             FOR RE-READ                      33100019
         B     GOBACK                  RETURN TO CALLER                 33200019
*                                                                       33300019
WILLFIT  EQU   *                                                        33400019
         TM    SEGKLDL+W3,WRTOVR  HAS AT LEAST 1 SEG. BEEN MADE         33500019
         BO    LASTONE                 YES-XFER THIS MUST BE LAST ONE   33600019
*        NORMAL RECORD-NO OVERFLOW                                      33700019
         MVC   WKA1(W2),W10(GR5)  GET INPUT DATA LENGTH                 33800019
         L     GR3,WRTNEXT        WRITE PTR.                            33900019
         MVC   W0(W12,GR3),W0(GR5) MOVE TO OUTPUT FMBBCCHHR             34000019
         SR    GR8,GR8                                                  34100019
         IC    GR8,W9(GR5)         GET KEY LN.                          34200019
         AH    GR8,WKA1                ADD DATA LN.                     34300019
         LA    GR2,W12(GR5)        ON BOTH INPUT AND OUTPUT             34400019
         MVC   SEGTTRN(W4),OUTDS1  SAVE 1ST TTRN FOR NOTELIST PROC.     34500019
         MVC   SEGKLDL(W3),W9(GR5) SAVE INPUT KEY AND DATA LENGTHS      34600019
         ST    GR2,READPROC            SAVE DATA PTR. FOR UPDATE        34700019
        B     FINALSEG                GO PROCESS AS SEG.                34800019
*        LAST  SEGMENT                                                  34900019
LASTONE  EQU   *                                                        35000019
         NI    SEGKLDL+W3,XFF-WRTOVR TURN OFF SEG. FLAG                 35100019
         L     GR3,WRTPROC             FETCH NEXT SEGMENT PTR           35200019
         MVC   W0(W12,GR3),W0(GR5) MOVE TO OUTPUT FMBBCCHHR             35300019
         L     GR2,READPROC            GET PTR. TO NEXT DATA            35400019
         MVC   WKA1(W2),W10(GR5)   GET LENGTH OF MOVE                   35500019
         LH    GR8,WKA1                PLACE IN REG 8 FOR MOVEUM        35600019
         B     FINALSEG                PROCESS LAST SEGMENT             35700019
RECYCLE6 EQU   *                       MORE INPUT DATA                  35800019
         L     GR5,READPROC            FETCH NEXT INPUT DATA PTR.       35900019
         ST    GR5,READNEXT            UPDATE INPUT START PTR.          36000019
         MVI   SEGKLDL+W3,X00     RESET INTERNAL CONTROL FLAG           36200019
         SR    GR2,GR2            CLEAR REGISTER                 A45142 36202021
         IC    GR2,W9(GR5)        GET KEY SIZE IF ANY            A45142 36204021
         MVC   WKA1(W2),W10(GR5)  MOVE IN DATA LENGTH            A45142 36206021
         AH    GR2,WKA1           ADD DATA LENGTH TO KEY SIZE    A45142 36208021
         LA    GR2,W24(GR2)       ALLOW FOR COUNT FIELD +FMBB    A45142 36210021
*                               AND FIDGE FACTOR FOR 1 SEGMENT   A45142 36212021
         SR    GR8,GR8                                           A45142 36214021
         L     GR7,OUTCHAR+DBOFF  GET TRACKSIZE FROM DEVTYPE AR  A45142 36216021
         LH    GR9,WKA1           GET DATA LENGTH                A45142 36218021
         DR    GR8,GR7            DIVIDE LENGTH WITH TRACKSIZE   A45142 36220021
         LA    GR7,W12            AND                            A45142 36222021
         MR    GR8,GR7            MULTIPLY QUOTIENT WITH 12      A45142 36224021
*                                 BYTES FIDGE FACTOR             A45142 36226021
         AR    GR2,GR9            AND ADD TO TOTAL SIZE          A45142 36228021
         L     GR8,WRTPROC        START OF RECORD IN BUFFER      A45142 36230021
         AR    GR8,GR2            ADD TOTAL SIZE RECORD MAY HAVE A45142 36232021
         C     GR8,END2ND2        STILL WITHIN BUFFER            A45142 36234021
         BNH   FITSINB            YES-IT WILL FIT                A45142 36236021
         L     GR3,LASTSEG        NO-WRITE BUFFER OUT            A45142 36238021
         MVI   W0(GR3),LASTREC+ENDPROC  SET LAST RECORD FLAGS    A45142 36240021
         MVC   WRTNEXT(W4),BEGFST2 RESET BUFFER POINTER          A45142 36242021
         BAL   GR10,WRITEIT       WRITE AND RETURN               A45142 36244021
         B     RECYCLE5                GO TRY NEXT RECORD        A45142 36254021
FITSINB  EQU   *                                                 A45142 36264021
         MVC   WRTNEXT(W4),WRTPROC  UPDATE OUTPUT PTR.           A45142 36274021
         B     RECYCLE5                GO TRY NEXT RECORD               36300019
RESTART  EQU   *                                                        36400019
*      DETERMINATION IS NOW MADE TO SEE IF IT IS NECCESSARY TO ERASE    36500019
*  ANY UNUSED TRACKS.  IF IT IS, IEBDWR IS CALLED TO DO THE ERASING.    36600019
*                                                                       36700019
         SPACE 1                                                        36800019
         L     GR2,LASTSEG             LOAD PTR TO LAST SEG WITHIN      36900019
*                                        BOUNDRY                        37000019
         LA    GR2,W1(GR0,GR2)    BUMP PASSED F                         37100019
         BAL   GR10,GETCCOTT           GET TTR OF LAST SEGMENT          37200019
*                                        WITHIN BOUNDRY                 37300019
         MVC   LASTERS(W4),WKA1   SAVE TTR                              37400019
         LA    GR2,W1(GR0,GR9)    GET PTR TO MBBCCHHR OF FIRST SEG      37500019
         BAL   GR10,GETCCOTT           GET TTR OF FIRST SEG             37700019
         MVC   FIRSTERS(W4),WKA1  SAVE TTR                              37800019
         CLI   FIRSTERS+W2,W1     IS FIRST SEGMENT'S R=1                37900019
         BE    ERSNEED                 YES, THIS TRACK IS FIRST         38100019
         SPACE 1                                                        38200019
         LH    GR2,FIRSTERS            LOAD TT OF TTRN OF FIRST SEG     38300019
         LA    GR2,W1(GR0,GR2)    UP TT BY ONE                          38400019
         STH   GR2,FIRSTERS            STORE BACK UPDATED TT            38500019
         SPACE 1                                                        38600019
ERSNEED  EQU   *                                                        38700019
         XR    GR2,GR2                 CLEAR WORK REG                   38800019
         STH   GR2,FIRSTERS+W2    CLEAR RN OF TTRN                      38900019
         STH   GR2,LASTERS+W2                                           39000019
         CLC   FIRSTERS(W2),LASTERS FIRST TRACK HIGHER THAN LAST        39100019
         BH    CLEARFGS                YES, NO ERASE NEEDED             39200019
         SPACE 1                                                        39300019
*   IT IS NOW NECESSARY TO CALL IEBDWR TO ERASE ALL TRACKS FROM         39400019
*  FIRSTERS TO AND INCLUDING LASTERS                                    39500019
         SPACE 1                                                        39600019
         OI    FORM,ERASE              TURN ON ERASE FLAG FOR DWR       39700019
         L     GR15,VIEBDWR            LOAD PTR TO DWR                  39800019
         BALR  GR14,GR15               GO TO DWR                        39900019
         SPACE 1                                                        40000019
         NI    FORM,XFF-ERASE     TURN OFF ERASE FLAG                   40100019
         B     CLEARFGS           GO RESET FLAGS                        40200019
         SPACE 2                                                        40300019
GETCCOTT EQU   *                                                        40400019
         L     GR15,VCCOTT             LOAD PTR TO CONVERT ROUTINE      40500019
         BALR  GR14,GR15               CONVERT TO TTR                   40600019
         BR    GR10                    RETURN                           40700019
         SPACE 2                                                        40800019
CLEARFGS EQU   *                                                        40900019
         MVI   SEGKLDL+W3,X00     TURN OFF ALL FLAGS                    41000019
         MVI   W2(GR6),X00        RESTART AT BEGIN. OF TRK              41100019
         LH    GR14,TRKCAP        RESTART WITH                          41200019
         STH   GR14,W4(GR6)       FULL TRK                              41300019
         MVC   W9(W3,GR5),SEGKLDL RESTORE KEY AND DATA LENGTHS          41400019
         B     NOTNOTE4                GO TRY THIS ONE AGAIN     A44345 41500021
*                                                                       41600019
*********************************************************************** 41700019
*                                                                     * 41800019
*                   TRACK BALANCE SUB-ROUTINE                         * 41900019
*                                                                     * 42000019
*********************************************************************** 42100019
*                                                                       42200019
*        INPUT REGISTERS                                                42300019
*              GR1 - ADDRESS OF DCB                                     42400019
*              GR5 - ADDRESS OF RECORD TO BE PROCESSED                  42500019
*              GR6 - ADDRESS OF TTRN                                    42600019
*              GR7 - ADDRESS OF DEVICE CHARACTERIST TABLE               42700019
*              GR10- RETURN ADDRESS                                     42800019
*        WORK REGISTERS                                                 42900019
*              GR2,3,8,9,11,14 AND 15                                   43000019
*                                                                       43100019
*        EXITS GR10+0 - NORMAL EXIT                                     43200019
*              GR10+4 - RECORD WILL NOT FIT ON THE CURRENT TRACK        43300019
*                     - RETURN FOR COMPRESS AND TRACK OVERFLOW          43400019
*                                                                       43500019
GOTRKBAL EQU   *                                                        43600019
         MVC   WKA1(W2),W10(GR5)  MOVE IN DATA LENGTH                   43700019
         SR    GR9,GR9                                                  43800019
         IC    GR9,W9(GR5)        PICK UP KEY LENGTH IF ANY             43900019
         LH    GR8,WKA1                DATA SIZE                        44000019
         AR    GR8,GR9                 ADD KEY LENGTH IF ANY            44100019
*                                                                     * 44200019
*   CALCULATE THE SPACE REQUIRED TO WRITE DATA AS LAST RECORD. FOR    * 44300019
* BEST DIRECT ACCESS SPEED RECORDS SHOULD BE AS BIG AS POSSIBLE,      * 44400019
* IDEALLY MAXIMUM FOR TRACK.                                          * 44500019
*                                                                       44600019
         SR    GR3,GR3                                                  44700019
         IC    GR3,OVERL               OVERHEAD FOR LAST RECORD         44800019
         TM    DEVFLAG,HALFOVER        TWO BYTE OVERHEAD FOR     S20201 44809020
*                                        THIS DEVICE             S20201 44818020
         BNO   NOTTWO             NO, USE ONE BYTE             @ZA10902 44827099
*                                        OVERHEAD                S20201 44836020
         SPACE 1                                                 S20201 44845020
         LH    GR3,OVERI               LOAD TWO BYTE OVERHEAD    S20201 44854020
*                                        (OVERHEAD LAST =        S20201 44863020
*                                         OVERHEAD NOT LAST)     S20201 44872020
NOTTWO   OC    WKA1(W2),WKA1      IS DATA LENGTH ZERO (EOF)    @ZA10902 44872999
         BNZ   NOTTWO1                 NO, GO ON                 S20201 44873820
         CLI   DEVCODE+3,X'08'    IS IT A 2314?                @ZA13751 44874199
         BE    NOTTWO1            YES,DON'T ADD ONE BYTE       @ZA13751 44874499
         SPACE 1                                                 S20201 44874720
         LA    GR8,W1(GR0,GR8)         YES, ADD 1 TO KEYLEN PLUS S20201 44879220
*                                       DATA LENGTH FOR EOF      S20201 44880120
         SPACE 1                                                 S20201 44881020
NOTTWO1  EQU   *                                                 S20201 44890020
         AR    GR3,GR8                 ADD TOTAL RECORD KEY+DATA SIZE   44900019
         SR    GR15,GR15                                                45000019
         LTR   GR9,GR9                 IS THERE A KEY                   45100019
         BNZ   AKEY                    YES                              45200019
         IC    GR15,OVERK              OVERHEAD IF A KEY                45300019
         SR    GR3,GR15                SUBTRACT KEY OVERHEAD            45400019
AKEY     EQU   *                                                        45500019
         LH    GR14,W4(GR6)       TRACK BALANCE                         45600019
         CR    GR3,GR14                WILL THIS TRK HOLD THIS RECORD   45700019
         BH    NOFIT                   NO- RECORD WILL NOT FIT ON TRACK 45800019
*                                                                       45900019
NEWBAL   EQU   *                                                        46000019
         TM    DEVFLAG,TOLFAC          TOLERANCE FACTOR TO BE ADDED     46100019
         BZ    NOTOLER            NO                                    46200019
         MH    GR8,TOLER               MULTIPLY KL+DL BY TOLERANCE      46300019
         SRL   GR8,W9             (KL+DL)*TOLERANCE/512                 46400019
*                                                                       46500019
NOTOLER  EQU   *                                                        46600019
         SR    GR11,GR11                                                46700019
         IC    GR11,OVERI              TRACK OVERHEAD NOT LAST RECORD   46800019
         TM    DEVFLAG,HALFOVER        TWO BYTE OVERHEAD FOR     S20201 46810020
*                                        THIS DEVICE             S20201 46820020
         BNO   NOTTWO2                 NO, USE ONE BYTE OVERHEAD S20201 46830020
         SPACE 1                                                 S20201 46840020
         LH    GR11,OVERI              LOAD TWO BYTE OVERHEAD    S20201 46850020
         SPACE 1                                                 S20201 46860020
NOTTWO2  EQU   *                                                 S20201 46870020
         AR    GR8,GR11                ADD KL+DL+OVERHEAD               46900019
         SR    GR8,GR15                SUBTRACT KEY OVERHEAD IF NO KEY  47000019
         SR    GR14,GR8                COMPUTE NEW TRK BALANCE          47100019
         STH   GR14,W4(GR6)       NEW TRK BALANCE- MAY BE NEGATIVE      47200019
         BNM   *+8                     GR14 NEGATIVE           @ZA01712 47230003
         OI    W4(GR6),X'80'           YES INDICATE IT         @ZA01712 47260003
         SR    GR2,GR2                                                  47300019
         IC    GR2,W2(GR6)        OBTAIN 'R' FROM TTRN                  47400019
         LA    GR2,W1(GR2)        ADD 1 TO 'R'                          47500019
         STC   GR2,W2(GR6)        STORE BACK UPDATED 'R'                47600019
         BR    GR10               RETURN TO CALLER + 0                  47700019
*                                                                       47800019
NOFIT    EQU   *                                                        47900019
         TM    TAG,TAG1           DIRECTORY OUTPUT               A36049 47909000
         BZ    NOPRBLM            NO, GO ON                      A36049 47918000
         CLC   W2(W1,GR6),NDBTR   WAS LAST 'R' FROM TTRN LOWER   A36049 47927000
*                                 THAN CURRENT MAX NUMBER OF     A36049 47936000
*                                 BLOCKS PER TRACK               A36049 47945000
         BNL   NOPRBLM            N0, G0 0N                      A36049 47954000
         OI    FLG4,REDASD        YES, INDIC WRITING OF WARNING  A36049 47963000
*                                 MSG                            A36049 47972000
         B     NEWBAL             RECORD WILL STILL FIT          A36049 47981000
NOPRBLM  EQU   *                                                 A36049 47990000
         TM    WSFLAG,RETRNOVR         OVERFLOW RECORDS-OUTPUT          48000019
         BZ    NOOVERFL                NO-NORMAL RECORD                 48100019
         CLC   W10(W2,GR5),ZROS   EOF                                   48200019
         BE    NEXTTRK                 YES-XFER                         48300019
         SR    GR3,GR8                 FETCH OVERHEAD IF ANY            48400019
         LR    GR0,GR14           SAVE TRL. BAL.                        48500019
         LA    GR2,W1(GR3,GR9)    ADD KL.+1                             48600019
         SR    GR14,GR2           WILL IT FIT                           48700019
         BNP   NEXTTRK                 NO-IF 0 OR -                     48800019
         SR    GR0,GR3            FIND ACTUAL LENGTH THAT WILL          48900019
         SR    GR14,GR14          ZERO AS TRK BAL LEFT                  49000019
         LA    GR10,W4(GR10)      RETURN TO CALLER+4                    49100019
         B     NEWBAL                  AFTER CALCULATING NEW BAL        49200019
NEXTTRK  EQU   *                                                        49300019
         LH    GR14,TRKCAP             FETCH TOTAL TRK LENGTH           49400019
         STH   GR14,W4(GR6)       STOW FOR TRK BAL                      49500019
         LH    GR2,W0(GR6)        GET TT                                49600019
         LA    GR2,W1(GR2)        TT+1                                  49700019
         STH   GR2,W0(GR6)        STOW BACK                             49800019
         MVI   W2(GR6),X00        MAKE R ZERO                           49900019
         B     GOTRKBAL                MAY OR MAY NOT FIT -RETRY        50000019
NOOVERFL EQU   *                                                        50100019
         LH    GR2,W0(GR6)        OBTAIN TT                             50200019
         LA    GR2,W1(GR2)        ADD 1 TO TT                           50300019
         STH   GR2,W0(GR6)        STOW TT+1                             50400019
         MVI   W2(GR6),X00        MAKE R ZERO                           50500019
         LH    GR14,TRKCAP             GET NEW TRK BALANCE              50600019
         TM    TAG,TAG2      WRITING MEMBER DATA                 A36074 50630020
         BZ    NEWBAL        NO, CALC. NEW TRACK BALANCE         A36074 50660020
         TM    COMDCDSW,COMPRESS  IS COMPRESS BEING DONE                50700019
         BZ    NEWBAL                  NO-CALCULATE NEW TRK BAL.        50800019
         MVC   LASTTRK(W4),LASTMREC SAVE LAST RECORD ADDRESS   @ZA26248 50850099
         TM    TAG,TAG8                FIRST TIME AFTER MCM-1ST RECORD  50880099
         BO    NEWBAL                  YES-PROCESS AS NEW RECORD        50910099
         STH   GR14,W4(GR6)       STORE TRK CAPACITY FOR NEXT RECORD    50940099
         B     NEWBAL        GO PROCESS RECORD ON NEXT TRACK   @ZA26248 50970099
*                                                                       51300019
*********************************************************************** 51400019
*                                                                     * 51500019
*                   CONVERT SUB-ROUTINE                               * 51600019
*                                                                     * 51700019
*********************************************************************** 51800019
*                                                                       51900019
*        INPUT  REGISTERS                                               52000019
*              GR1 - ADDRESS OF DCB                                     52100019
*              GR6 - ADDRESS OF TTRN                                    52200019
*              GR10- RETURN ADDRESS                                     52300019
*        WORK REGISTERS                                                 52400019
*              GR0,2,14,15                                              52500019
*                                                                       52600019
CONVERT  EQU   *                                                        52700019
         L     GR0,W0(GR6)        FETCH TTRN                            52800019
         LA    GR2,W1(GR5)        ADDRESS OF MBBCCHHR IN BUFFER         52900019
         L     GR15,VTTOCC             ADDRESS OF CONVERSION ROUTINE    53000019
         BALR  GR14,GR15               CONVERT TTRN FROM R0 INTO (GR2)  53100019
         LTR   GR15,GR15               EOF EXTENTS                      53200019
         BCR   MS8,GR10           BRANCH NOT END YET                    53300019
         LR    GR2,GR1                 SAVE DCB ADDRESS - EOV           53400019
         OI    DCBOFLGS,X80       TURN ON WRITING FLAG                  53500019
         TM    TAG,TAG2           WRITING MEMBER DATA            A41760 53550021
         BZ    CALLEOV            NO                             A41760 53560021
         MVC   WKA1(W8),DCBFDAD   SAVE DCB FULL DISK ADDRESS     A41760 53570021
         MVC   WKA1+W8(W2),DCBTRBAL   SAVE DCB TRACK BALANCE     A41760 53580021
         MVC   WKA1+W10(W4),DCBRELAD  SAVE LAST REC TTRN         A41760 53592021
         MVC   DCBFDAD(W8),ERPLMFD  POINT TO PREVIOUS VALID EOF  A41760 53594021
*             WHEN DIRECTORY LAST TIME WAS WRITTEN TO OUTPUT DS  A41760 53596021
         MVC   DCBTRBAL(W2),ERPTB SET PREVIOUS VALID TR BALANCE  A41760 53598021
         MVC   DCBRELAD(W4),ERPTTR  SET PREVIOUS VALID LAST REC  A41760 53598421
CALLEOV  SVC   SVC55              CALL EOV                       A41760 53600021
         LR    GR1,GR2                 RETURN DCB ADDRESS - EOV         53700019
         NI    DCBOFLGS,X7F       TURN OFF WRITING FLAG                 53800019
         TM    TAG,TAG2           WRITING MEMBER DATA            A41760 53850021
         BO    RESTORE            RETRY CONVERSION             @ZA16486 53860099
         TM    TAG,TAG3           WRITING OUT DIR ON SYSUT4?   @ZA16486 53863099
         BZ    CONVERT            NO,RETRY CONVERSION          @ZA16486 53866099
         L     GR2,DCBDEBAD       PICK UP DEB ADDRESS          @ZA16486 53869099
         MVC   UT4FDAD+1(W6),W36(GR2) REINIT EXTENT START      @ZA16486 53872099
         B     CONVERT            RETRY CONVERSION             @ZA16486 53875099
RESTORE  MVC   DCBFDAD(W8),WKA1   RESTORE DCB FULL DISK ADDR   @ZA16486 53878099
         MVC   DCBTRBAL(W2),WKA1+W8   RESTORE DCB TRACK BALANCE  A41760 53890021
         MVC   DCBRELAD(W4),WKA1+W10  RESTORE LAST REC TTRN      A41760 53892021
         B     CONVERT            RETRY CONVERSION                      53900021
*                                                                       54000019
*********************************************************************** 54100019
*                                                                     * 54200019
*                  RECORD CONTROL SUB-ROUTINE                         * 54300019
*                                                                     * 54400019
*********************************************************************** 54500019
*                                                                       54600019
*        INPUT REGISTERS                                                54700019
*              GR5 - ADDRESS OF RECORD TO BE PROCESSED                  54800019
*              GR10- RETURN ADDRESS                                     54900019
*        EXITS GR10+0 - MORE RECORDS TO PROCESS                         55000019
*              GR10+4 - NO MORE RECORDS TO PROCESS                      55100019
*        WORK REGISTERS  GR11                                           55200019
*                                                                       55300019
UPDATE   EQU   *                                                        55400019
         TM    W0(GR5),ENDPROC+LASTREC LAST RECORD FLAG ON              55500019
         BZ    UPRECPTR           MORE RECORDS IN THIS BUFFER           55600019
         BO    W4(GR10)           LAST RECORD IN LAST BUFFER            55700019
         L     GR5,BEGFST2             START OF SECOND BUFFER           55800019
         OI    FLG1,IN2ND         SET TO INDICATE IN LAST BUFFER        55900019
         BR    GR10                    HANDLE NEXT RECORD               56000019
UPRECPTR EQU   *                                                        56100019
         SR    GR11,GR11                                                56200019
         IC    GR11,W9(GR5)       GET KEY LENGTH                        56300019
         MVC   WKA1(W2),W10(GR5)  DATA LENGTH- NO ADDRESSING PROBLEM    56400019
         AH    GR11,WKA1               ADD KEY + DATA LENGTH            56500019
         LA    GR11,W12(GR11)     +FMBB +COUNT                          56600019
         AR    GR5,GR11                FIND START OF NEXT RECORD        56700019
         BR    GR10               ANALYZE NEXT RECORD                   56800019
*                                                                       56900019
*********************************************************************** 57000019
*                                                                     * 57100019
*                  END OF FILE SUB-ROUTINE                            * 57200019
*                                                                     * 57300019
*********************************************************************** 57400019
*        INPUT REGISTERS                                                57500019
*              GR1 - ADDRESS OF DCB                                     57600019
*              GR5 - ADDRESS OF RECORD TO BE PROCESSED                  57700019
*              GR10- RETURN ADDRESS                                     57800019
*        EXITS GR10+0 - IF NO MORE ROOM IN THE BUFFER TO READ           57900019
*              RETURN TO CALLER - IF THERE IS MORE ROOM TO READ         58000019
*        WORK REGISTERS                                                 58100019
*              GR6,7,9,AND 11                                           58200019
*                                                                       58300019
MORERUUM EQU   *                                                        58400019
         SR    GR11,GR11                                                58500019
         IC    GR11,W9(GR5)       GET EOF KEY SIZE IF ANY               58600019
         SR    GR7,GR7                                                  58700019
         IC    GR7,DCBKEYLE            GET KEY LENGTH OF RECORDS        58800019
         LA    GR6,W12(GR5)       GET ADDRESS COUNT FIELD + FMBB        58900019
         AR    GR6,GR11                ADD KEY TO LOCATE END OF EOF     59000019
         AH    GR7,IBLKSIZE            MAX. BLOCKSIZE + KEY LN          59100019
         LA    GR7,W12(GR7)       ALLOW FOR COUNT FIELD + FMBB          59200000
         TM    ULLDST,LOAD             IS A LOAD BEING DONE      X010XX 59250000
         BNO   WSU07010                NO, GO AROUND             X010XX 59260000
         LR    GR9,GR1                 SAVE OUTPUT DCB POINTER   X010XX 59270000
         LA    GR1,LOADDCB             LOAD POINTER TO LOAD DCB  X010XX 59280000
         LH    GR11,DCBBLKSI           OBTAIN LOAD DCB BLKSIZE   X010XX 59290000
         LA    GR1,W8                  LOAD OVERLAP READ LENGTH  X010XX 59292000
         SR    GR11,GR1                SUBTRACT OVERLAP LENGTH   X010XX 59294000
*                                         FROM LOAD DCB BLKSIZE  X010XX 59296000
         CR    GR11,GR7                IS THE LOAD DCB BLKSIZE - X010XX 59298000
*                                         OVERLAP LENGTH LARGER  X010XX 59298400
*                                         THAN MAXIMUM DIRECT    X010XX 59298800
*                                         ACCESS RECORD LENGTH   X010XX 59299200
         BNH   WSU07000                NO, GO AROUND             X010XX 59299600
         LR    GR7,GR11                SET MAXIMUM RECORD LENGTH X010XX 59299700
*                                         TO LOAD DCB BLKSIZE -  X010XX 59299800
*                                         OVERLAP LENGTH         X010XX 59299900
WSU07000 EQU   *                       RESTORE DCB POINTER       X010XX 59333200
         LR    GR1,GR9                 RESTORE POINTER TO OUTPUT X010XX 59343200
*                                         DCB                    X010XX 59353200
WSU07010 EQU   *                       FIND                      X010XX 59363200
         AR    GR7,GR6                 END OF MAXIMUM NEXT RECORD       59366700
         L     GR9,END2ND2             END OF SECOND (LOWER) BUFFER     59400019
         TM    FLG1,P2FLG1+IN2ND       IN LAST BUFFER OF 2 OR ONLY 1    59500019
         BC    MS9,GOTLIMIT       YES                                   59600019
         LA    GR10,GONEXTBF           IF NO ROOM GO TO NEXT BUFFER     59700019
         L     GR9,ENDFST1             END OF FIRST BUFFER              59800019
GOTLIMIT EQU   *                       TEST IF OUT OF BUFFER            59900019
         CR    GR7,GR9                 WILL NEXT RECORD EXCEED BUFFER   60000019
         BNH   DONOWRTS                NO- CAN READ MORE INTO BUFFER    60100019
         BR    GR10                    EITHER RETURN OR GET NEXT ONE    60200019
GONEXTBF EQU   *                                                        60300019
         MVI   W0(GR5),LASTREC    SET ONLY LASTREC IN BUFFER FLAG       60400019
         L     GR6,BEGFST2             SET AT START OF SECOND BUFFER    60500019
         OI    FLG1,IN2ND              SET FLAG TO SHOW IN LAST BUFFER  60600019
         B     SETNOWRT                SET THAT HAVE NOT WRITTEN        60700019
DONOWRTS EQU   *                                                        60800019
         MVI   W0(GR5),X00        RESET ENDPROC,LASTREC FLAGS           60900019
SETNOWRT EQU   *                                                        61000019
         OI    WSFLAG,NOWRT            SET FLAG EOF IN BUFFER MORE ROOM 61100019
         ST    GR5,LASTMREC            SAVE POINTER TO LAST RECORD      61200019
         ST    GR6,READNEXT            START OF NEXT RECORD             61300019
         B     GOBACK                  RETURN                           61400019
*                                                                       61500019
*                                                                       61600019
*********************************************************************** 61700019
*                                                                     * 61800019
*                   NOTE LIST/USER TTR SUB-ROUTINE                    * 61900019
*                                                                     * 62000019
*********************************************************************** 62100019
*                                                                       62200019
*********************************************************************** 62300019
*                                                                     * 62400019
*     IF USER TTR'S ARE PRESENT IN ANY MEMBER, THIS SECTION OF CODE   * 62500019
*   WILL BE EXECUTED.  THIS SECTION CONSISTS OF AN INNER LOOP TO      * 62600019
*   PROCESS NOTELISTS AND AN OUTTER LOOP TO PROCESS USER TTR'S.       * 62700019
*   EACH INPUT RECORD'S TTR IS CHECKED AGAINST EACH USER AND NOTELIST * 62800019
*   TTR AND UPDATED AND FLAGGED WHEN FOUND.  FLAGGING IS DONE SO THAT * 62900019
*   ONCE A TTR IS UPDATED IT IS NOT CHECKED FOR AGAIN.  FLAGS         * 63000019
*   INDICATING THAT USER TTR'S HAVE BEEN UPDATED ARE IN THE           * 63100019
*   COMMUNICATION AREA.  NOTELIST TTRX'S ARE FLAGGED IN THE HIGH      * 63200019
*   ORDER BIT OF THE FIELD.  NOTELIST TTR FLAGS ARE CLEARED BEFORE    * 63300019
*   WRITING THE NOTELIST TO THE OUTPUT DATA SET.                      * 63400019
*                                                                     * 63500019
* *** NOTE THAT IF THE HIGH ORDER BIT OF THE TTRX FIELD IS USED,      * 63600019
*   THE TTR WILL NOT BE UPDATED AND THE HIGH ORDER BIT WILL BE SET    * 63700019
*   TO ZERO AT THE END OF PROCESSING.                                 * 63800019
*                                                                     * 63900019
*********************************************************************** 64000019
*                                                                       64100019
CHKUTTRS EQU   *                                                        64200019
         LR    GR0,GR1            SAVE ''OUTPUT'' DCB PTR.              64300019
         LA    GR1,INDCB               POINTER TO INPUT DCB             64400019
         LR    GR2,GR5                 POINTER TO FMBBCCHHR IN BUFFER   64500019
         LA    GR2,W1(GR0,GR2)    BUMP PASSED F                         64600019
         L     GR15,VCCOTT             ADDRESS OF CONVERSION RTN        64700019
         BALR  GR14,GR15               GET INPUT TTR                    64800019
         LR    GR1,GR0            RETURN ''OUTPUT''                     64900019
         SPACE                                                          65000019
         MVC   SAVETTR0(W3),WKA1  MOVE TTR FOR TEST                     65100019
CHKUTTRL EQU   *                                                 A44345 65150021
         NI    UTTRFLAG,XFF-NOTELIST TURN OFF NOTELIST PTR FOUND FLAG   65200019
         L     GR7,IDEAD               DIRECTORY ENTRY POINTER          65300019
         IC    GR3,TTRNUMB(GR0,GR7) NUMBER OF USER TTR'S                65400019
         SLL   GR3,W25            GET NUMBER OF USER TTR'S AS A         65500019
         SRL   GR3,W30            FULL REGISTER BINARY VALUE            65600019
*                                      (STRIP OFF ALIAS AND NUMBER      65700019
*                                         OF HALF WORDS OF USER DATA)   65800019
         LA    GR7,TTRDIRC(GR0,GR7) START OF USER TTR FIELD             65900019
OUTLOOP  EQU   *                                                        66000019
         CLI   W3(GR7),X00        IS THIS TTRN A NOTELIST POINTER       66100019
         BE    CARRYON                 NO, BRANCH AROUND                66200019
         L     GR2,AMSG           LOAD PTR TO MSG CSECT          A38720 66210021
         USING IEBWSUMG,GR2       ADDRESSABILITY TO MSG CSECT    A38720 66220021
         LA    GR8,MSGNO176       LOAD PTR TO MSG                A38720 66250021
         DROP  GR2                                               A38720 66260021
         TM    UTTRFLAG,NOTELIST       WAS A PREVIOUS TTRN A NOTELIST   66300019
*                                         POINTER                       66400019
         BO    GIVEMSG                 ERROR, MORE THAN ONE      A38720 66500021
*                                NOTELIST POINTER IS ILLEGAL     A38720 66600021
         OI    UTTRFLAG,NOTELIST       SET NOTELIST PTR FOUND SWITCH    66700019
         TM    WSFLAG,NTELSTRC    CHECKING FOR NOTELIST RECORD   A44345 66750021
         BO    FORNOTE            YES, BRANCH AROUND             A44345 66760021
         XR    GR8,GR8                 CLEAR REGISTER                   66800019
         L     GR9,ADNL                POINTER TO NOTELIST              66900019
         IC    GR8,W9(GR0,GR9)    LOAD KEY LENGTH                       67000019
         AR    GR9,GR8                 BUMP NOTELIST POINTER BY KEY     67100019
         LA    GR9,W12(GR0,GR9)   LENGTH+FMBB+COUNT FIELD               67200019
         TM    INDCB+RECFM,FIXREC IS INPUT FIXED OR UNDEFINED           67300019
         BO    GETNUMB            YES - GO AROUND                       67400019
         LA    GR9,W8(GR0,GR9)    BUMP PAST BIG AND LITTLE              67500019
*                                         LL FIELDS PLUS 2 RESERVED     67600019
*                                         BYTES                         67700019
GETNUMB  EQU   *                                                        67800019
         IC    GR8,W3(GR0,GR7)    INSERT NUMBER OF NOTELIST TTRX'S      67900019
INNRLOOP EQU   *                                                        68000019
         TM    W0(GR9),REPFLAG    HAS THIS TTR BEEN UPDATED             68100019
         BO    NOTEDECR                YES, GO ON                       68200019
         CLC   W0(W3,GR9),SAVETTR0  ARE TTR'S EQUAL                     68300019
         BNE   NOTEDECR                NO, GO ON                        68400019
         MVC   W0(W3,GR9),OUTDS1  PUT IN OUTPUT TTR                     68500019
         OI    W0(GR9),REPFLAG    SET REPLACED FLAG                     68600019
NOTEDECR EQU   *                                                        68700019
         LA    GR9,W4(GR0,GR9)    INCREMENT TO NEXT TTRX                68800019
         BCT   GR8,INNRLOOP            LOOP TILL DONE                   68900019
CARRYON  EQU   *                                                        69000019
         TM    WSFLAG,NTELSTRC    CHECKING FOR NOTELIST RECORD   A44345 69050021
         BO    USERDECR           YES, BRANCH TO OUTER LOOP      A44345 69060021
         STC   GR3,CONMASK             STORE FOR CONVERSION             69100019
         TR    CONMASK(W1),BITSWAP TRANSLATE INTO A MASK                69200019
         IC    GR8,CONMASK             LOAD MASK                        69300019
         EX    GR8,TESTREP             HAS THIS TTR BEEN UPDATED        69400019
         BO    USERDECR                YES, GO TO END OF OUTTER LOOP    69500019
FORNOTE  EQU   *                                                 A44345 69550021
         CLC   W0(W3,GR7),SAVETTR0  ARE TTR'S EQUAL                     69600019
         BNE   USERDECR                NO, GO TO END OF OUTTER LOOP     69700019
         TM    WSFLAG,NTELSTRC    CHECKING FOR NOTELIST RECORD   A44345 69750021
         BO    NOTEUPDT           YES, BRANCH TO MOVE NOTELIST   A44345 69760021
         MVC   W0(W3,GR7),OUTDS1  PUT IN OUTPUT TTR                     69800019
         OC    UTTRFLAG(W1),CONMASK SET REPLACED FLAG                   69900019
         CLI   W3(GR7),X00        HAVE I JUST UPDATED A NOTELIST        70000019
*                                        POINTER TTR                    70100019
         BE    USERDECR                NO, GO ON                        70200019
NOTEUPDT EQU   *                                                 A44345 70250021
         ST    GR10,RETSAVE            SAVE REGISTERS                   70300019
         ST    GR3,RETSAVE+W4                                           70400019
         ST    GR7,RETSAVE+W8                                           70500019
         BAL   GR10,NOTENOW            RESET FLAGS AND MOVE NOTELIST    70600019
*                                        TO BUFFER                      70700019
         L     GR10,RETSAVE            RESTORE REGISTERS                70800019
         L     GR3,RETSAVE+W4                                           70900019
         L     GR7,RETSAVE+W8                                           71000019
USERDECR EQU   *                                                        71100019
         LA    GR7,W4(GR0,GR7)    INCREMENT TO NEXT TTRN                71200019
         BCT   GR3,OUTLOOP             LOOP TILL DONE                   71300019
         BR    GR10                    GET NEXT RECORD                  71400019
*                                                                     * 71600019
*    CLEAR FLAGS IN NOTELIST TTRX'S IN WORKAREA AND MOVE TO BUFFER    * 71700019
*                                                                     * 71800019
NOTENOW  EQU   *                                                        71900019
         XR    GR8,GR8                 CLEAR REGISTER                   72000019
         L     GR9,ADNL                POINTER TO NOTELIST              72100019
         IC    GR8,W9(GR0,GR9)    LOAD KEY LENGTH                       72200019
         AR    GR9,GR8                 BUMP NOTELIST POINTER BY KEY     72300019
         LA    GR9,W12(GR0,GR9)   LENGTH+FMBB+COUNT FIELD               72400019
         TM    INDCB+RECFM,FIXREC      IS RECFM FIEXD OR UNDEFINED      72500019
         BO    NUMBGET                 YES, GO AROUND                   72600019
         LA    GR9,W8(GR0,GR9)    BUMP POINTER PASSED LL FIELDS         72700019
NUMBGET  EQU   *                                                        72800019
         IC    GR8,W3(GR0,GR7)    INSERT NUMBER OF NOTELIST TTRX'S      72900019
CLEARFLG EQU   *                                                        73000019
         NI    W0(GR9),XFF-REPFLAG CLEAR FLAGS                          73100019
         LA    GR9,W4(GR0,GR9)    BUMP TO NEXT TTRX                     73200019
         BCT   GR8,CLEARFLG            CONTINUE CLEARING                73300019
         L     GR2,ADNL                POINTER TO NOTELIST RECORD       73400019
         LA    GR2,W12(GR0,GR2)   SPACE OVER NOTELIST COUNT+FMBB        73500019
         LA    GR3,W12(GR5)       START OF NOTELIST IN OUTPUT AREA      73600019
         IC    GR8,W3(GR0,GR7)    INSERT NUMBER OF NOTELIST      X010XX 73650000
*                                      TTRX'S                    X010XX 73700000
         SLL   GR8,W2             AND MULTIPLY BY 4              X010XX 73750000
         TM    INDCB+RECFM,FIXREC IS INPUT PDS RECFM FIXED OR    X010XX 73760000
*                                      UNDEFINED                 X010XX 73770000
         BO    WSU08000           YES, GO AROUND                 X010XX 73780000
         LA    GR8,W8(GR0,GR8)    ADD LENGTH OF BIG AND LITTLE   X010XX 73790000
*                                      LL FIELDS                 X010XX 73792000
WSU08000 EQU   *                                                 X010XX 73794000
         STH   GR8,WKA1           SAVE NOTELIST DATA SIZE        X010XX 73796000
         SR    GR8,GR8                                                  73800019
         IC    GR8,W9(GR5)        NOTELIST MIGHT JUST HAVE A KEY        73900019
         AH    GR8,WKA1                TOTAL SIZE OF NOTELIST           74000019
*                                                                       74100019
*********************************************************************** 74200019
*                                                                     * 74300019
*                   MOVE SUB-ROUTINE                                  * 74400019
*                                                                     * 74500019
*********************************************************************** 74600019
*                                                                       74700019
*        INPUT REGISTERS                                                74800019
*              GR2 -ADDRESS OF WHERE TO MOVE FROM                       74900019
*              GR3 -ADDRESS OF WHERE TO MOVE TO                         75000019
*              GR8 -LENGTH OF MOVE                                      75100019
*        EXIT  GR10+0                                                   75200019
*        WORK REGISTERS                                                 75300019
*              GR9 AND 11                                               75400019
*                                                                       75500019
MOVEUM   EQU   *                                                        75600019
         LR    GR9,GR8                 SAVE TOTAL SIZE                  75700019
         SRL   GR8,W8             DIVIDE BY 256                         75800019
         LTR   GR8,GR8                                                  75900019
         BC    MS8,MOVE1          LESS THAN 256 BYTES DO IN 1 MOVE      76000019
         LA    GR11,W256          MOVE CONSTANT                         76100019
MOVE256  EQU   *                                                        76200019
         MVC   W0(W256,GR3),W0(GR2)  MOVE 256 BYTES                     76300019
         LA    GR2,W256(GR2)                                            76400019
         LA    GR3,W256(GR3)      UP TO AND FROM POINTERS               76500019
         SR    GR9,GR11                AMT. REMAINING TO MUVE           76600019
         BCT   GR8,MOVE256             MORE 256 BYTE BLOCKS TO MOVE     76700019
         LTR   GR9,GR9                 CAME OUT EVEN-NO MORE            76800019
         BCR   MS8,GR10           YES- NONE LEFT TO MOVE- EXIT          76900019
MOVE1    EQU   *                                                        77000019
         BCTR  GR9,GR0            DECREMENT FOR EXECUTE                 77100019
         EX    GR9,MOVENOTE       MOVE LAST ONES                        77200019
         BR    GR10                    EXIT LOOP                        77300019
*                                                                       77400019
*********************************************************************** 77500019
*                                                                     * 77600019
*                   RECORD LENGTH VALIDATION SUB-ROUTINE              * 77700019
*                                                                     * 77800019
*********************************************************************** 77900019
*                                                                       78000019
*        INPUT REGISTERS                                                78100019
*              GR1 - ADDRESS OF OUTPUT DCB                              78200019
*              GR5 - ADDRESS OF RECORD TO BE PROCESSED                  78300019
*              GR6 - ADDRESS OF TTRN                                    78400019
*              GR10- RETURN ADDRESS                                     78500019
*        WORK  REGISTRES                                                78600019
*              GR2,3,8,9,11,14,AND 15                                   78700019
*        EXITS GR10+0                                                   78800019
*                                                                       78900019
*                                                                       79000019
RECLNVAL EQU   *                                                        79100019
         L     GR2,AMSG                LOAD PTR TO MSG CSECT            79200019
         USING IEBWSUMG,GR2            ADDRESSABILITY TO MSG CSECT      79300019
         TM    SENSE,SENSE5            PREVIOUS RECORD A SHORT 1        79400019
         BO    FXBLKSTD                YES-XFER TO TEST IF THIS IS EOF  79500019
         LA    GR8,MSGNO188            LOAD PTR TO MSG           A38720 79550021
         CLC   W10(W2,GR5),IBLKSIZE    INPUT VS. INPUT BLOCKSIZE A38720 79560021
         BH    GIVEMSG                 XFER-IF INPUT REC HI      A38720 79570021
         LR    GR11,GR6                GET OUTPUT TTRN PTR.             79600019
         LA    GR8,MSGNO175            LOAD PTR TO LONG MSG             79700019
         LA    GR7,OUTCHAR        DEVICE CHARACTERISTICS       @ZA27766 79730099
         CLC   W10(W2,GR5),TRKCAP RECORD EXCEED TRACK CAPACITY @ZA27766 79800099
         BNH   VSBLKSZ            NO,GO TEST AGAINST BLKSIZE   @ZA27766 79810099
         OI    VTMFLG1,UNUSEND    YES,SET ERROR FLAG           @ZA27766 79820099
         B     CONSTMSG           GO AND GIVE MSG IEB175I      @ZA27766 79830099
VSBLKSZ  CLC   W10(W2,GR5),OBLKSIZE INPUT VS. OUTPUT BLOCKSIZE @ZA27766 79840099
         BH    CONSTMSG                XFER-IF INPUT HI                 79900019
         BCR   MS8,GR10           RTN. TO CALLER IF EQUAL               80000019
         CLC   W10(W2,GR5),ZROS   IS THIS AN EOF RECORD (DATA LEN = O)  80100019
         BCR   MS8,GR10           YES-RTN TO CALLER                     80200019
         TM    DCBRECFM,VARUNDF        UNDEFINED OR VARIABLE LN. REC.   80300019
         BCR   MS1,GR10           YES-RTN TO CALLER                     80400019
         LA    GR8,MSGNO174            LOAD PTR TO SHORT MSG            80500019
         TM    DCBRECFM,FIXBLKS        FIXED BLOCK STANDARD             80600019
         BZ    CONSTMSG                IF FIXED                         80700019
         BM    FIXBLK                  IF FIXED BLOCK                   80800019
         ST    GR6,WARNTTRN            SAVE THIS TTRN FOR NEXT PASS     80900019
         OI    SENSE,SENSE5            FBS-SET SHORT REC. FLAG          81000019
FIXBLK   EQU   *                                                        81200019
         CLC   W10(W2,GR5),OUTLRECL INPUT LN. VS OUTPUT LRECL           81300019
         BL    CONSTMSG                LESS THAN LRECL                  81400019
         BCR   MS8,GR10           EQ- RTN. TO CALLER                    81500019
         MVC   WKA1(W2),W10(GR5)  GET DATA LN OF RECORD                 81600019
         SR    GR2,GR2                                                  81700019
         LH    GR3,WKA1                                                 81800019
         LH    GR9,OUTLRECL            FETCH OUTPUT LRECL               81900019
         DR    GR2,GR9                 IS INPUT AN                      82000019
         LTR   GR2,GR2                 INTERGRAL OF LRECL               82100019
         BCR   MS8,GR10           YES-RTN. TO CALLER                    82200019
CONSTMSG EQU   *                                                        82300019
         L     GR2,AMSG                LOAD PTR TO MSG CSECT            82400019
         MVI   MSGBUF,MSGCLR                                            82500019
         MVC   MSGBUF+W1(W120),MSGBUF  CLEAR MESSAGE BUFFER             82600019
         MVC   MSGBUF+W1(W7),W0(GR8)  FETCH MSG. NO.                    82700019
         MVC   MSGBUF+W10(W29),WARNINRC STANDARD HEADER                 82800019
         MVC   MSGBUF+W40(W27),W7(GR8)  SHORT OR GREATER MSG            82900019
         MVC   MSGBUF+W68(W8),NAMEMSG  DDNAME MSG HEADER                83000019
         L     GR9,NXTINDS             FETCH POINTER TO CURRENT INDD    83100019
         MVC   MSGBUF+W76(W8),W2(GR9)  DDNAME TO MSG                    83200019
         MVC   MSGBUF+W85(W13),TTRNMSG TTRN HEADER                      83300019
         SR    GR2,GR2                 INITIALIZE                       83400019
         SR    GR3,GR3                 WORK REGISTERS                   83500019
         SR    GR14,GR14               FOR CONVERSION OF TTRN TO        83600019
         SR    GR15,GR15               PRINTABLE HEX.                   83700019
         LA    GR9,W4             NO. OF BYTES TO CONVERT               83800019
CONVHEX  EQU   *                                                        83900019
         IC    GR2,W0(GR11,GR15)  FETCH FIRST CHARACTER                 84000019
         SRDL  GR2,W4             SAVE BOTH INTEGERS                    84100019
         IC    GR2,NUM(GR2)            FETCH HEX EQUIVALENT FOR 1ST NO. 84200019
         STC   GR2,MSGBUF+W98(GR14) STOW IN MSG                         84300019
         SRL   GR3,W28            FIND SECOND HALF                      84400019
         IC    GR3,NUM(GR3)            FETCH HEX EQU.                   84500019
         STC   GR3,MSGBUF+W99(GR14) STOW IN NEXT SLOT IN MSG            84600019
         LA    GR15,W1(GR15)      UPDATE INDEX TO NO. TO CONVERT        84700019
         LA    GR14,W2(GR14)      INDEX TO PLACE IN MSG                 84800019
         BCT   GR9,CONVHEX        LOOP UNTIL ALL CONVERTED              84900019
         TM    VTMFLG1,UNUSEND    IS IT REC'S LONGER THATN TRK @ZA27766 84930099
         BO    MSGTERM1           YES,TERMINATE AFTER MSG      @ZA27766 84960099
         MVI   MSG1,IOERF+LASTMSG      INDICATE SYNAD + LAST MSG        85000019
         L     GR15,VIEBVMS       FETCH MSG. WRITER ADDRESS             85100019
         BALR  GR14,GR15               GO                               85200019
         CLI   RCBUF,RTCD         IS RETURN CODE 4 OR HIGHER     A44144 85250000
         BNL   DONTSET            YES-DON'T SET RETURN CODE      A44144 85260000
         MVI   RCBUF,RTCD         SET RETURN CODE=4              A44144 85270000
DONTSET  EQU   *                                                 A44144 85280000
         BR    GR10                    RTN. TO CALLER                   85300019
FXBLKSTD EQU   *                                                        85400019
         LA    GR8,MSGNO174            POINT TO SHORT MSG               85500019
         NI    SENSE,XFF-SENSE5   RESET SHORT REC. FLAG                 85600019
         L     GR11,WARNTTRN           FETCH SAVED TTRN                 85700019
         CLC   W10(W2,GR5),ZROS   THIS ONE EOF                          85800019
         BCR   MS8,GR10           YES- RTN TO CALLER                    85900019
         B     CONSTMSG           OTHERWISE GET MESSAGE                 86000019
         DROP  GR2                                                      86100019
*                                                                       86200019
*********************************************************************** 86300019
*                                                                     * 86400019
*                  CALL WRITE AND RETURN                              * 86500019
*                                                                     * 86600019
*********************************************************************** 86700019
*                                                                       86800019
WRITEUM  EQU   *                                                        86900019
         NI    WSFLAG,XFF-FORCEWRT-NOWRT-RETRNOVR   RESET FOR           87000019
*                                 RE-ENTRY TO IEBWSU                    87100019
         NI    FLG1,XFF-IN2ND     RESET SECOND SWITCH                   87200019
WRITEIT  EQU   *                                                 A45142 87250021
         L     GR15,VIEBDWR            WRITE ROUTINE ADDRESS            87300019
         BALR  GR14,GR15               WRITE BUFFER                     87400019
         BR    GR10               RETURN TO CALLER OF SUBROUTINE        87500019
*                                                                       87600019
*                                                                       87700019
GOBACK   EQU   *                                                        87800019
         L     GR13,SAVERGS+W4    PICK UP POINTER TO REGISTERS          87900019
         RETURN (14,12)                RETURN TO CALLER                 88000019
*                                                                       88100019
         EJECT                                                          88200019
GIVEMSG  EQU   *                                                 A38720 88300021
         L     GR2,AMSG                LOAD PTR TO MSG CSECT            88400019
         USING IEBWSUMG,GR2            ADDRESSABILITY TO MSG CSECT      88500019
         MVI   MSGBUF,MSGCLR      CLEAR                                 88600019
         MVC   MSGBUF+W1(W120),MSGBUF   BUFFER                          88700019
         MVC   MSGBUF+W1(W7),W0(GR8)  FETCH MSG. NO.             A38720 88750021
         MVC   MSGBUF+W10(W53),MEMBMSG  STANDARD HEADER          A38720 88800021
         MVC   MSGBUF+W64(W30),W7(GR8)  NOTELIST OR GREATER MSG  A38720 88850021
         L     GR3,NXTINDS             POINTER TO INDD NAME             88900019
         MVC   MSGBUF+W51(W8),W2(GR3) PLACE DDNAME IN BUFFER            89000019
         SPACE 1                                                        89100019
         L     GR3,IDEAD               POINTER TO MEMBER NAME           89200019
         MVC   MSGBUF+W17(W8),W0(GR3) MOVE MEMBER NAME TO BUFFER        89300019
         SPACE 1                                                        89400019
MSGTERM1 MVI   MSG1,IOERF+LASTMSG INDICATE SYNAD + LAST MSG    @ZA27766 89500099
         L     GR15,VIEBVMS            LOAD PTR TO MSG WRITER           89600019
         BALR  GR14,GR15               ISSUE ERROR MSG                  89700019
         SPACE 1                                                        89800019
         CLI   RCBUF,RTCDE        IS RETURN CODE 8 OR HIGHER     A44144 89850000
         BNL   DONOTSET           YES-DON'T SET RETURN CODE      A44144 89860000
         MVI   RCBUF,RTCDE        SET RETURN CODE=8              A44144 89900000
DONOTSET EQU   *                                                 A44144 89950000
         MVI   VTMFLG1,UNUSEND         SET SWITCH FOR VTM               90000019
         L     GR15,VIEBVTM            LOAD PTR TO VTM                  90100019
         BALR  GR14,GR15               BRANCH TO VTM  (NO RETURN)       90200019
         DROP  GR2                                                      90300019
         SPACE 2                                                 A34431 90308020
CHKFIRST EQU   *                                                 A34431 90316020
         TM    WSFLAG,FRSTMREC    WAS FIRST RECORD OF A MEMBER   A34431 90324020
*                                  JUST PROCESSED                A34431 90332020
         BCR   W8,GR10            NO, RETURN                     A34431 90340020
         SPACE 1                                                 A34431 90348020
         NI    WSFLAG,XFF-FRSTMREC TURN OFF FIRST RECORD OF A    A34431 90356020
*                                    MEMBER SWITCH               A34431 90364020
         MVC   SVTTR(W3),OUTDS1   ESTABLISH MEMBER TTR           A34431 90372020
         BR    GR10               RETURN TO CALLER               A34431 90380020
         EJECT                                                   A34431 90388020
         EJECT                                                          90400019
TESTREP  TM    UTTRFLAG,X00       TM  INSTRUCTION EXECUTED BY VWS       90900019
CONMASK  DC    X'00'                   MASK FIELD                       91000019
BITSWAP  EQU   *-1                                                      91100019
         DC    X'804020'               TRANSLATE FIELD                  91200019
REPFLAG  EQU   X'80'                   FLAG FOR TTR'S REPLACED          91300019
*                                        REPLACED                       91400019
MOVENOTE MVC   W0(W1,GR3),W0(GR2) MOVE FOR LESS THAN 256 BYTES          91460019
COMPSEGS CLC   W1(W0,GR9),W1(GR5) COMPARE INST FOR TRK OV-FLOW          91520019
AMSG     DC    A(IEBWSUMG)        ADDR OF WSU MESSAGE CSECT             92200019
NUM      DC    CL16'0123456789ABCDEF'  PRINTABLE HEX CONVERSION TABLE   92300019
FIXREC   EQU   X'80'              FIXED AND UNDEFINED BIT OF RECFM      92400019
*                                 IN DCB                                92500019
VARUNDF  EQU   X'40'                   UNDEFINED/VARIABLE-RECFM         92600019
FIXBLKS  EQU   X'18'                   FIXED BLOCKED STANDARD-RECFM     92700019
OVERFLOW EQU   X'20'                   OVERFLOW FLAG DCBRECFM           92800019
TTRNUMB  EQU   11                      START OF TTR COUNT IN DIRECTORY  92900019
TTRDIRC  EQU   12                      START OF USER TTR FIELD IN D.E.  93000019
         DS    0F                                                       93100019
PATCHLN  EQU   (*-START)/20       5 PER CENT PATCH LENGTH               93200019
PATCH    DC    XL(PATCHLN)'00'         PATCH AREA                A41780 93300021
         EJECT                                                          93400019
IEBWSUMG CSECT                                                          93500019
* FOLLOWING DC'S ARE MESSAGE SEGMENTS WHICH ARE PUT TOGETHER WHEN WSU   93530019
* IS TO SET UP ITS OWN WARNING/ERROR MSGS.                              93560019
MSGNO174 DC    C'IEB174IA SHORT LENGTH RECORD      '                    93600019
MSGNO175 DC    C'IEB175IGREATER THAN OUTPUT BLKSIZE'                    93700019
WARNINRC DC    C'** WARNING ** INPUT RECORD IS'                         93800019
NAMEMSG  DC    C'-DDNAME='                                              93900019
TTRNMSG  DC    C'-OUTPUT TTRN='                                         94000019
MSGNO176 DC    C'IEB176IMORE THAN ONE NOTELIST POINTER'          A38720 94100021
MSGNO188 DC    C'IEB188IRECORDS GREATER THAN BLKSIZE  '          A38720 94150021
MEMBMSG  DC    C'MEMBER          IN DATASET REFERENCED'          A38720 94200021
         DC    C' BY          HAS'                               A38720 94210021
         EJECT                                                          94300019
DEVTAB   DSECT                                                          94400019
*                                                                     * 94500019
*   DIRECT ACCESS DEVICE TABLE OVERLAY                                * 94600019
*         OUTCHAR1, UT3CHAR, UT4CHAR BYFFERS IN IEBMCA                * 94700019
*                                                                     * 94800019
DEVCODE  DS    F                       DEVICE CODE FROM UCB             94900019
MAXSIZE  DS    F                       MAXIMUM SIZE UNKEYED BLOCK       95000019
MAXCC    DS    H                       NUMBER OF CYLINDERS              95100019
MAXHH    DS    H                       NUMBER OF TRACKS PER CYLINDER    95200019
TRKCAP   DS    H                       MAXIMUM TRACK LENGTH             95300019
OVERI    DS    XL1                     OVERHEAD FOR NOT LAST RECORD     95400019
OVERL    DS    XL1                     OVERHEAD FOR LAST RECORD         95500019
OVERK    DS    XL1                     OVERHEAD REDUCTION FOR NON-KEYED 95600019
DEVFLAG  DS    XL1                     APPLY TOLERANCE FACTOR NOT LAST  95700019
TOLER    DS    H                       GAP LENGTH CALCULATION TOLERANCE 95800019
HALFOVER EQU   X'08'                   OVERHEAD LAST=OVERHEAD    S20201 95820020
*                                      NOT LAST AND IS A TWO     S20201 95840020
*                                      BYTE FIELD                S20201 95860020
TOLFAC   EQU   X'01'                   TOLERANCE FACTOR TO BE ADDED     95900019
*                                                                     * 96000019
*   END OF DEVTAB OVERLAY                                             * 96100019
*                                                                     * 96200019
         DCBD  DSORG=PO                                                 96300019
RECFM    EQU   DCBRECFM-IHADCB         RECFM FIELD OFFSET IN DCB        96400019
         EJECT                                                          96500019
IEBMCA   DSECT                                                          96600019
         IEBMCA                                                         96700019
OUTUCBDV EQU   OUTCHAR+3  DEVICE CODE INFORMATION                       96730019
A2321    EQU   X'05'      DEVICE CODE FOR A 2321                        96760019
         END                                                            96800019
./  ADD  SSI=72900026,NAME=IGG019C8
RWPC     TITLE 'IGG019C8- READ PCI APPENDAGE'                           00100019
IGG019C8 CSECT                                                          00200019
         SPACE 1                                                        00300019
*A 129671,188080-188084,441959-441963,447200-447984,           @YM04451 00300602
*A 462100-462200                                               @YM04451 00301202
*C 451300                                                      @YM06448 00302002
*A 442983                                                      @YM06435 00306002
*A 171500-171800,189267-189334,231200-231420,462800-462820     @YM06434 00308002
*C 171000                                                      @YM06434 00310002
*A 128937,129049,184500-184600,185020,188020-188040,188908     @YM06433 00312002
*A 188941-188942,189010-189263,189945-190196,315500            @YM06433 00314002
*A 419000-419320,419900,431500,439500,441004-441064,441924     @YM06433 00316002
*A 441940-442099,442908,443063-443100,451300,462500-462600     @YM06433 00318002
*A 462900                                                      @YM06433 00320002
*C 149500-150000,155000-157000,159000-161000,187000-188000     @YM06433 00322002
*C 188904,188917,188960,189356-189388,189652-189656            @YM06433 00324002
*C 189885-189887,192000,314000,363000,365800,375000,418300     @YM06433 00326002
*C 420400,424000,441100,441800-441920,442332-442632            @YM06433 00328002
*C 442665-442887,442945-442954,443100,443400,444000-447000     @YM06433 00330002
*C 451400,452000,459000,460000                                 @YM06433 00332002
*D 134600,135900,149000,154000,180000-180400,180800-183988     @YM06433 00334002
*D 185100-185500,188916,188918-188940,188946,188980-188988     @YM06433 00336002
*D 189996-189998,189660-189877,189888,316000-318000,363500     @YM06433 00338002
*D 395600-395980,396100-396200,425000-428000,432000-437900     @YM06433 00340002
*D 440500-440988,441600,442652-442664,442881,442925            @YM06433 00342002
*D 442957-442963,451600,459500,460060-460120,460300-461000     @YM06433 00344002
*A 128929,128989,395600-395980,396100-396200                    YA00099 00346002
*C457000                                                        OY01184 00348002
*D450000                                                         A34092 00350000
*C469400                                                         A41780 00360000
* 132500,190000,192000                                           X010XX 00360100
*C 128995,150000,182600,363000,437900,463440                    YL026VD 00370102
*A 149000,182400,382800,363500,437800                           YL026VD 00380102
*C212100,213570                                                @ZA11964 00380299
*A213670,213700                                                @ZA13707 00380399
*A213670,213700                                                @ZA13751 00380499
*TITLE- IEBCOPY READ/WRITE PCI APPENDAGE- IGG019C8                    * 00400019
*                                                                     * 00500019
*STATUS- CHANGE LEVEL 001                                             * 00600019
*                                                                     * 00700019
*FUNCTION/OPERATION- THIS MODULE DETERMINES DYNAMICALLY WHILE A RECORD* 00800019
*       IS BEING READ OR WRITTEN, IF THERE ARE MORE RECORDS TO BE     * 00900019
*       READ OR WRITTEN, IF THEY ARE IN OR WILL FIT IN THE BUFFER, AND* 01000019
*       IF SO, WHERE THE NEXT RECORD WILL BE READ INTO OR WRITTEN     * 01100019
*       FROM AND UPDATES CCWS TO DO AS IT DETERMINES. A PROGRAM       * 01200019
*       CONTROLLED INTERRUPT IS GENERATED WHEN A CCW IS FETCHED WHICH * 01300019
*       HAS THE PCI FLAG SET. IOS TRAPS THE PCI, DOES SOME SETTING UP * 01400019
*       OF REGISTERS AND GIVES THE PCI APPENDAGE CONTROL AT IGG019C8. * 01500019
*                                                                     * 01600019
*ENTRY POINTS- ENTERED FROM I/O SUPERVISOR AT IGG019C8.               * 01700019
*                                                                     * 01800019
*INPUT- REGISTER 15 SET BY IOS TO THE ADDRESS OF THE ENTRY POINT OF   * 01900019
*      THE APPENDAGE SO IS USED AS BASE ADDRESS REGISTER FOR IGG019C8.* 02000019
*       REGISTER 2 IS SET BY IOS TO POINT TO THE IOB BEING USED. EACH * 02100019
*      IOB CREATED BY THE IEBDSCPY HAS A POINTER TO THE COMMON AREA   * 02200019
*      IEBMCA AT THE END OF IT (OFFSET IEBMCAPT) SO THAT POINTERS,CCWS* 02300019
*      AND OTHER COMMON DATA CAN BE FOUND AND CHANGED BY THE PCI      * 02400019
*      APPENDAGE. POINTER TO THE DCB IS ALSO IN THE IOB AS A SYSTEMS  * 02500019
*      REQUIREMENT.                                                   * 02600019
*      'RDGSW' IS ON IN 'WSFLAG' IF A READ IS BEING DONE.             * 02700019
*       'STATUS' SWITCH IS SET TO DEFINE WHICH DATA SET IS BEING READ.* 02800019
*       'TAG' SWITCH IS SET OT DEFINE WHICH DATA SET IS BEING WRITTEN.* 02900019
*       'RDPTR1' IS SET TO CCW BEING EXECUTED IF READING.             * 03000019
*       'RDPTR2' IS SET TO NEXT CCW TO BE EXECUTED IF READING.        * 03100019
*       'WRPTR1' IS SET TO NEXT CCW TO BE EXECUTED IF WRITING         * 03200019
*       'WRPTR2' IS SET TO NEXT CCW TO BE EXECUTED IF WRITING.        * 03300019
*       'RDCKPTR1' SET TO CCW BEING EXECUTED IF READBACK CHECKING.    * 03400019
*       'RDCKPTR2' SET TO NEXT CCW TO BE EXECUTED IF READBACK CHECKING* 03500019
*       'LASTREC' FLAG SET IN FLAG AHEAD OF COUNT FIELD OF RECORD AND * 03600019
*      IF ON WITHOUT 'ENDPROC' PCI APPENDAGE MUST LOCATE NEXT BUFFER  * 03700019
*      TO DETERMINE WHERE NEXT RECORD TO BE READ OR WRITTEN. 'LASTREC'* 03800019
*      SET BY PCI APPENDAGE WHEN READING, ONLY TESTED WHEN WRITING.   * 03900019
*       'ENDPROC' FLAG SET BY PCI APPENDAGE WHEN NO MORE BUFFER ROOM  * 04000019
*      AVAILABLE TO READ INTO. SET BY IEBDRD (READ ROUTINE) WHEN AN   * 04100019
*      EOF WAS READ- PCI DOESN'T CHECK IF EOF WAS READ AS MAIN READ   * 04200019
*      SHOULD DO IT. WHEN WRITING OR READ BACK CHECKING, 'ENDPROC'    * 04300019
*      FLAG SET MEANS RECORD HAVING IT ON IS THE LAST ONE TO BE DONE. * 04400019
*       'WRTOVR' FLAG SET IN FLAG AHEAD OF COUNT FIELD WHEN WRITING   * 04500019
*      MEANS MAKE NEXT WRITE CCW OP CODE A 'WRITE SPECIAL CNT/KEY/DATA* 04600019
*                                                                     * 04700019
*OUTPUT- IOB CCHHR ADDRESS SET TO LAST RECORD SUCCESSFULLY READ OR    * 04800019
*       WRITTEN.                                                      * 04900019
*                                                                     * 05000019
*                  PCI ACTION IF READING OR WRITING                   * 05100019
*        RESET PCI FLAG IN CCW CURRENTLY EXECUTING SO PCI NOT GIVEN   * 05200019
*       AGAIN IN CASE OF ERROR RETRY OF READ OR WRITE.                * 05300019
*        RESET PCI FLAG IN NEXT READ OR WRITE CCW TO BE EXECUTED.     * 05400019
*        IF MORE RECORDS TO BE READ OR WRITTEN, SET NOP OP CODE AFTER * 05500019
*       NEXT READ OR WRITE CCW TO BE EXECUTED THEN SET A TIC COMMAND  * 05600019
*       AFTER CURRENT CCW EXECUTING SO THAT WILL EXECUTE NEXT READ OR * 05700019
*       WRITE CCW WITH PCI.                                           * 05800019
*        IF NO MORE RECORDS TO BE READ OR WRITTEN, LEAVE NOP CCW OP   * 05900019
*       CODE AFTER CURRENT CCW EXECUTING SO CHAIN OF COMMANDS WILL BE * 06000019
*       BROKEN AND READ/WRITE STOPPED.                                * 06100019
*        SWAP READ OR WRITE CURRENT AND NEXT POINTERS.                * 06200019
*        UP BY 1 THE PCI TAKEN COUNT FOR READING OR WRITING.          * 06300019
*                                                                     * 06400019
*                  PCI ACTION IF READING                              * 06500019
*        IF 'CTOUT' SWITCH ON IN 'TAG' UP BY 1 'DIRCNT' FOR EACH      * 06600019
*       DIRECTORY BLOCK READ.                                         * 06700019
*        IF 'STAT5' SWITCH ON IN 'STATUS' DIRECTORY BLOCKS ARE UNUSED * 06800019
*       SO NEED ONLY COUNT THEM. READ EACH BLOCK INTO SAME AREA AND   * 06900019
*       COUNT EACH ONE READ BY UPPING 'DIRCNT'.                       * 07000019
*        MOVE MBB FROM IOB TO AHEAD OF COUNT OF RECORD JUST READ AND  * 07100019
*       CLEAR FLAG FIELD.                                             * 07200019
*        SET 'LASTREC' IF CURRENT BUFFER FULL AND POSITION TO NEXT.   * 07300019
*        SET 'LASTREC' AND 'ENDPROC' IF HAVE NO MORE BUFFER SPACE.    * 07400019
*                                                                     * 07500019
*TABLES/WORK AREAS-                                                   * 07600019
*       -WKA1-     TEMPORARY BOUNDARY ALIGNMENT FOR DATA LENGTH       * 07700019
*       -BCB-      POINTERS TO BUFFERS                                * 07800019
*       -WRPCICNT- WRITE PCI'S TAKEN COUNT USED BY READ BACK CHECK    * 08000019
*       -IOB-      POINTS TO CURRENT IOB                              * 08300019
*       -RDPTR1-   CURRENT READ CCW COMMAND (READ COUNT/KEY/DATA-8)   * 08400019
*       -RDPTR2-   NEXT READ CCW COMMAND (READ COUNT OF NEXT CHAIN)   * 08500019
*       -WRPTR1-   CURRENT WRITE COMMAND                              * 08600019
*       -WRPTR2-   NEXT WRITE COMMAND                                 * 08700019
*       -RDCKPTR1- CURRENT READ BACK CHECK CCW                        * 08800019
*       -RDCKPTR2- NEXT READ BACK CHECK CCW                           * 08900019
*       -LASTADDR- CONTAINS MBBCCHHR OF LAST SUCCESFULLY WRITTEN REC. * 09000019
*       -SAVEREGS- SAVES REGISTERS UPON ENTRY INTO APPENDAGE AND      * 09100019
*                  RESTORES THEM WHEN RETURNS TO IOS.                 * 09200019
*                                                                     * 09300019
*ATTRIBUTES- SERIAL REUSABLE,SUPERVISOR MODE, DISABLED                * 09400019
         EJECT                                                          09500019
*                                                                     * 09600019
*               SYMBOLIC REGISTERS FOR READ PCI ROUTINE               * 09700019
*                                                                     * 09800019
*   BASE ADDRESS REGISTER GR15- ENTRY POINT PASSED BY IOS             * 09900019
*                                                                     * 10000019
*    WRITE PCI HANDLER IS HERE TOO       IGG019 ENTRY LABEL****-******* 10100019
*                                                                     * 10200019
         SPACE 1                                                        10250019
GR0      EQU   0                                                        10300019
GR1      EQU   1                       APPENDAGE SHOULD NOT CHANGE      10400019
GR2      EQU   2                       POINTS TO IOB ON ENTRY           10500019
GR3      EQU   3                       POINTS TO DEB ON ENTRY           10600019
GR4      EQU   4                       POINTS TO DCB ON ENTRY           10700019
*    DO NOT NEED POINTER TO DCB AS THERE IS ONE IN THE IOB              10800019
*    SAVE REGISTER 4 THRU 8 AND USE REGISTER 4 TO REFERENCE THE COMMON  10900019
*   AREA IEBMCA.                                                        11000019
GR5      EQU   5                       APPENDAGE USES TO POINT TO CCW   11100019
*               REFERENCED BY RDPTR2 IF READING, WRPTR1 IF WRITING.     11200019
GR6      EQU   6                       APPENDAGE USES TO POINT TO CCW   11300019
*                REFERENCED BY RDPTR1 IF READING                        11400019
GR7      EQU   7                       POINTS TO UCB ON ENTRY- DO NOT   11500019
*        NEED UCB SO USE AS WORK REGISTER AFTER SAVING IT.              11600019
GR8      EQU   8                       SAVED AND THEN USED TO POINT TO  11700019
*             FMBB FIELD AHEAD OF RECORD BEING READ                     11800019
GR9      EQU   9                       USED BY APPENDAGE BUT RESET TO   11900019
*                  ZERO BEFORE RETURNING TO IOS.                        12000019
*                     GR10-GR13 WORK REGISTER NO NEED TO SAVE/RESTORE.  12100019
GR10     EQU   10                                                       12200019
GR11     EQU   11                                                       12300019
GR12     EQU   12                                                       12400019
GR13     EQU   13                                                       12500019
GR14     EQU   14                      CONTAINS RETURN ADDRESS OF IOS   12600019
GR15     EQU   15                      ENTRY POINT OF PCI APPENDAGE SET 12700019
*            BEFORE ENTRY SO USED AS BASE REGISTER.                     12800019
*  DECIMAL CONSTANTS                                                    12809019
         SPACE 1                                                        12818019
C0       EQU   0                                                        12827019
C1       EQU   1                                                        12836019
C4       EQU   4                                                        12845019
C6       EQU   6                                                        12854019
C8       EQU   8                                                        12863019
C9       EQU   9                                                        12872019
C12      EQU   12                                                       12881019
C276     EQU   276                                                      12890019
C2       EQU   2                                                        12890519
C3       EQU   3                                                        12891019
C5       EQU   5                                                        12891519
C7       EQU   7                                                        12892019
C10      EQU   10                                                       12892519
C11      EQU   11                                               YA00099 12892902
C16      EQU   16                                                       12893019
C40      EQU   40                                                X010XX 12893400
D2048    EQU   2048                                            @YM06433 12893702
*  HEX CONSTANTS                                                        12895502
X01      EQU   X'01'                                                    12895802
X03      EQU   X'03'                                                    12896102
X08      EQU   X'08'                                                    12896402
X0D      EQU   X'0D'                                                    12896702
X0E      EQU   X'0E'                                                    12897002
X1D      EQU   X'1D'                                                    12897302
X60      EQU   X'60'                                                    12897602
X68      EQU   X'68'                                                    12897902
X70      EQU   X'70'                                                    12898202
X78      EQU   X'78'                                                    12898519
X80      EQU   X'80'                                            YA00099 12898902
X92      EQU   X'92'                                                    12899102
XF7      EQU   X'F7'                                           @YM06433 12904902
         SPACE 1                                                 S20201 12910802
* MISC CONSTANTS                                                 S20201 12916702
         SPACE 1                                                 S20201 12922602
RPS      EQU   X'10'                                             S20201 12928502
CSW      EQU   8                  OFFSET OF CSW IN IOB          YL026VD 12942802
*                                   CHANNEL STATUS WORD          S20201 12957102
VIOBIT   EQU   X'80'              IN UCB IF VIO DATA SET       @YM04451 12964102
         SPACE 1                                                 S20201 12971402
         SPACE 1                                                        12985702
         USING START,GR15                                               13000019
         USING IEBMCA,GR10                                       S20201 13050020
START    EQU   *                                                 S20201 13100020
         L     GR10,IEBMCAPT(GR0,GR2)  PTR TO COMMON AREA IN     S20201 13150020
*                                        IOB                     S20201 13200020
         STM   GR0,GR8,PCISAVE    SAVE REGS                      X010XX 13250000
         DROP  GR10                                              S20201 13300020
         LR    GR4,GR10                SET PTR TO COMMON         S20201 13350020
*                                        AREA IN REG 4           S20201 13400020
         USING IEBMCA,GR4                                        S20201 13450020
         LA    GR3,DEVOFF(GR0,GR2)     LOAD PTR TO DEVTYPE INFO  S20201 13500020
         LA    GR7,C8                  LOAD 8 INTO WORK REG      S20201 13520020
         STH   GR7,WKA1                STORE AS INCREMENT FOR    S20201 13540020
*                                       VALID PCI INTERRUPT      S20201 13560020
*                                       TESTING - READ OR RDBACK S20201 13580020
         TM    WSFLAG,RDGSW            READING                          13600019
         BZ    IGG019                  NO, GO TO WRITE PCI RTN          13700019
         SPACE 1                                                        13800019
*****      PCI HANDLER FOR READING   IGG019C8                 ********* 13900019
         SPACE 1                                                        14000019
*           GR5 HAS POINTER TO RDPTR2 AND GR6 TO RDPTR1                 14100019
*       REGISTER 2 (GR2) HAS IOB ADDRESS PASSED FROM IOS              * 14200019
         L     GR5,RDPTR2              NEXT CCW LIST TO EXECUTE         14300019
         L     GR6,RDPTR1              POINTER TO CCW EXECUTED          14400019
         SPACE 1                                                 S20201 14410020
         LA    GR7,C16(GR0,GR6)        FIND ACCEPTABLE LOWER     S20201 14420020
*                                        LIMIT OF CSW AT PCI     S20201 14430020
*                                        INTERRUPT               S20201 14440020
         BAL   GR9,PCIVALCK            CHECK FOR VALID CSW       S20201 14450020
         SPACE 1                                                 S20201 14460020
         SPACE 1                                                        14500019
*   PREPARE FOR RESTART IN CASE CCW EXECUTING FAILS- WILL BE ABLE TO  * 14600019
*  RETRY THRU IOS IF SET POINTER RIGHT.                               * 14700019
         SPACE 1                                                        14800019
         LRA   GR11,C8(GR6)            REAL ADDR OF READ K/D   @YM06433 14950002
         STCM  GR11,C7,CCW3+C1         TIC TO CCW EXECUTING    @YM06433 15000002
*                                                                       15100019
*    TIC SET UP FOR ERROR RESTART IN CASE THIS READ KEY/DATA NOT DONE   15200019
*                                                                       15300019
         OI    C12(GR5),X68            RESTORE PCI             @YM06433 15500002
         NI    C12(GR6),XF7          RESET PCI FLAG FOR RETRY  @YM06433 15600002
         L     GR8,CURRCCW1            GET READ COUNT ADDRESS  @YM06433 15700002
         LA    GR8,C0(GR0,GR8)         CLEAR OP CODE                    15800019
         LA    GR7,C4                                          @YM06433 15900002
         SR    GR8,GR7                 MOVE BACK 4 BYTES TO    @YM06433 16000002
         MVC   IOBCCHHR(C5,GR2),C4(GR8) FLAG FIELD             @YM06433 16100002
         MVC   C1(C3,GR8),IOBMCCHH(GR2) MOVE MBB FROM IOB TO RECORD     16200019
         TM    SENSE,SENSE4            COMPRESS SCAN FOR 'HOLES'        16300019
         BO    SCANCOMP                 YES                             16400019
         TM    STATUS,STAT4            READING INPUT MEMBER             16500019
         BO    INMEMBR                  YES                             16600019
         TM    STATUS,STAT1+STAT3      INPUT OR OUTPUT SPILL DIRECTORY  16700019
         BC    C5,READDIR              YES, READ DIRECTORY              16800019
         TM    STATUS,STAT5            NEW OUTPUT DIRECTORY             16900019
         BZ    READDIR                 NO, MUST ACTUALLY READ DIRECTORY 17000019
*     MAKE CCWS SAME, READ TILL EOF                            @YM06434 17100002
         L     GR7,CURRCCW1       VIRT ADDR OF READ COUNT      @YM06434 17150002
         STCM  GR7,C7,C1(GR5)     STORE IN RD CT OF NEXT CCW   @YM06434 17160002
         LA    GR7,C8(GR7)        VIRT ADDR OF READ K/D        @YM06434 17170002
         STCM  GR7,C7,C9(GR5)     STORE IN DR K/D OF NEXT CCW  @YM06434 17180002
         SPACE 1                                                        17200019
* WHEN DIRECTORY BLOCKS TO BE COUNTED MAINFLOW CLEARS DIRBCNT BUFFER. * 17300019
         CLC   C8(C1,GR8),NDBTR   IS NDBTR >OR= TO 'R' OF THE    A36049 17320000
*                                 BLOCK JUST READ                A36049 17340000
         BNH   COUNTDR            YES                            A36049 17360000
         MVC   NDBTR(C1),C8(GR8)  NO, UPDATE NDBTR               A36049 17380000
         SPACE 1                                                        17400019
COUNTDR  EQU   *                                                        17500019
         LH    GR7,DIRBCNT                                              17600019
         LA    GR7,C1(GR0,GR7)                                          17700019
         STH   GR7,DIRBCNT             UP DIRECTORY BLOCK COUNT BY 1    17800019
RESETNOP EQU   *                                                        17900019
         MVC   C16(C4,GR5),RSECTOR     REPLACE NOP WITH RS CCW   S20201 18060002
* NOP OR RS WILL STOP CCW EXECUTION IF PCI MISSED                S20201 18280020
SWAP     EQU   *                                                        18350019
         SPACE 1                                                        18400019
         CLI   C0(GR8),LASTREC+ENDPROC FLAG AS LASTREC +BUFFER @YM06433 18450002
*          LOAD AND STORE MULTIPLE DONT CHANGE CONDITION CODE  @YM06433 18460002
         STM   GR5,GR6,RDPTR1          SWAP RDPTR1 AND RDPTR2           18500019
         L     GR7,C0(GR5)        LOAD VIRT DATA ADDR          @YM06433 18502002
         L     GR8,CURRCCW1                                    @YM04848 18600002
         STM   GR7,GR8,CURRCCW1   SWAP READ CCW POINTERS       @YM04848 18650002
         L     GR2,IALPTR2                                     @YM06433 18700002
         L     GR3,IALPTR1                                     @YM06433 18750002
         STM   GR2,GR3,IALPTR1    SWAP IAL LIST POINTERS       @YM06433 18800002
         BE    GENRETRN    IF LAST RECORD IN ANY BUFFER, DONT  @YM06433 18802002
*                  TRANSLATE OR SET UP TIC, JUST RETURN TO IOS @YM06433 18804002
         SPACE 1                                                        18805002
         TM    AOS,PCI      IF PCI BIT OFF, DONT TRANSLATE OR  @YM04451 18806002
         BZ    GENRETRN     SET UP TIC, JUST RETURN TO IOS     @YM04451 18807002
         SPACE 1                                                        18808002
*                                                                       18810002
* AT THIS POINT, RDPTR1 (GR5) POINTS AT THE NEXT CCW STRING TO @YM04848 18850002
* BE TRANSLATED, CURRCCW1 (GR7) CONTAINS THE VIRTUAL DATA      @YM04848 18860002
* ADDRESS, AND EXTEND1 (GR2) CONTAINS THE ADDRESS OF THE       @YM04848 18870002
* ASSOCIATED INDIRECT ADDRESS LIST (IAL)                       @YM04848 18880002
*                                                                       18890002
         LA    GR6,C0(GR7)        LOAD ADDR OF READ COUNT      @YM06433 18890402
         NI    C4(GR5),X'FF'-X'04' SET OFF IAL LIST PRESENT    @YM06433 18890802
         LRA   GR9,C0(GR6)        TRANSLATE ADDRESS TO REAL    @YM06433 18891702
         LR    GR8,GR6          PUT VIRT START ADR IN WORK REG @YM06433 18894102
         AH    GR8,C6(GR5)        BUMP BY LENGTH OF READ       @YM06433 18894202
         BCTR  GR8,C0             DECREASE FOR ACTUAL DATA END @YM06433 18896002
         SRL   GR6,11             SHIFT FOR 2K BOUNDARY        @YM06433 18899202
         SRL   GR8,11             SHIFT FOR 2K BOUNDARY        @YM06433 18901002
         SR    GR8,GR6            ON SAME 2K PAGE              @YM06433 18902802
         BZ    SAMEPAGE           YES, ALL ON ONE PAGE         @YM06433 18904602
         ST    GR9,C0(GR2)        PUT 1ST ENTRY IN IAL         @YM06433 18906402
         SLL   GR6,11             GET 1ST BYTE 1ST 2K PAGE     @YM06433 18908202
         LA    GR6,2048(GR6)      BUMP BY 2K                   @YM06433 18910002
         LRA   GR9,C0(GR6)        TRANSLATE TO REAL            @YM06433 18911802
         ST    GR9,C4(GR2)        PUT 2ND ENTRY IN IAL         @YM06433 18913602
         LRA   GR9,C0(GR2)        TRANSLATE ADDR TO REAL       @YM06433 18917202
         OI    C4(GR5),X'04'      SET IAL LIST PRESENT         @YM06433 18919002
SAMEPAGE DS    0H                                              @YM06433 18920802
         STCM  GR9,C7,C1(GR5)     INSERT REAL ADDR INTO RD CNT @YM06433 18922602
         LA    GR5,C8(GR5)        BUMP TO READ KEY/DATA CCW    @YM06433 18926202
         NI    C4(GR5),X'FF'-X'04' SET IAL LIST NOT PRESENT    @YM06433 18926302
         LA    GR7,C8(GR7)        BUMP DATA ADDRESS BY 8       @YM06434 18926702
         LRA   GR9,C0(GR7)        TRANSLATE ADDRESS TO REAL    @YM06434 18928002
         LR    GR6,GR7            VIRT DATA ADDRESS            @YM06434 18933402
         AH    GR7,C6(GR5)        ADD LENGTH OF READ           @YM04848 18935202
         BCTR  GR7,C0             FIND ACTUAL END ADDR         @YM06433 18935602
         SRL   GR6,11             STARTING PAGE NUMBER         @YM06433 18937002
         SRL   GR7,11             ENDING PAGE NUMBER           @YM06433 18938802
         SR    GR7,GR6            SEE IF ALL ON ONE PAGE       @YM04848 18940602
         BZ    EXTIALRD           MORE THAN 1 PAGE, NEED IAL   @YM04848 18942402
         ST    GR9,C8(GR2)        PUT FIRST ENTRY INTO IAL     @YM04848 18953202
         LA    GR8,C8(GR2)        GET POINTER TO IAL LIST      @YM04848 18963202
         SLL   GR6,11             ADDR OF 1ST BYTE ON 1ST PAGE @YM06433 18965202
EXTLOOPR LA    GR6,D2048(GR6)     BUMP TO LAST BYTE THIS PAGE  @YM06433 18965602
         LA    GR8,C4(GR8)        BUMP TO NEXT IAL ENTRY       @YM04848 18966402
         LRA   GR9,C0(GR6)        REAL ADDR NEXT PAGE          @YM04848 18966502
         ST    GR9,C0(GR8)        STORE REAL ADDR IN NEXT IAL  @YM04848 18966602
         BCT   GR7,EXTLOOPR       LOOP TO TRANSLATE NEXT ENTRY @YM04848 18977702
         LRA   GR9,C8(GR2)        TRANSLATE ADDRESS OF IAL LIST@YM04848 18988102
         OI    C4(GR5),X'04'      SET IAL PRESENT TO READ CCW  @YM06433 18988502
EXTIALRD DS    0H                                              @YM06433 18988602
         STCM  GR9,C7,C1(GR5)     INSERT REAL ADDR OF IAL LIST @YM06433 18988702
         L     GR5,RDPTR1         LOAD RDPTR1                  @YM06433 18994502
         L     GR6,RDPTR2         LOAD ADDR OF READ COUNT      @YM06433 18997202
         LA    GR6,C8(GR6)        BUMP TO READ KEY/DATA        @YM06433 18999202
GENRET1  LRA   GR5,C0(GR5)        REAL ADDR OF NEXT READ COUNT @YM06433 19000702
         ICM   GR5,C8,CCW3        INSERT TIC OP CODE           @YM06433 19003402
         BR    GR0                     MODEL 91 CODE           @YM06433 19006102
*                                      (NOP USED TO INSURE ALL @YM06433 19008802
*                                       PREVIOUS INSTRUCTIONS  @YM06433 19011502
*                                       HAVE ALREADY BEEN      @YM06433 19014202
*                                       EXECUTED)              @YM06433 19016902
         ST    GR5,C8(GR0,GR6)         STORE TIC TO NEXT CCW   @YM06433 19019602
GENRETRN EQU   *                                                        19023202
         LM    GR0,GR8,PCISAVE    RESTORE REGS                   X010XX 19050000
         SR    GR9,GR9                 CLEAR 9 AS IT WAS USED           19100019
         BR    GR14               RETURN TO IOS                @YM06433 19200002
         SPACE 1                                                        19300019
SCANCOMP EQU   *                                                        19400019
         TM    STATUS,STAT2       READING OUTPUT DIR             A36049 19410000
         BZ    SCNCMP             NO                             A36049 19420000
         TM    TAG,CTOUT          COUNT DIRECTORY BLOCKS         A36049 19430000
         BZ    SCNCMP             NO                             A36049 19440000
         CLC   C8(C1,GR8),NDBTR   IS NDBTR >OR= TO 'R' OF THE    A36049 19450000
*                                 BLOCK JUST READ                A36049 19460000
         BNH   SCNCMP             YES                            A36049 19470000
         MVC   NDBTR(C1),C8(GR8)  NO, UPDATE NDBTR               A36049 19480000
SCNCMP   EQU   *                                                 A36049 19490000
         MVC   WKA1(C2),C10(GR8)       MOVE DATA LENGTH TO WORD BOUNDRY 19500019
         SR    GR9,GR9                                                  19600019
         IC    GR9,C9(GR0,GR8)         PICK UP KEY LENGTH               19700019
         LH    GR7,WKA1                DATA LENGTH IF ANY               19800019
         AR    GR7,GR9                 ADD KEY + DATA LENGTH            19900019
         SR    GR13,GR13                                                20000019
         LA    GR10,OUTCHAR            ADDRESS OF DEVTAB CONSTANTS      20100019
         USING DEVTAB,GR10             DEVICE CONSTANTS DSECT           20200019
         CLI   C8(GR8),X01             FIRST RECORD ON A TRACK R=1      20300019
         BNE   SAMETRKS                NO- CONTINUE ON TRACK            20400019
         MVC   OUTDS1+C4(C2),TRKCAP    REINITIALIZE TRACK SIZE          20600019
         SPACE 1                                                        20800019
SAMETRKS EQU   *                                                        20900019
         IC    GR13,OVERI              OVERHEAD NOT LAST RECORD         21000019
         TM    DEVFLAG,HALFOVER        TWO BYTE OVERHEAD FOR     S20201 21070020
*                                        THIS DEVICE             S20201 21140020
         BNO   NOTTWO1       NO,USE ONE BYTE                   @ZA11964 21210099
         SPACE 1                                                 S20201 21280020
         LH    GR13,OVERI              LOAD TWO BYTE OVERHEAD    S20201 21350020
NOTTWO1  OC    WKA1(C2),WKA1 IS DATA LENGTH ZERO (EOF)         @ZA11964 21357099
         BNZ   NOTTWO                  NO, GO ON                 S20201 21364020
         CLI   DEVCODE+3,X'08'    IS IT A 2314?                @ZA13751 21367099
         BE    NOTTWO             YES,DON'T ADD ONE BYTE       @ZA13751 21370099
         SPACE 1                                                 S20201 21371020
*  FOR I/O DEVICES WITH A TWO BYTE OVERHEAD VALUE, THE ONE BYTE  S20201 21378020
* OF DATA WRITTEN BY THE HARDWARE FOR AN EOF RECORD MUST BE      S20201 21385020
* INCLUDED IN TRACK BALANCE COMPUTATIONS                         S20201 21392020
         SPACE 1                                                 S20201 21399020
         LA    GR7,C1(GR0,GR7)         YES, ADD 1 TO KEYLEN PLUS S20201 21406020
*                                       DATA LENGTH FOR EOF      S20201 21413020
NOTTWO   EQU   *                                                 S20201 21420020
         SR    GR11,GR11               WILL HAVE KEY OVERHEAD IF ANY    21500019
         LTR   GR9,GR9                 ANY KEY                          21600019
         BNZ   AKEY                    YES                              21700019
         IC    GR11,OVERK              OVERHEAD IF RECORD WAS KEYED     21800019
AKEY     EQU   *                                                        21900019
         LH    GR12,OUTDS1+C4          GET BYTES UNUSED ON THIS TRK     22000019
         TM    DEVFLAG,TOLFAC          TOLERANCE FACTOR TO BE ADDED     22100019
         BZ    NOTOLER                 NO                               22200019
         MH    GR7,TOLER               MULTIPLY KL + DL BY TOLERANCE    22300019
         SRL   GR7,C9                  (KL + DL)*TOLERANCE/512          22400019
         SPACE 1                                                        22500019
NOTOLER  EQU   *                                                        22600019
         AR    GR7,GR13                ADD OVERHEAD                     22700019
         SR    GR7,GR11                SUBTRACT KEY OVERHEAD IF NO KEY  22800019
         SR    GR12,GR7                COMPUTE THE REMAINING BYTE       23000019
         STH   GR12,OUTDS1+C4          UPDATE TRK BAL FOR WSU           23070019
         L     GR7,CURRCCW1       VIRT ADDR OF READ COUNT      @YM06434 23120002
         STCM  GR7,C7,C1(GR5)     STORE IN RD CT OF NEXT CCW   @YM06434 23130002
         LA    GR7,C8(GR7)        VIRT ADDR OF READ K/D        @YM06434 23140002
         STCM  GR7,C7,C9(GR5)     STORE IN DR K/D OF NEXT CCW  @YM06434 23142002
         B     TESTCNTX                GO TEST FOR COUNT                23150019
         SPACE 1                                                        28200019
READDIR  EQU   *                                                        28300019
         TM    STATUS,STAT2       READING OUTPUT DIR             A36049 28307000
         BZ    RDDIR              NO                             A36049 28314000
         TM    TAG,CTOUT          COUNT DIRECTORY BLOCKS         A36049 28321000
         BZ    RDDIR              NO                             A36049 28328000
         CLC   C8(C1,GR8),NDBTR   IS NDBTR >OR= TO 'R' OF THE    A36049 28335000
*                                 BLOCK JUST READ                A36049 28342000
         BNH   RDDIR              YES                            A36049 28349000
         MVC   NDBTR(C1),C8(GR8)  NO, UPDATE NDBTR               A36049 28356000
RDDIR    EQU   *                                                 A36049 28363000
         LA    GR7,C276(GR0,GR8)       UP POINTERS FOR 1 MORE RECORD    28370019
         LA    GR10,C276(GR0,GR7)      NEXT RECORD CURRENT + 276        28440019
         TM    FLG7,DM                 MERGING DIRECTORY                28510019
         BZ    BUF2ND                  NO-ASSUME BUFFER NOT SPLIT       28520019
BUF1ST   EQU   *                                                        28530019
         C     GR10,ENDFST1            EXCEED END OF FIRST BUFFER       28540019
         BNH   READSMOR                NO-GET SOMEMORE                  28550019
         B     LASTRCB                 YES -MARK BUFFER FLAG            28560019
         SPACE 1                                                        28600019
BUF2ND   EQU   *                                                        28700019
         C     GR10,END2ND2            EXCEED END OF SECOND BUFFER      28800019
         BNH   READSMOR                NO                               28900019
         SPACE 1                                                        29000019
LASTRCB  EQU   *                                                        29100019
         MVI   C0(GR8),LASTREC+ENDPROC FLAG AS LASTREC + LAST BUFFER    29200019
         SPACE 1                                                        29400019
         TM    STATUS,STAT2            READING OUTPUT DIRECTORY         29700019
         BZ    SWAP                    NO, CHANGE POINTERS              29800019
         TM    TAG,CTOUT               COUNT DIRECTORY BLOCKS           29900019
         BZ    SWAP                    NO, CHANGE POINTERS              30000019
         LH    GR7,DIRBCNT                                              30100019
         LA    GR7,C1(GR0,GR7)         UPDATE COUNT                     30200019
         STH   GR7,DIRBCNT                                              30300019
         B     SWAP                    CHANGE POINTERS                  30500019
         SPACE 1                                                        30700019
READSMOR EQU   *                                                        30800019
         MVI   C0(GR8),C0              CLEAR FLAG FIELD                 30900019
         LR    GR8,GR7                 START NEXT RECORD                31000019
NEWBUFR  EQU   *                                                        31100019
*        KEEP  GR8 POINTING TO START OF RECORD IN BUFFER                31200019
         LA    GR11,C4(GR0,GR8)        PASS FLAG + MBB TO COUNT CCHHR   31300019
         STCM  GR11,C7,C1(GR5)    SET RDPTR2 ADDR FOR READ CNT @YM06433 31400002
         LA    GR11,C8(GR0,GR11)                                        31500019
         STCM  GR11,C7,C9(GR5)    SET RDPTR2 ADDR FOR READ K/D @YM06433 31550002
         TM    STATUS,STAT2            READING OUTPUT DIRECTORY         32000019
         BZ    RESETNOP                NO                               32100019
TESTCNTX EQU   *                                                        32200019
         TM    TAG,CTOUT               COUNT DIRECTORY BLOCKS           32300019
         BO    COUNTDR                 YES, GO BUMP COUNTER             32400019
         B     RESETNOP                RESET, SWAP, RETURN              32500019
         SPACE 1                                                        32600019
INMEMBR  EQU   *                                                        32700019
         SR    GR7,GR7                                                  32800019
         IC    GR7,C9(GR0,GR8)         KEY LENGTH OF MEMBER             32870019
         LR    GR10,GR7                SAVE KEY LENGTH                  32950019
         MVC   WKA1(C2),C10(GR8)       SAVE DATA LENGTH                 33020019
         AH    GR7,WKA1                ADD KEY + DATA LENGTH            33100019
         LA    GR7,C12(GR0,GR7)        COUNT + FLAG                     33200019
         AR    GR7,GR8                 LOCATION FOR NEXT RECORD         33300019
         AH    GR10,IBLKSIZE           BLOCKING FACTOR + KEY LN         33400019
         LA    GR10,C12(GR0,GR10)      COUNT + FLAG + MBB               33500019
         AR    GR10,GR7                END OF NEXT RECORD               33600019
         TM    FLG1,STOPEND1           ONLY CAN USE FIRST BUFFER        33700019
         BO    BUF1ST                  YES                              33800019
         TM    FLG1,P2FLG1             TWO BUFFERS                      33900019
         BZ    BUF2ND                  NO, USE END OF FIRST PAIR        34000019
         TM    FLG1,IN2ND              IN SECOND BUFFER                 34100019
         BO    BUF2ND                  YES                              34200019
         C     GR10,ENDFST1            EXCEED END OF FIRST BUFFER       34300019
         BNH   READSMOR                BUFFER NOT EXCEEDED NEXT READ    34400019
         MVI   C0(GR8),LASTREC         FLAG AS LAST RECORD THIS BUFFER  34500019
         L     GR8,BEGFST2             START OF SECOND BUFFER           34600019
         OI    FLG1,IN2ND              IN SECOND BUFFER FLAG SET        34700019
         B     NEWBUFR                 READ INTO NEXT BUFFER            34800019
         TITLE 'IGG019C8- WRITE PORTION OF PCI APPENDAGE'               34900019
*                                                                     * 35500019
*****      PCI HANDLER FOR WRITING   IGG019                   ********* 35600019
*                                                                     * 35800019
IGG019   EQU   *                                                        35900019
         TM    TAG,TAG6                VALIDITY CHECKING                36100019
         BO    VALCHK                  YES                              36200019
         MVI   WKA1+C1,C16             UPDATE INCREMENT FOR      S20201 36202020
*                                       VALID PCI INTERRUPT      S20201 36204020
*                                       TESTING - WRITE          S20201 36206020
         SPACE 1                                                 S20201 36210020
         L     GR5,WRPTR1              LOAD POINTER TO 'CURRENT' S20201 36220020
*                                        CCW CHAIN               S20201 36230020
         LA    GR7,C8(GR0,GR5)         FIND ACCEPTABLE LOWER     S20201 36240020
*                                        LIMIT OF CSW AT PCI     S20201 36250020
*                                        INTERRUPT               S20201 36260020
         BAL   GR9,PCIVALCK            CHECK FOR VALID CSW       S20201 36270020
         SPACE 1                                                 S20201 36280020
         LRA   GR11,C0(GR5)            TRANSLATE TO REAL        YL026VD 36290002
         STCM  GR11,C7,CCW3+C1         SET UP RESTART ADDRESS  @YM06433 36300002
         NI    C4(GR5),XF7             RESET PCI FOR RESTART   @YM06433 36580002
         L     GR6,CURRCCW1         GET ADDRESS OF LAST WRITE  @YM04848 36670002
         LA    GR6,C0(GR0,GR6)         CLEAR OP CODE                    36740019
         TM    TAG,TAG1                DIRECTORY                        36810019
         BZ    NOTDIRTY                NO-XFER                          36820019
         LA    GR7,C12                 GO TO                            36830019
         SR    GR6,GR7                 START OF BUFFER                  36840019
         MVC   LASTGB(C8),LASTGBSV     UPDATE LASTGB FIELD FOR USE      36842019
*                                        BY IEBIOE IF AN I/O ERROR      36844019
*                                        OCCURS                         36846019
         MVC   LASTGBSV(C8),LASTADDR   SAVE VALUE OF LASTADDR AT ENTRY  36848019
*                                        TO IGG019C8                    36850019
         MVC   IOBMCCHH(C8,GR2),LASTADDR MOVE THIS RECORD IN RESTART    36853019
         B     TESTBUF            SEE IF THIS IS THE LAST RECORD        36860019
NOTDIRTY EQU   *                                                        36870019
         LA    GR7,C4                                                   36930019
         SR    GR6,GR7                 BACK UP TO FLAG FIELD            37000019
         MVC   IOBMCCHH(C8,GR2),LASTADDR MOVE LAST REC WRITTEN ADDRESS  37080019
         MVC   LASTADDR(C8),C1(GR6)    THIS RECORD BEING WRITTEN        37160019
TESTBUF  EQU   *                                                        37250019
         TM    C0(GR6),ENDPROC+LASTREC VERY LAST RECORD                 37320019
         BZ    THISBUF                 NOT LAST RECORD IN ANY BUFFER    37400019
         BO    SWAPPTRS                YES                     @YM06433 37500002
         L     GR6,BEGFST2             GET START OF SECOND BUFFER       37600019
         B     RECADDRS                SET UP WRITE                     37700019
         SPACE 1                                                        37800019
THISBUF  EQU   *                                                        37900019
         MVC   WKA1(C2),C10(GR6)       SAVE DATA LENGTH                 38000019
         SR    GR9,GR9                                                  38100019
         IC    GR9,C9(GR0,GR6)         GET KEY LENGTH                   38200019
         AH    GR9,WKA1                ADD KEY + DATA LENGTH            38300019
         LA    GR9,C12(GR0,GR9)        ADD COUNT + FMBB LENGTH          38400019
         AR    GR6,GR9                 START OF NEXT RECORD             38500019
         SPACE 1                                                        38600019
RECADDRS EQU   *                                                        38700019
         MVC   WKA1(C2),C10(GR6)       SAVE DATA LENGTH                 38800019
         SR    GR9,GR9                                                  38900019
         IC    GR9,C9(GR0,GR6)         KEY LENGTH                       39000019
         AH    GR9,WKA1                ADD KEY + DATA LENGTH            39100019
         L     GR5,WRPTR2              NEXT CCW                         39200019
         TM    TAG,TAG1                WRITING DIRECTORY                39300019
         BO    WRTNOCT                 YES, WRITE ONLY KEY/DATA         39370019
         LA    GR9,C8(GR0,GR9)         COUNT LENGTH                     39440019
         LA    GR8,C4(GR0,GR6)         START OF COUNT NEXT RECORD       39510019
         B     STRCNT                  STORE ADDRESS AND COUNT          39600019
WRTNOCT  EQU   *                                                        39650019
         LA    GR8,C12(GR0,GR6)        START OF DIRECTORY KEY NEXT REC  39700019
STRCNT   EQU   *                                                        39750019
         STH   GR9,C6(GR0,GR5)         STORE COUNT FOR NEXT WRITE       39830019
         ST    GR8,C0(GR0,GR5)         WHERE TO WRITE RECORD FROM       39910019
         TM    C0(GR6),WRTOVR          OVERFLOW SEGMENT                 40000019
         BZ    REGWRT                  NO                               40090019
         MVI   C0(GR5),X01             WRITE SPECIAL OP CODE            40180019
         B     SETFLGS            GO SET OTHER INDICATORS               40300019
         SPACE 1                                                        40400019
REGWRT   EQU   *                                                        40500019
         TM    TAG,TAG1                WRITING DIRECTORY                40600019
         BZ    WRCKDOP                 NO, WRITE COUNT KEY DATA         40680019
         MVI   C0(GR5),X0D             WRITE KEY DATA OP CODE           40760019
         MVC   LASTADDR(C8),C1(GR6)    THIS RECORD BEING WRITTEN        40840019
         B     SETFLGS                 RESTORE NEXT CCWS                40920019
         SPACE 1                                                        41000019
WRCKDOP  EQU   *                                                        41100019
         MVI   C0(GR5),X1D             WRITE COUNT KEY DATA OP CODE     41400019
SETFLGS  EQU   *                                                        41700019
         MVI   C4(GR5),X68             RESTORE PCI                      41800019
         LRA   GR8,C16(GR0,GR5)       LOAD POINTER TO STOP CCW @YM06433 41830002
         ST    GR8,C8(GR0,GR5)         STORE IN TIC CCW SLOT     S20201 41860020
         MVI   C8(GR5),X08             RESTORE TIC OP CODE              41890020
* SET UP TIC FROM SIDEQ,MT TO NEXT WRITE WHETHER NEEDED OR NOT @YM06433 41900002
         L     GR8,WRPTR2         GET ADDR OF NEXT WRITE CCW   @YM06433 41910002
         LA    GR8,C0(GR8)        CLEAR HIGH ORDER BYTE        @YM06433 41920002
         LRA   GR8,C0(GR8)        TRANSLATE TO REAL            @YM06433 41930002
         STCM  GR8,C7,WSCH2+C1    STORE IN SIDEQ,MT TIC FORWD  @YM06433 41932002
*        NOP OR RS WILL STOP EXECUTION IF PCI MISSED             S20201 41940020
         LA    GR8,WSCH                PTR TO SID M/T CCW        S20201 41980020
         ST    GR8,WRTICPTR          SAVE TO SET UP PROPER TIC @YM06433 41990002
         TM    TAG,TAG1                WRITING DIRECTORY         S20201 42010020
         BO    SWAPPTRS                YES, LEAVE R ALONE      @YM06433 42040002
         CLI   C8(GR6),X01             NEXT RECORD R1, IF SO     S20201 42070020
*                                        ON NEXT TRACK           S20201 42100020
         BNE   SAMETRK                 NO                        S20201 42130020
         MVC   LASTADDR(C8),C1(GR6)    THIS RECORD TO BE WRITTEN        42210019
         MVI   LASTADDR+C7,C0          MAKE R=0 FOR HEAD SWITCH         42250019
         B     SWAPPTRS                SET UP REST OF CCWS     @YM06433 42400002
         SPACE 1                                                        42900019
SAMETRK  EQU   *                                                        43000019
         L     GR8,WRPTR2              CCW TO START WITH                43100019
         ST    GR8,WRTICPTR          SAVE TO SET UP PROPER TIC @YM06433 43150002
         SPACE 1                                                        43800019
SWAPPTRS EQU   *                                                        43900019
         L     GR9,WRPTR1              CCW JUST USED           @YM06433 43950002
         L     GR8,WRPTR2              CCW TO START WITH                44000019
         STM   GR8,GR9,WRPTR1          SWAP POINTERS                    44100019
         LR    GR9,GR6            SAVE ADDRESS OF FLAG FIELD   @YM06433 44100402
         TM    TAG,TAG1           WRITING DIRECTORY            @YM06433 44102402
         BZ    DOINGMEM           NO, WRITING MEMBER           @YM06433 44104402
         LA    GR6,C8(GR6)        BUMP FOR SKIPPED COUNT FIELD @YM06433 44106402
DOINGMEM LA    GR6,C4(GR6)             BUMP TO COUNT FIELD     @YM06433 44110002
         L     GR7,CURRCCW1                                    @YM04848 44150002
         STM   GR6,GR7,CURRCCW1                                @YM04848 44170002
         L     GR2,IALPTR2                                     @YM06433 44180002
         L     GR3,IALPTR1                                     @YM06433 44190002
         STM   GR2,GR3,IALPTR1         SWAP IAL LIST POINTERS  @YM06433 44192002
         TM    C0(GR9),ENDPROC+LASTREC VERY LAST RECORD                 44193202
         BO    GENRETRN   DONT TRANSLATE OR SET TIC, RETURN    @YM06433 44195502
         SPACE 1                                                        44195702
         TM    AOS,PCI       IF PCI BIT OFF, DONT TRANSLATE OR @YM04451 44195902
         BZ    WASVIO        TIC, BUT UPDATE PCI COUNTS        @YM04451 44196102
         SPACE 1                                                        44196302
*                                                                       44196702
* AT THIS POINT, WRPTR1 (GR8) POINTS AT NEXT CCW STRING TO BE  @YM06433 44197902
* TRANSLATED, CURRCCW1 (GR6) CONTAINS THE NEXT VIRTUAL DATA    @YM06433 44199102
* ADDRESS, AND IOBVRPTR+8 (GR2) CONTAINS THE ADDRESS OF THE    @YM06433 44200302
* ASSOCIATED INDIRECT ADDRESS LIST                             @YM06433 44201502
*                                                                       44202702
         NI    C4(GR8),X'FF'-X'04' SET IAL LIST NOT PRESENT    @YM06433 44203902
         LRA   GR9,C0(GR6)        TRANSLATE DATA ADDR TO REAL  @YM06433 44205102
         LA    GR6,C0(GR6)        CLEAR HIGH ORDER BYTE        @YM06433 44206302
         LR    GR7,GR6            VIRTUAL DATA ADDRESS         @YM06433 44207502
         AH    GR7,C6(GR8)        ADD LENGTH OF READ           @YM06433 44208702
         BCTR  GR7,C0                                                   44209902
         SRL   GR6,11             STARTING PAGE NUMBER         @YM06433 44233202
         SRL   GR7,11             ENDING PAGE NUMBER           @YM06433 44243202
         SR    GR7,GR6            IF MORE THAN 1 PAGE NEED IAL @YM06433 44253202
         BZ    EXTIALWR           BRANCH IF ONLY ONE PAGE      @YM06433 44263202
         ST    GR9,C8(GR2)        PUT FIRST ENTRY INTO IAL     @YM06433 44266502
         LA    GR3,C8(GR2)        GET POINTER TO IAL LIST      @YM06433 44266602
         SLL   GR6,11             ADDR OF 1ST BYTE ON 1ST PAGE @YM06433 44277702
EXTLOOPW LA    GR6,D2048(GR6)     ADDR OF LAST BYTE THIS PAGE  @YM06433 44287702
         LA    GR3,C4(GR3)        BUMP TO NEXT IAL ENTRY       @YM06433 44288502
         LRA   GR9,C0(GR6)        REAL ADDR OF NEXT PAGE       @YM06433 44288602
         ST    GR9,C0(GR3)        STORE REAL ADDR IN NEXT IAL  @YM06433 44288702
         BCT   GR7,EXTLOOPW       LOOP TO TRANSLATE NEXT ENTRY @YM06433 44288802
         OI    C4(GR8),X'04'      SET IAL PRESENT INTO WRT CCW @YM06433 44290802
         LRA   GR9,C8(GR2)        TRANSLATE ADDR OF IAL LIST   @YM06433 44294502
EXTIALWR STCM  GR9,C7,C1(GR8)     INSERT REAL ADDR OF IAL LIST @YM06433 44295302
         SPACE 1                                                        44296302
         MVC   C16(C4,GR8),RSECTOR PUT VIRT ADDR IN NEXT NO-OP @YM06435 44298302
         L     GR5,WRTICPTR       ADDR OF CCW TO WHICH TO TIC  @YM06433 44306302
         L     GR6,WRPTR2         ADDR OF CURRENT WRT C/K/D    @YM06433 44308302
         CLI   C0(GR6),X01             WAS OP CODE OF CCW JUST @YM06433 44310002
*                                       EXECUTED A WRITE SPECIAL A35473 44320021
*                                       C/K/D                    A35473 44330021
         BE    GENRET1                 YES, DON'T INCREMENT    @YM06433 44340002
*                                        COUNTER                 A35473 44350021
         L     GR9,WRPCICNT            PCI COUNT               @YM06433 44400002
         LA    GR9,C1(GR0,GR9)                                 @YM06433 44500002
         ST    GR9,WRPCICNT            UPDATE PCI COUNT        @YM06433 44600002
         B     GENRET1                 RETURN TO IOS           @YM06433 44700002
         SPACE 1                                                        44707002
WASVIO   EQU   *                                               @YM04451 44714002
         MVC   C16(C4,GR8),RSECTOR PUT VIRT ADDR IN NEXT NO-OP @YM04451 44721002
         L     GR6,WRPTR2         ADDR OF CURRENT WRT C/K/D    @YM04451 44728002
         CLI   C0(GR6),X01             WAS OP CODE OF CCW JUST @YM04451 44735002
*                                       EXECUTED A WRITE       @YM04451 44742002
*                                       SPECIAL C/K/D          @YM04451 44749002
         BE    GENRETRN                YES, DON'T INCREMENT    @YM04451 44756002
*                                        COUNTER               @YM04451 44763002
         L     GR9,WRPCICNT            PCI COUNT               @YM04451 44770002
         LA    GR9,C1(GR0,GR9)                                 @YM04451 44777002
         ST    GR9,WRPCICNT            UPDATE PCI COUNT        @YM04451 44784002
         B     GENRETRN                RETURN TO IOS           @YM04451 44791002
         EJECT                                                          44800002
VALCHK   EQU   *                       READ BACK VALIDITY CHECKING      44900019
         SPACE 1                                                 S20201 44910020
         L     GR6,RDCKPTR1            LOAD POINTER TO 'CURRENT' S20201 44920020
*                                        CCW CHAIN               S20201 44930020
         LA    GR7,C16(GR0,GR6)        FIND ACCEPTABLE LOWER     S20201 44940020
*                                        LIMIT OF CSW AT PCI     S20201 44950020
*                                        INTERRUPT               S20201 44960020
         BAL   GR9,PCIVALCK            CHECK FOR VALID CSW       S20201 44970020
         SPACE 1                                                 S20201 44980020
         L     GR7,RDCKPTR1                                             45100019
         LA    GR5,C8(GR0,GR7)    GET PTR TO RKD CCW             A34092 45120002
         LRA   GR9,C0(GR5)        GET REAL ADDR OF RD K/D CCW  @YM06448 45130002
         STCM  GR9,C7,CCW3+C1     STORE IN TIC CCW             @YM06433 45140002
         MVC   IOBCCHHR(C5,GR2),LASTADDR  UPDATE IOB SEEK ADDR   A34092 45180020
         NI    C12(GR7),XF7            RESET PCI               @YM06433 45200002
         L     GR9,WRPCICNT            RECORD COUNT                     45300019
         BCTR  GR9,GR0                 DECREMENT BY 1                   45370019
         ST    GR9,WRPCICNT            STORE DECREMENTED COUNT          45450019
         LTR   GR9,GR9                 DID LAST RECORD (COUNT = ZERO)   45500019
         BNP   GENRETRN           YES,GET OUT                   OY01184 45700002
         L     GR6,RDCKPTR2                                    @YM06433 45900002
         MVI   C12(GR6),X78            RESTORE PCI             @YM06433 46000002
         MVC   C16(C4,GR6),RSECTOR     REPLACE NOP WITH RS CCW   S20201 46018002
NOTRPS4  EQU   *                                                 S20201 46024020
         STM   GR6,GR7,RDCKPTR1                                         46200002
         TM    AOS,PCI            IF PCI BIT OFF, DONT         @YM04451 46210002
         BZ    GENRETRN           TRANSLATE OR TIC, RETURN     @YM04451 46220002
         L     GR5,RDCKPTR1       GET ADDRESS OF NEXT CCW      @YM06433 46250002
         L     GR6,RDCKPTR2       GET ADR READ COUNT, CURR CCW @YM06433 46260002
         MVC   C1(C3,GR5),C1(GR6)     MOVE REAL ADDRESS IN CCW @YM06434 46280002
         MVC   C9(C3,GR5),C9(GR6)     MOVE REAL ADDRESS IN CCW @YM06434 46282002
         LA    GR6,C8(GR6)        BUMP TO READ KEY/DATA ADDR   @YM06433 46290002
         B     GENRET1                PRE-RETURN TO IOS                 46300002
         EJECT                                                   S20201 46304020
**************************************************************** S20201 46308020
*                                                              * S20201 46312020
*    THIS ROUTINE IS USED TO MAKE SURE THAT IF A CCW WITH THE  * S20201 46316020
*  PCI FLAG ON IS EXECUTED VIA COMMAND RETRY, THE INTERRUPT    * S20201 46320020
*  WILL BE IGNORED                                             * S20201 46324020
*                                                              * S20201 46328020
**************************************************************** S20201 46332020
         SPACE 2                                                 S20201 46336020
PCIVALCK EQU   *                                                 S20201 46340020
         L     GR8,CSW(GR0,GR2)        LOAD CSW                 YL026VD 46344002
         LA    GR8,C0(GR0,GR8)         CLEAR HIGH ORDER BYTE     S20201 46348020
         CR    GR8,GR7                 CSW LESS THAN LOWER LIMIT S20201 46352020
         BL    GENRETRN                YES, IGNORE THIS PCI      S20201 46356020
         AH    GR7,WKA1                FIND ACCEPTABLE UPPER     S20201 46360020
*                                        LIMIT OF CSW AT PCI     S20201 46364020
*                                        INTERRUPT               S20201 46368020
         CR    GR8,GR7                 CSW GREATER THAN UPPER    S20201 46372020
*                                        LIMIT                   S20201 46376020
         BH    GENRETRN                YES, IGNORE THIS PCI      S20201 46380020
         BR    GR9                     RETURN, EVERYTHING IS OK  S20201 46384020
         EJECT                                                          46400019
ID       DC    CL8'IGG019C8'      APPENDAGE ID                          46600019
OVERFLOW EQU   X'20'                   SETTING FOR OVERFLOW DEVICE DCB  46700019
         DS    0F                 FULL WORD ALIGNMENT                   46780019
PATCHLEN EQU (*-IGG019C8)/20      5 PER CENT PATCH AREA LENGTH          46860019
PATCH    DC    XL(PATCHLEN)'00'   5 PER CENT PATCH AREA          A41780 46940000
         DS    0D                 DOUBLE WORD ALIGNMENT                 47020019
         DCBD  DSORG=PS                                                 47100019
         EJECT                                                          47200019
IEBMCA   DSECT                                                          47300019
         IEBMCA                                                         47400019
         EJECT                                                          47500019
IECDSECT DSECT                                                          47600019
         IECDSECT                                                       47700019
IOBMCCHH EQU   DXDAADDR-DXIOB          MBBCCHHR FIELD IN IOB            47800019
IOBCCHHR EQU   DXDAADDR-DXIOB+3        CCHHR FIELD IN IOB               47900019
IOBMCCHR EQU   DXDAADDR-DXIOB+7        RECORD FIELD IN IOB              48000019
DCB4IOB  EQU   IOBDCBPT-DXIOB-1        POINTER TO DCB IN IOB            48100019
DEB      EQU   DXDEB                   REFERENCE START OF DEB           48200019
DEBEXSCL EQU   DXDEBAPP                EXTENT SCALE (4 FOR DA)          48300019
DEBSTRCC EQU   DXDEBSCC                CCHH START OF AN EXTENT          48400019
DEBENDHH EQU   DXDEBEHH                END OF AN EXTENT HH              48450019
DISKADR  EQU   DCBFDAD-IHADCB          FDAD IN DCB (MBBCCHHR)           48500019
         SPACE 1                                                        48600019
DEVTAB   DSECT                                                          48700019
*                                                                       48800019
*     DIRECT ACCESS DEVICE TABLE OVERLAY  OUTCHAR IN IEBMCA           * 48900019
*                                                                     * 49000019
DEVCODE  DS    F                       DEVICE CODE FROM UCB           * 49100019
MAXSIZE  DS    F                       MAXIMUM SIZE UNKEYED BLOCK     * 49200019
MAXCC    DS    H                       NUMBER OF CYLINDER             * 49300019
MAXHH    DS    H                       NUMBER OF TRACKS               * 49400019
TRKCAP   DS    H                       MAXIMUM TRACK LENGTH           * 49500019
OVERI    DS    XL1                     OVERHEAD NOT LAST RECORD       * 49600019
OVERL    DS    XL1                     OVERHEAD LAST RECORD           * 49700019
OVERK    DS    XL1                     OVERHEAD REDUCTION FOR NON-KEY * 49800019
DEVFLAG  DS    XL1                     APPLY TOLERANCE FACTOR NOT LAST* 49900019
TOLER    DS    H                       GAP LENGTH CALCULATE TOLERANCE * 50000019
TOLFAC   EQU   X'01'                   TOLERANCE FACTOR TO BE ADDED   * 50100019
HALFOVER EQU   X'08'                                             S20201 50150020
*                                                                     * 50200019
*       END OF DEVTAB OVERLAY                                         * 50300019
*                                                                     * 50400019
         SPACE 1                                                        50500019
         END                                                            50600019
./  ADD  SSI=72900027,NAME=IGG019FT
SIO      TITLE 'IEBCOPY SIO/PGFX ROUTINE  IGG019FT'                     00750000
IGG019FT CSECT                                                          00800000
         SPACE 1                                                        01400000
*****************************************************************       02100000
*                                                               *       02800000
*STATUS-CHANGE LEVEL 000                                        *       03500000
*FUNCTION-FIXES CORE TO PREVENT ILLEGAL REFERENCES BY           *       04200000
*          CCW'S AND APPENDAGES,                                *       04250000
*          PASSES LIST TO I/O SUPERVISOR OF CCW'S TO BE         *       04900000
*          APPENDED OR MODIFIED IN BUFFER ADDRES                *       04950000
*ENTRY POINTS-IGG019FT FOR EXTEND FUNCTION(SIO)                 *       05000000
*             IGG019FT+4 FOR PAGE FIX                           *       05600000
*INPUT-WORK AREA POINTED TO BY REG 10,                          *       05650000
*      EXTEND LIST IN IEBMCA                                    *       06300000
*OUTPUT-IF PCI PROCESSING IS DONE,PAGES FIXED                   *       06350000
*                                 EXTEND LIST ADDRESS AND COUNT *       06400000
*EXTERNAL REFERENCES-IEBMCA(ADDRESS IN IOB)                     *       06450000
*EXITS-R14(EXTEND LIST PASSED),                                 *       06500000
*      R14+4(NO EXTENDLIST)                                     *       06550000
*WORKAREAS- AREA PASSED BY I/O SUPERVISOR POINTED TO BY REG 10  *       06600000
*ATTRIBUTES-DISABLED                                            *       06650000
*****************************************************************       07000000
*C 434500                                                      @YM06438 07002002
*C 768400-768408                                               @YM06435 07004002
*A 203500-204500,218000,231600,232600,233200-233300,456200     @YM06433 07010002
*A 768420,770616,770969,770993,773691                          @YM06433 07020002
*A 234000,434100-434420                                        @YM04451 07020102
*C 434500,460046,743000,744000,766000,767000,769998            @YM06433 07044002
*C 769999-770021,770060-770479,770651-770827,770927-770938     @YM06433 07044402
*C 770989-770990,770997,771040-771373,771498,771982-772483     @YM06433 07044802
*C 773687,773695,773699,776944-777944,854500-856000,883333     @YM06433 07045202
*D 763500-764500,768500-769984,769992-769998,770619            @YM06433 07046002
*D 770899,770939,770959,770979-770987,770995-770996,770998     @YM06433 07048002
*D 771798-771978,772503,773683,773700-776924                   @YM06433 07048102
*C 771698                                                      @YM05026 07048402
*A 255100,460020-460040,461500,884500                          @YM04804 07050002
*C 771698,775882                                               @YM05026 07100002
*C 763100,771982,773678,775974,776624                          @YM04848 07150002
*A 234000-234500,724500-744000,770607-770639,770988,770992     @YM04848 07200002
*A 775106,776932-856000                                        @YM04848 07250002
*C 540000                                                      @YM05186 07300002
*A239000,461920-462599                                         @YA01719 07300202
*C462999,540000                                                @YA01719 07300402
*C434000,443000                                                @ZA01218 07300602
*A560500-562500                                                @ZA01218 07300802
         SPACE 2                                                        07700000
*                                 REGISTER EQUATES                      08400000
R0       EQU   0                                                        09100000
R1       EQU   1                                                        09800000
R2       EQU   2                  ACTIVE IOB POINTER                    10500000
R3       EQU   3                                                        11200000
R4       EQU   4                  IEBMCA POINTER                        11900000
R5       EQU   5                                                        12600000
R6       EQU   6                                                        13300000
R7       EQU   7                                                        14000000
R8       EQU   8                                                        14700000
R9       EQU   9                                                        15400000
R10      EQU   10                                                       16100000
R11      EQU   11                 INITIAL IEBMCA POINTER                16800000
R12      EQU   12                                                       17500000
R13      EQU   13                                                       18200000
R14      EQU   14                                                       18900000
R15      EQU   15                 BASE REG                              19600000
         SPACE 1                                                        20300000
C1       EQU   1                  DISPLACEMENT                 @YM06433 20350002
C3       EQU   3                  DISPLACEMENT                 @YM06433 20360002
C7       EQU   7                  DISPLACEMENT                 @YM06433 20400002
C9       EQU   9                  DISPLACEMENT                 @YM06433 20450002
X0       EQU   0                  DISPLACEMENT                          21000000
X1       EQU   1                                                YL026VD 21010002
X5       EQU   5                 FIX ENTRY COUNT (CONTIG BUFFER)YL026VC 21050002
X6       EQU   6                  FIX ENTRY COUNT               YL026VC 21700002
X4       EQU   4                  DISPLACEMENT                  YL026VD 21710002
X8       EQU   8                  DISPLACEMENT                          21750000
X10      EQU   10                 DISPLACEMENT                 @YM06433 21800002
X16      EQU   16                 DISPLACEMENT                          23100000
X20      EQU   20                 DISPLACEMENT                  YL026VD 23150002
X22      EQU   22                 DISPLACEMENT                 @YM06433 23160002
X24      EQU   24                 DISPLACEMENT                  YL026VD 23200002
X2C      EQU   44                 DISPLACEMENT                  YL026VC 23210002
X32      EQU   32                 DISPLACEMENT                  YL026VD 23250002
X35      EQU   35                 DISPLACEMENT                 @YM06433 23260002
X40      EQU   40                 DISPLACEMENT                  YL026VD 23300002
L1       EQU   1                  LENGTH                        YL026VD 23310002
D2048    EQU   2048               DISPLACEMENT                 @YM06433 23320002
RPS      EQU   X'10'                                           @YM06433 23330002
IOBCAW   EQU   16                 DISPLACEMENT                  YL026VD 23350002
VIOBIT   EQU   X'80'              IN UCB IF VIO DATA SET       @YM04451 23850002
DIRLEN   EQU   275                LENGHT OF DIR BLK + COUNT    @YA01719 23900002
         SPACE 1                                                        24500000
         USING IGG019FT,R15                                             26600000
         B     TRANS006           GO TO ROUTINE TO BUILD                27300000
*                                   EXTENDED TRANSLATION PARAM.         28000000
*                                   LIST                                28700000
         SPACE 2                                                        29400000
FIX00006 EQU   *                                                        30100000
         SPACE 1                                                        30800000
*****************************************************************       31500000
*                                                               *       32200000
*     THIS ROUTINE BUILDS A PARAMETER LIST FOR FIXING REQUIRED  *       32900000
*  CORE LOCATIONS SO THAT DISABLED PAGE FAULTS WILL NOT OCCUR   *       33600000
*  IN THE PCI APPENDAGE IGG019C8.                               *       34300000
*                                                               *       35000000
*     FOR EXCPVR, THE FOLLOWING AREAS WILL BE FIXED:            *       35050002
*  1. DCB, IOB, ECB, AND CCW STRINGS (ALL CONTAINED IN IEBMCA)  *       35100002
*  2. DEB AND RELATED APPENDAGE VECTOR TABLE (AVT)              *       35150002
*  3. SIO APPENDAGE (IGG019FT)                                  *       35200002
*  4. PCI APPENDAGE (IGG019C8)                                  *       35250002
*  5. READ OR WRITE BUFFER OR BUFFERS                           *       35300002
*****************************************************************       35700000
         SPACE 1                                                        36400000
         L     R11,IEBMCAPT(R0,R2)   LOAD PTR TO IEBMCA                 37100000
         USING IEBMCA,R11                                               37800000
         STM   R4,R9,SIOSAVE      SAVE REGS 4-9                         38500000
         LR    R4,R11             GET PTR TO IEBMCA IN R4               39200000
         DROP  R11                                                      39900000
         USING IEBMCA,R4                                                40600000
         SR    R11,R11            CLEAR REG 11                          41300000
         TM    AOS,PCI            WILL THIS I/O REQUEST REQUIRE         42000000
*                                    PCI HANDLING                       42700000
         BNO   FIXMCA             NO, RETURN TO IOS            @YA01218 43400002
         L     R10,FIXLIST       LOAD ADDRESS OF FIX LIST AREA @YM06438 43450002
         TM    X0(R7),VIOBIT      DOES UCB IND. VIO DATA SET   @YM04451 43500002
         BZ    NEEDFIX            NO, MUST DO PAGE FIX         @YM04451 43600002
         NI    AOS,X'FF'-PCI      TURN OFF PCI (TRANSLATE) BIT @YM04451 43700002
         L     R6,CCW3            GET PTR TO 1ST READ OR WRITE @YM04451 43800002
         LA    R6,X0(R6)          ADDR TO WHICH TO TIC         @YM04451 43900002
         L     R6,X0(R6)          DATA ADDR IN 1ST READ OR WRT @YM04451 44000002
         ST    R6,CURRCCW1        STORE VIRTUAL DATA ADDRESS   @YM04451 44100002
         MVI   RSECTOR,X'03'      IGNORE READ SECTOR FOR VIO   @YM04451 44200002
         B     FIXMCA             RETURN TO IOS                @YA01218 44300002
NEEDFIX  EQU   *                                               @YM04451 44400002
         LA    R5,MCASIZE(R0,R4)  OBTAIN PTR TO END OF IEBMCA           44800002
         STM   R4,R5,X0(R10)      STORE IN FIX LIST                     45500000
         MVI   X0(R10),X'00'      CLEAR HIGH ORDER BYTE         VS04804 45510002
         L     R5,IOBVRPTR        IOB FOR EXCPVR                YL026VD 45550002
         L     R6,X20(R5)         GET PTR TO RELATED DCB        YL026VD 45600002
         L     R6,X2C(R6)         GET PTR TO DEB                YL026VC 45610002
         LA    R6,X0(R6)          CLEAR HIGH ORDER BYTE        @YM06433 45620002
         SR    R8,R8              CLEAR A WORK REGISTER         YL026VD 45650002
         IC    R8,X4(R6)          GET DEB ACCESS METHOD LENGTH  YL026VD 45700002
         SR    R9,R9              CLEAR ANOTHER WORK REGISTER   YL026VD 45750002
         IC    R9,X16(R6)         GET DEB NUMBER OF EXTENTS     YL026VD 45800002
         SLL   R9,4               MULTIPLY BY 16 FOR LENGTH     YL026VD 45850002
         AR    R8,R9              ADD SECTION LENGTHS           YL026VD 45900002
         A     R8,BASIC           ADD LENGTH OF BASIC SECTION   YL026VD 45950002
         LR    R7,R6              GET ADDR OF BEGINNING OF DEB  VS04804 46002002
         AR    R7,R8              GET ADDR OF END OF DEB       @YM06433 46004002
         S     R6,PREFIX          POINT AT APPENDAGE TABLE      YL026VD 46010002
         STM   R6,R7,X8(R10)      STORE IN FIX LIST             YL026VD 46050002
         L     R7,X4(R6)          ADDRESS OF SIO APPENDAGE      YL026VD 46100002
         LA    R7,X0(R7)          CLEAR HIGH ORDER BYTE         YL026VD 46110002
         LA    R8,PATCHEND        LENGTH OF SIO APPENDAGE       VS04804 46150002
         STM   R7,R8,X16(R10)     FIX SIO APPENDAGE             YL026VD 46160002
         L     R7,X8(R6)          ADDRESS OF PCI APPENDAGE      YL026VD 46170002
         LA    R7,X0(R7)          CLEAR HIGH ORDER BYTE         YL026VD 46172002
*  FIND OUT HOW LONG                                                    46180002
         LA    R8,1480(R0,R7)                                   YL026VD 46182002
         STM   R7,R8,X24(R10)     FIX PCI APPENDAGE             YL026VD 46190002
         CLI   MSG1+X1,NORMOD     HAS MSG -NO MORE SPACE IN OUT YA01719 46192002
*                                     DIR.- BEEN PRINTED        YA01719 46194002
         BNE   NOTDIR             NO                            YA01719 46196002
         TM    FLG6,OIC           ARE ALL OUTPUT DIR. BLKS IN   YA01719 46198002
*                                     CORE                      YA01719 46198402
         BZ    NOTDIR             NO                            YA01719 46198802
         L     R6,SVFSTO          YES THAT AREA HAS TO BE FIXED YA01719 46199202
*                                     AT WRITE BACK OF OUT DIR. YA01719 46199602
         L     R7,SVLSTO          POINT TO LAST SAVED -IN CORE  YA01719 46199702
*                                     BLK-                      YA01719 46199802
         LA    R7,DIRLEN(R0,R7)   ADD COUNT + DIR. LENGHT TO    YA01719 46199902
*                                    GET END OF BUFFER          YA01719 46249902
         B     STOREFIX                                         YA01719 46259902
NOTDIR   LM    R6,R7,FLG1         LOAD PTR TO START AND END OF  YA01719 46299902
*                                    FIRST BUFFER AREA                  46900000
         LA    R6,X0(R6)          CLEAR HI ORDER BYTE                   47600000
         TM    FLG1,P2FLG1        ARE BUFFERS DISCONTIGUOUS             47650000
         BZ    FIX00010           IF NOT,FIX AS ONE                     47700000
         STM   R6,R7,X32(R10)     STORE IN FIX LIST             YL026VD 49000002
         LM    R6,R7,BEGFST2      LOAD PTR TO START AND END OF          49700000
*                                    SECOND BUFFER AREA                 50400000
         STM   R6,R7,X40(R10)     STORE IN FIX LIST             YL026VD 51800002
         LA    R11,X6             PUT COUNT OF ENTRIES IN FIX   YL026VD 53200002
*                                    LIST IN REG 11                     53900000
         B     FIX00012           GO RETURN TO IOS                      53910000
FIX00010 L     R7,END2ND2         LOAD PTR TO END OF SECOND BUFFER      53950000
STOREFIX STM   R6,R7,X32(R10)     STORE IN FIX LIST WITH BEGIN @YA01719 54000002
*                                    FIRST                      YL026VD 54010002
         LA    R11,X5             NOW ONLY FIVE FIX LIST ENTRIESYL026VD 54050002
FIX00012 EQU   *                                                        54600000
         LM    R4,R9,SIOSAVE      RESTORE REGS 4-9                      55300000
         BR    R14                RETURN                                56000000
FIXMCA   LA    R5,MCASIZE(R0,R4)  OBTAIN PTR TO END OF IEBMCA  @ZA01218 56050002
         STM   R4,R5,X0(R10)      STORE IN FIX LIST            @ZA01218 56100002
         MVI   X0(R10),X'00'      CLEAR HIGH ORDER BYTE        @ZA01218 56150002
         LA    R11,X1                                          @ZA01218 56200002
         B     FIX00012                                        @ZA01218 56250002
         EJECT                                                          56700000
TRANS006 EQU   *                                                        57400000
         SPACE 2                                                        58100000
*****************************************************************       58800000
*                                                               *       59500000
*     THIS ROUTINE IS USED FOR THE EXTENDED TRANSLATION         *       60200000
*  FUNCTION.  ITS PURPOSE IS TO TELL IOS WHICH CCW'S THAT ARE   *       60900000
*  NOT IN THE ORIGINAL CCW CHAIN WILL BE MODIFIED OR APPENDED   *       61600000
*  TO THE ORIGINAL CHAIN.  IN THIS MANNER, IOS WILL BE ABLE TO  *       62300000
*  CHANGE THE 'REAL' CCW STRING TO REFLECT CHANGES MADE TO THE  *       63000000
*  VIRTUAL CCW CHAIN BY IGG019C8 WITH MINIMUM LOSS IN PERFORM-  *       63700000
*  ANCE.                                                        *       64400000
*                                                               *       65100000
*****************************************************************       65800000
         SPACE 2                                                        66500000
         L     R11,IEBMCAPT(R0,R2)  GET POINTER TO IEBMCA               67200000
         USING IEBMCA,R11                                               67900000
         STM   R4,R9,SIOSAVE      SAVE REGS 4-9                         68600000
         LR    R4,R11             GET PTR TO IEBMCA IN R4               69300000
         DROP  R11                                                      70000000
         USING IEBMCA,R4                                                70700000
         SR    R11,R11            CLEAR REG 11                          71400000
         TM    AOS,PCI            WILL THIS I/O REQUEST REQUIRE         72100000
*                                    PCI HANDLING                       72800000
         BNO   TRANS018           NO,RETURN                             73500000
         SPACE 1                                                        74200000
         LA    R9,COPYIAL1                                     @YM04848 74250002
         ST    R9,IALPTR1                                      @YM06433 74300002
         LA    R9,COPYIAL2                                     @YM04848 74350002
         ST    R9,IALPTR2                                      @YM06433 74400002
         SPACE 1                                                        76300000
         L     R9,IOBVRPTR        GET PROPER IOB                YL026VD 76302002
         L     R6,IOBCAW(R9)      GET ADDRESS OF FIRST CCW     @YM04848 76310002
         LA    R11,SECTOR         LOAD ADDR OF SECTOR          @YM06433 76600002
         LRA   R9,X0(R11)         TRANSLATE TO REAL             YL026VD 76650002
         STCM  R9,C7,RSECTOR+C1   STORE INTO READ SECTOR       @YM06433 76830002
         CLI   X0(R6),X'23'       IS CCW SET SECTOR            @YM06435 76840002
         BNE   TRANS008         NO, NO TRANSLATE OF SET SECTOR @YM06435 76840402
         STCM  R9,C7,C1(R6)       STORE BACK INTO CCW          @YM06435 76840802
         LA    R6,X8(R6)          BUMP TO SEARCH ID CCW        @YM06433 76842002
TRANS008 EQU   * TRANSLATE THREE CCWS ASSOCIATED WITH SEARCH ID YL026VD 76998002
         L     R11,IOBVRPTR       GET ADDRESS TO BE TRANSLATED @YM06433 76998802
* INITIALIZE RSECTOR FOR PCI APPENDAGE                         @YM06433 77000102
         MVI   RSECTOR,X'03'      SET UP AS NOP                @YM06433 77000502
         TM    DEVOFF+C1(R11),RPS RPS DEVICE                   @YM06433 77000902
         BZ    NORPS              BRANCH IF NOT RPS DEVICE     @YM06433 77001302
         MVI   RSECTOR,X'22'      SET READ SECTOR OP CODE      @YM06433 77001702
NORPS    DS    0H                                              @YM06433 77001802
         LA    R11,X35(R11)                                    @YM06433 77002102
         LRA   R9,X0(R11)         TRANSLATE TO REAL             YL026VD 77003402
         STCM  R9,C7,C1(R6)       PUT REAL ADDR BACK INTO CCW  @YM06433 77006002
         LRA   R9,X0(R6)          TRANSLATE ADDR OF TIC BACK   @YM06433 77009902
         STCM  R9,C7,C9(R6)       PUT REAL ADDR BACK INTO CCW  @YM06433 77011902
         LA    R6,X16(R6)                                      @YM06433 77039902
         L     R11,X0(R6)                                      @YM06433 77041902
         LRA   R9,X0(R11)                                      @YM06433 77043902
         ST    R9,X0(R6)                                       @YM06433 77045902
         MVI   X0(R6),X'08'                                    @YM06433 77047902
         SPACE 1                                                        77059902
*                                                                       77060302
*  IF REQUEST IS READ, THE READ CCW IS THE SECOND CCW IN STRING@YM04848 77060702
*  IF REQUEST IS WRITE, WRITE CCW IS FIRST IN STRING           @YM04848 77061102
*                                                                       77061502
         LR    R6,R11                                          @YM06433 77061602
         NI    X4(R6),X'FF'-X'04' SET OFF IAL LIST PRESENT     @YM06433 77065102
         L     R11,X0(R6)                                      @YM06433 77068702
         ST    R11,CURRCCW1                                    @YM06433 77072202
         LA    R11,X0(R11)        ZERO HI ORDER BYTE           @YM06433 77074202
         TM    WSFLAG,RDGSW       IS THIS A READ REQUEST       @YM06433 77075702
         BO    RDORRDBK           BRANCH IF READ REQUEST       @YM06433 77079202
         TM    TAG,TAG6           IS THIS A READ BACK CHECK    @YM06433 77081202
         BZ    RDWRCCWS           BRANCH IF STRAIGHT WRITE     @YM06433 77081602
RDORRDBK LRA   R9,X0(R11)                                      @YM06433 77082702
         LR    R5,R11                                          @YM06433 77092702
         AH    R5,X6(R6)                                       @YM06433 77093102
         BCTR  R5,X0              SUB ONE FOR ACTUAL END       @YM06433 77093202
         SRL   R11,11             SHIFT FOR 2K BOUNDARY        @YM06433 77093502
         SRL   R5,11              CHANNEL USES 2K BOUNDARY     @YM06433 77093602
         SR    R5,R11             SEE IF ON SAME 2K PAGE       @YM06433 77093702
         BZ    NOEXTCT1                                        @YM06433 77093802
         ST    R9,COPYIAL1                                     @YM06433 77096902
         SLL   R11,11             GET VIRT ADDR OF 1ST BYTE    @YM06433 77098902
         LA    R11,D2048(R11)     BUMP BY 2K                   @YM06433 77099002
         LRA   R9,X0(R11)                                      @YM06433 77099302
         ST    R9,COPYIAL1+4                                   @YM06433 77099702
         LA    R11,COPYIAL1                                    @YM06433 77104002
         LRA   R9,X0(R11)                                      @YM06433 77105202
         OI    X4(R6),X'04'                                    @YM06433 77106302
NOEXTCT1 STCM  R9,C7,C1(R6)       PUT REAL ADDR BACK INTO CCW  @YM06433 77106802
         LA    R6,X8(R6)          BUMP TO NEXT CCW             @YM06433 77110002
         NI    X4(R6),X'FF'-X'04' SET OFF IAL LIST PRESENT     @YM06433 77110402
         L     R11,CURRCCW1                                    @YM06433 77111302
         LA    R11,X8(R11)                                     @YM06433 77112402
* THIS CCW IS A READ OR A WRITE AND MAY NEED AN IAL            @YM06433 77115502
RDWRCCWS EQU   *                                               @YM04848 77118602
         LRA   R9,X0(R11)                                      @YM06433 77120602
         LR    R5,R11             PUT START ADDR IN WORK REG   @YM06433 77121702
         AH    R5,X6(R6)          ADD LENGTH OF READ OR WRITE  @YM06433 77124802
         BCTR  R5,X0              SUB ONE FOR ACTUAL END       @YM06433 77134802
         SRL   R11,11             SHIFT FOR 2K BOUNDARY        @YM06433 77137302
         SRL   R5,11              SHIFT FOR 2K BOUNDARY        @YM06433 77149802
         SR    R5,R11             ALL ON ONE PAGE               YL026VD 77159802
         BZ    TRANS010          NO, INDIRECT ADDR LIST NEEDED @YM05026 77169802
         ST    R9,COPYIAL1+8      PUT FIRST ENTRY IN IAL LIST  @YM06433 77198202
         LA    R8,COPYIAL1+8      GET ADDR OF FIRST ENTRY      @YM06433 77198302
         SLL   R11,11             GET ADDR OF BYTE 1, PAGE 1   @YM06433 77198502
IALLOOP1 LA    R11,D2048(R11)     BUMP BY 2K                   @YM06433 77248302
         LA    R8,X4(R8)          BUMP TO NEXT IAL ENTRY        YL026VD 77258302
         LRA   R9,X0(R11)         TRANSLATE ADDR TO REAL        YL026VD 77298302
         ST    R9,X0(R8)          STORE AS NEXT ENTRY IN IAL    YL026VD 77348302
         BCT   R5,IALLOOP1       LOOP UNTIL ALL NEEDED IALS DONEYL026VD 77358302
         LA    R11,COPYIAL1+8                                  @YM06433 77368702
         LRA   R9,X0(R11)                                       YL026VD 77369102
         OI    X4(R6),X'04'       SET IAL PRESENT IN R/W CCW   @YM06433 77369202
TRANS010 EQU   * READ OR WRITE CCW DOES NEED INDIRECT ADDR LIST YL026VD 77369502
         STCM  R9,C7,C1(R6)                                    @YM06433 77369902
         EJECT                                                          77371902
*                                                                       77692802
* IF CCWS ARE FOR WRITE, PICK UP THE LAST CCW IN THE STRING    @YM04848 77693202
         TM    WSFLAG,RDGSW       IS THIS READ CCW STRING      @YM04848 77693602
         BO    TRANS012           BRANCH TO RETURN ON READ     @YM06433 77694402
         TM    TAG,TAG6           IS THIS READ BACK CCW STRING @YM06433 77744402
         BO    TRANS012           YES, TRANSLATION COMPLETE    @YM06433 77794402
         LA    R6,X8(R6)          BUMP TO LAST WRITE CCW       @YM04848 85400002
         LRA   R9,X8(R6)          TRANSLATE TO REAL            @YM06433 85450002
         STCM  R9,C7,C1(R6)       PUT REAL ADDR BACK INTO CCW  @YM06433 85500002
* TRANSLATE SEARCH MULTI-TRACK AND TIC BACK IN CASE NEEDED     @YM06433 85510002
* IN PCI APPENDAGE                                             @YM06433 85520002
         LRA   R9,LASTADDR+C3     GET REAL ADDR OF CCHHR       @YM06433 85530002
         STCM  R9,C7,WSCH+C1      PUT INTO SIDEQ,MT            @YM06433 85540002
         LRA   R9,WSCH            GET REAL ADDR OF SIDEQ,MT    @YM06433 85542002
         STCM  R9,C7,WSCH1+C1     PUT ADDR INTO TIC BACK       @YM06433 85544002
TRANS012 DS    0H               SET UP THE NOP OR READ SECTOR  @YM06433 85550002
         MVC   X8(X4,R6),RSECTOR                               @YM06433 85600002
TRANS018 EQU   *                                                        86800000
         LM    R4,R9,SIOSAVE      RESTORE REGISTERS 4-9                 87500000
         BR    R14                RETURN                                88200000
         DS    0H                                                       88250000
*****************************************************************       88252002
*                     C O N S T A N T S                         *       88260002
*****************************************************************       88270002
BASIC    DC    F'32'              LENGTH OF BASIC SECTION OF DEBYL026VD 88280002
PREFIX   DC    F'36'              LENGTH OF DEB PREFIX          YL026VD 88290002
PATCHLEN EQU   (*-IGG019FT)/10    LENGTH OF PATCHAREA          @YM06433 88333302
PATCH    DC    XL(PATCHLEN)'00'                                 YL016VD 88383302
PATCHEND EQU   *                                                YL026VD 88400002
PATCHCON DS    CL1                                              VS04804 88450002
         EJECT                                                          88900000
IEBMCA   DSECT                                                          89600000
         IEBMCA                                                         90300000
         END                                                            91000000
