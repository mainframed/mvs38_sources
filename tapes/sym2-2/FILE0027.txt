./  ADD  SSI=80450212,NAME=BLSCAMMM
         MACRO                                                          00050000
&N       BLSCAMMM &NXT,&ID,&T,&AMS,&OPEN=(,(INPUT,DISP)),              *00100000
               &DDNAME=,                                               *00150000
               &DSN=,&VOL=,&UNIT=,                                     *00200000
               &SPACE=,&LABEL=,&SSREQ=,&PASSW=,&PERMA=,&CNVRT=,        *00250000
               &DISP=(SHR,KEEP,KEEP),                                  *00300000
               &DYRB=AL,                                               *00350000
               &RTDATA=(RTDDN,RTDSN,RTVOL,RTORG),                      *00400000
               &SYSOUT=                                                 00450000
.** START OF SPECIFICATIONS ******************************************* 00500000
.*                                                                      00550000
.*  MACRO NAME= BLSCAMMM                                                00600000
.*                                                                      00650000
.*  DESCRIPTIVE NAME= IPCS DAS ALLOCATION MODEL GENERATOR MACRO         00700057
.*                                                                      00750000
.*  COPYRIGHT= NONE                                                     00800000
.*                                                                      00850000
.*  STATUS= SU57 RELEASE 1, LEVEL 0                                     00900057
.*                                                                      00950000
.*  FUNCTION= GENERATE ALLOCATION AND ACCESS CONTROL BLOCK MODELS FOR   01000000
.*            IPCS DAS DATA SETS. EACH MODEL CONSISTS OF THE FOLLOWING: 01050057
.*              MODEL COMPONENT ADDRESS LIST                            01100000
.*              DATA SET ACCESS CONTROL BLOCK MODELS                    01150000
.*                OPEN/CLOSE PARAMETER LIST MODEL                       01200000
.*                VSAM ACB AND RPL MODELS                               01250000
.*                OR                                                    01300000
.*                QSAM DCB MODEL                                        01350000
.*              DYNAMIC ALLOCATION PARAMETER LIST MODELS                01400000
.*                DYNAMIC ALLOCATION REQUEST BLOCK MODEL                01450000
.*                TEXT UNIT POINTER LIST MODEL                          01500000
.*                TEXT UNIT MODELS                                      01550000
.*              FOR NEW VSAM DATA SETS, THE ACCESS METHOD SERVICES      01600000
.*              COMMAND TEXT (SYSIN) STREAM MODEL                       01650000
.*                                                                      01700000
.*  NOTES= NONE                                                         01750057
.*                                                                      01800000
.*  MODULE TYPE= DATA AREA GENERATION MACRO                             01850057
.*                                                                      01900000
.*     PROCESSOR= ASSEMBLER F                                           01950057
.*                                                                      02000000
.*     ATTRIBUTES= REENTRABLE (READ ONLY DATA)                          02050057
.*                                                                      02100000
.*  INVOCATION SYNTAX=                                                  02150057
.*                                                                      02200000
.*   LOCSYMB BLSCAMMM NEXTLOC,MODEL,TYPE,AMS                            02250057
.*                                                                      02300000
.*                    √ù|,ALLOCATION MODEL KEYWORDS|                     02350057
.*                                                                      02400000
.*                                                                      02450057
.*           LOCSYMB                                                    02490057
.*             1 TO 3 BYTE LOCATION SYMBOL NAME TO PERMIT THE           02530057
.*             CONSTRUCTION OF A SINGLE THREADED LIST OF MODELS WITHIN  02570057
.*             THE BLSCAMOD MODULE.                                     02610057
.*                                                                      02700000
.*           NEXTLOC                                                    02750057
.*             1 TO 3 BYTE LOCATION SYMBOL OF THE MODEL THAT IS CHAINED 02790057
.*             AS THE SUCCESSOR OF THIS MODEL. FOR THE LAST MODEL IN    02830057
.*             THE CHAIN, THIS PARAMETER IS 0.                          02870057
.*                                                                      02910057
.*           MODEL                                                      02950057
.*             1 TO 8 BYTE ALLOCATION MODEL NAME. THIS PARAMETER IS     02990057
.*             PLACED INTO AN 8 BYTE FIELD LEFT JUSTIFIED AND PADDED    03030057
.*             WITH BLANKS. THIS NAME IS SEARCHED UPON BY THE           03070057
.*             ALLOCATION FUNCTION AND THE CONTENTS OF THE MODEL ARE    03110057
.*             MOVED INTO GETMAINED SPACE TO INITIALIZE THE DATA SET    03150057
.*             CONTROL BLOCKS.                                          03190057
.*                                                                      03230057
.*           TYPE                                                       03270057
.*             THE TYPE PARAMETER CONTROLS THE RESERVATION OF SPACE FOR 03310057
.*             THE VSAM ACB AND RPL OR THE QSAM DCB. VALID VALUES ARE:  03350057
.*               V (DEFAULT) CAUSES THE GENERATION OF                   03390057
.*                           A 76 BYTE FIELD LABELED ACBNN AND          03430057
.*                           A 76 BYTE FIELD LABELED RPLNN. NN IS THE   03470057
.*                           1 TO 3 BYTE LOCSYMB FOR THIS MODEL.        03510057
.*                           IT IS ASSUMED THAT THE USER WILL CODE AN   03550057
.*                           AN ACB MACRO ORIGINED AT ACBNN AND AN RPL  03590057
.*                           MACRO ORIGINED AT RPLNN FOR A VSAM         03630057
.*                           DATA SET.                                  03670057
.*                                                                      03710057
.*               (V,LRECL)   CAUSES THE GENERATION OF THE ACB AND RPL   03750057
.*                           AS STATED FOR THE 'V' ENTRY. IN ADDITION,  03790057
.*                           IT INITIALIZES A FIELD IN THE MODEL        03830057
.*                           COMPONENT LIST WITH THE VALUE OF THE       03870057
.*                           LRECL SUB PARAMETER. LRECL MUST BE         03910057
.*                           A SELF DEFINING NUMERIC VALUE.             03950057
.*                                                                      03990057
.*               Q           CAUSES THE GENERATION A 96 BYTE FIELD      04030057
.*                           LABELED DCBNN. NN IS THE 1 TO 3 BYTE       04070057
.*                           LOCSYMB FOR THIS MODEL. IT IS ASSUMED THAT 04110057
.*                           THE USER WILL CODE A DCB MACRO ORIGINED    04150057
.*                           AT DCBNN FOR A QSAM DATA SET.              04190057
.*                                                                      04600000
.*           AMS                                                        04650057
.*             VALID PARAMETER VALUE IS 'AMS'.                          04690057
.*             THE AMS PARAMETER CAUSES THE GENERATION OF AN ENTRY      04730057
.*             IN THE MODEL COMPONENT LIST THAT CONTAINS THE NAME       04770057
.*             AMSNN. NN IS THE 1 TO 3 BYTE LOCSYMB FOR THIS MODEL.     04810057
.*             IT IS ASSUMED THAT THE USER WILL CODE AN AMS SYSIN TEXT  04850057
.*             LIST NAMED AMSNN. THE FORMAT OF THE AMS SYSIN TEXT LIST  04890057
.*             IS SPECIFIED IN THE BLSCAMIN MODULE PROLOG.              04930057
.*                                                                      04970057
.*           ALLOCATION MODEL KEYWORD PARAMETERS:                       05010057
.*             FOR FURTHER INFORMATION REGARDING THE USE OF THE         05050057
.*             KEYWORDS THAT FOLLOW (EXECEPT OPEN) SEE OS/VS2 SYSTEM    05090057
.*             PROGRAMMING LIBRARY: JOB MANAGEMENT GC28-0627, DYNAMIC   05130057
.*             ALLOCATION.                                              05170057
.*                                                                      05350000
.*             OPEN=(OPEN MACRO LIST POSITIONAL PARAMETER LIST)         05400057
.*                  DEFAULT: OPEN=(,(INPUT,DISP))                       05440057
.*                  SEE OS/VS2 MVS DATA MANAGEMENT MACRO INSTRUCTIONS   05480057
.*                  GC26-3878 FOR INFORMATION ABOUT OPEN SUB-           05520057
.*                  PARAMETERS.                                         05560057
.*                                                                      05600057
.*             DYRB=( VERB |,FLAGS1| |,FLAGS2| )                        05640057
.*                         |,      |                                    05680057
.*                                                                      05720057
.*                  VERB (REQUIRED PARAMETER)                           05760057
.*                   ONLY VALID VALUE: AL                               05800057
.*                                                                      05840057
.*                  FLAGS1 (OPTIONAL PARAMETER)                         05880057
.*                   ONE OR MORE OF THE FOLLOWING VALUES:               05920057
.*                    (ONCVN,NOCVN,NOMNT,JBSYS)                         05960057
.*                                                                      06000057
.*                  FLAGS2 (OPTIONAL PARAMETER)                         06040057
.*                   ONE OR MORE OF THE FOLLOWING VALUES:               06080057
.*                    (WTVOL,WTDSN,NORES,WTUNT,OFFLN,TIONQ,CATLG,       06120057
.*                     MOUNT,UDEVT,PCINT)                               06160057
.*                                                                      06200057
.*                  DEFAULT: DYRB=AL                                    06240057
.*                                                                      06280057
.*             RTDATA=(DATA RETURN VALUES)                              06320057
.*                    ONE OR MORE OF THE FOLLOWING VALUES:              06360057
.*                      (RTDDN,RTDSN,RTVOL,RTORG)                       06400057
.*                    DEFAULT: RTDATA=(RTDDN,RTDSN,RTVOL,RTORG)         06440057
.*                                                                      06480057
.*             DDNAME=FILE NAME                                         06520057
.*                                                                      06560057
.*             DSN='DATA SET NAME'                                      06600057
.*                                                                      06640057
.*             VOL=VOLUME SERIAL                                        06680057
.*                                                                      06720057
.*             UNIT=UNIT NAME                                           06760057
.*                                                                      06800057
.*                     | TRK          |                                 06840057
.*             SPACE=( | CYL          | ,                               06880057
.*                     | BLOCK LENGTH |                                 06920057
.*                                                                      06960057
.*                     (PRIMARY QUANTITY |,SECONDARY QUANTITY|)         07000057
.*                                                                      07040057
.*                     |,RLSE | |,CONTIG | |,ROUND |)                   07080057
.*                     |,     | |,       |                              07120057
.*                                                                      07160057
.*             DISP=(|NEW | |,DELETE | |,DELETE |)                      07200057
.*                   |OLD | |,KEEP   | |,KEEP   |                       07240057
.*                   |SHR | |,CATLG  | |,CATLG  |                       07280057
.*                   |MOD | |,UNCATLG| |,UNCATLG|                       07320057
.*                   |,   | |,       |                                  07360057
.*                                                                      07400057
.*                  DEFAULT: DISP=(SHR,KEEP,KEEP)                       07440057
.*                                                                      07480057
.*             LABEL=( |DATA SET SEQUENCE NUMBER| |,SL |                07520057
.*                                                |,NL |                07560057
.*                                                |,BLP|                07600057
.*                                                |,LTM|                07640057
.*                                                |,   |                07680057
.*                                                                      07720057
.*                     |,PASSWORD| |,RETPD|)                            07760057
.*                     |,NOPWREAD|                                      07800057
.*                                                                      07840057
.*             PASSW=PASSWORD                                           07880057
.*                                                                      07920057
.*             SSREQ= SUB-SYSTEM NAME                                   07960057
.*                                                                      08000057
.*             PERMA=PERMA                                              08040057
.*                                                                      08080057
.*             CNVRT=CNVRT                                              08120057
.*                                                                      08160057
.*             SYSOUT=( |SYSOUT CLASS| |,PROGRAM NAME| )                08200057
.*                                                                      08240057
.*  OUTPUT= SPACE IS ALLOCATED AND INITIALIZED FOR A DATA SET MODEL.    08280057
.*                                                                      08320057
.*  EXIT NORMAL=  N/A                                                   08360057
.*                                                                      08400057
.*  EXIT ERROR= N/A                                                     08440057
.*                                                                      08480057
.*  EXTERNAL REFERENCES= SEE BELOW                                      08520057
.*                                                                      08560057
.*     ROUTINES= NONE                                                   08600057
.*                                                                      08640057
.*     DATA AREAS=  NONE                                                08680057
.*                                                                      08720057
.*     CONTROL BLOCKS=  ACB                                             08760057
.*                      DCB                                             08800057
.*                      RPL                                             08840057
.*                      AMS SYSIN TEXT LIST                             08880057
.*                                                                      08920057
.*  TABLES=  NONE                                                       08960057
.*                                                                      09000057
.*  MACROS=  OPEN  MVS SYSTEM MACRO (LIST FORM)                         09040057
.*           BLSCAMM1  COUNT PARAMETER SUBLIST ENTRIES                  09080057
.*           BLSCAMM2  OBTAIN PARAMETER SUBLIST ENTRY CHARACTER STRING  09120057
.*                                                                      09160057
.*  CHANGE ACTIVITY=                                                    09200057
.*         THIS MODULE IS WRITTEN FOR @G57LPSR                          09240057
.*                                                                      09280057
.*  MESSAGES ISSUED=                                                    10270057
.*     MACRO COMPILE TIME MESSAGES (MNOTE MESSAGES)                     10350057
.*     8,VALUE '&TT' INVALID FOR DATA SET TYPE CODE. MUST BE 'V'        10370057
.*       OR 'Q'. THE ACB/DCB AND RPL ADDRESSES ARE SET TO ZERO.         10406057
.*     8,VALUE '&AMS' INVALID FOR AMS REQUEST PARAMETER. ADDRESS OF     10500057
.*       AMS SYSIN TEXT IS SET TO ZERO.                                 10540057
.*     8,'&VERB' IS AN INVALID DYRB VERB. DYRB VERB CODE IS SET TO      10580057
.*        ZERO.                                                         10620057
.*     8,INVALID FLAGSX LIST. NO FLAGSX BITS ARE SET.                   10660057
.*     8,'VALUE' IS AN INVALID VALUE FOR 'DYRB(Y,Z)'. NO FLAGSX BIT IS  10700057
.*       SET.                                                           10740057
.*     8,'VALUE' IS AN INVALID VALUE FOR 'PARMNAME(FIELD)'. NO TEXT     10780057
.*       UNIT IS BUILT.                                                 10820057
.*     8,'DSN' KEY OPERAND MUST BE ENCLOSED IN QUOTES. NO 'DSN' TEXT    10860057
.*       UNIT IS BUILT.                                                 10900057
.*     8,'KEYNAME1' KEY IS REQUIRED WITH 'KEYNAME2' KEY. NO 'KEYNAME2'  10940057
.*       TEXT UNIT IS BUILT.                                            10980057
.*     8,'PARMNAME' IS A REQUIRED PARAMETER. NO TEXT UNIT IS BUILT.     11020057
.*     8,INVALID PRIMARY SPACE QUANTITY. NO TEXT UNIT IS BUILT.         11060057
.*     8,INVALID SECONDARY SPACE QUANTITY. NO TEXT UNIT IS BUILT.       11100057
.*                                                                      11140057
.*  DATA SETS ACCESSED= NONE                                            11180057
.*                                                                      11220057
.** END OF SPECIFICATIONS ********************************************* 11260057
         GBLA  &BLSCAGA            SUBLIST PARAMETER COUNT OR NUMBER    11300057
         GBLC  &BLSCAGC            SUBLIST CHARACTER STRING             11340057
         LCLA  &CTR                LOOP COUNTER                         11380057
         LCLA  &A                  ARITHMETIC TEMPORARY                 11420057
         LCLC  &C                  CHARACTER TEMPORARY                  11460057
.*   SET UP DEFAULTS FOR DATA SET TYPE                                  11500057
         LCLC  &TT                                                      11540057
&TT      SETC  '&T(1)'             PICK UP DATA SET TYPE CODE           11580057
         AIF   ('&TT' NE '').TSET  TEST FOR NULL                        11620057
&TT      SETC  'V'                 SET DEFAULT TO VSAM                  11660057
.TSET    ANOP                                                           11700057
&C       SETC  '0'                 DEFLT VSAM ESDS PSEUDO REL REC LRECL 11740057
         AIF   (N'&T LT 2 OR '&TT' NE 'V').TSET1   TEST FOR NULL        11780057
&C       SETC  '&T(2)'             SET VSAM ESDS PSEUDO REL REC LRECL   11820057
.TSET1   ANOP                                                           11860057
.* BEGIN MODEL CODE GENERATION                                          11900057
         DS    0D                                                       11940057
&N       DC    A(&NXT)             ADDRESS OF NEXT MODEL                11980057
         DC    A(0)                RESERVED                             12020057
         DC    CL8'&ID'            MODEL NAME                           12060057
         AIF   ('&TT' EQ 'V').ACB     TEST FOR VSAM DATA SET            12100057
         AIF   ('&TT' EQ 'Q').DCB     TEST FOR QSAM (NON-VSAM) DATA SET 12140057
         MNOTE 8,'VALUE ''&TT'' INVALID FOR DATA SET TYPE CODE. MUST BE*12180057
               ''V'' OR ''Q''. THE ACB/DCB AND RPL ADDRESSES ARE SET TO*12220057
                ZERO.'                                                  12260057
         DC    2A(0)               DUMMY ACB/DCB AND RPL ADDRESSES      12300057
         AGO   .JOIN1                                                   12340057
.ACB     ANOP                                                           12380057
         DC    A(ACB&N)            ADDRESS OF ACB CONTROL BLOCK         12420057
         DC    A(RPL&N)            ADDRESS OF RPL CONTROL BLOCK         12460057
         AGO   .JOIN1                                                   12500057
.DCB     ANOP                                                           12540057
         DC    A(DCB&N)            ADDRESS OF DCB CONTROL BLOCK         12580057
         DC    A(0)                UNUSED FOR QSAM                      12620057
.JOIN1   ANOP                                                           12660057
         DC    A(OPCL&N)           ADDRESS OF OPEN/CLOSE LIST           12700057
         DC    A(DYRB&N)           ADDRESS OF DYNALLOC REQUEST BLOCK    12740057
         AIF   ('&AMS' EQ 'AMS').AMS TEST FOR AMS REQUESTED             12780057
         AIF   ('&AMS' EQ '').AMSNUL TEST FOR AMS NOT REQUESTED         12820057
         MNOTE 8,'VALUE ''&AMS'' INVALID FOR AMS REQUEST PARAMETER. ADD*12860057
               RESS OF AMS SYSIN TEXT IS SET TO ZERO.'                  12900057
.AMSNUL  ANOP                                                           12940057
         DC    A(0)                NO AMS SYSIN TEXT SUPPLIED           12980057
         AGO   .JOIN2                                                   13020057
.AMS     DC    A(AMS&N)            ADDRESS OF AMS SYSIN TEXT            13060057
.JOIN2   ANOP                                                           13100057
         DC    F'&C'               VSAM ESDS PSEUDO RELATIVE REC LRECL  13140057
         AIF   ('&TT' EQ 'V').ACB1    TEST FOR VSAM DATA SET            13180057
         AIF   ('&TT' EQ 'Q').DCB1    TEST FOR QSAM DATA SET            13220057
         AGO   .JOIN3                                                   13260057
.ACB1    ANOP                                                           13300057
         DS    0F                                                       13340057
ACB&N    DC    XL76'0'             RESERVE SPACE FOR ACB                13380057
RPL&N    DC    XL76'0'             RESERVE SPACE FOR RPL                13420057
         AGO   .JOIN3                                                   13460057
.DCB1    ANOP                                                           13500057
         DS    0F                                                       13540057
DCB&N    DC    XL96'0'             RESERVE SPACE FOR DCB                13580057
.JOIN3   ANOP                                                           13620057
*   OPEN/CLOSE LIST                                                     13660057
         DS    4A(0)               RESERVE SPACE FOR OPEN/CLOSE LIST    13700057
         ORG   *-16                RESET TO LIST ORIGIN                 13740057
OPCL&N   OPEN  &OPEN,MF=L          OPEN/CLOSE LIST MODEL                13780057
         ORG   ,                   RESTORE LOC COUNTER                  13820057
.*   DYNAMIC ALLOCATION REQUEST BLOCK                                   13860057
.*   BUILD THE DYRB VERB FIELD                                          13900057
         LCLC  &VERB               TEMP FOR VERB CODE                   13940057
.AL      AIF   ('&DYRB(1)' NE 'AL').VBT TEST FOR DSNAME ALLOCATE VERB   13980057
&VERB    SETC  '1'                                                      14020057
         AGO   .VBT                BRANCH AROUND REST OF VERBS          14060057
.* THESE VERBS DISABLED BECAUSE TEXT UNITS FOR THEM NOT BUILT           14100057
.UN      AIF   ('&DYRB(1)' NE 'UN').CC TEST FOR UNALLOCATE VERB         14140057
&VERB    SETC  '2'                                                      14180057
.CC      AIF   ('&DYRB(1)' NE 'CC').DC TEST FOR CONCATENATE VERB        14220057
&VERB    SETC  '3'                                                      14260057
.DC      AIF   ('&DYRB(1)' NE 'DC').RI TEST FOR DECONCATENATE VERB      14300057
&VERB    SETC  '4'                                                      14340057
.RI      AIF   ('&DYRB(1)' NE 'RI').DN TEST FOR REMOVE IN-USE ATTR VERB 14380057
&VERB    SETC  '5'                                                      14420057
.DN      AIF   ('&DYRB(1)' NE 'DN').IN TEST FOR DDANME ALLOCATE VERB    14460057
&VERB    SETC  '6'                                                      14500057
.IN      AIF   ('&DYRB(1)' NE 'IN').VBT TEST FOR RETRIEVE INFORMATION   14540057
&VERB    SETC  '7'                                                      14580057
.VBT     AIF   ('&VERB' NE '').VBOK TEST FOR VALID VERB                 14620057
&VERB    SETC  '0'                 INVALID VERB CODE                    15670057
         MNOTE 8,'''&VERB'' IS AN INVALID DYRB VERB. DYRB VERB CODE IS *15710057
               SET TO ZERO.'                                            15750057
.VBOK    ANOP                                                           15850057
.*   BUILD THE DYRB FLAGS1 FIELD                                        15890057
         LCLB  &F(16)              FLAGS1 BIT MAP                       15930057
         LCLC  &FLAGS1             FLAGS1 TEMP                          15970057
         BLSCAMM1 &DYRB(2)         COUNT FLAGS1 ENTRIES INTO &BLSCAGA   16010057
         AIF   (&BLSCAGA GE 0).FL1A TEST FOR VALID FIELD                16050057
         MNOTE 8,'INVALID FLAGS1 LIST, NO FLAGS1 BITS ARE SET'          16090057
.FL1A    ANOP                                                           16130057
&CTR     SETA  &BLSCAGA            COUNT OF FLAGS TO BE SET             16170057
         AGO   .TEST1                                                   16210057
.* LOOP TO EXAMINE ALL FLAGS1 PARAMETERS SUPPLIED                       16250057
.LOOP1   ANOP                                                           16290057
         BLSCAMM2 &DYRB(2),&CTR   EXTRACT PARM SUBLIST CHAR STRING      16330057
.*                                INTO &BLSCAGA                         16370057
&C       SETC  '&BLSCAGC'         MAKE LOCAL COPY OF SUB-PARAMETER      16410057
         AIF   ('&C' EQ 'ONCVN' OR '&C' EQ 'NOCVN' OR '&C' EQ 'NOMNT'  *16450057
               OR '&C' EQ 'JBSYS').OK1  TEST FOR VALID SUB-FIELD VALUE  16490057
         MNOTE 8,'''&C'' IS AN INVALID VALUE FOR ''DYRB(2,&CTR)''.  NO *16530057
               FLAGS1 BIT IS SET.'                                      16570057
         AGO   .CNT1                                                    16610057
.OK1     ANOP                                                           16650057
         AIF   ('&C' NE 'ONCVN').F1 TEST NOT CONVERIBLE ALLOC           16690057
&F(1)    SETB  1                   EXISTING ALLOC MUST HAVE CONVERTIBLE 16730057
.*                                 ATTRIBUTE TO BE USED FOR THIS REQUST 16770057
.F1     AIF   ('&C' NE 'NOCVN').F2 TEST NOT NO EXISTING ALLOC           16810057
&F(2)    SETB  1                   DON'T USE EXISTING ALLOC FOR REQUEST 17060057
.F2     AIF   ('&C' NE 'NOMNT').F3 TEST NOT NO MOUNT OR OFFLINE DEVS    17100057
&F(3)    SETB  1                   DO NOT MOUNT VOLS OR OFFLINE DEVICES 17140057
.F3     AIF   ('&C' NE 'JBSYS').CNT1 TEST NOT DATA LIKE SYSOUT          17250057
&F(4)    SETB  1                   TREAT THIS DATA SET LIKE SYSOUT      17280057
.CNT1    ANOP                                                           17310057
&CTR     SETA  &CTR-1              DECREMENT SUB-FIELD COUNTER          17340057
.TEST1   AIF   (&CTR GT 0).LOOP1                                        17370057
.* LOOP END, NOW GENERATE FLAGS1 FIELD                                  17470057
&FLAGS1  SETC  '&F(1)&F(2)&F(3)&F(4)&F(5)&F(6)&F(7)&F(8).00000000'      17510057
.*   BUILD THE DYRB FLAGS2 FIELD                                        17550057
         LCLB  &G(32)              FLAGS2 BIT MAP                       17650057
         LCLC  &FLAGS2             FLAGS2 TEMP                          17690057
         BLSCAMM1 &DYRB(3)         COUNT FLAGS2 ENTRIES INTO &BLSCAGA   17730057
         AIF   (&BLSCAGA GE 0).FL2A TEST FOR VALID FIELD                17770057
         MNOTE 8,'INVALID FLAGS2 LIST, NO FLAGS2 BITS ARE SET'          17810057
.FL2A    ANOP                                                           17850057
&CTR     SETA  &BLSCAGA            COUNT OF FLAGS TO BE SET             17890057
         AGO   .TEST2                                                   17930057
.* LOOP TO EXAMINE ALL FLAGS2 PARAMETERS SUPPLIED                       17970057
.LOOP2   ANOP                                                           18010057
         BLSCAMM2 &DYRB(3),&CTR    EXTRACT PARM SUBLIST CHAR STRING     18050057
.*                                 INTO &BLSCAGA                        18090057
&C       SETC  '&BLSCAGC'          MAKE LOCAL COPY OF SUB-PARAMETER     18130057
         AIF   ('&C' EQ 'WTVOL' OR '&C' EQ 'WTDSN' OR '&C' EQ 'NORES'  *18170057
               OR '&C' EQ 'WTUNT' OR '&C' EQ 'OFFLN' OR '&C' EQ        *18210057
               'TIONQ').OK2 TEST FOR VALID SUB-FIELD                    18250057
         AIF   ('&C' EQ 'CATLG' OR '&C' EQ 'MOUNT' OR '&C' EQ 'UDEVT'  *18290057
               OR '&C' EQ 'PCINT').OK2  TEST FOR VALID SUB-FIELD        18330057
         MNOTE 8,'''&C'' IS AN INVALID VALUE FOR ''DYRB(3,&CTR)''.  NO *18370057
               FLAGS2 BIT IS SET.'                                      18410057
         AGO   .CNT2                                                    18450057
.OK2     ANOP                                                           18490057
         AIF   ('&C' NE 'WTVOL').G2 TEST NOT WAIT FOR VOLUMES           18530057
&G(1)    SETB  1                   WAIT FOR VOLUMES                     18570057
.G2      AIF   ('&C' NE 'WTDSN').G3 TEST NOT WAIT FOR DSNAME            18610057
&G(2)    SETB  1                   WAIT FOR DSNAME                      18650057
.G3      AIF   ('&C' NE 'NORES').G4 TEST NOT DON'T RESERVE DATA SETS    18690057
&G(3)    SETB  1                   DO NOT RESERVE DATA SETS             18730057
.G4      AIF   ('&C' NE 'WTUNT').G5 TEST NOT WAIT FOR UNITS             18770057
&G(4)    SETB  1                   WAIT FOR UNITS                       18810057
.G5      AIF   ('&C' NE 'OFFLN').G6 TEST NOT CONSIDER OFFLINE DEVICES   18850057
&G(5)    SETB  1                   CONSIDER OFFLINE DEVICES             18890057
.G6      AIF   ('&C' NE 'TIONQ').G7 TEST NOT TIOT ENQUED                18930057
&G(6)    SETB  1                   TIOT ENQ ALREADY PERFORMED           18970057
.G7      AIF   ('&C' NE 'CATLG').G8 TEST NOT SET CATALOG INDS           19010057
&G(7)    SETB  1                   SET SPECIAL CATALOG DATA SET INDS    19050057
.G8      AIF   ('&C' NE 'MOUNT').G9 TEST NOT VOLUMES MAY BE MOUNTED     19090057
&G(8)    SETB  1                   VOLUMES MAY BE MOUNTED               19130057
.G9      AIF   ('&C' NE 'UDEVT').G10 TEST NOT UNITPARM IS DEVTYPE       19170057
&G(9)    SETB  1                   UNITNAME PARAMETER IS A DEVICE TYPE  19580057
.G10     AIF   ('&C' NE 'PCINT').CNT2 TEST NOT ALLOC PRIVATE CATALOG    19610057
&G(10)   SETB  1                   ALLOCATE A PRIVATE CATALOG FOR INIT  19700057
.CNT2    ANOP                                                           19740057
&CTR     SETA  &CTR-1              DECREMENT SUB-FIELD COUNTER          19780057
.TEST2   AIF   (&CTR GT 0).LOOP2                                        19820057
.* LOOP END, NOW GENERATE FLAGS2 FIELD                                  19860057
&FLAGS2  SETC  '&G(1)&G(2)&G(3)&G(4)&G(5)&G(6)&G(7)&G(8)&G(9)&G(10)&G(1*19900057
               1)&G(12)&G(13)&G(14)&G(15)&G(16).0000000000000000'       19940057
.*   BUILD TEXT UNIT POINTERS                                           19980057
         LCLA  &NTUDEF             NUMBER OF TEXT UNITS DEFINED         20020057
&NTUDEF  SETA  29                  INITIALIZE                           20060057
         LCLB  &P(29)              TEXT UNIT PARAMETER BIT MAP          20100057
         LCLC  &TPA(29)            TEXT UNIT ADDRESS MODELS             20140057
.* INITIALIZE TEXT UNIT POINTER ADDRESS MODELS                          20180057
&TPA(1)  SETC  'RTDDN'                                                  20220057
&TPA(2)  SETC  'RTDSN'                                                  20260057
&TPA(3)  SETC  'RTVOL'                                                  20300057
&TPA(4)  SETC  'RTORG'                                                  20340057
&TPA(5)  SETC  'DDNAM'                                                  20380057
&TPA(6)  SETC  'DSNAM'                                                  20420057
&TPA(7)  SETC  'VLSER'                                                  20460057
&TPA(8)  SETC  'UNIT'                                                   20500057
&TPA(9)  SETC  'SSREQ'                                                  20540057
&TPA(10) SETC  'PASSW'                                                  20580057
&TPA(11) SETC  'PERMA'                                                  20620057
&TPA(12) SETC  'CNVRT'                                                  20660057
&TPA(13) SETC  'STATS'                                                  20700057
&TPA(14) SETC  'NDISP'                                                  20740057
&TPA(15) SETC  'CDISP'                                                  20780057
&TPA(16) SETC  'TRK'                                                    20820057
&TPA(17) SETC  'CYL'                                                    21150057
&TPA(18) SETC  'BLKLN'                                                  21190057
&TPA(19) SETC  'PRIME'                                                  21230057
&TPA(20) SETC  'SECND'                                                  21270057
&TPA(21) SETC  'RLSE'                                                   21310057
&TPA(22) SETC  'SPFRM'                                                  21350057
&TPA(23) SETC  'ROUND'                                                  21390057
&TPA(24) SETC  'DSSEQ'                                                  21430057
&TPA(25) SETC  'LABEL'                                                  21470057
&TPA(26) SETC  'PASPR'                                                  21510057
&TPA(27) SETC  'RETPD'                                                  21550057
&TPA(28) SETC  'SYSOC'                                                  21590057
&TPA(29) SETC  'SYSOP'                                                  21630057
.*   BUILD THE TEXT UNIT PARAMETER BIT MAP FOR THE RTDATA KEYWORD       21670057
&CTR     SETA  N'&RTDATA           COUNT OF SUBFIELDS                   21710057
         AGO   .TEST3                                                   21750057
.* LOOP TO EXAMINE ALL RTDATA PARAMETERS SUPPLIED                       21790057
.LOOP3   ANOP                                                           21830057
&C       SETC  '&RTDATA(&CTR)'     MAKE LOCAL COPY OF SUB-PARAMETER     21870057
         AIF   ('&C' EQ 'RTDDN' OR '&C' EQ 'RTDSN' OR '&C' EQ 'RTVOL'  *21910057
               OR '&C' EQ 'RTORG').OK3  TEST FOR VALID SUB-FIELD VALUE  21950057
         MNOTE 8,'''&C'' IS AN INVALID VALUE FOR ''RTDATA(&CTR)''.  NO *21990057
               TEXT UNIT IS BUILT'                                      22030057
         AGO   .CNT3                                                    22070057
.OK3     ANOP                                                           22350057
         AIF   ('&C' NE 'RTDDN').P2 TEST NOT RETURN DDNAME              22400057
&P(1)    SETB  1                   RETURN ASSOCIATED DDNAME             22450057
.P2      AIF   ('&C' NE 'RTDSN').P3 TEST NOT RETURN DSNAME              22500057
&P(2)    SETB  1                   RETURN ALLOCATED DATA SET NAME       22550057
.P3      AIF   ('&C' NE 'RTVOL').P4 TEST NOT RETURN VOLSER              22590057
&P(3)    SETB  1                   RETURN VOLUME SERIAL                 22630057
.P4      AIF   ('&C' NE 'RTORG').CNT3 TEST NOT RETURN DSORG             22670057
&P(4)    SETB  1                   RETURN THE DATA SET ORGANIZATION     22710057
.CNT3    ANOP                                                           22750057
&CTR     SETA  &CTR-1              DECREMENT SUB-FIELD COUNTER          22790057
.TEST3   AIF   (&CTR GT 0).LOOP3                                        22830057
.*    LOOP END                                                          22870057
.*   DO SET UP FOR THE DDNAME KEYWORD                                   22910057
&P(5)    SETB  ('&DDNAME' NE '')   DDNAME KEYWORD PRESENT               22950057
.*   DO SET UP FOR THE DSN KEYWORD                                      22990057
         AIF   ('&DSN' EQ '').END6 DSN KEY NOT PRESENT                  23030057
&C       SETC  '&DSN'(1,1)         FIRST BYTE OF DS NAME                23070057
         AIF   ('&C' EQ '''').OK6  SHOULD BE SINGLE QUOTE               23110057
         MNOTE 8,'''DSN'' KEY OPERAND MUST BE ENCLOSED IN SINGLE QUOTES*23150057
               . NO ''DSN'' TEXT UNIT IS BUILT'                         23190057
         AGO   .END6                                                    23230057
.OK6     ANOP                                                           23270057
&P(6)    SETB  1                   DSN KEYWORD PRESENT                  23310057
.END6    ANOP                                                           23350057
.*   DO SET UP FOR THE VOL KEYWORD                                      23390057
&P(7)    SETB  ('&VOL' NE '')      VOL KEYWORD PRESENT                  23430057
.*   DO SET UP FOR THE UNIT KEYWORD                                     23470057
&P(8)    SETB  ('&UNIT' NE '')     UNIT KEYWORD PRESENT                 23510057
.*   DO SET UP FOR THE SSREQ KEYWORD                                    23550057
&P(9)    SETB  ('&SSREQ' NE '')    SSREQ KEYWORD PRESENT                23590057
.*   DO SET UP FOR THE PASSWORD KEYWORD                                 23630057
         AIF   ('&PASSW' EQ '').END10 PASSW KEY NOT PRESENT             23670057
         AIF   ('&DSN' NE '').OK10 DSN KEY MUST BE ALSO PRESENT         23710057
         MNOTE 8,'''DSN'' KEY IS REQUIRED WITH ''PASSW'' KEY. NO ''PASS*23750057
               WORD'' TEXT UNIT IS BUILT'                               23790057
         AGO   .END10                                                   23830057
.OK10    ANOP                                                           23870057
&P(10)   SETB  1                   PASSW KEYWORD PRESENT                24250057
.END10   ANOP                                                           24290057
.*   DO SET UP FOR THE PERMA KEYWORD                                    24330057
         AIF   ('&PERMA' EQ '').END11 PERMA KEY NOT PRESENT             24370057
         AIF   ('&CNVRT' EQ '').OK11 CNVRT KEY MUST NOT BE PRESENT      24410057
         MNOTE 8,'''CNVRT'' KEY IS INVALID WITH ''PERMA'' KEY. NO ''PER*24450057
               MA'' TEXT UNIT IS BUILT'                                 24490057
         AGO   .END11                                                   24530057
.OK11    ANOP                                                           24570057
&P(11)   SETB  1                   PERMA KEYWORD PRESENT                24610057
.END11   ANOP                                                           24650057
&P(12)   SETB  ('&CNVRT' NE '')    CNVRT KEYWORD PRESENT                24690057
.*   BUILD THE TEXT UNIT PARAMETER BIT MAP FOR THE DISP KEYWORD         24730057
         LCLA  &STATS,&NDISP,&CDISP                                     24770057
&CTR     SETA  N'&DISP             COUNT OF SUBFIELDS                   24810057
         AIF   (&CTR EQ 0).END15   TEST IF DISP KEYWORD NOT SPECIFIED   24850057
.*   DISP KEY IS MUTUALLY EXCLUSIVE WITH SYSOUT KEY                     24890057
         AIF   ('&SYSOUT' EQ '').P13AA SYSOUT KEY MUST NOT BE PRESENT   24930057
         MNOTE 8,'''SYSOUT'' KEY IS INVALID WITH ''DISP'' KEY. NO ''DIS*24970057
               P'' TEXT UNITS ARE BUILT'                                25010057
         AGO   .END15                                                   25050057
.P13AA   ANOP                                                           25090057
.*    EXAMINE THE STATUS SUB-FIELD                                      25130057
&C       SETC  '&DISP(1)'          MAKE LOCAL COPY OF SUB-FIELD         25170057
         AIF   ('&C' EQ '').END13  TEST STATUS=NULL                     25210057
.P13A    AIF   ('&C' NE 'OLD').P13B TEST NOT STATUS=OLD                 25250057
&STATS   SETA  1                   STATUS=OLD                           25290057
.P13B    AIF   ('&C' NE 'MOD').P13C TEST NOT STATUS=MOD                 25330057
&STATS   SETA  2                   STATUS=MOD                           25370057
.P13C    AIF   ('&C' NE 'NEW').P13D TEST NOT STATUS=NEW                 25410057
&STATS   SETA  4                   STATUS=NEW                           25450057
.P13D    AIF   ('&C' NE 'SHR').P13E TEST NOT STATUS=SHR                 25490057
&STATS   SETA  8                   STATUS=SHR                           25530057
.P13E    AIF   (&STATS NE 0).OK13  TEST FOR VALID SUBFIELD VALUE        25570057
         MNOTE 8,'''&C'' IS AN INVALID VALUE FOR ''DISP(1)''.  NO TEXT *25610057
               UNIT IS BUILT'                                           25650057
         AGO   .END13                                                   25690057
.OK13    ANOP                                                           25730057
&P(13)   SETB  1                   STATUS SUB-FIELD PRESENT             25770057
.END13   ANOP                                                           25810057
.*   EXAMINE THE NORMAL DISPOSITION SUB-FIELD                           25850057
         AIF   (&CTR LT 2).END15   TEST IF NORMAL DISP NOT SPECIFIED    25890057
&C       SETC  '&DISP(2)'          MAKE LOCAL COPY OF SUB-FIELD         25930057
         AIF   ('&C' EQ '').END14  TEST NORMAL DISP=NULL                25970057
.P14A    AIF   ('&C' NE 'UNCATLG').P14B TEST NOT NORMAL DISP=UNCATLG    26010057
&NDISP   SETA  1                   NORMAL DISP=UNCATLG                  26050057
.P14B    AIF   ('&C' NE 'CATLG').P14C TEST NOT NORMAL DISP=CATLG        26090057
&NDISP   SETA  2                   NORMAL DISP=CATLG                    26130057
.P14C    AIF   ('&C' NE 'DELETE').P14D TEST NOT NORMAL DISP=DELETE      26170057
&NDISP   SETA  4                   NORMAL DISP=DELETE                   26210057
.P14D    AIF   ('&C' NE 'KEEP').P14E TEST NOT NORMAL DISP=KEEP          26250057
&NDISP   SETA  8                   NORMAL DISP=KEEP                     26290057
.P14E    AIF   (&NDISP NE 0).OK14  TEST FOR VALID SUBFIELD VALUE        26330057
         MNOTE 8,'''&C'' IS AN INVALID VALUE FOR ''DISP(2)''.  NO TEXT *26370057
               UNIT IS BUILT'                                           26410057
         AGO   .END14                                                   26450057
.OK14    ANOP                                                           26490057
&P(14)   SETB  1                   NORMAL DISP SUB-FIELD PRESENT        26530057
.END14   ANOP                                                           26570057
.*   EXAMINE THE CONDITIONAL DISPOSITION SUB-FIELD                      26610057
         AIF   (&CTR LT 3).END15   TEST IF CONDITION DISP NOT SPECIFIED 26650057
&C       SETC  '&DISP(3)'          MAKE LOCAL COPY OF SUB-FIELD         26690057
         AIF   ('&C' EQ '').END15  TEST CONDITIONAL DISP=NULL           26730057
.P15A    AIF   ('&C' NE 'UNCATLG').P15B TEST NOT CONDITION DISP=UNCATLG 26770057
&CDISP   SETA  1                   CONDITIONAL DISP=UNCATLG             26810057
.P15B    AIF   ('&C' NE 'CATLG').P15C TEST NOT CONDITIONAL DISP=CATLG   26850057
&CDISP   SETA  2                   CONDITIONAL DISP=CATLG               26890057
.P15C    AIF   ('&C' NE 'DELETE').P15D TEST NOT CONDITIONAL DISP=DELETE 26930057
&CDISP   SETA  4                   CONDITIONAL DISP=DELETE              26970057
.P15D    AIF   ('&C' NE 'KEEP').P15E TEST NOT CONDITIONAL DISP=KEEP     27010057
&CDISP   SETA  8                   CONDITIONAL DISP=KEEP                27050057
.P15E    AIF   (&CDISP NE 0).OK15  TEST FOR VALID SUBFIELD VALUE        27090057
         MNOTE 8,'''&C'' IS AN INVALID VALUE FOR ''DISP(3)''.  NO TEXT *27130057
               UNIT IS BUILT'                                           27900057
         AGO   .END15                                                   27920057
.OK15    ANOP                                                           28000057
&P(15)   SETB  1                   CONDITIONAL DISP SUB-FIELD PRESENT   28040057
.END15   ANOP                                                           28080057
.*   BUILD THE TEXT UNIT PARAMETER BIT MAP FOR THE SPACE KEYWORD        28120057
&CTR     SETA  N'&SPACE             COUNT OF SUBFIELDS                  28160057
         AIF   (&CTR EQ 0).END23   TEST IF SPACE KEYWORD NOT SPECIFIED  28200057
.*    EXAMINE THE TYPE SUB-FIELD                                        28240057
&C       SETC  '&SPACE(1)'          MAKE LOCAL COPY OF SUB-FIELD        28280057
         AIF   ('&C' NE '').P16    TEST NOT TYPE=NULL                   28320057
         MNOTE 8,'SPACE(1) IS A REQUIRED PARAMETER. NO TEXT UNIT IS BUI*28360057
               LT'                                                      28500057
         AGO   .END18                                                   28520057
.P16     AIF   ('&C' NE 'TRK').P17 TEST NOT TYPE=TRK                    28600057
&P(16)   SETB  1                   TYPE=TRK                             28640057
         AGO   .END18                                                   28680057
.P17     AIF   ('&C' NE 'CYL').P18 TEST NOT TYPE=CYL                    28720057
&P(17)   SETB  1                   TYPE=CYL                             28760057
         AGO   .END18                                                   28800057
.P18     ANOP                                                           28840057
&P(18)   SETB  1                   TYPE=BLKLEN                          28880057
.END18   ANOP                                                           28920057
.*    EXAMINE THE PRIMARY SPACE QUANTITY SUB-FIELD                      28960057
         BLSCAMM2 &SPACE(2),1      EXTRACT THE PRIMARY SPACE QUANTITY   29000057
.*                                 RETCODE IS IN &BLSCAGA, FIELD IS IN  29040057
.*                                 &BLSCAGC                             29080057
         AIF   (&BLSCAGA GE 0).P19A TEST FOR VALID FIELD EXTRACT        29120057
         MNOTE 8,'INVALID PRIMARY SPACE QUANTITY. NO TEXT UNIT IS BUILT*29160057
               '                                                        29200057
         AGO   .END19                                                   29240057
.P19A    ANOP                                                           29280057
         AIF   ('&BLSCAGC' NE '').P19 PRIMARY SPACE QUANTITY NOT NULL   29320057
         MNOTE 8,'SPACE(2,1) IS A REQUIRED PARAMETER. NO TEXT UNIT IS B*29360057
               UILT'                                                    29400057
         AGO   .END19                                                   29440057
.P19     ANOP                                                           29480057
&P(19)   SETB  1                   PRIMARY SPACE QUANTITY PRESENT       29520057
.END19   ANOP                                                           29560057
.*    EXAMINE THE SECONDARY SPACE QUANTITY SUB-FIELD                    29600057
         BLSCAMM2 &SPACE(2),2      EXTRACT THE SECONDARY SPACE QUANTITY 29640057
.*                                 RETCODE IS IN &BLSCAGA, FIELD IS IN  29680057
.*                                 &BLSCAGC                             29720057
         AIF   (&BLSCAGA GE 0).P20A TEST FOR VALID FIELD EXTRACT        29760057
         MNOTE 8,'INVALID SECONDARY SPACE QUANTITY. NO TEXT UNIT IS BUI*29800057
               LT'                                                      29840057
         AGO   .END20                                                   29880057
.P20A    ANOP                                                           29920057
         AIF   ('&BLSCAGC' EQ '').END20 NULL SECONDARY SPACE QUANTITY   29960057
&P(20)   SETB  1                   SECONDARY SPACE QUANTITY PRESENT     30000057
.END20   ANOP                                                           30040057
.*    EXAMINE THE UNUSED SPACE RELEASE SUB-FIELD                        30080057
&C       SETC  '&SPACE(3)'          MAKE LOCAL COPY OF SUB-FIELD        30120057
         AIF   ('&C' EQ '').END21  TEST FIELD=NULL                      30160057
         AIF   ('&C' EQ 'RLSE').P21 TEST FOR UNUSED SPACE RELEASE       30200057
         MNOTE 8,'''&C'' IS AN INVALID VALUE FOR ''SPACE(3)''. NO TEXT *30240057
               UNIT IS BUILT'                                           30280057
         AGO   .END21                                                   30320057
.P21     ANOP                                                           30360057
&P(21)   SETB  1                   UNUSED SPACE RELEASE FIELD PRESENT   30400057
.END21   ANOP                                                           30440057
.*    EXAMINE THE FORMAT OF ALLOCATED SPACE SUB-FIELD                   30480057
&C       SETC  '&SPACE(4)'          MAKE LOCAL COPY OF SUB-FIELD        30520057
         AIF   ('&C' EQ '').END22  TEST FIELD=NULL                      30560057
         AIF   ('&C' EQ 'CONTIG').P22 TEST FOR FORMAT OF ALLOC SPACE    30600057
         MNOTE 8,'''&C'' IS AN INVALID VALUE FOR ''SPACE(4)''. NO TEXT *30640057
               UNIT IS BUILT'                                           30680057
         AGO   .END22                                                   31250057
.P22     ANOP                                                           31290057
&P(22)   SETB  1                   FORMAT OF ALLOC SPACE FIELD PRESENT  31330057
.END22   ANOP                                                           31370057
.*    EXAMINE THE WHOLE CYLINDER ALLOCATION SUB-FIELD                   31410057
&C       SETC  '&SPACE(5)'          MAKE LOCAL COPY OF SUB-FIELD        31450057
         AIF   ('&C' EQ '').END23  TEST FIELD=NULL                      31490057
         AIF   ('&C' EQ 'ROUND').P23 TEST FOR WHOLE CYLINDER ALLOC      31530057
         MNOTE 8,'''&C'' IS AN INVALID VALUE FOR ''SPACE(5)''. NO TEXT *31570057
               UNIT IS BUILT'                                           31610057
         AGO   .END23                                                   31650057
.P23     ANOP                                                           31690057
&P(23)   SETB  1                   WHOLE CYLINDER ALLOC FIELD PRESENT   31730057
.END23   ANOP                                                           31770057
.*   BUILD THE TEXT UNIT PARAMETER BIT MAP FOR THE LABEL KEYWORD        31810057
         LCLA  &LABELTY,&PASPR                                          31850057
&CTR     SETA  N'&LABEL            COUNT OF SUBFIELDS                   31890057
         AIF   (&CTR EQ 0).END27   TEST IF LABEL KEYWORD NOT SPECIFIED  31930057
.*   LABEL KEY IS MUTUALLY EXCLUSIVE WITH SYSOUT KEY                    31970057
         AIF   ('&SYSOUT' EQ '').P24AA SYSOUT KEY MUST NOT BE PRESENT   32010057
         MNOTE 8,'''SYSOUT'' KEY IS INVALID WITH ''LABEL'' KEY. NO ''LA*32050057
               BEL'' TEXT UNITS ARE BUILT'                              32090057
         AGO   .END27                                                   32130057
.P24AA   ANOP                                                           32170057
.*    EXAMINE THE DATA SET SEQUENCE NUMBER SUB-FIELD                    32210057
         AIF   ('&LABEL(1)' EQ '').END24  NULL DATA SET SEQUENCE NUMBER 32250057
&P(24)   SETB  1                   DATA SET SEQUENCE NUMBER PRESENT     32290057
.END24   ANOP                                                           32330057
.*   EXAMINE THE LABEL TYPE SUB-FIELD                                   32370057
         AIF   (&CTR LT 2).END27   IF NO MORE SUB-FIELDS                32410057
&C       SETC  '&LABEL(2)'         MAKE LOCAL COPY OF SUB-FIELD         32450057
         AIF   ('&C' EQ '').END25  TEST LABEL TYPE=NULL                 32490057
.P25A    AIF   ('&C' NE 'NL').P25B TEST NOT LABEL TYPE=NL               32530057
&LABELTY SETA  1                   LABEL TYPE=NL                        32570057
.P25B    AIF   ('&C' NE 'SL').P25C TEST NOT LABEL TYPE=SL               32610057
&LABELTY SETA  2                   LABEL TYPE=SL                        32970057
.P25C    AIF   ('&C' NE 'BLP').P25D TEST NOT LABEL TYPE=BLP             33050057
&LABELTY SETA  10                  LABEL TYPE=BLP                       33100057
.P25D    AIF   ('&C' NE 'LTM').P25E TEST NOT LABEL TYPE=LTM             33130057
&LABELTY SETA  21                  LABEL TYPE=LTM                       33200057
.P25E    AIF   (&LABELTY NE 0).OK25  TEST FOR VALID SUBFIELD VALUE      33230057
         MNOTE 8,'''&C'' IS AN INVALID VALUE FOR ''LABEL(2)''.  NO TEXT*33260057
                UNIT IS BUILT'                                          33290057
         AGO   .END25                                                   33400057
.OK25    ANOP                                                           33440057
&P(25)   SETB  1                   LABEL TYPE SUB-FIELD PRESENT         33480057
.END25   ANOP                                                           33520057
.*   EXAMINE THE PASSWORD PROTECTION SUB-FIELD                          33560057
         AIF   (&CTR LT 3).END27   IF NO MORE SUB-FIELDS                33600057
&C       SETC  '&LABEL(3)'         MAKE LOCAL COPY OF SUB-FIELD         33640057
         AIF   ('&C' EQ '').END26  TEST PASSWORD PROTECTION=NULL        33680057
         AIF   ('&C' NE 'PASSWORD').P26B  NOT PASSWORD PROT=PASSWORD    33720057
&PASPR   SETA  10                  PASSWORD PROTECTION=PASSWORD         33760057
.P26B    AIF   ('&C' NE 'NOPWREAD').P26C  NOT PASSWORD PROT=NOPWREAD    33800057
&PASPR   SETA  30                  PASSWORD PROTECTION=NOPWREAD         33840057
.P26C    AIF   (&PASPR NE 0).OK26  TEST FOR VALID SUBFIELD VALUE        33880057
         MNOTE 8,'''&C'' IS AN INVALID VALUE FOR ''LABEL(3)''.  NO TEXT*33920057
                UNIT IS BUILT'                                          33960057
         AGO   .END26                                                   34000057
.OK26    ANOP                                                           34040057
&P(26)   SETB  1                   PASSWORD PROTECT SUB-FIELD PRESENT   34080057
.END26   ANOP                                                           34120057
.*   DATA SET RETENTION PERIOD SUB-FIELD                                34160057
&P(27)   SETB  (&CTR EQ 4)         RETENTION PERIOD SUB-FIELD PRESENT   34200057
.END27   ANOP                                                           34240057
.*   HANDLE SYSOUT KEYWORD                                              34280057
&CTR     SETA  N'&SYSOUT           COUNT OF SUBFIELDS                   34320057
         AIF   (&CTR EQ 0).END29   SYSOUT KEYWORD NOT PRESENT           34360057
.*  EXAMINE THE SYSOUT CLASS SUB-FIELD                                  34400057
&A       SETA  K'&SYSOUT(1)        LENGTH OF THE SYSOUT CLASS PARM      34440057
         AIF   (&A EQ 1).OK28      SYSOUT CLASS MUST BE ONE BYTE        34480057
&C       SETC  '&SYSOUT(1)'                                             34520057
         MNOTE 8,'''&C'' IS AN INVALID VALUE FOR ''SYSOUT(1)''. NO TEXT*34560057
                UNIT IS BUILT'                                          34600057
         AGO   .END28                                                   34640057
.OK28    ANOP                                                           34680057
&P(28)   SETB  1                   SYSOUT CLASS PRESENT                 34720057
.END28   ANOP                                                           34760057
.*  EXAMINE THE SYSOUT PROGRAM NAME SUB-FIELD                           34800057
         AIF   (&CTR LT 2).END29   NO PROGRAM NAME SUB-FIELD            34840057
&A       SETA  K'&SYSOUT(2)        LENGTH OF THE SYSOUT PROGRAM NAME    34880057
         AIF   (&A GT 0 AND &A LE 8).OK29  NAME MUST BE 1 TO 8 BYTES    34920057
&C       SETC  '&SYSOUT(2)'                                             34960057
         MNOTE 8,'''&C'' IS AN INVALID VALUE FOR ''SYSOUT(2)''. NO TEXT*35000057
                UNIT IS BUILT'                                          35040057
         AGO   .END29                                                   35080057
.OK29    ANOP                                                           35120057
&P(29)   SETB  1                   SYSOUT PROGRAM NAME PRESENT          35160057
.END29   ANOP                                                           35200057
.* COUNT TEXT UNIT PARAMETERS PRESENT                                   35240057
         LCLA  &TUCT               TEXT UNIT PARAMETERS PRESENT         35280057
&CTR     SETA  0                   INIT LOOP COUNTER                    35320057
         AGO   .CNT4                                                    35360057
.LOOP4   ANOP                                                           35400057
         AIF   (NOT &P(&CTR)).CNT4 TEST FOR TEXT UNIT PRESENT           35440057
&TUCT    SETA  &TUCT+1             TEXT UNIT IS PRESENT                 35480057
.CNT4    ANOP                                                           35520057
&CTR     SETA  &CTR+1              BUMP LOOP COUNTER                    35560057
         AIF   (&CTR LE &NTUDEF).LOOP4  TEST LOOP END                   35600057
*   DYNAMIC ALLOCATION REQUEST BLOCK                                    35640057
         DS    0F                                                       35680057
DYRB&N   DC    HL1'20'             DYRB LENGTH FIELD                    35720057
         DC    HL1'&VERB'          DYRB VERB CODE                       35760057
         DC    BL2'&FLAGS1'        FLAGS1 FIELD                         35800057
         DC    2XL2'0'             ERROR AND INFORMATIONAL REASON CODES 35840057
         AIF   (&TUCT EQ 0).TPP1   TEST FOR TEXT UNITS PRESENT          35880057
         DC    A(DYTP&N)           ADDRESS OF TEXT UNIT POINTERS        35920057
         AGO   .TPP2                                                    35960057
.TPP1    DC    A(0)                NO TEXT UNITS PRESENT                36000057
.TPP2    ANOP                                                           36040057
         DC    A(0)                RESERVED                             36080057
         DC    BL4'&FLAGS2'        FLAGS2 FIELD                         36120057
*   TEXT UNIT POINTERS                                                  36160057
         AIF   (&TUCT EQ 0).DONE   TEST FOR NO TEXT UNITS PRESENT       36200057
DYTP&N   DC    0F'0'               ALIGN LIST TO FULL WORD              36240057
.*   BUILD TEXT UNIT POINTER ENTRIES                                    36280057
         LCLA  &TUCTA              TEXT UNIT COUNTER                    36320057
&CTR     SETA  0                   INIT LOOP COUNTER                    36360057
&TUCTA   SETA  1                   INIT TEXT UNIT COUNTER               36400057
         AGO   .CNT5                                                    36440057
.LOOP5   ANOP                                                           36480057
         AIF   (NOT &P(&CTR)).CNT5 TEST FOR TEXT UNIT PRESENT           36520057
         AIF   (&TUCTA EQ &TUCT).LAST5  TEST FOR LAST TEXT UNIT         36560057
         DC    A(&TPA(&CTR)&N)     TEXT UNIT ADDRESS                    36600057
&TUCTA   SETA  &TUCTA+1            TEXT UNIT COUNTER                    36640057
         AGO   .CNT5                                                    36680057
.LAST5   ANOP                                                           36720057
         DC    X'80',AL3(&TPA(&CTR)&N)  LAST TEXT UNIT ADDRESS          36760057
         AGO   .END5                                                    36800057
.CNT5    ANOP                                                           36840057
&CTR     SETA  &CTR+1              BUMP LOOP COUNTER                    36880057
         AIF   (&CTR LE &NTUDEF).LOOP5  TEST LOOP END                   36920057
.END5    ANOP                                                           36960057
.*   BUILD TEXT UNITS                                                   37000057
*   TEXT UNITS                                                          37040057
.* RETURN DDNAME TEXT UNIT                                              37080057
         AIF   (NOT &P(1)).NOT1    TEST NOT RETURN DDNAME               37120057
         DS    0H                  ALIGN TEXT UNIT                      37160057
&TPA(1)&N DC   XL2'55',H'1',H'8',CL8' ' RETURN DDNAME TEXT UNIT         37200057
.NOT1    ANOP                                                           37240057
.* RETURN DSNAME TEXT UNIT                                              37280057
         AIF   (NOT &P(2)).NOT2    TEST NOT RETURN DSNAME               37320057
         DS    0H                  ALIGN TEXT UNIT                      38350000
&TPA(2)&N DC   XL2'56',H'1',H'44',CL44' ' RETURN DSNAME TEXT UNIT       38400057
.NOT2    ANOP                                                           38440057
.* RETURN VOLUME SERIAL TEXT UNIT                                       38480057
         AIF   (NOT &P(3)).NOT3    TEST NOT RETURN VOLUME SERIAL        38520057
         DS    0H                  ALIGN TEXT UNIT                      38600000
&TPA(3)&N DC   XL2'5D',H'1',H'6',CL6' ' RETURN VOLUME SERIAL TEXT UNIT  38650057
.NOT3    ANOP                                                           38690057
.* RETURN DSORG TEXT UNIT                                               38730057
         AIF   (NOT &P(4)).NOT4    TEST NOT RETURN DSORG                38770057
         DS    0H                  ALIGN TEXT UNIT                      38850000
&TPA(4)&N DC   XL2'57',H'1',H'2',CL2' ' RETURN DSORG TEXT UNIT          38900057
.NOT4    ANOP                                                           38940057
.* DDNAME TEXT UNIT                                                     38980057
         AIF   (NOT &P(5)).NOT5    TEST NOT DDNAME                      39020057
&A       SETA  K'&DDNAME                                                39060057
         DS    0H                  ALIGN TEXT UNIT                      39100057
&TPA(5)&N DC   XL2'01',H'1',H'&A',CL&A'&DDNAME' DDNAME TEXT UNIT        39140057
.NOT5    ANOP                                                           39180057
.* DSNAME TEXT UNIT                                                     39220057
         AIF   (NOT &P(6)).NOT6    TEST NOT DSNAME                      39260057
&A       SETA  K'&DSN-2                                                 39300057
         DS    0H                  ALIGN TEXT UNIT                      39340057
&TPA(6)&N DC   XL2'02',H'1',H'&A',CL&A&DSN DSNAME TEXT UNIT             39380057
.NOT6    ANOP                                                           39420057
.* VOLUME SERIAL TEXT UNIT                                              39460057
         AIF   (NOT &P(7)).NOT7    TEST NOT VOLUME SERIAL               39500057
&A       SETA  K'&VOL                                                   39540057
         DS    0H                  ALIGN TEXT UNIT                      39580057
&TPA(7)&N DC   XL2'10',H'1',H'&A',CL&A'&VOL' VOLUME SERIAL TEXT UNIT    39620057
.NOT7    ANOP                                                           39660057
.* UNIT TEXT UNIT                                                       39700057
         AIF   (NOT &P(8)).NOT8    TEST NOT UNIT                        39740057
&A       SETA  K'&UNIT                                                  39780057
         DS    0H                  ALIGN TEXT UNIT                      39820057
&TPA(8)&N DC   XL2'15',H'1',H'&A',CL&A'&UNIT' UNIT TEXT UNIT            39860057
.NOT8    ANOP                                                           39900057
.* SSREQ TEXT UNIT                                                      39940057
         AIF   (NOT &P(9)).NOT9    TEST NOT SSREQ                       39980057
&A       SETA  K'&SSREQ                                                 40020057
         DS    0H                  ALIGN TEXT UNIT                      40350000
&TPA(9)&N DC   XL2'5C',H'1',H'&A',CL&A'&SSREQ' SUB-SYSTEM REQ TEXT UNIT 40400057
.NOT9    ANOP                                                           40440057
.* PASSWORD TEXT UNIT                                                   40480057
         AIF   (NOT &P(10)).NOT10  TEST NOT PASSWORD                    40520057
&A       SETA  K'&PASSW                                                 40560057
         DS    0H                  ALIGN TEXT UNIT                      40600057
&TPA(10)&N DC  XL2'50',H'1',H'&A',CL&A'&PASSW' PASSWORD TEXT UNIT       40640057
.NOT10   ANOP                                                           40680057
.* PERMANENTLY ALLOCATED ATTRIBUTE TEXT UNIT                            40720057
         AIF   (NOT &P(11)).NOT11  TEST NOT PERMANENTLY ALLOCATED ATTRI 40850057
         DS    0H                  ALIGN TEXT UNIT                      40890057
&TPA(11)&N DC  XL2'52',H'0'        PERM ALLOCATED ATTRIBUTE TEXT UNIT   40930057
.NOT11   ANOP                                                           40970057
.* CONVERTIBLE ATTRIBUTE TEXT UNIT                                      41010057
         AIF   (NOT &P(12)).NOT12  TEST NOT CONVERTIBLE ATTRIBUTE       41050057
         DS    0H                  ALIGN TEXT UNIT                      41090057
&TPA(12)&N DC  XL2'53',H'0'        CONVERTIBLE ATTRIBUTE TEXT UNIT      41130057
.NOT12   ANOP                                                           41170057
.* DATA SET STATUS TEXT UNIT                                            41300057
         AIF   (NOT &P(13)).NOT13  TEST NOT DATA SET STATUS             41340057
         DS    0H                  ALIGN TEXT UNIT                      41380057
&TPA(13)&N DC  XL2'04',H'1',H'1',XL1'&STATS' DATA SET STATUS TEXT UNIT  41420057
.NOT13   ANOP                                                           41460057
.* DATA SET NORMAL DISP TEXT UNIT                                       41500057
         AIF   (NOT &P(14)).NOT14  TEST NOT DATA SET NORMAL DISP        41540057
         DS    0H                  ALIGN TEXT UNIT                      41580057
&TPA(14)&N DC  XL2'05',H'1',H'1',XL1'&NDISP' DSET NORM DISP TEXT UNIT   41620057
.NOT14   ANOP                                                           41660057
.* DATA SET CONDITIONAL DISP TEXT UNIT                                  41700057
         AIF   (NOT &P(15)).NOT15  TEST NOT DATA SET CONDITIONAL DISP   41740057
         DS    0H                  ALIGN TEXT UNIT                      41780057
&TPA(15)&N DC  XL2'06',H'1',H'1',XL1'&CDISP' DSET COND DISP TEXT UNIT   41820057
.NOT15   ANOP                                                           41860057
.* SPACE ALLOCATED BY TRACKS ATTRIBUTE TEXT UNIT                        41900057
         AIF   (NOT &P(16)).NOT16  TEST NOT SPACE ALLOCATED BY TRACKS   41940057
         DS    0H                  ALIGN TEXT UNIT                      41980057
&TPA(16)&N DC  XL2'07',H'0'        SPACE ALLOCATED BY TRACKS TEXT UNIT  42020057
.NOT16   ANOP                                                           42060057
.* SPACE ALLOC BY CYLS TEXT UNIT                                        42100057
         AIF   (NOT &P(17)).NOT17  TEST NOT SPACE ALLOC BY CYLS         42140057
         DS    0H                  ALIGN TEXT UNIT                      42180057
&TPA(17)&N DC  XL2'08',H'0'        SPACE ALLOC BY CYLS TEXT UNIT        42220057
.NOT17   ANOP                                                           42260057
.* BLOCK SPACE TEXT UNIT                                                42300057
         AIF   (NOT &P(18)).NOT18  TEST NOT BLOCK SPACE                 42340057
         DS    0H                  ALIGN TEXT UNIT                      42380057
&TPA(18)&N DC  XL2'09',H'1',H'3',FL3'&SPACE(1)' BLOCK SPACE TEXT UNIT   42420057
.NOT18   ANOP                                                           42460057
.* PRIME SPACE TEXT UNIT                                                42500057
         AIF   (NOT &P(19)).NOT19  TEST NOT PRIME SPACE                 42540057
         DS    0H                  ALIGN TEXT UNIT                      42580057
         BLSCAMM2 &SPACE(2),1      EXTRACT PRIMARY SPACE QUANTITY       42620057
&TPA(19)&N DC  XL2'0A',H'1',H'3',FL3'&BLSCAGC' PRIME SPACE TEXT UNIT    42660057
.NOT19   ANOP                                                           42700057
.* SECONDARY SPACE TEXT UNIT                                            42740057
         AIF   (NOT &P(20)).NOT20  TEST NOT SECONDARY SPACE             42780057
         DS    0H                  ALIGN TEXT UNIT                      42820057
         BLSCAMM2 &SPACE(2),2      EXTRACT SECONDARY SPACE QUANTITY     43250057
&TPA(20)&N DC  XL2'0B',H'1',H'3',FL3'&BLSCAGC' SECDY SPACE TEXT UNIT    43270057
.NOT20   ANOP                                                           43290057
.* SPACE RELEASE TEXT UNIT                                              43400057
         AIF   (NOT &P(21)).NOT21  TEST NOT SPACE RELEASE               43450057
         DS    0H                  ALIGN TEXT UNIT                      43500057
&TPA(21)&N DC  XL2'0D',H'0'        SPACE RELEASE TEXT UNIT              43550057
.NOT21   ANOP                                                           43600057
.* ALLOC CONTIG SPACE TEXT UNIT                                         43650057
         AIF   (NOT &P(22)).NOT22  TEST NOT ALLOC CONTIG SPACE          43700057
         DS    0H                  ALIGN TEXT UNIT                      43750057
&TPA(22)&N DC  XL2'0E',H'1',H'1',XL1'08' ALLOC CONTIG SPACE TEXT UNIT   43800057
.NOT22   ANOP                                                           43850057
.* SPACE ROUND TO CYLS TEXT UNIT                                        43900057
         AIF   (NOT &P(23)).NOT23  TEST NOT SPACE ROUND TO CYLS         43950057
         DS    0H                  ALIGN TEXT UNIT                      44000057
&TPA(23)&N DC  XL2'0F',H'0'        SPACE ROUND TO CYLS TEXT UNIT        44050057
.NOT23   ANOP                                                           44100057
.* DATA SET SEQNO TEXT UNIT                                             44150057
         AIF   (NOT &P(24)).NOT24  TEST NOT DATA SET SEQNO              44200057
         DS    0H                  ALIGN TEXT UNIT                      44250057
&TPA(24)&N DC  XL2'1F',H'1',H'2',H'&LABEL(1)' DATA SET SEQNO TEXT UNIT  44300057
.NOT24   ANOP                                                           44350057
.* LABEL TYPE TEXT UNIT                                                 44400057
         AIF   (NOT &P(25)).NOT25  TEST NOT LABEL TYPE                  44450057
         DS    0H                  ALIGN TEXT UNIT                      44500057
&TPA(25)&N DC  XL2'1E',H'1',H'1',XL1'&LABELTY' LABEL TYPE TEXT UNIT     44550057
.NOT25   ANOP                                                           44600057
.* PASSWORD PROTECT TEXT UNIT                                           44650057
         AIF   (NOT &P(26)).NOT26  TEST NOT PASSWORD PROTECT            44700057
         DS    0H                  ALIGN TEXT UNIT                      44750057
&TPA(26)&N DC  XL2'20',H'1',H'1',XL1'&PASPR' PASSWORD PROT TEXT UNIT    44800057
.NOT26   ANOP                                                           44850057
.* DATA SET RETENTION PERIOD TEXT UNIT                                  44900057
         AIF   (NOT &P(27)).NOT27  TEST NOT DATA SET RETENTION PERIOD   44950057
         DS    0H                  ALIGN TEXT UNIT                      45000057
&TPA(27)&N DC  XL2'23',H'1',H'2',H'&LABEL(4)' DATA SET RETPD TEXT UNIT  45050057
.NOT27   ANOP                                                           45100057
.* SYSOUT CLASS TEXT UNIT                                               45150057
         AIF   (NOT &P(28)).NOT28  TEST NOT SYSOUT CLASS                45200057
&C       SETC  '&SYSOUT(1)'                                             45250057
         DS    0H                  ALIGN TEXT UNIT                      45300057
&TPA(28)&N DC  XL2'18',H'1',H'1',CL1'&C' SYSOUT CLASS TEXT UNIT         45350057
.NOT28   ANOP                                                           45400057
.* SYSOUT PROGRAM NAME TEXT UNIT                                        45450057
         AIF   (NOT &P(29)).NOT29  TEST NOT SYSOUT PROGRAM NAME         45500057
&A       SETA  K'&SYSOUT(2)                                             45550057
&C       SETC  '&SYSOUT(2)'                                             45600057
         DS    0H                  ALIGN TEXT UNIT                      45650057
&TPA(29)&N DC  XL2'19',H'1',H'&A',CL&A'&C'  PROGRAM NAME TEXT UNIT      45700057
.NOT29   ANOP                                                           45750057
.DONE    ANOP                                                           45800057
         MEND                                                           45850057
./  ADD  SSI=80230182,NAME=BLSCAMM1
         MACRO                                                          00050000
         BLSCAMM1 &LIST                                                 00100000
.** START OF SPECIFICATIONS ******************************************* 00150000
.*                                                                      00200000
.*  MACRO NAME= BLSCAMM1                                                00250000
.*                                                                      00300000
.*  DESCRIPTIVE NAME= COUNT PARAMETER SUBLIST ENTRIES                   00350000
.*                                                                      00400000
.*  COPYRIGHT= NONE                                                     00450000
.*                                                                      00500000
.*  STATUS= SU57 RELEASE 1, LEVEL 0                                     00550000
.*                                                                      00600000
.*  FUNCTION=                                                           00650000
.*             COUNT PARAMETER SUBLIST ENTRIES.                         00700000
.*                                                                      00750000
.*  NOTES= NONE                                                         00800000
.*                                                                      00850000
.*  MODULE TYPE= EXECUTABLE MACRO                                       00900000
.*                                                                      00950000
.*     PROCESSOR= ASSEMBLER F                                           01000000
.*                                                                      01050000
.*     ATTRIBUTES= REENTRABLE                                           01100000
.*                                                                      01150000
.*  INVOCATION SYNTAX=                                                  01200000
.*                                                                      01250000
.*           BLSCAMM1 LIST                                              01300000
.*                                                                      01350000
.*           LIST                                                       01400000
.*             PARAMETER SUBLIST FOR WHICH ENTRY COUNT IS TO BE MADE.   01440000
.*                                                                      01480000
.*  OUTPUT= GBLA &BLSCAGA IS SET TO THE NUMBER OF SUBLIST ENTRIES.      01520000
.*                                                                      01560000
.*  EXTERNAL REFERENCES= SEE BELOW                                      01600000
.*                                                                      01640000
.*     ROUTINES= NONE                                                   01680000
.*                                                                      01800000
.*     DATA AREAS=  NONE                                                01850000
.*                                                                      01900000
.*     CONTROL BLOCKS=  NONE                                            01950000
.*                                                                      02000000
.*     CONDITIONAL ASSEMBLY SET SYMBOLS=  BLSCAGA    GBLA               02050000
.*                                                                      02100000
.*  MACROS=  NONE                                                       02150000
.*                                                                      02200000
.*  CHANGE ACTIVITY=                                                    02250000
.*         THIS MODULE IS WRITTEN FOR @G57LPSR                          02290000
.*                                                                      02330000
.*  MESSAGES ISSUED=                                                    02370000
.*     MACRO COMPILE TIME ERROR MESSAGES (MNOTES)                       02410000
.*     8,LIST CONTAINS AN INNER SUBLIST                                 02450000
.*     8,INVALID LIST FORMAT                                            02490000
.*                                                                      02530000
.** END OF SPECIFICATIONS ********************************************* 02570000
         GBLA  &BLSCAGA            PARAMETER SUBLIST COUNT              02610000
         LCLA  &CTR                CURRENT LIST BYTE COUNTER            02750000
         LCLA  &LEN                LIST LENGTH                          02790000
         LCLC  &STR                LIST CHARACTER STRING                02830000
&CTR     SETA  1                   CURRENT BYTE COUNTER                 02870000
&STR     SETC  '&LIST'             LIST CHAR STRING                     02910000
&LEN     SETA  K'&STR              LIST LENGTH                          02950000
         AIF   (&LEN GT 0).SK1     NON NULL LIST                        02990000
&BLSCAGA SETA  0                   NULL LIST                            03030000
         AGO   .END                                                     03070000
.SK1     AIF   ('&STR' NE '()').SK2 NOT NULL LIST                       03110000
&BLSCAGA SETA  0                   NULL LIST                            03250000
         AGO   .END                                                     03300000
.SK2     AIF   ('&STR'(1,1) EQ '(').SK3  MULTI ELEMENT LIST CANDIDATE   03350000
&BLSCAGA SETA  1                   ONE ELEMENT LIST                     03380000
         AGO   .END                                                     03450000
.SK3     ANOP                                                           03500000
&BLSCAGA SETA  1                   SET UP ELEMENT COUNT LOOP            03540000
         AGO   .LPTST              ENTER LOOP                           03580000
.LOOP    AIF   ('&STR'(&CTR,1) NE '(').SK4                              03620000
         MNOTE 8,'LIST CONTAINS AN INNER SUBLIST'                       03660000
         AGO   .ERR                ERROR EXIT                           03700000
.SK4     AIF   ('&STR'(&CTR,1) NE ',').SK5  NOT ELEMENT END             03740000
&BLSCAGA SETA  &BLSCAGA+1           BUMP ELEMENT COUNT                  03780000
         AGO   .LPTST                                                   03820000
.SK5     AIF   ('&STR'(&CTR,1) NE ')').LPTST  NOT END OF PLIST          03860000
         AIF   (&CTR EQ &LEN).END   LIST END MATCHES LOGICAL END        03900000
         MNOTE 8,'INVALID LIST FORMAT'                                  03940000
         AGO   .ERR                                                     03980000
.LPTST   ANOP                                                           04020000
&CTR     SETA  &CTR+1               BUMP CURRENT BYTE COUNTER           04060000
         AIF   (&CTR LE &LEN).LOOP  NOT END OF LIST                     04100000
         AGO   .END                                                     04140000
.ERR     ANOP                                                           04180000
&BLSCAGA SETA  -1                   INDICATE ERROR TO CALLER            04220000
.END     MEND                                                           04260000
./  ADD  SSI=80230189,NAME=BLSCAMM2
         MACRO                                                          00050000
         BLSCAMM2 &LIST,&NUM                                            00100000
.** START OF SPECIFICATIONS ******************************************* 00150000
.*                                                                      00200000
.*  MACRO NAME= BLSCAMM2                                                00250000
.*                                                                      00300000
.*  DESCRIPTIVE NAME= EXTRACT PARAMETER SUBLIST ENTRY CHARACTER STRING. 00350000
.*                                                                      00400000
.*  COPYRIGHT= NONE                                                     00450000
.*                                                                      00500000
.*  STATUS= SU57 RELEASE 1, LEVEL 0                                     00550000
.*                                                                      00600000
.*  FUNCTION=                                                           00650000
.*             EXTRACT THE CONTENTS OF THE ENTRY SPECIFIED BY           00700000
.*             POSITIONAL PARAMETER 2 FROM THE PARAMETER SPECIFIED BY   00750000
.*             POSITIONAL PARAMETER 1 AND PLACE THE EXTRACTED           00800000
.*             CHARACTER STRING IN GBLC &BLSCAGC.                       00850000
.*                                                                      00900000
.*  NOTES= NONE                                                         00950000
.*                                                                      01000000
.*  MODULE TYPE= EXECUTABLE MACRO                                       01050000
.*                                                                      01100000
.*     PROCESSOR= ASSEMBLER F                                           01150000
.*                                                                      01200000
.*     ATTRIBUTES= REENTRABLE                                           01250000
.*                                                                      01300000
.*  INVOCATION SYNTAX=                                                  01350000
.*                                                                      01400000
.*           BLSCAMM2 LIST,ELEMENTNO                                    01450000
.*                                                                      01500000
.*           LIST                                                       01550000
.*             PARAMETER LIST FROM WHICH THE ELEMENT IS TO BE           01580000
.*             EXTRACTED.                                               01610000
.*                                                                      01700000
.*           ELEMENTNO                                                  01750000
.*             PARAMETER LIST ELEMENT NUMBER.                           01790000
.*                                                                      01830000
.*  OUTPUT=  GBLC &BLSCAGC IS INITIALIZED WITH THE SPECIFIED LIST       01870000
.*           ELEMENT.                                                   01910000
.*                                                                      02000000
.*  EXTERNAL REFERENCES= SEE BELOW                                      02050000
.*                                                                      02090000
.*     ROUTINES=  NONE                                                  02130000
.*                                                                      02170000
.*     DATA AREAS=  NONE                                                02210000
.*                                                                      02300000
.*     CONTROL BLOCKS=  NONE                                            02350000
.*                                                                      02400000
.*  MACROS=  NONE                                                       02450000
.*                                                                      02500000
.*  CHANGE ACTIVITY=                                                    02550000
.*         THIS MODULE IS WRITTEN FOR @G57LPSR                          02590000
.*                                                                      02630000
.*  MESSAGES ISSUED=                                                    02670000
.*     MACRO COMPILE TIME ERROR MESSAGES (MNOTES)                       02710000
.*     8,LIST CONTAINS AN INNER SUBLIST                                 02750000
.*     8,INVALID LIST FORMAT                                            02790000
.*                                                                      02830000
.** END OF SPECIFICATIONS ********************************************* 02870000
         GBLA  &BLSCAGA            PARAMETER SUBLIST COUNT              02910000
         GBLC  &BLSCAGC            PARAMETER SUBLIST CHARACTER STRING   03050000
         LCLA  &CTR                CURRENT LIST BYTE COUNTER            03090000
         LCLA  &ELM                CURRENT ELEMENT NUMBER               03130000
         LCLA  &START              CURRENT ELEMENT START BYTE           03170000
         LCLA  &LEN                LIST LENGTH                          03210000
         LCLC  &STR                LIST CHARACTER STRING                03250000
&BLSCAGA SETA  0                   RETURN CODE                          03290000
&BLSCAGC SETC  ''                  RETURNED STRING                      03330000
&CTR     SETA  1                   CURRENT BYTE COUNTER                 03370000
&STR     SETC  '&LIST'             LIST CHAR STRING                     03410000
&LEN     SETA  K'&STR              LIST LENGTH                          03450000
         AIF   (&LEN EQ 0).END     NULL LIST                            03490000
.SK1     AIF   ('&STR' EQ '()').END   NULL LIST                         03530000
.SK2     AIF   ('&STR'(1,1) EQ '(').SK3  MULTI ELEMENT LIST CANDIDATE   03570000
&BLSCAGC SETC  '&LIST'             ONE ELEMENT LIST                     03610000
         AGO   .END                                                     03650000
.SK3     ANOP                                                           03690000
&ELM     SETA  1                   SET UP ELEMENT COUNT LOOP            03730000
&START   SETA  2                   SET ELEMENT START BYTE               03770000
         AGO   .LPTST              ENTER LOOP                           03810000
.LOOP    AIF   ('&STR'(&CTR,1) NE '(').SK4                              03850000
         MNOTE 8,'LIST CONTAINS AN INNER SUBLIST'                       03890000
         AGO   .ERR                ERROR EXIT                           03930000
.SK4     AIF   ('&STR'(&CTR,1) NE ',').SK5  NOT ELEMENT END             03970000
         AIF   (&ELM EQ &NUM).MOVE  FOUND REQUESTED ELEMENT             04010000
&START   SETA &CTR+1               SET NEW ELEMENT START                04050000
&ELM     SETA  &ELM+1              BUMP ELEMENT COUNT                   04090000
         AGO   .LPTST                                                   04130000
.SK5     AIF   ('&STR'(&CTR,1) NE ')').LPTST  NOT END OF PLIST          04170000
         AIF   (&CTR EQ &LEN).SK6   LIST END MATCHES LOGICAL END        04210000
         MNOTE 8,'INVALID LIST FORMAT'                                  04250000
         AGO   .ERR                                                     04290000
.SK6     ANOP                                                           04330000
         AIF   (&ELM EQ &NUM).MOVE  REQUESTED SUBLIST ENTRY             04370000
         AGO   .END                 REQUESTED ENTRY NOT FOUND           04410000
.LPTST   ANOP                                                           04450000
&CTR     SETA  &CTR+1               BUMP CURRENT BYTE COUNTER           04490000
         AIF   (&CTR LE &LEN).LOOP  NOT END OF LIST                     04530000
         MNOTE 8,'INVALID LIST FORMAT'                                  04570000
         AGO   .ERR                                                     04610000
.MOVE    ANOP                                                           04650000
&LEN     SETA  &CTR-&START          MOVE LENGTH                         04690000
&BLSCAGC SETC  '&STR'(&START,&LEN)  PARM SUBLIST ENTRY                  04730000
         AGO   .END                                                     04770000
.ERR     ANOP                                                           04810000
&BLSCAGA SETA  -1                   INDICATE ERROR TO CALLER            04850000
.END     MEND                                                           04890000
./  ADD  SSI=80450211,NAME=BLSCAMSL
         MACRO                                                          00050000
&N       BLSCAMSL &TEXT,&END=YES                                        00100000
.** START OF SPECIFICATIONS ******************************************* 00150000
.*                                                                      00200000
.*  MACRO NAME= BLSCAMSL                                                00250000
.*                                                                      00300000
.*  DESCRIPTIVE NAME= IPCS DAS ALLOCATION MODEL AMS SYSIN TEXT STREAM   00350057
.*                    GENERATOR                                         00400000
.*                                                                      00450000
.*  COPYRIGHT= NONE                                                     00500000
.*                                                                      00550000
.*  STATUS= SU57 RELEASE 1, LEVEL 0                                     00600057
.*                                                                      00650000
.*  FUNCTION=                                                           00700000
.*             PREPARE AN ACCESS METHOD SERVICES SYSIN TEXT STREAM IN   00750000
.*             RECFM=V FORMAT TO BE USED BY THE BLSCAAMS MODULE. THE    00800000
.*             GENERATED TEXT STREAM WILL RESIDE IN THE BLSCAMOD MODULE 00850000
.*                                                                      00900000
.*  NOTES= NONE                                                         00950057
.*                                                                      01000000
.*  MODULE TYPE= DATA AREA GENERATION MACRO                             01050057
.*                                                                      01100000
.*     PROCESSOR= ASSEMBLER F                                           01150057
.*                                                                      01200000
.*     ATTRIBUTES= REENTRABLE (READ ONLY DATA)                          01250057
.*                                                                      01300000
.*  ENTRY POINT= NONE                                                   01350057
.*                                                                      01400000
.*  INVOCATION SYNTAX=                                                  01450057
.*                                                                      01500000
.*    LOCSYMB BLSCAMSL POSITIONALPARM |,END=NO|                         01550057
.*                                                                      01600000
.*            LOCSYMB                                                   01650057
.*              4 TO 7 BYTE LOCATION SYMBOL NAME OF THE FORM AMSNN.     01690057
.*              NN IS THE LOCATION SYMBOL OF THIS MACRO'S PARENT MODEL. 01730057
.*              THE LOCATION SYMBOL WILL BE REFERENCED BY AN ADDRESS    01770057
.*              CONSTANT GENERATED BY THE BLSCAMMM MACRO. IF THE        01810057
.*              LOCSYMBOL IS OMITTED, THE BOUNDARY ALIGNMENT            01850057
.*              INSTRUCTION DC 0H'0' IS OMITTED TO PERMIT CONCATENATION 01890057
.*              OF BLSCAMSL INVOCATIONS TO BUILD A SINGLE IDCAMS SYSIN  01930057
.*              STREAM.                                                 01970057
.*                                                                      02010057
.*            POSITIONALPARM                                            02050057
.*              A MACRO POSITIONAL PARAMETER IN THE FORM:               02200057
.*                ('TEXT LINE 1','TEXT LINE 2',....,'TEXT LINE N')      02240057
.*              THE MAXIMUM LENGTH OF A TEXT LINE IS 71 BYTES. ONE BYTE 02280057
.*              OF BLANK IS CONCATENATED AS THE LEADING BYTE OF EACH    02320057
.*              LINE BECAUSE IDCAMS IGNORES THE FIRST BYTE OF EACH      02360057
.*              SYSIN RECORD.                                           02400057
.*                                                                      02440057
.*           END=NO                                                     02480057
.*              THIS KEYWORD WITH A VALUE OF 'NO' PREVENTS THE          02520057
.*              APPENDING TO THE TWO BYTE STRING OF ZEROS THAT          02650057
.*              INDICATES END OF SYSIN TEXT STREAM TO THE USING         02680057
.*              PROGRAM. THIS KEYWORD PERMITS THE CONCATENATION OF      02710057
.*              INVOCATIONS OF THE BLSCAMSL MACRO TO BUILD A SINGLE     02740057
.*              IDCAMS SYSIN TEXT STREAM.                               02770057
.*                                                                      02900000
.*  OUTPUT=  ASSEMBLER 'DC STATEMENTS ARE BUILT FOR EACH TEXT SEGMENT   02950057
.*           IN THE FORM:                                               02990057
.*               DC   HL2'L''TEXTSEG+4',HL2'0',C'TEXTSEG'               03030057
.*           FOLLOWING THE LAST TEXT SEGMENT, A TWO BYTE STRING OF      03070057
.*           HEX ZEROS IS APPENDED TO INDICATE END-OF-DATA IF THE 'END' 03110057
.*           KEYWORD IS NOT PRESENT WITH A VALUE OF 'NO'.               03150057
.*                                                                      03190057
.*  EXTERNAL REFERENCES= NONE                                           03230057
.*                                                                      03350000
.*  TABLES=  NONE                                                       03400057
.*                                                                      03440057
.*  MACRO=  NONE                                                        03480057
.*                                                                      03520057
.*  CHANGE ACTIVITY=                                                    03560057
.*        THIS MODULE IS WRITTEN FOR @G57LPSR                           03600057
.*                                                                      03640057
.*  MESSAGES ISSUED=                                                    03680057
.*     MSG. NO     MESSAGE TEXT                                         03720057
.*     MNOTE 8, SUB PARM NUMBER 'NN' EXCEEDS 71 BYTES. PARAMETER IS     03760057
.*           TRUNCATED                                                  03800057
.*                                                                      03840057
.** END OF SPECIFICATIONS ********************************************* 03880057
         LCLA  &CTR           LOOP COUNTER                              03920057
         LCLA  &NUM           NUMBER OF TEXT SEGMENTS                   03960057
         LCLA  &L             TEXT SEGMENT LENGTH                       04000057
         LCLA  &LL            TEXT SEGMENT MOVE LENGTH                  04040057
         LCLA  &LLL           TEXT SEGMENT LENGTH + 4                   04250057
         LCLC  &C             TEXT SEGMENT                              04290057
         LCLC  &CC            TRUNCATED TEXT SEGMENT                    04330057
         LCLC  &PAD           ONE BLANK                                 04370057
&CTR     SETA  0              INIT LOOP COUNTER                         04410057
&NUM     SETA  N'&TEXT        INIT LOOP LIMIT                           04450057
&PAD     SETC  ' '                                                      04490057
         AIF   (N'&N EQ 0).CNT  TEST FOR NO LOCSYMB                     04530057
&N       DC    0H'0'          ALIGN LIST                                04570057
         AGO   .CNT                                                     04610057
.LOOP    ANOP                                                           04650057
&C       SETC  '&TEXT(&CTR)'  TEXT SEGMENT                              04690057
&L       SETA  K'&C-1                                                   04730057
         AIF   (&L LE 72).OK  LENGTH OK                                 04770057
&L       SETA  72             TRUNCATED LENGTH                          04810057
         MNOTE 8,'SUB PARM NUMBER ''&CTR'' EXCEEDS 71 BYTES. PARAMETER *04850057
               IS TRUNCATED'                                            04890057
.OK      ANOP                                                           05100057
&LL      SETA  &L-1           MOVE LENGTH                               05150057
&LLL     SETA  &L+4           ENTRY LENGTH                              05200057
&CC      SETC  '&C'(2,&LL)    REMOVE QUOTES AND TRUNCATE IF NECESSARY   05250057
         DC    HL2'&LLL',HL2'0',CL&L'&PAD&CC' TEXT SEGMENT              05300057
.CNT     ANOP                                                           05350057
&CTR     SETA  &CTR+1         BUMP LOOP COUNTER                         05400057
         AIF   (&CTR LE &NUM).LOOP  TEST LOOP END                       05450057
         AIF   ('&END' EQ 'NO').MEND                                    05500057
         DC    HL2'0'         END OF TEXT                               05550057
.MEND    MEND                                                           05600057
./  ADD  SSI=80450214,NAME=BLSCFRES
         MACRO                                                          00050000
&L       BLSCFRES &R,&LV=,&A=                                           00100000
.*** START OF SPECIFICATIONS *****************************************/ 00150000
.**                                                                  */ 00200000
.** MODULE NAME= BLSCFRES                                            */ 00250000
.**                                                                  */ 00300000
.** DESCRIPTIVE NAME= IPCS DAS STORAGE DEALLOCATION MACRO.           */ 00350057
.**                                                                  */ 00400000
.** COPYRIGHT=                                                       */ 00450000
.**                                                                  */ 00500000
.** STATUS= SU57 RELEASE 1, LEVEL 0                                  */ 00550057
.**                                                                  */ 00600000
.** FUNCTION=  BLSCFRES RETURNS THE STORAGE ALLOCATED BY THE         */ 00650000
.**            BLSCGETS MACRO TO THE FREE STORAGE POOL               */ 00700057
.**            IN THE DMCB.                                          */ 00750000
.**                                                                  */ 00800000
.** NOTES= SEE BELOW                                                 */ 00850000
.**                                                                  */ 00900000
.**    REGISTER CONVENTIONS=                                         */ 00950000
.**                                                                  */ 01000000
.**       @01 - REG  1 - INITIALLY CONTAINS THE ADDRESS OF STORAGE   */ 01050000
.**                      TO BE RETURNED.                             */ 01100000
.**                                                                  */ 01150000
.**       @13 - REG 13 - USED TO ADDRESS SAVE AREA BELONGING TO      */ 01200000
.**                      BLSCRQSTS CALLER                            */ 01250000
.**                                                                  */ 01300000
.**       @14 - REG 14 - USED TO ADDRESS DMCB DURING STORAGE         */ 01350000
.**                      ALLOCATION.  NOT RESTORED BY MACRO.         */ 01400000
.**                                                                  */ 01450000
.** MODULE TYPE= MACRO                                               */ 01500000
.**                                                                  */ 01550000
.**    PROCESSOR= ASSEMBLER                                          */ 01600000
.**                                                                  */ 01650000
.**    MODULE SIZE= TO BE COMPLETED                                  */ 01700000
.**                                                                  */ 01750000
.** ENTRY POINT= BLSCFRES                                            */ 01800000
.**                                                                  */ 01850000
.**    PURPOSE= SEE FUNCTION                                         */ 01900000
.**                                                                  */ 01950000
.**    LINKAGE=                                                      */ 02000000
.**             R01 LOADED WITH ADDRESS OF STORAGE TO BE FREED.      */ 02050000
.**                                                                  */ 02100000
.**             THIS MACRO IS INVOKED BY THE EPILOGUE CODE  IN LIEU  */ 02150000
.**             OF FREEMAIN FOR THE IPCS DAS MODULES:                */ 02200057
.**                                                                  */ 02250000
.**               BLSCRQST, BLSCOPEN, BLSCCLSE, BLSCSETT, BLSCGETT,  */ 02300057
.**               BLSCPUTT, BLSCPOIN, BLSCENDD, AND BLSCERSE.        */ 02330057
.**                                                                  */ 02400000
.** EXIT NORMAL=                                                     */ 02450000
.**                                                                  */ 02500000
.**             REGISTER 1 CONTAINS THE ADDRESS OF THE AREA WHICH    */ 02550000
.**             WAS FREED.                                           */ 02600000
.**             REGISTER 14 POINTS TO THE DMCB.                      */ 02650000
.**                                                                  */ 02700000
.** EXTERNAL REFERENCES=                                             */ 02750000
.**                                                                  */ 02800000
.**    CONTROL BLOCKS=  DATA ACCESS SERVICES CONTROL BLOCK (DMCB)    */ 02850057
.**                                                                  */ 02900000
.** CHANGE ACTIVITY= AS FOLLOWS:                                     */ 02950000
.*         THIS MODULE IS WRITTEN FOR @G57LPSR                       */ 03000057
.**                                                                  */ 03050057
.*** END OF SPECIFICATIONS *******************************************/ 03100057
&L       L     @14,24(@13)       PICK UP DMCB POINTER FROM SAVE AREA    03150057
         ST    @01,DMCBFRE(@14)  RESTORE NEXT FREE AREA ADDRESS         03200057
         MEND                                                           03250057
./  ADD  SSI=80460052,NAME=BLSCGETF
         MACRO                                                          00050000
&L       BLSCGETF &R,&LV=                                               00100000
.*** START OF SPECIFICATIONS *****************************************/ 00150000
.**                                                                  */ 00200000
.** MODULE NAME= BLSCGETF                                            */ 00250000
.**                                                                  */ 00300000
.** DESCRIPTIVE NAME= IPCS DAS FREE PSUEDO GETMAIN MACRO             */ 00350057
.**                                                                  */ 00400000
.** COPYRIGHT= NONE                                                  */ 00450057
.**                                                                  */ 00500000
.** STATUS= SU57 RELEASE 1, LEVEL 0                                  */ 00550057
.**                                                                  */ 00600000
.** FUNCTION=  BLSCGETF PERFORMS A PSEUDO-GETMAIN FUNCTION FOR THE   */ 00650000
.**            IPCS DATA ACCESS SERVICES FREE MODULE.                */ 00700057
.**                                                                  */ 00750000
.** NOTES= SEE BELOW                                                 */ 00800000
.**                                                                  */ 00850000
.**    REGISTER CONVENTIONS=                                         */ 00900000
.**                                                                  */ 00950000
.**       @00 - REG  0 - INITIALLY CONTAINS THE NUMBER OF BYTES TO   */ 01000000
.**                      ALLOCATE FROM THE DMCB FREE STORAGE AREA.   */ 01050000
.**                      AT EXIT IT WILL CONTAIN THE ADDRESS OF THE  */ 01100000
.**                      NEXT AVAILABLE BYTE IN THE FREE STORAGE     */ 01150000
.**                      AREA.                                       */ 01200000
.**                                                                  */ 01250000
.**       @01 - REG  1 - CONTAINS A POINTER TO THE ADDRESS OF THE    */ 01300000
.**                      DMCB FROM WHICH THE FREE STORAGE IS TO BE   */ 01350000
.**                      OBTAINED.  AT EXIT IT WILL CONTAIN THE      */ 01400000
.**                      ADDRESS OF THE STORAGE WHICH WAS ALLOCATED. */ 01450000
.**                                                                  */ 01500000
.**       @14 - REG 14 - USED TO ADDRESS DMCB DURING STORAGE         */ 01550000
.**                      ALLOCATION.  NOT RESTORED BY MACRO.         */ 01600000
.**                                                                  */ 01650000
.** MODULE TYPE= MACRO                                               */ 01700000
.**                                                                  */ 01750000
.**    PROCESSOR= ASSEMBLER                                          */ 01800000
.**                                                                  */ 01850000
.**    MODULE SIZE= TO BE COMPLETED                                  */ 01900000
.**                                                                  */ 01950000
.** ENTRY POINT= BLSCGETF                                            */ 02000000
.**                                                                  */ 02050000
.**    PURPOSE= SEE FUNCTION                                         */ 02100000
.**                                                                  */ 02150000
.**    LINKAGE=                                                      */ 02200000
.**             R01 LOADED WITH A POINTER TO THE DMCB ADDRESS        */ 02250000
.**                                                                  */ 02300000
.**             R00 LOADED WITH REQUESTED STORAGE SIZE.              */ 02350000
.**                                                                  */ 02400000
.**             THIS MACRO IS INVOKED BY THE PROLOGUE CODE  IN LIEU  */ 02450000
.**             OF GETMAIN FOR THE IPCS DAS FREE MODULE.             */ 02500057
.**                                                                  */ 02550000
.** EXIT NORMAL=                                                     */ 02600000
.**                                                                  */ 02650000
.**             REGISTER 1 CONTAINS THE ADDRESS OF THE AREA WHICH    */ 02700000
.**             WAS ALLOCATED.                                       */ 02750000
.**                                                                  */ 02800000
.** EXIT ERROR=                                                      */ 02850000
.**                                                                  */ 02900000
.**             IF THE DMCB FREE STORAGE AREA CONTAINS INSUFFICIENT  */ 02950000
.**             STORAGE A USER ABEND 999 WILL OCCUR.  THIS SITUATION */ 03000000
.**             SHOULD NEVER OCCUR.                                  */ 03050000
.**                                                                  */ 03100000
.** EXTERNAL REFERENCES=                                             */ 03150000
.**                                                                  */ 03200000
.**    CONTROL BLOCKS=  DATA ACCESS SERVICES CONTROL BLOCK (DMCB)    */ 03250057
.**                                                                  */ 03300000
.** CHANGE ACTIVITY= AS FOLLOWS:                                     */ 03350000
*         THIS MODULE IS WRITTEN FOR @G57LPSR                        */ 03400057
.**                                                                  */ 03450057
.*** END OF SPECIFICATIONS *******************************************/ 03500057
         LCLC  &BPT                                                     03550057
&BPT     SETC 'DMG&SYSNDX'                                              03600057
&L       L     @14,0(,@01)       USE REGISTER 14 TO ADDRESS DMCB        03650057
         LR    @01,@00           LENGTH INTO REG 1 FOR INC BY LOAD ADDR 03700057
         LA    @00,7(@01)        THIS AND NEXT 2 INSTRUCTIONS           03750057
         SRL   @00,3             ROUND LENGTH TO A MULTIPLE OF EIGHT    03800057
         SLL   @00,3             FOR COMPATIBILITY WITH GETMAIN         03850057
         A     @00,DMCBFRE(@14)  COMPUTE NEXT FREE ADDRESS              03900057
         C     @00,DMCBEOB(@14)  IS THERE ENOUGH ROOM?                  03950057
         BL    &BPT              IF SO THEN PROCEED                     04000057
         ABEND 999,DUMP          SHOULD NEVER OCCUR                     04050057
&BPT     L     @01,DMCBFRE(@14)  PICK UP ADDRESS TO USE FOR @DATD       04100057
         ST    @00,DMCBFRE(@14)  STORE ADDRESS OF NEXT FREE AREA        04150057
         MEND                                                           04200057
./  ADD  SSI=80460053,NAME=BLSCGETS
         MACRO                                                          00050000
&L       BLSCGETS &R,&LV=                                               00100000
.*** START OF SPECIFICATIONS *****************************************/ 00150000
.**                                                                  */ 00200000
.** MODULE NAME= BLSCGETS                                            */ 00250000
.**                                                                  */ 00300000
.** DESCRIPTIVE NAME= IPCS DAS STORAGE ALLOCATION MACRO              */ 00350057
.**                                                                  */ 00400000
.** COPYRIGHT= NONE                                                  */ 00450057
.**                                                                  */ 00500000
.** STATUS= SU57 RELEASE 1, LEVEL 0                                  */ 00550057
.**                                                                  */ 00600000
.** FUNCTION=  BLSCGETS PERFORMS A PSEUDO-GETMAIN FUNCTION FOR THE   */ 00650000
.**            IPCS DATA ACCESS SERVICES REQUEST MODULES.            */ 00700057
.**                                                                  */ 00750000
.** NOTES= SEE BELOW                                                 */ 00800000
.**                                                                  */ 00850000
.**    REGISTER CONVENTIONS=                                         */ 00900000
.**                                                                  */ 00950000
.**       @00 - REG  0 - INITIALLY CONTAINS THE NUMBER OF BYTES TO   */ 01000000
.**                      ALLOCATE FROM THE DMCB FREE STORAGE AREA.   */ 01050000
.**                      AT EXIT IT WILL CONTAIN THE ADDRESS OF THE  */ 01100000
.**                      NEXT AVAILABLE BYTE IN THE FREE STORAGE     */ 01150000
.**                      AREA.                                       */ 01200000
.**                                                                  */ 01250000
.**       @01 - REG  1 - INITIALLY CONTAINS THE ADDRESS OF THE DMCB  */ 01300000
.**                      FROM WHICH THE FREE STORAGE IS TO BE        */ 01350000
.**                      OBTAINED.  AT EXIT IT WILL CONTAIN THE      */ 01400000
.**                      ADDRESS OF THE STORAGE WHICH WAS ALLOCATED. */ 01450000
.**                                                                  */ 01500000
.**       @14 - REG 14 - USED TO ADDRESS DMCB DURING STORAGE         */ 01550000
.**                      ALLOCATION.  NOT RESTORED BY MACRO.         */ 01600000
.**                                                                  */ 01650000
.** MODULE TYPE= MACRO                                               */ 01700000
.**                                                                  */ 01750000
.**    PROCESSOR= ASSEMBLER                                          */ 01800000
.**                                                                  */ 01850000
.**    MODULE SIZE= TO BE COMPLETED                                  */ 01900000
.**                                                                  */ 01950000
.** ENTRY POINT= BLSCGETS                                            */ 02000000
.**                                                                  */ 02050000
.**    PURPOSE= SEE FUNCTION                                         */ 02100000
.**                                                                  */ 02150000
.**    LINKAGE=                                                      */ 02200000
.**             R01 LOADED WITH DMCB ADDRESS                         */ 02250000
.**                                                                  */ 02300000
.**             R00 LOADED WITH REQUESTED STORAGE SIZE.              */ 02350000
.**                                                                  */ 02400000
.**             THIS MACRO IS INVOKED BY THE PROLOGUE CODE  IN LIEU  */ 02450000
.**             OF GETMAIN FOR THE IPCS DAS MODULES:                 */ 02500057
.**                                                                  */ 02550000
.**               BLSCOPEN, BLSCCLSE, BLSCSETT, BLSCGETT, BLSCPUTT,  */ 02600057
.**               BLSCPOIN, BLSCENDD, AND BLSCERSE.                  */ 02630057
.**                                                                  */ 02700000
.** EXIT NORMAL=                                                     */ 02750000
.**                                                                  */ 02800000
.**             REGISTER 1 CONTAINS THE ADDRESS OF THE AREA WHICH    */ 02850000
.**             WAS ALLOCATED.                                       */ 02900000
.**                                                                  */ 02950000
.** EXIT ERROR=                                                      */ 03000000
.**                                                                  */ 03050000
.**             IF THE DMCB FREE STORAGE AREA CONTAINS INSUFFICIENT  */ 03100000
.**             STORAGE AN USER ABEND     WILL OCCUR.  THIS          */ 03150000
.**             SITUATION SHOULD NEVER OCCUR.                        */ 03200000
.**                                                                  */ 03250000
.** EXTERNAL REFERENCES=                                             */ 03300000
.**                                                                  */ 03350000
.**    CONTROL BLOCKS=  DATA ACCESS SERVICES CONTROL BLOCK (DMCB)    */ 03400057
.**                                                                  */ 03450000
.** CHANGE ACTIVITY= AS FOLLOWS:                                     */ 03500000
.*         THIS MODULE IS WRITTEN FOR @G57LPSR                       */ 03550057
.**                                                                  */ 03600057
.*** END OF SPECIFICATIONS *******************************************/ 03650057
         LCLC  &BPT                                                     03700057
&BPT     SETC 'DMG&SYSNDX'                                              03750057
&L       LR    @14,@01           USE REGISTER 14 TO ADDRESS DMCB        03800057
         LR    @01,@00           LENGTH INTO REG 1 FOR INC BY LOAD ADDR 03850057
         LA    @00,7(@01)        THIS AND NEXT 2 INSTRUCTIONS           03900057
         SRL   @00,3             ROUND LENGTH TO A MULTIPLE OF EIGHT    03950057
         SLL   @00,3             FOR COMPATIBILITY WITH GETMAIN         04000057
         A     @00,DMCBFRE(@14)  COMPUTE NEXT FREE ADDRESS              04050057
         C     @00,DMCBEOB(@14)  IS THERE ENOUGH ROOM?                  04100057
         BL    &BPT              IF SO THEN PROCEED                     04150057
         ABEND 999,DUMP          SHOULD NEVER OCCUR                     04200057
&BPT     L     @01,DMCBFRE(@14)  PICK UP ADDRESS TO USE FOR @DATD       04250057
         ST    @00,DMCBFRE(@14)  STORE ADDRESS OF NEXT FREE AREA        04300057
         MEND                                                           04350057
./  ADD  SSI=80230203,NAME=BLSDMSGG
        MACRO                                                           00050000
&MSGNO  BLSDMSGG &MSG                                                   00100000
.*                                                                      00150000
.*** THIS MACRO IS WRITTEN FOR @G57LPSR                                 00200000
.*                                                                      00250000
.** START OF SPECIFICATIONS ******************************************* 00300000
.*                                                                    * 00350000
.*    MACRO NAME: BLSDMSGG                                            * 00400000
.*                                                                    * 00450000
.*    DESCRIPTIVE NAME: MESSAGE SKELETON AND MESSAGE CSECT GENERATOR  * 00500000
.*                                                                    * 00550000
.*    COPYRIGHT: NONE                                                 * 00600000
.*                                                                    * 00650000
.*    STATUS: SU57 RELEASE 1, LEVEL 0                                 * 00700000
.*                                                                    * 00750000
.*    FUNCTION: CONSTRUCT MESSAGE SKELETONS FROM INPUT MESSAGE        * 00800000
.*              STRINGS, OR CONTRUCT THE CROSS REFERENCE TABLES       * 00850000
.*              FOR THE MESSAGE CSECT BEING GENERATED IF THERE        * 00900000
.*              IS NO INPUT MESSAGE STRING.                           * 00950000
.*                                                                    * 01000000
.*    NOTES:                                                          * 01050000
.*                                                                    * 01100000
.*      DEPENDENCIES:   NONE                                          * 01150000
.*                                                                    * 01200000
.*      RESTRICTIONS:   NONE                                          * 01250000
.*                                                                    * 01300000
.*      REGISTER CONVENTIONS: N/A                                     * 01350000
.*                                                                    * 01400000
.*      PATCH LABEL:  GENERATES LABEL: PATCHLBL                       * 01450000
.*                                                                    * 01500000
.*      SERIALIZATION REQUIREMENTS: NONE                              * 01550000
.*                                                                    * 01600000
.*    MODULE TYPE: DATA AREA GENERATION MACRO                         * 01650000
.*                                                                    * 01700000
.*      PROCESSOR: ASSEMBLER F                                        * 01750000
.*                                                                    * 01800000
.*      MODULE SIZE: N/A                                              * 01850000
.*                                                                    * 01900000
.*      ATTRIBUTES: N/A                                               * 01950000
.*                                                                    * 02000000
.*    ENTRY POINT OR ALIAS: BLSDMSGG                                  * 02050000
.*                                                                    * 02100000
.*      PURPOSE: (SEE FUNCTION)                                       * 02150000
.*                                                                    * 02200000
.*      LINKAGE: VIA ASSEMBLER MACRO CALL                             * 02250000
.*                                                                    * 02300000
.*    INVOCATION SYNTAX:                                              * 02350000
.*                                                                    * 02400000
.*        MSGNO    BLSDMSGG   'MSGTXT'                                * 02450000
.*                                                                    * 02500000
.*      MSGNO                                                         * 02550000
.*        IS A 6-CHARACTER LABEL OF THE FORM: CNNNNN, WHERE "C" IS    * 02600000
.*        ANY ALPHABETIC CHARACTER AND IS NOT USED BY THIS MACRO,     * 02650000
.*        AND "NNNNN" IS A FIVE DIGIT MESSAGE NUMBER BY WHICH THE     * 02700000
.*        MESSAGE CONSTRUCTED BY THIS MACRO WILL BE REFERENCED.       * 02750000
.*        THE MESSAGE NUMBERS IN A MESSAGE CSECT MUST BE ENTERED      * 02800000
.*        IN ASCENDING SEQUENCE; LEADING ZEROS MAY NOT BE OMITTED.    * 02850000
.*                                                                    * 02900000
.*      'MSGTXT'                                                      * 02950000
.*        IS THE TEXT OF THE MESSAGE TO BE CONSTRUCTED. INSERT        * 03000000
.*        LOCATIONS IN THE MESSAGE ARE IDENTIFIED BY A DOUBLE COMMA,  * 03050000
.*        THAT IS, ",,,,," WOULD INDICATE TWO INSERTS BACK TO BACK,   * 03100000
.*        FOLLOWED BY THE CHARACTER COMMA. THE MAXIMUM LENGTH OF      * 03150000
.*        THE MESSAGE TEXT (NOT COUNTING INSERTS) GENERATED BY THIS   * 03200000
.*        MACRO IS 255 CHARACTERS; SEE THE PROLOGUE FOR MODULE        * 03250000
.*        BLSDMSG0 FOR RESTRICTION ON MAXIMUM OUTPUT MESSAGE LENGTH.  * 03300000
.*        MAXIMUM NUMBER OF INSERTS ALLOWED PER MESSAGE CONSTRUCTION  * 03350000
.*        IS 255 INSERTS PER MESSAGE.                                 * 03400000
.*                                                                    * 03450000
.*    OUTPUT OF MACRO:                                                * 03500000
.*                                                                    * 03550000
.*      GIVEN THE INPUT MACRO CALL:                                   * 03600000
.*                                                                    * 03650000
.*        Q05301 BLSDMSGG ' BLS05301I NO PROBLEMS EXIST            X  * 03700000
.*                        FOR RANGE ,,,,:,,,,'                        * 03750000
.*                                                                    * 03800000
.*      THIS MACRO WILL GENERATE:                                     * 03850000
.*                                                                    * 03900000
.*        BLS05301  DC    H'4'             NUMBER OF INSERTS.         * 03950000
.*                  DC    AL1(0),AL1(0)    RESERVED.                  * 04000000
.*                  DC    AL1(0),AL1(0)    RESERVED.                  * 04050000
.*                  DC    AL1(0),AL1(0)    RESERVED.                  * 04100000
.*                  DC    AL1(0),AL1(0)    RESERVED.                  * 04150000
.*                  DC    AL1(39)          LENGTH OF TEXT SEGMENT.    * 04200000
.*                  DC    C' BLS05301I NO PROBLEMS EXIST FOR RANGE '  * 04250000
.*                  DC    AL1(0)           LENGTH OF TEXT SEGMENT.    * 04300000
.*                  DC    AL1(1)           LENGTH OF TEXT SEGMENT.    * 04350000
.*                  DC    C':'             TEXT SEGMENT.              * 04400000
.*                  DC    AL1(0)           LENGTH OF TEXT SEGMENT.    * 04450000
.*                  DC    AL1(0)           LENGTH OF TEXT SEGMENT.    * 04500000
.*                                                                    * 04550000
.*      SEE "PROCESSING DESCRIPTION" FOR DISCUSSION OF HOW THE        * 04600000
.*      MACRO WORKS TO PRODUCE THIS OUTPUT, AND FOR THE MACRO'S       * 04650000
.*      PROCESSING IF THE 'MSGTXT' IS OMITTED.                        * 04700000
.*                                                                    * 04750000
.*    EXIT-NORMAL:  ASSEMBLER LANGUAGE STATEMENTS ARE PRODUCED        * 04800000
.*                  FOR THE MESSAGE, OR ASSEMBLER LANGUAGE            * 04850000
.*                  STATEMENTS ARE PRODUCED FOR THE CROSS REFERENCE   * 04900000
.*                  TABLES.                                           * 04950000
.*                                                                    * 05000000
.*    EXIT-ERROR:   THE FOLLOWING MNOTE STATEMENTS CAN BE PRODUCED:   * 05050000
.*                                                                    * 05100000
.*      12,LABEL MUST BE ONE ALPHABETIC AND FIVE DIGITS.              * 05150000
.*                                                                    * 05200000
.*      12,LABELS MUST BE ENTERED IN ASCENDING SEQUENCE.              * 05250000
.*                                                                    * 05300000
.*      12,UNKNOWN CONDITION: SINGLE QUOTATION MARK DETECTED.         * 05350000
.*                                                                    * 05400000
.*    EXTERNAL REFERENCES: N/A                                        * 05450000
.*                                                                    * 05500000
.*                                                                    * 05550000
.*      DATA AREAS:  SEE LOCAL AND GLOBAL SET SYMBOLS.                * 05600000
.*                                                                    * 05650000
.*      CONTROL BLOCKS: N/A                                           * 05700000
.*                                                                    * 05750000
.*    TABLES/WORKAREAS: SEE LOCAL AND GLOBAL SET SYMBOLS.             * 05800000
.*                                                                    * 05850000
.*    MACROS: N/A                                                     * 05900000
.*                                                                    * 05950000
.*    CHANGE ACTIVITY:                                                * 06000000
.*      THIS MODULE IS WRITTEN FOR @G57LPSR.                          * 06050000
.*                                                                    * 06100000
.*    MESSAGES ISSUED: SEE "EXIT-ERROR" ABOVE.                        * 06150000
.*                                                                    * 06200000
.*    ABEND CODES:  N/A                                               * 06250000
.*                                                                    * 06300000
.*    DATA SETS ACCESSED:   NONE                                      * 06350000
.*                                                                    * 06400000
.*    PROCESSING DESCRIPTION:                                         * 06450000
.*                                                                    * 06500000
.*       NOTE: LOCAL SYMBOLS ARE USED PRIMARILY TO PRODUCE            * 06550000
.*             THE INDIVIDUAL MESSAGES. THE GLOBAL SYMBOLS            * 06600000
.*             ARE USED TO STORE INFORMATION UNTIL THE CROSS          * 06650000
.*             REFERENCE TABLES ARE TO BE PRODUCED.                   * 06700000
.*                                                                    * 06750000
.*     1. IF THIS IS THE FIRST USE OF THE MACRO IN THIS MESSAGE       * 06800000
.*        CSECT, OUTPUT THE ASSEMBLER LANGUAGE STATEMENTS:            * 06850000
.*                    DC    A(MSGINDX)                                * 06900000
.*                    DC    CL8'&SYSECT'                              * 06950000
.*                    DC    CL8'&SYSDATE'                             * 07000000
.*                    DC    CL8'&SYSTIME'                             * 07050000
.*        OTHERWISE, BYPASS THIS STEP. THE FIRST FOUR BYTES OF        * 07100000
.*        EACH MESSAGE CSECT MUST BE THE ADDRESS OF THE               * 07150000
.*        COMPONENT CROSS REFERENCE INDEX TABLE.                      * 07200000
.*                                                                    * 07250000
.*     2. IF THE MESSAGE TEXT HAS BEEN OMITTED ON THIS MACRO CALL,    * 07300000
.*        THIS IS AN INDICATION THAT THE CROSS REFERENCE INDEX        * 07350000
.*        TABLES ARE TO BE PRODUCED (THIS MUST ALWAYS BE THE LAST     * 07400000
.*        MACRO CALL IN ANY MESSAGE CSECT). GOTO STEP 4.              * 07450000
.*                                                                    * 07500000
.*     3. OTHERWISE, THE MACRO SHOULD GENERATE ASSEMBLER LANGUAGE     * 07550000
.*        STATEMENTS DESCRIBING THE INPUT MESSAGE.                    * 07600000
.*                                                                    * 07650000
.*        A. ENSURE THAT THE INPUT MESSAGE NUMBER IS SIX CHARACTERS,  * 07700000
.*           THE LAST FIVE ARE DIGITS, AND IS LARGER THAN ANY OTHER   * 07750000
.*           MESSAGE NUMBER PREVIOUSLY ENTERED.                       * 07800000
.*                                                                    * 07850000
.*        B. BREAK THE MESSAGE NUMBER "NNNNN" UP INTO THREE SECTIONS, * 07900000
.*           THAT IS, "XXYZZ", WHERE "XX" IS USED AS THE INDEX        * 07950000
.*           TO THE COMPONENT CROSS REFERENCE INDEX TABLE, "Y" IS     * 08000000
.*           USED AS THE INDEX TO THE SUBCOMPONENT CROSS REFERENCE    * 08050000
.*           INDEX TABLE, AND "ZZ" IS USED AS THE INDEX TO THE        * 08100000
.*           SUB-SUBCOMPONENT CROSS REFERENCE INDEX TABLE.            * 08150000
.*                                                                    * 08200000
.*        C. SAVE THE MESSAGE NUMBER IN GLOBAL SYMBOL &MSGID,         * 08250000
.*           SAVE THE "XX" IN GLOBAL SYMBOL &MSGCP, "Y" IN &MSGSCP,   * 08300000
.*           AND "ZZ" IN &MSGSSCP. SAVE THE MAXIMUM "XX" ENTERED      * 08350000
.*           IN GLOBAL SYMBOL &MAXCP, SAVE THE MAXIMUM "Y" ENTERED    * 08400000
.*           FOR EACH "XX" IN &MAXSCP, AND SAVE THE MAXIMUM "ZZ"      * 08450000
.*           ENTERED FOR EACH "Y" FOR EACH "XX" IN &MACSSCP.          * 08500000
.*                                                                    * 08550000
.*        D. SCAN THE INPUT 'MSGTXT' FOR INSERT LOCATIONS (DOUBLE     * 08600000
.*           COMMAS AND FOR DOUBLE QUOTES. BREAK THE INPUT 'MSGTXT'   * 08650000
.*           INTO SEGMENTS, WHERE THE NUMBER OF SEGMENTS WILL         * 08700000
.*           ALWAYS BE ONE MORE THAN THE NUMBER OF INSERTS IN THE     * 08750000
.*           MESSAGE. MESSAGE SEGMENTS MAY BE OF ZERO LENGTH, WHICH   * 08800000
.*           WOULD OCCUR IF TWO INSERTS ARE FOUND BACK TO BACK.       * 08850000
.*           SAVE THE INFORMATION CONCERNING THE NUMBER OF INSERTS,   * 08900000
.*           THE STARTING LOCATION OF EACH MESSAGE SEGMENT, AND       * 08950000
.*           THE LENGTH OF EACH MESSAGE SEGMENT INTO LOCAL SYMBOLS    * 09000000
.*           &NINSRT, &LOCTXT, AND &LENTXT RESPECTIVELY. FOR EACH     * 09050000
.*           MESSAGE SEGMENT, SAVE THE NUMBER OF DOUBLE QUOTES        * 09100000
.*           IT CONTAINS IN LOCAL SYMBOL &NDQTXT.                     * 09150000
.*                                                                    * 09200000
.*        E. AT THE END OF THE TEXT SCAN, USE THE INFORMATION         * 09250000
.*           ACCUMULATED TO OUTPUT THE ASSEMBLER LANGUAGE             * 09300000
.*           STATEMENTS WHICH DESCRIBE THE ENTIRE MESSAGE.            * 09350000
.*           FIRST IS THE NUMBER OF INSERTS IN THE ENTIRE MESSAGE.    * 09400000
.*           THEN, FOR EACH INSERT, RESERVE ONE HALFWORD.             * 09450000
.*           FINALLY, FOR EACH MESSAGE SEGMENT, OUTPUT ITS LENGTH     * 09500000
.*           FOLLOWED BY THE MESSAGE TEXT. IF THE MESSAGE SEGMENT     * 09550000
.*           TEXT LENGTH IS ZERO, THE MESSAGE SEGMENT TEXT IS         * 09600000
.*           BYPASSED. IF THE MESSAGE SEGMENT TEXT CONTAINS           * 09650000
.*           ONE OR MORE DOUBLE QUOTES, REDUCE THE LENGTH OF          * 09700000
.*           THE MESSAGE SEGMENT BY ONE FOR EACH DOUBLE QUOTE.        * 09750000
.*                                                                    * 09800000
.*        F. EXIT FROM THE MACRO.                                     * 09850000
.*                                                                    * 09900000
.*     4. THE INPUT 'MSGTXT' WAS OMITTED; THEREFORE, THIS IS THE      * 09950000
.*        END OF THIS MESSAGE CSECT. PRODUCE THE CROSS REFERENCE      * 10000000
.*        TABLES.                                                     * 10050000
.*                                                                    * 10100000
.*        A. PRODUCE A PATCH AREA WITH THE LABEL "PATCHLBL" WHICH     * 10150000
.*           IS 10% OF THE SIZE OF ALL THE PRECEEDING MESSAGES.       * 10200000
.*                                                                    * 10250000
.*        B. PRODUCE THE COMPONENT CROSS REFERENCE TABLE. THIS        * 10300000
.*           CONSISTS OF THE NUMBER OF ENTRIES (INCLUDING             * 10350000
.*           THE ZERO ENTRIES) IN THIS TABLE, FOLLOWED BY PRODUCTION  * 10400000
.*           OF A TABLE ENTRY. IF A MESSAGE NUMBER WITH THE VALUE     * 10450000
.*           "XX" EXISTS, PRODUCE AN ADCON FOR ITS SUBCOMPONENT       * 10500000
.*           TABLE; OTHERWISE, PRODUCE A ZERO. ENTRIES RANGE FROM     * 10550000
.*           INDEX VALUE 0 TO &MAXCP.                                 * 10600000
.*                                                                    * 10650000
.*        C. FOR EACH "XX" ENTRY WHICH EXISTS, PRODUCE THE            * 10700000
.*           SUBCOMPONENT TABLE. THIS CONSISTS OF THE NUMBER          * 10750000
.*           OF ENTRIES (INCLUDING ZERO VALUES) IN THIS TABLE,        * 10800000
.*           FOLLOWED BY PRODUCTION OF THE TABLE ENTRIES. IF          * 10850000
.*           A MESSAGE NUMBER WITH THE VALUE "XX" AND "Y" EXISTS,     * 10900000
.*           PRODUCE AN ADCON FOR ITS SUB-SUBCOMPONENT TABLE;         * 10950000
.*           OTHERWISE, PRODUCE A ZERO. ENTRIES RANGE FROM AN         * 11000000
.*           INDEX VALUE OF 0 TO &MAXSCP FOR THIS VALUE OF "XX".      * 11050000
.*                                                                    * 11100000
.*        D. FOR EACH "XX" AND "Y" ENTRY WHICH EXISTS, PRODUCE THE    * 11150000
.*           SUB-SUBCOMPONENT TABLE. THIS CONSISTS OF THE NUMBER      * 11200000
.*           OF ENTRIES (INCLUDING ZERO VALUES) IN THIS TABLE,        * 11250000
.*           FOLLOWED BY PRODUCTION OF THE TABLE ENTRIES. IF A        * 11300000
.*           MESSAGE NUMBER WITH THE VALUES "XX" AND "Y" AND "ZZ"     * 11350000
.*           EXISTS, PRODUCE AN ADCON TO THE MESSAGE SKELETON         * 11400000
.*           PREVIOUSLY PRODUCED BY A PREVIOUS MACRO CALL;            * 11450000
.*           OTHERWISE, PRODUCE A ZERO. ENTRIES RANGE FROM AN         * 11500000
.*           INDEX VALUE OF 0 TO &MAXSSCP FOR THIS FALUE OF "XX"      * 11550000
.*           FOR THIS VALUE OF "Y".                                   * 11600000
.*                                                                    * 11650000
.*        E. FOLLOWING PRODUCTION OF ALL CROSS REFERENCE TABLES,      * 11700000
.*           EXIT THE MACRO.                                          * 11750000
.*                                                                    * 11800000
.**** END OF SPECIFICATIONS ******************************************* 11850000
         LCLA  &LOC           CURRENT &TEXT SCAN INDEX.                 11900000
         LCLA  &NINSRT        TOTAL NUMBER OF INSERT LOCATIONS FOUND.   11950000
         LCLA  &LOCTXT(255)   TEXT SEGMENT N STARTING INDEX.            12000000
         LCLA  &LENTXT(255)   TEXT SEGMENT N LENGTH.                    12050000
         LCLA  &NDQTXT(255)   NUMBER OF DOUBLE QUOTES IN TEXT SEGMENT N 12100000
         LCLA  &NDQ           NUMBER OF DOUBLE QUOTES COUNTER.          12150000
         LCLA  &LMSG          LENGTH OF ENTIRE MESSAGE.                 12200000
         LCLC  &TEXT          TEXT OF MESSAGE.                          12250000
         LCLA  &LTEXT         LENGTH OF TEXT OF MESSAGE.                12300000
         LCLC  &SEG           TEXT SEGMENT.                             12350000
         LCLA  &LSEG          LENGTH OF TEXT SEGMENT.                   12400000
         LCLA  &MSGLEN        LENGTH OF CONSTRUCTED MESSAGE.            12450000
         LCLA  &CNT           LOOP COUNTER.                             12500000
         LCLA  &FNLLEN        FINAL LENGTH OF TEXT SEQMENT N.           12550000
         LCLC  &TMSGID        TEMPORARY MESSAGE IDENTIFIER.             12600000
         LCLA  &TNMSGID       TEMPORARY NUMERIC MESSAGE IDENTIFIER.     12650000
         LCLC  &TMSGC         TEMPORARY CHARACTER(S) OF THE MESSAGE ID. 12700000
         LCLA  &COMP          COMPONENT NUMBER.                         12750000
         LCLA  &SCOMP         SUBCOMPONENT NUMBER.                      12800000
         LCLA  &SSCOMP        SUB-SUBCOMPONENT NUMBER.                  12850000
         LCLC  &LABEL         LABEL FOR MESSAGE IDENTIFIERS.            12900000
.*                                                                      12950000
.*******************************************************************    13000000
.*  MESSAGE IDENTIFIERS ARE INPUT THROUGH &MSGNO AS CXXYZZ.        *    13050000
.*    C  - ANY ALPHABETIC CHARACTER. IT IS STRIPPED OFF AND        *    13100000
.*         THROWN AWAY. IT IS USED BECAUSE THE ASSEMBLER INSISTS   *    13150000
.*         THAT A LABEL STARTS WITH AN ALPHABETIC.                 *    13200000
.*    XX - IDENTIFIES THE COMPONENT BLOCK OF THE SET OF MESSAGES.  *    13250000
.*    Y  - IDENTIFIES THE SUBCOMPONENT BLOCK OF THE SET OF         *    13300000
.*         MESSAGES.                                               *    13350000
.*    ZZ - IDENTIFIES THE SUB-SUBCOMPONENT BLOCK OF THE SET OF     *    13400000
.*         MESSAGES.                                               *    13450000
.*******************************************************************    13500000
.*                                                                      13550000
         GBLA  &MAXID         MAXIMUM &MSGID ENTERED.                   13600000
         GBLA  &MSGID(1000)   ASCENDING SEQUENCE OF MESSAGE IDS.        13650000
         GBLA  &NMSGS         NUMBER OF MESSAGES ENTERED.               13700000
         GBLA  &MSGCP(1000)   COMPONENT NUMBER OF MESSAGE N.            13750000
         GBLA  &MSGSCP(1000)  SUBCOMPONENT NUMBER OF MESSAGE N.         13800000
         GBLA  &MSGSSCP(1000) SUB-SUBCOMPONENT NUMBER OF MESSAGE N.     13850000
         GBLA  &FIRST         FIRST TIME SWITCH.                        13900000
         GBLA  &MAXCP         MAX COMPONENT NUMBER ENTERED. FOR         13950000
.*                            EXAMPLE, THE MAXIMUM COMPONENT NUMBER     14000000
.*                            ENTERED MIGHT BE 6.                       14050000
         GBLA  &MAXSCP(100)   MAX SUBCOMPONENT NUMBER ENTERED FOR EACH  14100000
.*                            COMPONENT. FOR EXAMPLE, FOR COMPONENT     14150000
.*                            05, THE MAXIMUM SUBCOMPONENT NUMBER       14200000
.*                            ENTERED MIGHT BE 4.                       14250000
         GBLA  &MAXSSCP(1000) MAX SUB-SUBCOMPCOMPONENT NUMBER ENTERED   14300000
.*                            FOR EACH SUBCOMPONENT. FOR EXAMPLE, FOR   14350000
.*                            SUBCOMPONENT 054, THE MAXIMUM SUB-        14400000
.*                            SUBCOMPONENT NUMBER ENTERED MIGHT BE 22.  14450000
.*                                                                      14500000
.********************************************************************** 14550000
.*  THIS SECTION CAUSES INITIAL INFORMATION TO BE PUT IN THE CSECT.   * 14600000
.********************************************************************** 14650000
.*                                                                      14700000
         AIF   (&FIRST NE 0).NOINIT                                     14750000
&FIRST   SETA  1                                                        14800000
         SPACE 3                                                        14850000
         DC    A(MSGINDX)     ADDRESS OF COMPONENT CROSS                14900000
*                             REFERENCE INDEX TABLE.                    14950000
         DC    CL8'&SYSECT'   CSECT NAME.                               15000000
         DC    CL8'&SYSDATE'  DATE OF LAST COMPILE.                     15050000
         DC    CL8'&SYSTIME'  TIME OF LAST COMPILE.                     15100000
         SPACE 3                                                        15150000
.NOINIT  ANOP                                                           15200000
.*                                                                      15250000
.********************************************************************** 15300000
.*  THIS SECTION DETERMINES WHETHER CROSS REFERENCE INDEX TABLES      * 15350000
.*  ARE TO NOW BE PRODUCED. THE LAST MACRO IN A MESSAGE CSECT SHOULD  * 15400000
.*  OMIT THE MESSAGE TEXT, WHICH WILL CAUSE THE CROSS REFERENCE       * 15450000
.*  TO BE PRODUCED.                                                   * 15500000
.********************************************************************** 15550000
.*                                                                      15600000
         AIF   (T'&MSG EQ 'O').CINDX                                    15650000
.*                                                                      15700000
.********************************************************************** 15750000
.*  THIS SECTION ENSURES THAT &MSGNO IS BEING ENTERED IN ASCENDING    * 15800000
.*  SEQUENCE. IF NOT, AN MNOTE WITH SEVERITY 12 IS ISSUED. IF SO,     * 15850000
.*  THE GLOBAL VARIABLES ARE UPDATED TO REFLECT THE NEW MESSAGE.      * 15900000
.********************************************************************** 15950000
.*                                                                      16000000
         AIF   (K'&MSGNO NE 6).E1MSGNO                                  16050000
&TMSGID  SETC  '&MSGNO'(2,(K'&MSGNO)-1)                                 16100000
&CNT     SETA  1                                                        16150000
.CKMSGID ANOP                                                           16200000
&TMSGC   SETC  '&TMSGID'(&CNT,1)                                        16250000
         AIF   ('&TMSGC' LT '0' OR '&TMSGC' GT '9').E1MSGNO             16300000
&CNT     SETA  &CNT+1                                                   16350000
         AIF   (&CNT LE 5).CKMSGID                                      16400000
&TNMSGID SETA  &TMSGID                                                  16450000
.* MESSAGE NUMBER ENTERED IS IN PROPER SYNTAX.                          16500000
.* CHECK FOR ASCENDING SEQUENCE                                         16550000
         AIF   (&TNMSGID LE &MAXID).E2MSGNO                             16600000
&MAXID   SETA  &TNMSGID                                                 16650000
&TMSGC   SETC  '&TMSGID'(1,2)                                           16700000
&COMP    SETA  &TMSGC                                                   16750000
&TMSGC   SETC  '&TMSGID'(3,1)                                           16800000
&SCOMP   SETA  &TMSGC                                                   16850000
&TMSGC   SETC  '&TMSGID'(4,2)                                           16900000
&SSCOMP  SETA  &TMSGC                                                   16950000
&MAXCP   SETA  &COMP                                                    17000000
&MAXSCP(&COMP+1)  SETA  &SCOMP                                          17050000
&MAXSSCP(10*&COMP+&SCOMP+1)  SETA  &SSCOMP                              17100000
&NMSGS   SETA  &NMSGS+1                                                 17150000
&MSGID(&NMSGS)  SETA  &TNMSGID                                          17200000
&MSGCP(&NMSGS)    SETA  &COMP                                           17250000
&MSGSCP(&NMSGS)   SETA  &SCOMP                                          17300000
&MSGSSCP(&NMSGS)  SETA  &SSCOMP                                         17350000
.*                                                                      17400000
.*******************************************************************    17450000
.*  THIS SECTION INITIALIZES FOR THE TEXT SCAN.                    *    17500000
.*******************************************************************    17550000
.*                                                                      17600000
&LMSG    SETA  K'&MSG                                                   17650000
&TEXT    SETC  '&MSG'(2,&LMSG-2) STRIP OFF QUOTES AROUND &MSG.          17700000
&LTEXT   SETA  &LMSG-2        SET LENGTH OF TEXT.                       17750000
&LOC     SETA  1              STARTING SCAN LOCATION.                   17800000
&LOCTXT(&NINSRT+1)  SETA &LOC STARTING INDEX OF TEXT SEGMENT 1.         17850000
&NDQ     SETA  0              INITIALIZE THE DOUBLE QUOTE COUNTER.      17900000
.*                                                                      17950000
.*******************************************************************    18000000
.*  THIS SECTION IS THE MAIN DRIVING LOOP FOR THE TEXT SCAN.       *    18050000
.*******************************************************************    18100000
.*                                                                      18150000
.MAINLOP AIF   ('&TEXT'(&LOC,1) EQ ',').CKINS                           18200000
         AIF   ('&TEXT'(&LOC,1) EQ '''').CKQUOTE                        18250000
.CONTML  ANOP                                                           18300000
&LOC     SETA  &LOC+1         BUMP &TEXT INDEX PTR.                     18350000
.CONTMLA ANOP                                                           18400000
         AIF   (&LOC LT &LTEXT).MAINLOP                                 18450000
.* DROP THROUGH IMPLIES THAT ENTIRE TEXT HAS BEEN SCANNED FOR INSERTS.  18500000
.*                                                                      18550000
.* BUMP TEXT INDEX PTR TO ONE PAST END OF TEXT.                         18600000
&LOC     SETA  &LTEXT+1                                                 18650000
.* SET LENGTH OF LAST TEXT SEGMENT.                                     18700000
&LENTXT(&NINSRT+1)  SETA  &LOC-&LOCTXT(&NINSRT+1)                       18750000
.* SAVE NUMBER OF DOUBLE QUOTES IN THE LAST TEXT SEGMENT.               18800000
&NDQTXT(&NINSRT+1)  SETA  &NDQ                                          18850000
         AGO   .FORM          GO FORM OUTPUT CONSTRUCTS.                18900000
.*                                                                      18950000
.*******************************************************************    19000000
.*  THIS SECTION CHECKS FOR AND HANDLES INSERT LOCATIONS.          *    19050000
.*******************************************************************    19100000
.*                                                                      19150000
.CKINS   AIF   ('&TEXT'(&LOC+1,1) NE ',').CONTML                        19200000
.* HAVE FOUND A DOUBLE COMMA, IMPLYING THIS IS THE END OF THIS          19250000
.* TEXT SEGMENT. THE DOUBLE COMMA IS DELETED FROM THE TEXT SEGMENT.     19300000
.*                                                                      19350000
.* COMPUTE AND SAVE LENGTH OF THIS TEXT SEGMENT.                        19400000
&LENTXT(&NINSRT+1)  SETA  &LOC-&LOCTXT(&NINSRT+1)                       19450000
.* SAVE NUMBER OF DOUBLE QUOTES FOUND IN THIS TEXT SEGMENT.             19500000
&NDQTXT(&NINSRT+1)  SETA  &NDQ                                          19550000
.* RE-INITIALIZE THE DOUBLE QUOTE COUNTER.                              19600000
&NDQ     SETA  0                                                        19650000
.* UPDATE NUMBER OF INSERTS FOUND.                                      19700000
&NINSRT  SETA  &NINSRT+1                                                19750000
.* UPDATE CURRENT SCAN INDEX PTR PAST BOTH COMMAS.                      19800000
&LOC     SETA  &LOC+2                                                   19850000
.* SET NEXT TEXT SEGMENT STARTING INDEX.                                19900000
&LOCTXT(&NINSRT+1)  SETA  &LOC                                          19950000
         AGO   .CONTMLA                                                 20000000
.*                                                                      20050000
.*******************************************************************    20100000
.*  THIS SECTION CHECKS FOR AND HANDLES DOUBLE QUOTES.             *    20150000
.*******************************************************************    20200000
.*                                                                      20250000
.* SHOULD NEVER HIT JUST A SINGLE QUOTE, BUT MAKE CHECK ANYHOW.         20300000
.CKQUOTE AIF   ('&TEXT'(&LOC+1,1) NE '''').E3UNKN                       20350000
&NDQ     SETA  &NDQ+1         BUMP NUMBER OF DOUBLE QUOTES FOUND.       20400000
&LOC     SETA  &LOC+2         BUMP SCAN INDEX PTR PAST BOTH QUOTES...   20450000
         AGO   .CONTMLA       ...AND GO CONTINUE SCAN.                  20500000
.*                                                                      20550000
.*******************************************************************    20600000
.*  THIS SECTION FORMS THE MESSAGE SEGMENT CONSTRUCTS.             *    20650000
.*******************************************************************    20700000
.*                                                                      20750000
.FORM    ANOP                                                           20800000
&MSGLEN  SETA  0                                                        20850000
&LABEL   SETC  'BLS'.'&TMSGID'                                          20900000
&LABEL   DC    H'&NINSRT'     NUMBER OF INSERTS FOR THIS MESSAGE.       20950000
&CNT     SETA  1                                                        21000000
.CONV1   AIF   (&CNT GT &NINSRT).FORMMSG                                21050000
         DC    AL1(0),AL1(0)  RESERVED.                                 21100000
&CNT     SETA  &CNT+1                                                   21150000
         AGO   .CONV1                                                   21200000
.FORMMSG ANOP                                                           21250000
&CNT     SETA  1                                                        21300000
.NEXTSEG ANOP                                                           21350000
&LSEG    SETA  &LENTXT(&CNT)       NUMBER OF CHARACTERS IN SEGMENT N.   21400000
.* FINAL LENGTH OF TEXT SEGMENT AFTER DOUBLE QUOTES ARE SQUEEZED OUT.   21450000
&FNLLEN  SETA  &LSEG-&NDQTXT(&CNT)                                      21500000
&MSGLEN  SETA  &MSGLEN + &FNLLEN   RUNNING COUNT OF TOTAL MESSAGE LEN.  21550000
         DC    AL1(&FNLLEN)   LENGTH OF TEXT SEGMENT.                   21600000
         AIF   (&LSEG EQ 0).NOSGMT                                      21650000
&SEG     SETC  '&TEXT'(&LOCTXT(&CNT),&LSEG)                             21700000
         DC    C'&SEG'        TEXT SEGMENT.                             21750000
.NOSGMT  ANOP                                                           21800000
&CNT     SETA  &CNT+1                                                   21850000
         AIF   (&CNT LE &NINSRT+1).NEXTSEG                              21900000
         AIF   (&MSGLEN LE 255).ENDFORM                                 21950000
         MNOTE 12,'MESSAGE LARGER THAN 255 CHARACTERS.'                 22000000
.ENDFORM ANOP                                                           22050000
         SPACE 2                                                        22100000
         AGO   .MEND                                                    22150000
.*                                                                      22200000
.********************************************************************** 22250000
.*  THIS SECTION CONSTRUCTS THE COMPONENT MESSAGE CROSS               * 22300000
.*  REFERENCE INDEX TABLE.                                            * 22350000
.********************************************************************** 22400000
.*                                                                      22450000
.CINDX   ANOP                                                           22500000
         SPACE 5                                                        22550000
PATCHLBL EQU   *              PATCH AREA.                               22600000
         ORG   *+1+(*-&SYSECT)/10                                       22650000
         EJECT                                                          22700000
**********************************************************************  22750000
*  COMPONENT CROSS REFERENCE INDEX TABLE.                            *  22800000
**********************************************************************  22850000
         SPACE 2                                                        22900000
         CNOP  0,4                                                      22950000
MSGINDX  EQU   *                                                        23000000
         DC    F'&MAXCP'                                                23050000
&CNT     SETA  1                                                        23100000
&COMP    SETA  0                                                        23150000
.CKCOMP  ANOP                                                           23200000
         AIF   (&COMP EQ &MSGCP(&CNT)).FOUND1                           23250000
         DC    A(0)                                                     23300000
.BCOMP   ANOP                                                           23350000
&COMP    SETA  &COMP+1                                                  23400000
         AIF   (&COMP GT &MAXCP).SCOMP                                  23450000
         AGO   .CKCOMP                                                  23500000
.FOUND1  AIF   (&COMP LE 9).PAD1                                        23550000
         DC    A(SBLK&COMP)                                             23600000
         AGO   .NXTCOMP                                                 23650000
.PAD1    DC    A(SBLK0&COMP)                                            23700000
.NXTCOMP ANOP                                                           23750000
&CNT     SETA  &CNT+1                                                   23800000
         AIF   (&CNT GT &NMSGS).SCOMP                                   23850000
         AIF   (&MSGCP(&CNT) EQ &MSGCP(&CNT-1)).NXTCOMP                 23900000
         AGO   .BCOMP                                                   23950000
.*                                                                      24000000
.********************************************************************** 24050000
.*  THIS SECTION CONSTRUCTS THE SUBCOMPONENT MESSAGE CROSS            * 24100000
.*  REFERENCE INDEX TABLES.                                           * 24150000
.********************************************************************** 24200000
.*                                                                      24250000
.SCOMP   ANOP                                                           24300000
         EJECT                                                          24350000
&CNT     SETA  1                                                        24400000
.NEWCOMP ANOP                                                           24450000
         SPACE 3                                                        24500000
**********************************************************************  24550000
*  SUBCOMPONENT MESSAGE CROSS REFERENCE INDEX TABLE.                 *  24600000
**********************************************************************  24650000
         SPACE 2                                                        24700000
&SCOMP   SETA  0                                                        24750000
&COMP    SETA  &MSGCP(&CNT)                                             24800000
         AIF   (&COMP LE 9).PADS1                                       24850000
&LABEL   SETC  'SBLK'.'&COMP'                                           24900000
         AGO   .LBSCOMP                                                 24950000
.PADS1   ANOP                                                           25000000
&LABEL   SETC  'SBLK0'.'&COMP'                                          25050000
.LBSCOMP ANOP                                                           25100000
&LABEL   EQU   *                                                        25150000
         DC    F'&MAXSCP(&COMP+1)'                                      25200000
.CKSCOMP ANOP                                                           25250000
         AIF   (&SCOMP EQ &MSGSCP(&CNT)).FOUND2                         25300000
         DC    A(0)                                                     25350000
.BSCOMP  ANOP                                                           25400000
&SCOMP   SETA  &SCOMP+1                                                 25450000
         AIF   (&SCOMP GT &MAXSCP(&COMP+1)).NXTSC                       25500000
         AGO   .CKSCOMP                                                 25550000
.FOUND2  AIF   (&COMP LE 9).PADS2                                       25600000
         DC    A(SSBLK&COMP&SCOMP)                                      25650000
         AGO   .NXTSC                                                   25700000
.PADS2   ANOP                                                           25750000
         DC    A(SSBLK0&COMP&SCOMP)                                     25800000
.NXTSC   ANOP                                                           25850000
&CNT     SETA  &CNT+1                                                   25900000
         AIF   (&CNT GT &NMSGS).SSCOMP                                  25950000
         AIF   (&MSGCP(&CNT) NE &COMP).NEWCOMP                          26000000
         AIF   (&MSGSCP(&CNT) EQ &MSGSCP(&CNT-1)).NXTSC                 26050000
         AGO   .BSCOMP                                                  26100000
.*                                                                      26150000
.********************************************************************** 26200000
.*  THIS SECTION CONTSTRUCTS THE SUB-SUBCOMPONENT MESSAGE             * 26250000
.*  CROSS REFERENCE INDEX TABLE.                                      * 26300000
.********************************************************************** 26350000
.*                                                                      26400000
.SSCOMP  ANOP                                                           26450000
         EJECT                                                          26500000
&CNT     SETA  1                                                        26550000
.NEWSCMP ANOP                                                           26600000
         SPACE 3                                                        26650000
**********************************************************************  26700000
*  SUB-SUBCOMPONENT CROSS REFERENCE INDEX TABLE.                     *  26750000
**********************************************************************  26800000
         SPACE 2                                                        26850000
&SSCOMP  SETA  0                                                        26900000
&SCOMP   SETA  &MSGSCP(&CNT)                                            26950000
&COMP    SETA  &MSGCP(&CNT)                                             27000000
         AIF   (&COMP LE 9).PADSS1                                      27050000
&LABEL   SETC  'SSBLK'.'&COMP'.'&SCOMP'                                 27100000
         AGO   .LBSSCMP                                                 27150000
.PADSS1  ANOP                                                           27200000
&LABEL   SETC  'SSBLK0'.'&COMP'.'&SCOMP'                                27250000
.LBSSCMP ANOP                                                           27300000
&LABEL   EQU   *                                                        27350000
         DC    F'&MAXSSCP(10*&COMP+&SCOMP+1)'                           27400000
.CKSSCMP ANOP                                                           27450000
         AIF   (&SSCOMP EQ &MSGSSCP(&CNT)).FOUND3                       27500000
         DC    A(0)                                                     27550000
.BSSCOMP ANOP                                                           27600000
&SSCOMP  SETA  &SSCOMP+1                                                27650000
         AIF   (&SSCOMP GT &MAXSSCP(10*&COMP+&SCOMP+1)).NXTSSC          27700000
         AGO   .CKSSCMP                                                 27750000
.FOUND3  AIF   (&COMP LE 9).PADSS2                                      27800000
         DC    A(BLS&MSGID(&CNT))                                       27850000
         AGO   .NXTSSC                                                  27900000
.PADSS2  DC    A(BLS0&MSGID(&CNT))                                      27950000
.NXTSSC  ANOP                                                           28000000
&CNT     SETA  &CNT+1                                                   28050000
         AIF   (&CNT GT &NMSGS).MEND                                    28100000
         AIF   (&MSGSCP(&CNT) NE &SCOMP).NEWSCMP                        28150000
         AIF   (&MSGCP(&CNT) NE &COMP).NEWSCMP                          28200000
         AGO   .BSSCOMP                                                 28250000
.*                                                                      28300000
.********************************************************************** 28350000
.*  THIS SECTION CONTAINS THE MNOTE ERROR MESSAGES.                   * 28400000
.********************************************************************** 28450000
.*                                                                      28500000
.E1MSGNO MNOTE 12,'LABEL MUST BE ONE ALPHABETIC AND FIVE DIGITS.'       28550000
         AGO   .MEND                                                    28600000
.E2MSGNO MNOTE 12,'LABELS MUST BE ENTERED IN ASCENDING SEQUENCE.'       28650000
         AGO   .MEND                                                    28700000
.E3UNKN  MNOTE 12,'UNKNOWN CONDITION: SINGLE QUOTATION MARK DETECTED.'  28750000
         AGO   .MEND                                                    28800000
.MEND    MEND                                                           28850000
./  ADD  SSI=80200071,NAME=BLSRCKLT
         MACRO                                                          00050000
         BLSRCKLT &LIST,&P=,&V=   LIST, PARMETER, AND ASSOC. VALUE      00100000
         GBLA  &POSIT,&VALID   FOR INTER MACRO COMM                     00150000
         LCLA  &N             LOOP CONTROL                              00200000
.LOOP    AIF   (&N EQ N'&LIST).OUT                                      00250000
&N       SETA  &N+1                                                     00300000
         AIF   ('&P' NE '&LIST(&N)').LOOP                               00350000
&POSIT   SETA  &POSIT+&V                                                00400000
&VALID   SETA  &VALID+1                                                 00450000
.OUT     MEND                                                           00500000
./  ADD  SSI=80190116,NAME=BLSRCVTA
         MACRO                                                          00050000
&N       BLSRCVTA &ROW,&COL                                             00100000
         GBLC  &TR3270,&B1,&B2                                          00150000
         LCLA  &POSIT,&BYT1,&BYT2                                       00200000
         AIF   (T'&ROW EQ 'N' AND T'&COL EQ 'N').OK1                    00250000
         MNOTE 4,'ROW/COL MAY NOT BE NUMERIC'                           00300000
.OK1     AIF   (&ROW GE 1 AND &ROW LE 24).OK2                           00350000
         MNOTE 8,'ROW VALUE &ROW NOT IN RANGE 1 - 24'                   00400000
         MEXIT                                                          00450000
.OK2     AIF   (&COL GE 1 AND &COL LE 80).OK3                           00500000
         MNOTE 8,'COLUMN VALUE &COL NOT IN RANGE 1 - 80'                00550000
         MEXIT                                                          00600000
.OK3     ANOP                                                           00650000
&POSIT   SETA  80*(&ROW-1)+&COL-1                                       00700000
&BYT1    SETA  &POSIT/64      MODULO 64 DIGIT                           00750000
&BYT2    SETA  &POSIT-(64*&BYT1)                                        00800000
&B1      SETC  '&TR3270'(2*&BYT1+1,2)                                   00850000
&B2      SETC  '&TR3270'(2*&BYT2+1,2)                                   00900000
.OUT     MEND                                                           00950000
./  ADD  SSI=80190125,NAME=BLSRDEND
         MACRO                                                          00050000
&LABEL   BLSRDEND &PREFIX                                               00100000
.*--------------------------------------------------------------------* 00150000
.* BLSRDEND--TERMINATE A DATA TYPE PROCESSING TABLE DEFINITION        * 00200000
.*--------------------------------------------------------------------* 00250000
         GBLA  &DTDIM                                                   00300000
         GBLC  &GP,&GD(100),&GN(100),&GS(100),&GV(100)                  00350000
         LCLA  &JD,&JL,&JX                                              00400000
         LCLC  &CD,&CN,&CS,&CV,&CX                                      00450000
&GP.DIM  DC    F'&DTDIM'               DIMENSION OF ARRAY               00500000
*------- END OF TABLE HEADING ----------------------------------------* 00550000
         SPACE                                                          00600000
*------- BEGIN BODY OF TABLE -----------------------------------------* 00650000
&JD      SETA  1                       CURRENT DATA NAME INDEX          00700000
.L01     AIF   (&JD GT &DTDIM).L99     ALL DATA NAME PROCESSED          00750000
&CD      SETC  '&GD(&JD)'              CURRENT DATA NAME                00800000
&JL      SETA  K'&CD                   LENGTH OF DATA NAME              00850000
&CN      SETC  '&GN(&JD)'              NORMALIZED DATA NAME             00900000
&CS      SETC  '&GS(&JD)'              FIND EXIT ENTRY POINT NAME       00950000
&CV      SETC  '&GV(&JD)'              SCAN EXIT ENTRY POINT NAME       01000000
&JX      SETA  &JD                     NORMALIZED SEARCH INDEX          01050000
         AIF   ('&CD' EQ '&CN').L03    SELF-NORMALIZED                  01100000
&JX      SETA  &DTDIM                  NORMALIZED SEARCH INDEX          01150000
&CX      SETC  '&GD(&DTDIM)'           SEARCH DATA NAME                 01200000
.L02     AIF   ('&CN' EQ '&CX').L03    NORMALIZED TYPE FOUND            01250000
&JX      SETA  &JX-1                   NORMALIZED SEARCH INDEX          01300000
&CX      SETC  '&GD(&JX)'              SEARCH DATA NAME                 01350000
         AIF   (&JX GE 1).L02          CONTINUE NORMALIZED TYPE SEARCH  01400000
         MNOTE 8,'NORMALIZED DATA NAME ERROR FOR &CD'                   01450000
&JX      SETA  &JD                     SUBSTITUTE DATA NAME             01500000
.L03     ANOP                                                           01550000
&GP.&JD  DC    FL1'&JL',CL31'&CD',F'&JX',CL8'&CS',CL8'&CV'              01600000
&JD      SETA  &JD+1                   DATA NAME INDEX                  01650000
         AGO   .L01                                                     01700000
.L99     ANOP                                                           01750000
         SPACE                                                          01800000
*------- END OF DATA NAME PROCESSING TABLE ---------------------------* 01850000
         MEND                                                           01900000
./  ADD  SSI=80200077,NAME=BLSRDT
         MACRO                                                          00050000
&LABEL   BLSRDT &PFX                                                    00100000
*---------------------------------------------------------------------* 00150000
* BLSRDT--DEFINE DATA TYPE PROCESSING TABLE HEADER FIELDS             * 00200000
*---------------------------------------------------------------------* 00250000
         GBLA  &DTDIM                                                   00300000
         GBLC  &GP                                                      00350000
&DTDIM   SETA  0                                                        00400000
&GP      SETC  '&PFX'                                                   00450000
&LABEL   DS    0F                      DATA TYPE PROCESSING TABLE       00500000
&PFX.ID  DC    CL8'&LABEL'             IDENTIFIER                       00550000
         MEND                                                           00600000
./  ADD  SSI=80200079,NAME=BLSRDTD
         MACRO                                                          00050000
         BLSRDTD &DTD,&FIND=,&NORMAL=,&SCAN=                            00100000
.*--------------------------------------------------------------------* 00150000
.* BLSRDTD--DEFINE PROCESSING FOR ONE DATA TYPE                       * 00200000
.*--------------------------------------------------------------------* 00250000
         GBLA  &DTDIM                                                   00300000
         GBLC  &GP,&GD(100),&GN(100),&GS(100),&GV(100)                  00350000
.*------------ PROCESS DATA TYPE NAME  ------------------------------   00400000
&DTDIM   SETA  &DTDIM+1                DIMENSION OF DATA TYPE ARRAY     00450000
&GD(&DTDIM) SETC '&DTD'                DATA TYPE                        00500000
.*------------ PROCESS NORMALIZED DATA TYPE NAME --------------------*. 00550000
         AIF   (T'&NORMAL EQ 'O').L01  IMPLICIT NORMALIZED DATA TYPE    00600000
&GN(&DTDIM) SETC '&NORMAL'             NORMAL DATA TYPE                 00650000
         AGO   .L02                                                     00700000
.L01     ANOP                                                           00750000
&GN(&DTDIM) SETC '&DTD'                NO NORMAL DATA TYPE              00800000
.*------------ PROCESS FIND EXIT NAME  ------------------------------*. 00850000
.L02     AIF   (T'&FIND EQ 'O').L03    NO FIND EXIT                     00900000
&GS(&DTDIM) SETC '&FIND'               FIND EXIT NAME                   00950000
         AGO   .L04                                                     01000000
.L03     ANOP                                                           01050000
&GS(&DTDIM) SETC ' '                   NO FIND EXIT                     01100000
.*------------ PROCESS SCAN EXIT NAME  ------------------------------*. 01150000
.L04     AIF   (T'&SCAN EQ 'O').L05    NO SCAN EXIT                     01200000
&GV(&DTDIM) SETC '&SCAN'               SCAN EXIT NAME                   01250000
         AGO   .L06                                                     01300000
.L05     ANOP                                                           01350000
&GV(&DTDIM) SETC ' '                   NO SCAN EXIT                     01400000
.L06     ANOP                                                           01450000
         MEND                                                           01500000
./  ADD  SSI=80200080,NAME=BLSREUA
         MACRO                                                          00050000
&N       BLSREUA &ROW,&COL                                              00100000
         GBLC  &B1,&B2                                                  00150000
         BLSRCVTA &ROW,&COL                                             00200000
&N       DC    AL1(ORDEREUA),XL2'&B1&B2'   EUA, BUFFER ADDRESS          00250000
         SPACE 2                                                        00300000
         MEND                                                           00350000
./  ADD  SSI=80200094,NAME=BLSRRA
         MACRO                                                          00050000
&N       BLSRRA &ROW,&COL,&BYTE                                         00100000
         GBLC  &B1,&B2                                                  00150000
         BLSRCVTA &ROW,&COL                                             00200000
&N       DC    AL1(ORDERRA),XL2'&B1&B2',AL1(&BYTE) RA ORD, ADDR, DATA   00250000
         SPACE 2                                                        00300000
         MEND                                                           00350000
./  ADD  SSI=80200107,NAME=BLSRROTB
         MACRO                                                          00050000
&N       BLSRROTB  &FROM,&TO,&COL                                       00100000
         GBLC  &B1,&B2             TRANSLATED ADDRESSES FROM BLSRCVTA   00150000
         LCLA  &A                  COUNTER                              00200000
         LCLC  &STRING             HOLDS ADDRESSES DURING BLSRCVTA LOOP 00250000
&A       SETA  &FROM               INITIAL ROW VALUE                    00300000
.L       AIF   (&A GT &TO).OUT     DON'T DO TO MUCH                     00350000
         BLSRCVTA &A,&COL          GET THIS ADDRESS                     00400000
&STRING  SETC  '&STRING&B1&B2'     CATENATE PREVIOUS STRING W/NEW ADDR  00450000
&A       SETA  &A+1                UPDATE ROW VALUE                     00500000
         AGO   .L                  CHECK FOR OUT OF LOOP                00550000
.OUT     ANOP                      &STRING IS NOW COMPLETE              00600000
&N       DC    X'&STRING'                                               00650000
         MEND                                                           00700000
./  ADD  SSI=80220114,NAME=BLSRSBA
         MACRO                                                          00050000
&N       BLSRSBA &ROW,&COL                                              00100000
         GBLC  &B1,&B2                                                  00150000
         BLSRCVTA &ROW,&COL                                             00200000
&N       DC    AL1(ORDERSBA),XL2'&B1&B2'   SBA, BUFFER ADDRESS          00250000
         SPACE 2                                                        00300000
         MEND                                                           00350000
./  ADD  SSI=80220115,NAME=BLSRSF
         MACRO                                                          00050000
&LABEL   BLSRSF &LIST                                                   00100000
         GBLA  &POSIT,&VALID                                            00150000
         GBLC  &TR3270                                                  00200000
         LCLC  &BYTE                                                    00250000
&POSIT   SETA  0                                                        00300000
         AIF   (N'&LIST EQ 0).OK                                        00350000
&VALID   SETA  0                                                        00400000
         BLSRCKLT &LIST,P=PROT,V=32                                     00450000
         BLSRCKLT &LIST,P=NUM,V=16                                      00500000
         BLSRCKLT &LIST,P=NONDISP,V=12                                  00550000
         BLSRCKLT &LIST,P=INTENDET,V=8                                  00600000
         BLSRCKLT &LIST,P=DET,V=4                                       00650000
         BLSRCKLT &LIST,P=MDT,V=1                                       00700000
         AIF   (&VALID EQ N'&LIST).OK                                   00750000
         MNOTE 8,'UNKNOWN OPERAND IN LIST'                              00800000
.OK      ANOP                                                           00850000
&BYTE    SETC  '&TR3270'(2*&POSIT+1,2)                                  00900000
&LABEL   DC    AL1(ORDERSF),XL1'&BYTE'    START FIELD ORD, ATTRIB BYTE  00950000
         SPACE 2                                                        01000000
         MEND                                                           01050000
./  ADD  SSI=80220116,NAME=BLSRWCC
         MACRO                                                          00050000
&LABEL   BLSRWCC &LIST,&OP=DC                                           00100000
         GBLA  &POSIT,&VALID       FOR COMMUNICATION WITH BLSRCKLTMACRO 00150000
         GBLC  &TR3270             TO PICK UP EBCDIC REP. OF 3270 CODE  00200000
         LCLC  &BYTE               HOLDS OUTPUT VALUE                   00250000
&VALID   SETA  0                   SINCE IT'S GLOBAL                    00300000
         BLSRCKLT &LIST,P=ALARM,V=4 SHOULD ALARM BE SOUNDED?            00350000
         BLSRCKLT &LIST,P=RESTORE,V=2 SHOULD KEYBOARD BE UNLOCKED?      00400000
         BLSRCKLT &LIST,P=RESETMDT,V=1 SHOULD MODIFIED-TAGS BE RESET?   00450000
         AIF   (&VALID EQ N'&LIST).OK  WERE ALL VALUES IN LIST OK?      00500000
         MNOTE 8,'UNKNOWN OPERAND(S) IN LIST'                           00550000
.OK      ANOP                                                           00600000
&BYTE    SETC  '&TR3270'(2*&POSIT+1,2)  TRANSLATE THE VALUES SUM        00650000
&LABEL   &OP   X'&BYTE'            WRITE CONTROL CHARACTER              00700000
         SPACE 2                                                        00750000
         MEND                                                           00800000
./  ADD  SSI=81150132,NAME=BLSR327A
         TITLE 'BLSR327A--SETUP AND CLEANUP'                            00005045
*---------------------------------------------------------------------* 00020045
*                                                                     * 00027045
*BLSR327A--SETUP AND CLEANUP                                          * 00034045
*                                                                     * 00041045
*---------------------------------------------------------------------* 00048045
         COPY  BLSR327M           COPY GLOBAL DEFINITIONS               00066045
         COPY  BLSR327P           EQUATED VALUES AND DSECTS             00074045
         TITLE 'BLSR327A--ENTRY POINT FROM BLSR3270'                    00082045
         SPACE 2                                                        00100045
*---------------------------------------------------------------------* 00105045
*BLSR327A--ENTRY POINT FROM BLSR3270--THE FOLLOWING FUNCTIONS ARE     * 00116045
*        PERFORMED BY INCLUDED CODE SEGMENT BLSR327A:                 * 00124045
*        1. ESTABLISH ASSEMBLER ENVIRONMENT (PROLOG)                  * 00132045
*        2. INITIALIZE FLAGS AND DATA AREAS                           * 00150045
*        3. OUTPUT FORMATTED SCREEN BUFFER (TPUT)              @ZA31999 00155045
*        4. READ INPUT BUFFER (TGET, TCLEARQ)                  @ZA31999 00166045
*        5. SET-UP RESPONSE ANALYSIS                           @ZA31999 00174045
*        6. RESET STATUS AS A RESULT OF VALIDATED INPUT        @ZA31999 00182045
*        7. ADD SUBCOMMAND LINE TO TSO STACK                   @ZA31999 00200045
*        8. MAINTAIN DSPL3270 STACK                            @ZA31999 00208045
*        9. EXIT ASSEMBLER ENVIRONMENT (EPILOG)                @ZA31999 00216045
*                                                                     * 00224045
*---------------------------------------------------------------------* 00232045
         SPACE                                                          00250045
*---------------------------------------------------------------------* 00254045
*  ESTABLISH ASSEMBLER ENVIRONMENT (PROLOG)                           * 00266045
*---------------------------------------------------------------------* 00274045
         SPACE                                                          00282045
BLSR327A CSECT                                                          00300045
         DROP  RB,RC              PL/S DATAREG & CODEREG                00304045
         USING @SA00001,RD        ->AUTOMATIC STORAGE                   00316045
         USING EA000100,RF        FORMAL LINKAGE REGISTER               00324045
EA000100 STM   R0,RF,SAVER0RF     SAVE INPUT REGISTERS                  00332045
         SPACE 1                                                        00350045
*---------------------------------------------------------------------* 00355045
*  INITIALIZE FLAGS AND DATA AREAS                                    * 00366045
*---------------------------------------------------------------------* 00374045
         SPACE 1                                                        00382045
*---------------------------------------------------------------------* 00400045
*        DSPL3270 UTILIZES A WORK AREA (AT WKAORG) IN AUTOMATIC       * 00408045
*        STORAGE WHICH DEFINES THE CURRENT FORMAT OF THE SCREEN.      * 00416045
*        THE CONTENT OF THIS AREA IS INITIALIZED ONE OF TWO WAYS,     * 00424045
*        DEPENDING OF THE SETTING OF THE RESET/NORESET OPERAND        * 00432045
*        CONSIDERED IN CONJUNCTION WITH THE EXISTENCE/NONEXISTENCE    * 00450045
*        OF PREVIOUSLY ESTABLISHED DUMP CLUSTER DATA:                 * 00458045
*        1. INITIALIZED USING DATA SAVED IN THE DUMP CLUSTER IF       * 00466045
*           SUCH DATA EXISTS AND NORESET WAS ENTERED OR ALLOWED TO    * 00474045
*           DEFAULT.                                                  * 00482045
*        2. INITIALIZED USING PERMANENT VALUES ADDRESSED BY FIELD     * 00500045
*           ZZ1327WP IF RESET WAS SPECIFIED AND/OR NO DUMP CLUSTER    * 00508045
*           EXISTS FOR THE CURRENT DUMP.                              * 00516045
*---------------------------------------------------------------------* 00524045
         SPACE                                                          00532045
         CLI   WKRESET,1          DOES WORK AREA NEED INITIALIZATION?   00550045
         BNE   LA000200           NO                                    00558045
         L     RC,ZZ1P            ->ZZ1                                 00566045
         L     R0,ZZ1327WP(0,RC)  ->BLSR327W PERMANENT COPY             00574045
         LA    R1,WKALENG         LENGTH(BLSR327W)                      00582045
         LA    R2,WKAORG          ->BLSR327W WORKING COPY               00600045
         LR    R3,R1              LENGTH(BLSR327W)                      00605045
         MVCL  R2,R0              PERMANENT COPY=>WORKING COPY          00616045
         SPACE                                                          00624045
LA000200 LA    RC,LA000200        PROCESSING BASE REGISTER (1 OF 2)     00632045
         DROP  RF                                                       00650045
         USING LA000200,RC,RB                                           00655045
         LA    RB,LA000200+4095   PROCESSING BASE REGISTER (2 OF 2)     00666045
         LA    RB,1(RB)                                                 00674045
         SPACE 2                                                        00682045
*---------------------------------------------------------------------* 00700045
*        INITIALIZE BLSRVPAS PARAMETER LIST                           * 00705045
*---------------------------------------------------------------------* 00716045
         LA    RF,PACKDEC+3       -> ASID (BINARY)                      00724045
         ST    RF,PDEIP           INITIALIZE PDE                        00732045
         LA    RF,PDE             -> PDE                                00750045
         ST    RF,APDE            1ST PARAMETER                         00755045
         L     RF,ZZ2P            -> ZZ2                                00766045
         ST    RF,AZZ2            2ND PARAMETER                         00774045
         L     RF,=X'80000000'    NO MESSAGE - NULL PARAMETER           00782045
         ST    RF,AMSG            3RD PARAMETER                         00800045
*---------------------------------------------------------------------* 00805045
*        DO HOUSEKEEPING                                              * 00816045
*---------------------------------------------------------------------* 00824045
         SPACE                                                          00832045
         LA    RF,0               ASSUME SUCCESSFUL                     00850045
         ST    RF,SAVERF          -COMPLETION                           00855045
         MVI   FLAG0,FLAG0FMT     INITIAL FLAG BYTE 0 STATUS            00866045
         MVI   FLAG1,FLAG1ADR+FLAG1ASI+FLAG1FMT+FLAG1ARE FLAG BYTE 1    00874045
         MVI   FLAG2,0            INITIAL FLAG BYTE 2 STATUS            00882045
         MVI   ERLN4,0            INITIAL INPUT ERROR STATUS            00900045
         MVI   SCRPO,0            INITIAL SCREEN POSITION INDICATOR     00905045
         MVI   NEWWCC,B'00000000' INITIAL WRITE CONTROL CHARACTER       00916045
         MVC   PREVCURS,=X'C5D3'  INITIAL CURSOR SAVE ADDRESS           00924045
         MVC   NEWLINES(4),WKALINES INITIAL LINES/AREA                  00932045
         MVC   NEWLNCTL(19),WKALNCTL INITIAL LINE CONTROL DATA          00950045
         SPACE 1                                                        00955045
         CLC   WKANB1,=CL6'CVT'   INITIAL ENTRY?                        00966045
         BNE   LA000400           NO                                    00974045
         MVC   WKASTACK,ZZ2AMDC(R9) ->CVT                               00982045
         SPACE                                                          01000045
LA000400 BAL   R8,LA000820        GET RID OF EXTRANEOUS INPUT           01005045
         B     BLSR327G           START THE PROCESS                     01016045
         SPACE 2                                                        01024045
         COPY  BLSR327B           BUILD 3277 ORDER STREAM               01032045
         TITLE 'BLSR327A--OUTPUT FORMATTED SCREEN BUFFER (TPUT)'        01050045
*---------------------------------------------------------------------* 01055045
*  OUTPUT FORMATTED SCREEN BUFFER (TPUT)                              * 01066045
*---------------------------------------------------------------------* 01074045
         SPACE                                                          01082045
LA000500 L     R1,ZZ1P            ->ZZ1                                 01100045
         CLI   ZZ1EVEP(R1),0      TERMINATE?                            01105045
         BNE   LA005600           YES                                   01116045
         LR    R0,RA              R0 WILL HAVE LENGTH FOR TPUT          01124045
         LA    R1,SCRNBUFR        ->TGET/TPUT BUFFER                    01132045
         SLR   R0,R1              LENGTH TO WRITE                       01150045
         ICM   R1,B'1000',=BL1'00001011' FULL SCREEN TPUT OPTION        01155045
         TPUT  (1),(0),R                                                01166045
         CH    RF,=H'8'           UNSUPPORTED RETURN CODE               01174045
         BNH   LA000510           NO                                    01182045
         LA    RF,16              YES - SET                             01200045
         ST    RF,SAVERF          -RETURN CODE                          01204045
         B     LA005600           -AND GIVE UP                          01216045
LA000510 EQU   *                                                        01224045
         B     LA000600(RF)       MAYBE. USE BRANCH TABLE TO DECIDE     01232045
LA000600 B     0(R8)              RC=0, SUCCESSFUL WRITE-RET TO CALLER  01250045
         B     LA005600           RC=4, ERROR. WE USE WAIT OPTION       01255045
         B     LA000500           RC=8, ATTN-ENTER SEQUENCE--RETRY      01266045
         SPACE 2                                                        01274045
*---------------------------------------------------------------------* 01282045
*  READ INPUT BUFFER (TGET, TCLEARQ)                                  * 01300045
*---------------------------------------------------------------------* 01305045
         SPACE                                                          01316045
LA000700 LA    R0,2560            LENGTH OF TGET/TPUT BUFFER            01324045
         LA    R1,SCRNBUFR        ->TGET/TPUT BUFFER                    01332045
         ICM   R1,B'1000',=BL1'10000001' ASIS TGET OPTION               01350045
         TGET  (1),(0),R                                                01355045
         CH    RF,=H'12'          UNSUPPORTED RETURN CODE               01366045
         BNH   LA000710           NO                                    01374045
         LA    RF,16              YES - SET                             01382045
         ST    RF,SAVERF          -RETURN CODE                          01400045
         B     LA005600           -AND GIVE UP                          01405045
LA000710 EQU   *                                                        01416045
         B     LA000800(RF)       TEST TGET RETURN CODE                 01424045
LA000800 B     LA000900           RC=0, SUCCESSFUL READ, SAVE DATA LEN  01432045
         B     LA005600           RC=4, ERROR. WE USE WAIT OPTION       01450045
         B     LC000200           RC=8, ATTN-ENTER SEQUENCE--RESEND     01455045
         OI    FLAG0,FLAG0FMT     RC=12, HAVEN'T LOST ANYTHING MUCH     01466045
         CLI   ERLN4,0            ARE WE IN THE MIDDLE OF ERRORS?       01474045
         BNE   LA000810           -YES, LEAVE FLAG0 AS IS               01482045
         NI    FLAG0,FLAG0FMT     CLEAR THE REST OF FLAG0               01500045
LA000810 LR    R7,R1              SAVE INPUT LENGTH                     01505045
         BAL   R8,LA000820        CLEAR TGET INPUT QUEUE                01516045
         LR    R1,R7              RESET INPUT LENGTH REGISTER           01524045
         B     LA000950                                                 01532045
         SPACE 2                                                        01550045
*---------------------------------------------------------------------* 01555045
*        MAKE SURE TGET QUEUE IS EMPTY                                * 01566045
*---------------------------------------------------------------------* 01574045
         SPACE                                                          01582045
LA000820 TCLEARQ                                                        01600045
         LTR   RF,RF              TEST TCLEARQ RETURN CODE              01605045
         BZR   R8                 RC=0,SUCCESSFUL                       01616045
         LA    RF,16              ERROR - SET                           01624045
         ST    RF,SAVERF          -RETURN CODE                          01632045
         B     LA005600           -AND GIVE UP                          01650045
         SPACE 2                                                        01655045
*---------------------------------------------------------------------* 01666045
*  SET-UP RESPONSE ANALYSIS                                           * 01674045
*---------------------------------------------------------------------* 01682045
         SPACE                                                          01700045
LA000900 CLI   ERLN4,0            ARE WE IN THE MIDDLE OF ERRORS?       01705045
         BNE   LA000970           -YES, DON'T RESET FLAGS               01716045
         MVI   FLAG0,0            RESET FLAG0                           01724045
         B     LA000960                                                 01732045
LA000950 CLI   ERLN4,0            ARE WE IN THE MIDDLE OF ERRORS?       01750045
         BNE   LA000970           -YES, DON'T RESET FLAGS               01753045
LA000960 MVI   FLAG0,0            RESET FLAG0                           01770045
         MVI   FLAG1,0            RESET FLAG1                           01773045
         NC    WKALNCTL(19),=19AL1(255-WKALNCTW) RESET LINE CONTROLS    01790045
         XC    EADDRFLG(LN4FLGLN),EADDRFLG CLEAR ERROR FLAGS            01798045
         MVC   EADDRVAL(LN4VALLN),WKAADDR RESET ERROR SAVE VALUES       01804045
         NI    EADDRVAL,255-WKAADRLL CLEAR HIGH BYTE                    01816045
         XC    SAVSTK(SAVSTKLN),SAVSTK CLEAR NOTES ERROR SAVE AREA      01824045
         XC    SAVSBCMD,SAVSBCMD  CLEAR SUBCOMMAND ERROR SAVE AREA      01832045
LA000970 LTR   R7,R1              SAVE AND CHECK AMT RETD BY TGET       01850045
         LA    RA,SCRNBUFR        ->TGET/TPUT BUFFER                    01855045
         MVI   NEWWCC,X'00'       REFRESH WRITE CONTROL CHAR            01866045
         MVI   FLAG2,0            OFF ALL BITS                          01874045
         MVC   PREVCURS,WKACORDS+1 SAVE LAST CURSOR ADDR FOR HELP, ETC  01882045
         MVC   WKACORDS+1(2),1(RA) GET READY TO REPLACE CURSOR          01900045
         COPY  BLSR327C           PRE-PROCESS ATTENTION IDENTIFIER      01905045
         COPY  BLSR327D           PRE-PROCESS CURSOR                    01916045
         TITLE 'BLSR327A--RESET STATUS AS RESULT OF VALIDATED INPUT'    01924045
*---------------------------------------------------------------------* 01932045
*  RESET STATUS AS A RESULT OF VALIDATED INPUT                        * 01950045
*---------------------------------------------------------------------* 01955045
         SPACE                                                          01966045
*---------------------------------------------------------------------* 01974045
*EA001400 - INTERNAL SUBROUTINE TO ESTABLISH ROW, COL FROM 3270 ADRR  * 01982045
*  INPUT---RETURN ADDR IN RE                                          * 02000045
*          RA POINTS 1 BYTE BEFORE 3270 ADDR                          * 02005045
*  OUTPUT--COLUMN NUMBER IN R4                                        * 02016045
*          ROW NUMBER IN R5 (0-ORIGIN NUMBERS)                        * 02024045
*---------------------------------------------------------------------* 02032045
         SPACE                                                          02050045
EA001400 LA    RF,63              MASK TO KEEP ONLY LOW SIX BITS        02054045
         IC    R4,1(0,RA)         FIRST BYTE OF ADDR                    02066045
         IC    R5,2(0,RA)         SECOND BYTE OF ADDR                   02074045
         NR    R4,RF              GET RID OF GARBAGE                    02082045
         NR    R5,RF              DITTO                                 02100045
         SLL   R4,6               PREPARE TO FORM BINARY OFFSET         02104045
         ALR   R5,R4              NOW HAVE DISPL FROM POS 0 (R1C1)      02116045
         SLR   R4,R4              CLEAR FOR DIVISION                    02124045
         D     R4,=F'80'          REMAINDER IN R4, QUOTIENT IN R5       02132045
         BR    RE                                                       02150045
         SPACE                                                          02155045
*        R4 HAS REMAINDER FROM DIVISION, = 0-ORG COLUMN NUMBER        * 02166045
         SPACE 2                                                        02174045
*---------------------------------------------------------------------* 02182045
*        MOVE FROM INPUT CHECKING SAVE AREAS TO WORK AREA - ONLY      * 02200045
*        NECESSARY FOR STACK NOTATION, LINE 4, AND SUBCOMMAND         * 02205045
*        ENTRY FIELDS                                                 * 02216045
*---------------------------------------------------------------------* 02224045
         SPACE                                                          02232045
LA001000 EQU   *                                                        02250045
         SPACE                                                          02254045
*---------------------------------------------------------------------* 02266045
*        CHANGE TO STACK NOTATION                                     * 02274045
*---------------------------------------------------------------------* 02282045
         SPACE                                                          02300045
LA001700 LA    R3,0               LOOP COUNTER INITIAL VALUE            02305045
         LA    R4,1               LOOP INCREMENT                        02316045
         LA    R5,10              LOOP COMPARAND                        02324045
         LA    RA,SAVSTK          INITIAL NOTE SAVE ENTRY               02332045
LA001750 LR    R8,R3              PUT INDEX IN SAFE PLACE               02350045
         LA    RF,1(0,R8)         1-ORIGIN NUMBER OF THIS ENTRY         02355045
         SLL   R8,2               FORM INDEX INTO STACK                 02366045
         CLI   0(RA),0            HAS A NOTE ENTRY BEEN SAVED?          02374045
         BE    LA002000           NO - LOOK AT NEXT                     02382045
         CLI   0(RA),C'/'         A DELETE REQUEST?                     02400045
         BNE   LA001800           NO, A CHANGE OR ADDITION TO NOTES     02405045
         LA    RF,WKASTACK(R8)    PREPARE TO MARK PROPER STACK ENTRY    02416045
         OI    0(RF),WKASKDEL     TO BE PURGED ... MUST UPDATE 2,3      02424045
         OI    FLAG0,FLAG0PRG+FLAG0RW2+FLAG0RW3 - REMEMBER TO DO IT     02432045
         B     LA002000           LOOK AT NEXT                          02450045
LA001800 CLM   RF,1,WKANBNUM      WAS IT A NEW ENTRY?                   02455045
         BNH   LA001900           - NO, BYPASS SAVING NEW HIGH WATER    02466045
         STC   RF,WKANBNUM        - YES, NEW MAX TO RESEND THIS LINE    02474045
LA001900 ALR   R8,R8              DOUBLE INDEX VALUE                    02482045
         LA    R8,WKANOTES(R8)    ADDRESS OF NOTES WORK AREA            02500045
         XC    0(8,R8),0(R8)      CLEAR CURRENT ENTRY                   02505045
         CLI   0(RA),X'FF'        HAS FIELD BEEN CLEARED?               02516045
         BE    LA002000           YES                                   02524045
         MVC   0(L'WKANB1,R8),0(RA) PUT NEW DATA INTO NOTE LIST         02532045
LA002000 LA    RA,L'WKANB1(RA)    POINT TO NEXT NOTES SAVE AREA         02550045
         BXLE  R3,R4,LA001750     CONTINUE LOOP                         02555045
         SPACE 2                                                        02566045
*---------------------------------------------------------------------* 02574045
*        CHANGE TO LINE 4--NEW ADDRESS, ASID, FORMAT, ....            * 02582045
*---------------------------------------------------------------------* 02600045
         SPACE 2                                                        02605045
         TM    FLAG1,FLAG1BLA     CAN WE ACCEPT MANUAL INPUT THIS -     02616045
         BO    LA002100           TRANSACTION? NO, DON'T SAVE           02624045
         MVC   ESAULAD,EADDRVAL   SAVE NEW ADDRESS                      02632045
         SPACE 2                                                        02650045
         XC    ESAUAS2(4),ESAUAS2  CLEAR IT OUT                         02655045
         MVC   ESAUAS2+2(2),EASIDVAL SAVE NEW ASID                      02666045
         SPACE 2                                                        02674045
LA002100 MVC   ESAUDTY,EFMTVAL    SAVE NEW FORMAT                       02682045
         SPACE 2                                                        02700045
         MVC   WKAAREA,EAREAVAL   SAVE NEW AREA                         02705045
         SPACE 2                                                        02716045
         LA    R3,4               WINDOW LOOP COUNTER                   02724045
         LA    R4,EWNDSVAL        INITIAL WINDOW SAVE AREA              02732045
         LA    R5,NEWLINES        INITIAL WINDOW WORK AREA              02750045
LA002200 MVC   0(1,R5),0(R4)      MOVE FROM SAVE AREA                   02755045
         LA    R4,1(R4)           POINT TO NEXT SAVE AREA               02766045
         LA    R5,1(R5)           POINT TO NEXT WORK AREA               02774045
         BCT   R3,LA002200        LOOK AT NEXT WINDOW                   02782045
         SPACE 2                                                        02800045
         MVC   WKASKIP,ESKIPVAL  SAVE NEW VALUE                         02805045
         B     LA004600          LOOK AT SUBCOMMAND                     02816045
         SPACE 2                                                        02824045
*---------------------------------------------------------------------* 02832045
*EA003700--VALIDATE HEXADECIMAL INPUT AND CONVERT TO BINARY           * 02850045
*          VALID RANGE = 0-F                                          * 02855045
*---------------------------------------------------------------------* 02866045
         SPACE                                                          02874045
EA003700 XC    PACKDEC,PACKDEC    CLEAR RESULT IN CASE OF NULL INPUT    02882045
         LR    RF,R9              WHERE WE CAN USE IT                   02900045
         SH    RF,=H'3'           BYPASS SF, ADDR, ADDR                 02905045
         BNP   4(0,RE)            RETURN TO CALLER, NULL INPUT VALID    02916045
         LA    R0,9               INCREMENT FOR A HEX NOT DEC DIGIT     02924045
         LA    R1,PACKDEC+5       WHERE RESULT SHOULD GO                02932045
         EX    RF,IA004000        CONVERT TO UPPER CASE -- NOTE - THIS  02950045
*                                 CLOBBERS THE FIRST BYTE OF THE NEXT   02955045
*                                 FIELD, BUT IS OK, SINCE IT IS EITHER  02966045
*                                 AN SBA ORDER ALREADY FOUND, OR OUT    02974045
*                                 OF INPUT RANGE.                       02982045
LA003800 IC    R2,2(RF,RA)        BYTE OF INPUT - RIGHT TO LEFT         03000045
         CLM   R2,1,=C'A'         AN 'A'                                03005045
         BLR   RE                 - IF LESS, THEN NOT VALID HEX         03016045
         CLM   R2,1,=C'9'         A '9' ?                               03024045
         BHR   RE                 - IF GREATER, THEN NOT VALID HEX      03032045
         CLM   R2,1,=C'0'         A DECIMAL DIGIT?                      03050045
         BNL   LA003900           - YES, SAVE IT IN WORK AREA           03055045
         CLM   R2,1,=C'F'         AN 'F'?                               03066045
         BHR   RE                 - IF GREATER, THEN NOT VAILD HEX      03074045
         ALR   R2,R0              HEX DIGIT, INCREMENT BY 9             03082045
LA003900 STC   R2,0(0,R1)         HEX OR DECIMAL NUMERIC INTO WK AREA   03100045
         BCTR  R1,0               DECREMENT WORK AREA ADDRESS           03105045
         BCT   RF,LA003800        DECREMENT INDEX, CHECK FOR END        03116045
         PACK  PACKDEC+3(5),PACKDEC(7) STRIP OUT ZONES                  03124045
         B     4(0,RE)            RETURN ON GOOD VECTOR                 03132045
IA004000 OC    3(0,RA),=CL8' '    *** SUBJ OF EX, ABOVE ***             03150045
         SPACE 2                                                        03155045
*---------------------------------------------------------------------* 03166045
*EA004100--VALIDATE HEXADECIMAL INPUT AND CONVERT TO BINARY           * 03174045
*          VALID RANGE = 0-9                                          * 03182045
*---------------------------------------------------------------------* 03200045
         SPACE                                                          03205045
EA004100 XC    PACKDEC,PACKDEC    CLEAR ANSWER AREA IF NULL INPUT       03216045
         LR    RF,R9              PROTECT LENGTH OF SUBFIELD            03224045
         SH    RF,=H'3'           STRIP OFF SF, ADDR, ADDR              03232045
         BNP   4(0,RE)            NULL INPUT, ANSWER = 0                03250045
         LR    R0,RF              SAVE COUNT                            03255045
         LA    R2,2(RA,RF)        LAST INPUT CHAR THIS FIELD            03266045
LA004200 CLI   0(R2),C'0'         MUST BE IN RANGE 0 - 9                03274045
         BLR   RE                 - TOO LOW, GO BACK ON BAD VECTOR      03282045
         CLI   0(R2),C'9'         CHECK TOP OF RANGE                    03300045
         BHR   RE                 - TOO HIGH, IGNORE INPUT              03305045
         BCTR  R2,0               BACK TO PREVIOUS BYTE                 03316045
         BCT   R0,LA004200        CHECK ALL BYTES                       03324045
         BCTR  RF,0               DOWN 1 FOR EX                         03332045
         EX    RF,IA004300        STRIP ZONES, ALIGN FOR CVB            03350045
         CVB   RF,PACKDEC         INPUT IN FORM WE WANT                 03355045
         ST    RF,PACKDEC         SAVE IT JUST IN CASE                  03366045
         B     4(0,RE)            RETURN ON GOOD VECTOR                 03374045
IA004300 PACK  PACKDEC(8),3(0,RA) *** SUBJ OF EX, ABOVE ***             03382045
IA004400 MVC   0(0,RF),4(RF)      *** SUBJ OF EX, BELOW ***             03400045
IA004500 MVC   0(0,RF),8(RF)      *** SUBJ OF EX, BELOW ***             03405045
         SPACE 2                                                        03416045
*---------------------------------------------------------------------* 03424045
*  ADD SUBCOMMAND LINE TO TSO STACK                            @ZA31999 03432045
*---------------------------------------------------------------------* 03450045
         SPACE                                                          03454045
LA004600 CLI   SAVSBCMD,0         WAS ANYTHING ENTERED?                 03466045
         BE    LA005000           -NO, CHECK STACK                      03474045
         CLI   SAVSBCMD,NULVALUE  DID HE JUST NULL HIS LAST CMD?        03482045
         MVI   WKABLSRN,0         -YES, RESET COUNT                     03500045
         BE    LA005000           -AND CHECK STACK                      03505045
         LA    RE,L'SAVSBCMD      LENGTH OF SUBCOMMAND                  03516045
         STC   RE,WKABLSRN        SAVE FOR NEXT TIME                    03524045
         MVC   WKABLSRC(L'SAVSBCMD),SAVSBCMD MOVE FROM SAVE AREA        03532045
         LA    R0,LSDLEN+0(0,RE)  PREPARE TO SAVE IT           @ZA31999 03550045
         ICM   R0,B'1000',=AL1(78) SUBPOOL FOR TSO I/O SERVICE RTNS     03555045
         GETMAIN R,LV=(0)         GO GET IT                             03566045
         USING LSD,R1             THE LIST SOURCE DESCRIPTOR + RECORDS  03574045
         ST    R1,STPBALSD        PUT ADDRESS INTO STACK PARM BLOCK     03582045
         MVC   LSDVRECT(L'SAVSBCMD),WKABLSRC PUT SUBCMD IN SOURCE LIST  03600045
         LA    RE,4(0,RE)         ACTUAL COUNT AGAIN + SIZE OF HEADER   03605045
         STCM  RE,B'1100',LSDVREC+2 CLEAR LITTLE LL                     03616045
         STH   RE,LSDVREC         NOW HAVE SEGMENT BUILT                03624045
         SPACE 2                                                        03632045
*---------------------------------------------------------------------* 03650045
*        FILL IN LIST SOURCE DESCRIPTOR                               * 03655045
*---------------------------------------------------------------------* 03666045
         SPACE                                                          03674045
         ST    RE,LSDRCLEN        CLEAR LRECL, SET VARIABLE LENGTH      03682045
         LA    R0,LSDVREC         WHERE THE RECORD SEGMENTS BEGIN       03700045
         ST    R0,LSDANEXT        POINTER TO CURRENT = FIRST            03704045
         ST    R0,LSDADATA        POINTER TO FIRST RECORD SEG           03716045
         SPACE 2                                                        03724045
*---------------------------------------------------------------------* 03732045
*        CALL IKJSTCK TO PASS THE SUBCOMMANDS TO THE IPCS MONITOR     * 03750045
*---------------------------------------------------------------------* 03755045
         SPACE                                                          03766045
         LA    R1,IOPL            ->IOPL, THE IKJSTCK PARAMETER LIST    03774045
         L     RF,ZZ2P            GET ADDRESS OF                        03782045
         L     RF,ZZ2STCKP(0,RF)  -STACK ENTRY                          03800045
         STACK STORAGE=(,SOURCE),MF=(E,(1)),ENTRY=(15),PARM=STPB        03805045
         OI    FLAG0,FLAG0SUS     SUSPENSION WILL BE REQUIRED           03816045
         MVI   SPD3270,1          INDICATE SO TO PLS           @ZA31999 03824045
         SPACE 2                                                        03832045
*---------------------------------------------------------------------* 03850045
*  MAINTAIN DSPL3270 STACK                                            * 03855045
*---------------------------------------------------------------------* 03866045
         SPACE                                                          03874045
LA005000 TM    FLAG0,FLAG0PRG     ANY '/'S ENTERED IN NOTE LIST?        03882045
         BNO   LA005500           - NO                                  03900045
         SLR   R4,R4              SET UP SOME WORK REGS                 03905045
         SLR   R5,R5              TO CLEAR LAST ENTRY IF NEEDED         03916045
         TM    WKASTACK+40,WKASKDEL DELETE LAST ENTRY?                  03924045
         BNO   LA005200           - NO, NEEDN'T DO SPECIAL              03932045
         ST    R4,WKASTACK+40     CLEAR IT OUT                          03950045
         STM   R4,R5,WKANOTES+80  CLEAR NOTE ALSO                       03955045
         CLI   WKASKNUM,11        WAS THE STACK FULL?                   03966045
         BNE   LA005100           - NO, DONT MARK IT AS 10 USED         03974045
         MVI   WKASKNUM,10        - YES, DECREMENT ITS COUNT            03982045
LA005100 CLI   WKANBNUM,11        WAS THE NOTE LIST FULL?               04000045
         BNE   LA005200           - NO, DONT MARK IT AS 10 USED         04005045
         MVI   WKANBNUM,10        - YES, DECREMENT ITS COUNT            04016045
LA005200 IC    R4,WKASKNUM        WHERE TO START OUR LOOP               04024045
         LTR   R0,R4              COUNT CONTROL                         04032045
         BZ    LA005500           NONSENSE TO DELETE UNUSED ENTRY       04050045
LA005300 LR    RF,R0              TO FORM INDEX FOR THIS ENTRY          04054045
         SLL   RF,2               - A WORD INDEX, TO BE PRECISE, 1-ORG  04066045
         LA    R5,0(RF,RF)        - AND NOW A DOUBLE-WORD INDEX         04074045
         LR    RE,RF              - NEED LOTS OF INDICES                04082045
         LA    RF,WKASTACK-4(RF)  POINT TO THIS ENTRY                   04100045
         TM    0(RF),WKASKDEL     MARKED DELETE?                        04105045
         BNO   LA005400           - NO, WILL CHECK FOR LOOP END         04116045
         SPACE 2                                                        04124045
*---------------------------------------------------------------------* 04132045
*        CALCULATE HOW MUCH DATA MUST BE MOVED DOWN IN STACK          * 04150045
*---------------------------------------------------------------------* 04155045
         SPACE                                                          04166045
         SH    RE,=H'43'          EX LENGTH OF MAX MOVE                 04174045
         LPR   RE,RE              NOW HAVE LENGTH FOR EXECUTE INSTR     04182045
         EX    RE,IA004400        COMPRESS DELETED ENTRY FROM STACK     04200045
         BCTR  R4,0               (DECR NUMBER ACTIVE ENTRIES)          04205045
         CLM   R0,1,WKANBNUM      NEED WE COMPRESS THE NOTE LIST TOO?   04216045
         BH    LA005400           - NO, CONTINUE LOOP                   04224045
         LA    RE,1(RE,RE)        EX LENGTH FOR NOTE LIST               04232045
         LA    RF,WKANOTES-8(R5)  WHERE TO MOVE TO                      04250045
         EX    RE,IA004500        COMPRESS NOTE LIST ENTRIES            04255045
         IC    RF,WKANBNUM        AND DECREMENT ITS ACTIVE COUNT        04266045
         BCTR  RF,0               - DOWN 1                              04274045
         STC   RF,WKANBNUM        - BACK INTO SLOT                      04282045
LA005400 BCT   R0,LA005300        CHECK ALL ACTIVE STACK ENTRIES        04300045
         STC   R4,WKASKNUM        SAVE UPDATED ACTIVE STACK COUNT       04305045
         SPACE 2                                                        04316045
*---------------------------------------------------------------------* 04324045
*        CHECK IF A NEW DATA SCREEN ALLOCATION WAS REQUESTED          * 04332045
*---------------------------------------------------------------------* 04350045
         SPACE                                                          04355045
LA005500 CLC   WKALINES(4),NEWLINES ANY CHANGES INDICATED?              04366045
         BE    BLSR327E           -NO                                   04374045
         L     R8,=A(BLSR327H)    PICK UP ALLOCATION VERIFICATION       04382045
         BALR  R3,R8              ADDRESS AND CALL IT                   04400045
         COPY  BLSR327E           POST-PROCESS ATTENTION IDENTIFIER     04405045
         COPY  BLSR327F           POST-PROCESS CURSOR                   04416045
         COPY  BLSR327G           POST-PROCESS MANUAL INPUT             04424045
         TITLE 'BLSR327A--EXIT ASSEMBLER ENVIRONMENT (EPILOG)'          04432045
*---------------------------------------------------------------------* 04448045
*  EXIT ASSEMBLER ENVIRONMENT                                         * 04456045
*---------------------------------------------------------------------* 04464045
         SPACE                                                          04470045
LA005600 LM    R0,RF,SAVER0RF     RELOAD INPUT REGISTERS                04482045
         BR    RE                 RETURN TO BLSR3270                    04498045
         COPY  BLSR327H           CLOSED, INDEPENDENT SUBROUTINES       04506045
         COPY  BLSR327J           INPUT CHECKING ROUTINE                04514045
         COPY  BLSR327I           STATIC STORAGE DATA                   04564045
./  ADD  SSI=80230040,NAME=BLSR327B
         TITLE 'BLSR3270--BLSR327B--BUILD 3277 ORDER STREAM'            00005057
*---------------------------------------------------------------------* 00010057
*                                                                     * 00020057
*BLSR327B--BUILD 3277 ORDER STREAM--USE SAME BUFFER USED FOR TGET     * 00030057
*                                                                     * 00040057
*---------------------------------------------------------------------* 00050057
         SPACE                                                          00066057
BLSR327B LA    R8,LB000100        INITIALIZE RETURN REGISTER            00074057
         SPACE 2                                                        00082057
*---------------------------------------------------------------------* 00100000
*INITIALIZE THE OUTPUT BUFFER                                         * 00105057
*---------------------------------------------------------------------* 00110057
         SPACE                                                          00120057
LB000020 LA    RA,SCRNBUFR        ->TGET/TPUT BUFFER                    00130057
         TM    FLAG0,FLAG0FMT     ENTIRE SCREEN TO BE WRITTEN?          00140057
         BNO   LB000050           NO                                    00150057
         MVI   ERLN4,0            YES - RESET ERROR INDICATOR           00166057
         MVC   0(ERSWRTLN,RA),ERSWRT SEND ERASE/WRITE SEQUENCE          00174057
         LA    RA,ERSWRTLN(0,RA)  CORRECT BUFFER ADDRESS                00182057
LB000050 MVC   0(ESCWRTLN,RA),ESCWRITE                                  00188057
         TRT   NEWWCC(1),T3270TAB PICK UP CORRECT 3270 CHAR             00200057
         STC   R2,0(0,RA)         NOTE - R1 ALSO DESTROYED BY TRT       00216057
         LA    RA,ESCWRTLN(0,RA)  CORRECT BUFFER ADDRESS                00224057
         BR    R8                                                       00232057
         SPACE 2                                                        00238057
*---------------------------------------------------------------------* 00250057
*ADD ORDERS TO FORMAT THE SCREEN                                      * 00266057
*---------------------------------------------------------------------* 00274057
         SPACE                                                          00282057
LB000100 TM    FLAG0,FLAG0FMT     SELDOM NECESSARY, HOPEFULLY           00288057
         BNO   LB000200                                                 00300057
         MVC   0(ERASELEN,RA),ERASEALL  ERASE ENTIRE SCREEN             00316057
         LA    RA,ERASELEN(0,RA)                                        00324057
LB000200 MVC   0(RWL1ORLN,RA),RWL1ORDS  ALWAYS REWRITE                  00332057
         LA    RA,RWL1ORLN(0,RA)        -LINE 1                         00338057
         TM    FLAG0,FLAG0FMT           COMPLETE REWRITE?               00350057
         BNO   LB000500                 -NO                             00366057
         MVC   0(R2T4ORLN,RA),R2T4ORDS  LINE 2-3 ORDERS                 00374057
         MVC   R2T4ORLN(RWL4ORLN,RA),RWL4ORDS LINE 4 ORDERS             00382057
         LA    RA,R2T4ORLN+RWL4ORLN(0,RA) CORRECT BUFFER ADDRESS        00388057
         MVC   0(RWL5ORLN,RA),RWL5ORDS  LINE 5 ORDERS                   00400057
         LA    RA,RWL5ORLN(0,RA)  CORRECT BUFFER ADDRESS                00416057
         CLI   WKASKNUM,0         ANY ADDRESSES IN THE STACK?           00424057
         BE    LB000300           NO, NONE TO WRITE OUT                 00432057
         OI    FLAG0,FLAG0RW2     YES, NOTE IT FOR LATER                00438057
LB000300 CLI   WKANBNUM,0         HOW ABOUT THE NOTE LIST?              00450057
         BE    LB000400           NO                                    00466057
         OI    FLAG0,FLAG0RW3     YES, MARK IT FOR LATER                00474057
LB000400 MVI   FLAG1,FLAG1ADR+FLAG1ASI+FLAG1FMT+FLAG1ARE+FLAG1LIN+FLAG1*00482057
               SKP                BETTER LET HIM SEE ALL OF IT          00488057
         OC    WKALNCTL(19),=19AL1(WKALNCTW) MARK ALL TO BE WRITN       00500057
         SLR   RF,RF              IS SUBCMD/CLIST STRING NULL?          00516057
         ICM   RF,B'0001',WKABLSRN THIS IS COUNT OF CHARS               00524057
         BZ    LB000420           YES, NO STRING TO PUT OUT             00532057
         BCTR  RF,0               DECREMENT COUNT FOR EX                00538057
         MVC   0(ORDLNSBA,RA),RW5UCMOR POINT TO SCREEN ADDR             00550057
         EX    RF,IB005200        AND PUT DATA IN STREAM                00566057
         LA    RA,ORDLNSBA+1(RF,RA) CORRECT BUFFER ADDR                 00574057
         SPACE                                                          00582057
LB000420 BAL   R8,LA000500        PUT OUT THIS PART OF THE SCREEN       00588057
         LA    RA,SCRNBUFR        ->TGET/TPUT BUFFER                    00600057
         BAL   R8,LB000050        RESET OUTPUT BUFFER                   00616057
         EJECT                                                          00624057
*---------------------------------------------------------------------* 00632057
*ADD ORDERS TO DISPLAY MESSAGE                                        * 00638057
*---------------------------------------------------------------------* 00650057
         SPACE                                                          00666057
LB000500 L     R1,ZZ1P            ->ZZ1 (R1 NOT PERMANENT AS BASE)      00674057
         CLI   FLAG2,0            ANY MESSAGE NEEDED?                   00682057
         BE    LB000600           - NO                                  00688057
         MVC   0(ORDLNSBA,RA),RW1UMGOR ORDERS INTO SCREEN BUFFER        00700057
         LA    RA,ORDLNSBA(0,RA)      CORRECT BUFFER ADDR               00716057
         MVC   0(MSGSTKLN,RA),MSGSTK  MSG INTO BUFFER                   00724057
         LA    RA,MSGSTKLN(0,RA)      CORRECT BUFFER ADDR               00732057
         SPACE 2                                                        00738057
*---------------------------------------------------------------------* 00750057
*ADD ORDERS TO DISPLAY THE STACK, LINES 2, 3, AND 4 ON THE SCREEN     * 00766057
*---------------------------------------------------------------------* 00774057
         SPACE                                                          00782057
LB000600 TM    FLAG0,FLAG0RW2     ANY UPDATE NEEDED?                    00788057
         BNO   LB000900           NO                                    00800057
         MVC   0(ORDLNSBA,RA),RW2SBAOR POINT TO FIRST STACK ENTRY       00816057
         LA    RA,ORDLNSBA(0,RA)                                        00824057
         SLR   R8,R8              CLEAR FOR IC OF ACTIVE STACK ENTRY#   00832057
         IC    R8,WKASKNUM        FOR LOOP CONTROL                      00838057
         LTR   R8,R8              COULD HAVE JUST DELETED ALL ENTRIES   00850057
         BZ    LB000800           SO WILL NULL THEM OUT                 00866057
         LA    R9,WKASTACK        POINT TO MY COPY OF STACK             00874057
LB000700 UNPK  0(7,RA),1(4,R9)    POINTER=>ZONED HEXADECIMAL            00882057
         TR    0(6,RA),ZZ1TRHEX(R1) ZONED HEXADECIMAL=>EBCDIC           00888057
         MVI   6(RA),ORDERPT      TAB TO NEXT STACK FIELD               00900057
         LA    RA,7(0,RA)         UPDATE SCREEN ADDRESS                 00916057
         LA    R9,4(0,R9)         UPDATE STACK AREA ADDRESS             00924057
         BCT   R8,LB000700        LOOP TILL COUNT EXHAUSTED             00932057
         BCTR  RA,0               DON'T NEED LAST PT ORDER              00938057
LB000800 CLI   WKASKNUM,11        DO WE NEED THIS ERASE?                00950057
         BE    LB000900           NO                                    00966057
         MVC   0(ORDLNEUA,RA),ERASR2OR ORDERS INTO SCREEN BUFFR         00974057
         LA    RA,ORDLNEUA(0,RA)                                        00982057
LB000900 TM    FLAG0,FLAG0RW4     DO WE NEED LINE 4 ORDERS?             00988057
         BNO   LB000950           NO                                    01000057
         OI    FLAG1,FLAG1FMT+FLAG1ARE+FLAG1LIN REWRITE CONSTANTS       01016057
         MVC   0(RWL4ORLN,RA),RWL4ORDS LINE 4 ORDERS                    01024057
         LA    RA,RWL4ORLN(0,RA)  CORRECT BUFFER ADDRESS                01032057
LB000950 TM    FLAG0,FLAG0RW3     NEED TO UPDATE?                       01038057
         BNO   LB001200           NO                                    01050057
         MVC   0(ORDLNSBA,RA),RW3SBAOR ORDERS INTO BUFFER               01066057
         LA    RA,ORDLNSBA(0,RA)                                        01074057
         SLR   R8,R8              FOR IC                                01082057
         ICM   R8,B'0001',WKANBNUM NUMBER OF ACTIVE LIST ENTRIES        01088057
         BZ    LB001100           NO, NULL ROW                          01100057
         LA    R9,WKANB1          YES, POINT TO FIRST NOTE              01116057
LB001000 MVC   0(6,RA),0(R9)      DATA INTO ORDERS STREAM               01124057
         MVI   6(RA),ORDERPT      TAB TO NEXT FIELD                     01132057
         LA    RA,7(0,RA)         NEXT BUFFER POSITION                  01138057
         LA    R9,8(0,R9)         NEXT NOTE LIST ENTRY                  01150057
         BCT   R8,LB001000        TILL COUNT EXHAUSTED                  01166057
         BCTR  RA,0               DON'T NEED LAST PT                    01174057
         MVI   SCRPO,SCRPOAD1     REMEMBER WHERE WE ARE                 01182057
LB001100 CLI   WKANBNUM,11        ALREADY AT END                        01188057
         BE    LB001200           YES                                   01200057
         MVC   0(ORDLNEUA,RA),ERASR3OR NO, SET ORDERS UP                01216057
         LA    RA,ORDLNEUA(0,RA)                                        01224057
         MVI   SCRPO,SCRPOER3     NOT SAME AS SCRPOAD1---DIF RA         01232057
         EJECT                                                          01238057
*---------------------------------------------------------------------* 01250057
*ADD ORDERS TO DISPLAY LINE 4 ON THE SCREEN                           * 01266057
*---------------------------------------------------------------------* 01274057
         SPACE                                                          01282057
LB001200 TM    FLAG1,FLAG1ADR+FLAG1ASI+FLAG1FMT+FLAG1ARE+FLAG1LIN+FLAG1*01288057
               SKP                ANYTHING ON ROW 4 TO PUT OUT?         01300057
         BZ    LB003100           NO                                    01316057
         TM    FLAG1,FLAG1ADR     MUST ADDR BE UPDATED?                 01324057
         BNO   LB001500           NO                                    01332057
         CLI   SCRPO,SCRPOER3     ALREADY AT ADDR FIELD?                01338057
         BE    LB001400           YES                                   01350057
         CLI   SCRPO,SCRPOAD1     ARE WE ALMOST THERE?                  01366057
         BNE   LB001300           NO                                    01374057
         LA    RA,1(0,RA)         PAST PT IN BUFFER ALREADY             01382057
         B     LB001400           PUT DATA INTO SCREEN BUFFER           01388057
LB001300 MVC   0(ORDLNSBA,RA),RW4UADOR                                  01400057
         LA    RA,ORDLNSBA(0,RA)                                        01416057
LB001400 UNPK  0(7,RA),WKAADDR+1(4) POINTER=>ZONED HEXADECIMAL          01424057
         TR    0(6,RA),ZZ1TRHEX(R1) ZONED HEXADECIMAL=>EBCDIC           01432057
         MVI   SCRPO,SCRPOAD9     REMEMBER WHERE WE ARE                 01438057
         LA    RA,6(0,RA)         IN BUFFER, TOO                        01450057
LB001500 TM    FLAG1,FLAG1ASI     DO WE?                                01466057
         BNO   LB001800           NO                                    01474057
         CLI   SCRPO,SCRPOAD9     NEED AN SBA HERE?                     01482057
         BNE   LB001600           NO                                    01488057
         MVI   0(RA),ORDERPT      YES, TAB TO ASID FIELD                01500057
         LA    RA,1(0,RA)         UPDATE BUFFER ADDRESS                 01516057
         B     LB001700           GO DO IT                              01524057
LB001600 MVC   0(ORDLNSBA,RA),RW4UASOR POINT TO ASID FIELD              01532057
         LA    RA,ORDLNSBA(0,RA)                                        01538057
LB001700 UNPK  0(5,RA),WKAASID(3) BIT=>ZONED HEXADECIMAL                01550057
         TR    0(4,RA),ZZ1TRHEX(R1) ZONED HEXADECIMAL=>EBCDIC           01566057
         LA    RA,4(0,RA)                                               01574057
         MVI   SCRPO,SCRPOAS9     REMEMBER WHERE WE ARE                 01582057
LB001800 TM    FLAG1,FLAG1FMT     FORMAT NEED UPDATING? (X OR C)        01588057
         BNO   LB002100           NO, AREA ID NEXT ON SCREEN            01600057
         CLI   SCRPO,SCRPOAS9     IN THE RIGHT SPOT NOW?                01616057
         BNE   LB001900           NO                                    01624057
         MVI   0(RA),ORDERPT      YES, TAB TO FMT FIELD                 01632057
         LA    RA,1(0,RA)                                               01638057
         B     LB002000                                                 01650057
LB001900 MVC   0(ORDLNSBA,RA),RW4UFMOR NECESSARY ORDERS                 01666057
         LA    RA,ORDLNSBA(0,RA)                                        01674057
LB002000 MVC   0(1,RA),WKAFMT     FORMAT INTO DATA STREAM               01682057
         LA    RA,1(0,RA)                                               01688057
         MVI   SCRPO,SCRPOFM9     REMEMBER WHERE WE ARE                 01700057
LB002100 TM    FLAG1,FLAG1ARE     NEED AREA THIS TIME?                  01716057
         BNO   LB002400           NO                                    01724057
         CLI   SCRPO,SCRPOFM9     CORRECTLY POSITIONED?                 01732057
         BNE   LB002200           NO                                    01738057
         MVI   0(RA),ORDERPT      YES, TAB TO AREA FIELD                01750057
         LA    RA,1(0,RA)                                               01766057
         B     LB002300                                                 01774057
LB002200 MVC   0(ORDLNSBA,RA),RW4UAROR NECESSARY ORDERS                 01782057
         LA    RA,ORDLNSBA(0,RA)                                        01788057
LB002300 MVC   0(1,RA),WKAAREA    AREA INTO DATA STREAM                 01800057
         LA    RA,1(0,RA)                                               01816057
         MVI   SCRPO,SCRPOWI9     REMEMBER WHERE WE ARE                 01824057
LB002400 TM    FLAG1,FLAG1LIN     NEED LINES/AREA THIS TIME?            01832057
         BNO   LB002800           NO                                    01838057
         CLI   SCRPO,SCRPOWI9     CORRECTLY POSITIONED?                 01850057
         BNE   LB002500           NO                                    01866057
         MVI   0(RA),ORDERPT      YES, TAB TO AREA FIELD                01874057
         LA    RA,1(0,RA)                                               01882057
         B     LB002600                                                 01888057
LB002500 MVC   0(ORDLNSBA,RA),RW4ULNOR NECESSARY ORDERS                 01900057
         LA    RA,ORDLNSBA(0,RA)                                        01916057
LB002600 LA    R8,4               NUMBER OF ENTRIES                     01924057
         SLR   RF,RF              CLEAR FOR IC                          01932057
         LA    R9,WKALINES        START SOURCE ADDRESS                  01938057
LB002700 IC    RF,0(0,R9)         BINARY NUMBER OF LINES                01950057
         CVD   RF,PACKDEC         INTO PACKED DECIMAL                   01966057
         UNPK  0(2,RA),PACKDEC+6(2) INTO DATA STREAM                    01974057
         OI    1(RA),C'0'         MAKE LAST DIGIT NUMBERIC              01982057
         MVI   2(RA),ORDERPT      TAB TO NEXT FIELD ON SCREEN           01988057
         LA    R9,1(0,R9)         UPDATE TO NEXT AREA                   02000057
         LA    RA,3(0,RA)                                               02016057
         BCT   R8,LB002700        PUT THEM ALL IN                       02024057
         BCTR  RA,0               IN CASE WE DON'T NEED PT TO SKIP      02032057
         MVI   SCRPO,SCRPOPT9     REMEMBER WHERE WE ARE                 02038057
LB002800 TM    FLAG1,FLAG1SKP     NEED SKIP VALUE THIS TIME?            02050057
         BNO   LB003100           NO, END OF ROW 4 OF SCREEN            02066057
         CLI   SCRPO,SCRPOPT9     CORRECTLY POSITIONED?                 02074057
         BNE   LB002900           NO                                    02082057
         LA    RA,1(0,RA)                                               02088057
         B     LB003000           TO SET UP THE SKIP VALUE              02100057
LB002900 MVC   0(ORDLNSBA,RA),RW4USPOR POINT TO SKIP FIELD              02116057
         LA    RA,ORDLNSBA(0,RA)                                        02124057
LB003000 UNPK  0(7,RA),WKASKIP+1  POINTER=>ZONED HEXADECIMAL            02132057
         TR    0(6,RA),ZZ1TRHEX(R1) ZONED HEXADECIMAL=>EBCDIC           02138057
         LA    RA,6(0,RA)                                               02150057
         EJECT                                                          02166057
*---------------------------------------------------------------------* 02174057
*ADD ORDERS TO DISPLAY AREAS A, B, C, AND D                           * 02182057
*                                                                     * 02188057
*        THIS ROUTINE IS DRIVEN BY A 19-BYTE VECTOR IN THE WORKAREA,  * 02200057
*        SET BY THE FIELD DEFINITION ANALYSIS ROUTINE AND UPDATED BY  * 02216057
*        THE VARIOUS 'COMMAND' PROCESSORS.  A CHANGE IN FIELD         * 02224057
*        DEFINITION WILL CAUSE ALL LOWER LINES IN THE SCREEN TO BE    * 02232057
*        REWRITTEN; A CHANGE IN THE ACTIVE AREA, OR A NEW EFFECTIVE   * 02238057
*        ADDRESS, WILL CAUSE ONLY THE ACTIVE AREA TO BE UPDATED.      * 02250057
*                                                                     * 02266057
*---------------------------------------------------------------------* 02274057
         SPACE                                                          02282057
LB003100 MVI   SCRPO,0            POSITION NO LONGER USEFUL             02288057
         SLR   R6,R6              TO START LOOP                         02300057
         SLR   R2,R2              FOR IC'S IN LOOP                      02316057
         MVC   WKAVCTB(4*4),WKAVCTA COPY CURRENT START ADDRESSES        02324057
         NI    FLAG0,255-(FLAG0POK+FLAG0NUL) OFF TO START WITH          02332057
LB003200 IC    R2,WKALNCTL(R6)    VECTOR INTO AREA TABLE                02338057
         LA    RF,255-WKALNCTW    UPDATE FLAG                           02350057
         CLR   R2,RF              NEED TO UPDATE THIS LINE?             02366057
         BNH   LB004600           NO                                    02374057
         NR    R2,RF              NULL LINE REQUIRED?                   02382057
         BZ    LB004300           YES                                   02388057
         SPACE 2                                                        02400057
*---------------------------------------------------------------------* 02416057
*        THINK WE NEED TO WRITE SOMETHING-- BUT WHAT? FIRST MAKE SURE * 02424057
*        THERE REALLY IS SOMETHING IN THIS AREA TO WRITE. IF SO,      * 02432057
*        CHECK THAT BUFFER ADDRESS IS CORRECT, AND THAT WE DON'T      * 02438057
*        NEED TO COMPLETE A NULL LINE OR AREA.                        * 02450057
*---------------------------------------------------------------------* 02466057
         SPACE                                                          02474057
         BCTR  R2,0               FORM ZERO ORIGIN INDEX                02482057
         SLL   R2,2               *(2**2=4) FOR WORD ARRAY              02488057
         LA    RF,WKAVCTA(R2)     PROPER CONTROL WORD FOR THIS AREA     02500057
         TM    35(RF),WKAVCTAI    HAS FIELD EVER BEEN USED?             02516057
         BO    LB004300           NO, CAN'T HAVE DATA TO WRITE THERE    02524057
         SPACE 2                                                        02532057
*---------------------------------------------------------------------* 02538057
*        AN ACTIVE AREA NEEDS UPDATING --- PERFORM SCREEN BUFFER      * 02550057
*        ADDRESS HOUSEKEEPING.                                        * 02566057
*---------------------------------------------------------------------* 02574057
         SPACE                                                          02582057
         TM    FLAG0,FLAG0POK+FLAG0NUL HOW DOES BUFFER LOOK NOW?        02588057
         BM    LB003500           POSITIONED OK, AND NEED NO NULLS      02600057
         LA    RE,0(R6,R6)        FORM INDEX INTO BUFFER ADDR TAB       02616057
         MVI   0(RA),ORDERSBA     ASSUME SET BUFFER ADDR ORDER NEEDED   02624057
         BZ    LB003300           DON'T NEED NULLS                      02632057
         MVC   0(2,RA),PROTAREA   ESTABLISH PROTECTED FIELD             02638057
         LA    RA,2(RA)           CORRECT BUFFER ADDRESS                02650057
         MVI   0(RA),ORDERRA      NEED REPEAT-TO-ADDRESS ORDER          02666057
LB003300 LH    RE,BUFADTAB(RE)    BUFFER ADDRESS TO USE                 02674057
         STCM  RE,B'0011',1(RA)   PUT IT INTO SCREEN STREAM             02682057
         BZ    LB003400                                                 02688057
         MVI   3(RA),0            INSERT NULL INTO STREAM               02700057
         LA    RA,1(0,RA)         ACCOUNT FOR NULL INSERTED             02716057
         NI    FLAG0,255-FLAG0NUL RESET NULL NEEDED                     02724057
LB003400 LA    RA,ORDLNSBA(0,RA)  HOUSEKEEPING COMPLETE                 02732057
         OI    FLAG0,FLAG0POK     SAY SO                                02738057
         SPACE 2                                                        02750057
*---------------------------------------------------------------------* 02766057
*        SET UP CORRECT ATTRIBUTE BYTE FOR THIS LINE. INTENSIFY THE   * 02774057
*        FIRST LINE IN EACH WINDOW                                    * 02782057
*---------------------------------------------------------------------* 02788057
         SPACE                                                          02800057
LB003500 MVC   SAVELATR,NORMAREA+1  ASSUME INTENSIFY NOT NEEDED         02816057
         MVC   0(2,RA),NORMAREA   DEFINE THE START OF A FIELD           02824057
         CLC   0(4,RF),4*4(RF)    AT FIRST LINE OF FIELD?               02832057
         BNE   LB003600           -NO                                   02838057
         MVI   SAVELATR,INTENSE   -YES, SAVE FOR LATER FIELDS           02850057
         MVC   1(1,RA),SAVELATR   SET CORRECT ATTRIBUTE                 02866057
LB003600 CLI   34(RF),C'C'        CHARACTER FORMATTING NEEDED?          02874057
         BE    LB004800           YES                                   02882057
         SPACE 2                                                        02888057
*---------------------------------------------------------------------* 02900057
*        FORMAT A HEXADECIMAL DISPLAY LINE                            * 02916057
*---------------------------------------------------------------------* 02924057
         SPACE                                                          02932057
         L     RE,4*4(RF)         PICK UP CURRENT ADDRESS               02938057
         ST    RE,PACKDEC         INTO WORK AREA FOR UNPACKING, ETC     02950057
         N     RE,=X'FFFFFFE0'    ROUND DOWN TO BOUNDARY                02966057
         ST    RE,PACKDEC+4       ADDRESS TO ASK PRDMP FOR              02974057
         LR    R0,RE              SAVE PARAMETER FOR PRDMP STG ACCESS   02982057
         L     R1,ZZ1P            ->ZZ1                                 02988057
         UNPK  2(7,RA),PACKDEC+5(4) POINTER=>ZONED HEXADECIMAL          03000057
         TR    2(6,RA),ZZ1TRHEX(R1) ZONED HEXADECIMAL=>EBCDIC           03010057
         SPACE 2                                                        03020057
*---------------------------------------------------------------------* 03030057
*        RETRIEVE DUMP DATA                                           * 03040057
*---------------------------------------------------------------------* 03050057
         SPACE                                                          03066057
         L     R1,ZZ2P            ->ZZ2                                 03074057
         MVC   ZZ2AMDA(2,R1),32(RF) ASID                                03082057
         L     RF,ZZ2AMDS(0,R1)   ->BLSRACCL                            03088057
         BALR  RE,RF              CALL BLSRACCL                         03100057
         LTR   RF,RF              DATA IN DUMP?                         03116057
         BNZ   LB004200           NO                                    03124057
         LR    R9,R0              ->DUMP DATA BUFFER                    03132057
         L     R0,PACKDEC         CALCULATE INDENTATION ON LINE         03138057
         S     R0,PACKDEC+4       FROM NUMBER OF BYTES                  03150057
         SRA   R0,2               WORDS = BYTES/(4=2**2)                03166057
         LA    RE,LB003800        SET RETURN ADDR FROM INDENT SUBRTNE   03174057
         BNZ   LB003700           R0 NOT ZERO - MUST DO INDENT          03182057
         XC    8(1,RA),8(RA)      NULL ONE BYTE AFTER SF,               03188057
         LA    RA,9(0,RA)         ATTR, AND DATA ADDR. UP               03200057
         BR    RE                 STREAM ADDRESS, AND BYPASS SUBR.      03216057
         SPACE 2                                                        03224057
*---------------------------------------------------------------------* 03232057
*        CALCULATE BUFFER ADDRESS TO INDENT TO                        * 03238057
*              USED AS SUBROUTINE BY CHARACTER DATA FORMAT, TOO       * 03250057
*---------------------------------------------------------------------* 03266057
         SPACE                                                          03274057
LB003700 MVI   8(RA),ORDERRA      START REPT-TO-ADDR ORDER SEQUENCE     03282057
         LR    R5,R0              INPUT IS NUMBER OF 'WORDS' TO INDENT  03288057
         MH    R5,=H'9'           8 BYTES + 1 SEPARATOR PER 'WORD'      03300057
         AH    R5,=H'8'           ADDR FIELD TAKES 1 ATTR, 6 BYTES, 1   03316057
*                                 SEPARATOR                             03324057
         LA    R4,5(0,R6)         ZERO ORIGIN ROW NUMBER                03332057
         MH    R4,=H'80'          EIGHTY POSITIONS PER ROW              03338057
         ALR   R4,R5              FORM BINARY SCREEN POSITION, 0-ORIGN  03350057
         SRDL  R4,6               DIVIDE BY (64=2**6)                   03366057
         SRL   R5,26              AND SAVE REMAINDER                    03374057
         IC    R4,T3270TAB(R4)                                          03382057
         IC    R5,T3270TAB(R5)                                          03388057
         STC   R4,9(0,RA)         FIRST ADDR BYTE                       03400057
         STC   R5,10(0,RA)        SECOND ADDR BYTE                      03416057
         MVI   11(RA),0           NULL CHARACTER INTO STREAM            03424057
         LA    RA,12(0,RA)        UPDATE SCREEN BUFFER ADDR             03432057
         BR    RE                 RETURN TO CHAR FMT, OR TO NSI         03438057
LB003800 LA    R8,8               MAX WORDS PER LINE                    03450057
         SLR   R8,R0              LESS NUMBER SKIPPED                   03466057
         SLL   R0,2               WORDS*(4=2**2) = BYTES TO SKIP        03474057
         ALR   R9,R0              WHERE TO FETCH DUMP DATA FROM         03482057
         L     R1,ZZ1P            ->ZZ1                                 03488057
LB003900 MVC   0(2,RA),NORMAREA   DEFINE THE START OF A FIELD           03500057
         MVC   1(1,RA),SAVELATR   SET CORRECT ATTRIBUTE                 03516057
         UNPK  2(9,RA),0(5,R9)    BIT=>ZONED HEXADECIMAL                03524057
         TR    2(8,RA),ZZ1TRHEX(R1) ZONED HEXADECIMAL=>EBCDIC           03532057
         LA    RA,10(0,RA)        NEXT BUFFER POSITION                  03538057
         LA    R9,4(0,R9)         NEXT DUMP DATA POSITION               03550057
         BCT   R8,LB003900        DO ALL WORDS FOR THIS LINE            03566057
         SPACE 2                                                        03574057
*---------------------------------------------------------------------* 03582057
*        FINISHED PROCESSING CURRENT LINE--UPDATE INDEX AND CONTINUE  * 03588057
*        LOOP                                                         * 03600057
*---------------------------------------------------------------------* 03616057
         SPACE                                                          03624057
LB004100 CH    R6,=H'18'          OUT OF VECTOR?                        03632057
         BNL   LB004150           YES                                   03638057
         IC    R2,WKALNCTL(R6)    VECTOR INTO AREA TABLE                03650057
         LA    RF,255-WKALNCTW    CLEAR OUT REWRITE                     03666057
         NR    R2,RF               FLAG                                 03674057
         BZ    LB004125           NULL LINE                             03682057
         BCTR  R2,0               FORM ZERO ORIGIN INDEX                03688057
         SLL   R2,2               *(2**2=4) FOR WORD ARRAY              03700057
         LA    RF,WKAVCTA(R2)     PROPER CONTROL WORD FOR THIS AREA     03716057
         L     RE,4*4(RF)         PICK UP CURRENT ADDRESS               03724057
         CLI   34(RF),C'X'        IS IT HEX?                            03732057
         BNE   LB004110           NO                                    03738057
         N     RE,=X'FFFFFFE0'    ROUND DOWN TO HEX BOUNDARY            03750057
         LA    RE,32(0,RE)        ADD HEX BOUNDARY VALUE=LINE LENGTH    03766057
         B     LB004120                                                 03774057
LB004110 N     RE,=X'FFFFFFC0'    ROUND DOWN TO CHAR BOUNDARY           03782057
         LA    RE,64(0,RE)        ADD CHAR BOUNDARY VALUE=LINE LENGTH   03788057
LB004120 ST    RE,16(0,RF)        SAVE FOR NEXT PASS THIS AREA          03800057
LB004125 LA    R6,1(0,R6)         INCREMENT ROW INDEX                   03816057
         B     LB003200           CONTINUE ROW LOOP                     03824057
LB004150 TM    FLAG0,FLAG0NUL     NEED TO NULL REST OF SCREEN?          03832057
         BNO   LB005300           NO                                    03838057
         MVC   0(2,RA),PROTAREA   ESTABLISH PROTECTED FIELD             03850057
         MVC   2(ORDLNRA,RA),RW6RAORD NULL TO 0,0                       03866057
         LA    RA,ORDLNRA+2(0,RA) CORRECT BUFFER ADDRESS                03874057
         B     LB005300                                                 03882057
         SPACE 2                                                        03888057
*---------------------------------------------------------------------* 03900057
*        UNABLE TO ACCESS DATA FOR THIS LINE - ADDRESS OF DATA IS     * 03916057
*        ALREADY IN SCREEN STREAM                                     * 03924057
*---------------------------------------------------------------------* 03932057
         SPACE                                                          03938057
LB004200 MVC   8(4,RA),=C' N/A'   RIGHT NEXT TO ADDRESS                 03950057
         LA    RA,12(0,RA)        UPDATE BUFFER PTR                     03966057
         OI    FLAG0,FLAG0NUL+FLAG0POK                                  03974057
         B     LB004100                                                 03982057
         SPACE 2                                                        03988057
*---------------------------------------------------------------------* 04000057
*        NEED TO WRITE A NULL LINE--EITHER A SEPARATOR BETWEEN FIELDS * 04016057
*        OR A LINE IN AN UNUSED AREA                                  * 04024057
*---------------------------------------------------------------------* 04032057
         SPACE                                                          04038057
LB004300 TM    FLAG0,FLAG0POK+FLAG0NUL ALREADY NULLING SCREEN?          04050057
         BO    LB004100           YES                                   04066057
         BM    LB004400           NO, BUT POSITION IS OK                04074057
         MVI   0(RA),ORDERSBA     SBA TO THIS LINE ADDR                 04082057
         LA    RE,0(R6,R6)        FORM INDEX INTO ARRAY                 04088057
         LH    RE,BUFADTAB(RE)    AND ACCESS 3270 LINE ADDR             04100057
         STCM  RE,B'0011',1(RA)   ADDR INTO STREAM                      04116057
         LA    RA,ORDLNSBA(0,RA)  UPDATE BUFFER ADDRESS                 04124057
LB004400 OI    FLAG0,FLAG0POK+FLAG0NUL POS. OK, NULLS NEEDED            04132057
         B     LB004100           CHECK NEXT ROW                        04138057
         SPACE 2                                                        04150057
*---------------------------------------------------------------------* 04166057
*        AT A LINE NOT TO BE UPDATED. CHECK IF NULLIFICATION NEEDED   * 04174057
*        AT THIS POINT, AND IF SO, IF LINE CONTAINS USEFUL DATA TO    * 04182057
*        BE LEFT ON THE SCREEN.                                       * 04188057
*---------------------------------------------------------------------* 04200057
         SPACE                                                          04216057
LB004600 TM    FLAG0,FLAG0POK+FLAG0NUL ANYTHING PENDING?                04224057
         BZ    LB004100           NO                                    04232057
         BO    LB004700           YES, CHECK IF ANY DATA ON SCREEN      04238057
         NI    FLAG0,255-FLAG0POK BUFFER NO LONGER SET UP               04250057
         B     LB004100                                                 04266057
         SPACE 2                                                        04274057
*---------------------------------------------------------------------* 04282057
*        BOTH FLAG0NUL AND FLAG0POK ON, CHECK IF WE CAN LEAVE         * 04288057
*        THEM ON, OR MUST WE BYPASS THIS SCREEN LINE.                 * 04300057
*---------------------------------------------------------------------* 04316057
         SPACE                                                          04324057
LB004700 LTR   R2,R2              IS THIS LINE ALREADY NULL?            04332057
         BZ    LB004100           YES                                   04338057
         BCTR  R2,0               NO, FORM INDEX VALUE INTO AREA        04350057
         SLL   R2,2               *(4=2**2) CONTROL VECTORS             04366057
         LA    RF,WKAVCTA(R2)                                           04374057
         TM    35(RF),WKAVCTAI    ANYTHING IN THE AREA?                 04382057
         BO    LB004100           NO                                    04388057
         MVC   0(2,RA),PROTAREA   ESTABLISH PROTECTED FIELD             04400057
         LA    RA,2(RA)           CORRECT BUFFER AREA                   04416057
         MVI   0(RA),ORDERRA      INSERT REPEAT-TO ADDRESS ORDER        04424057
         LA    RE,0(R6,R6)        FORM INDEX TO BUFADTAB                04432057
         LH    RE,BUFADTAB(RE)    PICK UP SCREEN ADDR                   04438057
         STCM  RE,B'0011',1(RA)   PUT IT INTO SCREEN STREAM             04450057
         MVI   3(RA),0            PUT A NULL TO COMPLETE ORD SEQ        04466057
         LA    RA,ORDLNRA(0,RA)   UPDATE BUFFER PTR                     04474057
         NI    FLAG0,255-(FLAG0POK+FLAG0NUL) RESET SWITCHES             04482057
         B     LB004100           CHECK NEXT LINE                       04488057
         SPACE 2                                                        04500057
*---------------------------------------------------------------------* 04516057
*        FORMAT A CHARACTER LINE ON THE SCREEN                        * 04524057
*---------------------------------------------------------------------* 04532057
         SPACE                                                          04538057
LB004800 L     RE,4*4(0,RF)       CURRENT ADDR FOR THIS AREA            04550057
         ST    RE,PACKDEC         INTO WORK AREA                        04566057
         N     RE,=X'FFFFFFC0'    DOWN TO PROPER BOUNDARY               04574057
         ST    RE,PACKDEC+4       ADDRESS TO REQUEST                    04582057
         LR    R0,RE              PARM FOR PRINT-DUMP                   04588057
         L     R1,ZZ1P            ->ZZ1                                 04600057
         UNPK  2(7,RA),PACKDEC+5(4) ADDRESS INTO SCREEN STREAM          04616057
         TR    2(6,RA),ZZ1TRHEX(R1) ZONED HEXADECIMAL=>EBCDIC           04624057
         L     R1,ZZ2P            ->ZZ2                                 04632057
         MVC   ZZ2AMDA(2,R1),32(RF) ASID                                04638057
         L     RF,ZZ2AMDS(0,R1)   ->BLSRACCL                            04650057
         BALR  RE,RF              CALL BLSRACCL                         04666057
         LTR   RF,RF              DUMP DATA AVAILABLE?                  04674057
         BNZ   LB004200           NO                                    04682057
         LR    R9,R0              PRESERVE 'REAL' DATA ADDR             04688057
         L     R0,PACKDEC         CALCULATE INDENTATION, IF ANY         04700057
         S     R0,PACKDEC+4       FROM BYTES TO SKIP                    04716057
         SRA   R0,3               BYTES/(8=2**3) = 'WORDS' TO SKIP      04724057
         BNZ   LB004900           SOME                                  04732057
         XC    8(2,RA),8(RA)      NULL TWO POSITIONS                    04738057
         LA    RA,10(0,RA)        POINT TO NEXT STREAM POSITION         04750057
         B     LB005000                                                 04766057
LB004900 BAL   RE,LB003700        SET UP SKIP ORDERS                    04774057
         MVI   0(RA),0            INSERT NULL FOR FIRST SEPARATOR       04782057
         LA    RA,1(RA)           CORRECT BUFFER ADDRESS                04788057
LB005000 LA    R8,8               SET UP TRANSLATE LOOP                 04800057
         SLR   R8,R0              WORDS LEFT AFTER INDENT               04816057
         SLL   R0,3               *(8=2**3) = BYTES TO SKIP             04824057
         ALR   R9,R0              WHERE TO FETCH FIRST DATA FROM        04832057
         L     R1,ZZ1P            ->ZZ1                                 04838057
LB005100 MVC   0(8,RA),0(R9)      DATA INTO SCREEN STREAM               04850057
         TR    0(8,RA),ZZ1TREBC(R1) NON-ALPHAMERIC TO BLANKS            04866057
         MVI   8(RA),C'|'         INSERT SEPARATOR BETWEEN 'WORDS'      04874057
         LA    R9,8(0,R9)         UPDATE DATA SOURCE ADDRESS            04882057
         LA    RA,9(0,RA)         UPDATE DATA TARGET ADDRESS            04888057
         BCT   R8,LB005100        PROCESS ALL 'WORDS' THIS LINE         04900057
         BCTR  RA,0               DON'T NEED FINAL SEPARATOR            04916057
         B     LB004100           GET A NEW DATA ROW                    04924057
IB005200 MVC   ORDLNSBA(0,RA),WKABLSRC *** SUBJ OF EX INSTR ***         04932057
         SPACE 2                                                        04938057
*---------------------------------------------------------------------* 04950057
*ADD AN INSERT-CURSOR ORDER                                           * 04960057
*---------------------------------------------------------------------* 04968057
         SPACE                                                          04976057
LB005300 MVC   0(4,RA),WKACORDS                                         04984057
         LA    RA,4(0,RA)         CORRECT BUFFER ADDRESS                04992057
         LA    R8,LA000700        SET UP TPUT RETURN ADDRESS            05010057
./  ADD  SSI=80220055,NAME=BLSR327C
         TITLE 'BLSR3270--BLSR327C--PRE-PROCESS ATTENTION IDENTIFIER'   00050000
*---------------------------------------------------------------------* 00100000
*                                                                     * 00150000
*BLSR327C--PRE-PROCESS ATTENTION IDENTIFIER                           * 00200000
*                                                                     * 00250000
*---------------------------------------------------------------------* 00300000
         SPACE                                                          00350000
*        BY CONVERTING THE ATTENTION ID BACK TO THE 3270 INTERNAL       00400000
*        REPRESENTATION, WE ARRIVE AT A COLLATING SEQUENCE THAT         00450000
*        STARTS WITH THE 'SHORT-READ' IDS, THROUGH THE PF KEYS, TO      00500000
*        THE ENTER AND LIGHT PEN IDS.                                   00550000
         IC    RF,0(RA)           FIRST CHAR IN BUFFER IS AID           00600000
         N     RF,=X'0000003F'    KEEP ONLY LOW SIX BITS                00650000
         CH    RF,=X'0000003E'    LIGHT PEN ATTENTION                   00700000
         BE    LC000200           YES                                   00750000
         SH    RF,=Y(AIDIGNOR)    SHORT READ                            00800000
         BNM   LC000300           NO                                    00850000
LC000200 OI    FLAG0,FLAG0FMT     MUST REWRITE ENTIRE SCREEN            00900000
         MVC   WKACORDS+1(2),PREVCURS RESTORE OLD CURSOR POSITION       00950000
         B     BLSR327B           PREPARE OUTPUT                        01000000
LC000300 CH    RF,=H'2'           IS IT END?                            01050000
         BE    LA005600           -YES SKIP REST                        01100000
         ALR   RF,RF              DOUBLE TO INDEX YCON TABLE            01150000
         STH   RF,WKAAIDNX        SAVE INDEX                            01200000
         B     BLSR327J           CHECK INPUT FOR ERRORS                01250000
         SPACE                                                          01300000
LC000320 LA    RA,SCRNBUFR        -> INPUT BUFFER                       01350000
         L     R7,SAVER7          RESTORE INPUT LENGTH                  01400000
         LH    RF,WKAAIDNX        RESTORE INDEX                         01450000
         LH    RF,YC000400(RF)    OFFSET TO ROUTINE                     01500000
         B     BLSR327B(RF)       GO TO PROPER PRE-PROCESSOR            01550000
         SPACE 2                                                        01600000
*---------------------------------------------------------------------* 01650000
*        ATTENTION IDENTIFIER (AID) PRE-PROCESSOR VECTOR TABLE        * 01700000
*        AID   AID&X'3F'          MEANING OF AID                      * 01750000
*        --    ---------          --------------                      * 01800000
*        60    00                 NOP TO POLL OF DISPLAY              * 01850000
*        E6    26                 CARD READER READ A STRIPE           * 01900000
*        E8    28                 NOP TO POLL OF PRINTER              * 01950000
*        6B    2B                 PA3                                 * 02000000
*        6C    2C                 PA1                                 * 02050000
*        6D    2D                 CLEAR                               * 02100000
*        6E    2E                 PA2                                 * 02150000
*        F0    30                 TEST REQUEST                        * 02200000
*---------------------------------------------------------------------* 02250000
         SPACE                                                          02300000
YC000400 DC    Y(BLSR327D-BLSR327B) F1-->31 PF1 ROUTINE OFFSET=ENTER    02350000
         DC    Y(BLSR327D-BLSR327B) F2-->32 PF2 ROUTINE OFFSET=ENTER    02400000
         DC    Y(LA005600-BLSR327B) F3-->33 PF3 ROUTINE OFFSET=END      02450000
         DC    Y(BLSR327D-BLSR327B) F4-->34 PF4 ROUTINE OFFSET=ENTER    02500000
         DC    Y(BLSR327D-BLSR327B) F5-->35 PF5 ROUTINE OFFSET=ENTER    02550000
         DC    Y(BLSR327D-BLSR327B) F6-->36 PF6 ROUTINE OFFSET=ENTER    02600000
         DC    Y(LD001800-BLSR327B) F7-->37 PF7 ROUTINE OFFSET=-SCROLL  02650000
         DC    Y(LD001800-BLSR327B) F8-->38 PF8 ROUTINE OFFSET=+SCROLL  02700000
         DC    Y(LD001800-BLSR327B) F9-->39 PF9 ROUTINE OFFSET=STACK    02750000
         DC    Y(LD001800-BLSR327B) 7A-->3A PF10 ROUTINE OFFSET=-SKIP   02800000
         DC    Y(LD001800-BLSR327B) 7B-->3B PF11 ROUTINE OFFSET=+SKIP   02850000
         DC    Y(BLSR327D-BLSR327B) 7C-->3C PF12 ROUTINE OFFSET=ENTER   02900000
         DC    Y(BLSR327D-BLSR327B) 7D-->3D ENTER ROUTINE OFFSET        02950000
./  ADD  SSI=80220057,NAME=BLSR327D
         TITLE 'BLSR3270--BLSR327D--PRE-PROCESS CURSOR'                 00050000
*---------------------------------------------------------------------* 00100000
*                                                                     * 00150000
*BLSR327D--PRE-PROCESS CURSOR                                         * 00200000
*                                                                     * 00250000
*---------------------------------------------------------------------* 00300000
         SPACE                                                          00350000
BLSR327D BAL   RE,EA001400        DECOMPOSE CURSOR ADDR INTO ROW/COLM   00400000
         ALR   R5,R5              DOUBLE ROW ADDRESS TO GET YCON INDEX  00450000
         STM   R4,R5,WKACRPOS     SAVE INDICES FOR POST-PROCESS         00500000
         CH    R5,=H'10'          A ROLL/POINT OPERATION (IN DUMP       00550000
         BNL   LD000300           DATA DISPLAY AREA)                    00600000
         LH    RF,YD000200(R5)                                          00650000
         B     BLSR327B(RF)       GO TO APPROPRIATE ROUTINE             00700000
YD000200 DC    Y(LD000800-BLSR327B) CURSOR ON ROW1                      00750000
         DC    Y(LD000900-BLSR327B) CURSOR ON ROW2                      00800000
         DC    Y(LA001000-BLSR327B) CURSOR ON ROW3                      00850000
         DC    Y(LA001000-BLSR327B) CURSOR ON ROW4                      00900000
         DC    Y(LA001000-BLSR327B) CURSOR ON ROW5                      00950000
LD000300 SRL   R5,1               BACK TO A BYTE ROW INDEX              01000000
         LA    R6,15              WANT LOW ORDER 4 BITS                 01050000
         N     R6,WKALNCTL-8(R5)   OF THIS LINE CONTROL BYTE            01100000
         LTR   RE,R6              A NULL AREA?                          01150000
         LA    RF,LA001000        WHERE TO GO NEXT IF POINTING FAILS    01200000
         BZR   RF                 YES                                   01250000
         SLL   RE,2               DEVELOP WORD INDEX                    01300000
         LA    R2,WKAVCTA-4(RE)   ADDRESS CONTROL ARRAY, CORRECT        01350000
*                                 TO ZERO ORIGIN ADDRESSING             01400000
         TM    WKAVFLAG-WKAVCTA(R2),WKAVCTAI IS THIS AREA ACTIVE?       01450000
         BOR   RF                 NO                                    01500000
         LR    R0,R5              SAVE PREVIOUS LINE NUMBER             01550000
         SH    R0,=H'5'           GO FROM '5' ORIGIN TO 0-ORIGIN IN     01600000
*                                 DUMP DATA DISPLAY AREA                01650000
         SH    R4,=H'8'           WAS 0:79,-->-8:71; TEST FOR ROLL      01700000
         BM    LD000400           CURSOR UNDER #ADDRES## FIELD          01750000
         SPACE                                                          01800000
         SRDA  R4,32              PREPARE FOR DIVIDE - MAKE SIGN POS    01850000
         D     R4,=F'9'           DIVIDES COLUMN NUMBER                 01900000
         LTR   R4,R4              IF REMAINDER ZERO, CURSOR WAS UNDER   01950000
*                                 A SEPARATOR BYTE -- TO BE IGNORED     02000000
         BZR   RF                 JUST CHECK HIS INPUT                  02050000
         CLI   WKAVFMT-WKAVCTA(R2),C'C' IS THIS A CHARACTER DISPLAY     02100000
         BER   RF                 YES                                   02150000
         SPACE 2                                                        02200000
*---------------------------------------------------------------------* 02250000
*        CURSOR IS BENEATH A HEX DUMP WORD--INDIRECT ADDRESS REQUEST  * 02300000
*---------------------------------------------------------------------* 02350000
         SPACE                                                          02400000
*              R0 NOW HAS NUMBER FROM 0 - 18  (WAS 5-23 BEFORE)         02450000
         S     R0,WKALNCTV-4(RE) GET ROW DISPLACEMENT IN THIS AREA      02500000
         SLL   R0,5               BYTE DISPLACEMENT TO START OF ROW     02550000
         SLL   R5,2               BYTES TO INDENT                       02600000
         ALR   R0,R5              DISPLACEMENT PAST STARTING ADDR       02650000
         L     R4,0(0,R2)         PICK UP CURRENT START THIS AREA       02700000
         N     R4,=X'FFFFFFE0'    JUST IN CASE WE INDENTED              02750000
         ALR   R0,R4              DUMP ADDR TO FETCH FROM               02800000
         CL    R0,0(0,R2)         WAS CURSOR PLACED BEFORE START OF     02850000
         BLR   RF                 INDENTED FIRST LINE'S DATA? - YES     02900000
         SPACE 2                                                        02950000
*---------------------------------------------------------------------* 03000000
*        LOAD DATA FROM DUMP                                          * 03050000
*---------------------------------------------------------------------* 03100000
         SPACE                                                          03150000
         L     R1,ZZ2P            ->ZZ2                                 03200000
         MVC   ZZ2AMDA(2,R1),WKAVASI-WKAVCTA(R2) SET UP ASID            03250000
         L     RF,ZZ2AMDS(0,R1)   ->BLSRACCL                            03300000
         BALR  RE,RF              CALL BLSRACCL                         03350000
         LTR   RF,RF              OK?                                   03400000
         BNZ   LA001000           NO                                    03450000
         LR    RF,R0              PUT 'REAL' ADDRESS IN REG WE CAN USE  03500000
         L     RF,0(0,RF)         ACCESS DATA FROM DUMP                 03550000
         LA    RF,0(0,RF)         CLEAR HIGH ORDER BYTE                 03600000
         ST    RF,ESAULAD         TEMP SAVE FOR NEW ADDRESS TO USE      03650000
         OI    FLAG1,FLAG1BLA+FLAG1ADR CAN'T ACCEPT MANUAL ADDR INPT    03700000
         B     LA001000                                                 03750000
         SPACE 2                                                        03800000
*---------------------------------------------------------------------* 03850000
*        PERFORM A ROLL OPERATION WITHIN THIS AREA                    * 03900000
*---------------------------------------------------------------------* 03950000
         SPACE                                                          04000000
LD000400 LA    R6,C'A'-1(0,R6)    FORM CORRECT AREA-ID OF ROLL          04050000
         CLM   R6,B'0001',WKAAREA NEW AREA ID?                          04100000
         BE    LD000500           NO                                    04150000
         STCM  R6,B'0001',WKAAREA SET NEW AREA ID                       04200000
         OI    FLAG1,FLAG1ARE     DISPLAY NEW AREA ID                   04250000
LD000500 S     R0,WKALNCTV-4(RE)  GET ROW OFFSET WITHIN AREA            04300000
         SLL   R0,5               GET BYTE OFFSET FROM START OF AREA    04350000
         CLI   WKAVFMT-WKAVCTA(R2),C'C' IN CHARACTER DISPLAY?           04400000
         BE    LD000700           YES                                   04450000
         AL    R0,0(0,R2)         ADD CURRENT START ADDRESS             04500000
         N     R0,=X'00FFFFE0'    ROUND DOWN TO 32-BYTE BDY             04550000
LD000600 ST    R0,ESAULAD         SAVE RESULT                           04600000
         OI    FLAG1,FLAG1BLA+FLAG1ADR+FLAG1RLL                         04650000
         B     LA001000           GO SEE WHAT ELSE HE DID               04700000
LD000700 ALR   R0,R0              DOUBLE BYTE OFFSET FOR CHAR ROLL      04750000
         AL    R0,0(0,R2)         ADD CURRENT START ADDRESS             04800000
         N     R0,=X'00FFFFC0'    ROUND DOWN TO 64-BYTE BDY             04850000
         B     LD000600                                                 04900000
         SPACE 2                                                        04950000
*              R5 HAS A ZERO IN IT                                      05000000
*              R4 HAS THE COLUM NUMBER, 0-79 DECIMAL                    05050000
*                                 MUST CONVERT TO A COMMAND BRANCH      05100000
*                                 TABLE INDEX                           05150000
LD000800 IC    R4,AD001000(R4)    TRANSLATE TO INDEX (0-24 MAX)         05200000
         ST    R4,WKACRPOS        OVERLAY SAVED COLUMN                  05250000
         LH    RF,YD001100(R4)    INDEX TO ROUTINE                      05300000
         B     BLSR327B(RF)       GO TO APPROPRIATE ROUTINE             05350000
LD000900 LA    RF,LA001000        WHERE TO GO WHEN DONE                 05400000
         SH    R4,=H'3'           CAN'T USE ATTR, 'SK' FIELDS           05450000
         BMR   RF                                                       05500000
         SRDA  R4,32              PUT COLUMN IN RIGHT REG FOR DIVIDE    05550000
         D     R4,=F'7'           (0-76 ---->0-10)                      05600000
         LTR   R4,R4              CURSOR UNDER ATTRIBUTE BYTE?          05650000
         BZR   RF                 YES. AMBIGUOUS                        05700000
         IC    R4,WKASKNUM        MAKE SURE HE WAS UNDER AN ACTIVE      05750000
         BCTR  R4,0               STACK POSITION - GO TO 0-ORIGIN       05800000
         CLR   R4,R5              AND CHECK MAX POSITION VS PTR POS     05850000
         BLR   RF                 MAX LESS THAN WHERE HE WAS, IGNORE    05900000
         ALR   R5,R5              DOUBLE POSITION TO FORM ASID INDEX    05950000
         LH    R0,WKASKASI(R5)    PICK UP ASID FOR THIS STACK ENTRY     06000000
         ST    R0,ESAUAS2         INTO UPDATE AREA                      06050000
         OI    FLAG1,FLAG1ASI     MAKE SURE HE SEES THE CHANGE          06100000
         ALR   R5,R5              FORM INDEX TO 4-BYTE TABLE            06150000
         L     R0,WKASTACK(R5)    PICK UP CORRECT STACK ENTRY           06200000
         B     LD000600           AND PUT IT INTO INPUT AREA            06250000
         SPACE 2                                                        06300000
AD001000 DC    1AL1(0)            ATTRIBUTE-IGNORE                      06350000
         DC    4AL1(2)            3END                                  06400000
         DC    2AL1(0)            ATTRIBUTE OR BLANK - IGNORE           06450000
         DC    6AL1(4)            7<-SCR                                06500000
         DC    6AL1(6)            OLL+>8                                06550000
         DC    2AL1(0)            ATTRIBUTE OR BLANK - IGNORE           06600000
         DC    6AL1(8)            9STACK                                06650000
         DC    2AL1(0)            ATTRIBUTE OR BLANK - IGNORE           06700000
         DC    6AL1(10)           10<-SK                                06750000
         DC    6AL1(12)           IP+>11                                06800000
         DC    39AL1(0)           MESSAGE-IGNORE                        06850000
         SPACE 3                                                        06900000
YD001100 DC    Y(LA001000-BLSR327B) ATTRIBUTE BLANK OR MESSAGE          06950000
         DC    Y(LD001500-BLSR327B) END                                 07000000
         DC    Y(LD001800-BLSR327B) -SCROLL                             07050000
         DC    Y(LD001800-BLSR327B) +SCROLL                             07100000
         DC    Y(LD001700-BLSR327B) STACK                               07150000
         DC    Y(LD001800-BLSR327B) -SKIP                               07200000
         DC    Y(LD001800-BLSR327B) +SKIP                               07250000
         SPACE 2                                                        07300000
*---------------------------------------------------------------------* 07350000
*                                                                     * 07400000
* PRE-PROCESS PF3 = END                                               * 07450000
*                                                                     * 07500000
*---------------------------------------------------------------------* 07550000
LD001500 MVC   WKACORDS+1(2),PREVCURS RESTORE OLD CURSOR POSITION       07600000
         B     LA005600           LEAVE WITHOUT REALLY CLEANING UP      07650000
         SPACE 2                                                        07700000
*---------------------------------------------------------------------* 07750000
*                                                                     * 07800000
* PRE-PROCESS PF9 = STACK                                             * 07850000
*                                                                     * 07900000
*---------------------------------------------------------------------* 07950000
LD001700 MVC   WKACORDS+1(2),PREVCURS RESTORE OLD CURSOR POSITION       08000000
LD001800 OI    FLAG1,FLAG1BLA     SO THAT CURRENT CAN BE MOVED TO       08050000
         B     LA001000           THE STACK AFTER POSSIBLE PURGE        08100000
*                                 AND/OR ASID CHANGE.                   08150000
./  ADD  SSI=80220065,NAME=BLSR327E
         TITLE 'BLSR3270--BLSR327E--POST-PROCESS ATTENTION IDENTIFIER'  00050000
*---------------------------------------------------------------------* 00100000
*                                                                     * 00150000
*BLSR327E--POST-PROCESS ATTENTION IDENTIFIER                          * 00200000
*                                                                     * 00250000
*---------------------------------------------------------------------* 00300000
         SPACE                                                          00350000
BLSR327E LH    RF,WKAAIDNX        GET YCON TABLE INDEX SAVED AT PRE-P   00400000
         LH    RF,YE000200(RF)    OFFSET TO ROUTINE                     00450000
         B     BLSR327B(RF)       GO TO PROPER POST-PROCESSOR           00500000
         SPACE 3                                                        00550000
****                                                                    00600000
******   THIS IS THE OFFSET TABLE USED TO ENTER THE CORRECT AID         00650000
****           POST-PROCESSOR.  THE ORDER OF ENTRIES IS IMPORTANT...    00700000
         SPACE                                                          00750000
YE000200 DC    Y(BLSR327F-BLSR327B) F1-->31 PF1 ROUTINE OFFSET=ENTER    00800000
         DC    Y(BLSR327F-BLSR327B) F2-->32 PF2 ROUTINE OFFSET=ENTER    00850000
         DC    Y(LA005600-BLSR327B) F3-->33 PF3 ROUTINE OFFSET=END      00900000
         DC    Y(BLSR327F-BLSR327B) F4-->34 PF4 ROUTINE OFFSET=ENTER    00950000
         DC    Y(BLSR327F-BLSR327B) F5-->35 PF5 ROUTINE OFFSET=ENTER    01000000
         DC    Y(BLSR327F-BLSR327B) F6-->36 PF6 ROUTINE OFFSET=ENTER    01050000
         DC    Y(LF000300-BLSR327B) F7-->37 PF7 ROUTINE OFFSET=-SCROLL  01100000
         DC    Y(LF000400-BLSR327B) F8-->38 PF8 ROUTINE OFFSET=+SCROLL  01150000
         DC    Y(LG000200-BLSR327B) F9-->39 PF9 ROUTINE OFFSET=STACK    01200000
         DC    Y(LF000700-BLSR327B) 7A-->3A PF10 ROUTINE OFFSET=-SKIP   01250000
         DC    Y(LF000800-BLSR327B) 7B-->3B PF11 ROUTINE OFFSET=+SKIP   01300000
         DC    Y(BLSR327F-BLSR327B) 7C-->3C PF12 ROUTINE OFFSET=ENTER   01350000
         DC    Y(BLSR327F-BLSR327B) 7D-->3D ENTER ROUTINE OFFSET        01400000
./  ADD  SSI=80220068,NAME=BLSR327F
         TITLE 'BLSR3270--BLSR327F--POST-PROCESS CURSOR'                00050000
*---------------------------------------------------------------------* 00100000
*                                                                     * 00150000
*BLSR327F--POST-PROCESS CURSOR COMMANDS                               * 00200000
*                                                                     * 00250000
*---------------------------------------------------------------------* 00300000
         SPACE                                                          00350000
BLSR327F LM    R4,R5,WKACRPOS RELOAD SAVED INDICES                      00400000
         LTR   R5,R5              ON ROW ONE - A CURSOR COMMAND?        00450000
         BNZ   BLSR327G           NO, NO POST-PROCESS NEEDED            00500000
         LH    RF,YF000200(R4)    INDEX BASED ON COLUMN                 00550000
         B     BLSR327B(RF)       GO TO APPROPRIATE ROUTINE             00600000
         SPACE 2                                                        00650000
YF000200 DC    Y(BLSR327G-BLSR327B) ATTRIBUTE MESSAGE OR BLANK          00700000
         DC    Y(LA005600-BLSR327B) END                                 00750000
         DC    Y(LF000300-BLSR327B) -SCROLL                             00800000
         DC    Y(LF000400-BLSR327B) +SCROLL                             00850000
         DC    Y(LG000200-BLSR327B) STACK                               00900000
         DC    Y(LF000700-BLSR327B) -SKIP                               00950000
         DC    Y(LF000800-BLSR327B) +SKIP                               01000000
         SPACE 2                                                        01050000
*                                  ************************************ 01100000
*                                  *                                  * 01150000
*                                  *   POST-PROCESS PF1 = ROLL BACKWD * 01200000
*                                  *                                  * 01250000
*                                  ************************************ 01300000
LF000300 BAL   RE,LF000600        PERFORM COMMON CALCULATIONS FOR ROLL  01350000
*        R0    HAS NUMBER OF BYTES DISPLAYED IN CURRENT AREA            01400000
*        R1    HAS ROUNDED DOWN ADDR FROM WKAVCTA ENTRY                 01450000
*        RF HAS INDEXED WORK ARRAY ADDRESS                              01500000
         SLR   R1,R0              CALCULATE NEW START ADDR              01550000
         B     LF000500           GO STORE, SET SWITCHES                01600000
*                                 MUST WAIT FOR ANY SCREEN PARAMETER    01650000
*                                 UPDATES TO BE PROCESSED.              01700000
         SPACE 2                                                        01750000
*                                  ************************************ 01800000
*                                  *                                  * 01850000
*                                  *   POST-PROCESS PF2 = ROLL FORWARD* 01900000
*                                  *                                  * 01950000
*                                  ************************************ 02000000
LF000400 BAL   RE,LF000600        SEE COMMENTARY ABOVE, AND BELOW       02050000
         ALR   R1,R0              CALCULATE NEXT ADDRESS                02100000
LF000500 LA    R1,0(R1)           CLEAR HIGH-ORDER BYTE                 02150000
         ST    R1,ESAULAD         NEW ADDRESS INTO ENTRY LINE           02200000
         OI    FLAG1,FLAG1ADR+FLAG1RLL                                  02250000
         B     BLSR327G           GO CHECK STACK, ETC                   02300000
LF000600 IC    RF,WKAAREA         PICK UP AREA TO BE ROLLED             02350000
         N     RF,=X'00000007'    KEEP ONLY LOW 4 BITS                  02400000
         SLR   R0,R0              CLEAR FOR LATER ADDITION              02450000
         IC    R0,WKALINES-1(RF)  LINES THAT WERE DISPLAYED             02500000
         SLL   R0,5               BYTES TO MOVE                         02550000
         SLL   RF,2               WORD INDEX                            02600000
         LA    RF,WKAVCTA-4(RF)   ADDRESS NEW CURRENT ARRAY             02650000
         L     R1,WKAVCTA-WKAVCTA(RF) PICK UP OLD START ADDR            02700000
         N     R1,=X'FFFFFFE0'    ROUND DOWN TO 32-BYTE BDY             02750000
         CLI   WKAVFMT-WKAVCTA(RF),C'C' WAS IT CHARACTER?               02800000
         BNER  RE                 NO                                    02850000
         N     R1,=X'FFFFFFC0'    ROUND DOWN TO 64-BYTE BDY             02900000
         ALR   R0,R0              DOUBLE DIFFERENCE                     02950000
         BR    RE                                                       03000000
         SPACE 2                                                        03050000
*                                  ************************************ 03100000
*                                  *                                  * 03150000
*                                  *  POST-PROCESS PF10 = SKIP BACKWD * 03200000
*                                  *                                  * 03250000
*                                  ************************************ 03300000
LF000700 BAL   RE,LF000900        PICK UP ADDRESS, SKIP AMOUNT          03350000
         SLR   R1,R0              DECREMENT OLD BY SKIP AMOUNT          03400000
         BR    RF                                                       03450000
         SPACE 2                                                        03500000
*                                  ************************************ 03550000
*                                  *                                  * 03600000
*                                  * POST-PROCESS PF11 = SKIP FORWARD * 03650000
*                                  *                                  * 03700000
*                                  ************************************ 03750000
LF000800 BAL   RE,LF000900        PICK UP ADDRESS, SKIP AMOUNT          03800000
         ALR   R1,R0              INCREMENT OLD BY SKIP AMOUNT          03850000
         BR    RF                                                       03900000
LF000900 LA    RF,LF000500        WHERE TO GO WHEN DONE                 03950000
         L     R0,WKASKIP         HOW MUCH TO CHANGE ADDR BY            04000000
         L     R1,WKAADDR         ADDR TO CHANGE                        04050000
         BR    RE                                                       04100000
./  ADD  SSI=80160265,NAME=BLSR327G
         TITLE 'BLSR3270--BLSR327G--POST-PROCESS MANUAL INPUT'          00010057
*---------------------------------------------------------------------* 00020057
*                                                                     * 00030057
*BLSR327G--POST-PROCESS MANUAL INPUT                                  * 00040057
*                                                                     * 00050057
*---------------------------------------------------------------------* 00058057
         SPACE                                                          00066057
BLSR327G CLC   WKAADDR+1(3),ESAULAD+1 HAS THE ADDRESS BEEN CHANGED?     00074057
         BE    LG000600           NO                                    00082057
         TM    WKAADDR,WKAADRLL   IS THE OLD ADDRESS ALREADY            00100057
*                                 IN THE STACK, OR RESULT OF A ROLL?    00108057
         BNZ   LG000600           YES                                   00116057
LG000200 CLI   WKASKNUM,11        STACK FULL NOW?                       00124057
         BNE   LG000400           NO                                    00132057
         MVC   WKASTACK(40),WKASTACK+4                                  00150057
         MVC   WKASTACK+41(3),WKAADDR+1                                 00158057
         MVC   WKANOTES(80),WKANOTES+8                                  00166057
         XC    WKANOTES+80(8),WKANOTES+80                               00174057
         MVC   WKASKASI(20),WKASKASI+2                                  00182057
         MVC   WKASKASI+20,WKAASID                                      00200057
         OI    FLAG0,FLAG0RW2     WRITE STACK BACK                      00208057
         ICM   RF,1,WKANBNUM      NUMBER OF ACTIVE NOTE LIST ENTRIES    00216057
         BZ    LG000600                                                 00224057
         BCTR  RF,0               DECREMENT                             00232057
         STC   RF,WKANBNUM        ADDRESS STACK ENTRY OFF               00250057
         OI    FLAG0,FLAG0RW3     WRITE NOTE LIST BACK ALSO             00258057
         B     LG000600           A FULL STACK HAS BEEN UPDATED         00266057
IG000300 OC    0(0,R6),=19AL1(WKALNCTW) *** SUBJ EX, B                  00274057
LG000400 SLR   RF,RF              PREPARE FOR INSERT CHAR               00282057
         IC    RF,WKASKNUM        CURRENT NUMBER OF ACTIVE ENTRIES      00300057
         LA    R0,1(0,RF)         UP 1                                  00308057
         STC   R0,WKASKNUM        SAVE NEW ACTIVE ENTRY NUMBER          00316057
         CLI   WKASKNUM,11        DID THE STACK JUST FILL UP?           00324057
         BNE   LG000500           -NO                                   00332057
         OI    NEWWCC,WCCALARM    YES, BEEP AT HIM                      00350057
LG000500 ALR   RF,RF              DOUBLE TO FORM HWORD INDEX            00358057
         LH    R0,WKAASID         MOVE ASID TO STACK                    00366057
         STH   R0,WKASKASI(RF)    INTO PROPER SLOT                      00374057
         ALR   RF,RF              DOUBLE HWORD INDEX TO GET WORD INDEX  00382057
         L     R0,WKAADDR         MOVE CURRENT ADDRESS                  00400057
         ST    R0,WKASTACK(RF)    INTO PROPER SLOT                      00408057
         OI    FLAG0,FLAG0RW2     RE-WRITE STACK LINE                   00416057
LG000600 CLI   WKASKNUM,11        IS THE ADDRESS STACK FULL?            00424057
         BL    LG000605           -NO                                   00432057
         OI    FLAG2,FLAG2STK     -YES, REMEMBER TO PUT OUT MESSAGE     00450057
LG000605 TM    FLAG1,FLAG1ADR+FLAG1ASI+FLAG1FMT+FLAG1ARE  UPDATE        00458057
*                                 -CONTROL ARRAY?                       00466057
         BZ    LG000800           NO                                    00474057
         TM    FLAG1,FLAG1ADR+FLAG1ASI NEW ADDRESS?                     00482057
         BZ    LG000615           NO                                    00500057
         MVC   WKAADDR(4),ESAULAD NEW ADDRESS                           00508057
         TM    FLAG1,FLAG1RLL     RESULT OF SKIP,ROLL OR STACK?         00516057
         BZ    LG000610           NO                                    00524057
         OI    WKAADDR,WKAADRLL   SUPPRESS IMPLICIT STACK OPERATIONS    00532057
LG000610 MVC   WKAASID(2),ESAUAS2+2 NEW ASID                            00550057
LG000615 MVC   WKAFMT,ESAUDTY     NEW FORMAT                            00558057
         CLI   WKAFMT,C'C'        HANDLE CASE WHEN                      00566057
         BE    LG000620           -NO INITIALIZATION                    00574057
         MVI   WKAFMT,C'X'        -HAS BEEN DONE                        00582057
LG000620 EQU   *                                                        00600057
         IC    RF,WKAAREA         PREPARE TO UPDATE CONTROL ARRAY       00608057
         N     RF,=X'00000007'    KEEP JUST LOW THREE BITS              00616057
         LR    R0,RF              SAVE BYTE INDEX (1-ORG)               00624057
         SLL   RF,2               FORM WORD INDEX 1-ORG                 00632057
         LR    R6,RF              SAVE WORD INDEX (1-ORG)               00650057
         LA    RF,WKAVCTA-4(RF)   ADDRESS PROPER ARRAY                  00658057
         MVC   WKAVCTA-WKAVCTA(4,RF),WKAADDR NEW ADDRESS                00666057
         MVC   WKAVASI-WKAVCTA(2,RF),WKAASID NEW ASID                   00674057
         MVC   WKAVFMT-WKAVCTA(1,RF),WKAFMT NEW FORMAT                  00682057
         NI    WKAVFLAG-WKAVCTA(RF),255-WKAVCTAI OFF INVALID FLAG       00700057
         LR    RF,R0              AREA VALUE BACK IN GOOD INDEX REG     00708057
         IC    RF,WKALINES-1(RF)  NUMBER LINES THIS AREA                00716057
         LTR   RF,RF              ANY LINES ALLOCATED?                  00724057
         BNZ   LG000700           YES                                   00732057
         MVI   NEWWCC,WCCALARM+WCCRSMDT                                 00750057
         B     LG000800           GO BLOW YOUR HORN                     00758057
LG000700 BCTR  RF,0               DOWN 1 FOR EX OF OC                   00766057
         L     R6,WKALNCTV-4(R6)  OFFSET INTO CONTROL VECTOR            00774057
         LA    R6,WKALNCTL(R6)    PLACE TO START WRITING                00782057
         EX    RF,IG000300        MARK LINES TO BE RE-WRITTEN           00800057
LG000800 TM    FLAG0,FLAG0SUS     MUST WE DEPART NOW?                   00810057
         BNO   BLSR327B           NO - PREPARE OUTPUT                   00820057
         B     LA005600           YES, HANDLE SUBCOMMAND                00830057
./  ADD  SSI=80220075,NAME=BLSR327H
         TITLE 'BLSR3270--BLSR327H--CLOSED, INDEPENDENT SUBROUTINES'    00050000
*---------------------------------------------------------------------* 00100000
*                                                                     * 00150000
*BLSR327H--REDEFINE ALLOCATION OF WINDOWS A, B, C, AND D              * 00200000
*                                                                     * 00250000
*---------------------------------------------------------------------* 00300000
         SPACE 2                                                        00350000
*---------------------------------------------------------------------* 00400000
*        VALIDATE THE USERS REQUEST AS TO SIZES AND SUM               * 00450000
*---------------------------------------------------------------------* 00500000
         SPACE                                                          00550000
BLSR327H OI    FLAG1,FLAG1LIN     DISPLAY RESULTING ALLOCATION          00600000
         SLR   RF,RF              CLEAR IT                              00650000
         LA    R0,4               NUMBER OF AREAS WE LET HIM DEFINE     00700000
         SLR   R4,R4              CLEAR IT                              00750000
         SLR   R5,R5              DITTO - INDEX CURRENT AREA DEF        00800000
         LA    RE,19              MAX NUMBER LINES HE CAN ALLOCATE      00850000
LH000200 IC    RF,NEWLINES(R5)    HOW MUCH DID HE ASK FOR HERE          00900000
         CR    RF,RE              MORE THAN WE HAVE TO GIVE?            00950000
         BNH   LH000300           NO                                    01000000
         STC   RE,NEWLINES(R5)    YES, FORCE REMAINDER HERE             01050000
         LR    RF,RE              FORCE REMAINDER TO ZERO               01100000
LH000300 SLR   RE,RF              DECREMENT NUMBER LINES AVAIL          01150000
         LA    R5,1(0,R5)         INCREMENT INDEX VALUE                 01200000
         BCT   R0,LH000200        CHECK REST OF HIS REQUEST             01250000
         SPACE 2                                                        01300000
*---------------------------------------------------------------------* 01350000
*        RE NOW HAS UNALLOCATED LINES COUNT, AND ALLOCATION IS VALID. * 01400000
*        SCHEDULE ANY REWRITES REQUIRED                               * 01450000
*---------------------------------------------------------------------* 01500000
         SPACE                                                          01550000
         CLC   WKALINES(4),NEWLINES ANY CHANGES INDICATED?              01600000
         BER   R3                 SAME AS BEFORE                        01650000
         MVC   WKALINES(4),NEWLINES DIFFERENT, UPDATE OLD VALUES        01700000
         SLR   R4,RF              BYTE VALUE INDEX OF UN-EQUAL ALLOC    01750000
         SLR   RF,RF              ASSUME NO NULL LINE ON ROW 6          01800000
         CH    RE,=H'3'           CAN WE PUT A NULL LINE AT POSIT 6?    01850000
         BNH   LH000400           NO                                    01900000
         LA    RF,1               INITIALIZE INDEX FOR FIRST AREA       01950000
         BCTR  RE,0               DECREMENT NUMBER OF NULL LINES        02000000
LH000400 ST    RF,WKALNCTV        INIT FIRST LINE CONTROL VECTOR        02050000
         LA    R0,3               NUMBER OF SLOTS LEFT IN LNCTV         02100000
         SLR   R1,R1              CLEAR SOME REGS - INDEX LNCTV         02150000
         SLR   R6,R6              INDEX LINES ALLOCATION                02200000
         SLR   R7,R7              NEXT AREA'S ALLOCATION                02250000
LH000500 IC    R7,NEWLINES(R6)    PICK UP NEXT ALLOCATION               02300000
         ALR   RF,R7              ADD TO PREVIOUS INDEX                 02350000
         LTR   RE,RE              ANY NULLS LEFT TO INSERT?             02400000
         BZ    LH000600           NO                                    02450000
         BCTR  RE,0               YES, DECREMENT SPARE COUNT            02500000
         LA    RF,1(0,RF)         AND INCREMENT INDEX VALUE             02550000
LH000600 ST    RF,WKALNCTV+4(R1)  SET NEW INDEX                         02600000
         LA    R1,4(0,R1)         INCREMENT WORD INDEX REGISTER         02650000
         LA    R6,1(0,R6)         INCREMENT BYTE INDEX REGISTER         02700000
         BCT   R0,LH000500        GO CHECK NEXT AREA, IF ANY            02750000
         SPACE 2                                                        02800000
*---------------------------------------------------------------------* 02850000
*        LINE CONTROL INDEX UPDATED, NOW MARK CONTROL VECTOR. THE     * 02900000
*        SCREEN MUST BE RE-WRITTEN BELOW THE FIRST CHANGE IN ITS      * 02950000
*        ALLOCATION                                                   * 03000000
*---------------------------------------------------------------------* 03050000
         SPACE                                                          03100000
         XC    NEWLNCTL(19),NEWLNCTL CLEAR CURRENT UPDATE CONTROL       03150000
         LA    R0,4               NUMBER OF AREAS                       03200000
         LA    RF,1               BYTE INDEX VALUE, AND AREA NUMBER     03250000
         SLR   R1,R1              WORD INDEX FOR WKALNCTV               03300000
LH000700 L     R6,WKALNCTV(R1)    FETCH INDEX INTO LNCTL                03350000
         IC    RE,NEWLINES-1(RF)  NUMBER LINES THIS AREA                03400000
         LTR   RE,RE              ANY LINES THIS AREA?                  03450000
         BZ    LH000900           NO                                    03500000
LH000800 STC   RF,NEWLNCTL(R6)    YES, MARK THE UPDATE CONTROL          03550000
         LA    R6,1(0,R6)         INDEX NEXT BYTE IN UPDATE CTL         03600000
         BCT   RE,LH000800        HIT ALL OF THEM                       03650000
LH000900 LA    R1,4(0,R1)         UPDATE WORD INDEX                     03700000
         LA    RF,1(RF)           UPDATE BYTE INDEX AND AREA ID         03750000
         BCT   R0,LH000700        DO ALL AREAS                          03800000
         SPACE 2                                                        03850000
*---------------------------------------------------------------------* 03900000
*        CONTROLS ALL SET, MARK AREAS TO BE RE-WRITTEN                * 03950000
*---------------------------------------------------------------------* 04000000
         SPACE                                                          04050000
         LA    R6,WKALNCTL        POINT TO OLD VALUES                   04100000
         LA    R4,NEWLNCTL        POINT TO NEW VALUES                   04150000
         LA    R7,19              NUMBER OF BYTES TO CHECK              04200000
         LR    R5,R7              FIELDS HAVE EQUAL LENGTH              04250000
         LR    RF,R4              SAVE START ADDR                       04300000
         CLCL  R6,R4              CHECK NEW AGAINST OLD                 04350000
         SLR   R4,RF              OFFSET OF FIRST NEW AREA 0-18         04400000
         MVC   WKALNCTL(19),NEWLNCTL UPDATE THE VALUES BLSR327B USES    04450000
         SPACE 2                                                        04500000
*---------------------------------------------------------------------* 04550000
*        HAVE THE RIGHT AREA TO UPDATE... IS THE OFFSET CORRECT?      * 04600000
*---------------------------------------------------------------------* 04650000
         SPACE                                                          04700000
         IC    R7,0(R6)           SEE WHERE WE STOPPED                  04750000
         SLA   R7,2               FORM WORD INDEX, TEST FOR NULL LINE   04800000
         BZ    LH001000           WE WILL INSERT A NULL HERE            04850000
         L     R7,WKALNCTV-4(R7)  PICK UP INDEX INTO LNCTL              04900000
         CR    R7,R4              STARTING POSITION SAME OR HIGHER?     04950000
         BNL   LH001000           YES                                   05000000
         LA    R6,WKALNCTL(R7)    NO, GET CORRECT RE-WRITE START        05050000
         LR    R4,R7              AND CORRECT OFFSET FROM LNCTL         05100000
LH001000 LA    RE,18              MAX EXECUTE LENGTH                    05150000
         SLR   RE,R4              EX LENGTH TO USE                      05200000
         EX    RE,IG000300        MARK ALL AFTER THIS ONE               05250000
         BR    R3                 GO BACK THE RIGHT WAY                 05300000
./  ADD  SSI=73530017,NAME=BLSR327I
         TITLE 'BLSR3270--BLSR327I--STATIC STORAGE DATA'                00010057
*---------------------------------------------------------------------* 00020057
*                                                                     * 00030057
*BLSR327I--STATIC STORAGE DATA                                        * 00040057
*                                                                     * 00050057
*---------------------------------------------------------------------* 00058057
         SPACE 2                                                        00066057
*---------------------------------------------------------------------* 00074057
*        LITERAL POOL                                                 * 00082057
*---------------------------------------------------------------------* 00100000
         SPACE                                                          00110057
         LTORG                                                          00120057
         SPACE 2                                                        00130057
*---------------------------------------------------------------------* 00140057
*OPERATIONAL MESSAGES                                                 * 00150057
*---------------------------------------------------------------------* 00158057
         SPACE                                                          00166057
MSGSTK   DC    C' ADDRESS STACK FULL'                                   00174057
MSGSTKLN EQU   L'MSGSTK                                                 00182057
         SPACE                                                          00200057
MSGIER   DC    C' ERROR IN INPUT    '                                   00208057
MSGIERLN EQU   L'MSGIER                                                 00216057
         EJECT                                                          00224057
*---------------------------------------------------------------------* 00232057
*ERASE/WRITE COMMAND SEQUENCE                                         * 00250057
*---------------------------------------------------------------------* 00258057
ERSWRT   DC    XL1'27'              ESCAPE CHARACTER                    00266057
         DC    XL1'F5'              ERASE/WRITE COMMAND                 00274057
ERSWRTLN EQU   *-ERSWRT             COMMAND SEQUENCE LENGTH             00282057
         SPACE 2                                                        00300057
*---------------------------------------------------------------------* 00308057
*THE INITIAL COMMAND/ORDER STRING FOR EACH WRITE                      * 00316057
*---------------------------------------------------------------------* 00324057
         SPACE                                                          00332057
ESCWRITE BLSRWCC                                                        00350057
         BLSRSBA 24,80              'FULL SCREEN' INTERFACE FOR THE     00358057
*                                   SPF TCAM/TSO MCP                    00366057
ESCWRTLN EQU   *-ESCWRITE                                               00374057
         SPACE 2                                                        00382057
*---------------------------------------------------------------------* 00400000
*ORDER SEQUENCE TO ERASE THE ENTIRE SCREEN                            * 00410057
*---------------------------------------------------------------------* 00420057
         SPACE                                                          00430057
ERASEALL BLSRSBA 1,1                LINE 1, COLUMN 1                    00440057
         BLSRRA 1,1,0                                                   00450057
ERASELEN EQU    *-ERASEALL                                              00458057
         SPACE 2                                                        00466057
*---------------------------------------------------------------------* 00474057
*SCREEN FORMATTING SEQUENCE                                           * 00482057
*---------------------------------------------------------------------* 00500000
         SPACE                                                          00510057
RWL1ORDS BLSRSBA 1,1              LINE 1                                00520057
         BLSRSF ,                  FIRST CURSOR POSITION                00530057
         DC    C'3END '                                                 00540057
         BLSRSF ,                  SECOND CURSOR POSITION               00550057
         DC    C'7<-SCROLL+>8 '                                         00558057
         BLSRSF ,                  THIRD CURSOR POSITION                00566057
         DC    C'9STACK '                                               00574057
         BLSRSF ,                  FOURTH CURSOR POSITION               00582057
         DC    C'10<-SKIP+>11'                                          00600057
         BLSRSF (PROT,INTENDET,NUM) MESSAGE AREA                        00608057
         BLSRRA 2,1,0              CLEAR OUT MESSAGE AREA               00616057
RWL1ORLN EQU   *-RWL1ORDS                                               00624057
         SPACE                                                          00632057
R2T4ORDS BLSRSBA 2,1              LINE 2                                00650057
         BLSRSF PROT                                                    00658057
         DC    C'SK'                                                    00666057
         BLSRSF ,                  UNPROTECTED FOR USE OF PT ORDERS     00674057
         BLSRSBA 2,11              SECOND STACK ENTRY                   00682057
         BLSRSF                                                         00700057
         BLSRSBA 2,18              THIRD STACK ENTRY                    00708057
         BLSRSF                                                         00716057
         BLSRSBA 2,25              FOURTH STACK ENTRY                   00724057
         BLSRSF                                                         00732057
         BLSRSBA 2,32              FIFTH STACK ENTRY                    00750057
         BLSRSF                                                         00758057
         BLSRSBA 2,39              SIXTH STACK ENTRY                    00766057
         BLSRSF                                                         00774057
         BLSRSBA 2,46              SEVENTH STACK ENTRY                  00782057
         BLSRSF                                                         00800057
         BLSRSBA 2,53              EIGHTH STACK ENTRY                   00808057
         BLSRSF                                                         00816057
         BLSRSBA 2,60              NINTH STACK ENTRY                    00824057
         BLSRSF                                                         00832057
         BLSRSBA 2,67              TENTH STACK ENTRY                    00850057
         BLSRSF                                                         00858057
         BLSRSBA 2,74              LAST STACK ENTRY FIELD               00866057
         BLSRSF                                                         00874057
         BLSRSBA 3,1              LINE 3                                00882057
         BLSRSF (PROT,NUM)         CAN'T UPDATE LABEL                   00900057
         DC    C'RF'               REFERENCE - WHAT THE STACK ENTS MEAN 00908057
         BLSRSF                                                         00916057
         BLSRSBA 3,11              SECOND NOTE-LIST FIELD               00924057
         BLSRSF                                                         00932057
         BLSRSBA 3,18              THIRD                                00950057
         BLSRSF                                                         00958057
         BLSRSBA 3,25              FOURTH                               00966057
         BLSRSF                                                         00974057
         BLSRSBA 3,32              FIFTH                                00982057
         BLSRSF                                                         01000057
         BLSRSBA 3,39              SIXTH                                01008057
         BLSRSF                                                         01016057
         BLSRSBA 3,46              SEVENTH                              01024057
         BLSRSF                                                         01032057
         BLSRSBA 3,53              EIGTH                                01050057
         BLSRSF                                                         01058057
         BLSRSBA 3,60              NINTH                                01066057
         BLSRSF                                                         01074057
         BLSRSBA 3,67              TENTH                                01082057
         BLSRSF                                                         01100057
         BLSRSBA 3,74              ELEVENTH AND LAST NOTE LIST ENTRY    01108057
         BLSRSF                                                         01116057
R2T4ORLN EQU   *-R2T4ORDS          LENGTH OF ORDERS FOR LINES 2-3       01124057
RWL4ORDS BLSRSBA 4,1              LINE 4                                01132057
         BLSRSF (PROT,NUM)                                              01150057
         DC    C'ADDR'             PROMPT FOR ADDRESS ENTRY             01158057
         BLSRSF                                                         01166057
         BLSRSBA 4,13              PROTECT THE ASID PROMPT FIELD        01174057
         BLSRSF (PROT,NUM)         ''                                   01182057
         DC    C'ASID'             ''                                   01200057
         BLSRSF                                                         01208057
         BLSRSBA 4,23              POSITION TO 'FORMAT' PROMPT FIELD    01216057
         BLSRSF (PROT,NUM)                                              01224057
         DC    C'FMT'              PROMPT FOR 'X' OR 'C' FORMAT         01232057
         BLSRSF                                                         01250057
         DC    C'X'                PAD TO 'AREA' PROMPT FIELD           01258057
         BLSRSF (PROT,NUM)         PROTECT THE PROMPT                   01266057
         DC    C'AREA'             TELL HIM WHAT WE WANT                01274057
         BLSRSF                                                         01282057
         DC    C'A'                PAD TO AREA ALLOCATION PROMPT        01300057
         BLSRSF (PROT,NUM)                                              01308057
         DC    C'LINES/AREA: A'    TELL HIM WHAT WE NOW HAVE            01316057
         BLSRSF                                                         01324057
         DC    C'04'               PAD TO 'B' AREA ALLOCATION           01332057
         BLSRSF (PROT,NUM)         PROTECT THE AREA ID                  01350057
         DC    C'B'                                                     01358057
         BLSRSF                                                         01366057
         DC    C'04'               PAD TO 'C' AREA ALLOCATION           01374057
         BLSRSF (PROT,NUM)         PROTECT THE 'C' AREA ID              01382057
         DC    C'C'                                                     01400057
         BLSRSF                                                         01408057
         DC    C'04'               PAD TO 'D' AREA ALLOCATION           01416057
         BLSRSF (PROT,NUM)         PROTECT THE 'D' AREA ID              01424057
         DC    C'D'                                                     01432057
         BLSRSF                                                         01450057
         DC    C'04'               PAD TO THE 'SKIP' FIELD PROMPT       01458057
         BLSRSF (PROT,NUM)         PROTECT THE PROMPT                   01466057
         DC    C'SKIP'             PROMPT FOR 'SKIP' AMOUNT             01474057
         BLSRSF                                                         01482057
         BLSRSBA 4,80              TERMINATE THE ENTRY AREA             01500057
         BLSRSF (PROT,NUM)                                              01508057
RWL4ORLN EQU   *-RWL4ORDS          LENGTH OF LINE 4 ORDERS              01516057
         SPACE                                                          01524057
RWL5ORDS DC    C' SUBCMND/CLIST:'                                       01532057
         BLSRSF                                                         01550057
         BLSRSBA 5,80              POSITION TO END OF ROW 5             01558057
         BLSRSF PROT               LEST HE WRITE TOO MUCH               01566057
RWL5ORLN EQU   *-RWL5ORDS          LENGTH OF LINE 5 ORDERS              01574057
         SPACE 2                                                        01582057
*---------------------------------------------------------------------* 01600057
*        3277 LITERAL ORDERS                                          * 01608057
*---------------------------------------------------------------------* 01616057
         SPACE                                                          01624057
RW1UMGOR BLSRSBA 1,43             POSITION TO MESSAGE AREA              01632057
RW2SBAOR BLSRSBA 2,5              POSITION TO 1ST STACK ENTRY           01650057
ERASR2OR BLSREUA 3,5              ERASE ALL REMAINING STACK ENTRIES     01658057
RW3SBAOR BLSRSBA 3,5              POSITION TO 1 NOTE LIST ENTRY         01666057
ERASR3OR BLSREUA 4,7              ERASE REMAINING NOTE ENTRIES          01674057
RW4AADOR BLSRSBA 4,6              POSITION TO ADDR ATTRIBUTE FIELD      01682057
RW4UADOR BLSRSBA 4,7              POSITION TO ADDR ENTRY FIELD          01700057
RW4AASOR BLSRSBA 4,18             POSITION TO ASID ATTRIBUTE FIELD      01708057
RW4UASOR BLSRSBA 4,19             POSITION TO ASID ENTRY FIELD          01716057
RW4AFMOR BLSRSBA 4,27             POSITION TO FMT ATTRIBUTE FIELD       01724057
RW4UFMOR BLSRSBA 4,28             POSITION TO FMT ENTRY FIELD           01732057
RW4AAROR BLSRSBA 4,34             POSITION TO WINDOW ATTRIBUTE FIELD    01750057
RW4UAROR BLSRSBA 4,35             POSITION TO WINDOW ENTRY FIELD        01758057
RW4AL1OR BLSRSBA 4,50             POSITION TO AREA A ATTRIBUTE FIELD    01766057
RW4AL2OR BLSRSBA 4,55             -DO NOT MOVE - AREA B ATTRIBUTE FIELD 01774057
RW4AL3OR BLSRSBA 4,60             -DO NOT MOVE - AREA C ATTRIBUTE FIELD 01782057
RW4AL4OR BLSRSBA 4,65             -DO NOT MOVE - AREA D ATTRIBUTE FIELD 01800057
RW4ULNOR BLSRSBA 4,51             POINT TO LINES ENTRY FIELD            01808057
RW4ASPOR BLSRSBA 4,73             POSITION TO SKIP ATTRIBUTE FIELD      01816057
RW4USPOR BLSRSBA 4,74             POINT TO SKIP ENTRY FIELD             01824057
RW5UCMOR BLSRSBA 5,17             POSITION TO SUBCOMMAND ENTRY FIELD    01832057
         SPACE 2                                                        01850057
*---------------------------------------------------------------------* 01858057
*        ORDER SEQUENCE TO ERASE THE REMAINDER OF THE DUMP DISPLAY    * 01866057
*        WINDOWS                                                      * 01874057
*---------------------------------------------------------------------* 01882057
         SPACE                                                          01900057
RW6RAORD BLSRRA 1,1,0             NULLS REST OF SCREEN                  01908057
         SPACE 2                                                        01916057
*---------------------------------------------------------------------* 01924057
*        ORDER SEQUENCE TO ESTABLISH A NORMAL INTENSITY, UNPROTECTED  * 01932057
*        FIELD FOR DUMP DATA DISPLAY                                  * 01950057
*---------------------------------------------------------------------* 01958057
         SPACE                                                          01966057
NORMAREA BLSRSF                                                         01974057
         SPACE 2                                                        01982057
*---------------------------------------------------------------------* 02000057
*        ORDER SEQUENCE TO ESTABLISH A NORMAL INTENSITY, PROTECTED    * 02008057
*        FIELD FOR DUMP DATA DISPLAY                                  * 02016057
*---------------------------------------------------------------------* 02024057
         SPACE                                                          02032057
PROTAREA BLSRSF PROT                                                    02050057
         SPACE 2                                                        02058057
*---------------------------------------------------------------------* 02066057
*        ORDER SEQUENCE TO ESTABLISH AN INTENSIFIED UNPROTECTED       * 02074057
*        FIELD FOR DUMP DATA DISPLAY                                  * 02082057
*---------------------------------------------------------------------* 02100057
INTNSESF BLSRSF INTENDET                                                02108057
         SPACE 2                                                        02116057
*---------------------------------------------------------------------* 02124057
*        MISCELLANEOUS TABLES                                         * 02132057
*---------------------------------------------------------------------* 02150000
         SPACE                                                          02160057
         PRINT DATA                                                     02170057
T3270TAB DC    X'&TR3270'                                               02180057
         DC    0H'0'              ALIGN FOR BUFFER ADDRESS TABLE        02190057
BUFADTAB BLSRROTB 6,24,1                                                02200057
         PRINT NODATA                                                   02208057
         DS    0D                                                       02216057
SBATRTTB DC    256AL1(0)          SKIP PAST ALL CHARS -                 02224057
         ORG   SBATRTTB+ORDERSBA  - EXCEPT THE SET-BUFFER-ADDRESS       02232057
         DC    AL1(255)           - DISPLAY ORDER CODE                  02250057
         ORG                                                            02258057
         SPACE 2                                                        02266057
*---------------------------------------------------------------------* 02274057
*        PATCH AREA ADDRESSABLE FROM ASSEMBLER CODE                   * 02282057
*---------------------------------------------------------------------* 02300057
         SPACE                                                          02310057
BLSRPTCH DC    CL8'ZAPAREA',(((*-BLSR327A+19)/20+7)/8)CL8'BLSR327A'     02320057
./  ADD  SSI=73480179,NAME=BLSR327J
         TITLE 'BLSR3270--BLSR327J--VALIDATE INPUT'                     00000157
*---------------------------------------------------------------------* 00010057
*                                                                     * 00020057
*BLSR327J--VALIDATE INPUT                                             * 00030057
*                                                                     * 00040057
*---------------------------------------------------------------------* 00090057
         SPACE                                                          00140057
BLSR327J LA    R9,3               ACCOUNT FOR AID, ADDR, ADDR           00190057
         LA    R3,LJ000100        RETURN POINT FROM ANALYSIS SUBS       00240057
         ST    R7,SAVER7          WILL NEED THIS LATER                  00290057
         BAL   RE,EA001400        DECOMPOSE CURSOR ADDR INTO ROW/COL    00340057
         CH    R5,=H'0'           IS IT ON ROW ONE?                     00390057
         BNE   LJ000100           -NO, DON'T LOOK ANY FURTHER           00440057
         CH    R4,=H'1'           UNDER 3END                            00490057
         BL    LJ000100           -IF BETWEEN                           00540057
         CH    R4,=H'4'           -COLUMNS 1-4                          00590057
         BNH   LD001500           QUIT                                  00640057
LJ000100 SR    R7,R9              ANY INPUT LEFT?                       00690057
         BNP   LJ001000           -NO, SEE WHAT HAPPENED                00740057
         ALR   RA,R9              TO NEXT DATA FIELD DELIMITER          00790057
         LA    R1,0(RA,R7)        IN CASE TRT GETS CC=0                 00840057
         LR    RF,R7              HOW MUCH THERE IS LEFT                00890057
         BCTR  RF,0               BYPASS 1ST SBA                        00940057
         LR    R5,RA              PUT BUFFER ADDRESS IN SAFE PLACE      00990057
LJ000102 LR    R4,RF              HOW MUCH THERE IS LEFT                01040057
         CH    R4,=H'256'         MORE THAN ONE TRT CAN HANDLE?         01090057
         BNH   LJ000104           -NO, PROCEED                          01140057
         LA    R4,256             -YES, WE WILL HAVE TO LOOP THROUGH    01190057
LJ000104 SR    RF,R4              REMEMBER TO SUBTRACT FROM TOTAL       01240057
         BCTR  R4,0               DOWN ONE FOR EXECUTE                  01290057
         EX    R4,IJ000106        LOOK FOR NEXT SBA ORDER               01340057
         BNZ   LJ000110           IF NON-ZERO, WE FOUND SBA             01390057
         LTR   RF,RF              IS THERE ANYTHING LEFT?               01440057
         BNP   LJ000110           -NO                                   01490057
         LA    R5,256(R5)         CORRECT BUFFER ADDRESS                01540057
         B     LJ000102           KEEP LOOKING                          01590057
IJ000106 TRT   1(0,R5),SBATRTTB   *** SUBJ OF EX, ABOVE                 01640057
         SPACE                                                          01690057
*---------------------------------------------------------------------* 01740057
*        R1 NOW POINTS TO NEXT SBA, OR PAST END OF DATA               * 01790057
*        R2 MAY HAVE BEEN CLOBBERED BY A X'FF'                        * 01840057
*---------------------------------------------------------------------* 01890057
         SPACE                                                          01940057
LJ000110 LR    R9,R1              STOPPING ADDR                         01990057
         SLR   R9,RA              LENGTH THIS FIELD                     02040057
         BAL   RE,EA001400        DECOMPOSE FIELD ADDRESS               02090057
         ALR   R5,R5              DOUBLE ROW ADDR FOR YCON INDEX        02140057
         CH    R5,=H'10'          IN DATA DISPLAY AREA?                 02190057
         BNL   LJ002900           -YES, SEE WHAT IS GOING ON            02240057
         LA    R8,BLSR327B                                              02290057
         AH    R8,YJ000120(R5)    ->ANALYSIS ROUTINE                    02340057
         BR    R8                 GO TO ANALYSIS ROUTINE                02390057
         SPACE                                                          02440057
*---------------------------------------------------------------------* 02490057
*        PROCESSOR VECTOR FOR MANUAL INPUT RECEIVED FROM LINES 1-5    * 02540057
*---------------------------------------------------------------------* 02590057
         SPACE                                                          02640057
YJ000120 DC    Y(LJ002500-BLSR327B) LINE 1--CONSTANTS                   02690057
         DC    Y(LJ002600-BLSR327B) LINE 2--ADDRESS IN STACK            02740057
         DC    Y(LJ002700-BLSR327B) LINE 3--NOTATION IN STACK           02790057
         DC    Y(LJ000150-BLSR327B) LINE 4--INPUT LINE                  02840057
         DC    Y(LJ002800-BLSR327B) LINE 5--SUBCOMMAND                  02890057
         SPACE                                                          02940057
*---------------------------------------------------------------------* 02990057
*        CHANGE TO LINE 4                                             * 03040057
*---------------------------------------------------------------------* 03090057
         SPACE                                                          03140057
LJ000150 IC    R4,AJ000200(R4)    TRANSLATE COLUMN NUM TO INDEX         03190057
         LH    RF,YJ000300(R4)    PICK UP BRANCH INDEX VALUE            03240057
         LA    R8,BLSR327B(RF)    ->ANALYSIS ROUTINE                    03290057
         BR    R8                                                       03340057
         SPACE                                                          03390057
*---------------------------------------------------------------------* 03440057
*        DATA FIELD TRANSLATION VECTOR                                * 03490057
*---------------------------------------------------------------------* 03540057
         SPACE                                                          03590057
AJ000200 DC    6AL1(0)            INVALID                               03640057
         DC    1AL1(2)            ADDRESS FIELD CHANGED                 03690057
         DC    11AL1(0)           INVALID                               03740057
         DC    1AL1(4)            ASID FIELD CHANGED                    03790057
         DC    8AL1(0)            INVALID                               03840057
         DC    1AL1(6)            FORMAT FIELD CHANGED                  03890057
         DC    6AL1(0)            INVALID                               03940057
         DC    1AL1(8)            AREA FIELD CHANGED                    03990057
         DC    15AL1(0)           INVALID                               04040057
         DC    1AL1(10)           WINDOW A ALLOCATION CHANGED           04090057
         DC    4AL1(0)            INVALID                               04140057
         DC    1AL1(12)           WINDOW B ALLOCATION CHANGED           04190057
         DC    4AL1(0)            INVALID                               04240057
         DC    1AL1(14)           WINDOW C ALLOCATION CHANGED           04290057
         DC    4AL1(0)            INVALID                               04340057
         DC    1AL1(16)           WINDOW D ALLOCATION CHANGED           04390057
         DC    7AL1(0)            INVALID                               04440057
         DC    1AL1(18)           SKIP FIELD CHANGED                    04490057
         DC    8AL1(0)            INVALID                               04540057
         SPACE                                                          04590057
*---------------------------------------------------------------------* 04640057
*        PROCESSING VECTOR FOR CHANGES ON LINE 4                      * 04690057
*---------------------------------------------------------------------* 04740057
         SPACE                                                          04790057
YJ000300 DC    Y(LC000200-BLSR327B) PROTECTED CAPTION CHANGED           04840057
         DC    Y(LJ000400-BLSR327B) ADDRESS CHANGED                     04890057
         DC    Y(LJ000500-BLSR327B) ASID CHANGED                        04940057
         DC    Y(LJ000600-BLSR327B) FORMAT CHANGED                      04990057
         DC    Y(LJ000700-BLSR327B) AREA CHANGED                        05040057
         DC    Y(LJ000800-BLSR327B) WINDOW A CHANGED                    05090057
         DC    Y(LJ000800-BLSR327B) WINDOW B CHANGED                    05140057
         DC    Y(LJ000800-BLSR327B) WINDOW C CHANGED                    05190057
         DC    Y(LJ000800-BLSR327B) WINDOW D CHANGED                    05240057
         DC    Y(LJ000900-BLSR327B) SKIP CHANGED                        05290057
         SPACE                                                          05340057
*---------------------------------------------------------------------* 05390057
*        ADDRESS FIELD CHANGED                                        * 05440057
*---------------------------------------------------------------------* 05490057
         SPACE                                                          05540057
LJ000400 OI    FLAG1,FLAG1ADR       MUST REWRITE OLD (OR NEW) DATA      05590057
         BAL   RE,EA003700          CONVERT AND VALIDATE INPUT          05640057
         B     LJ000420             VALIDATION FAILED IN SUBROUTINE     05690057
         MVC   EADDRVAL,PACKDEC+3   SAVE NEW ADDRESS                    05740057
         TM    ERLN4,ERLN4ADR       WAS IT INVALID LAST TIME?           05790057
         BNO   LJ000415             -NO, TURN OFF ERROR INDICATOR       05840057
LJ000410 MVI   EADDRFLG,VREWRITE    REWRITE THIS ATTRIBUTE              05890057
         OI    FLAG0,FLAG0RW4       LINE 4 ORDERS MUST BE REWRITTTEN    05940057
LJ000415 NI    ERLN4,255-ERLN4ADR   HAVE VALID ASID                     05990057
         BR    R3                   PROCESS REMAINING INPUT             06040057
LJ000420 OI    ERLN4,ERLN4ADR       INDICATE ERROR ENCOUNTERED          06090057
         BR    R3                   PROCESS REMAINING INPUT             06140057
         SPACE                                                          06190057
*---------------------------------------------------------------------* 06240057
*        ASID FIELD CHANGED                                           * 06290057
*---------------------------------------------------------------------* 06340057
         SPACE                                                          06390057
LJ000500 OI    FLAG1,FLAG1ASI       MUST REWRITE OLD (OR NEW) DATA      06440057
         BAL   RE,EA003700          CONVERT AND VALIDATE INPUT          06490057
         B     LJ000520             VALIDATION FAILED IN SUBROUTINE     06540057
         LA    R1,VPASPL            BLSRVPAS PARM LIST                  06590057
         L     RF,VPASP             ->BLSRVPAS                          06640057
         BALR  RE,RF                PERFORM MORE SOPHISTICATED CHECK    06690057
         LTR   RF,RF                DID ASID PASS TEST?                 06740057
         BNZ   LJ000520             -NO                                 06790057
         MVC   EASIDVAL,PACKDEC+5   SAVE NEW ASID                       06840057
         TM    ERLN4,ERLN4ASI       WAS IT INVALID LAST TIME?           06890057
         BNO   LJ000515             -NO, TURN OFF ERROR INDICATOR       06940057
LJ000510 MVI   EASIDFLG,VREWRITE    REWRITE THIS ATTRIBUTE              06990057
         OI    FLAG0,FLAG0RW4       LINE 4 ORDERS MUST BE REWRITTEN     07040057
LJ000515 NI    ERLN4,255-ERLN4ASI   HAVE VALID ASID                     07090057
         BR    R3                   PROCESS REMAINING INPUT             07140057
LJ000520 OI    ERLN4,ERLN4ASI       INDICATE ERROR ENCOUNTERED          07190057
         BR    R3                   PROCESS REMAINING INPUT             07240057
         SPACE                                                          07290057
*---------------------------------------------------------------------* 07340057
*        FORMAT FIELD CHANGED                                         * 07390057
*---------------------------------------------------------------------* 07440057
         SPACE                                                          07490057
LJ000600 OI    FLAG1,FLAG1FMT       MUST REWRITE OLD (OR NEW) DATA      07540057
         LR    RF,R9                PUT LENGTH IN SAFE PLACE            07590057
         SH    RF,=H'3'             HOW MUCH DID WE GET?                07640057
         BNP   LJ000620             NOTHING, ERROR                      07690057
         BCT   RF,LJ000620          MORE THAN 1 BYTE, ERROR             07740057
         OI    3(RA),C' '           CONVERT TO UPPER CASE               07790057
         CLI   3(RA),C'C'           CHARACTER FORMAT REQUESTED?         07840057
         BE    LJ000640             -YES                                07890057
         CLI   3(RA),C'X'           HEX FORMAT REQUESTED?               07940057
         BE    LJ000640             -YES                                07990057
LJ000620 OI    ERLN4,ERLN4FMT       INDICATE ERROR ENCOUNTERED          08040057
         BR    R3                   PROCESS REMAINING INPUT             08090057
LJ000640 MVC   EFMTVAL,3(RA)        SAVE FORMAT FIELD                   08140057
         TM    ERLN4,ERLN4FMT       WAS IT INVALID LAST TIME?           08190057
         BNO   LJ000670             -NO, TURN OFF ERROR INDICATOR       08240057
LJ000660 MVI   EFMTFLG,VREWRITE     ATTRIBUTE MUST BE REWRITTEN         08290057
         OI    FLAG0,FLAG0RW4       LINE 4 ORDERS MUST BE REWRITTEN     08340057
LJ000670 NI    ERLN4,255-ERLN4FMT   HAVE VALID FORMAT                   08390057
         BR    R3                   PROCESSING REMAINING INPUT          08440057
         SPACE                                                          08490057
*---------------------------------------------------------------------* 08540057
*        AREA FIELD CHANGED                                           * 08590057
*---------------------------------------------------------------------* 08640057
         SPACE                                                          08690057
LJ000700 OI    FLAG1,FLAG1ARE       MUST REWRITE OLD (OR NEW) DATA      08740057
         LR    RF,R9                SAVE INPUT LENGTH                   08790057
         SH    RF,=H'3'             DID WE GET ANYTHING?                08840057
         BNP   LJ000720             -NO, ERROR                          08890057
         BCT   RF,LJ000720          MORE THAN 1 BYTE, ERROR             08940057
         OI    3(RA),C' '           CONVERT TO UPPER CASE               08990057
         CLI   3(RA),C'A'           CHECK FOR RANGE A-D                 09040057
         BL    LJ000720             TOO LOW                             09090057
         CLI   3(RA),C'D'                                               09140057
         BNH   LJ000740             GOOD                                09190057
LJ000720 OI    ERLN4,ERLN4ARE       INDICATE ERROR ENCOUNTERED          09240057
         BR    R3                   PROCESS REMAINING INPUT             09290057
LJ000740 MVC   EAREAVAL,3(RA)       SAVE AREA VALUE                     09340057
         TM    ERLN4,ERLN4ARE       WAS IT INVALID LAST TIME?           09390057
         BNO   LJ000770             -NO, TURN OFF ERROR INDICATOR       09440057
LJ000760 MVI   EAREAFLG,VREWRITE    REWRITE ATTRIBUTE BYTE              09490057
         OI    FLAG0,FLAG0RW4       REWRITE LINE 4 ORDERS               09540057
LJ000770 NI    ERLN4,255-ERLN4ARE   HAVE VALID AREA                     09590057
         BR    R3                   PROCESS REMAINING INPUT             09640057
         SPACE                                                          09690057
*---------------------------------------------------------------------* 09740057
*        WINDOW FIELD CHANGED                                         * 09790057
*---------------------------------------------------------------------* 09840057
         SPACE                                                          09890057
* R4 HAS INDEX TO YCON TABLE - 10, 12, 14, 16 DEPENDING ON WHICH        09940057
* FIELD WAS MODIFIED                                                    09990057
         SPACE                                                          10040057
LJ000800 OI    FLAG1,FLAG1LIN       MUST REWRITE OLD (OR NEW) DATA      10090057
         SRL   R4,1                 BACK TO BYTE                        10140057
         SH    R4,=H'5'             0 ORIGIN                            10190057
         LA    R5,EWNDSFLG(R4)      -> CURRENT WINDOW FLAG              10240057
         BAL   RE,EA004100          CONVERT AND VALIDATE INPUT          10290057
         B     LJ000840             CONVERSION FAILED                   10340057
         STC   RF,EWNDSVAL(R4)      VALUE RETURNED IN RF                10390057
         TM    0(R5),EPREVERR       WAS IT INVALID LAST TIME?           10440057
         BO    LJ000820             -YES, SET REWRITE INDICATOR         10490057
         MVI   0(R5),0              RESET ERROR INDICATOR               10540057
         BR    R3                   PROCESS REMAINING INPUT             10590057
LJ000820 MVI   0(R5),VREWRITE       REWRITE THIS ATTRIBUTE              10640057
         OI    FLAG0,FLAG0RW4       LINE 4 ORDERS MUST BE REWRITTEN     10690057
         BR    R3                   PROCESS REMAINING INPUT             10740057
LJ000840 MVI   0(R5),EPREVERR       SET INDICATOR FOR NEXT TIME         10790057
         BR    R3                   PROCESS REMAINING INPUT             10840057
         SPACE                                                          10890057
*---------------------------------------------------------------------* 10940057
*        SKIP FIELD CHANGED                                           * 10990057
*---------------------------------------------------------------------* 11040057
         SPACE                                                          11090057
LJ000900 OI    FLAG1,FLAG1SKP       MUST REWRITE OLD (OR NEW) DATA      11140057
         BAL   RE,EA003700          VALIDATE INPUT                      11190057
         B     LJ000940             VALIDATION FAILED                   11240057
         MVC   ESKIPVAL,PACKDEC+3   SAVE NEW SKIP VALUE                 11290057
         TM    ERLN4,ERLN4SKP       WAS IT INVALID LAST TIME?           11340057
         BNO   LJ000930             -NO, TURN OF ERROR INDICATOR        11390057
LJ000920 MVI   ESKIPFLG,VREWRITE    REWRITE THIS ATTRIBUTE              11440057
         OI    FLAG0,FLAG0RW4       LINE 4 ORDERS MUST BE REWRITTEN     11490057
LJ000930 NI    ERLN4,255-ERLN4SKP   HAVE VALID SKIP FIELD               11540057
         BR    R3                   PROCESS REMAINING INPUT             11590057
LJ000940 OI    ERLN4,ERLN4SKP       INDICATE ERROR ENCOUNTERED          11640057
         BR    R3                   PROCESS REMAINING INPUT             11690057
         SPACE                                                          11740057
*---------------------------------------------------------------------* 11790057
*        EXAMINE RESULTS OF INPUT VALIDITY CHECKING                   * 11840057
*---------------------------------------------------------------------* 11890057
         SPACE                                                          11940057
LJ001000 LA    R4,4                 LOOK AT ALL FOUR WINDOWS            11990057
         NI    ERLN4,255-ERLN4WND   START WITH NO ERRORS                12040057
         LA    R5,EWNDSFLG          INITIAL WINDOW FLAG                 12090057
LJ001050 TM    0(R5),EPREVERR       WAS AN ERROR ENCOUNTERED?           12140057
         BNO   LJ001075             -NO, CONTINUE LOOP                  12190057
         OI    ERLN4,ERLN4WND       SET MASTER ERROR FLAG               12240057
LJ001075 LA    R5,1(R5)             -> NEXT WINDOW FLAG                 12290057
         BCT   R4,LJ001050          LOOK AT NEXT WINDOW                 12340057
         SPACE                                                          12390057
         CLI   ERLN4,0              ANY OUTSTANDING ERRORS?             12440057
         BE    LC000320             -NO                                 12490057
         OI    NEWWCC,WCCALARM      BEEP                                12540057
         BAL   R8,LB000020          INITIALIZE TPUT/TGET BUFFER         12590057
         SPACE                                                          12640057
*---------------------------------------------------------------------* 12690057
*        PUT OUT ERROR MESSAGE                                        * 12740057
*---------------------------------------------------------------------* 12790057
         SPACE                                                          12840057
         MVC   0(ORDLNSBA,RA),RW1UMGOR  ORDERS INTO SCREEN BUFFER       12890057
         MVC   ORDLNSBA(MSGIERLN,RA),MSGIER MSG INTO BUFFER             12940057
         LA    RA,ORDLNSBA+MSGIERLN(0,RA) CORRECT BUFFER ADDRESS        12990057
         SPACE                                                          13040057
*---------------------------------------------------------------------* 13090057
*        PUT OUT LINE 4 ORDERS AND DATA                               * 13140057
*---------------------------------------------------------------------* 13190057
         SPACE                                                          13240057
         MVC   0(ORDLNSBA,RA),RW4AADOR SBA FOR ADDR ATTRIB              13290057
         MVC   ORDLNSBA(2,RA),INTNSESF ASSUME INTENSIFY                 13340057
         TM    ERLN4,ERLN4ADR       SHOULD IT HAVE BEEN INTENSIFIED?    13390057
         BO    LJ001100             -YES, UPDATE BUFFER ADDRESS         13440057
         TM    EADDRFLG,VREWRITE    SHOULD IT HAVE BEEN NORMAL?         13490057
         BNO   LJ001200             -NO, SHOULDN'T OUTPUT               13540057
         MVI   EADDRFLG,0           CLEAR FOR NEXT TIME                 13590057
         MVI   ORDLNSBA+1(RA),NORMAL UNINTENSIFY ADDR FIELD             13640057
LJ001100 LA    RA,ORDLNSBA+2(RA)    CORRECT BUFFER ADDRESS              13690057
         SPACE                                                          13740057
LJ001200 MVC   0(ORDLNSBA,RA),RW4AASOR SBA FOR ASID ATTRIB              13790057
         MVC   ORDLNSBA(2,RA),INTNSESF ASSUME INTENSIFY                 13840057
         TM    ERLN4,ERLN4ASI       SHOULD IT HAVE BEEN INTENSIFIED?    13890057
         BO    LJ001300             -YES, UPDATE BUFFER ADDRESS         13940057
         TM    EASIDFLG,VREWRITE    SHOULD IT HAVE BEEN NORMAL?         13990057
         BNO   LJ001400             -NO, SHOULDN'T OUTPUT               14040057
         MVI   EASIDFLG,0           CLEAR FOR NEXT TIME                 14090057
         MVI   ORDLNSBA+1(RA),NORMAL UNINTENSIFY ASID FIELD             14140057
LJ001300 LA    RA,ORDLNSBA+2(RA)    CORRECT BUFFER ADDRESS              14190057
         SPACE                                                          14240057
LJ001400 MVC   0(ORDLNSBA,RA),RW4AFMOR SBA FOR FORMAT ATTRIB            14290057
         MVC   ORDLNSBA(2,RA),INTNSESF ASSUME INTENSIFY                 14340057
         TM    ERLN4,ERLN4FMT       SHOULD IT HAVE BEEN INTENSIFIED?    14390057
         BO    LJ001500             -YES, UPDATE BUFFER ADDRESS         14440057
         TM    EFMTFLG,VREWRITE     SHOULD IT HAVE BEEN NORMAL?         14490057
         BNO   LJ001600             -NO, SHOULD'T OUTPUT                14540057
         MVI   EFMTFLG,0            CLEAR FOR NEXT TIME                 14590057
         MVI   ORDLNSBA+1(RA),NORMAL UNINTENSIFY FORMAT FIELD           14640057
LJ001500 LA    RA,ORDLNSBA+2(RA)    CORRECT BUFFER ADDRESS              14690057
         SPACE                                                          14740057
LJ001600 MVC   0(ORDLNSBA,RA),RW4AAROR SBA FOR AREA FLAG                14790057
         MVC   ORDLNSBA(2,RA),INTNSESF ASSUME INTENSIFY                 14840057
         TM    ERLN4,ERLN4ARE       SHOULD IT HAVE BEEN INTENSIFIED?    14890057
         BO    LJ001700             -YES, UPDATE BUFFER ADDRESS         14940057
         TM    EAREAFLG,VREWRITE    SHOULD IT HAVE BEEN NORMAL?         14990057
         BNO   LJ001800             -NO, SHOULD'T OUTPUT                15040057
         MVI   EAREAFLG,0           CLEAR FOR NEXT TIME                 15090057
         MVI   ORDLNSBA+1(RA),NORMAL UNINTENSIFY AREA FIELD             15140057
LJ001700 LA    RA,ORDLNSBA+2(RA)    CORRECT BUFFER ADDRESS              15190057
         SPACE                                                          15240057
LJ001800 LA    R3,EWNDSFLG          INITIAL INDEX FOR WINDOW LOOP       15290057
         LA    R4,1                 INCREMENT                           15340057
         LA    R5,EWNDSFLG+3        COMPARAND                           15390057
         LA    R8,RW4AL1OR          BEGINNING OF WINDOW ORDERS          15440057
LJ001900 TM    0(R3),VREWRITE+EPREVERR NEED TO REWRITE WINDOW           15490057
         BZ    LJ002100             -NO, CHECK NEXT FIELD               15540057
         MVC   0(ORDLNSBA,RA),0(R8) SBA FOR WINDOW FIELD                15590057
         MVC   ORDLNSBA(2,RA),INTNSESF ASSUME INTENSIFY                 15640057
         TM    0(R3),EPREVERR       SHOULD IT HAVE BEEN?                15690057
         BO    LJ002000             -YES, UPDATE BUFFER ADDRESS         15740057
         MVI   0(R3),0              CLEAR FOR NEXT TIME                 15790057
         MVI   ORDLNSBA+1(RA),NORMAL UNINTENSIFY WINDOW FIELD           15840057
LJ002000 LA    RA,ORDLNSBA+2(RA)    CORRECT BUFFER ADDRESS              15890057
LJ002100 LA    R8,ORDLNSBA(R8)      NEXT WINDOW SBA                     15940057
         BXLE  R3,R4,LJ001900       LOOK AT NEXT WINDOW                 15990057
         SPACE                                                          16040057
         MVC   0(ORDLNSBA,RA),RW4ASPOR SBA FOR SKIP FIELD               16090057
         MVC   ORDLNSBA(2,RA),INTNSESF ASSUME INTENSIFY                 16140057
         TM    ERLN4,ERLN4SKP       SHOULD IT HAVE BEEN INTENSIFIED?    16190057
         BO    LJ002200             -YES, UPDATE BUFFER ADDRESS         16240057
         TM    ESKIPFLG,VREWRITE    SHOULD IT HAVE BEEN NORMAL?         16290057
         BNO   LJ002300             -NO, SHOULDN'T OUTPUT               16340057
         MVI   ESKIPFLG,0           CLEAR FOR NEXT TIME                 16390057
         MVI   ORDLNSBA+1(RA),NORMAL UNINTENSIFY SKIP FIELD             16440057
LJ002200 LA    RA,ORDLNSBA+2(RA)    CORRECT BUFFER ADDRESS              16490057
         SPACE                                                          16540057
*---------------------------------------------------------------------* 16590057
*        OUTPUT FLAGGED INPUT                                         * 16640057
*---------------------------------------------------------------------* 16690057
         SPACE                                                          16740057
LJ002300 LA    R8,LA000700          TPUT RETURN ADDRESS                 16790057
         MVC   0(4,RA),WKACORDS     ADD AN INSERT CURSOR ORDER          16840057
         LA    RA,4(0,RA)           CORRECT BUFFER ADDRESS              16890057
         B     LA000500             OUTPUT BUFFER                       16940057
         SPACE                                                          16990057
*---------------------------------------------------------------------* 17040057
*        LINE 1 SHOULD NOT BE MODIFIED - SEE WHAT HAPPENED            * 17090057
*---------------------------------------------------------------------* 17140057
         SPACE                                                          17190057
LJ002500 IC    R4,AJ002510(R4)      TRANSLATE COLUMN NUMBER TO INDEX    17240057
         LH    RF,YJ002520(R4)      PICK UP BRANCH INDEX VALUE          17290057
         LA    R8,BLSR327B(RF)      ->ANALYSIS ROUTINE                  17340057
         BR    R8                   GO TO ANALYSIS ROUTINE              17390057
         SPACE                                                          17440057
*---------------------------------------------------------------------* 17490057
*        DATA FIELD TRANSLATION VECTOR FOR LINE 1                     * 17540057
*---------------------------------------------------------------------* 17590057
         SPACE                                                          17640057
AJ002510 DC    1AL1(0)              ATTRIBUTE - ERROR                   17690057
         DC    1AL1(2)              3END - RESEND                       17740057
         DC    5AL1(0)              ATTRIBUTE - ERROR                   17790057
         DC    1AL1(2)              7<-SCROLL+>8 - RESEND               17840057
         DC    13AL1(0)             ATTRIBUTE - ERROR                   17890057
         DC    1AL1(2)              9STACK - RESEND                     17940057
         DC    7AL1(0)              ATTRIBUTE - ERROR                   17990057
         DC    1AL1(2)              10<-SKIP+>11 - RESEND               18040057
         DC    50AL1(0)             ATTRIBUTE OR MESSAGE - ERROR        18090057
         SPACE                                                          18140057
*---------------------------------------------------------------------* 18190057
*        PROCESSOR VECTOR FOR CHANGES TO FIELDS ON LINE 1             * 18240057
*---------------------------------------------------------------------* 18290057
         SPACE                                                          18340057
YJ002520 DC    Y(LC000200-BLSR327B) PROTECTED FIELD CHANGED - BAD       18390057
         DC    Y(LJ002550-BLSR327B) CONSTANTS FIELD CHANGED - RESEND    18440057
         SPACE                                                          18490057
LJ002550 OI    NEWWCC,WCCALARM      BEEP                                18540057
         BR    R3                                                       18590057
         SPACE                                                          18640057
*---------------------------------------------------------------------* 18690057
*        MODIFICATIONS TO LINE 2 - ADDRESS STACK                      * 18740057
*---------------------------------------------------------------------* 18790057
         SPACE                                                          18840057
LJ002600 SH    R4,=H'3'            BYPASS THE FIRST FIELD               18890057
         BNP   LC000200            PROTECTED FIELD CHANGED - BAD        18940057
         SRDA  R4,32               PREPARE FOR DIVISION                 18990057
         D     R4,=F'7'            REMAINDER SHOULD BE ONE              19040057
         BCT   R4,LC000200         PROTECTED FIELD CHANGED - BAD        19090057
         OI    FLAG0,FLAG0RW2      MUST RESURRECT THE PREVIOUS DATA     19140057
         B     LJ002550            GO BEEP                              19190057
         SPACE                                                          19240057
*---------------------------------------------------------------------* 19290057
*        MODIFICATIONS TO LINE 3 - STACK NOTATION                     * 19340057
*---------------------------------------------------------------------* 19390057
         SPACE                                                          19440057
LJ002700 SH    R4,=H'3'             BYPASS THE FIRST FIELD              19490057
         BNP   LC000200             PROTECTED FIELD CHANGED - BAD       19540057
         SRDA  R4,32                PREPARE FOR DIVISION                19590057
         D     R4,=F'7'             REMAINDER SHOULD BE ONE             19640057
         BCT   R4,LC000200          PROTECTED FIELD CHANGED - BAD       19690057
         LA    RF,L'WKANB1          LENGTH OF A NOTES ENTRY             19740057
         SLR   R4,R4                CLEAR R4 FOR MULTIPLY               19790057
         MR    R4,RF                COMPUTE DISPLACEMENT TO ENTRY       19840057
         LA    R5,SAVSTK(R5)        COMPUTE ADDRESS OF NOTES ENTRY      19890057
         LR    RF,R9                PUT LENGTH IN SAFE PLACE            19940057
         SH    RF,=H'3'             GET PAST SBA                        19990057
         BP    LJ002720             HE MAY HAVE JUST NULLED FIELD       20040057
         MVI   0(R5),NULVALUE       INDICATE NULLS                      20090057
         BR    R3                   PROCESS REMAINING INPUT             20140057
LJ002720 MVI   0(R5),C' '           INITIALIZE TO                       20190057
         MVC   1(L'WKANB1-1,R5),0(R5) BLANKS                            20240057
         BCTR  RF,R0                DOWN ONE FOR EXECUTE                20290057
         EX    RF,IJ002750          MOVE FROM BUFFER TO SAVE AREA       20340057
         BR    R3                   PROCESS REMAINING INPUT             20390057
IJ002750 MVC   0(0,R5),3(RA)        *** SUBJ OF EX, ABOVE               20440057
         SPACE                                                          20490057
*---------------------------------------------------------------------* 20540057
*        MODIFICATIONS TO LINE 5 - SUBCOMMAND                         * 20590057
*---------------------------------------------------------------------* 20640057
         SPACE                                                          20690057
LJ002800 CH    R4,=H'16'            PROTECTED FIELD BELOW THIS          20740057
         BL    LC000200             BAD                                 20790057
         LR    RF,R9                PUT LENGTH IN SAFE PLACE IT         20840057
         SH    RF,=H'3'             GET PAST SBA                        20890057
         BP    LJ002850             HE MAY HAVE JUST NULLED FIELD       20940057
         MVI   SAVSBCMD,NULVALUE    INDICATE NULLS                      20990057
         BR    R3                   PROCESS REMAINING INPUT             21040057
LJ002850 MVI   SAVSBCMD,C' '        INITIALIZE TO                       21090057
         MVC   SAVSBCMD+1(65),SAVSBCMD BLANKS                           21140057
         LA    R5,SAVSBCMD          -> SAVSBCMD                         21190057
         BCTR  RF,R0                DOWN ONE FOR EXECUTE                21240057
         EX    RF,IJ002750          MOVE FROM BUFFER TO SAVE AREA       21290057
         BR    R3                   PROCESS REMAINING INPUT             21340057
         SPACE                                                          21390057
*---------------------------------------------------------------------* 21440057
*        MODIFICATIONS TO LINES 6-24 - DUMP DISPLAY AREA              * 21490057
*---------------------------------------------------------------------* 21540057
         SPACE                                                          21590057
LJ002900 SH    R5,=H'10'            ORIGIN LINE NUMBER AT ZERO          21640057
         SRL   R5,1                 GO BACK TO BYTE INDEX               21690057
         LA    RF,WKALNCTL          INDEX TO                            21740057
         AR    RF,R5                -PROPER LINE                        21790057
         SLR   R8,R8                START WITH ZERO                     21840057
         IC    R8,WKALNCTL(R5)      VECTOR INTO AREA TABLE              21890057
         BCTR  R8,0                 FORM ZERO ORIGIN INDEX              21940057
         SLL   R8,2                 *(2**2)=4                           21990057
         LA    R8,WKAVCTA(R8)       PROPER CONTROL WORD FOR THIS AREA   22040057
         LTR   R4,R4                ONLY VALID MODIFICATIONS ARE        22090057
         BNP   LC000200             -BEYOND COLUMN 1                    22140057
         CLI   34(R8),C'C'          IS IT CHARACTER FORMATTING?         22190057
         BNE   LJ002950             -NO, PERFORM CHECK FOR HEX          22240057
         OI    0(RF),WKALNCTW       LINE MUST BE REWRITTEN              22290057
         BR    R3                   PROCESS REMAINING INPUT             22340057
         SPACE                                                          22390057
LJ002950 SH    R4,=H'8'             GET BY ADDRESS FIELD                22440057
         BP    LJ002960             ADDRESS FIELD WAS NOT MODIFIED      22490057
         OI    0(RF),WKALNCTW       LINE MUST BE REWRITTEN              22540057
         BR    R3                   PROCESS REMAINING INPUT             22590057
LJ002960 SRDA  R4,32                PREPARE FOR DIVISION                22640057
         D     R4,=F'9'             EACH DATA FIELD IS #CCCCCCCC        22690057
         BCT   R4,LC000200          REMAINDER SHOULD BE ONE, ELSE ERR   22740057
         OI    0(RF),WKALNCTW       LINE MUST BE REWRITTEN              22790057
         BR    R3                   PROCESS REMAINING INPUT             22840057
         SPACE                                                          22890057
./  ADD  SSI=80220076,NAME=BLSR327M
         TITLE 'BLSR3270--BLSR327M--MACRO VARIABLES'                    00050000
*---------------------------------------------------------------------* 00100000
*THIS GLOBAL SET VARIABLE IS USED TO CONVERT FROM BINARY TO           * 00150000
*THE EBCDIC REPRESENTATION OF THE SIX-BIT 3270 CODE. IT               * 00200000
*FACILITATES USING ROW-COLUMN ADDRESSING IN THE SCREEN ORDER          * 00250000
*GENERATING MACROS.                                                   * 00300000
*---------------------------------------------------------------------* 00350000
         SPACE                                                          00400000
         GBLC  &TR3270                                                  00450000
&TR3270  SETC '40C1C2C3C4C5C6C7C8C94A4B4C4D4E4F50D1D2D3D4D5D6D7D8D95A5B500500000
               5C5D5E5F6061E2E3E4E5E6E7E8E96A6B6C6D6E6FF0F1F2F3F4F5F6F7F00550000
               F8F97A7B7C7D7E7F'                                        00600000
         SPACE 2                                                        00650000
./  ADD  SSI=80220079,NAME=BLSR327P
         TITLE 'BLSR3270--BLSR327P--SYMBOLIC VALUES AND DSECTS'         00050000
*---------------------------------------------------------------------* 00100000
*                                                                     * 00150000
*BLSR3270--SYMBOLIC VALUES AND DSECTS                                 * 00200000
*                                                                     * 00250000
*---------------------------------------------------------------------* 00300000
         SPACE 2                                                        00350000
*---------------------------------------------------------------------* 00400000
*3270 DISPLAY ATTENTION IDENTIFIERS                                   * 00450000
*---------------------------------------------------------------------* 00500000
         SPACE                                                          00550000
AIDENTER EQU   C''''              ENTER KEY                             00600000
AIDCLEAR EQU   C'_'               CLEAR KEY                             00650000
AIDIGNOR EQU   49                 IGNORE ALL LESS THAN X'31'            00700000
         SPACE 2                                                        00750000
*---------------------------------------------------------------------* 00800000
*3270 DISPLAY ORDER CODES                                             * 00850000
*---------------------------------------------------------------------* 00900000
         SPACE                                                          00950000
ORDERPT  EQU   5                  PROGRAM TAB TO NEXT UNPROT FIELD      01000000
ORDERSBA EQU   17                 SET DISPLAY BUFFER ADDRESS            01050000
ORDEREUA EQU   18                 ERASE UNPROTECTED TO ADDRESS          01100000
ORDERIC  EQU   19                 INSERT CURSOR                         01150000
ORDERSF  EQU   29                 START DISPLAY FIELD                   01200000
ORDERRA  EQU   60                 REPEAT NEXT BYTE TO ADDRESS           01250000
         SPACE 2                                                        01300000
*---------------------------------------------------------------------* 01350000
*LENGTHS FOR 3270 ORDER SEQUENCES                                       01400000
*---------------------------------------------------------------------* 01450000
         SPACE                                                          01500000
ORDLNRA  EQU   4                  ORDER, ADDR, ADDR, BYTE               01550000
ORDLNSBA EQU   3                  ORDER, ADDR, ADDR                     01600000
ORDLNEUA EQU   3                  ORDER, ADDR, ADDR                     01650000
         SPACE 2                                                        01700000
*---------------------------------------------------------------------* 01750000
*3270 DISPLAY REMOTE COMMAND CODES                                    * 01800000
*---------------------------------------------------------------------* 01850000
         SPACE                                                          01900000
RCCWRITE EQU   C'1'               NORMAL 3270 WRITE COMMAND CODE        01950000
RCCEW    EQU   C'5'               3270 ERASE-WRITE COMMAND CODE         02000000
         SPACE 2                                                        02050000
*---------------------------------------------------------------------* 02100000
*3270 DISPLAY WRITE CONTROL CHARACTER BITS                            * 02150000
*---------------------------------------------------------------------* 02200000
         SPACE                                                          02250000
         IEZBITS                                                        02300000
WCCALARM EQU   BIT5               SOUND AUDIBLE ALARM                   02350000
WCCRESTR EQU   BIT6               UNLOCK THE KEYBOARD                   02400000
WCCRSMDT EQU   BIT7               RESET MODIFIED-DATA TAGS              02450000
         SPACE 2                                                        02500000
*---------------------------------------------------------------------* 02550000
*ATTRIBUTE BYTES FOR 3270 FIELDS                                      * 02600000
*---------------------------------------------------------------------* 02650000
         SPACE                                                          02700000
         LCLC  &BYTE               FOR OWN GENERATION OF 3270 VALUES    02750000
&BYTE    SETC  '&TR3270'(1+(2*(8)),2)  INTENSIFIED                      02800000
INTENSE  EQU   X'&BYTE'                                                 02850000
         SPACE                                                          02900000
&BYTE    SETC  '&TR3270'(1+(2*(0)),2) NORMAL                            02950000
NORMAL   EQU   X'&BYTE'                                                 03000000
         SPACE 2                                                        03050000
*---------------------------------------------------------------------* 03100000
*LIST SOURCE DESCRIPTOR FOR I/O SERVICE ROUTINES. GOTTEN IN SP 78     * 03150000
*---------------------------------------------------------------------* 03200000
         SPACE                                                          03250000
         IKJLSD                                                         03300000
LSD      DSECT                                                          03350000
         ORG                                                            03400000
LSDVREC  DS    H                  LENGTH OF THIS SEGMENT                03450000
         DS    H                  LITTLE LL - SET TO ZEROS              03500000
LSDVRECT DS    0C                 START OF TEXT                         03550000
LSDLEN   EQU   *-LSD              LENGTH OF LIST SOURCE DESCRIPTOR      03600000
./  ADD  SSI=80220080,NAME=BLSR327W
*---------------------------------------------------------------------* 00050000
*                                                                     * 00100000
*BLSR327W--BLSR3270 CONTROL AREA                                      * 00150000
*                                                                     * 00200000
*---------------------------------------------------------------------* 00250000
         SPACE                                                          00300000
         IEZBITS                                                        00350000
WKAORG   DS    0F                 ORIGIN OF WORK AREA                   00400000
         DC    CL8'BLSR327W'      IDENTIFIER                            00450000
         DC    A(0)                                                     00500000
         DC    A(0)                                                     00550000
         SPACE 2                                                        00600000
*---------------------------------------------------------------------* 00650000
*        11-ENTRY ADDRESS STACK                                       * 00700000
*---------------------------------------------------------------------* 00750000
         SPACE                                                          00800000
WKASTACK DC    11A(0)             ADDRESS LIST                          00850000
WKASKDEL EQU   BIT0               PURGE THIS ENTRY FROM STACK           00900000
WKANB1   DC    0CL6'CVT...'       'REAL' SIZE OF A NOTE LIST ENTRY      00950000
WKANOTES DC    CL8'CVT',10CL8' '  NOTE LIST                             01000000
WKASKASI DC    11Y(1)             ASID LIST                             01050000
         SPACE 2                                                        01100000
*---------------------------------------------------------------------* 01150000
*        STACK MANAGEMENT COUNTERS                                    * 01200000
*---------------------------------------------------------------------* 01250000
         SPACE                                                          01300000
WKASKNUM DC    FL1'1'             ONE INITIAL ADDRESS ENTRY--THE CVT    01350000
WKANBNUM DC    FL1'1'             ONE INITIAL NOTE ENTRY--'CVT'         01400000
         SPACE 2                                                        01450000
*---------------------------------------------------------------------* 01500000
*        CURRENT ENTRY LINE VALUES                                    * 01550000
*---------------------------------------------------------------------* 01600000
         SPACE                                                          01650000
WKAADDR  DS    0A                 CURRENT ADDRESS                       01700000
         DC    AL1(WKAADRLL),AL3(0) NEEDN'T STACK ZERO ON INIT REQ      01750000
WKAADRLL EQU   BIT1               DO NOT STACK IMPLICITLY               01800000
WKAASID  DC    Y(1)               MVS ASID                              01850000
WKAFMT   DC    C'X'               HEXADECIMAL DISPLAY FORMATTING        01900000
WKAAREA  DC    C'A'               START IN FIRST DISPLAY WINDOW         01950000
WKALINES DC    AL1(19,0,0,0)      ALL LINES IN WINDOW A                 02000000
WKASKIP  DC    A(512)             START SKIP VALUE = 800 BYTES          02050000
         SPACE 2                                                        02100000
*---------------------------------------------------------------------* 02150000
*        THE VECTOR THAT DEFINES CURRENT USAGE OF LINES 6-24 IT       * 02200000
*        INDICATES WHAT WINDOW A GIVEN ROW LOGICALLY BELONGS TO. THE  * 02250000
*        HIGH ORDER BIT IN EACH BYTE INDICATES THAT THE ROW MUST BE   * 02300000
*        RE-WRITTEN.                                                  * 02350000
*---------------------------------------------------------------------* 02400000
         SPACE                                                          02450000
WKALNCTL DS    0XL19              NINETEEN ROWS BELOW HEADER LINES      02500000
         DC    19XL1'01'          NINETEEN ROWS IN WINDOW A             02550000
         DC    0X'02'             NO ROWS IN WINDOW B                   02600000
         DC    0X'03'             NO ROWS IN WINDOW C                   02650000
         DC    0X'04'             NO ROWS IN WINDOW D                   02700000
         DC    0X'00'             NO UNUSED ROWS                        02750000
WKALNCTW EQU   BIT0               MUST WRITE THIS LINE                  02800000
         DC    BL1'00000011'                                            02850000
         SPACE 2                                                        02900000
*---------------------------------------------------------------------* 02950000
*        WINDOW CONTROL ARRAYS                                        * 03000000
*---------------------------------------------------------------------* 03050000
         SPACE                                                          03100000
WKALNCTV DC    A(0,20,20,20)      INDEX VALUES INTO WKALNCTL FOR        03150000
*                                 WINDOWS A,B,C, AND D                  03200000
WKAVCTA  DC    4A(0)              START ADDRESSES                       03250000
WKAVCTB  DC    4A(0)              CURRENT LINE START ADDRESSES          03300000
WKAVCTC  DC    4A(WKAVCTAI)       EACH WINDOW INITIALLY INVALID         03350000
WKAVASI  EQU   WKAVCTC,2,C'H'     ASID'S                                03400000
WKAVFMT  EQU   WKAVCTC+2,1,C'C'   FORMATS                               03450000
WKAVFLAG EQU   WKAVCTC+3,1,C'B'   FLAGS                                 03500000
WKAVCTAI EQU   BIT0               SCREEN WINDOW NOT YET USED            03550000
         DC    A(0)                                                     03600000
         DC    Y(0)                                                     03650000
         DC    C'X'                                                     03700000
         DC    C'A'                                                     03750000
         DC    AL1(19,0,0,0)                                            03800000
         SPACE 2                                                        03850000
*---------------------------------------------------------------------* 03900000
*        SCRATCH-PAD FOR THE FORMAT ROUTINES                          * 03950000
*---------------------------------------------------------------------* 04000000
         SPACE                                                          04050000
         DC    D'0'                                                     04100000
         DC    A(0)                                                     04150000
         DC    A(0)                                                     04200000
WKACRPOS DC    2A(0)              ROW/COLUMN ADDRESS OF CURSOR          04250000
WKAAIDNX DC    Y(0)               INDEX INTO AID PROCESSOR YCON TABS    04300000
WKACORDS DC    X'11C55013'        INSERT CURSOR                         04350000
         DC    X'0000'                                                  04400000
         SPACE 2                                                        04450000
*---------------------------------------------------------------------* 04500000
*        SUBCOMMAND DATA                                              * 04550000
*---------------------------------------------------------------------* 04600000
         SPACE                                                          04650000
WKABLSRC DC    CL79'LAST SUBCOMMAND ENTERED UNDER DSPL3270'             04700000
WKABLSRN DC    AL1(0)             AMOUNT OF DATA VALID IN BLSRC FIELD   04750000
WKALENG  EQU   *-WKAORG           LENGTH OF THIS WORKAREA               04800000
./  ADD  SSI=73530018,NAME=BLSR327X
         TITLE 'BLSR3270--BLSR327X--ASSEMBLER AUTOMATIC STORAGE'        00010057
@DATD    DSECT                                                          00020057
STPB     STACK MF=L               IKJSTCK PARAMETER BLOCK               00030057
STPBALSD EQU   STPB+4                                                   00040057
         SPACE 2                                                        00050057
*---------------------------------------------------------------------* 00058057
*        FLAG BYTE 0                                                  * 00066057
*---------------------------------------------------------------------* 00074057
         SPACE                                                          00082057
FLAG0    DS    BL1                FLAG BYTE 0                           00100057
FLAG0SUS EQU   BIT0               SUSPENDING THE SESSION                00108057
FLAG0POK EQU   BIT1               SCREEN BUFFER IN SYNCH WITH           00116057
*                                 DUMP DATA LINE NUMBER                 00124057
FLAG0NUL EQU   BIT2               NULL SCREEN TO NEXT LINE              00132057
FLAG0FMT EQU   BIT3               SCREEN FORMATTING REQUIRED            00150057
FLAG0RW2 EQU   BIT4               RE-WRITE THE ADDRESS STACK            00158057
FLAG0RW3 EQU   BIT5               RE-WRITE THE NOTE LIST                00166057
FLAG0PRG EQU   BIT6               COMPRESS THE ADDRESS STACK            00174057
FLAG0RW4 EQU   BIT7               RE-WRITE LINE 4 ORDERS                00182057
         SPACE 2                                                        00200057
*---------------------------------------------------------------------* 00208057
*        FLAG BYTE 1                                                  * 00216057
*---------------------------------------------------------------------* 00224057
         SPACE                                                          00232057
FLAG1    DS    BL1                FLAG BYTE 1                           00250057
FLAG1ADR EQU   BIT0               RESEND THE ADDRESS FIELD              00258057
FLAG1ASI EQU   BIT1               RESEND THE ASID FIELD                 00266057
FLAG1FMT EQU   BIT2               RESEND THE CURRENT FORMAT             00274057
FLAG1ARE EQU   BIT3               RESEND THE CURRENT WINDOW NAME        00282057
FLAG1LIN EQU   BIT4               RESEND WINDOW ALLOCATIONS             00300057
FLAG1SKP EQU   BIT5               RESEND SKIP VALUE                     00308057
FLAG1BLA EQU   BIT6               CAN'T ACCEPT MANUAL ADDR ENTRY        00316057
FLAG1RLL EQU   BIT7               DO NOT STACK NEW ADDRESS IMPLICITLY   00324057
         SPACE 2                                                        00332057
*---------------------------------------------------------------------* 00350057
*        FLAG BYTE 2                                                  * 00358057
*---------------------------------------------------------------------* 00366057
         SPACE                                                          00374057
FLAG2    DS    BL1                FLAG BYTE 2                           00382057
FLAG2STK EQU   BIT0               REMEMBER TO PUT OUT STACK FULL MSG    00400057
         SPACE 2                                                        00408057
*---------------------------------------------------------------------* 00416057
*        INDICATOR OF SCREEN POSITION                                 * 00424057
*---------------------------------------------------------------------* 00432057
         SPACE                                                          00450000
SCRPO    DS    XL1                INDICATOR OF SCREEN POSITION          00460057
SCRPOAD1 EQU   1                  TABBED TO START OF ADDR               00470057
SCRPOAD9 EQU   2                  FILLED IN ADDR FIELD                  00480057
SCRPOAS9 EQU   3                  FILLED IN ASID FIELD                  00490057
SCRPOFM9 EQU   4                  FILLED IN FORMAT FIELD                00500057
SCRPOWI9 EQU   5                  FILLED IN WINDOW FIELD                00508057
SCRPOER3 EQU   6                  EUA, 3, 80                            00516057
SCRPOPT9 EQU   7                  TABBED TO END OF LINES                00524057
         SPACE 2                                                        00532057
         DS    0F                                                       00550057
SAVER0RF DS    BL64               ASSEMBLER CODE SAVE AREA              00558057
         ORG  *-4                                                       00566057
SAVERF   DS    BL4                RF USED TO CONTAIN RETURN CODE        00574057
         SPACE 2                                                        00582057
SAVER7   DS    F                  SAVE R7 VALUE                         00600057
SAVELATR DS    BL1                SAVE DATA LINE ATTRIBUTE              00608057
         SPACE 2                                                        00616057
PHSY     DS    0D                 WORK AREA HISTORY RECORD              00624057
         ORG   PHSY+48            POSITION TO TEXT PORTION              00632057
         COPY  BLSR327W           LOCAL COPY OF WORK AREA               00650057
         SPACE 2                                                        00658057
*---------------------------------------------------------------------* 00666057
*        ERROR CHECKING WORK AREA                                     * 00674057
*---------------------------------------------------------------------* 00682057
         SPACE                                                          00700057
ERLN4    DS    CL1                LINE 4 FIELDS ERROR STATUS            00708057
ERLN4ADR EQU   BIT0               - ADDRESS FIELD INVALID               00716057
ERLN4ASI EQU   BIT1               - ASID FIELD INVALID                  00724057
ERLN4FMT EQU   BIT2               - FORMAT FIELD INVALID                00732057
ERLN4ARE EQU   BIT3               - AREA FIELD INVALID                  00750057
ERLN4WND EQU   BIT4               - WINDOW FIELD(S) INVALID             00758057
ERLN4SKP EQU   BIT5               - SKIP FIELD INVALID                  00766057
         SPACE                                                          00774057
EADDRFLG DS    CL1                ADDRESS FIELD REWRITE FLAG            00782057
VREWRITE EQU   BIT0               - UNINTENSIFY                         00800057
EPREVERR EQU   BIT1               - INVALID LAST TIME                   00808057
EASIDFLG DS    CL1                ASID FIELD REWRITE FLAG               00816057
EFMTFLG  DS    CL1                FORMAT FIELD REWRITE FLAG             00824057
EAREAFLG DS    CL1                AREA FIELD REWRITE FLAG               00832057
EWNDSFLG DS    CL4                WINDOW FIELDS REWRITE FLAG            00850057
ESKIPFLG DS    CL1                SKIP FIELD REWRITE FLAG               00858057
LN4FLGLN EQU   *-EADDRFLG         LENGTH OF LINE 4 FLAGS                00866057
         SPACE                                                          00874057
EADDRVAL DS    CL4                                                      00882057
EASIDVAL DS    CL2                                                      00900057
EFMTVAL  DS    CL1                                                      00908057
EAREAVAL DS    CL1                                                      00916057
EWNDSVAL DS    CL4                                                      00924057
ESKIPVAL DS    CL4                                                      00932057
LN4VALLN EQU   *-EADDRVAL         LENGTH OF LINE 4 VALUES               00950057
         SPACE                                                          00958057
SAVSTK   DS    11CL6              SAVE NOTES MODIFICATIONS              00966057
NULVALUE EQU   X'FF'              FIELD HAS BEEN NULLED                 00974057
SAVSTKLN EQU   *-SAVSTK                                                 00982057
SAVSBCMD DS    CL66               SAVE SUBCOMMAND ENTRY                 01000057
         SPACE 2                                                        01008057
*---------------------------------------------------------------------* 01016057
*        3270 BUFFER - MUST BE AT END OF AUTOMATIC STORAGE            * 01024057
*---------------------------------------------------------------------* 01032057
         SPACE                                                          01050057
SCRNBUFR DS    CL2560                                                   01060057
./  ADD  SSI=80220138,NAME=BLSUALLR
         MACRO                                                          00050000
&LABEL   BLSUALLR &OPTION,&LV=                                          00100000
.********************************************************************** 00150000
.*BLSU MACRO TO SUBSTITUTE FOR GETMAIN IN THOSE BLSU MODULES WHICH ARE* 00200000
.*PASSED A BLSU TASK VARIABLE ADDRESS IN REGISTER 1.  THIS MACRO      * 00250000
.*GENERATES A CALL TO BLSUALLO WHICH WILL OBTAIN THE REQUIRED STORAGE * 00300000
.*FROM A BLSU POOL MAINTAINED IN SUBPOOL 1.                           * 00350000
.********************************************************************** 00400000
         SPACE 2                                                        00450000
*********************************************************************** 00500000
* BLSUALLR--ALLOCATE AUTOMATIC STORAGE                                * 00550000
*********************************************************************** 00600000
         SPACE                                                          00650000
&LABEL   LR    R9,R1                   ->ZZ2                            00700000
         L     RF,ZZ2ALLOP(0,R9)       ->BLSUALLO                       00750000
         BALR  RE,RF                   CALL BLSUALLO                    00800000
         MEND                                                           00850000
./  ADD  SSI=80220086,NAME=BLSUALLS
         MACRO                                                          00050000
&LABEL   BLSUALLS &OPTION,&LV=                                          00100000
.********************************************************************** 00150000
.*BLSU MACRO TO SUBSTITUTE FOR GETMAIN IN THOSE BLSU MODULES WHICH ARE* 00200000
.*PASSED A BLSU TASK VARIABLE ADDRESS IN AS THE FIRST PARAMETER IN A  * 00250000
.*PARAMETER LIST.  THIS MACRO EXPANDS INTO A CALL TO BLSUALLO WHICH   * 00300000
.*WILL OBTAIN STORAGE FROM A POOL MAINTAINED IN SUBPOOL 1.            * 00350000
.********************************************************************** 00400000
         SPACE 2                                                        00450000
*********************************************************************** 00500000
* BLSUALLS--ALLOCATE AUTOMATIC STORAGE                                * 00550000
*********************************************************************** 00600000
         SPACE                                                          00650000
&LABEL   L     R9,0(0,R1)              ->ZZ2                            00700000
         L     RF,ZZ2ALLOP(0,R9)       ->BLSUALLO                       00750000
         BALR  RE,RF                   CALL BLSUALLO                    00800000
         MEND                                                           00850000
./  ADD  SSI=80220087,NAME=BLSUALL2
         MACRO                                                          00050000
&LABEL   BLSUALL2 &OPTION,&LV=                                          00100000
.********************************************************************** 00150000
.*BLSU MACRO TO SUBSTITUTE FOR GETMAIN IN THOSE BLSU MODULES WHICH ARE* 00200000
.*PASSED A BLSU TASK VARIABLE ADDRESS IN AS THE SECOND PARAMETER IN A * 00250000
.*PARAMETER LIST.  THIS MACRO EXPANDS INTO A CALL TO BLSUALLO WHICH   * 00300000
.*WILL OBTAIN STORAGE FROM A POOL MAINTAINED IN SUBPOOL 1.            * 00350000
.********************************************************************** 00400000
         SPACE 2                                                        00450000
*********************************************************************** 00500000
* BLSUALL2--ALLOCATE AUTOMATIC STORAGE                                * 00550000
*********************************************************************** 00600000
         SPACE                                                          00650000
&LABEL   L     R9,4(0,R1)              ->ZZ2                            00700000
         L     RF,ZZ2ALLOP(0,R9)       ->BLSUALLO                       00750000
         BALR  RE,RF                   CALL BLSUALLO                    00800000
         MEND                                                           00850000
./  ADD  SSI=80220090,NAME=BLSUFRER
         MACRO                                                          00050057
&LABEL   BLSUFRER &OPTION,&LV=,&A=                                      00100057
.********************************************************************** 00150057
.*BLSU MACRO TO SUBSTITUTE FOR FREEMAIN IN THOSE BLSU MODULES WHICH   * 00200057
.*ARE PASSED A BLSU TASK VARIABLE ADDRESS IN REGISTER 1.  THIS MACRO  * 00250057
.*GENERATES A CALL TO BLSUFREE WHICH WILL RETURN THE STORAGE TO A     * 00300057
.*POOL MAINTAINED IN SUBPOOL 1.                                       * 00350057
.********************************************************************** 00400057
         SPACE 2                                                        00450057
*********************************************************************** 00500057
* BLSUFRER--FREE AUTOMATIC STORAGE                                    * 00550057
*********************************************************************** 00600057
         SPACE                                                          00650057
&LABEL   L     R1,SAR1(0,RD)           ->ZZ2                            00700057
         L     RF,ZZ2FRE1P(0,R1)       ->BLSUFRE1                       00750057
         BALR  RE,RF                   CALL BLSUFRE1                    00800057
         MEND                                                           00850057
./  ADD  SSI=80220091,NAME=BLSUFRES
         MACRO                                                          00050057
&LABEL   BLSUFRES &OPTION,&LV=,&A=                                      00100057
.********************************************************************** 00150057
.*BLSU MACRO TO SUBSTITUTE FOR FREEMAIN IN THOSE BLSU MODULES WHICH   * 00200057
.*ARE PASSED A BLSU TASK VARIABLE ADDRESS IN AS THE FIRST PARAMETER   * 00250057
.*IN A PARAMETER LIST.  THIS MACRO EXPANDS INTO A CALL TO BLSUFREE    * 00300057
.*WHICH WILL RETURN THE STORAGE TO A POOL MAINTAINED IN SUBPOOL 1.    * 00350057
.********************************************************************** 00400057
         SPACE 2                                                        00450057
*********************************************************************** 00500057
* BLSUFRES--FREE AUTOMATIC STORAGE                                    * 00550057
*********************************************************************** 00600057
         SPACE                                                          00650057
&LABEL   L     RF,SAR1(0,RD)           ->PARAMETER LIST                 00700057
         L     R1,0(0,RF)              ->ZZ2                            00750057
         L     RF,ZZ2FRE1P(0,R1)       ->BLSUFRE1                       00800057
         BALR  RE,RF                   CALL BLSUFRE1                    00850057
         MEND                                                           00900057
./  ADD  SSI=80220092,NAME=BLSUFRE2
         MACRO                                                          00050057
&LABEL   BLSUFRE2 &OPTION,&LV=,&A=                                      00100057
.********************************************************************** 00150057
.*BLSU MACRO TO SUBSTITUTE FOR FREEMAIN IN THOSE BLSU MODULES WHICH   * 00200057
.*ARE PASSED A BLSU TASK VARIABLE ADDRESS IN AS THE SECOND PARAMETER  * 00250057
.*IN A PARAMETER LIST.  THIS MACRO EXPANDS INTO A CALL TO BLSUFREE    * 00300057
.*WHICH WILL RETURN THE STORAGE TO A POOL MAINTAINED IN SUBPOOL 1.    * 00350057
.********************************************************************** 00400057
         SPACE 2                                                        00450057
*********************************************************************** 00500057
* BLSUFRE2--FREE AUTOMATIC STORAGE                                    * 00550057
*********************************************************************** 00600057
         SPACE                                                          00650057
&LABEL   L     RF,SAR1(0,RD)           ->PARAMETER LIST                 00700057
         L     R1,4(0,RF)              ->ZZ2                            00750057
         L     RF,ZZ2FRE1P(0,R1)       ->BLSUFRE1                       00800057
         BALR  RE,RF                   CALL BLSUFRE1                    00850057
         MEND                                                           00900057
./  ADD  SSI=80220104,NAME=BLSUSTBE
         MACRO                                                          00050000
         BLSUSTBE                                                       00100000
.*-------------------------------------------------------------------.* 00150000
.* BLSUSTBE--TERMINATE A SUBCOMMAND TABLE DEFINITION                 .* 00200000
.*-------------------------------------------------------------------.* 00250000
         GBLA  &GA                                                      00300000
         GBLC  &GP                                                      00350000
&GP.CNT  EQU   &GA                     NUMBER OF SUBCOMMANDS            00400000
*------- END OF SUBCOMMAND TABLE -------------------------------------* 00450000
         MEND                                                           00500000
./  ADD  SSI=80410286,NAME=BLSUSTBN
         MACRO                                                          00005057
         BLSUSTBN &SCMD,&EP=                                            00010057
.*--------------------------------------------------------------------* 00020057
.* BLSUSTBN--DEFINE PROCESSING FOR ONE SUBCOMMAND                     * 00030057
.*--------------------------------------------------------------------* 00040057
         GBLA  &GA                                                      00050057
         GBLC  &GP,&GS                                                  00066057
         LCLA  &A1                                                      00074057
         LCLB  &BDSD,&BDU,&BINV,&BPDR                                   00082057
         LCLC  &CE,&CT                                                  00088057
         AIF   (K'&SCMD GE K'&GS).L01  PRIMARY SORT KEY                 00100057
         MNOTE 8,'SUBCOMMAND NAMES NOT ORDERED BY LENGTH'               00116057
         MEXIT                                                          00124057
.L01     AIF   (K'&SCMD EQ K'&GS).L02  NEW PRIMARY SORT KEY             00132057
&GS      SETC  ' '                     NO CURRENT SUBCOMMAND NAME       00138057
.L02     AIF   ('&SCMD' GE '&GS').L03  SUBCOMMAND NAMES ALPHABETIZED    00150057
         MNOTE 8,'SUBCOMMAND NAMES OF SAME LENGTH ARE NOT ALPABETIZED'  00166057
         MEXIT                                                          00174057
.*------------ PROCESS POSITIONAL KEYWORDS --------------------------*. 00182057
.L03     ANOP                                                           00188057
&GA      SETA  &GA+1                   DIMENSION OF SUBCOMMAND ARRAY    00200057
&GS      SETC  '&SCMD'                 CURRENT SUBCOMMAND NAME          00216057
&A1      SETA  2                       SUBSCRIPT FOR SEARCH             00224057
&CT      SETC  'L'                     IPCS SUBCOMMAND                  00232057
.L04     AIF   (&A1 GT N'&SYSLIST).L13 POSITION OPERANDS SCANNED        00238057
         AIF   ('&SYSLIST(&A1)' NE 'DSD').L05                           00250057
&BDSD    SETB  1                       REQUIRES DATA SET DIRECTORY      00266057
         AGO   .L12                                                     00274057
.L05     AIF   ('&SYSLIST(&A1)' NE 'DUMP').L06                          00282057
&BDU     SETB  1                       REQUIRES A DUMP DATA SET         00288057
         AGO   .L12                                                     00300057
.L06     AIF   ('&SYSLIST(&A1)' NE 'INVALID').L07                       00316057
&BINV    SETB  1                       INVALID IN IPCS                  00324057
         AGO   .L12                                                     00332057
.L07     AIF   ('&SYSLIST(&A1)' NE 'IPCS').L08                          00338057
&CT      SETC  'L'                     IPCS SUBCOMMAND                  00350057
         AGO   .L12                                                     00366057
.L08     AIF   ('&SYSLIST(&A1)' NE 'PDR').L09                           00374057
&BPDR    SETB  1                       REQUIRES PROBLEM DIRECTORY       00382057
         AGO   .L12                                                     00388057
.L09     AIF   ('&SYSLIST(&A1)' NE 'SPECIAL').L10                       00400057
&CT      SETC  'S'                     SPECIAL COMMAND                  00416057
         AGO   .L12                                                     00424057
.L10     AIF   ('&SYSLIST(&A1)' NE 'TSO').L11                           00432057
&CT      SETC  'T'                     TSO COMMAND                      00438057
         AGO   .L12                                                     00450057
.L11     MNOTE 8,'''&SYSLIST(&A1)'' KEYWORD NOT SUPPORTED'              00466057
.L12     ANOP                                                           00474057
&A1      SETA  &A1+1                   SUBSCRIPT FOR SEARCH             00482057
         AGO   .L04                                                     00488057
.*------------ PROCESS SUBCOMMAND ENTRY POINT NAME ------------------*. 00500057
.L13     AIF   (T'&EP EQ 'O').L14      IMPLICIT ENTRY POINT NAME        00516057
&CE      SETC  '&EP'                   SUBCOMMAND ENTRY POINT NAME      00524057
         AGO   .L15                                                     00532057
.L14     ANOP                                                           00538057
&CE      SETC  '&SCMD'                 SUBCOMMAND ENTRY POINT NAME      00550057
.*------------ GENERATE SUBCOMMAND TABLE ENTRY ----------------------*. 00566057
.L15     SPACE                                                          00574057
&GP.&GA  DS    0F                      SUBCOMMAND TABLE ENTRY           00582057
         DC    CL1'&CT'                TYPE OF SUBCOMMAND               00588057
         DC    BL2'&BINV&BPDR&BDSD&BDU.000000000000' ATTRIBUTES         00600057
&A1      SETA  K'&SCMD                 LENGTH OF SUBCOMMAND NAME        00616057
         DC    FL1'&A1'                LENGTH OF SUBCOMMAND NAME        00624057
         DC    CL8'&SCMD'              SUBCOMMAND NAME                  00632057
         DC    CL8'&CE'                SUBCOMMAND ENTRY POINT NAME      00638057
         MEND                                                           00650057
./  ADD  SSI=80410287,NAME=BLSUSTBO
         MACRO                                                          00010057
&LABEL   BLSUSTBO &PFX                                                  00020057
.*--------------------------------------------------------------------* 00030057
.* BLSUSTBO--DEFINE SUBCOMMAND TABLE HEADER FIELDS                    * 00040057
.*--------------------------------------------------------------------* 00050057
         GBLA  &GA                                                      00058057
         GBLC  &GP,&GS                                                  00066057
&GA      SETA  0                       DIMENSION OF SUBCOMMAND TABLE    00074057
&GP      SETC  '&PFX'                  FIELD NAME PREFIX                00082057
&GS      SETC  ' '                     NO CURRENT SUBCOMMAND NAME       00100057
&LABEL   DS    0F                      IPCS SUBCOMMAND TABLE            00108057
&GP.ID   DC    CL8'&LABEL'             IDENTIFIER                       00116057
&GP.DIM  DC    A(&GP.CNT)              DIMENSION OF SUBCOMMAND TABLE    00124057
         MEND                                                           00132057
