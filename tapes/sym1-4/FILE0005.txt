./  ADD  SSI=42980094,NAME=AMDPRAPP
         TITLE 'AMDPRAPP-EDIT FORMAT APPENDAGE INTERFACE               *00001000
                        '                                               00002000
AMDPRAPP CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL1(16)                                             0001 00007000
         DC    C'AMDPRAPP  74.298'                                 0001 00008000
         DROP  @15                                                      00009000
@PROLOG  ST    @14,12(,@13)                                        0001 00010000
         STM   @00,@12,20(@13)                                     0001 00011000
         BALR  @11,0                                               0001 00012000
@PSTART  LA    @05,4095(,@11)                                      0001 00013000
         USING @PSTART,@11                                         0001 00014000
         USING @PSTART+4095,@05                                    0001 00015000
         ST    @13,@SA00001+4                                      0001 00016000
         LA    @14,@SA00001                                        0001 00017000
         ST    @14,8(,@13)                                         0001 00018000
         LR    @13,@14                                             0001 00019000
         EQUATES                        AMDPRDMP EQU MACRO              00020000
         COMMON                         EXPANDS TO AMDPRCOM TABLE       00021000
AMDPRAPP CSECT                          RE-ESTABLISH AMDPRAPP CSECT     00022000
         USING COMMON,COMBASE           SET UP DSECT FOR AMDPRCOM       00023000
*   AEDITCBR=AEDITCB;               /* INITIALIZE AMDPRTAB PTR       */ 00024000
         L     AEDITCBR,AEDITCB                                    0085 00025000
*   APP='1'B;                       /* SET ON AMDPRAPP BIT           */ 00026000
         OI    APP(AEDITCBR),B'10000000'                           0086 00027000
*   LDSW=0;                         /* INIT SW TO ZERO               */ 00028000
         SLR   LDSW,LDSW                                           0087 00029000
*   WKAREA=WKAREA&&WKAREA;          /* ZERO WORK AREA          Y02014*/ 00030000
         L     @08,REENTWKA(,AEDITCBR)                             0088 00031000
         XC    WKAREA(200,@08),WKAREA(@08)                         0088 00032000
*   ABDPLPTR=REENTWKA;              /* PARMLIST IN WORK AREA   Y02014*/ 00033000
         LR    ABDPLPTR,@08                                        0089 00034000
*   ADPLSBPL='80'X;                 /* SET PARMLIST FLAGS      Y02014*/ 00035000
         MVI   ADPLSBPL(ABDPLPTR),X'80'                            0090 00036000
*   NSISAVE=COMPTR;                 /* SAVE ADDRS OF AMDPRCOM        */ 00037000
         ST    COMPTR,NSISAVE                                      0091 00038000
*   SPIESAVE=SVAREA;                /* FOR SPIE RECOVERY             */ 00039000
         L     @08,SVAREA(,AREAPTR)                                0092 00040000
         ST    @08,SPIESAVE                                        0092 00041000
*   IF(INREC(OFSTEID)&'F0'X)        /* IF EID INDICATES X'E'         */ 00042000
*       ='E0'X THEN                 /* THEN                          */ 00043000
         LH    @08,OFSTEID(,AEDITCBR)                              0093 00044000
         L     @03,CURREC(,AEDITCBR)                               0093 00045000
         ALR   @03,@08                                             0093 00046000
         AL    @03,@CF00475                                        0093 00047000
         MVC   @TS00001(1),INREC(@03)                              0093 00048000
         NI    @TS00001,X'F0'                                      0093 00049000
         CLI   @TS00001,X'E0'                                      0093 00050000
         BNE   @RF00093                                            0093 00051000
*     DO;                           /* DO THE FOLLOWING              */ 00052000
*       EXITNM=USRCON;              /* INSERT 'AMDUSR' INTO SLOT     */ 00053000
         MVI   EXITNM+6(AEDITCBR),C' '                             0095 00054000
         MVI   EXITNM+7(AEDITCBR),C' '                             0095 00055000
         MVC   EXITNM(6,AEDITCBR),USRCON                           0095 00056000
*       FIDTBPTR=ADDR(USRTABL);     /* INITIALIZE FID TBL PTR TO   0096 00057000
*                                      USRTABL                       */ 00058000
         LA    @08,USRTABL                                         0096 00059000
         ST    @08,FIDTBPTR                                        0096 00060000
*       LDSW=1;                     /* INDICATE 'AMDUSR' LOAD        */ 00061000
         LA    LDSW,1                                              0097 00062000
*       GOTO AMDPAPP2;              /* CONTINUE PROCESS              */ 00063000
         B     AMDPAPP2                                            0098 00064000
*     END;                                                         0099 00065000
*   IF INREC(6)>'05'X               /* IF SYSTEM FID> X'05'          */ 00066000
*     THEN                          /* THEN                          */ 00067000
@RF00093 L     @08,CURREC(,AEDITCBR)                               0100 00068000
         CLI   INREC+5(@08),X'05'                                  0100 00069000
         BNH   @RF00100                                            0100 00070000
*     DO;                           /* DO THE FOLLOWING              */ 00071000
*AMDPRTN:                                                          0102 00072000
*       APP='0'B;                   /* TURN OFF AMDPRAPP BIT         */ 00073000
AMDPRTN  NI    APP(AEDITCBR),B'01111111'                           0102 00074000
*       RETURN;                     /* RETURN TO AMDPRFLT            */ 00075000
@EL00001 L     @13,4(,@13)                                         0103 00076000
@EF00001 DS    0H                                                  0103 00077000
@ER00001 L     @14,12(,@13)                                        0103 00078000
         LM    @00,@12,20(@13)                                     0103 00079000
         BR    @14                                                 0103 00080000
*     END;                                                         0104 00081000
*   EXITNM=SYSCON;                  /* INSERT 'AMDSYS' INTO SLOT     */ 00082000
@RF00100 MVI   EXITNM+6(AEDITCBR),C' '                             0105 00083000
         MVI   EXITNM+7(AEDITCBR),C' '                             0105 00084000
         MVC   EXITNM(6,AEDITCBR),SYSCON                           0105 00085000
*   FIDTBPTR=ADDR(SYSTAB);          /* INITIALIZE FID TBL PTR TO   0106 00086000
*                                      SYSTAB                        */ 00087000
         LA    @08,SYSTAB                                          0106 00088000
         ST    @08,FIDTBPTR                                        0106 00089000
*AMDPAPP2:                                                         0107 00090000
*   INDEX=INREC(6)+1;               /* CALCULATE INDEX INTO FIDTB    */ 00091000
AMDPAPP2 L     @08,CURREC(,AEDITCBR)                               0107 00092000
         LA    @03,1                                               0107 00093000
         SLR   @00,@00                                             0107 00094000
         IC    @00,INREC+5(,@08)                                   0107 00095000
         ALR   @03,@00                                             0107 00096000
         ST    @03,INDEX                                           0107 00097000
*   IF ERRBIT(INDEX)='1'B           /* IF APPROPRIATE ERROR BIT      */ 00098000
*     THEN                          /* IS ON, THEN                   */ 00099000
         L     @08,FIDTBPTR                                        0108 00100000
         ALR   @03,@08                                             0108 00101000
         AL    @03,@CF00475                                        0108 00102000
         TM    ERRBIT(@03),B'00001000'                             0108 00103000
         BO    @RT00108                                            0108 00104000
*     GOTO AMDPRTN;                 /* RETURN TO AMDPRFLT            */ 00105000
*   IF HEXBIT(INDEX)='1'B           /* IF HEX BIT IS ON              */ 00106000
*     THEN                          /* THEN                          */ 00107000
         L     @03,INDEX                                           0110 00108000
         ALR   @08,@03                                             0110 00109000
         AL    @08,@CF00475                                        0110 00110000
         TM    HEXBIT(@08),B'10000000'                             0110 00111000
         BNO   @RF00110                                            0110 00112000
*     DO;                           /* DO THE FOLLOWING              */ 00113000
*       EXITADDR=AHEX;              /* SAVE ADDRS OF AMDPRHEX        */ 00114000
         L     @10,AFRMAD(,AEDITCBR)                               0112 00115000
         L     @10,AHEX(,@10)                                      0112 00116000
         ST    @10,EXITADDR(,AEDITCBR)                             0112 00117000
*       EXITNM='AMDPRHEX';          /* MOVE AMDPRHEX INTO EXITNM     */ 00118000
         MVC   EXITNM(8,AEDITCBR),@CC00391                         0113 00119000
*       GOTO AMDNOSPI;              /* NO SPIE AND CONTINUE SETUP    */ 00120000
         B     AMDNOSPI                                            0114 00121000
*     END;                                                         0115 00122000
*   RFY                                                            0116 00123000
*    (WREG6,                        /* NEED REG 6              Y02014*/ 00124000
*     WREG7) RSTD;                  /* NEED REG 7              Y02014*/ 00125000
*                                                                  0116 00126000
@RF00110 DS    0H                                                  0117 00127000
*   /*****************************************************************/ 00128000
*   /*                                                               */ 00129000
*   /* CALCULATE OUTPUT AREA ADDRESS                                 */ 00130000
*   /*                                                               */ 00131000
*   /*****************************************************************/ 00132000
*                                                                  0117 00133000
*   WREG6=ADDR(EXITNM)+6;                                          0117 00134000
*                                                                  0117 00135000
         LA    WREG6,EXITNM(,AEDITCBR)                             0117 00136000
         AL    WREG6,@CF00110                                      0117 00137000
*   /*****************************************************************/ 00138000
*   /*                                                               */ 00139000
*   /* OBTAIN FID ADDRESS ACCOUNTING FOR 0-ORIGIN OFFSET             */ 00140000
*   /*                                                               */ 00141000
*   /*****************************************************************/ 00142000
*                                                                  0118 00143000
*   WREG7=CURREC+6-1;                                              0118 00144000
         L     WREG7,CURREC(,AEDITCBR)                             0118 00145000
         SL    WREG7,@CF00463                                      0118 00146000
*   GEN(HEXCNVT  (6),(7),2);        /* CONVERT TO EBCDIC             */ 00147000
         HEXCNVT  (6),(7),2                                             00148000
*   IF LDSW=0 THEN                  /* SYS FORMAT APP          Y02014*/ 00149000
         LTR   LDSW,LDSW                                           0120 00150000
         BZ    @RT00120                                            0120 00151000
*     GOTO AMDPLOAD;                /* GO ATTEMP LOAD          Y02014*/ 00152000
*   IF HMDUSED(INDEX)='1'B THEN     /* VS1 VERSION FOUND       Y02014*/ 00153000
         L     @08,FIDTBPTR                                        0122 00154000
         L     @03,INDEX                                           0122 00155000
         ALR   @03,@08                                             0122 00156000
         AL    @03,@CF00475                                        0122 00157000
         TM    HMDUSED(@03),B'00100000'                            0122 00158000
         BO    @RT00122                                            0122 00159000
*     GO TO USEHMD;                 /* GO LOAD VS1 VERSION     Y02014*/ 00160000
*   IF IMDUSED(INDEX)='1'B THEN     /* OS VERSION FOUND        Y02014*/ 00161000
         L     @03,INDEX                                           0124 00162000
         ALR   @08,@03                                             0124 00163000
         AL    @08,@CF00475                                        0124 00164000
         TM    IMDUSED(@08),B'00010000'                            0124 00165000
         BNO   @RF00124                                            0124 00166000
*     DO;                           /* YES                     Y02014*/ 00167000
*       LDSW=2;                     /* INDICATE OS VERSION     Y02014*/ 00168000
         LA    LDSW,2                                              0126 00169000
*       GOTO USEIMD;                /* GO LOAD OS VERSION      Y02014*/ 00170000
         B     USEIMD                                              0127 00171000
*     END;                          /*                         Y02014*/ 00172000
*AMDPLOAD:                                                         0129 00173000
*   PARMPTR=-ADDR(EXITNM);          /* PARM FOR CALL TO AMDPRSEG     */ 00174000
@RF00124 DS    0H                                                  0129 00175000
AMDPLOAD LA    PARMPTR,EXITNM(,AEDITCBR)                           0129 00176000
         LCR   PARMPTR,PARMPTR                                     0129 00177000
*   RFY                                                            0130 00178000
*    (WREG6,                                                       0130 00179000
*     WREG7) UNRSTD;                /*                         Y02014*/ 00180000
*   CALL AMDPRSEG;                  /* ATTEMPT TO HAVE FORMAT      0131 00181000
*                                      APPENDAGE LOADED              */ 00182000
         L     @15,ALOADER                                         0131 00183000
         BALR  @14,@15                                             0131 00184000
*   RFY                                                            0132 00185000
*    (CODEREG) RSTD;                /*                         Y02014*/ 00186000
*   IF CODEREG=0 THEN               /* SUCCESSFUL LOAD OR MODULE     */ 00187000
         LTR   CODEREG,CODEREG                                     0133 00188000
         BZ    @RT00133                                            0133 00189000
*     GOTO AMDPAPP5;                /* ALREADY IN CORE               */ 00190000
*   IF CODEREG=4 THEN                                              0135 00191000
         C     CODEREG,@CF00099                                    0135 00192000
         BNE   @RF00135                                            0135 00193000
*     DO;                           /* UNSUCCESSFUL LOAD             */ 00194000
*       SYNMSGA=ADDR(AMDPRE12);     /* ADDR OF MSG AMD229I           */ 00195000
         L     @14,AFMG(,AEDITCBR)                                 0137 00196000
         LA    @14,AMDPRE12(,@14)                                  0137 00197000
         ST    @14,SYNMSGA                                         0137 00198000
*       ERRBUF(20:27)=EXITNM;       /* MOVE IN RTN NAME              */ 00199000
         L     @14,MSGADDR(,@14)                                   0138 00200000
         MVC   ERRBUF+19(8,@14),EXITNM(AEDITCBR)                   0138 00201000
*       GEN(OI SWD,NOSTDMG);        /* NO STND MSG BIT               */ 00202000
         OI SWD,NOSTDMG                                                 00203000
*       CALL AMDPRSYN;              /* OUTPUT MSG FOR > 10K RTN      */ 00204000
         L     @15,ASYNTAX                                         0140 00205000
         BALR  @14,@15                                             0140 00206000
*       GOTO AMDPAPP3;              /* CHECK TYPE OF DATA SET        */ 00207000
         B     AMDPAPP3                                            0141 00208000
*     END;                                                         0142 00209000
*   IF CODEREG=8 THEN               /* MODULE NOT FOUND              */ 00210000
@RF00135 C     CODEREG,@CF00044                                    0143 00211000
         BNE   @RF00143                                            0143 00212000
*     DO;                           /* DO THE FOLLOWING              */ 00213000
*USEHMD:                                                           0145 00214000
*       IF LDSW=1 THEN              /* TRY LOADING VS1 VERSION Y02014*/ 00215000
USEHMD   C     LDSW,@CF00046                                       0145 00216000
         BNE   @RF00145                                            0145 00217000
*         DO;                                                      0146 00218000
*           EXITNM(1:1)=HMDPREF;    /* USE VS1 NAME            Y02014*/ 00219000
         MVC   EXITNM(1,AEDITCBR),HMDPREF                          0147 00220000
*           LDSW=2;                 /* INDICATE LOAD VS1       Y02014*/ 00221000
         LA    LDSW,2                                              0148 00222000
*           WHOUSED(INDEX)='10'B;   /* INDICATE VS1            Y02014*/ 00223000
         L     @14,FIDTBPTR                                        0149 00224000
         AL    @14,INDEX                                           0149 00225000
         AL    @14,@CF00475                                        0149 00226000
         NI    WHOUSED(@14),B'11101111'                            0149 00227000
         OI    WHOUSED(@14),B'00100000'                            0149 00228000
*           GOTO AMDPLOAD;          /* GO ATTEMPT LOAD         Y02014*/ 00229000
         B     AMDPLOAD                                            0150 00230000
*         END;                      /*                         Y02014*/ 00231000
*USEIMD:                                                           0152 00232000
*       IF LDSW=2 THEN              /* TRY LOADING OS VERSION  Y02014*/ 00233000
@RF00145 DS    0H                                                  0152 00234000
USEIMD   C     LDSW,@CF00079                                       0152 00235000
         BNE   @RF00152                                            0152 00236000
*         DO;                       /*                         Y02014*/ 00237000
*           EXITNM(1:1)=IMDPREF;    /* INDICATE IMD VERSION    Y02014*/ 00238000
         MVC   EXITNM(1,AEDITCBR),IMDPREF                          0154 00239000
*           LDSW=3;                 /* OS VERSION TRIED        Y02014*/ 00240000
         LA    LDSW,3                                              0155 00241000
*           WHOUSED(INDEX)='01'B;   /* INDICATE OS VERSION     Y02014*/ 00242000
         L     @14,FIDTBPTR                                        0156 00243000
         AL    @14,INDEX                                           0156 00244000
         AL    @14,@CF00475                                        0156 00245000
         NI    WHOUSED(@14),B'11011111'                            0156 00246000
         OI    WHOUSED(@14),B'00010000'                            0156 00247000
*           GO TO AMDPLOAD;         /* GO ATTEMPT LOAD         Y02014*/ 00248000
         B     AMDPLOAD                                            0157 00249000
*         END;                                                     0158 00250000
*       IF LDSW=3 THEN              /* AMD|HMD|IMD VERSIONS    Y02014*/ 00251000
@RF00152 C     LDSW,@CF00169                                       0159 00252000
         BNE   @RF00159                                            0159 00253000
*         DO;                       /* NOT FOUND               Y02014*/ 00254000
*           EXITNM(1:1)=AMDPREF;    /* AMD NAME FOR MSG        Y02014*/ 00255000
         MVC   EXITNM(1,AEDITCBR),AMDPREF                          0161 00256000
*           WHOUSED(INDEX)='00'B;   /* INDICATE NONE FOUND     Y02014*/ 00257000
         L     @14,FIDTBPTR                                        0162 00258000
         AL    @14,INDEX                                           0162 00259000
         AL    @14,@CF00475                                        0162 00260000
         NI    WHOUSED(@14),B'11001111'                            0162 00261000
*         END;                                                     0163 00262000
*AMDPHDMP:                                                         0164 00263000
*       SYNMSGA=ADDR(AMDPRE06);     /* ADDRS OF ADDRS OF MSG         */ 00264000
@RF00159 DS    0H                                                  0164 00265000
AMDPHDMP L     @14,AFMG(,AEDITCBR)                                 0164 00266000
         LA    @14,AMDPRE06(,@14)                                  0164 00267000
         ST    @14,SYNMSGA                                         0164 00268000
*       ERRBUF(37:44)=              /* MOVE IN NAME OF MODULE IN     */ 00269000
*           EXITNM;                 /* ERROR                         */ 00270000
         L     @14,MSGADDR(,@14)                                   0165 00271000
         MVC   ERRBUF+36(8,@14),EXITNM(AEDITCBR)                   0165 00272000
*       GEN(OI  SWD,NOSTDMG);       /* TURN ON NO STANDARD MSG BT    */ 00273000
         OI  SWD,NOSTDMG                                                00274000
*       CALL AMDPRSYN;              /* OUTPUT HEX DUMP MESSAGE       */ 00275000
         L     @15,ASYNTAX                                         0167 00276000
         BALR  @14,@15                                             0167 00277000
*       HEXBIT(INDEX)='1'B;         /* SET ON HEX DUMP BIT           */ 00278000
         L     @14,FIDTBPTR                                        0168 00279000
         AL    @14,INDEX                                           0168 00280000
         AL    @14,@CF00475                                        0168 00281000
         OI    HEXBIT(@14),B'10000000'                             0168 00282000
*       CALL PRHEX;                 /* DUMP RECORD IN HEX            */ 00283000
         L     @10,AFRMAD(,AEDITCBR)                               0169 00284000
         L     @15,AHEX(,@10)                                      0169 00285000
         BALR  @14,@15                                             0169 00286000
*       GOTO AMDPRTN;               /* PREPARE FOR RETURN            */ 00287000
         B     AMDPRTN                                             0170 00288000
*     END;                                                         0171 00289000
*   RFY                                                            0172 00290000
*    (CODEREG) UNRSTD;              /*                         Y02014*/ 00291000
*   GOTO AMDPAPP4;                  /* CODE OF 12 OR 16, SO TERM     */ 00292000
         B     AMDPAPP4                                            0173 00293000
*AMDPAPP3:                                                         0174 00294000
*   IF DDNAME=BLANK1 THEN           /* IF NO DDNAME (DUMP DATA       */ 00295000
AMDPAPP3 CLC   DDNAME(8,AEDITCBR),BLANK1                           0174 00296000
         BE    @RT00174                                            0174 00297000
*     GOTO AMDPHDMP;                /* SET), HEX DUMP BIT ON         */ 00298000
*AMDPAPP4:                                                         0176 00299000
*   TERM='1'B;                      /* SET ON TERMINATION BIT        */ 00300000
AMDPAPP4 OI    TERM(AEDITCBR),B'01000000'                          0176 00301000
*   SYNMSGA=ADDR(AMDPRE05);         /* ADDRS OF ADDRS OF MSG         */ 00302000
         L     @10,AFMG(,AEDITCBR)                                 0177 00303000
         LA    @10,AMDPRE05(,@10)                                  0177 00304000
         ST    @10,SYNMSGA                                         0177 00305000
*   GEN(OI  SWD,NOSTDMG);           /* TURN ON NO STANDARD MSG BT    */ 00306000
         OI  SWD,NOSTDMG                                                00307000
*   CALL AMDPRSYN;                  /* OUTPUT APPRORIATE ERR MSG     */ 00308000
         L     @15,ASYNTAX                                         0179 00309000
         BALR  @14,@15                                             0179 00310000
*   GOTO AMDPRTN;                   /* PREPARE FOR RETURN            */ 00311000
         B     AMDPRTN                                             0180 00312000
*AMDPAPP5:                                                         0181 00313000
*   EXITADDR=PARMPTR;               /* SAVE ENTRY POINT ADDRS        */ 00314000
AMDPAPP5 ST    PARMPTR,EXITADDR(,AEDITCBR)                         0181 00315000
*   ITEMPREC(1:256)='';             /* BLANK TEMP REC          Y02014*/ 00316000
         MVI   ITEMPREC,C' '                                       0182 00317000
         MVC   ITEMPREC+1(255),ITEMPREC                            0182 00318000
*   ITEMPREC(257:284)='';           /* BLANK TEMP REC          Y02014*/ 00319000
         MVI   ITEMPREC+256,C' '                                   0183 00320000
         MVC   ITEMPREC+257(27),ITEMPREC+256                       0183 00321000
*   IF RECDLL<=256 THEN             /* ONE MOVE NEEDED         Y02014*/ 00322000
         L     @10,RECDLL-1(,AEDITCBR)                             0184 00323000
         LA    @10,0(,@10)                                         0184 00324000
         C     @10,@CF00121                                        0184 00325000
         BH    @RF00184                                            0184 00326000
*     ITEMPREC(1:RECDLL)=INREC(1:RECDLL);/*                    Y02014*/ 00327000
         BCTR  @10,0                                               0185 00328000
         L     @08,CURREC(,AEDITCBR)                               0185 00329000
         EX    @10,@SM00483                                        0185 00330000
*   ELSE                                                           0186 00331000
*     DO;                           /* TWO MOVES NEEDED        Y02014*/ 00332000
         B     @RC00184                                            0186 00333000
@RF00184 DS    0H                                                  0187 00334000
*       ITEMPREC(1:256)=INREC(1:256);/* MOVE 256 BYTES         Y02014*/ 00335000
         L     @10,CURREC(,AEDITCBR)                               0187 00336000
         MVC   ITEMPREC(256),INREC(@10)                            0187 00337000
*       ITEMPREC(257:RECDLL)=INREC(257:RECDLL);/* MOVE REST          */ 00338000
         L     @08,RECDLL-1(,AEDITCBR)                             0188 00339000
         LA    @08,0(,@08)                                         0188 00340000
         SL    @08,@CF00414                                        0188 00341000
         EX    @08,@SM00485                                        0188 00342000
*     END;                          /* OF RECORD               Y02014*/ 00343000
*                                                                  0189 00344000
*   /*****************************************************************/ 00345000
*   /*                                                               */ 00346000
*   /* CONSTRUCT PARAMETER LIST                                      */ 00347000
*   /*                                                               */ 00348000
*   /*****************************************************************/ 00349000
*                                                                  0190 00350000
*   RECPTR=ADDR(ITEMPREC);          /* WORD 1 OF PARAMETER LIST    0190 00351000
*                                                              Y02014*/ 00352000
@RC00184 LA    @10,ITEMPREC                                        0190 00353000
         ST    @10,RECPTR                                          0190 00354000
*   BUFPTR=CURBUF+11;               /* WORD 2 OF PARAMETER LIST      */ 00355000
         LA    @08,11                                              0191 00356000
         L     @03,CURBUF                                          0191 00357000
         ALR   @03,@08                                             0191 00358000
         ST    @03,BUFPTR                                          0191 00359000
*   GTFOPTR=GTFWDPTR;               /* WORD 3 OF PARAMETER LIST      */ 00360000
         L     @03,GTFWDPTR(,AEDITCBR)                             0192 00361000
         ST    @03,GTFOPTR                                         0192 00362000
*   EIDPTR=RECPTR+OFSTEID-1;        /* WORD 4 OF PARAMETER LIST      */ 00363000
         LH    @03,OFSTEID(,AEDITCBR)                              0193 00364000
         LR    @00,@10                                             0193 00365000
         ALR   @00,@03                                             0193 00366000
         BCTR  @00,0                                               0193 00367000
         ST    @00,EIDPTR                                          0193 00368000
*   IF(INREC(OFSTEID)&'F0'X)='E0'X THEN/*                    @YM07434*/ 00369000
         L     @15,CURREC(,AEDITCBR)                               0194 00370000
         ALR   @15,@03                                             0194 00371000
         AL    @15,@CF00475                                        0194 00372000
         MVC   @TS00001(1),INREC(@15)                              0194 00373000
         NI    @TS00001,X'F0'                                      0194 00374000
         CLI   @TS00001,X'E0'                                      0194 00375000
         BNE   @RF00194                                            0194 00376000
*     DATAPTR=RECPTR+OFSTDATA+11;   /* WORD 5 OF PARAMETER LIST    0195 00377000
*                                                            @YM07434*/ 00378000
         AH    @10,OFSTDATA(,AEDITCBR)                             0195 00379000
         ALR   @10,@08                                             0195 00380000
         ST    @10,DATAPTR                                         0195 00381000
*   ELSE                                                           0196 00382000
*     DATAPTR=RECPTR+OFSTDATA-1;    /* WORD 5 OF PARAMETER LIST    0196 00383000
*                                                            @YM07434*/ 00384000
         B     @RC00194                                            0196 00385000
@RF00194 LH    @10,OFSTDATA(,AEDITCBR)                             0196 00386000
         AL    @10,RECPTR                                          0196 00387000
         BCTR  @10,0                                               0196 00388000
         ST    @10,DATAPTR                                         0196 00389000
*   FRMADDR=PRFMTADD;               /* ADDR AMDPRFMT           Y02014*/ 00390000
@RC00194 L     @10,PRFMTADD(,AEDITCBR)                             0197 00391000
         ST    @10,FRMADDR                                         0197 00392000
*   ADPLFRMT=PRFMTADD;              /* ADDR AMDPRFMT           Y02014*/ 00393000
         ST    @10,ADPLFRMT(,ABDPLPTR)                             0198 00394000
*   WKAREADD=REENTWKA+LENGTH(ABDPL);/* ADDR WORK AREA          Y02014*/ 00395000
         L     @10,REENTWKA(,AEDITCBR)                             0199 00396000
         LA    @08,56                                              0199 00397000
         ALR   @08,@10                                             0199 00398000
         ST    @08,WKAREADD                                        0199 00399000
*   SNAPPARM=REENTWKA;              /* ADDR SNAP PARMS         Y02014*/ 00400000
         ST    @10,SNAPPARM                                        0200 00401000
*   ADPLBUF=CURBUF+1;               /* SNAP PARM PTRS TO BUF   Y02014*/ 00402000
         LA    @10,1                                               0201 00403000
         AL    @10,CURBUF                                          0201 00404000
         ST    @10,ADPLBUF(,ABDPLPTR)                              0201 00405000
*AMDPREDR:                                                         0202 00406000
*   IF EDITER=3 THEN                /* IF ER PARM =3, THEN     Y02014*/ 00407000
AMDPREDR CLI   EDITER,3                                            0202 00408000
         BE    @RT00202                                            0202 00409000
*     GOTO AMDNOSPI;                /* BYPASS SPIE             Y02014*/ 00410000
*AMDPCAL:                                                          0204 00411000
*   GENERATE;                                                      0204 00412000
AMDPCAL  DS    0H                                                  0204 00413000
*                                       /* ISSUE SPIE                */ 00414000
         SPIE  AMDPRSPI,((1,15)) SPIE FOR ALL PGM CHECKS                00415000
*AMDPPCA:                                                          0205 00416000
*   PICASAVE=PARMPTR;               /* SAVE ADDRS OF PREV PICA       */ 00417000
AMDPPCA  ST    PARMPTR,PICASAVE                                    0205 00418000
*AMDNOSPI:                                                         0206 00419000
*   PARMPTR=ADDR(PLIST);            /* REG1 PTR PARM LIST      Y02014*/ 00420000
AMDNOSPI LA    PARMPTR,PLIST                                       0206 00421000
*   GEN(STM  R0,R14,LOCAREA);       /* SAVE OWN REGISTERS            */ 00422000
         STM  R0,R14,LOCAREA                                            00423000
*   CALL USERRTN;                   /* CALL EXIT, FMT APP, OR PRHEX  */ 00424000
         L     @15,EXITADDR(,AEDITCBR)                             0208 00425000
         BALR  @14,@15                                             0208 00426000
*   GENERATE;                                                      0209 00427000
         BALR  R7,R0                    ESTABLISH TEMP ADDRESSABILITY   00428000
         USING *,R7                     IN CASE USR RTN DESTROYED REGS  00429000
         LM  R0,R14,LOCAREA             RESTORE REGS                    00430000
         DROP  R7                       RE-ESTABLISH ORIG BASE REG      00431000
         ST    CODEREG,CODESAVE         SAVE RETURN CODE                00432000
*   IF EDITER¬=3                    /* WAS SPIE ISSUED         Y02014*/ 00433000
*       &EXITNM¬='AMDPRHEX' THEN                                   0210 00434000
         CLI   EDITER,3                                            0210 00435000
         BE    @RF00210                                            0210 00436000
         CLC   EXITNM(8,AEDITCBR),@CC00391                         0210 00437000
         BE    @RF00210                                            0210 00438000
*     DO;                           /*                         Y02014*/ 00439000
*       PARMPTR=PICASAVE;           /* RESTORE PICA ADDR       Y02014*/ 00440000
         L     PARMPTR,PICASAVE                                    0212 00441000
*       GEN(SPIE MF=(E,(R1)));      /* RESTORE SPIE            Y02014*/ 00442000
         SPIE MF=(E,(R1))                                               00443000
*     END;                                                         0214 00444000
*   IF CODESAVE=0 THEN              /* RETURN CODE OF 0 INDICATES    */ 00445000
@RF00210 L     @10,CODESAVE                                        0215 00446000
         LTR   @10,@10                                             0215 00447000
         BNZ   @RF00215                                            0215 00448000
*     DO;                           /* ANOTHER CALL TO ROUTINE       */ 00449000
*       CALL AMDPRDNT;              /* ALIGN OUTPUT CORRECTLY        */ 00450000
         BAL   @14,AMDPRDNT                                        0217 00451000
*       GEN(BRWRITE 1);             /* OUTPUT BUFFER CONTENTS        */ 00452000
         BRWRITE 1                                                      00453000
*       BUFPTR=CURBUF+11;           /* NEW OUTPUT BUFFER IN USE      */ 00454000
         L     @10,CURBUF                                          0219 00455000
         LA    @08,11                                              0219 00456000
         ALR   @08,@10                                             0219 00457000
         ST    @08,BUFPTR                                          0219 00458000
*       ADPLBUF=CURBUF+1;           /* UPDATE SNAP PARM        Y02014*/ 00459000
         AL    @10,@CF00046                                        0220 00460000
         ST    @10,ADPLBUF(,ABDPLPTR)                              0220 00461000
*       GOTO AMDPREDR;              /* CALL FMT APPENDAGE AGAIN      */ 00462000
         B     AMDPREDR                                            0221 00463000
*     END;                                                         0222 00464000
*   IF CODESAVE=4 THEN              /* RETURN CODE OF 4 INDICATES    */ 00465000
@RF00215 CLC   CODESAVE(4),@CF00099                                0223 00466000
         BNE   @RF00223                                            0223 00467000
*     DO;                           /* CURRENT OUTPUT COMPLETE       */ 00468000
*       CALL AMDPRDNT;              /* ALIGN OUTPUT CORRECTLY        */ 00469000
         BAL   @14,AMDPRDNT                                        0225 00470000
*       GEN(BRWRITE 1);             /* OUTPUT BUFFER CONTENTS        */ 00471000
         BRWRITE 1                                                      00472000
*       IF OPTTIME='0'B THEN        /* IF NO TIME STAMP IN REC Y02014*/ 00473000
         L     @10,GTFWDPTR(,AEDITCBR)                             0227 00474000
         TM    OPTTIME(@10),B'00000001'                            0227 00475000
         BZ    @RT00227                                            0227 00476000
*         GOTO AMDPRTN;             /* THEN PREPARE FOR RETURN       */ 00477000
*       CALL PRTME;                 /* HAVE TIME STAMP FORMATTED     */ 00478000
         L     @10,AFRMAD(,AEDITCBR)                               0229 00479000
         L     @15,ATME(,@10)                                      0229 00480000
         BALR  @14,@15                                             0229 00481000
*       GEN(BRWRITE 1);             /* OUTPUT BUFFER CONTENTS        */ 00482000
         BRWRITE 1                                                      00483000
*       GOTO AMDPRTN;               /* PREPARE FOR RETURN            */ 00484000
         B     AMDPRTN                                             0231 00485000
*     END;                                                         0232 00486000
*   IF CODESAVE=8                   /* IF RETURN CODE OF 8, THEN     */ 00487000
*     THEN                                                         0233 00488000
@RF00223 CLC   CODESAVE(4),@CF00044                                0233 00489000
         BNE   @RF00233                                            0233 00490000
*     DO;                           /* DO THE FOLLOWING              */ 00491000
*       RET='0'B;                   /* RESET INDENTING SWITCH        */ 00492000
         NI    RET(AEDITCBR),B'11110111'                           0235 00493000
*       BLDBUF=BLANK1;              /* BLANK OUTPUT BUFFER           */ 00494000
         L     @10,CURBUF                                          0236 00495000
         MVI   BLDBUF+10(@10),C' '                                 0236 00496000
         MVC   BLDBUF+11(109,@10),BLDBUF+10(@10)                   0236 00497000
         MVC   BLDBUF(10,@10),BLANK1                               0236 00498000
*       GOTO AMDPRTN;               /* IGNORE THIS RECORD            */ 00499000
         B     AMDPRTN                                             0237 00500000
*     END;                                                         0238 00501000
*   IF CODESAVE=12 THEN             /* RC =12                  Y02014*/ 00502000
@RF00233 CLC   CODESAVE(4),@CF00076                                0239 00503000
         BNE   @RF00239                                            0239 00504000
*     DO;                           /* YES                     Y02014*/ 00505000
*       CALL PRHEX;                 /* DUMP RECORD IN HEX      Y02014*/ 00506000
         L     @10,AFRMAD(,AEDITCBR)                               0241 00507000
         L     @15,AHEX(,@10)                                      0241 00508000
         BALR  @14,@15                                             0241 00509000
*       RET='0'B;                   /* RESET IDENT SWITCH      Y02014*/ 00510000
         NI    RET(AEDITCBR),B'11110111'                           0242 00511000
*       BLDBUF=BLANK1;              /* BLANK OUTPUT BUFF       Y02014*/ 00512000
         L     @10,CURBUF                                          0243 00513000
         MVI   BLDBUF+10(@10),C' '                                 0243 00514000
         MVC   BLDBUF+11(109,@10),BLDBUF+10(@10)                   0243 00515000
         MVC   BLDBUF(10,@10),BLANK1                               0243 00516000
*       GOTO AMDPRTN;               /* PREPARE FOR RETURN      Y02014*/ 00517000
         B     AMDPRTN                                             0244 00518000
*     END;                          /*                         Y02014*/ 00519000
*   SYNMSGA=ADDR(AMDPRE03);         /* ADDRS OF ADDRS OF MSG         */ 00520000
@RF00239 L     @10,AFMG(,AEDITCBR)                                 0246 00521000
         LA    @10,AMDPRE03(,@10)                                  0246 00522000
         ST    @10,SYNMSGA                                         0246 00523000
*   RFY                                                            0247 00524000
*    (WREG6,                                                       0247 00525000
*     WREG7) RSTD;                  /*                         Y02014*/ 00526000
*   WREG6=MSGADDR;                  /* OBTAIN ADDRESS OF MESSAGE     */ 00527000
         L     WREG6,MSGADDR(,@10)                                 0248 00528000
*   GEN(BRWRITE SKIP);              /* SKIP TO NEW PAGE              */ 00529000
         BRWRITE SKIP                                                   00530000
*   GENERATE;                                                      0250 00531000
         LA  WREG6,39(WREG6)         OBTAIN ADDRESS OF RC PLACEMENT     00532000
         LA  WREG7,CODESAVE             OBTAIN INPUT ADDRESS            00533000
         HEXCNVT (6),(7),4              CONVERT TO EBCDIC               00534000
*   ERRBUF(64:71)                   /* MOVE IN FMT APPENDAGE NAME    */ 00535000
*       =EXITNM;                                                   0251 00536000
         L     @10,SYNMSGA                                         0251 00537000
         L     @10,MSGADDR(,@10)                                   0251 00538000
         MVC   ERRBUF+63(8,@10),EXITNM(AEDITCBR)                   0251 00539000
*   GENERATE;                                                      0252 00540000
         L     R6,PAGENUMB              PREPARE FOR CVD                 00541000
         CVD   R6,DBLWORD               CONVERT PAGE NO TO DECIMAL      00542000
         UNPK  COMP4(4),DBLWORD+6(2) CONVERT TO EBCDIC                  00543000
         OI    COMP4+3,X'F0'      STRIP '0'B ZONE                       00544000
*   ERRBUF(24:27)                   /* MOVE PRINTABLE RETURN CODE    */ 00545000
*       =COMP4;                     /* INTO RC MSG                   */ 00546000
         L     @10,SYNMSGA                                         0253 00547000
         L     @10,MSGADDR(,@10)                                   0253 00548000
         MVC   ERRBUF+23(4,@10),COMP4                              0253 00549000
*   GEN(OI  SWD,NOSTDMG);           /* TURN ON NO STANDARD MSG BT    */ 00550000
         OI  SWD,NOSTDMG                                                00551000
*   CALL AMDPRSYN;                  /* OUTPUT INVALID RC MSG         */ 00552000
         L     @15,ASYNTAX                                         0255 00553000
         BALR  @14,@15                                             0255 00554000
*   RFY                                                            0256 00555000
*    (WREG6,                                                       0256 00556000
*     WREG7) UNRSTD;                /*                         Y02014*/ 00557000
*   IF EDITER¬=0 THEN               /* IF 'ER=0' NOT SPECIFIED,      */ 00558000
         CLI   EDITER,0                                            0257 00559000
         BNE   @RT00257                                            0257 00560000
*     GOTO AMDPERR;                 /* CHECK FURTHER                 */ 00561000
*   ERRBIT(INDEX)='1'B;             /* SET ON APPROP ERROR BIT       */ 00562000
         L     @10,FIDTBPTR                                        0259 00563000
         AL    @10,INDEX                                           0259 00564000
         AL    @10,@CF00475                                        0259 00565000
         OI    ERRBIT(@10),B'00001000'                             0259 00566000
*   SYNMSGA=ADDR(AMDPRE04);         /* ADDRS OF ADDRS OF MSG         */ 00567000
         L     @10,AFMG(,AEDITCBR)                                 0260 00568000
         LA    @10,AMDPRE04(,@10)                                  0260 00569000
         ST    @10,SYNMSGA                                         0260 00570000
*   ERRBUF(54:61)                   /* MOVE IN RTN NAME TO           */ 00571000
*       =EXITNM;                    /* INTERFACE IGNORED MSG         */ 00572000
         L     @10,MSGADDR(,@10)                                   0261 00573000
         MVC   ERRBUF+53(8,@10),EXITNM(AEDITCBR)                   0261 00574000
*AMDPERMG:                                                         0262 00575000
*   GEN(OI  SWD,NOSTDMG);           /* TURN ON NO STANDARD MSG BT    */ 00576000
AMDPERMG OI  SWD,NOSTDMG                                                00577000
*   CALL AMDPRSYN;                  /* OUTPUT ERROR MESSAGE          */ 00578000
         L     @15,ASYNTAX                                         0263 00579000
         BALR  @14,@15                                             0263 00580000
*   CALL PRHEX;                     /* DUMP RECORD IN HEX            */ 00581000
         L     @10,AFRMAD(,AEDITCBR)                               0264 00582000
         L     @15,AHEX(,@10)                                      0264 00583000
         BALR  @14,@15                                             0264 00584000
*   GEN(BRWRITE SKIP);              /* SKIP TO NEW PAGE              */ 00585000
         BRWRITE SKIP                                                   00586000
*   GOTO AMDPRTN;                   /* PREPARE FOR RETURN            */ 00587000
         B     AMDPRTN                                             0266 00588000
*AMDPERR:                                                          0267 00589000
*   IF EDITER¬=1 THEN               /* IF 'ER=1' NOT SPECIFIED,      */ 00590000
AMDPERR  CLI   EDITER,1                                            0267 00591000
         BE    @RF00267                                            0267 00592000
*     DO;                           /* DO THE FOLLOWING              */ 00593000
*       TERM='1'B;                  /* SET ON TERM BIT               */ 00594000
         OI    TERM(AEDITCBR),B'01000000'                          0269 00595000
*       SYNMSGA=ADDR(AMDPRE05);     /* ADDRS OF ADDRS OF MSG         */ 00596000
         L     @10,AFMG(,AEDITCBR)                                 0270 00597000
         LA    @10,AMDPRE05(,@10)                                  0270 00598000
         ST    @10,SYNMSGA                                         0270 00599000
*       GOTO AMDPERMG;              /* OUTPUT ERROR MESSAGE          */ 00600000
         B     AMDPERMG                                            0271 00601000
*     END;                                                         0272 00602000
*   HEXBIT(INDEX)='1'B;             /* 'ER=1' SO SET ON HEX BIT      */ 00603000
@RF00267 L     @10,FIDTBPTR                                        0273 00604000
         AL    @10,INDEX                                           0273 00605000
         AL    @10,@CF00475                                        0273 00606000
         OI    HEXBIT(@10),B'10000000'                             0273 00607000
*   SYNMSGA=ADDR(AMDPRE06);         /* ADDRS OF ADDRS OF MSG         */ 00608000
         L     @10,AFMG(,AEDITCBR)                                 0274 00609000
         LA    @10,AMDPRE06(,@10)                                  0274 00610000
         ST    @10,SYNMSGA                                         0274 00611000
*   ERRBUF(37:44)                   /* MOVE IN RTN NAME              */ 00612000
*       =EXITNM;                                                   0275 00613000
         L     @10,MSGADDR(,@10)                                   0275 00614000
         MVC   ERRBUF+36(8,@10),EXITNM(AEDITCBR)                   0275 00615000
*   GOTO AMDPERMG;                  /* OUTPUT ERROR MSG              */ 00616000
         B     AMDPERMG                                            0276 00617000
*/********************************************************************/ 00618000
*/*  THE FOLLOWING SUBROUTINE ACCOMPLISHES THE IDENTIFICATION OF USER*/ 00619000
*/*  TRACE RECORDS, AND THE INSERTION OF THE EID IN PRINTABLE FORMAT */ 00620000
*/*  AT THE BEGINNING OF EACH USER TRACE RECORD.  OUTPUT LINES       */ 00621000
*/*  BEYOND THE FIRST LINE ARE INDENTED TO ALLOW EASY IDENTIFICATION */ 00622000
*/*  OF COMPLETE USER RECORDS.                                       */ 00623000
*/********************************************************************/ 00624000
*                                                                  0277 00625000
*AMDPRDNT:                                                         0277 00626000
*   PROC;                                                          0277 00627000
AMDPRDNT STM   @14,@12,@SA00002                                    0277 00628000
*   DCL                                                            0278 00629000
*     AMDPNSI LABEL;                /* LABEL IN SPIE ROUTINE         */ 00630000
*   RFY                                                            0279 00631000
*    (PARMPTR,                      /* PARM LIST POINTER             */ 00632000
*     WREG6,                        /* WORK REGISTER                 */ 00633000
*     WREG7,                        /* WORK REGISTER                 */ 00634000
*     AEDITCBR,                     /* POINTER TO AMDPRTAB           */ 00635000
*     COMPTR) RSTD;                 /* POINTER TO COM          Y02014*/ 00636000
*   CALL AMDTMCHK;                  /* OUTPUT TIME STAMP, IF NEC     */ 00637000
         BAL   @14,AMDTMCHK                                        0280 00638000
*   IF(INREC(OFSTEID)&'F0'X)        /* IF EID IS NOT X'E' (USR       */ 00639000
*       ¬='E0'X THEN                /* EID), THEN                    */ 00640000
         LH    @10,OFSTEID(,AEDITCBR)                              0281 00641000
         L     @08,CURREC(,AEDITCBR)                               0281 00642000
         ALR   @10,@08                                             0281 00643000
         AL    @10,@CF00475                                        0281 00644000
         MVC   @TS00001(1),INREC(@10)                              0281 00645000
         NI    @TS00001,X'F0'                                      0281 00646000
         CLI   @TS00001,X'E0'                                      0281 00647000
         BNE   @RT00281                                            0281 00648000
*     RETURN;                       /* RETURN TO CALLER              */ 00649000
*   IF RET='1'B THEN                /* IF FORMATTING MULTIPLE        */ 00650000
         TM    RET(AEDITCBR),B'00001000'                           0283 00651000
         BO    @RT00283                                            0283 00652000
*     GOTO AMDPDNT1;                /* LINES, SPECIAL ACTION         */ 00653000
*   OTEMPREC=USRINFO;               /* COPY USER OUTPUT        Y02014*/ 00654000
         L     @10,CURBUF                                          0285 00655000
         MVC   OTEMPREC(110),USRINFO(@10)                          0285 00656000
*   USRINFO='';                     /* BLANK OUTPUT BUFFER     Y02014*/ 00657000
         MVI   USRINFO(@10),C' '                                   0286 00658000
         MVC   USRINFO+1(109,@10),USRINFO(@10)                     0286 00659000
*   ASCBPTR=CURREC+OFSTDATA-1;      /* ASCBPTR                 Y02014*/ 00660000
         LH    @10,OFSTDATA(,AEDITCBR)                             0287 00661000
         ALR   @10,@08                                             0287 00662000
         BCTR  @10,0                                               0287 00663000
         ST    @10,ASCBPTR                                         0287 00664000
*   JOBNPTR=ASCBPTR+4;              /* JOBNAME PTR             Y02014*/ 00665000
         AL    @10,@CF00099                                        0288 00666000
         ST    @10,JOBNPTR                                         0288 00667000
*   DATAPTR5=CURREC+OFSTEID-1;      /* INITIALIZE THE DATA PTR       */ 00668000
         LH    @10,OFSTEID(,AEDITCBR)                              0289 00669000
         ALR   @08,@10                                             0289 00670000
         BCTR  @08,0                                               0289 00671000
         ST    @08,DATAPTR5                                        0289 00672000
*   PARMPTR=ADDR(USRFMT);           /* OBTAIN ADDRS OF FMT PTRN      */ 00673000
         LA    PARMPTR,USRFMT                                      0290 00674000
*   CALL AMDPRGFR;                  /* FORMAT OUTPUT LINE            */ 00675000
         L     @15,AFMTLINE                                        0291 00676000
         BALR  @14,@15                                             0291 00677000
*   BLDBUF(4:5)=EXITNM(7:8);        /* MOVE IN FID TO OUTPUT LINE    */ 00678000
         L     @10,CURBUF                                          0292 00679000
         MVC   BLDBUF+3(2,@10),EXITNM+6(AEDITCBR)                  0292 00680000
*   BLDBUF(6)=' ';                  /* OMIT X'E' FOR READABILITY     */ 00681000
         MVI   BLDBUF+5(@10),C' '                                  0293 00682000
*   GEN(BRWRITE 1);                 /* WRITE BUFFER            Y02014*/ 00683000
         BRWRITE 1                                                      00684000
*   USRINFO=OTEMPREC;               /* RESTORE USER DATA       Y02014*/ 00685000
         L     @10,CURBUF                                          0295 00686000
         MVC   USRINFO(110,@10),OTEMPREC                           0295 00687000
*   BLDBUF(1:10)=BLANK1;            /* BLANK 1ST 10 BYTES      Y02014*/ 00688000
         MVC   BLDBUF(10,@10),BLANK1                               0296 00689000
*AMDPDNT0:                                                         0297 00690000
*   IF CODESAVE=0 THEN              /* IF ZERO RETURN CODE, THEN     */ 00691000
AMDPDNT0 L     @10,CODESAVE                                        0297 00692000
         LTR   @10,@10                                             0297 00693000
         BNZ   @RF00297                                            0297 00694000
*     RET='1'B;                     /* WILL NEED MORE FORMATTING     */ 00695000
         OI    RET(AEDITCBR),B'00001000'                           0298 00696000
*   RETURN;                         /* RETURN TO CALLER              */ 00697000
@EL00002 DS    0H                                                  0299 00698000
@EF00002 DS    0H                                                  0299 00699000
@ER00002 LM    @14,@12,@SA00002                                    0299 00700000
         BR    @14                                                 0299 00701000
*AMDPDNT1:                                                         0300 00702000
*   BLDBUF(1:10)=BLANK1;            /* INDENT LINE                   */ 00703000
AMDPDNT1 L     @10,CURBUF                                          0300 00704000
         MVC   BLDBUF(10,@10),BLANK1                               0300 00705000
*   IF CODESAVE¬=0 THEN             /* IF NON-ZERO RETURN CODE,      */ 00706000
         L     @10,CODESAVE                                        0301 00707000
         LTR   @10,@10                                             0301 00708000
         BZ    @RF00301                                            0301 00709000
*     RET='0'B;                     /* NO MORE FORMATTING            */ 00710000
         NI    RET(AEDITCBR),B'11110111'                           0302 00711000
*   RETURN;                         /* RETURN TO CALLER              */ 00712000
         B     @EL00002                                            0303 00713000
*   RFY                                                            0304 00714000
*    (WREG6,                                                       0304 00715000
*     REG2) RSTD;                   /*                         Y02014*/ 00716000
*AMDPRSPI:                                                         0305 00717000
*   GENERATE;                                                      0305 00718000
AMDPRSPI DS    0H                                                  0305 00719000
         DROP R11                                                       00720000
         DROP R5                                                        00721000
         BALR  R2,R0                    ESTABLISH ADDRESSABILITY        00722000
         USING *,R2                     USE REGISTER 2                  00723000
         STM R0,R15,LOCAREA             STORE REGS IN LOCAL SAVE AREA   00724000
         L     COMBASE,NSISAVE          OBTAIN ADDRS OF AMDPRCOM        00725000
*   AEDITCBR=AEDITCB;               /* ESTABLISH DSECT FOR PRTAB     */ 00726000
         L     AEDITCBR,AEDITCB                                    0306 00727000
*   PIESAVE=PARMPTR;                /* SAVE ADDRS OF PIE             */ 00728000
         LR    PIESAVE,PARMPTR                                     0307 00729000
*   SPIE='1'B;                      /* SPIE ROUTINE INDICATION       */ 00730000
         OI    SPIE(AEDITCBR),B'00100000'                          0308 00731000
*   SYNMSGA=ADDR(AMDPRE07);         /* ADRS OF ADRS OF PGM CK MSG    */ 00732000
         L     @08,AFMG(,AEDITCBR)                                 0309 00733000
         LA    @08,AMDPRE07(,@08)                                  0309 00734000
         ST    @08,SYNMSGA                                         0309 00735000
*   AREAPTR=ADDR(SAVECALL);         /* SAVE AREA FOR USE OF CALLED 0310 00736000
*                                      ROUTINES                      */ 00737000
         LA    AREAPTR,SAVECALL                                    0310 00738000
*   RETSAVE=RETPTR;                 /* SAVE SYSTEM RETURN ADDRS      */ 00739000
         LR    RETSAVE,RETPTR                                      0311 00740000
*   GENERATE;                                                      0312 00741000
         ST    AREAPTR,SAVECALL+4               ESTABLISH BACKWARD PTR  00742000
         BRWRITE SKIP                   SKIP TO NEW PAGE                00743000
*   RET='0'B;                       /* INDENTING OK IN FUTURE        */ 00744000
         NI    RET(AEDITCBR),B'11110111'                           0313 00745000
*   ERRBUF(66:73)                   /* MOVE IN RTN NAME              */ 00746000
*       =EXITNM;                                                   0314 00747000
         L     @08,SYNMSGA                                         0314 00748000
         L     @08,MSGADDR(,@08)                                   0314 00749000
         MVC   ERRBUF+65(8,@08),EXITNM(AEDITCBR)                   0314 00750000
*   GENERATE;                                                      0315 00751000
         L     R6,PAGENUMB              PREPARE FOR CVD                 00752000
         CVD   R6,DBLWORD               CONVERT PAGE NO TO DECIMAL      00753000
         UNPK  COMP4(4),DBLWORD+6(2) CONVERT TO EBCDIC                  00754000
         OI    COMP4+3,X'F0'      STRIP '0'B ZONE                       00755000
*   ERRBUF(39:42)                   /* MOVE IN PG NO TO PGM CK       */ 00756000
*       =COMP4;                     /* MSG                           */ 00757000
         L     @08,SYNMSGA                                         0316 00758000
         L     @08,MSGADDR(,@08)                                   0316 00759000
         MVC   ERRBUF+38(4,@08),COMP4                              0316 00760000
*   GEN(OI  SWD,NOSTDMG);           /* TURN ON NO STANDARD MSG BT    */ 00761000
         OI  SWD,NOSTDMG                                                00762000
*   CALL AMDPRSYN;                  /* OUTPUT ERROR MESSAGE          */ 00763000
         L     @15,ASYNTAX                                         0318 00764000
         BALR  @14,@15                                             0318 00765000
*   IF EOFINPRO='1'B THEN           /* EOF IN PROCESS          Y02014*/ 00766000
         TM    EOFINPRO(AEDITCBR),B'01000000'                      0319 00767000
         BO    @RT00319                                            0319 00768000
*     GOTO NOEDITER;                /* YES BYPASS TESTS        Y02014*/ 00769000
*   RFY                                                            0321 00770000
*    (WREG6) UNRSTD;                /*                         Y02014*/ 00771000
*   IF EDITER=0 THEN                /* TAKE ERROR ACTIONS            */ 00772000
         CLI   EDITER,0                                            0322 00773000
         BE    @RT00322                                            0322 00774000
*     GOTO AMDPSPI1;                                               0323 00775000
*   IF EDITER=1 THEN                /* TAKE HEX DUMP ACTIONS         */ 00776000
         CLI   EDITER,1                                            0324 00777000
         BE    @RT00324                                            0324 00778000
*     GOTO AMDPSPI2;                                               0325 00779000
*   SYNMSGA=ADDR(AMDPRE05);         /* ADDRS OF ADDRS OF TRM MSG     */ 00780000
         L     @08,AFMG(,AEDITCBR)                                 0326 00781000
         LA    @08,AMDPRE05(,@08)                                  0326 00782000
         ST    @08,SYNMSGA                                         0326 00783000
*   TERM='1'B;                      /* SET ON TERMINATION BIT        */ 00784000
         OI    TERM(AEDITCBR),B'01000000'                          0327 00785000
*   IF REXT='1'B THEN               /* IF FROM USER EXIT, THEN       */ 00786000
         TM    REXT(AEDITCBR),B'00000001'                          0328 00787000
         BNO   @RF00328                                            0328 00788000
*     USEREXIT=' ';                 /* BLANK IT OUT                  */ 00789000
         MVI   USEREXIT+1(AEDITCBR),C' '                           0329 00790000
         MVC   USEREXIT+2(6,AEDITCBR),USEREXIT+1(AEDITCBR)         0329 00791000
         MVI   USEREXIT(AEDITCBR),C' '                             0329 00792000
*   GOTO AMDPSPI3;                  /* IN ANY CASE, CLEANUP          */ 00793000
         B     AMDPSPI3                                            0330 00794000
*AMDPSPI1:                                                         0331 00795000
*   SYNMSGA=ADDR(AMDPRE04);         /* ADDRS OF ADDRS OF INTRFACE  0331 00796000
*                                      IGNORED MESSAGE               */ 00797000
AMDPSPI1 L     @08,AFMG(,AEDITCBR)                                 0331 00798000
         LA    @08,AMDPRE04(,@08)                                  0331 00799000
         ST    @08,SYNMSGA                                         0331 00800000
*   ERRBUF(54:61)                   /* MOVE IN RTN NAME              */ 00801000
*       =EXITNM;                                                   0332 00802000
         L     @08,MSGADDR(,@08)                                   0332 00803000
         MVC   ERRBUF+53(8,@08),EXITNM(AEDITCBR)                   0332 00804000
*   IF REXT='1'B THEN               /* IF FROM USER EXIT, THEN       */ 00805000
         TM    REXT(AEDITCBR),B'00000001'                          0333 00806000
         BNO   @RF00333                                            0333 00807000
*     DO;                           /* DO THE FOLLOWING              */ 00808000
*       USEREXIT=' ';               /* BLANK USER EXIT SLOT          */ 00809000
         MVI   USEREXIT+1(AEDITCBR),C' '                           0335 00810000
         MVC   USEREXIT+2(6,AEDITCBR),USEREXIT+1(AEDITCBR)         0335 00811000
         MVI   USEREXIT(AEDITCBR),C' '                             0335 00812000
*       REXT='0'B;                  /* TURN OF EXIT INDIC      Y02014*/ 00813000
         NI    REXT(AEDITCBR),B'11111110'                          0336 00814000
*       GOTO AMDPSPI3;              /* CONTINUE CLEANUP              */ 00815000
         B     AMDPSPI3                                            0337 00816000
*     END;                                                         0338 00817000
*   ERRBIT(INDEX)='1'B;             /* ERROR BIT ON FOR FMT APP      */ 00818000
@RF00333 L     @08,FIDTBPTR                                        0339 00819000
         AL    @08,INDEX                                           0339 00820000
         AL    @08,@CF00475                                        0339 00821000
         OI    ERRBIT(@08),B'00001000'                             0339 00822000
*   GOTO AMDPSPI3;                  /* CONTINUE CLEANUP              */ 00823000
         B     AMDPSPI3                                            0340 00824000
*AMDPSPI2:                                                         0341 00825000
*   IF REXT='1'B THEN                                              0341 00826000
AMDPSPI2 TM    REXT(AEDITCBR),B'00000001'                          0341 00827000
         BNO   @RF00341                                            0341 00828000
*     DO;                           /* IF FROM USER EXIT, WON'T      */ 00829000
*       REXT='0'B;                  /* TURN OFF EXIT INDIC     Y02014*/ 00830000
         NI    REXT(AEDITCBR),B'11111110'                          0343 00831000
*       GOTO AMDPSPI1;              /* DUMP IN HEX/IGNORE INTRFC     */ 00832000
         B     AMDPSPI1                                            0344 00833000
*     END;                                                         0345 00834000
*   SYNMSGA=ADDR(AMDPRE06);         /* ADDRS OF ADDRS OF HEX DUMP  0346 00835000
*                                      MESSAGE                       */ 00836000
@RF00341 L     @08,AFMG(,AEDITCBR)                                 0346 00837000
         LA    @08,AMDPRE06(,@08)                                  0346 00838000
         ST    @08,SYNMSGA                                         0346 00839000
*   HEXBIT(INDEX)='1'B;             /* SET ON HEX DUMP BIT           */ 00840000
         L     @06,FIDTBPTR                                        0347 00841000
         AL    @06,INDEX                                           0347 00842000
         AL    @06,@CF00475                                        0347 00843000
         OI    HEXBIT(@06),B'10000000'                             0347 00844000
*   ERRBUF(37:44)                   /* MOVE IN RTN NAME TO           */ 00845000
*       =EXITNM;                    /* HEX DUMP MSG                  */ 00846000
         L     @08,MSGADDR(,@08)                                   0348 00847000
         MVC   ERRBUF+36(8,@08),EXITNM(AEDITCBR)                   0348 00848000
*AMDPSPI3:                                                         0349 00849000
*   GEN(OI  SWD,NOSTDMG);           /* TURN ON NO STANDARD MSG BT    */ 00850000
AMDPSPI3 OI  SWD,NOSTDMG                                                00851000
*   CALL AMDPRSYN;                  /* OUTPUT INFORMATIONAL MSG      */ 00852000
         L     @15,ASYNTAX                                         0350 00853000
         BALR  @14,@15                                             0350 00854000
*   CALL PRHEX;                     /* DUMP ERROR REC IN HEX         */ 00855000
         L     @08,AFRMAD(,AEDITCBR)                               0351 00856000
         L     @15,AHEX(,@08)                                      0351 00857000
         BALR  @14,@15                                             0351 00858000
*   GEN(BRWRITE 2);                 /* SKIP TWO LINES                */ 00859000
         BRWRITE 2                                                      00860000
*NOEDITER:                                                         0353 00861000
*   BLDBUF=PSWMSG;                  /* MOVE PSW INFO MSG TO PRINTER     00862000
*                                      DATA SET                Y02014*/ 00863000
NOEDITER L     @08,CURBUF                                          0353 00864000
         MVI   BLDBUF+78(@08),C' '                                 0353 00865000
         MVC   BLDBUF+79(41,@08),BLDBUF+78(@08)                    0353 00866000
         MVC   BLDBUF(78,@08),PSWMSG                               0353 00867000
*   BLDBUF(61:68)=EXITNM;           /* MOVE MODNM TO PGM CHK MSG     */ 00868000
         MVC   BLDBUF+60(8,@08),EXITNM(AEDITCBR)                   0354 00869000
*   RFY                                                            0355 00870000
*    (WREG6,                                                       0355 00871000
*     WREG7) RSTD;                  /*                         Y02014*/ 00872000
*   WREG6=ADDR(BLDBUF);             /* OBTAIN ADDRS OF BUFFER        */ 00873000
         LA    WREG6,BLDBUF(,@08)                                  0356 00874000
*   WREG7=ADDR(OPSW);               /* OBTAIN ADDRS OF OLD PSW       */ 00875000
         LA    WREG7,OPSW(,PIESAVE)                                0357 00876000
*   GENERATE;                                                      0358 00877000
         LA    WREG6,18(WREG6)          OBTAIN OFFSET ADDRESS           00878000
         HEXCNVT (6),(7),8              CONVERT TO PRINTABLE EBCDIC     00879000
*   WREG6=ADDR(BLDBUF);             /* OBTAIN ADDRS OF BUFFER        */ 00880000
         L     WREG6,CURBUF                                        0359 00881000
         LA    WREG6,BLDBUF(,WREG6)                                0359 00882000
*   WREG7=ADDR(EXITADDR);           /* OBTAIN ADDRS OF ENTRY PT @    */ 00883000
         LA    WREG7,EXITADDR(,AEDITCBR)                           0360 00884000
*   GENERATE;                                                      0361 00885000
         LA    WREG6,72(WREG6)          OFFSET INTO BUFFER              00886000
         LA    WREG7,1(WREG7)         IGNORE HI-ORDER BYTE              00887000
         HEXCNVT (6),(7),3              CONVERT TO PRINTABLE EBCDIC     00888000
         BRWRITE 1                    PRINT LINE AND SPACE 1 LINE       00889000
*   RFY                                                            0362 00890000
*    (WREG6,                                                       0362 00891000
*     WREG7) UNRSTD;                /*                         Y02014*/ 00892000
*   LOCAREA(57:64)=SVRGEF;          /* MOVE REGS 14 AND 15 INTO LOCAL   00893000
*                                      SAVE AREA                     */ 00894000
         MVC   LOCAREA+56(8),SVRGEF(PIESAVE)                       0363 00895000
*   LOCAREA(1:12)=SVRG012;          /* MOVE REGS 0, 1, AND 2 INTO  0364 00896000
*                                      LOCAL SAVE AREA               */ 00897000
         MVC   LOCAREA(12),SVRG012(PIESAVE)                        0364 00898000
*   DATAPTR3=ADDR(LOCAREA);         /* INITIALIZE THE DATA PTR       */ 00899000
         LA    @08,LOCAREA                                         0365 00900000
         ST    @08,DATAPTR3                                        0365 00901000
*   PARMPTR=ADDR(REGLINE1);         /* OBTAIN ADDRS OF FMT PTRN      */ 00902000
         LA    PARMPTR,REGLINE1                                    0366 00903000
*   CALL AMDPRGFR;                  /* FORMAT 1ST LINE OF REGS       */ 00904000
         L     @15,AFMTLINE                                        0367 00905000
         BALR  @14,@15                                             0367 00906000
*   GEN(BRWRITE 1);                 /* PRINT LINE AND SPACE 1 LN     */ 00907000
         BRWRITE 1                                                      00908000
*   DATAPTR4=ADDR(LOCAREA)          /* UPDATE THE DATA PTR           */ 00909000
*       +32;                                                       0369 00910000
         LA    @08,LOCAREA                                         0369 00911000
         AL    @08,@CF00092                                        0369 00912000
         ST    @08,DATAPTR4                                        0369 00913000
*   PARMPTR=ADDR(REGLINE2);         /* OBTAIN ADDRS OF FMT PTRN      */ 00914000
         LA    PARMPTR,REGLINE2                                    0370 00915000
*   CALL AMDPRGFR;                  /* FORMAT 2ND LINE OF REGS       */ 00916000
         L     @15,AFMTLINE                                        0371 00917000
         BALR  @14,@15                                             0371 00918000
*   GEN(BRWRITE SKIP);              /* OUTPUT LINE AND SKIP TO NEW 0372 00919000
*                                      PAGE                          */ 00920000
         BRWRITE SKIP                                                   00921000
*   OPSW(5:8)=ADDR                  /* MODIFY PSW IN PIE TO          */ 00922000
*       (AMDPNSI);                  /* POINT TO AMDPNSI              */ 00923000
         LA    @08,AMDPNSI                                         0373 00924000
         STCM  @08,15,OPSW+4(PIESAVE)                              0373 00925000
*   SPIE='0'B;                      /* TURN OFF SPIE BIT             */ 00926000
         NI    SPIE(AEDITCBR),B'11011111'                          0374 00927000
*   GENERATE;                                                      0375 00928000
         L     AREAPTR,SAVECALL+4       RELOAD REGISTER 13 CONTENTS     00929000
         L     RETPTR,RETSAVE           RELOAD RETURN REGISTER          00930000
         BR    RETPTR                   RETURN TO SYSTEM                00931000
*AMDPNSI:                                                          0376 00932000
*   GENERATE;                                                      0376 00933000
AMDPNSI  DS    0H                                                  0376 00934000
         BALR  R2,R0                    ESTABLISH ADDRESSABILITY        00935000
         USING *,R2                     FOR ERROR RECOVERY              00936000
         L     R6,PICASAVE              OBTAIN PICA ADDRS               00937000
         SPIE  MF=(E,(R6))              RESTORE PREVIOUS PICA           00938000
*   AREAPTR=SPIESAVE;               /* PNT TO SV AREA AMDPRFLT       */ 00939000
         L     AREAPTR,SPIESAVE                                    0377 00940000
*   GENERATE;                                                      0378 00941000
*                                       /* RETURN PROCEDURES         */ 00942000
         LM R14,R12,12(R13)         RESTORE REGISTERS                   00943000
         BR    R14                      RETURN TO AMDPRFLT              00944000
         DROP   R2                                                      00945000
         USING @PSTART,@11                                              00946000
         USING @PSTART+4095,@05                                         00947000
*   END AMDPRDNT;                   /* END OF INTERNAL PROCEDURE     */ 00948000
*                                                                  0379 00949000
         B     @EL00002                                            0379 00950000
*   /*****************************************************************/ 00951000
*   /*                                                               */ 00952000
*   /* THIS SUBROUTINE DETERMINES IF A TIME STAMP RECORD IS TO BE    */ 00953000
*   /* OUTPUTTED BEFORE THE CURRENT TRACE RECORD                     */ 00954000
*   /*                                                               */ 00955000
*   /*****************************************************************/ 00956000
*                                                                  0380 00957000
*AMDTMCHK:                                                         0380 00958000
*   PROC;                           /*                         Y02014*/ 00959000
AMDTMCHK STM   @14,@12,@SA00003                                    0380 00960000
*   DCL                                                            0381 00961000
*     TEMPBUF REG(2) PTR(31);       /* TS RECORD BUFFER        Y02014*/ 00962000
*   IF TS='0'B THEN                 /* TS PENDING              Y02014*/ 00963000
         TM    TS(AEDITCBR),B'10000000'                            0382 00964000
         BZ    @RT00382                                            0382 00965000
*     GOTO AMDEND;                  /* RETURN TO CALLER        Y02014*/ 00966000
*   GEN(BRWRITE 2,IMM);             /* 2 BLNK LINES PRINTED    Y02014*/ 00967000
         BRWRITE 2,IMM                                                  00968000
*   TEMPBUF=CURBUF;                 /* SAVE CURBUF PTR         Y02014*/ 00969000
         L     TEMPBUF,CURBUF                                      0385 00970000
*   CURBUF=ADTSBUF;                 /* PTR TO TS RECORD        Y02014*/ 00971000
         L     @10,ADTSBUF(,AEDITCBR)                              0386 00972000
         ST    @10,CURBUF                                          0386 00973000
*   GEN(BRWRITE 2);                 /* TS AND SPACE OUTPUTTED  Y02014*/ 00974000
         BRWRITE 2                                                      00975000
*   TS='0'B;                        /* TURN OF TS PENDING SWITCH   0388 00976000
*                                                              Y02014*/ 00977000
         NI    TS(AEDITCBR),B'01111111'                            0388 00978000
*   CURBUF=TEMPBUF;                 /* RESTORE CURBUF PTR      Y02014*/ 00979000
         ST    TEMPBUF,CURBUF                                      0389 00980000
*AMDEND:                                                           0390 00981000
*   RETURN;                         /* RETURN TO CALLER        Y02014*/ 00982000
@EL00003 DS    0H                                                  0390 00983000
@EF00003 DS    0H                                                  0390 00984000
@ER00003 LM    @14,@12,@SA00003                                    0390 00985000
         BR    @14                                                 0390 00986000
*   END;                            /* END PROCEDURE           Y02014*/ 00987000
         B     @EL00003                                            0391 00988000
*   END AMDPRAPP                    /* END OF MAIN PROCEDURE         */ 00989000
*                                                                  0392 00990000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */ 00991000
*/*%INCLUDE SYSLIB  (AMDPRTAB)                                       */ 00992000
*/*%INCLUDE SYSLIB  (AMDOPTWD)                                       */ 00993000
*/*%INCLUDE SYSLIB  (IHAABDPL)                                       */ 00994000
*                                                                  0392 00995000
*       ;                                                          0392 00996000
@DATA    DS    0H                                                       00997000
@SM00483 MVC   ITEMPREC(0),INREC(@08)                                   00998000
@SM00485 MVC   ITEMPREC+256(0),INREC+256(@10)                           00999000
         DS    0F                                                       01000000
@SA00001 DS    18F                                                      01001000
@SA00002 DS    15F                                                      01002000
@SA00003 DS    15F                                                      01003000
         DS    0F                                                       01004000
@CF00046 DC    F'1'                                                     01005000
@CF00079 DC    F'2'                                                     01006000
@CF00169 DC    F'3'                                                     01007000
@CF00099 DC    F'4'                                                     01008000
@CF00110 DC    F'6'                                                     01009000
@CF00044 DC    F'8'                                                     01010000
@CF00076 DC    F'12'                                                    01011000
@CF00092 DC    F'32'                                                    01012000
@CF00121 DC    F'256'                                                   01013000
@CF00414 DC    F'257'                                                   01014000
@CF00463 DC    F'-5'                                                    01015000
@CF00475 DC    F'-1'                                                    01016000
         DS    0D                                                       01017000
SPIESAVE DS    A                                                        01018000
NSISAVE  DS    A                                                        01019000
FIDTBPTR DS    A                                                        01020000
INDEX    DS    F                                                        01021000
PICASAVE DS    A                                                        01022000
CODESAVE DS    F                                                        01023000
DISPL    DS    F                                                        01024000
@TS00001 DS    CL1                                                      01025000
@CC00391 DC    C'AMDPRHEX'                                              01026000
         DS    CL3                                                      01027000
SAVECALL DS    CL72                                                     01028000
PLIST    DS    CL32                                                     01029000
         ORG   PLIST                                                    01030000
RECPTR   DS    AL4                                                      01031000
BUFPTR   DS    AL4                                                      01032000
GTFOPTR  DS    AL4                                                      01033000
EIDPTR   DS    AL4                                                      01034000
DATAPTR  DS    AL4                                                      01035000
FRMADDR  DS    AL4                                                      01036000
WKAREADD DS    AL4                                                      01037000
SNAPPARM DS    AL4                                                      01038000
         ORG   PLIST+32                                                 01039000
ITEMPREC DS    CL284                                                    01040000
OTEMPREC DS    CL110                                                    01041000
USRCON   DC    CL6'AMDUSR'                                              01042000
AMDPREF  DC    CL1'A'                                                   01043000
USRCONI  DC    CL6'IMDUSR'                                              01044000
IMDPREF  DC    CL1'I'                                                   01045000
USRCONH  DC    CL6'HMDUSR'                                              01046000
HMDPREF  DC    CL1'H'                                                   01047000
SYSCON   DC    CL6'AMDSYS'                                              01048000
         DS    CL3                                                      01049000
LOCAREA  DS    CL64                                                     01050000
COMP4    DS    CL4                                                      01051000
PSWMSG   DC    CL78'PGM CHECK OLD PSW XXXXXXXX XXXXXXXX.  ENTRY POINT OC01052000
               F MODULE XXXXXXXX IS XXXXXX'                             01053000
BLANK1   DC    CL10'          '                                         01054000
APPPTCH  DC    CL256'APPPTCH'                                           01055000
         DC    CL256' '                                                 01056000
         DC    CL88' '                                                  01057000
         DS    CL4                                                      01058000
DBLWORD  DS    CL8                                                      01059000
SYSTAB   DC    256B'00000000'                                           01060000
USRTABL  DC    X'80'                                                    01061000
         DC    255B'00000000'                                           01062000
AMDPRAPP CSECT                                                          01063000
FMTPTN8  FMTPTRN (LBL,LBLP,DTA,DTAP,DTAC),4,4,10,18,                   *01064000
               TIMELAB,(DATAPTR2,0),LAST                                01065000
TIMELAB  DC    C'TIME'                                                  01066000
FMTPTNF  FMTPTRN (LBL,LBLP,DTA,DTAP,DTAC),4,4,10,18,                   *01067000
               TIMELAB,(DATAPTR1,0),LAST                                01068000
REGLINE1 FMTPTRN (LBL,LBLP,DTA,DTAP,DTAC),5,4,0,7,REG1LAB,             *01069000
               (DATAPTR3,0)                                             01070000
         FMTPTRN (DTA,DTAC),,4,,16,,,                                   01071000
         FMTPTRN (DTA,DTAC),,4,,25,,,                                   01072000
         FMTPTRN (DTA,DTAC),,4,,34,,,                                   01073000
         FMTPTRN (DTA,DTAC),,4,,43,,,                                   01074000
         FMTPTRN (DTA,DTAC),,4,,52,,,                                   01075000
         FMTPTRN (DTA,DTAC),,4,,61,,,                                   01076000
         FMTPTRN (DTA,DTAC),,4,,70,,,LAST                               01077000
REGLINE2 FMTPTRN (LBL,LBLP,DTA,DTAP,DTAC),6,4,0,7,REG2LAB,             *01078000
               (DATAPTR4,0)                                             01079000
         FMTPTRN (DTA,DTAC),,4,,16,,,                                   01080000
         FMTPTRN (DTA,DTAC),,4,,25,,,                                   01081000
         FMTPTRN (DTA,DTAC),,4,,34,,,                                   01082000
         FMTPTRN (DTA,DTAC),,4,,43,,,                                   01083000
         FMTPTRN (DTA,DTAC),,4,,52,,,                                   01084000
         FMTPTRN (DTA,DTAC),,4,,61,,,                                   01085000
         FMTPTRN (DTA,DTAC),,4,,70,,,LAST                               01086000
REG1LAB  DC    C'R0/R7'                                                 01087000
         DS    0F                                                       01088000
REG2LAB  DC    C'R8/R15'                                                01089000
         DS    0F                                                       01090000
USRFMT   FMTPTRN (LBL,LBLP,DTA,DTAP,DTAC),3,2,0,5,USRLAB,              *01091000
               (DATAPTR5,0)                                             01092000
         FMTPTRN (LBL,LBLP,DTA,DTAP,DTAC),4,4,10,15,                   *01093000
               ASCBLAB,(ASCBPTR,0)                                      01094000
         FMTPTRN (LBL,LBLP,DTA,DTAP,DTAC,DTAE),4,8,25,30,              *01095000
               JOBNLAB,(JOBNPTR,0),LAST                                 01096000
         DS    0F                                                       01097000
USRLAB   DC    C'USR'                                                   01098000
         DS    0F                                                       01099000
ASCBLAB  DC    C'ASCB'                                                  01100000
JOBNLAB  DC    C'JOBN'                                                  01101000
AMDPRAPP CSECT                                                          01102000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       01103000
@01      EQU   01                                                       01104000
@02      EQU   02                                                       01105000
@03      EQU   03                                                       01106000
@04      EQU   04                                                       01107000
@05      EQU   05                                                       01108000
@06      EQU   06                                                       01109000
@07      EQU   07                                                       01110000
@08      EQU   08                                                       01111000
@09      EQU   09                                                       01112000
@10      EQU   10                                                       01113000
@11      EQU   11                                                       01114000
@12      EQU   12                                                       01115000
@13      EQU   13                                                       01116000
@14      EQU   14                                                       01117000
@15      EQU   15                                                       01118000
PIESAVE  EQU   @10                                                      01119000
LDSW     EQU   @10                                                      01120000
RETSAVE  EQU   @04                                                      01121000
ABDPLPTR EQU   @04                                                      01122000
AEDITCBR EQU   @09                                                      01123000
COMPTR   EQU   @12                                                      01124000
AREAPTR  EQU   @13                                                      01125000
PARMPTR  EQU   @01                                                      01126000
CODEREG  EQU   @15                                                      01127000
REG2     EQU   @02                                                      01128000
SPIEREG  EQU   @02                                                      01129000
RETPTR   EQU   @14                                                      01130000
WREG6    EQU   @06                                                      01131000
WREG7    EQU   @07                                                      01132000
TEMPBUF  EQU   @02                                                      01133000
         ENTRY APPPTCH                                                  01134000
         ENTRY AMDPRSPI                                                 01135000
         ENTRY SPIESAVE                                                 01136000
         ENTRY NSISAVE                                                  01137000
         ENTRY PICASAVE                                                 01138000
AMDPRTAB EQU   0                                                        01139000
AFMG     EQU   AMDPRTAB                                                 01140000
CURREC   EQU   AMDPRTAB+4                                               01141000
DEBGFLGS EQU   AMDPRTAB+8                                               01142000
PTHFLGS1 EQU   DEBGFLGS                                                 01143000
REXT     EQU   PTHFLGS1                                                 01144000
PTHFLGS2 EQU   DEBGFLGS+1                                               01145000
APP      EQU   PTHFLGS2                                                 01146000
INRFCFGS EQU   DEBGFLGS+2                                               01147000
TERM     EQU   INRFCFGS                                                 01148000
SPIE     EQU   INRFCFGS                                                 01149000
RET      EQU   INRFCFGS                                                 01150000
IOFLGS   EQU   DEBGFLGS+3                                               01151000
GTFWDPTR EQU   AMDPRTAB+20                                              01152000
USEREXIT EQU   AMDPRTAB+24                                              01153000
DDNAME   EQU   AMDPRTAB+32                                              01154000
STARTIME EQU   AMDPRTAB+40                                              01155000
STOPTIME EQU   AMDPRTAB+52                                              01156000
NAMES    EQU   AMDPRTAB+64                                              01157000
ADS      EQU   AMDPRTAB+104                                             01158000
AADS     EQU   ADS                                                      01159000
SIF      EQU   AMDPRTAB+124                                             01160000
SIOFLGS  EQU   SIF                                                      01161000
DVADS1   EQU   AMDPRTAB+128                                             01162000
IO       EQU   AMDPRTAB+228                                             01163000
IOFLGS2  EQU   IO                                                       01164000
DVADS2   EQU   AMDPRTAB+232                                             01165000
VCF      EQU   AMDPRTAB+332                                             01166000
SVCFLGS  EQU   VCF                                                      01167000
USR      EQU   AMDPRTAB+368                                             01168000
USRFLGS  EQU   USR                                                      01169000
USRTAB   EQU   AMDPRTAB+372                                             01170000
PI       EQU   AMDPRTAB+452                                             01171000
PIFLGS   EQU   PI                                                       01172000
PGMNGEN  EQU   AMDPRTAB+456                                             01173000
GENFLAGS EQU   PGMNGEN+3                                                01174000
GENFLGS1 EQU   AMDPRTAB+460                                             01175000
TS       EQU   GENFLGS1                                                 01176000
EOFINPRO EQU   GENFLGS1                                                 01177000
RECDLL   EQU   AMDPRTAB+461                                             01178000
EXITNM   EQU   AMDPRTAB+464                                             01179000
EXITADDR EQU   AMDPRTAB+472                                             01180000
PRFMTADD EQU   AMDPRTAB+480                                             01181000
REENTWKA EQU   AMDPRTAB+484                                             01182000
AFRMAD   EQU   AMDPRTAB+488                                             01183000
OFSTEID  EQU   AMDPRTAB+492                                             01184000
OFSTDATA EQU   AMDPRTAB+494                                             01185000
ADTSBUF  EQU   AMDPRTAB+496                                             01186000
ESTARTME EQU   AMDPRTAB+500                                             01187000
ESTOPTME EQU   AMDPRTAB+509                                             01188000
AMDOPTWD EQU   0                                                        01189000
OPTS1    EQU   AMDOPTWD                                                 01190000
OPTS2    EQU   AMDOPTWD+1                                               01191000
OPTS3    EQU   AMDOPTWD+2                                               01192000
OPTS4    EQU   AMDOPTWD+3                                               01193000
OPTTIME  EQU   OPTS4                                                    01194000
ABDPL    EQU   0                                                        01195000
ADPLSBPL EQU   ABDPL+6                                                  01196000
ADPLFLAG EQU   ABDPL+7                                                  01197000
ADPLBUF  EQU   ABDPL+8                                                  01198000
ADPLFRMT EQU   ABDPL+24                                                 01199000
FRMATAB  EQU   0                                                        01200000
AGET     EQU   FRMATAB                                                  01201000
AHEX     EQU   FRMATAB+4                                                01202000
ACON     EQU   FRMATAB+8                                                01203000
AFLT     EQU   FRMATAB+12                                               01204000
AAPP     EQU   FRMATAB+16                                               01205000
AEXT     EQU   FRMATAB+20                                               01206000
ASPI     EQU   FRMATAB+28                                               01207000
ATME     EQU   FRMATAB+32                                               01208000
PRHEX    EQU   0                                                        01209000
PRTME    EQU   0                                                        01210000
FIDTAB   EQU   0                                                        01211000
HEXBIT   EQU   FIDTAB                                                   01212000
WHOUSED  EQU   FIDTAB                                                   01213000
HMDUSED  EQU   WHOUSED                                                  01214000
IMDUSED  EQU   WHOUSED                                                  01215000
ERRBIT   EQU   FIDTAB                                                   01216000
PREFIXMP EQU   0                                                        01217000
INREC    EQU   0                                                        01218000
WKAREA   EQU   0                                                        01219000
USRINFO  EQU   11                                                       01220000
AMDPRSEG EQU   0                                                        01221000
AMDPRSYN EQU   0                                                        01222000
MSGADDR  EQU   0                                                        01223000
ERRBUF   EQU   0                                                        01224000
AMDFMGMS EQU   32                                                       01225000
AMDPRE03 EQU   AMDFMGMS                                                 01226000
AMDPRE04 EQU   AMDFMGMS+4                                               01227000
AMDPRE05 EQU   AMDFMGMS+8                                               01228000
AMDPRE06 EQU   AMDFMGMS+12                                              01229000
AMDPRE07 EQU   AMDFMGMS+16                                              01230000
AMDPRE12 EQU   AMDFMGMS+24                                              01231000
USERRTN  EQU   0                                                        01232000
AMDPRGFR EQU   0                                                        01233000
BLDBUF   EQU   1                                                        01234000
PIE      EQU   0                                                        01235000
OPSW     EQU   PIE+4                                                    01236000
SVRGEF   EQU   PIE+12                                                   01237000
SVRG012  EQU   PIE+20                                                   01238000
SVAREA   EQU   4                                                        01239000
PRAPP    EQU   0                                                        01240000
PRCON    EQU   0                                                        01241000
PREXT    EQU   0                                                        01242000
PRFLT    EQU   0                                                        01243000
PRGET    EQU   0                                                        01244000
PRSPI    EQU   0                                                        01245000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    01246000
PICAAD   EQU   PIE+1                                                    01247000
PIERES   EQU   PIE                                                      01248000
AMDPRE11 EQU   AMDFMGMS+20                                              01249000
RECTIME  EQU   PREFIXMP+6                                               01250000
RECFID   EQU   PREFIXMP+5                                               01251000
RECAID   EQU   PREFIXMP+4                                               01252000
RECRES1  EQU   PREFIXMP+2                                               01253000
RECLL    EQU   PREFIXMP                                                 01254000
NOUSE2   EQU   FIDTAB                                                   01255000
RESVRD   EQU   FIDTAB                                                   01256000
FRMRES1  EQU   FRMATAB+36                                               01257000
APRFMG   EQU   FRMATAB+24                                               01258000
ADPLEXT  EQU   ABDPL+52                                                 01259000
ADPLFMT2 EQU   ABDPL+48                                                 01260000
ADPLFMT1 EQU   ABDPL+44                                                 01261000
ADPLCOM4 EQU   ABDPL+40                                                 01262000
ADPLCOM3 EQU   ABDPL+36                                                 01263000
ADPLCOM2 EQU   ABDPL+32                                                 01264000
ADPLCOM1 EQU   ABDPL+28                                                 01265000
ADPLMEMA EQU   ABDPL+20                                                 01266000
ADPLCVT  EQU   ABDPL+16                                                 01267000
ADPLPRNT EQU   ABDPL+12                                                 01268000
@NM00002 EQU   ADPLFLAG                                                 01269000
ADPLSYTM EQU   ADPLFLAG                                                 01270000
ADPLSNPR EQU   ADPLFLAG                                                 01271000
ADPLASID EQU   ABDPL+4                                                  01272000
ADPLTCB  EQU   ABDPL                                                    01273000
OPTRES3  EQU   OPTS4                                                    01274000
OPTIOSIO EQU   OPTS3                                                    01275000
OPTRES2  EQU   OPTS3                                                    01276000
OPTRR    EQU   OPTS3                                                    01277000
OPTSRM   EQU   OPTS3                                                    01278000
OPTRNIO  EQU   OPTS3                                                    01279000
OPTEXT   EQU   OPTS3                                                    01280000
OPTIOP   EQU   OPTS2                                                    01281000
OPTIO    EQU   OPTS2                                                    01282000
OPTPIP   EQU   OPTS2                                                    01283000
OPTPI    EQU   OPTS2                                                    01284000
OPTSIOP  EQU   OPTS2                                                    01285000
OPTSIO   EQU   OPTS2                                                    01286000
OPTSVCP  EQU   OPTS2                                                    01287000
OPTSVC   EQU   OPTS2                                                    01288000
OPTPCI   EQU   OPTS1                                                    01289000
OPTRES1  EQU   OPTS1                                                    01290000
OPTDSP   EQU   OPTS1                                                    01291000
OPTTRC   EQU   OPTS1                                                    01292000
OPTUSR   EQU   OPTS1                                                    01293000
OPTSYS   EQU   OPTS1                                                    01294000
OPTSYSP  EQU   OPTS1                                                    01295000
OPTSYSM  EQU   OPTS1                                                    01296000
RESERVED EQU   AMDPRTAB+522                                             01297000
CVTTZONE EQU   AMDPRTAB+518                                             01298000
ESPSEC   EQU   ESTOPTME+7                                               01299000
ESPMIN   EQU   ESTOPTME+5                                               01300000
ESPHR    EQU   ESTOPTME+3                                               01301000
ESPDAY   EQU   ESTOPTME                                                 01302000
ESSEC    EQU   ESTARTME+7                                               01303000
ESMIN    EQU   ESTARTME+5                                               01304000
ESHR     EQU   ESTARTME+3                                               01305000
ESDAY    EQU   ESTARTME                                                 01306000
AEIOCT   EQU   AMDPRTAB+476                                             01307000
@NM00001 EQU   GENFLGS1                                                 01308000
FIRSTHSW EQU   GENFLGS1                                                 01309000
TSFOUND  EQU   GENFLGS1                                                 01310000
EOF      EQU   GENFLAGS                                                 01311000
RR       EQU   GENFLAGS                                                 01312000
SRM      EQU   GENFLAGS                                                 01313000
RNIO     EQU   GENFLAGS                                                 01314000
SYSM     EQU   GENFLAGS                                                 01315000
SYS      EQU   GENFLAGS                                                 01316000
DSP      EQU   GENFLAGS                                                 01317000
EXT      EQU   GENFLAGS                                                 01318000
PICODEA  EQU   PGMNGEN+2                                                01319000
PICODES  EQU   PGMNGEN                                                  01320000
Q        EQU   PI+1                                                     01321000
P01R     EQU   PIFLGS                                                   01322000
SELP     EQU   PIFLGS                                                   01323000
ALLP     EQU   PIFLGS                                                   01324000
USRNGTAB EQU   USRTAB                                                   01325000
O        EQU   USR+1                                                    01326000
N01R     EQU   USRFLGS                                                  01327000
SELU     EQU   USRFLGS                                                  01328000
ALLU     EQU   USRFLGS                                                  01329000
SVCNUMS  EQU   AMDPRTAB+336                                             01330000
M        EQU   VCF+1                                                    01331000
L        EQU   SVCFLGS                                                  01332000
SELV     EQU   SVCFLGS                                                  01333000
ALLV     EQU   SVCFLGS                                                  01334000
IODVADS  EQU   DVADS2                                                   01335000
K01RES   EQU   IO+1                                                     01336000
JJ       EQU   IOFLGS2                                                  01337000
SELI     EQU   IOFLGS2                                                  01338000
ALLI     EQU   IOFLGS2                                                  01339000
SIODVADS EQU   DVADS1                                                   01340000
II       EQU   SIF+1                                                    01341000
H        EQU   SIOFLGS                                                  01342000
NOEQU    EQU   SIOFLGS                                                  01343000
EQUIV    EQU   SIOFLGS                                                  01344000
SELS     EQU   SIOFLGS                                                  01345000
ALLS     EQU   SIOFLGS                                                  01346000
ASCBADDR EQU   AADS                                                     01347000
JOBNAMES EQU   NAMES                                                    01348000
DAY2     EQU   STOPTIME+10                                              01349000
F        EQU   STOPTIME+8                                               01350000
TIME2    EQU   STOPTIME                                                 01351000
DAY      EQU   STARTIME+10                                              01352000
D        EQU   STARTIME+8                                               01353000
TIME     EQU   STARTIME                                                 01354000
C        EQU   DEBGFLGS+4                                               01355000
B        EQU   IOFLGS                                                   01356000
GETEOF   EQU   IOFLGS                                                   01357000
DMDFMT   EQU   INRFCFGS                                                 01358000
EDITSTOP EQU   INRFCFGS                                                 01359000
EXTTRC   EQU   INRFCFGS                                                 01360000
FMT      EQU   INRFCFGS                                                 01361000
FLMODE   EQU   INRFCFGS                                                 01362000
REMAIN   EQU   PTHFLGS2                                                 01363000
FRM      EQU   PTHFLGS1                                                 01364000
FLT      EQU   PTHFLGS1                                                 01365000
HEX      EQU   PTHFLGS1                                                 01366000
CON      EQU   PTHFLGS1                                                 01367000
GET      EQU   PTHFLGS1                                                 01368000
SCN      EQU   PTHFLGS1                                                 01369000
ROOT     EQU   PTHFLGS1                                                 01370000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      01371000
@RT00108 EQU   AMDPRTN                                                  01372000
@RT00120 EQU   AMDPLOAD                                                 01373000
@RT00122 EQU   USEHMD                                                   01374000
@RT00133 EQU   AMDPAPP5                                                 01375000
@RF00143 EQU   AMDPAPP4                                                 01376000
@RT00174 EQU   AMDPHDMP                                                 01377000
@RT00202 EQU   AMDNOSPI                                                 01378000
@RT00227 EQU   AMDPRTN                                                  01379000
@RT00257 EQU   AMDPERR                                                  01380000
@RT00281 EQU   @EL00002                                                 01381000
@RT00283 EQU   AMDPDNT1                                                 01382000
@RF00297 EQU   @EL00002                                                 01383000
@RF00301 EQU   @EL00002                                                 01384000
@RT00319 EQU   NOEDITER                                                 01385000
@RT00322 EQU   AMDPSPI1                                                 01386000
@RT00324 EQU   AMDPSPI2                                                 01387000
@RF00328 EQU   AMDPSPI3                                                 01388000
AMDEND   EQU   @EL00003                                                 01389000
@RT00382 EQU   AMDEND                                                   01390000
@ENDDATA EQU   *                                                        01391000
         END   AMDPRAPP,(C'PLS2041',0603,74298)                         01392000
./  ADD  SSI=72550017,NAME=AMDPREID
         TITLE 'SYMBOLIC USER EID TABLE                                *00001000
                        '                                               00002000
AMDPREID CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL1(16)                                             0001 00007000
         DC    C'AMDPREID  77.255'                                 0001 00008000
         DROP  @15                                                      00009000
@PROLOG  BALR  @12,0                                               0001 00010000
@PSTART  DS    0H                                                  0001 00011000
         USING @PSTART,@12                                         0001 00012000
*   END AMDPREID;                   /*                         Y02014*/ 00013000
@EL00001 DS    0H                                                  0003 00014000
@EF00001 DS    0H                                                  0003 00015000
@ER00001 BR    @14                                                 0003 00016000
@DATA    DS    0H                                                       00017000
         DS    0F                                                       00018000
         DS    0F                                                       00019000
         DS    0D                                                       00020000
AMDPRS01 DS    CL8                                                      00021000
         ORG   AMDPRS01+0                                               00022000
@NM00001 DS    CL8                                                      00023000
         ORG   @NM00001+0                                               00024000
EIDNAM0  DC    CL4'DMA1'                                                00025000
LRANGE0  DC    H'4095'                                                  00026000
HRANGE0  DC    H'4095'                                                  00027000
         ORG   AMDPRS01+8                                               00028000
         ORG   AMDPRS01+8                                               00029000
         ORG   @NM00001+8                                               00030000
         DC    CL4'AM01'                                                00031000
         DC    XL2'FF5'                                                 00032000
         DC    XL2'FF5'                                                 00033000
         ORG   AMDPRS01+16                                              00034000
         ORG   AMDPRS01+16                                              00035000
         ORG   @NM00001+16                                              00036000
         DC    CL4'SPDB'                                                00037000
         DC    XL2'FFE'                                                 00038000
         DC    XL2'FFE'                                                 00039000
         ORG   AMDPRS01+24                                              00040000
         ORG   AMDPRS01+24                                              00041000
         ORG   @NM00001+24                                              00042000
         DC    CL4'SPDA'                                                00043000
         DC    XL2'FFD'                                                 00044000
         DC    XL2'FFD'                                                 00045000
         ORG   AMDPRS01+32                                              00046000
         ORG   AMDPRS01+32                                              00047000
         ORG   @NM00001+32                                              00048000
         DC    CL4'SPD9'                                                00049000
         DC    XL2'FFC'                                                 00050000
         DC    XL2'FFC'                                                 00051000
         ORG   AMDPRS01+40                                              00052000
         ORG   AMDPRS01+40                                              00053000
         ORG   @NM00001+40                                              00054000
         DC    CL4'SPD8'                                                00055000
         DC    XL2'FFB'                                                 00056000
         DC    XL2'FFB'                                                 00057000
         ORG   AMDPRS01+48                                              00058000
         ORG   AMDPRS01+48                                              00059000
         ORG   @NM00001+48                                              00060000
         DC    CL4'SPD7'                                                00061000
         DC    XL2'FFA'                                                 00062000
         DC    XL2'FFA'                                                 00063000
         ORG   AMDPRS01+56                                              00064000
         ORG   AMDPRS01+56                                              00065000
         ORG   @NM00001+56                                              00066000
         DC    CL4'SPD6'                                                00067000
         DC    XL2'FF9'                                                 00068000
         DC    XL2'FF9'                                                 00069000
         ORG   AMDPRS01+64                                              00070000
         ORG   AMDPRS01+64                                              00071000
         ORG   @NM00001+64                                              00072000
         DC    CL4'SPD5'                                                00073000
         DC    XL2'FF8'                                                 00074000
         DC    XL2'FF8'                                                 00075000
         ORG   AMDPRS01+72                                              00076000
         ORG   AMDPRS01+72                                              00077000
         ORG   @NM00001+72                                              00078000
         DC    CL4'SPD4'                                                00079000
         DC    XL2'FF7'                                                 00080000
         DC    XL2'FF7'                                                 00081000
         ORG   AMDPRS01+80                                              00082000
         ORG   AMDPRS01+80                                              00083000
         ORG   @NM00001+80                                              00084000
         DC    CL4'SPD3'                                                00085000
         DC    XL2'FF6'                                                 00086000
         DC    XL2'FF6'                                                 00087000
         ORG   AMDPRS01+88                                              00088000
         ORG   AMDPRS01+88                                              00089000
         ORG   @NM00001+88                                              00090000
         DC    CL4'SPD2'                                                00091000
         DC    XL2'FF4'                                                 00092000
         DC    XL2'FF4'                                                 00093000
         ORG   AMDPRS01+96                                              00094000
         ORG   AMDPRS01+96                                              00095000
         ORG   @NM00001+96                                              00096000
         DC    CL4'APD1'                                                00097000
         DC    XL2'FF3'                                                 00098000
         DC    XL2'FF3'                                                 00099000
         ORG   AMDPRS01+104                                             00100000
         ORG   AMDPRS01+104                                             00101000
         ORG   @NM00001+104                                             00102000
         DC    CL4'LINE'                                                00103000
         DC    XL2'FF2'                                                 00104000
         DC    XL2'FF2'                                                 00105000
         ORG   AMDPRS01+112                                             00106000
         ORG   AMDPRS01+112                                             00107000
         ORG   @NM00001+112                                             00108000
         DC    CL4'CL01'                                                00109000
         DC    XL2'FF1'                                                 00110000
         DC    XL2'FF1'                                                 00111000
         ORG   AMDPRS01+120                                             00112000
         ORG   AMDPRS01+120                                             00113000
         ORG   @NM00001+120                                             00114000
         DC    CL4'CL02'                                                00115000
         DC    XL2'FF0'                                                 00116000
         DC    XL2'FF0'                                                 00117000
         ORG   AMDPRS01+128                                             00118000
         ORG   AMDPRS01+128                                             00119000
         ORG   @NM00001+128                                             00120000
         DC    CL4'TPIO'                                                00121000
         DC    XL2'FEF'                                                 00122000
         DC    XL2'FEF'                                                 00123000
         ORG   AMDPRS01+136                                             00124000
         ORG   AMDPRS01+136                                             00125000
         ORG   @NM00001+136                                             00126000
         DC    CL4'INT1'                                                00127000
         DC    XL2'FE1'                                                 00128000
         DC    XL2'FE1'                                                 00129000
         ORG   AMDPRS01+144                                             00130000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       00131000
@01      EQU   01                                                       00132000
@02      EQU   02                                                       00133000
@03      EQU   03                                                       00134000
@04      EQU   04                                                       00135000
@05      EQU   05                                                       00136000
@06      EQU   06                                                       00137000
@07      EQU   07                                                       00138000
@08      EQU   08                                                       00139000
@09      EQU   09                                                       00140000
@10      EQU   10                                                       00141000
@11      EQU   11                                                       00142000
@12      EQU   12                                                       00143000
@13      EQU   13                                                       00144000
@14      EQU   14                                                       00145000
@15      EQU   15                                                       00146000
         ENTRY AMDPRS01                                                 00147000
@ENDDATA EQU   *                                                        00148000
         END   AMDPREID,(C'PLS0950',0701,77255)                         00149000
./  ADD  SSI=50490024,NAME=AMDPREXT
         TITLE 'AMDPREXT - EDIT USER EXIT INTERFACE MODULE             *00001000
                        '                                               00002000
AMDPREXT CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL1(16)                                             0001 00007000
         DC    C'AMDPREXT  75.049'                                 0001 00008000
         DROP  @15                                                      00009000
@PROLOG  STM   @14,@12,12(@13)                                     0001 00010000
         BALR  @11,0                                               0001 00011000
@PSTART  DS    0H                                                  0001 00012000
         USING @PSTART,@11                                         0001 00013000
         ST    @13,@SA00001+4                                      0001 00014000
         LA    @14,@SA00001                                        0001 00015000
         ST    @14,8(,@13)                                         0001 00016000
         LR    @13,@14                                             0001 00017000
         EQUATES                        AMDPRDMP EQU MACRO              00018000
         COMMON                         EXPANDS TO AMDPRCOM TABLE       00019000
         USING COMMON,COMBASE           SET UP DSECT FOR AMDPRCOM       00020000
         SYNEPS                         EP MAP OF AMDPRSYN              00021000
AMDPREXT CSECT                          RE-ESTABLISH AMDPREXT CSECT     00022000
         USING SYNTAX,R15               ESTABLISH SYNEPS ADDRESSING     00023000
*   AEDITCBR=AEDITCB;               /* SET BASE FOR AMDPRTAB         */ 00024000
         L     AEDITCBR,AEDITCB                                    0054 00025000
*   REXT='1'B;                      /* INDICATE AMDPREXT NOW       0055 00026000
*                                      PROCESSING                    */ 00027000
         OI    REXT(AEDITCBR),B'00000001'                          0055 00028000
*   SPIESAVE=SVAREA;                /* FOR SPIE RECOVERY             */ 00029000
         L     @14,@CA00211                                        0056 00030000
         L     @10,SVAREA(,AREAPTR)                                0056 00031000
         ST    @10,SPIESAVE-SPIESAVE(,@14)                         0056 00032000
*   NSISAVE=COMPTR;                 /* SAVE ADDRS OF AMDPRCOM        */ 00033000
         L     @14,@CA00212                                        0057 00034000
         ST    COMPTR,NSISAVE-NSISAVE(,@14)                        0057 00035000
*   PARMREG=ADDR(USEREXIT);         /* COMPLIMENT ADDRS OF USER EXIT    00036000
*                                      NAME                          */ 00037000
         LA    PARMREG,USEREXIT(,AEDITCBR)                         0058 00038000
*   PARMREG=PARMREG|'80000000'X;    /* TURN ON HIGH ORDER BIT        */ 00039000
         O     PARMREG,@CF00262                                    0059 00040000
*   CALL AMDPRSEG;                  /* ATTEMPT TO HAVE USER EXIT   0060 00041000
*                                      LOADED                        */ 00042000
         L     @15,ALOADER                                         0060 00043000
         BALR  @14,@15                                             0060 00044000
*   CODESAVE=RCREG;                 /* SAVE RETURN CODE FROM SEG     */ 00045000
         ST    RCREG,CODESAVE                                      0061 00046000
*   IF CODESAVE=4 THEN                                             0062 00047000
         L     @14,CODESAVE                                        0062 00048000
         C     @14,@CF00097                                        0062 00049000
         BNE   @RF00062                                            0062 00050000
*     DO;                           /* SEG - NOT 10 K AVAILIBLE      */ 00051000
*       SYNMSGA=ADDR(AMDPRE12);     /* ADDR OF MSG AMD229I           */ 00052000
         L     @14,AFMG(,AEDITCBR)                                 0064 00053000
         LA    @14,AMDPRE12(,@14)                                  0064 00054000
         ST    @14,SYNMSGA                                         0064 00055000
*       ERRBUF(20:27)=USEREXIT;     /* MOVE IN RTN NAME              */ 00056000
         L     @14,MSGADDR(,@14)                                   0065 00057000
         MVC   ERRBUF+19(8,@14),USEREXIT(AEDITCBR)                 0065 00058000
*       GEN(OI SWD,NOSTDMG);        /* TURN ON NO STND MSG BIT       */ 00059000
         OI SWD,NOSTDMG                                                 00060000
*       RCREG=ASYNTAX;              /* POINT TO MSG WRITER -SYN      */ 00061000
         L     RCREG,ASYNTAX                                       0067 00062000
*       CALL SYNTAXA;               /* OUTPUT 10 K MSG               */ 00063000
         BAL   @14,SYNTAXA                                         0068 00064000
*     END;                                                         0069 00065000
*   SYNMSGA=ADDR(AMDPRE03);         /* INIT MESSAGE POINTER - SET UP    00066000
*                                      AFTER CALL TO SEG WILL CLOBBER   00067000
*                                      SYNMSGA                       */ 00068000
@RF00062 L     @14,AFMG(,AEDITCBR)                                 0070 00069000
         LA    @14,AMDPRE03(,@14)                                  0070 00070000
         ST    @14,SYNMSGA                                         0070 00071000
*   IF CODESAVE¬=0 THEN             /* UNSUCCESSFUL LOAD- BRANCH     */ 00072000
         L     @14,CODESAVE                                        0071 00073000
         LTR   @14,@14                                             0071 00074000
         BNZ   @RT00071                                            0071 00075000
*     GOTO AMDEXT01;                /* TO TERMINATION ROUTINE        */ 00076000
*/********************************************************************/ 00077000
*/*                                                                  */ 00078000
*/* USER EXIT SUCCESSFULLY LOADED OR ALREADY IN CORE                 */ 00079000
*/*                                                                  */ 00080000
*/********************************************************************/ 00081000
*                                                                  0073 00082000
*   EXITADDR=PARMREG;               /* SAVE USER EXIT ENTRY POINT  0073 00083000
*                                      ADDRESS                       */ 00084000
         ST    PARMREG,EXITADDR(,AEDITCBR)                         0073 00085000
*   EXITNM=USEREXIT;                /* SAVE USER EXIT NAME           */ 00086000
         MVC   EXITNM(8,AEDITCBR),USEREXIT(AEDITCBR)               0074 00087000
*AMDPNLOD:                                                         0075 00088000
*   IF EOFINPRO='1'B THEN           /* EOF IN PROCESS          Y02014*/ 00089000
AMDPNLOD TM    EOFINPRO(AEDITCBR),B'01000000'                      0075 00090000
         BNO   @RF00075                                            0075 00091000
*     DO;                           /* YES                     Y02014*/ 00092000
*       RECPTR=0;                   /* NO INPUT RECORD         Y02014*/ 00093000
         SLR   @14,@14                                             0077 00094000
         ST    @14,RECPTR                                          0077 00095000
*       BUFPTR=CURBUF+1;            /* ADDR OUTPUT BUFF        Y02014*/ 00096000
         LA    @10,1                                               0078 00097000
         AL    @10,CURBUF                                          0078 00098000
         ST    @10,BUFPTR                                          0078 00099000
*       GTFOPTR=0;                  /* ADDR GTF OPT WD         Y02014*/ 00100000
         ST    @14,GTFOPTR                                         0079 00101000
*       EIDPTR=0;                   /* NO EID PTR              Y02014*/ 00102000
         ST    @14,EIDPTR                                          0080 00103000
*       DATAPTR=0;                  /* NO DATA PTR             Y02014*/ 00104000
         ST    @14,DATAPTR                                         0081 00105000
*       GO TO AMDPCAL;              /* GO CALL USER            Y02014*/ 00106000
         B     AMDPCAL                                             0082 00107000
*     END;                          /* END OF DO               Y02014*/ 00108000
*   TEMPREC(1:256)='';              /* CLEAR TEMPORARY BUF     Y02014*/ 00109000
@RF00075 MVI   TEMPREC,C' '                                        0084 00110000
         MVC   TEMPREC+1(255),TEMPREC                              0084 00111000
*   TEMPREC(257:284)='';            /* CLEAR REMAINDER         Y02014*/ 00112000
         MVI   TEMPREC+256,C' '                                    0085 00113000
         MVC   TEMPREC+257(27),TEMPREC+256                         0085 00114000
*   IF RECDLL<=256 THEN             /* NEED 2 MOVES            Y02014*/ 00115000
         L     @14,RECDLL-1(,AEDITCBR)                             0086 00116000
         LA    @14,0(,@14)                                         0086 00117000
         C     @14,@CF00119                                        0086 00118000
         BH    @RF00086                                            0086 00119000
*     TEMPREC(1:RECDLL)=RECBASE(1:RECDLL);/* NO                Y02014*/ 00120000
         BCTR  @14,0                                               0087 00121000
         L     @10,CURREC(,AEDITCBR)                               0087 00122000
         EX    @14,@SM00313                                        0087 00123000
*   ELSE                                                           0088 00124000
*     DO;                           /* YES                     Y02014*/ 00125000
         B     @RC00086                                            0088 00126000
@RF00086 DS    0H                                                  0089 00127000
*       TEMPREC(1:256)=RECBASE(1:256);/* MOVE IN 256 BYTES     Y02014*/ 00128000
         L     @14,CURREC(,AEDITCBR)                               0089 00129000
         MVC   TEMPREC(256),RECBASE(@14)                           0089 00130000
*       TEMPREC(257:RECDLL)=RECBASE(257:RECDLL);/* MOVE REMAINDER    */ 00131000
         L     @10,RECDLL-1(,AEDITCBR)                             0090 00132000
         LA    @10,0(,@10)                                         0090 00133000
         SL    @10,@CF00270                                        0090 00134000
         EX    @10,@SM00315                                        0090 00135000
*     END;                          /*                         Y02014*/ 00136000
*/********************************************************************/ 00137000
*/*                                                                  */ 00138000
*/* CONSTRUCT PARAMETER LIST                                         */ 00139000
*/*                                                                  */ 00140000
*/********************************************************************/ 00141000
*                                                                  0092 00142000
*   RECPTR=ADDR(TEMPREC);           /* WORD 1- ADDRS INPUT REC       */ 00143000
@RC00086 LA    @14,TEMPREC                                         0092 00144000
         ST    @14,RECPTR                                          0092 00145000
*   BUFPTR=CURBUF+1;                /* WORD 2- ADDRS OUTPUT BUF      */ 00146000
         LA    @10,1                                               0093 00147000
         AL    @10,CURBUF                                          0093 00148000
         ST    @10,BUFPTR                                          0093 00149000
*   GTFOPTR=GTFWDPTR;               /* WORD 3- ADDRS GTF OPTIONS   0094 00150000
*                                                              Y02014*/ 00151000
         L     @10,GTFWDPTR(,AEDITCBR)                             0094 00152000
         ST    @10,GTFOPTR                                         0094 00153000
*   EIDPTR=RECPTR+OFSTEID-1;        /* WORD 4- ADDRS EID INP REC     */ 00154000
         LH    @10,OFSTEID(,AEDITCBR)                              0095 00155000
         LR    @08,@14                                             0095 00156000
         ALR   @08,@10                                             0095 00157000
         BCTR  @08,0                                               0095 00158000
         ST    @08,EIDPTR                                          0095 00159000
*   IF(INREC(OFSTEID)&'F0'X)='E0'X THEN/*                    @YM07434*/ 00160000
         L     @08,CURREC(,AEDITCBR)                               0096 00161000
         ALR   @08,@10                                             0096 00162000
         AL    @08,@CF00317                                        0096 00163000
         MVC   @TS00001(1),INREC(@08)                              0096 00164000
         NI    @TS00001,X'F0'                                      0096 00165000
         CLI   @TS00001,X'E0'                                      0096 00166000
         BNE   @RF00096                                            0096 00167000
*     DATAPTR=RECPTR+OFSTDATA+11;   /* WORD 5-ADDRS DATA INP REC   0097 00168000
*                                                            @YM07434*/ 00169000
         AH    @14,OFSTDATA(,AEDITCBR)                             0097 00170000
         AL    @14,@CF00273                                        0097 00171000
         ST    @14,DATAPTR                                         0097 00172000
*   ELSE                                                           0098 00173000
*     DATAPTR=RECPTR+OFSTDATA-1;    /* WORD 5 DATA @ INP REC @ZA02752*/ 00174000
         B     @RC00096                                            0098 00175000
@RF00096 LH    @14,OFSTDATA(,AEDITCBR)                             0098 00176000
         AL    @14,RECPTR                                          0098 00177000
         BCTR  @14,0                                               0098 00178000
         ST    @14,DATAPTR                                         0098 00179000
*/********************************************************************/ 00180000
*/*                                                                  */ 00181000
*/* PREPARE TO CALL USER EXIT                                        */ 00182000
*/*                                                                  */ 00183000
*/********************************************************************/ 00184000
*                                                                  0099 00185000
*AMDPCAL:                                                          0099 00186000
*   IF EDITER¬=3 THEN                                              0099 00187000
@RC00096 DS    0H                                                  0099 00188000
AMDPCAL  CLI   EDITER,3                                            0099 00189000
         BE    @RF00099                                            0099 00190000
*     DO;                           /* ISSUE INCLUSIVE SPIE TO MASK     00191000
*                                      OUT USER PROGRAM CHECKS       */ 00192000
*       WREG2=ASPI;                 /* ADDRS OF AMDPRSPI             */ 00193000
         L     @14,AFRMAD(,AEDITCBR)                               0101 00194000
         L     WREG2,ASPI(,@14)                                    0101 00195000
*       GEN(SPIE  (R2),((1,15)));   /* SPIE FOR ALL PROG CHECKS      */ 00196000
         SPIE  (R2),((1,15))                                            00197000
*       PICASAVE=PARMREG;           /* SAVE ADDRS OF PREV PICA       */ 00198000
         L     @14,@CA00214                                        0103 00199000
         ST    PARMREG,PICASAVE-PICASAVE(,@14)                     0103 00200000
*     END;                                                         0104 00201000
*   IF EOFINPRO='1'B THEN           /* EOF IN PROCESS          Y02014*/ 00202000
@RF00099 TM    EOFINPRO(AEDITCBR),B'01000000'                      0105 00203000
         BNO   @RF00105                                            0105 00204000
*     WREG2=4;                      /* INDICATE EOF            Y02014*/ 00205000
         LA    WREG2,4                                             0106 00206000
*   ELSE                                                           0107 00207000
*     WREG2=0;                      /* INDICATE NO EOF         Y02014*/ 00208000
         B     @RC00105                                            0107 00209000
@RF00105 SLR   WREG2,WREG2                                         0107 00210000
*   PARMREG=ADDR(PARMLIST);         /* REG1 POINTS TO PARMLIST       */ 00211000
@RC00105 LA    PARMREG,PARMLIST                                    0108 00212000
*   GEN(STM R0,R14,LOCAREA);        /* SAVE OWN REGISTERS            */ 00213000
         STM R0,R14,LOCAREA                                             00214000
*   CALL EXITRTN;                   /* CALL USER EXIT                */ 00215000
         L     @15,EXITADDR(,AEDITCBR)                             0110 00216000
         BALR  @14,@15                                             0110 00217000
*/********************************************************************/ 00218000
*/*                                                                  */ 00219000
*/* RETURN FROM USER EXIT- ANALYZE RESULTS                           */ 00220000
*/*                                                                  */ 00221000
*/********************************************************************/ 00222000
*                                                                  0111 00223000
*   GEN;                                                           0111 00224000
         BALR  R2,R0                    ESTABLISH TEMP ADDRESSABILITY   00225000
         USING *,R2                     IN CASE USEREXIT DESTROYED REGS 00226000
         LM    R0,R14,LOCAREA           RESTORE REGS                    00227000
         DROP  R2                       RE-ESTABLISH ORIG BASE REG      00228000
*   WREG2=RCREG;                    /* SAVE EXIT RETURN CODE         */ 00229000
         LR    WREG2,RCREG                                         0112 00230000
*   IF EDITER¬=3 THEN               /* ISSUED SPIE             Y02014*/ 00231000
         CLI   EDITER,3                                            0113 00232000
         BE    @RF00113                                            0113 00233000
*     DO;                           /* YES                     Y02014*/ 00234000
*       PARMREG=PICASAVE;           /* PREVIOUS PICA ADDRESS         */ 00235000
         L     @14,@CA00214                                        0115 00236000
         L     PARMREG,PICASAVE-PICASAVE(,@14)                     0115 00237000
*       GEN(SPIE  MF=(E,(R1)));     /* RESTORE PREVIOUS PICA         */ 00238000
         SPIE  MF=(E,(R1))                                              00239000
*     END;                                                         0117 00240000
*   CODESAVE=WREG2;                 /* SAVE FOR FUTURE USE           */ 00241000
@RF00113 ST    WREG2,CODESAVE                                      0118 00242000
*/********************************************************************/ 00243000
*/*                                                                  */ 00244000
*/* CHECK FOR VALID EXIT RETURN CODE AND SERVICE REQUEST             */ 00245000
*/*                                                                  */ 00246000
*/********************************************************************/ 00247000
*                                                                  0119 00248000
*   IF WREG2>28 THEN                /* RETURN CODE INVALID-          */ 00249000
         C     WREG2,@CF00275                                      0119 00250000
         BH    @RT00119                                            0119 00251000
*     GOTO AMDPRCIV;                /* ISSUE DIAGNOSTIC              */ 00252000
*   WREG3=WREG2//4;                 /* A VALID RETURN CODE     SHOULD*/ 00253000
         LR    @04,WREG2                                           0121 00254000
         SRDA  @04,32                                              0121 00255000
         D     @04,@CF00097                                        0121 00256000
         LR    WREG3,@04                                           0121 00257000
*   IF WREG3¬=0 THEN                /* BE DIVISIBLE BY FOUR          */ 00258000
         SLR   @14,@14                                             0122 00259000
         CR    WREG3,@14                                           0122 00260000
         BNE   @RT00122                                            0122 00261000
*     GOTO AMDPRCIV;                /* INVALID RETURN CODE           */ 00262000
*   IF EOFINPRO='1'B THEN           /* EOF IN PROCESS          Y02014*/ 00263000
         TM    EOFINPRO(AEDITCBR),B'01000000'                      0124 00264000
         BNO   @RF00124                                            0124 00265000
*     DO;                           /* YES                     Y02014*/ 00266000
*       IF WREG2¬=0&WREG2¬=4&WREG2¬=8 THEN/* RC=0 OR 4 OR 8    Y02014*/ 00267000
         CR    WREG2,@14                                           0126 00268000
         BE    @RF00126                                            0126 00269000
         C     WREG2,@CF00097                                      0126 00270000
         BE    @RF00126                                            0126 00271000
         C     WREG2,@CF00041                                      0126 00272000
         BNE   @RT00126                                            0126 00273000
*         GO TO AMDPRCIV;           /* NO                      Y02014*/ 00274000
*       IF WREG2=8 THEN             /* RC=8                    Y02014*/ 00275000
@RF00126 C     WREG2,@CF00041                                      0128 00276000
         BNE   @RF00128                                            0128 00277000
*         WREG2=12;                 /* CONVERT RC FOR CODE     Y02014*/ 00278000
         LA    WREG2,12                                            0129 00279000
*       IF(FIRSTME='0'B)&(WREG2=0|WREG2=4) THEN                    0130 00280000
@RF00128 TM    FIRSTME,B'10000000'                                 0130 00281000
         BNZ   @RF00130                                            0130 00282000
         LTR   WREG2,WREG2                                         0130 00283000
         BZ    @RT00130                                            0130 00284000
         C     WREG2,@CF00097                                      0130 00285000
         BNE   @RF00130                                            0130 00286000
@RT00130 DS    0H                                                  0131 00287000
*         DO;                       /* NEED TO SKIP PAGE       Y02014*/ 00288000
*           GEN(BRWRITE SKIP);      /* SKIP PAGE               Y02014*/ 00289000
         BRWRITE SKIP                                                   00290000
*           FIRSTME='1'B;           /* INDICATE PAGE SKIPED    Y02014*/ 00291000
         OI    FIRSTME,B'10000000'                                 0133 00292000
*         END;                                                     0134 00293000
*     END;                                                         0135 00294000
*                                                                  0135 00295000
@RF00130 DS    0H                                                  0136 00296000
*/* RETURN CODE IS VALID- SERVICE REQUEST                            */ 00297000
*                                                                  0136 00298000
*   GENERATE;                                                      0136 00299000
*                                                                  0136 00300000
@RF00124 DS    0H                                                  0136 00301000
AMDPCOD  B     BRTAB(R2)                SELECT APPROPRIATE BRANCH       00302000
BRTAB    B     AMDPRC0                  RETURN CODE = 0                 00303000
         B     AMDPRC4                  RETURN CODE = 4                 00304000
         B     AMDPRC8                  RETURN CODE = 8                 00305000
         B     AMDPRC12                 RETURN CODE = 12                00306000
         B     AMDPRC16                 RETURN CODE = 16                00307000
         B     AMDPRC20                 RETURN CODE = 20                00308000
         B     AMDPRC24                 RETURN CODE = 24                00309000
         B     AMDPRC28                 RETURN CODE = 28                00310000
*/********************************************************************/ 00311000
*/*                                                                  */ 00312000
*/* FOLLOWING ROUTINES SERVICE USER REQUESTS UPON RETURN FROM        */ 00313000
*/* USER EXIT ROUTINE                                                */ 00314000
*/*                                                                  */ 00315000
*/********************************************************************/ 00316000
*                                                                  0137 00317000
*AMDPRC0:                           /* RETURN CODE 0 ROUTINE         */ 00318000
*   CALL AMDTMCHK;                  /* OUTPUT TIME STMP, IF NEC      */ 00319000
AMDPRC0  BAL   @14,AMDTMCHK                                        0137 00320000
*   GEN(BRWRITE 1);                 /* PRINT OUTPUT BUFFER           */ 00321000
         BRWRITE 1                                                      00322000
*   BUFPTR=CURBUF+1;                /* UPDATE CURRENT OUTPUT BUFFER     00323000
*                                      IN PARM LIST                  */ 00324000
         LA    @14,1                                               0139 00325000
         AL    @14,CURBUF                                          0139 00326000
         ST    @14,BUFPTR                                          0139 00327000
*   GOTO AMDPCAL;                   /* RE-CALL USER EXIT             */ 00328000
         B     AMDPCAL                                             0140 00329000
*AMDPRC4:                           /* RETURN CODE 4 ROUTINE         */ 00330000
*   CALL AMDTMCHK;                  /* OUTPUT TIME STMP, IF NEC      */ 00331000
AMDPRC4  BAL   @14,AMDTMCHK                                        0141 00332000
*   GEN(BRWRITE 1);                 /* PRINT OUTPUT BUFFER           */ 00333000
         BRWRITE 1                                                      00334000
*AMDPRC12:                          /* RETURN CODE 12 ROUTINE        */ 00335000
*   OUTBUF=' ';                     /* CLEAR OUTPUT BUFFER IN CASE 0143 00336000
*                                      EXIT HAS ENTERED DATA WHICH 0143 00337000
*                                      HAS NOT BEEN PRINTED          */ 00338000
AMDPRC12 L     @14,CURBUF                                          0143 00339000
         MVI   OUTBUF+1(@14),C' '                                  0143 00340000
         MVC   OUTBUF+2(118,@14),OUTBUF+1(@14)                     0143 00341000
         MVI   OUTBUF(@14),C' '                                    0143 00342000
*   REXT='0'B;                      /* INDICATE EXT TERMINATION      */ 00343000
         NI    REXT(AEDITCBR),B'11111110'                          0144 00344000
*   RETURN;                         /* RETURN TO CALLER              */ 00345000
@EL00001 L     @13,4(,@13)                                         0145 00346000
@EF00001 DS    0H                                                  0145 00347000
@ER00001 LM    @14,@12,12(@13)                                     0145 00348000
         BR    @14                                                 0145 00349000
*AMDPRC8:                           /* RETURN CODE 8 ROUTINE         */ 00350000
*   FMT='1'B;                       /* INDICATE FORMAT REQUIRED      */ 00351000
AMDPRC8  OI    FMT(AEDITCBR),B'00010000'                           0146 00352000
*   GOTO AMDPRC12;                  /* RETURN PROCEDURES             */ 00353000
         B     AMDPRC12                                            0147 00354000
*AMDPRC16:                          /* RETURN CODE 16 ROUTINE        */ 00355000
*   CALL AMDTMCHK;                  /* OUTPUT TIME STMP, IF NEC      */ 00356000
AMDPRC16 BAL   @14,AMDTMCHK                                        0148 00357000
*   GEN(BRWRITE 1);                 /* PRINT OUTPUT BUFFER           */ 00358000
         BRWRITE 1                                                      00359000
*AMDPR16A:                                                         0150 00360000
*   USEREXIT=' ';                   /* DELETE USER EXIT              */ 00361000
AMDPR16A MVI   USEREXIT+1(AEDITCBR),C' '                           0150 00362000
         MVC   USEREXIT+2(6,AEDITCBR),USEREXIT+1(AEDITCBR)         0150 00363000
         MVI   USEREXIT(AEDITCBR),C' '                             0150 00364000
*   OUTBUF(1:33)=UNUMMSG2;          /* EXIT DELETED MSG INTO OUTPUT     00365000
*                                      BUFFER                        */ 00366000
         L     @14,CURBUF                                          0151 00367000
         MVC   OUTBUF(33,@14),UNUMMSG2                             0151 00368000
*   GEN(BRWRITE 1);                 /* PRINT MESSAGE                 */ 00369000
         BRWRITE 1                                                      00370000
*   GOTO AMDPRC12;                  /* RETURN PROCEDURES             */ 00371000
         B     AMDPRC12                                            0153 00372000
*AMDPRC20:                          /* RETURN CODE 20 ROUTINE        */ 00373000
*   FMT='1'B;                       /* INDICATE FORMAT REQUIRED      */ 00374000
AMDPRC20 OI    FMT(AEDITCBR),B'00010000'                           0154 00375000
*   GOTO AMDPR16A;                  /* DELETE EXIT AND RETURN        */ 00376000
         B     AMDPR16A                                            0155 00377000
*AMDPRC24:                          /* RETURN CODE 24 ROUTINE        */ 00378000
*   OUTBUF(1:36)=UNUMMSG1;          /* EDIT TERMINATED MSG INTO    0156 00379000
*                                      OUTPUT BUFFER                 */ 00380000
AMDPRC24 L     @14,CURBUF                                          0156 00381000
         MVC   OUTBUF(36,@14),UNUMMSG1                             0156 00382000
*   GEN(BRWRITE 1);                 /* PRINT MESSAGE                 */ 00383000
         BRWRITE 1                                                      00384000
*   GOTO AMDEX01A;                  /* TERMINATE EDIT                */ 00385000
         B     AMDEX01A                                            0158 00386000
*AMDPRC28:                          /* RETURN CODE 28, EXIT WANTS  0159 00387000
*                                      TRACE RECORD FORMATED       0159 00388000
*                                      REGARDLESS OF SELECTIVITY     */ 00389000
*   DMDFMT='1'B;                    /* SET DEMAND FORMAT SW          */ 00390000
AMDPRC28 OI    DMDFMT(AEDITCBR),B'00000001'                        0159 00391000
*   GOTO AMDPRC12;                  /* GO RETURN TO APP              */ 00392000
         B     AMDPRC12                                            0160 00393000
*AMDEXT01:                                                         0161 00394000
*   GEN(OI    SWD,NOSTDMG);         /* SET NO STANDARD MESSAGE SW    */ 00395000
AMDEXT01 OI    SWD,NOSTDMG                                              00396000
*   RCREG=ASYNTAX;                  /* POINT TO MSG WRITER - SYN     */ 00397000
         L     RCREG,ASYNTAX                                       0162 00398000
*   CALL SYNTAXC;                   /* ISSUE EDIT TERM MESSAGE       */ 00399000
         BAL   @14,SYNTAXC                                         0163 00400000
*AMDEX01A:                                                         0164 00401000
*   IF EOFINPRO¬='1'B THEN          /* EOF IN PROCESS          Y02014*/ 00402000
AMDEX01A TM    EOFINPRO(AEDITCBR),B'01000000'                      0164 00403000
         BO    @RF00164                                            0164 00404000
*     TERM='1'B;                    /* TERMINATE EDIT                */ 00405000
         OI    TERM(AEDITCBR),B'01000000'                          0165 00406000
*   GOTO AMDPRC12;                  /* RETURN PROCEDURES             */ 00407000
         B     AMDPRC12                                            0166 00408000
*AMDPRCIV:                                                         0167 00409000
*   OUTBUF=' ';                     /* BLANK OUTPUT BUFFER           */ 00410000
AMDPRCIV L     @14,CURBUF                                          0167 00411000
         MVI   OUTBUF+1(@14),C' '                                  0167 00412000
         MVC   OUTBUF+2(118,@14),OUTBUF+1(@14)                     0167 00413000
         MVI   OUTBUF(@14),C' '                                    0167 00414000
*   GEN(BRWRITE SKIP);              /* SKIP TO NEW PAGE              */ 00415000
         BRWRITE SKIP                                                   00416000
*   WREG2=ADDR(CODESAVE);           /* REG 2 POINTS TO EXIT RC       */ 00417000
         LA    WREG2,CODESAVE                                      0169 00418000
*   WREG3=ADDR(M212COD);            /* REG 3 POINTS TO MESSAGE CODE     00419000
*                                      FIELD                         */ 00420000
         L     @14,SYNMSGA                                         0170 00421000
         L     WREG3,MSGPTR1(,@14)                                 0170 00422000
         LA    WREG3,M212COD(,WREG3)                               0170 00423000
*   GEN(HEXCNVT (3),(2),4);         /* RET CODE TO PRINTABLE HEX     */ 00424000
         HEXCNVT (3),(2),4                                              00425000
*   M212MOD=USEREXIT;               /* EXIT NAME TO MESSAGE FIELD    */ 00426000
         L     @14,SYNMSGA                                         0172 00427000
         L     @14,MSGPTR1(,@14)                                   0172 00428000
         MVC   M212MOD(8,@14),USEREXIT(AEDITCBR)                   0172 00429000
*   M212PAG=PAGENO;                 /* MOVE IN PAGE NO FROM COM      */ 00430000
         MVC   M212PAG(4,@14),PAGENO                               0173 00431000
*   GEN(OI    SWD,NOSTDMG);         /* INDICATE MSG AMD165I NOT    0174 00432000
*                                      REQUIRED                      */ 00433000
         OI    SWD,NOSTDMG                                              00434000
*   RCREG=ASYNTAX;                  /* POINT TO MSG WRITER - SYN     */ 00435000
         L     RCREG,ASYNTAX                                       0175 00436000
*   CALL SYNTAXA;                   /* ISSUE BAD RET CODE MESSAGE    */ 00437000
         BAL   @14,SYNTAXA                                         0176 00438000
*   IF EOFINPRO='1'B THEN           /* EOF IN PROCESS          Y02014*/ 00439000
         TM    EOFINPRO(AEDITCBR),B'01000000'                      0177 00440000
         BO    @RT00177                                            0177 00441000
*     GO TO AMDPRC12;               /* RETURN PROCEDURE        Y02014*/ 00442000
*   IF EDITER=0|EDITER=1            /* TERMINATION REQUIRED?         */ 00443000
*     THEN                                                         0179 00444000
         CLI   EDITER,0                                            0179 00445000
         BE    @RT00179                                            0179 00446000
         CLI   EDITER,1                                            0179 00447000
         BE    @RT00179                                            0179 00448000
*     GOTO AMDEXT02;                /* NOT TO BE TERMINATED          */ 00449000
*/* TERMINATE EDIT DUE TO INVALID RETURN CODE FROM EXIT ROUTINE      */ 00450000
*                                                                  0181 00451000
*   GEN(OI    SWD,NOSTDMG);         /* SET NO STANDARD MESSAGE SW    */ 00452000
         OI    SWD,NOSTDMG                                              00453000
*   RCREG=ASYNTAX;                  /* POINT TO MSG WRITER - SYN     */ 00454000
         L     RCREG,ASYNTAX                                       0182 00455000
*   CALL SYNTAXC;                   /* ISSUE EDIT TERM MESSAGE       */ 00456000
         BAL   @14,SYNTAXC                                         0183 00457000
*   TERM='1'B;                      /* EDIT TERMINATION SW           */ 00458000
         OI    TERM(AEDITCBR),B'01000000'                          0184 00459000
*   GOTO AMDEX02A;                  /* TO RETURN PROCEDURES          */ 00460000
         B     AMDEX02A                                            0185 00461000
*AMDEXT02:                                                         0186 00462000
*   M213MOD=USEREXIT;               /* EXIT NAME TO MESSAGE FIELD    */ 00463000
AMDEXT02 L     @14,SYNMSGA                                         0186 00464000
         L     @14,MSGPTR2(,@14)                                   0186 00465000
         MVC   M213MOD(8,@14),USEREXIT(AEDITCBR)                   0186 00466000
*   GEN(OI    SWD,NOSTDMG);         /* SET NO STANDARD MESSAGE SW    */ 00467000
         OI    SWD,NOSTDMG                                              00468000
*   RCREG=ASYNTAX;                  /* POINT TO MSG WRITER - SYN     */ 00469000
         L     RCREG,ASYNTAX                                       0188 00470000
*   CALL SYNTAXB;                   /* ISSUE INTERFACE IGNORED     0189 00471000
*                                      MESSAGE                       */ 00472000
         BAL   @14,SYNTAXB                                         0189 00473000
*AMDEX02A:                                                         0190 00474000
*   USEREXIT=' ';                   /* DELETE USER EXIT              */ 00475000
AMDEX02A MVI   USEREXIT+1(AEDITCBR),C' '                           0190 00476000
         MVC   USEREXIT+2(6,AEDITCBR),USEREXIT+1(AEDITCBR)         0190 00477000
         MVI   USEREXIT(AEDITCBR),C' '                             0190 00478000
*   CALL PRHEX;                     /* DUMP CURRENT TRACE RECORD     */ 00479000
         L     @10,AFRMAD(,AEDITCBR)                               0191 00480000
         L     @15,AHEX(,@10)                                      0191 00481000
         BALR  @14,@15                                             0191 00482000
*   OUTBUF=' ';                     /* BLANK OUTPUT BUFFER           */ 00483000
         L     @14,CURBUF                                          0192 00484000
         MVI   OUTBUF+1(@14),C' '                                  0192 00485000
         MVC   OUTBUF+2(118,@14),OUTBUF+1(@14)                     0192 00486000
         MVI   OUTBUF(@14),C' '                                    0192 00487000
*   GEN(BRWRITE SKIP);              /* SKIP TO NEW PAGE              */ 00488000
         BRWRITE SKIP                                                   00489000
*   GOTO AMDPRC12;                  /* RETURN PROCEDURES             */ 00490000
         B     AMDPRC12                                            0194 00491000
*/****************************************************************** */ 00492000
*/*    DETERMINES IF A TIME STAMP RECORD IS TO BE OUTPUTTED          */ 00493000
*/*    BEFORE THE CURRENT TRACE RECORD.IF SO THE CURRENT OUTPUT      */ 00494000
*/*    BUFFER POINTER MUST BE MODIFIED TO ADDRESS                    */ 00495000
*/*    THE TIME STAMP BUFFER (THIS ADDRESS IS CONTAINED IN ADTSBUF)  */ 00496000
*/*    THE TIME STAMP NEEDED SWITCH IS TURNED OFF BEFORE RETURN.     */ 00497000
*/********************************************************************/ 00498000
*                                                                  0195 00499000
*AMDTMCHK:                                                         0195 00500000
*   PROC;                                                          0195 00501000
AMDTMCHK STM   @14,@12,@SA00002                                    0195 00502000
*   DCL                                                            0196 00503000
*     TEMPBUF REG(2) PTR(31);       /* T S RECORD BUFFER       Y02014*/ 00504000
*   IF EOFINPRO='1'B THEN           /* EOF IN PROCESS          Y02014*/ 00505000
         TM    EOFINPRO(AEDITCBR),B'01000000'                      0197 00506000
         BO    @RT00197                                            0197 00507000
*     RETURN;                       /* YES RETURN              Y02014*/ 00508000
*   IF TS='0'B THEN                 /* NO TS RECORD TO PRNT    Y02014*/ 00509000
         TM    TS(AEDITCBR),B'10000000'                            0199 00510000
         BZ    @RT00199                                            0199 00511000
*     GOTO AMDEND;                  /* RETURN TO CALLER        Y02014*/ 00512000
*   GEN(BRWRITE 2,IMM);             /* 2 BLNK LINES NEEDED     Y02014*/ 00513000
         BRWRITE 2,IMM                                                  00514000
*   TEMPBUF=CURBUF;                 /* SAVE CURBUF PTR         Y02014*/ 00515000
         L     TEMPBUF,CURBUF                                      0202 00516000
*   CURBUF=ADTSBUF;                 /* PTR TO TS BUFFER        Y02014*/ 00517000
         L     @14,ADTSBUF(,AEDITCBR)                              0203 00518000
         ST    @14,CURBUF                                          0203 00519000
*   GEN(BRWRITE 2);                 /* OUTPUT TS AND SPACE     Y02014*/ 00520000
         BRWRITE 2                                                      00521000
*   TS='0'B;                        /* TS PENDING SWITCH OFF   Y02014*/ 00522000
         NI    TS(AEDITCBR),B'01111111'                            0205 00523000
*   CURBUF=TEMPBUF;                 /* REINIT CURBUF           Y02014*/ 00524000
         ST    TEMPBUF,CURBUF                                      0206 00525000
*AMDEND:                                                           0207 00526000
*   RETURN;                         /* RETURN TO CALLER        Y02014*/ 00527000
@EL00002 DS    0H                                                  0207 00528000
@EF00002 DS    0H                                                  0207 00529000
@ER00002 LM    @14,@12,@SA00002                                    0207 00530000
         BR    @14                                                 0207 00531000
*   END;                                                           0208 00532000
         B     @EL00002                                            0208 00533000
*   END AMDPREXT                                                   0209 00534000
*                                                                  0209 00535000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */ 00536000
*/*%INCLUDE SYSLIB  (AMDPRTAB)                                       */ 00537000
*                                                                  0209 00538000
*       ;                                                          0209 00539000
@DATA    DS    0H                                                       00540000
@SM00313 MVC   TEMPREC(0),RECBASE(@10)                                  00541000
@SM00315 MVC   TEMPREC+256(0),RECBASE+256(@14)                          00542000
         DS    0F                                                       00543000
@SA00001 DS    18F                                                      00544000
@SA00002 DS    15F                                                      00545000
         DS    0F                                                       00546000
@CF00097 DC    F'4'                                                     00547000
@CF00041 DC    F'8'                                                     00548000
@CF00273 DC    F'11'                                                    00549000
@CF00275 DC    F'28'                                                    00550000
@CF00119 DC    F'256'                                                   00551000
@CF00270 DC    F'257'                                                   00552000
@CF00317 DC    F'-1'                                                    00553000
@CF00262 DC    XL4'80000000'                                            00554000
@CA00211 DC    A(SPIESAVE)                                              00555000
@CA00212 DC    A(NSISAVE)                                               00556000
@CA00214 DC    A(PICASAVE)                                              00557000
         DS    0D                                                       00558000
CODESAVE DS    F                                                        00559000
@TS00001 DS    CL1                                                      00560000
         DS    CL3                                                      00561000
PARMLIST DS    CL20                                                     00562000
         ORG   PARMLIST                                                 00563000
RECPTR   DS    AL4                                                      00564000
BUFPTR   DS    AL4                                                      00565000
GTFOPTR  DS    AL4                                                      00566000
EIDPTR   DS    AL4                                                      00567000
DATAPTR  DS    AL4                                                      00568000
         ORG   PARMLIST+20                                              00569000
TEMPREC  DS    CL284                                                    00570000
UNUMMSG1 DC    CL36'EDIT TERMINATED UPON USER''S REQUEST'               00571000
UNUMMSG2 DC    CL33'EXIT DELETED UPON USER''S REQUEST'                  00572000
EXTSWITS DC    B'00000000'                                              00573000
         ORG   EXTSWITS                                                 00574000
FIRSTME  DS    BL1                                                      00575000
@NM00002 EQU   EXTSWITS+0                                               00576000
         ORG   EXTSWITS+1                                               00577000
EXTPTCH  DC    CL100'EXTPTCH'                                           00578000
         DS    CL6                                                      00579000
DECAREA  DS    CL8                                                      00580000
LOCAREA  DS    CL64                                                     00581000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       00582000
@01      EQU   01                                                       00583000
@02      EQU   02                                                       00584000
@03      EQU   03                                                       00585000
@04      EQU   04                                                       00586000
@05      EQU   05                                                       00587000
@06      EQU   06                                                       00588000
@07      EQU   07                                                       00589000
@08      EQU   08                                                       00590000
@09      EQU   09                                                       00591000
@10      EQU   10                                                       00592000
@11      EQU   11                                                       00593000
@12      EQU   12                                                       00594000
@13      EQU   13                                                       00595000
@14      EQU   14                                                       00596000
@15      EQU   15                                                       00597000
AEDITCBR EQU   @09                                                      00598000
PARMREG  EQU   @01                                                      00599000
WREG2    EQU   @02                                                      00600000
WREG3    EQU   @03                                                      00601000
COMPTR   EQU   @12                                                      00602000
AREAPTR  EQU   @13                                                      00603000
RCREG    EQU   @15                                                      00604000
TEMPBUF  EQU   @02                                                      00605000
         ENTRY EXTPTCH                                                  00606000
         EXTRN SPIESAVE                                                 00607000
         EXTRN NSISAVE                                                  00608000
         EXTRN PICASAVE                                                 00609000
AMDPRTAB EQU   0                                                        00610000
AFMG     EQU   AMDPRTAB                                                 00611000
CURREC   EQU   AMDPRTAB+4                                               00612000
DEBGFLGS EQU   AMDPRTAB+8                                               00613000
PTHFLGS1 EQU   DEBGFLGS                                                 00614000
REXT     EQU   PTHFLGS1                                                 00615000
PTHFLGS2 EQU   DEBGFLGS+1                                               00616000
INRFCFGS EQU   DEBGFLGS+2                                               00617000
TERM     EQU   INRFCFGS                                                 00618000
FMT      EQU   INRFCFGS                                                 00619000
DMDFMT   EQU   INRFCFGS                                                 00620000
IOFLGS   EQU   DEBGFLGS+3                                               00621000
GTFWDPTR EQU   AMDPRTAB+20                                              00622000
USEREXIT EQU   AMDPRTAB+24                                              00623000
STARTIME EQU   AMDPRTAB+40                                              00624000
STOPTIME EQU   AMDPRTAB+52                                              00625000
NAMES    EQU   AMDPRTAB+64                                              00626000
ADS      EQU   AMDPRTAB+104                                             00627000
AADS     EQU   ADS                                                      00628000
SIF      EQU   AMDPRTAB+124                                             00629000
SIOFLGS  EQU   SIF                                                      00630000
DVADS1   EQU   AMDPRTAB+128                                             00631000
IO       EQU   AMDPRTAB+228                                             00632000
IOFLGS2  EQU   IO                                                       00633000
DVADS2   EQU   AMDPRTAB+232                                             00634000
VCF      EQU   AMDPRTAB+332                                             00635000
SVCFLGS  EQU   VCF                                                      00636000
USR      EQU   AMDPRTAB+368                                             00637000
USRFLGS  EQU   USR                                                      00638000
USRTAB   EQU   AMDPRTAB+372                                             00639000
PI       EQU   AMDPRTAB+452                                             00640000
PIFLGS   EQU   PI                                                       00641000
PGMNGEN  EQU   AMDPRTAB+456                                             00642000
GENFLAGS EQU   PGMNGEN+3                                                00643000
GENFLGS1 EQU   AMDPRTAB+460                                             00644000
TS       EQU   GENFLGS1                                                 00645000
EOFINPRO EQU   GENFLGS1                                                 00646000
RECDLL   EQU   AMDPRTAB+461                                             00647000
EXITNM   EQU   AMDPRTAB+464                                             00648000
EXITADDR EQU   AMDPRTAB+472                                             00649000
AFRMAD   EQU   AMDPRTAB+488                                             00650000
OFSTEID  EQU   AMDPRTAB+492                                             00651000
OFSTDATA EQU   AMDPRTAB+494                                             00652000
ADTSBUF  EQU   AMDPRTAB+496                                             00653000
ESTARTME EQU   AMDPRTAB+500                                             00654000
ESTOPTME EQU   AMDPRTAB+509                                             00655000
FRMATAB  EQU   0                                                        00656000
AGET     EQU   FRMATAB                                                  00657000
AHEX     EQU   FRMATAB+4                                                00658000
ASPI     EQU   FRMATAB+28                                               00659000
PRHEX    EQU   0                                                        00660000
AMDPRSEG EQU   0                                                        00661000
EXITRTN  EQU   0                                                        00662000
SVAREA   EQU   4                                                        00663000
MSGADDR  EQU   0                                                        00664000
ERRBUF   EQU   0                                                        00665000
AMDPRE12 EQU   56                                                       00666000
AMDPRE03 EQU   32                                                       00667000
MSGPTR1  EQU   0                                                        00668000
MSGPTR2  EQU   4                                                        00669000
M212MOD  EQU   63                                                       00670000
M212COD  EQU   39                                                       00671000
M212PAG  EQU   23                                                       00672000
M213MOD  EQU   53                                                       00673000
RECBASE  EQU   0                                                        00674000
OUTBUF   EQU   1                                                        00675000
INREC    EQU   0                                                        00676000
PRGET    EQU   0                                                        00677000
PRSPI    EQU   0                                                        00678000
PAGENO   EQU   TITLEPGE+5                                               00679000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    00680000
FRMRES1  EQU   FRMATAB+36                                               00681000
ATME     EQU   FRMATAB+32                                               00682000
APRFMG   EQU   FRMATAB+24                                               00683000
AEXT     EQU   FRMATAB+20                                               00684000
AAPP     EQU   FRMATAB+16                                               00685000
AFLT     EQU   FRMATAB+12                                               00686000
ACON     EQU   FRMATAB+8                                                00687000
RESERVED EQU   AMDPRTAB+522                                             00688000
CVTTZONE EQU   AMDPRTAB+518                                             00689000
ESPSEC   EQU   ESTOPTME+7                                               00690000
ESPMIN   EQU   ESTOPTME+5                                               00691000
ESPHR    EQU   ESTOPTME+3                                               00692000
ESPDAY   EQU   ESTOPTME                                                 00693000
ESSEC    EQU   ESTARTME+7                                               00694000
ESMIN    EQU   ESTARTME+5                                               00695000
ESHR     EQU   ESTARTME+3                                               00696000
ESDAY    EQU   ESTARTME                                                 00697000
REENTWKA EQU   AMDPRTAB+484                                             00698000
PRFMTADD EQU   AMDPRTAB+480                                             00699000
AEIOCT   EQU   AMDPRTAB+476                                             00700000
@NM00001 EQU   GENFLGS1                                                 00701000
FIRSTHSW EQU   GENFLGS1                                                 00702000
TSFOUND  EQU   GENFLGS1                                                 00703000
EOF      EQU   GENFLAGS                                                 00704000
RR       EQU   GENFLAGS                                                 00705000
SRM      EQU   GENFLAGS                                                 00706000
RNIO     EQU   GENFLAGS                                                 00707000
SYSM     EQU   GENFLAGS                                                 00708000
SYS      EQU   GENFLAGS                                                 00709000
DSP      EQU   GENFLAGS                                                 00710000
EXT      EQU   GENFLAGS                                                 00711000
PICODEA  EQU   PGMNGEN+2                                                00712000
PICODES  EQU   PGMNGEN                                                  00713000
Q        EQU   PI+1                                                     00714000
P01R     EQU   PIFLGS                                                   00715000
SELP     EQU   PIFLGS                                                   00716000
ALLP     EQU   PIFLGS                                                   00717000
USRNGTAB EQU   USRTAB                                                   00718000
O        EQU   USR+1                                                    00719000
N01R     EQU   USRFLGS                                                  00720000
SELU     EQU   USRFLGS                                                  00721000
ALLU     EQU   USRFLGS                                                  00722000
SVCNUMS  EQU   AMDPRTAB+336                                             00723000
M        EQU   VCF+1                                                    00724000
L        EQU   SVCFLGS                                                  00725000
SELV     EQU   SVCFLGS                                                  00726000
ALLV     EQU   SVCFLGS                                                  00727000
IODVADS  EQU   DVADS2                                                   00728000
K01RES   EQU   IO+1                                                     00729000
JJ       EQU   IOFLGS2                                                  00730000
SELI     EQU   IOFLGS2                                                  00731000
ALLI     EQU   IOFLGS2                                                  00732000
SIODVADS EQU   DVADS1                                                   00733000
II       EQU   SIF+1                                                    00734000
H        EQU   SIOFLGS                                                  00735000
NOEQU    EQU   SIOFLGS                                                  00736000
EQUIV    EQU   SIOFLGS                                                  00737000
SELS     EQU   SIOFLGS                                                  00738000
ALLS     EQU   SIOFLGS                                                  00739000
ASCBADDR EQU   AADS                                                     00740000
JOBNAMES EQU   NAMES                                                    00741000
DAY2     EQU   STOPTIME+10                                              00742000
F        EQU   STOPTIME+8                                               00743000
TIME2    EQU   STOPTIME                                                 00744000
DAY      EQU   STARTIME+10                                              00745000
D        EQU   STARTIME+8                                               00746000
TIME     EQU   STARTIME                                                 00747000
DDNAME   EQU   AMDPRTAB+32                                              00748000
C        EQU   DEBGFLGS+4                                               00749000
B        EQU   IOFLGS                                                   00750000
GETEOF   EQU   IOFLGS                                                   00751000
EDITSTOP EQU   INRFCFGS                                                 00752000
EXTTRC   EQU   INRFCFGS                                                 00753000
RET      EQU   INRFCFGS                                                 00754000
SPIE     EQU   INRFCFGS                                                 00755000
FLMODE   EQU   INRFCFGS                                                 00756000
REMAIN   EQU   PTHFLGS2                                                 00757000
APP      EQU   PTHFLGS2                                                 00758000
FRM      EQU   PTHFLGS1                                                 00759000
FLT      EQU   PTHFLGS1                                                 00760000
HEX      EQU   PTHFLGS1                                                 00761000
CON      EQU   PTHFLGS1                                                 00762000
GET      EQU   PTHFLGS1                                                 00763000
SCN      EQU   PTHFLGS1                                                 00764000
ROOT     EQU   PTHFLGS1                                                 00765000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      00766000
@RT00071 EQU   AMDEXT01                                                 00767000
@RT00119 EQU   AMDPRCIV                                                 00768000
@RT00122 EQU   AMDPRCIV                                                 00769000
@RT00126 EQU   AMDPRCIV                                                 00770000
@RF00164 EQU   AMDPRC12                                                 00771000
@RT00177 EQU   AMDPRC12                                                 00772000
@RT00179 EQU   AMDEXT02                                                 00773000
@RT00197 EQU   @EL00002                                                 00774000
AMDEND   EQU   @EL00002                                                 00775000
@RT00199 EQU   AMDEND                                                   00776000
@ENDDATA EQU   *                                                        00777000
         END   AMDPREXT,(C'PLS1249',0603,75049)                         00778000
./  ADD  SSI=32400626,NAME=AMDPRFLT
         TITLE 'AMDPRFLT-EDIT FILTER MODULE                            *00001000
                       '                                                00002000
AMDPRFLT CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL1(16)                                             0001 00007000
         DC    C'AMDPRFLT  73.240'                                 0001 00008000
         DROP  @15                                                      00009000
@PROLOG  STM   @14,@12,12(@13)                                     0001 00010000
         BALR  @11,0                                               0001 00011000
@PSTART  DS    0H                                                  0001 00012000
         USING @PSTART,@11                                         0001 00013000
         ST    @13,@SA00001+4                                      0001 00014000
         LA    @14,@SA00001                                        0001 00015000
         ST    @14,8(,@13)                                         0001 00016000
         LR    @13,@14                                             0001 00017000
         EQUATES                        AMDPRDMP EQU MACRO              00018000
         COMMON                         EXPANDS TO AMDPRCOM TABLE       00019000
AMDPRFLT CSECT                          RE-ESTABLISH AMDPRFLT CSECT     00020000
         USING COMMON,COMBASE           SET UP DSECT FOR AMDPRCOM       00021000
*   FLT='1'B;                       /* SET ON AMDPRFLT DEBUG FLAG    */ 00022000
         OI    FLT(AEDITCBR),B'00000100'                           0027 00023000
*   IF OPTTIME='1'B THEN            /* IF USR TIME STAMP OPTION,     */ 00024000
         L     @10,GTFWDPTR(,AEDITCBR)                             0028 00025000
         TM    OPTTIME(@10),B'00000001'                            0028 00026000
         BNO   @RF00028                                            0028 00027000
*     DO;                           /* DO THE FOLLOWING        Y02014*/ 00028000
*       OFSTEID=7+8;                /* EID OFST=PREFIX + T.S. LEN    */ 00029000
         MVC   OFSTEID(2,AEDITCBR),@CH00162                        0030 00030000
*       GOTO AMDPFLT1;              /* CONTINUE CALCULATIONS         */ 00031000
         B     AMDPFLT1                                            0031 00032000
*     END;                                                         0032 00033000
*   OFSTEID=7;                      /* NO T.S., SO BASIC EID OFST    */ 00034000
@RF00028 MVC   OFSTEID(2,AEDITCBR),@CH00054                        0033 00035000
*AMDPFLT1:                                                         0034 00036000
*   OFSTDATA=OFSTEID+2;             /* DATA OFST=EID OFST+EID LEN    */ 00037000
AMDPFLT1 LA    @10,2                                               0034 00038000
         AH    @10,OFSTEID(,AEDITCBR)                              0034 00039000
         STH   @10,OFSTDATA(,AEDITCBR)                             0034 00040000
*   IF USEREXIT¬=BLANK1 THEN        /* IF EXIT SLOT BLANK, THEN      */ 00041000
         CLC   USEREXIT(8,AEDITCBR),BLANK1                         0035 00042000
         BE    @RF00035                                            0035 00043000
*     DO;                                                          0036 00044000
*       CALL PREXT;                 /* IF NON-BLANK, CALL PREXT      */ 00045000
         L     @10,AFRMAD(,AEDITCBR)                               0037 00046000
         L     @15,AEXT(,@10)                                      0037 00047000
         BALR  @14,@15                                             0037 00048000
*       IF DMDFMT='1'B THEN         /* IF REC TO BE UNCOND FMTTED    */ 00049000
         TM    DMDFMT(AEDITCBR),B'00000001'                        0038 00050000
         BNO   @RF00038                                            0038 00051000
*         DO;                       /* DO THE FOLLOWING              */ 00052000
*           IF SYS='1'B             /* IF SYS ALREADY SPECIFIED      */ 00053000
*               |SYSM='1'B THEN     /* OR SYSM ALREADY SPECIFIED     */ 00054000
         TM    SYS(AEDITCBR),B'00110000'                           0040 00055000
         BZ    @RF00040                                            0040 00056000
*             DMDFMT='0'B;          /* NO NEED TO KEEP DMDFMT ON     */ 00057000
         NI    DMDFMT(AEDITCBR),B'11111110'                        0041 00058000
*           ELSE                    /* OTHERWISE, SYS MUST BE TURNED    00059000
*                                      ON SO NO SELECT.              */ 00060000
*             DO;                   /* SYSM MUST ALSO BE ON          */ 00061000
         B     @RC00040                                            0042 00062000
@RF00040 DS    0H                                                  0043 00063000
*               SYS='1'B;           /* SET ON SYS BIT                */ 00064000
*               SYSM='1'B;          /* SET ON SYSM BIT               */ 00065000
         OI    SYS(AEDITCBR),B'00110000'                           0044 00066000
*             END;                                                 0045 00067000
*           GOTO AMDPBRH;           /* NO SELECTIVITY NECESSARY      */ 00068000
         B     AMDPBRH                                             0046 00069000
*         END;                                                     0047 00070000
*       IF FMT='0'B THEN            /* UPON RETURN, CHK FMT BIT--    */ 00071000
@RF00038 TM    FMT(AEDITCBR),B'00010000'                           0048 00072000
         BZ    @RT00048                                            0048 00073000
*         GOTO AMDPJAT;             /* IF OFF, PREPARE FOR RETURN    */ 00074000
*       ELSE                                                       0050 00075000
*         FMT='0'B;                 /* IF ON, TURN IT OFF AND      0050 00076000
*                                      CONTINUE WITH FILTERING       */ 00077000
         NI    FMT(AEDITCBR),B'11101111'                           0050 00078000
*     END;                                                         0051 00079000
*   JOBOFST=OFSTDATA+6;             /* CALCULATE LOC OF JOBNAME      */ 00080000
@RF00035 LH    @10,OFSTDATA(,AEDITCBR)                             0052 00081000
         LA    JOBOFST,6                                           0052 00082000
         AR    JOBOFST,@10                                         0052 00083000
*   COUNT=1;                        /* INITIALIZE INDEX TO ONE       */ 00084000
         LA    COUNT,1                                             0053 00085000
*   IF(INREC(OFSTEID)&'F0'X)        /* IF FIRST CHAR OF EID IS       */ 00086000
*       ='E0'X THEN                 /* EQUAL TO X'E', THEN           */ 00087000
         LH    @08,OFSTEID(,AEDITCBR)                              0054 00088000
         L     @01,CURREC(,AEDITCBR)                               0054 00089000
         ALR   @01,@08                                             0054 00090000
         AL    @01,@CF00382                                        0054 00091000
         MVC   @TS00001(1),INREC(@01)                              0054 00092000
         NI    @TS00001,X'F0'                                      0054 00093000
         CLI   @TS00001,X'E0'                                      0054 00094000
         BNE   @RF00054                                            0054 00095000
*     DO;                           /* YES USR EID             Y02014*/ 00096000
*       JOBOFST=OFSTDATA+4;         /* HAVE USR EID NO CPUID         */ 00097000
         AH    @10,@CH00097                                        0056 00098000
         LR    JOBOFST,@10                                         0056 00099000
*       GO TO JNCHK;                /* CHECK FOR JOBNAMES      Y02014*/ 00100000
         B     JNCHK                                               0057 00101000
*     END;                                                         0058 00102000
*   IF INREC(6)='03'X               /* IF FID INDICATES SYSM REC,    */ 00103000
*     THEN                          /* THEN                          */ 00104000
@RF00054 L     @10,CURREC(,AEDITCBR)                               0059 00105000
         CLI   INREC+5(@10),X'03'                                  0059 00106000
         BE    @RT00059                                            0059 00107000
*     GOTO AMDPFLT4;                /* BYPASS JOBN CHECK       Y02014*/ 00108000
*JNCHK:                                                            0061 00109000
*   IF JOBNAMES(COUNT)=BLANK1       /* IF NO JOBNAMES SPECIFIED,     */ 00110000
*     THEN                          /* THEN                          */ 00111000
JNCHK    LR    @10,COUNT                                           0061 00112000
         SLA   @10,3                                               0061 00113000
         ALR   @10,AEDITCBR                                        0061 00114000
         CLC   JOBNAMES-8(8,@10),BLANK1                            0061 00115000
         BE    @RT00061                                            0061 00116000
*     GOTO AMDPFLT4;                /* CHECK ASCB ADDRESSES          */ 00117000
*AMDPFLT2:                                                         0063 00118000
*   IF INREC(JOBOFST:JOBOFST        /* Q/DOES JOBN IN REC MATCH      */ 00119000
*       +7)=JOBNAMES(COUNT)THEN     /* JOBN IN TABLE--IF SO, NOW     */ 00120000
AMDPFLT2 L     @10,CURREC(,AEDITCBR)                               0063 00121000
         LR    @08,COUNT                                           0063 00122000
         SLA   @08,3                                               0063 00123000
         ALR   @10,JOBOFST                                         0063 00124000
         AL    @10,@CF00382                                        0063 00125000
         ALR   @08,AEDITCBR                                        0063 00126000
         CLC   INREC(8,@10),JOBNAMES-8(@08)                        0063 00127000
         BE    @RT00063                                            0063 00128000
*     GOTO AMDPFID;                 /* CHECK FIDS & SYS BIT          */ 00129000
*   COUNT=COUNT+1;                  /* UPDATE INDEX                  */ 00130000
         AH    COUNT,@CH00043                                      0065 00131000
*   IF COUNT>5 THEN                 /* IF BEYOND JOBN TABLE, THEN    */ 00132000
         CH    COUNT,@CH00084                                      0066 00133000
         BNH   @RF00066                                            0066 00134000
*     DO;                           /* DO THE FOLLOWING              */ 00135000
*AMDPFLT3:                                                         0068 00136000
*       COUNT=1;                    /* RE-INITIALIZE INDEX TO ONE    */ 00137000
AMDPFLT3 LA    COUNT,1                                             0068 00138000
*       GOTO AMDPASCB;              /* CHECK FOR ASCB ADDR     Y02014*/ 00139000
         B     AMDPASCB                                            0069 00140000
*     END;                                                         0070 00141000
*   IF JOBNAMES(COUNT)=BLANK1       /* IF NEXT SLOT BLANK,           */ 00142000
*     THEN                          /* THEN                          */ 00143000
@RF00066 LR    @10,COUNT                                           0071 00144000
         SLA   @10,3                                               0071 00145000
         ALR   @10,AEDITCBR                                        0071 00146000
         CLC   JOBNAMES-8(8,@10),BLANK1                            0071 00147000
         BE    @RT00071                                            0071 00148000
*     GOTO AMDPFLT3;                /* CHECK ASCB ADDRESSES          */ 00149000
*   GOTO AMDPFLT2;                  /* IF NON-BLANK, CHK FOR MTCH    */ 00150000
         B     AMDPFLT2                                            0073 00151000
*AMDPFLT4:                                                         0074 00152000
*   IF ASCBADDR(COUNT)=0            /* IF ASCB ADDRS NOT SPECIFIED   */ 00153000
*     THEN                          /* THEN                    Y02014*/ 00154000
AMDPFLT4 LR    @10,COUNT                                           0074 00155000
         SLA   @10,2                                               0074 00156000
         L     @10,ASCBADDR-4(@10,AEDITCBR)                        0074 00157000
         LTR   @10,@10                                             0074 00158000
         BZ    @RT00074                                            0074 00159000
*     GOTO AMDPFID;                 /* SIMPLY CHECK FIDS & SYS BT    */ 00160000
*AMDPFL41:                                                         0076 00161000
*   IF INREC(OFSTDATA:OFSTDATA      /* Q/DOES ASCBADDRS IN REC       */ 00162000
*       +3)=ASCBADDR                /* MATCH ASCB ADDRS IN TABLE-    */ 00163000
*       (COUNT)THEN                 /* IF SO, NOW              Y02014*/ 00164000
AMDPFL41 LH    @10,OFSTDATA(,AEDITCBR)                             0076 00165000
         L     @08,CURREC(,AEDITCBR)                               0076 00166000
         LR    @03,COUNT                                           0076 00167000
         SLA   @03,2                                               0076 00168000
         AL    @08,@CF00382                                        0076 00169000
         L     @10,INREC(@10,@08)                                  0076 00170000
         CL    @10,ASCBADDR-4(@03,AEDITCBR)                        0076 00171000
         BE    @RT00076                                            0076 00172000
*     GOTO AMDPFID;                 /* CHECK FIDS & SYS BIT          */ 00173000
*   COUNT=COUNT+1;                  /* UPDATE INDEX                  */ 00174000
         AH    COUNT,@CH00043                                      0078 00175000
*   IF COUNT>5 THEN                 /* IF BEYOND END OF ASCB TABLE   */ 00176000
         CH    COUNT,@CH00084                                      0079 00177000
         BNH   @RF00079                                            0079 00178000
*     DO;                           /* DO THE FOLLOWING              */ 00179000
*AMDPJAT:                                                          0081 00180000
*       FLT='0'B;                   /* SET OFF AMDPRFLT DEBUG FLG    */ 00181000
AMDPJAT  NI    FLT(AEDITCBR),B'11111011'                           0081 00182000
*       RETURN;                     /* RETURN TO AMDPRFRM            */ 00183000
@EL00001 L     @13,4(,@13)                                         0082 00184000
@EF00001 DS    0H                                                  0082 00185000
@ER00001 LM    @14,@12,12(@13)                                     0082 00186000
         BR    @14                                                 0082 00187000
*     END;                                                         0083 00188000
*AMDPASCB:                                                         0084 00189000
*   IF ASCBADDR(COUNT)=0            /* IF CURRENT SLOT EQUAL TO      */ 00190000
*     THEN                          /* ZERO, THEN              Y02014*/ 00191000
@RF00079 DS    0H                                                  0084 00192000
AMDPASCB LR    @10,COUNT                                           0084 00193000
         SLA   @10,2                                               0084 00194000
         L     @10,ASCBADDR-4(@10,AEDITCBR)                        0084 00195000
         LTR   @10,@10                                             0084 00196000
         BZ    @RT00084                                            0084 00197000
*     GOTO AMDPJAT;                 /* PREPARE FOR RETURN            */ 00198000
*   GOTO AMDPFL41;                  /* IF NOT, CHECK FOR MATCH       */ 00199000
         B     AMDPFL41                                            0086 00200000
*AMDPFID:                                                          0087 00201000
*   IF(INREC(OFSTEID)&'F0'X)        /* IF FIRST CHAR OF EID IS       */ 00202000
*       ='E0'X THEN                 /* EQUAL TO X'E', THEN     Y02014*/ 00203000
AMDPFID  LH    @10,OFSTEID(,AEDITCBR)                              0087 00204000
         L     @08,CURREC(,AEDITCBR)                               0087 00205000
         ALR   @08,@10                                             0087 00206000
         AL    @08,@CF00382                                        0087 00207000
         MVC   @TS00001(1),INREC(@08)                              0087 00208000
         NI    @TS00001,X'F0'                                      0087 00209000
         CLI   @TS00001,X'E0'                                      0087 00210000
         BE    @RT00087                                            0087 00211000
*     GOTO AMDPUSR;                 /* HAVE USR EID            Y02014*/ 00212000
*   IF SYS='1'B THEN                /* IS ALL SYSTEM EVENTS TO BE    */ 00213000
         TM    SYS(AEDITCBR),B'00100000'                           0089 00214000
         BO    @RT00089                                            0089 00215000
*     GOTO AMDPBRH;                 /* EDITED, NOW CHK EXIT SLOT     */ 00216000
*AMDPFLT5:                                                         0091 00217000
*   IF INREC(6)='03'X THEN          /* SYSM RECORD             Y02014*/ 00218000
AMDPFLT5 L     @10,CURREC(,AEDITCBR)                               0091 00219000
         CLI   INREC+5(@10),X'03'                                  0091 00220000
         BE    @RT00091                                            0091 00221000
*     GO TO SYSMCHK;                /* FILTER FOR SYSM         Y02014*/ 00222000
*   IF INREC(6)='00'X               /* IF FID IS FOR IO OR SIO       */ 00223000
*     THEN                          /* THEN                          */ 00224000
         CLI   INREC+5(@10),X'00'                                  0093 00225000
         BE    @RT00093                                            0093 00226000
*     GOTO AMDPIO1;                 /* CHECK IO AND SIO FLAGS        */ 00227000
*   IF INREC(6)='01'X               /* IF FID IS FOR SVC             */ 00228000
*     THEN                          /* THEN                          */ 00229000
         CLI   INREC+5(@10),X'01'                                  0095 00230000
         BNE   @RF00095                                            0095 00231000
*     DO;                           /* DO THE FOLLOWING              */ 00232000
*       IF ALLV='1'B                /* CHECK SVC FLAGS               */ 00233000
*           |SELV='1'B THEN         /* IF 'ALL' OR 'SEL' ON,         */ 00234000
         TM    ALLV(AEDITCBR),B'11000000'                          0097 00235000
         BNZ   @RT00097                                            0097 00236000
*         GOTO AMDPBRH;             /* CHECK EXIT SLOT               */ 00237000
*       GOTO AMDPJAT;               /* IF NOT, PREPARE TO RETURN     */ 00238000
         B     AMDPJAT                                             0099 00239000
*     END;                                                         0100 00240000
*   IF INREC(6)='02'X               /* IF FID IS '02'X         Y02014*/ 00241000
*     THEN                                                         0101 00242000
@RF00095 L     @10,CURREC(,AEDITCBR)                               0101 00243000
         CLI   INREC+5(@10),X'02'                                  0101 00244000
         BNE   @RF00101                                            0101 00245000
*     DO;                           /*                         Y02014*/ 00246000
*       IF DSP='1'B|ALLP='1'B       /* MUST BE DSP OR PI       Y02014*/ 00247000
*           |SELP='1'B THEN         /*                         Y02014*/ 00248000
         TM    DSP(AEDITCBR),B'01000000'                           0103 00249000
         BO    @RT00103                                            0103 00250000
         TM    ALLP(AEDITCBR),B'11000000'                          0103 00251000
         BNZ   @RT00103                                            0103 00252000
*         GOTO AMDPBRH;             /* CHECK EXIT SLOT         Y02014*/ 00253000
*       GOTO AMDPJAT;               /* PREPARE FOR RETURN      Y02014*/ 00254000
         B     AMDPJAT                                             0105 00255000
*     END;                          /*                         Y02014*/ 00256000
*   IF INREC(6)='04'X               /* IS FID 04               Y02014*/ 00257000
*     THEN                                                         0107 00258000
@RF00101 L     @10,CURREC(,AEDITCBR)                               0107 00259000
         CLI   INREC+5(@10),X'04'                                  0107 00260000
         BNE   @RF00107                                            0107 00261000
*     DO;                           /*                         Y02014*/ 00262000
*       IF RNIO='1'B|SRM='1'B       /* MUST BE RNIO OR RR      Y02014*/ 00263000
*           |RR='1'B THEN           /* OR SRM                  Y02014*/ 00264000
         TM    RNIO(AEDITCBR),B'00001110'                          0109 00265000
         BNZ   @RT00109                                            0109 00266000
*         GOTO AMDPBRH;             /* CHECK OUT SLOT          Y02014*/ 00267000
*       GOTO AMDPJAT;               /* PREPARE FOR RETURN      Y02014*/ 00268000
         B     AMDPJAT                                             0111 00269000
*     END;                          /*                         Y02014*/ 00270000
*   IF INREC(6)¬='05'X              /* IF FID IS NOT '05'X     Y02014*/ 00271000
*     THEN                                                         0113 00272000
@RF00107 L     @10,CURREC(,AEDITCBR)                               0113 00273000
         CLI   INREC+5(@10),X'05'                                  0113 00274000
         BNE   @RT00113                                            0113 00275000
*     GOTO AMDPJAT;                 /* PREPARE FOR RETURN      Y02014*/ 00276000
*   IF EXT='1'B                     /* MUST BE EXT             Y02014*/ 00277000
*     THEN                                                         0115 00278000
         TM    EXT(AEDITCBR),B'10000000'                           0115 00279000
         BO    @RT00115                                            0115 00280000
*     GOTO AMDPBRH;                 /* CHECK EXIT SLOT         Y02014*/ 00281000
*   GOTO AMDPJAT;                   /* PREPARE FOR RETURN      Y02014*/ 00282000
         B     AMDPJAT                                             0117 00283000
*AMDPIO1:                                                          0118 00284000
*   IF ALLS='1'B                    /* IF EDITING ALL SIO,           */ 00285000
*       |SELS='1'B                  /* OR SEL SIO,                   */ 00286000
*       |ALLI='1'B                  /* OR ALL IO,                    */ 00287000
*       |SELI='1'B THEN             /* OR SEL IO, THEN               */ 00288000
AMDPIO1  TM    ALLS(AEDITCBR),B'11000000'                          0118 00289000
         BNZ   @RT00118                                            0118 00290000
         TM    ALLI(AEDITCBR),B'11000000'                          0118 00291000
         BNZ   @RT00118                                            0118 00292000
*     GOTO AMDPBRH;                 /* CHECK EXIT SLOT               */ 00293000
*   GOTO AMDPJAT;                   /* IF NOT, PREPARE FOR RETURN    */ 00294000
         B     AMDPJAT                                             0120 00295000
*AMDPBRH:                                                          0121 00296000
*   CALL PRAPP;                     /* CALL AMDPRAPP                 */ 00297000
AMDPBRH  L     @10,AFRMAD(,AEDITCBR)                               0121 00298000
         L     @15,AAPP(,@10)                                      0121 00299000
         BALR  @14,@15                                             0121 00300000
*   IF DMDFMT='1'B THEN             /* IF DMDFMT BIT STILL ON        */ 00301000
         TM    DMDFMT(AEDITCBR),B'00000001'                        0122 00302000
         BNO   @RF00122                                            0122 00303000
*     DO;                           /* DO THE FOLLOWING              */ 00304000
*       SYS='0'B;                   /* TURN OFF SYS BIT              */ 00305000
*       SYSM='0'B;                  /* TURN OFF SYSM BIT             */ 00306000
         NI    SYS(AEDITCBR),B'11001111'                           0125 00307000
*       DMDFMT='0'B;                /* TURN OFF DMDFMT BIT           */ 00308000
         NI    DMDFMT(AEDITCBR),B'11111110'                        0126 00309000
*     END;                                                         0127 00310000
*   GOTO AMDPJAT;                   /* THEN PREPARE FOR RETURN       */ 00311000
         B     AMDPJAT                                             0128 00312000
*AMDPUSR:                                                          0129 00313000
*   IF ALLU='1'B THEN               /* IF EDITING ALL USR, THEN      */ 00314000
AMDPUSR  TM    ALLU(AEDITCBR),B'10000000'                          0129 00315000
         BO    @RT00129                                            0129 00316000
*     GOTO AMDPBRH;                 /* CHECK EXIT SLOT               */ 00317000
*   USRVAL=INREC(OFSTEID:           /* STRIP OFF X'E' IN USR EID     */ 00318000
*       OFSTEID+1)&'0FFF'X;                                        0131 00319000
         LH    @10,OFSTEID(,AEDITCBR)                              0131 00320000
         L     @08,CURREC(,AEDITCBR)                               0131 00321000
         ALR   @08,@10                                             0131 00322000
         AL    @08,@CF00382                                        0131 00323000
         MVC   USRVAL(2),INREC(@08)                                0131 00324000
         NC    USRVAL(2),@CB00368                                  0131 00325000
*AMDPUSR1:                                                         0132 00326000
*   IF USRNGTAB(COUNT)=BLANK1       /* IF NO USR EIDS SPECIFIED,     */ 00327000
*     THEN                          /* THEN                          */ 00328000
AMDPUSR1 LR    @10,COUNT                                           0132 00329000
         SLA   @10,2                                               0132 00330000
         ST    @10,@TF00001                                        0132 00331000
         ALR   @10,AEDITCBR                                        0132 00332000
         CLC   USRNGTAB-4(4,@10),BLANK1                            0132 00333000
         BE    @RT00132                                            0132 00334000
*     GOTO AMDPJAT;                 /* PREPARE FOR RETURN            */ 00335000
*   IF USRVAL=>USRNGTAB(COUNT,      /* IF CURRENT EID IS EQUAL TO    */ 00336000
*       1:2)                        /* OR GTR THAN LOWER EID RNG     */ 00337000
*       &USRVAL=<USRNGTAB(COUNT,    /* AND EQUAL TO OR LESS THAN     */ 00338000
*       3:4)THEN                    /* UPPER EID RANGE, THEN         */ 00339000
         LR    @10,AEDITCBR                                        0134 00340000
         AL    @10,@TF00001                                        0134 00341000
         CLC   USRVAL(2),USRNGTAB-4(@10)                           0134 00342000
         BL    @RF00134                                            0134 00343000
         LR    @10,AEDITCBR                                        0134 00344000
         AL    @10,@TF00001                                        0134 00345000
         CLC   USRVAL(2),USRNGTAB-2(@10)                           0134 00346000
         BNH   @RT00134                                            0134 00347000
*     GOTO AMDPBRH;                 /* CHECK EXIT SLOT               */ 00348000
*   COUNT=COUNT+1;                  /* IF NOT, UPDATE INDEX          */ 00349000
@RF00134 AH    COUNT,@CH00043                                      0136 00350000
*   IF COUNT>20 THEN                /* IF BEYOND USR EID TABLE,      */ 00351000
         CH    COUNT,@CH00128                                      0137 00352000
         BH    @RT00137                                            0137 00353000
*     GOTO AMDPJAT;                 /* PREPARE FOR RETURN            */ 00354000
*   GOTO AMDPUSR1;                  /* IF NOT, CONTINUE TABL SRCH    */ 00355000
         B     AMDPUSR1                                            0139 00356000
*SYSMCHK:                                                          0140 00357000
*   EIDPTR=ADDR(INREC(OFSTEID));    /* SET UP EID ADDR               */ 00358000
SYSMCHK  LH    @10,OFSTEID(,AEDITCBR)                              0140 00359000
         L     EIDPTR,CURREC(,AEDITCBR)                            0140 00360000
         AL    EIDPTR,@CF00382                                     0140 00361000
         LA    EIDPTR,INREC(@10,EIDPTR)                            0140 00362000
*   IF EIDFLD=IMDMSIO THEN                                         0141 00363000
         CLC   EIDFLD(2,EIDPTR),@CB00219                           0141 00364000
         BNE   @RF00141                                            0141 00365000
*     DO;                           /* SIO EID                 Y02014*/ 00366000
*       IF ALLS='1'B|SELS='1'B THEN /* EDITING SIO             Y02014*/ 00367000
         TM    ALLS(AEDITCBR),B'11000000'                          0143 00368000
         BNZ   @RT00143                                            0143 00369000
*         GO TO AMDPBRH;            /* CHECK EXIT SLOT         Y02014*/ 00370000
*       GO TO AMDPJAT;              /* PREPARE FOR RETURN      Y02014*/ 00371000
         B     AMDPJAT                                             0145 00372000
*     END;                                                         0146 00373000
*   IF EIDFLD=IMDMIO1|EIDFLD=IMDMIO2|/* IO EID                 Y02014*/ 00374000
*       EIDFLD=IMDMEOS|EIDFLD=IMDMPCI THEN                         0147 00375000
@RF00141 CLC   EIDFLD(2,EIDPTR),@CB00215                           0147 00376000
         BE    @RT00147                                            0147 00377000
         CLC   EIDFLD(2,EIDPTR),@CB00217                           0147 00378000
         BE    @RT00147                                            0147 00379000
         CLC   EIDFLD(2,EIDPTR),@CB00231                           0147 00380000
         BE    @RT00147                                            0147 00381000
         CLC   EIDFLD(2,EIDPTR),@CB00209                           0147 00382000
         BNE   @RF00147                                            0147 00383000
@RT00147 DS    0H                                                  0148 00384000
*     DO;                                                          0148 00385000
*       IF ALLI='1'B|SELI='1'B THEN /* EDITING IO              Y02014*/ 00386000
         TM    ALLI(AEDITCBR),B'11000000'                          0149 00387000
         BNZ   @RT00149                                            0149 00388000
*         GO TO AMDPBRH;            /* CHECK EXIT SLOT         Y02014*/ 00389000
*       GO TO AMDPJAT;              /* PREPARE FOR RETURN      Y02014*/ 00390000
         B     AMDPJAT                                             0151 00391000
*     END;                                                         0152 00392000
*   IF EIDFLD=IMDMSVC THEN                                         0153 00393000
@RF00147 CLC   EIDFLD(2,EIDPTR),@CB00211                           0153 00394000
         BNE   @RF00153                                            0153 00395000
*     DO;                           /* SVC EID                 Y02014*/ 00396000
*       IF ALLV='1'B|SELV='1'B THEN /* EDITING SVC             Y02014*/ 00397000
         TM    ALLV(AEDITCBR),B'11000000'                          0155 00398000
         BNZ   @RT00155                                            0155 00399000
*         GO TO AMDPBRH;            /* CHECK EXIT SLOT         Y02014*/ 00400000
*       GO TO AMDPJAT;              /* PREPARE FOR RETURN      Y02014*/ 00401000
         B     AMDPJAT                                             0157 00402000
*     END;                                                         0158 00403000
*   IF EIDFLD=IMDMPI|EIDFLD=IMDMTINT/* PI EID                  Y02014*/ 00404000
*     THEN                                                         0159 00405000
@RF00153 CLC   EIDFLD(2,EIDPTR),@CB00225                           0159 00406000
         BE    @RT00159                                            0159 00407000
         CLC   EIDFLD(2,EIDPTR),@CB00229                           0159 00408000
         BNE   @RF00159                                            0159 00409000
@RT00159 DS    0H                                                  0160 00410000
*     DO;                                                          0160 00411000
*       IF ALLP='1'B|SELP='1'B THEN /* EDITING PI              Y02014*/ 00412000
         TM    ALLP(AEDITCBR),B'11000000'                          0161 00413000
         BNZ   @RT00161                                            0161 00414000
*         GO TO AMDPBRH;            /* CHECK EXIT SLOT         Y02014*/ 00415000
*       GO TO AMDPJAT;              /* PREPARE FOR RETURN      Y02014*/ 00416000
         B     AMDPJAT                                             0163 00417000
*     END;                                                         0164 00418000
*   IF EIDFLD=IMDMEXT THEN                                         0165 00419000
@RF00159 CLC   EIDFLD(2,EIDPTR),@CB00227                           0165 00420000
         BNE   @RF00165                                            0165 00421000
*     DO;                           /* EXT EID                 Y02014*/ 00422000
*       IF EXT='1'B THEN            /* EDITING EXT             Y02014*/ 00423000
         TM    EXT(AEDITCBR),B'10000000'                           0167 00424000
         BO    @RT00167                                            0167 00425000
*         GO TO AMDPBRH;            /* CHECK EXIT SLOT         Y02014*/ 00426000
*       GO TO AMDPJAT;              /* PREPARE FOR RETURN      Y02014*/ 00427000
         B     AMDPJAT                                             0169 00428000
*     END;                                                         0170 00429000
*   IF EIDFLD=IMDMSRM THEN                                         0171 00430000
@RF00165 CLC   EIDFLD(2,EIDPTR),@CB00250                           0171 00431000
         BNE   @RF00171                                            0171 00432000
*     DO;                           /* SRM EID                 Y02014*/ 00433000
*       IF SRM='1'B THEN            /* EDITING SRM             Y02014*/ 00434000
         TM    SRM(AEDITCBR),B'00000100'                           0173 00435000
         BO    @RT00173                                            0173 00436000
*         GO TO AMDPBRH;            /* CHECK EXIT SLOT         Y02014*/ 00437000
*       GO TO AMDPJAT;              /* PREPARE FOR RETURN      Y02014*/ 00438000
         B     AMDPJAT                                             0175 00439000
*     END;                                                         0176 00440000
*   IF EIDFLD=IMDMSTAE|EIDFLD=IMDMFRR/* RR EID                 Y02014*/ 00441000
*     THEN                                                         0177 00442000
@RF00171 CLC   EIDFLD(2,EIDPTR),@CB00233                           0177 00443000
         BE    @RT00177                                            0177 00444000
         CLC   EIDFLD(2,EIDPTR),@CB00235                           0177 00445000
         BNE   @RF00177                                            0177 00446000
@RT00177 DS    0H                                                  0178 00447000
*     DO;                                                          0178 00448000
*       IF RR='1'B THEN             /* EDITING RR              Y02014*/ 00449000
         TM    RR(AEDITCBR),B'00000010'                            0179 00450000
         BO    @RT00179                                            0179 00451000
*         GO TO AMDPBRH;            /* CHECK EXIT SLOT         Y02014*/ 00452000
*       GO TO AMDPJAT;              /* PREPARE FOR RETURN      Y02014*/ 00453000
         B     AMDPJAT                                             0181 00454000
*     END;                                                         0182 00455000
*   IF EIDFLD=IMDMTP1|EIDFLD=IMDMTP2/* RNIO EID                Y02014*/ 00456000
*     THEN                                                         0183 00457000
@RF00177 CLC   EIDFLD(2,EIDPTR),@CB00237                           0183 00458000
         BE    @RT00183                                            0183 00459000
         CLC   EIDFLD(2,EIDPTR),@CB00239                           0183 00460000
         BNE   @RF00183                                            0183 00461000
@RT00183 DS    0H                                                  0184 00462000
*     DO;                                                          0184 00463000
*       IF RNIO='1'B THEN           /* EDITING RNIO            Y02014*/ 00464000
         TM    RNIO(AEDITCBR),B'00001000'                          0185 00465000
         BO    @RT00185                                            0185 00466000
*         GO TO AMDPBRH;            /* CHECK EXIT SLOT         Y02014*/ 00467000
*       GO TO AMDPJAT;              /* PREPARE FOR RETURN      Y02014*/ 00468000
         B     AMDPJAT                                             0187 00469000
*     END;                                                         0188 00470000
*   IF EIDFLD=IMDMDSP1|EIDFLD=IMDMDSP2|/* DSP EID              Y02014*/ 00471000
*       EIDFLD=IMDMDSP3|EIDFLD=IMDMDSP4 THEN                       0189 00472000
@RF00183 CLC   EIDFLD(2,EIDPTR),@CB00241                           0189 00473000
         BE    @RT00189                                            0189 00474000
         CLC   EIDFLD(2,EIDPTR),@CB00243                           0189 00475000
         BE    @RT00189                                            0189 00476000
         CLC   EIDFLD(2,EIDPTR),@CB00213                           0189 00477000
         BE    @RT00189                                            0189 00478000
         CLC   EIDFLD(2,EIDPTR),@CB00246                           0189 00479000
         BNE   @RF00189                                            0189 00480000
@RT00189 DS    0H                                                  0190 00481000
*     DO;                                                          0190 00482000
*       IF DSP='1'B THEN            /* EDITING DSP             Y02014*/ 00483000
         TM    DSP(AEDITCBR),B'01000000'                           0191 00484000
         BO    @RT00191                                            0191 00485000
*         GO TO AMDPBRH;            /* CHECK EXIT SLOT         Y02014*/ 00486000
*       GO TO AMDPJAT;              /* PREPARE FOR RETURN      Y02014*/ 00487000
         B     AMDPJAT                                             0193 00488000
*     END;                                                         0194 00489000
*   GO TO AMDPJAT;                  /* PREPARE FOR RETURN      Y02014*/ 00490000
         B     AMDPJAT                                             0195 00491000
*   END AMDPRFLT                                                   0196 00492000
*                                                                  0196 00493000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */ 00494000
*/*%INCLUDE SYSLIB  (AMDPRTAB)                                       */ 00495000
*/*%INCLUDE SYSLIB  (AMDOPTWD)                                       */ 00496000
*/*%INCLUDE SYSLIB  (IMDMEDIT)                                       */ 00497000
*                                                                  0196 00498000
*       ;                                                          0196 00499000
@DATA    DS    0H                                                       00500000
@CH00043 DC    H'1'                                                     00501000
@CH00097 DC    H'4'                                                     00502000
@CH00084 DC    H'5'                                                     00503000
@CH00054 DC    H'7'                                                     00504000
@CH00162 DC    H'15'                                                    00505000
@CH00128 DC    H'20'                                                    00506000
         DS    0F                                                       00507000
@SA00001 DS    18F                                                      00508000
@TF00001 DS    F                                                        00509000
         DS    0F                                                       00510000
@CF00382 DC    F'-1'                                                    00511000
         DS    0D                                                       00512000
@TS00001 DS    CL1                                                      00513000
@CB00209 DC    X'2100'                                                  00514000
@CB00211 DC    X'1000'                                                  00515000
@CB00213 DC    X'0003'                                                  00516000
@CB00215 DC    X'5201'                                                  00517000
@CB00217 DC    X'5200'                                                  00518000
@CB00219 DC    X'5100'                                                  00519000
@CB00225 DC    X'6101'                                                  00520000
@CB00227 DC    X'6201'                                                  00521000
@CB00229 DC    X'6200'                                                  00522000
@CB00231 DC    X'5101'                                                  00523000
@CB00233 DC    X'4002'                                                  00524000
@CB00235 DC    X'4003'                                                  00525000
@CB00237 DC    X'8100'                                                  00526000
@CB00239 DC    X'8200'                                                  00527000
@CB00241 DC    X'0001'                                                  00528000
@CB00243 DC    X'0002'                                                  00529000
@CB00246 DC    X'0004'                                                  00530000
@CB00250 DC    X'4001'                                                  00531000
@CB00368 DC    X'0FFF'                                                  00532000
USRVAL   DS    CL2                                                      00533000
BLANK1   DC    CL8'        '                                            00534000
FLTPTCH  DC    CL100'FLTPTCH'                                           00535000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       00536000
@01      EQU   01                                                       00537000
@02      EQU   02                                                       00538000
@03      EQU   03                                                       00539000
@04      EQU   04                                                       00540000
@05      EQU   05                                                       00541000
@06      EQU   06                                                       00542000
@07      EQU   07                                                       00543000
@08      EQU   08                                                       00544000
@09      EQU   09                                                       00545000
@10      EQU   10                                                       00546000
@11      EQU   11                                                       00547000
@12      EQU   12                                                       00548000
@13      EQU   13                                                       00549000
@14      EQU   14                                                       00550000
@15      EQU   15                                                       00551000
JOBOFST  EQU   @03                                                      00552000
EIDPTR   EQU   @02                                                      00553000
COUNT    EQU   @02                                                      00554000
AEDITCBR EQU   @09                                                      00555000
REG12    EQU   @12                                                      00556000
         ENTRY FLTPTCH                                                  00557000
AMDPRTAB EQU   0                                                        00558000
CURREC   EQU   AMDPRTAB+4                                               00559000
DEBGFLGS EQU   AMDPRTAB+8                                               00560000
PTHFLGS1 EQU   DEBGFLGS                                                 00561000
FLT      EQU   PTHFLGS1                                                 00562000
PTHFLGS2 EQU   DEBGFLGS+1                                               00563000
INRFCFGS EQU   DEBGFLGS+2                                               00564000
FMT      EQU   INRFCFGS                                                 00565000
DMDFMT   EQU   INRFCFGS                                                 00566000
IOFLGS   EQU   DEBGFLGS+3                                               00567000
GTFWDPTR EQU   AMDPRTAB+20                                              00568000
USEREXIT EQU   AMDPRTAB+24                                              00569000
STARTIME EQU   AMDPRTAB+40                                              00570000
STOPTIME EQU   AMDPRTAB+52                                              00571000
NAMES    EQU   AMDPRTAB+64                                              00572000
JOBNAMES EQU   NAMES                                                    00573000
ADS      EQU   AMDPRTAB+104                                             00574000
AADS     EQU   ADS                                                      00575000
ASCBADDR EQU   AADS                                                     00576000
SIF      EQU   AMDPRTAB+124                                             00577000
SIOFLGS  EQU   SIF                                                      00578000
ALLS     EQU   SIOFLGS                                                  00579000
SELS     EQU   SIOFLGS                                                  00580000
DVADS1   EQU   AMDPRTAB+128                                             00581000
IO       EQU   AMDPRTAB+228                                             00582000
IOFLGS2  EQU   IO                                                       00583000
ALLI     EQU   IOFLGS2                                                  00584000
SELI     EQU   IOFLGS2                                                  00585000
DVADS2   EQU   AMDPRTAB+232                                             00586000
VCF      EQU   AMDPRTAB+332                                             00587000
SVCFLGS  EQU   VCF                                                      00588000
ALLV     EQU   SVCFLGS                                                  00589000
SELV     EQU   SVCFLGS                                                  00590000
USR      EQU   AMDPRTAB+368                                             00591000
USRFLGS  EQU   USR                                                      00592000
ALLU     EQU   USRFLGS                                                  00593000
USRTAB   EQU   AMDPRTAB+372                                             00594000
USRNGTAB EQU   USRTAB                                                   00595000
PI       EQU   AMDPRTAB+452                                             00596000
PIFLGS   EQU   PI                                                       00597000
ALLP     EQU   PIFLGS                                                   00598000
SELP     EQU   PIFLGS                                                   00599000
PGMNGEN  EQU   AMDPRTAB+456                                             00600000
GENFLAGS EQU   PGMNGEN+3                                                00601000
EXT      EQU   GENFLAGS                                                 00602000
DSP      EQU   GENFLAGS                                                 00603000
SYS      EQU   GENFLAGS                                                 00604000
SYSM     EQU   GENFLAGS                                                 00605000
RNIO     EQU   GENFLAGS                                                 00606000
SRM      EQU   GENFLAGS                                                 00607000
RR       EQU   GENFLAGS                                                 00608000
GENFLGS1 EQU   AMDPRTAB+460                                             00609000
AFRMAD   EQU   AMDPRTAB+488                                             00610000
OFSTEID  EQU   AMDPRTAB+492                                             00611000
OFSTDATA EQU   AMDPRTAB+494                                             00612000
ESTARTME EQU   AMDPRTAB+500                                             00613000
ESTOPTME EQU   AMDPRTAB+509                                             00614000
AMDOPTWD EQU   0                                                        00615000
OPTS1    EQU   AMDOPTWD                                                 00616000
OPTS2    EQU   AMDOPTWD+1                                               00617000
OPTS3    EQU   AMDOPTWD+2                                               00618000
OPTS4    EQU   AMDOPTWD+3                                               00619000
OPTTIME  EQU   OPTS4                                                    00620000
FRMATAB  EQU   0                                                        00621000
AGET     EQU   FRMATAB                                                  00622000
AHEX     EQU   FRMATAB+4                                                00623000
ACON     EQU   FRMATAB+8                                                00624000
AFLT     EQU   FRMATAB+12                                               00625000
AAPP     EQU   FRMATAB+16                                               00626000
AEXT     EQU   FRMATAB+20                                               00627000
ASPI     EQU   FRMATAB+28                                               00628000
ATME     EQU   FRMATAB+32                                               00629000
PRAPP    EQU   0                                                        00630000
PREXT    EQU   0                                                        00631000
EIDFLD   EQU   0                                                        00632000
INREC    EQU   0                                                        00633000
PRCON    EQU   0                                                        00634000
PRFLT    EQU   0                                                        00635000
PRGET    EQU   0                                                        00636000
PRHEX    EQU   0                                                        00637000
PRSPI    EQU   0                                                        00638000
PRTME    EQU   0                                                        00639000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    00640000
FRMRES1  EQU   FRMATAB+36                                               00641000
APRFMG   EQU   FRMATAB+24                                               00642000
OPTRES3  EQU   OPTS4                                                    00643000
OPTIOSIO EQU   OPTS3                                                    00644000
OPTRES2  EQU   OPTS3                                                    00645000
OPTRR    EQU   OPTS3                                                    00646000
OPTSRM   EQU   OPTS3                                                    00647000
OPTRNIO  EQU   OPTS3                                                    00648000
OPTEXT   EQU   OPTS3                                                    00649000
OPTIOP   EQU   OPTS2                                                    00650000
OPTIO    EQU   OPTS2                                                    00651000
OPTPIP   EQU   OPTS2                                                    00652000
OPTPI    EQU   OPTS2                                                    00653000
OPTSIOP  EQU   OPTS2                                                    00654000
OPTSIO   EQU   OPTS2                                                    00655000
OPTSVCP  EQU   OPTS2                                                    00656000
OPTSVC   EQU   OPTS2                                                    00657000
OPTPCI   EQU   OPTS1                                                    00658000
OPTRES1  EQU   OPTS1                                                    00659000
OPTDSP   EQU   OPTS1                                                    00660000
OPTTRC   EQU   OPTS1                                                    00661000
OPTUSR   EQU   OPTS1                                                    00662000
OPTSYS   EQU   OPTS1                                                    00663000
OPTSYSP  EQU   OPTS1                                                    00664000
OPTSYSM  EQU   OPTS1                                                    00665000
RESERVED EQU   AMDPRTAB+522                                             00666000
CVTTZONE EQU   AMDPRTAB+518                                             00667000
ESPSEC   EQU   ESTOPTME+7                                               00668000
ESPMIN   EQU   ESTOPTME+5                                               00669000
ESPHR    EQU   ESTOPTME+3                                               00670000
ESPDAY   EQU   ESTOPTME                                                 00671000
ESSEC    EQU   ESTARTME+7                                               00672000
ESMIN    EQU   ESTARTME+5                                               00673000
ESHR     EQU   ESTARTME+3                                               00674000
ESDAY    EQU   ESTARTME                                                 00675000
ADTSBUF  EQU   AMDPRTAB+496                                             00676000
REENTWKA EQU   AMDPRTAB+484                                             00677000
PRFMTADD EQU   AMDPRTAB+480                                             00678000
AEIOCT   EQU   AMDPRTAB+476                                             00679000
EXITADDR EQU   AMDPRTAB+472                                             00680000
EXITNM   EQU   AMDPRTAB+464                                             00681000
RECDLL   EQU   AMDPRTAB+461                                             00682000
@NM00001 EQU   GENFLGS1                                                 00683000
FIRSTHSW EQU   GENFLGS1                                                 00684000
TSFOUND  EQU   GENFLGS1                                                 00685000
EOFINPRO EQU   GENFLGS1                                                 00686000
TS       EQU   GENFLGS1                                                 00687000
EOF      EQU   GENFLAGS                                                 00688000
PICODEA  EQU   PGMNGEN+2                                                00689000
PICODES  EQU   PGMNGEN                                                  00690000
Q        EQU   PI+1                                                     00691000
P01R     EQU   PIFLGS                                                   00692000
O        EQU   USR+1                                                    00693000
N01R     EQU   USRFLGS                                                  00694000
SELU     EQU   USRFLGS                                                  00695000
SVCNUMS  EQU   AMDPRTAB+336                                             00696000
M        EQU   VCF+1                                                    00697000
L        EQU   SVCFLGS                                                  00698000
IODVADS  EQU   DVADS2                                                   00699000
K01RES   EQU   IO+1                                                     00700000
JJ       EQU   IOFLGS2                                                  00701000
SIODVADS EQU   DVADS1                                                   00702000
II       EQU   SIF+1                                                    00703000
H        EQU   SIOFLGS                                                  00704000
NOEQU    EQU   SIOFLGS                                                  00705000
EQUIV    EQU   SIOFLGS                                                  00706000
DAY2     EQU   STOPTIME+10                                              00707000
F        EQU   STOPTIME+8                                               00708000
TIME2    EQU   STOPTIME                                                 00709000
DAY      EQU   STARTIME+10                                              00710000
D        EQU   STARTIME+8                                               00711000
TIME     EQU   STARTIME                                                 00712000
DDNAME   EQU   AMDPRTAB+32                                              00713000
C        EQU   DEBGFLGS+4                                               00714000
B        EQU   IOFLGS                                                   00715000
GETEOF   EQU   IOFLGS                                                   00716000
EDITSTOP EQU   INRFCFGS                                                 00717000
EXTTRC   EQU   INRFCFGS                                                 00718000
RET      EQU   INRFCFGS                                                 00719000
SPIE     EQU   INRFCFGS                                                 00720000
TERM     EQU   INRFCFGS                                                 00721000
FLMODE   EQU   INRFCFGS                                                 00722000
REMAIN   EQU   PTHFLGS2                                                 00723000
APP      EQU   PTHFLGS2                                                 00724000
REXT     EQU   PTHFLGS1                                                 00725000
FRM      EQU   PTHFLGS1                                                 00726000
HEX      EQU   PTHFLGS1                                                 00727000
CON      EQU   PTHFLGS1                                                 00728000
GET      EQU   PTHFLGS1                                                 00729000
SCN      EQU   PTHFLGS1                                                 00730000
ROOT     EQU   PTHFLGS1                                                 00731000
AFMG     EQU   AMDPRTAB                                                 00732000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      00733000
@RC00040 EQU   AMDPBRH                                                  00734000
@RT00048 EQU   AMDPJAT                                                  00735000
@RT00059 EQU   AMDPFLT4                                                 00736000
@RT00061 EQU   AMDPFLT4                                                 00737000
@RT00063 EQU   AMDPFID                                                  00738000
@RT00071 EQU   AMDPFLT3                                                 00739000
@RT00074 EQU   AMDPFID                                                  00740000
@RT00076 EQU   AMDPFID                                                  00741000
@RT00084 EQU   AMDPJAT                                                  00742000
@RT00087 EQU   AMDPUSR                                                  00743000
@RT00089 EQU   AMDPBRH                                                  00744000
@RT00091 EQU   SYSMCHK                                                  00745000
@RT00093 EQU   AMDPIO1                                                  00746000
@RT00097 EQU   AMDPBRH                                                  00747000
@RT00103 EQU   AMDPBRH                                                  00748000
@RT00109 EQU   AMDPBRH                                                  00749000
@RT00113 EQU   AMDPJAT                                                  00750000
@RT00115 EQU   AMDPBRH                                                  00751000
@RT00118 EQU   AMDPBRH                                                  00752000
@RF00122 EQU   AMDPJAT                                                  00753000
@RT00129 EQU   AMDPBRH                                                  00754000
@RT00132 EQU   AMDPJAT                                                  00755000
@RT00134 EQU   AMDPBRH                                                  00756000
@RT00137 EQU   AMDPJAT                                                  00757000
@RT00143 EQU   AMDPBRH                                                  00758000
@RT00149 EQU   AMDPBRH                                                  00759000
@RT00155 EQU   AMDPBRH                                                  00760000
@RT00161 EQU   AMDPBRH                                                  00761000
@RT00167 EQU   AMDPBRH                                                  00762000
@RT00173 EQU   AMDPBRH                                                  00763000
@RT00179 EQU   AMDPBRH                                                  00764000
@RT00185 EQU   AMDPBRH                                                  00765000
@RT00191 EQU   AMDPBRH                                                  00766000
@RF00189 EQU   AMDPJAT                                                  00767000
@ENDDATA EQU   *                                                        00768000
         END   AMDPRFLT,(C'PL/S-II',0502,73240)                         00769000
./  ADD  SSI=72580242,NAME=AMDPRFMG
AMDPRFMG CSECT                                                          00900002
**********************************************************************  01800002
*                                                                       02700002
* MODULE- AMDPRFMG                                                      02750002
* STATUS-                                                               03600002
*    VS2/R2                                                             04500002
*    A000000-999999                                             S01014  05400002
*    A900500-901000,C873000                                     Y02014  05450002
*    C410000                                                     M4465  06300002
*                                                                       07200002
* FUNCTION-                                                             08100002
*    AMDPRFMG IS THE AMDPRXED MESSAGE CSECT.  THIS MODULE CONTAINS A    09000002
*    LIST OF MESSAGE ADDRESSES FOLLOWED BY THE MESSAGES IN WTO LIST     09900002
*    FORM.                                                              10800002
*                                                                       11700002
* ENTRY POINTS-                                                         12600002
*    NON-APPLICABLE                                                     13500002
*                                                                       14400002
* INPUT-                                                                15300002
*    NON-APPLIABLE                                                      16200002
* OUTPUT-                                                               17100002
*    NON-APPLICABLE                                                     18000002
*                                                                       18900002
* EXTERNAL REFERENCES-                                                  19800002
*    NONE                                                               20700002
*                                                                       21600002
* EXITS, NORMAL-                                                        22500002
*    NON-APPLICABLE                                                     23400002
*                                                                       24300002
* EXITS, ERROR-                                                         25200002
*    NON-APPLICABLE                                                     26100002
*                                                                       27000002
* TABLES/WORK AREAS-                                                    27900002
*    AMDPRFMG CONTAINS A TABLE OF ADDRESSES OF ALL                      28800002
*    MESSAGES CONTAINED WITHIN AMDPRFMG.                                29700002
*                                                                       30600002
* ATTRIBUTES-                                                           31500002
*    NON-APPLICABLE                                                     32400002
*                                                                       33300002
* NOTES-                                                                34200002
*    THE EBCIDIC CHARACTER SET WAS USED WHEN THIS MODULE                35100002
*    WAS ASSEMBLED.  THIS MODULE MUST BE REASSEMBLED IF A               36000002
*    DIFFERENT CHARACTER SET IS TO BE USED DURING EXECUTION.            36900002
*                                                                       37800002
********************************************************************    38700002
***  MESSAGES ISSUED BY AMDPRGET  ***                                   39600002
AMDPRE01 DC    A(AMD220I)          USER SPECIFIES OFFSET  0             40500002
         DC    A(AMD224I)                                               41400002
         DC    A(AMD225I)                                               42300002
         SPACE                                                          43200002
***  MESSAGES ISSUED BY AMDPRFRM  ***                                   44100002
AMDPRE02 DC    A(AMD226I)          USER SPECIFIES OFFSET 12             45000002
         DC    A(AMD227I)                                16             45900002
AMDPRE09 DC    A(AMD217I)                                               46800002
AMDPRE10 DC    A(AMD218D)                                24             47700002
AMDPRE14 DC    A(AMD151I)                                28      Y02014 47750002
         SPACE                                                          48600002
***  MESSAGES ISSUED BY AMDPREXT  ***                                   49500002
AMDPRE03 DC    A(AMD212I)          USER SPECIFIES OFFSET 32             50400002
         DC    A(AMD213I)                                               51300002
         DC    A(AMD214I)                                               52200002
         SPACE                                                          53100002
***  MESSAGES ISSUED BY AMDPRAPP  ***                                   54000002
AMDPRE06 DC    A(AMD215I)          USER SPECIFIES OFFSET 44             54900002
AMDPRE07 DC    A(AMD216I)                                48             55800002
***  MESSAGES ISSUED BY AMDPRFRM, EXT, APP  ***                         56700002
AMDPRE11 DC    A(AMD228I)                                52             57600002
AMDPRE12 DC    A(AMD229I)                                56             58500002
         EJECT                                                          59400002
*********************************************************************** 60300002
*                                                                     * 61200002
*                           MESSAGE TEXT                              * 62100002
*                                                                     * 63000002
*********************************************************************** 63900002
         SPACE                                                          64800002
AMD220I  WTO   'AMD220I NO EDIT DD CARD - NNNNNNNN',MF=L,              X65700002
               ROUTCDE=2,DESC=6                                         66600002
AMD224I  WTO   'AMD224I BLKSIZE=4096 ASSUMED, NOT SPECIFIED FOR DD - XX*67500002
               XXXXXX',MF=L,ROUTCDE=2,DESC=6                            68400002
AMD225I  WTO   'AMD225I REGION TOO SMALL FOR EDIT BUFFERS',            X69300002
               MF=L,ROUTCDE=2,DESC=6                                    70200002
AMD217I  WTO   'AMD217I NO SYS DATA, JOB SELECTION NOT ALLOWED',       X71100002
               MF=L,ROUTCDE=2,DESC=6                                    72000002
AMD218D  WTOR  'AMD218D REPLY ''C'' TO EDIT WITHOUT JOB SELECTION,     X72900002
               ''S'' TO TERM',,,,MF=L,ROUTCDE=1,DESC=2                  73800002
AMD226I  WTO   'AMD226I NO RECORDS IN REQUESTED INTERVAL',MF=L,        X74700002
               ROUTCDE=2,DESC=6                                   M4465 75600002
AMD214I  WTO   'AMD214I CURRENT EDIT FUNCTION TERMINATED',MF=L,        X76500002
               ROUTCDE=2,DESC=6                                         77400002
AMD212I  WTO   'AMD212I RCD ON  PG XXXX.  RET CODE XXXXXXXX RCVD FR MODX78300002
               ULE XXXXXXXX',MF=L,ROUTCDE=2,DESC=6                      79200002
AMD213I  WTO   'AMD213I PROCESSING CONTINUES -  BYPASSING MODULE XXXXXX*80100002
               XX',MF=L,ROUTCDE=2,DESC=6                                81000002
AMD215I  WTO   'AMD215I FURTHER RCDS  REQUIRING XXXXXXXX WILL BE DUMPEDX81900002
                IN HEX',MF=L,ROUTCDE=2,DESC=6                           82800002
AMD216I  WTO   'AMD216I RCD AND OTHER INFO ON  PG XXXX.  PGM CHECK IN MX83700002
               ODULE XXXXXXXX',MF=L,ROUTCDE=2,DESC=6                    84600002
AMD227I  WTO   'AMD227I DATA SET CREATED AFTER STOP TIME',MF=L,        X85500002
               ROUTCDE=2,DESC=6                                         86400002
AMD228I  WTO   'AMD228I TRACE INPUT TO EDIT FROM NON-VS2 R2 SYSTEM',   X87300002
               MF=L,ROUTCDE=2,DESC=6                                    88200002
AMD229I  WTO   'AMD229I MODULE XXXXXXXX EXCEEDS 10 K LIMIT',           X89100002
               MF=L,ROUTCDE=2,DESC=6                                    90000002
AMD151I  WTO   'AMD151I INSUFFICIENT STORAGE-EXECUTION TERMINATED',    X90050002
               MF=L,ROUTCDE=2,DESC=6                                    90100002
         SPACE                                                          90900002
         END                                                            91800002
./  ADD  SSI=62110122,NAME=AMDPRFRM
         TITLE ' AMDPRFRM-CONTROL RTN                                  *00001000
                        '                                               00002000
AMDPRFRM CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL1(16)                                             0001 00007000
         DC    C'AMDPRFRM  76.211'                                 0001 00008000
         DROP  @15                                                      00009000
@PROLOG  STM   @14,@12,12(@13)                                     0001 00010000
         BALR  @11,0                                               0001 00011000
@PSTART  DS    0H                                                  0001 00012000
         USING @PSTART,@11                                         0001 00013000
         ST    @13,@SA00001+4                                      0001 00014000
         LA    @14,@SA00001                                        0001 00015000
         ST    @14,8(,@13)                                         0001 00016000
         LR    @13,@14                                             0001 00017000
         EQUATES                                                        00018000
         COMMON                    AMDPRCOM MAPPING MACRE               00019000
         USING COMMON,COMBASE      BASE COMMON CSECT                    00020000
         SYNEPS                    MAPPING MACRO FOR ENTRY POINTS OF    00021000
*                                  AMDPRSYN                             00022000
AMDPRFRM  CSECT                    RESTART AMDPRFRM                     00023000
*   AEDITCBR=AEDITCB;               /* POINT TO AMDPRTAB             */ 00024000
         L     AEDITCBR,AEDITCB                                    0081 00025000
*   FRM='1'B;                       /* INDICATE AMDPRFRM IN CONTROL  */ 00026000
         OI    FRM(AEDITCBR),B'00000010'                           0082 00027000
*   FRMSWITC='00'X;                 /* INIT ALL SWITCHES             */ 00028000
         MVI   FRMSWITC,X'00'                                      0083 00029000
*   AFRMAD=ADDR(FRMATAB);           /* STORE ADDRESS OF FRM ADDR   0084 00030000
*                                      TABLE IN AMDPRTAB           0084 00031000
*                                      (COMMUNICATIONS AREA FOR ALL     00032000
*                                      OF EDIT)                      */ 00033000
         LA    @14,FRMATAB                                         0084 00034000
         ST    @14,AFRMAD(,AEDITCBR)                               0084 00035000
*   AFMG=APRFMG;                    /* SET ADDRESS OF EDIT EXECUTION    00036000
*                                      MESSAGE CSECT IN AMDPRTAB     */ 00037000
         L     @14,APRFMG                                          0085 00038000
         ST    @14,AFMG(,AEDITCBR)                                 0085 00039000
*/*  OBTAIN CORE FOR PARM LIST WORK AREA                       Y02014*/ 00040000
*                                                                  0086 00041000
*   GEN(GETMAIN EC,LV=256,A=ADDRHOLD);                             0086 00042000
         GETMAIN EC,LV=256,A=ADDRHOLD                                   00043000
*   IF REG15¬=0 THEN                /* SUCCESSFUL              Y02014*/ 00044000
         LTR   REG15,REG15                                         0087 00045000
         BZ    @RF00087                                            0087 00046000
*     DO;                                                          0088 00047000
*       GEN(USING SYNTAX,R15);      /* BASE EP OF MSG WTR      Y02014*/ 00048000
         USING SYNTAX,R15                                               00049000
*       SYNMSGA=ADDR(AMDPRE14);     /* PT TO AMD151I           Y02014*/ 00050000
         L     @14,AFMG(,AEDITCBR)                                 0090 00051000
         LA    @14,AMDPRE14(,@14)                                  0090 00052000
         ST    @14,SYNMSGA                                         0090 00053000
*       GEN(OI SWD,NOSTDMG);        /* INDICATE NO PRDMP MSG   Y02014*/ 00054000
         OI SWD,NOSTDMG                                                 00055000
*       REG15=ASYNTAX;              /* PT TO MSG WRITER        Y02014*/ 00056000
         L     REG15,ASYNTAX                                       0092 00057000
*       CALL SYNTAXA;               /* CALL MSG WRITER         Y02014*/ 00058000
         BAL   @14,SYNTAXA                                         0093 00059000
*       GOTO OUT;                   /* TERMINATE EDIT          Y02014*/ 00060000
         B     OUT                                                 0094 00061000
*     END;                                                         0095 00062000
*   REENTWKA=ADDRHOLD;              /* PLACE ADDR IN PRTAB     Y02014*/ 00063000
@RF00087 L     @14,ADDRHOLD                                        0096 00064000
         ST    @14,REENTWKA(,AEDITCBR)                             0096 00065000
*   GEN(LOAD EP=AMDPRFMT);          /* LOAD FORMATTING ROUTINE Y02014*/ 00066000
         LOAD EP=AMDPRFMT                                               00067000
*   PRFMTADD=REG0;                  /* SAVE ADDRESS IN PRTAB   Y02014*/ 00068000
         ST    REG0,PRFMTADD(,AEDITCBR)                            0098 00069000
*   STOPSAVE=STOPEXIT;              /* SAVE CALLER'S STOP ROUTINE  0099 00070000
*                                      ADDR                          */ 00071000
         L     @14,STOPEXIT                                        0099 00072000
         ST    @14,STOPSAVE                                        0099 00073000
*   STOPEXIT=ADDR(FRMSTOP);         /* ESTABLISH STOP EXIT FOR EDIT  */ 00074000
         LA    @14,FRMSTOP                                         0100 00075000
         ST    @14,STOPEXIT                                        0100 00076000
*   DRIVER='0000'X;                 /* CLEAR DRIVER STRING           */ 00077000
         MVC   DRIVER(2),@CB00374                                  0101 00078000
*   DRVGET='1'B;                    /* SET UP DRIVER FOR CALLGET     */ 00079000
         OI    DRVGET,B'00000001'                                  0102 00080000
*   DRVPOSIT='1'B;                  /* AND POSIT                     */ 00081000
         OI    DRVPOSIT,B'00100000'                                0103 00082000
*                                                                  0104 00083000
*/********************************************************************  00084000
*                                                                    */ 00085000
*/*                                                                  */ 00086000
*/*  SELECT-ROUTINE.  ROUTINE IS SELECTED IF CORRESPONDING DRIVER BIT*/ 00087000
*/*  IS ON.  DRIVER IS SCANNED HIGH-TO-LOW ORDER BITS, SO THIS IS    */ 00088000
*/*  THE PRIORITY IN WHICH ROUTINES ARE EXECUTED.                    */ 00089000
*/*                                                                  */ 00090000
*/********************************************************************  00091000
*                                                                    */ 00092000
*                                                                  0104 00093000
*   RFY                                                            0104 00094000
*    (REG4,                                                        0104 00095000
*     REG5,                                                        0104 00096000
*     REG6) RSTD;                   /* REGISTER USAGE IN SELECT-   0104 00097000
*                                      ROUTINE PROCESSING: REG 4 - 0104 00098000
*                                      MASK FOR SELECTION BIT ON IS     00099000
*                                      TO BE SELECTED IF CORRES-   0104 00100000
*                                      PONDING BIT IS ON IN DRIVER 0104 00101000
*                                      REG 5 - INDEX INTO SELECTION     00102000
*                                      BRANCH TABLE REG 6 - WORK REG    00103000
*                                      IN WHICH MASK IS AND-ED WITH     00104000
*                                      DRIVER                        */ 00105000
*   GEN;                                                           0105 00106000
STARTSEL  LA   R4,256            INIT MASK FOR HIGHEST PRIORITY         00107000
*                                  ROUTINE                              00108000
          SR   R5,R5               CLEAR BRANCH TABLE INDEX REG         00109000
SELECT    LH   R6,DRIVER           PICK UP DRIVER - SOME ROUTINE MAY    00110000
*                                  HAVE CHANGED DRIVER VALUE            00111000
          NR   R6,R4               AND WITH MASK TO MAKE ROUTINE        00112000
*                                  SELECTION                            00113000
*                                  IF RESULT IS ZERO, NO ROUTINE WAS    00114000
          BZ   NEXTRTN             SELECTED, SO BRANCH TO TRY NEXT      00115000
*                                  LOWER PRIORITY ROUTINE               00116000
          B    RTNTAB(R5)          BRANCH TABLE FOR ROUTINE SELECTION   00117000
*                                  INDEX VALUE (OPPOSITE PRIORITY)      00118000
RTNTAB    B    CALLGET             0 - LINK TO AMDPRGET                 00119000
          B    TERMEDIT            4 - GO EXIT                          00120000
          B    VALIDITY            8 - CHECK FOR GTF RECORD             00121000
          B    POSIT               12 - POSITION BY VALUE OF START=     00122000
*                                       PARAMETER '1'B EDIT CARD        00123000
          B    DUMP                16 - INIT FOR PROCESSING GTF BUFFERS 00124000
*                                       IN DUMP DATA SET                00125000
          B    EXTERNAL            20 - INIT FOR PROCESSING GTF         00126000
*                                       EXTERNAL TRACE                  00127000
          B    PRNTITLE            24 - GO TITLE EDIT OUTPUT            00128000
          B    CALLCON             28 - LINK TO AMDPRCON                00129000
          B    CALLFLT             32 - LINK TO AMDPRFLT                00130000
*                                  END OF BRANCH TABLE                  00131000
NEXTRTN   SRA  R4,1                SHIFT MASK TO BIT FOR NEXT LOWER     00132000
*                                  PRIORITY SUBROUTINE                  00133000
          BZ   STARTSEL            TEST CONDITION CODE FOR ZERO RESULT  00134000
*                                  WHICH INDICATES MASK EXHAUSTED AND   00135000
*                                  HENCE END OF CYCLE - BRANCH TO START 00136000
*                                  NEW CYCLE                            00137000
          LA   R5,4(R5)            INCREMENT ROUTINE SELECTION INDEX    00138000
          B    SELECT              IF MASK NOT ZERO, BRANCH TO TRY FOR  00139000
*                                  NEXT LOWER PRIORITY ROUTINE          00140000
*   RFY                                                            0106 00141000
*    (REG6) UNRSTD;                                                0106 00142000
*                                                                  0107 00143000
*/********************************************************************  00144000
*                                                                    */ 00145000
*/*                                                                  */ 00146000
*/*  EDIT STOP EXIT ROUTINE.  SHUT DOWN EDIT AFTER OPERATOR RESPONSE */ 00147000
*/*  TO MESSAGE AMD156I.                                             */ 00148000
*/*                                                                  */ 00149000
*/********************************************************************  00150000
*                                                                    */ 00151000
*                                                                  0107 00152000
*   GEN;                                                           0107 00153000
         USING *,R15                                                    00154000
FRMSTOP  LA    R13,@SA00001        POINT TO FRM SAVE AREA        Y02014 00155000
*                                  ***  SAVE AREA LABEL BSL DEPENDENT   00156000
         LM    R14,R12,12(R13)     RE-LOAD REGISTERS                    00157000
         DROP  R15                 GO BACK TO OLD BASE                  00158000
         USING SYNTAX,R15          BASE EP-S OF MESSAGE WRITER FOR      00159000
*                                  HERE FOLLOWING                       00160000
*   EDITSTOP='1'B;                  /* INDICATE EDIT STOP IN PROGRESS*/ 00161000
*   TERM='1'B;                      /* REQUEST EDIT TERMINATION      */ 00162000
         OI    EDITSTOP(AEDITCBR),B'01000010'                      0109 00163000
*   DRVGET='1'B;                    /* RESET DRIVER TO CALL GET AND  */ 00164000
         OI    DRVGET,B'00000001'                                  0110 00165000
*   DRVTERM='1'B;                   /* CALL FRM TERM ROUTINE         */ 00166000
         OI    DRVTERM,B'10000000'                                 0111 00167000
*   GEN(NI SWC,255-EDITSW);         /* EDIT NO LONGER IN CONTROL     */ 00168000
         NI SWC,255-EDITSW                                              00169000
*   GO TO STARTSEL;                 /* ENTER ROUTINE SELECTION AT TOP*/ 00170000
         B     STARTSEL                                            0113 00171000
*                                                                  0114 00172000
*/********************************************************************  00173000
*                                                                    */ 00174000
*/*                                                                  */ 00175000
*/*                          CALL AMDPRGET                           */ 00176000
*/*                                                                  */ 00177000
*/********************************************************************  00178000
*                                                                    */ 00179000
*                                                                  0114 00180000
*CALLGET:                                                          0114 00181000
*   CALL PRGET;                     /* CALL AMDPRGET                 */ 00182000
CALLGET  L     @15,AGET                                            0114 00183000
         BALR  @14,@15                                             0114 00184000
*   IF TERM='1'B THEN               /* IF TERMINATION HAS BEEN     0115 00185000
*                                      REQUESTED BY AMDPRGET,        */ 00186000
         TM    TERM(AEDITCBR),B'01000000'                          0115 00187000
         BNO   @RF00115                                            0115 00188000
*     DRVTERM='1'B;                 /* SET DRIVER BIT FOR AMDPRFRM 0116 00189000
*                                      TERM ROUTINE SO THAT EDIT   0116 00190000
*                                      PROCESSING STOPS              */ 00191000
         OI    DRVTERM,B'10000000'                                 0116 00192000
*   GO TO NEXTRTN;                  /* RETURN TO ROUTINE SELECTION   */ 00193000
         B     NEXTRTN                                             0117 00194000
*/********************************************************************  00195000
*                                                                    */ 00196000
*/*                                                                  */ 00197000
*/*  TERMINATE EDIT.  THIS ROUTINE IS ENTERED TO STOP EDIT PROCESSING*/ 00198000
*/*  AND RETURN TO AMDPRDMP.                                         */ 00199000
*/*                                                                  */ 00200000
*/********************************************************************  00201000
*                                                                    */ 00202000
*                                                                  0118 00203000
*TERMEDIT:                                                         0118 00204000
*   IF EDITSTOP='1'B THEN           /* TEST FOR STOP REQUESTED BY  0118 00205000
*                                      OPERATOR                      */ 00206000
TERMEDIT TM    EDITSTOP(AEDITCBR),B'00000010'                      0118 00207000
         BNO   @RF00118                                            0118 00208000
*     DO;                           /* IN THIS CASE, RESTORE CALLER-S   00209000
*                                      STOP ROUTINE ADDR AND BRANCH     00210000
*                                      TO IT                         */ 00211000
*       GEN(DELETE EP=AMDPRFMT);    /* DELETE FORMAT RTN       Y02014*/ 00212000
         DELETE EP=AMDPRFMT                                             00213000
*       REG15=STOPSAVE;             /* POINT TO CALLER-S ROUTINE     */ 00214000
         L     REG15,STOPSAVE                                      0121 00215000
*       STOPEXIT=REG15;             /* RESTORE THIS ADDRESS IN     0122 00216000
*                                      AMDPRCOM                      */ 00217000
         ST    REG15,STOPEXIT                                      0122 00218000
*       GEN(BR  R15);               /* BRANCH TO CALLER-S STOP     0123 00219000
*                                      ROUTINE                       */ 00220000
         BR  R15                                                        00221000
*     END;                                                         0124 00222000
*                                                                  0124 00223000
*   /*****************************************************************/ 00224000
*   /*                                                               */ 00225000
*   /* IF END-OF-FILE IS REACHED DURING POSITIONING, POSIT. HAS      */ 00226000
*   /* FAILED                                                        */ 00227000
*   /*                                                               */ 00228000
*   /*****************************************************************/ 00229000
*                                                                  0125 00230000
*   IF DRVPOSIT='1'B&EXTTRC='1'B&GETEOF='1'B&STARTIME¬='            '   00231000
*     THEN                          /* VERIFY START SPECIFIED        */ 00232000
@RF00118 TM    DRVPOSIT,B'00100000'                                0125 00233000
         BNO   @RF00125                                            0125 00234000
         TM    EXTTRC(AEDITCBR),B'00000100'                        0125 00235000
         BNO   @RF00125                                            0125 00236000
         TM    GETEOF(AEDITCBR),B'10000000'                        0125 00237000
         BNO   @RF00125                                            0125 00238000
         CLC   STARTIME(12,AEDITCBR),@CC00379                      0125 00239000
         BE    @RF00125                                            0125 00240000
*NOTIMEMG:                                                         0126 00241000
*     DO;                           /* ISSUE MESSAGE AMD226I         */ 00242000
NOTIMEMG DS    0H                                                  0127 00243000
*       SYNMSGA=ADDR(AMDPRE02);     /* POINT TO ADDR OF MESSAGE    0127 00244000
*                                      AMD226I IN AMDPRFMG           */ 00245000
         L     @14,AFMG(,AEDITCBR)                                 0127 00246000
         LA    @14,AMDPRE02(,@14)                                  0127 00247000
         ST    @14,SYNMSGA                                         0127 00248000
*       GEN(OI  SWD,NOSTDMG);       /* INDICATE STANDARD MESSAGE   0128 00249000
*                                      AMD165I IS NOT REQUIRED       */ 00250000
         OI  SWD,NOSTDMG                                                00251000
*       REG15=ASYNTAX;              /* POINT TO MESSAGE WRITER       */ 00252000
         L     REG15,ASYNTAX                                       0129 00253000
*       CALL SYNTAXA;               /* CALL MESSAGE WRITER - AMDPRSYN*/ 00254000
         BAL   @14,SYNTAXA                                         0130 00255000
*     END NOTIMEMG;                                                0131 00256000
*   IF EXTITLE='1'B THEN            /* IF EXTERNAL TRACE WAS       0132 00257000
*                                      PROCESSED,                    */ 00258000
@RF00125 TM    EXTITLE,B'10000000'                                 0132 00259000
         BNO   @RF00132                                            0132 00260000
*     TITLEMOD=TITLSAVE;            /* AMDPRDMP-S PAGE TITLE MUST BE    00261000
*                                      RESTORED                      */ 00262000
         MVC   TITLEMOD(47),TITLSAVE                               0133 00263000
*   GEN(DELETE EP=AMDPRFMT);        /* DELETE FORMAT RTN             */ 00264000
@RF00132 DS    0H                                                  0134 00265000
         DELETE EP=AMDPRFMT                                             00266000
*OUT:                                                              0135 00267000
*   FRM='0'B;                       /* TURN OFF AMDPRFRM PATH FLAG   */ 00268000
OUT      NI    FRM(AEDITCBR),B'11111101'                           0135 00269000
*   STOPEXIT=STOPSAVE;              /* RESTORE CALLERS STOP A51748   */ 00270000
         L     @14,STOPSAVE                                        0136 00271000
         ST    @14,STOPEXIT                                        0136 00272000
*   RETURN;                         /* RETURN TO AMDPRCTL IN AMDPRDMP   00273000
*                                      EDIT DONE                     */ 00274000
@EL00001 L     @13,4(,@13)                                         0137 00275000
@EF00001 DS    0H                                                  0137 00276000
@ER00001 LM    @14,@12,12(@13)                                     0137 00277000
         BR    @14                                                 0137 00278000
*                                                                  0138 00279000
*/********************************************************************  00280000
*                                                                    */ 00281000
*/*                                                                  */ 00282000
*/*  VALIDITY.  VERIFY THAT TRACE RECORD READ IS FROM GTF AND ROUTE  */ 00283000
*/*  TO AMDPRFLT OR AMDPRCON                                         */ 00284000
*/*                                                                  */ 00285000
*/********************************************************************  00286000
*                                                                    */ 00287000
*/* TEST FOR NON-TRACE CONTROL RECORD                                */ 00288000
*                                                                  0138 00289000
*VALIDITY:                                                         0138 00290000
*   IF RECAID='00'X THEN                                           0138 00291000
*                                                                  0138 00292000
VALIDITY L     @14,CURREC(,AEDITCBR)                               0138 00293000
         CLI   RECAID(@14),X'00'                                   0138 00294000
         BNE   @RF00138                                            0138 00295000
*     /***************************************************************/ 00296000
*     /*                                                             */ 00297000
*     /* TIME-STAMP AND LOST-DATA RECORD PROCESSING                  */ 00298000
*     /*                                                             */ 00299000
*     /***************************************************************/ 00300000
*                                                                  0139 00301000
*NONTRC:                                                           0139 00302000
*     DO;                                                          0139 00303000
NONTRC   DS    0H                                                  0140 00304000
*       IF RECFID='01'X THEN        /* TIME-STAMP RECORD             */ 00305000
         L     @14,CURREC(,AEDITCBR)                               0140 00306000
         CLI   RECFID(@14),X'01'                                   0140 00307000
         BNE   @RF00140                                            0140 00308000
*TIMEREC:                                                          0141 00309000
*         DO;                                                      0141 00310000
*                                                                  0141 00311000
TIMEREC  DS    0H                                                  0142 00312000
*           /*********************************************************/ 00313000
*           /*                                                       */ 00314000
*           /* TEST STOP-TIME TO DETERMINE IF ALL RECORDS HAVE BEEN  */ 00315000
*           /* PROCESSED - FIRST MUST CHECK IF STOP-TIME HAS BEEN    */ 00316000
*           /* SPECIFIED. IF NOT STOP-TIME NOT SPECIFIED OR NOT      */ 00317000
*           /* PASSED, BRANCH TO CHANNEL RECORD TO AMDPRCON.         */ 00318000
*           /*                                                       */ 00319000
*           /*********************************************************/ 00320000
*                                                                  0142 00321000
*           IF STOPTIME='            ' THEN                        0142 00322000
         CLC   STOPTIME(12,AEDITCBR),@CC00379                      0142 00323000
         BE    @RT00142                                            0142 00324000
*             GO TO CONOUT;                                        0143 00325000
*           RFY                                                    0144 00326000
*            (WREG2) RSTD;                                         0144 00327000
*           ADCVTTZ=ADDR(RECVTTZ);  /* ADDR CVT TIME ZONE VALUE      */ 00328000
         L     @14,CURREC(,AEDITCBR)                               0145 00329000
         LA    @10,RECVTTZ(,@14)                                   0145 00330000
         ST    @10,ADCVTTZ                                         0145 00331000
*           ADTODCLK=ADDR(RECTOD);  /* ADDR TOD VALUE                */ 00332000
         LA    @14,RECTOD(,@14)                                    0146 00333000
         ST    @14,ADTODCLK                                        0146 00334000
*           ADTMEBUF=ADDR(TMEBUF);  /* ADDR OUTPUT AREA              */ 00335000
         LA    @14,TMEBUF                                          0147 00336000
         ST    @14,ADTMEBUF                                        0147 00337000
*           PARMREG=ADDR(TIMEPARM); /* ADDR PARM LIST IN R 1         */ 00338000
         LA    PARMREG,TIMEPARM                                    0148 00339000
*           WREG2=1;                /* CONVERT TO FULL TIME          */ 00340000
         LA    WREG2,1                                             0149 00341000
*           CALL TODCNVRT;          /* CALL TOD CONVERSION RTN       */ 00342000
*                                                                  0150 00343000
         L     @15,QATMERTN                                        0150 00344000
         BALR  @14,@15                                             0150 00345000
*           /*********************************************************/ 00346000
*           /*                                                       */ 00347000
*           /* MOVE INTO SAVE AREA TIME VALUE IN CURRENT REC         */ 00348000
*           /*                                                       */ 00349000
*           /*********************************************************/ 00350000
*                                                                  0151 00351000
*           DSAV=DAYYR;                                            0151 00352000
         MVC   DSAV(3),DAYYR                                       0151 00353000
*           TSAV(1:2)=TOD(1:2);                                    0152 00354000
         MVC   TSAV(2),TOD                                         0152 00355000
*           TSAV(3:4)=TOD(4:5);                                    0153 00356000
         MVC   TSAV+2(2),TOD+3                                     0153 00357000
*           TSAV(5:6)=TOD(7:8);                                    0154 00358000
*                                                                  0154 00359000
         MVC   TSAV+4(2),TOD+6                                     0154 00360000
*           /*********************************************************/ 00361000
*           /*                                                       */ 00362000
*           /* TEST FOR TIME OVER STOP VALUE                         */ 00363000
*           /*                                                       */ 00364000
*           /*********************************************************/ 00365000
*                                                                  0155 00366000
*           IF ESTOPTME<TIMSAVE THEN                               0155 00367000
         CLC   ESTOPTME(9,AEDITCBR),TIMSAVE                        0155 00368000
         BNL   @RF00155                                            0155 00369000
*TSTOP:                                                            0156 00370000
*             DO;                   /* STOP BECAUSE TIME LIMIT Y3316 */ 00371000
TSTOP    DS    0H                                                  0157 00372000
*               TERM='1'B;          /* SIGNAL AMDPRGET TO CLOSE DOWN */ 00373000
         OI    TERM(AEDITCBR),B'01000000'                          0157 00374000
*               GO TO NEXTRTN;      /* BRANCH BACK TO ROUTINE      0158 00375000
*                                      SELECT-N                      */ 00376000
         B     NEXTRTN                                             0158 00377000
*             END TSTOP;                                           0159 00378000
*           ELSE                                                   0160 00379000
*             GO TO CONOUT;         /* STOP-TIME HAS NOT PASSED -  0160 00380000
*                                      SEND RECORD TO CALLCON        */ 00381000
*         END TIMEREC;                                             0161 00382000
*       IF RECFID='02'X|            /* LOST-DATA RECORD        Y02014*/ 00383000
*           RECFID='03'X THEN       /* LOST-BLOCK RECORD       Y02014*/ 00384000
@RF00140 L     @14,CURREC(,AEDITCBR)                               0162 00385000
         CLI   RECFID(@14),X'02'                                   0162 00386000
         BE    @RT00162                                            0162 00387000
         CLI   RECFID(@14),X'03'                                   0162 00388000
         BNE   @RF00162                                            0162 00389000
@RT00162 DS    0H                                                  0163 00390000
*LOSTREC:                                                          0163 00391000
*         DO;                                                      0163 00392000
*                                                                  0163 00393000
LOSTREC  DS    0H                                                  0164 00394000
*           /*********************************************************/ 00395000
*           /*                                                       */ 00396000
*           /* BRANCH HERE TO CHANNEL RECORD TO NON-TRACE FORMAT     */ 00397000
*           /* ROUTINE - AMDPRCON                                    */ 00398000
*           /*                                                       */ 00399000
*           /*********************************************************/ 00400000
*                                                                  0164 00401000
*CONOUT:                                                           0164 00402000
*           DRVCON='1'B;            /* TURN ON CALLCON BIT IN DRIVER */ 00403000
CONOUT   OI    DRVCON,B'00000010'                                  0164 00404000
*           GO TO NEXTRTN;          /* BRANCH BACK TO ROUTINE      0165 00405000
*                                      SELECT-N                      */ 00406000
         B     NEXTRTN                                             0165 00407000
*         END LOSTREC;                                             0166 00408000
*                                                                  0166 00409000
*       /*************************************************************/ 00410000
*       /*                                                           */ 00411000
*       /* IGNORE RECORDS WHICH ARE NOT TIME-STAMP OR LOST-DATA      */ 00412000
*       /*                                                           */ 00413000
*       /*************************************************************/ 00414000
*                                                                  0167 00415000
*       GO TO NEXTRTN;                                             0167 00416000
         B     NEXTRTN                                             0167 00417000
*     END NONTRC;                                                  0168 00418000
*                                                                  0168 00419000
*   /*****************************************************************/ 00420000
*   /*                                                               */ 00421000
*   /* TEST FOR EVENT TRACE RECORD                                   */ 00422000
*   /*                                                               */ 00423000
*   /*****************************************************************/ 00424000
*                                                                  0169 00425000
*   IF RECAID='FF'X THEN            /* TRACE RECORD -                */ 00426000
@RF00138 L     @14,CURREC(,AEDITCBR)                               0169 00427000
         CLI   RECAID(@14),X'FF'                                   0169 00428000
         BNE   @RF00169                                            0169 00429000
*     DRVFLT='1'B;                  /* CHANNEL TO AMDPRFLT           */ 00430000
*                                                                  0170 00431000
         OI    DRVFLT,B'00000001'                                  0170 00432000
*   /*****************************************************************/ 00433000
*   /*                                                               */ 00434000
*   /* BRANCH BACK TO ROUTINE SELECTION                              */ 00435000
*   /*                                                               */ 00436000
*   /*****************************************************************/ 00437000
*                                                                  0171 00438000
*   GO TO NEXTRTN;                  /* NON-GTF RECORD ARE IGNORED  0171 00439000
*                                      BECAUSE NEITHER CALLCON NOR 0171 00440000
*                                      CALLFLT HAVE BEEN TURNED ON   */ 00441000
         B     NEXTRTN                                             0171 00442000
*                                                                  0172 00443000
*/********************************************************************  00444000
*                                                                    */ 00445000
*/*                                                                  */ 00446000
*/*  POSITION TO START TIME.  IF USER HAS NOT SPECIFIED START TIME,  */ 00447000
*/*  THEN POSITION TO FIRST TIME-STAMP RECORD                        */ 00448000
*/*                                                                  */ 00449000
*/********************************************************************  00450000
*                                                                    */ 00451000
*                                                                  0172 00452000
*POSIT:                                                            0172 00453000
*   IF EXTTRC='0'B THEN             /* DUMP DATA SET           Y02014*/ 00454000
POSIT    TM    EXTTRC(AEDITCBR),B'00000100'                        0172 00455000
         BNZ   @RF00172                                            0172 00456000
*     DO;                                                          0173 00457000
*       DRVDUMP='1'B;               /* RECORD TO DUMP RTN      Y02014*/ 00458000
         OI    DRVDUMP,B'00010000'                                 0174 00459000
*       GOTO SAVEOPTS;              /* GO SAVE GTF OPT WD      Y02014*/ 00460000
         B     SAVEOPTS                                            0175 00461000
*     END;                                                         0176 00462000
*   IF RECAID¬='00'X|               /* IGNORE ALL BUT TIME STAMP REC */ 00463000
*       RECFID¬='01'X THEN                                         0177 00464000
@RF00172 L     @14,CURREC(,AEDITCBR)                               0177 00465000
         CLI   RECAID(@14),X'00'                                   0177 00466000
         BNE   @RT00177                                            0177 00467000
         CLI   RECFID(@14),X'01'                                   0177 00468000
         BNE   @RT00177                                            0177 00469000
*     GO TO NEXTRTN;                /* GO BACK TO ROUTINE SELECTION     00470000
*                                      TO REPEAT GET-POSIT SEQUENCE  */ 00471000
*                                                                  0178 00472000
*   /*****************************************************************/ 00473000
*   /*                                                               */ 00474000
*   /* SCREEN OUT CASE WHERE STOP TIME ISN-T IN DATA SET. IF FIRST   */ 00475000
*   /* TIME THROUGH, ISSUE ERROR MESSAGE. ON SUBSEQUENT TIMES, FORCE */ 00476000
*   /* AN END OF FILE SITUATION AND ISSUE MSG AMD226I                */ 00477000
*   /*                                                               */ 00478000
*   /*****************************************************************/ 00479000
*                                                                  0179 00480000
*   RFY                                                            0179 00481000
*    (WREG2) RSTD;                                                 0179 00482000
*   TSFOUND='1'B;                   /* TIME STAMP FOUND        Y02014*/ 00483000
         OI    TSFOUND(AEDITCBR),B'00100000'                       0180 00484000
*   ADCVTTZ=ADDR(RECVTTZ);          /* ADDR CVT TIME ZONE VALUE      */ 00485000
         LA    @10,RECVTTZ(,@14)                                   0181 00486000
         ST    @10,ADCVTTZ                                         0181 00487000
*   ADTODCLK=ADDR(RECTOD);          /* ADDR TOD VALUE                */ 00488000
         LA    @14,RECTOD(,@14)                                    0182 00489000
         ST    @14,ADTODCLK                                        0182 00490000
*   ADTMEBUF=ADDR(TMEBUF);          /* ADDR OUTPUT AREA              */ 00491000
         LA    @14,TMEBUF                                          0183 00492000
         ST    @14,ADTMEBUF                                        0183 00493000
*   PARMREG=ADDR(TIMEPARM);         /* ADDR PARM LIST IN R 1         */ 00494000
         LA    PARMREG,TIMEPARM                                    0184 00495000
*   WREG2=1;                        /* CONVERT TO FULL TIME          */ 00496000
         LA    WREG2,1                                             0185 00497000
*   CALL TODCNVRT;                  /* CALL TOD CONVERSION RTN       */ 00498000
*                                                                  0186 00499000
         L     @15,QATMERTN                                        0186 00500000
         BALR  @14,@15                                             0186 00501000
*   /*****************************************************************/ 00502000
*   /*                                                               */ 00503000
*   /* MOVE INTO SAVE AREA TIME VALUE IN CURRENT REC                 */ 00504000
*   /*                                                               */ 00505000
*   /*****************************************************************/ 00506000
*                                                                  0187 00507000
*   DSAV=DAYYR;                                                    0187 00508000
         MVC   DSAV(3),DAYYR                                       0187 00509000
*   TSAV(1:2)=TOD(1:2);                                            0188 00510000
         MVC   TSAV(2),TOD                                         0188 00511000
*   TSAV(3:4)=TOD(4:5);                                            0189 00512000
         MVC   TSAV+2(2),TOD+3                                     0189 00513000
*   TSAV(5:6)=TOD(7:8);                                            0190 00514000
*                                                                  0190 00515000
         MVC   TSAV+4(2),TOD+6                                     0190 00516000
*/* FIRST TEST FOR TIME TOO EARLY                                    */ 00517000
*                                                                  0191 00518000
*   IF STOPTIME='            ' THEN                                0191 00519000
         CLC   STOPTIME(12,AEDITCBR),@CC00379                      0191 00520000
         BE    @RT00191                                            0191 00521000
*     GO TO STARTEST;               /* DON T POSITION BY STOP TIME   */ 00522000
*   IF ESTOPTME<TIMSAVE THEN        /* STOP TIME WITHIN D S ?        */ 00523000
         CLC   ESTOPTME(9,AEDITCBR),TIMSAVE                        0193 00524000
         BNL   @RF00193                                            0193 00525000
*NOSTOP:                                                           0194 00526000
*     DO;                                                          0194 00527000
NOSTOP   DS    0H                                                  0195 00528000
*       TERM='1'B;                  /* SIGNAL GET TO CLOSE DOWN      */ 00529000
         OI    TERM(AEDITCBR),B'01000000'                          0195 00530000
*       IF STPSW='0'B THEN                                         0196 00531000
         TM    STPSW,B'01000000'                                   0196 00532000
         BNZ   @RF00196                                            0196 00533000
*         DO;                       /* TEST IF 1ST TIME THROUGH M4465*/ 00534000
*           SYNMSGA=ADDR(AMDPRE02); /* POINT TO ADDR OF MESSAGE    0198 00535000
*                                      AMD226I IN AMDPRFMG           */ 00536000
         L     @14,AFMG(,AEDITCBR)                                 0198 00537000
         LA    @14,AMDPRE02(,@14)                                  0198 00538000
         ST    @14,SYNMSGA                                         0198 00539000
*           GEN(OI   SWD,NOSTDMG);  /* INDICATE STANDARD MESSAGE   0199 00540000
*                                      AMD165I IS NOT REQUIRED       */ 00541000
         OI   SWD,NOSTDMG                                               00542000
*           REG15=ASYNTAX;          /* POINT TO MESSAGE WRITER       */ 00543000
         L     REG15,ASYNTAX                                       0200 00544000
*           CALL SYNTAXB;           /* CALL MESSAGE WRITER - AMDPRSYN*/ 00545000
         BAL   @14,SYNTAXB                                         0201 00546000
*         END;                      /* M4465                         */ 00547000
*       ELSE                                                       0203 00548000
*         GETEOF='1'B;              /* DUMMY END OF FILE M4465       */ 00549000
         B     @RC00196                                            0203 00550000
@RF00196 OI    GETEOF(AEDITCBR),B'10000000'                        0203 00551000
*       GO TO NEXTRTN;              /* BRANCH BACK TO ROUTINE      0204 00552000
*                                      SELECTION - NEXT ROUTINE WILL    00553000
*                                      BE CALLGET AND THEN TERMEDIT  */ 00554000
         B     NEXTRTN                                             0204 00555000
*     END NOSTOP;                                                  0205 00556000
*   STPSW='1'B;                     /* SET NOT 1ST TIME SW M4465     */ 00557000
*                                                                  0206 00558000
@RF00193 OI    STPSW,B'01000000'                                   0206 00559000
*   /*****************************************************************/ 00560000
*   /*                                                               */ 00561000
*   /* HAS START TIME BEEN SPECIFIED                                 */ 00562000
*   /*                                                               */ 00563000
*   /*****************************************************************/ 00564000
*                                                                  0207 00565000
*STARTEST:                                                         0207 00566000
*   IF STARTIME='            ' THEN                                0207 00567000
STARTEST CLC   STARTIME(12,AEDITCBR),@CC00379                      0207 00568000
         BE    @RT00207                                            0207 00569000
*     GO TO SETEXT;                 /* IF NOT, POSITIONING IS OK     */ 00570000
*                                                                  0208 00571000
*   /*****************************************************************/ 00572000
*   /*                                                               */ 00573000
*   /* IF START-TIME HAS BEEN SPECIFIED, TEST FOR RECORD-TIME LESS   */ 00574000
*   /* THAN START-TIME - 1-ST TEST FOR DAY OF TIME STAMP RECORD NOT  */ 00575000
*   /* UP TO START VALUE                                             */ 00576000
*   /*                                                               */ 00577000
*   /*****************************************************************/ 00578000
*                                                                  0209 00579000
*   IF TIMSAVE<ESTARTME THEN        /* COMPARE REC TIME TO START TIME*/ 00580000
         CLC   TIMSAVE(9),ESTARTME(AEDITCBR)                       0209 00581000
         BL    @RT00209                                            0209 00582000
*     GO TO NEXTRTN;                /* IF SO, BRANCH TO ROUTINE    0210 00583000
*                                      SELECTION SO THAT GET-POSIT 0210 00584000
*                                      SEQUENCE IS REPEATED          */ 00585000
*/* BRANCH HERE TO CHANNEL RECORD TO EXTERNAL DATA SET SET-UP        */ 00586000
*                                                                  0211 00587000
*SETEXT:                                                           0211 00588000
*   DRVEXT='1'B;                    /* SET EXTERNAL IN DRIVER        */ 00589000
SETEXT   OI    DRVEXT,B'00001000'                                  0211 00590000
*/* SAVE GTF OPTIONS IN EFFECT                                       */ 00591000
*                                                                  0212 00592000
*SAVEOPTS:                                                         0212 00593000
*   OPTSAVE=RECGTFOP;                                              0212 00594000
SAVEOPTS L     @14,CURREC(,AEDITCBR)                               0212 00595000
         MVC   OPTSAVE(4),RECGTFOP(@14)                            0212 00596000
*   GTFWDPTR=ADDR(OPTSAVE);         /* POINT TAB TO OPTION WORD SAVE    00597000
*                                      AREA                    Y02014*/ 00598000
         LA    @10,OPTSAVE                                         0213 00599000
         ST    @10,GTFWDPTR(,AEDITCBR)                             0213 00600000
*   CVTTZONE=RECVTTZ;               /* SAVE TIME ZONE FIELD    Y02014*/ 00601000
         MVC   CVTTZONE(4,AEDITCBR),RECVTTZ(@14)                   0214 00602000
*   DRVTITLE='1'B;                  /* REQUEST TITLING OF FIRST PAGE */ 00603000
*   DRVCON='1'B;                    /* TURN ON CALLCON SO THAT     0216 00604000
*                                      CURRENT RECORD IS FORMATTED   */ 00605000
*   DRVVALID='1'B;                  /* VALIDITY TO GET CONTROL ON ALL   00606000
*                                      SUBSEQUENT RECORDS            */ 00607000
*   DRVPOSIT='0'B;                  /* TURN OFF BIT FOR THIS ROUTINE    00608000
*                                      - POSITIONING NOW COMPLETE    */ 00609000
         OI    DRVTITLE,B'01000110'                                0218 00610000
         NI    DRVPOSIT,B'11011111'                                0218 00611000
*   GO TO NEXTRTN;                  /* GO SELECT NEXT ROUTINE        */ 00612000
         B     NEXTRTN                                             0219 00613000
*                                                                  0220 00614000
*/********************************************************************  00615000
*                                                                    */ 00616000
*/*                                                                  */ 00617000
*/*  DUMP.  SET GENERAL FLAGS FOR AMDPRAPP.                          */ 00618000
*/*                                                                  */ 00619000
*/********************************************************************  00620000
*                                                                    */ 00621000
*                                                                  0220 00622000
*DUMP:                                                             0220 00623000
*   IF OPTSYSM='1'B THEN                                           0220 00624000
DUMP     L     @14,GTFWDPTR(,AEDITCBR)                             0220 00625000
         TM    OPTSYSM(@14),B'10000000'                            0220 00626000
         BNO   @RF00220                                            0220 00627000
*     DO;                           /* TRACE DATA SYSM FORMAT, Y02014*/ 00628000
*       SYSM='1'B;                  /* INDICATE SUCH IN PRTAB        */ 00629000
         OI    SYSM(AEDITCBR),B'00010000'                          0222 00630000
*       IF JOBNAMES(1)¬='        ' THEN/* JOB SELECTION REQUESTED    */ 00631000
         CLC   JOBNAMES(8,AEDITCBR),@CC00413                       0223 00632000
         BNE   @RT00223                                            0223 00633000
*         GO TO ASKOP;              /* YES GO ASK OPERATOR     Y02014*/ 00634000
*     END;                          /*                         Y02014*/ 00635000
*   ELSE                                                           0226 00636000
*     SYS='1'B;                     /* OTHERWISE, INDICATE FULL    0226 00637000
*                                      SYSTEM FORMAT                 */ 00638000
         B     @RC00220                                            0226 00639000
@RF00220 OI    SYS(AEDITCBR),B'00100000'                           0226 00640000
*DUMPEXT:                           /* RETURN FROM ASKING OPERATOR 0227 00641000
*                                                              Y02014*/ 00642000
*   DRVDUMP='0'B;                   /* DUMP SET-UP COMPLETE          */ 00643000
@RC00220 DS    0H                                                  0227 00644000
DUMPEXT  NI    DRVDUMP,B'11101111'                                 0227 00645000
*   GO TO NEXTRTN;                  /* GO BACK TO SELECT NEXT ROUTINE*/ 00646000
         B     NEXTRTN                                             0228 00647000
*                                                                  0229 00648000
*/********************************************************************  00649000
*                                                                    */ 00650000
*/*                                                                  */ 00651000
*/*  EXTERNAL.  SET-UP TO PROCESS EXTERNAL TRACE DATA SET.           */ 00652000
*/*                                                                  */ 00653000
*/********************************************************************  00654000
*                                                                    */ 00655000
*                                                                  0229 00656000
*EXTERNAL:                                                         0229 00657000
*   IF OPTSYSM¬='1'B THEN           /* FULL SYSTEM FORMAT-OK   Y02014*/ 00658000
*                                                                  0229 00659000
EXTERNAL L     @14,GTFWDPTR(,AEDITCBR)                             0229 00660000
         TM    OPTSYSM(@14),B'10000000'                            0229 00661000
         BO    @RF00229                                            0229 00662000
*     /***************************************************************/ 00663000
*     /*                                                             */ 00664000
*     /* (IF SYSM, CAN'T HAVE JOB SELECTIVITY)                       */ 00665000
*     /*                                                             */ 00666000
*     /***************************************************************/ 00667000
*                                                                  0230 00668000
*EXTOK:                                                            0230 00669000
*     DO;                                                          0230 00670000
EXTOK    DS    0H                                                  0231 00671000
*       TITLSAVE=TITLEMOD;          /* SAVE AMDPRDMP-S PAGE TITLE    */ 00672000
         MVC   TITLSAVE(47),TITLEMOD                               0231 00673000
*       EXTITLE='1'B;               /* INDICATE TITLE SAVED          */ 00674000
         OI    EXTITLE,B'10000000'                                 0232 00675000
*       EXTTITL(21:28)=DDNAME;      /* FIND IN DDNAME VALUE IN TITLE */ 00676000
         MVC   EXTTITL+20(8),DDNAME(AEDITCBR)                      0233 00677000
*       TITLEMOD=EXTTITL;           /* REPLACE AMDPRDMP-S TITLE WITH    00678000
*                                      EDIT-S                        */ 00679000
         MVC   TITLEMOD(47),EXTTITL                                0234 00680000
*       DRVEXT='0'B;                /* EXTERNAL SET-UP COMPLETE      */ 00681000
         NI    DRVEXT,B'11110111'                                  0235 00682000
*       GO TO NEXTRTN;              /* GO TO ROUTINE SELECTION       */ 00683000
         B     NEXTRTN                                             0236 00684000
*     END EXTOK;                                                   0237 00685000
*                                                                  0237 00686000
*   /*****************************************************************/ 00687000
*   /*                                                               */ 00688000
*   /* VERIFY JOB SELECTION IS NOT REQUESTED FOR SYSM TRACE    Y02014*/ 00689000
*   /*                                                               */ 00690000
*   /*****************************************************************/ 00691000
*                                                                  0238 00692000
*   IF JOBNAMES(1)='        ' THEN                                 0238 00693000
@RF00229 CLC   JOBNAMES(8,AEDITCBR),@CC00413                       0238 00694000
         BE    @RT00238                                            0238 00695000
*     GO TO EXTOK;                                                 0239 00696000
*                                                                  0239 00697000
*   /*****************************************************************/ 00698000
*   /*                                                               */ 00699000
*   /* IF JOB SELECTION IS REQUESTED, THEN EITHER: 1: TERM. EDIT IF  */ 00700000
*   /* COMMANDS ARE COMMING FROM SYSIN, OR 2) ASK OPERATOR FOR       */ 00701000
*   /* PERMISSION TO CONTINUE IF COMMANDS ARE COMMING FROM CONSOLE.  */ 00702000
*   /*                                                               */ 00703000
*   /*****************************************************************/ 00704000
*                                                                  0240 00705000
*   ELSE                                                           0240 00706000
*ASKOP:                                                            0240 00707000
*     DO;                                                          0240 00708000
ASKOP    DS    0H                                                  0241 00709000
*       SYNMSGA=ADDR(AMDPRE09);     /* POINT TO ADDR OF MESSAGE    0241 00710000
*                                      AMD217I                       */ 00711000
         L     @14,AFMG(,AEDITCBR)                                 0241 00712000
         LA    @14,AMDPRE09(,@14)                                  0241 00713000
         ST    @14,SYNMSGA                                         0241 00714000
*       GEN(OI  SWD,NOSTDMG);       /* INDICATE STANDARD MESSAGE   0242 00715000
*                                      AMD165I IS NOT REQUIRED       */ 00716000
         OI  SWD,NOSTDMG                                                00717000
*       REG15=ASYNTAX;              /* POINT TO MESSAGE WRITER       */ 00718000
         L     REG15,ASYNTAX                                       0243 00719000
*       CALL SYNTAXA;               /* CALL MESSAGE WRITE - AMDPRSYN */ 00720000
         BAL   @14,SYNTAXA                                         0244 00721000
*       GEN;                                                       0245 00722000
         TM    SWA,RDRSW           TEST SOURCE OF CONTROL STATEMENTS    00723000
         BO    SETTERM             RDR SWITCH '1'B MEANS CARDS IN SYSIN 00724000
*                                  DATA SET - SO BRANCH TO SET TERM     00725000
*                                  IN DRIVER                            00726000
*OPERR:                                                            0246 00727000
*       ECB=0;                      /* CLEAR ECB FOR WTOR            */ 00728000
OPERR    SLR   ECB,ECB                                             0246 00729000
*       RFY                                                        0247 00730000
*        (REG1) RSTD;                                              0247 00731000
*       REG1=AMDPRE10;              /* POINT TO WTOR LIST IN AMDPRFMG*/ 00732000
*                                                                  0248 00733000
         L     @14,AFMG(,AEDITCBR)                                 0248 00734000
         L     REG1,AMDPRE10(,@14)                                 0248 00735000
*       /*************************************************************/ 00736000
*       /*                                                           */ 00737000
*       /* WRITE MESSAGE AMD218D TO OPERATOR                         */ 00738000
*       /*                                                           */ 00739000
*       /*************************************************************/ 00740000
*                                                                  0249 00741000
*       GEN;                                                       0249 00742000
         WTOR  ,REPLY,1,ECB,MF=(E,(1))                                  00743000
         WAIT  ECB=ECB             WAIT FOR REPLY                       00744000
*       REPLY=REPLY|'40'X;          /* MAKE REPLY CAPS               */ 00745000
         OI    REPLY,X'40'                                         0250 00746000
*       REG1=AMDPRE10+12;           /* POINT TO MESSAGE TEXT TO WRITE   00747000
*                                      ON SYSPRINT                   */ 00748000
         L     @14,AFMG(,AEDITCBR)                                 0251 00749000
         LA    REG1,12                                             0251 00750000
         AL    REG1,AMDPRE10(,@14)                                 0251 00751000
*       GEN;                                                       0252 00752000
         BRPRTMSG  (R1),65      /* PRINT MESSAGE ON SYSPRINT            00753000
*                                  USE INDENTIFIER R1 TO INDICATE       00754000
*                                  THAT REG 1 IS ALREADY LOADED      */ 00755000
         BRPRTMSG  REPLY,1      /* PRINT REPLY ON SYSPRINT           */ 00756000
*       RFY                                                        0253 00757000
*        (REG1) UNRSTD;                                            0253 00758000
*       IF REPLY='C' THEN           /* TEST FOR GO-AHEAD             */ 00759000
*                                                                  0254 00760000
         CLI   REPLY,C'C'                                          0254 00761000
         BNE   @RF00254                                            0254 00762000
*         /***********************************************************/ 00763000
*         /*                                                         */ 00764000
*         /* OPERATOR SAYS OK                                        */ 00765000
*         /*                                                         */ 00766000
*         /***********************************************************/ 00767000
*                                                                  0255 00768000
*CONT:                                                             0255 00769000
*         DO;                                                      0255 00770000
CONT     DS    0H                                                  0256 00771000
*           DO I=5 TO 1 BY-1;       /* CLEAR JOB ARRAY         Y02014*/ 00772000
         LA    @14,5                                               0256 00773000
         ST    @14,I                                               0256 00774000
@DL00256 DS    0H                                                  0257 00775000
*             JOBNAMES(I)=' ';                                     0257 00776000
         LR    @10,@14                                             0257 00777000
         SLA   @10,3                                               0257 00778000
         ALR   @10,AEDITCBR                                        0257 00779000
         MVI   JOBNAMES-7(@10),C' '                                0257 00780000
         MVC   JOBNAMES-6(6,@10),JOBNAMES-7(@10)                   0257 00781000
         MVI   JOBNAMES-8(@10),C' '                                0257 00782000
*           END;                                                   0258 00783000
         BCTR  @14,0                                               0258 00784000
         ST    @14,I                                               0258 00785000
         LTR   @14,@14                                             0258 00786000
         BP    @DL00256                                            0258 00787000
*           IF EXTTRC='1'B THEN     /* EXTERNAL DATA SET       Y02014*/ 00788000
         TM    EXTTRC(AEDITCBR),B'00000100'                        0259 00789000
         BO    @RT00259                                            0259 00790000
*             GOTO EXTOK;           /* COMPLETE EXTERNAL SET UP    0260 00791000
*                                                              Y02014*/ 00792000
*           ELSE                                                   0261 00793000
*             GOTO DUMPEXT;         /* COMPLETE DUMP SET UP    Y02014*/ 00794000
         B     DUMPEXT                                             0261 00795000
*         END CONT;                                                0262 00796000
*       IF REPLY='S' THEN           /* TEST FOR 'S' - STOP REQUESTED */ 00797000
*                                                                  0263 00798000
@RF00254 CLI   REPLY,C'S'                                          0263 00799000
         BNE   @RF00263                                            0263 00800000
*         /***********************************************************/ 00801000
*         /*                                                         */ 00802000
*         /* OPERATOR SAYS DO NOT CONTINUE, SO SET UP FOR EDIT       */ 00803000
*         /* TERMINATION                                             */ 00804000
*         /*                                                         */ 00805000
*         /***********************************************************/ 00806000
*                                                                  0264 00807000
*SETTERM:                                                          0264 00808000
*         DO;                                                      0264 00809000
SETTERM  DS    0H                                                  0265 00810000
*           DRVTERM='1'B;           /* REQUEST TERM ROUTINE          */ 00811000
*           DRVTITLE='0'B;          /* DON-T TITLE AND               */ 00812000
*           DRVCON='0'B;            /* DON-T FORMAT CURRENT RECORD   */ 00813000
         OI    DRVTERM,B'10000000'                                 0267 00814000
         NI    DRVTITLE,B'11111001'                                0267 00815000
*           TERM='1'B;              /* INDICATE EDIT STOPPING        */ 00816000
         OI    TERM(AEDITCBR),B'01000000'                          0268 00817000
*           GO TO NEXTRTN;          /* GO BACK TO ROUTINE SELECTION,    00818000
*                                      GET-TERM WILL BE CALLED       */ 00819000
         B     NEXTRTN                                             0269 00820000
*         END SETTERM;                                             0270 00821000
*       ELSE                                                       0271 00822000
*         GO TO OPERR;              /* NOT 'C' OR 'S' MEAN ERROR IN     00823000
*                                      REPLY - REISSUE MSG AMD218D   */ 00824000
*     END ASKOP;                                                   0272 00825000
*                                                                  0273 00826000
*/********************************************************************  00827000
*                                                                    */ 00828000
*/*                                                                  */ 00829000
*/*  TITLE EDIT OUTPUT AND PRINT GTF OPTIONS                         */ 00830000
*/*                                                                  */ 00831000
*/********************************************************************  00832000
*                                                                    */ 00833000
*                                                                  0273 00834000
*PRNTITLE:                                                         0273 00835000
*   GEN(BRWRITE  1,IMM);            /* SKIP TO CLEAN PAGE, PREP M4381*/ 00836000
PRNTITLE BRWRITE  1,IMM                                                 00837000
*   GEN(BRWRITE  SKIP);             /* SKIP TO CLEAN PAGE            */ 00838000
         BRWRITE  SKIP                                                  00839000
*   OUTBUF(45:73)=MAINTITL;         /* MAIN TITLE TO OUTPUT AREA     */ 00840000
         L     @14,CURBUF                                          0275 00841000
         MVC   OUTBUF+44(29,@14),MAINTITL                          0275 00842000
*   GEN(BRWRITE 3);                 /* PRINT TITLE                   */ 00843000
         BRWRITE 3                                                      00844000
*   RFY                                                            0277 00845000
*    (REG2,                                                        0277 00846000
*     REG3) RSTD;                   /* REGISTER USAGE IN TITLE     0277 00847000
*                                      ROUTINE REG 2 - LENGTH OF DATA   00848000
*                                      BEING MOVED TO OUTPUT LINE REG   00849000
*                                      3 - DURING INIT, OFFSET INTO     00850000
*                                      LINE, AFTER INIT, ADDR OF   0277 00851000
*                                      VALUE OF CURRENT GTF OPTION   */ 00852000
*                                                                  0277 00853000
*   /*****************************************************************/ 00854000
*   /*                                                               */ 00855000
*   /* DATAPTR IS INDEX INTO STRING OF LABELS FOR GTF OPTIONS        */ 00856000
*   /*                                                               */ 00857000
*   /*****************************************************************/ 00858000
*                                                                  0278 00859000
*   DATAPTR=1;                      /* START WITH 1-ST BYTE OF OPTION   00860000
*                                      LIST                          */ 00861000
         LA    @14,1                                               0278 00862000
         ST    @14,DATAPTR                                         0278 00863000
*   DO I=1 TO 14;                   /* LOOP TO PRINT LINES IN GTF  0279 00864000
*                                      OPTION DISPLAY                */ 00865000
         ST    @14,I                                               0279 00866000
@DL00279 DS    0H                                                  0280 00867000
*     REG2=OPTSOFF(I);              /* GET LENGTH OF CURRENT OPTION  */ 00868000
         SLR   REG2,REG2                                           0280 00869000
         IC    REG2,OPTSOFF-1(@14)                                 0280 00870000
*     REG3=58-REG2;                 /* COMPUTE INDEX INTO OUTPUT BUF    00871000
*                                      WHERE OPTION SHOULD BE PLACED */ 00872000
*                                                                  0281 00873000
         LA    @10,58                                              0281 00874000
         LR    REG3,@10                                            0281 00875000
         SLR   REG3,REG2                                           0281 00876000
*     /***************************************************************/ 00877000
*     /*                                                             */ 00878000
*     /* MOVE CURRENT OPTION TO OUTPUT LINE                          */ 00879000
*     /*                                                             */ 00880000
*     /***************************************************************/ 00881000
*                                                                  0282 00882000
*     OUTBUF(REG3:58)=OPTS(DATAPTR:DATAPTR+REG2);                  0282 00883000
*                                                                  0282 00884000
         L     @08,CURBUF                                          0282 00885000
         LR    @07,@08                                             0282 00886000
         ALR   @07,REG3                                            0282 00887000
         SLR   @10,REG3                                            0282 00888000
         L     @06,DATAPTR                                         0282 00889000
         LA    @14,OPTS-1(@06)                                     0282 00890000
         EX    @10,@SM00508                                        0282 00891000
*     /***************************************************************/ 00892000
*     /*                                                             */ 00893000
*     /* UPDATE INDEX INTO VALUE STRING AND ACCOUNT FOR OPTSOFF      */ 00894000
*     /* MEMBER BEING 1-LESS                                         */ 00895000
*     /*                                                             */ 00896000
*     /***************************************************************/ 00897000
*                                                                  0283 00898000
*     DATAPTR=DATAPTR+REG2+1;                                      0283 00899000
         ALR   @06,REG2                                            0283 00900000
         AL    @06,@CF00069                                        0283 00901000
         ST    @06,DATAPTR                                         0283 00902000
*     OUTBUF(59)='=';               /* MOVE EQUAL SIGN TO OUTPUT LINE*/ 00903000
         MVI   OUTBUF+58(@08),C'='                                 0284 00904000
*     REG2=I*4;                     /* COMPUTE OFFSET INTO BRANCH TAB*/ 00905000
         L     @14,I                                               0285 00906000
         SLA   @14,2                                               0285 00907000
         LR    REG2,@14                                            0285 00908000
*     GEN;                                                         0286 00909000
*                                                                  0286 00910000
BRTAB    B     BRTAB(R2)           BRANCH TABLE TO SELECT TESTING       00911000
*                                  ROUTINE FOR EACH GTF OPTION          00912000
         B     FORMAT              SYS OR SYSM TRACE RECORD FORMATX     00913000
         B     SVCOP               SVC-S:  ALL, NONE OR SELECTIVE       00914000
         B     SIOOP               SIO-S:  ALL, NONE OR SELECTIVE       00915000
         B     PIOP                PGM INTERRUPTS:  ALL, NONE OR        00916000
*                                  SELECTIVE                            00917000
         B     IOOP                I/O INTERRUPTS:  ALL, NONE OR        00918000
*                                  SELECTIVE                            00919000
         B     EXTOP               TRACING EXTERNAL INTERRUPTS          00920000
         B     RROP                RR TRACING                    Y02014 00921000
         B     USROP               USER TRACES                          00922000
         B     GTF                 TRACING GTF INTERRUPTS               00923000
         B     DSPOP               TRACING DISPATCHES                   00924000
         B     PCI                 TRACING PCI INTERRUPTS               00925000
         B     RNIOOP              RNIO TRACING                  Y02014 00926000
         B     SRMOP               SRM TRACING                   Y02014 00927000
         B     USERTIME            USER TIME-STAMP IN EACH RECORD       00928000
*     /***************************************************************/ 00929000
*     /*                                                             */ 00930000
*     /* FORMAT OPTION                                               */ 00931000
*     /*                                                             */ 00932000
*     /***************************************************************/ 00933000
*                                                                  0287 00934000
*FORMAT:                                                           0287 00935000
*     IF OPTSYSM='1'B THEN          /* TEST FOR SYSM FORMAT    Y02014*/ 00936000
FORMAT   L     @14,GTFWDPTR(,AEDITCBR)                             0287 00937000
         TM    OPTSYSM(@14),B'10000000'                            0287 00938000
         BNO   @RF00287                                            0287 00939000
*       DO;                         /* IF SO,                        */ 00940000
*         REG2=3;                   /* SET LENGTH OF 'SYSM' - OPTION    00941000
*                                      VALUE                         */ 00942000
*                                                                  0289 00943000
         LA    REG2,3                                              0289 00944000
*         /***********************************************************/ 00945000
*         /*                                                         */ 00946000
*         /* POINT TO OPTION VALUE                                   */ 00947000
*         /*                                                         */ 00948000
*         /***********************************************************/ 00949000
*                                                                  0290 00950000
*         REG3=ADDR(SYSMLAB);                                      0290 00951000
*                                                                  0290 00952000
         LA    REG3,SYSMLAB                                        0290 00953000
*         /***********************************************************/ 00954000
*         /*                                                         */ 00955000
*         /* *** BSL DEPENDENT AND TRICKY *** UPDATE LOOP COUNTER TO */ 00956000
*         /* SKIP SVC, SIO, PI, I/O, RR AND EXT OPTIONS BECAUSE THESE*/ 00957000
*         /* ARE IMPLIED YES BY SYSM                                 */ 00958000
*         /*                                                         */ 00959000
*         /***********************************************************/ 00960000
*                                                                  0291 00961000
*         I=7;                      /*                         Y02014*/ 00962000
*                                                                  0291 00963000
         MVC   I(4),@CF00080                                       0291 00964000
*         /***********************************************************/ 00965000
*         /*                                                         */ 00966000
*         /* UPDATE DATA POINTER TO POSITION TO CORRECT LABEL        */ 00967000
*         /*                                                         */ 00968000
*         /***********************************************************/ 00969000
*                                                                  0292 00970000
*         DATAPTR=DATAPTR+15;       /*                         Y02014*/ 00971000
         LA    @14,15                                              0292 00972000
         AL    @14,DATAPTR                                         0292 00973000
         ST    @14,DATAPTR                                         0292 00974000
*         GO TO MOVEVAL;            /* GO MOVE OPTION VALUE TO OUTPUT*/ 00975000
         B     MOVEVAL                                             0293 00976000
*       END;                                                       0294 00977000
*     ELSE                                                         0295 00978000
*       DO;                         /* IF NOT SYSM, MUST BE FULL SYS    00979000
*                                      FORMAT                        */ 00980000
@RF00287 DS    0H                                                  0296 00981000
*         REG2=2;                   /* SET LENGTH OF OPTION VALUE    */ 00982000
         LA    REG2,2                                              0296 00983000
*         REG3=ADDR(SYSLAB);        /* POINT TO VALUE                */ 00984000
         LA    REG3,SYSLAB                                         0297 00985000
*         GO TO MOVEVAL;            /* GO MOVE VALUE TO OUTPUT LINE  */ 00986000
         B     MOVEVAL                                             0298 00987000
*       END;                                                       0299 00988000
*                                                                  0299 00989000
*     /***************************************************************/ 00990000
*     /*                                                             */ 00991000
*     /* SVC OPTION - FIRST TEST FOR SELECT SVC TRACING - SVC        */ 00992000
*     /* PROMPTING                                                   */ 00993000
*     /*                                                             */ 00994000
*     /***************************************************************/ 00995000
*                                                                  0300 00996000
*SVCOP:                                                            0300 00997000
*     IF OPTSVCP='1'B THEN                                         0300 00998000
SVCOP    L     @14,GTFWDPTR(,AEDITCBR)                             0300 00999000
         TM    OPTSVCP(@14),B'01000000'                            0300 01000000
         BO    @RT00300                                            0300 01001000
*       GO TO SELECTVE;             /*                         Y02014*/ 01002000
*                                                                  0301 01003000
*     /***************************************************************/ 01004000
*     /*                                                             */ 01005000
*     /* IF NOT SELECTIVE TRACING, CHECK FOR ALL BY TESTING SVC ALL  */ 01006000
*     /* BIT OR                                                      */ 01007000
*     /*                                                             */ 01008000
*     /***************************************************************/ 01009000
*                                                                  0302 01010000
*     IF OPTSVC='1'B|OPTSYS='1'B THEN/* ALL SVC OR SYS PMTING  Y02014*/ 01011000
         TM    OPTSVC(@14),B'10000000'                             0302 01012000
         BO    @RT00302                                            0302 01013000
         TM    OPTSYS(@14),B'00100000'                             0302 01014000
         BO    @RT00302                                            0302 01015000
*       GO TO ALL;                                                 0303 01016000
*     ELSE                                                         0304 01017000
*       GO TO NONE;                 /* LABEL SVC-S AS NONE           */ 01018000
*                                                                  0304 01019000
         B     NONE                                                0304 01020000
*     /***************************************************************/ 01021000
*     /*                                                             */ 01022000
*     /* SIO OPTION - FIRST TEST FOR TRACING BY SELECT DEVICE - SIO  */ 01023000
*     /* PROMPTING                                                   */ 01024000
*     /*                                                             */ 01025000
*     /***************************************************************/ 01026000
*                                                                  0305 01027000
*SIOOP:                                                            0305 01028000
*     IF OPTSIOP='1'B THEN                                         0305 01029000
SIOOP    L     @14,GTFWDPTR(,AEDITCBR)                             0305 01030000
         TM    OPTSIOP(@14),B'00010000'                            0305 01031000
         BO    @RT00305                                            0305 01032000
*       GO TO SELECTVE;             /*                         Y02014*/ 01033000
*                                                                  0306 01034000
*     /***************************************************************/ 01035000
*     /*                                                             */ 01036000
*     /* IF NOT SELECTIVE TRACING, CHECK FOR ALL BY TESTING SIO ALL  */ 01037000
*     /* BIT OR                                                      */ 01038000
*     /*                                                             */ 01039000
*     /***************************************************************/ 01040000
*                                                                  0307 01041000
*     IF OPTSIO='1'B|OPTSYS='1'B THEN/* ALL SIO OR SYS         Y02014*/ 01042000
         TM    OPTSIO(@14),B'00100000'                             0307 01043000
         BO    @RT00307                                            0307 01044000
         TM    OPTSYS(@14),B'00100000'                             0307 01045000
         BO    @RT00307                                            0307 01046000
*       GO TO ALL;                                                 0308 01047000
*     ELSE                                                         0309 01048000
*       GO TO NONE;                 /* LABEL SIO-S AS NONE           */ 01049000
*                                                                  0309 01050000
         B     NONE                                                0309 01051000
*     /***************************************************************/ 01052000
*     /*                                                             */ 01053000
*     /* PI OPTION - TEST FOR TRACING OF SELECT PGM INTERRUPTS - PI  */ 01054000
*     /* PROMPT                                                      */ 01055000
*     /*                                                             */ 01056000
*     /***************************************************************/ 01057000
*                                                                  0310 01058000
*PIOP:                                                             0310 01059000
*     IF OPTPIP='1'B THEN                                          0310 01060000
PIOP     L     @14,GTFWDPTR(,AEDITCBR)                             0310 01061000
         TM    OPTPIP(@14),B'00000100'                             0310 01062000
         BO    @RT00310                                            0310 01063000
*       GO TO SELECTVE;             /*                         Y02014*/ 01064000
*                                                                  0311 01065000
*     /***************************************************************/ 01066000
*     /*                                                             */ 01067000
*     /* IF NOT SELECTIVE TRACING, CHECK FOR ALL BY TESTING PI ALL   */ 01068000
*     /* BIT OR                                                      */ 01069000
*     /*                                                             */ 01070000
*     /***************************************************************/ 01071000
*                                                                  0312 01072000
*     IF OPTPI='1'B|OPTSYS='1'B THEN/* ALL PI OR SYS PROMPTING Y02014*/ 01073000
         TM    OPTPI(@14),B'00001000'                              0312 01074000
         BO    @RT00312                                            0312 01075000
         TM    OPTSYS(@14),B'00100000'                             0312 01076000
         BO    @RT00312                                            0312 01077000
*       GO TO ALL;                                                 0313 01078000
*     ELSE                                                         0314 01079000
*       GO TO NONE;                 /* LABEL PI-S AS NONE            */ 01080000
*                                                                  0314 01081000
         B     NONE                                                0314 01082000
*     /***************************************************************/ 01083000
*     /*                                                             */ 01084000
*     /* I/O OPTION - TEST FOR SELECTIVE IO BECAUSE OF IO=SIO        */ 01085000
*     /*                                                             */ 01086000
*     /***************************************************************/ 01087000
*                                                                  0315 01088000
*IOOP:                                                             0315 01089000
*     IF OPTIOSIO='1'B THEN         /*                         Y02014*/ 01090000
IOOP     L     @14,GTFWDPTR(,AEDITCBR)                             0315 01091000
         TM    OPTIOSIO(@14),B'00000001'                           0315 01092000
         BNO   @RF00315                                            0315 01093000
*MVSIO:                                                            0316 01094000
*       DO;                         /* PRINT 'SIO' VALUE OF IO OPTION*/ 01095000
MVSIO    DS    0H                                                  0317 01096000
*         REG2=2;                   /* SET LENGTH OF VALUE           */ 01097000
         LA    REG2,2                                              0317 01098000
*         REG3=ADDR(SIOLAB);        /* POINT TO VALUE                */ 01099000
         LA    REG3,SIOLAB                                         0318 01100000
*         GO TO MOVEVAL;            /* GO MOVE VALUE TO OUTPUT LINE  */ 01101000
         B     MOVEVAL                                             0319 01102000
*       END MVSIO;                                                 0320 01103000
*                                                                  0320 01104000
*     /***************************************************************/ 01105000
*     /*                                                             */ 01106000
*     /* TEST FOR TRACING OF I/O INTERRUPTS BY SELECT DEVICE - I/O   */ 01107000
*     /* PROMPTING                                                   */ 01108000
*     /*                                                             */ 01109000
*     /***************************************************************/ 01110000
*                                                                  0321 01111000
*     IF OPTIOP='1'B THEN           /*                         Y02014*/ 01112000
@RF00315 L     @14,GTFWDPTR(,AEDITCBR)                             0321 01113000
         TM    OPTIOP(@14),B'00000001'                             0321 01114000
         BNO   @RF00321                                            0321 01115000
*SELECTVE:                                                         0322 01116000
*       DO;                         /* PRINT 'SELECTIVE' OPTION VALUE*/ 01117000
SELECTVE DS    0H                                                  0323 01118000
*         REG2=8;                   /* SET LENGTH OF 'SELECTIVE'     */ 01119000
*                                                                  0323 01120000
         LA    REG2,8                                              0323 01121000
*         /***********************************************************/ 01122000
*         /*                                                         */ 01123000
*         /* POINT TO OPTION VALUE                                   */ 01124000
*         /*                                                         */ 01125000
*         /***********************************************************/ 01126000
*                                                                  0324 01127000
*         REG3=ADDR(SELECTLB);                                     0324 01128000
         LA    REG3,SELECTLB                                       0324 01129000
*         GO TO MOVEVAL;            /* GO MOVE VALUE TO OUTPUT LINE  */ 01130000
         B     MOVEVAL                                             0325 01131000
*       END SELECTVE;                                              0326 01132000
*                                                                  0326 01133000
*     /***************************************************************/ 01134000
*     /*                                                             */ 01135000
*     /* IF NOT SELECTIVE TRACING, CHECK FOR ALL BY TESTING I/O ALL  */ 01136000
*     /* BIT OR                                                      */ 01137000
*     /*                                                             */ 01138000
*     /***************************************************************/ 01139000
*                                                                  0327 01140000
*     IF OPTIO='1'B|OPTSYS='1'B THEN/* ALL IO OR SYS PROMPTING Y02014*/ 01141000
@RF00321 L     @14,GTFWDPTR(,AEDITCBR)                             0327 01142000
         TM    OPTIO(@14),B'00000010'                              0327 01143000
         BO    @RT00327                                            0327 01144000
         TM    OPTSYS(@14),B'00100000'                             0327 01145000
         BNO   @RF00327                                            0327 01146000
@RT00327 DS    0H                                                  0328 01147000
*ALL:                                                              0328 01148000
*       DO;                         /* PRINT 'ALL' VALUE OF OPTIONS  */ 01149000
ALL      DS    0H                                                  0329 01150000
*         REG2=2;                   /* SET LENGTH OF 'ALL'           */ 01151000
         LA    REG2,2                                              0329 01152000
*         REG3=ADDR(ALLAB);         /* POINT TO VALUE                */ 01153000
         LA    REG3,ALLAB                                          0330 01154000
*         GO TO MOVEVAL;            /* GO MOVE VALUE TO OUTPUT LINE  */ 01155000
         B     MOVEVAL                                             0331 01156000
*       END ALL;                                                   0332 01157000
*                                                                  0332 01158000
*     /***************************************************************/ 01159000
*     /*                                                             */ 01160000
*     /* LABEL I/O-S AS NONE                                         */ 01161000
*     /*                                                             */ 01162000
*     /***************************************************************/ 01163000
*                                                                  0333 01164000
*     ELSE                                                         0333 01165000
*NONE:                                                             0333 01166000
*       DO;                         /* PRINT 'NONE' OPTION           */ 01167000
@RF00327 DS    0H                                                  0333 01168000
NONE     DS    0H                                                  0334 01169000
*         REG2=3;                   /* SET LENGTH OF VALUE           */ 01170000
*                                                                  0334 01171000
         LA    REG2,3                                              0334 01172000
*         /***********************************************************/ 01173000
*         /*                                                         */ 01174000
*         /* POINT TO OPTION VALUE                                   */ 01175000
*         /*                                                         */ 01176000
*         /***********************************************************/ 01177000
*                                                                  0335 01178000
*         REG3=ADDR(NONELAB);                                      0335 01179000
         LA    REG3,NONELAB                                        0335 01180000
*         GO TO MOVEVAL;            /* GO MOVE VALUE TO OUTPUT LINE  */ 01181000
         B     MOVEVAL                                             0336 01182000
*       END NONE;                                                  0337 01183000
*                                                                  0337 01184000
*     /***************************************************************/ 01185000
*     /*                                                             */ 01186000
*     /* EXT OPTION - TEST FOR YES BY OR OF EXT, ALL SYS, AND SYSP   */ 01187000
*     /*                                                             */ 01188000
*     /***************************************************************/ 01189000
*                                                                  0338 01190000
*EXTOP:                                                            0338 01191000
*     IF OPTEXT='1'B|               /*                         Y02014*/ 01192000
*         OPTSYS='1'B|              /*                         Y02014*/ 01193000
*         OPTSYSP='1'B THEN                                        0338 01194000
EXTOP    L     @14,GTFWDPTR(,AEDITCBR)                             0338 01195000
         TM    OPTEXT(@14),B'10000000'                             0338 01196000
         BO    @RT00338                                            0338 01197000
         TM    OPTSYS(@14),B'01100000'                             0338 01198000
         BNZ   @RT00338                                            0338 01199000
*       GO TO YES;                  /*                         Y02014*/ 01200000
*     ELSE                                                         0340 01201000
*       GO TO NO;                                                  0340 01202000
*                                                                  0340 01203000
         B     NO                                                  0340 01204000
*     /***************************************************************/ 01205000
*     /*                                                             */ 01206000
*     /* RR OPTION BY OR OF RR ALL SYS AND SYSP                Y02014*/ 01207000
*     /*                                                             */ 01208000
*     /***************************************************************/ 01209000
*                                                                  0341 01210000
*RROP:                                                             0341 01211000
*     IF OPTRR='1'B|                /*                         Y02014*/ 01212000
*         OPTSYS='1'B|              /*                         Y02014*/ 01213000
*         OPTSYSP='1'B THEN                                        0341 01214000
RROP     L     @14,GTFWDPTR(,AEDITCBR)                             0341 01215000
         TM    OPTRR(@14),B'00010000'                              0341 01216000
         BO    @RT00341                                            0341 01217000
         TM    OPTSYS(@14),B'01100000'                             0341 01218000
         BNZ   @RT00341                                            0341 01219000
*       GOTO YES;                   /*                         Y02014*/ 01220000
*     ELSE                                                         0343 01221000
*       GOTO NO;                    /*                         Y02014*/ 01222000
*                                                                  0343 01223000
         B     NO                                                  0343 01224000
*     /***************************************************************/ 01225000
*     /*                                                             */ 01226000
*     /* RNIO OPTION INDICATED                                 Y02014*/ 01227000
*     /*                                                             */ 01228000
*     /***************************************************************/ 01229000
*                                                                  0344 01230000
*RNIOOP:                            /*                         Y02014*/ 01231000
*     IF OPTRNIO='1'B THEN                                         0344 01232000
RNIOOP   L     @14,GTFWDPTR(,AEDITCBR)                             0344 01233000
         TM    OPTRNIO(@14),B'01000000'                            0344 01234000
         BO    @RT00344                                            0344 01235000
*       GOTO YES;                   /* RNIO OPTION             Y02014*/ 01236000
*     ELSE                                                         0346 01237000
*       GOTO NO;                    /*                         Y02014*/ 01238000
*                                                                  0346 01239000
         B     NO                                                  0346 01240000
*     /***************************************************************/ 01241000
*     /*                                                             */ 01242000
*     /* SRM OPTION INDICATED                                  Y02014*/ 01243000
*     /*                                                             */ 01244000
*     /***************************************************************/ 01245000
*                                                                  0347 01246000
*SRMOP:                             /*                         Y02014*/ 01247000
*     IF OPTSRM='1'B THEN                                          0347 01248000
SRMOP    L     @14,GTFWDPTR(,AEDITCBR)                             0347 01249000
         TM    OPTSRM(@14),B'00100000'                             0347 01250000
         BO    @RT00347                                            0347 01251000
*       GO TO YES;                  /* SRM OPTION              Y02014*/ 01252000
*     ELSE                                                         0349 01253000
*       GO TO NO;                   /*                         Y02014*/ 01254000
*                                                                  0349 01255000
         B     NO                                                  0349 01256000
*     /***************************************************************/ 01257000
*     /*                                                             */ 01258000
*     /* USR OPTION INDICATED                                        */ 01259000
*     /*                                                             */ 01260000
*     /***************************************************************/ 01261000
*                                                                  0350 01262000
*USROP:                                                            0350 01263000
*     IF OPTUSR='1'B THEN                                          0350 01264000
USROP    L     @14,GTFWDPTR(,AEDITCBR)                             0350 01265000
         TM    OPTUSR(@14),B'00010000'                             0350 01266000
         BO    @RT00350                                            0350 01267000
*       GO TO YES;                  /*                         Y02014*/ 01268000
*     ELSE                                                         0352 01269000
*       GO TO NO;                                                  0352 01270000
*                                                                  0352 01271000
         B     NO                                                  0352 01272000
*     /***************************************************************/ 01273000
*     /*                                                             */ 01274000
*     /* GTF OPTION INDICATED                                        */ 01275000
*     /*                                                             */ 01276000
*     /***************************************************************/ 01277000
*                                                                  0353 01278000
*GTF:                                                              0353 01279000
*     IF OPTTRC='1'B THEN                                          0353 01280000
GTF      L     @14,GTFWDPTR(,AEDITCBR)                             0353 01281000
         TM    OPTTRC(@14),B'00001000'                             0353 01282000
         BO    @RT00353                                            0353 01283000
*       GO TO YES;                  /*                         Y02014*/ 01284000
*     ELSE                                                         0355 01285000
*       GO TO NO;                                                  0355 01286000
*                                                                  0355 01287000
         B     NO                                                  0355 01288000
*     /***************************************************************/ 01289000
*     /*                                                             */ 01290000
*     /* DSP OPTION INDICATED                                        */ 01291000
*     /*                                                             */ 01292000
*     /***************************************************************/ 01293000
*                                                                  0356 01294000
*DSPOP:                                                            0356 01295000
*     IF OPTDSP='1'B THEN                                          0356 01296000
DSPOP    L     @14,GTFWDPTR(,AEDITCBR)                             0356 01297000
         TM    OPTDSP(@14),B'00000100'                             0356 01298000
         BO    @RT00356                                            0356 01299000
*       GO TO YES;                  /*                         Y02014*/ 01300000
*     ELSE                                                         0358 01301000
*       GO TO NO;                                                  0358 01302000
*                                                                  0358 01303000
         B     NO                                                  0358 01304000
*     /***************************************************************/ 01305000
*     /*                                                             */ 01306000
*     /* PCI OPTION INDICATED                                        */ 01307000
*     /*                                                             */ 01308000
*     /***************************************************************/ 01309000
*                                                                  0359 01310000
*PCI:                                                              0359 01311000
*     IF OPTPCI='1'B THEN                                          0359 01312000
PCI      L     @14,GTFWDPTR(,AEDITCBR)                             0359 01313000
         TM    OPTPCI(@14),B'00000001'                             0359 01314000
         BO    @RT00359                                            0359 01315000
*       GO TO YES;                  /*                         Y02014*/ 01316000
*     ELSE                                                         0361 01317000
*       GO TO NO;                                                  0361 01318000
*                                                                  0361 01319000
         B     NO                                                  0361 01320000
*     /***************************************************************/ 01321000
*     /*                                                             */ 01322000
*     /* USERTIME OPTION INDICATED                                   */ 01323000
*     /*                                                             */ 01324000
*     /***************************************************************/ 01325000
*                                                                  0362 01326000
*USERTIME:                                                         0362 01327000
*     IF OPTTIME='1'B THEN          /*                         Y02014*/ 01328000
USERTIME L     @14,GTFWDPTR(,AEDITCBR)                             0362 01329000
         TM    OPTTIME(@14),B'00000001'                            0362 01330000
         BNO   @RF00362                                            0362 01331000
*YES:                                                              0363 01332000
*       DO;                         /* PRINT 'YES'                   */ 01333000
YES      DS    0H                                                  0364 01334000
*         REG2=2;                   /* SET LENGTH OF VALUE           */ 01335000
         LA    REG2,2                                              0364 01336000
*         REG3=ADDR(YESLAB);        /* POINT TO VALUE                */ 01337000
         LA    REG3,YESLAB                                         0365 01338000
*         GO TO MOVEVAL;            /* GO MOVE VALUE TO OUTPUT LINE  */ 01339000
         B     MOVEVAL                                             0366 01340000
*       END YES;                                                   0367 01341000
*     ELSE                                                         0368 01342000
*NO:                                                               0368 01343000
*       DO;                         /* PRINT 'NO'                    */ 01344000
@RF00362 DS    0H                                                  0368 01345000
NO       DS    0H                                                  0369 01346000
*         REG2=1;                   /* SET LENGTH OF VALUE           */ 01347000
         LA    REG2,1                                              0369 01348000
*         REG3=ADDR(NOLAB);         /* POINT TO VALUE                */ 01349000
*                                                                  0370 01350000
         LA    REG3,NOLAB                                          0370 01351000
*         /***********************************************************/ 01352000
*         /*                                                         */ 01353000
*         /* FALL THROUGH TO MOVE VALUE TO OUTPUT LINE               */ 01354000
*         /*                                                         */ 01355000
*         /***********************************************************/ 01356000
*                                                                  0371 01357000
*       END NO;                                                    0371 01358000
*                                                                  0371 01359000
*     /***************************************************************/ 01360000
*     /*                                                             */ 01361000
*     /* BRANCH HERE TO MOVE VALUE OF CURRENT GTF OPTION TO OUTPUT   */ 01362000
*     /* LINE AND THEN PRINT LINE - OPTVAL BASED ON REG 3 SET ABOVE  */ 01363000
*     /*                                                             */ 01364000
*     /***************************************************************/ 01365000
*                                                                  0372 01366000
*MOVEVAL:                                                          0372 01367000
*     OUTBUF(60:60+REG2)=OPTVAL;                                   0372 01368000
MOVEVAL  L     @14,CURBUF                                          0372 01369000
         EX    REG2,@SM00510                                       0372 01370000
*     GEN(BRWRITE  1);              /* PRINT CURRENT OPTION LINE     */ 01371000
         BRWRITE  1                                                     01372000
*ENDGTFOP:                                                         0374 01373000
*   END;                            /* END FOR PRINTING OF A SINGLE     01374000
*                                      LINE OF OPTION DISPLAY - LOOP    01375000
*                                      TO PRINT NEXT LINE            */ 01376000
ENDGTFOP LA    @14,1                                               0374 01377000
         AL    @14,I                                               0374 01378000
         ST    @14,I                                               0374 01379000
         C     @14,@CF00310                                        0374 01380000
         BNH   @DL00279                                            0374 01381000
*   RFY                                                            0375 01382000
*    (REG2,                                                        0375 01383000
*     REG3) UNRSTD;                 /*                         Y02014*/ 01384000
*   GEN(BRWRITE  SKIP);             /* GTF OPTIONS ON SEPARATE PAGE  */ 01385000
         BRWRITE  SKIP                                                  01386000
*   DRVTITLE='0'B;                  /* TURN OFF TITLE BIT IN DRIVER  */ 01387000
         NI    DRVTITLE,B'11111011'                                0377 01388000
*   GO TO NEXTRTN;                  /* GO BACK AND SELECT NEXT     0378 01389000
*                                      ROUTINE                       */ 01390000
         B     NEXTRTN                                             0378 01391000
*                                                                  0379 01392000
*/********************************************************************  01393000
*                                                                    */ 01394000
*/*                                                                  */ 01395000
*/*                            CALLCON                               */ 01396000
*/*                                                                  */ 01397000
*/********************************************************************  01398000
*                                                                    */ 01399000
*                                                                  0379 01400000
*CALLCON:                                                          0379 01401000
*   CALL PRCON;                     /* CALL AMDPRCON TO FORMAT TIME-    01402000
*                                      STAMP RECORD                  */ 01403000
CALLCON  L     @15,ACON                                            0379 01404000
         BALR  @14,@15                                             0379 01405000
*   DRVCON='0'B;                    /* TURN OFF CALLCON BIT IN DRIVER*/ 01406000
         NI    DRVCON,B'11111101'                                  0380 01407000
*   GO TO NEXTRTN;                  /* GO BACK TO ROUTINE SELECTION  */ 01408000
         B     NEXTRTN                                             0381 01409000
*/********************************************************************  01410000
*                                                                    */ 01411000
*/*                                                                  */ 01412000
*/*                            CALLFLT                               */ 01413000
*/*                                                                  */ 01414000
*/********************************************************************  01415000
*                                                                    */ 01416000
*                                                                  0382 01417000
*CALLFLT:                                                          0382 01418000
*   CALL PRFLT;                     /* CALL AMDPRFLT TO BEGIN      0382 01419000
*                                      PROCESSING OF GTF TRACE RECORD*/ 01420000
*                                                                  0382 01421000
CALLFLT  L     @15,AFLT                                            0382 01422000
         BALR  @14,@15                                             0382 01423000
*   /*****************************************************************/ 01424000
*   /*                                                               */ 01425000
*   /* TERM REQUESTED DURING TRACE RECORD PROCESSING                 */ 01426000
*   /*                                                               */ 01427000
*   /*****************************************************************/ 01428000
*                                                                  0383 01429000
*   IF TERM='1'B THEN                                              0383 01430000
         TM    TERM(AEDITCBR),B'01000000'                          0383 01431000
         BNO   @RF00383                                            0383 01432000
*     DRVTERM='1'B;                 /* IF SO, REQUEST TERM ROUTINE IN   01433000
*                                      AMDPRFRM                      */ 01434000
         OI    DRVTERM,B'10000000'                                 0384 01435000
*   DRVFLT='0'B;                    /* TURN OFF CALL FLT IN DRIVER   */ 01436000
@RF00383 NI    DRVFLT,B'11111110'                                  0385 01437000
*   GO TO NEXTRTN;                  /* GO BACK TO ROUTINE SELECTION  */ 01438000
         B     NEXTRTN                                             0386 01439000
*   END AMDPRFRM                                                   0387 01440000
*                                                                  0387 01441000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */ 01442000
*/*%INCLUDE SYSLIB  (AMDPRTAB)                                       */ 01443000
*/*%INCLUDE SYSLIB  (AMDOPTWD)                                       */ 01444000
*/*%INCLUDE SYSLIB  (RECMAP  )                                       */ 01445000
*                                                                  0387 01446000
*       ;                                                          0387 01447000
@DATA    DS    0H                                                       01448000
@SM00508 MVC   OUTBUF-1(0,@07),0(@14)                                   01449000
@SM00510 MVC   OUTBUF+59(0,@14),OPTVAL(REG3)                            01450000
         DS    0F                                                       01451000
@SA00001 DS    18F                                                      01452000
         DS    0F                                                       01453000
@CF00069 DC    F'1'                                                     01454000
@CF00080 DC    F'7'                                                     01455000
@CF00310 DC    F'14'                                                    01456000
@CV00233 DC    V(AMDPRGET)                                              01457000
@CV00234 DC    V(AMDPRHEX)                                              01458000
@CV00235 DC    V(AMDPRCON)                                              01459000
@CV00236 DC    V(AMDPRFLT)                                              01460000
@CV00237 DC    V(AMDPRAPP)                                              01461000
@CV00238 DC    V(AMDPREXT)                                              01462000
@CV00239 DC    V(AMDPRFMG)                                              01463000
@CV00240 DC    V(AMDPRSPI)                                              01464000
@CV00241 DC    V(AMDPRTME)                                              01465000
         DS    0D                                                       01466000
I        DS    F                                                        01467000
STOPSAVE DS    A                                                        01468000
ADDRHOLD DS    A                                                        01469000
DATAPTR  DS    A                                                        01470000
@CC00379 DC    C'            '                                          01471000
@CC00413 EQU   @CC00379                                                 01472000
@CB00374 DC    X'0000'                                                  01473000
         DS    CL2                                                      01474000
FRMATAB  DS    CL40                                                     01475000
         ORG   FRMATAB                                                  01476000
AGET     DC    VL4(AMDPRGET)                                            01477000
AHEX     DC    VL4(AMDPRHEX)                                            01478000
ACON     DC    VL4(AMDPRCON)                                            01479000
AFLT     DC    VL4(AMDPRFLT)                                            01480000
AAPP     DC    VL4(AMDPRAPP)                                            01481000
AEXT     DC    VL4(AMDPREXT)                                            01482000
APRFMG   DC    VL4(AMDPRFMG)                                            01483000
ASPI     DC    VL4(AMDPRSPI)                                            01484000
ATME     DC    VL4(AMDPRTME)                                            01485000
FRMRES1  DC    A(0)                                                     01486000
         ORG   FRMATAB+40                                               01487000
DRIVER   DS    BL2                                                      01488000
         ORG   DRIVER                                                   01489000
DRVRSV   DS    BL1                                                      01490000
DRVGET   EQU   DRIVER+0                                                 01491000
DRVTERM  DS    BL1                                                      01492000
DRVVALID EQU   DRIVER+1                                                 01493000
DRVPOSIT EQU   DRIVER+1                                                 01494000
DRVDUMP  EQU   DRIVER+1                                                 01495000
DRVEXT   EQU   DRIVER+1                                                 01496000
DRVTITLE EQU   DRIVER+1                                                 01497000
DRVCON   EQU   DRIVER+1                                                 01498000
DRVFLT   EQU   DRIVER+1                                                 01499000
         ORG   DRIVER+2                                                 01500000
FRMPTCH  DC    CL200'FRMPTCH'                                           01501000
         DS    CL2                                                      01502000
OPTSAVE  DS    CL4                                                      01503000
MAINTITL DC    CL29'* * * *    E D I T    * * * *'                      01504000
OPTS     DC    CL85'GTF OPTIONS IN EFFECT-  FORMATSVCSIOPIIOEXTRRUSRGTFC01505000
               DSPPCIRNIOSRMUSERTIME'                                   01506000
SYSMLAB  DC    CL4'SYSM'                                                01507000
SYSLAB   DC    CL3'SYS'                                                 01508000
ALLAB    DC    CL3'ALL'                                                 01509000
SELECTLB DC    CL9'SELECTIVE'                                           01510000
SIOLAB   DC    CL3'SIO'                                                 01511000
NONELAB  DC    CL4'NONE'                                                01512000
YESLAB   DC    CL3'YES'                                                 01513000
NOLAB    DC    CL2'NO'                                                  01514000
TITLSAVE DS    CL47                                                     01515000
EXTTITL  DC    CL47'EXTERNAL TRACE - DD XXXXXXXX'                       01516000
REPLY    DS    CL1                                                      01517000
FRMSWITC DS    BL1                                                      01518000
         ORG   FRMSWITC                                                 01519000
EXTITLE  DS    BL1                                                      01520000
STPSW    EQU   FRMSWITC+0                                               01521000
SW127    EQU   FRMSWITC+0                                               01522000
         ORG   FRMSWITC+1                                               01523000
FRMSWT2  DC    X'00'                                                    01524000
         ORG   FRMSWT2                                                  01525000
FIRST    DS    BL1                                                      01526000
@NM00003 EQU   FRMSWT2+0                                                01527000
         ORG   FRMSWT2+1                                                01528000
         DS    CL2                                                      01529000
TIMEPARM DS    CL12                                                     01530000
         ORG   TIMEPARM                                                 01531000
ADCVTTZ  DS    AL4                                                      01532000
ADTODCLK DS    AL4                                                      01533000
ADTMEBUF DS    AL4                                                      01534000
         ORG   TIMEPARM+12                                              01535000
TMEBUF   DS    CL22                                                     01536000
         ORG   TMEBUF                                                   01537000
YEAR     DS    CL4                                                      01538000
DAYYR    DS    CL3                                                      01539000
TOD      DS    CL15                                                     01540000
         ORG   TMEBUF+22                                                01541000
TIMSAVE  DS    CL9                                                      01542000
         ORG   TIMSAVE                                                  01543000
DSAV     DS    CL3                                                      01544000
TSAV     DS    CL6                                                      01545000
         ORG   TIMSAVE+9                                                01546000
OPTSOFF  DC    AL1(29)                                                  01547000
         DC    AL1(2)                                                   01548000
         DC    AL1(2)                                                   01549000
         DC    AL1(1)                                                   01550000
         DC    AL1(1)                                                   01551000
         DC    AL1(2)                                                   01552000
         DC    AL1(1)                                                   01553000
         DC    AL1(2)                                                   01554000
         DC    AL1(2)                                                   01555000
         DC    AL1(2)                                                   01556000
         DC    AL1(2)                                                   01557000
         DC    AL1(3)                                                   01558000
         DC    AL1(2)                                                   01559000
         DC    AL1(7)                                                   01560000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       01561000
@01      EQU   01                                                       01562000
@02      EQU   02                                                       01563000
@03      EQU   03                                                       01564000
@04      EQU   04                                                       01565000
@05      EQU   05                                                       01566000
@06      EQU   06                                                       01567000
@07      EQU   07                                                       01568000
@08      EQU   08                                                       01569000
@09      EQU   09                                                       01570000
@10      EQU   10                                                       01571000
@11      EQU   11                                                       01572000
@12      EQU   12                                                       01573000
@13      EQU   13                                                       01574000
@14      EQU   14                                                       01575000
@15      EQU   15                                                       01576000
ECB      EQU   @03                                                      01577000
REG0     EQU   @00                                                      01578000
REG1     EQU   @01                                                      01579000
REG2     EQU   @02                                                      01580000
REG3     EQU   @03                                                      01581000
REG4     EQU   @04                                                      01582000
REG5     EQU   @05                                                      01583000
REG6     EQU   @06                                                      01584000
REG12    EQU   @12                                                      01585000
REG15    EQU   @15                                                      01586000
AEDITCBR EQU   @09                                                      01587000
PARMREG  EQU   @01                                                      01588000
WREG2    EQU   @02                                                      01589000
         ENTRY FRMPTCH                                                  01590000
OUTBUF   EQU   1                                                        01591000
OPTVAL   EQU   0                                                        01592000
AMDPRTAB EQU   0                                                        01593000
AFMG     EQU   AMDPRTAB                                                 01594000
CURREC   EQU   AMDPRTAB+4                                               01595000
DEBGFLGS EQU   AMDPRTAB+8                                               01596000
PTHFLGS1 EQU   DEBGFLGS                                                 01597000
FRM      EQU   PTHFLGS1                                                 01598000
PTHFLGS2 EQU   DEBGFLGS+1                                               01599000
INRFCFGS EQU   DEBGFLGS+2                                               01600000
TERM     EQU   INRFCFGS                                                 01601000
EXTTRC   EQU   INRFCFGS                                                 01602000
EDITSTOP EQU   INRFCFGS                                                 01603000
IOFLGS   EQU   DEBGFLGS+3                                               01604000
GETEOF   EQU   IOFLGS                                                   01605000
GTFWDPTR EQU   AMDPRTAB+20                                              01606000
DDNAME   EQU   AMDPRTAB+32                                              01607000
STARTIME EQU   AMDPRTAB+40                                              01608000
STOPTIME EQU   AMDPRTAB+52                                              01609000
NAMES    EQU   AMDPRTAB+64                                              01610000
JOBNAMES EQU   NAMES                                                    01611000
ADS      EQU   AMDPRTAB+104                                             01612000
AADS     EQU   ADS                                                      01613000
SIF      EQU   AMDPRTAB+124                                             01614000
SIOFLGS  EQU   SIF                                                      01615000
DVADS1   EQU   AMDPRTAB+128                                             01616000
IO       EQU   AMDPRTAB+228                                             01617000
IOFLGS2  EQU   IO                                                       01618000
DVADS2   EQU   AMDPRTAB+232                                             01619000
VCF      EQU   AMDPRTAB+332                                             01620000
SVCFLGS  EQU   VCF                                                      01621000
USR      EQU   AMDPRTAB+368                                             01622000
USRFLGS  EQU   USR                                                      01623000
USRTAB   EQU   AMDPRTAB+372                                             01624000
PI       EQU   AMDPRTAB+452                                             01625000
PIFLGS   EQU   PI                                                       01626000
PGMNGEN  EQU   AMDPRTAB+456                                             01627000
GENFLAGS EQU   PGMNGEN+3                                                01628000
SYS      EQU   GENFLAGS                                                 01629000
SYSM     EQU   GENFLAGS                                                 01630000
GENFLGS1 EQU   AMDPRTAB+460                                             01631000
TSFOUND  EQU   GENFLGS1                                                 01632000
PRFMTADD EQU   AMDPRTAB+480                                             01633000
REENTWKA EQU   AMDPRTAB+484                                             01634000
AFRMAD   EQU   AMDPRTAB+488                                             01635000
ESTARTME EQU   AMDPRTAB+500                                             01636000
ESTOPTME EQU   AMDPRTAB+509                                             01637000
CVTTZONE EQU   AMDPRTAB+518                                             01638000
AMDOPTWD EQU   0                                                        01639000
OPTS1    EQU   AMDOPTWD                                                 01640000
OPTSYSM  EQU   OPTS1                                                    01641000
OPTSYSP  EQU   OPTS1                                                    01642000
OPTSYS   EQU   OPTS1                                                    01643000
OPTUSR   EQU   OPTS1                                                    01644000
OPTTRC   EQU   OPTS1                                                    01645000
OPTDSP   EQU   OPTS1                                                    01646000
OPTPCI   EQU   OPTS1                                                    01647000
OPTS2    EQU   AMDOPTWD+1                                               01648000
OPTSVC   EQU   OPTS2                                                    01649000
OPTSVCP  EQU   OPTS2                                                    01650000
OPTSIO   EQU   OPTS2                                                    01651000
OPTSIOP  EQU   OPTS2                                                    01652000
OPTPI    EQU   OPTS2                                                    01653000
OPTPIP   EQU   OPTS2                                                    01654000
OPTIO    EQU   OPTS2                                                    01655000
OPTIOP   EQU   OPTS2                                                    01656000
OPTS3    EQU   AMDOPTWD+2                                               01657000
OPTEXT   EQU   OPTS3                                                    01658000
OPTRNIO  EQU   OPTS3                                                    01659000
OPTSRM   EQU   OPTS3                                                    01660000
OPTRR    EQU   OPTS3                                                    01661000
OPTIOSIO EQU   OPTS3                                                    01662000
OPTS4    EQU   AMDOPTWD+3                                               01663000
OPTTIME  EQU   OPTS4                                                    01664000
PRGET    EQU   0                                                        01665000
PRCON    EQU   0                                                        01666000
PRFLT    EQU   0                                                        01667000
RECMAP   EQU   0                                                        01668000
RECAID   EQU   RECMAP+4                                                 01669000
RECFID   EQU   RECMAP+5                                                 01670000
RECTIME  EQU   RECMAP+6                                                 01671000
RECVTTZ  EQU   RECTIME                                                  01672000
RECTOD   EQU   RECTIME+4                                                01673000
RECGTFOP EQU   RECMAP+18                                                01674000
SVHKREC  EQU   0                                                        01675000
SVHKDATA EQU   SVHKREC+6                                                01676000
TODCNVRT EQU   0                                                        01677000
AMDPRE02 EQU   12                                                       01678000
AMDPRE09 EQU   20                                                       01679000
AMDPRE10 EQU   24                                                       01680000
AMDPRE14 EQU   28                                                       01681000
AMDPRE11 EQU   52                                                       01682000
PRAPP    EQU   0                                                        01683000
PREXT    EQU   0                                                        01684000
PRHEX    EQU   0                                                        01685000
PRSPI    EQU   0                                                        01686000
PRTME    EQU   0                                                        01687000
TIMEBUF  EQU   49                                                       01688000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    01689000
SVHKTCB  EQU   SVHKDATA+4                                               01690000
SVHKASID EQU   SVHKDATA+2                                               01691000
SVHKEID  EQU   SVHKDATA                                                 01692000
SVHKAFID EQU   SVHKREC+4                                                01693000
@NM00002 EQU   SVHKREC+2                                                01694000
SVHKLEN  EQU   SVHKREC                                                  01695000
RECLSTEV EQU   RECGTFOP                                                 01696000
RECRES1  EQU   RECMAP+2                                                 01697000
RECLL    EQU   RECMAP                                                   01698000
OPTRES3  EQU   OPTS4                                                    01699000
OPTRES2  EQU   OPTS3                                                    01700000
OPTRES1  EQU   OPTS1                                                    01701000
RESERVED EQU   AMDPRTAB+522                                             01702000
ESPSEC   EQU   ESTOPTME+7                                               01703000
ESPMIN   EQU   ESTOPTME+5                                               01704000
ESPHR    EQU   ESTOPTME+3                                               01705000
ESPDAY   EQU   ESTOPTME                                                 01706000
ESSEC    EQU   ESTARTME+7                                               01707000
ESMIN    EQU   ESTARTME+5                                               01708000
ESHR     EQU   ESTARTME+3                                               01709000
ESDAY    EQU   ESTARTME                                                 01710000
ADTSBUF  EQU   AMDPRTAB+496                                             01711000
OFSTDATA EQU   AMDPRTAB+494                                             01712000
OFSTEID  EQU   AMDPRTAB+492                                             01713000
AEIOCT   EQU   AMDPRTAB+476                                             01714000
EXITADDR EQU   AMDPRTAB+472                                             01715000
EXITNM   EQU   AMDPRTAB+464                                             01716000
RECDLL   EQU   AMDPRTAB+461                                             01717000
@NM00001 EQU   GENFLGS1                                                 01718000
FIRSTHSW EQU   GENFLGS1                                                 01719000
EOFINPRO EQU   GENFLGS1                                                 01720000
TS       EQU   GENFLGS1                                                 01721000
EOF      EQU   GENFLAGS                                                 01722000
RR       EQU   GENFLAGS                                                 01723000
SRM      EQU   GENFLAGS                                                 01724000
RNIO     EQU   GENFLAGS                                                 01725000
DSP      EQU   GENFLAGS                                                 01726000
EXT      EQU   GENFLAGS                                                 01727000
PICODEA  EQU   PGMNGEN+2                                                01728000
PICODES  EQU   PGMNGEN                                                  01729000
Q        EQU   PI+1                                                     01730000
P01R     EQU   PIFLGS                                                   01731000
SELP     EQU   PIFLGS                                                   01732000
ALLP     EQU   PIFLGS                                                   01733000
USRNGTAB EQU   USRTAB                                                   01734000
O        EQU   USR+1                                                    01735000
N01R     EQU   USRFLGS                                                  01736000
SELU     EQU   USRFLGS                                                  01737000
ALLU     EQU   USRFLGS                                                  01738000
SVCNUMS  EQU   AMDPRTAB+336                                             01739000
M        EQU   VCF+1                                                    01740000
L        EQU   SVCFLGS                                                  01741000
SELV     EQU   SVCFLGS                                                  01742000
ALLV     EQU   SVCFLGS                                                  01743000
IODVADS  EQU   DVADS2                                                   01744000
K01RES   EQU   IO+1                                                     01745000
JJ       EQU   IOFLGS2                                                  01746000
SELI     EQU   IOFLGS2                                                  01747000
ALLI     EQU   IOFLGS2                                                  01748000
SIODVADS EQU   DVADS1                                                   01749000
II       EQU   SIF+1                                                    01750000
H        EQU   SIOFLGS                                                  01751000
NOEQU    EQU   SIOFLGS                                                  01752000
EQUIV    EQU   SIOFLGS                                                  01753000
SELS     EQU   SIOFLGS                                                  01754000
ALLS     EQU   SIOFLGS                                                  01755000
ASCBADDR EQU   AADS                                                     01756000
DAY2     EQU   STOPTIME+10                                              01757000
F        EQU   STOPTIME+8                                               01758000
TIME2    EQU   STOPTIME                                                 01759000
DAY      EQU   STARTIME+10                                              01760000
D        EQU   STARTIME+8                                               01761000
TIME     EQU   STARTIME                                                 01762000
USEREXIT EQU   AMDPRTAB+24                                              01763000
C        EQU   DEBGFLGS+4                                               01764000
B        EQU   IOFLGS                                                   01765000
DMDFMT   EQU   INRFCFGS                                                 01766000
RET      EQU   INRFCFGS                                                 01767000
FMT      EQU   INRFCFGS                                                 01768000
SPIE     EQU   INRFCFGS                                                 01769000
FLMODE   EQU   INRFCFGS                                                 01770000
REMAIN   EQU   PTHFLGS2                                                 01771000
APP      EQU   PTHFLGS2                                                 01772000
REXT     EQU   PTHFLGS1                                                 01773000
FLT      EQU   PTHFLGS1                                                 01774000
HEX      EQU   PTHFLGS1                                                 01775000
CON      EQU   PTHFLGS1                                                 01776000
GET      EQU   PTHFLGS1                                                 01777000
SCN      EQU   PTHFLGS1                                                 01778000
ROOT     EQU   PTHFLGS1                                                 01779000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      01780000
@RF00115 EQU   NEXTRTN                                                  01781000
@RT00142 EQU   CONOUT                                                   01782000
@RF00155 EQU   CONOUT                                                   01783000
@RF00162 EQU   NEXTRTN                                                  01784000
@RF00169 EQU   NEXTRTN                                                  01785000
@RT00177 EQU   NEXTRTN                                                  01786000
@RT00191 EQU   STARTEST                                                 01787000
@RC00196 EQU   NEXTRTN                                                  01788000
@RT00207 EQU   SETEXT                                                   01789000
@RT00209 EQU   NEXTRTN                                                  01790000
@RT00223 EQU   ASKOP                                                    01791000
@RT00238 EQU   EXTOK                                                    01792000
@RT00259 EQU   EXTOK                                                    01793000
@RF00259 EQU   DUMPEXT                                                  01794000
@RF00263 EQU   OPERR                                                    01795000
@RT00300 EQU   SELECTVE                                                 01796000
@RT00302 EQU   ALL                                                      01797000
@RF00302 EQU   NONE                                                     01798000
@RT00305 EQU   SELECTVE                                                 01799000
@RT00307 EQU   ALL                                                      01800000
@RF00307 EQU   NONE                                                     01801000
@RT00310 EQU   SELECTVE                                                 01802000
@RT00312 EQU   ALL                                                      01803000
@RF00312 EQU   NONE                                                     01804000
@RT00338 EQU   YES                                                      01805000
@RF00338 EQU   NO                                                       01806000
@RT00341 EQU   YES                                                      01807000
@RF00341 EQU   NO                                                       01808000
@RT00344 EQU   YES                                                      01809000
@RF00344 EQU   NO                                                       01810000
@RT00347 EQU   YES                                                      01811000
@RF00347 EQU   NO                                                       01812000
@RT00350 EQU   YES                                                      01813000
@RF00350 EQU   NO                                                       01814000
@RT00353 EQU   YES                                                      01815000
@RF00353 EQU   NO                                                       01816000
@RT00356 EQU   YES                                                      01817000
@RF00356 EQU   NO                                                       01818000
@RT00359 EQU   YES                                                      01819000
@RF00359 EQU   NO                                                       01820000
@ENDDATA EQU   *                                                        01821000
         END   AMDPRFRM,(C'PLS2235',0701,76211)                         01822000
./  ADD  SSI=80740495,NAME=AMDPRGET
         TITLE 'AMDPRGET -TRACE RECORD GET ROUTINE                     *00001000
                        '                                               00002000
AMDPRGET CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL1(16)                                             0001 00007000
         DC    C'AMDPRGET  78.074'                                 0001 00008000
         DROP  @15                                                      00009000
@PROLOG  STM   @14,@12,12(@13)                                     0001 00010000
         BALR  @11,0                                               0001 00011000
@PSTART  LA    @05,4095(,@11)                                      0001 00012000
         USING @PSTART,@11                                         0001 00013000
         USING @PSTART+4095,@05                                    0001 00014000
         ST    @13,@SA00001+4                                      0001 00015000
         LA    @14,@SA00001                                        0001 00016000
         ST    @14,8(,@13)                                         0001 00017000
         LR    @13,@14                                             0001 00018000
         EQUATES                                                        00019000
         COMMON                                                         00020000
         USING COMMON,COMBASE      BASE AMDPRCOM                        00021000
         SYNEPS                                                         00022000
         USING SYNTAX,R15          BASE AMDPRSYN EP-S                   00023000
         DCBD  DSORG=PS,DEVD=(DA,TA)                                    00024000
         USING IHADCB,R8           BASE DCB MAPPING MACRO               00025000
AMDPRGET  CSECT                                                         00026000
*                                      ADDRESS OF AMDPRTAB REG 12  0147 00027000
*                                      (COMBASE) IS POINTER TO     0147 00028000
*                                      AMDPRDMP COMMON CSECT       0147 00029000
*                                      (AMDPRCOM)              Y02014*/ 00030000
*   AEDITCBR=AEDITCB;               /* SET UP AMDPRTAB REG           */ 00031000
         L     AEDITCBR,AEDITCB                                    0148 00032000
*   GET='1'B;                       /* INDICATE AMDRPGET IN CONTROL  */ 00033000
         OI    GET(AEDITCBR),B'00100000'                           0149 00034000
*   IF TERM='1'B THEN               /* TEST TERM. REQUEST BIT        */ 00035000
*                                                                  0150 00036000
         TM    TERM(AEDITCBR),B'01000000'                          0150 00037000
         BNO   @RF00150                                            0150 00038000
*     /***************************************************************/ 00039000
*     /*                                                             */ 00040000
*     /* IF ON, CLOSED DOWN GET OPERATIONS                           */ 00041000
*     /*                                                             */ 00042000
*     /***************************************************************/ 00043000
*                                                                  0151 00044000
*CLOSDOWN:                                                         0151 00045000
*     DO;                                                          0151 00046000
CLOSDOWN DS    0H                                                  0152 00047000
*       IF FIRSTGET='0'B THEN       /* TEST IF GET WAS SET UP AT ALL */ 00048000
         TM    FIRSTGET,B'10000000'                                0152 00049000
         BZ    @RT00152                                            0152 00050000
*         GO TO GETDONE;            /* IF NOT, NO CLOSE DOWN       0153 00051000
*                                      REQUIRED, SO BRANCH TO EXIT   */ 00052000
*                                                                  0153 00053000
*       /*************************************************************/ 00054000
*       /*                                                           */ 00055000
*       /* IF GET WAS SET UP, TEST WHETHER DATA WAS EXTERNAL OR DUMP */ 00056000
*       /* TO DETERMINE HOW MUCH SHUT DOWN IS REQUIRED               */ 00057000
*       /*                                                           */ 00058000
*       /*************************************************************/ 00059000
*                                                                  0154 00060000
*       IF EXTTRC='0'B THEN         /* IF DUMP DATA SET BEING      0154 00061000
*                                      PROCESSED,                    */ 00062000
         TM    EXTTRC(AEDITCBR),B'00000100'                        0154 00063000
         BZ    @RT00154                                            0154 00064000
*         GO TO GETFREE;            /* BRANCH TO FREE TRACE BUILD  0155 00065000
*                                      AREA                          */ 00066000
*                                                                  0155 00067000
*       /*************************************************************/ 00068000
*       /*                                                           */ 00069000
*       /* IF PROCESSING EXTERNAL TRACE DATA SET IN PROCESS,         */ 00070000
*       /*                                                           */ 00071000
*       /*************************************************************/ 00072000
*                                                                  0156 00073000
*       RFY                                                        0156 00074000
*        (REG8) RSTD;               /* REG 8 FOR BASE OF DCB MAPPING    00075000
*                                      MACRO                   Y02014*/ 00076000
*       REG8=ADDR(GTFDCB);          /* LOAD REG 8 FOR EOF HANDLER,   */ 00077000
         LA    REG8,GTFDCB                                         0157 00078000
*       CLOSE='1'B;                 /* INDICATE CLOSE DOWN REQUIRED, */ 00079000
         OI    CLOSE,B'00000100'                                   0158 00080000
*       GO TO EOFHANDL;             /* BRANCH TO PROCESS EOF         */ 00081000
         B     EOFHANDL                                            0159 00082000
*     END CLOSDOWN;                                                0160 00083000
*   IF DDNAME=BLANKS THEN           /* DETERMINE TYPE OF DATA SET  0161 00084000
*                                      BEING PROCESSED               */ 00085000
@RF00150 CLC   DDNAME(8,AEDITCBR),BLANKS                           0161 00086000
         BE    @RT00161                                            0161 00087000
*     GO TO DUMPTRC;                /* IF DDNAME SLOT IN AMDPRTAB IS    00088000
*                                      BLANK, GO PROCESS DUMP DATA IF   00089000
*                                      DDNAME HAS BEEN SPECIFIED,  0162 00090000
*                                      FALL THROUGH TO PROCESS     0162 00091000
*                                      EXTERNAL TRACE DATA SET       */ 00092000
*   REG8=ADDR(GTFDCB);              /* POINT TO INPUT DCB            */ 00093000
         LA    REG8,GTFDCB                                         0163 00094000
*   IF FIRSTGET='1'B THEN           /* IF NOT FIRST TIME INTO      0164 00095000
*                                      AMDRGET,                      */ 00096000
         TM    FIRSTGET,B'10000000'                                0164 00097000
         BO    @RT00164                                            0164 00098000
*     GO TO GETREC;                 /* GO GET NEXT RECORD            */ 00099000
*                                                                  0166 00100000
*/********************************************************************  00101000
*                                                                    */ 00102000
*/*                                                                  */ 00103000
*/*  THE FOLLOWING CODE SETS UP TO PROCESS AN EXTERNAL GTF DATA SET. */ 00104000
*/*  THIS CODE IS EXECUTED ONCE PER EDIT CONTROL STATEMENT.          */ 00105000
*/*                                                                  */ 00106000
*/********************************************************************  00107000
*                                                                    */ 00108000
*                                                                  0166 00109000
*   EXTTRC='1'B;                    /* INDICATE EXTERNAL DATA SET IN    00110000
*                                      PROCESS                       */ 00111000
         OI    EXTTRC(AEDITCBR),B'00000100'                        0166 00112000
*   AEIOCT=ADDR(EIOCTL);            /* POINT TAB TO I/O CONTROL TABLE*/ 00113000
         LA    @10,EIOCTL                                          0167 00114000
         ST    @10,AEIOCT(,AEDITCBR)                               0167 00115000
*   SYNMSGA=ADDR(AMDPRE01);         /* POINT TO GET ERROR MESSAGE  0168 00116000
*                                      ARRAY IN MESSAGE CSECT -    0168 00117000
*                                      AMDPRFMG                      */ 00118000
         L     @10,AFMG(,AEDITCBR)                                 0168 00119000
         ST    @10,SYNMSGA                                         0168 00120000
*   REG2=ADDR(DDNAME);              /* POINT TO DDNAME FIELD IN    0169 00121000
*                                      AMDPRTAB                      */ 00122000
*                                                                  0169 00123000
         LA    REG2,DDNAME(,AEDITCBR)                              0169 00124000
*   /*****************************************************************/ 00125000
*   /*                                                               */ 00126000
*   /* ISSUE DEVTYPE TO VERIFY THAT DD CARD HAS BEEN GIVEN AND TO    */ 00127000
*   /* DETERMINE DEVICE TYPE OF ALLOCATED DEVICE                     */ 00128000
*   /*                                                               */ 00129000
*   /*****************************************************************/ 00130000
*                                                                  0170 00131000
*   GEN(DEVTYPE  (REG2),EIODEV);                                   0170 00132000
         DEVTYPE  (REG2),EIODEV                                         00133000
*   IF REG15¬=0 THEN                                               0171 00134000
         LTR   REG15,REG15                                         0171 00135000
         BZ    @RF00171                                            0171 00136000
*     DO;                           /* IF RETURN CODE FROM DEVTYPE 0172 00137000
*                                      INDICATES NO DD CARD, EXIT  0172 00138000
*                                      WITH MESSAGE AMD220I          */ 00139000
*       REG2=SYNMSGA;               /* POINT TO AMD22OI ENTRY IN MSG    00140000
*                                      ARRAY - 1-ST MESSAGE          */ 00141000
         L     REG2,SYNMSGA                                        0173 00142000
*       MSGTEXT(27:34)=DDNAME;      /* MOVE SPECIFIED DD NAME TO MSG */ 00143000
         L     @10,MSGAD(,REG2)                                    0174 00144000
         MVC   MSGTEXT+26(8,@10),DDNAME(AEDITCBR)                  0174 00145000
*       GEN(OI  SWD,NOSTDMG);       /* REQUEST THAT MEESAGE AMD165I     00146000
*                                      NOT BE ISSUED                 */ 00147000
         OI  SWD,NOSTDMG                                                00148000
*       REG15=ASYNTAX;              /* POINT TO MESSAGE WRITER       */ 00149000
         L     REG15,ASYNTAX                                       0176 00150000
*       CALL SYNTAXA;               /* LINK TO MESSAGE WRITING     0177 00151000
*                                      ROUTINE REQUESTING 1-ST MSG.     00152000
*                                      IN LIST                       */ 00153000
         BAL   @14,SYNTAXA                                         0177 00154000
*/* BRANCH HERE TO REQUEST TERMINATION OF EDIT PROCESSING            */ 00155000
*                                                                  0178 00156000
*GETTERM:                                                          0178 00157000
*       TERM='1'B;                  /* SET TERM BIT IN AMDPRTAB      */ 00158000
GETTERM  OI    TERM(AEDITCBR),B'01000000'                          0178 00159000
*/* BRANCH HERE TO EXIT FROM AMDPRGET                                */ 00160000
*                                                                  0179 00161000
*GETDONE:                                                          0179 00162000
*       GET='0'B;                   /* RESET AMDPRGET PATH FLAG      */ 00163000
GETDONE  NI    GET(AEDITCBR),B'11011111'                           0179 00164000
*       RETURN;                     /* RETURN TO AMDPRFRM - THIS IS     00165000
*                                      THE ONLY EXIT FROM AMDPRGET   */ 00166000
@EL00001 L     @13,4(,@13)                                         0180 00167000
@EF00001 DS    0H                                                  0180 00168000
@ER00001 LM    @14,@12,12(@13)                                     0180 00169000
         BR    @14                                                 0180 00170000
*     END;                                                         0181 00171000
*   IF EIODEV(3)='20'X THEN         /* TEST FOR D/A DATA SET         */ 00172000
@RF00171 CLI   EIODEV+2,X'20'                                      0182 00173000
         BNE   @RF00182                                            0182 00174000
*     DAWRAP='1'B;                  /* IF SO, SET WRAP INDICATOR IN     00175000
*                                      EIOCT. WRAP POSITIONING IN  0183 00176000
*                                      PROCESS INDICATED BY PSITWRAP    00177000
*                                      BIT OFF                       */ 00178000
         OI    DAWRAP,B'00100000'                                  0183 00179000
*   EIOERCT=3;                      /* INITIALIZE ERROR COUNTER      */ 00180000
@RF00182 MVC   EIOERCT(2),@CH00198                                 0184 00181000
*   EIODCB=REG8;                    /* STORE DCB ADDRESS IN EIOCT    */ 00182000
         ST    REG8,EIODCB                                         0185 00183000
*   DCBDDNAM=DDNAME;                /* MOVE GIVEN DDNAME TO DCB      */ 00184000
         MVC   DCBDDNAM(8),DDNAME(AEDITCBR)                        0186 00185000
*   EIOX1=DCBRECFM;                 /* SAVE HIGH ORDER BYTE IN     0187 00186000
*                                      DCBEXLST FIELD                */ 00187000
         MVC   EIOX1(1),DCBRECFM                                   0187 00188000
*   DCBEXLST=ADDR(EIODCBEX);        /* STORE LIST ADDRESS IN DCB     */ 00189000
         LA    @10,EIODCBEX                                        0188 00190000
         ST    @10,DCBEXLST                                        0188 00191000
*   DCBRECFM=EIOX1;                 /* RESTORE HIGH BYTE             */ 00192000
         MVC   DCBRECFM(1),EIOX1                                   0189 00193000
*   EIODCBEX=ADDR(DCBEXIT);         /* SET EXIT ADDRESS IN EXIT LIST */ 00194000
         LA    @10,DCBEXIT                                         0190 00195000
         ST    @10,EIODCBEX                                        0190 00196000
*   EIOX1='85'X;                    /* SET EXIT LIST FLAGS           */ 00197000
         MVI   EIOX1,X'85'                                         0191 00198000
*   GEN(OPEN  ((R8),INPUT));        /* OPEN INPUT DCB - EXIT ROUTINE    00199000
*                                      TO PROCESS DURING OPEN        */ 00200000
         OPEN  ((R8),INPUT)                                             00201000
*   IF OPENFAIL='1'B THEN           /* TEST IF EXIT ROUTINE WAS      */ 00202000
         TM    OPENFAIL,B'01000000'                                0193 00203000
         BNO   @RF00193                                            0193 00204000
*     DO;                           /* SUCCESSFUL - IF NOT,          */ 00205000
*       GEN(CLOSE ((R8)));          /* ISSUE CLOSE                   */ 00206000
         CLOSE ((R8))                                                   00207000
*       GO TO UNSPIE;               /* IF NOT, GO TERMINATE EDIT     */ 00208000
         B     UNSPIE                                              0196 00209000
*     END;                                                         0197 00210000
*   FIRSTGET='1'B;                  /* INDICATE SET UP COMPLETE      */ 00211000
@RF00193 OI    FIRSTGET,B'10000000'                                0198 00212000
*                                                                  0199 00213000
*/********************************************************************  00214000
*                                                                    */ 00215000
*/*                                                                  */ 00216000
*/*  GET MAINLINE IF EXTERNAL TRACE DATA SET IS BEING PROCESSED      */ 00217000
*/*                                                                  */ 00218000
*/********************************************************************  00219000
*                                                                    */ 00220000
*/* BRANCH HERE TO GET LOGICAL TRACE RECORD                          */ 00221000
*                                                                  0199 00222000
*GETREC:                                                           0199 00223000
*   SYNADSW='0'B;                   /* RESET SYNAD ENTERED INDICATOR */ 00224000
GETREC   NI    SYNADSW,B'11111101'                                 0199 00225000
*   TRCCOUNT=TRCCOUNT+1;            /* UPDATE READ COUNT IN AMDPRCOM */ 00226000
         LA    @10,1                                               0200 00227000
         AL    @10,TRCCOUNT                                        0200 00228000
         ST    @10,TRCCOUNT                                        0200 00229000
*   RFY                                                            0201 00230000
*    (REG1) RSTD;                   /* REG 1 USED BY DATA MGT. LOCATE   00231000
*                                      MODE                    Y02014*/ 00232000
*   GEN(GET  (R8));                 /* GET LOGICAL TRACE RECORD      */ 00233000
*                                                                  0202 00234000
         GET  (R8)                                                      00235000
*   /*****************************************************************/ 00236000
*   /*                                                               */ 00237000
*   /* LOCATE MODE RETURNS RECORD ADDRESS IN REG 1 LOCATE MODE IS    */ 00238000
*   /* USED SO THAT LITTLE-LL CAN BE VERIFIED                        */ 00239000
*   /*                                                               */ 00240000
*   /*****************************************************************/ 00241000
*                                                                  0203 00242000
*   REG2=REG1->LLVAL;               /* PICK UP LITTLE-LL VALUE       */ 00243000
         LH    REG2,LLVAL(,REG1)                                   0203 00244000
*   IF REG2<4|                      /* LL MUST BE GREATER THAN 4 AND    00245000
*                                      LESS THAN MAXIMUM TRACE RECORD   00246000
*                                      SIZE                          */ 00247000
*       REG2>284 THEN                                              0204 00248000
*                                                                  0204 00249000
         C     REG2,@CF00065                                       0204 00250000
         BL    @RT00204                                            0204 00251000
         C     REG2,@CF01337                                       0204 00252000
         BNH   @RF00204                                            0204 00253000
@RT00204 DS    0H                                                  0205 00254000
*     /***************************************************************/ 00255000
*     /*                                                             */ 00256000
*     /* LL ERROR, PRINT MESSAGE ON PRINTER DATA SET AND TERMINATE   */ 00257000
*     /* EDIT FUNCTION                                               */ 00258000
*     /*                                                             */ 00259000
*     /***************************************************************/ 00260000
*                                                                  0205 00261000
*GBADLL:                                                           0205 00262000
*     DO;                                                          0205 00263000
GBADLL   DS    0H                                                  0206 00264000
*       GEN(BRWRITE  SKIP,IMM);     /* SKIP TO NEW PAGE M0866        */ 00265000
         BRWRITE  SKIP,IMM                                              00266000
*       LLERR(29:36)=DDNAME;        /* MOVE DDNAME TO MESSAGE        */ 00267000
         MVC   LLERR+28(8),DDNAME(AEDITCBR)                        0207 00268000
*       REG2=DCBBLKCT;              /* GET BAD BLOCK NUMBER FROM DCB */ 00269000
         L     REG2,DCBBLKCT                                       0208 00270000
*       GEN(CVD  REG2,WORK1);       /* CONVERT TO DEC IN COM WORK  0209 00271000
*                                      AREA                          */ 00272000
*                                                                  0209 00273000
         CVD  REG2,WORK1                                                00274000
*       /*************************************************************/ 00275000
*       /*                                                           */ 00276000
*       /* POINT TO FIELD IN MESSAGE TO RECEIVE BLOCK NUMBER         */ 00277000
*       /*                                                           */ 00278000
*       /*************************************************************/ 00279000
*                                                                  0210 00280000
*       REG2=ADDR(LLERR(48));                                      0210 00281000
         LA    REG2,LLERR+47                                       0210 00282000
*       GEN;                                                       0211 00283000
*                                                                  0211 00284000
         UNPK  0(6,REG2),WORK1(8)     CONVERT TO CHAR IN MESSAGE        00285000
         OI    5(REG2),X'F0'          FIXED SIGN DIGIT                  00286000
*       /*************************************************************/ 00287000
*       /*                                                           */ 00288000
*       /* SUPPRESS LEADING ZEROS IN BLOCK NUMBER                    */ 00289000
*       /*                                                           */ 00290000
*       /*************************************************************/ 00291000
*                                                                  0212 00292000
*       DO I=48 TO 53;                                             0212 00293000
*                                                                  0212 00294000
         LA    I,48                                                0212 00295000
@DL00212 DS    0H                                                  0213 00296000
*         /***********************************************************/ 00297000
*         /*                                                         */ 00298000
*         /* ONCE NOT ZERO, GET OUT                                  */ 00299000
*         /*                                                         */ 00300000
*         /***********************************************************/ 00301000
*                                                                  0213 00302000
*         IF LLERR(I)¬='0' THEN                                    0213 00303000
         LA    @10,LLERR-1(I)                                      0213 00304000
         CLI   0(@10),C'0'                                         0213 00305000
         BNE   @RT00213                                            0213 00306000
*           GO TO BADLLMSG;                                        0214 00307000
*                                                                  0214 00308000
*         /***********************************************************/ 00309000
*         /*                                                         */ 00310000
*         /* CHANGE LEADING ZERO TO BLANK                            */ 00311000
*         /*                                                         */ 00312000
*         /***********************************************************/ 00313000
*                                                                  0215 00314000
*         ELSE                                                     0215 00315000
*           LLERR(I)=' ';                                          0215 00316000
         LA    @10,LLERR-1(I)                                      0215 00317000
         MVI   0(@10),C' '                                         0215 00318000
*       END;                                                       0216 00319000
*                                                                  0216 00320000
         AL    I,@CF00076                                          0216 00321000
         C     I,@CF01251                                          0216 00322000
         BNH   @DL00212                                            0216 00323000
*       /*************************************************************/ 00324000
*       /*                                                           */ 00325000
*       /* MOVE MESSAGE TO CURRENT OUTPUT BUFFER                     */ 00326000
*       /*                                                           */ 00327000
*       /*************************************************************/ 00328000
*                                                                  0217 00329000
*BADLLMSG:                                                         0217 00330000
*       OUTBUF(1:53)=LLERR;                                        0217 00331000
BADLLMSG L     @10,CURBUF                                          0217 00332000
         MVC   OUTBUF(53,@10),LLERR                                0217 00333000
*       OUTBUF(55:82)=TERMSG;       /* IND. EDIT TERMINATING         */ 00334000
         MVC   OUTBUF+54(28,@10),TERMSG                            0218 00335000
*       GEN(BRWRITE  1);            /* WRITE BAD LL MESSAGE          */ 00336000
         BRWRITE  1                                                     00337000
*       CLOSE='1'B;                 /* REQUEST TERMINATION BY EOF  0220 00338000
*                                      HANDLER                       */ 00339000
         OI    CLOSE,B'00000100'                                   0220 00340000
*       GO TO EOFHANDL;             /* SHUT DOWN                     */ 00341000
         B     EOFHANDL                                            0221 00342000
*     END GBADLL;                                                  0222 00343000
*                                                                  0222 00344000
*   /*****************************************************************/ 00345000
*   /*                                                               */ 00346000
*   /* LL-FIELD IS OK, POINT CURREC AT RECORD                  Y02014*/ 00347000
*   /*                                                               */ 00348000
*   /*****************************************************************/ 00349000
*                                                                  0223 00350000
*   RECDLL=REG2;                    /* SAVE RECORD LENGTH      Y02014*/ 00351000
@RF00204 STCM  REG2,7,RECDLL(AEDITCBR)                             0223 00352000
*   CURREC=REG1;                    /* PT CURREC TO DM BUFF REC    0224 00353000
*                                                              Y02014*/ 00354000
         ST    REG1,CURREC(,AEDITCBR)                              0224 00355000
*   RFY                                                            0225 00356000
*    (REG1) UNRSTD;                 /*                         Y02014*/ 00357000
*   IF SYNADSW='0'B THEN            /* TEST FOR SYNAD ROUTINE HAVING    00358000
*                                      BEEN CALLED                   */ 00359000
         TM    SYNADSW,B'00000010'                                 0226 00360000
         BNZ   @RF00226                                            0226 00361000
*     EIOERCT=3;                    /* RESET ERROR COUNT IF NOT      */ 00362000
         MVC   EIOERCT(2),@CH00198                                 0227 00363000
*   IF DAWRAP='0'B THEN             /* TEST FOR PROCESSING WRAP DATA    00364000
*                                      SET                           */ 00365000
@RF00226 TM    DAWRAP,B'00100000'                                  0228 00366000
         BZ    @RT00228                                            0228 00367000
*     GO TO GETDONE;                /* IF NOT, GET REQUIREMENTS ARE     00368000
*                                      COMPLETE, GO RETURN TO      0229 00369000
*                                      AMDPRFRM                      */ 00370000
*   IF PSITWRAP='0'B THEN           /* TEST FOR WRAP POSITIONING   0230 00371000
*                                      REQUIRED                      */ 00372000
         TM    PSITWRAP,B'00010000'                                0230 00373000
         BZ    @RT00230                                            0230 00374000
*     GO TO POSIT;                  /* IF SO, BRANCH TO POSITIONING     00375000
*                                      ROUTINE                       */ 00376000
*                                                                  0231 00377000
*   /*****************************************************************/ 00378000
*   /*                                                               */ 00379000
*   /* TEST FOR TIME-STAMP RECORD                                    */ 00380000
*   /*                                                               */ 00381000
*   /*****************************************************************/ 00382000
*                                                                  0232 00383000
*   IF RECAID='00'X&                /* TIME-STAMP RECORD INDENTIFIED    00384000
*                                      BY AID '00'X AND              */ 00385000
*       RECFID='01'X THEN           /* FID '04'X                     */ 00386000
         L     @10,CURREC(,AEDITCBR)                               0232 00387000
         CLI   RECAID(@10),X'00'                                   0232 00388000
         BNE   @RF00232                                            0232 00389000
         CLI   RECFID(@10),X'01'                                   0232 00390000
         BNE   @RF00232                                            0232 00391000
*TESTTIME:                                                         0233 00392000
*     DO;                                                          0233 00393000
*                                                                  0233 00394000
TESTTIME DS    0H                                                  0234 00395000
*       /*************************************************************/ 00396000
*       /*                                                           */ 00397000
*       /* TEST VALUE OF TIME-STAMP TO DETERMINE IF LOGICAL END OF   */ 00398000
*       /* DATA SET HAS BEEN ENCOUNTERED. TIME VALUE WILL DECREASING */ 00399000
*       /* AT POINT AT WHICH WRAP STOPPED FIRST COMPARE DATES        */ 00400000
*       /*                                                           */ 00401000
*       /*************************************************************/ 00402000
*                                                                  0234 00403000
*       IF RECTOD<EIOTOD THEN                                      0234 00404000
*                                                                  0234 00405000
         L     @10,CURREC(,AEDITCBR)                               0234 00406000
         CLC   RECTOD(8,@10),EIOTOD                                0234 00407000
         BNL   @RF00234                                            0234 00408000
*         /***********************************************************/ 00409000
*         /*                                                         */ 00410000
*         /* LOGOICAL END-OF FILE HAS BEEN FOUND                     */ 00411000
*         /*                                                         */ 00412000
*         /***********************************************************/ 00413000
*                                                                  0235 00414000
*LOGEND:                                                           0235 00415000
*         DO;                                                      0235 00416000
LOGEND   DS    0H                                                  0236 00417000
*           CLOSE='1'B;             /* INDICATE DONE PROCESSING      */ 00418000
         OI    CLOSE,B'00000100'                                   0236 00419000
*           GO TO EOFHANDL;         /* GO TO EOF HANDLER TO CLOSE  0237 00420000
*                                      DOWN                          */ 00421000
         B     EOFHANDL                                            0237 00422000
*         END LOGEND;                                              0238 00423000
*                                                                  0238 00424000
*       /*************************************************************/ 00425000
*       /*                                                           */ 00426000
*       /* IF TIME DOES NOT DECREASE, SAVE TIME VALUE AND RETURN TO  */ 00427000
*       /* CALLER                                                    */ 00428000
*       /*                                                           */ 00429000
*       /*************************************************************/ 00430000
*                                                                  0239 00431000
*       ELSE                                                       0239 00432000
*SAVETME:                                                          0239 00433000
*         DO;                                                      0239 00434000
*                                                                  0239 00435000
@RF00234 DS    0H                                                  0239 00436000
SAVETME  DS    0H                                                  0240 00437000
*           /*********************************************************/ 00438000
*           /*                                                       */ 00439000
*           /* SAVE TIME FROM CURRENT RECORD                         */ 00440000
*           /*                                                       */ 00441000
*           /*********************************************************/ 00442000
*                                                                  0240 00443000
*           EIOTIME=RECTOD;                                        0240 00444000
*                                                                  0240 00445000
         L     @10,CURREC(,AEDITCBR)                               0240 00446000
         MVC   EIOTIME(8),RECTOD(@10)                              0240 00447000
*           /*********************************************************/ 00448000
*           /*                                                       */ 00449000
*           /* GO EXIT TO CALLER                                     */ 00450000
*           /*                                                       */ 00451000
*           /*********************************************************/ 00452000
*                                                                  0241 00453000
*           GO TO GETDONE;                                         0241 00454000
         B     GETDONE                                             0241 00455000
*         END SAVETME;                                             0242 00456000
*     END TESTTIME;                                                0243 00457000
*                                                                  0243 00458000
*   /*****************************************************************/ 00459000
*   /*                                                               */ 00460000
*   /* IF NOT TIME-STAMP RECORD RETURN TO CALLER                     */ 00461000
*   /*                                                               */ 00462000
*   /*****************************************************************/ 00463000
*                                                                  0244 00464000
*   ELSE                                                           0244 00465000
*     GO TO GETDONE;                /* GO EXIT TO CALLER             */ 00466000
*                                                                  0245 00467000
*/********************************************************************  00468000
*                                                                    */ 00469000
*/*                                                                  */ 00470000
*/*  POSITIONING SUBROUTINE.  THIS ROUTINE POSITIONS A GTF WRAP DATA */ 00471000
*/*  SET TO THE TIME STAMP RECORD WITH THE LOWEST TIME VALUE.        */ 00472000
*/*  THIS RECORD MARKS THE LOGICAL BEGINNING OF THE TRACE DATA.      */ 00473000
*/*                                                                  */ 00474000
*/********************************************************************  00475000
*                                                                    */ 00476000
*/* BRANCH HERE IF POSITIONING WRAP DATA SET IS IN PROCESS           */ 00477000
*                                                                  0245 00478000
*POSIT:                                                            0245 00479000
*   IF RECAID='00'X&                /* TEST FOR TIME-STAMP RECORD BY    00480000
*                                      AID OF '00'X AND              */ 00481000
*       RECFID='01'X THEN           /* FID OF '04'X                  */ 00482000
POSIT    L     @10,CURREC(,AEDITCBR)                               0245 00483000
         CLI   RECAID(@10),X'00'                                   0245 00484000
         BNE   @RF00245                                            0245 00485000
         CLI   RECFID(@10),X'01'                                   0245 00486000
         BNE   @RF00245                                            0245 00487000
*TIMEREC:                                                          0246 00488000
*     DO;                                                          0246 00489000
TIMEREC  DS    0H                                                  0247 00490000
*       IF FRSTWRAP='0'B THEN       /* TEST FOR FIRST TIME INTO    0247 00491000
*                                      POSITIONING ROUTINE           */ 00492000
         TM    FRSTWRAP,B'00001000'                                0247 00493000
         BNZ   @RF00247                                            0247 00494000
*         DO;                                                      0248 00495000
*                                                                  0248 00496000
*           /*********************************************************/ 00497000
*           /*                                                       */ 00498000
*           /* SAVE TIME FROM CURRENT RECORD                         */ 00499000
*           /*                                                       */ 00500000
*           /*********************************************************/ 00501000
*                                                                  0249 00502000
*           EIOTIME=RECTOD;                                        0249 00503000
         L     @10,CURREC(,AEDITCBR)                               0249 00504000
         MVC   EIOTIME(8),RECTOD(@10)                              0249 00505000
*           FRSTWRAP='1'B;          /* SET FIRST TIME POSIT. SWITCH  */ 00506000
         OI    FRSTWRAP,B'00001000'                                0250 00507000
*           GO TO GETREC;           /* GO SEARCH FOR NEXT TIME-STAMP    00508000
*                                      RECORD                        */ 00509000
         B     GETREC                                              0251 00510000
*         END;                      /* END FIRST-TIME POSITIONING  0252 00511000
*                                      PROCESSING                    */ 00512000
*                                                                  0252 00513000
*       /*************************************************************/ 00514000
*       /*                                                           */ 00515000
*       /* IF NOT FIRST TIME INTO POSITIONING ROUTINE, COMPARE NEW   */ 00516000
*       /* TIME VALUE TO SAVED TIME, LOOKING FOR POINT IN DATA SET   */ 00517000
*       /* WHERE TIME VALUES DECREASE                                */ 00518000
*       /*                                                           */ 00519000
*       /*************************************************************/ 00520000
*                                                                  0253 00521000
*       ELSE                                                       0253 00522000
*         DO;                                                      0253 00523000
@RF00247 DS    0H                                                  0254 00524000
*           IF RECTOD<EIOTOD THEN                                  0254 00525000
         L     @10,CURREC(,AEDITCBR)                               0254 00526000
         CLC   RECTOD(8,@10),EIOTOD                                0254 00527000
         BNL   @RF00254                                            0254 00528000
*DECFND:                                                           0255 00529000
*             DO;                   /* TIME DECREASES - LOGICAL    0255 00530000
*                                      BEGINNING HAS BEEN FOUND      */ 00531000
DECFND   DS    0H                                                  0256 00532000
*               PSITWRAP='1'B;      /* INDICATE POSITIONING COMPLETE */ 00533000
*                                                                  0256 00534000
         OI    PSITWRAP,B'00010000'                                0256 00535000
*               /*****************************************************/ 00536000
*               /*                                                   */ 00537000
*               /* SAVE TIME FROM CURRENT RECORD                     */ 00538000
*               /*                                                   */ 00539000
*               /*****************************************************/ 00540000
*                                                                  0257 00541000
*               EIOTIME=RECTOD;                                    0257 00542000
         L     @10,CURREC(,AEDITCBR)                               0257 00543000
         MVC   EIOTIME(8),RECTOD(@10)                              0257 00544000
*               GO TO GETDONE;      /* GO RETURN TO CALLER           */ 00545000
         B     GETDONE                                             0258 00546000
*             END DECFND;                                          0259 00547000
*                                                                  0259 00548000
*           /*********************************************************/ 00549000
*           /*                                                       */ 00550000
*           /* IF TIME DOES NOT DECREASE, SAVE NEW TIME AND CONTINUE */ 00551000
*           /* SCAN                                                  */ 00552000
*           /*                                                       */ 00553000
*           /*********************************************************/ 00554000
*                                                                  0260 00555000
*           ELSE                                                   0260 00556000
*             DO;                                                  0260 00557000
*                                                                  0260 00558000
@RF00254 DS    0H                                                  0261 00559000
*               /*****************************************************/ 00560000
*               /*                                                   */ 00561000
*               /* SAVE TIME FROM CURRENT RECORD                     */ 00562000
*               /*                                                   */ 00563000
*               /*****************************************************/ 00564000
*                                                                  0261 00565000
*               EIOTIME=RECTOD;                                    0261 00566000
         L     @10,CURREC(,AEDITCBR)                               0261 00567000
         MVC   EIOTIME(8),RECTOD(@10)                              0261 00568000
*               GO TO GETREC;       /* GO READ FOR NEXT TIME-STAMP 0262 00569000
*                                      RECORD                        */ 00570000
         B     GETREC                                              0262 00571000
*             END;                                                 0263 00572000
*         END;                                                     0264 00573000
*     END TIMEREC;                                                 0265 00574000
*   ELSE                                                           0266 00575000
*     GO TO GETREC;                 /* IF NOT TIME-STAMP RECORD LOOP    00576000
*                                      BACK TO GET NEXT RECORD       */ 00577000
*                                                                  0267 00578000
*/********************************************************************  00579000
*                                                                    */ 00580000
*/*                                                                  */ 00581000
*/*  DCB EXIT ROUTINE.  THE PURPOSE OF THIS ROUTINE IS TO            */ 00582000
*/*  SET THE DCBBLKSI AND THE DCBBUFNO AND TO OBTAIN THE             */ 00583000
*/*  INPUT BUFFER AREA.                                              */ 00584000
*/*                                                                  */ 00585000
*/********************************************************************  00586000
*                                                                    */ 00587000
*                                                                  0267 00588000
*DCBEXIT:                                                          0267 00589000
*   EIOR14SV=REG14;                 /* SAVE RETURN POINT ADDRESS     */ 00590000
DCBEXIT  ST    REG14,EIOR14SV                                      0267 00591000
*   DCBBLKSI=4096;                  /* 4K BUFFERS WANTED       Y02014*/ 00592000
         L     @10,@CF01192                                        0268 00593000
         STH   @10,DCBBLKSI                                        0268 00594000
*   DCBLRECL=4000;                  /*                       @YM04522*/ 00595000
         MVC   DCBLRECL(2),@CH01482                                0269 00596000
*   DCBBUFNO=3;                     /* 3 BUFFERS WANTED        Y02014*/ 00597000
         LA    @04,3                                               0270 00598000
         STC   @04,DCBBUFNO                                        0270 00599000
*   REG2=DCBBLKSI*DCBBUFNO;         /* COMPUTE AMOUNT OF STORAGE   0271 00600000
*                                      NEEDED FOR BUFFERS            */ 00601000
         LR    @01,@10                                             0271 00602000
         MR    @00,@04                                             0271 00603000
         LR    REG2,@01                                            0271 00604000
*   REG1=DCBBLKSI//4;               /* BLKSIZE MULTIPLE OF 4?      0272 00605000
*                                                            @ZA28699*/ 00606000
         LR    @00,@10                                             0272 00607000
         SRDA  @00,32                                              0272 00608000
         D     @00,@CF00065                                        0272 00609000
         LR    REG1,@00                                            0272 00610000
*   RFY                                                            0273 00611000
*    (REG1) RSTD;                   /* KEEP IT FROM COMPILER @ZA28699*/ 00612000
*   IF REG1¬=0 THEN                 /* IF NOT, ROUND UP FOR  @ZA28699*/ 00613000
         LTR   REG1,REG1                                           0274 00614000
         BZ    @RF00274                                            0274 00615000
*     REG2=REG2+((4-REG1)*DCBBUFNO);/* EACH BUFFER           @ZA28699*/ 00616000
         LA    @07,4                                               0275 00617000
         SLR   @07,REG1                                            0275 00618000
         MR    @06,@04                                             0275 00619000
         ALR   REG2,@07                                            0275 00620000
*   RFY                                                            0276 00621000
*    (REG1) UNRSTD;                 /* GIVE IT BACK TO CMPLR @ZA28699*/ 00622000
@RF00274 DS    0H                                                  0277 00623000
*   REG2=REG2+8;                    /* ACCOUNT FOR BUFFER CONTROL BLK*/ 00624000
         AL    REG2,@CF00039                                       0277 00625000
*   LNGTH1=REG2;                    /* LNGTH PARM FOR GETMAIN        */ 00626000
         ST    REG2,LNGTH1                                         0278 00627000
*   LNGTH2=REG2;                    /* LNGTH PARM FOR GETMAIN        */ 00628000
         ST    REG2,LNGTH2                                         0279 00629000
*   EIOSTOR=REG2|'01000000'X;       /* STORE TOTAL LENGTH IN CONTROL    00630000
*                                      TABLE                         */ 00631000
*                                                                  0280 00632000
         LR    @10,REG2                                            0280 00633000
         O     @10,@CF01483                                        0280 00634000
         ST    @10,EIOSTOR                                         0280 00635000
*   /*****************************************************************/ 00636000
*   /*                                                               */ 00637000
*   /* ISSUE CONDITONAL GETMAIN FOR BUFFERS                          */ 00638000
*   /*                                                               */ 00639000
*   /*****************************************************************/ 00640000
*                                                                  0281 00641000
*   RFY                                                            0281 00642000
*    (REG1,                                                        0281 00643000
*     REG0) RSTD;                   /*                         Y02014*/ 00644000
*   GEN(GETMAIN VC,LA=LNGTH,A=BUFADDR,SP=1);                       0282 00645000
         GETMAIN VC,LA=LNGTH,A=BUFADDR,SP=1                             00646000
*   IF REG15¬=0 THEN                                               0283 00647000
         LTR   REG15,REG15                                         0283 00648000
         BZ    @RF00283                                            0283 00649000
*     DO;                           /* TEST FOR INSUFFICIENT STORAGE */ 00650000
*       REG2=SYNMSGA+8;             /* POINT TO AMD225I ENTRY IN MSG    00651000
*                                      ARRAY                         */ 00652000
*                                                                  0285 00653000
         LA    REG2,8                                              0285 00654000
         AL    REG2,SYNMSGA                                        0285 00655000
*       /*************************************************************/ 00656000
*       /*                                                           */ 00657000
*       /* REQUEST THAT MESSAGE AMD165I NOT BE ISSUED                */ 00658000
*       /*                                                           */ 00659000
*       /*************************************************************/ 00660000
*                                                                  0286 00661000
*NOSPACEM:                                                         0286 00662000
*       GEN(OI  SWD,NOSTDMG);                                      0286 00663000
NOSPACEM OI  SWD,NOSTDMG                                                00664000
*       REG15=ASYNTAX;              /* POINT TO MESSAGE WRITER       */ 00665000
         L     REG15,ASYNTAX                                       0287 00666000
*       CALL SYNTAXC;               /* LINK TO MESSAGE WRITER - C  0288 00667000
*                                      INDICATES THIRD MESSAGE IN  0288 00668000
*                                      ARRAY                         */ 00669000
*                                                                  0288 00670000
         BAL   @14,SYNTAXC                                         0288 00671000
*       /*************************************************************/ 00672000
*       /*                                                           */ 00673000
*       /* SET UP BUFNO AND BLKSIZE TO AVOID 80A IN OPEN             */ 00674000
*       /*                                                           */ 00675000
*       /*************************************************************/ 00676000
*                                                                  0289 00677000
*       DCBBUFNO=1;                                                0289 00678000
         MVI   DCBBUFNO,X'01'                                      0289 00679000
*       DCBBLKSI=8;                                                0290 00680000
         MVC   DCBBLKSI(2),@CH00039                                0290 00681000
*       OPENFAIL='1'B;              /* SIGNAL OPEN FAILED            */ 00682000
         OI    OPENFAIL,B'01000000'                                0291 00683000
*       GO TO EXITDONE;             /* GO RETURN TO OPEN ROUTINES    */ 00684000
         B     EXITDONE                                            0292 00685000
*     END;                                                         0293 00686000
*                                                                  0293 00687000
*   /*****************************************************************/ 00688000
*   /*                                                               */ 00689000
*   /* BUILD PARMS FOR BUFFER BUILD                                  */ 00690000
*   /*                                                               */ 00691000
*   /*****************************************************************/ 00692000
*                                                                  0294 00693000
*   WORK1(1)='00'X;                 /* CLEAR HIGH ORDER BYTE         */ 00694000
@RF00283 MVI   WORK1,X'00'                                         0294 00695000
*   WORK1(2)=DCBBUFNO;              /* NUMBER OF BUFFERS             */ 00696000
         IC    @10,DCBBUFNO                                        0295 00697000
         STC   @10,WORK1+1                                         0295 00698000
*   WORK1(3:4)=DCBBLKSI;            /* SIZE OF EACH BUFFER           */ 00699000
         MVC   WORK1+2(2),DCBBLKSI                                 0296 00700000
*   REG0=WORK1(1:4);                /* LOAD PARAMETER REG            */ 00701000
         ICM   REG0,15,WORK1                                       0297 00702000
*   REG1=BUFFER;                    /* REG1 CONTAINS ADDR BUFF Y02014*/ 00703000
         L     REG1,BUFFER                                         0298 00704000
*   DCBBUFCB=REG1;                  /* SET BUFFER CONTROL BLOCK ADDR    00705000
*                                      IN DCB                        */ 00706000
         ST    REG1,DCBBUFCB                                       0299 00707000
*   DCBBUFNO=WORK1(2);              /* RESTORE BUFFER COUNT          */ 00708000
         IC    @10,WORK1+1                                         0300 00709000
         STC   @10,DCBBUFNO                                        0300 00710000
*   GEN(BUILD  (1),(0));            /* BUILD BUFFER AREA             */ 00711000
         BUILD  (1),(0)                                                 00712000
*/* BRANCH HERE TO COMPLETE DCB EXIT PROCESSING                      */ 00713000
*                                                                  0302 00714000
*EXITDONE:                                                         0302 00715000
*   REG14=EIOR14SV;                 /* RESTORE REG 14 VALUE          */ 00716000
EXITDONE L     REG14,EIOR14SV                                      0302 00717000
*   GEN(BR  R14);                   /* RETURN TO OPEN - EXIT COMPLETE*/ 00718000
         BR  R14                                                        00719000
*   RFY                                                            0304 00720000
*    (REG0,                                                        0304 00721000
*     REG1) UNRSTD;                                                0304 00722000
*                                                                  0305 00723000
*/********************************************************************  00724000
*                                                                    */ 00725000
*/*                                                                  */ 00726000
*/*  SYNAD ROUTINE.  THIS ROUTINE ISSUES SYNADAF AND PRINTS THE ERROR*/ 00727000
*/*  ANALYSIS BUFFER.  THE CONSECUTIVE ERROR COUNT IS DECREMENTED.   */ 00728000
*/*  IF THIS BECOMES 0, EDIT EXECUTION IS TERMINATED.                */ 00729000
*/*                                                                  */ 00730000
*/********************************************************************  00731000
*                                                                    */ 00732000
*                                                                  0305 00733000
*SYNAD:                                                            0305 00734000
*   EIOR14SV=REG14;                 /* SAVE RETURN ADDRESS           */ 00735000
SYNAD    ST    REG14,EIOR14SV                                      0305 00736000
*   GEN(SYNADAF  ACSMETH=QSAM);     /* GET ERROR DESCRIPTION         */ 00737000
         SYNADAF  ACSMETH=QSAM                                          00738000
*   RFY                                                            0307 00739000
*    (REG1) RSTD;                   /* REG 1 REST IN EXIT RTN  Y02014*/ 00740000
*   REG2=REG1;                      /* SAVE ADDRESS OF MESSAGE BUFFER*/ 00741000
         LR    REG2,REG1                                           0308 00742000
*   SYNADSW='1'B;                   /* INDICATE SYNAD ROUTINE ENTERED   00743000
*                                      SO MAINLINE WILL NOT RESET  0309 00744000
*                                      ERROR COUNT                   */ 00745000
         OI    SYNADSW,B'00000010'                                 0309 00746000
*   EIOERCT=EIOERCT-1;              /* DECREMENT ERROR COUNT         */ 00747000
*                                                                  0310 00748000
         LH    @10,EIOERCT                                         0310 00749000
         BCTR  @10,0                                               0310 00750000
         STH   @10,EIOERCT                                         0310 00751000
*   /*****************************************************************/ 00752000
*   /*                                                               */ 00753000
*   /* CONSTRUCT I/O ERROR MESSAGE AND INDICATE ACTION               */ 00754000
*   /*                                                               */ 00755000
*   /*****************************************************************/ 00756000
*                                                                  0311 00757000
*   IF EIOERCT=2 THEN               /* IF APPARENT FIRST ERROR,      */ 00758000
         C     @10,@CF00109                                        0311 00759000
         BNE   @RF00311                                            0311 00760000
*     GEN(BRWRITE  SKIP,IMM);       /* SKIP TO NEW PAGE              */ 00761000
         BRWRITE  SKIP,IMM                                              00762000
*   OUTBUF(1:12)=ERMSG;             /* MOVE I/O ERROR MESSAGE TO   0313 00763000
*                                      OUTPUT BUFFER                 */ 00764000
@RF00311 L     @10,CURBUF                                          0313 00765000
         MVC   OUTBUF(12,@10),ERMSG                                0313 00766000
*   OUTBUF(14:21)=DDNAME;           /* MOVE DD NAME TO BUFFER        */ 00767000
         MVC   OUTBUF+13(8,@10),DDNAME(AEDITCBR)                   0314 00768000
*   IF EIOERCT=0 THEN               /* TEST ERROR COUNT FOR ZERO     */ 00769000
         LH    @04,EIOERCT                                         0315 00770000
         LTR   @04,@04                                             0315 00771000
         BNZ   @RF00315                                            0315 00772000
*     OUTBUF(23:50)=TERMSG;         /* IF ZERO, MOVE TERMINATION   0316 00773000
*                                      MESSAGE TO OUTPUT BUFFER      */ 00774000
         MVC   OUTBUF+22(28,@10),TERMSG                            0316 00775000
*   ELSE                                                           0317 00776000
*     OUTBUF(23:34)=CONMSG;         /* IF ERROR COUNT NOT YET ZERO,     00777000
*                                      MOVE CONTINUING MESSAGE TO  0317 00778000
*                                      OUTPUT BUFFER                 */ 00779000
         B     @RC00315                                            0317 00780000
@RF00315 L     @10,CURBUF                                          0317 00781000
         MVC   OUTBUF+22(12,@10),CONMSG                            0317 00782000
*   RFY                                                            0318 00783000
*    (REG1) UNRSTD;                 /*                         Y02014*/ 00784000
@RC00315 DS    0H                                                  0319 00785000
*   GEN(BRWRITE  1);                /* PRINT MESSAGE ON PRINTER DATA    00786000
*                                      SET                           */ 00787000
         BRWRITE  1                                                     00788000
*   OUTBUF=SYNADBUF;                /* MOVE SYNADAF MESSAGE TO OUTPUT   00789000
*                                      AREA - SYNADBUF BASED ON REG 2*/ 00790000
         L     @10,CURBUF                                          0320 00791000
         MVI   OUTBUF+77(@10),C' '                                 0320 00792000
         MVC   OUTBUF+78(54,@10),OUTBUF+77(@10)                    0320 00793000
         MVC   OUTBUF(77,@10),SYNADBUF(REG2)                       0320 00794000
*   GEN;                                                           0321 00795000
    BRWRITE  2                 /*  WRITE SYNADAF MSG ON PRINTER DATA */ 00796000
*                             /*  SET - SPACE A LINE AFTER PRINTING */  00797000
    SYNADRLS                       RELEASE SYNADAF BUFFER               00798000
*   IF EIOERCT=0 THEN               /* IF ERROR COUNT IS ZERO,       */ 00799000
         LH    @10,EIOERCT                                         0322 00800000
         LTR   @10,@10                                             0322 00801000
         BNZ   @RF00322                                            0322 00802000
*TERMER:                                                           0323 00803000
*     DO;                           /* SET UP TO TERMINATE EDIT      */ 00804000
TERMER   DS    0H                                                  0324 00805000
*       CLOSE='1'B;                 /* REQUEST CLOSE DOWN            */ 00806000
         OI    CLOSE,B'00000100'                                   0324 00807000
*       GO TO EOFHANDL;             /* GO TO EOF HANDLER TO CLOSE  0325 00808000
*                                      TRACE DATA SET                */ 00809000
         B     EOFHANDL                                            0325 00810000
*     END TERMER;                                                  0326 00811000
*                                                                  0326 00812000
*   /*****************************************************************/ 00813000
*   /*                                                               */ 00814000
*   /* IF ERROR COUNT IS NOT ZERO, IGNORE BAD BLOCK BY RETURNING TO  */ 00815000
*   /* SYSTEM                                                        */ 00816000
*   /*                                                               */ 00817000
*   /*****************************************************************/ 00818000
*                                                                  0327 00819000
*   REG14=EIOR14SV;                 /* RESTORE REG 14                */ 00820000
@RF00322 L     REG14,EIOR14SV                                      0327 00821000
*   GEN(BR  R14);                   /* RETURN TO SYSTEM              */ 00822000
         BR  R14                                                        00823000
*                                                                  0329 00824000
*/********************************************************************  00825000
*                                                                    */ 00826000
*/*                                                                  */ 00827000
*/*  EOF HANDLER.  THE FUNCTION OF THIS ROUTINE IS TO CLOSE THE      */ 00828000
*/*  TRACE DATA SET AND, IF THE EDIT FUNCTION IS TERMINATING,        */ 00829000
*/*  TO FREE INPUT BUFFERS AND WORKING STORAGE.                      */ 00830000
*/*  IF A D/A WRAP DATA SET IS BEING PROCESSED AND THE LOGICAL END OF*/ 00831000
*/*  FILE HAS NOT BEEN REACHED, THE DATA SET IS RE-OPENED TO POSITION*/ 00832000
*/*  TO THE BEGINNING OF THE DATA SET.  THIS ROUTINE IS ALSO USED TO */ 00833000
*/*  FREE WORKING STORAGE WHEN TRACE DATA IS BEING EDITED FROM A DUMP*/ 00834000
*/*  DATA SET.                                                       */ 00835000
*/*                                                                  */ 00836000
*/********************************************************************  00837000
*                                                                    */ 00838000
*                                                                  0329 00839000
*EOFHANDL:                                                         0329 00840000
*   GEN(CLOSE  ((R8)));             /* ISSUE CLOSE SVC               */ 00841000
EOFHANDL CLOSE  ((R8))                                                  00842000
*   IF EXTTRC='1'B THEN             /* PROCESSING EXTERNAL     Y02014*/ 00843000
         TM    EXTTRC(AEDITCBR),B'00000100'                        0330 00844000
         BNO   @RF00330                                            0330 00845000
*     DO;                                                          0331 00846000
*       IF((DAWRAP='1'B&FRSTWRAP='0'B)|/* TIME STAMP FOUND     Y02014*/ 00847000
*           (DAWRAP='0'B&TSFOUND='0'B))&TRCCOUNT¬=0&/* WAS A RECORD     00848000
*                                      READ                    Y02014*/ 00849000
*           CLOSE='0'B&             /* CLOSE DOWN NOT REQUESTED    0332 00850000
*                                                              Y02014*/ 00851000
*           TERM='0'B THEN          /* TERM NOT REQUESTED      Y02014*/ 00852000
         TM    DAWRAP,B'00100000'                                  0332 00853000
         BNO   @GL00007                                            0332 00854000
         TM    FRSTWRAP,B'00001000'                                0332 00855000
         BZ    @GL00006                                            0332 00856000
@GL00007 TM    DAWRAP,B'00100000'                                  0332 00857000
         BNZ   @RF00332                                            0332 00858000
         TM    TSFOUND(AEDITCBR),B'00100000'                       0332 00859000
         BNZ   @RF00332                                            0332 00860000
@GL00006 L     @10,TRCCOUNT                                        0332 00861000
         LTR   @10,@10                                             0332 00862000
         BZ    @RF00332                                            0332 00863000
         TM    CLOSE,B'00000100'                                   0332 00864000
         BNZ   @RF00332                                            0332 00865000
         TM    TERM(AEDITCBR),B'01000000'                          0332 00866000
         BNZ   @RF00332                                            0332 00867000
*         DO;                                                      0333 00868000
*           SYNMSGA=ADDR(AMDPRE11); /* PT TO NON VS2 ERROR MSG Y02014*/ 00869000
         L     @10,AFMG(,AEDITCBR)                                 0334 00870000
         LA    @10,AMDPRE11(,@10)                                  0334 00871000
         ST    @10,SYNMSGA                                         0334 00872000
*           GEN(OI SWD,NOSTDMG);    /* NO PRDMP MSG WANTED     Y02014*/ 00873000
         OI SWD,NOSTDMG                                                 00874000
*           REG15=ASYNTAX;          /* POINT TO MSG WRITER     Y02014*/ 00875000
         L     REG15,ASYNTAX                                       0336 00876000
*           CALL SYNTAXA;           /* CALL MESSAGE WRITER     Y02014*/ 00877000
         BAL   @14,SYNTAXA                                         0337 00878000
*           GO TO GETFREE;          /* GO CLEAN UP GET         Y02014*/ 00879000
         B     GETFREE                                             0338 00880000
*         END;                                                     0339 00881000
*     END;                                                         0340 00882000
*                                                                  0340 00883000
@RF00332 DS    0H                                                  0341 00884000
*   /*****************************************************************/ 00885000
*   /*                                                               */ 00886000
*   /* TEST FOR WRAP DATA SET, IN WHICH CASE RE-POSITIONING MAY BE   */ 00887000
*   /* REQUIRED.                                                     */ 00888000
*   /*                                                               */ 00889000
*   /*****************************************************************/ 00890000
*                                                                  0341 00891000
*   IF DAWRAP='1'B THEN             /* TEST WRAP INDICATOR IN CONTROL   00892000
*                                      TABLE                         */ 00893000
@RF00330 TM    DAWRAP,B'00100000'                                  0341 00894000
         BNO   @RF00341                                            0341 00895000
*REPOS:                                                            0342 00896000
*     DO;                           /* IF PROCESSING WRAP DATA SET,     00897000
*                                      MAY REQUIRE RE-POSITIONING    */ 00898000
REPOS    DS    0H                                                  0343 00899000
*       IF CLOSE='1'B THEN          /* IF CLOSE DOWN IS REQUESTED ON    00900000
*                                      ANY EOF, GO BACK TO GET     0343 00901000
*                                      TERMINATION CODE. THIS CAN  0343 00902000
*                                      HAPPEN IF LOGICAL END HAS BEEN   00903000
*                                      FOUND                         */ 00904000
         TM    CLOSE,B'00000100'                                   0343 00905000
         BO    @RT00343                                            0343 00906000
*         GO TO GETFINAL;                                          0344 00907000
*       IF PSITWRAP='0'B THEN       /* IF EOF HAS BEEN ENCOUNTERED,     00908000
*                                      DURING WRAP POSITIONING THEN     00909000
*                                      ACTUAL WRAP DID NOT OCCUR     */ 00910000
         TM    PSITWRAP,B'00010000'                                0345 00911000
         BNZ   @RF00345                                            0345 00912000
*         DAWRAP='0'B;              /* PROCESS WITHOUT WRAP          */ 00913000
         NI    DAWRAP,B'11011111'                                  0346 00914000
*       GEN(OPEN  ((R8),INPUT));    /* RE-OPEN TO POSITION TO      0347 00915000
*                                      BEGINNING OF DATA SET         */ 00916000
@RF00345 DS    0H                                                  0347 00917000
         OPEN  ((R8),INPUT)                                             00918000
*       GO TO GETREC;               /* GO CONTINUE PROCESSING        */ 00919000
         B     GETREC                                              0348 00920000
*     END REPOS;                                                   0349 00921000
*                                                                  0349 00922000
*/* BRANCH HERE TO SET GET EOF AND FREE GET STORAGE                  */ 00923000
*                                                                  0350 00924000
*GETFINAL:                                                         0350 00925000
*   IF TERM='0'B THEN               /* IF TERM BIT SET BY PRGET ONLY,*/ 00926000
@RF00341 DS    0H                                                  0350 00927000
GETFINAL TM    TERM(AEDITCBR),B'01000000'                          0350 00928000
         BNZ   @RF00350                                            0350 00929000
*     GETEOF='1'B;                  /* THEN SIGNAL EOF               */ 00930000
         OI    GETEOF(AEDITCBR),B'10000000'                        0351 00931000
*/* BRANCH HERE TO JUST FREE - THIS IS USED IF ERROR OCCURS        0352 00932000
*   PROCESSING TRACE BUFFERS IN DUMP                                 */ 00933000
*                                                                  0352 00934000
*GETFREE:                           /*                       @AZ30042*/ 00935000
*   TRCCOUNT=TRCCOUNT-1;            /* EOF MEANS NO TRC REC  @AZ30042*/ 00936000
@RF00350 DS    0H                                                  0352 00937000
GETFREE  L     @10,TRCCOUNT                                        0352 00938000
         BCTR  @10,0                                               0352 00939000
         ST    @10,TRCCOUNT                                        0352 00940000
*   RFY                                                            0353 00941000
*    (REG1,                                                        0353 00942000
*     REG0) RSTD;                   /*                       @ZA30042*/ 00943000
*   REG0=EIOSTOR;                   /* REG0 CONTAINS LENGTH, SBP00L  */ 00944000
         L     REG0,EIOSTOR                                        0354 00945000
*   REG1=BUFFER;                    /* RECORD ADDRESS IN REG 1       */ 00946000
         L     REG1,BUFFER                                         0355 00947000
*   GEN(FREEMAIN R,LV=(0),A=(1));   /* RELEASE BUFFER AREA           */ 00948000
         FREEMAIN R,LV=(0),A=(1)                                        00949000
*UNSPIE:                                                           0357 00950000
*   IF EXTTRC='0'B THEN             /* TEST FOR EXT DATA SET,  Y02014*/ 00951000
UNSPIE   TM    EXTTRC(AEDITCBR),B'00000100'                        0357 00952000
         BNZ   @RF00357                                            0357 00953000
*     ERRADDR=EIOERR;               /* IF PROCESSING DUMP DATA SET,     00954000
*                                      MUST RESTORE CALLER-S ERROR 0358 00955000
*                                      ROUTINE ADDRESS.              */ 00956000
         L     @10,EIOERR                                          0358 00957000
         ST    @10,ERRADDR                                         0358 00958000
*   RFY                                                            0359 00959000
*    (REG1,                                                        0359 00960000
*     REG0) UNRSTD;                 /*                         Y02014*/ 00961000
@RF00357 DS    0H                                                  0360 00962000
*   EIOFLGS='00000000'X;            /* RESET ALL SWITCHES            */ 00963000
         MVC   EIOFLGS(4),@CB01261                                 0360 00964000
*   IF EOF='1'B&                    /* USER WANTS EOF EXIT     Y02014*/ 00965000
*       USEREXIT¬='        ' THEN   /* EXIT EXISTS             Y02014*/ 00966000
         TM    EOF(AEDITCBR),B'00000001'                           0361 00967000
         BNO   @RF00361                                            0361 00968000
         CLC   USEREXIT(8,AEDITCBR),@CC01502                       0361 00969000
         BE    @RF00361                                            0361 00970000
*     DO;                           /* YES                     Y02014*/ 00971000
*       EOFINPRO='1'B;              /* EOF IN PROCESS BIT      Y02014*/ 00972000
         OI    EOFINPRO(AEDITCBR),B'01000000'                      0363 00973000
*       CALL PREXT;                 /* GO INTERFACE WITH USER  Y02014*/ 00974000
         L     @10,AFRMAD(,AEDITCBR)                               0364 00975000
         L     @15,AEXT(,@10)                                      0364 00976000
         BALR  @14,@15                                             0364 00977000
*     END;                          /*                         Y02014*/ 00978000
*   GO TO GETTERM;                  /* GO INDICATE TERMINATION OF  0366 00979000
*                                      EDIT REQUIRED                 */ 00980000
         B     GETTERM                                             0366 00981000
*   RFY                                                            0367 00982000
*    (REG8) UNRSTD;                 /*                         Y02014*/ 00983000
*   GEN;                                                           0368 00984000
GTFDCB    DCB  DSORG=PS,            SEQUENTIAL ORGANIZATION            X00985000
               EODAD=EOFHANDL,                                         X00986000
               EROPT=SKP,           SKIP ERROR RECORDS                 X00987000
               MACRF=(GL),          GET - LOCATE MODE                  X00988000
               RECFM=VB,            VARIABLE BLOCKED RECORDS           X00989000
               DDNAME=XXXXXXXX,     DDNAME TO BE FILLED IN BY GET INIT X00990000
               SYNAD=SYNAD                                              00991000
*                                                                  0369 00992000
*/********************************************************************  00993000
*                                                                    */ 00994000
*/*                                                                  */ 00995000
*/*  DUMP PROCESSING INITIALIZATION.  THE CVT IN THE DUMP SYSTEM IS  */ 00996000
*/*  TESTED TO INSURE THAT GTF WAS ACTIVE AT THE TIME OF THE DUMP    */ 00997000
*/*  GTF BUFFERS ARE LOCATED BY THE FOLLOWING SCHEME.                */ 00998000
*/*                                                                  */ 00999000
*/*    CVT-->MCHEAD-->MCCE-->GTF'S MCQE-->GTFPCT-->BUFFERS           */ 01000000
*/*  IF PROCESSING A S/A DUMP                                        */ 01001000
*/*    CVT-->MCHEAD-->MCCE-->GTF'S MCQE--GTFPCT-->SLE-->BUFFERS      */ 01002000
*/*                                         |---->BLOKING AREA       */ 01003000
*/*                                                                  */ 01004000
*/*  EDITING BEGINS WITH OLDEST BUFFER.                              */ 01005000
*/*  IN THE CASE OF A S/A DUMP THE BLOKING AREAS WILL BE             */ 01006000
*/*  FORMATTED LAST.                                                 */ 01007000
*/*                                                                  */ 01008000
*/********************************************************************  01009000
*                                                                    */ 01010000
*/* BRANCH HERE IF TRACE DATA TO BE EDITED FROM DUMP                 */ 01011000
*                                                                  0369 01012000
*DUMPTRC:                           /* DUMP PROCESSING         Y02014*/ 01013000
*   IF BLOKPROC='1'B THEN           /* S/A DUMP PROCESSING REQ Y02014*/ 01014000
DUMPTRC  TM    BLOKPROC,B'10000000'                                0369 01015000
         BO    @RT00369                                            0369 01016000
*     GO TO DEBLKSA;                /* GO DEBLOCK GTFBLOKS     Y02014*/ 01017000
*   IF FIRSTGET='1'B THEN           /* HAS SET UP BEEN DONE    Y02014*/ 01018000
         TM    FIRSTGET,B'10000000'                                0371 01019000
         BO    @RT00371                                            0371 01020000
*     GO TO DEBLOCK;                /* GO DEBLOCK BUFFERS      Y02014*/ 01021000
*   AEIOCT=ADDR(EIOCTL);            /* PT PRTAB TO I/O TABLE   Y02014*/ 01022000
         LA    @10,EIOCTL                                          0373 01023000
         ST    @10,AEIOCT(,AEDITCBR)                               0373 01024000
*   SYNMSGA=ADDR(AMDPRE01);         /* PT TO ERROR MSG ARRAY   Y02014*/ 01025000
         L     @10,AFMG(,AEDITCBR)                                 0374 01026000
         ST    @10,SYNMSGA                                         0374 01027000
*   RFY                                                            0375 01028000
*    (REG1,                                                        0375 01029000
*     REG2) RSTD;                   /*                         Y02014*/ 01030000
*   REG2=572;                       /* SIZE OF BUILD AREA      Y02014*/ 01031000
         LA    REG2,572                                            0376 01032000
*   GEN(GETMAIN R,LV=(R2));         /* GET TRACE BUILD AREA    Y02014*/ 01033000
         GETMAIN R,LV=(R2)                                              01034000
*   BLDAREA=REG1;                   /* STORE ADDR              Y02014*/ 01035000
         ST    REG1,BLDAREA                                        0378 01036000
*   EIOSTOR=REG2;                   /* STORE LENGTH IN TABLE   Y02014*/ 01037000
         ST    REG2,EIOSTOR                                        0379 01038000
*   EIOERR=ERRADDR;                 /* SAVE CALLER'S ERROR RTN Y02014*/ 01039000
         L     @10,ERRADDR                                         0380 01040000
         ST    @10,EIOERR                                          0380 01041000
*   ERRADDR=ADDR(DUMPER);           /* ESTAB GET'S ERROR RTN   Y02014*/ 01042000
         LA    @10,DUMPER                                          0381 01043000
         ST    @10,ERRADDR                                         0381 01044000
*   FIRSTGET='1'B;                  /* INDICATE INIT COMPLETE  Y02014*/ 01045000
         OI    FIRSTGET,B'10000000'                                0382 01046000
*   REG2=CVTADDR+DISP1;             /* GET ADDR OF GTF CVT WD  Y02014*/ 01047000
         L     REG2,CVTADDR                                        0383 01048000
         AL    REG2,DISP1                                          0383 01049000
*   GEN(BRREAD (R2),DATA,ASID=AID); /* READ FOR GTF CVT WD     Y02014*/ 01050000
         BRREAD (R2),DATA,ASID=AID                                      01051000
*   IF CVTGTFAT¬='1'B THEN          /* GTF ACTIVE AT TIME      Y02014*/ 01052000
         TM    CVTGTFAT(REG1),B'10000000'                          0385 01053000
         BO    @RF00385                                            0385 01054000
*     DO;                           /* OF DUMP                 Y02014*/ 01055000
*       REG2=ADDR(NOTACMSG);        /* PT TO NOT ACTIVE MSG    Y02014*/ 01056000
         LA    REG2,NOTACMSG                                       0387 01057000
*       I=30;                       /* SET LENGTH OF MESSAGE   Y02014*/ 01058000
         LA    I,30                                                0388 01059000
*       GO TO WRITERR;              /* GO WRITE MESSAGE        Y02014*/ 01060000
         B     WRITERR                                             0389 01061000
*     END;                          /*                         Y02014*/ 01062000
*                                                                  0390 01063000
*   /*****************************************************************/ 01064000
*   /*                                                               */ 01065000
*   /* THE MCHEAD IS THE NEXT STEP IN THE BUFFER LOCATING SCHEME     */ 01066000
*   /*                                                         Y02014*/ 01067000
*   /*                                                               */ 01068000
*   /*****************************************************************/ 01069000
*                                                                  0391 01070000
*   ADDRSAVE=P;                     /* SAVE ADDR OF MCHEAD     Y02014*/ 01071000
@RF00385 L     @10,P(,REG1)                                        0391 01072000
         ST    @10,ADDRSAVE                                        0391 01073000
*   IDVALID='MCHEAD';               /* COMPARE ELEMENT SAVED   Y02014*/ 01074000
         MVI   IDVALID+6,C' '                                      0392 01075000
         MVI   IDVALID+7,C' '                                      0392 01076000
         MVC   IDVALID(6),@CC01507                                 0392 01077000
*   CALL IDCHECK;                   /* CHECK FOR VALID ID      Y02014*/ 01078000
         BAL   @14,IDCHECK                                         0393 01079000
*/* NEXT STEP IS THE MCCE                                      Y02014*/ 01080000
*                                                                  0394 01081000
*   REG2=ADDRSAVE+DISP2;            /* ADD OFFSET TO MCCE ADDR Y02014*/ 01082000
         L     REG2,ADDRSAVE                                       0394 01083000
         AL    REG2,DISP2                                          0394 01084000
*   GEN(BRREAD (R2),DATA,ASID=AID); /* READ FOR MCCE ADDR      Y02014*/ 01085000
         BRREAD (R2),DATA,ASID=AID                                      01086000
*   ADDRSAVE=P;                     /* SAVE ADDR OF MCCE       Y02014*/ 01087000
         L     @10,P(,REG1)                                        0396 01088000
         ST    @10,ADDRSAVE                                        0396 01089000
*   IDVALID='MCCE';                 /* COMPARE ELEMENT SAVED   Y02014*/ 01090000
         MVI   IDVALID+4,C' '                                      0397 01091000
         MVC   IDVALID+5(3),IDVALID+4                              0397 01092000
         MVC   IDVALID(4),@CC01509                                 0397 01093000
*   CALL IDCHECK;                   /* CHECK FOR VALID ID      Y02014*/ 01094000
*                                                                  0398 01095000
         BAL   @14,IDCHECK                                         0398 01096000
*   /*****************************************************************/ 01097000
*   /*                                                               */ 01098000
*   /* NEXT STEP IS LOCATING GTF'S MCQE                        Y02014*/ 01099000
*   /*                                                               */ 01100000
*   /*****************************************************************/ 01101000
*                                                                  0399 01102000
*   REG2=ADDRSAVE+DISP3;            /* ADD OFFSET TO MCQE ADDR Y02014*/ 01103000
         L     REG2,ADDRSAVE                                       0399 01104000
         AL    REG2,DISP3                                          0399 01105000
*   GEN(BRREAD (R2),DATA,ASID=AID); /* READ FOR MCQE POINTER   Y02014*/ 01106000
         BRREAD (R2),DATA,ASID=AID                                      01107000
*   ADDRSAVE=P;                     /* SAVE ADDR OF 1ST MCQE   Y02014*/ 01108000
         L     @10,P(,REG1)                                        0401 01109000
         ST    @10,ADDRSAVE                                        0401 01110000
*   IDVALID='MCQE';                 /* SAVE COMPARE ELEMENT    Y02014*/ 01111000
         MVI   IDVALID+4,C' '                                      0402 01112000
         MVC   IDVALID+5(3),IDVALID+4                              0402 01113000
         MVC   IDVALID(4),@CC01510                                 0402 01114000
*MCQESRCH:                          /*                         Y02014*/ 01115000
*   IF ADDRSAVE=0 THEN              /* IS THERE A CHAIN PTR    Y02014*/ 01116000
MCQESRCH L     @10,ADDRSAVE                                        0403 01117000
         LTR   @10,@10                                             0403 01118000
         BZ    @RT00403                                            0403 01119000
*     GO TO CHAINERR;               /* GO PUT OUT ERROR MSG    Y02014*/ 01120000
*   CALL IDCHECK;                   /* CHECK FOR VALID ID      Y02014*/ 01121000
         BAL   @14,IDCHECK                                         0405 01122000
*   REG2=ADDRSAVE+DISP4;            /* ADD OFFSET TO APP NAME  Y02014*/ 01123000
         L     REG2,ADDRSAVE                                       0406 01124000
         AL    REG2,DISP4                                          0406 01125000
*   GEN(BRREAD (R2),DATA,ASID=AID); /* READ FOR APP ID         Y02014*/ 01126000
         BRREAD (R2),DATA,ASID=AID                                      01127000
*   IDHOLD1=TABLEID;                /* SAVE APP ID             Y02014*/ 01128000
         MVC   IDHOLD1(4),TABLEID(REG1)                            0408 01129000
*   IF IDHOLD1¬='GTF ' THEN         /* IS THIS GTF'S MCQE      Y02014*/ 01130000
         CLC   IDHOLD1(4),@CC01514                                 0409 01131000
         BE    @RF00409                                            0409 01132000
*     DO;                           /* NO                      Y02014*/ 01133000
*       REG2=ADDRSAVE+DISP5;        /* ADD OFFSET TO MCQE PTR  Y02014*/ 01134000
         L     REG2,ADDRSAVE                                       0411 01135000
         AL    REG2,DISP5                                          0411 01136000
*       GEN(BRREAD (R2),DATA,ASID=AID);/* READ FOR MCQE ADDR   Y02014*/ 01137000
         BRREAD (R2),DATA,ASID=AID                                      01138000
*       ADDRSAVE=P;                 /* SAVE ADDR OF MCQE       Y02014*/ 01139000
         L     @10,P(,REG1)                                        0413 01140000
         ST    @10,ADDRSAVE                                        0413 01141000
*       GO TO MCQESRCH;             /* GO SEARCH FOR GTF'S     Y02014*/ 01142000
         B     MCQESRCH                                            0414 01143000
*     END;                          /*                         Y02014*/ 01144000
*                                                                  0415 01145000
*   /*****************************************************************/ 01146000
*   /*                                                               */ 01147000
*   /* NEXT STEP IS THE GTFPCT                                 Y02014*/ 01148000
*   /*                                                               */ 01149000
*   /*****************************************************************/ 01150000
*                                                                  0416 01151000
*   REG2=ADDRSAVE+DISP6;            /* ADD OFFSET TO PCT PTR   Y02014*/ 01152000
@RF00409 L     REG2,ADDRSAVE                                       0416 01153000
         AL    REG2,DISP6                                          0416 01154000
*   GEN(BRREAD (R2),DATA,ASID=AID); /* READ FOR PCT ADDR       Y02014*/ 01155000
         BRREAD (R2),DATA,ASID=AID                                      01156000
*   ADDRSAVE=P;                     /* SAVE ADDRESS OF GTFPCT  Y02014*/ 01157000
         L     @10,P(,REG1)                                        0418 01158000
         ST    @10,ADDRSAVE                                        0418 01159000
*   PCTSAVE=ADDRSAVE;               /* SAVE ADDRESS OF GTFPCT  Y02014*/ 01160000
         ST    @10,PCTSAVE                                         0419 01161000
*   IDVALID='GTFPCT';               /* SAVE COMPARE ELEMENT    Y02014*/ 01162000
         MVI   IDVALID+6,C' '                                      0420 01163000
         MVI   IDVALID+7,C' '                                      0420 01164000
         MVC   IDVALID(6),@CC01515                                 0420 01165000
*   CALL IDCHECK;                   /* CHECK FOR VALID ID      Y02014*/ 01166000
         BAL   @14,IDCHECK                                         0421 01167000
*   REG2=ADDRSAVE+DISP7;            /* ADD OFFSET TO HQ LENGTH Y02014*/ 01168000
         L     REG2,ADDRSAVE                                       0422 01169000
         AL    REG2,DISP7                                          0422 01170000
*   GEN(BRREAD (R2),DATA,ASID=AID); /* READ FOR HQ LENGTH      Y02014*/ 01171000
         BRREAD (R2),DATA,ASID=AID                                      01172000
*   BUFFCNT=P;                      /* SAVE HQ LENGTH          Y02014*/ 01173000
         L     @10,P(,REG1)                                        0424 01174000
         ST    @10,BUFFCNT                                         0424 01175000
*   REG2=ADDRSAVE+DISP21;           /* ADD OFFSET TO ASCB ADDR Y02014*/ 01176000
         L     REG2,ADDRSAVE                                       0425 01177000
         AL    REG2,DISP21                                         0425 01178000
*   GEN(BRREAD (R2),DATA,ASID=AID); /* READ FOR ASCB ADDRESS   Y02014*/ 01179000
         BRREAD (R2),DATA,ASID=AID                                      01180000
*   ASCBGTF=P;                      /* SAVE ASCB ADDRESS       Y02014*/ 01181000
         L     ASCBGTF,P(,REG1)                                    0427 01182000
*   REG2=ASCBGTF+DISP22;            /* ADD OFFSET TO ASID      Y02014*/ 01183000
         LR    REG2,ASCBGTF                                        0428 01184000
         AL    REG2,DISP22                                         0428 01185000
*   GEN(BRREAD (R2),DATA,ASID=AID); /* READ FOR ASID           Y02014*/ 01186000
         BRREAD (R2),DATA,ASID=AID                                      01187000
*   GTFASID=P2;                     /* SAVE ASID               Y02014*/ 01188000
         LH    GTFASID,P2(,REG1)                                   0430 01189000
*/********************************************************************/ 01190000
*/*                                                            Y02014*/ 01191000
*/* DETERMINE WHAT TYPE OF DUMP IN ORDER TO DECIDE WHAT SCHEME Y02014*/ 01192000
*/*     TO USE IN LOCATING THE GTF BUFFERS                     Y02014*/ 01193000
*/*                                                            Y02014*/ 01194000
*/********************************************************************/ 01195000
*                                                                  0431 01196000
*   IF SADMP='0'B THEN              /* PROCESSING A S/A        Y02014*/ 01197000
         TM    SADMP,B'00100000'                                   0431 01198000
         BZ    @RT00431                                            0431 01199000
*     GO TO SLQREQ;                 /* NO, LOOK AT SLQ         Y02014*/ 01200000
*   REG2=ADDRSAVE+DISP8;            /* ADD OFFSET TO HQHEAD    Y02014*/ 01201000
         L     REG2,ADDRSAVE                                       0433 01202000
         AL    REG2,DISP8                                          0433 01203000
*   GEN(BRREAD (R2),DATA,ASID=AID); /* READ FOR HQHEAD         Y02014*/ 01204000
         BRREAD (R2),DATA,ASID=AID                                      01205000
*   ADDRSAVE=P;                     /* SAVE ADDR OF GTFBCB     Y02014*/ 01206000
         L     @10,P(,REG1)                                        0435 01207000
         ST    @10,ADDRSAVE                                        0435 01208000
*   AID=GTFASID;                    /* DO READS IN GTF'S MEMORY    0436 01209000
*                                                              Y02014*/ 01210000
         STH   GTFASID,AID                                         0436 01211000
*BCBVAL:                            /*                         Y02014*/ 01212000
*   IDVALID='GTFBCB';               /* COMPARE ELEMENT SAVED   Y02014*/ 01213000
BCBVAL   MVI   IDVALID+6,C' '                                      0437 01214000
         MVI   IDVALID+7,C' '                                      0437 01215000
         MVC   IDVALID(6),@CC01518                                 0437 01216000
*   CALL IDCHECK;                   /* CHECK FOR VALID ID      Y02014*/ 01217000
         BAL   @14,IDCHECK                                         0438 01218000
*   REG2=ADDRSAVE+DISP9;            /* ADD OFFSET TO BUF ADDR  Y02014*/ 01219000
         L     REG2,ADDRSAVE                                       0439 01220000
         AL    REG2,DISP9                                          0439 01221000
*   GEN(BRREAD (R2),DATA,ASID=AID); /* READ FOR BUFFER ADDR    Y02014*/ 01222000
         BRREAD (R2),DATA,ASID=AID                                      01223000
*   REG2=P;                         /* PREPARE TO READ IN BUF  Y02014*/ 01224000
         L     REG2,P(,REG1)                                       0441 01225000
*   GEN(BRREAD (R2),DATA,ASID=AID); /* READ IN BUFFER          Y02014*/ 01226000
*                                                                  0442 01227000
         BRREAD (R2),DATA,ASID=AID                                      01228000
*   /*****************************************************************/ 01229000
*   /*                                                               */ 01230000
*   /* ONLY ONE BRREAD IS NECESSARY DUE                        Y02014*/ 01231000
*   /* TO THE BUFFER BEING ON 4K BOUNDRY                       Y02014*/ 01232000
*   /*                                                               */ 01233000
*   /*****************************************************************/ 01234000
*                                                                  0443 01235000
*   BUFPTR=REG1;                    /* SAVE PTR TO BUFFER      Y02014*/ 01236000
         ST    REG1,BUFPTR                                         0443 01237000
*   RECPTR=REG1;                    /* PTR TO RECORDS          Y02014*/ 01238000
         ST    REG1,RECPTR                                         0444 01239000
*NEWBUF:                            /*                         Y02014*/ 01240000
*   IF(BLL<4)|(BLL>4096)            /* VALID BIG LL FIELD      Y02014*/ 01241000
*     THEN                                                         0445 01242000
NEWBUF   LA    @10,4                                               0445 01243000
         L     @08,BUFPTR                                          0445 01244000
         LH    @04,BLL(,@08)                                       0445 01245000
         CR    @04,@10                                             0445 01246000
         BL    @RT00445                                            0445 01247000
         C     @04,@CF01192                                        0445 01248000
         BH    @RT00445                                            0445 01249000
*     GO TO BADLL;                  /* GO ISSUE ERROR MSG      Y02014*/ 01250000
*   RECDLL=4;                       /* VALUE TO BYPASS PREFIX  Y02014*/ 01251000
         STCM  @10,7,RECDLL(AEDITCBR)                              0447 01252000
*   BLL=BLL-4;                      /* SUBT PREFIX LENGTH      Y02014*/ 01253000
         SLR   @04,@10                                             0448 01254000
         STH   @04,BLL(,@08)                                       0448 01255000
*DEBLOCK:                           /*                         Y02014*/ 01256000
*   IF BLL<4 THEN                   /* RECORDS REMAINING       Y02014*/ 01257000
DEBLOCK  LA    @10,4                                               0449 01258000
         L     @08,BUFPTR                                          0449 01259000
         LH    @04,BLL(,@08)                                       0449 01260000
         CR    @04,@10                                             0449 01261000
         BL    @RT00449                                            0449 01262000
*     GO TO NEXTBUF;                /* GO GET NEXT BUFFER      Y02014*/ 01263000
*   RECPTR=RECPTR+RECDLL;           /* POINT TO NEXT RECORD    Y02014*/ 01264000
         L     @03,RECDLL-1(,AEDITCBR)                             0451 01265000
         LA    @03,0(,@03)                                         0451 01266000
         AL    @03,RECPTR                                          0451 01267000
         ST    @03,RECPTR                                          0451 01268000
*   IF(LLL<4)|(LLL>284) THEN        /* VALID LITTLE LL         Y02014*/ 01269000
         LH    @15,LLL(,@03)                                       0452 01270000
         CR    @15,@10                                             0452 01271000
         BL    @RT00452                                            0452 01272000
         C     @15,@CF01337                                        0452 01273000
         BH    @RT00452                                            0452 01274000
*     GO TO BADLL;                  /* GO ISSUE ERR MSG        Y02014*/ 01275000
*   BLL=BLL-LLL;                    /* SUBT REC LNG FROM TOTAL Y02014*/ 01276000
         SLR   @04,@15                                             0454 01277000
         STH   @04,BLL(,@08)                                       0454 01278000
*   IF BLL<0 THEN                   /* INVALID LITTLE LL       Y02014*/ 01279000
         LTR   @04,@04                                             0455 01280000
         BM    @RT00455                                            0455 01281000
*     GO TO BADLL;                  /* GO ISSUE ERR MSG        Y02014*/ 01282000
*   RECDLL=LLL;                     /* SAVE LL VALUE           Y02014*/ 01283000
         STCM  @15,7,RECDLL(AEDITCBR)                              0457 01284000
*   CURREC=RECPTR;                  /* POINT CURREC AT RECORD  Y02014*/ 01285000
         ST    @03,CURREC(,AEDITCBR)                               0458 01286000
*   TRCCOUNT=TRCCOUNT+1;            /* INCR TRACE REC COUNT    Y02014*/ 01287000
         LA    @10,1                                               0459 01288000
         AL    @10,TRCCOUNT                                        0459 01289000
         ST    @10,TRCCOUNT                                        0459 01290000
*   GO TO GETDONE;                  /* SET UP FOR RETURN       Y02014*/ 01291000
         B     GETDONE                                             0460 01292000
*NEXTBUF:                           /*                         Y02014*/ 01293000
*   BUFFCNT=BUFFCNT-1;              /* CALC # OF BUFFERS LEFT  Y02014*/ 01294000
NEXTBUF  L     @10,BUFFCNT                                         0461 01295000
         BCTR  @10,0                                               0461 01296000
         ST    @10,BUFFCNT                                         0461 01297000
*   IF BUFFCNT=0 THEN               /* NO BUFFERS LEFT         Y02014*/ 01298000
         LTR   @10,@10                                             0462 01299000
         BZ    @RT00462                                            0462 01300000
*     GO TO TESTSADP;               /* CHECK IF S|A DUMP       Y02014*/ 01301000
*   REG2=ADDRSAVE+DISP10;           /* ADD OFFSET FOR CHAIN    Y02014*/ 01302000
         L     REG2,ADDRSAVE                                       0464 01303000
         AL    REG2,DISP10                                         0464 01304000
*   GEN(BRREAD (R2),DATA,ASID=AID); /* READ FOR BCB ADDR       Y02014*/ 01305000
         BRREAD (R2),DATA,ASID=AID                                      01306000
*   ADDRSAVE=P;                     /* SAVE BCB ADDR           Y02014*/ 01307000
         L     @10,P(,REG1)                                        0466 01308000
         ST    @10,ADDRSAVE                                        0466 01309000
*   GO TO BCBVAL;                   /* CHECK OUT BCB           Y02014*/ 01310000
         B     BCBVAL                                              0467 01311000
*TESTSADP:                          /*                         Y02014*/ 01312000
*   IF SADMP='0'B THEN              /* S|A DUMP PROCESSING     Y02014*/ 01313000
TESTSADP TM    SADMP,B'00100000'                                   0468 01314000
         BZ    @RT00468                                            0468 01315000
*     GO TO GETFINAL;               /* NO GO CLEAN UP          Y02014*/ 01316000
*SAPROC:                            /*                         Y02014*/ 01317000
*   AID=0;                          /* BLOKS ARE IN COMMON     Y02014*/ 01318000
SAPROC   SLR   @10,@10                                             0470 01319000
         STH   @10,AID                                             0470 01320000
*   BLOKPROC='1'B;                  /* DO BLOKING AREAS        Y02014*/ 01321000
         OI    BLOKPROC,B'10000000'                                0471 01322000
*   ADDRSAVE=PCTSAVE;               /* RESTORE PTR TO GTFPCT   Y02014*/ 01323000
         L     @10,PCTSAVE                                         0472 01324000
         ST    @10,ADDRSAVE                                        0472 01325000
*   REG2=ADDRSAVE+DISP11;           /* ADD OFFSET FOR CURRBLOK     0473 01326000
*                                      ADDRESS                 Y02014*/ 01327000
         AL    @10,DISP11                                          0473 01328000
         LR    REG2,@10                                            0473 01329000
*   GEN(BRREAD (R2),DATA,ASID=AID); /* READ FOR ADDRESS        Y02014*/ 01330000
         BRREAD (R2),DATA,ASID=AID                                      01331000
*   EIOSTOP=P;                      /* SAVE CURRBLOK ADDRESS   Y02014*/ 01332000
         L     @10,P(,REG1)                                        0475 01333000
         ST    @10,EIOSTOP                                         0475 01334000
*   REG2=ADDRSAVE+DISP12;           /* ADD OFFSET FOR NEXTBLOK Y02014*/ 01335000
         L     REG2,ADDRSAVE                                       0476 01336000
         AL    REG2,DISP12                                         0476 01337000
*   CURREC=BLDAREA;                 /* RESTORE CURREC          Y02014*/ 01338000
         L     @10,BLDAREA                                         0477 01339000
         ST    @10,CURREC(,AEDITCBR)                               0477 01340000
*   GEN(BRREAD (R2),DATA,ASID=AID); /* READ FOR ADDRESS        Y02014*/ 01341000
         BRREAD (R2),DATA,ASID=AID                                      01342000
*   EIOCUR=P;                       /* SAVE NEXTBLOK ADDR      Y02014*/ 01343000
         L     @10,P(,REG1)                                        0479 01344000
         ST    @10,EIOCUR                                          0479 01345000
*   IDVALID='GTFBLOK';              /* SAVE COMPARE ELEMENT    Y02014*/ 01346000
         MVI   IDVALID+7,C' '                                      0480 01347000
         MVC   IDVALID(7),@CC01530                                 0480 01348000
*   ADDRSAVE=EIOCUR;                /* SET UP FOR IDCHECK      Y02014*/ 01349000
         ST    @10,ADDRSAVE                                        0481 01350000
*   CALL IDCHECK;                   /* CHECK FOR VALID ID      Y02014*/ 01351000
         BAL   @14,IDCHECK                                         0482 01352000
*NEWSABUF:                          /*                         Y02014*/ 01353000
*   IF EIOSTOP=(EIOCUR&ADDRMASK)    /* LAST BLOKING AREA     @YM03670*/ 01354000
*       |COUNT=3 THEN               /* 4 BLOKS MAXIMUM         Y02014*/ 01355000
NEWSABUF L     @10,EIOCUR                                          0483 01356000
         N     @10,ADDRMASK                                        0483 01357000
         CL    @10,EIOSTOP                                         0483 01358000
         BE    @RT00483                                            0483 01359000
         CLC   COUNT(4),@CF00198                                   0483 01360000
         BNE   @RF00483                                            0483 01361000
@RT00483 DS    0H                                                  0484 01362000
*     THATSALL='1'B;                /* YES INDICATE SO         Y02014*/ 01363000
         OI    THATSALL,B'01000000'                                0484 01364000
*   REG2=ADDRSAVE+DISP13;           /* ADD OFFSET FOR USE CNT  Y02014*/ 01365000
@RF00483 L     REG2,ADDRSAVE                                       0485 01366000
         AL    REG2,DISP13                                         0485 01367000
*   GEN(BRREAD (R2),DATA,ASID=AID); /* READ FOR USE COUNT      Y02014*/ 01368000
         BRREAD (R2),DATA,ASID=AID                                      01369000
*   IF USECNT¬=0 THEN               /* USE COUNT ZERO          Y02014*/ 01370000
         LH    @10,USECNT(,REG1)                                   0487 01371000
         LTR   @10,@10                                             0487 01372000
         BNZ   @RT00487                                            0487 01373000
*     GO TO HEXBUFDP;               /* NO,GO DUMP BUF IN HEX   Y02014*/ 01374000
*   REG2=ADDRSAVE+DISP14;           /* ADD OFFSET TO BLOK AREA Y02014*/ 01375000
         L     REG2,ADDRSAVE                                       0489 01376000
         AL    REG2,DISP14                                         0489 01377000
*   EIOREC=REG2;                    /* ADDR IN DUMP OF BLKAREA Y02014*/ 01378000
         ST    REG2,EIOREC                                         0490 01379000
*   GEN(BRREAD (R2),DATA,ASID=AID); /* READ FOR BIG LL         Y02014*/ 01380000
         BRREAD (R2),DATA,ASID=AID                                      01381000
*   IF(LL<=4)|(LL>4096) THEN        /* VALID BIG LL            Y02014*/ 01382000
         LA    @10,4                                               0492 01383000
         LH    @08,LL(,REG1)                                       0492 01384000
         CR    @08,@10                                             0492 01385000
         BNH   @RT00492                                            0492 01386000
         C     @08,@CF01192                                        0492 01387000
         BH    @RT00492                                            0492 01388000
*     GO TO BADLL;                  /* NO GET NEXT BLOK        Y02014*/ 01389000
*   EIOLL=LL-4;                     /* BYPASS BIG LL FIELD     Y02014*/ 01390000
         SLR   @08,@10                                             0494 01391000
         STH   @08,EIOLL                                           0494 01392000
*   EIOREC=EIOREC+4;                /* INCREMENT TO LITTLE LL  Y02014*/ 01393000
         AL    @10,EIOREC                                          0495 01394000
         ST    @10,EIOREC                                          0495 01395000
*DEBLKSA:                                                          0496 01396000
*   IF EIOLL<=4 THEN                /* ARE LOGICAL RECORDS REMAINING    01397000
*                                      IN THIS BLOK                  */ 01398000
DEBLKSA  LH    @10,EIOLL                                           0496 01399000
         C     @10,@CF00065                                        0496 01400000
         BNH   @RT00496                                            0496 01401000
*     GO TO NEXTSABF;               /* IF NOT, GO TO NEXT BLOK Y02014*/ 01402000
*                                                                  0497 01403000
*   /*****************************************************************/ 01404000
*   /*                                                               */ 01405000
*   /* READ LITTLE-LL FIELD. TWO BRREAD-S ARE REQUIRED BECAUSE FIELD */ 01406000
*   /* MAY HAVE BYTE BOUNDARY ALLIGNMENT AND SPAN 2K STORAGE BLOCK   */ 01407000
*   /*                                                               */ 01408000
*   /*****************************************************************/ 01409000
*                                                                  0498 01410000
*   REG2=EIOREC;                    /* POINT TO LOGICAL RECORD LL  0498 01411000
*                                      FIELD                         */ 01412000
         L     REG2,EIOREC                                         0498 01413000
*   GEN(BRREAD (R2),DATA,ASID=AID); /* READ FOR FIRST HALF     Y02014*/ 01414000
         BRREAD (R2),DATA,ASID=AID                                      01415000
*   EIORECLL(1)=HALFLL;             /* MOVE FIRST HALF TO EIOCT    0500 01416000
*                                      HALFLL BASED ON REG 1         */ 01417000
         MVC   EIORECLL(1),HALFLL(REG1)                            0500 01418000
*   REG2=REG2+1;                    /* POINT TO SECOND BYTE          */ 01419000
         AL    REG2,@CF00076                                       0501 01420000
*   GEN(BRREAD  (R2),DATA,ASID=AID);/* READ FOR SECOND HALF OF RECORD   01421000
*                                      LL FIELD                Y02014*/ 01422000
         BRREAD  (R2),DATA,ASID=AID                                     01423000
*   EIORECLL(2)=HALFLL;             /* MOVE SECOND BYTE TO EIOCT     */ 01424000
         MVC   EIORECLL+1(1),HALFLL(REG1)                          0503 01425000
*   RECDLL=EIORECLL;                /* RECORD LNG IN PRTAB     Y02014*/ 01426000
*                                                                  0504 01427000
         LH    @10,EIORECLL                                        0504 01428000
         N     @10,@CF01570                                        0504 01429000
         STCM  @10,7,RECDLL(AEDITCBR)                              0504 01430000
*   /*****************************************************************/ 01431000
*   /*                                                               */ 01432000
*   /* VALIDITY CHECK LITTLE-LL, MUST LIE IN RANGE 4-284       Y02014*/ 01433000
*   /*                                                               */ 01434000
*   /*****************************************************************/ 01435000
*                                                                  0505 01436000
*   IF EIORECLL<4|EIORECLL>TWO84 THEN                              0505 01437000
*                                                                  0505 01438000
         C     @10,@CF00065                                        0505 01439000
         BL    @RT00505                                            0505 01440000
         CH    @10,TWO84                                           0505 01441000
         BNH   @RF00505                                            0505 01442000
@RT00505 DS    0H                                                  0506 01443000
*     /***************************************************************/ 01444000
*     /*                                                             */ 01445000
*     /* IF RECORD LL IS BAD, PRINT COMMENT AND GO ON TO NEXT BUF    */ 01446000
*     /*                                                             */ 01447000
*     /***************************************************************/ 01448000
*                                                                  0506 01449000
*BADLL:                                                            0506 01450000
*     DO;                                                          0506 01451000
BADLL    DS    0H                                                  0507 01452000
*       GEN(BRWRITE  SKIP,IMM);     /* SKIP TO NEW PAGE              */ 01453000
*                                                                  0507 01454000
         BRWRITE  SKIP,IMM                                              01455000
*       /*************************************************************/ 01456000
*       /*                                                           */ 01457000
*       /* MOVE DUMP ERROR - CONTINUING MESSAGE TO OUTPUT BUFFER     */ 01458000
*       /*                                                           */ 01459000
*       /*************************************************************/ 01460000
*                                                                  0508 01461000
*       OUTBUF(1:49)=DUMPERCN;                                     0508 01462000
         L     @10,CURBUF                                          0508 01463000
         MVC   OUTBUF(49,@10),DUMPERCN                             0508 01464000
*       GEN(BRWRITE  2);            /* WRITE MESSAGE TO PRINTER DATA    01465000
*                                      SET                           */ 01466000
         BRWRITE  2                                                     01467000
*       IF BLOKPROC='1'B THEN       /* PROCESSING GTF BLOKS    Y02014*/ 01468000
         TM    BLOKPROC,B'10000000'                                0510 01469000
         BO    @RT00510                                            0510 01470000
*         GO TO NEXTSABF;           /* YES GO GET NEXT ONE     Y02014*/ 01471000
*       GO TO NEXTBUF;              /* BRANCH TO FIND NEXT BUFFER    */ 01472000
         B     NEXTBUF                                             0512 01473000
*     END BADLL;                                                   0513 01474000
*                                                                  0513 01475000
*   /*****************************************************************/ 01476000
*   /*                                                               */ 01477000
*   /* LITTLE-LL IN PROPER RANGE                                     */ 01478000
*   /*                                                               */ 01479000
*   /*****************************************************************/ 01480000
*                                                                  0514 01481000
*   EIOLL=EIOLL-EIORECLL;           /* SUBTRACT CURRENT RECORD LENGTH   01482000
*                                      FROM REMAINNING LENGTH IN   0514 01483000
*                                      BLOCK                         */ 01484000
@RF00505 LH    @10,EIORECLL                                        0514 01485000
         N     @10,@CF01570                                        0514 01486000
         LH    @08,EIOLL                                           0514 01487000
         SLR   @08,@10                                             0514 01488000
         STH   @08,EIOLL                                           0514 01489000
*   IF EIOLL<0 THEN                 /* REMAINDER SHOULD NEVER GO   0515 01490000
*                                      NEGATIVE                      */ 01491000
         SLR   @04,@04                                             0515 01492000
         CR    @08,@04                                             0515 01493000
         BL    @RT00515                                            0515 01494000
*     GO TO BADLL;                  /* IF THIS HAPPENS, SOME LL IS IN   01495000
*                                      ERROR SO GO ON TO NEXT BUFFER */ 01496000
*                                                                  0516 01497000
*   /*****************************************************************/ 01498000
*   /*                                                               */ 01499000
*   /* EIOBRCT IS TOTAL NUMBER OF WORDS BEGINNING ON A WORD BOUNDARY */ 01500000
*   /* WHICH ARE REQUIRED TO SPAN THE TRACE ENTRY BEING DEBLOCKED.   */ 01501000
*   /*                                                               */ 01502000
*   /*****************************************************************/ 01503000
*                                                                  0517 01504000
*   EIOBRCT=(EIORECLL+3)/4+1;                                      0517 01505000
         LA    @06,3                                               0517 01506000
         ALR   @06,@10                                             0517 01507000
         SRDA  @06,32                                              0517 01508000
         D     @06,@CF00065                                        0517 01509000
         LA    @07,1(,@07)                                         0517 01510000
         STH   @07,EIOBRCT                                         0517 01511000
*   REG2=EIOREC&'FFFFFFFC'X;        /* ROUND DATA POINTER DOWN TO  0518 01512000
*                                      WORD BOUNDARY                 */ 01513000
         L     @08,EIOREC                                          0518 01514000
         LR    REG2,@08                                            0518 01515000
         N     REG2,@CF01537                                       0518 01516000
*   EIOBR=EIOREC&'00000003'X;       /* SAVE REMAINDER OF ROUND DOWN  */ 01517000
         LR    @03,@08                                             0519 01518000
         N     @03,@CF01538                                        0519 01519000
         STH   @03,EIOBR                                           0519 01520000
*   EIOREC=EIOREC+EIORECLL;         /* UPDATE DATA POINTER           */ 01521000
*                                                                  0520 01522000
         ALR   @08,@10                                             0520 01523000
         ST    @08,EIOREC                                          0520 01524000
*   /*****************************************************************/ 01525000
*   /*                                                               */ 01526000
*   /* LOOP TO READ EACH WORD OF TRACE RECORD                        */ 01527000
*   /*                                                               */ 01528000
*   /*****************************************************************/ 01529000
*                                                                  0521 01530000
*   DO I=0 TO EIOBRCT-1;                                           0521 01531000
         LR    I,@04                                               0521 01532000
         B     @DE00521                                            0521 01533000
@DL00521 DS    0H                                                  0522 01534000
*     GEN(BRREAD  (R2),DATA,ASID=AID);                             0522 01535000
*                                                                  0522 01536000
         BRREAD  (R2),DATA,ASID=AID                                     01537000
*     /***************************************************************/ 01538000
*     /*                                                             */ 01539000
*     /* READ WORD FROM DUMP - FULL WORD WILL BE READ BECAUSE DATA   */ 01540000
*     /* ADDR (REG 2) HAS BEEN ROUNDED TO WORD BOUNDARY              */ 01541000
*     /*                                                             */ 01542000
*     /***************************************************************/ 01543000
*                                                                  0523 01544000
*     K=(I*4)+1;                    /* COMPUTE OFFSET INTO BUILD AREA*/ 01545000
         LR    @10,I                                               0523 01546000
         SLA   @10,2                                               0523 01547000
         AL    @10,@CF00076                                        0523 01548000
         STH   @10,K                                               0523 01549000
*     BULDAREA(K:K+3)=TWORD;        /* MOVE WORD TO BUILD AREA       */ 01550000
         L     @08,CURREC(,AEDITCBR)                               0524 01551000
         ALR   @08,@10                                             0524 01552000
         MVC   BULDAREA-1(4,@08),TWORD(REG1)                       0524 01553000
*     REG2=REG2+4;                  /* POINT TO NEXT WORD            */ 01554000
         AL    REG2,@CF00065                                       0525 01555000
*   END;                                                           0526 01556000
*                                                                  0526 01557000
         AL    I,@CF00076                                          0526 01558000
@DE00521 LH    @10,EIOBRCT                                         0526 01559000
         BCTR  @10,0                                               0526 01560000
         CR    I,@10                                               0526 01561000
         BNH   @DL00521                                            0526 01562000
*/*   TRACE ENTRY NOW IN CORE                                        */ 01563000
*                                                                  0527 01564000
*   REG2=EIORECLL/256;              /* COMPUTE NUMBER OF MOVES     0527 01565000
*                                      REQUIRED TO MOVE ENTIRE RECORD   01566000
*                                      TO TRACE RECORD AREA          */ 01567000
         LH    REG2,EIORECLL                                       0527 01568000
         N     REG2,@CF01570                                       0527 01569000
         SRL   REG2,8                                              0527 01570000
*   DO I=0 TO REG2-1;               /* LOOP PERFORM MOVES            */ 01571000
         SLR   I,I                                                 0528 01572000
         B     @DE00528                                            0528 01573000
@DL00528 DS    0H                                                  0529 01574000
*     K=(I*256)+1;                  /* COMPUTE OFFSET INTO TRACE   0529 01575000
*                                      RECORD AREA AT WHICH THIS MOVE   01576000
*                                      IS TO GO                      */ 01577000
         LR    @10,I                                               0529 01578000
         SLA   @10,8                                               0529 01579000
         AL    @10,@CF00076                                        0529 01580000
         STH   @10,K                                               0529 01581000
*     J=K+EIOBR;                    /* COMPUTE OFFSET INTO BUILD AREA   01582000
*                                      OF SOURCE OF MOVE             */ 01583000
*                                                                  0530 01584000
         LH    J,EIOBR                                             0530 01585000
         ALR   J,@10                                               0530 01586000
*     /***************************************************************/ 01587000
*     /*                                                             */ 01588000
*     /* MOVE 256 BYTE SEGMENT                                       */ 01589000
*     /*                                                             */ 01590000
*     /***************************************************************/ 01591000
*                                                                  0531 01592000
*     TRECFINL(K:K+255)=BULDAREA(J:J+255);                         0531 01593000
         L     @08,CURREC(,AEDITCBR)                               0531 01594000
         ALR   @10,@08                                             0531 01595000
         BCTR  @10,0                                               0531 01596000
         ALR   @08,J                                               0531 01597000
         MVC   TRECFINL(256,@10),BULDAREA-1(@08)                   0531 01598000
*   END;                                                           0532 01599000
         AL    I,@CF00076                                          0532 01600000
@DE00528 LR    @10,REG2                                            0532 01601000
         BCTR  @10,0                                               0532 01602000
         CR    I,@10                                               0532 01603000
         BNH   @DL00528                                            0532 01604000
*   REG2=EIORECLL//256;             /* COMPUTE REMAINDER, IF ANY, YET   01605000
*                                      TO BE MOVED                   */ 01606000
         LH    REG2,EIORECLL                                       0533 01607000
         N     REG2,@CF01570                                       0533 01608000
         N     REG2,@CF01539                                       0533 01609000
*   IF REG2¬=0 THEN                                                0534 01610000
         LTR   REG2,REG2                                           0534 01611000
         BZ    @RF00534                                            0534 01612000
*     DO;                           /* TEST FOR NOT ALL OF RECORD  0535 01613000
*                                      HAVING BEEN MOVED             */ 01614000
*                                                                  0535 01615000
*       /*************************************************************/ 01616000
*       /*                                                           */ 01617000
*       /* IF THERE IS A REMAINING PART TO BE MOVED, COMPUTE OFFSET  */ 01618000
*       /* OF WHERE REMAINDER SHOULD GO I VALID FROM EXIT FROM       */ 01619000
*       /* DO-LOOP ABOVE                                             */ 01620000
*       /*                                                           */ 01621000
*       /*************************************************************/ 01622000
*                                                                  0536 01623000
*       K=(I*256)+1;                /* GET OFFSET INTO TARGET AREA   */ 01624000
         LR    @10,I                                               0536 01625000
         SLA   @10,8                                               0536 01626000
         AL    @10,@CF00076                                        0536 01627000
         STH   @10,K                                               0536 01628000
*       J=K+EIOBR;                  /* OFFSET OF REMAINDER           */ 01629000
         LH    J,EIOBR                                             0537 01630000
         ALR   J,@10                                               0537 01631000
*       REG2=REG2-1;                /* ACCOUNT FOR INCLUSIVE NATURE     01632000
*                                      OF SUB-STRING NOTATION        */ 01633000
*                                                                  0538 01634000
         BCTR  REG2,0                                              0538 01635000
*       /*************************************************************/ 01636000
*       /*                                                           */ 01637000
*       /* MOVE REMAINDER                                            */ 01638000
*       /*                                                           */ 01639000
*       /*************************************************************/ 01640000
*                                                                  0539 01641000
*       TRECFINL(K:K+REG2)=BULDAREA(J:J+REG2);                     0539 01642000
         L     @08,CURREC(,AEDITCBR)                               0539 01643000
         ALR   @10,@08                                             0539 01644000
         BCTR  @10,0                                               0539 01645000
         ALR   @08,J                                               0539 01646000
         EX    REG2,@SM01571                                       0539 01647000
*     END;                                                         0540 01648000
*                                                                  0540 01649000
*   /*****************************************************************/ 01650000
*   /*                                                               */ 01651000
*   /* TRACE RECORD IS NOW COMPLETELY ASSEMBLED                      */ 01652000
*   /*                                                               */ 01653000
*   /*****************************************************************/ 01654000
*                                                                  0541 01655000
*   TRCCOUNT=TRCCOUNT+1;            /* UPDATE TRACE RECORD READ COUNT*/ 01656000
@RF00534 LA    @10,1                                               0541 01657000
         AL    @10,TRCCOUNT                                        0541 01658000
         ST    @10,TRCCOUNT                                        0541 01659000
*   GO TO GETDONE;                  /* GO EXIT TO AMDPRFRM           */ 01660000
         B     GETDONE                                             0542 01661000
*SLQREQ:                                                           0543 01662000
*   REG2=ADDRSAVE+DISP15;           /* ADD OFFSET FOR SLQHEAD  Y02014*/ 01663000
SLQREQ   L     REG2,ADDRSAVE                                       0543 01664000
         AL    REG2,DISP15                                         0543 01665000
*   GEN(BRREAD (R2),DATA,ASID=AID); /* READ FOR POINTER        Y02014*/ 01666000
         BRREAD (R2),DATA,ASID=AID                                      01667000
*   ADDRSAVE=P;                     /* SAVE SLE ADDRESS        Y02014*/ 01668000
         L     @10,P(,REG1)                                        0545 01669000
         ST    @10,ADDRSAVE                                        0545 01670000
*   IDVALID='SLE';                  /* SAVE COMPARE ELEMENT    Y02014*/ 01671000
         MVI   IDVALID+3,C' '                                      0546 01672000
         MVC   IDVALID+4(4),IDVALID+3                              0546 01673000
         MVC   IDVALID(3),@CC01541                                 0546 01674000
*   AID=GTFASID;                    /* READ SLE FROM GTF MEMORY    0547 01675000
*                                                              Y02014*/ 01676000
         STH   GTFASID,AID                                         0547 01677000
*INVALSLE:                          /*                         Y02014*/ 01678000
*   IF ADDRSAVE=0 THEN              /* CHAIN CONTINUES         Y02014*/ 01679000
INVALSLE L     @10,ADDRSAVE                                        0548 01680000
         LTR   @10,@10                                             0548 01681000
         BZ    @RT00548                                            0548 01682000
*     GO TO CHAINERR;               /* GO ISSUE ERR MESSAGE    Y02014*/ 01683000
*   CALL IDCHECK;                   /* CHECK FOR VALID ID      Y02014*/ 01684000
         BAL   @14,IDCHECK                                         0550 01685000
*   REG2=ADDRSAVE+DISP16;           /* ADD OFFSET TO ASID      Y02014*/ 01686000
         L     REG2,ADDRSAVE                                       0551 01687000
         AL    REG2,DISP16                                         0551 01688000
*   GEN(BRREAD (R2),DATA,ASID=AID); /* READ ASID               Y02014*/ 01689000
         BRREAD (R2),DATA,ASID=AID                                      01690000
*   ASIDHOLD=ASIDCOMP;              /* SAVE ASID               Y02014*/ 01691000
         LH    ASIDHOLD,ASIDCOMP(,REG1)                            0553 01692000
*   REG2=ADDRSAVE+DISP17;           /* ADD OFFSET FOR TCB      Y02014*/ 01693000
         L     REG2,ADDRSAVE                                       0554 01694000
         AL    REG2,DISP17                                         0554 01695000
*   GEN(BRREAD (R2),DATA,ASID=AID); /* READ TCB                Y02014*/ 01696000
         BRREAD (R2),DATA,ASID=AID                                      01697000
*   IF(ASIDHOLD¬=QASID)|            /* SLE WE'RE LOOKING FOR   Y02014*/ 01698000
*       (TCBHOLD¬=ZERO) THEN        /*                         Y02014*/ 01699000
         CH    ASIDHOLD,QASID                                      0556 01700000
         BNE   @RT00556                                            0556 01701000
         CLC   TCBHOLD(4,REG1),ZERO                                0556 01702000
         BE    @RF00556                                            0556 01703000
@RT00556 DS    0H                                                  0557 01704000
*     DO;                           /*                         Y02014*/ 01705000
*       REG2=ADDRSAVE+DISP18;       /* OFFSET FOR CHAIN        Y02014*/ 01706000
         L     REG2,ADDRSAVE                                       0558 01707000
         AL    REG2,DISP18                                         0558 01708000
*       GEN(BRREAD (R2),DATA,ASID=AID);/* READ CHAIN PTR       Y02014*/ 01709000
         BRREAD (R2),DATA,ASID=AID                                      01710000
*       ADDRSAVE=P;                 /* SAVE ADDR OF SLE        Y02014*/ 01711000
         L     @10,P(,REG1)                                        0560 01712000
         ST    @10,ADDRSAVE                                        0560 01713000
*       GO TO INVALSLE;             /* CHECK OUT SLE           Y02014*/ 01714000
         B     INVALSLE                                            0561 01715000
*     END;                          /*                         Y02014*/ 01716000
*   REG2=ADDRSAVE+DISP19;           /* ADD OFFSET TO BCB ADDR  Y02014*/ 01717000
@RF00556 L     REG2,ADDRSAVE                                       0563 01718000
         AL    REG2,DISP19                                         0563 01719000
*   GEN(BRREAD (R2),DATA,ASID=AID); /* READ FOR BCB PTR        Y02014*/ 01720000
         BRREAD (R2),DATA,ASID=AID                                      01721000
*   ADDRSAVE=P;                     /* SAVE BCB ADDRESS        Y02014*/ 01722000
         L     @10,P(,REG1)                                        0565 01723000
         ST    @10,ADDRSAVE                                        0565 01724000
*   GO TO BCBVAL;                   /* GO CHECK OUT BCB        Y02014*/ 01725000
         B     BCBVAL                                              0566 01726000
*NEXTSABF:                          /*                         Y02014*/ 01727000
*   IF THATSALL='1'B THEN           /* ALL AREAS FORMATTED     Y02014*/ 01728000
NEXTSABF TM    THATSALL,B'01000000'                                0567 01729000
         BO    @RT00567                                            0567 01730000
*     GO TO GETFINAL;               /* GO CLEAN UP             Y02014*/ 01731000
*   REG2=ADDRSAVE+DISP20;           /* GET CHAIN PTR           Y02014*/ 01732000
         L     REG2,ADDRSAVE                                       0569 01733000
         AL    REG2,DISP20                                         0569 01734000
*   GEN(BRREAD (R2),DATA,ASID=AID); /* READ FOR GTFBLOK ADDR   Y02014*/ 01735000
         BRREAD (R2),DATA,ASID=AID                                      01736000
*   ADDRSAVE=P;                     /* SAVE GTFBLOK ADDR       Y02014*/ 01737000
         L     @10,P(,REG1)                                        0571 01738000
         ST    @10,ADDRSAVE                                        0571 01739000
*   EIOCUR=ADDRSAVE;                /* SAVE ADDR FOR COMPARISON    0572 01740000
*                                                              Y02014*/ 01741000
         ST    @10,EIOCUR                                          0572 01742000
*   CALL IDCHECK;                   /* CHECK FOR VALID ID      Y02014*/ 01743000
         BAL   @14,IDCHECK                                         0573 01744000
*   COUNT=COUNT+1;                  /* COUNT OF BLOKS FORMATTED    0574 01745000
*                                                              Y02014*/ 01746000
         LA    @10,1                                               0574 01747000
         AL    @10,COUNT                                           0574 01748000
         ST    @10,COUNT                                           0574 01749000
*   GO TO NEWSABUF;                 /* PROCESS NEW GTFBLOK     Y02014*/ 01750000
         B     NEWSABUF                                            0575 01751000
*                                                                  0576 01752000
*/************************************************************ Y02014*/ 01753000
*/*      BUFFER DUMPING ROUTINE                                Y02014*/ 01754000
*/************************************************************ Y02014*/ 01755000
*                                                                  0576 01756000
*HEXBUFDP:                          /*                         Y02014*/ 01757000
*   RFY                                                            0576 01758000
*    (REG2) RSTD;                   /*                         Y02014*/ 01759000
HEXBUFDP DS    0H                                                  0577 01760000
*   FIRSTHSW='0'B;                  /* FIRST TIME SWITCH       Y02014*/ 01761000
         NI    FIRSTHSW(AEDITCBR),B'11101111'                      0577 01762000
*   REG2=ADDRSAVE+DISP14;           /* ADD OFFSET TO AREA      Y02014*/ 01763000
         L     REG2,ADDRSAVE                                       0578 01764000
         AL    REG2,DISP14                                         0578 01765000
*   GEN(BRREAD (R2),DATA,ASID=AID); /* READ IN BIG LL FIELD    Y02014*/ 01766000
         BRREAD (R2),DATA,ASID=AID                                      01767000
*   EIOLL=LL;                       /* SAVE BIG LL VALUE       Y02014*/ 01768000
         LH    @10,LL(,REG1)                                       0580 01769000
         STH   @10,EIOLL                                           0580 01770000
*READAGAN:                          /*                         Y02014*/ 01771000
*   LLSTORE=EIOLL;                  /* SAVE LL VALUE           Y02014*/ 01772000
READAGAN LH    @10,EIOLL                                           0581 01773000
         LR    LLSTORE,@10                                         0581 01774000
*   EIOLL=EIOLL-32;                 /* PRINT 32 BYTES A TIME   Y02014*/ 01775000
         SL    @10,@CF00122                                        0582 01776000
         STH   @10,EIOLL                                           0582 01777000
*   IF EIOLL>=0 THEN                /* A FULL LINE TO PRINT    Y02014*/ 01778000
         SLR   @08,@08                                             0583 01779000
         CR    @10,@08                                             0583 01780000
         BL    @RF00583                                            0583 01781000
*     DO;                           /*                         Y02014*/ 01782000
*       DO I=0 TO 7;                /* 8 READS FOR 32 BYTES    Y02014*/ 01783000
         LR    I,@08                                               0585 01784000
@DL00585 DS    0H                                                  0586 01785000
*         GEN(BRREAD (R2),DATA,ASID=AID);/* READ IN 4 BYTES    Y02014*/ 01786000
         BRREAD (R2),DATA,ASID=AID                                      01787000
*         K=(I*4)+1;                /* COMPUTE OFFSET          Y02014*/ 01788000
         LR    @10,I                                               0587 01789000
         SLA   @10,2                                               0587 01790000
         AL    @10,@CF00076                                        0587 01791000
         STH   @10,K                                               0587 01792000
*         HEXLINE(K:K+3)=TWORD;     /* MOVE BYTES INTO BUFFER  Y02014*/ 01793000
         L     @08,CURREC(,AEDITCBR)                               0588 01794000
         ALR   @08,@10                                             0588 01795000
         BCTR  @08,0                                               0588 01796000
         MVC   HEXLINE(4,@08),TWORD(REG1)                          0588 01797000
*         REG2=REG2+4;              /* POINT TO NEXT WORD      Y02014*/ 01798000
         AL    REG2,@CF00065                                       0589 01799000
*       END;                        /*                         Y02014*/ 01800000
         AL    I,@CF00076                                          0590 01801000
         C     I,@CF00087                                          0590 01802000
         BNH   @DL00585                                            0590 01803000
*     END;                          /*                         Y02014*/ 01804000
*   ELSE                                                           0592 01805000
*     DO;                           /* PARTIAL LINE TO HANDLE  Y02014*/ 01806000
         B     @RC00583                                            0592 01807000
@RF00583 DS    0H                                                  0593 01808000
*       EIOLL=LLSTORE;              /* RESTORE LL VALUE        Y02014*/ 01809000
         STH   LLSTORE,EIOLL                                       0593 01810000
*       IF(EIOLL//4)¬=0 THEN        /* LENGTH DIVISABLE BY WD  Y02014*/ 01811000
         LH    @10,EIOLL                                           0594 01812000
         LR    @06,@10                                             0594 01813000
         SRDA  @06,32                                              0594 01814000
         D     @06,@CF00065                                        0594 01815000
         LTR   @06,@06                                             0594 01816000
         BZ    @RF00594                                            0594 01817000
*         EIOBRCT=(EIOLL/4)+1;      /* CALC # READS NECESSARY  Y02014*/ 01818000
         LR    @06,@10                                             0595 01819000
         SRDA  @06,32                                              0595 01820000
         D     @06,@CF00065                                        0595 01821000
         LA    @07,1(,@07)                                         0595 01822000
         STH   @07,EIOBRCT                                         0595 01823000
*       ELSE                                                       0596 01824000
*         EIOBRCT=EIOLL/4;          /* CALC # READS NECESSARY  Y02014*/ 01825000
         B     @RC00594                                            0596 01826000
@RF00594 LH    @06,EIOLL                                           0596 01827000
         SRDA  @06,32                                              0596 01828000
         D     @06,@CF00065                                        0596 01829000
         STH   @07,EIOBRCT                                         0596 01830000
*       DO I=0 TO EIOBRCT-1;        /* SET UP LOOP FOR READS   Y02014*/ 01831000
@RC00594 SLR   I,I                                                 0597 01832000
         B     @DE00597                                            0597 01833000
@DL00597 DS    0H                                                  0598 01834000
*         GEN(BRREAD (R2),DATA,ASID=AID);/* DO READ FOR A WORD Y02014*/ 01835000
         BRREAD (R2),DATA,ASID=AID                                      01836000
*         K=(I*4)+1;                /* CALC OFFSET IN BUFFER   Y02014*/ 01837000
         LR    @10,I                                               0599 01838000
         SLA   @10,2                                               0599 01839000
         AL    @10,@CF00076                                        0599 01840000
         STH   @10,K                                               0599 01841000
*         HEXLINE(K:K+3)=TWORD;     /* MOVE WD TO BUFFER       Y02014*/ 01842000
         L     @08,CURREC(,AEDITCBR)                               0600 01843000
         ALR   @08,@10                                             0600 01844000
         BCTR  @08,0                                               0600 01845000
         MVC   HEXLINE(4,@08),TWORD(REG1)                          0600 01846000
*         REG2=REG2+4;              /* POINT TO NEXT WORD      Y02014*/ 01847000
         AL    REG2,@CF00065                                       0601 01848000
*       END;                        /*                         Y02014*/ 01849000
         AL    I,@CF00076                                          0602 01850000
@DE00597 LH    @10,EIOBRCT                                         0602 01851000
         BCTR  @10,0                                               0602 01852000
         CR    I,@10                                               0602 01853000
         BNH   @DL00597                                            0602 01854000
*       I=EIOLL//4;                 /* CALC # OF EXTRA BYTES   Y02014*/ 01855000
         LH    @06,EIOLL                                           0603 01856000
         SRDA  @06,32                                              0603 01857000
         D     @06,@CF00065                                        0603 01858000
         LR    I,@06                                               0603 01859000
*       IF I¬=0 THEN                /* BLANK OUT # OF EXTRA    Y02014*/ 01860000
         LTR   I,I                                                 0604 01861000
         BZ    @RF00604                                            0604 01862000
*         HEXLINE((K+I):(K+3))=BLANKS;/* BYTES READ            Y02014*/ 01863000
         LH    @10,K                                               0605 01864000
         LR    @08,I                                               0605 01865000
         ALR   @08,@10                                             0605 01866000
         L     @04,CURREC(,AEDITCBR)                               0605 01867000
         ALR   @04,@08                                             0605 01868000
         BCTR  @04,0                                               0605 01869000
         SLR   @10,@08                                             0605 01870000
         AL    @10,@CF00198                                        0605 01871000
         EX    @10,@SM01574                                        0605 01872000
*       EIOLL=0;                    /* NO MORE TO FORMAT       Y02014*/ 01873000
@RF00604 SLR   @10,@10                                             0606 01874000
         STH   @10,EIOLL                                           0606 01875000
*     END;                          /*                         Y02014*/ 01876000
*   CALL PRHEX;                     /* GO DUMP BYTES IN HEX    Y02014*/ 01877000
@RC00583 L     @10,AFRMAD(,AEDITCBR)                               0608 01878000
         L     @15,AHEX(,@10)                                      0608 01879000
         BALR  @14,@15                                             0608 01880000
*   IF EIOLL>0 THEN                 /* MORE BUFFER TO DUMP     Y02014*/ 01881000
         LH    @10,EIOLL                                           0609 01882000
         LTR   @10,@10                                             0609 01883000
         BP    @RT00609                                            0609 01884000
*     GO TO READAGAN;               /* GO DUMP NEXT LINE       Y02014*/ 01885000
*   GO TO NEXTSABF;                 /* GO GET NEXT GTFBLOK     Y02014*/ 01886000
         B     NEXTSABF                                            0611 01887000
*                                                                  0612 01888000
*/********************************************************************  01889000
*                                                                    */ 01890000
*/*                                                                  */ 01891000
*/*  ERROR DURING BUFFER LOCATING PROCEDURE                          */ 01892000
*/*                                                                  */ 01893000
*/********************************************************************  01894000
*                                                                    */ 01895000
*                                                                  0612 01896000
*DUMPER:                                                           0612 01897000
*   GEN;                                                           0612 01898000
DUMPER   DS    0H                                                  0612 01899000
         USING *,R15            /* TEMPORARYILY BASE ON REG 15 - EP  */ 01900000
*                               /* ADDRESS                           */ 01901000
         LA    R13,@SA00001     /* POINT TO SAVE AREA          Y02014*/ 01902000
*                               /* *** DEPENDENT ON BSL NAMING ***   */ 01903000
         LM    R14,R12,12(R13)     RELOAD REGISTERS                     01904000
         DROP  R15                 GO BACK TO BSL-S BASE                01905000
*CHAINERR:                          /*                         Y02014*/ 01906000
*   I=39;                           /* LENGTH OF MESSAGE       Y02014*/ 01907000
CHAINERR LA    I,39                                                0613 01908000
*   REG2=ADDR(DUMPERTM);            /* POINT TO DUMP ERROR MESSAGE   */ 01909000
         LA    REG2,DUMPERTM                                       0614 01910000
*/* BRANCH HERE TO PRINT TERMINAL ERROR MESSAGE AND TERMINATE EDIT   */ 01911000
*                                                                  0615 01912000
*WRITERR:                                                          0615 01913000
*   GEN(BRWRITE  SKIP);             /* SKIP TO NEW PAGE              */ 01914000
*                                                                  0615 01915000
WRITERR  BRWRITE  SKIP                                                  01916000
*   /*****************************************************************/ 01917000
*   /*                                                               */ 01918000
*   /* MOVE MESSAGE TO OUTPUT AREA                                   */ 01919000
*   /*                                                               */ 01920000
*   /*****************************************************************/ 01921000
*                                                                  0616 01922000
*   OUTBUF(1:I)=COMNTTXT(1:I);                                     0616 01923000
         L     @10,CURBUF                                          0616 01924000
         LR    @08,I                                               0616 01925000
         BCTR  @08,0                                               0616 01926000
         EX    @08,@SM01576                                        0616 01927000
*   GEN(BRWRITE  1);                /* WRITE MESSAGE ON PRINTER DATA    01928000
*                                      SET                           */ 01929000
         BRWRITE  1                                                     01930000
*   GO TO GETFREE;                  /* GO TO EOF HANDLER TO CLOSE  0618 01931000
*                                      GOWN GET OPERATION            */ 01932000
         B     GETFREE                                             0618 01933000
*                                                                  0619 01934000
*/********************************************************************/ 01935000
*/*      ROUTINE TO VALIDITY CHECK                                   */ 01936000
*/*          CONTROL BLOCK IDS                                 Y02014*/ 01937000
*/********************************************************************/ 01938000
*                                                                  0619 01939000
*IDCHECK:                                                          0619 01940000
*   PROC;                                                          0619 01941000
IDCHECK  STM   @14,@12,@SA00002                                    0619 01942000
*   REG2=ADDRSAVE;                  /* PICK UP PTR TO TABLE    Y02014*/ 01943000
         L     REG2,ADDRSAVE                                       0620 01944000
*   GEN(BRREAD (R2),DATA,ASID=AID); /* READ FOR 1ST 4 BYTES    Y02014*/ 01945000
         BRREAD (R2),DATA,ASID=AID                                      01946000
*   IDHOLD1=TABLEID;                /* SAVE 1ST 4 BYTES        Y02014*/ 01947000
         MVC   IDHOLD1(4),TABLEID(REG1)                            0622 01948000
*   REG2=ADDRSAVE+4;                /* PT TO 2ND 4 BYTES       Y02014*/ 01949000
         LA    REG2,4                                              0623 01950000
         AL    REG2,ADDRSAVE                                       0623 01951000
*   GEN(BRREAD (R2),DATA,ASID=AID); /* READ FOR 2ND 4 BYTES    Y02014*/ 01952000
         BRREAD (R2),DATA,ASID=AID                                      01953000
*   IDHOLD2=TABLEID;                /* SAVE 2ND 4 BYTES        Y02014*/ 01954000
         MVC   IDHOLD2(4),TABLEID(REG1)                            0625 01955000
*   IF ID¬=IDVALID THEN             /* IS THIS VALID ID        Y02014*/ 01956000
         CLC   ID(8),IDVALID                                       0626 01957000
         BNE   @RT00626                                            0626 01958000
*     GO TO CHAINERR;               /* NO WRITE ERR MSG        Y02014*/ 01959000
*   END;                            /* END OF PROC             Y02014*/ 01960000
@EL00002 DS    0H                                                  0628 01961000
@EF00002 DS    0H                                                  0628 01962000
@ER00002 LM    @14,@12,@SA00002                                    0628 01963000
         BR    @14                                                 0628 01964000
*   END AMDPRGET                                                   0629 01965000
*                                                                  0629 01966000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */ 01967000
*/*%INCLUDE SYSLIB  (AMDPRTAB)                                       */ 01968000
*/*%INCLUDE SYSLIB  (IHAASCB )                                       */ 01969000
*/*%INCLUDE SYSLIB  (CVT     )                                       */ 01970000
*/*%INCLUDE SYSLIB  (MCHEAD  )                                       */ 01971000
*/*%INCLUDE SYSLIB  (MCCE    )                                       */ 01972000
*/*%INCLUDE SYSLIB  (MCQE    )                                       */ 01973000
*/*%INCLUDE SYSLIB  (GTFPCT  )                                       */ 01974000
*/*%INCLUDE SYSLIB  (SLE     )                                       */ 01975000
*/*%INCLUDE SYSLIB  (GTFBLOK )                                       */ 01976000
*/*%INCLUDE SYSLIB  (GTFBCB  )                                       */ 01977000
*                                                                  0629 01978000
*       ;                                                          0629 01979000
@DATA    DS    0H                                                       01980000
@CH01482 DC    H'4000'                                                  01981000
@SM01571 MVC   TRECFINL(0,@10),BULDAREA-1(@08)                          01982000
@SM01574 MVC   HEXLINE(0,@04),BLANKS                                    01983000
@SM01576 MVC   OUTBUF(0,@10),COMNTTXT(REG2)                             01984000
         DS    0F                                                       01985000
@SA00001 DS    18F                                                      01986000
@SA00002 DS    15F                                                      01987000
         DS    0F                                                       01988000
@CF00076 DC    F'1'                                                     01989000
@CF00109 DC    F'2'                                                     01990000
@CF00198 DC    F'3'                                                     01991000
@CH00198 EQU   @CF00198+2                                               01992000
@CF00065 DC    F'4'                                                     01993000
@CF00087 DC    F'7'                                                     01994000
@CF00039 DC    F'8'                                                     01995000
@CH00039 EQU   @CF00039+2                                               01996000
@CF00122 DC    F'32'                                                    01997000
@CF01251 DC    F'53'                                                    01998000
@CF01539 DC    F'255'                                                   01999000
@CF01337 DC    F'284'                                                   02000000
@CF01192 DC    F'4096'                                                  02001000
@CF01483 DC    XL4'01000000'                                            02002000
@CF01537 DC    XL4'FFFFFFFC'                                            02003000
@CF01538 DC    XL4'00000003'                                            02004000
@CF01570 DC    XL4'0000FFFF'                                            02005000
         DS    0D                                                       02006000
ASCBPTR  DS    A                                                        02007000
CVTPTR   DS    A                                                        02008000
PCTPTR   DS    A                                                        02009000
DISP1    DC    AL4(CVTGTF-CVT)                                          02010000
DISP2    DC    AL4(MCHCUR-MCHEAD)                                       02011000
DISP3    DC    AL4(MCCEQEA-MCCE)                                        02012000
DISP4    DC    AL4(MCQENAME-MCQE)                                       02013000
DISP5    DC    AL4(MCQEMCQE-MCQE)                                       02014000
DISP6    DC    AL4(MCQEAT-MCQE)                                         02015000
DISP7    DC    AL4(HQLENGTH-GTFPCT)                                     02016000
DISP8    DC    AL4(HQHEAD-GTFPCT)                                       02017000
DISP9    DC    AL4(GBUFRPTR-GTFBCB)                                     02018000
DISP10   DC    AL4(BCBCHAIN-GTFBCB)                                     02019000
DISP11   DC    AL4(CURRBLOK-GTFPCT)                                     02020000
DISP12   DC    AL4(NEXTBLOK-GTFPCT)                                     02021000
DISP13   DC    AL4(BLOKUSE-GTFBLOK)                                     02022000
DISP14   DC    AL4(BLOKAREA-GTFBLOK)                                    02023000
DISP15   DC    AL4(SLQHEAD-GTFPCT)                                      02024000
DISP16   DC    AL4(SLEASID-SLE)                                         02025000
DISP17   DC    AL4(SLETCBA-SLE)                                         02026000
DISP18   DC    AL4(SLQCHAIN-SLE)                                        02027000
DISP19   DC    AL4(SLEBCBQ-SLE)                                         02028000
DISP20   DC    AL4(BLKCHAIN-GTFBLOK)                                    02029000
DISP21   DC    AL4(GTFASCB-GTFPCT)                                      02030000
DISP22   DC    AL4(ASCBASID-ASCB)                                       02031000
ADDRSAVE DS    A                                                        02032000
BUFFCNT  DS    F                                                        02033000
BUFPTR   DS    A                                                        02034000
RECPTR   DS    A                                                        02035000
PCTSAVE  DS    A                                                        02036000
ZERO     DC    XL4'00'                                                  02037000
ADDRMASK DC    XL4'00FFFFFF'                                            02038000
COUNT    DC    F'0'                                                     02039000
K        DS    H                                                        02040000
TWO84    DC    H'284'                                                   02041000
AID      DC    AL2(0)                                                   02042000
@CC01502 DC    C'        '                                              02043000
@CC01530 DC    C'GTFBLOK'                                               02044000
@CC01507 DC    C'MCHEAD'                                                02045000
@CC01515 DC    C'GTFPCT'                                                02046000
@CC01518 DC    C'GTFBCB'                                                02047000
@CC01509 DC    C'MCCE'                                                  02048000
@CC01510 DC    C'MCQE'                                                  02049000
@CC01514 DC    C'GTF '                                                  02050000
@CC01541 DC    C'SLE'                                                   02051000
@CB01261 DC    X'00000000'                                              02052000
SRB      DS    CL4                                                      02053000
         DS    CL2                                                      02054000
EIOCTL   DS    CL48                                                     02055000
         ORG   EIOCTL                                                   02056000
EIOFLGS  DC    X'00000000'                                              02057000
         ORG   EIOFLGS                                                  02058000
FIRSTGET DS    BL1                                                      02059000
OPENFAIL EQU   EIOFLGS+0                                                02060000
DAWRAP   EQU   EIOFLGS+0                                                02061000
PSITWRAP EQU   EIOFLGS+0                                                02062000
FRSTWRAP EQU   EIOFLGS+0                                                02063000
CLOSE    EQU   EIOFLGS+0                                                02064000
SYNADSW  EQU   EIOFLGS+0                                                02065000
         ORG   EIOCTL+4                                                 02066000
EIOSTOR  DS    FL4                                                      02067000
EIOVARIB DS    CL40                                                     02068000
         ORG   EIOCTL+48                                                02069000
BUFADDR  DS    CL8                                                      02070000
         ORG   BUFADDR                                                  02071000
BUFFER   DS    AL4                                                      02072000
BUFL     DS    AL4                                                      02073000
         ORG   BUFADDR+8                                                02074000
LNGTH    DS    CL8                                                      02075000
         ORG   LNGTH                                                    02076000
LNGTH1   DS    AL4                                                      02077000
LNGTH2   DS    AL4                                                      02078000
         ORG   LNGTH+8                                                  02079000
ERMSG    DC    CL12'I/O ERROR ON'                                       02080000
LLERR    DC    CL53'TRACE RECORD LL INVALID, DD XXXXXXXX  BLOCK NO XXXXC02081000
               XX'                                                      02082000
TERMSG   DC    CL38'- EDIT PROCESSING TERMINATED'                       02083000
CONMSG   DC    CL12'- CONTINUING'                                       02084000
NOTACMSG DC    CL30'GTF NOT ACTIVE AT TIME OF DUMP'                     02085000
DUMPERCN DC    CL49'ERROR IN GTF BUFFER - CONTINUING WITH NEXT BUFFER'  02086000
DUMPERTM DC    CL39'ERROR IN GTF BUFFER CONTROL BLOCK CHAIN'            02087000
GETPTCH  DC    CL200'GETPTCH'                                           02088000
IDVALID  DS    CL8                                                      02089000
ID       DS    CL8                                                      02090000
         ORG   ID                                                       02091000
IDHOLD1  DS    CL4                                                      02092000
IDHOLD2  DS    CL4                                                      02093000
         ORG   ID+8                                                     02094000
GETSWITS DC    B'00000000'                                              02095000
         ORG   GETSWITS                                                 02096000
BLOKPROC DS    BL1                                                      02097000
THATSALL EQU   GETSWITS+0                                               02098000
@NM00024 EQU   GETSWITS+0                                               02099000
         ORG   GETSWITS+1                                               02100000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       02101000
@01      EQU   01                                                       02102000
@02      EQU   02                                                       02103000
@03      EQU   03                                                       02104000
@04      EQU   04                                                       02105000
@05      EQU   05                                                       02106000
@06      EQU   06                                                       02107000
@07      EQU   07                                                       02108000
@08      EQU   08                                                       02109000
@09      EQU   09                                                       02110000
@10      EQU   10                                                       02111000
@11      EQU   11                                                       02112000
@12      EQU   12                                                       02113000
@13      EQU   13                                                       02114000
@14      EQU   14                                                       02115000
@15      EQU   15                                                       02116000
LLSTORE  EQU   @03                                                      02117000
GTFASID  EQU   @03                                                      02118000
ASCBGTF  EQU   @03                                                      02119000
ASIDHOLD EQU   @03                                                      02120000
J        EQU   @06                                                      02121000
I        EQU   @03                                                      02122000
AEDITCBR EQU   @09                                                      02123000
REG0     EQU   @00                                                      02124000
REG1     EQU   @01                                                      02125000
REG2     EQU   @02                                                      02126000
REG8     EQU   @08                                                      02127000
REG14    EQU   @14                                                      02128000
REG15    EQU   @15                                                      02129000
COMMONRG EQU   @12                                                      02130000
PRTABREG EQU   @09                                                      02131000
         ENTRY GETPTCH                                                  02132000
AMDPRTAB EQU   0                                                        02133000
AFMG     EQU   AMDPRTAB                                                 02134000
CURREC   EQU   AMDPRTAB+4                                               02135000
DEBGFLGS EQU   AMDPRTAB+8                                               02136000
PTHFLGS1 EQU   DEBGFLGS                                                 02137000
GET      EQU   PTHFLGS1                                                 02138000
PTHFLGS2 EQU   DEBGFLGS+1                                               02139000
INRFCFGS EQU   DEBGFLGS+2                                               02140000
TERM     EQU   INRFCFGS                                                 02141000
EXTTRC   EQU   INRFCFGS                                                 02142000
IOFLGS   EQU   DEBGFLGS+3                                               02143000
GETEOF   EQU   IOFLGS                                                   02144000
USEREXIT EQU   AMDPRTAB+24                                              02145000
DDNAME   EQU   AMDPRTAB+32                                              02146000
STARTIME EQU   AMDPRTAB+40                                              02147000
STOPTIME EQU   AMDPRTAB+52                                              02148000
NAMES    EQU   AMDPRTAB+64                                              02149000
ADS      EQU   AMDPRTAB+104                                             02150000
AADS     EQU   ADS                                                      02151000
SIF      EQU   AMDPRTAB+124                                             02152000
SIOFLGS  EQU   SIF                                                      02153000
DVADS1   EQU   AMDPRTAB+128                                             02154000
IO       EQU   AMDPRTAB+228                                             02155000
IOFLGS2  EQU   IO                                                       02156000
DVADS2   EQU   AMDPRTAB+232                                             02157000
VCF      EQU   AMDPRTAB+332                                             02158000
SVCFLGS  EQU   VCF                                                      02159000
USR      EQU   AMDPRTAB+368                                             02160000
USRFLGS  EQU   USR                                                      02161000
USRTAB   EQU   AMDPRTAB+372                                             02162000
PI       EQU   AMDPRTAB+452                                             02163000
PIFLGS   EQU   PI                                                       02164000
PGMNGEN  EQU   AMDPRTAB+456                                             02165000
GENFLAGS EQU   PGMNGEN+3                                                02166000
EOF      EQU   GENFLAGS                                                 02167000
GENFLGS1 EQU   AMDPRTAB+460                                             02168000
EOFINPRO EQU   GENFLGS1                                                 02169000
TSFOUND  EQU   GENFLGS1                                                 02170000
FIRSTHSW EQU   GENFLGS1                                                 02171000
RECDLL   EQU   AMDPRTAB+461                                             02172000
AEIOCT   EQU   AMDPRTAB+476                                             02173000
AFRMAD   EQU   AMDPRTAB+488                                             02174000
ESTARTME EQU   AMDPRTAB+500                                             02175000
ESTOPTME EQU   AMDPRTAB+509                                             02176000
ASCB     EQU   0                                                        02177000
ASCBASID EQU   ASCB+36                                                  02178000
ASCBFW1  EQU   ASCB+100                                                 02179000
ASCBRCTF EQU   ASCBFW1+2                                                02180000
ASCBFLG1 EQU   ASCBFW1+3                                                02181000
ASCBDSP1 EQU   ASCB+114                                                 02182000
ASCBFLG2 EQU   ASCB+115                                                 02183000
CVTMAP   EQU   0                                                        02184000
CVT      EQU   CVTMAP                                                   02185000
CVTDAR   EQU   CVTMAP+72                                                02186000
CVTFLGS1 EQU   CVTDAR                                                   02187000
CVTDCB   EQU   CVTMAP+116                                               02188000
CVTIOQET EQU   CVTMAP+120                                               02189000
CVTIERLC EQU   CVTMAP+144                                               02190000
CVTHEAD  EQU   CVTMAP+160                                               02191000
CVTSV76C EQU   CVTHEAD                                                  02192000
CVTOPTA  EQU   CVTMAP+182                                               02193000
CVTOPTB  EQU   CVTMAP+183                                               02194000
CVTGTF   EQU   CVTMAP+236                                               02195000
CVTGTFST EQU   CVTGTF                                                   02196000
CVTGTFS  EQU   CVTGTFST                                                 02197000
CVTSTATE EQU   CVTGTFST                                                 02198000
CVTTMODE EQU   CVTGTFST                                                 02199000
CVTFORM  EQU   CVTGTFST                                                 02200000
CVTGTFA  EQU   CVTGTF+1                                                 02201000
CVTAQAVT EQU   CVTMAP+240                                               02202000
CVTTCMFG EQU   CVTAQAVT                                                 02203000
CVTVOLM2 EQU   CVTMAP+244                                               02204000
CVTTATA  EQU   CVTVOLM2                                                 02205000
CVTTSKS  EQU   CVTTATA                                                  02206000
CVTVOLF2 EQU   CVTTSKS                                                  02207000
CVTTAT   EQU   CVTTATA+1                                                02208000
CVTATER  EQU   CVTMAP+248                                               02209000
CVTEXT1  EQU   CVTMAP+252                                               02210000
CVTPURG  EQU   CVTMAP+260                                               02211000
CVTQMSG  EQU   CVTMAP+268                                               02212000
CVTDMSR  EQU   CVTMAP+272                                               02213000
CVTRSV37 EQU   CVTDMSR                                                  02214000
CVTDMSRF EQU   CVTRSV37                                                 02215000
CVTERPV  EQU   CVTMAP+316                                               02216000
CVTINTLA EQU   CVTMAP+320                                               02217000
CVTAPF   EQU   CVTMAP+324                                               02218000
CVTEXT2  EQU   CVTMAP+328                                               02219000
CVTHJES  EQU   CVTMAP+332                                               02220000
CVTPGSIA EQU   CVTMAP+348                                               02221000
CVTA1F1  EQU   CVTMAP+356                                               02222000
CVTSYSK  EQU   CVTMAP+357                                               02223000
CVTVOLM1 EQU   CVTMAP+380                                               02224000
CVTVOLF1 EQU   CVTVOLM1                                                 02225000
CVTATMCT EQU   CVTMAP+388                                               02226000
CVTXTNT1 EQU   0                                                        02227000
CVTXTNT2 EQU   0                                                        02228000
CVTDSSV  EQU   CVTXTNT2                                                 02229000
CVTFLGBT EQU   CVTXTNT2+5                                               02230000
CVTQID   EQU   CVTXTNT2+24                                              02231000
CVTRV400 EQU   CVTXTNT2+52                                              02232000
CVTRV409 EQU   CVTXTNT2+53                                              02233000
CVTATCVT EQU   CVTXTNT2+64                                              02234000
CVTRV429 EQU   CVTXTNT2+84                                              02235000
CVTRV438 EQU   CVTXTNT2+85                                              02236000
CVTRV457 EQU   CVTXTNT2+112                                             02237000
CVTRV466 EQU   CVTXTNT2+113                                             02238000
CVTFIX   EQU   0                                                        02239000
CVTRELNO EQU   CVTFIX+252                                               02240000
MCHEAD   EQU   0                                                        02241000
MCHCUR   EQU   MCHEAD+8                                                 02242000
MCHFLGS  EQU   MCHEAD+24                                                02243000
MCHFLG1  EQU   MCHFLGS                                                  02244000
MCCE     EQU   0                                                        02245000
MCCEQEA  EQU   MCCE+16                                                  02246000
MCQE     EQU   0                                                        02247000
MCQENAME EQU   MCQE+8                                                   02248000
MCQEMCQE EQU   MCQE+20                                                  02249000
MCQEAT   EQU   MCQE+32                                                  02250000
MCQEFLGS EQU   MCQE+41                                                  02251000
GTFPCT   EQU   0                                                        02252000
GTFSTAT  EQU   GTFPCT+8                                                 02253000
GTFOPTS  EQU   GTFPCT+12                                                02254000
GTFOPTS1 EQU   GTFOPTS                                                  02255000
GTFOPTS2 EQU   GTFOPTS+1                                                02256000
GTFOPTS3 EQU   GTFOPTS+2                                                02257000
GTFOPTS4 EQU   GTFOPTS+3                                                02258000
PCTCATF  EQU   GTFPCT+16                                                02259000
HQHEAD   EQU   GTFPCT+132                                               02260000
HQLENGTH EQU   GTFPCT+140                                               02261000
SLQHEAD  EQU   GTFPCT+144                                               02262000
NEXTBLOK EQU   GTFPCT+180                                               02263000
CURRBLOK EQU   GTFPCT+184                                               02264000
WRTRCOM  EQU   GTFPCT+204                                               02265000
TRMWRIT  EQU   GTFPCT+212                                               02266000
WRTRERR  EQU   GTFPCT+216                                               02267000
GTFSSRB  EQU   GTFPCT+220                                               02268000
QLOCKWRD EQU   GTFPCT+236                                               02269000
QLOCKECB EQU   GTFPCT+240                                               02270000
AUDITFLG EQU   GTFPCT+296                                               02271000
GTFASCB  EQU   GTFPCT+300                                               02272000
SLE      EQU   0                                                        02273000
SLQCHAIN EQU   SLE+8                                                    02274000
SLEHOOK  EQU   SLE+12                                                   02275000
SLEDUMP  EQU   SLEHOOK+2                                                02276000
SLEASID  EQU   SLEDUMP                                                  02277000
SLETCBA  EQU   SLEDUMP+2                                                02278000
SLEPGLST EQU   SLE+20                                                   02279000
SLEBCBQ  EQU   SLE+24                                                   02280000
SLEFLAGS EQU   SLE+32                                                   02281000
SVCPLIST EQU   0                                                        02282000
PAGELIST EQU   SVCPLIST+4                                               02283000
GTFBLOK  EQU   0                                                        02284000
BLKCHAIN EQU   GTFBLOK+8                                                02285000
BLOKAREA EQU   GTFBLOK+12                                               02286000
BLOKUSE  EQU   BLOKAREA+2                                               02287000
GTFBCB   EQU   0                                                        02288000
BCBSWAP  EQU   GTFBCB+8                                                 02289000
BCBQFLAG EQU   BCBSWAP                                                  02290000
BCBCHAIN EQU   GTFBCB+12                                                02291000
HQCHAIN  EQU   BCBCHAIN                                                 02292000
WQCHAIN  EQU   HQCHAIN                                                  02293000
EQCHAIN  EQU   WQCHAIN                                                  02294000
RQCHAIN  EQU   EQCHAIN                                                  02295000
GBUFRPTR EQU   GTFBCB+16                                                02296000
GTFBUFR  EQU   0                                                        02297000
CMPWKA   EQU   0                                                        02298000
SWAPBCB  EQU   CMPWKA+4                                                 02299000
@NM00017 EQU   SWAPBCB                                                  02300000
FRMATAB  EQU   0                                                        02301000
AGET     EQU   FRMATAB                                                  02302000
AHEX     EQU   FRMATAB+4                                                02303000
ACON     EQU   FRMATAB+8                                                02304000
AFLT     EQU   FRMATAB+12                                               02305000
AAPP     EQU   FRMATAB+16                                               02306000
AEXT     EQU   FRMATAB+20                                               02307000
ASPI     EQU   FRMATAB+28                                               02308000
ATME     EQU   FRMATAB+32                                               02309000
PRHEX    EQU   0                                                        02310000
PREXT    EQU   0                                                        02311000
AMDPRE11 EQU   52                                                       02312000
RECMAP   EQU   0                                                        02313000
RECLL    EQU   RECMAP                                                   02314000
RECAID   EQU   RECMAP+4                                                 02315000
RECFID   EQU   RECMAP+5                                                 02316000
RECTIME  EQU   RECMAP+6                                                 02317000
RECTOD   EQU   RECTIME                                                  02318000
TRECBULD EQU   0                                                        02319000
TRECFINL EQU   TRECBULD                                                 02320000
BULDAREA EQU   TRECBULD+284                                             02321000
TWORD    EQU   0                                                        02322000
CVTGTFM  EQU   0                                                        02323000
CVTGTFFG EQU   CVTGTFM                                                  02324000
CVTGTFAT EQU   CVTGTFFG                                                 02325000
AMDPRE01 EQU   0                                                        02326000
MSGAD    EQU   0                                                        02327000
MSGTEXT  EQU   4                                                        02328000
COMNTTXT EQU   0                                                        02329000
SYNADBUF EQU   50                                                       02330000
OUTBUF   EQU   1                                                        02331000
P        EQU   0                                                        02332000
P2       EQU   P                                                        02333000
LL       EQU   0                                                        02334000
HALFLL   EQU   0                                                        02335000
TABLEID  EQU   0                                                        02336000
GTFBUF   EQU   0                                                        02337000
BLL      EQU   GTFBUF                                                   02338000
RECORD   EQU   0                                                        02339000
LLL      EQU   RECORD                                                   02340000
USECNT   EQU   0                                                        02341000
ASIDCOMP EQU   0                                                        02342000
TCBHOLD  EQU   0                                                        02343000
HEXLINE  EQU   0                                                        02344000
PRAPP    EQU   0                                                        02345000
PRCON    EQU   0                                                        02346000
PRFLT    EQU   0                                                        02347000
PRGET    EQU   0                                                        02348000
PRSPI    EQU   0                                                        02349000
PRTME    EQU   0                                                        02350000
CVTS01   EQU   CVTPGSIA                                                 02351000
CVTLPDIA EQU   CVTS01+12                                                02352000
CVTDIRST EQU   CVTLPDIA                                                 02353000
CVTSLIDA EQU   CVTS01+24                                                02354000
CVTCTLFG EQU   CVTS01+50                                                02355000
CVTRV210 EQU   CVTS01+424                                               02356000
CVTRV219 EQU   CVTS01+425                                               02357000
CVTRV228 EQU   CVTS01+426                                               02358000
CVTRV237 EQU   CVTS01+427                                               02359000
CVTMFRTR EQU   CVTS01+452                                               02360000
CVTRV262 EQU   CVTS01+468                                               02361000
CVTRV271 EQU   CVTS01+469                                               02362000
CVTRV280 EQU   CVTS01+470                                               02363000
CVTRV289 EQU   CVTS01+471                                               02364000
CVTGSDA  EQU   CVTS01+600                                               02365000
EIOEXT   EQU   EIOVARIB                                                 02366000
EIOTIME  EQU   EIOEXT                                                   02367000
EIOTOD   EQU   EIOTIME                                                  02368000
EIOERCT  EQU   EIOEXT+8                                                 02369000
EIODEV   EQU   EIOEXT+12                                                02370000
EIODCB   EQU   EIOEXT+20                                                02371000
EIODCBEX EQU   EIOEXT+24                                                02372000
EIOX1    EQU   EIODCBEX                                                 02373000
EIOR14SV EQU   EIOEXT+32                                                02374000
EIODUMP  EQU   EIOVARIB                                                 02375000
EIOSTOP  EQU   EIODUMP                                                  02376000
EIOCUR   EQU   EIODUMP+4                                                02377000
EIOREC   EQU   EIODUMP+8                                                02378000
EIOLL    EQU   EIODUMP+12                                               02379000
EIOBRCT  EQU   EIODUMP+14                                               02380000
EIOBR    EQU   EIODUMP+16                                               02381000
EIORECLL EQU   EIODUMP+18                                               02382000
EIOERR   EQU   EIODUMP+32                                               02383000
LLVAL    EQU   RECLL                                                    02384000
SWS      EQU   SWF                                                      02385000
SADMP    EQU   SWS                                                      02386000
BLDAREA  EQU   BUFFER                                                   02387000
BLOKSWAP EQU   BLKCHAIN                                                 02388000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    02389000
@NM00021 EQU   SWS                                                      02390000
@NM00020 EQU   SWS                                                      02391000
EIORES4  EQU   EIODUMP+36                                               02392000
EIORES3  EQU   EIODUMP+20                                               02393000
EIOPICA  EQU   EIOEXT+28                                                02394000
EIOX2    EQU   EIODCBEX+1                                               02395000
EIORES2  EQU   EIOEXT+10                                                02396000
CVTRV628 EQU   CVTS01+728                                               02397000
CVTRV627 EQU   CVTS01+724                                               02398000
CVTRV626 EQU   CVTS01+720                                               02399000
CVTRV625 EQU   CVTS01+716                                               02400000
CVTRV624 EQU   CVTS01+712                                               02401000
CVTRV623 EQU   CVTS01+708                                               02402000
CVTRV622 EQU   CVTS01+704                                               02403000
CVTRV621 EQU   CVTS01+700                                               02404000
CVTIHASU EQU   CVTS01+696                                               02405000
CVTRV619 EQU   CVTS01+692                                               02406000
CVTRV618 EQU   CVTS01+688                                               02407000
CVTRV617 EQU   CVTS01+684                                               02408000
CVTRV616 EQU   CVTS01+680                                               02409000
CVTRV615 EQU   CVTS01+676                                               02410000
CVTRV614 EQU   CVTS01+672                                               02411000
CVTRV613 EQU   CVTS01+668                                               02412000
CVTTCASP EQU   CVTS01+664                                               02413000
CVT0PT03 EQU   CVTS01+660                                               02414000
CVT0PT0E EQU   CVTS01+656                                               02415000
CVTRV609 EQU   CVTS01+652                                               02416000
CVTCGK   EQU   CVTS01+648                                               02417000
CVTRAC   EQU   CVTS01+644                                               02418000
CVTHSM   EQU   CVTS01+640                                               02419000
CVTRV605 EQU   CVTS01+636                                               02420000
CVTRV604 EQU   CVTS01+632                                               02421000
CVTEFF02 EQU   CVTS01+628                                               02422000
CVTCBBR  EQU   CVTS01+624                                               02423000
CVTSSCR  EQU   CVTS01+620                                               02424000
CVTEVENT EQU   CVTS01+616                                               02425000
CVTCRCA  EQU   CVTS01+612                                               02426000
CVTTPIO  EQU   CVTS01+608                                               02427000
CVTADV   EQU   CVTS01+604                                               02428000
CVTGSDAB EQU   CVTGSDA                                                  02429000
CVTQV3   EQU   CVTS01+596                                               02430000
CVTQV2   EQU   CVTS01+592                                               02431000
CVTQV1   EQU   CVTS01+588                                               02432000
CVTRPT   EQU   CVTS01+584                                               02433000
CVTSSRB  EQU   CVTS01+580                                               02434000
CVTCSDRL EQU   CVTS01+576                                               02435000
CVTEXP1  EQU   CVTS01+572                                               02436000
CVTRMPMT EQU   CVTS01+568                                               02437000
CVTRMPTT EQU   CVTS01+564                                               02438000
CVTVPSA  EQU   CVTS01+560                                               02439000
CVTVSTOP EQU   CVTS01+556                                               02440000
CVTGTFR8 EQU   CVTS01+552                                               02441000
CVTQUIT  EQU   CVTS01+548                                               02442000
CVTVACR  EQU   CVTS01+544                                               02443000
CVTWTCB  EQU   CVTS01+540                                               02444000
CVTSTPRS EQU   CVTS01+536                                               02445000
CVT0PT02 EQU   CVTS01+532                                               02446000
CVTDARCM EQU   CVTS01+528                                               02447000
CVTIRECM EQU   CVTS01+524                                               02448000
CVTJRECM EQU   CVTS01+520                                               02449000
CVTVEMS0 EQU   CVTS01+516                                               02450000
CVTSPFRR EQU   CVTS01+512                                               02451000
CVTRLSTG EQU   CVTS01+508                                               02452000
CVT0TC0A EQU   CVTS01+504                                               02453000
CVTGMBR  EQU   CVTS01+500                                               02454000
CVTLFRM  EQU   CVTS01+496                                               02455000
CVTRMBR  EQU   CVTS01+492                                               02456000
CVTVIOP  EQU   CVTS01+488                                               02457000
CVTRV307 EQU   CVTS01+486                                               02458000
CVTRV306 EQU   CVTS01+484                                               02459000
CVTRV305 EQU   CVTS01+482                                               02460000
CVTRV304 EQU   CVTS01+480                                               02461000
CVTRV303 EQU   CVTS01+478                                               02462000
CVTRV302 EQU   CVTS01+476                                               02463000
CVTTRCA  EQU   CVTS01+472                                               02464000
CVTRV297 EQU   CVTRV289                                                 02465000
CVTRV296 EQU   CVTRV289                                                 02466000
CVTRV295 EQU   CVTRV289                                                 02467000
CVTRV294 EQU   CVTRV289                                                 02468000
CVTRV293 EQU   CVTRV289                                                 02469000
CVTRV292 EQU   CVTRV289                                                 02470000
CVTRV291 EQU   CVTRV289                                                 02471000
CVTRV290 EQU   CVTRV289                                                 02472000
CVTRV288 EQU   CVTRV280                                                 02473000
CVTRV287 EQU   CVTRV280                                                 02474000
CVTRV286 EQU   CVTRV280                                                 02475000
CVTRV285 EQU   CVTRV280                                                 02476000
CVTRV284 EQU   CVTRV280                                                 02477000
CVTRV283 EQU   CVTRV280                                                 02478000
CVTRV282 EQU   CVTRV280                                                 02479000
CVTRV281 EQU   CVTRV280                                                 02480000
CVTRV279 EQU   CVTRV271                                                 02481000
CVTRV278 EQU   CVTRV271                                                 02482000
CVTRV277 EQU   CVTRV271                                                 02483000
CVTRV276 EQU   CVTRV271                                                 02484000
CVTRV275 EQU   CVTRV271                                                 02485000
CVTRV274 EQU   CVTRV271                                                 02486000
CVTRV273 EQU   CVTRV271                                                 02487000
CVTRV272 EQU   CVTRV271                                                 02488000
CVTRV270 EQU   CVTRV262                                                 02489000
CVTRV269 EQU   CVTRV262                                                 02490000
CVTRV268 EQU   CVTRV262                                                 02491000
CVTRV267 EQU   CVTRV262                                                 02492000
CVTRV266 EQU   CVTRV262                                                 02493000
CVTRV265 EQU   CVTRV262                                                 02494000
CVTRV264 EQU   CVTRV262                                                 02495000
CVTRV263 EQU   CVTRV262                                                 02496000
CVTVFP   EQU   CVTS01+464                                               02497000
CVTVSI   EQU   CVTS01+460                                               02498000
CVTVPSIB EQU   CVTS01+456                                               02499000
CVTMFACT EQU   CVTMFRTR                                                 02500000
CVTMFCTL EQU   CVTS01+448                                               02501000
CVTPVBP  EQU   CVTS01+444                                               02502000
CVTPWI   EQU   CVTS01+440                                               02503000
CVTRV254 EQU   CVTS01+438                                               02504000
CVTRV253 EQU   CVTS01+436                                               02505000
CVTRV252 EQU   CVTS01+434                                               02506000
CVTRV251 EQU   CVTS01+433                                               02507000
CVTRV250 EQU   CVTS01+432                                               02508000
CVTRV249 EQU   CVTS01+431                                               02509000
CVTRV248 EQU   CVTS01+430                                               02510000
CVTRV247 EQU   CVTS01+429                                               02511000
CVTRV246 EQU   CVTS01+428                                               02512000
CVTRV245 EQU   CVTRV237                                                 02513000
CVTRV244 EQU   CVTRV237                                                 02514000
CVTRV243 EQU   CVTRV237                                                 02515000
CVTRV242 EQU   CVTRV237                                                 02516000
CVTRV241 EQU   CVTRV237                                                 02517000
CVTRV240 EQU   CVTRV237                                                 02518000
CVTRV239 EQU   CVTRV237                                                 02519000
CVTRV238 EQU   CVTRV237                                                 02520000
CVTRV236 EQU   CVTRV228                                                 02521000
CVTRV235 EQU   CVTRV228                                                 02522000
CVTRV234 EQU   CVTRV228                                                 02523000
CVTRV233 EQU   CVTRV228                                                 02524000
CVTRV232 EQU   CVTRV228                                                 02525000
CVTRV231 EQU   CVTRV228                                                 02526000
CVTRV230 EQU   CVTRV228                                                 02527000
CVTRV229 EQU   CVTRV228                                                 02528000
CVTRV227 EQU   CVTRV219                                                 02529000
CVTRV226 EQU   CVTRV219                                                 02530000
CVTRV225 EQU   CVTRV219                                                 02531000
CVTRV224 EQU   CVTRV219                                                 02532000
CVTRV223 EQU   CVTRV219                                                 02533000
CVTRV222 EQU   CVTRV219                                                 02534000
CVTRV221 EQU   CVTRV219                                                 02535000
CVTRV220 EQU   CVTRV219                                                 02536000
CVTRV218 EQU   CVTRV210                                                 02537000
CVTRV217 EQU   CVTRV210                                                 02538000
CVTRV216 EQU   CVTRV210                                                 02539000
CVTRV215 EQU   CVTRV210                                                 02540000
CVTRV214 EQU   CVTRV210                                                 02541000
CVTRV213 EQU   CVTRV210                                                 02542000
CVTRV212 EQU   CVTRV210                                                 02543000
CVTRV211 EQU   CVTRV210                                                 02544000
CVTLCCAT EQU   CVTS01+420                                               02545000
CVTPCCAT EQU   CVTS01+416                                               02546000
CVTIPCRP EQU   CVTS01+412                                               02547000
CVTIPCRI EQU   CVTS01+408                                               02548000
CVTIPCDS EQU   CVTS01+404                                               02549000
CVTAIDVT EQU   CVTS01+400                                               02550000
CVTSSAP  EQU   CVTS01+396                                               02551000
CVTEHCIR EQU   CVTS01+392                                               02552000
CVTEHDEF EQU   CVTS01+388                                               02553000
CVTDAIR  EQU   CVTS01+384                                               02554000
CVTPERFM EQU   CVTS01+380                                               02555000
CVT044R2 EQU   CVTS01+376                                               02556000
CVTFETCH EQU   CVTS01+372                                               02557000
CVTRSTWD EQU   CVTS01+368                                               02558000
CVTSPOST EQU   CVTS01+364                                               02559000
CVTIOBP  EQU   CVTS01+360                                               02560000
CVTASMVT EQU   CVTS01+356                                               02561000
CVTRECRQ EQU   CVTS01+352                                               02562000
CVTWSAC  EQU   CVTS01+348                                               02563000
CVTRV149 EQU   CVTS01+344                                               02564000
CVTWSAL  EQU   CVTS01+340                                               02565000
CVTSPSA  EQU   CVTS01+336                                               02566000
CVTGLMN  EQU   CVTS01+332                                               02567000
CVTVEAC0 EQU   CVTS01+328                                               02568000
CVT062R1 EQU   CVTS01+324                                               02569000
CVTRPOST EQU   CVTS01+320                                               02570000
CVTDQIQE EQU   CVTS01+316                                               02571000
CVTCSD   EQU   CVTS01+312                                               02572000
CVTLKRMA EQU   CVTS01+308                                               02573000
CVTRSPIE EQU   CVTS01+304                                               02574000
CVTRENQ  EQU   CVTS01+300                                               02575000
CVTLQCB  EQU   CVTS01+296                                               02576000
CVTFQCB  EQU   CVTS01+292                                               02577000
CVTQCS01 EQU   CVTS01+288                                               02578000
CVTAPFT  EQU   CVTS01+284                                               02579000
CVTPARRL EQU   CVTS01+280                                               02580000
CVTVWAIT EQU   CVTS01+276                                               02581000
CVTGSPL  EQU   CVTS01+272                                               02582000
CVTLSMQ  EQU   CVTS01+268                                               02583000
CVTGSMQ  EQU   CVTS01+264                                               02584000
CVTEXPRO EQU   CVTS01+260                                               02585000
CVTOPCTP EQU   CVTS01+256                                               02586000
CVTSIC   EQU   CVTS01+252                                               02587000
CVTTPIOS EQU   CVTS01+248                                               02588000
CVTRTMS  EQU   CVTS01+244                                               02589000
CVTSDBF  EQU   CVTS01+240                                               02590000
CVTSCBP  EQU   CVTS01+236                                               02591000
CVTSDMP  EQU   CVTS01+232                                               02592000
CVTSV60  EQU   CVTS01+228                                               02593000
CVTRTMCT EQU   CVTS01+224                                               02594000
CVTASCBL EQU   CVTS01+220                                               02595000
CVTASCBH EQU   CVTS01+216                                               02596000
CVTGDA   EQU   CVTS01+212                                               02597000
CVTASVT  EQU   CVTS01+208                                               02598000
CVTVVMDI EQU   CVTS01+204                                               02599000
CVTAQTOP EQU   CVTS01+200                                               02600000
CVTIOSCS EQU   CVTS01+196                                               02601000
CVTSDRM  EQU   CVTS01+192                                               02602000
CVTOPTE  EQU   CVTS01+188                                               02603000
CVTSTXU  EQU   CVTS01+184                                               02604000
CVTQUIS  EQU   CVTS01+180                                               02605000
CVTPARS  EQU   CVTS01+176                                               02606000
CVTS1EE  EQU   CVTS01+172                                               02607000
CVTFRAS  EQU   CVTS01+168                                               02608000
CVTQSAS  EQU   CVTS01+164                                               02609000
CVTCRAS  EQU   CVTS01+160                                               02610000
CVTCRMN  EQU   CVTS01+156                                               02611000
CVTDELCP EQU   CVTS01+152                                               02612000
CVTFRECL EQU   CVTS01+148                                               02613000
CVTGETCL EQU   CVTS01+144                                               02614000
CVTBLDCP EQU   CVTS01+140                                               02615000
CVTAUTHL EQU   CVTS01+136                                               02616000
CVTSCAN  EQU   CVTS01+132                                               02617000
CVTRV144 EQU   CVTS01+130                                               02618000
CVTMAXMP EQU   CVTS01+128                                               02619000
CVTSTCK  EQU   CVTS01+124                                               02620000
CVTRV139 EQU   CVTS01+123                                               02621000
CVTDSSAC EQU   CVTS01+122                                               02622000
CVTRV513 EQU   CVTS01+121                                               02623000
CVTIOSPL EQU   CVTS01+120                                               02624000
CVTPTGT  EQU   CVTS01+116                                               02625000
CVTCSPIE EQU   CVTS01+112                                               02626000
CVTSMFEX EQU   CVTS01+108                                               02627000
CVTOLT0A EQU   CVTS01+104                                               02628000
CVTSRBRT EQU   CVTS01+100                                               02629000
CVTPUTL  EQU   CVTS01+96                                                02630000
CVTASCRL EQU   CVTS01+92                                                02631000
CVTASCRF EQU   CVTS01+88                                                02632000
CVTRV326 EQU   CVTS01+84                                                02633000
CVTRV325 EQU   CVTS01+80                                                02634000
CVTRV324 EQU   CVTS01+76                                                02635000
CVT0VL01 EQU   CVTS01+72                                                02636000
CVTSHRVM EQU   CVTS01+68                                                02637000
CVTRV332 EQU   CVTS01+64                                                02638000
CVTTAS   EQU   CVTS01+60                                                02639000
CVTRSCN  EQU   CVTS01+56                                                02640000
CVTTRAC2 EQU   CVTS01+54                                                02641000
CVTTRACE EQU   CVTS01+52                                                02642000
CVTAPG   EQU   CVTS01+51                                                02643000
CVTSDTRC EQU   CVTCTLFG                                                 02644000
CVTGTRCE EQU   CVTCTLFG                                                 02645000
CVTNOMP  EQU   CVTCTLFG                                                 02646000
CVTRSV79 EQU   CVTCTLFG                                                 02647000
CVTDSTAT EQU   CVTCTLFG                                                 02648000
CVTRSV78 EQU   CVTCTLFG                                                 02649000
CVTRV333 EQU   CVTCTLFG                                                 02650000
CVTRV323 EQU   CVTCTLFG                                                 02651000
CVTSPVLK EQU   CVTS01+49                                                02652000
CVTRSV77 EQU   CVTS01+48                                                02653000
CVTRV331 EQU   CVTS01+44                                                02654000
CVTRV330 EQU   CVTS01+40                                                02655000
CVTRV329 EQU   CVTS01+36                                                02656000
CVTRV328 EQU   CVTS01+32                                                02657000
CVTRV322 EQU   CVTS01+28                                                02658000
CVTSLID  EQU   CVTSLIDA+1                                               02659000
CVTSYLK  EQU   CVTSLIDA                                                 02660000
CVTRV321 EQU   CVTS01+20                                                02661000
CVTRV320 EQU   CVTS01+16                                                02662000
CVTLPDIR EQU   CVTLPDIA+1                                               02663000
CVTRSV69 EQU   CVTDIRST                                                 02664000
CVTRSV68 EQU   CVTDIRST                                                 02665000
CVTRSV67 EQU   CVTDIRST                                                 02666000
CVTRSV66 EQU   CVTDIRST                                                 02667000
CVTRSV65 EQU   CVTDIRST                                                 02668000
CVTRSV64 EQU   CVTDIRST                                                 02669000
CVTRSV63 EQU   CVTDIRST                                                 02670000
CVTDICOM EQU   CVTDIRST                                                 02671000
CVTPVTP  EQU   CVTS01+8                                                 02672000
CVTLPDSR EQU   CVTS01+4                                                 02673000
CVTGETL  EQU   CVTS01                                                   02674000
RECDATA  EQU   RECORD+4                                                 02675000
@NM00023 EQU   RECORD+2                                                 02676000
@NM00022 EQU   GTFBUF+2                                                 02677000
CVTMCHD  EQU   CVTGTFM+1                                                02678000
@NM00019 EQU   CVTGTFFG                                                 02679000
RECRES1  EQU   RECMAP+2                                                 02680000
FRMRES1  EQU   FRMATAB+36                                               02681000
APRFMG   EQU   FRMATAB+24                                               02682000
SWAPUSE  EQU   SWAPBCB+2                                                02683000
@NM00018 EQU   @NM00017                                                 02684000
DECBFSWA EQU   @NM00017                                                 02685000
RQFSWAP  EQU   @NM00017                                                 02686000
HQFSWAP  EQU   @NM00017                                                 02687000
SQFSWAP  EQU   @NM00017                                                 02688000
CQFSWAP  EQU   @NM00017                                                 02689000
WQFSWAP  EQU   @NM00017                                                 02690000
EQFSWAP  EQU   @NM00017                                                 02691000
COMPBCB  EQU   CMPWKA                                                   02692000
BIGLL    EQU   GTFBUFR                                                  02693000
BCBFREQ  EQU   GTFBCB+20                                                02694000
SQCHAIN  EQU   RQCHAIN                                                  02695000
BCBUSE   EQU   BCBSWAP+2                                                02696000
DECBFLAG EQU   BCBQFLAG                                                 02697000
RQFLAG   EQU   BCBQFLAG                                                 02698000
HQFLAG   EQU   BCBQFLAG                                                 02699000
SQFLAG   EQU   BCBQFLAG                                                 02700000
CQFLAG   EQU   BCBQFLAG                                                 02701000
WQFLAG   EQU   BCBQFLAG                                                 02702000
EQFLAG   EQU   BCBQFLAG                                                 02703000
GTFBCBID EQU   GTFBCB                                                   02704000
BLOKLEN  EQU   BLOKAREA                                                 02705000
BLKINUSE EQU   BLKCHAIN                                                 02706000
BLOKID   EQU   GTFBLOK                                                  02707000
COMMONPG EQU   PAGELIST                                                 02708000
PLINDEX  EQU   SVCPLIST                                                 02709000
@NM00016 EQU   SLEFLAGS                                                 02710000
SLEINUSE EQU   SLEFLAGS                                                 02711000
SLEQCNT  EQU   SLE+28                                                   02712000
SLEEID   EQU   SLEHOOK                                                  02713000
SLEID    EQU   SLE                                                      02714000
PCTWTOMD EQU   GTFPCT+312                                               02715000
PCTDMPMD EQU   GTFPCT+308                                               02716000
TRANSMAX EQU   GTFPCT+304                                               02717000
@NM00015 EQU   AUDITFLG+3                                               02718000
AFSLEBLD EQU   AUDITFLG+3                                               02719000
WSERFG06 EQU   AUDITFLG+3                                               02720000
WSERFG05 EQU   AUDITFLG+3                                               02721000
WSERFG04 EQU   AUDITFLG+3                                               02722000
WSERFG03 EQU   AUDITFLG+3                                               02723000
WSERFG02 EQU   AUDITFLG+2                                               02724000
WSERFLAG EQU   AUDITFLG+2                                               02725000
TERMFLAG EQU   AUDITFLG+2                                               02726000
AFXWRIT  EQU   AUDITFLG+2                                               02727000
AFQLWAIT EQU   AUDITFLG+2                                               02728000
AFSLEGET EQU   AUDITFLG+2                                               02729000
AFBUFGET EQU   AUDITFLG+2                                               02730000
AFFEOB   EQU   AUDITFLG+2                                               02731000
AFBLKFIX EQU   AUDITFLG+1                                               02732000
AFEQFIX  EQU   AUDITFLG+1                                               02733000
AFPGRLSE EQU   AUDITFLG+1                                               02734000
AFWRAP   EQU   AUDITFLG+1                                               02735000
AFBUFOFF EQU   AUDITFLG+1                                               02736000
AFLDFX   EQU   AUDITFLG+1                                               02737000
AFCLOSE  EQU   AUDITFLG+1                                               02738000
AFOPEN   EQU   AUDITFLG+1                                               02739000
AFGMBLOK EQU   AUDITFLG                                                 02740000
AFGMSRB  EQU   AUDITFLG                                                 02741000
AFWAIT   EQU   AUDITFLG                                                 02742000
AFTERM   EQU   AUDITFLG                                                 02743000
AFINIT   EQU   AUDITFLG                                                 02744000
AFWWRIT  EQU   AUDITFLG                                                 02745000
AFCWRIT  EQU   AUDITFLG                                                 02746000
AFIWRIT  EQU   AUDITFLG                                                 02747000
EQSHORT  EQU   GTFPCT+292                                               02748000
SLEMAX   EQU   GTFPCT+288                                               02749000
SLECNT   EQU   GTFPCT+284                                               02750000
RQPURGE  EQU   GTFPCT+280                                               02751000
RQTOTAL  EQU   GTFPCT+276                                               02752000
WRTDLST  EQU   GTFPCT+272                                               02753000
NUMOFBUF EQU   GTFPCT+268                                               02754000
SBUFDISA EQU   GTFPCT+264                                               02755000
SLESUSED EQU   GTFPCT+260                                               02756000
EQMIN    EQU   GTFPCT+256                                               02757000
EQLENGTH EQU   GTFPCT+252                                               02758000
WQMAX    EQU   GTFPCT+248                                               02759000
WQLENGTH EQU   GTFPCT+244                                               02760000
QLECBP   EQU   QLOCKECB                                                 02761000
@NM00014 EQU   QLOCKECB                                                 02762000
@NM00013 EQU   QLOCKWRD+3                                               02763000
SCHEDBUF EQU   QLOCKWRD+2                                               02764000
POSTWRIT EQU   QLOCKWRD+1                                               02765000
QLOCK    EQU   QLOCKWRD                                                 02766000
WRITERDD EQU   GTFPCT+228                                               02767000
GTFLOSTR EQU   GTFPCT+224                                               02768000
SRBAVAIL EQU   GTFSSRB                                                  02769000
WRTRERRP EQU   WRTRERR                                                  02770000
@NM00012 EQU   WRTRERR                                                  02771000
TRMWRITP EQU   TRMWRIT                                                  02772000
@NM00011 EQU   TRMWRIT                                                  02773000
GTFCMECB EQU   GTFPCT+208                                               02774000
WRTRCOMP EQU   WRTRCOM                                                  02775000
@NM00010 EQU   WRTRCOM                                                  02776000
TRANSCNT EQU   GTFPCT+200                                               02777000
AHLRDPLQ EQU   GTFPCT+196                                               02778000
SFEOBRTN EQU   GTFPCT+192                                               02779000
SBLOKRTN EQU   GTFPCT+188                                               02780000
GBCDS    EQU   NEXTBLOK                                                 02781000
WSMODEND EQU   GTFPCT+176                                               02782000
WSMODBEG EQU   GTFPCT+172                                               02783000
BCBPAGE  EQU   GTFPCT+156                                               02784000
SLEPAGE  EQU   GTFPCT+152                                               02785000
SAVECNT  EQU   GTFPCT+148                                               02786000
QTAIL    EQU   GTFPCT+136                                               02787000
WQHEAD   EQU   GTFPCT+128                                               02788000
RQHEAD   EQU   GTFPCT+124                                               02789000
EQHEAD   EQU   GTFPCT+120                                               02790000
WPOSTSRB EQU   GTFPCT+116                                               02791000
WTSKTCBA EQU   GTFPCT+112                                               02792000
WRTRTCBA EQU   GTFPCT+108                                               02793000
TRMWTASK EQU   GTFPCT+104                                               02794000
WTSKATTH EQU   GTFPCT+100                                               02795000
WTSKINIT EQU   GTFPCT+96                                                02796000
WTASKECB EQU   GTFPCT+92                                                02797000
WMTABPTR EQU   GTFPCT+88                                                02798000
ATTCHECB EQU   GTFPCT+84                                                02799000
AHLECB   EQU   GTFPCT+80                                                02800000
STOPECBA EQU   GTFPCT+76                                                02801000
ECBADRLT EQU   GTFPCT+72                                                02802000
FIXLEN   EQU   GTFPCT+68                                                02803000
FIXPTR   EQU   GTFPCT+64                                                02804000
INITPTR  EQU   GTFPCT+60                                                02805000
MCQEPTR  EQU   GTFPCT+56                                                02806000
GTFEIDL  EQU   GTFPCT+52                                                02807000
GTFPIBL  EQU   GTFPCT+48                                                02808000
GTFPIFT  EQU   GTFPCT+44                                                02809000
GTFSVCBL EQU   GTFPCT+40                                                02810000
GTFSVCFT EQU   GTFPCT+36                                                02811000
GTFIOBL  EQU   GTFPCT+32                                                02812000
GTFIOFT  EQU   GTFPCT+28                                                02813000
GTFSIOBL EQU   GTFPCT+24                                                02814000
GTFSIOFT EQU   GTFPCT+20                                                02815000
@NM00009 EQU   PCTCATF+1                                                02816000
PCTPIF   EQU   PCTCATF+1                                                02817000
PCTSIOF  EQU   PCTCATF+1                                                02818000
PCTIOF   EQU   PCTCATF+1                                                02819000
PCTSVCF  EQU   PCTCATF+1                                                02820000
PCTRR    EQU   PCTCATF+1                                                02821000
PCTSRM   EQU   PCTCATF+1                                                02822000
PCTRNIO  EQU   PCTCATF+1                                                02823000
PCTUSR   EQU   PCTCATF                                                  02824000
PCTPI    EQU   PCTCATF                                                  02825000
@NM00008 EQU   PCTCATF                                                  02826000
PCTDSP   EQU   PCTCATF                                                  02827000
PCTSIO   EQU   PCTCATF                                                  02828000
PCTIO    EQU   PCTCATF                                                  02829000
PCTEXT   EQU   PCTCATF                                                  02830000
PCTSVC   EQU   PCTCATF                                                  02831000
OPTTIME  EQU   GTFOPTS4                                                 02832000
OPTRES3  EQU   GTFOPTS4                                                 02833000
OPTIOSIO EQU   GTFOPTS3                                                 02834000
OPTRES2  EQU   GTFOPTS3                                                 02835000
OPTRR    EQU   GTFOPTS3                                                 02836000
OPTSRM   EQU   GTFOPTS3                                                 02837000
OPTRNIO  EQU   GTFOPTS3                                                 02838000
OPTEXT   EQU   GTFOPTS3                                                 02839000
OPTIOP   EQU   GTFOPTS2                                                 02840000
OPTIO    EQU   GTFOPTS2                                                 02841000
OPTPIP   EQU   GTFOPTS2                                                 02842000
OPTPI    EQU   GTFOPTS2                                                 02843000
OPTSIOP  EQU   GTFOPTS2                                                 02844000
OPTSIO   EQU   GTFOPTS2                                                 02845000
OPTSVCP  EQU   GTFOPTS2                                                 02846000
OPTSVC   EQU   GTFOPTS2                                                 02847000
OPTPCI   EQU   GTFOPTS1                                                 02848000
OPTRES1  EQU   GTFOPTS1                                                 02849000
OPTDSP   EQU   GTFOPTS1                                                 02850000
OPTTRC   EQU   GTFOPTS1                                                 02851000
OPTUSR   EQU   GTFOPTS1                                                 02852000
OPTSYS   EQU   GTFOPTS1                                                 02853000
OPTSYSP  EQU   GTFOPTS1                                                 02854000
OPTSYSM  EQU   GTFOPTS1                                                 02855000
GTFRESV  EQU   GTFSTAT                                                  02856000
GTFDEBUG EQU   GTFSTAT                                                  02857000
GTFMODE  EQU   GTFSTAT                                                  02858000
GTFPCTID EQU   GTFPCT                                                   02859000
MCQESRB  EQU   MCQE+44                                                  02860000
@NM00007 EQU   MCQE+42                                                  02861000
@NM00006 EQU   MCQEFLGS                                                 02862000
MCQEACT  EQU   MCQEFLGS                                                 02863000
MCQESCHE EQU   MCQE+40                                                  02864000
MCQETECB EQU   MCQE+36                                                  02865000
MCQEMCCL EQU   MCQE+28                                                  02866000
MCQEMCEE EQU   MCQE+24                                                  02867000
MCQEASCB EQU   MCQE+16                                                  02868000
MCQEIDEN EQU   MCQE                                                     02869000
MCCESRB  EQU   MCCE+44                                                  02870000
MCCEECB  EQU   MCCE+40                                                  02871000
MCCEMCCE EQU   MCCE+36                                                  02872000
MCCECNT  EQU   MCCE+32                                                  02873000
MCCEOMCQ EQU   MCCE+28                                                  02874000
MCCEOCDA EQU   MCCE+24                                                  02875000
MCCEOEDA EQU   MCCE+20                                                  02876000
MCCECDA  EQU   MCCE+12                                                  02877000
MCCEEDA  EQU   MCCE+8                                                   02878000
MCCEIDEN EQU   MCCE                                                     02879000
MCHEADTR EQU   MCHEAD+48                                                02880000
MCHEADRD EQU   MCHEAD+44                                                02881000
MCHFRRAD EQU   MCHEAD+40                                                02882000
MCHMCER  EQU   MCHEAD+36                                                02883000
MCHSETD  EQU   MCHEAD+32                                                02884000
MCHSETE  EQU   MCHEAD+28                                                02885000
@NM00005 EQU   MCHFLGS+1                                                02886000
@NM00004 EQU   MCHFLG1                                                  02887000
MCHTERM  EQU   MCHFLG1                                                  02888000
MCHACT   EQU   MCHFLG1                                                  02889000
MCHDIS   EQU   MCHEAD+20                                                02890000
MCHCTL   EQU   MCHEAD+16                                                02891000
MCHCNT   EQU   MCHEAD+12                                                02892000
MCHIDEN  EQU   MCHEAD                                                   02893000
CVTLEVL  EQU   CVTRELNO+2                                               02894000
CVTNUMB  EQU   CVTRELNO                                                 02895000
CVTMDL   EQU   CVTFIX+250                                               02896000
@NM00003 EQU   CVTFIX+248                                               02897000
@NM00002 EQU   CVTFIX                                                   02898000
CVTRV482 EQU   CVTXTNT2+128                                             02899000
CVTRV481 EQU   CVTXTNT2+124                                             02900000
CVTRV480 EQU   CVTXTNT2+120                                             02901000
CVTRV479 EQU   CVTXTNT2+118                                             02902000
CVTRV478 EQU   CVTXTNT2+117                                             02903000
CVTRV477 EQU   CVTXTNT2+116                                             02904000
CVTRV476 EQU   CVTXTNT2+115                                             02905000
CVTRV475 EQU   CVTXTNT2+114                                             02906000
CVTRV474 EQU   CVTRV466                                                 02907000
CVTRV473 EQU   CVTRV466                                                 02908000
CVTRV472 EQU   CVTRV466                                                 02909000
CVTRV471 EQU   CVTRV466                                                 02910000
CVTRV470 EQU   CVTRV466                                                 02911000
CVTRV469 EQU   CVTRV466                                                 02912000
CVTRV468 EQU   CVTRV466                                                 02913000
CVTRV467 EQU   CVTRV466                                                 02914000
CVTRV465 EQU   CVTRV457                                                 02915000
CVTRV464 EQU   CVTRV457                                                 02916000
CVTRV463 EQU   CVTRV457                                                 02917000
CVTRV462 EQU   CVTRV457                                                 02918000
CVTRV461 EQU   CVTRV457                                                 02919000
CVTRV460 EQU   CVTRV457                                                 02920000
CVTRV459 EQU   CVTRV457                                                 02921000
CVTRV458 EQU   CVTRV457                                                 02922000
CVTRV456 EQU   CVTXTNT2+108                                             02923000
CVTRV455 EQU   CVTXTNT2+104                                             02924000
CVTRV454 EQU   CVTXTNT2+100                                             02925000
CVTRV453 EQU   CVTXTNT2+96                                              02926000
CVTRV452 EQU   CVTXTNT2+94                                              02927000
CVTRV451 EQU   CVTXTNT2+92                                              02928000
CVTRV450 EQU   CVTXTNT2+90                                              02929000
CVTRV449 EQU   CVTXTNT2+88                                              02930000
CVTRV448 EQU   CVTXTNT2+87                                              02931000
CVTRV447 EQU   CVTXTNT2+86                                              02932000
CVTRV446 EQU   CVTRV438                                                 02933000
CVTRV445 EQU   CVTRV438                                                 02934000
CVTRV444 EQU   CVTRV438                                                 02935000
CVTRV443 EQU   CVTRV438                                                 02936000
CVTRV442 EQU   CVTRV438                                                 02937000
CVTRV441 EQU   CVTRV438                                                 02938000
CVTRV440 EQU   CVTRV438                                                 02939000
CVTRV439 EQU   CVTRV438                                                 02940000
CVTRV437 EQU   CVTRV429                                                 02941000
CVTRV436 EQU   CVTRV429                                                 02942000
CVTRV435 EQU   CVTRV429                                                 02943000
CVTRV434 EQU   CVTRV429                                                 02944000
CVTRV433 EQU   CVTRV429                                                 02945000
CVTRV432 EQU   CVTRV429                                                 02946000
CVTRV431 EQU   CVTRV429                                                 02947000
CVTRV430 EQU   CVTRV429                                                 02948000
CVTRV428 EQU   CVTXTNT2+80                                              02949000
CVTRV427 EQU   CVTXTNT2+76                                              02950000
CVTRV426 EQU   CVTXTNT2+72                                              02951000
CVTRV425 EQU   CVTXTNT2+68                                              02952000
CVTATACT EQU   CVTATCVT                                                 02953000
CVTRV423 EQU   CVTXTNT2+62                                              02954000
CVTRV422 EQU   CVTXTNT2+60                                              02955000
CVTRV421 EQU   CVTXTNT2+58                                              02956000
CVTRV420 EQU   CVTXTNT2+56                                              02957000
CVTRV419 EQU   CVTXTNT2+55                                              02958000
CVTRV418 EQU   CVTXTNT2+54                                              02959000
CVTRV417 EQU   CVTRV409                                                 02960000
CVTRV416 EQU   CVTRV409                                                 02961000
CVTRV415 EQU   CVTRV409                                                 02962000
CVTRV414 EQU   CVTRV409                                                 02963000
CVTRV413 EQU   CVTRV409                                                 02964000
CVTRV412 EQU   CVTRV409                                                 02965000
CVTRV411 EQU   CVTRV409                                                 02966000
CVTRV410 EQU   CVTRV409                                                 02967000
CVTRV408 EQU   CVTRV400                                                 02968000
CVTRV407 EQU   CVTRV400                                                 02969000
CVTRV406 EQU   CVTRV400                                                 02970000
CVTRV405 EQU   CVTRV400                                                 02971000
CVTRV404 EQU   CVTRV400                                                 02972000
CVTRV403 EQU   CVTRV400                                                 02973000
CVTRV402 EQU   CVTRV400                                                 02974000
CVTRV401 EQU   CVTRV400                                                 02975000
CVTICB   EQU   CVTXTNT2+48                                              02976000
CVTSKTA  EQU   CVTXTNT2+44                                              02977000
CVTCCVT  EQU   CVTXTNT2+40                                              02978000
CVTRSV98 EQU   CVTXTNT2+36                                              02979000
CVTRSV97 EQU   CVTXTNT2+34                                              02980000
CVTRSV96 EQU   CVTXTNT2+32                                              02981000
CVTOLTEP EQU   CVTXTNT2+28                                              02982000
CVTQIDA  EQU   CVTQID+1                                                 02983000
CVTRSV95 EQU   CVTQID                                                   02984000
CVTRSV94 EQU   CVTXTNT2+20                                              02985000
CVTRSV93 EQU   CVTXTNT2+16                                              02986000
CVTRSV92 EQU   CVTXTNT2+12                                              02987000
CVTDEBVR EQU   CVTXTNT2+8                                               02988000
CVTRSV91 EQU   CVTXTNT2+6                                               02989000
CVTRSV9H EQU   CVTFLGBT                                                 02990000
CVTRSV9G EQU   CVTFLGBT                                                 02991000
CVTRSV9F EQU   CVTFLGBT                                                 02992000
CVTRSV9E EQU   CVTFLGBT                                                 02993000
CVTRSV9D EQU   CVTFLGBT                                                 02994000
CVTRSV9C EQU   CVTFLGBT                                                 02995000
CVTVME   EQU   CVTFLGBT                                                 02996000
CVTNPE   EQU   CVTFLGBT                                                 02997000
CVTNUCLS EQU   CVTXTNT2+4                                               02998000
CVTDSSVA EQU   CVTDSSV+1                                                02999000
CVTRSV89 EQU   CVTDSSV                                                  03000000
CVTRSV88 EQU   CVTXTNT1+8                                               03001000
CVTRSV87 EQU   CVTXTNT1+4                                               03002000
CVTFACHN EQU   CVTXTNT1                                                 03003000
CVTRV488 EQU   CVTMAP+412                                               03004000
CVTRV487 EQU   CVTMAP+408                                               03005000
CVTRV486 EQU   CVTMAP+404                                               03006000
CVTRV485 EQU   CVTMAP+400                                               03007000
CVTACTAP EQU   CVTMAP+396                                               03008000
CVTAUTH  EQU   CVTMAP+392                                               03009000
CVTATMCA EQU   CVTATMCT+1                                               03010000
CVTATMST EQU   CVTATMCT                                                 03011000
CVTRSV61 EQU   CVTMAP+384                                               03012000
CVTVOLT1 EQU   CVTVOLM1+1                                               03013000
CVTVOLI1 EQU   CVTVOLF1                                                 03014000
CVTSTOA  EQU   CVTMAP+376                                               03015000
CVTRSV58 EQU   CVTMAP+374                                               03016000
CVTRSV57 EQU   CVTMAP+372                                               03017000
CVTDDCE  EQU   CVTMAP+368                                               03018000
CVTPNWFR EQU   CVTMAP+364                                               03019000
CVTSMF   EQU   CVTMAP+360                                               03020000
CVTSULK  EQU   CVTMAP+358                                               03021000
CVTSLKO  EQU   CVTSYSK                                                  03022000
CVTSLKP  EQU   CVTSYSK                                                  03023000
CVTSLKQ  EQU   CVTSYSK                                                  03024000
CVTSLKR  EQU   CVTSYSK                                                  03025000
CVTRSV56 EQU   CVTSYSK                                                  03026000
CVTRSV55 EQU   CVTSYSK                                                  03027000
CVTRSV54 EQU   CVTSYSK                                                  03028000
CVTRSV53 EQU   CVTSYSK                                                  03029000
CVTRSV52 EQU   CVTA1F1                                                  03030000
CVTRSV51 EQU   CVTA1F1                                                  03031000
CVTRSV50 EQU   CVTA1F1                                                  03032000
CVTRSV49 EQU   CVTA1F1                                                  03033000
CVTRSV48 EQU   CVTA1F1                                                  03034000
CVTRSV47 EQU   CVTA1F1                                                  03035000
CVTSRSW  EQU   CVTA1F1                                                  03036000
CVTPFSW  EQU   CVTA1F1                                                  03037000
CVTPCVT  EQU   CVTMAP+352                                               03038000
CVTRSV46 EQU   CVTMAP+344                                               03039000
CVTRSV45 EQU   CVTMAP+340                                               03040000
CVTRSV44 EQU   CVTMAP+338                                               03041000
CVTRSV43 EQU   CVTMAP+336                                               03042000
CVTHJESA EQU   CVTHJES+1                                                03043000
CVTRSV42 EQU   CVTHJES                                                  03044000
CVTEXT2A EQU   CVTEXT2+1                                                03045000
CVTRSV41 EQU   CVTEXT2                                                  03046000
CVTAPFA  EQU   CVTAPF+1                                                 03047000
CVTRSV40 EQU   CVTAPF                                                   03048000
CVTRV518 EQU   CVTINTLA                                                 03049000
CVTRV517 EQU   CVTERPV                                                  03050000
CVTEORM  EQU   CVTMAP+312                                               03051000
CVTMCHPR EQU   CVTMAP+308                                               03052000
CVTTZ    EQU   CVTMAP+304                                               03053000
CVTJEPS  EQU   CVTMAP+300                                               03054000
CVTJESCT EQU   CVTMAP+296                                               03055000
CVTMODE  EQU   CVTMAP+292                                               03056000
CVTPTRV  EQU   CVTMAP+288                                               03057000
CVTREAL  EQU   CVTMAP+284                                               03058000
CVTRSV39 EQU   CVTMAP+280                                               03059000
CVTRSV38 EQU   CVTMAP+276                                               03060000
CVTDMSRA EQU   CVTDMSR+1                                                03061000
CVTRV634 EQU   CVTDMSRF                                                 03062000
CVTRV633 EQU   CVTDMSRF                                                 03063000
CVTRV632 EQU   CVTDMSRF                                                 03064000
CVTRV631 EQU   CVTDMSRF                                                 03065000
CVTRV630 EQU   CVTDMSRF                                                 03066000
CVTRV629 EQU   CVTDMSRF                                                 03067000
CVTUDUMP EQU   CVTDMSRF                                                 03068000
CVTSDUMP EQU   CVTDMSRF                                                 03069000
CVTQMSGA EQU   CVTQMSG+1                                                03070000
CVTRSV36 EQU   CVTQMSG                                                  03071000
CVTAMFF  EQU   CVTMAP+264                                               03072000
CVTPURGA EQU   CVTPURG+1                                                03073000
CVTRSV35 EQU   CVTPURG                                                  03074000
CVTCBSP  EQU   CVTMAP+256                                               03075000
CVTATERA EQU   CVTATER+1                                                03076000
CVTSYST  EQU   CVTATER                                                  03077000
CVTVOLT2 EQU   CVTTAT                                                   03078000
CVTVOLI2 EQU   CVTVOLF2                                                 03079000
CVTAQAVB EQU   CVTAQAVT+1                                               03080000
CVTRSV34 EQU   CVTTCMFG                                                 03081000
CVTRSV33 EQU   CVTTCMFG                                                 03082000
CVTRSV32 EQU   CVTTCMFG                                                 03083000
CVTRSV31 EQU   CVTTCMFG                                                 03084000
CVTRSV30 EQU   CVTTCMFG                                                 03085000
CVTRSV29 EQU   CVTTCMFG                                                 03086000
CVTRSV28 EQU   CVTTCMFG                                                 03087000
CVTTCRDY EQU   CVTTCMFG                                                 03088000
CVTRSV27 EQU   CVTGTFST                                                 03089000
CVTRNIO  EQU   CVTGTFST                                                 03090000
CVTUSR   EQU   CVTGTFST                                                 03091000
CVTRV318 EQU   CVTFORM                                                  03092000
CVTRV317 EQU   CVTTMODE                                                 03093000
CVTRV316 EQU   CVTSTATE                                                 03094000
CVTRV315 EQU   CVTGTFS                                                  03095000
CVTGTFAV EQU   CVTGTFS                                                  03096000
CVT0SCR1 EQU   CVTMAP+232                                               03097000
CVTRV515 EQU   CVTMAP+228                                               03098000
CVTRMS   EQU   CVTMAP+224                                               03099000
CVTPATCH EQU   CVTMAP+220                                               03100000
CVTTSCE  EQU   CVTMAP+216                                               03101000
CVTLNKSC EQU   CVTMAP+214                                               03102000
CVTQABST EQU   CVTMAP+212                                               03103000
CVTMDLDS EQU   CVTMAP+208                                               03104000
CVTUSER  EQU   CVTMAP+204                                               03105000
CVTABEND EQU   CVTMAP+200                                               03106000
CVTSMCA  EQU   CVTMAP+196                                               03107000
CVTRSV18 EQU   CVTMAP+192                                               03108000
CVTQLPAQ EQU   CVTMAP+188                                               03109000
CVTQCDSR EQU   CVTMAP+184                                               03110000
CVTRSV17 EQU   CVTOPTB                                                  03111000
CVTRSV16 EQU   CVTOPTB                                                  03112000
CVTFP    EQU   CVTOPTB                                                  03113000
CVTAPTHR EQU   CVTOPTB                                                  03114000
CVTNLOG  EQU   CVTOPTB                                                  03115000
CVTTOD   EQU   CVTOPTB                                                  03116000
CVTCTIMS EQU   CVTOPTB                                                  03117000
CVTPROT  EQU   CVTOPTB                                                  03118000
CVTXPFP  EQU   CVTOPTA                                                  03119000
CVTASCII EQU   CVTOPTA                                                  03120000
CVTRSV13 EQU   CVTOPTA                                                  03121000
CVTRSV12 EQU   CVTOPTA                                                  03122000
CVTNIP   EQU   CVTOPTA                                                  03123000
CVTDDR   EQU   CVTOPTA                                                  03124000
CVTAPR   EQU   CVTOPTA                                                  03125000
CVTCCH   EQU   CVTOPTA                                                  03126000
CVTSNCTR EQU   CVTMAP+180                                               03127000
CVTQMWR  EQU   CVTMAP+176                                               03128000
CVTQOCR  EQU   CVTMAP+172                                               03129000
CVT1EF00 EQU   CVTMAP+168                                               03130000
CVTMZ00  EQU   CVTMAP+164                                               03131000
CVTSV76Q EQU   CVTSV76C                                                 03132000
CVTRSV11 EQU   CVTMAP+156                                               03133000
CVT0PT01 EQU   CVTMAP+152                                               03134000
CVTMSER  EQU   CVTMAP+148                                               03135000
CVTRV516 EQU   CVTIERLC                                                 03136000
CVTILCH  EQU   CVTMAP+140                                               03137000
CVT0DS   EQU   CVTMAP+136                                               03138000
CVTFBOSV EQU   CVTMAP+132                                               03139000
CVTNUCB  EQU   CVTMAP+128                                               03140000
CVTIXAVL EQU   CVTMAP+124                                               03141000
CVTSV76M EQU   CVTIOQET                                                 03142000
CVTDCBA  EQU   CVTMAP+117                                               03143000
CVTMVS2  EQU   CVTDCB                                                   03144000
CVT6DAT  EQU   CVTDCB                                                   03145000
CVT4MPS  EQU   CVTDCB                                                   03146000
CVTRSV09 EQU   CVTDCB                                                   03147000
CVT4MS1  EQU   CVTDCB                                                   03148000
CVT2SPS  EQU   CVTDCB                                                   03149000
CVT1SSS  EQU   CVTDCB                                                   03150000
CVTRSV08 EQU   CVTDCB                                                   03151000
CVTSTB   EQU   CVTMAP+112                                               03152000
CVTQTD00 EQU   CVTMAP+108                                               03153000
CVTQTE00 EQU   CVTMAP+104                                               03154000
CVTCUCB  EQU   CVTMAP+100                                               03155000
CVTSJQ   EQU   CVTMAP+96                                                03156000
CVTPBLDL EQU   CVTMAP+92                                                03157000
CVTTPC   EQU   CVTMAP+88                                                03158000
CVTSVDCB EQU   CVTMAP+84                                                03159000
CVTBRET  EQU   CVTMAP+82                                                03160000
CVTEXIT  EQU   CVTMAP+80                                                03161000
CVT0FN00 EQU   CVTMAP+76                                                03162000
CVTDARA  EQU   CVTDAR+1                                                 03163000
CVTRSV07 EQU   CVTFLGS1                                                 03164000
CVTRSV06 EQU   CVTFLGS1                                                 03165000
CVTRSV05 EQU   CVTFLGS1                                                 03166000
CVTRSV04 EQU   CVTFLGS1                                                 03167000
CVTRSV03 EQU   CVTFLGS1                                                 03168000
CVTRSV02 EQU   CVTFLGS1                                                 03169000
CVTRSV01 EQU   CVTFLGS1                                                 03170000
CVTDMPLK EQU   CVTFLGS1                                                 03171000
CVTXITP  EQU   CVTMAP+68                                                03172000
CVTZDTAB EQU   CVTMAP+64                                                03173000
CVTMSLT  EQU   CVTMAP+60                                                03174000
CVTDATE  EQU   CVTMAP+56                                                03175000
CVTBTERM EQU   CVTMAP+52                                                03176000
CVTSYSAD EQU   CVTMAP+48                                                03177000
CVTXTLER EQU   CVTMAP+44                                                03178000
CVTILK2  EQU   CVTMAP+40                                                03179000
CVTILK1  EQU   CVTMAP+36                                                03180000
CVTPRLTV EQU   CVTMAP+32                                                03181000
CVTPCNVT EQU   CVTMAP+28                                                03182000
CVT0VL00 EQU   CVTMAP+24                                                03183000
CVTXAPG  EQU   CVTMAP+20                                                03184000
CVTBUF   EQU   CVTMAP+16                                                03185000
CVTJOB   EQU   CVTMAP+12                                                03186000
CVTLINK  EQU   CVTMAP+8                                                 03187000
CVT0EF00 EQU   CVTMAP+4                                                 03188000
CVTTCBP  EQU   CVTMAP                                                   03189000
ASCBEND  EQU   ASCB+208                                                 03190000
ASCBSRBT EQU   ASCB+200                                                 03191000
ASCBSWTL EQU   ASCB+196                                                 03192000
ASCBRS14 EQU   ASCB+195                                                 03193000
ASCBSMCT EQU   ASCB+194                                                 03194000
ASCBRS12 EQU   ASCB+192                                                 03195000
ASCBPCTT EQU   ASCB+188                                                 03196000
ASCBVGTT EQU   ASCB+184                                                 03197000
ASCBLGCB EQU   ASCB+180                                                 03198000
ASCBJBNS EQU   ASCB+176                                                 03199000
ASCBJBNI EQU   ASCB+172                                                 03200000
ASCBMCC  EQU   ASCB+168                                                 03201000
ASCBRTWA EQU   ASCB+164                                                 03202000
ASCBIQEA EQU   ASCB+160                                                 03203000
ASCBXMPQ EQU   ASCB+156                                                 03204000
ASCBRS01 EQU   ASCB+154                                                 03205000
ASCBFMCT EQU   ASCB+152                                                 03206000
ASCBOUXB EQU   ASCB+148                                                 03207000
ASCBOUCB EQU   ASCB+144                                                 03208000
ASCBMECB EQU   ASCB+140                                                 03209000
ASCBQECB EQU   ASCB+136                                                 03210000
ASCBCMSB EQU   ASCB+132                                                 03211000
ASCBCMSF EQU   ASCB+128                                                 03212000
ASCBTCBS EQU   ASCB+124                                                 03213000
ASCBNVSC EQU   ASCB+122                                                 03214000
ASCBVSC  EQU   ASCB+120                                                 03215000
ASCBSRBS EQU   ASCB+118                                                 03216000
ASCBSSRB EQU   ASCB+116                                                 03217000
ASCBRV06 EQU   ASCBFLG2                                                 03218000
ASCBRV05 EQU   ASCBFLG2                                                 03219000
ASCBRV04 EQU   ASCBFLG2                                                 03220000
ASCBSNQS EQU   ASCBFLG2                                                 03221000
ASCBS2S  EQU   ASCBFLG2                                                 03222000
ASCBCEXT EQU   ASCBFLG2                                                 03223000
ASCBPXMT EQU   ASCBFLG2                                                 03224000
ASCBXMPT EQU   ASCBFLG2                                                 03225000
ASCBRF07 EQU   ASCBDSP1                                                 03226000
ASCBRF06 EQU   ASCBDSP1                                                 03227000
ASCBRF05 EQU   ASCBDSP1                                                 03228000
ASCBRF04 EQU   ASCBDSP1                                                 03229000
ASCBRF03 EQU   ASCBDSP1                                                 03230000
ASCBRF02 EQU   ASCBDSP1                                                 03231000
ASCBFAIL EQU   ASCBDSP1                                                 03232000
ASCBNOQ  EQU   ASCBDSP1                                                 03233000
ASCBSWCT EQU   ASCB+112                                                 03234000
ASCBASXB EQU   ASCB+108                                                 03235000
ASCBTMCH EQU   ASCB+104                                                 03236000
ASCBNSWP EQU   ASCBFLG1                                                 03237000
ASCBTYP1 EQU   ASCBFLG1                                                 03238000
ASCBSTND EQU   ASCBFLG1                                                 03239000
ASCBABNT EQU   ASCBFLG1                                                 03240000
ASCBTERM EQU   ASCBFLG1                                                 03241000
ASCBS3S  EQU   ASCBFLG1                                                 03242000
ASCBCMSH EQU   ASCBFLG1                                                 03243000
ASCBTOFF EQU   ASCBFLG1                                                 03244000
ASCBRF01 EQU   ASCBRCTF                                                 03245000
ASCBTMLW EQU   ASCBRCTF                                                 03246000
ASCBOUT  EQU   ASCBRCTF                                                 03247000
ASCBWAIT EQU   ASCBRCTF                                                 03248000
ASCBRV08 EQU   ASCBRCTF                                                 03249000
ASCBFQU  EQU   ASCBRCTF                                                 03250000
ASCBFRS  EQU   ASCBRCTF                                                 03251000
ASCBTMNO EQU   ASCBRCTF                                                 03252000
ASCBAFFN EQU   ASCBFW1                                                  03253000
ASCBDUMP EQU   ASCB+96                                                  03254000
ASCBQSVC EQU   ASCB+92                                                  03255000
ASCBUBET EQU   ASCB+88                                                  03256000
ASCBECB  EQU   ASCB+84                                                  03257000
ASCBJSTL EQU   ASCB+80                                                  03258000
ASCBEWST EQU   ASCB+72                                                  03259000
ASCBEJST EQU   ASCB+64                                                  03260000
ASCBTSB  EQU   ASCB+60                                                  03261000
ASCBCSCB EQU   ASCB+56                                                  03262000
ASCBRSM  EQU   ASCB+52                                                  03263000
ASCBLDA  EQU   ASCB+48                                                  03264000
ASCBSTOR EQU   ASCB+44                                                  03265000
ASCBDP   EQU   ASCB+43                                                  03266000
ASCBRV07 EQU   ASCB+42                                                  03267000
ASCBIOSM EQU   ASCB+40                                                  03268000
ASCBSEQN EQU   ASCB+38                                                  03269000
ASCBCPUS EQU   ASCB+32                                                  03270000
ASCBSPL  EQU   ASCB+28                                                  03271000
ASCBLSLQ EQU   ASCB+24                                                  03272000
ASCBFSLQ EQU   ASCB+20                                                  03273000
ASCBIOSP EQU   ASCB+16                                                  03274000
ASCBLOCK EQU   ASCB+12                                                  03275000
ASCBBWDP EQU   ASCB+8                                                   03276000
ASCBFWDP EQU   ASCB+4                                                   03277000
ASCBASCB EQU   ASCB                                                     03278000
ASCBEGIN EQU   ASCB                                                     03279000
RESERVED EQU   AMDPRTAB+522                                             03280000
CVTTZONE EQU   AMDPRTAB+518                                             03281000
ESPSEC   EQU   ESTOPTME+7                                               03282000
ESPMIN   EQU   ESTOPTME+5                                               03283000
ESPHR    EQU   ESTOPTME+3                                               03284000
ESPDAY   EQU   ESTOPTME                                                 03285000
ESSEC    EQU   ESTARTME+7                                               03286000
ESMIN    EQU   ESTARTME+5                                               03287000
ESHR     EQU   ESTARTME+3                                               03288000
ESDAY    EQU   ESTARTME                                                 03289000
ADTSBUF  EQU   AMDPRTAB+496                                             03290000
OFSTDATA EQU   AMDPRTAB+494                                             03291000
OFSTEID  EQU   AMDPRTAB+492                                             03292000
REENTWKA EQU   AMDPRTAB+484                                             03293000
PRFMTADD EQU   AMDPRTAB+480                                             03294000
EXITADDR EQU   AMDPRTAB+472                                             03295000
EXITNM   EQU   AMDPRTAB+464                                             03296000
@NM00001 EQU   GENFLGS1                                                 03297000
TS       EQU   GENFLGS1                                                 03298000
RR       EQU   GENFLAGS                                                 03299000
SRM      EQU   GENFLAGS                                                 03300000
RNIO     EQU   GENFLAGS                                                 03301000
SYSM     EQU   GENFLAGS                                                 03302000
SYS      EQU   GENFLAGS                                                 03303000
DSP      EQU   GENFLAGS                                                 03304000
EXT      EQU   GENFLAGS                                                 03305000
PICODEA  EQU   PGMNGEN+2                                                03306000
PICODES  EQU   PGMNGEN                                                  03307000
Q        EQU   PI+1                                                     03308000
P01R     EQU   PIFLGS                                                   03309000
SELP     EQU   PIFLGS                                                   03310000
ALLP     EQU   PIFLGS                                                   03311000
USRNGTAB EQU   USRTAB                                                   03312000
O        EQU   USR+1                                                    03313000
N01R     EQU   USRFLGS                                                  03314000
SELU     EQU   USRFLGS                                                  03315000
ALLU     EQU   USRFLGS                                                  03316000
SVCNUMS  EQU   AMDPRTAB+336                                             03317000
M        EQU   VCF+1                                                    03318000
L        EQU   SVCFLGS                                                  03319000
SELV     EQU   SVCFLGS                                                  03320000
ALLV     EQU   SVCFLGS                                                  03321000
IODVADS  EQU   DVADS2                                                   03322000
K01RES   EQU   IO+1                                                     03323000
JJ       EQU   IOFLGS2                                                  03324000
SELI     EQU   IOFLGS2                                                  03325000
ALLI     EQU   IOFLGS2                                                  03326000
SIODVADS EQU   DVADS1                                                   03327000
II       EQU   SIF+1                                                    03328000
H        EQU   SIOFLGS                                                  03329000
NOEQU    EQU   SIOFLGS                                                  03330000
EQUIV    EQU   SIOFLGS                                                  03331000
SELS     EQU   SIOFLGS                                                  03332000
ALLS     EQU   SIOFLGS                                                  03333000
ASCBADDR EQU   AADS                                                     03334000
JOBNAMES EQU   NAMES                                                    03335000
DAY2     EQU   STOPTIME+10                                              03336000
F        EQU   STOPTIME+8                                               03337000
TIME2    EQU   STOPTIME                                                 03338000
DAY      EQU   STARTIME+10                                              03339000
D        EQU   STARTIME+8                                               03340000
TIME     EQU   STARTIME                                                 03341000
GTFWDPTR EQU   AMDPRTAB+20                                              03342000
C        EQU   DEBGFLGS+4                                               03343000
B        EQU   IOFLGS                                                   03344000
DMDFMT   EQU   INRFCFGS                                                 03345000
EDITSTOP EQU   INRFCFGS                                                 03346000
RET      EQU   INRFCFGS                                                 03347000
FMT      EQU   INRFCFGS                                                 03348000
SPIE     EQU   INRFCFGS                                                 03349000
FLMODE   EQU   INRFCFGS                                                 03350000
REMAIN   EQU   PTHFLGS2                                                 03351000
APP      EQU   PTHFLGS2                                                 03352000
REXT     EQU   PTHFLGS1                                                 03353000
FRM      EQU   PTHFLGS1                                                 03354000
FLT      EQU   PTHFLGS1                                                 03355000
HEX      EQU   PTHFLGS1                                                 03356000
CON      EQU   PTHFLGS1                                                 03357000
SCN      EQU   PTHFLGS1                                                 03358000
ROOT     EQU   PTHFLGS1                                                 03359000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      03360000
@RT00152 EQU   GETDONE                                                  03361000
@RT00154 EQU   GETFREE                                                  03362000
@RT00161 EQU   DUMPTRC                                                  03363000
@RT00164 EQU   GETREC                                                   03364000
@RT00213 EQU   BADLLMSG                                                 03365000
@RT00228 EQU   GETDONE                                                  03366000
@RT00230 EQU   POSIT                                                    03367000
@RF00232 EQU   GETDONE                                                  03368000
@RF00245 EQU   GETREC                                                   03369000
@RT00343 EQU   GETFINAL                                                 03370000
@RF00361 EQU   GETTERM                                                  03371000
@RT00369 EQU   DEBLKSA                                                  03372000
@RT00371 EQU   DEBLOCK                                                  03373000
@RT00403 EQU   CHAINERR                                                 03374000
@RT00431 EQU   SLQREQ                                                   03375000
@RT00445 EQU   BADLL                                                    03376000
@RT00449 EQU   NEXTBUF                                                  03377000
@RT00452 EQU   BADLL                                                    03378000
@RT00455 EQU   BADLL                                                    03379000
@RT00462 EQU   TESTSADP                                                 03380000
@RT00468 EQU   GETFINAL                                                 03381000
@RT00487 EQU   HEXBUFDP                                                 03382000
@RT00492 EQU   BADLL                                                    03383000
@RT00496 EQU   NEXTSABF                                                 03384000
@RT00510 EQU   NEXTSABF                                                 03385000
@RT00515 EQU   BADLL                                                    03386000
@RT00548 EQU   CHAINERR                                                 03387000
@RT00567 EQU   GETFINAL                                                 03388000
@RT00609 EQU   READAGAN                                                 03389000
@RT00626 EQU   CHAINERR                                                 03390000
@ENDDATA EQU   *                                                        03391000
         END   AMDPRGET,(C'PLS1959',0701,78074)                         03392000
./  ADD  SSI=32391055,NAME=AMDPROOT
         TITLE 'AMDPROOT EDIT ROOT MODULE                              *00001000
                       '                                                00002000
AMDPROOT CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL2(@EP00001-@MAINENT)                                   00007000
         DC    AL1(16)                                             0001 00008000
         DC    C'AMDPROOT  73.240'                                 0001 00009000
AMDPROO1 DS    0H                                                  0001 00010000
         USING *,@15                                               0001 00011000
         B     @PROLOG                                             0001 00012000
         DC    AL2(@EP00011-AMDPROO1)                                   00013000
         ENTRY AMDPROO1                                                 00014000
         DROP  @15                                                      00015000
@PROLOG  STM   @14,@12,12(@13)                                     0001 00016000
         BALR  @11,0                                               0001 00017000
@PSTART  DS    0H                                                  0001 00018000
         USING @PSTART,@11                                         0001 00019000
         ST    @13,@SA00001+4                                      0001 00020000
         LA    @14,@SA00001                                        0001 00021000
         ST    @14,8(,@13)                                         0001 00022000
         LR    @13,@14                                             0001 00023000
         AH    @15,4(,@15)                                         0001 00024000
         BR    @15                                                 0001 00025000
@EP00001 DS    0H                                                  0002 00026000
              EQUATES                   AMDPRDMP EQU MACRO              00027000
              COMMON                    EXPANDS TO AMDPRCOM TABLE       00028000
AMDPROOT       CSECT                    RE-ESTABLISH AMDPROOT CSECT     00029000
              USING COMMON,COMBASE      SET UP DSECT FOR AMDPRCOM       00030000
*   AROOT=ADDR(AMDPROO1);           /* STORE EP ADDR IN COMMON       */ 00031000
         L     @10,@CA00185                                        0009 00032000
         ST    @10,AROOT                                           0009 00033000
*   RETURN;                                                        0010 00034000
*                                                                  0010 00035000
@EL00001 L     @13,4(,@13)                                         0010 00036000
@EF00001 DS    0H                                                  0010 00037000
@ER00001 LM    @14,@12,12(@13)                                     0010 00038000
         BR    @14                                                 0010 00039000
*   /*****************************************************************/ 00040000
*   /*                                                               */ 00041000
*   /* INITIALIZE ALL FIELDS IN AMDPRTAB                             */ 00042000
*   /*                                                               */ 00043000
*   /*****************************************************************/ 00044000
*                                                                  0011 00045000
*AMDPROO1:                                                         0011 00046000
*   ENTRY;                          /* EP FOR TAB INITIALIZATION     */ 00047000
@EP00011 DS    0H                                                  0012 00048000
*   AFMG=0;                         /* PTR TO EP ADDRS TAB IN FRM    */ 00049000
         SR    @10,@10                                             0012 00050000
         ST    @10,AFMG                                            0012 00051000
*   CURREC=0;                       /* ZERO INPUT RECORD PTR         */ 00052000
         ST    @10,CURREC                                          0013 00053000
*   DEBGFLGS='0'B;                  /* ZERO ALL DEBUG FLGS     Y02014*/ 00054000
         XC    DEBGFLGS+1(11),DEBGFLGS+1                           0014 00055000
         MVI   DEBGFLGS,B'00000000'                                0014 00056000
*   ROOT='1'B;                      /* SET ON AMDPROOT BIT           */ 00057000
         OI    ROOT,B'10000000'                                    0015 00058000
*   GTFWDPTR=0;                     /* ZERO GTF OPTION WORD PTR      */ 00059000
         ST    @10,GTFWDPTR                                        0016 00060000
*                                   /*                         Y02014*/ 00061000
*   USEREXIT=' ';                   /* BLANK USER EXIT SLOT          */ 00062000
         MVI   USEREXIT+1,C' '                                     0017 00063000
         MVC   USEREXIT+2(6),USEREXIT+1                            0017 00064000
         MVI   USEREXIT,C' '                                       0017 00065000
*   DDNAME=' ';                     /* BLANK DDNAME FIELD            */ 00066000
         MVI   DDNAME+1,C' '                                       0018 00067000
         MVC   DDNAME+2(6),DDNAME+1                                0018 00068000
         MVI   DDNAME,C' '                                         0018 00069000
*   STARTIME=' ';                   /* BLANK START SLOT              */ 00070000
         MVI   STARTIME+1,C' '                                     0019 00071000
         MVC   STARTIME+2(10),STARTIME+1                           0019 00072000
         MVI   STARTIME,C' '                                       0019 00073000
*   STOPTIME=' ';                   /* BLANK STOP SLOT               */ 00074000
         MVI   STOPTIME+1,C' '                                     0020 00075000
         MVC   STOPTIME+2(10),STOPTIME+1                           0020 00076000
         MVI   STOPTIME,C' '                                       0020 00077000
*   NAMES=' ';                      /* BLANK JOBNAMES SECTION        */ 00078000
         MVI   NAMES+1,C' '                                        0021 00079000
         MVC   NAMES+2(38),NAMES+1                                 0021 00080000
         MVI   NAMES,C' '                                          0021 00081000
*   ADS='0'B;                       /* ZERO ASCB ADDRS SEC     Y02014*/ 00082000
         XC    ADS+1(19),ADS+1                                     0022 00083000
         MVI   ADS,B'00000000'                                     0022 00084000
*   SIF=0;                          /* ZERO SIO FLAGS SECTION        */ 00085000
         ST    @10,SIF                                             0023 00086000
*   DVADS1=' ';                     /* BLANK SIO DEVICES SECTION     */ 00087000
         MVI   DVADS1+1,C' '                                       0024 00088000
         MVC   DVADS1+2(98),DVADS1+1                               0024 00089000
         MVI   DVADS1,C' '                                         0024 00090000
*   IO=0;                           /* ZERO IO FLAGS SECTION         */ 00091000
         ST    @10,IO                                              0025 00092000
*   DVADS2=' ';                     /* BLANK IO DEVICES SECTION      */ 00093000
         MVI   DVADS2+1,C' '                                       0026 00094000
         MVC   DVADS2+2(98),DVADS2+1                               0026 00095000
         MVI   DVADS2,C' '                                         0026 00096000
*   VCF=0;                          /* ZERO SVC FLAGS SECTION        */ 00097000
         ST    @10,VCF                                             0027 00098000
*   SVCNUMS='0'B;                   /* ZERO SVC BIT STRING           */ 00099000
         XC    SVCNUMS+1(31),SVCNUMS+1                             0028 00100000
         MVI   SVCNUMS,B'00000000'                                 0028 00101000
*   USR=0;                          /* ZERO USR FLAGS                */ 00102000
         ST    @10,USR                                             0029 00103000
*   USRTAB=' ';                     /* BLANK USR RANGE TABLE         */ 00104000
         MVI   USRTAB+1,C' '                                       0030 00105000
         MVC   USRTAB+2(78),USRTAB+1                               0030 00106000
         MVI   USRTAB,C' '                                         0030 00107000
*   PI=0;                           /* ZERO PI FLAGS SECTION         */ 00108000
         ST    @10,PI                                              0031 00109000
*   PGMNGEN=0;                      /* ZERO PI CODES, GEN FLGS       */ 00110000
         ST    @10,PGMNGEN                                         0032 00111000
*   GENFLGS1=0;                     /* ZERO FLAGS              Y02014*/ 00112000
         MVI   GENFLGS1,X'00'                                      0033 00113000
*   EXITNM=' ';                     /* BLANK FMT/EXIT RTN NAME       */ 00114000
         MVI   EXITNM+1,C' '                                       0034 00115000
         MVC   EXITNM+2(6),EXITNM+1                                0034 00116000
         MVI   EXITNM,C' '                                         0034 00117000
*   EXITADDR=0;                     /* ZERO FMT/EXIT RTN EP ADDRS    */ 00118000
         ST    @10,EXITADDR                                        0035 00119000
*   AEIOCT=0;                       /* ZERO EDIT IO CTL TABL PTR     */ 00120000
         ST    @10,AEIOCT                                          0036 00121000
*   AFRMAD=0;                       /* ZERO EDIT EP ADDRS TBL PTR    */ 00122000
         ST    @10,AFRMAD                                          0037 00123000
*   OFSTEID=0;                      /* ZERO OFFSETS OF EID AND       */ 00124000
         STH   @10,OFSTEID                                         0038 00125000
*   OFSTDATA=0;                     /* DATA IN TRACE RECORD          */ 00126000
         STH   @10,OFSTDATA                                        0039 00127000
*   ADTSBUF=0;                      /* ZERO TIME STMP BUF ADDRS      */ 00128000
         ST    @10,ADTSBUF                                         0040 00129000
*   ESTARTME=' ';                   /* BLANK START TIME AREA         */ 00130000
         MVI   ESTARTME+1,C' '                                     0041 00131000
         MVC   ESTARTME+2(7),ESTARTME+1                            0041 00132000
         MVI   ESTARTME,C' '                                       0041 00133000
*   ESTOPTME=' ';                   /* BLANK STOP TIME AREA          */ 00134000
         MVI   ESTOPTME+1,C' '                                     0042 00135000
         MVC   ESTOPTME+2(7),ESTOPTME+1                            0042 00136000
         MVI   ESTOPTME,C' '                                       0042 00137000
*   RESERVED=' ';                   /* BLANK RESERVED SECTION        */ 00138000
         MVI   RESERVED+1,C' '                                     0043 00139000
         MVC   RESERVED+2(6),RESERVED+1                            0043 00140000
         MVI   RESERVED,C' '                                       0043 00141000
*   REENTWKA=0;                     /* CLEAR WORK AREA PTR     Y02014*/ 00142000
         ST    @10,REENTWKA                                        0044 00143000
*   RECDLL=0;                       /* CLEAR RECORD LNG        Y02014*/ 00144000
         STCM  @10,7,RECDLL                                        0045 00145000
*   CVTTZONE='';                    /* CLEAR TIME ZONE FLD     Y02014*/ 00146000
*                                                                  0046 00147000
         MVI   CVTTZONE,C' '                                       0046 00148000
         MVC   CVTTZONE+1(3),CVTTZONE                              0046 00149000
*   /*****************************************************************/ 00150000
*   /*                                                               */ 00151000
*   /* INSERT ADDRESS OF AMDPRTAB INTO AEDITCB IN AMDPRCOM           */ 00152000
*   /*                                                               */ 00153000
*   /*****************************************************************/ 00154000
*                                                                  0047 00155000
*   AEDITCB=ADDR(AMDPRTAB);         /* AEDITCB POINTS TO AMDPRTAB    */ 00156000
         LA    @10,AMDPRTAB                                        0047 00157000
         ST    @10,AEDITCB                                         0047 00158000
*   ROOT='0'B;                      /* TURN OFF OOT PATH FLAG        */ 00159000
         NI    ROOT,B'01111111'                                    0048 00160000
*   END AMDPROOT                                                   0049 00161000
*                                                                  0049 00162000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */ 00163000
*/*%INCLUDE SYSLIB  (AMDPRTAB)                                       */ 00164000
*                                                                  0049 00165000
*       ;                                                          0049 00166000
         B     @EL00001                                            0049 00167000
@DATA    DS    0H                                                       00168000
         DS    0F                                                       00169000
@SA00001 DS    18F                                                      00170000
         DS    0F                                                       00171000
@CA00185 DC    A(AMDPROO1)                                              00172000
         DS    0D                                                       00173000
AMDPRTAB DS    CL530                                                    00174000
         ORG   AMDPRTAB                                                 00175000
AFMG     DS    AL4                                                      00176000
CURREC   DS    AL4                                                      00177000
DEBGFLGS DS    BL12                                                     00178000
         ORG   DEBGFLGS                                                 00179000
PTHFLGS1 DS    BL1                                                      00180000
         ORG   PTHFLGS1                                                 00181000
ROOT     DS    BL1                                                      00182000
SCN      EQU   PTHFLGS1+0                                               00183000
GET      EQU   PTHFLGS1+0                                               00184000
CON      EQU   PTHFLGS1+0                                               00185000
HEX      EQU   PTHFLGS1+0                                               00186000
FLT      EQU   PTHFLGS1+0                                               00187000
FRM      EQU   PTHFLGS1+0                                               00188000
REXT     EQU   PTHFLGS1+0                                               00189000
         ORG   DEBGFLGS+1                                               00190000
PTHFLGS2 DS    BL1                                                      00191000
         ORG   PTHFLGS2                                                 00192000
APP      DS    BL1                                                      00193000
REMAIN   EQU   PTHFLGS2+0                                               00194000
         ORG   DEBGFLGS+2                                               00195000
INRFCFGS DS    BL1                                                      00196000
         ORG   INRFCFGS                                                 00197000
FLMODE   DS    BL1                                                      00198000
TERM     EQU   INRFCFGS+0                                               00199000
SPIE     EQU   INRFCFGS+0                                               00200000
FMT      EQU   INRFCFGS+0                                               00201000
RET      EQU   INRFCFGS+0                                               00202000
EXTTRC   EQU   INRFCFGS+0                                               00203000
EDITSTOP EQU   INRFCFGS+0                                               00204000
DMDFMT   EQU   INRFCFGS+0                                               00205000
         ORG   DEBGFLGS+3                                               00206000
IOFLGS   DS    BL1                                                      00207000
         ORG   IOFLGS                                                   00208000
GETEOF   DS    BL1                                                      00209000
B        EQU   IOFLGS+0                                                 00210000
         ORG   DEBGFLGS+4                                               00211000
C        DS    BL8                                                      00212000
         ORG   AMDPRTAB+20                                              00213000
GTFWDPTR DS    AL4                                                      00214000
USEREXIT DS    CL8                                                      00215000
DDNAME   DS    CL8                                                      00216000
STARTIME DS    CL12                                                     00217000
         ORG   STARTIME                                                 00218000
TIME     DS    CL8                                                      00219000
D        DS    CL2                                                      00220000
DAY      DS    CL2                                                      00221000
         ORG   AMDPRTAB+52                                              00222000
STOPTIME DS    CL12                                                     00223000
         ORG   STOPTIME                                                 00224000
TIME2    DS    CL8                                                      00225000
F        DS    CL2                                                      00226000
DAY2     DS    CL2                                                      00227000
         ORG   AMDPRTAB+64                                              00228000
NAMES    DS    CL40                                                     00229000
         ORG   NAMES                                                    00230000
JOBNAMES DS    5CL8                                                     00231000
         ORG   AMDPRTAB+104                                             00232000
ADS      DS    BL20                                                     00233000
         ORG   ADS                                                      00234000
AADS     DS    CL4                                                      00235000
         ORG   AADS+0                                                   00236000
ASCBADDR DS    AL4                                                      00237000
         ORG   AMDPRTAB+124                                             00238000
SIF      DS    BL4                                                      00239000
         ORG   SIF                                                      00240000
SIOFLGS  DS    BL1                                                      00241000
         ORG   SIOFLGS                                                  00242000
ALLS     DS    BL1                                                      00243000
SELS     EQU   SIOFLGS+0                                                00244000
EQUIV    EQU   SIOFLGS+0                                                00245000
NOEQU    EQU   SIOFLGS+0                                                00246000
H        EQU   SIOFLGS+0                                                00247000
         ORG   SIF+1                                                    00248000
II       DS    BL3                                                      00249000
         ORG   AMDPRTAB+128                                             00250000
DVADS1   DS    CL100                                                    00251000
         ORG   DVADS1                                                   00252000
SIODVADS DS    50CL2                                                    00253000
         ORG   AMDPRTAB+228                                             00254000
IO       DS    BL4                                                      00255000
         ORG   IO                                                       00256000
IOFLGS2  DS    BL1                                                      00257000
         ORG   IOFLGS2                                                  00258000
ALLI     DS    BL1                                                      00259000
SELI     EQU   IOFLGS2+0                                                00260000
JJ       EQU   IOFLGS2+0                                                00261000
         ORG   IO+1                                                     00262000
K01RES   DS    BL3                                                      00263000
         ORG   AMDPRTAB+232                                             00264000
DVADS2   DS    CL100                                                    00265000
         ORG   DVADS2                                                   00266000
IODVADS  DS    50CL2                                                    00267000
         ORG   AMDPRTAB+332                                             00268000
VCF      DS    BL4                                                      00269000
         ORG   VCF                                                      00270000
SVCFLGS  DS    BL1                                                      00271000
         ORG   SVCFLGS                                                  00272000
ALLV     DS    BL1                                                      00273000
SELV     EQU   SVCFLGS+0                                                00274000
L        EQU   SVCFLGS+0                                                00275000
         ORG   VCF+1                                                    00276000
M        DS    BL3                                                      00277000
         ORG   AMDPRTAB+336                                             00278000
SVCNUMS  DS    BL32                                                     00279000
USR      DS    BL4                                                      00280000
         ORG   USR                                                      00281000
USRFLGS  DS    BL1                                                      00282000
         ORG   USRFLGS                                                  00283000
ALLU     DS    BL1                                                      00284000
SELU     EQU   USRFLGS+0                                                00285000
N01R     EQU   USRFLGS+0                                                00286000
         ORG   USR+1                                                    00287000
O        DS    BL3                                                      00288000
         ORG   AMDPRTAB+372                                             00289000
USRTAB   DS    CL80                                                     00290000
         ORG   USRTAB                                                   00291000
USRNGTAB DS    20CL4                                                    00292000
         ORG   AMDPRTAB+452                                             00293000
PI       DS    BL4                                                      00294000
         ORG   PI                                                       00295000
PIFLGS   DS    BL1                                                      00296000
         ORG   PIFLGS                                                   00297000
ALLP     DS    BL1                                                      00298000
SELP     EQU   PIFLGS+0                                                 00299000
P01R     EQU   PIFLGS+0                                                 00300000
         ORG   PI+1                                                     00301000
Q        DS    BL3                                                      00302000
         ORG   AMDPRTAB+456                                             00303000
PGMNGEN  DS    BL4                                                      00304000
         ORG   PGMNGEN                                                  00305000
PICODES  DS    BL2                                                      00306000
PICODEA  DS    BL1                                                      00307000
GENFLAGS DS    BL1                                                      00308000
         ORG   GENFLAGS                                                 00309000
EXT      DS    BL1                                                      00310000
DSP      EQU   GENFLAGS+0                                               00311000
SYS      EQU   GENFLAGS+0                                               00312000
SYSM     EQU   GENFLAGS+0                                               00313000
RNIO     EQU   GENFLAGS+0                                               00314000
SRM      EQU   GENFLAGS+0                                               00315000
RR       EQU   GENFLAGS+0                                               00316000
EOF      EQU   GENFLAGS+0                                               00317000
         ORG   AMDPRTAB+460                                             00318000
GENFLGS1 DS    BL1                                                      00319000
         ORG   GENFLGS1                                                 00320000
TS       DS    BL1                                                      00321000
EOFINPRO EQU   GENFLGS1+0                                               00322000
TSFOUND  EQU   GENFLGS1+0                                               00323000
FIRSTHSW EQU   GENFLGS1+0                                               00324000
@NM00001 EQU   GENFLGS1+0                                               00325000
         ORG   AMDPRTAB+461                                             00326000
RECDLL   DS    FL3                                                      00327000
EXITNM   DS    CL8                                                      00328000
EXITADDR DS    AL4                                                      00329000
AEIOCT   DS    AL4                                                      00330000
PRFMTADD DS    AL4                                                      00331000
REENTWKA DS    AL4                                                      00332000
AFRMAD   DS    AL4                                                      00333000
OFSTEID  DS    FL2                                                      00334000
OFSTDATA DS    FL2                                                      00335000
ADTSBUF  DS    AL4                                                      00336000
ESTARTME DS    CL9                                                      00337000
         ORG   ESTARTME                                                 00338000
ESDAY    DS    CL3                                                      00339000
ESHR     DS    CL2                                                      00340000
ESMIN    DS    CL2                                                      00341000
ESSEC    DS    CL2                                                      00342000
         ORG   AMDPRTAB+509                                             00343000
ESTOPTME DS    CL9                                                      00344000
         ORG   ESTOPTME                                                 00345000
ESPDAY   DS    CL3                                                      00346000
ESPHR    DS    CL2                                                      00347000
ESPMIN   DS    CL2                                                      00348000
ESPSEC   DS    CL2                                                      00349000
         ORG   AMDPRTAB+518                                             00350000
CVTTZONE DS    CL4                                                      00351000
RESERVED DS    CL8                                                      00352000
         ORG   AMDPRTAB+530                                             00353000
ROOTPTCH DC    CL100'ROOTPTCH'                                          00354000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       00355000
@01      EQU   01                                                       00356000
@02      EQU   02                                                       00357000
@03      EQU   03                                                       00358000
@04      EQU   04                                                       00359000
@05      EQU   05                                                       00360000
@06      EQU   06                                                       00361000
@07      EQU   07                                                       00362000
@08      EQU   08                                                       00363000
@09      EQU   09                                                       00364000
@10      EQU   10                                                       00365000
@11      EQU   11                                                       00366000
@12      EQU   12                                                       00367000
@13      EQU   13                                                       00368000
@14      EQU   14                                                       00369000
@15      EQU   15                                                       00370000
AEDITCBR EQU   @09                                                      00371000
COMPTREG EQU   @12                                                      00372000
         ENTRY ROOTPTCH                                                 00373000
         ENTRY AMDPRTAB                                                 00374000
@ENDDATA EQU   *                                                        00375000
         END   AMDPROOT,(C'PL/S-II',0502,73240)                         00376000
./  ADD  SSI=61580065,NAME=AMDPRREC
         TITLE 'AMDPRREC -TIMESTAMP, LOST DATA RECORDS && HEX DUMP     *00001000
                         '                                              00002000
AMDPRCON CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL2(@EP00001-@MAINENT)                                   00007000
         DC    AL1(16)                                             0001 00008000
         DC    C'AMDPRCON  76.159'                                 0001 00009000
AMDPRHEX DS    0H                                                  0001 00010000
         USING *,@15                                               0001 00011000
         B     @PROLOG                                             0001 00012000
         DC    AL2(@EP00124-AMDPRHEX)                                   00013000
         ENTRY AMDPRHEX                                                 00014000
         DROP  @15                                                      00015000
@PROLOG  ST    @14,12(,@13)                                        0001 00016000
         STM   @00,@12,20(@13)                                     0001 00017000
         BALR  @11,0                                               0001 00018000
@PSTART  DS    0H                                                  0001 00019000
         USING @PSTART,@11                                         0001 00020000
         ST    @13,@SA00001+4                                      0001 00021000
         LA    @14,@SA00001                                        0001 00022000
         ST    @14,8(,@13)                                         0001 00023000
         LR    @13,@14                                             0001 00024000
         AH    @15,4(,@15)                                         0001 00025000
         BR    @15                                                 0001 00026000
@EP00001 DS    0H                                                  0002 00027000
          EQUATES                      AMDPRDMP EQU MACRO               00028000
          COMMON                       EXPANDS TO AMDPRCOM TABLE        00029000
AMDPRCON  CSECT                        RE-ESTABLISH AMDPRCON CSECT      00030000
          USING COMMON,COMBASE         SET UP DSECT FOR AMDPRCOM        00031000
*   AEDITCBR=AEDITCB;               /* INITIALIZE AMDPRTAB PTR       */ 00032000
         L     AEDITCBR,AEDITCB                                    0074 00033000
*   CON='1'B;                       /* INDICATE AMDPRCON PROCESS     */ 00034000
         OI    CON(AEDITCBR),B'00010000'                           0075 00035000
*   IF RECFID='01'X THEN                                           0076 00036000
         L     @10,CURREC(,AEDITCBR)                               0076 00037000
         CLI   RECFID(@10),X'01'                                   0076 00038000
         BE    @RT00076                                            0076 00039000
*     GOTO AMDPRTS;                 /* TIME STAMP RECORD             */ 00040000
*   IF RECFID='02'X THEN            /* LOST DATA REC           Y02014*/ 00041000
         CLI   RECFID(@10),X'02'                                   0078 00042000
         BE    @RT00078                                            0078 00043000
*     GOTO AMDPRLD;                 /* FORMAT LOST DATA REC    Y02014*/ 00044000
*   IF RECFID='03'X THEN            /* LOST BLOK RECORD        Y02014*/ 00045000
         CLI   RECFID(@10),X'03'                                   0080 00046000
         BE    @RT00080                                            0080 00047000
*     GOTO AMDPRLB;                 /* FORMAT LOST BLK REC     Y02014*/ 00048000
*/********************************************************************/ 00049000
*/*                                                                  */ 00050000
*/* LOST DATA RECORD ROUTINE                                         */ 00051000
*/*                                                                  */ 00052000
*/********************************************************************/ 00053000
*                                                                  0082 00054000
*AMDPRLD:                                                          0082 00055000
*   PARMREG=ADDR(LDPLST);           /* ADDRS LOST DATA FORMAT PTRN   */ 00056000
AMDPRLD  LA    PARMREG,LDPLST                                      0082 00057000
*   CALL AMDTMCHK;                  /* SEE IF TIME STAMP PENDING     */ 00058000
         BAL   @14,AMDTMCHK                                        0083 00059000
*   CALL AMDPRGFR;                  /* FORMAT LOST DATA OUTPUT BUF   */ 00060000
         L     @15,AFMTLINE                                        0084 00061000
         BALR  @14,@15                                             0084 00062000
*   WREG2=RECLSTEV&'7FFFFFFF'X;     /* LOW ORDER 31 BITS             */ 00063000
         L     @10,CURREC(,AEDITCBR)                               0085 00064000
         ICM   WREG2,15,RECLSTEV(@10)                              0085 00065000
         N     WREG2,@CF00347                                      0085 00066000
*   GEN;                                                           0086 00067000
         CVD   WREG2,WORK1             LOST EVENT COUNT TO DECIMAL      00068000
         UNPK  SUBBUF(10),WORK1+2(6)   CONVERT TO PRINTABLE FORM        00069000
*   SUBBUF(10)=SUBBUF(10)|'F0'X;    /* FIX THE SIGN                  */ 00070000
         OI    SUBBUF+9,X'F0'                                      0087 00071000
*/*                                                                  */ 00072000
*/* LEFT JUSTIFY THE NUMBER OF LOST EVENTS IN THE OUTPUT BUFFER      */ 00073000
*/*                                                                  */ 00074000
*                                                                  0088 00075000
*   DO I=1 TO 10-1;                 /* CHECK UP TO TENS DIGIT        */ 00076000
         LA    I,1                                                 0088 00077000
@DL00088 DS    0H                                                  0089 00078000
*     IF SUBBUF(I)¬='0' THEN        /* IS IT A LEADING ZERO ?        */ 00079000
         LA    @10,SUBBUF-1(I)                                     0089 00080000
         CLI   0(@10),C'0'                                         0089 00081000
         BNE   @RT00089                                            0089 00082000
*       GOTO AMDLJUST;              /* NO- MOVE STRING               */ 00083000
*   END;                                                           0091 00084000
         AL    I,@CF00045                                          0091 00085000
         C     I,@CF00167                                          0091 00086000
         BNH   @DL00088                                            0091 00087000
*AMDLJUST:                                                         0092 00088000
*   NUMLEBUF(1:10+1-I)=             /* LEFT JUSTIFY                  */ 00089000
*       SUBBUF(I:10);                                              0092 00090000
AMDLJUST L     @10,CURBUF                                          0092 00091000
         LA    @08,11                                              0092 00092000
         SLR   @08,I                                               0092 00093000
         BCTR  @08,0                                               0092 00094000
         LA    @15,SUBBUF-1(I)                                     0092 00095000
         EX    @08,@SM00429                                        0092 00096000
*   GOTO AMDPTIM;                   /* TIME CONVERT ROUTINE          */ 00097000
         B     AMDPTIM                                             0093 00098000
*/********************************************************************/ 00099000
*/*    LOST BLOK RECORD ROUTINE                                Y02014*/ 00100000
*/********************************************************************/ 00101000
*                                                                  0094 00102000
*AMDPRLB:                                                          0094 00103000
*   PARMREG=ADDR(LBPLST);           /* ADDR FORMAT PATTERN     Y02014*/ 00104000
AMDPRLB  LA    PARMREG,LBPLST                                      0094 00105000
*   CALL AMDTMCHK;                  /* SEE IF TIME STAMP PENDING   0095 00106000
*                                                              Y02014*/ 00107000
         BAL   @14,AMDTMCHK                                        0095 00108000
*   CALL AMDPRGFR;                  /* FORMAT BUFFER           Y02014*/ 00109000
         L     @15,AFMTLINE                                        0096 00110000
         BALR  @14,@15                                             0096 00111000
*   GOTO AMDPTIM;                   /* TIME CONVERT RTN        Y02014*/ 00112000
         B     AMDPTIM                                             0097 00113000
*                                                                  0098 00114000
*/********************************************************************/ 00115000
*/*                                                                  */ 00116000
*/* TIME STAMP RECORD ROUTINE                                        */ 00117000
*/*                                                                  */ 00118000
*/********************************************************************/ 00119000
*                                                                  0098 00120000
*AMDPRTS:                                                          0098 00121000
*   PARMREG=ADDR(TSPLST);           /* ADDRS TIME STAMP FORMAT PTR   */ 00122000
AMDPRTS  LA    PARMREG,TSPLST                                      0098 00123000
*   SAVEBUF=CURBUF;                 /* SAVE CURBUF POINTER           */ 00124000
         L     @10,CURBUF                                          0099 00125000
         ST    @10,SAVEBUF                                         0099 00126000
*   CURBUF=ADDR(TSBUF);             /* SET PTR TO TIME STMP BUF      */ 00127000
         LA    @10,TSBUF                                           0100 00128000
         ST    @10,CURBUF                                          0100 00129000
*   ADTSBUF=CURBUF;                 /* MAKE AVAILBL TIME BUF PTR     */ 00130000
         ST    @10,ADTSBUF(,AEDITCBR)                              0101 00131000
*   TSBUF=' ';                      /* INIT TSBUF TO BLANKS          */ 00132000
         MVI   TSBUF+1,C' '                                        0102 00133000
         MVC   TSBUF+2(131),TSBUF+1                                0102 00134000
         MVI   TSBUF,C' '                                          0102 00135000
*   TS='1'B;                        /* TURN ON TIME REC PENDING SW   */ 00136000
         OI    TS(AEDITCBR),B'10000000'                            0103 00137000
*   CALL AMDPRGFR;                  /* FORMAT TIME STAMP BUFFER      */ 00138000
         L     @15,AFMTLINE                                        0104 00139000
         BALR  @14,@15                                             0104 00140000
*/********************************************************************/ 00141000
*/*                                                                  */ 00142000
*/* TIME CONVERSION ROUTINE                                          */ 00143000
*/*                                                                  */ 00144000
*/********************************************************************/ 00145000
*                                                                  0105 00146000
*AMDPTIM:                                                          0105 00147000
*   TIMEBUF='00.00.00.000000';      /* INITIALIZE TIME BUFFER        */ 00148000
AMDPTIM  L     @10,CURBUF                                          0105 00149000
         MVC   TIMEBUF(15,@10),@CC00355                            0105 00150000
*   ADCVTTZ=ADDR(RECVTTZ);          /* ADDR CVT TIME ZONE VALUE      */ 00151000
         L     @10,CURREC(,AEDITCBR)                               0106 00152000
         LA    @08,RECVTTZ(,@10)                                   0106 00153000
         ST    @08,ADCVTTZ                                         0106 00154000
*   ADTODCLK=ADDR(RECTOD);          /* ADDR TOD VALUE                */ 00155000
         LA    @10,RECTOD(,@10)                                    0107 00156000
         ST    @10,ADTODCLK                                        0107 00157000
*   ADTMEBUF=ADDR(TMEBUF);          /* ADDR OUTPUT AREA              */ 00158000
         LA    @10,TMEBUF                                          0108 00159000
         ST    @10,ADTMEBUF                                        0108 00160000
*   PARMREG=ADDR(TIMEPARM);         /* ADDR PARM LIST IN R 1         */ 00161000
         LA    PARMREG,TIMEPARM                                    0109 00162000
*   WREG2=1;                        /* CONVERT TO FULL TIME          */ 00163000
         LA    WREG2,1                                             0110 00164000
*   CALL TODCNVRT;                  /* CALL TOD CONVERSION RTN       */ 00165000
         L     @15,QATMERTN                                        0111 00166000
         BALR  @14,@15                                             0111 00167000
*/********************************************************************/ 00168000
*/*                                                                  */ 00169000
*/* PRINT LOST DATA RECORD AND TERMINATE - TIME STAMP, REINIT BUF PTR*/ 00170000
*/*                                                                  */ 00171000
*/********************************************************************/ 00172000
*                                                                  0112 00173000
*AMDPRIT:                                                          0112 00174000
*   IF RECFID='01'X THEN            /* IF TIME STAMP RECORD          */ 00175000
AMDPRIT  L     @10,CURREC(,AEDITCBR)                               0112 00176000
         CLI   RECFID(@10),X'01'                                   0112 00177000
         BNE   @RF00112                                            0112 00178000
*     DO;                           /* THEN DO THE FOLLOWING         */ 00179000
*                                                                  0113 00180000
*       /*************************************************************/ 00181000
*       /*                                                           */ 00182000
*       /* INSERT RESULTS IN OUTPUT BUFFER                           */ 00183000
*       /*                                                           */ 00184000
*       /*************************************************************/ 00185000
*                                                                  0114 00186000
*       DAYBUF=DAYYR;               /* DAY TO OUTPUT BUF             */ 00187000
         L     @10,CURBUF                                          0114 00188000
         MVC   DAYBUF(3,@10),DAYYR                                 0114 00189000
*       YRBUF=YEAR;                 /* YEAR TO OUT BUF               */ 00190000
         MVC   YRBUF(4,@10),YEAR                                   0115 00191000
*       TIMEBUF=TOD;                /* TIME TO OUT BUF               */ 00192000
         MVC   TIMEBUF(15,@10),TOD                                 0116 00193000
*       CURBUF=SAVEBUF;             /* REINITIALIZE CURBUF           */ 00194000
         L     @10,SAVEBUF                                         0117 00195000
         ST    @10,CURBUF                                          0117 00196000
*       GOTO AMDRET;                /* RETURN TO AMDPRFRM            */ 00197000
         B     AMDRET                                              0118 00198000
*     END;                                                         0119 00199000
*   TIMEBUF=TOD;                    /* TIME TO BUFFER          Y02014*/ 00200000
@RF00112 L     @10,CURBUF                                          0120 00201000
         MVC   TIMEBUF(15,@10),TOD                                 0120 00202000
*   GEN(BRWRITE 2);                 /* PRINT OUTPUT BUFFER     Y02014*/ 00203000
         BRWRITE 2                                                      00204000
*AMDRET:                                                           0122 00205000
*   CON='0'B;                       /* INDICATE AMDPRCON TERM        */ 00206000
AMDRET   NI    CON(AEDITCBR),B'11101111'                           0122 00207000
*   RETURN;                         /* RETURN TO AMDPRFRM            */ 00208000
@EL00001 L     @13,4(,@13)                                         0123 00209000
@EF00001 DS    0H                                                  0123 00210000
@ER00001 L     @14,12(,@13)                                        0123 00211000
         LM    @00,@12,20(@13)                                     0123 00212000
         BR    @14                                                 0123 00213000
*AMDPRHEX:                                                         0124 00214000
*   ENTRY;                          /* ENTRY FOR HEX DUMP            */ 00215000
@EP00124 DS    0H                                                  0125 00216000
*   RFY                                                            0125 00217000
*    (RECPTR2) RSTD;                /* REG2 FOR RECORD STRUCTURE   0125 00218000
*                                                              Y02014*/ 00219000
*   AEDITCBR=AEDITCB;               /* PUT ADDR OF AMDPRTAB IN BASE  */ 00220000
         L     AEDITCBR,AEDITCB                                    0126 00221000
*   HEX='1'B;                       /* INDICATE AMDPRHEX IN PROCESS  */ 00222000
         OI    HEX(AEDITCBR),B'00001000'                           0127 00223000
*   CALL AMDTMCHK;                  /* PRINT TIME STMP, IF PENDING   */ 00224000
         BAL   @14,AMDTMCHK                                        0128 00225000
*   IF GET='1'B THEN                /* CONTROL FROM GET        Y02014*/ 00226000
         TM    GET(AEDITCBR),B'00100000'                           0129 00227000
         BNO   @RF00129                                            0129 00228000
*     DO;                           /* YES                     Y02014*/ 00229000
*       IF FIRSTHSW='0'B THEN       /* FIRST CALL              Y02014*/ 00230000
         TM    FIRSTHSW(AEDITCBR),B'00010000'                      0131 00231000
         BNZ   @RF00131                                            0131 00232000
*         DO;                       /* YES                     Y02014*/ 00233000
*           OFFSET=0;               /* BEGINNING OFFSET        Y02014*/ 00234000
         SLR   @10,@10                                             0133 00235000
         STH   @10,OFFSET                                          0133 00236000
*           GEN(BRWRITE SKIP);      /* SKIP TO NEW PAGE        Y02014*/ 00237000
         BRWRITE SKIP                                                   00238000
*           FIRSTHSW='1'B;          /* FIRST PASS DONE         Y02014*/ 00239000
         OI    FIRSTHSW(AEDITCBR),B'00010000'                      0135 00240000
*         END;                      /*                         Y02014*/ 00241000
*       ELSE                                                       0137 00242000
*         OFFSET=OFFSET+32;         /* INCREMENT OFFSET        Y02014*/ 00243000
         B     @RC00131                                            0137 00244000
@RF00131 LA    @10,32                                              0137 00245000
         AH    @10,OFFSET                                          0137 00246000
         STH   @10,OFFSET                                          0137 00247000
*       CALL CONVRT;                /* DO CONVERSION           Y02014*/ 00248000
@RC00131 BAL   @14,CONVRT                                          0138 00249000
*       GOTO HEXDONE;               /* PREPARE FOR RETURN      Y02014*/ 00250000
         B     HEXDONE                                             0139 00251000
*     END;                          /* END OF GET PROCESSING   Y02014*/ 00252000
*   TIMEADJ=0;                      /* SET TIME-STAMP ADJUSTMENT     */ 00253000
*                                                                  0141 00254000
@RF00129 SLR   TIMEADJ,TIMEADJ                                     0141 00255000
*   /*****************************************************************/ 00256000
*   /*                                                               */ 00257000
*   /* SET THE POINTER TO THE EID FIELD OF CURRENT RECORD            */ 00258000
*   /*                                                               */ 00259000
*   /*****************************************************************/ 00260000
*                                                                  0142 00261000
*   IF OPTTIME='1'B THEN            /* IS TIME-STAMP IN REC    Y02014*/ 00262000
         L     @10,GTFWDPTR(,AEDITCBR)                             0142 00263000
         TM    OPTTIME(@10),B'00000001'                            0142 00264000
         BNO   @RF00142                                            0142 00265000
*     DO;                                                          0143 00266000
*       RECPTR2=CURREC+14;          /* YES, INCLUDE TIME-STAMP REC 0144 00267000
*                                      LENGTH FOR EID PTR      Y02014*/ 00268000
         LA    RECPTR2,14                                          0144 00269000
         AL    RECPTR2,CURREC(,AEDITCBR)                           0144 00270000
*       TIMEADJ=8;                  /* LENGTH OF TIME DATA RECORD    */ 00271000
         LA    TIMEADJ,8                                           0145 00272000
*     END;                          /*                         Y02014*/ 00273000
*   ELSE                                                           0147 00274000
*     RECPTR2=CURREC+6;             /* OTHERWISE OMIT TIME LENGTH    */ 00275000
         B     @RC00142                                            0147 00276000
@RF00142 LA    RECPTR2,6                                           0147 00277000
         AL    RECPTR2,CURREC(,AEDITCBR)                           0147 00278000
*   IF EIDFRST¬='1110'B THEN        /* IF EID DOES NOT BEGIN WITH    */ 00279000
@RC00142 TM    EIDFRST(RECPTR2),B'11100000'                        0148 00280000
         BNO   @RT00148                                            0148 00281000
         TM    EIDFRST(RECPTR2),B'00010000'                        0148 00282000
         BZ    @RF00148                                            0148 00283000
@RT00148 DS    0H                                                  0149 00284000
*     DMPLABEL=SYSTEM;              /* HEX E THEN A SYSTEM LABEL IS     00285000
*                                      PUT ON THE OUTPUT             */ 00286000
         MVI   DMPLABEL+6,C' '                                     0149 00287000
         MVC   DMPLABEL+7(2),DMPLABEL+6                            0149 00288000
         MVC   DMPLABEL(6),SYSTEM                                  0149 00289000
*   ELSE                                                           0150 00290000
*                                                                  0150 00291000
*     /***************************************************************/ 00292000
*     /*                                                             */ 00293000
*     /* MUST TEST FID TO DETERMINE FORMAT OUTPUT LABEL              */ 00294000
*     /*                                                             */ 00295000
*     /***************************************************************/ 00296000
*                                                                  0150 00297000
*     IF HEXFID='00'X THEN          /* DO FID INDICATE HEX FORMAT    */ 00298000
         B     @RC00148                                            0150 00299000
@RF00148 L     @10,CURREC(,AEDITCBR)                               0150 00300000
         CLI   HEXFID(@10),X'00'                                   0150 00301000
         BNE   @RF00150                                            0150 00302000
*       DMPLABEL=HEXFORMT;          /* YES, MOVE TITLE FOR PATTERN   */ 00303000
         MVC   DMPLABEL(9),HEXFORMT                                0151 00304000
*     ELSE                                                         0152 00305000
*       IF HEXFID<='50'X            /* IS IT A USER FORMAT ?         */ 00306000
*         THEN                      /* YES, PUT IN THE USER LABEL    */ 00307000
         B     @RC00150                                            0152 00308000
@RF00150 L     @10,CURREC(,AEDITCBR)                               0152 00309000
         CLI   HEXFID(@10),X'50'                                   0152 00310000
         BH    @RF00152                                            0152 00311000
*         DMPLABEL=USER;                                           0153 00312000
         MVI   DMPLABEL+4,C' '                                     0153 00313000
         MVC   DMPLABEL+5(4),DMPLABEL+4                            0153 00314000
         MVC   DMPLABEL(4),USER                                    0153 00315000
*       ELSE                                                       0154 00316000
*         DMPLABEL=SUBSYS;          /* IT MUST BE A SUBSYS FORMAT    */ 00317000
*                                                                  0154 00318000
         B     @RC00152                                            0154 00319000
@RF00152 MVI   DMPLABEL+6,C' '                                     0154 00320000
         MVC   DMPLABEL+7(2),DMPLABEL+6                            0154 00321000
         MVC   DMPLABEL(6),SUBSYS                                  0154 00322000
*   /*****************************************************************/ 00323000
*   /*                                                               */ 00324000
*   /* PUT THE ADDRESS OF ID FEILDS IN THE FORMAT PATTERN            */ 00325000
*   /*                                                               */ 00326000
*   /*****************************************************************/ 00327000
*                                                                  0155 00328000
*   DATAPTR=ADDR(HEXAID);           /* PUT IN AID DATA ADDRESS       */ 00329000
@RC00152 DS    0H                                                  0155 00330000
@RC00150 DS    0H                                                  0155 00331000
@RC00148 L     @10,CURREC(,AEDITCBR)                               0155 00332000
         LA    @10,HEXAID(,@10)                                    0155 00333000
         ST    @10,DATAPTR                                         0155 00334000
*   EIDPTR=ADDR(HEXEID);            /* PUT IN EID DATA ADDRESS       */ 00335000
*                                                                  0156 00336000
         ST    RECPTR2,EIDPTR                                      0156 00337000
*   /*****************************************************************/ 00338000
*   /*                                                               */ 00339000
*   /* GO FORMAT THE ID AND LABEL FIELDS OF FIRST LINE               */ 00340000
*   /*                                                               */ 00341000
*   /*****************************************************************/ 00342000
*                                                                  0157 00343000
*   RFY                                                            0157 00344000
*    (PARMREG) RSTD;                /* USED FOR CALLS          Y02014*/ 00345000
*   PARMREG=ADDR(LINEONE);          /* POINT TO LINE ONE PATTERN     */ 00346000
         LA    PARMREG,LINEONE                                     0158 00347000
*   CALL AMDPRGFR;                  /* GO FORMAT LINE ONE            */ 00348000
*                                                                  0159 00349000
         L     @15,AFMTLINE                                        0159 00350000
         BALR  @14,@15                                             0159 00351000
*   /*****************************************************************/ 00352000
*   /*                                                               */ 00353000
*   /* THE FOLLOWING CODE WILL DETERMINE THE NO. OF LINES NEEDED TO  */ 00354000
*   /* FORMAT THE CURRENT RECORD AND LOOPS VIA NUMBER OF LINES       */ 00355000
*   /* CONTROL, PRINTING THE HEX DATA AND THE EBCDIC TRANSLATION     */ 00356000
*   /*                                                               */ 00357000
*   /*****************************************************************/ 00358000
*                                                                  0160 00359000
*   OFFSET=0;                       /* INITIALIZE DATA OFFSET CNTR   */ 00360000
*                                                                  0160 00361000
         SLR   @10,@10                                             0160 00362000
         STH   @10,OFFSET                                          0160 00363000
*   /*****************************************************************/ 00364000
*   /*                                                               */ 00365000
*   /* GET NUMBER OF LINES TO PRINT                                  */ 00366000
*   /*                                                               */ 00367000
*   /*****************************************************************/ 00368000
*                                                                  0161 00369000
*   LINES=(LENGTH-(TIMEADJ+8))/24;                                 0161 00370000
*                                                                  0161 00371000
         LA    @10,24                                              0161 00372000
         L     @08,CURREC(,AEDITCBR)                               0161 00373000
         LA    @07,8                                               0161 00374000
         ALR   @07,TIMEADJ                                         0161 00375000
         LCR   @07,@07                                             0161 00376000
         SLR   @00,@00                                             0161 00377000
         ICM   @00,3,LENGTH(@08)                                   0161 00378000
         ALR   @07,@00                                             0161 00379000
         LR    @14,@07                                             0161 00380000
         SRDA  @14,32                                              0161 00381000
         DR    @14,@10                                             0161 00382000
         STH   @15,LINES                                           0161 00383000
*   /*****************************************************************/ 00384000
*   /*                                                               */ 00385000
*   /* NUMBER OF BYTES IN SHORT LINE IF THERE IS ONE                 */ 00386000
*   /*                                                               */ 00387000
*   /*****************************************************************/ 00388000
*                                                                  0162 00389000
*   PARTLN=(LENGTH-(TIMEADJ+8))//24;                               0162 00390000
*                                                                  0162 00391000
         LR    @14,@07                                             0162 00392000
         SRDA  @14,32                                              0162 00393000
         DR    @14,@10                                             0162 00394000
         STH   @14,PARTLN                                          0162 00395000
*   /*****************************************************************/ 00396000
*   /*                                                               */ 00397000
*   /* LOOP FROM HERE IF MORE THAN ONE LINE IS TO BE PRINTED         */ 00398000
*   /*                                                               */ 00399000
*   /*****************************************************************/ 00400000
*                                                                  0163 00401000
*AMDCKLN:                                                          0163 00402000
*   IF LINES=0 THEN                                                0163 00403000
AMDCKLN  LH    @06,LINES                                           0163 00404000
         LTR   @06,@06                                             0163 00405000
         BZ    @RT00163                                            0163 00406000
*     GOTO AMDSHORT;                /* GO SEE IF THERE IS A SHORT  0164 00407000
*                                      LINE TO PRINT                 */ 00408000
*   CONVAMT=24;                     /* SET AMOUNT TO 24 FOR CONVRT   */ 00409000
         MVC   CONVAMT(2),@CH00101                                 0165 00410000
*   CALL CONVRT;                    /* GO CONVERT AND PRINT A LINE   */ 00411000
         BAL   @14,CONVRT                                          0166 00412000
*   LINES=LINES-1;                  /* DECREMENT LINE COUNT BY ONE   */ 00413000
         LH    @10,LINES                                           0167 00414000
         BCTR  @10,0                                               0167 00415000
         STH   @10,LINES                                           0167 00416000
*   OFFSET=OFFSET+24;               /* SET OFFSET TO NEXT LINE       */ 00417000
         LA    @10,24                                              0168 00418000
         LH    @08,OFFSET                                          0168 00419000
         ALR   @08,@10                                             0168 00420000
         STH   @08,OFFSET                                          0168 00421000
*   IF OFFSET=24&                   /* IF THIS IS SECOND LINE        */ 00422000
*       OPTTIME='1'B                /* AND TIME STAMPING OF EACH   0169 00423000
*                                      RECORD                  Y02014*/ 00424000
*     THEN                                                         0169 00425000
         CR    @08,@10                                             0169 00426000
         BNE   @RF00169                                            0169 00427000
         L     @10,GTFWDPTR(,AEDITCBR)                             0169 00428000
         TM    OPTTIME(@10),B'00000001'                            0169 00429000
         BNO   @RF00169                                            0169 00430000
*     CALL PRTME;                   /* GO FORMAT TIME VALUE          */ 00431000
         L     @10,AFRMAD(,AEDITCBR)                               0170 00432000
         L     @15,ATME(,@10)                                      0170 00433000
         BALR  @14,@15                                             0170 00434000
*   GOTO AMDCKLN;                   /* GO SET-UP NEXT LINE TO PRINT  */ 00435000
         B     AMDCKLN                                             0171 00436000
*AMDSHORT:                          /* COME HERE WHEN LINES = ZERO   */ 00437000
*   IF PARTLN¬=0 THEN               /* PART LINE IS TO BE PRINTED    */ 00438000
AMDSHORT LH    @10,PARTLN                                          0172 00439000
         LTR   @10,@10                                             0172 00440000
         BZ    @RF00172                                            0172 00441000
*     DO;                                                          0173 00442000
*       CONVAMT=PARTLN;             /* SET AMOUNT TO CONVERT EQUAL TO   00443000
*                                      LENGTH OF PARTIAL LINE        */ 00444000
         STH   @10,CONVAMT                                         0174 00445000
*       CALL CONVRT;                /* GO SET UP PARTIAL LINE        */ 00446000
         BAL   @14,CONVRT                                          0175 00447000
*     END;                                                         0176 00448000
*   IF OPTTIME='1'B THEN            /* TEST FOR USER TIME-STAMP-N    */ 00449000
@RF00172 L     @10,GTFWDPTR(,AEDITCBR)                             0177 00450000
         TM    OPTTIME(@10),B'00000001'                            0177 00451000
         BNO   @RF00177                                            0177 00452000
*     DO;                           /*                         Y02014*/ 00453000
*       IF OFFSET=0 THEN            /* ONLY ONE LINE PRINTED M4466   */ 00454000
         LH    @10,OFFSET                                          0179 00455000
         SLR   @08,@08                                             0179 00456000
         CR    @10,@08                                             0179 00457000
         BE    @RT00179                                            0179 00458000
*         GO TO PRINTTME;           /* PRINT TIMESTAMP REC M4466     */ 00459000
*       IF OFFSET=24&               /* CATCH CASE - EXACTLY 1 LN     */ 00460000
*           PARTLN=0 THEN           /* OCCURS WITH SYSM REC M4466    */ 00461000
         C     @10,@CF00101                                        0181 00462000
         BNE   @RF00181                                            0181 00463000
         CH    @08,PARTLN                                          0181 00464000
         BNE   @RF00181                                            0181 00465000
*PRINTTME:                                                         0182 00466000
*         DO;                       /* YES, PRINT T-STAMP M4466      */ 00467000
PRINTTME DS    0H                                                  0183 00468000
*           CALL AMDPRTME;          /* GO FORMAT TIME STAMP M4466    */ 00469000
         BAL   @14,AMDPRTME                                        0183 00470000
*           GEN(BRWRITE  1);        /* PRINT TIMESTAMP REC M4466     */ 00471000
         BRWRITE  1                                                     00472000
*         END PRINTTME;                                            0185 00473000
*     END;                                                         0186 00474000
@RF00181 DS    0H                                                  0187 00475000
*HEXDONE:                                                          0187 00476000
*   HEX='0'B;                       /* INDICATE AMDPRHEX FINISHED    */ 00477000
@RF00177 DS    0H                                                  0187 00478000
HEXDONE  NI    HEX(AEDITCBR),B'11110111'                           0187 00479000
*   RTNCODE=8;                      /* RETURN CODE IS ALWAYS EIGHT   */ 00480000
         LA    RTNCODE,8                                           0188 00481000
*   RETURN;                                                        0189 00482000
         B     @EL00001                                            0189 00483000
*                                                                  0190 00484000
*   /*****************************************************************/ 00485000
*   /*                                                               */ 00486000
*   /* THIS ROUTINE USES HEXCNVT MACRO TO CONVERT TO PRINTABLE HEX   */ 00487000
*   /* THE LINE AS ADDRESS BY THE OFFSET VALUE. IT USES THE EBCDIC   */ 00488000
*   /* TRANSLATION TABLE IN IMPRCOM TO TRANSLATE THE LINE TO EBCDIC  */ 00489000
*   /* AND USES BRWRITE TO PRINT THE LINE                            */ 00490000
*   /*                                                               */ 00491000
*   /*****************************************************************/ 00492000
*                                                                  0190 00493000
*CONVRT:                                                           0190 00494000
*   PROC;                           /* COME HERE TO CONVERT A LINE   */ 00495000
CONVRT   STM   @14,@12,@SA00002                                    0190 00496000
*   RFY                                                            0191 00497000
*    (CONOUTA,                                                     0191 00498000
*     REG3,                                                        0191 00499000
*     CONDATA,                                                     0191 00500000
*     CONLNTH,                                                     0191 00501000
*     REG9,                                                        0191 00502000
*     REG12);                       /*                         Y02014*/ 00503000
*   DCL                                                            0192 00504000
*     CONOUTA REG(2) PTR(31);       /* OUTPUT BUFFER DISPLACEMENT    */ 00505000
*   DCL                                                            0193 00506000
*     CONDATA REG(4) PTR(31);       /* ADDR OF DATA TO CONVERT       */ 00507000
*   DCL                                                            0194 00508000
*     CONLNTH REG(5) PTR(31);       /* LENGTH OF DATA TO CONVERT     */ 00509000
*   DCL                                                            0195 00510000
*     REG3 REG(3) PTR(31);          /* NEEDED FOR CONVERSION   Y02014*/ 00511000
*   DCL                                                            0196 00512000
*     REG9 REG(9) PTR(31);          /* NEEDED FOR CONVERSION   Y02014*/ 00513000
*   DCL                                                            0197 00514000
*     REG12 REG(12) PTR(31);        /* NEEDED FOR CONVERSION   Y02014*/ 00515000
*   DCL                                                            0198 00516000
*     1 * CHAR(26) BASED(CURBUF)    /* OUTPUT EBCDIC MAP       Y02014*/ 00517000
*           POSITION(95),                                          0198 00518000
*      2 AST1 CHAR(1),              /* FIRST ASTERISK                */ 00519000
*      2 EBCDIC CHAR(24),           /* TRANSLATE DATA                */ 00520000
*      2 AST2 CHAR(1);              /* LAST ASTERISK                 */ 00521000
*   DCL                                                            0199 00522000
*     1 * CHAR(34) BASED(CURBUF)    /* OUTPUT EBCDIC MAP       Y02014*/ 00523000
*           POSITION(87),           /* FOR DUMPING BUFFER      Y02014*/ 00524000
*      2 AST1LONG CHAR(1),          /* FIRST ASTERISK          Y02014*/ 00525000
*      2 EBCDICL CHAR(32),          /* TRANSLATE DATA          Y02014*/ 00526000
*      2 AST2LONG CHAR(1);          /* LAST ASTERISK           Y02014*/ 00527000
*   IF GET='1'B THEN                /* CALLED FROM GET         Y02014*/ 00528000
         TM    GET(AEDITCBR),B'00100000'                           0200 00529000
         BNO   @RF00200                                            0200 00530000
*     DO;                                                          0201 00531000
*       AST1LONG='*';               /* MOVE IN FIRST ASTERISK  Y02014*/ 00532000
         L     @10,CURBUF                                          0202 00533000
         MVI   AST1LONG(@10),C'*'                                  0202 00534000
*       AST2LONG='*';               /* MOVE IN SECOND ASTERISK Y02014*/ 00535000
         MVI   AST2LONG(@10),C'*'                                  0203 00536000
*       CONOUTA=CURBUF+5;           /* POINT TO OFFSET OUT AREA    0204 00537000
*                                                              Y02014*/ 00538000
         AL    @10,@CF00086                                        0204 00539000
         LR    CONOUTA,@10                                         0204 00540000
*       CONDATA=ADDR(OFFSET);       /* POINT TO OFFSET BYTE    Y02014*/ 00541000
         LA    CONDATA,OFFSET                                      0205 00542000
*       CONLNTH=2;                  /* LENGTH TO CONVERT IS TWO    0206 00543000
*                                                              Y02014*/ 00544000
         LA    CONLNTH,2                                           0206 00545000
*       GEN(HEXCNVT   (2),(4),(5)); /* CONVERT OFFSET BYTE     Y02014*/ 00546000
         HEXCNVT   (2),(4),(5)                                          00547000
*       CONOUTA=CONOUTA+6;          /* BUMP OUT AREA TO DATA AREA    */ 00548000
         AL    CONOUTA,@CF00110                                    0208 00549000
*       CONDATA=CURREC;             /* POINT TO DATA TO CONVERT    0209 00550000
*                                                              Y02014*/ 00551000
         L     CONDATA,CURREC(,AEDITCBR)                           0209 00552000
*       CONLNTH=32;                 /* GET AMOUNT TO CONVERT   Y02014*/ 00553000
         LA    CONLNTH,32                                          0210 00554000
*       GEN(HEXCNVT   (2),(4),(5)); /* CONVERT DATA            Y02014*/ 00555000
         HEXCNVT   (2),(4),(5)                                          00556000
*       CONOUTA=ADDR(EBCDICL);      /* POINT TO EBCDIC DATA AREA   0212 00557000
*                                                              Y02014*/ 00558000
         L     @10,CURBUF                                          0212 00559000
         LA    CONOUTA,EBCDICL(,@10)                               0212 00560000
*       EBCDICL=DATA(1:32);         /* MOVE UNTRANSLATED DATA  Y02014*/ 00561000
*                                                                  0213 00562000
         L     @08,CURREC(,AEDITCBR)                               0213 00563000
         MVC   EBCDICL(32,@10),DATA(@08)                           0213 00564000
*       /*************************************************************/ 00565000
*       /*                                                           */ 00566000
*       /* TRANSLATE THE HEX TO EBCDIC AND PRINT THE LINE      Y02014*/ 00567000
*       /*                                                           */ 00568000
*       /*************************************************************/ 00569000
*                                                                  0214 00570000
*       GEN(TR 0(32,CONOUTA),TABLE);/* TRANSLATE USING AMDPRCOM TAB  */ 00571000
         TR 0(32,CONOUTA),TABLE                                         00572000
*       GEN(BRWRITE   1);           /* PRINT THE LINE          Y02014*/ 00573000
         BRWRITE   1                                                    00574000
*     END;                                                         0216 00575000
*   ELSE                                                           0217 00576000
*     DO;                           /* DUMPING RECORD IN HEX   Y02014*/ 00577000
         B     @RC00200                                            0217 00578000
@RF00200 DS    0H                                                  0218 00579000
*       AST1='*';                   /* MOVE IN FIRST ASTERISK        */ 00580000
         L     @10,CURBUF                                          0218 00581000
         MVI   AST1(@10),C'*'                                      0218 00582000
*       AST2='*';                   /* MOVE IN SECOND ASTERISK       */ 00583000
         MVI   AST2(@10),C'*'                                      0219 00584000
*       CONOUTA=CURBUF+35;          /* POINT TO OFFSET OUT AREA      */ 00585000
         AL    @10,@CF00402                                        0220 00586000
         LR    CONOUTA,@10                                         0220 00587000
*       CONDATA=ADDR(OFFSET);       /* POINT TO OFFSET BYTE          */ 00588000
         LA    CONDATA,OFFSET                                      0221 00589000
*       CONLNTH=2;                  /* LENGTH TO CONVERT IS ONE      */ 00590000
         LA    CONLNTH,2                                           0222 00591000
*       GEN(HEXCNVT   (2),(4),(5)); /* CONVERT OFFSET BYTE           */ 00592000
         HEXCNVT   (2),(4),(5)                                          00593000
*       CONOUTA=CONOUTA+5;          /* BUMP OUT AREA TO DATA AREA    */ 00594000
         AL    CONOUTA,@CF00086                                    0224 00595000
*       CONDATA=ADDR(HEXDATA)+OFFSET;/* POINT TO DATA TO CONVERT     */ 00596000
         LA    CONDATA,HEXDATA(,RECPTR2)                           0225 00597000
         AH    CONDATA,OFFSET                                      0225 00598000
*       CONLNTH=CONVAMT;            /* GET AMOUNT TO CONVERT         */ 00599000
         LH    CONLNTH,CONVAMT                                     0226 00600000
*       GEN(HEXCNVT   (2),(4),(5)); /* CONVERT DATA                  */ 00601000
         HEXCNVT   (2),(4),(5)                                          00602000
*       CONOUTA=ADDR(EBCDIC);       /* POINT TO EBCDIC DATA AREA     */ 00603000
*                                                                  0228 00604000
         L     @10,CURBUF                                          0228 00605000
         LA    CONOUTA,EBCDIC(,@10)                                0228 00606000
*       /*************************************************************/ 00607000
*       /*                                                           */ 00608000
*       /* RESET DATA POINTER                                        */ 00609000
*       /*                                                           */ 00610000
*       /*************************************************************/ 00611000
*                                                                  0229 00612000
*       CONDATA=ADDR(HEXDATA)+OFFSET-2;                            0229 00613000
         LA    CONDATA,HEXDATA(,RECPTR2)                           0229 00614000
         AH    CONDATA,OFFSET                                      0229 00615000
         BCTR  CONDATA,0                                           0229 00616000
         BCTR  CONDATA,0                                           0229 00617000
*       CONLNTH=CONVAMT;            /* RESET AMOUNT TO CONVERT       */ 00618000
         LH    CONLNTH,CONVAMT                                     0230 00619000
*       EBCDIC=CONDATA->HEXDATA(1:CONLNTH);/* MOVE UNTRANSLATED DATA    00620000
*                                      SO IT CAN BE TRANSLATED       */ 00621000
*                                                                  0231 00622000
         MVI   EBCDIC+1(@10),C' '                                  0231 00623000
         MVC   EBCDIC+2(22,@10),EBCDIC+1(@10)                      0231 00624000
         LR    @08,CONLNTH                                         0231 00625000
         BCTR  @08,0                                               0231 00626000
         EX    @08,@SM00435                                        0231 00627000
*       /*************************************************************/ 00628000
*       /*                                                           */ 00629000
*       /* TRANSLATE THE HEX TO EBCDIC AND PRINT THE LINE            */ 00630000
*       /*                                                           */ 00631000
*       /*************************************************************/ 00632000
*                                                                  0232 00633000
*       GEN(TR 0(24,CONOUTA),TABLE);/* TRANSLATE USING AMDPRCOM TAB  */ 00634000
         TR 0(24,CONOUTA),TABLE                                         00635000
*       GEN(BRWRITE   1);           /* PRINT THE LINE                */ 00636000
         BRWRITE   1                                                    00637000
*     END;                                                         0234 00638000
*   END CONVRT;                                                    0235 00639000
@EL00002 DS    0H                                                  0235 00640000
@EF00002 DS    0H                                                  0235 00641000
@ER00002 LM    @14,@12,@SA00002                                    0235 00642000
         BR    @14                                                 0235 00643000
*                                                                  0236 00644000
*/********************************************************************/ 00645000
*/* THIS SUBROUTINE DETERMINES IF A TIME STAMP RECORD IS TO BE       */ 00646000
*/*  OUTPUTTED BEFORE THE CURRENT TRACE RECORD.                Y02014*/ 00647000
*/********************************************************************/ 00648000
*                                                                  0236 00649000
*AMDTMCHK:                                                         0236 00650000
*   PROC;                           /* STANDARD LINKAGE        Y02014*/ 00651000
AMDTMCHK STM   @14,@12,@SA00003                                    0236 00652000
*   DCL                                                            0237 00653000
*     TEMPBUF REG(2) PTR(31);       /* TIME STAMP RECORD BUF   Y02014*/ 00654000
*   IF TS='0'B THEN                 /* TS RECORD PENDING       Y02014*/ 00655000
         TM    TS(AEDITCBR),B'10000000'                            0238 00656000
         BZ    @RT00238                                            0238 00657000
*     GOTO AMDEND;                  /* NO RETURN               Y02014*/ 00658000
*   GEN(BRWRITE 2,IMM);             /* 2 BLANK LINES NEEDED    Y02014*/ 00659000
         BRWRITE 2,IMM                                                  00660000
*   TEMPBUF=CURBUF;                 /* SAVE CURBUF VALUE       Y02014*/ 00661000
         L     TEMPBUF,CURBUF                                      0241 00662000
*   CURBUF=ADTSBUF;                 /* POINT TO TS RECORD      Y02014*/ 00663000
         L     @10,ADTSBUF(,AEDITCBR)                              0242 00664000
         ST    @10,CURBUF                                          0242 00665000
*   GEN(BRWRITE 2);                 /* OUTPUT TS AND BLANK     Y02014*/ 00666000
         BRWRITE 2                                                      00667000
*   TS='0'B;                        /* NO TS PENDING INDICATOR Y02014*/ 00668000
         NI    TS(AEDITCBR),B'01111111'                            0244 00669000
*   CURBUF=TEMPBUF;                 /* RESTORE CURBUF PTR      Y02014*/ 00670000
         ST    TEMPBUF,CURBUF                                      0245 00671000
*AMDEND:                                                           0246 00672000
*   RETURN;                         /* RETURN TO USER          Y02014*/ 00673000
@EL00003 DS    0H                                                  0246 00674000
@EF00003 DS    0H                                                  0246 00675000
@ER00003 LM    @14,@12,@SA00003                                    0246 00676000
         BR    @14                                                 0246 00677000
*   END;                            /* END OF PROCEDURE        Y02014*/ 00678000
         B     @EL00003                                            0247 00679000
*                                                                  0248 00680000
*/*AMDPRTME:  CHART (AMODE)                                          */ 00681000
*/*AMDPRTME:  HEADER                                               0248 00682000
*/*      AMDPRTME - USER TIME STAMP CONVERSION SUBROUTINE            */ 00683000
*/*AMDPRTME: E ENTRY                                                 */ 00684000
*/*      P MOVE TIME LABEL TO BUFFER                                 */ 00685000
*/*      D (YES,TMETOD,NO,) GTF OPTS INDICATE TOD?                   */ 00686000
*/*      N TIME VALUE IS TIMER UNITS                                 */ 00687000
*/*      P (,%DIV) MULTIPLY BY 26.04 TO GET U-SECS                   */ 00688000
*/*TMETOD:  N TOD - RIGTH 12 BITS ARE UNUSED                         */ 00689000
*/*      P SHIFT CLOCK VALUE RIGHT 12 BITS                           */ 00690000
*/*%DIV:  P DIVIDE BY 6.0 * (10 EXP 7)                               */ 00691000
*/*      N QUOTIENT - MIN SINCE BEGIN OF EPOCH                       */ 00692000
*/*      N REMAINDER - SECOND, IN U-SECS SINCE BEGIN EPOCH           */ 00693000
*/*      P DIVIDE REMAINDER BY (10 EXP 6) TO GET SECS                */ 00694000
*/*      P SAVE QUOTIENT (SECONDS)                                   */ 00695000
*/*      P CONVERT REMAINDER FOR OUTPUT (U-SECONDS)                  */ 00696000
*/*      P MOVE '.' TO OUTPUT VALUE                                  */ 00697000
*/*      P DIVIDE MINUTES BY 1440                                    */ 00698000
*/*      N DISCARD QUOTIENT                                          */ 00699000
*/*      P MULTI BY 60 TO CONVERT TO SECONDS                         */ 00700000
*/*      P ADD QUOTIENT FOR U-SEC CALCULATION                        */ 00701000
*/*      P CONVERT SECOND FOR OUTPUT                                 */ 00702000
*/*      R RETURN                                                    */ 00703000
*                                                                  0248 00704000
*AMDPRTME:                                                         0248 00705000
*   PROC OPTIONS(NOSAVEAREA);                                      0248 00706000
*                                                                  0248 00707000
AMDPRTME STM   @14,@12,12(@13)                                     0248 00708000
*/********************************************************************  00709000
*                                                                    */ 00710000
*/*                                                                  */ 00711000
*/*                  CONSTANTS USED ONLY BY AMDPRTME                 */ 00712000
*/*                                                                  */ 00713000
*/********************************************************************  00714000
*                                                                    */ 00715000
*/* MAP OF TME OUTPUT IN CURRENT OUTPUT BUFFER                       */ 00716000
*                                                                  0249 00717000
*   DCL                                                            0249 00718000
*     1 TMEMAP BASED(CURBUF) POSITION(12),                         0249 00719000
*      2 TMELAB CHAR(4),                                           0249 00720000
*      2 * CHAR(4),                                                0249 00721000
*      2 TMEVAL CHAR(12);                                          0249 00722000
*                                                                  0249 00723000
*   /*****************************************************************/ 00724000
*   /*                                                               */ 00725000
*   /* PREFIX OF TRACE REC WITH TIMESTAMPING                         */ 00726000
*   /*                                                               */ 00727000
*   /*****************************************************************/ 00728000
*                                                                  0250 00729000
*   DCL                                                            0250 00730000
*     1 PREFIX BASED(CURREC),                                      0250 00731000
*      2 * CHAR(6),                 /* LL, AID, FID                  */ 00732000
*      2 TODA CHAR(4),              /* TOD VALUE                     */ 00733000
*      2 TODB BIT(32);              /* TOD VALUE                     */ 00734000
*/* CONSTANT - 60 MILLION                                            */ 00735000
*                                                                  0251 00736000
*   DCL                                                            0251 00737000
*     SIXTMIL FIXED(31) INIT(60000000);                            0251 00738000
*   RFY                                                            0252 00739000
*    (WREG2,                                                       0252 00740000
*     EVEN,                                                        0252 00741000
*     ODD,                                                         0252 00742000
*     COMMONRG) RSTD;               /* NEEDED FOR CONVERSIONS  Y02014*/ 00743000
*   GEN;                                                           0253 00744000
         ENTRY AMDPRTME                GET NAME IN ESD - THIS CAN-T BE  00745000
*                                     DONE THROUGH PLS BECAUSE PROC     00746000
*                                     STMT OVERRIDES DCL                00747000
         BALR  BASE1,0                                                  00748000
         USING *,BASE1                                                  00749000
*   TMELAB='TIME';                  /* SET TIME LABEL IN OUTPUT    0254 00750000
*                                      BUFFER                        */ 00751000
         L     @10,CURBUF                                          0254 00752000
         MVC   TMELAB(4,@10),@CC00422                              0254 00753000
*   EVEN=TODA;                      /* LOAD EVEN-ODD REGISTER PAIR   */ 00754000
         L     @10,CURREC(,AEDITCBR)                               0255 00755000
         ICM   EVEN,15,TODA(@10)                                   0255 00756000
*   EVEN=EVEN+CVTTZONE;             /* WITH DOUBLE WORD TOD VALUE  0256 00757000
*                                                              Y02014*/ 00758000
         ICM   @08,15,CVTTZONE(AEDITCBR)                           0256 00759000
         ALR   EVEN,@08                                            0256 00760000
*   ODD=TODB;                       /* CONVERT TO GMT                */ 00761000
         ICM   ODD,15,TODB(@10)                                    0257 00762000
*   GEN(SRDL  EVEN,12);             /* SHIFT OUT LOW ORDER 12 BITS 0258 00763000
*                                      WHICH ARE UNUSED              */ 00764000
         SRDL  EVEN,12                                                  00765000
*   GEN(D  EVEN,SIXTMIL);           /* DIVIDE BY 6.0 * (10 EXP 7) TO    00766000
*                                      GET: Q - MINUTES SINCE BEGIN     00767000
*                                      OF EPOCH R - SECONDS, IN MICRO   00768000
*                                      SECS SINCE BEGIN OF EPOCH     */ 00769000
         D  EVEN,SIXTMIL                                                00770000
*   SECONDS=EVEN/1000000;           /* SAVE SECONDS TO BE ADDED INTO    00771000
*                                      SECONDS SINCE MIDNITE         */ 00772000
         L     @10,@CF00423                                        0260 00773000
         LR    @14,EVEN                                            0260 00774000
         SRDA  @14,32                                              0260 00775000
         DR    @14,@10                                             0260 00776000
         LR    SECONDS,@15                                         0260 00777000
*   EVEN=EVEN//1000000;             /* MICRO-SECONDS VALUE FOR OUTPUT*/ 00778000
         LR    @14,EVEN                                            0261 00779000
         SRDA  @14,32                                              0261 00780000
         DR    @14,@10                                             0261 00781000
         LR    EVEN,@14                                            0261 00782000
*   WREG2=ADDR(TMEVAL(7));          /* POINT OT OUTPUT AREA          */ 00783000
         L     WREG2,CURBUF                                        0262 00784000
         LA    WREG2,TMEVAL+6(,WREG2)                              0262 00785000
*   GEN;                                                           0263 00786000
         CVD   EVEN,WORK1              CONVERT TO DECIMAL               00787000
         UNPK  0(6,WREG2),WORK1+4(4)                                    00788000
         OI    5(WREG2),X'F0'          SET SIGN                         00789000
*   TMEVAL(6)='.';                  /* DOT TO SEPARATE SECONDS FROM     00790000
*                                      MICRO-SECONDS                 */ 00791000
*                                                                  0264 00792000
         L     @10,CURBUF                                          0264 00793000
         MVI   TMEVAL+5(@10),C'.'                                  0264 00794000
*   /*****************************************************************/ 00795000
*   /*                                                               */ 00796000
*   /* COMPUTE SECONDS VALUE USING MINUTES SINCE BEGINNING OF EPOCH  */ 00797000
*   /* FROM ODD REGISTER                                             */ 00798000
*   /*                                                               */ 00799000
*   /*****************************************************************/ 00800000
*                                                                  0265 00801000
*   EVEN=((ODD//1440)*60)+SECONDS;                                 0265 00802000
         LR    @14,ODD                                             0265 00803000
         SRDA  @14,32                                              0265 00804000
         D     @14,@CF00425                                        0265 00805000
         MH    @14,@CH00426                                        0265 00806000
         ALR   @14,SECONDS                                         0265 00807000
         LR    EVEN,@14                                            0265 00808000
*   WREG2=ADDR(TMEVAL(1));          /* POINT TO OUTPUT AREA          */ 00809000
         LA    WREG2,TMEVAL(,@10)                                  0266 00810000
*   GEN;                                                           0267 00811000
         CVD   EVEN,WORK1              CONVERT TO DECIMAL               00812000
         UNPK  0(5,WREG2),WORK1+4(4)                                    00813000
         OI    4(WREG2),X'F0'          SET SIGN                         00814000
*   END AMDPRTME;                                                  0268 00815000
@EL00004 DS    0H                                                  0268 00816000
@EF00004 DS    0H                                                  0268 00817000
@ER00004 LM    @14,@12,12(@13)                                     0268 00818000
         BR    @14                                                 0268 00819000
*   GEN(USING @PSTART,11);          /* RESET BASE REGISTER     Y02014*/ 00820000
         USING @PSTART,11                                               00821000
*   END AMDPRCON                                                   0270 00822000
*                                                                  0270 00823000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */ 00824000
*/*%INCLUDE SYSLIB  (AMDPRTAB)                                       */ 00825000
*/*%INCLUDE SYSLIB  (AMDOPTWD)                                       */ 00826000
*/*%INCLUDE SYSLIB  (RECMAP  )                                       */ 00827000
*                                                                  0270 00828000
*       ;                                                          0270 00829000
         B     @EL00001                                            0270 00830000
@DATA    DS    0H                                                       00831000
@CH00426 DC    H'60'                                                    00832000
@SM00429 MVC   NUMLEBUF(0,@10),0(@15)                                   00833000
@SM00435 MVC   EBCDIC(0,@10),HEXDATA(CONDATA)                           00834000
         DS    0F                                                       00835000
@SA00001 DS    18F                                                      00836000
@SA00002 DS    15F                                                      00837000
@SA00003 DS    15F                                                      00838000
         DS    0F                                                       00839000
@CF00045 DC    F'1'                                                     00840000
@CF00086 DC    F'5'                                                     00841000
@CF00110 DC    F'6'                                                     00842000
@CF00167 DC    F'9'                                                     00843000
@CF00101 DC    F'24'                                                    00844000
@CH00101 EQU   @CF00101+2                                               00845000
@CF00402 DC    F'35'                                                    00846000
@CF00425 DC    F'1440'                                                  00847000
@CF00423 DC    F'1000000'                                               00848000
@CF00347 DC    XL4'7FFFFFFF'                                            00849000
         DS    0D                                                       00850000
UNIT     DC    F'2604'                                                  00851000
HIGH     DC    F'1302'                                                  00852000
FACTOR   DC    F'100000000'                                             00853000
SAVEBUF  DS    A                                                        00854000
SIXTMIL  DC    F'60000000'                                              00855000
HOURS    DS    F                                                        00856000
MINUTES  DS    F                                                        00857000
OFFSET   DC    H'0'                                                     00858000
LINES    DC    H'0'                                                     00859000
PARTLN   DC    H'0'                                                     00860000
CONVAMT  DC    H'0'                                                     00861000
@CC00355 DC    C'00.00.00.000000'                                       00862000
@CC00422 DC    C'TIME'                                                  00863000
SUBBUF   DS    CL10                                                     00864000
         DS    CL3                                                      00865000
TIMEPARM DS    CL12                                                     00866000
         ORG   TIMEPARM                                                 00867000
ADCVTTZ  DS    AL4                                                      00868000
ADTODCLK DS    AL4                                                      00869000
ADTMEBUF DS    AL4                                                      00870000
         ORG   TIMEPARM+12                                              00871000
TMEBUF   DS    CL22                                                     00872000
         ORG   TMEBUF                                                   00873000
YEAR     DS    CL4                                                      00874000
DAYYR    DS    CL3                                                      00875000
TOD      DS    CL15                                                     00876000
         ORG   TMEBUF+22                                                00877000
TSBUF    DS    CL133                                                    00878000
LABAREA  DS    CL18                                                     00879000
         ORG   LABAREA                                                  00880000
DMPLABEL DC    CL9' '                                                   00881000
@NM00003 DC    CL3'AID'                                                 00882000
@NM00004 DC    CL3'FID'                                                 00883000
@NM00005 DC    CL3'EID'                                                 00884000
         ORG   LABAREA+18                                               00885000
HEXFORMT DC    CL9'HEXFORMAT'                                           00886000
USER     DC    CL4'USR'                                                 00887000
SYSTEM   DC    CL6'SYSTEM'                                              00888000
SUBSYS   DC    CL6'SUBSYS'                                              00889000
RECPTCH  DC    CL200'RECPTCH'                                           00890000
AMDPRCON CSECT                                                          00891000
TSPLST    FMTPTRN (LBL,LBLP),14,0,0,0,TSLABS                            00892000
          FMTPTRN (LBL),4,0,22,0                                        00893000
          FMTPTRN (LBL),4,0,43,0                                        00894000
          FMTPTRN (LBL),3,0,117,0,,,LAST                                00895000
TSLABS    DC    CL25'*** DATE   DAYYEARTIME***'                         00896000
LDPLST    FMTPTRN (LBL,LBLP),15,0,0,0,LDLABS                            00897000
          FMTPTRN (LBL),3,0,18,0                                        00898000
          FMTPTRN (LBL,LBLP),4,0,43,0,TSLABS+18                         00899000
          FMTPTRN (LBL),3,0,117,0,,,LAST                                00900000
LBPLST    FMTPTRN (LBL,LBLP),15,0,0,0,LBLABS                     Y02014 00901000
          FMTPTRN (LBL),15,0,15,0                                Y02014 00902000
          FMTPTRN (LBL),5,0,30,0                                 Y02014 00903000
          FMTPTRN (LBL,LBLP),4,0,43,0,TSLABS+18                  Y02014 00904000
          FMTPTRN (LBL),3,0,117,0,,,LAST                         Y02014 00905000
LDLABS    DC    CL21'*** LOST EVENTSNUM'                                00906000
LBLABS    DC    CL35'*** ONE 4096 BYTE TRACE BUFFER LOST'        Y02014 00907000
AMDPRCON CSECT                                                          00908000
LINEONE  FMTPTRN (LBL,LBLP),9,,0,,(LABAREA)      HEAD LABEL             00909000
* AID FIELD PATTERN                                                     00910000
          FMTPTRN (LBL,DTA,DTAP,DTAC),3,1,10,14,,(DATAPTR,0)            00911000
* FID FIELD PATTERN                                                     00912000
          FMTPTRN (LBL,DTA,DTAC),3,1,17,21                              00913000
* EID FIELD PATTERN                                                     00914000
          FMTPTRN (LBL,DTA,DTAP,DTAC),3,2,24,29,,(EIDPTR,0),LAST        00915000
AMDPRCON CSECT                                                          00916000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       00917000
@01      EQU   01                                                       00918000
@02      EQU   02                                                       00919000
@03      EQU   03                                                       00920000
@04      EQU   04                                                       00921000
@05      EQU   05                                                       00922000
@06      EQU   06                                                       00923000
@07      EQU   07                                                       00924000
@08      EQU   08                                                       00925000
@09      EQU   09                                                       00926000
@10      EQU   10                                                       00927000
@11      EQU   11                                                       00928000
@12      EQU   12                                                       00929000
@13      EQU   13                                                       00930000
@14      EQU   14                                                       00931000
@15      EQU   15                                                       00932000
TIMEADJ  EQU   @06                                                      00933000
SECONDS  EQU   @06                                                      00934000
I        EQU   @03                                                      00935000
COMMONRG EQU   @12                                                      00936000
AEDITCBR EQU   @09                                                      00937000
PARMREG  EQU   @01                                                      00938000
WREG2    EQU   @02                                                      00939000
EVEN     EQU   @04                                                      00940000
ODD      EQU   @05                                                      00941000
RECPTR2  EQU   @03                                                      00942000
RTNCODE  EQU   @15                                                      00943000
CONOUTA  EQU   @02                                                      00944000
REG3     EQU   @03                                                      00945000
CONDATA  EQU   @04                                                      00946000
CONLNTH  EQU   @05                                                      00947000
REG9     EQU   @09                                                      00948000
REG12    EQU   @12                                                      00949000
TEMPBUF  EQU   @02                                                      00950000
RECPTR1  EQU   @02                                                      00951000
         ENTRY RECPTCH                                                  00952000
AMDPRTAB EQU   0                                                        00953000
CURREC   EQU   AMDPRTAB+4                                               00954000
DEBGFLGS EQU   AMDPRTAB+8                                               00955000
PTHFLGS1 EQU   DEBGFLGS                                                 00956000
GET      EQU   PTHFLGS1                                                 00957000
CON      EQU   PTHFLGS1                                                 00958000
HEX      EQU   PTHFLGS1                                                 00959000
PTHFLGS2 EQU   DEBGFLGS+1                                               00960000
INRFCFGS EQU   DEBGFLGS+2                                               00961000
IOFLGS   EQU   DEBGFLGS+3                                               00962000
GTFWDPTR EQU   AMDPRTAB+20                                              00963000
STARTIME EQU   AMDPRTAB+40                                              00964000
STOPTIME EQU   AMDPRTAB+52                                              00965000
NAMES    EQU   AMDPRTAB+64                                              00966000
ADS      EQU   AMDPRTAB+104                                             00967000
AADS     EQU   ADS                                                      00968000
SIF      EQU   AMDPRTAB+124                                             00969000
SIOFLGS  EQU   SIF                                                      00970000
DVADS1   EQU   AMDPRTAB+128                                             00971000
IO       EQU   AMDPRTAB+228                                             00972000
IOFLGS2  EQU   IO                                                       00973000
DVADS2   EQU   AMDPRTAB+232                                             00974000
VCF      EQU   AMDPRTAB+332                                             00975000
SVCFLGS  EQU   VCF                                                      00976000
USR      EQU   AMDPRTAB+368                                             00977000
USRFLGS  EQU   USR                                                      00978000
USRTAB   EQU   AMDPRTAB+372                                             00979000
PI       EQU   AMDPRTAB+452                                             00980000
PIFLGS   EQU   PI                                                       00981000
PGMNGEN  EQU   AMDPRTAB+456                                             00982000
GENFLAGS EQU   PGMNGEN+3                                                00983000
GENFLGS1 EQU   AMDPRTAB+460                                             00984000
TS       EQU   GENFLGS1                                                 00985000
FIRSTHSW EQU   GENFLGS1                                                 00986000
AFRMAD   EQU   AMDPRTAB+488                                             00987000
ADTSBUF  EQU   AMDPRTAB+496                                             00988000
ESTARTME EQU   AMDPRTAB+500                                             00989000
ESTOPTME EQU   AMDPRTAB+509                                             00990000
CVTTZONE EQU   AMDPRTAB+518                                             00991000
AMDOPTWD EQU   0                                                        00992000
OPTS1    EQU   AMDOPTWD                                                 00993000
OPTS2    EQU   AMDOPTWD+1                                               00994000
OPTS3    EQU   AMDOPTWD+2                                               00995000
OPTS4    EQU   AMDOPTWD+3                                               00996000
OPTTIME  EQU   OPTS4                                                    00997000
FRMATAB  EQU   0                                                        00998000
AGET     EQU   FRMATAB                                                  00999000
AHEX     EQU   FRMATAB+4                                                01000000
ACON     EQU   FRMATAB+8                                                01001000
AFLT     EQU   FRMATAB+12                                               01002000
AAPP     EQU   FRMATAB+16                                               01003000
AEXT     EQU   FRMATAB+20                                               01004000
ASPI     EQU   FRMATAB+28                                               01005000
ATME     EQU   FRMATAB+32                                               01006000
PRTME    EQU   0                                                        01007000
RECMAP   EQU   0                                                        01008000
RECFID   EQU   RECMAP+5                                                 01009000
RECTIME  EQU   RECMAP+6                                                 01010000
RECVTTZ  EQU   RECTIME                                                  01011000
RECTOD   EQU   RECTIME+4                                                01012000
RECGTFOP EQU   RECMAP+18                                                01013000
RECLSTEV EQU   RECGTFOP                                                 01014000
SVHKREC  EQU   0                                                        01015000
SVHKDATA EQU   SVHKREC+6                                                01016000
AMDPRGFR EQU   0                                                        01017000
NUMLEBUF EQU   23                                                       01018000
DAYBUF   EQU   16                                                       01019000
YRBUF    EQU   28                                                       01020000
TIMEBUF  EQU   49                                                       01021000
TODCNVRT EQU   0                                                        01022000
RECPART1 EQU   0                                                        01023000
LENGTH   EQU   RECPART1                                                 01024000
HEXAID   EQU   RECPART1+4                                               01025000
HEXFID   EQU   RECPART1+5                                               01026000
RECPART2 EQU   0                                                        01027000
HEXEID   EQU   RECPART2                                                 01028000
EIDFRST  EQU   HEXEID                                                   01029000
HEXDATA  EQU   RECPART2+2                                               01030000
DATA     EQU   0                                                        01031000
@NM00007 EQU   94                                                       01032000
AST1     EQU   @NM00007                                                 01033000
EBCDIC   EQU   @NM00007+1                                               01034000
AST2     EQU   @NM00007+25                                              01035000
@NM00008 EQU   86                                                       01036000
AST1LONG EQU   @NM00008                                                 01037000
EBCDICL  EQU   @NM00008+1                                               01038000
AST2LONG EQU   @NM00008+33                                              01039000
TMEMAP   EQU   11                                                       01040000
TMELAB   EQU   TMEMAP                                                   01041000
TMEVAL   EQU   TMEMAP+8                                                 01042000
PREFIX   EQU   0                                                        01043000
TODA     EQU   PREFIX+6                                                 01044000
TODB     EQU   PREFIX+10                                                01045000
BLDBUF   EQU   1                                                        01046000
PRAPP    EQU   0                                                        01047000
PRCON    EQU   0                                                        01048000
PREXT    EQU   0                                                        01049000
PRFLT    EQU   0                                                        01050000
PRGET    EQU   0                                                        01051000
PRHEX    EQU   0                                                        01052000
PRSPI    EQU   0                                                        01053000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    01054000
@NM00010 EQU   PREFIX                                                   01055000
@NM00009 EQU   TMEMAP+4                                                 01056000
HEXTIME  EQU   RECPART1+6                                               01057000
@NM00006 EQU   RECPART1+2                                               01058000
SVHKTCB  EQU   SVHKDATA+4                                               01059000
SVHKASID EQU   SVHKDATA+2                                               01060000
SVHKEID  EQU   SVHKDATA                                                 01061000
SVHKAFID EQU   SVHKREC+4                                                01062000
@NM00002 EQU   SVHKREC+2                                                01063000
SVHKLEN  EQU   SVHKREC                                                  01064000
RECAID   EQU   RECMAP+4                                                 01065000
RECRES1  EQU   RECMAP+2                                                 01066000
RECLL    EQU   RECMAP                                                   01067000
FRMRES1  EQU   FRMATAB+36                                               01068000
APRFMG   EQU   FRMATAB+24                                               01069000
OPTRES3  EQU   OPTS4                                                    01070000
OPTIOSIO EQU   OPTS3                                                    01071000
OPTRES2  EQU   OPTS3                                                    01072000
OPTRR    EQU   OPTS3                                                    01073000
OPTSRM   EQU   OPTS3                                                    01074000
OPTRNIO  EQU   OPTS3                                                    01075000
OPTEXT   EQU   OPTS3                                                    01076000
OPTIOP   EQU   OPTS2                                                    01077000
OPTIO    EQU   OPTS2                                                    01078000
OPTPIP   EQU   OPTS2                                                    01079000
OPTPI    EQU   OPTS2                                                    01080000
OPTSIOP  EQU   OPTS2                                                    01081000
OPTSIO   EQU   OPTS2                                                    01082000
OPTSVCP  EQU   OPTS2                                                    01083000
OPTSVC   EQU   OPTS2                                                    01084000
OPTPCI   EQU   OPTS1                                                    01085000
OPTRES1  EQU   OPTS1                                                    01086000
OPTDSP   EQU   OPTS1                                                    01087000
OPTTRC   EQU   OPTS1                                                    01088000
OPTUSR   EQU   OPTS1                                                    01089000
OPTSYS   EQU   OPTS1                                                    01090000
OPTSYSP  EQU   OPTS1                                                    01091000
OPTSYSM  EQU   OPTS1                                                    01092000
RESERVED EQU   AMDPRTAB+522                                             01093000
ESPSEC   EQU   ESTOPTME+7                                               01094000
ESPMIN   EQU   ESTOPTME+5                                               01095000
ESPHR    EQU   ESTOPTME+3                                               01096000
ESPDAY   EQU   ESTOPTME                                                 01097000
ESSEC    EQU   ESTARTME+7                                               01098000
ESMIN    EQU   ESTARTME+5                                               01099000
ESHR     EQU   ESTARTME+3                                               01100000
ESDAY    EQU   ESTARTME                                                 01101000
OFSTDATA EQU   AMDPRTAB+494                                             01102000
OFSTEID  EQU   AMDPRTAB+492                                             01103000
REENTWKA EQU   AMDPRTAB+484                                             01104000
PRFMTADD EQU   AMDPRTAB+480                                             01105000
AEIOCT   EQU   AMDPRTAB+476                                             01106000
EXITADDR EQU   AMDPRTAB+472                                             01107000
EXITNM   EQU   AMDPRTAB+464                                             01108000
RECDLL   EQU   AMDPRTAB+461                                             01109000
@NM00001 EQU   GENFLGS1                                                 01110000
TSFOUND  EQU   GENFLGS1                                                 01111000
EOFINPRO EQU   GENFLGS1                                                 01112000
EOF      EQU   GENFLAGS                                                 01113000
RR       EQU   GENFLAGS                                                 01114000
SRM      EQU   GENFLAGS                                                 01115000
RNIO     EQU   GENFLAGS                                                 01116000
SYSM     EQU   GENFLAGS                                                 01117000
SYS      EQU   GENFLAGS                                                 01118000
DSP      EQU   GENFLAGS                                                 01119000
EXT      EQU   GENFLAGS                                                 01120000
PICODEA  EQU   PGMNGEN+2                                                01121000
PICODES  EQU   PGMNGEN                                                  01122000
Q        EQU   PI+1                                                     01123000
P01R     EQU   PIFLGS                                                   01124000
SELP     EQU   PIFLGS                                                   01125000
ALLP     EQU   PIFLGS                                                   01126000
USRNGTAB EQU   USRTAB                                                   01127000
O        EQU   USR+1                                                    01128000
N01R     EQU   USRFLGS                                                  01129000
SELU     EQU   USRFLGS                                                  01130000
ALLU     EQU   USRFLGS                                                  01131000
SVCNUMS  EQU   AMDPRTAB+336                                             01132000
M        EQU   VCF+1                                                    01133000
L        EQU   SVCFLGS                                                  01134000
SELV     EQU   SVCFLGS                                                  01135000
ALLV     EQU   SVCFLGS                                                  01136000
IODVADS  EQU   DVADS2                                                   01137000
K01RES   EQU   IO+1                                                     01138000
JJ       EQU   IOFLGS2                                                  01139000
SELI     EQU   IOFLGS2                                                  01140000
ALLI     EQU   IOFLGS2                                                  01141000
SIODVADS EQU   DVADS1                                                   01142000
II       EQU   SIF+1                                                    01143000
H        EQU   SIOFLGS                                                  01144000
NOEQU    EQU   SIOFLGS                                                  01145000
EQUIV    EQU   SIOFLGS                                                  01146000
SELS     EQU   SIOFLGS                                                  01147000
ALLS     EQU   SIOFLGS                                                  01148000
ASCBADDR EQU   AADS                                                     01149000
JOBNAMES EQU   NAMES                                                    01150000
DAY2     EQU   STOPTIME+10                                              01151000
F        EQU   STOPTIME+8                                               01152000
TIME2    EQU   STOPTIME                                                 01153000
DAY      EQU   STARTIME+10                                              01154000
D        EQU   STARTIME+8                                               01155000
TIME     EQU   STARTIME                                                 01156000
DDNAME   EQU   AMDPRTAB+32                                              01157000
USEREXIT EQU   AMDPRTAB+24                                              01158000
C        EQU   DEBGFLGS+4                                               01159000
B        EQU   IOFLGS                                                   01160000
GETEOF   EQU   IOFLGS                                                   01161000
DMDFMT   EQU   INRFCFGS                                                 01162000
EDITSTOP EQU   INRFCFGS                                                 01163000
EXTTRC   EQU   INRFCFGS                                                 01164000
RET      EQU   INRFCFGS                                                 01165000
FMT      EQU   INRFCFGS                                                 01166000
SPIE     EQU   INRFCFGS                                                 01167000
TERM     EQU   INRFCFGS                                                 01168000
FLMODE   EQU   INRFCFGS                                                 01169000
REMAIN   EQU   PTHFLGS2                                                 01170000
APP      EQU   PTHFLGS2                                                 01171000
REXT     EQU   PTHFLGS1                                                 01172000
FRM      EQU   PTHFLGS1                                                 01173000
FLT      EQU   PTHFLGS1                                                 01174000
SCN      EQU   PTHFLGS1                                                 01175000
ROOT     EQU   PTHFLGS1                                                 01176000
AFMG     EQU   AMDPRTAB                                                 01177000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      01178000
@RT00076 EQU   AMDPRTS                                                  01179000
@RT00078 EQU   AMDPRLD                                                  01180000
@RT00080 EQU   AMDPRLB                                                  01181000
@RT00089 EQU   AMDLJUST                                                 01182000
@RT00163 EQU   AMDSHORT                                                 01183000
@RF00169 EQU   AMDCKLN                                                  01184000
@RT00179 EQU   PRINTTME                                                 01185000
@RC00200 EQU   @EL00002                                                 01186000
AMDEND   EQU   @EL00003                                                 01187000
@RT00238 EQU   AMDEND                                                   01188000
@ENDDATA EQU   *                                                        01189000
         END   AMDPRCON,(C'PLS1856',0603,76159)                         01190000
./  ADD  SSI=72550018,NAME=AMDPRSCN
         TITLE 'AMDPRSCN-EDIT CONTROL STATEMENT SCAN                   *00001000
                        '                                               00002000
AMDPRSCN CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL1(16)                                             0001 00007000
         DC    C'AMDPRSCN  77.255'                                 0001 00008000
         DROP  @15                                                      00009000
@PROLOG  ST    @14,12(,@13)                                        0001 00010000
         STM   @00,@12,20(@13)                                     0001 00011000
         BALR  @11,0                                               0001 00012000
@PSTART  DS    0H                                                  0001 00013000
         USING @PSTART,@11                                         0001 00014000
         LA    @08,@DATA                                           0001 00015000
         USING @DATA,@08                                           0001 00016000
         ST    @13,@SA00001+4                                      0001 00017000
         LA    @14,@SA00001                                        0001 00018000
         ST    @14,8(,@13)                                         0001 00019000
         LR    @13,@14                                             0001 00020000
              EQUATES                   AMDPRDMP EQU MACRO              00021000
              COMMON                    EXPANDS TO AMDPRCOM TABLE       00022000
AMDPRSCN      CSECT                     RE-ESTABLISH SCAN CSECT         00023000
              USING COMMON,COMBASE      SET UP DSECT FOR AMDPRCOM       00024000
*   TTABPTR=ADDR(TEMPTAB);          /* INITIALIZE TTAB POINTER       */ 00025000
         LA    TTABPTR,TEMPTAB                                     0061 00026000
*   IF SCANBIT='1'B THEN            /* Q/FIRST TIME IN SCAN          */ 00027000
         TM    SCANBIT,B'00100000'                                 0062 00028000
         BO    @RT00062                                            0062 00029000
*     GOTO AMDPSCN1;                /* NO                            */ 00030000
*   CALL AMDPROOT;                  /* INITIALIZE AMDPRTAB           */ 00031000
         L     @15,AROOT                                           0064 00032000
         BALR  @14,@15                                             0064 00033000
*   AEDITCBR=AEDITCB;               /* ESTABLISH BASE FOR PRTAB      */ 00034000
         L     AEDITCBR,AEDITCB                                    0065 00035000
*   SCN='1'B;                       /* SET ON SCAN BIT IN AMDPRTAB   */ 00036000
*                                                                  0066 00037000
         OI    SCN(AEDITCBR),B'01000000'                           0066 00038000
*   /*****************************************************************/ 00039000
*   /*                                                               */ 00040000
*   /* INITIALIZE VALUES IN AMDSCNTB                                 */ 00041000
*   /*                                                               */ 00042000
*   /*****************************************************************/ 00043000
*                                                                  0067 00044000
*   EXITNAME=' ';                   /* BLANK USER EXIT NAME          */ 00045000
         MVI   EXITNAME+1,C' '                                     0067 00046000
         MVC   EXITNAME+2(6),EXITNAME+1                            0067 00047000
         MVI   EXITNAME,C' '                                       0067 00048000
*   DDNM=' ';                       /* BLANK DDNAME SLOT             */ 00049000
         MVI   DDNM+1,C' '                                         0068 00050000
         MVC   DDNM+2(6),DDNM+1                                    0068 00051000
         MVI   DDNM,C' '                                           0068 00052000
*   STARTSL=' ';                    /* BLANK START TIME SLOT         */ 00053000
         MVI   STARTSL+1,C' '                                      0069 00054000
         MVC   STARTSL+2(10),STARTSL+1                             0069 00055000
         MVI   STARTSL,C' '                                        0069 00056000
*   STOPSL=' ';                     /* BLANK STOP TIME SLOT          */ 00057000
         MVI   STOPSL+1,C' '                                       0070 00058000
         MVC   STOPSL+2(10),STOPSL+1                               0070 00059000
         MVI   STOPSL,C' '                                         0070 00060000
*   OVERLTAB=' ';                   /* BLANK EID OVERLAY TABLE       */ 00061000
         MVI   OVERLTAB+1,C' '                                     0071 00062000
         MVC   OVERLTAB+2(38),OVERLTAB+1                           0071 00063000
         MVI   OVERLTAB,C' '                                       0071 00064000
*   SIOTFLGS='0'B;                  /* ZERO SIO BITS                 */ 00065000
         MVI   SIOTFLGS,B'00000000'                                0072 00066000
*   IOTFLGS='0'B;                   /* ZERO IO BITS                  */ 00067000
         MVI   IOTFLGS,B'00000000'                                 0073 00068000
*   USRTFLGS='0'B;                  /* ZERO USR FLAGS                */ 00069000
         MVI   USRTFLGS,B'00000000'                                0074 00070000
*   SVCTFLGS='0'B;                  /* ZERO SVC BITS                 */ 00071000
         MVI   SVCTFLGS,B'00000000'                                0075 00072000
*   PITFLGS='0'B;                   /* ZERO PI BITS                  */ 00073000
         MVI   PITFLGS,B'00000000'                                 0076 00074000
*   SYSTFLGS='0'B;                  /* ZERO SYS TEMP FLGS            */ 00075000
         MVI   SYSTFLGS,B'00000000'                                0077 00076000
*   USRCOUNT=0;                     /* ZERO EID COUNT                */ 00077000
         SLR   @10,@10                                             0078 00078000
         ST    @10,USRCOUNT                                        0078 00079000
*   USRCRCNT=0;                     /* ZERO CURRENT EID COUNT        */ 00080000
         ST    @10,USRCRCNT                                        0079 00081000
*   SVCSTR='0'B;                    /* TURN OFF SVC BITS             */ 00082000
         XC    SVCSTR+1(31),SVCSTR+1                               0080 00083000
         MVI   SVCSTR,B'00000000'                                  0080 00084000
*   PISTR='0'B;                     /* TURN OFF PI CODE BITS         */ 00085000
         MVI   PISTR+1,X'00'                                       0081 00086000
         MVI   PISTR,B'00000000'                                   0081 00087000
*   PISTRB='0'B;                    /* TURN OFF PI 17, 19 BITS       */ 00088000
         MVI   PISTRB,B'00000000'                                  0082 00089000
*   SCNBITS='0'B;                   /* TURN OFF SCAN BITS            */ 00090000
         MVI   SCNBITS,B'00000000'                                 0083 00091000
*   CODETABL='0'B;                  /* TURN OFF KW BITS              */ 00092000
         XC    CODETABL+1(2),CODETABL+1                            0084 00093000
         MVI   CODETABL,B'00000000'                                0084 00094000
*   WORD=0;                         /* ZERO WORD WORK AREA           */ 00095000
         ST    @10,WORD                                            0085 00096000
*   INTSTART=' ';                   /* BLANK INT START SLOT          */ 00097000
         MVI   INTSTART+1,C' '                                     0086 00098000
         MVC   INTSTART+2(3),INTSTART+1                            0086 00099000
         MVI   INTSTART,C' '                                       0086 00100000
*   INTSTOP=' ';                    /* BLANK INT STOP SLOT           */ 00101000
         MVI   INTSTOP+1,C' '                                      0087 00102000
         MVC   INTSTOP+2(3),INTSTOP+1                              0087 00103000
         MVI   INTSTOP,C' '                                        0087 00104000
*   SIOPTR=ADDR(DVADS1);            /* INITIALIZE SIO DEV PTR        */ 00105000
         LA    @10,DVADS1(,AEDITCBR)                               0088 00106000
         ST    @10,SIOPTR                                          0088 00107000
*   IOPTR=ADDR(DVADS2);             /* INITIALIZE IO DEV PTR         */ 00108000
         LA    @02,DVADS2(,AEDITCBR)                               0089 00109000
         ST    @02,IOPTR                                           0089 00110000
*   JOBNPTR=ADDR(NAMES);            /* INITIALIZE JOBNAMES PTR       */ 00111000
         LA    @15,NAMES(,AEDITCBR)                                0090 00112000
         ST    @15,JOBNPTR                                         0090 00113000
*   ASCBPTR=ADDR(ADS);              /* INITIALIZE ASCB         Y02014   00114000
*                                      PTR                     Y02014*/ 00115000
         LA    @14,ADS(,AEDITCBR)                                  0091 00116000
         ST    @14,ASCBPTR                                         0091 00117000
*   SIOCRPTR=ADDR(DVADS1);          /* INITIALIZE NEW SIO DEV PTR    */ 00118000
         ST    @10,SIOCRPTR                                        0092 00119000
*   IOCRPTR=ADDR(DVADS2);           /* INITIALIZE NEW IO DEV PTR     */ 00120000
         ST    @02,IOCRPTR                                         0093 00121000
*   JOBCRPTR=ADDR(NAMES);           /* INITIALIZE NEW JOBN PTR       */ 00122000
         ST    @15,JOBCRPTR                                        0094 00123000
*   ASCBCPTR=ADDR(ADS);             /* INITIALIZE NEW          Y02014   00124000
*                                      ASCB PTR                Y02014*/ 00125000
         ST    @14,ASCBCPTR                                        0095 00126000
*   BUFADDR=ADDR(WTORMSG);          /* INITIALIZE BUFADDR            */ 00127000
         LA    @10,WTORMSG                                         0096 00128000
         ST    @10,BUFADDR                                         0096 00129000
*   SCANBIT='1'B;                   /* SET ON NOT-FIRST TIME SW      */ 00130000
         OI    SCANBIT,B'00100000'                                 0097 00131000
*   SCNPTR=VERBEND;                 /* FIRST COLUMN NUMBER           */ 00132000
         L     @10,VERBEND                                         0098 00133000
         ST    @10,SCNPTR                                          0098 00134000
*   GOTO AMDPSTRT;                  /* BRANCH TO BEGIN SCAN          */ 00135000
         B     AMDPSTRT                                            0099 00136000
*AMDPSCN1:                                                         0100 00137000
*   AEDITCBR=AEDITCB;               /* ESTABLISH BASE FOR PRTAB      */ 00138000
AMDPSCN1 L     AEDITCBR,AEDITCB                                    0100 00139000
*   SCNPTR=ADDR(WTORMSG);           /* INITIALIZE BUFFER POINTER     */ 00140000
         LA    @10,WTORMSG                                         0101 00141000
         ST    @10,SCNPTR                                          0101 00142000
*   GOTO AMDPSTT;                   /* OMIT COMMA CHK IF CONTNUTN    */ 00143000
         B     AMDPSTT                                             0102 00144000
*AMDPSTRT:                                                         0103 00145000
*   IF SCNCHAR=',' THEN             /* IF DEFAULTS REQUESTED,        */ 00146000
AMDPSTRT L     @10,SCNPTR                                          0103 00147000
         CLI   SCNCHAR(@10),C','                                   0103 00148000
         BE    @RT00103                                            0103 00149000
*     GOTO AMDSUMCL;                                               0104 00150000
*AMDPSTT:                                                          0105 00151000
*   IF SCNCHAR¬=' ' THEN            /* IF NON-BLANK, HAVE HIT        */ 00152000
AMDPSTT  L     @10,SCNPTR                                          0105 00153000
         CLI   SCNCHAR(@10),C' '                                   0105 00154000
         BNE   @RT00105                                            0105 00155000
*     GOTO AMDPSTR1;                /* MUST DELIMIT STMT             */ 00156000
*   SCNPTR=SCNPTR+1;                /* POSITION BUFFER POINTER       */ 00157000
         AL    @10,@CF00044                                        0107 00158000
         ST    @10,SCNPTR                                          0107 00159000
*   IF SCNPTR-BUFADDR               /* IF NOT AT END OF INPUT,       */ 00160000
*       <72 THEN                    /* THEN                          */ 00161000
         SL    @10,BUFADDR                                         0108 00162000
         C     @10,@CF00465                                        0108 00163000
         BL    @RT00108                                            0108 00164000
*     GOTO AMDPSTT;                 /* LOOK AT NEXT CHAR             */ 00165000
*                                                                  0109 00166000
*   /*****************************************************************/ 00167000
*   /*                                                               */ 00168000
*   /* SINCE NO KEYWORDS ON STATEMENT, ASSUME DEFAULTS               */ 00169000
*   /*                                                               */ 00170000
*   /*****************************************************************/ 00171000
*                                                                  0110 00172000
*AMDSUMCL:                                                         0110 00173000
*   CALL AMDPSUM1;                  /* BEGIN SUMMARY MESSAGE         */ 00174000
AMDSUMCL L     @15,@CV00417                                        0110 00175000
         BALR  @14,@15                                             0110 00176000
*AMDNRET:                                                          0111 00177000
*   RETURN;                         /* RETURN TO CALLER              */ 00178000
@EL00001 L     @13,4(,@13)                                         0111 00179000
@EF00001 DS    0H                                                  0111 00180000
@ER00001 L     @14,12(,@13)                                        0111 00181000
         LM    @00,@12,20(@13)                                     0111 00182000
         BR    @14                                                 0111 00183000
*AMDPSTR1:                                                         0112 00184000
*   ADDRS1=SCNPTR;                  /* HAVE FOUND KEYWRD BEGNING     */ 00185000
AMDPSTR1 L     @10,SCNPTR                                          0112 00186000
         ST    @10,ADDRS1                                          0112 00187000
*AMDPSTR2:                                                         0113 00188000
*   IF SCNCHAR=' ' THEN             /* IF BLANK FOUND, HAVE          */ 00189000
AMDPSTR2 L     @10,SCNPTR                                          0113 00190000
         CLI   SCNCHAR(@10),C' '                                   0113 00191000
         BE    @RT00113                                            0113 00192000
*     GOTO AMDPSTR3;                /* DELIMITED STMT                */ 00193000
*   SCNPTR=SCNPTR+1;                /* POSITION BUFFER POINTER       */ 00194000
         AL    @10,@CF00044                                        0115 00195000
         ST    @10,SCNPTR                                          0115 00196000
*   IF SCNPTR-BUFADDR               /* IF NOT AT END OF INPUT,       */ 00197000
*       <72 THEN                    /* THEN                          */ 00198000
         SL    @10,BUFADDR                                         0116 00199000
         C     @10,@CF00465                                        0116 00200000
         BL    @RT00116                                            0116 00201000
*     GOTO AMDPSTR2;                /* LOOK AT NEXT CHAR             */ 00202000
*AMDPSTR3:                                                         0118 00203000
*   EOCADDR=SCNPTR;                 /* SAVE PTR TO 1ST BLANK OR END     00204000
*                                      OF INPUT BUFFER-EOCADDR IS  0118 00205000
*                                      LOGICAL END OF BUFFER         */ 00206000
AMDPSTR3 L     @10,SCNPTR                                          0118 00207000
         ST    @10,EOCADDR                                         0118 00208000
*   SCNPTR=SCNPTR-1;                /* POSITION BUFFER POINTER       */ 00209000
         BCTR  @10,0                                               0119 00210000
         ST    @10,SCNPTR                                          0119 00211000
*   IF SCNCHAR=',' THEN             /* IF COMMA PRESENT, SET ON      */ 00212000
         CLI   SCNCHAR(@10),C','                                   0120 00213000
         BNE   @RF00120                                            0120 00214000
*     GCONTSW='1'B;                 /* CONTINUATION REQUESTED SW     */ 00215000
         OI    GCONTSW,B'00000100'                                 0121 00216000
*   SCNPTR=ADDRS1;                  /* RESET PTR TO KW BEGINNING     */ 00217000
*                                                                  0122 00218000
@RF00120 L     @10,ADDRS1                                          0122 00219000
         ST    @10,SCNPTR                                          0122 00220000
*   /*****************************************************************/ 00221000
*   /*                                                               */ 00222000
*   /* THE FOLLOWING ROUTINE BEGINS THE PROCESS OF ISOLATING A       */ 00223000
*   /* KEYWORD AND ITS VALUES.                                       */ 00224000
*   /*                                                               */ 00225000
*   /*****************************************************************/ 00226000
*                                                                  0123 00227000
*AMDPRES:                                                          0123 00228000
*   CODETABL='0'B;                  /* RE-INITIALIZE CODE TABLE      */ 00229000
AMDPRES  XC    CODETABL+1(2),CODETABL+1                            0123 00230000
         MVI   CODETABL,B'00000000'                                0123 00231000
*   LNGTH=0;                        /* KW/VALUE LENGTH=0             */ 00232000
         SLR   @10,@10                                             0124 00233000
         ST    @10,LNGTH                                           0124 00234000
*   EQUIND='0'B;                    /* NO SIO=IO OR IO=SIO YET       */ 00235000
         NI    EQUIND,B'11101111'                                  0125 00236000
*   COMP4=' ';                      /* BLANK COMPARE AREA            */ 00237000
         MVI   COMP4+1,C' '                                        0126 00238000
         MVC   COMP4+2(2),COMP4+1                                  0126 00239000
         MVI   COMP4,C' '                                          0126 00240000
*   COMP8=' ';                      /* BLANK COMPARE AREA            */ 00241000
         MVI   COMP8+1,C' '                                        0127 00242000
         MVC   COMP8+2(6),COMP8+1                                  0127 00243000
         MVI   COMP8,C' '                                          0127 00244000
*AMDPRES1:                                                         0128 00245000
*   IF SCNCHAR=' ' THEN             /* Q/DELIMITER                   */ 00246000
AMDPRES1 L     @10,SCNPTR                                          0128 00247000
         CLI   SCNCHAR(@10),C' '                                   0128 00248000
         BE    @RT00128                                            0128 00249000
*     GOTO AMDPRES2;                /* YES--EXAMINE KEYWORD          */ 00250000
*   IF SCNCHAR='=' THEN             /* Q/DELIMITER                   */ 00251000
         CLI   SCNCHAR(@10),C'='                                   0130 00252000
         BE    @RT00130                                            0130 00253000
*     GOTO AMDPRES2;                /* YES--EXAMINE KEYWORD          */ 00254000
*   IF SCNCHAR=',' THEN             /* Q/DELIMITER                   */ 00255000
         CLI   SCNCHAR(@10),C','                                   0132 00256000
         BE    @RT00132                                            0132 00257000
*     GOTO AMDPRES2;                /* YES--EXAMINE KEYWORD          */ 00258000
*   IF SCNPTR¬=EOCADDR              /* Q/AT END OF STATEMENT         */ 00259000
*     THEN                          /* NO                            */ 00260000
         C     @10,EOCADDR                                         0134 00261000
         BE    @RF00134                                            0134 00262000
*     DO;                           /* LOOK AT NEXT CHAR             */ 00263000
*       SCNPTR=SCNPTR+1;            /* POSITION BUFFER POINTER       */ 00264000
         AL    @10,@CF00044                                        0136 00265000
         ST    @10,SCNPTR                                          0136 00266000
*       GOTO AMDPRES1;              /* GO BACK TO SCAN AGAIN         */ 00267000
         B     AMDPRES1                                            0137 00268000
*     END;                                                         0138 00269000
*AMDPRES2:                                                         0139 00270000
*   LNGTH=SCNPTR-ADDRS1;            /* CALCULATE KEYWORD LENGTH      */ 00271000
@RF00134 DS    0H                                                  0139 00272000
AMDPRES2 L     @10,ADDRS1                                          0139 00273000
         L     @02,SCNPTR                                          0139 00274000
         SLR   @02,@10                                             0139 00275000
         ST    @02,LNGTH                                           0139 00276000
*   IF RUNEDIT='0'B THEN            /* NOT IN RETRY SITUATION        */ 00277000
         TM    RUNEDIT,B'00001000'                                 0140 00278000
         BZ    @RT00140                                            0140 00279000
*     GOTO AMDPRES3;                                               0141 00280000
*   RUNEDIT='0'B;                   /* IN RETRY SITUATION--SET OFF 0142 00281000
*                                      RETRY SWITCH                  */ 00282000
         NI    RUNEDIT,B'11110111'                                 0142 00283000
*   IF LNGTH¬=7 THEN                /* USER HAS NOT SPECIFIED        */ 00284000
         C     @02,@CF00055                                        0143 00285000
         BNE   @RT00143                                            0143 00286000
*     GOTO AMDPRES3;                /* 'RUNEDIT'                     */ 00287000
*   IF KEYWORD(1:7)                 /* USER WISHES TO RUN EDIT       */ 00288000
*       =CHARRUN THEN               /* WITH OPTIONS THUS FAR         */ 00289000
         CLC   KEYWORD(7,@10),CHARRUN                              0145 00290000
         BNE   @RF00145                                            0145 00291000
*     DO;                           /* SPECIFIED -- THEN             */ 00292000
*       CALL AMDPFIN;               /* PREPARE FOR SCAN TERM         */ 00293000
         L     @15,@CV00418                                        0147 00294000
         BALR  @14,@15                                             0147 00295000
*       GOTO AMDNRET;               /* RETURN TO CALLER              */ 00296000
         B     AMDNRET                                             0148 00297000
*     END;                                                         0149 00298000
*AMDPRES3:                                                         0150 00299000
*   IF SCNCHAR='=' THEN             /* CHECK FOR VALID KEYWORD       */ 00300000
@RF00145 DS    0H                                                  0150 00301000
AMDPRES3 L     @10,SCNPTR                                          0150 00302000
         CLI   SCNCHAR(@10),C'='                                   0150 00303000
         BE    @RT00150                                            0150 00304000
*     GOTO AMDPRES4;                /* FOLLOWED BY EQUAL SIGN        */ 00305000
*   IF LNGTH>4 THEN                 /* NO EQUAL SIGN SO        Y02014   00306000
*                                      CANNOT BE               Y02014*/ 00307000
         L     @10,LNGTH                                           0152 00308000
         C     @10,@CF00098                                        0152 00309000
         BH    @RT00152                                            0152 00310000
*     GOTO AMDPBDKW;                /* GTR THAN 4 CHARS        Y02014   00311000
*                                      IN LENGTH               Y02014*/ 00312000
*   IF LNGTH<1 THEN                 /* IF LENGTH IS < 1, IGNORE      */ 00313000
         LA    @02,1                                               0154 00314000
         CR    @10,@02                                             0154 00315000
         BL    @RT00154                                            0154 00316000
*     GOTO AMDPCLS1;                /* EXTRA DELIMITER               */ 00317000
*   COMP4(1:LNGTH)=KEYWORD          /* MOVE INTO COMPARE AREA        */ 00318000
*       (1:LNGTH);                                                 0156 00319000
*                                                                  0156 00320000
         BCTR  @10,0                                               0156 00321000
         L     @15,ADDRS1                                          0156 00322000
         EX    @10,@SM00659                                        0156 00323000
*   /*****************************************************************/ 00324000
*   /*                                                               */ 00325000
*   /* LOOP THROUGH KWTAB1 TO FIND KEYWORD MATCH                     */ 00326000
*   /*                                                               */ 00327000
*   /*****************************************************************/ 00328000
*                                                                  0157 00329000
*   DO I=1 TO 11;                   /* ELEVEN KEYWORDS IN      Y02014   00330000
*                                      TABLE                   Y02014*/ 00331000
         ST    @02,I                                               0157 00332000
@DL00157 DS    0H                                                  0158 00333000
*     IF COMP4=KWTAB1(I) THEN       /* IF MATCH FOUND, PROCEED TO    */ 00334000
         LR    @10,@02                                             0158 00335000
         SLA   @10,2                                               0158 00336000
         LA    @15,KWTAB1-4(@10)                                   0158 00337000
         CLC   COMP4(4),0(@15)                                     0158 00338000
         BE    @RT00158                                            0158 00339000
*       GOTO AMDPKW1;               /* BRANCH TO KW ROUTINE          */ 00340000
*   END;                            /* NO MATCH YET                  */ 00341000
         AL    @02,@CF00044                                        0160 00342000
         ST    @02,I                                               0160 00343000
         C     @02,@CF00273                                        0160 00344000
         BNH   @DL00157                                            0160 00345000
*   GOTO AMDPBDKW;                  /* NO MATCH IN TABLE--BAD KW     */ 00346000
         B     AMDPBDKW                                            0161 00347000
*AMDPKW1:                                                          0162 00348000
*   NOVAL='1'B;                     /* TO SIGNIFY TO KEYWORD RTN THAT   00349000
*                                      NO VALUES FOLLOW-- THUS, 'ALL'   00350000
*                                      IS INDICATED                  */ 00351000
AMDPKW1  OI    NOVAL,B'00100000'                                   0162 00352000
*   IF I=1 THEN                     /* IF PROCESSING SIO,            */ 00353000
         CLC   I(4),@CF00044                                       0163 00354000
         BNE   @RF00163                                            0163 00355000
*     X1(1)=X1(1)                   /* TURN ON SIO BIT               */ 00356000
*         |MASKS(8);                                               0164 00357000
         OC    X1(1),MASKS+7                                       0164 00358000
*   ELSE                                                           0165 00359000
*     DO;                           /*                         Y02014*/ 00360000
         B     @RC00163                                            0165 00361000
@RF00163 DS    0H                                                  0166 00362000
*       IF I=11|I=10 THEN           /* SET APPROPRIATE BIT     Y02014*/ 00363000
         L     @10,I                                               0166 00364000
         C     @10,@CF00273                                        0166 00365000
         BE    @RT00166                                            0166 00366000
         C     @10,@CF00488                                        0166 00367000
         BNE   @RF00166                                            0166 00368000
@RT00166 DS    0H                                                  0167 00369000
*         X1(3)=X1(3)|MASKS(I-9);   /*                         Y02014*/ 00370000
         L     @10,I                                               0167 00371000
         LA    @02,MASKS-10(@10)                                   0167 00372000
         OC    X1+2(1),0(@02)                                      0167 00373000
*       ELSE                                                       0168 00374000
*         X1(2)=X1(2)|MASKS(I-1);   /*                         Y02014*/ 00375000
         B     @RC00166                                            0168 00376000
@RF00166 L     @10,I                                               0168 00377000
         LA    @02,MASKS-2(@10)                                    0168 00378000
         OC    X1+1(1),0(@02)                                      0168 00379000
*     END;                          /*                         Y02014*/ 00380000
@RC00166 DS    0H                                                  0170 00381000
*   SVKEY=I;                        /* KEEP TRACK OF INDEX           */ 00382000
@RC00163 L     @10,I                                               0170 00383000
         ST    @10,SVKEY                                           0170 00384000
*   KWADDR=BRTAB(I+7);              /* CALC KW RTN ADDRS       Y02014*/ 00385000
         SLA   @10,2                                               0171 00386000
         L     KWADDR,BRTAB+24(@10)                                0171 00387000
*   CALL KWRTN;                     /* CALL APPROP KW RTN            */ 00388000
*                                                                  0172 00389000
         LR    @15,KWADDR                                          0172 00390000
         BALR  @14,@15                                             0172 00391000
*   /*****************************************************************/ 00392000
*   /*                                                               */ 00393000
*   /* THIS SUBROUTINE INTERROGATES THE CODE RETURNED BY AMDPRSN2 IN */ 00394000
*   /* ORDER TO DETERMINE THE ACTION NEXT TO BE PERFORMED BY MAINLINE*/ 00395000
*   /* SCAN (AMDPRSCN).                                              */ 00396000
*   /*                                                               */ 00397000
*   /*****************************************************************/ 00398000
*                                                                  0173 00399000
*AMDCDCK:                                                          0173 00400000
*   GENERATE;                                                      0173 00401000
AMDCDCK  DS    0H                                                  0173 00402000
*                                       /* USE A BRANCH TABLE        */ 00403000
         B     AMDRTN(REG15)            BRNCH TO APPROP ROUTINE         00404000
AMDRTN   B     AMDPEOC                  SET FLUSH MODE BIT              00405000
         B     AMDPEOC1                 DETERMINE IF AT END OF STMT     00406000
         B     AMDPRS51                 CHK FOR MATCHED PARENS          00407000
         B     AMDPMTD                  ISSUE UNMATCHED PARENS MSG      00408000
         B     AMDPCK1                  CHECK FOR NEXT KEYWORD          00409000
*AMDPBDKW:                                                         0174 00410000
*   SYNMSGA=ADDR(AD1);              /* INSERT ADDRS OF ADDRS OF INV     00411000
*                                      KEYWORD MSG INTO SYNMSGA      */ 00412000
AMDPBDKW L     @10,@CA00352                                        0174 00413000
         ST    @10,SYNMSGA                                         0174 00414000
*   ERRBUF(45:47)=KEYWORD(1:3);     /* MOVE IN 1ST 3 CHARS OF MSG    */ 00415000
         L     @10,MSGADDR(,@10)                                   0175 00416000
         L     @02,ADDRS1                                          0175 00417000
         MVC   ERRBUF+44(3,@10),KEYWORD(@02)                       0175 00418000
*   GNOSTDMG='1'B;                  /* OMIT ISSUANCE OF AMD165I      */ 00419000
         OI    GNOSTDMG,B'00010000'                                0176 00420000
*   CALL AMDPRSYN;                  /* HAVE MESSAGE WRITTEN          */ 00421000
*                                                                  0177 00422000
         L     @15,ASYNTAX                                         0177 00423000
         BALR  @14,@15                                             0177 00424000
*   /*****************************************************************/ 00425000
*   /*                                                               */ 00426000
*   /* SET THE FLUSH MODE SWITCH                                     */ 00427000
*   /*                                                               */ 00428000
*   /*****************************************************************/ 00429000
*                                                                  0178 00430000
*AMDPEOC:                                                          0178 00431000
*   FLMODE='1'B;                    /* SET ON FLUSH MODE BIT-- DONE     00432000
*                                      ONLY IF ERROR OCCURRD         */ 00433000
*                                                                  0178 00434000
AMDPEOC  OI    FLMODE(AEDITCBR),B'10000000'                        0178 00435000
*   /*****************************************************************/ 00436000
*   /*                                                               */ 00437000
*   /* DETERMINE IF AT LOGICAL END OF STATEMENT                      */ 00438000
*   /*                                                               */ 00439000
*   /*****************************************************************/ 00440000
*                                                                  0179 00441000
*AMDPEOC1:                                                         0179 00442000
*   IF SCNPTR=EOCADDR               /* IF AT LOGICAL END-OF-STMT     */ 00443000
*     THEN                          /* READY FOR END-OF-STMT         */ 00444000
AMDPEOC1 CLC   SCNPTR(4),EOCADDR                                   0179 00445000
         BNE   @RF00179                                            0179 00446000
*     DO;                           /* PROCEDURES                    */ 00447000
*       CALL AMDPEOC2;              /* EXECUTE PART OF AMDPRSN3      */ 00448000
         L     @15,@CV00419                                        0181 00449000
         BALR  @14,@15                                             0181 00450000
*       GOTO AMDNRET;               /* RETURN TO AMDPRCTL            */ 00451000
         B     AMDNRET                                             0182 00452000
*     END;                                                         0183 00453000
*   GOTO AMDPCK1;                   /* MOVE PAST CURRENT KEYWORD TO     00454000
*                                      NEXT KEYWORD                  */ 00455000
         B     AMDPCK1                                             0184 00456000
*AMDPRES4:                                                         0185 00457000
*   IF LNGTH>7 THEN                 /* KEYWORD IS TOO LONG           */ 00458000
AMDPRES4 L     @10,LNGTH                                           0185 00459000
         C     @10,@CF00055                                        0185 00460000
         BH    @RT00185                                            0185 00461000
*     GOTO AMDPBDKW;                                               0186 00462000
*   SCNPTR=SCNPTR+1;                /* POSITION BUFFER POINTER       */ 00463000
         LA    @02,1                                               0187 00464000
         L     @00,SCNPTR                                          0187 00465000
         ALR   @00,@02                                             0187 00466000
         ST    @00,SCNPTR                                          0187 00467000
*   IF SCNPTR=EOCADDR               /* IF ALREADY AT END OF CARD,    */ 00468000
*     THEN                          /* CAN HAVE NO VALUE AFTER       */ 00469000
         C     @00,EOCADDR                                         0188 00470000
         BE    @RT00188                                            0188 00471000
*     GOTO AMDPEC1L;                /* THE EQUAL SIGN--IGNORE KW     */ 00472000
*   IF SCNCHAR='(' THEN             /* CHECK FOR VALID PARENS        */ 00473000
         LR    @15,@00                                             0190 00474000
         CLI   SCNCHAR(@15),C'('                                   0190 00475000
         BE    @RT00190                                            0190 00476000
*     GOTO AMDPRS51;                /* IF LEFT PAREN PRESENT         */ 00477000
*   IF SCNCHAR=',' THEN                                            0192 00478000
         LR    @15,@00                                             0192 00479000
         CLI   SCNCHAR(@15),C','                                   0192 00480000
         BNE   @RF00192                                            0192 00481000
*     DO;                           /* FOLLOWED BY COMMA       Y02014*/ 00482000
*       KWDCOMP='';                 /* BLANK COMPARE AREA      Y02014*/ 00483000
         MVI   KWDCOMP,C' '                                        0194 00484000
         MVC   KWDCOMP+1(7),KWDCOMP                                0194 00485000
*       KWDCOMP(1:LNGTH)=KEYWORD(1:LNGTH);/* KEYWD             Y02014*/ 00486000
         BCTR  @10,0                                               0195 00487000
         L     @15,ADDRS1                                          0195 00488000
         EX    @10,@SM00663                                        0195 00489000
*       DO I=1 TO 11;               /* LOOP THRU KWDTAB2       Y02014*/ 00490000
         ST    @02,I                                               0196 00491000
@DL00196 DS    0H                                                  0197 00492000
*         IF KWDCOMP(1:8)=KWTAB2(I,1:8) THEN/* MATCH           Y02014*/ 00493000
         LR    @10,@02                                             0197 00494000
         SLA   @10,3                                               0197 00495000
         LA    @15,KWTAB2-8(@10)                                   0197 00496000
         CLC   KWDCOMP(8),0(@15)                                   0197 00497000
         BE    @RT00197                                            0197 00498000
*           GO TO CONT;             /* MATCH FOUND             Y02014*/ 00499000
*       END;                                                       0199 00500000
         AL    @02,@CF00044                                        0199 00501000
         ST    @02,I                                               0199 00502000
         C     @02,@CF00273                                        0199 00503000
         BNH   @DL00196                                            0199 00504000
*       GO TO AMDPBDKW;             /* BAD KWD MSG NEEDED      Y02014*/ 00505000
         B     AMDPBDKW                                            0200 00506000
*     END;                                                         0201 00507000
*CONT:                                                             0202 00508000
*   ADDRS3=SCNPTR;                  /* SAVE ADDRS OF 1ST CHAR IN   0202 00509000
*                                      KEYWORD VALUE                 */ 00510000
@RF00192 DS    0H                                                  0202 00511000
CONT     L     @10,SCNPTR                                          0202 00512000
         ST    @10,ADDRS3                                          0202 00513000
*   GOTO AMDPCHK;                   /* EXAMINE 1ST CHAR              */ 00514000
*                                                                  0203 00515000
         B     AMDPCHK                                             0203 00516000
*   /*****************************************************************/ 00517000
*   /*                                                               */ 00518000
*   /* THE FOLLOWING SUBROUTINE DETERMINES IF PARENTHESES ARE        */ 00519000
*   /* MATCHED. IF NOT, A DIAGNOSTIC IS ISSUED IN SUBROUTINE AMDPMTD.*/ 00520000
*   /* IF MATCHING PARENS ARE FOUND, POINTERS ARE RESET TO WHAT THEY */ 00521000
*   /* WERE AT ENTRY, AND PROCESSING CONTINUES.                      */ 00522000
*   /*                                                               */ 00523000
*   /*****************************************************************/ 00524000
*                                                                  0204 00525000
*AMDPRS51:                                                         0204 00526000
*   SCNPTR=SCNPTR+1;                /* POSITION BUFFER POINTER       */ 00527000
AMDPRS51 LA    @10,1                                               0204 00528000
         AL    @10,SCNPTR                                          0204 00529000
         ST    @10,SCNPTR                                          0204 00530000
*   ADDRS3=SCNPTR;                  /* SAVE ADDRS OF 1ST CHAR IN   0205 00531000
*                                      KEYWORD VALUE - CHARACTER   0205 00532000
*                                      FOLLOWS LEFT PAREN            */ 00533000
         ST    @10,ADDRS3                                          0205 00534000
*AMDPMTC:                                                          0206 00535000
*   IF SCNCHAR='(' THEN             /* IF LEFT PAREN, HAVE           */ 00536000
AMDPMTC  L     @10,SCNPTR                                          0206 00537000
         CLI   SCNCHAR(@10),C'('                                   0206 00538000
         BE    @RT00206                                            0206 00539000
*     GOTO AMDPMTD;                 /* UNMATCHED PARENTHESES         */ 00540000
*   IF SCNCHAR=')' THEN             /* IF RIGHT PAREN, HAVE          */ 00541000
         CLI   SCNCHAR(@10),C')'                                   0208 00542000
         BE    @RT00208                                            0208 00543000
*     GOTO AMDPMTC2;                /* MATCHED PARENTHESES           */ 00544000
*   SCNPTR=SCNPTR+1;                /* POSITION BUFFER POINTER       */ 00545000
         AL    @10,@CF00044                                        0210 00546000
         ST    @10,SCNPTR                                          0210 00547000
*   IF SCNPTR=EOCADDR               /* IF AT END OF CARD, DO NOT     */ 00548000
*     THEN                          /* HAVE MATCHED PARENS--NEED     */ 00549000
         C     @10,EOCADDR                                         0211 00550000
         BE    @RT00211                                            0211 00551000
*     GOTO AMDPMTD;                 /* ERROR MSG OUTPUTTED           */ 00552000
*   GOTO AMDPMTC;                   /* SCAN AGAIN FOR ( OR )         */ 00553000
*                                                                  0213 00554000
         B     AMDPMTC                                             0213 00555000
*   /*****************************************************************/ 00556000
*   /*                                                               */ 00557000
*   /* THIS SMALL SUBROUTINE ISSUES A DIAGNOSTIC IDENTIFYING AN      */ 00558000
*   /* INVALID PARENTHESES SITUATION.                                */ 00559000
*   /*                                                               */ 00560000
*   /*****************************************************************/ 00561000
*                                                                  0214 00562000
*AMDPMTD:                                                          0214 00563000
*   SYNMSGA=ADDR(AD2);              /* INSERT ADDRS OF ADDRS OF PAREN   00564000
*                                      MSG INTO SYNMSGA              */ 00565000
AMDPMTD  L     @10,@CA00352                                        0214 00566000
         LA    @10,AD2-AMDPRS00(,@10)                              0214 00567000
         ST    @10,SYNMSGA                                         0214 00568000
*   GNOSTDMG='1'B;                  /* OMIT ISSUANCE OF AMD165I      */ 00569000
         OI    GNOSTDMG,B'00010000'                                0215 00570000
*   CALL AMDPRSYN;                  /* HAVE MESSAGE WRITTEN          */ 00571000
         L     @15,ASYNTAX                                         0216 00572000
         BALR  @14,@15                                             0216 00573000
*   IF PAREN='1'B THEN              /* IF SITUATION IS THAT SINGLE 0217 00574000
*                                      VALUE IN PARENS THEN          */ 00575000
         TM    PAREN,B'00010000'                                   0217 00576000
         BO    @RT00217                                            0217 00577000
*     GOTO AMDPEOC;                 /* CAN GO ON IN THIS STATEMNT    */ 00578000
*   FLMODE='1'B;                    /* MUST SET FLUSH BIT AND IGNORE    00579000
*                                      REST OF STMT                  */ 00580000
         OI    FLMODE(AEDITCBR),B'10000000'                        0219 00581000
*AMDPEC1L:                                                         0220 00582000
*   CALL AMDPEOC2;                  /* TO RESET VALUES BEFORE        */ 00583000
AMDPEC1L L     @15,@CV00419                                        0220 00584000
         BALR  @14,@15                                             0220 00585000
*   GOTO AMDNRET;                   /* CURRENT LINE INPUTTED         */ 00586000
         B     AMDNRET                                             0221 00587000
*AMDPMTC2:                                                         0222 00588000
*   PAREN='1'B;                     /* MATCHED PARENS--SET     SWITCH*/ 00589000
AMDPMTC2 OI    PAREN,B'00010000'                                   0222 00590000
*   REM=SCNPTR-ADDRS3;              /* NUM OF CHARS BEFORE )         */ 00591000
         L     @10,SCNPTR                                          0223 00592000
         LR    REM,@10                                             0223 00593000
         SL    REM,ADDRS3                                          0223 00594000
*   SCNPTR=SCNPTR-REM;              /* RESET BUFFER POINTER          */ 00595000
         SLR   @10,REM                                             0224 00596000
         ST    @10,SCNPTR                                          0224 00597000
*   IF IORTNSW='1'B THEN            /* HAVE COME FROM SIO/IO RTN     */ 00598000
         TM    IORTNSW,B'10000000'                                 0225 00599000
         BNO   @RF00225                                            0225 00600000
*     DO;                           /* DO THE FOLLOWING              */ 00601000
*       CALL AMDPSIO;               /* CALL IO/SIO KEYWORD RTN       */ 00602000
         L     @15,@CV00388                                        0227 00603000
         BALR  @14,@15                                             0227 00604000
*       GOTO AMDCDCK;               /* CHECK RETURN CODE             */ 00605000
         B     AMDCDCK                                             0228 00606000
*     END;                                                         0229 00607000
*AMDPCHK:                                                          0230 00608000
*   IF SCNCHAR=',' THEN             /* MAY BE FINISHED WITH KW       */ 00609000
@RF00225 DS    0H                                                  0230 00610000
AMDPCHK  L     @10,SCNPTR                                          0230 00611000
         CLI   SCNCHAR(@10),C','                                   0230 00612000
         BNE   @RF00230                                            0230 00613000
*     DO;                           /* DO THE FOLLOWING              */ 00614000
*AMDPCHK1:                                                         0232 00615000
*       IF PAREN='1'B THEN          /* MUST FIND RIGHT PAREN IF      */ 00616000
AMDPCHK1 TM    PAREN,B'00010000'                                   0232 00617000
         BO    @RT00232                                            0232 00618000
*         GOTO AMDPCHK6;            /* IN MATCHED PAREN SITUATION    */ 00619000
*       GOTO AMDPCLS1;              /* WILL SEARCH FOR NXT KW        */ 00620000
         B     AMDPCLS1                                            0234 00621000
*     END;                                                         0235 00622000
*AMDPCHK2:                                                         0236 00623000
*   IF KEYWORD(1)='J' THEN          /* LENGTH DETERMINED BY KW       */ 00624000
@RF00230 DS    0H                                                  0236 00625000
AMDPCHK2 L     @10,ADDRS1                                          0236 00626000
         CLI   KEYWORD(@10),C'J'                                   0236 00627000
         BE    @RT00236                                            0236 00628000
*     GOTO AMDPLN;                  /* CHECK FOR VALID KEYWORD       */ 00629000
*   IF KEYWORD(1)='D' THEN          /* LENGTH DETERMINED BY KW       */ 00630000
         CLI   KEYWORD(@10),C'D'                                   0238 00631000
         BE    @RT00238                                            0238 00632000
*     GOTO AMDPLN;                  /* CHECK FOR VALID KEYWORD       */ 00633000
*   GOTO AMDPLN1;                   /* LENGTH WILL EQUAL 8           */ 00634000
*                                                                  0240 00635000
         B     AMDPLN1                                             0240 00636000
*   /*****************************************************************/ 00637000
*   /*                                                               */ 00638000
*   /* THIS SUBROUTINE POSITIONS THE BUFFER POINTER TO THE DELIMITER */ 00639000
*   /* PRECEDING THE NEXT KEYWORD, IF ONE EXISTS. OTHERWISE,         */ 00640000
*   /* END-0F-STATEMENT PROCEDURES ARE INVOKED IN MODULE AMDPRSN3.   */ 00641000
*   /*                                                               */ 00642000
*   /*****************************************************************/ 00643000
*                                                                  0241 00644000
*AMDPCK1:                                                          0241 00645000
*   IF PAREN='1'B THEN              /* IF MATCHED PARENS, MUST       */ 00646000
AMDPCK1  TM    PAREN,B'00010000'                                   0241 00647000
         BO    @RT00241                                            0241 00648000
*     GOTO AMDPCHK6;                /* FIND )                        */ 00649000
*AMDPCHK5:                                                         0243 00650000
*   IF SCNCHAR=',' THEN             /* HAVE FOUND DELIMITER--NXT     */ 00651000
AMDPCHK5 L     @10,SCNPTR                                          0243 00652000
         CLI   SCNCHAR(@10),C','                                   0243 00653000
         BE    @RT00243                                            0243 00654000
*     GOTO AMDPCLS1;                /* LOOK AT NXT KEYWORD           */ 00655000
*   IF SCNPTR=EOCADDR               /* IF AT LOGICAL END-OF-STMT,    */ 00656000
*     THEN                          /* READY FOR END-OF-STMT         */ 00657000
         C     @10,EOCADDR                                         0245 00658000
         BE    @RT00245                                            0245 00659000
*     GOTO AMDPEC1L;                /* PROCEDURES                    */ 00660000
*   IF SCNCHAR=' ' THEN             /* HAVE FOUND DELIMITER--NXT     */ 00661000
         CLI   SCNCHAR(@10),C' '                                   0247 00662000
         BE    @RT00247                                            0247 00663000
*     GOTO AMDPCLS1;                /* LOOK AT NXT KEYWORD           */ 00664000
*   SCNPTR=SCNPTR+1;                /* POSITION BUFFER POINTER       */ 00665000
         AL    @10,@CF00044                                        0249 00666000
         ST    @10,SCNPTR                                          0249 00667000
*   GOTO AMDPCHK5;                  /* CONTINUE SCAN FOR DELIM.      */ 00668000
         B     AMDPCHK5                                            0250 00669000
*AMDPCHK6:                                                         0251 00670000
*   IF SCNCHAR=')' THEN             /* HAVE FOUND PRELIM. DELIM.     */ 00671000
AMDPCHK6 L     @10,SCNPTR                                          0251 00672000
         CLI   SCNCHAR(@10),C')'                                   0251 00673000
         BE    @RT00251                                            0251 00674000
*     GOTO AMDPCHK5;                /* SCAN NOW FOR COMMA OR BLNK    */ 00675000
*   SCNPTR=SCNPTR+1;                /* POSITION BUFFER POINTER       */ 00676000
         AL    @10,@CF00044                                        0253 00677000
         ST    @10,SCNPTR                                          0253 00678000
*   GOTO AMDPCHK6;                  /* KEEP SCANNING FOR RIGHT )     */ 00679000
*                                                                  0254 00680000
         B     AMDPCHK6                                            0254 00681000
*   /*****************************************************************/ 00682000
*   /*                                                               */ 00683000
*   /* THIS SUBROUTINE POSITIONS THE BUFFER POINTER TO THE NEXT      */ 00684000
*   /* KEYWORD, IF ONE EXISTS. IF NOT, END-OF- STATEMENT PROCEDURES  */ 00685000
*   /* ARE INVOKED IN MODULE AMDPRSN3.                               */ 00686000
*   /*                                                               */ 00687000
*   /*****************************************************************/ 00688000
*                                                                  0255 00689000
*AMDPCLS1:                                                         0255 00690000
*   SCNPTR=SCNPTR+1;                /* MOVE TO 1ST CHAR OF NXT KW    */ 00691000
AMDPCLS1 LA    @10,1                                               0255 00692000
         AL    @10,SCNPTR                                          0255 00693000
         ST    @10,SCNPTR                                          0255 00694000
*   IF SCNPTR=EOCADDR               /* IF AT LOGICAL END-OF-STMT     */ 00695000
*     THEN                          /* READY FOR END-OF-STMT         */ 00696000
         C     @10,EOCADDR                                         0256 00697000
         BE    @RT00256                                            0256 00698000
*     GOTO AMDPEC1L;                /* PROCEDURES                    */ 00699000
*   ADDRS1=SCNPTR;                  /* SAVE LOCATION OF 1ST CHAR IN     00700000
*                                      NEXT KEYWORD                  */ 00701000
         ST    @10,ADDRS1                                          0258 00702000
*   GOTO AMDPRES;                   /* BEGIN KEYWORD SCAN AGAIN      */ 00703000
         B     AMDPRES                                             0259 00704000
*AMDPLN:                                                           0260 00705000
*   COMPLEN=LNGTH;                  /* KEYWORD VALIDITY CHECK BASED     00706000
*                                      ON LENGTH OF KEYWORD IF BEGINS   00707000
*                                      WITH J OR D                   */ 00708000
AMDPLN   L     COMPLEN,LNGTH                                       0260 00709000
*   GOTO AMDPLN2;                   /* BRANCH AROUND NEXT STMT       */ 00710000
         B     AMDPLN2                                             0261 00711000
*AMDPLN1:                                                          0262 00712000
*   COMPLEN=8;                      /* IN USUAL CASE, COMPARE LENGTH    00713000
*                                      EQUAL TO 8                    */ 00714000
AMDPLN1  LA    COMPLEN,8                                           0262 00715000
*AMDPLN2:                                                          0263 00716000
*   COMP8(1:LNGTH)=KEYWORD          /* MOVE IW INTO COMPARE AREA     */ 00717000
*       (1:LNGTH);                                                 0263 00718000
*                                                                  0263 00719000
AMDPLN2  L     @10,LNGTH                                           0263 00720000
         BCTR  @10,0                                               0263 00721000
         L     @05,ADDRS1                                          0263 00722000
         EX    @10,@SM00665                                        0263 00723000
*   /*****************************************************************/ 00724000
*   /*                                                               */ 00725000
*   /* LOOP THROUGH KWTAB2 TO FIND KEYWORD MATCH                     */ 00726000
*   /*                                                               */ 00727000
*   /*****************************************************************/ 00728000
*                                                                  0264 00729000
*   DO I=1 TO 11;                                                  0264 00730000
         LA    @10,1                                               0264 00731000
         ST    @10,I                                               0264 00732000
@DL00264 DS    0H                                                  0265 00733000
*     IF COMP8(1:COMPLEN)           /* IF MATCH FOUND,               */ 00734000
*         =KWTAB2(I,1:COMPLEN)      /* THEN                          */ 00735000
*       THEN                        /* PROCEED TO                    */ 00736000
         LR    @05,@10                                             0265 00737000
         SLA   @05,3                                               0265 00738000
         LR    @02,COMPLEN                                         0265 00739000
         BCTR  @02,0                                               0265 00740000
         LA    @15,KWTAB2-8(@05)                                   0265 00741000
         EX    @02,@SC00667                                        0265 00742000
         BE    @RT00265                                            0265 00743000
*       GOTO AMDPKW2;               /* BRANCH TO KW ROUTINE          */ 00744000
*   END;                            /* NO MATCH YET                  */ 00745000
         AL    @10,@CF00044                                        0267 00746000
         ST    @10,I                                               0267 00747000
         C     @10,@CF00273                                        0267 00748000
         BNH   @DL00264                                            0267 00749000
*   GOTO AMDPBDKW;                  /* NO MATCH/OUTPUT ERROR MSG     */ 00750000
         B     AMDPBDKW                                            0268 00751000
*AMDPKW2:                                                          0269 00752000
*   WORD=I/8;                       /* CALCULATE APPROP BYTE         */ 00753000
AMDPKW2  L     @10,I                                               0269 00754000
         LA    @02,8                                               0269 00755000
         LR    @04,@10                                             0269 00756000
         SRDA  @04,32                                              0269 00757000
         DR    @04,@02                                             0269 00758000
         ST    @05,WORD                                            0269 00759000
*   J=I//8;                         /* CALCULATE BIT IN BYTE         */ 00760000
         LR    @04,@10                                             0270 00761000
         SRDA  @04,32                                              0270 00762000
         D     @04,@CF00033                                        0270 00763000
         ST    @04,J                                               0270 00764000
*   IF J=0 THEN                     /* IF NO REMAINDER,              */ 00765000
         LTR   @04,@04                                             0271 00766000
         BNZ   @RF00271                                            0271 00767000
*     J=8;                          /* WILL USE LAST BIT             */ 00768000
         ST    @02,J                                               0272 00769000
*   ELSE                            /* IF REMAINDER, ARE INTO        */ 00770000
*     WORD=WORD+1;                  /* NEXT BYTE                     */ 00771000
         B     @RC00271                                            0273 00772000
@RF00271 LA    @10,1                                               0273 00773000
         AL    @10,WORD                                            0273 00774000
         ST    @10,WORD                                            0273 00775000
*   X1(WORD)=X1(WORD)|MASKS(J);     /* TURN ON APPROP BIT            */ 00776000
@RC00271 L     @10,WORD                                            0274 00777000
         LA    @02,X1-1(@10)                                       0274 00778000
         L     @10,J                                               0274 00779000
         LA    @15,MASKS-1(@10)                                    0274 00780000
         OC    0(1,@02),0(@15)                                     0274 00781000
*   SVKEY=(I+11);                   /* INDEX INCREASED BY NUM      0275 00782000
*                                      KEYWORDS IN KWTAB1            */ 00783000
         L     @10,I                                               0275 00784000
         LA    @02,11                                              0275 00785000
         ALR   @02,@10                                             0275 00786000
         ST    @02,SVKEY                                           0275 00787000
*   IF I=3                          /* IF PROCESSING START           */ 00788000
*       |I=4 THEN                   /* OR STOP KW, THEN              */ 00789000
         C     @10,@CF00168                                        0276 00790000
         BE    @RT00276                                            0276 00791000
         C     @10,@CF00098                                        0276 00792000
         BE    @RT00276                                            0276 00793000
*     GOTO AMDPPOS;                 /* GO TO THAT KW RTN             */ 00794000
*   IF I=7 THEN                     /* IF PROCESSING USR,            */ 00795000
         C     @10,@CF00055                                        0278 00796000
         BE    @RT00278                                            0278 00797000
*     GOTO AMDPUSR;                 /* GO TO THAT KW RTN             */ 00798000
*   KWADDR=BRTAB(I);                /* CALC KW RTN ADDRS             */ 00799000
         SLA   @10,2                                               0280 00800000
         L     KWADDR,BRTAB-4(@10)                                 0280 00801000
*   CALL KWRTN;                     /* CALL APPROP KW RTN            */ 00802000
         LR    @15,KWADDR                                          0281 00803000
         BALR  @14,@15                                             0281 00804000
*   GOTO AMDCDCK;                   /* CHECK RETURN CODE             */ 00805000
*                                                                  0282 00806000
         B     AMDCDCK                                             0282 00807000
*   /*****************************************************************/ 00808000
*   /*                                                               */ 00809000
*   /* THIS SUBROUTINE PROCESSES THE START AND STOP KEYWORDS.        */ 00810000
*   /* ACCEPTABLE VALUES ARE DDD/ DDD,HH/ DDD,HH.MM/ AND             */ 00811000
*   /* DDD,HH.MM.SS.                                                 */ 00812000
*   /*                                                               */ 00813000
*   /*****************************************************************/ 00814000
*                                                                  0283 00815000
*AMDPPOS:                                                          0283 00816000
*   IF CSTART='1'B THEN             /* IF PROCESSING 'START',        */ 00817000
AMDPPOS  TM    CSTART,B'00100000'                                  0283 00818000
         BO    @RT00283                                            0283 00819000
*     GOTO AMDPPOS1;                /* CHECK APPROPRIATE SLOTS       */ 00820000
*   IF STOPTIME¬=BLANK1             /* IF AMDPRTAB STOP VALUE        */ 00821000
*       |STOPSL¬=BLANK1 THEN        /* OR TEMPTAB STOP VALUE IS    0285 00822000
*                                      NON-BLANK, DO WHAT FOLLOWS    */ 00823000
         CLC   STOPTIME(12,AEDITCBR),BLANK1                        0285 00824000
         BNE   @RT00285                                            0285 00825000
         CLC   STOPSL(12),BLANK1                                   0285 00826000
         BNE   @RT00285                                            0285 00827000
*AMDC1CAL:                                                         0286 00828000
*     GOTO AMDPEOC1;                /* IGNORE THE CURRENT VAL AND  0286 00829000
*                                      SCAN FOR NEXT KW              */ 00830000
*   ALLPTR=ADDR(INTSTOP);           /* PROCESSING STOP VALUE         */ 00831000
         LA    @10,INTSTOP                                         0287 00832000
         ST    @10,ALLPTR                                          0287 00833000
*   GOTO AMDPPOS2;                  /* BEGIN VALUE SCAN              */ 00834000
         B     AMDPPOS2                                            0288 00835000
*AMDPPOS1:                                                         0289 00836000
*   IF STARTIME¬=BLANK1             /* IF AMDPRTAB START VALUE       */ 00837000
*       |STARTSL¬=BLANK1 THEN       /* OR TEMPTAB START VALUE IS     */ 00838000
AMDPPOS1 CLC   STARTIME(12,AEDITCBR),BLANK1                        0289 00839000
         BNE   @RT00289                                            0289 00840000
         CLC   STARTSL(12),BLANK1                                  0289 00841000
         BNE   @RT00289                                            0289 00842000
*     GOTO AMDPEOC1;                /* NON-BLANK, IGNORE CURRENT   0290 00843000
*                                      VALUE                         */ 00844000
*   ALLPTR=ADDR(INTSTART);          /* PROCESSING START VALUE        */ 00845000
         LA    @10,INTSTART                                        0291 00846000
         ST    @10,ALLPTR                                          0291 00847000
*AMDPPOS2:                                                         0292 00848000
*   IF SCNCHAR=','                  /* BEGIN VALUE SCAN              */ 00849000
*       |SCNCHAR=' '                /* IF DELIMITER OF COMMA,        */ 00850000
*       |SCNCHAR=')' THEN           /* BLANK OR RIGHT PAREN FOUND    */ 00851000
AMDPPOS2 L     @10,SCNPTR                                          0292 00852000
         CLI   SCNCHAR(@10),C','                                   0292 00853000
         BE    @RT00292                                            0292 00854000
         CLI   SCNCHAR(@10),C' '                                   0292 00855000
         BE    @RT00292                                            0292 00856000
         CLI   SCNCHAR(@10),C')'                                   0292 00857000
         BE    @RT00292                                            0292 00858000
*     GOTO AMDPPOS3;                /* CALCULATE VALUE LENGTH        */ 00859000
*   IF SCNPTR=EOCADDR               /* IF AT LOGICAL END-OF-STMT,    */ 00860000
*     THEN                          /* THEN                          */ 00861000
         C     @10,EOCADDR                                         0294 00862000
         BE    @RT00294                                            0294 00863000
*     GOTO AMDPPOS3;                /* CALCULATE VALUE LENGTH        */ 00864000
*   SCNPTR=SCNPTR+1;                /* POSITION BUFFER POINTER       */ 00865000
         AL    @10,@CF00044                                        0296 00866000
         ST    @10,SCNPTR                                          0296 00867000
*   GOTO AMDPPOS2;                  /* CONTINUE DELIMITER SCAN       */ 00868000
         B     AMDPPOS2                                            0297 00869000
*AMDPPOS3:                                                         0298 00870000
*   LNGTH=SCNPTR-ADDRS3;            /* CALCULATE VALUE LENGTH        */ 00871000
AMDPPOS3 L     @10,SCNPTR                                          0298 00872000
         SL    @10,ADDRS3                                          0298 00873000
         ST    @10,LNGTH                                           0298 00874000
*   IF LNGTH>3 THEN                 /* IF LENGTH>THREE,              */ 00875000
         C     @10,@CF00168                                        0299 00876000
         BNH   @RF00299                                            0299 00877000
*     DO;                           /* OUTPUT BAD VALUE LNGTH MSG    */ 00878000
*AMDVLNCL:                                                         0301 00879000
*       CALL AMDVLEN;               /* HAVE MESSAGE ISSUED           */ 00880000
AMDVLNCL L     @15,@CV00422                                        0301 00881000
         BALR  @14,@15                                             0301 00882000
*       GOTO AMDCDCK;               /* CHECK RETURN CODE             */ 00883000
         B     AMDCDCK                                             0302 00884000
*     END;                                                         0303 00885000
*   IF LNGTH<1 THEN                 /* IF LENGTH<ONE,                */ 00886000
@RF00299 L     @10,LNGTH                                           0304 00887000
         LTR   @10,@10                                             0304 00888000
         BP    @RF00304                                            0304 00889000
*     DO;                           /* THEN DO THE FOLLOWING         */ 00890000
*AMDELMCL:                                                         0306 00891000
*       CALL AMDELIM;               /* OUTPUT BAD DELIM MSG          */ 00892000
AMDELMCL L     @15,@CV00423                                        0306 00893000
         BALR  @14,@15                                             0306 00894000
*       GOTO AMDCDCK;               /* CHECK RETURN CODE             */ 00895000
         B     AMDCDCK                                             0307 00896000
*     END;                                                         0308 00897000
*   COMP4=' ';                      /* BLANK COMPARE AREA            */ 00898000
@RF00304 MVI   COMP4+1,C' '                                        0309 00899000
         MVC   COMP4+2(2),COMP4+1                                  0309 00900000
         MVI   COMP4,C' '                                          0309 00901000
*   COMP4(2:4)='366';               /* MOVE IN MAX NUM DAYS IN YR    */ 00902000
         MVC   COMP4+1(3),@CC00550                                 0310 00903000
*   CHARWORD=' ';                   /* BLANK WORK AREA               */ 00904000
         MVI   CHARWORD+1,C' '                                     0311 00905000
         MVC   CHARWORD+2(2),CHARWORD+1                            0311 00906000
         MVI   CHARWORD,C' '                                       0311 00907000
*   CHARWORD(5-LNGTH:4)             /* RIGHT JUSTIFY SPECIFIED       */ 00908000
*       =VAL1(1:LNGTH);             /* DDD                           */ 00909000
         LA    @10,5                                               0312 00910000
         SL    @10,LNGTH                                           0312 00911000
         LA    @02,CHARWORD-1(@10)                                 0312 00912000
         LCR   @10,@10                                             0312 00913000
         AL    @10,@CF00098                                        0312 00914000
         L     @15,ADDRS3                                          0312 00915000
         EX    @10,@SM00669                                        0312 00916000
*   IF CHARWORD>COMP4 THEN          /* IF VALUE>CHAR. 366, THEN      */ 00917000
         CLC   CHARWORD(4),COMP4                                   0313 00918000
         BNH   @RF00313                                            0313 00919000
*     DO;                           /* OUTPUT BAD VALUE MSG          */ 00920000
*AMDVMGCL:                                                         0315 00921000
*       CALL AMDVLMG;               /* ISSUE DIAGNOSTIC              */ 00922000
AMDVMGCL L     @15,@CV00424                                        0315 00923000
         BALR  @14,@15                                             0315 00924000
*       GOTO AMDCDCK;               /* CHECK RETURN CODE             */ 00925000
         B     AMDCDCK                                             0316 00926000
*     END;                                                         0317 00927000
*   CHARWORD=' ';                   /* BLANK WORK AREA               */ 00928000
@RF00313 MVI   CHARWORD+1,C' '                                     0318 00929000
         MVC   CHARWORD+2(2),CHARWORD+1                            0318 00930000
         MVI   CHARWORD,C' '                                       0318 00931000
*   CHARWORD(1:LNGTH)               /* LEFT JUSTIFY DDD              */ 00932000
*       =VAL1(1:LNGTH);                                            0319 00933000
*                                                                  0319 00934000
         L     @10,LNGTH                                           0319 00935000
         BCTR  @10,0                                               0319 00936000
         L     @02,ADDRS3                                          0319 00937000
         EX    @10,@SM00671                                        0319 00938000
*   /*****************************************************************/ 00939000
*   /*                                                               */ 00940000
*   /* CONVRT PRINTABLE DECIMAL TO INTERNAL (PACKED) DECIMAL.        */ 00941000
*   /*                                                               */ 00942000
*   /*****************************************************************/ 00943000
*                                                                  0320 00944000
*   RFY                                                            0320 00945000
*    (REG4,                                                        0320 00946000
*     REG5,                                                        0320 00947000
*     REG6) RSTD;                   /* NEED THESE REGS         Y02014*/ 00948000
*   REG4=ADDRS3;                    /* OBTAIN PTR TO FIRST CHAR      */ 00949000
         LR    REG4,@02                                            0321 00950000
*   REG6=LNGTH-1;                   /* OBTAIN VALUE LENGTH - ONE     */ 00951000
         LR    REG6,@10                                            0322 00952000
*   REG5=ALLPTR;                    /* GET PTR TO START/STOP SLOT    */ 00953000
         L     REG5,ALLPTR                                         0323 00954000
*   GENERATE;                                                      0324 00955000
         EX  R6,PACKDGTS                EXECUTE PACK INSTRUCTION        00956000
         B   AMDPPOS4                   FINISHED WITH CONVERSION        00957000
PACKDGTS PACK  0(2,R5),0(0,R4) PACK DIGITS                              00958000
*   RFY                                                            0325 00959000
*    (REG4,                                                        0325 00960000
*     REG5,                                                        0325 00961000
*     REG6) UNRSTD;                 /*                         Y02014*/ 00962000
*AMDPPOS4:                                                         0326 00963000
*   IF PAREN='0'B THEN              /* IF ONLY DDD SPECIFIED,        */ 00964000
AMDPPOS4 TM    PAREN,B'00010000'                                   0326 00965000
         BZ    @RT00326                                            0326 00966000
*     GOTO AMDPSLT;                 /* BEGIN TEMPTAB VAL INSERTN     */ 00967000
*   IF SCNCHAR=')' THEN             /* IF HAVE (DDD), THEN           */ 00968000
         L     @10,SCNPTR                                          0328 00969000
         CLI   SCNCHAR(@10),C')'                                   0328 00970000
         BE    @RT00328                                            0328 00971000
*     GOTO AMDPSLT;                 /* NO MORE VALUES                */ 00972000
*AMDPOS41:                                                         0330 00973000
*   ADDRS3=SCNPTR+1;                /* SAVE VALUE BEG'NG ADDRS       */ 00974000
AMDPOS41 LA    @10,1                                               0330 00975000
         AL    @10,SCNPTR                                          0330 00976000
         ST    @10,ADDRS3                                          0330 00977000
*   SCNPTR=SCNPTR+1;                /* UPDATE BUFFER POINTER         */ 00978000
         ST    @10,SCNPTR                                          0331 00979000
*AMDPPOS5:                                                         0332 00980000
*   IF SCNCHAR=')' THEN             /* IF RIGHT PAREN AS DELIM,      */ 00981000
AMDPPOS5 L     @10,SCNPTR                                          0332 00982000
         CLI   SCNCHAR(@10),C')'                                   0332 00983000
         BE    @RT00332                                            0332 00984000
*     GOTO AMDPPOS6;                /* GO CALCULATE LENGTH           */ 00985000
*   IF SCNCHAR='.' THEN             /* IF PERIOD AS DELIM,           */ 00986000
         CLI   SCNCHAR(@10),C'.'                                   0334 00987000
         BNE   @RF00334                                            0334 00988000
*     DO;                           /* DO THE FOLLOWING              */ 00989000
*       MORESW='1'B;                /* MORE TO COME                  */ 00990000
         OI    MORESW,B'01000000'                                  0336 00991000
*       GOTO AMDPPOS6;              /* GO CALCULATE LENGTH           */ 00992000
         B     AMDPPOS6                                            0337 00993000
*     END;                          /* PERIOD WAS DELIMITER          */ 00994000
*   IF SCNCHAR=',' THEN             /* COMMA NOT LEGAL DELIMITER     */ 00995000
@RF00334 L     @10,SCNPTR                                          0339 00996000
         CLI   SCNCHAR(@10),C','                                   0339 00997000
         BE    @RT00339                                            0339 00998000
*     GOTO AMDELMCL;                /* ISSUE DIAGNOSTIC MESSAGE      */ 00999000
*   IF SCNPTR=EOCADDR               /* IF AT LOGICAL END OF STMT,    */ 01000000
*     THEN                          /* THEN                          */ 01001000
         C     @10,EOCADDR                                         0341 01002000
         BE    @RT00341                                            0341 01003000
*     GOTO AMDPPOS6;                /* GO CALCULATE LENGTH           */ 01004000
*   SCNPTR=SCNPTR+1;                /* POSITION BUFFER POINTER       */ 01005000
         AL    @10,@CF00044                                        0343 01006000
         ST    @10,SCNPTR                                          0343 01007000
*   GOTO AMDPPOS5;                  /* CONTINUE DELIMITER SCAN       */ 01008000
         B     AMDPPOS5                                            0344 01009000
*AMDPPOS6:                                                         0345 01010000
*   LNGTH=SCNPTR-ADDRS3;            /* CALCULATE LENGTH              */ 01011000
AMDPPOS6 L     @10,SCNPTR                                          0345 01012000
         SL    @10,ADDRS3                                          0345 01013000
         ST    @10,LNGTH                                           0345 01014000
*   IF LNGTH>2 THEN                 /* Q/TOO LONG                    */ 01015000
         C     @10,@CF00077                                        0346 01016000
         BH    @RT00346                                            0346 01017000
*     GOTO AMDVLNCL;                /* YES--BAD VALUE LENGTH MSG     */ 01018000
*   IF LNGTH<1 THEN                 /* Q/TOO SHORT                   */ 01019000
         LTR   @10,@10                                             0348 01020000
         BNP   @RT00348                                            0348 01021000
*     GOTO AMDELMCL;                /* YES--INVALID DELIMITER MSG    */ 01022000
*   IF FIVECHAR(5)¬=' '             /* IF SECONDS AREA ALREADY       */ 01023000
*     THEN                          /* FILLED IN, THEN HAVE TOO      */ 01024000
         L     @10,ALLPTR                                          0350 01025000
         CLI   FIVECHAR+4(@10),C' '                                0350 01026000
         BNE   @RT00350                                            0350 01027000
*     GOTO AMDVLNCL;                /* MANY VALUE PORTIONS           */ 01028000
*   IF FIVECHAR(4)¬=' '             /* IF MINUTES AREA ALREADY       */ 01029000
*     THEN                          /* FILLED IN, NOW PROCESSING     */ 01030000
         CLI   FIVECHAR+3(@10),C' '                                0352 01031000
         BE    @RF00352                                            0352 01032000
*     DO;                           /* SECONDS, SO                   */ 01033000
*       SECIND='1'B;                /* SECONDS--VALIDITY CHECK       */ 01034000
         OI    SECIND,B'10000000'                                  0354 01035000
*       GOTO AMDPPOS7;              /* VALUE AFTER CNVRTING IT       */ 01036000
         B     AMDPPOS7                                            0355 01037000
*     END;                          /* SECONDS BEING PROCESSED       */ 01038000
*   IF FIVECHAR(3)¬=' '             /* IF HOURS AREA ALREADY         */ 01039000
*     THEN                          /* FILLED IN, NOW PROCESSING     */ 01040000
@RF00352 L     @10,ALLPTR                                          0357 01041000
         CLI   FIVECHAR+2(@10),C' '                                0357 01042000
         BE    @RF00357                                            0357 01043000
*     MININD='1'B;                  /* MINUTES                       */ 01044000
         OI    MININD,B'01000000'                                  0358 01045000
*AMDPPOS7:                                                         0359 01046000
*   CALL AMDPRCVB;                  /* CONVERT VALUE TO BINARY       */ 01047000
@RF00357 DS    0H                                                  0359 01048000
AMDPPOS7 L     @15,@CV00420                                        0359 01049000
         BALR  @14,@15                                             0359 01050000
*   IF MININD='1'B                  /* IF PROCESSING MINUTES         */ 01051000
*       |SECIND='1'B THEN           /* OR SECONDS,                   */ 01052000
         TM    MININD,B'11000000'                                  0360 01053000
         BNZ   @RT00360                                            0360 01054000
*     GOTO AMDPPOS8;                /* CHK THAT NOT >59              */ 01055000
*   IF COMP4>23 THEN                /* IF VALUE OVER 23, OUTPUT      */ 01056000
         CLC   COMP4(4),@CF00566                                   0362 01057000
         BH    @RT00362                                            0362 01058000
*     GOTO AMDVMGCL;                /* INVALID VALUE MESSAGE         */ 01059000
*   FIVECHAR(3)=COMP4(4);           /* INSERT HOURS IN HOUR AREA     */ 01060000
         L     @10,ALLPTR                                          0364 01061000
         MVC   FIVECHAR+2(1,@10),COMP4+3                           0364 01062000
*AMDPMOR:                                                          0365 01063000
*   IF MORESW='1'B THEN             /* IF MORE VALUES FOLLOW,        */ 01064000
AMDPMOR  TM    MORESW,B'01000000'                                  0365 01065000
         BNO   @RF00365                                            0365 01066000
*     DO;                           /* DO THE FOLLOWING              */ 01067000
*       MORESW='0'B;                /* SET OFF INDICATOR SWITCH      */ 01068000
         NI    MORESW,B'10111111'                                  0367 01069000
*       GOTO AMDPOS41;              /* SCAN FOR ADDITIONAL VALUES    */ 01070000
         B     AMDPOS41                                            0368 01071000
*     END;                          /* MORESW WAS ON                 */ 01072000
*AMDPSLT:                                                          0370 01073000
*   IF CSTART='1'B THEN             /* IF PROCESSING 'START',        */ 01074000
@RF00365 DS    0H                                                  0370 01075000
AMDPSLT  TM    CSTART,B'00100000'                                  0370 01076000
         BNO   @RF00370                                            0370 01077000
*     DO;                           /* DO THE FOLLOWING              */ 01078000
*       DY=FIVECHAR(1:2);           /* INSERT DDD IN START SLOT      */ 01079000
         L     @10,ALLPTR                                          0372 01080000
         MVC   DY(2),FIVECHAR(@10)                                 0372 01081000
*       GOTO AMDPSLT1;              /* IN TEMPTAB--CONTINUE          */ 01082000
         B     AMDPSLT1                                            0373 01083000
*     END;                          /* PROCESSING 'START'            */ 01084000
*   DYSTP=FIVECHAR(1:2);            /* INSERT DDD IN STOP SLOT       */ 01085000
@RF00370 L     @10,ALLPTR                                          0375 01086000
         MVC   DYSTP(2),FIVECHAR(@10)                              0375 01087000
*AMDPSLT1:                                                         0376 01088000
*   IF FIVECHAR(3)=' '              /* IF HOURS NOT SPECIFIED,       */ 01089000
*     THEN                          /* THEN NO TIME SPECIFIED        */ 01090000
AMDPSLT1 L     @10,ALLPTR                                          0376 01091000
         CLI   FIVECHAR+2(@10),C' '                                0376 01092000
         BNE   @RF00376                                            0376 01093000
*     DO;                           /* DO THE FOLLOWING              */ 01094000
*                                                                  0377 01095000
*       /*************************************************************/ 01096000
*       /*                                                           */ 01097000
*       /* SET TO ZERO THE HH, MM, AND SS BYTES IN THE INTERNAL TIME */ 01098000
*       /* SLOT                                                      */ 01099000
*       /*                                                           */ 01100000
*       /*************************************************************/ 01101000
*                                                                  0378 01102000
*       DO I=3 TO 5;                /* ZERO OUT HH, MM, SS BYTES     */ 01103000
         LA    @10,3                                               0378 01104000
         ST    @10,I                                               0378 01105000
@DL00378 DS    0H                                                  0379 01106000
*         FIVECHAR(I)               /* SET EACH BYTE TO ZERO         */ 01107000
*             ='00'X;                                              0379 01108000
         L     @02,ALLPTR                                          0379 01109000
         ALR   @02,@10                                             0379 01110000
         BCTR  @02,0                                               0379 01111000
         MVI   FIVECHAR(@02),X'00'                                 0379 01112000
*       END;                                                       0380 01113000
         AL    @10,@CF00044                                        0380 01114000
         ST    @10,I                                               0380 01115000
         C     @10,@CF00085                                        0380 01116000
         BNH   @DL00378                                            0380 01117000
*       IF CSTART='1'B THEN         /* IF PROCESSING 'START',        */ 01118000
         TM    CSTART,B'00100000'                                  0381 01119000
         BNO   @RF00381                                            0381 01120000
*         TIMEU=TIMEU               /* START TIMER UNITS=ZERO        */ 01121000
*             &&TIMEU;                                             0382 01122000
         XC    TIMEU(8),TIMEU                                      0382 01123000
*       ELSE                        /* STOP TIMER UNITS=ZERO         */ 01124000
*         TIMERU=TIMERU             /* STOP TIMER UNITS=ZERO         */ 01125000
*             &&TIMERU;                                            0383 01126000
         B     @RC00381                                            0383 01127000
@RF00381 XC    TIMERU(8),TIMERU                                    0383 01128000
*       GOTO AMDPEOC1;              /* SEARCH FOR NEXT KEYWORD       */ 01129000
         B     AMDPEOC1                                            0384 01130000
*     END;                          /* NO HOURS SPECIFIED            */ 01131000
*   IF FIVECHAR(4)=' ' THEN         /* IF NO MINUTES SPECIFIED,      */ 01132000
@RF00376 L     @10,ALLPTR                                          0386 01133000
         CLI   FIVECHAR+3(@10),C' '                                0386 01134000
         BNE   @RF00386                                            0386 01135000
*     FIVECHAR(4)='00'X;            /* INSERT ZEROES IN THEIR PLC    */ 01136000
         MVI   FIVECHAR+3(@10),X'00'                               0387 01137000
*   IF FIVECHAR(5)=' '              /* IF NO SECONDS SPECIFIED,      */ 01138000
*     THEN                          /* THEN                          */ 01139000
@RF00386 L     @10,ALLPTR                                          0388 01140000
         CLI   FIVECHAR+4(@10),C' '                                0388 01141000
         BNE   @RF00388                                            0388 01142000
*     FIVECHAR(5)='00'X;            /* INSERT ZEROES IN THEIR PLC    */ 01143000
         MVI   FIVECHAR+4(@10),X'00'                               0389 01144000
*   RFY                                                            0390 01145000
*    (REG4,                                                        0390 01146000
*     REG5,                                                        0390 01147000
*     REG6,                         /* NEED THESE REGS         Y02014*/ 01148000
*     REG7) RSTD;                   /*                         Y02014*/ 01149000
@RF00388 DS    0H                                                  0391 01150000
*   IF CSTART='1'B THEN             /* IF PROCESSING START VALUE,    */ 01151000
         TM    CSTART,B'00100000'                                  0391 01152000
         BNO   @RF00391                                            0391 01153000
*     REG5=FIVECHAR(3)              /* REG 5 CONTAINS TOTAL NUM      */ 01154000
*         *THREESIX+FIVECHAR(4)     /* OF                            */ 01155000
*         *SIXTY+FIVECHAR(5);       /* SECONDS SPECIFIED             */ 01156000
         L     @10,ALLPTR                                          0392 01157000
         SLR   @15,@15                                             0392 01158000
         IC    @15,FIVECHAR+2(,@10)                                0392 01159000
         M     @14,THREESIX                                        0392 01160000
         ST    @15,@TF00001                                        0392 01161000
         SLR   @15,@15                                             0392 01162000
         IC    @15,FIVECHAR+3(,@10)                                0392 01163000
         M     @14,SIXTY                                           0392 01164000
         AL    @15,@TF00001                                        0392 01165000
         SLR   REG5,REG5                                           0392 01166000
         IC    REG5,FIVECHAR+4(,@10)                               0392 01167000
         ALR   @15,REG5                                            0392 01168000
         LR    REG5,@15                                            0392 01169000
*   ELSE                            /* IF STOP VALUE, THEN           */ 01170000
*     REG5=FIVECHAR(3)              /* REG 5 CONTAINS TOTAL NUM      */ 01171000
*         *THREESIX+FIVECHAR(4)     /* OF                            */ 01172000
*         *SIXTY+FIVECHAR(5)+       /* SECONDS SPECIFIED PLUS        */ 01173000
*         1;                        /* 1 TO ALLOW FOR REC TIME >     */ 01174000
         B     @RC00391                                            0393 01175000
@RF00391 L     @10,ALLPTR                                          0393 01176000
         SLR   @15,@15                                             0393 01177000
         IC    @15,FIVECHAR+2(,@10)                                0393 01178000
         M     @14,THREESIX                                        0393 01179000
         ST    @15,@TF00001                                        0393 01180000
         SLR   @15,@15                                             0393 01181000
         IC    @15,FIVECHAR+3(,@10)                                0393 01182000
         M     @14,SIXTY                                           0393 01183000
         AL    @15,@TF00001                                        0393 01184000
         SLR   REG5,REG5                                           0393 01185000
         IC    REG5,FIVECHAR+4(,@10)                               0393 01186000
         ALR   @15,REG5                                            0393 01187000
         AL    @15,@CF00044                                        0393 01188000
         LR    REG5,@15                                            0393 01189000
*   GEN(M REG4,MILLION);            /* REGS 4 AND 5 CONTAIN # OF   0394 01190000
*                                      MICROSECONDS                  */ 01191000
@RC00391 DS    0H                                                  0394 01192000
         M REG4,MILLION                                                 01193000
*   GEN(D REG4,NUM2604);            /* DIVIDE BY 2604                */ 01194000
         D REG4,NUM2604                                                 01195000
*   REG7=REG4;                      /* SAVE THE REMAINDER            */ 01196000
         LR    REG7,REG4                                           0396 01197000
*   GENERATE;                                                      0397 01198000
         M REG4,HUNDRED                 REG5=TIMER UNITS SUBTOTAL #1    01199000
         M REG6,HUNDRED                 REG6 CONTAINS                   01200000
         D REG6,NUM2604                 TIMER UNITS SUBTOTAL #2         01201000
*   IF REG6=>HALFTIME               /* IF REMAINDER>=1302            */ 01202000
*       &REG6¬=NUM2604 THEN         /* AND DIVIDEND WAS NOT = 0      */ 01203000
         C     REG6,HALFTIME                                       0398 01204000
         BL    @RF00398                                            0398 01205000
         C     REG6,NUM2604                                        0398 01206000
         BE    @RF00398                                            0398 01207000
*     REG7=REG7+1;                  /* ADD ONE TO QUOTIENT           */ 01208000
         AL    REG7,@CF00044                                       0399 01209000
*   GEN(ALR REG5,REG7);             /* REG5=TOTAL TIMER UNITS        */ 01210000
@RF00398 DS    0H                                                  0400 01211000
         ALR REG5,REG7                                                  01212000
*   IF CSTART='1'B THEN             /* IF PROCESSING 'START' VAL     */ 01213000
         TM    CSTART,B'00100000'                                  0401 01214000
         BNO   @RF00401                                            0401 01215000
*     DO;                           /* DO THE FOLLOWING              */ 01216000
*       TIMEU=TIMEU&&TIMEU;         /* ZERO START TIMER        Y02014*/ 01217000
         XC    TIMEU(8),TIMEU                                      0403 01218000
*       TIMEU(5:8)=REG5;            /* INSERT START TIMER UNITS      */ 01219000
         STCM  REG5,15,TIMEU+4                                     0404 01220000
*     END;                          /* CHECK STOP SLOTS FOR VALS     */ 01221000
*   ELSE                            /* IF PROCESSING 'STOP' VAL      */ 01222000
*     DO;                           /* DO THE FOLLOWING              */ 01223000
         B     @RC00401                                            0406 01224000
@RF00401 DS    0H                                                  0407 01225000
*       TIMERU=TIMERU&&TIMERU;      /* ZERO STOP TIMER         Y02014*/ 01226000
         XC    TIMERU(8),TIMERU                                    0407 01227000
*       TIMERU(5:8)=REG5;           /* INSERT STOP TIMER UNITS       */ 01228000
         STCM  REG5,15,TIMERU+4                                    0408 01229000
*       GOTO AMDPPOS9;              /* STOP SLOT HAS TIMER UNITS     */ 01230000
         B     AMDPPOS9                                            0409 01231000
*     END;                          /* AND NOW EXAMINE START SLTS    */ 01232000
*   IF TIME2¬=BLANK1 THEN           /* IF PRTAB STOP SLOT NON-BNK    */ 01233000
@RC00401 CLC   TIME2(8,AEDITCBR),BLANK1                            0411 01234000
         BNE   @RT00411                                            0411 01235000
*     GOTO AMDPPOSA;                /* CHECK IF START>STOP           */ 01236000
*   IF TIMERU¬=BLANK1 THEN          /* IF TTAB STOP SLOT NON-BLNK    */ 01237000
         CLC   TIMERU(8),BLANK1                                    0413 01238000
         BNE   @RT00413                                            0413 01239000
*     GOTO AMDPOSA1;                /* CHECK IF START>STOP           */ 01240000
*   GOTO AMDPEOC1;                  /* OTHERWISE, LOOK FOR NXT KW    */ 01241000
         B     AMDPEOC1                                            0415 01242000
*   RFY                                                            0416 01243000
*    (REG4,                                                        0416 01244000
*     REG5,                                                        0416 01245000
*     REG6,                         /* RELEASE THESE REG       Y02014*/ 01246000
*     REG7) UNRSTD;                 /*                         Y02014*/ 01247000
*AMDPPOS9:                                                         0417 01248000
*   IF TIME¬=BLANK1 THEN            /* IF PRTAB START SLOT IS      0417 01249000
*                                      NON-BLANK, THEN               */ 01250000
AMDPPOS9 CLC   TIME(8,AEDITCBR),BLANK1                             0417 01251000
         BNE   @RT00417                                            0417 01252000
*     GOTO AMDPPOSB;                /* CHECK IF START>STOP           */ 01253000
*   IF TIMEU¬=BLANK1 THEN           /* IF TTAB START SLOT IS       0419 01254000
*                                      NON-BLANK, THEN               */ 01255000
         CLC   TIMEU(8),BLANK1                                     0419 01256000
         BNE   @RT00419                                            0419 01257000
*     GOTO AMDPOSA1;                /* CHECK IF START>STOP           */ 01258000
*   GOTO AMDPEOC1;                  /* OTHERWISE, LOOK FOR NXT KW    */ 01259000
*                                                                  0421 01260000
         B     AMDPEOC1                                            0421 01261000
*   /*****************************************************************/ 01262000
*   /*                                                               */ 01263000
*   /* DETERMINE IF TEMPTAB START DAY IS GREATER THAN AMDPRTAB STOP  */ 01264000
*   /* DAY, OR IF TEMPTAB START TIMER UNITS ARE GREATER THAN AMDPRTAB*/ 01265000
*   /* TIMER UNITS. IF SO, OUTPUT ERROR MESSAGE. SINCE THE EQUIVALENT*/ 01266000
*   /* OF 1 SECOND HAS BEEN ADDED TO THE STOP TIME VALUE TO ALLOW FOR*/ 01267000
*   /* THE RECORD TIME BEING GREATER THAN THE SPECIFIED SECOND.000000*/ 01268000
*   /* MICROSECONDS, THE TIMER UNIT COMPARISON IS FOR EQUAL TO OR    */ 01269000
*   /* GREATER THAN.                                                 */ 01270000
*   /*                                                               */ 01271000
*   /*****************************************************************/ 01272000
*                                                                  0422 01273000
*AMDPPOSA:                                                         0422 01274000
*   IF DY>DAY2 THEN                 /* COMPARE START/STOP VALUES     */ 01275000
AMDPPOSA CLC   DY(2),DAY2(AEDITCBR)                                0422 01276000
         BH    @RT00422                                            0422 01277000
*     GOTO AMDTIMSG;                /* IF ERROR, OUTPUT DIAG MSG     */ 01278000
*   IF DY=DAY2                      /* COMPARE START/STOP VALUES     */ 01279000
*       &TIMEU=>TIME2 THEN          /* IN TABLES. IF ERROR,          */ 01280000
         CLC   DY(2),DAY2(AEDITCBR)                                0424 01281000
         BNE   @RF00424                                            0424 01282000
         CLC   TIMEU(8),TIME2(AEDITCBR)                            0424 01283000
         BNL   @RT00424                                            0424 01284000
*     GOTO AMDTIMSG;                /* OUTPUT DIAGNOSTIC MESSAGE     */ 01285000
*   GOTO AMDPEOC1;                  /* OTHERWISE, LOOK AT NEXT KW    */ 01286000
*                                                                  0426 01287000
         B     AMDPEOC1                                            0426 01288000
*   /*****************************************************************/ 01289000
*   /*                                                               */ 01290000
*   /* DETERMINE IF TEMPTAB START DAY IS GREATER THAN TEMPTAB STOP   */ 01291000
*   /* DAY, OR IF TEMPTAB START TIMER UNITS ARE GREATER THAN AMDPRTAB*/ 01292000
*   /* TIMER UNITS. IF SO, OUTPUT ERROR MESSAGE.                     */ 01293000
*   /*                                                               */ 01294000
*   /*****************************************************************/ 01295000
*                                                                  0427 01296000
*AMDPOSA1:                                                         0427 01297000
*   IF DY>DYSTP THEN                /* COMPARE TEMPTAB VALUES        */ 01298000
AMDPOSA1 CLC   DY(2),DYSTP                                         0427 01299000
         BH    @RT00427                                            0427 01300000
*     GOTO AMDTIMSG;                /* IF ERR, OUTPUT MESSAGE        */ 01301000
*   IF DY=DYSTP                     /* COMPARE TEMPTAB VALUES        */ 01302000
*       &TIMEU=>TIMERU THEN         /* --TIMER UNITS TOO             */ 01303000
         CLC   DY(2),DYSTP                                         0429 01304000
         BNE   @RF00429                                            0429 01305000
         CLC   TIMEU(8),TIMERU                                     0429 01306000
         BNL   @RT00429                                            0429 01307000
*     GOTO AMDTIMSG;                /* IF ERR, OUTPUT MESSAGE        */ 01308000
*   GOTO AMDPEOC1;                  /* OTHERWISE, LOOK AT NEXT KW    */ 01309000
*                                                                  0431 01310000
         B     AMDPEOC1                                            0431 01311000
*   /*****************************************************************/ 01312000
*   /*                                                               */ 01313000
*   /* DETERMINE IF AMDPRTAB START DAY IS GREATER THAN TEMPTAB STOP  */ 01314000
*   /* DAY, OR IF AMDPRTAB START TIMER UNITS ARE GREATER THAN TEMPTAB*/ 01315000
*   /* TIMER UNITS. IF SO, OUTPUT ERROR MESSAGE.                     */ 01316000
*   /*                                                               */ 01317000
*   /*****************************************************************/ 01318000
*                                                                  0432 01319000
*AMDPPOSB:                                                         0432 01320000
*   IF DAY>DYSTP THEN               /* COMPARE DAY VALUES            */ 01321000
AMDPPOSB CLC   DAY(2,AEDITCBR),DYSTP                               0432 01322000
         BH    @RT00432                                            0432 01323000
*     GOTO AMDTIMSG;                /* IF ERR, OUTPUT MESSAGE        */ 01324000
*   IF DAY=DYSTP                    /* COMPARE DAY VALUES            */ 01325000
*       &TIME=>TIMERU THEN          /* COMPARE TIMER UNIT VALUES     */ 01326000
         CLC   DAY(2,AEDITCBR),DYSTP                               0434 01327000
         BNE   @RF00434                                            0434 01328000
         CLC   TIME(8,AEDITCBR),TIMERU                             0434 01329000
         BNL   @RT00434                                            0434 01330000
*     GOTO AMDTIMSG;                /* IF ERR, OUTPUT MESSAGE        */ 01331000
*   GOTO AMDPEOC1;                  /* OTHERWISE, LOOK FOR NXT KW    */ 01332000
         B     AMDPEOC1                                            0436 01333000
*AMDTIMSG:                                                         0437 01334000
*   SYNMSGA=ADDR(AD8);              /* ADDRS OF ADDRS OF MSG         */ 01335000
AMDTIMSG L     @10,@CA00352                                        0437 01336000
         LA    @10,AD8-AMDPRS00(,@10)                              0437 01337000
         ST    @10,SYNMSGA                                         0437 01338000
*   GNOSTDMG='1'B;                  /* OMIT PRECEDING SYNTAX ERR   0438 01339000
*                                      MESSAGE                       */ 01340000
         OI    GNOSTDMG,B'00010000'                                0438 01341000
*   CALL AMDPRSYN;                  /* OUTPUT START>STOP MESSAGE     */ 01342000
         L     @15,ASYNTAX                                         0439 01343000
         BALR  @14,@15                                             0439 01344000
*   GOTO AMDPEOC;                   /* SET FLUSH MODE BIT            */ 01345000
         B     AMDPEOC                                             0440 01346000
*AMDPPOS8:                                                         0441 01347000
*   IF COMP4>59 THEN                /* IF MINS OR SECS>59, THEN      */ 01348000
AMDPPOS8 CLC   COMP4(4),@CF00582                                   0441 01349000
         BH    @RT00441                                            0441 01350000
*     GOTO AMDVMGCL;                /* OUTPUT BAD VALUE MSG          */ 01351000
*   IF SECIND='1'B THEN             /* IF CALCULATING SECONDS,       */ 01352000
         TM    SECIND,B'10000000'                                  0443 01353000
         BNO   @RF00443                                            0443 01354000
*     DO;                           /* DO THE FOLLOWING              */ 01355000
*       FIVECHAR(5)                 /* INSERT THEM IN SLOT           */ 01356000
*           =COMP4(4);                                             0445 01357000
         L     @10,ALLPTR                                          0445 01358000
         MVC   FIVECHAR+4(1,@10),COMP4+3                           0445 01359000
*       SECIND='0'B;                /* TURN OFF SECONDS SWITCH       */ 01360000
         NI    SECIND,B'01111111'                                  0446 01361000
*       GOTO AMDPMOR;               /* MAKE SURE NO MORE VALUES      */ 01362000
         B     AMDPMOR                                             0447 01363000
*     END;                          /* CALCULATING SECONDS           */ 01364000
*   FIVECHAR(4)=COMP4(4);           /* INSERT MINS IN SLOT           */ 01365000
@RF00443 L     @10,ALLPTR                                          0449 01366000
         MVC   FIVECHAR+3(1,@10),COMP4+3                           0449 01367000
*   MININD='0'B;                    /* TURN OFF MINUTES SWITCH       */ 01368000
         NI    MININD,B'10111111'                                  0450 01369000
*   GOTO AMDPMOR;                   /* CHK FOR MORE VALUES           */ 01370000
*                                                                  0451 01371000
         B     AMDPMOR                                             0451 01372000
*   /*****************************************************************/ 01373000
*   /*                                                               */ 01374000
*   /* THIS SUBROUTINE PROCESSES THE USR KEYWORD AND ITS ASSOCIATED  */ 01375000
*   /* VALUES. A SYMBOLIC EID, A SINGLE EID, AND AN EID RANGE ALL    */ 01376000
*   /* QUALIFY AS 'USR' KEYWORDS. 'USR=ALL' ALSO IS AN ACCEPTABLE    */ 01377000
*   /* KEYWORD/VALUE COMBINATION.                                    */ 01378000
*   /*                                                               */ 01379000
*   /*****************************************************************/ 01380000
*                                                                  0452 01381000
*AMDPUSR:                                                          0452 01382000
*   IF ALLU='1'B                    /* USR=ALL ALREADY SPECIFIED     */ 01383000
*       |ALLUT='1'B THEN            /* OR USR=ALL IND IN TEMPTAB     */ 01384000
AMDPUSR  TM    ALLU(AEDITCBR),B'10000000'                          0452 01385000
         BO    @RT00452                                            0452 01386000
         TM    ALLUT,B'10000000'                                   0452 01387000
         BO    @RT00452                                            0452 01388000
*     GOTO AMDPCK1;                 /* IGNORE REST OF KW             */ 01389000
*   SELUT='1'B;                     /* SET ON USR=SEL BIT IN TTAB    */ 01390000
         OI    SELUT,B'01000000'                                   0454 01391000
*AMDPUSR1:                                                         0455 01392000
*   LFTBIT='0'B;                    /* TURN OFF LEFT INDICATOR       */ 01393000
AMDPUSR1 DS    0H                                                  0456 01394000
*   RTBIT='0'B;                     /* TURN OFF RIGHT INDICATOR      */ 01395000
*   BOTHBIT='0'B;                   /* TURN OFF SINGLE VALUE IND     */ 01396000
*   SYMBIT='0'B;                    /* TURN OFF SYMBOLIC EID IND     */ 01397000
*   DASHSW='0'B;                    /* TURN OFF DASH SWITCH          */ 01398000
         NI    LFTBIT,B'00000111'                                  0459 01399000
*   LFTVAL=' ';                     /* BLANK OUT LEFT SLOT           */ 01400000
         MVI   LFTVAL+1,C' '                                       0460 01401000
         MVI   LFTVAL,C' '                                         0460 01402000
*   RTVAL=' ';                      /* BLANK OUT RIGHT SLOT          */ 01403000
         MVI   RTVAL+1,C' '                                        0461 01404000
         MVI   RTVAL,C' '                                          0461 01405000
*   NUMCNT=USRCOUNT+USRCRCNT;       /* UPDATE COUNTER FOR EACH VALUE    01406000
*                                      SPECIFIED                     */ 01407000
         L     NUMCNT,USRCOUNT                                     0462 01408000
         AL    NUMCNT,USRCRCNT                                     0462 01409000
*   IF NUMCNT>20 THEN               /* IF OVER 20 VALUES GIVEN,      */ 01410000
         C     NUMCNT,@CF00129                                     0463 01411000
         BNH   @RF00463                                            0463 01412000
*     DO;                           /* OUTPUT EXCESSIV # VALS MSG    */ 01413000
*AMDEXCAL:                                                         0465 01414000
*       CALL AMDUMMG;               /* HAVE DIAGNOSTIC OUTPUTTED     */ 01415000
AMDEXCAL L     @15,@CV00425                                        0465 01416000
         BALR  @14,@15                                             0465 01417000
*       GOTO AMDCDCK;               /* CHECK RETURN CODE             */ 01418000
         B     AMDCDCK                                             0466 01419000
*     END;                                                         0467 01420000
*AMDPUSR2:                                                         0468 01421000
*   IF SCNCHAR=','                  /* IF DELIMITER OF COMMA         */ 01422000
*       |SCNCHAR=' '                /* OR BLANK                      */ 01423000
*       |SCNCHAR=')' THEN           /* OR RIGHT PAREN FOUND, THEN    */ 01424000
@RF00463 DS    0H                                                  0468 01425000
AMDPUSR2 L     @10,SCNPTR                                          0468 01426000
         CLI   SCNCHAR(@10),C','                                   0468 01427000
         BE    @RT00468                                            0468 01428000
         CLI   SCNCHAR(@10),C' '                                   0468 01429000
         BE    @RT00468                                            0468 01430000
         CLI   SCNCHAR(@10),C')'                                   0468 01431000
         BE    @RT00468                                            0468 01432000
*     GOTO AMDPUSR3;                /* CALCULATE VALUE LENGTH        */ 01433000
*   IF SCNPTR=EOCADDR               /* IF AT LOGICAL END OF STMT,    */ 01434000
*     THEN                          /* THEN                          */ 01435000
         C     @10,EOCADDR                                         0470 01436000
         BE    @RT00470                                            0470 01437000
*     GOTO AMDPUSR3;                /* CALCULATE VALUE LENGTH        */ 01438000
*   SCNPTR=SCNPTR+1;                /* POSITION BUFFER POINTER       */ 01439000
         AL    @10,@CF00044                                        0472 01440000
         ST    @10,SCNPTR                                          0472 01441000
*   GOTO AMDPUSR2;                  /* CONTINUE SCAN FOR DELIMITR    */ 01442000
         B     AMDPUSR2                                            0473 01443000
*AMDPUSR3:                                                         0474 01444000
*   LNGTH=SCNPTR-ADDRS3;            /* CALCULATE VALUE LENGTH        */ 01445000
AMDPUSR3 L     @10,ADDRS3                                          0474 01446000
         L     @02,SCNPTR                                          0474 01447000
         SLR   @02,@10                                             0474 01448000
         ST    @02,LNGTH                                           0474 01449000
*   IF LNGTH>9 THEN                 /* IF >9 CHARS, OUTPUT     YM1411*/ 01450000
         C     @02,@CF00166                                        0475 01451000
         BH    @RT00475                                            0475 01452000
*     GOTO AMDVLNCL;                /* BAD VALUE LENGTH MESSAGE      */ 01453000
*   IF LNGTH<1 THEN                 /* IF LNGTH<1, OUTPUT BAD        */ 01454000
         LTR   @02,@02                                             0477 01455000
         BNP   @RT00477                                            0477 01456000
*     GOTO AMDELMCL;                /* DELIMITER MESSAGE             */ 01457000
*   IF LNGTH=3 THEN                 /* IF LENGTH IS THREE            */ 01458000
         C     @02,@CF00168                                        0479 01459000
         BNE   @RF00479                                            0479 01460000
*     DO;                           /* DO THE FOLLOWING              */ 01461000
*       IF VAL1(1:3)                /* CHECK FOR SPECIAL CASE OF     */ 01462000
*           ¬='ALL' THEN            /* 'USR=ALL'--IF NOT, THEN       */ 01463000
         CLC   VAL1(3,@10),@CC00593                                0481 01464000
         BNE   @RT00481                                            0481 01465000
*         GOTO AMDPUSR4;            /* CONTINUE VALUE SCAN           */ 01466000
*       ALLUT='1'B;                 /* IF SO, SET ON USR ALL FLG     */ 01467000
         OI    ALLUT,B'10000000'                                   0483 01468000
*       GOTO AMDPCK1;               /* SEARCH FOR NEXT KEYWORD       */ 01469000
         B     AMDPCK1                                             0484 01470000
*     END;                          /* LENGTH WAS 3                  */ 01471000
*                                                                  0485 01472000
*   /*****************************************************************/ 01473000
*   /*                                                               */ 01474000
*   /* DETERMINE IF ALL DIGITS ARE VALID HEX DIGITS--BETWEEN ZERO AND*/ 01475000
*   /* 'F'. IF ANY ARE NOT, CHK SYMBOLIC EID TABLE.                  */ 01476000
*   /*                                                               */ 01477000
*   /*****************************************************************/ 01478000
*                                                                  0486 01479000
*AMDPUSR4:                                                         0486 01480000
*   DO I=LNGTH TO 1 BY-1;           /* CHECK TO DETERMINE IF ALL     */ 01481000
@RF00479 DS    0H                                                  0486 01482000
AMDPUSR4 L     @10,LNGTH                                           0486 01483000
         ST    @10,I                                               0486 01484000
         B     @DE00486                                            0486 01485000
@DL00486 DS    0H                                                  0487 01486000
*     IF VAL1(I)='-' THEN           /* IF EMBEDDED DASH              */ 01487000
         L     @02,ADDRS3                                          0487 01488000
         ALR   @10,@02                                             0487 01489000
         BCTR  @10,0                                               0487 01490000
         CLI   VAL1(@10),C'-'                                      0487 01491000
         BE    @RT00487                                            0487 01492000
*       GOTO AMDDASH;               /* CHECK FOR VALIDITY            */ 01493000
*     IF VAL1(I)=>'A'               /* DIGITS ARE BETWEEN 'A'        */ 01494000
*         &VAL1(I)=<'F' THEN        /* AND 'F'                       */ 01495000
         L     @10,I                                               0489 01496000
         ALR   @10,@02                                             0489 01497000
         BCTR  @10,0                                               0489 01498000
         CLI   VAL1(@10),C'A'                                      0489 01499000
         BL    @RF00489                                            0489 01500000
         L     @10,I                                               0489 01501000
         ALR   @02,@10                                             0489 01502000
         BCTR  @02,0                                               0489 01503000
         CLI   VAL1(@02),C'F'                                      0489 01504000
         BNH   @RT00489                                            0489 01505000
*       GOTO AMDPEND2;              /* OR                            */ 01506000
*     IF VAL1(I)<'0'                /* 0                             */ 01507000
*         |VAL1(I)>'9' THEN         /* AND 9                         */ 01508000
@RF00489 L     @10,ADDRS3                                          0491 01509000
         L     @02,I                                               0491 01510000
         ALR   @02,@10                                             0491 01511000
         BCTR  @02,0                                               0491 01512000
         CLI   VAL1(@02),C'0'                                      0491 01513000
         BL    @RT00491                                            0491 01514000
         L     @02,I                                               0491 01515000
         ALR   @10,@02                                             0491 01516000
         BCTR  @10,0                                               0491 01517000
         CLI   VAL1(@10),C'9'                                      0491 01518000
         BH    @RT00491                                            0491 01519000
*       GOTO AMDPSYMB;              /* IF NOT, SYMBOLIC EID          */ 01520000
*AMDPEND2:                                                         0493 01521000
*   END;                                                           0493 01522000
AMDPEND2 SLR   @10,@10                                             0493 01523000
         BCTR  @10,0                                               0493 01524000
         AL    @10,I                                               0493 01525000
         ST    @10,I                                               0493 01526000
@DE00486 LTR   @10,@10                                             0493 01527000
         BP    @DL00486                                            0493 01528000
*   GOTO AMDPUSR6;                  /* NON-SYMBOLIC EID              */ 01529000
*                                                                  0494 01530000
         B     AMDPUSR6                                            0494 01531000
*   /*****************************************************************/ 01532000
*   /*                                                               */ 01533000
*   /* CHECK FOR EMBEDDED DASH. IF 1ST OR LAST CHARACTER, OR IF MORE */ 01534000
*   /* THEN ONE IN RANGE, HAVE INVALID DELIMITER                     */ 01535000
*   /*                                                               */ 01536000
*   /*****************************************************************/ 01537000
*                                                                  0495 01538000
*AMDDASH:                                                          0495 01539000
*   IF I=1                          /* IF FIRST CHARACTER,           */ 01540000
*       |I=LNGTH THEN               /* OR DASH IS LAST CHARACTER     */ 01541000
AMDDASH  L     @10,I                                               0495 01542000
         C     @10,@CF00044                                        0495 01543000
         BE    @RT00495                                            0495 01544000
         C     @10,LNGTH                                           0495 01545000
         BE    @RT00495                                            0495 01546000
*     GOTO AMDELMCL;                /* OUTPUT INVALID DELIM MSG      */ 01547000
*   IF DASHSW='1'B THEN             /* IF MORE THAN 1 DASH IN VAL    */ 01548000
         TM    DASHSW,B'00001000'                                  0497 01549000
         BNO   @RF00497                                            0497 01550000
*     DO;                           /* DO THE FOLLOWING              */ 01551000
*       DASHSW='0'B;                /* TURN OFF DASHSW               */ 01552000
         NI    DASHSW,B'11110111'                                  0499 01553000
*       GOTO AMDELMCL;              /* OUTPUT INVALID DELIM MSG      */ 01554000
         B     AMDELMCL                                            0500 01555000
*     END;                                                         0501 01556000
*   DASHSW='1'B;                    /* IF FIRST DASH, SET ON SW      */ 01557000
@RF00497 OI    DASHSW,B'00001000'                                  0502 01558000
*   GOTO AMDPEND2;                  /* CHECK NEXT DIGIT              */ 01559000
         B     AMDPEND2                                            0503 01560000
*AMDPSYMB:                                                         0504 01561000
*   IF LNGTH>4 THEN                 /* SYMBOLIC EID MUST BE=> 4      */ 01562000
AMDPSYMB L     @10,LNGTH                                           0504 01563000
         C     @10,@CF00098                                        0504 01564000
         BH    @RT00504                                            0504 01565000
*     GOTO AMDPSR51;                /* OUTPUT ERROR MESSAGE          */ 01566000
*   EIDCT=1;                        /* BEGIN EID TABLE SEARCH        */ 01567000
         MVC   EIDCT(4),@CF00044                                   0506 01568000
*   COMP4=' ';                      /* BLANK COMPARE AREA            */ 01569000
         MVI   COMP4+1,C' '                                        0507 01570000
         MVC   COMP4+2(2),COMP4+1                                  0507 01571000
         MVI   COMP4,C' '                                          0507 01572000
*   COMP4=VAL1(1:LNGTH);            /* MOVE IN DELIMITED VALUE       */ 01573000
         MVI   COMP4+1,C' '                                        0508 01574000
         MVC   COMP4+2(2),COMP4+1                                  0508 01575000
         BCTR  @10,0                                               0508 01576000
         L     @02,ADDRS3                                          0508 01577000
         EX    @10,@SM00676                                        0508 01578000
*AMDPUSR5:                                                         0509 01579000
*   IF SYMBIT='1'B THEN             /* PROCESSING SYMBOLIC EID?      */ 01580000
AMDPUSR5 TM    SYMBIT,B'00010000'                                  0509 01581000
         BNO   @RF00509                                            0509 01582000
*     DO;                           /* IF SO, DO THE FOLLOWING       */ 01583000
*       IF EIDCT>18 THEN            /* IF BEYOND # OF SYMB EIDS,     */ 01584000
         L     @10,EIDCT                                           0511 01585000
         C     @10,@CF00399                                        0511 01586000
         BNH   @RF00511                                            0511 01587000
*         DO;                       /* THEN DO THE FOLLOWING         */ 01588000
*           SYMBIT='0'B;            /* SET TO 0 SYMB EID BIT         */ 01589000
         NI    SYMBIT,B'11101111'                                  0513 01590000
*           GOTO AMDPUPRN;          /* CHECK FOR MORE VALUES         */ 01591000
         B     AMDPUPRN                                            0514 01592000
*         END;                                                     0515 01593000
*       GOTO AMDINPRN;              /* IF # OK, CHK FOR EID MATCH    */ 01594000
         B     AMDINPRN                                            0516 01595000
*     END;                                                         0517 01596000
*CHK:                                                              0518 01597000
*   IF EIDCT>18 THEN                /* IF BEYOND # SYMBOLIC EIDS     */ 01598000
@RF00509 DS    0H                                                  0518 01599000
CHK      L     @10,EIDCT                                           0518 01600000
         C     @10,@CF00399                                        0518 01601000
         BNH   @RF00518                                            0518 01602000
*     DO;                           /* DO THE FOLLOWING              */ 01603000
*AMDPSR51:                                                         0520 01604000
*       SYNMSGA=ADDR(AD9);          /* OUTPUT ERR MSG--STORE ADRS    */ 01605000
AMDPSR51 L     @10,@CA00352                                        0520 01606000
         LA    @10,AD9-AMDPRS00(,@10)                              0520 01607000
         ST    @10,SYNMSGA                                         0520 01608000
*       GNOSTDMG='1'B;              /* OMIT ISSUANCE OF AMD165I      */ 01609000
         OI    GNOSTDMG,B'00010000'                                0521 01610000
*       CALL AMDPRSYN;              /* OUTPUT INVALID EID MSG        */ 01611000
         L     @15,ASYNTAX                                         0522 01612000
         BALR  @14,@15                                             0522 01613000
*       GOTO AMDPEOC;               /* SET FLUSH MODE SWITCH         */ 01614000
         B     AMDPEOC                                             0523 01615000
*     END;                          /* HAD INVALID SYMBOLIC EID      */ 01616000
*AMDINPRN:                                                         0525 01617000
*   IF EIDNAM0(EIDCT)               /* IF SYMBOLIC EID MATCH         */ 01618000
*       =COMP4                      /* FOUND                         */ 01619000
*     THEN                          /* THEN                          */ 01620000
@RF00518 DS    0H                                                  0525 01621000
AMDINPRN L     @10,EIDCT                                           0525 01622000
         SLA   @10,3                                               0525 01623000
         L     @02,@CA00401                                        0525 01624000
         ST    @10,@TF00001                                        0525 01625000
         ALR   @10,@02                                             0525 01626000
         AL    @10,@CF00678                                        0525 01627000
         CLC   EIDNAM0-AMDPRS01(4,@10),COMP4                       0525 01628000
         BNE   @RF00525                                            0525 01629000
*     DO;                           /* DO THE FOLLOWING              */ 01630000
*       LFTVAL=LRANGE0              /* MOVE IN LEFT AND              */ 01631000
*           (EIDCT);                                               0527 01632000
         L     @10,@TF00001                                        0527 01633000
         AL    @10,@CF00679                                        0527 01634000
         LH    @10,LRANGE0-AMDPRS01-4(@10,@02)                     0527 01635000
         STH   @10,LFTVAL                                          0527 01636000
*       RTVAL=HRANGE0               /* RIGHT VALUES                  */ 01637000
*           (EIDCT);                                               0528 01638000
         L     @10,@TF00001                                        0528 01639000
         BCTR  @02,0                                               0528 01640000
         BCTR  @02,0                                               0528 01641000
         LH    @10,HRANGE0-AMDPRS01-6(@10,@02)                     0528 01642000
         STH   @10,RTVAL                                           0528 01643000
*       SYMBIT='1'B;                /* SET ON SYMBOLIC EID BIT       */ 01644000
         OI    SYMBIT,B'00010000'                                  0529 01645000
*       GOTO AMDPSARG;              /* BEGIN USRTAB PROCESSING       */ 01646000
         B     AMDPSARG                                            0530 01647000
*     END;                          /* MATCH WAS FOUND               */ 01648000
*   EIDCT=EIDCT+1;                  /* NO MATCH-CHECK NEXT ELEM      */ 01649000
@RF00525 LA    @10,1                                               0532 01650000
         AL    @10,EIDCT                                           0532 01651000
         ST    @10,EIDCT                                           0532 01652000
*   GOTO AMDPUSR5;                  /* CONTINUE SYMBOLIC SEARCH      */ 01653000
         B     AMDPUSR5                                            0533 01654000
*AMDPUSR6:                                                         0534 01655000
*   IF LNGTH>7 THEN                 /* IF LENGTH > SEVEN             */ 01656000
AMDPUSR6 L     @10,LNGTH                                           0534 01657000
         C     @10,@CF00055                                        0534 01658000
         BH    @RT00534                                            0534 01659000
*     GOTO AMDVLNCL;                /* OUTPUT INVALID VALUE LENGTH 0535 01660000
*                                      MESSAGE                       */ 01661000
*   IF LNGTH>3 THEN                 /* BETTER HAVE EID RANGE         */ 01662000
         C     @10,@CF00168                                        0536 01663000
         BNH   @RF00536                                            0536 01664000
*     DO;                           /* DO THE FOLLOWING              */ 01665000
*       SCNPTR=ADDRS3;              /* RESET POINTER                 */ 01666000
*                                                                  0538 01667000
         L     @10,ADDRS3                                          0538 01668000
         ST    @10,SCNPTR                                          0538 01669000
*       /*************************************************************/ 01670000
*       /*                                                           */ 01671000
*       /* SCAN LENGTH NUMBER OF CHARACTERS FOR DASH-- ARE DEALING   */ 01672000
*       /* WITH EID RANGE.                                           */ 01673000
*       /*                                                           */ 01674000
*       /*************************************************************/ 01675000
*                                                                  0539 01676000
*       DO I=1 TO LNGTH;            /* SCAN LNGTH NUM OF CHARS       */ 01677000
         LA    @10,1                                               0539 01678000
         B     @DE00539                                            0539 01679000
@DL00539 DS    0H                                                  0540 01680000
*         IF SCNCHAR='-' THEN       /* LOOKING FOR RANGE DELIMITR    */ 01681000
         L     @02,SCNPTR                                          0540 01682000
         CLI   SCNCHAR(@02),C'-'                                   0540 01683000
         BE    @RT00540                                            0540 01684000
*           GOTO AMDPFND;           /* IF FOUND, CONTINUE SEARCH     */ 01685000
*         SCNPTR=SCNPTR+1;          /* EXAMINE NEXT CHARACTER        */ 01686000
         AL    @02,@CF00044                                        0542 01687000
         ST    @02,SCNPTR                                          0542 01688000
*       END;                        /* SEARCH FOR DASH               */ 01689000
         AL    @10,@CF00044                                        0543 01690000
@DE00539 ST    @10,I                                               0543 01691000
         C     @10,LNGTH                                           0543 01692000
         BNH   @DL00539                                            0543 01693000
*       GOTO AMDVLNCL;              /* OVER 3 CHARS AND NOT RANGE    */ 01694000
         B     AMDVLNCL                                            0544 01695000
*     END;                          /* EID RANGE CHECK               */ 01696000
*   IF LNGTH=3 THEN                 /* MAY HAVE SPECIAL CASE         */ 01697000
@RF00536 CLC   LNGTH(4),@CF00168                                   0546 01698000
         BNE   @RF00546                                            0546 01699000
*     DO;                           /* DO THE FOLLOWING              */ 01700000
*       IF VAL1(2)='-'              /* IF MIDDLE CHARACTER IS A      */ 01701000
*         THEN                                                     0548 01702000
         L     @10,ADDRS3                                          0548 01703000
         CLI   VAL1+1(@10),C'-'                                    0548 01704000
         BNE   @RF00548                                            0548 01705000
*         DO;                       /* DASH, THEN                    */ 01706000
*           LNGTH=1;                /* LNGTH OF FIRST VALUE IS 1     */ 01707000
         MVC   LNGTH(4),@CF00044                                   0550 01708000
*           ALLPTR=SCNPTR-1;        /* POSITION TO BEG'NG OF 2ND   0551 01709000
*                                      VALUE                         */ 01710000
         L     @10,SCNPTR                                          0551 01711000
         BCTR  @10,0                                               0551 01712000
         ST    @10,ALLPTR                                          0551 01713000
*           GOTO AMDPFND1;          /* PROCEED AS WITH 'LEFT' VAL    */ 01714000
         B     AMDPFND1                                            0552 01715000
*         END;                      /* THREE CHARS WITH RANGE        */ 01716000
*       GOTO AMDPUSR7;              /* NO DASH IN MIDL--NO RANGE     */ 01717000
         B     AMDPUSR7                                            0554 01718000
*     END;                          /* IF LENGTH=THREE               */ 01719000
*AMDPUSR7:                                                         0556 01720000
*   ALLCT=1;                        /* BEGIN TABLE SEARCH            */ 01721000
@RF00546 DS    0H                                                  0556 01722000
AMDPUSR7 MVC   ALLCT(4),@CF00044                                   0556 01723000
*   BOTHBIT='1'B;                   /* HAVE SINGLE RANGE             */ 01724000
         OI    BOTHBIT,B'00100000'                                 0557 01725000
*   CALL AMDPRHX;                   /* CNVT EXT HEX TO BINARY        */ 01726000
         L     @15,@CV00421                                        0558 01727000
         BALR  @14,@15                                             0558 01728000
*   LFTVAL=COMP8(3:4);              /* MOVE IN RESULT                */ 01729000
         MVC   LFTVAL(2),COMP8+2                                   0559 01730000
*   RTVAL=COMP8(3:4);               /* MOVE IN RESULT                */ 01731000
         MVC   RTVAL(2),COMP8+2                                    0560 01732000
*AMDPUS71:                                                         0561 01733000
*   ARG=LFTVAL;                     /* PROCESS LEFT VALUE FIRST      */ 01734000
AMDPUS71 MVC   ARG(2),LFTVAL                                       0561 01735000
*AMDPUSR8:                                                         0562 01736000
*   IF USRNGTAB(ALLCT,3:4)          /* Q/IS UPPER RANGE PORTION      */ 01737000
*       =BLANK1 THEN                /* BLANK                         */ 01738000
AMDPUSR8 L     @10,ALLCT                                           0562 01739000
         SLA   @10,2                                               0562 01740000
         ST    @10,@TF00001                                        0562 01741000
         ALR   @10,AEDITCBR                                        0562 01742000
         CLC   USRNGTAB-2(2,@10),BLANK1                            0562 01743000
         BE    @RT00562                                            0562 01744000
*     GOTO AMDPINS;                 /* IF YES, INSERT VAL            */ 01745000
*   IF ARG=>USRNGTAB(ALLCT,1        /* IF CURRENT VALUE=>LOWER       */ 01746000
*       :2)&ARG=<USRNGTAB           /* RANGE PORTION, AND =<         */ 01747000
*       (ALLCT,3:4) THEN            /* UPPER RNG PORTION, THEN NO  0564 01748000
*                                      NEED TO INSERT VAL            */ 01749000
         LR    @10,AEDITCBR                                        0564 01750000
         AL    @10,@TF00001                                        0564 01751000
         CLC   ARG(2),USRNGTAB-4(@10)                              0564 01752000
         BL    @RF00564                                            0564 01753000
         LR    @10,AEDITCBR                                        0564 01754000
         AL    @10,@TF00001                                        0564 01755000
         CLC   ARG(2),USRNGTAB-2(@10)                              0564 01756000
         BNH   @RT00564                                            0564 01757000
*     GOTO AMDPUSRA;                /* VAL--CONTINUE PROCESSING      */ 01758000
*   IF RTBIT='1'B THEN              /* IF PROCESSING UPPER LIMIT,    */ 01759000
@RF00564 TM    RTBIT,B'01000000'                                   0566 01760000
         BO    @RT00566                                            0566 01761000
*     GOTO AMDPINS2;                /* CHECK FURTHER                 */ 01762000
*   ALLCT=ALLCT+1;                  /* CONTINUE TABLE SEARCH         */ 01763000
         LA    @10,1                                               0568 01764000
         AL    @10,ALLCT                                           0568 01765000
         ST    @10,ALLCT                                           0568 01766000
*   IF ALLCT>20 THEN                /* Q/OUT OF TABLE                */ 01767000
         C     @10,@CF00129                                        0569 01768000
         BH    @RT00569                                            0569 01769000
*     GOTO AMDEXCAL;                /* YES--TOO MANY VALS ERR MSG    */ 01770000
*   GOTO AMDPUSR8;                  /* NO--CONTINUE TABLE SEARCH     */ 01771000
         B     AMDPUSR8                                            0571 01772000
*AMDPFND:                                                          0572 01773000
*   LNGTH=SCNPTR-ADDRS3;            /* CALCULATE VALUE LENGTH        */ 01774000
AMDPFND  L     @10,SCNPTR                                          0572 01775000
         LR    @02,@10                                             0572 01776000
         SL    @02,ADDRS3                                          0572 01777000
         ST    @02,LNGTH                                           0572 01778000
*   ALLPTR=SCNPTR+1;                /* CALC BEG'NG @ OF NEXT VAL     */ 01779000
         LA    @15,1                                               0573 01780000
         ALR   @10,@15                                             0573 01781000
         ST    @10,ALLPTR                                          0573 01782000
*   IF LNGTH>3 THEN                 /* IF LNGTH>3, THEN              */ 01783000
         C     @02,@CF00168                                        0574 01784000
         BH    @RT00574                                            0574 01785000
*     GO TO AMDVLNCL;               /* OUTPUT INVALID LNGTH MSG      */ 01786000
*   IF LNGTH<1 THEN                 /* IF LENGTH<1, THEN             */ 01787000
         CR    @02,@15                                             0576 01788000
         BL    @RT00576                                            0576 01789000
*     GOTO AMDELMCL;                /* OUTPUT BAD DELIMITER MSG      */ 01790000
*AMDPFND1:                                                         0578 01791000
*   CALL AMDPRHX;                   /* CNVT EXT HEX TO BINARY        */ 01792000
AMDPFND1 L     @15,@CV00421                                        0578 01793000
         BALR  @14,@15                                             0578 01794000
*   LFTVAL=COMP8(3:4);              /* MOVE IN RESULT                */ 01795000
         MVC   LFTVAL(2),COMP8+2                                   0579 01796000
*AMDPSARG:                                                         0580 01797000
*   LFTBIT='1'B;                    /* SET ON LOWER RANGE INDCATR    */ 01798000
AMDPSARG OI    LFTBIT,B'10000000'                                  0580 01799000
*   ALLCT=1;                        /* INITIALIZE TABLE SEARCH CT    */ 01800000
         MVC   ALLCT(4),@CF00044                                   0581 01801000
*   GOTO AMDPUS71;                  /* PROCESS LEFT VALUE FIRST      */ 01802000
         B     AMDPUS71                                            0582 01803000
*AMDPINS:                                                          0583 01804000
*   IF BOTHBIT='1'B THEN            /* IF PROCESSING SINGLE VAL,     */ 01805000
AMDPINS  TM    BOTHBIT,B'00100000'                                 0583 01806000
         BNO   @RF00583                                            0583 01807000
*     DO;                           /* DO THE FOLLOWING              */ 01808000
*       USRNGTAB(ALLCT,1:2)         /* INSERT VAL AS LOWER PART      */ 01809000
*           =ARG;                   /* OF RANGE                      */ 01810000
         L     @10,ALLCT                                           0585 01811000
         SLA   @10,2                                               0585 01812000
         ST    @10,@TF00001                                        0585 01813000
         ALR   @10,AEDITCBR                                        0585 01814000
         MVC   USRNGTAB-4(2,@10),ARG                               0585 01815000
*       USRNGTAB(ALLCT,3:4)         /* INSERT VAL AS UPPER PART      */ 01816000
*           =ARG;                   /* OF RANGE                      */ 01817000
         LR    @10,AEDITCBR                                        0586 01818000
         AL    @10,@TF00001                                        0586 01819000
         MVC   USRNGTAB-2(2,@10),ARG                               0586 01820000
*       USRCRCNT=USRCRCNT+1;        /* UPDATE USR VALUE COUNTER      */ 01821000
         LA    @10,1                                               0587 01822000
         AL    @10,USRCRCNT                                        0587 01823000
         ST    @10,USRCRCNT                                        0587 01824000
*       BOTHBIT='0'B;               /* TURN OFF SINGLE VALUE BIT     */ 01825000
*                                                                  0588 01826000
         NI    BOTHBIT,B'11011111'                                 0588 01827000
*       /*************************************************************/ 01828000
*       /*                                                           */ 01829000
*       /* POSITION TO NEXT KEYWORD VALUE. IF NONE EXISTS, ATTEMPT TO*/ 01830000
*       /* POSITION TO NEXT KEYWORD.                                 */ 01831000
*       /*                                                           */ 01832000
*       /*************************************************************/ 01833000
*                                                                  0589 01834000
*AMDPUPRN:                                                         0589 01835000
*       IF SYMBIT='1'B THEN         /* IF PROCESSING SYMB EIDS,      */ 01836000
AMDPUPRN TM    SYMBIT,B'00010000'                                  0589 01837000
         BNO   @RF00589                                            0589 01838000
*         DO;                       /* DO THE FOLLOWING              */ 01839000
*           EIDCT=EIDCT+1;          /* UPDATE EID TABL INDEX         */ 01840000
         LA    @10,1                                               0591 01841000
         AL    @10,EIDCT                                           0591 01842000
         ST    @10,EIDCT                                           0591 01843000
*           GOTO AMDPUSR5;          /* CONTINUE EID TABL SEARCH      */ 01844000
         B     AMDPUSR5                                            0592 01845000
*         END;                      /*                         Y02014*/ 01846000
*       IF PAREN='0'B THEN          /* IF NO MORE VALUES, THEN       */ 01847000
@RF00589 TM    PAREN,B'00010000'                                   0594 01848000
         BZ    @RT00594                                            0594 01849000
*         GOTO AMDPEOC1;            /* LOOK FOR NEXT KEYWORD         */ 01850000
*       IF SCNCHAR=')' THEN         /* IF DELIMITER FOUND, THEN      */ 01851000
         L     @10,SCNPTR                                          0596 01852000
         CLI   SCNCHAR(@10),C')'                                   0596 01853000
         BE    @RT00596                                            0596 01854000
*         GOTO AMDPEOC1;            /* LOOK FOR NEXT KEYWORD         */ 01855000
*       SCNPTR=SCNPTR+1;            /* UPDATE BUFFER SCAN PTR        */ 01856000
         AL    @10,@CF00044                                        0598 01857000
         ST    @10,SCNPTR                                          0598 01858000
*       ADDRS3=SCNPTR;              /* ADDRS OF NEXT VALUE           */ 01859000
         ST    @10,ADDRS3                                          0599 01860000
*       GOTO AMDPUSR1;              /* RESUME USER SCAN              */ 01861000
         B     AMDPUSR1                                            0600 01862000
*     END;                          /* WAS PROCESSING SINGLE VAL     */ 01863000
*   IF LFTBIT='0'B THEN             /* IF LEFT OFF, MUST BE          */ 01864000
@RF00583 TM    LFTBIT,B'10000000'                                  0602 01865000
         BZ    @RT00602                                            0602 01866000
*     GOTO AMDPINS2;                /* PROCESSING RT OR UPPER VAL    */ 01867000
*   USRNGTAB(ALLCT,1:2)             /* LEFT VAL, SO INSERT IT        */ 01868000
*       =ARG;                       /* INTO LOWER RANGE              */ 01869000
         L     @10,ALLCT                                           0604 01870000
         SLA   @10,2                                               0604 01871000
         ALR   @10,AEDITCBR                                        0604 01872000
         MVC   USRNGTAB-4(2,@10),ARG                               0604 01873000
*   USRCRCNT=USRCRCNT+1;            /* UPDATE USR VALUE COUNTER      */ 01874000
         LA    @10,1                                               0605 01875000
         AL    @10,USRCRCNT                                        0605 01876000
         ST    @10,USRCRCNT                                        0605 01877000
*AMDPRTVL:                                                         0606 01878000
*   LFTBIT='0'B;                    /* TURN OFF LEFT BIT             */ 01879000
AMDPRTVL NI    LFTBIT,B'01111111'                                  0606 01880000
*   IF RTVAL¬=BLANK1 THEN           /* Q/RT VAL FILLED IN            */ 01881000
         CLC   RTVAL(2),BLANK1                                     0607 01882000
         BNE   @RT00607                                            0607 01883000
*     GOTO AMDPIN12;                /* YES                           */ 01884000
*   ADDRS3=ALLPTR;                  /* RESET ADDRS3                  */ 01885000
         L     @10,ALLPTR                                          0609 01886000
         ST    @10,ADDRS3                                          0609 01887000
*   SCNPTR=ADDRS3;                  /* POINT TO NEXT VAL             */ 01888000
         ST    @10,SCNPTR                                          0610 01889000
*AMDPINS1:                                                         0611 01890000
*   IF SCNCHAR=','                  /* IF DELIMITER OF COMMA         */ 01891000
*       |SCNCHAR=' '                /* OR BLANK                      */ 01892000
*       |SCNCHAR=')' THEN           /* OR RIGHT PAREN FOUND, THEN    */ 01893000
AMDPINS1 L     @10,SCNPTR                                          0611 01894000
         CLI   SCNCHAR(@10),C','                                   0611 01895000
         BE    @RT00611                                            0611 01896000
         CLI   SCNCHAR(@10),C' '                                   0611 01897000
         BE    @RT00611                                            0611 01898000
         CLI   SCNCHAR(@10),C')'                                   0611 01899000
         BE    @RT00611                                            0611 01900000
*     GOTO AMDPIN11;                /* CONTINUE PROCESSING           */ 01901000
*   IF SCNPTR=EOCADDR               /* IF LOGICAL END OF STMT        */ 01902000
*     THEN                          /* SERVES AS DELIMITER, THEN     */ 01903000
         C     @10,EOCADDR                                         0613 01904000
         BE    @RT00613                                            0613 01905000
*     GOTO AMDPIN11;                /* CONTINUE PROCESSING           */ 01906000
*   SCNPTR=SCNPTR+1;                /* POSITION BUFFER POINTER       */ 01907000
         AL    @10,@CF00044                                        0615 01908000
         ST    @10,SCNPTR                                          0615 01909000
*   GOTO AMDPINS1;                  /* CONTINUE SCAN FOR DELIMITR    */ 01910000
         B     AMDPINS1                                            0616 01911000
*AMDPIN11:                                                         0617 01912000
*   LNGTH=SCNPTR-ADDRS3;            /* CALCULATE VALUE LENGTH        */ 01913000
AMDPIN11 L     @10,SCNPTR                                          0617 01914000
         SL    @10,ADDRS3                                          0617 01915000
         ST    @10,LNGTH                                           0617 01916000
*   IF LNGTH>3 THEN                 /* IF LENGTH>THREE, OUTPUT       */ 01917000
         C     @10,@CF00168                                        0618 01918000
         BH    @RT00618                                            0618 01919000
*     GOTO AMDVLNCL;                /* INVALID VALUE LENGTH MSG      */ 01920000
*   IF LNGTH<1 THEN                 /* IF LENGTH<ONE, OUTPUT         */ 01921000
         LTR   @10,@10                                             0620 01922000
         BNP   @RT00620                                            0620 01923000
*     GOTO AMDELMCL;                /* INVALID DELIMITER MESSAGE     */ 01924000
*   CALL AMDPRHX;                   /* CNVT EXT HEX TO BINARY        */ 01925000
         L     @15,@CV00421                                        0622 01926000
         BALR  @14,@15                                             0622 01927000
*   RTVAL=COMP8(3:4);               /* MOVE IN RESULT                */ 01928000
         MVC   RTVAL(2),COMP8+2                                    0623 01929000
*AMDPIN12:                                                         0624 01930000
*   ARG=RTVAL;                      /* PROCESSING RIGHT VALUE        */ 01931000
AMDPIN12 MVC   ARG(2),RTVAL                                        0624 01932000
*   RTBIT='1'B;                     /* SET ON RIGHT BIT              */ 01933000
         OI    RTBIT,B'01000000'                                   0625 01934000
*   GOTO AMDPUSR8;                  /* CHECK USR TABLE FOR BLANKS    */ 01935000
         B     AMDPUSR8                                            0626 01936000
*AMDPINS2:                                                         0627 01937000
*   IF USRNGTAB(ALLCT,1             /* IF LOWER RANGE VALUE >        */ 01938000
*       :2)>ARG THEN                /* THAN PROPOSED UPPER VAL       */ 01939000
AMDPINS2 L     @10,ALLCT                                           0627 01940000
         SLA   @10,2                                               0627 01941000
         ST    @10,@TF00001                                        0627 01942000
         ALR   @10,AEDITCBR                                        0627 01943000
         CLC   USRNGTAB-4(2,@10),ARG                               0627 01944000
         BH    @RT00627                                            0627 01945000
*     GOTO AMDPSR51;                /* OUTPUT INVALID EID MSG        */ 01946000
*   IF USRNGTAB(ALLCT,3             /* IF UPPER EID NOT FILLED       */ 01947000
*       :4)=BLANK1 THEN             /* IN, THEN                      */ 01948000
         LR    @10,AEDITCBR                                        0629 01949000
         AL    @10,@TF00001                                        0629 01950000
         CLC   USRNGTAB-2(2,@10),BLANK1                            0629 01951000
         BNE   @RF00629                                            0629 01952000
*     DO;                           /* DO THE FOLLOWING              */ 01953000
*       USRNGTAB(ALLCT              /* INSERT CURRENT VALUE THERE    */ 01954000
*           ,3:4)=ARG;                                             0631 01955000
         LR    @10,AEDITCBR                                        0631 01956000
         AL    @10,@TF00001                                        0631 01957000
         MVC   USRNGTAB-2(2,@10),ARG                               0631 01958000
*       GOTO AMDPUPRN;              /* CHECK FOR MORE VALUES         */ 01959000
         B     AMDPUPRN                                            0632 01960000
*     END;                          /* UPPER SLOT WAS BLANK          */ 01961000
*   IF ARG<=USRNGTAB(ALLCT,         /* IF CURRENT VAL WITHIN         */ 01962000
*       3:4) THEN                   /* UPPER LIMIT, THEN SIMPLY      */ 01963000
@RF00629 L     @10,ALLCT                                           0634 01964000
         LR    @02,@10                                             0634 01965000
         SLA   @02,2                                               0634 01966000
         ALR   @02,AEDITCBR                                        0634 01967000
         CLC   ARG(2),USRNGTAB-2(@02)                              0634 01968000
         BNH   @RT00634                                            0634 01969000
*     GOTO AMDPUPRN;                /* CHECK FOR MORE VALUES         */ 01970000
*   IF OVERSL(ALLCT)=BLANK1         /* IF CORRESPONDING SLOT IN      */ 01971000
*     THEN                          /* OVERLAY TABLE IS BLANK,       */ 01972000
         ALR   @10,@10                                             0636 01973000
         LA    @02,OVERSL-2(@10)                                   0636 01974000
         CLC   0(2,@02),BLANK1                                     0636 01975000
         BNE   @RF00636                                            0636 01976000
*     DO;                           /* DO THE FOLLOWING              */ 01977000
*AMDPUSR9:                                                         0638 01978000
*       OVERSL(ALLCT)=ARG;          /* INSERT CURRENT VALUE THERE    */ 01979000
AMDPUSR9 L     @10,ALLCT                                           0638 01980000
         ALR   @10,@10                                             0638 01981000
         LA    @02,OVERSL-2(@10)                                   0638 01982000
         MVC   0(2,@02),ARG                                        0638 01983000
*       GOTO AMDPUPRN;              /* CHECK FOR MORE VALUES         */ 01984000
         B     AMDPUPRN                                            0639 01985000
*     END;                          /* OVERLTAB SLOT WAS BLNK        */ 01986000
*   IF ARG<=OVERSL(ALLCT)           /* NON-BLANK SLOT--IF WITHIN     */ 01987000
*     THEN                          /* RANGE, THEN SIMPLY            */ 01988000
@RF00636 L     @10,ALLCT                                           0641 01989000
         ALR   @10,@10                                             0641 01990000
         LA    @02,OVERSL-2(@10)                                   0641 01991000
         CLC   ARG(2),0(@02)                                       0641 01992000
         BNH   @RT00641                                            0641 01993000
*     GOTO AMDPUPRN;                /* CHECK ADDITIONAL VALUES       */ 01994000
*   GOTO AMDPUSR9;                  /* IF NOT, OVERLAY OVERL SLOT    */ 01995000
         B     AMDPUSR9                                            0643 01996000
*AMDPUSRA:                                                         0644 01997000
*   IF RTBIT='1'B THEN              /* DETERMINE WHERE TO            */ 01998000
AMDPUSRA TM    RTBIT,B'01000000'                                   0644 01999000
         BO    @RT00644                                            0644 02000000
*     GOTO AMDPINS2;                /* PLACE VALUE                   */ 02001000
*   IF BOTHBIT='1'B THEN            /* Q/WITHIN RANGE                */ 02002000
         TM    BOTHBIT,B'00100000'                                 0646 02003000
         BO    @RT00646                                            0646 02004000
*     GOTO AMDPINS2;                /* YES                           */ 02005000
*   GOTO AMDPRTVL;                  /* NOW DELIMIT RT VALUE          */ 02006000
*                                                                  0648 02007000
         B     AMDPRTVL                                            0648 02008000
*   /*****************************************************************/ 02009000
*   /*                                                               */ 02010000
*   /*                                                               */ 02011000
*   /*****************************************************************/ 02012000
*                                                                  0649 02013000
*   END AMDPRSCN                    /* END OF MAIN PROCEDURE         */ 02014000
*                                                                  0649 02015000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */ 02016000
*/*%INCLUDE SYSLIB  (AMDPRTAB)                                       */ 02017000
*/*%INCLUDE SYSLIB  (AMDSCNTB)                                       */ 02018000
*                                                                  0649 02019000
*       ;                                                          0649 02020000
         B     @EL00001                                            0649 02021000
@DATA    DS    0H                                                       02022000
@SM00659 MVC   COMP4(0),KEYWORD(@15)                                    02023000
@SM00663 MVC   KWDCOMP(0),KEYWORD(@15)                                  02024000
@SM00665 MVC   COMP8(0),KEYWORD(@05)                                    02025000
@SC00667 CLC   COMP8(0),0(@15)                                          02026000
@SM00669 MVC   0(0,@02),VAL1(@15)                                       02027000
@SM00671 MVC   CHARWORD(0),VAL1(@02)                                    02028000
@SM00676 MVC   COMP4(0),VAL1(@02)                                       02029000
         DS    0F                                                       02030000
@SA00001 DS    18F                                                      02031000
@TF00001 DS    F                                                        02032000
         DS    0F                                                       02033000
@CF00044 DC    F'1'                                                     02034000
@CF00077 DC    F'2'                                                     02035000
@CF00168 DC    F'3'                                                     02036000
@CF00098 DC    F'4'                                                     02037000
@CF00085 DC    F'5'                                                     02038000
@CF00055 DC    F'7'                                                     02039000
@CF00033 DC    F'8'                                                     02040000
@CF00166 DC    F'9'                                                     02041000
@CF00488 DC    F'10'                                                    02042000
@CF00273 DC    F'11'                                                    02043000
@CF00399 DC    F'18'                                                    02044000
@CF00129 DC    F'20'                                                    02045000
@CF00566 DC    F'23'                                                    02046000
@CF00582 DC    F'59'                                                    02047000
@CF00465 DC    F'72'                                                    02048000
@CF00678 DC    F'-8'                                                    02049000
@CF00679 DC    F'-4'                                                    02050000
@CA00352 DC    A(AMDPRS00)                                              02051000
@CV00386 DC    V(AMDPNAM)                                               02052000
@CV00387 DC    V(AMDPTAJ)                                               02053000
@CV00388 DC    V(AMDPSIO)                                               02054000
@CV00389 DC    V(AMDPSVC)                                               02055000
@CV00390 DC    V(AMDPPGM)                                               02056000
@CV00391 DC    V(AMDPSYS)                                               02057000
@CV00392 DC    V(AMDPEXT)                                               02058000
@CV00393 DC    V(AMDPDSP)                                               02059000
@CV00394 DC    V(AMDPRNIO)                                              02060000
@CV00395 DC    V(AMDPSRM)                                               02061000
@CV00396 DC    V(AMDPRR)                                                02062000
@CV00397 DC    V(AMDPEOF)                                               02063000
@CA00401 DC    A(AMDPRS01)                                              02064000
@CV00417 DC    V(AMDPSUM1)                                              02065000
@CV00418 DC    V(AMDPFIN)                                               02066000
@CV00419 DC    V(AMDPEOC2)                                              02067000
@CV00420 DC    V(AMDPRCVB)                                              02068000
@CV00421 DC    V(AMDPRHX)                                               02069000
@CV00422 DC    V(AMDVLEN)                                               02070000
@CV00423 DC    V(AMDELIM)                                               02071000
@CV00424 DC    V(AMDVLMG)                                               02072000
@CV00425 DC    V(AMDUMMG)                                               02073000
         DS    0D                                                       02074000
JOBCT    DS    FL4                                                      02075000
         ORG   JOBCT                                                    02076000
TCBCT    DS    FL4                                                      02077000
         ORG   JOBCT+4                                                  02078000
HUNDRED  DC    F'100'                                                   02079000
MILLION  DC    F'1000000'                                               02080000
SIXTY    DC    F'60'                                                    02081000
THREESIX DC    F'3600'                                                  02082000
NUM2604  DC    F'2604'                                                  02083000
HALFTIME DC    F'1302'                                                  02084000
EIDCT    DS    F                                                        02085000
SORTSW   DS    F                                                        02086000
@CC00550 DC    C'366'                                                   02087000
@CC00593 DC    C'ALL'                                                   02088000
         DS    CL6                                                      02089000
AMDSCNTB DS    CL414                                                    02090000
         ORG   AMDSCNTB                                                 02091000
TEMPTAB  DS    CL163                                                    02092000
         ORG   TEMPTAB                                                  02093000
EXITNAME DS    CL8                                                      02094000
DDNM     DS    CL8                                                      02095000
STARTSL  DS    CL12                                                     02096000
         ORG   STARTSL                                                  02097000
TIMEU    DS    CL8                                                      02098000
YR       DS    CL2                                                      02099000
DY       DS    CL2                                                      02100000
         ORG   TEMPTAB+28                                               02101000
STOPSL   DS    CL12                                                     02102000
         ORG   STOPSL                                                   02103000
TIMERU   DS    CL8                                                      02104000
YRSTP    DS    CL2                                                      02105000
DYSTP    DS    CL2                                                      02106000
         ORG   TEMPTAB+40                                               02107000
OVERLTAB DS    CL40                                                     02108000
         ORG   OVERLTAB                                                 02109000
OVERSL   DS    20CL2                                                    02110000
         ORG   TEMPTAB+80                                               02111000
SIOTFLGS DS    BL1                                                      02112000
         ORG   SIOTFLGS                                                 02113000
ALLST    DS    BL1                                                      02114000
SELST    EQU   SIOTFLGS+0                                               02115000
EQUIVT   EQU   SIOTFLGS+0                                               02116000
NOEQUT   EQU   SIOTFLGS+0                                               02117000
AT       EQU   SIOTFLGS+0                                               02118000
         ORG   TEMPTAB+81                                               02119000
IOTFLGS  DS    BL1                                                      02120000
         ORG   IOTFLGS                                                  02121000
ALLIT    DS    BL1                                                      02122000
SELIT    EQU   IOTFLGS+0                                                02123000
BT       EQU   IOTFLGS+0                                                02124000
         ORG   TEMPTAB+82                                               02125000
USRTFLGS DS    BL1                                                      02126000
         ORG   USRTFLGS                                                 02127000
ALLUT    DS    BL1                                                      02128000
SELUT    EQU   USRTFLGS+0                                               02129000
ET       EQU   USRTFLGS+0                                               02130000
         ORG   TEMPTAB+83                                               02131000
SVCTFLGS DS    BL1                                                      02132000
         ORG   SVCTFLGS                                                 02133000
ALLVT    DS    BL1                                                      02134000
SELVT    EQU   SVCTFLGS+0                                               02135000
GT       EQU   SVCTFLGS+0                                               02136000
         ORG   TEMPTAB+84                                               02137000
PITFLGS  DS    BL1                                                      02138000
         ORG   PITFLGS                                                  02139000
ALLPT    DS    BL1                                                      02140000
SELPT    EQU   PITFLGS+0                                                02141000
T        EQU   PITFLGS+0                                                02142000
         ORG   TEMPTAB+85                                               02143000
SYSTFLGS DS    BL1                                                      02144000
         ORG   SYSTFLGS                                                 02145000
EXTT     DS    BL1                                                      02146000
DSPT     EQU   SYSTFLGS+0                                               02147000
SYST     EQU   SYSTFLGS+0                                               02148000
SYSMT    EQU   SYSTFLGS+0                                               02149000
RNIOT    EQU   SYSTFLGS+0                                               02150000
SRMT     EQU   SYSTFLGS+0                                               02151000
RRT      EQU   SYSTFLGS+0                                               02152000
EOFT     EQU   SYSTFLGS+0                                               02153000
         ORG   TEMPTAB+86                                               02154000
@NM00002 DS    BL2                                                      02155000
SIOPTR   DS    AL4                                                      02156000
IOPTR    DS    AL4                                                      02157000
JOBNPTR  DS    AL4                                                      02158000
ASCBPTR  DS    AL4                                                      02159000
SIOCRPTR DS    AL4                                                      02160000
IOCRPTR  DS    AL4                                                      02161000
JOBCRPTR DS    AL4                                                      02162000
ASCBCPTR DS    AL4                                                      02163000
USRCOUNT DS    FL4                                                      02164000
USRCRCNT DS    FL4                                                      02165000
SVCSTR   DS    BL32                                                     02166000
PISTR    DS    BL2                                                      02167000
PISTRB   DS    BL1                                                      02168000
         ORG   AMDSCNTB+163                                             02169000
SCNBITS  DC    X'00'                                                    02170000
         ORG   SCNBITS                                                  02171000
IORTNSW  DS    BL1                                                      02172000
MORESW   EQU   SCNBITS+0                                                02173000
SCANBIT  EQU   SCNBITS+0                                                02174000
EQUIND   EQU   SCNBITS+0                                                02175000
RUNEDIT  EQU   SCNBITS+0                                                02176000
PRNSW    EQU   SCNBITS+0                                                02177000
RESBITS  EQU   SCNBITS+0                                                02178000
         ORG   AMDSCNTB+164                                             02179000
CODETABL DS    BL3                                                      02180000
         ORG   CODETABL                                                 02181000
CXIT     DS    BL1                                                      02182000
CDDN     EQU   CODETABL+0                                               02183000
CSTART   EQU   CODETABL+0                                               02184000
CSTOP    EQU   CODETABL+0                                               02185000
CJOBN    EQU   CODETABL+0                                               02186000
CASCB    EQU   CODETABL+0                                               02187000
CUSR     EQU   CODETABL+0                                               02188000
CSIO     EQU   CODETABL+0                                               02189000
CIO      DS    BL1                                                      02190000
CSVC     EQU   CODETABL+1                                               02191000
CPI      EQU   CODETABL+1                                               02192000
CSYS     EQU   CODETABL+1                                               02193000
CEXT     EQU   CODETABL+1                                               02194000
CDSP     EQU   CODETABL+1                                               02195000
CRNIO    EQU   CODETABL+1                                               02196000
CSRM     EQU   CODETABL+1                                               02197000
CRR      DS    BL1                                                      02198000
CEOF     EQU   CODETABL+2                                               02199000
NOVAL    EQU   CODETABL+2                                               02200000
PAREN    EQU   CODETABL+2                                               02201000
@NM00003 EQU   CODETABL+2                                               02202000
         ORG   AMDSCNTB+168                                             02203000
WORD     DS    FL4                                                      02204000
         DS    CL4                                                      02205000
DBLWORD  DS    CL8                                                      02206000
KWTAB1   DC    CL4'SIO '                                                02207000
         DC    CL4'IO  '                                                02208000
         DC    CL4'SVC '                                                02209000
         DC    CL4'PI  '                                                02210000
         DC    CL4'SYS '                                                02211000
         DC    CL4'EXT '                                                02212000
         DC    CL4'DSP '                                                02213000
         DC    CL4'RNIO'                                                02214000
         DC    CL4'SRM'                                                 02215000
         DC    CL4'RR'                                                  02216000
         DC    CL4'EOF'                                                 02217000
KWTAB2   DC    CL8'EXIT    '                                            02218000
         DC    CL8'DDNAME  '                                            02219000
         DC    CL8'START   '                                            02220000
         DC    CL8'STOP    '                                            02221000
         DC    CL8'JOBNAME '                                            02222000
         DC    CL8'ASCB    '                                            02223000
         DC    CL8'USR     '                                            02224000
         DC    CL8'SIO     '                                            02225000
         DC    CL8'IO      '                                            02226000
         DC    CL8'SVC     '                                            02227000
         DC    CL8'PI      '                                            02228000
BLANK1   DC    CL12'            '                                       02229000
MASKS    DC    X'80'                                                    02230000
         DC    X'40'                                                    02231000
         DC    X'20'                                                    02232000
         DC    X'10'                                                    02233000
         DC    X'08'                                                    02234000
         DC    X'04'                                                    02235000
         DC    X'02'                                                    02236000
         DC    X'01'                                                    02237000
SCNPTR   DS    AL4                                                      02238000
BUFADDR  DS    AL4                                                      02239000
ADDRS1   DS    AL4                                                      02240000
ADDRS3   DS    AL4                                                      02241000
EOCADDR  DS    AL4                                                      02242000
LNGTH    DS    FL4                                                      02243000
COMP4    DS    CL4                                                      02244000
COMP8    DS    CL8                                                      02245000
SVKEY    DS    FL4                                                      02246000
SAVETAB  DS    AL4                                                      02247000
         ORG   SAVETAB                                                  02248000
ALLPTR   DS    AL4                                                      02249000
         ORG   AMDSCNTB+380                                             02250000
SORTPTR  DS    AL4                                                      02251000
SRTTABPT DS    AL4                                                      02252000
INCRT    DS    FL4                                                      02253000
ALLCT    DS    FL4                                                      02254000
I        DS    FL4                                                      02255000
J        DS    FL4                                                      02256000
INTSTART DS    CL5                                                      02257000
INTSTOP  DS    CL5                                                      02258000
         ORG   AMDSCNTB+414                                             02259000
CHARRUN  DC    CL7'RUNEDIT'                                             02260000
CHARWORD DS    CL4                                                      02261000
BITIND   DC    AL1(0)                                                   02262000
         ORG   BITIND                                                   02263000
SECIND   DS    BL1                                                      02264000
MININD   EQU   BITIND+0                                                 02265000
@NM00004 EQU   BITIND+0                                                 02266000
         ORG   BITIND+1                                                 02267000
USRBITS  DS    BL1                                                      02268000
         ORG   USRBITS                                                  02269000
LFTBIT   DS    BL1                                                      02270000
RTBIT    EQU   USRBITS+0                                                02271000
BOTHBIT  EQU   USRBITS+0                                                02272000
SYMBIT   EQU   USRBITS+0                                                02273000
DASHSW   EQU   USRBITS+0                                                02274000
RSVBITS  EQU   USRBITS+0                                                02275000
         ORG   USRBITS+1                                                02276000
         DS    CL1                                                      02277000
LFTVAL   DS    CL2                                                      02278000
         DS    CL2                                                      02279000
RTVAL    DS    CL2                                                      02280000
ARG      DS    CL2                                                      02281000
KWDCOMP  DS    CL8                                                      02282000
BRTAB    DC    VL4(AMDPNAM)                                             02283000
         DC    VL4(AMDPNAM)                                             02284000
         DC    AL4(AMDPPOS)                                             02285000
         DC    AL4(AMDPPOS)                                             02286000
         DC    VL4(AMDPTAJ)                                             02287000
         DC    VL4(AMDPTAJ)                                             02288000
         DC    AL4(AMDPUSR)                                             02289000
         DC    VL4(AMDPSIO)                                             02290000
         DC    VL4(AMDPSIO)                                             02291000
         DC    VL4(AMDPSVC)                                             02292000
         DC    VL4(AMDPPGM)                                             02293000
         DC    VL4(AMDPSYS)                                             02294000
         DC    VL4(AMDPEXT)                                             02295000
         DC    VL4(AMDPDSP)                                             02296000
         DC    VL4(AMDPRNIO)                                            02297000
         DC    VL4(AMDPSRM)                                             02298000
         DC    VL4(AMDPRR)                                              02299000
         DC    VL4(AMDPEOF)                                             02300000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       02301000
@01      EQU   01                                                       02302000
@02      EQU   02                                                       02303000
@03      EQU   03                                                       02304000
@04      EQU   04                                                       02305000
@05      EQU   05                                                       02306000
@06      EQU   06                                                       02307000
@07      EQU   07                                                       02308000
@08      EQU   08                                                       02309000
@09      EQU   09                                                       02310000
@10      EQU   10                                                       02311000
@11      EQU   11                                                       02312000
@12      EQU   12                                                       02313000
@13      EQU   13                                                       02314000
@14      EQU   14                                                       02315000
@15      EQU   15                                                       02316000
KWADDR   EQU   @04                                                      02317000
NUMCNT   EQU   @04                                                      02318000
COMPLEN  EQU   @04                                                      02319000
REM      EQU   @04                                                      02320000
AEDITCBR EQU   @09                                                      02321000
TTABPTR  EQU   @03                                                      02322000
REG1     EQU   @01                                                      02323000
REG4     EQU   @04                                                      02324000
REG5     EQU   @05                                                      02325000
REG6     EQU   @06                                                      02326000
REG7     EQU   @07                                                      02327000
REGPT    EQU   @12                                                      02328000
REG15    EQU   @15                                                      02329000
REG2     EQU   @02                                                      02330000
         ENTRY AMDSCNTB                                                 02331000
         EXTRN AMDPRS00                                                 02332000
         EXTRN AMDPRS01                                                 02333000
AMDPRTAB EQU   0                                                        02334000
DEBGFLGS EQU   AMDPRTAB+8                                               02335000
PTHFLGS1 EQU   DEBGFLGS                                                 02336000
SCN      EQU   PTHFLGS1                                                 02337000
PTHFLGS2 EQU   DEBGFLGS+1                                               02338000
INRFCFGS EQU   DEBGFLGS+2                                               02339000
FLMODE   EQU   INRFCFGS                                                 02340000
IOFLGS   EQU   DEBGFLGS+3                                               02341000
STARTIME EQU   AMDPRTAB+40                                              02342000
TIME     EQU   STARTIME                                                 02343000
DAY      EQU   STARTIME+10                                              02344000
STOPTIME EQU   AMDPRTAB+52                                              02345000
TIME2    EQU   STOPTIME                                                 02346000
DAY2     EQU   STOPTIME+10                                              02347000
NAMES    EQU   AMDPRTAB+64                                              02348000
ADS      EQU   AMDPRTAB+104                                             02349000
AADS     EQU   ADS                                                      02350000
SIF      EQU   AMDPRTAB+124                                             02351000
SIOFLGS  EQU   SIF                                                      02352000
DVADS1   EQU   AMDPRTAB+128                                             02353000
IO       EQU   AMDPRTAB+228                                             02354000
IOFLGS2  EQU   IO                                                       02355000
DVADS2   EQU   AMDPRTAB+232                                             02356000
VCF      EQU   AMDPRTAB+332                                             02357000
SVCFLGS  EQU   VCF                                                      02358000
USR      EQU   AMDPRTAB+368                                             02359000
USRFLGS  EQU   USR                                                      02360000
ALLU     EQU   USRFLGS                                                  02361000
USRTAB   EQU   AMDPRTAB+372                                             02362000
USRNGTAB EQU   USRTAB                                                   02363000
PI       EQU   AMDPRTAB+452                                             02364000
PIFLGS   EQU   PI                                                       02365000
PGMNGEN  EQU   AMDPRTAB+456                                             02366000
GENFLAGS EQU   PGMNGEN+3                                                02367000
GENFLGS1 EQU   AMDPRTAB+460                                             02368000
ESTARTME EQU   AMDPRTAB+500                                             02369000
ESTOPTME EQU   AMDPRTAB+509                                             02370000
AMDPRSYN EQU   0                                                        02371000
MSGADDR  EQU   0                                                        02372000
ERRBUF   EQU   0                                                        02373000
VAL1     EQU   0                                                        02374000
SCNCHAR  EQU   0                                                        02375000
KEYWORD  EQU   0                                                        02376000
AMDPROOT EQU   0                                                        02377000
FIVECHAR EQU   0                                                        02378000
KWRTN    EQU   0                                                        02379000
DEVICE   EQU   0                                                        02380000
AD1      EQU   AMDPRS00                                                 02381000
AD2      EQU   AMDPRS00+4                                               02382000
AD8      EQU   AMDPRS00+28                                              02383000
AD9      EQU   AMDPRS00+32                                              02384000
EIDNAM0  EQU   AMDPRS01                                                 02385000
LRANGE0  EQU   AMDPRS01+4                                               02386000
HRANGE0  EQU   AMDPRS01+6                                               02387000
GNOSTDMG EQU   SWD                                                      02388000
GCONTSW  EQU   SWD                                                      02389000
X1       EQU   CODETABL                                                 02390000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    02391000
GRDRSW   EQU   SWA                                                      02392000
GSETCVTS EQU   SWA                                                      02393000
GPRNTSW  EQU   SWA                                                      02394000
GGOSW    EQU   SWA                                                      02395000
GTSOSW   EQU   SWA                                                      02396000
GJBNMSW  EQU   SWA                                                      02397000
GREAD    EQU   SWA                                                      02398000
GSTORSW  EQU   SWA                                                      02399000
GFRBUFSW EQU   SWD                                                      02400000
GGPRSFND EQU   SWD                                                      02401000
GPREFMTD EQU   SWD                                                      02402000
GNCDUMP  EQU   SWD                                                      02403000
GSWPDCBC EQU   SWD                                                      02404000
GFLSHMOD EQU   SWD                                                      02405000
AD11     EQU   AMDPRS00+40                                              02406000
AD10     EQU   AMDPRS00+36                                              02407000
AD7      EQU   AMDPRS00+24                                              02408000
AD6      EQU   AMDPRS00+20                                              02409000
AD5      EQU   AMDPRS00+16                                              02410000
AD4      EQU   AMDPRS00+12                                              02411000
AD3      EQU   AMDPRS00+8                                               02412000
RESERVED EQU   AMDPRTAB+522                                             02413000
CVTTZONE EQU   AMDPRTAB+518                                             02414000
ESPSEC   EQU   ESTOPTME+7                                               02415000
ESPMIN   EQU   ESTOPTME+5                                               02416000
ESPHR    EQU   ESTOPTME+3                                               02417000
ESPDAY   EQU   ESTOPTME                                                 02418000
ESSEC    EQU   ESTARTME+7                                               02419000
ESMIN    EQU   ESTARTME+5                                               02420000
ESHR     EQU   ESTARTME+3                                               02421000
ESDAY    EQU   ESTARTME                                                 02422000
ADTSBUF  EQU   AMDPRTAB+496                                             02423000
OFSTDATA EQU   AMDPRTAB+494                                             02424000
OFSTEID  EQU   AMDPRTAB+492                                             02425000
AFRMAD   EQU   AMDPRTAB+488                                             02426000
REENTWKA EQU   AMDPRTAB+484                                             02427000
PRFMTADD EQU   AMDPRTAB+480                                             02428000
AEIOCT   EQU   AMDPRTAB+476                                             02429000
EXITADDR EQU   AMDPRTAB+472                                             02430000
EXITNM   EQU   AMDPRTAB+464                                             02431000
RECDLL   EQU   AMDPRTAB+461                                             02432000
@NM00001 EQU   GENFLGS1                                                 02433000
FIRSTHSW EQU   GENFLGS1                                                 02434000
TSFOUND  EQU   GENFLGS1                                                 02435000
EOFINPRO EQU   GENFLGS1                                                 02436000
TS       EQU   GENFLGS1                                                 02437000
EOF      EQU   GENFLAGS                                                 02438000
RR       EQU   GENFLAGS                                                 02439000
SRM      EQU   GENFLAGS                                                 02440000
RNIO     EQU   GENFLAGS                                                 02441000
SYSM     EQU   GENFLAGS                                                 02442000
SYS      EQU   GENFLAGS                                                 02443000
DSP      EQU   GENFLAGS                                                 02444000
EXT      EQU   GENFLAGS                                                 02445000
PICODEA  EQU   PGMNGEN+2                                                02446000
PICODES  EQU   PGMNGEN                                                  02447000
Q        EQU   PI+1                                                     02448000
P01R     EQU   PIFLGS                                                   02449000
SELP     EQU   PIFLGS                                                   02450000
ALLP     EQU   PIFLGS                                                   02451000
O        EQU   USR+1                                                    02452000
N01R     EQU   USRFLGS                                                  02453000
SELU     EQU   USRFLGS                                                  02454000
SVCNUMS  EQU   AMDPRTAB+336                                             02455000
M        EQU   VCF+1                                                    02456000
L        EQU   SVCFLGS                                                  02457000
SELV     EQU   SVCFLGS                                                  02458000
ALLV     EQU   SVCFLGS                                                  02459000
IODVADS  EQU   DVADS2                                                   02460000
K01RES   EQU   IO+1                                                     02461000
JJ       EQU   IOFLGS2                                                  02462000
SELI     EQU   IOFLGS2                                                  02463000
ALLI     EQU   IOFLGS2                                                  02464000
SIODVADS EQU   DVADS1                                                   02465000
II       EQU   SIF+1                                                    02466000
H        EQU   SIOFLGS                                                  02467000
NOEQU    EQU   SIOFLGS                                                  02468000
EQUIV    EQU   SIOFLGS                                                  02469000
SELS     EQU   SIOFLGS                                                  02470000
ALLS     EQU   SIOFLGS                                                  02471000
ASCBADDR EQU   AADS                                                     02472000
JOBNAMES EQU   NAMES                                                    02473000
F        EQU   STOPTIME+8                                               02474000
D        EQU   STARTIME+8                                               02475000
DDNAME   EQU   AMDPRTAB+32                                              02476000
USEREXIT EQU   AMDPRTAB+24                                              02477000
GTFWDPTR EQU   AMDPRTAB+20                                              02478000
C        EQU   DEBGFLGS+4                                               02479000
B        EQU   IOFLGS                                                   02480000
GETEOF   EQU   IOFLGS                                                   02481000
DMDFMT   EQU   INRFCFGS                                                 02482000
EDITSTOP EQU   INRFCFGS                                                 02483000
EXTTRC   EQU   INRFCFGS                                                 02484000
RET      EQU   INRFCFGS                                                 02485000
FMT      EQU   INRFCFGS                                                 02486000
SPIE     EQU   INRFCFGS                                                 02487000
TERM     EQU   INRFCFGS                                                 02488000
REMAIN   EQU   PTHFLGS2                                                 02489000
APP      EQU   PTHFLGS2                                                 02490000
REXT     EQU   PTHFLGS1                                                 02491000
FRM      EQU   PTHFLGS1                                                 02492000
FLT      EQU   PTHFLGS1                                                 02493000
HEX      EQU   PTHFLGS1                                                 02494000
CON      EQU   PTHFLGS1                                                 02495000
GET      EQU   PTHFLGS1                                                 02496000
ROOT     EQU   PTHFLGS1                                                 02497000
CURREC   EQU   AMDPRTAB+4                                               02498000
AFMG     EQU   AMDPRTAB                                                 02499000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      02500000
@RT00062 EQU   AMDPSCN1                                                 02501000
@RT00103 EQU   AMDSUMCL                                                 02502000
@RT00105 EQU   AMDPSTR1                                                 02503000
@RT00108 EQU   AMDPSTT                                                  02504000
AMDNRET  EQU   @EL00001                                                 02505000
@RT00113 EQU   AMDPSTR3                                                 02506000
@RT00116 EQU   AMDPSTR2                                                 02507000
@RT00128 EQU   AMDPRES2                                                 02508000
@RT00130 EQU   AMDPRES2                                                 02509000
@RT00132 EQU   AMDPRES2                                                 02510000
@RT00140 EQU   AMDPRES3                                                 02511000
@RT00143 EQU   AMDPRES3                                                 02512000
@RT00150 EQU   AMDPRES4                                                 02513000
@RT00152 EQU   AMDPBDKW                                                 02514000
@RT00154 EQU   AMDPCLS1                                                 02515000
@RT00158 EQU   AMDPKW1                                                  02516000
@RF00179 EQU   AMDPCK1                                                  02517000
@RT00185 EQU   AMDPBDKW                                                 02518000
@RT00188 EQU   AMDPEC1L                                                 02519000
@RT00190 EQU   AMDPRS51                                                 02520000
@RT00197 EQU   CONT                                                     02521000
@RT00206 EQU   AMDPMTD                                                  02522000
@RT00208 EQU   AMDPMTC2                                                 02523000
@RT00211 EQU   AMDPMTD                                                  02524000
@RT00217 EQU   AMDPEOC                                                  02525000
@RT00232 EQU   AMDPCHK6                                                 02526000
@RT00236 EQU   AMDPLN                                                   02527000
@RT00238 EQU   AMDPLN                                                   02528000
@RT00241 EQU   AMDPCHK6                                                 02529000
@RT00243 EQU   AMDPCLS1                                                 02530000
@RT00245 EQU   AMDPEC1L                                                 02531000
@RT00247 EQU   AMDPCLS1                                                 02532000
@RT00251 EQU   AMDPCHK5                                                 02533000
@RT00256 EQU   AMDPEC1L                                                 02534000
@RT00265 EQU   AMDPKW2                                                  02535000
@RT00276 EQU   AMDPPOS                                                  02536000
@RT00278 EQU   AMDPUSR                                                  02537000
@RT00283 EQU   AMDPPOS1                                                 02538000
@RT00285 EQU   AMDPEOC1                                                 02539000
AMDC1CAL EQU   AMDPEOC1                                                 02540000
@RT00289 EQU   AMDPEOC1                                                 02541000
@RT00292 EQU   AMDPPOS3                                                 02542000
@RT00294 EQU   AMDPPOS3                                                 02543000
@RT00326 EQU   AMDPSLT                                                  02544000
@RT00328 EQU   AMDPSLT                                                  02545000
@RT00332 EQU   AMDPPOS6                                                 02546000
@RT00339 EQU   AMDELMCL                                                 02547000
@RT00341 EQU   AMDPPOS6                                                 02548000
@RT00346 EQU   AMDVLNCL                                                 02549000
@RT00348 EQU   AMDELMCL                                                 02550000
@RT00350 EQU   AMDVLNCL                                                 02551000
@RT00360 EQU   AMDPPOS8                                                 02552000
@RT00362 EQU   AMDVMGCL                                                 02553000
@RC00381 EQU   AMDPEOC1                                                 02554000
@RT00411 EQU   AMDPPOSA                                                 02555000
@RT00413 EQU   AMDPOSA1                                                 02556000
@RT00417 EQU   AMDPPOSB                                                 02557000
@RT00419 EQU   AMDPOSA1                                                 02558000
@RT00422 EQU   AMDTIMSG                                                 02559000
@RT00424 EQU   AMDTIMSG                                                 02560000
@RF00424 EQU   AMDPEOC1                                                 02561000
@RT00427 EQU   AMDTIMSG                                                 02562000
@RT00429 EQU   AMDTIMSG                                                 02563000
@RF00429 EQU   AMDPEOC1                                                 02564000
@RT00432 EQU   AMDTIMSG                                                 02565000
@RT00434 EQU   AMDTIMSG                                                 02566000
@RF00434 EQU   AMDPEOC1                                                 02567000
@RT00441 EQU   AMDVMGCL                                                 02568000
@RT00452 EQU   AMDPCK1                                                  02569000
@RT00468 EQU   AMDPUSR3                                                 02570000
@RT00470 EQU   AMDPUSR3                                                 02571000
@RT00475 EQU   AMDVLNCL                                                 02572000
@RT00477 EQU   AMDELMCL                                                 02573000
@RT00481 EQU   AMDPUSR4                                                 02574000
@RT00487 EQU   AMDDASH                                                  02575000
@RT00489 EQU   AMDPEND2                                                 02576000
@RT00491 EQU   AMDPSYMB                                                 02577000
@RT00495 EQU   AMDELMCL                                                 02578000
@RT00504 EQU   AMDPSR51                                                 02579000
@RF00511 EQU   AMDINPRN                                                 02580000
@RT00534 EQU   AMDVLNCL                                                 02581000
@RT00540 EQU   AMDPFND                                                  02582000
@RF00548 EQU   AMDPUSR7                                                 02583000
@RT00562 EQU   AMDPINS                                                  02584000
@RT00564 EQU   AMDPUSRA                                                 02585000
@RT00566 EQU   AMDPINS2                                                 02586000
@RT00569 EQU   AMDEXCAL                                                 02587000
@RT00574 EQU   AMDVLNCL                                                 02588000
@RT00576 EQU   AMDELMCL                                                 02589000
@RT00594 EQU   AMDPEOC1                                                 02590000
@RT00596 EQU   AMDPEOC1                                                 02591000
@RT00602 EQU   AMDPINS2                                                 02592000
@RT00607 EQU   AMDPIN12                                                 02593000
@RT00611 EQU   AMDPIN11                                                 02594000
@RT00613 EQU   AMDPIN11                                                 02595000
@RT00618 EQU   AMDVLNCL                                                 02596000
@RT00620 EQU   AMDELMCL                                                 02597000
@RT00627 EQU   AMDPSR51                                                 02598000
@RT00634 EQU   AMDPUPRN                                                 02599000
@RT00641 EQU   AMDPUPRN                                                 02600000
@RT00644 EQU   AMDPINS2                                                 02601000
@RT00646 EQU   AMDPINS2                                                 02602000
@ENDDATA EQU   *                                                        02603000
         END   AMDPRSCN,(C'PLS0957',0701,77255)                         02604000
./  ADD  SSI=32391058,NAME=AMDPRSMG
         TITLE 'AMDPRSMG EDIT SCAN MESSAGE MODULE                      *00001000
                       '                                                00002000
AMDPRSMG CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL1(16)                                             0001 00007000
         DC    C'AMDPRSMG  73.240'                                 0001 00008000
         DROP  @15                                                      00009000
@PROLOG  BALR  @12,0                                               0001 00010000
@PSTART  DS    0H                                                  0001 00011000
         USING @PSTART,@12                                         0001 00012000
*                                       /* AMDPRSCN MESSAGES         */ 00013000
MSG1     WTO   'AMD201I INVALID KEYWORD  BEGINNING WITH    ',MF=L,     X00014000
               ROUTCDE=2,DESC=6         INVALID KEYWORD MESSAGE         00015000
MSG2     WTO   'AMD202I INVALID PARENTHESES',MF=L,ROUTCDE=2,           X00016000
               DESC=6                   INVALID PARENTHESES MESSAGE     00017000
MSG3     WTO   'AMD203I INVALID PARM VALUE  FOR KEYWORD XXXXXXXX',     X00018000
               MF=L,ROUTCDE=2,DESC=6    INVALID PARM VALUE MESSAGE      00019000
MSG4     WTO   'AMD204I LENGTH OF PARM INVALID  FOR KEYWORD XXXXXXXX', X00020000
               MF=L,ROUTCDE=2,DESC=6  INVALID LENGTH MESSAGE            00021000
MSG5     WTO   'AMD205I DUPLICATE KEYWORD -  XXXXXXXX',MF=L,ROUTCDE=2, X00022000
               DESC=6                   DUPLICATE KEYWORD MESSAGE       00023000
MSG6     WTO   'AMD206I EXCESSIVE NO. PARM VALUES  FOR KEYWORD XXXXXXXXX00024000
               ',MF=L,ROUTCDE=2,DESC=6  TOO MANY VALUES MESSAGE         00025000
MSG7     WTO   'AMD207I INVALID DELIMITER  FOR KEYWORD XXXXXXXX',MF=L, X00026000
               ROUTCDE=2,DESC=6         INVALID DELIMITER MESSAGE       00027000
MSG8     WTO   'AMD208I START VALUE EXCEEDS STOP VALUE IN STMTS ABOVE',X00028000
               MF=L,ROUTCDE=2,DESC=6    START VALUE>STOP VALUE MESSAGE  00029000
MSG9     WTO   'AMD209I INVALID USR EID OR RANGE',MF=L,ROUTCDE=2,      X00030000
               DESC=6                   INVALID USR EID MESSAGE         00031000
MSG10    EQU   *                                                  M4467 00032000
MSG11    WTO   'AMD211I EDIT OPTIONS IN EFFECT - ',MF=L,ROUTCDE=2,     X00033000
               DESC=6                   EDIT SUMMARY MESSAGE            00034000
*   END AMDPRSMG;                   /* AMDPRSCN MESSAGE MODULE       */ 00035000
@EL00001 DS    0H                                                  0005 00036000
@EF00001 DS    0H                                                  0005 00037000
@ER00001 BR    @14                                                 0005 00038000
@DATA    DS    0H                                                       00039000
         DS    0F                                                       00040000
         DS    0F                                                       00041000
         DS    0D                                                       00042000
AMDPRS00 DS    CL44                                                     00043000
         ORG   AMDPRS00                                                 00044000
AD1      DC    AL4(MSG1)                                                00045000
AD2      DC    AL4(MSG2)                                                00046000
AD3      DC    AL4(MSG3)                                                00047000
AD4      DC    AL4(MSG4)                                                00048000
AD5      DC    AL4(MSG5)                                                00049000
AD6      DC    AL4(MSG6)                                                00050000
AD7      DC    AL4(MSG7)                                                00051000
AD8      DC    AL4(MSG8)                                                00052000
AD9      DC    AL4(MSG9)                                                00053000
AD10     DC    AL4(MSG10)                                               00054000
AD11     DC    AL4(MSG11)                                               00055000
         ORG   AMDPRS00+44                                              00056000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       00057000
@01      EQU   01                                                       00058000
@02      EQU   02                                                       00059000
@03      EQU   03                                                       00060000
@04      EQU   04                                                       00061000
@05      EQU   05                                                       00062000
@06      EQU   06                                                       00063000
@07      EQU   07                                                       00064000
@08      EQU   08                                                       00065000
@09      EQU   09                                                       00066000
@10      EQU   10                                                       00067000
@11      EQU   11                                                       00068000
@12      EQU   12                                                       00069000
@13      EQU   13                                                       00070000
@14      EQU   14                                                       00071000
@15      EQU   15                                                       00072000
         ENTRY AMDPRS00                                                 00073000
@ENDDATA EQU   *                                                        00074000
         END   AMDPRSMG,(C'PL/S-II',0502,73240)                         00075000
./  ADD  SSI=32391059,NAME=AMDPRSN2
         TITLE 'AMDPRSN2--PART 2 OF EDIT SCAN                          *00001000
                       '                                                00002000
AMDPRSN2 CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL2(@EP00001-@MAINENT)                                   00007000
         DC    AL1(16)                                             0001 00008000
         DC    C'AMDPRSN2  73.240'                                 0001 00009000
AMDPNAM  DS    0H                                                  0001 00010000
         USING *,@15                                               0001 00011000
         B     @PROLOG                                             0001 00012000
         DC    AL2(@EP00041-AMDPNAM)                                    00013000
         ENTRY AMDPNAM                                                  00014000
AMDVLMG  DS    0H                                                  0001 00015000
         USING *,@15                                               0001 00016000
         B     @PROLOG                                             0001 00017000
         DC    AL2(@EP00056-AMDVLMG)                                    00018000
         ENTRY AMDVLMG                                                  00019000
AMDVLEN  DS    0H                                                  0001 00020000
         USING *,@15                                               0001 00021000
         B     @PROLOG                                             0001 00022000
         DC    AL2(@EP00112-AMDVLEN)                                    00023000
         ENTRY AMDVLEN                                                  00024000
AMDPTAJ  DS    0H                                                  0001 00025000
         USING *,@15                                               0001 00026000
         B     @PROLOG                                             0001 00027000
         DC    AL2(@EP00123-AMDPTAJ)                                    00028000
         ENTRY AMDPTAJ                                                  00029000
AMDELIM  DS    0H                                                  0001 00030000
         USING *,@15                                               0001 00031000
         B     @PROLOG                                             0001 00032000
         DC    AL2(@EP00203-AMDELIM)                                    00033000
         ENTRY AMDELIM                                                  00034000
AMDUMMG  DS    0H                                                  0001 00035000
         USING *,@15                                               0001 00036000
         B     @PROLOG                                             0001 00037000
         DC    AL2(@EP00213-AMDUMMG)                                    00038000
         ENTRY AMDUMMG                                                  00039000
AMDPSIO  DS    0H                                                  0001 00040000
         USING *,@15                                               0001 00041000
         B     @PROLOG                                             0001 00042000
         DC    AL2(@EP00224-AMDPSIO)                                    00043000
         ENTRY AMDPSIO                                                  00044000
AMDPSVC  DS    0H                                                  0001 00045000
         USING *,@15                                               0001 00046000
         B     @PROLOG                                             0001 00047000
         DC    AL2(@EP00390-AMDPSVC)                                    00048000
         ENTRY AMDPSVC                                                  00049000
AMDPPGM  DS    0H                                                  0001 00050000
         USING *,@15                                               0001 00051000
         B     @PROLOG                                             0001 00052000
         DC    AL2(@EP00425-AMDPPGM)                                    00053000
         ENTRY AMDPPGM                                                  00054000
AMDPSYS  DS    0H                                                  0001 00055000
         USING *,@15                                               0001 00056000
         B     @PROLOG                                             0001 00057000
         DC    AL2(@EP00474-AMDPSYS)                                    00058000
         ENTRY AMDPSYS                                                  00059000
AMDPEXT  DS    0H                                                  0001 00060000
         USING *,@15                                               0001 00061000
         B     @PROLOG                                             0001 00062000
         DC    AL2(@EP00487-AMDPEXT)                                    00063000
         ENTRY AMDPEXT                                                  00064000
AMDPDSP  DS    0H                                                  0001 00065000
         USING *,@15                                               0001 00066000
         B     @PROLOG                                             0001 00067000
         DC    AL2(@EP00490-AMDPDSP)                                    00068000
         ENTRY AMDPDSP                                                  00069000
AMDPRNIO DS    0H                                                  0001 00070000
         USING *,@15                                               0001 00071000
         B     @PROLOG                                             0001 00072000
         DC    AL2(@EP00493-AMDPRNIO)                                   00073000
         ENTRY AMDPRNIO                                                 00074000
AMDPSRM  DS    0H                                                  0001 00075000
         USING *,@15                                               0001 00076000
         B     @PROLOG                                             0001 00077000
         DC    AL2(@EP00496-AMDPSRM)                                    00078000
         ENTRY AMDPSRM                                                  00079000
AMDPRR   DS    0H                                                  0001 00080000
         USING *,@15                                               0001 00081000
         B     @PROLOG                                             0001 00082000
         DC    AL2(@EP00499-AMDPRR)                                     00083000
         ENTRY AMDPRR                                                   00084000
AMDPEOF  DS    0H                                                  0001 00085000
         USING *,@15                                               0001 00086000
         B     @PROLOG                                             0001 00087000
         DC    AL2(@EP00502-AMDPEOF)                                    00088000
         ENTRY AMDPEOF                                                  00089000
AMDPRCVB DS    0H                                                  0001 00090000
         USING *,@15                                               0001 00091000
         B     @PROLOG                                             0001 00092000
         DC    AL2(@EP00505-AMDPRCVB)                                   00093000
         ENTRY AMDPRCVB                                                 00094000
AMDPRHX  DS    0H                                                  0001 00095000
         USING *,@15                                               0001 00096000
         B     @PROLOG                                             0001 00097000
         DC    AL2(@EP00508-AMDPRHX)                                    00098000
         ENTRY AMDPRHX                                                  00099000
         DROP  @15                                                      00100000
@PROLOG  ST    @14,12(,@13)                                        0001 00101000
         STM   @00,@12,20(@13)                                     0001 00102000
         BALR  @11,0                                               0001 00103000
@PSTART  LA    @07,4095(,@11)                                      0001 00104000
         USING @PSTART,@11                                         0001 00105000
         USING @PSTART+4095,@07                                    0001 00106000
         LA    @08,@DATA                                           0001 00107000
         USING @DATA,@08                                           0001 00108000
         ST    @13,@SA00001+4                                      0001 00109000
         LA    @14,@SA00001                                        0001 00110000
         ST    @14,8(,@13)                                         0001 00111000
         LR    @13,@14                                             0001 00112000
         AH    @15,4(,@15)                                         0001 00113000
         BR    @15                                                 0001 00114000
@EP00001 DS    0H                                                  0002 00115000
*                                                                  0040 00116000
         EQUATES                        AMDPRDMP EQU MACRO              00117000
         COMMON                         EXPANDS TO AMDPRCOM TABLE       00118000
AMDPRSN2 CSECT                          RE-ESTABLISH CSECT              00119000
         USING COMMON,COMBASE           SET UP DSECT FOR AMDPRCOM       00120000
*   /*****************************************************************/ 00121000
*   /*                                                               */ 00122000
*   /* THIS SUBROUTINE PROCESSES THE EXIT AND DDNAME KEYWORDS.       */ 00123000
*   /*                                                               */ 00124000
*   /*****************************************************************/ 00125000
*                                                                  0041 00126000
*AMDPNAM:                                                          0041 00127000
*   ENTRY;                          /* ENTRY POINT                   */ 00128000
@EP00041 DS    0H                                                  0042 00129000
*   IF PAREN='1'B THEN              /* IF PARENS INCLUDED AROUND     */ 00130000
         TM    PAREN(TTABPTR),B'00010000'                          0042 00131000
         BNO   @RF00042                                            0042 00132000
*     DO;                           /* VALUE, THEY ARE INVALID       */ 00133000
*       REG15=12;                   /* SO, ISSUE INV PARENS MSG      */ 00134000
         LA    REG15,12                                            0044 00135000
*       GOTO AMDRTCTL;              /* RETURN TO CALLER              */ 00136000
         B     AMDRTCTL                                            0045 00137000
*     END;                                                         0046 00138000
*   IF SCNCHAR=>'A'                 /* Q/IS FIRST CHAR ALPHABETIC    */ 00139000
*       &SCNCHAR=<'I' THEN                                         0047 00140000
@RF00042 L     @14,SCNPTR(,TTABPTR)                                0047 00141000
         CLI   SCNCHAR(@14),C'A'                                   0047 00142000
         BL    @RF00047                                            0047 00143000
         CLI   SCNCHAR(@14),C'I'                                   0047 00144000
         BNH   @RT00047                                            0047 00145000
*     GOTO AMDPNAM1;                /* YES                           */ 00146000
*   IF SCNCHAR=>'J'                 /* Q/IS FIRST CHAR ALPHABETIC    */ 00147000
*       &SCNCHAR=<'R' THEN                                         0049 00148000
@RF00047 L     @14,SCNPTR(,TTABPTR)                                0049 00149000
         CLI   SCNCHAR(@14),C'J'                                   0049 00150000
         BL    @RF00049                                            0049 00151000
         CLI   SCNCHAR(@14),C'R'                                   0049 00152000
         BNH   @RT00049                                            0049 00153000
*     GOTO AMDPNAM1;                /* YES                           */ 00154000
*   IF SCNCHAR=>'S'                 /* Q/IS FIRST CHAR ALPHABETIC    */ 00155000
*       &SCNCHAR=<'Z' THEN                                         0051 00156000
@RF00049 L     @14,SCNPTR(,TTABPTR)                                0051 00157000
         CLI   SCNCHAR(@14),C'S'                                   0051 00158000
         BL    @RF00051                                            0051 00159000
         CLI   SCNCHAR(@14),C'Z'                                   0051 00160000
         BNH   @RT00051                                            0051 00161000
*     GOTO AMDPNAM1;                /* YES                           */ 00162000
*                                                                  0052 00163000
*   /*****************************************************************/ 00164000
*   /*                                                               */ 00165000
*   /* DETERMINE IF A NATIONAL CHARACTER                             */ 00166000
*   /*                                                               */ 00167000
*   /*****************************************************************/ 00168000
*                                                                  0053 00169000
*   IF SCNCHAR='$'                  /* IF CHAR IS A DOLLAR SIGN      */ 00170000
*       |SCNCHAR='#'                /* OR A POUND SIGN               */ 00171000
*       |SCNCHAR='@' THEN           /* OR AN AT SIGN, THEN           */ 00172000
@RF00051 L     @14,SCNPTR(,TTABPTR)                                0053 00173000
         CLI   SCNCHAR(@14),C'$'                                   0053 00174000
         BE    @RT00053                                            0053 00175000
         CLI   SCNCHAR(@14),C'#'                                   0053 00176000
         BE    @RT00053                                            0053 00177000
         CLI   SCNCHAR(@14),C'@'                                   0053 00178000
         BE    @RT00053                                            0053 00179000
*     GOTO AMDPNAM1;                /* LEGAL EXIT NM OR DDNAME       */ 00180000
*   GOTO AMDVMSG;                   /* OUTPUT INV KW DIAGNOSTIC      */ 00181000
*                                                                  0055 00182000
         B     AMDVMSG                                             0055 00183000
*/*  THIS SUBROUTINE OUTPUTS THE INVALID KEYWORD VALUE DIAGNOSTIC MSG*/ 00184000
*                                                                  0056 00185000
*AMDVLMG:                                                          0056 00186000
*   ENTRY;                          /* ENTRY POINT                   */ 00187000
@EP00056 DS    0H                                                  0057 00188000
*AMDVMSG:                                                          0057 00189000
*   SYNMSGA=ADDR(AD3);              /* INSERT ADDRS OF ADDRS OF      */ 00190000
AMDVMSG  L     @14,@CA00319                                        0057 00191000
         LA    @14,AD3-AMDPRS00(,@14)                              0057 00192000
         ST    @14,SYNMSGA                                         0057 00193000
*                                   /* INV VALUE MSG INTO     SYNMSGA*/ 00194000
*   IF SVKEY>11 THEN                /* Q/KW IN KWTAB2          Y02014*/ 00195000
         L     @10,SVKEY(,TTABPTR)                                 0058 00196000
         CH    @10,@CH00034                                        0058 00197000
         BH    @RT00058                                            0058 00198000
*     GOTO AMDVLMG1;                /* YES                           */ 00199000
*   ERRBUF(45:48)                   /* NO--MOVE IN KEYWORD FROM      */ 00200000
*       =KWTAB1(SVKEY);             /* KWTAB1                        */ 00201000
         L     @14,MSGADDR(,@14)                                   0060 00202000
         SLA   @10,2                                               0060 00203000
         ALR   @10,TTABPTR                                         0060 00204000
         MVC   ERRBUF+44(4,@14),KWTAB1-4(@10)                      0060 00205000
*   GOTO AMDVLMG2;                                                 0061 00206000
         B     AMDVLMG2                                            0061 00207000
*AMDVLMG1:                                                         0062 00208000
*   ERRBUF(45:52)                   /* MOVE IN KW FROM KWTAB2        */ 00209000
*       =KWTAB2(SVKEY-11);          /*                         Y02014*/ 00210000
AMDVLMG1 L     @14,SYNMSGA                                         0062 00211000
         L     @14,MSGADDR(,@14)                                   0062 00212000
         L     @10,SVKEY(,TTABPTR)                                 0062 00213000
         SLA   @10,3                                               0062 00214000
         ALR   @10,TTABPTR                                         0062 00215000
         MVC   ERRBUF+44(8,@14),KWTAB2-96(@10)                     0062 00216000
*AMDVLMG2:                                                         0063 00217000
*   GNOSTDMG='1'B;                  /* OMIT USSUANCE OF AMD165I      */ 00218000
AMDVLMG2 OI    GNOSTDMG,B'00010000'                                0063 00219000
*   CALL AMDPRSYN;                  /* HAVE MESSAGE WRITTEN          */ 00220000
         L     @15,ASYNTAX                                         0064 00221000
         BALR  @14,@15                                             0064 00222000
*   ERRBUF(45:52)=BLANK1;           /* BLANK FOR SHORTER KW          */ 00223000
         L     @14,SYNMSGA                                         0065 00224000
         L     @14,MSGADDR(,@14)                                   0065 00225000
         MVC   ERRBUF+44(8,@14),BLANK1(TTABPTR)                    0065 00226000
*   GOTO AMDPCALL;                  /* SET FLUSH MODE BIT            */ 00227000
         B     AMDPCALL                                            0066 00228000
*AMDPNAM1:                                                         0067 00229000
*   IF SCNCHAR=' '                  /* IF DELIMITER OF BLANK         */ 00230000
*       |SCNCHAR=',' THEN           /* OR COMMA FOUND, THEN          */ 00231000
AMDPNAM1 L     @14,SCNPTR(,TTABPTR)                                0067 00232000
         CLI   SCNCHAR(@14),C' '                                   0067 00233000
         BE    @RT00067                                            0067 00234000
         CLI   SCNCHAR(@14),C','                                   0067 00235000
         BE    @RT00067                                            0067 00236000
*     GOTO AMDPNAM2;                /* CALCULATE KW LENGTH           */ 00237000
*   IF SCNPTR                       /* IF AT LOGICAL END OF STMT,    */ 00238000
*       =EOCADDR THEN               /* THEN                          */ 00239000
         C     @14,EOCADDR(,TTABPTR)                               0069 00240000
         BE    @RT00069                                            0069 00241000
*     GOTO AMDPNAM2;                /* CALCULATE VALUE LENGTH        */ 00242000
*   SCNPTR=SCNPTR+1;                /* POSITION BUFFER POINTER       */ 00243000
         AH    @14,@CH00046                                        0071 00244000
         ST    @14,SCNPTR(,TTABPTR)                                0071 00245000
*   GOTO AMDPNAM1;                  /* CONTINUE SCAN FOR DELIMITR    */ 00246000
         B     AMDPNAM1                                            0072 00247000
*AMDPNAM2:                                                         0073 00248000
*   LNGTH=SCNPTR-ADDRS3;            /* CALCULATE VALUE LENGTH        */ 00249000
AMDPNAM2 L     @14,ADDRS3(,TTABPTR)                                0073 00250000
         L     @10,SCNPTR(,TTABPTR)                                0073 00251000
         SR    @10,@14                                             0073 00252000
         ST    @10,LNGTH(,TTABPTR)                                 0073 00253000
*   IF LNGTH>8 THEN                 /* IF LONGER THAN EIGHT CHARS    */ 00254000
         CH    @10,@CH00033                                        0074 00255000
         BH    @RT00074                                            0074 00256000
*     GOTO AMDVLN1;                 /* OUTPUT ERROR MESSAGE          */ 00257000
*   IF LNGTH<1 THEN                 /* IF LENGTH<ONE                 */ 00258000
         LTR   @10,@10                                             0076 00259000
         BNP   @RT00076                                            0076 00260000
*     GOTO AMDELIM1;                /* THEN OUTPUT BAD DELIM MSG     */ 00261000
*   COMP8=' ';                      /* BLANK COMPARE AREA            */ 00262000
         MVI   COMP8+1(TTABPTR),C' '                               0078 00263000
         MVC   COMP8+2(6,TTABPTR),COMP8+1(TTABPTR)                 0078 00264000
         MVI   COMP8(TTABPTR),C' '                                 0078 00265000
*   COMP8=VAL1(1:LNGTH);            /* MOVE IN VALUE                 */ 00266000
         MVI   COMP8+1(TTABPTR),C' '                               0079 00267000
         MVC   COMP8+2(6,TTABPTR),COMP8+1(TTABPTR)                 0079 00268000
         BCTR  @10,0                                               0079 00269000
         EX    @10,@SM00614                                        0079 00270000
*   IF CXIT='1'B THEN               /* IF PROCESSING EXIT, THEN      */ 00271000
         TM    CXIT(TTABPTR),B'10000000'                           0080 00272000
         BO    @RT00080                                            0080 00273000
*     GOTO AMDPNAM3;                /* CHECK EXIT SLOTS              */ 00274000
*   IF DDNAME¬=BLANK1 THEN          /* IF DDNAME ALREADY SPEC'D,     */ 00275000
         CLC   DDNAME(8,AEDITCBR),BLANK1(TTABPTR)                  0082 00276000
         BNE   @RT00082                                            0082 00277000
*     GOTO AMDPNAM4;                /* CHECK IF SAME                 */ 00278000
*   IF DDNM¬=BLANK1 THEN            /* IF TEMP DDNAME ALREADY        */ 00279000
         CLC   DDNM(8,TTABPTR),BLANK1(TTABPTR)                     0084 00280000
         BNE   @RT00084                                            0084 00281000
*     GOTO AMDPNAM5;                /* SPEC'D, CHECK IF SAME         */ 00282000
*   DDNM(1:LNGTH)=VAL1(1            /* OTHERWISE, MOVE VALUE INTO    */ 00283000
*       :LNGTH);                    /* DDNAME SLOT IN TEMPTAB        */ 00284000
         EX    @10,@SM00616                                        0086 00285000
*   GOTO AMDPEOCL;                  /* POSITION TO NEXT KW           */ 00286000
         B     AMDPEOCL                                            0087 00287000
*AMDPNAM3:                                                         0088 00288000
*   IF USEREXIT¬=BLANK1 THEN        /* IF EXIT ALREADY SPECIFIED,    */ 00289000
AMDPNAM3 CLC   USEREXIT(8,AEDITCBR),BLANK1(TTABPTR)                0088 00290000
         BNE   @RT00088                                            0088 00291000
*     GOTO AMDPNAM6;                /* CHECK IF SAME                 */ 00292000
*   IF EXITNAME¬=BLANK1 THEN        /* IF TEMP EXIT ALREADY          */ 00293000
         CLC   EXITNAME(8,TTABPTR),BLANK1(TTABPTR)                 0090 00294000
         BNE   @RT00090                                            0090 00295000
*     GOTO AMDPNAM7;                /* SPECIFIED, CHECK IF SAME      */ 00296000
*   EXITNAME(1:LNGTH)=VAL1          /* OTHERWISE, MOVE VALUE INTO    */ 00297000
*       (1:LNGTH);                  /* EXIT SLOT IN TEMPTAB          */ 00298000
         L     @14,LNGTH(,TTABPTR)                                 0092 00299000
         BCTR  @14,0                                               0092 00300000
         L     @10,ADDRS3(,TTABPTR)                                0092 00301000
         EX    @14,@SM00618                                        0092 00302000
*AMDPEOCL:                                                         0093 00303000
*   REG15=4;                        /* POSITION TO NEXT KW           */ 00304000
AMDPEOCL LA    REG15,4                                             0093 00305000
*   GOTO AMDRTCTL;                  /* RETURN TO CALLER              */ 00306000
         B     AMDRTCTL                                            0094 00307000
*AMDPNAM4:                                                         0095 00308000
*   IF DDNAME=COMP8 THEN            /* IF DDNAMES SAME, SIMPLY       */ 00309000
AMDPNAM4 CLC   DDNAME(8,AEDITCBR),COMP8(TTABPTR)                   0095 00310000
         BE    @RT00095                                            0095 00311000
*     GOTO AMDPEOCL;                /* POSITION TO NEXT KEYWORD      */ 00312000
*   GOTO AMDKWMG;                   /* IF NOT, DUPLICATE KW'S MSG    */ 00313000
         B     AMDKWMG                                             0097 00314000
*AMDPNAM5:                                                         0098 00315000
*   IF DDNM=COMP8 THEN              /* IF MATCH WITH TEMP DDNAME,    */ 00316000
AMDPNAM5 CLC   DDNM(8,TTABPTR),COMP8(TTABPTR)                      0098 00317000
         BE    @RT00098                                            0098 00318000
*     GOTO AMDPEOCL;                /* POSITION TO NEXT KEYWORD      */ 00319000
*   GOTO AMDKWMG;                   /* IF NOT, DUPLICATE KW'S MSG    */ 00320000
         B     AMDKWMG                                             0100 00321000
*AMDPNAM6:                                                         0101 00322000
*   IF USEREXIT=COMP8 THEN          /* IF EXIT NAMES SAME, POSITN    */ 00323000
AMDPNAM6 CLC   USEREXIT(8,AEDITCBR),COMP8(TTABPTR)                 0101 00324000
         BE    @RT00101                                            0101 00325000
*     GOTO AMDPEOCL;                /* TO NEXT KEYWORD               */ 00326000
*   GOTO AMDKWMG;                   /* IF NOT, DUPLICATE KW'S MSG    */ 00327000
         B     AMDKWMG                                             0103 00328000
*AMDPNAM7:                                                         0104 00329000
*   IF EXITNAME=COMP8 THEN          /* IF MATCH WITH TEMP EXIT       */ 00330000
AMDPNAM7 CLC   EXITNAME(8,TTABPTR),COMP8(TTABPTR)                  0104 00331000
         BE    @RT00104                                            0104 00332000
*     GOTO AMDPEOCL;                /* NAME, POSITION TO NEXT KW     */ 00333000
*AMDKWMG:                                                          0106 00334000
*   SYNMSGA=ADDR(AD5);              /* ADDRS OF ADDRS OF MSG         */ 00335000
AMDKWMG  L     @14,@CA00319                                        0106 00336000
         LA    @14,AD5-AMDPRS00(,@14)                              0106 00337000
         ST    @14,SYNMSGA                                         0106 00338000
*   ERRBUF(34:41)                   /* MOVE IN 'DDNAME' OR 'EXIT'    */ 00339000
*       =KWTAB2(SVKEY-11);          /*                         Y02014*/ 00340000
         L     @14,MSGADDR(,@14)                                   0107 00341000
         L     @10,SVKEY(,TTABPTR)                                 0107 00342000
         SLA   @10,3                                               0107 00343000
         ALR   @10,TTABPTR                                         0107 00344000
         MVC   ERRBUF+33(8,@14),KWTAB2-96(@10)                     0107 00345000
*AMDKWMG1:                                                         0108 00346000
*   GNOSTDMG='1'B;                  /* OMIT ISSUANCE OF AMD165I      */ 00347000
AMDKWMG1 OI    GNOSTDMG,B'00010000'                                0108 00348000
*   CALL AMDPRSYN;                  /* HAVE MESSAGE WRITTEN          */ 00349000
         L     @15,ASYNTAX                                         0109 00350000
         BALR  @14,@15                                             0109 00351000
*AMDPCALL:                                                         0110 00352000
*   REG15=0;                        /* SET FLUSH MODE BIT BEFORE   0110 00353000
*                                      CONTINUING                    */ 00354000
AMDPCALL SR    REG15,REG15                                         0110 00355000
*AMDRTCTL:                                                         0111 00356000
*   RETURN;                         /* RETURN TO CALLER              */ 00357000
*                                                                  0111 00358000
@EL00001 L     @13,4(,@13)                                         0111 00359000
@EF00001 DS    0H                                                  0111 00360000
@ER00001 L     @14,12(,@13)                                        0111 00361000
         LM    @00,@12,20(@13)                                     0111 00362000
         BR    @14                                                 0111 00363000
*   /*****************************************************************/ 00364000
*   /*                                                               */ 00365000
*   /* THIS SUBROUTINE OUTPUTS THE INVALID KEYWORD VALUE LENGTH      */ 00366000
*   /* MESSAGE.                                                      */ 00367000
*   /*                                                               */ 00368000
*   /*****************************************************************/ 00369000
*                                                                  0112 00370000
*AMDVLEN:                                                          0112 00371000
*   ENTRY;                          /* ENTRY POINT                   */ 00372000
@EP00112 DS    0H                                                  0113 00373000
*AMDVLN1:                                                          0113 00374000
*   SYNMSGA=ADDR(AD4);              /* ADDRS OF ADDRS OF MSG         */ 00375000
AMDVLN1  L     @14,@CA00319                                        0113 00376000
         LA    @14,AD4-AMDPRS00(,@14)                              0113 00377000
         ST    @14,SYNMSGA                                         0113 00378000
*   IF SVKEY>11 THEN                /* Q/KW IN KWTAB2          Y02014*/ 00379000
         L     @10,SVKEY(,TTABPTR)                                 0114 00380000
         CH    @10,@CH00034                                        0114 00381000
         BH    @RT00114                                            0114 00382000
*     GOTO AMDVLEN1;                /* YES                           */ 00383000
*   ERRBUF(49:52)                   /* MOVE IN 4-BYTE KEYWORD        */ 00384000
*       =KWTAB1(SVKEY);                                            0116 00385000
         L     @14,MSGADDR(,@14)                                   0116 00386000
         SLA   @10,2                                               0116 00387000
         ALR   @10,TTABPTR                                         0116 00388000
         MVC   ERRBUF+48(4,@14),KWTAB1-4(@10)                      0116 00389000
*   GOTO AMDVLEN2;                  /* GO TO HAVE MSG OUTPUTTED      */ 00390000
         B     AMDVLEN2                                            0117 00391000
*AMDVLEN1:                                                         0118 00392000
*   ERRBUF(49:56)                   /* MOVE IN 8-BYTE KEYWORD        */ 00393000
*       =KWTAB2(SVKEY-11);          /*                         Y02014*/ 00394000
AMDVLEN1 L     @14,SYNMSGA                                         0118 00395000
         L     @14,MSGADDR(,@14)                                   0118 00396000
         L     @10,SVKEY(,TTABPTR)                                 0118 00397000
         SLA   @10,3                                               0118 00398000
         ALR   @10,TTABPTR                                         0118 00399000
         MVC   ERRBUF+48(8,@14),KWTAB2-96(@10)                     0118 00400000
*AMDVLEN2:                                                         0119 00401000
*   GNOSTDMG='1'B;                  /* OMIT ISSUANCE OF AMD165I      */ 00402000
AMDVLEN2 OI    GNOSTDMG,B'00010000'                                0119 00403000
*   CALL AMDPRSYN;                  /* HAVE MESSAGE WRITTEN          */ 00404000
         L     @15,ASYNTAX                                         0120 00405000
         BALR  @14,@15                                             0120 00406000
*                                   /* OUTPUTTED                     */ 00407000
*   ERRBUF(49:56)=BLANK1;           /* BLANK MSG AREA FOR FUTURE     */ 00408000
         L     @14,SYNMSGA                                         0121 00409000
         L     @14,MSGADDR(,@14)                                   0121 00410000
         MVC   ERRBUF+48(8,@14),BLANK1(TTABPTR)                    0121 00411000
*   GOTO AMDPCALL;                  /* SET FLUSH MODE BIT            */ 00412000
*                                                                  0122 00413000
         B     AMDPCALL                                            0122 00414000
*   /*****************************************************************/ 00415000
*   /*                                                               */ 00416000
*   /* THIS SUBROUTINE PROCESSES THE JOBNAMES AND ASCB KEYWORDS      */ 00417000
*   /*                                                               */ 00418000
*   /*****************************************************************/ 00419000
*                                                                  0123 00420000
*AMDPTAJ:                                                          0123 00421000
*   ENTRY;                          /* ENTRY POINT                   */ 00422000
@EP00123 DS    0H                                                  0124 00423000
*   IF CASCB='1'B THEN              /* IF PROCESSING ASCB      Y02014*/ 00424000
         TM    CASCB(TTABPTR),B'00000100'                          0124 00425000
         BNO   @RF00124                                            0124 00426000
*     DO;                           /* DO THE FOLLOWING              */ 00427000
*       SRTTABPT=ADDR(ADS);         /* INITIALIZE PLACE KEEPER       */ 00428000
         LA    @14,ADS(,AEDITCBR)                                  0126 00429000
         ST    @14,SRTTABPT(,TTABPTR)                              0126 00430000
*       INCRT=4;                    /* ASCB ADDRS IS 4 BYTES         */ 00431000
         MVC   INCRT(4,TTABPTR),@CF00099                           0127 00432000
*     END;                          /*                         Y02014*/ 00433000
*   ELSE                            /* IF PROCESSING JOBNAMES        */ 00434000
*     DO;                           /* DO THE FOLLOWING              */ 00435000
         B     @RC00124                                            0129 00436000
@RF00124 DS    0H                                                  0130 00437000
*       SRTTABPT=ADDR(NAMES);       /* INITIALIZE PLACE KEEPER       */ 00438000
         LA    @14,NAMES(,AEDITCBR)                                0130 00439000
         ST    @14,SRTTABPT(,TTABPTR)                              0130 00440000
*       INCRT=8;                    /* JOBNAME IS 8 BYTES LONG       */ 00441000
         MVC   INCRT(4,TTABPTR),@CF00033                           0131 00442000
*     END;                                                         0132 00443000
*   LASTPTR=SRTTABPT+(5             /* CALCULATE END OF TABLE @      */ 00444000
*       *INCRT);                                                   0133 00445000
@RC00124 L     @14,INCRT(,TTABPTR)                                 0133 00446000
         MH    @14,@CH00086                                        0133 00447000
         A     @14,SRTTABPT(,TTABPTR)                              0133 00448000
         ST    @14,LASTPTR                                         0133 00449000
*AMDPTAJX:                                                         0134 00450000
*   IF SCNCHAR=','                  /* IF DELIMITER OF COMMA,        */ 00451000
*       |SCNCHAR=')'                /* RIGHT PARENTHESIS,            */ 00452000
*       |SCNCHAR=' ' THEN           /* OR BLANK IS FOUND, THEN       */ 00453000
AMDPTAJX L     @14,SCNPTR(,TTABPTR)                                0134 00454000
         CLI   SCNCHAR(@14),C','                                   0134 00455000
         BE    @RT00134                                            0134 00456000
         CLI   SCNCHAR(@14),C')'                                   0134 00457000
         BE    @RT00134                                            0134 00458000
         CLI   SCNCHAR(@14),C' '                                   0134 00459000
         BE    @RT00134                                            0134 00460000
*     GOTO AMDPTAJ1;                /* CALCULATE VALUE LENGTH        */ 00461000
*   IF SCNPTR=EOCADDR               /* IF AT LOGICAL END OF STMT,    */ 00462000
*     THEN                          /* THEN                          */ 00463000
         C     @14,EOCADDR(,TTABPTR)                               0136 00464000
         BE    @RT00136                                            0136 00465000
*     GOTO AMDPTAJ1;                /* CALCULATE VALUE LENGTH        */ 00466000
*   SCNPTR=SCNPTR+1;                /* POSITION BUFFER POINTER       */ 00467000
         AH    @14,@CH00046                                        0138 00468000
         ST    @14,SCNPTR(,TTABPTR)                                0138 00469000
*   GOTO AMDPTAJX;                  /* CONTINUE DELIMITER SCAN       */ 00470000
         B     AMDPTAJX                                            0139 00471000
*AMDPTAJ1:                                                         0140 00472000
*   LNGTH=SCNPTR-ADDRS3;            /* CALCULATE VALUE LENGTH        */ 00473000
AMDPTAJ1 L     @14,ADDRS3(,TTABPTR)                                0140 00474000
         L     @10,SCNPTR(,TTABPTR)                                0140 00475000
         SR    @10,@14                                             0140 00476000
         ST    @10,LNGTH(,TTABPTR)                                 0140 00477000
*   COMP8=' ';                      /* BLANK OUT COMPARE AREA        */ 00478000
         MVI   COMP8+1(TTABPTR),C' '                               0141 00479000
         MVC   COMP8+2(6,TTABPTR),COMP8+1(TTABPTR)                 0141 00480000
         MVI   COMP8(TTABPTR),C' '                                 0141 00481000
*   IF CASCB='1'B THEN              /* IF KEYWORD IS ASCB      Y02014*/ 00482000
         TM    CASCB(TTABPTR),B'00000100'                          0142 00483000
         BO    @RT00142                                            0142 00484000
*     GOTO AMDPTAJ3;                /* HANDLE THAT KEYWORD           */ 00485000
*   IF LNGTH>8 THEN                 /* IF VALUE LENGTH GREATER       */ 00486000
         CH    @10,@CH00033                                        0144 00487000
         BH    @RT00144                                            0144 00488000
*     GOTO AMDVLN1;                 /* THAN 8, OUTPUT ERROR MSG      */ 00489000
*   IF LNGTH<1 THEN                 /* IF ZERO LENGTH, HAVE DELIM    */ 00490000
         LTR   @10,@10                                             0146 00491000
         BNP   @RT00146                                            0146 00492000
*     GOTO AMDELIM1;                /* WHERE ONE DOESN'T BELONG      */ 00493000
*   IF VAL1(1)=>'A'                 /* Q/IS FIRST CHAR ALPHABETIC    */ 00494000
*       &VAL1(1)=<'I' THEN                                         0148 00495000
         CLI   VAL1(@14),C'A'                                      0148 00496000
         BL    @RF00148                                            0148 00497000
         CLI   VAL1(@14),C'I'                                      0148 00498000
         BNH   @RT00148                                            0148 00499000
*     GOTO AMDPTAJ2;                /* YES                           */ 00500000
*   IF VAL1(1)=>'J'                 /* Q/IS FIRST CHAR ALPHABETIC    */ 00501000
*       &VAL1(1)=<'R' THEN                                         0150 00502000
@RF00148 L     @14,ADDRS3(,TTABPTR)                                0150 00503000
         CLI   VAL1(@14),C'J'                                      0150 00504000
         BL    @RF00150                                            0150 00505000
         CLI   VAL1(@14),C'R'                                      0150 00506000
         BNH   @RT00150                                            0150 00507000
*     GOTO AMDPTAJ2;                /* YES                           */ 00508000
*   IF VAL1(1)=>'S'                 /* Q/IS FIRST CHAR ALPHABETIC    */ 00509000
*       &VAL1(1)=<'Z' THEN                                         0152 00510000
@RF00150 L     @14,ADDRS3(,TTABPTR)                                0152 00511000
         CLI   VAL1(@14),C'S'                                      0152 00512000
         BL    @RF00152                                            0152 00513000
         CLI   VAL1(@14),C'Z'                                      0152 00514000
         BNH   @RT00152                                            0152 00515000
*     GOTO AMDPTAJ2;                /* YES                           */ 00516000
*                                                                  0153 00517000
*   /*****************************************************************/ 00518000
*   /*                                                               */ 00519000
*   /* DETERMINE IF A NATIONAL CHARACTER                             */ 00520000
*   /*                                                               */ 00521000
*   /*****************************************************************/ 00522000
*                                                                  0154 00523000
*   IF VAL1(1)='$'                  /* IF CHAR IS A DOLLAR SIGN      */ 00524000
*       |VAL1(1)='#'                /* OR A POUND SIGN               */ 00525000
*       |VAL1(1)='@' THEN           /* OR AN AT SIGN, THEN           */ 00526000
@RF00152 L     @14,ADDRS3(,TTABPTR)                                0154 00527000
         CLI   VAL1(@14),C'$'                                      0154 00528000
         BE    @RT00154                                            0154 00529000
         CLI   VAL1(@14),C'#'                                      0154 00530000
         BE    @RT00154                                            0154 00531000
         CLI   VAL1(@14),C'@'                                      0154 00532000
         BE    @RT00154                                            0154 00533000
*     GOTO AMDPTAJ2;                /* LEGAL JOBNAME                 */ 00534000
*   GOTO AMDVMSG;                   /* IF NOT, INVALID VALUE         */ 00535000
         B     AMDVMSG                                             0156 00536000
*AMDPTAJ2:                                                         0157 00537000
*   COMP8=VAL1(1:LNGTH);            /* MOVE IN DELIMITED VALUE       */ 00538000
AMDPTAJ2 MVI   COMP8+1(TTABPTR),C' '                               0157 00539000
         MVC   COMP8+2(6,TTABPTR),COMP8+1(TTABPTR)                 0157 00540000
         L     @14,LNGTH(,TTABPTR)                                 0157 00541000
         BCTR  @14,0                                               0157 00542000
         L     @10,ADDRS3(,TTABPTR)                                0157 00543000
         EX    @14,@SM00620                                        0157 00544000
*   SORTPTR=JOBCRPTR;               /* CURRENT JOBNAME POINTER       */ 00545000
         MVC   SORTPTR(4,TTABPTR),JOBCRPTR(TTABPTR)                0158 00546000
*AMDPTAJ4:                                                         0159 00547000
*   IF SRTTABPT=LASTPTR THEN        /* IF AT END OF TABLE            */ 00548000
AMDPTAJ4 L     @14,SRTTABPT(,TTABPTR)                              0159 00549000
         C     @14,LASTPTR                                         0159 00550000
         BE    @RT00159                                            0159 00551000
*     GOTO AMDUMSG;                 /* HAVE TOO MANY VALUES          */ 00552000
*   IF SRTTABPT=SORTPTR THEN        /* Q/AT CURRENT SLOT             */ 00553000
         C     @14,SORTPTR(,TTABPTR)                               0161 00554000
         BNE   @RF00161                                            0161 00555000
*     DO;                           /* IF SO, DO THE FOLLOWING       */ 00556000
*       DEV(1:INCRT)=COMP8;         /* YES--INSERT VALUE             */ 00557000
         L     @10,INCRT(,TTABPTR)                                 0163 00558000
         LR    @06,@10                                             0163 00559000
         BCTR  @06,0                                               0163 00560000
         EX    @06,@SM00622                                        0163 00561000
*       IF CASCB='1'B THEN          /* IF ASCB                 Y02014*/ 00562000
         TM    CASCB(TTABPTR),B'00000100'                          0164 00563000
         BNO   @RF00164                                            0164 00564000
*         DO;                       /* DO THE FOLLOWING              */ 00565000
*           ASCBCPTR=ASCBCPTR       /* UPDTE ASCB POINTER      Y02014*/ 00566000
*               +INCRT;                                            0166 00567000
         A     @10,ASCBCPTR(,TTABPTR)                              0166 00568000
         ST    @10,ASCBCPTR(,TTABPTR)                              0166 00569000
*           GOTO AMDPARN;           /* CHECK FOR ADD'AL VALUES       */ 00570000
         B     AMDPARN                                             0167 00571000
*         END;                      /* INSERTED VAL & UPDATD PTRS    */ 00572000
*       JOBCRPTR=JOBCRPTR+INCRT;    /* UPDATE JOBNAME POINTER        */ 00573000
*                                                                  0169 00574000
@RF00164 L     @14,JOBCRPTR(,TTABPTR)                              0169 00575000
         A     @14,INCRT(,TTABPTR)                                 0169 00576000
         ST    @14,JOBCRPTR(,TTABPTR)                              0169 00577000
*       /*************************************************************/ 00578000
*       /*                                                           */ 00579000
*       /* THIS SUBROUTINE POSTIONS THE SCANNER DEPENDING UPON       */ 00580000
*       /* WHETHER PARENTHESES ARE NOW MATCHED, ARE YET TO BE        */ 00581000
*       /* MATCHED, OR DO NOT EXIST IN THIS KEYWORD VALUE.           */ 00582000
*       /*                                                           */ 00583000
*       /*************************************************************/ 00584000
*                                                                  0170 00585000
*AMDPARN:                                                          0170 00586000
*       IF PAREN='0'B THEN          /* IF ONLY ONE VALUE TO PROC,    */ 00587000
AMDPARN  TM    PAREN(TTABPTR),B'00010000'                          0170 00588000
         BZ    @RT00170                                            0170 00589000
*         GOTO AMDPEOCL;            /* CHECK FOR NEXT KEYWORD        */ 00590000
*       IF SCNCHAR=')' THEN         /* IF SCANNED ALL VALUES THEN    */ 00591000
         L     @14,SCNPTR(,TTABPTR)                                0172 00592000
         CLI   SCNCHAR(@14),C')'                                   0172 00593000
         BE    @RT00172                                            0172 00594000
*         GOTO AMDPEOCL;            /* CHECK FOR NEXT KEYWORD        */ 00595000
*       SCNPTR=SCNPTR+1;            /* POSITION BUFFER POINTER       */ 00596000
         AH    @14,@CH00046                                        0174 00597000
         ST    @14,SCNPTR(,TTABPTR)                                0174 00598000
*       ADDRS3=SCNPTR;              /* ADDRS OF NEXT VALUE           */ 00599000
         ST    @14,ADDRS3(,TTABPTR)                                0175 00600000
*       IF CJOBN='1'B               /* IF PROCESSING JOBNAMES        */ 00601000
*           |CASCB='1'B THEN        /* OR ASCB, THEN           Y02014*/ 00602000
         TM    CJOBN(TTABPTR),B'00001100'                          0176 00603000
         BNZ   @RT00176                                            0176 00604000
*         GOTO AMDPTAJX;            /* RESUME SCAN AT THAT RTN       */ 00605000
*       IF CSVC='1'B THEN           /* IF PROCESSING SVC, THEN       */ 00606000
         TM    CSVC(TTABPTR),B'01000000'                           0178 00607000
         BO    @RT00178                                            0178 00608000
*         GOTO AMDPSVC2;            /* RESUME SCAN AT THAT RTN       */ 00609000
*       IF CPI='1'B THEN            /* IF PROCESSING PI, THEN        */ 00610000
         TM    CPI(TTABPTR),B'00100000'                            0180 00611000
         BO    @RT00180                                            0180 00612000
*         GOTO AMDPPGM2;            /* RESUME SCAN AT THAT RTN       */ 00613000
*       GOTO AMDPIORS;              /* RESUME SCAN AT IO/SIO RTN     */ 00614000
         B     AMDPIORS                                            0182 00615000
*     END;                          /* HAVE INSERTED VALUE           */ 00616000
*   IF DEV(1:INCRT)¬=COMP8          /* Q/DOES VALUE EQUAL VALUE      */ 00617000
*     THEN                          /* ALREADY IN TABLE              */ 00618000
@RF00161 L     @14,SRTTABPT(,TTABPTR)                              0184 00619000
         L     @10,INCRT(,TTABPTR)                                 0184 00620000
         LR    @06,@10                                             0184 00621000
         BCTR  @06,0                                               0184 00622000
         EX    @06,@SC00624                                        0184 00623000
         BE    @RF00184                                            0184 00624000
*     DO;                           /* IF NOT, DO THE FOLLOWING      */ 00625000
*       SRTTABPT=SRTTABPT           /* LOOK AT NXT TABL VALUE        */ 00626000
*           +INCRT;                                                0186 00627000
         AR    @14,@10                                             0186 00628000
         ST    @14,SRTTABPT(,TTABPTR)                              0186 00629000
*       GOTO AMDPTAJ4;              /* CONTINUE SEARCH               */ 00630000
         B     AMDPTAJ4                                            0187 00631000
*     END;                          /* UNEQUAL COMPARE               */ 00632000
*   GOTO AMDPARN;                   /* EQUAL COMPARE--SCAN FOR       */ 00633000
         B     AMDPARN                                             0189 00634000
*AMDPTAJ3:                                                         0190 00635000
*   IF LNGTH>8 THEN                 /* ASCB ADDR MAX OF 8      Y02014*/ 00636000
AMDPTAJ3 L     @14,LNGTH(,TTABPTR)                                 0190 00637000
         CH    @14,@CH00033                                        0190 00638000
         BH    @RT00190                                            0190 00639000
*     GOTO AMDVLN1;                 /* CHARS--IF LRGER, ERROR MSG    */ 00640000
*   IF LNGTH<1 THEN                 /* IF ZERO LENGTH, HAVE          */ 00641000
         LTR   @14,@14                                             0192 00642000
         BNP   @RT00192                                            0192 00643000
*     GOTO AMDELIM1;                /* INVALID DELIMITER             */ 00644000
*                                                                  0193 00645000
*   /*****************************************************************/ 00646000
*   /*                                                               */ 00647000
*   /* DETERMINE IF ALL DIGITS ARE VALID HEX DIGITS--BETWEEN         */ 00648000
*   /*                                                               */ 00649000
*   /*****************************************************************/ 00650000
*                                                                  0194 00651000
*   DO I=LNGTH TO 1 BY-1;           /* CHECK TO DETERMINE THAT       */ 00652000
         ST    @14,I(,TTABPTR)                                     0194 00653000
         B     @DE00194                                            0194 00654000
@DL00194 DS    0H                                                  0195 00655000
*     IF VAL1(I)=>'A'               /* ALL DIGITS ARE BETWEEN 'A'    */ 00656000
*         &VAL1(I)=<'F' THEN        /* AND 'F'                       */ 00657000
         L     @14,I(,TTABPTR)                                     0195 00658000
         L     @10,ADDRS3(,TTABPTR)                                0195 00659000
         ALR   @14,@10                                             0195 00660000
         AL    @14,@CF00473                                        0195 00661000
         CLI   VAL1(@14),C'A'                                      0195 00662000
         BL    @RF00195                                            0195 00663000
         L     @14,I(,TTABPTR)                                     0195 00664000
         ALR   @10,@14                                             0195 00665000
         AL    @10,@CF00473                                        0195 00666000
         CLI   VAL1(@10),C'F'                                      0195 00667000
         BNH   @RT00195                                            0195 00668000
*       GOTO AMDPOK1;               /* OR                            */ 00669000
*     IF VAL1(I)<'0'                /* 0                             */ 00670000
*         |VAL1(I)>'9' THEN         /* AND 9                         */ 00671000
@RF00195 L     @14,I(,TTABPTR)                                     0197 00672000
         L     @10,ADDRS3(,TTABPTR)                                0197 00673000
         ALR   @14,@10                                             0197 00674000
         AL    @14,@CF00473                                        0197 00675000
         CLI   VAL1(@14),C'0'                                      0197 00676000
         BL    @RT00197                                            0197 00677000
         L     @14,I(,TTABPTR)                                     0197 00678000
         ALR   @10,@14                                             0197 00679000
         AL    @10,@CF00473                                        0197 00680000
         CLI   VAL1(@10),C'9'                                      0197 00681000
         BH    @RT00197                                            0197 00682000
*       GOTO AMDVMSG;               /* OTHERWISE, INVALID VALUE      */ 00683000
*AMDPOK1:                                                          0199 00684000
*   END;                            /* DIGIT VALIDITY CHECK          */ 00685000
AMDPOK1  SR    @14,@14                                             0199 00686000
         BCTR  @14,0                                               0199 00687000
         A     @14,I(,TTABPTR)                                     0199 00688000
         ST    @14,I(,TTABPTR)                                     0199 00689000
@DE00194 LTR   @14,@14                                             0199 00690000
         BP    @DL00194                                            0199 00691000
*   CALL AMDHEX;                    /* CNVT TCB ADDRS TO BINARY      */ 00692000
         BAL   @14,AMDHEX                                          0200 00693000
*   SORTPTR=ASCBCPTR;               /* CURR ASCB ADDR PTR      Y02014*/ 00694000
         MVC   SORTPTR(4,TTABPTR),ASCBCPTR(TTABPTR)                0201 00695000
*   GOTO AMDPTAJ4;                  /* BEGIN SEARCH                  */ 00696000
*                                                                  0202 00697000
         B     AMDPTAJ4                                            0202 00698000
*   /*****************************************************************/ 00699000
*   /*                                                               */ 00700000
*   /* THIS SUBROUTINE OUTPUTS THE INVALID DELIMITER DIAGNOSTIC      */ 00701000
*   /* MESSAGE.                                                      */ 00702000
*   /*                                                               */ 00703000
*   /*****************************************************************/ 00704000
*                                                                  0203 00705000
*AMDELIM:                                                          0203 00706000
*   ENTRY;                          /* ENTRY POINT                   */ 00707000
@EP00203 DS    0H                                                  0204 00708000
*AMDELIM1:                                                         0204 00709000
*   SYNMSGA=ADDR(AD7);              /* ADDRS OF ADDRS OF MESSAGE     */ 00710000
AMDELIM1 L     @14,@CA00319                                        0204 00711000
         LA    @14,AD7-AMDPRS00(,@14)                              0204 00712000
         ST    @14,SYNMSGA                                         0204 00713000
*   GNOSTDMG='1'B;                  /* OMIT ISSUANCE OF AMD165I      */ 00714000
         OI    GNOSTDMG,B'00010000'                                0205 00715000
*   IF SVKEY>11 THEN                /* Q/KW IN KWTAB2          Y02014*/ 00716000
         L     @10,SVKEY(,TTABPTR)                                 0206 00717000
         CH    @10,@CH00034                                        0206 00718000
         BH    @RT00206                                            0206 00719000
*     GOTO AMDELIM2;                /* YES                           */ 00720000
*   ERRBUF(44:47)                   /* MOVE IN 4-BYTE KEYWORD        */ 00721000
*       =KWTAB1(SVKEY);                                            0208 00722000
         L     @14,MSGADDR(,@14)                                   0208 00723000
         SLA   @10,2                                               0208 00724000
         ALR   @10,TTABPTR                                         0208 00725000
         MVC   ERRBUF+43(4,@14),KWTAB1-4(@10)                      0208 00726000
*   GOTO AMDELIM3;                  /* GO TO HAVE MSG OUTPUTTED      */ 00727000
         B     AMDELIM3                                            0209 00728000
*AMDELIM2:                                                         0210 00729000
*   ERRBUF(44:51)                   /* MOVE IN 8-BYTE KEYWORD        */ 00730000
*       =KWTAB2(SVKEY-11);          /*                         Y02014*/ 00731000
AMDELIM2 L     @14,SYNMSGA                                         0210 00732000
         L     @14,MSGADDR(,@14)                                   0210 00733000
         L     @10,SVKEY(,TTABPTR)                                 0210 00734000
         SLA   @10,3                                               0210 00735000
         ALR   @10,TTABPTR                                         0210 00736000
         MVC   ERRBUF+43(8,@14),KWTAB2-96(@10)                     0210 00737000
*AMDELIM3:                                                         0211 00738000
*   CALL AMDPRSYN;                  /* OUTPUT INVALID DELIM MSG      */ 00739000
AMDELIM3 L     @15,ASYNTAX                                         0211 00740000
         BALR  @14,@15                                             0211 00741000
*   GOTO AMDPCALL;                  /* SET FLUSH MODE BIT            */ 00742000
*                                                                  0212 00743000
         B     AMDPCALL                                            0212 00744000
*   /*****************************************************************/ 00745000
*   /*                                                               */ 00746000
*   /* THIS SUBROUTINE OUTPUTS THE EXCESSIVE NUMBER OF VALUES        */ 00747000
*   /* DIAGNOSTIC MESSAGE.                                           */ 00748000
*   /*                                                               */ 00749000
*   /*****************************************************************/ 00750000
*                                                                  0213 00751000
*AMDUMMG:                                                          0213 00752000
*   ENTRY;                          /* ENTRY POINT                   */ 00753000
@EP00213 DS    0H                                                  0214 00754000
*AMDUMSG:                                                          0214 00755000
*   SYNMSGA=ADDR(AD6);              /* ADDRS OF ADDRS OF MESSAGE     */ 00756000
AMDUMSG  L     @14,@CA00319                                        0214 00757000
         LA    @14,AD6-AMDPRS00(,@14)                              0214 00758000
         ST    @14,SYNMSGA                                         0214 00759000
*   IF SVKEY>11 THEN                /* Q/KW IN KWTAB2          Y02014*/ 00760000
         L     @10,SVKEY(,TTABPTR)                                 0215 00761000
         CH    @10,@CH00034                                        0215 00762000
         BH    @RT00215                                            0215 00763000
*     GOTO AMDUMMG1;                /* YES                           */ 00764000
*   ERRBUF(52:55)                   /* MOVE IN 4-BYTE KEYWORD        */ 00765000
*       =KWTAB1(SVKEY);                                            0217 00766000
         L     @14,MSGADDR(,@14)                                   0217 00767000
         SLA   @10,2                                               0217 00768000
         ALR   @10,TTABPTR                                         0217 00769000
         MVC   ERRBUF+51(4,@14),KWTAB1-4(@10)                      0217 00770000
*   GOTO AMDUMMG2;                  /* GO TO HAVE MSG OUTPUTTED      */ 00771000
         B     AMDUMMG2                                            0218 00772000
*AMDUMMG1:                                                         0219 00773000
*   ERRBUF(52:59)                   /* MOVE IN 8-BYTE KEYWORD        */ 00774000
*       =KWTAB2(SVKEY-11);          /*                         Y02014*/ 00775000
AMDUMMG1 L     @14,SYNMSGA                                         0219 00776000
         L     @14,MSGADDR(,@14)                                   0219 00777000
         L     @10,SVKEY(,TTABPTR)                                 0219 00778000
         SLA   @10,3                                               0219 00779000
         ALR   @10,TTABPTR                                         0219 00780000
         MVC   ERRBUF+51(8,@14),KWTAB2-96(@10)                     0219 00781000
*AMDUMMG2:                                                         0220 00782000
*   GNOSTDMG='1'B;                  /* OMIT ISSUANCE OF AMD165I      */ 00783000
AMDUMMG2 OI    GNOSTDMG,B'00010000'                                0220 00784000
*   CALL AMDPRSYN;                  /* HAVE MESSAGE WRITTEN          */ 00785000
         L     @15,ASYNTAX                                         0221 00786000
         BALR  @14,@15                                             0221 00787000
*   ERRBUF(52:59)=BLANK1;           /* BLANK MSG AREA TOR FUTURE   0222 00788000
*                                      SHORTER KEYWORDS              */ 00789000
         L     @14,SYNMSGA                                         0222 00790000
         L     @14,MSGADDR(,@14)                                   0222 00791000
         MVC   ERRBUF+51(8,@14),BLANK1(TTABPTR)                    0222 00792000
*   GOTO AMDPCALL;                  /* SET FLUSH MODE BIT            */ 00793000
*                                                                  0223 00794000
         B     AMDPCALL                                            0223 00795000
*   /*****************************************************************/ 00796000
*   /*                                                               */ 00797000
*   /* THIS SUBROUTINE PROCESSES THE SIO AND IO KEYWORDS, AS WELL AS */ 00798000
*   /* IO=SIO AND SIO AND IO.                                        */ 00799000
*   /*                                                               */ 00800000
*   /*****************************************************************/ 00801000
*                                                                  0224 00802000
*AMDPSIO:                                                          0224 00803000
*   ENTRY;                          /* ENTRY POINT                   */ 00804000
@EP00224 DS    0H                                                  0225 00805000
*   IF IORTNSW='1'B THEN            /* Q/BACK FROM PAREN CK RTN      */ 00806000
         TM    IORTNSW(TTABPTR),B'10000000'                        0225 00807000
         BNO   @RF00225                                            0225 00808000
*     DO;                           /* IF SO, DO THE FOLLOWING       */ 00809000
*       IORTNSW='0'B;               /* TURN OFF IO RTN SWITCH        */ 00810000
         NI    IORTNSW(TTABPTR),B'01111111'                        0227 00811000
*       GOTO AMDPSIOA;              /* CONTINUE PROCESSING           */ 00812000
         B     AMDPSIOA                                            0228 00813000
*     END;                                                         0229 00814000
*   IF SYS='1'B THEN                /* Q/SYS ALREADY SPECIFIED       */ 00815000
@RF00225 TM    SYS(AEDITCBR),B'00100000'                           0230 00816000
         BO    @RT00230                                            0230 00817000
*     GOTO AMDPEOCL;                /* YES                           */ 00818000
*   IF SYST='1'B THEN               /* Q/SYS SPECIFIED IN TEMPTAB    */ 00819000
         TM    SYST(TTABPTR),B'00100000'                           0232 00820000
         BO    @RT00232                                            0232 00821000
*     GOTO AMDPEOCL;                /* YES                           */ 00822000
*   IF NOVAL='1'B THEN              /* IF IO=ALL OR SIO=ALL          */ 00823000
         TM    NOVAL(TTABPTR),B'00100000'                          0234 00824000
         BO    @RT00234                                            0234 00825000
*     GOTO AMDPSIO1;                /* SPECIFIED, SET BITS           */ 00826000
*   ALLCT=0;                        /* INITIALIZE SIO/IO TRACKERS    */ 00827000
         SR    @14,@14                                             0236 00828000
         ST    @14,ALLCT(,TTABPTR)                                 0236 00829000
*   IF CSIO='1'B THEN               /* IF KEYWORD IS SIO, PROCESS    */ 00830000
         TM    CSIO(TTABPTR),B'00000001'                           0237 00831000
         BO    @RT00237                                            0237 00832000
*     GOTO AMDPSIO2;                /* THAT KEYWORD                  */ 00833000
*   SVTABY=ADDR(DVADS2);            /* BEG ADDRS OF IO TABLE         */ 00834000
         LA    @14,DVADS2(,AEDITCBR)                               0239 00835000
         ST    @14,SVTABY                                          0239 00836000
*   SRTBPTY=ADDR(DVADS2);           /* INITIALIZE PLACE KEEPER       */ 00837000
         ST    @14,SRTBPTY                                         0240 00838000
*   LSTPTRY=SRTBPTY+(50             /* ADDRS OF END OF IO TABLE      */ 00839000
*       *2);                                                       0241 00840000
         LA    @10,100                                             0241 00841000
         AR    @14,@10                                             0241 00842000
         ST    @14,LSTPTRY                                         0241 00843000
*   IF VAL1(1:3)=KWTAB1             /* IF SIO FOLLOWS IO=            */ 00844000
*       (1,1:3)THEN                 /*                               */ 00845000
         L     @14,ADDRS3(,TTABPTR)                                0242 00846000
         CLC   VAL1(3,@14),KWTAB1(TTABPTR)                         0242 00847000
         BNE   @RF00242                                            0242 00848000
*     DO;                           /* DO THE FOLLOWING              */ 00849000
*       CSIO='1'B;                  /* SET ON SIO BIT                */ 00850000
         OI    CSIO(TTABPTR),B'00000001'                           0244 00851000
*       SCNPTR=SCNPTR               /* POSITION CORRECTLY            */ 00852000
*           +2;                                                    0245 00853000
         LA    @14,2                                               0245 00854000
         A     @14,SCNPTR(,TTABPTR)                                0245 00855000
         ST    @14,SCNPTR(,TTABPTR)                                0245 00856000
*       SVTABX=ADDR                 /* BEG OF SIO TABLE              */ 00857000
*           (DVADS1);                                              0246 00858000
         LA    @14,DVADS1(,AEDITCBR)                               0246 00859000
         ST    @14,SVTABX                                          0246 00860000
*       SRTBPTX=ADDR                /* SIO PLACE KEEPER              */ 00861000
*           (DVADS1);                                              0247 00862000
         ST    @14,SRTBPTX                                         0247 00863000
*       LSTPTRX=SRTBPTX             /* ADDRS OF END OF SIO TABLE     */ 00864000
*           +(50*2);                                               0248 00865000
         AR    @14,@10                                             0248 00866000
         ST    @14,LSTPTRX                                         0248 00867000
*       GOTO AMDPSIO3;              /* CONTINUE PROCESSING           */ 00868000
         B     AMDPSIO3                                            0249 00869000
*     END;                          /* IO=SIO=                       */ 00870000
*   IF ALLI='1'B THEN               /* IF IO=ALL ALREADY SPEC'D,     */ 00871000
@RF00242 TM    ALLI(AEDITCBR),B'10000000'                          0251 00872000
         BO    @RT00251                                            0251 00873000
*     GOTO AMDPEOCL;                /* SEARCH FOR NEXT KEYWORD       */ 00874000
*   IF ALLIT='1'B THEN              /* IF IO=ALL IN TEMPTAB, THEN    */ 00875000
         TM    ALLIT(TTABPTR),B'10000000'                          0253 00876000
         BO    @RT00253                                            0253 00877000
*     GOTO AMDPEOCL;                /* SEARCH FOR NEXT KEYWORD       */ 00878000
*   GOTO AMDPSIO4;                  /* CONTINUE SELECTIVE PROC'G     */ 00879000
         B     AMDPSIO4                                            0255 00880000
*AMDPSIO1:                                                         0256 00881000
*   IF CSIO¬='1'B THEN              /* IF NOT PROCESSING SIO,        */ 00882000
AMDPSIO1 TM    CSIO(TTABPTR),B'00000001'                           0256 00883000
         BO    @RF00256                                            0256 00884000
*     DO;                           /* DO THE FOLLOWING              */ 00885000
*       ALLIT='1'B;                 /* IO=ALL                        */ 00886000
         OI    ALLIT(TTABPTR),B'10000000'                          0258 00887000
*       GOTO AMDPNOEQ;              /* NO IO=SIO FROM NOW ON         */ 00888000
         B     AMDPNOEQ                                            0259 00889000
*     END;                                                         0260 00890000
*   ALLST='1'B;                     /* PROCESSING SIO, SO SIO=ALL    */ 00891000
@RF00256 OI    ALLST(TTABPTR),B'10000000'                          0261 00892000
*AMDPNOEQ:                                                         0262 00893000
*   NOEQUT='1'B;                    /* SET ON SIO/IO EQUIV NOT     0262 00894000
*                                      PERMITTED FLAG                */ 00895000
AMDPNOEQ OI    NOEQUT(TTABPTR),B'00010000'                         0262 00896000
*AMDPCLCL:                                                         0263 00897000
*   REG15=16;                       /* SEARCH FOR NEXT KW            */ 00898000
AMDPCLCL LA    REG15,16                                            0263 00899000
*   GOTO AMDRTCTL;                  /* RETURN TO CALLER              */ 00900000
         B     AMDRTCTL                                            0264 00901000
*AMDPSIO2:                                                         0265 00902000
*   SVTABX=ADDR(DVADS1);            /* BEG ADDRS OF SIO TABLE        */ 00903000
AMDPSIO2 LA    @14,DVADS1(,AEDITCBR)                               0265 00904000
         ST    @14,SVTABX                                          0265 00905000
*   SRTBPTX=ADDR(DVADS1);           /* INITIALIZE SIO PLC KEEPER     */ 00906000
         ST    @14,SRTBPTX                                         0266 00907000
*   LSTPTRX=SRTBPTX+(50             /* ADDRS OF END OF SIO TABLE     */ 00908000
*       *2);                                                       0267 00909000
         LA    @10,100                                             0267 00910000
         AR    @14,@10                                             0267 00911000
         ST    @14,LSTPTRX                                         0267 00912000
*   IF VAL1(1:2)=KWTAB1             /* IF IO FOLLOWS SIO=            */ 00913000
*       (2,1:2)THEN                 /* THEN                          */ 00914000
         L     @14,ADDRS3(,TTABPTR)                                0268 00915000
         CLC   VAL1(2,@14),KWTAB1+4(TTABPTR)                       0268 00916000
         BNE   @RF00268                                            0268 00917000
*     DO;                           /* DO THE FOLLOWING              */ 00918000
*       CIO='1'B;                   /* SET ON IO BIT                 */ 00919000
         OI    CIO(TTABPTR),B'10000000'                            0270 00920000
*       SCNPTR=SCNPTR+1;            /* POSITION TO O OF IO           */ 00921000
         LA    @14,1                                               0271 00922000
         A     @14,SCNPTR(,TTABPTR)                                0271 00923000
         ST    @14,SCNPTR(,TTABPTR)                                0271 00924000
*       SVTABY=ADDR(DVADS2);        /* BEG ADDRS OF IO TABLE         */ 00925000
         LA    @14,DVADS2(,AEDITCBR)                               0272 00926000
         ST    @14,SVTABY                                          0272 00927000
*       SRTBPTY=ADDR(DVADS2);       /* INITIALIZE IO PLACE KEEPER    */ 00928000
         ST    @14,SRTBPTY                                         0273 00929000
*       LSTPTRY=SRTBPTY+(50         /* ADDRS OF END OF IO TABLE      */ 00930000
*           *2);                                                   0274 00931000
         AR    @14,@10                                             0274 00932000
         ST    @14,LSTPTRY                                         0274 00933000
*       GOTO AMDPSIO3;              /* CONTINUE PROCESSING           */ 00934000
         B     AMDPSIO3                                            0275 00935000
*     END;                          /* SIO=IO=                       */ 00936000
*   IF ALLS='1'B THEN               /* IF SIO=ALL ALREADY     SPEC'D,*/ 00937000
@RF00268 TM    ALLS(AEDITCBR),B'10000000'                          0277 00938000
         BO    @RT00277                                            0277 00939000
*     GOTO AMDPEOCL;                /* SEARCH FOR NEXT KEYWORD       */ 00940000
*   IF ALLST='1'B THEN              /* IF SIO=ALL IN TEMPTAB,        */ 00941000
         TM    ALLST(TTABPTR),B'10000000'                          0279 00942000
         BO    @RT00279                                            0279 00943000
*     GOTO AMDPEOCL;                /* SEARCH FOR NEXT KEYWORD       */ 00944000
*AMDPSIO4:                                                         0281 00945000
*   NOEQUT='1'B;                    /* SIO OR IO INDIVIDUALLY        */ 00946000
AMDPSIO4 OI    NOEQUT(TTABPTR),B'00010000'                         0281 00947000
*                                   /* SPEC'D, SO SIO/IO EQUIV       */ 00948000
*                                   /* NOT PERMITTED                 */ 00949000
*   IF PAREN='1'B THEN              /* IF MORE THAN ONE VALUE        */ 00950000
         TM    PAREN(TTABPTR),B'00010000'                          0282 00951000
         BNO   @RF00282                                            0282 00952000
*     SCNPTR=SCNPTR-3;              /* ALLOW FOR LEFT PAREN          */ 00953000
         L     @14,SCNPTR(,TTABPTR)                                0283 00954000
         SH    @14,@CH00169                                        0283 00955000
         ST    @14,SCNPTR(,TTABPTR)                                0283 00956000
*   ELSE                            /* IF ONLY ONE VALUE             */ 00957000
*     SCNPTR=SCNPTR-2;              /* NEED BACKSPACE ONLY TWO       */ 00958000
         B     @RC00282                                            0284 00959000
@RF00282 L     @14,SCNPTR(,TTABPTR)                                0284 00960000
         BCTR  @14,0                                               0284 00961000
         BCTR  @14,0                                               0284 00962000
         ST    @14,SCNPTR(,TTABPTR)                                0284 00963000
*   GOTO AMDPSIO6;                  /* BEGIN VALUE SCAN              */ 00964000
         B     AMDPSIO6                                            0285 00965000
*AMDPSIO3:                                                         0286 00966000
*   IF NOEQU='1'B                   /* IF SIO/IO EQUIV NOT           */ 00967000
*       |NOEQUT='1'B THEN           /* PERMITTED, THEN EXAMINE       */ 00968000
AMDPSIO3 TM    NOEQU(AEDITCBR),B'00010000'                         0286 00969000
         BO    @RT00286                                            0286 00970000
         TM    NOEQUT(TTABPTR),B'00010000'                         0286 00971000
         BO    @RT00286                                            0286 00972000
*     GOTO AMDPSIO5;                /* INDIVIDUAL BITS               */ 00973000
*   EQUIVT='1'B;                    /* SIO AND IO NOW EQUIVALENT     */ 00974000
         OI    EQUIVT(TTABPTR),B'00100000'                         0288 00975000
*AMDPSI31:                                                         0289 00976000
*   EQUIND='1'B;                    /* PROCESS SIO AND IO TABLE      */ 00977000
AMDPSI31 OI    EQUIND(TTABPTR),B'00010000'                         0289 00978000
*   GOTO AMDPSIO6;                  /* BEGIN VALUE SEARCH            */ 00979000
         B     AMDPSIO6                                            0290 00980000
*AMDPSIO5:                                                         0291 00981000
*   IF ALLS='0'B                    /* IF SIO AND IO 'ALL'           */ 00982000
*       &ALLST='0'B                 /* INDICATORS ARE ALL OFF IN     */ 00983000
*       &ALLI='0'B                  /* BOTH TABLES                   */ 00984000
*       &ALLIT='0'B THEN            /* THEN IO AND SIO TABLES        */ 00985000
AMDPSIO5 TM    ALLS(AEDITCBR),B'10000000'                          0291 00986000
         BNZ   @RF00291                                            0291 00987000
         TM    ALLST(TTABPTR),B'10000000'                          0291 00988000
         BNZ   @RF00291                                            0291 00989000
         TM    ALLI(AEDITCBR),B'10000000'                          0291 00990000
         BNZ   @RF00291                                            0291 00991000
         TM    ALLIT(TTABPTR),B'10000000'                          0291 00992000
         BZ    @RT00291                                            0291 00993000
*     GOTO AMDPSI31;                /* CAN BE PROCESSED TOGETHER     */ 00994000
*   IF ALLS='1'B                    /* IF SIO=ALL IN AMDPRTAB        */ 00995000
*       |ALLST='1'B THEN            /* TEMPTAB, THEN                 */ 00996000
@RF00291 TM    ALLS(AEDITCBR),B'10000000'                          0293 00997000
         BO    @RT00293                                            0293 00998000
         TM    ALLST(TTABPTR),B'10000000'                          0293 00999000
         BNO   @RF00293                                            0293 01000000
@RT00293 DS    0H                                                  0294 01001000
*     DO;                           /* DO THE FOLLOWING              */ 01002000
*       CSIO='0'B;                  /* SET OFF SIO PROCESSING BIT    */ 01003000
         NI    CSIO(TTABPTR),B'11111110'                           0295 01004000
*       ALLCT=1;                    /* ONE OF TWO KWS NULLIFIED      */ 01005000
         MVC   ALLCT(4,TTABPTR),@CF00046                           0296 01006000
*     END;                          /* SIO=ALL                       */ 01007000
*AMDPSI51:                                                         0298 01008000
*   IF ALLI='1'B                    /* IF IO=ALL IN AMDPRTAB OR      */ 01009000
*       |ALLIT='1'B THEN            /* TEMPTAB, THEN                 */ 01010000
@RF00293 DS    0H                                                  0298 01011000
AMDPSI51 TM    ALLI(AEDITCBR),B'10000000'                          0298 01012000
         BO    @RT00298                                            0298 01013000
         TM    ALLIT(TTABPTR),B'10000000'                          0298 01014000
         BNO   @RF00298                                            0298 01015000
@RT00298 DS    0H                                                  0299 01016000
*     DO;                           /* DO THE FOLLOWING              */ 01017000
*       CIO='0'B;                   /* SET OFF IO PROCESSING BIT     */ 01018000
         NI    CIO(TTABPTR),B'01111111'                            0300 01019000
*       ALLCT=ALLCT+1;              /* ONE OR TWO KWS NULLIFIED      */ 01020000
         LA    @14,1                                               0301 01021000
         A     @14,ALLCT(,TTABPTR)                                 0301 01022000
         ST    @14,ALLCT(,TTABPTR)                                 0301 01023000
*     END;                          /* IO=ALL                        */ 01024000
*AMDPSIO6:                                                         0303 01025000
*   SCNPTR=SCNPTR+1;                /* POSITION TO DELIMITER         */ 01026000
@RF00298 DS    0H                                                  0303 01027000
AMDPSIO6 LA    @14,1                                               0303 01028000
         A     @14,SCNPTR(,TTABPTR)                                0303 01029000
         ST    @14,SCNPTR(,TTABPTR)                                0303 01030000
*   IF SCNCHAR=','                  /* IF NEXT CHAR IS COMMA,        */ 01031000
*       |SCNPTR=EOCADDR THEN        /* OR END-OF-STMT IS REACHED,    */ 01032000
         CLI   SCNCHAR(@14),C','                                   0304 01033000
         BE    @RT00304                                            0304 01034000
         C     @14,EOCADDR(,TTABPTR)                               0304 01035000
         BNE   @RF00304                                            0304 01036000
@RT00304 DS    0H                                                  0305 01037000
*     DO;                           /* DO THE FOLLOWING              */ 01038000
*       IF CSIO='1'B THEN           /* SET ON SIO=ALL TEMP BIT       */ 01039000
         TM    CSIO(TTABPTR),B'00000001'                           0306 01040000
         BNO   @RF00306                                            0306 01041000
*         ALLST='1'B;               /* IF SIO BEING PROCESSED        */ 01042000
         OI    ALLST(TTABPTR),B'10000000'                          0307 01043000
*       IF CIO='1'B THEN            /* SET ON IO=ALL TEMP BIT        */ 01044000
@RF00306 TM    CIO(TTABPTR),B'10000000'                            0308 01045000
         BNO   @RF00308                                            0308 01046000
*         ALLIT='1'B;               /* IF IO BEING PROCESSED         */ 01047000
         OI    ALLIT(TTABPTR),B'10000000'                          0309 01048000
*       GOTO AMDPCLCL;              /* POSITION TO NEXT KEYWORD      */ 01049000
         B     AMDPCLCL                                            0310 01050000
*     END;                          /* DELIMITER WAS COMMA           */ 01051000
*   IF SCNCHAR¬='=' THEN            /* IF EQUAL SIGN DOES NOT        */ 01052000
@RF00304 L     @14,SCNPTR(,TTABPTR)                                0312 01053000
         CLI   SCNCHAR(@14),C'='                                   0312 01054000
         BNE   @RT00312                                            0312 01055000
*     GOTO AMDELIM1;                /* FOLLOW, HAVE BAD DELIMITER    */ 01056000
*   SCNPTR=SCNPTR+1;                /* POSITION BUFFER POINTER       */ 01057000
         LA    @10,1                                               0314 01058000
         AR    @14,@10                                             0314 01059000
         ST    @14,SCNPTR(,TTABPTR)                                0314 01060000
*   IF SCNCHAR=',' THEN             /* NO VALUE, SO GO ON TO NEXT    */ 01061000
         CLI   SCNCHAR(@14),C','                                   0315 01062000
         BE    @RT00315                                            0315 01063000
*     GOTO AMDPCLCL;                /* KEYWORD                       */ 01064000
*   IF SCNCHAR='(' THEN             /* IF LEFT PAREN FOLLOWS,        */ 01065000
         CLI   SCNCHAR(@14),C'('                                   0317 01066000
         BNE   @RF00317                                            0317 01067000
*     DO;                           /* DO THE FOLLOWING              */ 01068000
*       IF PAREN='1'B THEN          /* PARENS ALREADY CHECKED IF     */ 01069000
         TM    PAREN(TTABPTR),B'00010000'                          0319 01070000
         BNO   @RF00319                                            0319 01071000
*         DO;                       /* SIO OR IO ALONE SPEC, SO      */ 01072000
*           SCNPTR=SCNPTR+1;        /* UPDATE BUFFER PTR             */ 01073000
         AR    @14,@10                                             0321 01074000
         ST    @14,SCNPTR(,TTABPTR)                                0321 01075000
*           ADDRS3=SCNPTR;          /* SAVE ADDRS OF VAL BEG'NG      */ 01076000
         ST    @14,ADDRS3(,TTABPTR)                                0322 01077000
*           GOTO AMDPSIOA;          /* RESUME VALUE SCAN             */ 01078000
         B     AMDPSIOA                                            0323 01079000
*         END;                                                     0324 01080000
*       IORTNSW='1'B;               /* SET RETURN INDICATION         */ 01081000
@RF00319 OI    IORTNSW(TTABPTR),B'10000000'                        0325 01082000
*       REG15=8;                    /* CHECK FOR MATCHING PARENS     */ 01083000
         LA    REG15,8                                             0326 01084000
*       GOTO AMDRTCTL;              /* RETURN TO CALLER              */ 01085000
         B     AMDRTCTL                                            0327 01086000
*     END;                                                         0328 01087000
*   ELSE                                                           0329 01088000
*     ADDRS3=SCNPTR;                /* SAVE ADDRS OF VAL BEG'NG      */ 01089000
@RF00317 MVC   ADDRS3(4,TTABPTR),SCNPTR(TTABPTR)                   0329 01090000
*AMDPSIOA:                                                         0330 01091000
*   IF CSIO='1'B THEN               /* IF PROCESSING SEL IO,         */ 01092000
AMDPSIOA TM    CSIO(TTABPTR),B'00000001'                           0330 01093000
         BNO   @RF00330                                            0330 01094000
*     DO;                           /* DO THE FOLLOWING              */ 01095000
*       SELST='1'B;                 /* SET ON SIO SEL TEMP BIT       */ 01096000
         OI    SELST(TTABPTR),B'01000000'                          0332 01097000
*       IF CIO='1'B THEN            /* IF PROCESSING IO ALSO,        */ 01098000
         TM    CIO(TTABPTR),B'10000000'                            0333 01099000
         BNO   @RF00333                                            0333 01100000
*         SELIT='1'B;               /* SET ON IO SELECTIVE BIT       */ 01101000
         OI    SELIT(TTABPTR),B'01000000'                          0334 01102000
*       GOTO AMDPIORS;              /* BEGIN VALUE SCAN              */ 01103000
         B     AMDPIORS                                            0335 01104000
*     END;                          /* IO BEING PROCESSED            */ 01105000
*   IF CIO='0'B THEN                /* IF NOT PROCESSING IO,         */ 01106000
@RF00330 TM    CIO(TTABPTR),B'10000000'                            0337 01107000
         BZ    @RT00337                                            0337 01108000
*     GOTO AMDPEOCL;                /* LOOK FOR NEXT KEYWORD         */ 01109000
*   SELIT='1'B;                     /* SET ON IO SEL TEMP BIT        */ 01110000
         OI    SELIT(TTABPTR),B'01000000'                          0339 01111000
*AMDPIORS:                                                         0340 01112000
*   IF SCNCHAR=','                  /* IF DELIMITER OF COMMA         */ 01113000
*       |SCNCHAR=')'                /* OF RIGHT PAREN                */ 01114000
*       |SCNCHAR=' ' THEN           /* OR BLANK                      */ 01115000
AMDPIORS L     @14,SCNPTR(,TTABPTR)                                0340 01116000
         CLI   SCNCHAR(@14),C','                                   0340 01117000
         BE    @RT00340                                            0340 01118000
         CLI   SCNCHAR(@14),C')'                                   0340 01119000
         BE    @RT00340                                            0340 01120000
         CLI   SCNCHAR(@14),C' '                                   0340 01121000
         BE    @RT00340                                            0340 01122000
*     GOTO AMDPSIOC;                /* FOUND, ISOLATE VALUE          */ 01123000
*   IF SCNPTR=EOCADDR               /* IF AT LOGICAL END OF STMT,    */ 01124000
*     THEN                          /* THEN                          */ 01125000
         C     @14,EOCADDR(,TTABPTR)                               0342 01126000
         BE    @RT00342                                            0342 01127000
*     GOTO AMDPSIOC;                /* ISOLATE VALUE                 */ 01128000
*   SCNPTR=SCNPTR+1;                /* POSITION BUFFER POINTER       */ 01129000
         AH    @14,@CH00046                                        0344 01130000
         ST    @14,SCNPTR(,TTABPTR)                                0344 01131000
*   GOTO AMDPIORS;                  /* CONTINUE SCAN                 */ 01132000
         B     AMDPIORS                                            0345 01133000
*AMDPSIOC:                                                         0346 01134000
*   LNGTH=SCNPTR-ADDRS3;            /* CALCULATE VALUE LENGTH        */ 01135000
AMDPSIOC L     @14,SCNPTR(,TTABPTR)                                0346 01136000
         S     @14,ADDRS3(,TTABPTR)                                0346 01137000
         ST    @14,LNGTH(,TTABPTR)                                 0346 01138000
*   IF LNGTH<1 THEN                 /* IF LENGTH<1                   */ 01139000
         LTR   @14,@14                                             0347 01140000
         BNP   @RT00347                                            0347 01141000
*     GOTO AMDELIM1;                /* OUTPUT BAD DELIMITER MSG      */ 01142000
*   IF LNGTH¬=3 THEN                /* IF LENGTH NOT = 3       Y02014*/ 01143000
         CH    @14,@CH00169                                        0349 01144000
         BNE   @RT00349                                            0349 01145000
*     GOTO AMDVLN1;                 /* OUTPUT BAD VALUE LNGTH MSG    */ 01146000
*                                                                  0350 01147000
*   /*****************************************************************/ 01148000
*   /*                                                               */ 01149000
*   /* DETERMINE IF ALL DIGITS ARE VALID HEX DIGITS--BETWEEN ZERO AND*/ 01150000
*   /* 'F'.                                                          */ 01151000
*   /*                                                               */ 01152000
*   /*****************************************************************/ 01153000
*                                                                  0351 01154000
*   DO I=LNGTH TO 1 BY-1;           /* CHECK TO DETERMINE THAT       */ 01155000
         ST    @14,I(,TTABPTR)                                     0351 01156000
         B     @DE00351                                            0351 01157000
@DL00351 DS    0H                                                  0352 01158000
*     IF VAL1(I)=>'A'               /* ALL DIGITS ARE BETWEEN 'A'    */ 01159000
*         &VAL1(I)=<'F' THEN        /* AND 'F'                       */ 01160000
         L     @14,I(,TTABPTR)                                     0352 01161000
         L     @10,ADDRS3(,TTABPTR)                                0352 01162000
         ALR   @14,@10                                             0352 01163000
         AL    @14,@CF00473                                        0352 01164000
         CLI   VAL1(@14),C'A'                                      0352 01165000
         BL    @RF00352                                            0352 01166000
         L     @14,I(,TTABPTR)                                     0352 01167000
         ALR   @10,@14                                             0352 01168000
         AL    @10,@CF00473                                        0352 01169000
         CLI   VAL1(@10),C'F'                                      0352 01170000
         BNH   @RT00352                                            0352 01171000
*       GOTO AMDPEND;               /* OR                            */ 01172000
*     IF VAL1(I)<'0'                /* 0                             */ 01173000
*         |VAL1(I)>'9' THEN         /* AND 9                         */ 01174000
@RF00352 L     @14,I(,TTABPTR)                                     0354 01175000
         L     @10,ADDRS3(,TTABPTR)                                0354 01176000
         ALR   @14,@10                                             0354 01177000
         AL    @14,@CF00473                                        0354 01178000
         CLI   VAL1(@14),C'0'                                      0354 01179000
         BL    @RT00354                                            0354 01180000
         L     @14,I(,TTABPTR)                                     0354 01181000
         ALR   @10,@14                                             0354 01182000
         AL    @10,@CF00473                                        0354 01183000
         CLI   VAL1(@10),C'9'                                      0354 01184000
         BH    @RT00354                                            0354 01185000
*       GOTO AMDVMSG;               /* OTHERWISE, INVALID VALUE      */ 01186000
*AMDPEND:                                                          0356 01187000
*   END;                            /* DIGIT VALIDITY CHECK          */ 01188000
AMDPEND  SR    @14,@14                                             0356 01189000
         BCTR  @14,0                                               0356 01190000
         A     @14,I(,TTABPTR)                                     0356 01191000
         ST    @14,I(,TTABPTR)                                     0356 01192000
@DE00351 LTR   @14,@14                                             0356 01193000
         BP    @DL00351                                            0356 01194000
*AMDPSIOD:                                                         0357 01195000
*   CALL AMDHEX;                    /* CNVT VALUE TO BINARY          */ 01196000
AMDPSIOD BAL   @14,AMDHEX                                          0357 01197000
*   IF CSIO='0'B THEN               /* IF SIO NOT BEING PROCESSED    */ 01198000
         TM    CSIO(TTABPTR),B'00000001'                           0358 01199000
         BZ    @RT00358                                            0358 01200000
*     GOTO AMDPSIOE;                /* SET UP POINTERS FOR IO        */ 01201000
*   SORTPTR=SIOCRPTR;               /* CURRENT SIO DEV POINTER       */ 01202000
         MVC   SORTPTR(4,TTABPTR),SIOCRPTR(TTABPTR)                0360 01203000
*   SAVETAB=SVTABX;                 /* INIT BEG ADDRS TO SIO TAB     */ 01204000
         MVC   SAVETAB(4,TTABPTR),SVTABX                           0361 01205000
*   SRTTABPT=SRTBPTX;               /* INIT TO SIO PLACE KEEPER      */ 01206000
         MVC   SRTTABPT(4,TTABPTR),SRTBPTX                         0362 01207000
*   LASTPTR=LSTPTRX;                /* INIT TO SIO END ADDRS         */ 01208000
         MVC   LASTPTR(4),LSTPTRX                                  0363 01209000
*AMDPSIOF:                                                         0364 01210000
*   IF SRTTABPT=LASTPTR THEN        /* Q/AT END OF TABLE             */ 01211000
AMDPSIOF L     @14,SRTTABPT(,TTABPTR)                              0364 01212000
         C     @14,LASTPTR                                         0364 01213000
         BE    @RT00364                                            0364 01214000
*     GOTO AMDUMSG;                 /* YES--TOO MANY VALUES MSG      */ 01215000
*   IF SRTTABPT=SORTPTR THEN        /* Q/AT CURRENT SLOT             */ 01216000
         C     @14,SORTPTR(,TTABPTR)                               0366 01217000
         BE    @RT00366                                            0366 01218000
*     GOTO AMDPIO1;                 /* YES                           */ 01219000
*   GOTO AMDPIO2;                   /* NO--CHECK VALUE               */ 01220000
         B     AMDPIO2                                             0368 01221000
*AMDPSIOE:                                                         0369 01222000
*   SORTPTR=IOCRPTR;                /* CURRENT IO DEV POINTER        */ 01223000
AMDPSIOE MVC   SORTPTR(4,TTABPTR),IOCRPTR(TTABPTR)                 0369 01224000
*   SAVETAB=SVTABY;                 /* INIT BEG ADDRS TO IO TAB      */ 01225000
         MVC   SAVETAB(4,TTABPTR),SVTABY                           0370 01226000
*   SRTTABPT=SRTBPTY;               /* INIT TO IO PLACE KEEPER       */ 01227000
         MVC   SRTTABPT(4,TTABPTR),SRTBPTY                         0371 01228000
*   LASTPTR=LSTPTRY;                /* INIT TO IO END ADDRS          */ 01229000
         MVC   LASTPTR(4),LSTPTRY                                  0372 01230000
*   GOTO AMDPSIOF;                  /* BEGIN TABLE SEARCH            */ 01231000
         B     AMDPSIOF                                            0373 01232000
*AMDPIO1:                                                          0374 01233000
*   IF CSIO='1'B THEN               /* IF PROCESSING SIO,            */ 01234000
AMDPIO1  TM    CSIO(TTABPTR),B'00000001'                           0374 01235000
         BO    @RT00374                                            0374 01236000
*     GOTO AMDPIO4;                 /* CHK IF NOW ON SIO OR IO       */ 01237000
*AMDPIO3:                                                          0376 01238000
*   IOCRPTR=IOCRPTR+2;              /* NOW AT NEXT IO SLOT           */ 01239000
AMDPIO3  LA    @14,2                                               0376 01240000
         A     @14,IOCRPTR(,TTABPTR)                               0376 01241000
         ST    @14,IOCRPTR(,TTABPTR)                               0376 01242000
*   DEV=COMP8(3:4);                 /* MOVE IN CONVERTED VALUE       */ 01243000
         L     @14,SRTTABPT(,TTABPTR)                              0377 01244000
         MVC   DEV(2,@14),COMP8+2(TTABPTR)                         0377 01245000
*   GOTO AMDPARN;                   /* CHECK FOR ADDITIONAL VALS     */ 01246000
         B     AMDPARN                                             0378 01247000
*AMDPIO2:                                                          0379 01248000
*   IF DEV=COMP8(3:4)               /* IF EQUAL COMPARE,             */ 01249000
*     THEN                          /* THEN                          */ 01250000
AMDPIO2  L     @14,SRTTABPT(,TTABPTR)                              0379 01251000
         CLC   DEV(2,@14),COMP8+2(TTABPTR)                         0379 01252000
         BE    @RT00379                                            0379 01253000
*     GOTO AMDPARN;                 /* CHECK FOR ADDITIONAL VALS     */ 01254000
*   SRTTABPT=SRTTABPT+2;            /* SEE IF EQUAL COMPARE WITH NEXT   01255000
*                                      VALUE IN TABLE                */ 01256000
         AH    @14,@CH00078                                        0381 01257000
         ST    @14,SRTTABPT(,TTABPTR)                              0381 01258000
*   GOTO AMDPSIOF;                  /* CONTINUE TABLE SEARCH         */ 01259000
         B     AMDPSIOF                                            0382 01260000
*AMDPIO4:                                                          0383 01261000
*   IF SAVETAB=ADDR(DVADS2)THEN     /* NOW PROCESSING IO             */ 01262000
AMDPIO4  LA    @14,DVADS2(,AEDITCBR)                               0383 01263000
         C     @14,SAVETAB(,TTABPTR)                               0383 01264000
         BE    @RT00383                                            0383 01265000
*     GOTO AMDPIO3;                 /* INSERT VALUE IN IO TABLE      */ 01266000
*   SIOCRPTR=SIOCRPTR+2;            /* NOW AT NEXT SIO SLOT          */ 01267000
         LA    @14,2                                               0385 01268000
         A     @14,SIOCRPTR(,TTABPTR)                              0385 01269000
         ST    @14,SIOCRPTR(,TTABPTR)                              0385 01270000
*   DEV=COMP8(3:4);                 /* MOVE IN CONVERTED VALUE       */ 01271000
         L     @14,SRTTABPT(,TTABPTR)                              0386 01272000
         MVC   DEV(2,@14),COMP8+2(TTABPTR)                         0386 01273000
*   IF EQUIND='1'B THEN             /* IF PROCESSING IO TABLE TOO    */ 01274000
         TM    EQUIND(TTABPTR),B'00010000'                         0387 01275000
         BO    @RT00387                                            0387 01276000
*     GOTO AMDPSIOE;                /* SET UP IO POINTERS            */ 01277000
*   GOTO AMDPARN;                   /* CHECK FOR ADDITIONAL VALS     */ 01278000
*                                                                  0389 01279000
         B     AMDPARN                                             0389 01280000
*   /*****************************************************************/ 01281000
*   /*                                                               */ 01282000
*   /* THIS SUBROUTINE PROCESSES THE SVC KEYWORD.                    */ 01283000
*   /*                                                               */ 01284000
*   /*****************************************************************/ 01285000
*                                                                  0390 01286000
*AMDPSVC:                                                          0390 01287000
*   ENTRY;                          /* ENTRY POINT                   */ 01288000
@EP00390 DS    0H                                                  0391 01289000
*   IF SYS='1'B                     /* IF AMDPRTAB SYS FLAG,         */ 01290000
*       |SYST='1'B                  /* OR TEMPTAB SYS FLAG,          */ 01291000
*       |ALLV='1'B                  /* OR AMDPRTAB SVC ALL FLAG,     */ 01292000
*       |ALLVT='1'B THEN            /* OR TTAB SVC ALL FLAG IS ON    */ 01293000
         TM    SYS(AEDITCBR),B'00100000'                           0391 01294000
         BO    @RT00391                                            0391 01295000
         TM    SYST(TTABPTR),B'00100000'                           0391 01296000
         BO    @RT00391                                            0391 01297000
         TM    ALLV(AEDITCBR),B'10000000'                          0391 01298000
         BO    @RT00391                                            0391 01299000
         TM    ALLVT(TTABPTR),B'10000000'                          0391 01300000
         BO    @RT00391                                            0391 01301000
*     GOTO AMDPEOCL;                /* SEARCH FOR NEXT KEYWORD       */ 01302000
*   IF NOVAL='1'B THEN              /* IF NO VALUES FOLLOW,          */ 01303000
         TM    NOVAL(TTABPTR),B'00100000'                          0393 01304000
         BNO   @RF00393                                            0393 01305000
*     DO;                           /* DO THE FOLLOWING              */ 01306000
*       ALLVT='1'B;                 /* 'SVC=ALL' INDICATED--SET SW   */ 01307000
         OI    ALLVT(TTABPTR),B'10000000'                          0395 01308000
*       GOTO AMDPCLCL;              /* POSITION TO NEXT KEYWORD      */ 01309000
         B     AMDPCLCL                                            0396 01310000
*     END;                                                         0397 01311000
*AMDPSVC1:                                                         0398 01312000
*   SELVT='1'B;                     /* SET ON SVC SELECTIVE SW       */ 01313000
@RF00393 DS    0H                                                  0398 01314000
AMDPSVC1 OI    SELVT(TTABPTR),B'01000000'                          0398 01315000
*AMDPSVC2:                                                         0399 01316000
*   IF SCNCHAR=','                  /* IF DELIMITER OF COMMA         */ 01317000
*       |SCNCHAR=' '                /* OR BLANK                      */ 01318000
*       |SCNCHAR=')' THEN           /* OF RIGHT PAREN FOUND, HAVE    */ 01319000
AMDPSVC2 L     @14,SCNPTR(,TTABPTR)                                0399 01320000
         CLI   SCNCHAR(@14),C','                                   0399 01321000
         BE    @RT00399                                            0399 01322000
         CLI   SCNCHAR(@14),C' '                                   0399 01323000
         BE    @RT00399                                            0399 01324000
         CLI   SCNCHAR(@14),C')'                                   0399 01325000
         BE    @RT00399                                            0399 01326000
*     GOTO AMDPSVC3;                /* DELIMITED VALUE               */ 01327000
*   IF SCNPTR=EOCADDR               /* IF LOGICAL END OF STMT        */ 01328000
*     THEN                          /* FOUND, THEN                   */ 01329000
         C     @14,EOCADDR(,TTABPTR)                               0401 01330000
         BE    @RT00401                                            0401 01331000
*     GOTO AMDPSVC3;                /* CONTINUE PROCESSING           */ 01332000
*   SCNPTR=SCNPTR+1;                /* POSITION BUFFER POINTER       */ 01333000
         AH    @14,@CH00046                                        0403 01334000
         ST    @14,SCNPTR(,TTABPTR)                                0403 01335000
*   GOTO AMDPSVC2;                  /* RESUME SCAN FOR DELIMITER     */ 01336000
         B     AMDPSVC2                                            0404 01337000
*AMDPSVC3:                                                         0405 01338000
*   LNGTH=SCNPTR-ADDRS3;            /* CALCULATE VALUE LENGTH        */ 01339000
AMDPSVC3 L     @14,SCNPTR(,TTABPTR)                                0405 01340000
         S     @14,ADDRS3(,TTABPTR)                                0405 01341000
         ST    @14,LNGTH(,TTABPTR)                                 0405 01342000
*   IF LNGTH>3 THEN                                                0406 01343000
         CH    @14,@CH00169                                        0406 01344000
         BH    @RT00406                                            0406 01345000
*     GOTO AMDVLN1;                 /* INVALID VALUE LENGTH MSG      */ 01346000
*   IF LNGTH<1 THEN                 /* IF LENGTH<1, OUTPUT           */ 01347000
         LTR   @14,@14                                             0408 01348000
         BNP   @RT00408                                            0408 01349000
*     GOTO AMDELIM1;                /* INVALID DELIMITER MSG         */ 01350000
*                                                                  0409 01351000
*   /*****************************************************************/ 01352000
*   /*                                                               */ 01353000
*   /* CHECK TO DETERMINE THAT ALL DIGITS ARE BETWEEN 0 AND 9.       */ 01354000
*   /*                                                               */ 01355000
*   /*****************************************************************/ 01356000
*                                                                  0410 01357000
*   DO I=LNGTH TO 1 BY-1;           /* CHECK ALL DIGITS              */ 01358000
         ST    @14,I(,TTABPTR)                                     0410 01359000
         B     @DE00410                                            0410 01360000
@DL00410 DS    0H                                                  0411 01361000
*     IF VAL1(I)<'0'                /* IF DIGIT LOWER THAN 0         */ 01362000
*         |VAL1(I)>'9' THEN         /* OR HIGHER THAN 9,             */ 01363000
         L     @14,I(,TTABPTR)                                     0411 01364000
         L     @10,ADDRS3(,TTABPTR)                                0411 01365000
         ALR   @14,@10                                             0411 01366000
         AL    @14,@CF00473                                        0411 01367000
         CLI   VAL1(@14),C'0'                                      0411 01368000
         BL    @RT00411                                            0411 01369000
         L     @14,I(,TTABPTR)                                     0411 01370000
         ALR   @10,@14                                             0411 01371000
         AL    @10,@CF00473                                        0411 01372000
         CLI   VAL1(@10),C'9'                                      0411 01373000
         BH    @RT00411                                            0411 01374000
*       GOTO AMDVMSG;               /* OUTPUT INVALID VALUE MSG      */ 01375000
*   END;                            /* PROCEED TO NEXT DIGIT         */ 01376000
         SR    @14,@14                                             0413 01377000
         BCTR  @14,0                                               0413 01378000
         A     @14,I(,TTABPTR)                                     0413 01379000
         ST    @14,I(,TTABPTR)                                     0413 01380000
@DE00410 LTR   @14,@14                                             0413 01381000
         BP    @DL00410                                            0413 01382000
*   CALL AMDCVB;                    /* CONVERT SVC NUM TO BINARY     */ 01383000
         BAL   @14,AMDCVB                                          0414 01384000
*   COMP4=COMP4+1;                  /* ALLOW FOR ZERO INDEXING       */ 01385000
         LA    @14,1                                               0415 01386000
         L     @10,COMP4(,TTABPTR)                                 0415 01387000
         ALR   @10,@14                                             0415 01388000
         ST    @10,COMP4(,TTABPTR)                                 0415 01389000
*   IF COMP4>256                    /* IF NUMBER > 256               */ 01390000
*       |COMP4<1 THEN               /* OR NUMBER <ONE, THEN          */ 01391000
         CH    @10,@CH00121                                        0416 01392000
         BH    @RT00416                                            0416 01393000
         CR    @10,@14                                             0416 01394000
         BL    @RT00416                                            0416 01395000
*     GOTO AMDVMSG;                 /* OUTPUT INVALID VALUE MSG      */ 01396000
*                                                                  0417 01397000
*   /*****************************************************************/ 01398000
*   /*                                                               */ 01399000
*   /* SET ON APPROPRIATE SVC BIT IN STRING                          */ 01400000
*   /*                                                               */ 01401000
*   /*****************************************************************/ 01402000
*                                                                  0418 01403000
*   I=COMP4/8;                      /* CALCULATE BYTE                */ 01404000
         SRL   @10,3                                               0418 01405000
         ST    @10,I(,TTABPTR)                                     0418 01406000
*AMDSVCSR:                                                         0419 01407000
*   J=COMP4//8;                     /* CALCULATE BIT IN BYTE         */ 01408000
AMDSVCSR L     @14,COMP4(,TTABPTR)                                 0419 01409000
         N     @14,@CF00035                                        0419 01410000
         ST    @14,J(,TTABPTR)                                     0419 01411000
*   IF J=0 THEN                     /* IF NO REMAINDER, THEN         */ 01412000
         LTR   @14,@14                                             0420 01413000
         BNZ   @RF00420                                            0420 01414000
*     J=8;                          /* SET ON LAST BIT IN BYTE       */ 01415000
         MVC   J(4,TTABPTR),@CF00033                               0421 01416000
*   ELSE                            /* IF REMAINDER,                 */ 01417000
*     I=I+1;                        /* ARE INTO NEXT BYTE            */ 01418000
         B     @RC00420                                            0422 01419000
@RF00420 LA    @14,1                                               0422 01420000
         A     @14,I(,TTABPTR)                                     0422 01421000
         ST    @14,I(,TTABPTR)                                     0422 01422000
*   STRING(I)=STRING(I)             /* SET ON APPROPRIATE SVC        */ 01423000
*       |MASKS(J);                  /* BIT                           */ 01424000
@RC00420 L     @14,I(,TTABPTR)                                     0423 01425000
         ALR   @14,TTABPTR                                         0423 01426000
         L     @10,J(,TTABPTR)                                     0423 01427000
         ALR   @10,TTABPTR                                         0423 01428000
         OC    STRING-1(1,@14),MASKS-1(@10)                        0423 01429000
*   GOTO AMDPARN;                   /* CHECK FOR MORE VALUES         */ 01430000
*                                                                  0424 01431000
         B     AMDPARN                                             0424 01432000
*   /*****************************************************************/ 01433000
*   /*                                                               */ 01434000
*   /* THE FOLLOWING SUBROUTINE PROCESSES THE PI KEYWORD AND VALUES. */ 01435000
*   /*                                                               */ 01436000
*   /*****************************************************************/ 01437000
*                                                                  0425 01438000
*AMDPPGM:                                                          0425 01439000
*   ENTRY;                          /* ENTRY POINT                   */ 01440000
@EP00425 DS    0H                                                  0426 01441000
*   IF SYS='1'B                     /* IF AMDPRTAB SYS FLAG,         */ 01442000
*       |SYST='1'B                  /* OR TEMPTAB SYS FLAG,          */ 01443000
*       |ALLP='1'B                  /* OR AMDPRTAB PI ALL FLAG,      */ 01444000
*       |ALLPT='1'B THEN            /* OR TTAB PI ALL FLAG IS ON,    */ 01445000
         TM    SYS(AEDITCBR),B'00100000'                           0426 01446000
         BO    @RT00426                                            0426 01447000
         TM    SYST(TTABPTR),B'00100000'                           0426 01448000
         BO    @RT00426                                            0426 01449000
         TM    ALLP(AEDITCBR),B'10000000'                          0426 01450000
         BO    @RT00426                                            0426 01451000
         TM    ALLPT(TTABPTR),B'10000000'                          0426 01452000
         BO    @RT00426                                            0426 01453000
*     GOTO AMDPEOCL;                /* SEARCH FOR NEXT KEYWORD       */ 01454000
*   IF NOVAL='1'B THEN              /* IF NO VALUES FOLLOW, THEN     */ 01455000
         TM    NOVAL(TTABPTR),B'00100000'                          0428 01456000
         BNO   @RF00428                                            0428 01457000
*     DO;                           /* DO THE FOLLOWING              */ 01458000
*       ALLPT='1'B;                 /* ALL IS INDICATED              */ 01459000
         OI    ALLPT(TTABPTR),B'10000000'                          0430 01460000
*       GOTO AMDPCLCL;              /* PREPARE FOR NEXT KEYWORD      */ 01461000
         B     AMDPCLCL                                            0431 01462000
*     END;                          /* NO VALUES SPECIFIED           */ 01463000
*   SELPT='1'B;                     /* SET ON PI SELECTIVE IND       */ 01464000
@RF00428 OI    SELPT(TTABPTR),B'01000000'                          0433 01465000
*AMDPPGM2:                                                         0434 01466000
*   IF SCNCHAR=','                  /* IF DELIMITER OF COMMA         */ 01467000
*       |SCNCHAR=' '                /* OR BLANK                      */ 01468000
*       |SCNCHAR=')' THEN           /* OR RIGHT PAREN FOUND, HAVE    */ 01469000
AMDPPGM2 L     @14,SCNPTR(,TTABPTR)                                0434 01470000
         CLI   SCNCHAR(@14),C','                                   0434 01471000
         BE    @RT00434                                            0434 01472000
         CLI   SCNCHAR(@14),C' '                                   0434 01473000
         BE    @RT00434                                            0434 01474000
         CLI   SCNCHAR(@14),C')'                                   0434 01475000
         BE    @RT00434                                            0434 01476000
*     GOTO AMDPPGM3;                /* DELIMITED VALUE               */ 01477000
*   IF SCNPTR=EOCADDR               /* IF LOGICAL END OF STMT        */ 01478000
*     THEN                          /* FOUND, THEN                   */ 01479000
         C     @14,EOCADDR(,TTABPTR)                               0436 01480000
         BE    @RT00436                                            0436 01481000
*     GOTO AMDPPGM3;                /* CONTINUE PROCESSING           */ 01482000
*   SCNPTR=SCNPTR+1;                /* POSITION BUFFER POINTER       */ 01483000
         AH    @14,@CH00046                                        0438 01484000
         ST    @14,SCNPTR(,TTABPTR)                                0438 01485000
*   GOTO AMDPPGM2;                  /* RESUME SCAN FOR DELIMITER     */ 01486000
         B     AMDPPGM2                                            0439 01487000
*AMDPPGM3:                                                         0440 01488000
*   LNGTH=SCNPTR-ADDRS3;            /* CALCULATE LENGTH              */ 01489000
AMDPPGM3 L     @14,SCNPTR(,TTABPTR)                                0440 01490000
         S     @14,ADDRS3(,TTABPTR)                                0440 01491000
         ST    @14,LNGTH(,TTABPTR)                                 0440 01492000
*   IF LNGTH>2 THEN                 /* IF LNGTH>TWO, OUTPUT          */ 01493000
         CH    @14,@CH00078                                        0441 01494000
         BH    @RT00441                                            0441 01495000
*     GOTO AMDVLN1;                 /* INVALID VALUE LENGTH MSG      */ 01496000
*   IF LNGTH<1 THEN                 /* IF LENGTH<ONE,OUTPUT          */ 01497000
         LTR   @14,@14                                             0443 01498000
         BNP   @RT00443                                            0443 01499000
*     GOTO AMDELIM1;                /* INVALID DELIMITER MSG         */ 01500000
*                                                                  0444 01501000
*   /*****************************************************************/ 01502000
*   /*                                                               */ 01503000
*   /* CHECK TO DETERMINE THAT ALL DIGITS ARE BETWEEN 0 AND 9.       */ 01504000
*   /*                                                               */ 01505000
*   /*****************************************************************/ 01506000
*                                                                  0445 01507000
*   DO I=LNGTH TO 1 BY-1;           /* CHECK ALL DIGITS              */ 01508000
         ST    @14,I(,TTABPTR)                                     0445 01509000
         B     @DE00445                                            0445 01510000
@DL00445 DS    0H                                                  0446 01511000
*     IF VAL1(I)<'0'                /* IF DIGIT LOWER THAN 0         */ 01512000
*         |VAL1(I)>'9' THEN         /* OR HIGHER THAN 9,             */ 01513000
         L     @14,I(,TTABPTR)                                     0446 01514000
         L     @10,ADDRS3(,TTABPTR)                                0446 01515000
         ALR   @14,@10                                             0446 01516000
         AL    @14,@CF00473                                        0446 01517000
         CLI   VAL1(@14),C'0'                                      0446 01518000
         BL    @RT00446                                            0446 01519000
         L     @14,I(,TTABPTR)                                     0446 01520000
         ALR   @10,@14                                             0446 01521000
         AL    @10,@CF00473                                        0446 01522000
         CLI   VAL1(@10),C'9'                                      0446 01523000
         BH    @RT00446                                            0446 01524000
*       GOTO AMDVMSG;               /* OUTPUT INVALID VALUE MSG      */ 01525000
*   END;                            /* PROCEED TO NEXT DIGIT         */ 01526000
         SR    @14,@14                                             0448 01527000
         BCTR  @14,0                                               0448 01528000
         A     @14,I(,TTABPTR)                                     0448 01529000
         ST    @14,I(,TTABPTR)                                     0448 01530000
@DE00445 LTR   @14,@14                                             0448 01531000
         BP    @DL00445                                            0448 01532000
*   CALL AMDCVB;                    /* CONVERT PI CODE TO BINARY     */ 01533000
         BAL   @14,AMDCVB                                          0449 01534000
*   IF COMP4=17 THEN                                               0450 01535000
         CLC   COMP4(4,TTABPTR),@CF00564                           0450 01536000
         BNE   @RF00450                                            0450 01537000
*     DO;                           /* IF VALUE = PI 17              */ 01538000
*       PISTRB(1)='1'B;             /* SET ON BIT IN AMDSCNTB        */ 01539000
         OI    PISTRB(TTABPTR),B'10000000'                         0452 01540000
*       GOTO AMDPARN;               /* GO CHECK FOR MORE VALUES      */ 01541000
         B     AMDPARN                                             0453 01542000
*     END;                                                         0454 01543000
*   IF COMP4=18 THEN                                               0455 01544000
@RF00450 CLC   COMP4(4,TTABPTR),@CF00565                           0455 01545000
         BNE   @RF00455                                            0455 01546000
*     DO;                           /* IF VALUE = PI 18              */ 01547000
*       PISTRB(2)='1'B;             /* SET ON BIT IN AMDSCNTB        */ 01548000
         OI    PISTRB(TTABPTR),B'01000000'                         0457 01549000
*       GOTO AMDPARN;               /* GO CHECK FOR MORE VALUES      */ 01550000
         B     AMDPARN                                             0458 01551000
*     END;                                                         0459 01552000
*   IF COMP4=19 THEN                                               0460 01553000
@RF00455 CLC   COMP4(4,TTABPTR),@CF00566                           0460 01554000
         BNE   @RF00460                                            0460 01555000
*     DO;                           /* IF VALUE = PI 19              */ 01556000
*       PISTRB(3)='1'B;             /* SET ON BIT IN AMDSCNTB        */ 01557000
         OI    PISTRB(TTABPTR),B'00100000'                         0462 01558000
*       GOTO AMDPARN;               /* CHECK FOR MORE VALUES         */ 01559000
         B     AMDPARN                                             0463 01560000
*     END;                                                         0464 01561000
*   IF COMP4>16                     /* IF VALUE NOT WITHIN RANGE     */ 01562000
*       |COMP4<1 THEN               /* OF 1 AND 16, THEN       Y02014*/ 01563000
@RF00460 L     @14,COMP4(,TTABPTR)                                 0465 01564000
         CL    @14,@CF00139                                        0465 01565000
         BH    @RT00465                                            0465 01566000
         CL    @14,@CF00046                                        0465 01567000
         BL    @RT00465                                            0465 01568000
*     GOTO AMDVMSG;                 /* OUTPUT INVALID VALUE MSG      */ 01569000
*                                                                  0466 01570000
*   /*****************************************************************/ 01571000
*   /*                                                               */ 01572000
*   /* SET ON APPROPRIATE PI BIT IN STRING                           */ 01573000
*   /*                                                               */ 01574000
*   /*****************************************************************/ 01575000
*                                                                  0467 01576000
*   I=COMP4/8;                      /* CALCULATE BYTE                */ 01577000
         SRL   @14,3                                               0467 01578000
         ST    @14,I(,TTABPTR)                                     0467 01579000
*AMDPISTR:                                                         0468 01580000
*   J=COMP4//8;                     /* CALCULATE BIT IN BYTE         */ 01581000
AMDPISTR L     @14,COMP4(,TTABPTR)                                 0468 01582000
         N     @14,@CF00035                                        0468 01583000
         ST    @14,J(,TTABPTR)                                     0468 01584000
*   IF J=0 THEN                     /* IF NO REMAINDER, THEN         */ 01585000
         LTR   @14,@14                                             0469 01586000
         BNZ   @RF00469                                            0469 01587000
*     J=8;                          /* SET ON LAST BIT IN BYTE       */ 01588000
         MVC   J(4,TTABPTR),@CF00033                               0470 01589000
*   ELSE                            /* IF REMAINDER,                 */ 01590000
*     I=I+1;                        /* ARE INTO NEXT BYTE            */ 01591000
         B     @RC00469                                            0471 01592000
@RF00469 LA    @14,1                                               0471 01593000
         A     @14,I(,TTABPTR)                                     0471 01594000
         ST    @14,I(,TTABPTR)                                     0471 01595000
*   STRING1(I)=STRING1(I)           /* SET ON APPROPRIATE PI         */ 01596000
*       |MASKS(J);                  /* BIT                           */ 01597000
@RC00469 L     @14,I(,TTABPTR)                                     0472 01598000
         ALR   @14,TTABPTR                                         0472 01599000
         L     @10,J(,TTABPTR)                                     0472 01600000
         ALR   @10,TTABPTR                                         0472 01601000
         OC    STRING1-1(1,@14),MASKS-1(@10)                       0472 01602000
*   GOTO AMDPARN;                   /* CHECK FOR MORE VALUES         */ 01603000
*                                                                  0473 01604000
         B     AMDPARN                                             0473 01605000
*   /*****************************************************************/ 01606000
*   /*                                                               */ 01607000
*   /* THE FOLLOWING SUBROUTINE PROCESSES THE SYS KEYWORD.           */ 01608000
*   /*                                                               */ 01609000
*   /*****************************************************************/ 01610000
*                                                                  0474 01611000
*AMDPSYS:                                                          0474 01612000
*   ENTRY;                          /* ENTRY POINT                   */ 01613000
@EP00474 DS    0H                                                  0475 01614000
*   SYST='1'B;                      /* SET ON SYS BIT IN TEMPTAB     */ 01615000
*   SYSMT='1'B;                     /* SET ON TEMPTAB SYSM BIT       */ 01616000
         OI    SYST(TTABPTR),B'00110000'                           0476 01617000
*   ALLST='1'B;                     /* SET ON TEMPTAB SIO ALL BIT    */ 01618000
         OI    ALLST(TTABPTR),B'10000000'                          0477 01619000
*   ALLIT='1'B;                     /* SET ON TEMPTAB IO ALL BIT     */ 01620000
         OI    ALLIT(TTABPTR),B'10000000'                          0478 01621000
*   ALLVT='1'B;                     /* SET ON TEMPTAB SVC ALL BIT    */ 01622000
         OI    ALLVT(TTABPTR),B'10000000'                          0479 01623000
*   ALLPT='1'B;                     /* SET ON TEMPTAB PI ALL BIT     */ 01624000
         OI    ALLPT(TTABPTR),B'10000000'                          0480 01625000
*   EXTT='1'B;                      /* SET ON TEMPTAB EXT BIT        */ 01626000
*   DSPT='1'B;                      /* SET ON TEMPTAB DSP BIT        */ 01627000
*   RNIOT='1'B;                     /* SET TEMPTAB RNIO        Y02014*/ 01628000
*   SRMT='1'B;                      /* SET TEMPTAB SRM BIT     Y02014*/ 01629000
*   RRT='1'B;                       /* SET TEMPTAB RR BIT      Y02014*/ 01630000
         OI    EXTT(TTABPTR),B'11001110'                           0485 01631000
*   GOTO AMDPEOCL;                  /* SEARCH FOR NEXT KEYWORD       */ 01632000
*                                                                  0486 01633000
         B     AMDPEOCL                                            0486 01634000
*   /*****************************************************************/ 01635000
*   /*                                                               */ 01636000
*   /* THE FOLLOWING SBROUTINE PROCESSES THE EXT KEYWORD.            */ 01637000
*   /*                                                               */ 01638000
*   /*****************************************************************/ 01639000
*                                                                  0487 01640000
*AMDPEXT:                                                          0487 01641000
*   ENTRY;                          /* ENTRY POINT                   */ 01642000
@EP00487 DS    0H                                                  0488 01643000
*   EXTT='1'B;                      /* SET ON TEMPTAB EXT BIT        */ 01644000
         OI    EXTT(TTABPTR),B'10000000'                           0488 01645000
*   GOTO AMDPEOCL;                  /* SEARCH FOR NEXT KEYWORD       */ 01646000
*                                                                  0489 01647000
         B     AMDPEOCL                                            0489 01648000
*   /*****************************************************************/ 01649000
*   /*                                                               */ 01650000
*   /* THE FOLLOWING SUBROUTINE PROCESSES THE DSP KEYWORD.           */ 01651000
*   /*                                                               */ 01652000
*   /*****************************************************************/ 01653000
*                                                                  0490 01654000
*AMDPDSP:                                                          0490 01655000
*   ENTRY;                          /* ENTRY POINT                   */ 01656000
@EP00490 DS    0H                                                  0491 01657000
*   DSPT='1'B;                      /* SET ON TEMPTAB DSP BIT        */ 01658000
         OI    DSPT(TTABPTR),B'01000000'                           0491 01659000
*   GOTO AMDPEOCL;                  /* SEARCH FOR NEXT KEYWORD       */ 01660000
*                                                                  0492 01661000
         B     AMDPEOCL                                            0492 01662000
*   /*****************************************************************/ 01663000
*   /*                                                               */ 01664000
*   /* THE FOLLOWING SUBROUTINE PROCESSES THE RNIO KEYWD       Y02014*/ 01665000
*   /*                                                               */ 01666000
*   /*****************************************************************/ 01667000
*                                                                  0493 01668000
*AMDPRNIO:                                                         0493 01669000
*   ENTRY;                          /* ENTRY POINT             Y02014*/ 01670000
@EP00493 DS    0H                                                  0494 01671000
*   RNIOT='1'B;                     /* SET TEMPTAB RNIO        Y02014*/ 01672000
         OI    RNIOT(TTABPTR),B'00001000'                          0494 01673000
*   GOTO AMDPEOCL;                  /* SRCH FOR NEXT KEYWD     Y02014*/ 01674000
*                                                                  0495 01675000
         B     AMDPEOCL                                            0495 01676000
*   /*****************************************************************/ 01677000
*   /*                                                               */ 01678000
*   /* THE FOLLOWING SUBROUTINE PROCESSES THE SRM KEYWD        Y02014*/ 01679000
*   /*                                                               */ 01680000
*   /*****************************************************************/ 01681000
*                                                                  0496 01682000
*AMDPSRM:                                                          0496 01683000
*   ENTRY;                          /* ENTRY POINT             Y02014*/ 01684000
@EP00496 DS    0H                                                  0497 01685000
*   SRMT='1'B;                      /* SET ON TEMPTAB SRM      Y02014*/ 01686000
         OI    SRMT(TTABPTR),B'00000100'                           0497 01687000
*   GOTO AMDPEOCL;                  /* SRCH FOR NEXT KEYWD     Y02014*/ 01688000
*                                                                  0498 01689000
         B     AMDPEOCL                                            0498 01690000
*   /*****************************************************************/ 01691000
*   /*                                                               */ 01692000
*   /* THE FOLLOWING SUBROUTINE PROCESSES THE RR KEYWD         Y02014*/ 01693000
*   /*                                                               */ 01694000
*   /*****************************************************************/ 01695000
*                                                                  0499 01696000
*AMDPRR:                                                           0499 01697000
*   ENTRY;                          /* ENTRY POINT             Y02014*/ 01698000
@EP00499 DS    0H                                                  0500 01699000
*   RRT='1'B;                       /* SET TEMPTAB RR BIT      Y02014*/ 01700000
         OI    RRT(TTABPTR),B'00000010'                            0500 01701000
*   GOTO AMDPEOCL;                  /* SRCH FOR NEXT KEYWD     Y02014*/ 01702000
*                                                                  0501 01703000
         B     AMDPEOCL                                            0501 01704000
*   /*****************************************************************/ 01705000
*   /*                                                               */ 01706000
*   /* THE FOLLOWING SUBROUTINE PROCESSES THE EOF KEYWD        Y02014*/ 01707000
*   /*                                                               */ 01708000
*   /*****************************************************************/ 01709000
*                                                                  0502 01710000
*AMDPEOF:                                                          0502 01711000
*   ENTRY;                          /* ENTRY POINT             Y02014*/ 01712000
@EP00502 DS    0H                                                  0503 01713000
*   EOFT='1'B;                      /* SET TEMPTAB EOF BIT     Y02014*/ 01714000
         OI    EOFT(TTABPTR),B'00000001'                           0503 01715000
*   GOTO AMDPEOCL;                  /* SRCH FOR NEXT KEYWD     Y02014*/ 01716000
*                                                                  0504 01717000
         B     AMDPEOCL                                            0504 01718000
*   /*****************************************************************/ 01719000
*   /*                                                               */ 01720000
*   /* THE FOLLOWING SUBROUTINE CONVERTS PRINTABLE DECIMAL TO BINARY.*/ 01721000
*   /*                                                               */ 01722000
*   /*****************************************************************/ 01723000
*                                                                  0505 01724000
*AMDPRCVB:                                                         0505 01725000
*   ENTRY;                          /* CVB EXTERNAL ROUTINE          */ 01726000
@EP00505 DS    0H                                                  0506 01727000
*   CALL AMDCVB;                    /* CALL INTERNAL ROUTINE         */ 01728000
         BAL   @14,AMDCVB                                          0506 01729000
*   RETURN;                         /* RETURN TO CALLER              */ 01730000
*                                                                  0507 01731000
         B     @EL00001                                            0507 01732000
*   /*****************************************************************/ 01733000
*   /*                                                               */ 01734000
*   /* THE FOLLOWING SUBROUTINE CONVERTS PRINTABLE HEX TO BINARY.    */ 01735000
*   /*                                                               */ 01736000
*   /*****************************************************************/ 01737000
*                                                                  0508 01738000
*AMDPRHX:                                                          0508 01739000
*   ENTRY;                          /* ENTRY POINT                   */ 01740000
@EP00508 DS    0H                                                  0509 01741000
*   CALL AMDHEX;                    /* CALL INTERNAL ROUTINE         */ 01742000
         BAL   @14,AMDHEX                                          0509 01743000
*   RETURN;                         /* RETURN TO CALLER              */ 01744000
*                                                                  0510 01745000
         B     @EL00001                                            0510 01746000
*   /*****************************************************************/ 01747000
*   /*                                                               */ 01748000
*   /* INTERNAL PROCEDURE                                            */ 01749000
*   /*                                                               */ 01750000
*   /*****************************************************************/ 01751000
*                                                                  0511 01752000
*AMDCVB:                                                           0511 01753000
*   PROC;                           /* INTERNAL PROCEDURE            */ 01754000
AMDCVB   STM   @14,@12,@SA00002                                    0511 01755000
*   RFY                                                            0512 01756000
*    (REG4,                         /* WORK REGISTER           Y02014*/ 01757000
*     REG5,                         /* WORK REGISTER                 */ 01758000
*     AEDITCBR,                     /* PTR TO AMDPRTAB               */ 01759000
*     TTABPTR,                      /* PTR TO AMDSCNTB               */ 01760000
*     REG6,                         /* WORK REGISTER                 */ 01761000
*     REGPT)RSTD;                   /* POINTER TO AMDPRCOM     Y02014*/ 01762000
*   REG6=LNGTH-1;                   /* OBTAIN VALUE LENGTH           */ 01763000
         L     REG6,LNGTH(,TTABPTR)                                0513 01764000
         BCTR  REG6,0                                              0513 01765000
*   REG4=ADDRS3;                    /* OBTAIN ADDRS OF VALUE STRT    */ 01766000
         L     REG4,ADDRS3(,TTABPTR)                               0514 01767000
*   REG5=ADDR(DBLWORD);             /* OBTAIN ADDRS OF RECEIVER      */ 01768000
         LA    REG5,DBLWORD(,TTABPTR)                              0515 01769000
*   GENERATE;                                                      0516 01770000
*                                       /* CNVRT FROM DEC TO BIN     */ 01771000
         EX   R6,PACK3                  EXECUTE PACK INSTRUCTION        01772000
         B    AMDPCVB1                  CONVERT RESULT TO BINARY        01773000
PACK3    PACK  0(8,R5),0(0,R4)          PACK DIGITS                     01774000
AMDPCVB1 CVB   R6,0(R5)              RESULT CONVERTED TO BINARY         01775000
*   COMP4=REG6;                     /* SAVE RESULT                   */ 01776000
         ST    REG6,COMP4(,TTABPTR)                                0517 01777000
*   RETURN;                         /* RETURN TO CALLER              */ 01778000
@EL00002 DS    0H                                                  0518 01779000
@EF00002 DS    0H                                                  0518 01780000
@ER00002 LM    @14,@12,@SA00002                                    0518 01781000
         BR    @14                                                 0518 01782000
*   END AMDCVB;                     /* END OF INTERNAL PROCEDURE     */ 01783000
*                                                                  0519 01784000
*   /*****************************************************************/ 01785000
*   /*                                                               */ 01786000
*   /* INTERNAL PROCEDURE                                            */ 01787000
*   /*                                                               */ 01788000
*   /*****************************************************************/ 01789000
*                                                                  0520 01790000
*AMDHEX:                                                           0520 01791000
*   PROC;                           /* INTERNAL PROCEDURE            */ 01792000
AMDHEX   STM   @14,@12,@SA00003                                    0520 01793000
*   RFY                                                            0521 01794000
*    (REG2,                         /* WORK REGISTER           Y02014*/ 01795000
*     REG4,                         /* WORK REGISTER                 */ 01796000
*     AEDITCBR,                     /* PTR TO AMDPRTAB               */ 01797000
*     TTABPTR,                      /* PTR TO AMDSCNTB               */ 01798000
*     REG5,                         /* WORK REGISTER                 */ 01799000
*     REGPT)RSTD;                   /* POINTER TO AMDPRCOM     Y02014*/ 01800000
*   REG2=LNGTH-1;                   /* OBTAIN VALUE LNGTH            */ 01801000
         L     REG2,LNGTH(,TTABPTR)                                0522 01802000
         BCTR  REG2,0                                              0522 01803000
*   REG4=ADDRS3;                    /* OBTAIN PTR TO FIRST CHAR      */ 01804000
         L     REG4,ADDRS3(,TTABPTR)                               0523 01805000
*   GENERATE;                                                      0524 01806000
*                                       /* CNVRT FROM HEX TO BIN     */ 01807000
         EX   R2,ANDCHAR                EXECUTE NC INSTRUCTION          01808000
         EX   R2,TRANCHAR               EXECUTE TR INSTRUCTION          01809000
         B    INTHEX1                   PREPARE FOR PACK INSTRUCTION    01810000
ANDCHAR  NC   0(0,R4),ZONES       PREPARATION FOR TRANSLATE             01811000
TRANCHAR TR   0(0,R4),TRNTABL     PREPARATION FOR PACK                  01812000
INTHEX1  LA   R5,WORDPLUS               OBTAIN ADDRS OF RECEIVER        01813000
         LA   R2,1(R2)                OBTAIN ACTUAL LENGTH              01814000
         EX   R2,PACKCHAR               ELIMINATE ZONES                 01815000
         B    INTHEX2                   STORE RESULT                    01816000
PACKCHAR PACK 0(5,R5),0(0,R4) PACK DIGITS                               01817000
*INTHEX2:                                                          0525 01818000
*   COMP8=WORDPLUS;                 /* STRIP EXTRA BYTE/STORE RESULT */ 01819000
INTHEX2  MVI   COMP8+5(TTABPTR),C' '                               0525 01820000
         MVC   COMP8+6(2,TTABPTR),COMP8+5(TTABPTR)                 0525 01821000
         MVC   COMP8(5,TTABPTR),WORDPLUS                           0525 01822000
*   RETURN;                         /* RETURN TO CALLER              */ 01823000
@EL00003 DS    0H                                                  0526 01824000
@EF00003 DS    0H                                                  0526 01825000
@ER00003 LM    @14,@12,@SA00003                                    0526 01826000
         BR    @14                                                 0526 01827000
*   END AMDHEX;                                                    0527 01828000
*   END AMDPRSN2                    /* END OF EXTERNAL PROCEDURE     */ 01829000
*                                                                  0528 01830000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */ 01831000
*/*%INCLUDE SYSLIB  (AMDPRTAB)                                       */ 01832000
*/*%INCLUDE SYSLIB  (AMDSCNTB)                                       */ 01833000
*                                                                  0528 01834000
*       ;                                                          0528 01835000
         B     @EL00001                                            0528 01836000
@DATA    DS    0H                                                       01837000
@CH00078 DC    H'2'                                                     01838000
@CH00169 DC    H'3'                                                     01839000
@CH00086 DC    H'5'                                                     01840000
@CH00034 DC    H'11'                                                    01841000
@CH00121 DC    H'256'                                                   01842000
@SM00614 MVC   COMP8(0,TTABPTR),VAL1(@14)                               01843000
@SM00616 MVC   DDNM(0,TTABPTR),VAL1(@14)                                01844000
@SM00618 MVC   EXITNAME(0,TTABPTR),VAL1(@10)                            01845000
@SM00620 MVC   COMP8(0,TTABPTR),VAL1(@10)                               01846000
@SM00622 MVC   DEV(0,@14),COMP8(TTABPTR)                                01847000
@SC00624 CLC   DEV(0,@14),COMP8(TTABPTR)                                01848000
         DS    0F                                                       01849000
@SA00001 DS    18F                                                      01850000
@SA00002 DS    15F                                                      01851000
@SA00003 DS    15F                                                      01852000
         DS    0F                                                       01853000
@CF00473 DC    F'-1'                                                    01854000
@CF00046 DC    F'1'                                                     01855000
@CH00046 EQU   @CF00046+2                                               01856000
@CF00099 DC    F'4'                                                     01857000
@CF00035 DC    F'7'                                                     01858000
@CF00033 DC    F'8'                                                     01859000
@CH00033 EQU   @CF00033+2                                               01860000
@CF00139 DC    F'16'                                                    01861000
@CF00564 DC    F'17'                                                    01862000
@CF00565 DC    F'18'                                                    01863000
@CF00566 DC    F'19'                                                    01864000
@CA00319 DC    A(AMDPRS00)                                              01865000
         DS    0D                                                       01866000
LASTPTR  DS    A                                                        01867000
SRTBPTX  DS    A                                                        01868000
SVTABX   DS    A                                                        01869000
LSTPTRX  DS    A                                                        01870000
SRTBPTY  DS    A                                                        01871000
SVTABY   DS    A                                                        01872000
LSTPTRY  DS    A                                                        01873000
ZONES    DC    X'1F1F1F1F1F1F1F1F'                                      01874000
TRNTABL  DS    CL32                                                     01875000
         ORG   TRNTABL                                                  01876000
TRNTABL1 DC    X'00FAFBFCFDFEFF'                                        01877000
TRNTABL2 DS    CL9                                                      01878000
TRNTABL3 DC    CL16'0123456789ABCDEF'                                   01879000
         ORG   TRNTABL+32                                               01880000
WORDPLUS DS    CL5                                                      01881000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       01882000
@01      EQU   01                                                       01883000
@02      EQU   02                                                       01884000
@03      EQU   03                                                       01885000
@04      EQU   04                                                       01886000
@05      EQU   05                                                       01887000
@06      EQU   06                                                       01888000
@07      EQU   07                                                       01889000
@08      EQU   08                                                       01890000
@09      EQU   09                                                       01891000
@10      EQU   10                                                       01892000
@11      EQU   11                                                       01893000
@12      EQU   12                                                       01894000
@13      EQU   13                                                       01895000
@14      EQU   14                                                       01896000
@15      EQU   15                                                       01897000
AEDITCBR EQU   @09                                                      01898000
TTABPTR  EQU   @03                                                      01899000
REG1     EQU   @01                                                      01900000
REG2     EQU   @02                                                      01901000
REG4     EQU   @04                                                      01902000
REG5     EQU   @05                                                      01903000
REG6     EQU   @06                                                      01904000
REGPT    EQU   @12                                                      01905000
REG15    EQU   @15                                                      01906000
REG7     EQU   @07                                                      01907000
         EXTRN AMDPRS00                                                 01908000
AMDPRTAB EQU   0                                                        01909000
DEBGFLGS EQU   AMDPRTAB+8                                               01910000
PTHFLGS1 EQU   DEBGFLGS                                                 01911000
PTHFLGS2 EQU   DEBGFLGS+1                                               01912000
INRFCFGS EQU   DEBGFLGS+2                                               01913000
IOFLGS   EQU   DEBGFLGS+3                                               01914000
USEREXIT EQU   AMDPRTAB+24                                              01915000
DDNAME   EQU   AMDPRTAB+32                                              01916000
STARTIME EQU   AMDPRTAB+40                                              01917000
STOPTIME EQU   AMDPRTAB+52                                              01918000
NAMES    EQU   AMDPRTAB+64                                              01919000
ADS      EQU   AMDPRTAB+104                                             01920000
AADS     EQU   ADS                                                      01921000
SIF      EQU   AMDPRTAB+124                                             01922000
SIOFLGS  EQU   SIF                                                      01923000
ALLS     EQU   SIOFLGS                                                  01924000
NOEQU    EQU   SIOFLGS                                                  01925000
DVADS1   EQU   AMDPRTAB+128                                             01926000
IO       EQU   AMDPRTAB+228                                             01927000
IOFLGS2  EQU   IO                                                       01928000
ALLI     EQU   IOFLGS2                                                  01929000
DVADS2   EQU   AMDPRTAB+232                                             01930000
VCF      EQU   AMDPRTAB+332                                             01931000
SVCFLGS  EQU   VCF                                                      01932000
ALLV     EQU   SVCFLGS                                                  01933000
USR      EQU   AMDPRTAB+368                                             01934000
USRFLGS  EQU   USR                                                      01935000
USRTAB   EQU   AMDPRTAB+372                                             01936000
PI       EQU   AMDPRTAB+452                                             01937000
PIFLGS   EQU   PI                                                       01938000
ALLP     EQU   PIFLGS                                                   01939000
PGMNGEN  EQU   AMDPRTAB+456                                             01940000
GENFLAGS EQU   PGMNGEN+3                                                01941000
SYS      EQU   GENFLAGS                                                 01942000
GENFLGS1 EQU   AMDPRTAB+460                                             01943000
ESTARTME EQU   AMDPRTAB+500                                             01944000
ESTOPTME EQU   AMDPRTAB+509                                             01945000
AMDSCNTB EQU   0                                                        01946000
TEMPTAB  EQU   AMDSCNTB                                                 01947000
EXITNAME EQU   TEMPTAB                                                  01948000
DDNM     EQU   TEMPTAB+8                                                01949000
STARTSL  EQU   TEMPTAB+16                                               01950000
STOPSL   EQU   TEMPTAB+28                                               01951000
OVERLTAB EQU   TEMPTAB+40                                               01952000
SIOTFLGS EQU   TEMPTAB+80                                               01953000
ALLST    EQU   SIOTFLGS                                                 01954000
SELST    EQU   SIOTFLGS                                                 01955000
EQUIVT   EQU   SIOTFLGS                                                 01956000
NOEQUT   EQU   SIOTFLGS                                                 01957000
IOTFLGS  EQU   TEMPTAB+81                                               01958000
ALLIT    EQU   IOTFLGS                                                  01959000
SELIT    EQU   IOTFLGS                                                  01960000
USRTFLGS EQU   TEMPTAB+82                                               01961000
SVCTFLGS EQU   TEMPTAB+83                                               01962000
ALLVT    EQU   SVCTFLGS                                                 01963000
SELVT    EQU   SVCTFLGS                                                 01964000
PITFLGS  EQU   TEMPTAB+84                                               01965000
ALLPT    EQU   PITFLGS                                                  01966000
SELPT    EQU   PITFLGS                                                  01967000
SYSTFLGS EQU   TEMPTAB+85                                               01968000
EXTT     EQU   SYSTFLGS                                                 01969000
DSPT     EQU   SYSTFLGS                                                 01970000
SYST     EQU   SYSTFLGS                                                 01971000
SYSMT    EQU   SYSTFLGS                                                 01972000
RNIOT    EQU   SYSTFLGS                                                 01973000
SRMT     EQU   SYSTFLGS                                                 01974000
RRT      EQU   SYSTFLGS                                                 01975000
EOFT     EQU   SYSTFLGS                                                 01976000
SIOCRPTR EQU   TEMPTAB+104                                              01977000
IOCRPTR  EQU   TEMPTAB+108                                              01978000
JOBCRPTR EQU   TEMPTAB+112                                              01979000
ASCBCPTR EQU   TEMPTAB+116                                              01980000
SVCSTR   EQU   TEMPTAB+128                                              01981000
PISTR    EQU   TEMPTAB+160                                              01982000
PISTRB   EQU   TEMPTAB+162                                              01983000
SCNBITS  EQU   AMDSCNTB+163                                             01984000
IORTNSW  EQU   SCNBITS                                                  01985000
EQUIND   EQU   SCNBITS                                                  01986000
CODETABL EQU   AMDSCNTB+164                                             01987000
CXIT     EQU   CODETABL                                                 01988000
CJOBN    EQU   CODETABL                                                 01989000
CASCB    EQU   CODETABL                                                 01990000
CSIO     EQU   CODETABL                                                 01991000
CIO      EQU   CODETABL+1                                               01992000
CSVC     EQU   CODETABL+1                                               01993000
CPI      EQU   CODETABL+1                                               01994000
NOVAL    EQU   CODETABL+2                                               01995000
PAREN    EQU   CODETABL+2                                               01996000
DBLWORD  EQU   AMDSCNTB+176                                             01997000
KWTAB1   EQU   AMDSCNTB+184                                             01998000
KWTAB2   EQU   AMDSCNTB+228                                             01999000
BLANK1   EQU   AMDSCNTB+316                                             02000000
MASKS    EQU   AMDSCNTB+328                                             02001000
SCNPTR   EQU   AMDSCNTB+336                                             02002000
ADDRS3   EQU   AMDSCNTB+348                                             02003000
EOCADDR  EQU   AMDSCNTB+352                                             02004000
LNGTH    EQU   AMDSCNTB+356                                             02005000
COMP4    EQU   AMDSCNTB+360                                             02006000
COMP8    EQU   AMDSCNTB+364                                             02007000
SVKEY    EQU   AMDSCNTB+372                                             02008000
SAVETAB  EQU   AMDSCNTB+376                                             02009000
SORTPTR  EQU   AMDSCNTB+380                                             02010000
SRTTABPT EQU   AMDSCNTB+384                                             02011000
INCRT    EQU   AMDSCNTB+388                                             02012000
ALLCT    EQU   AMDSCNTB+392                                             02013000
I        EQU   AMDSCNTB+396                                             02014000
J        EQU   AMDSCNTB+400                                             02015000
AMDPRSYN EQU   0                                                        02016000
MSGADDR  EQU   0                                                        02017000
ERRBUF   EQU   0                                                        02018000
VAL1     EQU   0                                                        02019000
SCNCHAR  EQU   0                                                        02020000
DEV      EQU   0                                                        02021000
DEVICE   EQU   0                                                        02022000
AD3      EQU   AMDPRS00+8                                               02023000
AD4      EQU   AMDPRS00+12                                              02024000
AD5      EQU   AMDPRS00+16                                              02025000
AD6      EQU   AMDPRS00+20                                              02026000
AD7      EQU   AMDPRS00+24                                              02027000
GNOSTDMG EQU   SWD                                                      02028000
STRING   EQU   SVCSTR                                                   02029000
STRING1  EQU   PISTR                                                    02030000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    02031000
GRDRSW   EQU   SWA                                                      02032000
GSETCVTS EQU   SWA                                                      02033000
GPRNTSW  EQU   SWA                                                      02034000
GGOSW    EQU   SWA                                                      02035000
GTSOSW   EQU   SWA                                                      02036000
GJBNMSW  EQU   SWA                                                      02037000
GREAD    EQU   SWA                                                      02038000
GSTORSW  EQU   SWA                                                      02039000
GFRBUFSW EQU   SWD                                                      02040000
GGPRSFND EQU   SWD                                                      02041000
GCONTSW  EQU   SWD                                                      02042000
GPREFMTD EQU   SWD                                                      02043000
GNCDUMP  EQU   SWD                                                      02044000
GSWPDCBC EQU   SWD                                                      02045000
GFLSHMOD EQU   SWD                                                      02046000
AD11     EQU   AMDPRS00+40                                              02047000
AD10     EQU   AMDPRS00+36                                              02048000
AD9      EQU   AMDPRS00+32                                              02049000
AD8      EQU   AMDPRS00+28                                              02050000
AD2      EQU   AMDPRS00+4                                               02051000
AD1      EQU   AMDPRS00                                                 02052000
INTSTOP  EQU   AMDSCNTB+409                                             02053000
INTSTART EQU   AMDSCNTB+404                                             02054000
ALLPTR   EQU   SAVETAB                                                  02055000
ADDRS1   EQU   AMDSCNTB+344                                             02056000
BUFADDR  EQU   AMDSCNTB+340                                             02057000
WORD     EQU   AMDSCNTB+168                                             02058000
@NM00003 EQU   CODETABL+2                                               02059000
CEOF     EQU   CODETABL+2                                               02060000
CRR      EQU   CODETABL+2                                               02061000
CSRM     EQU   CODETABL+1                                               02062000
CRNIO    EQU   CODETABL+1                                               02063000
CDSP     EQU   CODETABL+1                                               02064000
CEXT     EQU   CODETABL+1                                               02065000
CSYS     EQU   CODETABL+1                                               02066000
CUSR     EQU   CODETABL                                                 02067000
CSTOP    EQU   CODETABL                                                 02068000
CSTART   EQU   CODETABL                                                 02069000
CDDN     EQU   CODETABL                                                 02070000
RESBITS  EQU   SCNBITS                                                  02071000
PRNSW    EQU   SCNBITS                                                  02072000
RUNEDIT  EQU   SCNBITS                                                  02073000
SCANBIT  EQU   SCNBITS                                                  02074000
MORESW   EQU   SCNBITS                                                  02075000
USRCRCNT EQU   TEMPTAB+124                                              02076000
USRCOUNT EQU   TEMPTAB+120                                              02077000
ASCBPTR  EQU   TEMPTAB+100                                              02078000
JOBNPTR  EQU   TEMPTAB+96                                               02079000
IOPTR    EQU   TEMPTAB+92                                               02080000
SIOPTR   EQU   TEMPTAB+88                                               02081000
@NM00002 EQU   TEMPTAB+86                                               02082000
T        EQU   PITFLGS                                                  02083000
GT       EQU   SVCTFLGS                                                 02084000
ET       EQU   USRTFLGS                                                 02085000
SELUT    EQU   USRTFLGS                                                 02086000
ALLUT    EQU   USRTFLGS                                                 02087000
BT       EQU   IOTFLGS                                                  02088000
AT       EQU   SIOTFLGS                                                 02089000
OVERSL   EQU   OVERLTAB                                                 02090000
DYSTP    EQU   STOPSL+10                                                02091000
YRSTP    EQU   STOPSL+8                                                 02092000
TIMERU   EQU   STOPSL                                                   02093000
DY       EQU   STARTSL+10                                               02094000
YR       EQU   STARTSL+8                                                02095000
TIMEU    EQU   STARTSL                                                  02096000
RESERVED EQU   AMDPRTAB+522                                             02097000
CVTTZONE EQU   AMDPRTAB+518                                             02098000
ESPSEC   EQU   ESTOPTME+7                                               02099000
ESPMIN   EQU   ESTOPTME+5                                               02100000
ESPHR    EQU   ESTOPTME+3                                               02101000
ESPDAY   EQU   ESTOPTME                                                 02102000
ESSEC    EQU   ESTARTME+7                                               02103000
ESMIN    EQU   ESTARTME+5                                               02104000
ESHR     EQU   ESTARTME+3                                               02105000
ESDAY    EQU   ESTARTME                                                 02106000
ADTSBUF  EQU   AMDPRTAB+496                                             02107000
OFSTDATA EQU   AMDPRTAB+494                                             02108000
OFSTEID  EQU   AMDPRTAB+492                                             02109000
AFRMAD   EQU   AMDPRTAB+488                                             02110000
REENTWKA EQU   AMDPRTAB+484                                             02111000
PRFMTADD EQU   AMDPRTAB+480                                             02112000
AEIOCT   EQU   AMDPRTAB+476                                             02113000
EXITADDR EQU   AMDPRTAB+472                                             02114000
EXITNM   EQU   AMDPRTAB+464                                             02115000
RECDLL   EQU   AMDPRTAB+461                                             02116000
@NM00001 EQU   GENFLGS1                                                 02117000
FIRSTHSW EQU   GENFLGS1                                                 02118000
TSFOUND  EQU   GENFLGS1                                                 02119000
EOFINPRO EQU   GENFLGS1                                                 02120000
TS       EQU   GENFLGS1                                                 02121000
EOF      EQU   GENFLAGS                                                 02122000
RR       EQU   GENFLAGS                                                 02123000
SRM      EQU   GENFLAGS                                                 02124000
RNIO     EQU   GENFLAGS                                                 02125000
SYSM     EQU   GENFLAGS                                                 02126000
DSP      EQU   GENFLAGS                                                 02127000
EXT      EQU   GENFLAGS                                                 02128000
PICODEA  EQU   PGMNGEN+2                                                02129000
PICODES  EQU   PGMNGEN                                                  02130000
Q        EQU   PI+1                                                     02131000
P01R     EQU   PIFLGS                                                   02132000
SELP     EQU   PIFLGS                                                   02133000
USRNGTAB EQU   USRTAB                                                   02134000
O        EQU   USR+1                                                    02135000
N01R     EQU   USRFLGS                                                  02136000
SELU     EQU   USRFLGS                                                  02137000
ALLU     EQU   USRFLGS                                                  02138000
SVCNUMS  EQU   AMDPRTAB+336                                             02139000
M        EQU   VCF+1                                                    02140000
L        EQU   SVCFLGS                                                  02141000
SELV     EQU   SVCFLGS                                                  02142000
IODVADS  EQU   DVADS2                                                   02143000
K01RES   EQU   IO+1                                                     02144000
JJ       EQU   IOFLGS2                                                  02145000
SELI     EQU   IOFLGS2                                                  02146000
SIODVADS EQU   DVADS1                                                   02147000
II       EQU   SIF+1                                                    02148000
H        EQU   SIOFLGS                                                  02149000
EQUIV    EQU   SIOFLGS                                                  02150000
SELS     EQU   SIOFLGS                                                  02151000
ASCBADDR EQU   AADS                                                     02152000
JOBNAMES EQU   NAMES                                                    02153000
DAY2     EQU   STOPTIME+10                                              02154000
F        EQU   STOPTIME+8                                               02155000
TIME2    EQU   STOPTIME                                                 02156000
DAY      EQU   STARTIME+10                                              02157000
D        EQU   STARTIME+8                                               02158000
TIME     EQU   STARTIME                                                 02159000
GTFWDPTR EQU   AMDPRTAB+20                                              02160000
C        EQU   DEBGFLGS+4                                               02161000
B        EQU   IOFLGS                                                   02162000
GETEOF   EQU   IOFLGS                                                   02163000
DMDFMT   EQU   INRFCFGS                                                 02164000
EDITSTOP EQU   INRFCFGS                                                 02165000
EXTTRC   EQU   INRFCFGS                                                 02166000
RET      EQU   INRFCFGS                                                 02167000
FMT      EQU   INRFCFGS                                                 02168000
SPIE     EQU   INRFCFGS                                                 02169000
TERM     EQU   INRFCFGS                                                 02170000
FLMODE   EQU   INRFCFGS                                                 02171000
REMAIN   EQU   PTHFLGS2                                                 02172000
APP      EQU   PTHFLGS2                                                 02173000
REXT     EQU   PTHFLGS1                                                 02174000
FRM      EQU   PTHFLGS1                                                 02175000
FLT      EQU   PTHFLGS1                                                 02176000
HEX      EQU   PTHFLGS1                                                 02177000
CON      EQU   PTHFLGS1                                                 02178000
GET      EQU   PTHFLGS1                                                 02179000
SCN      EQU   PTHFLGS1                                                 02180000
ROOT     EQU   PTHFLGS1                                                 02181000
CURREC   EQU   AMDPRTAB+4                                               02182000
AFMG     EQU   AMDPRTAB                                                 02183000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      02184000
@RT00047 EQU   AMDPNAM1                                                 02185000
@RT00049 EQU   AMDPNAM1                                                 02186000
@RT00051 EQU   AMDPNAM1                                                 02187000
@RT00053 EQU   AMDPNAM1                                                 02188000
@RT00058 EQU   AMDVLMG1                                                 02189000
@RT00067 EQU   AMDPNAM2                                                 02190000
@RT00069 EQU   AMDPNAM2                                                 02191000
@RT00074 EQU   AMDVLN1                                                  02192000
@RT00076 EQU   AMDELIM1                                                 02193000
@RT00080 EQU   AMDPNAM3                                                 02194000
@RT00082 EQU   AMDPNAM4                                                 02195000
@RT00084 EQU   AMDPNAM5                                                 02196000
@RT00088 EQU   AMDPNAM6                                                 02197000
@RT00090 EQU   AMDPNAM7                                                 02198000
@RT00095 EQU   AMDPEOCL                                                 02199000
@RT00098 EQU   AMDPEOCL                                                 02200000
@RT00101 EQU   AMDPEOCL                                                 02201000
@RT00104 EQU   AMDPEOCL                                                 02202000
AMDRTCTL EQU   @EL00001                                                 02203000
@RT00114 EQU   AMDVLEN1                                                 02204000
@RT00134 EQU   AMDPTAJ1                                                 02205000
@RT00136 EQU   AMDPTAJ1                                                 02206000
@RT00142 EQU   AMDPTAJ3                                                 02207000
@RT00144 EQU   AMDVLN1                                                  02208000
@RT00146 EQU   AMDELIM1                                                 02209000
@RT00148 EQU   AMDPTAJ2                                                 02210000
@RT00150 EQU   AMDPTAJ2                                                 02211000
@RT00152 EQU   AMDPTAJ2                                                 02212000
@RT00154 EQU   AMDPTAJ2                                                 02213000
@RT00159 EQU   AMDUMSG                                                  02214000
@RT00170 EQU   AMDPEOCL                                                 02215000
@RT00172 EQU   AMDPEOCL                                                 02216000
@RT00176 EQU   AMDPTAJX                                                 02217000
@RT00178 EQU   AMDPSVC2                                                 02218000
@RT00180 EQU   AMDPPGM2                                                 02219000
@RF00184 EQU   AMDPARN                                                  02220000
@RT00190 EQU   AMDVLN1                                                  02221000
@RT00192 EQU   AMDELIM1                                                 02222000
@RT00195 EQU   AMDPOK1                                                  02223000
@RT00197 EQU   AMDVMSG                                                  02224000
@RT00206 EQU   AMDELIM2                                                 02225000
@RT00215 EQU   AMDUMMG1                                                 02226000
@RT00230 EQU   AMDPEOCL                                                 02227000
@RT00232 EQU   AMDPEOCL                                                 02228000
@RT00234 EQU   AMDPSIO1                                                 02229000
@RT00237 EQU   AMDPSIO2                                                 02230000
@RT00251 EQU   AMDPEOCL                                                 02231000
@RT00253 EQU   AMDPEOCL                                                 02232000
@RT00277 EQU   AMDPEOCL                                                 02233000
@RT00279 EQU   AMDPEOCL                                                 02234000
@RC00282 EQU   AMDPSIO6                                                 02235000
@RT00286 EQU   AMDPSIO5                                                 02236000
@RT00291 EQU   AMDPSI31                                                 02237000
@RF00308 EQU   AMDPCLCL                                                 02238000
@RT00312 EQU   AMDELIM1                                                 02239000
@RT00315 EQU   AMDPCLCL                                                 02240000
@RF00333 EQU   AMDPIORS                                                 02241000
@RT00337 EQU   AMDPEOCL                                                 02242000
@RT00340 EQU   AMDPSIOC                                                 02243000
@RT00342 EQU   AMDPSIOC                                                 02244000
@RT00347 EQU   AMDELIM1                                                 02245000
@RT00349 EQU   AMDVLN1                                                  02246000
@RT00352 EQU   AMDPEND                                                  02247000
@RT00354 EQU   AMDVMSG                                                  02248000
@RT00358 EQU   AMDPSIOE                                                 02249000
@RT00364 EQU   AMDUMSG                                                  02250000
@RT00366 EQU   AMDPIO1                                                  02251000
@RT00374 EQU   AMDPIO4                                                  02252000
@RT00379 EQU   AMDPARN                                                  02253000
@RT00383 EQU   AMDPIO3                                                  02254000
@RT00387 EQU   AMDPSIOE                                                 02255000
@RT00391 EQU   AMDPEOCL                                                 02256000
@RT00399 EQU   AMDPSVC3                                                 02257000
@RT00401 EQU   AMDPSVC3                                                 02258000
@RT00406 EQU   AMDVLN1                                                  02259000
@RT00408 EQU   AMDELIM1                                                 02260000
@RT00411 EQU   AMDVMSG                                                  02261000
@RT00416 EQU   AMDVMSG                                                  02262000
@RT00426 EQU   AMDPEOCL                                                 02263000
@RT00434 EQU   AMDPPGM3                                                 02264000
@RT00436 EQU   AMDPPGM3                                                 02265000
@RT00441 EQU   AMDVLN1                                                  02266000
@RT00443 EQU   AMDELIM1                                                 02267000
@RT00446 EQU   AMDVMSG                                                  02268000
@RT00465 EQU   AMDVMSG                                                  02269000
@PB00003 EQU   @EL00001                                                 02270000
@PB00002 EQU   @PB00003                                                 02271000
@ENDDATA EQU   *                                                        02272000
         END   AMDPRSN2,(C'PL/S-II',0502,73240)                         02273000
./  ADD  SSI=62240048,NAME=AMDPRSN3
         TITLE 'AMDPRSN3--EDIT END OF STATEMENT PROCEDURES             *00001000
                        '                                               00002000
AMDPRSN3 CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL2(@EP00001-@MAINENT)                                   00007000
AMDPEOC2 DS    0H                                                  0001 00008000
         USING *,@15                                               0001 00009000
         B     @PROLOG                                             0001 00010000
         DC    AL2(@EP00091-AMDPEOC2)                                   00011000
         ENTRY AMDPEOC2                                                 00012000
AMDPFIN  DS    0H                                                  0001 00013000
         USING *,@15                                               0001 00014000
         B     @PROLOG                                             0001 00015000
         DC    AL2(@EP00179-AMDPFIN)                                    00016000
         ENTRY AMDPFIN                                                  00017000
AMDPSUM1 DS    0H                                                  0001 00018000
         USING *,@15                                               0001 00019000
         B     @PROLOG                                             0001 00020000
         DC    AL2(@EP00256-AMDPSUM1)                                   00021000
         ENTRY AMDPSUM1                                                 00022000
         DROP  @15                                                      00023000
@PROLOG  ST    @14,12(,@13)                                        0001 00024000
         STM   @00,@12,20(@13)                                     0001 00025000
         BALR  @11,0                                               0001 00026000
@PSTART  LA    @07,4095(,@11)                                      0001 00027000
         USING @PSTART,@11                                         0001 00028000
         USING @PSTART+4095,@07                                    0001 00029000
         LA    @08,@DATA                                           0001 00030000
         USING @DATA,@08                                           0001 00031000
         ST    @13,@SA00001+4                                      0001 00032000
         LA    @14,@SA00001                                        0001 00033000
         ST    @14,8(,@13)                                         0001 00034000
         LR    @13,@14                                             0001 00035000
         AH    @15,4(,@15)                                         0001 00036000
         BR    @15                                                 0001 00037000
@EP00001 DS    0H                                                  0002 00038000
*                                                                  0090 00039000
              EQUATES                   AMDPRDMP EQU MACRO              00040000
              COMMON                    EXPANDS TO AMDPRCOM TABLE       00041000
AMDPRSN3      CSECT                     RE-ESTABLISH SCAN CSECT         00042000
              USING COMMON,COMBASE      SET UP DSECT FOR AMDPRCOM       00043000
*   /*****************************************************************/ 00044000
*   /*                                                               */ 00045000
*   /* THIS SUBROUTINE CONTINUES UPDATING/RESETTING PROCEDURES- IT   */ 00046000
*   /* HAS BEEN DETERMINED THAT END-OF- STATEMENT HAS BEEN REACHED.  */ 00047000
*   /*                                                               */ 00048000
*   /*****************************************************************/ 00049000
*                                                                  0091 00050000
*AMDPEOC2:                                                         0091 00051000
*   ENTRY;                          /* ENTRY POINT                   */ 00052000
@EP00091 DS    0H                                                  0092 00053000
*AMDPEC21:                                                         0092 00054000
*   IF FLMODE='1'B THEN             /* IF FLUSH MODE,                */ 00055000
AMDPEC21 TM    FLMODE(AEDITCBR),B'10000000'                        0092 00056000
         BNO   @RF00092                                            0092 00057000
*     DO;                           /* RESET VALUES                  */ 00058000
*       EXITNAME=' ';               /* EXIT NAME BLANKED OUT         */ 00059000
         MVI   EXITNAME+1(TTABPTR),C' '                            0094 00060000
         MVC   EXITNAME+2(6,TTABPTR),EXITNAME+1(TTABPTR)           0094 00061000
         MVI   EXITNAME(TTABPTR),C' '                              0094 00062000
*       DDNM=' ';                   /* DDNAME BLANKED OUT            */ 00063000
         MVI   DDNM+1(TTABPTR),C' '                                0095 00064000
         MVC   DDNM+2(6,TTABPTR),DDNM+1(TTABPTR)                   0095 00065000
         MVI   DDNM(TTABPTR),C' '                                  0095 00066000
*       SIOTFLGS='0'B;              /* SIOTFLGS ZEROED OUT           */ 00067000
         MVI   SIOTFLGS(TTABPTR),B'00000000'                       0096 00068000
*       IOTFLGS='0'B;               /* IOTFLGS ZEROED OUT            */ 00069000
         MVI   IOTFLGS(TTABPTR),B'00000000'                        0097 00070000
*       USRTFLGS='0'B;              /* USRTFLGS ZEROED OUT           */ 00071000
         MVI   USRTFLGS(TTABPTR),B'00000000'                       0098 00072000
*       SVCTFLGS='0'B;              /* SVCTFLGS ZEROED OUT           */ 00073000
         MVI   SVCTFLGS(TTABPTR),B'00000000'                       0099 00074000
*       PITFLGS='0'B;               /* PITFLGS ZEROED OUT            */ 00075000
         MVI   PITFLGS(TTABPTR),B'00000000'                        0100 00076000
*       SVCSTR='0'B;                /* ZERO TEMP SVC BIT STRING      */ 00077000
         XC    SVCSTR+1(31,TTABPTR),SVCSTR+1(TTABPTR)              0101 00078000
         MVI   SVCSTR(TTABPTR),B'00000000'                         0101 00079000
*       PISTR='0'B;                 /* ZERO TEMP PI BIT STRING       */ 00080000
         MVI   PISTR+1(TTABPTR),X'00'                              0102 00081000
         MVI   PISTR(TTABPTR),B'00000000'                          0102 00082000
*       PISTRB='0'B;                /* TURN OFF PI 17- 19 BITS       */ 00083000
         MVI   PISTRB(TTABPTR),B'00000000'                         0103 00084000
*       SYSTFLGS='0'B;              /* SYSTFLGS ZEROED OUT           */ 00085000
*                                                                  0104 00086000
         MVI   SYSTFLGS(TTABPTR),B'00000000'                       0104 00087000
*       /*************************************************************/ 00088000
*       /*                                                           */ 00089000
*       /* BEFORE BLANKING OR ZEROING OUT ERRONEOUS FIELDS IN        */ 00090000
*       /* AMDPRTAB, DETERMINE IF FIELD POINTER POINTS WITHIN        */ 00091000
*       /* ERRONEOUS FIELD. IF NOT, OMIT RE-INITIALIZATION.          */ 00092000
*       /*                                                           */ 00093000
*       /*************************************************************/ 00094000
*                                                                  0105 00095000
*       JOBCRPTR=JOBNPTR;           /* RE-INIT JOBNAMES PTR          */ 00096000
         L     @14,JOBNPTR(,TTABPTR)                               0105 00097000
         ST    @14,JOBCRPTR(,TTABPTR)                              0105 00098000
*       IF JOBCRPTR=ADDR(ADS)       /* Q/AT END OF JOBN SLOTS        */ 00099000
*         THEN                      /* YES, SO DO BELOW              */ 00100000
         LA    @10,ADS(,AEDITCBR)                                  0106 00101000
         CR    @14,@10                                             0106 00102000
         BE    @RT00106                                            0106 00103000
*         GOTO AMDTCB1;             /* OMIT RE-INITIALIZATION        */ 00104000
*       JOBCRPTR->JOBCHAR           /* BLANK JOBN SLOT               */ 00105000
*           =BLANK1;                                               0108 00106000
         MVC   JOBCHAR(8,@14),BLANK1(TTABPTR)                      0108 00107000
*AMDTCB1:                                                          0109 00108000
*       ASCBCPTR=ASCBPTR;           /* REINIT ASCB ADDRS PTR Y02014  */ 00109000
AMDTCB1  L     @14,ASCBPTR(,TTABPTR)                               0109 00110000
         ST    @14,ASCBCPTR(,TTABPTR)                              0109 00111000
*       IF ASCBCPTR=ADDR(SIF)       /* AT END OF ASCB SLOTS    Y02014*/ 00112000
*         THEN                      /* YES, SO DO BELOW              */ 00113000
         LA    @10,SIF(,AEDITCBR)                                  0110 00114000
         CR    @14,@10                                             0110 00115000
         BE    @RT00110                                            0110 00116000
*         GOTO AMDSIO1;             /* OMIT RE-INITIALIZATION        */ 00117000
*       ASCBCPTR->REINIT            /* ZERO ASCB ADDRS SLT     Y02014*/ 00118000
*           =0;                                                    0112 00119000
         SLR   @10,@10                                             0112 00120000
         STCM  @10,15,REINIT(@14)                                  0112 00121000
*AMDSIO1:                                                          0113 00122000
*       SIOCRPTR=SIOPTR;            /* RE-INIT SIO DEVICES PTR       */ 00123000
AMDSIO1  L     @14,SIOPTR(,TTABPTR)                                0113 00124000
         ST    @14,SIOCRPTR(,TTABPTR)                              0113 00125000
*       IF SIOCRPTR=ADDR(IO)        /* Q/AT END OF SIO DEVICE ADS    */ 00126000
*         THEN                      /* YES, SO DO BELOW              */ 00127000
         LA    @10,IO(,AEDITCBR)                                   0114 00128000
         CR    @14,@10                                             0114 00129000
         BE    @RT00114                                            0114 00130000
*         GOTO AMDIO1;              /* OMIT RE-INITIALIZATION        */ 00131000
*       SIOCRPTR->DEVCHAR           /* BLANK OUT SIO SLOT            */ 00132000
*           =BLANK1;                                               0116 00133000
         MVC   DEVCHAR(2,@14),BLANK1(TTABPTR)                      0116 00134000
*AMDIO1:                                                           0117 00135000
*       IOCRPTR=IOPTR;              /* RE-INIT IO DEVICES PTR        */ 00136000
AMDIO1   L     @14,IOPTR(,TTABPTR)                                 0117 00137000
         ST    @14,IOCRPTR(,TTABPTR)                               0117 00138000
*       IF IOCRPTR=ADDR(VCF)        /* Q/AT END OF IO DEVICE ADS     */ 00139000
*         THEN                      /* YES, SO DO BELOW              */ 00140000
         LA    @10,VCF(,AEDITCBR)                                  0118 00141000
         CR    @14,@10                                             0118 00142000
         BE    @RT00118                                            0118 00143000
*         GOTO AMDUSRBL;            /* OMIT RE-INITIALIZATION        */ 00144000
*       IOCRPTR->DEVCHAR            /* BLANK IO SLOT                 */ 00145000
*           =BLANK1;                                               0120 00146000
*                                                                  0120 00147000
         MVC   DEVCHAR(2,@14),BLANK1(TTABPTR)                      0120 00148000
*       /*************************************************************/ 00149000
*       /*                                                           */ 00150000
*       /* BLANK OUT ALL USR SLOTS FILLED IN FROM THIS CARD          */ 00151000
*       /*                                                           */ 00152000
*       /*************************************************************/ 00153000
*                                                                  0121 00154000
*AMDUSRBL:                                                         0121 00155000
*       DO I=USRCOUNT+1 TO USRCRCNT;                               0121 00156000
AMDUSRBL LA    @14,1                                               0121 00157000
         AL    @14,USRCOUNT(,TTABPTR)                              0121 00158000
         B     @DE00121                                            0121 00159000
@DL00121 DS    0H                                                  0122 00160000
*         USRNGTAB(I)=BLANK1;       /* BLANK OUT USR SLOT            */ 00161000
         L     @14,I(,TTABPTR)                                     0122 00162000
         SLA   @14,2                                               0122 00163000
         ALR   @14,AEDITCBR                                        0122 00164000
         MVC   USRNGTAB-4(4,@14),BLANK1(TTABPTR)                   0122 00165000
*       END;                                                       0123 00166000
         LA    @14,1                                               0123 00167000
         AL    @14,I(,TTABPTR)                                     0123 00168000
@DE00121 ST    @14,I(,TTABPTR)                                     0123 00169000
         C     @14,USRCRCNT(,TTABPTR)                              0123 00170000
         BNH   @DL00121                                            0123 00171000
*       USRCRCNT=0;                 /* RE-INIT USR EID COUNT         */ 00172000
         SLR   @14,@14                                             0124 00173000
         ST    @14,USRCRCNT(,TTABPTR)                              0124 00174000
*       STARTSL=' ';                /* START SLOT BLANKED OUT        */ 00175000
         MVI   STARTSL+1(TTABPTR),C' '                             0125 00176000
         MVC   STARTSL+2(10,TTABPTR),STARTSL+1(TTABPTR)            0125 00177000
         MVI   STARTSL(TTABPTR),C' '                               0125 00178000
*       STOPSL=' ';                 /* STOP SLOT BLANKED OUT         */ 00179000
*                                                                  0126 00180000
         MVI   STOPSL+1(TTABPTR),C' '                              0126 00181000
         MVC   STOPSL+2(10,TTABPTR),STOPSL+1(TTABPTR)              0126 00182000
         MVI   STOPSL(TTABPTR),C' '                                0126 00183000
*       /*************************************************************/ 00184000
*       /*                                                           */ 00185000
*       /* DETERMINE IF START AND/OR STOP SLOT IN AMDPRTAB IS FILLED */ 00186000
*       /* IN. IF SO, DO NOT BLANK OUT THE RESPECTIVE START AND/OR   */ 00187000
*       /* STOP INTERNAL SLOT.                                       */ 00188000
*       /*                                                           */ 00189000
*       /*************************************************************/ 00190000
*                                                                  0127 00191000
*       IF STARTIME=BLANK1 THEN     /* IF PRTAB START SLOT BLANK,    */ 00192000
         CLC   STARTIME(12,AEDITCBR),BLANK1(TTABPTR)               0127 00193000
         BNE   @RF00127                                            0127 00194000
*         INTSTART=BLANK1;          /* BLANK OUT INT START SLOT      */ 00195000
         MVC   INTSTART(5,TTABPTR),BLANK1(TTABPTR)                 0128 00196000
*       IF STOPTIME=BLANK1 THEN     /* IF PRTAB STOP SLOT BLANK,     */ 00197000
@RF00127 CLC   STOPTIME(12,AEDITCBR),BLANK1(TTABPTR)               0129 00198000
         BNE   @RF00129                                            0129 00199000
*         INTSTOP=BLANK1;           /* BLANK OUT INT STOP SLOT       */ 00200000
         MVC   INTSTOP(5,TTABPTR),BLANK1(TTABPTR)                  0130 00201000
*       OVERLTAB=' ';               /* OVERLAY TABLE BLANKED OUT     */ 00202000
@RF00129 MVI   OVERLTAB+1(TTABPTR),C' '                            0131 00203000
         MVC   OVERLTAB+2(38,TTABPTR),OVERLTAB+1(TTABPTR)          0131 00204000
         MVI   OVERLTAB(TTABPTR),C' '                              0131 00205000
*       IF GRDRSW='1'B THEN         /* IF INPUT FROM SYSIN,          */ 00206000
         TM    GRDRSW,B'00000001'                                  0132 00207000
         BO    @RT00132                                            0132 00208000
*         GOTO AMDPST4;             /* THEN RETURN TO AMDPRCTL       */ 00209000
*       GOTO AMDPRESP;              /* IF INPUT FROM CONSOLE,      0134 00210000
*                                      RESPECIFY LAST LINE           */ 00211000
         B     AMDPRESP                                            0134 00212000
*     END;                          /* IF FLUSH MODE BIT WAS ON      */ 00213000
*                                                                  0135 00214000
*   /*****************************************************************/ 00215000
*   /*                                                               */ 00216000
*   /* IF FLUSH MODE BIT WAS OFF, MAKE TEMPORARY VALUES PERM         */ 00217000
*   /*                                                               */ 00218000
*   /*****************************************************************/ 00219000
*                                                                  0136 00220000
*   IF EXITNAME¬=BLANK1 THEN        /* MAKE TEMPORARY EXIT NAME      */ 00221000
@RF00092 CLC   EXITNAME(8,TTABPTR),BLANK1(TTABPTR)                 0136 00222000
         BE    @RF00136                                            0136 00223000
*     USEREXIT=EXITNAME;            /* THE EXIT NAME IN AMDPRTAB     */ 00224000
         MVC   USEREXIT(8,AEDITCBR),EXITNAME(TTABPTR)              0137 00225000
*   IF DDNM¬=BLANK1 THEN            /* MAKE TEMPORARY DDNAME THE     */ 00226000
@RF00136 CLC   DDNM(8,TTABPTR),BLANK1(TTABPTR)                     0138 00227000
         BE    @RF00138                                            0138 00228000
*     DDNAME=DDNM;                  /* DDNAME IN AMDPRTAB            */ 00229000
         MVC   DDNAME(8,AEDITCBR),DDNM(TTABPTR)                    0139 00230000
*   IF STARTSL¬=BLANK1 THEN         /* MAKE TEMPORARY START VALUE    */ 00231000
@RF00138 CLC   STARTSL(12,TTABPTR),BLANK1(TTABPTR)                 0140 00232000
         BE    @RF00140                                            0140 00233000
*     STARTIME=STARTSL;             /* THE START VAL IN AMDPRTAB     */ 00234000
         MVC   STARTIME(12,AEDITCBR),STARTSL(TTABPTR)              0141 00235000
*   IF STOPSL¬=BLANK1 THEN          /* MAKE TEMPORARY STOP VALUE     */ 00236000
@RF00140 CLC   STOPSL(12,TTABPTR),BLANK1(TTABPTR)                  0142 00237000
         BE    @RF00142                                            0142 00238000
*     STOPTIME=STOPSL;              /* THE STOP VAL IN AMDPRTAB      */ 00239000
         MVC   STOPTIME(12,AEDITCBR),STOPSL(TTABPTR)               0143 00240000
*   JOBNPTR=JOBCRPTR;               /* UPDATE JOBNAMES PTR           */ 00241000
@RF00142 L     @14,JOBCRPTR(,TTABPTR)                              0144 00242000
         ST    @14,JOBNPTR(,TTABPTR)                               0144 00243000
*   IF JOBNPTR=ADDR(ADS) THEN       /* Q/AT END OF JOBN SLOTS        */ 00244000
         LA    @10,ADS(,AEDITCBR)                                  0145 00245000
         CR    @14,@10                                             0145 00246000
         BE    @RT00145                                            0145 00247000
*     GOTO AMDTCB;                  /* YES                           */ 00248000
*   JOBNPTR->JOBCHAR=BLANK1;        /* IF NOT, BLANK SLOT            */ 00249000
         MVC   JOBCHAR(8,@14),BLANK1(TTABPTR)                      0147 00250000
*AMDTCB:                                                           0148 00251000
*   ASCBPTR=ASCBCPTR;               /* UPDTE ASCB ADRS PTR     Y02014*/ 00252000
AMDTCB   L     @14,ASCBCPTR(,TTABPTR)                              0148 00253000
         ST    @14,ASCBPTR(,TTABPTR)                               0148 00254000
*   IF ASCBPTR=ADDR(SIF) THEN       /* AT END OF ASCB SLTS     Y02014*/ 00255000
         LA    @10,SIF(,AEDITCBR)                                  0149 00256000
         CR    @14,@10                                             0149 00257000
         BE    @RT00149                                            0149 00258000
*     GOTO AMDSIO;                  /* YES                           */ 00259000
*   ASCBPTR->REINIT=0;              /* NO ZERO CURR SLOT       Y02014*/ 00260000
         SLR   @10,@10                                             0151 00261000
         STCM  @10,15,REINIT(@14)                                  0151 00262000
*AMDSIO:                                                           0152 00263000
*   SIOFLGS=SIOFLGS                 /* UPDATE SIOFLGS                */ 00264000
*       |SIOTFLGS;                                                 0152 00265000
AMDSIO   OC    SIOFLGS(1,AEDITCBR),SIOTFLGS(TTABPTR)               0152 00266000
*   SIOPTR=SIOCRPTR;                /* UPDATE SIO DEVS PTR           */ 00267000
         L     @14,SIOCRPTR(,TTABPTR)                              0153 00268000
         ST    @14,SIOPTR(,TTABPTR)                                0153 00269000
*   IF SIOPTR=ADDR(IO) THEN         /* Q/AT END OF SIO DEVICE ADS    */ 00270000
         LA    @10,IO(,AEDITCBR)                                   0154 00271000
         CR    @14,@10                                             0154 00272000
         BE    @RT00154                                            0154 00273000
*     GOTO AMDIO;                   /* YES                           */ 00274000
*   SIOPTR->DEVCHAR=BLANK1;         /* IF NOT, BLANK CURRENT SLOT    */ 00275000
         MVC   DEVCHAR(2,@14),BLANK1(TTABPTR)                      0156 00276000
*AMDIO:                                                            0157 00277000
*   IOFLGS2=IOFLGS2|IOTFLGS;        /* UPDATE IOFLGS                 */ 00278000
AMDIO    OC    IOFLGS2(1,AEDITCBR),IOTFLGS(TTABPTR)                0157 00279000
*   IOPTR=IOCRPTR;                  /* UPDATE IO DEVS PTR            */ 00280000
         L     @14,IOCRPTR(,TTABPTR)                               0158 00281000
         ST    @14,IOPTR(,TTABPTR)                                 0158 00282000
*   IF IOPTR=ADDR(VCF) THEN         /* Q/AT END OF IO DEVICE ADS     */ 00283000
         LA    @10,VCF(,AEDITCBR)                                  0159 00284000
         CR    @14,@10                                             0159 00285000
         BE    @RT00159                                            0159 00286000
*     GOTO AMDUSRCT;                /* YES                           */ 00287000
*   IOPTR->DEVCHAR=BLANK1;          /* IF NOT, BLANK CURRENT SLOT    */ 00288000
         MVC   DEVCHAR(2,@14),BLANK1(TTABPTR)                      0161 00289000
*AMDUSRCT:                                                         0162 00290000
*   USRFLGS=USRFLGS                 /* UPDATE USRFLGS                */ 00291000
*       |USRTFLGS;                                                 0162 00292000
AMDUSRCT OC    USRFLGS(1,AEDITCBR),USRTFLGS(TTABPTR)               0162 00293000
*   USRCOUNT=USRCOUNT               /* UPDATE USR EID COUNT          */ 00294000
*       +USRCRCNT;                                                 0163 00295000
         L     @14,USRCOUNT(,TTABPTR)                              0163 00296000
         AL    @14,USRCRCNT(,TTABPTR)                              0163 00297000
         ST    @14,USRCOUNT(,TTABPTR)                              0163 00298000
*   USRCRCNT=0;                     /* REINIT CURRENT EID COUNT      */ 00299000
         SLR   @14,@14                                             0164 00300000
         ST    @14,USRCRCNT(,TTABPTR)                              0164 00301000
*   PIFLGS=PIFLGS|PITFLGS;          /* UPDATE PIFLGS                 */ 00302000
         OC    PIFLGS(1,AEDITCBR),PITFLGS(TTABPTR)                 0165 00303000
*   SVCFLGS=SVCFLGS                 /* UPDATE SVCFLGS                */ 00304000
*       |SVCTFLGS;                                                 0166 00305000
         OC    SVCFLGS(1,AEDITCBR),SVCTFLGS(TTABPTR)               0166 00306000
*   PICODES=PICODES|PISTR;          /* UPDATE PI CODES               */ 00307000
         OC    PICODES(2,AEDITCBR),PISTR(TTABPTR)                  0167 00308000
*   PICODEA=PICODEA|PISTRB;         /* UPDATE PI CODES 17 18 19      */ 00309000
         OC    PICODEA(1,AEDITCBR),PISTRB(TTABPTR)                 0168 00310000
*   SVCNUMS=SVCNUMS|SVCSTR;         /* UPDATE SVC NUMBERS            */ 00311000
         OC    SVCNUMS(32,AEDITCBR),SVCSTR(TTABPTR)                0169 00312000
*   GENFLAGS=GENFLAGS               /* UPDATE SYSTEM FLAGS           */ 00313000
*       |SYSTFLGS;                                                 0170 00314000
*                                                                  0170 00315000
         OC    GENFLAGS(1,AEDITCBR),SYSTFLGS(TTABPTR)              0170 00316000
*   /*****************************************************************/ 00317000
*   /*                                                               */ 00318000
*   /* LOOP THROUGH OVERLAY TABLE- IF VALUE EXISTS, OVERLAY CURRENT  */ 00319000
*   /* VALUE IN USR EID RANGE TABLE                                  */ 00320000
*   /*                                                               */ 00321000
*   /*****************************************************************/ 00322000
*                                                                  0171 00323000
*   DO I=1 TO 20;                   /* LOOP THRU ENTIRE TABLE        */ 00324000
         LA    @14,1                                               0171 00325000
         ST    @14,I(,TTABPTR)                                     0171 00326000
@DL00171 DS    0H                                                  0172 00327000
*     IF OVERSL(I)                  /* IF NON-BLANK VALUE IN         */ 00328000
*         ¬=BLANK1 THEN             /* OVERLTAB, THEN INSERT         */ 00329000
         L     @14,I(,TTABPTR)                                     0172 00330000
         LR    @10,@14                                             0172 00331000
         ALR   @10,@10                                             0172 00332000
         ST    @10,@TF00001                                        0172 00333000
         ALR   @10,TTABPTR                                         0172 00334000
         CLC   OVERSL-2(2,@10),BLANK1(TTABPTR)                     0172 00335000
         BE    @RF00172                                            0172 00336000
*       USRNGTAB(I,3                /* VALUE IN USR EID RANGE        */ 00337000
*           :4)=OVERSL(I);          /* TABLE UPPER RNG PORTION       */ 00338000
         SLA   @14,2                                               0173 00339000
         ALR   @14,AEDITCBR                                        0173 00340000
         LR    @10,TTABPTR                                         0173 00341000
         AL    @10,@TF00001                                        0173 00342000
         MVC   USRNGTAB-2(2,@14),OVERSL-2(@10)                     0173 00343000
*   END;                            /* NO VALUE OR AT USRMAX         */ 00344000
@RF00172 LA    @14,1                                               0174 00345000
         AL    @14,I(,TTABPTR)                                     0174 00346000
         ST    @14,I(,TTABPTR)                                     0174 00347000
         C     @14,@CF00130                                        0174 00348000
         BNH   @DL00171                                            0174 00349000
*   IF GCONTSW='1'B THEN            /* IF CONTINUE SWITCH ON,        */ 00350000
         TM    GCONTSW,B'00000100'                                 0175 00351000
         BO    @RT00175                                            0175 00352000
*     GOTO AMDRET3;                 /* RETURN FOR ANOTHER STMT       */ 00353000
*   GOTO AMDPFINN;                  /* SKIP ENTRY STATEMENT          */ 00354000
         B     AMDPFINN                                            0177 00355000
*AMDRET3:                                                          0178 00356000
*   RETURN;                         /* RETURN TO CALLER              */ 00357000
*                                                                  0178 00358000
*   /*****************************************************************/ 00359000
*   /*                                                               */ 00360000
*   /* THIS SUBROUTINE ACCOMPLISHES THE SORTING OF THE SIO, IO, AND  */ 00361000
*   /* USER PORTIONS OF AMDPRTAB. VALUES ARE ORGANIZED IN ASCENDING  */ 00362000
*   /* ORDER.                                                        */ 00363000
*   /*                                                               */ 00364000
*   /*****************************************************************/ 00365000
*                                                                  0179 00366000
*AMDPFIN:                                                          0179 00367000
*   ENTRY;                          /* ENTRY POINT                   */ 00368000
@EP00179 DS    0H                                                  0180 00369000
*AMDPFINN:                                                         0180 00370000
*   SORTSW=0;                       /* READY TO SORT TABLES--      0180 00371000
*                                      SCANNING COMPLETE             */ 00372000
AMDPFINN SLR   SORTSW,SORTSW                                       0180 00373000
*   IF SIOPTR=ADDR(DVADS1)          /* IF NO SIO DEVICE ADDRESSES    */ 00374000
*     THEN                          /* IN SIO TABLE, THEN            */ 00375000
         L     @14,SIOPTR(,TTABPTR)                                0181 00376000
         LA    @10,DVADS1(,AEDITCBR)                               0181 00377000
         CR    @14,@10                                             0181 00378000
         BE    @RT00181                                            0181 00379000
*     GOTO AMDPFIN1;                /* LOOK IN NEXT TABLE            */ 00380000
*   SRTTABPT=ADDR(DVADS1);          /* INITIALIZE TO TABL BEGNING    */ 00381000
         ST    @10,SRTTABPT(,TTABPTR)                              0183 00382000
*   INCRT=2;                        /* SIO TABLE 2 BYTES WIDE        */ 00383000
         LA    @06,2                                               0184 00384000
         ST    @06,INCRT(,TTABPTR)                                 0184 00385000
*   SORTPTR=SIOPTR-(2*INCRT);       /* CALC NEXT TO LAST SLOT        */ 00386000
         ALR   @06,@06                                             0185 00387000
         SLR   @14,@06                                             0185 00388000
         ST    @14,SORTPTR(,TTABPTR)                               0185 00389000
*   SAVETAB=ADDR(DVADS1);           /* SAVE TABLE BEGNING ADDRS      */ 00390000
         ST    @10,SAVETAB(,TTABPTR)                               0186 00391000
*   SORTSW=1;                       /* PROCESSING SIO ELEMENTS       */ 00392000
         LA    SORTSW,1                                            0187 00393000
*   RESPECIFY                                                      0188 00394000
*     DEVICE BASED(K);                                             0188 00395000
*AMDPDEV:                                                          0189 00396000
*   DO K=SRTTABPT TO SORTPTR        /* LOOP UNTIL HIT CURRENT        */ 00397000
*         BY INCRT;                 /* SLOT                          */ 00398000
AMDPDEV  L     K,SRTTABPT(,TTABPTR)                                0189 00399000
         B     @DE00189                                            0189 00400000
@DL00189 DS    0H                                                  0190 00401000
*     Y=K+INCRT;                    /* DEVICE1 NOW BELOW DEVICE      */ 00402000
         L     @14,INCRT(,TTABPTR)                                 0190 00403000
         LR    Y,K                                                 0190 00404000
         ALR   Y,@14                                               0190 00405000
*     IF DEVICE1(1:INCRT)           /* TWO VALUES IN TABLE OUT OF    */ 00406000
*         ¬>DEVICE(1:INCRT)         /* ORDER                         */ 00407000
*       THEN                        /* THEN                          */ 00408000
         BCTR  @14,0                                               0191 00409000
         EX    @14,@SC00655                                        0191 00410000
         BH    @RF00191                                            0191 00411000
*       DO;                         /* PLACE IN CORRECT ORDER        */ 00412000
*         SAVESLOT(1:INCRT)         /* SAVE VALUE TO BE SWITCHED     */ 00413000
*             =DEVICE(1:INCRT);                                    0193 00414000
         EX    @14,@SM00657                                        0193 00415000
*         DEVICE(1:INCRT)           /* SWITCH SECOND VALUE TO        */ 00416000
*             =DEVICE1(1:INCRT);    /* FIRST SLOT                    */ 00417000
         EX    @14,@SM00659                                        0194 00418000
*         DEVICE1(1:INCRT)          /* SWITCH SAVED FIRST VALUE      */ 00419000
*             =SAVESLOT(1:INCRT);   /* TO SECOND SLOT                */ 00420000
         EX    @14,@SM00661                                        0195 00421000
*         NEWADDR=K;                /* SAVE CURRENT SORT PTR         */ 00422000
         LR    NEWADDR,K                                           0196 00423000
*AMDPDEV1:                                                         0197 00424000
*         Z=NEWADDR-INCRT;          /* ELEM NOW ABOVE ELEM1          */ 00425000
AMDPDEV1 L     @14,INCRT(,TTABPTR)                                 0197 00426000
         LR    Z,NEWADDR                                           0197 00427000
         SLR   Z,@14                                               0197 00428000
*         IF NEWADDR=SAVETAB        /* IF AT TOP OF TABLE,           */ 00429000
*           THEN                    /* THEN                          */ 00430000
         C     NEWADDR,SAVETAB(,TTABPTR)                           0198 00431000
         BE    @RT00198                                            0198 00432000
*           GOTO AMDPDEV2;          /* READY TO SORT NEXT ELEMS      */ 00433000
*         IF ELEM1(1:INCRT)         /* IF ELEMS BELOW JUST-          */ 00434000
*             >ELEM(1:INCRT)        /* SWITCHED ONES ARE IN ORDER    */ 00435000
*           THEN                    /* THEN                          */ 00436000
         LR    @10,@14                                             0200 00437000
         BCTR  @10,0                                               0200 00438000
         EX    @10,@SC00663                                        0200 00439000
         BH    @RT00200                                            0200 00440000
*           GOTO AMDPDEV2;          /* READY TO SORT NEXT ELEMS      */ 00441000
*         SAVESLOT(1:INCRT)         /* SAVE VALUE TO BE SWITCHED     */ 00442000
*             =ELEM(1:INCRT);                                      0202 00443000
         EX    @10,@SM00665                                        0202 00444000
*         ELEM(1:INCRT)             /* SWITCH SECOND VALUE TO        */ 00445000
*             =ELEM1(1:INCRT);      /* FIRST SLOT                    */ 00446000
         EX    @10,@SM00667                                        0203 00447000
*         ELEM1(1:INCRT)            /* SWITCH SAVED FIRST VALUE      */ 00448000
*             =SAVESLOT(1:INCRT);   /* TO SECOND SLOT                */ 00449000
         EX    @10,@SM00669                                        0204 00450000
*         NEWADDR=NEWADDR           /* GO BACK ONE SLOT              */ 00451000
*             -INCRT;                                              0205 00452000
         SLR   NEWADDR,@14                                         0205 00453000
*         GOTO AMDPDEV1;            /* SORT REMAINING ELEMENTS       */ 00454000
         B     AMDPDEV1                                            0206 00455000
*AMDPDEV2:                                                         0207 00456000
*       END;                        /* END OF DO LOOP                */ 00457000
AMDPDEV2 DS    0H                                                  0208 00458000
*   END;                            /* READY TO LOOK AT NEXT TWO   0208 00459000
*                                      ELEMENTS FROM TOP             */ 00460000
@RF00191 AL    K,INCRT(,TTABPTR)                                   0208 00461000
@DE00189 C     K,SORTPTR(,TTABPTR)                                 0208 00462000
         BNH   @DL00189                                            0208 00463000
*AMDPFIN1:                                                         0209 00464000
*   IF SORTSW>1 THEN                /* Q/BEYOND SIO&IO TABL SORTS    */ 00465000
AMDPFIN1 C     SORTSW,@CF00046                                     0209 00466000
         BNH   @RF00209                                            0209 00467000
*     DO;                           /* IF SO, PROCEED AS FOLLOWS     */ 00468000
*       IF SORTSW=2 THEN            /* YES--Q/BEYOND USR TBL SORT    */ 00469000
         C     SORTSW,@CF00078                                     0211 00470000
         BE    @RT00211                                            0211 00471000
*         GOTO AMDPFIN3;            /* NO                            */ 00472000
*       GOTO AMDPSUM;               /* YES--READY FOR SUMMARY MSG    */ 00473000
         B     AMDPSUM                                             0213 00474000
*     END;                          /* SORTSW WAS > 1                */ 00475000
*AMDPFIN2:                                                         0215 00476000
*   IF IOPTR=ADDR(DVADS2)           /* IF NO IO DEVICE ADDRESSES     */ 00477000
*     THEN                          /* IN IO TABLE, THEN LOOK IN     */ 00478000
@RF00209 DS    0H                                                  0215 00479000
AMDPFIN2 L     @14,IOPTR(,TTABPTR)                                 0215 00480000
         LA    @10,DVADS2(,AEDITCBR)                               0215 00481000
         CR    @14,@10                                             0215 00482000
         BE    @RT00215                                            0215 00483000
*     GOTO AMDPFIN3;                /* NEXT TABLE(USR)               */ 00484000
*   SRTTABPT=ADDR(DVADS2);          /* INITIALIZE TO TABL BEGNING    */ 00485000
         ST    @10,SRTTABPT(,TTABPTR)                              0217 00486000
*   INCRT=2;                        /* IO TABLE 2 BYTES WIDE         */ 00487000
         LA    @06,2                                               0218 00488000
         ST    @06,INCRT(,TTABPTR)                                 0218 00489000
*   SORTPTR=IOPTR-(2*INCRT);        /* CALC NEXT TO LAST IO SLOT     */ 00490000
         LR    @04,@06                                             0219 00491000
         ALR   @04,@04                                             0219 00492000
         SLR   @14,@04                                             0219 00493000
         ST    @14,SORTPTR(,TTABPTR)                               0219 00494000
*   SAVETAB=ADDR(DVADS2);           /* SAVE TABLE BEGNING ADDRS      */ 00495000
         ST    @10,SAVETAB(,TTABPTR)                               0220 00496000
*   SORTSW=2;                       /* PROCESSING IO ELEMENTS        */ 00497000
         LR    SORTSW,@06                                          0221 00498000
*   GOTO AMDPDEV;                   /* BEGIN ACTUAL SORT OPERATN     */ 00499000
         B     AMDPDEV                                             0222 00500000
*AMDPFIN3:                                                         0223 00501000
*   IF USRCOUNT=0                   /* IF NO USR EIDS IN USR EID     */ 00502000
*     THEN                          /* RANGE TABLE, THEN             */ 00503000
AMDPFIN3 L     @14,USRCOUNT(,TTABPTR)                              0223 00504000
         LTR   @14,@14                                             0223 00505000
         BZ    @RT00223                                            0223 00506000
*     GOTO AMDPSUM;                 /* CONSTRUCT SUMMARY MESSAGE     */ 00507000
*   SRTTABPT=ADDR(USRTAB);          /* INITIALIZE TO TABL BEGNING    */ 00508000
         LA    @10,USRTAB(,AEDITCBR)                               0225 00509000
         ST    @10,SRTTABPT(,TTABPTR)                              0225 00510000
*   SORTPTR=SRTTABPT                /* CALCULATE ADDRS OF USER       */ 00511000
*       +(USRCOUNT*4);              /* CURRENT SLOT                  */ 00512000
         SLA   @14,2                                               0226 00513000
         ALR   @14,@10                                             0226 00514000
         ST    @14,SORTPTR(,TTABPTR)                               0226 00515000
*   INCRT=4;                        /* USR TABLE 4 BYTES WIDE        */ 00516000
         LA    @06,4                                               0227 00517000
         ST    @06,INCRT(,TTABPTR)                                 0227 00518000
*   SORTPTR=SORTPTR-(2*INCRT);      /* STOP SORTING HERE             */ 00519000
         ALR   @06,@06                                             0228 00520000
         SLR   @14,@06                                             0228 00521000
         ST    @14,SORTPTR(,TTABPTR)                               0228 00522000
*   SAVETAB=ADDR(USRTAB);           /* SAVE TABLE BEGNING ADDRS      */ 00523000
         ST    @10,SAVETAB(,TTABPTR)                               0229 00524000
*   SORTSW=3;                       /* PROCESSING USR ELEMENTS       */ 00525000
         LA    SORTSW,3                                            0230 00526000
*   GOTO AMDPDEV;                   /* BEGIN ACTUAL SORT OPERATN     */ 00527000
*                                                                  0231 00528000
         B     AMDPDEV                                             0231 00529000
*   /*****************************************************************/ 00530000
*   /*                                                               */ 00531000
*   /* THIS SMALL SUBROUTINE SETS UP THE OPERATION OF ALLOWING       */ 00532000
*   /* RESPECIFICATION OF A LINE CONTAINING ONE OR MORE ERRORS       */ 00533000
*   /* INPUTTED FROM THE CONSOLE. THE USER CHOOSES BETWEEN 1)        */ 00534000
*   /* RESPECIFYING THE PREVIOUS LINE, AND 2) REPLYING 'RUNEDIT' TO  */ 00535000
*   /* CAUSE EDIT TO CONTINUE PROCESSING USING ACCEPTABLE VALUES THUS*/ 00536000
*   /* FAR INPUTTED.                                                 */ 00537000
*   /*                                                               */ 00538000
*   /*****************************************************************/ 00539000
*                                                                  0232 00540000
*AMDPRESP:                                                         0232 00541000
*   FLMODE='0'B;                    /* NO LONGER IN FLUSH MODE       */ 00542000
AMDPRESP NI    FLMODE(AEDITCBR),B'01111111'                        0232 00543000
*   GCONTSW='1'B;                   /* CONTINUATION MSG WILL BE    0233 00544000
*                                      ISSUED                        */ 00545000
         OI    GCONTSW,B'00000100'                                 0233 00546000
*   RUNEDIT='1'B;                   /* SET ON RETRY-IN-PROCESS BT    */ 00547000
         OI    RUNEDIT(TTABPTR),B'00001000'                        0234 00548000
*   GEN(OI SWE,RESPC);              /* TURN ON RESPECIFY SW M4467    */ 00549000
         OI SWE,RESPC                                                   00550000
*   GOTO AMDRET3;                   /* RETURN TO AMDPRSCN            */ 00551000
*                                                                  0236 00552000
         B     AMDRET3                                             0236 00553000
*   /*****************************************************************/ 00554000
*   /*                                                               */ 00555000
*   /*                                                               */ 00556000
*   /*****************************************************************/ 00557000
*                                                                  0237 00558000
*AMDPST4:                                                          0237 00559000
*   IF GCONTSW='1'B THEN            /* GET ANOTHER STMT BY           */ 00560000
AMDPST4  TM    GCONTSW,B'00000100'                                 0237 00561000
         BO    @RT00237                                            0237 00562000
*     GOTO AMDRET3;                 /* RETURNING TO CALLER           */ 00563000
*   SCANBIT='0'B;                   /* READY FOR FIRST TIME SW       */ 00564000
         NI    SCANBIT(TTABPTR),B'11011111'                        0239 00565000
*   REG15=4;                        /* SET EDIT-NO-CONTINUE CODE     */ 00566000
         LA    REG15,4                                             0240 00567000
*   IF DDNAME¬=BLANK1 THEN          /* EXTERNAL DATA SET             */ 00568000
         CLC   DDNAME(8,AEDITCBR),BLANK1(TTABPTR)                  0241 00569000
         BNE   @RT00241                                            0241 00570000
*     GOTO AMDRET3;                 /* RETURN TO CALLER              */ 00571000
*   SYNMSGA=0;                      /* DUMP DATA SET, SO INPUT STREAM   00572000
*                                      MUST BE FLUSHED               */ 00573000
         SLR   @14,@14                                             0243 00574000
         ST    @14,SYNMSGA                                         0243 00575000
*   CALL AMDPRSYN;                  /* OUTPUT INPUT STREAM DATA    0244 00576000
*                                      FLUSHED MSG                   */ 00577000
         L     @15,ASYNTAX                                         0244 00578000
         BALR  @14,@15                                             0244 00579000
*   REG15=4;                        /* RESET EDIT NO GO CODE         */ 00580000
         LA    REG15,4                                             0245 00581000
*   GOTO AMDRET3;                   /* RETURN TO CALLER              */ 00582000
         B     AMDRET3                                             0246 00583000
*AMDPSUM:                                                          0247 00584000
*   IF GFLSHMOD='1'B THEN           /* IF AMDPRDMP IN FLUSH MODE     */ 00585000
AMDPSUM  TM    GFLSHMOD,B'10000000'                                0247 00586000
         BNO   @RF00247                                            0247 00587000
*     DO;                           /* DO THE FOLLOWING              */ 00588000
*       IF DDNAME¬=BLANK1 THEN      /* IF AN EXTERNAL DATA SET,      */ 00589000
         CLC   DDNAME(8,AEDITCBR),BLANK1(TTABPTR)                  0249 00590000
         BNE   @RT00249                                            0249 00591000
*         GOTO AMDPSUMM;            /* CONTINUE EDIT ANYWAY          */ 00592000
*       SCANBIT='0'B;               /* READY FOR FIRST TIME SW       */ 00593000
         NI    SCANBIT(TTABPTR),B'11011111'                        0251 00594000
*       REG15=4;                    /* BUT IF DUMP DATA SET,         */ 00595000
         LA    REG15,4                                             0252 00596000
*       GOTO AMDRET3;               /* STOP EDIT AND RETURN TO       */ 00597000
         B     AMDRET3                                             0253 00598000
*     END;                          /* CALLER                        */ 00599000
*   GOTO AMDPSUMM;                  /* OUTPUT EDIT SUMMARY MSG       */ 00600000
*                                                                  0255 00601000
         B     AMDPSUMM                                            0255 00602000
*   /*****************************************************************/ 00603000
*   /*                                                               */ 00604000
*   /* THE FOLLOWING SUBROUTINE CONSTRUCTS AND OUTPUTS THE EDIT      */ 00605000
*   /* MESSAGE THAT IDENTIFIES THE EDIT OPTIONS CHOSEN BY THE USER.  */ 00606000
*   /* IF DEFAULTS HAVE BEEN ASSIGNED, EXAMINATION OF THE CONTENTS OF*/ 00607000
*   /* THIS MESSAGE WILL ENABLE RECOGNITION OF THESE DEFAULTS.       */ 00608000
*   /*                                                               */ 00609000
*   /*****************************************************************/ 00610000
*                                                                  0256 00611000
*AMDPSUM1:                                                         0256 00612000
*   ENTRY;                          /* ENTRY POINT                   */ 00613000
@EP00256 DS    0H                                                  0257 00614000
*AMDPSUMM:                                                         0257 00615000
*   IF ALLS='1'B|SELS='1'B          /* IF SIO ALL OR SELECTIVE,      */ 00616000
*       |ALLI='1'B|SELI='1'B        /* OR IO ALL OR SELECTIVE,       */ 00617000
*       |ALLV='1'B|SELV='1'B THEN   /* OR SVC ALL OR SELECTIVE,      */ 00618000
AMDPSUMM TM    ALLS(AEDITCBR),B'11000000'                          0257 00619000
         BNZ   @RT00257                                            0257 00620000
         TM    ALLI(AEDITCBR),B'11000000'                          0257 00621000
         BNZ   @RT00257                                            0257 00622000
         TM    ALLV(AEDITCBR),B'11000000'                          0257 00623000
         BNZ   @RT00257                                            0257 00624000
*     GOTO AMDPSUMN;                /* CONSTRUCT SUMMARY MESSAGE     */ 00625000
*   IF ALLU='1'B|SELU='1'B          /* IF USR ALL OR SELECTIVE,      */ 00626000
*       |ALLP='1'B|SELP='1'B        /* OR PI ALL OR SELECTIVE,       */ 00627000
*       |EXT='1'B|DSP='1'B          /* OR EXT OR DSP,                */ 00628000
*       |SYS='1'B|RR='1'B           /* SYS OR RR               Y02014*/ 00629000
*       |RNIO='1'B|SRM='1'B THEN    /* RNIO OR SRM             Y02014*/ 00630000
         TM    ALLU(AEDITCBR),B'11000000'                          0259 00631000
         BNZ   @RT00259                                            0259 00632000
         TM    ALLP(AEDITCBR),B'11000000'                          0259 00633000
         BNZ   @RT00259                                            0259 00634000
         TM    EXT(AEDITCBR),B'11101110'                           0259 00635000
         BNZ   @RT00259                                            0259 00636000
*     GOTO AMDPSUMN;                /* CONSTRUCT SUMMARY MESSAGE     */ 00637000
*AMDSYSDF:                                                         0261 00638000
*   SYS='1'B;                       /* TURN ON SYSTEM ALL FLAG       */ 00639000
AMDSYSDF DS    0H                                                  0262 00640000
*   SYSM='1'B;                      /* AND SYSM ALL FLAG             */ 00641000
         OI    SYS(AEDITCBR),B'00110000'                           0262 00642000
*   ALLS='1'B;                      /* SYSTEM ALL FLAGS--SIO         */ 00643000
         OI    ALLS(AEDITCBR),B'10000000'                          0263 00644000
*   ALLI='1'B;                      /* IO                            */ 00645000
         OI    ALLI(AEDITCBR),B'10000000'                          0264 00646000
*   ALLV='1'B;                      /* SVC                           */ 00647000
         OI    ALLV(AEDITCBR),B'10000000'                          0265 00648000
*   ALLP='1'B;                      /* PI                            */ 00649000
         OI    ALLP(AEDITCBR),B'10000000'                          0266 00650000
*   EXT='1'B;                       /* EXT                           */ 00651000
*   DSP='1'B;                       /* DSP                           */ 00652000
*   RNIO='1'B;                      /* RNIO                    Y02014*/ 00653000
*   SRM='1'B;                       /* SRM                     Y02014*/ 00654000
*   RR='1'B;                        /* RR                      Y02014*/ 00655000
         OI    EXT(AEDITCBR),B'11001110'                           0271 00656000
*   IF DDNAME=BLANK1 THEN           /* IF DUMP DATA SET        Y02014*/ 00657000
         CLC   DDNAME(8,AEDITCBR),BLANK1(TTABPTR)                  0272 00658000
         BNE   @RF00272                                            0272 00659000
*     ALLU='1'B;                    /* SET ON USR=ALL IND      Y02014*/ 00660000
         OI    ALLU(AEDITCBR),B'10000000'                          0273 00661000
*AMDPSUMN:                                                         0274 00662000
*   IF DDNAME=BLANK1 THEN           /* IF DUMP DATA SET        Y02014*/ 00663000
@RF00272 DS    0H                                                  0274 00664000
AMDPSUMN CLC   DDNAME(8,AEDITCBR),BLANK1(TTABPTR)                  0274 00665000
         BNE   @RF00274                                            0274 00666000
*     DO;                                                          0275 00667000
*       STOPTIME=BLANK1;            /* BLANK STOP TIME         Y02014*/ 00668000
         MVC   STOPTIME(12,AEDITCBR),BLANK1(TTABPTR)               0276 00669000
*       STARTIME=BLANK1;            /* BLANK START TIME        Y02014*/ 00670000
         MVC   STARTIME(12,AEDITCBR),BLANK1(TTABPTR)               0277 00671000
*       GEN(OI    SWC,SEGRD);       /* INDICATE READ FOR EDIT BIT    */ 00672000
         OI    SWC,SEGRD                                                00673000
*       GEN(NI SWC,255-EDITSW);     /* NO ADJUST NEEDED        Y02014*/ 00674000
         NI SWC,255-EDITSW                                              00675000
*     END;                                                         0280 00676000
*   ELSE                                                           0281 00677000
*     GEN(BRREAD ADJUST);           /* FREE SPACE              Y02014*/ 00678000
         B     @RC00274                                            0281 00679000
@RF00274 DS    0H                                                  0281 00680000
         BRREAD ADJUST                                                  00681000
*   IF USEREXIT=BLANK1 THEN         /* NO USER EXIT            Y02014*/ 00682000
@RC00274 CLC   USEREXIT(8,AEDITCBR),BLANK1(TTABPTR)                0282 00683000
         BNE   @RF00282                                            0282 00684000
*     EOF='0'B;                     /* NO EOF EXIT             Y02014*/ 00685000
         NI    EOF(AEDITCBR),B'11111110'                           0283 00686000
*AMDPSUN1:                                                         0284 00687000
*   SYNMSGA=ADDR(AD11);             /* ADDRS OF ADDRS OF MESSAGE     */ 00688000
@RF00282 DS    0H                                                  0284 00689000
AMDPSUN1 L     @14,@CA00319                                        0284 00690000
         LA    @14,AD11-AMDPRS00(,@14)                             0284 00691000
         ST    @14,SYNMSGA                                         0284 00692000
*   SUMSGBUF=ERRBUF;                /* MOVE MSG 11 INTO BUFFER       */ 00693000
         L     @14,MSGADDR(,@14)                                   0285 00694000
         MVC   SUMSGBUF(80),ERRBUF(@14)                            0285 00695000
*   ADSUM=ADDR(SUMSGBUF);           /* HOLDS ADDRS OF SUM MSG BUF    */ 00696000
         LA    @14,SUMSGBUF                                        0286 00697000
         ST    @14,ADSUM                                           0286 00698000
*   SYNMSGA=ADDR(ADSUM);            /* ADDRS OF ADDRS OF SUM MSG   0287 00699000
*                                      SIMULATED WTO LIST            */ 00700000
         LA    @14,ADSUM                                           0287 00701000
         ST    @14,SYNMSGA                                         0287 00702000
*   SUMVAL=4+34;                    /* INITIALIZE MSG PTR--4 BYTES +    00703000
*                                      LENGTH OF MSG 11              */ 00704000
         LA    SUMVAL,38                                           0288 00705000
*   RTDSCDES=SUMSGBUF(SUMVAL        /* SAVE ROUTER AND DESCRIPTOR    */ 00706000
*       :SUMVAL+3);                 /* CODES                         */ 00707000
         LA    @14,SUMSGBUF-1(SUMVAL)                              0289 00708000
         MVC   RTDSCDES(4),0(@14)                                  0289 00709000
*   SUMSGID=SUMSGBUF(5              /* SAVE MESSAGE ID               */ 00710000
*       :12);                                                      0290 00711000
         MVC   SUMSGID(8),SUMSGBUF+4                               0290 00712000
*   PATHSW=0;                       /* NO KEYWORDS YET PROCESSED     */ 00713000
         SLR   @14,@14                                             0291 00714000
         ST    @14,PATHSW                                          0291 00715000
*   IF USEREXIT=BLANK1 THEN         /* NO USER EXIT INFO TO          */ 00716000
         CLC   USEREXIT(8,AEDITCBR),BLANK1(TTABPTR)                0292 00717000
         BE    @RT00292                                            0292 00718000
*     GOTO AMDPSUM2;                /* PRINT OUT                     */ 00719000
*   NOWSW=1;                        /* KW TO BE PROCESSED            */ 00720000
         LA    NOWSW,1                                             0294 00721000
*   SUMSGBUF(SUMVAL                 /* MOVE IN EXIT=                 */ 00722000
*       :SUMVAL+4)=EXITCON;                                        0295 00723000
         LA    @14,SUMSGBUF-1(SUMVAL)                              0295 00724000
         MVC   0(5,@14),EXITCON                                    0295 00725000
*   SUMVAL=SUMVAL+5;                /* UPDATE BUFFER COUNT           */ 00726000
         AL    SUMVAL,@CF00086                                     0296 00727000
*   VAL=8;                          /* LENGTH OF EXIT NAME           */ 00728000
         MVC   VAL(4),@CF00033                                     0297 00729000
*   GOTO AMDPFIT;                   /* Q/WILL VALUE OVERFLOW LINE    */ 00730000
         B     AMDPFIT                                             0298 00731000
*AMDPSUM2:                                                         0299 00732000
*   IF DDNAME=BLANK1 THEN           /* NO DDNAME INFO TO PRINT       */ 00733000
AMDPSUM2 CLC   DDNAME(8,AEDITCBR),BLANK1(TTABPTR)                  0299 00734000
         BE    @RT00299                                            0299 00735000
*     GOTO AMDPSUM3;                                               0300 00736000
*   NOWSW=2;                        /* KW TO BE PROCESSED            */ 00737000
         LA    NOWSW,2                                             0301 00738000
*   VAL=15;                         /* KW+VALUE LENGTH               */ 00739000
         MVC   VAL(4),@CF00032                                     0302 00740000
*   GOTO AMDPFIT;                   /* Q/WILL VALUE OVERFLOW LINE    */ 00741000
         B     AMDPFIT                                             0303 00742000
*AMDPSUM3:                                                         0304 00743000
*   IF STARTIME=BLANK1 THEN         /* NO START TIME VALUE INFO      */ 00744000
AMDPSUM3 CLC   STARTIME(12,AEDITCBR),BLANK1(TTABPTR)               0304 00745000
         BE    @RT00304                                            0304 00746000
*     GOTO AMDPSUM4;                /* TO PRINT OUT                  */ 00747000
*   NOWSW=3;                        /* KW TO BE PROCESSED            */ 00748000
         LA    NOWSW,3                                             0306 00749000
*   VAL=20;                         /* KW+VALUE LENGTH               */ 00750000
         MVC   VAL(4),@CF00130                                     0307 00751000
*   GOTO AMDPFIT;                   /* Q/WILL VALUE OVERFLOW LINE    */ 00752000
         B     AMDPFIT                                             0308 00753000
*AMDPSUM4:                                                         0309 00754000
*   IF STOPTIME=BLANK1 THEN         /* NO STOP TIME VALUE INFO       */ 00755000
AMDPSUM4 CLC   STOPTIME(12,AEDITCBR),BLANK1(TTABPTR)               0309 00756000
         BE    @RT00309                                            0309 00757000
*     GOTO AMDPSUM5;                /* TO PRINT OUT                  */ 00758000
*   NOWSW=4;                        /* KW TO BE PROCESSED            */ 00759000
         LA    NOWSW,4                                             0311 00760000
*   VAL=19;                         /* KW+VALUE LENGTH               */ 00761000
         MVC   VAL(4),@CF00538                                     0312 00762000
*   GOTO AMDPFIT;                   /* Q/WILL VALUE OVERFLOW LINE    */ 00763000
         B     AMDPFIT                                             0313 00764000
*AMDPSUM5:                                                         0314 00765000
*   IF JOBNAMES(1)=BLANK1           /* NO JOBNAMES TO PRINT OUT      */ 00766000
*     THEN                          /* SO                            */ 00767000
AMDPSUM5 CLC   JOBNAMES(8,AEDITCBR),BLANK1(TTABPTR)                0314 00768000
         BE    @RT00314                                            0314 00769000
*     GOTO AMDPSUM6;                /* GO CHECK TCB ADDRESSES        */ 00770000
*   NOWSW=5;                        /* KW TO BE PROCESSED            */ 00771000
         LA    NOWSW,5                                             0316 00772000
*   VAL=18;                         /* KW+VALUE LENGTH               */ 00773000
         MVC   VAL(4),@CF00459                                     0317 00774000
*   JOBCT=1;                        /* INDEX INITIALIZED TO 1        */ 00775000
         MVC   JOBCT(4),@CF00046                                   0318 00776000
*   GOTO AMDPFIT;                   /* Q/WILL VALUE OVERFLOW LINE    */ 00777000
         B     AMDPFIT                                             0319 00778000
*AMDPSUM6:                                                         0320 00779000
*   IF ASCBADDR(1)=0                /* NO ASCB ADDRS TO        Y02014*/ 00780000
*     THEN                          /* PRINT SO                Y02014*/ 00781000
AMDPSUM6 L     @14,ASCBADDR(,AEDITCBR)                             0320 00782000
         LTR   @14,@14                                             0320 00783000
         BZ    @RT00320                                            0320 00784000
*     GOTO AMDPSUM7;                /* GO CHECK SIOFLAGS             */ 00785000
*   NOWSW=6;                        /* KW TO BE PROCESSED            */ 00786000
         LA    NOWSW,6                                             0322 00787000
*   VAL=15;                         /* KW+VALUE LENGTH         Y02014*/ 00788000
         MVC   VAL(4),@CF00032                                     0323 00789000
*   ASCBCT=1;                       /* INDEX INITIALIZED TO 1        */ 00790000
         MVC   ASCBCT(4),@CF00046                                  0324 00791000
*   GOTO AMDPFIT;                   /* Q/WILL VALUE OVERFLOW LINE    */ 00792000
         B     AMDPFIT                                             0325 00793000
*AMDPSUM7:                                                         0326 00794000
*   IF ALLS='0'B                    /* NEITHER SIO=ALL               */ 00795000
*       &SELS='0'B THEN             /* NOR SIO=SEL                   */ 00796000
AMDPSUM7 TM    ALLS(AEDITCBR),B'11000000'                          0326 00797000
         BZ    @RT00326                                            0326 00798000
*     GOTO AMDPSUM8;                /* IN EFFECT                     */ 00799000
*   NOWSW=7;                        /* KW TO BE PROCESSED            */ 00800000
@RF00326 LA    NOWSW,7                                             0328 00801000
*   VAL=12;                         /* KW+VALUE LENGTH               */ 00802000
         MVC   VAL(4),@CF00075                                     0329 00803000
*   GOTO AMDPFIT;                   /* Q/WILL VALUE OVERFLOW LINE    */ 00804000
         B     AMDPFIT                                             0330 00805000
*AMDPSUM8:                                                         0331 00806000
*   IF ALLI='0'B                    /* NEITHER IO=ALL                */ 00807000
*       &SELI='0'B THEN             /* NOR IO=SEL                    */ 00808000
AMDPSUM8 TM    ALLI(AEDITCBR),B'11000000'                          0331 00809000
         BZ    @RT00331                                            0331 00810000
*     GOTO AMDPSUM9;                /* IN EFFECT                     */ 00811000
*   NOWSW=8;                        /* KW TO BE PROCESSED            */ 00812000
@RF00331 LA    NOWSW,8                                             0333 00813000
*   VAL=12;                         /* KW+VALUE LENGTH               */ 00814000
         MVC   VAL(4),@CF00075                                     0334 00815000
*   GOTO AMDPFIT;                   /* Q/WILL VALUE OVERFLOW LINE    */ 00816000
         B     AMDPFIT                                             0335 00817000
*AMDPSUM9:                                                         0336 00818000
*   IF ALLV='0'B                    /* NEITHER SVC=ALL               */ 00819000
*       &SELV='0'B THEN             /* NOR SVC=SEL                   */ 00820000
AMDPSUM9 TM    ALLV(AEDITCBR),B'11000000'                          0336 00821000
         BZ    @RT00336                                            0336 00822000
*     GOTO AMDPSUMA;                /* IN EFFECT                     */ 00823000
*   NOWSW=9;                        /* KW TO BE PROCESSED            */ 00824000
@RF00336 LA    @14,9                                               0338 00825000
         LR    NOWSW,@14                                           0338 00826000
*   VAL=9;                          /* KW+VALUE LENGTH               */ 00827000
         ST    @14,VAL                                             0339 00828000
*   GOTO AMDPFIT;                   /* Q/WILL VALUE OVERFLOW LINE    */ 00829000
         B     AMDPFIT                                             0340 00830000
*AMDPSUMA:                                                         0341 00831000
*   IF ALLP='0'B                    /* NEITHER PI=ALL                */ 00832000
*       &SELP='0'B THEN             /* NOR PI=SEL                    */ 00833000
AMDPSUMA TM    ALLP(AEDITCBR),B'11000000'                          0341 00834000
         BZ    @RT00341                                            0341 00835000
*     GOTO AMDPSUMB;                /* IN EFFECT                     */ 00836000
*   NOWSW=10;                       /* KW TO BE PROCESSED            */ 00837000
@RF00341 LA    NOWSW,10                                            0343 00838000
*   VAL=8;                          /* KW+VALUE LENGTH               */ 00839000
         MVC   VAL(4),@CF00033                                     0344 00840000
*   GOTO AMDPFIT;                   /* Q/WILL VALUE OVERFLOW LINE    */ 00841000
         B     AMDPFIT                                             0345 00842000
*AMDPSUMB:                                                         0346 00843000
*   IF ALLU='0'B                    /* NEITHER USR=ALL               */ 00844000
*       &SELU='0'B THEN             /* NOR USR=SEL                   */ 00845000
AMDPSUMB TM    ALLU(AEDITCBR),B'11000000'                          0346 00846000
         BZ    @RT00346                                            0346 00847000
*     GOTO AMDPSUMC;                /* IN EFFECT                     */ 00848000
*   NOWSW=11;                       /* KW TO BE PROCESSED            */ 00849000
@RF00346 LA    NOWSW,11                                            0348 00850000
*   VAL=9;                          /* KW+VALUE LENGTH               */ 00851000
         MVC   VAL(4),@CF00167                                     0349 00852000
*   GOTO AMDPFIT;                   /* Q/WILL VALUE OVERFLOW LINE    */ 00853000
         B     AMDPFIT                                             0350 00854000
*AMDPSUMC:                                                         0351 00855000
*   IF EXT='0'B THEN                /* NO EXT INDICATION TO BE       */ 00856000
AMDPSUMC TM    EXT(AEDITCBR),B'10000000'                           0351 00857000
         BZ    @RT00351                                            0351 00858000
*     GOTO AMDPSUMF;                /* PRINTED OUT             Y02014*/ 00859000
*   NOWSW=12;                       /* KW TO BE PROCESSED            */ 00860000
         LA    NOWSW,12                                            0353 00861000
*   VAL=3;                          /* KW+VALUE LENGTH               */ 00862000
         MVC   VAL(4),@CF00169                                     0354 00863000
*   GOTO AMDPFIT;                   /* Q/WILL VALUE OVERFLOW LINE    */ 00864000
         B     AMDPFIT                                             0355 00865000
*AMDPSUMF:                                                         0356 00866000
*   IF RNIO='0'B THEN               /* NO RNIO IND TO BE       Y02014*/ 00867000
AMDPSUMF TM    RNIO(AEDITCBR),B'00001000'                          0356 00868000
         BZ    @RT00356                                            0356 00869000
*     GOTO AMDPSUMG;                /* PRINTED OUT             Y02014*/ 00870000
*   NOWSW=15;                       /* KEYWD                   Y02014*/ 00871000
         LA    NOWSW,15                                            0358 00872000
*   VAL=4;                          /* KW+VALUE LENGTH         Y02014*/ 00873000
         MVC   VAL(4),@CF00099                                     0359 00874000
*   GOTO AMDPFIT;                   /* OVERFLOW LINE           Y02014*/ 00875000
         B     AMDPFIT                                             0360 00876000
*AMDPSUMG:                                                         0361 00877000
*   IF SRM='0'B THEN                /* NO SRM IND TO BE        Y02014*/ 00878000
AMDPSUMG TM    SRM(AEDITCBR),B'00000100'                           0361 00879000
         BZ    @RT00361                                            0361 00880000
*     GOTO AMDPSUMH;                /* PRINTED OUT             Y02014*/ 00881000
*   NOWSW=16;                       /* KEYWORD                 Y02014*/ 00882000
         LA    NOWSW,16                                            0363 00883000
*   VAL=3;                          /* KW+VALUE LENGTH         Y02014*/ 00884000
         MVC   VAL(4),@CF00169                                     0364 00885000
*   GOTO AMDPFIT;                   /* OVERFLOW LINE           Y02014*/ 00886000
         B     AMDPFIT                                             0365 00887000
*AMDPSUMH:                                                         0366 00888000
*   IF RR='0'B THEN                 /* NO RR IND TO BE         Y02014*/ 00889000
AMDPSUMH TM    RR(AEDITCBR),B'00000010'                            0366 00890000
         BZ    @RT00366                                            0366 00891000
*     GOTO AMDPSUMI;                /* PRINTED OUT             Y02014*/ 00892000
*   NOWSW=17;                       /* KEYWORD                 Y02014*/ 00893000
         LA    NOWSW,17                                            0368 00894000
*   VAL=2;                          /* KW+VALUE LENGTH         Y02014*/ 00895000
         MVC   VAL(4),@CF00078                                     0369 00896000
*   GOTO AMDPFIT;                   /* OVERFLOW LINE           Y02014*/ 00897000
         B     AMDPFIT                                             0370 00898000
*AMDPSUMI:                                                         0371 00899000
*   IF EOF='0'B THEN                /* NO EOF IND TO BE        Y02014*/ 00900000
AMDPSUMI TM    EOF(AEDITCBR),B'00000001'                           0371 00901000
         BZ    @RT00371                                            0371 00902000
*     GOTO AMDPSUMD;                /* PRINTED OUT             Y02014*/ 00903000
*   NOWSW=18;                       /* KEYWORD                 Y02014*/ 00904000
         LA    NOWSW,18                                            0373 00905000
*   VAL=8;                          /* KW+VALUE LENGTH         Y02014*/ 00906000
         MVC   VAL(4),@CF00033                                     0374 00907000
*   GOTO AMDPFIT;                   /* OVERFLOW LINE           Y02014*/ 00908000
         B     AMDPFIT                                             0375 00909000
*AMDPSUMD:                                                         0376 00910000
*   IF DSP='0'B THEN                /* NO DSP INDICATION TO BE       */ 00911000
AMDPSUMD TM    DSP(AEDITCBR),B'01000000'                           0376 00912000
         BZ    @RT00376                                            0376 00913000
*     GOTO AMDPSUME;                /* PRINTED OUT                   */ 00914000
*   NOWSW=13;                       /* KW TO BE PROCESSED            */ 00915000
         LA    NOWSW,13                                            0378 00916000
*   VAL=3;                          /* KW+VALUE LENGTH               */ 00917000
         MVC   VAL(4),@CF00169                                     0379 00918000
*   GOTO AMDPFIT;                   /* Q/WILL VALUE OVERFLOW LINE    */ 00919000
         B     AMDPFIT                                             0380 00920000
*AMDPSUME:                                                         0381 00921000
*   IF PATHSW=0 THEN                /* IF NO PORTION OF LINE LEFT    */ 00922000
AMDPSUME L     @14,PATHSW                                          0381 00923000
         LTR   @14,@14                                             0381 00924000
         BZ    @RT00381                                            0381 00925000
*     GOTO AMDPNOWE;                /* TO WRITE OUT, RETURN          */ 00926000
*   NOWSW=14;                       /* PROCESSING TO BE DONE         */ 00927000
         LA    NOWSW,14                                            0383 00928000
*   GOTO AMDPLNMG;                  /* WRITE OUT LINE PORTION        */ 00929000
*                                                                  0384 00930000
         B     AMDPLNMG                                            0384 00931000
*   /*****************************************************************/ 00932000
*   /*                                                               */ 00933000
*   /* THIS SUBROUTINE DETERMINES 1) WHEN BLANKS SHOULD BE SUP-      */ 00934000
*   /* PRESSED AT THE END OF A VALUE- 2) WHEN A COMMA IS NEEDED      */ 00935000
*   /* FOLLOWING A KEYWORD OR VALUE- 2) WHEN A RIGHT PARENTHE- SIS IS*/ 00936000
*   /* NEEDED TO COMPLETE A LINE- 3) AND TO WHICH PROCESSING         */ 00937000
*   /* SUBROUTINE TO BRANCH. OUTPUTTING OF LINES OF SUMMARY MESSAGE  */ 00938000
*   /* IS ACCOMPLISHED HERE.                                         */ 00939000
*   /*                                                               */ 00940000
*   /*****************************************************************/ 00941000
*                                                                  0385 00942000
*AMDPFIT:                                                          0385 00943000
*   IF NOWSW=1 THEN                 /* IF PROCESSING EXIT NAME,      */ 00944000
AMDPFIT  C     NOWSW,@CF00046                                      0385 00945000
         BNE   @RF00385                                            0385 00946000
*     DO;                           /* THEN DO THE FOLLOWING         */ 00947000
*       COMP8=USEREXIT;             /* MOVE EXIT NM INTO COMPAREA    */ 00948000
         MVC   COMP8(8,TTABPTR),USEREXIT(AEDITCBR)                 0387 00949000
*       GOTO BLNKLAB;               /* CALCULATE # BLANKS IN VAL     */ 00950000
         B     BLNKLAB                                             0388 00951000
*     END;                                                         0389 00952000
*   IF NOWSW=2 THEN                 /* IF PROCESSING DDNAME, THEN    */ 00953000
@RF00385 C     NOWSW,@CF00078                                      0390 00954000
         BNE   @RF00390                                            0390 00955000
*     DO;                           /* DO THE FOLLOWING              */ 00956000
*       COMP8=DDNAME;               /* MOVE DDNAME INTO COMPAREA     */ 00957000
         MVC   COMP8(8,TTABPTR),DDNAME(AEDITCBR)                   0392 00958000
*       GOTO BLNKLAB;               /* CALCULATE # BLNKS IN VAL      */ 00959000
         B     BLNKLAB                                             0393 00960000
*     END;                                                         0394 00961000
*   IF NOWSW¬=5 THEN                /* IF NOT PROCESSING JOBNS,      */ 00962000
@RF00390 C     NOWSW,@CF00086                                      0395 00963000
         BNE   @RT00395                                            0395 00964000
*     GOTO CKPATH;                  /* CONTINUE NORMAL PROCS'ING     */ 00965000
*   COMP8=JOBNAMES(JOBCT);          /* MOVE JOBNAME INTO COMPAREA    */ 00966000
*                                                                  0397 00967000
         L     @14,JOBCT                                           0397 00968000
         SLA   @14,3                                               0397 00969000
         ALR   @14,AEDITCBR                                        0397 00970000
         MVC   COMP8(8,TTABPTR),JOBNAMES-8(@14)                    0397 00971000
*   /*****************************************************************/ 00972000
*   /*                                                               */ 00973000
*   /* CALCULATE NUMBER OF BLANKS IN SLOT AND ADJUST 'VAL'.          */ 00974000
*   /*                                                               */ 00975000
*   /*****************************************************************/ 00976000
*                                                                  0398 00977000
*BLNKLAB:                                                          0398 00978000
*   DO I=2 TO 8 BY 1;               /* LOOP THROUGH VALUE            */ 00979000
BLNKLAB  LA    @14,2                                               0398 00980000
         ST    @14,I(,TTABPTR)                                     0398 00981000
@DL00398 DS    0H                                                  0399 00982000
*     IF COMP8(I)=' ' THEN          /* IF CHAR SLOT IS BLANK,        */ 00983000
         L     @14,I(,TTABPTR)                                     0399 00984000
         ALR   @14,TTABPTR                                         0399 00985000
         CLI   COMP8-1(@14),C' '                                   0399 00986000
         BE    @RT00399                                            0399 00987000
*       GOTO CALC;                  /* ADJUST VALUE LENGTH           */ 00988000
*   END;                                                           0401 00989000
         LA    @14,1                                               0401 00990000
         AL    @14,I(,TTABPTR)                                     0401 00991000
         ST    @14,I(,TTABPTR)                                     0401 00992000
         C     @14,@CF00033                                        0401 00993000
         BNH   @DL00398                                            0401 00994000
*CALC:                                                             0402 00995000
*   VAL=VAL-(9-I);                  /* ADJUST VALUE LENGTH           */ 00996000
CALC     L     @14,I(,TTABPTR)                                     0402 00997000
         SL    @14,@CF00167                                        0402 00998000
         AL    @14,VAL                                             0402 00999000
         ST    @14,VAL                                             0402 01000000
*CKPATH:                                                           0403 01001000
*   IF PATHSW=0 THEN                /* IF NO PORTION OF LINE LEFT    */ 01002000
CKPATH   L     @14,PATHSW                                          0403 01003000
         LTR   @14,@14                                             0403 01004000
         BNZ   @RF00403                                            0403 01005000
*     GOTO BRNWTAB(NOWSW);          /* TO BE WRITTEN, BRANCH TO    0404 01006000
*                                      APPROPRIATE KEYWORD     SUBRTN*/ 01007000
         LR    @14,NOWSW                                           0404 01008000
         SLA   @14,2                                               0404 01009000
         L     @14,BRNWTAB-4(@14)                                  0404 01010000
         BR    @14                                                 0404 01011000
*   IF SUMVAL+VAL>71 THEN           /* Q/WILL VALUE OVERFLOW LINE    */ 01012000
@RF00403 LR    @14,SUMVAL                                          0405 01013000
         AL    @14,VAL                                             0405 01014000
         C     @14,@CF00576                                        0405 01015000
         BH    @RT00405                                            0405 01016000
*     GOTO AMDPNPRN;                /* YES                           */ 01017000
*   SUMSGBUF(SUMVAL)=',';           /* NO, INSERT COMMA FOLLOWING  0407 01018000
*                                      LAST KEYWORD OR VALUE         */ 01019000
         LA    @14,SUMSGBUF-1(SUMVAL)                              0407 01020000
         MVI   0(@14),C','                                         0407 01021000
*   SUMVAL=SUMVAL+1;                /* ADD ONE FOR COMMA             */ 01022000
         AL    SUMVAL,@CF00046                                     0408 01023000
*   GOTO BRNWTAB(NOWSW);            /* BRANCH TO APPROPRIATE KEYWORD    01024000
*                                      SUBROUTINE                    */ 01025000
         LR    @14,NOWSW                                           0409 01026000
         SLA   @14,2                                               0409 01027000
         L     @14,BRNWTAB-4(@14)                                  0409 01028000
         BR    @14                                                 0409 01029000
*AMDPNPRN:                                                         0410 01030000
*   IF PRNSW='1'B THEN              /* Q/RIGHT PAREN NEEDED          */ 01031000
AMDPNPRN TM    PRNSW(TTABPTR),B'00000100'                          0410 01032000
         BNO   @RF00410                                            0410 01033000
*     DO;                           /* YES                           */ 01034000
*       SUMSGBUF(SUMVAL)            /* INSERT RIGHT PAREN            */ 01035000
*           =')';                                                  0412 01036000
         LA    @14,SUMSGBUF-1(SUMVAL)                              0412 01037000
         MVI   0(@14),C')'                                         0412 01038000
*       SUMVAL=SUMVAL               /* ADD ONE FOR RIGHT PAREN       */ 01039000
*           +1;                                                    0413 01040000
         AL    SUMVAL,@CF00046                                     0413 01041000
*     END;                                                         0414 01042000
*AMDPLNMG:                                                         0415 01043000
*   SUMSGBUF(1:2)                   /* INSERT MSG LNGTH INTO WTO     */ 01044000
*       =SUMVAL-1;                  /* LIST SIMULATION               */ 01045000
@RF00410 DS    0H                                                  0415 01046000
AMDPLNMG LR    @14,SUMVAL                                          0415 01047000
         BCTR  @14,0                                               0415 01048000
         STCM  @14,3,SUMSGBUF                                      0415 01049000
*   SUMSGBUF(SUMVAL:SUMVAL          /* MOVE ROUTER/DESCRIPTOR        */ 01050000
*       +3)=RTDSCDES;               /* CODES IN FOLLOWING MSG        */ 01051000
         LA    @14,SUMSGBUF-1(SUMVAL)                              0416 01052000
         MVC   0(4,@14),RTDSCDES                                   0416 01053000
*   GNOSTDMG='1'B;                  /* PREDEDING SYNTAX MESSAGE NOT     01054000
*                                      TO BE OUTPUTTED               */ 01055000
         OI    GNOSTDMG,B'00010000'                                0417 01056000
*   CALL AMDPRSYN;                  /* OUTPUT SUMMARY LINE           */ 01057000
         L     @15,ASYNTAX                                         0418 01058000
         BALR  @14,@15                                             0418 01059000
*   SUMSGBUF(5:12)                  /* MOVE MSG ID INTO BEGNING      */ 01060000
*       =SUMSGID;                   /* OF MESSAGE                    */ 01061000
         MVC   SUMSGBUF+4(8),SUMSGID                               0419 01062000
*   SUMSGBUF(13)=' ';               /* BEGIN BLANKING BUFR M1738     */ 01063000
         MVI   SUMSGBUF+12,C' '                                    0420 01064000
*   SUMSGBUF(14:SUMVAL)             /* BLANK REST OF BUFR M1738      */ 01065000
*       =SUMSGBUF(14:SUMVAL-1);     /* M1738                         */ 01066000
         LR    @14,SUMVAL                                          0421 01067000
         SL    @14,@CF00378                                        0421 01068000
         MVC   @TS00001(80),SUMSGBUF+13                            0421 01069000
         EX    @14,@SM00678                                        0421 01070000
*   SUMVAL=4+9;                     /* RE-INITIALIZE BUFFER CNT TO 0422 01071000
*                                      BEYOND MESSAGE ID             */ 01072000
         LA    SUMVAL,13                                           0422 01073000
*   PATHSW=0;                       /* NO DATA IN LINE TO OUTPUT     */ 01074000
         SLR   @14,@14                                             0423 01075000
         ST    @14,PATHSW                                          0423 01076000
*   PRNSW='0'B;                     /* TURN OFF PAREN NEEDED SW      */ 01077000
         NI    PRNSW(TTABPTR),B'11111011'                          0424 01078000
*   GOTO BRNWTAB(NOWSW);            /* BRANCH TO APPROPRIATE KEYWORD    01079000
*                                      SUBROUTINE                    */ 01080000
         LR    @14,NOWSW                                           0425 01081000
         SLA   @14,2                                               0425 01082000
         L     @14,BRNWTAB-4(@14)                                  0425 01083000
         BR    @14                                                 0425 01084000
*AMDPNOW1:                                                         0426 01085000
*   PATHSW=1;                       /* EXIT NAME BEING PROCESSED     */ 01086000
AMDPNOW1 MVC   PATHSW(4),@CF00046                                  0426 01087000
*   SUMSGBUF(SUMVAL:SUMVAL          /* MOVE IN 'EXIT='               */ 01088000
*       +VAL-1)=USEREXIT;                                          0427 01089000
         LA    @14,SUMSGBUF-1(SUMVAL)                              0427 01090000
         L     @10,VAL                                             0427 01091000
         LR    @06,@10                                             0427 01092000
         BCTR  @06,0                                               0427 01093000
         EX    @06,@SM00681                                        0427 01094000
*   SUMVAL=SUMVAL+VAL;              /* UPDATE BUFFER COUNT           */ 01095000
         ALR   SUMVAL,@10                                          0428 01096000
*   GOTO AMDPSUM2;                  /* CHECK DDNAME SLOT             */ 01097000
         B     AMDPSUM2                                            0429 01098000
*AMDPNOW2:                                                         0430 01099000
*   PATHSW=2;                       /* DDNAME BEING PROCESSED        */ 01100000
AMDPNOW2 MVC   PATHSW(4),@CF00078                                  0430 01101000
*   SUMSGBUF(SUMVAL:SUMVAL          /* MOVE IN 'DDNAME='             */ 01102000
*       +6)=DDCON;                                                 0431 01103000
         LA    @14,SUMSGBUF-1(SUMVAL)                              0431 01104000
         MVC   0(7,@14),DDCON                                      0431 01105000
*   SUMSGBUF(SUMVAL+7               /* MOVE IN DDNAME                */ 01106000
*       :SUMVAL+VAL-1)=DDNAME;                                     0432 01107000
         LA    @14,SUMSGBUF+6(SUMVAL)                              0432 01108000
         L     @10,VAL                                             0432 01109000
         LR    @06,@10                                             0432 01110000
         SL    @06,@CF00033                                        0432 01111000
         EX    @06,@SM00683                                        0432 01112000
*   SUMVAL=SUMVAL+VAL;              /* UPDATE BUFFER COUNT           */ 01113000
         ALR   SUMVAL,@10                                          0433 01114000
*   GOTO AMDPSUM3;                  /* CHECK START VALUE SLOT        */ 01115000
         B     AMDPSUM3                                            0434 01116000
*AMDPNOW3:                                                         0435 01117000
*   PATHSW=3;                       /* START BEING PROCESSED         */ 01118000
AMDPNOW3 MVC   PATHSW(4),@CF00169                                  0435 01119000
*   WORD=0;                         /* INITIALIZE W A TO 0           */ 01120000
         SLR   @14,@14                                             0436 01121000
         ST    @14,WORD(,TTABPTR)                                  0436 01122000
*   RFY                                                            0437 01123000
*    (REG4,                                                        0437 01124000
*     REG5,                                                        0437 01125000
*     REG6) RSTD;                   /* NEED WORK REGISTERS     Y02014*/ 01126000
*   REG4=ADDR(INTSTART);            /* ADDRESS INT START SLOT        */ 01127000
         LA    REG4,INTSTART(,TTABPTR)                             0438 01128000
*   REG5=ADDR(COMP4);               /* ADDRS CHARACTER WORK AREA     */ 01129000
         LA    REG5,COMP4(,TTABPTR)                                0439 01130000
*   GENERATE;                                                      0440 01131000
*                                       /* MAKE PRINTABLE TIME VALUE */ 01132000
         UNPK  0(4,R5),0(2,R4)          CONVERT DDD TO PRINTABLE FMT    01133000
         MVC   STARTFIL+1(3),1(R5)    MOVE DDD TO OUTPUT                01134000
*   WORD=INTSTART(3);               /* PLACE HH ON WORD BDY          */ 01135000
         SLR   @14,@14                                             0441 01136000
         IC    @14,INTSTART+2(,TTABPTR)                            0441 01137000
         ST    @14,WORD(,TTABPTR)                                  0441 01138000
*   REG6=ADDR(STARTFIL)+5;          /* LOCATION IN OUTPUT            */ 01139000
         LA    REG6,STARTFIL                                       0442 01140000
         AL    REG6,@CF00086                                       0442 01141000
*   CALL AMDPRNT;                   /* HAVE CONVERSION DONE          */ 01142000
         BAL   @14,AMDPRNT                                         0443 01143000
*   WORD=INTSTART(4);               /* PLACE MM ON WORD BDY          */ 01144000
         SLR   @14,@14                                             0444 01145000
         IC    @14,INTSTART+3(,TTABPTR)                            0444 01146000
         ST    @14,WORD(,TTABPTR)                                  0444 01147000
*   REG6=ADDR(STARTFIL)+8;          /* LOCATION IN OUTPUT            */ 01148000
         LA    REG6,STARTFIL                                       0445 01149000
         AL    REG6,@CF00033                                       0445 01150000
*   CALL AMDPRNT;                   /* HAVE CONVERSION DONE          */ 01151000
         BAL   @14,AMDPRNT                                         0446 01152000
*   WORD=INTSTART(5);               /* PLACE SS ON WORD BDY          */ 01153000
         SLR   @14,@14                                             0447 01154000
         IC    @14,INTSTART+4(,TTABPTR)                            0447 01155000
         ST    @14,WORD(,TTABPTR)                                  0447 01156000
*   REG6=ADDR(STARTFIL)+11;         /* LOCATION IN OUTPUT            */ 01157000
         LA    REG6,STARTFIL                                       0448 01158000
         AL    REG6,@CF00034                                       0448 01159000
*   CALL AMDPRNT;                   /* HAVE CONVERSION DONE          */ 01160000
         BAL   @14,AMDPRNT                                         0449 01161000
*   RFY                                                            0450 01162000
*    (REG4,                                                        0450 01163000
*     REG5,                                                        0450 01164000
*     REG6) UNRSTD;                 /* RELEASE WORK REGISTERS        */ 01165000
*   SUMSGBUF(SUMVAL:SUMVAL+         /* MOVE IN 'START='              */ 01166000
*       5)=STARTCON;                                               0451 01167000
         LA    @14,SUMSGBUF-1(SUMVAL)                              0451 01168000
         MVC   0(6,@14),STARTCON                                   0451 01169000
*   SUMSGBUF(SUMVAL+6:SUMVAL        /* MOVE IN START VALUE           */ 01170000
*       +19)=STARTFIL;                                             0452 01171000
         LA    @14,SUMSGBUF+5(SUMVAL)                              0452 01172000
         MVC   0(14,@14),STARTFIL                                  0452 01173000
*   ESDAY=STARTFIL(2:4);            /* SAVE DAY VALUE                */ 01174000
         MVC   ESDAY(3,AEDITCBR),STARTFIL+1                        0453 01175000
*   ESHR=STARTFIL(6:7);             /* SAVE HOURS                    */ 01176000
         MVC   ESHR(2,AEDITCBR),STARTFIL+5                         0454 01177000
*   ESMIN=STARTFIL(9:10);           /* SAVE MINUTES                  */ 01178000
         MVC   ESMIN(2,AEDITCBR),STARTFIL+8                        0455 01179000
*   ESSEC=STARTFIL(12:13);          /* SAVE SECONDS                  */ 01180000
         MVC   ESSEC(2,AEDITCBR),STARTFIL+11                       0456 01181000
*   SUMVAL=SUMVAL+VAL;              /* UPDATE BUFFER COUNT           */ 01182000
         AL    SUMVAL,VAL                                          0457 01183000
*   GOTO AMDPSUM4;                  /* CHECK STOP VALUE SLOT         */ 01184000
         B     AMDPSUM4                                            0458 01185000
*AMDPNOW4:                                                         0459 01186000
*   PATHSW=4;                       /* STOP BEING PROCESSED          */ 01187000
AMDPNOW4 MVC   PATHSW(4),@CF00099                                  0459 01188000
*   WORD=0;                         /* INITIALIZE W A TO 0           */ 01189000
         SLR   @14,@14                                             0460 01190000
         ST    @14,WORD(,TTABPTR)                                  0460 01191000
*   RFY                                                            0461 01192000
*    (REG4,                                                        0461 01193000
*     REG5,                                                        0461 01194000
*     REG6) RSTD;                   /* NEED WORK REGISTERS     Y02014*/ 01195000
*   REG4=ADDR(INTSTOP);             /* ADDRS CHARACTER STOP SLOT     */ 01196000
         LA    REG4,INTSTOP(,TTABPTR)                              0462 01197000
*   REG5=ADDR(COMP4);               /* ADDRS CHARACTER WORK AREA     */ 01198000
         LA    REG5,COMP4(,TTABPTR)                                0463 01199000
*   GENERATE;                                                      0464 01200000
         UNPK  0(4,R5),0(2,R4)          CONVERT DDD TO PRINTABLE FMT    01201000
         MVC   STOPFIL+1(3),1(R5)     MOVE DDD TO OUTPUT                01202000
*   WORD=INTSTOP(3);                /* PLACE HH ON WORD BDY          */ 01203000
         SLR   @14,@14                                             0465 01204000
         IC    @14,INTSTOP+2(,TTABPTR)                             0465 01205000
         ST    @14,WORD(,TTABPTR)                                  0465 01206000
*   REG6=ADDR(STOPFIL)+5;           /* ADDRS OUTPUT AREA             */ 01207000
         LA    REG6,STOPFIL                                        0466 01208000
         AL    REG6,@CF00086                                       0466 01209000
*   CALL AMDPRNT;                   /* HAVE CONVERSION DONE          */ 01210000
         BAL   @14,AMDPRNT                                         0467 01211000
*   WORD=INTSTOP(4);                /* PLACE MM ON WORD BDY          */ 01212000
         SLR   @14,@14                                             0468 01213000
         IC    @14,INTSTOP+3(,TTABPTR)                             0468 01214000
         ST    @14,WORD(,TTABPTR)                                  0468 01215000
*   REG6=ADDR(STOPFIL)+8;           /* ADDRS OUTPUT AREA             */ 01216000
         LA    REG6,STOPFIL                                        0469 01217000
         AL    REG6,@CF00033                                       0469 01218000
*   CALL AMDPRNT;                   /* HAVE CONVERSION DONE          */ 01219000
         BAL   @14,AMDPRNT                                         0470 01220000
*   WORD=INTSTOP(5);                /* PLACE SS ON WORD BDY          */ 01221000
         SLR   @14,@14                                             0471 01222000
         IC    @14,INTSTOP+4(,TTABPTR)                             0471 01223000
         ST    @14,WORD(,TTABPTR)                                  0471 01224000
*   REG6=ADDR(STOPFIL)+11;          /* ADDRS OUTPUT AREA             */ 01225000
         LA    REG6,STOPFIL                                        0472 01226000
         AL    REG6,@CF00034                                       0472 01227000
*   CALL AMDPRNT;                   /* HAVE CONVERSION DONE          */ 01228000
         BAL   @14,AMDPRNT                                         0473 01229000
*   RFY                                                            0474 01230000
*    (REG4,                                                        0474 01231000
*     REG5,                                                        0474 01232000
*     REG6) UNRSTD;                 /* RELEASE WORK REGS       Y02014*/ 01233000
*   SUMSGBUF(SUMVAL:SUMVAL          /* MOVE IN 'STOP='               */ 01234000
*       +4)=STOPCON;                                               0475 01235000
         LA    @14,SUMSGBUF-1(SUMVAL)                              0475 01236000
         MVC   0(5,@14),STOPCON                                    0475 01237000
*   SUMSGBUF(SUMVAL+5:SUMVAL        /* MOVE IN STOP VALUE            */ 01238000
*       +18)=STOPFIL;                                              0476 01239000
         LA    @14,SUMSGBUF+4(SUMVAL)                              0476 01240000
         MVC   0(14,@14),STOPFIL                                   0476 01241000
*   ESPDAY=STOPFIL(2:4);            /* SAVE DAY STOP VALUE           */ 01242000
         MVC   ESPDAY(3,AEDITCBR),STOPFIL+1                        0477 01243000
*   ESPHR=STOPFIL(6:7);             /* SAVE HOUR                     */ 01244000
         MVC   ESPHR(2,AEDITCBR),STOPFIL+5                         0478 01245000
*   ESPMIN=STOPFIL(9:10);           /* SAVE MIN                      */ 01246000
         MVC   ESPMIN(2,AEDITCBR),STOPFIL+8                        0479 01247000
*   ESPSEC=STOPFIL(12:13);          /* SAVE SEC                      */ 01248000
         MVC   ESPSEC(2,AEDITCBR),STOPFIL+11                       0480 01249000
*   SUMVAL=SUMVAL+VAL;              /* UPDATE BUFFER CHAR COUNT      */ 01250000
         AL    SUMVAL,VAL                                          0481 01251000
*   GOTO AMDPSUM5;                  /* CHECK FOR JOBNAMES            */ 01252000
         B     AMDPSUM5                                            0482 01253000
*AMDPNOW5:                                                         0483 01254000
*   IF JOBCT=1 THEN                 /* Q/FIRST TIME THROUGH          */ 01255000
AMDPNOW5 CLC   JOBCT(4),@CF00046                                   0483 01256000
         BE    @RT00483                                            0483 01257000
*     GOTO AMDPNW51;                /* YES                           */ 01258000
*   IF PATHSW=0 THEN                /* Q/LINE JUST OUTPUTTED         */ 01259000
         L     @14,PATHSW                                          0485 01260000
         LTR   @14,@14                                             0485 01261000
         BNZ   @RF00485                                            0485 01262000
*     DO;                           /* IF YES, DO THE FOLLOWING      */ 01263000
*       VAL=VAL+10;                 /* ALLOW FOR JOBN PREFIX         */ 01264000
         LA    @14,10                                              0487 01265000
         AL    @14,VAL                                             0487 01266000
         ST    @14,VAL                                             0487 01267000
*       GOTO AMDPNW51;              /* CONTINUE ON                   */ 01268000
         B     AMDPNW51                                            0488 01269000
*     END;                                                         0489 01270000
*   SUMSGBUF(SUMVAL:SUMVAL          /* INSERT JOBNAME INTO OUTPUT    */ 01271000
*       +VAL-1)=JOBNAMES(JOBCT);                                   0490 01272000
@RF00485 LA    @14,SUMSGBUF-1(SUMVAL)                              0490 01273000
         L     @10,VAL                                             0490 01274000
         BCTR  @10,0                                               0490 01275000
         L     @06,JOBCT                                           0490 01276000
         SLA   @06,3                                               0490 01277000
         ALR   @06,AEDITCBR                                        0490 01278000
         EX    @10,@SM00685                                        0490 01279000
*   GOTO AMDPNW52;                  /* LOOK FOR ADDITIONAL JOBNS     */ 01280000
         B     AMDPNW52                                            0491 01281000
*AMDPNW51:                                                         0492 01282000
*   PATHSW=5;                       /* JOBNAMES BEING PROCESSED      */ 01283000
AMDPNW51 MVC   PATHSW(4),@CF00086                                  0492 01284000
*   SUMSGBUF(SUMVAL:SUMVAL          /* MOVE IN 'JOBNAMES=('          */ 01285000
*       +9)=JOBCON;                                                0493 01286000
         LA    @14,SUMSGBUF-1(SUMVAL)                              0493 01287000
         MVC   0(10,@14),JOBCON                                    0493 01288000
*   SUMSGBUF(SUMVAL+10:SUMVAL       /* MOVE IN JOBNAME               */ 01289000
*       +VAL-1)=JOBNAMES(JOBCT);                                   0494 01290000
         LA    @14,SUMSGBUF+9(SUMVAL)                              0494 01291000
         L     @10,VAL                                             0494 01292000
         SL    @10,@CF00034                                        0494 01293000
         L     @06,JOBCT                                           0494 01294000
         SLA   @06,3                                               0494 01295000
         ALR   @06,AEDITCBR                                        0494 01296000
         EX    @10,@SM00685                                        0494 01297000
*AMDPNW52:                                                         0495 01298000
*   SUMVAL=SUMVAL+VAL;              /* UPDATE BUFFER CHAR COUNT      */ 01299000
AMDPNW52 AL    SUMVAL,VAL                                          0495 01300000
*   JOBCT=JOBCT+1;                  /* UPDATE JOBNAME COUNT          */ 01301000
         LA    @14,1                                               0496 01302000
         AL    @14,JOBCT                                           0496 01303000
         ST    @14,JOBCT                                           0496 01304000
*   IF JOBCT>5 THEN                 /* Q/ALL JOBNAMES OUTPUTTED      */ 01305000
         C     @14,@CF00086                                        0497 01306000
         BH    @RT00497                                            0497 01307000
*     GOTO AMDPNW53;                /* YES                           */ 01308000
*   IF JOBNAMES(JOBCT)=BLANK1       /* IF NO MORE JOBNAMES,          */ 01309000
*     THEN                          /* THEN                          */ 01310000
         SLA   @14,3                                               0499 01311000
         ALR   @14,AEDITCBR                                        0499 01312000
         CLC   JOBNAMES-8(8,@14),BLANK1(TTABPTR)                   0499 01313000
         BE    @RT00499                                            0499 01314000
*     GOTO AMDPNW53;                /* FINISH VALUE INSERTION        */ 01315000
*   PRNSW='1'B;                     /* MORE JOBNS/ WILL NEED ')'     */ 01316000
         OI    PRNSW(TTABPTR),B'00000100'                          0501 01317000
*   VAL=8;                          /* NEED ONLY JOBN, NOT PREFIX    */ 01318000
         MVC   VAL(4),@CF00033                                     0502 01319000
*   GOTO AMDPFIT;                   /* Q/WILL VALUE OVERFLOW LINE    */ 01320000
         B     AMDPFIT                                             0503 01321000
*AMDPNW53:                                                         0504 01322000
*   SUMSGBUF(SUMVAL)=')';           /* INSERT RIGHT PARENTHESIS      */ 01323000
AMDPNW53 LA    @14,SUMSGBUF-1(SUMVAL)                              0504 01324000
         MVI   0(@14),C')'                                         0504 01325000
*   PRNSW='0'B;                     /* PARENS ALREADY INSERTED       */ 01326000
         NI    PRNSW(TTABPTR),B'11111011'                          0505 01327000
*   SUMVAL=SUMVAL+1;                /* UPDATE BUFFER CHAR COUNT      */ 01328000
         AL    SUMVAL,@CF00046                                     0506 01329000
*   GOTO AMDPSUM6;                  /* GO CHECK ASCB ADDRESSES       */ 01330000
         B     AMDPSUM6                                            0507 01331000
*AMDPNOW6:                                                         0508 01332000
*   IF ASCBCT=1 THEN                /* Q/FIRST TIME THRU       Y02014*/ 01333000
AMDPNOW6 CLC   ASCBCT(4),@CF00046                                  0508 01334000
         BE    @RT00508                                            0508 01335000
*     GOTO AMDPNW61;                /* YES                           */ 01336000
*   IF PATHSW=0 THEN                /* Q/LINE JUST OUTPUTTED         */ 01337000
         L     @14,PATHSW                                          0510 01338000
         LTR   @14,@14                                             0510 01339000
         BNZ   @RF00510                                            0510 01340000
*     DO;                           /* IF YES, DO THE FOLLOWING      */ 01341000
*       VAL=VAL+7;                  /* ALLOW FOR ASCB PREFIX   Y02014*/ 01342000
         LA    @14,7                                               0512 01343000
         AL    @14,VAL                                             0512 01344000
         ST    @14,VAL                                             0512 01345000
*       GOTO AMDPNW62;              /* CONTINUE ON                   */ 01346000
         B     AMDPNW62                                            0513 01347000
*     END;                                                         0514 01348000
*   SUMSGBUF(SUMVAL:SUMVAL          /* INSERT ASCB ADDRS FROM WORK   */ 01349000
*       +7)=DBLWORD                 /* AREA INTO SUMMARY MESSAGE     */ 01350000
*       (1:8);                      /* BUFFER                  Y02014*/ 01351000
@RF00510 LA    @14,SUMSGBUF-1(SUMVAL)                              0515 01352000
         MVC   0(8,@14),DBLWORD(TTABPTR)                           0515 01353000
*   GOTO AMDPNW63;                  /* LOOK FOR ADDITIONAL ADDRS     */ 01354000
*                                                                  0516 01355000
         B     AMDPNW63                                            0516 01356000
*   /*****************************************************************/ 01357000
*   /*                                                               */ 01358000
*   /* CONVERT 4-BYTE ADDRESS TO PRINTABLE FORMAT, USING AMDPRDMP    */ 01359000
*   /* SERVICE ROUTINE                                               */ 01360000
*   /*                                                               */ 01361000
*   /*****************************************************************/ 01362000
*                                                                  0517 01363000
*AMDPNW61:                                                         0517 01364000
*   REG1=ADDR(AADS(ASCBCT));        /* PICK UP ADDRS OF ASCB   Y02014*/ 01365000
AMDPNW61 L     @14,ASCBCT                                          0517 01366000
         SLA   @14,2                                               0517 01367000
         LA    REG1,AADS-4(@14,AEDITCBR)                           0517 01368000
*   RFY                                                            0518 01369000
*    (REG4) RSTD;                   /* NEED REGISTER 4         Y02014*/ 01370000
*   REG4=ADDR(DBLWORD);             /* PICK UP ADDRS OF OUTPUT AREA  */ 01371000
         LA    REG4,DBLWORD(,TTABPTR)                              0519 01372000
*   CALL CNVTRTN2;                  /* HAVE ADDRS CONVERTED    Y02014*/ 01373000
         L     @15,AWRDCNVT                                        0520 01374000
         BALR  @14,@15                                             0520 01375000
*   RFY                                                            0521 01376000
*    (REG4) UNRSTD;                 /* FINISHED WITH REG 4     Y02014*/ 01377000
*   IF PRNSW='1'B THEN              /* IF CONVERSION RTN ENTERED     */ 01378000
         TM    PRNSW(TTABPTR),B'00000100'                          0522 01379000
         BO    @RT00522                                            0522 01380000
*     GOTO AMDPFIT;                 /* BETWEEN VALUES, GO TO RTN THAT   01381000
*                                      DETERMINES IF VALUE WILL    0523 01382000
*                                      OVERFLOW CURRENT LINE         */ 01383000
*AMDPNW62:                                                         0524 01384000
*   PATHSW=6;                       /* ASCB ADDR BEING PROCESSED     */ 01385000
AMDPNW62 MVC   PATHSW(4),@CF00110                                  0524 01386000
*   SUMSGBUF(SUMVAL:SUMVAL          /* MOVE IN 'ASCBS=('       Y02014*/ 01387000
*       +6)=ASCBCON;                                               0525 01388000
         LA    @14,SUMSGBUF-1(SUMVAL)                              0525 01389000
         MVC   0(7,@14),ASCBCON                                    0525 01390000
*   SUMSGBUF(SUMVAL+7:SUMVAL        /* INSERT ASCB ADDRS       Y02014*/ 01391000
*       +14)=DBLWORD                /* AREA INTO SUMMARY MESSAGE     */ 01392000
*       (1:8);                      /* BUFFER                  Y02014*/ 01393000
         LA    @14,SUMSGBUF+6(SUMVAL)                              0526 01394000
         MVC   0(8,@14),DBLWORD(TTABPTR)                           0526 01395000
*AMDPNW63:                                                         0527 01396000
*   SUMVAL=SUMVAL+VAL;              /* UPDATE BUFFER CHAR COUNT      */ 01397000
AMDPNW63 AL    SUMVAL,VAL                                          0527 01398000
*   ASCBCT=ASCBCT+1;                /* UPDTE ASCB ADDR CNT     Y02014*/ 01399000
         LA    @14,1                                               0528 01400000
         AL    @14,ASCBCT                                          0528 01401000
         ST    @14,ASCBCT                                          0528 01402000
*   IF ASCBCT>5 THEN                /* Q/ALL ASCB ADDRS OUTPUTTED    */ 01403000
         C     @14,@CF00086                                        0529 01404000
         BH    @RT00529                                            0529 01405000
*     GOTO AMDPNW64;                /* YES                     Y02014*/ 01406000
*   IF ASCBADDR(ASCBCT)=0           /* NO MORE ASCB ADDRS,     Y02014*/ 01407000
*     THEN                          /* THEN                          */ 01408000
         SLA   @14,2                                               0531 01409000
         L     @14,ASCBADDR-4(@14,AEDITCBR)                        0531 01410000
         LTR   @14,@14                                             0531 01411000
         BZ    @RT00531                                            0531 01412000
*     GOTO AMDPNW64;                /* FINISH VALUE INSERTION        */ 01413000
*   PRNSW='1'B;                     /* MORE ADDRS- WILL NEED ')'     */ 01414000
         OI    PRNSW(TTABPTR),B'00000100'                          0533 01415000
*   VAL=8;                          /* NEED ONLY ADDR, NOT PREFIX  0534 01416000
*                                                              Y02014*/ 01417000
         MVC   VAL(4),@CF00033                                     0534 01418000
*   GOTO AMDPNW61;                  /* CONVERT ADDR TO WORK AREA     */ 01419000
         B     AMDPNW61                                            0535 01420000
*AMDPNW64:                                                         0536 01421000
*   SUMSGBUF(SUMVAL)=')';           /* INSERT RIGHT PARENTHESIS      */ 01422000
AMDPNW64 LA    @14,SUMSGBUF-1(SUMVAL)                              0536 01423000
         MVI   0(@14),C')'                                         0536 01424000
*   PRNSW='0'B;                     /* PARENS ALREADY INSERTED       */ 01425000
         NI    PRNSW(TTABPTR),B'11111011'                          0537 01426000
*   SUMVAL=SUMVAL+1;                /* ALLOW FOR RIGHT PAREN         */ 01427000
         AL    SUMVAL,@CF00046                                     0538 01428000
*   GOTO AMDPSUM7;                  /* CHECK SIOFLGS                 */ 01429000
         B     AMDPSUM7                                            0539 01430000
*AMDPNOW7:                                                         0540 01431000
*   PATHSW=7;                       /* SIO BEING PROCESSED           */ 01432000
AMDPNOW7 MVC   PATHSW(4),@CF00035                                  0540 01433000
*   IF NOEQU='1'B THEN              /* Q/SIO-10 EQUIV NOT PERMITD    */ 01434000
         TM    NOEQU(AEDITCBR),B'00010000'                         0541 01435000
         BO    @RT00541                                            0541 01436000
*     GOTO AMDPNW71;                /* YES--NOT PERMITTED            */ 01437000
*   IF EQUIV='1'B THEN              /* IF SIO=I0, THEN               */ 01438000
         TM    EQUIV(AEDITCBR),B'00100000'                         0543 01439000
         BO    @RT00543                                            0543 01440000
*     GOTO AMDPNOW8;                /* GO TO IO PROCESSING RTN       */ 01441000
*AMDPNW71:                                                         0545 01442000
*   IF ALLS='1'B THEN               /* IF SIO=ALL                    */ 01443000
AMDPNW71 TM    ALLS(AEDITCBR),B'10000000'                          0545 01444000
         BNO   @RF00545                                            0545 01445000
*     DO;                           /* DO THE FOLLOWING              */ 01446000
*       SUMSGBUF(SUMVAL:SUMVAL      /* MOVE IN 'SIO=''ALL'''         */ 01447000
*           +8)=SIOCON1;                                           0547 01448000
         LA    @14,SUMSGBUF-1(SUMVAL)                              0547 01449000
         MVC   0(9,@14),SIOCON1                                    0547 01450000
*AMDPNW72:                                                         0548 01451000
*       SUMVAL=SUMVAL+9;            /* UPDATE BUFFER CHAR COUNT HAVE    01452000
*                                      USED FEWER CHARS THAN       0548 01453000
*                                      PREVIOUSLY DEFINED VAL        */ 01454000
AMDPNW72 AL    SUMVAL,@CF00167                                     0548 01455000
*       GOTO AMDPSUM8;              /* CHECK IOFLGS                  */ 01456000
         B     AMDPSUM8                                            0549 01457000
*     END;                          /* SIO=ALL OR SEL INDICATED      */ 01458000
*   SUMSGBUF(SUMVAL:SUMVAL          /* SIO=SEL INDICATED             */ 01459000
*       +8)=SIOCON2;                                               0551 01460000
@RF00545 LA    @14,SUMSGBUF-1(SUMVAL)                              0551 01461000
         MVC   0(9,@14),SIOCON2                                    0551 01462000
*   GOTO AMDPNW72;                  /* UPDATE COUNT & CHK IOFLGS     */ 01463000
         B     AMDPNW72                                            0552 01464000
*AMDPNOW8:                                                         0553 01465000
*   PATHSW=8;                       /* IO BEING PROCESSED            */ 01466000
AMDPNOW8 MVC   PATHSW(4),@CF00033                                  0553 01467000
*   IF NOEQU='1'B THEN              /* Q/SIO-I0 EQUIV NOT PERMITD    */ 01468000
         TM    NOEQU(AEDITCBR),B'00010000'                         0554 01469000
         BO    @RT00554                                            0554 01470000
*     GOTO AMDPNW82;                /* YES--NOT PERMITTED            */ 01471000
*   IF EQUIV='0'B THEN              /* DO NOT HAVE SIO-I0            */ 01472000
         TM    EQUIV(AEDITCBR),B'00100000'                         0556 01473000
         BZ    @RT00556                                            0556 01474000
*     GOTO AMDPNW82;                /* EQUIVALENCE                   */ 01475000
*   IF ALLI='1'B THEN               /* IF IO=SIO=ALL, THEN           */ 01476000
         TM    ALLI(AEDITCBR),B'10000000'                          0558 01477000
         BNO   @RF00558                                            0558 01478000
*     DO;                           /* DO THE FOLLOWING              */ 01479000
*       SUMSGBUF(SUMVAL:SUMVAL      /* MOVE IN 'IO=SIO=''ALL'''      */ 01480000
*           +11)=IOEQU1;                                           0560 01481000
         LA    @14,SUMSGBUF-1(SUMVAL)                              0560 01482000
         MVC   0(12,@14),IOEQU1                                    0560 01483000
*AMDPNW81:                                                         0561 01484000
*       SUMVAL=SUMVAL+VAL;          /* UPDATE BUFFER CHAR COUNT      */ 01485000
AMDPNW81 AL    SUMVAL,VAL                                          0561 01486000
*       GOTO AMDPSUM9;              /* CHECK SVC FLAGS               */ 01487000
         B     AMDPSUM9                                            0562 01488000
*     END;                          /* IO=SIO=ALL OR IO=SIO=SEL      */ 01489000
*   SUMSGBUF(SUMVAL:SUMVAL+         /* IO=SIO=SEL                    */ 01490000
*       11)=IOEQU2;                                                0564 01491000
@RF00558 LA    @14,SUMSGBUF-1(SUMVAL)                              0564 01492000
         MVC   0(12,@14),IOEQU2                                    0564 01493000
*   GOTO AMDPNW81;                  /* UPDATE COUNT & CHK     SVCFLGS*/ 01494000
         B     AMDPNW81                                            0565 01495000
*AMDPNW82:                                                         0566 01496000
*   IF ALLI='1'B THEN               /* IF IO=ALL INDICATED, THEN     */ 01497000
AMDPNW82 TM    ALLI(AEDITCBR),B'10000000'                          0566 01498000
         BNO   @RF00566                                            0566 01499000
*     DO;                           /* DO THE FOLLOWING              */ 01500000
*       SUMSGBUF(SUMVAL:SUMVAL      /* MOVE IN 'IO=''ALL'''          */ 01501000
*           +7)=IOCON1;                                            0568 01502000
         LA    @14,SUMSGBUF-1(SUMVAL)                              0568 01503000
         MVC   0(8,@14),IOCON1                                     0568 01504000
*AMDPNW83:                                                         0569 01505000
*       VAL=8;                      /* ADJUST VAL                    */ 01506000
AMDPNW83 MVC   VAL(4),@CF00033                                     0569 01507000
*       GOTO AMDPNW81;              /* UPDATE COUNT & CHK     SVCFLGS*/ 01508000
         B     AMDPNW81                                            0570 01509000
*     END;                          /* IO=ALL OR IO=SEL              */ 01510000
*   SUMSGBUF(SUMVAL:SUMVAL          /* MOVE IN 'IO=''SEL'''          */ 01511000
*       +7)=IOCON2;                                                0572 01512000
@RF00566 LA    @14,SUMSGBUF-1(SUMVAL)                              0572 01513000
         MVC   0(8,@14),IOCON2                                     0572 01514000
*   GOTO AMDPNW83;                  /* UPDATE COUNT & CHK     SVCFLGS*/ 01515000
         B     AMDPNW83                                            0573 01516000
*AMDPNOW9:                                                         0574 01517000
*   PATHSW=9;                       /* SVC BEING PROCESSED           */ 01518000
AMDPNOW9 MVC   PATHSW(4),@CF00167                                  0574 01519000
*   IF ALLV='1'B THEN               /* SVC=ALL INDICATED             */ 01520000
         TM    ALLV(AEDITCBR),B'10000000'                          0575 01521000
         BO    @RT00575                                            0575 01522000
*     GOTO AMDPNW91;                /* GO TO MOVE IN INDICATOR       */ 01523000
*   SUMSGBUF(SUMVAL:SUMVAL          /* MOVE IN 'SVC=''SEL'''         */ 01524000
*       +8)=SVCCON2;                                               0577 01525000
         LA    @14,SUMSGBUF-1(SUMVAL)                              0577 01526000
         MVC   0(9,@14),SVCCON2                                    0577 01527000
*   GOTO AMDPNW92;                  /* UPDATE COUNT & CHK PIFLGS     */ 01528000
         B     AMDPNW92                                            0578 01529000
*AMDPNW91:                                                         0579 01530000
*   SUMSGBUF(SUMVAL:SUMVAL          /* MOVE IN 'SVC=''ALL'''         */ 01531000
*       +8)=SVCCON1;                                               0579 01532000
AMDPNW91 LA    @14,SUMSGBUF-1(SUMVAL)                              0579 01533000
         MVC   0(9,@14),SVCCON1                                    0579 01534000
*AMDPNW92:                                                         0580 01535000
*   SUMVAL=SUMVAL+VAL;              /* UPDATE BUFFER CHAR COUNT      */ 01536000
AMDPNW92 AL    SUMVAL,VAL                                          0580 01537000
*   GOTO AMDPSUMA;                  /* CHECK PI FLAGS                */ 01538000
         B     AMDPSUMA                                            0581 01539000
*AMDPNOWA:                                                         0582 01540000
*   PATHSW=10;                      /* PI BEING PROCESSED            */ 01541000
AMDPNOWA MVC   PATHSW(4),@CF00385                                  0582 01542000
*   IF ALLP='1'B THEN               /* SVC=ALL INDICATED             */ 01543000
         TM    ALLP(AEDITCBR),B'10000000'                          0583 01544000
         BO    @RT00583                                            0583 01545000
*     GOTO AMDPNWA1;                /* GO TO MOVE IN INDICATOR       */ 01546000
*   SUMSGBUF(SUMVAL:SUMVAL          /* MOVE IN 'PI=''SEL'''          */ 01547000
*       +7)=PICON2;                                                0585 01548000
         LA    @14,SUMSGBUF-1(SUMVAL)                              0585 01549000
         MVC   0(8,@14),PICON2                                     0585 01550000
*   GOTO AMDPNWA2;                  /* UPDATE COUNT & CHK USRFLGS    */ 01551000
         B     AMDPNWA2                                            0586 01552000
*AMDPNWA1:                                                         0587 01553000
*   SUMSGBUF(SUMVAL:SUMVAL          /* MOVE IN 'PI=''ALL'''          */ 01554000
*       +7)=PICON1;                                                0587 01555000
AMDPNWA1 LA    @14,SUMSGBUF-1(SUMVAL)                              0587 01556000
         MVC   0(8,@14),PICON1                                     0587 01557000
*AMDPNWA2:                                                         0588 01558000
*   SUMVAL=SUMVAL+VAL;              /* UPDATE BUFFER CHAR COUNT      */ 01559000
AMDPNWA2 AL    SUMVAL,VAL                                          0588 01560000
*   GOTO AMDPSUMB;                  /* CHECK USR FLAGS               */ 01561000
         B     AMDPSUMB                                            0589 01562000
*AMDPNOWB:                                                         0590 01563000
*   PATHSW=11;                      /* USR BEING PROCESSED           */ 01564000
AMDPNOWB MVC   PATHSW(4),@CF00034                                  0590 01565000
*   IF ALLU='1'B THEN               /* USR=ALL INDICATED             */ 01566000
         TM    ALLU(AEDITCBR),B'10000000'                          0591 01567000
         BO    @RT00591                                            0591 01568000
*     GOTO AMDPNWB1;                /* GO TO MOVE IN INDICATOR       */ 01569000
*   SUMSGBUF(SUMVAL:SUMVAL          /* MOVE IN 'USR=''SEL'''         */ 01570000
*       +8)=ALLCON2;                                               0593 01571000
         LA    @14,SUMSGBUF-1(SUMVAL)                              0593 01572000
         MVC   0(9,@14),ALLCON2                                    0593 01573000
*   GOTO AMDPNWB2;                  /* UPDATE COUNT & CHECK EXT      */ 01574000
         B     AMDPNWB2                                            0594 01575000
*AMDPNWB1:                                                         0595 01576000
*   SUMSGBUF(SUMVAL:SUMVAL          /* MOVE IN 'USR=''ALL'''         */ 01577000
*       +8)=ALLCON1;                                               0595 01578000
AMDPNWB1 LA    @14,SUMSGBUF-1(SUMVAL)                              0595 01579000
         MVC   0(9,@14),ALLCON1                                    0595 01580000
*AMDPNWB2:                                                         0596 01581000
*   SUMVAL=SUMVAL+VAL;              /* UPDATE BUFFER CHAR COUNT      */ 01582000
AMDPNWB2 AL    SUMVAL,VAL                                          0596 01583000
*   GOTO AMDPSUMC;                  /* CHECK FOR EXT IND             */ 01584000
         B     AMDPSUMC                                            0597 01585000
*AMDPNOWC:                                                         0598 01586000
*   PATHSW=12;                      /* EXT BEING PROCESSED           */ 01587000
AMDPNOWC MVC   PATHSW(4),@CF00075                                  0598 01588000
*   SUMSGBUF(SUMVAL:SUMVAL          /* MOVE IN 'EXT'                 */ 01589000
*       +2)=EXTCON;                                                0599 01590000
         LA    @14,SUMSGBUF-1(SUMVAL)                              0599 01591000
         MVC   0(3,@14),EXTCON                                     0599 01592000
*   SUMVAL=SUMVAL+VAL;              /* UPDATE BUFFER CHAR COUNT      */ 01593000
         AL    SUMVAL,VAL                                          0600 01594000
*   GOTO AMDPSUMF;                  /* CHECK FOR RNIO IND      Y02014*/ 01595000
         B     AMDPSUMF                                            0601 01596000
*AMDPNOWF:                                                         0602 01597000
*   PATHSW=15;                      /* RNIO BEING PROCESSED    Y02014*/ 01598000
AMDPNOWF MVC   PATHSW(4),@CF00032                                  0602 01599000
*   SUMSGBUF(SUMVAL:SUMVAL          /* MOVE IN 'RNIO'          Y02014*/ 01600000
*       +3)=RNIOCON;                                               0603 01601000
         LA    @14,SUMSGBUF-1(SUMVAL)                              0603 01602000
         MVC   0(4,@14),RNIOCON                                    0603 01603000
*   SUMVAL=SUMVAL+VAL;              /* UPDTE CHAR COUNT        Y02014*/ 01604000
         AL    SUMVAL,VAL                                          0604 01605000
*   GOTO AMDPSUMG;                  /* CHECK FOR SRM           Y02014*/ 01606000
         B     AMDPSUMG                                            0605 01607000
*AMDPNOWG:                                                         0606 01608000
*   PATHSW=16;                      /* SRM BEING PROCESSED     Y02014*/ 01609000
AMDPNOWG MVC   PATHSW(4),@CF00139                                  0606 01610000
*   SUMSGBUF(SUMVAL:SUMVAL          /* MOVE IN 'SRM'           Y02014*/ 01611000
*       +2)=SRMCON;                                                0607 01612000
         LA    @14,SUMSGBUF-1(SUMVAL)                              0607 01613000
         MVC   0(3,@14),SRMCON                                     0607 01614000
*   SUMVAL=SUMVAL+VAL;              /* UPDTE CHAR COUNT        Y02014*/ 01615000
         AL    SUMVAL,VAL                                          0608 01616000
*   GOTO AMDPSUMH;                  /* CHECK FOR RR            Y02014*/ 01617000
         B     AMDPSUMH                                            0609 01618000
*AMDPNOWH:                                                         0610 01619000
*   PATHSW=17;                      /* RR BEING PROCESSED      Y02014*/ 01620000
AMDPNOWH MVC   PATHSW(4),@CF00561                                  0610 01621000
*   SUMSGBUF(SUMVAL:SUMVAL          /* MOVE IN 'RR'            Y02014*/ 01622000
*       +1)=RRCON;                                                 0611 01623000
         LA    @14,SUMSGBUF-1(SUMVAL)                              0611 01624000
         MVC   0(2,@14),RRCON                                      0611 01625000
*   SUMVAL=SUMVAL+VAL;              /* UPTE CHAR COUNT         Y02014*/ 01626000
         AL    SUMVAL,VAL                                          0612 01627000
*   GOTO AMDPSUMI;                  /* CHECK FOR EOF           Y02014*/ 01628000
         B     AMDPSUMI                                            0613 01629000
*AMDPNOWI:                                                         0614 01630000
*   PATHSW=18;                      /* EOF BEING PROCESSED     Y02014*/ 01631000
AMDPNOWI MVC   PATHSW(4),@CF00459                                  0614 01632000
*   SUMSGBUF(SUMVAL:SUMVAL          /* MOVE IN 'EOF EXIT'      Y02014*/ 01633000
*       +7)=EOFCON;                                                0615 01634000
         LA    @14,SUMSGBUF-1(SUMVAL)                              0615 01635000
         MVC   0(8,@14),EOFCON                                     0615 01636000
*   SUMVAL=SUMVAL+VAL;              /* UPDTE CHAR COUNT        Y02014*/ 01637000
         AL    SUMVAL,VAL                                          0616 01638000
*   GOTO AMDPSUMD;                  /* CHECK FOR DSP           Y02014*/ 01639000
         B     AMDPSUMD                                            0617 01640000
*AMDPNOWD:                                                         0618 01641000
*   PATHSW=13;                      /* EOF BEING PROCESSED           */ 01642000
AMDPNOWD MVC   PATHSW(4),@CF00566                                  0618 01643000
*   SUMSGBUF(SUMVAL:SUMVAL          /* MOVE IN 'DSP'                 */ 01644000
*       +2)=DSPCON;                                                0619 01645000
         LA    @14,SUMSGBUF-1(SUMVAL)                              0619 01646000
         MVC   0(3,@14),DSPCON                                     0619 01647000
*   SUMVAL=SUMVAL+VAL;              /* UPDATE BUFFER CHAR COUNT      */ 01648000
         AL    SUMVAL,VAL                                          0620 01649000
*   GOTO AMDPSUME;                  /* CHK FOR DATA LEFT ON LINE TO     01650000
*                                      BE PRINTED                    */ 01651000
         B     AMDPSUME                                            0621 01652000
*AMDPNOWE:                                                         0622 01653000
*   SCN='0'B;                       /* TURN OFF AMDPRSCN BIT         */ 01654000
AMDPNOWE NI    SCN(AEDITCBR),B'10111111'                           0622 01655000
*   REG15=0;                        /* SET ZERO RETURN CODE          */ 01656000
         SLR   REG15,REG15                                         0623 01657000
*   SCANBIT='0'B;                   /* READY FOR FIRST TIME THRU     */ 01658000
         NI    SCANBIT(TTABPTR),B'11011111'                        0624 01659000
*   GOTO AMDRET3;                   /* RETURN TO CALLER              */ 01660000
*                                                                  0625 01661000
         B     AMDRET3                                             0625 01662000
*   /*****************************************************************/ 01663000
*   /*                                                               */ 01664000
*   /* THE FOLLOWING SUBROUTINE CONVERTS BINARY DATA THAT IS ONE BYTE*/ 01665000
*   /* IN LENGTH TO PRINTABLE DECIMAL. UPON ENTRY, REG 2 CONTAINS THE*/ 01666000
*   /* INPUT DATA, REG 5 ADDRESSES A 4-BYTE CHARACTER DATA AREA, AND */ 01667000
*   /* REG 6 ADDRESSES THE OUTPUT AREA. THIS SUBROUTINE IS USED IN   */ 01668000
*   /* CONVERTING START AND STOP VALUES.                             */ 01669000
*   /*                                                               */ 01670000
*   /*****************************************************************/ 01671000
*                                                                  0626 01672000
*AMDPRNT:                                                          0626 01673000
*   PROC;                                                          0626 01674000
@EL00001 L     @13,4(,@13)                                         0626 01675000
@EF00001 DS    0H                                                  0626 01676000
@ER00001 L     @14,12(,@13)                                        0626 01677000
         LM    @00,@12,20(@13)                                     0626 01678000
         BR    @14                                                 0626 01679000
AMDPRNT  STM   @14,@12,@SA00002                                    0626 01680000
*   RFY                                                            0627 01681000
*    (REG1,                         /* PARM REGISTER           Y02014*/ 01682000
*     REG2,                         /* WORK REGISTER                 */ 01683000
*     TTABPTR,                      /* POINTER TO AMDSCNTB           */ 01684000
*     REG4,                         /* POINTS TO INPUT DATA          */ 01685000
*     REG5,                         /* POINTS TO WORK AREA           */ 01686000
*     REG6,                         /* POINTS TO OUTPUT AREA         */ 01687000
*     REGPT,                        /* POINTER TO AMDPRCOM           */ 01688000
*     AEDITCBR) RSTD;               /* POINTER TO AMDPRTAB     Y02014*/ 01689000
*   REG2=WORD;                      /* REG 2 = INPUT DATA            */ 01690000
         L     REG2,WORD(,TTABPTR)                                 0628 01691000
*   REG4=ADDR(DBLWORD);             /* REG 4 = @ DBLWRD WRK AREA     */ 01692000
         LA    REG4,DBLWORD(,TTABPTR)                              0629 01693000
*   REG5=ADDR(COMP4);               /* REG 5 = @ CHAR WORK AREA      */ 01694000
         LA    REG5,COMP4(,TTABPTR)                                0630 01695000
*   GENERATE;                                                      0631 01696000
         CVD   R2,0(R4)                 CONVERT BINARY VALUE TO DECIMAL 01697000
         UNPK  0(4,R5),6(2,R4)          UNPACK INTO DBLWORD             01698000
         OI    3(R5),X'F0'            REMOVE ZONE                       01699000
         MVC   0(2,R6),2(R5)            MOVE RESULT INTO OUTPUT AREA    01700000
*   RETURN;                         /* RETURN TO CALLER              */ 01701000
@EL00002 DS    0H                                                  0632 01702000
@EF00002 DS    0H                                                  0632 01703000
@ER00002 LM    @14,@12,@SA00002                                    0632 01704000
         BR    @14                                                 0632 01705000
*   END AMDPRNT;                    /* END OF INTERNAL PROCEDURE     */ 01706000
*   END AMDPRSN3                                                   0634 01707000
*                                                                  0634 01708000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */ 01709000
*/*%INCLUDE SYSLIB  (AMDPRTAB)                                       */ 01710000
*/*%INCLUDE SYSLIB  (AMDSCNTB)                                       */ 01711000
*                                                                  0634 01712000
*       ;                                                          0634 01713000
@DATA    DS    0H                                                       01714000
@SC00655 CLC   DEVICE1(0,Y),DEVICE(K)                                   01715000
@SM00657 MVC   SAVESLOT(0),DEVICE(K)                                    01716000
@SM00659 MVC   DEVICE(0,K),DEVICE1(Y)                                   01717000
@SM00661 MVC   DEVICE1(0,Y),SAVESLOT                                    01718000
@SC00663 CLC   ELEM1(0,NEWADDR),ELEM(Z)                                 01719000
@SM00665 MVC   SAVESLOT(0),ELEM(Z)                                      01720000
@SM00667 MVC   ELEM(0,Z),ELEM1(NEWADDR)                                 01721000
@SM00669 MVC   ELEM1(0,NEWADDR),SAVESLOT                                01722000
@SM00678 MVC   SUMSGBUF+13(0),@TS00001                                  01723000
@SM00681 MVC   0(0,@14),USEREXIT(AEDITCBR)                              01724000
@SM00683 MVC   0(0,@14),DDNAME(AEDITCBR)                                01725000
@SM00685 MVC   0(0,@14),JOBNAMES-8(@06)                                 01726000
         DS    0F                                                       01727000
@SA00001 DS    18F                                                      01728000
@SA00002 DS    15F                                                      01729000
@TF00001 DS    F                                                        01730000
         DS    0F                                                       01731000
@CF00046 DC    F'1'                                                     01732000
@CF00078 DC    F'2'                                                     01733000
@CF00169 DC    F'3'                                                     01734000
@CF00099 DC    F'4'                                                     01735000
@CF00086 DC    F'5'                                                     01736000
@CF00110 DC    F'6'                                                     01737000
@CF00035 DC    F'7'                                                     01738000
@CF00033 DC    F'8'                                                     01739000
@CF00167 DC    F'9'                                                     01740000
@CF00385 DC    F'10'                                                    01741000
@CF00034 DC    F'11'                                                    01742000
@CF00075 DC    F'12'                                                    01743000
@CF00566 DC    F'13'                                                    01744000
@CF00378 DC    F'14'                                                    01745000
@CF00032 DC    F'15'                                                    01746000
@CF00139 DC    F'16'                                                    01747000
@CF00561 DC    F'17'                                                    01748000
@CF00459 DC    F'18'                                                    01749000
@CF00538 DC    F'19'                                                    01750000
@CF00130 DC    F'20'                                                    01751000
@CF00576 DC    F'71'                                                    01752000
@CA00319 DC    A(AMDPRS00)                                              01753000
         DS    0D                                                       01754000
PATHSW   DS    F                                                        01755000
VAL      DS    F                                                        01756000
ADSUM    DS    A                                                        01757000
JOBCT    DS    FL4                                                      01758000
         ORG   JOBCT                                                    01759000
ASCBCT   DS    FL4                                                      01760000
         ORG   JOBCT+4                                                  01761000
LASTPTR  DS    A                                                        01762000
@TS00001 DS    CL80                                                     01763000
SAVESLOT DC    CL4' '                                                   01764000
RTDSCDES DS    BL4                                                      01765000
SUMSGBUF DS    CL80                                                     01766000
REPSLOT  DC    CL8' '                                                   01767000
SELSW    DC    B'00000000'                                              01768000
EXITCON  DC    CL5'EXIT='                                               01769000
DDCON    DC    CL7'DDNAME='                                             01770000
STARTCON DC    CL6'START='                                              01771000
STARTFIL DC    CL14'(   ,  .  .  )'                                     01772000
STOPCON  DC    CL5'STOP='                                               01773000
STOPFIL  DC    CL14'(   ,  .  .  )'                                     01774000
JOBCON   DC    CL10'JOBNAMES=('                                         01775000
ASCBCON  DC    CL7'ASCBS=('                                             01776000
SIOCON1  DC    CL9'SIO=''ALL'''                                         01777000
SIOCON2  DC    CL9'SIO=''SEL'''                                         01778000
IOCON1   DC    CL8'IO=''ALL'''                                          01779000
IOCON2   DC    CL8'IO=''SEL'''                                          01780000
IOEQU1   DC    CL12'IO=SIO=''ALL'''                                     01781000
IOEQU2   DC    CL12'IO=SIO=''SEL'''                                     01782000
SVCCON1  DC    CL9'SVC=''ALL'''                                         01783000
SVCCON2  DC    CL9'SVC=''SEL'''                                         01784000
PICON1   DC    CL8'PI=''ALL'''                                          01785000
PICON2   DC    CL8'PI=''SEL'''                                          01786000
ALLCON1  DC    CL9'USR=''ALL'''                                         01787000
ALLCON2  DC    CL9'USR=''SEL'''                                         01788000
DSPCON   DC    CL3'DSP'                                                 01789000
EXTCON   DC    CL3'EXT'                                                 01790000
RNIOCON  DC    CL4'RNIO'                                                01791000
SRMCON   DC    CL3'SRM'                                                 01792000
RRCON    DC    CL2'RR'                                                  01793000
EOFCON   DC    CL8'EOF EXIT'                                            01794000
SUMSGID  DC    CL8' '                                                   01795000
SCNPTCH  DC    CL256'SCNPTCH'                                           01796000
         DC    CL256' '                                                 01797000
         DC    CL256' '                                                 01798000
         DC    CL232' '                                                 01799000
         DS    CL2                                                      01800000
BRNWTAB  DC    AL4(AMDPNOW1)                                            01801000
         DC    AL4(AMDPNOW2)                                            01802000
         DC    AL4(AMDPNOW3)                                            01803000
         DC    AL4(AMDPNOW4)                                            01804000
         DC    AL4(AMDPNOW5)                                            01805000
         DC    AL4(AMDPNOW6)                                            01806000
         DC    AL4(AMDPNOW7)                                            01807000
         DC    AL4(AMDPNOW8)                                            01808000
         DC    AL4(AMDPNOW9)                                            01809000
         DC    AL4(AMDPNOWA)                                            01810000
         DC    AL4(AMDPNOWB)                                            01811000
         DC    AL4(AMDPNOWC)                                            01812000
         DC    AL4(AMDPNOWD)                                            01813000
         DC    AL4(AMDPNOWE)                                            01814000
         DC    AL4(AMDPNOWF)                                            01815000
         DC    AL4(AMDPNOWG)                                            01816000
         DC    AL4(AMDPNOWH)                                            01817000
         DC    AL4(AMDPNOWI)                                            01818000
AMDPRSN3 CSECT                                                          01819000
ECB1     DC    F'0'                     NEEDED TO SIGNAL REPLY          01820000
AMDPRSN3 CSECT                                                          01821000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       01822000
@01      EQU   01                                                       01823000
@02      EQU   02                                                       01824000
@03      EQU   03                                                       01825000
@04      EQU   04                                                       01826000
@05      EQU   05                                                       01827000
@06      EQU   06                                                       01828000
@07      EQU   07                                                       01829000
@08      EQU   08                                                       01830000
@09      EQU   09                                                       01831000
@10      EQU   10                                                       01832000
@11      EQU   11                                                       01833000
@12      EQU   12                                                       01834000
@13      EQU   13                                                       01835000
@14      EQU   14                                                       01836000
@15      EQU   15                                                       01837000
K        EQU   @04                                                      01838000
SUMVAL   EQU   @02                                                      01839000
Z        EQU   @06                                                      01840000
Y        EQU   @02                                                      01841000
NEWADDR  EQU   @02                                                      01842000
SORTSW   EQU   @05                                                      01843000
NOWSW    EQU   @05                                                      01844000
AEDITCBR EQU   @09                                                      01845000
TTABPTR  EQU   @03                                                      01846000
REG1     EQU   @01                                                      01847000
REG2     EQU   @02                                                      01848000
REG4     EQU   @04                                                      01849000
REG5     EQU   @05                                                      01850000
REG6     EQU   @06                                                      01851000
REGPT    EQU   @12                                                      01852000
REG15    EQU   @15                                                      01853000
REG7     EQU   @07                                                      01854000
         ENTRY SCNPTCH                                                  01855000
         EXTRN AMDPRS00                                                 01856000
AMDPRTAB EQU   0                                                        01857000
DEBGFLGS EQU   AMDPRTAB+8                                               01858000
PTHFLGS1 EQU   DEBGFLGS                                                 01859000
SCN      EQU   PTHFLGS1                                                 01860000
PTHFLGS2 EQU   DEBGFLGS+1                                               01861000
INRFCFGS EQU   DEBGFLGS+2                                               01862000
FLMODE   EQU   INRFCFGS                                                 01863000
IOFLGS   EQU   DEBGFLGS+3                                               01864000
USEREXIT EQU   AMDPRTAB+24                                              01865000
DDNAME   EQU   AMDPRTAB+32                                              01866000
STARTIME EQU   AMDPRTAB+40                                              01867000
STOPTIME EQU   AMDPRTAB+52                                              01868000
NAMES    EQU   AMDPRTAB+64                                              01869000
JOBNAMES EQU   NAMES                                                    01870000
ADS      EQU   AMDPRTAB+104                                             01871000
AADS     EQU   ADS                                                      01872000
ASCBADDR EQU   AADS                                                     01873000
SIF      EQU   AMDPRTAB+124                                             01874000
SIOFLGS  EQU   SIF                                                      01875000
ALLS     EQU   SIOFLGS                                                  01876000
SELS     EQU   SIOFLGS                                                  01877000
EQUIV    EQU   SIOFLGS                                                  01878000
NOEQU    EQU   SIOFLGS                                                  01879000
DVADS1   EQU   AMDPRTAB+128                                             01880000
IO       EQU   AMDPRTAB+228                                             01881000
IOFLGS2  EQU   IO                                                       01882000
ALLI     EQU   IOFLGS2                                                  01883000
SELI     EQU   IOFLGS2                                                  01884000
DVADS2   EQU   AMDPRTAB+232                                             01885000
VCF      EQU   AMDPRTAB+332                                             01886000
SVCFLGS  EQU   VCF                                                      01887000
ALLV     EQU   SVCFLGS                                                  01888000
SELV     EQU   SVCFLGS                                                  01889000
SVCNUMS  EQU   AMDPRTAB+336                                             01890000
USR      EQU   AMDPRTAB+368                                             01891000
USRFLGS  EQU   USR                                                      01892000
ALLU     EQU   USRFLGS                                                  01893000
SELU     EQU   USRFLGS                                                  01894000
USRTAB   EQU   AMDPRTAB+372                                             01895000
USRNGTAB EQU   USRTAB                                                   01896000
PI       EQU   AMDPRTAB+452                                             01897000
PIFLGS   EQU   PI                                                       01898000
ALLP     EQU   PIFLGS                                                   01899000
SELP     EQU   PIFLGS                                                   01900000
PGMNGEN  EQU   AMDPRTAB+456                                             01901000
PICODES  EQU   PGMNGEN                                                  01902000
PICODEA  EQU   PGMNGEN+2                                                01903000
GENFLAGS EQU   PGMNGEN+3                                                01904000
EXT      EQU   GENFLAGS                                                 01905000
DSP      EQU   GENFLAGS                                                 01906000
SYS      EQU   GENFLAGS                                                 01907000
SYSM     EQU   GENFLAGS                                                 01908000
RNIO     EQU   GENFLAGS                                                 01909000
SRM      EQU   GENFLAGS                                                 01910000
RR       EQU   GENFLAGS                                                 01911000
EOF      EQU   GENFLAGS                                                 01912000
GENFLGS1 EQU   AMDPRTAB+460                                             01913000
ESTARTME EQU   AMDPRTAB+500                                             01914000
ESDAY    EQU   ESTARTME                                                 01915000
ESHR     EQU   ESTARTME+3                                               01916000
ESMIN    EQU   ESTARTME+5                                               01917000
ESSEC    EQU   ESTARTME+7                                               01918000
ESTOPTME EQU   AMDPRTAB+509                                             01919000
ESPDAY   EQU   ESTOPTME                                                 01920000
ESPHR    EQU   ESTOPTME+3                                               01921000
ESPMIN   EQU   ESTOPTME+5                                               01922000
ESPSEC   EQU   ESTOPTME+7                                               01923000
AMDSCNTB EQU   0                                                        01924000
TEMPTAB  EQU   AMDSCNTB                                                 01925000
EXITNAME EQU   TEMPTAB                                                  01926000
DDNM     EQU   TEMPTAB+8                                                01927000
STARTSL  EQU   TEMPTAB+16                                               01928000
STOPSL   EQU   TEMPTAB+28                                               01929000
OVERLTAB EQU   TEMPTAB+40                                               01930000
OVERSL   EQU   OVERLTAB                                                 01931000
SIOTFLGS EQU   TEMPTAB+80                                               01932000
IOTFLGS  EQU   TEMPTAB+81                                               01933000
USRTFLGS EQU   TEMPTAB+82                                               01934000
SVCTFLGS EQU   TEMPTAB+83                                               01935000
PITFLGS  EQU   TEMPTAB+84                                               01936000
SYSTFLGS EQU   TEMPTAB+85                                               01937000
SIOPTR   EQU   TEMPTAB+88                                               01938000
IOPTR    EQU   TEMPTAB+92                                               01939000
JOBNPTR  EQU   TEMPTAB+96                                               01940000
ASCBPTR  EQU   TEMPTAB+100                                              01941000
SIOCRPTR EQU   TEMPTAB+104                                              01942000
IOCRPTR  EQU   TEMPTAB+108                                              01943000
JOBCRPTR EQU   TEMPTAB+112                                              01944000
ASCBCPTR EQU   TEMPTAB+116                                              01945000
USRCOUNT EQU   TEMPTAB+120                                              01946000
USRCRCNT EQU   TEMPTAB+124                                              01947000
SVCSTR   EQU   TEMPTAB+128                                              01948000
PISTR    EQU   TEMPTAB+160                                              01949000
PISTRB   EQU   TEMPTAB+162                                              01950000
SCNBITS  EQU   AMDSCNTB+163                                             01951000
SCANBIT  EQU   SCNBITS                                                  01952000
RUNEDIT  EQU   SCNBITS                                                  01953000
PRNSW    EQU   SCNBITS                                                  01954000
CODETABL EQU   AMDSCNTB+164                                             01955000
WORD     EQU   AMDSCNTB+168                                             01956000
DBLWORD  EQU   AMDSCNTB+176                                             01957000
BLANK1   EQU   AMDSCNTB+316                                             01958000
SCNPTR   EQU   AMDSCNTB+336                                             01959000
ADDRS3   EQU   AMDSCNTB+348                                             01960000
COMP4    EQU   AMDSCNTB+360                                             01961000
COMP8    EQU   AMDSCNTB+364                                             01962000
SAVETAB  EQU   AMDSCNTB+376                                             01963000
SORTPTR  EQU   AMDSCNTB+380                                             01964000
SRTTABPT EQU   AMDSCNTB+384                                             01965000
INCRT    EQU   AMDSCNTB+388                                             01966000
I        EQU   AMDSCNTB+396                                             01967000
INTSTART EQU   AMDSCNTB+404                                             01968000
INTSTOP  EQU   AMDSCNTB+409                                             01969000
AMDPRSYN EQU   0                                                        01970000
MSGADDR  EQU   0                                                        01971000
ERRBUF   EQU   0                                                        01972000
DEVICE   EQU   0                                                        01973000
CNVTRTN2 EQU   0                                                        01974000
DEVICE1  EQU   0                                                        01975000
ELEM     EQU   0                                                        01976000
ELEM1    EQU   0                                                        01977000
JOBCHAR  EQU   0                                                        01978000
REINIT   EQU   0                                                        01979000
DEVCHAR  EQU   0                                                        01980000
CNVTRTN  EQU   0                                                        01981000
SCNCHAR  EQU   0                                                        01982000
VAL1     EQU   0                                                        01983000
AD11     EQU   AMDPRS00+40                                              01984000
GFLSHMOD EQU   SWD                                                      01985000
GNOSTDMG EQU   SWD                                                      01986000
GCONTSW  EQU   SWD                                                      01987000
GRDRSW   EQU   SWA                                                      01988000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    01989000
GSETCVTS EQU   SWA                                                      01990000
GPRNTSW  EQU   SWA                                                      01991000
GGOSW    EQU   SWA                                                      01992000
GTSOSW   EQU   SWA                                                      01993000
GJBNMSW  EQU   SWA                                                      01994000
GREAD    EQU   SWA                                                      01995000
GSTORSW  EQU   SWA                                                      01996000
GFRBUFSW EQU   SWD                                                      01997000
GGPRSFND EQU   SWD                                                      01998000
GPREFMTD EQU   SWD                                                      01999000
GNCDUMP  EQU   SWD                                                      02000000
GSWPDCBC EQU   SWD                                                      02001000
AD10     EQU   AMDPRS00+36                                              02002000
AD9      EQU   AMDPRS00+32                                              02003000
AD8      EQU   AMDPRS00+28                                              02004000
AD7      EQU   AMDPRS00+24                                              02005000
AD6      EQU   AMDPRS00+20                                              02006000
AD5      EQU   AMDPRS00+16                                              02007000
AD4      EQU   AMDPRS00+12                                              02008000
AD3      EQU   AMDPRS00+8                                               02009000
AD2      EQU   AMDPRS00+4                                               02010000
AD1      EQU   AMDPRS00                                                 02011000
J        EQU   AMDSCNTB+400                                             02012000
ALLCT    EQU   AMDSCNTB+392                                             02013000
ALLPTR   EQU   SAVETAB                                                  02014000
SVKEY    EQU   AMDSCNTB+372                                             02015000
LNGTH    EQU   AMDSCNTB+356                                             02016000
EOCADDR  EQU   AMDSCNTB+352                                             02017000
ADDRS1   EQU   AMDSCNTB+344                                             02018000
BUFADDR  EQU   AMDSCNTB+340                                             02019000
MASKS    EQU   AMDSCNTB+328                                             02020000
KWTAB2   EQU   AMDSCNTB+228                                             02021000
KWTAB1   EQU   AMDSCNTB+184                                             02022000
@NM00003 EQU   CODETABL+2                                               02023000
PAREN    EQU   CODETABL+2                                               02024000
NOVAL    EQU   CODETABL+2                                               02025000
CEOF     EQU   CODETABL+2                                               02026000
CRR      EQU   CODETABL+2                                               02027000
CSRM     EQU   CODETABL+1                                               02028000
CRNIO    EQU   CODETABL+1                                               02029000
CDSP     EQU   CODETABL+1                                               02030000
CEXT     EQU   CODETABL+1                                               02031000
CSYS     EQU   CODETABL+1                                               02032000
CPI      EQU   CODETABL+1                                               02033000
CSVC     EQU   CODETABL+1                                               02034000
CIO      EQU   CODETABL+1                                               02035000
CSIO     EQU   CODETABL                                                 02036000
CUSR     EQU   CODETABL                                                 02037000
CASCB    EQU   CODETABL                                                 02038000
CJOBN    EQU   CODETABL                                                 02039000
CSTOP    EQU   CODETABL                                                 02040000
CSTART   EQU   CODETABL                                                 02041000
CDDN     EQU   CODETABL                                                 02042000
CXIT     EQU   CODETABL                                                 02043000
RESBITS  EQU   SCNBITS                                                  02044000
EQUIND   EQU   SCNBITS                                                  02045000
MORESW   EQU   SCNBITS                                                  02046000
IORTNSW  EQU   SCNBITS                                                  02047000
@NM00002 EQU   TEMPTAB+86                                               02048000
EOFT     EQU   SYSTFLGS                                                 02049000
RRT      EQU   SYSTFLGS                                                 02050000
SRMT     EQU   SYSTFLGS                                                 02051000
RNIOT    EQU   SYSTFLGS                                                 02052000
SYSMT    EQU   SYSTFLGS                                                 02053000
SYST     EQU   SYSTFLGS                                                 02054000
DSPT     EQU   SYSTFLGS                                                 02055000
EXTT     EQU   SYSTFLGS                                                 02056000
T        EQU   PITFLGS                                                  02057000
SELPT    EQU   PITFLGS                                                  02058000
ALLPT    EQU   PITFLGS                                                  02059000
GT       EQU   SVCTFLGS                                                 02060000
SELVT    EQU   SVCTFLGS                                                 02061000
ALLVT    EQU   SVCTFLGS                                                 02062000
ET       EQU   USRTFLGS                                                 02063000
SELUT    EQU   USRTFLGS                                                 02064000
ALLUT    EQU   USRTFLGS                                                 02065000
BT       EQU   IOTFLGS                                                  02066000
SELIT    EQU   IOTFLGS                                                  02067000
ALLIT    EQU   IOTFLGS                                                  02068000
AT       EQU   SIOTFLGS                                                 02069000
NOEQUT   EQU   SIOTFLGS                                                 02070000
EQUIVT   EQU   SIOTFLGS                                                 02071000
SELST    EQU   SIOTFLGS                                                 02072000
ALLST    EQU   SIOTFLGS                                                 02073000
DYSTP    EQU   STOPSL+10                                                02074000
YRSTP    EQU   STOPSL+8                                                 02075000
TIMERU   EQU   STOPSL                                                   02076000
DY       EQU   STARTSL+10                                               02077000
YR       EQU   STARTSL+8                                                02078000
TIMEU    EQU   STARTSL                                                  02079000
RESERVED EQU   AMDPRTAB+522                                             02080000
CVTTZONE EQU   AMDPRTAB+518                                             02081000
ADTSBUF  EQU   AMDPRTAB+496                                             02082000
OFSTDATA EQU   AMDPRTAB+494                                             02083000
OFSTEID  EQU   AMDPRTAB+492                                             02084000
AFRMAD   EQU   AMDPRTAB+488                                             02085000
REENTWKA EQU   AMDPRTAB+484                                             02086000
PRFMTADD EQU   AMDPRTAB+480                                             02087000
AEIOCT   EQU   AMDPRTAB+476                                             02088000
EXITADDR EQU   AMDPRTAB+472                                             02089000
EXITNM   EQU   AMDPRTAB+464                                             02090000
RECDLL   EQU   AMDPRTAB+461                                             02091000
@NM00001 EQU   GENFLGS1                                                 02092000
FIRSTHSW EQU   GENFLGS1                                                 02093000
TSFOUND  EQU   GENFLGS1                                                 02094000
EOFINPRO EQU   GENFLGS1                                                 02095000
TS       EQU   GENFLGS1                                                 02096000
Q        EQU   PI+1                                                     02097000
P01R     EQU   PIFLGS                                                   02098000
O        EQU   USR+1                                                    02099000
N01R     EQU   USRFLGS                                                  02100000
M        EQU   VCF+1                                                    02101000
L        EQU   SVCFLGS                                                  02102000
IODVADS  EQU   DVADS2                                                   02103000
K01RES   EQU   IO+1                                                     02104000
JJ       EQU   IOFLGS2                                                  02105000
SIODVADS EQU   DVADS1                                                   02106000
II       EQU   SIF+1                                                    02107000
H        EQU   SIOFLGS                                                  02108000
DAY2     EQU   STOPTIME+10                                              02109000
F        EQU   STOPTIME+8                                               02110000
TIME2    EQU   STOPTIME                                                 02111000
DAY      EQU   STARTIME+10                                              02112000
D        EQU   STARTIME+8                                               02113000
TIME     EQU   STARTIME                                                 02114000
GTFWDPTR EQU   AMDPRTAB+20                                              02115000
C        EQU   DEBGFLGS+4                                               02116000
B        EQU   IOFLGS                                                   02117000
GETEOF   EQU   IOFLGS                                                   02118000
DMDFMT   EQU   INRFCFGS                                                 02119000
EDITSTOP EQU   INRFCFGS                                                 02120000
EXTTRC   EQU   INRFCFGS                                                 02121000
RET      EQU   INRFCFGS                                                 02122000
FMT      EQU   INRFCFGS                                                 02123000
SPIE     EQU   INRFCFGS                                                 02124000
TERM     EQU   INRFCFGS                                                 02125000
REMAIN   EQU   PTHFLGS2                                                 02126000
APP      EQU   PTHFLGS2                                                 02127000
REXT     EQU   PTHFLGS1                                                 02128000
FRM      EQU   PTHFLGS1                                                 02129000
FLT      EQU   PTHFLGS1                                                 02130000
HEX      EQU   PTHFLGS1                                                 02131000
CON      EQU   PTHFLGS1                                                 02132000
GET      EQU   PTHFLGS1                                                 02133000
ROOT     EQU   PTHFLGS1                                                 02134000
CURREC   EQU   AMDPRTAB+4                                               02135000
AFMG     EQU   AMDPRTAB                                                 02136000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      02137000
@RT00106 EQU   AMDTCB1                                                  02138000
@RT00110 EQU   AMDSIO1                                                  02139000
@RT00114 EQU   AMDIO1                                                   02140000
@RT00118 EQU   AMDUSRBL                                                 02141000
@RT00132 EQU   AMDPST4                                                  02142000
@RT00145 EQU   AMDTCB                                                   02143000
@RT00149 EQU   AMDSIO                                                   02144000
@RT00154 EQU   AMDIO                                                    02145000
@RT00159 EQU   AMDUSRCT                                                 02146000
AMDRET3  EQU   @EL00001                                                 02147000
@RT00181 EQU   AMDPFIN1                                                 02148000
@RT00198 EQU   AMDPDEV2                                                 02149000
@RT00200 EQU   AMDPDEV2                                                 02150000
@RT00211 EQU   AMDPFIN3                                                 02151000
@RT00215 EQU   AMDPFIN3                                                 02152000
@RT00223 EQU   AMDPSUM                                                  02153000
@RT00237 EQU   AMDRET3                                                  02154000
@RT00241 EQU   AMDRET3                                                  02155000
@RT00249 EQU   AMDPSUMM                                                 02156000
@RF00247 EQU   AMDPSUMM                                                 02157000
@RT00257 EQU   AMDPSUMN                                                 02158000
@RT00259 EQU   AMDPSUMN                                                 02159000
@RT00292 EQU   AMDPSUM2                                                 02160000
@RT00299 EQU   AMDPSUM3                                                 02161000
@RT00304 EQU   AMDPSUM4                                                 02162000
@RT00309 EQU   AMDPSUM5                                                 02163000
@RT00314 EQU   AMDPSUM6                                                 02164000
@RT00320 EQU   AMDPSUM7                                                 02165000
@RT00326 EQU   AMDPSUM8                                                 02166000
@RT00331 EQU   AMDPSUM9                                                 02167000
@RT00336 EQU   AMDPSUMA                                                 02168000
@RT00341 EQU   AMDPSUMB                                                 02169000
@RT00346 EQU   AMDPSUMC                                                 02170000
@RT00351 EQU   AMDPSUMF                                                 02171000
@RT00356 EQU   AMDPSUMG                                                 02172000
@RT00361 EQU   AMDPSUMH                                                 02173000
@RT00366 EQU   AMDPSUMI                                                 02174000
@RT00371 EQU   AMDPSUMD                                                 02175000
@RT00376 EQU   AMDPSUME                                                 02176000
@RT00381 EQU   AMDPNOWE                                                 02177000
@RT00395 EQU   CKPATH                                                   02178000
@RT00399 EQU   CALC                                                     02179000
@RT00405 EQU   AMDPNPRN                                                 02180000
@RT00483 EQU   AMDPNW51                                                 02181000
@RT00497 EQU   AMDPNW53                                                 02182000
@RT00499 EQU   AMDPNW53                                                 02183000
@RT00508 EQU   AMDPNW61                                                 02184000
@RT00522 EQU   AMDPFIT                                                  02185000
@RT00529 EQU   AMDPNW64                                                 02186000
@RT00531 EQU   AMDPNW64                                                 02187000
@RT00541 EQU   AMDPNW71                                                 02188000
@RT00543 EQU   AMDPNOW8                                                 02189000
@RT00554 EQU   AMDPNW82                                                 02190000
@RT00556 EQU   AMDPNW82                                                 02191000
@RT00575 EQU   AMDPNW91                                                 02192000
@RT00583 EQU   AMDPNWA1                                                 02193000
@RT00591 EQU   AMDPNWB1                                                 02194000
@RT00175 EQU   AMDRET3                                                  02195000
@ENDDATA EQU   *                                                        02196000
         END   AMDPRSN3,(C'PLS2034',0701,76224)                         02197000
./  ADD  SSI=61530082,NAME=AMDSYS00
         TITLE 'AMDSYS00 - EDIT FORMATTING ROUTINE, SIO-IO RECORDS     *00001000
                        '                                               00002000
AMDSYS00 CSECT ,                                                01S0001 00003000
@MAINENT DS    0H                                               01S0001 00004000
         USING *,@15                                            01S0001 00005000
         B     @PROLOG                                          01S0001 00006000
         DC    AL1(16)                                          01S0001 00007000
         DC    C'AMDSYS00  76.153'                              01S0001 00008000
         DROP  @15                                                      00009000
@PROLOG  STM   @14,@12,12(@13)                                  01S0001 00010000
         BALR  @10,0                                            01S0001 00011000
@PSTART  DS    0H                                               01S0001 00012000
         USING @PSTART,@10                                      01S0001 00013000
*/********************************************************************/ 00014000
*/*                                                                  */ 00015000
*/*                             AMDSYS00                             */ 00016000
*/*                                                                  */ 00017000
*/********************************************************************/ 00018000
* R11=R1;                          /* MOVE PARM ADDRESS TO R11       */ 00019000
         LR    R11,R1                                           01S0039 00020000
* R12=WKAREADD;                    /* R12 IS BASE FOR 200 BYTE WORK  */ 00021000
         L     R12,WKAREADD(,R11)                               01S0040 00022000
*                                  /* AREA USED FOR DSECT            */ 00023000
* GEN SETS(R13,R15);               /* SET UP USING, SAVE AREA REG    */ 00024000
         USING @DATD,R12                                                00025000
         ST    R13,@SA00001+4                                           00026000
         LA    R15,@SA00001                                             00027000
         ST    R15,8(R13)                                               00028000
         LR    R13,R15                                                  00029000
*/********************************************************************/ 00030000
*/*                                                                  */ 00031000
*/*  THIS SEGMENT CHECKS THE INPUT RECORD TO SEE IF IT SHOULD BE     */ 00032000
*/*  PRINTED OR NOT, AND IF SO, WHETHER THE RECORD IS TO BE DUMPED   */ 00033000
*/*  IN HEX, FORMATTED IN 2 LINES, OR FORMATTED IN 1 LINE. THE       */ 00034000
*/*  APPROPRIATE RETURN CODE IS SET UP FOR EACH CASE.                */ 00035000
*/*                                                                  */ 00036000
*/********************************************************************/ 00037000
* IF RECERR='EEEE'X THEN           /* IF RECORD WAS IN ERROR,        */ 00038000
         L     @14,DATAPTR(,R11)                                02S0042 00039000
         CLC   RECERR(2,@14),@CB00622                           02S0042 00040000
         BNE   @RF00042                                         02S0042 00041000
*   RC=HEXDUMP;                    /* DUMP IT IN HEX                 */ 00042000
         LA    RC,12                                            02S0043 00043000
* ELSE                                                          02S0044 00044000
*   DO;                                                         02S0044 00045000
         B     @RC00042                                         02S0044 00046000
@RF00042 DS    0H                                               02S0045 00047000
*     IF TIME2SW=ON | RECEID=IMDMIO1 THEN /* IF 2ND TIME THRU, OR    */ 00048000
         TM    TIME2SW,B'10000000'                              02S0045 00049000
         BO    @RT00045                                         02S0045 00050000
         L     @14,EIDPTR(,R11)                                 02S0045 00051000
         CLC   RECEID(2,@14),@CB00208                           02S0045 00052000
         BNE   @RF00045                                         02S0045 00053000
@RT00045 DS    0H                                               02S0046 00054000
*                                  /* IF UIO RECORD, THEN ONLY       */ 00055000
*       RC=PRNTLAST;               /* 1 LINE NEEDED                  */ 00056000
         LA    RC,4                                             02S0046 00057000
*     ELSE                                                      02S0047 00058000
*       DO;                                                     02S0047 00059000
         B     @RC00045                                         02S0047 00060000
@RF00045 DS    0H                                               02S0048 00061000
*         DO CTR=1 TO DIM(MYEIDTAB) WHILE LOOPDONE=OFF;         02S0048 00062000
         LA    CTR,1                                            02S0048 00063000
@DL00048 TM    LOOPDONE,B'01000000'                             02S0048 00064000
         BNZ   @DC00048                                         02S0048 00065000
*           IF RECEID=MYEIDTAB(CTR) THEN /* IF 2 LINE EID FOUND,     */ 00066000
         L     @14,EIDPTR(,R11)                                 02S0049 00067000
         LR    @08,CTR                                          02S0049 00068000
         ALR   @08,@08                                          02S0049 00069000
         LA    @07,MYEIDTAB-2(@08)                              02S0049 00070000
         CLC   RECEID(2,@14),0(@07)                             02S0049 00071000
         BNE   @RF00049                                         02S0049 00072000
*             LOOPDONE=ON;         /* FORCE LOOP EXIT                */ 00073000
         OI    LOOPDONE,B'01000000'                             02S0050 00074000
*         END;                                                  02S0051 00075000
@RF00049 AL    CTR,@CF00044                                     02S0051 00076000
         C     CTR,@CF00098                                     02S0051 00077000
         BNH   @DL00048                                         02S0051 00078000
@DC00048 DS    0H                                               02S0052 00079000
*         IF LOOPDONE=ON THEN      /* IF EXIT WAS FORCED, THEN       */ 00080000
         TM    LOOPDONE,B'01000000'                             02S0052 00081000
         BNO   @RF00052                                         02S0052 00082000
*           DO;                    /* EID WAS FOUND                  */ 00083000
*             LOOPDONE=OFF;        /* RESET SWITCH, AND INDICATE     */ 00084000
         NI    LOOPDONE,B'10111111'                             02S0054 00085000
*             RC=PRNTFRST;         /* LINE 1 OF 2 TO BE PROCESSED    */ 00086000
         SLR   RC,RC                                            02S0055 00087000
*           END;                                                02S0056 00088000
*         ELSE                     /* NO EID FOUND,                  */ 00089000
*           RC=RECSKIP;            /* SKIP RECORD                    */ 00090000
         B     @RC00052                                         02S0057 00091000
@RF00052 LA    RC,8                                             02S0057 00092000
*       END;                                                    02S0058 00093000
@RC00052 DS    0H                                               02S0059 00094000
*   END;                                                        02S0059 00095000
@RC00045 DS    0H                                               02S0060 00096000
* IF RC=PRNTFRST | RC=PRNTLAST THEN  /* IF RECORD IS FORMATTED BY    */ 00097000
@RC00042 LTR   RC,RC                                            01S0060 00098000
         BZ    @RT00060                                         01S0060 00099000
         C     RC,@CF00098                                      01S0060 00100000
         BNE   @RF00060                                         01S0060 00101000
@RT00060 DS    0H                                               01S0061 00102000
*                                  /* THIS ROUTINE,                  */ 00103000
*   DO;                            /* THEN FORMAT IT                 */ 00104000
*/********************************************************************/ 00105000
*/*                                                                  */ 00106000
*/*  THIS SEGMENT FORMATS THE INPUT RECORD AFTER DECIDING WHICH      */ 00107000
*/*  FORMAT TO USE.                                                  */ 00108000
*/*                                                                  */ 00109000
*/********************************************************************/ 00110000
* R4=SNAPPARM->ADPLBUF;            /* LOAD ADDR OF LOCAL BUFFER      */ 00111000
         L     @14,SNAPPARM(,R11)                               02S0062 00112000
         L     R4,ADPLBUF(,@14)                                 02S0062 00113000
* IF RECEID=IMDMIO1 THEN           /* IF UIO RECORD, FORMAT IT       */ 00114000
         L     @14,EIDPTR(,R11)                                 02S0063 00115000
         CLC   RECEID(2,@14),@CB00208                           02S0063 00116000
         BNE   @RF00063                                         02S0063 00117000
*   DO;                                                         02S0064 00118000
*/********************************************************************/ 00119000
*/*                                                                  */ 00120000
*/*  THIS SEGMENT FORMATS THE UIO RECORD INTO 1 OUTPUT LINE.         */ 00121000
*/*                                                                  */ 00122000
*/********************************************************************/ 00123000
* CALL CHECKDEV (UIODEV,IO);       /* SEE IF DEVICE IS BEING TRACED  */ 00124000
         L     @14,DATAPTR(,R11)                                03S0065 00125000
         LA    @14,UIODEV(,@14)                                 03S0065 00126000
         ST    @14,@AL00001                                     03S0065 00127000
         LA    @14,IO(,AEDITCBR)                                03S0065 00128000
         ST    @14,@AL00001+4                                   03S0065 00129000
         LA    @01,@AL00001                                     03S0065 00130000
         BAL   @14,CHECKDEV                                     03S0065 00131000
* IF R15=0 THEN                    /* IF DEVICE IS BEING TRACED,     */ 00132000
         LTR   R15,R15                                          03S0066 00133000
         BNZ   @RF00066                                         03S0066 00134000
*   DO;                            /* FORMAT THE RECORD              */ 00135000
*     R0=ADDR(UIOPTRN);            /* SET UP PATTERN ADDRESS         */ 00136000
         LA    R0,UIOPTRN                                       03S0068 00137000
*     R1=SNAPPARM;                 /* POINT TO PARM FOR FORMAT       */ 00138000
         L     R1,SNAPPARM(,R11)                                03S0069 00139000
*     ADPLFMT1=ADDR(UIOLBLS);      /* INITIALIZE LABEL POINTER       */ 00140000
         LA    @14,UIOLBLS                                      03S0070 00141000
         ST    @14,ADPLFMT1(,R1)                                03S0070 00142000
*     ADPLFMT2=DATAPTR;            /* INITIALIZE DATA POINTER        */ 00143000
         L     @14,DATAPTR(,R11)                                03S0071 00144000
         ST    @14,ADPLFMT2(,R1)                                03S0071 00145000
*     CALL FRMT;                   /* FORMAT THE LINE                */ 00146000
         L     @15,FRMADDR(,R11)                                03S0072 00147000
         BALR  @14,@15                                          03S0072 00148000
*   END;                                                        03S0073 00149000
* ELSE                             /* DEVICE IS NOT BEING TRACED     */ 00150000
*   RC=RECSKIP;                    /* SKIP RECORD                    */ 00151000
         B     @RC00066                                         03S0074 00152000
@RF00066 LA    RC,8                                             03S0074 00153000
*   END;                                                        02S0075 00154000
* ELSE                                                          02S0076 00155000
*   DO;                                                         02S0076 00156000
         B     @RC00063                                         02S0076 00157000
@RF00063 DS    0H                                               02S0077 00158000
*     IF RECEID=IMDMSIO THEN       /* IF SIO RECORD, FORMAT 1 LINE   */ 00159000
         L     @14,EIDPTR(,R11)                                 02S0077 00160000
         CLC   RECEID(2,@14),@CB00212                           02S0077 00161000
         BNE   @RF00077                                         02S0077 00162000
*       DO;                                                     02S0078 00163000
*/********************************************************************/ 00164000
*/*                                                                  */ 00165000
*/*  THIS SEGMENT FORMATS A LINE OF THE SIO RECORD.                  */ 00166000
*/*                                                                  */ 00167000
*/********************************************************************/ 00168000
* IF TIME2SW=OFF THEN              /* IF THIS IS THE FIRST TIME FOR  */ 00169000
         TM    TIME2SW,B'10000000'                              03S0079 00170000
         BNZ   @RF00079                                         03S0079 00171000
*                                  /* THIS RECORD,                   */ 00172000
*   DO;                            /* FORMAT THE FIRST LINE          */ 00173000
*     CALL CHECKDEV (SIODEV,SIF);  /* ARE WE FORMATTING THIS DEVICE  */ 00174000
         L     @14,DATAPTR(,R11)                                03S0081 00175000
         LA    @14,SIODEV(,@14)                                 03S0081 00176000
         ST    @14,@AL00001                                     03S0081 00177000
         LA    @14,SIF(,AEDITCBR)                               03S0081 00178000
         ST    @14,@AL00001+4                                   03S0081 00179000
         LA    @01,@AL00001                                     03S0081 00180000
         BAL   @14,CHECKDEV                                     03S0081 00181000
*     IF R15=0 THEN                                             03S0082 00182000
         LTR   R15,R15                                          03S0082 00183000
         BNZ   @RF00082                                         03S0082 00184000
*       DO;                        /* YES, FORMAT LINE ONE           */ 00185000
*         R1=SNAPPARM;             /* SET UP PARM FOR FORMAT         */ 00186000
         L     R1,SNAPPARM(,R11)                                03S0084 00187000
*         R0=ADDR(SIOPTRN1);       /* POINT TO FIRST PATTERN         */ 00188000
         LA    R0,SIOPTRN1                                      03S0085 00189000
*         ADPLFMT1=ADDR(SIOLBLS);  /* INITIALIZE LABEL POINTER       */ 00190000
         LA    @14,SIOLBLS                                      03S0086 00191000
         ST    @14,ADPLFMT1(,R1)                                03S0086 00192000
*         ADPLFMT2=DATAPTR;        /* INITIALIZE DATA POINTER        */ 00193000
         L     @14,DATAPTR(,R11)                                03S0087 00194000
         ST    @14,ADPLFMT2(,R1)                                03S0087 00195000
*         CALL FRMT;               /* FORMAT PART OF LINE            */ 00196000
         L     @15,FRMADDR(,R11)                                03S0088 00197000
         BALR  @14,@15                                          03S0088 00198000
*         R0=ADDR(SIOPTRN2);       /* SET UP 2ND PATTERN             */ 00199000
         LA    R0,SIOPTRN2                                      03S0089 00200000
*         ADPLFMT2=ADDR(SIODEV);   /* POINT TO REST OF DATA          */ 00201000
         L     @14,DATAPTR(,R11)                                03S0090 00202000
         LA    @14,SIODEV(,@14)                                 03S0090 00203000
         ST    @14,ADPLFMT2(,R1)                                03S0090 00204000
*         CALL FRMT;               /* FORMAT REST OF LINE            */ 00205000
         L     @15,FRMADDR(,R11)                                03S0091 00206000
         BALR  @14,@15                                          03S0091 00207000
*/********************************************************************/ 00208000
*/*                                                                  */ 00209000
*/*  THIS SEGMENT CHECKS CERTAIN FIELDS IN THE SIO RECORD FOR        */ 00210000
*/*  'U/A' OR ASTERISKS. IF THE FIELD CONTAINS EITHER INDICATOR, THE */ 00211000
*/*  FORMATTED LINE IN THE OUTPUT BUFFER IS MODIFIED TO REFLECT THE  */ 00212000
*/*  INDICATION.                                                     */ 00213000
*/*                                                                  */ 00214000
*/********************************************************************/ 00215000
* IF SIOASCB=UA(1:LENGTH(SIOASCB)) THEN  /* CHECK ASCB FIELD         */ 00216000
         L     @14,DATAPTR(,R11)                                04S0092 00217000
         CLC   SIOASCB(4,@14),UA                                04S0092 00218000
         BNE   @RF00092                                         04S0092 00219000
*   BUFFER(16:23)=UA;                                           04S0093 00220000
         MVC   BUFFER+15(8,R4),UA                               04S0093 00221000
* ELSE                                                          04S0094 00222000
*   IF SIOASCB=ASTER(1:LENGTH(SIOASCB)) THEN                    04S0094 00223000
         B     @RC00092                                         04S0094 00224000
@RF00092 L     @14,DATAPTR(,R11)                                04S0094 00225000
         CLC   SIOASCB(4,@14),ASTER                             04S0094 00226000
         BNE   @RF00094                                         04S0094 00227000
*     BUFFER(16:23)=ASTER;                                      04S0095 00228000
         MVC   BUFFER+15(8,R4),ASTER                            04S0095 00229000
* IF SIOCPA=UA THEN                /* CHECK CPA FIELD                */ 00230000
@RF00094 DS    0H                                               04S0096 00231000
@RC00092 L     @14,DATAPTR(,R11)                                04S0096 00232000
         CLC   SIOCPA(8,@14),UA                                 04S0096 00233000
         BNE   @RF00096                                         04S0096 00234000
*   DO;                                                         04S0097 00235000
*     BUFFER(59:66)=UA;                                         04S0098 00236000
         MVC   BUFFER+58(8,R4),UA                               04S0098 00237000
*     BUFFER(68:75)='';                                         04S0099 00238000
         MVI   BUFFER+67(R4),C' '                               04S0099 00239000
         MVC   BUFFER+68(7,R4),BUFFER+67(R4)                    04S0099 00240000
*   END;                                                        04S0100 00241000
* ELSE                                                          04S0101 00242000
*   IF SIOCPA=ASTER THEN                                        04S0101 00243000
         B     @RC00096                                         04S0101 00244000
@RF00096 L     @14,DATAPTR(,R11)                                04S0101 00245000
         CLC   SIOCPA(8,@14),ASTER                              04S0101 00246000
         BNE   @RF00101                                         04S0101 00247000
*     DO;                                                       04S0102 00248000
*       BUFFER(59:66)=ASTER;                                    04S0103 00249000
         MVC   BUFFER+58(8,R4),ASTER                            04S0103 00250000
*       BUFFER(68:75)=ASTER;                                    04S0104 00251000
         MVC   BUFFER+67(8,R4),ASTER                            04S0104 00252000
*     END;                                                      04S0105 00253000
* IF SIODSID=UA(1:LENGTH(SIODSID)) THEN  /* CHECK DSID FIELD         */ 00254000
@RF00101 DS    0H                                               04S0106 00255000
@RC00096 L     @14,DATAPTR(,R11)                                04S0106 00256000
         CLC   SIODSID(4,@14),UA                                04S0106 00257000
         BNE   @RF00106                                         04S0106 00258000
*   BUFFER(97:104)=UA;                                          04S0107 00259000
         MVC   BUFFER+96(8,R4),UA                               04S0107 00260000
* ELSE                                                          04S0108 00261000
*   IF SIODSID=ASTER(1:LENGTH(SIODSID)) THEN                    04S0108 00262000
         B     @RC00106                                         04S0108 00263000
@RF00106 L     @14,DATAPTR(,R11)                                04S0108 00264000
         CLC   SIODSID(4,@14),ASTER                             04S0108 00265000
         BNE   @RF00108                                         04S0108 00266000
*     BUFFER(97:104)=ASTER;                                     04S0109 00267000
         MVC   BUFFER+96(8,R4),ASTER                            04S0109 00268000
*         TIME2SW=ON;              /* SET SWITCH TO FORMAT LINE 2    */ 00269000
@RF00108 DS    0H                                               03S0110 00270000
@RC00106 OI    TIME2SW,B'10000000'                              03S0110 00271000
*       END;                                                    03S0111 00272000
*     ELSE                         /* IF DEVICE IS NOT BEING DONE,   */ 00273000
*       RC=RECSKIP;                /* SKIP THE RECORD                */ 00274000
         B     @RC00082                                         03S0112 00275000
@RF00082 LA    RC,8                                             03S0112 00276000
*   END;                                                        03S0113 00277000
* ELSE                             /* IF THIS IS THE 2ND TIME FOR    */ 00278000
*                                  /* THIS RECORD,                   */ 00279000
*   DO;                            /* FORMAT THE SECOND LINE         */ 00280000
         B     @RC00079                                         03S0114 00281000
@RF00079 DS    0H                                               03S0115 00282000
*     R1=SNAPPARM;                 /* SET UP PARM FOR FORMAT         */ 00283000
         L     R1,SNAPPARM(,R11)                                03S0115 00284000
*     R0=ADDR(SIOPTRN3);           /* SET UP 3RD PATTERN     @ZA09664*/ 00285000
         LA    R0,SIOPTRN3                                      03S0116 00286000
*     SIOCC=SIOCC&'30'X;           /*  CONDITION CODE        @ZA09664*/ 00287000
         L     @14,DATAPTR(,R11)                                03S0117 00288000
         NI    SIOCC(@14),X'30'                                 03S0117 00289000
*     ADPLFMT2=ADDR(SIOCC);        /* POINT TO DATA                  */ 00290000
         LA    @14,SIOCC(,@14)                                  03S0118 00291000
         ST    @14,ADPLFMT2(,R1)                                03S0118 00292000
*     CALL FRMT;                   /* FORMAT PART OF LINE 2          */ 00293000
         L     @15,FRMADDR(,R11)                                03S0119 00294000
         BALR  @14,@15                                          03S0119 00295000
*     BLNKCC=' ';               /* BLANK OUT SECOND BYTE CC  @YM09151*/ 00296000
         MVI   BLNKCC(R4),C' '                                  03S0120 00297000
*     R0=ADDR(SIOPTRN4);           /* SET UP 4TH PATTERN             */ 00298000
         LA    R0,SIOPTRN4                                      03S0121 00299000
*     ADPLFMT2=ADDR(SIOSTS);       /* DATA FOR LAST PATTERN          */ 00300000
         L     @14,DATAPTR(,R11)                                03S0122 00301000
         LA    @14,SIOSTS(,@14)                                 03S0122 00302000
         ST    @14,ADPLFMT2(,R1)                                03S0122 00303000
*     CALL FRMT;                   /* FORMAT REST OF RECORD          */ 00304000
         L     @15,FRMADDR(,R11)                                03S0123 00305000
         BALR  @14,@15                                          03S0123 00306000
*/********************************************************************/ 00307000
*/*                                                                  */ 00308000
*/*  THIS SEGMENT CHECKS CERTAIN FIELDS IN THE SIO RECORD FOR        */ 00309000
*/*  'U/A' OR ASTERISKS. IF THE FIELD CONTAINS EITHER INDICATOR, THE */ 00310000
*/*  FORMATTED LINE IN THE OUTPUT BUFFER IS MODIFIED TO REFLECT THE  */ 00311000
*/*  INDICATION.                                                     */ 00312000
*/*                                                                  */ 00313000
*/********************************************************************/ 00314000
* IF SIOFLAGS=UA(1:LENGTH(SIOFLAGS)) THEN  /* CHECK FLAGS FIELD      */ 00315000
         L     @14,DATAPTR(,R11)                                04S0124 00316000
         CLC   SIOFLAGS(6,@14),UA                               04S0124 00317000
         BNE   @RF00124                                         04S0124 00318000
*   DO;                                                         04S0125 00319000
*     BUFFER(16:23)=UA;                                         04S0126 00320000
         MVC   BUFFER+15(8,R4),UA                               04S0126 00321000
*     BUFFER(25:28)='';                                         04S0127 00322000
         MVI   BUFFER+24(R4),C' '                               04S0127 00323000
         MVC   BUFFER+25(3,R4),BUFFER+24(R4)                    04S0127 00324000
*   END;                                                        04S0128 00325000
* ELSE                                                          04S0129 00326000
*   IF SIOFLAGS=ASTER(1:LENGTH(SIOFLAGS)) THEN                  04S0129 00327000
         B     @RC00124                                         04S0129 00328000
@RF00124 L     @14,DATAPTR(,R11)                                04S0129 00329000
         CLC   SIOFLAGS(6,@14),ASTER                            04S0129 00330000
         BNE   @RF00129                                         04S0129 00331000
*     DO;                                                       04S0130 00332000
*       BUFFER(16:23)=ASTER;                                    04S0131 00333000
         MVC   BUFFER+15(8,R4),ASTER                            04S0131 00334000
*       BUFFER(25:28)=ASTER(1:4);                               04S0132 00335000
         MVC   BUFFER+24(4,R4),ASTER                            04S0132 00336000
*     END;                                                      04S0133 00337000
* IF SIOSEEK=UA THEN               /* CHECK FLAGS FIELD              */ 00338000
@RF00129 DS    0H                                               04S0134 00339000
@RC00124 L     @14,DATAPTR(,R11)                                04S0134 00340000
         CLC   SIOSEEK(8,@14),UA                                04S0134 00341000
         BNE   @RF00134                                         04S0134 00342000
*   DO;                                                         04S0135 00343000
*     BUFFER(59:66)=UA;                                         04S0136 00344000
         MVC   BUFFER+58(8,R4),UA                               04S0136 00345000
*     BUFFER(68:75)='';                                         04S0137 00346000
         MVI   BUFFER+67(R4),C' '                               04S0137 00347000
         MVC   BUFFER+68(7,R4),BUFFER+67(R4)                    04S0137 00348000
*   END;                                                        04S0138 00349000
* ELSE                                                          04S0139 00350000
*   IF SIOSEEK=ASTER THEN                                       04S0139 00351000
         B     @RC00134                                         04S0139 00352000
@RF00134 L     @14,DATAPTR(,R11)                                04S0139 00353000
         CLC   SIOSEEK(8,@14),ASTER                             04S0139 00354000
         BNE   @RF00139                                         04S0139 00355000
*     DO;                                                       04S0140 00356000
*       BUFFER(59:66)=ASTER;                                    04S0141 00357000
         MVC   BUFFER+58(8,R4),ASTER                            04S0141 00358000
*       BUFFER(68:75)=ASTER;                                    04S0142 00359000
         MVC   BUFFER+67(8,R4),ASTER                            04S0142 00360000
*     END;                                                      04S0143 00361000
* IF SIOCC=UA(1) THEN              /* CHECK CC FIELD                 */ 00362000
@RF00139 DS    0H                                               04S0144 00363000
@RC00134 L     @14,DATAPTR(,R11)                                04S0144 00364000
         CLC   SIOCC(1,@14),UA                                  04S0144 00365000
         BNE   @RF00144                                         04S0144 00366000
*   BUFFER(81:83)=UA(1:3);    /*                             @YM09151*/ 00367000
         MVC   BUFFER+80(3,R4),UA                               04S0145 00368000
* ELSE                                                          04S0146 00369000
*   IF SIOCC=ASTER(1) THEN                                      04S0146 00370000
         B     @RC00144                                         04S0146 00371000
@RF00144 L     @14,DATAPTR(,R11)                                04S0146 00372000
         CLC   SIOCC(1,@14),ASTER                               04S0146 00373000
         BNE   @RF00146                                         04S0146 00374000
*     BUFFER(81:82)=ASTER(1:2);       /*                     @YM09151*/ 00375000
         MVC   BUFFER+80(2,R4),ASTER                            04S0147 00376000
*     TIME2SW=OFF;                 /* RESET SECOND TIME SWITCH       */ 00377000
@RF00146 DS    0H                                               03S0148 00378000
@RC00144 NI    TIME2SW,B'01111111'                              03S0148 00379000
*   END;                                                        03S0149 00380000
*       END;                                                    02S0150 00381000
*     ELSE                                                      02S0151 00382000
*       DO;                                                     02S0151 00383000
         B     @RC00077                                         02S0151 00384000
@RF00077 DS    0H                                               02S0152 00385000
*         IF RECEID=IMDMIO2 |      /* IF IO RECORD OR                */ 00386000
*            RECEID=IMDMPCI |      /* PCI RECORD OR                  */ 00387000
*            RECEID=IMDMEOS THEN   /* EOS RECORD, FORMAT 1 LINE      */ 00388000
         L     @14,EIDPTR(,R11)                                 02S0152 00389000
         CLC   RECEID(2,@14),@CB00210                           02S0152 00390000
         BE    @RT00152                                         02S0152 00391000
         CLC   RECEID(2,@14),@CB00202                           02S0152 00392000
         BE    @RT00152                                         02S0152 00393000
         CLC   RECEID(2,@14),@CB00224                           02S0152 00394000
         BNE   @RF00152                                         02S0152 00395000
@RT00152 DS    0H                                               02S0153 00396000
*           DO;                                                 02S0153 00397000
*/********************************************************************/ 00398000
*/*                                                                  */ 00399000
*/*  THIS SEGMENT FORMATS A LINE OF THE IO, PCI, AND EOS RECORDS.    */ 00400000
*/*                                                                  */ 00401000
*/********************************************************************/ 00402000
* IF TIME2SW=OFF THEN              /* IF THIS IS THE FIRST TIME FOR  */ 00403000
         TM    TIME2SW,B'10000000'                              03S0154 00404000
         BNZ   @RF00154                                         03S0154 00405000
*                                  /* THIS RECORD,                   */ 00406000
*   DO;                            /* FORMAT THE FIRST LINE          */ 00407000
*     CALL CHECKDEV (IODEV,IO);    /* ARE WE FORMATTING THIS DEVICE  */ 00408000
         L     @14,DATAPTR(,R11)                                03S0156 00409000
         LA    @14,IODEV(,@14)                                  03S0156 00410000
         ST    @14,@AL00001                                     03S0156 00411000
         LA    @14,IO(,AEDITCBR)                                03S0156 00412000
         ST    @14,@AL00001+4                                   03S0156 00413000
         LA    @01,@AL00001                                     03S0156 00414000
         BAL   @14,CHECKDEV                                     03S0156 00415000
*     IF R15=0 THEN                                             03S0157 00416000
         LTR   R15,R15                                          03S0157 00417000
         BNZ   @RF00157                                         03S0157 00418000
*       DO;                        /* YES, FORMAT LINE ONE           */ 00419000
*         IF RECEID=IMDMIO2 THEN   /* CHECK FOR IO RECORD            */ 00420000
         L     @14,EIDPTR(,R11)                                 03S0159 00421000
         CLC   RECEID(2,@14),@CB00210                           03S0159 00422000
         BNE   @RF00159                                         03S0159 00423000
*           BUFFER(1:3)='IO ';     /* PUT RECORD TYPE IN LINE        */ 00424000
         MVC   BUFFER(3,R4),@CC00637                            03S0160 00425000
*         IF RECEID=IMDMPCI THEN   /* CHECK FOR PCI RECORD           */ 00426000
@RF00159 L     @14,EIDPTR(,R11)                                 03S0161 00427000
         CLC   RECEID(2,@14),@CB00202                           03S0161 00428000
         BNE   @RF00161                                         03S0161 00429000
*           BUFFER(1:3)='PCI';     /* PUT RECORD TYPE IN LINE        */ 00430000
         MVC   BUFFER(3,R4),@CC00638                            03S0162 00431000
*         IF RECEID=IMDMEOS THEN   /* CHECK FOR EOS RECORD           */ 00432000
@RF00161 L     @14,EIDPTR(,R11)                                 03S0163 00433000
         CLC   RECEID(2,@14),@CB00224                           03S0163 00434000
         BNE   @RF00163                                         03S0163 00435000
*           BUFFER(1:3)='EOS';     /* PUT RECORD TYPE IN LINE        */ 00436000
         MVC   BUFFER(3,R4),@CC00639                            03S0164 00437000
*         R1=SNAPPARM;             /* SET UP PARM FOR FORMAT         */ 00438000
@RF00163 L     R1,SNAPPARM(,R11)                                03S0165 00439000
*         R0=ADDR(IOPTRN1);        /* POINT TO FIRST PATTERN         */ 00440000
         LA    R0,IOPTRN1                                       03S0166 00441000
*         ADPLFMT1=ADDR(IOLBLS);   /* INITIALIZE LABEL POINTER       */ 00442000
         LA    @14,IOLBLS                                       03S0167 00443000
         ST    @14,ADPLFMT1(,R1)                                03S0167 00444000
*         ADPLFMT2=DATAPTR;        /* INITIALIZE DATA POINTER        */ 00445000
         L     @14,DATAPTR(,R11)                                03S0168 00446000
         ST    @14,ADPLFMT2(,R1)                                03S0168 00447000
*         CALL FRMT;               /* FORMAT PART OF LINE            */ 00448000
         L     @15,FRMADDR(,R11)                                03S0169 00449000
         BALR  @14,@15                                          03S0169 00450000
*         R0=ADDR(IOPTRN2);        /* SET UP 2ND PATTERN             */ 00451000
         LA    R0,IOPTRN2                                       03S0170 00452000
*         ADPLFMT2=ADDR(IODEV);    /* POINT TO REST OF DATA          */ 00453000
         L     @14,DATAPTR(,R11)                                03S0171 00454000
         LA    @14,IODEV(,@14)                                  03S0171 00455000
         ST    @14,ADPLFMT2(,R1)                                03S0171 00456000
*         CALL FRMT;               /* FORMAT REST OF LINE            */ 00457000
         L     @15,FRMADDR(,R11)                                03S0172 00458000
         BALR  @14,@15                                          03S0172 00459000
*/********************************************************************/ 00460000
*/*                                                                  */ 00461000
*/*  THIS SEGMENT CHECKS CERTAIN FIELDS IN THE IO RECORD FOR 'N/A',  */ 00462000
*/*  'U/A' OR ASTERISKS. IF THE FIELD CONTAINS ANY INDICATOR, THE    */ 00463000
*/*  FORMATTED LINE IN THE OUTPUT BUFFER IS MODIFIED TO REFLECT THE  */ 00464000
*/*  INDICATION.                                                     */ 00465000
*/*                                                                  */ 00466000
*/********************************************************************/ 00467000
* IF IOASCB=UA(1:LENGTH(IOASCB)) THEN  /* CHECK ASCB FIELD           */ 00468000
         L     @14,DATAPTR(,R11)                                04S0173 00469000
         CLC   IOASCB(4,@14),UA                                 04S0173 00470000
         BNE   @RF00173                                         04S0173 00471000
*   BUFFER(16:23)=UA;                                           04S0174 00472000
         MVC   BUFFER+15(8,R4),UA                               04S0174 00473000
* ELSE                                                          04S0175 00474000
*   IF IOASCB=ASTER(1:LENGTH(IOASCB)) THEN                      04S0175 00475000
         B     @RC00173                                         04S0175 00476000
@RF00173 L     @14,DATAPTR(,R11)                                04S0175 00477000
         CLC   IOASCB(4,@14),ASTER                              04S0175 00478000
         BNE   @RF00175                                         04S0175 00479000
*     BUFFER(16:23)=ASTER;                                      04S0176 00480000
         MVC   BUFFER+15(8,R4),ASTER                            04S0176 00481000
* IF IOTCB=UA(1:LENGTH(IOTCB)) THEN  /* CHECK TCB FIELD              */ 00482000
@RF00175 DS    0H                                               04S0177 00483000
@RC00173 L     @14,DATAPTR(,R11)                                04S0177 00484000
         CLC   IOTCB(4,@14),UA                                  04S0177 00485000
         BNE   @RF00177                                         04S0177 00486000
*   BUFFER(82:89)=UA;                                           04S0178 00487000
         MVC   BUFFER+81(8,R4),UA                               04S0178 00488000
* ELSE                                                          04S0179 00489000
*   IF IOTCB=ASTER(1:LENGTH(IOTCB)) THEN                        04S0179 00490000
         B     @RC00177                                         04S0179 00491000
@RF00177 L     @14,DATAPTR(,R11)                                04S0179 00492000
         CLC   IOTCB(4,@14),ASTER                               04S0179 00493000
         BNE   @RF00179                                         04S0179 00494000
*     BUFFER(82:89)=ASTER;                                      04S0180 00495000
         MVC   BUFFER+81(8,R4),ASTER                            04S0180 00496000
*   ELSE                                                        04S0181 00497000
*     IF IOTCB=NA(1:LENGTH(IOTCB)) THEN                         04S0181 00498000
         B     @RC00179                                         04S0181 00499000
@RF00179 L     @14,DATAPTR(,R11)                                04S0181 00500000
         CLC   IOTCB(4,@14),NA                                  04S0181 00501000
         BNE   @RF00181                                         04S0181 00502000
*       BUFFER(82:89)=NA;                                       04S0182 00503000
         MVC   BUFFER+81(8,R4),NA                               04S0182 00504000
* IF IODSID=UA(1:LENGTH(IODSID)) THEN  /* CHECK DSID FIELD           */ 00505000
@RF00181 DS    0H                                               04S0183 00506000
@RC00179 DS    0H                                               04S0183 00507000
@RC00177 L     @14,DATAPTR(,R11)                                04S0183 00508000
         CLC   IODSID(4,@14),UA                                 04S0183 00509000
         BNE   @RF00183                                         04S0183 00510000
*   BUFFER(97:104)=UA;                                          04S0184 00511000
         MVC   BUFFER+96(8,R4),UA                               04S0184 00512000
* ELSE                                                          04S0185 00513000
*   IF IODSID=ASTER(1:LENGTH(IODSID)) THEN                      04S0185 00514000
         B     @RC00183                                         04S0185 00515000
@RF00183 L     @14,DATAPTR(,R11)                                04S0185 00516000
         CLC   IODSID(4,@14),ASTER                              04S0185 00517000
         BNE   @RF00185                                         04S0185 00518000
*     BUFFER(97:104)=ASTER;                                     04S0186 00519000
         MVC   BUFFER+96(8,R4),ASTER                            04S0186 00520000
*         TIME2SW=ON;              /* SET SWITCH TO FORMAT LINE 2    */ 00521000
@RF00185 DS    0H                                               03S0187 00522000
@RC00183 OI    TIME2SW,B'10000000'                              03S0187 00523000
*       END;                                                    03S0188 00524000
*     ELSE                         /* IF DEVICE IS NOT BEING DONE,   */ 00525000
*       RC=RECSKIP;                /* SKIP THE RECORD                */ 00526000
         B     @RC00157                                         03S0189 00527000
@RF00157 LA    RC,8                                             03S0189 00528000
*   END;                                                        03S0190 00529000
* ELSE                             /* IF THIS IS THE 2ND TIME FOR    */ 00530000
*                                  /* THIS RECORD,                   */ 00531000
*   DO;                            /* FORMAT THE SECOND LINE         */ 00532000
         B     @RC00154                                         03S0191 00533000
@RF00154 DS    0H                                               03S0192 00534000
*     R1=SNAPPARM;                 /* SET UP PARM FOR FORMAT         */ 00535000
         L     R1,SNAPPARM(,R11)                                03S0192 00536000
*     R0=ADDR(IOPTRN3);            /* SET UP 3RD PATTERN             */ 00537000
         LA    R0,IOPTRN3                                       03S0193 00538000
*     ADPLFMT2=ADDR(IOCSW);        /* POINT TO DATA                  */ 00539000
         L     @14,DATAPTR(,R11)                                03S0194 00540000
         LA    @14,IOCSW(,@14)                                  03S0194 00541000
         ST    @14,ADPLFMT2(,R1)                                03S0194 00542000
*     CALL FRMT;                   /* FORMAT PART OF LINE 2          */ 00543000
         L     @15,FRMADDR(,R11)                                03S0195 00544000
         BALR  @14,@15                                          03S0195 00545000
*     R0=ADDR(IOPTRN4);            /* SET UP 4TH PATTERN             */ 00546000
         LA    R0,IOPTRN4                                       03S0196 00547000
*     ADPLFMT2=ADDR(IOFLA);        /* DATA FOR LAST PATTERN          */ 00548000
         L     @14,DATAPTR(,R11)                                03S0197 00549000
         LA    @14,IOFLA(,@14)                                  03S0197 00550000
         ST    @14,ADPLFMT2(,R1)                                03S0197 00551000
*     CALL FRMT;                   /* FORMAT REST OF RECORD          */ 00552000
         L     @15,FRMADDR(,R11)                                03S0198 00553000
         BALR  @14,@15                                          03S0198 00554000
*/********************************************************************/ 00555000
*/*                                                                  */ 00556000
*/*  THIS SEGMENT CHECKS CERTAIN FIELDS IN THE IO RECORD FOR 'N/A',  */ 00557000
*/*  'U/A' OR ASTERISKS. IF THE FIELD CONTAINS ANY INDICATOR, THE    */ 00558000
*/*  FORMATTED LINE IN THE OUTPUT BUFFER IS MODIFIED TO REFLECT THE  */ 00559000
*/*  INDICATION.                                                     */ 00560000
*/*                                                                  */ 00561000
*/********************************************************************/ 00562000
* IF IOSNS=UA(1:LENGTH(IOSNS)) THEN  /* CHECK SNS FIELD              */ 00563000
         L     @14,DATAPTR(,R11)                                04S0199 00564000
         CLC   IOSNS(2,@14),UA                                  04S0199 00565000
         BNE   @RF00199                                         04S0199 00566000
*   BUFFER(41:44)=UA(1:4);                                      04S0200 00567000
         MVC   BUFFER+40(4,R4),UA                               04S0200 00568000
* ELSE                                                          04S0201 00569000
*   IF IOSNS=ASTER(1:LENGTH(IOSNS)) THEN                        04S0201 00570000
         B     @RC00199                                         04S0201 00571000
@RF00199 L     @14,DATAPTR(,R11)                                04S0201 00572000
         CLC   IOSNS(2,@14),ASTER                               04S0201 00573000
         BNE   @RF00201                                         04S0201 00574000
*     BUFFER(41:44)=ASTER(1:4);                                 04S0202 00575000
         MVC   BUFFER+40(4,R4),ASTER                            04S0202 00576000
*   ELSE                                                        04S0203 00577000
*     IF IOSNS=NA(1:LENGTH(IOSNS)) THEN                         04S0203 00578000
         B     @RC00201                                         04S0203 00579000
@RF00201 L     @14,DATAPTR(,R11)                                04S0203 00580000
         CLC   IOSNS(2,@14),NA                                  04S0203 00581000
         BNE   @RF00203                                         04S0203 00582000
*       BUFFER(41:44)=NA(1:4);                                  04S0204 00583000
         MVC   BUFFER+40(4,R4),NA                               04S0204 00584000
* IF IOCPA=UA THEN                 /* CHECK CPA FIELD                */ 00585000
@RF00203 DS    0H                                               04S0205 00586000
@RC00201 DS    0H                                               04S0205 00587000
@RC00199 L     @14,DATAPTR(,R11)                                04S0205 00588000
         CLC   IOCPA(8,@14),UA                                  04S0205 00589000
         BNE   @RF00205                                         04S0205 00590000
*   DO;                                                         04S0206 00591000
*     BUFFER(59:66)=UA;                                         04S0207 00592000
         MVC   BUFFER+58(8,R4),UA                               04S0207 00593000
*     BUFFER(68:75)='';                                         04S0208 00594000
         MVI   BUFFER+67(R4),C' '                               04S0208 00595000
         MVC   BUFFER+68(7,R4),BUFFER+67(R4)                    04S0208 00596000
*   END;                                                        04S0209 00597000
* ELSE                                                          04S0210 00598000
*   IF IOCPA=ASTER THEN                                         04S0210 00599000
         B     @RC00205                                         04S0210 00600000
@RF00205 L     @14,DATAPTR(,R11)                                04S0210 00601000
         CLC   IOCPA(8,@14),ASTER                               04S0210 00602000
         BNE   @RF00210                                         04S0210 00603000
*     DO;                                                       04S0211 00604000
*       BUFFER(59:66)=ASTER;                                    04S0212 00605000
         MVC   BUFFER+58(8,R4),ASTER                            04S0212 00606000
*       BUFFER(68:75)=ASTER;                                    04S0213 00607000
         MVC   BUFFER+67(8,R4),ASTER                            04S0213 00608000
*     END;                                                      04S0214 00609000
* IF IOFLAGS(1:4)=UA(1:4) THEN     /* CHECK 1ST PART OF FLAGS FIELD  */ 00610000
@RF00210 DS    0H                                               04S0215 00611000
@RC00205 L     @14,DATAPTR(,R11)                                04S0215 00612000
         CLC   IOFLAGS(4,@14),UA                                04S0215 00613000
         BNE   @RF00215                                         04S0215 00614000
*   BUFFER(82:89)=UA;                                           04S0216 00615000
         MVC   BUFFER+81(8,R4),UA                               04S0216 00616000
* ELSE                                                          04S0217 00617000
*   IF IOFLAGS(1:4)=ASTER(1:4) THEN                             04S0217 00618000
         B     @RC00215                                         04S0217 00619000
@RF00215 L     @14,DATAPTR(,R11)                                04S0217 00620000
         CLC   IOFLAGS(4,@14),ASTER                             04S0217 00621000
         BNE   @RF00217                                         04S0217 00622000
*     BUFFER(82:89)=ASTER;                                      04S0218 00623000
         MVC   BUFFER+81(8,R4),ASTER                            04S0218 00624000
* IF IOFLAGS(5:9)=ASTER(1:5) THEN  /* CHECK 2ND PART OF FLAGS FIELD  */ 00625000
@RF00217 DS    0H                                               04S0219 00626000
@RC00215 L     @14,DATAPTR(,R11)                                04S0219 00627000
         CLC   IOFLAGS+4(5,@14),ASTER                           04S0219 00628000
         BNE   @RF00219                                         04S0219 00629000
*   DO;                                                         04S0220 00630000
*     BUFFER(92:99)=ASTER;                                      04S0221 00631000
         MVC   BUFFER+91(8,R4),ASTER                            04S0221 00632000
*     BUFFER(101:102)=ASTER(1:2);                               04S0222 00633000
         MVC   BUFFER+100(2,R4),ASTER                           04S0222 00634000
*   END;                                                        04S0223 00635000
*     TIME2SW=OFF;                 /* RESET SECOND TIME SWITCH       */ 00636000
@RF00219 NI    TIME2SW,B'01111111'                              03S0224 00637000
*   END;                                                        03S0225 00638000
*           END;                                                02S0226 00639000
@RC00154 DS    0H                                               02S0227 00640000
*       END;                                                    02S0227 00641000
@RF00152 DS    0H                                               02S0228 00642000
*   END;                                                        02S0228 00643000
@RC00077 DS    0H                                               02S0229 00644000
*   END;                                                        01S0229 00645000
@RC00063 DS    0H                                               01S0230 00646000
* RETURN CODE(RC);                 /* RETURN CODE HAS BEEN SET UP    */ 00647000
@RF00060 LR    @15,RC                                           01S0230 00648000
         L     @13,4(,@13)                                      01S0230 00649000
         L     @14,12(,@13)                                     01S0230 00650000
         LM    @00,@12,20(@13)                                  01S0230 00651000
         BR    @14                                              01S0230 00652000
*/********************************************************************/ 00653000
*/*                                                                  */ 00654000
*/*  THIS SUBROUTINE DETERMINES WHETHER THE DEVICE IN THE TRACE      */ 00655000
*/*  RECORD IS TO BE TRACED OR NOT, AND PASSES A RETURN CODE BACK    */ 00656000
*/*  IN REGISTER 15.                                                 */ 00657000
*/*                                                                  */ 00658000
*/********************************************************************/ 00659000
*CHECKDEV:                                                      02S0231 00660000
* PROC (DEV,TABL);                                              02S0231 00661000
CHECKDEV STM   @14,@12,12(@13)                                  02S0231 00662000
         MVC   @PC00002(8),0(@01)                               02S0231 00663000
* DCL DEV CHAR(2);                 /* DEVICE TO BE CHECKED           */ 00664000
* DCL 1 TABL,                      /* TABLE TO CHECK WITH            */ 00665000
*       3 * BIT(32),                                            02S0233 00666000
*         5 ALL BIT(1),            /* ALL DEVICES ACCEPTABLE         */ 00667000
*         5 SEL BIT(1),            /* DEVICES IN LIST ACCEPTABLE     */ 00668000
*       3 DVCS(50) CHAR(2);        /* LIST OF ACCEPTABLE DEVICES     */ 00669000
* DCL DELIM CHAR(2) CONSTANT('  '); /* LIST DELIMITER                */ 00670000
* IF ALL=ON THEN                   /* IF ALL DEVICES ARE OK,         */ 00671000
         L     @14,@PC00002+4                                   02S0235 00672000
         TM    ALL(@14),B'10000000'                             02S0235 00673000
         BNO   @RF00235                                         02S0235 00674000
*   R15=0;                         /* SET GOOD RETURN CODE           */ 00675000
         SLR   R15,R15                                          02S0236 00676000
* ELSE                             /* IF ALL ARE NOT OK,             */ 00677000
*   DO;                            /* CHECK FOR SOME OK              */ 00678000
         B     @RC00235                                         02S0237 00679000
@RF00235 DS    0H                                               02S0238 00680000
*     IF SEL=ON THEN               /* IF SOME DEVICES ARE OK,        */ 00681000
         L     @14,@PC00002+4                                   02S0238 00682000
         TM    SEL(@14),B'01000000'                             02S0238 00683000
         BNO   @RF00238                                         02S0238 00684000
*       DO;                        /* CHECK FOR SPECIFIC DEVICE      */ 00685000
*         DO CTR=1 TO DIM(DVCS) WHILE DEVFOUND=OFF;             02S0240 00686000
         LA    CTR,1                                            02S0240 00687000
@DL00240 TM    DEVFOUND,B'00100000'                             02S0240 00688000
         BNZ   @DC00240                                         02S0240 00689000
*           IF DVCS(CTR)=DEV THEN  /* IF DEVICE MATCH FOUND,         */ 00690000
         LR    @14,CTR                                          02S0241 00691000
         ALR   @14,@14                                          02S0241 00692000
         L     @08,@PC00002+4                                   02S0241 00693000
         L     @07,@PC00002                                     02S0241 00694000
         ALR   @08,@14                                          02S0241 00695000
         CLC   DVCS-2(2,@08),DEV(@07)                           02S0241 00696000
         BNE   @RF00241                                         02S0241 00697000
*             DEVFOUND=ON;         /* INDICATE SO                    */ 00698000
         OI    DEVFOUND,B'00100000'                             02S0242 00699000
*           ELSE                                                02S0243 00700000
*             IF DVCS(CTR)=DELIM THEN /* IF DELIMITER REACHED,       */ 00701000
         B     @RC00241                                         02S0243 00702000
@RF00241 LR    @14,CTR                                          02S0243 00703000
         ALR   @14,@14                                          02S0243 00704000
         L     @08,@PC00002+4                                   02S0243 00705000
         ALR   @08,@14                                          02S0243 00706000
         CLC   DVCS-2(2,@08),@CC00658                           02S0243 00707000
         BNE   @RF00243                                         02S0243 00708000
*               CTR=DIM(DVCS);     /* SET CTR TO LEAVE LOOP          */ 00709000
         LA    CTR,50                                           02S0244 00710000
*         END;                                                  02S0245 00711000
@RF00243 DS    0H                                               02S0245 00712000
@RC00241 AL    CTR,@CF00044                                     02S0245 00713000
         C     CTR,@CF00103                                     02S0245 00714000
         BNH   @DL00240                                         02S0245 00715000
@DC00240 DS    0H                                               02S0246 00716000
*         IF DEVFOUND=ON THEN      /* IF DEVICE WAS OK TO TRACE,     */ 00717000
         TM    DEVFOUND,B'00100000'                             02S0246 00718000
         BNO   @RF00246                                         02S0246 00719000
*           DO;                    /* RESET SWITCH, SET RETURN CODE  */ 00720000
*             DEVFOUND=OFF;                                     02S0248 00721000
         NI    DEVFOUND,B'11011111'                             02S0248 00722000
*             R15=0;                                            02S0249 00723000
         SLR   R15,R15                                          02S0249 00724000
*           END;                                                02S0250 00725000
*         ELSE                     /* IF DEVICE MATCH NOT FOUND,     */ 00726000
*           R15=4;                 /* SET BAD RETURN CODE            */ 00727000
         B     @RC00246                                         02S0251 00728000
@RF00246 LA    R15,4                                            02S0251 00729000
*       END;                                                    02S0252 00730000
*     ELSE                         /* IF NO DEVICES ARE BEING TRACED, * 00731000
*       R15=4;                     /* SET BAD RETURN CODE            */ 00732000
         B     @RC00238                                         02S0253 00733000
@RF00238 LA    R15,4                                            02S0253 00734000
*   END;                                                        02S0254 00735000
@RC00238 DS    0H                                               02S0255 00736000
* RETURN CODE(R15);                                             02S0255 00737000
@RC00235 L     @14,12(,@13)                                     02S0255 00738000
         LM    @00,@12,20(@13)                                  02S0255 00739000
         BR    @14                                              02S0255 00740000
* END CHECKDEV;                                                 02S0256 00741000
* END AMDSYS00                                                  01S0257 00742000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      * 00743000
*/*%INCLUDE SYSUT5  (SYSPROLG)                                        * 00744000
*/*%INCLUDE SYSUT5  (MACROS  )                                        * 00745000
*/*%INCLUDE SYSUT5  (DECLARES)                                        * 00746000
*/*%INCLUDE SYSLIB  (AMDPRTAB)                                        * 00747000
*/*%INCLUDE SYSLIB  (IHAABDPL)                                        * 00748000
*/*%INCLUDE SYSLIB  (IMDMEDIT)                                        * 00749000
*/*%INCLUDE SYSUT5  (CHECKREC)                                        * 00750000
*/*%INCLUDE SYSUT5  (FMTREC  )                                        * 00751000
*/*%INCLUDE SYSUT5  (FMTUIO  )                                        * 00752000
*/*%INCLUDE SYSUT5  (FMTSIO  )                                        * 00753000
*/*%INCLUDE SYSUT5  (CKSIOL1 )                                        * 00754000
*/*%INCLUDE SYSUT5  (CKSIOL2 )                                        * 00755000
*/*%INCLUDE SYSUT5  (FMTIO   )                                        * 00756000
*/*%INCLUDE SYSUT5  (CKIOL1  )                                        * 00757000
*/*%INCLUDE SYSUT5  (CKIOL2  )                                        * 00758000
*/*%INCLUDE SYSUT5  (CHECKDEV)                                        * 00759000
*;                                                              01S0257 00760000
@DATA    DS    0H                                                       00761000
@DATD    DSECT                                                          00762000
         DS    0F                                                       00763000
@SA00001 DS    18F                                                      00764000
@PC00002 DS    2F                                                       00765000
@AL00001 DS    2A                                                       00766000
AMDSYS00 CSECT                                                          00767000
         DS    0F                                                       00768000
@CF00044 DC    F'1'                                                     00769000
@CF00098 DC    F'4'                                                     00770000
@CF00103 DC    F'50'                                                    00771000
@DATD    DSECT                                                          00772000
         DS    0D                                                       00773000
SWITCHES DS    BL1                                                      00774000
         ORG   SWITCHES                                                 00775000
TIME2SW  DS    BL1                                                      00776000
LOOPDONE EQU   SWITCHES+0                                               00777000
DEVFOUND EQU   SWITCHES+0                                               00778000
@NM00003 EQU   SWITCHES+0                                               00779000
         ORG   SWITCHES+1                                               00780000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                00781000
@ENDDATD EQU   *                                                        00782000
AMDSYS00 CSECT                                                          00783000
         NOPR  ((@ENDDATD-@DATD)/201*16)                                00784000
         DS    0F                                                       00785000
@SIZDATD DC    AL1(0)                                                   00786000
         DC    AL3(@ENDDATD-@DATD)                                      00787000
         DS    0D                                                       00788000
@CC00637 DC    C'IO '                                                   00789000
@CC00638 DC    C'PCI'                                                   00790000
@CC00639 DC    C'EOS'                                                   00791000
@CC00658 DC    C'  '                                                    00792000
@CB00202 DC    X'2100'                                                  00793000
@CB00208 DC    X'5201'                                                  00794000
@CB00210 DC    X'5200'                                                  00795000
@CB00212 DC    X'5100'                                                  00796000
@CB00224 DC    X'5101'                                                  00797000
@CB00622 DC    X'EEEE'                                                  00798000
UA       DC    CL8'U/A'                                                 00799000
NA       DC    CL8'N/A'                                                 00800000
ASTER    DC    CL8'********'                                            00801000
         DS    CL1                                                      00802000
UIOPTRN  DS    CL37                                                     00803000
         ORG   UIOPTRN                                                  00804000
@NM00004 DC    AL1(55)                                                  00805000
@NM00005 DC    AL1(51)                                                  00806000
@NM00006 DC    AL1(10)                                                  00807000
@NM00007 DC    AL1(15)                                                  00808000
@NM00008 DC    AL4(UIOLBLS)                                             00809000
@NM00009 DC    AL1(21)                                                  00810000
@NM00010 DC    AL1(33)                                                  00811000
@NM00011 DC    AL1(25)                                                  00812000
@NM00012 DC    AL1(29)                                                  00813000
@NM00013 DC    AL1(53)                                                  00814000
@NM00014 DC    AL1(55)                                                  00815000
@NM00015 DC    AL1(35)                                                  00816000
@NM00016 DC    AL1(40)                                                  00817000
@NM00017 DC    AL1(21)                                                  00818000
@NM00018 DC    AL1(99)                                                  00819000
@NM00019 DC    AL1(50)                                                  00820000
@NM00020 DC    AL1(58)                                                  00821000
@NM00021 DC    AL1(20)                                                  00822000
@NM00022 DC    AL1(3)                                                   00823000
@NM00023 DC    AL1(0)                                                   00824000
@NM00024 DC    AL1(67)                                                  00825000
@NM00025 DC    AL1(21)                                                  00826000
@NM00026 DC    AL1(35)                                                  00827000
@NM00027 DC    AL1(77)                                                  00828000
@NM00028 DC    AL1(81)                                                  00829000
@NM00029 DC    AL1(20)                                                  00830000
@NM00030 DC    AL1(3)                                                   00831000
@NM00031 DC    AL1(0)                                                   00832000
@NM00032 DC    AL1(90)                                                  00833000
@NM00033 DC    AL1(21)                                                  00834000
@NM00034 DC    AL1(33)                                                  00835000
@NM00035 DC    AL1(0)                                                   00836000
@NM00036 DC    AL1(5)                                                   00837000
@NM00037 DC    AL1(0)                                                   00838000
         ORG   UIOPTRN+37                                               00839000
UIOLBLS  DC    CL24'ASCBCPUJOBNOLD PSWCSWUIO'                           00840000
         DS    CL3                                                      00841000
SIOPTRN1 DS    CL29                                                     00842000
         ORG   SIOPTRN1                                                 00843000
@NM00038 DC    AL1(23)                                                  00844000
@NM00039 DC    AL1(51)                                                  00845000
@NM00040 DC    AL1(10)                                                  00846000
@NM00041 DC    AL1(15)                                                  00847000
@NM00042 DC    AL4(SIOLBLS)                                             00848000
@NM00043 DC    AL1(21)                                                  00849000
@NM00044 DC    AL1(33)                                                  00850000
@NM00045 DC    AL1(25)                                                  00851000
@NM00046 DC    AL1(29)                                                  00852000
@NM00047 DC    AL1(53)                                                  00853000
@NM00048 DC    AL1(55)                                                  00854000
@NM00049 DC    AL1(35)                                                  00855000
@NM00050 DC    AL1(40)                                                  00856000
@NM00051 DC    AL1(21)                                                  00857000
@NM00052 DC    AL1(99)                                                  00858000
@NM00053 DC    AL1(50)                                                  00859000
@NM00054 DC    AL1(58)                                                  00860000
@NM00055 DC    AL1(20)                                                  00861000
@NM00056 DC    AL1(3)                                                   00862000
@NM00057 DC    AL1(0)                                                   00863000
@NM00058 DC    AL1(67)                                                  00864000
@NM00059 DC    AL1(21)                                                  00865000
@NM00060 DC    AL1(51)                                                  00866000
@NM00061 DC    AL1(91)                                                  00867000
@NM00062 DC    AL1(96)                                                  00868000
@NM00063 DC    AL1(0)                                                   00869000
         ORG   SIOPTRN1+29                                              00870000
SIOLBLS  DS    CL45                                                     00871000
         ORG   SIOLBLS                                                  00872000
@NM00099 DC    CL22'ASCBCPUJOBNR/V CPADSID'                             00873000
@NM00100 DC    CL6'SIOCAW'                                              00874000
@NM00101 DC    CL2'CC'                                                  00875000
@NM00102 DC    CL15'STATSK ADDRFLGS'                                    00876000
         ORG   SIOLBLS+45                                               00877000
         DS    CL2                                                      00878000
SIOPTRN2 DS    CL9                                                      00879000
         ORG   SIOPTRN2                                                 00880000
@NM00064 DC    AL1(21)                                                  00881000
@NM00065 DC    AL1(33)                                                  00882000
@NM00066 DC    AL1(0)                                                   00883000
@NM00067 DC    AL1(5)                                                   00884000
@NM00068 DC    AL1(21)                                                  00885000
@NM00069 DC    AL1(35)                                                  00886000
@NM00070 DC    AL1(77)                                                  00887000
@NM00071 DC    AL1(81)                                                  00888000
@NM00072 DC    AL1(0)                                                   00889000
         ORG   SIOPTRN2+9                                               00890000
         DS    CL3                                                      00891000
SIOPTRN3 DS    CL5                                                      00892000
         ORG   SIOPTRN3                                                 00893000
@NM00073 DC    AL1(21)                                                  00894000
@NM00074 DC    AL1(16)                                                  00895000
@NM00075 DC    AL1(77)                                                  00896000
@NM00076 DC    AL1(80)                                                  00897000
@NM00077 DC    AL1(0)                                                   00898000
         ORG   SIOPTRN3+5                                               00899000
         DS    CL3                                                      00900000
SIOPTRN4 DS    CL21                                                     00901000
         ORG   SIOPTRN4                                                 00902000
@NM00078 DC    AL1(21)                                                  00903000
@NM00079 DC    AL1(49)                                                  00904000
@NM00080 DC    AL1(35)                                                  00905000
@NM00081 DC    AL1(40)                                                  00906000
@NM00082 DC    AL1(21)                                                  00907000
@NM00083 DC    AL1(99)                                                  00908000
@NM00084 DC    AL1(50)                                                  00909000
@NM00085 DC    AL1(58)                                                  00910000
@NM00086 DC    AL1(20)                                                  00911000
@NM00087 DC    AL1(3)                                                   00912000
@NM00088 DC    AL1(0)                                                   00913000
@NM00089 DC    AL1(67)                                                  00914000
@NM00090 DC    AL1(21)                                                  00915000
@NM00091 DC    AL1(51)                                                  00916000
@NM00092 DC    AL1(10)                                                  00917000
@NM00093 DC    AL1(15)                                                  00918000
@NM00094 DC    AL1(20)                                                  00919000
@NM00095 DC    AL1(1)                                                   00920000
@NM00096 DC    AL1(0)                                                   00921000
@NM00097 DC    AL1(24)                                                  00922000
@NM00098 DC    AL1(0)                                                   00923000
         ORG   SIOPTRN4+21                                              00924000
         DS    CL3                                                      00925000
IOPTRN1  DS    CL29                                                     00926000
         ORG   IOPTRN1                                                  00927000
@NM00103 DC    AL1(23)                                                  00928000
@NM00104 DC    AL1(51)                                                  00929000
@NM00105 DC    AL1(10)                                                  00930000
@NM00106 DC    AL1(15)                                                  00931000
@NM00107 DC    AL4(IOLBLS)                                              00932000
@NM00108 DC    AL1(21)                                                  00933000
@NM00109 DC    AL1(33)                                                  00934000
@NM00110 DC    AL1(25)                                                  00935000
@NM00111 DC    AL1(29)                                                  00936000
@NM00112 DC    AL1(53)                                                  00937000
@NM00113 DC    AL1(55)                                                  00938000
@NM00114 DC    AL1(35)                                                  00939000
@NM00115 DC    AL1(40)                                                  00940000
@NM00116 DC    AL1(21)                                                  00941000
@NM00117 DC    AL1(99)                                                  00942000
@NM00118 DC    AL1(50)                                                  00943000
@NM00119 DC    AL1(58)                                                  00944000
@NM00120 DC    AL1(20)                                                  00945000
@NM00121 DC    AL1(3)                                                   00946000
@NM00122 DC    AL1(0)                                                   00947000
@NM00123 DC    AL1(67)                                                  00948000
@NM00124 DC    AL1(21)                                                  00949000
@NM00125 DC    AL1(35)                                                  00950000
@NM00126 DC    AL1(77)                                                  00951000
@NM00127 DC    AL1(81)                                                  00952000
@NM00128 DC    AL1(0)                                                   00953000
         ORG   IOPTRN1+29                                               00954000
IOLBLS   DS    CL41                                                     00955000
         ORG   IOLBLS                                                   00956000
@NM00176 DC    CL21'ASCBCPUJOBNOLD PSWTCB'                              00957000
@NM00177 DC    CL4'DSID'                                                00958000
@NM00178 DC    CL13'CSWR/V CPASNS'                                      00959000
@NM00179 DC    CL3'FLG'                                                 00960000
         ORG   IOLBLS+41                                                00961000
         DS    CL2                                                      00962000
IOPTRN2  DS    CL9                                                      00963000
         ORG   IOPTRN2                                                  00964000
@NM00129 DC    AL1(20)                                                  00965000
@NM00130 DC    AL1(1)                                                   00966000
@NM00131 DC    AL1(0)                                                   00967000
@NM00132 DC    AL1(5)                                                   00968000
@NM00133 DC    AL1(21)                                                  00969000
@NM00134 DC    AL1(51)                                                  00970000
@NM00135 DC    AL1(91)                                                  00971000
@NM00136 DC    AL1(96)                                                  00972000
@NM00137 DC    AL1(0)                                                   00973000
         ORG   IOPTRN2+9                                                00974000
         DS    CL3                                                      00975000
IOPTRN3  DS    CL21                                                     00976000
         ORG   IOPTRN3                                                  00977000
@NM00138 DC    AL1(21)                                                  00978000
@NM00139 DC    AL1(35)                                                  00979000
@NM00140 DC    AL1(10)                                                  00980000
@NM00141 DC    AL1(15)                                                  00981000
@NM00142 DC    AL1(20)                                                  00982000
@NM00143 DC    AL1(3)                                                   00983000
@NM00144 DC    AL1(0)                                                   00984000
@NM00145 DC    AL1(24)                                                  00985000
@NM00146 DC    AL1(21)                                                  00986000
@NM00147 DC    AL1(99)                                                  00987000
@NM00148 DC    AL1(50)                                                  00988000
@NM00149 DC    AL1(58)                                                  00989000
@NM00150 DC    AL1(20)                                                  00990000
@NM00151 DC    AL1(3)                                                   00991000
@NM00152 DC    AL1(0)                                                   00992000
@NM00153 DC    AL1(67)                                                  00993000
@NM00154 DC    AL1(21)                                                  00994000
@NM00155 DC    AL1(33)                                                  00995000
@NM00156 DC    AL1(35)                                                  00996000
@NM00157 DC    AL1(40)                                                  00997000
@NM00158 DC    AL1(0)                                                   00998000
         ORG   IOPTRN3+21                                               00999000
         DS    CL3                                                      01000000
IOPTRN4  DS    CL17                                                     01001000
         ORG   IOPTRN4                                                  01002000
@NM00159 DC    AL1(21)                                                  01003000
@NM00160 DC    AL1(35)                                                  01004000
@NM00161 DC    AL1(77)                                                  01005000
@NM00162 DC    AL1(81)                                                  01006000
@NM00163 DC    AL1(20)                                                  01007000
@NM00164 DC    AL1(1)                                                   01008000
@NM00165 DC    AL1(0)                                                   01009000
@NM00166 DC    AL1(91)                                                  01010000
@NM00167 DC    AL1(20)                                                  01011000
@NM00168 DC    AL1(0)                                                   01012000
@NM00169 DC    AL1(0)                                                   01013000
@NM00170 DC    AL1(100)                                                 01014000
@NM00171 DC    AL1(20)                                                  01015000
@NM00172 DC    AL1(1)                                                   01016000
@NM00173 DC    AL1(0)                                                   01017000
@NM00174 DC    AL1(95)                                                  01018000
@NM00175 DC    AL1(0)                                                   01019000
         ORG   IOPTRN4+17                                               01020000
MYEIDTAB DC    X'2100'                                                  01021000
         DC    X'5200'                                                  01022000
         DC    X'5100'                                                  01023000
         DC    X'5101'                                                  01024000
         DS    CL3                                                      01025000
SYS00PCH DC    25F'0'                                                   01026000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       01027000
@01      EQU   01                                                       01028000
@02      EQU   02                                                       01029000
@03      EQU   03                                                       01030000
@04      EQU   04                                                       01031000
@05      EQU   05                                                       01032000
@06      EQU   06                                                       01033000
@07      EQU   07                                                       01034000
@08      EQU   08                                                       01035000
@09      EQU   09                                                       01036000
@10      EQU   10                                                       01037000
@11      EQU   11                                                       01038000
@12      EQU   12                                                       01039000
@13      EQU   13                                                       01040000
@14      EQU   14                                                       01041000
@15      EQU   15                                                       01042000
CTR      EQU   @06                                                      01043000
RC       EQU   @06                                                      01044000
AEDITCBR EQU   @09                                                      01045000
R0       EQU   @00                                                      01046000
R1       EQU   @01                                                      01047000
R4       EQU   @04                                                      01048000
R11      EQU   @11                                                      01049000
R12      EQU   @12                                                      01050000
R13      EQU   @13                                                      01051000
R15      EQU   @15                                                      01052000
R10      EQU   @10                                                      01053000
R14      EQU   @14                                                      01054000
R2       EQU   @02                                                      01055000
R3       EQU   @03                                                      01056000
R5       EQU   @05                                                      01057000
R6       EQU   @06                                                      01058000
R7       EQU   @07                                                      01059000
R8       EQU   @08                                                      01060000
R9       EQU   @09                                                      01061000
AMDPRTAB EQU   0                                                        01062000
DEBGFLGS EQU   AMDPRTAB+8                                               01063000
PTHFLGS1 EQU   DEBGFLGS                                                 01064000
PTHFLGS2 EQU   DEBGFLGS+1                                               01065000
INRFCFGS EQU   DEBGFLGS+2                                               01066000
IOFLGS   EQU   DEBGFLGS+3                                               01067000
STARTIME EQU   AMDPRTAB+40                                              01068000
STOPTIME EQU   AMDPRTAB+52                                              01069000
NAMES    EQU   AMDPRTAB+64                                              01070000
ADS      EQU   AMDPRTAB+104                                             01071000
AADS     EQU   ADS                                                      01072000
SIF      EQU   AMDPRTAB+124                                             01073000
SIOFLGS  EQU   SIF                                                      01074000
DVADS1   EQU   AMDPRTAB+128                                             01075000
IO       EQU   AMDPRTAB+228                                             01076000
IOFLGS2  EQU   IO                                                       01077000
DVADS2   EQU   AMDPRTAB+232                                             01078000
VCF      EQU   AMDPRTAB+332                                             01079000
SVCFLGS  EQU   VCF                                                      01080000
USR      EQU   AMDPRTAB+368                                             01081000
USRFLGS  EQU   USR                                                      01082000
USRTAB   EQU   AMDPRTAB+372                                             01083000
PI       EQU   AMDPRTAB+452                                             01084000
PIFLGS   EQU   PI                                                       01085000
PGMNGEN  EQU   AMDPRTAB+456                                             01086000
GENFLAGS EQU   PGMNGEN+3                                                01087000
GENFLGS1 EQU   AMDPRTAB+460                                             01088000
ESTARTME EQU   AMDPRTAB+500                                             01089000
ESTOPTME EQU   AMDPRTAB+509                                             01090000
ABDPL    EQU   0                                                        01091000
ADPLFLAG EQU   ABDPL+7                                                  01092000
ADPLBUF  EQU   ABDPL+8                                                  01093000
ADPLFMT1 EQU   ABDPL+44                                                 01094000
ADPLFMT2 EQU   ABDPL+48                                                 01095000
PARMLIST EQU   0                                                        01096000
EIDPTR   EQU   PARMLIST+12                                              01097000
DATAPTR  EQU   PARMLIST+16                                              01098000
FRMADDR  EQU   PARMLIST+20                                              01099000
WKAREADD EQU   PARMLIST+24                                              01100000
SNAPPARM EQU   PARMLIST+28                                              01101000
RECEID   EQU   0                                                        01102000
BUFFER   EQU   0                                                        01103000
FRMT     EQU   0                                                        01104000
DATAREC  EQU   0                                                        01105000
ASCBPTR  EQU   DATAREC                                                  01106000
RECERR   EQU   ASCBPTR                                                  01107000
SIOREC   EQU   0                                                        01108000
SIOASCB  EQU   SIOREC                                                   01109000
SIOCPA   EQU   SIOREC+14                                                01110000
SIODSID  EQU   SIOREC+22                                                01111000
SIOCC    EQU   SIOREC+26                                                01112000
SIODEV   EQU   SIOREC+27                                                01113000
SIOSTS   EQU   SIOREC+33                                                01114000
SIOSEEK  EQU   SIOREC+35                                                01115000
SIOFLAGS EQU   SIOREC+43                                                01116000
IOREC    EQU   0                                                        01117000
IOASCB   EQU   IOREC                                                    01118000
IOTCB    EQU   IOREC+22                                                 01119000
IOCSW    EQU   IOREC+26                                                 01120000
IOCPA    EQU   IOREC+34                                                 01121000
IOSNS    EQU   IOREC+42                                                 01122000
IODEV    EQU   IOREC+44                                                 01123000
IODSID   EQU   IOREC+46                                                 01124000
IOFLAGS  EQU   IOREC+50                                                 01125000
IOFLA    EQU   IOFLAGS                                                  01126000
UIOREC   EQU   0                                                        01127000
UIODEV   EQU   UIOREC+30                                                01128000
DEV      EQU   0                                                        01129000
TABL     EQU   0                                                        01130000
@NM00180 EQU   TABL                                                     01131000
ALL      EQU   @NM00180                                                 01132000
SEL      EQU   @NM00180                                                 01133000
DVCS     EQU   TABL+4                                                   01134000
ABDPLPTR EQU   SNAPPARM                                                 01135000
BLNKCC   EQU   BUFFER+81                                                01136000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    01137000
UIOCSW   EQU   UIOREC+22                                                01138000
UIOPSW   EQU   UIOREC+14                                                01139000
UIOJOBN  EQU   UIOREC+6                                                 01140000
UIOCPUID EQU   UIOREC+4                                                 01141000
UIOASCB  EQU   UIOREC                                                   01142000
IOCHAN   EQU   IOFLAGS+7                                                01143000
IOCPU    EQU   IOFLAGS+6                                                01144000
IOSFLS   EQU   IOFLAGS+4                                                01145000
IODVRID  EQU   IOFLAGS+3                                                01146000
IOFMSK   EQU   IOFLAGS+2                                                01147000
IOOPT    EQU   IOFLAGS+1                                                01148000
IOPSW    EQU   IOREC+14                                                 01149000
IOJOBN   EQU   IOREC+6                                                  01150000
IOCPUID  EQU   IOREC+4                                                  01151000
SIODVRID EQU   SIOFLAGS+5                                               01152000
SIOFMSK  EQU   SIOFLAGS+4                                               01153000
SIOOPT   EQU   SIOFLAGS+3                                               01154000
SIOPATH  EQU   SIOFLAGS+1                                               01155000
SIOAFF   EQU   SIOFLAGS                                                 01156000
SIOCAW   EQU   SIOREC+29                                                01157000
SIOJOBN  EQU   SIOREC+6                                                 01158000
SIOCPUID EQU   SIOREC+4                                                 01159000
JOBNAME  EQU   DATAREC+6                                                01160000
CPUID    EQU   DATAREC+4                                                01161000
GTFOPTR  EQU   PARMLIST+8                                               01162000
BUFPTR   EQU   PARMLIST+4                                               01163000
RECPTR   EQU   PARMLIST                                                 01164000
ADPLEXT  EQU   ABDPL+52                                                 01165000
ADPLCOM4 EQU   ABDPL+40                                                 01166000
ADPLCOM3 EQU   ABDPL+36                                                 01167000
ADPLCOM2 EQU   ABDPL+32                                                 01168000
ADPLCOM1 EQU   ABDPL+28                                                 01169000
ADPLFRMT EQU   ABDPL+24                                                 01170000
ADPLMEMA EQU   ABDPL+20                                                 01171000
ADPLCVT  EQU   ABDPL+16                                                 01172000
ADPLPRNT EQU   ABDPL+12                                                 01173000
@NM00002 EQU   ADPLFLAG                                                 01174000
ADPLSYTM EQU   ADPLFLAG                                                 01175000
ADPLSNPR EQU   ADPLFLAG                                                 01176000
ADPLSBPL EQU   ABDPL+6                                                  01177000
ADPLASID EQU   ABDPL+4                                                  01178000
ADPLTCB  EQU   ABDPL                                                    01179000
RESERVED EQU   AMDPRTAB+522                                             01180000
CVTTZONE EQU   AMDPRTAB+518                                             01181000
ESPSEC   EQU   ESTOPTME+7                                               01182000
ESPMIN   EQU   ESTOPTME+5                                               01183000
ESPHR    EQU   ESTOPTME+3                                               01184000
ESPDAY   EQU   ESTOPTME                                                 01185000
ESSEC    EQU   ESTARTME+7                                               01186000
ESMIN    EQU   ESTARTME+5                                               01187000
ESHR     EQU   ESTARTME+3                                               01188000
ESDAY    EQU   ESTARTME                                                 01189000
ADTSBUF  EQU   AMDPRTAB+496                                             01190000
OFSTDATA EQU   AMDPRTAB+494                                             01191000
OFSTEID  EQU   AMDPRTAB+492                                             01192000
AFRMAD   EQU   AMDPRTAB+488                                             01193000
REENTWKA EQU   AMDPRTAB+484                                             01194000
PRFMTADD EQU   AMDPRTAB+480                                             01195000
AEIOCT   EQU   AMDPRTAB+476                                             01196000
EXITADDR EQU   AMDPRTAB+472                                             01197000
EXITNM   EQU   AMDPRTAB+464                                             01198000
RECDLL   EQU   AMDPRTAB+461                                             01199000
@NM00001 EQU   GENFLGS1                                                 01200000
FIRSTHSW EQU   GENFLGS1                                                 01201000
TSFOUND  EQU   GENFLGS1                                                 01202000
EOFINPRO EQU   GENFLGS1                                                 01203000
TS       EQU   GENFLGS1                                                 01204000
EOF      EQU   GENFLAGS                                                 01205000
RR       EQU   GENFLAGS                                                 01206000
SRM      EQU   GENFLAGS                                                 01207000
RNIO     EQU   GENFLAGS                                                 01208000
SYSM     EQU   GENFLAGS                                                 01209000
SYS      EQU   GENFLAGS                                                 01210000
DSP      EQU   GENFLAGS                                                 01211000
EXT      EQU   GENFLAGS                                                 01212000
PICODEA  EQU   PGMNGEN+2                                                01213000
PICODES  EQU   PGMNGEN                                                  01214000
Q        EQU   PI+1                                                     01215000
P01R     EQU   PIFLGS                                                   01216000
SELP     EQU   PIFLGS                                                   01217000
ALLP     EQU   PIFLGS                                                   01218000
USRNGTAB EQU   USRTAB                                                   01219000
O        EQU   USR+1                                                    01220000
N01R     EQU   USRFLGS                                                  01221000
SELU     EQU   USRFLGS                                                  01222000
ALLU     EQU   USRFLGS                                                  01223000
SVCNUMS  EQU   AMDPRTAB+336                                             01224000
M        EQU   VCF+1                                                    01225000
L        EQU   SVCFLGS                                                  01226000
SELV     EQU   SVCFLGS                                                  01227000
ALLV     EQU   SVCFLGS                                                  01228000
IODVADS  EQU   DVADS2                                                   01229000
K01RES   EQU   IO+1                                                     01230000
JJ       EQU   IOFLGS2                                                  01231000
SELI     EQU   IOFLGS2                                                  01232000
ALLI     EQU   IOFLGS2                                                  01233000
SIODVADS EQU   DVADS1                                                   01234000
II       EQU   SIF+1                                                    01235000
H        EQU   SIOFLGS                                                  01236000
NOEQU    EQU   SIOFLGS                                                  01237000
EQUIV    EQU   SIOFLGS                                                  01238000
SELS     EQU   SIOFLGS                                                  01239000
ALLS     EQU   SIOFLGS                                                  01240000
ASCBADDR EQU   AADS                                                     01241000
JOBNAMES EQU   NAMES                                                    01242000
DAY2     EQU   STOPTIME+10                                              01243000
F        EQU   STOPTIME+8                                               01244000
TIME2    EQU   STOPTIME                                                 01245000
DAY      EQU   STARTIME+10                                              01246000
D        EQU   STARTIME+8                                               01247000
TIME     EQU   STARTIME                                                 01248000
DDNAME   EQU   AMDPRTAB+32                                              01249000
USEREXIT EQU   AMDPRTAB+24                                              01250000
GTFWDPTR EQU   AMDPRTAB+20                                              01251000
C        EQU   DEBGFLGS+4                                               01252000
B        EQU   IOFLGS                                                   01253000
GETEOF   EQU   IOFLGS                                                   01254000
DMDFMT   EQU   INRFCFGS                                                 01255000
EDITSTOP EQU   INRFCFGS                                                 01256000
EXTTRC   EQU   INRFCFGS                                                 01257000
RET      EQU   INRFCFGS                                                 01258000
FMT      EQU   INRFCFGS                                                 01259000
SPIE     EQU   INRFCFGS                                                 01260000
TERM     EQU   INRFCFGS                                                 01261000
FLMODE   EQU   INRFCFGS                                                 01262000
REMAIN   EQU   PTHFLGS2                                                 01263000
APP      EQU   PTHFLGS2                                                 01264000
REXT     EQU   PTHFLGS1                                                 01265000
FRM      EQU   PTHFLGS1                                                 01266000
FLT      EQU   PTHFLGS1                                                 01267000
HEX      EQU   PTHFLGS1                                                 01268000
CON      EQU   PTHFLGS1                                                 01269000
GET      EQU   PTHFLGS1                                                 01270000
SCN      EQU   PTHFLGS1                                                 01271000
ROOT     EQU   PTHFLGS1                                                 01272000
CURREC   EQU   AMDPRTAB+4                                               01273000
AFMG     EQU   AMDPRTAB                                                 01274000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      01275000
@RC00066 EQU   @RC00063                                                 01276000
@RC00079 EQU   @RC00077                                                 01277000
@RC00157 EQU   @RC00154                                                 01278000
@RC00246 EQU   @RC00238                                                 01279000
@RC00082 EQU   @RC00079                                                 01280000
@ENDDATA EQU   *                                                        01281000
         END   AMDSYS00,(C'PLS2309',0603,76153)                         01282000
./  ADD  SSI=60690022,NAME=AMDSYS01
         TITLE 'AMDSYS01 - EDIT SYS SVC FORMAT APPENDAGE               *00001000
                        '                                               00002000
AMDSYS01 CSECT ,                                                01S0001 00003000
@MAINENT DS    0H                                               01S0001 00004000
         USING *,@15                                            01S0001 00005000
         B     @PROLOG                                          01S0001 00006000
         DC    AL1(16)                                          01S0001 00007000
         DC    C'AMDSYS01  76.069'                              01S0001 00008000
         DROP  @15                                                      00009000
@PROLOG  STM   @14,@12,12(@13)                                  01S0001 00010000
         BALR  @11,0                                            01S0001 00011000
@PSTART  LA    @12,4095(,@11)                                   01S0001 00012000
         LA    @08,4095(,@12)                                   01S0001 00013000
         USING @PSTART,@11                                      01S0001 00014000
         USING @PSTART+4095,@12                                 01S0001 00015000
         USING @PSTART+8190,@08                                 01S0001 00016000
*   PLISTPTR=R1;                    /* ADDR OF PLIST PASSED BY CALLER*/ 00017000
         LR    PLISTPTR,R1                                      01S0154 00018000
*   R10=DYNAMSTG;                   /* ADDR OF GETMAINED AREA        */ 00019000
         L     R10,DYNAMSTG(,PLISTPTR)                          01S0155 00020000
*   GEN SETS(R13,R15);                                          01S0156 00021000
         USING @DATD,R10             ADDRESSABILITY FOR DYNAM VARIABLES 00022000
         ST    R13,@SA00001+4                                           00023000
         LA    R15,@SA00001                                             00024000
         ST    R15,8(R13)                                               00025000
         LR    R13,R15                                                  00026000
*   ABDPLPTR=SNAPPARM;              /* ADDR OF PARMLIST              */ 00027000
         L     @14,SNAPPARM(,PLISTPTR)                          01S0157 00028000
         ST    @14,ABDPLPTR(,PLISTPTR)                          01S0157 00029000
*   IF TIMESW=0 THEN                /* IS THIS THE FIRST PASS        */ 00030000
         ICM   @14,3,TIMESW                                     01S0158 00031000
         BNZ   @RF00158                                         01S0158 00032000
*     DO;                           /* YES - CHECK TO SEE IF THIS SVC   00033000
*                                      IS TO BE PROCESSED            */ 00034000
*                                                               02S0160 00035000
*       /*************************************************************/ 00036000
*       /*                                                           */ 00037000
*       /* DETERMINE IF THIS SVC RECORD SHOULD BE PROCESSED          */ 00038000
*       /*                                                           */ 00039000
*       /*************************************************************/ 00040000
*                                                               02S0160 00041000
*       IF ERRECORD='EEEE'X THEN    /* IS ENTIRE RECORD IN ERROR     */ 00042000
         L     @14,DATAPTR(,PLISTPTR)                           02S0160 00043000
         CLC   ERRECORD(2,@14),@CB01365                         02S0160 00044000
         BNE   @RF00160                                         02S0160 00045000
*         RETCODE=12;               /* YES - INDICATES TO PRINT 02S0161 00046000
*                                      RECORD IN HEX                 */ 00047000
         LA    RETCODE,12                                       02S0161 00048000
*       ELSE                        /* NO - RECORD IS OK             */ 00049000
*         DO;                                                   02S0162 00050000
         B     @RC00160                                         02S0162 00051000
@RF00160 DS    0H                                               02S0163 00052000
*           IF ALLV=ON THEN         /* ARE ALL SVCS BEING TRACED     */ 00053000
         TM    ALLV(AEDITCBR),B'10000000'                       02S0163 00054000
         BNO   @RF00163                                         02S0163 00055000
*             RETCODE=0;            /* YES - INDICATES TO FORMAT THIS   00056000
*                                      RECORD                        */ 00057000
         SLR   RETCODE,RETCODE                                  02S0164 00058000
*           ELSE                    /* NO - CHECK TABLE OF SVCS      */ 00059000
*             DO;                                               02S0165 00060000
         B     @RC00163                                         02S0165 00061000
@RF00163 DS    0H                                               02S0166 00062000
*               I=SYSSVC/8;         /* CALCULATE BYTE                */ 00063000
         L     @14,DATAPTR(,PLISTPTR)                           02S0166 00064000
         SLR   @05,@05                                          02S0166 00065000
         IC    @05,SYSSVC(,@14)                                 02S0166 00066000
         LR    I,@05                                            02S0166 00067000
         SRL   I,3                                              02S0166 00068000
*               J=SYSSVC//8;        /* CALCULATE BIT IN BYTE         */ 00069000
         LR    @02,@05                                          02S0167 00070000
         SRDA  @02,32                                           02S0167 00071000
         D     @02,@CF00034                                     02S0167 00072000
         LR    J,@02                                            02S0167 00073000
*               IF(SVCLIST(I+1)&HEXTEST(J+1))¬=0 THEN/* IS THIS SVC     00074000
*                                      BEING TRACED                  */ 00075000
         SLR   @14,@14                                          02S0168 00076000
         LR    @05,J                                            02S0168 00077000
         ALR   @05,@05                                          02S0168 00078000
         LH    @05,HEXTEST(@05)                                 02S0168 00079000
         SLR   @03,@03                                          02S0168 00080000
         IC    @03,SVCLIST(I,AEDITCBR)                          02S0168 00081000
         NR    @05,@03                                          02S0168 00082000
         CR    @05,@14                                          02S0168 00083000
         BE    @RF00168                                         02S0168 00084000
*                 RETCODE=0;        /* YES - INDICATES TO FORMAT THIS   00085000
*                                      SVC                           */ 00086000
         LR    RETCODE,@14                                      02S0169 00087000
*               ELSE                /* NO - THIS SVC ISN'T BEING        00088000
*                                      TRACED                        */ 00089000
*                 RETCODE=8;        /* INDICATES TO SKIP THIS AND GET   00090000
*                                      NEXT SVC RECORD               */ 00091000
         B     @RC00168                                         02S0170 00092000
@RF00168 LA    RETCODE,8                                        02S0170 00093000
*             END;                                              02S0171 00094000
@RC00168 DS    0H                                               02S0172 00095000
*         END;                                                  02S0172 00096000
@RC00163 DS    0H                                               02S0173 00097000
*       IF RETCODE=0 THEN           /* IS THIS SVC TO BE FORMATTED   */ 00098000
@RC00160 LTR   RETCODE,RETCODE                                  01S0173 00099000
         BNZ   @RF00173                                         01S0173 00100000
*         DO;                       /* YES - FORMAT THE FIRST LINE   */ 00101000
*                                                               02S0175 00102000
*           /*********************************************************/ 00103000
*           /*                                                       */ 00104000
*           /* FORMAT THE FIRST LINE OF THE BASIC RECORD             */ 00105000
*           /*                                                       */ 00106000
*           /*********************************************************/ 00107000
*                                                               02S0175 00108000
*           CNVTSVC=SYSSVC;         /* MOVE SVC NUMB FOR CONVERT     */ 00109000
         L     @14,DATAPTR(,PLISTPTR)                           02S0175 00110000
         SLR   CNVTSVC,CNVTSVC                                  02S0175 00111000
         IC    CNVTSVC,SYSSVC(,@14)                             02S0175 00112000
*           CVD(CNVTSVC,PAKEDSVC);  /* CONVERT TO DECIMAL            */ 00113000
         CVD   CNVTSVC,@TS00001                                 02S0176 00114000
         MVC   PAKEDSVC(2),@TS00001+6                           02S0176 00115000
*           UNPK(UNPAKTO,UNPAKFRM); /* UNPACK SVC NUMBER             */ 00116000
         UNPK  UNPAKTO(5),UNPAKFRM(3)                           02S0177 00117000
*           ADPLFMT2=ADDR(UNPAKTO); /* ADDR OF DECIMAL SVC NUMBER    */ 00118000
         L     @14,ABDPLPTR(,PLISTPTR)                          02S0178 00119000
         LA    @07,UNPAKTO                                      02S0178 00120000
         ST    @07,ADPLFMT2(,@14)                               02S0178 00121000
*           R0=ADDR(SVCTITLE);      /* ADDR OF FORMAT PATTERN        */ 00122000
         LA    R0,SVCTITLE                                      02S0179 00123000
*           R1=ABDPLPTR;            /* ADDR OF ABDUMP PLIST FOR 02S0180 00124000
*                                      AMDPRFMT                      */ 00125000
         LR    R1,@14                                           02S0180 00126000
*           CALL AMDPRFMT;          /* FORMAT SVC TITLE              */ 00127000
         L     @15,FMTADDR(,PLISTPTR)                           02S0181 00128000
         BALR  @14,@15                                          02S0181 00129000
*           ADPLFMT2=DATAPTR;       /* ADDR OF DATA IN BUFFER        */ 00130000
         L     @14,ABDPLPTR(,PLISTPTR)                          02S0182 00131000
         MVC   ADPLFMT2(4,@14),DATAPTR(PLISTPTR)                02S0182 00132000
*           R0=ADDR(FIRSTLN);       /* ADDR OF PATTERNS FOR FIRST       00133000
*                                      LINE                          */ 00134000
         LA    R0,FIRSTLN                                       02S0183 00135000
*           CALL AMDPRFMT;          /* FORMAT FIRST LINE             */ 00136000
         L     @15,FMTADDR(,PLISTPTR)                           02S0184 00137000
         BALR  @14,@15                                          02S0184 00138000
*           CALL SVCFORMX;          /* CHECK FOR ADDITIONAL DATA TO     00139000
*                                      BE FORMATTED                  */ 00140000
         BAL   @14,SVCFORMX                                     01S0185 00141000
*         END;                                                  01S0186 00142000
*     END;                                                      01S0187 00143000
*   ELSE                                                        01S0188 00144000
*     DO;                           /* NO - THIS IS NOT THE FIRST       00145000
*                                      PASS                          */ 00146000
         B     @RC00158                                         01S0188 00147000
@RF00158 DS    0H                                               01S0189 00148000
*       IF TIMESW=1 THEN            /* IS THIS THE SECOND PASS       */ 00149000
         CLC   TIMESW(2),@CH00046                               01S0189 00150000
         BNE   @RF00189                                         01S0189 00151000
*         DO;                       /* YES - FORMAT THE REGS         */ 00152000
*                                                               02S0191 00153000
*           /*********************************************************/ 00154000
*           /*                                                       */ 00155000
*           /* FORMAT THE SECOND LINE OF THE BASIC RECORD            */ 00156000
*           /*                                                       */ 00157000
*           /*********************************************************/ 00158000
*                                                               02S0191 00159000
*           ADPLFMT1=ADDR(LBASICL2);/* ADDR OF LABELS FOR THIS LINE  */ 00160000
         L     @14,ABDPLPTR(,PLISTPTR)                          02S0191 00161000
         LA    @07,LBASICL2                                     02S0191 00162000
         ST    @07,ADPLFMT1(,@14)                               02S0191 00163000
*           ADPLFMT2=ADDR(R15FLD);  /* ADDR OF DATA IN BUFFER        */ 00164000
         L     @07,DATAPTR(,PLISTPTR)                           02S0192 00165000
         LA    @07,R15FLD(,@07)                                 02S0192 00166000
         ST    @07,ADPLFMT2(,@14)                               02S0192 00167000
*           R0=ADDR(SECONDLN);      /* ADDR OF PATTERNS FOR SECOND      00168000
*                                      LINE                          */ 00169000
         LA    R0,SECONDLN                                      02S0193 00170000
*           R1=ABDPLPTR;            /* ADDR OF ABDUMP PLIST FOR 02S0194 00171000
*                                      AMDPRFMT                      */ 00172000
         LR    R1,@14                                           02S0194 00173000
*           CALL AMDPRFMT;          /* FORMAT REGISTERS              */ 00174000
         L     @15,FMTADDR(,PLISTPTR)                           02S0195 00175000
         BALR  @14,@15                                          02S0195 00176000
*         END;                                                  01S0196 00177000
*       CALL SVCFORMX;              /* CHECK FOR ADDITIONAL DATA TO     00178000
*                                      BE FORMATTED                  */ 00179000
@RF00189 BAL   @14,SVCFORMX                                     01S0197 00180000
*     END;                                                      01S0198 00181000
*   IF RETCODE=0 THEN               /* IS ANOTHER PASS NECESSARY     */ 00182000
@RC00158 LTR   RETCODE,RETCODE                                  01S0199 00183000
         BNZ   @RF00199                                         01S0199 00184000
*     TIMESW=TIMESW+1;              /* YES - INDICATES TO PROCESS       00185000
*                                      SUBSEQUENT PASSES             */ 00186000
         LA    @14,1                                            01S0200 00187000
         AH    @14,TIMESW                                       01S0200 00188000
         STH   @14,TIMESW                                       01S0200 00189000
*   RETURN CODE(RETCODE);           /* RETURN TO CALLER WITH RETURN     00190000
*                                      CODE                          */ 00191000
@RF00199 L     @13,4(,@13)                                      01S0201 00192000
         L     @14,12(,@13)                                     01S0201 00193000
         LM    @00,@12,20(@13)                                  01S0201 00194000
         BR    @14                                              01S0201 00195000
*                                                               02S0202 00196000
*   /*****************************************************************/ 00197000
*   /*                                                               */ 00198000
*   /* USING THE SVC NUMBER IN THE BASIC RECORD BRANCH TO THE        */ 00199000
*   /* SPECIFIC ROUTINE AND DETERMINE WHAT ADDITIONAL DATA IS TO BE  */ 00200000
*   /* FORMATTED                                                     */ 00201000
*   /*                                                               */ 00202000
*   /*****************************************************************/ 00203000
*                                                               02S0202 00204000
*SVCFORMX:                                                      02S0202 00205000
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);                            02S0202 00206000
SVCFORMX DS    0H                                               02S0203 00207000
*   RESPECIFY                                                   02S0203 00208000
*     R14 RESTRICTED;                                           02S0203 00209000
*   SAVER14=R14;                    /* SAVE RETURN POINT ADDR        */ 00210000
         ST    R14,SAVER14                                      02S0204 00211000
*   RESPECIFY                                                   02S0205 00212000
*     R14 UNRESTRICTED;                                         02S0205 00213000
*   R1=ABDPLPTR;                    /* ADDR OF ABDUMP PLIST FOR 02S0206 00214000
*                                      AMDPRFMT                      */ 00215000
         L     R1,ABDPLPTR(,PLISTPTR)                           02S0206 00216000
*   SVCNUMBR=SYSSVC;                /* SVC NUMBER FOR BRANCH TABLE   */ 00217000
         L     @14,DATAPTR(,PLISTPTR)                           02S0207 00218000
         SLR   SVCNUMBR,SVCNUMBR                                02S0207 00219000
         IC    SVCNUMBR,SYSSVC(,@14)                            02S0207 00220000
*   IF SVCNUMBR¬='FF'X THEN         /* IS THIS SVC 255               */ 00221000
         CH    SVCNUMBR,@CH01372                                02S0208 00222000
         BE    @RF00208                                         02S0208 00223000
*     SVCNUMBR=SVCNUMBR+1;          /* NO - INCREMENT SVC NUMBER FOR    00224000
*                                      BRANCH TABLE                  */ 00225000
         AH    SVCNUMBR,@CH00046                                02S0209 00226000
*   DO;                             /* CASE(SVCNUMBR)NAMES(S00,GP2,GP   00227000
*                                      2,G1,GP2,GP2,S06,S06,S08,S08,G   00228000
*                                      1,G1,G1,S13,S14,S15,S16,GP2,GP   00229000
*                                      2,GP2,GP2,S21,GP2,GP2,GP3,S25,   00230000
*                                      S26,S27,S13,S29,S30,GP3,S32,S3   00231000
*                                      2,G1,GP2,G1,GP2,G1,GP2,GP2,S08   00232000
*                                      ,S42,G1,S44,GP2,G1,GP2,S48,G1,   00233000
*                                      G1,GP2,S52,GP3,S00,GP3,S48,GP3   00234000
*                                      ,GP3,G1,GP2,G1,S44,GP2,GP2,G1,   00235000
*                                      S66,G1,S13,GP3,GP2,S71,G1,GP2,   00236000
*                                      GP2,S75,G1,G1,S32,G1,GP2,S71,S   00237000
*                                      82,G1,G1,G1,S86,GP2,S88,G1,G1,   00238000
*                                      G1,S00,G1,G1,G1,GP2,G1,S98,G1,   00239000
*                                      G1,G1,GP2,G1,G1,G1,G1,G1,G1,G1   00240000
*                                      ,G1,G1,G1,G1,S00,G1,G1,G1,G1,G   00241000
*                                      1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G   00242000
*                                      1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G   00243000
*                                      1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G   00244000
*                                      1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G   00245000
*                                      1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G   00246000
*                                      1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G   00247000
*                                      1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G   00248000
*                                      1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G   00249000
*                                      1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G   00250000
*                                      1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G   00251000
*                                      1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G   00252000
*                                      1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G   00253000
*                                      1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G   00254000
*                                      1,G1,G1,G1,G1,G1)             */ 00255000
@RF00208 DS    0H                                               02S0211 00256000
*     DCL                                                       02S0211 00257000
*       CL0001@ LABEL BASED(CP0001@(SVCNUMBR)) VALUERANGE(S00,GP2,GP2,  00258000
*           G1,GP2,GP2,S06,S06,S08,S08,G1,G1,G1,S13,S14,S15,S16,GP2,GP2 00259000
*           ,GP2,GP2,S21,GP2,GP2,GP3,S25,S26,S27,S13,S29,S30,GP3,S32,   00260000
*           S32,G1,GP2,G1,GP2,G1,GP2,GP2,S08,S42,G1,S44,GP2,G1,GP2,S48, 00261000
*           G1,G1,GP2,S52,GP3,S00,GP3,S48,GP3,GP3,G1,GP2,G1,S44,GP2,GP2 00262000
*           ,G1,S66,G1,S13,GP3,GP2,S71,G1,GP2,GP2,S75,G1,G1,S32,G1,GP2, 00263000
*           S71,S82,G1,G1,G1,S86,GP2,S88,G1,G1,G1,S00,G1,G1,G1,GP2,G1,  00264000
*           S98,G1,G1,G1,GP2,G1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G1,S00,G1,G1 00265000
*           ,G1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G1,  00266000
*           G1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G1 00267000
*           ,G1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G1,  00268000
*           G1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G1 00269000
*           ,G1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G1,  00270000
*           G1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G1 00271000
*           ,G1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G1,G1,  00272000
*           G1,G1);                 /* BRANCH TARGET                 */ 00273000
*     DCL                                                       02S0212 00274000
*       CP0001@(255) PTR(31) INIT(ADDR(S00),ADDR(GP2),ADDR(GP2),ADDR(G1 00275000
*           ),ADDR(GP2),ADDR(GP2),ADDR(S06),ADDR(S06),ADDR(S08),ADDR(   00276000
*           S08),ADDR(G1),ADDR(G1),ADDR(G1),ADDR(S13),ADDR(S14),ADDR(   00277000
*           S15),ADDR(S16),ADDR(GP2),ADDR(GP2),ADDR(GP2),ADDR(GP2),ADDR 00278000
*           (S21),ADDR(GP2),ADDR(GP2),ADDR(GP3),ADDR(S25),ADDR(S26),    00279000
*           ADDR(S27),ADDR(S13),ADDR(S29),ADDR(S30),ADDR(GP3),ADDR(S32) 00280000
*           ,ADDR(S32),ADDR(G1),ADDR(GP2),ADDR(G1),ADDR(GP2),ADDR(G1),  00281000
*           ADDR(GP2),ADDR(GP2),ADDR(S08),ADDR(S42),ADDR(G1),ADDR(S44), 00282000
*           ADDR(GP2),ADDR(G1),ADDR(GP2),ADDR(S48),ADDR(G1),ADDR(G1),   00283000
*           ADDR(GP2),ADDR(S52),ADDR(GP3),ADDR(S00),ADDR(GP3),ADDR(S48) 00284000
*           ,ADDR(GP3),ADDR(GP3),ADDR(G1),ADDR(GP2),ADDR(G1),ADDR(S44), 00285000
*           ADDR(GP2),ADDR(GP2),ADDR(G1),ADDR(S66),ADDR(G1),ADDR(S13),  00286000
*           ADDR(GP3),ADDR(GP2),ADDR(S71),ADDR(G1),ADDR(GP2),ADDR(GP2), 00287000
*           ADDR(S75),ADDR(G1),ADDR(G1),ADDR(S32),ADDR(G1),ADDR(GP2),   00288000
*           ADDR(S71),ADDR(S82),ADDR(G1),ADDR(G1),ADDR(G1),ADDR(S86),   00289000
*           ADDR(GP2),ADDR(S88),ADDR(G1),ADDR(G1),ADDR(G1),ADDR(S00),   00290000
*           ADDR(G1),ADDR(G1),ADDR(G1),ADDR(GP2),ADDR(G1),ADDR(S98),    00291000
*           ADDR(G1),ADDR(G1),ADDR(G1),ADDR(GP2),ADDR(G1),ADDR(G1),ADDR 00292000
*           (G1),ADDR(G1),ADDR(G1),ADDR(G1),ADDR(G1),ADDR(G1),ADDR(G1), 00293000
*           ADDR(G1),ADDR(G1),ADDR(S00),ADDR(G1),ADDR(G1),ADDR(G1),ADDR 00294000
*           (G1),ADDR(G1),ADDR(G1),ADDR(G1),ADDR(G1),ADDR(G1),ADDR(G1), 00295000
*           ADDR(G1),ADDR(G1),ADDR(G1),ADDR(G1),ADDR(G1),ADDR(G1),ADDR( 00296000
*           G1),ADDR(G1),ADDR(G1),ADDR(G1),ADDR(G1),ADDR(G1),ADDR(G1),  00297000
*           ADDR(G1),ADDR(G1),ADDR(G1),ADDR(G1),ADDR(G1),ADDR(G1),ADDR( 00298000
*           G1),ADDR(G1),ADDR(G1),ADDR(G1),ADDR(G1),ADDR(G1),ADDR(G1),  00299000
*           ADDR(G1),ADDR(G1),ADDR(G1),ADDR(G1),ADDR(G1),ADDR(G1),ADDR( 00300000
*           G1),ADDR(G1),ADDR(G1),ADDR(G1),ADDR(G1),ADDR(G1),ADDR(G1),  00301000
*           ADDR(G1),ADDR(G1),ADDR(G1),ADDR(G1),ADDR(G1),ADDR(G1),ADDR( 00302000
*           G1),ADDR(G1),ADDR(G1),ADDR(G1),ADDR(G1),ADDR(G1),ADDR(G1),  00303000
*           ADDR(G1),ADDR(G1),ADDR(G1),ADDR(G1),ADDR(G1),ADDR(G1),ADDR( 00304000
*           G1),ADDR(G1),ADDR(G1),ADDR(G1),ADDR(G1),ADDR(G1),ADDR(G1),  00305000
*           ADDR(G1),ADDR(G1),ADDR(G1),ADDR(G1),ADDR(G1),ADDR(G1),ADDR( 00306000
*           G1),ADDR(G1),ADDR(G1),ADDR(G1),ADDR(G1),ADDR(G1),ADDR(G1),  00307000
*           ADDR(G1),ADDR(G1),ADDR(G1),ADDR(G1),ADDR(G1),ADDR(G1),ADDR( 00308000
*           G1),ADDR(G1),ADDR(G1),ADDR(G1),ADDR(G1),ADDR(G1),ADDR(G1),  00309000
*           ADDR(G1),ADDR(G1),ADDR(G1),ADDR(G1),ADDR(G1),ADDR(G1),ADDR( 00310000
*           G1),ADDR(G1),ADDR(G1),ADDR(G1),ADDR(G1),ADDR(G1),ADDR(G1),  00311000
*           ADDR(G1),ADDR(G1),ADDR(G1),ADDR(G1),ADDR(G1),ADDR(G1),ADDR( 00312000
*           G1),ADDR(G1),ADDR(G1),ADDR(G1),ADDR(G1),ADDR(G1),ADDR(G1),  00313000
*           ADDR(G1),ADDR(G1),ADDR(G1),ADDR(G1),ADDR(G1),ADDR(G1),ADDR( 00314000
*           G1),ADDR(G1),ADDR(G1),ADDR(G1),ADDR(G1),ADDR(G1),ADDR(G1)); 00315000
*     GOTO CL0001@;                 /* BRANCH TO SELECTED CASE       */ 00316000
         LR    @14,SVCNUMBR                                     02S0213 00317000
         SLA   @14,2                                            02S0213 00318000
         L     @14,CP0001@-4(@14)                               02S0213 00319000
         BR    @14                                              02S0213 00320000
*                                                               02S0214 00321000
*     /***************************************************************/ 00322000
*     /*                                                             */ 00323000
*     /* THIS ROUTINE WILL PROCESS THE FOLLOWING SVCS:               */ 00324000
*     /* 3,10,11,12,34,36,38,43,46,49,50,59,61,65,72,76,77,79,83, 84,*/ 00325000
*     /* 85,89,90,91,93,94,95,97,99,100,101,103,104,105,106,107,108, */ 00326000
*     /* 109,110,111,112,113,115,116,117,118,119,120,121,122,123,124.*/ 00327000
*     /* IT WILL ALSO PROCESS ALL USER SVCS - 128 - 255. THE         */ 00328000
*     /* FORMATTING CONSISTS OF ONLY THE BASIC RECORD.               */ 00329000
*     /*                                                             */ 00330000
*     /***************************************************************/ 00331000
*                                                               02S0214 00332000
*G1:                                                            02S0214 00333000
*     DO;                           /* SUBCASE                       */ 00334000
G1       DS    0H                                               02S0215 00335000
*       IF TIMESW=0 THEN            /* IS THIS THE FIRST PASS        */ 00336000
         SLR   @14,@14                                          02S0215 00337000
         CH    @14,TIMESW                                       02S0215 00338000
         BNE   @RF00215                                         02S0215 00339000
*         RETCODE=0;                /* YES - INDICATES TO PRINT 02S0216 00340000
*                                      BUFFER AND RETURN FOR SECOND     00341000
*                                      PASS                          */ 00342000
         LR    RETCODE,@14                                      02S0216 00343000
*       ELSE                                                    02S0217 00344000
*         RETCODE=4;                /* NO - INDICATES TO PRINT BUFFER   00345000
*                                      AND GET NEXT RECORD           */ 00346000
         B     @RC00215                                         02S0217 00347000
@RF00215 LA    RETCODE,4                                        02S0217 00348000
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */ 00349000
         B     CE0001@                                          02S0218 00350000
*     END G1;                       /* END OF SUBCASE                */ 00351000
*                                                               02S0220 00352000
*     /***************************************************************/ 00353000
*     /*                                                             */ 00354000
*     /* THIS ROUTINE WILL PROCESS THE FOLLOWING SVCS:               */ 00355000
*     /* 1,2,4,5,17,18,19,20,22,23,35,37,39,40,45,47,51,60,63,64,    */ 00356000
*     /* 70,73,74,80,87,96,102. THE FORMATTING CONSISTS OFTHE BASIC  */ 00357000
*     /* RECORD + A VARIABLE LENGTH PARAMETER LIST.                  */ 00358000
*     /*                                                             */ 00359000
*     /***************************************************************/ 00360000
*                                                               02S0220 00361000
*GP2:                                                           02S0220 00362000
*     DO;                           /* SUBCASE                       */ 00363000
GP2      DS    0H                                               02S0221 00364000
*       IF TIMESW=0|TIMESW=1 THEN   /* HAS BASIC RECORD BEEN    02S0221 00365000
*                                      FORMATTED                     */ 00366000
         LH    @14,TIMESW                                       02S0221 00367000
         LTR   @14,@14                                          02S0221 00368000
         BZ    @RT00221                                         02S0221 00369000
         CH    @14,@CH00046                                     02S0221 00370000
         BNE   @RF00221                                         02S0221 00371000
@RT00221 DS    0H                                               02S0222 00372000
*         RETCODE=0;                /* NO - INDICATES TO PRINT BUFFER   00373000
*                                      AND RETURN FOR SECOND PASS    */ 00374000
         SLR   RETCODE,RETCODE                                  02S0222 00375000
*       ELSE                                                    02S0223 00376000
*         DO;                       /* YES - CHECK LENGTH AND MODIFY    00377000
*                                      PATTERN ACCORDINGLY           */ 00378000
         B     @RC00221                                         02S0223 00379000
@RF00221 DS    0H                                               02S0224 00380000
*           IF GRP2LNTH=0 THEN      /* IS THERE A PLIST              */ 00381000
         L     @14,DATAPTR(,PLISTPTR)                           02S0224 00382000
         CLI   GRP2LNTH+46(@14),0                               02S0224 00383000
         BNE   @RF00224                                         02S0224 00384000
*             R0=ADDR(GP2NA);       /* NO - ADDR OF PATTERN FOR THIS    00385000
*                                      LINE                          */ 00386000
         LA    R0,GP2NA                                         02S0225 00387000
*           ELSE                                                02S0226 00388000
*             DO;                   /* YES - THERE IS A PLIST        */ 00389000
         B     @RC00224                                         02S0226 00390000
@RF00224 DS    0H                                               02S0227 00391000
*               DYNAMPTN(1:LENGTH(GRP2LN3))=GRP2LN3;/* MOVE PATTERN     00392000
*                                      TO GETMAIN AREA               */ 00393000
         MVC   DYNAMPTN(41),GRP2LN3                             02S0227 00394000
*               ADPLFMT2=ADDR(GRP2LNTH)+1;/* ADDR OF DATA IN BUFFER  */ 00395000
         L     @14,ABDPLPTR(,PLISTPTR)                          02S0228 00396000
         L     @07,DATAPTR(,PLISTPTR)                           02S0228 00397000
         LA    @05,47                                           02S0228 00398000
         ALR   @05,@07                                          02S0228 00399000
         ST    @05,ADPLFMT2(,@14)                               02S0228 00400000
*               R0=ADDR(DYNAMPTN);  /* ADDR OF PATTERNS FOR THIS LINE*/ 00401000
         LA    R0,DYNAMPTN                                      02S0229 00402000
*               IF GRP2LNTH=ERROR THEN/* IS FIELD IN ERROR           */ 00403000
         CLI   GRP2LNTH+46(@07),255                             02S0230 00404000
         BNE   @RF00230                                         02S0230 00405000
*                 DO;               /* YES - ONLY FORMAT 4 BYTES     */ 00406000
*                   OLDFLG(1)=OLDFLG(1)|CHARFLAG;/* INDICATE DATA IN    00407000
*                                      EBCDIC                        */ 00408000
         SLR   @14,@14                                          02S0232 00409000
         IC    @14,OLDFLG                                       02S0232 00410000
         O     @14,@CF00092                                     02S0232 00411000
         STC   @14,OLDFLG                                       02S0232 00412000
*                   OLDFLG(2)=0;    /* INDICATE END OF PATTERNS      */ 00413000
         MVI   OLDFLG+4,X'00'                                   02S0233 00414000
*                 END;                                          02S0234 00415000
*               ELSE                                            02S0235 00416000
*                 DO;               /* NO - DETERMINE HOW MANY BYTES    00417000
*                                      IN PLIST                      */ 00418000
         B     @RC00230                                         02S0235 00419000
@RF00230 DS    0H                                               02S0236 00420000
*                   IF GRP2LNTH<4 THEN/* IS PLIST LESS THAN ONE WORD */ 00421000
         LA    @14,46                                           02S0236 00422000
         AL    @14,DATAPTR(,PLISTPTR)                           02S0236 00423000
         CLI   GRP2LNTH(@14),4                                  02S0236 00424000
         BNL   @RF00236                                         02S0236 00425000
*                     DO;           /* YES                           */ 00426000
*                       OLDLN(1)=OLDLN(1)&DATAOFF;/* SET DATA LENGTH    00427000
*                                      TO 0                          */ 00428000
         SLR   @07,@07                                          02S0238 00429000
         IC    @07,OLDLN                                        02S0238 00430000
         N     @07,@CF00297                                     02S0238 00431000
         STC   @07,OLDLN                                        02S0238 00432000
*                       OLDLN(1)=OLDLN(1)|(GRP2LNTH-1);/* NEW DATA      00433000
*                                      LENGTH                        */ 00434000
         SLR   @05,@05                                          02S0239 00435000
         IC    @05,GRP2LNTH(,@14)                               02S0239 00436000
         BCTR  @05,0                                            02S0239 00437000
         OR    @07,@05                                          02S0239 00438000
         STC   @07,OLDLN                                        02S0239 00439000
*                       OLDFLG(2)=0;/* INDICATE END OF PATTERNS      */ 00440000
         MVI   OLDFLG+4,X'00'                                   02S0240 00441000
*                     END;                                      02S0241 00442000
*                   ELSE                                        02S0242 00443000
*                     DO;           /* NO - MODIFY PATTERNS          */ 00444000
         B     @RC00236                                         02S0242 00445000
@RF00236 DS    0H                                               02S0243 00446000
*                       K=GRP2LNTH/4;/* NUMBER OF FULL WORDS         */ 00447000
         L     @14,DATAPTR(,PLISTPTR)                           02S0243 00448000
         SLR   @05,@05                                          02S0243 00449000
         IC    @05,GRP2LNTH+46(,@14)                            02S0243 00450000
         LR    K,@05                                            02S0243 00451000
         SRL   K,2                                              02S0243 00452000
*                       MOD=GRP2LNTH//4;/* REMAINDER OF PARTIAL WORD */ 00453000
         LR    @02,@05                                          02S0244 00454000
         SRDA  @02,32                                           02S0244 00455000
         D     @02,@CF00099                                     02S0244 00456000
         LR    MOD,@02                                          02S0244 00457000
*                       IF MOD=0 THEN/* ARE ALL FULL WORDS           */ 00458000
         SLR   @14,@14                                          02S0245 00459000
         CR    MOD,@14                                          02S0245 00460000
         BNE   @RF00245                                         02S0245 00461000
*                         OLDFLG(K+1)=0;/* YES - INDICATE END OF        00462000
*                                      PATTERNS                      */ 00463000
         LR    @07,K                                            02S0246 00464000
         SLA   @07,2                                            02S0246 00465000
         STC   @14,OLDFLG(@07)                                  02S0246 00466000
*                       ELSE                                    02S0247 00467000
*                         DO;       /* NO - MODIFY PATTERNS     02S0247 00468000
*                                      ACCORDINGLY                   */ 00469000
         B     @RC00245                                         02S0247 00470000
@RF00245 DS    0H                                               02S0248 00471000
*                           OLDLN(K+1)=OLDLN(K+1)&DATAOFF;/* SET DATA   00472000
*                                      LENGTH TO ZERO                */ 00473000
         LR    @14,K                                            02S0248 00474000
         SLA   @14,2                                            02S0248 00475000
         SLR   @05,@05                                          02S0248 00476000
         IC    @05,OLDLN(@14)                                   02S0248 00477000
         N     @05,@CF00297                                     02S0248 00478000
         STC   @05,OLDLN(@14)                                   02S0248 00479000
*                           OLDLN(K+1)=OLDLN(K+1)|(MOD-1);/* NEW DATA   00480000
*                                      LENGTH                        */ 00481000
         LR    @03,MOD                                          02S0249 00482000
         BCTR  @03,0                                            02S0249 00483000
         OR    @05,@03                                          02S0249 00484000
         STC   @05,OLDLN(@14)                                   02S0249 00485000
*                           OLDFLG(K+2)=0;/* INDICATE END OF PATTERNS*/ 00486000
         SLR   @07,@07                                          02S0250 00487000
         STC   @07,OLDFLG+4(@14)                                02S0250 00488000
*                         END;                                  02S0251 00489000
*                     END;                                      02S0252 00490000
@RC00245 DS    0H                                               02S0253 00491000
*                 END;                                          02S0253 00492000
@RC00236 DS    0H                                               02S0254 00493000
*             END;                                              02S0254 00494000
@RC00230 DS    0H                                               02S0255 00495000
*           ADPLFMT1=ADDR(GROUP2);  /* LABEL FOR THIS LINE           */ 00496000
@RC00224 L     @14,ABDPLPTR(,PLISTPTR)                          02S0255 00497000
         LA    @07,GROUP2                                       02S0255 00498000
         ST    @07,ADPLFMT1(,@14)                               02S0255 00499000
*           CALL AMDPRFMT;          /* FORMAT THE LINE               */ 00500000
         L     @15,FMTADDR(,PLISTPTR)                           02S0256 00501000
         BALR  @14,@15                                          02S0256 00502000
*           RETCODE=4;              /* INDICATES TO PRINT BUFFER AND    00503000
*                                      GET NEXT RECORD               */ 00504000
         LA    RETCODE,4                                        02S0257 00505000
*         END;                                                  02S0258 00506000
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */ 00507000
         B     CE0001@                                          02S0259 00508000
*     END GP2;                      /* END OF SUBCASE                */ 00509000
*                                                               02S0261 00510000
*     /***************************************************************/ 00511000
*     /*                                                             */ 00512000
*     /* THIS ROUTINE WILL PROCESS THE FOLLOWING SVCS:               */ 00513000
*     /* 24,31,53,55,57, 58,69. THE FORMATTING CONSISTS OF THE BASIC */ 00514000
*     /* RECORD + A DDNAME                                           */ 00515000
*     /*                                                             */ 00516000
*     /***************************************************************/ 00517000
*                                                               02S0261 00518000
*GP3:                                                           02S0261 00519000
*     DO;                           /* SUBCASE                       */ 00520000
GP3      DS    0H                                               02S0262 00521000
*       IF TIMESW=0 THEN            /* IS THIS THE FIRST PASS        */ 00522000
         ICM   @14,3,TIMESW                                     02S0262 00523000
         BNZ   @RF00262                                         02S0262 00524000
*         DO;                       /* YES - FORMAT DDNAME           */ 00525000
*           ADPLFMT1=ADDR(LDDNL1);  /* ADDR OF LABEL FOR THIS FIELD  */ 00526000
         L     @14,ABDPLPTR(,PLISTPTR)                          02S0264 00527000
         LA    @07,LDDNL1                                       02S0264 00528000
         ST    @07,ADPLFMT1(,@14)                               02S0264 00529000
*           ADPLFMT2=ADDR(GRP3DDN); /* ADDR OF DDNAME IN RECORD      */ 00530000
         LA    @07,46                                           02S0265 00531000
         AL    @07,DATAPTR(,PLISTPTR)                           02S0265 00532000
         ST    @07,ADPLFMT2(,@14)                               02S0265 00533000
*           R0=ADDR(DDNLN1);        /* ADDR OF PATTERN FOR DDNAME    */ 00534000
         LA    R0,DDNLN1                                        02S0266 00535000
*           CALL AMDPRFMT;          /* FORMAT DDNAME ON FIRST LINE   */ 00536000
         L     @15,FMTADDR(,PLISTPTR)                           02S0267 00537000
         BALR  @14,@15                                          02S0267 00538000
*           RETCODE=0;              /* INDICATES TO PRINT BUFFER AND    00539000
*                                      RETURN FOR SECOND PASS        */ 00540000
         SLR   RETCODE,RETCODE                                  02S0268 00541000
*         END;                                                  02S0269 00542000
*       ELSE                                                    02S0270 00543000
*         RETCODE=4;                /* NO - INDICATES TO PRINT BUFFER   00544000
*                                      AND GET NEXT RECORD           */ 00545000
         B     @RC00262                                         02S0270 00546000
@RF00262 LA    RETCODE,4                                        02S0270 00547000
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */ 00548000
         B     CE0001@                                          02S0271 00549000
*     END GP3;                      /* END OF SUBCASE                */ 00550000
*                                                               02S0273 00551000
*     /***************************************************************/ 00552000
*     /*                                                             */ 00553000
*     /* THIS ROUTINE WILL PROCESS THE FOLLOWING SVCS: 0,54,92,114.  */ 00554000
*     /* THE FORMATTING CONSISTS OF THE BASIC RECORD + A DDNAME + A  */ 00555000
*     /* DCB AND DEB ADDRESS.                                        */ 00556000
*     /*                                                             */ 00557000
*     /***************************************************************/ 00558000
*                                                               02S0273 00559000
*S00:                                                           02S0273 00560000
*     DO;                           /* SUBCASE                       */ 00561000
S00      DS    0H                                               02S0274 00562000
*       IF TIMESW=0 THEN            /* IS THIS THE FIRST PASS        */ 00563000
         ICM   @14,3,TIMESW                                     02S0274 00564000
         BNZ   @RF00274                                         02S0274 00565000
*         DO;                       /* YES - FORMAT DDNAME           */ 00566000
*           ADPLFMT1=ADDR(LDDNL1);  /* ADDR OF LABEL FOR THIS FIELD  */ 00567000
         L     @14,ABDPLPTR(,PLISTPTR)                          02S0276 00568000
         LA    @07,LDDNL1                                       02S0276 00569000
         ST    @07,ADPLFMT1(,@14)                               02S0276 00570000
*           ADPLFMT2=ADDR(RCD0DDN); /* ADDR OF DDNAME IN RECORD      */ 00571000
         LA    @07,46                                           02S0277 00572000
         AL    @07,DATAPTR(,PLISTPTR)                           02S0277 00573000
         ST    @07,ADPLFMT2(,@14)                               02S0277 00574000
*           R0=ADDR(DDNLN1);        /* ADDR OF PATTERN FOR DDNAME    */ 00575000
         LA    R0,DDNLN1                                        02S0278 00576000
*           CALL AMDPRFMT;          /* FORMAT DDNAME ON FIRST LINE   */ 00577000
         L     @15,FMTADDR(,PLISTPTR)                           02S0279 00578000
         BALR  @14,@15                                          02S0279 00579000
*           RETCODE=0;              /* INDICATES TO PRINT BUFFER AND    00580000
*                                      RETURN FOR SECOND PASS        */ 00581000
         SLR   RETCODE,RETCODE                                  02S0280 00582000
*         END;                                                  02S0281 00583000
*       ELSE                                                    02S0282 00584000
*         DO;                       /* NO - FORMAT REGS AND REMAINING   00585000
*                                      FIELDS                        */ 00586000
         B     @RC00274                                         02S0282 00587000
@RF00274 DS    0H                                               02S0283 00588000
*           DYNAMPTN(1:LENGTH(GP4S00))=GP4S00;/* MOVE PATTERNS TO       00589000
*                                      GETMAINED AREA                */ 00590000
         MVC   DYNAMPTN(9),GP4S00                               02S0283 00591000
*           IF RCD0DCB=ASTER4|RCD0DCB=PEES4|RCD0DCB=ESSES4 THEN/* IS    00592000
*                                      FIELD IN ERROR                */ 00593000
         LA    @14,46                                           02S0284 00594000
         AL    @14,DATAPTR(,PLISTPTR)                           02S0284 00595000
         CLC   RCD0DCB(4,@14),ASTER4                            02S0284 00596000
         BE    @RT00284                                         02S0284 00597000
         CLC   RCD0DCB(4,@14),PEES4                             02S0284 00598000
         BE    @RT00284                                         02S0284 00599000
         CLC   RCD0DCB(4,@14),ESSES4                            02S0284 00600000
         BNE   @RF00284                                         02S0284 00601000
@RT00284 DS    0H                                               02S0285 00602000
*             OLDFLG(1)=OLDFLG(1)|CHARFLAG;/* YES - INDICATE DATA IN    00603000
*                                      EBCDIC                        */ 00604000
         SLR   @14,@14                                          02S0285 00605000
         IC    @14,OLDFLG                                       02S0285 00606000
         O     @14,@CF00092                                     02S0285 00607000
         STC   @14,OLDFLG                                       02S0285 00608000
*           IF RCD0DEB=ASTER4|RCD0DEB=PEES4|RCD0DEB=ESSES4 THEN/* IS    00609000
*                                      FIELD IN ERROR                */ 00610000
@RF00284 LA    @14,46                                           02S0286 00611000
         AL    @14,DATAPTR(,PLISTPTR)                           02S0286 00612000
         CLC   RCD0DEB(4,@14),ASTER4                            02S0286 00613000
         BE    @RT00286                                         02S0286 00614000
         CLC   RCD0DEB(4,@14),PEES4                             02S0286 00615000
         BE    @RT00286                                         02S0286 00616000
         CLC   RCD0DEB(4,@14),ESSES4                            02S0286 00617000
         BNE   @RF00286                                         02S0286 00618000
@RT00286 DS    0H                                               02S0287 00619000
*             OLDFLG(2)=OLDFLG(2)|CHARFLAG;/* YES - INDICATE DATA IN    00620000
*                                      EBCDIC                        */ 00621000
         SLR   @14,@14                                          02S0287 00622000
         IC    @14,OLDFLG+4                                     02S0287 00623000
         O     @14,@CF00092                                     02S0287 00624000
         STC   @14,OLDFLG+4                                     02S0287 00625000
*           ADPLFMT1=ADDR(GP4TYP1); /* ADDR OF LABELS FOR THIS LINE  */ 00626000
@RF00286 L     @14,ABDPLPTR(,PLISTPTR)                          02S0288 00627000
         LA    @07,GP4TYP1                                      02S0288 00628000
         ST    @07,ADPLFMT1(,@14)                               02S0288 00629000
*           ADPLFMT2=ADDR(RCD0DCB); /* ADDR OF DATA IN BUFFER        */ 00630000
         L     @07,DATAPTR(,PLISTPTR)                           02S0289 00631000
         LA    @07,RCD0DCB+46(,@07)                             02S0289 00632000
         ST    @07,ADPLFMT2(,@14)                               02S0289 00633000
*           R0=ADDR(DYNAMPTN);      /* ADDR OF PATTERNS FOR THIS LINE*/ 00634000
         LA    R0,DYNAMPTN                                      02S0290 00635000
*           CALL AMDPRFMT;          /* FORMAT LINE                   */ 00636000
         L     @15,FMTADDR(,PLISTPTR)                           02S0291 00637000
         BALR  @14,@15                                          02S0291 00638000
*           RETCODE=4;              /* INDICATES TO PRINT BUFFER AND    00639000
*                                      GET NEXT RECORD               */ 00640000
         LA    RETCODE,4                                        02S0292 00641000
*         END;                                                  02S0293 00642000
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */ 00643000
         B     CE0001@                                          02S0294 00644000
*     END S00;                      /* END OF SUBCASE                */ 00645000
*                                                               02S0296 00646000
*     /***************************************************************/ 00647000
*     /*                                                             */ 00648000
*     /* THIS ROUTINE WILL PROCESS THE FOLLOWING SVCS: 6,7. THE      */ 00649000
*     /* FORMATTING CONSISTS OF THE BASIC RECORD + AN EP/CE NAME + A */ 00650000
*     /* 12 BYTE/8 BYTE PLIST                                        */ 00651000
*     /*                                                             */ 00652000
*     /***************************************************************/ 00653000
*                                                               02S0296 00654000
*S06:                                                           02S0296 00655000
*     DO;                           /* SUBCASE                       */ 00656000
S06      DS    0H                                               02S0297 00657000
*       IF TIMESW=0 THEN            /* HAS SECOND LINE BEEN FORMATTED*/ 00658000
         SLR   @14,@14                                          02S0297 00659000
         CH    @14,TIMESW                                       02S0297 00660000
         BNE   @RF00297                                         02S0297 00661000
*         RETCODE=0;                /* NO - INDICATES TO PRINT BUFFER   00662000
*                                      AND RETURN FOR SECOND PASS    */ 00663000
         LR    RETCODE,@14                                      02S0298 00664000
*       ELSE                                                    02S0299 00665000
*         DO;                       /* YES - CHECK FIELDS FOR ERRORS    00666000
*                                      & FORMAT THEM                 */ 00667000
         B     @RC00297                                         02S0299 00668000
@RF00297 DS    0H                                               02S0300 00669000
*           DYNAMPTN(1:LENGTH(GP4S06))=GP4S06;/* MOVE PATTERNS TO       00670000
*                                      GETMAINED AREA                */ 00671000
         MVC   DYNAMPTN(17),GP4S06                              02S0300 00672000
*           IF RCD6LST=ASTER8|RCD6LST=PEES8|RCD6LST=ESSES8 THEN/* IS    00673000
*                                      FIELD IN ERROR                */ 00674000
         LA    @14,46                                           02S0301 00675000
         AL    @14,DATAPTR(,PLISTPTR)                           02S0301 00676000
         CLC   RCD6LST(8,@14),ASTER8                            02S0301 00677000
         BE    @RT00301                                         02S0301 00678000
         CLC   RCD6LST(8,@14),PEES8                             02S0301 00679000
         BE    @RT00301                                         02S0301 00680000
         CLC   RCD6LST(8,@14),ESSES8                            02S0301 00681000
         BNE   @RF00301                                         02S0301 00682000
@RT00301 DS    0H                                               02S0302 00683000
*             DO;                   /* YES                           */ 00684000
*               OLDFLG(2)=OLDFLG(2)|CHARFLAG;/* INDICATE DATA IN        00685000
*                                      EBCDIC                        */ 00686000
         LA    @14,32                                           02S0303 00687000
         SLR   @05,@05                                          02S0303 00688000
         IC    @05,OLDFLG+4                                     02S0303 00689000
         OR    @05,@14                                          02S0303 00690000
         STC   @05,OLDFLG+4                                     02S0303 00691000
*               OLDFLG(3)=OLDFLG(3)|CHARFLAG;                   02S0304 00692000
         SLR   @05,@05                                          02S0304 00693000
         IC    @05,OLDFLG+8                                     02S0304 00694000
         OR    @05,@14                                          02S0304 00695000
         STC   @05,OLDFLG+8                                     02S0304 00696000
*               OLDFLG(4)=OLDFLG(4)|CHARFLAG;                   02S0305 00697000
         SLR   @05,@05                                          02S0305 00698000
         IC    @05,OLDFLG+12                                    02S0305 00699000
         OR    @14,@05                                          02S0305 00700000
         STC   @14,OLDFLG+12                                    02S0305 00701000
*             END;                                              02S0306 00702000
*           IF SVCNUMBR=8 THEN      /* IS THIS SVC 7                 */ 00703000
@RF00301 CH    SVCNUMBR,@CH00034                                02S0307 00704000
         BNE   @RF00307                                         02S0307 00705000
*             OLDFLG(4)=0;          /* YES - INDICATE END OF PATTERNS*/ 00706000
         MVI   OLDFLG+12,X'00'                                  02S0308 00707000
*           ADPLFMT1=ADDR(GP4TYP3); /* ADDR OF LABELS FOR THIS LINE  */ 00708000
@RF00307 L     @14,ABDPLPTR(,PLISTPTR)                          02S0309 00709000
         LA    @07,GP4TYP3                                      02S0309 00710000
         ST    @07,ADPLFMT1(,@14)                               02S0309 00711000
*           ADPLFMT2=ADDR(EPDENM1); /* ADDR OF DATA IN BUFFER        */ 00712000
         LA    @07,46                                           02S0310 00713000
         AL    @07,DATAPTR(,PLISTPTR)                           02S0310 00714000
         ST    @07,ADPLFMT2(,@14)                               02S0310 00715000
*           R0=ADDR(DYNAMPTN);      /* ADDR OF PATTERNS              */ 00716000
         LA    R0,DYNAMPTN                                      02S0311 00717000
*           CALL AMDPRFMT;          /* FORMAT THE LINE               */ 00718000
         L     @15,FMTADDR(,PLISTPTR)                           02S0312 00719000
         BALR  @14,@15                                          02S0312 00720000
*           RETCODE=4;              /* INDICATES TO PRINT BUFFER AND    00721000
*                                      GET NEXT RECORD               */ 00722000
         LA    RETCODE,4                                        02S0313 00723000
*         END;                                                  02S0314 00724000
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */ 00725000
         B     CE0001@                                          02S0315 00726000
*     END S06;                      /* END OF SUBCASE                */ 00727000
*                                                               02S0317 00728000
*     /***************************************************************/ 00729000
*     /*                                                             */ 00730000
*     /* THIS ROUTINE WILL PROCESS THE FOLLOWING SVCS: 8,9,41. THE   */ 00731000
*     /* FORMATTING CONSISTS OF THE BASIC RECORD + AN EP/CE          */ 00732000
*     /* NAME/NAME.                                                  */ 00733000
*     /*                                                             */ 00734000
*     /***************************************************************/ 00735000
*                                                               02S0317 00736000
*S08:                                                           02S0317 00737000
*     DO;                           /* SUBCASE                       */ 00738000
S08      DS    0H                                               02S0318 00739000
*       IF TIMESW=0 THEN            /* HAS SECOND LINE BEEN FORMATTED*/ 00740000
         SLR   @14,@14                                          02S0318 00741000
         CH    @14,TIMESW                                       02S0318 00742000
         BNE   @RF00318                                         02S0318 00743000
*         RETCODE=0;                /* NO - INDICATES TO PRINT BUFFER   00744000
*                                      AND RETURN FOR SECOND PASS    */ 00745000
         LR    RETCODE,@14                                      02S0319 00746000
*       ELSE                                                    02S0320 00747000
*         DO;                       /* YES - FORMAT REMAINING FIELD  */ 00748000
         B     @RC00318                                         02S0320 00749000
@RF00318 DS    0H                                               02S0321 00750000
*           IF SVCNUMBR=42 THEN     /* IS THIS SVC 41                */ 00751000
         CH    SVCNUMBR,@CH00563                                02S0321 00752000
         BNE   @RF00321                                         02S0321 00753000
*             DO;                   /* YES                           */ 00754000
*               DYNAMPTN(1:LENGTH(GP4S41))=GP4S41;/* MOVE PATTERNS TO   00755000
*                                      GETMAINED AREA                */ 00756000
         MVC   DYNAMPTN(5),GP4S41                               02S0323 00757000
*               ADPLFMT1=ADDR(GP4TYP15);/* ADDR OF LABELS FOR THIS      00758000
*                                      LINE                          */ 00759000
         L     @14,ABDPLPTR(,PLISTPTR)                          02S0324 00760000
         LA    @07,GP4TYP15                                     02S0324 00761000
         ST    @07,ADPLFMT1(,@14)                               02S0324 00762000
*             END;                                              02S0325 00763000
*           ELSE                                                02S0326 00764000
*             DO;                   /* NO - ITS SVC 8 OR 9           */ 00765000
         B     @RC00321                                         02S0326 00766000
@RF00321 DS    0H                                               02S0327 00767000
*               DYNAMPTN(1:LENGTH(GP4S08))=GP4S08;/* MOVE PATTERNS TO   00768000
*                                      GETMAINED AREA                */ 00769000
         MVC   DYNAMPTN(5),GP4S08                               02S0327 00770000
*               ADPLFMT1=ADDR(GP4TYP3);/* ADDR OF LABELS FOR THIS       00771000
*                                      LINE                          */ 00772000
         L     @14,ABDPLPTR(,PLISTPTR)                          02S0328 00773000
         LA    @07,GP4TYP3                                      02S0328 00774000
         ST    @07,ADPLFMT1(,@14)                               02S0328 00775000
*             END;                                              02S0329 00776000
*           ADPLFMT2=ADDR(EPDENM2); /* ADDR OF DATA IN BUFFER        */ 00777000
@RC00321 L     @14,ABDPLPTR(,PLISTPTR)                          02S0330 00778000
         LA    @07,46                                           02S0330 00779000
         AL    @07,DATAPTR(,PLISTPTR)                           02S0330 00780000
         ST    @07,ADPLFMT2(,@14)                               02S0330 00781000
*           R0=ADDR(DYNAMPTN);      /* ADDR OF PATTERNS              */ 00782000
         LA    R0,DYNAMPTN                                      02S0331 00783000
*           CALL AMDPRFMT;          /* FORMAT THE LINE               */ 00784000
         L     @15,FMTADDR(,PLISTPTR)                           02S0332 00785000
         BALR  @14,@15                                          02S0332 00786000
*           RETCODE=4;              /* INDICATES TO PRINT BUFFER AND    00787000
*                                      GET NEXT RECORD               */ 00788000
         LA    RETCODE,4                                        02S0333 00789000
*         END;                                                  02S0334 00790000
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */ 00791000
         B     CE0001@                                          02S0335 00792000
*     END S08;                      /* END OF SUBCASE                */ 00793000
*                                                               02S0337 00794000
*     /***************************************************************/ 00795000
*     /*                                                             */ 00796000
*     /* THIS ROUTINE WILL PROCESS THE FOLLOWING SVCS: 13,28,68. THE */ 00797000
*     /* FORMATTING CONSISTS OF THE BASIC RECORD + A COMP            */ 00798000
*     /* CODE/REGISTER 13.                                           */ 00799000
*     /*                                                             */ 00800000
*     /***************************************************************/ 00801000
*                                                               02S0337 00802000
*S13:                                                           02S0337 00803000
*     DO;                           /* SUBCASE                       */ 00804000
S13      DS    0H                                               02S0338 00805000
*       IF TIMESW=0 THEN            /* HAS SECOND LINE BEEN FORMATTED*/ 00806000
         SLR   @14,@14                                          02S0338 00807000
         CH    @14,TIMESW                                       02S0338 00808000
         BNE   @RF00338                                         02S0338 00809000
*         RETCODE=0;                /* NO - INDICATES TO PRINT BUFFER   00810000
*                                      AND RETURN FOR SECOND PASS    */ 00811000
         LR    RETCODE,@14                                      02S0339 00812000
*       ELSE                                                    02S0340 00813000
*         DO;                       /* YES - CHECK FIELDS FOR ERRORS    00814000
*                                      & FORMAT THEM                 */ 00815000
         B     @RC00338                                         02S0340 00816000
@RF00338 DS    0H                                               02S0341 00817000
*           IF SVCNUMBR=14 THEN     /* IS THIS SVC 13                */ 00818000
         CH    SVCNUMBR,@CH00434                                02S0341 00819000
         BNE   @RF00341                                         02S0341 00820000
*             DO;                   /* YES                           */ 00821000
*               DYNAMPTN(1:LENGTH(GP4S13))=GP4S13;/* MOVE PATTERNS TO   00822000
*                                      GETMAINED AREA                */ 00823000
         MVC   DYNAMPTN(5),GP4S13                               02S0343 00824000
*               ADPLFMT1=ADDR(GP4TYP4);/* ADDR OF LABELS FOR THIS       00825000
*                                      LINE                          */ 00826000
         L     @14,ABDPLPTR(,PLISTPTR)                          02S0344 00827000
         LA    @07,GP4TYP4                                      02S0344 00828000
         ST    @07,ADPLFMT1(,@14)                               02S0344 00829000
*             END;                                              02S0345 00830000
*           ELSE                                                02S0346 00831000
*             DO;                   /* NO - ITS SVC 28 OR 68         */ 00832000
         B     @RC00341                                         02S0346 00833000
@RF00341 DS    0H                                               02S0347 00834000
*               DYNAMPTN(1:LENGTH(GP4S28))=GP4S28;/* MOVE PATTERNS TO   00835000
*                                      GETMAINED AREA                */ 00836000
         MVC   DYNAMPTN(5),GP4S28                               02S0347 00837000
*               ADPLFMT1=ADDR(GP4TYP11);/* ADDR OF LABELS FOR THIS      00838000
*                                      LINE                          */ 00839000
         L     @14,ABDPLPTR(,PLISTPTR)                          02S0348 00840000
         LA    @07,GP4TYP11                                     02S0348 00841000
         ST    @07,ADPLFMT1(,@14)                               02S0348 00842000
*             END;                                              02S0349 00843000
*           IF COMPCODE=ASTER4|COMPCODE=PEES4|COMPCODE=ESSES4 THEN/*    00844000
*                                      IS FIELD IN ERROR             */ 00845000
@RC00341 LA    @14,46                                           02S0350 00846000
         AL    @14,DATAPTR(,PLISTPTR)                           02S0350 00847000
         CLC   COMPCODE(4,@14),ASTER4                           02S0350 00848000
         BE    @RT00350                                         02S0350 00849000
         CLC   COMPCODE(4,@14),PEES4                            02S0350 00850000
         BE    @RT00350                                         02S0350 00851000
         CLC   COMPCODE(4,@14),ESSES4                           02S0350 00852000
         BNE   @RF00350                                         02S0350 00853000
@RT00350 DS    0H                                               02S0351 00854000
*             OLDFLG(1)=OLDFLG(1)|CHARFLAG;/* INDICATE DATA IN EBCDIC*/ 00855000
         SLR   @14,@14                                          02S0351 00856000
         IC    @14,OLDFLG                                       02S0351 00857000
         O     @14,@CF00092                                     02S0351 00858000
         STC   @14,OLDFLG                                       02S0351 00859000
*           ADPLFMT2=ADDR(COMPCODE);/* ADDR OF DATA IN BUFFER        */ 00860000
@RF00350 L     @14,ABDPLPTR(,PLISTPTR)                          02S0352 00861000
         LA    @07,46                                           02S0352 00862000
         AL    @07,DATAPTR(,PLISTPTR)                           02S0352 00863000
         ST    @07,ADPLFMT2(,@14)                               02S0352 00864000
*           R0=ADDR(DYNAMPTN);      /* ADDR OF PATTERNS              */ 00865000
         LA    R0,DYNAMPTN                                      02S0353 00866000
*           CALL AMDPRFMT;          /* FORMAT THE LINE               */ 00867000
         L     @15,FMTADDR(,PLISTPTR)                           02S0354 00868000
         BALR  @14,@15                                          02S0354 00869000
*           RETCODE=4;              /* INDICATES TO PRINT BUFFER AND    00870000
*                                      GET NEXT RECORD               */ 00871000
         LA    RETCODE,4                                        02S0355 00872000
*         END;                                                  02S0356 00873000
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */ 00874000
         B     CE0001@                                          02S0357 00875000
*     END S13;                      /* END OF SUBCASE                */ 00876000
*                                                               02S0359 00877000
*     /***************************************************************/ 00878000
*     /*                                                             */ 00879000
*     /* THIS ROUTINE WILL PROCESS SVC 14. THE FORMATTING CONSISTS OF*/ 00880000
*     /* THE BASIC RECORD + A PICA.                                  */ 00881000
*     /*                                                             */ 00882000
*     /***************************************************************/ 00883000
*                                                               02S0359 00884000
*S14:                                                           02S0359 00885000
*     DO;                           /* SUBCASE                       */ 00886000
S14      DS    0H                                               02S0360 00887000
*       IF TIMESW=0 THEN            /* HAS SECOND LINE BEEN FORMATTED*/ 00888000
         SLR   @14,@14                                          02S0360 00889000
         CH    @14,TIMESW                                       02S0360 00890000
         BNE   @RF00360                                         02S0360 00891000
*         RETCODE=0;                /* NO - INDICATES TO PRINT BUFFER   00892000
*                                      AND RETURN FOR SECOND PASS    */ 00893000
         LR    RETCODE,@14                                      02S0361 00894000
*       ELSE                                                    02S0362 00895000
*         DO;                       /* YES - CHECK FIELDS FOR ERRORS    00896000
*                                      & FORMAT THEM                 */ 00897000
         B     @RC00360                                         02S0362 00898000
@RF00360 DS    0H                                               02S0363 00899000
*           DYNAMPTN(1:LENGTH(GP4S14))=GP4S14;/* MOVE PATTERNS TO       00900000
*                                      GETMAINED AREA                */ 00901000
         MVC   DYNAMPTN(5),GP4S14                               02S0363 00902000
*           IF PICA=ASTER6|PICA=PEES6|PICA=ESSES6 THEN/* IS FIELD IN    00903000
*                                      ERROR                         */ 00904000
         LA    @14,46                                           02S0364 00905000
         AL    @14,DATAPTR(,PLISTPTR)                           02S0364 00906000
         CLC   PICA(6,@14),ASTER6                               02S0364 00907000
         BE    @RT00364                                         02S0364 00908000
         CLC   PICA(6,@14),PEES6                                02S0364 00909000
         BE    @RT00364                                         02S0364 00910000
         CLC   PICA(6,@14),ESSES6                               02S0364 00911000
         BNE   @RF00364                                         02S0364 00912000
@RT00364 DS    0H                                               02S0365 00913000
*             OLDFLG(1)=OLDFLG(1)|CHARFLAG;/* YES - INDICATE DATA IN    00914000
*                                      EBCDIC                        */ 00915000
         SLR   @14,@14                                          02S0365 00916000
         IC    @14,OLDFLG                                       02S0365 00917000
         O     @14,@CF00092                                     02S0365 00918000
         STC   @14,OLDFLG                                       02S0365 00919000
*           ADPLFMT1=ADDR(GP4TYP5); /* ADDR OF LABELS FOR THIS LINE  */ 00920000
@RF00364 L     @14,ABDPLPTR(,PLISTPTR)                          02S0366 00921000
         LA    @07,GP4TYP5                                      02S0366 00922000
         ST    @07,ADPLFMT1(,@14)                               02S0366 00923000
*           ADPLFMT2=ADDR(PICA);    /* ADDR OF DATA IN BUFFER        */ 00924000
         LA    @07,46                                           02S0367 00925000
         AL    @07,DATAPTR(,PLISTPTR)                           02S0367 00926000
         ST    @07,ADPLFMT2(,@14)                               02S0367 00927000
*           R0=ADDR(DYNAMPTN);      /* ADDR OF PATTERNS              */ 00928000
         LA    R0,DYNAMPTN                                      02S0368 00929000
*           CALL AMDPRFMT;          /* FORMAT THE LINE               */ 00930000
         L     @15,FMTADDR(,PLISTPTR)                           02S0369 00931000
         BALR  @14,@15                                          02S0369 00932000
*           RETCODE=4;              /* INDICATES TO PRINT BUFFER AND    00933000
*                                      GET NEXT RECORD               */ 00934000
         LA    RETCODE,4                                        02S0370 00935000
*         END;                                                  02S0371 00936000
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */ 00937000
         B     CE0001@                                          02S0372 00938000
*     END S14;                      /* END OF SUBCASE                */ 00939000
*                                                               02S0374 00940000
*     /***************************************************************/ 00941000
*     /*                                                             */ 00942000
*     /* THIS ROUTINE WILL PROCESS SVC 15. THE FORMATTING CONSISTS OF*/ 00943000
*     /* THE BASIC RECORD + A DDNAME + ERROR FLAGS + A TCB ADDR + A  */ 00944000
*     /* CUU.                                                        */ 00945000
*     /*                                                             */ 00946000
*     /***************************************************************/ 00947000
*                                                               02S0374 00948000
*S15:                                                           02S0374 00949000
*     DO;                           /* SUBCASE                       */ 00950000
S15      DS    0H                                               02S0375 00951000
*       IF TIMESW=0 THEN            /* IS THIS THE FIRST PASS        */ 00952000
         ICM   @14,3,TIMESW                                     02S0375 00953000
         BNZ   @RF00375                                         02S0375 00954000
*         DO;                       /* YES - FORMAT DDNAME           */ 00955000
*           ADPLFMT1=ADDR(LDDNL1);  /* ADDR OF LABEL FOR THIS FIELD  */ 00956000
         L     @14,ABDPLPTR(,PLISTPTR)                          02S0377 00957000
         LA    @07,LDDNL1                                       02S0377 00958000
         ST    @07,ADPLFMT1(,@14)                               02S0377 00959000
*           ADPLFMT2=ADDR(RCD15DDN);/* ADDR OF DDNAME IN RECORD      */ 00960000
         LA    @07,46                                           02S0378 00961000
         AL    @07,DATAPTR(,PLISTPTR)                           02S0378 00962000
         ST    @07,ADPLFMT2(,@14)                               02S0378 00963000
*           R0=ADDR(DDNLN1);        /* ADDR OF PATTERN FOR DDNAME    */ 00964000
         LA    R0,DDNLN1                                        02S0379 00965000
*           CALL AMDPRFMT;          /* FORMAT DDNAME ON FIRST LINE   */ 00966000
         L     @15,FMTADDR(,PLISTPTR)                           02S0380 00967000
         BALR  @14,@15                                          02S0380 00968000
*           RETCODE=0;              /* INDICATES TO PRINT BUFFER AND    00969000
*                                      RETURN FOR SECOND PASS        */ 00970000
         SLR   RETCODE,RETCODE                                  02S0381 00971000
*         END;                                                  02S0382 00972000
*       ELSE                                                    02S0383 00973000
*         DO;                       /* NO - FORMAT REGS AND REMAINING   00974000
*                                      FIELDS                        */ 00975000
         B     @RC00375                                         02S0383 00976000
@RF00375 DS    0H                                               02S0384 00977000
*           DYNAMPTN(1:LENGTH(GP4S15))=GP4S15;/* MOVE PATTERNS TO       00978000
*                                      GETMAINED AREA                */ 00979000
         MVC   DYNAMPTN(13),GP4S15                              02S0384 00980000
*           IF ERRFLGS=ASTER1|ERRFLGS=PEES1|ERRFLGS=ESSES1 THEN/* IS    00981000
*                                      FIELD IN ERROR                */ 00982000
         LA    @14,46                                           02S0385 00983000
         AL    @14,DATAPTR(,PLISTPTR)                           02S0385 00984000
         CLC   ERRFLGS(1,@14),ASTER1                            02S0385 00985000
         BE    @RT00385                                         02S0385 00986000
         CLC   ERRFLGS(1,@14),PEES1                             02S0385 00987000
         BE    @RT00385                                         02S0385 00988000
         CLC   ERRFLGS(1,@14),ESSES1                            02S0385 00989000
         BNE   @RF00385                                         02S0385 00990000
@RT00385 DS    0H                                               02S0386 00991000
*             OLDFLG(1)=OLDFLG(1)|CHARFLAG;/* YES - INDICATE DATA IN    00992000
*                                      EBCDIC                        */ 00993000
         SLR   @14,@14                                          02S0386 00994000
         IC    @14,OLDFLG                                       02S0386 00995000
         O     @14,@CF00092                                     02S0386 00996000
         STC   @14,OLDFLG                                       02S0386 00997000
*           IF RCD15TCB=ASTER4|RCD15TCB=PEES4|RCD15TCB=ESSES4 THEN/*    00998000
*                                      IS FIELD IN ERROR             */ 00999000
@RF00385 LA    @14,46                                           02S0387 01000000
         AL    @14,DATAPTR(,PLISTPTR)                           02S0387 01001000
         CLC   RCD15TCB(4,@14),ASTER4                           02S0387 01002000
         BE    @RT00387                                         02S0387 01003000
         CLC   RCD15TCB(4,@14),PEES4                            02S0387 01004000
         BE    @RT00387                                         02S0387 01005000
         CLC   RCD15TCB(4,@14),ESSES4                           02S0387 01006000
         BNE   @RF00387                                         02S0387 01007000
@RT00387 DS    0H                                               02S0388 01008000
*             OLDFLG(2)=OLDFLG(2)|CHARFLAG;/* YES - INDICATE DATA IN    01009000
*                                      EBCDIC                        */ 01010000
         SLR   @14,@14                                          02S0388 01011000
         IC    @14,OLDFLG+4                                     02S0388 01012000
         O     @14,@CF00092                                     02S0388 01013000
         STC   @14,OLDFLG+4                                     02S0388 01014000
*           IF RCD15CUU=ASTER2|RCD15CUU=PEES2|RCD15CUU=ESSES2 THEN/*    01015000
*                                      IS FIELD IN ERROR             */ 01016000
@RF00387 LA    @14,46                                           02S0389 01017000
         AL    @14,DATAPTR(,PLISTPTR)                           02S0389 01018000
         CLC   RCD15CUU(2,@14),ASTER2                           02S0389 01019000
         BE    @RT00389                                         02S0389 01020000
         CLC   RCD15CUU(2,@14),PEES2                            02S0389 01021000
         BE    @RT00389                                         02S0389 01022000
         CLC   RCD15CUU(2,@14),ESSES2                           02S0389 01023000
         BNE   @RF00389                                         02S0389 01024000
@RT00389 DS    0H                                               02S0390 01025000
*             OLDFLG(3)=OLDFLG(3)|CHARFLAG;/* YES - INDICATE DATA IN    01026000
*                                      EBCDIC                        */ 01027000
         SLR   @14,@14                                          02S0390 01028000
         IC    @14,OLDFLG+8                                     02S0390 01029000
         O     @14,@CF00092                                     02S0390 01030000
         STC   @14,OLDFLG+8                                     02S0390 01031000
*           ADPLFMT1=ADDR(GP4TYP6); /* ADDR OF LABELS FOR THIS LINE  */ 01032000
@RF00389 L     @14,ABDPLPTR(,PLISTPTR)                          02S0391 01033000
         LA    @07,GP4TYP6                                      02S0391 01034000
         ST    @07,ADPLFMT1(,@14)                               02S0391 01035000
*           ADPLFMT2=ADDR(ERRFLGS); /* ADDR OF DATA IN BUFFER        */ 01036000
         L     @07,DATAPTR(,PLISTPTR)                           02S0392 01037000
         LA    @07,ERRFLGS+46(,@07)                             02S0392 01038000
         ST    @07,ADPLFMT2(,@14)                               02S0392 01039000
*           R0=ADDR(DYNAMPTN);      /* ADDR OF PATTERNS FOR THIS LINE*/ 01040000
         LA    R0,DYNAMPTN                                      02S0393 01041000
*           CALL AMDPRFMT;          /* FORMAT LINE                   */ 01042000
         L     @15,FMTADDR(,PLISTPTR)                           02S0394 01043000
         BALR  @14,@15                                          02S0394 01044000
*           RETCODE=4;              /* INDICATES TO PRINT BUFFER AND    01045000
*                                      GET NEXT RECORD               */ 01046000
         LA    RETCODE,4                                        02S0395 01047000
*         END;                                                  02S0396 01048000
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */ 01049000
         B     CE0001@                                          02S0397 01050000
*     END S15;                      /* END OF SUBCASE                */ 01051000
*                                                               02S0399 01052000
*     /***************************************************************/ 01053000
*     /*                                                             */ 01054000
*     /* THIS ROUTINE WILL PROCESS SVC 16. THE FORMATTING CONSISTS OF*/ 01055000
*     /* THE BASIC RECORD + A DDANME + A DCB ADDR + A 12 BYTE PLIST. */ 01056000
*     /*                                                             */ 01057000
*     /***************************************************************/ 01058000
*                                                               02S0399 01059000
*S16:                                                           02S0399 01060000
*     DO;                           /* SUBCASE                       */ 01061000
S16      DS    0H                                               02S0400 01062000
*       IF TIMESW=0 THEN            /* IS THIS THE FIRST PASS        */ 01063000
         ICM   @14,3,TIMESW                                     02S0400 01064000
         BNZ   @RF00400                                         02S0400 01065000
*         DO;                       /* YES - FORMAT DDNAME           */ 01066000
*           ADPLFMT1=ADDR(LDDNL1);  /* ADDR OF LABEL FOR THIS FIELD  */ 01067000
         L     @14,ABDPLPTR(,PLISTPTR)                          02S0402 01068000
         LA    @07,LDDNL1                                       02S0402 01069000
         ST    @07,ADPLFMT1(,@14)                               02S0402 01070000
*           ADPLFMT2=ADDR(RCD16DDN);/* ADDR OF DDNAME IN RECORD      */ 01071000
         LA    @07,46                                           02S0403 01072000
         AL    @07,DATAPTR(,PLISTPTR)                           02S0403 01073000
         ST    @07,ADPLFMT2(,@14)                               02S0403 01074000
*           R0=ADDR(DDNLN1);        /* ADDR OF PATTERN FOR DDNAME    */ 01075000
         LA    R0,DDNLN1                                        02S0404 01076000
*           CALL AMDPRFMT;          /* FORMAT DDNAME ON FIRST LINE   */ 01077000
         L     @15,FMTADDR(,PLISTPTR)                           02S0405 01078000
         BALR  @14,@15                                          02S0405 01079000
*           RETCODE=0;              /* INDICATES TO PRINT BUFFER AND    01080000
*                                      RETURN FOR SECOND PASS        */ 01081000
         SLR   RETCODE,RETCODE                                  02S0406 01082000
*         END;                                                  02S0407 01083000
*       ELSE                                                    02S0408 01084000
*         DO;                       /* NO - FORMAT REGS AND REMAINING   01085000
*                                      FIELDS                        */ 01086000
         B     @RC00400                                         02S0408 01087000
@RF00400 DS    0H                                               02S0409 01088000
*           DYNAMPTN(1:LENGTH(GP4S16))=GP4S16;/* MOVE PATTERNS TO       01089000
*                                      GETMAINED AREA                */ 01090000
         MVC   DYNAMPTN(17),GP4S16                              02S0409 01091000
*           IF RCD16DCB=ASTER4|RCD16DCB=PEES4|/*             @YM04524*/ 01092000
*               RCD16DCB=ESSES4|RCD16DCB=UA THEN/*           @YM04524   01093000
*                                      IS FIELD IN ERROR     @YM04524*/ 01094000
         LA    @14,46                                           02S0410 01095000
         AL    @14,DATAPTR(,PLISTPTR)                           02S0410 01096000
         CLC   RCD16DCB(4,@14),ASTER4                           02S0410 01097000
         BE    @RT00410                                         02S0410 01098000
         CLC   RCD16DCB(4,@14),PEES4                            02S0410 01099000
         BE    @RT00410                                         02S0410 01100000
         CLC   RCD16DCB(4,@14),ESSES4                           02S0410 01101000
         BE    @RT00410                                         02S0410 01102000
         CLC   RCD16DCB(4,@14),UA                               02S0410 01103000
         BNE   @RF00410                                         02S0410 01104000
@RT00410 DS    0H                                               02S0411 01105000
*             OLDFLG(1)=OLDFLG(1)|CHARFLAG;/* YES - INDICATE DATA IN    01106000
*                                      EBCDIC                        */ 01107000
         SLR   @14,@14                                          02S0411 01108000
         IC    @14,OLDFLG                                       02S0411 01109000
         O     @14,@CF00092                                     02S0411 01110000
         STC   @14,OLDFLG                                       02S0411 01111000
*           IF PPL=ASTER12|PPL=PEES12|PPL=ESSES12 THEN/* IS FIELD IN    01112000
*                                      ERROR                         */ 01113000
@RF00410 LA    @14,46                                           02S0412 01114000
         AL    @14,DATAPTR(,PLISTPTR)                           02S0412 01115000
         CLC   PPL(12,@14),ASTER12                              02S0412 01116000
         BE    @RT00412                                         02S0412 01117000
         CLC   PPL(12,@14),PEES12                               02S0412 01118000
         BE    @RT00412                                         02S0412 01119000
         CLC   PPL(12,@14),ESSES12                              02S0412 01120000
         BNE   @RF00412                                         02S0412 01121000
@RT00412 DS    0H                                               02S0413 01122000
*             DO;                   /* YES                           */ 01123000
*               OLDFLG(2)=OLDFLG(2)|CHARFLAG;/* INDICATE DATA IN        01124000
*                                      EBCDIC                        */ 01125000
         LA    @14,32                                           02S0414 01126000
         SLR   @07,@07                                          02S0414 01127000
         IC    @07,OLDFLG+4                                     02S0414 01128000
         OR    @07,@14                                          02S0414 01129000
         STC   @07,OLDFLG+4                                     02S0414 01130000
*               OLDFLG(3)=OLDFLG(3)|CHARFLAG;                   02S0415 01131000
         SLR   @07,@07                                          02S0415 01132000
         IC    @07,OLDFLG+8                                     02S0415 01133000
         OR    @07,@14                                          02S0415 01134000
         STC   @07,OLDFLG+8                                     02S0415 01135000
*               OLDFLG(4)=OLDFLG(4)|CHARFLAG;                   02S0416 01136000
         SLR   @07,@07                                          02S0416 01137000
         IC    @07,OLDFLG+12                                    02S0416 01138000
         OR    @14,@07                                          02S0416 01139000
         STC   @14,OLDFLG+12                                    02S0416 01140000
*             END;                                              02S0417 01141000
*           ADPLFMT1=ADDR(GP4TYP7); /* ADDR OF LABELS FOR THIS LINE  */ 01142000
@RF00412 L     @14,ABDPLPTR(,PLISTPTR)                          02S0418 01143000
         LA    @07,GP4TYP7                                      02S0418 01144000
         ST    @07,ADPLFMT1(,@14)                               02S0418 01145000
*           ADPLFMT2=ADDR(RCD16DCB);/* ADDR OF DATA IN BUFFER        */ 01146000
         L     @07,DATAPTR(,PLISTPTR)                           02S0419 01147000
         LA    @07,RCD16DCB+46(,@07)                            02S0419 01148000
         ST    @07,ADPLFMT2(,@14)                               02S0419 01149000
*           R0=ADDR(DYNAMPTN);      /* ADDR OF PATTERNS FOR THIS LINE*/ 01150000
         LA    R0,DYNAMPTN                                      02S0420 01151000
*           CALL AMDPRFMT;          /* FORMAT LINE                   */ 01152000
         L     @15,FMTADDR(,PLISTPTR)                           02S0421 01153000
         BALR  @14,@15                                          02S0421 01154000
*           RETCODE=4;              /* INDICATES TO PRINT BUFFER AND    01155000
*                                      GET NEXT RECORD               */ 01156000
         LA    RETCODE,4                                        02S0422 01157000
*         END;                                                  02S0423 01158000
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */ 01159000
         B     CE0001@                                          02S0424 01160000
*     END S16;                      /* END OF SUBCASE                */ 01161000
*                                                               02S0426 01162000
*     /***************************************************************/ 01163000
*     /*                                                             */ 01164000
*     /* THIS ROUTINE WILL PROCESS SVC 21. THE FORMATTING CONSISTS OF*/ 01165000
*     /* THE BASIC RECORD + A DDNAME + A VARIABLE LENGTH PLIST.      */ 01166000
*     /*                                                             */ 01167000
*     /***************************************************************/ 01168000
*                                                               02S0426 01169000
*S21:                                                           02S0426 01170000
*     DO;                           /* SUBCASE                       */ 01171000
S21      DS    0H                                               02S0427 01172000
*       IF TIMESW=0 THEN            /* IS THIS THE FIRST PASS        */ 01173000
         ICM   @14,3,TIMESW                                     02S0427 01174000
         BNZ   @RF00427                                         02S0427 01175000
*         DO;                       /* YES - FORMAT DDNAME           */ 01176000
*           ADPLFMT1=ADDR(LDDNL1);  /* ADDR OF LABEL FOR THIS FIELD  */ 01177000
         L     @14,ABDPLPTR(,PLISTPTR)                          02S0429 01178000
         LA    @07,LDDNL1                                       02S0429 01179000
         ST    @07,ADPLFMT1(,@14)                               02S0429 01180000
*           ADPLFMT2=ADDR(RCD21DDN);/* ADDR OF DDNAME IN RECORD      */ 01181000
         LA    @07,46                                           02S0430 01182000
         AL    @07,DATAPTR(,PLISTPTR)                           02S0430 01183000
         ST    @07,ADPLFMT2(,@14)                               02S0430 01184000
*           R0=ADDR(DDNLN1);        /* ADDR OF PATTERN FOR DDNAME    */ 01185000
         LA    R0,DDNLN1                                        02S0431 01186000
*           CALL AMDPRFMT;          /* FORMAT DDNAME ON FIRST LINE   */ 01187000
         L     @15,FMTADDR(,PLISTPTR)                           02S0432 01188000
         BALR  @14,@15                                          02S0432 01189000
*           RETCODE=0;              /* INDICATES TO PRINT BUFFER AND    01190000
*                                      RETURN FOR SECOND PASS        */ 01191000
         SLR   RETCODE,RETCODE                                  02S0433 01192000
*         END;                                                  02S0434 01193000
*       ELSE                                                    02S0435 01194000
*         DO;                       /* NO - FORMAT REGS AND REMAINING   01195000
*                                      FIELDS                        */ 01196000
         B     @RC00427                                         02S0435 01197000
@RF00427 DS    0H                                               02S0436 01198000
*           DYNAMPTN(1:LENGTH(GP4S21))=GP4S21;/* MOVE PATTERNS TO       01199000
*                                      GETMAINED AREA                */ 01200000
         MVC   DYNAMPTN(17),GP4S21                              02S0436 01201000
*           IF RCD21LN=ERROR THEN   /* IS FIELD IN ERROR             */ 01202000
         L     @14,DATAPTR(,PLISTPTR)                           02S0437 01203000
         CLI   RCD21LN+46(@14),255                              02S0437 01204000
         BNE   @RF00437                                         02S0437 01205000
*             DO;                   /* YES                           */ 01206000
*               OLDFLG(1)=OLDFLG(1)|CHARFLAG;/* INDICATE DATA IN        01207000
*                                      EBCDIC                        */ 01208000
         SLR   @14,@14                                          02S0439 01209000
         IC    @14,OLDFLG                                       02S0439 01210000
         O     @14,@CF00092                                     02S0439 01211000
         STC   @14,OLDFLG                                       02S0439 01212000
*               OLDFLG(2)=0;        /* INDICATE END OF PATTERNS      */ 01213000
         MVI   OLDFLG+4,X'00'                                   02S0440 01214000
*             END;                                              02S0441 01215000
*           ELSE                                                02S0442 01216000
*             DO;                   /* NO - FORMAT 3 OR 4 WORDS      */ 01217000
         B     @RC00437                                         02S0442 01218000
@RF00437 DS    0H                                               02S0443 01219000
*               IF RCD21LN=12 THEN  /* ARE THERE ONLY THREE WORDS    */ 01220000
         L     @14,DATAPTR(,PLISTPTR)                           02S0443 01221000
         CLI   RCD21LN+46(@14),12                               02S0443 01222000
         BNE   @RF00443                                         02S0443 01223000
*                 OLDFLG(4)=0;      /* YES - INDICATE END OF PATTERNS*/ 01224000
         MVI   OLDFLG+12,X'00'                                  02S0444 01225000
*             END;                                              02S0445 01226000
@RF00443 DS    0H                                               02S0446 01227000
*           ADPLFMT1=ADDR(GROUP2);  /* ADDR OF LABEL FOR THIS LINE   */ 01228000
@RC00437 L     @14,ABDPLPTR(,PLISTPTR)                          02S0446 01229000
         LA    @07,GROUP2                                       02S0446 01230000
         ST    @07,ADPLFMT1(,@14)                               02S0446 01231000
*           ADPLFMT2=ADDR(RCD21LN)+1;/* ADDR OF DATA IN BUFFER       */ 01232000
         L     @07,DATAPTR(,PLISTPTR)                           02S0447 01233000
         LA    @07,RCD21LN+46(,@07)                             02S0447 01234000
         AH    @07,@CH00046                                     02S0447 01235000
         ST    @07,ADPLFMT2(,@14)                               02S0447 01236000
*           R0=ADDR(DYNAMPTN);      /* ADDR OF PATTERNS FOR THIS LINE*/ 01237000
         LA    R0,DYNAMPTN                                      02S0448 01238000
*           CALL AMDPRFMT;          /* FORMAT LINE                   */ 01239000
         L     @15,FMTADDR(,PLISTPTR)                           02S0449 01240000
         BALR  @14,@15                                          02S0449 01241000
*           RETCODE=4;              /* INDICATES TO PRINT BUFFER AND    01242000
*                                      GET NEXT RECORD               */ 01243000
         LA    RETCODE,4                                        02S0450 01244000
*         END;                                                  02S0451 01245000
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */ 01246000
         B     CE0001@                                          02S0452 01247000
*     END S21;                      /* END OF SUBCASE                */ 01248000
*                                                               02S0454 01249000
*     /***************************************************************/ 01250000
*     /*                                                             */ 01251000
*     /* THIS ROUTINE WILL PROCESS SVC 25. THE FORMATTING CONSISTS OF*/ 01252000
*     /* THE BAISC RECORD + A DDNAME + A DCBFDAD + A DCBTRKBAK.      */ 01253000
*     /*                                                             */ 01254000
*     /***************************************************************/ 01255000
*                                                               02S0454 01256000
*S25:                                                           02S0454 01257000
*     DO;                           /* SUBCASE                       */ 01258000
S25      DS    0H                                               02S0455 01259000
*       IF TIMESW=0 THEN            /* IS THIS THE FIRST PASS        */ 01260000
         ICM   @14,3,TIMESW                                     02S0455 01261000
         BNZ   @RF00455                                         02S0455 01262000
*         DO;                       /* YES - FORMAT DDNAME           */ 01263000
*           ADPLFMT1=ADDR(LDDNL1);  /* ADDR OF LABEL FOR THIS FIELD  */ 01264000
         L     @14,ABDPLPTR(,PLISTPTR)                          02S0457 01265000
         LA    @07,LDDNL1                                       02S0457 01266000
         ST    @07,ADPLFMT1(,@14)                               02S0457 01267000
*           ADPLFMT2=ADDR(RCD25DDN);/* ADDR OF DDNAME IN RECORD      */ 01268000
         LA    @07,46                                           02S0458 01269000
         AL    @07,DATAPTR(,PLISTPTR)                           02S0458 01270000
         ST    @07,ADPLFMT2(,@14)                               02S0458 01271000
*           R0=ADDR(DDNLN1);        /* ADDR OF PATTERN FOR DDNAME    */ 01272000
         LA    R0,DDNLN1                                        02S0459 01273000
*           CALL AMDPRFMT;          /* FORMAT DDNAME ON FIRST LINE   */ 01274000
         L     @15,FMTADDR(,PLISTPTR)                           02S0460 01275000
         BALR  @14,@15                                          02S0460 01276000
*           RETCODE=0;              /* INDICATES TO PRINT BUFFER AND    01277000
*                                      RETURN FOR SECOND PASS        */ 01278000
         SLR   RETCODE,RETCODE                                  02S0461 01279000
*         END;                                                  02S0462 01280000
*       ELSE                                                    02S0463 01281000
*         DO;                       /* NO - FORMAT REGS AND REMAINING   01282000
*                                      FIELDS                        */ 01283000
         B     @RC00455                                         02S0463 01284000
@RF00455 DS    0H                                               02S0464 01285000
*           DYNAMPTN(1:LENGTH(GP4S25))=GP4S25;/* MOVE PATTERNS TO       01286000
*                                      GETMAINED AREA                */ 01287000
         MVC   DYNAMPTN(13),GP4S25                              02S0464 01288000
*           IF DCBFDAD=ASTER8|DCBFDAD=PEES8|DCBFDAD=ESSES8 THEN/* IS    01289000
*                                      FIELD IN ERROR                */ 01290000
         LA    @14,46                                           02S0465 01291000
         AL    @14,DATAPTR(,PLISTPTR)                           02S0465 01292000
         CLC   DCBFDAD(8,@14),ASTER8                            02S0465 01293000
         BE    @RT00465                                         02S0465 01294000
         CLC   DCBFDAD(8,@14),PEES8                             02S0465 01295000
         BE    @RT00465                                         02S0465 01296000
         CLC   DCBFDAD(8,@14),ESSES8                            02S0465 01297000
         BNE   @RF00465                                         02S0465 01298000
@RT00465 DS    0H                                               02S0466 01299000
*             DO;                   /* YES                           */ 01300000
*               OLDFLG(1)=OLDFLG(1)|CHARFLAG;/* INDICATE DATA IN        01301000
*                                      EBCDIC                        */ 01302000
         LA    @14,32                                           02S0467 01303000
         SLR   @07,@07                                          02S0467 01304000
         IC    @07,OLDFLG                                       02S0467 01305000
         OR    @07,@14                                          02S0467 01306000
         STC   @07,OLDFLG                                       02S0467 01307000
*               OLDFLG(2)=OLDFLG(2)|CHARFLAG;                   02S0468 01308000
         SLR   @07,@07                                          02S0468 01309000
         IC    @07,OLDFLG+4                                     02S0468 01310000
         OR    @07,@14                                          02S0468 01311000
         STC   @07,OLDFLG+4                                     02S0468 01312000
*               OLDFLG(3)=OLDFLG(3)|CHARFLAG;                   02S0469 01313000
         SLR   @07,@07                                          02S0469 01314000
         IC    @07,OLDFLG+8                                     02S0469 01315000
         OR    @14,@07                                          02S0469 01316000
         STC   @14,OLDFLG+8                                     02S0469 01317000
*             END;                                              02S0470 01318000
*           ADPLFMT1=ADDR(GP4TYP8); /* ADDR OF LABELS FOR THIS LINE  */ 01319000
@RF00465 L     @14,ABDPLPTR(,PLISTPTR)                          02S0471 01320000
         LA    @07,GP4TYP8                                      02S0471 01321000
         ST    @07,ADPLFMT1(,@14)                               02S0471 01322000
*           ADPLFMT2=ADDR(DCBFDAD); /* ADDR OF DATA IN BUFFER        */ 01323000
         L     @07,DATAPTR(,PLISTPTR)                           02S0472 01324000
         LA    @07,DCBFDAD+46(,@07)                             02S0472 01325000
         ST    @07,ADPLFMT2(,@14)                               02S0472 01326000
*           R0=ADDR(DYNAMPTN);      /* ADDR OF PATTERNS FOR THIS LINE*/ 01327000
         LA    R0,DYNAMPTN                                      02S0473 01328000
*           CALL AMDPRFMT;          /* FORMAT LINE                   */ 01329000
         L     @15,FMTADDR(,PLISTPTR)                           02S0474 01330000
         BALR  @14,@15                                          02S0474 01331000
*           RETCODE=4;              /* INDICATES TO PRINT BUFFER AND    01332000
*                                      GET NEXT RECORD               */ 01333000
         LA    RETCODE,4                                        02S0475 01334000
*         END;                                                  02S0476 01335000
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */ 01336000
         B     CE0001@                                          02S0477 01337000
*     END S25;                      /* END OF SUBCASE                */ 01338000
*                                                               02S0479 01339000
*     /***************************************************************/ 01340000
*     /*                                                             */ 01341000
*     /* THIS ROUTINE WILL PROCESS SVC26. THE FORMATTING CONSISTS OF */ 01342000
*     /* THE BASIC RECORD + A VARIABLE LENGTH PLIST + A VARIABLE     */ 01343000
*     /* LENGTH DSNAME + A VARIABLE LENGTH VOLIST.                   */ 01344000
*     /*                                                             */ 01345000
*     /***************************************************************/ 01346000
*                                                               02S0479 01347000
*S26:                                                           02S0479 01348000
*     DO;                           /* SUBCASE                       */ 01349000
S26      DS    0H                                               02S0480 01350000
*       IF TIMESW=0 THEN            /* HAS SECOND LINE BEEN FORMATTED*/ 01351000
         SLR   @14,@14                                          02S0480 01352000
         CH    @14,TIMESW                                       02S0480 01353000
         BNE   @RF00480                                         02S0480 01354000
*         RETCODE=0;                /* NO - INDICATES TO PRINT BUFFER   01355000
*                                      AND RETURN FOR SECOND PASS    */ 01356000
         LR    RETCODE,@14                                      02S0481 01357000
*       ELSE                                                    02S0482 01358000
*         DO;                       /* YES - REGISTERS HAVE BEEN        01359000
*                                      FORMATTED                     */ 01360000
         B     @RC00480                                         02S0482 01361000
@RF00480 DS    0H                                               02S0483 01362000
*           IF TIMESW=1 THEN        /* HAS REMAINDER OF SECOND LINE     01363000
*                                      BEEN FORMATTED                */ 01364000
         CLC   TIMESW(2),@CH00046                               02S0483 01365000
         BNE   @RF00483                                         02S0483 01366000
*             DO;                   /* NO                            */ 01367000
*               DYNAMPTN(1:LENGTH(GP4S26A))=GP4S26A;/* MOVE PATTERNS    01368000
*                                      TO GETMAIN AREA               */ 01369000
         MVC   DYNAMPTN(21),GP4S26A                             02S0485 01370000
*               IF RCD26LN=ERROR THEN/* IS FIELD IN ERROR            */ 01371000
         LA    @14,46                                           02S0486 01372000
         AL    @14,DATAPTR(,PLISTPTR)                           02S0486 01373000
         CLI   RCD26LN(@14),255                                 02S0486 01374000
         BNE   @RF00486                                         02S0486 01375000
*                 DO;               /* YES                           */ 01376000
*                   OLDFLG(1)=OLDFLG(1)|CHARFLAG;/* INDICATE DATA IN    01377000
*                                      EBCDIC                        */ 01378000
         SLR   @07,@07                                          02S0488 01379000
         IC    @07,OLDFLG                                       02S0488 01380000
         O     @07,@CF00092                                     02S0488 01381000
         STC   @07,OLDFLG                                       02S0488 01382000
*                   OLDFLG(2)=0;    /* INDICATE END OF PATTERNS      */ 01383000
         MVI   OLDFLG+4,X'00'                                   02S0489 01384000
*                   RCD26LN=4;      /* MODIFY LENGTH IN ORDER TO        01385000
*                                      ACCESS NEXT FIELD             */ 01386000
         MVI   RCD26LN(@14),X'04'                               02S0490 01387000
*                 END;                                          02S0491 01388000
*               ELSE                                            02S0492 01389000
*                 DO;               /* FORMAT 4 OR 5 WORDS           */ 01390000
         B     @RC00486                                         02S0492 01391000
@RF00486 DS    0H                                               02S0493 01392000
*                   IF RCD26LN=16 THEN/* IS PLIST 4 WORDS            */ 01393000
         L     @14,DATAPTR(,PLISTPTR)                           02S0493 01394000
         CLI   RCD26LN+46(@14),16                               02S0493 01395000
         BNE   @RF00493                                         02S0493 01396000
*                     OLDFLG(5)=0;  /* YES - INDICATE END OF PATTERNS*/ 01397000
         MVI   OLDFLG+16,X'00'                                  02S0494 01398000
*                 END;                                          02S0495 01399000
@RF00493 DS    0H                                               02S0496 01400000
*               ADPLFMT1=ADDR(GROUP2);/* ADDR OF LABELS FOR THIS LINE*/ 01401000
@RC00486 L     @14,ABDPLPTR(,PLISTPTR)                          02S0496 01402000
         LA    @07,GROUP2                                       02S0496 01403000
         ST    @07,ADPLFMT1(,@14)                               02S0496 01404000
*               ADPLFMT2=ADDR(RCD26LN)+1;/* ADDR OF DATA IN BUFFER   */ 01405000
         LA    @07,47                                           02S0497 01406000
         AL    @07,DATAPTR(,PLISTPTR)                           02S0497 01407000
         ST    @07,ADPLFMT2(,@14)                               02S0497 01408000
*               R0=ADDR(DYNAMPTN);  /* ADDR OF PATTERNS              */ 01409000
         LA    R0,DYNAMPTN                                      02S0498 01410000
*               CALL AMDPRFMT;      /* FORMAT THE LINE               */ 01411000
         L     @15,FMTADDR(,PLISTPTR)                           02S0499 01412000
         BALR  @14,@15                                          02S0499 01413000
*               RETCODE=0;          /* INDICATES TO PRINT BUFFER AND    01414000
*                                      RETURN FOR THIRD PASS         */ 01415000
         SLR   RETCODE,RETCODE                                  02S0500 01416000
*             END;                                              02S0501 01417000
*           ELSE                                                02S0502 01418000
*             DO;                   /* YES                           */ 01419000
         B     @RC00483                                         02S0502 01420000
@RF00483 DS    0H                                               02S0503 01421000
*               IF TIMESW=2 THEN    /* HAS THIRD LINE BEEN FORMATTED */ 01422000
         CLC   TIMESW(2),@CH00078                               02S0503 01423000
         BNE   @RF00503                                         02S0503 01424000
*                 DO;               /* NO                            */ 01425000
*                   DYNAMPTN(1:LENGTH(GP4S26B))=GP4S26B;/* MOVE 02S0505 01426000
*                                      PATTERNS TO GETMAIN AREA      */ 01427000
         MVC   DYNAMPTN(13),GP4S26B                             02S0505 01428000
*                   FIELDADR=ADDR(RCD26LN)+RCD26LN+1;/* ADDR OF 02S0506 01429000
*                                      DSNAME IN BUFFER              */ 01430000
         LA    @14,46                                           02S0506 01431000
         AL    @14,DATAPTR(,PLISTPTR)                           02S0506 01432000
         SLR   @07,@07                                          02S0506 01433000
         IC    @07,RCD26LN(,@14)                                02S0506 01434000
         ALR   @07,@14                                          02S0506 01435000
         AH    @07,@CH00046                                     02S0506 01436000
         ST    @07,FIELDADR                                     02S0506 01437000
*                   IF NXTFIELD¬=ERROR THEN/* IS FIELD IN ERROR      */ 01438000
         CLI   NXTFIELD(@07),255                                02S0507 01439000
         BE    @RF00507                                         02S0507 01440000
*                     DO;           /* NO                            */ 01441000
*                       IF NXTFIELD¬=44 THEN/* IS DSN MAX LENGTH     */ 01442000
         CLI   NXTFIELD(@07),44                                 02S0509 01443000
         BE    @RF00509                                         02S0509 01444000
*                         DO;       /* NO                            */ 01445000
*                           K=NXTFIELD/16;/* NUMBER OF FULL WORDS    */ 01446000
         L     @14,FIELDADR                                     02S0511 01447000
         SLR   @05,@05                                          02S0511 01448000
         IC    @05,NXTFIELD(,@14)                               02S0511 01449000
         LR    K,@05                                            02S0511 01450000
         SRL   K,4                                              02S0511 01451000
*                           MOD=NXTFIELD//16;/* REMAINDER OF PARTIAL    01452000
*                                      WORD                          */ 01453000
         LR    @02,@05                                          02S0512 01454000
         SRDA  @02,32                                           02S0512 01455000
         D     @02,@CF00139                                     02S0512 01456000
         LR    MOD,@02                                          02S0512 01457000
*                           IF MOD=0 THEN/* ARE ALL FULL WORDS       */ 01458000
         SLR   @14,@14                                          02S0513 01459000
         CR    MOD,@14                                          02S0513 01460000
         BNE   @RF00513                                         02S0513 01461000
*                             OLDFLG(K+1)=0;/* YES - INDICATE END OF    01462000
*                                      PATTERNS                      */ 01463000
         LR    @07,K                                            02S0514 01464000
         SLA   @07,2                                            02S0514 01465000
         STC   @14,OLDFLG(@07)                                  02S0514 01466000
*                           ELSE                                02S0515 01467000
*                             DO;   /* NO - MODIFY PATTERNS     02S0515 01468000
*                                      ACCORDINGLY                   */ 01469000
         B     @RC00513                                         02S0515 01470000
@RF00513 DS    0H                                               02S0516 01471000
*                               OLDLN(K+1)=OLDLN(K+1)&DATAOFF;/* SET    01472000
*                                      DATA LENGTH TO ZERO           */ 01473000
         LR    @14,K                                            02S0516 01474000
         SLA   @14,2                                            02S0516 01475000
         SLR   @05,@05                                          02S0516 01476000
         IC    @05,OLDLN(@14)                                   02S0516 01477000
         N     @05,@CF00297                                     02S0516 01478000
         STC   @05,OLDLN(@14)                                   02S0516 01479000
*                               OLDLN(K+1)=OLDLN(K+1)|(MOD-1);/* NEW    01480000
*                                      DATA LENGTH                   */ 01481000
         LR    @03,MOD                                          02S0517 01482000
         BCTR  @03,0                                            02S0517 01483000
         OR    @05,@03                                          02S0517 01484000
         STC   @05,OLDLN(@14)                                   02S0517 01485000
*                               OLDFLG(K+2)=0;/* INDICATE END OF        01486000
*                                      PATTERNS                      */ 01487000
         SLR   @07,@07                                          02S0518 01488000
         STC   @07,OLDFLG+4(@14)                                02S0518 01489000
*                             END;                              02S0519 01490000
*                         END;                                  02S0520 01491000
*                     END;                                      02S0521 01492000
*                   ELSE                                        02S0522 01493000
*                     DO;           /* YES - FIELD IS IN ERROR       */ 01494000
         B     @RC00507                                         02S0522 01495000
@RF00507 DS    0H                                               02S0523 01496000
*                       OLDLN(1)=OLDLN(1)&DATAOFF;/* ZERO DATA LENGTH*/ 01497000
         SLR   @14,@14                                          02S0523 01498000
         IC    @14,OLDLN                                        02S0523 01499000
         N     @14,@CF00297                                     02S0523 01500000
         STC   @14,OLDLN                                        02S0523 01501000
*                       OLDLN(1)=OLDLN(1)|DATALN4;/* SET DATA LENGTH    01502000
*                                      TO FORMAT 4 BYTES             */ 01503000
         O     @14,@CF00170                                     02S0524 01504000
         STC   @14,OLDLN                                        02S0524 01505000
*                       OLDFLG(2)=0;/* INDICATE END OF PATTERNS      */ 01506000
         MVI   OLDFLG+4,X'00'                                   02S0525 01507000
*                       NXTFIELD=4; /* MODIFY LENGTH IN ORDER TO        01508000
*                                      ACCESS VOLIST                 */ 01509000
         L     @14,FIELDADR                                     02S0526 01510000
         MVI   NXTFIELD(@14),X'04'                              02S0526 01511000
*                     END;                                      02S0527 01512000
*                   ADPLFMT1=ADDR(GP4TYP9);/* ADDR OF LABELS FOR THIS   01513000
*                                      LINE                          */ 01514000
@RC00507 L     @14,ABDPLPTR(,PLISTPTR)                          02S0528 01515000
         LA    @07,GP4TYP9                                      02S0528 01516000
         ST    @07,ADPLFMT1(,@14)                               02S0528 01517000
*                   ADPLFMT2=FIELDADR+1;/* ADDR OF DATA IN BUFFER    */ 01518000
         LA    @07,1                                            02S0529 01519000
         AL    @07,FIELDADR                                     02S0529 01520000
         ST    @07,ADPLFMT2(,@14)                               02S0529 01521000
*                   R0=ADDR(DYNAMPTN);/* ADDR OF PATTERNS            */ 01522000
         LA    R0,DYNAMPTN                                      02S0530 01523000
*                   CALL AMDPRFMT;  /* FORMAT THE LINE               */ 01524000
         L     @15,FMTADDR(,PLISTPTR)                           02S0531 01525000
         BALR  @14,@15                                          02S0531 01526000
*                   RETCODE=0;      /* INDICATES TO PRINT BUFFER AND    01527000
*                                      RETURN FOR FOURTH PASS        */ 01528000
         SLR   RETCODE,RETCODE                                  02S0532 01529000
*                 END;                                          02S0533 01530000
*               ELSE                                            02S0534 01531000
*                 DO;               /* YES - FORMAT THE FOURTH LINE  */ 01532000
         B     @RC00503                                         02S0534 01533000
@RF00503 DS    0H                                               02S0535 01534000
*                   DYNAMPTN(1:LENGTH(GP4S26C))=GP4S26C;/* MOVE 02S0535 01535000
*                                      PATTERNS TO GETMAIN AREA      */ 01536000
         MVC   DYNAMPTN(41),GP4S26C                             02S0535 01537000
*                   FIELDADR=FIELDADR+NXTFIELD+1;/* ADDR OF VOLIST IN   01538000
*                                      BUFFER                        */ 01539000
         L     @14,FIELDADR                                     02S0536 01540000
         SLR   @07,@07                                          02S0536 01541000
         IC    @07,NXTFIELD(,@14)                               02S0536 01542000
         ALR   @07,@14                                          02S0536 01543000
         AH    @07,@CH00046                                     02S0536 01544000
         ST    @07,FIELDADR                                     02S0536 01545000
*                   R0=ADDR(DYNAMPTN);/* ADDR OF PATTERNS FOR THIS      01546000
*                                      LINE                          */ 01547000
         LA    R0,DYNAMPTN                                      02S0537 01548000
*                   IF NXTFIELD=ERROR THEN/* IS FIELD IN ERROR       */ 01549000
         CLI   NXTFIELD(@07),255                                02S0538 01550000
         BNE   @RF00538                                         02S0538 01551000
*                     DO;           /* YES - ONLY FORMAT 4 BYTES     */ 01552000
*                       OLDFLG(1)=OLDFLG(1)|CHARFLAG;/* INDICATE DATA   01553000
*                                      IN EBCDIC                     */ 01554000
         SLR   @14,@14                                          02S0540 01555000
         IC    @14,OLDFLG                                       02S0540 01556000
         O     @14,@CF00092                                     02S0540 01557000
         STC   @14,OLDFLG                                       02S0540 01558000
*                       OLDFLG(2)=0;/* INDICATE END OF PATTERNS      */ 01559000
         MVI   OLDFLG+4,X'00'                                   02S0541 01560000
*                     END;                                      02S0542 01561000
*                   ELSE                                        02S0543 01562000
*                     DO;           /* NO - DETERMINE HOW MANY BYTES    01563000
*                                      IN VOLIST                     */ 01564000
         B     @RC00538                                         02S0543 01565000
@RF00538 DS    0H                                               02S0544 01566000
*                       IF NXTFIELD=0 THEN/* IS THERE ANY DATA       */ 01567000
         L     @14,FIELDADR                                     02S0544 01568000
         CLI   NXTFIELD(@14),0                                  02S0544 01569000
         BNE   @RF00544                                         02S0544 01570000
*                         R0=ADDR(GP4S26D);/* NO - ADDR OF PATTERNS     01571000
*                                      FOR THIS LINE                 */ 01572000
         LA    R0,GP4S26D                                       02S0545 01573000
*                       ELSE                                    02S0546 01574000
*                         DO;       /* YES - THERE IS DATA IN VOLIST */ 01575000
         B     @RC00544                                         02S0546 01576000
@RF00544 DS    0H                                               02S0547 01577000
*                           IF NXTFIELD<4 THEN/* IS VOLIST LESS THAN    01578000
*                                      ONE WORD                      */ 01579000
         L     @14,FIELDADR                                     02S0547 01580000
         CLI   NXTFIELD(@14),4                                  02S0547 01581000
         BNL   @RF00547                                         02S0547 01582000
*                             DO;   /* YES                           */ 01583000
*                               OLDLN(1)=OLDLN(1)&DATAOFF;/* SET DATA   01584000
*                                      LENGTH TO 0                   */ 01585000
         SLR   @07,@07                                          02S0549 01586000
         IC    @07,OLDLN                                        02S0549 01587000
         N     @07,@CF00297                                     02S0549 01588000
         STC   @07,OLDLN                                        02S0549 01589000
*                               OLDLN(1)=OLDLN(1)|(NXTFIELD-1);/* NEW   01590000
*                                      DATA LENGTH                   */ 01591000
         SLR   @05,@05                                          02S0550 01592000
         IC    @05,NXTFIELD(,@14)                               02S0550 01593000
         BCTR  @05,0                                            02S0550 01594000
         OR    @07,@05                                          02S0550 01595000
         STC   @07,OLDLN                                        02S0550 01596000
*                               OLDFLG(2)=0;/* INDICATE END OF  02S0551 01597000
*                                      PATTERNS                      */ 01598000
         MVI   OLDFLG+4,X'00'                                   02S0551 01599000
*                             END;                              02S0552 01600000
*                           ELSE                                02S0553 01601000
*                             DO;   /* NO - MODIFY PATTERNS          */ 01602000
         B     @RC00547                                         02S0553 01603000
@RF00547 DS    0H                                               02S0554 01604000
*                               K=NXTFIELD/4;/* NUMBER OF FULL WORDS */ 01605000
         L     @14,FIELDADR                                     02S0554 01606000
         SLR   @05,@05                                          02S0554 01607000
         IC    @05,NXTFIELD(,@14)                               02S0554 01608000
         LR    K,@05                                            02S0554 01609000
         SRL   K,2                                              02S0554 01610000
*                               MOD=NXTFIELD//4;/* REMAINDER OF 02S0555 01611000
*                                      PARTIAL WORD                  */ 01612000
         LR    @02,@05                                          02S0555 01613000
         SRDA  @02,32                                           02S0555 01614000
         D     @02,@CF00099                                     02S0555 01615000
         LR    MOD,@02                                          02S0555 01616000
*                               IF MOD=0 THEN/* ARE ALL FULL WORDS   */ 01617000
         SLR   @14,@14                                          02S0556 01618000
         CR    MOD,@14                                          02S0556 01619000
         BNE   @RF00556                                         02S0556 01620000
*                                 OLDFLG(K+1)=0;/* YES - INDICATE END   01621000
*                                      OF PATTERNS                   */ 01622000
         LR    @07,K                                            02S0557 01623000
         SLA   @07,2                                            02S0557 01624000
         STC   @14,OLDFLG(@07)                                  02S0557 01625000
*                               ELSE                            02S0558 01626000
*                                 DO;/* NO - MODIFY PATTERNS    02S0558 01627000
*                                      ACCORDINGLY                   */ 01628000
         B     @RC00556                                         02S0558 01629000
@RF00556 DS    0H                                               02S0559 01630000
*                                   OLDLN(K+1)=OLDLN(K+1)&DATAOFF;/*    01631000
*                                      SET DATA LENGTH TO ZERO       */ 01632000
         LR    @14,K                                            02S0559 01633000
         SLA   @14,2                                            02S0559 01634000
         SLR   @05,@05                                          02S0559 01635000
         IC    @05,OLDLN(@14)                                   02S0559 01636000
         N     @05,@CF00297                                     02S0559 01637000
         STC   @05,OLDLN(@14)                                   02S0559 01638000
*                                   OLDLN(K+1)=OLDLN(K+1)|(MOD-1);/*    01639000
*                                      NEW DATA LENGTH               */ 01640000
         LR    @03,MOD                                          02S0560 01641000
         BCTR  @03,0                                            02S0560 01642000
         OR    @05,@03                                          02S0560 01643000
         STC   @05,OLDLN(@14)                                   02S0560 01644000
*                                   OLDFLG(K+2)=0;/* INDICATE END OF    01645000
*                                      PATTERNS                      */ 01646000
         SLR   @07,@07                                          02S0561 01647000
         STC   @07,OLDFLG+4(@14)                                02S0561 01648000
*                                 END;                          02S0562 01649000
*                             END;                              02S0563 01650000
@RC00556 DS    0H                                               02S0564 01651000
*                         END;                                  02S0564 01652000
@RC00547 DS    0H                                               02S0565 01653000
*                     END;                                      02S0565 01654000
@RC00544 DS    0H                                               02S0566 01655000
*                   ADPLFMT1=ADDR(GP4TYP2);/* ADDR OF LABEL FOR THIS    01656000
*                                      LINE                          */ 01657000
@RC00538 L     @14,ABDPLPTR(,PLISTPTR)                          02S0566 01658000
         LA    @07,GP4TYP2                                      02S0566 01659000
         ST    @07,ADPLFMT1(,@14)                               02S0566 01660000
*                   ADPLFMT2=FIELDADR+1;/* ADDR OF DATA IN BUFFER    */ 01661000
         LA    @07,1                                            02S0567 01662000
         AL    @07,FIELDADR                                     02S0567 01663000
         ST    @07,ADPLFMT2(,@14)                               02S0567 01664000
*                   CALL AMDPRFMT;  /* FORMAT THE LINE               */ 01665000
         L     @15,FMTADDR(,PLISTPTR)                           02S0568 01666000
         BALR  @14,@15                                          02S0568 01667000
*                   RETCODE=4;      /* INDICATES TO PRINT BUFFER AND    01668000
*                                      GET NEXT RECORD               */ 01669000
         LA    RETCODE,4                                        02S0569 01670000
*                 END;                                          02S0570 01671000
*             END;                                              02S0571 01672000
*         END;                                                  02S0572 01673000
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */ 01674000
         B     CE0001@                                          02S0573 01675000
*     END S26;                      /* END OF SUBCASE                */ 01676000
*                                                               02S0575 01677000
*     /***************************************************************/ 01678000
*     /*                                                             */ 01679000
*     /* THIS ROUTINE WILL PROCESS SVC 27. THE FORMATTING CONSISTS OF*/ 01680000
*     /* THE BASIC RECORD + A 16 BYTE PLIST + A VOL-SER + A VARIABLE */ 01681000
*     /* DSNAME/TTR.                                                 */ 01682000
*     /*                                                             */ 01683000
*     /***************************************************************/ 01684000
*                                                               02S0575 01685000
*S27:                                                           02S0575 01686000
*     DO;                           /* SUBCASE                       */ 01687000
S27      DS    0H                                               02S0576 01688000
*       IF TIMESW=0 THEN            /* HAS SECOND LINE BEEN FORMATTED*/ 01689000
         SLR   @14,@14                                          02S0576 01690000
         CH    @14,TIMESW                                       02S0576 01691000
         BNE   @RF00576                                         02S0576 01692000
*         RETCODE=0;                /* NO - INDICATES TO PRINT BUFFER   01693000
*                                      AND RETURN FOR SECOND PASS    */ 01694000
         LR    RETCODE,@14                                      02S0577 01695000
*       ELSE                                                    02S0578 01696000
*         DO;                       /* YES - REGISTERS HAVE BEEN        01697000
*                                      FORMATTED                     */ 01698000
         B     @RC00576                                         02S0578 01699000
@RF00576 DS    0H                                               02S0579 01700000
*           IF TIMESW=1 THEN        /* HAS REMAINDER OF SECOND LINE     01701000
*                                      BEEN FORMATTED                */ 01702000
         CLC   TIMESW(2),@CH00046                               02S0579 01703000
         BNE   @RF00579                                         02S0579 01704000
*             DO;                   /* NO                            */ 01705000
*               DYNAMPTN(1:LENGTH(GP4S27A))=GP4S27A;/* MOVE PATTERNS    01706000
*                                      TO GETMAIN AREA               */ 01707000
         MVC   DYNAMPTN(21),GP4S27A                             02S0581 01708000
*               IF RCD27LST=ASTER16|RCD27LST=PEES16|RCD27LST=ESSES16    01709000
*                 THEN              /* IS FIELD IN ERROR             */ 01710000
         LA    @14,46                                           02S0582 01711000
         AL    @14,DATAPTR(,PLISTPTR)                           02S0582 01712000
         CLC   RCD27LST(16,@14),ASTER16                         02S0582 01713000
         BE    @RT00582                                         02S0582 01714000
         CLC   RCD27LST(16,@14),PEES16                          02S0582 01715000
         BE    @RT00582                                         02S0582 01716000
         CLC   RCD27LST(16,@14),ESSES16                         02S0582 01717000
         BNE   @RF00582                                         02S0582 01718000
@RT00582 DS    0H                                               02S0583 01719000
*                 DO;               /* YES                           */ 01720000
*                   OLDFLG(1)=OLDFLG(1)|CHARFLAG;/* INDICATE DATA IN    01721000
*                                      EBCDIC                        */ 01722000
         LA    @14,32                                           02S0584 01723000
         SLR   @07,@07                                          02S0584 01724000
         IC    @07,OLDFLG                                       02S0584 01725000
         OR    @07,@14                                          02S0584 01726000
         STC   @07,OLDFLG                                       02S0584 01727000
*                   OLDFLG(2)=OLDFLG(2)|CHARFLAG;               02S0585 01728000
         SLR   @07,@07                                          02S0585 01729000
         IC    @07,OLDFLG+4                                     02S0585 01730000
         OR    @07,@14                                          02S0585 01731000
         STC   @07,OLDFLG+4                                     02S0585 01732000
*                   OLDFLG(3)=OLDFLG(3)|CHARFLAG;               02S0586 01733000
         SLR   @07,@07                                          02S0586 01734000
         IC    @07,OLDFLG+8                                     02S0586 01735000
         OR    @07,@14                                          02S0586 01736000
         STC   @07,OLDFLG+8                                     02S0586 01737000
*                   OLDFLG(4)=OLDFLG(4)|CHARFLAG;               02S0587 01738000
         SLR   @07,@07                                          02S0587 01739000
         IC    @07,OLDFLG+12                                    02S0587 01740000
         OR    @14,@07                                          02S0587 01741000
         STC   @14,OLDFLG+12                                    02S0587 01742000
*                 END;                                          02S0588 01743000
*               ADPLFMT1=ADDR(GP4TYP10);/* ADDR OF LABELS FOR THIS      01744000
*                                      LINE                          */ 01745000
@RF00582 L     @14,ABDPLPTR(,PLISTPTR)                          02S0589 01746000
         LA    @07,GP4TYP10                                     02S0589 01747000
         ST    @07,ADPLFMT1(,@14)                               02S0589 01748000
*               ADPLFMT2=ADDR(RCD27LST);/* ADDR OF DATA IN BUFFER    */ 01749000
         LA    @07,46                                           02S0590 01750000
         AL    @07,DATAPTR(,PLISTPTR)                           02S0590 01751000
         ST    @07,ADPLFMT2(,@14)                               02S0590 01752000
*               R0=ADDR(DYNAMPTN);  /* ADDR OF PATTERNS              */ 01753000
         LA    R0,DYNAMPTN                                      02S0591 01754000
*               CALL AMDPRFMT;      /* FORMAT THE LINE               */ 01755000
         L     @15,FMTADDR(,PLISTPTR)                           02S0592 01756000
         BALR  @14,@15                                          02S0592 01757000
*               RETCODE=0;          /* INDICATES TO PRINT BUFFER AND    01758000
*                                      RETURN FOR THIRD PASS         */ 01759000
         SLR   RETCODE,RETCODE                                  02S0593 01760000
*             END;                                              02S0594 01761000
*           ELSE                                                02S0595 01762000
*             DO;                   /* YES - FORMAT THE THIRD LINE   */ 01763000
         B     @RC00579                                         02S0595 01764000
@RF00579 DS    0H                                               02S0596 01765000
*               DYNAMPTN(1:LENGTH(GP4S27B))=GP4S27B;/* MOVE PATTERNS    01766000
*                                      TO GETMAIN AREA               */ 01767000
         MVC   DYNAMPTN(13),GP4S27B                             02S0596 01768000
*               IF RCD27LN¬=ERROR THEN/* IS FIELD IN ERROR           */ 01769000
         LA    @14,46                                           02S0597 01770000
         AL    @14,DATAPTR(,PLISTPTR)                           02S0597 01771000
         CLI   RCD27LN(@14),255                                 02S0597 01772000
         BE    @RF00597                                         02S0597 01773000
*                 DO;               /* NO                            */ 01774000
*                   IF RCD27LN¬=44 THEN/* IS DSN MAX LENGTH          */ 01775000
         CLI   RCD27LN(@14),44                                  02S0599 01776000
         BE    @RF00599                                         02S0599 01777000
*                     DO;           /* NO                            */ 01778000
*                       K=RCD27LN/16;/* NUMBER OF FULL WORDS         */ 01779000
         SLR   @05,@05                                          02S0601 01780000
         IC    @05,RCD27LN(,@14)                                02S0601 01781000
         LR    K,@05                                            02S0601 01782000
         SRL   K,4                                              02S0601 01783000
*                       MOD=RCD27LN//16;/* REMAINDER OF PARTIAL WORD */ 01784000
         LR    @02,@05                                          02S0602 01785000
         SRDA  @02,32                                           02S0602 01786000
         D     @02,@CF00139                                     02S0602 01787000
         LR    MOD,@02                                          02S0602 01788000
*                       IF MOD=0 THEN/* ARE ALL FULL WORDS           */ 01789000
         SLR   @14,@14                                          02S0603 01790000
         CR    MOD,@14                                          02S0603 01791000
         BNE   @RF00603                                         02S0603 01792000
*                         OLDFLG(K+1)=0;/* YES - INDICATE END OF        01793000
*                                      PATTERNS                      */ 01794000
         LR    @07,K                                            02S0604 01795000
         SLA   @07,2                                            02S0604 01796000
         STC   @14,OLDFLG(@07)                                  02S0604 01797000
*                       ELSE                                    02S0605 01798000
*                         DO;       /* NO - MODIFY PATTERNS     02S0605 01799000
*                                      ACCORDINGLY                   */ 01800000
         B     @RC00603                                         02S0605 01801000
@RF00603 DS    0H                                               02S0606 01802000
*                           OLDLN(K+1)=OLDLN(K+1)&DATAOFF;/* SET DATA   01803000
*                                      LENGTH TO ZERO                */ 01804000
         LR    @14,K                                            02S0606 01805000
         SLA   @14,2                                            02S0606 01806000
         SLR   @05,@05                                          02S0606 01807000
         IC    @05,OLDLN(@14)                                   02S0606 01808000
         N     @05,@CF00297                                     02S0606 01809000
         STC   @05,OLDLN(@14)                                   02S0606 01810000
*                           OLDLN(K+1)=OLDLN(K+1)|(MOD-1);/* NEW DATA   01811000
*                                      LENGTH                        */ 01812000
         LR    @03,MOD                                          02S0607 01813000
         BCTR  @03,0                                            02S0607 01814000
         OR    @05,@03                                          02S0607 01815000
         STC   @05,OLDLN(@14)                                   02S0607 01816000
*                           OLDFLG(K+2)=0;/* INDICATE END OF PATTERNS*/ 01817000
         SLR   @07,@07                                          02S0608 01818000
         STC   @07,OLDFLG+4(@14)                                02S0608 01819000
*                         END;                                  02S0609 01820000
*                     END;                                      02S0610 01821000
*                 END;                                          02S0611 01822000
*               ELSE                                            02S0612 01823000
*                 DO;               /* YES - FIELD IS IN ERROR       */ 01824000
         B     @RC00597                                         02S0612 01825000
@RF00597 DS    0H                                               02S0613 01826000
*                   OLDLN(1)=OLDLN(1)&DATAOFF;/* ZERO DATA LENGTH    */ 01827000
         SLR   @14,@14                                          02S0613 01828000
         IC    @14,OLDLN                                        02S0613 01829000
         N     @14,@CF00297                                     02S0613 01830000
         STC   @14,OLDLN                                        02S0613 01831000
*                   OLDLN(1)=OLDLN(1)|DATALN4;/* SET DATA LENGTH TO     01832000
*                                      FORMAT 4 BYTES                */ 01833000
         O     @14,@CF00170                                     02S0614 01834000
         STC   @14,OLDLN                                        02S0614 01835000
*                   OLDFLG(2)=0;    /* INDICATE END OF PATTERNS      */ 01836000
         MVI   OLDFLG+4,X'00'                                   02S0615 01837000
*                 END;                                          02S0616 01838000
*               ADPLFMT1=ADDR(GP4TP10A);/* ADDR OF LABELS FOR THIS      01839000
*                                      LINE                          */ 01840000
@RC00597 L     @14,ABDPLPTR(,PLISTPTR)                          02S0617 01841000
         LA    @07,GP4TP10A                                     02S0617 01842000
         ST    @07,ADPLFMT1(,@14)                               02S0617 01843000
*               ADPLFMT2=ADDR(RCD27LN)+1;/* ADDR OF DATA IN BUFFER   */ 01844000
         L     @07,DATAPTR(,PLISTPTR)                           02S0618 01845000
         LA    @07,RCD27LN+46(,@07)                             02S0618 01846000
         AH    @07,@CH00046                                     02S0618 01847000
         ST    @07,ADPLFMT2(,@14)                               02S0618 01848000
*               R0=ADDR(DYNAMPTN);  /* ADDR OF PATTERNS              */ 01849000
         LA    R0,DYNAMPTN                                      02S0619 01850000
*               CALL AMDPRFMT;      /* FORMAT THE LINE               */ 01851000
         L     @15,FMTADDR(,PLISTPTR)                           02S0620 01852000
         BALR  @14,@15                                          02S0620 01853000
*               RETCODE=4;          /* INDICATES TO PRINT BUFFER AND    01854000
*                                      GET NEXT RECORD               */ 01855000
         LA    RETCODE,4                                        02S0621 01856000
*             END;                                              02S0622 01857000
*         END;                                                  02S0623 01858000
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */ 01859000
         B     CE0001@                                          02S0624 01860000
*     END S27;                      /* END OF SUBCASE                */ 01861000
*                                                               02S0626 01862000
*     /***************************************************************/ 01863000
*     /*                                                             */ 01864000
*     /* THIS ROUTINE WILL PROCESS SVC 29. THE FORMATTING CONSISTS OF*/ 01865000
*     /* THE BASIC RECORD + A 16 BYTE PLIST + A VARIABLE LENGTH      */ 01866000
*     /* DSNAME + A VARIABLE LENGTH VOLIST.                          */ 01867000
*     /*                                                             */ 01868000
*     /***************************************************************/ 01869000
*                                                               02S0626 01870000
*S29:                                                           02S0626 01871000
*     DO;                           /* SUBCASE                       */ 01872000
S29      DS    0H                                               02S0627 01873000
*       IF TIMESW=0 THEN            /* HAS SECOND LINE BEEN FORMATTED*/ 01874000
         SLR   @14,@14                                          02S0627 01875000
         CH    @14,TIMESW                                       02S0627 01876000
         BNE   @RF00627                                         02S0627 01877000
*         RETCODE=0;                /* NO - INDICATES TO PRINT BUFFER   01878000
*                                      AND RETURN FOR SECOND PASS    */ 01879000
         LR    RETCODE,@14                                      02S0628 01880000
*       ELSE                                                    02S0629 01881000
*         DO;                       /* YES - REGISTERS HAVE BEEN        01882000
*                                      FORMATTED                     */ 01883000
         B     @RC00627                                         02S0629 01884000
@RF00627 DS    0H                                               02S0630 01885000
*           IF TIMESW=1 THEN        /* HAS REMAINDER OF SECOND LINE     01886000
*                                      BEEN FORMATTED                */ 01887000
         CLC   TIMESW(2),@CH00046                               02S0630 01888000
         BNE   @RF00630                                         02S0630 01889000
*             DO;                   /* NO                            */ 01890000
*               DYNAMPTN(1:LENGTH(GP4S26A))=GP4S26A;/* MOVE PATTERNS    01891000
*                                      TO GETMAIN AREA               */ 01892000
         MVC   DYNAMPTN(21),GP4S26A                             02S0632 01893000
*               IF RCD29LST=ASTER16|RCD29LST=PEES16|RCD29LST=ESSES16    01894000
*                 THEN              /* IS FIELD IN ERROR             */ 01895000
         LA    @14,46                                           02S0633 01896000
         AL    @14,DATAPTR(,PLISTPTR)                           02S0633 01897000
         CLC   RCD29LST(16,@14),ASTER16                         02S0633 01898000
         BE    @RT00633                                         02S0633 01899000
         CLC   RCD29LST(16,@14),PEES16                          02S0633 01900000
         BE    @RT00633                                         02S0633 01901000
         CLC   RCD29LST(16,@14),ESSES16                         02S0633 01902000
         BNE   @RF00633                                         02S0633 01903000
@RT00633 DS    0H                                               02S0634 01904000
*                 DO;               /* YES                           */ 01905000
*                   OLDFLG(1)=OLDFLG(1)|CHARFLAG;/* INDICATE DATA IN    01906000
*                                      EBCDIC                        */ 01907000
         LA    @14,32                                           02S0635 01908000
         SLR   @07,@07                                          02S0635 01909000
         IC    @07,OLDFLG                                       02S0635 01910000
         OR    @07,@14                                          02S0635 01911000
         STC   @07,OLDFLG                                       02S0635 01912000
*                   OLDFLG(2)=OLDFLG(2)|CHARFLAG;               02S0636 01913000
         SLR   @07,@07                                          02S0636 01914000
         IC    @07,OLDFLG+4                                     02S0636 01915000
         OR    @07,@14                                          02S0636 01916000
         STC   @07,OLDFLG+4                                     02S0636 01917000
*                   OLDFLG(3)=OLDFLG(3)|CHARFLAG;               02S0637 01918000
         SLR   @07,@07                                          02S0637 01919000
         IC    @07,OLDFLG+8                                     02S0637 01920000
         OR    @07,@14                                          02S0637 01921000
         STC   @07,OLDFLG+8                                     02S0637 01922000
*                   OLDFLG(4)=OLDFLG(4)|CHARFLAG;               02S0638 01923000
         SLR   @07,@07                                          02S0638 01924000
         IC    @07,OLDFLG+12                                    02S0638 01925000
         OR    @14,@07                                          02S0638 01926000
         STC   @14,OLDFLG+12                                    02S0638 01927000
*                 END;                                          02S0639 01928000
*               OLDFLG(5)=0;        /* INDICATE END OF PATTERNS      */ 01929000
@RF00633 MVI   OLDFLG+16,X'00'                                  02S0640 01930000
*               ADPLFMT1=ADDR(GROUP2);/* ADDR OF LABELS FOR THIS LINE*/ 01931000
         L     @14,ABDPLPTR(,PLISTPTR)                          02S0641 01932000
         LA    @07,GROUP2                                       02S0641 01933000
         ST    @07,ADPLFMT1(,@14)                               02S0641 01934000
*               ADPLFMT2=ADDR(RCD29LST);/* ADDR OF DATA IN BUFFER    */ 01935000
         LA    @07,46                                           02S0642 01936000
         AL    @07,DATAPTR(,PLISTPTR)                           02S0642 01937000
         ST    @07,ADPLFMT2(,@14)                               02S0642 01938000
*               R0=ADDR(DYNAMPTN);  /* ADDR OF PATTERNS              */ 01939000
         LA    R0,DYNAMPTN                                      02S0643 01940000
*               CALL AMDPRFMT;      /* FORMAT THE LINE               */ 01941000
         L     @15,FMTADDR(,PLISTPTR)                           02S0644 01942000
         BALR  @14,@15                                          02S0644 01943000
*               RETCODE=0;          /* INDICATES TO PRINT BUFFER AND    01944000
*                                      RETURN FOR THIRD PASS         */ 01945000
         SLR   RETCODE,RETCODE                                  02S0645 01946000
*             END;                                              02S0646 01947000
*           ELSE                                                02S0647 01948000
*             DO;                   /* YES                           */ 01949000
         B     @RC00630                                         02S0647 01950000
@RF00630 DS    0H                                               02S0648 01951000
*               IF TIMESW=2 THEN    /* HAS THIRD LINE BEEN FORMATTED */ 01952000
         CLC   TIMESW(2),@CH00078                               02S0648 01953000
         BNE   @RF00648                                         02S0648 01954000
*                 DO;               /* NO                            */ 01955000
*                   DYNAMPTN(1:LENGTH(GP4S26B))=GP4S26B;/* MOVE 02S0650 01956000
*                                      PATTERNS TO GETMAIN AREA      */ 01957000
         MVC   DYNAMPTN(13),GP4S26B                             02S0650 01958000
*                   IF RCD29LN¬=ERROR THEN/* IS FIELD IN ERROR       */ 01959000
         LA    @14,46                                           02S0651 01960000
         AL    @14,DATAPTR(,PLISTPTR)                           02S0651 01961000
         CLI   RCD29LN(@14),255                                 02S0651 01962000
         BE    @RF00651                                         02S0651 01963000
*                     DO;           /* NO                            */ 01964000
*                       IF RCD29LN¬=44 THEN/* IS DSN MAX LENGTH      */ 01965000
         CLI   RCD29LN(@14),44                                  02S0653 01966000
         BE    @RF00653                                         02S0653 01967000
*                         DO;       /* NO                            */ 01968000
*                           K=RCD29LN/16;/* NUMBER OF FULL WORDS     */ 01969000
         SLR   @05,@05                                          02S0655 01970000
         IC    @05,RCD29LN(,@14)                                02S0655 01971000
         LR    K,@05                                            02S0655 01972000
         SRL   K,4                                              02S0655 01973000
*                           MOD=RCD29LN//16;/* REMAINDER OF PARTIAL     01974000
*                                      WORD                          */ 01975000
         LR    @02,@05                                          02S0656 01976000
         SRDA  @02,32                                           02S0656 01977000
         D     @02,@CF00139                                     02S0656 01978000
         LR    MOD,@02                                          02S0656 01979000
*                           IF MOD=0 THEN/* ARE ALL FULL WORDS       */ 01980000
         SLR   @14,@14                                          02S0657 01981000
         CR    MOD,@14                                          02S0657 01982000
         BNE   @RF00657                                         02S0657 01983000
*                             OLDFLG(K+1)=0;/* YES - INDICATE END OF    01984000
*                                      PATTERNS                      */ 01985000
         LR    @07,K                                            02S0658 01986000
         SLA   @07,2                                            02S0658 01987000
         STC   @14,OLDFLG(@07)                                  02S0658 01988000
*                           ELSE                                02S0659 01989000
*                             DO;   /* NO - MODIFY PATTERNS     02S0659 01990000
*                                      ACCORDINGLY                   */ 01991000
         B     @RC00657                                         02S0659 01992000
@RF00657 DS    0H                                               02S0660 01993000
*                               OLDLN(K+1)=OLDLN(K+1)&DATAOFF;/* SET    01994000
*                                      DATA LENGTH TO ZERO           */ 01995000
         LR    @14,K                                            02S0660 01996000
         SLA   @14,2                                            02S0660 01997000
         SLR   @05,@05                                          02S0660 01998000
         IC    @05,OLDLN(@14)                                   02S0660 01999000
         N     @05,@CF00297                                     02S0660 02000000
         STC   @05,OLDLN(@14)                                   02S0660 02001000
*                               OLDLN(K+1)=OLDLN(K+1)|(MOD-1);/* NEW    02002000
*                                      DATA LENGTH                   */ 02003000
         LR    @03,MOD                                          02S0661 02004000
         BCTR  @03,0                                            02S0661 02005000
         OR    @05,@03                                          02S0661 02006000
         STC   @05,OLDLN(@14)                                   02S0661 02007000
*                               OLDFLG(K+2)=0;/* INDICATE END OF        02008000
*                                      PATTERNS                      */ 02009000
         SLR   @07,@07                                          02S0662 02010000
         STC   @07,OLDFLG+4(@14)                                02S0662 02011000
*                             END;                              02S0663 02012000
*                         END;                                  02S0664 02013000
*                     END;                                      02S0665 02014000
*                   ELSE                                        02S0666 02015000
*                     DO;           /* YES - FIELD IS IN ERROR       */ 02016000
         B     @RC00651                                         02S0666 02017000
@RF00651 DS    0H                                               02S0667 02018000
*                       OLDLN(1)=OLDLN(1)&DATAOFF;/* ZERO DATA LENGTH*/ 02019000
         SLR   @14,@14                                          02S0667 02020000
         IC    @14,OLDLN                                        02S0667 02021000
         N     @14,@CF00297                                     02S0667 02022000
         STC   @14,OLDLN                                        02S0667 02023000
*                       OLDLN(1)=OLDLN(1)|DATALN4;/* SET DATA LENGTH    02024000
*                                      TO FORMAT 4 BYTES             */ 02025000
         O     @14,@CF00170                                     02S0668 02026000
         STC   @14,OLDLN                                        02S0668 02027000
*                       OLDFLG(2)=0;/* INDICATE END OF PATTERNS      */ 02028000
         MVI   OLDFLG+4,X'00'                                   02S0669 02029000
*                       RCD29LN=4;  /* MODIFY LENGTH IN ORDER TO        02030000
*                                      ACCESS NEXT FIELD             */ 02031000
         L     @14,DATAPTR(,PLISTPTR)                           02S0670 02032000
         MVI   RCD29LN+46(@14),X'04'                            02S0670 02033000
*                     END;                                      02S0671 02034000
*                   ADPLFMT1=ADDR(GP4TYP9A);/* ADDR OF LABELS FOR       02035000
*                                      THIS LINE                     */ 02036000
@RC00651 L     @14,ABDPLPTR(,PLISTPTR)                          02S0672 02037000
         LA    @07,GP4TYP9A                                     02S0672 02038000
         ST    @07,ADPLFMT1(,@14)                               02S0672 02039000
*                   ADPLFMT2=ADDR(RCD29LN)+1;/* ADDR OF DATA IN 02S0673 02040000
*                                      BUFFER                        */ 02041000
         L     @07,DATAPTR(,PLISTPTR)                           02S0673 02042000
         LA    @07,RCD29LN+46(,@07)                             02S0673 02043000
         AH    @07,@CH00046                                     02S0673 02044000
         ST    @07,ADPLFMT2(,@14)                               02S0673 02045000
*                   R0=ADDR(DYNAMPTN);/* ADDR OF PATTERNS            */ 02046000
         LA    R0,DYNAMPTN                                      02S0674 02047000
*                   CALL AMDPRFMT;  /* FORMAT THE LINE               */ 02048000
         L     @15,FMTADDR(,PLISTPTR)                           02S0675 02049000
         BALR  @14,@15                                          02S0675 02050000
*                   RETCODE=0;      /* INDICATES TO PRINT BUFFER AND    02051000
*                                      RETURN FOR 4TH PASS   @YM03666*/ 02052000
         SLR   RETCODE,RETCODE                                  02S0676 02053000
*                 END;                                          02S0677 02054000
*               ELSE                                            02S0678 02055000
*                 DO;               /* YES - FORMAT THE FOURTH LINE  */ 02056000
         B     @RC00648                                         02S0678 02057000
@RF00648 DS    0H                                               02S0679 02058000
*                   DYNAMPTN(1:LENGTH(GP4S26C))=GP4S26C;/* MOVE 02S0679 02059000
*                                      PATTERNS TO GETMAIN AREA      */ 02060000
         MVC   DYNAMPTN(41),GP4S26C                             02S0679 02061000
*                   FIELDADR=ADDR(RCD29LN)+RCD29LN+1;/* ADDR OF 02S0680 02062000
*                                      VOLIST IN BUFFER              */ 02063000
         LA    @14,46                                           02S0680 02064000
         AL    @14,DATAPTR(,PLISTPTR)                           02S0680 02065000
         LA    @07,RCD29LN(,@14)                                02S0680 02066000
         SLR   @05,@05                                          02S0680 02067000
         IC    @05,RCD29LN(,@14)                                02S0680 02068000
         ALR   @07,@05                                          02S0680 02069000
         AH    @07,@CH00046                                     02S0680 02070000
         ST    @07,FIELDADR                                     02S0680 02071000
*                   IF NXTFIELD=ERROR THEN/* IS FIELD IN ERROR       */ 02072000
         CLI   NXTFIELD(@07),255                                02S0681 02073000
         BNE   @RF00681                                         02S0681 02074000
*                     DO;           /* YES - ONLY FORMAT 4 BYTES     */ 02075000
*                       OLDFLG(1)=OLDFLG(1)|CHARFLAG;/* INDICATE DATA   02076000
*                                      IN EBCDIC                     */ 02077000
         SLR   @14,@14                                          02S0683 02078000
         IC    @14,OLDFLG                                       02S0683 02079000
         O     @14,@CF00092                                     02S0683 02080000
         STC   @14,OLDFLG                                       02S0683 02081000
*                       OLDFLG(2)=0;/* INDICATE END OF PATTERNS      */ 02082000
         MVI   OLDFLG+4,X'00'                                   02S0684 02083000
*                     END;                                      02S0685 02084000
*                   ELSE                                        02S0686 02085000
*                     DO;           /* NO - DETERMINE HOW MANY BYTES    02086000
*                                      IN VOLIST                     */ 02087000
         B     @RC00681                                         02S0686 02088000
@RF00681 DS    0H                                               02S0687 02089000
*                       IF NXTFIELD<4 THEN/* IS VOLIST LESS THAN ONE    02090000
*                                      WORD                          */ 02091000
         L     @14,FIELDADR                                     02S0687 02092000
         CLI   NXTFIELD(@14),4                                  02S0687 02093000
         BNL   @RF00687                                         02S0687 02094000
*                         DO;       /* YES                           */ 02095000
*                           OLDLN(1)=OLDLN(1)&DATAOFF;/* SET DATA       02096000
*                                      LENGTH TO 0                   */ 02097000
         SLR   @07,@07                                          02S0689 02098000
         IC    @07,OLDLN                                        02S0689 02099000
         N     @07,@CF00297                                     02S0689 02100000
         STC   @07,OLDLN                                        02S0689 02101000
*                           OLDLN(1)=OLDLN(1)|(NXTFIELD-1);/* NEW       02102000
*                                      DATA LENGTH                   */ 02103000
         SLR   @05,@05                                          02S0690 02104000
         IC    @05,NXTFIELD(,@14)                               02S0690 02105000
         BCTR  @05,0                                            02S0690 02106000
         OR    @07,@05                                          02S0690 02107000
         STC   @07,OLDLN                                        02S0690 02108000
*                           OLDFLG(2)=0;/* INDICATE END OF PATTERNS  */ 02109000
         MVI   OLDFLG+4,X'00'                                   02S0691 02110000
*                         END;                                  02S0692 02111000
*                       ELSE                                    02S0693 02112000
*                         DO;       /* NO - MODIFY PATTERNS          */ 02113000
         B     @RC00687                                         02S0693 02114000
@RF00687 DS    0H                                               02S0694 02115000
*                           K=NXTFIELD/4;/* NUMBER OF FULL WORDS     */ 02116000
         L     @14,FIELDADR                                     02S0694 02117000
         SLR   @05,@05                                          02S0694 02118000
         IC    @05,NXTFIELD(,@14)                               02S0694 02119000
         LR    K,@05                                            02S0694 02120000
         SRL   K,2                                              02S0694 02121000
*                           MOD=NXTFIELD//4;/* REMAINDER OF PARTIAL     02122000
*                                      WORD                          */ 02123000
         LR    @02,@05                                          02S0695 02124000
         SRDA  @02,32                                           02S0695 02125000
         D     @02,@CF00099                                     02S0695 02126000
         LR    MOD,@02                                          02S0695 02127000
*                           IF MOD=0 THEN/* ARE ALL FULL WORDS       */ 02128000
         SLR   @14,@14                                          02S0696 02129000
         CR    MOD,@14                                          02S0696 02130000
         BNE   @RF00696                                         02S0696 02131000
*                             OLDFLG(K+1)=0;/* YES - INDICATE END OF    02132000
*                                      PATTERNS                      */ 02133000
         LR    @07,K                                            02S0697 02134000
         SLA   @07,2                                            02S0697 02135000
         STC   @14,OLDFLG(@07)                                  02S0697 02136000
*                           ELSE                                02S0698 02137000
*                             DO;   /* NO - MODIFY PATTERNS     02S0698 02138000
*                                      ACCORDINGLY                   */ 02139000
         B     @RC00696                                         02S0698 02140000
@RF00696 DS    0H                                               02S0699 02141000
*                               OLDLN(K+1)=OLDLN(K+1)&DATAOFF;/* SET    02142000
*                                      DATA LENGTH TO ZERO           */ 02143000
         LR    @14,K                                            02S0699 02144000
         SLA   @14,2                                            02S0699 02145000
         SLR   @05,@05                                          02S0699 02146000
         IC    @05,OLDLN(@14)                                   02S0699 02147000
         N     @05,@CF00297                                     02S0699 02148000
         STC   @05,OLDLN(@14)                                   02S0699 02149000
*                               OLDLN(K+1)=OLDLN(K+1)|(MOD-1);/* NEW    02150000
*                                      DATA LENGTH                   */ 02151000
         LR    @03,MOD                                          02S0700 02152000
         BCTR  @03,0                                            02S0700 02153000
         OR    @05,@03                                          02S0700 02154000
         STC   @05,OLDLN(@14)                                   02S0700 02155000
*                               OLDFLG(K+2)=0;/* INDICATE END OF        02156000
*                                      PATTERNS                      */ 02157000
         SLR   @07,@07                                          02S0701 02158000
         STC   @07,OLDFLG+4(@14)                                02S0701 02159000
*                             END;                              02S0702 02160000
*                         END;                                  02S0703 02161000
@RC00696 DS    0H                                               02S0704 02162000
*                     END;                                      02S0704 02163000
@RC00687 DS    0H                                               02S0705 02164000
*                   ADPLFMT1=ADDR(GP4TYP2);/* ADDR OF LABEL FOR THIS    02165000
*                                      LINE                          */ 02166000
@RC00681 L     @14,ABDPLPTR(,PLISTPTR)                          02S0705 02167000
         LA    @07,GP4TYP2                                      02S0705 02168000
         ST    @07,ADPLFMT1(,@14)                               02S0705 02169000
*                   ADPLFMT2=FIELDADR+1;/* ADDR OF DATA IN BUFFER    */ 02170000
         LA    @07,1                                            02S0706 02171000
         AL    @07,FIELDADR                                     02S0706 02172000
         ST    @07,ADPLFMT2(,@14)                               02S0706 02173000
*                   R0=ADDR(DYNAMPTN);/* ADDR OF PATTERNS            */ 02174000
         LA    R0,DYNAMPTN                                      02S0707 02175000
*                   CALL AMDPRFMT;  /* FORMAT THE LINE               */ 02176000
         L     @15,FMTADDR(,PLISTPTR)                           02S0708 02177000
         BALR  @14,@15                                          02S0708 02178000
*                   RETCODE=4;      /* INDICATES TO PRINT BUFFER AND    02179000
*                                      GET NEXT RECORD               */ 02180000
         LA    RETCODE,4                                        02S0709 02181000
*                 END;                                          02S0710 02182000
*             END;                                              02S0711 02183000
*         END;                                                  02S0712 02184000
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */ 02185000
         B     CE0001@                                          02S0713 02186000
*     END S29;                      /* END OF SUBCASE                */ 02187000
*                                                               02S0715 02188000
*     /***************************************************************/ 02189000
*     /*                                                             */ 02190000
*     /* THIS ROUTINE WILL PROCESS SVC 30. THE FORMATTING CONSISTS OF*/ 02191000
*     /* THE BASIC RECORD + A 16 BYTE PLIST + VARIABLE LENGTH OLD AND*/ 02192000
*     /* NEW DSNAMES + A VARIABLE LENGTH VOLIST.                     */ 02193000
*     /*                                                             */ 02194000
*     /***************************************************************/ 02195000
*                                                               02S0715 02196000
*S30:                                                           02S0715 02197000
*     DO;                           /* SUBCASE                       */ 02198000
S30      DS    0H                                               02S0716 02199000
*       IF TIMESW=0 THEN            /* HAS SECOND LINE BEEN FORMATTED*/ 02200000
         SLR   @14,@14                                          02S0716 02201000
         CH    @14,TIMESW                                       02S0716 02202000
         BNE   @RF00716                                         02S0716 02203000
*         RETCODE=0;                /* NO - INDICATES TO PRINT BUFFER   02204000
*                                      AND RETURN FOR SECOND PASS    */ 02205000
         LR    RETCODE,@14                                      02S0717 02206000
*       ELSE                                                    02S0718 02207000
*         DO;                       /* YES - REGISTERS HAVE BEEN        02208000
*                                      FORMATTED                     */ 02209000
         B     @RC00716                                         02S0718 02210000
@RF00716 DS    0H                                               02S0719 02211000
*           IF TIMESW=1 THEN        /* HAS REMAINDER OF SECOND LINE     02212000
*                                      BEEN FORMATTED                */ 02213000
         CLC   TIMESW(2),@CH00046                               02S0719 02214000
         BNE   @RF00719                                         02S0719 02215000
*             DO;                   /* NO                            */ 02216000
*               DYNAMPTN(1:LENGTH(GP4S30A))=GP4S30A;/* MOVE PATTERNS    02217000
*                                      TO GETMAIN AREA               */ 02218000
         MVC   DYNAMPTN(17),GP4S30A                             02S0721 02219000
*               IF RCD30LST=ASTER16|RCD30LST=PEES16|RCD30LST=ESSES16    02220000
*                 THEN              /* IS FIELD IN ERROR             */ 02221000
         LA    @14,46                                           02S0722 02222000
         AL    @14,DATAPTR(,PLISTPTR)                           02S0722 02223000
         CLC   RCD30LST(16,@14),ASTER16                         02S0722 02224000
         BE    @RT00722                                         02S0722 02225000
         CLC   RCD30LST(16,@14),PEES16                          02S0722 02226000
         BE    @RT00722                                         02S0722 02227000
         CLC   RCD30LST(16,@14),ESSES16                         02S0722 02228000
         BNE   @RF00722                                         02S0722 02229000
@RT00722 DS    0H                                               02S0723 02230000
*                 DO;               /* YES                           */ 02231000
*                   OLDFLG(1)=OLDFLG(1)|CHARFLAG;/* INDICATE DATA IN    02232000
*                                      EBCDIC                        */ 02233000
         LA    @14,32                                           02S0724 02234000
         SLR   @07,@07                                          02S0724 02235000
         IC    @07,OLDFLG                                       02S0724 02236000
         OR    @07,@14                                          02S0724 02237000
         STC   @07,OLDFLG                                       02S0724 02238000
*                   OLDFLG(2)=OLDFLG(2)|CHARFLAG;               02S0725 02239000
         SLR   @07,@07                                          02S0725 02240000
         IC    @07,OLDFLG+4                                     02S0725 02241000
         OR    @07,@14                                          02S0725 02242000
         STC   @07,OLDFLG+4                                     02S0725 02243000
*                   OLDFLG(3)=OLDFLG(3)|CHARFLAG;               02S0726 02244000
         SLR   @07,@07                                          02S0726 02245000
         IC    @07,OLDFLG+8                                     02S0726 02246000
         OR    @07,@14                                          02S0726 02247000
         STC   @07,OLDFLG+8                                     02S0726 02248000
*                   OLDFLG(4)=OLDFLG(4)|CHARFLAG;               02S0727 02249000
         SLR   @07,@07                                          02S0727 02250000
         IC    @07,OLDFLG+12                                    02S0727 02251000
         OR    @14,@07                                          02S0727 02252000
         STC   @14,OLDFLG+12                                    02S0727 02253000
*                 END;                                          02S0728 02254000
*               ADPLFMT1=ADDR(GROUP2);/* ADDR OF LABELS FOR THIS LINE*/ 02255000
@RF00722 L     @14,ABDPLPTR(,PLISTPTR)                          02S0729 02256000
         LA    @07,GROUP2                                       02S0729 02257000
         ST    @07,ADPLFMT1(,@14)                               02S0729 02258000
*               ADPLFMT2=ADDR(RCD30LST);/* ADDR OF DATA IN BUFFER    */ 02259000
         LA    @07,46                                           02S0730 02260000
         AL    @07,DATAPTR(,PLISTPTR)                           02S0730 02261000
         ST    @07,ADPLFMT2(,@14)                               02S0730 02262000
*               R0=ADDR(DYNAMPTN);  /* ADDR OF PATTERNS              */ 02263000
         LA    R0,DYNAMPTN                                      02S0731 02264000
*               CALL AMDPRFMT;      /* FORMAT THE LINE               */ 02265000
         L     @15,FMTADDR(,PLISTPTR)                           02S0732 02266000
         BALR  @14,@15                                          02S0732 02267000
*               RETCODE=0;          /* INDICATES TO PRINT BUFFER AND    02268000
*                                      RETURN FOR THIRD PASS         */ 02269000
         SLR   RETCODE,RETCODE                                  02S0733 02270000
*             END;                                              02S0734 02271000
*           ELSE                                                02S0735 02272000
*             DO;                   /* YES                           */ 02273000
         B     @RC00719                                         02S0735 02274000
@RF00719 DS    0H                                               02S0736 02275000
*               IF TIMESW=2 THEN    /* HAS THIRD LINE BEEN FORMATTED */ 02276000
         CLC   TIMESW(2),@CH00078                               02S0736 02277000
         BNE   @RF00736                                         02S0736 02278000
*                 DO;               /* NO                            */ 02279000
*                   DYNAMPTN(1:LENGTH(GP4S30B))=GP4S30B;/* MOVE 02S0738 02280000
*                                      PATTERNS TO GETMAIN AREA      */ 02281000
         MVC   DYNAMPTN(13),GP4S30B                             02S0738 02282000
*                   IF RCD30LN¬=ERROR THEN/* IS FIELD IN ERROR       */ 02283000
         LA    @14,46                                           02S0739 02284000
         AL    @14,DATAPTR(,PLISTPTR)                           02S0739 02285000
         CLI   RCD30LN(@14),255                                 02S0739 02286000
         BE    @RF00739                                         02S0739 02287000
*                     DO;           /* NO                            */ 02288000
*                       IF RCD30LN¬=44 THEN/* IS DSN MAX LENGTH      */ 02289000
         CLI   RCD30LN(@14),44                                  02S0741 02290000
         BE    @RF00741                                         02S0741 02291000
*                         DO;       /* NO                            */ 02292000
*                           K=RCD30LN/16;/* NUMBER OF FULL WORDS     */ 02293000
         SLR   @05,@05                                          02S0743 02294000
         IC    @05,RCD30LN(,@14)                                02S0743 02295000
         LR    K,@05                                            02S0743 02296000
         SRL   K,4                                              02S0743 02297000
*                           MOD=RCD30LN//16;/* REMAINDER OF PARTIAL     02298000
*                                      WORD                          */ 02299000
         LR    @02,@05                                          02S0744 02300000
         SRDA  @02,32                                           02S0744 02301000
         D     @02,@CF00139                                     02S0744 02302000
         LR    MOD,@02                                          02S0744 02303000
*                           IF MOD=0 THEN/* ARE ALL FULL WORDS       */ 02304000
         SLR   @14,@14                                          02S0745 02305000
         CR    MOD,@14                                          02S0745 02306000
         BNE   @RF00745                                         02S0745 02307000
*                             OLDFLG(K+1)=0;/* YES - INDICATE END OF    02308000
*                                      PATTERNS                      */ 02309000
         LR    @07,K                                            02S0746 02310000
         SLA   @07,2                                            02S0746 02311000
         STC   @14,OLDFLG(@07)                                  02S0746 02312000
*                           ELSE                                02S0747 02313000
*                             DO;   /* NO - MODIFY PATTERNS     02S0747 02314000
*                                      ACCORDINGLY                   */ 02315000
         B     @RC00745                                         02S0747 02316000
@RF00745 DS    0H                                               02S0748 02317000
*                               OLDLN(K+1)=OLDLN(K+1)&DATAOFF;/* SET    02318000
*                                      DATA LENGTH TO ZERO           */ 02319000
         LR    @14,K                                            02S0748 02320000
         SLA   @14,2                                            02S0748 02321000
         SLR   @05,@05                                          02S0748 02322000
         IC    @05,OLDLN(@14)                                   02S0748 02323000
         N     @05,@CF00297                                     02S0748 02324000
         STC   @05,OLDLN(@14)                                   02S0748 02325000
*                               OLDLN(K+1)=OLDLN(K+1)|(MOD-1);/* NEW    02326000
*                                      DATA LENGTH                   */ 02327000
         LR    @03,MOD                                          02S0749 02328000
         BCTR  @03,0                                            02S0749 02329000
         OR    @05,@03                                          02S0749 02330000
         STC   @05,OLDLN(@14)                                   02S0749 02331000
*                               OLDFLG(K+2)=0;/* INDICATE END OF        02332000
*                                      PATTERNS                      */ 02333000
         SLR   @07,@07                                          02S0750 02334000
         STC   @07,OLDFLG+4(@14)                                02S0750 02335000
*                             END;                              02S0751 02336000
*                         END;                                  02S0752 02337000
*                     END;                                      02S0753 02338000
*                   ELSE                                        02S0754 02339000
*                     DO;           /* YES - FIELD IS IN ERROR       */ 02340000
         B     @RC00739                                         02S0754 02341000
@RF00739 DS    0H                                               02S0755 02342000
*                       OLDLN(1)=OLDLN(1)&DATAOFF;/* ZERO DATA LENGTH*/ 02343000
         SLR   @14,@14                                          02S0755 02344000
         IC    @14,OLDLN                                        02S0755 02345000
         N     @14,@CF00297                                     02S0755 02346000
         STC   @14,OLDLN                                        02S0755 02347000
*                       OLDLN(1)=OLDLN(1)|DATALN4;/* SET DATA LENGTH    02348000
*                                      TO FORMAT 4 BYTES             */ 02349000
         O     @14,@CF00170                                     02S0756 02350000
         STC   @14,OLDLN                                        02S0756 02351000
*                       OLDFLG(2)=0;/* INDICATE END OF PATTERNS      */ 02352000
         MVI   OLDFLG+4,X'00'                                   02S0757 02353000
*                       RCD30LN=4;  /* MODIFY LENGTH IN ORDER TO        02354000
*                                      ACCESS NEXT FIELD             */ 02355000
         L     @14,DATAPTR(,PLISTPTR)                           02S0758 02356000
         MVI   RCD30LN+46(@14),X'04'                            02S0758 02357000
*                     END;                                      02S0759 02358000
*                   ADPLFMT1=ADDR(GP4TYP12);/* ADDR OF LABELS FOR       02359000
*                                      THIS LINE                     */ 02360000
@RC00739 L     @14,ABDPLPTR(,PLISTPTR)                          02S0760 02361000
         LA    @07,GP4TYP12                                     02S0760 02362000
         ST    @07,ADPLFMT1(,@14)                               02S0760 02363000
*                   ADPLFMT2=ADDR(RCD30LN)+1;/* ADDR OF DATA IN 02S0761 02364000
*                                      BUFFER                        */ 02365000
         L     @07,DATAPTR(,PLISTPTR)                           02S0761 02366000
         LA    @07,RCD30LN+46(,@07)                             02S0761 02367000
         AH    @07,@CH00046                                     02S0761 02368000
         ST    @07,ADPLFMT2(,@14)                               02S0761 02369000
*                   R0=ADDR(DYNAMPTN);/* ADDR OF PATTERNS            */ 02370000
         LA    R0,DYNAMPTN                                      02S0762 02371000
*                   CALL AMDPRFMT;  /* FORMAT THE OLD DSN            */ 02372000
         L     @15,FMTADDR(,PLISTPTR)                           02S0763 02373000
         BALR  @14,@15                                          02S0763 02374000
*                   DYNAMPTN(1:LENGTH(GP4S30C))=GP4S30C;/* MOVE 02S0764 02375000
*                                      PATTERNS TO GETMAIN AREA      */ 02376000
         MVC   DYNAMPTN(13),GP4S30C                             02S0764 02377000
*                   FIELDADR=ADDR(RCD30LN)+RCD30LN+1;/* ADDRESS OF      02378000
*                                      NEW DSN FIELD IN BUFFER       */ 02379000
         LA    @14,46                                           02S0765 02380000
         AL    @14,DATAPTR(,PLISTPTR)                           02S0765 02381000
         LA    @07,RCD30LN(,@14)                                02S0765 02382000
         SLR   @05,@05                                          02S0765 02383000
         IC    @05,RCD30LN(,@14)                                02S0765 02384000
         ALR   @07,@05                                          02S0765 02385000
         AH    @07,@CH00046                                     02S0765 02386000
         ST    @07,FIELDADR                                     02S0765 02387000
*                   IF NXTFIELD¬=ERROR THEN/* IS FIELD IN ERROR      */ 02388000
         CLI   NXTFIELD(@07),255                                02S0766 02389000
         BE    @RF00766                                         02S0766 02390000
*                     DO;           /* NO                            */ 02391000
*                       IF NXTFIELD¬=44 THEN/* IS DSN MAX LENGTH     */ 02392000
         CLI   NXTFIELD(@07),44                                 02S0768 02393000
         BE    @RF00768                                         02S0768 02394000
*                         DO;       /* NO                            */ 02395000
*                           K=NXTFIELD/16;/* NUMBER OF FULL WORDS    */ 02396000
         L     @14,FIELDADR                                     02S0770 02397000
         SLR   @05,@05                                          02S0770 02398000
         IC    @05,NXTFIELD(,@14)                               02S0770 02399000
         LR    K,@05                                            02S0770 02400000
         SRL   K,4                                              02S0770 02401000
*                           MOD=NXTFIELD//16;/* REMAINDER OF PARTIAL    02402000
*                                      WORD                          */ 02403000
         LR    @02,@05                                          02S0771 02404000
         SRDA  @02,32                                           02S0771 02405000
         D     @02,@CF00139                                     02S0771 02406000
         LR    MOD,@02                                          02S0771 02407000
*                           IF MOD=0 THEN/* ARE ALL FULL WORDS       */ 02408000
         SLR   @14,@14                                          02S0772 02409000
         CR    MOD,@14                                          02S0772 02410000
         BNE   @RF00772                                         02S0772 02411000
*                             OLDFLG(K+1)=0;/* YES - INDICATE END OF    02412000
*                                      PATTERNS                      */ 02413000
         LR    @07,K                                            02S0773 02414000
         SLA   @07,2                                            02S0773 02415000
         STC   @14,OLDFLG(@07)                                  02S0773 02416000
*                           ELSE                                02S0774 02417000
*                             DO;   /* NO - MODIFY PATTERNS     02S0774 02418000
*                                      ACCORDINGLY                   */ 02419000
         B     @RC00772                                         02S0774 02420000
@RF00772 DS    0H                                               02S0775 02421000
*                               OLDLN(K+1)=OLDLN(K+1)&DATAOFF;/* SET    02422000
*                                      DATA LENGTH TO ZERO           */ 02423000
         LR    @14,K                                            02S0775 02424000
         SLA   @14,2                                            02S0775 02425000
         SLR   @05,@05                                          02S0775 02426000
         IC    @05,OLDLN(@14)                                   02S0775 02427000
         N     @05,@CF00297                                     02S0775 02428000
         STC   @05,OLDLN(@14)                                   02S0775 02429000
*                               OLDLN(K+1)=OLDLN(K+1)|(MOD-1);/* NEW    02430000
*                                      DATA LENGTH                   */ 02431000
         LR    @03,MOD                                          02S0776 02432000
         BCTR  @03,0                                            02S0776 02433000
         OR    @05,@03                                          02S0776 02434000
         STC   @05,OLDLN(@14)                                   02S0776 02435000
*                               OLDFLG(K+2)=0;/* INDICATE END OF        02436000
*                                      PATTERNS                      */ 02437000
         SLR   @07,@07                                          02S0777 02438000
         STC   @07,OLDFLG+4(@14)                                02S0777 02439000
*                             END;                              02S0778 02440000
*                         END;                                  02S0779 02441000
*                     END;                                      02S0780 02442000
*                   ELSE                                        02S0781 02443000
*                     DO;           /* YES - FIELD IS IN ERROR       */ 02444000
         B     @RC00766                                         02S0781 02445000
@RF00766 DS    0H                                               02S0782 02446000
*                       OLDLN(1)=OLDLN(1)&DATAOFF;/* ZERO DATA LENGTH*/ 02447000
         SLR   @14,@14                                          02S0782 02448000
         IC    @14,OLDLN                                        02S0782 02449000
         N     @14,@CF00297                                     02S0782 02450000
         STC   @14,OLDLN                                        02S0782 02451000
*                       OLDLN(1)=OLDLN(1)|DATALN4;/* SET DATA LENGTH    02452000
*                                      TO FORMAT 4 BYTES             */ 02453000
         O     @14,@CF00170                                     02S0783 02454000
         STC   @14,OLDLN                                        02S0783 02455000
*                       OLDFLG(2)=0;/* INDICATE END OF PATTERNS      */ 02456000
         MVI   OLDFLG+4,X'00'                                   02S0784 02457000
*                       NXTFIELD=4; /* MODIFY LENGTH IN ORDER TO        02458000
*                                      ACCESS NEXT FIELD             */ 02459000
         L     @14,FIELDADR                                     02S0785 02460000
         MVI   NXTFIELD(@14),X'04'                              02S0785 02461000
*                     END;                                      02S0786 02462000
*                   ADPLFMT1=ADDR(GP4TP12A);/* ADDR OF LABELS FOR       02463000
*                                      THIS LINE                     */ 02464000
@RC00766 L     @14,ABDPLPTR(,PLISTPTR)                          02S0787 02465000
         LA    @07,GP4TP12A                                     02S0787 02466000
         ST    @07,ADPLFMT1(,@14)                               02S0787 02467000
*                   ADPLFMT2=FIELDADR+1;/* ADDR OF DATA IN BUFFER    */ 02468000
         LA    @07,1                                            02S0788 02469000
         AL    @07,FIELDADR                                     02S0788 02470000
         ST    @07,ADPLFMT2(,@14)                               02S0788 02471000
*                   R0=ADDR(DYNAMPTN);/* ADDR OF PATTERNS            */ 02472000
         LA    R0,DYNAMPTN                                      02S0789 02473000
*                   CALL AMDPRFMT;  /* FORMAT THE LINE               */ 02474000
         L     @15,FMTADDR(,PLISTPTR)                           02S0790 02475000
         BALR  @14,@15                                          02S0790 02476000
*                   RETCODE=0;      /* INDICATES TO PRINT BUFFER AND    02477000
*                                      RETURN FOR FOURTH PASS        */ 02478000
         SLR   RETCODE,RETCODE                                  02S0791 02479000
*                 END;                                          02S0792 02480000
*               ELSE                                            02S0793 02481000
*                 DO;               /* YES - FORMAT THE FOURTH LINE  */ 02482000
         B     @RC00736                                         02S0793 02483000
@RF00736 DS    0H                                               02S0794 02484000
*                   DYNAMPTN(1:LENGTH(GP4S26C))=GP4S26C;/* MOVE 02S0794 02485000
*                                      PATTERNS TO GETMAIN AREA      */ 02486000
         MVC   DYNAMPTN(41),GP4S26C                             02S0794 02487000
*                   FIELDADR=FIELDADR+NXTFIELD+1;/* ADDR OF VOLIST IN   02488000
*                                      BUFFER                        */ 02489000
         L     @14,FIELDADR                                     02S0795 02490000
         SLR   @07,@07                                          02S0795 02491000
         IC    @07,NXTFIELD(,@14)                               02S0795 02492000
         ALR   @07,@14                                          02S0795 02493000
         AH    @07,@CH00046                                     02S0795 02494000
         ST    @07,FIELDADR                                     02S0795 02495000
*                   IF NXTFIELD=ERROR THEN/* IS FIELD IN ERROR       */ 02496000
         CLI   NXTFIELD(@07),255                                02S0796 02497000
         BNE   @RF00796                                         02S0796 02498000
*                     DO;           /* YES - ONLY FORMAT 4 BYTES     */ 02499000
*                       OLDFLG(1)=OLDFLG(1)|CHARFLAG;/* INDICATE DATA   02500000
*                                      IN EBCDIC                     */ 02501000
         SLR   @14,@14                                          02S0798 02502000
         IC    @14,OLDFLG                                       02S0798 02503000
         O     @14,@CF00092                                     02S0798 02504000
         STC   @14,OLDFLG                                       02S0798 02505000
*                       OLDFLG(2)=0;/* INDICATE END OF PATTERNS      */ 02506000
         MVI   OLDFLG+4,X'00'                                   02S0799 02507000
*                     END;                                      02S0800 02508000
*                   ELSE                                        02S0801 02509000
*                     DO;           /* NO - DETERMINE HOW MANY BYTES    02510000
*                                      IN VOLIST                     */ 02511000
         B     @RC00796                                         02S0801 02512000
@RF00796 DS    0H                                               02S0802 02513000
*                       IF NXTFIELD<4 THEN/* IS VOLIST LESS THAN ONE    02514000
*                                      WORD                          */ 02515000
         L     @14,FIELDADR                                     02S0802 02516000
         CLI   NXTFIELD(@14),4                                  02S0802 02517000
         BNL   @RF00802                                         02S0802 02518000
*                         DO;       /* YES                           */ 02519000
*                           OLDLN(1)=OLDLN(1)&DATAOFF;/* SET DATA       02520000
*                                      LENGTH TO 0                   */ 02521000
         SLR   @07,@07                                          02S0804 02522000
         IC    @07,OLDLN                                        02S0804 02523000
         N     @07,@CF00297                                     02S0804 02524000
         STC   @07,OLDLN                                        02S0804 02525000
*                           OLDLN(1)=OLDLN(1)|(NXTFIELD-1);/* NEW       02526000
*                                      DATA LENGTH                   */ 02527000
         SLR   @05,@05                                          02S0805 02528000
         IC    @05,NXTFIELD(,@14)                               02S0805 02529000
         BCTR  @05,0                                            02S0805 02530000
         OR    @07,@05                                          02S0805 02531000
         STC   @07,OLDLN                                        02S0805 02532000
*                           OLDFLG(2)=0;/* INDICATE END OF PATTERNS  */ 02533000
         MVI   OLDFLG+4,X'00'                                   02S0806 02534000
*                         END;                                  02S0807 02535000
*                       ELSE                                    02S0808 02536000
*                         DO;       /* NO - MODIFY PATTERNS          */ 02537000
         B     @RC00802                                         02S0808 02538000
@RF00802 DS    0H                                               02S0809 02539000
*                           K=NXTFIELD/4;/* NUMBER OF FULL WORDS     */ 02540000
         L     @14,FIELDADR                                     02S0809 02541000
         SLR   @05,@05                                          02S0809 02542000
         IC    @05,NXTFIELD(,@14)                               02S0809 02543000
         LR    K,@05                                            02S0809 02544000
         SRL   K,2                                              02S0809 02545000
*                           MOD=NXTFIELD//4;/* REMAINDER OF PARTIAL     02546000
*                                      WORD                          */ 02547000
         LR    @02,@05                                          02S0810 02548000
         SRDA  @02,32                                           02S0810 02549000
         D     @02,@CF00099                                     02S0810 02550000
         LR    MOD,@02                                          02S0810 02551000
*                           IF MOD=0 THEN/* ARE ALL FULL WORDS       */ 02552000
         SLR   @14,@14                                          02S0811 02553000
         CR    MOD,@14                                          02S0811 02554000
         BNE   @RF00811                                         02S0811 02555000
*                             OLDFLG(K+1)=0;/* YES - INDICATE END OF    02556000
*                                      PATTERNS                      */ 02557000
         LR    @07,K                                            02S0812 02558000
         SLA   @07,2                                            02S0812 02559000
         STC   @14,OLDFLG(@07)                                  02S0812 02560000
*                           ELSE                                02S0813 02561000
*                             DO;   /* NO - MODIFY PATTERNS     02S0813 02562000
*                                      ACCORDINGLY                   */ 02563000
         B     @RC00811                                         02S0813 02564000
@RF00811 DS    0H                                               02S0814 02565000
*                               OLDLN(K+1)=OLDLN(K+1)&DATAOFF;/* SET    02566000
*                                      DATA LENGTH TO ZERO           */ 02567000
         LR    @14,K                                            02S0814 02568000
         SLA   @14,2                                            02S0814 02569000
         SLR   @05,@05                                          02S0814 02570000
         IC    @05,OLDLN(@14)                                   02S0814 02571000
         N     @05,@CF00297                                     02S0814 02572000
         STC   @05,OLDLN(@14)                                   02S0814 02573000
*                               OLDLN(K+1)=OLDLN(K+1)|(MOD-1);/* NEW    02574000
*                                      DATA LENGTH                   */ 02575000
         LR    @03,MOD                                          02S0815 02576000
         BCTR  @03,0                                            02S0815 02577000
         OR    @05,@03                                          02S0815 02578000
         STC   @05,OLDLN(@14)                                   02S0815 02579000
*                               OLDFLG(K+2)=0;/* INDICATE END OF        02580000
*                                      PATTERNS                      */ 02581000
         SLR   @07,@07                                          02S0816 02582000
         STC   @07,OLDFLG+4(@14)                                02S0816 02583000
*                             END;                              02S0817 02584000
*                         END;                                  02S0818 02585000
@RC00811 DS    0H                                               02S0819 02586000
*                     END;                                      02S0819 02587000
@RC00802 DS    0H                                               02S0820 02588000
*                   ADPLFMT1=ADDR(GP4TYP2);/* ADDR OF LABEL FOR THIS    02589000
*                                      LINE                          */ 02590000
@RC00796 L     @14,ABDPLPTR(,PLISTPTR)                          02S0820 02591000
         LA    @07,GP4TYP2                                      02S0820 02592000
         ST    @07,ADPLFMT1(,@14)                               02S0820 02593000
*                   ADPLFMT2=FIELDADR+1;/* ADDR OF DATA IN BUFFER    */ 02594000
         LA    @07,1                                            02S0821 02595000
         AL    @07,FIELDADR                                     02S0821 02596000
         ST    @07,ADPLFMT2(,@14)                               02S0821 02597000
*                   R0=ADDR(DYNAMPTN);/* ADDR OF PATTERNS            */ 02598000
         LA    R0,DYNAMPTN                                      02S0822 02599000
*                   CALL AMDPRFMT;  /* FORMAT THE LINE               */ 02600000
         L     @15,FMTADDR(,PLISTPTR)                           02S0823 02601000
         BALR  @14,@15                                          02S0823 02602000
*                   RETCODE=4;      /* INDICATES TO PRINT BUFFER AND    02603000
*                                      GET NEXT RECORD               */ 02604000
         LA    RETCODE,4                                        02S0824 02605000
*                 END;                                          02S0825 02606000
*             END;                                              02S0826 02607000
*         END;                                                  02S0827 02608000
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */ 02609000
         B     CE0001@                                          02S0828 02610000
*     END S30;                      /* END OF SUBCASE                */ 02611000
*                                                               02S0830 02612000
*     /***************************************************************/ 02613000
*     /*                                                             */ 02614000
*     /* THIS ROUTINE WILL PROCESS THE FOLLOWING SVCS: 32,33,78. THE */ 02615000
*     /* FORMATTING CONSISTS OF THE BASIC RECORD + A CUU + A VARIABLE*/ 02616000
*     /* LENGTH DSNAME/A CUU ALONE.                                  */ 02617000
*     /*                                                             */ 02618000
*     /***************************************************************/ 02619000
*                                                               02S0830 02620000
*S32:                                                           02S0830 02621000
*     DO;                           /* SUBCASE                       */ 02622000
S32      DS    0H                                               02S0831 02623000
*       IF TIMESW=0 THEN            /* HAS SECOND LINE BEEN FORMATTED*/ 02624000
         SLR   @14,@14                                          02S0831 02625000
         CH    @14,TIMESW                                       02S0831 02626000
         BNE   @RF00831                                         02S0831 02627000
*         RETCODE=0;                /* NO - INDICATES TO PRINT BUFFER   02628000
*                                      AND RETURN FOR SECOND PASS    */ 02629000
         LR    RETCODE,@14                                      02S0832 02630000
*       ELSE                                                    02S0833 02631000
*         DO;                       /* YES - CHECK FIELDS FOR ERRORS    02632000
*                                      & FORMAT THEM                 */ 02633000
         B     @RC00831                                         02S0833 02634000
@RF00831 DS    0H                                               02S0834 02635000
*           DYNAMPTN(1:LENGTH(GP4S32))=GP4S32;/* MOVE PATTERNS TO       02636000
*                                      GETMAINED AREA                */ 02637000
         MVC   DYNAMPTN(21),GP4S32                              02S0834 02638000
*           IF RCD32CUU=ASTER2|RCD32CUU=PEES2|RCD32CUU=ESSES2 THEN/*    02639000
*                                      IS FIELD IN ERROR             */ 02640000
         LA    @14,46                                           02S0835 02641000
         AL    @14,DATAPTR(,PLISTPTR)                           02S0835 02642000
         CLC   RCD32CUU(2,@14),ASTER2                           02S0835 02643000
         BE    @RT00835                                         02S0835 02644000
         CLC   RCD32CUU(2,@14),PEES2                            02S0835 02645000
         BE    @RT00835                                         02S0835 02646000
         CLC   RCD32CUU(2,@14),ESSES2                           02S0835 02647000
         BNE   @RF00835                                         02S0835 02648000
@RT00835 DS    0H                                               02S0836 02649000
*             OLDFLG(1)=OLDFLG(1)|CHARFLAG;/* INDICATE DATA IN EBCDIC*/ 02650000
         SLR   @14,@14                                          02S0836 02651000
         IC    @14,OLDFLG                                       02S0836 02652000
         O     @14,@CF00092                                     02S0836 02653000
         STC   @14,OLDFLG                                       02S0836 02654000
*           IF SVCNUMBR¬=33 THEN    /* IS THIS SVC 33 OR 78          */ 02655000
@RF00835 CH    SVCNUMBR,@CH00514                                02S0837 02656000
         BE    @RF00837                                         02S0837 02657000
*             OLDFLG(2)=0;          /* YES - INDICATE END OF PATTERNS*/ 02658000
         MVI   OLDFLG+4,X'00'                                   02S0838 02659000
*           ELSE                                                02S0839 02660000
*             DO;                   /* NO - ITS SVC 32 - FORMAT THE     02661000
*                                      DDNAME ALSO                   */ 02662000
         B     @RC00837                                         02S0839 02663000
@RF00837 DS    0H                                               02S0840 02664000
*               IF RCD32LN¬=ERROR THEN/* IS FIELD IN ERROR           */ 02665000
         LA    @14,46                                           02S0840 02666000
         AL    @14,DATAPTR(,PLISTPTR)                           02S0840 02667000
         CLI   RCD32LN(@14),255                                 02S0840 02668000
         BE    @RF00840                                         02S0840 02669000
*                 DO;               /* NO                            */ 02670000
*                   IF RCD32LN¬=44 THEN/* IS DSN MAX LENGTH          */ 02671000
         CLI   RCD32LN(@14),44                                  02S0842 02672000
         BE    @RF00842                                         02S0842 02673000
*                     DO;           /* NO                            */ 02674000
*                       K=RCD32LN/16;/* NUMBER OF FULL WORDS         */ 02675000
         SLR   @05,@05                                          02S0844 02676000
         IC    @05,RCD32LN(,@14)                                02S0844 02677000
         LR    K,@05                                            02S0844 02678000
         SRL   K,4                                              02S0844 02679000
*                       MOD=RCD32LN//16;/* REMAINDER OF PARTIAL WORD */ 02680000
         LR    @02,@05                                          02S0845 02681000
         SRDA  @02,32                                           02S0845 02682000
         D     @02,@CF00139                                     02S0845 02683000
         LR    MOD,@02                                          02S0845 02684000
*                       IF MOD=0 THEN/* ARE ALL FULL WORDS           */ 02685000
         SLR   @14,@14                                          02S0846 02686000
         CR    MOD,@14                                          02S0846 02687000
         BNE   @RF00846                                         02S0846 02688000
*                         OLDFLG(K+3)=0;/* YES - INDICATE END OF        02689000
*                                      PATTERNS                      */ 02690000
         LR    @07,K                                            02S0847 02691000
         SLA   @07,2                                            02S0847 02692000
         STC   @14,OLDFLG+8(@07)                                02S0847 02693000
*                       ELSE                                    02S0848 02694000
*                         DO;       /* NO - MODIFY PATTERNS     02S0848 02695000
*                                      ACCORDINGLY                   */ 02696000
         B     @RC00846                                         02S0848 02697000
@RF00846 DS    0H                                               02S0849 02698000
*                           OLDLN(K+3)=OLDLN(K+3)&DATAOFF;/* SET DATA   02699000
*                                      LENGTH TO ZERO                */ 02700000
         LR    @14,K                                            02S0849 02701000
         SLA   @14,2                                            02S0849 02702000
         SLR   @05,@05                                          02S0849 02703000
         IC    @05,OLDLN+8(@14)                                 02S0849 02704000
         N     @05,@CF00297                                     02S0849 02705000
         STC   @05,OLDLN+8(@14)                                 02S0849 02706000
*                           OLDLN(K+3)=OLDLN(K+3)|(MOD-1);/* NEW DATA   02707000
*                                      LENGTH                        */ 02708000
         LR    @03,MOD                                          02S0850 02709000
         BCTR  @03,0                                            02S0850 02710000
         OR    @05,@03                                          02S0850 02711000
         STC   @05,OLDLN+8(@14)                                 02S0850 02712000
*                           OLDFLG(K+4)=0;/* INDICATE END OF PATTERNS*/ 02713000
         SLR   @07,@07                                          02S0851 02714000
         STC   @07,OLDFLG+12(@14)                               02S0851 02715000
*                         END;                                  02S0852 02716000
*                     END;                                      02S0853 02717000
*                 END;                                          02S0854 02718000
*               ELSE                                            02S0855 02719000
*                 DO;               /* YES - FIELD IS IN ERROR       */ 02720000
         B     @RC00840                                         02S0855 02721000
@RF00840 DS    0H                                               02S0856 02722000
*                   OLDLN(3)=OLDLN(3)&DATAOFF;/* ZERO DATA LENGTH    */ 02723000
         SLR   @14,@14                                          02S0856 02724000
         IC    @14,OLDLN+8                                      02S0856 02725000
         N     @14,@CF00297                                     02S0856 02726000
         STC   @14,OLDLN+8                                      02S0856 02727000
*                   OLDLN(3)=OLDLN(3)|DATALN4;/* SET DATA LENGTH TO     02728000
*                                      FORMAT 4 BYTES                */ 02729000
         O     @14,@CF00170                                     02S0857 02730000
         STC   @14,OLDLN+8                                      02S0857 02731000
*                   OLDFLG(4)=0;    /* INDICATE END OF PATTERNS      */ 02732000
         MVI   OLDFLG+12,X'00'                                  02S0858 02733000
*                 END;                                          02S0859 02734000
*             END;                                              02S0860 02735000
@RC00840 DS    0H                                               02S0861 02736000
*           ADPLFMT1=ADDR(GP4TYP13);/* ADDR OF LABELS FOR THIS LINE  */ 02737000
@RC00837 L     @14,ABDPLPTR(,PLISTPTR)                          02S0861 02738000
         LA    @07,GP4TYP13                                     02S0861 02739000
         ST    @07,ADPLFMT1(,@14)                               02S0861 02740000
*           ADPLFMT2=ADDR(RCD32CUU);/* ADDR OF DATA IN BUFFER        */ 02741000
         LA    @07,46                                           02S0862 02742000
         AL    @07,DATAPTR(,PLISTPTR)                           02S0862 02743000
         ST    @07,ADPLFMT2(,@14)                               02S0862 02744000
*           R0=ADDR(DYNAMPTN);      /* ADDR OF PATTERNS              */ 02745000
         LA    R0,DYNAMPTN                                      02S0863 02746000
*           CALL AMDPRFMT;          /* FORMAT THE LINE               */ 02747000
         L     @15,FMTADDR(,PLISTPTR)                           02S0864 02748000
         BALR  @14,@15                                          02S0864 02749000
*           RETCODE=4;              /* INDICATES TO PRINT BUFFER AND    02750000
*                                      GET NEXT RECORD               */ 02751000
         LA    RETCODE,4                                        02S0865 02752000
*         END;                                                  02S0866 02753000
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */ 02754000
         B     CE0001@                                          02S0867 02755000
*     END S32;                      /* END OF SUBCASE                */ 02756000
*                                                               02S0869 02757000
*     /***************************************************************/ 02758000
*     /*                                                             */ 02759000
*     /* THIS ROUTINE WILL PROCESS SVC 42. THE FORMATTING CONSISTS OF*/ 02760000
*     /* THE BASIC RECORD + A VARIABLE LENGTH SUPREVISOR LIST + A    */ 02761000
*     /* VARIABLE LENGTH PROBLEM PROGRAM LIST.                       */ 02762000
*     /*                                                             */ 02763000
*     /***************************************************************/ 02764000
*                                                               02S0869 02765000
*S42:                                                           02S0869 02766000
*     DO;                           /* SUBCASE                       */ 02767000
S42      DS    0H                                               02S0870 02768000
*       IF TIMESW=0|TIMESW=1 THEN   /* HAS BASIC RECORD BEEN    02S0870 02769000
*                                      FORMATTED                     */ 02770000
         LH    @14,TIMESW                                       02S0870 02771000
         LTR   @14,@14                                          02S0870 02772000
         BZ    @RT00870                                         02S0870 02773000
         CH    @14,@CH00046                                     02S0870 02774000
         BNE   @RF00870                                         02S0870 02775000
@RT00870 DS    0H                                               02S0871 02776000
*         RETCODE=0;                /* NO - INDICATES TO PRINT BUFFER   02777000
*                                      AND RETURN FOR THIRD PASS     */ 02778000
         SLR   RETCODE,RETCODE                                  02S0871 02779000
*       ELSE                                                    02S0872 02780000
*         DO;                       /* YES                           */ 02781000
         B     @RC00870                                         02S0872 02782000
@RF00870 DS    0H                                               02S0873 02783000
*           IF TIMESW=2 THEN        /* HAS THIRD LINE BEEN FORMATTED */ 02784000
         CLC   TIMESW(2),@CH00078                               02S0873 02785000
         BNE   @RF00873                                         02S0873 02786000
*             DO;                   /* NO                            */ 02787000
*               DYNAMPTN(1:LENGTH(GP4S42A))=GP4S42A;/* MOVE PATTERNS    02788000
*                                      TO GETMAIN AREA               */ 02789000
         MVC   DYNAMPTN(37),GP4S42A                             02S0875 02790000
*               IF RCD42LN=ERROR THEN/* IS FIELD IN ERROR            */ 02791000
         L     @14,DATAPTR(,PLISTPTR)                           02S0876 02792000
         CLI   RCD42LN+46(@14),255                              02S0876 02793000
         BNE   @RF00876                                         02S0876 02794000
*                 DO;               /* YES - FORMAT ONLY 4 BYTES     */ 02795000
*                   OLDFLG(1)=OLDFLG(1)|CHARFLAG;/* INDICATE DATA IN    02796000
*                                      EBCDIC                        */ 02797000
         SLR   @14,@14                                          02S0878 02798000
         IC    @14,OLDFLG                                       02S0878 02799000
         O     @14,@CF00092                                     02S0878 02800000
         STC   @14,OLDFLG                                       02S0878 02801000
*                   OLDFLG(2)=0;    /* INDICATE END OF PATTERNS      */ 02802000
         MVI   OLDFLG+4,X'00'                                   02S0879 02803000
*                 END;                                          02S0880 02804000
*               ELSE                                            02S0881 02805000
*                 DO;               /* NO - DETERMINE HOW MANY BYTES    02806000
*                                      IN SPVSR LIST                 */ 02807000
         B     @RC00876                                         02S0881 02808000
@RF00876 DS    0H                                               02S0882 02809000
*                   IF RCD42LN>36 THEN/* DOES DATA NEED TWO LINES    */ 02810000
         LA    @14,46                                           02S0882 02811000
         AL    @14,DATAPTR(,PLISTPTR)                           02S0882 02812000
         CLI   RCD42LN(@14),36                                  02S0882 02813000
         BNH   @RF00882                                         02S0882 02814000
*                     DATALNTH=RCD42LN-36;/* YES - LENGTH OF DATA FOR   02815000
*                                      2ND LINE OF LIST              */ 02816000
         SLR   @07,@07                                          02S0883 02817000
         IC    @07,RCD42LN(,@14)                                02S0883 02818000
         SH    @07,@CH01324                                     02S0883 02819000
         STC   @07,DATALNTH                                     02S0883 02820000
*                   IF RCD42LN<4 THEN/* IS LIST LESS THAN ONE WORD   */ 02821000
@RF00882 LA    @14,46                                           02S0884 02822000
         AL    @14,DATAPTR(,PLISTPTR)                           02S0884 02823000
         CLI   RCD42LN(@14),4                                   02S0884 02824000
         BNL   @RF00884                                         02S0884 02825000
*                     DO;           /* YES                           */ 02826000
*                       OLDLN(1)=OLDLN(1)&DATAOFF;/* SET DATA LENGTH    02827000
*                                      TO 0                          */ 02828000
         SLR   @07,@07                                          02S0886 02829000
         IC    @07,OLDLN                                        02S0886 02830000
         N     @07,@CF00297                                     02S0886 02831000
         STC   @07,OLDLN                                        02S0886 02832000
*                       OLDLN(1)=OLDLN(1)|(RCD42LN-1);/* NEW DATA       02833000
*                                      LENGTH                        */ 02834000
         SLR   @05,@05                                          02S0887 02835000
         IC    @05,RCD42LN(,@14)                                02S0887 02836000
         BCTR  @05,0                                            02S0887 02837000
         OR    @07,@05                                          02S0887 02838000
         STC   @07,OLDLN                                        02S0887 02839000
*                       OLDFLG(2)=0;/* INDICATE END OF PATTERNS      */ 02840000
         MVI   OLDFLG+4,X'00'                                   02S0888 02841000
*                     END;                                      02S0889 02842000
*                   ELSE                                        02S0890 02843000
*                     DO;           /* NO - MODIFY PATTERNS     02S0890 02844000
*                                      ACCORDINGLY                   */ 02845000
         B     @RC00884                                         02S0890 02846000
@RF00884 DS    0H                                               02S0891 02847000
*                       K=RCD42LN/4;/* NUMBER OF FULL WORDS          */ 02848000
         L     @14,DATAPTR(,PLISTPTR)                           02S0891 02849000
         SLR   @05,@05                                          02S0891 02850000
         IC    @05,RCD42LN+46(,@14)                             02S0891 02851000
         LR    K,@05                                            02S0891 02852000
         SRL   K,2                                              02S0891 02853000
*                       MOD=RCD42LN//4;/* REMAINDER OF PARTIAL WORD  */ 02854000
         LR    @02,@05                                          02S0892 02855000
         SRDA  @02,32                                           02S0892 02856000
         D     @02,@CF00099                                     02S0892 02857000
         LR    MOD,@02                                          02S0892 02858000
*                       IF MOD=0 THEN/* ARE ALL FULL WORDS           */ 02859000
         SLR   @14,@14                                          02S0893 02860000
         CR    MOD,@14                                          02S0893 02861000
         BNE   @RF00893                                         02S0893 02862000
*                         OLDFLG(K+1)=0;/* YES - INDICATE END OF        02863000
*                                      PATTERNS                      */ 02864000
         LR    @07,K                                            02S0894 02865000
         SLA   @07,2                                            02S0894 02866000
         STC   @14,OLDFLG(@07)                                  02S0894 02867000
*                       ELSE                                    02S0895 02868000
*                         DO;       /* NO - MODIFY PATTERNS     02S0895 02869000
*                                      ACCORDINGLY                   */ 02870000
         B     @RC00893                                         02S0895 02871000
@RF00893 DS    0H                                               02S0896 02872000
*                           OLDLN(K+1)=OLDLN(K+1)&DATAOFF;/* SET DATA   02873000
*                                      LENGTH TO ZERO                */ 02874000
         LR    @14,K                                            02S0896 02875000
         SLA   @14,2                                            02S0896 02876000
         SLR   @05,@05                                          02S0896 02877000
         IC    @05,OLDLN(@14)                                   02S0896 02878000
         N     @05,@CF00297                                     02S0896 02879000
         STC   @05,OLDLN(@14)                                   02S0896 02880000
*                           OLDLN(K+1)=OLDLN(K+1)|(MOD-1);/* NEW DATA   02881000
*                                      LENGTH                        */ 02882000
         LR    @03,MOD                                          02S0897 02883000
         BCTR  @03,0                                            02S0897 02884000
         OR    @05,@03                                          02S0897 02885000
         STC   @05,OLDLN(@14)                                   02S0897 02886000
*                           OLDFLG(K+2)=0;/* INDICATE END OF PATTERNS*/ 02887000
         SLR   @07,@07                                          02S0898 02888000
         STC   @07,OLDFLG+4(@14)                                02S0898 02889000
*                         END;                                  02S0899 02890000
*                     END;                                      02S0900 02891000
@RC00893 DS    0H                                               02S0901 02892000
*                 END;                                          02S0901 02893000
@RC00884 DS    0H                                               02S0902 02894000
*               ADPLFMT1=ADDR(GP4TYP16);/* ADDR OF LABEL FOR THIS       02895000
*                                      LINE                          */ 02896000
@RC00876 L     @14,ABDPLPTR(,PLISTPTR)                          02S0902 02897000
         LA    @07,GP4TYP16                                     02S0902 02898000
         ST    @07,ADPLFMT1(,@14)                               02S0902 02899000
*               ADPLFMT2=ADDR(RCD42LN)+1;/* ADDR OF DATA IN BUFFER   */ 02900000
         LA    @07,47                                           02S0903 02901000
         AL    @07,DATAPTR(,PLISTPTR)                           02S0903 02902000
         ST    @07,ADPLFMT2(,@14)                               02S0903 02903000
*               R0=ADDR(DYNAMPTN);  /* ADDR OF PATTERNS              */ 02904000
         LA    R0,DYNAMPTN                                      02S0904 02905000
*               CALL AMDPRFMT;      /* FORMAT THE LINE               */ 02906000
         L     @15,FMTADDR(,PLISTPTR)                           02S0905 02907000
         BALR  @14,@15                                          02S0905 02908000
*               RETCODE=0;          /* INDICATES TO PRINT BUFFER AND    02909000
*                                      RETURN FOR FOURTH PASS        */ 02910000
         SLR   RETCODE,RETCODE                                  02S0906 02911000
*             END;                                              02S0907 02912000
*           ELSE                                                02S0908 02913000
*             DO;                   /* YES                           */ 02914000
         B     @RC00873                                         02S0908 02915000
@RF00873 DS    0H                                               02S0909 02916000
*               IF TIMESW=3 THEN    /* HAS LINE 4 BEEN FORMATTED     */ 02917000
         CLC   TIMESW(2),@CH00170                               02S0909 02918000
         BNE   @RF00909                                         02S0909 02919000
*                 DO;               /* NO                            */ 02920000
*                   IF RCD42LN=ERROR THEN/* WAS FIELD IN ERROR       */ 02921000
         LA    @14,46                                           02S0911 02922000
         AL    @14,DATAPTR(,PLISTPTR)                           02S0911 02923000
         CLI   RCD42LN(@14),255                                 02S0911 02924000
         BNE   @RF00911                                         02S0911 02925000
*                     DO;           /* YES                           */ 02926000
*                       RCD42LN=4;  /* MODIFY LENGTH IN ORDER TO        02927000
*                                      ACCESS NEXT FIELD             */ 02928000
         MVI   RCD42LN(@14),X'04'                               02S0913 02929000
*                       GO TO FMTPLIST;/* FORMAT PLIST ON FOURTH LINE*/ 02930000
         B     FMTPLIST                                         02S0914 02931000
*                     END;                                      02S0915 02932000
*                   ELSE                                        02S0916 02933000
*                     DO;           /* CHECK SPVR LIST SIZE          */ 02934000
@RF00911 DS    0H                                               02S0917 02935000
*                       IF RCD42LN<=36 THEN/* DOES SPVR LIST NEED 2     02936000
*                                      LINES                         */ 02937000
         L     @14,DATAPTR(,PLISTPTR)                           02S0917 02938000
         CLI   RCD42LN+46(@14),36                               02S0917 02939000
         BNH   @RT00917                                         02S0917 02940000
*                         GO TO FMTPLIST;/* NO - FORMAT PLIST ON        02941000
*                                      FOURTH LINE                   */ 02942000
*                       ELSE                                    02S0919 02943000
*                         DO;       /* YES - FORMAT REMAINDER OF LIST*/ 02944000
*                           DYNAMPTN(1:LENGTH(GP4S42B))=GP4S42B;/*      02945000
*                                      MOVE PATTERNS TO GETMAIN AREA */ 02946000
         MVC   DYNAMPTN(25),GP4S42B                             02S0920 02947000
*                           IF DATALNTH<4 THEN/* IS PLIST LESS THAN     02948000
*                                      ONE WORD                      */ 02949000
         CLI   DATALNTH,4                                       02S0921 02950000
         BNL   @RF00921                                         02S0921 02951000
*                             DO;   /* YES                           */ 02952000
*                               OLDLN(1)=OLDLN(1)&DATAOFF;/* SET DATA   02953000
*                                      LENGTH TO 0                   */ 02954000
         SLR   @14,@14                                          02S0923 02955000
         IC    @14,OLDLN                                        02S0923 02956000
         N     @14,@CF00297                                     02S0923 02957000
         STC   @14,OLDLN                                        02S0923 02958000
*                               OLDLN(1)=OLDLN(1)|(DATALNTH-1);/* NEW   02959000
*                                      DATA LENGTH                   */ 02960000
         SLR   @07,@07                                          02S0924 02961000
         IC    @07,DATALNTH                                     02S0924 02962000
         BCTR  @07,0                                            02S0924 02963000
         OR    @14,@07                                          02S0924 02964000
         STC   @14,OLDLN                                        02S0924 02965000
*                               OLDFLG(2)=0;/* INDICATE END OF  02S0925 02966000
*                                      PATTERNS                      */ 02967000
         MVI   OLDFLG+4,X'00'                                   02S0925 02968000
*                             END;                              02S0926 02969000
*                           ELSE                                02S0927 02970000
*                             DO;   /* NO - MODIFY PATTERNS          */ 02971000
         B     @RC00921                                         02S0927 02972000
@RF00921 DS    0H                                               02S0928 02973000
*                               K=DATALNTH/4;/* NUMBER OF FULL WORDS */ 02974000
         SLR   @14,@14                                          02S0928 02975000
         IC    @14,DATALNTH                                     02S0928 02976000
         LR    K,@14                                            02S0928 02977000
         SRL   K,2                                              02S0928 02978000
*                               MOD=DATALNTH//4;/* REMAINDER OF 02S0929 02979000
*                                      PARTIAL WORD                  */ 02980000
         LR    @02,@14                                          02S0929 02981000
         SRDA  @02,32                                           02S0929 02982000
         D     @02,@CF00099                                     02S0929 02983000
         LR    MOD,@02                                          02S0929 02984000
*                               IF MOD=0 THEN/* ARE ALL FULL WORDS   */ 02985000
         SLR   @14,@14                                          02S0930 02986000
         CR    MOD,@14                                          02S0930 02987000
         BNE   @RF00930                                         02S0930 02988000
*                                 OLDFLG(K+1)=0;/* YES - INDICATE END   02989000
*                                      OF PATTERNS                   */ 02990000
         LR    @07,K                                            02S0931 02991000
         SLA   @07,2                                            02S0931 02992000
         STC   @14,OLDFLG(@07)                                  02S0931 02993000
*                               ELSE                            02S0932 02994000
*                                 DO;/* NO - MODIFY PATTERNS    02S0932 02995000
*                                      ACCORDINGLY                   */ 02996000
         B     @RC00930                                         02S0932 02997000
@RF00930 DS    0H                                               02S0933 02998000
*                                   OLDLN(K+1)=OLDLN(K+1)&DATAOFF;/*    02999000
*                                      SET DATA LENGTH TO ZERO       */ 03000000
         LR    @14,K                                            02S0933 03001000
         SLA   @14,2                                            02S0933 03002000
         SLR   @05,@05                                          02S0933 03003000
         IC    @05,OLDLN(@14)                                   02S0933 03004000
         N     @05,@CF00297                                     02S0933 03005000
         STC   @05,OLDLN(@14)                                   02S0933 03006000
*                                   OLDLN(K+1)=OLDLN(K+1)|(MOD-1);/*    03007000
*                                      NEW DATA LENGTH               */ 03008000
         LR    @03,MOD                                          02S0934 03009000
         BCTR  @03,0                                            02S0934 03010000
         OR    @05,@03                                          02S0934 03011000
         STC   @05,OLDLN(@14)                                   02S0934 03012000
*                                   OLDFLG(K+2)=0;/* INDICATE END OF    03013000
*                                      PATTERNS                      */ 03014000
         SLR   @07,@07                                          02S0935 03015000
         STC   @07,OLDFLG+4(@14)                                02S0935 03016000
*                                 END;                          02S0936 03017000
*                             END;                              02S0937 03018000
@RC00930 DS    0H                                               02S0938 03019000
*                         END;                                  02S0938 03020000
@RC00921 DS    0H                                               02S0939 03021000
*                       R0=ADDR(DYNAMPTN);/* ADDR OF PATTERNS        */ 03022000
         LA    R0,DYNAMPTN                                      02S0939 03023000
*                       CALL AMDPRFMT;/* FORMAT THE LINE             */ 03024000
         L     @15,FMTADDR(,PLISTPTR)                           02S0940 03025000
         BALR  @14,@15                                          02S0940 03026000
*                       RETCODE=0;  /* INDICATES TO PRINT BUFFER AND    03027000
*                                      RETURN FOR FIFTH PASS         */ 03028000
         SLR   RETCODE,RETCODE                                  02S0941 03029000
*                     END;                                      02S0942 03030000
*                 END;                                          02S0943 03031000
*               ELSE                                            02S0944 03032000
*                 DO;               /* YES - FORMAT FIFTH LINE       */ 03033000
         B     @RC00909                                         02S0944 03034000
@RF00909 DS    0H                                               02S0945 03035000
*FMTPLIST:                                                      02S0945 03036000
*                   DYNAMPTN(1:LENGTH(GP4S42C))=GP4S42C;/* MOVE 02S0945 03037000
*                                      PATTERNS TO GETMAIN AREA      */ 03038000
FMTPLIST MVC   DYNAMPTN(41),GP4S42C                             02S0945 03039000
*                   R0=ADDR(DYNAMPTN);/* ADDR OF PATTERNS    @YM03669*/ 03040000
         LA    R0,DYNAMPTN                                      02S0946 03041000
*                   FIELDADR=ADDR(RCD42LN)+RCD42LN+1;/* ADDR OF PROB    03042000
*                                      PLIST IN BUFFER               */ 03043000
         LA    @14,46                                           02S0947 03044000
         AL    @14,DATAPTR(,PLISTPTR)                           02S0947 03045000
         SLR   @07,@07                                          02S0947 03046000
         IC    @07,RCD42LN(,@14)                                02S0947 03047000
         ALR   @07,@14                                          02S0947 03048000
         AH    @07,@CH00046                                     02S0947 03049000
         ST    @07,FIELDADR                                     02S0947 03050000
*                   IF NXTFIELD¬=ERROR THEN/* IS FIELD IN ERROR      */ 03051000
         CLI   NXTFIELD(@07),255                                02S0948 03052000
         BE    @RF00948                                         02S0948 03053000
*                     DO;           /* NO-CHECK DATA LENGTH FOR ZERO */ 03054000
*                       IF NXTFIELD=0 THEN/* IS THERE ANY DATA  02S0950 03055000
*                                                            @YM03669*/ 03056000
         CLI   NXTFIELD(@07),0                                  02S0950 03057000
         BNE   @RF00950                                         02S0950 03058000
*                         R0=ADDR(GP4S42D);/* NO - ADDR OF FORMAT       03059000
*                                      PATTERNS FOR THIS LINE   02S0951 03060000
*                                                            @YM03669*/ 03061000
         LA    R0,GP4S42D                                       02S0951 03062000
*                       ELSE                                    02S0952 03063000
*                         DO;       /* YES - THERE IS DATA           */ 03064000
         B     @RC00950                                         02S0952 03065000
@RF00950 DS    0H                                               02S0953 03066000
*                           K=NXTFIELD/4;/* NUMBER OF FULL WORDS     */ 03067000
         L     @14,FIELDADR                                     02S0953 03068000
         SLR   @05,@05                                          02S0953 03069000
         IC    @05,NXTFIELD(,@14)                               02S0953 03070000
         LR    K,@05                                            02S0953 03071000
         SRL   K,2                                              02S0953 03072000
*                           MOD=NXTFIELD//4;/* REMAINDER OF PARTIAL     03073000
*                                      WORD                          */ 03074000
         LR    @02,@05                                          02S0954 03075000
         SRDA  @02,32                                           02S0954 03076000
         D     @02,@CF00099                                     02S0954 03077000
         LR    MOD,@02                                          02S0954 03078000
*                           IF MOD=0 THEN/* ARE ALL FULL WORDS       */ 03079000
         SLR   @14,@14                                          02S0955 03080000
         CR    MOD,@14                                          02S0955 03081000
         BNE   @RF00955                                         02S0955 03082000
*                             OLDFLG(K+1)=0;/* YES - INDICATE END OF    03083000
*                                      PATTERNS                      */ 03084000
         LR    @07,K                                            02S0956 03085000
         SLA   @07,2                                            02S0956 03086000
         STC   @14,OLDFLG(@07)                                  02S0956 03087000
*                           ELSE    /*                       @YM03669*/ 03088000
*                             DO;   /* NO - MODIFY PATTERNS     02S0957 03089000
*                                      ACCORDINGLY                   */ 03090000
         B     @RC00955                                         02S0957 03091000
@RF00955 DS    0H                                               02S0958 03092000
*                               OLDLN(K+1)=OLDLN(K+1)&DATAOFF;/* SET    03093000
*                                      DATA LENGTH TO ZERO           */ 03094000
         LR    @14,K                                            02S0958 03095000
         SLA   @14,2                                            02S0958 03096000
         SLR   @05,@05                                          02S0958 03097000
         IC    @05,OLDLN(@14)                                   02S0958 03098000
         N     @05,@CF00297                                     02S0958 03099000
         STC   @05,OLDLN(@14)                                   02S0958 03100000
*                               OLDLN(K+1)=OLDLN(K+1)|(MOD-1);/* NEW    03101000
*                                      DATA LENGTH                   */ 03102000
         LR    @03,MOD                                          02S0959 03103000
         BCTR  @03,0                                            02S0959 03104000
         OR    @05,@03                                          02S0959 03105000
         STC   @05,OLDLN(@14)                                   02S0959 03106000
*                               OLDFLG(K+2)=0;/* INDICATE END OF        03107000
*                                      PATTERNS                      */ 03108000
         SLR   @07,@07                                          02S0960 03109000
         STC   @07,OLDFLG+4(@14)                                02S0960 03110000
*                             END;                              02S0961 03111000
*                         END;      /*                       @YM03669*/ 03112000
*                     END;                                      02S0963 03113000
*                   ELSE                                        02S0964 03114000
*                     DO;           /* YES - FIELD IS IN ERROR       */ 03115000
         B     @RC00948                                         02S0964 03116000
@RF00948 DS    0H                                               02S0965 03117000
*                       OLDFLG(1)=OLDFLG(1)|CHARFLAG;/* INDICATE DATA   03118000
*                                      IN EBCDIC             @YM03669*/ 03119000
         SLR   @14,@14                                          02S0965 03120000
         IC    @14,OLDFLG                                       02S0965 03121000
         O     @14,@CF00092                                     02S0965 03122000
         STC   @14,OLDFLG                                       02S0965 03123000
*                       OLDFLG(2)=0;/* INDICATE END OF PATTERNS      */ 03124000
         MVI   OLDFLG+4,X'00'                                   02S0966 03125000
*                     END;                                      02S0967 03126000
*                   ADPLFMT1=ADDR(GP4TP16A);/* ADDR OF LABELS FOR       03127000
*                                      THIS LINE                     */ 03128000
@RC00948 L     @14,ABDPLPTR(,PLISTPTR)                          02S0968 03129000
         LA    @07,GP4TP16A                                     02S0968 03130000
         ST    @07,ADPLFMT1(,@14)                               02S0968 03131000
*                   ADPLFMT2=FIELDADR+1;/* ADDR OF DATA IN BUFFER    */ 03132000
         LA    @07,1                                            02S0969 03133000
         AL    @07,FIELDADR                                     02S0969 03134000
         ST    @07,ADPLFMT2(,@14)                               02S0969 03135000
*                   CALL AMDPRFMT;  /* FORMAT THE LINE               */ 03136000
         L     @15,FMTADDR(,PLISTPTR)                           02S0970 03137000
         BALR  @14,@15                                          02S0970 03138000
*                   RETCODE=4;      /* INDICATES TO PRINT BUFFER AND    03139000
*                                      GET NEXT RECORD               */ 03140000
         LA    RETCODE,4                                        02S0971 03141000
*                 END;                                          02S0972 03142000
*             END;                                              02S0973 03143000
*         END;                                                  02S0974 03144000
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */ 03145000
         B     CE0001@                                          02S0975 03146000
*     END S42;                      /* END OF SUBCASE                */ 03147000
*                                                               02S0977 03148000
*     /***************************************************************/ 03149000
*     /*                                                             */ 03150000
*     /* THIS ROUTINE WILL PROCESS THE FOLLOWING SVCS: 44,62. THE    */ 03151000
*     /* FORMATTING CONSISTS OF THE BASIC RECORD + A CHAPPED TCB     */ 03152000
*     /* ADDRESS/A DETACHED TCB ADDRESS.                             */ 03153000
*     /*                                                             */ 03154000
*     /***************************************************************/ 03155000
*                                                               02S0977 03156000
*S44:                                                           02S0977 03157000
*     DO;                           /* SUBCASE                       */ 03158000
S44      DS    0H                                               02S0978 03159000
*       IF TIMESW=0 THEN            /* HAS SECOND LINE BEEN FORMATTED*/ 03160000
         SLR   @14,@14                                          02S0978 03161000
         CH    @14,TIMESW                                       02S0978 03162000
         BNE   @RF00978                                         02S0978 03163000
*         RETCODE=0;                /* NO - INDICATES TO PRINT BUFFER   03164000
*                                      AND RETURN FOR SECOND PASS    */ 03165000
         LR    RETCODE,@14                                      02S0979 03166000
*       ELSE                                                    02S0980 03167000
*         DO;                       /* YES - CHECK FIELDS FOR ERRORS    03168000
*                                      & FORMAT THEM                 */ 03169000
         B     @RC00978                                         02S0980 03170000
@RF00978 DS    0H                                               02S0981 03171000
*           DYNAMPTN(1:LENGTH(GP4S44))=GP4S44;/* MOVE PATTERNS TO       03172000
*                                      GETMAINED AREA                */ 03173000
         MVC   DYNAMPTN(5),GP4S44                               02S0981 03174000
*           IF TCBADDR=ASTER4|TCBADDR=PEES4|TCBADDR=ESSES4 THEN/* IS    03175000
*                                      FIELD IN ERROR                */ 03176000
         LA    @14,46                                           02S0982 03177000
         AL    @14,DATAPTR(,PLISTPTR)                           02S0982 03178000
         CLC   TCBADDR(4,@14),ASTER4                            02S0982 03179000
         BE    @RT00982                                         02S0982 03180000
         CLC   TCBADDR(4,@14),PEES4                             02S0982 03181000
         BE    @RT00982                                         02S0982 03182000
         CLC   TCBADDR(4,@14),ESSES4                            02S0982 03183000
         BNE   @RF00982                                         02S0982 03184000
@RT00982 DS    0H                                               02S0983 03185000
*             OLDFLG(1)=OLDFLG(1)|CHARFLAG;/* INDICATE DATA IN EBCDIC*/ 03186000
         SLR   @14,@14                                          02S0983 03187000
         IC    @14,OLDFLG                                       02S0983 03188000
         O     @14,@CF00092                                     02S0983 03189000
         STC   @14,OLDFLG                                       02S0983 03190000
*           IF SVCNUMBR=45 THEN     /* IS THIS SVC 44                */ 03191000
@RF00982 CH    SVCNUMBR,@CH01425                                02S0984 03192000
         BNE   @RF00984                                         02S0984 03193000
*             ADPLFMT1=ADDR(GP4TYP17);/* YES - ADDR OF LABELS FOR       03194000
*                                      THIS LINE                     */ 03195000
         L     @14,ABDPLPTR(,PLISTPTR)                          02S0985 03196000
         LA    @07,GP4TYP17                                     02S0985 03197000
         ST    @07,ADPLFMT1(,@14)                               02S0985 03198000
*           ELSE                    /* NO - ITS SVC 62               */ 03199000
*             ADPLFMT1=ADDR(GP4TYP20);/* ADDR OF LABELS FOR THIS LINE*/ 03200000
         B     @RC00984                                         02S0986 03201000
@RF00984 L     @14,ABDPLPTR(,PLISTPTR)                          02S0986 03202000
         LA    @07,GP4TYP20                                     02S0986 03203000
         ST    @07,ADPLFMT1(,@14)                               02S0986 03204000
*           ADPLFMT2=ADDR(TCBADDR); /* ADDR OF DATA IN BUFFER        */ 03205000
@RC00984 L     @14,ABDPLPTR(,PLISTPTR)                          02S0987 03206000
         LA    @07,46                                           02S0987 03207000
         AL    @07,DATAPTR(,PLISTPTR)                           02S0987 03208000
         ST    @07,ADPLFMT2(,@14)                               02S0987 03209000
*           R0=ADDR(DYNAMPTN);      /* ADDR OF PATTERNS              */ 03210000
         LA    R0,DYNAMPTN                                      02S0988 03211000
*           CALL AMDPRFMT;          /* FORMAT THE LINE               */ 03212000
         L     @15,FMTADDR(,PLISTPTR)                           02S0989 03213000
         BALR  @14,@15                                          02S0989 03214000
*           RETCODE=4;              /* INDICATES TO PRINT BUFFER AND    03215000
*                                      GET NEXT RECORD               */ 03216000
         LA    RETCODE,4                                        02S0990 03217000
*         END;                                                  02S0991 03218000
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */ 03219000
         B     CE0001@                                          02S0992 03220000
*     END S44;                      /* END OF SUBCASE                */ 03221000
*                                                               02S0994 03222000
*     /***************************************************************/ 03223000
*     /*                                                             */ 03224000
*     /* THIS ROUTINE WILL PROCESS THE FOLLOWING SVCS: 48,56. THE    */ 03225000
*     /* FORMATTING CONSISTS OF THE BASIC RECORD + A 20 BYTE PLIST + */ 03226000
*     /* A MAJOR NAME AND A VARIABLE LENGTH MINOR NAME.              */ 03227000
*     /*                                                             */ 03228000
*     /***************************************************************/ 03229000
*                                                               02S0994 03230000
*S48:                                                           02S0994 03231000
*     DO;                           /* SUBCASE                       */ 03232000
S48      DS    0H                                               02S0995 03233000
*       IF TIMESW=0 THEN            /* HAS SECOND LINE BEEN FORMATTED*/ 03234000
         SLR   @14,@14                                          02S0995 03235000
         CH    @14,TIMESW                                       02S0995 03236000
         BNE   @RF00995                                         02S0995 03237000
*         RETCODE=0;                /* NO - INDICATES TO PRINT BUFFER   03238000
*                                      AND RETURN FOR SECOND PASS    */ 03239000
         LR    RETCODE,@14                                      02S0996 03240000
*       ELSE                                                    02S0997 03241000
*         DO;                       /* YES - REGISTERS HAVE BEEN        03242000
*                                      FORMATTED                     */ 03243000
         B     @RC00995                                         02S0997 03244000
@RF00995 DS    0H                                               02S0998 03245000
*           IF TIMESW=1 THEN        /* HAS REMAINDER OF SECOND LINE     03246000
*                                      BEEN FORMATTED                */ 03247000
         CLC   TIMESW(2),@CH00046                               02S0998 03248000
         BNE   @RF00998                                         02S0998 03249000
*             DO;                   /* NO                            */ 03250000
*               DYNAMPTN(1:LENGTH(GP4S48A))=GP4S48A;/* MOVE PATTERNS    03251000
*                                      TO GETMAINED AREA             */ 03252000
         MVC   DYNAMPTN(21),GP4S48A                             02S1000 03253000
*               IF RCD48LN¬=ERROR THEN/* IS FIELD IN ERROR           */ 03254000
         LA    @14,46                                           02S1001 03255000
         AL    @14,DATAPTR(,PLISTPTR)                           02S1001 03256000
         CLI   RCD48LN(@14),255                                 02S1001 03257000
         BE    @RF01001                                         02S1001 03258000
*                 DO;               /* NO                            */ 03259000
*                   IF RCD48LN¬=44 THEN/* IS DSN MAX LENGTH          */ 03260000
         CLI   RCD48LN(@14),44                                  02S1003 03261000
         BE    @RF01003                                         02S1003 03262000
*                     DO;           /* NO                            */ 03263000
*                       K=RCD48LN/16;/* NUMBER OF FULL WORDS         */ 03264000
         SLR   @05,@05                                          02S1005 03265000
         IC    @05,RCD48LN(,@14)                                02S1005 03266000
         LR    K,@05                                            02S1005 03267000
         SRL   K,4                                              02S1005 03268000
*                       MOD=RCD48LN//16;/* REMAINDER OF PARTIAL WORD */ 03269000
         LR    @02,@05                                          02S1006 03270000
         SRDA  @02,32                                           02S1006 03271000
         D     @02,@CF00139                                     02S1006 03272000
         LR    MOD,@02                                          02S1006 03273000
*                       IF MOD=0 THEN/* ARE ALL FULL WORDS           */ 03274000
         SLR   @14,@14                                          02S1007 03275000
         CR    MOD,@14                                          02S1007 03276000
         BNE   @RF01007                                         02S1007 03277000
*                         OLDFLG(K+3)=0;/* YES - INDICATE END OF        03278000
*                                      PATTERNS                      */ 03279000
         LR    @07,K                                            02S1008 03280000
         SLA   @07,2                                            02S1008 03281000
         STC   @14,OLDFLG+8(@07)                                02S1008 03282000
*                       ELSE                                    02S1009 03283000
*                         DO;       /* NO - MODIFY PATTERNS     02S1009 03284000
*                                      ACCORDINGLY                   */ 03285000
         B     @RC01007                                         02S1009 03286000
@RF01007 DS    0H                                               02S1010 03287000
*                           OLDLN(K+3)=OLDLN(K+3)&DATAOFF;/* SET DATA   03288000
*                                      LENGTH TO ZERO                */ 03289000
         LR    @14,K                                            02S1010 03290000
         SLA   @14,2                                            02S1010 03291000
         SLR   @05,@05                                          02S1010 03292000
         IC    @05,OLDLN+8(@14)                                 02S1010 03293000
         N     @05,@CF00297                                     02S1010 03294000
         STC   @05,OLDLN+8(@14)                                 02S1010 03295000
*                           OLDLN(K+3)=OLDLN(K+3)|(MOD-1);/* NEW DATA   03296000
*                                      LENGTH                        */ 03297000
         LR    @03,MOD                                          02S1011 03298000
         BCTR  @03,0                                            02S1011 03299000
         OR    @05,@03                                          02S1011 03300000
         STC   @05,OLDLN+8(@14)                                 02S1011 03301000
*                           OLDFLG(K+4)=0;/* INDICATE END OF PATTERNS*/ 03302000
         SLR   @07,@07                                          02S1012 03303000
         STC   @07,OLDFLG+12(@14)                               02S1012 03304000
*                         END;                                  02S1013 03305000
*                     END;                                      02S1014 03306000
*                 END;                                          02S1015 03307000
*               ELSE                                            02S1016 03308000
*                 DO;               /* YES - FIELD IS IN ERROR       */ 03309000
         B     @RC01001                                         02S1016 03310000
@RF01001 DS    0H                                               02S1017 03311000
*                   OLDLN(3)=OLDLN(3)&DATAOFF;/* ZERO DATA LENGTH    */ 03312000
         SLR   @14,@14                                          02S1017 03313000
         IC    @14,OLDLN+8                                      02S1017 03314000
         N     @14,@CF00297                                     02S1017 03315000
         STC   @14,OLDLN+8                                      02S1017 03316000
*                   OLDLN(3)=OLDLN(3)|DATALN4;/* SET DATA LENGTH TO     03317000
*                                      FORMAT 4 BYTES                */ 03318000
         O     @14,@CF00170                                     02S1018 03319000
         STC   @14,OLDLN+8                                      02S1018 03320000
*                   OLDFLG(4)=0;    /* INDICATE END OF PATTERNS      */ 03321000
         MVI   OLDFLG+12,X'00'                                  02S1019 03322000
*                 END;                                          02S1020 03323000
*               ADPLFMT1=ADDR(GP4TYP18);/* ADDR OF LABELS FOR THIS      03324000
*                                      LINE                          */ 03325000
@RC01001 L     @14,ABDPLPTR(,PLISTPTR)                          02S1021 03326000
         LA    @07,GP4TYP18                                     02S1021 03327000
         ST    @07,ADPLFMT1(,@14)                               02S1021 03328000
*               ADPLFMT2=ADDR(MAJORNM);/* ADDR OF DATA IN BUFFER     */ 03329000
         L     @07,DATAPTR(,PLISTPTR)                           02S1022 03330000
         LA    @07,MAJORNM+46(,@07)                             02S1022 03331000
         ST    @07,ADPLFMT2(,@14)                               02S1022 03332000
*               R0=ADDR(DYNAMPTN);  /* ADDR OF PATTERNS              */ 03333000
         LA    R0,DYNAMPTN                                      02S1023 03334000
*               CALL AMDPRFMT;      /* FORMAT THE LINE               */ 03335000
         L     @15,FMTADDR(,PLISTPTR)                           02S1024 03336000
         BALR  @14,@15                                          02S1024 03337000
*               RETCODE=0;          /* INDICATES TO PRINT BUFFER AND    03338000
*                                      RETURN FOR THIRD PASS         */ 03339000
         SLR   RETCODE,RETCODE                                  02S1025 03340000
*             END;                                              02S1026 03341000
*           ELSE                                                02S1027 03342000
*             DO;                   /* YES - FORMAT THE THIRD LINE   */ 03343000
         B     @RC00998                                         02S1027 03344000
@RF00998 DS    0H                                               02S1028 03345000
*               DYNAMPTN(1:LENGTH(GP4S48B))=GP4S48B;/* MOVE PATTERNS    03346000
*                                      TO GETMAINED AREA             */ 03347000
         MVC   DYNAMPTN(21),GP4S48B                             02S1028 03348000
*               IF RCD48LST=ASTER20|RCD48LST=PEES20|RCD48LST=ESSES20    03349000
*                 THEN              /* IS FIELD IN ERROR             */ 03350000
         LA    @14,46                                           02S1029 03351000
         AL    @14,DATAPTR(,PLISTPTR)                           02S1029 03352000
         CLC   RCD48LST(20,@14),ASTER20                         02S1029 03353000
         BE    @RT01029                                         02S1029 03354000
         CLC   RCD48LST(20,@14),PEES20                          02S1029 03355000
         BE    @RT01029                                         02S1029 03356000
         CLC   RCD48LST(20,@14),ESSES20                         02S1029 03357000
         BNE   @RF01029                                         02S1029 03358000
@RT01029 DS    0H                                               02S1030 03359000
*                 DO;               /* YES                           */ 03360000
*                   OLDFLG(1)=OLDFLG(1)|CHARFLAG;/* INDICATE DATA IN    03361000
*                                      EBCDIC                        */ 03362000
         LA    @14,32                                           02S1031 03363000
         SLR   @07,@07                                          02S1031 03364000
         IC    @07,OLDFLG                                       02S1031 03365000
         OR    @07,@14                                          02S1031 03366000
         STC   @07,OLDFLG                                       02S1031 03367000
*                   OLDFLG(2)=OLDFLG(2)|CHARFLAG;               02S1032 03368000
         SLR   @07,@07                                          02S1032 03369000
         IC    @07,OLDFLG+4                                     02S1032 03370000
         OR    @07,@14                                          02S1032 03371000
         STC   @07,OLDFLG+4                                     02S1032 03372000
*                   OLDFLG(3)=OLDFLG(3)|CHARFLAG;               02S1033 03373000
         SLR   @07,@07                                          02S1033 03374000
         IC    @07,OLDFLG+8                                     02S1033 03375000
         OR    @07,@14                                          02S1033 03376000
         STC   @07,OLDFLG+8                                     02S1033 03377000
*                   OLDFLG(4)=OLDFLG(4)|CHARFLAG;               02S1034 03378000
         SLR   @07,@07                                          02S1034 03379000
         IC    @07,OLDFLG+12                                    02S1034 03380000
         OR    @07,@14                                          02S1034 03381000
         STC   @07,OLDFLG+12                                    02S1034 03382000
*                   OLDFLG(5)=OLDFLG(5)|CHARFLAG;               02S1035 03383000
         SLR   @07,@07                                          02S1035 03384000
         IC    @07,OLDFLG+16                                    02S1035 03385000
         OR    @14,@07                                          02S1035 03386000
         STC   @14,OLDFLG+16                                    02S1035 03387000
*                 END;                                          02S1036 03388000
*               ADPLFMT1=ADDR(GROUP2);/* ADDR OF LABEL FOR THIS LINE */ 03389000
@RF01029 L     @14,ABDPLPTR(,PLISTPTR)                          02S1037 03390000
         LA    @07,GROUP2                                       02S1037 03391000
         ST    @07,ADPLFMT1(,@14)                               02S1037 03392000
*               ADPLFMT2=ADDR(RCD48LST);/* ADDR OF DATA FOR THIS LINE*/ 03393000
         LA    @07,46                                           02S1038 03394000
         AL    @07,DATAPTR(,PLISTPTR)                           02S1038 03395000
         ST    @07,ADPLFMT2(,@14)                               02S1038 03396000
*               R0=ADDR(DYNAMPTN);  /* ADDR OF PATTERNS FOR THIRD       03397000
*                                      LINE                          */ 03398000
         LA    R0,DYNAMPTN                                      02S1039 03399000
*               CALL AMDPRFMT;      /* FORMAT THE LINE               */ 03400000
         L     @15,FMTADDR(,PLISTPTR)                           02S1040 03401000
         BALR  @14,@15                                          02S1040 03402000
*               RETCODE=4;          /* INDICATES TO PRINT BUFFER AND    03403000
*                                      GET NEXT RECORD               */ 03404000
         LA    RETCODE,4                                        02S1041 03405000
*             END;                                              02S1042 03406000
*         END;                                                  02S1043 03407000
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */ 03408000
         B     CE0001@                                          02S1044 03409000
*     END S48;                      /* END OF SUBCASE                */ 03410000
*                                                               02S1046 03411000
*     /***************************************************************/ 03412000
*     /*                                                             */ 03413000
*     /* THIS ROUTINE WILL PROCESS SVC 52. THE FORMATTING CONSISTS OF*/ 03414000
*     /* THE BASIC RECORD + A 52 BYTE PARAMETER LIST.                */ 03415000
*     /*                                                             */ 03416000
*     /***************************************************************/ 03417000
*                                                               02S1046 03418000
*S52:                                                           02S1046 03419000
*     DO;                           /* SUBCASE                       */ 03420000
S52      DS    0H                                               02S1047 03421000
*       IF TIMESW=0|TIMESW=1 THEN   /* HAS BASIC RECORD BEEN    02S1047 03422000
*                                      FORMATTED                     */ 03423000
         LH    @14,TIMESW                                       02S1047 03424000
         LTR   @14,@14                                          02S1047 03425000
         BZ    @RT01047                                         02S1047 03426000
         CH    @14,@CH00046                                     02S1047 03427000
         BNE   @RF01047                                         02S1047 03428000
@RT01047 DS    0H                                               02S1048 03429000
*         RETCODE=0;                /* NO - INDICATES TO PRINT BUFFER   03430000
*                                      AND RETURN FOR THIRD PASS     */ 03431000
         SLR   RETCODE,RETCODE                                  02S1048 03432000
*       ELSE                                                    02S1049 03433000
*         DO;                       /* YES                           */ 03434000
         B     @RC01047                                         02S1049 03435000
@RF01047 DS    0H                                               02S1050 03436000
*           IF TIMESW=2 THEN        /* HAS THIRD LINE BEEN FORMATTED */ 03437000
         CLC   TIMESW(2),@CH00078                               02S1050 03438000
         BNE   @RF01050                                         02S1050 03439000
*             DO;                   /* NO                            */ 03440000
*               DYNAMPTN(1:LENGTH(GP4S52A))=GP4S52A;/* MOVE PATTERNS    03441000
*                                      TO GETMAIN AREA               */ 03442000
         MVC   DYNAMPTN(45),GP4S52A                             02S1052 03443000
*               IF ERRCHECK=ASTER20|ERRCHECK=PEES20|ERRCHECK=ESSES20    03444000
*                 THEN              /* IS FIELD IN ERROR             */ 03445000
         LA    @14,46                                           02S1053 03446000
         AL    @14,DATAPTR(,PLISTPTR)                           02S1053 03447000
         CLC   ERRCHECK(20,@14),ASTER20                         02S1053 03448000
         BE    @RT01053                                         02S1053 03449000
         CLC   ERRCHECK(20,@14),PEES20                          02S1053 03450000
         BE    @RT01053                                         02S1053 03451000
         CLC   ERRCHECK(20,@14),ESSES20                         02S1053 03452000
         BNE   @RF01053                                         02S1053 03453000
@RT01053 DS    0H                                               02S1054 03454000
*                 DO;               /* YES                           */ 03455000
*                   ADPLFMT1=ADDR(GROUP2);/* ADDR OF LABEL FOR THIS     03456000
*                                      LINE                          */ 03457000
         L     @14,ABDPLPTR(,PLISTPTR)                          02S1055 03458000
         LA    @07,GROUP2                                       02S1055 03459000
         ST    @07,ADPLFMT1(,@14)                               02S1055 03460000
*                   ADPLFMT2=ADDR(RCD52LST);/* ADDR OF DATA IN BUFFER*/ 03461000
         LA    @07,46                                           02S1056 03462000
         AL    @07,DATAPTR(,PLISTPTR)                           02S1056 03463000
         ST    @07,ADPLFMT2(,@14)                               02S1056 03464000
*                   R0=ADDR(GP4S52C);/* ADDR OF PATTERNS FOR THIS       03465000
*                                      LINE                          */ 03466000
         LA    R0,GP4S52C                                       02S1057 03467000
*                   CALL AMDPRFMT;  /* FORMAT THE LINE               */ 03468000
         L     @15,FMTADDR(,PLISTPTR)                           02S1058 03469000
         BALR  @14,@15                                          02S1058 03470000
*                   RETCODE=4;      /* INDICATES TO PRINT BUFFER AND    03471000
*                                      GET NEXT RECORD               */ 03472000
         LA    RETCODE,4                                        02S1059 03473000
*                 END;                                          02S1060 03474000
*               ELSE                                            02S1061 03475000
*                 DO;               /* NO - FIELD IS IN HEX          */ 03476000
         B     @RC01053                                         02S1061 03477000
@RF01053 DS    0H                                               02S1062 03478000
*                   ADPLFMT1=ADDR(GROUP2);/* ADDR OF LABEL FOR THIS     03479000
*                                      LINE                          */ 03480000
         L     @14,ABDPLPTR(,PLISTPTR)                          02S1062 03481000
         LA    @07,GROUP2                                       02S1062 03482000
         ST    @07,ADPLFMT1(,@14)                               02S1062 03483000
*                   ADPLFMT2=ADDR(RCD52LST);/* ADDR OF DATA IN BUFFER*/ 03484000
         LA    @07,46                                           02S1063 03485000
         AL    @07,DATAPTR(,PLISTPTR)                           02S1063 03486000
         ST    @07,ADPLFMT2(,@14)                               02S1063 03487000
*                   R0=ADDR(DYNAMPTN);/* ADDR OF PATTERNS            */ 03488000
         LA    R0,DYNAMPTN                                      02S1064 03489000
*                   CALL AMDPRFMT;  /* FORMAT THE LINE               */ 03490000
         L     @15,FMTADDR(,PLISTPTR)                           02S1065 03491000
         BALR  @14,@15                                          02S1065 03492000
*                   RETCODE=0;      /* INDICATES TO PRINT BUFFER AND    03493000
*                                      RETURN FOR FOURTH PASS        */ 03494000
         SLR   RETCODE,RETCODE                                  02S1066 03495000
*                 END;                                          02S1067 03496000
*             END;                                              02S1068 03497000
*           ELSE                                                02S1069 03498000
*             DO;                   /* YES - FORMAT THE FOURTH LINE  */ 03499000
         B     @RC01050                                         02S1069 03500000
@RF01050 DS    0H                                               02S1070 03501000
*               ADPLFMT2=ADDR(RCD52LST)+44;/* ADDR OF REMAINDER OF      03502000
*                                      PLIST IN BUFFER               */ 03503000
         L     @14,ABDPLPTR(,PLISTPTR)                          02S1070 03504000
         LA    @07,90                                           02S1070 03505000
         AL    @07,DATAPTR(,PLISTPTR)                           02S1070 03506000
         ST    @07,ADPLFMT2(,@14)                               02S1070 03507000
*               R0=ADDR(GP4S52B);   /* ADDR OF PATTERNS              */ 03508000
         LA    R0,GP4S52B                                       02S1071 03509000
*               CALL AMDPRFMT;      /* FORMAT THE LINE               */ 03510000
         L     @15,FMTADDR(,PLISTPTR)                           02S1072 03511000
         BALR  @14,@15                                          02S1072 03512000
*               RETCODE=4;          /* INDICATES TO PRINT BUFFER AND    03513000
*                                      GET NEXT RECORD               */ 03514000
         LA    RETCODE,4                                        02S1073 03515000
*             END;                                              02S1074 03516000
*         END;                                                  02S1075 03517000
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */ 03518000
         B     CE0001@                                          02S1076 03519000
*     END S52;                      /* END OF SUBCASE                */ 03520000
*                                                               02S1078 03521000
*     /***************************************************************/ 03522000
*     /*                                                             */ 03523000
*     /* THIS ROUTINE WILL PROCESS SVC 66. THE FORMATTING CONSISTS OF*/ 03524000
*     /* THE BASIC RECORD + AN IOBERINF.                             */ 03525000
*     /*                                                             */ 03526000
*     /***************************************************************/ 03527000
*                                                               02S1078 03528000
*S66:                                                           02S1078 03529000
*     DO;                           /* SUBCASE                       */ 03530000
S66      DS    0H                                               02S1079 03531000
*       IF TIMESW=0 THEN            /* HAS SECOND LINE BEEN FORMATTED*/ 03532000
         SLR   @14,@14                                          02S1079 03533000
         CH    @14,TIMESW                                       02S1079 03534000
         BNE   @RF01079                                         02S1079 03535000
*         RETCODE=0;                /* NO - INDICATES TO PRINT BUFFER   03536000
*                                      AND RETURN FOR SECOND PASS    */ 03537000
         LR    RETCODE,@14                                      02S1080 03538000
*       ELSE                                                    02S1081 03539000
*         DO;                       /* YES - REGISTERS HAVE BEEN        03540000
*                                      FORMATTED                     */ 03541000
         B     @RC01079                                         02S1081 03542000
@RF01079 DS    0H                                               02S1082 03543000
*           IF TIMESW=1 THEN        /* HAS REMAINDER OF SECOND LINE     03544000
*                                      BEEN FORMATTED                */ 03545000
         CLC   TIMESW(2),@CH00046                               02S1082 03546000
         BNE   @RF01082                                         02S1082 03547000
*             DO;                   /* NO                            */ 03548000
*               DYNAMPTN(1:LENGTH(GP4S66))=GP4S66;/* MOVE PATTERNS TO   03549000
*                                      GETMAINED AREA                */ 03550000
         MVC   DYNAMPTN(17),GP4S66                              02S1084 03551000
*               IF IOBERR=ASTER16|IOBERR=PEES16|IOBERR=ESSES16 THEN/*   03552000
*                                      IS FIELD IN ERROR             */ 03553000
         LA    @14,46                                           02S1085 03554000
         AL    @14,DATAPTR(,PLISTPTR)                           02S1085 03555000
         CLC   IOBERR(16,@14),ASTER16                           02S1085 03556000
         BE    @RT01085                                         02S1085 03557000
         CLC   IOBERR(16,@14),PEES16                            02S1085 03558000
         BE    @RT01085                                         02S1085 03559000
         CLC   IOBERR(16,@14),ESSES16                           02S1085 03560000
         BNE   @RF01085                                         02S1085 03561000
@RT01085 DS    0H                                               02S1086 03562000
*                 DO;               /* YES                           */ 03563000
*                   OLDFLG(1)=OLDFLG(1)|CHARFLAG;/* INDICATE DATA IN    03564000
*                                      EBCDIC                        */ 03565000
         LA    @14,32                                           02S1087 03566000
         SLR   @07,@07                                          02S1087 03567000
         IC    @07,OLDFLG                                       02S1087 03568000
         OR    @07,@14                                          02S1087 03569000
         STC   @07,OLDFLG                                       02S1087 03570000
*                   OLDFLG(2)=OLDFLG(2)|CHARFLAG;               02S1088 03571000
         SLR   @07,@07                                          02S1088 03572000
         IC    @07,OLDFLG+4                                     02S1088 03573000
         OR    @07,@14                                          02S1088 03574000
         STC   @07,OLDFLG+4                                     02S1088 03575000
*                   OLDFLG(3)=OLDFLG(3)|CHARFLAG;               02S1089 03576000
         SLR   @07,@07                                          02S1089 03577000
         IC    @07,OLDFLG+8                                     02S1089 03578000
         OR    @07,@14                                          02S1089 03579000
         STC   @07,OLDFLG+8                                     02S1089 03580000
*                   OLDFLG(4)=OLDFLG(4)|CHARFLAG;               02S1090 03581000
         SLR   @07,@07                                          02S1090 03582000
         IC    @07,OLDFLG+12                                    02S1090 03583000
         OR    @14,@07                                          02S1090 03584000
         STC   @14,OLDFLG+12                                    02S1090 03585000
*                 END;                                          02S1091 03586000
*               ADPLFMT1=ADDR(GP4TYP21);/* ADDR OF LABELS FOR THIS      03587000
*                                      LINE                          */ 03588000
@RF01085 L     @14,ABDPLPTR(,PLISTPTR)                          02S1092 03589000
         LA    @07,GP4TYP21                                     02S1092 03590000
         ST    @07,ADPLFMT1(,@14)                               02S1092 03591000
*               ADPLFMT2=ADDR(IOBERR);/* ADDR OF DATA IN BUFFER      */ 03592000
         LA    @07,46                                           02S1093 03593000
         AL    @07,DATAPTR(,PLISTPTR)                           02S1093 03594000
         ST    @07,ADPLFMT2(,@14)                               02S1093 03595000
*               R0=ADDR(DYNAMPTN);  /* ADDR OF PATTERNS              */ 03596000
         LA    R0,DYNAMPTN                                      02S1094 03597000
*               CALL AMDPRFMT;      /* FORMAT THE LINE               */ 03598000
         L     @15,FMTADDR(,PLISTPTR)                           02S1095 03599000
         BALR  @14,@15                                          02S1095 03600000
*               RETCODE=4;          /* INDICATES TO PRINT BUFFER AND    03601000
*                                      GET NEXT RECORD               */ 03602000
         LA    RETCODE,4                                        02S1096 03603000
*             END;                                              02S1097 03604000
*         END;                                                  02S1098 03605000
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */ 03606000
         B     CE0001@                                          02S1099 03607000
*     END S66;                      /* END OF SUBCASE                */ 03608000
*                                                               02S1101 03609000
*     /***************************************************************/ 03610000
*     /*                                                             */ 03611000
*     /* THIS ROUTINE WILL PROCESS SVC 71. THE FORMATTING CONSISTS OF*/ 03612000
*     /* THE BASIC RECORD + A DDNAME + A 16 BYTE PLIST.              */ 03613000
*     /*                                                             */ 03614000
*     /***************************************************************/ 03615000
*                                                               02S1101 03616000
*S71:                                                           02S1101 03617000
*     DO;                           /* SUBCASE                       */ 03618000
S71      DS    0H                                               02S1102 03619000
*       IF TIMESW=0 THEN            /* IS THIS THE FIRST PASS        */ 03620000
         ICM   @14,3,TIMESW                                     02S1102 03621000
         BNZ   @RF01102                                         02S1102 03622000
*         DO;                       /* YES - FORMAT DDNAME           */ 03623000
*           ADPLFMT1=ADDR(LDDNL1);  /* ADDR OF LABEL FOR THIS FIELD  */ 03624000
         L     @14,ABDPLPTR(,PLISTPTR)                          02S1104 03625000
         LA    @07,LDDNL1                                       02S1104 03626000
         ST    @07,ADPLFMT1(,@14)                               02S1104 03627000
*           ADPLFMT2=ADDR(RCD71DDN);/* ADDR OF DDNAME IN RECORD      */ 03628000
         LA    @07,46                                           02S1105 03629000
         AL    @07,DATAPTR(,PLISTPTR)                           02S1105 03630000
         ST    @07,ADPLFMT2(,@14)                               02S1105 03631000
*           R0=ADDR(DDNLN1);        /* ADDR OF PATTERN FOR DDNAME    */ 03632000
         LA    R0,DDNLN1                                        02S1106 03633000
*           CALL AMDPRFMT;          /* FORMAT DDNAME ON FIRST LINE   */ 03634000
         L     @15,FMTADDR(,PLISTPTR)                           02S1107 03635000
         BALR  @14,@15                                          02S1107 03636000
*           RETCODE=0;              /* INDICATES TO PRINT BUFFER AND    03637000
*                                      RETURN FOR SECOND PASS        */ 03638000
         SLR   RETCODE,RETCODE                                  02S1108 03639000
*         END;                                                  02S1109 03640000
*       ELSE                                                    02S1110 03641000
*         DO;                       /* Z40KI3N                       */ 03642000
         B     @RC01102                                         02S1110 03643000
@RF01102 DS    0H                                               02S1111 03644000
*           IF TIMESW=1 THEN        /* IF SECOND PASS        @Z40KI3N*/ 03645000
         CLC   TIMESW(2),@CH00046                               02S1111 03646000
         BNE   @RF01111                                         02S1111 03647000
*             DO;                   /* NO - FORMAT REGS AND REMAINING   03648000
*                                      FIELDS                        */ 03649000
*               DYNAMPTN(1:LENGTH(GP4S21))=GP4S21;/* MOVE PATTERNS TO   03650000
*                                      GETMAINED AREA                */ 03651000
         MVC   DYNAMPTN(17),GP4S21                              02S1113 03652000
*               IF RCD71LST=ASTER12|RCD71LST=PEES12|RCD71LST=ESSES12    03653000
*                 THEN              /* IS FIELD IN ERROR             */ 03654000
         LA    @14,46                                           02S1114 03655000
         AL    @14,DATAPTR(,PLISTPTR)                           02S1114 03656000
         CLC   RCD71LST(12,@14),ASTER12                         02S1114 03657000
         BE    @RT01114                                         02S1114 03658000
         CLC   RCD71LST(12,@14),PEES12                          02S1114 03659000
         BE    @RT01114                                         02S1114 03660000
         CLC   RCD71LST(12,@14),ESSES12                         02S1114 03661000
         BNE   @RF01114                                         02S1114 03662000
@RT01114 DS    0H                                               02S1115 03663000
*                 DO;               /* YES                           */ 03664000
*                   OLDFLG(1)=OLDFLG(1)|CHARFLAG;/* INDICATE DATA IN    03665000
*                                      EBCDIC                        */ 03666000
         LA    @14,32                                           02S1116 03667000
         SLR   @05,@05                                          02S1116 03668000
         IC    @05,OLDFLG                                       02S1116 03669000
         OR    @05,@14                                          02S1116 03670000
         STC   @05,OLDFLG                                       02S1116 03671000
*                   OLDFLG(2)=OLDFLG(2)|CHARFLAG;               02S1117 03672000
         SLR   @05,@05                                          02S1117 03673000
         IC    @05,OLDFLG+4                                     02S1117 03674000
         OR    @05,@14                                          02S1117 03675000
         STC   @05,OLDFLG+4                                     02S1117 03676000
*                   OLDFLG(3)=OLDFLG(3)|CHARFLAG;               02S1118 03677000
         SLR   @05,@05                                          02S1118 03678000
         IC    @05,OLDFLG+8                                     02S1118 03679000
         OR    @05,@14                                          02S1118 03680000
         STC   @05,OLDFLG+8                                     02S1118 03681000
*                   OLDFLG(4)=OLDFLG(4)|CHARFLAG;               02S1119 03682000
         SLR   @05,@05                                          02S1119 03683000
         IC    @05,OLDFLG+12                                    02S1119 03684000
         OR    @14,@05                                          02S1119 03685000
         STC   @14,OLDFLG+12                                    02S1119 03686000
*                 END;                                          02S1120 03687000
*               ADPLFMT1=ADDR(GROUP2);/* ADDR OF LABEL FOR THIS LINE */ 03688000
@RF01114 L     @14,ABDPLPTR(,PLISTPTR)                          02S1121 03689000
         LA    @05,GROUP2                                       02S1121 03690000
         ST    @05,ADPLFMT1(,@14)                               02S1121 03691000
*               ADPLFMT2=ADDR(RCD71LST);/* ADDR OF DATA FOR THIS LINE*/ 03692000
         L     @05,DATAPTR(,PLISTPTR)                           02S1122 03693000
         LA    @05,RCD71LST+46(,@05)                            02S1122 03694000
         ST    @05,ADPLFMT2(,@14)                               02S1122 03695000
*               R0=ADDR(DYNAMPTN);  /* ADDR OF PATTERNS FOR THIS LINE*/ 03696000
         LA    R0,DYNAMPTN                                      02S1123 03697000
*               CALL AMDPRFMT;      /* FORMAT LINE                   */ 03698000
         L     @15,FMTADDR(,PLISTPTR)                           02S1124 03699000
         BALR  @14,@15                                          02S1124 03700000
*               IF SVCNUMBR=82&(LSVC81R='006E'X|LSVC81R='0076'X) THEN   03701000
         CH    SVCNUMBR,@CH01327                                02S1125 03702000
         BNE   @RF01125                                         02S1125 03703000
         L     @14,RECPTR(,PLISTPTR)                            02S1125 03704000
         CLC   LSVC81R(2,@14),@CB01430                          02S1125 03705000
         BE    @RT01125                                         02S1125 03706000
         CLC   LSVC81R(2,@14),@CB01431                          02S1125 03707000
         BNE   @RF01125                                         02S1125 03708000
@RT01125 DS    0H                                               02S1126 03709000
*                                   /*                       @Z40KI3N*/ 03710000
*                                                               02S1126 03711000
*                 /***************************************************/ 03712000
*                 /*                                                 */ 03713000
*                 /* IF SVC 81 AND LONG PLIST                @Z40KI3N*/ 03714000
*                 /*                                                 */ 03715000
*                 /***************************************************/ 03716000
*                                                               02S1126 03717000
*                 RETCODE=0;        /* RETURN FOR ANOTHER PASS  02S1126 03718000
*                                                            @Z40KI3N*/ 03719000
         SLR   RETCODE,RETCODE                                  02S1126 03720000
*               ELSE                /* IF SVC71 OR 81 WITH SHORT        03721000
*                                      PLIST                 @Z40KI3N*/ 03722000
*                 RETCODE=4;        /* THIS IS LAST PASS     @Z40KI3N*/ 03723000
         B     @RC01125                                         02S1127 03724000
@RF01125 LA    RETCODE,4                                        02S1127 03725000
*             END;                  /*                       @Z40KI3N*/ 03726000
*           ELSE                    /* THIRD PASS FOR SVC81 WITH LG     03727000
*                                      PLIST ONLY            @Z40KI3N*/ 03728000
*             DO;                   /* FORMAT REMAINING 32 BYTES OF     03729000
*                                      PLIST                 @Z40KI3N*/ 03730000
         B     @RC01111                                         02S1129 03731000
@RF01111 DS    0H                                               02S1130 03732000
*               DYNAMPTN=GP4S21A;   /* MOVE FORMAT PATT TO GETMAIN      03733000
*                                      AREA                  @Z40KI3N*/ 03734000
         MVI   DYNAMPTN+33,C' '                                 02S1130 03735000
         MVC   DYNAMPTN+34(14),DYNAMPTN+33                      02S1130 03736000
         MVC   DYNAMPTN(33),GP4S21A                             02S1130 03737000
*               ADPLFMT2=ADDR(RCD81LNG);/* ADDR OF REMAINING PLIST      03738000
*                                      BYTES                 @Z40KI3N*/ 03739000
         L     @14,ABDPLPTR(,PLISTPTR)                          02S1131 03740000
         L     @07,DATAPTR(,PLISTPTR)                           02S1131 03741000
         LA    @07,RCD81LNG+46(,@07)                            02S1131 03742000
         ST    @07,ADPLFMT2(,@14)                               02S1131 03743000
*               R0=ADDR(DYNAMPTN);  /*                       @Z40KI3N*/ 03744000
         LA    R0,DYNAMPTN                                      02S1132 03745000
*               CALL AMDPRFMT;      /* FORMAT LINE           @Z40KI3N*/ 03746000
         L     @15,FMTADDR(,PLISTPTR)                           02S1133 03747000
         BALR  @14,@15                                          02S1133 03748000
*               RETCODE=4;          /* PRINT FINAL BUFFER AND GET       03749000
*                                      NEXT GTF RECORD       @Z40KI3N*/ 03750000
         LA    RETCODE,4                                        02S1134 03751000
*             END;                  /*                       @Z40KI3N*/ 03752000
*         END;                                                  02S1136 03753000
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */ 03754000
         B     CE0001@                                          02S1137 03755000
*     END S71;                      /* END OF SUBCASE                */ 03756000
*                                                               02S1139 03757000
*     /***************************************************************/ 03758000
*     /*                                                             */ 03759000
*     /* THIS ROUTINE WILL PROCESS SVC 75. THE FORMATTING CONSISTS OF*/ 03760000
*     /* THE BASIC RECORD + A VARIABLE LENGTH IQE.                   */ 03761000
*     /*                                                             */ 03762000
*     /***************************************************************/ 03763000
*                                                               02S1139 03764000
*S75:                                                           02S1139 03765000
*     DO;                           /* SUBCASE                       */ 03766000
S75      DS    0H                                               02S1140 03767000
*       IF TIMESW=0 THEN            /* HAS SECOND LINE BEEN FORMATTED*/ 03768000
         SLR   @14,@14                                          02S1140 03769000
         CH    @14,TIMESW                                       02S1140 03770000
         BNE   @RF01140                                         02S1140 03771000
*         RETCODE=0;                /* NO - INDICATES TO PRINT BUFFER   03772000
*                                      AND RETURN FOR SECOND PASS    */ 03773000
         LR    RETCODE,@14                                      02S1141 03774000
*       ELSE                                                    02S1142 03775000
*         DO;                       /* YES - CHECK FIELDS FOR ERRORS    03776000
*                                      & FORMAT THEM                 */ 03777000
         B     @RC01140                                         02S1142 03778000
@RF01140 DS    0H                                               02S1143 03779000
*           DYNAMPTN(1:LENGTH(GP4S75A))=GP4S75A;/* MOVE PATTERNS TO     03780000
*                                      GETMAIN AREA                  */ 03781000
         MVC   DYNAMPTN(13),GP4S75A                             02S1143 03782000
*           R0=ADDR(DYNAMPTN);      /* ADDR OF PATTERNS FOR THIS LINE*/ 03783000
         LA    R0,DYNAMPTN                                      02S1144 03784000
*           IF RCD75LN=ERROR THEN   /* IS FIELD IN ERROR             */ 03785000
         L     @14,DATAPTR(,PLISTPTR)                           02S1145 03786000
         CLI   RCD75LN+46(@14),255                              02S1145 03787000
         BNE   @RF01145                                         02S1145 03788000
*             DO;                   /* YES                           */ 03789000
*               OLDFLG(1)=OLDFLG(1)|CHARFLAG;/* INDICATE DATA IN        03790000
*                                      EBCDIC                @YM03669*/ 03791000
         SLR   @14,@14                                          02S1147 03792000
         IC    @14,OLDFLG                                       02S1147 03793000
         O     @14,@CF00092                                     02S1147 03794000
         STC   @14,OLDFLG                                       02S1147 03795000
*               OLDFLG(2)=0;        /* INDICATE END OF PATTERNS      */ 03796000
         MVI   OLDFLG+4,X'00'                                   02S1148 03797000
*             END;                                              02S1149 03798000
*           ELSE                                                02S1150 03799000
*             DO;                   /* NO - CHECK DATA LENGTH FOR       03800000
*                                      ZERO                          */ 03801000
         B     @RC01145                                         02S1150 03802000
@RF01145 DS    0H                                               02S1151 03803000
*               IF RCD75LN=0 THEN   /* IS THERE ANY DATA             */ 03804000
         L     @14,DATAPTR(,PLISTPTR)                           02S1151 03805000
         CLI   RCD75LN+46(@14),0                                02S1151 03806000
         BNE   @RF01151                                         02S1151 03807000
*                 R0=ADDR(GP4S75B); /* NO - ADDR OF FORMAT PATTERNS     03808000
*                                      FOR THIS LINE                 */ 03809000
         LA    R0,GP4S75B                                       02S1152 03810000
*             END;                                              02S1153 03811000
@RF01151 DS    0H                                               02S1154 03812000
*           ADPLFMT1=ADDR(GP4TYP22);/* ADDR OF LABEL FOR THIS LINE   */ 03813000
@RC01145 L     @14,ABDPLPTR(,PLISTPTR)                          02S1154 03814000
         LA    @07,GP4TYP22                                     02S1154 03815000
         ST    @07,ADPLFMT1(,@14)                               02S1154 03816000
*           ADPLFMT2=ADDR(RCD75LN)+1;/* ADDR OF DATA IN BUFFER       */ 03817000
         LA    @07,47                                           02S1155 03818000
         AL    @07,DATAPTR(,PLISTPTR)                           02S1155 03819000
         ST    @07,ADPLFMT2(,@14)                               02S1155 03820000
*           CALL AMDPRFMT;          /* FORMAT LINE                   */ 03821000
         L     @15,FMTADDR(,PLISTPTR)                           02S1156 03822000
         BALR  @14,@15                                          02S1156 03823000
*           RETCODE=4;              /* INDICATES TO PRINT BUFFER AND    03824000
*                                      GET NEXT RECORD               */ 03825000
         LA    RETCODE,4                                        02S1157 03826000
*         END;                                                  02S1158 03827000
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */ 03828000
         B     CE0001@                                          02S1159 03829000
*     END S75;                      /* END OF SUBCASE                */ 03830000
*                                                               02S1161 03831000
*     /***************************************************************/ 03832000
*     /*                                                             */ 03833000
*     /* THIS ROUTINE WILL PROCESS SVC 82. THE FORMATTING CONSISTS OF*/ 03834000
*     /* THE BASIC RECORD + A VOL-SER + A VARIABLE LENGTH TTR + A    */ 03835000
*     /* VARIABLE LENGTH PLIST.                                      */ 03836000
*     /*                                                             */ 03837000
*     /***************************************************************/ 03838000
*                                                               02S1161 03839000
*S82:                                                           02S1161 03840000
*     DO;                           /* SUBCASE                       */ 03841000
S82      DS    0H                                               02S1162 03842000
*       IF TIMESW=0 THEN            /* HAS SECOND LINE BEEN FORMATTED*/ 03843000
         SLR   @14,@14                                          02S1162 03844000
         CH    @14,TIMESW                                       02S1162 03845000
         BNE   @RF01162                                         02S1162 03846000
*         RETCODE=0;                /* NO - INDICATES TO PRINT BUFFER   03847000
*                                      AND RETURN FOR SECOND PASS    */ 03848000
         LR    RETCODE,@14                                      02S1163 03849000
*       ELSE                                                    02S1164 03850000
*         DO;                       /* YES - REGISTERS HAVE BEEN        03851000
*                                      FORMATTED                     */ 03852000
         B     @RC01162                                         02S1164 03853000
@RF01162 DS    0H                                               02S1165 03854000
*           IF TIMESW=1 THEN        /* HAS REMAINDER OF SECOND LINE     03855000
*                                      BEEN FORMATTED                */ 03856000
         CLC   TIMESW(2),@CH00046                               02S1165 03857000
         BNE   @RF01165                                         02S1165 03858000
*             DO;                   /* NO                            */ 03859000
*               ADPLFMT1=ADDR(GP4TYP23);/* ADDR OF LABEL FOR THIS       03860000
*                                      FIELD                         */ 03861000
         L     @14,ABDPLPTR(,PLISTPTR)                          02S1167 03862000
         LA    @07,GP4TYP23                                     02S1167 03863000
         ST    @07,ADPLFMT1(,@14)                               02S1167 03864000
*               ADPLFMT2=ADDR(VOLSER1);/* ADDR OF DATA IN BUFFER     */ 03865000
         LA    @07,46                                           02S1168 03866000
         AL    @07,DATAPTR(,PLISTPTR)                           02S1168 03867000
         ST    @07,ADPLFMT2(,@14)                               02S1168 03868000
*               R0=ADDR(GP4S82A);   /* ADDR OF PATTERNS              */ 03869000
         LA    R0,GP4S82A                                       02S1169 03870000
*               CALL AMDPRFMT;      /* FORMAT THE LINE               */ 03871000
         L     @15,FMTADDR(,PLISTPTR)                           02S1170 03872000
         BALR  @14,@15                                          02S1170 03873000
*               RETCODE=0;          /* INDICATES TO PRINT BUFFER AND    03874000
*                                      RETURN FOR THIRD PASS         */ 03875000
         SLR   RETCODE,RETCODE                                  02S1171 03876000
*             END;                                              02S1172 03877000
*           ELSE                                                02S1173 03878000
*             DO;                   /* YES - FORMAT THE THIRD LINE   */ 03879000
         B     @RC01165                                         02S1173 03880000
@RF01165 DS    0H                                               02S1174 03881000
*               DYNAMPTN(1:LENGTH(GP4S48B))=GP4S48B;/* MOVE PATTERNS    03882000
*                                      TO GETMAINED AREA             */ 03883000
         MVC   DYNAMPTN(21),GP4S48B                             02S1174 03884000
*               IF RCD82LN=ERROR THEN/* IS FIELD IN ERROR            */ 03885000
         LA    @14,46                                           02S1175 03886000
         AL    @14,DATAPTR(,PLISTPTR)                           02S1175 03887000
         CLI   RCD82LN(@14),255                                 02S1175 03888000
         BNE   @RF01175                                         02S1175 03889000
*                 DO;               /* YES                           */ 03890000
*                   OLDFLG(1)=OLDFLG(1)|CHARFLAG;/* INDICATE DATA IN    03891000
*                                      EBCDIC                        */ 03892000
         SLR   @07,@07                                          02S1177 03893000
         IC    @07,OLDFLG                                       02S1177 03894000
         O     @07,@CF00092                                     02S1177 03895000
         STC   @07,OLDFLG                                       02S1177 03896000
*                   OLDFLG(2)=0;    /* INDICATE END OF PATTERNS      */ 03897000
         MVI   OLDFLG+4,X'00'                                   02S1178 03898000
*                   RCD82LN=4;      /* MODIFY LENGTH IN ORDER TO        03899000
*                                      ACCESS NEXT FIELD             */ 03900000
         MVI   RCD82LN(@14),X'04'                               02S1179 03901000
*                 END;                                          02S1180 03902000
*               ELSE                                            02S1181 03903000
*                 DO;               /* NO - FORMAT 2, 3 OR 4 WORDS   */ 03904000
         B     @RC01175                                         02S1181 03905000
@RF01175 DS    0H                                               02S1182 03906000
*                   K=RCD82LN/4;    /* NUMBER OF WORDS               */ 03907000
         L     @14,DATAPTR(,PLISTPTR)                           02S1182 03908000
         SLR   K,K                                              02S1182 03909000
         IC    K,RCD82LN+46(,@14)                               02S1182 03910000
         SRL   K,2                                              02S1182 03911000
*                   OLDFLG(K+1)=0;  /* INDICATE END OF PATTERNS      */ 03912000
         LR    @14,K                                            02S1183 03913000
         SLA   @14,2                                            02S1183 03914000
         SLR   @07,@07                                          02S1183 03915000
         STC   @07,OLDFLG(@14)                                  02S1183 03916000
*                 END;                                          02S1184 03917000
*               R0=ADDR(DYNAMPTN);  /* ADDR OF PATTERNS FOR THIS LINE*/ 03918000
@RC01175 LA    R0,DYNAMPTN                                      02S1185 03919000
*               ADPLFMT1=ADDR(GROUP2);/* ADDR OF LABEL FOR THIS LINE */ 03920000
         L     @14,ABDPLPTR(,PLISTPTR)                          02S1186 03921000
         LA    @07,GROUP2                                       02S1186 03922000
         ST    @07,ADPLFMT1(,@14)                               02S1186 03923000
*               ADPLFMT2=ADDR(RCD82LN)+1;/* ADDR OF DATA IN BUFFER   */ 03924000
         L     @07,DATAPTR(,PLISTPTR)                           02S1187 03925000
         LA    @07,RCD82LN+46(,@07)                             02S1187 03926000
         AH    @07,@CH00046                                     02S1187 03927000
         ST    @07,ADPLFMT2(,@14)                               02S1187 03928000
*               CALL AMDPRFMT;      /* FORMAT THE LINE               */ 03929000
         L     @15,FMTADDR(,PLISTPTR)                           02S1188 03930000
         BALR  @14,@15                                          02S1188 03931000
*               DYNAMPTN(1:LENGTH(GP4S82B))=GP4S82B;/* MOVE PATTERNS    03932000
*                                      TO GETMAIN AREA               */ 03933000
         MVC   DYNAMPTN(9),GP4S82B                              02S1189 03934000
*               FIELDADR=ADDR(RCD82LN)+RCD82LN+1;/* ADDR OF TTR IN      03935000
*                                      BUFFER                        */ 03936000
         LA    @14,46                                           02S1190 03937000
         AL    @14,DATAPTR(,PLISTPTR)                           02S1190 03938000
         LA    @07,RCD82LN(,@14)                                02S1190 03939000
         SLR   @05,@05                                          02S1190 03940000
         IC    @05,RCD82LN(,@14)                                02S1190 03941000
         ALR   @07,@05                                          02S1190 03942000
         AH    @07,@CH00046                                     02S1190 03943000
         ST    @07,FIELDADR                                     02S1190 03944000
*               R0=ADDR(DYNAMPTN);  /* ADDR OF PATTERNS FOR THIS LINE*/ 03945000
         LA    R0,DYNAMPTN                                      02S1191 03946000
*               IF NXTFIELD=0 THEN  /* IS THERE ANY DATA             */ 03947000
         CLI   NXTFIELD(@07),0                                  02S1192 03948000
         BNE   @RF01192                                         02S1192 03949000
*                 R0=ADDR(GP4S82C); /* NO - ADDR OF PATTERNS FOR THIS   03950000
*                                      LINE                          */ 03951000
         LA    R0,GP4S82C                                       02S1193 03952000
*               ELSE                                            02S1194 03953000
*                 DO;               /* YES - CHECK FOR ERROR         */ 03954000
         B     @RC01192                                         02S1194 03955000
@RF01192 DS    0H                                               02S1195 03956000
*                   IF NXTFIELD=ERROR THEN/* IS FIELD IN ERROR       */ 03957000
         L     @14,FIELDADR                                     02S1195 03958000
         CLI   NXTFIELD(@14),255                                02S1195 03959000
         BNE   @RF01195                                         02S1195 03960000
*                     DO;           /* YES                           */ 03961000
*                       OLDLN(1)=OLDLN(1)&DATAOFF;/* SET DATA LENGTH    03962000
*                                      TO 0                          */ 03963000
         SLR   @14,@14                                          02S1197 03964000
         IC    @14,OLDLN                                        02S1197 03965000
         N     @14,@CF00297                                     02S1197 03966000
         STC   @14,OLDLN                                        02S1197 03967000
*                       OLDLN(1)=OLDLN(1)|(4-1);/* LENGTH OF 4 TO       03968000
*                                      FORMAT ERROR INDICATOR        */ 03969000
         O     @14,@CF00170                                     02S1198 03970000
         STC   @14,OLDLN                                        02S1198 03971000
*                       OLDFLG(1)=OLDFLG(1)|CHARFLAG;/* INDICATE DATA   03972000
*                                      IN EBCDIC                     */ 03973000
         SLR   @14,@14                                          02S1199 03974000
         IC    @14,OLDFLG                                       02S1199 03975000
         O     @14,@CF00092                                     02S1199 03976000
         STC   @14,OLDFLG                                       02S1199 03977000
*                       OLDFLG(2)=0;/* INDICATE END OF PATTERNS      */ 03978000
         MVI   OLDFLG+4,X'00'                                   02S1200 03979000
*                     END;                                      02S1201 03980000
*                   ELSE                                        02S1202 03981000
*                     DO;           /* NO - FIELD IS OK              */ 03982000
         B     @RC01195                                         02S1202 03983000
@RF01195 DS    0H                                               02S1203 03984000
*                       IF NXTFIELD¬=8 THEN/* IS ENTIRE TTR THERE    */ 03985000
         L     @14,FIELDADR                                     02S1203 03986000
         CLI   NXTFIELD(@14),8                                  02S1203 03987000
         BE    @RF01203                                         02S1203 03988000
*                         OLDFLG(2)=0;/* INDICATE END OF PATTERNS    */ 03989000
         MVI   OLDFLG+4,X'00'                                   02S1204 03990000
*                     END;                                      02S1205 03991000
@RF01203 DS    0H                                               02S1206 03992000
*                 END;                                          02S1206 03993000
@RC01195 DS    0H                                               02S1207 03994000
*               ADPLFMT1=ADDR(GP4TP23A);/* ADDR OF LABEL FOR THIS       03995000
*                                      LINE                          */ 03996000
@RC01192 L     @14,ABDPLPTR(,PLISTPTR)                          02S1207 03997000
         LA    @07,GP4TP23A                                     02S1207 03998000
         ST    @07,ADPLFMT1(,@14)                               02S1207 03999000
*               ADPLFMT2=FIELDADR+1;/* ADDR OF DATA IN BUFFER        */ 04000000
         LA    @07,1                                            02S1208 04001000
         AL    @07,FIELDADR                                     02S1208 04002000
         ST    @07,ADPLFMT2(,@14)                               02S1208 04003000
*               CALL AMDPRFMT;      /* FORMAT THE LINE               */ 04004000
         L     @15,FMTADDR(,PLISTPTR)                           02S1209 04005000
         BALR  @14,@15                                          02S1209 04006000
*               RETCODE=4;          /* INDICATES TO PRINT BUFFER AND    04007000
*                                      GET NEXT RECORD               */ 04008000
         LA    RETCODE,4                                        02S1210 04009000
*             END;                                              02S1211 04010000
*         END;                                                  02S1212 04011000
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */ 04012000
         B     CE0001@                                          02S1213 04013000
*     END S82;                      /* END OF SUBCASE                */ 04014000
*                                                               02S1215 04015000
*     /***************************************************************/ 04016000
*     /*                                                             */ 04017000
*     /* THIS ROUTINE WILL PROCESS SVC 86. THE FORMATTING CONSISTS OF*/ 04018000
*     /* THE BASIC RECORD + AN 8 BYTE PLIST + A TTR.                 */ 04019000
*     /*                                                             */ 04020000
*     /***************************************************************/ 04021000
*                                                               02S1215 04022000
*S86:                                                           02S1215 04023000
*     DO;                           /* SUBCASE                       */ 04024000
S86      DS    0H                                               02S1216 04025000
*       IF TIMESW=0 THEN            /* HAS SECOND LINE BEEN FORMATTED*/ 04026000
         SLR   @14,@14                                          02S1216 04027000
         CH    @14,TIMESW                                       02S1216 04028000
         BNE   @RF01216                                         02S1216 04029000
*         RETCODE=0;                /* NO - INDICATES TO PRINT BUFFER   04030000
*                                      AND RETURN FOR SECOND PASS    */ 04031000
         LR    RETCODE,@14                                      02S1217 04032000
*       ELSE                                                    02S1218 04033000
*         DO;                       /* YES - FORMAT REMAINING FIELDS */ 04034000
         B     @RC01216                                         02S1218 04035000
@RF01216 DS    0H                                               02S1219 04036000
*           DYNAMPTN(1:LENGTH(GP4S86))=GP4S86;/* MOVE PATTERNS TO       04037000
*                                      GETMAINED AREA                */ 04038000
         MVC   DYNAMPTN(13),GP4S86                              02S1219 04039000
*           IF RCD86LST=ASTER8|RCD86LST=PEES8|RCD86LST=ESSES8 THEN/*    04040000
*                                      IS FIELD IN ERROR             */ 04041000
         LA    @14,46                                           02S1220 04042000
         AL    @14,DATAPTR(,PLISTPTR)                           02S1220 04043000
         CLC   RCD86LST(8,@14),ASTER8                           02S1220 04044000
         BE    @RT01220                                         02S1220 04045000
         CLC   RCD86LST(8,@14),PEES8                            02S1220 04046000
         BE    @RT01220                                         02S1220 04047000
         CLC   RCD86LST(8,@14),ESSES8                           02S1220 04048000
         BNE   @RF01220                                         02S1220 04049000
@RT01220 DS    0H                                               02S1221 04050000
*             DO;                   /* YES                           */ 04051000
*               OLDFLG(1)=OLDFLG(1)|CHARFLAG;/* INDICATE DATA IN        04052000
*                                      EBCDIC                        */ 04053000
         LA    @14,32                                           02S1222 04054000
         SLR   @07,@07                                          02S1222 04055000
         IC    @07,OLDFLG                                       02S1222 04056000
         OR    @07,@14                                          02S1222 04057000
         STC   @07,OLDFLG                                       02S1222 04058000
*               OLDFLG(2)=OLDFLG(2)|CHARFLAG;                   02S1223 04059000
         SLR   @07,@07                                          02S1223 04060000
         IC    @07,OLDFLG+4                                     02S1223 04061000
         OR    @14,@07                                          02S1223 04062000
         STC   @14,OLDFLG+4                                     02S1223 04063000
*             END;                                              02S1224 04064000
*           IF TTR=ASTER5|TTR=PEES5|TTR=ESSES5 THEN/* IS FIELD IN       04065000
*                                      ERROR                         */ 04066000
@RF01220 LA    @14,46                                           02S1225 04067000
         AL    @14,DATAPTR(,PLISTPTR)                           02S1225 04068000
         CLC   TTR(5,@14),ASTER5                                02S1225 04069000
         BE    @RT01225                                         02S1225 04070000
         CLC   TTR(5,@14),PEES5                                 02S1225 04071000
         BE    @RT01225                                         02S1225 04072000
         CLC   TTR(5,@14),ESSES5                                02S1225 04073000
         BNE   @RF01225                                         02S1225 04074000
@RT01225 DS    0H                                               02S1226 04075000
*             OLDFLG(3)=OLDFLG(3)|CHARFLAG;/* INDICATE DATA IN EBCDIC*/ 04076000
         SLR   @14,@14                                          02S1226 04077000
         IC    @14,OLDFLG+8                                     02S1226 04078000
         O     @14,@CF00092                                     02S1226 04079000
         STC   @14,OLDFLG+8                                     02S1226 04080000
*           ADPLFMT1=ADDR(GP4TYP24);/* ADDR OF LABELS FOR THIS LINE  */ 04081000
@RF01225 L     @14,ABDPLPTR(,PLISTPTR)                          02S1227 04082000
         LA    @07,GP4TYP24                                     02S1227 04083000
         ST    @07,ADPLFMT1(,@14)                               02S1227 04084000
*           ADPLFMT2=ADDR(RCD86LST);/* ADDR OF DATA IN BUFFER        */ 04085000
         LA    @07,46                                           02S1228 04086000
         AL    @07,DATAPTR(,PLISTPTR)                           02S1228 04087000
         ST    @07,ADPLFMT2(,@14)                               02S1228 04088000
*           R0=ADDR(DYNAMPTN);      /* ADDR OF PATTERNS FOR THIS LINE*/ 04089000
         LA    R0,DYNAMPTN                                      02S1229 04090000
*           CALL AMDPRFMT;          /* FORMAT LINE                   */ 04091000
         L     @15,FMTADDR(,PLISTPTR)                           02S1230 04092000
         BALR  @14,@15                                          02S1230 04093000
*           RETCODE=4;              /* INDICATES TO PRINT BUFFER AND    04094000
*                                      GET NEXT RECORD               */ 04095000
         LA    RETCODE,4                                        02S1231 04096000
*         END;                                                  02S1232 04097000
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */ 04098000
         B     CE0001@                                          02S1233 04099000
*     END S86;                      /* END OF SUBCASE                */ 04100000
*                                                               02S1235 04101000
*     /***************************************************************/ 04102000
*     /*                                                             */ 04103000
*     /* THIS ROUTINE WILL PROCESS SVC 88. THE FORMATTING CONSISTS OF*/ 04104000
*     /* THE BASIC RECORD + A DEB ADDR + A DSSTAT + A DEVMOD.        */ 04105000
*     /*                                                             */ 04106000
*     /***************************************************************/ 04107000
*                                                               02S1235 04108000
*S88:                                                           02S1235 04109000
*     DO;                           /* SUBCASE                       */ 04110000
S88      DS    0H                                               02S1236 04111000
*       IF TIMESW=0 THEN            /* HAS SECOND LINE BEEN FORMATTED*/ 04112000
         SLR   @14,@14                                          02S1236 04113000
         CH    @14,TIMESW                                       02S1236 04114000
         BNE   @RF01236                                         02S1236 04115000
*         RETCODE=0;                /* NO - INDICATES TO PRINT BUFFER   04116000
*                                      AND RETURN FOR SECOND PASS    */ 04117000
         LR    RETCODE,@14                                      02S1237 04118000
*       ELSE                                                    02S1238 04119000
*         DO;                       /* YES - CHECK FIELDS FOR ERRORS    04120000
*                                      & FORMAT THEM                 */ 04121000
         B     @RC01236                                         02S1238 04122000
@RF01236 DS    0H                                               02S1239 04123000
*           DYNAMPTN(1:LENGTH(GP4S88))=GP4S88;/* MOVE PATTERNS TO       04124000
*                                      GETMAINED AREA                */ 04125000
         MVC   DYNAMPTN(13),GP4S88                              02S1239 04126000
*           IF RCD88DEB=ASTER4|RCD88DEB=PEES4|RCD88DEB=ESSES4 THEN/*    04127000
*                                      IS FIELD IN ERROR             */ 04128000
         LA    @14,46                                           02S1240 04129000
         AL    @14,DATAPTR(,PLISTPTR)                           02S1240 04130000
         CLC   RCD88DEB(4,@14),ASTER4                           02S1240 04131000
         BE    @RT01240                                         02S1240 04132000
         CLC   RCD88DEB(4,@14),PEES4                            02S1240 04133000
         BE    @RT01240                                         02S1240 04134000
         CLC   RCD88DEB(4,@14),ESSES4                           02S1240 04135000
         BNE   @RF01240                                         02S1240 04136000
@RT01240 DS    0H                                               02S1241 04137000
*             OLDFLG(1)=OLDFLG(1)|CHARFLAG;/* YES - INDICATE DATA IN    04138000
*                                      EBCDIC                        */ 04139000
         SLR   @14,@14                                          02S1241 04140000
         IC    @14,OLDFLG                                       02S1241 04141000
         O     @14,@CF00092                                     02S1241 04142000
         STC   @14,OLDFLG                                       02S1241 04143000
*           IF DSSTAT=ASTER1|DSSTAT=PEES1|DSSTAT=ESSES1 THEN/* IS       04144000
*                                      FIELD IN ERROR                */ 04145000
@RF01240 LA    @14,46                                           02S1242 04146000
         AL    @14,DATAPTR(,PLISTPTR)                           02S1242 04147000
         CLC   DSSTAT(1,@14),ASTER1                             02S1242 04148000
         BE    @RT01242                                         02S1242 04149000
         CLC   DSSTAT(1,@14),PEES1                              02S1242 04150000
         BE    @RT01242                                         02S1242 04151000
         CLC   DSSTAT(1,@14),ESSES1                             02S1242 04152000
         BNE   @RF01242                                         02S1242 04153000
@RT01242 DS    0H                                               02S1243 04154000
*             OLDFLG(2)=OLDFLG(2)|CHARFLAG;/* YES - INDICATE DATA IN    04155000
*                                      EBCDIC                        */ 04156000
         SLR   @14,@14                                          02S1243 04157000
         IC    @14,OLDFLG+4                                     02S1243 04158000
         O     @14,@CF00092                                     02S1243 04159000
         STC   @14,OLDFLG+4                                     02S1243 04160000
*           IF DEVMOD=ASTER1|DEVMOD=PEES1|DEVMOD=ESSES1 THEN/* IS       04161000
*                                      FIELD IN ERROR                */ 04162000
@RF01242 LA    @14,46                                           02S1244 04163000
         AL    @14,DATAPTR(,PLISTPTR)                           02S1244 04164000
         CLC   DEVMOD(1,@14),ASTER1                             02S1244 04165000
         BE    @RT01244                                         02S1244 04166000
         CLC   DEVMOD(1,@14),PEES1                              02S1244 04167000
         BE    @RT01244                                         02S1244 04168000
         CLC   DEVMOD(1,@14),ESSES1                             02S1244 04169000
         BNE   @RF01244                                         02S1244 04170000
@RT01244 DS    0H                                               02S1245 04171000
*             OLDFLG(3)=OLDFLG(3)|CHARFLAG;/* YES - INDICATE DATA IN    04172000
*                                      EBCDIC                        */ 04173000
         SLR   @14,@14                                          02S1245 04174000
         IC    @14,OLDFLG+8                                     02S1245 04175000
         O     @14,@CF00092                                     02S1245 04176000
         STC   @14,OLDFLG+8                                     02S1245 04177000
*           ADPLFMT1=ADDR(GP4TYP14);/* ADDR OF LABELS FOR THIS LINE  */ 04178000
@RF01244 L     @14,ABDPLPTR(,PLISTPTR)                          02S1246 04179000
         LA    @07,GP4TYP14                                     02S1246 04180000
         ST    @07,ADPLFMT1(,@14)                               02S1246 04181000
*           ADPLFMT2=ADDR(RCD88DEB);/* ADDR OF DATA IN BUFFER        */ 04182000
         LA    @07,46                                           02S1247 04183000
         AL    @07,DATAPTR(,PLISTPTR)                           02S1247 04184000
         ST    @07,ADPLFMT2(,@14)                               02S1247 04185000
*           R0=ADDR(DYNAMPTN);      /* ADDR OF PATTERNS              */ 04186000
         LA    R0,DYNAMPTN                                      02S1248 04187000
*           CALL AMDPRFMT;          /* FORMAT THE LINE               */ 04188000
         L     @15,FMTADDR(,PLISTPTR)                           02S1249 04189000
         BALR  @14,@15                                          02S1249 04190000
*           RETCODE=4;              /* INDICATES TO PRINT BUFFER AND    04191000
*                                      GET NEXT RECORD               */ 04192000
         LA    RETCODE,4                                        02S1250 04193000
*         END;                                                  02S1251 04194000
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */ 04195000
         B     CE0001@                                          02S1252 04196000
*     END S88;                      /* END OF SUBCASE                */ 04197000
*                                                               02S1254 04198000
*     /***************************************************************/ 04199000
*     /*                                                             */ 04200000
*     /* THIS ROUTINE WILL PROCESS SVC 98. THE FORMATTING CONSISTS OF*/ 04201000
*     /* THE BASIC RECORD + A 4 BYTE PLIST + A VARIABLE LENGTH       */ 04202000
*     /* DSNAME.                                                     */ 04203000
*     /*                                                             */ 04204000
*     /***************************************************************/ 04205000
*                                                               02S1254 04206000
*S98:                                                           02S1254 04207000
*     DO;                           /* SUBCASE                       */ 04208000
S98      DS    0H                                               02S1255 04209000
*       IF TIMESW=0 THEN            /* HAS SECOND LINE BEEN FORMATTED*/ 04210000
         SLR   @14,@14                                          02S1255 04211000
         CH    @14,TIMESW                                       02S1255 04212000
         BNE   @RF01255                                         02S1255 04213000
*         RETCODE=0;                /* NO - INDICATES TO PRINT BUFFER   04214000
*                                      AND RETURN FOR SECOND PASS    */ 04215000
         LR    RETCODE,@14                                      02S1256 04216000
*       ELSE                                                    02S1257 04217000
*         DO;                       /* YES - REGISTERS HAVE BEEN        04218000
*                                      FORMATTED                     */ 04219000
         B     @RC01255                                         02S1257 04220000
@RF01255 DS    0H                                               02S1258 04221000
*           DYNAMPTN(1:LENGTH(GP4S98))=GP4S98;/* MOVE PATTERNS TO       04222000
*                                      GETMAINED AREA                */ 04223000
         MVC   DYNAMPTN(21),GP4S98                              02S1258 04224000
*           IF RCD98LST=ASTER4|RCD98LST=PEES4|RCD98LST=ESSES4 THEN/*    04225000
*                                      IS FIELD IN ERROR             */ 04226000
         LA    @14,46                                           02S1259 04227000
         AL    @14,DATAPTR(,PLISTPTR)                           02S1259 04228000
         CLC   RCD98LST(4,@14),ASTER4                           02S1259 04229000
         BE    @RT01259                                         02S1259 04230000
         CLC   RCD98LST(4,@14),PEES4                            02S1259 04231000
         BE    @RT01259                                         02S1259 04232000
         CLC   RCD98LST(4,@14),ESSES4                           02S1259 04233000
         BNE   @RF01259                                         02S1259 04234000
@RT01259 DS    0H                                               02S1260 04235000
*             DO;                   /* YES                           */ 04236000
*               OLDFLG(1)=OLDFLG(1)|CHARFLAG;/* INDICATE DATA IN        04237000
*                                      EBCDIC                        */ 04238000
         SLR   @14,@14                                          02S1261 04239000
         IC    @14,OLDFLG                                       02S1261 04240000
         O     @14,@CF00092                                     02S1261 04241000
         STC   @14,OLDFLG                                       02S1261 04242000
*             END;                                              02S1262 04243000
*           IF RCD98LN¬=ERROR THEN  /* IS FIELD IN ERROR             */ 04244000
@RF01259 LA    @14,46                                           02S1263 04245000
         AL    @14,DATAPTR(,PLISTPTR)                           02S1263 04246000
         CLI   RCD98LN(@14),255                                 02S1263 04247000
         BE    @RF01263                                         02S1263 04248000
*             DO;                   /* NO-CHECK DATA LENGTH FOR ZERO */ 04249000
*               IF RCD98LN=0 THEN   /* IS THERE ANY DATA     @YM03669*/ 04250000
         CLI   RCD98LN(@14),0                                   02S1265 04251000
         BNE   @RF01265                                         02S1265 04252000
*                 DO;               /* NO                    @YM03669*/ 04253000
*                   OLDFLG(3)=OLDFLG(3)&DATAFLAG;/* INDICATE NO DATA    04254000
*                                                            @YM03669*/ 04255000
         SLR   @14,@14                                          02S1267 04256000
         IC    @14,OLDFLG+8                                     02S1267 04257000
         N     @14,@CF00295                                     02S1267 04258000
         STC   @14,OLDFLG+8                                     02S1267 04259000
*                   OLDLN(3)=96;    /* NEW LABEL LENGTH ((7-1)*16)      04260000
*                                      AND ZERO DATA LENGTH  @YM03669*/ 04261000
         MVI   OLDLN+8,X'60'                                    02S1268 04262000
*                   OLDFLG(4)=0;    /* INDICATE END OF PATTERNS 02S1269 04263000
*                                                            @YM03669*/ 04264000
         MVI   OLDFLG+12,X'00'                                  02S1269 04265000
*                 END;              /*                       @YM03669*/ 04266000
*               ELSE                /*                       @YM03669*/ 04267000
*                 DO;               /* YES - THERE IS DATA   @YM03669*/ 04268000
         B     @RC01265                                         02S1271 04269000
@RF01265 DS    0H                                               02S1272 04270000
*                   IF RCD98LN¬=44 THEN/* IS DSN MAX LENGTH          */ 04271000
         LA    @14,46                                           02S1272 04272000
         AL    @14,DATAPTR(,PLISTPTR)                           02S1272 04273000
         CLI   RCD98LN(@14),44                                  02S1272 04274000
         BE    @RF01272                                         02S1272 04275000
*                     DO;           /* NO                            */ 04276000
*                       K=RCD98LN/16;/* NUMBER OF FULL WORDS         */ 04277000
         SLR   @05,@05                                          02S1274 04278000
         IC    @05,RCD98LN(,@14)                                02S1274 04279000
         LR    K,@05                                            02S1274 04280000
         SRL   K,4                                              02S1274 04281000
*                       MOD=RCD98LN//16;/* REMAINDER OF PARTIAL WORD */ 04282000
         LR    @02,@05                                          02S1275 04283000
         SRDA  @02,32                                           02S1275 04284000
         D     @02,@CF00139                                     02S1275 04285000
         LR    MOD,@02                                          02S1275 04286000
*                       IF MOD=0 THEN/* ARE ALL FULL WORDS           */ 04287000
         SLR   @14,@14                                          02S1276 04288000
         CR    MOD,@14                                          02S1276 04289000
         BNE   @RF01276                                         02S1276 04290000
*                         OLDFLG(K+3)=0;/* YES - INDICATE END OF        04291000
*                                      PATTERNS                      */ 04292000
         LR    @07,K                                            02S1277 04293000
         SLA   @07,2                                            02S1277 04294000
         STC   @14,OLDFLG+8(@07)                                02S1277 04295000
*                       ELSE                                    02S1278 04296000
*                         DO;       /* NO - MODIFY PATTERNS     02S1278 04297000
*                                      ACCORDINGLY                   */ 04298000
         B     @RC01276                                         02S1278 04299000
@RF01276 DS    0H                                               02S1279 04300000
*                           OLDLN(K+3)=OLDLN(K+3)&DATAOFF;/* SET DATA   04301000
*                                      LENGTH TO ZERO                */ 04302000
         LR    @14,K                                            02S1279 04303000
         SLA   @14,2                                            02S1279 04304000
         SLR   @05,@05                                          02S1279 04305000
         IC    @05,OLDLN+8(@14)                                 02S1279 04306000
         N     @05,@CF00297                                     02S1279 04307000
         STC   @05,OLDLN+8(@14)                                 02S1279 04308000
*                           OLDLN(K+3)=OLDLN(K+3)|(MOD-1);/* NEW DATA   04309000
*                                      LENGTH                        */ 04310000
         LR    @03,MOD                                          02S1280 04311000
         BCTR  @03,0                                            02S1280 04312000
         OR    @05,@03                                          02S1280 04313000
         STC   @05,OLDLN+8(@14)                                 02S1280 04314000
*                           OLDFLG(K+4)=0;/* INDICATE END OF PATTERNS*/ 04315000
         SLR   @07,@07                                          02S1281 04316000
         STC   @07,OLDFLG+12(@14)                               02S1281 04317000
*                         END;                                  02S1282 04318000
*                     END;                                      02S1283 04319000
*                 END;              /*                       @YM03669*/ 04320000
*             END;                                              02S1285 04321000
*           ELSE                                                02S1286 04322000
*             DO;                   /* YES - FIELD IS IN ERROR       */ 04323000
         B     @RC01263                                         02S1286 04324000
@RF01263 DS    0H                                               02S1287 04325000
*               OLDLN(3)=OLDLN(3)&DATAOFF;/* ZERO DATA LENGTH        */ 04326000
         SLR   @14,@14                                          02S1287 04327000
         IC    @14,OLDLN+8                                      02S1287 04328000
         N     @14,@CF00297                                     02S1287 04329000
         STC   @14,OLDLN+8                                      02S1287 04330000
*               OLDLN(3)=OLDLN(3)|DATALN4;/* SET DATA LENGTH TO 02S1288 04331000
*                                      FORMAT 4 BYTES                */ 04332000
         O     @14,@CF00170                                     02S1288 04333000
         STC   @14,OLDLN+8                                      02S1288 04334000
*               OLDFLG(4)=0;        /* INDICATE END OF PATTERNS      */ 04335000
         MVI   OLDFLG+12,X'00'                                  02S1289 04336000
*             END;                                              02S1290 04337000
*           ADPLFMT1=ADDR(GP4TYP19);/* ADDR OF LABELS FOR THIS LINE  */ 04338000
@RC01263 L     @14,ABDPLPTR(,PLISTPTR)                          02S1291 04339000
         LA    @07,GP4TYP19                                     02S1291 04340000
         ST    @07,ADPLFMT1(,@14)                               02S1291 04341000
*           ADPLFMT2=ADDR(RCD98LST);/* ADDR OF DATA IN BUFFER        */ 04342000
         LA    @07,46                                           02S1292 04343000
         AL    @07,DATAPTR(,PLISTPTR)                           02S1292 04344000
         ST    @07,ADPLFMT2(,@14)                               02S1292 04345000
*           R0=ADDR(DYNAMPTN);      /* ADDR OF PATTERNS              */ 04346000
         LA    R0,DYNAMPTN                                      02S1293 04347000
*           CALL AMDPRFMT;          /* FORMAT THE LINE               */ 04348000
         L     @15,FMTADDR(,PLISTPTR)                           02S1294 04349000
         BALR  @14,@15                                          02S1294 04350000
*           RETCODE=4;              /* INDICATES TO PRINT BUFFER AND    04351000
*                                      GET NEXT RECORD               */ 04352000
         LA    RETCODE,4                                        02S1295 04353000
*         END;                                                  02S1296 04354000
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */ 04355000
         B     CE0001@                                          02S1297 04356000
*     END S98;                      /* END OF SUBCASE                */ 04357000
*CE0001@:                                                       02S1299 04358000
*   END;                            /* END OF CASE                   */ 04359000
*                                                               02S1299 04360000
CE0001@  DS    0H                                               02S1300 04361000
*   /*****************************************************************/ 04362000
*   /*                                                               */ 04363000
*   /* RETURN TO CALLER WITH RETURN CODE IN REGISTER 15.             */ 04364000
*   /*                                                               */ 04365000
*   /*****************************************************************/ 04366000
*                                                               02S1300 04367000
*   RESPECIFY                                                   02S1300 04368000
*     R14 RESTRICTED;                                           02S1300 04369000
*   R14=SAVER14;                    /* ADDR OF RETURN POINT          */ 04370000
         L     R14,SAVER14                                      02S1301 04371000
*   RESPECIFY                                                   02S1302 04372000
*     R14 UNRESTRICTED;                                         02S1302 04373000
*   RETURN CODE(RETCODE);           /* RETURN TO CALLER WITH RETURN     04374000
*                                      CODE                          */ 04375000
@EL00002 DS    0H                                               02S1303 04376000
@EF00002 DS    0H                                               02S1303 04377000
@ER00002 BR    @14                                              02S1303 04378000
*   END SVCFORMX;                                               02S1304 04379000
*   END AMDSYS01                                                01S1305 04380000
*                                                               01S1305 04381000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */ 04382000
*/*%INCLUDE SYSUT5  (SYS01LOG)                                       */ 04383000
*/*%INCLUDE SYSUT5  (MACROS  )                                       */ 04384000
*/*%INCLUDE SYSLIB  (AMDPRTAB)                                       */ 04385000
*/*%INCLUDE SYSLIB  (IHAABDPL)                                       */ 04386000
*/*%INCLUDE SYSUT5  (SYS01DCL)                                       */ 04387000
*/*%INCLUDE SYSUT5  (FORMTPTN)                                       */ 04388000
*/*%INCLUDE SYSUT5  (CHECKSVC)                                       */ 04389000
*/*%INCLUDE SYSUT5  (BASICLN1)                                       */ 04390000
*/*%INCLUDE SYSUT5  (BASICLN2)                                       */ 04391000
*/*%INCLUDE SYSUT5  (SVCFORMX)                                       */ 04392000
*                                                               01S1305 04393000
*       ;                                                       01S1305 04394000
@DATA    DS    0H                                                       04395000
@CH00046 DC    H'1'                                                     04396000
@CH00078 DC    H'2'                                                     04397000
@CH00434 DC    H'14'                                                    04398000
@CH00514 DC    H'33'                                                    04399000
@CH01324 DC    H'36'                                                    04400000
@CH00563 DC    H'42'                                                    04401000
@CH01425 DC    H'45'                                                    04402000
@CH01327 DC    H'82'                                                    04403000
@CH01372 DC    XL2'FF'                                                  04404000
@DATD    DSECT                                                          04405000
         DS    0F                                                       04406000
@SA00001 DS    18F                                                      04407000
AMDSYS01 CSECT                                                          04408000
         DS    0F                                                       04409000
@CF00170 DC    F'3'                                                     04410000
@CH00170 EQU   @CF00170+2                                               04411000
@CF00099 DC    F'4'                                                     04412000
@CF00034 DC    F'8'                                                     04413000
@CH00034 EQU   @CF00034+2                                               04414000
@CF00139 DC    F'16'                                                    04415000
@CF00092 DC    F'32'                                                    04416000
@CF00297 DC    F'240'                                                   04417000
@CF00295 DC    F'251'                                                   04418000
@DATD    DSECT                                                          04419000
         DS    0D                                                       04420000
FIELDADR DS    A                                                        04421000
SAVER14  DS    A                                                        04422000
PTRNADDR DS    A                                                        04423000
TIMESW   DS    H                                                        04424000
         DS    0D                                                       04425000
@TS00001 DS    CL8                                                      04426000
DYNAMPTN DS    CL48                                                     04427000
PAKEDSVC DS    CL2                                                      04428000
UNPAKTO  DS    CL5                                                      04429000
DATALNTH DS    CL1                                                      04430000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                04431000
@ENDDATD EQU   *                                                        04432000
AMDSYS01 CSECT                                                          04433000
         NOPR  ((@ENDDATD-@DATD)/201*16)                                04434000
         DS    0F                                                       04435000
@SIZDATD DC    AL1(0)                                                   04436000
         DC    AL3(@ENDDATD-@DATD)                                      04437000
         DS    0D                                                       04438000
@CB01365 DC    X'EEEE'                                                  04439000
@CB01430 DC    X'006E'                                                  04440000
@CB01431 DC    X'0076'                                                  04441000
ASTER20  DC    CL20'********************'                               04442000
         ORG   ASTER20                                                  04443000
ASTER16  DS    CL16                                                     04444000
         ORG   ASTER16                                                  04445000
ASTER12  DS    CL12                                                     04446000
         ORG   ASTER12                                                  04447000
ASTER8   DS    CL8                                                      04448000
         ORG   ASTER8                                                   04449000
ASTER6   DS    CL6                                                      04450000
         ORG   ASTER6                                                   04451000
ASTER5   DS    CL5                                                      04452000
         ORG   ASTER8+6                                                 04453000
ASTER2   DS    CL2                                                      04454000
         ORG   ASTER12+8                                                04455000
ASTER4   DS    CL4                                                      04456000
         ORG   ASTER16+12                                               04457000
ASTER1   DS    CL1                                                      04458000
         ORG   ASTER20+20                                               04459000
PEES20   DC    CL20'PPPPPPPPPPPPPPPPPPPP'                               04460000
         ORG   PEES20                                                   04461000
PEES16   DS    CL16                                                     04462000
         ORG   PEES16                                                   04463000
PEES12   DS    CL12                                                     04464000
         ORG   PEES12                                                   04465000
PEES8    DS    CL8                                                      04466000
         ORG   PEES8                                                    04467000
PEES6    DS    CL6                                                      04468000
         ORG   PEES6                                                    04469000
PEES5    DS    CL5                                                      04470000
         ORG   PEES8+6                                                  04471000
PEES2    DS    CL2                                                      04472000
         ORG   PEES12+8                                                 04473000
PEES4    DS    CL4                                                      04474000
         ORG   PEES16+12                                                04475000
PEES1    DS    CL1                                                      04476000
         ORG   PEES20+20                                                04477000
ESSES20  DC    CL20'SSSSSSSSSSSSSSSSSSSS'                               04478000
         ORG   ESSES20                                                  04479000
ESSES16  DS    CL16                                                     04480000
         ORG   ESSES16                                                  04481000
ESSES12  DS    CL12                                                     04482000
         ORG   ESSES12                                                  04483000
ESSES8   DS    CL8                                                      04484000
         ORG   ESSES8                                                   04485000
ESSES6   DS    CL6                                                      04486000
         ORG   ESSES6                                                   04487000
ESSES5   DS    CL5                                                      04488000
         ORG   ESSES8+6                                                 04489000
ESSES2   DS    CL2                                                      04490000
         ORG   ESSES12+8                                                04491000
ESSES4   DS    CL4                                                      04492000
         ORG   ESSES16+12                                               04493000
ESSES1   DS    CL1                                                      04494000
         ORG   ESSES20+20                                               04495000
UA       DC    CL4'U/A '                                                04496000
LBASICL0 DC    CL3'SVC'                                                 04497000
LBASICL1 DC    CL25'ASCBCPUJOBNOLD PSWTCBMODN'                          04498000
LBASICL2 DC    CL7'R15R0R1'                                             04499000
LDDNL1   DC    CL3'DDN'                                                 04500000
GROUP2   DC    CL9'PLIST N/A'                                           04501000
GP4TYP1  DC    CL6'DCBDEB'                                              04502000
GP4TYP2  DC    CL10'VOLIST N/A'                                         04503000
GP4TYP3  DC    CL15'EP/DE NAMEPLIST'                                    04504000
GP4TYP4  DC    CL9'COMP CODE'                                           04505000
GP4TYP5  DC    CL4'PICA'                                                04506000
GP4TYP6  DC    CL14'ERR FLGSTCBCUU'                                     04507000
GP4TYP7  DC    CL12'DCBPRG PLIST'                                       04508000
GP4TYP8  DC    CL16'DCBFDADDCBTRKBAL'                                   04509000
GP4TYP9  DC    CL6'DSN/CI'                                              04510000
GP4TYP9A DC    CL6'DSN   '                                              04511000
GP4TYP10 DC    CL12'PLISTVOL-SER'                                       04512000
GP4TP10A DC    CL7'DSN/TTR'                                             04513000
GP4TYP11 DC    CL3'R13'                                                 04514000
GP4TYP12 DC    CL7'OLD DSN'                                             04515000
GP4TP12A DC    CL7'NEW DSN'                                             04516000
GP4TYP13 DC    CL6'CUUDSN'                                              04517000
GP4TYP14 DC    CL15'DEBDSSTATDEVMOD'                                    04518000
GP4TYP15 DC    CL4'NAME'                                                04519000
GP4TYP16 DC    CL9'SPVR LIST'                                           04520000
GP4TP16A DC    CL14'PROB PLIST N/A'                                     04521000
GP4TYP17 DC    CL9'CHAP TCB '                                           04522000
GP4TYP18 DC    CL10'MAJORMINOR'                                         04523000
GP4TYP19 DC    CL12'PLISTDSN N/A'                                       04524000
GP4TYP20 DC    CL9'DETCH TCB'                                           04525000
GP4TYP21 DC    CL8'IOBERINF'                                            04526000
GP4TYP22 DC    CL7'IQE N/A'                                             04527000
GP4TYP23 DC    CL7'VOL-SER'                                             04528000
GP4TP23A DC    CL7'TTR N/A'                                             04529000
GP4TYP24 DC    CL8'PLISTTTR'                                            04530000
SVCTITLE DS    CL9                                                      04531000
         ORG   SVCTITLE                                                 04532000
@NM00009 DC    AL1(55)                                                  04533000
@NM00010 DC    AL1(34)                                                  04534000
@NM00011 DC    AL1(0)                                                   04535000
@NM00012 DC    AL1(6)                                                   04536000
@NM00013 DC    AL4(LBASICL0)                                            04537000
@NM00014 DC    AL1(0)                                                   04538000
         ORG   SVCTITLE+9                                               04539000
         DS    CL3                                                      04540000
FIRSTLN  DS    CL33                                                     04541000
         ORG   FIRSTLN                                                  04542000
@NM00015 DC    AL1(23)                                                  04543000
@NM00016 DC    AL1(51)                                                  04544000
@NM00017 DC    AL1(10)                                                  04545000
@NM00018 DC    AL1(15)                                                  04546000
@NM00019 DC    AL4(LBASICL1)                                            04547000
@NM00020 DC    AL1(21)                                                  04548000
@NM00021 DC    AL1(33)                                                  04549000
@NM00022 DC    AL1(25)                                                  04550000
@NM00023 DC    AL1(29)                                                  04551000
@NM00024 DC    AL1(53)                                                  04552000
@NM00025 DC    AL1(55)                                                  04553000
@NM00026 DC    AL1(35)                                                  04554000
@NM00027 DC    AL1(40)                                                  04555000
@NM00028 DC    AL1(21)                                                  04556000
@NM00029 DC    AL1(99)                                                  04557000
@NM00030 DC    AL1(50)                                                  04558000
@NM00031 DC    AL1(58)                                                  04559000
@NM00032 DC    AL1(20)                                                  04560000
@NM00033 DC    AL1(3)                                                   04561000
@NM00034 DC    AL1(0)                                                   04562000
@NM00035 DC    AL1(67)                                                  04563000
@NM00036 DC    AL1(21)                                                  04564000
@NM00037 DC    AL1(35)                                                  04565000
@NM00038 DC    AL1(77)                                                  04566000
@NM00039 DC    AL1(81)                                                  04567000
@NM00040 DC    AL1(53)                                                  04568000
@NM00041 DC    AL1(55)                                                  04569000
@NM00042 DC    AL1(91)                                                  04570000
@NM00043 DC    AL1(96)                                                  04571000
@NM00044 DC    AL1(0)                                                   04572000
         ORG   FIRSTLN+33                                               04573000
         DS    CL3                                                      04574000
SECONDLN DS    CL13                                                     04575000
         ORG   SECONDLN                                                 04576000
@NM00045 DC    AL1(21)                                                  04577000
@NM00046 DC    AL1(35)                                                  04578000
@NM00047 DC    AL1(10)                                                  04579000
@NM00048 DC    AL1(15)                                                  04580000
@NM00049 DC    AL1(21)                                                  04581000
@NM00050 DC    AL1(19)                                                  04582000
@NM00051 DC    AL1(25)                                                  04583000
@NM00052 DC    AL1(29)                                                  04584000
@NM00053 DC    AL1(21)                                                  04585000
@NM00054 DC    AL1(19)                                                  04586000
@NM00055 DC    AL1(39)                                                  04587000
@NM00056 DC    AL1(42)                                                  04588000
@NM00057 DC    AL1(0)                                                   04589000
         ORG   SECONDLN+13                                              04590000
         DS    CL3                                                      04591000
DDNLN1   DS    CL5                                                      04592000
         ORG   DDNLN1                                                   04593000
@NM00058 DC    AL1(53)                                                  04594000
@NM00059 DC    AL1(39)                                                  04595000
@NM00060 DC    AL1(106)                                                 04596000
@NM00061 DC    AL1(110)                                                 04597000
@NM00062 DC    AL1(0)                                                   04598000
         ORG   DDNLN1+5                                                 04599000
         DS    CL3                                                      04600000
GRP2LN3  DS    CL41                                                     04601000
         ORG   GRP2LN3                                                  04602000
@NM00063 DC    AL1(21)                                                  04603000
@NM00064 DC    AL1(67)                                                  04604000
@NM00065 DC    AL1(10)                                                  04605000
@NM00066 DC    AL1(16)                                                  04606000
@NM00067 DC    AL1(20)                                                  04607000
@NM00068 DC    AL1(3)                                                   04608000
@NM00069 DC    AL1(0)                                                   04609000
@NM00070 DC    AL1(25)                                                  04610000
@NM00071 DC    AL1(20)                                                  04611000
@NM00072 DC    AL1(3)                                                   04612000
@NM00073 DC    AL1(0)                                                   04613000
@NM00074 DC    AL1(34)                                                  04614000
@NM00075 DC    AL1(20)                                                  04615000
@NM00076 DC    AL1(3)                                                   04616000
@NM00077 DC    AL1(0)                                                   04617000
@NM00078 DC    AL1(43)                                                  04618000
@NM00079 DC    AL1(20)                                                  04619000
@NM00080 DC    AL1(3)                                                   04620000
@NM00081 DC    AL1(0)                                                   04621000
@NM00082 DC    AL1(52)                                                  04622000
@NM00083 DC    AL1(20)                                                  04623000
@NM00084 DC    AL1(3)                                                   04624000
@NM00085 DC    AL1(0)                                                   04625000
@NM00086 DC    AL1(61)                                                  04626000
@NM00087 DC    AL1(20)                                                  04627000
@NM00088 DC    AL1(3)                                                   04628000
@NM00089 DC    AL1(0)                                                   04629000
@NM00090 DC    AL1(70)                                                  04630000
@NM00091 DC    AL1(20)                                                  04631000
@NM00092 DC    AL1(3)                                                   04632000
@NM00093 DC    AL1(0)                                                   04633000
@NM00094 DC    AL1(79)                                                  04634000
@NM00095 DC    AL1(20)                                                  04635000
@NM00096 DC    AL1(3)                                                   04636000
@NM00097 DC    AL1(0)                                                   04637000
@NM00098 DC    AL1(88)                                                  04638000
@NM00099 DC    AL1(20)                                                  04639000
@NM00100 DC    AL1(3)                                                   04640000
@NM00101 DC    AL1(0)                                                   04641000
@NM00102 DC    AL1(97)                                                  04642000
@NM00103 DC    AL1(0)                                                   04643000
         ORG   GRP2LN3+41                                               04644000
         DS    CL3                                                      04645000
GP2NA    DS    CL5                                                      04646000
         ORG   GP2NA                                                    04647000
@NM00104 DC    AL1(17)                                                  04648000
@NM00105 DC    AL1(128)                                                 04649000
@NM00106 DC    AL1(10)                                                  04650000
@NM00107 DC    AL1(0)                                                   04651000
@NM00108 DC    AL1(0)                                                   04652000
         ORG   GP2NA+5                                                  04653000
         DS    CL3                                                      04654000
GP4S00   DS    CL9                                                      04655000
         ORG   GP4S00                                                   04656000
@NM00109 DC    AL1(21)                                                  04657000
@NM00110 DC    AL1(35)                                                  04658000
@NM00111 DC    AL1(52)                                                  04659000
@NM00112 DC    AL1(56)                                                  04660000
@NM00113 DC    AL1(21)                                                  04661000
@NM00114 DC    AL1(35)                                                  04662000
@NM00115 DC    AL1(66)                                                  04663000
@NM00116 DC    AL1(70)                                                  04664000
@NM00117 DC    AL1(0)                                                   04665000
         ORG   GP4S00+9                                                 04666000
         DS    CL3                                                      04667000
GP4S06   DS    CL17                                                     04668000
         ORG   GP4S06                                                   04669000
@NM00118 DC    AL1(53)                                                  04670000
@NM00119 DC    AL1(151)                                                 04671000
@NM00120 DC    AL1(52)                                                  04672000
@NM00121 DC    AL1(63)                                                  04673000
@NM00122 DC    AL1(21)                                                  04674000
@NM00123 DC    AL1(67)                                                  04675000
@NM00124 DC    AL1(73)                                                  04676000
@NM00125 DC    AL1(79)                                                  04677000
@NM00126 DC    AL1(20)                                                  04678000
@NM00127 DC    AL1(3)                                                   04679000
@NM00128 DC    AL1(0)                                                   04680000
@NM00129 DC    AL1(88)                                                  04681000
@NM00130 DC    AL1(20)                                                  04682000
@NM00131 DC    AL1(3)                                                   04683000
@NM00132 DC    AL1(0)                                                   04684000
@NM00133 DC    AL1(97)                                                  04685000
@NM00134 DC    AL1(0)                                                   04686000
         ORG   GP4S06+17                                                04687000
         DS    CL3                                                      04688000
GP4S08   DS    CL5                                                      04689000
         ORG   GP4S08                                                   04690000
@NM00135 DC    AL1(53)                                                  04691000
@NM00136 DC    AL1(151)                                                 04692000
@NM00137 DC    AL1(52)                                                  04693000
@NM00138 DC    AL1(63)                                                  04694000
@NM00139 DC    AL1(0)                                                   04695000
         ORG   GP4S08+5                                                 04696000
         DS    CL3                                                      04697000
GP4S13   DS    CL5                                                      04698000
         ORG   GP4S13                                                   04699000
@NM00140 DC    AL1(21)                                                  04700000
@NM00141 DC    AL1(131)                                                 04701000
@NM00142 DC    AL1(52)                                                  04702000
@NM00143 DC    AL1(63)                                                  04703000
@NM00144 DC    AL1(0)                                                   04704000
         ORG   GP4S13+5                                                 04705000
         DS    CL3                                                      04706000
GP4S14   DS    CL5                                                      04707000
         ORG   GP4S14                                                   04708000
@NM00145 DC    AL1(21)                                                  04709000
@NM00146 DC    AL1(53)                                                  04710000
@NM00147 DC    AL1(52)                                                  04711000
@NM00148 DC    AL1(58)                                                  04712000
@NM00149 DC    AL1(0)                                                   04713000
         ORG   GP4S14+5                                                 04714000
         DS    CL3                                                      04715000
GP4S15   DS    CL13                                                     04716000
         ORG   GP4S15                                                   04717000
@NM00150 DC    AL1(21)                                                  04718000
@NM00151 DC    AL1(112)                                                 04719000
@NM00152 DC    AL1(52)                                                  04720000
@NM00153 DC    AL1(61)                                                  04721000
@NM00154 DC    AL1(21)                                                  04722000
@NM00155 DC    AL1(35)                                                  04723000
@NM00156 DC    AL1(66)                                                  04724000
@NM00157 DC    AL1(70)                                                  04725000
@NM00158 DC    AL1(21)                                                  04726000
@NM00159 DC    AL1(33)                                                  04727000
@NM00160 DC    AL1(80)                                                  04728000
@NM00161 DC    AL1(84)                                                  04729000
@NM00162 DC    AL1(0)                                                   04730000
         ORG   GP4S15+13                                                04731000
         DS    CL3                                                      04732000
GP4S16   DS    CL17                                                     04733000
         ORG   GP4S16                                                   04734000
@NM00163 DC    AL1(21)                                                  04735000
@NM00164 DC    AL1(35)                                                  04736000
@NM00165 DC    AL1(52)                                                  04737000
@NM00166 DC    AL1(56)                                                  04738000
@NM00167 DC    AL1(21)                                                  04739000
@NM00168 DC    AL1(131)                                                 04740000
@NM00169 DC    AL1(66)                                                  04741000
@NM00170 DC    AL1(76)                                                  04742000
@NM00171 DC    AL1(20)                                                  04743000
@NM00172 DC    AL1(3)                                                   04744000
@NM00173 DC    AL1(0)                                                   04745000
@NM00174 DC    AL1(85)                                                  04746000
@NM00175 DC    AL1(20)                                                  04747000
@NM00176 DC    AL1(3)                                                   04748000
@NM00177 DC    AL1(0)                                                   04749000
@NM00178 DC    AL1(94)                                                  04750000
@NM00179 DC    AL1(0)                                                   04751000
         ORG   GP4S16+17                                                04752000
         DS    CL3                                                      04753000
GP4S21   DS    CL17                                                     04754000
         ORG   GP4S21                                                   04755000
@NM00180 DC    AL1(21)                                                  04756000
@NM00181 DC    AL1(67)                                                  04757000
@NM00182 DC    AL1(52)                                                  04758000
@NM00183 DC    AL1(58)                                                  04759000
@NM00184 DC    AL1(20)                                                  04760000
@NM00185 DC    AL1(3)                                                   04761000
@NM00186 DC    AL1(0)                                                   04762000
@NM00187 DC    AL1(67)                                                  04763000
@NM00188 DC    AL1(20)                                                  04764000
@NM00189 DC    AL1(3)                                                   04765000
@NM00190 DC    AL1(0)                                                   04766000
@NM00191 DC    AL1(76)                                                  04767000
@NM00192 DC    AL1(20)                                                  04768000
@NM00193 DC    AL1(3)                                                   04769000
@NM00194 DC    AL1(0)                                                   04770000
@NM00195 DC    AL1(85)                                                  04771000
@NM00196 DC    AL1(0)                                                   04772000
         ORG   GP4S21+17                                                04773000
         DS    CL3                                                      04774000
GP4S21A  DS    CL33                                                     04775000
         ORG   GP4S21A                                                  04776000
@NM00197 DC    AL1(20)                                                  04777000
@NM00198 DC    AL1(3)                                                   04778000
@NM00199 DC    AL1(0)                                                   04779000
@NM00200 DC    AL1(15)                                                  04780000
@NM00201 DC    AL1(20)                                                  04781000
@NM00202 DC    AL1(3)                                                   04782000
@NM00203 DC    AL1(0)                                                   04783000
@NM00204 DC    AL1(24)                                                  04784000
@NM00205 DC    AL1(20)                                                  04785000
@NM00206 DC    AL1(3)                                                   04786000
@NM00207 DC    AL1(0)                                                   04787000
@NM00208 DC    AL1(33)                                                  04788000
@NM00209 DC    AL1(20)                                                  04789000
@NM00210 DC    AL1(3)                                                   04790000
@NM00211 DC    AL1(0)                                                   04791000
@NM00212 DC    AL1(42)                                                  04792000
@NM00213 DC    AL1(20)                                                  04793000
@NM00214 DC    AL1(3)                                                   04794000
@NM00215 DC    AL1(0)                                                   04795000
@NM00216 DC    AL1(51)                                                  04796000
@NM00217 DC    AL1(20)                                                  04797000
@NM00218 DC    AL1(3)                                                   04798000
@NM00219 DC    AL1(0)                                                   04799000
@NM00220 DC    AL1(60)                                                  04800000
@NM00221 DC    AL1(20)                                                  04801000
@NM00222 DC    AL1(3)                                                   04802000
@NM00223 DC    AL1(0)                                                   04803000
@NM00224 DC    AL1(69)                                                  04804000
@NM00225 DC    AL1(20)                                                  04805000
@NM00226 DC    AL1(3)                                                   04806000
@NM00227 DC    AL1(0)                                                   04807000
@NM00228 DC    AL1(78)                                                  04808000
@NM00229 DC    AL1(0)                                                   04809000
         ORG   GP4S21A+33                                               04810000
         DS    CL3                                                      04811000
GP4S25   DS    CL13                                                     04812000
         ORG   GP4S25                                                   04813000
@NM00230 DC    AL1(21)                                                  04814000
@NM00231 DC    AL1(99)                                                  04815000
@NM00232 DC    AL1(52)                                                  04816000
@NM00233 DC    AL1(61)                                                  04817000
@NM00234 DC    AL1(20)                                                  04818000
@NM00235 DC    AL1(3)                                                   04819000
@NM00236 DC    AL1(0)                                                   04820000
@NM00237 DC    AL1(70)                                                  04821000
@NM00238 DC    AL1(21)                                                  04822000
@NM00239 DC    AL1(129)                                                 04823000
@NM00240 DC    AL1(80)                                                  04824000
@NM00241 DC    AL1(90)                                                  04825000
@NM00242 DC    AL1(0)                                                   04826000
         ORG   GP4S25+13                                                04827000
         DS    CL3                                                      04828000
GP4S26A  DS    CL21                                                     04829000
         ORG   GP4S26A                                                  04830000
@NM00243 DC    AL1(21)                                                  04831000
@NM00244 DC    AL1(67)                                                  04832000
@NM00245 DC    AL1(52)                                                  04833000
@NM00246 DC    AL1(58)                                                  04834000
@NM00247 DC    AL1(20)                                                  04835000
@NM00248 DC    AL1(3)                                                   04836000
@NM00249 DC    AL1(0)                                                   04837000
@NM00250 DC    AL1(67)                                                  04838000
@NM00251 DC    AL1(20)                                                  04839000
@NM00252 DC    AL1(3)                                                   04840000
@NM00253 DC    AL1(0)                                                   04841000
@NM00254 DC    AL1(76)                                                  04842000
@NM00255 DC    AL1(20)                                                  04843000
@NM00256 DC    AL1(3)                                                   04844000
@NM00257 DC    AL1(0)                                                   04845000
@NM00258 DC    AL1(85)                                                  04846000
@NM00259 DC    AL1(20)                                                  04847000
@NM00260 DC    AL1(3)                                                   04848000
@NM00261 DC    AL1(0)                                                   04849000
@NM00262 DC    AL1(94)                                                  04850000
@NM00263 DC    AL1(0)                                                   04851000
         ORG   GP4S26A+21                                               04852000
         DS    CL3                                                      04853000
GP4S26B  DS    CL13                                                     04854000
         ORG   GP4S26B                                                  04855000
@NM00264 DC    AL1(53)                                                  04856000
@NM00265 DC    AL1(95)                                                  04857000
@NM00266 DC    AL1(10)                                                  04858000
@NM00267 DC    AL1(18)                                                  04859000
@NM00268 DC    AL1(52)                                                  04860000
@NM00269 DC    AL1(15)                                                  04861000
@NM00270 DC    AL1(0)                                                   04862000
@NM00271 DC    AL1(34)                                                  04863000
@NM00272 DC    AL1(52)                                                  04864000
@NM00273 DC    AL1(11)                                                  04865000
@NM00274 DC    AL1(0)                                                   04866000
@NM00275 DC    AL1(50)                                                  04867000
@NM00276 DC    AL1(0)                                                   04868000
         ORG   GP4S26B+13                                               04869000
         DS    CL3                                                      04870000
GP4S26C  DS    CL41                                                     04871000
         ORG   GP4S26C                                                  04872000
@NM00277 DC    AL1(21)                                                  04873000
@NM00278 DC    AL1(83)                                                  04874000
@NM00279 DC    AL1(10)                                                  04875000
@NM00280 DC    AL1(17)                                                  04876000
@NM00281 DC    AL1(20)                                                  04877000
@NM00282 DC    AL1(3)                                                   04878000
@NM00283 DC    AL1(0)                                                   04879000
@NM00284 DC    AL1(26)                                                  04880000
@NM00285 DC    AL1(20)                                                  04881000
@NM00286 DC    AL1(3)                                                   04882000
@NM00287 DC    AL1(0)                                                   04883000
@NM00288 DC    AL1(35)                                                  04884000
@NM00289 DC    AL1(20)                                                  04885000
@NM00290 DC    AL1(3)                                                   04886000
@NM00291 DC    AL1(0)                                                   04887000
@NM00292 DC    AL1(44)                                                  04888000
@NM00293 DC    AL1(20)                                                  04889000
@NM00294 DC    AL1(3)                                                   04890000
@NM00295 DC    AL1(0)                                                   04891000
@NM00296 DC    AL1(53)                                                  04892000
@NM00297 DC    AL1(20)                                                  04893000
@NM00298 DC    AL1(3)                                                   04894000
@NM00299 DC    AL1(0)                                                   04895000
@NM00300 DC    AL1(62)                                                  04896000
@NM00301 DC    AL1(20)                                                  04897000
@NM00302 DC    AL1(3)                                                   04898000
@NM00303 DC    AL1(0)                                                   04899000
@NM00304 DC    AL1(71)                                                  04900000
@NM00305 DC    AL1(20)                                                  04901000
@NM00306 DC    AL1(3)                                                   04902000
@NM00307 DC    AL1(0)                                                   04903000
@NM00308 DC    AL1(80)                                                  04904000
@NM00309 DC    AL1(20)                                                  04905000
@NM00310 DC    AL1(3)                                                   04906000
@NM00311 DC    AL1(0)                                                   04907000
@NM00312 DC    AL1(89)                                                  04908000
@NM00313 DC    AL1(20)                                                  04909000
@NM00314 DC    AL1(3)                                                   04910000
@NM00315 DC    AL1(0)                                                   04911000
@NM00316 DC    AL1(98)                                                  04912000
@NM00317 DC    AL1(0)                                                   04913000
         ORG   GP4S26C+41                                               04914000
         DS    CL3                                                      04915000
GP4S26D  DS    CL5                                                      04916000
         ORG   GP4S26D                                                  04917000
@NM00318 DC    AL1(17)                                                  04918000
@NM00319 DC    AL1(144)                                                 04919000
@NM00320 DC    AL1(10)                                                  04920000
@NM00321 DC    AL1(0)                                                   04921000
@NM00322 DC    AL1(0)                                                   04922000
         ORG   GP4S26D+5                                                04923000
         DS    CL3                                                      04924000
GP4S27A  DS    CL21                                                     04925000
         ORG   GP4S27A                                                  04926000
@NM00323 DC    AL1(21)                                                  04927000
@NM00324 DC    AL1(67)                                                  04928000
@NM00325 DC    AL1(52)                                                  04929000
@NM00326 DC    AL1(58)                                                  04930000
@NM00327 DC    AL1(20)                                                  04931000
@NM00328 DC    AL1(3)                                                   04932000
@NM00329 DC    AL1(0)                                                   04933000
@NM00330 DC    AL1(67)                                                  04934000
@NM00331 DC    AL1(20)                                                  04935000
@NM00332 DC    AL1(3)                                                   04936000
@NM00333 DC    AL1(0)                                                   04937000
@NM00334 DC    AL1(76)                                                  04938000
@NM00335 DC    AL1(20)                                                  04939000
@NM00336 DC    AL1(3)                                                   04940000
@NM00337 DC    AL1(0)                                                   04941000
@NM00338 DC    AL1(85)                                                  04942000
@NM00339 DC    AL1(53)                                                  04943000
@NM00340 DC    AL1(101)                                                 04944000
@NM00341 DC    AL1(95)                                                  04945000
@NM00342 DC    AL1(103)                                                 04946000
@NM00343 DC    AL1(0)                                                   04947000
         ORG   GP4S27A+21                                               04948000
         DS    CL3                                                      04949000
GP4S27B  DS    CL13                                                     04950000
         ORG   GP4S27B                                                  04951000
@NM00344 DC    AL1(53)                                                  04952000
@NM00345 DC    AL1(111)                                                 04953000
@NM00346 DC    AL1(10)                                                  04954000
@NM00347 DC    AL1(18)                                                  04955000
@NM00348 DC    AL1(52)                                                  04956000
@NM00349 DC    AL1(15)                                                  04957000
@NM00350 DC    AL1(0)                                                   04958000
@NM00351 DC    AL1(34)                                                  04959000
@NM00352 DC    AL1(52)                                                  04960000
@NM00353 DC    AL1(11)                                                  04961000
@NM00354 DC    AL1(0)                                                   04962000
@NM00355 DC    AL1(50)                                                  04963000
@NM00356 DC    AL1(0)                                                   04964000
         ORG   GP4S27B+13                                               04965000
         DS    CL3                                                      04966000
GP4S28   DS    CL5                                                      04967000
         ORG   GP4S28                                                   04968000
@NM00357 DC    AL1(21)                                                  04969000
@NM00358 DC    AL1(35)                                                  04970000
@NM00359 DC    AL1(52)                                                  04971000
@NM00360 DC    AL1(56)                                                  04972000
@NM00361 DC    AL1(0)                                                   04973000
         ORG   GP4S28+5                                                 04974000
         DS    CL3                                                      04975000
GP4S30A  DS    CL17                                                     04976000
         ORG   GP4S30A                                                  04977000
@NM00362 DC    AL1(21)                                                  04978000
@NM00363 DC    AL1(67)                                                  04979000
@NM00364 DC    AL1(52)                                                  04980000
@NM00365 DC    AL1(58)                                                  04981000
@NM00366 DC    AL1(20)                                                  04982000
@NM00367 DC    AL1(3)                                                   04983000
@NM00368 DC    AL1(0)                                                   04984000
@NM00369 DC    AL1(67)                                                  04985000
@NM00370 DC    AL1(20)                                                  04986000
@NM00371 DC    AL1(3)                                                   04987000
@NM00372 DC    AL1(0)                                                   04988000
@NM00373 DC    AL1(76)                                                  04989000
@NM00374 DC    AL1(20)                                                  04990000
@NM00375 DC    AL1(3)                                                   04991000
@NM00376 DC    AL1(0)                                                   04992000
@NM00377 DC    AL1(85)                                                  04993000
@NM00378 DC    AL1(0)                                                   04994000
         ORG   GP4S30A+17                                               04995000
         DS    CL3                                                      04996000
GP4S30B  DS    CL13                                                     04997000
         ORG   GP4S30B                                                  04998000
@NM00379 DC    AL1(53)                                                  04999000
@NM00380 DC    AL1(111)                                                 05000000
@NM00381 DC    AL1(10)                                                  05001000
@NM00382 DC    AL1(18)                                                  05002000
@NM00383 DC    AL1(52)                                                  05003000
@NM00384 DC    AL1(15)                                                  05004000
@NM00385 DC    AL1(0)                                                   05005000
@NM00386 DC    AL1(34)                                                  05006000
@NM00387 DC    AL1(52)                                                  05007000
@NM00388 DC    AL1(11)                                                  05008000
@NM00389 DC    AL1(0)                                                   05009000
@NM00390 DC    AL1(50)                                                  05010000
@NM00391 DC    AL1(0)                                                   05011000
         ORG   GP4S30B+13                                               05012000
         DS    CL3                                                      05013000
GP4S30C  DS    CL13                                                     05014000
         ORG   GP4S30C                                                  05015000
@NM00392 DC    AL1(53)                                                  05016000
@NM00393 DC    AL1(111)                                                 05017000
@NM00394 DC    AL1(64)                                                  05018000
@NM00395 DC    AL1(72)                                                  05019000
@NM00396 DC    AL1(52)                                                  05020000
@NM00397 DC    AL1(15)                                                  05021000
@NM00398 DC    AL1(0)                                                   05022000
@NM00399 DC    AL1(88)                                                  05023000
@NM00400 DC    AL1(52)                                                  05024000
@NM00401 DC    AL1(11)                                                  05025000
@NM00402 DC    AL1(0)                                                   05026000
@NM00403 DC    AL1(104)                                                 05027000
@NM00404 DC    AL1(0)                                                   05028000
         ORG   GP4S30C+13                                               05029000
         DS    CL3                                                      05030000
GP4S32   DS    CL21                                                     05031000
         ORG   GP4S32                                                   05032000
@NM00405 DC    AL1(21)                                                  05033000
@NM00406 DC    AL1(33)                                                  05034000
@NM00407 DC    AL1(52)                                                  05035000
@NM00408 DC    AL1(58)                                                  05036000
@NM00409 DC    AL1(20)                                                  05037000
@NM00410 DC    AL1(0)                                                   05038000
@NM00411 DC    AL1(0)                                                   05039000
@NM00412 DC    AL1(64)                                                  05040000
@NM00413 DC    AL1(53)                                                  05041000
@NM00414 DC    AL1(47)                                                  05042000
@NM00415 DC    AL1(64)                                                  05043000
@NM00416 DC    AL1(68)                                                  05044000
@NM00417 DC    AL1(52)                                                  05045000
@NM00418 DC    AL1(15)                                                  05046000
@NM00419 DC    AL1(0)                                                   05047000
@NM00420 DC    AL1(84)                                                  05048000
@NM00421 DC    AL1(52)                                                  05049000
@NM00422 DC    AL1(11)                                                  05050000
@NM00423 DC    AL1(0)                                                   05051000
@NM00424 DC    AL1(100)                                                 05052000
@NM00425 DC    AL1(0)                                                   05053000
         ORG   GP4S32+21                                                05054000
         DS    CL3                                                      05055000
GP4S41   DS    CL5                                                      05056000
         ORG   GP4S41                                                   05057000
@NM00426 DC    AL1(53)                                                  05058000
@NM00427 DC    AL1(55)                                                  05059000
@NM00428 DC    AL1(52)                                                  05060000
@NM00429 DC    AL1(57)                                                  05061000
@NM00430 DC    AL1(0)                                                   05062000
         ORG   GP4S41+5                                                 05063000
         DS    CL3                                                      05064000
GP4S42A  DS    CL37                                                     05065000
         ORG   GP4S42A                                                  05066000
@NM00431 DC    AL1(21)                                                  05067000
@NM00432 DC    AL1(131)                                                 05068000
@NM00433 DC    AL1(10)                                                  05069000
@NM00434 DC    AL1(21)                                                  05070000
@NM00435 DC    AL1(20)                                                  05071000
@NM00436 DC    AL1(3)                                                   05072000
@NM00437 DC    AL1(0)                                                   05073000
@NM00438 DC    AL1(30)                                                  05074000
@NM00439 DC    AL1(20)                                                  05075000
@NM00440 DC    AL1(3)                                                   05076000
@NM00441 DC    AL1(0)                                                   05077000
@NM00442 DC    AL1(39)                                                  05078000
@NM00443 DC    AL1(20)                                                  05079000
@NM00444 DC    AL1(3)                                                   05080000
@NM00445 DC    AL1(0)                                                   05081000
@NM00446 DC    AL1(48)                                                  05082000
@NM00447 DC    AL1(20)                                                  05083000
@NM00448 DC    AL1(3)                                                   05084000
@NM00449 DC    AL1(0)                                                   05085000
@NM00450 DC    AL1(57)                                                  05086000
@NM00451 DC    AL1(20)                                                  05087000
@NM00452 DC    AL1(3)                                                   05088000
@NM00453 DC    AL1(0)                                                   05089000
@NM00454 DC    AL1(66)                                                  05090000
@NM00455 DC    AL1(20)                                                  05091000
@NM00456 DC    AL1(3)                                                   05092000
@NM00457 DC    AL1(0)                                                   05093000
@NM00458 DC    AL1(75)                                                  05094000
@NM00459 DC    AL1(20)                                                  05095000
@NM00460 DC    AL1(3)                                                   05096000
@NM00461 DC    AL1(0)                                                   05097000
@NM00462 DC    AL1(84)                                                  05098000
@NM00463 DC    AL1(20)                                                  05099000
@NM00464 DC    AL1(3)                                                   05100000
@NM00465 DC    AL1(0)                                                   05101000
@NM00466 DC    AL1(93)                                                  05102000
@NM00467 DC    AL1(0)                                                   05103000
         ORG   GP4S42A+37                                               05104000
         DS    CL3                                                      05105000
GP4S42B  DS    CL25                                                     05106000
         ORG   GP4S42B                                                  05107000
@NM00468 DC    AL1(20)                                                  05108000
@NM00469 DC    AL1(3)                                                   05109000
@NM00470 DC    AL1(0)                                                   05110000
@NM00471 DC    AL1(21)                                                  05111000
@NM00472 DC    AL1(20)                                                  05112000
@NM00473 DC    AL1(3)                                                   05113000
@NM00474 DC    AL1(0)                                                   05114000
@NM00475 DC    AL1(30)                                                  05115000
@NM00476 DC    AL1(20)                                                  05116000
@NM00477 DC    AL1(3)                                                   05117000
@NM00478 DC    AL1(0)                                                   05118000
@NM00479 DC    AL1(39)                                                  05119000
@NM00480 DC    AL1(20)                                                  05120000
@NM00481 DC    AL1(3)                                                   05121000
@NM00482 DC    AL1(0)                                                   05122000
@NM00483 DC    AL1(48)                                                  05123000
@NM00484 DC    AL1(20)                                                  05124000
@NM00485 DC    AL1(3)                                                   05125000
@NM00486 DC    AL1(0)                                                   05126000
@NM00487 DC    AL1(57)                                                  05127000
@NM00488 DC    AL1(20)                                                  05128000
@NM00489 DC    AL1(3)                                                   05129000
@NM00490 DC    AL1(0)                                                   05130000
@NM00491 DC    AL1(66)                                                  05131000
@NM00492 DC    AL1(0)                                                   05132000
         ORG   GP4S42B+25                                               05133000
         DS    CL3                                                      05134000
GP4S42C  DS    CL41                                                     05135000
         ORG   GP4S42C                                                  05136000
@NM00493 DC    AL1(21)                                                  05137000
@NM00494 DC    AL1(147)                                                 05138000
@NM00495 DC    AL1(10)                                                  05139000
@NM00496 DC    AL1(21)                                                  05140000
@NM00497 DC    AL1(20)                                                  05141000
@NM00498 DC    AL1(3)                                                   05142000
@NM00499 DC    AL1(0)                                                   05143000
@NM00500 DC    AL1(30)                                                  05144000
@NM00501 DC    AL1(20)                                                  05145000
@NM00502 DC    AL1(3)                                                   05146000
@NM00503 DC    AL1(0)                                                   05147000
@NM00504 DC    AL1(39)                                                  05148000
@NM00505 DC    AL1(20)                                                  05149000
@NM00506 DC    AL1(3)                                                   05150000
@NM00507 DC    AL1(0)                                                   05151000
@NM00508 DC    AL1(48)                                                  05152000
@NM00509 DC    AL1(20)                                                  05153000
@NM00510 DC    AL1(3)                                                   05154000
@NM00511 DC    AL1(0)                                                   05155000
@NM00512 DC    AL1(57)                                                  05156000
@NM00513 DC    AL1(20)                                                  05157000
@NM00514 DC    AL1(3)                                                   05158000
@NM00515 DC    AL1(0)                                                   05159000
@NM00516 DC    AL1(66)                                                  05160000
@NM00517 DC    AL1(20)                                                  05161000
@NM00518 DC    AL1(3)                                                   05162000
@NM00519 DC    AL1(0)                                                   05163000
@NM00520 DC    AL1(75)                                                  05164000
@NM00521 DC    AL1(20)                                                  05165000
@NM00522 DC    AL1(3)                                                   05166000
@NM00523 DC    AL1(0)                                                   05167000
@NM00524 DC    AL1(84)                                                  05168000
@NM00525 DC    AL1(20)                                                  05169000
@NM00526 DC    AL1(3)                                                   05170000
@NM00527 DC    AL1(0)                                                   05171000
@NM00528 DC    AL1(93)                                                  05172000
@NM00529 DC    AL1(20)                                                  05173000
@NM00530 DC    AL1(3)                                                   05174000
@NM00531 DC    AL1(0)                                                   05175000
@NM00532 DC    AL1(102)                                                 05176000
@NM00533 DC    AL1(0)                                                   05177000
         ORG   GP4S42C+41                                               05178000
         DS    CL3                                                      05179000
GP4S42D  DS    CL5                                                      05180000
         ORG   GP4S42D                                                  05181000
@NM00534 DC    AL1(17)                                                  05182000
@NM00535 DC    AL1(208)                                                 05183000
@NM00536 DC    AL1(10)                                                  05184000
@NM00537 DC    AL1(0)                                                   05185000
@NM00538 DC    AL1(0)                                                   05186000
         ORG   GP4S42D+5                                                05187000
         DS    CL3                                                      05188000
GP4S44   DS    CL5                                                      05189000
         ORG   GP4S44                                                   05190000
@NM00539 DC    AL1(21)                                                  05191000
@NM00540 DC    AL1(131)                                                 05192000
@NM00541 DC    AL1(52)                                                  05193000
@NM00542 DC    AL1(62)                                                  05194000
@NM00543 DC    AL1(0)                                                   05195000
         ORG   GP4S44+5                                                 05196000
         DS    CL3                                                      05197000
GP4S48A  DS    CL21                                                     05198000
         ORG   GP4S48A                                                  05199000
@NM00544 DC    AL1(53)                                                  05200000
@NM00545 DC    AL1(71)                                                  05201000
@NM00546 DC    AL1(52)                                                  05202000
@NM00547 DC    AL1(58)                                                  05203000
@NM00548 DC    AL1(20)                                                  05204000
@NM00549 DC    AL1(0)                                                   05205000
@NM00550 DC    AL1(0)                                                   05206000
@NM00551 DC    AL1(68)                                                  05207000
@NM00552 DC    AL1(53)                                                  05208000
@NM00553 DC    AL1(79)                                                  05209000
@NM00554 DC    AL1(68)                                                  05210000
@NM00555 DC    AL1(74)                                                  05211000
@NM00556 DC    AL1(52)                                                  05212000
@NM00557 DC    AL1(15)                                                  05213000
@NM00558 DC    AL1(0)                                                   05214000
@NM00559 DC    AL1(90)                                                  05215000
@NM00560 DC    AL1(52)                                                  05216000
@NM00561 DC    AL1(11)                                                  05217000
@NM00562 DC    AL1(0)                                                   05218000
@NM00563 DC    AL1(106)                                                 05219000
@NM00564 DC    AL1(0)                                                   05220000
         ORG   GP4S48A+21                                               05221000
         DS    CL3                                                      05222000
GP4S48B  DS    CL21                                                     05223000
         ORG   GP4S48B                                                  05224000
@NM00565 DC    AL1(21)                                                  05225000
@NM00566 DC    AL1(67)                                                  05226000
@NM00567 DC    AL1(10)                                                  05227000
@NM00568 DC    AL1(16)                                                  05228000
@NM00569 DC    AL1(20)                                                  05229000
@NM00570 DC    AL1(3)                                                   05230000
@NM00571 DC    AL1(0)                                                   05231000
@NM00572 DC    AL1(25)                                                  05232000
@NM00573 DC    AL1(20)                                                  05233000
@NM00574 DC    AL1(3)                                                   05234000
@NM00575 DC    AL1(0)                                                   05235000
@NM00576 DC    AL1(34)                                                  05236000
@NM00577 DC    AL1(20)                                                  05237000
@NM00578 DC    AL1(3)                                                   05238000
@NM00579 DC    AL1(0)                                                   05239000
@NM00580 DC    AL1(43)                                                  05240000
@NM00581 DC    AL1(20)                                                  05241000
@NM00582 DC    AL1(3)                                                   05242000
@NM00583 DC    AL1(0)                                                   05243000
@NM00584 DC    AL1(52)                                                  05244000
@NM00585 DC    AL1(0)                                                   05245000
         ORG   GP4S48B+21                                               05246000
         DS    CL3                                                      05247000
GP4S52A  DS    CL45                                                     05248000
         ORG   GP4S52A                                                  05249000
@NM00586 DC    AL1(21)                                                  05250000
@NM00587 DC    AL1(67)                                                  05251000
@NM00588 DC    AL1(10)                                                  05252000
@NM00589 DC    AL1(16)                                                  05253000
@NM00590 DC    AL1(20)                                                  05254000
@NM00591 DC    AL1(3)                                                   05255000
@NM00592 DC    AL1(0)                                                   05256000
@NM00593 DC    AL1(25)                                                  05257000
@NM00594 DC    AL1(20)                                                  05258000
@NM00595 DC    AL1(3)                                                   05259000
@NM00596 DC    AL1(0)                                                   05260000
@NM00597 DC    AL1(34)                                                  05261000
@NM00598 DC    AL1(20)                                                  05262000
@NM00599 DC    AL1(3)                                                   05263000
@NM00600 DC    AL1(0)                                                   05264000
@NM00601 DC    AL1(43)                                                  05265000
@NM00602 DC    AL1(20)                                                  05266000
@NM00603 DC    AL1(3)                                                   05267000
@NM00604 DC    AL1(0)                                                   05268000
@NM00605 DC    AL1(52)                                                  05269000
@NM00606 DC    AL1(20)                                                  05270000
@NM00607 DC    AL1(3)                                                   05271000
@NM00608 DC    AL1(0)                                                   05272000
@NM00609 DC    AL1(61)                                                  05273000
@NM00610 DC    AL1(20)                                                  05274000
@NM00611 DC    AL1(3)                                                   05275000
@NM00612 DC    AL1(0)                                                   05276000
@NM00613 DC    AL1(70)                                                  05277000
@NM00614 DC    AL1(20)                                                  05278000
@NM00615 DC    AL1(3)                                                   05279000
@NM00616 DC    AL1(0)                                                   05280000
@NM00617 DC    AL1(79)                                                  05281000
@NM00618 DC    AL1(20)                                                  05282000
@NM00619 DC    AL1(3)                                                   05283000
@NM00620 DC    AL1(0)                                                   05284000
@NM00621 DC    AL1(88)                                                  05285000
@NM00622 DC    AL1(20)                                                  05286000
@NM00623 DC    AL1(3)                                                   05287000
@NM00624 DC    AL1(0)                                                   05288000
@NM00625 DC    AL1(97)                                                  05289000
@NM00626 DC    AL1(20)                                                  05290000
@NM00627 DC    AL1(3)                                                   05291000
@NM00628 DC    AL1(0)                                                   05292000
@NM00629 DC    AL1(106)                                                 05293000
@NM00630 DC    AL1(0)                                                   05294000
         ORG   GP4S52A+45                                               05295000
         DS    CL3                                                      05296000
GP4S52B  DS    CL9                                                      05297000
         ORG   GP4S52B                                                  05298000
@NM00631 DC    AL1(20)                                                  05299000
@NM00632 DC    AL1(3)                                                   05300000
@NM00633 DC    AL1(0)                                                   05301000
@NM00634 DC    AL1(16)                                                  05302000
@NM00635 DC    AL1(20)                                                  05303000
@NM00636 DC    AL1(3)                                                   05304000
@NM00637 DC    AL1(0)                                                   05305000
@NM00638 DC    AL1(25)                                                  05306000
@NM00639 DC    AL1(0)                                                   05307000
         ORG   GP4S52B+9                                                05308000
         DS    CL3                                                      05309000
GP4S52C  DS    CL17                                                     05310000
         ORG   GP4S52C                                                  05311000
@NM00640 DC    AL1(53)                                                  05312000
@NM00641 DC    AL1(79)                                                  05313000
@NM00642 DC    AL1(10)                                                  05314000
@NM00643 DC    AL1(16)                                                  05315000
@NM00644 DC    AL1(52)                                                  05316000
@NM00645 DC    AL1(15)                                                  05317000
@NM00646 DC    AL1(0)                                                   05318000
@NM00647 DC    AL1(33)                                                  05319000
@NM00648 DC    AL1(52)                                                  05320000
@NM00649 DC    AL1(15)                                                  05321000
@NM00650 DC    AL1(0)                                                   05322000
@NM00651 DC    AL1(50)                                                  05323000
@NM00652 DC    AL1(52)                                                  05324000
@NM00653 DC    AL1(3)                                                   05325000
@NM00654 DC    AL1(0)                                                   05326000
@NM00655 DC    AL1(67)                                                  05327000
@NM00656 DC    AL1(0)                                                   05328000
         ORG   GP4S52C+17                                               05329000
         DS    CL3                                                      05330000
GP4S66   DS    CL17                                                     05331000
         ORG   GP4S66                                                   05332000
@NM00657 DC    AL1(21)                                                  05333000
@NM00658 DC    AL1(115)                                                 05334000
@NM00659 DC    AL1(52)                                                  05335000
@NM00660 DC    AL1(61)                                                  05336000
@NM00661 DC    AL1(20)                                                  05337000
@NM00662 DC    AL1(3)                                                   05338000
@NM00663 DC    AL1(0)                                                   05339000
@NM00664 DC    AL1(70)                                                  05340000
@NM00665 DC    AL1(20)                                                  05341000
@NM00666 DC    AL1(3)                                                   05342000
@NM00667 DC    AL1(0)                                                   05343000
@NM00668 DC    AL1(79)                                                  05344000
@NM00669 DC    AL1(20)                                                  05345000
@NM00670 DC    AL1(3)                                                   05346000
@NM00671 DC    AL1(0)                                                   05347000
@NM00672 DC    AL1(88)                                                  05348000
@NM00673 DC    AL1(0)                                                   05349000
         ORG   GP4S66+17                                                05350000
         DS    CL3                                                      05351000
GP4S75A  DS    CL13                                                     05352000
         ORG   GP4S75A                                                  05353000
@NM00674 DC    AL1(21)                                                  05354000
@NM00675 DC    AL1(35)                                                  05355000
@NM00676 DC    AL1(52)                                                  05356000
@NM00677 DC    AL1(57)                                                  05357000
@NM00678 DC    AL1(20)                                                  05358000
@NM00679 DC    AL1(3)                                                   05359000
@NM00680 DC    AL1(0)                                                   05360000
@NM00681 DC    AL1(66)                                                  05361000
@NM00682 DC    AL1(20)                                                  05362000
@NM00683 DC    AL1(3)                                                   05363000
@NM00684 DC    AL1(0)                                                   05364000
@NM00685 DC    AL1(75)                                                  05365000
@NM00686 DC    AL1(0)                                                   05366000
         ORG   GP4S75A+13                                               05367000
         DS    CL3                                                      05368000
GP4S75B  DS    CL5                                                      05369000
         ORG   GP4S75B                                                  05370000
@NM00687 DC    AL1(17)                                                  05371000
@NM00688 DC    AL1(96)                                                  05372000
@NM00689 DC    AL1(52)                                                  05373000
@NM00690 DC    AL1(0)                                                   05374000
@NM00691 DC    AL1(0)                                                   05375000
         ORG   GP4S75B+5                                                05376000
         DS    CL3                                                      05377000
GP4S82A  DS    CL5                                                      05378000
         ORG   GP4S82A                                                  05379000
@NM00692 DC    AL1(53)                                                  05380000
@NM00693 DC    AL1(101)                                                 05381000
@NM00694 DC    AL1(52)                                                  05382000
@NM00695 DC    AL1(61)                                                  05383000
@NM00696 DC    AL1(0)                                                   05384000
         ORG   GP4S82A+5                                                05385000
         DS    CL3                                                      05386000
GP4S82B  DS    CL9                                                      05387000
         ORG   GP4S82B                                                  05388000
@NM00697 DC    AL1(21)                                                  05389000
@NM00698 DC    AL1(37)                                                  05390000
@NM00699 DC    AL1(54)                                                  05391000
@NM00700 DC    AL1(58)                                                  05392000
@NM00701 DC    AL1(20)                                                  05393000
@NM00702 DC    AL1(1)                                                   05394000
@NM00703 DC    AL1(0)                                                   05395000
@NM00704 DC    AL1(70)                                                  05396000
@NM00705 DC    AL1(0)                                                   05397000
         ORG   GP4S82B+9                                                05398000
         DS    CL3                                                      05399000
GP4S82C  DS    CL5                                                      05400000
         ORG   GP4S82C                                                  05401000
@NM00706 DC    AL1(17)                                                  05402000
@NM00707 DC    AL1(96)                                                  05403000
@NM00708 DC    AL1(54)                                                  05404000
@NM00709 DC    AL1(0)                                                   05405000
@NM00710 DC    AL1(0)                                                   05406000
         ORG   GP4S82C+5                                                05407000
         DS    CL3                                                      05408000
GP4S86   DS    CL13                                                     05409000
         ORG   GP4S86                                                   05410000
@NM00711 DC    AL1(21)                                                  05411000
@NM00712 DC    AL1(67)                                                  05412000
@NM00713 DC    AL1(52)                                                  05413000
@NM00714 DC    AL1(58)                                                  05414000
@NM00715 DC    AL1(20)                                                  05415000
@NM00716 DC    AL1(3)                                                   05416000
@NM00717 DC    AL1(0)                                                   05417000
@NM00718 DC    AL1(67)                                                  05418000
@NM00719 DC    AL1(21)                                                  05419000
@NM00720 DC    AL1(36)                                                  05420000
@NM00721 DC    AL1(77)                                                  05421000
@NM00722 DC    AL1(82)                                                  05422000
@NM00723 DC    AL1(0)                                                   05423000
         ORG   GP4S86+13                                                05424000
         DS    CL3                                                      05425000
GP4S88   DS    CL13                                                     05426000
         ORG   GP4S88                                                   05427000
@NM00724 DC    AL1(21)                                                  05428000
@NM00725 DC    AL1(35)                                                  05429000
@NM00726 DC    AL1(52)                                                  05430000
@NM00727 DC    AL1(57)                                                  05431000
@NM00728 DC    AL1(21)                                                  05432000
@NM00729 DC    AL1(80)                                                  05433000
@NM00730 DC    AL1(67)                                                  05434000
@NM00731 DC    AL1(74)                                                  05435000
@NM00732 DC    AL1(21)                                                  05436000
@NM00733 DC    AL1(80)                                                  05437000
@NM00734 DC    AL1(78)                                                  05438000
@NM00735 DC    AL1(85)                                                  05439000
@NM00736 DC    AL1(0)                                                   05440000
         ORG   GP4S88+13                                                05441000
         DS    CL3                                                      05442000
GP4S98   DS    CL21                                                     05443000
         ORG   GP4S98                                                   05444000
@NM00737 DC    AL1(21)                                                  05445000
@NM00738 DC    AL1(67)                                                  05446000
@NM00739 DC    AL1(52)                                                  05447000
@NM00740 DC    AL1(58)                                                  05448000
@NM00741 DC    AL1(20)                                                  05449000
@NM00742 DC    AL1(0)                                                   05450000
@NM00743 DC    AL1(0)                                                   05451000
@NM00744 DC    AL1(68)                                                  05452000
@NM00745 DC    AL1(53)                                                  05453000
@NM00746 DC    AL1(47)                                                  05454000
@NM00747 DC    AL1(68)                                                  05455000
@NM00748 DC    AL1(72)                                                  05456000
@NM00749 DC    AL1(52)                                                  05457000
@NM00750 DC    AL1(15)                                                  05458000
@NM00751 DC    AL1(0)                                                   05459000
@NM00752 DC    AL1(88)                                                  05460000
@NM00753 DC    AL1(52)                                                  05461000
@NM00754 DC    AL1(11)                                                  05462000
@NM00755 DC    AL1(0)                                                   05463000
@NM00756 DC    AL1(104)                                                 05464000
@NM00757 DC    AL1(0)                                                   05465000
         ORG   GP4S98+21                                                05466000
         DS    CL1                                                      05467000
HEXTEST  DC    H'128'                                                   05468000
         DC    H'64'                                                    05469000
         DC    H'32'                                                    05470000
         DC    H'16'                                                    05471000
         DC    H'8'                                                     05472000
         DC    H'4'                                                     05473000
         DC    H'2'                                                     05474000
         DC    H'1'                                                     05475000
         DS    CL2                                                      05476000
PATCH    DC    30F'0'                                                   05477000
CP0001@  DC    AL4(S00)                                                 05478000
         DC    AL4(GP2)                                                 05479000
         DC    AL4(GP2)                                                 05480000
         DC    AL4(G1)                                                  05481000
         DC    AL4(GP2)                                                 05482000
         DC    AL4(GP2)                                                 05483000
         DC    AL4(S06)                                                 05484000
         DC    AL4(S06)                                                 05485000
         DC    AL4(S08)                                                 05486000
         DC    AL4(S08)                                                 05487000
         DC    AL4(G1)                                                  05488000
         DC    AL4(G1)                                                  05489000
         DC    AL4(G1)                                                  05490000
         DC    AL4(S13)                                                 05491000
         DC    AL4(S14)                                                 05492000
         DC    AL4(S15)                                                 05493000
         DC    AL4(S16)                                                 05494000
         DC    AL4(GP2)                                                 05495000
         DC    AL4(GP2)                                                 05496000
         DC    AL4(GP2)                                                 05497000
         DC    AL4(GP2)                                                 05498000
         DC    AL4(S21)                                                 05499000
         DC    AL4(GP2)                                                 05500000
         DC    AL4(GP2)                                                 05501000
         DC    AL4(GP3)                                                 05502000
         DC    AL4(S25)                                                 05503000
         DC    AL4(S26)                                                 05504000
         DC    AL4(S27)                                                 05505000
         DC    AL4(S13)                                                 05506000
         DC    AL4(S29)                                                 05507000
         DC    AL4(S30)                                                 05508000
         DC    AL4(GP3)                                                 05509000
         DC    AL4(S32)                                                 05510000
         DC    AL4(S32)                                                 05511000
         DC    AL4(G1)                                                  05512000
         DC    AL4(GP2)                                                 05513000
         DC    AL4(G1)                                                  05514000
         DC    AL4(GP2)                                                 05515000
         DC    AL4(G1)                                                  05516000
         DC    AL4(GP2)                                                 05517000
         DC    AL4(GP2)                                                 05518000
         DC    AL4(S08)                                                 05519000
         DC    AL4(S42)                                                 05520000
         DC    AL4(G1)                                                  05521000
         DC    AL4(S44)                                                 05522000
         DC    AL4(GP2)                                                 05523000
         DC    AL4(G1)                                                  05524000
         DC    AL4(GP2)                                                 05525000
         DC    AL4(S48)                                                 05526000
         DC    AL4(G1)                                                  05527000
         DC    AL4(G1)                                                  05528000
         DC    AL4(GP2)                                                 05529000
         DC    AL4(S52)                                                 05530000
         DC    AL4(GP3)                                                 05531000
         DC    AL4(S00)                                                 05532000
         DC    AL4(GP3)                                                 05533000
         DC    AL4(S48)                                                 05534000
         DC    AL4(GP3)                                                 05535000
         DC    AL4(GP3)                                                 05536000
         DC    AL4(G1)                                                  05537000
         DC    AL4(GP2)                                                 05538000
         DC    AL4(G1)                                                  05539000
         DC    AL4(S44)                                                 05540000
         DC    AL4(GP2)                                                 05541000
         DC    AL4(GP2)                                                 05542000
         DC    AL4(G1)                                                  05543000
         DC    AL4(S66)                                                 05544000
         DC    AL4(G1)                                                  05545000
         DC    AL4(S13)                                                 05546000
         DC    AL4(GP3)                                                 05547000
         DC    AL4(GP2)                                                 05548000
         DC    AL4(S71)                                                 05549000
         DC    AL4(G1)                                                  05550000
         DC    AL4(GP2)                                                 05551000
         DC    AL4(GP2)                                                 05552000
         DC    AL4(S75)                                                 05553000
         DC    AL4(G1)                                                  05554000
         DC    AL4(G1)                                                  05555000
         DC    AL4(S32)                                                 05556000
         DC    AL4(G1)                                                  05557000
         DC    AL4(GP2)                                                 05558000
         DC    AL4(S71)                                                 05559000
         DC    AL4(S82)                                                 05560000
         DC    AL4(G1)                                                  05561000
         DC    AL4(G1)                                                  05562000
         DC    AL4(G1)                                                  05563000
         DC    AL4(S86)                                                 05564000
         DC    AL4(GP2)                                                 05565000
         DC    AL4(S88)                                                 05566000
         DC    AL4(G1)                                                  05567000
         DC    AL4(G1)                                                  05568000
         DC    AL4(G1)                                                  05569000
         DC    AL4(S00)                                                 05570000
         DC    AL4(G1)                                                  05571000
         DC    AL4(G1)                                                  05572000
         DC    AL4(G1)                                                  05573000
         DC    AL4(GP2)                                                 05574000
         DC    AL4(G1)                                                  05575000
         DC    AL4(S98)                                                 05576000
         DC    AL4(G1)                                                  05577000
         DC    AL4(G1)                                                  05578000
         DC    AL4(G1)                                                  05579000
         DC    AL4(GP2)                                                 05580000
         DC    AL4(G1)                                                  05581000
         DC    AL4(G1)                                                  05582000
         DC    AL4(G1)                                                  05583000
         DC    AL4(G1)                                                  05584000
         DC    AL4(G1)                                                  05585000
         DC    AL4(G1)                                                  05586000
         DC    AL4(G1)                                                  05587000
         DC    AL4(G1)                                                  05588000
         DC    AL4(G1)                                                  05589000
         DC    AL4(G1)                                                  05590000
         DC    AL4(G1)                                                  05591000
         DC    AL4(S00)                                                 05592000
         DC    AL4(G1)                                                  05593000
         DC    AL4(G1)                                                  05594000
         DC    AL4(G1)                                                  05595000
         DC    AL4(G1)                                                  05596000
         DC    AL4(G1)                                                  05597000
         DC    AL4(G1)                                                  05598000
         DC    AL4(G1)                                                  05599000
         DC    AL4(G1)                                                  05600000
         DC    AL4(G1)                                                  05601000
         DC    AL4(G1)                                                  05602000
         DC    AL4(G1)                                                  05603000
         DC    AL4(G1)                                                  05604000
         DC    AL4(G1)                                                  05605000
         DC    AL4(G1)                                                  05606000
         DC    AL4(G1)                                                  05607000
         DC    AL4(G1)                                                  05608000
         DC    AL4(G1)                                                  05609000
         DC    AL4(G1)                                                  05610000
         DC    AL4(G1)                                                  05611000
         DC    AL4(G1)                                                  05612000
         DC    AL4(G1)                                                  05613000
         DC    AL4(G1)                                                  05614000
         DC    AL4(G1)                                                  05615000
         DC    AL4(G1)                                                  05616000
         DC    AL4(G1)                                                  05617000
         DC    AL4(G1)                                                  05618000
         DC    AL4(G1)                                                  05619000
         DC    AL4(G1)                                                  05620000
         DC    AL4(G1)                                                  05621000
         DC    AL4(G1)                                                  05622000
         DC    AL4(G1)                                                  05623000
         DC    AL4(G1)                                                  05624000
         DC    AL4(G1)                                                  05625000
         DC    AL4(G1)                                                  05626000
         DC    AL4(G1)                                                  05627000
         DC    AL4(G1)                                                  05628000
         DC    AL4(G1)                                                  05629000
         DC    AL4(G1)                                                  05630000
         DC    AL4(G1)                                                  05631000
         DC    AL4(G1)                                                  05632000
         DC    AL4(G1)                                                  05633000
         DC    AL4(G1)                                                  05634000
         DC    AL4(G1)                                                  05635000
         DC    AL4(G1)                                                  05636000
         DC    AL4(G1)                                                  05637000
         DC    AL4(G1)                                                  05638000
         DC    AL4(G1)                                                  05639000
         DC    AL4(G1)                                                  05640000
         DC    AL4(G1)                                                  05641000
         DC    AL4(G1)                                                  05642000
         DC    AL4(G1)                                                  05643000
         DC    AL4(G1)                                                  05644000
         DC    AL4(G1)                                                  05645000
         DC    AL4(G1)                                                  05646000
         DC    AL4(G1)                                                  05647000
         DC    AL4(G1)                                                  05648000
         DC    AL4(G1)                                                  05649000
         DC    AL4(G1)                                                  05650000
         DC    AL4(G1)                                                  05651000
         DC    AL4(G1)                                                  05652000
         DC    AL4(G1)                                                  05653000
         DC    AL4(G1)                                                  05654000
         DC    AL4(G1)                                                  05655000
         DC    AL4(G1)                                                  05656000
         DC    AL4(G1)                                                  05657000
         DC    AL4(G1)                                                  05658000
         DC    AL4(G1)                                                  05659000
         DC    AL4(G1)                                                  05660000
         DC    AL4(G1)                                                  05661000
         DC    AL4(G1)                                                  05662000
         DC    AL4(G1)                                                  05663000
         DC    AL4(G1)                                                  05664000
         DC    AL4(G1)                                                  05665000
         DC    AL4(G1)                                                  05666000
         DC    AL4(G1)                                                  05667000
         DC    AL4(G1)                                                  05668000
         DC    AL4(G1)                                                  05669000
         DC    AL4(G1)                                                  05670000
         DC    AL4(G1)                                                  05671000
         DC    AL4(G1)                                                  05672000
         DC    AL4(G1)                                                  05673000
         DC    AL4(G1)                                                  05674000
         DC    AL4(G1)                                                  05675000
         DC    AL4(G1)                                                  05676000
         DC    AL4(G1)                                                  05677000
         DC    AL4(G1)                                                  05678000
         DC    AL4(G1)                                                  05679000
         DC    AL4(G1)                                                  05680000
         DC    AL4(G1)                                                  05681000
         DC    AL4(G1)                                                  05682000
         DC    AL4(G1)                                                  05683000
         DC    AL4(G1)                                                  05684000
         DC    AL4(G1)                                                  05685000
         DC    AL4(G1)                                                  05686000
         DC    AL4(G1)                                                  05687000
         DC    AL4(G1)                                                  05688000
         DC    AL4(G1)                                                  05689000
         DC    AL4(G1)                                                  05690000
         DC    AL4(G1)                                                  05691000
         DC    AL4(G1)                                                  05692000
         DC    AL4(G1)                                                  05693000
         DC    AL4(G1)                                                  05694000
         DC    AL4(G1)                                                  05695000
         DC    AL4(G1)                                                  05696000
         DC    AL4(G1)                                                  05697000
         DC    AL4(G1)                                                  05698000
         DC    AL4(G1)                                                  05699000
         DC    AL4(G1)                                                  05700000
         DC    AL4(G1)                                                  05701000
         DC    AL4(G1)                                                  05702000
         DC    AL4(G1)                                                  05703000
         DC    AL4(G1)                                                  05704000
         DC    AL4(G1)                                                  05705000
         DC    AL4(G1)                                                  05706000
         DC    AL4(G1)                                                  05707000
         DC    AL4(G1)                                                  05708000
         DC    AL4(G1)                                                  05709000
         DC    AL4(G1)                                                  05710000
         DC    AL4(G1)                                                  05711000
         DC    AL4(G1)                                                  05712000
         DC    AL4(G1)                                                  05713000
         DC    AL4(G1)                                                  05714000
         DC    AL4(G1)                                                  05715000
         DC    AL4(G1)                                                  05716000
         DC    AL4(G1)                                                  05717000
         DC    AL4(G1)                                                  05718000
         DC    AL4(G1)                                                  05719000
         DC    AL4(G1)                                                  05720000
         DC    AL4(G1)                                                  05721000
         DC    AL4(G1)                                                  05722000
         DC    AL4(G1)                                                  05723000
         DC    AL4(G1)                                                  05724000
         DC    AL4(G1)                                                  05725000
         DC    AL4(G1)                                                  05726000
         DC    AL4(G1)                                                  05727000
         DC    AL4(G1)                                                  05728000
         DC    AL4(G1)                                                  05729000
         DC    AL4(G1)                                                  05730000
         DC    AL4(G1)                                                  05731000
         DC    AL4(G1)                                                  05732000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       05733000
@01      EQU   01                                                       05734000
@02      EQU   02                                                       05735000
@03      EQU   03                                                       05736000
@04      EQU   04                                                       05737000
@05      EQU   05                                                       05738000
@06      EQU   06                                                       05739000
@07      EQU   07                                                       05740000
@08      EQU   08                                                       05741000
@09      EQU   09                                                       05742000
@10      EQU   10                                                       05743000
@11      EQU   11                                                       05744000
@12      EQU   12                                                       05745000
@13      EQU   13                                                       05746000
@14      EQU   14                                                       05747000
@15      EQU   15                                                       05748000
MOD      EQU   @07                                                      05749000
K        EQU   @04                                                      05750000
J        EQU   @07                                                      05751000
I        EQU   @04                                                      05752000
CNVTSVC  EQU   @04                                                      05753000
SVCNUMBR EQU   @07                                                      05754000
PLISTPTR EQU   @06                                                      05755000
AEDITCBR EQU   @09                                                      05756000
R0       EQU   @00                                                      05757000
R1       EQU   @01                                                      05758000
R9       EQU   @09                                                      05759000
R10      EQU   @10                                                      05760000
R13      EQU   @13                                                      05761000
R14      EQU   @14                                                      05762000
R15      EQU   @15                                                      05763000
RETCODE  EQU   @15                                                      05764000
R11      EQU   @11                                                      05765000
R12      EQU   @12                                                      05766000
R2       EQU   @02                                                      05767000
R3       EQU   @03                                                      05768000
R4       EQU   @04                                                      05769000
R5       EQU   @05                                                      05770000
R6       EQU   @06                                                      05771000
R7       EQU   @07                                                      05772000
R8       EQU   @08                                                      05773000
AMDPRTAB EQU   0                                                        05774000
DEBGFLGS EQU   AMDPRTAB+8                                               05775000
PTHFLGS1 EQU   DEBGFLGS                                                 05776000
PTHFLGS2 EQU   DEBGFLGS+1                                               05777000
INRFCFGS EQU   DEBGFLGS+2                                               05778000
IOFLGS   EQU   DEBGFLGS+3                                               05779000
STARTIME EQU   AMDPRTAB+40                                              05780000
STOPTIME EQU   AMDPRTAB+52                                              05781000
NAMES    EQU   AMDPRTAB+64                                              05782000
ADS      EQU   AMDPRTAB+104                                             05783000
AADS     EQU   ADS                                                      05784000
SIF      EQU   AMDPRTAB+124                                             05785000
SIOFLGS  EQU   SIF                                                      05786000
DVADS1   EQU   AMDPRTAB+128                                             05787000
IO       EQU   AMDPRTAB+228                                             05788000
IOFLGS2  EQU   IO                                                       05789000
DVADS2   EQU   AMDPRTAB+232                                             05790000
VCF      EQU   AMDPRTAB+332                                             05791000
SVCFLGS  EQU   VCF                                                      05792000
ALLV     EQU   SVCFLGS                                                  05793000
SVCNUMS  EQU   AMDPRTAB+336                                             05794000
USR      EQU   AMDPRTAB+368                                             05795000
USRFLGS  EQU   USR                                                      05796000
USRTAB   EQU   AMDPRTAB+372                                             05797000
PI       EQU   AMDPRTAB+452                                             05798000
PIFLGS   EQU   PI                                                       05799000
PGMNGEN  EQU   AMDPRTAB+456                                             05800000
GENFLAGS EQU   PGMNGEN+3                                                05801000
GENFLGS1 EQU   AMDPRTAB+460                                             05802000
ESTARTME EQU   AMDPRTAB+500                                             05803000
ESTOPTME EQU   AMDPRTAB+509                                             05804000
ABDPL    EQU   0                                                        05805000
ADPLFLAG EQU   ABDPL+7                                                  05806000
ADPLFMT1 EQU   ABDPL+44                                                 05807000
ADPLFMT2 EQU   ABDPL+48                                                 05808000
PLIST    EQU   0                                                        05809000
RECPTR   EQU   PLIST                                                    05810000
DATAPTR  EQU   PLIST+16                                                 05811000
FMTADDR  EQU   PLIST+20                                                 05812000
DYNAMSTG EQU   PLIST+24                                                 05813000
SNAPPARM EQU   PLIST+28                                                 05814000
NXTFIELD EQU   0                                                        05815000
AMDPRFMT EQU   0                                                        05816000
BASICRCD EQU   0                                                        05817000
ASCBFLD  EQU   BASICRCD                                                 05818000
ERRECORD EQU   ASCBFLD                                                  05819000
PSWFLD   EQU   BASICRCD+14                                              05820000
SYSSVC   EQU   PSWFLD+3                                                 05821000
R15FLD   EQU   BASICRCD+34                                              05822000
LSVC81R  EQU   0                                                        05823000
GRP2RCD  EQU   0                                                        05824000
GRP2LNTH EQU   GRP2RCD                                                  05825000
GRP3RCD  EQU   0                                                        05826000
GRP3DDN  EQU   GRP3RCD                                                  05827000
GP4RCD0  EQU   0                                                        05828000
RCD0DDN  EQU   GP4RCD0                                                  05829000
RCD0DCB  EQU   GP4RCD0+8                                                05830000
RCD0DEB  EQU   GP4RCD0+12                                               05831000
GP4RCD6  EQU   0                                                        05832000
EPDENM1  EQU   GP4RCD6                                                  05833000
RCD6LST  EQU   GP4RCD6+8                                                05834000
GP4RCD8  EQU   0                                                        05835000
EPDENM2  EQU   GP4RCD8                                                  05836000
GP4RCD13 EQU   0                                                        05837000
COMPCODE EQU   GP4RCD13                                                 05838000
GP4RCD14 EQU   0                                                        05839000
PICA     EQU   GP4RCD14                                                 05840000
GP4RCD15 EQU   0                                                        05841000
RCD15DDN EQU   GP4RCD15                                                 05842000
ERRFLGS  EQU   GP4RCD15+8                                               05843000
RCD15TCB EQU   GP4RCD15+9                                               05844000
RCD15CUU EQU   GP4RCD15+13                                              05845000
GP4RCD16 EQU   0                                                        05846000
RCD16DDN EQU   GP4RCD16                                                 05847000
RCD16DCB EQU   GP4RCD16+8                                               05848000
PPL      EQU   GP4RCD16+12                                              05849000
GP4RCD21 EQU   0                                                        05850000
RCD21DDN EQU   GP4RCD21                                                 05851000
RCD21LN  EQU   GP4RCD21+8                                               05852000
GP4RCD25 EQU   0                                                        05853000
RCD25DDN EQU   GP4RCD25                                                 05854000
DCBFDAD  EQU   GP4RCD25+8                                               05855000
GP4RCD26 EQU   0                                                        05856000
RCD26LN  EQU   GP4RCD26                                                 05857000
GP4RCD27 EQU   0                                                        05858000
RCD27LST EQU   GP4RCD27                                                 05859000
RCD27LN  EQU   GP4RCD27+22                                              05860000
GP4RCD29 EQU   0                                                        05861000
RCD29LST EQU   GP4RCD29                                                 05862000
RCD29LN  EQU   GP4RCD29+16                                              05863000
GP4RCD30 EQU   0                                                        05864000
RCD30LST EQU   GP4RCD30                                                 05865000
RCD30LN  EQU   GP4RCD30+16                                              05866000
GP4RCD32 EQU   0                                                        05867000
RCD32CUU EQU   GP4RCD32                                                 05868000
RCD32LN  EQU   GP4RCD32+2                                               05869000
GP4RCD42 EQU   0                                                        05870000
RCD42LN  EQU   GP4RCD42                                                 05871000
GP4RCD44 EQU   0                                                        05872000
TCBADDR  EQU   GP4RCD44                                                 05873000
GP4RCD48 EQU   0                                                        05874000
RCD48LST EQU   GP4RCD48                                                 05875000
MAJORNM  EQU   GP4RCD48+20                                              05876000
RCD48LN  EQU   GP4RCD48+28                                              05877000
GP4RCD52 EQU   0                                                        05878000
RCD52LST EQU   GP4RCD52                                                 05879000
ERRCHECK EQU   RCD52LST                                                 05880000
GP4RCD66 EQU   0                                                        05881000
IOBERR   EQU   GP4RCD66                                                 05882000
GP4RCD71 EQU   0                                                        05883000
RCD71DDN EQU   GP4RCD71                                                 05884000
RCD71LST EQU   GP4RCD71+8                                               05885000
RCD81LNG EQU   GP4RCD71+24                                              05886000
GP4RCD75 EQU   0                                                        05887000
RCD75LN  EQU   GP4RCD75                                                 05888000
GP4RCD82 EQU   0                                                        05889000
VOLSER1  EQU   GP4RCD82                                                 05890000
RCD82LN  EQU   GP4RCD82+6                                               05891000
GP4RCD86 EQU   0                                                        05892000
RCD86LST EQU   GP4RCD86                                                 05893000
TTR      EQU   GP4RCD86+8                                               05894000
GP4RCD88 EQU   0                                                        05895000
RCD88DEB EQU   GP4RCD88                                                 05896000
DSSTAT   EQU   GP4RCD88+4                                               05897000
DEVMOD   EQU   GP4RCD88+5                                               05898000
GP4RCD98 EQU   0                                                        05899000
RCD98LST EQU   GP4RCD98                                                 05900000
RCD98LN  EQU   GP4RCD98+4                                               05901000
CL0001@  EQU   0                                                        05902000
ABDPLPTR EQU   SNAPPARM                                                 05903000
SVCLIST  EQU   SVCNUMS                                                  05904000
PTRNMAPS EQU   DYNAMPTN                                                 05905000
OLDFLG   EQU   PTRNMAPS                                                 05906000
OLDLN    EQU   PTRNMAPS+1                                               05907000
UNPAKFRM EQU   PAKEDSVC                                                 05908000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    05909000
@NM00004 EQU   PTRNMAPS+3                                               05910000
@NM00003 EQU   PTRNMAPS+2                                               05911000
@NM00008 EQU   GP4RCD71+20                                              05912000
VOLSER   EQU   GP4RCD27+16                                              05913000
DCBTRKBC EQU   GP4RCD25+16                                              05914000
R1FLD    EQU   BASICRCD+42                                              05915000
R0FLD    EQU   BASICRCD+38                                              05916000
CDENMFLD EQU   BASICRCD+26                                              05917000
TCBFLD   EQU   BASICRCD+22                                              05918000
@NM00007 EQU   PSWFLD+4                                                 05919000
@NM00006 EQU   PSWFLD                                                   05920000
JOBNMFLD EQU   BASICRCD+6                                               05921000
CPUIDFLD EQU   BASICRCD+4                                               05922000
@NM00005 EQU   ASCBFLD+2                                                05923000
EIDPTR   EQU   PLIST+12                                                 05924000
GTFOPTR  EQU   PLIST+8                                                  05925000
BUFFER   EQU   PLIST+4                                                  05926000
ADPLEXT  EQU   ABDPL+52                                                 05927000
ADPLCOM4 EQU   ABDPL+40                                                 05928000
ADPLCOM3 EQU   ABDPL+36                                                 05929000
ADPLCOM2 EQU   ABDPL+32                                                 05930000
ADPLCOM1 EQU   ABDPL+28                                                 05931000
ADPLFRMT EQU   ABDPL+24                                                 05932000
ADPLMEMA EQU   ABDPL+20                                                 05933000
ADPLCVT  EQU   ABDPL+16                                                 05934000
ADPLPRNT EQU   ABDPL+12                                                 05935000
ADPLBUF  EQU   ABDPL+8                                                  05936000
@NM00002 EQU   ADPLFLAG                                                 05937000
ADPLSYTM EQU   ADPLFLAG                                                 05938000
ADPLSNPR EQU   ADPLFLAG                                                 05939000
ADPLSBPL EQU   ABDPL+6                                                  05940000
ADPLASID EQU   ABDPL+4                                                  05941000
ADPLTCB  EQU   ABDPL                                                    05942000
RESERVED EQU   AMDPRTAB+522                                             05943000
CVTTZONE EQU   AMDPRTAB+518                                             05944000
ESPSEC   EQU   ESTOPTME+7                                               05945000
ESPMIN   EQU   ESTOPTME+5                                               05946000
ESPHR    EQU   ESTOPTME+3                                               05947000
ESPDAY   EQU   ESTOPTME                                                 05948000
ESSEC    EQU   ESTARTME+7                                               05949000
ESMIN    EQU   ESTARTME+5                                               05950000
ESHR     EQU   ESTARTME+3                                               05951000
ESDAY    EQU   ESTARTME                                                 05952000
ADTSBUF  EQU   AMDPRTAB+496                                             05953000
OFSTDATA EQU   AMDPRTAB+494                                             05954000
OFSTEID  EQU   AMDPRTAB+492                                             05955000
AFRMAD   EQU   AMDPRTAB+488                                             05956000
REENTWKA EQU   AMDPRTAB+484                                             05957000
PRFMTADD EQU   AMDPRTAB+480                                             05958000
AEIOCT   EQU   AMDPRTAB+476                                             05959000
EXITADDR EQU   AMDPRTAB+472                                             05960000
EXITNM   EQU   AMDPRTAB+464                                             05961000
RECDLL   EQU   AMDPRTAB+461                                             05962000
@NM00001 EQU   GENFLGS1                                                 05963000
FIRSTHSW EQU   GENFLGS1                                                 05964000
TSFOUND  EQU   GENFLGS1                                                 05965000
EOFINPRO EQU   GENFLGS1                                                 05966000
TS       EQU   GENFLGS1                                                 05967000
EOF      EQU   GENFLAGS                                                 05968000
RR       EQU   GENFLAGS                                                 05969000
SRM      EQU   GENFLAGS                                                 05970000
RNIO     EQU   GENFLAGS                                                 05971000
SYSM     EQU   GENFLAGS                                                 05972000
SYS      EQU   GENFLAGS                                                 05973000
DSP      EQU   GENFLAGS                                                 05974000
EXT      EQU   GENFLAGS                                                 05975000
PICODEA  EQU   PGMNGEN+2                                                05976000
PICODES  EQU   PGMNGEN                                                  05977000
Q        EQU   PI+1                                                     05978000
P01R     EQU   PIFLGS                                                   05979000
SELP     EQU   PIFLGS                                                   05980000
ALLP     EQU   PIFLGS                                                   05981000
USRNGTAB EQU   USRTAB                                                   05982000
O        EQU   USR+1                                                    05983000
N01R     EQU   USRFLGS                                                  05984000
SELU     EQU   USRFLGS                                                  05985000
ALLU     EQU   USRFLGS                                                  05986000
M        EQU   VCF+1                                                    05987000
L        EQU   SVCFLGS                                                  05988000
SELV     EQU   SVCFLGS                                                  05989000
IODVADS  EQU   DVADS2                                                   05990000
K01RES   EQU   IO+1                                                     05991000
JJ       EQU   IOFLGS2                                                  05992000
SELI     EQU   IOFLGS2                                                  05993000
ALLI     EQU   IOFLGS2                                                  05994000
SIODVADS EQU   DVADS1                                                   05995000
II       EQU   SIF+1                                                    05996000
H        EQU   SIOFLGS                                                  05997000
NOEQU    EQU   SIOFLGS                                                  05998000
EQUIV    EQU   SIOFLGS                                                  05999000
SELS     EQU   SIOFLGS                                                  06000000
ALLS     EQU   SIOFLGS                                                  06001000
ASCBADDR EQU   AADS                                                     06002000
JOBNAMES EQU   NAMES                                                    06003000
DAY2     EQU   STOPTIME+10                                              06004000
F        EQU   STOPTIME+8                                               06005000
TIME2    EQU   STOPTIME                                                 06006000
DAY      EQU   STARTIME+10                                              06007000
D        EQU   STARTIME+8                                               06008000
TIME     EQU   STARTIME                                                 06009000
DDNAME   EQU   AMDPRTAB+32                                              06010000
USEREXIT EQU   AMDPRTAB+24                                              06011000
GTFWDPTR EQU   AMDPRTAB+20                                              06012000
C        EQU   DEBGFLGS+4                                               06013000
B        EQU   IOFLGS                                                   06014000
GETEOF   EQU   IOFLGS                                                   06015000
DMDFMT   EQU   INRFCFGS                                                 06016000
EDITSTOP EQU   INRFCFGS                                                 06017000
EXTTRC   EQU   INRFCFGS                                                 06018000
RET      EQU   INRFCFGS                                                 06019000
FMT      EQU   INRFCFGS                                                 06020000
SPIE     EQU   INRFCFGS                                                 06021000
TERM     EQU   INRFCFGS                                                 06022000
FLMODE   EQU   INRFCFGS                                                 06023000
REMAIN   EQU   PTHFLGS2                                                 06024000
APP      EQU   PTHFLGS2                                                 06025000
REXT     EQU   PTHFLGS1                                                 06026000
FRM      EQU   PTHFLGS1                                                 06027000
FLT      EQU   PTHFLGS1                                                 06028000
HEX      EQU   PTHFLGS1                                                 06029000
CON      EQU   PTHFLGS1                                                 06030000
GET      EQU   PTHFLGS1                                                 06031000
SCN      EQU   PTHFLGS1                                                 06032000
ROOT     EQU   PTHFLGS1                                                 06033000
CURREC   EQU   AMDPRTAB+4                                               06034000
AFMG     EQU   AMDPRTAB                                                 06035000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      06036000
@RF00173 EQU   @RC00158                                                 06037000
@RC00215 EQU   CE0001@                                                  06038000
@RC00221 EQU   CE0001@                                                  06039000
@RC00262 EQU   CE0001@                                                  06040000
@RC00274 EQU   CE0001@                                                  06041000
@RC00297 EQU   CE0001@                                                  06042000
@RC00318 EQU   CE0001@                                                  06043000
@RC00338 EQU   CE0001@                                                  06044000
@RC00360 EQU   CE0001@                                                  06045000
@RC00375 EQU   CE0001@                                                  06046000
@RC00400 EQU   CE0001@                                                  06047000
@RC00427 EQU   CE0001@                                                  06048000
@RC00455 EQU   CE0001@                                                  06049000
@RF00509 EQU   @RC00507                                                 06050000
@RC00513 EQU   @RC00507                                                 06051000
@RC00480 EQU   CE0001@                                                  06052000
@RC00483 EQU   CE0001@                                                  06053000
@RC00503 EQU   CE0001@                                                  06054000
@RF00599 EQU   @RC00597                                                 06055000
@RC00603 EQU   @RC00597                                                 06056000
@RC00576 EQU   CE0001@                                                  06057000
@RC00579 EQU   CE0001@                                                  06058000
@RF00653 EQU   @RC00651                                                 06059000
@RC00657 EQU   @RC00651                                                 06060000
@RC00627 EQU   CE0001@                                                  06061000
@RC00630 EQU   CE0001@                                                  06062000
@RC00648 EQU   CE0001@                                                  06063000
@RF00741 EQU   @RC00739                                                 06064000
@RC00745 EQU   @RC00739                                                 06065000
@RF00768 EQU   @RC00766                                                 06066000
@RC00772 EQU   @RC00766                                                 06067000
@RC00716 EQU   CE0001@                                                  06068000
@RC00719 EQU   CE0001@                                                  06069000
@RC00736 EQU   CE0001@                                                  06070000
@RF00842 EQU   @RC00840                                                 06071000
@RC00846 EQU   @RC00840                                                 06072000
@RC00831 EQU   CE0001@                                                  06073000
@RT00917 EQU   FMTPLIST                                                 06074000
@RC00950 EQU   @RC00948                                                 06075000
@RC00955 EQU   @RC00948                                                 06076000
@RC00870 EQU   CE0001@                                                  06077000
@RC00873 EQU   CE0001@                                                  06078000
@RC00909 EQU   CE0001@                                                  06079000
@RC00978 EQU   CE0001@                                                  06080000
@RF01003 EQU   @RC01001                                                 06081000
@RC01007 EQU   @RC01001                                                 06082000
@RC00995 EQU   CE0001@                                                  06083000
@RC00998 EQU   CE0001@                                                  06084000
@RC01047 EQU   CE0001@                                                  06085000
@RC01050 EQU   CE0001@                                                  06086000
@RC01079 EQU   CE0001@                                                  06087000
@RF01082 EQU   CE0001@                                                  06088000
@RC01102 EQU   CE0001@                                                  06089000
@RC01111 EQU   CE0001@                                                  06090000
@RC01140 EQU   CE0001@                                                  06091000
@RC01162 EQU   CE0001@                                                  06092000
@RC01165 EQU   CE0001@                                                  06093000
@RC01216 EQU   CE0001@                                                  06094000
@RC01236 EQU   CE0001@                                                  06095000
@RC01265 EQU   @RC01263                                                 06096000
@RF01272 EQU   @RC01263                                                 06097000
@RC01276 EQU   @RC01263                                                 06098000
@RC01255 EQU   CE0001@                                                  06099000
@RC01053 EQU   @RC01050                                                 06100000
@RC01125 EQU   @RC01111                                                 06101000
@ENDDATA EQU   *                                                        06102000
         END   AMDSYS01,(C'PLS1655',0603,76069)                         06103000
./  ADD  SSI=32830068,NAME=AMDSYS02
         TITLE 'AMDSYS02 FORMAT APPENDAGE FOR AHLTPID                  *00001000
                        '                                               00002000
AMDSYS02 CSECT ,                                                01S0001 00003000
@MAINENT DS    0H                                               01S0001 00004000
         USING *,@15                                            01S0001 00005000
         B     @PROLOG                                          01S0001 00006000
         DC    AL1(16)                                          01S0001 00007000
         DC    C'AMDSYS02  73.283'                              01S0001 00008000
         DROP  @15                                                      00009000
@PROLOG  STM   @14,@12,12(@13)                                  01S0001 00010000
         BALR  @12,0                                            01S0001 00011000
@PSTART  DS    0H                                               01S0001 00012000
         USING @PSTART,@12                                      01S0001 00013000
         EQUATES                                                        00014000
*   PLISTSAV=PLISTPTR;              /* SAVE OUR PARMLIST @           */ 00015000
         LR    PLISTSAV,PLISTPTR                                01S0035 00016000
*   GMAINPTR=GTMPTR;                /* GET POINTER TO GETMAINED AREA */ 00017000
         L     GMAINPTR,GTMPTR(,PLISTSAV)                       01S0036 00018000
*   RFY                                                         01S0037 00019000
*     RTN14 UNRSTD;                                             01S0037 00020000
*   BACKPTR=R13SAVE;                /* SAVE CALLERS SAVE AREA   01S0038 00021000
*                                                            @YM03672*/ 00022000
         ST    R13SAVE,BACKPTR(,GMAINPTR)                       01S0038 00023000
*   R13SAVE=ADDR(REGSAV);           /* SET UP SAVEAREA FOR AMDPRFMT  */ 00024000
         LR    R13SAVE,GMAINPTR                                 01S0039 00025000
*   RECREG=DTAPTR;                  /* SET UP POINTER TO THE RECORD     00026000
*                                      TO BE FORMATTED               */ 00027000
         L     RECREG,DTAPTR(,PLISTSAV)                         01S0040 00028000
*   PLISTPTR=FPLPTR;                /* GET ADDRESS OF PARMLIST FOR      00029000
*                                      AMDPRFMT                 01S0041 00030000
*                                                                    */ 00031000
         L     PLISTPTR,FPLPTR(,PLISTSAV)                       01S0041 00032000
*                                                               01S0042 00033000
*   /*****************************************************************/ 00034000
*   /*                                                               */ 00035000
*   /* DETERMINE IF THIS IS THE FIRST ENTRY FOR THE RECORD           */ 00036000
*   /*                                                               */ 00037000
*   /*****************************************************************/ 00038000
*                                                               01S0042 00039000
*   IF ENTRYCNT=0 THEN              /* CHECK TO SEE IF THIS IS 1ST   */ 00040000
         CLI   ENTRYCNT(GMAINPTR),0                             01S0042 00041000
         BNE   @RF00042                                         01S0042 00042000
*     DO;                           /* ENTRY FOR THE RECORD          */ 00043000
*                                                               01S0043 00044000
*       /*************************************************************/ 00045000
*       /*                                                           */ 00046000
*       /* CHECK FOR ERROR RECORD                                    */ 00047000
*       /*                                                           */ 00048000
*       /*************************************************************/ 00049000
*                                                               01S0044 00050000
*       IF ERRASCB=CATERR THEN                                  01S0044 00051000
         CLC   ERRASCB(2,RECREG),@CH00366                       01S0044 00052000
         BNE   @RF00044                                         01S0044 00053000
*         DO;                                                   01S0045 00054000
*           RTRNCODE=RCHEXDMP;      /* TELL CALLER TO DUMP RECORD IN    00055000
*                                      HEX                           */ 00056000
         L     @08,BACKPTR(,GMAINPTR)                           01S0046 00057000
         MVC   RTRNCODE(4,@08),@CF00073                         01S0046 00058000
*           GO TO S02EXIT;          /* GO TO RETURN LOGIC            */ 00059000
         B     S02EXIT                                          01S0047 00060000
*         END;                                                  01S0048 00061000
*       ELSE                                                    01S0049 00062000
*                                                               01S0049 00063000
*         /***********************************************************/ 00064000
*         /*                                                         */ 00065000
*         /* DETERMINE TYPE OF RECORD                                */ 00066000
*         /*                                                         */ 00067000
*         /***********************************************************/ 00068000
*                                                               01S0049 00069000
*         DO;                                                   01S0049 00070000
@RF00044 DS    0H                                               01S0050 00071000
*           RFY                                                 01S0050 00072000
*             EIDREG RSTD;                                      01S0050 00073000
*           EIDREG=EIDPTR;          /* GET POINTER TO EID            */ 00074000
         L     EIDREG,EIDPTR(,PLISTSAV)                         01S0051 00075000
*           IF EID=IEATINT|EID=IEAPINT THEN/* CHECK FOR PI RECORD    */ 00076000
         CLC   EID(2,EIDREG),@CH00200                           01S0052 00077000
         BE    @RT00052                                         01S0052 00078000
         CLC   EID(2,EIDREG),@CH00196                           01S0052 00079000
         BNE   @RF00052                                         01S0052 00080000
@RT00052 DS    0H                                               01S0053 00081000
*             DO;                                               01S0053 00082000
*               RFY                                             01S0054 00083000
*                 EIDREG UNRSTD;                                01S0054 00084000
*                                                               02S0055 00085000
*               /*****************************************************/ 00086000
*               /*                                                   */ 00087000
*               /* FORMAT THE FIRST PI RECORD                        */ 00088000
*               /*                                                   */ 00089000
*               /*****************************************************/ 00090000
*                                                               02S0055 00091000
*               ;                                               02S0055 00092000
*                                                               02S0055 00093000
*               /*****************************************************/ 00094000
*               /*                                                   */ 00095000
*               /* MAKE SURE THAT THE RECORD SHOULD BE FORMATTED     */ 00096000
*               /*                                                   */ 00097000
*               /*****************************************************/ 00098000
*                                                               02S0056 00099000
*               IF SYS=OFF&ALLP=OFF THEN/* CHECK FOR SYS OVERRIDE NOT   00100000
*                                      EMPLOYED AND FOR ALL PI EVENTS   00101000
*                                      NOT SELECTED                  */ 00102000
         TM    SYS(AEDITCBR),B'00100000'                        02S0056 00103000
         BNZ   @RF00056                                         02S0056 00104000
         TM    ALLP(AEDITCBR),B'10000000'                       02S0056 00105000
         BNZ   @RF00056                                         02S0056 00106000
*                 DO;                                           02S0057 00107000
*                                                               02S0057 00108000
*                   /*************************************************/ 00109000
*                   /*                                               */ 00110000
*                   /* CHECK FOR THIS PI CODE SELECTED FOR PRINTING  */ 00111000
*                   /*                                               */ 00112000
*                   /*************************************************/ 00113000
*                                                               02S0058 00114000
*                   RFY                                         02S0058 00115000
*                    (CODEREG,                                  02S0058 00116000
*                     MASKREG) RSTD;                            02S0058 00117000
*                   CODEREG=PICODER-ONE;/* GET INTERRUPT CODE - 1    */ 00118000
         SLR   CODEREG,CODEREG                                  02S0059 00119000
         IC    CODEREG,PICODER(,RECREG)                         02S0059 00120000
         BCTR  CODEREG,0                                        02S0059 00121000
*                   MASKREG=CODEMASK;/* GET ADJUSTABLE BIT MASK      */ 00122000
         L     MASKREG,@CF00384                                 02S0060 00123000
*                   GEN SETS(MASKREG) REFS(CODEREG,IGNORE,PGMNGEN) EXIT 00124000
*                       SEQFLOW NOFLOWS;                        02S0061 00125000
            SRL   MASKREG,0(CODEREG)      ADJUST THE MASK   @YM03650    00126000
            N     MASKREG,PGMNGEN(,AEDITCBR) TEST THE PI CODE BIT       00127000
            BZ    IGNORE               IF OFF IGNORE THE RECORD         00128000
*                   RFY                                         02S0062 00129000
*                     MASKREG UNRSTD;                           02S0062 00130000
*                 END;                                          02S0063 00131000
*                                                               02S0063 00132000
*               /*****************************************************/ 00133000
*               /*                                                   */ 00134000
*               /* CONVERT PI CODE TO PRINTABLE DECIMAL AND PLACE IN */ 00135000
*               /* OUTPUT BUFFER                                     */ 00136000
*               /*                                                   */ 00137000
*               /*****************************************************/ 00138000
*                                                               02S0064 00139000
*               CODEREG=PICODER;    /* GET INTERRUPT CODE            */ 00140000
@RF00056 SLR   CODEREG,CODEREG                                  02S0064 00141000
         IC    CODEREG,PICODER(,RECREG)                         02S0064 00142000
*               RFY                                             02S0065 00143000
*                 R8WORK RSTD;                                  02S0065 00144000
*               R8WORK=ADPLBUF;                                 02S0066 00145000
         L     R8WORK,ADPLBUF(,ABDPLPTR)                        02S0066 00146000
*               GEN SETS(CVDWORK,DECPI) REFS(R8WORK,CODEREG,GMAINPTR)   00147000
*                   NOEXIT SEQFLOW NOFLOWS;                     02S0067 00148000
      CVD CODEREG,CVDWORK(,GMAINPTR)     CONVERT PI CODE TO DECIMAL     00149000
      UNPK DECPI(3,R8WORK),CVDWORK+5(3,GMAINPTR)                        00150000
      OI DECPI+2(R8WORK),X'F0'                                          00151000
*               RFY                                             02S0068 00152000
*                (R8WORK,                                       02S0068 00153000
*                 CODEREG) UNRSTD;                              02S0068 00154000
*               ;                                               02S0069 00155000
*                                                               02S0069 00156000
*               /*****************************************************/ 00157000
*               /*                                                   */ 00158000
*               /* SET UP PARM LIST FOR AMDPRFMT                     */ 00159000
*               /*                                                   */ 00160000
*               /*****************************************************/ 00161000
*                                                               02S0070 00162000
*               ADPLFMT2=ADDR(PIREC);/* ADDR OF DATA                 */ 00163000
         ST    RECREG,ADPLFMT2(,ABDPLPTR)                       02S0070 00164000
*               IF PIINTTCB=NOTAPP THEN/* CHECK FOR EBCDIC TCB FIELD */ 00165000
         CLC   PIINTTCB(4,RECREG),NOTAPP                        02S0071 00166000
         BNE   @RF00071                                         02S0071 00167000
*                 FMTPTR=ADDR(FMT002);/* SET UP ADDR OF FMT PATTERN     00168000
*                                      WITH EBCDIC TCB FIELD         */ 00169000
         LA    FMTPTR,FMT002                                    02S0072 00170000
*               ELSE                                            02S0073 00171000
*                 FMTPTR=ADDR(FMT001);/* SET UP ADDR OF FMT PATTERN     00172000
*                                      WITH HEX TCB FIELD            */ 00173000
         B     @RC00071                                         02S0073 00174000
@RF00071 LA    FMTPTR,FMT001                                    02S0073 00175000
*               ;                                               02S0074 00176000
@RC00071 DS    0H                                               02S0075 00177000
*               CALL AMDPRFMT;      /* FORMAT THE LINE               */ 00178000
         L     @15,FMTRTN(,PLISTSAV)                            02S0075 00179000
         BALR  @14,@15                                          02S0075 00180000
*               ;                                               02S0076 00181000
*               ENTRYCNT=SECOND;    /* INDICATE FIRST RECORD COMPLETE*/ 00182000
         MVI   ENTRYCNT(GMAINPTR),X'01'                         02S0077 00183000
*               ;                                               02S0078 00184000
*               RTRNCODE=RCRETURN;  /* TELL CALLER TO PRINT RECORD      00185000
*                                      AND RETURN TO FORMAT ANOTHER  */ 00186000
         L     @08,BACKPTR(,GMAINPTR)                           02S0079 00187000
         SLR   @02,@02                                          02S0079 00188000
         ST    @02,RTRNCODE(,@08)                               02S0079 00189000
*               GO TO S02EXIT;      /* GO TO RETURN LOGIC       02S0080 00190000
*                                                                    */ 00191000
         B     S02EXIT                                          02S0080 00192000
*             END;                                              01S0081 00193000
*           ELSE                                                01S0082 00194000
*             DO;                                               01S0082 00195000
@RF00052 DS    0H                                               01S0083 00196000
*               RFY                                             01S0083 00197000
*                 EIDREG RSTD;                                  01S0083 00198000
*               IF SYS=OFF&DSP=OFF THEN/* CHECK FOR SYS OVERRIDE NOT    00199000
*                                      EMPLOYED AND FOR DISPATCHER      00200000
*                                      EVENTS NOT SELECTED           */ 00201000
         TM    SYS(AEDITCBR),B'01100000'                        01S0084 00202000
         BZ    @RT00084                                         01S0084 00203000
*                 GOTO IGNORE;      /* IGNORE THE RECORD             */ 00204000
*               IF EID=IEADISP3 THEN/* CHECK FOR DSP RECORD          */ 00205000
@RF00084 CLC   EID(2,EIDREG),@CH00184                           01S0086 00206000
         BNE   @RF00086                                         01S0086 00207000
*                 DO;                                           01S0087 00208000
*                   RFY                                         01S0088 00209000
*                     EIDREG UNRSTD;                            01S0088 00210000
*                                                               02S0089 00211000
*                   /*************************************************/ 00212000
*                   /*                                               */ 00213000
*                   /* FORMAT THE DSP RECORD                         */ 00214000
*                   /*                                               */ 00215000
*                   /*************************************************/ 00216000
*                                                               02S0089 00217000
*                   ;                                           02S0089 00218000
*                                                               02S0089 00219000
*                   /*************************************************/ 00220000
*                   /*                                               */ 00221000
*                   /* SET UP PARMLIST FOR THE FORMATTING ROUTINE    */ 00222000
*                   /*                                               */ 00223000
*                   /*************************************************/ 00224000
*                                                               02S0090 00225000
*                   ADPLFMT2=ADDR(DSPREC);/* ADDR OF DATA            */ 00226000
         ST    RECREG,ADPLFMT2(,ABDPLPTR)                       02S0090 00227000
*                   FMTPTR=ADDR(FMT003);/* ADDR OF FORMAT PATTERN    */ 00228000
         LA    FMTPTR,FMT003                                    02S0091 00229000
*                   ;                                           02S0092 00230000
*                   CALL AMDPRFMT;  /* FORMAT THE LINE               */ 00231000
         L     @15,FMTRTN(,PLISTSAV)                            02S0093 00232000
         BALR  @14,@15                                          02S0093 00233000
*                   ;                                           02S0094 00234000
*                   RTRNCODE=RCCOMP;/* TELL CALLER TO PRINT RECORD      00235000
*                                      AND GET A NEW ONE             */ 00236000
         L     @08,BACKPTR(,GMAINPTR)                           02S0095 00237000
         MVC   RTRNCODE(4,@08),@CF00097                         02S0095 00238000
*                   GO TO S02EXIT;  /* GO TO RETURN LOGIC       02S0096 00239000
*                                                                    */ 00240000
         B     S02EXIT                                          02S0096 00241000
*                 END;                                          01S0097 00242000
*               ELSE                                            01S0098 00243000
*                 DO;                                           01S0098 00244000
@RF00086 DS    0H                                               01S0099 00245000
*                   RFY                                         01S0099 00246000
*                     EIDREG RSTD;                              01S0099 00247000
*                   IF EID=IEADISP2 THEN/* CHECK FOR LSR RECORD      */ 00248000
         CLC   EID(2,EIDREG),@CH00214                           01S0100 00249000
         BNE   @RF00100                                         01S0100 00250000
*                     DO;                                       01S0101 00251000
*                       RFY                                     01S0102 00252000
*                         EIDREG UNRSTD;                        01S0102 00253000
*                                                               02S0103 00254000
*                       /*********************************************/ 00255000
*                       /*                                           */ 00256000
*                       /* FORMAT THE LSR RECORD                     */ 00257000
*                       /*                                           */ 00258000
*                       /*********************************************/ 00259000
*                                                               02S0103 00260000
*                       ;                                       02S0103 00261000
*                                                               02S0103 00262000
*                       /*********************************************/ 00263000
*                       /*                                           */ 00264000
*                       /* SET UP PARMLIST FOR THE FORMATTING ROUTINE*/ 00265000
*                       /*                                           */ 00266000
*                       /*********************************************/ 00267000
*                                                               02S0104 00268000
*                       ADPLFMT2=ADDR(LSRREC);/* ADDR OF DATA        */ 00269000
         ST    RECREG,ADPLFMT2(,ABDPLPTR)                       02S0104 00270000
*                       IF LSRTCB=NOTAPP THEN/* CHECK FOR EBCDIC TCB    00271000
*                                      FIELD                         */ 00272000
         CLC   LSRTCB(4,RECREG),NOTAPP                          02S0105 00273000
         BNE   @RF00105                                         02S0105 00274000
*                         FMTPTR=ADDR(FMT005);/* SET UP ADDR OF FMT     00275000
*                                      PATTERN WITH EBCDIC TCB FIELD */ 00276000
         LA    FMTPTR,FMT005                                    02S0106 00277000
*                       ELSE                                    02S0107 00278000
*                         FMTPTR=ADDR(FMT004);/* SET UP ADDR OF FMT     00279000
*                                      PATTERN WITH HEX TCB FIELD    */ 00280000
         B     @RC00105                                         02S0107 00281000
@RF00105 LA    FMTPTR,FMT004                                    02S0107 00282000
*                       ;                                       02S0108 00283000
@RC00105 DS    0H                                               02S0109 00284000
*                       CALL AMDPRFMT;/* FORMAT THE LINE             */ 00285000
         L     @15,FMTRTN(,PLISTSAV)                            02S0109 00286000
         BALR  @14,@15                                          02S0109 00287000
*                       ;                                       02S0110 00288000
*                       RTRNCODE=RCCOMP;/* TELL CALLER TO PRINT 02S0111 00289000
*                                      RECORD AND GET A NEW ONE      */ 00290000
         L     @08,BACKPTR(,GMAINPTR)                           02S0111 00291000
         MVC   RTRNCODE(4,@08),@CF00097                         02S0111 00292000
*                       GO TO S02EXIT;/* GO TO RETURN LOGIC     02S0112 00293000
*                                                                    */ 00294000
         B     S02EXIT                                          02S0112 00295000
*                     END;                                      01S0113 00296000
*                   ELSE                                        01S0114 00297000
*                     DO;                                       01S0114 00298000
@RF00100 DS    0H                                               01S0115 00299000
*                       RFY                                     01S0115 00300000
*                         EIDREG RSTD;                          01S0115 00301000
*                       IF EID=IEADISP1 THEN/* CHECK FOR SRB RECORD  */ 00302000
         CLC   EID(2,EIDREG),@CH00212                           01S0116 00303000
         BNE   @RF00116                                         01S0116 00304000
*                         DO;                                   01S0117 00305000
*                           RFY                                 01S0118 00306000
*                             EIDREG UNRSTD;                    01S0118 00307000
*                                                               02S0119 00308000
*                           /*****************************************/ 00309000
*                           /*                                       */ 00310000
*                           /* FORMAT THE SRB RECORD                 */ 00311000
*                           /*                                       */ 00312000
*                           /*****************************************/ 00313000
*                                                               02S0119 00314000
*                           ;                                   02S0119 00315000
*                                                               02S0119 00316000
*                           /*****************************************/ 00317000
*                           /*                                       */ 00318000
*                           /* SET UP PARMLIST FOR THE FORMATTING    */ 00319000
*                           /* ROUTINE                               */ 00320000
*                           /*                                       */ 00321000
*                           /*****************************************/ 00322000
*                                                               02S0120 00323000
*                           ADPLFMT2=ADDR(SRBREC);/* ADDR OF DATA    */ 00324000
         ST    RECREG,ADPLFMT2(,ABDPLPTR)                       02S0120 00325000
*                           IF SRBTYPE=TYPES THEN/* CHECK FOR   02S0121 00326000
*                                      SUSPENDED SRB                 */ 00327000
         CLI   SRBTYPE(RECREG),C'S'                             02S0121 00328000
         BNE   @RF00121                                         02S0121 00329000
*                             DO;                               02S0122 00330000
*                               IF SRBSRB=ERRIND THEN/* CHECK FOR       00331000
*                                      EBCDIC SRB AND PARM FIELDS    */ 00332000
         CLC   SRBSRB(4,RECREG),ERRIND                          02S0123 00333000
         BNE   @RF00123                                         02S0123 00334000
*                                 FMTPTR=ADDR(FMT009);/* SET UP ADDR    00335000
*                                      OF FMT PATTERN WITH EBCDIC SRB   00336000
*                                      FIELD                         */ 00337000
         LA    FMTPTR,FMT009                                    02S0124 00338000
*                               ELSE                            02S0125 00339000
*                                 FMTPTR=ADDR(FMT007);/* SET UP ADDR    00340000
*                                      OF FMT PATTERN WITH HEX SRB      00341000
*                                      AND PARM FIELDS               */ 00342000
         B     @RC00123                                         02S0125 00343000
@RF00123 LA    FMTPTR,FMT007                                    02S0125 00344000
*                             END;                              02S0126 00345000
*                           ELSE                                02S0127 00346000
*                             DO;                               02S0127 00347000
         B     @RC00121                                         02S0127 00348000
@RF00121 DS    0H                                               02S0128 00349000
*                               FMTPTR=ADDR(FMT006);/* SET UP ADDR OF   00350000
*                                      FMT PATTERN WITH HEX SRB FIELD*/ 00351000
         LA    FMTPTR,FMT006                                    02S0128 00352000
*                               IF SRBTYPE=TYPEG THEN/* CHECK FOR       00353000
*                                      GLOBAL SRB                    */ 00354000
         CLI   SRBTYPE(RECREG),C'G'                             02S0129 00355000
         BNE   @RF00129                                         02S0129 00356000
*                                 ADPLFMT1=ADDR(GLOBALT);/* LABEL       00357000
*                                      POINTER -> 'GLOBAL'           */ 00358000
         LA    @08,GLOBALT                                      02S0130 00359000
         ST    @08,ADPLFMT1(,ABDPLPTR)                          02S0130 00360000
*                               ELSE                            02S0131 00361000
*                                 ADPLFMT1=ADDR(LOCALT);/* LABEL        00362000
*                                      POINTER -> 'LOCAL'            */ 00363000
         B     @RC00129                                         02S0131 00364000
@RF00129 LA    @08,LOCALT                                       02S0131 00365000
         ST    @08,ADPLFMT1(,ABDPLPTR)                          02S0131 00366000
*                             END;                              02S0132 00367000
@RC00129 DS    0H                                               02S0133 00368000
*                           ;                                   02S0133 00369000
@RC00121 DS    0H                                               02S0134 00370000
*                           CALL AMDPRFMT;/* FORMAT THE LINE         */ 00371000
         L     @15,FMTRTN(,PLISTSAV)                            02S0134 00372000
         BALR  @14,@15                                          02S0134 00373000
*                           RTRNCODE=RCCOMP;/* TELL CALLER TO PRINT     00374000
*                                      RECORD AND GET A NEW ONE      */ 00375000
         L     @08,BACKPTR(,GMAINPTR)                           02S0135 00376000
         MVC   RTRNCODE(4,@08),@CF00097                         02S0135 00377000
*                           GO TO S02EXIT;/* GO TO RETURN LOGIC 02S0136 00378000
*                                                                    */ 00379000
         B     S02EXIT                                          02S0136 00380000
*                         END;                                  01S0137 00381000
*                       ELSE                                    01S0138 00382000
*                         RFY                                   01S0138 00383000
*                           EIDREG RSTD;                        01S0138 00384000
@RF00116 DS    0H                                               01S0139 00385000
*                       IF EID=IEADISP4 THEN/* CHECK FOR SDSP RECORD */ 00386000
         CLC   EID(2,EIDREG),@CH00217                           01S0139 00387000
         BNE   @RF00139                                         01S0139 00388000
*                         DO;                                   01S0140 00389000
*                           RFY                                 01S0141 00390000
*                             EIDREG UNRSTD;                    01S0141 00391000
*                                                               02S0142 00392000
*                           /*****************************************/ 00393000
*                           /*                                       */ 00394000
*                           /* FORMAT THE SDSP RECORD                */ 00395000
*                           /*                                       */ 00396000
*                           /*****************************************/ 00397000
*                                                               02S0142 00398000
*                           ;                                   02S0142 00399000
*                                                               02S0142 00400000
*                           /*****************************************/ 00401000
*                           /*                                       */ 00402000
*                           /* SET UP PARMLIST FOR THE FORMATTING    */ 00403000
*                           /* ROUTINE                               */ 00404000
*                           /*                                       */ 00405000
*                           /*****************************************/ 00406000
*                                                               02S0143 00407000
*                           ADPLFMT2=ADDR(DSPREC);/* ADDR OF DATA    */ 00408000
         ST    RECREG,ADPLFMT2(,ABDPLPTR)                       02S0143 00409000
*                           FMTPTR=ADDR(FMT010);/* ADDR OF FORMAT       00410000
*                                      PATTERN                       */ 00411000
         LA    FMTPTR,FMT010                                    02S0144 00412000
*                           ;                                   02S0145 00413000
*                           CALL AMDPRFMT;/* FORMAT THE LINE         */ 00414000
         L     @15,FMTRTN(,PLISTSAV)                            02S0146 00415000
         BALR  @14,@15                                          02S0146 00416000
*                           ;                                   02S0147 00417000
*                           RTRNCODE=RCCOMP;/* TELL CALLER TO PRINT     00418000
*                                      RECORD AND GET A NEW ONE      */ 00419000
         L     @08,BACKPTR(,GMAINPTR)                           02S0148 00420000
         MVC   RTRNCODE(4,@08),@CF00097                         02S0148 00421000
*                           GO TO S02EXIT;/* GO TO RETURN LOGIC 02S0149 00422000
*                                                                    */ 00423000
         B     S02EXIT                                          02S0149 00424000
*                         END;                                  01S0150 00425000
*                       ELSE                                    01S0151 00426000
*                         GOTO IGNORE;                          01S0151 00427000
*                     END;                                      01S0152 00428000
*                 END;                                          01S0153 00429000
*             END;                                              01S0154 00430000
*         END;                                                  01S0155 00431000
*     END;                                                      01S0156 00432000
*                                                               01S0157 00433000
*   /*****************************************************************/ 00434000
*   /*                                                               */ 00435000
*   /* DETERMINE IF THIS IS THE SECOND OR THIRD ENTRY FOR THE REC    */ 00436000
*   /*                                                               */ 00437000
*   /*****************************************************************/ 00438000
*                                                               01S0157 00439000
*   ELSE                                                        01S0157 00440000
*     DO;                                                       01S0157 00441000
@RF00042 DS    0H                                               01S0158 00442000
*       IF ENTRYCNT=SECOND THEN     /* CHECK FOR SECOND RECORD       */ 00443000
         CLI   ENTRYCNT(GMAINPTR),1                             01S0158 00444000
         BNE   @RF00158                                         01S0158 00445000
*         DO;                                                   01S0159 00446000
*                                                               02S0160 00447000
*           /*********************************************************/ 00448000
*           /*                                                       */ 00449000
*           /* FORMAT THE SECOND PI RECORD                           */ 00450000
*           /*                                                       */ 00451000
*           /*********************************************************/ 00452000
*                                                               02S0160 00453000
*           ;                                                   02S0160 00454000
*                                                               02S0160 00455000
*           /*********************************************************/ 00456000
*           /*                                                       */ 00457000
*           /* SET UP PARMLIST FOR THE FORMATTING ROUTINE            */ 00458000
*           /*                                                       */ 00459000
*           /*********************************************************/ 00460000
*                                                               02S0161 00461000
*           ADPLFMT1=ADDR(LBL005);  /* ADDR OF LABEL LIST            */ 00462000
         LA    @08,LBL005                                       02S0161 00463000
         ST    @08,ADPLFMT1(,ABDPLPTR)                          02S0161 00464000
*           ADPLFMT2=ADDR(PIREGS1); /* ADDR OF DATA (REGS 0-7)       */ 00465000
         LA    @08,PIREGS1(,RECREG)                             02S0162 00466000
         ST    @08,ADPLFMT2(,ABDPLPTR)                          02S0162 00467000
*           FMTPTR=ADDR(FMT008);    /* ADDR OF FORMAT PATTERN        */ 00468000
         LA    FMTPTR,FMT008                                    02S0163 00469000
*           ;                                                   02S0164 00470000
*           CALL AMDPRFMT;          /* FORMAT THE LINE               */ 00471000
         L     @15,FMTRTN(,PLISTSAV)                            02S0165 00472000
         BALR  @14,@15                                          02S0165 00473000
*           ;                                                   02S0166 00474000
*           ENTRYCNT=THIRD;         /* INDICATE SECOND RECORD   02S0167 00475000
*                                      COMPLETE                      */ 00476000
         MVI   ENTRYCNT(GMAINPTR),X'02'                         02S0167 00477000
*           RTRNCODE=RCRETURN;      /* TELL CALLER TO PRINT RECORD      00478000
*                                      AND RETURN TO FORMAT ANOTHER     00479000
*                                                                    */ 00480000
         L     @08,BACKPTR(,GMAINPTR)                           02S0168 00481000
         SLR   @02,@02                                          02S0168 00482000
         ST    @02,RTRNCODE(,@08)                               02S0168 00483000
*         END;                                                  01S0169 00484000
*       ELSE                                                    01S0170 00485000
*         IF ENTRYCNT=THIRD THEN    /* CHECK FOR THIRD RECORD        */ 00486000
         B     @RC00158                                         01S0170 00487000
@RF00158 CLI   ENTRYCNT(GMAINPTR),2                             01S0170 00488000
         BNE   @RF00170                                         01S0170 00489000
*           DO;                                                 01S0171 00490000
*                                                               02S0172 00491000
*             /*******************************************************/ 00492000
*             /*                                                     */ 00493000
*             /* FORMAT THE THIRD PI RECORD                          */ 00494000
*             /*                                                     */ 00495000
*             /*******************************************************/ 00496000
*                                                               02S0172 00497000
*             ;                                                 02S0172 00498000
*                                                               02S0172 00499000
*             /*******************************************************/ 00500000
*             /*                                                     */ 00501000
*             /* SET UP PARMLIST FOR THE FORMATTING ROUTINE          */ 00502000
*             /*                                                     */ 00503000
*             /*******************************************************/ 00504000
*                                                               02S0173 00505000
*             ADPLFMT1=ADDR(LBL006);/* ADDR OF LABEL LIST            */ 00506000
         LA    @08,LBL006                                       02S0173 00507000
         ST    @08,ADPLFMT1(,ABDPLPTR)                          02S0173 00508000
*             ADPLFMT2=ADDR(PIREGS2);/* ADDR OF DATA (REGS 8-15)     */ 00509000
         LA    @08,PIREGS2(,RECREG)                             02S0174 00510000
         ST    @08,ADPLFMT2(,ABDPLPTR)                          02S0174 00511000
*             FMTPTR=ADDR(FMT008);  /* ADDR OF FMT PATTERN           */ 00512000
         LA    FMTPTR,FMT008                                    02S0175 00513000
*             ;                                                 02S0176 00514000
*             CALL AMDPRFMT;        /* FORMAT THE LINE               */ 00515000
         L     @15,FMTRTN(,PLISTSAV)                            02S0177 00516000
         BALR  @14,@15                                          02S0177 00517000
*             ;                                                 02S0178 00518000
*             RTRNCODE=RCCOMP;      /* TELL CALLER TO PRINT RECORD      00519000
*                                      AND GET A NEW ONE        02S0179 00520000
*                                                                    */ 00521000
         L     @08,BACKPTR(,GMAINPTR)                           02S0179 00522000
         MVC   RTRNCODE(4,@08),@CF00097                         02S0179 00523000
*           END;                                                01S0180 00524000
*         ELSE                                                  01S0181 00525000
*           DO;                                                 01S0181 00526000
         B     @RC00170                                         01S0181 00527000
@RF00170 DS    0H                                               01S0182 00528000
*IGNORE:                                                        01S0182 00529000
*             RTRNCODE=RCIGNORE;    /* TELL CALLER TO IGNORE RECORD  */ 00530000
IGNORE   L     @08,BACKPTR(,GMAINPTR)                           01S0182 00531000
         MVC   RTRNCODE(4,@08),@CF00041                         01S0182 00532000
*           END;                                                01S0183 00533000
*     END;                                                      01S0184 00534000
@RC00170 DS    0H                                               01S0184 00535000
@RC00158 DS    0H                                               01S0185 00536000
*S02EXIT:                                                       01S0185 00537000
*   R13SAVE=BACKPTR;                /* RESTORE CALLERS SAVE AREA        00538000
*                                                            @YM03672*/ 00539000
S02EXIT  L     R13SAVE,BACKPTR(,GMAINPTR)                       01S0185 00540000
*   END AMDSYS02                    /* RETURN TO CALLER         01S0186 00541000
*                                                                    */ 00542000
*                                                               01S0186 00543000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */ 00544000
*/*%INCLUDE SYSUT5  (PROLOG  )                                       */ 00545000
*/*%INCLUDE SYSUT5  (DECLS   )                                       */ 00546000
*/*%INCLUDE SYSLIB  (AMDPRTAB)                                       */ 00547000
*/*%INCLUDE SYSLIB  (IMDMEDIT)                                       */ 00548000
*/*%INCLUDE SYSLIB  (IHAABDPL)                                       */ 00549000
*/*%INCLUDE SYSUT5  (AMDPI   )                                       */ 00550000
*/*%INCLUDE SYSUT5  (AMDDSP  )                                       */ 00551000
*/*%INCLUDE SYSUT5  (AMDLSR  )                                       */ 00552000
*/*%INCLUDE SYSUT5  (AMDSRB  )                                       */ 00553000
*/*%INCLUDE SYSUT5  (AMDSDSP )                                       */ 00554000
*/*%INCLUDE SYSUT5  (AMDSEC  )                                       */ 00555000
*/*%INCLUDE SYSUT5  (AMDTHRD )                                       */ 00556000
*                                                               01S0186 00557000
*       ;                                                       01S0186 00558000
@EL00001 DS    0H                                               01S0186 00559000
@EF00001 DS    0H                                               01S0186 00560000
@ER00001 LM    @14,@12,12(@13)                                  01S0186 00561000
         BR    @14                                              01S0186 00562000
@DATA    DS    0H                                                       00563000
@CH00184 DC    XL2'0003'                                                00564000
@CH00196 DC    XL2'6101'                                                00565000
@CH00200 DC    XL2'6200'                                                00566000
@CH00212 DC    XL2'0001'                                                00567000
@CH00214 DC    XL2'0002'                                                00568000
@CH00217 DC    XL2'0004'                                                00569000
@CH00366 DC    XL2'EEEE'                                                00570000
@DATD    DSECT                                                          00571000
         DS    0F                                                       00572000
AMDSYS02 CSECT                                                          00573000
         DS    0F                                                       00574000
@CF00097 DC    F'4'                                                     00575000
@CF00041 DC    F'8'                                                     00576000
@CF00073 DC    F'12'                                                    00577000
@CF00384 DC    XL4'80000000'                                            00578000
@DATD    DSECT                                                          00579000
         DS    0D                                                       00580000
AMDSYS02 CSECT                                                          00581000
         DS    0F                                                       00582000
@SIZDATD DC    AL1(0)                                                   00583000
         DC    AL3(@ENDDATD-@DATD)                                      00584000
         DS    0D                                                       00585000
NOTAPP   DC    CL4'N/A '                                                00586000
ERRIND   DC    CL4'****'                                                00587000
GLOBALT  DC    CL6'GLOBAL'                                              00588000
LOCALT   DC    CL6'LOCAL '                                              00589000
LBL001   DC    CL32'PGMASCBCPUJOBNOLD PSWTCBVPAMODN'                    00590000
LBL005   DC    CL24'R0R1 R2 R3 R4 R5 R6 R7'                             00591000
LBL006   DC    CL24'R8R9R10R11R12R13R14R15'                             00592000
LBL002   DC    CL30'DSPASCBCPUJOBNDSP PSWTCBMODN'                       00593000
LBL007   DC    CL30'SDSPASCBCPUJOBNDSP PSWTCBMODN'                      00594000
LBL003   DC    CL46'SRBASCBCPUJOBNSRB PSWSRBPARMTYPE SUSPENDED'         00595000
LBL004   DC    CL26'LSRASCBCPUJOBNLSR PSWTCB'                           00596000
AMDSYS02 CSECT                                                          00597000
*  F O R M A T   P A T T E R N S                                        00598000
*  PI - ALL FIELDS NORMAL                                               00599000
FMT001   FMTPTRN (LBL,LBLP),3,,0,,LBL001,             HEADER            00600000
         FMTPTRN (LBL,DTA,DTAC),4,4,10,15,,,          ASCB              00601000
         FMTPTRN (LBL,DTA,DTAC),3,2,25,29,,,          CPU ID            00602000
         FMTPTRN (LBL,DTA,DTAC,DTAE),4,8,35,40,,,     JOBNAME           00603000
         FMTPTRN (LBL,DTA,DTAC),7,4,50,58,,,          PSW               00604000
         FMTPTRN (DTA,DTAC),,4,,67,,,                 PSW               00605000
         FMTPTRN (LBL,DTA,DTAC),3,4,77,81,,,          TCB               00606000
         FMTPTRN (LBL,DTA,DTAC),3,4,106,110,,,        VPA               00607000
         FMTPTRN (LBL,DTA,DTAC,DTAE),4,8,91,96,,,LAST   MOD NAME        00608000
*  PI - TCB FIELD 'N/A', MODNAME 'N/A'                                  00609000
FMT002   FMTPTRN (LBL,LBLP),3,,0,,LBL001,             HEADER            00610000
         FMTPTRN (LBL,DTA,DTAC),4,4,10,15,,,          ASCB              00611000
         FMTPTRN (LBL,DTA,DTAC),3,2,25,29,,,          CPU ID            00612000
         FMTPTRN (LBL,DTA,DTAC,DTAE),4,8,35,40,,,     JOBNAME           00613000
         FMTPTRN (LBL,DTA,DTAC),7,4,50,58,,,          PSW               00614000
         FMTPTRN (DTA,DTAC),,4,,67,,,                 PSW               00615000
         FMTPTRN (LBL,DTA,DTAC,DTAE),3,4,77,81,,,     TCB               00616000
         FMTPTRN (LBL,DTA,DTAC),3,4,106,110,,,        VPA               00617000
         FMTPTRN (LBL,DTA,DTAC,DTAE),4,3,91,96,,,LAST   MOD NAME        00618000
*  PI SECOND AND THIRD RECORDS - ALL FIELDS NORMAL                      00619000
FMT008   FMTPTRN (LBL,DTA,DTAC),2,4,10,13,,,          RO AND R8         00620000
         FMTPTRN (LBL,DTA,DTAC),2,4,23,26,,,          R1 AND R9         00621000
         FMTPTRN (LBL,DTA,DTAC),3,4,35,39,,,          R2 AND R10        00622000
         FMTPTRN (LBL,DTA,DTAC),3,4,48,52,,,          R3 AND R11        00623000
         FMTPTRN (LBL,DTA,DTAC),3,4,61,65,,,          R4 AND R12        00624000
         FMTPTRN (LBL,DTA,DTAC),3,4,74,78,,,          R5 AND R13        00625000
         FMTPTRN (LBL,DTA,DTAC),3,4,87,91,,,          R6 AND R14        00626000
         FMTPTRN (LBL,DTA,DTAC),3,4,100,104,,,LAST    R7 AND R15        00627000
*  DSP RECORD - ALL FIELDS NORMAL                                       00628000
FMT003   FMTPTRN (LBL,LBLP),3,,0,,LBL002,             HEADER            00629000
         FMTPTRN (LBL,DTA,DTAC),4,4,10,15,,,          ASCB              00630000
         FMTPTRN (LBL,DTA,DTAC),3,2,25,29,,,          CPU ID            00631000
         FMTPTRN (LBL,DTA,DTAC,DTAE),4,8,35,40,,,     JOBNAME           00632000
         FMTPTRN (LBL,DTA,DTAC),7,4,50,58,,,          PSW               00633000
         FMTPTRN (DTA,DTAC),,4,,67,,,                 PSW               00634000
         FMTPTRN (LBL,DTA,DTAC),3,4,77,81,,,          TCB               00635000
         FMTPTRN (LBL,DTA,DTAC,DTAE),4,8,91,96,,,LAST MODNAME           00636000
*  SDSP RECORD _ ALL FIELDS NORMAL                                      00637000
FMT010   FMTPTRN (LBL,LBLP),4,,0,,LBL007,             HEADER            00638000
         FMTPTRN (LBL,DTA,DTAC),4,4,10,15,,,          ASCB              00639000
         FMTPTRN (LBL,DTA,DTAC),3,2,25,29,,,          CPU ID            00640000
         FMTPTRN (LBL,DTA,DTAC,DTAE),4,8,35,40,,,     JOBNAME           00641000
         FMTPTRN (LBL,DTA,DTAC),7,4,50,58,,,          PSW               00642000
         FMTPTRN (DTA,DTAC),,4,,67,,,                 PSW               00643000
         FMTPTRN (LBL,DTA,DTAC),3,4,77,81,,,          TCB               00644000
         FMTPTRN (LBL,DTA,DTAC,DTAE),4,8,91,96,,,LAST MODNAME           00645000
*  LSR RECORD - ALL FIELDS NORMAL                                       00646000
FMT004   FMTPTRN (LBL,LBLP),3,,0,,LBL004,             HEADER            00647000
         FMTPTRN (LBL,DTA,DTAC),4,4,10,15,,,          ASCB              00648000
         FMTPTRN (LBL,DTA,DTAC),3,2,25,29,,,          CPU ID            00649000
         FMTPTRN (LBL,DTA,DTAC,DTAE),4,8,35,40,,,     JOBNAME           00650000
         FMTPTRN (LBL,DTA,DTAC),7,4,50,58,,,          PSW               00651000
         FMTPTRN (DTA,DTAC),,4,,67,,,                 PSW               00652000
         FMTPTRN (LBL,DTA,DTAC),3,4,77,81,,,LAST      TCB               00653000
*  LSR RECORD - TCB FIELD 'N/A'                                         00654000
FMT005   FMTPTRN (LBL,LBLP),3,,0,,LBL004              HEADER            00655000
         FMTPTRN (LBL,DTA,DTAC),4,4,10,15,,,          ASCB              00656000
         FMTPTRN (LBL,DTA,DTAC),3,2,25,29,,,          CPU ID            00657000
         FMTPTRN (LBL,DTA,DTAC,DTAE),4,8,35,40,,,     JOBNAME           00658000
         FMTPTRN (LBL,DTA,DTAC),7,4,50,58,,,          PSW               00659000
         FMTPTRN (DTA,DTAC),,4,,67,,,                 PSW               00660000
         FMTPTRN (LBL,DTA,DTAC,DTAE),3,4,77,81,,,LAST TCB               00661000
*  SRB RECORD - GLOBAL OR LOCAL SRB                                     00662000
FMT006   FMTPTRN (LBL),6,,111,,,,                     'GLOBAL'/'LOCAL'  00663000
         FMTPTRN (LBL,LBLP),3,,0,,LBL003,             HEADER            00664000
         FMTPTRN (LBL,DTA,DTAC),4,4,10,15,,,          ASCB              00665000
         FMTPTRN (LBL,DTA,DTAC),3,2,25,29,,,          CPU ID            00666000
         FMTPTRN (LBL,DTA,DTAC,DTAE),4,8,35,40,,,     JOBNAME           00667000
         FMTPTRN (LBL,DTA,DTAC),7,4,50,58,,,          PSW               00668000
         FMTPTRN (DTA,DTAC),,4,,67,,,                 PSW               00669000
         FMTPTRN (LBL,DTA,DTAC),3,4,77,81,,,          SRB               00670000
         FMTPTRN (LBL,DTA,DTAC),4,4,91,96,,,          PARM              00671000
         FMTPTRN (LBL),4,,106,,,,LAST                 TYPE              00672000
* SRB RECORD - SUSPENDED SRB, ALL FIELDS NORMAL                         00673000
FMT007   FMTPTRN (LBL,LBLP),3,,0,,LBL003,             HEADER            00674000
         FMTPTRN (LBL,DTA,DTAC),4,4,10,15,,,          ASCB              00675000
         FMTPTRN (LBL,DTA,DTAC),3,2,25,29,,,          CPU ID            00676000
         FMTPTRN (LBL,DTA,DTAC,DTAE),4,8,35,40,,,     JOBNAME           00677000
         FMTPTRN (LBL,DTA,DTAC),7,4,50,58,,,          PSW               00678000
         FMTPTRN (DTA,DTAC),,4,,67,,,                 PSW               00679000
         FMTPTRN (LBL,DTA,DTAC),3,4,77,81,,,          SRB               00680000
         FMTPTRN (LBL,DTA,DTAC),4,4,91,96,,,          PARM              00681000
         FMTPTRN (LBL),14,,106,,,,LAST                TYPE SUSPENDED    00682000
* SRB RECORD - SUSPENDED SRB, SRB AND PARM FIELDS '****'                00683000
FMT009   FMTPTRN (LBL,LBLP),3,,0,,LBL003,             HEADER            00684000
         FMTPTRN (LBL,DTA,DTAC),4,4,10,15,,,          ASCB              00685000
         FMTPTRN (LBL,DTA,DTAC),3,2,25,29,,,          CPU ID            00686000
         FMTPTRN (LBL,DTA,DTAC,DTAE),4,8,35,40,,,     JOBNAME           00687000
         FMTPTRN (LBL,DTA,DTAC),7,4,50,58,,,          PSW               00688000
         FMTPTRN (DTA,DTAC),,4,,67,,,                 PSW               00689000
         FMTPTRN (LBL,DTA,DTAC,DTAE),3,4,77,81,,,     SRB               00690000
         FMTPTRN (LBL,DTA,DTAC,DTAE),4,4,91,96,,,     PARM              00691000
         FMTPTRN (LBL),14,,106,,,,LAST                TYPE SUSPENDED    00692000
@DATD    DSECT                                                          00693000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                00694000
@ENDDATD EQU   *                                                        00695000
AMDSYS02 CSECT                                                          00696000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       00697000
@01      EQU   01                                                       00698000
@02      EQU   02                                                       00699000
@03      EQU   03                                                       00700000
@04      EQU   04                                                       00701000
@05      EQU   05                                                       00702000
@06      EQU   06                                                       00703000
@07      EQU   07                                                       00704000
@08      EQU   08                                                       00705000
@09      EQU   09                                                       00706000
@10      EQU   10                                                       00707000
@11      EQU   11                                                       00708000
@12      EQU   12                                                       00709000
@13      EQU   13                                                       00710000
@14      EQU   14                                                       00711000
@15      EQU   15                                                       00712000
AEDITCBR EQU   @09                                                      00713000
ABDPLPTR EQU   @01                                                      00714000
FMTPTR   EQU   @00                                                      00715000
PLISTPTR EQU   @01                                                      00716000
CODEREG  EQU   @02                                                      00717000
PLISTSAV EQU   @03                                                      00718000
GMAINPTR EQU   @04                                                      00719000
RECREG   EQU   @05                                                      00720000
EIDREG   EQU   @06                                                      00721000
MASKREG  EQU   @06                                                      00722000
R8WORK   EQU   @08                                                      00723000
R13SAVE  EQU   @13                                                      00724000
RTN14    EQU   @14                                                      00725000
AMDPRTAB EQU   0                                                        00726000
DEBGFLGS EQU   AMDPRTAB+8                                               00727000
PTHFLGS1 EQU   DEBGFLGS                                                 00728000
PTHFLGS2 EQU   DEBGFLGS+1                                               00729000
INRFCFGS EQU   DEBGFLGS+2                                               00730000
IOFLGS   EQU   DEBGFLGS+3                                               00731000
STARTIME EQU   AMDPRTAB+40                                              00732000
STOPTIME EQU   AMDPRTAB+52                                              00733000
NAMES    EQU   AMDPRTAB+64                                              00734000
ADS      EQU   AMDPRTAB+104                                             00735000
AADS     EQU   ADS                                                      00736000
SIF      EQU   AMDPRTAB+124                                             00737000
SIOFLGS  EQU   SIF                                                      00738000
DVADS1   EQU   AMDPRTAB+128                                             00739000
IO       EQU   AMDPRTAB+228                                             00740000
IOFLGS2  EQU   IO                                                       00741000
DVADS2   EQU   AMDPRTAB+232                                             00742000
VCF      EQU   AMDPRTAB+332                                             00743000
SVCFLGS  EQU   VCF                                                      00744000
USR      EQU   AMDPRTAB+368                                             00745000
USRFLGS  EQU   USR                                                      00746000
USRTAB   EQU   AMDPRTAB+372                                             00747000
PI       EQU   AMDPRTAB+452                                             00748000
PIFLGS   EQU   PI                                                       00749000
ALLP     EQU   PIFLGS                                                   00750000
PGMNGEN  EQU   AMDPRTAB+456                                             00751000
GENFLAGS EQU   PGMNGEN+3                                                00752000
DSP      EQU   GENFLAGS                                                 00753000
SYS      EQU   GENFLAGS                                                 00754000
GENFLGS1 EQU   AMDPRTAB+460                                             00755000
ESTARTME EQU   AMDPRTAB+500                                             00756000
ESTOPTME EQU   AMDPRTAB+509                                             00757000
ABDPL    EQU   0                                                        00758000
ADPLFLAG EQU   ABDPL+7                                                  00759000
ADPLBUF  EQU   ABDPL+8                                                  00760000
ADPLFMT1 EQU   ABDPL+44                                                 00761000
ADPLFMT2 EQU   ABDPL+48                                                 00762000
OURPLIST EQU   0                                                        00763000
EIDPTR   EQU   OURPLIST+12                                              00764000
DTAPTR   EQU   OURPLIST+16                                              00765000
FMTRTN   EQU   OURPLIST+20                                              00766000
GTMPTR   EQU   OURPLIST+24                                              00767000
FPLPTR   EQU   OURPLIST+28                                              00768000
GMAREA   EQU   0                                                        00769000
REGSAV   EQU   GMAREA                                                   00770000
BACKPTR  EQU   REGSAV+4                                                 00771000
CVDWORK  EQU   GMAREA+72                                                00772000
ENTRYCNT EQU   GMAREA+84                                                00773000
OUTBUF   EQU   0                                                        00774000
DECPI    EQU   OUTBUF+6                                                 00775000
PIREC    EQU   0                                                        00776000
PIPSW    EQU   PIREC+14                                                 00777000
PIINT    EQU   PIPSW+2                                                  00778000
PICODER  EQU   PIINT+1                                                  00779000
PIINTTCB EQU   PIREC+22                                                 00780000
PICDENAM EQU   PIREC+30                                                 00781000
PIREGS   EQU   PIREC+38                                                 00782000
PIREGS1  EQU   PIREGS                                                   00783000
PIREGS2  EQU   PIREGS+32                                                00784000
DSPREC   EQU   0                                                        00785000
DSPCDNAM EQU   DSPREC+26                                                00786000
SRBREC   EQU   0                                                        00787000
SRBREGS  EQU   SRBREC+22                                                00788000
SRBSRB   EQU   SRBREGS                                                  00789000
SRBTYPE  EQU   SRBREC+30                                                00790000
LSRREC   EQU   0                                                        00791000
LSRTCB   EQU   LSRREC+22                                                00792000
HISSAVE  EQU   0                                                        00793000
RTRNCODE EQU   HISSAVE+16                                               00794000
EID      EQU   0                                                        00795000
AMDPRFMT EQU   0                                                        00796000
ERRASCB  EQU   0                                                        00797000
*                                      START UNREFERENCED COMPONENTS    00798000
@NM00010 EQU   HISSAVE                                                  00799000
LSRPSW   EQU   LSRREC+14                                                00800000
LSRJBNM  EQU   LSRREC+6                                                 00801000
LSRCPUID EQU   LSRREC+4                                                 00802000
LSRASCB  EQU   LSRREC                                                   00803000
@NM00009 EQU   SRBREGS+4                                                00804000
SRBPSW   EQU   SRBREC+14                                                00805000
SRBJBNM  EQU   SRBREC+6                                                 00806000
SRBCPUID EQU   SRBREC+4                                                 00807000
@NM00008 EQU   SRBREC                                                   00808000
DSPNMCHK EQU   DSPCDNAM                                                 00809000
DSPTCB   EQU   DSPREC+22                                                00810000
DSPPSW   EQU   DSPREC+14                                                00811000
DSPJBNM  EQU   DSPREC+6                                                 00812000
DSPCPUID EQU   DSPREC+4                                                 00813000
DSPASCB  EQU   DSPREC                                                   00814000
PINMCHK  EQU   PICDENAM                                                 00815000
PIVPA    EQU   PIREC+26                                                 00816000
@NM00007 EQU   PIINT                                                    00817000
@NM00006 EQU   PIPSW                                                    00818000
PIJBNM   EQU   PIREC+6                                                  00819000
PICPUID  EQU   PIREC+4                                                  00820000
PIASCB   EQU   PIREC                                                    00821000
@NM00005 EQU   OUTBUF+9                                                 00822000
@NM00004 EQU   OUTBUF                                                   00823000
SVR14NRM EQU   GMAREA+80                                                00824000
@NM00003 EQU   REGSAV                                                   00825000
OPTPTR   EQU   OURPLIST+8                                               00826000
BUFPTR   EQU   OURPLIST+4                                               00827000
RECPTR   EQU   OURPLIST                                                 00828000
ADPLEXT  EQU   ABDPL+52                                                 00829000
ADPLCOM4 EQU   ABDPL+40                                                 00830000
ADPLCOM3 EQU   ABDPL+36                                                 00831000
ADPLCOM2 EQU   ABDPL+32                                                 00832000
ADPLCOM1 EQU   ABDPL+28                                                 00833000
ADPLFRMT EQU   ABDPL+24                                                 00834000
ADPLMEMA EQU   ABDPL+20                                                 00835000
ADPLCVT  EQU   ABDPL+16                                                 00836000
ADPLPRNT EQU   ABDPL+12                                                 00837000
@NM00002 EQU   ADPLFLAG                                                 00838000
ADPLSYTM EQU   ADPLFLAG                                                 00839000
ADPLSNPR EQU   ADPLFLAG                                                 00840000
ADPLSBPL EQU   ABDPL+6                                                  00841000
ADPLASID EQU   ABDPL+4                                                  00842000
ADPLTCB  EQU   ABDPL                                                    00843000
RESERVED EQU   AMDPRTAB+522                                             00844000
CVTTZONE EQU   AMDPRTAB+518                                             00845000
ESPSEC   EQU   ESTOPTME+7                                               00846000
ESPMIN   EQU   ESTOPTME+5                                               00847000
ESPHR    EQU   ESTOPTME+3                                               00848000
ESPDAY   EQU   ESTOPTME                                                 00849000
ESSEC    EQU   ESTARTME+7                                               00850000
ESMIN    EQU   ESTARTME+5                                               00851000
ESHR     EQU   ESTARTME+3                                               00852000
ESDAY    EQU   ESTARTME                                                 00853000
ADTSBUF  EQU   AMDPRTAB+496                                             00854000
OFSTDATA EQU   AMDPRTAB+494                                             00855000
OFSTEID  EQU   AMDPRTAB+492                                             00856000
AFRMAD   EQU   AMDPRTAB+488                                             00857000
REENTWKA EQU   AMDPRTAB+484                                             00858000
PRFMTADD EQU   AMDPRTAB+480                                             00859000
AEIOCT   EQU   AMDPRTAB+476                                             00860000
EXITADDR EQU   AMDPRTAB+472                                             00861000
EXITNM   EQU   AMDPRTAB+464                                             00862000
RECDLL   EQU   AMDPRTAB+461                                             00863000
@NM00001 EQU   GENFLGS1                                                 00864000
FIRSTHSW EQU   GENFLGS1                                                 00865000
TSFOUND  EQU   GENFLGS1                                                 00866000
EOFINPRO EQU   GENFLGS1                                                 00867000
TS       EQU   GENFLGS1                                                 00868000
EOF      EQU   GENFLAGS                                                 00869000
RR       EQU   GENFLAGS                                                 00870000
SRM      EQU   GENFLAGS                                                 00871000
RNIO     EQU   GENFLAGS                                                 00872000
SYSM     EQU   GENFLAGS                                                 00873000
EXT      EQU   GENFLAGS                                                 00874000
PICODEA  EQU   PGMNGEN+2                                                00875000
PICODES  EQU   PGMNGEN                                                  00876000
Q        EQU   PI+1                                                     00877000
P01R     EQU   PIFLGS                                                   00878000
SELP     EQU   PIFLGS                                                   00879000
USRNGTAB EQU   USRTAB                                                   00880000
O        EQU   USR+1                                                    00881000
N01R     EQU   USRFLGS                                                  00882000
SELU     EQU   USRFLGS                                                  00883000
ALLU     EQU   USRFLGS                                                  00884000
SVCNUMS  EQU   AMDPRTAB+336                                             00885000
M        EQU   VCF+1                                                    00886000
L        EQU   SVCFLGS                                                  00887000
SELV     EQU   SVCFLGS                                                  00888000
ALLV     EQU   SVCFLGS                                                  00889000
IODVADS  EQU   DVADS2                                                   00890000
K01RES   EQU   IO+1                                                     00891000
JJ       EQU   IOFLGS2                                                  00892000
SELI     EQU   IOFLGS2                                                  00893000
ALLI     EQU   IOFLGS2                                                  00894000
SIODVADS EQU   DVADS1                                                   00895000
II       EQU   SIF+1                                                    00896000
H        EQU   SIOFLGS                                                  00897000
NOEQU    EQU   SIOFLGS                                                  00898000
EQUIV    EQU   SIOFLGS                                                  00899000
SELS     EQU   SIOFLGS                                                  00900000
ALLS     EQU   SIOFLGS                                                  00901000
ASCBADDR EQU   AADS                                                     00902000
JOBNAMES EQU   NAMES                                                    00903000
DAY2     EQU   STOPTIME+10                                              00904000
F        EQU   STOPTIME+8                                               00905000
TIME2    EQU   STOPTIME                                                 00906000
DAY      EQU   STARTIME+10                                              00907000
D        EQU   STARTIME+8                                               00908000
TIME     EQU   STARTIME                                                 00909000
DDNAME   EQU   AMDPRTAB+32                                              00910000
USEREXIT EQU   AMDPRTAB+24                                              00911000
GTFWDPTR EQU   AMDPRTAB+20                                              00912000
C        EQU   DEBGFLGS+4                                               00913000
B        EQU   IOFLGS                                                   00914000
GETEOF   EQU   IOFLGS                                                   00915000
DMDFMT   EQU   INRFCFGS                                                 00916000
EDITSTOP EQU   INRFCFGS                                                 00917000
EXTTRC   EQU   INRFCFGS                                                 00918000
RET      EQU   INRFCFGS                                                 00919000
FMT      EQU   INRFCFGS                                                 00920000
SPIE     EQU   INRFCFGS                                                 00921000
TERM     EQU   INRFCFGS                                                 00922000
FLMODE   EQU   INRFCFGS                                                 00923000
REMAIN   EQU   PTHFLGS2                                                 00924000
APP      EQU   PTHFLGS2                                                 00925000
REXT     EQU   PTHFLGS1                                                 00926000
FRM      EQU   PTHFLGS1                                                 00927000
FLT      EQU   PTHFLGS1                                                 00928000
HEX      EQU   PTHFLGS1                                                 00929000
CON      EQU   PTHFLGS1                                                 00930000
GET      EQU   PTHFLGS1                                                 00931000
SCN      EQU   PTHFLGS1                                                 00932000
ROOT     EQU   PTHFLGS1                                                 00933000
CURREC   EQU   AMDPRTAB+4                                               00934000
AFMG     EQU   AMDPRTAB                                                 00935000
*                                      END UNREFERENCED COMPONENTS      00936000
@RT00084 EQU   IGNORE                                                   00937000
@RC00123 EQU   @RC00121                                                 00938000
@RF00139 EQU   IGNORE                                                   00939000
@ENDDATA EQU   *                                                        00940000
         END   AMDSYS02                                                 00941000
./  ADD  SSI=72550015,NAME=AMDSYS03
         TITLE 'AMDSYS03 - SYSM FORMAT APPENDAGE                       *00001000
                        '                                               00002000
AMDSYS03 CSECT ,                                                   0001 00003000
@PROLOG  ST    @14,12(,@13)                                        0001 00004000
         STM   @00,@12,20(@13)                                     0001 00005000
         BALR  @07,0                                               0001 00006000
@PSTART  LA    @11,4095(,@07)                                      0001 00007000
         USING @PSTART,@07                                         0001 00008000
         USING @PSTART+4095,@11                                    0001 00009000
       USING   @DATD,WORKPTR      COMPILER WORK AREA                    00010000
*   PREG=REG1;                      /* SAVE PARM PTR IN PREG         */ 00011000
         LR    PREG,REG1                                           0118 00012000
*   WORKPTR=WKAPTR;                 /* SET UP COMPILER WORK AREA     */ 00013000
         L     WORKPTR,WKAPTR(,PREG)                               0119 00014000
*   GEN;                                                           0120 00015000
*                                                                  0120 00016000
*                 /* GENERATE REMAINING LINKAGE CONVENTIONS  */         00017000
     ST   @13,@SA00001+4                                                00018000
     LA   @15,@SA00001                                                  00019000
     ST   @15,8(0,@13)                                                  00020000
     LR   @13,@15                                                       00021000
*   /*****************************************************************/ 00022000
*   /*                                                               */ 00023000
*   /* LOOP TO TEST EID OF CURRENT RECORD TO DETERMINE WHICH ROUTINE */ 00024000
*   /* SHOULD FORMAT                                                 */ 00025000
*   /*                                                               */ 00026000
*   /*****************************************************************/ 00027000
*                                                                  0121 00028000
*   DO I=1 TO 18;                                                  0121 00029000
         LA    I,1                                                 0121 00030000
@DL00121 DS    0H                                                  0122 00031000
*     IF RTNEID(I)=EID THEN                                        0122 00032000
         LR    @12,I                                               0122 00033000
         SLA   @12,3                                               0122 00034000
         L     @06,EIDPTR(,PREG)                                   0122 00035000
         LA    @04,RTNEID-8(@12)                                   0122 00036000
         CLC   0(2,@04),EID(@06)                                   0122 00037000
         BNE   @RF00122                                            0122 00038000
*       DO;                                                        0123 00039000
*         GO TO RTNADDR(I);         /* MATCH ON EID - PICK UP      0124 00040000
*                                      ASSOCIATED ADDRESS AND BRANCH    00041000
*                                      TO ROUTINE                    */ 00042000
         L     @12,RTNADDR-8(@12)                                  0124 00043000
         BR    @12                                                 0124 00044000
*       END;                                                       0125 00045000
*   END;                            /* END LOOP TO TEST EID VALUE    */ 00046000
*                                                                  0126 00047000
@RF00122 AL    I,@CF00046                                          0126 00048000
         C     I,@CF00323                                          0126 00049000
         BNH   @DL00121                                            0126 00050000
*   /*****************************************************************/ 00051000
*   /*                                                               */ 00052000
*   /* FALL OUT MEANS INVALID EID - SET RETURN CODE 8 AND EXIT       */ 00053000
*   /*                                                               */ 00054000
*   /*****************************************************************/ 00055000
*                                                                  0127 00056000
*SETRET8:                                                          0127 00057000
*   REG15=8;                                                       0127 00058000
SETRET8  LA    REG15,8                                             0127 00059000
*   RETURN;                                                        0128 00060000
@EL00001 L     @13,4(,@13)                                         0128 00061000
@EF00001 DS    0H                                                  0128 00062000
@ER00001 L     @14,12(,@13)                                        0128 00063000
         LM    @00,@12,20(@13)                                     0128 00064000
         BR    @14                                                 0128 00065000
*IORTN:                                                            0129 00066000
*   REG3=ADDR(IO);                  /* POINT TO I/O SECTION OF     0129 00067000
*                                      AMDPRTAB                      */ 00068000
*                                                                  0129 00069000
IORTN    LA    REG3,IO(,AEDITCBR)                                  0129 00070000
*   /*****************************************************************/ 00071000
*   /*                                                               */ 00072000
*   /* BRANCH HERE TO TEST IF RECORD SHOULD BE FORMATTED, FIRST TEST */ 00073000
*   /* CHECK FOR ALL SYSM RECORDS OR ALL OF EITHER I/O OR SIO RECORDS*/ 00074000
*   /* BEING PRINTER                                                 */ 00075000
*   /*                                                               */ 00076000
*   /*****************************************************************/ 00077000
*                                                                  0130 00078000
*FMTTEST:                                                          0130 00079000
*   IF SYSM='1'B|ALL='1'B THEN                                     0130 00080000
FMTTEST  TM    SYSM(AEDITCBR),B'00010000'                          0130 00081000
         BO    @RT00130                                            0130 00082000
         TM    ALL(REG3),B'10000000'                               0130 00083000
         BNO   @RF00130                                            0130 00084000
@RT00130 DS    0H                                                  0131 00085000
*TESTERR1:                                                         0131 00086000
*     DO;                           /* VERIFY THAT RECORD IS OK    0131 00087000
*                                      BEFORE BRANCH TO PATTERN    0131 00088000
*                                      SELECTION                     */ 00089000
*                                                                  0131 00090000
TESTERR1 DS    0H                                                  0132 00091000
*       /*************************************************************/ 00092000
*       /*                                                           */ 00093000
*       /* IF RECORD CONTAINS ERROR CODE, DUMP IN HEX                */ 00094000
*       /*                                                           */ 00095000
*       /*************************************************************/ 00096000
*                                                                  0132 00097000
*       IF DATA(1:2)='EEEE'X THEN                                  0132 00098000
         L     @12,DATAPTR(,PREG)                                  0132 00099000
         CLC   DATA(2,@12),@CB00606                                0132 00100000
         BNE   @RF00132                                            0132 00101000
*CALLHEX:                                                          0133 00102000
*         DO;                                                      0133 00103000
CALLHEX  DS    0H                                                  0134 00104000
*           REG15=12;               /* INDICATE HEX DUMP ROUTINE     */ 00105000
         LA    REG15,12                                            0134 00106000
*           RETURN;                 /* RECORD TO BE PRINTED IN HEX   */ 00107000
         B     @EL00001                                            0135 00108000
*         END CALLHEX;                                             0136 00109000
*       ELSE                                                       0137 00110000
*         GO TO IOSPLIT;            /* GO SELECT APPROPRIATE FORMAT     00111000
*                                      PATTERN                       */ 00112000
*     END TESTERR1;                                                0138 00113000
*                                                                  0138 00114000
*   /*****************************************************************/ 00115000
*   /*                                                               */ 00116000
*   /* NOT ALL OF THIS TYPE OF RECORD BEING PRINTED, CHECK FOR       */ 00117000
*   /* SELECTION BY PARTICULAR                                       */ 00118000
*   /*                                                               */ 00119000
*   /*****************************************************************/ 00120000
*                                                                  0139 00121000
*   IF SELECT='0'B THEN                                            0139 00122000
@RF00130 TM    SELECT(REG3),B'01000000'                            0139 00123000
         BZ    @RT00139                                            0139 00124000
*     GO TO SETRET8;                /* NO SELECTION AT ALL - RETURN     00125000
*                                      WITH CODE 8 FOR NO PRINTING   */ 00126000
*   IF DATA(1:2)='EEEE'X THEN       /* VERIFY RECORD IS CLEAN BEFORE    00127000
*                                      DEVICE SEARCH                 */ 00128000
         L     @12,DATAPTR(,PREG)                                  0141 00129000
         CLC   DATA(2,@12),@CB00606                                0141 00130000
         BE    @RT00141                                            0141 00131000
*     GO TO CALLHEX;                /* IN CASE OF BAD RECORD, ASSUME    00132000
*                                      NOT SELECTED AND SET RETURN 0142 00133000
*                                      CODE 8                        */ 00134000
*                                                                  0142 00135000
*   /*****************************************************************/ 00136000
*   /*                                                               */ 00137000
*   /* THE FOLLOWING ROUTINE SEARCHES DEVICE ADDR TABLE, ADDRESSED BY*/ 00138000
*   /* THE DEVSRCH1 INCLUDE AND REG3. THE IDENTIFIER IODEV IS USED AS*/ 00139000
*   /* A SEARCH ARGUMENT.                                            */ 00140000
*   /*                                                               */ 00141000
*   /*****************************************************************/ 00142000
*                                                                  0143 00143000
*   DO I=1 TO 50;                   /* LOOP THROUGH ALL ENTRIES IN 0143 00144000
*                                      DEV ADDR TABLE                */ 00145000
*                                                                  0143 00146000
         LA    I,1                                                 0143 00147000
@DL00143 DS    0H                                                  0144 00148000
*     /***************************************************************/ 00149000
*     /*                                                             */ 00150000
*     /* IF TABLE ENTRY IS BLANK, MEANS END OF ADDRESSES AND SEARCH  */ 00151000
*     /* HAS FAILED                                                  */ 00152000
*     /*                                                             */ 00153000
*     /***************************************************************/ 00154000
*                                                                  0144 00155000
*     IF DEVTAB(I)='  ' THEN                                       0144 00156000
         LR    @12,I                                               0144 00157000
         ALR   @12,@12                                             0144 00158000
         ST    @12,@TF00001                                        0144 00159000
         ALR   @12,REG3                                            0144 00160000
         CLC   DEVTAB-2(2,@12),@CC00611                            0144 00161000
         BE    @RT00144                                            0144 00162000
*       GOTO SETRET8;                                              0145 00163000
*     IF DEVTAB(I)=IODEVA THEN                                     0146 00164000
         L     @12,DATAPTR(,PREG)                                  0146 00165000
         LR    @06,REG3                                            0146 00166000
         AL    @06,@TF00001                                        0146 00167000
         CLC   DEVTAB-2(2,@06),IODEVA(@12)                         0146 00168000
         BE    @RT00146                                            0146 00169000
*       GOTO EXIT;                                                 0147 00170000
*   END;                                                           0148 00171000
*                                                                  0148 00172000
         AL    I,@CF00046                                          0148 00173000
         C     I,@CF00104                                          0148 00174000
         BNH   @DL00143                                            0148 00175000
*   /*****************************************************************/ 00176000
*   /*                                                               */ 00177000
*   /* FALL OUT MEANS NOT FOUND                                      */ 00178000
*   /*                                                               */ 00179000
*   /*****************************************************************/ 00180000
*                                                                  0149 00181000
*   GOTO SETRET8;                                                  0149 00182000
         B     SETRET8                                             0149 00183000
*EXIT:                                                             0150 00184000
*   ;                               /* EXIT TO NSI, SEARCH SUCCESSFUL*/ 00185000
*                                                                  0150 00186000
EXIT     DS    0H                                                  0151 00187000
*   /*****************************************************************/ 00188000
*   /*                                                               */ 00189000
*   /* TEST EID AGAIN TO DETERMINE TYPE IO RECORD BEING PROCESSED:   */ 00190000
*   /* FIRST STEP IN SELECTING PROPER FORMAT PATTERN                 */ 00191000
*   /*                                                               */ 00192000
*   /*****************************************************************/ 00193000
*                                                                  0151 00194000
*IOSPLIT:                                                          0151 00195000
*   IF EID=IMDMIO2 THEN                                            0151 00196000
IOSPLIT  L     @12,EIDPTR(,PREG)                                   0151 00197000
         CLC   EID(2,@12),@CB00210                                 0151 00198000
         BNE   @RF00151                                            0151 00199000
*     DO;                                                          0152 00200000
*       LABPT=ADDR(IOLAB);          /* POINT TO IO LABELS            */ 00201000
         L     @12,ABDPLPTR(,PREG)                                 0153 00202000
         LA    @06,IOLAB                                           0153 00203000
         ST    @06,LABPT(,@12)                                     0153 00204000
*       GOTO IODATA;                                               0154 00205000
         B     IODATA                                              0154 00206000
*     END;                                                         0155 00207000
*   IF EID=IMDMEOS                  /* EOS EVENT                     */ 00208000
*     THEN                                                         0156 00209000
@RF00151 L     @12,EIDPTR(,PREG)                                   0156 00210000
         CLC   EID(2,@12),@CB00224                                 0156 00211000
         BNE   @RF00156                                            0156 00212000
*     LABPT=ADDR(EOSLAB);           /* POINT TO EOS LABELS           */ 00213000
         L     @12,ABDPLPTR(,PREG)                                 0157 00214000
         LA    @06,EOSLAB                                          0157 00215000
         ST    @06,LABPT(,@12)                                     0157 00216000
*   ELSE                                                           0158 00217000
*     LABPT=ADDR(PCILAB);           /* POINT TO PCI LABELS           */ 00218000
         B     @RC00156                                            0158 00219000
@RF00156 L     @12,ABDPLPTR(,PREG)                                 0158 00220000
         LA    @06,PCILAB                                          0158 00221000
         ST    @06,LABPT(,@12)                                     0158 00222000
*IODATA:                                                           0159 00223000
*   IF IOSENSE=ASTERR               /* EBCIDIC DATA                  */ 00224000
*     THEN                                                         0159 00225000
@RC00156 DS    0H                                                  0159 00226000
IODATA   L     @12,DATAPTR(,PREG)                                  0159 00227000
         CLC   IOSENSE(2,@12),@CC00339                             0159 00228000
         BNE   @RF00159                                            0159 00229000
*     DO;                                                          0160 00230000
*       REG0=ADDR(IOERRF1);         /* POINT TO EBCIDIC FMT          */ 00231000
         LA    REG0,IOERRF1                                        0161 00232000
*       GO TO FORMAT;                                              0162 00233000
         B     FORMAT                                              0162 00234000
*     END;                                                         0163 00235000
*   IF IOTCB=UNAVAL                 /* EBCIDIC DATA                  */ 00236000
*     THEN                                                         0164 00237000
@RF00159 L     @12,DATAPTR(,PREG)                                  0164 00238000
         CLC   IOTCB(4,@12),@CC00343                               0164 00239000
         BNE   @RF00164                                            0164 00240000
*     DO;                                                          0165 00241000
*       REG0=ADDR(IOERRF0);         /* POINT TO EBCIDIC FMT          */ 00242000
         LA    REG0,IOERRF0                                        0166 00243000
*       GO TO FORMAT;                                              0167 00244000
         B     FORMAT                                              0167 00245000
*     END;                                                         0168 00246000
*   IF IOSENSE=NOTAPP THEN                                         0169 00247000
@RF00164 L     @12,DATAPTR(,PREG)                                  0169 00248000
         CLC   IOSENSE(2,@12),@CC00341                             0169 00249000
         BNE   @RF00169                                            0169 00250000
*     DO;                           /* N/ IN SENSE                   */ 00251000
*       REG1=ABDPLPTR;              /* ABDUMP PARM LIST              */ 00252000
         L     @12,ABDPLPTR(,PREG)                                 0171 00253000
         LR    REG1,@12                                            0171 00254000
*       DATAPT=ADDR(NOTAPP);        /* N/A INTO SENSE                */ 00255000
         LA    @06,@CC00341                                        0172 00256000
         ST    @06,DATAPT(,@12)                                    0172 00257000
*       REG0=ADDR(IOSNSNA);         /* FMTPTRN ADDR                  */ 00258000
         LA    REG0,IOSNSNA                                        0173 00259000
*       CALL AMDPRFMT;              /* FORMAT SENSE                  */ 00260000
         L     @15,ADPLFRMT(,@12)                                  0174 00261000
         BALR  @14,@15                                             0174 00262000
*     END;                                                         0175 00263000
*   ELSE                                                           0176 00264000
*     DO;                           /* SENSE                         */ 00265000
         B     @RC00169                                            0176 00266000
@RF00169 DS    0H                                                  0177 00267000
*       REG1=ABDPLPTR;              /* ABDUMP PARM LIST              */ 00268000
         L     @12,ABDPLPTR(,PREG)                                 0177 00269000
         LR    REG1,@12                                            0177 00270000
*       DATAPT=ADDR(IOSENSE);       /* SENSE                         */ 00271000
         L     @06,DATAPTR(,PREG)                                  0178 00272000
         LA    @06,IOSENSE(,@06)                                   0178 00273000
         ST    @06,DATAPT(,@12)                                    0178 00274000
*       REG0=ADDR(IOSNSOK);         /* FMTPTRN ADDR                  */ 00275000
         LA    REG0,IOSNSOK                                        0179 00276000
*       CALL AMDPRFMT;              /* FORMAT SENSE                  */ 00277000
         L     @15,ADPLFRMT(,@12)                                  0180 00278000
         BALR  @14,@15                                             0180 00279000
*     END;                                                         0181 00280000
*   IF IOASCB=ASTERR THEN                                          0182 00281000
@RC00169 L     @12,DATAPTR(,PREG)                                  0182 00282000
         CLC   IOASCB(4,@12),@CC00339                              0182 00283000
         BNE   @RF00182                                            0182 00284000
*     DO;                           /* **** IN ASCB ?                */ 00285000
*       IF IOTCB=ASTERR THEN        /* **** IN TCB TOO ?             */ 00286000
         CLC   IOTCB(4,@12),@CC00339                               0184 00287000
         BNE   @RF00184                                            0184 00288000
*         REG0=ADDR(IOERRF2);       /* USE THIS FORMAT               */ 00289000
         LA    REG0,IOERRF2                                        0185 00290000
*       ELSE                                                       0186 00291000
*         DO;                                                      0186 00292000
         B     @RC00184                                            0186 00293000
@RF00184 DS    0H                                                  0187 00294000
*           DATAPT=ADDR(IOTCB);     /* POINT AT TCB ADDR IN RECORD   */ 00295000
         L     @12,ABDPLPTR(,PREG)                                 0187 00296000
         L     @06,DATAPTR(,PREG)                                  0187 00297000
         LA    @04,IOTCB(,@06)                                     0187 00298000
         ST    @04,DATAPT(,@12)                                    0187 00299000
*           REG1=ABDPLPTR;          /* PARM LIST                     */ 00300000
         LR    REG1,@12                                            0188 00301000
*           IF IOTCB=NOTAPP THEN    /* N/A IN TCB                    */ 00302000
         CLC   IOTCB(4,@06),@CC00341                               0189 00303000
         BNE   @RF00189                                            0189 00304000
*             REG0=ADDR(IOTCBNA);   /* POINT TO RIGHT FORMAT         */ 00305000
         LA    REG0,IOTCBNA                                        0190 00306000
*           ELSE                                                   0191 00307000
*             REG0=ADDR(IOTCBOK);   /* NORMAL TCB ADDR               */ 00308000
         B     @RC00189                                            0191 00309000
@RF00189 LA    REG0,IOTCBOK                                        0191 00310000
*           CALL AMDPRFMT;          /* CALL FORMAT ROUTINE           */ 00311000
@RC00189 L     @12,ABDPLPTR(,PREG)                                 0192 00312000
         L     @15,ADPLFRMT(,@12)                                  0192 00313000
         BALR  @14,@15                                             0192 00314000
*           REG0=ADDR(IOERRF3);     /* **** ONLY IN ASCB             */ 00315000
         LA    REG0,IOERRF3                                        0193 00316000
*         END;                                                     0194 00317000
*       GO TO FORMAT;                                              0195 00318000
         B     FORMAT                                              0195 00319000
*     END;                                                         0196 00320000
*   IF IOTCB=ASTERR THEN            /* **** ONLY IN TCB ?            */ 00321000
@RF00182 L     @12,DATAPTR(,PREG)                                  0197 00322000
         CLC   IOTCB(4,@12),@CC00339                               0197 00323000
         BNE   @RF00197                                            0197 00324000
*     REG0=ADDR(IOERRF4);           /* USE THIS FORMAT               */ 00325000
         LA    REG0,IOERRF4                                        0198 00326000
*   ELSE                                                           0199 00327000
*     DO;                                                          0199 00328000
         B     @RC00197                                            0199 00329000
@RF00197 DS    0H                                                  0200 00330000
*       DATAPT=ADDR(IOTCB);         /* POINT AT TCB ADDR IN RECORD   */ 00331000
         L     @12,ABDPLPTR(,PREG)                                 0200 00332000
         L     @06,DATAPTR(,PREG)                                  0200 00333000
         LA    @04,IOTCB(,@06)                                     0200 00334000
         ST    @04,DATAPT(,@12)                                    0200 00335000
*       REG1=ABDPLPTR;              /* PARM LIST                     */ 00336000
         LR    REG1,@12                                            0201 00337000
*       IF IOTCB=NOTAPP THEN        /* N/A IN TCB                    */ 00338000
         CLC   IOTCB(4,@06),@CC00341                               0202 00339000
         BNE   @RF00202                                            0202 00340000
*         REG0=ADDR(IOTCBNA);       /* POINT TO RIGHT FORMAT         */ 00341000
         LA    REG0,IOTCBNA                                        0203 00342000
*       ELSE                                                       0204 00343000
*         REG0=ADDR(IOTCBOK);       /* NORMAL TCB ADDR               */ 00344000
         B     @RC00202                                            0204 00345000
@RF00202 LA    REG0,IOTCBOK                                        0204 00346000
*       CALL AMDPRFMT;              /* CALL FORMAT ROUTINE           */ 00347000
@RC00202 L     @12,ABDPLPTR(,PREG)                                 0205 00348000
         L     @15,ADPLFRMT(,@12)                                  0205 00349000
         BALR  @14,@15                                             0205 00350000
*       REG0=ADDR(IOF);             /* POINT TO STND FORMAT          */ 00351000
         LA    REG0,IOF                                            0206 00352000
*     END;                                                         0207 00353000
*                                                                  0207 00354000
*   /*****************************************************************/ 00355000
*   /*                                                               */ 00356000
*   /* CALL AMDPRFMT, PASS FMTPATRN ADDR IN REG0, AND EXIT           */ 00357000
*   /*                                                               */ 00358000
*   /*****************************************************************/ 00359000
*                                                                  0208 00360000
*FORMAT:                                                           0208 00361000
*   DATAPT=DATAPTR;                 /* POINT TO DATA                 */ 00362000
@RC00197 DS    0H                                                  0208 00363000
FORMAT   L     @12,ABDPLPTR(,PREG)                                 0208 00364000
         L     @06,DATAPTR(,PREG)                                  0208 00365000
         ST    @06,DATAPT(,@12)                                    0208 00366000
*   REG1=ABDPLPTR;                  /* POINT R1 TO EXIT LIST         */ 00367000
         LR    REG1,@12                                            0209 00368000
*   CALL AMDPRFMT;                  /* CALL REENTRANT FORMAT RTN     */ 00369000
         L     @15,ADPLFRMT(,@12)                                  0210 00370000
         BALR  @14,@15                                             0210 00371000
*EXITRTN:                                                          0211 00372000
*   REG15=4;                        /* SET RETURN CODE TO PRINT A  0211 00373000
*                                      LINE WITH NO RECALL OF      0211 00374000
*                                      AMDSYS03                      */ 00375000
EXITRTN  LA    REG15,4                                             0211 00376000
*   RETURN;                         /* RETURN TO CALLER , AMDPRAPP OR   00377000
*                                      IGCOFO5A                      */ 00378000
         B     @EL00001                                            0212 00379000
*/* POINT TO SIO SECTION IN AMDPRTAB                                 */ 00380000
*                                                                  0213 00381000
*SIORTN:                                                           0213 00382000
*   REG3=ADDR(SIF);                 /* POINT TO SIO PARMS IN AMDPRTAB*/ 00383000
SIORTN   LA    REG3,SIF(,AEDITCBR)                                 0213 00384000
*/* BRANCH HERE TO TEST IF RECORD SHOULD BE FORMATTED, FIRST       0214 00385000
*   TEST CHECK FOR ALL SYSM RECORDS OR  SIO                        0214 00386000
*   RECORDS BEING PRINTER                                            */ 00387000
*                                                                  0214 00388000
*   IF SYSM='1'B|ALL='1'B THEN                                     0214 00389000
         TM    SYSM(AEDITCBR),B'00010000'                          0214 00390000
         BO    @RT00214                                            0214 00391000
         TM    ALL(REG3),B'10000000'                               0214 00392000
         BNO   @RF00214                                            0214 00393000
@RT00214 DS    0H                                                  0215 00394000
*TESTERR2:                                                         0215 00395000
*     DO;                           /* VERIFY THAT RECORD IS OK    0215 00396000
*                                      BEFORE BRANCH TO PATTERN    0215 00397000
*                                      SELECTION                     */ 00398000
*                                                                  0215 00399000
TESTERR2 DS    0H                                                  0216 00400000
*       /*************************************************************/ 00401000
*       /*                                                           */ 00402000
*       /* IF RECORD CONTAINS ERROR CODE, DUMP IN HEX                */ 00403000
*       /*                                                           */ 00404000
*       /*************************************************************/ 00405000
*                                                                  0216 00406000
*       IF DATA(1:2)='EEEE'X THEN                                  0216 00407000
         L     @12,DATAPTR(,PREG)                                  0216 00408000
         CLC   DATA(2,@12),@CB00606                                0216 00409000
         BE    @RT00216                                            0216 00410000
*         GO TO CALLHEX;                                           0217 00411000
*       ELSE                                                       0218 00412000
*         GO TO SIOFMT;             /* GO SELECT APPROPRIATE FORMAT     00413000
*                                      PATTERN                       */ 00414000
         B     SIOFMT                                              0218 00415000
*     END TESTERR2;                                                0219 00416000
*                                                                  0219 00417000
*   /*****************************************************************/ 00418000
*   /*                                                               */ 00419000
*   /* NOT ALL OF THIS TYPE OF RECORD BEING PRINTED, CHECK FOR       */ 00420000
*   /* SELECTION BY PARTICULAR                                       */ 00421000
*   /*                                                               */ 00422000
*   /*****************************************************************/ 00423000
*                                                                  0220 00424000
*   IF SELECT='0'B THEN                                            0220 00425000
@RF00214 TM    SELECT(REG3),B'01000000'                            0220 00426000
         BZ    @RT00220                                            0220 00427000
*     GO TO SETRET8;                /* NO SELECTION AT ALL - RETURN     00428000
*                                      WITH CODE 8 FOR NO PRINTING   */ 00429000
*   IF DATA(1:2)='EEEE'X THEN       /* VERIFY RECORD IS CLEAN BEFORE    00430000
*                                      DEVICE SEARCH                 */ 00431000
         L     @12,DATAPTR(,PREG)                                  0222 00432000
         CLC   DATA(2,@12),@CB00606                                0222 00433000
         BE    @RT00222                                            0222 00434000
*     GO TO CALLHEX;                /* IN CASE OF BAD RECORD, ASSUME    00435000
*                                      NOT SELECTED AND SET RETURN 0223 00436000
*                                      CODE 8                        */ 00437000
*                                                                  0223 00438000
*   /*****************************************************************/ 00439000
*   /*                                                               */ 00440000
*   /* THIS ROUTINE SEARCHES THE DEVICE ADDRESS TABLE, ADDRESSED BY  */ 00441000
*   /* THE DEVSRCH1 INCLUDE AND REG3. THE IDENTIFIER SIODEV IS USED  */ 00442000
*   /* AS SEARCH ARGUMENT.                                           */ 00443000
*   /*                                                               */ 00444000
*   /*****************************************************************/ 00445000
*                                                                  0224 00446000
*   DO I=1 TO 50;                   /* LOOP THROUGH ALL ENTRIES IN 0224 00447000
*                                      DEVICE ADDRESS TABLE          */ 00448000
*                                                                  0224 00449000
         LA    I,1                                                 0224 00450000
@DL00224 DS    0H                                                  0225 00451000
*     /***************************************************************/ 00452000
*     /*                                                             */ 00453000
*     /* IF TABLE ENTRY IS BLANK, MEANS END OF ADDRESSES AND SEARCH  */ 00454000
*     /* HASFAILED                                                   */ 00455000
*     /*                                                             */ 00456000
*     /***************************************************************/ 00457000
*                                                                  0225 00458000
*     IF DEVTAB(I)='  ' THEN                                       0225 00459000
         LR    @12,I                                               0225 00460000
         ALR   @12,@12                                             0225 00461000
         ST    @12,@TF00001                                        0225 00462000
         ALR   @12,REG3                                            0225 00463000
         CLC   DEVTAB-2(2,@12),@CC00611                            0225 00464000
         BE    @RT00225                                            0225 00465000
*       GOTO SETRET8;                                              0226 00466000
*     IF DEVTAB(I)=SIODEVA THEN                                    0227 00467000
         L     @12,DATAPTR(,PREG)                                  0227 00468000
         LR    @06,REG3                                            0227 00469000
         AL    @06,@TF00001                                        0227 00470000
         CLC   DEVTAB-2(2,@06),SIODEVA(@12)                        0227 00471000
         BE    @RT00227                                            0227 00472000
*       GOTO EXIT1;                                                0228 00473000
*   END;                            /* LOOP TO INCREMENT TO NEST   0229 00474000
*                                      DEVICE                        */ 00475000
         AL    I,@CF00046                                          0229 00476000
         C     I,@CF00104                                          0229 00477000
         BNH   @DL00224                                            0229 00478000
*/*   FALL OUT MEANS NOT FOUND                                       */ 00479000
*                                                                  0230 00480000
*   GOTO SETRET8;                   /* EXIT TO NSI, SEARCH SUCCESSFUL*/ 00481000
         B     SETRET8                                             0230 00482000
*EXIT1:                                                            0231 00483000
*   ;                                                              0231 00484000
EXIT1    DS    0H                                                  0232 00485000
*SIOFMT:                                                           0232 00486000
*   IF SIOCPA=ASTERR THEN                                          0232 00487000
SIOFMT   L     @12,DATAPTR(,PREG)                                  0232 00488000
         CLC   SIOCPA(4,@12),@CC00339                              0232 00489000
         BNE   @RF00232                                            0232 00490000
*     DO;                                                          0233 00491000
*       REG0=ADDR(SIOERRF2);        /* **** ERROR FORMAT             */ 00492000
         LA    REG0,SIOERRF2                                       0234 00493000
*       GO TO FORMAT;               /* FORMAT LINE                   */ 00494000
         B     FORMAT                                              0235 00495000
*     END;                                                         0236 00496000
*   IF SIOCPA=UNAVAL THEN                                          0237 00497000
@RF00232 L     @12,DATAPTR(,PREG)                                  0237 00498000
         CLC   SIOCPA(4,@12),@CC00343                              0237 00499000
         BNE   @RF00237                                            0237 00500000
*     REG0=ADDR(SIOERRF);           /* POINT TO ERROR SIO FMT        */ 00501000
         LA    REG0,SIOERRF                                        0238 00502000
*   ELSE                                                           0239 00503000
*     DO;                                                          0239 00504000
         B     @RC00237                                            0239 00505000
@RF00237 DS    0H                                                  0240 00506000
*       RFY                                                        0240 00507000
*         N RSTD;                                                  0240 00508000
*       N=SIOCC1;                   /* GET ILC AND CC FROM RECORD    */ 00509000
         L     @12,DATAPTR(,PREG)                                  0241 00510000
         ICM   N,12,SIOCC1(@12)                                    0241 00511000
         SRA   N,16                                                0241 00512000
*       SLL(N,18);                  /* SHIFT OUT ILC                 */ 00513000
         SLL   N,18                                                0242 00514000
*       SRL(N,22);                  /* MOVE CC BACK TO NEXT BYTE     */ 00515000
         SRL   N,22                                                0243 00516000
*       SIOCC1=N;                   /* PUT BACK IN RECORD (+1 BYTE)     00517000
*                                      TO EDIT                       */ 00518000
         STCM  N,3,SIOCC1(@12)                                     0244 00519000
*       RFY                                                        0245 00520000
*         N UNRSTD;                                                0245 00521000
*       REG0=ADDR(SIOF);            /* POINT TO STND FORMAT          */ 00522000
         LA    REG0,SIOF                                           0246 00523000
*     END;                                                         0247 00524000
*   GOTO FORMAT;                    /* EXIT RTN                      */ 00525000
         B     FORMAT                                              0248 00526000
*/* POINT TO IO SECTION IN AMDPRTAB                                  */ 00527000
*                                                                  0249 00528000
*UIORTN:                                                           0249 00529000
*   REG3=ADDR(IO);                  /* POINT TO IO PARMS IN AMDPRTAB */ 00530000
UIORTN   LA    REG3,IO(,AEDITCBR)                                  0249 00531000
*/* BRANCH HERE TO TEST IF RECORD SHOULD BE FORMATTED, FIRST       0250 00532000
*   TEST CHECK FOR ALL SYSM RECORDS OR ALL UIO RECORDS BEING PRINTED */ 00533000
*                                                                  0250 00534000
*   IF SYSM='1'B|ALL='1'B THEN                                     0250 00535000
         TM    SYSM(AEDITCBR),B'00010000'                          0250 00536000
         BO    @RT00250                                            0250 00537000
         TM    ALL(REG3),B'10000000'                               0250 00538000
         BNO   @RF00250                                            0250 00539000
@RT00250 DS    0H                                                  0251 00540000
*TESTERR3:                                                         0251 00541000
*     DO;                           /* VERIFY THAT RECORD IS OK    0251 00542000
*                                      BEFORE BRANCH TO PATTERN    0251 00543000
*                                      SELECTION                     */ 00544000
*                                                                  0251 00545000
TESTERR3 DS    0H                                                  0252 00546000
*       /*************************************************************/ 00547000
*       /*                                                           */ 00548000
*       /* IF RECORD CONTAINS ERROR CODE, DUMP IN HEX                */ 00549000
*       /*                                                           */ 00550000
*       /*************************************************************/ 00551000
*                                                                  0252 00552000
*       IF DATA(1:2)='EEEE'X THEN                                  0252 00553000
         L     @12,DATAPTR(,PREG)                                  0252 00554000
         CLC   DATA(2,@12),@CB00606                                0252 00555000
         BE    @RT00252                                            0252 00556000
*         GO TO CALLHEX;                                           0253 00557000
*       ELSE                                                       0254 00558000
*         GO TO UIOFMT;             /* GO SELECT APPROPRIATE FORMAT     00559000
*                                      PATTERN                       */ 00560000
         B     UIOFMT                                              0254 00561000
*     END TESTERR3;                                                0255 00562000
*                                                                  0255 00563000
*   /*****************************************************************/ 00564000
*   /*                                                               */ 00565000
*   /* NOT ALL OF THIS TYPE OF RECORD BEING PRINTED, CHECK FOR       */ 00566000
*   /* SELECTION BY PARTICULAR                                       */ 00567000
*   /*                                                               */ 00568000
*   /*****************************************************************/ 00569000
*                                                                  0256 00570000
*   IF SELECT='0'B THEN                                            0256 00571000
@RF00250 TM    SELECT(REG3),B'01000000'                            0256 00572000
         BZ    @RT00256                                            0256 00573000
*     GO TO SETRET8;                /* NO SELECTION AT ALL - RETURN     00574000
*                                      WITH CODE 8 FOR NO PRINTING   */ 00575000
*   IF DATA(1:2)='EEEE'X THEN       /* VERIFY RECORD IS CLEAN BEFORE    00576000
*                                      DEVICE SEARCH                 */ 00577000
         L     @12,DATAPTR(,PREG)                                  0258 00578000
         CLC   DATA(2,@12),@CB00606                                0258 00579000
         BE    @RT00258                                            0258 00580000
*     GO TO CALLHEX;                /* IN CASE OF BAD RECORD, ASSUME    00581000
*                                      NOT SELECTED AND SET RETURN 0259 00582000
*                                      CODE 8                        */ 00583000
*                                                                  0259 00584000
*   /*****************************************************************/ 00585000
*   /*                                                               */ 00586000
*   /* THE DEVSRCH ROUTINE SEARCHES THE DEVICE ADDRESS TABLE         */ 00587000
*   /* ADDRESSED BY THE DEVSRCH1 TABLE AND REG3. THE IDENTIFIER      */ 00588000
*   /* UIODEV IS USED AS A SEARCH ARGUMENT.                          */ 00589000
*   /*                                                               */ 00590000
*   /*****************************************************************/ 00591000
*                                                                  0260 00592000
*   DO I=1 TO 50;                   /* LOOP THROUGH ALL ENTRIES IN 0260 00593000
*                                      DEVICE ADDR TABLE             */ 00594000
         LA    I,1                                                 0260 00595000
@DL00260 DS    0H                                                  0261 00596000
*/*   IF TABLE ENTRY IS BLANK , MEANS END OF ADDRESSES AND SEARCH HAS   00597000
*    FAILED                                                          */ 00598000
*                                                                  0261 00599000
*     IF DEVTAB(I)='  ' THEN                                       0261 00600000
         LR    @12,I                                               0261 00601000
         ALR   @12,@12                                             0261 00602000
         ST    @12,@TF00001                                        0261 00603000
         ALR   @12,REG3                                            0261 00604000
         CLC   DEVTAB-2(2,@12),@CC00611                            0261 00605000
         BE    @RT00261                                            0261 00606000
*       GOTO SETRET8;                                              0262 00607000
*     IF DEVTAB(I)=UIODEVA THEN                                    0263 00608000
         L     @12,DATAPTR(,PREG)                                  0263 00609000
         LR    @06,REG3                                            0263 00610000
         AL    @06,@TF00001                                        0263 00611000
         CLC   DEVTAB-2(2,@06),UIODEVA(@12)                        0263 00612000
         BE    @RT00263                                            0263 00613000
*       GOTO EXIT2;                                                0264 00614000
*   END;                            /* LOOP TO INCREMENT TO NEXT   0265 00615000
*                                      DEVICE                        */ 00616000
*                                                                  0265 00617000
         AL    I,@CF00046                                          0265 00618000
         C     I,@CF00104                                          0265 00619000
         BNH   @DL00260                                            0265 00620000
*   /*****************************************************************/ 00621000
*   /*                                                               */ 00622000
*   /* FALL OUT MEANS NOT FOUND                                      */ 00623000
*   /*                                                               */ 00624000
*   /*****************************************************************/ 00625000
*                                                                  0266 00626000
*   GOTO SETRET8;                   /* EXIT TO NSI, SEARCH SUCCESSFUL*/ 00627000
         B     SETRET8                                             0266 00628000
*EXIT2:                                                            0267 00629000
*   ;                                                              0267 00630000
EXIT2    DS    0H                                                  0268 00631000
*UIOFMT:                                                           0268 00632000
*   REG0=ADDR(UIOF);                /* POINT TO UIO FMTPATRN         */ 00633000
UIOFMT   LA    REG0,UIOF                                           0268 00634000
*   GOTO FORMAT;                    /* EXIT RTN                      */ 00635000
         B     FORMAT                                              0269 00636000
*                                                                  0270 00637000
*   /*****************************************************************/ 00638000
*   /*                                                               */ 00639000
*   /* TEST FOR NOT FORMATING ALL SYSM RECORDS AND NOT DSP - IF SO,  */ 00640000
*   /* BRANCH TO SET CODE 8 SO THAT RECORD IS NOT PRINTED            */ 00641000
*   /*                                                               */ 00642000
*   /*****************************************************************/ 00643000
*                                                                  0270 00644000
*DSPRTN:                                                           0270 00645000
*   IF SYSM='0'B&DSP='0'B THEN                                     0270 00646000
DSPRTN   TM    SYSM(AEDITCBR),B'01010000'                          0270 00647000
         BZ    @RT00270                                            0270 00648000
*     GO TO SETRET8;                                               0271 00649000
*                                                                  0271 00650000
*   /*****************************************************************/ 00651000
*   /*                                                               */ 00652000
*   /* IF RECORD CONTAINS ERROR INDICATOR, BRANCH TO DUMP RECORD IN  */ 00653000
*   /* HEX FORMAT                                                    */ 00654000
*   /*                                                               */ 00655000
*   /*****************************************************************/ 00656000
*                                                                  0272 00657000
*   IF DATA(1:2)='EEEE'X THEN                                      0272 00658000
@RF00270 L     @12,DATAPTR(,PREG)                                  0272 00659000
         CLC   DATA(2,@12),@CB00606                                0272 00660000
         BE    @RT00272                                            0272 00661000
*     GO TO CALLHEX;                                               0273 00662000
*   IF EID=IMDMDSP4                 /* SVC EXIT DISPATCH EVENT       */ 00663000
*     THEN                                                         0274 00664000
         L     @12,EIDPTR(,PREG)                                   0274 00665000
         CLC   EID(2,@12),@CB00239                                 0274 00666000
         BNE   @RF00274                                            0274 00667000
*     LABPT=ADDR(SDSPLAB);                                         0275 00668000
         L     @12,ABDPLPTR(,PREG)                                 0275 00669000
         LA    @06,SDSPLAB                                         0275 00670000
         ST    @06,LABPT(,@12)                                     0275 00671000
*   IF EID=IMDMDSP2                 /* LSR EVENT                     */ 00672000
*     THEN                                                         0276 00673000
@RF00274 L     @12,EIDPTR(,PREG)                                   0276 00674000
         CLC   EID(2,@12),@CB00236                                 0276 00675000
         BNE   @RF00276                                            0276 00676000
*     LABPT=ADDR(LSRLAB);                                          0277 00677000
         L     @12,ABDPLPTR(,PREG)                                 0277 00678000
         LA    @06,LSRLAB                                          0277 00679000
         ST    @06,LABPT(,@12)                                     0277 00680000
*   ELSE                                                           0278 00681000
*     LABPT=ADDR(DSPLAB);                                          0278 00682000
         B     @RC00276                                            0278 00683000
@RF00276 L     @12,ABDPLPTR(,PREG)                                 0278 00684000
         LA    @06,DSPLAB                                          0278 00685000
         ST    @06,LABPT(,@12)                                     0278 00686000
*   IF DSPTCB=NOTAPP                /* NO TCB IN LSR                 */ 00687000
*     THEN                                                         0279 00688000
@RC00276 L     @12,DATAPTR(,PREG)                                  0279 00689000
         CLC   DSPTCB(4,@12),@CC00341                              0279 00690000
         BNE   @RF00279                                            0279 00691000
*     DO;                                                          0280 00692000
*       IF DSPR15=ASTERR            /* REGISTER ERROR                */ 00693000
*         THEN                                                     0281 00694000
         CLC   DSPR15(4,@12),@CC00339                              0281 00695000
         BNE   @RF00281                                            0281 00696000
*         REG0=ADDR(DSPELSR);                                      0282 00697000
         LA    REG0,DSPELSR                                        0282 00698000
*       ELSE                                                       0283 00699000
*         REG0=ADDR(DSPLSRF);       /* POINT TO EBCIDIC FMTPATRN     */ 00700000
         B     @RC00281                                            0283 00701000
@RF00281 LA    REG0,DSPLSRF                                        0283 00702000
*     END;                                                         0284 00703000
*   ELSE                                                           0285 00704000
*     DO;                                                          0285 00705000
         B     @RC00279                                            0285 00706000
@RF00279 DS    0H                                                  0286 00707000
*       IF DSPR15=ASTERR            /* REGISTER ERROR                */ 00708000
*         THEN                                                     0286 00709000
         L     @12,DATAPTR(,PREG)                                  0286 00710000
         CLC   DSPR15(4,@12),@CC00339                              0286 00711000
         BNE   @RF00286                                            0286 00712000
*         REG0=ADDR(DSPERRF);                                      0287 00713000
         LA    REG0,DSPERRF                                        0287 00714000
*       ELSE                                                       0288 00715000
*         REG0=ADDR(DSPF);          /* POINT TO STD DSP FMT          */ 00716000
         B     @RC00286                                            0288 00717000
@RF00286 LA    REG0,DSPF                                           0288 00718000
*     END;                                                         0289 00719000
*   GOTO FORMAT;                                                   0290 00720000
         B     FORMAT                                              0290 00721000
*SRBRTN:                                                           0291 00722000
*   IF SYSM='0'B&DSP='0'B THEN                                     0291 00723000
SRBRTN   TM    SYSM(AEDITCBR),B'01010000'                          0291 00724000
         BZ    @RT00291                                            0291 00725000
*     GO TO SETRET8;                                               0292 00726000
*                                                                  0292 00727000
*   /*****************************************************************/ 00728000
*   /*                                                               */ 00729000
*   /* IF RECORD CONTAINS ERROR INDICATOR, BRANCH TO DUMP RECORD IN  */ 00730000
*   /* HEX FORMAT                                                    */ 00731000
*   /*                                                               */ 00732000
*   /*****************************************************************/ 00733000
*                                                                  0293 00734000
*   IF DATA(1:2)='EEEE'X THEN                                      0293 00735000
@RF00291 L     @12,DATAPTR(,PREG)                                  0293 00736000
         CLC   DATA(2,@12),@CB00606                                0293 00737000
         BE    @RT00293                                            0293 00738000
*     GO TO CALLHEX;                                               0294 00739000
*   IF SRBSRB=NOTAPP THEN                                          0295 00740000
         CLC   SRBSRB(4,@12),@CC00341                              0295 00741000
         BNE   @RF00295                                            0295 00742000
*     DO;                                                          0296 00743000
*       LABPT=ADDR(SRBSLAB);        /* POINT TO GLOBAL SRB FMT       */ 00744000
         L     @12,ABDPLPTR(,PREG)                                 0297 00745000
         LA    @06,SRBSLAB                                         0297 00746000
         ST    @06,LABPT(,@12)                                     0297 00747000
*       REG0=ADDR(SRBSUPF);         /* POINT TO FMT FOR SUSPENDED SRB*/ 00748000
         LA    REG0,SRBSUPF                                        0298 00749000
*       GOTO FORMAT;                                               0299 00750000
         B     FORMAT                                              0299 00751000
*     END;                                                         0300 00752000
*   IF SRBTYPE='G' THEN                                            0301 00753000
@RF00295 L     @12,DATAPTR(,PREG)                                  0301 00754000
         CLI   SRBTYPE(@12),C'G'                                   0301 00755000
         BNE   @RF00301                                            0301 00756000
*     LABPT=ADDR(GLOBLAB);          /* POINT TO GLOBAL SRB FMT       */ 00757000
         L     @12,ABDPLPTR(,PREG)                                 0302 00758000
         LA    @06,GLOBLAB                                         0302 00759000
         ST    @06,LABPT(,@12)                                     0302 00760000
*   ELSE                                                           0303 00761000
*     LABPT=ADDR(LOCLAB);           /* POINT TO LOCAL SRB FMT        */ 00762000
         B     @RC00301                                            0303 00763000
@RF00301 L     @12,ABDPLPTR(,PREG)                                 0303 00764000
         LA    @06,LOCLAB                                          0303 00765000
         ST    @06,LABPT(,@12)                                     0303 00766000
*   IF SRBR15=ASTERR THEN           /* ERROR FORMAT          @YM01892*/ 00767000
@RC00301 L     @12,DATAPTR(,PREG)                                  0304 00768000
         CLC   SRBR15(4,@12),@CC00339                              0304 00769000
         BNE   @RF00304                                            0304 00770000
*     REG0=ADDR(SRBERRF);           /* YES                   @YM01892*/ 00771000
         LA    REG0,SRBERRF                                        0305 00772000
*   ELSE                                                           0306 00773000
*     REG0=ADDR(SRBF);              /* NORMAL                @YM01892*/ 00774000
         B     @RC00304                                            0306 00775000
@RF00304 LA    REG0,SRBF                                           0306 00776000
*   GOTO FORMAT;                                                   0307 00777000
         B     FORMAT                                              0307 00778000
*                                                                  0308 00779000
*   /*****************************************************************/ 00780000
*   /*                                                               */ 00781000
*   /* TEST FOR FORMATING ALL SYSM RECORDS OR ALL SVC RECORDS        */ 00782000
*   /*                                                               */ 00783000
*   /*****************************************************************/ 00784000
*                                                                  0308 00785000
*SVCRTN:                                                           0308 00786000
*   IF SYSM='1'B|ALLV='1'B THEN                                    0308 00787000
SVCRTN   TM    SYSM(AEDITCBR),B'00010000'                          0308 00788000
         BO    @RT00308                                            0308 00789000
         TM    ALLV(AEDITCBR),B'10000000'                          0308 00790000
         BNO   @RF00308                                            0308 00791000
@RT00308 DS    0H                                                  0309 00792000
*TSTSVCER:                                                         0309 00793000
*     DO;                           /* IF SO, TEST FOR ERROR RECORD  */ 00794000
*                                                                  0309 00795000
TSTSVCER DS    0H                                                  0310 00796000
*       /*************************************************************/ 00797000
*       /*                                                           */ 00798000
*       /* TEST FOR ERROR INDICATOR, IN WHICH CASE DUMP RECORD IF HEX*/ 00799000
*       /* FORMAT                                                    */ 00800000
*       /*                                                           */ 00801000
*       /*************************************************************/ 00802000
*                                                                  0310 00803000
*       IF DATA(1:2)='EEEE'X THEN                                  0310 00804000
         L     @12,DATAPTR(,PREG)                                  0310 00805000
         CLC   DATA(2,@12),@CB00606                                0310 00806000
         BE    @RT00310                                            0310 00807000
*         GO TO CALLHEX;                                           0311 00808000
*       ELSE                                                       0312 00809000
*         GO TO SVCSELPT;           /* NOT ERROR RECORD - GO FORMAT  */ 00810000
         B     SVCSELPT                                            0312 00811000
*     END TSTSVCER;                                                0313 00812000
*                                                                  0313 00813000
*   /*****************************************************************/ 00814000
*   /*                                                               */ 00815000
*   /* TEST FOR SELECTIVE PRINTING OF SVC RECORDS, IF NOT, SET RETURN*/ 00816000
*   /* CODE 8 SO THAT RECORD IS NOT PRINTED                          */ 00817000
*   /*                                                               */ 00818000
*   /*****************************************************************/ 00819000
*                                                                  0314 00820000
*   IF SELV='0'B THEN                                              0314 00821000
@RF00308 TM    SELV(AEDITCBR),B'01000000'                          0314 00822000
         BZ    @RT00314                                            0314 00823000
*     GO TO SETRET8;                /* BRANCH TO EXIT WITH CODE 8    */ 00824000
*                                                                  0315 00825000
*   /*****************************************************************/ 00826000
*   /*                                                               */ 00827000
*   /* VERIFY THAT RECORD IS NOT ERROR RECORD BEFORE ENTERING        */ 00828000
*   /* SELECTION PROCESS                                             */ 00829000
*   /*                                                               */ 00830000
*   /*****************************************************************/ 00831000
*                                                                  0316 00832000
*   IF DATA(1:2)='EEEE'X THEN                                      0316 00833000
         L     @12,DATAPTR(,PREG)                                  0316 00834000
         CLC   DATA(2,@12),@CB00606                                0316 00835000
         BE    @RT00316                                            0316 00836000
*     GO TO CALLHEX;                /* DUMP ERROR RECORD IN HEX -  0317 00837000
*                                      CAN-T RELIE ON SVC NUMBER     */ 00838000
*                                                                  0318 00839000
*   /*****************************************************************/ 00840000
*   /*                                                               */ 00841000
*   /* SVC SELECTION SUBROUTINE                                      */ 00842000
*   /*                                                               */ 00843000
*   /*****************************************************************/ 00844000
*                                                                  0318 00845000
*   RFY                                                            0318 00846000
*     N RSTD;                       /* N IS REG 4                    */ 00847000
*   N=255-SVCCODE;                  /* SVCNUMB BASE ON DATA POINTER     00848000
*                                      SO THAT IT IS INTERRUPT CODE     00849000
*                                      OF OLD PSW                    */ 00850000
*                                                                  0319 00851000
         LA    N,255                                               0319 00852000
         ICM   @12,12,SVCCODE(@12)                                 0319 00853000
         SRA   @12,16                                              0319 00854000
         SLR   N,@12                                               0319 00855000
*   /*****************************************************************/ 00856000
*   /*                                                               */ 00857000
*   /* LOOP TO COMPUTE 2 EXP 255-SVCNUMB, WHICH GIVES MASK TO AND    */ 00858000
*   /* WITH SVC SELECTIVITY INDICATORS                               */ 00859000
*   /*                                                               */ 00860000
*   /*****************************************************************/ 00861000
*                                                                  0320 00862000
*   DO I=8 TO 1 BY-1;               /* LOOP FOR RIGHT TO LEFT IN 8 0320 00863000
*                                      WORD AREA REQUIRED TO HOLD  0320 00864000
*                                      RESULT                        */ 00865000
         LA    I,8                                                 0320 00866000
@DL00320 DS    0H                                                  0321 00867000
*     IF N=<31&N=>0 THEN            /* TEST FOR N IN WHICH SHIFT CAN    00868000
*                                      HANDLE POWER                  */ 00869000
         C     N,@CF00036                                          0321 00870000
         BH    @RF00321                                            0321 00871000
         LTR   N,N                                                 0321 00872000
         BM    @RF00321                                            0321 00873000
*       DO;                         /* IN THIS CASE,                 */ 00874000
*         REG3=1;                   /* START WITH 2 EXP 0            */ 00875000
         LA    REG3,1                                              0323 00876000
*         GEN(SLL  REG3,0(N));      /* COMPUTE 2 EXP N               */ 00877000
         SLL  REG3,0(N)                                                 00878000
*       END;                                                       0325 00879000
*     ELSE                                                         0326 00880000
*       REG3=0;                     /* OTHERWISE CLEAR WORD IN RESULT*/ 00881000
         B     @RC00321                                            0326 00882000
@RF00321 SLR   REG3,REG3                                           0326 00883000
*     TWOEXPN(I)=REG3;              /* STORE WORD OF RESULT          */ 00884000
@RC00321 LR    @12,I                                               0327 00885000
         SLA   @12,2                                               0327 00886000
         ST    REG3,TWOEXPN-4(@12)                                 0327 00887000
*     N=N-32;                       /* REDUCE EXPONENT BY 1 WORD     */ 00888000
         SL    N,@CF00092                                          0328 00889000
*   END;                            /* END 2 EXP N COMPUTATION       */ 00890000
         BCTR  I,0                                                 0329 00891000
         LTR   I,I                                                 0329 00892000
         BP    @DL00320                                            0329 00893000
*   RFY                                                            0330 00894000
*     N UNRSTD;                                                    0330 00895000
*   SVCIND=SVCIND&SVCNUMBR;         /* AND CURRENT SVC MASK WITH   0331 00896000
*                                      SELECTION STRING              */ 00897000
*                                                                  0331 00898000
         NC    SVCIND(32),SVCNUMBR(AEDITCBR)                       0331 00899000
*   /*****************************************************************/ 00900000
*   /*                                                               */ 00901000
*   /* LOOP THROUGH WORDS OF RESULT - RESULT ZERO MEANS CURRENT      */ 00902000
*   /* RECORD NOT TO BE FORMATED, ONE BIT WILL ON IF RECORD IS TO BE */ 00903000
*   /* PRINTED                                                       */ 00904000
*   /*                                                               */ 00905000
*   /*****************************************************************/ 00906000
*                                                                  0332 00907000
*   DO I=8 TO 1 BY-1;                                              0332 00908000
         LA    I,8                                                 0332 00909000
@DL00332 DS    0H                                                  0333 00910000
*     IF TWOEXPN(I)¬=0 THEN         /* TEST WORD FOR NOT ZERO        */ 00911000
         LR    @12,I                                               0333 00912000
         SLA   @12,2                                               0333 00913000
         L     @12,TWOEXPN-4(@12)                                  0333 00914000
         LTR   @12,@12                                             0333 00915000
         BNZ   @RT00333                                            0333 00916000
*       GO TO SVCSELPT;             /* FOUND BIT ON GO SELECT PATTERN   00917000
*                                      FOR FORMATING RECORD          */ 00918000
*   END;                                                           0335 00919000
*                                                                  0335 00920000
         BCTR  I,0                                                 0335 00921000
         LTR   I,I                                                 0335 00922000
         BP    @DL00332                                            0335 00923000
*   /*****************************************************************/ 00924000
*   /*                                                               */ 00925000
*   /* FALL OUT MEANS SVC NOT TO BE PRINTED - SET CODE 8 AND RETURN  */ 00926000
*   /* TO AMDPRAPP                                                   */ 00927000
*   /*                                                               */ 00928000
*   /*****************************************************************/ 00929000
*                                                                  0336 00930000
*   GO TO SETRET8;                                                 0336 00931000
         B     SETRET8                                             0336 00932000
*SVCSELPT:                                                         0337 00933000
*   REG0=ADDR(SVCF);                                               0337 00934000
SVCSELPT LA    REG0,SVCF                                           0337 00935000
*   GO TO FORMAT;                   /* GO FORMAT RECORD              */ 00936000
         B     FORMAT                                              0338 00937000
*                                                                  0339 00938000
*   /*****************************************************************/ 00939000
*   /*                                                               */ 00940000
*   /* TEST FOR NOT FORMATING ALL SYSM RECORDS AND NOT EXTERNAL INT  */ 00941000
*   /* RECORDS, IN WHICH CASE SET RETURN CODE 8 SO THE RECORD IS NOT */ 00942000
*   /* PRINTED                                                       */ 00943000
*   /*                                                               */ 00944000
*   /*****************************************************************/ 00945000
*                                                                  0339 00946000
*EXTRTN:                                                           0339 00947000
*   IF SYSM='0'B&EXT='0'B THEN                                     0339 00948000
EXTRTN   TM    SYSM(AEDITCBR),B'10010000'                          0339 00949000
         BZ    @RT00339                                            0339 00950000
*     GO TO SETRET8;                                               0340 00951000
*                                                                  0340 00952000
*   /*****************************************************************/ 00953000
*   /*                                                               */ 00954000
*   /* TEST FOR ERROR RECORD                                         */ 00955000
*   /*                                                               */ 00956000
*   /*****************************************************************/ 00957000
*                                                                  0341 00958000
*TSTEXTER:                                                         0341 00959000
*   IF DATA(1:2)='EEEE'X THEN                                      0341 00960000
@RF00339 DS    0H                                                  0341 00961000
TSTEXTER L     @12,DATAPTR(,PREG)                                  0341 00962000
         CLC   DATA(2,@12),@CB00606                                0341 00963000
         BE    @RT00341                                            0341 00964000
*     GO TO CALLHEX;                /* GO DUMP RECORD IN HEX         */ 00965000
*   IF EXTTCB=NOTAPP THEN                                          0343 00966000
         CLC   EXTTCB(4,@12),@CC00341                              0343 00967000
         BNE   @RF00343                                            0343 00968000
*     REG0=ADDR(EXTERRF);           /* EBCIDIC TCB FMT               */ 00969000
         LA    REG0,EXTERRF                                        0344 00970000
*   ELSE                                                           0345 00971000
*     REG0=ADDR(EXTSTDF);           /* STND EXT FMT                  */ 00972000
         B     @RC00343                                            0345 00973000
@RF00343 LA    REG0,EXTSTDF                                        0345 00974000
*   DATAPT=DATAPTR;                                                0346 00975000
@RC00343 L     @12,ABDPLPTR(,PREG)                                 0346 00976000
         L     @06,DATAPTR(,PREG)                                  0346 00977000
         ST    @06,DATAPT(,@12)                                    0346 00978000
*   REG1=ABDPLPTR;                  /* POINT TO EXIT LIST            */ 00979000
         LR    REG1,@12                                            0347 00980000
*   CALL AMDPRFMT;                  /* CALL REENTRANT FMT RTN        */ 00981000
         L     @15,ADPLFRMT(,@12)                                  0348 00982000
         BALR  @14,@15                                             0348 00983000
*   IF EXTINT=CCINT THEN                                           0349 00984000
         L     @12,DATAPTR(,PREG)                                  0349 00985000
         CLC   EXTINT(2,@12),@CB00345                              0349 00986000
         BNE   @RF00349                                            0349 00987000
*     DO;                           /* CLK COMPARATOR                */ 00988000
*       IF EXTVAR=ASTERR|EXTVAR=UNAVAL/* EBCIDIC DATA                */ 00989000
*         THEN                                                     0351 00990000
         CLC   EXTVAR(4,@12),@CC00339                              0351 00991000
         BE    @RT00351                                            0351 00992000
         CLC   EXTVAR(4,@12),@CC00343                              0351 00993000
         BNE   @RF00351                                            0351 00994000
@RT00351 DS    0H                                                  0352 00995000
*         REG0=ADDR(EXTCCERF);      /* EBCIDIC EXT FMT               */ 00996000
         LA    REG0,EXTCCERF                                       0352 00997000
*       ELSE                                                       0353 00998000
*         REG0=ADDR(EXTCCF);        /* STD EXT FMT                   */ 00999000
         B     @RC00351                                            0353 01000000
@RF00351 LA    REG0,EXTCCF                                         0353 01001000
*EXTEXIT:                                                          0354 01002000
*       DATAPT=ADDR(EXTVAR);        /* UPDATE DATA PTR               */ 01003000
@RC00351 DS    0H                                                  0354 01004000
EXTEXIT  L     @12,ABDPLPTR(,PREG)                                 0354 01005000
         L     @06,DATAPTR(,PREG)                                  0354 01006000
         LA    @06,EXTVAR(,@06)                                    0354 01007000
         ST    @06,DATAPT(,@12)                                    0354 01008000
*       REG1=ABDPLPTR;              /* POINT TO EXIT LIST            */ 01009000
         LR    REG1,@12                                            0355 01010000
*       CALL AMDPRFMT;              /* CALL FORMATING RTN            */ 01011000
         L     @15,ADPLFRMT(,@12)                                  0356 01012000
         BALR  @14,@15                                             0356 01013000
*       GOTO EXITRTN;               /* EXIT                          */ 01014000
         B     EXITRTN                                             0357 01015000
*     END;                                                         0358 01016000
*   IF EXTINT(1:2)=SIGPINT          /* SIGNAL PROCESSOR INTERRUPT    */ 01017000
*     THEN                                                         0359 01018000
@RF00349 L     @12,DATAPTR(,PREG)                                  0359 01019000
         CLI   EXTINT(@12),X'12'                                   0359 01020000
         BNE   @RF00359                                            0359 01021000
*     DO;                                                          0360 01022000
*       IF EXTVAR=ASTERR THEN                                      0361 01023000
         CLC   EXTVAR(4,@12),@CC00339                              0361 01024000
         BNE   @RF00361                                            0361 01025000
*         REG0=ADDR(EXTSGPEF);                                     0362 01026000
         LA    REG0,EXTSGPEF                                       0362 01027000
*       ELSE                                                       0363 01028000
*         REG0=ADDR(EXTSGPF);       /* STND EXT VAR FLD FMT          */ 01029000
         B     @RC00361                                            0363 01030000
@RF00361 LA    REG0,EXTSGPF                                        0363 01031000
*       GOTO EXTEXIT;               /* GOTO FORMAT                   */ 01032000
         B     EXTEXIT                                             0364 01033000
*     END;                                                         0365 01034000
*   GO TO EXITRTN;                  /* GO REQUEST LINE BE PRINTED    */ 01035000
         B     EXITRTN                                             0366 01036000
*                                                                  0367 01037000
*/* TEST FOR ALL SYSM RECORDS OR ALL PI RECORDS BEING PRINTED        */ 01038000
*                                                                  0367 01039000
*PIRTN:                                                            0367 01040000
*   IF SYSM='1'B|ALLP='1'B THEN                                    0367 01041000
PIRTN    TM    SYSM(AEDITCBR),B'00010000'                          0367 01042000
         BO    @RT00367                                            0367 01043000
         TM    ALLP(AEDITCBR),B'10000000'                          0367 01044000
         BNO   @RF00367                                            0367 01045000
@RT00367 DS    0H                                                  0368 01046000
*TSTPIER:                                                          0368 01047000
*     DO;                           /* IN THIS CASE, TEST FOR ERROR     01048000
*                                      RECORD                        */ 01049000
*                                                                  0368 01050000
TSTPIER  DS    0H                                                  0369 01051000
*       /*************************************************************/ 01052000
*       /*                                                           */ 01053000
*       /* TEST FOR ERROR RECORD INDICATOR                           */ 01054000
*       /*                                                           */ 01055000
*       /*************************************************************/ 01056000
*                                                                  0369 01057000
*       IF DATA(1:2)='EEEE'X THEN                                  0369 01058000
         L     @12,DATAPTR(,PREG)                                  0369 01059000
         CLC   DATA(2,@12),@CB00606                                0369 01060000
         BE    @RT00369                                            0369 01061000
*         GO TO CALLHEX;            /* DUMP ERROR RECORD IN HEX      */ 01062000
*       ELSE                                                       0371 01063000
*         GO TO SELPIPAT;           /* IF RECORD IS CLEAN GO SELECT     01064000
*                                      APPROPRIATE FORMAT PATTERN    */ 01065000
         B     SELPIPAT                                            0371 01066000
*     END TSTPIER;                                                 0372 01067000
*                                                                  0372 01068000
*   /*****************************************************************/ 01069000
*   /*                                                               */ 01070000
*   /* TEST FOR NOT FORMATING PI EVENTS                              */ 01071000
*   /*                                                               */ 01072000
*   /*****************************************************************/ 01073000
*                                                                  0373 01074000
*   IF SELP='0'B THEN                                              0373 01075000
@RF00367 TM    SELP(AEDITCBR),B'01000000'                          0373 01076000
         BZ    @RT00373                                            0373 01077000
*     GO TO SETRET8;                /* IF SO, GO SET RETURN CODE 8 SO   01078000
*                                      THAT RECORD IS NOT PRINTED    */ 01079000
*                                                                  0374 01080000
*   /*****************************************************************/ 01081000
*   /*                                                               */ 01082000
*   /* BEFORE ENTERING SELECTION PROCESS, VERIFY RECORD IS CLEAN     */ 01083000
*   /*                                                               */ 01084000
*   /*****************************************************************/ 01085000
*                                                                  0375 01086000
*   IF DATA(1:2)='EEEE'X THEN                                      0375 01087000
         L     @12,DATAPTR(,PREG)                                  0375 01088000
         CLC   DATA(2,@12),@CB00606                                0375 01089000
         BE    @RT00375                                            0375 01090000
*     GO TO CALLHEX;                /* IF ERROR RECORD, GO DUMP IT IN   01091000
*                                      HEX FORMAT                    */ 01092000
*                                                                  0376 01093000
*   /*****************************************************************/ 01094000
*   /*                                                               */ 01095000
*   /* DETERMINE IF PICODES 17, 18, OR 19 HAVE BEEN SELECTED         */ 01096000
*   /*                                                               */ 01097000
*   /*****************************************************************/ 01098000
*                                                                  0377 01099000
*   RFY                                                            0377 01100000
*     N RSTD;                                                      0377 01101000
*   IF INTCODE=17 THEN              /* 17 INTERRUPT CODE             */ 01102000
         CLC   INTCODE(2,@12),@CH00658                             0378 01103000
         BNE   @RF00378                                            0378 01104000
*     IF PICODEA='80'X THEN         /* FORMATTING THIS INTERRUPT   0379 01105000
*                                      CODE?                         */ 01106000
         CLI   PICODEA(AEDITCBR),X'80'                             0379 01107000
         BE    @RT00379                                            0379 01108000
*       GOTO SELPIPAT;              /* GO TO FORMAT RECORD           */ 01109000
*     ELSE                                                         0381 01110000
*       GOTO SETRET8;               /* SKIP RECORD                   */ 01111000
         B     SETRET8                                             0381 01112000
*   IF INTCODE=18 THEN              /* 18 INTERRUPT CODE             */ 01113000
@RF00378 L     @12,DATAPTR(,PREG)                                  0382 01114000
         CLC   INTCODE(2,@12),@CH00323                             0382 01115000
         BNE   @RF00382                                            0382 01116000
*     IF PICODEA='40'X THEN         /* FORMATTING THIS INTERRUPT   0383 01117000
*                                      CODE?                         */ 01118000
         CLI   PICODEA(AEDITCBR),X'40'                             0383 01119000
         BE    @RT00383                                            0383 01120000
*       GOTO SELPIPAT;              /* GO TO FORMAT RECORD           */ 01121000
*     ELSE                                                         0385 01122000
*       GOTO SETRET8;               /* SKIP RECORD                   */ 01123000
         B     SETRET8                                             0385 01124000
*   IF INTCODE=19 THEN              /* 19 INTERRUPT CODE             */ 01125000
@RF00382 L     @12,DATAPTR(,PREG)                                  0386 01126000
         CLC   INTCODE(2,@12),@CH00595                             0386 01127000
         BNE   @RF00386                                            0386 01128000
*     IF PICODEA='20'X THEN         /* FORMATTING THIS INTERRUPT   0387 01129000
*                                      CODE?                         */ 01130000
         CLI   PICODEA(AEDITCBR),X'20'                             0387 01131000
         BE    @RT00387                                            0387 01132000
*       GOTO SELPIPAT;              /* GO TO FORMAT RECORD           */ 01133000
*     ELSE                                                         0389 01134000
*       GOTO SETRET8;               /* SKIP RECORD                   */ 01135000
*                                                                  0389 01136000
         B     SETRET8                                             0389 01137000
*   /*****************************************************************/ 01138000
*   /*                                                               */ 01139000
*   /* COMPUTE 2 EXP (16 - INT CODE) TO USE AS MASK WITH PI          */ 01140000
*   /* SELECTIVITY FLAGS                                             */ 01141000
*   /*                                                               */ 01142000
*   /*****************************************************************/ 01143000
*                                                                  0390 01144000
*COMPPMSK:                                                         0390 01145000
*   REG3=16-INTCODE;                /* GET PI INT CODE               */ 01146000
@RF00386 DS    0H                                                  0390 01147000
COMPPMSK L     @12,DATAPTR(,PREG)                                  0390 01148000
         LA    REG3,16                                             0390 01149000
         SLR   @06,@06                                             0390 01150000
         ICM   @06,3,INTCODE(@12)                                  0390 01151000
         SLR   REG3,@06                                            0390 01152000
*   N=1;                            /* GET CONSTANT TO RAISE TO POWER*/ 01153000
         LA    N,1                                                 0391 01154000
*   GEN(SLL  N,0(REG3));            /* COMPUTE 2 EXP (16 - INT CODE) */ 01155000
         SLL  N,0(REG3)                                                 01156000
*   SHFTIND=N;                      /* STORE RESULT                  */ 01157000
         ST    N,SHFTIND                                           0393 01158000
*   RFY                                                            0394 01159000
*     N UNRSTD;                                                    0394 01160000
*                                                                  0394 01161000
*   /*****************************************************************/ 01162000
*   /*                                                               */ 01163000
*   /* BRANCH HERE TO MAKE PI SELECTION - AND SELECTION MASK WITH PI */ 01164000
*   /* STRING IN AMDPRTAB                                            */ 01165000
*   /*                                                               */ 01166000
*   /*****************************************************************/ 01167000
*                                                                  0395 01168000
*TESTSTNG:                                                         0395 01169000
*   PIIND=PIIND&PICODES;                                           0395 01170000
TESTSTNG NC    PIIND(2),PICODES(AEDITCBR)                          0395 01171000
*   IF PIIND='0000'X THEN           /* IF RESULT IS ZERO,            */ 01172000
         CLC   PIIND(2),@CB00214                                   0396 01173000
         BE    @RT00396                                            0396 01174000
*     GO TO SETRET8;                /* THIS RECORD IS NOT TO BE    0397 01175000
*                                      FORMATED, GO SET CODE 8 AND 0397 01176000
*                                      RETURN TO AMDPRAPP            */ 01177000
*SELPIPAT:                                                         0398 01178000
*   IF PITCB=NOTAPP THEN            /* N/A IN TCB ?                  */ 01179000
SELPIPAT L     @12,DATAPTR(,PREG)                                  0398 01180000
         CLC   PITCB(4,@12),@CC00341                               0398 01181000
         BNE   @RF00398                                            0398 01182000
*     REG0=ADDR(PGMERRF);           /* USE THIS FORMAT               */ 01183000
         LA    REG0,PGMERRF                                        0399 01184000
*   ELSE                                                           0400 01185000
*     REG0=ADDR(PGMF);              /* POINT TO PGM SYS FMTPTRN      */ 01186000
         B     @RC00398                                            0400 01187000
@RF00398 LA    REG0,PGMF                                           0400 01188000
*   GO TO FORMAT;                   /* RTN CALLS FORMAT RTN          */ 01189000
         B     FORMAT                                              0401 01190000
*RNIORTN:                                                          0402 01191000
*   IF SYSM='0'B&                   /* ALL EVENTS FORMATTED?         */ 01192000
*       RNIO='0'B THEN              /* RNIO EVENTS FORMATTED?        */ 01193000
RNIORTN  TM    SYSM(AEDITCBR),B'00011000'                          0402 01194000
         BZ    @RT00402                                            0402 01195000
*     GOTO SETRET8;                 /* NO, THEN SKIP RECORD          */ 01196000
*                                                                  0403 01197000
*   /*****************************************************************/ 01198000
*   /*                                                               */ 01199000
*   /* ERROR RECORD ? BRANCH TO DUMP IN HEX                          */ 01200000
*   /*                                                               */ 01201000
*   /*****************************************************************/ 01202000
*                                                                  0404 01203000
*   IF DATA(1:2)='EEEE'X THEN                                      0404 01204000
@RF00402 L     @12,DATAPTR(,PREG)                                  0404 01205000
         CLC   DATA(2,@12),@CB00606                                0404 01206000
         BE    @RT00404                                            0404 01207000
*     GOTO CALLHEX;                                                0405 01208000
*   IF RNIOBTU(1:4)=ASTERR          /* ERROR IN BTU FLD              */ 01209000
*     THEN                                                         0406 01210000
         CLC   RNIOBTU(4,@12),@CC00339                             0406 01211000
         BNE   @RF00406                                            0406 01212000
*     DO;                                                          0407 01213000
*       IF RNIOASCB=ASTERR          /* ASCB ERROR                    */ 01214000
*         THEN                                                     0408 01215000
         CLC   RNIOASCB(4,@12),@CC00339                            0408 01216000
         BNE   @RF00408                                            0408 01217000
*         REG0=ADDR(RNIOERR2);                                     0409 01218000
         LA    REG0,RNIOERR2                                       0409 01219000
*       ELSE                                                       0410 01220000
*         REG0=ADDR(RNIOERRF);      /* POINT TO ERR FMT              */ 01221000
         B     @RC00408                                            0410 01222000
@RF00408 LA    REG0,RNIOERRF                                       0410 01223000
*     END;                                                         0411 01224000
*   ELSE                                                           0412 01225000
*     DO;                                                          0412 01226000
         B     @RC00406                                            0412 01227000
@RF00406 DS    0H                                                  0413 01228000
*       IF RNIOASCB=ASTERR THEN     /* ASCB ERROR            @ZM30923*/ 01229000
         L     @12,DATAPTR(,PREG)                                  0413 01230000
         CLC   RNIOASCB(4,@12),@CC00339                            0413 01231000
         BNE   @RF00413                                            0413 01232000
*         IF RNIOR0=0 THEN          /*                       @Z40KI3O*/ 01233000
         ICM   @06,15,RNIOR0(@12)                                  0414 01234000
         BNZ   @RF00414                                            0414 01235000
*           REG0=ADDR(BTU00E);      /*                       @Z40KI3O*/ 01236000
         LA    REG0,BTU00E                                         0415 01237000
*         ELSE                                                     0416 01238000
*           IF RNIOR0>=20 THEN      /*                       @Z40KI3O*/ 01239000
         B     @RC00414                                            0416 01240000
@RF00414 L     @12,DATAPTR(,PREG)                                  0416 01241000
         CLC   RNIOR0(4,@12),@CF00130                              0416 01242000
         BL    @RF00416                                            0416 01243000
*             REG0=ADDR(BTU20E);    /*                       @Y30AI3P*/ 01244000
         LA    REG0,BTU20E                                         0417 01245000
*           ELSE                                                   0418 01246000
*             REG0=BTUEPTR(RNIOR0); /*                       @Z40KI3O*/ 01247000
         B     @RC00416                                            0418 01248000
@RF00416 L     @12,DATAPTR(,PREG)                                  0418 01249000
         ICM   @06,15,RNIOR0(@12)                                  0418 01250000
         SLL   @06,2                                               0418 01251000
         L     REG0,BTUEPTR-4(@06)                                 0418 01252000
*       ELSE                                                       0419 01253000
*         IF RNIOR0=0 THEN          /*                       @Z40KI3O*/ 01254000
         B     @RC00413                                            0419 01255000
@RF00413 L     @12,DATAPTR(,PREG)                                  0419 01256000
         ICM   @06,15,RNIOR0(@12)                                  0419 01257000
         BNZ   @RF00419                                            0419 01258000
*           REG0=ADDR(BTU00);       /*                       @Z40KI3O*/ 01259000
         LA    REG0,BTU00                                          0420 01260000
*         ELSE                                                     0421 01261000
*           IF RNIOR0>=20 THEN      /*                       @Z40KI3O*/ 01262000
         B     @RC00419                                            0421 01263000
@RF00419 L     @12,DATAPTR(,PREG)                                  0421 01264000
         CLC   RNIOR0(4,@12),@CF00130                              0421 01265000
         BL    @RF00421                                            0421 01266000
*             REG0=ADDR(BTU20);     /*                       @Y30AI3P*/ 01267000
         LA    REG0,BTU20                                          0422 01268000
*           ELSE                                                   0423 01269000
*             REG0=BTUPTR(RNIOR0);  /*                       @Z40KI3O*/ 01270000
         B     @RC00421                                            0423 01271000
@RF00421 L     @12,DATAPTR(,PREG)                                  0423 01272000
         ICM   @06,15,RNIOR0(@12)                                  0423 01273000
         SLL   @06,2                                               0423 01274000
         L     REG0,BTUPTR-4(@06)                                  0423 01275000
*     END;                                                         0424 01276000
@RC00421 DS    0H                                                  0424 01277000
@RC00419 DS    0H                                                  0424 01278000
@RC00413 DS    0H                                                  0425 01279000
*   IF EID=IMDMTP2                  /* EVENT BTU OUT?        @YM01487*/ 01280000
*     THEN                                                         0425 01281000
@RC00406 L     @12,EIDPTR(,PREG)                                   0425 01282000
         CLC   EID(2,@12),@CB00232                                 0425 01283000
         BNE   @RF00425                                            0425 01284000
*     LABPT=ADDR(OUTLAB);           /* FORMAT WITH OUT LABEL         */ 01285000
         L     @12,ABDPLPTR(,PREG)                                 0426 01286000
         LA    @06,OUTLAB                                          0426 01287000
         ST    @06,LABPT(,@12)                                     0426 01288000
*   ELSE                                                           0427 01289000
*     LABPT=ADDR(INLAB);            /* FORMAT WITH IN LABEL          */ 01290000
         B     @RC00425                                            0427 01291000
@RF00425 L     @12,ABDPLPTR(,PREG)                                 0427 01292000
         LA    @06,INLAB                                           0427 01293000
         ST    @06,LABPT(,@12)                                     0427 01294000
*   GOTO FORMAT;                    /* RTN WHICH FORMATS RECORD      */ 01295000
         B     FORMAT                                              0428 01296000
*SRMRTN:                                                           0429 01297000
*   IF SYSM='0'B&                   /* SELECT ALL EVENTS ?           */ 01298000
*       SRM='0'B THEN               /* SELECT SRM EVENTS ?           */ 01299000
SRMRTN   TM    SYSM(AEDITCBR),B'00010100'                          0429 01300000
         BZ    @RT00429                                            0429 01301000
*     GOTO SETRET8;                 /* NO, THEN SKIP RECORD          */ 01302000
*                                                                  0430 01303000
*   /*****************************************************************/ 01304000
*   /*                                                               */ 01305000
*   /* IF RECORD CONTAINS ERROR INDICATOR, BRANCH TO DUMP RECORD IN  */ 01306000
*   /* HEX FORMAT                                                    */ 01307000
*   /*                                                               */ 01308000
*   /*****************************************************************/ 01309000
*                                                                  0431 01310000
*   IF DATA(1:2)='EEEE'X THEN                                      0431 01311000
@RF00429 L     @12,DATAPTR(,PREG)                                  0431 01312000
         CLC   DATA(2,@12),@CB00606                                0431 01313000
         BE    @RT00431                                            0431 01314000
*     GO TO CALLHEX;                                               0432 01315000
*   IF SRMASCB=ASTERR               /* ASCB CONTAINS ASTERISKS       */ 01316000
*     THEN                                                         0433 01317000
         CLC   SRMASCB(4,@12),@CC00339                             0433 01318000
         BNE   @RF00433                                            0433 01319000
*     REG0=ADDR(SRMERRF);           /* ERROR FMT                     */ 01320000
         LA    REG0,SRMERRF                                        0434 01321000
*   ELSE                                                           0435 01322000
*     REG0=ADDR(SRMF);              /* STND SRM FMT                  */ 01323000
         B     @RC00433                                            0435 01324000
@RF00433 LA    REG0,SRMF                                           0435 01325000
*   GOTO FORMAT;                    /* GO FORMAT RECORD              */ 01326000
         B     FORMAT                                              0436 01327000
*RRRTN:                                                            0437 01328000
*   IF SYSM='0'B&                   /* SELECT ALL EVENTS             */ 01329000
*       RR='0'B THEN                /* SELECT RECOVERY RTN EVENTS    */ 01330000
RRRTN    TM    SYSM(AEDITCBR),B'00010010'                          0437 01331000
         BZ    @RT00437                                            0437 01332000
*     GOTO SETRET8;                 /* NO, THEN SKIP RECORD          */ 01333000
*                                                                  0438 01334000
*   /*****************************************************************/ 01335000
*   /*                                                               */ 01336000
*   /* IF ERROR RECORD, DUMP IN HEX                                  */ 01337000
*   /*                                                               */ 01338000
*   /*****************************************************************/ 01339000
*                                                                  0439 01340000
*   IF DATA(1:2)='EEEE'X THEN                                      0439 01341000
@RF00437 L     @12,DATAPTR(,PREG)                                  0439 01342000
         CLC   DATA(2,@12),@CB00606                                0439 01343000
         BE    @RT00439                                            0439 01344000
*     GOTO CALLHEX;                                                0440 01345000
*   IF EID=IMDMSTAE THEN                                           0441 01346000
         L     @12,EIDPTR(,PREG)                                   0441 01347000
         CLC   EID(2,@12),@CB00226                                 0441 01348000
         BE    @RT00441                                            0441 01349000
*     GO TO STAERTN;                /* TEST FOR STAE                 */ 01350000
*                                                                  0442 01351000
*   /*****************************************************************/ 01352000
*   /*                                                               */ 01353000
*   /* THIS RTN FORMATS FRR EVENTS                                   */ 01354000
*   /*                                                               */ 01355000
*   /*****************************************************************/ 01356000
*                                                                  0443 01357000
*FRRRTN:                                                           0443 01358000
*   IF FRRPSW(1:4)=ASTERR THEN                                     0443 01359000
FRRRTN   L     @12,DATAPTR(,PREG)                                  0443 01360000
         CLC   FRRPSW(4,@12),@CC00339                              0443 01361000
         BNE   @RF00443                                            0443 01362000
*     DO;                           /* ERROR IN RTCA FLDS            */ 01363000
*       REG0=ADDR(FRRERRF);         /* POINT TO ERR EBCIDIC FMT      */ 01364000
         LA    REG0,FRRERRF                                        0445 01365000
*       GOTO FORMAT;                                               0446 01366000
         B     FORMAT                                              0446 01367000
*     END;                                                         0447 01368000
*   IF FRRETRY=NOTAPP               /* RETRY NOT APP                 */ 01369000
*     THEN                                                         0448 01370000
@RF00443 L     @12,DATAPTR(,PREG)                                  0448 01371000
         CLC   FRRETRY(4,@12),@CC00341                             0448 01372000
         BNE   @RF00448                                            0448 01373000
*     REG0=ADDR(FRRNAF);            /* NOT APP RET FMT               */ 01374000
         LA    REG0,FRRNAF                                         0449 01375000
*   ELSE                                                           0450 01376000
*     REG0=ADDR(FRRSTDF);           /* STND FRR FMT                  */ 01377000
         B     @RC00448                                            0450 01378000
@RF00448 LA    REG0,FRRSTDF                                        0450 01379000
*   DATAPT=ADDR(FRRETRY);           /* SET UP DATA PTR               */ 01380000
@RC00448 L     @12,ABDPLPTR(,PREG)                                 0451 01381000
         L     @06,DATAPTR(,PREG)                                  0451 01382000
         LA    @06,FRRETRY(,@06)                                   0451 01383000
         ST    @06,DATAPT(,@12)                                    0451 01384000
*   REG1=ABDPLPTR;                  /* POINT TO EXIT LIST            */ 01385000
         LR    REG1,@12                                            0452 01386000
*   CALL AMDPRFMT;                  /* CALL FORMATTING RTN           */ 01387000
         L     @15,ADPLFRMT(,@12)                                  0453 01388000
         BALR  @14,@15                                             0453 01389000
*   IF FRRASCB=ASTERR               /* ASCB ERROR                    */ 01390000
*     THEN                                                         0454 01391000
         L     @12,DATAPTR(,PREG)                                  0454 01392000
         CLC   FRRASCB(4,@12),@CC00339                             0454 01393000
         BNE   @RF00454                                            0454 01394000
*     REG0=ADDR(FRRERR1);                                          0455 01395000
         LA    REG0,FRRERR1                                        0455 01396000
*   ELSE                                                           0456 01397000
*     REG0=ADDR(FRRF);              /* FORMAT STND PART OF REC       */ 01398000
         B     @RC00454                                            0456 01399000
@RF00454 LA    REG0,FRRF                                           0456 01400000
*   GOTO FORMAT;                                                   0457 01401000
         B     FORMAT                                              0457 01402000
*STAERTN:                                                          0458 01403000
*   IF STAEPSW=UNAVAL               /* RTCA DATA HAS U/A             */ 01404000
*     THEN                                                         0458 01405000
STAERTN  L     @12,DATAPTR(,PREG)                                  0458 01406000
         CLC   STAEPSW(4,@12),@CC00343                             0458 01407000
         BNE   @RF00458                                            0458 01408000
*     DO;                                                          0459 01409000
*       REG0=ADDR(STAR10F);         /* WHEN R1=0 FORMAT              */ 01410000
         LA    REG0,STAR10F                                        0460 01411000
*       GOTO FORMAT;                /* FORMAT RECORD                 */ 01412000
         B     FORMAT                                              0461 01413000
*     END;                                                         0462 01414000
*   IF RTCAPTR>0                    /* COMPLEMENTED RTCA             */ 01415000
*     THEN                                                         0463 01416000
@RF00458 L     @12,DATAPTR(,PREG)                                  0463 01417000
         ICM   @06,15,RTCAPTR(@12)                                 0463 01418000
         BNP   @RF00463                                            0463 01419000
*     DO;                           /* ESTAE TYPE FORMATTING         */ 01420000
*                                                                  0464 01421000
*       /*************************************************************/ 01422000
*       /*                                                           */ 01423000
*       /* FORMAT ESTAE RECORD                                       */ 01424000
*       /*                                                           */ 01425000
*       /*************************************************************/ 01426000
*                                                                  0465 01427000
*       IF STAEPSW(1:4)=ASTERR      /* ERROR IN PSW FLD              */ 01428000
*         THEN                                                     0465 01429000
         CLC   STAEPSW(4,@12),@CC00339                             0465 01430000
         BNE   @RF00465                                            0465 01431000
*         DO;                                                      0466 01432000
*           REG0=ADDR(ESTAERF);     /* ERROR ESTAE FMT               */ 01433000
         LA    REG0,ESTAERF                                        0467 01434000
*           GOTO FORMAT;                                           0468 01435000
         B     FORMAT                                              0468 01436000
*         END;                                                     0469 01437000
*       IF STARTYA=NOTAPP           /* RETRY FLD HAS N/A             */ 01438000
*         THEN                                                     0470 01439000
@RF00465 L     @12,DATAPTR(,PREG)                                  0470 01440000
         CLC   STARTYA(4,@12),@CC00341                             0470 01441000
         BNE   @RF00470                                            0470 01442000
*         REG0=ADDR(ESTANAF);       /* POINT TO N/A FMT ESTAE        */ 01443000
         LA    REG0,ESTANAF                                        0471 01444000
*       ELSE                                                       0472 01445000
*         REG0=ADDR(ESTASTDF);      /* POINT TO STD FMT ESTAE        */ 01446000
         B     @RC00470                                            0472 01447000
@RF00470 LA    REG0,ESTASTDF                                       0472 01448000
*       GOTO FORMAT;                /* FMT NON-ERROR ESTAE FMT       */ 01449000
         B     FORMAT                                              0473 01450000
*     END;                                                         0474 01451000
*   IF STAEPSW(1:4)=ASTERR THEN                                    0475 01452000
@RF00463 L     @12,DATAPTR(,PREG)                                  0475 01453000
         CLC   STAEPSW(4,@12),@CC00339                             0475 01454000
         BNE   @RF00475                                            0475 01455000
*     REG0=ADDR(STAEERF);           /* ERROR STAE FMT                */ 01456000
         LA    REG0,STAEERF                                        0476 01457000
*   ELSE                                                           0477 01458000
*     REG0=ADDR(STAF);              /* REGULAR STAE FMT              */ 01459000
         B     @RC00475                                            0477 01460000
@RF00475 LA    REG0,STAF                                           0477 01461000
*   DATAPT=DATAPTR;                                                0478 01462000
@RC00475 L     @12,ABDPLPTR(,PREG)                                 0478 01463000
         L     @06,DATAPTR(,PREG)                                  0478 01464000
         ST    @06,DATAPT(,@12)                                    0478 01465000
*   REG1=ABDPLPTR;                                                 0479 01466000
         LR    REG1,@12                                            0479 01467000
*   CALL AMDPRFMT;                                                 0480 01468000
         L     @15,ADPLFRMT(,@12)                                  0480 01469000
         BALR  @14,@15                                             0480 01470000
*   IF STARTYA=NOTAPP THEN                                         0481 01471000
         L     @12,DATAPTR(,PREG)                                  0481 01472000
         CLC   STARTYA(4,@12),@CC00341                             0481 01473000
         BNE   @RF00481                                            0481 01474000
*     REG0=ADDR(STANAF);            /* POINT TO N/A FMT STAE         */ 01475000
         LA    REG0,STANAF                                         0482 01476000
*   ELSE                                                           0483 01477000
*     REG0=ADDR(STASTDF);           /* POINT TO STD FMT STAE         */ 01478000
         B     @RC00481                                            0483 01479000
@RF00481 LA    REG0,STASTDF                                        0483 01480000
*   DATAPT=ADDR(STARTYA);                                          0484 01481000
@RC00481 L     @12,ABDPLPTR(,PREG)                                 0484 01482000
         L     @06,DATAPTR(,PREG)                                  0484 01483000
         LA    @06,STARTYA(,@06)                                   0484 01484000
         ST    @06,DATAPT(,@12)                                    0484 01485000
*   REG1=ABDPLPTR;                                                 0485 01486000
         LR    REG1,@12                                            0485 01487000
*   CALL AMDPRFMT;                                                 0486 01488000
         L     @15,ADPLFRMT(,@12)                                  0486 01489000
         BALR  @14,@15                                             0486 01490000
*   GOTO EXITRTN;                                                  0487 01491000
         B     EXITRTN                                             0487 01492000
*   END AMDSYS03                                                   0488 01493000
*                                                                  0488 01494000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */ 01495000
*/*%INCLUDE SYSLIB  (AMDPRTAB)                                       */ 01496000
*/*%INCLUDE SYSLIB  (IHAABDPL)                                       */ 01497000
*/*%INCLUDE SYSLIB  (IMDMEDIT)                                       */ 01498000
*                                                                  0488 01499000
*       ;                                                          0488 01500000
@DATA    DS    0H                                                       01501000
@CH00658 DC    H'17'                                                    01502000
@CH00595 DC    H'19'                                                    01503000
@DATD    DSECT                                                          01504000
         DS    0F                                                       01505000
@SA00001 DS    18F                                                      01506000
@TF00001 DS    F                                                        01507000
AMDSYS03 CSECT                                                          01508000
         DS    0F                                                       01509000
@CF00046 DC    F'1'                                                     01510000
@CF00323 DC    F'18'                                                    01511000
@CH00323 EQU   @CF00323+2                                               01512000
@CF00130 DC    F'20'                                                    01513000
@CF00036 DC    F'31'                                                    01514000
@CF00092 DC    F'32'                                                    01515000
@CF00104 DC    F'50'                                                    01516000
@DATD    DSECT                                                          01517000
         DS    0D                                                       01518000
WKAREA   DS    CL36                                                     01519000
         ORG   WKAREA                                                   01520000
TWOEXPN  DS    8F                                                       01521000
SHFTIND  DS    CL4                                                      01522000
         ORG   SHFTIND                                                  01523000
@NM00004 DS    CL2                                                      01524000
PIIND    DS    CL2                                                      01525000
         ORG   WKAREA+36                                                01526000
AMDSYS03 CSECT                                                          01527000
         DS    0F                                                       01528000
@SIZDATD DC    AL1(0)                                                   01529000
         DC    AL3(@ENDDATD-@DATD)                                      01530000
         DS    0D                                                       01531000
@CC00339 DC    C'****'                                                  01532000
@CC00341 DC    C'N/A '                                                  01533000
@CC00343 DC    C'U/A '                                                  01534000
@CC00611 DC    C'  '                                                    01535000
@CB00210 DC    X'5200'                                                  01536000
@CB00214 DC    X'0000'                                                  01537000
@CB00224 DC    X'5101'                                                  01538000
@CB00226 DC    X'4002'                                                  01539000
@CB00232 DC    X'8200'                                                  01540000
@CB00236 DC    X'0002'                                                  01541000
@CB00239 DC    X'0004'                                                  01542000
@CB00345 DC    X'1004'                                                  01543000
@CB00606 DC    X'EEEE'                                                  01544000
S03PTCH  DC    CL200'S03PTCH'                                           01545000
ROUTSEL  DS    CL8                                                      01546000
         ORG   ROUTSEL+0                                                01547000
RTNEID   DC    X'5201'                                                  01548000
         DS    CL2                                                      01549000
RTNADDR  DC    AL4(UIORTN)                                              01550000
         ORG   ROUTSEL+8                                                01551000
         ORG   ROUTSEL+8                                                01552000
         DC    X'5200'                                                  01553000
         DS    CL2                                                      01554000
         DC    AL4(IORTN)                                               01555000
         ORG   ROUTSEL+16                                               01556000
         ORG   ROUTSEL+16                                               01557000
         DC    X'2100'                                                  01558000
         DS    CL2                                                      01559000
         DC    AL4(IORTN)                                               01560000
         ORG   ROUTSEL+24                                               01561000
         ORG   ROUTSEL+24                                               01562000
         DC    X'5100'                                                  01563000
         DS    CL2                                                      01564000
         DC    AL4(SIORTN)                                              01565000
         ORG   ROUTSEL+32                                               01566000
         ORG   ROUTSEL+32                                               01567000
         DC    X'5101'                                                  01568000
         DS    CL2                                                      01569000
         DC    AL4(IORTN)                                               01570000
         ORG   ROUTSEL+40                                               01571000
         ORG   ROUTSEL+40                                               01572000
         DC    X'0001'                                                  01573000
         DS    CL2                                                      01574000
         DC    AL4(SRBRTN)                                              01575000
         ORG   ROUTSEL+48                                               01576000
         ORG   ROUTSEL+48                                               01577000
         DC    X'0002'                                                  01578000
         DS    CL2                                                      01579000
         DC    AL4(DSPRTN)                                              01580000
         ORG   ROUTSEL+56                                               01581000
         ORG   ROUTSEL+56                                               01582000
         DC    X'0003'                                                  01583000
         DS    CL2                                                      01584000
         DC    AL4(DSPRTN)                                              01585000
         ORG   ROUTSEL+64                                               01586000
         ORG   ROUTSEL+64                                               01587000
         DC    X'0004'                                                  01588000
         DS    CL2                                                      01589000
         DC    AL4(DSPRTN)                                              01590000
         ORG   ROUTSEL+72                                               01591000
         ORG   ROUTSEL+72                                               01592000
         DC    X'1000'                                                  01593000
         DS    CL2                                                      01594000
         DC    AL4(SVCRTN)                                              01595000
         ORG   ROUTSEL+80                                               01596000
         ORG   ROUTSEL+80                                               01597000
         DC    X'6101'                                                  01598000
         DS    CL2                                                      01599000
         DC    AL4(PIRTN)                                               01600000
         ORG   ROUTSEL+88                                               01601000
         ORG   ROUTSEL+88                                               01602000
         DC    X'6200'                                                  01603000
         DS    CL2                                                      01604000
         DC    AL4(PIRTN)                                               01605000
         ORG   ROUTSEL+96                                               01606000
         ORG   ROUTSEL+96                                               01607000
         DC    X'8100'                                                  01608000
         DS    CL2                                                      01609000
         DC    AL4(RNIORTN)                                             01610000
         ORG   ROUTSEL+104                                              01611000
         ORG   ROUTSEL+104                                              01612000
         DC    X'8200'                                                  01613000
         DS    CL2                                                      01614000
         DC    AL4(RNIORTN)                                             01615000
         ORG   ROUTSEL+112                                              01616000
         ORG   ROUTSEL+112                                              01617000
         DC    X'6201'                                                  01618000
         DS    CL2                                                      01619000
         DC    AL4(EXTRTN)                                              01620000
         ORG   ROUTSEL+120                                              01621000
         ORG   ROUTSEL+120                                              01622000
         DC    X'4001'                                                  01623000
         DS    CL2                                                      01624000
         DC    AL4(SRMRTN)                                              01625000
         ORG   ROUTSEL+128                                              01626000
         ORG   ROUTSEL+128                                              01627000
         DC    X'4002'                                                  01628000
         DS    CL2                                                      01629000
         DC    AL4(RRRTN)                                               01630000
         ORG   ROUTSEL+136                                              01631000
         ORG   ROUTSEL+136                                              01632000
         DC    X'4003'                                                  01633000
         DS    CL2                                                      01634000
         DC    AL4(RRRTN)                                               01635000
         ORG   ROUTSEL+144                                              01636000
BTUPTR   DC    AL4(BTU01)                                               01637000
         DC    AL4(BTU02)                                               01638000
         DC    AL4(BTU03)                                               01639000
         DC    AL4(BTU04)                                               01640000
         DC    AL4(BTU05)                                               01641000
         DC    AL4(BTU06)                                               01642000
         DC    AL4(BTU07)                                               01643000
         DC    AL4(BTU08)                                               01644000
         DC    AL4(BTU09)                                               01645000
         DC    AL4(BTU10)                                               01646000
         DC    AL4(BTU11)                                               01647000
         DC    AL4(BTU12)                                               01648000
         DC    AL4(BTU13)                                               01649000
         DC    AL4(BTU14)                                               01650000
         DC    AL4(BTU15)                                               01651000
         DC    AL4(BTU16)                                               01652000
         DC    AL4(BTU17)                                               01653000
         DC    AL4(BTU18)                                               01654000
         DC    AL4(BTU19)                                               01655000
BTUEPTR  DC    AL4(BTU01E)                                              01656000
         DC    AL4(BTU02E)                                              01657000
         DC    AL4(BTU03E)                                              01658000
         DC    AL4(BTU04E)                                              01659000
         DC    AL4(BTU05E)                                              01660000
         DC    AL4(BTU06E)                                              01661000
         DC    AL4(BTU07E)                                              01662000
         DC    AL4(BTU08E)                                              01663000
         DC    AL4(BTU09E)                                              01664000
         DC    AL4(BTU10E)                                              01665000
         DC    AL4(BTU11E)                                              01666000
         DC    AL4(BTU12E)                                              01667000
         DC    AL4(BTU13E)                                              01668000
         DC    AL4(BTU14E)                                              01669000
         DC    AL4(BTU15E)                                              01670000
         DC    AL4(BTU16E)                                              01671000
         DC    AL4(BTU17E)                                              01672000
         DC    AL4(BTU18E)                                              01673000
         DC    AL4(BTU19E)                                              01674000
AMDSYS03 CSECT                                                          01675000
***  FORMAT FOR ERROR IO FORMAT                                         01676000
IOERRF0  FMTPTRN (LBL),3,,0                            LABEL            01677000
         FMTPTRN (LBL,LBLP,DTAC,DTA,DTAE),4,4,5,10,IOGENLAB  ASCB       01678000
         FMTPTRN (LBL,DTAC,DTA),3,2,20,24              CPU              01679000
         FMTPTRN  (LBL,DTAC,DTA),3,4,30,34             PSW              01680000
         FMTPTRN  (DTAC,DTA),,4,,43             PSW                     01681000
         FMTPTRN  (LBL,DTAC,DTA,DTAE),3,4,53,57        TCB              01682000
         FMTPTRN  (LBL,DTAC,DTA),3,4,81,85      CSW            @YM01892 01683000
      FMTPTRN  (DTAC,DTA),,4,,94                CSW                     01684000
         FMTPTRN (LBL,DTAC,DTA,DTAE),3,2,104,108           SENSE        01685000
         FMTPTRN  (LBL,DTAC,DTA),7,2,67,75              DEV ADD         01686000
         FMTPTRN  (DTAP,DTAC,DTA,DTAE),,2,,109,,SLASHA,LAST /A IN SENSE 01687000
IOERRF1  FMTPTRN (LBL),3,,0                            LABEL            01688000
         FMTPTRN (LBL,LBLP,DTAC,DTA,DTAE),4,4,5,10,IOGENLAB  ASCB       01689000
         FMTPTRN (LBL,DTAC,DTA),3,2,20,24              CPU              01690000
         FMTPTRN  (LBL,DTAC,DTA),3,4,30,34             PSW              01691000
         FMTPTRN  (DTAC,DTA),,4,,43             PSW                     01692000
         FMTPTRN  (LBL,DTAC,DTA,DTAE),3,4,53,57        TCB              01693000
         FMTPTRN  (LBL,DTAC,DTA),3,4,81,85      CSW            @YM01892 01694000
      FMTPTRN  (DTAC,DTA),,4,,94                CSW                     01695000
         FMTPTRN (LBL,DTAC,DTA,DTAE),3,2,104,108           SENSE        01696000
         FMTPTRN  (LBL,DTAC,DTA),7,2,67,75,,,LAST       DEV ADD         01697000
IOERRF2  FMTPTRN (LBL),3,,0                            LABEL            01698000
         FMTPTRN (LBL,LBLP,DTAC,DTA,DTAE),4,4,5,10,IOGENLAB  ASCB       01699000
         FMTPTRN (LBL,DTAC,DTA),3,2,20,24              CPU              01700000
         FMTPTRN  (LBL,DTAC,DTA),3,4,30,34             PSW              01701000
         FMTPTRN  (DTAC,DTA),,4,,43             PSW                     01702000
         FMTPTRN  (LBL,DTAC,DTA,DTAE),3,4,53,57        TCB              01703000
         FMTPTRN  (LBL,DTAC,DTA),3,4,81,85      CSW            @YM01892 01704000
      FMTPTRN  (DTAC,DTA),,4,,94                CSW                     01705000
         FMTPTRN (LBL,DTAC,DTA),3,2,104,75   SKIP  SENSE                01706000
         FMTPTRN  (LBL,DTAC,DTA),7,2,67,75,,,LAST       DEV ADD         01707000
IOERRF3  FMTPTRN (LBL),3,,0                            LABEL            01708000
         FMTPTRN (LBL,LBLP,DTAC,DTA,DTAE),4,4,5,10,IOGENLAB  ASCB       01709000
         FMTPTRN (LBL,DTAC,DTA),3,2,20,24              CPU              01710000
         FMTPTRN  (LBL,DTAC,DTA),3,4,30,34             PSW              01711000
         FMTPTRN  (DTAC,DTA),,4,,43             PSW                     01712000
         FMTPTRN  (LBL,DTAC,DTA),3,4,53,94        SKIP TCB,LABEL ONLY   01713000
         FMTPTRN  (LBL,DTAC,DTA),3,4,81,85      CSW            @YM01892 01714000
      FMTPTRN  (DTAC,DTA),,4,,94                CSW                     01715000
         FMTPTRN (LBL,DTAC,DTA),3,2,104,75    SKIP  SENSE               01716000
         FMTPTRN  (LBL,DTAC,DTA),7,2,67,75,,,LAST       DEV ADD         01717000
IOERRF4  FMTPTRN (LBL),3,,0                            LABEL            01718000
         FMTPTRN (LBL,LBLP,DTAC,DTA),4,4,5,10,IOGENLAB  ASCB            01719000
         FMTPTRN (LBL,DTAC,DTA),3,2,20,24              CPU              01720000
         FMTPTRN  (LBL,DTAC,DTA),3,4,30,34             PSW              01721000
         FMTPTRN  (DTAC,DTA),,4,,43             PSW                     01722000
         FMTPTRN  (LBL,DTAC,DTA,DTAE),3,4,53,94    SKIP TCB, LABEL ONLY 01723000
         FMTPTRN  (LBL,DTAC,DTA),3,4,81,85      CSW            @YM01892 01724000
      FMTPTRN  (DTAC,DTA),,4,,94                CSW                     01725000
         FMTPTRN (LBL,DTAC,DTA),3,2,104,75    SKIP  SENSE               01726000
         FMTPTRN  (LBL,DTAC,DTA),7,2,67,75,,,LAST       DEV ADD         01727000
***  FORMAT FOR SIO RECORD                                              01728000
SIOF     FMTPTRN (LBL,LBLP),3,,0,,SIOLAB               LABEL            01729000
         FMTPTRN (LBL,DTAC,DTA),4,4,5,10               ASCB             01730000
         FMTPTRN  (LBL,DTAC,DTA),3,2,20,24             CPU              01731000
         FMTPTRN  (LBL,DTAC,DTA),3,4,30,34             CPA              01732000
         FMTPTRN  (DTAC,DTA),,4,,43             CPA                     01733000
         FMTPTRN  (LBL,DTAC,DTA),2,1,94,96       CC                     01734000
         FMTPTRN  (LBL,DTAC,DTA),1,1,96,75   SKIP BYTE AND BLANK ILC    01735000
         FMTPTRN  (LBL,DTAC,DTA),7,2,67,75             DEV ADD          01736000
         FMTPTRN  (LBL,DTAC,DTA),3,4,53,57             CAW              01737000
         FMTPTRN  (LBL,DTAC,DTA),6,2,81,88,,,LAST      STATUS           01738000
SIOERRF  FMTPTRN (LBL,LBLP),3,,0,,SIOLAB               LABEL            01739000
         FMTPTRN (LBL,DTAC,DTAE,DTA),4,4,5,10               ASCB        01740000
         FMTPTRN  (LBL,DTAC,DTA),3,2,20,24             CPU              01741000
         FMTPTRN  (LBL,DTAC,DTAE,DTA),3,8,30,34             CPA         01742000
         FMTPTRN  (LBL,DTAC,DTA,DTAE),3,1,94,97             CC          01743000
         FMTPTRN  (DTA,DTAC),,1,,75         SKIP A BYTE                 01744000
         FMTPTRN  (LBL,DTAC,DTA),7,2,67,75             DEV ADD          01745000
         FMTPTRN  (LBL,DTAC,DTA),3,4,53,57             CAW              01746000
         FMTPTRN  (LBL,DTAC,DTA),6,2,81,88             STATUS           01747000
         FMTPTRN  (DTAE,DTAP,DTAC,DTA),,2,,98,,SLASHA,LAST '/A' IN CC   01748000
SIOERRF2 FMTPTRN (LBL,LBLP),3,,0,,SIOLAB               LABEL            01749000
         FMTPTRN (LBL,DTAC,DTAE,DTA),4,4,5,10               ASCB        01750000
         FMTPTRN  (LBL,DTAC,DTA),3,2,20,24             CPU              01751000
         FMTPTRN  (LBL,DTAC,DTAE,DTA),3,8,30,34             CPA         01752000
         FMTPTRN  (LBL,DTAC,DTA,DTAE),3,1,94,97             CC          01753000
         FMTPTRN  (DTA,DTAC),,1,,75         SKIP A BYTE                 01754000
         FMTPTRN  (LBL,DTAC,DTA),7,2,67,75             DEV ADD          01755000
         FMTPTRN  (LBL,DTAC,DTA),3,4,53,57             CAW              01756000
         FMTPTRN  (LBL,DTAC,DTA),6,2,81,88,,,LAST     STATUS            01757000
***  FORMAT FOR UIO RECORD.                                             01758000
UIOF  FMTPTRN  (LBLP,LBL),3,,0,,UIOLAB                 LABEL            01759000
      FMTPTRN  (LBL,DTAC,DTA,DTAE),4,4,5,10            ASCB             01760000
      FMTPTRN  (LBL,DTAC,DTA),3,2,20,24                CPU              01761000
      FMTPTRN  (LBL,DTAC,DTA),3,4,30,34                PSW              01762000
         FMTPTRN  (DTAC,DTA),,4,,43             PSW                     01763000
      FMTPTRN  (LBL,DTAC,DTA),3,4,67,71         CSW                     01764000
      FMTPTRN  (DTAC,DTA),,4,,80         CSW                            01765000
     FMTPTRN  (DTA,DTAE,DTAC),,2,,61    SKIP 2 BYTES OF DATA            01766000
      FMTPTRN  (LBL,DTAC,DTA),7,2,53,61,,,LAST         DEVICE ADDR      01767000
***  FORMAT FOR IO RECORD                                               01768000
IOTCBNA FMTPTRN (DTA,DTAC,DTAE),,4,,57,,,LAST  N/A OR **** TCB          01769000
IOTCBOK FMTPTRN (DTA,DTAC),,4,,57,,,LAST  TCB                           01770000
IOSNSNA FMTPTRN (DTA,DTAC,DTAE),,3,,108,,,LAST  N/A SENSE               01771000
IOSNSOK FMTPTRN (DTA,DTAC),,2,,108,,,LAST  SENSE                        01772000
IOF  FMTPTRN (LBL),3,,0                                LABEL            01773000
     FMTPTRN (LBL,LBLP,DTAC,DTA),4,4,5,10,IOGENLAB     ASCB             01774000
     FMTPTRN (LBL,DTAC,DTA),3,2,20,24                 CPU               01775000
     FMTPTRN (LBL,DTAC,DTA),3,4,30,34                  PSW              01776000
         FMTPTRN  (DTAC,DTA),,4,,43             PSW                     01777000
     FMTPTRN (LBL,DTAC,DTA),3,4,53,94          SKIP TCB, LABEL ONLY     01778000
    FMTPTRN (LBL,DTAC,DTA),3,4,81,85     CSW                 @YM04519   01779000
      FMTPTRN  (DTAC,DTA),,4,,94                CSW                     01780000
       FMTPTRN  (DTAE,DTAC,DTA,LBL),3,2,104,75     SENSE     @YM04519   01781000
         FMTPTRN  (LBL,DTAC,DTA),7,2,67,75,,,LAST       DEV ADD         01782000
EXTERRF  FMTPTRN (LBLP,LBL),3,,0,,EXTLAB         LABEL                  01783000
         FMTPTRN (LBL,DTAC,DTA),4,4,5,10         ASCB                   01784000
         FMTPTRN (LBL,DTAC,DTA),3,2,20,24        CPU                    01785000
         FMTPTRN (LBL,DTAC,DTA),3,4,30,34        PSW                    01786000
         FMTPTRN  (DTAC,DTA),,4,,43             PSW                     01787000
         FMTPTRN (LBL,DTAC,DTA,DTAE),3,4,53,57,,,LAST   TCB             01788000
EXTSTDF  FMTPTRN (LBLP,LBL),3,,0,,EXTLAB         LABEL                  01789000
         FMTPTRN (LBL,DTAC,DTA),4,4,5,10         ASCB                   01790000
         FMTPTRN (LBL,DTAC,DTA),3,2,20,24        CPU                    01791000
         FMTPTRN (LBL,DTAC,DTA),3,4,30,34        PSW                    01792000
         FMTPTRN  (DTAC,DTA),,4,,43             PSW                     01793000
         FMTPTRN (LBL,DTAC,DTA),3,4,53,57,,,LAST   TCB                  01794000
EXTCCERF FMTPTRN (LBLP,LBL,DTA,DTAC,DTAE),7,4,67,75,CLKCLAB,,LAST       01795000
EXTCCF   FMTPTRN (LBLP,LBL,DTA,DTAC),7,4,67,75,CLKCLAB,,LAST            01796000
EXTSGPEF FMTPTRN  (LBLP,LBL,DTA,DTAC,DTAE),7,2,67,75,SIGPLAB,,LAST      01797000
EXTSGPF  FMTPTRN  (LBLP,LBL,DTA,DTAC),7,2,67,75,SIGPLAB,,LAST           01798000
SVCF     FMTPTRN  (LBLP,LBL),3,,0,,SVCLAB     LABEL                     01799000
         FMTPTRN  (LBL,DTAC,DTA),4,4,5,10              ASCB             01800000
         FMTPTRN  (LBL,DTAC,DTA),3,2,20,24             CPU              01801000
         FMTPTRN  (LBL,DTAC,DTA),3,4,30,34             PSW              01802000
         FMTPTRN  (DTAC,DTA),,4,,43             PSW                     01803000
         FMTPTRN  (LBL,DTAC,DTA),3,4,53,57             TCB              01804000
         FMTPTRN  (LBL,DTAC,DTA),3,4,67,71             R15              01805000
         FMTPTRN  (LBL,DTAC,DTA),2,4,81,84             RO               01806000
         FMTPTRN  (LBL,DTAC,DTA),2,4,94,97,,,LAST      R1               01807000
PGMF     FMTPTRN  (LBL,LBLP),2,,0,,PILAB        LABEL                   01808000
         FMTPTRN  (LBL,DTA,DTAC),4,4,5,10        ASCB                   01809000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24       CPU                    01810000
         FMTPTRN  (LBL,DTA,DTAC),3,4,30,34       PSW                    01811000
         FMTPTRN  (DTAC,DTA),,4,,43             PSW                     01812000
         FMTPTRN  (LBL,DTA,DTAC),3,4,53,57       TCB                    01813000
         FMTPTRN  (LBL,DTA,DTAC),3,4,67,71         /* VPA   @YM06815 */ 01814000
         FMTPTRN  (LBL,DTA,DTAC),3,4,81,85         /* R15   @YM06815 */ 01815000
         FMTPTRN  (LBL,DTA,DTAC),2,4,95,98,,,LAST  /* R1    @YM06815 */ 01816000
PGMERRF     FMTPTRN  (LBL,LBLP),2,,0,,PILAB        LABEL                01817000
         FMTPTRN  (LBL,DTA,DTAC),4,4,5,10        ASCB                   01818000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24       CPU                    01819000
         FMTPTRN  (LBL,DTA,DTAC),3,4,30,34       PSW                    01820000
         FMTPTRN  (DTAC,DTA),,4,,43             PSW                     01821000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),3,4,53,57       TCB               01822000
         FMTPTRN  (LBL,DTA,DTAC),3,4,67,71         /* VPA   @YM06815 */ 01823000
         FMTPTRN  (LBL,DTA,DTAC),3,4,81,85         /* R15   @YM06815 */ 01824000
         FMTPTRN  (LBL,DTA,DTAC),2,4,95,98,,,LAST  /* R1    @YM06815 */ 01825000
*   RNIO BTU HAS ASTERISKS                                              01826000
RNIOERRF FMTPTRN  (LBL,DTA,DTAC),9,4,0,10 /* HEADER AND ASCB @Z40KI3O*/ 01827000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24    /*  CPU        @Z40KI3O*/ 01828000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),7,14,43,51,,,LAST /*BTU@Z40KI3O*/ 01829000
*   RNIO ASCB AND BTU HAVE ASTERISKS                                    01830000
RNIOERR2 FMTPTRN  (LBL,DTA,DTAC,DTAE),9,4,0,10 /* HDR & ASCB @Z40KI3O*/ 01831000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24    /*  CPU        @Z40KI3O*/ 01832000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),7,14,43,51,,,LAST /*BTU@Z40KI3O*/ 01833000
* RNIO ASCB HAS **** AND 00 BYTES OF BTU DATA                           01834000
BTU00E   FMTPTRN  (LBL,DTA,DTAC,DTAE),9,4,0,10,,, /*HDR&ASCB @Z40KI3O*/ 01835000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 01836000
         FMTPTRN  (LBL),7,,43,,,,LAST             /*  BTU    @Z40KI3O*/ 01837000
* RNIO NORMAL WITH 00 BYTES OF BTU DATA                                 01838000
BTU00    FMTPTRN  (LBL,DTA,DTAC),9,4,0,10,,,      /*HDR&ASCB @Z40KI3O*/ 01839000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 01840000
         FMTPTRN  (LBL),7,,43,,,,LAST             /*  BTU    @Z40KI3O*/ 01841000
* RNIO ASCB HAS **** AND 01 BYTES OF BTU DATA                           01842000
BTU01E   FMTPTRN  (LBL,DTA,DTAC,DTAE),9,4,0,10,,, /*HDR&ASCB @Z40KI3O*/ 01843000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 01844000
         FMTPTRN  (LBL,DTA,DTAC),7,1,43,51,,,LAST /*  BTU    @Z40KI3O*/ 01845000
* RNIO NORMAL WITH 01 BYTES OF BTU DATA                                 01846000
BTU01    FMTPTRN  (LBL,DTA,DTAC),9,4,0,10,,,      /*HDR&ASCB @Z40KI3O*/ 01847000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 01848000
         FMTPTRN  (LBL,DTA,DTAC),7,1,43,51,,,LAST /*  BTU    @Z40KI3O*/ 01849000
* RNIO ASCB HAS **** AND 02 BYTES OF BTU DATA                           01850000
BTU02E   FMTPTRN  (LBL,DTA,DTAC,DTAE),9,4,0,10,,, /*HDR&ASCB @Z40KI3O*/ 01851000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 01852000
         FMTPTRN  (LBL,DTA,DTAC),7,2,43,51,,,LAST /*  BTU    @Z40KI3O*/ 01853000
* RNIO NORMAL WITH 02 BYTES OF BTU DATA                                 01854000
BTU02    FMTPTRN  (LBL,DTA,DTAC),9,4,0,10,,,      /*HDR&ASCB @Z40KI3O*/ 01855000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 01856000
         FMTPTRN  (LBL,DTA,DTAC),7,2,43,51,,,LAST /*  BTU    @Z40KI3O*/ 01857000
* RNIO ASCB HAS **** AND 03 BYTES OF BTU DATA                           01858000
BTU03E   FMTPTRN  (LBL,DTA,DTAC,DTAE),9,4,0,10,,, /*HDR&ASCB @Z40KI3O*/ 01859000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 01860000
         FMTPTRN  (LBL,DTA,DTAC),7,3,43,51,,,LAST /*  BTU    @Z40KI3O*/ 01861000
* RNIO NORMAL WITH 03 BYTES OF BTU DATA                                 01862000
BTU03    FMTPTRN  (LBL,DTA,DTAC),9,4,0,10,,,      /*HDR&ASCB @Z40KI3O*/ 01863000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 01864000
         FMTPTRN  (LBL,DTA,DTAC),7,3,43,51,,,LAST /*  BTU    @Z40KI3O*/ 01865000
* RNIO ASCB HAS **** AND 04 BYTES OF BTU DATA                           01866000
BTU04E   FMTPTRN  (LBL,DTA,DTAC,DTAE),9,4,0,10,,, /*HDR&ASCB @Z40KI3O*/ 01867000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 01868000
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,LAST /*  BTU    @Z40KI3O*/ 01869000
* RNIO NORMAL WITH 04 BYTES OF BTU DATA                                 01870000
BTU04    FMTPTRN  (LBL,DTA,DTAC),9,4,0,10,,,      /*HDR&ASCB @Z40KI3O*/ 01871000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 01872000
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,LAST /*  BTU    @Z40KI3O*/ 01873000
* RNIO ASCB HAS **** AND 05 BYTES OF BTU DATA                           01874000
BTU05E   FMTPTRN  (LBL,DTA,DTAC,DTAE),9,4,0,10,,, /*HDR&ASCB @Z40KI3O*/ 01875000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 01876000
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/ 01877000
         FMTPTRN  (DTA,DTAC),,1,,60,,,LAST        /*         @Z40KI3O*/ 01878000
* RNIO NORMAL WITH 05 BYTES OF BTU DATA                                 01879000
BTU05    FMTPTRN  (LBL,DTA,DTAC),9,4,0,10,,,      /*HDR&ASCB @Z40KI3O*/ 01880000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 01881000
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/ 01882000
         FMTPTRN  (DTA,DTAC),,1,,60,,,LAST        /*         @Z40KI3O*/ 01883000
* RNIO ASCB HAS **** AND 06 BYTES OF BTU DATA                           01884000
BTU06E   FMTPTRN  (LBL,DTA,DTAC,DTAE),9,4,0,10,,, /*HDR&ASCB @Z40KI3O*/ 01885000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 01886000
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/ 01887000
         FMTPTRN  (DTA,DTAC),,2,,60,,,LAST        /*         @Z40KI3O*/ 01888000
* RNIO NORMAL WITH 06 BYTES OF BTU DATA                                 01889000
BTU06    FMTPTRN  (LBL,DTA,DTAC),9,4,0,10,,,      /*HDR&ASCB @Z40KI3O*/ 01890000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 01891000
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/ 01892000
         FMTPTRN  (DTA,DTAC),,2,,60,,,LAST        /*         @Z40KI3O*/ 01893000
* RNIO ASCB HAS **** AND 07 BYTES OF BTU DATA                           01894000
BTU07E   FMTPTRN  (LBL,DTA,DTAC,DTAE),9,4,0,10,,, /*HDR&ASCB @Z40KI3O*/ 01895000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 01896000
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/ 01897000
         FMTPTRN  (DTA,DTAC),,3,,60,,,LAST        /*         @Z40KI3O*/ 01898000
* RNIO NORMAL WITH 07 BYTES OF BTU DATA                                 01899000
BTU07    FMTPTRN  (LBL,DTA,DTAC),9,4,0,10,,,      /*HDR&ASCB @Z40KI3O*/ 01900000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 01901000
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/ 01902000
         FMTPTRN  (DTA,DTAC),,3,,60,,,LAST        /*         @Z40KI3O*/ 01903000
* RNIO ASCB HAS **** AND 08 BYTES OF BTU DATA                           01904000
BTU08E   FMTPTRN  (LBL,DTA,DTAC,DTAE),9,4,0,10,,, /*HDR&ASCB @Z40KI3O*/ 01905000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 01906000
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/ 01907000
         FMTPTRN  (DTA,DTAC),,4,,60,,,LAST        /*         @Z40KI3O*/ 01908000
* RNIO NORMAL WITH 08 BYTES OF BTU DATA                                 01909000
BTU08    FMTPTRN  (LBL,DTA,DTAC),9,4,0,10,,,      /*HDR&ASCB @Z40KI3O*/ 01910000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 01911000
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/ 01912000
         FMTPTRN  (DTA,DTAC),,4,,60,,,LAST        /*         @Z40KI3O*/ 01913000
* RNIO ASCB HAS **** AND 09 BYTES OF BTU DATA                           01914000
BTU09E   FMTPTRN  (LBL,DTA,DTAC,DTAE),9,4,0,10,,, /*HDR&ASCB @Z40KI3O*/ 01915000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 01916000
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/ 01917000
         FMTPTRN  (DTA,DTAC),,4,,60,,,            /*         @Z40KI3O*/ 01918000
         FMTPTRN  (DTA,DTAC),,1,,69,,,LAST        /*         @Z40KI3O*/ 01919000
* RNIO NORMAL WITH 09 BYTES OF BTU DATA                                 01920000
BTU09    FMTPTRN  (LBL,DTA,DTAC),9,4,0,10,,,      /*HDR&ASCB @Z40KI3O*/ 01921000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 01922000
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/ 01923000
         FMTPTRN  (DTA,DTAC),,4,,60,,,            /*         @Z40KI3O*/ 01924000
         FMTPTRN  (DTA,DTAC),,1,,69,,,LAST        /*         @Z40KI3O*/ 01925000
* RNIO ASCB HAS **** AND 10 BYTES OF BTU DATA                  @Z40KI3O 01926000
BTU10E   FMTPTRN  (LBL,DTA,DTAC,DTAE),9,4,0,10,,, /*HDR&ASCB @Z40KI3O*/ 01927000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 01928000
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/ 01929000
         FMTPTRN  (DTA,DTAC),,4,,60,,,            /*         @Z40KI3O*/ 01930000
         FMTPTRN  (DTA,DTAC),,2,,69,,,LAST        /*         @Z40KI3O*/ 01931000
* RNIO NORMAL WITH 10 BYTES OF BTU DATA                        @Z40KI3O 01932000
BTU10    FMTPTRN  (LBL,DTA,DTAC),9,4,0,10,,,      /*HDR&ASCB @Z40KI3O*/ 01933000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 01934000
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/ 01935000
         FMTPTRN  (DTA,DTAC),,4,,60,,,            /*         @Z40KI3O*/ 01936000
         FMTPTRN  (DTA,DTAC),,2,,69,,,LAST        /*         @Z40KI3O*/ 01937000
* RNIO ASCB HAS **** AND 11 BYTES OF BTU DATA                  @Z40KI3O 01938000
BTU11E   FMTPTRN  (LBL,DTA,DTAC,DTAE),9,4,0,10,,, /*HDR&ASCB @Z40KI3O*/ 01939000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 01940000
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/ 01941000
         FMTPTRN  (DTA,DTAC),,4,,60,,,            /*         @Z40KI3O*/ 01942000
         FMTPTRN  (DTA,DTAC),,3,,69,,,LAST        /*         @Z40KI3O*/ 01943000
* RNIO NORMAL WITH 11 BYTES OF BTU DATA                        @Z40KI3O 01944000
BTU11    FMTPTRN  (LBL,DTA,DTAC),9,4,0,10,,,      /*HDR&ASCB @Z40KI3O*/ 01945000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 01946000
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/ 01947000
         FMTPTRN  (DTA,DTAC),,4,,60,,,            /*         @Z40KI3O*/ 01948000
         FMTPTRN  (DTA,DTAC),,3,,69,,,LAST        /*         @Z40KI3O*/ 01949000
* RNIO ASCB HAS **** AND 12 BYTES OF BTU DATA                  @Z40KI3O 01950000
BTU12E   FMTPTRN  (LBL,DTA,DTAC,DTAE),9,4,0,10,,, /*HDR&ASCB @Z40KI3O*/ 01951000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 01952000
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/ 01953000
         FMTPTRN  (DTA,DTAC),,4,,60,,,            /*         @Z40KI3O*/ 01954000
         FMTPTRN  (DTA,DTAC),,4,,69,,,LAST        /*         @Z40KI3O*/ 01955000
* RNIO NORMAL WITH 12 BYTES OF BTU DATA                        @Z40KI3O 01956000
BTU12    FMTPTRN  (LBL,DTA,DTAC),9,4,0,10,,,      /*HDR&ASCB @Z40KI3O*/ 01957000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 01958000
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/ 01959000
         FMTPTRN  (DTA,DTAC),,4,,60,,,            /*         @Z40KI3O*/ 01960000
         FMTPTRN  (DTA,DTAC),,4,,69,,,LAST        /*         @Z40KI3O*/ 01961000
* RNIO ASCB HAS **** AND 13 BYTES OF BTU DATA                  @Z40KI3O 01962000
BTU13E   FMTPTRN  (LBL,DTA,DTAC,DTAE),9,4,0,10,,, /*HDR&ASCB @Z40KI3O*/ 01963000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 01964000
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/ 01965000
         FMTPTRN  (DTA,DTAC),,4,,60,,,            /*         @Z40KI3O*/ 01966000
         FMTPTRN  (DTA,DTAC),,4,,69,,,            /*         @Z40KI3O*/ 01967000
         FMTPTRN  (DTA,DTAC),,1,,78,,,LAST        /*         @Z40KI3O*/ 01968000
* RNIO NORMAL WITH 13 BYTES OF BTU DATA                        @Z40KI3O 01969000
BTU13    FMTPTRN  (LBL,DTA,DTAC),9,4,0,10,,,      /*HDR&ASCB @Z40KI3O*/ 01970000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 01971000
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/ 01972000
         FMTPTRN  (DTA,DTAC),,4,,60,,,            /*         @Z40KI3O*/ 01973000
         FMTPTRN  (DTA,DTAC),,4,,69,,,            /*         @Z40KI3O*/ 01974000
         FMTPTRN  (DTA,DTAC),,1,,78,,,LAST        /*         @Z40KI3O*/ 01975000
* RNIO ASCB HAS **** AND 14 BYTES OF BTU DATA                  @Z40KI3O 01976000
BTU14E   FMTPTRN  (LBL,DTA,DTAC,DTAE),9,4,0,10,,, /*HDR&ASCB @Z40KI3O*/ 01977000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 01978000
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/ 01979000
         FMTPTRN  (DTA,DTAC),,4,,60,,,            /*         @Z40KI3O*/ 01980000
         FMTPTRN  (DTA,DTAC),,4,,69,,,            /*         @Z40KI3O*/ 01981000
         FMTPTRN  (DTA,DTAC),,2,,78,,,LAST        /*         @Z40KI3O*/ 01982000
* RNIO NORMAL WITH 14 BYTES OF BTU DATA                        @Z40KI3O 01983000
BTU14    FMTPTRN  (LBL,DTA,DTAC),9,4,0,10,,,      /*HDR&ASCB @Z40KI3O*/ 01984000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 01985000
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/ 01986000
         FMTPTRN  (DTA,DTAC),,4,,60,,,            /*         @Z40KI3O*/ 01987000
         FMTPTRN  (DTA,DTAC),,4,,69,,,            /*         @Z40KI3O*/ 01988000
         FMTPTRN  (DTA,DTAC),,2,,78,,,LAST        /*         @Z40KI3O*/ 01989000
* RNIO ASCB HAS **** AND 15 BYTES OF BTU DATA                  @Z40KI3O 01990000
BTU15E   FMTPTRN  (LBL,DTA,DTAC,DTAE),9,4,0,10,,, /*HDR&ASCB @Z40KI3O*/ 01991000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 01992000
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/ 01993000
         FMTPTRN  (DTA,DTAC),,4,,60,,,            /*         @Z40KI3O*/ 01994000
         FMTPTRN  (DTA,DTAC),,4,,69,,,            /*         @Z40KI3O*/ 01995000
         FMTPTRN  (DTA,DTAC),,3,,78,,,LAST        /*         @Z40KI3O*/ 01996000
* RNIO NORMAL WITH 15 BYTES OF BTU DATA                        @Z40KI3O 01997000
BTU15    FMTPTRN  (LBL,DTA,DTAC),9,4,0,10,,,      /*HDR&ASCB @Z40KI3O*/ 01998000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 01999000
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/ 02000000
         FMTPTRN  (DTA,DTAC),,4,,60,,,            /*         @Z40KI3O*/ 02001000
         FMTPTRN  (DTA,DTAC),,4,,69,,,            /*         @Z40KI3O*/ 02002000
         FMTPTRN  (DTA,DTAC),,3,,78,,,LAST        /*         @Z40KI3O*/ 02003000
* RNIO ASCB HAS **** AND 16 BYTES OF BTU DATA                  @Z40KI3O 02004000
BTU16E   FMTPTRN  (LBL,DTA,DTAC,DTAE),9,4,0,10,,, /*HDR&ASCB @Z40KI3O*/ 02005000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 02006000
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/ 02007000
         FMTPTRN  (DTA,DTAC),,4,,60,,,            /*         @Z40KI3O*/ 02008000
         FMTPTRN  (DTA,DTAC),,4,,69,,,            /*         @Z40KI3O*/ 02009000
         FMTPTRN  (DTA,DTAC),,4,,78,,,LAST        /*         @Z40KI3O*/ 02010000
* RNIO NORMAL WITH 16 BYTES OF BTU DATA                        @Z40KI3O 02011000
BTU16    FMTPTRN  (LBL,DTA,DTAC),9,4,0,10,,,      /*HDR&ASCB @Z40KI3O*/ 02012000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 02013000
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/ 02014000
         FMTPTRN  (DTA,DTAC),,4,,60,,,            /*         @Z40KI3O*/ 02015000
         FMTPTRN  (DTA,DTAC),,4,,69,,,            /*         @Z40KI3O*/ 02016000
         FMTPTRN  (DTA,DTAC),,4,,78,,,LAST        /*         @Z40KI3O*/ 02017000
* RNIO ASCB HAS **** AND 17 BYTES OF BTU DATA                  @Z40KI3O 02018000
BTU17E   FMTPTRN  (LBL,DTA,DTAC,DTAE),9,4,0,10,,, /*HDR&ASCB @Z40KI3O*/ 02019000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 02020000
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/ 02021000
         FMTPTRN  (DTA,DTAC),,4,,60,,,            /*         @Z40KI3O*/ 02022000
         FMTPTRN  (DTA,DTAC),,4,,69,,,            /*         @Z40KI3O*/ 02023000
         FMTPTRN  (DTA,DTAC),,4,,78,,,            /*         @Z40KI3O*/ 02024000
         FMTPTRN  (DTA,DTAC),,1,,87,,,LAST        /*         @Z40KI3O*/ 02025000
* RNIO NORMAL WITH 17 BYTES OF BTU DATA                        @Z40KI3O 02026000
BTU17    FMTPTRN  (LBL,DTA,DTAC),9,4,0,10,,,      /*HDR&ASCB @Z40KI3O*/ 02027000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 02028000
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/ 02029000
         FMTPTRN  (DTA,DTAC),,4,,60,,,            /*         @Z40KI3O*/ 02030000
         FMTPTRN  (DTA,DTAC),,4,,69,,,            /*         @Z40KI3O*/ 02031000
         FMTPTRN  (DTA,DTAC),,4,,78,,,            /*         @Z40KI3O*/ 02032000
         FMTPTRN  (DTA,DTAC),,1,,87,,,LAST        /*         @Z40KI3O*/ 02033000
* RNIO ASCB HAS **** AND 18 BYTES OF BTU DATA                  @Z40KI3O 02034000
BTU18E   FMTPTRN  (LBL,DTA,DTAC,DTAE),9,4,0,10,,, /*HDR&ASCB @Z40KI3O*/ 02035000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 02036000
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/ 02037000
         FMTPTRN  (DTA,DTAC),,4,,60,,,            /*         @Z40KI3O*/ 02038000
         FMTPTRN  (DTA,DTAC),,4,,69,,,            /*         @Z40KI3O*/ 02039000
         FMTPTRN  (DTA,DTAC),,4,,78,,,            /*         @Z40KI3O*/ 02040000
         FMTPTRN  (DTA,DTAC),,2,,87,,,LAST        /*         @Z40KI3O*/ 02041000
* RNIO NORMAL WITH 18 BYTES OF BTU DATA                        @Z40KI3O 02042000
BTU18    FMTPTRN  (LBL,DTA,DTAC),9,4,0,10,,,      /*HDR&ASCB @Z40KI3O*/ 02043000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 02044000
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/ 02045000
         FMTPTRN  (DTA,DTAC),,4,,60,,,            /*         @Z40KI3O*/ 02046000
         FMTPTRN  (DTA,DTAC),,4,,69,,,            /*         @Z40KI3O*/ 02047000
         FMTPTRN  (DTA,DTAC),,4,,78,,,            /*         @Z40KI3O*/ 02048000
         FMTPTRN  (DTA,DTAC),,2,,87,,,LAST        /*         @Z40KI3O*/ 02049000
* RNIO ASCB HAS **** AND 19 BYTES OF BTU DATA                  @Z40KI3O 02050000
BTU19E   FMTPTRN  (LBL,DTA,DTAC,DTAE),9,4,0,10,,, /*HDR&ASCB @Z40KI3O*/ 02051000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 02052000
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/ 02053000
         FMTPTRN  (DTA,DTAC),,4,,60,,,            /*         @Z40KI3O*/ 02054000
         FMTPTRN  (DTA,DTAC),,4,,69,,,            /*         @Z40KI3O*/ 02055000
         FMTPTRN  (DTA,DTAC),,4,,78,,,            /*         @Z40KI3O*/ 02056000
         FMTPTRN  (DTA,DTAC),,3,,87,,,LAST        /*         @Z40KI3O*/ 02057000
* RNIO NORMAL WITH 19 BYTES OF BTU DATA                        @Z40KI3O 02058000
BTU19    FMTPTRN  (LBL,DTA,DTAC),9,4,0,10,,,      /*HDR&ASCB @Z40KI3O*/ 02059000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 02060000
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/ 02061000
         FMTPTRN  (DTA,DTAC),,4,,60,,,            /*         @Z40KI3O*/ 02062000
         FMTPTRN  (DTA,DTAC),,4,,69,,,            /*         @Z40KI3O*/ 02063000
         FMTPTRN  (DTA,DTAC),,4,,78,,,            /*         @Z40KI3O*/ 02064000
         FMTPTRN  (DTA,DTAC),,3,,87,,,LAST        /*         @Z40KI3O*/ 02065000
* RNIO ASCB HAS **** AND 20 BYTES OF BTU DATA                  @Z40KI3O 02066000
BTU20E   FMTPTRN  (LBL,DTA,DTAC,DTAE),9,4,0,10,,, /*HDR&ASCB @Z40KI3O*/ 02067000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 02068000
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/ 02069000
         FMTPTRN  (DTA,DTAC),,4,,60,,,            /*         @Z40KI3O*/ 02070000
         FMTPTRN  (DTA,DTAC),,4,,69,,,            /*         @Z40KI3O*/ 02071000
         FMTPTRN  (DTA,DTAC),,4,,78,,,            /*         @Z40KI3O*/ 02072000
         FMTPTRN  (DTA,DTAC),,4,,87,,,LAST        /*         @Z40KI3O*/ 02073000
* RNIO NORMAL WITH 20 BYTES OF BTU DATA                        @Z40KI3O 02074000
BTU20    FMTPTRN  (LBL,DTA,DTAC),9,4,0,10,,,      /*HDR&ASCB @Z40KI3O*/ 02075000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 02076000
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/ 02077000
         FMTPTRN  (DTA,DTAC),,4,,60,,,            /*         @Z40KI3O*/ 02078000
         FMTPTRN  (DTA,DTAC),,4,,69,,,            /*         @Z40KI3O*/ 02079000
         FMTPTRN  (DTA,DTAC),,4,,78,,,            /*         @Z40KI3O*/ 02080000
         FMTPTRN  (DTA,DTAC),,4,,87,,,LAST        /*         @Z40KI3O*/ 02081000
SRMF   FMTPTRN (LBL,LBLP),3,,0,,SRMLAB         LABEL                    02082000
         FMTPTRN (LBL,DTAC,DTA),4,4,5,10     ASCB                       02083000
         FMTPTRN (LBL,DTAC,DTA),3,2,20,24    CPU                        02084000
         FMTPTRN (LBL,DTAC,DTA),3,4,30,34    R15                        02085000
         FMTPTRN (LBL,DTAC,DTA),2,4,44,47    R0                         02086000
         FMTPTRN (LBL,DTAC,DTA),2,4,57,60,,,LAST  R1                    02087000
SRMERRF   FMTPTRN (LBL,LBLP),3,,0,,SRMLAB         LABEL                 02088000
         FMTPTRN (LBL,DTAC,DTA,DTAE),4,4,5,10     ASCB                  02089000
         FMTPTRN (LBL,DTAC,DTA),3,2,20,24    CPU                        02090000
         FMTPTRN (LBL,DTAC,DTA),3,4,30,34    R15                        02091000
         FMTPTRN (LBL,DTAC,DTA),2,4,44,47    R0                         02092000
         FMTPTRN (LBL,DTAC,DTA),2,4,57,60,,,LAST  R1                    02093000
DSPF     FMTPTRN (LBL),4,,0                                 LABEL       02094000
         FMTPTRN (LBL,LBLP,DTAC,DTA),4,4,5,10,DSPGNLAB      ASCB        02095000
         FMTPTRN (LBL,DTAC,DTA),3,2,20,24                   CPU         02096000
         FMTPTRN (LBL,DTAC,DTA),3,4,30,34                   PSW         02097000
         FMTPTRN  (DTAC,DTA),,4,,43             PSW                     02098000
         FMTPTRN (LBL,DTAC,DTA),3,4,53,57                   TCB         02099000
         FMTPTRN (LBL,DTAC,DTA),3,4,67,71                   R15         02100000
         FMTPTRN (LBL,DTAC,DTA),2,4,81,84                   R0          02101000
         FMTPTRN (LBL,DTAC,DTA),2,4,94,97,,,LAST            R1          02102000
DSPLSRF     FMTPTRN (LBL),4,,0                                 LABEL    02103000
         FMTPTRN (LBL,LBLP,DTAC,DTA),4,4,5,10,DSPGNLAB      ASCB        02104000
         FMTPTRN (LBL,DTAC,DTA),3,2,20,24                   CPU         02105000
         FMTPTRN (LBL,DTAC,DTA),3,4,30,34                   PSW         02106000
         FMTPTRN  (DTAC,DTA),,4,,43             PSW                     02107000
         FMTPTRN (LBL,DTAC,DTA,DTAE),3,4,53,57                   TCB    02108000
         FMTPTRN (LBL,DTAC,DTA),3,4,67,71                   R15         02109000
         FMTPTRN (LBL,DTAC,DTA),2,4,81,84                   R0          02110000
         FMTPTRN (LBL,DTAC,DTA),2,4,94,97,,,LAST            R1          02111000
DSPERRF   FMTPTRN (LBL),4,,0                                 LABEL      02112000
         FMTPTRN (LBL,LBLP,DTAC,DTA),4,4,5,10,DSPGNLAB      ASCB        02113000
         FMTPTRN (LBL,DTAC,DTA),3,2,20,24                   CPU         02114000
         FMTPTRN (LBL,DTAC,DTA),3,4,30,34                   PSW         02115000
         FMTPTRN  (DTAC,DTA),,4,,43             PSW                     02116000
         FMTPTRN (LBL,DTAC,DTA),3,4,53,57                   TCB         02117000
         FMTPTRN (LBL,DTAC,DTA,DTAE),3,4,67,71                   R15    02118000
         FMTPTRN (LBL,DTAC,DTA,DTAE),2,4,81,84                   R0     02119000
         FMTPTRN (LBL,DTAC,DTA,DTAE),2,4,94,97,,,LAST            R1     02120000
DSPELSR     FMTPTRN (LBL),4,,0                                 LABEL    02121000
         FMTPTRN (LBL,LBLP,DTAC,DTA),4,4,5,10,DSPGNLAB      ASCB        02122000
         FMTPTRN (LBL,DTAC,DTA),3,2,20,24                   CPU         02123000
         FMTPTRN (LBL,DTAC,DTA),3,4,30,34                   PSW         02124000
         FMTPTRN  (DTAC,DTA),,4,,43             PSW                     02125000
         FMTPTRN (LBL,DTAC,DTA,DTAE),3,4,53,57                   TCB    02126000
         FMTPTRN (LBL,DTAC,DTA,DTAE),3,4,67,71                   R15    02127000
         FMTPTRN (LBL,DTAC,DTA,DTAE),2,4,81,84                   R0     02128000
         FMTPTRN (LBL,DTAC,DTA,DTAE),2,4,94,97,,,LAST            R1     02129000
SRBSUPF  FMTPTRN (LBL),3,,0                            LABEL            02130000
         FMTPTRN (LBL,DTA,DTAC),4,4,5,10,                   ASCB        02131000
         FMTPTRN (LBL,DTA,DTAC),3,2,20,24                   CPU         02132000
         FMTPTRN (LBL,DTA,DTAC),3,4,30,34                   PSW         02133000
         FMTPTRN  (DTAC,DTA),,4,,43             PSW                     02134000
         FMTPTRN (LBL,DTA,DTAC),3,4,67,71                   R15         02135000
         FMTPTRN (LBL,DTA,DTAC,DTAE),3,4,53,57              SRB =N/A    02136000
         FMTPTRN (LBL,DTA,DTAC),2,4,81,84                   R1          02137000
         FMTPTRN   (LBL),4,,94,,,,LAST                 TYPE             02138000
SRBF     FMTPTRN  (LBL),6,,99                          G OR L           02139000
         FMTPTRN  (LBL,LBLP),3,,0,,SRBSLAB    LABEL                     02140000
         FMTPTRN  (LBL,DTAC,DTA),4,4,5,10              ASCB             02141000
         FMTPTRN  (LBL,DTAC,DTA),3,2,20,24             CPU              02142000
         FMTPTRN  (LBL,DTAC,DTA),3,4,30,34             PSW              02143000
         FMTPTRN  (DTAC,DTA),,4,,43             PSW                     02144000
         FMTPTRN  (LBL,DTAC,DTA),3,4,67,71             R15              02145000
         FMTPTRN  (LBL,DTAC,DTA),3,4,53,57             SRB              02146000
         FMTPTRN  (LBL,DTAC,DTA),2,4,81,84             R1               02147000
         FMTPTRN   (LBL),4,,94,,,,LAST                 TYPE             02148000
SRBERRF    FMTPTRN  (LBL),6,,99                    G OR L      @YM01892 02149000
         FMTPTRN  (LBL,LBLP),3,,0,,SRBSLAB    LABEL            @YM01892 02150000
         FMTPTRN  (LBL,DTAC,DTA),4,4,5,10              ASCB    @YM01892 02151000
         FMTPTRN  (LBL,DTAC,DTA),3,2,20,24             CPU     @YM01892 02152000
         FMTPTRN  (LBL,DTAC,DTA),3,4,30,34             PSW     @YM01892 02153000
         FMTPTRN  (DTAC,DTA),,4,,43             PSW            @YM01892 02154000
         FMTPTRN  (LBL,DTAC,DTA,DTAE),3,4,67,71      R15       @YM01892 02155000
         FMTPTRN  (LBL,DTAC,DTA,DTAE),3,4,53,57       SRB      @YM01892 02156000
         FMTPTRN  (LBL,DTAC,DTA,DTAE),2,4,81,84       R1       @YM01892 02157000
         FMTPTRN   (LBL),4,,94,,,,LAST                 TYPE    @YM01892 02158000
FRRERRF  FMTPTRN  (LBL,LBLP),3,,0,,FRRLAB              FRR **** FMT     02159000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,4,5,10         ASCB             02160000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24             CPUID            02161000
         FMTPTRN (LBL,DTAE,DTA,DTAC),3,8,30,34         PSW              02162000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),2,4,54,57        CC               02163000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,4,67,72        ERRT             02164000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),3,2,82,86        FLAGS            02165000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),2,1,94,97        RC               02166000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),5,4,101,107,,,LAST   RETRY        02167000
STAEERF  FMTPTRN  (LBLP,LBL),4,,0,,STAELAB        STAE ERROR FMT        02168000
         FMTPTRN  (LBL,DTA,DTAC),4,4,5,10         ASCB                  02169000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24        CPU                   02170000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),3,8,30,34   PSW                   02171000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),2,4,54,57   CC                    02172000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),3,3,67,71   FLAGS                 02173000
         FMTPTRN  (LBL,DTA,DTAC),2,1,79,82,,,LAST   RC                  02174000
STAF     FMTPTRN  (LBLP,LBL),4,,0,,STAELAB        STAE STANDARD FMT     02175000
         FMTPTRN  (LBL,DTA,DTAC),4,4,5,10         ASCB                  02176000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24        CPU                   02177000
         FMTPTRN  (LBL,DTA,DTAC),3,4,30,34        PSW                   02178000
         FMTPTRN  (DTA,DTAC),,4,,43               PSW                   02179000
         FMTPTRN  (LBL,DTA,DTAC),2,4,54,57        CC                    02180000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),3,3,67,71        FLAGS            02181000
         FMTPTRN  (LBL,DTA,DTAC),2,1,79,82,,,LAST RC                    02182000
STANAF   FMTPTRN  (LBLP,LBL,DTAC,DTA,DTAE),5,4,86,92,STA2LAB EBCDC RTRY 02183000
         FMTPTRN  (LBL,DTAC,DTA),4,4,102,107,,,LAST     RTCA            02184000
STASTDF  FMTPTRN  (LBLP,LBL,DTAC,DTA),5,4,86,92,STA2LAB HEXRETRY ADDR   02185000
         FMTPTRN  (LBL,DTAC,DTA),4,4,102,107,,,LAST     RTCA            02186000
STAR10F  FMTPTRN  (LBLP,LBL),4,,0,,STAELAB        RTCA DATA IS U/A      02187000
         FMTPTRN  (LBL,DTA,DTAC),4,4,5,10         ASCB                  02188000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24        CPU                   02189000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),3,8,30,34   PSW       EBCIDIC PSW 02190000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),2,4,54,57   CC        EBCIDIC     02191000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),3,3,67,71   FLG       EBCIDID     02192000
         FMTPTRN  (LBL,DTA,DTAC),2,1,79,82        RC        HEX         02193000
         FMTPTRN  (LBL,DTA,DTAC),5,4,86,92                  RETRY HEX   02194000
         FMTPTRN  (LBL,DTA,DTAC),4,4,102,107,,,LAST         RTCA  HEX   02195000
ESTAERF  FMTPTRN  (LBLP,LBL),4,,0,,STAELAB        ESTAE ERROR FMT       02196000
         FMTPTRN  (LBL,DTA,DTAC),4,4,5,10         ASCB                  02197000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24        CPU                   02198000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),3,8,30,34   PSW       EBCIDIC PSW 02199000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),2,4,54,57   CC        EBCIDIC     02200000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),3,3,67,71   FLG       EBCIDIC     02201000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),2,1,79,82    RC      EB           02202000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),5,4,86,92    RETRY                02203000
         FMTPTRN  (LBL,DTA,DTAC),4,4,102,107,,,LAST  RTCA               02204000
ESTANAF  FMTPTRN (LBLP,LBL),4,,0,,STAELAB     N/A ESTAE FMT             02205000
         FMTPTRN (LBL,DTA,DTAC),4,4,5,10               ASCB             02206000
         FMTPTRN (LBL,DTA,DTAC),3,2,20,24              CPUID            02207000
         FMTPTRN (LBL,DTA,DTAC),3,4,30,34              PSW              02208000
         FMTPTRN (DTA,DTAC),,4,,43                 PSW                  02209000
         FMTPTRN (LBL,DTA,DTAC),2,4,54,57              COMPLETION CODE  02210000
         FMTPTRN (LBL,DTA,DTAC),3,3,67,71              FLG              02211000
         FMTPTRN (LBL,DTA,DTAC),2,1,79,82              RETURN CODE      02212000
         FMTPTRN (LBL,DTA,DTAC,DTAE),5,4,86,92          RETRY IS N/A    02213000
         FMTPTRN (LBL,DTA,DTAC),4,4,105,110,,,LAST    RTCA              02214000
ESTASTDF FMTPTRN (LBLP,LBL),4,,0,,STAELAB      ESTAE FMT                02215000
         FMTPTRN (LBL,DTA,DTAC),4,4,5,10               ASCB             02216000
         FMTPTRN (LBL,DTA,DTAC),3,2,20,24              CPUID            02217000
         FMTPTRN (LBL,DTA,DTAC),3,4,30,34              PSW              02218000
         FMTPTRN (DTA,DTAC),,4,,43                 PSW                  02219000
         FMTPTRN (LBL,DTA,DTAC),2,4,54,57              COMPLETION CODE  02220000
         FMTPTRN (LBL,DTA,DTAC),3,3,67,71              FLG              02221000
         FMTPTRN (LBL,DTA,DTAC),2,1,79,82              RETURN CODE      02222000
         FMTPTRN (LBL,DTA,DTAC),5,4,86,92            RETRY IS HEX ADDR  02223000
         FMTPTRN (LBL,DTA,DTAC),4,4,105,110,,,LAST    RTCA              02224000
FRRNAF FMTPTRN   (LBL,LBLP,DTA,DTAC,DTAE),5,4,101,108,RETLAB,,LAST      02225000
FRRSTDF FMTPTRN (LBL,LBLP,DTA,DTAC),5,4,101,108,RETLAB,,LAST            02226000
FRRF FMTPTRN (LBL,LBLP),3,,0,,FRRLAB          FRR STND FMT              02227000
         FMTPTRN    (LBL,DTA,DTAC),4,4,5,10   ASCB                      02228000
         FMTPTRN    (LBL,DTA,DTAC),3,2,20,24 CPUID                      02229000
         FMTPTRN    (LBL,DTA,DTAC),3,4,30,34 PSW                        02230000
         FMTPTRN    (DTA,DTAC),,4,,43        PSW                        02231000
         FMTPTRN    (LBL,DTA,DTAC),2,4,54,57 CC                         02232000
         FMTPTRN    (LBL,DTA,DTAC),4,4,67,72  ERRT                      02233000
         FMTPTRN    (LBL,DTA,DTAC),3,2,82,86  FLAGS                     02234000
         FMTPTRN    (LBL,DTA,DTAC),2,1,94,97,,,LAST   RC                02235000
FRRERR1 FMTPTRN (LBL,LBLP),3,,0,,FRRLAB          FRR STND FMT           02236000
         FMTPTRN    (LBL,DTA,DTAC,DTAE),4,4,5,10   ASCB                 02237000
         FMTPTRN    (LBL,DTA,DTAC),3,2,20,24 CPUID                      02238000
         FMTPTRN    (LBL,DTA,DTAC),3,4,30,34 PSW                        02239000
         FMTPTRN    (DTA,DTAC),,4,,43        PSW                        02240000
         FMTPTRN    (LBL,DTA,DTAC),2,4,54,57 CC                         02241000
         FMTPTRN    (LBL,DTA,DTAC),4,4,67,72  ERRT                      02242000
         FMTPTRN    (LBL,DTA,DTAC),3,2,82,86  FLAGS                     02243000
         FMTPTRN    (LBL,DTA,DTAC),2,1,94,97,,,LAST   RC                02244000
UIOLAB   DC    C'UIOASCBCPUPSWCSWDEV ADD'                               02245000
IOLAB    DC    C'IO '                                                   02246000
PCILAB   DC    C'PCI'                                                   02247000
EOSLAB   DC    C'EOS'                                                   02248000
IOGENLAB DC    C'ASCBCPUPSWTCBCSWSNSDEV ADD'                            02249000
SIOLAB   DC    C'SIOASCBCPUCPACC DEV ADDCAWSTATUS'                      02250000
EXTLAB   DC    C'EXTASCBCPUPSWTCBR15R1'                                 02251000
CLKCLAB  DC    C'TQE TCB'                                               02252000
SIGPLAB  DC    C'INT CPU'                                               02253000
SVCLAB   DC    C'SVCASCBCPUPSWTCBR15R0R1'                               02254000
PILAB    DC    C'PIASCBCPUPSWTCBVPAR15R1'          /*       @YM06815 */ 02255000
OUTLAB   DC    C'RNIO ASCBCPU    OUTR0'           /*         @Z40KI3O*/ 02256000
INLAB    DC    C'RNIO ASCBCPU     INR0'           /*         @Z40KI3O*/ 02257000
SRMLAB   DC    C'SRMASCBCPUR15R0R1'                                     02258000
SDSPLAB  DC    C'SDSP'                                                  02259000
LSRLAB   DC    C'LSR '                                                  02260000
DSPLAB   DC    C'DSP '                                                  02261000
DSPGNLAB DC    C'ASCBCPUPSWTCBR15R0R1'                                  02262000
SRBSLAB  DC    C'SRBASCBCPUPSWR15SRBR1TYPE SUSPENDED'                   02263000
GLOBLAB  DC    C'GLOBAL'                                                02264000
LOCLAB   DC    C'LOCAL '                                                02265000
FRRLAB   DC    C'FRRASCBCPUPSWCCERRTFLGRCRETRY'                         02266000
RETLAB   DC    C'RETRY'                                                 02267000
STAELAB  DC    C'STAEASCBCPUPSWCCFLGRCRETRYRTCA'                        02268000
STA2LAB  DC    C'RETRYRTCA'                                             02269000
SLASHA  DC   C'/A'                                                      02270000
DTAE     EQU   32                                                       02271000
DTAC     EQU   16                                                       02272000
DTAP     EQU   8                                                        02273000
DTA      EQU   4                                                        02274000
LBLP     EQU   2                                                        02275000
LBL      EQU   1                                                        02276000
@DATD    DSECT                                                          02277000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                02278000
@ENDDATD EQU   *                                                        02279000
AMDSYS03 CSECT                                                          02280000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       02281000
@01      EQU   01                                                       02282000
@02      EQU   02                                                       02283000
@03      EQU   03                                                       02284000
@04      EQU   04                                                       02285000
@05      EQU   05                                                       02286000
@06      EQU   06                                                       02287000
@07      EQU   07                                                       02288000
@08      EQU   08                                                       02289000
@09      EQU   09                                                       02290000
@10      EQU   10                                                       02291000
@11      EQU   11                                                       02292000
@12      EQU   12                                                       02293000
@13      EQU   13                                                       02294000
@14      EQU   14                                                       02295000
@15      EQU   15                                                       02296000
AEDITCBR EQU   @09                                                      02297000
REG0     EQU   @00                                                      02298000
REG1     EQU   @01                                                      02299000
I        EQU   @05                                                      02300000
REG3     EQU   @03                                                      02301000
WORKPTR  EQU   @10                                                      02302000
PREG     EQU   @08                                                      02303000
N        EQU   @04                                                      02304000
REG15    EQU   @15                                                      02305000
         ENTRY S03PTCH                                                  02306000
AMDPRTAB EQU   0                                                        02307000
DEBGFLGS EQU   AMDPRTAB+8                                               02308000
PTHFLGS1 EQU   DEBGFLGS                                                 02309000
PTHFLGS2 EQU   DEBGFLGS+1                                               02310000
INRFCFGS EQU   DEBGFLGS+2                                               02311000
IOFLGS   EQU   DEBGFLGS+3                                               02312000
STARTIME EQU   AMDPRTAB+40                                              02313000
STOPTIME EQU   AMDPRTAB+52                                              02314000
NAMES    EQU   AMDPRTAB+64                                              02315000
ADS      EQU   AMDPRTAB+104                                             02316000
AADS     EQU   ADS                                                      02317000
SIF      EQU   AMDPRTAB+124                                             02318000
SIOFLGS  EQU   SIF                                                      02319000
DVADS1   EQU   AMDPRTAB+128                                             02320000
IO       EQU   AMDPRTAB+228                                             02321000
IOFLGS2  EQU   IO                                                       02322000
DVADS2   EQU   AMDPRTAB+232                                             02323000
VCF      EQU   AMDPRTAB+332                                             02324000
SVCFLGS  EQU   VCF                                                      02325000
ALLV     EQU   SVCFLGS                                                  02326000
SELV     EQU   SVCFLGS                                                  02327000
SVCNUMS  EQU   AMDPRTAB+336                                             02328000
USR      EQU   AMDPRTAB+368                                             02329000
USRFLGS  EQU   USR                                                      02330000
USRTAB   EQU   AMDPRTAB+372                                             02331000
PI       EQU   AMDPRTAB+452                                             02332000
PIFLGS   EQU   PI                                                       02333000
ALLP     EQU   PIFLGS                                                   02334000
SELP     EQU   PIFLGS                                                   02335000
PGMNGEN  EQU   AMDPRTAB+456                                             02336000
PICODES  EQU   PGMNGEN                                                  02337000
PICODEA  EQU   PGMNGEN+2                                                02338000
GENFLAGS EQU   PGMNGEN+3                                                02339000
EXT      EQU   GENFLAGS                                                 02340000
DSP      EQU   GENFLAGS                                                 02341000
SYSM     EQU   GENFLAGS                                                 02342000
RNIO     EQU   GENFLAGS                                                 02343000
SRM      EQU   GENFLAGS                                                 02344000
RR       EQU   GENFLAGS                                                 02345000
GENFLGS1 EQU   AMDPRTAB+460                                             02346000
ESTARTME EQU   AMDPRTAB+500                                             02347000
ESTOPTME EQU   AMDPRTAB+509                                             02348000
ABDPL    EQU   0                                                        02349000
ADPLFLAG EQU   ABDPL+7                                                  02350000
ADPLFRMT EQU   ABDPL+24                                                 02351000
ADPLFMT1 EQU   ABDPL+44                                                 02352000
ADPLFMT2 EQU   ABDPL+48                                                 02353000
IOSIOTAB EQU   0                                                        02354000
@NM00003 EQU   IOSIOTAB                                                 02355000
ALL      EQU   @NM00003                                                 02356000
SELECT   EQU   @NM00003                                                 02357000
DEVTAB   EQU   IOSIOTAB+4                                               02358000
EID      EQU   0                                                        02359000
DATA     EQU   0                                                        02360000
AMDPRFMT EQU   0                                                        02361000
PLIST    EQU   0                                                        02362000
EIDPTR   EQU   PLIST+12                                                 02363000
DATAPTR  EQU   PLIST+16                                                 02364000
WKAPTR   EQU   PLIST+24                                                 02365000
SNAPARM  EQU   PLIST+28                                                 02366000
DSPREC   EQU   0                                                        02367000
DSPTCB   EQU   DSPREC+14                                                02368000
DSPR15   EQU   DSPREC+18                                                02369000
SRBREC   EQU   0                                                        02370000
SRBR15   EQU   SRBREC+14                                                02371000
SRBSRB   EQU   SRBREC+18                                                02372000
SRBTYPE  EQU   SRBREC+26                                                02373000
PIREC    EQU   0                                                        02374000
PIOPSW   EQU   PIREC+6                                                  02375000
PIINT    EQU   PIOPSW+2                                                 02376000
PITCB    EQU   PIREC+14                                                 02377000
EXTREC   EQU   0                                                        02378000
EXTPSW   EQU   EXTREC+6                                                 02379000
EXTINT   EQU   EXTPSW+2                                                 02380000
EXTTCB   EQU   EXTREC+14                                                02381000
EXTVAR   EQU   EXTREC+18                                                02382000
SVCREC   EQU   0                                                        02383000
SVCPSW   EQU   SVCREC+6                                                 02384000
SVCINT   EQU   SVCPSW+2                                                 02385000
IOREC    EQU   0                                                        02386000
IOASCB   EQU   IOREC                                                    02387000
IOTCB    EQU   IOREC+14                                                 02388000
IODEV    EQU   IOREC+26                                                 02389000
IOSENSE  EQU   IODEV                                                    02390000
IODEVA   EQU   IODEV+2                                                  02391000
SIOREC   EQU   0                                                        02392000
SIOCPA   EQU   SIOREC+6                                                 02393000
SIODEV   EQU   SIOREC+14                                                02394000
SIOCC    EQU   SIODEV                                                   02395000
SIODEVA  EQU   SIODEV+2                                                 02396000
UIOREC   EQU   0                                                        02397000
UIODEV   EQU   UIOREC+22                                                02398000
UIODEVA  EQU   UIODEV+2                                                 02399000
RNIOREC  EQU   0                                                        02400000
RNIOASCB EQU   RNIOREC                                                  02401000
RNIOBTU  EQU   RNIOREC+6                                                02402000
RNIOR0   EQU   RNIOREC+26                                               02403000
SRMREC   EQU   0                                                        02404000
SRMASCB  EQU   SRMREC                                                   02405000
FRRREC   EQU   0                                                        02406000
FRRASCB  EQU   FRRREC                                                   02407000
FRRPSW   EQU   FRRREC+6                                                 02408000
FRRFLG2  EQU   FRRREC+22                                                02409000
FRRETRY  EQU   FRRREC+25                                                02410000
STAEREC  EQU   0                                                        02411000
STAEPSW  EQU   STAEREC+6                                                02412000
STARF    EQU   STAEREC+18                                               02413000
STAFLGS  EQU   STARF                                                    02414000
STARTYCA EQU   STAEREC+22                                               02415000
STARTYA  EQU   STARTYCA                                                 02416000
STARTCA  EQU   STARTYCA+4                                               02417000
PRECM    EQU   0                                                        02418000
ABDPLPTR EQU   SNAPARM                                                  02419000
SVCIND   EQU   TWOEXPN                                                  02420000
SVCNUMBR EQU   SVCNUMS                                                  02421000
LABPT    EQU   ADPLFMT1                                                 02422000
DATAPT   EQU   ADPLFMT2                                                 02423000
SVCCODE  EQU   SVCINT                                                   02424000
SIOCC1   EQU   SIOCC                                                    02425000
RTCAPTR  EQU   STARTCA                                                  02426000
INTCODE  EQU   PIINT                                                    02427000
*                                      START UNREFERENCED COMPONENTS    02428000
PRECPUID EQU   PRECM+4                                                  02429000
PREASCB  EQU   PRECM                                                    02430000
STARCDE  EQU   STARF+3                                                  02431000
STAACF2  EQU   STAFLGS+2                                                02432000
STAMCHD  EQU   STAFLGS+1                                                02433000
STAERRA  EQU   STAFLGS                                                  02434000
STAECC   EQU   STAEREC+14                                               02435000
@NM00016 EQU   STAEREC                                                  02436000
FRRRC    EQU   FRRFLG2+2                                                02437000
FRRACF   EQU   FRRFLG2+1                                                02438000
FRRMCHD  EQU   FRRFLG2                                                  02439000
FRRFLG1  EQU   FRRREC+18                                                02440000
FRRCC    EQU   FRRREC+14                                                02441000
FRRCPU   EQU   FRRREC+4                                                 02442000
SRMROR1  EQU   SRMREC+10                                                02443000
SRMR15   EQU   SRMREC+6                                                 02444000
SRMCPUID EQU   SRMREC+4                                                 02445000
RNIOCPU  EQU   RNIOREC+4                                                02446000
@NM00015 EQU   UIODEV                                                   02447000
UIOCSW   EQU   UIOREC+14                                                02448000
UIOPSW   EQU   UIOREC+6                                                 02449000
UIOCPUID EQU   UIOREC+4                                                 02450000
UIOASCB  EQU   UIOREC                                                   02451000
SIOSTS   EQU   SIOREC+22                                                02452000
SIOCAW   EQU   SIOREC+18                                                02453000
SIOCPUID EQU   SIOREC+4                                                 02454000
SIOASCB  EQU   SIOREC                                                   02455000
IOCSW    EQU   IOREC+18                                                 02456000
IOPSW    EQU   IOREC+6                                                  02457000
IOCPUID  EQU   IOREC+4                                                  02458000
SVCROR1  EQU   SVCREC+22                                                02459000
SVCR15   EQU   SVCREC+18                                                02460000
SVCTCB   EQU   SVCREC+14                                                02461000
@NM00014 EQU   SVCPSW+4                                                 02462000
@NM00013 EQU   SVCPSW                                                   02463000
@NM00012 EQU   SVCREC                                                   02464000
@NM00011 EQU   EXTPSW+4                                                 02465000
@NM00010 EQU   EXTPSW                                                   02466000
@NM00009 EQU   EXTREC                                                   02467000
PIR1     EQU   PIREC+26                                                 02468000
PIR15    EQU   PIREC+22                                                 02469000
PIVPA    EQU   PIREC+18                                                 02470000
@NM00008 EQU   PIOPSW+4                                                 02471000
@NM00007 EQU   PIOPSW                                                   02472000
PICPUID  EQU   PIREC+4                                                  02473000
PIASCB   EQU   PIREC                                                    02474000
SRBR1    EQU   SRBREC+22                                                02475000
SRBPSW   EQU   SRBREC+6                                                 02476000
@NM00006 EQU   SRBREC                                                   02477000
DSPROR1  EQU   DSPREC+22                                                02478000
DSPPSW   EQU   DSPREC+6                                                 02479000
@NM00005 EQU   DSPREC                                                   02480000
FMTPTR   EQU   PLIST+20                                                 02481000
OPTS     EQU   PLIST+8                                                  02482000
OUTBUF   EQU   PLIST+4                                                  02483000
INREC    EQU   PLIST                                                    02484000
RESBIT   EQU   @NM00003                                                 02485000
ADPLEXT  EQU   ABDPL+52                                                 02486000
ADPLCOM4 EQU   ABDPL+40                                                 02487000
ADPLCOM3 EQU   ABDPL+36                                                 02488000
ADPLCOM2 EQU   ABDPL+32                                                 02489000
ADPLCOM1 EQU   ABDPL+28                                                 02490000
ADPLMEMA EQU   ABDPL+20                                                 02491000
ADPLCVT  EQU   ABDPL+16                                                 02492000
ADPLPRNT EQU   ABDPL+12                                                 02493000
ADPLBUF  EQU   ABDPL+8                                                  02494000
@NM00002 EQU   ADPLFLAG                                                 02495000
ADPLSYTM EQU   ADPLFLAG                                                 02496000
ADPLSNPR EQU   ADPLFLAG                                                 02497000
ADPLSBPL EQU   ABDPL+6                                                  02498000
ADPLASID EQU   ABDPL+4                                                  02499000
ADPLTCB  EQU   ABDPL                                                    02500000
RESERVED EQU   AMDPRTAB+522                                             02501000
CVTTZONE EQU   AMDPRTAB+518                                             02502000
ESPSEC   EQU   ESTOPTME+7                                               02503000
ESPMIN   EQU   ESTOPTME+5                                               02504000
ESPHR    EQU   ESTOPTME+3                                               02505000
ESPDAY   EQU   ESTOPTME                                                 02506000
ESSEC    EQU   ESTARTME+7                                               02507000
ESMIN    EQU   ESTARTME+5                                               02508000
ESHR     EQU   ESTARTME+3                                               02509000
ESDAY    EQU   ESTARTME                                                 02510000
ADTSBUF  EQU   AMDPRTAB+496                                             02511000
OFSTDATA EQU   AMDPRTAB+494                                             02512000
OFSTEID  EQU   AMDPRTAB+492                                             02513000
AFRMAD   EQU   AMDPRTAB+488                                             02514000
REENTWKA EQU   AMDPRTAB+484                                             02515000
PRFMTADD EQU   AMDPRTAB+480                                             02516000
AEIOCT   EQU   AMDPRTAB+476                                             02517000
EXITADDR EQU   AMDPRTAB+472                                             02518000
EXITNM   EQU   AMDPRTAB+464                                             02519000
RECDLL   EQU   AMDPRTAB+461                                             02520000
@NM00001 EQU   GENFLGS1                                                 02521000
FIRSTHSW EQU   GENFLGS1                                                 02522000
TSFOUND  EQU   GENFLGS1                                                 02523000
EOFINPRO EQU   GENFLGS1                                                 02524000
TS       EQU   GENFLGS1                                                 02525000
EOF      EQU   GENFLAGS                                                 02526000
SYS      EQU   GENFLAGS                                                 02527000
Q        EQU   PI+1                                                     02528000
P01R     EQU   PIFLGS                                                   02529000
USRNGTAB EQU   USRTAB                                                   02530000
O        EQU   USR+1                                                    02531000
N01R     EQU   USRFLGS                                                  02532000
SELU     EQU   USRFLGS                                                  02533000
ALLU     EQU   USRFLGS                                                  02534000
M        EQU   VCF+1                                                    02535000
L        EQU   SVCFLGS                                                  02536000
IODVADS  EQU   DVADS2                                                   02537000
K01RES   EQU   IO+1                                                     02538000
JJ       EQU   IOFLGS2                                                  02539000
SELI     EQU   IOFLGS2                                                  02540000
ALLI     EQU   IOFLGS2                                                  02541000
SIODVADS EQU   DVADS1                                                   02542000
II       EQU   SIF+1                                                    02543000
H        EQU   SIOFLGS                                                  02544000
NOEQU    EQU   SIOFLGS                                                  02545000
EQUIV    EQU   SIOFLGS                                                  02546000
SELS     EQU   SIOFLGS                                                  02547000
ALLS     EQU   SIOFLGS                                                  02548000
ASCBADDR EQU   AADS                                                     02549000
JOBNAMES EQU   NAMES                                                    02550000
DAY2     EQU   STOPTIME+10                                              02551000
F        EQU   STOPTIME+8                                               02552000
TIME2    EQU   STOPTIME                                                 02553000
DAY      EQU   STARTIME+10                                              02554000
D        EQU   STARTIME+8                                               02555000
TIME     EQU   STARTIME                                                 02556000
DDNAME   EQU   AMDPRTAB+32                                              02557000
USEREXIT EQU   AMDPRTAB+24                                              02558000
GTFWDPTR EQU   AMDPRTAB+20                                              02559000
C        EQU   DEBGFLGS+4                                               02560000
B        EQU   IOFLGS                                                   02561000
GETEOF   EQU   IOFLGS                                                   02562000
DMDFMT   EQU   INRFCFGS                                                 02563000
EDITSTOP EQU   INRFCFGS                                                 02564000
EXTTRC   EQU   INRFCFGS                                                 02565000
RET      EQU   INRFCFGS                                                 02566000
FMT      EQU   INRFCFGS                                                 02567000
SPIE     EQU   INRFCFGS                                                 02568000
TERM     EQU   INRFCFGS                                                 02569000
FLMODE   EQU   INRFCFGS                                                 02570000
REMAIN   EQU   PTHFLGS2                                                 02571000
APP      EQU   PTHFLGS2                                                 02572000
REXT     EQU   PTHFLGS1                                                 02573000
FRM      EQU   PTHFLGS1                                                 02574000
FLT      EQU   PTHFLGS1                                                 02575000
HEX      EQU   PTHFLGS1                                                 02576000
CON      EQU   PTHFLGS1                                                 02577000
GET      EQU   PTHFLGS1                                                 02578000
SCN      EQU   PTHFLGS1                                                 02579000
ROOT     EQU   PTHFLGS1                                                 02580000
CURREC   EQU   AMDPRTAB+4                                               02581000
AFMG     EQU   AMDPRTAB                                                 02582000
*                                      END UNREFERENCED COMPONENTS      02583000
@RF00132 EQU   IOSPLIT                                                  02584000
@RT00139 EQU   SETRET8                                                  02585000
@RT00141 EQU   CALLHEX                                                  02586000
@RT00144 EQU   SETRET8                                                  02587000
@RT00146 EQU   EXIT                                                     02588000
@RC00184 EQU   FORMAT                                                   02589000
@RT00216 EQU   CALLHEX                                                  02590000
@RF00216 EQU   SIOFMT                                                   02591000
@RT00220 EQU   SETRET8                                                  02592000
@RT00222 EQU   CALLHEX                                                  02593000
@RT00225 EQU   SETRET8                                                  02594000
@RT00227 EQU   EXIT1                                                    02595000
@RC00237 EQU   FORMAT                                                   02596000
@RT00252 EQU   CALLHEX                                                  02597000
@RF00252 EQU   UIOFMT                                                   02598000
@RT00256 EQU   SETRET8                                                  02599000
@RT00258 EQU   CALLHEX                                                  02600000
@RT00261 EQU   SETRET8                                                  02601000
@RT00263 EQU   EXIT2                                                    02602000
@RT00270 EQU   SETRET8                                                  02603000
@RT00272 EQU   CALLHEX                                                  02604000
@RC00279 EQU   FORMAT                                                   02605000
@RC00286 EQU   FORMAT                                                   02606000
@RT00291 EQU   SETRET8                                                  02607000
@RT00293 EQU   CALLHEX                                                  02608000
@RC00304 EQU   FORMAT                                                   02609000
@RT00310 EQU   CALLHEX                                                  02610000
@RF00310 EQU   SVCSELPT                                                 02611000
@RT00314 EQU   SETRET8                                                  02612000
@RT00316 EQU   CALLHEX                                                  02613000
@RT00333 EQU   SVCSELPT                                                 02614000
@RT00339 EQU   SETRET8                                                  02615000
@RT00341 EQU   CALLHEX                                                  02616000
@RC00361 EQU   EXTEXIT                                                  02617000
@RF00359 EQU   EXITRTN                                                  02618000
@RT00369 EQU   CALLHEX                                                  02619000
@RF00369 EQU   SELPIPAT                                                 02620000
@RT00373 EQU   SETRET8                                                  02621000
@RT00375 EQU   CALLHEX                                                  02622000
@RT00379 EQU   SELPIPAT                                                 02623000
@RF00379 EQU   SETRET8                                                  02624000
@RT00383 EQU   SELPIPAT                                                 02625000
@RF00383 EQU   SETRET8                                                  02626000
@RT00387 EQU   SELPIPAT                                                 02627000
@RF00387 EQU   SETRET8                                                  02628000
@RT00396 EQU   SETRET8                                                  02629000
@RC00398 EQU   FORMAT                                                   02630000
@RT00402 EQU   SETRET8                                                  02631000
@RT00404 EQU   CALLHEX                                                  02632000
@RC00408 EQU   @RC00406                                                 02633000
@RC00416 EQU   @RC00413                                                 02634000
@RC00414 EQU   @RC00413                                                 02635000
@RC00425 EQU   FORMAT                                                   02636000
@RT00429 EQU   SETRET8                                                  02637000
@RT00431 EQU   CALLHEX                                                  02638000
@RC00433 EQU   FORMAT                                                   02639000
@RT00437 EQU   SETRET8                                                  02640000
@RT00439 EQU   CALLHEX                                                  02641000
@RT00441 EQU   STAERTN                                                  02642000
@RC00454 EQU   FORMAT                                                   02643000
@RC00470 EQU   FORMAT                                                   02644000
@RC00281 EQU   @RC00279                                                 02645000
@ENDDATA EQU   *                                                        02646000
         END   AMDSYS03,(C'PLS0933',0701,77255)                         02647000
./  ADD  SSI=72550012,NAME=AMDSYS04
         TITLE 'AMDSYS04 FORMAT APPENDAGE FOR AHLTFOR                  *00001000
                        '                                               00002000
AMDSYS04 CSECT ,                                                01S0001 00003000
@MAINENT DS    0H                                               01S0001 00004000
         USING *,@15                                            01S0001 00005000
         B     @PROLOG                                          01S0001 00006000
         DC    AL1(16)                                          01S0001 00007000
         DC    C'AMDSYS04  77.255'                              01S0001 00008000
         DROP  @15                                                      00009000
@PROLOG  STM   @14,@12,12(@13)                                  01S0001 00010000
         BALR  @12,0                                            01S0001 00011000
@PSTART  DS    0H                                               01S0001 00012000
         USING @PSTART,@12                                      01S0001 00013000
     EQUATES                                                            00014000
*                                                               01S0032 00015000
*   /*****************************************************************/ 00016000
*   /*                                                               */ 00017000
*   /* HOUSEKEEPING, REGISTER SAVING, REGISTER AND POINTER LOADING   */ 00018000
*   /* ETC.                                                          */ 00019000
*   /*                                                               */ 00020000
*   /*****************************************************************/ 00021000
*                                                               01S0033 00022000
*   R3PLPTR=R1PLPTR;                /* SETUP ADDRESSIBILITY TO  01S0033 00023000
*                                      OURPLIST                      */ 00024000
         LR    R3PLPTR,R1PLPTR                                  01S0033 00025000
*   R4GTMPTR=GTMPTR;                /* SETUP ADDRESSIBILITY TO THE      00026000
*                                      GETMAINED AREA                */ 00027000
         L     R4GTMPTR,GTMPTR(,R3PLPTR)                        01S0034 00028000
*   BACKPTR=R13SAPTR;               /* SAVE HIS SAVE AREA PTR IN OURS*/ 00029000
         ST    R13SAPTR,BACKPTR(,R4GTMPTR)                      01S0035 00030000
*   R14RTN=ADDR(GMAREA);            /* GET THE ADDRESS OF OUR SAVE      00031000
*                                      AREA                          */ 00032000
         LR    R14RTN,R4GTMPTR                                  01S0036 00033000
*   HISFOR=R14RTN;                  /* SAVE THE ADDR OF OUR AREA IN     00034000
*                                      HIS                           */ 00035000
         ST    R14RTN,HISFOR(,R13SAPTR)                         01S0037 00036000
*   R13SAPTR=R14RTN;                /* PUT OUR SAVE AREA ADDR IN REG    00037000
*                                      13                            */ 00038000
         LR    R13SAPTR,R14RTN                                  01S0038 00039000
*   R5RECPTR=DTAPTR;                /* SETUP ADDRESSIBILITY TO THE      00040000
*                                      RECORD                        */ 00041000
         L     R5RECPTR,DTAPTR(,R3PLPTR)                        01S0039 00042000
*   R1PLPTR=FPLPTR;                 /* PLIST ADDRESS IN IN FPLPTR    */ 00043000
*                                                               01S0040 00044000
         L     R1PLPTR,FPLPTR(,R3PLPTR)                         01S0040 00045000
*   /*****************************************************************/ 00046000
*   /*                                                               */ 00047000
*   /* DETERMINE IF THIS IS THE FIRST OR SECOND ENTRY FOR THS RECORD */ 00048000
*   /*                                                               */ 00049000
*   /*****************************************************************/ 00050000
*                                                               01S0041 00051000
*   IF SECENTRY¬=0 THEN             /* CHECK TO SEE IF THIS IS A        00052000
*                                      SECOND ENTRY                  */ 00053000
         LH    @08,SECENTRY(,R4GTMPTR)                          01S0041 00054000
         N     @08,@CF00575                                     01S0041 00055000
         LTR   @08,@08                                          01S0041 00056000
         BZ    @RF00041                                         01S0041 00057000
*     IF SECENTRY=IEAFRR THEN       /* CHECK TO SEE WHO SHOULD GET      00058000
*                                      CONTROL                       */ 00059000
         CLC   SECENTRY(2,R4GTMPTR),@CH00060                    01S0042 00060000
         BNE   @RF00042                                         01S0042 00061000
*       DO;                                                     02S0043 00062000
*                                                               02S0043 00063000
*         /***********************************************************/ 00064000
*         /*                                                         */ 00065000
*         /* THIS ROUTINE IS THE SECOND ENTRY TO AMDSYS04 FOR THE    */ 00066000
*         /* FORMATTING OF THE FRR RECORD. IT WILL OUTPUT THE RETURN */ 00067000
*         /* CODE AND RETRY FIELDS AS HEX OR CHARACTER DATA DEPENDING*/ 00068000
*         /* ON THE CONTENTS OF THE RETURN CODE FIELD. THE           */ 00069000
*         /* POSSSIBLITIES ARE BOTH FIELDS HEX IF THE RETURN CODE IS */ 00070000
*         /* 4, RETRY ADDR N/A FOR ANY OTHER RETURN CODE AND BOTH    */ 00071000
*         /* FIELDS WITH ASTERISKS IF THEY WERE IN ERROR             */ 00072000
*         /*                                                         */ 00073000
*         /***********************************************************/ 00074000
*                                                               02S0044 00075000
*         ;                                                     02S0044 00076000
*                                                               02S0044 00077000
*         /***********************************************************/ 00078000
*         /*                                                         */ 00079000
*         /* GET LABEL AND DATA POINTERS                             */ 00080000
*         /*                                                         */ 00081000
*         /***********************************************************/ 00082000
*                                                               02S0045 00083000
*         ADPLFMT1=ADDR(FRRLBL2);   /* SETUP THE ADDRESS OF LABELS IN   00084000
*                                      THE FORMAT PLIST              */ 00085000
         LA    @08,FRRLBL2                                      02S0045 00086000
         ST    @08,ADPLFMT1(,ABDPLPTR)                          02S0045 00087000
*         ADPLFMT2=ADDR(FRRMFLGS);  /* SETUP THE ADDRESS OF THE DATA    00088000
*                                      TO BE FORMATTED               */ 00089000
*                                                               02S0046 00090000
         LA    @08,FRRMFLGS(,R5RECPTR)                          02S0046 00091000
         ST    @08,ADPLFMT2(,ABDPLPTR)                          02S0046 00092000
*         /***********************************************************/ 00093000
*         /*                                                         */ 00094000
*         /* DECIDE WHICH FORMAT PATTERN GROUP TO USE                */ 00095000
*         /*                                                         */ 00096000
*         /***********************************************************/ 00097000
*                                                               02S0047 00098000
*         IF FRRFRCDE=ASTER THEN    /* CHECK TO SEE IF THE RET CODE     00099000
*                                      FIELD IS IN ERROR TO DETERMINE   00100000
*                                      THE FORMAT PATTERN TO USE     */ 00101000
         CLC   FRRFRCDE(1,R5RECPTR),ASTER                       02S0047 00102000
         BNE   @RF00047                                         02S0047 00103000
*           R0FMTPTR=ADDR(FRRF06);  /* IT IS SO SETUP THE APPROPRIATE   00104000
*                                      FORMAT PATTERN ADDRESS TO        00105000
*                                      OUTPUT RET CODE AND RETRY ADDR   00106000
*                                      WITH ASTER                    */ 00107000
         LA    R0FMTPTR,FRRF06                                  02S0048 00108000
*         ELSE                      /* ITS NOT IN ERROR BUT THE RETRY   00109000
*                                      ADDR MAY HAVE N/A             */ 00110000
*           IF FRRFRCDE=RETRY THEN  /* CHECK FOR A RET CODE OF RETRY */ 00111000
         B     @RC00047                                         02S0049 00112000
@RF00047 CLI   FRRFRCDE(R5RECPTR),4                             02S0049 00113000
         BNE   @RF00049                                         02S0049 00114000
*             R0FMTPTR=ADDR(FRRF05);/* IT IS RETRY SO BOTH FIELDS       00115000
*                                      WILL BE HEX                   */ 00116000
         LA    R0FMTPTR,FRRF05                                  02S0050 00117000
*           ELSE                    /* RET CODE IS NOT RETRY SO RETRY   00118000
*                                      ADDR WILL BE N/A              */ 00119000
*             R0FMTPTR=ADDR(FRRF07);/* RET COE IS HEX AND RETRY IS      00120000
*                                      N/A                           */ 00121000
*                                                               02S0051 00122000
         B     @RC00049                                         02S0051 00123000
@RF00049 LA    R0FMTPTR,FRRF07                                  02S0051 00124000
*         /***********************************************************/ 00125000
*         /*                                                         */ 00126000
*         /* CALL THE FORMATTING ROUTINE AND THEN RETURN TO THE      */ 00127000
*         /* CALLER                                                  */ 00128000
*         /*                                                         */ 00129000
*         /***********************************************************/ 00130000
*                                                               02S0052 00131000
*         CALL AMDPRFMT;            /* CALL THE FORMATTING ROUTINE   */ 00132000
@RC00049 DS    0H                                               02S0052 00133000
@RC00047 L     @15,FMTPTR(,R3PLPTR)                             02S0052 00134000
         BALR  @14,@15                                          02S0052 00135000
*         SECENTRY=0;               /* RESET THE SECOND ENTRY   02S0053 00136000
*                                      INDICATOR                     */ 00137000
         SLR   @08,@08                                          02S0053 00138000
         STH   @08,SECENTRY(,R4GTMPTR)                          02S0053 00139000
*         RFY                                                   02S0054 00140000
*           R15RC RSTD;                                         02S0054 00141000
*         R15RC=RCNEWREC;           /* TELL THE CALLER TO OUTPUT THIS   00142000
*                                      RECORD AND GET US A NEW ONE   */ 00143000
         LA    R15RC,4                                          02S0055 00144000
*         RFY                                                   02S0056 00145000
*           R15RC UNRSTD;                                       02S0056 00146000
*       END;                                                    02S0057 00147000
*     ELSE                          /* WASNT FRR SO SEE IF IT IS STAE*/ 00148000
*       IF SECENTRY=IEASTAE THEN                                01S0058 00149000
         B     @RC00042                                         01S0058 00150000
@RF00042 CLC   SECENTRY(2,R4GTMPTR),@CH00058                    01S0058 00151000
         BNE   @RF00058                                         01S0058 00152000
*         DO;                                                   02S0059 00153000
*                                                               02S0059 00154000
*           /*********************************************************/ 00155000
*           /*                                                       */ 00156000
*           /* THIS ROUTINE OUTPUTS THE SECOND LINE OF THE STAE      */ 00157000
*           /* RECORD. THERE ARE THREE FIELDS, RETRUN CODE, RETRY    */ 00158000
*           /* ADDRESSAND SDWA ADDRESS. SDWA ADDRESS IS ALWAYS HEX.  */ 00159000
*           /* THE OTHER TWO FIELDS CAN BE HEX OR CHARACTER DATA. IT */ 00160000
*           /* WILL OUTPUT THE RETURN CODE AND RETRY FIELDS AS HEX OR*/ 00161000
*           /* CHARACTER DATA DEPENDING ON THE CONTENTS OF THE RETURN*/ 00162000
*           /* CODE FIELD. THE POSSSIBLITIES ARE BOTH FIELDS HEX IF  */ 00163000
*           /* THE RETURN CODE IS 4, RETRY ADDR N/A FOR ANY OTHER    */ 00164000
*           /* RETURN CODE AND BOTH FIELDS WITH ASTERISKS IF THEY    */ 00165000
*           /* WERE IN ERROR                                         */ 00166000
*           /*                                                       */ 00167000
*           /*********************************************************/ 00168000
*                                                               02S0060 00169000
*           ;                                                   02S0060 00170000
*                                                               02S0060 00171000
*           /*********************************************************/ 00172000
*           /*                                                       */ 00173000
*           /* GET THE LABEL AND DATA POINTERS                       */ 00174000
*           /*                                                       */ 00175000
*           /*********************************************************/ 00176000
*                                                               02S0061 00177000
*           ADPLFMT1=ADDR(STALBL2); /* SETUP THE ADDRESS OF THE 02S0061 00178000
*                                      OUTPUT LABELS IN THE FORMAT      00179000
*                                      PLIST                         */ 00180000
         LA    @08,STALBL2                                      02S0061 00181000
         ST    @08,ADPLFMT1(,ABDPLPTR)                          02S0061 00182000
*           ADPLFMT2=ADDR(STAMFLGS);/* SETUP THE ADDRESS OF THE DATA    00183000
*                                      TO BE OUTPUT IN THE FORMAT       00184000
*                                      PLIST                         */ 00185000
*                                                               02S0062 00186000
         LA    @08,STAMFLGS(,R5RECPTR)                          02S0062 00187000
         ST    @08,ADPLFMT2(,ABDPLPTR)                          02S0062 00188000
*           /*********************************************************/ 00189000
*           /*                                                       */ 00190000
*           /* DECIDE WHICH FORMAT PATTERN GROUP TO USE              */ 00191000
*           /*                                                       */ 00192000
*           /*********************************************************/ 00193000
*                                                               02S0063 00194000
*           IF STAFRCDE=ASTER THEN  /* CHECK TO SEE IF THE RET CODE     00195000
*                                      IS IN ERROR                   */ 00196000
         CLC   STAFRCDE(1,R5RECPTR),ASTER                       02S0063 00197000
         BNE   @RF00063                                         02S0063 00198000
*             R0FMTPTR=ADDR(STAF06);/* IT IS SO BOTH RET CODE AND       00199000
*                                      RETRY ADDR WILL HAVE ASTERISKS*/ 00200000
         LA    R0FMTPTR,STAF06                                  02S0064 00201000
*           ELSE                    /* RET CODE IS GOOD              */ 00202000
*             IF STAFRCDE=RETRY THEN/* CHECK FOR RET CODE OF RETRY TO   00203000
*                                      DETERMINE IF RETRY ADDRESS IS    00204000
*                                      HEX                           */ 00205000
         B     @RC00063                                         02S0065 00206000
@RF00063 CLI   STAFRCDE(R5RECPTR),4                             02S0065 00207000
         BNE   @RF00065                                         02S0065 00208000
*               IF STAFLGS='U/A' THEN/* CK DATA                      */ 00209000
         CLC   STAFLGS(3,R5RECPTR),@CC00451                     02S0066 00210000
         BNE   @RF00066                                         02S0066 00211000
*                 R0FMTPTR=ADDR(STAF07);/* GET ADDR OF THE FRMT 02S0067 00212000
*                                      PATTERN                       */ 00213000
         LA    R0FMTPTR,STAF07                                  02S0067 00214000
*               ELSE                                            02S0068 00215000
*                 R0FMTPTR=ADDR(STAF04);/* RETRY ADDRESS IS HEX SO      00216000
*                                      GET THAT FORMAT PATTERN       */ 00217000
         B     @RC00066                                         02S0068 00218000
@RF00066 LA    R0FMTPTR,STAF04                                  02S0068 00219000
*             ELSE                  /* IT IS SOME OTHER RET CODE        00220000
*                                      OTHER THAT RETRY              */ 00221000
*               IF STAFLGS='U/A' THEN/* CK THE DATA                  */ 00222000
         B     @RC00065                                         02S0069 00223000
@RF00065 CLC   STAFLGS(3,R5RECPTR),@CC00451                     02S0069 00224000
         BNE   @RF00069                                         02S0069 00225000
*                 R0FMTPTR=ADDR(STAF05);/* RETRY ADDRESS WILL BE N/A */ 00226000
         LA    R0FMTPTR,STAF05                                  02S0070 00227000
*               ELSE                /* FLAGS ARE IN HEX              */ 00228000
*                 R0FMTPTR=ADDR(STAF08);/* GET THE PEOPER FORMAT        00229000
*                                      PATTERN                       */ 00230000
*                                                               02S0071 00231000
         B     @RC00069                                         02S0071 00232000
@RF00069 LA    R0FMTPTR,STAF08                                  02S0071 00233000
*           /*********************************************************/ 00234000
*           /*                                                       */ 00235000
*           /* CALL THE FORMATTING ROUTINE AND THEN RETURN TO THE    */ 00236000
*           /* CALLER                                                */ 00237000
*           /*                                                       */ 00238000
*           /*********************************************************/ 00239000
*                                                               02S0072 00240000
*           CALL AMDPRFMT;          /* CALL FORMATTING ROUTINE       */ 00241000
@RC00069 DS    0H                                               02S0072 00242000
@RC00065 DS    0H                                               02S0072 00243000
@RC00063 L     @15,FMTPTR(,R3PLPTR)                             02S0072 00244000
         BALR  @14,@15                                          02S0072 00245000
*           SECENTRY=0;             /* RESET SECOND ENTRY INDICATOR  */ 00246000
         SLR   @08,@08                                          02S0073 00247000
         STH   @08,SECENTRY(,R4GTMPTR)                          02S0073 00248000
*           RFY                                                 02S0074 00249000
*             R15RC RSTD;                                       02S0074 00250000
*           R15RC=RCNEWREC;         /* TELL THE CALLER TO OUTPUT THIS   00251000
*                                      RECORD AND GET US A NEW ONE   */ 00252000
         LA    R15RC,4                                          02S0075 00253000
*           RFY                                                 02S0076 00254000
*             R15RC UNRSTD;                                     02S0076 00255000
*         END;                                                  02S0077 00256000
*       ELSE                        /* MUST BE SOME KIND OF ERROR       00257000
*                                      SINCE ONLY FRR AND STAE CAN      00258000
*                                      HAVE A SECOND ENTRY           */ 00259000
*         DO;                                                   01S0078 00260000
         B     @RC00058                                         01S0078 00261000
@RF00058 DS    0H                                               01S0079 00262000
*           RFY                                                 01S0079 00263000
*             R15RC RSTD;                                       01S0079 00264000
*           R15RC=RCIGNORE;         /* TELL THE CALLER TO IGNORE THIS   00265000
*                                      RECORD AND GET US A NEW ONE   */ 00266000
         LA    R15RC,8                                          01S0080 00267000
*           RFY                                                 01S0081 00268000
*             R15RC UNRSTD;                                     01S0081 00269000
*         END;                                                  01S0082 00270000
*                                                               01S0082 00271000
*   /*****************************************************************/ 00272000
*   /*                                                               */ 00273000
*   /* DETERMINE WHETHER THIS IS AN ERROR RECORD OR A GOOD ONE       */ 00274000
*   /*                                                               */ 00275000
*   /*****************************************************************/ 00276000
*                                                               01S0083 00277000
*   ELSE                            /* THIS IS A FIRST ENTRY SO LETS    00278000
*                                      DETERMINE WHAT TYPE OF RECORD */ 00279000
*     IF ERRASCB=CATERIND THEN      /* CHECK TO SEE IF THIS IS AN       00280000
*                                      ERROR REC                     */ 00281000
         B     @RC00041                                         01S0083 00282000
@RF00041 CLC   ERRASCB(2,R5RECPTR),@CH00396                     01S0083 00283000
         BNE   @RF00083                                         01S0083 00284000
*       DO;                                                     01S0084 00285000
*         RFY                                                   01S0085 00286000
*           R15RC RSTD;                                         01S0085 00287000
*         R15RC=RCHEXDMP;           /* TELL THE CALLER TO IGNORE THIS   00288000
*                                      RECORD AND GET US A NEW ONE   */ 00289000
         LA    R15RC,12                                         01S0086 00290000
*         RFY                                                   01S0087 00291000
*           R15RC UNRSTD;                                       01S0087 00292000
*       END;                                                    01S0088 00293000
*                                                               01S0088 00294000
*   /*****************************************************************/ 00295000
*   /*                                                               */ 00296000
*   /* THE RECORD IS OK SO LETS FIND OUT WHO IT IS FROM AND WHAT WE  */ 00297000
*   /* WANT TO DO ABOUT IT                                           */ 00298000
*   /*                                                               */ 00299000
*   /*****************************************************************/ 00300000
*                                                               01S0089 00301000
*     ELSE                          /* IT IS A GOOD RECORD SO FIND      00302000
*                                      OUT FROM WHO                  */ 00303000
*       IF EID=IRASRM THEN          /* CHECK FOR SRM                 */ 00304000
         B     @RC00083                                         01S0089 00305000
@RF00083 L     @08,EIDPTR(,R3PLPTR)                             01S0089 00306000
         CLC   EID(2,@08),@CH00075                              01S0089 00307000
         BNE   @RF00089                                         01S0089 00308000
*         DO;                                                   02S0090 00309000
*                                                               02S0090 00310000
*           /*********************************************************/ 00311000
*           /*                                                       */ 00312000
*           /* THIS IS THE ROUTINE THAT OUTPUT THE RECORDS FOR SRM.  */ 00313000
*           /* THE ONLY DECISION MAKING THAT NEEDS TO BE DONE IS TO  */ 00314000
*           /* CHECK THE ASCB FIELD. THE ONLY OTHER FIELD THAT CAN BE*/ 00315000
*           /* IN ERROR IS THE JOBNAME, BUT IT IS ALWAYS CHARACTER   */ 00316000
*           /* DATA AND THERFORE NEED NOT HAVE SPECIAL FORMATTING    */ 00317000
*           /* CONSIDERATIONS                                        */ 00318000
*           /*                                                       */ 00319000
*           /*********************************************************/ 00320000
*                                                               02S0091 00321000
*           ;                                                   02S0091 00322000
*           IF SYS=ON|SRM=ON THEN   /* CHECK TO SEE IF WE WANT TO       00323000
*                                      FORMAT THIS RECORD            */ 00324000
         TM    SYS(AEDITCBR),B'00100100'                        02S0092 00325000
         BZ    @RF00092                                         02S0092 00326000
*             DO;                                               02S0093 00327000
*                                                               02S0093 00328000
*               /*****************************************************/ 00329000
*               /*                                                   */ 00330000
*               /* GET THE LABEL AND DATA POINTERS                   */ 00331000
*               /*                                                   */ 00332000
*               /*****************************************************/ 00333000
*                                                               02S0094 00334000
*               ADPLFMT1=ADDR(SRMLBL);/* SETUP ADDRESS OF THE LABELS    00335000
*                                      IN THE FORMAT PLIST           */ 00336000
         LA    @08,SRMLBL                                       02S0094 00337000
         ST    @08,ADPLFMT1(,ABDPLPTR)                          02S0094 00338000
*               ADPLFMT2=ADDR(SRMREC);/* SETUP THE ADDRESS OF THE       00339000
*                                      DATA IN THE FORMAT PLIST      */ 00340000
*                                                               02S0095 00341000
         ST    R5RECPTR,ADPLFMT2(,ABDPLPTR)                     02S0095 00342000
*               /*****************************************************/ 00343000
*               /*                                                   */ 00344000
*               /* DECIDE WHICH FORMAT PATTERN GROUP TO USE          */ 00345000
*               /*                                                   */ 00346000
*               /*****************************************************/ 00347000
*                                                               02S0096 00348000
*               IF SRMASCB=ASTER THEN/* CHECK TO SEE IF THE ASCB        00349000
*                                      ADDRESS IS IN ERROR           */ 00350000
         CLC   SRMASCB(4,R5RECPTR),ASTER                        02S0096 00351000
         BNE   @RF00096                                         02S0096 00352000
*                 R0FMTPTR=ADDR(SRMF02);/* ASCB IS IN ERROR SO WE       00353000
*                                      WANT TO OUTPUT IT AS CHARACTER   00354000
*                                      DATA                          */ 00355000
         LA    R0FMTPTR,SRMF02                                  02S0097 00356000
*               ELSE                /* ASCB ADDRESS IS OK SO WE WILL    00357000
*                                      OUTPUT IT IN HEX              */ 00358000
*                 R0FMTPTR=ADDR(SRMF01);                        02S0098 00359000
*                                                               02S0098 00360000
         B     @RC00096                                         02S0098 00361000
@RF00096 LA    R0FMTPTR,SRMF01                                  02S0098 00362000
*               /*****************************************************/ 00363000
*               /*                                                   */ 00364000
*               /* CALL THE FORMATTING ROUTINE AND THEN RETURN TO THE*/ 00365000
*               /* CALLER                                            */ 00366000
*               /*                                                   */ 00367000
*               /*****************************************************/ 00368000
*                                                               02S0099 00369000
*               CALL AMDPRFMT;      /* CALL FORMATTING ROUTINE       */ 00370000
@RC00096 L     @15,FMTPTR(,R3PLPTR)                             02S0099 00371000
         BALR  @14,@15                                          02S0099 00372000
*               RFY                                             02S0100 00373000
*                 R15RC RSTD;                                   02S0100 00374000
*               R15RC=RCNEWREC;     /* TELL CALLER TO OUTPUT THIS       00375000
*                                      RECORD AND GET A NEW ONE      */ 00376000
         LA    R15RC,4                                          02S0101 00377000
*             END;                                              02S0102 00378000
*           ELSE                                                02S0103 00379000
*             R15RC=RCIGNORE;       /* TELL CALLER TO IGNORE THIS       00380000
*                                      RECORD                        */ 00381000
         B     @RC00092                                         02S0103 00382000
@RF00092 LA    R15RC,8                                          02S0103 00383000
*           RFY                                                 02S0104 00384000
*             R15RC UNRSTD;                                     02S0104 00385000
@RC00092 DS    0H                                               02S0105 00386000
*         END;                                                  02S0105 00387000
*       ELSE                        /* NOT SRM                       */ 00388000
*         IF EID=ISPTPIO1|EID=ISPTPIO2 THEN/* CHECK FOR RNIO         */ 00389000
         B     @RC00089                                         01S0106 00390000
@RF00089 L     @08,EIDPTR(,R3PLPTR)                             01S0106 00391000
         CLC   EID(2,@08),@CH00062                              01S0106 00392000
         BE    @RT00106                                         01S0106 00393000
         CLC   EID(2,@08),@CH00064                              01S0106 00394000
         BNE   @RF00106                                         01S0106 00395000
@RT00106 DS    0H                                               01S0107 00396000
*           DO;                                                 02S0107 00397000
*                                                               02S0107 00398000
*             /*******************************************************/ 00399000
*             /*                                                     */ 00400000
*             /* THIS ROUTINE OUTPUTS THE RECORDS FOR THE RNIO. FIRST*/ 00401000
*             /* DECISION THAT WE MUST MAKE IS WHETHER THE RECORDIS  */ 00402000
*             /* RNIO OUT OR RNIO IN SO THAT WE CAN OUTPUT THE PROPER*/ 00403000
*             /* LABELS. THERE ARE FOUR COMBINATIONS OF FIELDS THAT  */ 00404000
*             /* CAN OCCUR. THEY ARE ALL FIELDS NORMAL, ASCB IN      */ 00405000
*             /* ERROR, BTU IN ERROR AND BOTH ASCB AND BUT IN ERROR. */ 00406000
*             /* WE MAKE CHAECKS FOR THESE DIFFERENT POSSIBILITIES   */ 00407000
*             /* AND SETUP THE PROPER ADDRESS TO THE FORMAT ROUTINE  */ 00408000
*             /* TO OUTPUT THE FIELDS AS HEX OR CHARACTER DATA       */ 00409000
*             /*                                                     */ 00410000
*             /*******************************************************/ 00411000
*                                                               02S0108 00412000
*             ;                                                 02S0108 00413000
*             IF SYS=ON|RNIO=ON THEN/* CHECK TO SEE IF RECORD IS TO     00414000
*                                      BE OUTPUT                     */ 00415000
         TM    SYS(AEDITCBR),B'00101000'                        02S0109 00416000
         BZ    @RF00109                                         02S0109 00417000
*               DO;                                             02S0110 00418000
*                                                               02S0110 00419000
*                 /***************************************************/ 00420000
*                 /*                                                 */ 00421000
*                 /* DETERMINE WHETHER TO OUTPUT THE INBOUND OR      */ 00422000
*                 /* OUTBOUND LABELS                                 */ 00423000
*                 /*                                                 */ 00424000
*                 /***************************************************/ 00425000
*                                                               02S0111 00426000
*                 IF EID=ISPTPIO2 THEN/* CHECK TO SEE IF THE EID IS     00427000
*                                      FOR RNIO OUT          @YM01487*/ 00428000
         L     @08,EIDPTR(,R3PLPTR)                             02S0111 00429000
         CLC   EID(2,@08),@CH00064                              02S0111 00430000
         BNE   @RF00111                                         02S0111 00431000
*                   ADPLFMT1=ADDR(RNIOLBLO);/* IT IS SO SETUP THE OUT   00432000
*                                      LABEL ADDRESS                 */ 00433000
         LA    @08,RNIOLBLO                                     02S0112 00434000
         ST    @08,ADPLFMT1(,ABDPLPTR)                          02S0112 00435000
*                 ELSE              /* IT IS RNIO IN SO SETUP THE       00436000
*                                      FORMAT PLIST TO GET THE IN       00437000
*                                      LABEL ADDRESS                 */ 00438000
*                                                               02S0113 00439000
*                   /*************************************************/ 00440000
*                   /*                                               */ 00441000
*                   /* GET THE DATA POINTER                          */ 00442000
*                   /*                                               */ 00443000
*                   /*************************************************/ 00444000
*                                                               02S0113 00445000
*                   ADPLFMT1=ADDR(RNIOLBLI);                    02S0113 00446000
         B     @RC00111                                         02S0113 00447000
@RF00111 LA    @08,RNIOLBLI                                     02S0113 00448000
         ST    @08,ADPLFMT1(,ABDPLPTR)                          02S0113 00449000
*                 ADPLFMT2=ADDR(RNIOREC);/* SETUP THE DATA ADDRESS   */ 00450000
*                                                               02S0114 00451000
@RC00111 ST    R5RECPTR,ADPLFMT2(,ABDPLPTR)                     02S0114 00452000
*                 /***************************************************/ 00453000
*                 /*                                                 */ 00454000
*                 /* DECIDE WHICH FORMAT PATTERN GROUP TO USE        */ 00455000
*                 /*                                                 */ 00456000
*                 /***************************************************/ 00457000
*                                                               02S0115 00458000
*                 IF RNIOASCB=ASTER THEN/* CHECK FOR THE ASCB IN        00459000
*                                      ERROR                         */ 00460000
         CLC   RNIOASCB(4,R5RECPTR),ASTER                       02S0115 00461000
         BNE   @RF00115                                         02S0115 00462000
*                   IF RNIOBTU=ASTER THEN/* CHECK FOR THE BTU IN        00463000
*                                      ERROR                         */ 00464000
         CLC   RNIOBTU(14,R5RECPTR),ASTER                       02S0116 00465000
         BNE   @RF00116                                         02S0116 00466000
*                     R0FMTPTR=ADDR(RNIOF04);/* BOTH FIELDS HAVE        00467000
*                                      ASTERISKS                     */ 00468000
         LA    R0FMTPTR,RNIOF04                                 02S0117 00469000
*                   ELSE            /* ONLY THE ASCB HAS ASTERISKS   */ 00470000
*                     IF RNIOR0=0 THEN/*                     @Z40KI3O*/ 00471000
         B     @RC00116                                         02S0118 00472000
@RF00116 ICM   @08,15,RNIOR0(R5RECPTR)                          02S0118 00473000
         BNZ   @RF00118                                         02S0118 00474000
*                       R0FMTPTR=ADDR(BTU00E);/*             @Z40KI3O*/ 00475000
         LA    R0FMTPTR,BTU00E                                  02S0119 00476000
*                     ELSE                                      02S0120 00477000
*                       IF RNIOR0>=20 THEN/*                 @Z40KI3O*/ 00478000
         B     @RC00118                                         02S0120 00479000
@RF00118 CLC   RNIOR0(4,R5RECPTR),@CF00257                      02S0120 00480000
         BL    @RF00120                                         02S0120 00481000
*                         R0FMTPTR=ADDR(BTU20E);/*           @Y30AI3P*/ 00482000
         LA    R0FMTPTR,BTU20E                                  02S0121 00483000
*                       ELSE                                    02S0122 00484000
*                         R0FMTPTR=BTUEPTR(RNIOR0);/*        @Z40KI3O*/ 00485000
         B     @RC00120                                         02S0122 00486000
@RF00120 ICM   @08,15,RNIOR0(R5RECPTR)                          02S0122 00487000
         SLL   @08,2                                            02S0122 00488000
         L     R0FMTPTR,BTUEPTR-4(@08)                          02S0122 00489000
*                 ELSE              /* THE ASCB HAS HEX DATA         */ 00490000
*                   IF RNIOBTU=ASTER THEN/* CHECK TO SEE IF THE BTU     00491000
*                                      IS IN ERROR                   */ 00492000
         B     @RC00115                                         02S0123 00493000
@RF00115 CLC   RNIOBTU(14,R5RECPTR),ASTER                       02S0123 00494000
         BNE   @RF00123                                         02S0123 00495000
*                     R0FMTPTR=ADDR(RNIOF03);/* ONLY THE BTU HAS        00496000
*                                      ASTERISKS                     */ 00497000
         LA    R0FMTPTR,RNIOF03                                 02S0124 00498000
*                   ELSE            /* BOTH FIELDS HAVE HEX DATA     */ 00499000
*                     IF RNIOR0=0 THEN/*                     @Z40KI3O*/ 00500000
         B     @RC00123                                         02S0125 00501000
@RF00123 ICM   @08,15,RNIOR0(R5RECPTR)                          02S0125 00502000
         BNZ   @RF00125                                         02S0125 00503000
*                       R0FMTPTR=ADDR(BTU00);/*              @Z40KI3O*/ 00504000
         LA    R0FMTPTR,BTU00                                   02S0126 00505000
*                     ELSE                                      02S0127 00506000
*                       IF RNIOR0>=20 THEN/*                 @Z40KI3O*/ 00507000
         B     @RC00125                                         02S0127 00508000
@RF00125 CLC   RNIOR0(4,R5RECPTR),@CF00257                      02S0127 00509000
         BL    @RF00127                                         02S0127 00510000
*                         R0FMTPTR=ADDR(BTU20);/*            @Y30AI3P*/ 00511000
         LA    R0FMTPTR,BTU20                                   02S0128 00512000
*                       ELSE                                    02S0129 00513000
*                         R0FMTPTR=BTUPTR(RNIOR0);/*         @Z40KI3O*/ 00514000
*                                                               02S0129 00515000
         B     @RC00127                                         02S0129 00516000
@RF00127 ICM   @08,15,RNIOR0(R5RECPTR)                          02S0129 00517000
         SLL   @08,2                                            02S0129 00518000
         L     R0FMTPTR,BTUPTR-4(@08)                           02S0129 00519000
*                 /***************************************************/ 00520000
*                 /*                                                 */ 00521000
*                 /* CALL THE FORMATTING ROUTINE AND THEN RETURN TO  */ 00522000
*                 /* THE CALLER                                      */ 00523000
*                 /*                                                 */ 00524000
*                 /***************************************************/ 00525000
*                                                               02S0130 00526000
*                 CALL AMDPRFMT;    /* CALL THE FORMATTING ROUTINE   */ 00527000
@RC00127 DS    0H                                               02S0130 00528000
@RC00125 DS    0H                                               02S0130 00529000
@RC00123 DS    0H                                               02S0130 00530000
@RC00115 L     @15,FMTPTR(,R3PLPTR)                             02S0130 00531000
         BALR  @14,@15                                          02S0130 00532000
*                 RFY                                           02S0131 00533000
*                   R15RC RSTD;                                 02S0131 00534000
*                 R15RC=RCNEWREC;   /* TELL THE CALLER TO OUTPUT THIS   00535000
*                                      RECORD AND GET US A NEW ONE   */ 00536000
         LA    R15RC,4                                          02S0132 00537000
*               END;                                            02S0133 00538000
*             ELSE                                              02S0134 00539000
*               R15RC=RCIGNORE;     /* NOT OUTPUTTING THIS RECORD SO    00540000
*                                      PASS IGNORE RET CODE          */ 00541000
         B     @RC00109                                         02S0134 00542000
@RF00109 LA    R15RC,8                                          02S0134 00543000
*             RFY                                               02S0135 00544000
*               R15RC UNRSTD;                                   02S0135 00545000
@RC00109 DS    0H                                               02S0136 00546000
*           END;                                                02S0136 00547000
*         ELSE                      /* NOT RNIO                      */ 00548000
*           IF EID=IEAFRR THEN      /* CHECK FOR FRR                 */ 00549000
         B     @RC00106                                         01S0137 00550000
@RF00106 L     @08,EIDPTR(,R3PLPTR)                             01S0137 00551000
         CLC   EID(2,@08),@CH00060                              01S0137 00552000
         BNE   @RF00137                                         01S0137 00553000
*             DO;                                               02S0138 00554000
*                                                               02S0138 00555000
*               /*****************************************************/ 00556000
*               /*                                                   */ 00557000
*               /* THIS ROUTINE SETS UP THE FRR RECORD FOR OUTPUT.   */ 00558000
*               /* THERE ARE FOUR POSSIBLE COMBINATIONS OF FIELDS.   */ 00559000
*               /* THEY ARE ALL FIELDS NORMAL, ASCB IN ERROR, ALL    */ 00560000
*               /* RTCA FIELDS IN ERROR AND ASCB AND RTCA FIELDS IN  */ 00561000
*               /* ERROR                                             */ 00562000
*               /*                                                   */ 00563000
*               /*****************************************************/ 00564000
*                                                               02S0139 00565000
*               ;                                               02S0139 00566000
*               IF SYS=ON|RR=ON THEN/* CK TO OUTPUT THIS RECORD      */ 00567000
         TM    SYS(AEDITCBR),B'00100010'                        02S0140 00568000
         BZ    @RF00140                                         02S0140 00569000
*                 DO;                                           02S0141 00570000
*                                                               02S0141 00571000
*                   /*************************************************/ 00572000
*                   /*                                               */ 00573000
*                   /* GET THE LABEL AND DATA POINTERS               */ 00574000
*                   /*                                               */ 00575000
*                   /*************************************************/ 00576000
*                                                               02S0142 00577000
*                   ADPLFMT1=ADDR(FRRLBL1);/* SETUP THE LABELS FOR      00578000
*                                      THE SIRST LINE                */ 00579000
         LA    @08,FRRLBL1                                      02S0142 00580000
         ST    @08,ADPLFMT1(,ABDPLPTR)                          02S0142 00581000
*                   ADPLFMT2=ADDR(FRRREC);/* SETUP THE DATA ADDRESS  */ 00582000
*                                                               02S0143 00583000
         ST    R5RECPTR,ADPLFMT2(,ABDPLPTR)                     02S0143 00584000
*                   /*************************************************/ 00585000
*                   /*                                               */ 00586000
*                   /* DECIDE WHICH FORMAT PATTERN GROUP TO USE      */ 00587000
*                   /*                                               */ 00588000
*                   /*************************************************/ 00589000
*                                                               02S0144 00590000
*                   IF FRRASCB=ASTER THEN/* CHECK FOR ASCB IN ERROR  */ 00591000
         CLC   FRRASCB(4,R5RECPTR),ASTER                        02S0144 00592000
         BNE   @RF00144                                         02S0144 00593000
*                     IF FRRPSW=ASTER THEN/* CHECK FOR RTCA FIELDS IN   00594000
*                                      ERROR                         */ 00595000
         CLC   FRRPSW(8,R5RECPTR),ASTER                         02S0145 00596000
         BNE   @RF00145                                         02S0145 00597000
*                       R0FMTPTR=ADDR(FRRF04);/* ALL FIELDS ARE IN      00598000
*                                      ERROR                         */ 00599000
         LA    R0FMTPTR,FRRF04                                  02S0146 00600000
*                     ELSE          /* ONLY ASCB IS IN ERROR         */ 00601000
*                       R0FMTPTR=ADDR(FRRF03);                  02S0147 00602000
         B     @RC00145                                         02S0147 00603000
@RF00145 LA    R0FMTPTR,FRRF03                                  02S0147 00604000
*                   ELSE            /* ASCB IS IN HEX                */ 00605000
*                     IF FRRPSW=ASTER THEN/* CHECK FOR RTCA FIELDS IN   00606000
*                                      ERROR                         */ 00607000
         B     @RC00144                                         02S0148 00608000
@RF00144 CLC   FRRPSW(8,R5RECPTR),ASTER                         02S0148 00609000
         BNE   @RF00148                                         02S0148 00610000
*                       R0FMTPTR=ADDR(FRRF02);/* ONLY RTCA FIELDS IN    00611000
*                                      ERROR                         */ 00612000
         LA    R0FMTPTR,FRRF02                                  02S0149 00613000
*                     ELSE          /* ALL FIELDS ARE NORMAL         */ 00614000
*                       R0FMTPTR=ADDR(FRRF01);                  02S0150 00615000
*                                                               02S0150 00616000
         B     @RC00148                                         02S0150 00617000
@RF00148 LA    R0FMTPTR,FRRF01                                  02S0150 00618000
*                   /*************************************************/ 00619000
*                   /*                                               */ 00620000
*                   /* CALL THE FORMATTING ROUTINE AND THEN RETURN TO*/ 00621000
*                   /* THE CALLER                                    */ 00622000
*                   /*                                               */ 00623000
*                   /*************************************************/ 00624000
*                                                               02S0151 00625000
*                   CALL AMDPRFMT;  /* CALL FORMATTING ROUTINE       */ 00626000
@RC00148 DS    0H                                               02S0151 00627000
@RC00144 L     @15,FMTPTR(,R3PLPTR)                             02S0151 00628000
         BALR  @14,@15                                          02S0151 00629000
*                   SECENTRY=IEAFRR;/* SETUP INDICATOR TO SHOW THAT     00630000
*                                      THERE IS TO BE A SECOND ENTRY    00631000
*                                      AND USE THE EID TO INDICATE      00632000
*                                      WHICH ROUTINE IS CAUSING THE     00633000
*                                      ENTRY                         */ 00634000
         MVC   SECENTRY(2,R4GTMPTR),@CH00060                    02S0152 00635000
*                   RFY                                         02S0153 00636000
*                     R15RC RSTD;                               02S0153 00637000
*                   R15RC=RCRETURN; /* TELL THE CALLER TO OUTPUT THIS   00638000
*                                      RECORD AND THEN RETURN TO US     00639000
*                                      TO OUTPUT THE SECOND LINE     */ 00640000
         SLR   R15RC,R15RC                                      02S0154 00641000
*                 END;                                          02S0155 00642000
*               ELSE                                            02S0156 00643000
*                 R15RC=RCIGNORE;   /* DONT WANT THIS RECORD SO SET     00644000
*                                      RC TO IGNORE                  */ 00645000
         B     @RC00140                                         02S0156 00646000
@RF00140 LA    R15RC,8                                          02S0156 00647000
*               RFY                                             02S0157 00648000
*                 R15RC UNRSTD;                                 02S0157 00649000
@RC00140 DS    0H                                               02S0158 00650000
*             END;                                              02S0158 00651000
*           ELSE                    /* NOT FRR                       */ 00652000
*             IF EID=IEASTAE THEN   /* CHECK FOR STAE                */ 00653000
         B     @RC00137                                         01S0159 00654000
@RF00137 L     @08,EIDPTR(,R3PLPTR)                             01S0159 00655000
         CLC   EID(2,@08),@CH00058                              01S0159 00656000
         BNE   @RF00159                                         01S0159 00657000
*               DO;                                             02S0160 00658000
*                                                               02S0160 00659000
*                 /***************************************************/ 00660000
*                 /*                                                 */ 00661000
*                 /* THIS ROUTINE SETS UP THE STAE RECORD FOR THE    */ 00662000
*                 /* FIRST LINE OF OUTPUT. THERE ARE ONLY THREE      */ 00663000
*                 /* POSSIBLE COMBINATIONS OF FIELDS. THEY ARE ALL   */ 00664000
*                 /* FIELDS NORMAL, ALL RTCA FIELDS WITH ASTERISKS OR*/ 00665000
*                 /* U/A, AND ONLY THE FLAG FIELDS WITH U/A          */ 00666000
*                 /*                                                 */ 00667000
*                 /***************************************************/ 00668000
*                                                               02S0161 00669000
*                 ;                                             02S0161 00670000
*                 IF SYS=ON|RR=ON THEN/* CK TO OUTPUT THIS RECORD    */ 00671000
         TM    SYS(AEDITCBR),B'00100010'                        02S0162 00672000
         BZ    @RF00162                                         02S0162 00673000
*                   DO;                                         02S0163 00674000
*                                                               02S0163 00675000
*                     /***********************************************/ 00676000
*                     /*                                             */ 00677000
*                     /* GET THE LABEL AND DATA POINTERS             */ 00678000
*                     /*                                             */ 00679000
*                     /***********************************************/ 00680000
*                                                               02S0164 00681000
*                     ADPLFMT1=ADDR(STALBL1);/* SETUP THE LABEL 02S0164 00682000
*                                      ADDRESS                       */ 00683000
         LA    @08,STALBL1                                      02S0164 00684000
         ST    @08,ADPLFMT1(,ABDPLPTR)                          02S0164 00685000
*                     ADPLFMT2=ADDR(STAREC);/* SETUP THE DATA ADDRESS*/ 00686000
*                                                               02S0165 00687000
         ST    R5RECPTR,ADPLFMT2(,ABDPLPTR)                     02S0165 00688000
*                     /***********************************************/ 00689000
*                     /*                                             */ 00690000
*                     /* DECIDE WHICH FORMAT PATTERN GROUP TO USE    */ 00691000
*                     /*                                             */ 00692000
*                     /***********************************************/ 00693000
*                                                               02S0166 00694000
*                     IF STAPSW=ASTER|STAPSW=UNAV THEN/* CHECK FOR      00695000
*                                      CHARACTER DATA IN THE RTCA       00696000
*                                      FIELDS                        */ 00697000
         CLC   STAPSW(8,R5RECPTR),ASTER                         02S0166 00698000
         BE    @RT00166                                         02S0166 00699000
         CLC   STAPSW(8,R5RECPTR),UNAV                          02S0166 00700000
         BNE   @RF00166                                         02S0166 00701000
@RT00166 DS    0H                                               02S0167 00702000
*                       R0FMTPTR=ADDR(STAF02);/* RTCA FIELDS HAVE       00703000
*                                      CHARACTER DATA                */ 00704000
         LA    R0FMTPTR,STAF02                                  02S0167 00705000
*                     ELSE          /* CHECK TO SEE IF THE FLAG 02S0168 00706000
*                                      FIELDS HAVE CHAR DATA         */ 00707000
*                       IF STAEFLGS=UNAV THEN                   02S0168 00708000
         B     @RC00166                                         02S0168 00709000
@RF00166 CLC   STAEFLGS(4,R5RECPTR),UNAV                        02S0168 00710000
         BNE   @RF00168                                         02S0168 00711000
*                         R0FMTPTR=ADDR(STAF03);/* FLAGS HAVE CHAR      00712000
*                                      DATA                          */ 00713000
         LA    R0FMTPTR,STAF03                                  02S0169 00714000
*                       ELSE        /* ALL FIELDS ARE NORMAL AND HAVE   00715000
*                                      HEX DATA                      */ 00716000
*                         R0FMTPTR=ADDR(STAF01);                02S0170 00717000
*                                                               02S0170 00718000
         B     @RC00168                                         02S0170 00719000
@RF00168 LA    R0FMTPTR,STAF01                                  02S0170 00720000
*                     /***********************************************/ 00721000
*                     /*                                             */ 00722000
*                     /* CALL THE FORMATTTING ROUTINE AND THEN RETURN*/ 00723000
*                     /* TO THE CALLER                               */ 00724000
*                     /*                                             */ 00725000
*                     /***********************************************/ 00726000
*                                                               02S0171 00727000
*                     CALL AMDPRFMT;/* CALL FORMATTING ROUTINE       */ 00728000
@RC00168 DS    0H                                               02S0171 00729000
@RC00166 L     @15,FMTPTR(,R3PLPTR)                             02S0171 00730000
         BALR  @14,@15                                          02S0171 00731000
*                     SECENTRY=IEASTAE;/* INDICATE THAT THERE IS TO     00732000
*                                      BE A SECOND ENTRY AND THAT       00733000
*                                      STAE IS TO GET CONTROL ON THE    00734000
*                                      ENTRY BY USING THE EID AS A      00735000
*                                      FLAG                          */ 00736000
         MVC   SECENTRY(2,R4GTMPTR),@CH00058                    02S0172 00737000
*                     RFY                                       02S0173 00738000
*                       R15RC RSTD;                             02S0173 00739000
*                     R15RC=RCRETURN;/* TELL THE CALLER TO OUTPUT       00740000
*                                      THIS RECORD AND THEN RETURN TO   00741000
*                                      US                            */ 00742000
         SLR   R15RC,R15RC                                      02S0174 00743000
*                   END;                                        02S0175 00744000
*                 ELSE                                          02S0176 00745000
*                   R15RC=RCIGNORE; /* DONT WANT THIS RECORD SO SET     00746000
*                                      RC TO IGNORE                  */ 00747000
         B     @RC00162                                         02S0176 00748000
@RF00162 LA    R15RC,8                                          02S0176 00749000
*                 RFY                                           02S0177 00750000
*                   R15RC UNRSTD;                               02S0177 00751000
@RC00162 DS    0H                                               02S0178 00752000
*               END;                                            02S0178 00753000
*             ELSE                  /* IT IS NOT ONE OF THE RECORDS     00754000
*                                      THAT WE SHOULD BE CONCERNED      00755000
*                                      WITH                          */ 00756000
*               DO;                                             01S0179 00757000
         B     @RC00159                                         01S0179 00758000
@RF00159 DS    0H                                               01S0180 00759000
*                 RFY                                           01S0180 00760000
*                   R15RC RSTD;                                 01S0180 00761000
*                 R15RC=RCIGNORE;   /* TELL THE CALLER TO IGNORE THIS   00762000
*                                      RECORD AND GET US A NEW ONE   */ 00763000
         LA    R15RC,8                                          01S0181 00764000
*               END;                                            01S0182 00765000
*   R13SAPTR=BACKPTR;               /* GET CALLERS SAVE AREA ADDRESS */ 00766000
@RC00159 DS    0H                                               01S0183 00767000
@RC00137 DS    0H                                               01S0183 00768000
@RC00106 DS    0H                                               01S0183 00769000
@RC00089 DS    0H                                               01S0183 00770000
@RC00083 DS    0H                                               01S0183 00771000
@RC00041 L     R13SAPTR,BACKPTR(,R4GTMPTR)                      01S0183 00772000
*   R14RTN=HIS14;                   /* PICK UP CALLERS RETURN ADDRESS*/ 00773000
         L     R14RTN,HIS14(,R13SAPTR)                          01S0184 00774000
*   GEN;                                                        01S0185 00775000
       LM  @00,@12,HIS0(@13)   RESTORE CALLERS REGISTERS                00776000
       BR @14             RETURN TO CALLER                              00777000
*   RFY                                                         01S0186 00778000
*     R15RC UNRSTD;                                             01S0186 00779000
*   END AMDSYS04                                                01S0187 00780000
*                                                               01S0187 00781000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */ 00782000
*/*%INCLUDE SYSUT5  (PROLOG  )                                       */ 00783000
*/*%INCLUDE SYSUT5  (FL1     )                                       */ 00784000
*/*%INCLUDE SYSUT5  (DECLARES)                                       */ 00785000
*/*%INCLUDE SYSLIB  (IMDMEDIT)                                       */ 00786000
*/*%INCLUDE SYSLIB  (IHAABDPL)                                       */ 00787000
*/*%INCLUDE SYSLIB  (AMDPRTAB)                                       */ 00788000
*/*%INCLUDE SYSUT5  (SECFRR  )                                       */ 00789000
*/*%INCLUDE SYSUT5  (SECSTAE )                                       */ 00790000
*/*%INCLUDE SYSUT5  (SRMFMT  )                                       */ 00791000
*/*%INCLUDE SYSUT5  (RNIOFMT )                                       */ 00792000
*/*%INCLUDE SYSUT5  (FRRFMT  )                                       */ 00793000
*/*%INCLUDE SYSUT5  (STAEFMT )                                       */ 00794000
*                                                               01S0187 00795000
*       ;                                                       01S0187 00796000
@DATA    DS    0H                                                       00797000
@CH00058 DC    XL2'4002'                                                00798000
@CH00060 DC    XL2'4003'                                                00799000
@CH00062 DC    XL2'8100'                                                00800000
@CH00064 DC    XL2'8200'                                                00801000
@CH00075 DC    XL2'4001'                                                00802000
@CH00396 DC    XL2'EEEE'                                                00803000
@DATD    DSECT                                                          00804000
         DS    0F                                                       00805000
AMDSYS04 CSECT                                                          00806000
         DS    0F                                                       00807000
@CF00257 DC    F'20'                                                    00808000
@CF00575 DC    XL4'0000FFFF'                                            00809000
@DATD    DSECT                                                          00810000
         DS    0D                                                       00811000
AMDSYS04 CSECT                                                          00812000
         DS    0F                                                       00813000
@SIZDATD DC    AL1(0)                                                   00814000
         DC    AL3(@ENDDATD-@DATD)                                      00815000
         DS    0D                                                       00816000
@CC00451 DC    C'U/A'                                                   00817000
UNAV     DC    CL8'U/A'                                                 00818000
ASTER    DC    CL14'**************'                                     00819000
FRRLBL1  DC    CL33'FRRASCBCPUJOBNFRRNERR PSWABCCERRT'                  00820000
FRRLBL2  DC    CL9'FLGRCRTRY'                                           00821000
STALBL1  DC    CL34'STAEASCBCPUJOBNESTNERR PSWABCCERRT'                 00822000
STALBL2  DC    CL13'FLGRCRTRYRTCA'                                      00823000
SRMLBL   DC    CL22'SRMASCBCPUJOBNR15/R0R1'                             00824000
RNIOLBLO DC    CL25'RNIO ASCBCPUJOBN    OUTR0'                          00825000
RNIOLBLI DC    CL25'RNIO ASCBCPUJOBN     INR0'                          00826000
         DS    CL2                                                      00827000
BTUPTR   DC    AL4(BTU01)                                               00828000
         DC    AL4(BTU02)                                               00829000
         DC    AL4(BTU03)                                               00830000
         DC    AL4(BTU04)                                               00831000
         DC    AL4(BTU05)                                               00832000
         DC    AL4(BTU06)                                               00833000
         DC    AL4(BTU07)                                               00834000
         DC    AL4(BTU08)                                               00835000
         DC    AL4(BTU09)                                               00836000
         DC    AL4(BTU10)                                               00837000
         DC    AL4(BTU11)                                               00838000
         DC    AL4(BTU12)                                               00839000
         DC    AL4(BTU13)                                               00840000
         DC    AL4(BTU14)                                               00841000
         DC    AL4(BTU15)                                               00842000
         DC    AL4(BTU16)                                               00843000
         DC    AL4(BTU17)                                               00844000
         DC    AL4(BTU18)                                               00845000
         DC    AL4(BTU19)                                               00846000
BTUEPTR  DC    AL4(BTU01E)                                              00847000
         DC    AL4(BTU02E)                                              00848000
         DC    AL4(BTU03E)                                              00849000
         DC    AL4(BTU04E)                                              00850000
         DC    AL4(BTU05E)                                              00851000
         DC    AL4(BTU06E)                                              00852000
         DC    AL4(BTU07E)                                              00853000
         DC    AL4(BTU08E)                                              00854000
         DC    AL4(BTU09E)                                              00855000
         DC    AL4(BTU10E)                                              00856000
         DC    AL4(BTU11E)                                              00857000
         DC    AL4(BTU12E)                                              00858000
         DC    AL4(BTU13E)                                              00859000
         DC    AL4(BTU14E)                                              00860000
         DC    AL4(BTU15E)                                              00861000
         DC    AL4(BTU16E)                                              00862000
         DC    AL4(BTU17E)                                              00863000
         DC    AL4(BTU18E)                                              00864000
         DC    AL4(BTU19E)                                              00865000
AMD4PTCH DC    100X'00'                                                 00866000
AMDSYS04 CSECT                                                          00867000
*                                             /*             @Z40KI3O*/ 00868000
*   FORMAT PATTERNS                                                     00869000
*   SRM ALL FIELDS NORMAL                                               00870000
SRMF01   FMTPTRN  (LBL),3,,0,,,,                      HEADER            00871000
         FMTPTRN  (LBL,DTA,DTAC),4,4,10,15,,,         ASCB              00872000
         FMTPTRN  (LBL,DTA,DTAC),3,2,25,29,,,         CPUID             00873000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,8,35,40,,,    JOBNAME           00874000
         FMTPTRN  (LBL,DTA,DTAC),6,4,51,58,,,         REG 15            00875000
         FMTPTRN  (DTA,DTAC),,4,,67,,,                REG 0             00876000
         FMTPTRN  (LBL,DTA,DTAC),2,4,79,82,,,LAST     REG 1             00877000
*    SRM ASCB FIELD CONTAINS ASTERISKS                                  00878000
SRMF02   FMTPTRN  (LBL),3,,0,,,,                      HEADER            00879000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,4,10,15,,,    ASCB              00880000
         FMTPTRN  (LBL,DTA,DTAC),3,2,25,29,,,         CPUID             00881000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,8,35,40,,,    JOBNAME           00882000
         FMTPTRN  (LBL,DTA,DTAC),6,4,51,58,,,         REG 15            00883000
         FMTPTRN  (DTA,DTAC),,4,,67,,,                REG 0             00884000
         FMTPTRN  (LBL,DTA,DTAC),2,4,79,82,,,LAST     REG 1             00885000
*   RNIO  BTU HAS ASTERISKS                                    @Y30AI3P 00886000
RNIOF03  FMTPTRN  (LBL,DTA,DTAC),9,4,0,10,,, /* HDR & ASCB   @Y30AI3P*/ 00887000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,      /* CPUID  @Y30AI3P*/ 00888000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,8,29,34,,, /* JOBN   @Y30AI3P*/ 00889000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),7,14,43,51,,,LAST /*   @Z40KI3O*/ 00890000
*   RNIO ASCB AND BTU HAVE ASTERISKS                           @Y30AI3P 00891000
RNIOF04  FMTPTRN  (LBL,DTA,DTAC,DTAE),9,4,0,10,,, /*HDR&ASCB @Y30AI3P*/ 00892000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,      /* CPUID  @Y30AI3P*/ 00893000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,8,29,34,,, /* JOBN   @Y30AI3P*/ 00894000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),7,14,43,51,,,LAST /*   @Z40KI3O*/ 00895000
* RNIO ASCB HAS **** AND 00 BYTES OF BTU DATA                  @Z40KI3O 00896000
BTU00E   FMTPTRN  (LBL,DTA,DTAC,DTAE),9,4,0,10,,, /*HDR&ASCB @Z40KI3O*/ 00897000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 00898000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,8,29,34,,,/*  JOBN   @Z40KI3O*/ 00899000
         FMTPTRN  (LBL),7,,43,,,,LAST             /*  BTU    @Z40KI3O*/ 00900000
* RNIO NORMAL WITH 00 BYTES OF BTU DATA                        @Z40KI3O 00901000
BTU00    FMTPTRN  (LBL,DTA,DTAC),9,4,0,10,,,      /*HDR&ASCB @Z40KI3O*/ 00902000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 00903000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,8,29,34,,,/*  JOBN   @Z40KI3O*/ 00904000
         FMTPTRN  (LBL),7,,43,,,,LAST             /*  BTU    @Z40KI3O*/ 00905000
* RNIO ASCB HAS **** AND 01 BYTES OF BTU DATA                  @Z40KI3O 00906000
BTU01E   FMTPTRN  (LBL,DTA,DTAC,DTAE),9,4,0,10,,, /*HDR&ASCB @Z40KI3O*/ 00907000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 00908000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,8,29,34,,,/*  JOBN   @Z40KI3O*/ 00909000
         FMTPTRN  (LBL,DTA,DTAC),7,1,43,51,,,LAST /*  BTU    @Z40KI3O*/ 00910000
* RNIO NORMAL WITH 01 BYTES OF BTU DATA                        @Z40KI3O 00911000
BTU01    FMTPTRN  (LBL,DTA,DTAC),9,4,0,10,,,      /*HDR&ASCB @Z40KI3O*/ 00912000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 00913000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,8,29,34,,,/*  JOBN   @Z40KI3O*/ 00914000
         FMTPTRN  (LBL,DTA,DTAC),7,1,43,51,,,LAST /*  BTU    @Z40KI3O*/ 00915000
* RNIO ASCB HAS **** AND 02 BYTES OF BTU DATA                  @Z40KI3O 00916000
BTU02E   FMTPTRN  (LBL,DTA,DTAC,DTAE),9,4,0,10,,, /*HDR&ASCB @Z40KI3O*/ 00917000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 00918000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,8,29,34,,,/*  JOBN   @Z40KI3O*/ 00919000
         FMTPTRN  (LBL,DTA,DTAC),7,2,43,51,,,LAST /*  BTU    @Z40KI3O*/ 00920000
* RNIO NORMAL WITH 02 BYTES OF BTU DATA                        @Z40KI3O 00921000
BTU02    FMTPTRN  (LBL,DTA,DTAC),9,4,0,10,,,      /*HDR&ASCB @Z40KI3O*/ 00922000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 00923000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,8,29,34,,,/*  JOBN   @Z40KI3O*/ 00924000
         FMTPTRN  (LBL,DTA,DTAC),7,2,43,51,,,LAST /*  BTU    @Z40KI3O*/ 00925000
* RNIO ASCB HAS **** AND 03 BYTES OF BTU DATA                  @Z40KI3O 00926000
BTU03E   FMTPTRN  (LBL,DTA,DTAC,DTAE),9,4,0,10,,, /*HDR&ASCB @Z40KI3O*/ 00927000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 00928000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,8,29,34,,,/*  JOBN   @Z40KI3O*/ 00929000
         FMTPTRN  (LBL,DTA,DTAC),7,3,43,51,,,LAST /*  BTU    @Z40KI3O*/ 00930000
* RNIO NORMAL WITH 03 BYTES OF BTU DATA                        @Z40KI3O 00931000
BTU03    FMTPTRN  (LBL,DTA,DTAC),9,4,0,10,,,      /*HDR&ASCB @Z40KI3O*/ 00932000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 00933000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,8,29,34,,,/*  JOBN   @Z40KI3O*/ 00934000
         FMTPTRN  (LBL,DTA,DTAC),7,3,43,51,,,LAST /*  BTU    @Z40KI3O*/ 00935000
* RNIO ASCB HAS **** AND 04 BYTES OF BTU DATA                  @Z40KI3O 00936000
BTU04E   FMTPTRN  (LBL,DTA,DTAC,DTAE),9,4,0,10,,, /*HDR&ASCB @Z40KI3O*/ 00937000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 00938000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,8,29,34,,,/*  JOBN   @Z40KI3O*/ 00939000
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,LAST /*  BTU    @Z40KI3O*/ 00940000
* RNIO NORMAL WITH 04 BYTES OF BTU DATA                        @Z40KI3O 00941000
BTU04    FMTPTRN  (LBL,DTA,DTAC),9,4,0,10,,,      /*HDR&ASCB @Z40KI3O*/ 00942000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 00943000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,8,29,34,,,/*  JOBN   @Z40KI3O*/ 00944000
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,LAST /* BTU @Z40KI3O*/     00945000
* RNIO ASCB HAS **** AND 05 BYTES OF BTU DATA                  @Z40KI3O 00946000
BTU05E   FMTPTRN  (LBL,DTA,DTAC,DTAE),9,4,0,10,,, /*HDR&ASCB @Z40KI3O*/ 00947000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 00948000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,8,29,34,,,/*  JOBN   @Z40KI3O*/ 00949000
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/ 00950000
         FMTPTRN  (DTA,DTAC),,1,,60,,,LAST        /*         @Z40KI3O*/ 00951000
* RNIO NORMAL WITH 05 BYTES OF BTU DATA                        @Z40KI3O 00952000
BTU05    FMTPTRN  (LBL,DTA,DTAC),9,4,0,10,,,      /*HDR&ASCB @Z40KI3O*/ 00953000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 00954000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,8,29,34,,,/*  JOBN   @Z40KI3O*/ 00955000
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/ 00956000
         FMTPTRN  (DTA,DTAC),,1,,60,,,LAST                     @Z40KI3O 00957000
* RNIO ASCB HAS **** AND 06 BYTES OF BTU DATA                  @Z40KI3O 00958000
BTU06E   FMTPTRN  (LBL,DTA,DTAC,DTAE),9,4,0,10,,, /*HDR&ASCB @Z40KI3O*/ 00959000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 00960000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,8,29,34,,,/*  JOBN   @Z40KI3O*/ 00961000
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/ 00962000
         FMTPTRN  (DTA,DTAC),,2,,60,,,LAST        /*         @Z40KI3O*/ 00963000
* RNIO NORMAL WITH 06 BYTES OF BTU DATA                        @Z40KI3O 00964000
BTU06    FMTPTRN  (LBL,DTA,DTAC),9,4,0,10,,,      /*HDR&ASCB @Z40KI3O*/ 00965000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 00966000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,8,29,34,,,/*  JOBN   @Z40KI3O*/ 00967000
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/ 00968000
         FMTPTRN  (DTA,DTAC),,2,,60,,,LAST        /*         @Z40KI3O*/ 00969000
* RNIO ASCB HAS **** AND 07 BYTES OF BTU DATA                  @Z40KI3O 00970000
BTU07E   FMTPTRN  (LBL,DTA,DTAC,DTAE),9,4,0,10,,, /*HDR&ASCB @Z40KI3O*/ 00971000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 00972000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,8,29,34,,,/*  JOBN   @Z40KI3O*/ 00973000
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/ 00974000
         FMTPTRN  (DTA,DTAC),,3,,60,,,LAST        /*         @Z40KI3O*/ 00975000
* RNIO NORMAL WITH 07 BYTES OF BTU DATA                        @Z40KI3O 00976000
BTU07    FMTPTRN  (LBL,DTA,DTAC),9,4,0,10,,,      /*HDR&ASCB @Z40KI3O*/ 00977000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 00978000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,8,29,34,,,/*  JOBN   @Z40KI3O*/ 00979000
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/ 00980000
         FMTPTRN  (DTA,DTAC),,3,,60,,,LAST        /*         @Z40KI3O*/ 00981000
* RNIO ASCB HAS **** AND 08 BYTES OF BTU DATA                  @Z40KI3O 00982000
BTU08E   FMTPTRN  (LBL,DTA,DTAC,DTAE),9,4,0,10,,, /*HDR&ASCB @Z40KI3O*/ 00983000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 00984000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,8,29,34,,,/*  JOBN   @Z40KI3O*/ 00985000
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/ 00986000
         FMTPTRN  (DTA,DTAC),,4,,60,,,LAST        /*         @Z40KI3O*/ 00987000
* RNIO NORMAL WITH 08 BYTES OF BTU DATA                        @Z40KI3O 00988000
BTU08    FMTPTRN  (LBL,DTA,DTAC),9,4,0,10,,,      /*HDR&ASCB @Z40KI3O*/ 00989000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 00990000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,8,29,34,,,/*  JOBN   @Z40KI3O*/ 00991000
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/ 00992000
         FMTPTRN  (DTA,DTAC),,4,,60,,,LAST        /*         @Z40KI3O*/ 00993000
* RNIO ASCB HAS **** AND 09 BYTES OF BTU DATA                  @Z40KI3O 00994000
BTU09E   FMTPTRN  (LBL,DTA,DTAC,DTAE),9,4,0,10,,, /*HDR&ASCB @Z40KI3O*/ 00995000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 00996000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,8,29,34,,,/*  JOBN   @Z40KI3O*/ 00997000
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/ 00998000
         FMTPTRN  (DTA,DTAC),,4,,60,,,            /*         @Z40KI3O*/ 00999000
         FMTPTRN  (DTA,DTAC),,1,,69,,,LAST        /*         @Z40KI3O*/ 01000000
* RNIO NORMAL WITH 09 BYTES OF BTU DATA                        @Z40KI3O 01001000
BTU09    FMTPTRN  (LBL,DTA,DTAC),9,4,0,10,,,      /*HDR&ASCB @Z40KI3O*/ 01002000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 01003000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,8,29,34,,,/*  JOBN   @Z40KI3O*/ 01004000
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/ 01005000
         FMTPTRN  (DTA,DTAC),,4,,60,,,            /*         @Z40KI3O*/ 01006000
         FMTPTRN  (DTA,DTAC),,1,,69,,,LAST        /*         @Z40KI3O*/ 01007000
* RNIO ASCB HAS **** AND 10 BYTES OF BTU DATA                  @Z40KI3O 01008000
BTU10E   FMTPTRN  (LBL,DTA,DTAC,DTAE),9,4,0,10,,, /*HDR&ASCB @Z40KI3O*/ 01009000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 01010000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,8,29,34,,,/*  JOBN   @Z40KI3O*/ 01011000
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/ 01012000
         FMTPTRN  (DTA,DTAC),,4,,60,,,            /*         @Z40KI3O*/ 01013000
         FMTPTRN  (DTA,DTAC),,2,,69,,,LAST        /*         @Z40KI3O*/ 01014000
* RNIO NORMAL WITH 10 BYTES OF BTU DATA                        @Z40KI3O 01015000
BTU10    FMTPTRN  (LBL,DTA,DTAC),9,4,0,10,,,      /*HDR&ASCB @Z40KI3O*/ 01016000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 01017000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,8,29,34,,,/*  JOBN   @Z40KI3O*/ 01018000
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/ 01019000
         FMTPTRN  (DTA,DTAC),,4,,60,,,            /*         @Z40KI3O*/ 01020000
         FMTPTRN  (DTA,DTAC),,2,,69,,,LAST        /*         @Z40KI3O*/ 01021000
* RNIO ASCB HAS **** AND 11 BYTES OF BTU DATA                  @Z40KI3O 01022000
BTU11E   FMTPTRN  (LBL,DTA,DTAC,DTAE),9,4,0,10,,, /*HDR&ASCB @Z40KI3O*/ 01023000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 01024000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,8,29,34,,,/*  JOBN   @Z40KI3O*/ 01025000
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/ 01026000
         FMTPTRN  (DTA,DTAC),,4,,60,,,            /*         @Z40KI3O*/ 01027000
         FMTPTRN  (DTA,DTAC),,3,,69,,,LAST        /*         @Z40KI3O*/ 01028000
* RNIO NORMAL WITH 11 BYTES OF BTU DATA                        @Z40KI3O 01029000
BTU11    FMTPTRN  (LBL,DTA,DTAC),9,4,0,10,,,      /*HDR&ASCB @Z40KI3O*/ 01030000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 01031000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,8,29,34,,,/*  JOBN   @Z40KI3O*/ 01032000
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/ 01033000
         FMTPTRN  (DTA,DTAC),,4,,60,,,LAST        /*         @Z40KI3O*/ 01034000
* RNIO ASCB HAS **** AND 12 BYTES OF BTU DATA                  @Z40KI3O 01035000
BTU12E   FMTPTRN  (LBL,DTA,DTAC,DTAE),9,4,0,10,,, /*HDR&ASCB @Z40KI3O*/ 01036000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 01037000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,8,29,34,,,/*  JOBN   @Z40KI3O*/ 01038000
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/ 01039000
         FMTPTRN  (DTA,DTAC),,4,,60,,,            /*         @Z40KI3O*/ 01040000
         FMTPTRN  (DTA,DTAC),,4,,69,,,LAST        /*         @Z40KI3O*/ 01041000
* RNIO NORMAL WITH 12 BYTES OF BTU DATA                        @Z40KI3O 01042000
BTU12    FMTPTRN  (LBL,DTA,DTAC),9,4,0,10,,,      /*HDR&ASCB @Z40KI3O*/ 01043000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 01044000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,8,29,34,,,/*  JOBN   @Z40KI3O*/ 01045000
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/ 01046000
         FMTPTRN  (DTA,DTAC),,4,,60,,,            /*         @Z40KI3O*/ 01047000
         FMTPTRN  (DTA,DTAC),,4,,69,,,LAST        /*         @Z40KI3O*/ 01048000
* RNIO ASCB HAS **** AND 13 BYTES OF BTU DATA                  @Z40KI3O 01049000
BTU13E   FMTPTRN  (LBL,DTA,DTAC,DTAE),9,4,0,10,,, /*HDR&ASCB @Z40KI3O*/ 01050000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 01051000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,8,29,34,,,/*  JOBN   @Z40KI3O*/ 01052000
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/ 01053000
         FMTPTRN  (DTA,DTAC),,4,,60,,,            /*         @Z40KI3O*/ 01054000
         FMTPTRN  (DTA,DTAC),,4,,69,,,            /*         @Z40KI3O*/ 01055000
         FMTPTRN  (DTA,DTAC),,1,,78,,,LAST        /*         @Z40KI3O*/ 01056000
* RNIO NORMAL WITH 13 BYTES OF BTU DATA                        @Z40KI3O 01057000
BTU13    FMTPTRN  (LBL,DTA,DTAC),9,4,0,10,,,      /*HDR&ASCB @Z40KI3O*/ 01058000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 01059000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,8,29,34,,,/*  JOBN   @Z40KI3O*/ 01060000
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/ 01061000
         FMTPTRN  (DTA,DTAC),,4,,60,,,            /*         @Z40KI3O*/ 01062000
         FMTPTRN  (DTA,DTAC),,4,,69,,,            /*         @Z40KI3O*/ 01063000
         FMTPTRN  (DTA,DTAC),,1,,78,,,LAST        /*         @Z40KI3O*/ 01064000
* RNIO ASCB HAS **** AND 14 BYTES OF BTU DATA                  @Z40KI3O 01065000
BTU14E   FMTPTRN  (LBL,DTA,DTAC,DTAE),9,4,0,10,,, /*HDR&ASCB @Z40KI3O*/ 01066000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 01067000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,8,29,34,,,/*  JOBN   @Z40KI3O*/ 01068000
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/ 01069000
         FMTPTRN  (DTA,DTAC),,4,,60,,,            /*         @Z40KI3O*/ 01070000
         FMTPTRN  (DTA,DTAC),,4,,69,,,            /*         @Z40KI3O*/ 01071000
         FMTPTRN  (DTA,DTAC),,2,,78,,,LAST        /*         @Z40KI3O*/ 01072000
* RNIO NORMAL WITH 14 BYTES OF BTU DATA                        @Z40KI3O 01073000
BTU14    FMTPTRN  (LBL,DTA,DTAC),9,4,0,10,,,      /*HDR&ASCB @Z40KI3O*/ 01074000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 01075000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,8,29,34,,,/*  JOBN   @Z40KI3O*/ 01076000
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/ 01077000
         FMTPTRN  (DTA,DTAC),,4,,60,,,            /*         @Z40KI3O*/ 01078000
         FMTPTRN  (DTA,DTAC),,4,,69,,,            /*         @Z40KI3O*/ 01079000
         FMTPTRN  (DTA,DTAC),,2,,78,,,LAST        /*         @Z40KI3O*/ 01080000
* RNIO ASCB HAS **** AND 15 BYTES OF BTU DATA                  @Z40KI3O 01081000
BTU15E   FMTPTRN  (LBL,DTA,DTAC,DTAE),9,4,0,10,,, /*HDR&ASCB @Z40KI3O*/ 01082000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 01083000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,8,29,34,,,/*  JOBN   @Z40KI3O*/ 01084000
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/ 01085000
         FMTPTRN  (DTA,DTAC),,4,,60,,,            /*         @Z40KI3O*/ 01086000
         FMTPTRN  (DTA,DTAC),,4,,69,,,            /*         @Z40KI3O*/ 01087000
         FMTPTRN  (DTA,DTAC),,3,,78,,,LAST        /*         @Z40KI3O*/ 01088000
* RNIO NORMAL WITH 15 BYTES OF BTU DATA                        @Z40KI3O 01089000
BTU15    FMTPTRN  (LBL,DTA,DTAC),9,4,0,10,,,      /*HDR&ASCB @Z40KI3O*/ 01090000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 01091000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,8,29,34,,,/*  JOBN   @Z40KI3O*/ 01092000
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/ 01093000
         FMTPTRN  (DTA,DTAC),,4,,60,,,            /*         @Z40KI3O*/ 01094000
         FMTPTRN  (DTA,DTAC),,4,,69,,,            /*         @Z40KI3O*/ 01095000
         FMTPTRN  (DTA,DTAC),,3,,78,,,LAST        /*         @Z40KI3O*/ 01096000
* RNIO ASCB HAS **** AND 16 BYTES OF BTU DATA                  @Z40KI3O 01097000
BTU16E   FMTPTRN  (LBL,DTA,DTAC,DTAE),9,4,0,10,,, /*HDR&ASCB @Z40KI3O*/ 01098000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 01099000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,8,29,34,,,/*  JOBN   @Z40KI3O*/ 01100000
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/ 01101000
         FMTPTRN  (DTA,DTAC),,4,,60,,,            /*         @Z40KI3O*/ 01102000
         FMTPTRN  (DTA,DTAC),,4,,69,,,            /*         @Z40KI3O*/ 01103000
         FMTPTRN  (DTA,DTAC),,4,,78,,,LAST        /*         @Z40KI3O*/ 01104000
* RNIO NORMAL WITH 16 BYTES OF BTU DATA                        @Z40KI3O 01105000
BTU16    FMTPTRN  (LBL,DTA,DTAC),9,4,0,10,,,      /*HDR&ASCB @Z40KI3O*/ 01106000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 01107000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,8,29,34,,,/*  JOBN   @Z40KI3O*/ 01108000
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/ 01109000
         FMTPTRN  (DTA,DTAC),,4,,60,,,            /*         @Z40KI3O*/ 01110000
         FMTPTRN  (DTA,DTAC),,4,,69,,,            /*         @Z40KI3O*/ 01111000
         FMTPTRN  (DTA,DTAC),,4,,78,,,LAST        /*         @Z40KI3O*/ 01112000
* RNIO ASCB HAS **** AND 17 BYTES OF BTU DATA                  @Z40KI3O 01113000
BTU17E   FMTPTRN  (LBL,DTA,DTAC,DTAE),9,4,0,10,,, /*HDR&ASCB @Z40KI3O*/ 01114000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 01115000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,8,29,34,,,/*  JOBN   @Z40KI3O*/ 01116000
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/ 01117000
         FMTPTRN  (DTA,DTAC),,4,,60,,,            /*         @Z40KI3O*/ 01118000
         FMTPTRN  (DTA,DTAC),,4,,69,,,            /*         @Z40KI3O*/ 01119000
         FMTPTRN  (DTA,DTAC),,4,,78,,,            /*         @Z40KI3O*/ 01120000
         FMTPTRN  (DTA,DTAC),,1,,87,,,LAST        /*         @Z40KI3O*/ 01121000
* RNIO NORMAL WITH 17 BYTES OF BTU DATA                        @Z40KI3O 01122000
BTU17    FMTPTRN  (LBL,DTA,DTAC),9,4,0,10,,,      /*HDR&ASCB @Z40KI3O*/ 01123000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 01124000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,8,29,34,,,/*  JOBN   @Z40KI3O*/ 01125000
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/ 01126000
         FMTPTRN  (DTA,DTAC),,4,,60,,,            /*         @Z40KI3O*/ 01127000
         FMTPTRN  (DTA,DTAC),,4,,69,,,            /*         @Z40KI3O*/ 01128000
         FMTPTRN  (DTA,DTAC),,4,,78,,,            /*         @Z40KI3O*/ 01129000
         FMTPTRN  (DTA,DTAC),,1,,87,,,LAST        /*         @Z40KI3O*/ 01130000
* RNIO ASCB HAS **** AND 18 BYTES OF BTU DATA                  @Z40KI3O 01131000
BTU18E   FMTPTRN  (LBL,DTA,DTAC,DTAE),9,4,0,10,,, /*HDR&ASCB @Z40KI3O*/ 01132000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 01133000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,8,29,34,,,/*  JOBN   @Z40KI3O*/ 01134000
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/ 01135000
         FMTPTRN  (DTA,DTAC),,4,,60,,,            /*         @Z40KI3O*/ 01136000
         FMTPTRN  (DTA,DTAC),,4,,69,,,            /*         @Z40KI3O*/ 01137000
         FMTPTRN  (DTA,DTAC),,4,,78,,,            /*         @Z40KI3O*/ 01138000
         FMTPTRN  (DTA,DTAC),,2,,87,,,LAST        /*         @Z40KI3O*/ 01139000
* RNIO NORMAL WITH 18 BYTES OF BTU DATA                        @Z40KI3O 01140000
BTU18    FMTPTRN  (LBL,DTA,DTAC),9,4,0,10,,,      /*HDR&ASCB @Z40KI3O*/ 01141000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 01142000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,8,29,34,,,/*  JOBN   @Z40KI3O*/ 01143000
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/ 01144000
         FMTPTRN  (DTA,DTAC),,4,,60,,,            /*         @Z40KI3O*/ 01145000
         FMTPTRN  (DTA,DTAC),,4,,69,,,            /*         @Z40KI3O*/ 01146000
         FMTPTRN  (DTA,DTAC),,4,,78,,,            /*         @Z40KI3O*/ 01147000
         FMTPTRN  (DTA,DTAC),,2,,87,,,LAST        /*         @Z40KI3O*/ 01148000
* RNIO ASCB HAS **** AND 19 BYTES OF BTU DATA                  @Z40KI3O 01149000
BTU19E   FMTPTRN  (LBL,DTA,DTAC,DTAE),9,4,0,10,,, /*HDR&ASCB @Z40KI3O*/ 01150000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 01151000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,8,29,34,,,/*  JOBN   @Z40KI3O*/ 01152000
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/ 01153000
         FMTPTRN  (DTA,DTAC),,4,,60,,,            /*         @Z40KI3O*/ 01154000
         FMTPTRN  (DTA,DTAC),,4,,69,,,            /*         @Z40KI3O*/ 01155000
         FMTPTRN  (DTA,DTAC),,4,,78,,,            /*         @Z40KI3O*/ 01156000
         FMTPTRN  (DTA,DTAC),,3,,87,,,LAST        /*         @Z40KI3O*/ 01157000
* RNIO NORMAL WITH 19 BYTES OF BTU DATA                        @Z40KI3O 01158000
BTU19    FMTPTRN  (LBL,DTA,DTAC),9,4,0,10,,,      /*HDR&ASCB @Z40KI3O*/ 01159000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 01160000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,8,29,34,,,/*  JOBN   @Z40KI3O*/ 01161000
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/ 01162000
         FMTPTRN  (DTA,DTAC),,4,,60,,,            /*         @Z40KI3O*/ 01163000
         FMTPTRN  (DTA,DTAC),,4,,69,,,            /*         @Z40KI3O*/ 01164000
         FMTPTRN  (DTA,DTAC),,4,,78,,,            /*         @Z40KI3O*/ 01165000
         FMTPTRN  (DTA,DTAC),,3,,87,,,LAST        /*         @Z40KI3O*/ 01166000
* RNIO ASCB HAS **** AND 20 BYTES OF BTU DATA                  @Z40KI3O 01167000
BTU20E   FMTPTRN  (LBL,DTA,DTAC,DTAE),9,4,0,10,,, /*HDR&ASCB @Z40KI3O*/ 01168000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 01169000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,8,29,34,,,/*  JOBN   @Z40KI3O*/ 01170000
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/ 01171000
         FMTPTRN  (DTA,DTAC),,4,,60,,,            /*         @Z40KI3O*/ 01172000
         FMTPTRN  (DTA,DTAC),,4,,69,,,            /*         @Z40KI3O*/ 01173000
         FMTPTRN  (DTA,DTAC),,4,,78,,,            /*         @Z40KI3O*/ 01174000
         FMTPTRN  (DTA,DTAC),,4,,87,,,LAST        /*         @Z40KI3O*/ 01175000
* RNIO NORMAL WITH 20 BYTES OF BTU DATA                        @Z40KI3O 01176000
BTU20    FMTPTRN  (LBL,DTA,DTAC),9,4,0,10,,,      /*HDR&ASCB @Z40KI3O*/ 01177000
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/ 01178000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,8,29,34,,,/*  JOBN   @Z40KI3O*/ 01179000
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/ 01180000
         FMTPTRN  (DTA,DTAC),,4,,60,,,            /*         @Z40KI3O*/ 01181000
         FMTPTRN  (DTA,DTAC),,4,,69,,,            /*         @Z40KI3O*/ 01182000
         FMTPTRN  (DTA,DTAC),,4,,78,,,            /*         @Z40KI3O*/ 01183000
         FMTPTRN  (DTA,DTAC),,4,,87,,,LAST        /*         @Z40KI3O*/ 01184000
*   FRR  FIRST LINE-ALL FIELDS NORMAL                                   01185000
FRRF01   FMTPTRN  (LBL),3,,0,,,,                      HEADER            01186000
         FMTPTRN  (LBL,DTA,DTAC),4,4,10,15,,,         ASCB              01187000
         FMTPTRN  (LBL,DTA,DTAC),3,2,25,29,,,         CPUID             01188000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,8,35,40,,,    JOBNAME           01189000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,8,50,55,,,    FRRNAME           01190000
         FMTPTRN  (LBL,DTA,DTAC),7,4,65,73,,,         PSW1              01191000
         FMTPTRN  (DTA,DTAC),,4,,82,,,                PSW2              01192000
         FMTPTRN  (LBL,DTA,DTAC),4,4,92,97,,,         ABCC              01193000
         FMTPTRN  (LBL,DTA,DTAC),4,4,107,112,,,LAST   ERRT              01194000
*   FRR  FIRST LINE-RTCA FIELDS CONTAIN ASTERISKS                       01195000
FRRF02   FMTPTRN  (LBL),3,,0,,,,                      HEADER            01196000
         FMTPTRN  (LBL,DTA,DTAC),4,4,10,15,,,         ASCB              01197000
         FMTPTRN  (LBL,DTA,DTAC),3,2,25,29,,,         CPUID             01198000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,8,35,40,,,    JOBNAME           01199000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,8,50,55,,,    FRRNAME           01200000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),7,8,65,73,,,    PSW               01201000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,4,92,97,,,    ABCC              01202000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,4,107,112,,,LAST    ERRT        01203000
*   FRR  FIRST LINE-ASCB HAS ASTERISKS, ALL OFTHER FIELDS NORMAL        01204000
FRRF03   FMTPTRN  (LBL),3,,0,,,,                      HEADER            01205000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,4,10,15,,,    ASCB              01206000
         FMTPTRN  (LBL,DTA,DTAC),3,2,25,29,,,         CPUID             01207000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,8,35,40,,,    JOBNAME           01208000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,8,50,55,,,    FRRNAME           01209000
         FMTPTRN  (LBL,DTA,DTAC),7,4,65,73,,,         PSW1              01210000
         FMTPTRN  (DTA,DTAC),,4,,82,,,                PSW2              01211000
         FMTPTRN  (LBL,DTA,DTAC),4,4,92,97,,,         ABCC              01212000
         FMTPTRN  (LBL,DTA,DTAC),4,4,107,112,,,LAST   ERRT              01213000
*   FRR  FIRST LINE-ALL ERROR FIELDS HAVE ASTERISKS                     01214000
FRRF04   FMTPTRN  (LBL),3,,0,,,,                      HEADER            01215000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,4,10,15,,,    ASCB              01216000
         FMTPTRN  (LBL,DTA,DTAC),3,2,25,29,,,         CPUID             01217000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,8,35,40,,,    JOBNAME           01218000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,8,50,55,,,    FRRNAME           01219000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),7,8,65,73,,,    PSW               01220000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,4,92,97,,,    ABCC              01221000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,4,107,112,,,LAST    ERRT        01222000
*   FRR  SECOND LINE-ALL FIELDS NORMAL                                  01223000
FRRF05   FMTPTRN  (LBL,DTA,DTAC),3,3,10,14,,,       FLG                 01224000
         FMTPTRN  (LBL,DTA,DTAC),2,1,22,25,,,         RET CODE          01225000
         FMTPTRN  (LBL,DTA,DTAC),4,4,31,36,,,LAST     RETRY ADDR        01226000
*   FRR  SECOND LINE-BOTH FIELDS HAVE ASTERISKS                         01227000
FRRF06   FMTPTRN  (LBL,DTA,DTAC,DTAE),3,3,10,14,,,  FLG                 01228000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),2,1,22,25,,,    RET CODE          01229000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,4,31,36,,,LAST  RETRY ADDR      01230000
*   FRR  SECOND LINE-RETRY ADDR HAS N/A                                 01231000
FRRF07   FMTPTRN  (LBL,DTA,DTAC),3,3,10,14,,,   FLG                     01232000
         FMTPTRN  (LBL,DTA,DTAC),2,1,22,25,,,         RET CODE          01233000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,4,31,36,,,LAST  RETRY ADDR      01234000
*   STAE FIRST LINE-ALL FIELDS NORMAL                                   01235000
STAF01   FMTPTRN  (LBL),4,,0,,,,                      HEADER            01236000
         FMTPTRN  (LBL,DTA,DTAC),4,4,10,15,,,         ASCB              01237000
         FMTPTRN  (LBL,DTA,DTAC),3,2,25,29,,,         CPUID             01238000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,8,35,40,,,    JOBNAME           01239000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,8,50,55,,,    ESTNAME           01240000
         FMTPTRN  (LBL,DTA,DTAC),7,4,65,73,,,         PSW1              01241000
         FMTPTRN  (DTA,DTAC),,4,,82,,,                PSW2              01242000
         FMTPTRN  (LBL,DTA,DTAC),4,4,92,97,,,         ABCC              01243000
         FMTPTRN  (LBL,DTA,DTAC),4,4,107,112,,,LAST   ERRT              01244000
*   STAE FIRST LINE-RTCA FIELDS CONTAIN ASTERISKS OR U/A                01245000
STAF02   FMTPTRN  (LBL),4,,0,,,,                      HEADER            01246000
         FMTPTRN  (LBL,DTA,DTAC),4,4,10,15,,,         ASCB              01247000
         FMTPTRN  (LBL,DTA,DTAC),3,2,25,29,,,         CPUID             01248000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,8,35,40,,,    JOBNAME           01249000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,8,50,55,,,    ESTNAME           01250000
         FMTPTRN (LBL,DTA,DTAC,DTAE),7,8,65,73,,,     PSW               01251000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,4,92,97,,,    ABCC              01252000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,4,107,112,,,LAST    ERRT        01253000
*   STAE FIRST LINE-TWO FLAG FIELDS HAVE U/A                            01254000
STAF03   FMTPTRN  (LBL),4,,0,,,,                      HEADER            01255000
         FMTPTRN  (LBL,DTA,DTAC),4,4,10,15,,,         ASCB              01256000
         FMTPTRN  (LBL,DTA,DTAC),3,2,25,29,,,         CPUID             01257000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,8,35,40,,,    JOBNAME           01258000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,8,50,55,,,    ESTNAME           01259000
         FMTPTRN  (LBL,DTA,DTAC),7,4,65,73,,,         PSW1              01260000
         FMTPTRN  (DTA,DTAC),,4,,82,,,                PSW2              01261000
         FMTPTRN  (LBL,DTA,DTAC),4,4,92,97,,,         ABCC              01262000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,4,107,112,,,LAST    ERRT        01263000
*   STAE SECOND LINE-ALL FIELDS NORMAL                                  01264000
STAF04   FMTPTRN  (LBL,DTA,DTAC),3,3,10,14,,,   FLG                     01265000
         FMTPTRN  (LBL,DTA,DTAC),2,1,22,25,,,         RET CODE          01266000
         FMTPTRN  (LBL,DTA,DTAC),4,4,31,36,,,         RETRY ADDR        01267000
         FMTPTRN  (LBL,DTA,DTAC),4,4,46,51,,,LAST     SDWA              01268000
*   STAE SECOND LINE-RETRY ADDR HAS N/A , FLAGS U/A                     01269000
STAF05   FMTPTRN  (LBL,DTA,DTAC,DTAE),3,3,10,14,,,   FLG                01270000
         FMTPTRN  (LBL,DTA,DTAC),2,1,22,25,,,         RET CODE          01271000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,4,31,36,,,    RETRY ADDR        01272000
         FMTPTRN  (LBL,DTA,DTAC),4,4,46,51,,,LAST     SDWA              01273000
*   STAE SECOND LINE-RETRY AND RETCODE HAVE ASTERISKS                   01274000
STAF06   FMTPTRN  (LBL,DTA,DTAC,DTAE),3,3,10,14,,,   FLG                01275000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),2,1,22,25,,,    RET CODE          01276000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,4,31,36,,,    RETRY ADDR        01277000
         FMTPTRN  (LBL,DTA,DTAC),4,4,46,51,,,LAST     SDWA              01278000
*   STAE SECOND LINE-RETRY ADDR HAS HEX DATA , FLAGS U/A                01279000
STAF07   FMTPTRN  (LBL,DTA,DTAC,DTAE),3,3,10,14,,,   FLG                01280000
         FMTPTRN  (LBL,DTA,DTAC),2,1,22,25,,,         RET CODE          01281000
         FMTPTRN  (LBL,DTA,DTAC),4,4,31,36,,,    RETRY ADDR             01282000
         FMTPTRN  (LBL,DTA,DTAC),4,4,46,51,,,LAST     SDWA              01283000
*   STAE SECOND LINE-RETRY ADDR HAS N/A , FLAGS HEX DATA                01284000
STAF08   FMTPTRN  (LBL,DTA,DTAC),3,3,10,14,,,   FLG                     01285000
         FMTPTRN  (LBL,DTA,DTAC),2,1,22,25,,,         RET CODE          01286000
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,4,31,36,,,    RETRY ADDR        01287000
         FMTPTRN  (LBL,DTA,DTAC),4,4,46,51,,,LAST     SDWA              01288000
@DATD    DSECT                                                          01289000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                01290000
@ENDDATD EQU   *                                                        01291000
AMDSYS04 CSECT                                                          01292000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       01293000
@01      EQU   01                                                       01294000
@02      EQU   02                                                       01295000
@03      EQU   03                                                       01296000
@04      EQU   04                                                       01297000
@05      EQU   05                                                       01298000
@06      EQU   06                                                       01299000
@07      EQU   07                                                       01300000
@08      EQU   08                                                       01301000
@09      EQU   09                                                       01302000
@10      EQU   10                                                       01303000
@11      EQU   11                                                       01304000
@12      EQU   12                                                       01305000
@13      EQU   13                                                       01306000
@14      EQU   14                                                       01307000
@15      EQU   15                                                       01308000
ABDPLPTR EQU   @01                                                      01309000
AEDITCBR EQU   @09                                                      01310000
R0FMTPTR EQU   @00                                                      01311000
R1PLPTR  EQU   @01                                                      01312000
R2WORK   EQU   @02                                                      01313000
R3PLPTR  EQU   @03                                                      01314000
R4GTMPTR EQU   @04                                                      01315000
R5RECPTR EQU   @05                                                      01316000
R13SAPTR EQU   @13                                                      01317000
R14RTN   EQU   @14                                                      01318000
R15RC    EQU   @15                                                      01319000
         ENTRY AMD4PTCH                                                 01320000
ABDPL    EQU   0                                                        01321000
ADPLFLAG EQU   ABDPL+7                                                  01322000
ADPLFMT1 EQU   ABDPL+44                                                 01323000
ADPLFMT2 EQU   ABDPL+48                                                 01324000
AMDPRTAB EQU   0                                                        01325000
DEBGFLGS EQU   AMDPRTAB+8                                               01326000
PTHFLGS1 EQU   DEBGFLGS                                                 01327000
PTHFLGS2 EQU   DEBGFLGS+1                                               01328000
INRFCFGS EQU   DEBGFLGS+2                                               01329000
IOFLGS   EQU   DEBGFLGS+3                                               01330000
STARTIME EQU   AMDPRTAB+40                                              01331000
STOPTIME EQU   AMDPRTAB+52                                              01332000
NAMES    EQU   AMDPRTAB+64                                              01333000
ADS      EQU   AMDPRTAB+104                                             01334000
AADS     EQU   ADS                                                      01335000
SIF      EQU   AMDPRTAB+124                                             01336000
SIOFLGS  EQU   SIF                                                      01337000
DVADS1   EQU   AMDPRTAB+128                                             01338000
IO       EQU   AMDPRTAB+228                                             01339000
IOFLGS2  EQU   IO                                                       01340000
DVADS2   EQU   AMDPRTAB+232                                             01341000
VCF      EQU   AMDPRTAB+332                                             01342000
SVCFLGS  EQU   VCF                                                      01343000
USR      EQU   AMDPRTAB+368                                             01344000
USRFLGS  EQU   USR                                                      01345000
USRTAB   EQU   AMDPRTAB+372                                             01346000
PI       EQU   AMDPRTAB+452                                             01347000
PIFLGS   EQU   PI                                                       01348000
PGMNGEN  EQU   AMDPRTAB+456                                             01349000
GENFLAGS EQU   PGMNGEN+3                                                01350000
SYS      EQU   GENFLAGS                                                 01351000
RNIO     EQU   GENFLAGS                                                 01352000
SRM      EQU   GENFLAGS                                                 01353000
RR       EQU   GENFLAGS                                                 01354000
GENFLGS1 EQU   AMDPRTAB+460                                             01355000
ESTARTME EQU   AMDPRTAB+500                                             01356000
ESTOPTME EQU   AMDPRTAB+509                                             01357000
OURPLIST EQU   0                                                        01358000
EIDPTR   EQU   OURPLIST+12                                              01359000
DTAPTR   EQU   OURPLIST+16                                              01360000
FMTPTR   EQU   OURPLIST+20                                              01361000
GTMPTR   EQU   OURPLIST+24                                              01362000
FPLPTR   EQU   OURPLIST+28                                              01363000
GMAREA   EQU   0                                                        01364000
REGSAV   EQU   GMAREA                                                   01365000
BACKPTR  EQU   REGSAV+4                                                 01366000
SECENTRY EQU   GMAREA+76                                                01367000
HISSAV   EQU   0                                                        01368000
HISFOR   EQU   HISSAV+8                                                 01369000
REGS     EQU   HISSAV+12                                                01370000
HIS14    EQU   REGS                                                     01371000
SRMREC   EQU   0                                                        01372000
SRMASCB  EQU   SRMREC                                                   01373000
SRMREGS  EQU   SRMREC+14                                                01374000
SRMR0R1  EQU   SRMREGS+4                                                01375000
FRRREC   EQU   0                                                        01376000
FRRASCB  EQU   FRRREC                                                   01377000
FRRSDWA  EQU   FRRREC+14                                                01378000
FRRPSW   EQU   FRRSDWA+8                                                01379000
FRRMFLGS EQU   FRRSDWA+24                                               01380000
FRRFRCDE EQU   FRRMFLGS+3                                               01381000
STAREC   EQU   0                                                        01382000
STASDWA  EQU   STAREC+14                                                01383000
STAPC    EQU   STASDWA+8                                                01384000
STAPSW   EQU   STAPC                                                    01385000
STAEFLGS EQU   STASDWA+20                                               01386000
STAR15   EQU   STASDWA+24                                               01387000
STAMFLGS EQU   STAR15                                                   01388000
STAFLGS  EQU   STAMFLGS                                                 01389000
STAFRCDE EQU   STAMFLGS+3                                               01390000
STAR0R1  EQU   STASDWA+28                                               01391000
RNIOREC  EQU   0                                                        01392000
RNIOASCB EQU   RNIOREC                                                  01393000
RNIOBTU  EQU   RNIOREC+14                                               01394000
RNIOR0   EQU   RNIOREC+34                                               01395000
EID      EQU   0                                                        01396000
AMDPRFMT EQU   0                                                        01397000
ERRASCB  EQU   0                                                        01398000
*                                      START UNREFERENCED COMPONENTS    01399000
RNIOJBNM EQU   RNIOREC+6                                                01400000
RNIOCPID EQU   RNIOREC+4                                                01401000
STARTCA  EQU   STAR0R1+4                                                01402000
STARTRY  EQU   STAR0R1                                                  01403000
STAFACF2 EQU   STAFLGS+2                                                01404000
STAFMCHD EQU   STAFLGS+1                                                01405000
@NM00007 EQU   STAFLGS                                                  01406000
STACC    EQU   STAPC+8                                                  01407000
STANAME  EQU   STASDWA                                                  01408000
STAJBNM  EQU   STAREC+6                                                 01409000
STACPUID EQU   STAREC+4                                                 01410000
STAASCB  EQU   STAREC                                                   01411000
FRRRTRY  EQU   FRRSDWA+28                                               01412000
FRRFACF2 EQU   FRRMFLGS+2                                               01413000
FRRFMCHD EQU   FRRMFLGS+1                                               01414000
@NM00006 EQU   FRRMFLGS                                                 01415000
FRREFLGS EQU   FRRSDWA+20                                               01416000
FRRCC    EQU   FRRSDWA+16                                               01417000
FRRNAME  EQU   FRRSDWA                                                  01418000
FRRJBNM  EQU   FRRREC+6                                                 01419000
FRRCPUID EQU   FRRREC+4                                                 01420000
SRMREG1  EQU   SRMR0R1+4                                                01421000
SRMREG0  EQU   SRMR0R1                                                  01422000
SRMREG15 EQU   SRMREGS                                                  01423000
SRMJBNM  EQU   SRMREC+6                                                 01424000
SRMCPUID EQU   SRMREC+4                                                 01425000
HIS0     EQU   REGS+8                                                   01426000
HIS15    EQU   REGS+4                                                   01427000
@NM00005 EQU   HISSAV+4                                                 01428000
@NM00004 EQU   HISSAV                                                   01429000
SVR14NRM EQU   GMAREA+72                                                01430000
OURSAV   EQU   REGSAV+12                                                01431000
FORPTR   EQU   REGSAV+8                                                 01432000
@NM00003 EQU   REGSAV                                                   01433000
OPTPTR   EQU   OURPLIST+8                                               01434000
BUFPTR   EQU   OURPLIST+4                                               01435000
RECPTR   EQU   OURPLIST                                                 01436000
RESERVED EQU   AMDPRTAB+522                                             01437000
CVTTZONE EQU   AMDPRTAB+518                                             01438000
ESPSEC   EQU   ESTOPTME+7                                               01439000
ESPMIN   EQU   ESTOPTME+5                                               01440000
ESPHR    EQU   ESTOPTME+3                                               01441000
ESPDAY   EQU   ESTOPTME                                                 01442000
ESSEC    EQU   ESTARTME+7                                               01443000
ESMIN    EQU   ESTARTME+5                                               01444000
ESHR     EQU   ESTARTME+3                                               01445000
ESDAY    EQU   ESTARTME                                                 01446000
ADTSBUF  EQU   AMDPRTAB+496                                             01447000
OFSTDATA EQU   AMDPRTAB+494                                             01448000
OFSTEID  EQU   AMDPRTAB+492                                             01449000
AFRMAD   EQU   AMDPRTAB+488                                             01450000
REENTWKA EQU   AMDPRTAB+484                                             01451000
PRFMTADD EQU   AMDPRTAB+480                                             01452000
AEIOCT   EQU   AMDPRTAB+476                                             01453000
EXITADDR EQU   AMDPRTAB+472                                             01454000
EXITNM   EQU   AMDPRTAB+464                                             01455000
RECDLL   EQU   AMDPRTAB+461                                             01456000
@NM00002 EQU   GENFLGS1                                                 01457000
FIRSTHSW EQU   GENFLGS1                                                 01458000
TSFOUND  EQU   GENFLGS1                                                 01459000
EOFINPRO EQU   GENFLGS1                                                 01460000
TS       EQU   GENFLGS1                                                 01461000
EOF      EQU   GENFLAGS                                                 01462000
SYSM     EQU   GENFLAGS                                                 01463000
DSP      EQU   GENFLAGS                                                 01464000
EXT      EQU   GENFLAGS                                                 01465000
PICODEA  EQU   PGMNGEN+2                                                01466000
PICODES  EQU   PGMNGEN                                                  01467000
Q        EQU   PI+1                                                     01468000
P01R     EQU   PIFLGS                                                   01469000
SELP     EQU   PIFLGS                                                   01470000
ALLP     EQU   PIFLGS                                                   01471000
USRNGTAB EQU   USRTAB                                                   01472000
O        EQU   USR+1                                                    01473000
N01R     EQU   USRFLGS                                                  01474000
SELU     EQU   USRFLGS                                                  01475000
ALLU     EQU   USRFLGS                                                  01476000
SVCNUMS  EQU   AMDPRTAB+336                                             01477000
M        EQU   VCF+1                                                    01478000
L        EQU   SVCFLGS                                                  01479000
SELV     EQU   SVCFLGS                                                  01480000
ALLV     EQU   SVCFLGS                                                  01481000
IODVADS  EQU   DVADS2                                                   01482000
K01RES   EQU   IO+1                                                     01483000
JJ       EQU   IOFLGS2                                                  01484000
SELI     EQU   IOFLGS2                                                  01485000
ALLI     EQU   IOFLGS2                                                  01486000
SIODVADS EQU   DVADS1                                                   01487000
II       EQU   SIF+1                                                    01488000
H        EQU   SIOFLGS                                                  01489000
NOEQU    EQU   SIOFLGS                                                  01490000
EQUIV    EQU   SIOFLGS                                                  01491000
SELS     EQU   SIOFLGS                                                  01492000
ALLS     EQU   SIOFLGS                                                  01493000
ASCBADDR EQU   AADS                                                     01494000
JOBNAMES EQU   NAMES                                                    01495000
DAY2     EQU   STOPTIME+10                                              01496000
F        EQU   STOPTIME+8                                               01497000
TIME2    EQU   STOPTIME                                                 01498000
DAY      EQU   STARTIME+10                                              01499000
D        EQU   STARTIME+8                                               01500000
TIME     EQU   STARTIME                                                 01501000
DDNAME   EQU   AMDPRTAB+32                                              01502000
USEREXIT EQU   AMDPRTAB+24                                              01503000
GTFWDPTR EQU   AMDPRTAB+20                                              01504000
C        EQU   DEBGFLGS+4                                               01505000
B        EQU   IOFLGS                                                   01506000
GETEOF   EQU   IOFLGS                                                   01507000
DMDFMT   EQU   INRFCFGS                                                 01508000
EDITSTOP EQU   INRFCFGS                                                 01509000
EXTTRC   EQU   INRFCFGS                                                 01510000
RET      EQU   INRFCFGS                                                 01511000
FMT      EQU   INRFCFGS                                                 01512000
SPIE     EQU   INRFCFGS                                                 01513000
TERM     EQU   INRFCFGS                                                 01514000
FLMODE   EQU   INRFCFGS                                                 01515000
REMAIN   EQU   PTHFLGS2                                                 01516000
APP      EQU   PTHFLGS2                                                 01517000
REXT     EQU   PTHFLGS1                                                 01518000
FRM      EQU   PTHFLGS1                                                 01519000
FLT      EQU   PTHFLGS1                                                 01520000
HEX      EQU   PTHFLGS1                                                 01521000
CON      EQU   PTHFLGS1                                                 01522000
GET      EQU   PTHFLGS1                                                 01523000
SCN      EQU   PTHFLGS1                                                 01524000
ROOT     EQU   PTHFLGS1                                                 01525000
CURREC   EQU   AMDPRTAB+4                                               01526000
AFMG     EQU   AMDPRTAB                                                 01527000
ADPLEXT  EQU   ABDPL+52                                                 01528000
ADPLCOM4 EQU   ABDPL+40                                                 01529000
ADPLCOM3 EQU   ABDPL+36                                                 01530000
ADPLCOM2 EQU   ABDPL+32                                                 01531000
ADPLCOM1 EQU   ABDPL+28                                                 01532000
ADPLFRMT EQU   ABDPL+24                                                 01533000
ADPLMEMA EQU   ABDPL+20                                                 01534000
ADPLCVT  EQU   ABDPL+16                                                 01535000
ADPLPRNT EQU   ABDPL+12                                                 01536000
ADPLBUF  EQU   ABDPL+8                                                  01537000
@NM00001 EQU   ADPLFLAG                                                 01538000
ADPLSYTM EQU   ADPLFLAG                                                 01539000
ADPLSNPR EQU   ADPLFLAG                                                 01540000
ADPLSBPL EQU   ABDPL+6                                                  01541000
ADPLASID EQU   ABDPL+4                                                  01542000
ADPLTCB  EQU   ABDPL                                                    01543000
*                                      END UNREFERENCED COMPONENTS      01544000
@RC00066 EQU   @RC00065                                                 01545000
@RC00058 EQU   @RC00041                                                 01546000
@RC00042 EQU   @RC00041                                                 01547000
@RC00120 EQU   @RC00115                                                 01548000
@RC00118 EQU   @RC00115                                                 01549000
@RC00116 EQU   @RC00115                                                 01550000
@RC00145 EQU   @RC00144                                                 01551000
@ENDDATA EQU   *                                                        01552000
         END   AMDSYS04,(C'PLS0915',0701,77255)                         01553000
./  ADD  SSI=32841158,NAME=AMDSYS05
         TITLE 'AMDSYS05 - FORMAT APPENDAGE FOR AHLTEXT                *00001000
                        '                                               00002000
AMDSYS05 CSECT ,                                                01S0001 00003000
@MAINENT DS    0H                                               01S0001 00004000
         USING *,@15                                            01S0001 00005000
         B     @PROLOG                                          01S0001 00006000
         DC    AL1(16)                                          01S0001 00007000
         DC    C'AMDSYS05  73.285'                              01S0001 00008000
         DROP  @15                                                      00009000
@PROLOG  STM   @14,@12,12(@13)                                  01S0001 00010000
         BALR  @12,0                                            01S0001 00011000
@PSTART  DS    0H                                               01S0001 00012000
         USING @PSTART,@12                                      01S0001 00013000
*   R3PLPTR=R1PLPTR;                /* SETUP ADDRESSABILITY TO OUR      00014000
*                                      PLIST                         */ 00015000
         LR    R3PLPTR,R1PLPTR                                  01S0024 00016000
*   R4GTMPTR=GTMPTR;                /* SETUP ADDRESSABILITY TO  01S0025 00017000
*                                      GETMAINED AREA                */ 00018000
         L     R4GTMPTR,GTMPTR(,R3PLPTR)                        01S0025 00019000
*   RFY                                                         01S0026 00020000
*     R14RTN UNRSTD;                                            01S0026 00021000
*   BACKPTR=R13SAPTR;               /* SAVE CALLERS SAVE AREA ADDRESS   00022000
*                                                            @YM03672*/ 00023000
         ST    R13SAPTR,BACKPTR(,R4GTMPTR)                      01S0027 00024000
*   R13SAPTR=ADDR(REGSAV);          /* SETUP A SAVE AREA FOR THE        00025000
*                                      FORMATTING TO USE             */ 00026000
         LR    R13SAPTR,R4GTMPTR                                01S0028 00027000
*   R5RECPTR=DTAPTR;                /* SETUP ADDRESSABILITY TO THE      00028000
*                                      RECORD                        */ 00029000
         L     R5RECPTR,DTAPTR(,R3PLPTR)                        01S0029 00030000
*   R1PLPTR=FPLPTR;                 /* PLIST ADDR IN FPLPTR          */ 00031000
         L     R1PLPTR,FPLPTR(,R3PLPTR)                         01S0030 00032000
*/********************************************************************/ 00033000
*/*                                                                  */ 00034000
*/*      DETERMINE IF THIS IS FIRST OR SECOND ENTRY FOR THE RECORD   */ 00035000
*/*                                                                  */ 00036000
*/********************************************************************/ 00037000
*                                                               01S0031 00038000
*   IF SECENTRY¬=FIRST THEN         /* CHECK TO SEE IF THIS IS A        00039000
*                                      SECOND ENTRY                  */ 00040000
         ICM   @08,3,SECENTRY(R4GTMPTR)                         01S0031 00041000
         BZ    @RF00031                                         01S0031 00042000
*     DO;                                                       01S0032 00043000
*       IF SECENTRY=ETCC THEN       /* IS THIS CLOCK COMP 2ND LINE   */ 00044000
         CLC   SECENTRY(2,R4GTMPTR),@CH00381                    01S0033 00045000
         BNE   @RF00033                                         01S0033 00046000
*         DO;                                                   01S0034 00047000
*                                                               01S0034 00048000
*/********************************************************************/ 00049000
*/*                                                                  */ 00050000
*/*      FOR CLOCK COMPARATOR SECOND LINE, SET UP FOR FORMATTING     */ 00051000
*/*      THE FOLLOWING FIELDS --                                     */ 00052000
*/*            -- TQEFLGS                                            */ 00053000
*/*            -- TQEEXIT                                            */ 00054000
*/*            -- TQEASCB@                                           */ 00055000
*/*            -- TQETCB@                                            */ 00056000
*/*      THERE ARE ONLY TWO POSSIBILITIES FOR THE FORMAT OF THIS     */ 00057000
*/*      DATA.  EITHER ALL FIELDS ARE GOOD AND ALL FIELDS ARE OUTPUT */ 00058000
*/*      OR ALL FIELDS CONTAIN EBCDIC INFORMATION.                   */ 00059000
*/*                                                                  */ 00060000
*/********************************************************************/ 00061000
*                                                               01S0035 00062000
*           ADPLFMT2=ADDR(EXTSUFCC);/* SETUP THE ADDRESS OF THE DATA    00063000
*                                      TO BE FORMATTED               */ 00064000
         LA    @08,EXTSUFCC(,R5RECPTR)                          01S0035 00065000
         ST    @08,ADPLFMT2(,ABDPLPTR)                          01S0035 00066000
*           IF EXTSUFCC=ERRIND|EXTCFLGS=UNAVS THEN/* IF SUFFIX IS       00067000
*                                      EBCDIC                        */ 00068000
         CLC   EXTSUFCC(14,R5RECPTR),ERRIND                     01S0036 00069000
         BE    @RT00036                                         01S0036 00070000
         CLC   EXTCFLGS(2,R5RECPTR),@CC00371                    01S0036 00071000
         BNE   @RF00036                                         01S0036 00072000
@RT00036 DS    0H                                               01S0037 00073000
*             R0FMTPTR=ADDR(CCF02); /* POINT TO EBCDIC FORMAT        */ 00074000
         LA    R0FMTPTR,CCF02                                   01S0037 00075000
*           ELSE                    /* OTHERWISE,                    */ 00076000
*             R0FMTPTR=ADDR(CCF01); /* USE GOOD FORMAT               */ 00077000
         B     @RC00036                                         01S0038 00078000
@RF00036 LA    R0FMTPTR,CCF01                                   01S0038 00079000
*         END;                      /* END OF CLOCK COMP 2ND LINE    */ 00080000
*       ELSE                                                    01S0040 00081000
*         IF SECENTRY=ETCT THEN     /* IS THIS CPU TIMER 2ND LINE    */ 00082000
         B     @RC00033                                         01S0040 00083000
@RF00033 CLC   SECENTRY(2,R4GTMPTR),@CH00383                    01S0040 00084000
         BNE   @RF00040                                         01S0040 00085000
*           DO;                                                 01S0041 00086000
*                                                               01S0041 00087000
*/********************************************************************/ 00088000
*/*                                                                  */ 00089000
*/*      FOR CPU TIMER SECOND LINE, SET UP FOR FORMATTING THE        */ 00090000
*/*      FOLLOWING FIELDS ---                                        */ 00091000
*/*            -- TQEFLGS                                            */ 00092000
*/*            -- TQEEXIT                                            */ 00093000
*/*      THERE ARE ONLY TWO POSSIBILITIES FOR THE FORMAT OF THIS     */ 00094000
*/*      DATA.  EITHER ALL FIELDS ARE GOOD AND ALL FIELDS ARE        */ 00095000
*/*      OUTPUT OR ALL FIELDS ARE IN ERROR AND ASTERISKS ARE OUTPUT  */ 00096000
*/*                                                                  */ 00097000
*/********************************************************************/ 00098000
*                                                               01S0042 00099000
*             ADPLFMT2=ADDR(EXTSUFCT);/* SETUP THE ADDRESS OF DATA TO   00100000
*                                      BE FORMATTED                  */ 00101000
         LA    @08,EXTSUFCT(,R5RECPTR)                          01S0042 00102000
         ST    @08,ADPLFMT2(,ABDPLPTR)                          01S0042 00103000
*             IF EXTSUFCT=ERRIND(1:6) THEN/* IF SIFFIX INDICATES        00104000
*                                      ERRORS                        */ 00105000
         CLC   EXTSUFCT(6,R5RECPTR),ERRIND                      01S0043 00106000
         BNE   @RF00043                                         01S0043 00107000
*               R0FMTPTR=ADDR(CPUF02);/* POINT TO ERROR FORMAT       */ 00108000
         LA    R0FMTPTR,CPUF02                                  01S0044 00109000
*             ELSE                  /* OTHERWISE                     */ 00110000
*               R0FMTPTR=ADDR(CPUF01);/* USE GOOD FORMAT.            */ 00111000
         B     @RC00043                                         01S0045 00112000
@RF00043 LA    R0FMTPTR,CPUF01                                  01S0045 00113000
*           END;                                                01S0046 00114000
*         ELSE                      /* MUST BE SOME KIND OF ERROR    */ 00115000
*           DO;                     /* SO SET RC TO IGNORE THIS REC. */ 00116000
         B     @RC00040                                         01S0047 00117000
@RF00040 DS    0H                                               01S0048 00118000
*/********************************************************************/ 00119000
*/*                                                                  */ 00120000
*/*      WHEN SECOND LINE INDICATOR INDICATES NEITHER CLOCK          */ 00121000
*/*      COMPARATOR NOR CPU TIMER, SET RETURN CODE TO IGNORE         */ 00122000
*/*      THIS RECORD AND RETURN TO THE CALLER.                       */ 00123000
*/*                                                                  */ 00124000
*/********************************************************************/ 00125000
*                                                               01S0048 00126000
*             R15RC=RCIGNORE;                                   01S0048 00127000
         L     @08,BACKPTR(,R4GTMPTR)                           01S0048 00128000
         MVC   R15RC(4,@08),@CF00041                            01S0048 00129000
*             GO TO S05END;                                     01S0049 00130000
         B     S05END                                           01S0049 00131000
*           END;                                                01S0050 00132000
*                                                               01S0050 00133000
*/********************************************************************/ 00134000
*/*                                                                  */ 00135000
*/*      CALL THE FORMATTING ROUTINE FOR THE SECOND LINE.            */ 00136000
*/*      RESET THE SECOND ENTRY INDICATOR.                           */ 00137000
*/*      RETURN TO CALLER.                                           */ 00138000
*/*                                                                  */ 00139000
*/********************************************************************/ 00140000
*                                                               01S0051 00141000
*       CALL AMDPRFMT;              /* CALL THE FORMATTING ROUTINE   */ 00142000
@RC00040 DS    0H                                               01S0051 00143000
@RC00033 L     @15,FMTPTR(,R3PLPTR)                             01S0051 00144000
         BALR  @14,@15                                          01S0051 00145000
*       SECENTRY=FIRST;             /* RESET THE SECOND ENTRY IND    */ 00146000
         SLR   @08,@08                                          01S0052 00147000
         STH   @08,SECENTRY(,R4GTMPTR)                          01S0052 00148000
*       R15RC=RCNEWREC;             /* SET RC TO PUT OUT THIS RECORD    00149000
*                                      AND GET NEW ONE               */ 00150000
         L     @08,BACKPTR(,R4GTMPTR)                           01S0053 00151000
         MVC   R15RC(4,@08),@CF00097                            01S0053 00152000
*     END;                                                      01S0054 00153000
*   ELSE                                                        01S0055 00154000
*                                                               01S0055 00155000
*/********************************************************************/ 00156000
*/*                                                                  */ 00157000
*/*      FOR FIRST ENTRY FOR A RECORD, DO THE FOLLOWING --           */ 00158000
*/*            --- DETERMINE IF ERROR RECORD, AND IF SO,             */ 00159000
*/*                SET RC TO DUMP RECORD IN HEX                      */ 00160000
*/*            --- IF NOT, FORMAT PREFIX OF EXT RECORD               */ 00161000
*/*            --- FOR SIG P, FORMAT SUFFIX                          */ 00162000
*/*            --- SET RC AND RETURN TO CALLER                       */ 00163000
*/*                                                                  */ 00164000
*/********************************************************************/ 00165000
*                                                               01S0055 00166000
*     IF ERRASCB=CATERIND THEN      /* CHECK TO SEE IF THIS IS AN       00167000
*                                      ERROR RECORD                  */ 00168000
         B     @RC00031                                         01S0055 00169000
@RF00031 CLC   ERRASCB(2,R5RECPTR),@CH00367                     01S0055 00170000
         BNE   @RF00055                                         01S0055 00171000
*       DO;                                                     01S0056 00172000
*         R15RC=RCHEXDMP;           /* SET RC TO TAKE A HEX DUMP     */ 00173000
         L     @08,BACKPTR(,R4GTMPTR)                           01S0057 00174000
         MVC   R15RC(4,@08),@CF00073                            01S0057 00175000
*       END;                                                    01S0058 00176000
*     ELSE                          /* THIS RECORD IS OKAY, SO SET UP   00177000
*                                      FORMAT OF RECORD PREFIX       */ 00178000
*       IF SYS=ON|EXT=ON THEN       /* IF ALLS RECORDS DESIRED OR EXT   00179000
*                                      SPECIFICALLY -- CONTINUE      */ 00180000
         B     @RC00055                                         01S0059 00181000
@RF00055 TM    SYS(AEDITCBR),B'10100000'                        01S0059 00182000
         BZ    @RF00059                                         01S0059 00183000
*         DO;                                                   01S0060 00184000
*           RFY                                                 01S0061 00185000
*             R6OUTPTR RSTD;                                    01S0061 00186000
*           R6OUTPTR=ADPLBUF;       /* GET ADDRESS OF OUTPUT BUFFER  */ 00187000
         L     R6OUTPTR,ADPLBUF(,ABDPLPTR)                      01S0062 00188000
*           GEN REFS(EXTOPIT) NODEFS SETS(INTCODE,CVWORK) SEQFLOW;      00189000
         MVO  CVWORK(3,R4GTMPTR),EXTOPIT(2,R5RECPTR)  MOVE INT TYPE     00190000
         UNPK INTCODE(4,R6OUTPTR),CVWORK(3,R4GTMPTR)  UNPACK INT TYPE   00191000
         OI   INTCODE+3(R6OUTPTR),X'F0' SET LAST ZONE BITS              00192000
*           RFY                                                 01S0064 00193000
*             R6OUTPTR UNRSTD;                                  01S0064 00194000
*           ADPLFMT2=ADDR(EXTREC);  /* GET ADDR OF DATA TO BE   01S0065 00195000
*                                      FORMATTED                     */ 00196000
         ST    R5RECPTR,ADPLFMT2(,ABDPLPTR)                     01S0065 00197000
*           IF EXTITTCB=NOTAPP THEN /* IF TCB@ = N/A                 */ 00198000
         CLC   EXTITTCB(4,R5RECPTR),@CC00394                    01S0066 00199000
         BNE   @RF00066                                         01S0066 00200000
*             R0FMTPTR=ADDR(PREF02);/* POINT TO TCB EBCDIC FORMAT    */ 00201000
         LA    R0FMTPTR,PREF02                                  01S0067 00202000
*           ELSE                    /* OTHERWISE                     */ 00203000
*             R0FMTPTR=ADDR(PREF01);/* USE ALL NORMAL PREFIX FORMAT  */ 00204000
         B     @RC00066                                         01S0068 00205000
@RF00066 LA    R0FMTPTR,PREF01                                  01S0068 00206000
*           CALL AMDPRFMT;                                      01S0069 00207000
*                                                               01S0069 00208000
@RC00066 L     @15,FMTPTR(,R3PLPTR)                             01S0069 00209000
         BALR  @14,@15                                          01S0069 00210000
*/********************************************************************/ 00211000
*/*                                                                  */ 00212000
*/*      HAVING FORMATTED THE PREFIX, DETERMINE THE INTERRUPT TYPE   */ 00213000
*/*      AND CONTINUE AS FOLLOWS ---                                 */ 00214000
*/*            SIG P -- SET UP SPECIAL FORMAT FOR INCLUSION ON       */ 00215000
*/*                     THIS LINE, THEN CALL AMDPRFMT AND SET RC     */ 00216000
*/*                     TO GET A NEW RECORD                          */ 00217000
*/*            CPU TIMER AND CLOCK COMPARATOR -- SET RC TO RETURN    */ 00218000
*/*                     AFTER PUTTING OUT THIS RECORD                */ 00219000
*/*            ALL OTHERS -- SET RC TO GET NEW RECORD                */ 00220000
*/*                                                                  */ 00221000
*/********************************************************************/ 00222000
*                                                               01S0070 00223000
*           IF EXTOPIT=ETCC|EXTOPIT=ETCT THEN/* FOR CPU TIMER AND    */ 00224000
         CLC   EXTOPIT(2,R5RECPTR),@CB00381                     01S0070 00225000
         BE    @RT00070                                         01S0070 00226000
         CLC   EXTOPIT(2,R5RECPTR),@CB00383                     01S0070 00227000
         BNE   @RF00070                                         01S0070 00228000
@RT00070 DS    0H                                               01S0071 00229000
*             DO;                   /* CLOCK COMPARATOR              */ 00230000
*               SECENTRY=EXTOPIT;   /* SET 2ND ENTRY INDICATOR       */ 00231000
         MVC   SECENTRY(2,R4GTMPTR),EXTOPIT(R5RECPTR)           01S0072 00232000
*               R15RC=RCRETURN;     /* SET RC TO RETURN              */ 00233000
         L     @08,BACKPTR(,R4GTMPTR)                           01S0073 00234000
         SLR   @15,@15                                          01S0073 00235000
         ST    @15,R15RC(,@08)                                  01S0073 00236000
*             END;                                              01S0074 00237000
*           ELSE                                                01S0075 00238000
*             IF EXTOPIT(1:1)=ETSP0 THEN                        01S0075 00239000
         B     @RC00070                                         01S0075 00240000
@RF00070 CLI   EXTOPIT(R5RECPTR),X'12'                          01S0075 00241000
         BNE   @RF00075                                         01S0075 00242000
*               DO;                                             01S0076 00243000
*                                                               01S0076 00244000
*/********************************************************************/ 00245000
*/*                                                                  */ 00246000
*/*      FORMAT SUFFIX OF SIG P RECORD                               */ 00247000
*/*                                                                  */ 00248000
*/********************************************************************/ 00249000
*                                                               01S0077 00250000
*                 ADPLFMT2=ADDR(EXTSUFSP);/* GET ADDRESS OF DATA TO     00251000
*                                      BE FORMATTED                  */ 00252000
         LA    @08,EXTSUFSP(,R5RECPTR)                          01S0077 00253000
         ST    @08,ADPLFMT2(,ABDPLPTR)                          01S0077 00254000
*                 IF EXTSUFSP=ERRIND(1:6) THEN/* IF SIG P SUFFIX IN     00255000
*                                      ERROR                         */ 00256000
         CLC   EXTSUFSP(6,R5RECPTR),ERRIND                      01S0078 00257000
         BNE   @RF00078                                         01S0078 00258000
*                   R0FMTPTR=ADDR(SIGPF02);/* POINT TO ERROR SUFFIX  */ 00259000
         LA    R0FMTPTR,SIGPF02                                 01S0079 00260000
*                 ELSE              /* OTHERWISE                     */ 00261000
*                   R0FMTPTR=ADDR(SIGPF01);/* POINT TO GOOD SUFFIX   */ 00262000
         B     @RC00078                                         01S0080 00263000
@RF00078 LA    R0FMTPTR,SIGPF01                                 01S0080 00264000
*                 CALL AMDPRFMT;    /* CALL FORMATTING ROUTINE       */ 00265000
@RC00078 L     @15,FMTPTR(,R3PLPTR)                             01S0081 00266000
         BALR  @14,@15                                          01S0081 00267000
*                 R15RC=RCNEWREC;   /* SET RC TO GET NEW RECORD      */ 00268000
         L     @08,BACKPTR(,R4GTMPTR)                           01S0082 00269000
         MVC   R15RC(4,@08),@CF00097                            01S0082 00270000
*               END;                                            01S0083 00271000
*             ELSE                                              01S0084 00272000
*               R15RC=RCNEWREC;     /* SET RC TO GET NEW RECORD      */ 00273000
         B     @RC00075                                         01S0084 00274000
@RF00075 L     @08,BACKPTR(,R4GTMPTR)                           01S0084 00275000
         MVC   R15RC(4,@08),@CF00097                            01S0084 00276000
*         END;                                                  01S0085 00277000
*       ELSE                                                    01S0086 00278000
*         R15RC=RCIGNORE;           /* EXT RECORDS NOT BEING    01S0086 00279000
*                                      FORMATTED SO SET RC TO IGNORE    00280000
*                                      THIS REC                      */ 00281000
         B     @RC00059                                         01S0086 00282000
@RF00059 L     @08,BACKPTR(,R4GTMPTR)                           01S0086 00283000
         MVC   R15RC(4,@08),@CF00041                            01S0086 00284000
*S05END:                                                        01S0087 00285000
*   R13SAPTR=BACKPTR;               /* RESTORE HIS SAVE AREA @YM03672*/ 00286000
@RC00059 DS    0H                                               01S0087 00287000
@RC00055 DS    0H                                               01S0087 00288000
@RC00031 DS    0H                                               01S0087 00289000
S05END   L     R13SAPTR,BACKPTR(,R4GTMPTR)                      01S0087 00290000
*   END AMDSYS05                    /* THIS WILL RETURN US TO CALLER    00291000
*                                                                    */ 00292000
*                                                               01S0088 00293000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */ 00294000
*/*%INCLUDE SYSUT5  (SYS05PRO)                                       */ 00295000
*/*%INCLUDE SYSUT5  (SYS05DCL)                                       */ 00296000
*/*%INCLUDE SYSLIB  (AMDPRTAB)                                       */ 00297000
*/*%INCLUDE SYSLIB  (IHAABDPL)                                       */ 00298000
*/*%INCLUDE SYSLIB  (IMDMEDIT)                                       */ 00299000
*/*%INCLUDE SYSUT5  (SYS05MAN)                                       */ 00300000
*                                                               01S0088 00301000
*       ;                                                       01S0088 00302000
@EL00001 DS    0H                                               01S0088 00303000
@EF00001 DS    0H                                               01S0088 00304000
@ER00001 LM    @14,@12,12(@13)                                  01S0088 00305000
         BR    @14                                              01S0088 00306000
@DATA    DS    0H                                                       00307000
@CH00367 DC    XL2'EEEE'                                                00308000
@CH00381 DC    XL2'1004'                                                00309000
@CH00383 DC    XL2'1005'                                                00310000
@DATD    DSECT                                                          00311000
         DS    0F                                                       00312000
AMDSYS05 CSECT                                                          00313000
         DS    0F                                                       00314000
@CF00097 DC    F'4'                                                     00315000
@CF00041 DC    F'8'                                                     00316000
@CF00073 DC    F'12'                                                    00317000
@DATD    DSECT                                                          00318000
         DS    0D                                                       00319000
AMDSYS05 CSECT                                                          00320000
         DS    0F                                                       00321000
@SIZDATD DC    AL1(0)                                                   00322000
         DC    AL3(@ENDDATD-@DATD)                                      00323000
         DS    0D                                                       00324000
@CC00371 DC    C'UA'                                                    00325000
@CC00394 DC    C'N/A '                                                  00326000
@CB00381 DC    X'1004'                                                  00327000
@CB00383 DC    X'1005'                                                  00328000
UNAV     DC    CL8'U/A'                                                 00329000
ERRIND   DC    CL14'**************'                                     00330000
PRELBL1  DC    CL24'EXTASCBCPUJOBNOLD PSWTCB'                           00331000
SIGPLBL1 DC    CL11'PARMSIG CPU'                                        00332000
CPULBL1  DC    CL21'TQE FIELDS:FLG/EXITCB'                              00333000
CCLBL1   DC    CL25'TQE FIELDS:FLG/EXIASCBTCB'                          00334000
@DATD    DSECT                                                          00335000
         EQUATES                                                        00336000
AMDSYS05 CSECT                                                          00337000
*********************************************************************** 00338000
*                                                                     * 00339000
*        RECORD PREFIX -- ALL FIELDS NORMAL                           * 00340000
*                                                                     * 00341000
*********************************************************************** 00342000
PREF01   FMTPTRN (LBL,LBLP),3,,0,,PRELBL1,,       HEADER                00343000
         FMTPTRN (LBL,DTA,DTAC),4,4,10,15,,,      ASCB                  00344000
         FMTPTRN (LBL,DTA,DTAC),3,2,25,29,,,      CPU                   00345000
         FMTPTRN (LBL,DTA,DTAC,DTAE),4,8,35,40,,, JOB NAME              00346000
         FMTPTRN (LBL,DTA,DTAC),7,4,50,58,,,      PSW1                  00347000
         FMTPTRN (DTA,DTAC),,4,,67,,,             PSW2                  00348000
         FMTPTRN (LBL,DTA,DTAC),3,4,77,81,,,LAST  TCB                   00349000
*********************************************************************** 00350000
*                                                                     * 00351000
*        RECORD PREFIX -- TCB FIELD = N/A                             * 00352000
*                                                                     * 00353000
*********************************************************************** 00354000
PREF02   FMTPTRN (LBL,LBLP),3,,0,,PRELBL1,,       HEADER                00355000
         FMTPTRN (LBL,DTA,DTAC),4,4,10,15,,,      ASCB                  00356000
         FMTPTRN (LBL,DTA,DTAC),3,2,25,29,,,      CPU                   00357000
         FMTPTRN (LBL,DTA,DTAC,DTAE),4,8,35,40,,, JOB NAME              00358000
         FMTPTRN (LBL,DTA,DTAC),7,4,50,58,,,      PSW1                  00359000
         FMTPTRN (DTA,DTAC),,4,,67,,,             PSW2                  00360000
         FMTPTRN (LBL,DTA,DTAC,DTAE),3,4,77,81,,,LAST  TCB              00361000
*********************************************************************** 00362000
*                                                                     * 00363000
*        RECORD SUFFIX--SIG P--ALL FIELDS NORMAL                      * 00364000
*                                                                     * 00365000
*********************************************************************** 00366000
SIGPF01  FMTPTRN (LBL,DTA,DTAC,LBLP),4,4,91,96,SIGPLBL1,,  PARM         00367000
         FMTPTRN (LBL,DTA,DTAC),7,2,106,114,,,LAST         SIG-CPU      00368000
*********************************************************************** 00369000
*                                                                     * 00370000
*        RECORD SUFFIX--SIG P--ERROR INDICATORS                       * 00371000
*                                                                     * 00372000
*********************************************************************** 00373000
SIGPF02  FMTPTRN (LBL,DTA,DTAC,LBLP,DTAE),4,4,91,96,SIGPLBL1,, PARM     00374000
         FMTPTRN (LBL,DTA,DTAC,DTAE),7,2,106,114,,,LAST    SIG-CPU      00375000
*********************************************************************** 00376000
*                                                                     * 00377000
*        RECORD SUFFIX--SECOND LINE--CPU TIMER--ALL FIELDS OK         * 00378000
*                                                                     * 00379000
*********************************************************************** 00380000
CPUF01   FMTPTRN (LBL,LBLP),11,,22,,CPULBL1,,     HEADER                00381000
         FMTPTRN (LBL,DTA,DTAC),7,2,50,58,,,      FLAGS                 00382000
         FMTPTRN (DTA,DTAC),,4,,67,,              EXIT ADDRESS          00383000
         FMTPTRN (LBL,DTA,DTAC),3,4,77,81,,,LAST  TCB                   00384000
*********************************************************************** 00385000
*                                                                     * 00386000
*        RECORD SUFFIX--SECOND LINE--CPU TIMER--ALL FIELDS BAD        * 00387000
*                                                                     * 00388000
*********************************************************************** 00389000
CPUF02   FMTPTRN (LBL,LBLP),11,,22,,CPULBL1,,     HEADER                00390000
         FMTPTRN (LBL,DTA,DTAC,DTAE),7,2,50,58,,, FLAGS                 00391000
         FMTPTRN (DTA,DTAC,DTAE),,4,,67,,         EXIT ADDRESS          00392000
         FMTPTRN (LBL,DTA,DTAC,DTAE),3,4,77,81,,,LAST TCB               00393000
*********************************************************************** 00394000
*                                                                     * 00395000
*        RECORD SUFFIX--SECOND LINE--CLOCK COMP--ALL FIELDS OK        * 00396000
*                                                                     * 00397000
*********************************************************************** 00398000
CCF01    FMTPTRN (LBL,LBLP),11,,22,,CCLBL1,,      HEADER                00399000
         FMTPTRN (LBL,DTA,DTAC),7,2,50,58,,,      FLAGS                 00400000
         FMTPTRN (DTA,DTAC),,4,,67,,              EXIT ADDRESS          00401000
         FMTPTRN (LBL,DTA,DTAC),4,4,35,40,,,      ASCB                  00402000
         FMTPTRN (LBL,DTA,DTAC),3,4,77,81,,,LAST  TCB                   00403000
*********************************************************************** 00404000
*                                                                     * 00405000
*        RECORD SUFFIX--SECOND LINE--CLOCK COMP--ALL FIELDS BAD       * 00406000
*                                                                     * 00407000
*********************************************************************** 00408000
CCF02    FMTPTRN (LBL,LBLP),11,,22,,CCLBL1,,      HEADER                00409000
         FMTPTRN (LBL,DTA,DTAC,DTAE),7,2,50,58,,, FLAGS                 00410000
         FMTPTRN (DTA,DTAC,DTAE),,4,,67,,         EXIT ADDRESS          00411000
         FMTPTRN (LBL,DTA,DTAC,DTAE),4,4,35,40,,, ASCB                  00412000
         FMTPTRN (LBL,DTA,DTAC,DTAE),3,4,77,81,,,LAST TCB               00413000
@DATD    DSECT                                                          00414000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                00415000
@ENDDATD EQU   *                                                        00416000
AMDSYS05 CSECT                                                          00417000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       00418000
@01      EQU   01                                                       00419000
@02      EQU   02                                                       00420000
@03      EQU   03                                                       00421000
@04      EQU   04                                                       00422000
@05      EQU   05                                                       00423000
@06      EQU   06                                                       00424000
@07      EQU   07                                                       00425000
@08      EQU   08                                                       00426000
@09      EQU   09                                                       00427000
@10      EQU   10                                                       00428000
@11      EQU   11                                                       00429000
@12      EQU   12                                                       00430000
@13      EQU   13                                                       00431000
@14      EQU   14                                                       00432000
@15      EQU   15                                                       00433000
AEDITCBR EQU   @09                                                      00434000
ABDPLPTR EQU   @01                                                      00435000
R0FMTPTR EQU   @00                                                      00436000
R1PLPTR  EQU   @01                                                      00437000
R2WORK   EQU   @02                                                      00438000
R3PLPTR  EQU   @03                                                      00439000
R4GTMPTR EQU   @04                                                      00440000
R5RECPTR EQU   @05                                                      00441000
R6OUTPTR EQU   @06                                                      00442000
R13SAPTR EQU   @13                                                      00443000
R14RTN   EQU   @14                                                      00444000
R7WORK   EQU   @07                                                      00445000
AMDPRTAB EQU   0                                                        00446000
DEBGFLGS EQU   AMDPRTAB+8                                               00447000
PTHFLGS1 EQU   DEBGFLGS                                                 00448000
PTHFLGS2 EQU   DEBGFLGS+1                                               00449000
INRFCFGS EQU   DEBGFLGS+2                                               00450000
IOFLGS   EQU   DEBGFLGS+3                                               00451000
STARTIME EQU   AMDPRTAB+40                                              00452000
STOPTIME EQU   AMDPRTAB+52                                              00453000
NAMES    EQU   AMDPRTAB+64                                              00454000
ADS      EQU   AMDPRTAB+104                                             00455000
AADS     EQU   ADS                                                      00456000
SIF      EQU   AMDPRTAB+124                                             00457000
SIOFLGS  EQU   SIF                                                      00458000
DVADS1   EQU   AMDPRTAB+128                                             00459000
IO       EQU   AMDPRTAB+228                                             00460000
IOFLGS2  EQU   IO                                                       00461000
DVADS2   EQU   AMDPRTAB+232                                             00462000
VCF      EQU   AMDPRTAB+332                                             00463000
SVCFLGS  EQU   VCF                                                      00464000
USR      EQU   AMDPRTAB+368                                             00465000
USRFLGS  EQU   USR                                                      00466000
USRTAB   EQU   AMDPRTAB+372                                             00467000
PI       EQU   AMDPRTAB+452                                             00468000
PIFLGS   EQU   PI                                                       00469000
PGMNGEN  EQU   AMDPRTAB+456                                             00470000
GENFLAGS EQU   PGMNGEN+3                                                00471000
EXT      EQU   GENFLAGS                                                 00472000
SYS      EQU   GENFLAGS                                                 00473000
GENFLGS1 EQU   AMDPRTAB+460                                             00474000
ESTARTME EQU   AMDPRTAB+500                                             00475000
ESTOPTME EQU   AMDPRTAB+509                                             00476000
ABDPL    EQU   0                                                        00477000
ADPLFLAG EQU   ABDPL+7                                                  00478000
ADPLBUF  EQU   ABDPL+8                                                  00479000
ADPLFMT2 EQU   ABDPL+48                                                 00480000
OURPLIST EQU   0                                                        00481000
EIDPTR   EQU   OURPLIST+12                                              00482000
DTAPTR   EQU   OURPLIST+16                                              00483000
FMTPTR   EQU   OURPLIST+20                                              00484000
GTMPTR   EQU   OURPLIST+24                                              00485000
FPLPTR   EQU   OURPLIST+28                                              00486000
GMAREA   EQU   0                                                        00487000
REGSAV   EQU   GMAREA                                                   00488000
BACKPTR  EQU   REGSAV+4                                                 00489000
CVWORK   EQU   GMAREA+72                                                00490000
SECENTRY EQU   GMAREA+80                                                00491000
OUTBUF   EQU   0                                                        00492000
INTCODE  EQU   OUTBUF+5                                                 00493000
HISSAV   EQU   0                                                        00494000
R15RC    EQU   HISSAV+16                                                00495000
EXTREC   EQU   0                                                        00496000
EXTPREF  EQU   EXTREC                                                   00497000
EXTOPSW  EQU   EXTPREF+14                                               00498000
EXTOPIT  EQU   EXTOPSW+2                                                00499000
EXTITTCB EQU   EXTPREF+22                                               00500000
EXTSUF   EQU   EXTREC+26                                                00501000
AMDPRFMT EQU   0                                                        00502000
ERRASCB  EQU   0                                                        00503000
EID      EQU   0                                                        00504000
EXTSUFCC EQU   EXTSUF                                                   00505000
EXTCFLGS EQU   EXTSUFCC                                                 00506000
EXTSUFCT EQU   EXTSUF                                                   00507000
EXTTFLGS EQU   EXTSUFCT                                                 00508000
EXTSUFSP EQU   EXTSUF                                                   00509000
*                                      START UNREFERENCED COMPONENTS    00510000
EXTSPROC EQU   EXTSUFSP+4                                               00511000
EXTSPARM EQU   EXTSUFSP                                                 00512000
EXTTEXIT EQU   EXTSUFCT+2                                               00513000
EXTTQFL2 EQU   EXTTFLGS+1                                               00514000
EXTTQFL  EQU   EXTTFLGS                                                 00515000
EXTCTCB  EQU   EXTSUFCC+10                                              00516000
EXTCASCB EQU   EXTSUFCC+6                                               00517000
EXTCEXIT EQU   EXTSUFCC+2                                               00518000
EXTCQFL2 EQU   EXTCFLGS+1                                               00519000
EXTCQFL  EQU   EXTCFLGS                                                 00520000
@NM00009 EQU   EXTOPSW+4                                                00521000
@NM00008 EQU   EXTOPSW                                                  00522000
EXTJBN   EQU   EXTPREF+6                                                00523000
EXTCPUID EQU   EXTPREF+4                                                00524000
EXTASCB  EQU   EXTPREF                                                  00525000
@NM00007 EQU   HISSAV                                                   00526000
@NM00006 EQU   OUTBUF+9                                                 00527000
@NM00005 EQU   OUTBUF                                                   00528000
SVR14NRM EQU   GMAREA+76                                                00529000
@NM00004 EQU   GMAREA+75                                                00530000
@NM00003 EQU   REGSAV                                                   00531000
OPTPTR   EQU   OURPLIST+8                                               00532000
BUFPTR   EQU   OURPLIST+4                                               00533000
RECPTR   EQU   OURPLIST                                                 00534000
ADPLEXT  EQU   ABDPL+52                                                 00535000
ADPLFMT1 EQU   ABDPL+44                                                 00536000
ADPLCOM4 EQU   ABDPL+40                                                 00537000
ADPLCOM3 EQU   ABDPL+36                                                 00538000
ADPLCOM2 EQU   ABDPL+32                                                 00539000
ADPLCOM1 EQU   ABDPL+28                                                 00540000
ADPLFRMT EQU   ABDPL+24                                                 00541000
ADPLMEMA EQU   ABDPL+20                                                 00542000
ADPLCVT  EQU   ABDPL+16                                                 00543000
ADPLPRNT EQU   ABDPL+12                                                 00544000
@NM00002 EQU   ADPLFLAG                                                 00545000
ADPLSYTM EQU   ADPLFLAG                                                 00546000
ADPLSNPR EQU   ADPLFLAG                                                 00547000
ADPLSBPL EQU   ABDPL+6                                                  00548000
ADPLASID EQU   ABDPL+4                                                  00549000
ADPLTCB  EQU   ABDPL                                                    00550000
RESERVED EQU   AMDPRTAB+522                                             00551000
CVTTZONE EQU   AMDPRTAB+518                                             00552000
ESPSEC   EQU   ESTOPTME+7                                               00553000
ESPMIN   EQU   ESTOPTME+5                                               00554000
ESPHR    EQU   ESTOPTME+3                                               00555000
ESPDAY   EQU   ESTOPTME                                                 00556000
ESSEC    EQU   ESTARTME+7                                               00557000
ESMIN    EQU   ESTARTME+5                                               00558000
ESHR     EQU   ESTARTME+3                                               00559000
ESDAY    EQU   ESTARTME                                                 00560000
ADTSBUF  EQU   AMDPRTAB+496                                             00561000
OFSTDATA EQU   AMDPRTAB+494                                             00562000
OFSTEID  EQU   AMDPRTAB+492                                             00563000
AFRMAD   EQU   AMDPRTAB+488                                             00564000
REENTWKA EQU   AMDPRTAB+484                                             00565000
PRFMTADD EQU   AMDPRTAB+480                                             00566000
AEIOCT   EQU   AMDPRTAB+476                                             00567000
EXITADDR EQU   AMDPRTAB+472                                             00568000
EXITNM   EQU   AMDPRTAB+464                                             00569000
RECDLL   EQU   AMDPRTAB+461                                             00570000
@NM00001 EQU   GENFLGS1                                                 00571000
FIRSTHSW EQU   GENFLGS1                                                 00572000
TSFOUND  EQU   GENFLGS1                                                 00573000
EOFINPRO EQU   GENFLGS1                                                 00574000
TS       EQU   GENFLGS1                                                 00575000
EOF      EQU   GENFLAGS                                                 00576000
RR       EQU   GENFLAGS                                                 00577000
SRM      EQU   GENFLAGS                                                 00578000
RNIO     EQU   GENFLAGS                                                 00579000
SYSM     EQU   GENFLAGS                                                 00580000
DSP      EQU   GENFLAGS                                                 00581000
PICODEA  EQU   PGMNGEN+2                                                00582000
PICODES  EQU   PGMNGEN                                                  00583000
Q        EQU   PI+1                                                     00584000
P01R     EQU   PIFLGS                                                   00585000
SELP     EQU   PIFLGS                                                   00586000
ALLP     EQU   PIFLGS                                                   00587000
USRNGTAB EQU   USRTAB                                                   00588000
O        EQU   USR+1                                                    00589000
N01R     EQU   USRFLGS                                                  00590000
SELU     EQU   USRFLGS                                                  00591000
ALLU     EQU   USRFLGS                                                  00592000
SVCNUMS  EQU   AMDPRTAB+336                                             00593000
M        EQU   VCF+1                                                    00594000
L        EQU   SVCFLGS                                                  00595000
SELV     EQU   SVCFLGS                                                  00596000
ALLV     EQU   SVCFLGS                                                  00597000
IODVADS  EQU   DVADS2                                                   00598000
K01RES   EQU   IO+1                                                     00599000
JJ       EQU   IOFLGS2                                                  00600000
SELI     EQU   IOFLGS2                                                  00601000
ALLI     EQU   IOFLGS2                                                  00602000
SIODVADS EQU   DVADS1                                                   00603000
II       EQU   SIF+1                                                    00604000
H        EQU   SIOFLGS                                                  00605000
NOEQU    EQU   SIOFLGS                                                  00606000
EQUIV    EQU   SIOFLGS                                                  00607000
SELS     EQU   SIOFLGS                                                  00608000
ALLS     EQU   SIOFLGS                                                  00609000
ASCBADDR EQU   AADS                                                     00610000
JOBNAMES EQU   NAMES                                                    00611000
DAY2     EQU   STOPTIME+10                                              00612000
F        EQU   STOPTIME+8                                               00613000
TIME2    EQU   STOPTIME                                                 00614000
DAY      EQU   STARTIME+10                                              00615000
D        EQU   STARTIME+8                                               00616000
TIME     EQU   STARTIME                                                 00617000
DDNAME   EQU   AMDPRTAB+32                                              00618000
USEREXIT EQU   AMDPRTAB+24                                              00619000
GTFWDPTR EQU   AMDPRTAB+20                                              00620000
C        EQU   DEBGFLGS+4                                               00621000
B        EQU   IOFLGS                                                   00622000
GETEOF   EQU   IOFLGS                                                   00623000
DMDFMT   EQU   INRFCFGS                                                 00624000
EDITSTOP EQU   INRFCFGS                                                 00625000
EXTTRC   EQU   INRFCFGS                                                 00626000
RET      EQU   INRFCFGS                                                 00627000
FMT      EQU   INRFCFGS                                                 00628000
SPIE     EQU   INRFCFGS                                                 00629000
TERM     EQU   INRFCFGS                                                 00630000
FLMODE   EQU   INRFCFGS                                                 00631000
REMAIN   EQU   PTHFLGS2                                                 00632000
APP      EQU   PTHFLGS2                                                 00633000
REXT     EQU   PTHFLGS1                                                 00634000
FRM      EQU   PTHFLGS1                                                 00635000
FLT      EQU   PTHFLGS1                                                 00636000
HEX      EQU   PTHFLGS1                                                 00637000
CON      EQU   PTHFLGS1                                                 00638000
GET      EQU   PTHFLGS1                                                 00639000
SCN      EQU   PTHFLGS1                                                 00640000
ROOT     EQU   PTHFLGS1                                                 00641000
CURREC   EQU   AMDPRTAB+4                                               00642000
AFMG     EQU   AMDPRTAB                                                 00643000
*                                      END UNREFERENCED COMPONENTS      00644000
@RC00036 EQU   @RC00033                                                 00645000
@RC00043 EQU   @RC00040                                                 00646000
@RC00075 EQU   @RC00059                                                 00647000
@RC00070 EQU   @RC00059                                                 00648000
@ENDDATA EQU   *                                                        00649000
         END   AMDSYS05                                                 00650000
